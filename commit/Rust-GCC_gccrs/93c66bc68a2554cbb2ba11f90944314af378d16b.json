{"sha": "93c66bc68a2554cbb2ba11f90944314af378d16b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTNjNjZiYzY4YTI1NTRjYmIyYmExMWY5MDk0NDMxNGFmMzc4ZDE2Yg==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2011-08-07T07:27:06Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2011-08-07T07:27:06Z"}, "message": "user.cfg.in (PDF_HYPERLINKS): To NO.\n\n2011-08-06  Benjamin Kosnik  <bkoz@redhat.com>\n\n\t* doc/doxygen/user.cfg.in (PDF_HYPERLINKS): To NO.\n\n2011-08-06  Benjamin Kosnik  <bkoz@redhat.com>\n\n\t* doc/doxygen/user.cfg.in: Add scoped_allocator.\n\n\t* include/debug/safe_sequence.h: Fix doxygen markup.\n\t* include/debug/safe_unordered_base.h: Same.\n\t* include/debug/safe_local_iterator.tcc: Same.\n\t* include/debug/safe_unordered_container.h: Same.\n\t* include/std/valarray: Same.\n\t* include/std/iomanip: Same.\n\t* include/std/streambuf: Same.\n\t* include/std/bitset: Same.\n\t* include/std/fstream: Same.\n\t* include/std/functional: Same.\n\t* include/std/istream: Same.\n\t* include/std/ostream: Same.\n\t* include/std/scoped_allocator: Same.\n\t* include/std/sstream: Same.\n\t* include/parallel/multiway_merge.h: Same.\n\t* include/parallel/base.h: Same.\n\t* include/parallel/for_each_selectors.h: Same.\n\t* include/parallel/multiway_mergesort.h: Same.\n\t* include/parallel/search.h: Same.\n\t* include/parallel/partial_sum.h: Same.\n\t* include/parallel/queue.h: Same.\n\t* include/parallel/sort.h: Same.\n\t* include/parallel/random_number.h: Same.\n\t* include/ext/vstring.h: Same.\n\t* include/ext/algorithm: Same.\n\t* include/ext/pb_ds/assoc_container.h: Same.\n\t* include/ext/bitmap_allocator.h: Same.\n\t* include/ext/stdio_filebuf.h: Same.\n\t* include/ext/memory: Same.\n\t* include/ext/functional: Same.\n\t* include/bits/basic_ios.h: Same.\n\t* include/bits/stl_list.h: Same.\n\t* include/bits/stl_map.h: Same.\n\t* include/bits/stl_algobase.h: Same.\n\t* include/bits/stl_queue.h: Same.\n\t* include/bits/gslice.h: Same.\n\t* include/bits/locale_classes.h: Same.\n\t* include/bits/stl_set.h: Same.\n\t* include/bits/locale_facets.h: Same.\n\t* include/bits/stl_stack.h: Same.\n\t* include/bits/stl_heap.h: Same.\n\t* include/bits/forward_list.h: Same.\n\t* include/bits/stream_iterator.h: Same.\n\t* include/bits/basic_string.h: Same.\n\t* include/bits/stl_multimap.h: Same.\n\t* include/bits/stl_pair.h: Same.\n\t* include/bits/ios_base.h: Same.\n\t* include/bits/stl_numeric.h: Same.\n\t* include/bits/stl_vector.h: Same.\n\t* include/bits/stl_deque.h: Same.\n\t* include/bits/codecvt.h: Same.\n\t* include/bits/stl_multiset.h: Same.\n\t* include/bits/stl_uninitialized.h: Same.\n\t* include/bits/ptr_traits.h: Same.\n\t* include/bits/slice_array.h: Same.\n\t* include/bits/stl_iterator_base_funcs.h: Same.\n\t* include/bits/stl_algo.h: Same.\n\t* include/bits/stl_iterator.h: Same.\n\t* include/bits/stl_tempbuf.h: Same.\n\t* include/bits/regex.h: Same.\n\t* include/bits/range_access.h: Same.\n\t* include/bits/random.h: Same.\n\t* include/bits/alloc_traits.h: Same.\n\t* include/bits/regex_error.h: Same.\n\t* include/bits/locale_facets_nonio.h: Same.\n\t* include/bits/stl_relops.h: Same.\n\t* include/backward/auto_ptr.h: Same.\n\t* libsupc++/initializer_list: Same.\n\n\t* testsuite/23_containers/list/requirements/dr438/assign_neg.cc:\n\tAdjust line numbers.\n\t* testsuite/23_containers/list/requirements/dr438/insert_neg.cc: Same.\n\t* testsuite/23_containers/list/requirements/dr438/constructor_1_neg.cc:\n\tSame.\n\t* testsuite/23_containers/list/requirements/dr438/constructor_2_neg.cc:\n\tSame.\n\nFrom-SVN: r177542", "tree": {"sha": "45eb6d5a21849a3b8684ed93cfe2f669d22f0ca5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/45eb6d5a21849a3b8684ed93cfe2f669d22f0ca5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/93c66bc68a2554cbb2ba11f90944314af378d16b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/93c66bc68a2554cbb2ba11f90944314af378d16b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/93c66bc68a2554cbb2ba11f90944314af378d16b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/93c66bc68a2554cbb2ba11f90944314af378d16b/comments", "author": null, "committer": null, "parents": [{"sha": "77d2c8b34ff4b7a347251879180bfb282225636a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77d2c8b34ff4b7a347251879180bfb282225636a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/77d2c8b34ff4b7a347251879180bfb282225636a"}], "stats": {"total": 7398, "additions": 3786, "deletions": 3612}, "files": [{"sha": "0e763584881dbbcda489a12b810cc18931076926", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 85, "deletions": 0, "changes": 85, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=93c66bc68a2554cbb2ba11f90944314af378d16b", "patch": "@@ -1,3 +1,88 @@\n+2011-08-06  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\t* doc/doxygen/user.cfg.in (PDF_HYPERLINKS): To NO.\n+\n+2011-08-06  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\t* doc/doxygen/user.cfg.in: Add scoped_allocator.\n+\n+\t* include/debug/safe_sequence.h: Fix doxygen markup.\n+\t* include/debug/safe_unordered_base.h: Same.\n+\t* include/debug/safe_local_iterator.tcc: Same.\n+\t* include/debug/safe_unordered_container.h: Same.\n+\t* include/std/valarray: Same.\n+\t* include/std/iomanip: Same.\n+\t* include/std/streambuf: Same.\n+\t* include/std/bitset: Same.\n+\t* include/std/fstream: Same.\n+\t* include/std/functional: Same.\n+\t* include/std/istream: Same.\n+\t* include/std/ostream: Same.\n+\t* include/std/scoped_allocator: Same.\n+\t* include/std/sstream: Same.\n+\t* include/parallel/multiway_merge.h: Same.\n+\t* include/parallel/base.h: Same.\n+\t* include/parallel/for_each_selectors.h: Same.\n+\t* include/parallel/multiway_mergesort.h: Same.\n+\t* include/parallel/search.h: Same.\n+\t* include/parallel/partial_sum.h: Same.\n+\t* include/parallel/queue.h: Same.\n+\t* include/parallel/sort.h: Same.\n+\t* include/parallel/random_number.h: Same.\n+\t* include/ext/vstring.h: Same.\n+\t* include/ext/algorithm: Same.\n+\t* include/ext/pb_ds/assoc_container.h: Same.\n+\t* include/ext/bitmap_allocator.h: Same.\n+\t* include/ext/stdio_filebuf.h: Same.\n+\t* include/ext/memory: Same.\n+\t* include/ext/functional: Same.\n+\t* include/bits/basic_ios.h: Same.\n+\t* include/bits/stl_list.h: Same.\n+\t* include/bits/stl_map.h: Same.\n+\t* include/bits/stl_algobase.h: Same.\n+\t* include/bits/stl_queue.h: Same.\n+\t* include/bits/gslice.h: Same.\n+\t* include/bits/locale_classes.h: Same.\n+\t* include/bits/stl_set.h: Same.\n+\t* include/bits/locale_facets.h: Same.\n+\t* include/bits/stl_stack.h: Same.\n+\t* include/bits/stl_heap.h: Same.\n+\t* include/bits/forward_list.h: Same.\n+\t* include/bits/stream_iterator.h: Same.\n+\t* include/bits/basic_string.h: Same.\n+\t* include/bits/stl_multimap.h: Same.\n+\t* include/bits/stl_pair.h: Same.\n+\t* include/bits/ios_base.h: Same.\n+\t* include/bits/stl_numeric.h: Same.\n+\t* include/bits/stl_vector.h: Same.\n+\t* include/bits/stl_deque.h: Same.\n+\t* include/bits/codecvt.h: Same.\n+\t* include/bits/stl_multiset.h: Same.\n+\t* include/bits/stl_uninitialized.h: Same.\n+\t* include/bits/ptr_traits.h: Same.\n+\t* include/bits/slice_array.h: Same.\n+\t* include/bits/stl_iterator_base_funcs.h: Same.\n+\t* include/bits/stl_algo.h: Same.\n+\t* include/bits/stl_iterator.h: Same.\n+\t* include/bits/stl_tempbuf.h: Same.\n+\t* include/bits/regex.h: Same.\n+\t* include/bits/range_access.h: Same.\n+\t* include/bits/random.h: Same.\n+\t* include/bits/alloc_traits.h: Same.\n+\t* include/bits/regex_error.h: Same.\n+\t* include/bits/locale_facets_nonio.h: Same.\n+\t* include/bits/stl_relops.h: Same.\n+\t* include/backward/auto_ptr.h: Same.\n+\t* libsupc++/initializer_list: Same.\n+\n+\t* testsuite/23_containers/list/requirements/dr438/assign_neg.cc:\n+\tAdjust line numbers.\n+\t* testsuite/23_containers/list/requirements/dr438/insert_neg.cc: Same.\n+\t* testsuite/23_containers/list/requirements/dr438/constructor_1_neg.cc:\n+\tSame.\n+\t* testsuite/23_containers/list/requirements/dr438/constructor_2_neg.cc:\n+\tSame.\n+\n 2011-08-05  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \t* acinclude.m4 (GLIBCXX_EXPORT_INCLUDES): Point TOPLEVEL_INCLUDES"}, {"sha": "def0406575194db526399f56930076ddac991fc2", "filename": "libstdc++-v3/doc/doxygen/user.cfg.in", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Fdoc%2Fdoxygen%2Fuser.cfg.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Fdoc%2Fdoxygen%2Fuser.cfg.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fdoxygen%2Fuser.cfg.in?ref=93c66bc68a2554cbb2ba11f90944314af378d16b", "patch": "@@ -648,6 +648,7 @@ INPUT                  = @srcdir@/doc/doxygen/doxygroups.cc \\\n \t\t\t include/random \\\n \t\t\t include/ratio \\\n \t\t\t include/regex \\\n+\t\t\t include/scoped_allocator \\\n \t\t\t include/set \\\n \t\t\t include/sstream \\\n \t\t\t include/stack \\\n@@ -1384,7 +1385,7 @@ LATEX_FOOTER           =\n # contain links (just like the HTML output) instead of page references\n # This makes the output suitable for online browsing using a pdf viewer.\n \n-PDF_HYPERLINKS         = YES\n+PDF_HYPERLINKS         = NO\n \n # If the USE_PDFLATEX tag is set to YES, pdflatex will be used instead of\n # plain latex in the generated Makefile. Set this option to YES to get a"}, {"sha": "3c91c08139efa0916d6aea513814964245bf613e", "filename": "libstdc++-v3/include/backward/auto_ptr.h", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Finclude%2Fbackward%2Fauto_ptr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Finclude%2Fbackward%2Fauto_ptr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbackward%2Fauto_ptr.h?ref=93c66bc68a2554cbb2ba11f90944314af378d16b", "patch": "@@ -95,40 +95,40 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       \n       /**\n        *  @brief  An %auto_ptr is usually constructed from a raw pointer.\n-       *  @param  p  A pointer (defaults to NULL).\n+       *  @param  __p  A pointer (defaults to NULL).\n        *\n-       *  This object now @e owns the object pointed to by @a p.\n+       *  This object now @e owns the object pointed to by @a __p.\n        */\n       explicit\n       auto_ptr(element_type* __p = 0) throw() : _M_ptr(__p) { }\n \n       /**\n        *  @brief  An %auto_ptr can be constructed from another %auto_ptr.\n-       *  @param  a  Another %auto_ptr of the same type.\n+       *  @param  __a  Another %auto_ptr of the same type.\n        *\n-       *  This object now @e owns the object previously owned by @a a,\n+       *  This object now @e owns the object previously owned by @a __a,\n        *  which has given up ownership.\n        */\n       auto_ptr(auto_ptr& __a) throw() : _M_ptr(__a.release()) { }\n \n       /**\n        *  @brief  An %auto_ptr can be constructed from another %auto_ptr.\n-       *  @param  a  Another %auto_ptr of a different but related type.\n+       *  @param  __a  Another %auto_ptr of a different but related type.\n        *\n        *  A pointer-to-Tp1 must be convertible to a\n        *  pointer-to-Tp/element_type.\n        *\n-       *  This object now @e owns the object previously owned by @a a,\n+       *  This object now @e owns the object previously owned by @a __a,\n        *  which has given up ownership.\n        */\n       template<typename _Tp1>\n         auto_ptr(auto_ptr<_Tp1>& __a) throw() : _M_ptr(__a.release()) { }\n \n       /**\n        *  @brief  %auto_ptr assignment operator.\n-       *  @param  a  Another %auto_ptr of the same type.\n+       *  @param  __a  Another %auto_ptr of the same type.\n        *\n-       *  This object now @e owns the object previously owned by @a a,\n+       *  This object now @e owns the object previously owned by @a __a,\n        *  which has given up ownership.  The object that this one @e\n        *  used to own and track has been deleted.\n        */\n@@ -141,11 +141,11 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       /**\n        *  @brief  %auto_ptr assignment operator.\n-       *  @param  a  Another %auto_ptr of a different but related type.\n+       *  @param  __a  Another %auto_ptr of a different but related type.\n        *\n        *  A pointer-to-Tp1 must be convertible to a pointer-to-Tp/element_type.\n        *\n-       *  This object now @e owns the object previously owned by @a a,\n+       *  This object now @e owns the object previously owned by @a __a,\n        *  which has given up ownership.  The object that this one @e\n        *  used to own and track has been deleted.\n        */\n@@ -231,9 +231,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       \n       /**\n        *  @brief  Forcibly deletes the managed object.\n-       *  @param  p  A pointer (defaults to NULL).\n+       *  @param  __p  A pointer (defaults to NULL).\n        *\n-       *  This object now @e owns the object pointed to by @a p.  The\n+       *  This object now @e owns the object pointed to by @a __p.  The\n        *  previous object has been deleted.\n        */\n       void"}, {"sha": "d8fd0d6a71279e11073324934211386beb024f86", "filename": "libstdc++-v3/include/bits/alloc_traits.h", "status": "modified", "additions": 32, "deletions": 27, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Finclude%2Fbits%2Falloc_traits.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Finclude%2Fbits%2Falloc_traits.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Falloc_traits.h?ref=93c66bc68a2554cbb2ba11f90944314af378d16b", "patch": "@@ -22,6 +22,11 @@\n // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n // <http://www.gnu.org/licenses/>.\n \n+/** @file bits/alloc_traits.h\n+ *  This is an internal header file, included by other library headers.\n+ *  Do not attempt to use it directly. @headername{scoped_allocator}\n+ */\n+\n #ifndef _ALLOC_TRAITS_H\n #define _ALLOC_TRAITS_H 1\n \n@@ -346,8 +351,8 @@ _GLIBCXX_ALLOC_TR_NESTED_TYPE(propagate_on_container_swap,\n \n       /**\n        *  @brief  Allocate memory.\n-       *  @param  a  An allocator.\n-       *  @param  n  The number of objects to allocate space for.\n+       *  @param  __a  An allocator.\n+       *  @param  __n  The number of objects to allocate space for.\n        *\n        *  Calls @c a.allocate(n)\n       */\n@@ -357,9 +362,9 @@ _GLIBCXX_ALLOC_TR_NESTED_TYPE(propagate_on_container_swap,\n \n       /**\n        *  @brief  Allocate memory.\n-       *  @param  a  An allocator.\n-       *  @param  n  The number of objects to allocate space for.\n-       *  @param  hint Aid to locality.\n+       *  @param  __a  An allocator.\n+       *  @param  __n  The number of objects to allocate space for.\n+       *  @param  __hint Aid to locality.\n        *  @return Memory of suitable size and alignment for @a n objects\n        *          of type @c value_type\n        *\n@@ -372,60 +377,60 @@ _GLIBCXX_ALLOC_TR_NESTED_TYPE(propagate_on_container_swap,\n \n       /**\n        *  @brief  Deallocate memory.\n-       *  @param  a  An allocator.\n-       *  @param  p  Pointer to the memory to deallocate.\n-       *  @param  n  The number of objects space was allocated for.\n+       *  @param  __a  An allocator.\n+       *  @param  __p  Pointer to the memory to deallocate.\n+       *  @param  __n  The number of objects space was allocated for.\n        *\n        *  Calls <tt> a.deallocate(p, n) </tt>\n       */\n       static void deallocate(_Alloc& __a, pointer __p, size_type __n)\n       { __a.deallocate(__p, __n); }\n \n       /**\n-       *  @brief  Construct an object of type @a Tp\n-       *  @param  a  An allocator.\n-       *  @param  p  Pointer to memory of suitable size and alignment for Tp\n-       *  @param  args Constructor arguments.\n+       *  @brief  Construct an object of type @a _Tp\n+       *  @param  __a  An allocator.\n+       *  @param  __p  Pointer to memory of suitable size and alignment for Tp\n+       *  @param  __args Constructor arguments.\n        *\n-       *  Calls <tt> a.construct(p, std::forward<Args>(args)...) </tt>\n+       *  Calls <tt> __a.construct(__p, std::forward<Args>(__args)...) </tt>\n        *  if that expression is well-formed, otherwise uses placement-new\n-       *  to construct an object of type @a Tp at location @a p from the\n-       *  arguments @a args...\n+       *  to construct an object of type @a _Tp at location @a __p from the\n+       *  arguments @a __args...\n       */\n       template<typename _Tp, typename... _Args>\n \tstatic void construct(_Alloc& __a, _Tp* __p, _Args&&... __args)\n \t{ _S_construct(__a, __p, std::forward<_Args>(__args)...); }\n \n       /**\n-       *  @brief  Destroy an object of type @a Tp\n-       *  @param  a  An allocator.\n-       *  @param  p  Pointer to the object to destroy\n+       *  @brief  Destroy an object of type @a _Tp\n+       *  @param  __a  An allocator.\n+       *  @param  __p  Pointer to the object to destroy\n        *\n-       *  Calls @c a.destroy(p) if that expression is well-formed,\n-       *  otherwise calls @c p->~Tp()\n+       *  Calls @c __a.destroy(__p) if that expression is well-formed,\n+       *  otherwise calls @c __p->~_Tp()\n       */\n       template <class _Tp>\n \tstatic void destroy(_Alloc& __a, _Tp* __p)\n \t{ _S_destroy(__a, __p); }\n \n       /**\n        *  @brief  The maximum supported allocation size\n-       *  @param  a  An allocator.\n-       *  @return @c a.max_size() or @c numeric_limits<size_type>::max()\n+       *  @param  __a  An allocator.\n+       *  @return @c __a.max_size() or @c numeric_limits<size_type>::max()\n        *\n-       *  Returns @c a.max_size() if that expression is well-formed,\n+       *  Returns @c __a.max_size() if that expression is well-formed,\n        *  otherwise returns @c numeric_limits<size_type>::max()\n       */\n       static size_type max_size(const _Alloc& __a)\n       { return _S_max_size(__a); }\n \n       /**\n        *  @brief  Obtain an allocator to use when copying a container.\n-       *  @param  rhs  An allocator.\n-       *  @return @c rhs.select_on_container_copy_construction() or @a rhs\n+       *  @param  __rhs  An allocator.\n+       *  @return @c __rhs.select_on_container_copy_construction() or @a __rhs\n        *\n-       *  Returns @c rhs.select_on_container_copy_construction() if that\n-       *  expression is well-formed, otherwise returns @a rhs\n+       *  Returns @c __rhs.select_on_container_copy_construction() if that\n+       *  expression is well-formed, otherwise returns @a __rhs\n       */\n       static _Alloc\n       select_on_container_copy_construction(const _Alloc& __rhs)"}, {"sha": "24c3ca499afa3bf304e7700a9cab80323de86552", "filename": "libstdc++-v3/include/bits/basic_ios.h", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_ios.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_ios.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_ios.h?ref=93c66bc68a2554cbb2ba11f90944314af378d16b", "patch": "@@ -131,7 +131,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       /**\n        *  @brief  [Re]sets the error state.\n-       *  @param  state  The new state flag(s) to set.\n+       *  @param  __state  The new state flag(s) to set.\n        *\n        *  See std::ios_base::iostate for the possible bit values.  Most\n        *  users will not need to pass an argument.\n@@ -141,7 +141,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       /**\n        *  @brief  Sets additional flags in the error state.\n-       *  @param  state  The additional state flag(s) to set.\n+       *  @param  __state  The additional state flag(s) to set.\n        *\n        *  See std::ios_base::iostate for the possible bit values.\n       */\n@@ -216,7 +216,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       /**\n        *  @brief  Throwing exceptions on errors.\n-       *  @param  except  The new exceptions mask.\n+       *  @param  __except  The new exceptions mask.\n        *\n        *  By default, error flags are set silently.  You can set an\n        *  exceptions mask for each stream; if a bit in the mask becomes set\n@@ -289,7 +289,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       /**\n        *  @brief  Ties this stream to an output stream.\n-       *  @param  tiestr  The output stream.\n+       *  @param  __tiestr  The output stream.\n        *  @return  The previously tied output stream, or NULL if the stream\n        *           was not tied.\n        *\n@@ -315,7 +315,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       /**\n        *  @brief  Changing the underlying buffer.\n-       *  @param  sb  The new stream buffer.\n+       *  @param  __sb  The new stream buffer.\n        *  @return  The previous stream buffer.\n        *\n        *  Associates a new buffer with the current stream, and clears the\n@@ -371,7 +371,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       /**\n        *  @brief  Sets a new @a empty character.\n-       *  @param  ch  The new character.\n+       *  @param  __ch  The new character.\n        *  @return  The previous fill character.\n        *\n        *  The fill character is used to fill out space when P+ characters\n@@ -389,7 +389,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       // Locales:\n       /**\n        *  @brief  Moves to a new locale.\n-       *  @param  loc  The new locale.\n+       *  @param  __loc  The new locale.\n        *  @return  The previous locale.\n        *\n        *  Calls @c ios_base::imbue(loc), and if a stream buffer is associated\n@@ -403,8 +403,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       /**\n        *  @brief  Squeezes characters.\n-       *  @param  c  The character to narrow.\n-       *  @param  dfault  The character to narrow.\n+       *  @param  __c  The character to narrow.\n+       *  @param  __dfault  The character to narrow.\n        *  @return  The narrowed character.\n        *\n        *  Maps a character of @c char_type to a character of @c char,\n@@ -424,7 +424,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       /**\n        *  @brief  Widens characters.\n-       *  @param  c  The character to widen.\n+       *  @param  __c  The character to widen.\n        *  @return  The widened character.\n        *\n        *  Maps a character of @c char to a character of @c char_type."}, {"sha": "55513ea910f35de6e6da5564283be0686482c528", "filename": "libstdc++-v3/include/bits/basic_string.h", "status": "modified", "additions": 581, "deletions": 547, "changes": 1128, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_string.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_string.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_string.h?ref=93c66bc68a2554cbb2ba11f90944314af378d16b", "patch": "@@ -445,59 +445,59 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       // NB: per LWG issue 42, semantics different from IS:\n       /**\n        *  @brief  Construct string with copy of value of @a str.\n-       *  @param  str  Source string.\n+       *  @param  __str  Source string.\n        */\n       basic_string(const basic_string& __str);\n       /**\n        *  @brief  Construct string as copy of a substring.\n-       *  @param  str  Source string.\n-       *  @param  pos  Index of first character to copy from.\n-       *  @param  n  Number of characters to copy (default remainder).\n+       *  @param  __str  Source string.\n+       *  @param  __pos  Index of first character to copy from.\n+       *  @param  __n  Number of characters to copy (default remainder).\n        */\n       basic_string(const basic_string& __str, size_type __pos,\n \t\t   size_type __n = npos);\n       /**\n        *  @brief  Construct string as copy of a substring.\n-       *  @param  str  Source string.\n-       *  @param  pos  Index of first character to copy from.\n-       *  @param  n  Number of characters to copy.\n-       *  @param  a  Allocator to use.\n+       *  @param  __str  Source string.\n+       *  @param  __pos  Index of first character to copy from.\n+       *  @param  __n  Number of characters to copy.\n+       *  @param  __a  Allocator to use.\n        */\n       basic_string(const basic_string& __str, size_type __pos,\n \t\t   size_type __n, const _Alloc& __a);\n \n       /**\n        *  @brief  Construct string initialized by a character %array.\n-       *  @param  s  Source character %array.\n-       *  @param  n  Number of characters to copy.\n-       *  @param  a  Allocator to use (default is default allocator).\n+       *  @param  __s  Source character %array.\n+       *  @param  __n  Number of characters to copy.\n+       *  @param  __a  Allocator to use (default is default allocator).\n        *\n-       *  NB: @a s must have at least @a n characters, &apos;\\\\0&apos;\n+       *  NB: @a __s must have at least @a __n characters, &apos;\\\\0&apos;\n        *  has no special meaning.\n        */\n       basic_string(const _CharT* __s, size_type __n,\n \t\t   const _Alloc& __a = _Alloc());\n       /**\n        *  @brief  Construct string as copy of a C string.\n-       *  @param  s  Source C string.\n-       *  @param  a  Allocator to use (default is default allocator).\n+       *  @param  __s  Source C string.\n+       *  @param  __a  Allocator to use (default is default allocator).\n        */\n       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc());\n       /**\n        *  @brief  Construct string as multiple characters.\n-       *  @param  n  Number of characters.\n-       *  @param  c  Character to use.\n-       *  @param  a  Allocator to use (default is default allocator).\n+       *  @param  __n  Number of characters.\n+       *  @param  __c  Character to use.\n+       *  @param  __a  Allocator to use (default is default allocator).\n        */\n       basic_string(size_type __n, _CharT __c, const _Alloc& __a = _Alloc());\n \n #ifdef __GXX_EXPERIMENTAL_CXX0X__\n       /**\n        *  @brief  Move construct string.\n-       *  @param  str  Source string.\n+       *  @param  __str  Source string.\n        *\n-       *  The newly-created string contains the exact contents of @a str.\n-       *  @a str is a valid, but unspecified string.\n+       *  The newly-created string contains the exact contents of @a __str.\n+       *  @a __str is a valid, but unspecified string.\n        **/\n       basic_string(basic_string&& __str) noexcept\n       : _M_dataplus(__str._M_dataplus)\n@@ -511,17 +511,17 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       /**\n        *  @brief  Construct string from an initializer %list.\n-       *  @param  l  std::initializer_list of characters.\n-       *  @param  a  Allocator to use (default is default allocator).\n+       *  @param  __l  std::initializer_list of characters.\n+       *  @param  __a  Allocator to use (default is default allocator).\n        */\n       basic_string(initializer_list<_CharT> __l, const _Alloc& __a = _Alloc());\n #endif // __GXX_EXPERIMENTAL_CXX0X__\n \n       /**\n        *  @brief  Construct string as copy of a range.\n-       *  @param  beg  Start of range.\n-       *  @param  end  End of range.\n-       *  @param  a  Allocator to use (default is default allocator).\n+       *  @param  __beg  Start of range.\n+       *  @param  __end  End of range.\n+       *  @param  __a  Allocator to use (default is default allocator).\n        */\n       template<class _InputIterator>\n         basic_string(_InputIterator __beg, _InputIterator __end,\n@@ -535,23 +535,23 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       /**\n        *  @brief  Assign the value of @a str to this string.\n-       *  @param  str  Source string.\n+       *  @param  __str  Source string.\n        */\n       basic_string&\n       operator=(const basic_string& __str) \n       { return this->assign(__str); }\n \n       /**\n        *  @brief  Copy contents of @a s into this string.\n-       *  @param  s  Source null-terminated string.\n+       *  @param  __s  Source null-terminated string.\n        */\n       basic_string&\n       operator=(const _CharT* __s) \n       { return this->assign(__s); }\n \n       /**\n        *  @brief  Set value to string of length 1.\n-       *  @param  c  Source character.\n+       *  @param  __c  Source character.\n        *\n        *  Assigning to a character makes this string length 1 and\n        *  (*this)[0] == @a c.\n@@ -566,7 +566,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n #ifdef __GXX_EXPERIMENTAL_CXX0X__\n       /**\n        *  @brief  Move assign the value of @a str to this string.\n-       *  @param  str  Source string.\n+       *  @param  __str  Source string.\n        *\n        *  The contents of @a str are moved into this string (without copying).\n        *  @a str is a valid, but unspecified string.\n@@ -581,7 +581,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       /**\n        *  @brief  Set value to string constructed from initializer %list.\n-       *  @param  l  std::initializer_list.\n+       *  @param  __l  std::initializer_list.\n        */\n       basic_string&\n       operator=(initializer_list<_CharT> __l)\n@@ -723,20 +723,20 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       /**\n        *  @brief  Resizes the %string to the specified number of characters.\n-       *  @param  n  Number of characters the %string should contain.\n-       *  @param  c  Character to fill any new elements.\n+       *  @param  __n  Number of characters the %string should contain.\n+       *  @param  __c  Character to fill any new elements.\n        *\n        *  This function will %resize the %string to the specified\n        *  number of characters.  If the number is smaller than the\n        *  %string's current size the %string is truncated, otherwise\n-       *  the %string is extended and new elements are %set to @a c.\n+       *  the %string is extended and new elements are %set to @a __c.\n        */\n       void\n       resize(size_type __n, _CharT __c);\n \n       /**\n        *  @brief  Resizes the %string to the specified number of characters.\n-       *  @param  n  Number of characters the %string should contain.\n+       *  @param  __n  Number of characters the %string should contain.\n        *\n        *  This function will resize the %string to the specified length.  If\n        *  the new size is smaller than the %string's current size the %string\n@@ -774,8 +774,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       /**\n        *  @brief  Attempt to preallocate enough memory for specified number of\n        *          characters.\n-       *  @param  res_arg  Number of characters required.\n-       *  @throw  std::length_error  If @a res_arg exceeds @c max_size().\n+       *  @param  __res_arg  Number of characters required.\n+       *  @throw  std::length_error  If @a __res_arg exceeds @c max_size().\n        *\n        *  This function attempts to reserve enough memory for the\n        *  %string to hold the specified number of characters.  If the\n@@ -809,7 +809,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       // Element access:\n       /**\n        *  @brief  Subscript access to the data contained in the %string.\n-       *  @param  pos  The index of the character to access.\n+       *  @param  __pos  The index of the character to access.\n        *  @return  Read-only (constant) reference to the character.\n        *\n        *  This operator allows for easy, array-style, data access.\n@@ -826,7 +826,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       /**\n        *  @brief  Subscript access to the data contained in the %string.\n-       *  @param  pos  The index of the character to access.\n+       *  @param  __pos  The index of the character to access.\n        *  @return  Read/write reference to the character.\n        *\n        *  This operator allows for easy, array-style, data access.\n@@ -847,7 +847,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       /**\n        *  @brief  Provides access to the data contained in the %string.\n-       *  @param n The index of the character to access.\n+       *  @param __n The index of the character to access.\n        *  @return  Read-only (const) reference to the character.\n        *  @throw  std::out_of_range  If @a n is an invalid index.\n        *\n@@ -899,7 +899,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       /**\n        *  @brief  Provides access to the data contained in the %string.\n-       *  @param n The index of the character to access.\n+       *  @param __n The index of the character to access.\n        *  @return  Read/write reference to the character.\n        *  @throw  std::out_of_range  If @a n is an invalid index.\n        *\n@@ -920,7 +920,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       // Modifiers:\n       /**\n        *  @brief  Append a string to this string.\n-       *  @param str  The string to append.\n+       *  @param __str  The string to append.\n        *  @return  Reference to this string.\n        */\n       basic_string&\n@@ -929,7 +929,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       /**\n        *  @brief  Append a C string.\n-       *  @param s  The C string to append.\n+       *  @param __s  The C string to append.\n        *  @return  Reference to this string.\n        */\n       basic_string&\n@@ -938,7 +938,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       /**\n        *  @brief  Append a character.\n-       *  @param c  The character to append.\n+       *  @param __c  The character to append.\n        *  @return  Reference to this string.\n        */\n       basic_string&\n@@ -951,7 +951,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n #ifdef __GXX_EXPERIMENTAL_CXX0X__\n       /**\n        *  @brief  Append an initializer_list of characters.\n-       *  @param l  The initializer_list of characters to be appended.\n+       *  @param __l  The initializer_list of characters to be appended.\n        *  @return  Reference to this string.\n        */\n       basic_string&\n@@ -961,39 +961,40 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       /**\n        *  @brief  Append a string to this string.\n-       *  @param str  The string to append.\n+       *  @param __str  The string to append.\n        *  @return  Reference to this string.\n        */\n       basic_string&\n       append(const basic_string& __str);\n \n       /**\n        *  @brief  Append a substring.\n-       *  @param str  The string to append.\n-       *  @param pos  Index of the first character of str to append.\n-       *  @param n  The number of characters to append.\n+       *  @param __str  The string to append.\n+       *  @param __pos  Index of the first character of str to append.\n+       *  @param __n  The number of characters to append.\n        *  @return  Reference to this string.\n-       *  @throw  std::out_of_range if @a pos is not a valid index.\n+       *  @throw  std::out_of_range if @a __pos is not a valid index.\n        *\n-       *  This function appends @a n characters from @a str starting at @a pos\n-       *  to this string.  If @a n is is larger than the number of available\n-       *  characters in @a str, the remainder of @a str is appended.\n+       *  This function appends @a __n characters from @a __str\n+       *  starting at @a __pos to this string.  If @a __n is is larger\n+       *  than the number of available characters in @a __str, the\n+       *  remainder of @a __str is appended.\n        */\n       basic_string&\n       append(const basic_string& __str, size_type __pos, size_type __n);\n \n       /**\n        *  @brief  Append a C substring.\n-       *  @param s  The C string to append.\n-       *  @param n  The number of characters to append.\n+       *  @param __s  The C string to append.\n+       *  @param __n  The number of characters to append.\n        *  @return  Reference to this string.\n        */\n       basic_string&\n       append(const _CharT* __s, size_type __n);\n \n       /**\n        *  @brief  Append a C string.\n-       *  @param s  The C string to append.\n+       *  @param __s  The C string to append.\n        *  @return  Reference to this string.\n        */\n       basic_string&\n@@ -1005,19 +1006,19 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       /**\n        *  @brief  Append multiple characters.\n-       *  @param n  The number of characters to append.\n-       *  @param c  The character to use.\n+       *  @param __n  The number of characters to append.\n+       *  @param __c  The character to use.\n        *  @return  Reference to this string.\n        *\n-       *  Appends n copies of c to this string.\n+       *  Appends __n copies of __c to this string.\n        */\n       basic_string&\n       append(size_type __n, _CharT __c);\n \n #ifdef __GXX_EXPERIMENTAL_CXX0X__\n       /**\n        *  @brief  Append an initializer_list of characters.\n-       *  @param l  The initializer_list of characters to append.\n+       *  @param __l  The initializer_list of characters to append.\n        *  @return  Reference to this string.\n        */\n       basic_string&\n@@ -1027,11 +1028,11 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       /**\n        *  @brief  Append a range of characters.\n-       *  @param first  Iterator referencing the first character to append.\n-       *  @param last  Iterator marking the end of the range.\n+       *  @param __first  Iterator referencing the first character to append.\n+       *  @param __last  Iterator marking the end of the range.\n        *  @return  Reference to this string.\n        *\n-       *  Appends characters in the range [first,last) to this string.\n+       *  Appends characters in the range [__first,__last) to this string.\n        */\n       template<class _InputIterator>\n         basic_string&\n@@ -1040,7 +1041,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       /**\n        *  @brief  Append a single character.\n-       *  @param c  Character to append.\n+       *  @param __c  Character to append.\n        */\n       void\n       push_back(_CharT __c)\n@@ -1054,7 +1055,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       /**\n        *  @brief  Set value to contents of another string.\n-       *  @param  str  Source string to use.\n+       *  @param  __str  Source string to use.\n        *  @return  Reference to this string.\n        */\n       basic_string&\n@@ -1063,11 +1064,11 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n #ifdef __GXX_EXPERIMENTAL_CXX0X__\n       /**\n        *  @brief  Set value to contents of another string.\n-       *  @param  str  Source string to use.\n+       *  @param  __str  Source string to use.\n        *  @return  Reference to this string.\n        *\n-       *  This function sets this string to the exact contents of @a str.\n-       *  @a str is a valid, but unspecified string.\n+       *  This function sets this string to the exact contents of @a __str.\n+       *  @a __str is a valid, but unspecified string.\n        */\n       basic_string&\n       assign(basic_string&& __str)\n@@ -1079,15 +1080,16 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       /**\n        *  @brief  Set value to a substring of a string.\n-       *  @param str  The string to use.\n-       *  @param pos  Index of the first character of str.\n-       *  @param n  Number of characters to use.\n+       *  @param __str  The string to use.\n+       *  @param __pos  Index of the first character of str.\n+       *  @param __n  Number of characters to use.\n        *  @return  Reference to this string.\n        *  @throw  std::out_of_range if @a pos is not a valid index.\n        *\n-       *  This function sets this string to the substring of @a str consisting\n-       *  of @a n characters at @a pos.  If @a n is is larger than the number\n-       *  of available characters in @a str, the remainder of @a str is used.\n+       *  This function sets this string to the substring of @a __str\n+       *  consisting of @a __n characters at @a __pos.  If @a __n is\n+       *  is larger than the number of available characters in @a\n+       *  __str, the remainder of @a __str is used.\n        */\n       basic_string&\n       assign(const basic_string& __str, size_type __pos, size_type __n)\n@@ -1097,24 +1099,24 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       /**\n        *  @brief  Set value to a C substring.\n-       *  @param s  The C string to use.\n-       *  @param n  Number of characters to use.\n+       *  @param __s  The C string to use.\n+       *  @param __n  Number of characters to use.\n        *  @return  Reference to this string.\n        *\n-       *  This function sets the value of this string to the first @a n\n-       *  characters of @a s.  If @a n is is larger than the number of\n-       *  available characters in @a s, the remainder of @a s is used.\n+       *  This function sets the value of this string to the first @a __n\n+       *  characters of @a __s.  If @a __n is is larger than the number of\n+       *  available characters in @a __s, the remainder of @a __s is used.\n        */\n       basic_string&\n       assign(const _CharT* __s, size_type __n);\n \n       /**\n        *  @brief  Set value to contents of a C string.\n-       *  @param s  The C string to use.\n+       *  @param __s  The C string to use.\n        *  @return  Reference to this string.\n        *\n-       *  This function sets the value of this string to the value of @a s.\n-       *  The data is copied, so there is no dependence on @a s once the\n+       *  This function sets the value of this string to the value of @a __s.\n+       *  The data is copied, so there is no dependence on @a __s once the\n        *  function returns.\n        */\n       basic_string&\n@@ -1126,24 +1128,24 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       /**\n        *  @brief  Set value to multiple characters.\n-       *  @param n  Length of the resulting string.\n-       *  @param c  The character to use.\n+       *  @param __n  Length of the resulting string.\n+       *  @param __c  The character to use.\n        *  @return  Reference to this string.\n        *\n-       *  This function sets the value of this string to @a n copies of\n-       *  character @a c.\n+       *  This function sets the value of this string to @a __n copies of\n+       *  character @a __c.\n        */\n       basic_string&\n       assign(size_type __n, _CharT __c)\n       { return _M_replace_aux(size_type(0), this->size(), __n, __c); }\n \n       /**\n        *  @brief  Set value to a range of characters.\n-       *  @param first  Iterator referencing the first character to append.\n-       *  @param last  Iterator marking the end of the range.\n+       *  @param __first  Iterator referencing the first character to append.\n+       *  @param __last  Iterator marking the end of the range.\n        *  @return  Reference to this string.\n        *\n-       *  Sets value of string to characters in the range [first,last).\n+       *  Sets value of string to characters in the range [__first,__last).\n       */\n       template<class _InputIterator>\n         basic_string&\n@@ -1153,7 +1155,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n #ifdef __GXX_EXPERIMENTAL_CXX0X__\n       /**\n        *  @brief  Set value to an initializer_list of characters.\n-       *  @param l  The initializer_list of characters to assign.\n+       *  @param __l  The initializer_list of characters to assign.\n        *  @return  Reference to this string.\n        */\n       basic_string&\n@@ -1163,30 +1165,32 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       /**\n        *  @brief  Insert multiple characters.\n-       *  @param p  Iterator referencing location in string to insert at.\n-       *  @param n  Number of characters to insert\n-       *  @param c  The character to insert.\n+       *  @param __p  Iterator referencing location in string to insert at.\n+       *  @param __n  Number of characters to insert\n+       *  @param __c  The character to insert.\n        *  @throw  std::length_error  If new length exceeds @c max_size().\n        *\n-       *  Inserts @a n copies of character @a c starting at the position\n-       *  referenced by iterator @a p.  If adding characters causes the length\n-       *  to exceed max_size(), length_error is thrown.  The value of the\n-       *  string doesn't change if an error is thrown.\n+       *  Inserts @a __n copies of character @a __c starting at the\n+       *  position referenced by iterator @a __p.  If adding\n+       *  characters causes the length to exceed max_size(),\n+       *  length_error is thrown.  The value of the string doesn't\n+       *  change if an error is thrown.\n       */\n       void\n       insert(iterator __p, size_type __n, _CharT __c)\n       {\tthis->replace(__p, __p, __n, __c);  }\n \n       /**\n        *  @brief  Insert a range of characters.\n-       *  @param p  Iterator referencing location in string to insert at.\n-       *  @param beg  Start of range.\n-       *  @param end  End of range.\n+       *  @param __p  Iterator referencing location in string to insert at.\n+       *  @param __beg  Start of range.\n+       *  @param __end  End of range.\n        *  @throw  std::length_error  If new length exceeds @c max_size().\n        *\n-       *  Inserts characters in range [beg,end).  If adding characters causes\n-       *  the length to exceed max_size(), length_error is thrown.  The value\n-       *  of the string doesn't change if an error is thrown.\n+       *  Inserts characters in range [__beg,__end).  If adding\n+       *  characters causes the length to exceed max_size(),\n+       *  length_error is thrown.  The value of the string doesn't\n+       *  change if an error is thrown.\n       */\n       template<class _InputIterator>\n         void\n@@ -1196,8 +1200,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n #ifdef __GXX_EXPERIMENTAL_CXX0X__\n       /**\n        *  @brief  Insert an initializer_list of characters.\n-       *  @param p  Iterator referencing location in string to insert at.\n-       *  @param l  The initializer_list of characters to insert.\n+       *  @param __p  Iterator referencing location in string to insert at.\n+       *  @param __l  The initializer_list of characters to insert.\n        *  @throw  std::length_error  If new length exceeds @c max_size().\n        */\n       void\n@@ -1210,36 +1214,37 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       /**\n        *  @brief  Insert value of a string.\n-       *  @param pos1  Iterator referencing location in string to insert at.\n-       *  @param str  The string to insert.\n+       *  @param __pos1  Iterator referencing location in string to insert at.\n+       *  @param __str  The string to insert.\n        *  @return  Reference to this string.\n        *  @throw  std::length_error  If new length exceeds @c max_size().\n        *\n-       *  Inserts value of @a str starting at @a pos1.  If adding characters\n-       *  causes the length to exceed max_size(), length_error is thrown.  The\n-       *  value of the string doesn't change if an error is thrown.\n+       *  Inserts value of @a __str starting at @a __pos1.  If adding\n+       *  characters causes the length to exceed max_size(),\n+       *  length_error is thrown.  The value of the string doesn't\n+       *  change if an error is thrown.\n       */\n       basic_string&\n       insert(size_type __pos1, const basic_string& __str)\n       { return this->insert(__pos1, __str, size_type(0), __str.size()); }\n \n       /**\n        *  @brief  Insert a substring.\n-       *  @param pos1  Iterator referencing location in string to insert at.\n-       *  @param str  The string to insert.\n-       *  @param pos2  Start of characters in str to insert.\n-       *  @param n  Number of characters to insert.\n+       *  @param __pos1  Iterator referencing location in string to insert at.\n+       *  @param __str  The string to insert.\n+       *  @param __pos2  Start of characters in str to insert.\n+       *  @param __n  Number of characters to insert.\n        *  @return  Reference to this string.\n        *  @throw  std::length_error  If new length exceeds @c max_size().\n        *  @throw  std::out_of_range  If @a pos1 > size() or\n-       *  @a pos2 > @a str.size().\n+       *  @a __pos2 > @a str.size().\n        *\n-       *  Starting at @a pos1, insert @a n character of @a str beginning with\n-       *  @a pos2.  If adding characters causes the length to exceed\n-       *  max_size(), length_error is thrown.  If @a pos1 is beyond the end of\n-       *  this string or @a pos2 is beyond the end of @a str, out_of_range is\n-       *  thrown.  The value of the string doesn't change if an error is\n-       *  thrown.\n+       *  Starting at @a pos1, insert @a __n character of @a __str\n+       *  beginning with @a __pos2.  If adding characters causes the\n+       *  length to exceed max_size(), length_error is thrown.  If @a\n+       *  __pos1 is beyond the end of this string or @a __pos2 is\n+       *  beyond the end of @a __str, out_of_range is thrown.  The\n+       *  value of the string doesn't change if an error is thrown.\n       */\n       basic_string&\n       insert(size_type __pos1, const basic_string& __str,\n@@ -1250,35 +1255,35 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       /**\n        *  @brief  Insert a C substring.\n-       *  @param pos  Iterator referencing location in string to insert at.\n-       *  @param s  The C string to insert.\n-       *  @param n  The number of characters to insert.\n+       *  @param __pos  Iterator referencing location in string to insert at.\n+       *  @param __s  The C string to insert.\n+       *  @param __n  The number of characters to insert.\n        *  @return  Reference to this string.\n        *  @throw  std::length_error  If new length exceeds @c max_size().\n-       *  @throw  std::out_of_range  If @a pos is beyond the end of this\n+       *  @throw  std::out_of_range  If @a __pos is beyond the end of this\n        *  string.\n        *\n-       *  Inserts the first @a n characters of @a s starting at @a pos.  If\n-       *  adding characters causes the length to exceed max_size(),\n-       *  length_error is thrown.  If @a pos is beyond end(), out_of_range is\n-       *  thrown.  The value of the string doesn't change if an error is\n-       *  thrown.\n+       *  Inserts the first @a __n characters of @a __s starting at @a\n+       *  __pos.  If adding characters causes the length to exceed\n+       *  max_size(), length_error is thrown.  If @a __pos is beyond\n+       *  end(), out_of_range is thrown.  The value of the string\n+       *  doesn't change if an error is thrown.\n       */\n       basic_string&\n       insert(size_type __pos, const _CharT* __s, size_type __n);\n \n       /**\n        *  @brief  Insert a C string.\n-       *  @param pos  Iterator referencing location in string to insert at.\n-       *  @param s  The C string to insert.\n+       *  @param __pos  Iterator referencing location in string to insert at.\n+       *  @param __s  The C string to insert.\n        *  @return  Reference to this string.\n        *  @throw  std::length_error  If new length exceeds @c max_size().\n        *  @throw  std::out_of_range  If @a pos is beyond the end of this\n        *  string.\n        *\n-       *  Inserts the first @a n characters of @a s starting at @a pos.  If\n+       *  Inserts the first @a n characters of @a __s starting at @a __pos.  If\n        *  adding characters causes the length to exceed max_size(),\n-       *  length_error is thrown.  If @a pos is beyond end(), out_of_range is\n+       *  length_error is thrown.  If @a __pos is beyond end(), out_of_range is\n        *  thrown.  The value of the string doesn't change if an error is\n        *  thrown.\n       */\n@@ -1291,19 +1296,19 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       /**\n        *  @brief  Insert multiple characters.\n-       *  @param pos  Index in string to insert at.\n-       *  @param n  Number of characters to insert\n-       *  @param c  The character to insert.\n+       *  @param __pos  Index in string to insert at.\n+       *  @param __n  Number of characters to insert\n+       *  @param __c  The character to insert.\n        *  @return  Reference to this string.\n        *  @throw  std::length_error  If new length exceeds @c max_size().\n-       *  @throw  std::out_of_range  If @a pos is beyond the end of this\n+       *  @throw  std::out_of_range  If @a __pos is beyond the end of this\n        *  string.\n        *\n-       *  Inserts @a n copies of character @a c starting at index @a pos.  If\n-       *  adding characters causes the length to exceed max_size(),\n-       *  length_error is thrown.  If @a pos > length(), out_of_range is\n-       *  thrown.  The value of the string doesn't change if an error is\n-       *  thrown.\n+       *  Inserts @a __n copies of character @a __c starting at index\n+       *  @a __pos.  If adding characters causes the length to exceed\n+       *  max_size(), length_error is thrown.  If @a __pos > length(),\n+       *  out_of_range is thrown.  The value of the string doesn't\n+       *  change if an error is thrown.\n       */\n       basic_string&\n       insert(size_type __pos, size_type __n, _CharT __c)\n@@ -1312,15 +1317,16 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       /**\n        *  @brief  Insert one character.\n-       *  @param p  Iterator referencing position in string to insert at.\n-       *  @param c  The character to insert.\n+       *  @param __p  Iterator referencing position in string to insert at.\n+       *  @param __c  The character to insert.\n        *  @return  Iterator referencing newly inserted char.\n        *  @throw  std::length_error  If new length exceeds @c max_size().\n        *\n-       *  Inserts character @a c at position referenced by @a p.  If adding\n-       *  character causes the length to exceed max_size(), length_error is\n-       *  thrown.  If @a p is beyond end of string, out_of_range is thrown.\n-       *  The value of the string doesn't change if an error is thrown.\n+       *  Inserts character @a __c at position referenced by @a __p.\n+       *  If adding character causes the length to exceed max_size(),\n+       *  length_error is thrown.  If @a __p is beyond end of string,\n+       *  out_of_range is thrown.  The value of the string doesn't\n+       *  change if an error is thrown.\n       */\n       iterator\n       insert(iterator __p, _CharT __c)\n@@ -1334,17 +1340,18 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       /**\n        *  @brief  Remove characters.\n-       *  @param pos  Index of first character to remove (default 0).\n-       *  @param n  Number of characters to remove (default remainder).\n+       *  @param __pos  Index of first character to remove (default 0).\n+       *  @param __n  Number of characters to remove (default remainder).\n        *  @return  Reference to this string.\n        *  @throw  std::out_of_range  If @a pos is beyond the end of this\n        *  string.\n        *\n-       *  Removes @a n characters from this string starting at @a pos.  The\n-       *  length of the string is reduced by @a n.  If there are < @a n\n-       *  characters to remove, the remainder of the string is truncated.  If\n-       *  @a p is beyond end of string, out_of_range is thrown.  The value of\n-       *  the string doesn't change if an error is thrown.\n+       *  Removes @a __n characters from this string starting at @a\n+       *  __pos.  The length of the string is reduced by @a __n.  If\n+       *  there are < @a __n characters to remove, the remainder of\n+       *  the string is truncated.  If @a __p is beyond end of string,\n+       *  out_of_range is thrown.  The value of the string doesn't\n+       *  change if an error is thrown.\n       */\n       basic_string&\n       erase(size_type __pos = 0, size_type __n = npos)\n@@ -1356,10 +1363,10 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       /**\n        *  @brief  Remove one character.\n-       *  @param position  Iterator referencing the character to remove.\n+       *  @param __position  Iterator referencing the character to remove.\n        *  @return  iterator referencing same location after removal.\n        *\n-       *  Removes the character at @a position from this string. The value\n+       *  Removes the character at @a __position from this string. The value\n        *  of the string doesn't change if an error is thrown.\n       */\n       iterator\n@@ -1375,8 +1382,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       /**\n        *  @brief  Remove a range of characters.\n-       *  @param first  Iterator referencing the first character to remove.\n-       *  @param last  Iterator referencing the end of the range.\n+       *  @param __first  Iterator referencing the first character to remove.\n+       *  @param __last  Iterator referencing the end of the range.\n        *  @return  Iterator referencing location of first after removal.\n        *\n        *  Removes the characters in the range [first,last) from this string.\n@@ -1387,38 +1394,39 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n  \n       /**\n        *  @brief  Replace characters with value from another string.\n-       *  @param pos  Index of first character to replace.\n-       *  @param n  Number of characters to be replaced.\n-       *  @param str  String to insert.\n+       *  @param __pos  Index of first character to replace.\n+       *  @param __n  Number of characters to be replaced.\n+       *  @param __str  String to insert.\n        *  @return  Reference to this string.\n        *  @throw  std::out_of_range  If @a pos is beyond the end of this\n        *  string.\n        *  @throw  std::length_error  If new length exceeds @c max_size().\n        *\n-       *  Removes the characters in the range [pos,pos+n) from this string.\n-       *  In place, the value of @a str is inserted.  If @a pos is beyond end\n-       *  of string, out_of_range is thrown.  If the length of the result\n-       *  exceeds max_size(), length_error is thrown.  The value of the string\n-       *  doesn't change if an error is thrown.\n+       *  Removes the characters in the range [__pos,__pos+__n) from\n+       *  this string.  In place, the value of @a __str is inserted.\n+       *  If @a __pos is beyond end of string, out_of_range is thrown.\n+       *  If the length of the result exceeds max_size(), length_error\n+       *  is thrown.  The value of the string doesn't change if an\n+       *  error is thrown.\n       */\n       basic_string&\n       replace(size_type __pos, size_type __n, const basic_string& __str)\n       { return this->replace(__pos, __n, __str._M_data(), __str.size()); }\n \n       /**\n        *  @brief  Replace characters with value from another string.\n-       *  @param pos1  Index of first character to replace.\n-       *  @param n1  Number of characters to be replaced.\n-       *  @param str  String to insert.\n-       *  @param pos2  Index of first character of str to use.\n-       *  @param n2  Number of characters from str to use.\n+       *  @param __pos1  Index of first character to replace.\n+       *  @param __n1  Number of characters to be replaced.\n+       *  @param __str  String to insert.\n+       *  @param __pos2  Index of first character of str to use.\n+       *  @param __n2  Number of characters from str to use.\n        *  @return  Reference to this string.\n-       *  @throw  std::out_of_range  If @a pos1 > size() or @a pos2 >\n-       *  str.size().\n+       *  @throw  std::out_of_range  If @a __pos1 > size() or @a __pos2 >\n+       *  __str.size().\n        *  @throw  std::length_error  If new length exceeds @c max_size().\n        *\n-       *  Removes the characters in the range [pos1,pos1 + n) from this\n-       *  string.  In place, the value of @a str is inserted.  If @a pos is\n+       *  Removes the characters in the range [__pos1,__pos1 + n) from this\n+       *  string.  In place, the value of @a __str is inserted.  If @a __pos is\n        *  beyond end of string, out_of_range is thrown.  If the length of the\n        *  result exceeds max_size(), length_error is thrown.  The value of the\n        *  string doesn't change if an error is thrown.\n@@ -1432,39 +1440,41 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       /**\n        *  @brief  Replace characters with value of a C substring.\n-       *  @param pos  Index of first character to replace.\n-       *  @param n1  Number of characters to be replaced.\n-       *  @param s  C string to insert.\n-       *  @param n2  Number of characters from @a s to use.\n+       *  @param __pos  Index of first character to replace.\n+       *  @param __n1  Number of characters to be replaced.\n+       *  @param __s  C string to insert.\n+       *  @param __n2  Number of characters from @a s to use.\n        *  @return  Reference to this string.\n        *  @throw  std::out_of_range  If @a pos1 > size().\n        *  @throw  std::length_error  If new length exceeds @c max_size().\n        *\n-       *  Removes the characters in the range [pos,pos + n1) from this string.\n-       *  In place, the first @a n2 characters of @a s are inserted, or all\n-       *  of @a s if @a n2 is too large.  If @a pos is beyond end of string,\n-       *  out_of_range is thrown.  If the length of result exceeds max_size(),\n-       *  length_error is thrown.  The value of the string doesn't change if\n-       *  an error is thrown.\n+       *  Removes the characters in the range [__pos,__pos + __n1)\n+       *  from this string.  In place, the first @a __n2 characters of\n+       *  @a __s are inserted, or all of @a __s if @a __n2 is too large.  If\n+       *  @a __pos is beyond end of string, out_of_range is thrown.  If\n+       *  the length of result exceeds max_size(), length_error is\n+       *  thrown.  The value of the string doesn't change if an error\n+       *  is thrown.\n       */\n       basic_string&\n       replace(size_type __pos, size_type __n1, const _CharT* __s,\n \t      size_type __n2);\n \n       /**\n        *  @brief  Replace characters with value of a C string.\n-       *  @param pos  Index of first character to replace.\n-       *  @param n1  Number of characters to be replaced.\n-       *  @param s  C string to insert.\n+       *  @param __pos  Index of first character to replace.\n+       *  @param __n1  Number of characters to be replaced.\n+       *  @param __s  C string to insert.\n        *  @return  Reference to this string.\n        *  @throw  std::out_of_range  If @a pos > size().\n        *  @throw  std::length_error  If new length exceeds @c max_size().\n        *\n-       *  Removes the characters in the range [pos,pos + n1) from this string.\n-       *  In place, the characters of @a s are inserted.  If @a pos is beyond\n-       *  end of string, out_of_range is thrown.  If the length of result\n-       *  exceeds max_size(), length_error is thrown.  The value of the string\n-       *  doesn't change if an error is thrown.\n+       *  Removes the characters in the range [__pos,__pos + __n1)\n+       *  from this string.  In place, the characters of @a __s are\n+       *  inserted.  If @a __pos is beyond end of string, out_of_range\n+       *  is thrown.  If the length of result exceeds max_size(),\n+       *  length_error is thrown.  The value of the string doesn't\n+       *  change if an error is thrown.\n       */\n       basic_string&\n       replace(size_type __pos, size_type __n1, const _CharT* __s)\n@@ -1475,19 +1485,20 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       /**\n        *  @brief  Replace characters with multiple characters.\n-       *  @param pos  Index of first character to replace.\n-       *  @param n1  Number of characters to be replaced.\n-       *  @param n2  Number of characters to insert.\n-       *  @param c  Character to insert.\n+       *  @param __pos  Index of first character to replace.\n+       *  @param __n1  Number of characters to be replaced.\n+       *  @param __n2  Number of characters to insert.\n+       *  @param __c  Character to insert.\n        *  @return  Reference to this string.\n-       *  @throw  std::out_of_range  If @a pos > size().\n+       *  @throw  std::out_of_range  If @a __pos > size().\n        *  @throw  std::length_error  If new length exceeds @c max_size().\n        *\n-       *  Removes the characters in the range [pos,pos + n1) from this string.\n-       *  In place, @a n2 copies of @a c are inserted.  If @a pos is beyond\n-       *  end of string, out_of_range is thrown.  If the length of result\n-       *  exceeds max_size(), length_error is thrown.  The value of the string\n-       *  doesn't change if an error is thrown.\n+       *  Removes the characters in the range [pos,pos + n1) from this\n+       *  string.  In place, @a __n2 copies of @a __c are inserted.\n+       *  If @a __pos is beyond end of string, out_of_range is thrown.\n+       *  If the length of result exceeds max_size(), length_error is\n+       *  thrown.  The value of the string doesn't change if an error\n+       *  is thrown.\n       */\n       basic_string&\n       replace(size_type __pos, size_type __n1, size_type __n2, _CharT __c)\n@@ -1496,34 +1507,35 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       /**\n        *  @brief  Replace range of characters with string.\n-       *  @param i1  Iterator referencing start of range to replace.\n-       *  @param i2  Iterator referencing end of range to replace.\n-       *  @param str  String value to insert.\n+       *  @param __i1  Iterator referencing start of range to replace.\n+       *  @param __i2  Iterator referencing end of range to replace.\n+       *  @param __str  String value to insert.\n        *  @return  Reference to this string.\n        *  @throw  std::length_error  If new length exceeds @c max_size().\n        *\n-       *  Removes the characters in the range [i1,i2).  In place, the value of\n-       *  @a str is inserted.  If the length of result exceeds max_size(),\n-       *  length_error is thrown.  The value of the string doesn't change if\n-       *  an error is thrown.\n+       *  Removes the characters in the range [__i1,__i2).  In place,\n+       *  the value of @a __str is inserted.  If the length of result\n+       *  exceeds max_size(), length_error is thrown.  The value of\n+       *  the string doesn't change if an error is thrown.\n       */\n       basic_string&\n       replace(iterator __i1, iterator __i2, const basic_string& __str)\n       { return this->replace(__i1, __i2, __str._M_data(), __str.size()); }\n \n       /**\n        *  @brief  Replace range of characters with C substring.\n-       *  @param i1  Iterator referencing start of range to replace.\n-       *  @param i2  Iterator referencing end of range to replace.\n-       *  @param s  C string value to insert.\n-       *  @param n  Number of characters from s to insert.\n+       *  @param __i1  Iterator referencing start of range to replace.\n+       *  @param __i2  Iterator referencing end of range to replace.\n+       *  @param __s  C string value to insert.\n+       *  @param __n  Number of characters from s to insert.\n        *  @return  Reference to this string.\n        *  @throw  std::length_error  If new length exceeds @c max_size().\n        *\n-       *  Removes the characters in the range [i1,i2).  In place, the first @a\n-       *  n characters of @a s are inserted.  If the length of result exceeds\n-       *  max_size(), length_error is thrown.  The value of the string doesn't\n-       *  change if an error is thrown.\n+       *  Removes the characters in the range [__i1,__i2).  In place,\n+       *  the first @a __n characters of @a __s are inserted.  If the\n+       *  length of result exceeds max_size(), length_error is thrown.\n+       *  The value of the string doesn't change if an error is\n+       *  thrown.\n       */\n       basic_string&\n       replace(iterator __i1, iterator __i2, const _CharT* __s, size_type __n)\n@@ -1535,16 +1547,16 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       /**\n        *  @brief  Replace range of characters with C string.\n-       *  @param i1  Iterator referencing start of range to replace.\n-       *  @param i2  Iterator referencing end of range to replace.\n-       *  @param s  C string value to insert.\n+       *  @param __i1  Iterator referencing start of range to replace.\n+       *  @param __i2  Iterator referencing end of range to replace.\n+       *  @param __s  C string value to insert.\n        *  @return  Reference to this string.\n        *  @throw  std::length_error  If new length exceeds @c max_size().\n        *\n-       *  Removes the characters in the range [i1,i2).  In place, the\n-       *  characters of @a s are inserted.  If the length of result exceeds\n-       *  max_size(), length_error is thrown.  The value of the string doesn't\n-       *  change if an error is thrown.\n+       *  Removes the characters in the range [__i1,__i2).  In place,\n+       *  the characters of @a __s are inserted.  If the length of\n+       *  result exceeds max_size(), length_error is thrown.  The\n+       *  value of the string doesn't change if an error is thrown.\n       */\n       basic_string&\n       replace(iterator __i1, iterator __i2, const _CharT* __s)\n@@ -1555,17 +1567,17 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       /**\n        *  @brief  Replace range of characters with multiple characters\n-       *  @param i1  Iterator referencing start of range to replace.\n-       *  @param i2  Iterator referencing end of range to replace.\n-       *  @param n  Number of characters to insert.\n-       *  @param c  Character to insert.\n+       *  @param __i1  Iterator referencing start of range to replace.\n+       *  @param __i2  Iterator referencing end of range to replace.\n+       *  @param __n  Number of characters to insert.\n+       *  @param __c  Character to insert.\n        *  @return  Reference to this string.\n        *  @throw  std::length_error  If new length exceeds @c max_size().\n        *\n-       *  Removes the characters in the range [i1,i2).  In place, @a n copies\n-       *  of @a c are inserted.  If the length of result exceeds max_size(),\n-       *  length_error is thrown.  The value of the string doesn't change if\n-       *  an error is thrown.\n+       *  Removes the characters in the range [__i1,__i2).  In place,\n+       *  @a __n copies of @a __c are inserted.  If the length of\n+       *  result exceeds max_size(), length_error is thrown.  The\n+       *  value of the string doesn't change if an error is thrown.\n       */\n       basic_string&\n       replace(iterator __i1, iterator __i2, size_type __n, _CharT __c)\n@@ -1577,17 +1589,18 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       /**\n        *  @brief  Replace range of characters with range.\n-       *  @param i1  Iterator referencing start of range to replace.\n-       *  @param i2  Iterator referencing end of range to replace.\n-       *  @param k1  Iterator referencing start of range to insert.\n-       *  @param k2  Iterator referencing end of range to insert.\n+       *  @param __i1  Iterator referencing start of range to replace.\n+       *  @param __i2  Iterator referencing end of range to replace.\n+       *  @param __k1  Iterator referencing start of range to insert.\n+       *  @param __k2  Iterator referencing end of range to insert.\n        *  @return  Reference to this string.\n        *  @throw  std::length_error  If new length exceeds @c max_size().\n        *\n-       *  Removes the characters in the range [i1,i2).  In place, characters\n-       *  in the range [k1,k2) are inserted.  If the length of result exceeds\n-       *  max_size(), length_error is thrown.  The value of the string doesn't\n-       *  change if an error is thrown.\n+       *  Removes the characters in the range [__i1,__i2).  In place,\n+       *  characters in the range [__k1,__k2) are inserted.  If the\n+       *  length of result exceeds max_size(), length_error is thrown.\n+       *  The value of the string doesn't change if an error is\n+       *  thrown.\n       */\n       template<class _InputIterator>\n         basic_string&\n@@ -1648,16 +1661,17 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n #ifdef __GXX_EXPERIMENTAL_CXX0X__\n       /**\n        *  @brief  Replace range of characters with initializer_list.\n-       *  @param i1  Iterator referencing start of range to replace.\n-       *  @param i2  Iterator referencing end of range to replace.\n-       *  @param l  The initializer_list of characters to insert.\n+       *  @param __i1  Iterator referencing start of range to replace.\n+       *  @param __i2  Iterator referencing end of range to replace.\n+       *  @param __l  The initializer_list of characters to insert.\n        *  @return  Reference to this string.\n        *  @throw  std::length_error  If new length exceeds @c max_size().\n        *\n-       *  Removes the characters in the range [i1,i2).  In place, characters\n-       *  in the range [k1,k2) are inserted.  If the length of result exceeds\n-       *  max_size(), length_error is thrown.  The value of the string doesn't\n-       *  change if an error is thrown.\n+       *  Removes the characters in the range [__i1,__i2).  In place,\n+       *  characters in the range [__k1,__k2) are inserted.  If the\n+       *  length of result exceeds max_size(), length_error is thrown.\n+       *  The value of the string doesn't change if an error is\n+       *  thrown.\n       */\n       basic_string& replace(iterator __i1, iterator __i2,\n \t\t\t    initializer_list<_CharT> __l)\n@@ -1736,23 +1750,24 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       /**\n        *  @brief  Copy substring into C string.\n-       *  @param s  C string to copy value into.\n-       *  @param n  Number of characters to copy.\n-       *  @param pos  Index of first character to copy.\n+       *  @param __s  C string to copy value into.\n+       *  @param __n  Number of characters to copy.\n+       *  @param __pos  Index of first character to copy.\n        *  @return  Number of characters actually copied\n-       *  @throw  std::out_of_range  If pos > size().\n+       *  @throw  std::out_of_range  If __pos > size().\n        *\n-       *  Copies up to @a n characters starting at @a pos into the C string @a\n-       *  s.  If @a pos is %greater than size(), out_of_range is thrown.\n+       *  Copies up to @a __n characters starting at @a __pos into the\n+       *  C string @a __s.  If @a __pos is %greater than size(),\n+       *  out_of_range is thrown.\n       */\n       size_type\n       copy(_CharT* __s, size_type __n, size_type __pos = 0) const;\n \n       /**\n        *  @brief  Swap contents with another string.\n-       *  @param s  String to swap with.\n+       *  @param __s  String to swap with.\n        *\n-       *  Exchanges the contents of this string with that of @a s in constant\n+       *  Exchanges the contents of this string with that of @a __s in constant\n        *  time.\n       */\n       void\n@@ -1788,25 +1803,26 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       /**\n        *  @brief  Find position of a C substring.\n-       *  @param s  C string to locate.\n-       *  @param pos  Index of character to search from.\n-       *  @param n  Number of characters from @a s to search for.\n+       *  @param __s  C string to locate.\n+       *  @param __pos  Index of character to search from.\n+       *  @param __n  Number of characters from @a s to search for.\n        *  @return  Index of start of first occurrence.\n        *\n-       *  Starting from @a pos, searches forward for the first @a n characters\n-       *  in @a s within this string.  If found, returns the index where it\n-       *  begins.  If not found, returns npos.\n+       *  Starting from @a __pos, searches forward for the first @a\n+       *  __n characters in @a __s within this string.  If found,\n+       *  returns the index where it begins.  If not found, returns\n+       *  npos.\n       */\n       size_type\n       find(const _CharT* __s, size_type __pos, size_type __n) const;\n \n       /**\n        *  @brief  Find position of a string.\n-       *  @param str  String to locate.\n-       *  @param pos  Index of character to search from (default 0).\n+       *  @param __str  String to locate.\n+       *  @param __pos  Index of character to search from (default 0).\n        *  @return  Index of start of first occurrence.\n        *\n-       *  Starting from @a pos, searches forward for value of @a str within\n+       *  Starting from @a __pos, searches forward for value of @a __str within\n        *  this string.  If found, returns the index where it begins.  If not\n        *  found, returns npos.\n       */\n@@ -1817,13 +1833,13 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       /**\n        *  @brief  Find position of a C string.\n-       *  @param s  C string to locate.\n-       *  @param pos  Index of character to search from (default 0).\n+       *  @param __s  C string to locate.\n+       *  @param __pos  Index of character to search from (default 0).\n        *  @return  Index of start of first occurrence.\n        *\n-       *  Starting from @a pos, searches forward for the value of @a s within\n-       *  this string.  If found, returns the index where it begins.  If not\n-       *  found, returns npos.\n+       *  Starting from @a __pos, searches forward for the value of @a\n+       *  __s within this string.  If found, returns the index where\n+       *  it begins.  If not found, returns npos.\n       */\n       size_type\n       find(const _CharT* __s, size_type __pos = 0) const\n@@ -1834,26 +1850,26 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       /**\n        *  @brief  Find position of a character.\n-       *  @param c  Character to locate.\n-       *  @param pos  Index of character to search from (default 0).\n+       *  @param __c  Character to locate.\n+       *  @param __pos  Index of character to search from (default 0).\n        *  @return  Index of first occurrence.\n        *\n-       *  Starting from @a pos, searches forward for @a c within this string.\n-       *  If found, returns the index where it was found.  If not found,\n-       *  returns npos.\n+       *  Starting from @a __pos, searches forward for @a __c within\n+       *  this string.  If found, returns the index where it was\n+       *  found.  If not found, returns npos.\n       */\n       size_type\n       find(_CharT __c, size_type __pos = 0) const _GLIBCXX_NOEXCEPT;\n \n       /**\n        *  @brief  Find last position of a string.\n-       *  @param str  String to locate.\n-       *  @param pos  Index of character to search back from (default end).\n+       *  @param __str  String to locate.\n+       *  @param __pos  Index of character to search back from (default end).\n        *  @return  Index of start of last occurrence.\n        *\n-       *  Starting from @a pos, searches backward for value of @a str within\n-       *  this string.  If found, returns the index where it begins.  If not\n-       *  found, returns npos.\n+       *  Starting from @a __pos, searches backward for value of @a\n+       *  __str within this string.  If found, returns the index where\n+       *  it begins.  If not found, returns npos.\n       */\n       size_type\n       rfind(const basic_string& __str, size_type __pos = npos) const\n@@ -1862,27 +1878,28 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       /**\n        *  @brief  Find last position of a C substring.\n-       *  @param s  C string to locate.\n-       *  @param pos  Index of character to search back from.\n-       *  @param n  Number of characters from s to search for.\n+       *  @param __s  C string to locate.\n+       *  @param __pos  Index of character to search back from.\n+       *  @param __n  Number of characters from s to search for.\n        *  @return  Index of start of last occurrence.\n        *\n-       *  Starting from @a pos, searches backward for the first @a n\n-       *  characters in @a s within this string.  If found, returns the index\n-       *  where it begins.  If not found, returns npos.\n+       *  Starting from @a __pos, searches backward for the first @a\n+       *  __n characters in @a __s within this string.  If found,\n+       *  returns the index where it begins.  If not found, returns\n+       *  npos.\n       */\n       size_type\n       rfind(const _CharT* __s, size_type __pos, size_type __n) const;\n \n       /**\n        *  @brief  Find last position of a C string.\n-       *  @param s  C string to locate.\n-       *  @param pos  Index of character to start search at (default end).\n+       *  @param __s  C string to locate.\n+       *  @param __pos  Index of character to start search at (default end).\n        *  @return  Index of start of  last occurrence.\n        *\n-       *  Starting from @a pos, searches backward for the value of @a s within\n-       *  this string.  If found, returns the index where it begins.  If not\n-       *  found, returns npos.\n+       *  Starting from @a __pos, searches backward for the value of\n+       *  @a __s within this string.  If found, returns the index\n+       *  where it begins.  If not found, returns npos.\n       */\n       size_type\n       rfind(const _CharT* __s, size_type __pos = npos) const\n@@ -1893,26 +1910,27 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       /**\n        *  @brief  Find last position of a character.\n-       *  @param c  Character to locate.\n-       *  @param pos  Index of character to search back from (default end).\n+       *  @param __c  Character to locate.\n+       *  @param __pos  Index of character to search back from (default end).\n        *  @return  Index of last occurrence.\n        *\n-       *  Starting from @a pos, searches backward for @a c within this string.\n-       *  If found, returns the index where it was found.  If not found,\n-       *  returns npos.\n+       *  Starting from @a __pos, searches backward for @a __c within\n+       *  this string.  If found, returns the index where it was\n+       *  found.  If not found, returns npos.\n       */\n       size_type\n       rfind(_CharT __c, size_type __pos = npos) const _GLIBCXX_NOEXCEPT;\n \n       /**\n        *  @brief  Find position of a character of string.\n-       *  @param str  String containing characters to locate.\n-       *  @param pos  Index of character to search from (default 0).\n+       *  @param __str  String containing characters to locate.\n+       *  @param __pos  Index of character to search from (default 0).\n        *  @return  Index of first occurrence.\n        *\n-       *  Starting from @a pos, searches forward for one of the characters of\n-       *  @a str within this string.  If found, returns the index where it was\n-       *  found.  If not found, returns npos.\n+       *  Starting from @a __pos, searches forward for one of the\n+       *  characters of @a __str within this string.  If found,\n+       *  returns the index where it was found.  If not found, returns\n+       *  npos.\n       */\n       size_type\n       find_first_of(const basic_string& __str, size_type __pos = 0) const\n@@ -1921,27 +1939,28 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       /**\n        *  @brief  Find position of a character of C substring.\n-       *  @param s  String containing characters to locate.\n-       *  @param pos  Index of character to search from.\n-       *  @param n  Number of characters from s to search for.\n+       *  @param __s  String containing characters to locate.\n+       *  @param __pos  Index of character to search from.\n+       *  @param __n  Number of characters from s to search for.\n        *  @return  Index of first occurrence.\n        *\n-       *  Starting from @a pos, searches forward for one of the first @a n\n-       *  characters of @a s within this string.  If found, returns the index\n-       *  where it was found.  If not found, returns npos.\n+       *  Starting from @a __pos, searches forward for one of the\n+       *  first @a __n characters of @a __s within this string.  If\n+       *  found, returns the index where it was found.  If not found,\n+       *  returns npos.\n       */\n       size_type\n       find_first_of(const _CharT* __s, size_type __pos, size_type __n) const;\n \n       /**\n        *  @brief  Find position of a character of C string.\n-       *  @param s  String containing characters to locate.\n-       *  @param pos  Index of character to search from (default 0).\n+       *  @param __s  String containing characters to locate.\n+       *  @param __pos  Index of character to search from (default 0).\n        *  @return  Index of first occurrence.\n        *\n-       *  Starting from @a pos, searches forward for one of the characters of\n-       *  @a s within this string.  If found, returns the index where it was\n-       *  found.  If not found, returns npos.\n+       *  Starting from @a __pos, searches forward for one of the\n+       *  characters of @a __s within this string.  If found, returns\n+       *  the index where it was found.  If not found, returns npos.\n       */\n       size_type\n       find_first_of(const _CharT* __s, size_type __pos = 0) const\n@@ -1952,29 +1971,30 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       /**\n        *  @brief  Find position of a character.\n-       *  @param c  Character to locate.\n-       *  @param pos  Index of character to search from (default 0).\n+       *  @param __c  Character to locate.\n+       *  @param __pos  Index of character to search from (default 0).\n        *  @return  Index of first occurrence.\n        *\n-       *  Starting from @a pos, searches forward for the character @a c within\n-       *  this string.  If found, returns the index where it was found.  If\n-       *  not found, returns npos.\n+       *  Starting from @a __pos, searches forward for the character\n+       *  @a __c within this string.  If found, returns the index\n+       *  where it was found.  If not found, returns npos.\n        *\n-       *  Note: equivalent to find(c, pos).\n+       *  Note: equivalent to find(__c, __pos).\n       */\n       size_type\n       find_first_of(_CharT __c, size_type __pos = 0) const _GLIBCXX_NOEXCEPT\n       { return this->find(__c, __pos); }\n \n       /**\n        *  @brief  Find last position of a character of string.\n-       *  @param str  String containing characters to locate.\n-       *  @param pos  Index of character to search back from (default end).\n+       *  @param __str  String containing characters to locate.\n+       *  @param __pos  Index of character to search back from (default end).\n        *  @return  Index of last occurrence.\n        *\n-       *  Starting from @a pos, searches backward for one of the characters of\n-       *  @a str within this string.  If found, returns the index where it was\n-       *  found.  If not found, returns npos.\n+       *  Starting from @a __pos, searches backward for one of the\n+       *  characters of @a __str within this string.  If found,\n+       *  returns the index where it was found.  If not found, returns\n+       *  npos.\n       */\n       size_type\n       find_last_of(const basic_string& __str, size_type __pos = npos) const\n@@ -1983,27 +2003,28 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       /**\n        *  @brief  Find last position of a character of C substring.\n-       *  @param s  C string containing characters to locate.\n-       *  @param pos  Index of character to search back from.\n-       *  @param n  Number of characters from s to search for.\n+       *  @param __s  C string containing characters to locate.\n+       *  @param __pos  Index of character to search back from.\n+       *  @param __n  Number of characters from s to search for.\n        *  @return  Index of last occurrence.\n        *\n-       *  Starting from @a pos, searches backward for one of the first @a n\n-       *  characters of @a s within this string.  If found, returns the index\n-       *  where it was found.  If not found, returns npos.\n+       *  Starting from @a __pos, searches backward for one of the\n+       *  first @a __n characters of @a __s within this string.  If\n+       *  found, returns the index where it was found.  If not found,\n+       *  returns npos.\n       */\n       size_type\n       find_last_of(const _CharT* __s, size_type __pos, size_type __n) const;\n \n       /**\n        *  @brief  Find last position of a character of C string.\n-       *  @param s  C string containing characters to locate.\n-       *  @param pos  Index of character to search back from (default end).\n+       *  @param __s  C string containing characters to locate.\n+       *  @param __pos  Index of character to search back from (default end).\n        *  @return  Index of last occurrence.\n        *\n-       *  Starting from @a pos, searches backward for one of the characters of\n-       *  @a s within this string.  If found, returns the index where it was\n-       *  found.  If not found, returns npos.\n+       *  Starting from @a __pos, searches backward for one of the\n+       *  characters of @a __s within this string.  If found, returns\n+       *  the index where it was found.  If not found, returns npos.\n       */\n       size_type\n       find_last_of(const _CharT* __s, size_type __pos = npos) const\n@@ -2014,28 +2035,28 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       /**\n        *  @brief  Find last position of a character.\n-       *  @param c  Character to locate.\n-       *  @param pos  Index of character to search back from (default end).\n+       *  @param __c  Character to locate.\n+       *  @param __pos  Index of character to search back from (default end).\n        *  @return  Index of last occurrence.\n        *\n-       *  Starting from @a pos, searches backward for @a c within this string.\n-       *  If found, returns the index where it was found.  If not found,\n-       *  returns npos.\n+       *  Starting from @a __pos, searches backward for @a __c within\n+       *  this string.  If found, returns the index where it was\n+       *  found.  If not found, returns npos.\n        *\n-       *  Note: equivalent to rfind(c, pos).\n+       *  Note: equivalent to rfind(__c, __pos).\n       */\n       size_type\n       find_last_of(_CharT __c, size_type __pos = npos) const _GLIBCXX_NOEXCEPT\n       { return this->rfind(__c, __pos); }\n \n       /**\n        *  @brief  Find position of a character not in string.\n-       *  @param str  String containing characters to avoid.\n-       *  @param pos  Index of character to search from (default 0).\n+       *  @param __str  String containing characters to avoid.\n+       *  @param __pos  Index of character to search from (default 0).\n        *  @return  Index of first occurrence.\n        *\n-       *  Starting from @a pos, searches forward for a character not contained\n-       *  in @a str within this string.  If found, returns the index where it\n+       *  Starting from @a __pos, searches forward for a character not contained\n+       *  in @a __str within this string.  If found, returns the index where it\n        *  was found.  If not found, returns npos.\n       */\n       size_type\n@@ -2045,28 +2066,29 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       /**\n        *  @brief  Find position of a character not in C substring.\n-       *  @param s  C string containing characters to avoid.\n-       *  @param pos  Index of character to search from.\n-       *  @param n  Number of characters from s to consider.\n+       *  @param __s  C string containing characters to avoid.\n+       *  @param __pos  Index of character to search from.\n+       *  @param __n  Number of characters from __s to consider.\n        *  @return  Index of first occurrence.\n        *\n-       *  Starting from @a pos, searches forward for a character not contained\n-       *  in the first @a n characters of @a s within this string.  If found,\n-       *  returns the index where it was found.  If not found, returns npos.\n+       *  Starting from @a __pos, searches forward for a character not\n+       *  contained in the first @a __n characters of @a __s within\n+       *  this string.  If found, returns the index where it was\n+       *  found.  If not found, returns npos.\n       */\n       size_type\n       find_first_not_of(const _CharT* __s, size_type __pos,\n \t\t\tsize_type __n) const;\n \n       /**\n        *  @brief  Find position of a character not in C string.\n-       *  @param s  C string containing characters to avoid.\n-       *  @param pos  Index of character to search from (default 0).\n+       *  @param __s  C string containing characters to avoid.\n+       *  @param __pos  Index of character to search from (default 0).\n        *  @return  Index of first occurrence.\n        *\n-       *  Starting from @a pos, searches forward for a character not contained\n-       *  in @a s within this string.  If found, returns the index where it\n-       *  was found.  If not found, returns npos.\n+       *  Starting from @a __pos, searches forward for a character not\n+       *  contained in @a __s within this string.  If found, returns\n+       *  the index where it was found.  If not found, returns npos.\n       */\n       size_type\n       find_first_not_of(const _CharT* __s, size_type __pos = 0) const\n@@ -2077,27 +2099,28 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       /**\n        *  @brief  Find position of a different character.\n-       *  @param c  Character to avoid.\n-       *  @param pos  Index of character to search from (default 0).\n+       *  @param __c  Character to avoid.\n+       *  @param __pos  Index of character to search from (default 0).\n        *  @return  Index of first occurrence.\n        *\n-       *  Starting from @a pos, searches forward for a character other than @a c\n-       *  within this string.  If found, returns the index where it was found.\n-       *  If not found, returns npos.\n+       *  Starting from @a __pos, searches forward for a character\n+       *  other than @a __c within this string.  If found, returns the\n+       *  index where it was found.  If not found, returns npos.\n       */\n       size_type\n       find_first_not_of(_CharT __c, size_type __pos = 0) const\n \t_GLIBCXX_NOEXCEPT;\n \n       /**\n        *  @brief  Find last position of a character not in string.\n-       *  @param str  String containing characters to avoid.\n-       *  @param pos  Index of character to search back from (default end).\n+       *  @param __str  String containing characters to avoid.\n+       *  @param __pos  Index of character to search back from (default end).\n        *  @return  Index of last occurrence.\n        *\n-       *  Starting from @a pos, searches backward for a character not\n-       *  contained in @a str within this string.  If found, returns the index\n-       *  where it was found.  If not found, returns npos.\n+       *  Starting from @a __pos, searches backward for a character\n+       *  not contained in @a __str within this string.  If found,\n+       *  returns the index where it was found.  If not found, returns\n+       *  npos.\n       */\n       size_type\n       find_last_not_of(const basic_string& __str, size_type __pos = npos) const\n@@ -2106,13 +2129,13 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       /**\n        *  @brief  Find last position of a character not in C substring.\n-       *  @param s  C string containing characters to avoid.\n-       *  @param pos  Index of character to search back from.\n-       *  @param n  Number of characters from s to consider.\n+       *  @param __s  C string containing characters to avoid.\n+       *  @param __pos  Index of character to search back from.\n+       *  @param __n  Number of characters from s to consider.\n        *  @return  Index of last occurrence.\n        *\n-       *  Starting from @a pos, searches backward for a character not\n-       *  contained in the first @a n characters of @a s within this string.\n+       *  Starting from @a __pos, searches backward for a character not\n+       *  contained in the first @a __n characters of @a __s within this string.\n        *  If found, returns the index where it was found.  If not found,\n        *  returns npos.\n       */\n@@ -2121,13 +2144,14 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t\t       size_type __n) const;\n       /**\n        *  @brief  Find last position of a character not in C string.\n-       *  @param s  C string containing characters to avoid.\n-       *  @param pos  Index of character to search back from (default end).\n+       *  @param __s  C string containing characters to avoid.\n+       *  @param __pos  Index of character to search back from (default end).\n        *  @return  Index of last occurrence.\n        *\n-       *  Starting from @a pos, searches backward for a character not\n-       *  contained in @a s within this string.  If found, returns the index\n-       *  where it was found.  If not found, returns npos.\n+       *  Starting from @a __pos, searches backward for a character\n+       *  not contained in @a __s within this string.  If found,\n+       *  returns the index where it was found.  If not found, returns\n+       *  npos.\n       */\n       size_type\n       find_last_not_of(const _CharT* __s, size_type __pos = npos) const\n@@ -2138,12 +2162,12 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       /**\n        *  @brief  Find last position of a different character.\n-       *  @param c  Character to avoid.\n-       *  @param pos  Index of character to search back from (default end).\n+       *  @param __c  Character to avoid.\n+       *  @param __pos  Index of character to search back from (default end).\n        *  @return  Index of last occurrence.\n        *\n-       *  Starting from @a pos, searches backward for a character other than\n-       *  @a c within this string.  If found, returns the index where it was\n+       *  Starting from @a __pos, searches backward for a character other than\n+       *  @a __c within this string.  If found, returns the index where it was\n        *  found.  If not found, returns npos.\n       */\n       size_type\n@@ -2152,15 +2176,15 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       /**\n        *  @brief  Get a substring.\n-       *  @param pos  Index of first character (default 0).\n-       *  @param n  Number of characters in substring (default remainder).\n+       *  @param __pos  Index of first character (default 0).\n+       *  @param __n  Number of characters in substring (default remainder).\n        *  @return  The new string.\n-       *  @throw  std::out_of_range  If pos > size().\n+       *  @throw  std::out_of_range  If __pos > size().\n        *\n-       *  Construct and return a new string using the @a n characters starting\n-       *  at @a pos.  If the string is too short, use the remainder of the\n-       *  characters.  If @a pos is beyond the end of the string, out_of_range\n-       *  is thrown.\n+       *  Construct and return a new string using the @a __n\n+       *  characters starting at @a __pos.  If the string is too\n+       *  short, use the remainder of the characters.  If @a __pos is\n+       *  beyond the end of the string, out_of_range is thrown.\n       */\n       basic_string\n       substr(size_type __pos = 0, size_type __n = npos) const\n@@ -2169,16 +2193,17 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       /**\n        *  @brief  Compare to a string.\n-       *  @param str  String to compare against.\n+       *  @param __str  String to compare against.\n        *  @return  Integer < 0, 0, or > 0.\n        *\n-       *  Returns an integer < 0 if this string is ordered before @a str, 0 if\n-       *  their values are equivalent, or > 0 if this string is ordered after\n-       *  @a str.  Determines the effective length rlen of the strings to\n-       *  compare as the smallest of size() and str.size().  The function\n-       *  then compares the two strings by calling traits::compare(data(),\n-       *  str.data(),rlen).  If the result of the comparison is nonzero returns\n-       *  it, otherwise the shorter one is ordered first.\n+       *  Returns an integer < 0 if this string is ordered before @a\n+       *  __str, 0 if their values are equivalent, or > 0 if this\n+       *  string is ordered after @a __str.  Determines the effective\n+       *  length rlen of the strings to compare as the smallest of\n+       *  size() and str.size().  The function then compares the two\n+       *  strings by calling traits::compare(data(), str.data(),rlen).\n+       *  If the result of the comparison is nonzero returns it,\n+       *  otherwise the shorter one is ordered first.\n       */\n       int\n       compare(const basic_string& __str) const\n@@ -2195,59 +2220,63 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       /**\n        *  @brief  Compare substring to a string.\n-       *  @param pos  Index of first character of substring.\n-       *  @param n  Number of characters in substring.\n-       *  @param str  String to compare against.\n+       *  @param __pos  Index of first character of substring.\n+       *  @param __n  Number of characters in substring.\n+       *  @param __str  String to compare against.\n        *  @return  Integer < 0, 0, or > 0.\n        *\n-       *  Form the substring of this string from the @a n characters starting\n-       *  at @a pos.  Returns an integer < 0 if the substring is ordered\n-       *  before @a str, 0 if their values are equivalent, or > 0 if the\n-       *  substring is ordered after @a str.  Determines the effective length\n-       *  rlen of the strings to compare as the smallest of the length of the\n-       *  substring and @a str.size().  The function then compares the two\n-       *  strings by calling traits::compare(substring.data(),str.data(),rlen).\n-       *  If the result of the comparison is nonzero returns it, otherwise the\n-       *  shorter one is ordered first.\n+       *  Form the substring of this string from the @a __n characters\n+       *  starting at @a __pos.  Returns an integer < 0 if the\n+       *  substring is ordered before @a __str, 0 if their values are\n+       *  equivalent, or > 0 if the substring is ordered after @a\n+       *  __str.  Determines the effective length rlen of the strings\n+       *  to compare as the smallest of the length of the substring\n+       *  and @a __str.size().  The function then compares the two\n+       *  strings by calling\n+       *  traits::compare(substring.data(),str.data(),rlen).  If the\n+       *  result of the comparison is nonzero returns it, otherwise\n+       *  the shorter one is ordered first.\n       */\n       int\n       compare(size_type __pos, size_type __n, const basic_string& __str) const;\n \n       /**\n        *  @brief  Compare substring to a substring.\n-       *  @param pos1  Index of first character of substring.\n-       *  @param n1  Number of characters in substring.\n-       *  @param str  String to compare against.\n-       *  @param pos2  Index of first character of substring of str.\n-       *  @param n2  Number of characters in substring of str.\n+       *  @param __pos1  Index of first character of substring.\n+       *  @param __n1  Number of characters in substring.\n+       *  @param __str  String to compare against.\n+       *  @param __pos2  Index of first character of substring of str.\n+       *  @param __n2  Number of characters in substring of str.\n        *  @return  Integer < 0, 0, or > 0.\n        *\n-       *  Form the substring of this string from the @a n1 characters starting\n-       *  at @a pos1.  Form the substring of @a str from the @a n2 characters\n-       *  starting at @a pos2.  Returns an integer < 0 if this substring is\n-       *  ordered before the substring of @a str, 0 if their values are\n-       *  equivalent, or > 0 if this substring is ordered after the substring\n-       *  of @a str.  Determines the effective length rlen of the strings\n-       *  to compare as the smallest of the lengths of the substrings.  The\n-       *  function then compares the two strings by calling\n+       *  Form the substring of this string from the @a __n1\n+       *  characters starting at @a __pos1.  Form the substring of @a\n+       *  __str from the @a __n2 characters starting at @a __pos2.\n+       *  Returns an integer < 0 if this substring is ordered before\n+       *  the substring of @a __str, 0 if their values are equivalent,\n+       *  or > 0 if this substring is ordered after the substring of\n+       *  @a __str.  Determines the effective length rlen of the\n+       *  strings to compare as the smallest of the lengths of the\n+       *  substrings.  The function then compares the two strings by\n+       *  calling\n        *  traits::compare(substring.data(),str.substr(pos2,n2).data(),rlen).\n-       *  If the result of the comparison is nonzero returns it, otherwise the\n-       *  shorter one is ordered first.\n+       *  If the result of the comparison is nonzero returns it,\n+       *  otherwise the shorter one is ordered first.\n       */\n       int\n       compare(size_type __pos1, size_type __n1, const basic_string& __str,\n \t      size_type __pos2, size_type __n2) const;\n \n       /**\n        *  @brief  Compare to a C string.\n-       *  @param s  C string to compare against.\n+       *  @param __s  C string to compare against.\n        *  @return  Integer < 0, 0, or > 0.\n        *\n-       *  Returns an integer < 0 if this string is ordered before @a s, 0 if\n+       *  Returns an integer < 0 if this string is ordered before @a __s, 0 if\n        *  their values are equivalent, or > 0 if this string is ordered after\n-       *  @a s.  Determines the effective length rlen of the strings to\n+       *  @a __s.  Determines the effective length rlen of the strings to\n        *  compare as the smallest of size() and the length of a string\n-       *  constructed from @a s.  The function then compares the two strings\n+       *  constructed from @a __s.  The function then compares the two strings\n        *  by calling traits::compare(data(),s,rlen).  If the result of the\n        *  comparison is nonzero returns it, otherwise the shorter one is\n        *  ordered first.\n@@ -2259,42 +2288,45 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       // 5 String::compare specification questionable\n       /**\n        *  @brief  Compare substring to a C string.\n-       *  @param pos  Index of first character of substring.\n-       *  @param n1  Number of characters in substring.\n-       *  @param s  C string to compare against.\n+       *  @param __pos  Index of first character of substring.\n+       *  @param __n1  Number of characters in substring.\n+       *  @param __s  C string to compare against.\n        *  @return  Integer < 0, 0, or > 0.\n        *\n-       *  Form the substring of this string from the @a n1 characters starting\n-       *  at @a pos.  Returns an integer < 0 if the substring is ordered\n-       *  before @a s, 0 if their values are equivalent, or > 0 if the\n-       *  substring is ordered after @a s.  Determines the effective length\n-       *  rlen of the strings to compare as the smallest of the length of the \n-       *  substring and the length of a string constructed from @a s.  The\n+       *  Form the substring of this string from the @a __n1\n+       *  characters starting at @a pos.  Returns an integer < 0 if\n+       *  the substring is ordered before @a __s, 0 if their values\n+       *  are equivalent, or > 0 if the substring is ordered after @a\n+       *  __s.  Determines the effective length rlen of the strings to\n+       *  compare as the smallest of the length of the substring and\n+       *  the length of a string constructed from @a __s.  The\n        *  function then compares the two string by calling\n-       *  traits::compare(substring.data(),s,rlen).  If the result of the\n-       *  comparison is nonzero returns it, otherwise the shorter one is\n-       *  ordered first.\n+       *  traits::compare(substring.data(),__s,rlen).  If the result of\n+       *  the comparison is nonzero returns it, otherwise the shorter\n+       *  one is ordered first.\n       */\n       int\n       compare(size_type __pos, size_type __n1, const _CharT* __s) const;\n \n       /**\n        *  @brief  Compare substring against a character %array.\n-       *  @param pos1  Index of first character of substring.\n-       *  @param n1  Number of characters in substring.\n-       *  @param s  character %array to compare against.\n-       *  @param n2  Number of characters of s.\n+       *  @param __pos  Index of first character of substring.\n+       *  @param __n1  Number of characters in substring.\n+       *  @param __s  character %array to compare against.\n+       *  @param __n2  Number of characters of s.\n        *  @return  Integer < 0, 0, or > 0.\n        *\n-       *  Form the substring of this string from the @a n1 characters starting\n-       *  at @a pos1.  Form a string from the first @a n2 characters of @a s.\n-       *  Returns an integer < 0 if this substring is ordered before the string\n-       *  from @a s, 0 if their values are equivalent, or > 0 if this substring\n-       *  is ordered after the string from @a s.   Determines the effective\n-       *  length rlen of the strings to compare as the smallest of the length\n-       *  of the substring and @a n2.  The function then compares the two\n-       *  strings by calling traits::compare(substring.data(),s,rlen).  If the\n-       *  result of the comparison is nonzero returns it, otherwise the shorter\n+       *  Form the substring of this string from the @a __n1\n+       *  characters starting at @a __pos.  Form a string from the\n+       *  first @a __n2 characters of @a __s.  Returns an integer < 0\n+       *  if this substring is ordered before the string from @a __s,\n+       *  0 if their values are equivalent, or > 0 if this substring\n+       *  is ordered after the string from @a __s.  Determines the\n+       *  effective length rlen of the strings to compare as the\n+       *  smallest of the length of the substring and @a __n2.  The\n+       *  function then compares the two strings by calling\n+       *  traits::compare(substring.data(),s,rlen).  If the result of\n+       *  the comparison is nonzero returns it, otherwise the shorter\n        *  one is ordered first.\n        *\n        *  NB: s must have at least n2 characters, &apos;\\\\0&apos; has\n@@ -2308,9 +2340,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   // operator+\n   /**\n    *  @brief  Concatenate two strings.\n-   *  @param lhs  First string.\n-   *  @param rhs  Last string.\n-   *  @return  New string with value of @a lhs followed by @a rhs.\n+   *  @param __lhs  First string.\n+   *  @param __rhs  Last string.\n+   *  @return  New string with value of @a __lhs followed by @a __rhs.\n    */\n   template<typename _CharT, typename _Traits, typename _Alloc>\n     basic_string<_CharT, _Traits, _Alloc>\n@@ -2324,9 +2356,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n   /**\n    *  @brief  Concatenate C string and string.\n-   *  @param lhs  First string.\n-   *  @param rhs  Last string.\n-   *  @return  New string with value of @a lhs followed by @a rhs.\n+   *  @param __lhs  First string.\n+   *  @param __rhs  Last string.\n+   *  @return  New string with value of @a __lhs followed by @a __rhs.\n    */\n   template<typename _CharT, typename _Traits, typename _Alloc>\n     basic_string<_CharT,_Traits,_Alloc>\n@@ -2335,19 +2367,19 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n   /**\n    *  @brief  Concatenate character and string.\n-   *  @param lhs  First string.\n-   *  @param rhs  Last string.\n-   *  @return  New string with @a lhs followed by @a rhs.\n+   *  @param __lhs  First string.\n+   *  @param __rhs  Last string.\n+   *  @return  New string with @a __lhs followed by @a __rhs.\n    */\n   template<typename _CharT, typename _Traits, typename _Alloc>\n     basic_string<_CharT,_Traits,_Alloc>\n     operator+(_CharT __lhs, const basic_string<_CharT,_Traits,_Alloc>& __rhs);\n \n   /**\n    *  @brief  Concatenate string and C string.\n-   *  @param lhs  First string.\n-   *  @param rhs  Last string.\n-   *  @return  New string with @a lhs followed by @a rhs.\n+   *  @param __lhs  First string.\n+   *  @param __rhs  Last string.\n+   *  @return  New string with @a __lhs followed by @a __rhs.\n    */\n   template<typename _CharT, typename _Traits, typename _Alloc>\n     inline basic_string<_CharT, _Traits, _Alloc>\n@@ -2361,9 +2393,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n   /**\n    *  @brief  Concatenate string and character.\n-   *  @param lhs  First string.\n-   *  @param rhs  Last string.\n-   *  @return  New string with @a lhs followed by @a rhs.\n+   *  @param __lhs  First string.\n+   *  @param __rhs  Last string.\n+   *  @return  New string with @a __lhs followed by @a __rhs.\n    */\n   template<typename _CharT, typename _Traits, typename _Alloc>\n     inline basic_string<_CharT, _Traits, _Alloc>\n@@ -2429,9 +2461,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   // operator ==\n   /**\n    *  @brief  Test equivalence of two strings.\n-   *  @param lhs  First string.\n-   *  @param rhs  Second string.\n-   *  @return  True if @a lhs.compare(@a rhs) == 0.  False otherwise.\n+   *  @param __lhs  First string.\n+   *  @param __rhs  Second string.\n+   *  @return  True if @a __lhs.compare(@a __rhs) == 0.  False otherwise.\n    */\n   template<typename _CharT, typename _Traits, typename _Alloc>\n     inline bool\n@@ -2450,9 +2482,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n   /**\n    *  @brief  Test equivalence of C string and string.\n-   *  @param lhs  C string.\n-   *  @param rhs  String.\n-   *  @return  True if @a rhs.compare(@a lhs) == 0.  False otherwise.\n+   *  @param __lhs  C string.\n+   *  @param __rhs  String.\n+   *  @return  True if @a __rhs.compare(@a __lhs) == 0.  False otherwise.\n    */\n   template<typename _CharT, typename _Traits, typename _Alloc>\n     inline bool\n@@ -2462,9 +2494,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n   /**\n    *  @brief  Test equivalence of string and C string.\n-   *  @param lhs  String.\n-   *  @param rhs  C string.\n-   *  @return  True if @a lhs.compare(@a rhs) == 0.  False otherwise.\n+   *  @param __lhs  String.\n+   *  @param __rhs  C string.\n+   *  @return  True if @a __lhs.compare(@a __rhs) == 0.  False otherwise.\n    */\n   template<typename _CharT, typename _Traits, typename _Alloc>\n     inline bool\n@@ -2475,9 +2507,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   // operator !=\n   /**\n    *  @brief  Test difference of two strings.\n-   *  @param lhs  First string.\n-   *  @param rhs  Second string.\n-   *  @return  True if @a lhs.compare(@a rhs) != 0.  False otherwise.\n+   *  @param __lhs  First string.\n+   *  @param __rhs  Second string.\n+   *  @return  True if @a __lhs.compare(@a __rhs) != 0.  False otherwise.\n    */\n   template<typename _CharT, typename _Traits, typename _Alloc>\n     inline bool\n@@ -2487,9 +2519,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n   /**\n    *  @brief  Test difference of C string and string.\n-   *  @param lhs  C string.\n-   *  @param rhs  String.\n-   *  @return  True if @a rhs.compare(@a lhs) != 0.  False otherwise.\n+   *  @param __lhs  C string.\n+   *  @param __rhs  String.\n+   *  @return  True if @a __rhs.compare(@a __lhs) != 0.  False otherwise.\n    */\n   template<typename _CharT, typename _Traits, typename _Alloc>\n     inline bool\n@@ -2499,9 +2531,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n   /**\n    *  @brief  Test difference of string and C string.\n-   *  @param lhs  String.\n-   *  @param rhs  C string.\n-   *  @return  True if @a lhs.compare(@a rhs) != 0.  False otherwise.\n+   *  @param __lhs  String.\n+   *  @param __rhs  C string.\n+   *  @return  True if @a __lhs.compare(@a __rhs) != 0.  False otherwise.\n    */\n   template<typename _CharT, typename _Traits, typename _Alloc>\n     inline bool\n@@ -2512,9 +2544,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   // operator <\n   /**\n    *  @brief  Test if string precedes string.\n-   *  @param lhs  First string.\n-   *  @param rhs  Second string.\n-   *  @return  True if @a lhs precedes @a rhs.  False otherwise.\n+   *  @param __lhs  First string.\n+   *  @param __rhs  Second string.\n+   *  @return  True if @a __lhs precedes @a __rhs.  False otherwise.\n    */\n   template<typename _CharT, typename _Traits, typename _Alloc>\n     inline bool\n@@ -2524,9 +2556,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n   /**\n    *  @brief  Test if string precedes C string.\n-   *  @param lhs  String.\n-   *  @param rhs  C string.\n-   *  @return  True if @a lhs precedes @a rhs.  False otherwise.\n+   *  @param __lhs  String.\n+   *  @param __rhs  C string.\n+   *  @return  True if @a __lhs precedes @a __rhs.  False otherwise.\n    */\n   template<typename _CharT, typename _Traits, typename _Alloc>\n     inline bool\n@@ -2536,9 +2568,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n   /**\n    *  @brief  Test if C string precedes string.\n-   *  @param lhs  C string.\n-   *  @param rhs  String.\n-   *  @return  True if @a lhs precedes @a rhs.  False otherwise.\n+   *  @param __lhs  C string.\n+   *  @param __rhs  String.\n+   *  @return  True if @a __lhs precedes @a __rhs.  False otherwise.\n    */\n   template<typename _CharT, typename _Traits, typename _Alloc>\n     inline bool\n@@ -2549,9 +2581,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   // operator >\n   /**\n    *  @brief  Test if string follows string.\n-   *  @param lhs  First string.\n-   *  @param rhs  Second string.\n-   *  @return  True if @a lhs follows @a rhs.  False otherwise.\n+   *  @param __lhs  First string.\n+   *  @param __rhs  Second string.\n+   *  @return  True if @a __lhs follows @a __rhs.  False otherwise.\n    */\n   template<typename _CharT, typename _Traits, typename _Alloc>\n     inline bool\n@@ -2561,9 +2593,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n   /**\n    *  @brief  Test if string follows C string.\n-   *  @param lhs  String.\n-   *  @param rhs  C string.\n-   *  @return  True if @a lhs follows @a rhs.  False otherwise.\n+   *  @param __lhs  String.\n+   *  @param __rhs  C string.\n+   *  @return  True if @a __lhs follows @a __rhs.  False otherwise.\n    */\n   template<typename _CharT, typename _Traits, typename _Alloc>\n     inline bool\n@@ -2573,9 +2605,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n   /**\n    *  @brief  Test if C string follows string.\n-   *  @param lhs  C string.\n-   *  @param rhs  String.\n-   *  @return  True if @a lhs follows @a rhs.  False otherwise.\n+   *  @param __lhs  C string.\n+   *  @param __rhs  String.\n+   *  @return  True if @a __lhs follows @a __rhs.  False otherwise.\n    */\n   template<typename _CharT, typename _Traits, typename _Alloc>\n     inline bool\n@@ -2586,9 +2618,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   // operator <=\n   /**\n    *  @brief  Test if string doesn't follow string.\n-   *  @param lhs  First string.\n-   *  @param rhs  Second string.\n-   *  @return  True if @a lhs doesn't follow @a rhs.  False otherwise.\n+   *  @param __lhs  First string.\n+   *  @param __rhs  Second string.\n+   *  @return  True if @a __lhs doesn't follow @a __rhs.  False otherwise.\n    */\n   template<typename _CharT, typename _Traits, typename _Alloc>\n     inline bool\n@@ -2598,9 +2630,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n   /**\n    *  @brief  Test if string doesn't follow C string.\n-   *  @param lhs  String.\n-   *  @param rhs  C string.\n-   *  @return  True if @a lhs doesn't follow @a rhs.  False otherwise.\n+   *  @param __lhs  String.\n+   *  @param __rhs  C string.\n+   *  @return  True if @a __lhs doesn't follow @a __rhs.  False otherwise.\n    */\n   template<typename _CharT, typename _Traits, typename _Alloc>\n     inline bool\n@@ -2610,9 +2642,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n   /**\n    *  @brief  Test if C string doesn't follow string.\n-   *  @param lhs  C string.\n-   *  @param rhs  String.\n-   *  @return  True if @a lhs doesn't follow @a rhs.  False otherwise.\n+   *  @param __lhs  C string.\n+   *  @param __rhs  String.\n+   *  @return  True if @a __lhs doesn't follow @a __rhs.  False otherwise.\n    */\n   template<typename _CharT, typename _Traits, typename _Alloc>\n     inline bool\n@@ -2623,9 +2655,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   // operator >=\n   /**\n    *  @brief  Test if string doesn't precede string.\n-   *  @param lhs  First string.\n-   *  @param rhs  Second string.\n-   *  @return  True if @a lhs doesn't precede @a rhs.  False otherwise.\n+   *  @param __lhs  First string.\n+   *  @param __rhs  Second string.\n+   *  @return  True if @a __lhs doesn't precede @a __rhs.  False otherwise.\n    */\n   template<typename _CharT, typename _Traits, typename _Alloc>\n     inline bool\n@@ -2635,9 +2667,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n   /**\n    *  @brief  Test if string doesn't precede C string.\n-   *  @param lhs  String.\n-   *  @param rhs  C string.\n-   *  @return  True if @a lhs doesn't precede @a rhs.  False otherwise.\n+   *  @param __lhs  String.\n+   *  @param __rhs  C string.\n+   *  @return  True if @a __lhs doesn't precede @a __rhs.  False otherwise.\n    */\n   template<typename _CharT, typename _Traits, typename _Alloc>\n     inline bool\n@@ -2647,9 +2679,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n   /**\n    *  @brief  Test if C string doesn't precede string.\n-   *  @param lhs  C string.\n-   *  @param rhs  String.\n-   *  @return  True if @a lhs doesn't precede @a rhs.  False otherwise.\n+   *  @param __lhs  C string.\n+   *  @param __rhs  String.\n+   *  @return  True if @a __lhs doesn't precede @a __rhs.  False otherwise.\n    */\n   template<typename _CharT, typename _Traits, typename _Alloc>\n     inline bool\n@@ -2659,10 +2691,10 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n   /**\n    *  @brief  Swap contents of two strings.\n-   *  @param lhs  First string.\n-   *  @param rhs  Second string.\n+   *  @param __lhs  First string.\n+   *  @param __rhs  Second string.\n    *\n-   *  Exchanges the contents of @a lhs and @a rhs in constant time.\n+   *  Exchanges the contents of @a __lhs and @a __rhs in constant time.\n    */\n   template<typename _CharT, typename _Traits, typename _Alloc>\n     inline void\n@@ -2672,14 +2704,15 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n   /**\n    *  @brief  Read stream into a string.\n-   *  @param is  Input stream.\n-   *  @param str  Buffer to store into.\n+   *  @param __is  Input stream.\n+   *  @param __str  Buffer to store into.\n    *  @return  Reference to the input stream.\n    *\n-   *  Stores characters from @a is into @a str until whitespace is found, the\n-   *  end of the stream is encountered, or str.max_size() is reached.  If\n-   *  is.width() is non-zero, that is the limit on the number of characters\n-   *  stored into @a str.  Any previous contents of @a str are erased.\n+   *  Stores characters from @a __is into @a __str until whitespace is\n+   *  found, the end of the stream is encountered, or str.max_size()\n+   *  is reached.  If is.width() is non-zero, that is the limit on the\n+   *  number of characters stored into @a __str.  Any previous\n+   *  contents of @a __str are erased.\n    */\n   template<typename _CharT, typename _Traits, typename _Alloc>\n     basic_istream<_CharT, _Traits>&\n@@ -2692,11 +2725,11 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n   /**\n    *  @brief  Write string to a stream.\n-   *  @param os  Output stream.\n-   *  @param str  String to write out.\n+   *  @param __os  Output stream.\n+   *  @param __str  String to write out.\n    *  @return  Reference to the output stream.\n    *\n-   *  Output characters of @a str into os following the same rules as for\n+   *  Output characters of @a __str into os following the same rules as for\n    *  writing a C string.\n    */\n   template<typename _CharT, typename _Traits, typename _Alloc>\n@@ -2711,16 +2744,17 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n   /**\n    *  @brief  Read a line from stream into a string.\n-   *  @param is  Input stream.\n-   *  @param str  Buffer to store into.\n-   *  @param delim  Character marking end of line.\n+   *  @param __is  Input stream.\n+   *  @param __str  Buffer to store into.\n+   *  @param __delim  Character marking end of line.\n    *  @return  Reference to the input stream.\n    *\n-   *  Stores characters from @a is into @a str until @a delim is found, the\n-   *  end of the stream is encountered, or str.max_size() is reached.  If\n-   *  is.width() is non-zero, that is the limit on the number of characters\n-   *  stored into @a str.  Any previous contents of @a str are erased.  If @a\n-   *  delim was encountered, it is extracted but not stored into @a str.\n+   *  Stores characters from @a __is into @a __str until @a __delim is\n+   *  found, the end of the stream is encountered, or str.max_size()\n+   *  is reached.  If is.width() is non-zero, that is the limit on the\n+   *  number of characters stored into @a __str.  Any previous\n+   *  contents of @a __str are erased.  If @a __delim was encountered,\n+   *  it is extracted but not stored into @a __str.\n    */\n   template<typename _CharT, typename _Traits, typename _Alloc>\n     basic_istream<_CharT, _Traits>&\n@@ -2729,16 +2763,16 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n   /**\n    *  @brief  Read a line from stream into a string.\n-   *  @param is  Input stream.\n-   *  @param str  Buffer to store into.\n+   *  @param __is  Input stream.\n+   *  @param __str  Buffer to store into.\n    *  @return  Reference to the input stream.\n    *\n-   *  Stores characters from is into @a str until &apos;\\n&apos; is\n+   *  Stores characters from is into @a __str until &apos;\\n&apos; is\n    *  found, the end of the stream is encountered, or str.max_size()\n-   *  is reached.  If is.width() is non-zero, that is the limit on the\n-   *  number of characters stored into @a str.  Any previous contents\n-   *  of @a str are erased.  If end of line was encountered, it is\n-   *  extracted but not stored into @a str.\n+   *  is reached.  If __is.width() is non-zero, that is the limit on\n+   *  the number of characters stored into @a __str.  Any previous\n+   *  contents of @a __str are erased.  If end of line was\n+   *  encountered, it is extracted but not stored into @a __str.\n    */\n   template<typename _CharT, typename _Traits, typename _Alloc>\n     inline basic_istream<_CharT, _Traits>&"}, {"sha": "2570f4c6104052f150f1fe13b6f3081d6a26d04d", "filename": "libstdc++-v3/include/bits/codecvt.h", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fcodecvt.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fcodecvt.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fcodecvt.h?ref=93c66bc68a2554cbb2ba11f90944314af378d16b", "patch": "@@ -104,13 +104,13 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *  output, returns codecvt_base::partial.  Otherwise the\n        *  conversion failed and codecvt_base::error is returned.\n        *\n-       *  @param  state  Persistent conversion state data.\n-       *  @param  from  Start of input.\n-       *  @param  from_end  End of input.\n-       *  @param  from_next  Returns start of unconverted data.\n-       *  @param  to  Start of output buffer.\n-       *  @param  to_end  End of output buffer.\n-       *  @param  to_next  Returns start of unused output area.\n+       *  @param  __state  Persistent conversion state data.\n+       *  @param  __from  Start of input.\n+       *  @param  __from_end  End of input.\n+       *  @param  __from_next  Returns start of unconverted data.\n+       *  @param  __to  Start of output buffer.\n+       *  @param  __to_end  End of output buffer.\n+       *  @param  __to_next  Returns start of unused output area.\n        *  @return  codecvt_base::result.\n       */\n       result\n@@ -146,10 +146,10 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *  output has insufficient space, returns codecvt_base::partial.\n        *  Otherwise the reset failed and codecvt_base::error is returned.\n        *\n-       *  @param  state  Persistent conversion state data.\n-       *  @param  to  Start of output buffer.\n-       *  @param  to_end  End of output buffer.\n-       *  @param  to_next  Returns start of unused output area.\n+       *  @param  __state  Persistent conversion state data.\n+       *  @param  __to  Start of output buffer.\n+       *  @param  __to_end  End of output buffer.\n+       *  @param  __to_next  Returns start of unused output area.\n        *  @return  codecvt_base::result.\n       */\n       result\n@@ -184,13 +184,13 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *  output, returns codecvt_base::partial.  Otherwise the\n        *  conversion failed and codecvt_base::error is returned.\n        *\n-       *  @param  state  Persistent conversion state data.\n-       *  @param  from  Start of input.\n-       *  @param  from_end  End of input.\n-       *  @param  from_next  Returns start of unconverted data.\n-       *  @param  to  Start of output buffer.\n-       *  @param  to_end  End of output buffer.\n-       *  @param  to_next  Returns start of unused output area.\n+       *  @param  __state  Persistent conversion state data.\n+       *  @param  __from  Start of input.\n+       *  @param  __from_end  End of input.\n+       *  @param  __from_next  Returns start of unconverted data.\n+       *  @param  __to  Start of output buffer.\n+       *  @param  __to_end  End of output buffer.\n+       *  @param  __to_next  Returns start of unused output area.\n        *  @return  codecvt_base::result.\n       */\n       result"}, {"sha": "b612424396e772ae354b7a8f39b5238fbb86b43b", "filename": "libstdc++-v3/include/bits/forward_list.h", "status": "modified", "additions": 107, "deletions": 107, "changes": 214, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fforward_list.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fforward_list.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fforward_list.h?ref=93c66bc68a2554cbb2ba11f90944314af378d16b", "patch": "@@ -435,7 +435,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief  Creates a %forward_list with no elements.\n-       *  @param  al  An allocator object.\n+       *  @param  __al  An allocator object.\n        */\n       explicit\n       forward_list(const _Alloc& __al = _Alloc())\n@@ -444,27 +444,27 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief  Copy constructor with allocator argument.\n-       *  @param  list  Input list to copy.\n-       *  @param  al    An allocator object.\n+       *  @param  __list  Input list to copy.\n+       *  @param  __al    An allocator object.\n        */\n       forward_list(const forward_list& __list, const _Alloc& __al)\n       : _Base(__list, __al)\n       { }\n \n       /**\n        *  @brief  Move constructor with allocator argument.\n-       *  @param  list  Input list to move.\n-       *  @param  al    An allocator object.\n+       *  @param  __list  Input list to move.\n+       *  @param  __al    An allocator object.\n        */\n       forward_list(forward_list&& __list, const _Alloc& __al)\n       : _Base(std::move(__list), __al)\n       { }\n \n       /**\n        *  @brief  Creates a %forward_list with default constructed elements.\n-       *  @param  n  The number of elements to initially create.\n+       *  @param  __n  The number of elements to initially create.\n        *\n-       *  This constructor creates the %forward_list with @a n default\n+       *  This constructor creates the %forward_list with @a __n default\n        *  constructed elements.\n        */\n       explicit\n@@ -474,12 +474,12 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief  Creates a %forward_list with copies of an exemplar element.\n-       *  @param  n      The number of elements to initially create.\n-       *  @param  value  An element to copy.\n-       *  @param  al     An allocator object.\n+       *  @param  __n      The number of elements to initially create.\n+       *  @param  __value  An element to copy.\n+       *  @param  __al     An allocator object.\n        *\n-       *  This constructor fills the %forward_list with @a n copies of @a\n-       *  value.\n+       *  This constructor fills the %forward_list with @a __n copies of\n+       *  @a __value.\n        */\n       forward_list(size_type __n, const _Tp& __value,\n                    const _Alloc& __al = _Alloc())\n@@ -488,13 +488,13 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief  Builds a %forward_list from a range.\n-       *  @param  first  An input iterator.\n-       *  @param  last   An input iterator.\n-       *  @param  al     An allocator object.\n+       *  @param  __first  An input iterator.\n+       *  @param  __last   An input iterator.\n+       *  @param  __al     An allocator object.\n        *\n        *  Create a %forward_list consisting of copies of the elements from\n-       *  [@a first,@a last).  This is linear in N (where N is\n-       *  distance(@a first,@a last)).\n+       *  [@a __first,@a __last).  This is linear in N (where N is\n+       *  distance(@a __first,@a __last)).\n        */\n       template<typename _InputIterator>\n         forward_list(_InputIterator __first, _InputIterator __last,\n@@ -508,35 +508,35 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief  The %forward_list copy constructor.\n-       *  @param  list  A %forward_list of identical element and allocator\n+       *  @param  __list  A %forward_list of identical element and allocator\n        *                types.\n        *\n        *  The newly-created %forward_list uses a copy of the allocation\n-       *  object used by @a list.\n+       *  object used by @a __list.\n        */\n       forward_list(const forward_list& __list)\n       : _Base(__list._M_get_Node_allocator())\n       { _M_initialize_dispatch(__list.begin(), __list.end(), __false_type()); }\n \n       /**\n        *  @brief  The %forward_list move constructor.\n-       *  @param  list  A %forward_list of identical element and allocator\n+       *  @param  __list  A %forward_list of identical element and allocator\n        *                types.\n        *\n        *  The newly-created %forward_list contains the exact contents of @a\n-       *  forward_list. The contents of @a list are a valid, but unspecified\n+       *  forward_list. The contents of @a __list are a valid, but unspecified\n        *  %forward_list.\n        */\n       forward_list(forward_list&& __list) noexcept\n       : _Base(std::move(__list)) { }\n \n       /**\n        *  @brief  Builds a %forward_list from an initializer_list\n-       *  @param  il  An initializer_list of value_type.\n-       *  @param  al  An allocator object.\n+       *  @param  __il  An initializer_list of value_type.\n+       *  @param  __al  An allocator object.\n        *\n        *  Create a %forward_list consisting of copies of the elements\n-       *  in the initializer_list @a il.  This is linear in il.size().\n+       *  in the initializer_list @a __il.  This is linear in __il.size().\n        */\n       forward_list(std::initializer_list<_Tp> __il,\n                    const _Alloc& __al = _Alloc())\n@@ -551,22 +551,22 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief  The %forward_list assignment operator.\n-       *  @param  list  A %forward_list of identical element and allocator\n+       *  @param  __list  A %forward_list of identical element and allocator\n        *                types.\n        *\n-       *  All the elements of @a list are copied, but unlike the copy\n+       *  All the elements of @a __list are copied, but unlike the copy\n        *  constructor, the allocator object is not copied.\n        */\n       forward_list&\n       operator=(const forward_list& __list);\n \n       /**\n        *  @brief  The %forward_list move assignment operator.\n-       *  @param  list  A %forward_list of identical element and allocator\n+       *  @param  __list  A %forward_list of identical element and allocator\n        *                types.\n        *\n-       *  The contents of @a list are moved into this %forward_list\n-       *  (without copying). @a list is a valid, but unspecified\n+       *  The contents of @a __list are moved into this %forward_list\n+       *  (without copying). @a __list is a valid, but unspecified\n        *  %forward_list\n        */\n       forward_list&\n@@ -581,11 +581,11 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief  The %forward_list initializer list assignment operator.\n-       *  @param  il  An initializer_list of value_type.\n+       *  @param  __il  An initializer_list of value_type.\n        *\n        *  Replace the contents of the %forward_list with copies of the\n-       *  elements in the initializer_list @a il.  This is linear in\n-       *  il.size().\n+       *  elements in the initializer_list @a __il.  This is linear in\n+       *  __il.size().\n        */\n       forward_list&\n       operator=(std::initializer_list<_Tp> __il)\n@@ -596,11 +596,11 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief  Assigns a range to a %forward_list.\n-       *  @param  first  An input iterator.\n-       *  @param  last   An input iterator.\n+       *  @param  __first  An input iterator.\n+       *  @param  __last   An input iterator.\n        *\n        *  This function fills a %forward_list with copies of the elements\n-       *  in the range [@a first,@a last).\n+       *  in the range [@a __first,@a __last).\n        *\n        *  Note that the assignment completely changes the %forward_list and\n        *  that the resulting %forward_list's size is the same as the number\n@@ -616,10 +616,10 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief  Assigns a given value to a %forward_list.\n-       *  @param  n  Number of elements to be assigned.\n-       *  @param  val  Value to be assigned.\n+       *  @param  __n  Number of elements to be assigned.\n+       *  @param  __val  Value to be assigned.\n        *\n-       *  This function fills a %forward_list with @a n copies of the given\n+       *  This function fills a %forward_list with @a __n copies of the given\n        *  value.  Note that the assignment completely changes the\n        *  %forward_list and that the resulting %forward_list's size is the\n        *  same as the number of elements assigned.  Old data may be lost.\n@@ -633,10 +633,10 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief  Assigns an initializer_list to a %forward_list.\n-       *  @param  il  An initializer_list of value_type.\n+       *  @param  __il  An initializer_list of value_type.\n        *\n        *  Replace the contents of the %forward_list with copies of the\n-       *  elements in the initializer_list @a il.  This is linear in\n+       *  elements in the initializer_list @a __il.  This is linear in\n        *  il.size().\n        */\n       void\n@@ -776,7 +776,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n       /**\n        *  @brief  Constructs object in %forward_list at the front of the\n        *          list.\n-       *  @param  args  Arguments.\n+       *  @param  __args  Arguments.\n        *\n        *  This function will insert an object of type Tp constructed\n        *  with Tp(std::forward<Args>(args)...) at the front of the list\n@@ -792,7 +792,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief  Add data to the front of the %forward_list.\n-       *  @param  val  Data to be added.\n+       *  @param  __val  Data to be added.\n        *\n        *  This is a typical stack operation.  The function creates an\n        *  element at the front of the %forward_list and assigns the given\n@@ -830,8 +830,8 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n       /**\n        *  @brief  Constructs object in %forward_list after the specified\n        *          iterator.\n-       *  @param  pos  A const_iterator into the %forward_list.\n-       *  @param  args  Arguments.\n+       *  @param  __pos  A const_iterator into the %forward_list.\n+       *  @param  __args  Arguments.\n        *  @return  An iterator that points to the inserted data.\n        *\n        *  This function will insert an object of type T constructed\n@@ -849,8 +849,8 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n       /**\n        *  @brief  Inserts given value into %forward_list after specified\n        *          iterator.\n-       *  @param  pos  An iterator into the %forward_list.\n-       *  @param  val  Data to be inserted.\n+       *  @param  __pos  An iterator into the %forward_list.\n+       *  @param  __val  Data to be inserted.\n        *  @return  An iterator that points to the inserted data.\n        *\n        *  This function will insert a copy of the given value after\n@@ -872,9 +872,9 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n       /**\n        *  @brief  Inserts a number of copies of given data into the\n        *          %forward_list.\n-       *  @param  pos  An iterator into the %forward_list.\n-       *  @param  n  Number of elements to be inserted.\n-       *  @param  val  Data to be inserted.\n+       *  @param  __pos  An iterator into the %forward_list.\n+       *  @param  __n  Number of elements to be inserted.\n+       *  @param  __val  Data to be inserted.\n        *  @return  An iterator pointing to the last inserted copy of\n        *           @a val or @a pos if @a n == 0.\n        *\n@@ -889,15 +889,15 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief  Inserts a range into the %forward_list.\n-       *  @param  position  An iterator into the %forward_list.\n-       *  @param  first  An input iterator.\n-       *  @param  last   An input iterator.\n+       *  @param  __pos  An iterator into the %forward_list.\n+       *  @param  __first  An input iterator.\n+       *  @param  __last   An input iterator.\n        *  @return  An iterator pointing to the last inserted element or\n-       *           @a pos if @a first == @a last.\n+       *           @a __pos if @a __first == @a __last.\n        *\n-       *  This function will insert copies of the data in the range [@a\n-       *  first,@a last) into the %forward_list after the location specified\n-       *  by @a pos.\n+       *  This function will insert copies of the data in the range\n+       *  [@a __first,@a __last) into the %forward_list after the\n+       *  location specified by @a __pos.\n        *\n        *  This operation is linear in the number of elements inserted and\n        *  does not invalidate iterators and references.\n@@ -910,14 +910,14 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n       /**\n        *  @brief  Inserts the contents of an initializer_list into\n        *          %forward_list after the specified iterator.\n-       *  @param  pos  An iterator into the %forward_list.\n-       *  @param  il  An initializer_list of value_type.\n+       *  @param  __pos  An iterator into the %forward_list.\n+       *  @param  __il  An initializer_list of value_type.\n        *  @return  An iterator pointing to the last inserted element\n-       *           or @a pos if @a il is empty.\n+       *           or @a __pos if @a __il is empty.\n        *\n        *  This function will insert copies of the data in the\n-       *  initializer_list @a il into the %forward_list before the location\n-       *  specified by @a pos.\n+       *  initializer_list @a __il into the %forward_list before the location\n+       *  specified by @a __pos.\n        *\n        *  This operation is linear in the number of elements inserted and\n        *  does not invalidate iterators and references.\n@@ -928,7 +928,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n       /**\n        *  @brief  Removes the element pointed to by the iterator following\n        *          @c pos.\n-       *  @param  pos  Iterator pointing before element to be erased.\n+       *  @param  __pos  Iterator pointing before element to be erased.\n        *  @return  An iterator pointing to the element following the one\n        *           that was erased, or end() if no such element exists.\n        *\n@@ -949,14 +949,14 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief  Remove a range of elements.\n-       *  @param  pos  Iterator pointing before the first element to be\n-       *               erased.\n-       *  @param  last  Iterator pointing to one past the last element to be\n-       *                erased.\n-       *  @return  @last.\n+       *  @param  __pos  Iterator pointing before the first element to be\n+       *                 erased.\n+       *  @param  __last  Iterator pointing to one past the last element to be\n+       *                  erased.\n+       *  @return  @ __last.\n        *\n-       *  This function will erase the elements in the range @a\n-       *  (pos,last) and shorten the %forward_list accordingly.\n+       *  This function will erase the elements in the range\n+       *  @a (__pos,__last) and shorten the %forward_list accordingly.\n        *\n        *  This operation is linear time in the size of the range and only\n        *  invalidates iterators/references to the element being removed.\n@@ -974,8 +974,8 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief  Swaps data with another %forward_list.\n-       *  @param  list  A %forward_list of the same element and allocator\n-       *                types.\n+       *  @param  __list  A %forward_list of the same element and allocator\n+       *                  types.\n        *\n        *  This exchanges the elements between two lists in constant\n        *  time.  Note that the global std::swap() function is\n@@ -990,7 +990,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n       /**\n        *  @brief Resizes the %forward_list to the specified number of\n        *         elements.\n-       *  @param sz Number of elements the %forward_list should contain.\n+       *  @param __sz Number of elements the %forward_list should contain.\n        *\n        *  This function will %resize the %forward_list to the specified\n        *  number of elements.  If the number is smaller than the\n@@ -1004,8 +1004,8 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n       /**\n        *  @brief Resizes the %forward_list to the specified number of\n        *         elements.\n-       *  @param sz Number of elements the %forward_list should contain.\n-       *  @param val Data with which new elements should be populated.\n+       *  @param __sz Number of elements the %forward_list should contain.\n+       *  @param __val Data with which new elements should be populated.\n        *\n        *  This function will %resize the %forward_list to the specified\n        *  number of elements.  If the number is smaller than the\n@@ -1032,8 +1032,8 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief  Insert contents of another %forward_list.\n-       *  @param  pos  Iterator referencing the element to insert after.\n-       *  @param  list  Source list.\n+       *  @param  __pos  Iterator referencing the element to insert after.\n+       *  @param  __list  Source list.\n        *\n        *  The elements of @a list are inserted in constant time after\n        *  the element referenced by @a pos.  @a list becomes an empty\n@@ -1050,10 +1050,10 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief  Insert element from another %forward_list.\n-       *  @param  pos  Iterator referencing the element to insert after.\n-       *  @param  list  Source list.\n-       *  @param  i   Iterator referencing the element before the element\n-       *              to move.\n+       *  @param  __pos  Iterator referencing the element to insert after.\n+       *  @param  __list  Source list.\n+       *  @param  __i   Iterator referencing the element before the element\n+       *                to move.\n        *\n        *  Removes the element in list @a list referenced by @a i and\n        *  inserts it into the current list after @a pos.\n@@ -1072,26 +1072,26 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief  Insert range from another %forward_list.\n-       *  @param  pos  Iterator referencing the element to insert after.\n-       *  @param  list  Source list.\n-       *  @param  before  Iterator referencing before the start of range\n-       *                  in list.\n-       *  @param  last  Iterator referencing the end of range in list.\n+       *  @param  __pos  Iterator referencing the element to insert after.\n+       *  @param  __list  Source list.\n+       *  @param  __before  Iterator referencing before the start of range\n+       *                    in list.\n+       *  @param  __last  Iterator referencing the end of range in list.\n        *\n-       *  Removes elements in the range (before,last) and inserts them\n-       *  after @a pos in constant time.\n+       *  Removes elements in the range (__before,__last) and inserts them\n+       *  after @a __pos in constant time.\n        *\n-       *  Undefined if @a pos is in (before,last).\n+       *  Undefined if @a __pos is in (__before,__last).\n        */\n       void\n       splice_after(const_iterator __pos, forward_list&& __list,\n                    const_iterator __before, const_iterator __last);\n \n       /**\n        *  @brief  Remove all elements equal to value.\n-       *  @param  val  The value to remove.\n+       *  @param  __val  The value to remove.\n        *\n-       *  Removes every element in the list equal to @a value.\n+       *  Removes every element in the list equal to @a __val.\n        *  Remaining elements stay in list order.  Note that this\n        *  function only erases the elements, and that if the elements\n        *  themselves are pointers, the pointed-to memory is not\n@@ -1103,7 +1103,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief  Remove all elements satisfying a predicate.\n-       *  @param  pred  Unary predicate function or object.\n+       *  @param  __pred  Unary predicate function or object.\n        *\n        *  Removes every element in the list for which the predicate\n        *  returns true.  Remaining elements stay in list order.  Note\n@@ -1132,7 +1132,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief  Remove consecutive elements satisfying a predicate.\n-       *  @param  binary_pred  Binary predicate function or object.\n+       *  @param  __binary_pred  Binary predicate function or object.\n        *\n        *  For each consecutive set of elements [first,last) that\n        *  satisfy predicate(first,i) where i is an iterator in\n@@ -1148,26 +1148,26 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief  Merge sorted lists.\n-       *  @param  list  Sorted list to merge.\n+       *  @param  __list  Sorted list to merge.\n        *\n        *  Assumes that both @a list and this list are sorted according to\n-       *  operator<().  Merges elements of @a list into this list in\n-       *  sorted order, leaving @a list empty when complete.  Elements in\n-       *  this list precede elements in @a list that are equal.\n+       *  operator<().  Merges elements of @a __list into this list in\n+       *  sorted order, leaving @a __list empty when complete.  Elements in\n+       *  this list precede elements in @a __list that are equal.\n        */\n       void\n       merge(forward_list&& __list)\n       { this->merge(std::move(__list), std::less<_Tp>()); }\n \n       /**\n        *  @brief  Merge sorted lists according to comparison function.\n-       *  @param  list  Sorted list to merge.\n-       *  @param  comp Comparison function defining sort order.\n+       *  @param  __list  Sorted list to merge.\n+       *  @param  __comp Comparison function defining sort order.\n        *\n-       *  Assumes that both @a list and this list are sorted according to\n-       *  comp.  Merges elements of @a list into this list\n-       *  in sorted order, leaving @a list empty when complete.  Elements\n-       *  in this list precede elements in @a list that are equivalent\n+       *  Assumes that both @a __list and this list are sorted according to\n+       *  comp.  Merges elements of @a __list into this list\n+       *  in sorted order, leaving @a __list empty when complete.  Elements\n+       *  in this list precede elements in @a __list that are equivalent\n        *  according to comp().\n        */\n       template<typename _Comp>\n@@ -1235,8 +1235,8 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n   /**\n    *  @brief  Forward list equality comparison.\n-   *  @param  lx  A %forward_list\n-   *  @param  ly  A %forward_list of the same type as @a lx.\n+   *  @param  __lx  A %forward_list\n+   *  @param  __ly  A %forward_list of the same type as @a __lx.\n    *  @return  True iff the size and elements of the forward lists are equal.\n    *\n    *  This is an equivalence relation.  It is linear in the size of the\n@@ -1250,9 +1250,9 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n   /**\n    *  @brief  Forward list ordering relation.\n-   *  @param  lx  A %forward_list.\n-   *  @param  ly  A %forward_list of the same type as @a lx.\n-   *  @return  True iff @a lx is lexicographically less than @a ly.\n+   *  @param  __lx  A %forward_list.\n+   *  @param  __ly  A %forward_list of the same type as @a __lx.\n+   *  @return  True iff @a __lx is lexicographically less than @a __ly.\n    *\n    *  This is a total ordering relation.  It is linear in the size of the\n    *  forward lists.  The elements must be comparable with @c <."}, {"sha": "ab4ccb5f5eef261d73dc6b81565904573fa295c7", "filename": "libstdc++-v3/include/bits/gslice.h", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fgslice.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fgslice.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fgslice.h?ref=93c66bc68a2554cbb2ba11f90944314af378d16b", "patch": "@@ -1,7 +1,7 @@\n // The template and inlines for the -*- C++ -*- gslice class.\n \n-// Copyright (C) 1997, 1998, 1999, 2000, 2001, 2004, 2005, 2006, 2009, 2010\n-// Free Software Foundation, Inc.\n+// Copyright (C) 1997, 1998, 1999, 2000, 2001, 2004, 2005, 2006, 2009, 2010, \n+// 2011 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -74,11 +74,12 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n      *  Constructs a slice with as many dimensions as the length of the @a l\n      *  and @a s arrays.\n      *\n-     *  @param  o  Offset in array of first element.\n-     *  @param  l  Array of dimension lengths.\n-     *  @param  s  Array of dimension strides between array elements.\n+     *  @param  __o  Offset in array of first element.\n+     *  @param  __l  Array of dimension lengths.\n+     *  @param  __s  Array of dimension strides between array elements.\n      */\n-    gslice(size_t, const valarray<size_t>&, const valarray<size_t>&);\n+    gslice(size_t __o, const valarray<size_t>& __l, \n+\t   const valarray<size_t>& __s);\n \n     // XXX: the IS says the copy-ctor and copy-assignment operators are\n     //      synthesized by the compiler but they are just unsuitable"}, {"sha": "ace307cba5359b06ff35f3385e23c8505ab2ae22", "filename": "libstdc++-v3/include/bits/ios_base.h", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fios_base.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fios_base.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fios_base.h?ref=93c66bc68a2554cbb2ba11f90944314af378d16b", "patch": "@@ -427,15 +427,15 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n     /**\n      *  @brief  The type of an event callback function.\n-     *  @param  event  One of the members of the event enum.\n-     *  @param  ios_base  Reference to the ios_base object.\n-     *  @param  int  The integer provided when the callback was registered.\n+     *  @param  __e  One of the members of the event enum.\n+     *  @param  __b  Reference to the ios_base object.\n+     *  @param  __i  The integer provided when the callback was registered.\n      *\n      *  Event callbacks are user defined functions that get called during\n      *  several ios_base and basic_ios functions, specifically imbue(),\n      *  copyfmt(), and ~ios().\n     */\n-    typedef void (*event_callback) (event, ios_base&, int);\n+    typedef void (*event_callback) (event __e, ios_base& __b, int __i);\n \n     /**\n      *  @brief  Add the callback __fn with parameter __index.\n@@ -555,10 +555,10 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n     /**\n      *  @brief  Setting new format flags all at once.\n-     *  @param  fmtfl  The new flags to set.\n+     *  @param  __fmtfl  The new flags to set.\n      *  @return  The previous format control flags.\n      *\n-     *  This function overwrites all the format flags with @a fmtfl.\n+     *  This function overwrites all the format flags with @a __fmtfl.\n     */\n     fmtflags\n     flags(fmtflags __fmtfl)\n@@ -570,7 +570,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n     /**\n      *  @brief  Setting new format flags.\n-     *  @param  fmtfl  Additional flags to set.\n+     *  @param  __fmtfl  Additional flags to set.\n      *  @return  The previous format control flags.\n      *\n      *  This function sets additional flags in format control.  Flags that\n@@ -586,8 +586,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n     /**\n      *  @brief  Setting new format flags.\n-     *  @param  fmtfl  Additional flags to set.\n-     *  @param  mask  The flags mask for @a fmtfl.\n+     *  @param  __fmtfl  Additional flags to set.\n+     *  @param  __mask  The flags mask for @a fmtfl.\n      *  @return  The previous format control flags.\n      *\n      *  This function clears @a mask in the format flags, then sets\n@@ -604,9 +604,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n     /**\n      *  @brief  Clearing format flags.\n-     *  @param  mask  The flags to unset.\n+     *  @param  __mask  The flags to unset.\n      *\n-     *  This function clears @a mask in the format flags.\n+     *  This function clears @a __mask in the format flags.\n     */\n     void\n     unsetf(fmtflags __mask)\n@@ -625,7 +625,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n     /**\n      *  @brief  Changing flags.\n-     *  @param  prec  The new precision value.\n+     *  @param  __prec  The new precision value.\n      *  @return  The previous value of precision().\n     */\n     streamsize\n@@ -648,7 +648,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n     /**\n      *  @brief  Changing flags.\n-     *  @param  wide  The new width value.\n+     *  @param  __wide  The new width value.\n      *  @return  The previous value of width().\n     */\n     streamsize\n@@ -662,7 +662,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     // [27.4.2.4] ios_base static members\n     /**\n      *  @brief  Interaction with the standard C I/O objects.\n-     *  @param  sync  Whether to synchronize or not.\n+     *  @param  __sync  Whether to synchronize or not.\n      *  @return  True if the standard streams were previously synchronized.\n      *\n      *  The synchronization referred to is @e only that between the standard\n@@ -676,7 +676,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     // [27.4.2.3] ios_base locale functions\n     /**\n      *  @brief  Setting a new locale.\n-     *  @param  loc  The new locale.\n+     *  @param  __loc  The new locale.\n      *  @return  The previous locale.\n      *\n      *  Sets the new locale for this stream, and then invokes each callback"}, {"sha": "88bbf691c2ef57b8ee8ed5c1af799722df02a8ec", "filename": "libstdc++-v3/include/bits/locale_classes.h", "status": "modified", "additions": 55, "deletions": 56, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_classes.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_classes.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_classes.h?ref=93c66bc68a2554cbb2ba11f90944314af378d16b", "patch": "@@ -123,7 +123,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n      *\n      *  Constructs a copy of @a other.\n      *\n-     *  @param  other  The locale to copy.\n+     *  @param  __other  The locale to copy.\n     */\n     locale(const locale& __other) throw();\n \n@@ -132,8 +132,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n      *\n      *  Constructs a copy of the named C library locale.\n      *\n-     *  @param  s  Name of the locale to construct.\n-     *  @throw  std::runtime_error if s is null or an undefined locale.\n+     *  @param  __s  Name of the locale to construct.\n+     *  @throw  std::runtime_error if __s is null or an undefined locale.\n     */\n     explicit\n     locale(const char* __s);\n@@ -145,10 +145,10 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n      *  cat are replaced with those from the locale named by @a s.  If base is\n      *  named, this locale instance will also be named.\n      *\n-     *  @param  base  The locale to copy.\n-     *  @param  s  Name of the locale to use facets from.\n-     *  @param  cat  Set of categories defining the facets to use from s.\n-     *  @throw  std::runtime_error if s is null or an undefined locale.\n+     *  @param  __base  The locale to copy.\n+     *  @param  __s  Name of the locale to use facets from.\n+     *  @param  __cat  Set of categories defining the facets to use from __s.\n+     *  @throw  std::runtime_error if __s is null or an undefined locale.\n     */\n     locale(const locale& __base, const char* __s, category __cat);\n \n@@ -159,21 +159,22 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n      *  cat are replaced with those from the locale @a add.  If @a base and @a\n      *  add are named, this locale instance will also be named.\n      *\n-     *  @param  base  The locale to copy.\n-     *  @param  add  The locale to use facets from.\n-     *  @param  cat  Set of categories defining the facets to use from add.\n+     *  @param  __base  The locale to copy.\n+     *  @param  __add  The locale to use facets from.\n+     *  @param  __cat  Set of categories defining the facets to use from add.\n     */\n     locale(const locale& __base, const locale& __add, category __cat);\n \n     /**\n      *  @brief  Construct locale with another facet.\n      *\n-     *  Constructs a copy of the locale @a other.  The facet @f is added to\n-     *  @other, replacing an existing facet of type Facet if there is one.  If\n-     *  @f is null, this locale is a copy of @a other.\n+     *  Constructs a copy of the locale @a __other.  The facet @a __f\n+     *  is added to @a __other, replacing an existing facet of type\n+     *  Facet if there is one.  If @a __f is null, this locale is a\n+     *  copy of @a __other.\n      *\n-     *  @param  other  The locale to copy.\n-     *  @param  f  The facet to add in.\n+     *  @param  __other  The locale to copy.\n+     *  @param  __f  The facet to add in.\n     */\n     template<typename _Facet>\n       locale(const locale& __other, _Facet* __f);\n@@ -186,7 +187,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n      *\n      *  Set this locale to be a copy of @a other.\n      *\n-     *  @param  other  The locale to copy.\n+     *  @param  __other  The locale to copy.\n      *  @return  A reference to this locale.\n     */\n     const locale&\n@@ -199,10 +200,10 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n      *  existing facet of type Facet from the locale @a other into the new\n      *  locale.\n      *\n-     *  @param  Facet  The facet type to copy from other\n-     *  @param  other  The locale to copy from.\n+     *  @tparam  _Facet  The facet type to copy from other\n+     *  @param  __other  The locale to copy from.\n      *  @return  Newly constructed locale.\n-     *  @throw  std::runtime_error if other has no facet of type Facet.\n+     *  @throw  std::runtime_error if __other has no facet of type _Facet.\n     */\n     template<typename _Facet>\n       locale\n@@ -219,7 +220,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     /**\n      *  @brief  Locale equality.\n      *\n-     *  @param  other  The locale to compare against.\n+     *  @param  __other  The locale to compare against.\n      *  @return  True if other and this refer to the same locale instance, are\n      *\t\t copies, or have the same name.  False otherwise.\n     */\n@@ -229,8 +230,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     /**\n      *  @brief  Locale inequality.\n      *\n-     *  @param  other  The locale to compare against.\n-     *  @return  ! (*this == other)\n+     *  @param  __other  The locale to compare against.\n+     *  @return  ! (*this == __other)\n     */\n     bool\n     operator!=(const locale& __other) const throw()\n@@ -247,9 +248,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n      *  std::sort(v.begin(), v.end(), loc);\n      *  @endcode\n      *\n-     *  @param  s1  First string to compare.\n-     *  @param  s2  Second string to compare.\n-     *  @return  True if collate<Char> facet compares s1 < s2, else false.\n+     *  @param  __s1  First string to compare.\n+     *  @param  __s2  Second string to compare.\n+     *  @return  True if collate<_Char> facet compares __s1 < __s2, else false.\n     */\n     template<typename _Char, typename _Traits, typename _Alloc>\n       bool\n@@ -264,11 +265,11 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n      *  copy of the previous global locale.  If the argument has a name, it\n      *  will also call std::setlocale(LC_ALL, loc.name()).\n      *\n-     *  @param  locale  The new locale to make global.\n+     *  @param  __loc  The new locale to make global.\n      *  @return  Copy of the old global locale.\n     */\n     static locale\n-    global(const locale&);\n+    global(const locale& __loc);\n \n     /**\n      *  @brief  Return reference to the C locale.\n@@ -365,7 +366,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n      *  facet is destroyed when the last referencing locale is destroyed.\n      *  Otherwise the facet will never be destroyed.\n      *\n-     *  @param refs  The initial value for reference count.\n+     *  @param __refs  The initial value for reference count.\n     */\n     explicit\n     facet(size_t __refs = 0) throw() : _M_refcount(__refs ? 1 : 0)\n@@ -576,9 +577,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n    *  provided as the template parameter.  Facets derived from the facet\n    *  parameter will also return true.\n    *\n-   *  @param  Facet  The facet type to test the presence of.\n-   *  @param  locale  The locale to test.\n-   *  @return  true if locale contains a facet of type Facet, else false.\n+   *  @tparam  _Facet  The facet type to test the presence of.\n+   *  @param  __loc  The locale to test.\n+   *  @return  true if __loc contains a facet of type _Facet, else false.\n   */\n   template<typename _Facet>\n     bool\n@@ -592,10 +593,10 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n    *  there is a suitable facet to return.  It throws std::bad_cast if the\n    *  locale doesn't contain a facet of type Facet.\n    *\n-   *  @param  Facet  The facet type to access.\n-   *  @param  locale  The locale to use.\n+   *  @tparam  _Facet  The facet type to access.\n+   *  @param  __loc  The locale to use.\n    *  @return  Reference to facet of type Facet.\n-   *  @throw  std::bad_cast if locale doesn't contain a facet of type Facet.\n+   *  @throw  std::bad_cast if __loc doesn't contain a facet of type _Facet.\n   */\n   template<typename _Facet>\n     const _Facet&\n@@ -639,7 +640,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *\n        *  This is the constructor provided by the standard.\n        *\n-       *  @param refs  Passed to the base facet class.\n+       *  @param __refs  Passed to the base facet class.\n       */\n       explicit\n       collate(size_t __refs = 0)\n@@ -652,8 +653,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *  This is a constructor for use by the library itself to set up new\n        *  locales.\n        *\n-       *  @param cloc  The C locale.\n-       *  @param refs  Passed to the base facet class.\n+       *  @param __cloc  The C locale.\n+       *  @param __refs  Passed to the base facet class.\n       */\n       explicit\n       collate(__c_locale __cloc, size_t __refs = 0)\n@@ -666,10 +667,10 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *  This function compares two strings and returns the result by calling\n        *  collate::do_compare().\n        *\n-       *  @param lo1  Start of string 1.\n-       *  @param hi1  End of string 1.\n-       *  @param lo2  Start of string 2.\n-       *  @param hi2  End of string 2.\n+       *  @param __lo1  Start of string 1.\n+       *  @param __hi1  End of string 1.\n+       *  @param __lo2  Start of string 2.\n+       *  @param __hi2  End of string 2.\n        *  @return  1 if string1 > string2, -1 if string1 < string2, else 0.\n       */\n       int\n@@ -687,8 +688,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *  locales, it may replace two chars with one, change a char for\n        *  another, etc.  It does so by returning collate::do_transform().\n        *\n-       *  @param lo  Start of string.\n-       *  @param hi  End of string.\n+       *  @param __lo  Start of string.\n+       *  @param __hi  End of string.\n        *  @return  Transformed string_type.\n       */\n       string_type\n@@ -701,8 +702,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *  This function computes and returns a hash on the input string.  It\n        *  does so by returning collate::do_hash().\n        *\n-       *  @param lo  Start of string.\n-       *  @param hi  End of string.\n+       *  @param __lo  Start of string.\n+       *  @param __hi  End of string.\n        *  @return  Hash value.\n       */\n       long\n@@ -728,10 +729,10 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *  This function is a hook for derived classes to change the value\n        *  returned.  @see compare().\n        *\n-       *  @param lo1  Start of string 1.\n-       *  @param hi1  End of string 1.\n-       *  @param lo2  Start of string 2.\n-       *  @param hi2  End of string 2.\n+       *  @param __lo1  Start of string 1.\n+       *  @param __hi1  End of string 1.\n+       *  @param __lo2  Start of string 2.\n+       *  @param __hi2  End of string 2.\n        *  @return  1 if string1 > string2, -1 if string1 < string2, else 0.\n       */\n       virtual int\n@@ -744,11 +745,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *  This function is a hook for derived classes to change the value\n        *  returned.\n        *\n-       *  @param lo1  Start of string 1.\n-       *  @param hi1  End of string 1.\n-       *  @param lo2  Start of string 2.\n-       *  @param hi2  End of string 2.\n-       *  @return  1 if string1 > string2, -1 if string1 < string2, else 0.\n+       *  @param __lo  Start.\n+       *  @param __hi  End.\n+       *  @return  transformed string.\n       */\n       virtual string_type\n       do_transform(const _CharT* __lo, const _CharT* __hi) const;\n@@ -759,8 +758,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *  This function computes and returns a hash on the input string.  This\n        *  function is a hook for derived classes to change the value returned.\n        *\n-       *  @param lo  Start of string.\n-       *  @param hi  End of string.\n+       *  @param __lo  Start of string.\n+       *  @param __hi  End of string.\n        *  @return  Hash value.\n       */\n       virtual long"}, {"sha": "3b3139f9a824750ba9eb874e2aaa5e3c03bb5017", "filename": "libstdc++-v3/include/bits/locale_facets.h", "status": "modified", "additions": 309, "deletions": 310, "changes": 619, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.h?ref=93c66bc68a2554cbb2ba11f90944314af378d16b", "patch": "@@ -152,12 +152,13 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       /**\n        *  @brief  Test char_type classification.\n        *\n-       *  This function finds a mask M for @a c and compares it to mask @a m.\n-       *  It does so by returning the value of ctype<char_type>::do_is().\n+       *  This function finds a mask M for @a __c and compares it to\n+       *  mask @a __m.  It does so by returning the value of\n+       *  ctype<char_type>::do_is().\n        *\n-       *  @param c  The char_type to compare the mask of.\n-       *  @param m  The mask to compare against.\n-       *  @return  (M & m) != 0.\n+       *  @param __c  The char_type to compare the mask of.\n+       *  @param __m  The mask to compare against.\n+       *  @return  (M & __m) != 0.\n       */\n       bool\n       is(mask __m, char_type __c) const\n@@ -171,10 +172,10 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *  as the char array.  It does so by returning the value of\n        *  ctype<char_type>::do_is().\n        *\n-       *  @param lo  Pointer to start of range.\n-       *  @param hi  Pointer to end of range.\n-       *  @param vec  Pointer to an array of mask storage.\n-       *  @return  @a hi.\n+       *  @param __lo  Pointer to start of range.\n+       *  @param __hi  Pointer to end of range.\n+       *  @param __vec  Pointer to an array of mask storage.\n+       *  @return  @a __hi.\n       */\n       const char_type*\n       is(const char_type *__lo, const char_type *__hi, mask *__vec) const\n@@ -187,10 +188,10 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *  [lo,hi) for which is(m,c) is true.  It does so by returning\n        *  ctype<char_type>::do_scan_is().\n        *\n-       *  @param m  The mask to compare against.\n-       *  @param lo  Pointer to start of range.\n-       *  @param hi  Pointer to end of range.\n-       *  @return  Pointer to matching char_type if found, else @a hi.\n+       *  @param __m  The mask to compare against.\n+       *  @param __lo  Pointer to start of range.\n+       *  @param __hi  Pointer to end of range.\n+       *  @return  Pointer to matching char_type if found, else @a __hi.\n       */\n       const char_type*\n       scan_is(mask __m, const char_type* __lo, const char_type* __hi) const\n@@ -203,10 +204,10 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *  [lo,hi) for which is(m,c) is false.  It does so by returning\n        *  ctype<char_type>::do_scan_not().\n        *\n-       *  @param m  The mask to compare against.\n-       *  @param lo  Pointer to first char in range.\n-       *  @param hi  Pointer to end of range.\n-       *  @return  Pointer to non-matching char if found, else @a hi.\n+       *  @param __m  The mask to compare against.\n+       *  @param __lo  Pointer to first char in range.\n+       *  @param __hi  Pointer to end of range.\n+       *  @return  Pointer to non-matching char if found, else @a __hi.\n       */\n       const char_type*\n       scan_not(mask __m, const char_type* __lo, const char_type* __hi) const\n@@ -219,8 +220,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *  If not possible (for example, '2'), returns the argument.  It does\n        *  so by returning ctype<char_type>::do_toupper().\n        *\n-       *  @param c  The char_type to convert.\n-       *  @return  The uppercase char_type if convertible, else @a c.\n+       *  @param __c  The char_type to convert.\n+       *  @return  The uppercase char_type if convertible, else @a __c.\n       */\n       char_type\n       toupper(char_type __c) const\n@@ -233,9 +234,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *  uppercase if possible.  Other elements remain untouched.  It does so\n        *  by returning ctype<char_type>:: do_toupper(lo, hi).\n        *\n-       *  @param lo  Pointer to start of range.\n-       *  @param hi  Pointer to end of range.\n-       *  @return  @a hi.\n+       *  @param __lo  Pointer to start of range.\n+       *  @param __hi  Pointer to end of range.\n+       *  @return  @a __hi.\n       */\n       const char_type*\n       toupper(char_type *__lo, const char_type* __hi) const\n@@ -248,8 +249,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *  not possible (for example, '2'), returns the argument.  It does so\n        *  by returning ctype<char_type>::do_tolower(c).\n        *\n-       *  @param c  The char_type to convert.\n-       *  @return  The lowercase char_type if convertible, else @a c.\n+       *  @param __c  The char_type to convert.\n+       *  @return  The lowercase char_type if convertible, else @a __c.\n       */\n       char_type\n       tolower(char_type __c) const\n@@ -258,13 +259,13 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       /**\n        *  @brief  Convert array to lowercase.\n        *\n-       *  This function converts each char_type in the range [lo,hi) to\n+       *  This function converts each char_type in the range [__lo,__hi) to\n        *  lowercase if possible.  Other elements remain untouched.  It does so\n-       *  by returning ctype<char_type>:: do_tolower(lo, hi).\n+       *  by returning ctype<char_type>:: do_tolower(__lo, __hi).\n        *\n-       *  @param lo  Pointer to start of range.\n-       *  @param hi  Pointer to end of range.\n-       *  @return  @a hi.\n+       *  @param __lo  Pointer to start of range.\n+       *  @param __hi  Pointer to end of range.\n+       *  @return  @a __hi.\n       */\n       const char_type*\n       tolower(char_type* __lo, const char_type* __hi) const\n@@ -280,7 +281,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *  Note: this is not what you want for codepage conversions.  See\n        *  codecvt for that.\n        *\n-       *  @param c  The char to convert.\n+       *  @param __c  The char to convert.\n        *  @return  The converted char_type.\n       */\n       char_type\n@@ -297,10 +298,10 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *  Note: this is not what you want for codepage conversions.  See\n        *  codecvt for that.\n        *\n-       *  @param lo  Pointer to start of range.\n-       *  @param hi  Pointer to end of range.\n-       *  @param to  Pointer to the destination array.\n-       *  @return  @a hi.\n+       *  @param __lo  Pointer to start of range.\n+       *  @param __hi  Pointer to end of range.\n+       *  @param __to  Pointer to the destination array.\n+       *  @return  @a __hi.\n       */\n       const char*\n       widen(const char* __lo, const char* __hi, char_type* __to) const\n@@ -312,13 +313,13 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *  This function converts the char_type to char using the simplest\n        *  reasonable transformation.  If the conversion fails, dfault is\n        *  returned instead.  It does so by returning\n-       *  ctype<char_type>::do_narrow(c).\n+       *  ctype<char_type>::do_narrow(__c).\n        *\n        *  Note: this is not what you want for codepage conversions.  See\n        *  codecvt for that.\n        *\n-       *  @param c  The char_type to convert.\n-       *  @param dfault  Char to return if conversion fails.\n+       *  @param __c  The char_type to convert.\n+       *  @param __dfault  Char to return if conversion fails.\n        *  @return  The converted char.\n       */\n       char\n@@ -332,20 +333,20 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *  simplest reasonable transformation and writes the results to the\n        *  destination array.  For any char_type in the input that cannot be\n        *  converted, @a dfault is used instead.  It does so by returning\n-       *  ctype<char_type>::do_narrow(lo, hi, dfault, to).\n+       *  ctype<char_type>::do_narrow(__lo, __hi, __dfault, __to).\n        *\n        *  Note: this is not what you want for codepage conversions.  See\n        *  codecvt for that.\n        *\n-       *  @param lo  Pointer to start of range.\n-       *  @param hi  Pointer to end of range.\n-       *  @param dfault  Char to use if conversion fails.\n-       *  @param to  Pointer to the destination array.\n-       *  @return  @a hi.\n+       *  @param __lo  Pointer to start of range.\n+       *  @param __hi  Pointer to end of range.\n+       *  @param __dfault  Char to use if conversion fails.\n+       *  @param __to  Pointer to the destination array.\n+       *  @return  @a __hi.\n       */\n       const char_type*\n       narrow(const char_type* __lo, const char_type* __hi,\n-\t      char __dfault, char *__to) const\n+\t      char __dfault, char* __to) const\n       { return this->do_narrow(__lo, __hi, __dfault, __to); }\n \n     protected:\n@@ -364,9 +365,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *  classifying.  do_is() must always return the same result for the\n        *  same input.\n        *\n-       *  @param c  The char_type to find the mask of.\n-       *  @param m  The mask to compare against.\n-       *  @return  (M & m) != 0.\n+       *  @param __c  The char_type to find the mask of.\n+       *  @param __m  The mask to compare against.\n+       *  @return  (M & __m) != 0.\n       */\n       virtual bool\n       do_is(mask __m, char_type __c) const = 0;\n@@ -382,10 +383,10 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *  classifying.  do_is() must always return the same result for the\n        *  same input.\n        *\n-       *  @param lo  Pointer to start of range.\n-       *  @param hi  Pointer to end of range.\n-       *  @param vec  Pointer to an array of mask storage.\n-       *  @return  @a hi.\n+       *  @param __lo  Pointer to start of range.\n+       *  @param __hi  Pointer to end of range.\n+       *  @param __vec  Pointer to an array of mask storage.\n+       *  @return  @a __hi.\n       */\n       virtual const char_type*\n       do_is(const char_type* __lo, const char_type* __hi,\n@@ -395,16 +396,16 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *  @brief  Find char_type matching mask\n        *\n        *  This function searches for and returns the first char_type c in\n-       *  [lo,hi) for which is(m,c) is true.\n+       *  [__lo,__hi) for which is(__m,c) is true.\n        *\n        *  do_scan_is() is a hook for a derived facet to change the behavior of\n        *  match searching.  do_is() must always return the same result for the\n        *  same input.\n        *\n-       *  @param m  The mask to compare against.\n-       *  @param lo  Pointer to start of range.\n-       *  @param hi  Pointer to end of range.\n-       *  @return  Pointer to a matching char_type if found, else @a hi.\n+       *  @param __m  The mask to compare against.\n+       *  @param __lo  Pointer to start of range.\n+       *  @param __hi  Pointer to end of range.\n+       *  @return  Pointer to a matching char_type if found, else @a __hi.\n       */\n       virtual const char_type*\n       do_scan_is(mask __m, const char_type* __lo,\n@@ -420,10 +421,10 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *  match searching.  do_is() must always return the same result for the\n        *  same input.\n        *\n-       *  @param m  The mask to compare against.\n-       *  @param lo  Pointer to start of range.\n-       *  @param hi  Pointer to end of range.\n-       *  @return  Pointer to a non-matching char_type if found, else @a hi.\n+       *  @param __m  The mask to compare against.\n+       *  @param __lo  Pointer to start of range.\n+       *  @param __hi  Pointer to end of range.\n+       *  @return  Pointer to a non-matching char_type if found, else @a __hi.\n       */\n       virtual const char_type*\n       do_scan_not(mask __m, const char_type* __lo,\n@@ -440,25 +441,25 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *  uppercasing.  do_toupper() must always return the same result for\n        *  the same input.\n        *\n-       *  @param c  The char_type to convert.\n-       *  @return  The uppercase char_type if convertible, else @a c.\n+       *  @param __c  The char_type to convert.\n+       *  @return  The uppercase char_type if convertible, else @a __c.\n       */\n       virtual char_type\n-      do_toupper(char_type) const = 0;\n+      do_toupper(char_type __c) const = 0;\n \n       /**\n        *  @brief  Convert array to uppercase.\n        *\n-       *  This virtual function converts each char_type in the range [lo,hi)\n+       *  This virtual function converts each char_type in the range [__lo,__hi)\n        *  to uppercase if possible.  Other elements remain untouched.\n        *\n        *  do_toupper() is a hook for a derived facet to change the behavior of\n        *  uppercasing.  do_toupper() must always return the same result for\n        *  the same input.\n        *\n-       *  @param lo  Pointer to start of range.\n-       *  @param hi  Pointer to end of range.\n-       *  @return  @a hi.\n+       *  @param __lo  Pointer to start of range.\n+       *  @param __hi  Pointer to end of range.\n+       *  @return  @a __hi.\n       */\n       virtual const char_type*\n       do_toupper(char_type* __lo, const char_type* __hi) const = 0;\n@@ -473,25 +474,25 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *  lowercasing.  do_tolower() must always return the same result for\n        *  the same input.\n        *\n-       *  @param c  The char_type to convert.\n-       *  @return  The lowercase char_type if convertible, else @a c.\n+       *  @param __c  The char_type to convert.\n+       *  @return  The lowercase char_type if convertible, else @a __c.\n       */\n       virtual char_type\n-      do_tolower(char_type) const = 0;\n+      do_tolower(char_type __c) const = 0;\n \n       /**\n        *  @brief  Convert array to lowercase.\n        *\n-       *  This virtual function converts each char_type in the range [lo,hi)\n+       *  This virtual function converts each char_type in the range [__lo,__hi)\n        *  to lowercase if possible.  Other elements remain untouched.\n        *\n        *  do_tolower() is a hook for a derived facet to change the behavior of\n        *  lowercasing.  do_tolower() must always return the same result for\n        *  the same input.\n        *\n-       *  @param lo  Pointer to start of range.\n-       *  @param hi  Pointer to end of range.\n-       *  @return  @a hi.\n+       *  @param __lo  Pointer to start of range.\n+       *  @param __hi  Pointer to end of range.\n+       *  @return  @a __hi.\n       */\n       virtual const char_type*\n       do_tolower(char_type* __lo, const char_type* __hi) const = 0;\n@@ -509,11 +510,11 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *  Note: this is not what you want for codepage conversions.  See\n        *  codecvt for that.\n        *\n-       *  @param c  The char to convert.\n+       *  @param __c  The char to convert.\n        *  @return  The converted char_type\n       */\n       virtual char_type\n-      do_widen(char) const = 0;\n+      do_widen(char __c) const = 0;\n \n       /**\n        *  @brief  Widen char array\n@@ -528,14 +529,13 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *  Note: this is not what you want for codepage conversions.  See\n        *  codecvt for that.\n        *\n-       *  @param lo  Pointer to start range.\n-       *  @param hi  Pointer to end of range.\n-       *  @param to  Pointer to the destination array.\n-       *  @return  @a hi.\n+       *  @param __lo  Pointer to start range.\n+       *  @param __hi  Pointer to end of range.\n+       *  @param __to  Pointer to the destination array.\n+       *  @return  @a __hi.\n       */\n       virtual const char*\n-      do_widen(const char* __lo, const char* __hi,\n-\t       char_type* __dest) const = 0;\n+      do_widen(const char* __lo, const char* __hi, char_type* __to) const = 0;\n \n       /**\n        *  @brief  Narrow char_type to char\n@@ -551,20 +551,21 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *  Note: this is not what you want for codepage conversions.  See\n        *  codecvt for that.\n        *\n-       *  @param c  The char_type to convert.\n-       *  @param dfault  Char to return if conversion fails.\n+       *  @param __c  The char_type to convert.\n+       *  @param __dfault  Char to return if conversion fails.\n        *  @return  The converted char.\n       */\n       virtual char\n-      do_narrow(char_type, char __dfault) const = 0;\n+      do_narrow(char_type __c, char __dfault) const = 0;\n \n       /**\n        *  @brief  Narrow char_type array to char\n        *\n-       *  This virtual function converts each char_type in the range [lo,hi) to\n-       *  char using the simplest reasonable transformation and writes the\n-       *  results to the destination array.  For any element in the input that\n-       *  cannot be converted, @a dfault is used instead.\n+       *  This virtual function converts each char_type in the range\n+       *  [__lo,__hi) to char using the simplest reasonable\n+       *  transformation and writes the results to the destination\n+       *  array.  For any element in the input that cannot be\n+       *  converted, @a __dfault is used instead.\n        *\n        *  do_narrow() is a hook for a derived facet to change the behavior of\n        *  narrowing.  do_narrow() must always return the same result for the\n@@ -573,15 +574,15 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *  Note: this is not what you want for codepage conversions.  See\n        *  codecvt for that.\n        *\n-       *  @param lo  Pointer to start of range.\n-       *  @param hi  Pointer to end of range.\n-       *  @param dfault  Char to use if conversion fails.\n-       *  @param to  Pointer to the destination array.\n-       *  @return  @a hi.\n+       *  @param __lo  Pointer to start of range.\n+       *  @param __hi  Pointer to end of range.\n+       *  @param __dfault  Char to use if conversion fails.\n+       *  @param __to  Pointer to the destination array.\n+       *  @return  @a __hi.\n       */\n       virtual const char_type*\n       do_narrow(const char_type* __lo, const char_type* __hi,\n-\t\tchar __dfault, char* __dest) const = 0;\n+\t\tchar __dfault, char* __to) const = 0;\n     };\n \n   /**\n@@ -656,7 +657,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       virtual const char_type*\n       do_narrow(const char_type* __lo, const char_type* __hi,\n-\t\tchar __dfault, char* __dest) const;\n+\t\tchar __dfault, char* __to) const;\n     };\n \n   template<typename _CharT>\n@@ -703,10 +704,10 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *\n        *  This is the constructor provided by the standard.\n        *\n-       *  @param table If non-zero, table is used as the per-char mask.\n+       *  @param __table If non-zero, table is used as the per-char mask.\n        *               Else classic_table() is used.\n-       *  @param del   If true, passes ownership of table to this facet.\n-       *  @param refs  Passed to the base facet class.\n+       *  @param __del   If true, passes ownership of table to this facet.\n+       *  @param __refs  Passed to the base facet class.\n       */\n       explicit\n       ctype(const mask* __table = 0, bool __del = false, size_t __refs = 0);\n@@ -716,10 +717,10 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *\n        *  This constructor is used to construct the initial C locale facet.\n        *\n-       *  @param cloc  Handle to C locale data.\n-       *  @param table If non-zero, table is used as the per-char mask.\n-       *  @param del   If true, passes ownership of table to this facet.\n-       *  @param refs  Passed to the base facet class.\n+       *  @param __cloc  Handle to C locale data.\n+       *  @param __table If non-zero, table is used as the per-char mask.\n+       *  @param __del   If true, passes ownership of table to this facet.\n+       *  @param __refs  Passed to the base facet class.\n       */\n       explicit\n       ctype(__c_locale __cloc, const mask* __table = 0, bool __del = false,\n@@ -728,11 +729,11 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       /**\n        *  @brief  Test char classification.\n        *\n-       *  This function compares the mask table[c] to @a m.\n+       *  This function compares the mask table[c] to @a __m.\n        *\n-       *  @param c  The char to compare the mask of.\n-       *  @param m  The mask to compare against.\n-       *  @return  True if m & table[c] is true, false otherwise.\n+       *  @param __c  The char to compare the mask of.\n+       *  @param __m  The mask to compare against.\n+       *  @return  True if __m & table[__c] is true, false otherwise.\n       */\n       inline bool\n       is(mask __m, char __c) const;\n@@ -744,10 +745,10 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *  successively writes it to vec.  vec must have as many elements as\n        *  the char array.\n        *\n-       *  @param lo  Pointer to start of range.\n-       *  @param hi  Pointer to end of range.\n-       *  @param vec  Pointer to an array of mask storage.\n-       *  @return  @a hi.\n+       *  @param __lo  Pointer to start of range.\n+       *  @param __hi  Pointer to end of range.\n+       *  @param __vec  Pointer to an array of mask storage.\n+       *  @return  @a __hi.\n       */\n       inline const char*\n       is(const char* __lo, const char* __hi, mask* __vec) const;\n@@ -758,10 +759,10 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *  This function searches for and returns the first char in [lo,hi) for\n        *  which is(m,char) is true.\n        *\n-       *  @param m  The mask to compare against.\n-       *  @param lo  Pointer to start of range.\n-       *  @param hi  Pointer to end of range.\n-       *  @return  Pointer to a matching char if found, else @a hi.\n+       *  @param __m  The mask to compare against.\n+       *  @param __lo  Pointer to start of range.\n+       *  @param __hi  Pointer to end of range.\n+       *  @return  Pointer to a matching char if found, else @a __hi.\n       */\n       inline const char*\n       scan_is(mask __m, const char* __lo, const char* __hi) const;\n@@ -770,12 +771,12 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *  @brief  Find char not matching a mask\n        *\n        *  This function searches for and returns a pointer to the first char\n-       *  in [lo,hi) for which is(m,char) is false.\n+       *  in [__lo,__hi) for which is(m,char) is false.\n        *\n-       *  @param m  The mask to compare against.\n-       *  @param lo  Pointer to start of range.\n-       *  @param hi  Pointer to end of range.\n-       *  @return  Pointer to a non-matching char if found, else @a hi.\n+       *  @param __m  The mask to compare against.\n+       *  @param __lo  Pointer to start of range.\n+       *  @param __hi  Pointer to end of range.\n+       *  @return  Pointer to a non-matching char if found, else @a __hi.\n       */\n       inline const char*\n       scan_not(mask __m, const char* __lo, const char* __hi) const;\n@@ -789,8 +790,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *  toupper() acts as if it returns ctype<char>::do_toupper(c).\n        *  do_toupper() must always return the same result for the same input.\n        *\n-       *  @param c  The char to convert.\n-       *  @return  The uppercase char if convertible, else @a c.\n+       *  @param __c  The char to convert.\n+       *  @return  The uppercase char if convertible, else @a __c.\n       */\n       char_type\n       toupper(char_type __c) const\n@@ -799,15 +800,15 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       /**\n        *  @brief  Convert array to uppercase.\n        *\n-       *  This function converts each char in the range [lo,hi) to uppercase\n+       *  This function converts each char in the range [__lo,__hi) to uppercase\n        *  if possible.  Other chars remain untouched.\n        *\n-       *  toupper() acts as if it returns ctype<char>:: do_toupper(lo, hi).\n+       *  toupper() acts as if it returns ctype<char>:: do_toupper(__lo, __hi).\n        *  do_toupper() must always return the same result for the same input.\n        *\n-       *  @param lo  Pointer to first char in range.\n-       *  @param hi  Pointer to end of range.\n-       *  @return  @a hi.\n+       *  @param __lo  Pointer to first char in range.\n+       *  @param __hi  Pointer to end of range.\n+       *  @return  @a __hi.\n       */\n       const char_type*\n       toupper(char_type *__lo, const char_type* __hi) const\n@@ -819,11 +820,11 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *  This function converts the char argument to lowercase if possible.\n        *  If not possible (for example, '2'), returns the argument.\n        *\n-       *  tolower() acts as if it returns ctype<char>::do_tolower(c).\n+       *  tolower() acts as if it returns ctype<char>::do_tolower(__c).\n        *  do_tolower() must always return the same result for the same input.\n        *\n-       *  @param c  The char to convert.\n-       *  @return  The lowercase char if convertible, else @a c.\n+       *  @param __c  The char to convert.\n+       *  @return  The lowercase char if convertible, else @a __c.\n       */\n       char_type\n       tolower(char_type __c) const\n@@ -835,12 +836,12 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *  This function converts each char in the range [lo,hi) to lowercase\n        *  if possible.  Other chars remain untouched.\n        *\n-       *  tolower() acts as if it returns ctype<char>:: do_tolower(lo, hi).\n+       *  tolower() acts as if it returns ctype<char>:: do_tolower(__lo, __hi).\n        *  do_tolower() must always return the same result for the same input.\n        *\n-       *  @param lo  Pointer to first char in range.\n-       *  @param hi  Pointer to end of range.\n-       *  @return  @a hi.\n+       *  @param __lo  Pointer to first char in range.\n+       *  @param __hi  Pointer to end of range.\n+       *  @return  @a __hi.\n       */\n       const char_type*\n       tolower(char_type* __lo, const char_type* __hi) const\n@@ -859,7 +860,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *  Note: this is not what you want for codepage conversions.  See\n        *  codecvt for that.\n        *\n-       *  @param c  The char to convert.\n+       *  @param __c  The char to convert.\n        *  @return  The converted character.\n       */\n       char_type\n@@ -884,10 +885,10 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *  Note: this is not what you want for codepage conversions.  See\n        *  codecvt for that.\n        *\n-       *  @param lo  Pointer to first char in range.\n-       *  @param hi  Pointer to end of range.\n-       *  @param to  Pointer to the destination array.\n-       *  @return  @a hi.\n+       *  @param __lo  Pointer to first char in range.\n+       *  @param __hi  Pointer to end of range.\n+       *  @param __to  Pointer to the destination array.\n+       *  @return  @a __hi.\n       */\n       const char*\n       widen(const char* __lo, const char* __hi, char_type* __to) const\n@@ -916,8 +917,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *  Note: this is not what you want for codepage conversions.  See\n        *  codecvt for that.\n        *\n-       *  @param c  The char to convert.\n-       *  @param dfault  Char to return if conversion fails.\n+       *  @param __c  The char to convert.\n+       *  @param __dfault  Char to return if conversion fails.\n        *  @return  The converted character.\n       */\n       char\n@@ -947,15 +948,15 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *  Note: this is not what you want for codepage conversions.  See\n        *  codecvt for that.\n        *\n-       *  @param lo  Pointer to start of range.\n-       *  @param hi  Pointer to end of range.\n-       *  @param dfault  Char to use if conversion fails.\n-       *  @param to  Pointer to the destination array.\n-       *  @return  @a hi.\n+       *  @param __lo  Pointer to start of range.\n+       *  @param __hi  Pointer to end of range.\n+       *  @param __dfault  Char to use if conversion fails.\n+       *  @param __to  Pointer to the destination array.\n+       *  @return  @a __hi.\n       */\n       const char_type*\n       narrow(const char_type* __lo, const char_type* __hi,\n-\t     char __dfault, char *__to) const\n+\t     char __dfault, char* __to) const\n       {\n \tif (__builtin_expect(_M_narrow_ok == 1, true))\n \t  {\n@@ -999,11 +1000,11 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *  uppercasing.  do_toupper() must always return the same result for\n        *  the same input.\n        *\n-       *  @param c  The char to convert.\n-       *  @return  The uppercase char if convertible, else @a c.\n+       *  @param __c  The char to convert.\n+       *  @return  The uppercase char if convertible, else @a __c.\n       */\n       virtual char_type\n-      do_toupper(char_type) const;\n+      do_toupper(char_type __c) const;\n \n       /**\n        *  @brief  Convert array to uppercase.\n@@ -1015,9 +1016,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *  uppercasing.  do_toupper() must always return the same result for\n        *  the same input.\n        *\n-       *  @param lo  Pointer to start of range.\n-       *  @param hi  Pointer to end of range.\n-       *  @return  @a hi.\n+       *  @param __lo  Pointer to start of range.\n+       *  @param __hi  Pointer to end of range.\n+       *  @return  @a __hi.\n       */\n       virtual const char_type*\n       do_toupper(char_type* __lo, const char_type* __hi) const;\n@@ -1032,11 +1033,11 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *  lowercasing.  do_tolower() must always return the same result for\n        *  the same input.\n        *\n-       *  @param c  The char to convert.\n-       *  @return  The lowercase char if convertible, else @a c.\n+       *  @param __c  The char to convert.\n+       *  @return  The lowercase char if convertible, else @a __c.\n       */\n       virtual char_type\n-      do_tolower(char_type) const;\n+      do_tolower(char_type __c) const;\n \n       /**\n        *  @brief  Convert array to lowercase.\n@@ -1048,9 +1049,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *  lowercasing.  do_tolower() must always return the same result for\n        *  the same input.\n        *\n-       *  @param lo  Pointer to first char in range.\n-       *  @param hi  Pointer to end of range.\n-       *  @return  @a hi.\n+       *  @param __lo  Pointer to first char in range.\n+       *  @param __hi  Pointer to end of range.\n+       *  @return  @a __hi.\n       */\n       virtual const char_type*\n       do_tolower(char_type* __lo, const char_type* __hi) const;\n@@ -1069,7 +1070,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *  Note: this is not what you want for codepage conversions.  See\n        *  codecvt for that.\n        *\n-       *  @param c  The char to convert.\n+       *  @param __c  The char to convert.\n        *  @return  The converted character.\n       */\n       virtual char_type\n@@ -1090,15 +1091,15 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *  Note: this is not what you want for codepage conversions.  See\n        *  codecvt for that.\n        *\n-       *  @param lo  Pointer to start of range.\n-       *  @param hi  Pointer to end of range.\n-       *  @param to  Pointer to the destination array.\n-       *  @return  @a hi.\n+       *  @param __lo  Pointer to start of range.\n+       *  @param __hi  Pointer to end of range.\n+       *  @param __to  Pointer to the destination array.\n+       *  @return  @a __hi.\n       */\n       virtual const char*\n-      do_widen(const char* __lo, const char* __hi, char_type* __dest) const\n+      do_widen(const char* __lo, const char* __hi, char_type* __to) const\n       {\n-\t__builtin_memcpy(__dest, __lo, __hi - __lo);\n+\t__builtin_memcpy(__to, __lo, __hi - __lo);\n \treturn __hi;\n       }\n \n@@ -1117,12 +1118,12 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *  Note: this is not what you want for codepage conversions.  See\n        *  codecvt for that.\n        *\n-       *  @param c  The char to convert.\n-       *  @param dfault  Char to return if conversion fails.\n+       *  @param __c  The char to convert.\n+       *  @param __dfault  Char to return if conversion fails.\n        *  @return  The converted char.\n       */\n       virtual char\n-      do_narrow(char_type __c, char) const\n+      do_narrow(char_type __c, char __dfault) const\n       { return __c; }\n \n       /**\n@@ -1141,17 +1142,17 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *  Note: this is not what you want for codepage conversions.  See\n        *  codecvt for that.\n        *\n-       *  @param lo  Pointer to start of range.\n-       *  @param hi  Pointer to end of range.\n-       *  @param dfault  Char to use if conversion fails.\n-       *  @param to  Pointer to the destination array.\n-       *  @return  @a hi.\n+       *  @param __lo  Pointer to start of range.\n+       *  @param __hi  Pointer to end of range.\n+       *  @param __dfault  Char to use if conversion fails.\n+       *  @param __to  Pointer to the destination array.\n+       *  @return  @a __hi.\n       */\n       virtual const char_type*\n       do_narrow(const char_type* __lo, const char_type* __hi,\n-\t\tchar, char* __dest) const\n+\t\tchar __dfault, char* __to) const\n       {\n-\t__builtin_memcpy(__dest, __lo, __hi - __lo);\n+\t__builtin_memcpy(__to, __lo, __hi - __lo);\n \treturn __hi;\n       }\n \n@@ -1203,7 +1204,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *\n        *  This is the constructor provided by the standard.\n        *\n-       *  @param refs  Passed to the base facet class.\n+       *  @param __refs  Passed to the base facet class.\n       */\n       explicit\n       ctype(size_t __refs = 0);\n@@ -1213,8 +1214,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *\n        *  This constructor is used to construct the initial C locale facet.\n        *\n-       *  @param cloc  Handle to C locale data.\n-       *  @param refs  Passed to the base facet class.\n+       *  @param __cloc  Handle to C locale data.\n+       *  @param __refs  Passed to the base facet class.\n       */\n       explicit\n       ctype(__c_locale __cloc, size_t __refs = 0);\n@@ -1236,9 +1237,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *  classifying.  do_is() must always return the same result for the\n        *  same input.\n        *\n-       *  @param c  The wchar_t to find the mask of.\n-       *  @param m  The mask to compare against.\n-       *  @return  (M & m) != 0.\n+       *  @param __c  The wchar_t to find the mask of.\n+       *  @param __m  The mask to compare against.\n+       *  @return  (M & __m) != 0.\n       */\n       virtual bool\n       do_is(mask __m, char_type __c) const;\n@@ -1254,10 +1255,10 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *  classifying.  do_is() must always return the same result for the\n        *  same input.\n        *\n-       *  @param lo  Pointer to start of range.\n-       *  @param hi  Pointer to end of range.\n-       *  @param vec  Pointer to an array of mask storage.\n-       *  @return  @a hi.\n+       *  @param __lo  Pointer to start of range.\n+       *  @param __hi  Pointer to end of range.\n+       *  @param __vec  Pointer to an array of mask storage.\n+       *  @return  @a __hi.\n       */\n       virtual const char_type*\n       do_is(const char_type* __lo, const char_type* __hi, mask* __vec) const;\n@@ -1266,16 +1267,16 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *  @brief  Find wchar_t matching mask\n        *\n        *  This function searches for and returns the first wchar_t c in\n-       *  [lo,hi) for which is(m,c) is true.\n+       *  [__lo,__hi) for which is(__m,c) is true.\n        *\n        *  do_scan_is() is a hook for a derived facet to change the behavior of\n        *  match searching.  do_is() must always return the same result for the\n        *  same input.\n        *\n-       *  @param m  The mask to compare against.\n-       *  @param lo  Pointer to start of range.\n-       *  @param hi  Pointer to end of range.\n-       *  @return  Pointer to a matching wchar_t if found, else @a hi.\n+       *  @param __m  The mask to compare against.\n+       *  @param __lo  Pointer to start of range.\n+       *  @param __hi  Pointer to end of range.\n+       *  @return  Pointer to a matching wchar_t if found, else @a __hi.\n       */\n       virtual const char_type*\n       do_scan_is(mask __m, const char_type* __lo, const char_type* __hi) const;\n@@ -1284,16 +1285,16 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *  @brief  Find wchar_t not matching mask\n        *\n        *  This function searches for and returns a pointer to the first\n-       *  wchar_t c of [lo,hi) for which is(m,c) is false.\n+       *  wchar_t c of [__lo,__hi) for which is(__m,c) is false.\n        *\n        *  do_scan_is() is a hook for a derived facet to change the behavior of\n        *  match searching.  do_is() must always return the same result for the\n        *  same input.\n        *\n-       *  @param m  The mask to compare against.\n-       *  @param lo  Pointer to start of range.\n-       *  @param hi  Pointer to end of range.\n-       *  @return  Pointer to a non-matching wchar_t if found, else @a hi.\n+       *  @param __m  The mask to compare against.\n+       *  @param __lo  Pointer to start of range.\n+       *  @param __hi  Pointer to end of range.\n+       *  @return  Pointer to a non-matching wchar_t if found, else @a __hi.\n       */\n       virtual const char_type*\n       do_scan_not(mask __m, const char_type* __lo,\n@@ -1309,11 +1310,11 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *  uppercasing.  do_toupper() must always return the same result for\n        *  the same input.\n        *\n-       *  @param c  The wchar_t to convert.\n-       *  @return  The uppercase wchar_t if convertible, else @a c.\n+       *  @param __c  The wchar_t to convert.\n+       *  @return  The uppercase wchar_t if convertible, else @a __c.\n       */\n       virtual char_type\n-      do_toupper(char_type) const;\n+      do_toupper(char_type __c) const;\n \n       /**\n        *  @brief  Convert array to uppercase.\n@@ -1325,9 +1326,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *  uppercasing.  do_toupper() must always return the same result for\n        *  the same input.\n        *\n-       *  @param lo  Pointer to start of range.\n-       *  @param hi  Pointer to end of range.\n-       *  @return  @a hi.\n+       *  @param __lo  Pointer to start of range.\n+       *  @param __hi  Pointer to end of range.\n+       *  @return  @a __hi.\n       */\n       virtual const char_type*\n       do_toupper(char_type* __lo, const char_type* __hi) const;\n@@ -1342,11 +1343,11 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *  lowercasing.  do_tolower() must always return the same result for\n        *  the same input.\n        *\n-       *  @param c  The wchar_t to convert.\n-       *  @return  The lowercase wchar_t if convertible, else @a c.\n+       *  @param __c  The wchar_t to convert.\n+       *  @return  The lowercase wchar_t if convertible, else @a __c.\n       */\n       virtual char_type\n-      do_tolower(char_type) const;\n+      do_tolower(char_type __c) const;\n \n       /**\n        *  @brief  Convert array to lowercase.\n@@ -1358,9 +1359,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *  lowercasing.  do_tolower() must always return the same result for\n        *  the same input.\n        *\n-       *  @param lo  Pointer to start of range.\n-       *  @param hi  Pointer to end of range.\n-       *  @return  @a hi.\n+       *  @param __lo  Pointer to start of range.\n+       *  @param __hi  Pointer to end of range.\n+       *  @return  @a __hi.\n       */\n       virtual const char_type*\n       do_tolower(char_type* __lo, const char_type* __hi) const;\n@@ -1379,11 +1380,11 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *  Note: this is not what you want for codepage conversions.  See\n        *  codecvt for that.\n        *\n-       *  @param c  The char to convert.\n+       *  @param __c  The char to convert.\n        *  @return  The converted wchar_t.\n       */\n       virtual char_type\n-      do_widen(char) const;\n+      do_widen(char __c) const;\n \n       /**\n        *  @brief  Widen char array to wchar_t array\n@@ -1399,13 +1400,13 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *  Note: this is not what you want for codepage conversions.  See\n        *  codecvt for that.\n        *\n-       *  @param lo  Pointer to start range.\n-       *  @param hi  Pointer to end of range.\n-       *  @param to  Pointer to the destination array.\n-       *  @return  @a hi.\n+       *  @param __lo  Pointer to start range.\n+       *  @param __hi  Pointer to end of range.\n+       *  @param __to  Pointer to the destination array.\n+       *  @return  @a __hi.\n       */\n       virtual const char*\n-      do_widen(const char* __lo, const char* __hi, char_type* __dest) const;\n+      do_widen(const char* __lo, const char* __hi, char_type* __to) const;\n \n       /**\n        *  @brief  Narrow wchar_t to char\n@@ -1423,12 +1424,12 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *  Note: this is not what you want for codepage conversions.  See\n        *  codecvt for that.\n        *\n-       *  @param c  The wchar_t to convert.\n-       *  @param dfault  Char to return if conversion fails.\n+       *  @param __c  The wchar_t to convert.\n+       *  @param __dfault  Char to return if conversion fails.\n        *  @return  The converted char.\n       */\n       virtual char\n-      do_narrow(char_type, char __dfault) const;\n+      do_narrow(char_type __c, char __dfault) const;\n \n       /**\n        *  @brief  Narrow wchar_t array to char array\n@@ -1447,15 +1448,15 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *  Note: this is not what you want for codepage conversions.  See\n        *  codecvt for that.\n        *\n-       *  @param lo  Pointer to start of range.\n-       *  @param hi  Pointer to end of range.\n-       *  @param dfault  Char to use if conversion fails.\n-       *  @param to  Pointer to the destination array.\n-       *  @return  @a hi.\n+       *  @param __lo  Pointer to start of range.\n+       *  @param __hi  Pointer to end of range.\n+       *  @param __dfault  Char to use if conversion fails.\n+       *  @param __to  Pointer to the destination array.\n+       *  @return  @a __hi.\n       */\n       virtual const char_type*\n       do_narrow(const char_type* __lo, const char_type* __hi,\n-\t\tchar __dfault, char* __dest) const;\n+\t\tchar __dfault, char* __to) const;\n \n       // For use at construction time only.\n       void\n@@ -1660,7 +1661,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       /**\n        *  @brief  Numpunct constructor.\n        *\n-       *  @param  refs  Refcount to pass to the base class.\n+       *  @param  __refs  Refcount to pass to the base class.\n        */\n       explicit\n       numpunct(size_t __refs = 0)\n@@ -1673,8 +1674,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *  This is a constructor for use by the library itself to set up the\n        *  predefined locale facets.\n        *\n-       *  @param  cache  __numpunct_cache object.\n-       *  @param  refs  Refcount to pass to the base class.\n+       *  @param  __cache  __numpunct_cache object.\n+       *  @param  __refs  Refcount to pass to the base class.\n        */\n       explicit\n       numpunct(__cache_type* __cache, size_t __refs = 0)\n@@ -1687,8 +1688,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *  This is a constructor for use by the library itself to set up new\n        *  locales.\n        *\n-       *  @param  cloc  The C locale.\n-       *  @param  refs  Refcount to pass to the base class.\n+       *  @param  __cloc  The C locale.\n+       *  @param  __refs  Refcount to pass to the base class.\n        */\n       explicit\n       numpunct(__c_locale __cloc, size_t __refs = 0)\n@@ -1931,7 +1932,7 @@ _GLIBCXX_BEGIN_NAMESPACE_LDBL\n        *\n        *  This is the constructor provided by the standard.\n        *\n-       *  @param refs  Passed to the base facet class.\n+       *  @param __refs  Passed to the base facet class.\n       */\n       explicit\n       num_get(size_t __refs = 0) : facet(__refs) { }\n@@ -1952,11 +1953,11 @@ _GLIBCXX_BEGIN_NAMESPACE_LDBL\n        *  except if the value is 1, sets @a v to true, if the value is 0, sets\n        *  @a v to false, and otherwise set err to ios_base::failbit.\n        *\n-       *  @param  in  Start of input stream.\n-       *  @param  end  End of input stream.\n-       *  @param  io  Source of locale and flags.\n-       *  @param  err  Error flags to set.\n-       *  @param  v  Value to format and insert.\n+       *  @param  __in  Start of input stream.\n+       *  @param  __end  End of input stream.\n+       *  @param  __io  Source of locale and flags.\n+       *  @param  __err  Error flags to set.\n+       *  @param  __v  Value to format and insert.\n        *  @return  Iterator after reading.\n       */\n       iter_type\n@@ -1988,11 +1989,11 @@ _GLIBCXX_BEGIN_NAMESPACE_LDBL\n        *  Otherwise, sets err to ios_base::failbit and leaves @a v unaltered.\n        *  Sets err to ios_base::eofbit if the stream is emptied.\n        *\n-       *  @param  in  Start of input stream.\n-       *  @param  end  End of input stream.\n-       *  @param  io  Source of locale and flags.\n-       *  @param  err  Error flags to set.\n-       *  @param  v  Value to format and insert.\n+       *  @param  __in  Start of input stream.\n+       *  @param  __end  End of input stream.\n+       *  @param  __io  Source of locale and flags.\n+       *  @param  __err  Error flags to set.\n+       *  @param  __v  Value to format and insert.\n        *  @return  Iterator after reading.\n       */\n       iter_type\n@@ -2047,11 +2048,11 @@ _GLIBCXX_BEGIN_NAMESPACE_LDBL\n        *  Otherwise, sets err to ios_base::failbit and leaves @a v unaltered.\n        *  Sets err to ios_base::eofbit if the stream is emptied.\n        *\n-       *  @param  in  Start of input stream.\n-       *  @param  end  End of input stream.\n-       *  @param  io  Source of locale and flags.\n-       *  @param  err  Error flags to set.\n-       *  @param  v  Value to format and insert.\n+       *  @param  __in  Start of input stream.\n+       *  @param  __end  End of input stream.\n+       *  @param  __io  Source of locale and flags.\n+       *  @param  __err  Error flags to set.\n+       *  @param  __v  Value to format and insert.\n        *  @return  Iterator after reading.\n       */\n       iter_type\n@@ -2089,11 +2090,11 @@ _GLIBCXX_BEGIN_NAMESPACE_LDBL\n        *  Otherwise, sets err to ios_base::failbit and leaves @a v unaltered.\n        *  Sets err to ios_base::eofbit if the stream is emptied.\n        *\n-       *  @param  in  Start of input stream.\n-       *  @param  end  End of input stream.\n-       *  @param  io  Source of locale and flags.\n-       *  @param  err  Error flags to set.\n-       *  @param  v  Value to format and insert.\n+       *  @param  __in  Start of input stream.\n+       *  @param  __end  End of input stream.\n+       *  @param  __io  Source of locale and flags.\n+       *  @param  __err  Error flags to set.\n+       *  @param  __v  Value to format and insert.\n        *  @return  Iterator after reading.\n       */\n       iter_type\n@@ -2160,16 +2161,13 @@ _GLIBCXX_BEGIN_NAMESPACE_LDBL\n        *  hook for derived classes to change the value returned.  @see get()\n        *  for more details.\n        *\n-       *  @param  in  Start of input stream.\n-       *  @param  end  End of input stream.\n-       *  @param  io  Source of locale and flags.\n-       *  @param  err  Error flags to set.\n-       *  @param  v  Value to format and insert.\n+       *  @param  __beg  Start of input stream.\n+       *  @param  __end  End of input stream.\n+       *  @param  __io  Source of locale and flags.\n+       *  @param  __err  Error flags to set.\n+       *  @param  __v  Value to format and insert.\n        *  @return  Iterator after reading.\n       */\n-      virtual iter_type\n-      do_get(iter_type, iter_type, ios_base&, ios_base::iostate&, bool&) const;\n-\n       virtual iter_type\n       do_get(iter_type __beg, iter_type __end, ios_base& __io,\n \t     ios_base::iostate& __err, long& __v) const\n@@ -2203,32 +2201,33 @@ _GLIBCXX_BEGIN_NAMESPACE_LDBL\n #endif\n \n       virtual iter_type\n-      do_get(iter_type, iter_type, ios_base&, ios_base::iostate& __err,\n-\t     float&) const;\n+      do_get(iter_type, iter_type, ios_base&, ios_base::iostate&, bool&) const;\n+\n+      virtual iter_type\n+      do_get(iter_type, iter_type, ios_base&, ios_base::iostate&, float&) const;\n \n       virtual iter_type\n-      do_get(iter_type, iter_type, ios_base&, ios_base::iostate& __err,\n+      do_get(iter_type, iter_type, ios_base&, ios_base::iostate&,\n \t     double&) const;\n \n       // XXX GLIBCXX_ABI Deprecated\n #if defined _GLIBCXX_LONG_DOUBLE_COMPAT && defined __LONG_DOUBLE_128__\n       virtual iter_type\n-      __do_get(iter_type, iter_type, ios_base&, ios_base::iostate& __err,\n+      __do_get(iter_type, iter_type, ios_base&, ios_base::iostate&,\n \t       double&) const;\n #else\n       virtual iter_type\n-      do_get(iter_type, iter_type, ios_base&, ios_base::iostate& __err,\n+      do_get(iter_type, iter_type, ios_base&, ios_base::iostate&,\n \t     long double&) const;\n #endif\n \n       virtual iter_type\n-      do_get(iter_type, iter_type, ios_base&, ios_base::iostate& __err,\n-\t     void*&) const;\n+      do_get(iter_type, iter_type, ios_base&, ios_base::iostate&, void*&) const;\n \n       // XXX GLIBCXX_ABI Deprecated\n #if defined _GLIBCXX_LONG_DOUBLE_COMPAT && defined __LONG_DOUBLE_128__\n       virtual iter_type\n-      do_get(iter_type, iter_type, ios_base&, ios_base::iostate& __err,\n+      do_get(iter_type, iter_type, ios_base&, ios_base::iostate&,\n \t     long double&) const;\n #endif\n       //@}\n@@ -2269,7 +2268,7 @@ _GLIBCXX_BEGIN_NAMESPACE_LDBL\n        *\n        *  This is the constructor provided by the standard.\n        *\n-       *  @param refs  Passed to the base facet class.\n+       *  @param __refs  Passed to the base facet class.\n       */\n       explicit\n       num_put(size_t __refs = 0) : facet(__refs) { }\n@@ -2283,15 +2282,15 @@ _GLIBCXX_BEGIN_NAMESPACE_LDBL\n        *  If ios_base::boolalpha is set, writes ctype<CharT>::truename() or\n        *  ctype<CharT>::falsename().  Otherwise formats @a v as an int.\n        *\n-       *  @param  s  Stream to write to.\n-       *  @param  io  Source of locale and flags.\n-       *  @param  fill  Char_type to use for filling.\n-       *  @param  v  Value to format and insert.\n+       *  @param  __s  Stream to write to.\n+       *  @param  __io  Source of locale and flags.\n+       *  @param  __fill  Char_type to use for filling.\n+       *  @param  __v  Value to format and insert.\n        *  @return  Iterator after writing.\n       */\n       iter_type\n-      put(iter_type __s, ios_base& __f, char_type __fill, bool __v) const\n-      { return this->do_put(__s, __f, __fill, __v); }\n+      put(iter_type __s, ios_base& __io, char_type __fill, bool __v) const\n+      { return this->do_put(__s, __io, __fill, __v); }\n \n       //@{\n       /**\n@@ -2325,30 +2324,30 @@ _GLIBCXX_BEGIN_NAMESPACE_LDBL\n        *  immediately after either a '+' or '-' or after '0x' or '0X'.\n        *  Otherwise, padding occurs at the beginning.\n        *\n-       *  @param  s  Stream to write to.\n-       *  @param  io  Source of locale and flags.\n-       *  @param  fill  Char_type to use for filling.\n-       *  @param  v  Value to format and insert.\n+       *  @param  __s  Stream to write to.\n+       *  @param  __io  Source of locale and flags.\n+       *  @param  __fill  Char_type to use for filling.\n+       *  @param  __v  Value to format and insert.\n        *  @return  Iterator after writing.\n       */\n       iter_type\n-      put(iter_type __s, ios_base& __f, char_type __fill, long __v) const\n-      { return this->do_put(__s, __f, __fill, __v); }\n+      put(iter_type __s, ios_base& __io, char_type __fill, long __v) const\n+      { return this->do_put(__s, __io, __fill, __v); }\n \n       iter_type\n-      put(iter_type __s, ios_base& __f, char_type __fill,\n+      put(iter_type __s, ios_base& __io, char_type __fill,\n \t  unsigned long __v) const\n-      { return this->do_put(__s, __f, __fill, __v); }\n+      { return this->do_put(__s, __io, __fill, __v); }\n \n #ifdef _GLIBCXX_USE_LONG_LONG\n       iter_type\n-      put(iter_type __s, ios_base& __f, char_type __fill, long long __v) const\n-      { return this->do_put(__s, __f, __fill, __v); }\n+      put(iter_type __s, ios_base& __io, char_type __fill, long long __v) const\n+      { return this->do_put(__s, __io, __fill, __v); }\n \n       iter_type\n-      put(iter_type __s, ios_base& __f, char_type __fill,\n+      put(iter_type __s, ios_base& __io, char_type __fill,\n \t  unsigned long long __v) const\n-      { return this->do_put(__s, __f, __fill, __v); }\n+      { return this->do_put(__s, __io, __fill, __v); }\n #endif\n       //@}\n \n@@ -2388,20 +2387,20 @@ _GLIBCXX_BEGIN_NAMESPACE_LDBL\n        *  immediately after either a '+' or '-' or after '0x' or '0X'.\n        *  Otherwise, padding occurs at the beginning.\n        *\n-       *  @param  s  Stream to write to.\n-       *  @param  io  Source of locale and flags.\n-       *  @param  fill  Char_type to use for filling.\n-       *  @param  v  Value to format and insert.\n+       *  @param  __s  Stream to write to.\n+       *  @param  __io  Source of locale and flags.\n+       *  @param  __fill  Char_type to use for filling.\n+       *  @param  __v  Value to format and insert.\n        *  @return  Iterator after writing.\n       */\n       iter_type\n-      put(iter_type __s, ios_base& __f, char_type __fill, double __v) const\n-      { return this->do_put(__s, __f, __fill, __v); }\n+      put(iter_type __s, ios_base& __io, char_type __fill, double __v) const\n+      { return this->do_put(__s, __io, __fill, __v); }\n \n       iter_type\n-      put(iter_type __s, ios_base& __f, char_type __fill,\n+      put(iter_type __s, ios_base& __io, char_type __fill,\n \t  long double __v) const\n-      { return this->do_put(__s, __f, __fill, __v); }\n+      { return this->do_put(__s, __io, __fill, __v); }\n       //@}\n \n       /**\n@@ -2413,16 +2412,16 @@ _GLIBCXX_BEGIN_NAMESPACE_LDBL\n        *  This function formats @a v as an unsigned long with ios_base::hex\n        *  and ios_base::showbase set.\n        *\n-       *  @param  s  Stream to write to.\n-       *  @param  io  Source of locale and flags.\n-       *  @param  fill  Char_type to use for filling.\n-       *  @param  v  Value to format and insert.\n+       *  @param  __s  Stream to write to.\n+       *  @param  __io  Source of locale and flags.\n+       *  @param  __fill  Char_type to use for filling.\n+       *  @param  __v  Value to format and insert.\n        *  @return  Iterator after writing.\n       */\n       iter_type\n-      put(iter_type __s, ios_base& __f, char_type __fill,\n+      put(iter_type __s, ios_base& __io, char_type __fill,\n \t  const void* __v) const\n-      { return this->do_put(__s, __f, __fill, __v); }\n+      { return this->do_put(__s, __io, __fill, __v); }\n \n     protected:\n       template<typename _ValueT>\n@@ -2461,14 +2460,14 @@ _GLIBCXX_BEGIN_NAMESPACE_LDBL\n        *  inserting them into a stream. This function is a hook for derived\n        *  classes to change the value returned.\n        *\n-       *  @param  s  Stream to write to.\n-       *  @param  io  Source of locale and flags.\n-       *  @param  fill  Char_type to use for filling.\n-       *  @param  v  Value to format and insert.\n+       *  @param  __s  Stream to write to.\n+       *  @param  __io  Source of locale and flags.\n+       *  @param  __fill  Char_type to use for filling.\n+       *  @param  __v  Value to format and insert.\n        *  @return  Iterator after writing.\n       */\n       virtual iter_type\n-      do_put(iter_type, ios_base&, char_type __fill, bool __v) const;\n+      do_put(iter_type __s, ios_base& __io, char_type __fill, bool __v) const;\n \n       virtual iter_type\n       do_put(iter_type __s, ios_base& __io, char_type __fill, long __v) const\n@@ -2492,24 +2491,24 @@ _GLIBCXX_BEGIN_NAMESPACE_LDBL\n #endif\n \n       virtual iter_type\n-      do_put(iter_type, ios_base&, char_type __fill, double __v) const;\n+      do_put(iter_type, ios_base&, char_type, double) const;\n \n       // XXX GLIBCXX_ABI Deprecated\n #if defined _GLIBCXX_LONG_DOUBLE_COMPAT && defined __LONG_DOUBLE_128__\n       virtual iter_type\n-      __do_put(iter_type, ios_base&, char_type __fill, double __v) const;\n+      __do_put(iter_type, ios_base&, char_type, double) const;\n #else\n       virtual iter_type\n-      do_put(iter_type, ios_base&, char_type __fill, long double __v) const;\n+      do_put(iter_type, ios_base&, char_type, long double) const;\n #endif\n \n       virtual iter_type\n-      do_put(iter_type, ios_base&, char_type __fill, const void* __v) const;\n+      do_put(iter_type, ios_base&, char_type, const void*) const;\n \n       // XXX GLIBCXX_ABI Deprecated\n #if defined _GLIBCXX_LONG_DOUBLE_COMPAT && defined __LONG_DOUBLE_128__\n       virtual iter_type\n-      do_put(iter_type, ios_base&, char_type __fill, long double __v) const;\n+      do_put(iter_type, ios_base&, char_type, long double) const;\n #endif\n       //@}\n     };\n@@ -2603,7 +2602,7 @@ _GLIBCXX_END_NAMESPACE_LDBL\n     { return use_facet<ctype<_CharT> >(__loc).tolower(__c); }\n \n _GLIBCXX_END_NAMESPACE_VERSION\n-} // namespace\n+} // namespace std\n \n # include <bits/locale_facets.tcc>\n "}, {"sha": "2309e075c773529723c577d1888438a018e43f2c", "filename": "libstdc++-v3/include/bits/locale_facets_nonio.h", "status": "modified", "additions": 149, "deletions": 182, "changes": 331, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets_nonio.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets_nonio.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets_nonio.h?ref=93c66bc68a2554cbb2ba11f90944314af378d16b", "patch": "@@ -203,8 +203,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *  This is a constructor for use by the library itself to set up new\n        *  locales.\n        *\n-       *  @param cloc  The C locale.\n-       *  @param s  The name of a locale.\n+       *  @param __cloc  The C locale.\n+       *  @param __s  The name of a locale.\n        *  @param refs  Passed to the base facet class.\n       */\n       explicit\n@@ -384,7 +384,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *\n        *  This is the constructor provided by the standard.\n        *\n-       *  @param refs  Passed to the base facet class.\n+       *  @param __refs  Passed to the base facet class.\n       */\n       explicit\n       time_get(size_t __refs = 0)\n@@ -420,11 +420,11 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *  the end, err |= ios_base::failbit.  If parsing reads all the\n        *  characters, err |= ios_base::eofbit.\n        *\n-       *  @param  beg  Start of string to parse.\n-       *  @param  end  End of string to parse.\n-       *  @param  io  Source of the locale.\n-       *  @param  err  Error flags to set.\n-       *  @param  tm  Pointer to struct tm to fill in.\n+       *  @param  __beg  Start of string to parse.\n+       *  @param  __end  End of string to parse.\n+       *  @param  __io  Source of the locale.\n+       *  @param  __err  Error flags to set.\n+       *  @param  __tm  Pointer to struct tm to fill in.\n        *  @return  Iterator to first char beyond time string.\n       */\n       iter_type\n@@ -445,11 +445,11 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *  the end, err |= ios_base::failbit.  If parsing reads all the\n        *  characters, err |= ios_base::eofbit.\n        *\n-       *  @param  beg  Start of string to parse.\n-       *  @param  end  End of string to parse.\n-       *  @param  io  Source of the locale.\n-       *  @param  err  Error flags to set.\n-       *  @param  tm  Pointer to struct tm to fill in.\n+       *  @param  __beg  Start of string to parse.\n+       *  @param  __end  End of string to parse.\n+       *  @param  __io  Source of the locale.\n+       *  @param  __err  Error flags to set.\n+       *  @param  __tm  Pointer to struct tm to fill in.\n        *  @return  Iterator to first char beyond date string.\n       */\n       iter_type\n@@ -473,11 +473,11 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *  If an error occurs before the end, err |= ios_base::failbit.  If\n        *  parsing reads all the characters, err |= ios_base::eofbit.\n        *\n-       *  @param  beg  Start of string to parse.\n-       *  @param  end  End of string to parse.\n-       *  @param  io  Source of the locale.\n-       *  @param  err  Error flags to set.\n-       *  @param  tm  Pointer to struct tm to fill in.\n+       *  @param  __beg  Start of string to parse.\n+       *  @param  __end  End of string to parse.\n+       *  @param  __io  Source of the locale.\n+       *  @param  __err  Error flags to set.\n+       *  @param  __tm  Pointer to struct tm to fill in.\n        *  @return  Iterator to first char beyond weekday name.\n       */\n       iter_type\n@@ -502,11 +502,11 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *  parsing reads all the characters, err |=\n        *  ios_base::eofbit.\n        *\n-       *  @param  beg  Start of string to parse.\n-       *  @param  end  End of string to parse.\n-       *  @param  io  Source of the locale.\n-       *  @param  err  Error flags to set.\n-       *  @param  tm  Pointer to struct tm to fill in.\n+       *  @param  __beg  Start of string to parse.\n+       *  @param  __end  End of string to parse.\n+       *  @param  __io  Source of the locale.\n+       *  @param  __err  Error flags to set.\n+       *  @param  __tm  Pointer to struct tm to fill in.\n        *  @return  Iterator to first char beyond month name.\n       */\n       iter_type\n@@ -528,11 +528,11 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *  If an error occurs before the end, err |= ios_base::failbit.  If\n        *  parsing reads all the characters, err |= ios_base::eofbit.\n        *\n-       *  @param  beg  Start of string to parse.\n-       *  @param  end  End of string to parse.\n-       *  @param  io  Source of the locale.\n-       *  @param  err  Error flags to set.\n-       *  @param  tm  Pointer to struct tm to fill in.\n+       *  @param  __beg  Start of string to parse.\n+       *  @param  __end  End of string to parse.\n+       *  @param  __io  Source of the locale.\n+       *  @param  __err  Error flags to set.\n+       *  @param  __tm  Pointer to struct tm to fill in.\n        *  @return  Iterator to first char beyond year.\n       */\n       iter_type\n@@ -566,11 +566,11 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *  derived classes to change the value returned.  @see get_time() for\n        *  details.\n        *\n-       *  @param  beg  Start of string to parse.\n-       *  @param  end  End of string to parse.\n-       *  @param  io  Source of the locale.\n-       *  @param  err  Error flags to set.\n-       *  @param  tm  Pointer to struct tm to fill in.\n+       *  @param  __beg  Start of string to parse.\n+       *  @param  __end  End of string to parse.\n+       *  @param  __io  Source of the locale.\n+       *  @param  __err  Error flags to set.\n+       *  @param  __tm  Pointer to struct tm to fill in.\n        *  @return  Iterator to first char beyond time string.\n       */\n       virtual iter_type\n@@ -585,11 +585,11 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *  derived classes to change the value returned.  @see get_date() for\n        *  details.\n        *\n-       *  @param  beg  Start of string to parse.\n-       *  @param  end  End of string to parse.\n-       *  @param  io  Source of the locale.\n-       *  @param  err  Error flags to set.\n-       *  @param  tm  Pointer to struct tm to fill in.\n+       *  @param  __beg  Start of string to parse.\n+       *  @param  __end  End of string to parse.\n+       *  @param  __io  Source of the locale.\n+       *  @param  __err  Error flags to set.\n+       *  @param  __tm  Pointer to struct tm to fill in.\n        *  @return  Iterator to first char beyond date string.\n       */\n       virtual iter_type\n@@ -604,11 +604,11 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *  classes to change the value returned.  @see get_weekday() for\n        *  details.\n        *\n-       *  @param  beg  Start of string to parse.\n-       *  @param  end  End of string to parse.\n-       *  @param  io  Source of the locale.\n-       *  @param  err  Error flags to set.\n-       *  @param  tm  Pointer to struct tm to fill in.\n+       *  @param  __beg  Start of string to parse.\n+       *  @param  __end  End of string to parse.\n+       *  @param  __io  Source of the locale.\n+       *  @param  __err  Error flags to set.\n+       *  @param  __tm  Pointer to struct tm to fill in.\n        *  @return  Iterator to first char beyond weekday name.\n       */\n       virtual iter_type\n@@ -623,11 +623,11 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *  classes to change the value returned.  @see get_monthname() for\n        *  details.\n        *\n-       *  @param  beg  Start of string to parse.\n-       *  @param  end  End of string to parse.\n-       *  @param  io  Source of the locale.\n-       *  @param  err  Error flags to set.\n-       *  @param  tm  Pointer to struct tm to fill in.\n+       *  @param  __beg  Start of string to parse.\n+       *  @param  __end  End of string to parse.\n+       *  @param  __io  Source of the locale.\n+       *  @param  __err  Error flags to set.\n+       *  @param  __tm  Pointer to struct tm to fill in.\n        *  @return  Iterator to first char beyond month name.\n       */\n       virtual iter_type\n@@ -642,11 +642,11 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *  hook for derived classes to change the value returned.  @see\n        *  get_year() for details.\n        *\n-       *  @param  beg  Start of string to parse.\n-       *  @param  end  End of string to parse.\n-       *  @param  io  Source of the locale.\n-       *  @param  err  Error flags to set.\n-       *  @param  tm  Pointer to struct tm to fill in.\n+       *  @param  __beg  Start of string to parse.\n+       *  @param  __end  End of string to parse.\n+       *  @param  __io  Source of the locale.\n+       *  @param  __err  Error flags to set.\n+       *  @param  __tm  Pointer to struct tm to fill in.\n        *  @return  Iterator to first char beyond year.\n       */\n       virtual iter_type\n@@ -730,7 +730,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *\n        *  This is the constructor provided by the standard.\n        *\n-       *  @param refs  Passed to the base facet class.\n+       *  @param __refs  Passed to the base facet class.\n       */\n       explicit\n       time_put(size_t __refs = 0)\n@@ -743,12 +743,12 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *  provided format string.  The format string is interpreted as by\n        *  strftime().\n        *\n-       *  @param  s  The stream to write to.\n-       *  @param  io  Source of locale.\n-       *  @param  fill  char_type to use for padding.\n-       *  @param  tm  Struct tm with date and time info to format.\n-       *  @param  beg  Start of format string.\n-       *  @param  end  End of format string.\n+       *  @param  __s  The stream to write to.\n+       *  @param  __io  Source of locale.\n+       *  @param  __fill  char_type to use for padding.\n+       *  @param  __tm  Struct tm with date and time info to format.\n+       *  @param  __beg  Start of format string.\n+       *  @param  __end  End of format string.\n        *  @return  Iterator after writing.\n        */\n       iter_type\n@@ -763,12 +763,12 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *  are interpreted as by strftime().  It does so by returning\n        *  time_put::do_put().\n        *\n-       *  @param  s  The stream to write to.\n-       *  @param  io  Source of locale.\n-       *  @param  fill  char_type to use for padding.\n-       *  @param  tm  Struct tm with date and time info to format.\n-       *  @param  format  Format char.\n-       *  @param  mod  Optional modifier char.\n+       *  @param  __s  The stream to write to.\n+       *  @param  __io  Source of locale.\n+       *  @param  __fill  char_type to use for padding.\n+       *  @param  __tm  Struct tm with date and time info to format.\n+       *  @param  __format  Format char.\n+       *  @param  __mod  Optional modifier char.\n        *  @return  Iterator after writing.\n        */\n       iter_type\n@@ -790,12 +790,12 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *  for derived classes to change the value returned.  @see put() for\n        *  more details.\n        *\n-       *  @param  s  The stream to write to.\n-       *  @param  io  Source of locale.\n-       *  @param  fill  char_type to use for padding.\n-       *  @param  tm  Struct tm with date and time info to format.\n-       *  @param  format  Format char.\n-       *  @param  mod  Optional modifier char.\n+       *  @param  __s  The stream to write to.\n+       *  @param  __io  Source of locale.\n+       *  @param  __fill  char_type to use for padding.\n+       *  @param  __tm  Struct tm with date and time info to format.\n+       *  @param  __format  Format char.\n+       *  @param  __mod  Optional modifier char.\n        *  @return  Iterator after writing.\n        */\n       virtual iter_type\n@@ -957,7 +957,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *\n        *  This is the constructor provided by the standard.\n        *\n-       *  @param refs  Passed to the base facet class.\n+       *  @param __refs  Passed to the base facet class.\n       */\n       explicit\n       moneypunct(size_t __refs = 0)\n@@ -969,8 +969,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *\n        *  This is an internal constructor.\n        *\n-       *  @param cache  Cache for optimization.\n-       *  @param refs  Passed to the base facet class.\n+       *  @param __cache  Cache for optimization.\n+       *  @param __refs  Passed to the base facet class.\n       */\n       explicit\n       moneypunct(__cache_type* __cache, size_t __refs = 0)\n@@ -983,9 +983,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *  This is a constructor for use by the library itself to set up new\n        *  locales.\n        *\n-       *  @param cloc  The C locale.\n-       *  @param s  The name of a locale.\n-       *  @param refs  Passed to the base facet class.\n+       *  @param __cloc  The C locale.\n+       *  @param __s  The name of a locale.\n+       *  @param __refs  Passed to the base facet class.\n       */\n       explicit\n       moneypunct(__c_locale __cloc, const char* __s, size_t __refs = 0)\n@@ -1386,15 +1386,15 @@ _GLIBCXX_BEGIN_NAMESPACE_LDBL\n        *\n        *  This is the constructor provided by the standard.\n        *\n-       *  @param refs  Passed to the base facet class.\n+       *  @param __refs  Passed to the base facet class.\n       */\n       explicit\n       money_get(size_t __refs = 0) : facet(__refs) { }\n \n       /**\n        *  @brief  Read and parse a monetary value.\n        *\n-       *  This function reads characters from @a s, interprets them as a\n+       *  This function reads characters from @a __s, interprets them as a\n        *  monetary value according to moneypunct and ctype facets retrieved\n        *  from io.getloc(), and returns the result in @a units as an integral\n        *  value moneypunct::frac_digits() * the actual amount.  For example,\n@@ -1409,12 +1409,12 @@ _GLIBCXX_BEGIN_NAMESPACE_LDBL\n        *\n        *  This function works by returning the result of do_get().\n        *\n-       *  @param  s  Start of characters to parse.\n-       *  @param  end  End of characters to parse.\n-       *  @param  intl  Parameter to use_facet<moneypunct<CharT,intl> >.\n-       *  @param  io  Source of facets and io state.\n-       *  @param  err  Error field to set if parsing fails.\n-       *  @param  units  Place to store result of parsing.\n+       *  @param  __s  Start of characters to parse.\n+       *  @param  __end  End of characters to parse.\n+       *  @param  __intl  Parameter to use_facet<moneypunct<CharT,intl> >.\n+       *  @param  __io  Source of facets and io state.\n+       *  @param  __err  Error field to set if parsing fails.\n+       *  @param  __units  Place to store result of parsing.\n        *  @return  Iterator referencing first character beyond valid money\n        *\t   amount.\n        */\n@@ -1426,7 +1426,7 @@ _GLIBCXX_BEGIN_NAMESPACE_LDBL\n       /**\n        *  @brief  Read and parse a monetary value.\n        *\n-       *  This function reads characters from @a s, interprets them as\n+       *  This function reads characters from @a __s, interprets them as\n        *  a monetary value according to moneypunct and ctype facets\n        *  retrieved from io.getloc(), and returns the result in @a\n        *  digits.  For example, the string $10.01 in a US locale would\n@@ -1440,12 +1440,12 @@ _GLIBCXX_BEGIN_NAMESPACE_LDBL\n        *\n        *  This function works by returning the result of do_get().\n        *\n-       *  @param  s  Start of characters to parse.\n-       *  @param  end  End of characters to parse.\n-       *  @param  intl  Parameter to use_facet<moneypunct<CharT,intl> >.\n-       *  @param  io  Source of facets and io state.\n-       *  @param  err  Error field to set if parsing fails.\n-       *  @param  digits  Place to store result of parsing.\n+       *  @param  __s  Start of characters to parse.\n+       *  @param  __end  End of characters to parse.\n+       *  @param  __intl  Parameter to use_facet<moneypunct<CharT,intl> >.\n+       *  @param  __io  Source of facets and io state.\n+       *  @param  __err  Error field to set if parsing fails.\n+       *  @param  __digits  Place to store result of parsing.\n        *  @return  Iterator referencing first character beyond valid money\n        *\t   amount.\n        */\n@@ -1536,7 +1536,7 @@ _GLIBCXX_BEGIN_NAMESPACE_LDBL\n        *\n        *  This is the constructor provided by the standard.\n        *\n-       *  @param refs  Passed to the base facet class.\n+       *  @param __refs  Passed to the base facet class.\n       */\n       explicit\n       money_put(size_t __refs = 0) : facet(__refs) { }\n@@ -1546,16 +1546,16 @@ _GLIBCXX_BEGIN_NAMESPACE_LDBL\n        *\n        *  This function formats @a units as a monetary value according to\n        *  moneypunct and ctype facets retrieved from io.getloc(), and writes\n-       *  the resulting characters to @a s.  For example, the value 1001 in a\n-       *  US locale would write <code>$10.01</code> to @a s.\n+       *  the resulting characters to @a __s.  For example, the value 1001 in a\n+       *  US locale would write <code>$10.01</code> to @a __s.\n        *\n        *  This function works by returning the result of do_put().\n        *\n-       *  @param  s  The stream to write to.\n-       *  @param  intl  Parameter to use_facet<moneypunct<CharT,intl> >.\n-       *  @param  io  Source of facets and io state.\n-       *  @param  fill  char_type to use for padding.\n-       *  @param  units  Place to store result of parsing.\n+       *  @param  __s  The stream to write to.\n+       *  @param  __intl  Parameter to use_facet<moneypunct<CharT,intl> >.\n+       *  @param  __io  Source of facets and io state.\n+       *  @param  __fill  char_type to use for padding.\n+       *  @param  __units  Place to store result of parsing.\n        *  @return  Iterator after writing.\n        */\n       iter_type\n@@ -1568,17 +1568,17 @@ _GLIBCXX_BEGIN_NAMESPACE_LDBL\n        *\n        *  This function formats @a digits as a monetary value\n        *  according to moneypunct and ctype facets retrieved from\n-       *  io.getloc(), and writes the resulting characters to @a s.\n+       *  io.getloc(), and writes the resulting characters to @a __s.\n        *  For example, the string <code>1001</code> in a US locale\n-       *  would write <code>$10.01</code> to @a s.\n+       *  would write <code>$10.01</code> to @a __s.\n        *\n        *  This function works by returning the result of do_put().\n        *\n-       *  @param  s  The stream to write to.\n-       *  @param  intl  Parameter to use_facet<moneypunct<CharT,intl> >.\n-       *  @param  io  Source of facets and io state.\n-       *  @param  fill  char_type to use for padding.\n-       *  @param  units  Place to store result of parsing.\n+       *  @param  __s  The stream to write to.\n+       *  @param  __intl  Parameter to use_facet<moneypunct<CharT,intl> >.\n+       *  @param  __io  Source of facets and io state.\n+       *  @param  __fill  char_type to use for padding.\n+       *  @param  __digits  Place to store result of parsing.\n        *  @return  Iterator after writing.\n        */\n       iter_type\n@@ -1596,17 +1596,17 @@ _GLIBCXX_BEGIN_NAMESPACE_LDBL\n        *\n        *  This function formats @a units as a monetary value according to\n        *  moneypunct and ctype facets retrieved from io.getloc(), and writes\n-       *  the resulting characters to @a s.  For example, the value 1001 in a\n-       *  US locale would write <code>$10.01</code> to @a s.\n+       *  the resulting characters to @a __s.  For example, the value 1001 in a\n+       *  US locale would write <code>$10.01</code> to @a __s.\n        *\n        *  This function is a hook for derived classes to change the value\n        *  returned.  @see put().\n        *\n-       *  @param  s  The stream to write to.\n-       *  @param  intl  Parameter to use_facet<moneypunct<CharT,intl> >.\n-       *  @param  io  Source of facets and io state.\n-       *  @param  fill  char_type to use for padding.\n-       *  @param  units  Place to store result of parsing.\n+       *  @param  __s  The stream to write to.\n+       *  @param  __intl  Parameter to use_facet<moneypunct<CharT,intl> >.\n+       *  @param  __io  Source of facets and io state.\n+       *  @param  __fill  char_type to use for padding.\n+       *  @param  __units  Place to store result of parsing.\n        *  @return  Iterator after writing.\n        */\n       // XXX GLIBCXX_ABI Deprecated\n@@ -1625,18 +1625,18 @@ _GLIBCXX_BEGIN_NAMESPACE_LDBL\n        *\n        *  This function formats @a digits as a monetary value\n        *  according to moneypunct and ctype facets retrieved from\n-       *  io.getloc(), and writes the resulting characters to @a s.\n+       *  io.getloc(), and writes the resulting characters to @a __s.\n        *  For example, the string <code>1001</code> in a US locale\n-       *  would write <code>$10.01</code> to @a s.\n+       *  would write <code>$10.01</code> to @a __s.\n        *\n        *  This function is a hook for derived classes to change the value\n        *  returned.  @see put().\n        *\n-       *  @param  s  The stream to write to.\n-       *  @param  intl  Parameter to use_facet<moneypunct<CharT,intl> >.\n-       *  @param  io  Source of facets and io state.\n-       *  @param  fill  char_type to use for padding.\n-       *  @param  units  Place to store result of parsing.\n+       *  @param  __s  The stream to write to.\n+       *  @param  __intl  Parameter to use_facet<moneypunct<CharT,intl> >.\n+       *  @param  __io  Source of facets and io state.\n+       *  @param  __fill  char_type to use for padding.\n+       *  @param  __digits  Place to store result of parsing.\n        *  @return  Iterator after writing.\n        */\n       virtual iter_type\n@@ -1717,7 +1717,7 @@ _GLIBCXX_END_NAMESPACE_LDBL\n        *\n        *  This is the constructor provided by the standard.\n        *\n-       *  @param refs  Passed to the base facet class.\n+       *  @param __refs  Passed to the base facet class.\n       */\n       explicit\n       messages(size_t __refs = 0);\n@@ -1729,9 +1729,9 @@ _GLIBCXX_END_NAMESPACE_LDBL\n        *  This is a constructor for use by the library itself to set up new\n        *  locales.\n        *\n-       *  @param  cloc  The C locale.\n-       *  @param  s  The name of a locale.\n-       *  @param  refs  Refcount to pass to the base class.\n+       *  @param  __cloc  The C locale.\n+       *  @param  __s  The name of a locale.\n+       *  @param  __refs  Refcount to pass to the base class.\n        */\n       explicit\n       messages(__c_locale __cloc, const char* __s, size_t __refs = 0);\n@@ -1740,10 +1740,10 @@ _GLIBCXX_END_NAMESPACE_LDBL\n        *  @brief  Open a message catalog.\n        *\n        *  This function opens and returns a handle to a message catalog by\n-       *  returning do_open(s, loc).\n+       *  returning do_open(__s, __loc).\n        *\n-       *  @param  s  The catalog to open.\n-       *  @param  loc  Locale to use for character set conversions.\n+       *  @param  __s  The catalog to open.\n+       *  @param  __loc  Locale to use for character set conversions.\n        *  @return  Handle to the catalog or value < 0 if open fails.\n       */\n       catalog\n@@ -1759,9 +1759,9 @@ _GLIBCXX_END_NAMESPACE_LDBL\n        *  message catalog root directory for gnu gettext and is ignored\n        *  otherwise.\n        *\n-       *  @param  s  The catalog to open.\n-       *  @param  loc  Locale to use for character set conversions.\n-       *  @param  dir  Message catalog root directory.\n+       *  @param  __s  The catalog to open.\n+       *  @param  __loc  Locale to use for character set conversions.\n+       *  @param  __dir  Message catalog root directory.\n        *  @return  Handle to the catalog or value < 0 if open fails.\n       */\n       catalog\n@@ -1773,14 +1773,14 @@ _GLIBCXX_END_NAMESPACE_LDBL\n        *  This function retrieves and returns a message from a catalog by\n        *  returning do_get(c, set, msgid, s).\n        *\n-       *  For gnu, @a set and @a msgid are ignored.  Returns gettext(s).\n+       *  For gnu, @a __set and @a msgid are ignored.  Returns gettext(s).\n        *  For default, returns s. For ieee, returns catgets(c,set,msgid,s).\n        *\n-       *  @param  c  The catalog to access.\n-       *  @param  set  Implementation-defined.\n-       *  @param  msgid  Implementation-defined.\n-       *  @param  s  Default return value if retrieval fails.\n-       *  @return  Retrieved message or @a s if get fails.\n+       *  @param  __c  The catalog to access.\n+       *  @param  __set  Implementation-defined.\n+       *  @param  __msgid  Implementation-defined.\n+       *  @param  __s  Default return value if retrieval fails.\n+       *  @return  Retrieved message or @a __s if get fails.\n       */\n       string_type\n       get(catalog __c, int __set, int __msgid, const string_type& __s) const\n@@ -1791,7 +1791,7 @@ _GLIBCXX_END_NAMESPACE_LDBL\n        *\n        *  Closes catalog @a c by calling do_close(c).\n        *\n-       *  @param  c  The catalog to close.\n+       *  @param  __c  The catalog to close.\n       */\n       void\n       close(catalog __c) const\n@@ -1809,8 +1809,8 @@ _GLIBCXX_END_NAMESPACE_LDBL\n        *  implementation-defined manner.  This function is a hook for derived\n        *  classes to change the value returned.\n        *\n-       *  @param  s  The catalog to open.\n-       *  @param  loc  Locale to use for character set conversions.\n+       *  @param  __s  The catalog to open.\n+       *  @param  __loc  Locale to use for character set conversions.\n        *  @return  Handle to the opened catalog, value < 0 if open failed.\n       */\n       virtual catalog\n@@ -1823,22 +1823,22 @@ _GLIBCXX_END_NAMESPACE_LDBL\n        *  implementation-defined manner.  This function is a hook for derived\n        *  classes to change the value returned.\n        *\n-       *  For gnu, @a set and @a msgid are ignored.  Returns gettext(s).\n+       *  For gnu, @a __set and @a __msgid are ignored.  Returns gettext(s).\n        *  For default, returns s. For ieee, returns catgets(c,set,msgid,s).\n        *\n-       *  @param  c  The catalog to access.\n-       *  @param  set  Implementation-defined.\n-       *  @param  msgid  Implementation-defined.\n-       *  @param  s  Default return value if retrieval fails.\n-       *  @return  Retrieved message or @a s if get fails.\n+       *  @param  __c  The catalog to access.\n+       *  @param  __set  Implementation-defined.\n+       *  @param  __msgid  Implementation-defined.\n+       *  @param  __s  Default return value if retrieval fails.\n+       *  @return  Retrieved message or @a __s if get fails.\n       */\n       virtual string_type\n       do_get(catalog, int, int, const string_type& __dfault) const;\n \n       /*\n        *  @brief  Close a message catalog.\n        *\n-       *  @param  c  The catalog to close.\n+       *  @param  __c  The catalog to close.\n       */\n       virtual void\n       do_close(catalog) const;\n@@ -1855,40 +1855,7 @@ _GLIBCXX_END_NAMESPACE_LDBL\n       string_type\n       _M_convert_from_char(char*) const\n       {\n-#if 0\n-\t// Length of message string without terminating null.\n-\tsize_t __len = char_traits<char>::length(__msg) - 1;\n-\n-\t// \"everybody can easily convert the string using\n-\t// mbsrtowcs/wcsrtombs or with iconv()\"\n-\n-\t// Convert char* to _CharT in locale used to open catalog.\n-\t// XXX need additional template parameter on messages class for this..\n-\t// typedef typename codecvt<char, _CharT, _StateT> __codecvt_type;\n-\ttypedef typename codecvt<char, _CharT, mbstate_t> __codecvt_type;\n-\n-\t__codecvt_type::state_type __state;\n-\t// XXX may need to initialize state.\n-\t//initialize_state(__state._M_init());\n-\n-\tchar* __from_next;\n-\t// XXX what size for this string?\n-\t_CharT* __to = static_cast<_CharT*>(__builtin_alloca(__len + 1));\n-\tconst __codecvt_type& __cvt = use_facet<__codecvt_type>(_M_locale_conv);\n-\t__cvt.out(__state, __msg, __msg + __len, __from_next,\n-\t\t  __to, __to + __len + 1, __to_next);\n-\treturn string_type(__to);\n-#endif\n-#if 0\n-\ttypedef ctype<_CharT> __ctype_type;\n-\t// const __ctype_type& __cvt = use_facet<__ctype_type>(_M_locale_msg);\n-\tconst __ctype_type& __cvt = use_facet<__ctype_type>(locale());\n-\t// XXX Again, proper length of converted string an issue here.\n-\t// For now, assume the converted length is not larger.\n-\t_CharT* __dest = static_cast<_CharT*>(__builtin_alloca(__len + 1));\n-\t__cvt.widen(__msg, __msg + __len, __dest);\n-\treturn basic_string<_CharT>(__dest);\n-#endif\n+\t// XXX\n \treturn string_type();\n       }\n      };"}, {"sha": "4d33722c6d1f7ae6f2b8033b856fa99199e4b978", "filename": "libstdc++-v3/include/bits/ptr_traits.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fptr_traits.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fptr_traits.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fptr_traits.h?ref=93c66bc68a2554cbb2ba11f90944314af378d16b", "patch": "@@ -207,8 +207,8 @@ _GLIBCXX_HAS_NESTED_TYPE(difference_type)\n \n       /**\n        *  @brief  Obtain a pointer to an object\n-       *  @param  r  A reference to an object of type @c element_type\n-       *  @return @c addressof(r)\n+       *  @param  __r  A reference to an object of type @c element_type\n+       *  @return @c addressof(__r)\n       */\n       static pointer\n       pointer_to(typename __ptrtr_not_void<element_type>::__type& __r) noexcept"}, {"sha": "7c66d633863b3824ba33f072b900ce489ddd98d9", "filename": "libstdc++-v3/include/bits/random.h", "status": "modified", "additions": 120, "deletions": 117, "changes": 237, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Finclude%2Fbits%2Frandom.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Finclude%2Fbits%2Frandom.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Frandom.h?ref=93c66bc68a2554cbb2ba11f90944314af378d16b", "patch": "@@ -294,9 +294,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       template<typename _UIntType1, _UIntType1 __a1, _UIntType1 __c1,\n \t       _UIntType1 __m1, typename _CharT, typename _Traits>\n \tfriend std::basic_ostream<_CharT, _Traits>&\n-\toperator<<(std::basic_ostream<_CharT, _Traits>&,\n+\toperator<<(std::basic_ostream<_CharT, _Traits>& __os,\n \t\t   const std::linear_congruential_engine<_UIntType1,\n-\t\t   __a1, __c1, __m1>&);\n+\t\t   __a1, __c1, __m1>& __lcr);\n \n       /**\n        * @brief Sets the state of the engine by reading its textual\n@@ -314,9 +314,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       template<typename _UIntType1, _UIntType1 __a1, _UIntType1 __c1,\n \t       _UIntType1 __m1, typename _CharT, typename _Traits>\n \tfriend std::basic_istream<_CharT, _Traits>&\n-\toperator>>(std::basic_istream<_CharT, _Traits>&,\n+\toperator>>(std::basic_istream<_CharT, _Traits>& __is,\n \t\t   std::linear_congruential_engine<_UIntType1, __a1,\n-\t\t   __c1, __m1>&);\n+\t\t   __c1, __m1>& __lcr);\n \n     private:\n       _UIntType _M_x;\n@@ -355,17 +355,20 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n    * This algorithm was originally invented by Makoto Matsumoto and\n    * Takuji Nishimura.\n    *\n-   * @var word_size   The number of bits in each element of the state vector.\n-   * @var state_size  The degree of recursion.\n-   * @var shift_size  The period parameter.\n-   * @var mask_bits   The separation point bit index.\n-   * @var parameter_a The last row of the twist matrix.\n-   * @var output_u    The first right-shift tempering matrix parameter.\n-   * @var output_s    The first left-shift tempering matrix parameter.\n-   * @var output_b    The first left-shift tempering matrix mask.\n-   * @var output_t    The second left-shift tempering matrix parameter.\n-   * @var output_c    The second left-shift tempering matrix mask.\n-   * @var output_l    The second right-shift tempering matrix parameter.\n+   * @tparam __w  Word size, the number of bits in each element of \n+   *              the state vector.\n+   * @tparam __n  The degree of recursion.\n+   * @tparam __m  The period parameter.\n+   * @tparam __r  The separation point bit index.\n+   * @tparam __a  The last row of the twist matrix.\n+   * @tparam __u  The first right-shift tempering matrix parameter.\n+   * @tparam __d  The first right-shift tempering matrix mask.\n+   * @tparam __s  The first left-shift tempering matrix parameter.\n+   * @tparam __b  The first left-shift tempering matrix mask.\n+   * @tparam __t  The second left-shift tempering matrix parameter.\n+   * @tparam __c  The second left-shift tempering matrix mask.\n+   * @tparam __l  The second right-shift tempering matrix parameter.\n+   * @tparam __f  Initialization multiplier.\n    */\n   template<typename _UIntType, size_t __w,\n \t   size_t __n, size_t __m, size_t __r,\n@@ -511,10 +514,10 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t       _UIntType1 __c1, size_t __l1, _UIntType1 __f1,\n \t       typename _CharT, typename _Traits>\n \tfriend std::basic_ostream<_CharT, _Traits>&\n-\toperator<<(std::basic_ostream<_CharT, _Traits>&,\n+\toperator<<(std::basic_ostream<_CharT, _Traits>& __os,\n \t\t   const std::mersenne_twister_engine<_UIntType1, __w1, __n1,\n \t\t   __m1, __r1, __a1, __u1, __d1, __s1, __b1, __t1, __c1,\n-\t\t   __l1, __f1>&);\n+\t\t   __l1, __f1>& __x);\n \n       /**\n        * @brief Extracts the current state of a % mersenne_twister_engine\n@@ -537,10 +540,10 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t       _UIntType1 __c1, size_t __l1, _UIntType1 __f1,\n \t       typename _CharT, typename _Traits>\n \tfriend std::basic_istream<_CharT, _Traits>&\n-\toperator>>(std::basic_istream<_CharT, _Traits>&,\n+\toperator>>(std::basic_istream<_CharT, _Traits>& __is,\n \t\t   std::mersenne_twister_engine<_UIntType1, __w1, __n1, __m1,\n \t\t   __r1, __a1, __u1, __d1, __s1, __b1, __t1, __c1,\n-\t\t   __l1, __f1>&);\n+\t\t   __l1, __f1>& __x);\n \n     private:\n       _UIntType _M_x[state_size];\n@@ -801,21 +804,21 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        * @brief Copy constructs a %discard_block_engine engine.\n        *\n        * Copies an existing base class random number generator.\n-       * @param rng An existing (base class) engine object.\n+       * @param __rng An existing (base class) engine object.\n        */\n       explicit\n-      discard_block_engine(const _RandomNumberEngine& __rne)\n-      : _M_b(__rne), _M_n(0) { }\n+      discard_block_engine(const _RandomNumberEngine& __rng)\n+      : _M_b(__rng), _M_n(0) { }\n \n       /**\n        * @brief Move constructs a %discard_block_engine engine.\n        *\n        * Copies an existing base class random number generator.\n-       * @param rng An existing (base class) engine object.\n+       * @param __rng An existing (base class) engine object.\n        */\n       explicit\n-      discard_block_engine(_RandomNumberEngine&& __rne)\n-      : _M_b(std::move(__rne)), _M_n(0) { }\n+      discard_block_engine(_RandomNumberEngine&& __rng)\n+      : _M_b(std::move(__rng)), _M_n(0) { }\n \n       /**\n        * @brief Seed constructs a %discard_block_engine engine.\n@@ -944,9 +947,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       template<typename _RandomNumberEngine1, size_t __p1, size_t __r1,\n \t       typename _CharT, typename _Traits>\n \tfriend std::basic_ostream<_CharT, _Traits>&\n-\toperator<<(std::basic_ostream<_CharT, _Traits>&,\n+\toperator<<(std::basic_ostream<_CharT, _Traits>& __os,\n \t\t   const std::discard_block_engine<_RandomNumberEngine1,\n-\t\t   __p1, __r1>&);\n+\t\t   __p1, __r1>& __x);\n \n       /**\n        * @brief Extracts the current state of a % subtract_with_carry_engine\n@@ -962,9 +965,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       template<typename _RandomNumberEngine1, size_t __p1, size_t __r1,\n \t       typename _CharT, typename _Traits>\n \tfriend std::basic_istream<_CharT, _Traits>&\n-\toperator>>(std::basic_istream<_CharT, _Traits>&,\n+\toperator>>(std::basic_istream<_CharT, _Traits>& __is,\n \t\t   std::discard_block_engine<_RandomNumberEngine1,\n-\t\t   __p1, __r1>&);\n+\t\t   __p1, __r1>& __x);\n \n     private:\n       _RandomNumberEngine _M_b;\n@@ -1019,21 +1022,21 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        * @brief Copy constructs a %independent_bits_engine engine.\n        *\n        * Copies an existing base class random number generator.\n-       * @param rng An existing (base class) engine object.\n+       * @param __rng An existing (base class) engine object.\n        */\n       explicit\n-      independent_bits_engine(const _RandomNumberEngine& __rne)\n-      : _M_b(__rne) { }\n+      independent_bits_engine(const _RandomNumberEngine& __rng)\n+      : _M_b(__rng) { }\n \n       /**\n        * @brief Move constructs a %independent_bits_engine engine.\n        *\n        * Copies an existing base class random number generator.\n-       * @param rng An existing (base class) engine object.\n+       * @param __rng An existing (base class) engine object.\n        */\n       explicit\n-      independent_bits_engine(_RandomNumberEngine&& __rne)\n-      : _M_b(std::move(__rne)) { }\n+      independent_bits_engine(_RandomNumberEngine&& __rng)\n+      : _M_b(std::move(__rng)) { }\n \n       /**\n        * @brief Seed constructs a %independent_bits_engine engine.\n@@ -1238,22 +1241,22 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        * @brief Copy constructs a %shuffle_order_engine engine.\n        *\n        * Copies an existing base class random number generator.\n-       * @param rng An existing (base class) engine object.\n+       * @param __rng An existing (base class) engine object.\n        */\n       explicit\n-      shuffle_order_engine(const _RandomNumberEngine& __rne)\n-      : _M_b(__rne)\n+      shuffle_order_engine(const _RandomNumberEngine& __rng)\n+      : _M_b(__rng)\n       { _M_initialize(); }\n \n       /**\n        * @brief Move constructs a %shuffle_order_engine engine.\n        *\n        * Copies an existing base class random number generator.\n-       * @param rng An existing (base class) engine object.\n+       * @param __rng An existing (base class) engine object.\n        */\n       explicit\n-      shuffle_order_engine(_RandomNumberEngine&& __rne)\n-      : _M_b(std::move(__rne))\n+      shuffle_order_engine(_RandomNumberEngine&& __rng)\n+      : _M_b(std::move(__rng))\n       { _M_initialize(); }\n \n       /**\n@@ -1383,9 +1386,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       template<typename _RandomNumberEngine1, size_t __k1,\n \t       typename _CharT, typename _Traits>\n \tfriend std::basic_ostream<_CharT, _Traits>&\n-\toperator<<(std::basic_ostream<_CharT, _Traits>&,\n+\toperator<<(std::basic_ostream<_CharT, _Traits>& __os,\n \t\t   const std::shuffle_order_engine<_RandomNumberEngine1,\n-\t\t   __k1>&);\n+\t\t   __k1>& __x);\n \n       /**\n        * @brief Extracts the current state of a % subtract_with_carry_engine\n@@ -1401,8 +1404,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       template<typename _RandomNumberEngine1, size_t __k1,\n \t       typename _CharT, typename _Traits>\n \tfriend std::basic_istream<_CharT, _Traits>&\n-\toperator>>(std::basic_istream<_CharT, _Traits>&,\n-\t\t   std::shuffle_order_engine<_RandomNumberEngine1, __k1>&);\n+\toperator>>(std::basic_istream<_CharT, _Traits>& __is,\n+\t\t   std::shuffle_order_engine<_RandomNumberEngine1, __k1>& __x);\n \n     private:\n       void _M_initialize()\n@@ -1816,8 +1819,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       /**\n        * @brief Constructs a uniform_real_distribution object.\n        *\n-       * @param __min [IN]  The lower bound of the distribution.\n-       * @param __max [IN]  The upper bound of the distribution.\n+       * @param __a [IN]  The lower bound of the distribution.\n+       * @param __b [IN]  The upper bound of the distribution.\n        */\n       explicit\n       uniform_real_distribution(_RealType __a = _RealType(0),\n@@ -2104,8 +2107,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        */\n       template<typename _RealType1, typename _CharT, typename _Traits>\n \tfriend std::basic_ostream<_CharT, _Traits>&\n-\toperator<<(std::basic_ostream<_CharT, _Traits>&,\n-\t\t   const std::normal_distribution<_RealType1>&);\n+\toperator<<(std::basic_ostream<_CharT, _Traits>& __os,\n+\t\t   const std::normal_distribution<_RealType1>& __x);\n \n       /**\n        * @brief Extracts a %normal_distribution random number distribution\n@@ -2119,8 +2122,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        */\n       template<typename _RealType1, typename _CharT, typename _Traits>\n \tfriend std::basic_istream<_CharT, _Traits>&\n-\toperator>>(std::basic_istream<_CharT, _Traits>&,\n-\t\t   std::normal_distribution<_RealType1>&);\n+\toperator>>(std::basic_istream<_CharT, _Traits>& __is,\n+\t\t   std::normal_distribution<_RealType1>& __x);\n \n     private:\n       param_type  _M_param;\n@@ -2280,8 +2283,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        */\n       template<typename _RealType1, typename _CharT, typename _Traits>\n \tfriend std::basic_ostream<_CharT, _Traits>&\n-\toperator<<(std::basic_ostream<_CharT, _Traits>&,\n-\t\t   const std::lognormal_distribution<_RealType1>&);\n+\toperator<<(std::basic_ostream<_CharT, _Traits>& __os,\n+\t\t   const std::lognormal_distribution<_RealType1>& __x);\n \n       /**\n        * @brief Extracts a %lognormal_distribution random number distribution\n@@ -2295,8 +2298,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        */\n       template<typename _RealType1, typename _CharT, typename _Traits>\n \tfriend std::basic_istream<_CharT, _Traits>&\n-\toperator>>(std::basic_istream<_CharT, _Traits>&,\n-\t\t   std::lognormal_distribution<_RealType1>&);\n+\toperator>>(std::basic_istream<_CharT, _Traits>& __is,\n+\t\t   std::lognormal_distribution<_RealType1>& __x);\n \n     private:\n       param_type _M_param;\n@@ -2473,8 +2476,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        */\n       template<typename _RealType1, typename _CharT, typename _Traits>\n \tfriend std::basic_ostream<_CharT, _Traits>&\n-\toperator<<(std::basic_ostream<_CharT, _Traits>&,\n-\t\t   const std::gamma_distribution<_RealType1>&);\n+\toperator<<(std::basic_ostream<_CharT, _Traits>& __os,\n+\t\t   const std::gamma_distribution<_RealType1>& __x);\n \n       /**\n        * @brief Extracts a %gamma_distribution random number distribution\n@@ -2487,8 +2490,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        */\n       template<typename _RealType1, typename _CharT, typename _Traits>\n \tfriend std::basic_istream<_CharT, _Traits>&\n-\toperator>>(std::basic_istream<_CharT, _Traits>&,\n-\t\t   std::gamma_distribution<_RealType1>&);\n+\toperator>>(std::basic_istream<_CharT, _Traits>& __is,\n+\t\t   std::gamma_distribution<_RealType1>& __x);\n \n     private:\n       param_type _M_param;\n@@ -2637,8 +2640,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        */\n       template<typename _RealType1, typename _CharT, typename _Traits>\n \tfriend std::basic_ostream<_CharT, _Traits>&\n-\toperator<<(std::basic_ostream<_CharT, _Traits>&,\n-\t\t   const std::chi_squared_distribution<_RealType1>&);\n+\toperator<<(std::basic_ostream<_CharT, _Traits>& __os,\n+\t\t   const std::chi_squared_distribution<_RealType1>& __x);\n \n       /**\n        * @brief Extracts a %chi_squared_distribution random number distribution\n@@ -2652,8 +2655,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        */\n       template<typename _RealType1, typename _CharT, typename _Traits>\n \tfriend std::basic_istream<_CharT, _Traits>&\n-\toperator>>(std::basic_istream<_CharT, _Traits>&,\n-\t\t   std::chi_squared_distribution<_RealType1>&);\n+\toperator>>(std::basic_istream<_CharT, _Traits>& __is,\n+\t\t   std::chi_squared_distribution<_RealType1>& __x);\n \n     private:\n       param_type _M_param;\n@@ -2821,8 +2824,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n    */\n   template<typename _RealType, typename _CharT, typename _Traits>\n     std::basic_ostream<_CharT, _Traits>&\n-    operator<<(std::basic_ostream<_CharT, _Traits>&,\n-\t       const std::cauchy_distribution<_RealType>&);\n+    operator<<(std::basic_ostream<_CharT, _Traits>& __os,\n+\t       const std::cauchy_distribution<_RealType>& __x);\n \n   /**\n    * @brief Extracts a %cauchy_distribution random number distribution\n@@ -2836,8 +2839,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n    */\n   template<typename _RealType, typename _CharT, typename _Traits>\n     std::basic_istream<_CharT, _Traits>&\n-    operator>>(std::basic_istream<_CharT, _Traits>&,\n-\t       std::cauchy_distribution<_RealType>&);\n+    operator>>(std::basic_istream<_CharT, _Traits>& __is,\n+\t       std::cauchy_distribution<_RealType>& __x);\n \n \n   /**\n@@ -2992,8 +2995,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        */\n       template<typename _RealType1, typename _CharT, typename _Traits>\n \tfriend std::basic_ostream<_CharT, _Traits>&\n-\toperator<<(std::basic_ostream<_CharT, _Traits>&,\n-\t\t   const std::fisher_f_distribution<_RealType1>&);\n+\toperator<<(std::basic_ostream<_CharT, _Traits>& __os,\n+\t\t   const std::fisher_f_distribution<_RealType1>& __x);\n \n       /**\n        * @brief Extracts a %fisher_f_distribution random number distribution\n@@ -3007,8 +3010,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        */\n       template<typename _RealType1, typename _CharT, typename _Traits>\n \tfriend std::basic_istream<_CharT, _Traits>&\n-\toperator>>(std::basic_istream<_CharT, _Traits>&,\n-\t\t   std::fisher_f_distribution<_RealType1>&);\n+\toperator>>(std::basic_istream<_CharT, _Traits>& __is,\n+\t\t   std::fisher_f_distribution<_RealType1>& __x);\n \n     private:\n       param_type _M_param;\n@@ -3165,8 +3168,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        */\n       template<typename _RealType1, typename _CharT, typename _Traits>\n \tfriend std::basic_ostream<_CharT, _Traits>&\n-\toperator<<(std::basic_ostream<_CharT, _Traits>&,\n-\t\t   const std::student_t_distribution<_RealType1>&);\n+\toperator<<(std::basic_ostream<_CharT, _Traits>& __os,\n+\t\t   const std::student_t_distribution<_RealType1>& __x);\n \n       /**\n        * @brief Extracts a %student_t_distribution random number distribution\n@@ -3180,8 +3183,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        */\n       template<typename _RealType1, typename _CharT, typename _Traits>\n \tfriend std::basic_istream<_CharT, _Traits>&\n-\toperator>>(std::basic_istream<_CharT, _Traits>&,\n-\t\t   std::student_t_distribution<_RealType1>&);\n+\toperator>>(std::basic_istream<_CharT, _Traits>& __is,\n+\t\t   std::student_t_distribution<_RealType1>& __x);\n \n     private:\n       param_type _M_param;\n@@ -3359,8 +3362,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n    */\n   template<typename _CharT, typename _Traits>\n     std::basic_ostream<_CharT, _Traits>&\n-    operator<<(std::basic_ostream<_CharT, _Traits>&,\n-\t       const std::bernoulli_distribution&);\n+    operator<<(std::basic_ostream<_CharT, _Traits>& __os,\n+\t       const std::bernoulli_distribution& __x);\n \n   /**\n    * @brief Extracts a %bernoulli_distribution random number distribution\n@@ -3545,8 +3548,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       template<typename _IntType1,\n \t       typename _CharT, typename _Traits>\n \tfriend std::basic_ostream<_CharT, _Traits>&\n-\toperator<<(std::basic_ostream<_CharT, _Traits>&,\n-\t\t   const std::binomial_distribution<_IntType1>&);\n+\toperator<<(std::basic_ostream<_CharT, _Traits>& __os,\n+\t\t   const std::binomial_distribution<_IntType1>& __x);\n \n       /**\n        * @brief Extracts a %binomial_distribution random number distribution\n@@ -3561,8 +3564,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       template<typename _IntType1,\n \t       typename _CharT, typename _Traits>\n \tfriend std::basic_istream<_CharT, _Traits>&\n-\toperator>>(std::basic_istream<_CharT, _Traits>&,\n-\t\t   std::binomial_distribution<_IntType1>&);\n+\toperator>>(std::basic_istream<_CharT, _Traits>& __is,\n+\t\t   std::binomial_distribution<_IntType1>& __x);\n \n     private:\n       template<typename _UniformRandomNumberGenerator>\n@@ -3738,8 +3741,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   template<typename _IntType,\n \t   typename _CharT, typename _Traits>\n     std::basic_ostream<_CharT, _Traits>&\n-    operator<<(std::basic_ostream<_CharT, _Traits>&,\n-\t       const std::geometric_distribution<_IntType>&);\n+    operator<<(std::basic_ostream<_CharT, _Traits>& __os,\n+\t       const std::geometric_distribution<_IntType>& __x);\n \n   /**\n    * @brief Extracts a %geometric_distribution random number distribution\n@@ -3753,8 +3756,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   template<typename _IntType,\n \t   typename _CharT, typename _Traits>\n     std::basic_istream<_CharT, _Traits>&\n-    operator>>(std::basic_istream<_CharT, _Traits>&,\n-\t       std::geometric_distribution<_IntType>&);\n+    operator>>(std::basic_istream<_CharT, _Traits>& __is,\n+\t       std::geometric_distribution<_IntType>& __x);\n \n \n   /**\n@@ -3898,8 +3901,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        */\n       template<typename _IntType1, typename _CharT, typename _Traits>\n \tfriend std::basic_ostream<_CharT, _Traits>&\n-\toperator<<(std::basic_ostream<_CharT, _Traits>&,\n-\t\t   const std::negative_binomial_distribution<_IntType1>&);\n+\toperator<<(std::basic_ostream<_CharT, _Traits>& __os,\n+\t\t   const std::negative_binomial_distribution<_IntType1>& __x);\n \n       /**\n        * @brief Extracts a %negative_binomial_distribution random number\n@@ -3913,8 +3916,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        */\n       template<typename _IntType1, typename _CharT, typename _Traits>\n \tfriend std::basic_istream<_CharT, _Traits>&\n-\toperator>>(std::basic_istream<_CharT, _Traits>&,\n-\t\t   std::negative_binomial_distribution<_IntType1>&);\n+\toperator>>(std::basic_istream<_CharT, _Traits>& __is,\n+\t\t   std::negative_binomial_distribution<_IntType1>& __x);\n \n     private:\n       param_type _M_param;\n@@ -4085,8 +4088,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        */\n       template<typename _IntType1, typename _CharT, typename _Traits>\n \tfriend std::basic_ostream<_CharT, _Traits>&\n-\toperator<<(std::basic_ostream<_CharT, _Traits>&,\n-\t\t   const std::poisson_distribution<_IntType1>&);\n+\toperator<<(std::basic_ostream<_CharT, _Traits>& __os,\n+\t\t   const std::poisson_distribution<_IntType1>& __x);\n \n       /**\n        * @brief Extracts a %poisson_distribution random number distribution\n@@ -4100,8 +4103,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        */\n       template<typename _IntType1, typename _CharT, typename _Traits>\n \tfriend std::basic_istream<_CharT, _Traits>&\n-\toperator>>(std::basic_istream<_CharT, _Traits>&,\n-\t\t   std::poisson_distribution<_IntType1>&);\n+\toperator>>(std::basic_istream<_CharT, _Traits>& __is,\n+\t\t   std::poisson_distribution<_IntType1>& __x);\n \n     private:\n       param_type _M_param;\n@@ -4281,8 +4284,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n    */\n   template<typename _RealType, typename _CharT, typename _Traits>\n     std::basic_ostream<_CharT, _Traits>&\n-    operator<<(std::basic_ostream<_CharT, _Traits>&,\n-\t       const std::exponential_distribution<_RealType>&);\n+    operator<<(std::basic_ostream<_CharT, _Traits>& __os,\n+\t       const std::exponential_distribution<_RealType>& __x);\n \n   /**\n    * @brief Extracts a %exponential_distribution random number distribution\n@@ -4296,8 +4299,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n    */\n   template<typename _RealType, typename _CharT, typename _Traits>\n     std::basic_istream<_CharT, _Traits>&\n-    operator>>(std::basic_istream<_CharT, _Traits>&,\n-\t       std::exponential_distribution<_RealType>&);\n+    operator>>(std::basic_istream<_CharT, _Traits>& __is,\n+\t       std::exponential_distribution<_RealType>& __x);\n \n \n   /**\n@@ -4456,8 +4459,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n    */\n   template<typename _RealType, typename _CharT, typename _Traits>\n     std::basic_ostream<_CharT, _Traits>&\n-    operator<<(std::basic_ostream<_CharT, _Traits>&,\n-\t       const std::weibull_distribution<_RealType>&);\n+    operator<<(std::basic_ostream<_CharT, _Traits>& __os,\n+\t       const std::weibull_distribution<_RealType>& __x);\n \n   /**\n    * @brief Extracts a %weibull_distribution random number distribution\n@@ -4471,8 +4474,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n    */\n   template<typename _RealType, typename _CharT, typename _Traits>\n     std::basic_istream<_CharT, _Traits>&\n-    operator>>(std::basic_istream<_CharT, _Traits>&,\n-\t       std::weibull_distribution<_RealType>&);\n+    operator>>(std::basic_istream<_CharT, _Traits>& __is,\n+\t       std::weibull_distribution<_RealType>& __x);\n \n \n   /**\n@@ -4631,8 +4634,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n    */\n   template<typename _RealType, typename _CharT, typename _Traits>\n     std::basic_ostream<_CharT, _Traits>&\n-    operator<<(std::basic_ostream<_CharT, _Traits>&,\n-\t       const std::extreme_value_distribution<_RealType>&);\n+    operator<<(std::basic_ostream<_CharT, _Traits>& __os,\n+\t       const std::extreme_value_distribution<_RealType>& __x);\n \n   /**\n    * @brief Extracts a %extreme_value_distribution random number\n@@ -4646,8 +4649,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n    */\n   template<typename _RealType, typename _CharT, typename _Traits>\n     std::basic_istream<_CharT, _Traits>&\n-    operator>>(std::basic_istream<_CharT, _Traits>&,\n-\t       std::extreme_value_distribution<_RealType>&);\n+    operator>>(std::basic_istream<_CharT, _Traits>& __is,\n+\t       std::extreme_value_distribution<_RealType>& __x);\n \n \n   /**\n@@ -4808,8 +4811,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        */\n       template<typename _IntType1, typename _CharT, typename _Traits>\n \tfriend std::basic_ostream<_CharT, _Traits>&\n-\toperator<<(std::basic_ostream<_CharT, _Traits>&,\n-\t\t   const std::discrete_distribution<_IntType1>&);\n+\toperator<<(std::basic_ostream<_CharT, _Traits>& __os,\n+\t\t   const std::discrete_distribution<_IntType1>& __x);\n \n       /**\n        * @brief Extracts a %discrete_distribution random number distribution\n@@ -4824,8 +4827,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        */\n       template<typename _IntType1, typename _CharT, typename _Traits>\n \tfriend std::basic_istream<_CharT, _Traits>&\n-\toperator>>(std::basic_istream<_CharT, _Traits>&,\n-\t\t   std::discrete_distribution<_IntType1>&);\n+\toperator>>(std::basic_istream<_CharT, _Traits>& __is,\n+\t\t   std::discrete_distribution<_IntType1>& __x);\n \n     private:\n       param_type _M_param;\n@@ -5047,8 +5050,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        */\n       template<typename _RealType1, typename _CharT, typename _Traits>\n \tfriend std::basic_ostream<_CharT, _Traits>&\n-\toperator<<(std::basic_ostream<_CharT, _Traits>&,\n-\t\t   const std::piecewise_constant_distribution<_RealType1>&);\n+\toperator<<(std::basic_ostream<_CharT, _Traits>& __os,\n+\t\t   const std::piecewise_constant_distribution<_RealType1>& __x);\n \n       /**\n        * @brief Extracts a %piecewise_constan_distribution random\n@@ -5063,8 +5066,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        */\n       template<typename _RealType1, typename _CharT, typename _Traits>\n \tfriend std::basic_istream<_CharT, _Traits>&\n-\toperator>>(std::basic_istream<_CharT, _Traits>&,\n-\t\t   std::piecewise_constant_distribution<_RealType1>&);\n+\toperator>>(std::basic_istream<_CharT, _Traits>& __is,\n+\t\t   std::piecewise_constant_distribution<_RealType1>& __x);\n \n     private:\n       param_type _M_param;\n@@ -5289,8 +5292,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        */\n       template<typename _RealType1, typename _CharT, typename _Traits>\n \tfriend std::basic_ostream<_CharT, _Traits>&\n-\toperator<<(std::basic_ostream<_CharT, _Traits>&,\n-\t\t   const std::piecewise_linear_distribution<_RealType1>&);\n+\toperator<<(std::basic_ostream<_CharT, _Traits>& __os,\n+\t\t   const std::piecewise_linear_distribution<_RealType1>& __x);\n \n       /**\n        * @brief Extracts a %piecewise_linear_distribution random number\n@@ -5305,8 +5308,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        */\n       template<typename _RealType1, typename _CharT, typename _Traits>\n \tfriend std::basic_istream<_CharT, _Traits>&\n-\toperator>>(std::basic_istream<_CharT, _Traits>&,\n-\t\t   std::piecewise_linear_distribution<_RealType1>&);\n+\toperator>>(std::basic_istream<_CharT, _Traits>& __is,\n+\t\t   std::piecewise_linear_distribution<_RealType1>& __x);\n \n     private:\n       param_type _M_param;"}, {"sha": "e1b83bfcfcafdd552f7e617c8a001de6d521faab", "filename": "libstdc++-v3/include/bits/range_access.h", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Finclude%2Fbits%2Frange_access.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Finclude%2Fbits%2Frange_access.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Frange_access.h?ref=93c66bc68a2554cbb2ba11f90944314af378d16b", "patch": "@@ -41,7 +41,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   /**\n    *  @brief  Return an iterator pointing to the first element of\n    *          the container.\n-   *  @param  cont  Container.\n+   *  @param  __cont  Container.\n    */\n   template<class _Container>\n     inline auto\n@@ -51,7 +51,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   /**\n    *  @brief  Return an iterator pointing to the first element of\n    *          the const container.\n-   *  @param  cont  Container.\n+   *  @param  __cont  Container.\n    */\n   template<class _Container>\n     inline auto\n@@ -61,7 +61,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   /**\n    *  @brief  Return an iterator pointing to one past the last element of\n    *          the container.\n-   *  @param  cont  Container.\n+   *  @param  __cont  Container.\n    */\n   template<class _Container>\n     inline auto\n@@ -71,7 +71,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   /**\n    *  @brief  Return an iterator pointing to one past the last element of\n    *          the const container.\n-   *  @param  cont  Container.\n+   *  @param  __cont  Container.\n    */\n   template<class _Container>\n     inline auto\n@@ -80,7 +80,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n   /**\n    *  @brief  Return an iterator pointing to the first element of the array.\n-   *  @param  arr  Array.\n+   *  @param  __arr  Array.\n    */\n   template<class _Tp, size_t _Nm>\n     inline _Tp*\n@@ -90,7 +90,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   /**\n    *  @brief  Return an iterator pointing to one past the last element\n    *          of the array.\n-   *  @param  arr  Array.\n+   *  @param  __arr  Array.\n    */\n   template<class _Tp, size_t _Nm>\n     inline _Tp*"}, {"sha": "cc1abccaba05175565f7e7cf3fa35060c4b0442f", "filename": "libstdc++-v3/include/bits/regex.h", "status": "modified", "additions": 337, "deletions": 333, "changes": 670, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fregex.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fregex.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fregex.h?ref=93c66bc68a2554cbb2ba11f90944314af378d16b", "patch": "@@ -82,9 +82,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       /**\n        * @brief Performs the identity translation.\n        *\n-       * @param c A character to the locale-specific character set.\n+       * @param __c A character to the locale-specific character set.\n        *\n-       * @returns c.\n+       * @returns __c.\n        */\n       char_type\n       translate(char_type __c) const\n@@ -93,9 +93,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       /**\n        * @brief Translates a character into a case-insensitive equivalent.\n        *\n-       * @param c A character to the locale-specific character set.\n+       * @param __c A character to the locale-specific character set.\n        *\n-       * @returns the locale-specific lower-case equivalent of c.\n+       * @returns the locale-specific lower-case equivalent of __c.\n        * @throws std::bad_cast if the imbued locale does not support the ctype\n        *         facet.\n        */\n@@ -110,8 +110,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       /**\n        * @brief Gets a sort key for a character sequence.\n        *\n-       * @param first beginning of the character sequence.\n-       * @param last  one-past-the-end of the character sequence.\n+       * @param __first beginning of the character sequence.\n+       * @param __last  one-past-the-end of the character sequence.\n        *\n        * Returns a sort key for the character sequence designated by the\n        * iterator range [F1, F2) such that if the character sequence [G1, G2)\n@@ -142,14 +142,14 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       /**\n        * @brief Gets a sort key for a character sequence, independant of case.\n        *\n-       * @param first beginning of the character sequence.\n-       * @param last  one-past-the-end of the character sequence.\n+       * @param __first beginning of the character sequence.\n+       * @param __last  one-past-the-end of the character sequence.\n        *\n        * Effects: if typeid(use_facet<collate<_Ch_type> >) ==\n        * typeid(collate_byname<_Ch_type>) and the form of the sort key\n-       * returned by collate_byname<_Ch_type>::transform(first, last) is known\n-       * and can be converted into a primary sort key then returns that key,\n-       * otherwise returns an empty string.\n+       * returned by collate_byname<_Ch_type>::transform(__first, __last) \n+       * is known and can be converted into a primary sort key\n+       * then returns that key, otherwise returns an empty string.\n        *\n        * @todo Implement this function.\n        */\n@@ -161,12 +161,12 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       /**\n        * @brief Gets a collation element by name.\n        *\n-       * @param first beginning of the collation element name.\n-       * @param last  one-past-the-end of the collation element name.\n+       * @param __first beginning of the collation element name.\n+       * @param __last  one-past-the-end of the collation element name.\n        * \n        * @returns a sequence of one or more characters that represents the\n        * collating element consisting of the character sequence designated by\n-       * the iterator range [first, last). Returns an empty string if the\n+       * the iterator range [__first, __last). Returns an empty string if the\n        * character sequence is not a valid collating element.\n        *\n        * @todo Implement this function.\n@@ -180,19 +180,20 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        * @brief Maps one or more characters to a named character\n        *        classification.\n        *\n-       * @param first beginning of the character sequence.\n-       * @param last  one-past-the-end of the character sequence.\n-       * @param icase ignores the case of the classification name.\n+       * @param __first beginning of the character sequence.\n+       * @param __last  one-past-the-end of the character sequence.\n+       * @param __icase ignores the case of the classification name.\n        *\n        * @returns an unspecified value that represents the character\n-       * classification named by the character sequence designated by the\n-       * iterator range [first, last). If @p icase is true, the returned mask\n-       * identifies the classification regardless of the case of the characters\n-       * to be matched (for example, [[:lower:]] is the same as [[:alpha:]]),\n-       * otherwise a case-dependant classification is returned.  The value\n-       * returned shall be independent of the case of the characters in the\n-       * character sequence. If the name is not recognized then returns a value\n-       * that compares equal to 0.\n+       * classification named by the character sequence designated by\n+       * the iterator range [__first, __last). If @p icase is true,\n+       * the returned mask identifies the classification regardless of\n+       * the case of the characters to be matched (for example,\n+       * [[:lower:]] is the same as [[:alpha:]]), otherwise a\n+       * case-dependant classification is returned.  The value\n+       * returned shall be independent of the case of the characters\n+       * in the character sequence. If the name is not recognized then\n+       * returns a value that compares equal to 0.\n        *\n        * At least the following names (or their wide-character equivalent) are\n        * supported.\n@@ -223,11 +224,11 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       /**\n        * @brief Determines if @p c is a member of an identified class.\n        *\n-       * @param c a character.\n-       * @param f a class type (as returned from lookup_classname).\n+       * @param __c a character.\n+       * @param __f a class type (as returned from lookup_classname).\n        *\n-       * @returns true if the character @p c is a member of the classification\n-       * represented by @p f, false otherwise.\n+       * @returns true if the character @p __c is a member of the classification\n+       * represented by @p __f, false otherwise.\n        *\n        * @throws std::bad_cast if the current locale does not have a ctype\n        *         facet.\n@@ -238,20 +239,20 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       /**\n        * @brief Converts a digit to an int.\n        *\n-       * @param ch    a character representing a digit.\n-       * @param radix the radix if the numeric conversion (limited to 8, 10,\n+       * @param __ch    a character representing a digit.\n+       * @param __radix the radix if the numeric conversion (limited to 8, 10,\n        *              or 16).\n        * \n-       * @returns the value represented by the digit ch in base radix if the\n-       * character ch is a valid digit in base radix; otherwise returns -1.\n+       * @returns the value represented by the digit __ch in base radix if the\n+       * character __ch is a valid digit in base radix; otherwise returns -1.\n        */\n       int\n       value(_Ch_type __ch, int __radix) const;\n       \n       /**\n        * @brief Imbues the regex_traits object with a copy of a new locale.\n        *\n-       * @param loc A locale.\n+       * @param __loc A locale.\n        *\n        * @returns a copy of the previous locale in use by the regex_traits\n        *          object.\n@@ -387,15 +388,15 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       { }\n \n       /**\n-       * @brief Constructs a basic regular expression from the sequence\n-       * [p, p + char_traits<_Ch_type>::length(p)) interpreted according to the\n-       * flags in @p f.\n+       * @brief Constructs a basic regular expression from the\n+       * sequence [__p, __p + char_traits<_Ch_type>::length(__p))\n+       * interpreted according to the flags in @p __f.\n        *\n-       * @param p A pointer to the start of a C-style null-terminated string\n+       * @param __p A pointer to the start of a C-style null-terminated string\n        *          containing a regular expression.\n-       * @param f Flags indicating the syntax rules and options.\n+       * @param __f Flags indicating the syntax rules and options.\n        *\n-       * @throws regex_error if @p p is not a valid regular expression.\n+       * @throws regex_error if @p __p is not a valid regular expression.\n        */\n       explicit\n       basic_regex(const _Ch_type* __p,\n@@ -409,12 +410,13 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        * @brief Constructs a basic regular expression from the sequence\n        * [p, p + len) interpreted according to the flags in @p f.\n        *\n-       * @param p   A pointer to the start of a string containing a regular\n-       *            expression.\n-       * @param len The length of the string containing the regular expression.\n-       * @param f   Flags indicating the syntax rules and options.\n+       * @param __p   A pointer to the start of a string containing a regular\n+       *              expression.\n+       * @param __len The length of the string containing the regular\n+       *              expression.\n+       * @param __f   Flags indicating the syntax rules and options.\n        *\n-       * @throws regex_error if @p p is not a valid regular expression.\n+       * @throws regex_error if @p __p is not a valid regular expression.\n        */\n       basic_regex(const _Ch_type* __p, std::size_t __len, flag_type __f)\n       : _M_flags(__f),\n@@ -424,7 +426,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       /**\n        * @brief Copy-constructs a basic regular expression.\n        *\n-       * @param rhs A @p regex object.\n+       * @param __rhs A @p regex object.\n        */\n       basic_regex(const basic_regex& __rhs)\n       : _M_flags(__rhs._M_flags), _M_traits(__rhs._M_traits),\n@@ -434,7 +436,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       /**\n        * @brief Move-constructs a basic regular expression.\n        *\n-       * @param rhs A @p regex object.\n+       * @param __rhs A @p regex object.\n        */\n       basic_regex(const basic_regex&& __rhs) noexcept\n       : _M_flags(__rhs._M_flags), _M_traits(__rhs._M_traits),\n@@ -445,10 +447,10 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        * @brief Constructs a basic regular expression from the string\n        * @p s interpreted according to the flags in @p f.\n        *\n-       * @param s A string containing a regular expression.\n-       * @param f Flags indicating the syntax rules and options.\n+       * @param __s A string containing a regular expression.\n+       * @param __f Flags indicating the syntax rules and options.\n        *\n-       * @throws regex_error if @p s is not a valid regular expression.\n+       * @throws regex_error if @p __s is not a valid regular expression.\n        */\n       template<typename _Ch_traits, typename _Ch_alloc>\n         explicit\n@@ -464,13 +466,13 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        * @brief Constructs a basic regular expression from the range\n        * [first, last) interpreted according to the flags in @p f.\n        *\n-       * @param first The start of a range containing a valid regular\n-       *              expression.\n-       * @param last  The end of a range containing a valid regular\n-       *              expression.\n-       * @param f     The format flags of the regular expression.\n+       * @param __first The start of a range containing a valid regular\n+       *                expression.\n+       * @param __last  The end of a range containing a valid regular\n+       *                expression.\n+       * @param __f     The format flags of the regular expression.\n        *\n-       * @throws regex_error if @p [first, last) is not a valid regular\n+       * @throws regex_error if @p [__first, __last) is not a valid regular\n        *         expression.\n        */\n       template<typename _InputIterator>\n@@ -483,10 +485,10 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       /**\n        * @brief Constructs a basic regular expression from an initializer list.\n        *\n-       * @param l  The initializer list.\n-       * @param f  The format flags of the regular expression.\n+       * @param __l  The initializer list.\n+       * @param __f  The format flags of the regular expression.\n        *\n-       * @throws regex_error if @p l is not a valid regular expression.\n+       * @throws regex_error if @p __l is not a valid regular expression.\n        */\n       basic_regex(initializer_list<_Ch_type> __l,\n \t\t  flag_type __f = regex_constants::ECMAScript)\n@@ -519,7 +521,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        * @brief Replaces a regular expression with a new one constructed from\n        * a C-style null-terminated string.\n        *\n-       * @param A pointer to the start of a null-terminated C-style string\n+       * @param __p A pointer to the start of a null-terminated C-style string\n        *        containing a regular expression.\n        */\n       basic_regex&\n@@ -530,7 +532,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        * @brief Replaces a regular expression with a new one constructed from\n        * a string.\n        *\n-       * @param A pointer to a string containing a regular expression.\n+       * @param __s A pointer to a string containing a regular expression.\n        */\n       template<typename _Ch_typeraits, typename _Allocator>\n         basic_regex&\n@@ -541,7 +543,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       /**\n        * @brief the real assignment operator.\n        *\n-       * @param rhs Another regular expression object.\n+       * @param __rhs Another regular expression object.\n        */\n       basic_regex&\n       assign(const basic_regex& __rhs)\n@@ -554,7 +556,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       /**\n        * @brief The move-assignment operator.\n        *\n-       * @param rhs Another regular expression object.\n+       * @param __rhs Another regular expression object.\n        */\n       basic_regex&\n       assign(basic_regex&& __rhs) noexcept\n@@ -569,13 +571,13 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        * C-style null-terminated string containing a regular expression\n        * pattern.\n        *\n-       * @param p     A pointer to a C-style null-terminated string containing\n+       * @param __p     A pointer to a C-style null-terminated string containing\n        *              a regular expression pattern.\n-       * @param flags Syntax option flags.\n+       * @param __flags Syntax option flags.\n        *\n-       * @throws regex_error if p does not contain a valid regular expression\n-       * pattern interpreted according to @p flags.  If regex_error is thrown,\n-       * *this remains unchanged.\n+       * @throws regex_error if __p does not contain a valid regular\n+       * expression pattern interpreted according to @p __flags.  If\n+       * regex_error is thrown, *this remains unchanged.\n        */\n       basic_regex&\n       assign(const _Ch_type* __p,\n@@ -586,14 +588,14 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        * @brief Assigns a new regular expression to a regex object from a\n        * C-style string containing a regular expression pattern.\n        *\n-       * @param p     A pointer to a C-style string containing a\n-       *              regular expression pattern.\n-       * @param len   The length of the regular expression pattern string.\n-       * @param flags Syntax option flags.\n+       * @param __p     A pointer to a C-style string containing a\n+       *                regular expression pattern.\n+       * @param __len   The length of the regular expression pattern string.\n+       * @param __flags Syntax option flags.\n        *\n-       * @throws regex_error if p does not contain a valid regular expression\n-       * pattern interpreted according to @p flags.  If regex_error is thrown,\n-       * *this remains unchanged.\n+       * @throws regex_error if p does not contain a valid regular\n+       * expression pattern interpreted according to @p __flags.  If\n+       * regex_error is thrown, *this remains unchanged.\n        */\n       basic_regex&\n       assign(const _Ch_type* __p, std::size_t __len, flag_type __flags)\n@@ -603,35 +605,35 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        * @brief Assigns a new regular expression to a regex object from a \n        * string containing a regular expression pattern.\n        *\n-       * @param s     A string containing a regular expression pattern.\n-       * @param flags Syntax option flags.\n+       * @param __s     A string containing a regular expression pattern.\n+       * @param __flags Syntax option flags.\n        *\n-       * @throws regex_error if p does not contain a valid regular expression\n-       * pattern interpreted according to @p flags.  If regex_error is thrown,\n-       * *this remains unchanged.\n+       * @throws regex_error if __s does not contain a valid regular\n+       * expression pattern interpreted according to @p __flags.  If\n+       * regex_error is thrown, *this remains unchanged.\n        */\n       template<typename _Ch_typeraits, typename _Allocator>\n         basic_regex&\n         assign(const basic_string<_Ch_type, _Ch_typeraits, _Allocator>& __s,\n-\t       flag_type __f = regex_constants::ECMAScript)\n+\t       flag_type __flags = regex_constants::ECMAScript)\n         { \n-\t  basic_regex __tmp(__s, __f);\n+\t  basic_regex __tmp(__s, __flags);\n \t  this->swap(__tmp);\n \t  return *this;\n \t}\n \n       /**\n        * @brief Assigns a new regular expression to a regex object.\n        *\n-       * @param first The start of a range containing a valid regular\n-       *              expression.\n-       * @param last  The end of a range containing a valid regular\n-       *              expression.\n-       * @param flags Syntax option flags.\n+       * @param __first The start of a range containing a valid regular\n+       *                expression.\n+       * @param __last  The end of a range containing a valid regular\n+       *                expression.\n+       * @param __flags Syntax option flags.\n        *\n-       * @throws regex_error if p does not contain a valid regular expression\n-       * pattern interpreted according to @p flags.  If regex_error is thrown,\n-       * the object remains unchanged.\n+       * @throws regex_error if p does not contain a valid regular\n+       * expression pattern interpreted according to @p __flags.  If\n+       * regex_error is thrown, the object remains unchanged.\n        */\n       template<typename _InputIterator>\n         basic_regex&\n@@ -642,17 +644,18 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       /**\n        * @brief Assigns a new regular expression to a regex object.\n        *\n-       * @param l     An initializer list representing a regular expression.\n-       * @param flags Syntax option flags.\n+       * @param __l     An initializer list representing a regular expression.\n+       * @param __flags Syntax option flags.\n        *\n-       * @throws regex_error if @p l does not contain a valid regular\n-       * expression pattern interpreted according to @p flags.  If regex_error\n-       * is thrown, the object remains unchanged.\n+       * @throws regex_error if @p __l does not contain a valid\n+       * regular expression pattern interpreted according to @p\n+       * __flags.  If regex_error is thrown, the object remains\n+       * unchanged.\n        */\n       basic_regex&\n       assign(initializer_list<_Ch_type> __l,\n-\t     flag_type __f = regex_constants::ECMAScript)\n-      { return this->assign(__l.begin(), __l.end(), __f); }\n+\t     flag_type __flags = regex_constants::ECMAScript)\n+      { return this->assign(__l.begin(), __l.end(), __flags); }\n \n       // [7.8.4] const operations\n       /**\n@@ -675,7 +678,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       /**\n        * @brief Imbues the regular expression object with the given locale.\n        *\n-       * @param loc A locale.\n+       * @param __loc A locale.\n        */\n       locale_type\n       imbue(locale_type __loc)\n@@ -693,7 +696,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       /**\n        * @brief Swaps the contents of two regular expression objects.\n        *\n-       * @param rhs Another regular expression object.\n+       * @param __rhs Another regular expression object.\n        */\n       void\n       swap(basic_regex& __rhs)\n@@ -730,8 +733,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   // [7.8.6] basic_regex swap\n   /**\n    * @brief Swaps the contents of two regular expression objects.\n-   * @param lhs First regular expression.\n-   * @param rhs Second regular expression.\n+   * @param __lhs First regular expression.\n+   * @param __rhs Second regular expression.\n    */\n   template<typename _Ch_type, typename _Rx_traits>\n     inline void\n@@ -808,11 +811,11 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       /**\n        * @brief Compares this and another matched sequence.\n        *\n-       * @param s Another matched sequence to compare to this one.\n+       * @param __s Another matched sequence to compare to this one.\n        *\n-       * @retval <0 this matched sequence will collate before @p s.\n-       * @retval =0 this matched sequence is equivalent to @p s.\n-       * @retval <0 this matched sequence will collate after @p s.\n+       * @retval <0 this matched sequence will collate before @p __s.\n+       * @retval =0 this matched sequence is equivalent to @p __s.\n+       * @retval <0 this matched sequence will collate after @p __s.\n        */\n       int\n       compare(const sub_match& __s) const\n@@ -821,11 +824,11 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       /**\n        * @brief Compares this sub_match to a string.\n        *\n-       * @param s A string to compare to this sub_match.\n+       * @param __s A string to compare to this sub_match.\n        *\n-       * @retval <0 this matched sequence will collate before @p s.\n-       * @retval =0 this matched sequence is equivalent to @p s.\n-       * @retval <0 this matched sequence will collate after @p s.\n+       * @retval <0 this matched sequence will collate before @p __s.\n+       * @retval =0 this matched sequence is equivalent to @p __s.\n+       * @retval <0 this matched sequence will collate after @p __s.\n        */\n       int\n       compare(const string_type& __s) const\n@@ -834,11 +837,11 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       /**\n        * @brief Compares this sub_match to a C-style string.\n        *\n-       * @param s A C-style string to compare to this sub_match.\n+       * @param __s A C-style string to compare to this sub_match.\n        *\n-       * @retval <0 this matched sequence will collate before @p s.\n-       * @retval =0 this matched sequence is equivalent to @p s.\n-       * @retval <0 this matched sequence will collate after @p s.\n+       * @retval <0 this matched sequence will collate before @p __s.\n+       * @retval =0 this matched sequence is equivalent to @p __s.\n+       * @retval <0 this matched sequence will collate after @p __s.\n        */\n       int\n       compare(const value_type* __s) const\n@@ -861,9 +864,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   \n   /**\n    * @brief Tests the equivalence of two regular expression submatches.\n-   * @param lhs First regular expression submatch.\n-   * @param rhs Second regular expression submatch.\n-   * @returns true if @a lhs  is equivalent to @a rhs, false otherwise.\n+   * @param __lhs First regular expression submatch.\n+   * @param __rhs Second regular expression submatch.\n+   * @returns true if @a __lhs  is equivalent to @a __rhs, false otherwise.\n    */\n   template<typename _BiIter>\n     inline bool\n@@ -873,9 +876,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n   /**\n    * @brief Tests the inequivalence of two regular expression submatches.\n-   * @param lhs First regular expression submatch.\n-   * @param rhs Second regular expression submatch.\n-   * @returns true if @a lhs  is not equivalent to @a rhs, false otherwise.\n+   * @param __lhs First regular expression submatch.\n+   * @param __rhs Second regular expression submatch.\n+   * @returns true if @a __lhs  is not equivalent to @a __rhs, false otherwise.\n    */\n   template<typename _BiIter>\n     inline bool\n@@ -885,9 +888,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n   /**\n    * @brief Tests the ordering of two regular expression submatches.\n-   * @param lhs First regular expression submatch.\n-   * @param rhs Second regular expression submatch.\n-   * @returns true if @a lhs precedes @a rhs, false otherwise.\n+   * @param __lhs First regular expression submatch.\n+   * @param __rhs Second regular expression submatch.\n+   * @returns true if @a __lhs precedes @a __rhs, false otherwise.\n    */\n   template<typename _BiIter>\n     inline bool\n@@ -897,9 +900,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n   /**\n    * @brief Tests the ordering of two regular expression submatches.\n-   * @param lhs First regular expression submatch.\n-   * @param rhs Second regular expression submatch.\n-   * @returns true if @a lhs does not succeed @a rhs, false otherwise.\n+   * @param __lhs First regular expression submatch.\n+   * @param __rhs Second regular expression submatch.\n+   * @returns true if @a __lhs does not succeed @a __rhs, false otherwise.\n    */\n   template<typename _BiIter>\n     inline bool\n@@ -909,9 +912,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n   /**\n    * @brief Tests the ordering of two regular expression submatches.\n-   * @param lhs First regular expression submatch.\n-   * @param rhs Second regular expression submatch.\n-   * @returns true if @a lhs does not precede @a rhs, false otherwise.\n+   * @param __lhs First regular expression submatch.\n+   * @param __rhs Second regular expression submatch.\n+   * @returns true if @a __lhs does not precede @a __rhs, false otherwise.\n    */\n   template<typename _BiIter>\n     inline bool\n@@ -921,9 +924,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n   /**\n    * @brief Tests the ordering of two regular expression submatches.\n-   * @param lhs First regular expression submatch.\n-   * @param rhs Second regular expression submatch.\n-   * @returns true if @a lhs succeeds @a rhs, false otherwise.\n+   * @param __lhs First regular expression submatch.\n+   * @param __rhs Second regular expression submatch.\n+   * @returns true if @a __lhs succeeds @a __rhs, false otherwise.\n    */\n   template<typename _BiIter>\n     inline bool\n@@ -934,9 +937,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   /**\n    * @brief Tests the equivalence of a string and a regular expression\n    *        submatch.\n-   * @param lhs A string.\n-   * @param rhs A regular expression submatch.\n-   * @returns true if @a lhs  is equivalent to @a rhs, false otherwise.\n+   * @param __lhs A string.\n+   * @param __rhs A regular expression submatch.\n+   * @returns true if @a __lhs  is equivalent to @a __rhs, false otherwise.\n    */\n   template<typename _Bi_iter, typename _Ch_traits, typename _Ch_alloc>\n     inline bool\n@@ -949,9 +952,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   /**\n    * @brief Tests the inequivalence of a string and a regular expression\n    *        submatch.\n-   * @param lhs A string.\n-   * @param rhs A regular expression submatch.\n-   * @returns true if @a lhs  is not equivalent to @a rhs, false otherwise.\n+   * @param __lhs A string.\n+   * @param __rhs A regular expression submatch.\n+   * @returns true if @a __lhs  is not equivalent to @a __rhs, false otherwise.\n    */\n   template<typename _Bi_iter, typename _Ch_traits, typename _Ch_alloc>\n     inline bool\n@@ -962,9 +965,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n   /**\n    * @brief Tests the ordering of a string and a regular expression submatch.\n-   * @param lhs A string.\n-   * @param rhs A regular expression submatch.\n-   * @returns true if @a lhs precedes @a rhs, false otherwise.\n+   * @param __lhs A string.\n+   * @param __rhs A regular expression submatch.\n+   * @returns true if @a __lhs precedes @a __rhs, false otherwise.\n    */\n   template<typename _Bi_iter, typename _Ch_traits, typename _Ch_alloc>\n     inline bool\n@@ -975,9 +978,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n   /**\n    * @brief Tests the ordering of a string and a regular expression submatch.\n-   * @param lhs A string.\n-   * @param rhs A regular expression submatch.\n-   * @returns true if @a lhs succeeds @a rhs, false otherwise.\n+   * @param __lhs A string.\n+   * @param __rhs A regular expression submatch.\n+   * @returns true if @a __lhs succeeds @a __rhs, false otherwise.\n    */\n   template<typename _Bi_iter, typename _Ch_traits, typename _Ch_alloc>\n     inline bool\n@@ -988,9 +991,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n   /**\n    * @brief Tests the ordering of a string and a regular expression submatch.\n-   * @param lhs A string.\n-   * @param rhs A regular expression submatch.\n-   * @returns true if @a lhs does not precede @a rhs, false otherwise.\n+   * @param __lhs A string.\n+   * @param __rhs A regular expression submatch.\n+   * @returns true if @a __lhs does not precede @a __rhs, false otherwise.\n    */\n   template<typename _Bi_iter, typename _Ch_traits, typename _Ch_alloc>\n     inline bool\n@@ -1001,9 +1004,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n   /**\n    * @brief Tests the ordering of a string and a regular expression submatch.\n-   * @param lhs A string.\n-   * @param rhs A regular expression submatch.\n-   * @returns true if @a lhs does not succeed @a rhs, false otherwise.\n+   * @param __lhs A string.\n+   * @param __rhs A regular expression submatch.\n+   * @returns true if @a __lhs does not succeed @a __rhs, false otherwise.\n    */\n   template<typename _Bi_iter, typename _Ch_traits, typename _Ch_alloc>\n     inline bool\n@@ -1015,9 +1018,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   /**\n    * @brief Tests the equivalence of a regular expression submatch and a\n    *        string.\n-   * @param lhs A regular expression submatch.\n-   * @param rhs A string.\n-   * @returns true if @a lhs is equivalent to @a rhs, false otherwise.\n+   * @param __lhs A regular expression submatch.\n+   * @param __rhs A string.\n+   * @returns true if @a __lhs is equivalent to @a __rhs, false otherwise.\n    */\n   template<typename _Bi_iter, typename _Ch_traits, typename _Ch_alloc>\n     inline bool\n@@ -1030,9 +1033,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   /**\n    * @brief Tests the inequivalence of a regular expression submatch and a\n    *        string.\n-   * @param lhs A regular expression submatch.\n-   * @param rhs A string.\n-   * @returns true if @a lhs is not equivalent to @a rhs, false otherwise.\n+   * @param __lhs A regular expression submatch.\n+   * @param __rhs A string.\n+   * @returns true if @a __lhs is not equivalent to @a __rhs, false otherwise.\n    */\n   template<typename _Bi_iter, typename _Ch_traits, typename _Ch_alloc>\n     inline bool\n@@ -1044,9 +1047,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n   /**\n    * @brief Tests the ordering of a regular expression submatch and a string.\n-   * @param lhs A regular expression submatch.\n-   * @param rhs A string.\n-   * @returns true if @a lhs precedes @a rhs, false otherwise.\n+   * @param __lhs A regular expression submatch.\n+   * @param __rhs A string.\n+   * @returns true if @a __lhs precedes @a __rhs, false otherwise.\n    */\n   template<typename _Bi_iter, class _Ch_traits, class _Ch_alloc>\n     inline bool\n@@ -1058,9 +1061,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n   /**\n    * @brief Tests the ordering of a regular expression submatch and a string.\n-   * @param lhs A regular expression submatch.\n-   * @param rhs A string.\n-   * @returns true if @a lhs succeeds @a rhs, false otherwise.\n+   * @param __lhs A regular expression submatch.\n+   * @param __rhs A string.\n+   * @returns true if @a __lhs succeeds @a __rhs, false otherwise.\n    */\n   template<typename _Bi_iter, class _Ch_traits, class _Ch_alloc>\n     inline bool\n@@ -1072,9 +1075,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n   /**\n    * @brief Tests the ordering of a regular expression submatch and a string.\n-   * @param lhs A regular expression submatch.\n-   * @param rhs A string.\n-   * @returns true if @a lhs does not precede @a rhs, false otherwise.\n+   * @param __lhs A regular expression submatch.\n+   * @param __rhs A string.\n+   * @returns true if @a __lhs does not precede @a __rhs, false otherwise.\n    */\n   template<typename _Bi_iter, class _Ch_traits, class _Ch_alloc>\n     inline bool\n@@ -1086,9 +1089,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n   /**\n    * @brief Tests the ordering of a regular expression submatch and a string.\n-   * @param lhs A regular expression submatch.\n-   * @param rhs A string.\n-   * @returns true if @a lhs does not succeed @a rhs, false otherwise.\n+   * @param __lhs A regular expression submatch.\n+   * @param __rhs A string.\n+   * @returns true if @a __lhs does not succeed @a __rhs, false otherwise.\n    */\n   template<typename _Bi_iter, class _Ch_traits, class _Ch_alloc>\n     inline bool\n@@ -1101,9 +1104,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   /**\n    * @brief Tests the equivalence of a C string and a regular expression\n    *        submatch.\n-   * @param lhs A C string.\n-   * @param rhs A regular expression submatch.\n-   * @returns true if @a lhs  is equivalent to @a rhs, false otherwise.\n+   * @param __lhs A C string.\n+   * @param __rhs A regular expression submatch.\n+   * @returns true if @a __lhs  is equivalent to @a __rhs, false otherwise.\n    */\n   template<typename _Bi_iter>\n     inline bool\n@@ -1114,9 +1117,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   /**\n    * @brief Tests the inequivalence of an iterator value and a regular\n    *        expression submatch.\n-   * @param lhs A regular expression submatch.\n-   * @param rhs A string.\n-   * @returns true if @a lhs is not equivalent to @a rhs, false otherwise.\n+   * @param __lhs A regular expression submatch.\n+   * @param __rhs A string.\n+   * @returns true if @a __lhs is not equivalent to @a __rhs, false otherwise.\n    */\n   template<typename _Bi_iter>\n     inline bool\n@@ -1126,9 +1129,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n   /**\n    * @brief Tests the ordering of a string and a regular expression submatch.\n-   * @param lhs A string.\n-   * @param rhs A regular expression submatch.\n-   * @returns true if @a lhs precedes @a rhs, false otherwise.\n+   * @param __lhs A string.\n+   * @param __rhs A regular expression submatch.\n+   * @returns true if @a __lhs precedes @a __rhs, false otherwise.\n    */\n   template<typename _Bi_iter>\n     inline bool\n@@ -1138,9 +1141,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n   /**\n    * @brief Tests the ordering of a string and a regular expression submatch.\n-   * @param lhs A string.\n-   * @param rhs A regular expression submatch.\n-   * @returns true if @a lhs succeeds @a rhs, false otherwise.\n+   * @param __lhs A string.\n+   * @param __rhs A regular expression submatch.\n+   * @returns true if @a __lhs succeeds @a __rhs, false otherwise.\n    */\n   template<typename _Bi_iter>\n     inline bool\n@@ -1150,9 +1153,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n   /**\n    * @brief Tests the ordering of a string and a regular expression submatch.\n-   * @param lhs A string.\n-   * @param rhs A regular expression submatch.\n-   * @returns true if @a lhs does not precede @a rhs, false otherwise.\n+   * @param __lhs A string.\n+   * @param __rhs A regular expression submatch.\n+   * @returns true if @a __lhs does not precede @a __rhs, false otherwise.\n    */\n   template<typename _Bi_iter>\n     inline bool\n@@ -1162,9 +1165,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n   /**\n    * @brief Tests the ordering of a string and a regular expression submatch.\n-   * @param lhs A string.\n-   * @param rhs A regular expression submatch.\n-   * @returns true if @a lhs does not succeed @a rhs, false otherwise.\n+   * @param __lhs A string.\n+   * @param __rhs A regular expression submatch.\n+   * @returns true if @a __lhs does not succeed @a __rhs, false otherwise.\n    */\n   template<typename _Bi_iter>\n     inline bool\n@@ -1175,9 +1178,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   /**\n    * @brief Tests the equivalence of a regular expression submatch and a\n    *        string.\n-   * @param lhs A regular expression submatch.\n-   * @param rhs A pointer to a string?\n-   * @returns true if @a lhs  is equivalent to @a rhs, false otherwise.\n+   * @param __lhs A regular expression submatch.\n+   * @param __rhs A pointer to a string?\n+   * @returns true if @a __lhs  is equivalent to @a __rhs, false otherwise.\n    */\n   template<typename _Bi_iter>\n     inline bool\n@@ -1188,9 +1191,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   /**\n    * @brief Tests the inequivalence of a regular expression submatch and a\n    *        string.\n-   * @param lhs A regular expression submatch.\n-   * @param rhs A pointer to a string.\n-   * @returns true if @a lhs is not equivalent to @a rhs, false otherwise.\n+   * @param __lhs A regular expression submatch.\n+   * @param __rhs A pointer to a string.\n+   * @returns true if @a __lhs is not equivalent to @a __rhs, false otherwise.\n    */\n   template<typename _Bi_iter>\n     inline bool\n@@ -1200,9 +1203,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n   /**\n    * @brief Tests the ordering of a regular expression submatch and a string.\n-   * @param lhs A regular expression submatch.\n-   * @param rhs A string.\n-   * @returns true if @a lhs precedes @a rhs, false otherwise.\n+   * @param __lhs A regular expression submatch.\n+   * @param __rhs A string.\n+   * @returns true if @a __lhs precedes @a __rhs, false otherwise.\n    */\n   template<typename _Bi_iter>\n     inline bool\n@@ -1212,9 +1215,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n   /**\n    * @brief Tests the ordering of a regular expression submatch and a string.\n-   * @param lhs A regular expression submatch.\n-   * @param rhs A string.\n-   * @returns true if @a lhs succeeds @a rhs, false otherwise.\n+   * @param __lhs A regular expression submatch.\n+   * @param __rhs A string.\n+   * @returns true if @a __lhs succeeds @a __rhs, false otherwise.\n    */\n   template<typename _Bi_iter>\n     inline bool\n@@ -1224,9 +1227,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n   /**\n    * @brief Tests the ordering of a regular expression submatch and a string.\n-   * @param lhs A regular expression submatch.\n-   * @param rhs A string.\n-   * @returns true if @a lhs does not precede @a rhs, false otherwise.\n+   * @param __lhs A regular expression submatch.\n+   * @param __rhs A string.\n+   * @returns true if @a __lhs does not precede @a __rhs, false otherwise.\n    */\n   template<typename _Bi_iter>\n     inline bool\n@@ -1236,9 +1239,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n   /**\n    * @brief Tests the ordering of a regular expression submatch and a string.\n-   * @param lhs A regular expression submatch.\n-   * @param rhs A string.\n-   * @returns true if @a lhs does not succeed @a rhs, false otherwise.\n+   * @param __lhs A regular expression submatch.\n+   * @param __rhs A string.\n+   * @returns true if @a __lhs does not succeed @a __rhs, false otherwise.\n    */\n   template<typename _Bi_iter>\n     inline bool\n@@ -1249,9 +1252,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   /**\n    * @brief Tests the equivalence of a string and a regular expression\n    *        submatch.\n-   * @param lhs A string.\n-   * @param rhs A regular expression submatch.\n-   * @returns true if @a lhs is equivalent to @a rhs, false otherwise.\n+   * @param __lhs A string.\n+   * @param __rhs A regular expression submatch.\n+   * @returns true if @a __lhs is equivalent to @a __rhs, false otherwise.\n    */\n   template<typename _Bi_iter>\n     inline bool\n@@ -1265,9 +1268,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   /**\n    * @brief Tests the inequivalence of a string and a regular expression\n    *        submatch.\n-   * @param lhs A string.\n-   * @param rhs A regular expression submatch.\n-   * @returns true if @a lhs is not equivalent to @a rhs, false otherwise.\n+   * @param __lhs A string.\n+   * @param __rhs A regular expression submatch.\n+   * @returns true if @a __lhs is not equivalent to @a __rhs, false otherwise.\n    */\n   template<typename _Bi_iter>\n     inline bool\n@@ -1277,9 +1280,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n   /**\n    * @brief Tests the ordering of a string and a regular expression submatch.\n-   * @param lhs A string.\n-   * @param rhs A regular expression submatch.\n-   * @returns true if @a lhs precedes @a rhs, false otherwise.\n+   * @param __lhs A string.\n+   * @param __rhs A regular expression submatch.\n+   * @returns true if @a __lhs precedes @a __rhs, false otherwise.\n    */\n   template<typename _Bi_iter>\n     inline bool\n@@ -1292,9 +1295,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n   /**\n    * @brief Tests the ordering of a string and a regular expression submatch.\n-   * @param lhs A string.\n-   * @param rhs A regular expression submatch.\n-   * @returns true if @a lhs succeeds @a rhs, false otherwise.\n+   * @param __lhs A string.\n+   * @param __rhs A regular expression submatch.\n+   * @returns true if @a __lhs succeeds @a __rhs, false otherwise.\n    */\n   template<typename _Bi_iter>\n     inline bool\n@@ -1304,9 +1307,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n   /**\n    * @brief Tests the ordering of a string and a regular expression submatch.\n-   * @param lhs A string.\n-   * @param rhs A regular expression submatch.\n-   * @returns true if @a lhs does not precede @a rhs, false otherwise.\n+   * @param __lhs A string.\n+   * @param __rhs A regular expression submatch.\n+   * @returns true if @a __lhs does not precede @a __rhs, false otherwise.\n    */\n   template<typename _Bi_iter>\n     inline bool\n@@ -1316,9 +1319,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n   /**\n    * @brief Tests the ordering of a string and a regular expression submatch.\n-   * @param lhs A string.\n-   * @param rhs A regular expression submatch.\n-   * @returns true if @a lhs does not succeed @a rhs, false otherwise.\n+   * @param __lhs A string.\n+   * @param __rhs A regular expression submatch.\n+   * @returns true if @a __lhs does not succeed @a __rhs, false otherwise.\n    */\n   template<typename _Bi_iter>\n     inline bool\n@@ -1329,9 +1332,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   /**\n    * @brief Tests the equivalence of a regular expression submatch and a\n    *        string.\n-   * @param lhs A regular expression submatch.\n-   * @param rhs A const string reference.\n-   * @returns true if @a lhs  is equivalent to @a rhs, false otherwise.\n+   * @param __lhs A regular expression submatch.\n+   * @param __rhs A const string reference.\n+   * @returns true if @a __lhs  is equivalent to @a __rhs, false otherwise.\n    */\n   template<typename _Bi_iter>\n     inline bool\n@@ -1345,9 +1348,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   /**\n    * @brief Tests the inequivalence of a regular expression submatch and a\n    *        string.\n-   * @param lhs A regular expression submatch.\n-   * @param rhs A const string reference.\n-   * @returns true if @a lhs is not equivalent to @a rhs, false otherwise.\n+   * @param __lhs A regular expression submatch.\n+   * @param __rhs A const string reference.\n+   * @returns true if @a __lhs is not equivalent to @a __rhs, false otherwise.\n    */\n   template<typename _Bi_iter>\n     inline bool\n@@ -1357,9 +1360,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n   /**\n    * @brief Tests the ordering of a regular expression submatch and a string.\n-   * @param lhs A regular expression submatch.\n-   * @param rhs A const string reference.\n-   * @returns true if @a lhs precedes @a rhs, false otherwise.\n+   * @param __lhs A regular expression submatch.\n+   * @param __rhs A const string reference.\n+   * @returns true if @a __lhs precedes @a __rhs, false otherwise.\n    */\n   template<typename _Bi_iter>\n     inline bool\n@@ -1372,9 +1375,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n   /**\n    * @brief Tests the ordering of a regular expression submatch and a string.\n-   * @param lhs A regular expression submatch.\n-   * @param rhs A const string reference.\n-   * @returns true if @a lhs succeeds @a rhs, false otherwise.\n+   * @param __lhs A regular expression submatch.\n+   * @param __rhs A const string reference.\n+   * @returns true if @a __lhs succeeds @a __rhs, false otherwise.\n    */\n   template<typename _Bi_iter>\n     inline bool\n@@ -1384,9 +1387,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n   /**\n    * @brief Tests the ordering of a regular expression submatch and a string.\n-   * @param lhs A regular expression submatch.\n-   * @param rhs A const string reference.\n-   * @returns true if @a lhs does not precede @a rhs, false otherwise.\n+   * @param __lhs A regular expression submatch.\n+   * @param __rhs A const string reference.\n+   * @returns true if @a __lhs does not precede @a __rhs, false otherwise.\n    */\n   template<typename _Bi_iter>\n     inline bool\n@@ -1396,9 +1399,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n   /**\n    * @brief Tests the ordering of a regular expression submatch and a string.\n-   * @param lhs A regular expression submatch.\n-   * @param rhs A const string reference.\n-   * @returns true if @a lhs does not succeed @a rhs, false otherwise.\n+   * @param __lhs A regular expression submatch.\n+   * @param __rhs A const string reference.\n+   * @returns true if @a __lhs does not succeed @a __rhs, false otherwise.\n    */\n   template<typename _Bi_iter>\n     inline bool\n@@ -1409,8 +1412,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   /**\n    * @brief Inserts a matched string into an output stream.\n    *\n-   * @param os The output stream.\n-   * @param m  A submatch string.\n+   * @param __os The output stream.\n+   * @param __m  A submatch string.\n    *\n    * @returns the output stream with the submatch string inserted.\n    */\n@@ -1603,28 +1606,28 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       /**\n        * @brief Gets the length of the indicated submatch.\n-       * @param sub indicates the submatch.\n+       * @param __sub indicates the submatch.\n        * @pre   ready() == true\n        *\n        * This function returns the length of the indicated submatch, or the\n-       * length of the entire match if @p sub is zero (the default).\n+       * length of the entire match if @p __sub is zero (the default).\n        */\n       difference_type\n       length(size_type __sub = 0) const\n       { return (*this)[__sub].length(); }\n \n       /**\n        * @brief Gets the offset of the beginning of the indicated submatch.\n-       * @param sub indicates the submatch.\n+       * @param __sub indicates the submatch.\n        * @pre   ready() == true\n        *\n        * This function returns the offset from the beginning of the target\n-       * sequence to the beginning of the submatch, unless the value of @p sub\n+       * sequence to the beginning of the submatch, unless the value of @p __sub\n        * is zero (the default), in which case this function returns the offset\n        * from the beginning of the target sequence to the beginning of the\n        * match.\n        *\n-       * Returns -1 if @p sub is out of range.\n+       * Returns -1 if @p __sub is out of range.\n        */\n       difference_type\n       position(size_type __sub = 0) const\n@@ -1635,25 +1638,26 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       /**\n        * @brief Gets the match or submatch converted to a string type.\n-       * @param sub indicates the submatch.\n+       * @param __sub indicates the submatch.\n        * @pre   ready() == true\n        *\n-       * This function gets the submatch (or match, if @p sub is zero) extracted\n-       * from the target range and converted to the associated string type.\n+       * This function gets the submatch (or match, if @p __sub is\n+       * zero) extracted from the target range and converted to the\n+       * associated string type.\n        */\n       string_type\n       str(size_type __sub = 0) const\n       { return (*this)[__sub].str(); }\n       \n       /**\n        * @brief Gets a %sub_match reference for the match or submatch.\n-       * @param sub indicates the submatch.\n+       * @param __sub indicates the submatch.\n        * @pre   ready() == true\n        *\n-       * This function gets a reference to the indicated submatch, or the entire\n-       * match if @p sub is zero.\n+       * This function gets a reference to the indicated submatch, or\n+       * the entire match if @p __sub is zero.\n        *\n-       * If @p sub >= size() then this function returns a %sub_match with a\n+       * If @p __sub >= size() then this function returns a %sub_match with a\n        * special value indicating no submatch.\n        */\n       const_reference\n@@ -1872,8 +1876,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   // [7.10.6] match_results swap\n   /**\n    * @brief Swaps two match results.\n-   * @param lhs A match result.\n-   * @param rhs A match result.\n+   * @param __lhs A match result.\n+   * @param __rhs A match result.\n    *\n    * The contents of the two match_results objects are swapped.\n    */\n@@ -1893,11 +1897,11 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n    * @brief Determines if there is a match between the regular expression @p e\n    * and all of the character sequence [first, last).\n    *\n-   * @param s     Start of the character sequence to match.\n-   * @param e     One-past-the-end of the character sequence to match.\n-   * @param m     The match results.\n-   * @param re    The regular expression.\n-   * @param flags Controls how the regular expression is matched.\n+   * @param __s     Start of the character sequence to match.\n+   * @param __e     One-past-the-end of the character sequence to match.\n+   * @param __m     The match results.\n+   * @param __re    The regular expression.\n+   * @param __flags Controls how the regular expression is matched.\n    *\n    * @retval true  A match exists.\n    * @retval false Otherwise.\n@@ -1928,10 +1932,10 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n    * @brief Indicates if there is a match between the regular expression @p e\n    * and all of the character sequence [first, last).\n    *\n-   * @param first Beginning of the character sequence to match.\n-   * @param last  One-past-the-end of the character sequence to match.\n-   * @param re    The regular expression.\n-   * @param flags Controls how the regular expression is matched.\n+   * @param __first Beginning of the character sequence to match.\n+   * @param __last  One-past-the-end of the character sequence to match.\n+   * @param __re    The regular expression.\n+   * @param __flags Controls how the regular expression is matched.\n    *\n    * @retval true  A match exists.\n    * @retval false Otherwise.\n@@ -1953,10 +1957,10 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n    * @brief Determines if there is a match between the regular expression @p e\n    * and a C-style null-terminated string.\n    *\n-   * @param s  The C-style null-terminated string to match.\n-   * @param m  The match results.\n-   * @param re The regular expression.\n-   * @param f  Controls how the regular expression is matched.\n+   * @param __s  The C-style null-terminated string to match.\n+   * @param __m  The match results.\n+   * @param __re The regular expression.\n+   * @param __f  Controls how the regular expression is matched.\n    *\n    * @retval true  A match exists.\n    * @retval false Otherwise.\n@@ -1976,10 +1980,10 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n    * @brief Determines if there is a match between the regular expression @p e\n    * and a string.\n    *\n-   * @param s     The string to match.\n-   * @param m     The match results.\n-   * @param re    The regular expression.\n-   * @param flags Controls how the regular expression is matched.\n+   * @param __s     The string to match.\n+   * @param __m     The match results.\n+   * @param __re    The regular expression.\n+   * @param __flags Controls how the regular expression is matched.\n    *\n    * @retval true  A match exists.\n    * @retval false Otherwise.\n@@ -2001,9 +2005,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n    * @brief Indicates if there is a match between the regular expression @p e\n    * and a C-style null-terminated string.\n    *\n-   * @param s  The C-style null-terminated string to match.\n-   * @param re The regular expression.\n-   * @param f  Controls how the regular expression is matched.\n+   * @param __s  The C-style null-terminated string to match.\n+   * @param __re The regular expression.\n+   * @param __f  Controls how the regular expression is matched.\n    *\n    * @retval true  A match exists.\n    * @retval false Otherwise.\n@@ -2022,9 +2026,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n    * @brief Indicates if there is a match between the regular expression @p e\n    * and a string.\n    *\n-   * @param s     [IN] The string to match.\n-   * @param re    [IN] The regular expression.\n-   * @param flags [IN] Controls how the regular expression is matched.\n+   * @param __s     [IN] The string to match.\n+   * @param __re    [IN] The regular expression.\n+   * @param __flags [IN] Controls how the regular expression is matched.\n    *\n    * @retval true  A match exists.\n    * @retval false Otherwise.\n@@ -2043,11 +2047,11 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   // [7.11.3] Function template regex_search\n   /**\n    * Searches for a regular expression within a range.\n-   * @param first [IN]  The start of the string to search.\n-   * @param last  [IN]  One-past-the-end of the string to search.\n-   * @param m     [OUT] The match results.\n-   * @param re    [IN]  The regular expression to search for.\n-   * @param flags [IN]  Search policy flags.\n+   * @param __first [IN]  The start of the string to search.\n+   * @param __last  [IN]  One-past-the-end of the string to search.\n+   * @param __m     [OUT] The match results.\n+   * @param __re    [IN]  The regular expression to search for.\n+   * @param __flags [IN]  Search policy flags.\n    * @retval true  A match was found within the string.\n    * @retval false No match was found within the string, the content of %m is\n    *               undefined.\n@@ -2068,10 +2072,10 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n   /**\n    * Searches for a regular expression within a range.\n-   * @param first [IN]  The start of the string to search.\n-   * @param last  [IN]  One-past-the-end of the string to search.\n-   * @param re    [IN]  The regular expression to search for.\n-   * @param flags [IN]  Search policy flags.\n+   * @param __first [IN]  The start of the string to search.\n+   * @param __last  [IN]  One-past-the-end of the string to search.\n+   * @param __re    [IN]  The regular expression to search for.\n+   * @param __flags [IN]  Search policy flags.\n    * @retval true  A match was found within the string.\n    * @retval false No match was found within the string.\n    * @doctodo\n@@ -2091,10 +2095,10 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n   /**\n    * @brief Searches for a regular expression within a C-string.\n-   * @param s [IN]  A C-string to search for the regex.\n-   * @param m [OUT] The set of regex matches.\n-   * @param e [IN]  The regex to search for in @p s.\n-   * @param f [IN]  The search flags.\n+   * @param __s [IN]  A C-string to search for the regex.\n+   * @param __m [OUT] The set of regex matches.\n+   * @param __e [IN]  The regex to search for in @p s.\n+   * @param __f [IN]  The search flags.\n    * @retval true  A match was found within the string.\n    * @retval false No match was found within the string, the content of %m is\n    *               undefined.\n@@ -2113,9 +2117,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n   /**\n    * @brief Searches for a regular expression within a C-string.\n-   * @param s [IN]  The C-string to search.\n-   * @param e [IN]  The regular expression to search for.\n-   * @param f [IN]  Search policy flags.\n+   * @param __s [IN]  The C-string to search.\n+   * @param __e [IN]  The regular expression to search for.\n+   * @param __f [IN]  Search policy flags.\n    * @retval true  A match was found within the string.\n    * @retval false No match was found within the string.\n    * @doctodo\n@@ -2132,9 +2136,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n   /**\n    * @brief Searches for a regular expression within a string.\n-   * @param s     [IN]  The string to search.\n-   * @param e     [IN]  The regular expression to search for.\n-   * @param flags [IN]  Search policy flags.\n+   * @param __s     [IN]  The string to search.\n+   * @param __e     [IN]  The regular expression to search for.\n+   * @param __flags [IN]  Search policy flags.\n    * @retval true  A match was found within the string.\n    * @retval false No match was found within the string.\n    * @doctodo\n@@ -2153,10 +2157,10 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n   /**\n    * @brief Searches for a regular expression within a string.\n-   * @param s [IN]  A C++ string to search for the regex.\n-   * @param m [OUT] The set of regex matches.\n-   * @param e [IN]  The regex to search for in @p s.\n-   * @param f [IN]  The search flags.\n+   * @param __s [IN]  A C++ string to search for the regex.\n+   * @param __m [OUT] The set of regex matches.\n+   * @param __e [IN]  The regex to search for in @p s.\n+   * @param __f [IN]  The search flags.\n    * @retval true  A match was found within the string.\n    * @retval false No match was found within the string, the content of %m is\n    *               undefined.\n@@ -2178,12 +2182,12 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   // std [28.11.4] Function template regex_replace\n   /**\n    * @doctodo\n-   * @param out\n-   * @param first\n-   * @param last\n-   * @param e\n-   * @param fmt\n-   * @param flags\n+   * @param __out\n+   * @param __first\n+   * @param __last\n+   * @param __e\n+   * @param __fmt\n+   * @param __flags\n    *\n    * @returns out\n    * @throws an exception of type regex_error.\n@@ -2202,10 +2206,10 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n   /**\n    * @doctodo\n-   * @param s\n-   * @param e\n-   * @param fmt\n-   * @param flags\n+   * @param __s\n+   * @param __e\n+   * @param __fmt\n+   * @param __flags\n    *\n    * @returns a copy of string @p s with replacements.\n    *\n@@ -2256,10 +2260,10 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       \n       /**\n        * Constructs a %regex_iterator...\n-       * @param a  [IN] The start of a text range to search.\n-       * @param b  [IN] One-past-the-end of the text range to search.\n-       * @param re [IN] The regular expression to match.\n-       * @param m  [IN] Policy flags for match rules.\n+       * @param __a  [IN] The start of a text range to search.\n+       * @param __b  [IN] One-past-the-end of the text range to search.\n+       * @param __re [IN] The regular expression to match.\n+       * @param __m  [IN] Policy flags for match rules.\n        * @todo Implement this function.\n        * @doctodo\n        */\n@@ -2373,10 +2377,10 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       \n       /**\n        * Constructs a %regex_token_iterator...\n-       * @param a          [IN] The start of the text to search.\n-       * @param b          [IN] One-past-the-end of the text to search.\n-       * @param re         [IN] The regular expression to search for.\n-       * @param submatch   [IN] Which submatch to return.  There are some\n+       * @param __a          [IN] The start of the text to search.\n+       * @param __b          [IN] One-past-the-end of the text to search.\n+       * @param __re         [IN] The regular expression to search for.\n+       * @param __submatch   [IN] Which submatch to return.  There are some\n        *                        special values for this parameter:\n        *                        - -1 each enumerated subexpression does NOT\n        *                          match the regular expression (aka field\n@@ -2386,7 +2390,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *                          within the text.\n        *                        - >0 enumerates only the indicated\n        *                          subexpression from a match within the text.\n-       * @param m          [IN] Policy flags for match rules.\n+       * @param __m          [IN] Policy flags for match rules.\n        *\n        * @todo Implement this function.\n        * @doctodo\n@@ -2398,12 +2402,12 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       /**\n        * Constructs a %regex_token_iterator...\n-       * @param a          [IN] The start of the text to search.\n-       * @param b          [IN] One-past-the-end of the text to search.\n-       * @param re         [IN] The regular expression to search for.\n-       * @param submatches [IN] A list of subexpressions to return for each\n+       * @param __a          [IN] The start of the text to search.\n+       * @param __b          [IN] One-past-the-end of the text to search.\n+       * @param __re         [IN] The regular expression to search for.\n+       * @param __submatches [IN] A list of subexpressions to return for each\n        *                        regular expression match within the text.\n-       * @param m          [IN] Policy flags for match rules.\n+       * @param __m          [IN] Policy flags for match rules.\n        *\n        * @todo Implement this function.\n        * @doctodo\n@@ -2416,12 +2420,12 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       /**\n        * Constructs a %regex_token_iterator...\n-       * @param a          [IN] The start of the text to search.\n-       * @param b          [IN] One-past-the-end of the text to search.\n-       * @param re         [IN] The regular expression to search for.\n-       * @param submatches [IN] A list of subexpressions to return for each\n-       *                        regular expression match within the text.\n-       * @param m          [IN] Policy flags for match rules.\n+       * @param __a          [IN] The start of the text to search.\n+       * @param __b          [IN] One-past-the-end of the text to search.\n+       * @param __re         [IN] The regular expression to search for.\n+       * @param __submatches [IN] A list of subexpressions to return for each\n+       *                          regular expression match within the text.\n+       * @param __m          [IN] Policy flags for match rules.\n        \n        * @todo Implement this function.\n        * @doctodo\n@@ -2435,14 +2439,14 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       /**\n        * @brief Copy constructs a %regex_token_iterator.\n-       * @param rhs [IN] A %regex_token_iterator to copy.\n+       * @param __rhs [IN] A %regex_token_iterator to copy.\n        * @todo Implement this function.\n        */\n       regex_token_iterator(const regex_token_iterator& __rhs);\n       \n       /**\n        * @brief Assigns a %regex_token_iterator to another.\n-       * @param rhs [IN] A %regex_token_iterator to copy.\n+       * @param __rhs [IN] A %regex_token_iterator to copy.\n        * @todo Implement this function.\n        */\n       regex_token_iterator&"}, {"sha": "567c08ef4ec97fb8fcb9e2b16c9139f48ca52ba6", "filename": "libstdc++-v3/include/bits/regex_error.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fregex_error.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fregex_error.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fregex_error.h?ref=93c66bc68a2554cbb2ba11f90944314af378d16b", "patch": "@@ -99,7 +99,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   static constexpr error_type error_space(_S_error_space);\n \n   /**\n-   * One of <em>*?+{<em> was not preceded by a valid regular expression.\n+   * One of <em>*?+{</em> was not preceded by a valid regular expression.\n    */\n   static constexpr error_type error_badrepeat(_S_error_badrepeat);\n \n@@ -136,7 +136,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     /**\n      * @brief Constructs a regex_error object.\n      *\n-     * @param ecode the regex error code.\n+     * @param __ecode the regex error code.\n      */\n     explicit\n     regex_error(regex_constants::error_type __ecode);"}, {"sha": "d3fe7d8128649c6b21eb8e457271e63e7702b1ac", "filename": "libstdc++-v3/include/bits/slice_array.h", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fslice_array.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fslice_array.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fslice_array.h?ref=93c66bc68a2554cbb2ba11f90944314af378d16b", "patch": "@@ -1,7 +1,7 @@\n // The template and inlines for the -*- C++ -*- slice_array class.\n \n // Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2004, 2005, 2006, 2009,\n-// 2010  Free Software Foundation, Inc.\n+// 2010, 2011  Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -66,11 +66,11 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     /**\n      *  @brief  Construct a slice.\n      *\n-     *  @param  o  Offset in array of first element.\n-     *  @param  d  Number of elements in slice.\n-     *  @param  s  Stride between array elements.\n+     *  @param  __o  Offset in array of first element.\n+     *  @param  __d  Number of elements in slice.\n+     *  @param  __s  Stride between array elements.\n      */\n-    slice(size_t, size_t, size_t);\n+    slice(size_t __o, size_t __d, size_t __s);\n \n     ///  Return array offset of first slice element.\n     size_t start() const;"}, {"sha": "ba49228dfb4dd715ced926478b5eea0dec0d1e0f", "filename": "libstdc++-v3/include/bits/stl_algo.h", "status": "modified", "additions": 659, "deletions": 636, "changes": 1295, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_algo.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_algo.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_algo.h?ref=93c66bc68a2554cbb2ba11f90944314af378d16b"}, {"sha": "9d3a970d2caefd057d4aa6e8fd48f3f71340af91", "filename": "libstdc++-v3/include/bits/stl_algobase.h", "status": "modified", "additions": 59, "deletions": 59, "changes": 118, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_algobase.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_algobase.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_algobase.h?ref=93c66bc68a2554cbb2ba11f90944314af378d16b", "patch": "@@ -106,8 +106,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   /**\n    *  @brief Swaps the contents of two iterators.\n    *  @ingroup mutating_algorithms\n-   *  @param  a  An iterator.\n-   *  @param  b  Another iterator.\n+   *  @param  __a  An iterator.\n+   *  @param  __b  Another iterator.\n    *  @return   Nothing.\n    *\n    *  This function swaps the values pointed to by two iterators, not the\n@@ -145,9 +145,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   /**\n    *  @brief Swap the elements of two sequences.\n    *  @ingroup mutating_algorithms\n-   *  @param  first1  A forward iterator.\n-   *  @param  last1   A forward iterator.\n-   *  @param  first2  A forward iterator.\n+   *  @param  __first1  A forward iterator.\n+   *  @param  __last1   A forward iterator.\n+   *  @param  __first2  A forward iterator.\n    *  @return   An iterator equal to @p first2+(last1-first1).\n    *\n    *  Swaps each element in the range @p [first1,last1) with the\n@@ -174,8 +174,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   /**\n    *  @brief This does what you think it does.\n    *  @ingroup sorting_algorithms\n-   *  @param  a  A thing of arbitrary type.\n-   *  @param  b  Another thing of arbitrary type.\n+   *  @param  __a  A thing of arbitrary type.\n+   *  @param  __b  Another thing of arbitrary type.\n    *  @return   The lesser of the parameters.\n    *\n    *  This is the simple classic generic implementation.  It will work on\n@@ -197,8 +197,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   /**\n    *  @brief This does what you think it does.\n    *  @ingroup sorting_algorithms\n-   *  @param  a  A thing of arbitrary type.\n-   *  @param  b  Another thing of arbitrary type.\n+   *  @param  __a  A thing of arbitrary type.\n+   *  @param  __b  Another thing of arbitrary type.\n    *  @return   The greater of the parameters.\n    *\n    *  This is the simple classic generic implementation.  It will work on\n@@ -220,9 +220,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   /**\n    *  @brief This does what you think it does.\n    *  @ingroup sorting_algorithms\n-   *  @param  a  A thing of arbitrary type.\n-   *  @param  b  Another thing of arbitrary type.\n-   *  @param  comp  A @link comparison_functors comparison functor@endlink.\n+   *  @param  __a  A thing of arbitrary type.\n+   *  @param  __b  Another thing of arbitrary type.\n+   *  @param  __comp  A @link comparison_functors comparison functor@endlink.\n    *  @return   The lesser of the parameters.\n    *\n    *  This will work on temporary expressions, since they are only evaluated\n@@ -241,9 +241,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   /**\n    *  @brief This does what you think it does.\n    *  @ingroup sorting_algorithms\n-   *  @param  a  A thing of arbitrary type.\n-   *  @param  b  Another thing of arbitrary type.\n-   *  @param  comp  A @link comparison_functors comparison functor@endlink.\n+   *  @param  __a  A thing of arbitrary type.\n+   *  @param  __b  Another thing of arbitrary type.\n+   *  @param  __comp  A @link comparison_functors comparison functor@endlink.\n    *  @return   The greater of the parameters.\n    *\n    *  This will work on temporary expressions, since they are only evaluated\n@@ -425,9 +425,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   /**\n    *  @brief Copies the range [first,last) into result.\n    *  @ingroup mutating_algorithms\n-   *  @param  first  An input iterator.\n-   *  @param  last   An input iterator.\n-   *  @param  result An output iterator.\n+   *  @param  __first  An input iterator.\n+   *  @param  __last   An input iterator.\n+   *  @param  __result An output iterator.\n    *  @return   result + (first - last)\n    *\n    *  This inline function will boil down to a call to @c memmove whenever\n@@ -458,9 +458,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   /**\n    *  @brief Moves the range [first,last) into result.\n    *  @ingroup mutating_algorithms\n-   *  @param  first  An input iterator.\n-   *  @param  last   An input iterator.\n-   *  @param  result An output iterator.\n+   *  @param  __first  An input iterator.\n+   *  @param  __last   An input iterator.\n+   *  @param  __result An output iterator.\n    *  @return   result + (first - last)\n    *\n    *  This inline function will boil down to a call to @c memmove whenever\n@@ -593,9 +593,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   /**\n    *  @brief Copies the range [first,last) into result.\n    *  @ingroup mutating_algorithms\n-   *  @param  first  A bidirectional iterator.\n-   *  @param  last   A bidirectional iterator.\n-   *  @param  result A bidirectional iterator.\n+   *  @param  __first  A bidirectional iterator.\n+   *  @param  __last   A bidirectional iterator.\n+   *  @param  __result A bidirectional iterator.\n    *  @return   result - (first - last)\n    *\n    *  The function has the same effect as copy, but starts at the end of the\n@@ -629,9 +629,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   /**\n    *  @brief Moves the range [first,last) into result.\n    *  @ingroup mutating_algorithms\n-   *  @param  first  A bidirectional iterator.\n-   *  @param  last   A bidirectional iterator.\n-   *  @param  result A bidirectional iterator.\n+   *  @param  __first  A bidirectional iterator.\n+   *  @param  __last   A bidirectional iterator.\n+   *  @param  __result A bidirectional iterator.\n    *  @return   result - (first - last)\n    *\n    *  The function has the same effect as move, but starts at the end of the\n@@ -701,9 +701,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   /**\n    *  @brief Fills the range [first,last) with copies of value.\n    *  @ingroup mutating_algorithms\n-   *  @param  first  A forward iterator.\n-   *  @param  last   A forward iterator.\n-   *  @param  value  A reference-to-const of arbitrary type.\n+   *  @param  __first  A forward iterator.\n+   *  @param  __last   A forward iterator.\n+   *  @param  __value  A reference-to-const of arbitrary type.\n    *  @return   Nothing.\n    *\n    *  This function fills a range with copies of the same value.  For char\n@@ -758,9 +758,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   /**\n    *  @brief Fills the range [first,first+n) with copies of value.\n    *  @ingroup mutating_algorithms\n-   *  @param  first  An output iterator.\n-   *  @param  n      The count of copies to perform.\n-   *  @param  value  A reference-to-const of arbitrary type.\n+   *  @param  __first  An output iterator.\n+   *  @param  __n      The count of copies to perform.\n+   *  @param  __value  A reference-to-const of arbitrary type.\n    *  @return   The iterator at first+n.\n    *\n    *  This function fills a range with copies of the same value.  For char\n@@ -923,9 +923,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   /**\n    *  @brief Finds the first position in which @a val could be inserted\n    *         without changing the ordering.\n-   *  @param  first   An iterator.\n-   *  @param  last    Another iterator.\n-   *  @param  val     The search term.\n+   *  @param  __first   An iterator.\n+   *  @param  __last    Another iterator.\n+   *  @param  __val     The search term.\n    *  @return         An iterator pointing to the first element <em>not less\n    *                  than</em> @a val, or end() if every element is less than \n    *                  @a val.\n@@ -996,9 +996,9 @@ _GLIBCXX_BEGIN_NAMESPACE_ALGO\n   /**\n    *  @brief Tests a range for element-wise equality.\n    *  @ingroup non_mutating_algorithms\n-   *  @param  first1  An input iterator.\n-   *  @param  last1   An input iterator.\n-   *  @param  first2  An input iterator.\n+   *  @param  __first1  An input iterator.\n+   *  @param  __last1   An input iterator.\n+   *  @param  __first2  An input iterator.\n    *  @return   A boolean true or false.\n    *\n    *  This compares the elements of two ranges using @c == and returns true or\n@@ -1025,10 +1025,10 @@ _GLIBCXX_BEGIN_NAMESPACE_ALGO\n   /**\n    *  @brief Tests a range for element-wise equality.\n    *  @ingroup non_mutating_algorithms\n-   *  @param  first1  An input iterator.\n-   *  @param  last1   An input iterator.\n-   *  @param  first2  An input iterator.\n-   *  @param binary_pred A binary predicate @link functors\n+   *  @param  __first1  An input iterator.\n+   *  @param  __last1   An input iterator.\n+   *  @param  __first2  An input iterator.\n+   *  @param __binary_pred A binary predicate @link functors\n    *                  functor@endlink.\n    *  @return         A boolean true or false.\n    *\n@@ -1056,10 +1056,10 @@ _GLIBCXX_BEGIN_NAMESPACE_ALGO\n   /**\n    *  @brief Performs @b dictionary comparison on ranges.\n    *  @ingroup sorting_algorithms\n-   *  @param  first1  An input iterator.\n-   *  @param  last1   An input iterator.\n-   *  @param  first2  An input iterator.\n-   *  @param  last2   An input iterator.\n+   *  @param  __first1  An input iterator.\n+   *  @param  __last1   An input iterator.\n+   *  @param  __first2  An input iterator.\n+   *  @param  __last2   An input iterator.\n    *  @return   A boolean true or false.\n    *\n    *  <em>Returns true if the sequence of elements defined by the range\n@@ -1092,11 +1092,11 @@ _GLIBCXX_BEGIN_NAMESPACE_ALGO\n   /**\n    *  @brief Performs @b dictionary comparison on ranges.\n    *  @ingroup sorting_algorithms\n-   *  @param  first1  An input iterator.\n-   *  @param  last1   An input iterator.\n-   *  @param  first2  An input iterator.\n-   *  @param  last2   An input iterator.\n-   *  @param  comp  A @link comparison_functors comparison functor@endlink.\n+   *  @param  __first1  An input iterator.\n+   *  @param  __last1   An input iterator.\n+   *  @param  __first2  An input iterator.\n+   *  @param  __last2   An input iterator.\n+   *  @param  __comp  A @link comparison_functors comparison functor@endlink.\n    *  @return   A boolean true or false.\n    *\n    *  The same as the four-parameter @c lexicographical_compare, but uses the\n@@ -1132,9 +1132,9 @@ _GLIBCXX_BEGIN_NAMESPACE_ALGO\n   /**\n    *  @brief Finds the places in ranges which don't match.\n    *  @ingroup non_mutating_algorithms\n-   *  @param  first1  An input iterator.\n-   *  @param  last1   An input iterator.\n-   *  @param  first2  An input iterator.\n+   *  @param  __first1  An input iterator.\n+   *  @param  __last1   An input iterator.\n+   *  @param  __first2  An input iterator.\n    *  @return   A pair of iterators pointing to the first mismatch.\n    *\n    *  This compares the elements of two ranges using @c == and returns a pair\n@@ -1166,10 +1166,10 @@ _GLIBCXX_BEGIN_NAMESPACE_ALGO\n   /**\n    *  @brief Finds the places in ranges which don't match.\n    *  @ingroup non_mutating_algorithms\n-   *  @param  first1  An input iterator.\n-   *  @param  last1   An input iterator.\n-   *  @param  first2  An input iterator.\n-   *  @param binary_pred A binary predicate @link functors\n+   *  @param  __first1  An input iterator.\n+   *  @param  __last1   An input iterator.\n+   *  @param  __first2  An input iterator.\n+   *  @param __binary_pred A binary predicate @link functors\n    *         functor@endlink.\n    *  @return   A pair of iterators pointing to the first mismatch.\n    *"}, {"sha": "17ea01a96e9b000f04e6326ea15c7b0f92b45e41", "filename": "libstdc++-v3/include/bits/stl_deque.h", "status": "modified", "additions": 87, "deletions": 87, "changes": 174, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_deque.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_deque.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_deque.h?ref=93c66bc68a2554cbb2ba11f90944314af378d16b", "patch": "@@ -68,7 +68,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n   /**\n    *  @brief This function controls the size of memory nodes.\n-   *  @param  size  The size of an element.\n+   *  @param  __size  The size of an element.\n    *  @return   The number (not byte size) of elements per node.\n    *\n    *  This function started off as a compiler kludge from SGI, but\n@@ -569,7 +569,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n   /**\n    *  @brief Layout storage.\n-   *  @param  num_elements  The count of T's for which to allocate space\n+   *  @param  __num_elements  The count of T's for which to allocate space\n    *                        at first.\n    *  @return   Nothing.\n    *\n@@ -664,7 +664,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n    *  - iterator    _M_start, _M_finish\n    *\n    *  map_size is at least 8.  %map is an array of map_size\n-   *  pointers-to-@anodes.  (The name %map has nothing to do with the\n+   *  pointers-to-@a nodes.  (The name %map has nothing to do with the\n    *  std::map class, and @b nodes should not be confused with\n    *  std::list's usage of @a node.)\n    *\n@@ -780,7 +780,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief  Creates a %deque with no elements.\n-       *  @param  a  An allocator object.\n+       *  @param  __a  An allocator object.\n        */\n       explicit\n       deque(const allocator_type& __a)\n@@ -789,7 +789,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n #ifdef __GXX_EXPERIMENTAL_CXX0X__\n       /**\n        *  @brief  Creates a %deque with default constructed elements.\n-       *  @param  n  The number of elements to initially create.\n+       *  @param  __n  The number of elements to initially create.\n        *\n        *  This constructor fills the %deque with @a n default\n        *  constructed elements.\n@@ -801,11 +801,11 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief  Creates a %deque with copies of an exemplar element.\n-       *  @param  n  The number of elements to initially create.\n-       *  @param  value  An element to copy.\n-       *  @param  a  An allocator.\n+       *  @param  __n  The number of elements to initially create.\n+       *  @param  __value  An element to copy.\n+       *  @param  __a  An allocator.\n        *\n-       *  This constructor fills the %deque with @a n copies of @a value.\n+       *  This constructor fills the %deque with @a __n copies of @a __value.\n        */\n       deque(size_type __n, const value_type& __value,\n \t    const allocator_type& __a = allocator_type())\n@@ -814,11 +814,11 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n #else\n       /**\n        *  @brief  Creates a %deque with copies of an exemplar element.\n-       *  @param  n  The number of elements to initially create.\n-       *  @param  value  An element to copy.\n-       *  @param  a  An allocator.\n+       *  @param  __n  The number of elements to initially create.\n+       *  @param  __value  An element to copy.\n+       *  @param  __a  An allocator.\n        *\n-       *  This constructor fills the %deque with @a n copies of @a value.\n+       *  This constructor fills the %deque with @a __n copies of @a __value.\n        */\n       explicit\n       deque(size_type __n, const value_type& __value = value_type(),\n@@ -829,10 +829,10 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief  %Deque copy constructor.\n-       *  @param  x  A %deque of identical element and allocator types.\n+       *  @param  __x  A %deque of identical element and allocator types.\n        *\n        *  The newly-created %deque uses a copy of the allocation object used\n-       *  by @a x.\n+       *  by @a __x.\n        */\n       deque(const deque& __x)\n       : _Base(__x._M_get_Tp_allocator(), __x.size())\n@@ -843,24 +843,24 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n #ifdef __GXX_EXPERIMENTAL_CXX0X__\n       /**\n        *  @brief  %Deque move constructor.\n-       *  @param  x  A %deque of identical element and allocator types.\n+       *  @param  __x  A %deque of identical element and allocator types.\n        *\n-       *  The newly-created %deque contains the exact contents of @a x.\n-       *  The contents of @a x are a valid, but unspecified %deque.\n+       *  The newly-created %deque contains the exact contents of @a __x.\n+       *  The contents of @a __x are a valid, but unspecified %deque.\n        */\n       deque(deque&& __x)\n       : _Base(std::move(__x)) { }\n \n       /**\n        *  @brief  Builds a %deque from an initializer list.\n-       *  @param  l  An initializer_list.\n-       *  @param  a  An allocator object.\n+       *  @param  __l  An initializer_list.\n+       *  @param  __a  An allocator object.\n        *\n        *  Create a %deque consisting of copies of the elements in the\n-       *  initializer_list @a l.\n+       *  initializer_list @a __l.\n        *\n        *  This will call the element type's copy constructor N times\n-       *  (where N is l.size()) and do no memory reallocation.\n+       *  (where N is __l.size()) and do no memory reallocation.\n        */\n       deque(initializer_list<value_type> __l,\n \t    const allocator_type& __a = allocator_type())\n@@ -873,16 +873,16 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief  Builds a %deque from a range.\n-       *  @param  first  An input iterator.\n-       *  @param  last  An input iterator.\n-       *  @param  a  An allocator object.\n+       *  @param  __first  An input iterator.\n+       *  @param  __last  An input iterator.\n+       *  @param  __a  An allocator object.\n        *\n-       *  Create a %deque consisting of copies of the elements from [first,\n-       *  last).\n+       *  Create a %deque consisting of copies of the elements from [__first,\n+       *  __last).\n        *\n        *  If the iterators are forward, bidirectional, or random-access, then\n        *  this will call the elements' copy constructor N times (where N is\n-       *  distance(first,last)) and do no memory reallocation.  But if only\n+       *  distance(__first,__last)) and do no memory reallocation.  But if only\n        *  input iterators are used, then this will do at most 2N calls to the\n        *  copy constructor, and logN memory reallocations.\n        */\n@@ -906,7 +906,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief  %Deque assignment operator.\n-       *  @param  x  A %deque of identical element and allocator types.\n+       *  @param  __x  A %deque of identical element and allocator types.\n        *\n        *  All the elements of @a x are copied, but unlike the copy constructor,\n        *  the allocator object is not copied.\n@@ -917,10 +917,10 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n #ifdef __GXX_EXPERIMENTAL_CXX0X__\n       /**\n        *  @brief  %Deque move assignment operator.\n-       *  @param  x  A %deque of identical element and allocator types.\n+       *  @param  __x  A %deque of identical element and allocator types.\n        *\n-       *  The contents of @a x are moved into this deque (without copying).\n-       *  @a x is a valid, but unspecified %deque.\n+       *  The contents of @a __x are moved into this deque (without copying).\n+       *  @a __x is a valid, but unspecified %deque.\n        */\n       deque&\n       operator=(deque&& __x)\n@@ -934,10 +934,10 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief  Assigns an initializer list to a %deque.\n-       *  @param  l  An initializer_list.\n+       *  @param  __l  An initializer_list.\n        *\n        *  This function fills a %deque with copies of the elements in the\n-       *  initializer_list @a l.\n+       *  initializer_list @a __l.\n        *\n        *  Note that the assignment completely changes the %deque and that the\n        *  resulting %deque's size is the same as the number of elements\n@@ -953,8 +953,8 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief  Assigns a given value to a %deque.\n-       *  @param  n  Number of elements to be assigned.\n-       *  @param  val  Value to be assigned.\n+       *  @param  __n  Number of elements to be assigned.\n+       *  @param  __val  Value to be assigned.\n        *\n        *  This function fills a %deque with @a n copies of the given\n        *  value.  Note that the assignment completely changes the\n@@ -967,11 +967,11 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief  Assigns a range to a %deque.\n-       *  @param  first  An input iterator.\n-       *  @param  last   An input iterator.\n+       *  @param  __first  An input iterator.\n+       *  @param  __last   An input iterator.\n        *\n        *  This function fills a %deque with copies of the elements in the\n-       *  range [first,last).\n+       *  range [__first,__last).\n        *\n        *  Note that the assignment completely changes the %deque and that the\n        *  resulting %deque's size is the same as the number of elements\n@@ -988,10 +988,10 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n #ifdef __GXX_EXPERIMENTAL_CXX0X__\n       /**\n        *  @brief  Assigns an initializer list to a %deque.\n-       *  @param  l  An initializer_list.\n+       *  @param  __l  An initializer_list.\n        *\n        *  This function fills a %deque with copies of the elements in the\n-       *  initializer_list @a l.\n+       *  initializer_list @a __l.\n        *\n        *  Note that the assignment completely changes the %deque and that the\n        *  resulting %deque's size is the same as the number of elements\n@@ -1129,7 +1129,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n #ifdef __GXX_EXPERIMENTAL_CXX0X__\n       /**\n        *  @brief  Resizes the %deque to the specified number of elements.\n-       *  @param  new_size  Number of elements the %deque should contain.\n+       *  @param  __new_size  Number of elements the %deque should contain.\n        *\n        *  This function will %resize the %deque to the specified\n        *  number of elements.  If the number is smaller than the\n@@ -1149,8 +1149,8 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief  Resizes the %deque to the specified number of elements.\n-       *  @param  new_size  Number of elements the %deque should contain.\n-       *  @param  x  Data with which new elements should be populated.\n+       *  @param  __new_size  Number of elements the %deque should contain.\n+       *  @param  __x  Data with which new elements should be populated.\n        *\n        *  This function will %resize the %deque to the specified\n        *  number of elements.  If the number is smaller than the\n@@ -1171,8 +1171,8 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n #else\n       /**\n        *  @brief  Resizes the %deque to the specified number of elements.\n-       *  @param  new_size  Number of elements the %deque should contain.\n-       *  @param  x  Data with which new elements should be populated.\n+       *  @param  __new_size  Number of elements the %deque should contain.\n+       *  @param  __x  Data with which new elements should be populated.\n        *\n        *  This function will %resize the %deque to the specified\n        *  number of elements.  If the number is smaller than the\n@@ -1210,7 +1210,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n       // element access\n       /**\n        *  @brief Subscript access to the data contained in the %deque.\n-       *  @param n The index of the element for which data should be\n+       *  @param __n The index of the element for which data should be\n        *  accessed.\n        *  @return  Read/write reference to data.\n        *\n@@ -1225,7 +1225,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief Subscript access to the data contained in the %deque.\n-       *  @param n The index of the element for which data should be\n+       *  @param __n The index of the element for which data should be\n        *  accessed.\n        *  @return  Read-only (constant) reference to data.\n        *\n@@ -1250,10 +1250,10 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n     public:\n       /**\n        *  @brief  Provides access to the data contained in the %deque.\n-       *  @param n The index of the element for which data should be\n+       *  @param __n The index of the element for which data should be\n        *  accessed.\n        *  @return  Read/write reference to data.\n-       *  @throw  std::out_of_range  If @a n is an invalid index.\n+       *  @throw  std::out_of_range  If @a __n is an invalid index.\n        *\n        *  This function provides for safer data access.  The parameter\n        *  is first checked that it is in the range of the deque.  The\n@@ -1268,10 +1268,10 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief  Provides access to the data contained in the %deque.\n-       *  @param n The index of the element for which data should be\n+       *  @param __n The index of the element for which data should be\n        *  accessed.\n        *  @return  Read-only (constant) reference to data.\n-       *  @throw  std::out_of_range  If @a n is an invalid index.\n+       *  @throw  std::out_of_range  If @a __n is an invalid index.\n        *\n        *  This function provides for safer data access.  The parameter is first\n        *  checked that it is in the range of the deque.  The function throws\n@@ -1327,7 +1327,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n       // [23.2.1.2] modifiers\n       /**\n        *  @brief  Add data to the front of the %deque.\n-       *  @param  x  Data to be added.\n+       *  @param  __x  Data to be added.\n        *\n        *  This is a typical stack operation.  The function creates an\n        *  element at the front of the %deque and assigns the given\n@@ -1358,7 +1358,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief  Add data to the end of the %deque.\n-       *  @param  x  Data to be added.\n+       *  @param  __x  Data to be added.\n        *\n        *  This is a typical stack operation.  The function creates an\n        *  element at the end of the %deque and assigns the given data\n@@ -1433,8 +1433,8 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n #ifdef __GXX_EXPERIMENTAL_CXX0X__\n       /**\n        *  @brief  Inserts an object in %deque before specified iterator.\n-       *  @param  position  An iterator into the %deque.\n-       *  @param  args  Arguments.\n+       *  @param  __position  An iterator into the %deque.\n+       *  @param  __args  Arguments.\n        *  @return  An iterator that points to the inserted data.\n        *\n        *  This function will insert an object of type T constructed\n@@ -1447,8 +1447,8 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief  Inserts given value into %deque before specified iterator.\n-       *  @param  position  An iterator into the %deque.\n-       *  @param  x  Data to be inserted.\n+       *  @param  __position  An iterator into the %deque.\n+       *  @param  __x  Data to be inserted.\n        *  @return  An iterator that points to the inserted data.\n        *\n        *  This function will insert a copy of the given value before the\n@@ -1460,8 +1460,8 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n #ifdef __GXX_EXPERIMENTAL_CXX0X__\n       /**\n        *  @brief  Inserts given rvalue into %deque before specified iterator.\n-       *  @param  position  An iterator into the %deque.\n-       *  @param  x  Data to be inserted.\n+       *  @param  __position  An iterator into the %deque.\n+       *  @param  __x  Data to be inserted.\n        *  @return  An iterator that points to the inserted data.\n        *\n        *  This function will insert a copy of the given rvalue before the\n@@ -1473,12 +1473,12 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief  Inserts an initializer list into the %deque.\n-       *  @param  p  An iterator into the %deque.\n-       *  @param  l  An initializer_list.\n+       *  @param  __p  An iterator into the %deque.\n+       *  @param  __l  An initializer_list.\n        *\n        *  This function will insert copies of the data in the\n-       *  initializer_list @a l into the %deque before the location\n-       *  specified by @a p.  This is known as <em>list insert</em>.\n+       *  initializer_list @a __l into the %deque before the location\n+       *  specified by @a __p.  This is known as <em>list insert</em>.\n        */\n       void\n       insert(iterator __p, initializer_list<value_type> __l)\n@@ -1487,26 +1487,26 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief  Inserts a number of copies of given data into the %deque.\n-       *  @param  position  An iterator into the %deque.\n-       *  @param  n  Number of elements to be inserted.\n-       *  @param  x  Data to be inserted.\n+       *  @param  __position  An iterator into the %deque.\n+       *  @param  __n  Number of elements to be inserted.\n+       *  @param  __x  Data to be inserted.\n        *\n        *  This function will insert a specified number of copies of the given\n-       *  data before the location specified by @a position.\n+       *  data before the location specified by @a __position.\n        */\n       void\n       insert(iterator __position, size_type __n, const value_type& __x)\n       { _M_fill_insert(__position, __n, __x); }\n \n       /**\n        *  @brief  Inserts a range into the %deque.\n-       *  @param  position  An iterator into the %deque.\n-       *  @param  first  An input iterator.\n-       *  @param  last   An input iterator.\n+       *  @param  __position  An iterator into the %deque.\n+       *  @param  __first  An input iterator.\n+       *  @param  __last   An input iterator.\n        *\n        *  This function will insert copies of the data in the range\n-       *  [first,last) into the %deque before the location specified\n-       *  by @a pos.  This is known as <em>range insert</em>.\n+       *  [__first,__last) into the %deque before the location specified\n+       *  by @a __position.  This is known as <em>range insert</em>.\n        */\n       template<typename _InputIterator>\n         void\n@@ -1520,7 +1520,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief  Remove element at given position.\n-       *  @param  position  Iterator pointing to element to be erased.\n+       *  @param  __position  Iterator pointing to element to be erased.\n        *  @return  An iterator pointing to the next element (or end()).\n        *\n        *  This function will erase the element at the given position and thus\n@@ -1536,14 +1536,14 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief  Remove a range of elements.\n-       *  @param  first  Iterator pointing to the first element to be erased.\n-       *  @param  last  Iterator pointing to one past the last element to be\n+       *  @param  __first  Iterator pointing to the first element to be erased.\n+       *  @param  __last  Iterator pointing to one past the last element to be\n        *                erased.\n        *  @return  An iterator pointing to the element pointed to by @a last\n        *           prior to erasing (or end()).\n        *\n-       *  This function will erase the elements in the range [first,last) and\n-       *  shorten the %deque accordingly.\n+       *  This function will erase the elements in the range\n+       *  [__first,__last) and shorten the %deque accordingly.\n        *\n        *  The user is cautioned that\n        *  this function only erases the elements, and that if the elements\n@@ -1555,7 +1555,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief  Swaps data with another %deque.\n-       *  @param  x  A %deque of the same element and allocator types.\n+       *  @param  __x  A %deque of the same element and allocator types.\n        *\n        *  This exchanges the elements between two deques in constant time.\n        *  (Four pointers, so it should be quite fast.)\n@@ -1616,8 +1616,8 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n       //@{\n       /**\n        *  @brief Fills the deque with whatever is in [first,last).\n-       *  @param  first  An input iterator.\n-       *  @param  last  An input iterator.\n+       *  @param  __first  An input iterator.\n+       *  @param  __last  An input iterator.\n        *  @return   Nothing.\n        *\n        *  If the iterators are actually forward iterators (or better), then the\n@@ -1638,7 +1638,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief Fills the %deque with copies of value.\n-       *  @param  value  Initial value.\n+       *  @param  __value  Initial value.\n        *  @return   Nothing.\n        *  @pre _M_start and _M_finish have already been initialized,\n        *  but none of the %deque's elements have yet been constructed.\n@@ -1914,8 +1914,8 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n   /**\n    *  @brief  Deque equality comparison.\n-   *  @param  x  A %deque.\n-   *  @param  y  A %deque of the same type as @a x.\n+   *  @param  __x  A %deque.\n+   *  @param  __y  A %deque of the same type as @a __x.\n    *  @return  True iff the size and elements of the deques are equal.\n    *\n    *  This is an equivalence relation.  It is linear in the size of the\n@@ -1931,9 +1931,9 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n   /**\n    *  @brief  Deque ordering relation.\n-   *  @param  x  A %deque.\n-   *  @param  y  A %deque of the same type as @a x.\n-   *  @return  True iff @a x is lexicographically less than @a y.\n+   *  @param  __x  A %deque.\n+   *  @param  __y  A %deque of the same type as @a __x.\n+   *  @return  True iff @a x is lexicographically less than @a __y.\n    *\n    *  This is a total ordering relation.  It is linear in the size of the\n    *  deques.  The elements must be comparable with @c <."}, {"sha": "bd638a351c8381c7cb55efadb1da4ab69845b778", "filename": "libstdc++-v3/include/bits/stl_heap.h", "status": "modified", "additions": 53, "deletions": 50, "changes": 103, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_heap.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_heap.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_heap.h?ref=93c66bc68a2554cbb2ba11f90944314af378d16b", "patch": "@@ -144,12 +144,13 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n   /**\n    *  @brief  Push an element onto a heap.\n-   *  @param  first  Start of heap.\n-   *  @param  last   End of heap + element.\n+   *  @param  __first  Start of heap.\n+   *  @param  __last   End of heap + element.\n    *  @ingroup heap_algorithms\n    *\n-   *  This operation pushes the element at last-1 onto the valid heap over the\n-   *  range [first,last-1).  After completion, [first,last) is a valid heap.\n+   *  This operation pushes the element at last-1 onto the valid heap\n+   *  over the range [__first,__last-1).  After completion,\n+   *  [__first,__last) is a valid heap.\n   */\n   template<typename _RandomAccessIterator>\n     inline void\n@@ -191,14 +192,15 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n   /**\n    *  @brief  Push an element onto a heap using comparison functor.\n-   *  @param  first  Start of heap.\n-   *  @param  last   End of heap + element.\n-   *  @param  comp   Comparison functor.\n+   *  @param  __first  Start of heap.\n+   *  @param  __last   End of heap + element.\n+   *  @param  __comp   Comparison functor.\n    *  @ingroup heap_algorithms\n    *\n-   *  This operation pushes the element at last-1 onto the valid heap over the\n-   *  range [first,last-1).  After completion, [first,last) is a valid heap.\n-   *  Compare operations are performed using comp.\n+   *  This operation pushes the element at __last-1 onto the valid\n+   *  heap over the range [__first,__last-1).  After completion,\n+   *  [__first,__last) is a valid heap.  Compare operations are\n+   *  performed using comp.\n   */\n   template<typename _RandomAccessIterator, typename _Compare>\n     inline void\n@@ -266,12 +268,13 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n   /**\n    *  @brief  Pop an element off a heap.\n-   *  @param  first  Start of heap.\n-   *  @param  last   End of heap.\n+   *  @param  __first  Start of heap.\n+   *  @param  __last   End of heap.\n    *  @ingroup heap_algorithms\n    *\n-   *  This operation pops the top of the heap.  The elements first and last-1\n-   *  are swapped and [first,last-1) is made into a heap.\n+   *  This operation pops the top of the heap.  The elements __first\n+   *  and __last-1 are swapped and [__first,__last-1) is made into a\n+   *  heap.\n   */\n   template<typename _RandomAccessIterator>\n     inline void\n@@ -338,14 +341,14 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n   /**\n    *  @brief  Pop an element off a heap using comparison functor.\n-   *  @param  first  Start of heap.\n-   *  @param  last   End of heap.\n-   *  @param  comp   Comparison functor to use.\n+   *  @param  __first  Start of heap.\n+   *  @param  __last   End of heap.\n+   *  @param  __comp   Comparison functor to use.\n    *  @ingroup heap_algorithms\n    *\n-   *  This operation pops the top of the heap.  The elements first and last-1\n-   *  are swapped and [first,last-1) is made into a heap.  Comparisons are\n-   *  made using comp.\n+   *  This operation pops the top of the heap.  The elements __first\n+   *  and __last-1 are swapped and [__first,__last-1) is made into a\n+   *  heap.  Comparisons are made using comp.\n   */\n   template<typename _RandomAccessIterator, typename _Compare>\n     inline void\n@@ -364,11 +367,11 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n   /**\n    *  @brief  Construct a heap over a range.\n-   *  @param  first  Start of heap.\n-   *  @param  last   End of heap.\n+   *  @param  __first  Start of heap.\n+   *  @param  __last   End of heap.\n    *  @ingroup heap_algorithms\n    *\n-   *  This operation makes the elements in [first,last) into a heap.\n+   *  This operation makes the elements in [__first,__last) into a heap.\n   */\n   template<typename _RandomAccessIterator>\n     void\n@@ -402,13 +405,13 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n   /**\n    *  @brief  Construct a heap over a range using comparison functor.\n-   *  @param  first  Start of heap.\n-   *  @param  last   End of heap.\n-   *  @param  comp   Comparison functor to use.\n+   *  @param  __first  Start of heap.\n+   *  @param  __last   End of heap.\n+   *  @param  __comp   Comparison functor to use.\n    *  @ingroup heap_algorithms\n    *\n-   *  This operation makes the elements in [first,last) into a heap.\n-   *  Comparisons are made using comp.\n+   *  This operation makes the elements in [__first,__last) into a heap.\n+   *  Comparisons are made using __comp.\n   */\n   template<typename _RandomAccessIterator, typename _Compare>\n     void\n@@ -443,11 +446,11 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n   /**\n    *  @brief  Sort a heap.\n-   *  @param  first  Start of heap.\n-   *  @param  last   End of heap.\n+   *  @param  __first  Start of heap.\n+   *  @param  __last   End of heap.\n    *  @ingroup heap_algorithms\n    *\n-   *  This operation sorts the valid heap in the range [first,last).\n+   *  This operation sorts the valid heap in the range [__first,__last).\n   */\n   template<typename _RandomAccessIterator>\n     void\n@@ -470,13 +473,13 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n   /**\n    *  @brief  Sort a heap using comparison functor.\n-   *  @param  first  Start of heap.\n-   *  @param  last   End of heap.\n-   *  @param  comp   Comparison functor to use.\n+   *  @param  __first  Start of heap.\n+   *  @param  __last   End of heap.\n+   *  @param  __comp   Comparison functor to use.\n    *  @ingroup heap_algorithms\n    *\n-   *  This operation sorts the valid heap in the range [first,last).\n-   *  Comparisons are made using comp.\n+   *  This operation sorts the valid heap in the range [__first,__last).\n+   *  Comparisons are made using __comp.\n   */\n   template<typename _RandomAccessIterator, typename _Compare>\n     void\n@@ -499,13 +502,13 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n #ifdef __GXX_EXPERIMENTAL_CXX0X__\n   /**\n    *  @brief  Search the end of a heap.\n-   *  @param  first  Start of range.\n-   *  @param  last   End of range.\n+   *  @param  __first  Start of range.\n+   *  @param  __last   End of range.\n    *  @return  An iterator pointing to the first element not in the heap.\n    *  @ingroup heap_algorithms\n    *\n-   *  This operation returns the last iterator i in [first, last) for which\n-   *  the range [first, i) is a heap.\n+   *  This operation returns the last iterator i in [__first, __last) for which\n+   *  the range [__first, i) is a heap.\n   */\n   template<typename _RandomAccessIterator>\n     inline _RandomAccessIterator\n@@ -524,14 +527,14 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n   /**\n    *  @brief  Search the end of a heap using comparison functor.\n-   *  @param  first  Start of range.\n-   *  @param  last   End of range.\n-   *  @param  comp   Comparison functor to use.\n+   *  @param  __first  Start of range.\n+   *  @param  __last   End of range.\n+   *  @param  __comp   Comparison functor to use.\n    *  @return  An iterator pointing to the first element not in the heap.\n    *  @ingroup heap_algorithms\n    *\n-   *  This operation returns the last iterator i in [first, last) for which\n-   *  the range [first, i) is a heap.  Comparisons are made using comp.\n+   *  This operation returns the last iterator i in [__first, __last) for which\n+   *  the range [__first, i) is a heap.  Comparisons are made using __comp.\n   */\n   template<typename _RandomAccessIterator, typename _Compare>\n     inline _RandomAccessIterator\n@@ -550,8 +553,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n   /**\n    *  @brief  Determines whether a range is a heap.\n-   *  @param  first  Start of range.\n-   *  @param  last   End of range.\n+   *  @param  __first  Start of range.\n+   *  @param  __last   End of range.\n    *  @return  True if range is a heap, false otherwise.\n    *  @ingroup heap_algorithms\n   */\n@@ -562,9 +565,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n   /**\n    *  @brief  Determines whether a range is a heap using comparison functor.\n-   *  @param  first  Start of range.\n-   *  @param  last   End of range.\n-   *  @param  comp   Comparison functor to use.\n+   *  @param  __first  Start of range.\n+   *  @param  __last   End of range.\n+   *  @param  __comp   Comparison functor to use.\n    *  @return  True if range is a heap, false otherwise.\n    *  @ingroup heap_algorithms\n   */"}, {"sha": "6c82c5c3d1f10dfd7536ca8696f93cb6a7df0373", "filename": "libstdc++-v3/include/bits/stl_iterator.h", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_iterator.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_iterator.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_iterator.h?ref=93c66bc68a2554cbb2ba11f90944314af378d16b", "patch": "@@ -272,8 +272,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n   //@{\n   /**\n-   *  @param  x  A %reverse_iterator.\n-   *  @param  y  A %reverse_iterator.\n+   *  @param  __x  A %reverse_iterator.\n+   *  @param  __y  A %reverse_iterator.\n    *  @return  A simple bool.\n    *\n    *  Reverse iterators forward many operations to their underlying base()\n@@ -408,7 +408,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       back_insert_iterator(_Container& __x) : container(&__x) { }\n \n       /**\n-       *  @param  value  An instance of whatever type\n+       *  @param  __value  An instance of whatever type\n        *                 container_type::const_reference is; presumably a\n        *                 reference-to-const T for container<T>.\n        *  @return  This %iterator, for chained operations.\n@@ -458,8 +458,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     };\n \n   /**\n-   *  @param  x  A container of arbitrary type.\n-   *  @return  An instance of back_insert_iterator working on @p x.\n+   *  @param  __x  A container of arbitrary type.\n+   *  @return  An instance of back_insert_iterator working on @p __x.\n    *\n    *  This wrapper function helps in creating back_insert_iterator instances.\n    *  Typing the name of the %iterator requires knowing the precise full\n@@ -498,7 +498,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       explicit front_insert_iterator(_Container& __x) : container(&__x) { }\n \n       /**\n-       *  @param  value  An instance of whatever type\n+       *  @param  __value  An instance of whatever type\n        *                 container_type::const_reference is; presumably a\n        *                 reference-to-const T for container<T>.\n        *  @return  This %iterator, for chained operations.\n@@ -548,7 +548,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     };\n \n   /**\n-   *  @param  x  A container of arbitrary type.\n+   *  @param  __x  A container of arbitrary type.\n    *  @return  An instance of front_insert_iterator working on @p x.\n    *\n    *  This wrapper function helps in creating front_insert_iterator instances.\n@@ -597,7 +597,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       : container(&__x), iter(__i) {}\n \n       /**\n-       *  @param  value  An instance of whatever type\n+       *  @param  __value  An instance of whatever type\n        *                 container_type::const_reference is; presumably a\n        *                 reference-to-const T for container<T>.\n        *  @return  This %iterator, for chained operations.\n@@ -662,8 +662,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     };\n \n   /**\n-   *  @param  x  A container of arbitrary type.\n-   *  @return  An instance of insert_iterator working on @p x.\n+   *  @param __x  A container of arbitrary type.\n+   *  @return  An instance of insert_iterator working on @p __x.\n    *\n    *  This wrapper function helps in creating insert_iterator instances.\n    *  Typing the name of the %iterator requires knowing the precise full"}, {"sha": "8028fbb087c203bd59cbd3b0d6ddbe769bdd4229", "filename": "libstdc++-v3/include/bits/stl_iterator_base_funcs.h", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_iterator_base_funcs.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_iterator_base_funcs.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_iterator_base_funcs.h?ref=93c66bc68a2554cbb2ba11f90944314af378d16b", "patch": "@@ -98,12 +98,13 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n   /**\n    *  @brief A generalization of pointer arithmetic.\n-   *  @param  first  An input iterator.\n-   *  @param  last  An input iterator.\n+   *  @param  __first  An input iterator.\n+   *  @param  __last  An input iterator.\n    *  @return  The distance between them.\n    *\n-   *  Returns @c n such that first + n == last.  This requires that @p last\n-   *  must be reachable from @p first.  Note that @c n may be negative.\n+   *  Returns @c n such that __first + n == __last.  This requires\n+   *  that @p __last must be reachable from @p __first.  Note that @c\n+   *  n may be negative.\n    *\n    *  For random access iterators, this uses their @c + and @c - operations\n    *  and are constant time.  For other %iterator classes they are linear time.\n@@ -156,12 +157,12 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n   /**\n    *  @brief A generalization of pointer arithmetic.\n-   *  @param  i  An input iterator.\n-   *  @param  n  The @a delta by which to change @p i.\n+   *  @param  __i  An input iterator.\n+   *  @param  __n  The @a delta by which to change @p __i.\n    *  @return  Nothing.\n    *\n    *  This increments @p i by @p n.  For bidirectional and random access\n-   *  iterators, @p n may be negative, in which case @p i is decremented.\n+   *  iterators, @p __n may be negative, in which case @p __i is decremented.\n    *\n    *  For random access iterators, this uses their @c + and @c - operations\n    *  and are constant time.  For other %iterator classes they are linear time."}, {"sha": "24a79cbf2358f3f5796078c15c0ab667a6d9b59b", "filename": "libstdc++-v3/include/bits/stl_list.h", "status": "modified", "additions": 105, "deletions": 104, "changes": 209, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_list.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_list.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_list.h?ref=93c66bc68a2554cbb2ba11f90944314af378d16b", "patch": "@@ -468,9 +468,10 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n       using _Base::_M_get_Node_allocator;\n \n       /**\n-       *  @param  x  An instance of user data.\n+       *  @param  __args  An instance of user data.\n        *\n-       *  Allocates space for a new node and constructs a copy of @a x in it.\n+       *  Allocates space for a new node and constructs a copy of\n+       *  @a __args in it.\n        */\n #ifndef __GXX_EXPERIMENTAL_CXX0X__\n       _Node*\n@@ -520,7 +521,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief  Creates a %list with no elements.\n-       *  @param  a  An allocator object.\n+       *  @param  __a  An allocator object.\n        */\n       explicit\n       list(const allocator_type& __a)\n@@ -529,9 +530,9 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n #ifdef __GXX_EXPERIMENTAL_CXX0X__\n       /**\n        *  @brief  Creates a %list with default constructed elements.\n-       *  @param  n  The number of elements to initially create.\n+       *  @param  __n  The number of elements to initially create.\n        *\n-       *  This constructor fills the %list with @a n default\n+       *  This constructor fills the %list with @a __n default\n        *  constructed elements.\n        */\n       explicit\n@@ -541,11 +542,11 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief  Creates a %list with copies of an exemplar element.\n-       *  @param  n  The number of elements to initially create.\n-       *  @param  value  An element to copy.\n-       *  @param  a  An allocator object.\n+       *  @param  __n  The number of elements to initially create.\n+       *  @param  __value  An element to copy.\n+       *  @param  __a  An allocator object.\n        *\n-       *  This constructor fills the %list with @a n copies of @a value.\n+       *  This constructor fills the %list with @a __n copies of @a __value.\n        */\n       list(size_type __n, const value_type& __value,\n \t   const allocator_type& __a = allocator_type())\n@@ -554,11 +555,11 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n #else\n       /**\n        *  @brief  Creates a %list with copies of an exemplar element.\n-       *  @param  n  The number of elements to initially create.\n-       *  @param  value  An element to copy.\n-       *  @param  a  An allocator object.\n+       *  @param  __n  The number of elements to initially create.\n+       *  @param  __value  An element to copy.\n+       *  @param  __a  An allocator object.\n        *\n-       *  This constructor fills the %list with @a n copies of @a value.\n+       *  This constructor fills the %list with @a __n copies of @a __value.\n        */\n       explicit\n       list(size_type __n, const value_type& __value = value_type(),\n@@ -569,10 +570,10 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief  %List copy constructor.\n-       *  @param  x  A %list of identical element and allocator types.\n+       *  @param  __x  A %list of identical element and allocator types.\n        *\n        *  The newly-created %list uses a copy of the allocation object used\n-       *  by @a x.\n+       *  by @a __x.\n        */\n       list(const list& __x)\n       : _Base(__x._M_get_Node_allocator())\n@@ -581,21 +582,21 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n #ifdef __GXX_EXPERIMENTAL_CXX0X__\n       /**\n        *  @brief  %List move constructor.\n-       *  @param  x  A %list of identical element and allocator types.\n+       *  @param  __x  A %list of identical element and allocator types.\n        *\n-       *  The newly-created %list contains the exact contents of @a x.\n-       *  The contents of @a x are a valid, but unspecified %list.\n+       *  The newly-created %list contains the exact contents of @a __x.\n+       *  The contents of @a __x are a valid, but unspecified %list.\n        */\n       list(list&& __x) noexcept\n       : _Base(std::move(__x)) { }\n \n       /**\n        *  @brief  Builds a %list from an initializer_list\n-       *  @param  l  An initializer_list of value_type.\n-       *  @param  a  An allocator object.\n+       *  @param  __l  An initializer_list of value_type.\n+       *  @param  __a  An allocator object.\n        *\n        *  Create a %list consisting of copies of the elements in the\n-       *  initializer_list @a l.  This is linear in l.size().\n+       *  initializer_list @a __l.  This is linear in __l.size().\n        */\n       list(initializer_list<value_type> __l,\n            const allocator_type& __a = allocator_type())\n@@ -605,13 +606,13 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief  Builds a %list from a range.\n-       *  @param  first  An input iterator.\n-       *  @param  last  An input iterator.\n-       *  @param  a  An allocator object.\n+       *  @param  __first  An input iterator.\n+       *  @param  __last  An input iterator.\n+       *  @param  __a  An allocator object.\n        *\n        *  Create a %list consisting of copies of the elements from\n-       *  [@a first,@a last).  This is linear in N (where N is\n-       *  distance(@a first,@a last)).\n+       *  [@a __first,@a __last).  This is linear in N (where N is\n+       *  distance(@a __first,@a __last)).\n        */\n       template<typename _InputIterator>\n         list(_InputIterator __first, _InputIterator __last,\n@@ -633,9 +634,9 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief  %List assignment operator.\n-       *  @param  x  A %list of identical element and allocator types.\n+       *  @param  __x  A %list of identical element and allocator types.\n        *\n-       *  All the elements of @a x are copied, but unlike the copy\n+       *  All the elements of @a __x are copied, but unlike the copy\n        *  constructor, the allocator object is not copied.\n        */\n       list&\n@@ -644,10 +645,10 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n #ifdef __GXX_EXPERIMENTAL_CXX0X__\n       /**\n        *  @brief  %List move assignment operator.\n-       *  @param  x  A %list of identical element and allocator types.\n+       *  @param  __x  A %list of identical element and allocator types.\n        *\n-       *  The contents of @a x are moved into this %list (without copying).\n-       *  @a x is a valid, but unspecified %list\n+       *  The contents of @a __x are moved into this %list (without copying).\n+       *  @a __x is a valid, but unspecified %list\n        */\n       list&\n       operator=(list&& __x)\n@@ -661,10 +662,10 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief  %List initializer list assignment operator.\n-       *  @param  l  An initializer_list of value_type.\n+       *  @param  __l  An initializer_list of value_type.\n        *\n        *  Replace the contents of the %list with copies of the elements\n-       *  in the initializer_list @a l.  This is linear in l.size().\n+       *  in the initializer_list @a __l.  This is linear in l.size().\n        */\n       list&\n       operator=(initializer_list<value_type> __l)\n@@ -676,10 +677,10 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief  Assigns a given value to a %list.\n-       *  @param  n  Number of elements to be assigned.\n-       *  @param  val  Value to be assigned.\n+       *  @param  __n  Number of elements to be assigned.\n+       *  @param  __val  Value to be assigned.\n        *\n-       *  This function fills a %list with @a n copies of the given\n+       *  This function fills a %list with @a __n copies of the given\n        *  value.  Note that the assignment completely changes the %list\n        *  and that the resulting %list's size is the same as the number\n        *  of elements assigned.  Old data may be lost.\n@@ -690,11 +691,11 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief  Assigns a range to a %list.\n-       *  @param  first  An input iterator.\n-       *  @param  last   An input iterator.\n+       *  @param  __first  An input iterator.\n+       *  @param  __last   An input iterator.\n        *\n        *  This function fills a %list with copies of the elements in the\n-       *  range [@a first,@a last).\n+       *  range [@a __first,@a __last).\n        *\n        *  Note that the assignment completely changes the %list and\n        *  that the resulting %list's size is the same as the number of\n@@ -712,10 +713,10 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n #ifdef __GXX_EXPERIMENTAL_CXX0X__\n       /**\n        *  @brief  Assigns an initializer_list to a %list.\n-       *  @param  l  An initializer_list of value_type.\n+       *  @param  __l  An initializer_list of value_type.\n        *\n        *  Replace the contents of the %list with copies of the elements\n-       *  in the initializer_list @a l.  This is linear in l.size().\n+       *  in the initializer_list @a __l.  This is linear in __l.size().\n        */\n       void\n       assign(initializer_list<value_type> __l)\n@@ -859,7 +860,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n #ifdef __GXX_EXPERIMENTAL_CXX0X__\n       /**\n        *  @brief Resizes the %list to the specified number of elements.\n-       *  @param new_size Number of elements the %list should contain.\n+       *  @param __new_size Number of elements the %list should contain.\n        *\n        *  This function will %resize the %list to the specified number\n        *  of elements.  If the number is smaller than the %list's\n@@ -871,8 +872,8 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief Resizes the %list to the specified number of elements.\n-       *  @param new_size Number of elements the %list should contain.\n-       *  @param x Data with which new elements should be populated.\n+       *  @param __new_size Number of elements the %list should contain.\n+       *  @param __x Data with which new elements should be populated.\n        *\n        *  This function will %resize the %list to the specified number\n        *  of elements.  If the number is smaller than the %list's\n@@ -884,8 +885,8 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n #else\n       /**\n        *  @brief Resizes the %list to the specified number of elements.\n-       *  @param new_size Number of elements the %list should contain.\n-       *  @param x Data with which new elements should be populated.\n+       *  @param __new_size Number of elements the %list should contain.\n+       *  @param __x Data with which new elements should be populated.\n        *\n        *  This function will %resize the %list to the specified number\n        *  of elements.  If the number is smaller than the %list's\n@@ -940,7 +941,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n       // [23.2.2.3] modifiers\n       /**\n        *  @brief  Add data to the front of the %list.\n-       *  @param  x  Data to be added.\n+       *  @param  __x  Data to be added.\n        *\n        *  This is a typical stack operation.  The function creates an\n        *  element at the front of the %list and assigns the given data\n@@ -981,7 +982,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief  Add data to the end of the %list.\n-       *  @param  x  Data to be added.\n+       *  @param  __x  Data to be added.\n        *\n        *  This is a typical stack operation.  The function creates an\n        *  element at the end of the %list and assigns the given data to\n@@ -1022,8 +1023,8 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n #ifdef __GXX_EXPERIMENTAL_CXX0X__\n       /**\n        *  @brief  Constructs object in %list before specified iterator.\n-       *  @param  position  A const_iterator into the %list.\n-       *  @param  args  Arguments.\n+       *  @param  __position  A const_iterator into the %list.\n+       *  @param  __args  Arguments.\n        *  @return  An iterator that points to the inserted data.\n        *\n        *  This function will insert an object of type T constructed\n@@ -1039,8 +1040,8 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief  Inserts given value into %list before specified iterator.\n-       *  @param  position  An iterator into the %list.\n-       *  @param  x  Data to be inserted.\n+       *  @param  __position  An iterator into the %list.\n+       *  @param  __x  Data to be inserted.\n        *  @return  An iterator that points to the inserted data.\n        *\n        *  This function will insert a copy of the given value before\n@@ -1054,8 +1055,8 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n #ifdef __GXX_EXPERIMENTAL_CXX0X__\n       /**\n        *  @brief  Inserts given rvalue into %list before specified iterator.\n-       *  @param  position  An iterator into the %list.\n-       *  @param  x  Data to be inserted.\n+       *  @param  __position  An iterator into the %list.\n+       *  @param  __x  Data to be inserted.\n        *  @return  An iterator that points to the inserted data.\n        *\n        *  This function will insert a copy of the given rvalue before\n@@ -1070,8 +1071,8 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n       /**\n        *  @brief  Inserts the contents of an initializer_list into %list\n        *          before specified iterator.\n-       *  @param  p  An iterator into the %list.\n-       *  @param  l  An initializer_list of value_type.\n+       *  @param  __p  An iterator into the %list.\n+       *  @param  __l  An initializer_list of value_type.\n        *\n        *  This function will insert copies of the data in the\n        *  initializer_list @a l into the %list before the location\n@@ -1087,9 +1088,9 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief  Inserts a number of copies of given data into the %list.\n-       *  @param  position  An iterator into the %list.\n-       *  @param  n  Number of elements to be inserted.\n-       *  @param  x  Data to be inserted.\n+       *  @param  __position  An iterator into the %list.\n+       *  @param  __n  Number of elements to be inserted.\n+       *  @param  __x  Data to be inserted.\n        *\n        *  This function will insert a specified number of copies of the\n        *  given data before the location specified by @a position.\n@@ -1106,9 +1107,9 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief  Inserts a range into the %list.\n-       *  @param  position  An iterator into the %list.\n-       *  @param  first  An input iterator.\n-       *  @param  last   An input iterator.\n+       *  @param  __position  An iterator into the %list.\n+       *  @param  __first  An input iterator.\n+       *  @param  __last   An input iterator.\n        *\n        *  This function will insert copies of the data in the range [@a\n        *  first,@a last) into the %list before the location specified by\n@@ -1128,7 +1129,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief  Remove element at given position.\n-       *  @param  position  Iterator pointing to element to be erased.\n+       *  @param  __position  Iterator pointing to element to be erased.\n        *  @return  An iterator pointing to the next element (or end()).\n        *\n        *  This function will erase the element at the given position and thus\n@@ -1146,8 +1147,8 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief  Remove a range of elements.\n-       *  @param  first  Iterator pointing to the first element to be erased.\n-       *  @param  last  Iterator pointing to one past the last element to be\n+       *  @param  __first  Iterator pointing to the first element to be erased.\n+       *  @param  __last  Iterator pointing to one past the last element to be\n        *                erased.\n        *  @return  An iterator pointing to the element pointed to by @a last\n        *           prior to erasing (or end()).\n@@ -1172,7 +1173,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief  Swaps data with another %list.\n-       *  @param  x  A %list of the same element and allocator types.\n+       *  @param  __x  A %list of the same element and allocator types.\n        *\n        *  This exchanges the elements between two lists in constant\n        *  time.  Note that the global std::swap() function is\n@@ -1207,14 +1208,14 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n       // [23.2.2.4] list operations\n       /**\n        *  @brief  Insert contents of another %list.\n-       *  @param  position  Iterator referencing the element to insert before.\n-       *  @param  x  Source list.\n+       *  @param  __position  Iterator referencing the element to insert before.\n+       *  @param  __x  Source list.\n        *\n-       *  The elements of @a x are inserted in constant time in front of\n-       *  the element referenced by @a position.  @a x becomes an empty\n+       *  The elements of @a __x are inserted in constant time in front of\n+       *  the element referenced by @a __position.  @a __x becomes an empty\n        *  list.\n        *\n-       *  Requires this != @a x.\n+       *  Requires this != @a __x.\n        */\n       void\n #ifdef __GXX_EXPERIMENTAL_CXX0X__\n@@ -1239,12 +1240,12 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief  Insert element from another %list.\n-       *  @param  position  Iterator referencing the element to insert before.\n-       *  @param  x  Source list.\n-       *  @param  i  Iterator referencing the element to move.\n+       *  @param  __position  Iterator referencing the element to insert before.\n+       *  @param  __x  Source list.\n+       *  @param  __i  Iterator referencing the element to move.\n        *\n-       *  Removes the element in list @a x referenced by @a i and\n-       *  inserts it into the current list before @a position.\n+       *  Removes the element in list @a __x referenced by @a __i and\n+       *  inserts it into the current list before @a __position.\n        */\n       void\n #ifdef __GXX_EXPERIMENTAL_CXX0X__\n@@ -1272,15 +1273,15 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief  Insert range from another %list.\n-       *  @param  position  Iterator referencing the element to insert before.\n-       *  @param  x  Source list.\n-       *  @param  first  Iterator referencing the start of range in x.\n-       *  @param  last  Iterator referencing the end of range in x.\n+       *  @param  __position  Iterator referencing the element to insert before.\n+       *  @param  __x  Source list.\n+       *  @param  __first  Iterator referencing the start of range in x.\n+       *  @param  __last  Iterator referencing the end of range in x.\n        *\n-       *  Removes elements in the range [first,last) and inserts them\n-       *  before @a position in constant time.\n+       *  Removes elements in the range [__first,__last) and inserts them\n+       *  before @a __position in constant time.\n        *\n-       *  Undefined if @a position is in [first,last).\n+       *  Undefined if @a __position is in [__first,__last).\n        */\n       void\n #ifdef __GXX_EXPERIMENTAL_CXX0X__\n@@ -1308,7 +1309,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief  Remove all elements equal to value.\n-       *  @param  value  The value to remove.\n+       *  @param  __value  The value to remove.\n        *\n        *  Removes every element in the list equal to @a value.\n        *  Remaining elements stay in list order.  Note that this\n@@ -1322,7 +1323,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief  Remove all elements satisfying a predicate.\n-       *  @param  Predicate  Unary predicate function or object.\n+       *  @tparam  _Predicate  Unary predicate function or object.\n        *\n        *  Removes every element in the list for which the predicate\n        *  returns true.  Remaining elements stay in list order.  Note\n@@ -1350,7 +1351,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief  Remove consecutive elements satisfying a predicate.\n-       *  @param  BinaryPredicate  Binary predicate function or object.\n+       *  @tparam _BinaryPredicate  Binary predicate function or object.\n        *\n        *  For each consecutive set of elements [first,last) that\n        *  satisfy predicate(first,i) where i is an iterator in\n@@ -1366,12 +1367,12 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief  Merge sorted lists.\n-       *  @param  x  Sorted list to merge.\n+       *  @param  __x  Sorted list to merge.\n        *\n-       *  Assumes that both @a x and this list are sorted according to\n-       *  operator<().  Merges elements of @a x into this list in\n-       *  sorted order, leaving @a x empty when complete.  Elements in\n-       *  this list precede elements in @a x that are equal.\n+       *  Assumes that both @a __x and this list are sorted according to\n+       *  operator<().  Merges elements of @a __x into this list in\n+       *  sorted order, leaving @a __x empty when complete.  Elements in\n+       *  this list precede elements in @a __x that are equal.\n        */\n #ifdef __GXX_EXPERIMENTAL_CXX0X__\n       void\n@@ -1387,20 +1388,20 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief  Merge sorted lists according to comparison function.\n-       *  @param  x  Sorted list to merge.\n-       *  @param StrictWeakOrdering Comparison function defining\n+       *  @param  __x  Sorted list to merge.\n+       *  @tparam _StrictWeakOrdering Comparison function defining\n        *  sort order.\n        *\n-       *  Assumes that both @a x and this list are sorted according to\n-       *  StrictWeakOrdering.  Merges elements of @a x into this list\n-       *  in sorted order, leaving @a x empty when complete.  Elements\n-       *  in this list precede elements in @a x that are equivalent\n+       *  Assumes that both @a __x and this list are sorted according to\n+       *  StrictWeakOrdering.  Merges elements of @a __x into this list\n+       *  in sorted order, leaving @a __x empty when complete.  Elements\n+       *  in this list precede elements in @a __x that are equivalent\n        *  according to StrictWeakOrdering().\n        */\n #ifdef __GXX_EXPERIMENTAL_CXX0X__\n       template<typename _StrictWeakOrdering>\n         void\n-        merge(list&&, _StrictWeakOrdering);\n+        merge(list&& __x, _StrictWeakOrdering __comp);\n \n       template<typename _StrictWeakOrdering>\n         void\n@@ -1409,7 +1410,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n #else\n       template<typename _StrictWeakOrdering>\n         void\n-        merge(list&, _StrictWeakOrdering);\n+        merge(list& __x, _StrictWeakOrdering __comp);\n #endif\n \n       /**\n@@ -1557,8 +1558,8 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n   /**\n    *  @brief  List equality comparison.\n-   *  @param  x  A %list.\n-   *  @param  y  A %list of the same type as @a x.\n+   *  @param  __x  A %list.\n+   *  @param  __y  A %list of the same type as @a __x.\n    *  @return  True iff the size and elements of the lists are equal.\n    *\n    *  This is an equivalence relation.  It is linear in the size of\n@@ -1585,9 +1586,9 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n   /**\n    *  @brief  List ordering relation.\n-   *  @param  x  A %list.\n-   *  @param  y  A %list of the same type as @a x.\n-   *  @return  True iff @a x is lexicographically less than @a y.\n+   *  @param  __x  A %list.\n+   *  @param  __y  A %list of the same type as @a __x.\n+   *  @return  True iff @a __x is lexicographically less than @a __y.\n    *\n    *  This is a total ordering relation.  It is linear in the size of the\n    *  lists.  The elements must be comparable with @c <."}, {"sha": "0501b25ae762178b75ed2526cafcd198842323e7", "filename": "libstdc++-v3/include/bits/stl_map.h", "status": "modified", "additions": 79, "deletions": 75, "changes": 154, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_map.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_map.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_map.h?ref=93c66bc68a2554cbb2ba11f90944314af378d16b", "patch": "@@ -154,8 +154,8 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief  Creates a %map with no elements.\n-       *  @param  comp  A comparison object.\n-       *  @param  a  An allocator object.\n+       *  @param  __comp  A comparison object.\n+       *  @param  __a  An allocator object.\n        */\n       explicit\n       map(const _Compare& __comp,\n@@ -164,52 +164,53 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief  %Map copy constructor.\n-       *  @param  x  A %map of identical element and allocator types.\n+       *  @param  __x  A %map of identical element and allocator types.\n        *\n        *  The newly-created %map uses a copy of the allocation object\n-       *  used by @a x.\n+       *  used by @a __x.\n        */\n       map(const map& __x)\n       : _M_t(__x._M_t) { }\n \n #ifdef __GXX_EXPERIMENTAL_CXX0X__\n       /**\n        *  @brief  %Map move constructor.\n-       *  @param  x  A %map of identical element and allocator types.\n+       *  @param  __x  A %map of identical element and allocator types.\n        *\n-       *  The newly-created %map contains the exact contents of @a x.\n-       *  The contents of @a x are a valid, but unspecified %map.\n+       *  The newly-created %map contains the exact contents of @a __x.\n+       *  The contents of @a __x are a valid, but unspecified %map.\n        */\n       map(map&& __x)\n       noexcept(is_nothrow_copy_constructible<_Compare>::value)\n       : _M_t(std::move(__x._M_t)) { }\n \n       /**\n        *  @brief  Builds a %map from an initializer_list.\n-       *  @param  l  An initializer_list.\n-       *  @param  comp  A comparison object.\n-       *  @param  a  An allocator object.\n+       *  @param  __l  An initializer_list.\n+       *  @param  __comp  A comparison object.\n+       *  @param  __a  An allocator object.\n        *\n        *  Create a %map consisting of copies of the elements in the\n-       *  initializer_list @a l.\n+       *  initializer_list @a __l.\n        *  This is linear in N if the range is already sorted, and NlogN\n-       *  otherwise (where N is @a l.size()).\n+       *  otherwise (where N is @a __l.size()).\n        */\n       map(initializer_list<value_type> __l,\n-\t  const _Compare& __c = _Compare(),\n+\t  const _Compare& __comp = _Compare(),\n \t  const allocator_type& __a = allocator_type())\n-      : _M_t(__c, __a)\n+      : _M_t(__comp, __a)\n       { _M_t._M_insert_unique(__l.begin(), __l.end()); }\n #endif\n \n       /**\n        *  @brief  Builds a %map from a range.\n-       *  @param  first  An input iterator.\n-       *  @param  last  An input iterator.\n+       *  @param  __first  An input iterator.\n+       *  @param  __last  An input iterator.\n        *\n-       *  Create a %map consisting of copies of the elements from [first,last).\n-       *  This is linear in N if the range is already sorted, and NlogN\n-       *  otherwise (where N is distance(first,last)).\n+       *  Create a %map consisting of copies of the elements from\n+       *  [__first,__last).  This is linear in N if the range is\n+       *  already sorted, and NlogN otherwise (where N is\n+       *  distance(__first,__last)).\n        */\n       template<typename _InputIterator>\n         map(_InputIterator __first, _InputIterator __last)\n@@ -218,14 +219,15 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief  Builds a %map from a range.\n-       *  @param  first  An input iterator.\n-       *  @param  last  An input iterator.\n-       *  @param  comp  A comparison functor.\n-       *  @param  a  An allocator object.\n+       *  @param  __first  An input iterator.\n+       *  @param  __last  An input iterator.\n+       *  @param  __comp  A comparison functor.\n+       *  @param  __a  An allocator object.\n        *\n-       *  Create a %map consisting of copies of the elements from [first,last).\n-       *  This is linear in N if the range is already sorted, and NlogN\n-       *  otherwise (where N is distance(first,last)).\n+       *  Create a %map consisting of copies of the elements from\n+       *  [__first,__last).  This is linear in N if the range is\n+       *  already sorted, and NlogN otherwise (where N is\n+       *  distance(__first,__last)).\n        */\n       template<typename _InputIterator>\n         map(_InputIterator __first, _InputIterator __last,\n@@ -245,10 +247,10 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief  %Map assignment operator.\n-       *  @param  x  A %map of identical element and allocator types.\n+       *  @param  __x  A %map of identical element and allocator types.\n        *\n-       *  All the elements of @a x are copied, but unlike the copy constructor,\n-       *  the allocator object is not copied.\n+       *  All the elements of @a __x are copied, but unlike the copy\n+       *  constructor, the allocator object is not copied.\n        */\n       map&\n       operator=(const map& __x)\n@@ -260,10 +262,10 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n #ifdef __GXX_EXPERIMENTAL_CXX0X__\n       /**\n        *  @brief  %Map move assignment operator.\n-       *  @param  x  A %map of identical element and allocator types.\n+       *  @param  __x  A %map of identical element and allocator types.\n        *\n-       *  The contents of @a x are moved into this map (without copying).\n-       *  @a x is a valid, but unspecified %map.\n+       *  The contents of @a __x are moved into this map (without copying).\n+       *  @a __x is a valid, but unspecified %map.\n        */\n       map&\n       operator=(map&& __x)\n@@ -277,10 +279,10 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief  %Map list assignment operator.\n-       *  @param  l  An initializer_list.\n+       *  @param  __l  An initializer_list.\n        *\n        *  This function fills a %map with copies of the elements in the\n-       *  initializer list @a l.\n+       *  initializer list @a __l.\n        *\n        *  Note that the assignment completely changes the %map and\n        *  that the resulting %map's size is the same as the number\n@@ -432,7 +434,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n       // [23.3.1.2] element access\n       /**\n        *  @brief  Subscript ( @c [] ) access to %map data.\n-       *  @param  k  The key for which data should be retrieved.\n+       *  @param  __k  The key for which data should be retrieved.\n        *  @return  A reference to the data of the (key,data) %pair.\n        *\n        *  Allows for easy lookup with the subscript ( @c [] )\n@@ -474,8 +476,8 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n       // DR 464. Suggestion for new member functions in standard containers.\n       /**\n        *  @brief  Access to %map data.\n-       *  @param  k  The key for which data should be retrieved.\n-       *  @return  A reference to the data whose key is equivalent to @a k, if\n+       *  @param  __k  The key for which data should be retrieved.\n+       *  @return  A reference to the data whose key is equivalent to @a __k, if\n        *           such a data is present in the %map.\n        *  @throw  std::out_of_range  If no such data is present.\n        */\n@@ -501,9 +503,9 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n       /**\n        *  @brief Attempts to insert a std::pair into the %map.\n \n-       *  @param  x  Pair to be inserted (see std::make_pair for easy creation \n-       *\t     of pairs).\n-\n+       *  @param __x Pair to be inserted (see std::make_pair for easy\n+       *\t     creation of pairs).\n+       *\n        *  @return  A pair, of which the first element is an iterator that \n        *           points to the possibly inserted pair, and the second is \n        *           a bool that is true if the pair was actually inserted.\n@@ -530,8 +532,8 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n #ifdef __GXX_EXPERIMENTAL_CXX0X__\n       /**\n        *  @brief Attempts to insert a list of std::pairs into the %map.\n-       *  @param  list  A std::initializer_list<value_type> of pairs to be\n-       *                inserted.\n+       *  @param  __list  A std::initializer_list<value_type> of pairs to be\n+       *                  inserted.\n        *\n        *  Complexity similar to that of the range constructor.\n        */\n@@ -542,12 +544,12 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief Attempts to insert a std::pair into the %map.\n-       *  @param  position  An iterator that serves as a hint as to where the\n+       *  @param  __position  An iterator that serves as a hint as to where the\n        *                    pair should be inserted.\n-       *  @param  x  Pair to be inserted (see std::make_pair for easy creation\n-       *             of pairs).\n-       *  @return  An iterator that points to the element with key of @a x (may\n-       *           or may not be the %pair passed in).\n+       *  @param  __x  Pair to be inserted (see std::make_pair for easy creation\n+       *               of pairs).\n+       *  @return An iterator that points to the element with key of\n+       *           @a __x (may or may not be the %pair passed in).\n        *\n \n        *  This function is not concerned about whether the insertion\n@@ -583,9 +585,9 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief Template function that attempts to insert a range of elements.\n-       *  @param  first  Iterator pointing to the start of the range to be\n-       *                 inserted.\n-       *  @param  last  Iterator pointing to the end of the range.\n+       *  @param  __first  Iterator pointing to the start of the range to be\n+       *                   inserted.\n+       *  @param  __last  Iterator pointing to the end of the range.\n        *\n        *  Complexity similar to that of the range constructor.\n        */\n@@ -599,7 +601,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n       // DR 130. Associative erase should return an iterator.\n       /**\n        *  @brief Erases an element from a %map.\n-       *  @param  position  An iterator pointing to the element to be erased.\n+       *  @param  __position  An iterator pointing to the element to be erased.\n        *  @return An iterator pointing to the element immediately following\n        *          @a position prior to the element being erased. If no such \n        *          element exists, end() is returned.\n@@ -616,7 +618,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n #else\n       /**\n        *  @brief Erases an element from a %map.\n-       *  @param  position  An iterator pointing to the element to be erased.\n+       *  @param  __position  An iterator pointing to the element to be erased.\n        *\n        *  This function erases an element, pointed to by the given\n        *  iterator, from a %map.  Note that this function only erases\n@@ -631,7 +633,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief Erases elements according to the provided key.\n-       *  @param  x  Key of element to be erased.\n+       *  @param  __x  Key of element to be erased.\n        *  @return  The number of elements erased.\n        *\n        *  This function erases all the elements located by the given key from\n@@ -649,10 +651,11 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n       // DR 130. Associative erase should return an iterator.\n       /**\n        *  @brief Erases a [first,last) range of elements from a %map.\n-       *  @param  first  Iterator pointing to the start of the range to be\n-       *                 erased.\n-       *  @param  last  Iterator pointing to the end of the range to be erased.\n-       *  @return The iterator @a last.\n+       *  @param  __first  Iterator pointing to the start of the range to be\n+       *                   erased.\n+       *  @param __last Iterator pointing to the end of the range to\n+       *                be erased.\n+       *  @return The iterator @a __last.\n        *\n        *  This function erases a sequence of elements from a %map.\n        *  Note that this function only erases the element, and that if\n@@ -664,10 +667,11 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n       { return _M_t.erase(__first, __last); }\n #else\n       /**\n-       *  @brief Erases a [first,last) range of elements from a %map.\n-       *  @param  first  Iterator pointing to the start of the range to be\n-       *                 erased.\n-       *  @param  last  Iterator pointing to the end of the range to be erased.\n+       *  @brief Erases a [__first,__last) range of elements from a %map.\n+       *  @param  __first  Iterator pointing to the start of the range to be\n+       *                   erased.\n+       *  @param __last Iterator pointing to the end of the range to\n+       *                be erased.\n        *\n        *  This function erases a sequence of elements from a %map.\n        *  Note that this function only erases the element, and that if\n@@ -681,7 +685,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief  Swaps data with another %map.\n-       *  @param  x  A %map of the same element and allocator types.\n+       *  @param  __x  A %map of the same element and allocator types.\n        *\n        *  This exchanges the elements between two maps in constant\n        *  time.  (It is only swapping a pointer, an integer, and an\n@@ -724,7 +728,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n       // [23.3.1.3] map operations\n       /**\n        *  @brief Tries to locate an element in a %map.\n-       *  @param  x  Key of (key, value) %pair to be located.\n+       *  @param  __x  Key of (key, value) %pair to be located.\n        *  @return  Iterator pointing to sought-after element, or end() if not\n        *           found.\n        *\n@@ -739,7 +743,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief Tries to locate an element in a %map.\n-       *  @param  x  Key of (key, value) %pair to be located.\n+       *  @param  __x  Key of (key, value) %pair to be located.\n        *  @return  Read-only (constant) iterator pointing to sought-after\n        *           element, or end() if not found.\n        *\n@@ -754,7 +758,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief  Finds the number of elements with given key.\n-       *  @param  x  Key of (key, value) pairs to be located.\n+       *  @param  __x  Key of (key, value) pairs to be located.\n        *  @return  Number of elements with specified key.\n        *\n        *  This function only makes sense for multimaps; for map the result will\n@@ -766,7 +770,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief Finds the beginning of a subsequence matching given key.\n-       *  @param  x  Key of (key, value) pair to be located.\n+       *  @param  __x  Key of (key, value) pair to be located.\n        *  @return  Iterator pointing to first element equal to or greater\n        *           than key, or end().\n        *\n@@ -781,7 +785,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief Finds the beginning of a subsequence matching given key.\n-       *  @param  x  Key of (key, value) pair to be located.\n+       *  @param  __x  Key of (key, value) pair to be located.\n        *  @return  Read-only (constant) iterator pointing to first element\n        *           equal to or greater than key, or end().\n        *\n@@ -796,7 +800,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief Finds the end of a subsequence matching given key.\n-       *  @param  x  Key of (key, value) pair to be located.\n+       *  @param  __x  Key of (key, value) pair to be located.\n        *  @return Iterator pointing to the first element\n        *          greater than key, or end().\n        */\n@@ -806,7 +810,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief Finds the end of a subsequence matching given key.\n-       *  @param  x  Key of (key, value) pair to be located.\n+       *  @param  __x  Key of (key, value) pair to be located.\n        *  @return  Read-only (constant) iterator pointing to first iterator\n        *           greater than key, or end().\n        */\n@@ -816,7 +820,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief Finds a subsequence matching given key.\n-       *  @param  x  Key of (key, value) pairs to be located.\n+       *  @param  __x  Key of (key, value) pairs to be located.\n        *  @return  Pair of iterators that possibly points to the subsequence\n        *           matching given key.\n        *\n@@ -835,7 +839,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief Finds a subsequence matching given key.\n-       *  @param  x  Key of (key, value) pairs to be located.\n+       *  @param  __x  Key of (key, value) pairs to be located.\n        *  @return  Pair of read-only (constant) iterators that possibly points\n        *           to the subsequence matching given key.\n        *\n@@ -865,8 +869,8 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n   /**\n    *  @brief  Map equality comparison.\n-   *  @param  x  A %map.\n-   *  @param  y  A %map of the same type as @a x.\n+   *  @param  __x  A %map.\n+   *  @param  __y  A %map of the same type as @a x.\n    *  @return  True iff the size and elements of the maps are equal.\n    *\n    *  This is an equivalence relation.  It is linear in the size of the\n@@ -881,8 +885,8 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n   /**\n    *  @brief  Map ordering relation.\n-   *  @param  x  A %map.\n-   *  @param  y  A %map of the same type as @a x.\n+   *  @param  __x  A %map.\n+   *  @param  __y  A %map of the same type as @a x.\n    *  @return  True iff @a x is lexicographically less than @a y.\n    *\n    *  This is a total ordering relation.  It is linear in the size of the"}, {"sha": "baa8b4e09dbd770db49340ea3bbe86d5b4aa7c7d", "filename": "libstdc++-v3/include/bits/stl_multimap.h", "status": "modified", "additions": 67, "deletions": 65, "changes": 132, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_multimap.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_multimap.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_multimap.h?ref=93c66bc68a2554cbb2ba11f90944314af378d16b", "patch": "@@ -152,8 +152,8 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief  Creates a %multimap with no elements.\n-       *  @param  comp  A comparison object.\n-       *  @param  a  An allocator object.\n+       *  @param  __comp  A comparison object.\n+       *  @param  __a  An allocator object.\n        */\n       explicit\n       multimap(const _Compare& __comp,\n@@ -162,31 +162,31 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief  %Multimap copy constructor.\n-       *  @param  x  A %multimap of identical element and allocator types.\n+       *  @param  __x  A %multimap of identical element and allocator types.\n        *\n        *  The newly-created %multimap uses a copy of the allocation object\n-       *  used by @a x.\n+       *  used by @a __x.\n        */\n       multimap(const multimap& __x)\n       : _M_t(__x._M_t) { }\n \n #ifdef __GXX_EXPERIMENTAL_CXX0X__\n       /**\n        *  @brief  %Multimap move constructor.\n-       *  @param   x  A %multimap of identical element and allocator types.\n+       *  @param   __x  A %multimap of identical element and allocator types.\n        *\n-       *  The newly-created %multimap contains the exact contents of @a x.\n-       *  The contents of @a x are a valid, but unspecified %multimap.\n+       *  The newly-created %multimap contains the exact contents of @a __x.\n+       *  The contents of @a __x are a valid, but unspecified %multimap.\n        */\n       multimap(multimap&& __x)\n       noexcept(is_nothrow_copy_constructible<_Compare>::value)\n       : _M_t(std::move(__x._M_t)) { }\n \n       /**\n        *  @brief  Builds a %multimap from an initializer_list.\n-       *  @param  l  An initializer_list.\n-       *  @param  comp  A comparison functor.\n-       *  @param  a  An allocator object.\n+       *  @param  __l  An initializer_list.\n+       *  @param  __comp  A comparison functor.\n+       *  @param  __a  An allocator object.\n        *\n        *  Create a %multimap consisting of copies of the elements from\n        *  the initializer_list.  This is linear in N if the list is already\n@@ -201,12 +201,12 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief  Builds a %multimap from a range.\n-       *  @param  first  An input iterator.\n-       *  @param  last  An input iterator.\n+       *  @param  __first  An input iterator.\n+       *  @param  __last  An input iterator.\n        *\n        *  Create a %multimap consisting of copies of the elements from\n-       *  [first,last).  This is linear in N if the range is already sorted,\n-       *  and NlogN otherwise (where N is distance(first,last)).\n+       *  [__first,__last).  This is linear in N if the range is already sorted,\n+       *  and NlogN otherwise (where N is distance(__first,__last)).\n        */\n       template<typename _InputIterator>\n         multimap(_InputIterator __first, _InputIterator __last)\n@@ -215,14 +215,14 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief  Builds a %multimap from a range.\n-       *  @param  first  An input iterator.\n-       *  @param  last  An input iterator.\n-       *  @param  comp  A comparison functor.\n-       *  @param  a  An allocator object.\n+       *  @param  __first  An input iterator.\n+       *  @param  __last  An input iterator.\n+       *  @param  __comp  A comparison functor.\n+       *  @param  __a  An allocator object.\n        *\n        *  Create a %multimap consisting of copies of the elements from\n-       *  [first,last).  This is linear in N if the range is already sorted,\n-       *  and NlogN otherwise (where N is distance(first,last)).\n+       *  [__first,__last).  This is linear in N if the range is already sorted,\n+       *  and NlogN otherwise (where N is distance(__first,__last)).\n        */\n       template<typename _InputIterator>\n         multimap(_InputIterator __first, _InputIterator __last,\n@@ -242,10 +242,10 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief  %Multimap assignment operator.\n-       *  @param  x  A %multimap of identical element and allocator types.\n+       *  @param  __x  A %multimap of identical element and allocator types.\n        *\n-       *  All the elements of @a x are copied, but unlike the copy constructor,\n-       *  the allocator object is not copied.\n+       *  All the elements of @a __x are copied, but unlike the copy\n+       *  constructor, the allocator object is not copied.\n        */\n       multimap&\n       operator=(const multimap& __x)\n@@ -257,10 +257,10 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n #ifdef __GXX_EXPERIMENTAL_CXX0X__\n       /**\n        *  @brief  %Multimap move assignment operator.\n-       *  @param  x  A %multimap of identical element and allocator types.\n+       *  @param  __x  A %multimap of identical element and allocator types.\n        *\n-       *  The contents of @a x are moved into this multimap (without copying).\n-       *  @a x is a valid, but unspecified multimap.\n+       *  The contents of @a __x are moved into this multimap (without copying).\n+       *  @a __x is a valid, but unspecified multimap.\n        */\n       multimap&\n       operator=(multimap&& __x)\n@@ -274,10 +274,10 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief  %Multimap list assignment operator.\n-       *  @param  l  An initializer_list.\n+       *  @param  __l  An initializer_list.\n        *\n        *  This function fills a %multimap with copies of the elements\n-       *  in the initializer list @a l.\n+       *  in the initializer list @a __l.\n        *\n        *  Note that the assignment completely changes the %multimap and\n        *  that the resulting %multimap's size is the same as the number\n@@ -427,7 +427,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n       // modifiers\n       /**\n        *  @brief Inserts a std::pair into the %multimap.\n-       *  @param  x  Pair to be inserted (see std::make_pair for easy creation\n+       *  @param  __x  Pair to be inserted (see std::make_pair for easy creation\n        *             of pairs).\n        *  @return An iterator that points to the inserted (key,value) pair.\n        *\n@@ -452,10 +452,10 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief Inserts a std::pair into the %multimap.\n-       *  @param  position  An iterator that serves as a hint as to where the\n-       *                    pair should be inserted.\n-       *  @param  x  Pair to be inserted (see std::make_pair for easy creation\n-       *             of pairs).\n+       *  @param  __position  An iterator that serves as a hint as to where the\n+       *                      pair should be inserted.\n+       *  @param  __x  Pair to be inserted (see std::make_pair for easy creation\n+       *               of pairs).\n        *  @return An iterator that points to the inserted (key,value) pair.\n        *\n        *  This function inserts a (key, value) pair into the %multimap.\n@@ -491,9 +491,9 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n       /**\n        *  @brief A template function that attempts to insert a range\n        *  of elements.\n-       *  @param  first  Iterator pointing to the start of the range to be\n-       *                 inserted.\n-       *  @param  last  Iterator pointing to the end of the range.\n+       *  @param  __first  Iterator pointing to the start of the range to be\n+       *                   inserted.\n+       *  @param  __last  Iterator pointing to the end of the range.\n        *\n        *  Complexity similar to that of the range constructor.\n        */\n@@ -505,8 +505,8 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n #ifdef __GXX_EXPERIMENTAL_CXX0X__\n       /**\n        *  @brief Attempts to insert a list of std::pairs into the %multimap.\n-       *  @param  list  A std::initializer_list<value_type> of pairs to be\n-       *                inserted.\n+       *  @param  __l  A std::initializer_list<value_type> of pairs to be\n+       *               inserted.\n        *\n        *  Complexity similar to that of the range constructor.\n        */\n@@ -520,7 +520,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n       // DR 130. Associative erase should return an iterator.\n       /**\n        *  @brief Erases an element from a %multimap.\n-       *  @param  position  An iterator pointing to the element to be erased.\n+       *  @param  __position  An iterator pointing to the element to be erased.\n        *  @return An iterator pointing to the element immediately following\n        *          @a position prior to the element being erased. If no such \n        *          element exists, end() is returned.\n@@ -537,7 +537,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n #else\n       /**\n        *  @brief Erases an element from a %multimap.\n-       *  @param  position  An iterator pointing to the element to be erased.\n+       *  @param  __position  An iterator pointing to the element to be erased.\n        *\n        *  This function erases an element, pointed to by the given iterator,\n        *  from a %multimap.  Note that this function only erases the element,\n@@ -552,7 +552,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief Erases elements according to the provided key.\n-       *  @param  x  Key of element to be erased.\n+       *  @param  __x  Key of element to be erased.\n        *  @return  The number of elements erased.\n        *\n        *  This function erases all elements located by the given key from a\n@@ -570,10 +570,11 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n       // DR 130. Associative erase should return an iterator.\n       /**\n        *  @brief Erases a [first,last) range of elements from a %multimap.\n-       *  @param  first  Iterator pointing to the start of the range to be\n-       *                 erased.\n-       *  @param  last  Iterator pointing to the end of the range to be erased.\n-       *  @return The iterator @a last.\n+       *  @param  __first  Iterator pointing to the start of the range to be\n+       *                   erased.\n+       *  @param __last Iterator pointing to the end of the range to be\n+       *                erased .\n+       *  @return The iterator @a __last.\n        *\n        *  This function erases a sequence of elements from a %multimap.\n        *  Note that this function only erases the elements, and that if\n@@ -589,9 +590,10 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n       // DR 130. Associative erase should return an iterator.\n       /**\n        *  @brief Erases a [first,last) range of elements from a %multimap.\n-       *  @param  first  Iterator pointing to the start of the range to be\n+       *  @param  __first  Iterator pointing to the start of the range to be\n        *                 erased.\n-       *  @param  last  Iterator pointing to the end of the range to be erased.\n+       *  @param __last Iterator pointing to the end of the range to\n+       *                be erased.\n        *\n        *  This function erases a sequence of elements from a %multimap.\n        *  Note that this function only erases the elements, and that if\n@@ -606,7 +608,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief  Swaps data with another %multimap.\n-       *  @param  x  A %multimap of the same element and allocator types.\n+       *  @param  __x  A %multimap of the same element and allocator types.\n        *\n        *  This exchanges the elements between two multimaps in constant time.\n        *  (It is only swapping a pointer, an integer, and an instance of\n@@ -649,7 +651,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n       // multimap operations\n       /**\n        *  @brief Tries to locate an element in a %multimap.\n-       *  @param  x  Key of (key, value) pair to be located.\n+       *  @param  __x  Key of (key, value) pair to be located.\n        *  @return  Iterator pointing to sought-after element,\n        *           or end() if not found.\n        *\n@@ -664,7 +666,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief Tries to locate an element in a %multimap.\n-       *  @param  x  Key of (key, value) pair to be located.\n+       *  @param  __x  Key of (key, value) pair to be located.\n        *  @return  Read-only (constant) iterator pointing to sought-after\n        *           element, or end() if not found.\n        *\n@@ -679,7 +681,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief Finds the number of elements with given key.\n-       *  @param  x  Key of (key, value) pairs to be located.\n+       *  @param  __x  Key of (key, value) pairs to be located.\n        *  @return Number of elements with specified key.\n        */\n       size_type\n@@ -688,7 +690,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief Finds the beginning of a subsequence matching given key.\n-       *  @param  x  Key of (key, value) pair to be located.\n+       *  @param  __x  Key of (key, value) pair to be located.\n        *  @return  Iterator pointing to first element equal to or greater\n        *           than key, or end().\n        *\n@@ -703,22 +705,22 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief Finds the beginning of a subsequence matching given key.\n-       *  @param  x  Key of (key, value) pair to be located.\n+       *  @param  __x  Key of (key, value) pair to be located.\n        *  @return  Read-only (constant) iterator pointing to first element\n        *           equal to or greater than key, or end().\n        *\n-       *  This function returns the first element of a subsequence of elements\n-       *  that matches the given key.  If unsuccessful the iterator will point\n-       *  to the next greatest element or, if no such greater element exists, to\n-       *  end().\n+       *  This function returns the first element of a subsequence of\n+       *  elements that matches the given key.  If unsuccessful the\n+       *  iterator will point to the next greatest element or, if no\n+       *  such greater element exists, to end().\n        */\n       const_iterator\n       lower_bound(const key_type& __x) const\n       { return _M_t.lower_bound(__x); }\n \n       /**\n        *  @brief Finds the end of a subsequence matching given key.\n-       *  @param  x  Key of (key, value) pair to be located.\n+       *  @param  __x  Key of (key, value) pair to be located.\n        *  @return Iterator pointing to the first element\n        *          greater than key, or end().\n        */\n@@ -728,7 +730,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief Finds the end of a subsequence matching given key.\n-       *  @param  x  Key of (key, value) pair to be located.\n+       *  @param  __x  Key of (key, value) pair to be located.\n        *  @return  Read-only (constant) iterator pointing to first iterator\n        *           greater than key, or end().\n        */\n@@ -738,7 +740,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief Finds a subsequence matching given key.\n-       *  @param  x  Key of (key, value) pairs to be located.\n+       *  @param  __x  Key of (key, value) pairs to be located.\n        *  @return  Pair of iterators that possibly points to the subsequence\n        *           matching given key.\n        *\n@@ -755,7 +757,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief Finds a subsequence matching given key.\n-       *  @param  x  Key of (key, value) pairs to be located.\n+       *  @param  __x  Key of (key, value) pairs to be located.\n        *  @return  Pair of read-only (constant) iterators that possibly points\n        *           to the subsequence matching given key.\n        *\n@@ -783,8 +785,8 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n   /**\n    *  @brief  Multimap equality comparison.\n-   *  @param  x  A %multimap.\n-   *  @param  y  A %multimap of the same type as @a x.\n+   *  @param  __x  A %multimap.\n+   *  @param  __y  A %multimap of the same type as @a __x.\n    *  @return  True iff the size and elements of the maps are equal.\n    *\n    *  This is an equivalence relation.  It is linear in the size of the\n@@ -799,8 +801,8 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n   /**\n    *  @brief  Multimap ordering relation.\n-   *  @param  x  A %multimap.\n-   *  @param  y  A %multimap of the same type as @a x.\n+   *  @param  __x  A %multimap.\n+   *  @param  __y  A %multimap of the same type as @a __x.\n    *  @return  True iff @a x is lexicographically less than @a y.\n    *\n    *  This is a total ordering relation.  It is linear in the size of the"}, {"sha": "7c307ee60d27495413e661a9d5b2eeaf1d5db7ef", "filename": "libstdc++-v3/include/bits/stl_multiset.h", "status": "modified", "additions": 56, "deletions": 53, "changes": 109, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_multiset.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_multiset.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_multiset.h?ref=93c66bc68a2554cbb2ba11f90944314af378d16b", "patch": "@@ -133,8 +133,8 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief  Creates a %multiset with no elements.\n-       *  @param  comp  Comparator to use.\n-       *  @param  a  An allocator object.\n+       *  @param  __comp  Comparator to use.\n+       *  @param  __a  An allocator object.\n        */\n       explicit\n       multiset(const _Compare& __comp,\n@@ -143,12 +143,12 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief  Builds a %multiset from a range.\n-       *  @param  first  An input iterator.\n-       *  @param  last  An input iterator.\n+       *  @param  __first  An input iterator.\n+       *  @param  __last  An input iterator.\n        *\n        *  Create a %multiset consisting of copies of the elements from\n        *  [first,last).  This is linear in N if the range is already sorted,\n-       *  and NlogN otherwise (where N is distance(first,last)).\n+       *  and NlogN otherwise (where N is distance(__first,__last)).\n        */\n       template<typename _InputIterator>\n         multiset(_InputIterator __first, _InputIterator __last)\n@@ -157,14 +157,14 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief  Builds a %multiset from a range.\n-       *  @param  first  An input iterator.\n-       *  @param  last  An input iterator.\n-       *  @param  comp  A comparison functor.\n-       *  @param  a  An allocator object.\n+       *  @param  __first  An input iterator.\n+       *  @param  __last  An input iterator.\n+       *  @param  __comp  A comparison functor.\n+       *  @param  __a  An allocator object.\n        *\n        *  Create a %multiset consisting of copies of the elements from\n-       *  [first,last).  This is linear in N if the range is already sorted,\n-       *  and NlogN otherwise (where N is distance(first,last)).\n+       *  [__first,__last).  This is linear in N if the range is already sorted,\n+       *  and NlogN otherwise (where N is distance(__first,__last)).\n        */\n       template<typename _InputIterator>\n         multiset(_InputIterator __first, _InputIterator __last,\n@@ -175,35 +175,35 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief  %Multiset copy constructor.\n-       *  @param  x  A %multiset of identical element and allocator types.\n+       *  @param  __x  A %multiset of identical element and allocator types.\n        *\n        *  The newly-created %multiset uses a copy of the allocation object used\n-       *  by @a x.\n+       *  by @a __x.\n        */\n       multiset(const multiset& __x)\n       : _M_t(__x._M_t) { }\n \n #ifdef __GXX_EXPERIMENTAL_CXX0X__\n      /**\n        *  @brief  %Multiset move constructor.\n-       *  @param  x  A %multiset of identical element and allocator types.\n+       *  @param  __x  A %multiset of identical element and allocator types.\n        *\n-       *  The newly-created %multiset contains the exact contents of @a x.\n-       *  The contents of @a x are a valid, but unspecified %multiset.\n+       *  The newly-created %multiset contains the exact contents of @a __x.\n+       *  The contents of @a __x are a valid, but unspecified %multiset.\n        */\n       multiset(multiset&& __x)\n       noexcept(is_nothrow_copy_constructible<_Compare>::value)\n       : _M_t(std::move(__x._M_t)) { }\n \n       /**\n        *  @brief  Builds a %multiset from an initializer_list.\n-       *  @param  l  An initializer_list.\n-       *  @param  comp  A comparison functor.\n-       *  @param  a  An allocator object.\n+       *  @param  __l  An initializer_list.\n+       *  @param  __comp  A comparison functor.\n+       *  @param  __a  An allocator object.\n        *\n        *  Create a %multiset consisting of copies of the elements from\n        *  the list.  This is linear in N if the list is already sorted,\n-       *  and NlogN otherwise (where N is @a l.size()).\n+       *  and NlogN otherwise (where N is @a __l.size()).\n        */\n       multiset(initializer_list<value_type> __l,\n \t       const _Compare& __comp = _Compare(),\n@@ -214,10 +214,10 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief  %Multiset assignment operator.\n-       *  @param  x  A %multiset of identical element and allocator types.\n+       *  @param  __x  A %multiset of identical element and allocator types.\n        *\n-       *  All the elements of @a x are copied, but unlike the copy constructor,\n-       *  the allocator object is not copied.\n+       *  All the elements of @a __x are copied, but unlike the copy\n+       *  constructor, the allocator object is not copied.\n        */\n       multiset&\n       operator=(const multiset& __x)\n@@ -229,10 +229,11 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n #ifdef __GXX_EXPERIMENTAL_CXX0X__\n       /**\n        *  @brief  %Multiset move assignment operator.\n-       *  @param  x  A %multiset of identical element and allocator types.\n+       *  @param  __x  A %multiset of identical element and allocator types.\n        *\n-       *  The contents of @a x are moved into this %multiset (without copying).\n-       *  @a x is a valid, but unspecified %multiset.\n+       *  The contents of @a __x are moved into this %multiset\n+       *  (without copying).  @a __x is a valid, but unspecified\n+       *  %multiset.\n        */\n       multiset&\n       operator=(multiset&& __x)\n@@ -246,10 +247,10 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief  %Multiset list assignment operator.\n-       *  @param  l  An initializer_list.\n+       *  @param  __l  An initializer_list.\n        *\n        *  This function fills a %multiset with copies of the elements in the\n-       *  initializer list @a l.\n+       *  initializer list @a __l.\n        *\n        *  Note that the assignment completely changes the %multiset and\n        *  that the resulting %multiset's size is the same as the number\n@@ -370,7 +371,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief  Swaps data with another %multiset.\n-       *  @param  x  A %multiset of the same element and allocator types.\n+       *  @param  __x  A %multiset of the same element and allocator types.\n        *\n        *  This exchanges the elements between two multisets in constant time.\n        *  (It is only swapping a pointer, an integer, and an instance of the @c\n@@ -386,7 +387,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n       // insert/erase\n       /**\n        *  @brief Inserts an element into the %multiset.\n-       *  @param  x  Element to be inserted.\n+       *  @param  __x  Element to be inserted.\n        *  @return An iterator that points to the inserted element.\n        *\n        *  This function inserts an element into the %multiset.  Contrary\n@@ -407,9 +408,9 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief Inserts an element into the %multiset.\n-       *  @param  position  An iterator that serves as a hint as to where the\n+       *  @param  __position  An iterator that serves as a hint as to where the\n        *                    element should be inserted.\n-       *  @param  x  Element to be inserted.\n+       *  @param  __x  Element to be inserted.\n        *  @return An iterator that points to the inserted element.\n        *\n        *  This function inserts an element into the %multiset.  Contrary\n@@ -437,9 +438,9 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief A template function that tries to insert a range of elements.\n-       *  @param  first  Iterator pointing to the start of the range to be\n-       *                 inserted.\n-       *  @param  last  Iterator pointing to the end of the range.\n+       *  @param  __first  Iterator pointing to the start of the range to be\n+       *                   inserted.\n+       *  @param  __last  Iterator pointing to the end of the range.\n        *\n        *  Complexity similar to that of the range constructor.\n        */\n@@ -451,8 +452,8 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n #ifdef __GXX_EXPERIMENTAL_CXX0X__\n       /**\n        *  @brief Attempts to insert a list of elements into the %multiset.\n-       *  @param  list  A std::initializer_list<value_type> of elements\n-       *                to be inserted.\n+       *  @param  __l  A std::initializer_list<value_type> of elements\n+       *               to be inserted.\n        *\n        *  Complexity similar to that of the range constructor.\n        */\n@@ -466,7 +467,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n       // DR 130. Associative erase should return an iterator.\n       /**\n        *  @brief Erases an element from a %multiset.\n-       *  @param  position  An iterator pointing to the element to be erased.\n+       *  @param  __position  An iterator pointing to the element to be erased.\n        *  @return An iterator pointing to the element immediately following\n        *          @a position prior to the element being erased. If no such \n        *          element exists, end() is returned.\n@@ -483,7 +484,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n #else\n       /**\n        *  @brief Erases an element from a %multiset.\n-       *  @param  position  An iterator pointing to the element to be erased.\n+       *  @param  __position  An iterator pointing to the element to be erased.\n        *\n        *  This function erases an element, pointed to by the given iterator,\n        *  from a %multiset.  Note that this function only erases the element,\n@@ -498,7 +499,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief Erases elements according to the provided key.\n-       *  @param  x  Key of element to be erased.\n+       *  @param  __x  Key of element to be erased.\n        *  @return  The number of elements erased.\n        *\n        *  This function erases all elements located by the given key from a\n@@ -516,9 +517,10 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n       // DR 130. Associative erase should return an iterator.\n       /**\n        *  @brief Erases a [first,last) range of elements from a %multiset.\n-       *  @param  first  Iterator pointing to the start of the range to be\n-       *                 erased.\n-       *  @param  last  Iterator pointing to the end of the range to be erased.\n+       *  @param  __first  Iterator pointing to the start of the range to be\n+       *                   erased.\n+       *  @param __last Iterator pointing to the end of the range to\n+       *                be erased.\n        *  @return The iterator @a last.\n        *\n        *  This function erases a sequence of elements from a %multiset.\n@@ -562,7 +564,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief Finds the number of elements with given key.\n-       *  @param  x  Key of elements to be located.\n+       *  @param  __x  Key of elements to be located.\n        *  @return Number of elements with specified key.\n        */\n       size_type\n@@ -574,7 +576,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n       //@{\n       /**\n        *  @brief Tries to locate an element in a %set.\n-       *  @param  x  Element to be located.\n+       *  @param  __x  Element to be located.\n        *  @return  Iterator pointing to sought-after element, or end() if not\n        *           found.\n        *\n@@ -595,7 +597,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n       //@{\n       /**\n        *  @brief Finds the beginning of a subsequence matching given key.\n-       *  @param  x  Key to be located.\n+       *  @param  __x  Key to be located.\n        *  @return  Iterator pointing to first element equal to or greater\n        *           than key, or end().\n        *\n@@ -616,7 +618,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n       //@{\n       /**\n        *  @brief Finds the end of a subsequence matching given key.\n-       *  @param  x  Key to be located.\n+       *  @param  __x  Key to be located.\n        *  @return Iterator pointing to the first element\n        *          greater than key, or end().\n        */\n@@ -632,7 +634,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n       //@{\n       /**\n        *  @brief Finds a subsequence matching given key.\n-       *  @param  x  Key to be located.\n+       *  @param  __x  Key to be located.\n        *  @return  Pair of iterators that possibly points to the subsequence\n        *           matching given key.\n        *\n@@ -652,6 +654,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n       std::pair<const_iterator, const_iterator>\n       equal_range(const key_type& __x) const\n       { return _M_t.equal_range(__x); }\n+      //@}\n \n       template<typename _K1, typename _C1, typename _A1>\n         friend bool\n@@ -666,8 +669,8 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n   /**\n    *  @brief  Multiset equality comparison.\n-   *  @param  x  A %multiset.\n-   *  @param  y  A %multiset of the same type as @a x.\n+   *  @param  __x  A %multiset.\n+   *  @param  __y  A %multiset of the same type as @a __x.\n    *  @return  True iff the size and elements of the multisets are equal.\n    *\n    *  This is an equivalence relation.  It is linear in the size of the\n@@ -683,9 +686,9 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n   /**\n    *  @brief  Multiset ordering relation.\n-   *  @param  x  A %multiset.\n-   *  @param  y  A %multiset of the same type as @a x.\n-   *  @return  True iff @a x is lexicographically less than @a y.\n+   *  @param  __x  A %multiset.\n+   *  @param  __y  A %multiset of the same type as @a __x.\n+   *  @return  True iff @a __x is lexicographically less than @a __y.\n    *\n    *  This is a total ordering relation.  It is linear in the size of the\n    *  maps.  The elements must be comparable with @c <."}, {"sha": "0ec746f541ea43ac9e0f3ad3aa8b028742e4b5fd", "filename": "libstdc++-v3/include/bits/stl_numeric.h", "status": "modified", "additions": 34, "deletions": 34, "changes": 68, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_numeric.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_numeric.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_numeric.h?ref=93c66bc68a2554cbb2ba11f90944314af378d16b", "patch": "@@ -73,9 +73,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n    *  For each element in the range @p [first,last) assigns @p value and\n    *  increments @p value as if by @p ++value.\n    *\n-   *  @param  first  Start of range.\n-   *  @param  last  End of range.\n-   *  @param  value  Starting value.\n+   *  @param  __first  Start of range.\n+   *  @param  __last  End of range.\n+   *  @param  __value  Starting value.\n    *  @return  Nothing.\n    */\n   template<typename _ForwardIterator, typename _Tp>\n@@ -111,9 +111,9 @@ _GLIBCXX_BEGIN_NAMESPACE_ALGO\n    *  Accumulates the values in the range [first,last) using operator+().  The\n    *  initial value is @a init.  The values are processed in order.\n    *\n-   *  @param  first  Start of range.\n-   *  @param  last  End of range.\n-   *  @param  init  Starting value to add other values to.\n+   *  @param  __first  Start of range.\n+   *  @param  __last  End of range.\n+   *  @param  __init  Starting value to add other values to.\n    *  @return  The final sum.\n    */\n   template<typename _InputIterator, typename _Tp>\n@@ -136,10 +136,10 @@ _GLIBCXX_BEGIN_NAMESPACE_ALGO\n    *  object @a binary_op.  The initial value is @a init.  The values are\n    *  processed in order.\n    *\n-   *  @param  first  Start of range.\n-   *  @param  last  End of range.\n-   *  @param  init  Starting value to add other values to.\n-   *  @param  binary_op  Function object to accumulate with.\n+   *  @param  __first  Start of range.\n+   *  @param  __last  End of range.\n+   *  @param  __init  Starting value to add other values to.\n+   *  @param  __binary_op  Function object to accumulate with.\n    *  @return  The final sum.\n    */\n   template<typename _InputIterator, typename _Tp, typename _BinaryOperation>\n@@ -164,10 +164,10 @@ _GLIBCXX_BEGIN_NAMESPACE_ALGO\n    *  value using operator+().  The values in the ranges are processed in\n    *  order.\n    *\n-   *  @param  first1  Start of range 1.\n-   *  @param  last1  End of range 1.\n-   *  @param  first2  Start of range 2.\n-   *  @param  init  Starting value to add other values to.\n+   *  @param  __first1  Start of range 1.\n+   *  @param  __last1  End of range 1.\n+   *  @param  __first2  Start of range 2.\n+   *  @param  __init  Starting value to add other values to.\n    *  @return  The final inner product.\n    */\n   template<typename _InputIterator1, typename _InputIterator2, typename _Tp>\n@@ -193,12 +193,12 @@ _GLIBCXX_BEGIN_NAMESPACE_ALGO\n    *  the accumulated value using @a binary_op1.  The values in the ranges are\n    *  processed in order.\n    *\n-   *  @param  first1  Start of range 1.\n-   *  @param  last1  End of range 1.\n-   *  @param  first2  Start of range 2.\n-   *  @param  init  Starting value to add other values to.\n-   *  @param  binary_op1  Function object to accumulate with.\n-   *  @param  binary_op2  Function object to apply to pairs of input values.\n+   *  @param  __first1  Start of range 1.\n+   *  @param  __last1  End of range 1.\n+   *  @param  __first2  Start of range 2.\n+   *  @param  __init  Starting value to add other values to.\n+   *  @param  __binary_op1  Function object to accumulate with.\n+   *  @param  __binary_op2  Function object to apply to pairs of input values.\n    *  @return  The final inner product.\n    */\n   template<typename _InputIterator1, typename _InputIterator2, typename _Tp,\n@@ -228,9 +228,9 @@ _GLIBCXX_BEGIN_NAMESPACE_ALGO\n    *  first value of the input, the second value in result is the sum of the\n    *  first and second input values, and so on.\n    *\n-   *  @param  first  Start of input range.\n-   *  @param  last  End of input range.\n-   *  @param  result  Output to write sums to.\n+   *  @param  __first  Start of input range.\n+   *  @param  __last  End of input range.\n+   *  @param  __result  Output to write sums to.\n    *  @return  Iterator pointing just beyond the values written to result.\n    */\n   template<typename _InputIterator, typename _OutputIterator>\n@@ -267,9 +267,9 @@ _GLIBCXX_BEGIN_NAMESPACE_ALGO\n    *  first value of the input, the second value in result is the sum of the\n    *  first and second input values, and so on.\n    *\n-   *  @param  first  Start of input range.\n-   *  @param  last  End of input range.\n-   *  @param  result  Output to write sums to.\n+   *  @param  __first  Start of input range.\n+   *  @param  __last  End of input range.\n+   *  @param  __result  Output to write sums to.\n    *  @return  Iterator pointing just beyond the values written to result.\n    */\n   template<typename _InputIterator, typename _OutputIterator,\n@@ -304,9 +304,9 @@ _GLIBCXX_BEGIN_NAMESPACE_ALGO\n    *  Computes the difference between adjacent values in the range\n    *  [first,last) using operator-() and writes the result to @a result.\n    *\n-   *  @param  first  Start of input range.\n-   *  @param  last  End of input range.\n-   *  @param  result  Output to write sums to.\n+   *  @param  __first  Start of input range.\n+   *  @param  __last  End of input range.\n+   *  @param  __result  Output to write sums to.\n    *  @return  Iterator pointing just beyond the values written to result.\n    *\n    *  _GLIBCXX_RESOLVE_LIB_DEFECTS\n@@ -342,12 +342,12 @@ _GLIBCXX_BEGIN_NAMESPACE_ALGO\n    *  @brief  Return differences between adjacent values.\n    *\n    *  Computes the difference between adjacent values in the range\n-   *  [first,last) using the function object @a binary_op and writes the\n-   *  result to @a result.\n+   *  [__first,__last) using the function object @a __binary_op and writes the\n+   *  result to @a __result.\n    *\n-   *  @param  first  Start of input range.\n-   *  @param  last  End of input range.\n-   *  @param  result  Output to write sums to.\n+   *  @param  __first  Start of input range.\n+   *  @param  __last  End of input range.\n+   *  @param  __result  Output to write sums to.\n    *  @return  Iterator pointing just beyond the values written to result.\n    *\n    *  _GLIBCXX_RESOLVE_LIB_DEFECTS"}, {"sha": "967c86d718a8a11bdcc48ac35ea0630c87354894", "filename": "libstdc++-v3/include/bits/stl_pair.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_pair.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_pair.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_pair.h?ref=93c66bc68a2554cbb2ba11f90944314af378d16b", "patch": "@@ -262,8 +262,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n   /**\n    *  @brief A convenience wrapper for creating a pair from two objects.\n-   *  @param  x  The first object.\n-   *  @param  y  The second object.\n+   *  @param  __x  The first object.\n+   *  @param  __y  The second object.\n    *  @return   A newly-constructed pair<> object of the appropriate type.\n    *\n    *  The standard requires that the objects be passed by reference-to-const,"}, {"sha": "fe65e9b1cb285e2ebd5ff86d484556f575946cbe", "filename": "libstdc++-v3/include/bits/stl_queue.h", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_queue.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_queue.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_queue.h?ref=93c66bc68a2554cbb2ba11f90944314af378d16b", "patch": "@@ -200,7 +200,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       /**\n        *  @brief  Add data to the end of the %queue.\n-       *  @param  x  Data to be added.\n+       *  @param  __x  Data to be added.\n        *\n        *  This is a typical %queue operation.  The function creates an\n        *  element at the end of the %queue and assigns the given data\n@@ -253,8 +253,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n   /**\n    *  @brief  Queue equality comparison.\n-   *  @param  x  A %queue.\n-   *  @param  y  A %queue of the same type as @a x.\n+   *  @param  __x  A %queue.\n+   *  @param  __y  A %queue of the same type as @a __x.\n    *  @return  True iff the size and elements of the queues are equal.\n    *\n    *  This is an equivalence relation.  Complexity and semantics depend on the\n@@ -269,9 +269,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n   /**\n    *  @brief  Queue ordering relation.\n-   *  @param  x  A %queue.\n-   *  @param  y  A %queue of the same type as @a x.\n-   *  @return  True iff @a x is lexicographically less than @a y.\n+   *  @param  __x  A %queue.\n+   *  @param  __y  A %queue of the same type as @a x.\n+   *  @return  True iff @a __x is lexicographically less than @a __y.\n    *\n    *  This is an total ordering relation.  Complexity and semantics\n    *  depend on the underlying sequence type, but the expected rules\n@@ -407,14 +407,14 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       /**\n        *  @brief  Builds a %queue from a range.\n-       *  @param  first  An input iterator.\n-       *  @param  last  An input iterator.\n-       *  @param  x  A comparison functor describing a strict weak ordering.\n-       *  @param  s  An initial sequence with which to start.\n+       *  @param  __first  An input iterator.\n+       *  @param  __last  An input iterator.\n+       *  @param  __x  A comparison functor describing a strict weak ordering.\n+       *  @param  __s  An initial sequence with which to start.\n        *\n-       *  Begins by copying @a s, inserting a copy of the elements\n-       *  from @a [first,last) into the copy of @a s, then ordering\n-       *  the copy according to @a x.\n+       *  Begins by copying @a __s, inserting a copy of the elements\n+       *  from @a [first,last) into the copy of @a __s, then ordering\n+       *  the copy according to @a __x.\n        *\n        *  For more information on function objects, see the\n        *  documentation on @link functors functor base\n@@ -480,7 +480,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       /**\n        *  @brief  Add data to the %queue.\n-       *  @param  x  Data to be added.\n+       *  @param  __x  Data to be added.\n        *\n        *  This is a typical %queue operation.\n        *  The time complexity of the operation depends on the underlying"}, {"sha": "757d4bc323c39081ea31c5584229078dbb580224", "filename": "libstdc++-v3/include/bits/stl_relops.h", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_relops.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_relops.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_relops.h?ref=93c66bc68a2554cbb2ba11f90944314af378d16b", "patch": "@@ -77,9 +77,9 @@ namespace std _GLIBCXX_VISIBILITY(default)\n \n     /**\n      *  @brief Defines @c != for arbitrary types, in terms of @c ==.\n-     *  @param  x  A thing.\n-     *  @param  y  Another thing.\n-     *  @return   x != y\n+     *  @param  __x  A thing.\n+     *  @param  __y  Another thing.\n+     *  @return   __x != __y\n      *\n      *  This function uses @c == to determine its result.\n      */\n@@ -90,9 +90,9 @@ namespace std _GLIBCXX_VISIBILITY(default)\n \n     /**\n      *  @brief Defines @c > for arbitrary types, in terms of @c <.\n-     *  @param  x  A thing.\n-     *  @param  y  Another thing.\n-     *  @return   x > y\n+     *  @param  __x  A thing.\n+     *  @param  __y  Another thing.\n+     *  @return   __x > __y\n      *\n      *  This function uses @c < to determine its result.\n      */\n@@ -103,9 +103,9 @@ namespace std _GLIBCXX_VISIBILITY(default)\n \n     /**\n      *  @brief Defines @c <= for arbitrary types, in terms of @c <.\n-     *  @param  x  A thing.\n-     *  @param  y  Another thing.\n-     *  @return   x <= y\n+     *  @param  __x  A thing.\n+     *  @param  __y  Another thing.\n+     *  @return   __x <= __y\n      *\n      *  This function uses @c < to determine its result.\n      */\n@@ -116,9 +116,9 @@ namespace std _GLIBCXX_VISIBILITY(default)\n \n     /**\n      *  @brief Defines @c >= for arbitrary types, in terms of @c <.\n-     *  @param  x  A thing.\n-     *  @param  y  Another thing.\n-     *  @return   x >= y\n+     *  @param  __x  A thing.\n+     *  @param  __y  Another thing.\n+     *  @return   __x >= __y\n      *\n      *  This function uses @c < to determine its result.\n      */"}, {"sha": "85361d6a05c9a57c9416512d7c284abcd3f73b2e", "filename": "libstdc++-v3/include/bits/stl_set.h", "status": "modified", "additions": 73, "deletions": 68, "changes": 141, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_set.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_set.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_set.h?ref=93c66bc68a2554cbb2ba11f90944314af378d16b", "patch": "@@ -76,9 +76,9 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n    *\n    *  Sets support bidirectional iterators.\n    *\n-   *  @param  Key  Type of key objects.\n-   *  @param  Compare  Comparison function object type, defaults to less<Key>.\n-   *  @param  Alloc  Allocator type, defaults to allocator<Key>.\n+   *  @tparam  _Key  Type of key objects.\n+   *  @tparam  _Compare  Comparison function object type, defaults to less<Key>.\n+   *  @tparam  _Alloc  Allocator type, defaults to allocator<Key>.\n    *\n    *  The private tree data is declared exactly the same way for set and\n    *  multiset; the distinction is made entirely in how the tree functions are\n@@ -140,8 +140,8 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief  Creates a %set with no elements.\n-       *  @param  comp  Comparator to use.\n-       *  @param  a  An allocator object.\n+       *  @param  __comp  Comparator to use.\n+       *  @param  __a  An allocator object.\n        */\n       explicit\n       set(const _Compare& __comp,\n@@ -150,12 +150,13 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief  Builds a %set from a range.\n-       *  @param  first  An input iterator.\n-       *  @param  last  An input iterator.\n+       *  @param  __first  An input iterator.\n+       *  @param  __last  An input iterator.\n        *\n-       *  Create a %set consisting of copies of the elements from [first,last).\n-       *  This is linear in N if the range is already sorted, and NlogN\n-       *  otherwise (where N is distance(first,last)).\n+       *  Create a %set consisting of copies of the elements from\n+       *  [__first,__last).  This is linear in N if the range is\n+       *  already sorted, and NlogN otherwise (where N is\n+       *  distance(__first,__last)).\n        */\n       template<typename _InputIterator>\n \tset(_InputIterator __first, _InputIterator __last)\n@@ -164,14 +165,15 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief  Builds a %set from a range.\n-       *  @param  first  An input iterator.\n-       *  @param  last  An input iterator.\n-       *  @param  comp  A comparison functor.\n-       *  @param  a  An allocator object.\n+       *  @param  __first  An input iterator.\n+       *  @param  __last  An input iterator.\n+       *  @param  __comp  A comparison functor.\n+       *  @param  __a  An allocator object.\n        *\n-       *  Create a %set consisting of copies of the elements from [first,last).\n-       *  This is linear in N if the range is already sorted, and NlogN\n-       *  otherwise (where N is distance(first,last)).\n+       *  Create a %set consisting of copies of the elements from\n+       *  [__first,__last).  This is linear in N if the range is\n+       *  already sorted, and NlogN otherwise (where N is\n+       *  distance(__first,__last)).\n        */\n       template<typename _InputIterator>\n \tset(_InputIterator __first, _InputIterator __last,\n@@ -182,18 +184,18 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief  %Set copy constructor.\n-       *  @param  x  A %set of identical element and allocator types.\n+       *  @param  __x  A %set of identical element and allocator types.\n        *\n        *  The newly-created %set uses a copy of the allocation object used\n-       *  by @a x.\n+       *  by @a __x.\n        */\n       set(const set& __x)\n       : _M_t(__x._M_t) { }\n \n #ifdef __GXX_EXPERIMENTAL_CXX0X__\n      /**\n        *  @brief %Set move constructor\n-       *  @param x  A %set of identical element and allocator types.\n+       *  @param __x  A %set of identical element and allocator types.\n        *\n        *  The newly-created %set contains the exact contents of @a x.\n        *  The contents of @a x are a valid, but unspecified %set.\n@@ -204,13 +206,13 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief  Builds a %set from an initializer_list.\n-       *  @param  l  An initializer_list.\n-       *  @param  comp  A comparison functor.\n-       *  @param  a  An allocator object.\n+       *  @param  __l  An initializer_list.\n+       *  @param  __comp  A comparison functor.\n+       *  @param  __a  An allocator object.\n        *\n        *  Create a %set consisting of copies of the elements in the list.\n        *  This is linear in N if the list is already sorted, and NlogN\n-       *  otherwise (where N is @a l.size()).\n+       *  otherwise (where N is @a __l.size()).\n        */\n       set(initializer_list<value_type> __l,\n \t  const _Compare& __comp = _Compare(),\n@@ -221,10 +223,10 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief  %Set assignment operator.\n-       *  @param  x  A %set of identical element and allocator types.\n+       *  @param  __x  A %set of identical element and allocator types.\n        *\n-       *  All the elements of @a x are copied, but unlike the copy constructor,\n-       *  the allocator object is not copied.\n+       *  All the elements of @a __x are copied, but unlike the copy\n+       *  constructor, the allocator object is not copied.\n        */\n       set&\n       operator=(const set& __x)\n@@ -236,10 +238,10 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n #ifdef __GXX_EXPERIMENTAL_CXX0X__\n       /**\n        *  @brief %Set move assignment operator.\n-       *  @param x  A %set of identical element and allocator types.\n+       *  @param __x  A %set of identical element and allocator types.\n        *\n-       *  The contents of @a x are moved into this %set (without copying).\n-       *  @a x is a valid, but unspecified %set.\n+       *  The contents of @a __x are moved into this %set (without copying).\n+       *  @a __x is a valid, but unspecified %set.\n        */\n       set&\n       operator=(set&& __x)\n@@ -253,10 +255,10 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief  %Set list assignment operator.\n-       *  @param  l  An initializer_list.\n+       *  @param  __l  An initializer_list.\n        *\n        *  This function fills a %set with copies of the elements in the\n-       *  initializer list @a l.\n+       *  initializer list @a __l.\n        *\n        *  Note that the assignment completely changes the %set and\n        *  that the resulting %set's size is the same as the number\n@@ -377,14 +379,14 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief  Swaps data with another %set.\n-       *  @param  x  A %set of the same element and allocator types.\n+       *  @param  __x  A %set of the same element and allocator types.\n        *\n-       *  This exchanges the elements between two sets in constant time.\n-       *  (It is only swapping a pointer, an integer, and an instance of\n-       *  the @c Compare type (which itself is often stateless and empty), so it\n-       *  should be quite fast.)\n-       *  Note that the global std::swap() function is specialized such that\n-       *  std::swap(s1,s2) will feed to this function.\n+       *  This exchanges the elements between two sets in constant\n+       *  time.  (It is only swapping a pointer, an integer, and an\n+       *  instance of the @c Compare type (which itself is often\n+       *  stateless and empty), so it should be quite fast.)  Note\n+       *  that the global std::swap() function is specialized such\n+       *  that std::swap(s1,s2) will feed to this function.\n        */\n       void\n       swap(set& __x)\n@@ -393,7 +395,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n       // insert/erase\n       /**\n        *  @brief Attempts to insert an element into the %set.\n-       *  @param  x  Element to be inserted.\n+       *  @param  __x  Element to be inserted.\n        *  @return  A pair, of which the first element is an iterator that points\n        *           to the possibly inserted element, and the second is a bool\n        *           that is true if the element was actually inserted.\n@@ -424,11 +426,11 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief Attempts to insert an element into the %set.\n-       *  @param  position  An iterator that serves as a hint as to where the\n+       *  @param  __position  An iterator that serves as a hint as to where the\n        *                    element should be inserted.\n-       *  @param  x  Element to be inserted.\n-       *  @return  An iterator that points to the element with key of @a x (may\n-       *           or may not be the element passed in).\n+       *  @param  __x  Element to be inserted.\n+       *  @return An iterator that points to the element with key of\n+       *           @a __x (may or may not be the element passed in).\n        *\n        *  This function is not concerned about whether the insertion took place,\n        *  and thus does not return a boolean like the single-argument insert()\n@@ -454,9 +456,9 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n       /**\n        *  @brief A template function that attempts to insert a range\n        *  of elements.\n-       *  @param  first  Iterator pointing to the start of the range to be\n-       *                 inserted.\n-       *  @param  last  Iterator pointing to the end of the range.\n+       *  @param  __first  Iterator pointing to the start of the range to be\n+       *                   inserted.\n+       *  @param  __last  Iterator pointing to the end of the range.\n        *\n        *  Complexity similar to that of the range constructor.\n        */\n@@ -468,8 +470,8 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n #ifdef __GXX_EXPERIMENTAL_CXX0X__\n       /**\n        *  @brief Attempts to insert a list of elements into the %set.\n-       *  @param  list  A std::initializer_list<value_type> of elements\n-       *                to be inserted.\n+       *  @param  __l  A std::initializer_list<value_type> of elements\n+       *               to be inserted.\n        *\n        *  Complexity similar to that of the range constructor.\n        */\n@@ -483,9 +485,9 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n       // DR 130. Associative erase should return an iterator.\n       /**\n        *  @brief Erases an element from a %set.\n-       *  @param  position  An iterator pointing to the element to be erased.\n+       *  @param  __position  An iterator pointing to the element to be erased.\n        *  @return An iterator pointing to the element immediately following\n-       *          @a position prior to the element being erased. If no such\n+       *          @a __position prior to the element being erased. If no such\n        *          element exists, end() is returned.\n        *\n        *  This function erases an element, pointed to by the given iterator,\n@@ -515,7 +517,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief Erases elements according to the provided key.\n-       *  @param  x  Key of element to be erased.\n+       *  @param  __x  Key of element to be erased.\n        *  @return  The number of elements erased.\n        *\n        *  This function erases all the elements located by the given key from\n@@ -532,11 +534,13 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n       // _GLIBCXX_RESOLVE_LIB_DEFECTS\n       // DR 130. Associative erase should return an iterator.\n       /**\n-       *  @brief Erases a [first,last) range of elements from a %set.\n-       *  @param  first  Iterator pointing to the start of the range to be\n+       *  @brief Erases a [__first,__last) range of elements from a %set.\n+       *  @param  __first  Iterator pointing to the start of the range to be\n        *                 erased.\n-       *  @param  last  Iterator pointing to the end of the range to be erased.\n-       *  @return The iterator @a last.\n+\n+       *  @param __last Iterator pointing to the end of the range to\n+       *  be erased.\n+       *  @return The iterator @a __last.\n        *\n        *  This function erases a sequence of elements from a %set.\n        *  Note that this function only erases the element, and that if\n@@ -549,9 +553,10 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n #else\n       /**\n        *  @brief Erases a [first,last) range of elements from a %set.\n-       *  @param  first  Iterator pointing to the start of the range to be\n+       *  @param  __first  Iterator pointing to the start of the range to be\n        *                 erased.\n-       *  @param  last  Iterator pointing to the end of the range to be erased.\n+       *  @param __last Iterator pointing to the end of the range to\n+       *  be erased.\n        *\n        *  This function erases a sequence of elements from a %set.\n        *  Note that this function only erases the element, and that if\n@@ -577,7 +582,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief  Finds the number of elements.\n-       *  @param  x  Element to located.\n+       *  @param  __x  Element to located.\n        *  @return  Number of elements with specified key.\n        *\n        *  This function only makes sense for multisets; for set the result will\n@@ -592,7 +597,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n       //@{\n       /**\n        *  @brief Tries to locate an element in a %set.\n-       *  @param  x  Element to be located.\n+       *  @param  __x  Element to be located.\n        *  @return  Iterator pointing to sought-after element, or end() if not\n        *           found.\n        *\n@@ -613,7 +618,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n       //@{\n       /**\n        *  @brief Finds the beginning of a subsequence matching given key.\n-       *  @param  x  Key to be located.\n+       *  @param  __x  Key to be located.\n        *  @return  Iterator pointing to first element equal to or greater\n        *           than key, or end().\n        *\n@@ -634,7 +639,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n       //@{\n       /**\n        *  @brief Finds the end of a subsequence matching given key.\n-       *  @param  x  Key to be located.\n+       *  @param  __x  Key to be located.\n        *  @return Iterator pointing to the first element\n        *          greater than key, or end().\n        */\n@@ -650,7 +655,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n       //@{\n       /**\n        *  @brief Finds a subsequence matching given key.\n-       *  @param  x  Key to be located.\n+       *  @param  __x  Key to be located.\n        *  @return  Pair of iterators that possibly points to the subsequence\n        *           matching given key.\n        *\n@@ -684,8 +689,8 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n   /**\n    *  @brief  Set equality comparison.\n-   *  @param  x  A %set.\n-   *  @param  y  A %set of the same type as @a x.\n+   *  @param  __x  A %set.\n+   *  @param  __y  A %set of the same type as @a x.\n    *  @return  True iff the size and elements of the sets are equal.\n    *\n    *  This is an equivalence relation.  It is linear in the size of the sets.\n@@ -700,9 +705,9 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n   /**\n    *  @brief  Set ordering relation.\n-   *  @param  x  A %set.\n-   *  @param  y  A %set of the same type as @a x.\n-   *  @return  True iff @a x is lexicographically less than @a y.\n+   *  @param  __x  A %set.\n+   *  @param  __y  A %set of the same type as @a x.\n+   *  @return  True iff @a __x is lexicographically less than @a __y.\n    *\n    *  This is a total ordering relation.  It is linear in the size of the\n    *  maps.  The elements must be comparable with @c <."}, {"sha": "6b0f065966bd7b772f94d4051204464aab0ed0d5", "filename": "libstdc++-v3/include/bits/stl_stack.h", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_stack.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_stack.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_stack.h?ref=93c66bc68a2554cbb2ba11f90944314af378d16b", "patch": "@@ -174,7 +174,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       /**\n        *  @brief  Add data to the top of the %stack.\n-       *  @param  x  Data to be added.\n+       *  @param  __x  Data to be added.\n        *\n        *  This is a typical %stack operation.  The function creates an\n        *  element at the top of the %stack and assigns the given data\n@@ -227,8 +227,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n   /**\n    *  @brief  Stack equality comparison.\n-   *  @param  x  A %stack.\n-   *  @param  y  A %stack of the same type as @a x.\n+   *  @param  __x  A %stack.\n+   *  @param  __y  A %stack of the same type as @a __x.\n    *  @return  True iff the size and elements of the stacks are equal.\n    *\n    *  This is an equivalence relation.  Complexity and semantics\n@@ -244,9 +244,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n   /**\n    *  @brief  Stack ordering relation.\n-   *  @param  x  A %stack.\n-   *  @param  y  A %stack of the same type as @a x.\n-   *  @return  True iff @a x is lexicographically less than @a y.\n+   *  @param  __x  A %stack.\n+   *  @param  __y  A %stack of the same type as @a x.\n+   *  @return  True iff @a x is lexicographically less than @a __y.\n    *\n    *  This is an total ordering relation.  Complexity and semantics\n    *  depend on the underlying sequence type, but the expected rules"}, {"sha": "b165273a3ab1163383960b1e9c63b23b22b6005e", "filename": "libstdc++-v3/include/bits/stl_tempbuf.h", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_tempbuf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_tempbuf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_tempbuf.h?ref=93c66bc68a2554cbb2ba11f90944314af378d16b", "patch": "@@ -67,15 +67,15 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n   /**\n    *  @brief Allocates a temporary buffer.\n-   *  @param  len  The number of objects of type Tp.\n+   *  @param  __len  The number of objects of type Tp.\n    *  @return See full description.\n    *\n    *  Reinventing the wheel, but this time with prettier spokes!\n    *\n-   *  This function tries to obtain storage for @c len adjacent Tp\n+   *  This function tries to obtain storage for @c __len adjacent Tp\n    *  objects.  The objects themselves are not constructed, of course.\n    *  A pair<> is returned containing <em>the buffer s address and\n-   *  capacity (in the units of sizeof(Tp)), or a pair of 0 values if\n+   *  capacity (in the units of sizeof(_Tp)), or a pair of 0 values if\n    *  no storage can be obtained.</em>  Note that the capacity obtained\n    *  may be less than that requested if the memory is unavailable;\n    *  you should compare len with the .second return value.\n@@ -104,10 +104,10 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n   /**\n    *  @brief The companion to get_temporary_buffer().\n-   *  @param  p  A buffer previously allocated by get_temporary_buffer.\n+   *  @param  __p  A buffer previously allocated by get_temporary_buffer.\n    *  @return   None.\n    *\n-   *  Frees the memory pointed to by p.\n+   *  Frees the memory pointed to by __p.\n    */\n   template<typename _Tp>\n     inline void"}, {"sha": "0d20335d214b6efc2a134791fc33bf01f4df1736", "filename": "libstdc++-v3/include/bits/stl_uninitialized.h", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_uninitialized.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_uninitialized.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_uninitialized.h?ref=93c66bc68a2554cbb2ba11f90944314af378d16b", "patch": "@@ -97,10 +97,10 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n   /**\n    *  @brief Copies the range [first,last) into result.\n-   *  @param  first  An input iterator.\n-   *  @param  last   An input iterator.\n-   *  @param  result An output iterator.\n-   *  @return   result + (first - last)\n+   *  @param  __first  An input iterator.\n+   *  @param  __last   An input iterator.\n+   *  @param  __result An output iterator.\n+   *  @return   __result + (__first - __last)\n    *\n    *  Like copy(), but does not require an initialized output range.\n   */\n@@ -154,9 +154,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n   /**\n    *  @brief Copies the value x into the range [first,last).\n-   *  @param  first  An input iterator.\n-   *  @param  last   An input iterator.\n-   *  @param  x      The source value.\n+   *  @param  __first  An input iterator.\n+   *  @param  __last   An input iterator.\n+   *  @param  __x      The source value.\n    *  @return   Nothing.\n    *\n    *  Like fill(), but does not require an initialized output range.\n@@ -208,9 +208,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n   /**\n    *  @brief Copies the value x into the range [first,first+n).\n-   *  @param  first  An input iterator.\n-   *  @param  n      The number of copies to make.\n-   *  @param  x      The source value.\n+   *  @param  __first  An input iterator.\n+   *  @param  __n      The number of copies to make.\n+   *  @param  __x      The source value.\n    *  @return   Nothing.\n    *\n    *  Like fill_n(), but does not require an initialized output range.\n@@ -637,10 +637,10 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n   /**\n    *  @brief Copies the range [first,first+n) into result.\n-   *  @param  first  An input iterator.\n-   *  @param  n      The number of elements to copy.\n-   *  @param  result An output iterator.\n-   *  @return  result + n\n+   *  @param  __first  An input iterator.\n+   *  @param  __n      The number of elements to copy.\n+   *  @param  __result An output iterator.\n+   *  @return  __result + __n\n    *\n    *  Like copy_n(), but does not require an initialized output range.\n   */"}, {"sha": "40664209fabaaf37e0b4f4348386e78dd3aa70ac", "filename": "libstdc++-v3/include/bits/stl_vector.h", "status": "modified", "additions": 81, "deletions": 81, "changes": 162, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_vector.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_vector.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_vector.h?ref=93c66bc68a2554cbb2ba11f90944314af378d16b", "patch": "@@ -245,7 +245,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief  Creates a %vector with no elements.\n-       *  @param  a  An allocator object.\n+       *  @param  __a  An allocator object.\n        */\n       explicit\n       vector(const allocator_type& __a)\n@@ -254,9 +254,9 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n #ifdef __GXX_EXPERIMENTAL_CXX0X__\n       /**\n        *  @brief  Creates a %vector with default constructed elements.\n-       *  @param  n  The number of elements to initially create.\n+       *  @param  __n  The number of elements to initially create.\n        *\n-       *  This constructor fills the %vector with @a n default\n+       *  This constructor fills the %vector with @a __n default\n        *  constructed elements.\n        */\n       explicit\n@@ -266,11 +266,11 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief  Creates a %vector with copies of an exemplar element.\n-       *  @param  n  The number of elements to initially create.\n-       *  @param  value  An element to copy.\n-       *  @param  a  An allocator.\n+       *  @param  __n  The number of elements to initially create.\n+       *  @param  __value  An element to copy.\n+       *  @param  __a  An allocator.\n        *\n-       *  This constructor fills the %vector with @a n copies of @a value.\n+       *  This constructor fills the %vector with @a __n copies of @a __value.\n        */\n       vector(size_type __n, const value_type& __value,\n \t     const allocator_type& __a = allocator_type())\n@@ -279,11 +279,11 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n #else\n       /**\n        *  @brief  Creates a %vector with copies of an exemplar element.\n-       *  @param  n  The number of elements to initially create.\n-       *  @param  value  An element to copy.\n-       *  @param  a  An allocator.\n+       *  @param  __n  The number of elements to initially create.\n+       *  @param  __value  An element to copy.\n+       *  @param  __a  An allocator.\n        *\n-       *  This constructor fills the %vector with @a n copies of @a value.\n+       *  This constructor fills the %vector with @a __n copies of @a __value.\n        */\n       explicit\n       vector(size_type __n, const value_type& __value = value_type(),\n@@ -294,12 +294,12 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief  %Vector copy constructor.\n-       *  @param  x  A %vector of identical element and allocator types.\n+       *  @param  __x  A %vector of identical element and allocator types.\n        *\n        *  The newly-created %vector uses a copy of the allocation\n-       *  object used by @a x.  All the elements of @a x are copied,\n+       *  object used by @a __x.  All the elements of @a __x are copied,\n        *  but any extra memory in\n-       *  @a x (for fast expansion) will not be copied.\n+       *  @a __x (for fast expansion) will not be copied.\n        */\n       vector(const vector& __x)\n       : _Base(__x.size(),\n@@ -313,10 +313,10 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n #ifdef __GXX_EXPERIMENTAL_CXX0X__\n       /**\n        *  @brief  %Vector move constructor.\n-       *  @param  x  A %vector of identical element and allocator types.\n+       *  @param  __x  A %vector of identical element and allocator types.\n        *\n-       *  The newly-created %vector contains the exact contents of @a x.\n-       *  The contents of @a x are a valid, but unspecified %vector.\n+       *  The newly-created %vector contains the exact contents of @a __x.\n+       *  The contents of @a __x are a valid, but unspecified %vector.\n        */\n       vector(vector&& __x) noexcept\n       : _Base(std::move(__x)) { }\n@@ -346,14 +346,14 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief  Builds a %vector from an initializer list.\n-       *  @param  l  An initializer_list.\n-       *  @param  a  An allocator.\n+       *  @param  __l  An initializer_list.\n+       *  @param  __a  An allocator.\n        *\n        *  Create a %vector consisting of copies of the elements in the\n-       *  initializer_list @a l.\n+       *  initializer_list @a __l.\n        *\n        *  This will call the element type's copy constructor N times\n-       *  (where N is @a l.size()) and do no memory reallocation.\n+       *  (where N is @a __l.size()) and do no memory reallocation.\n        */\n       vector(initializer_list<value_type> __l,\n \t     const allocator_type& __a = allocator_type())\n@@ -366,9 +366,9 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief  Builds a %vector from a range.\n-       *  @param  first  An input iterator.\n-       *  @param  last  An input iterator.\n-       *  @param  a  An allocator.\n+       *  @param  __first  An input iterator.\n+       *  @param  __last  An input iterator.\n+       *  @param  __a  An allocator.\n        *\n        *  Create a %vector consisting of copies of the elements from\n        *  [first,last).\n@@ -402,10 +402,10 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief  %Vector assignment operator.\n-       *  @param  x  A %vector of identical element and allocator types.\n+       *  @param  __x  A %vector of identical element and allocator types.\n        *\n-       *  All the elements of @a x are copied, but any extra memory in\n-       *  @a x (for fast expansion) will not be copied.  Unlike the\n+       *  All the elements of @a __x are copied, but any extra memory in\n+       *  @a __x (for fast expansion) will not be copied.  Unlike the\n        *  copy constructor, the allocator object is not copied.\n        */\n       vector&\n@@ -414,10 +414,10 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n #ifdef __GXX_EXPERIMENTAL_CXX0X__\n       /**\n        *  @brief  %Vector move assignment operator.\n-       *  @param  x  A %vector of identical element and allocator types.\n+       *  @param  __x  A %vector of identical element and allocator types.\n        *\n-       *  The contents of @a x are moved into this %vector (without copying).\n-       *  @a x is a valid, but unspecified %vector.\n+       *  The contents of @a __x are moved into this %vector (without copying).\n+       *  @a __x is a valid, but unspecified %vector.\n        */\n       vector&\n       operator=(vector&& __x) noexcept(_Alloc_traits::_S_nothrow_move())\n@@ -451,10 +451,10 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief  %Vector list assignment operator.\n-       *  @param  l  An initializer_list.\n+       *  @param  __l  An initializer_list.\n        *\n        *  This function fills a %vector with copies of the elements in the\n-       *  initializer list @a l.\n+       *  initializer list @a __l.\n        *\n        *  Note that the assignment completely changes the %vector and\n        *  that the resulting %vector's size is the same as the number\n@@ -470,10 +470,10 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief  Assigns a given value to a %vector.\n-       *  @param  n  Number of elements to be assigned.\n-       *  @param  val  Value to be assigned.\n+       *  @param  __n  Number of elements to be assigned.\n+       *  @param  __val  Value to be assigned.\n        *\n-       *  This function fills a %vector with @a n copies of the given\n+       *  This function fills a %vector with @a __n copies of the given\n        *  value.  Note that the assignment completely changes the\n        *  %vector and that the resulting %vector's size is the same as\n        *  the number of elements assigned.  Old data may be lost.\n@@ -484,11 +484,11 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief  Assigns a range to a %vector.\n-       *  @param  first  An input iterator.\n-       *  @param  last   An input iterator.\n+       *  @param  __first  An input iterator.\n+       *  @param  __last   An input iterator.\n        *\n        *  This function fills a %vector with copies of the elements in the\n-       *  range [first,last).\n+       *  range [__first,__last).\n        *\n        *  Note that the assignment completely changes the %vector and\n        *  that the resulting %vector's size is the same as the number\n@@ -506,10 +506,10 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n #ifdef __GXX_EXPERIMENTAL_CXX0X__\n       /**\n        *  @brief  Assigns an initializer list to a %vector.\n-       *  @param  l  An initializer_list.\n+       *  @param  __l  An initializer_list.\n        *\n        *  This function fills a %vector with copies of the elements in the\n-       *  initializer list @a l.\n+       *  initializer list @a __l.\n        *\n        *  Note that the assignment completely changes the %vector and\n        *  that the resulting %vector's size is the same as the number\n@@ -648,7 +648,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n #ifdef __GXX_EXPERIMENTAL_CXX0X__\n       /**\n        *  @brief  Resizes the %vector to the specified number of elements.\n-       *  @param  new_size  Number of elements the %vector should contain.\n+       *  @param  __new_size  Number of elements the %vector should contain.\n        *\n        *  This function will %resize the %vector to the specified\n        *  number of elements.  If the number is smaller than the\n@@ -666,8 +666,8 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief  Resizes the %vector to the specified number of elements.\n-       *  @param  new_size  Number of elements the %vector should contain.\n-       *  @param  x  Data with which new elements should be populated.\n+       *  @param  __new_size  Number of elements the %vector should contain.\n+       *  @param  __x  Data with which new elements should be populated.\n        *\n        *  This function will %resize the %vector to the specified\n        *  number of elements.  If the number is smaller than the\n@@ -686,8 +686,8 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n #else\n       /**\n        *  @brief  Resizes the %vector to the specified number of elements.\n-       *  @param  new_size  Number of elements the %vector should contain.\n-       *  @param  x  Data with which new elements should be populated.\n+       *  @param  __new_size  Number of elements the %vector should contain.\n+       *  @param  __x  Data with which new elements should be populated.\n        *\n        *  This function will %resize the %vector to the specified\n        *  number of elements.  If the number is smaller than the\n@@ -732,7 +732,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n       /**\n        *  @brief  Attempt to preallocate enough memory for specified number of\n        *          elements.\n-       *  @param  n  Number of elements required.\n+       *  @param  __n  Number of elements required.\n        *  @throw  std::length_error  If @a n exceeds @c max_size().\n        *\n        *  This function attempts to reserve enough memory for the\n@@ -752,7 +752,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n       // element access\n       /**\n        *  @brief  Subscript access to the data contained in the %vector.\n-       *  @param n The index of the element for which data should be\n+       *  @param __n The index of the element for which data should be\n        *  accessed.\n        *  @return  Read/write reference to data.\n        *\n@@ -767,7 +767,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief  Subscript access to the data contained in the %vector.\n-       *  @param n The index of the element for which data should be\n+       *  @param __n The index of the element for which data should be\n        *  accessed.\n        *  @return  Read-only (constant) reference to data.\n        *\n@@ -792,10 +792,10 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n     public:\n       /**\n        *  @brief  Provides access to the data contained in the %vector.\n-       *  @param n The index of the element for which data should be\n+       *  @param __n The index of the element for which data should be\n        *  accessed.\n        *  @return  Read/write reference to data.\n-       *  @throw  std::out_of_range  If @a n is an invalid index.\n+       *  @throw  std::out_of_range  If @a __n is an invalid index.\n        *\n        *  This function provides for safer data access.  The parameter\n        *  is first checked that it is in the range of the vector.  The\n@@ -810,10 +810,10 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief  Provides access to the data contained in the %vector.\n-       *  @param n The index of the element for which data should be\n+       *  @param __n The index of the element for which data should be\n        *  accessed.\n        *  @return  Read-only (constant) reference to data.\n-       *  @throw  std::out_of_range  If @a n is an invalid index.\n+       *  @throw  std::out_of_range  If @a __n is an invalid index.\n        *\n        *  This function provides for safer data access.  The parameter\n        *  is first checked that it is in the range of the vector.  The\n@@ -884,7 +884,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n       // [23.2.4.3] modifiers\n       /**\n        *  @brief  Add data to the end of the %vector.\n-       *  @param  x  Data to be added.\n+       *  @param  __x  Data to be added.\n        *\n        *  This is a typical stack operation.  The function creates an\n        *  element at the end of the %vector and assigns the given data\n@@ -938,8 +938,8 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n #ifdef __GXX_EXPERIMENTAL_CXX0X__\n       /**\n        *  @brief  Inserts an object in %vector before specified iterator.\n-       *  @param  position  An iterator into the %vector.\n-       *  @param  args  Arguments.\n+       *  @param  __position  An iterator into the %vector.\n+       *  @param  __args  Arguments.\n        *  @return  An iterator that points to the inserted data.\n        *\n        *  This function will insert an object of type T constructed\n@@ -955,8 +955,8 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief  Inserts given value into %vector before specified iterator.\n-       *  @param  position  An iterator into the %vector.\n-       *  @param  x  Data to be inserted.\n+       *  @param  __position  An iterator into the %vector.\n+       *  @param  __x  Data to be inserted.\n        *  @return  An iterator that points to the inserted data.\n        *\n        *  This function will insert a copy of the given value before\n@@ -970,8 +970,8 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n #ifdef __GXX_EXPERIMENTAL_CXX0X__\n       /**\n        *  @brief  Inserts given rvalue into %vector before specified iterator.\n-       *  @param  position  An iterator into the %vector.\n-       *  @param  x  Data to be inserted.\n+       *  @param  __position  An iterator into the %vector.\n+       *  @param  __x  Data to be inserted.\n        *  @return  An iterator that points to the inserted data.\n        *\n        *  This function will insert a copy of the given rvalue before\n@@ -985,8 +985,8 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief  Inserts an initializer_list into the %vector.\n-       *  @param  position  An iterator into the %vector.\n-       *  @param  l  An initializer_list.\n+       *  @param  __position  An iterator into the %vector.\n+       *  @param  __l  An initializer_list.\n        *\n        *  This function will insert copies of the data in the \n        *  initializer_list @a l into the %vector before the location\n@@ -1003,9 +1003,9 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief  Inserts a number of copies of given data into the %vector.\n-       *  @param  position  An iterator into the %vector.\n-       *  @param  n  Number of elements to be inserted.\n-       *  @param  x  Data to be inserted.\n+       *  @param  __position  An iterator into the %vector.\n+       *  @param  __n  Number of elements to be inserted.\n+       *  @param  __x  Data to be inserted.\n        *\n        *  This function will insert a specified number of copies of\n        *  the given data before the location specified by @a position.\n@@ -1020,12 +1020,12 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief  Inserts a range into the %vector.\n-       *  @param  position  An iterator into the %vector.\n-       *  @param  first  An input iterator.\n-       *  @param  last   An input iterator.\n+       *  @param  __position  An iterator into the %vector.\n+       *  @param  __first  An input iterator.\n+       *  @param  __last   An input iterator.\n        *\n        *  This function will insert copies of the data in the range\n-       *  [first,last) into the %vector before the location specified\n+       *  [__first,__last) into the %vector before the location specified\n        *  by @a pos.\n        *\n        *  Note that this kind of operation could be expensive for a\n@@ -1044,7 +1044,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief  Remove element at given position.\n-       *  @param  position  Iterator pointing to element to be erased.\n+       *  @param  __position  Iterator pointing to element to be erased.\n        *  @return  An iterator pointing to the next element (or end()).\n        *\n        *  This function will erase the element at the given position and thus\n@@ -1062,14 +1062,14 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief  Remove a range of elements.\n-       *  @param  first  Iterator pointing to the first element to be erased.\n-       *  @param  last  Iterator pointing to one past the last element to be\n-       *                erased.\n-       *  @return  An iterator pointing to the element pointed to by @a last\n+       *  @param  __first  Iterator pointing to the first element to be erased.\n+       *  @param  __last  Iterator pointing to one past the last element to be\n+       *                  erased.\n+       *  @return  An iterator pointing to the element pointed to by @a __last\n        *           prior to erasing (or end()).\n        *\n-       *  This function will erase the elements in the range [first,last) and\n-       *  shorten the %vector accordingly.\n+       *  This function will erase the elements in the range\n+       *  [__first,__last) and shorten the %vector accordingly.\n        *\n        *  Note This operation could be expensive and if it is\n        *  frequently used the user should consider using std::list.\n@@ -1083,7 +1083,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief  Swaps data with another %vector.\n-       *  @param  x  A %vector of the same element and allocator types.\n+       *  @param  __x  A %vector of the same element and allocator types.\n        *\n        *  This exchanges the elements between two vectors in constant time.\n        *  (Three pointers, so it should be quite fast.)\n@@ -1339,8 +1339,8 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n   /**\n    *  @brief  Vector equality comparison.\n-   *  @param  x  A %vector.\n-   *  @param  y  A %vector of the same type as @a x.\n+   *  @param  __x  A %vector.\n+   *  @param  __y  A %vector of the same type as @a __x.\n    *  @return  True iff the size and elements of the vectors are equal.\n    *\n    *  This is an equivalence relation.  It is linear in the size of the\n@@ -1355,9 +1355,9 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n   /**\n    *  @brief  Vector ordering relation.\n-   *  @param  x  A %vector.\n-   *  @param  y  A %vector of the same type as @a x.\n-   *  @return  True iff @a x is lexicographically less than @a y.\n+   *  @param  __x  A %vector.\n+   *  @param  __y  A %vector of the same type as @a __x.\n+   *  @return  True iff @a __x is lexicographically less than @a __y.\n    *\n    *  This is a total ordering relation.  It is linear in the size of the\n    *  vectors.  The elements must be comparable with @c <."}, {"sha": "60949a8b37c9f43d56aa4b649f44f9c3b5a8cb87", "filename": "libstdc++-v3/include/bits/stream_iterator.h", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstream_iterator.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstream_iterator.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstream_iterator.h?ref=93c66bc68a2554cbb2ba11f90944314af378d16b", "patch": "@@ -145,9 +145,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n    *  the only type written by this iterator and there must be an\n    *  operator<<(Tp) defined.\n    *\n-   *  @param  Tp  The type to write to the ostream.\n-   *  @param  CharT  The ostream char_type.\n-   *  @param  Traits  The ostream char_traits.\n+   *  @tparam  _Tp  The type to write to the ostream.\n+   *  @tparam  _CharT  The ostream char_type.\n+   *  @tparam  _Traits  The ostream char_traits.\n   */\n   template<typename _Tp, typename _CharT = char,\n            typename _Traits = char_traits<_CharT> >\n@@ -177,8 +177,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *  written to the stream.  The delimiter is not copied, and thus must\n        *  not be destroyed while this iterator is in use.\n        *\n-       *  @param  s  Underlying ostream to write to.\n-       *  @param  c  CharT delimiter string to insert.\n+       *  @param  __s  Underlying ostream to write to.\n+       *  @param  __c  CharT delimiter string to insert.\n       */\n       ostream_iterator(ostream_type& __s, const _CharT* __c)\n       : _M_stream(&__s), _M_string(__c)  { }"}, {"sha": "47af968fe9225136313e95caa973234bdbf1b303", "filename": "libstdc++-v3/include/debug/safe_local_iterator.tcc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fsafe_local_iterator.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fsafe_local_iterator.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fsafe_local_iterator.tcc?ref=93c66bc68a2554cbb2ba11f90944314af378d16b", "patch": "@@ -22,7 +22,7 @@\n // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n // <http://www.gnu.org/licenses/>.\n \n-/** @file debug/safe_locale_iterator.tcc\n+/** @file debug/safe_local_iterator.tcc\n  *  This file is a GNU debug extension to the Standard C++ Library.\n  */\n "}, {"sha": "8693f72487493da526a46f9fa83bdd5c2c76e46d", "filename": "libstdc++-v3/include/debug/safe_sequence.h", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fsafe_sequence.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fsafe_sequence.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fsafe_sequence.h?ref=93c66bc68a2554cbb2ba11f90944314af378d16b", "patch": "@@ -104,7 +104,7 @@ namespace __gnu_debug\n    * may only be used by deriving from it and passing the name of the\n    * derived class as its template parameter via the curiously\n    * recurring template pattern. The derived class must have @c\n-   * iterator and @const_iterator types that are instantiations of\n+   * iterator and @c const_iterator types that are instantiations of\n    * class template _Safe_iterator for this sequence. Iterators will\n    * then be tracked automatically.\n    */\n@@ -113,16 +113,16 @@ namespace __gnu_debug\n     {\n     public:\n       /** Invalidates all iterators @c x that reference this sequence,\n-\t  are not singular, and for which @c pred(x) returns @c\n-\t  true. @c pred will be invoked with the normal iterators nested\n+\t  are not singular, and for which @c __pred(x) returns @c\n+\t  true. @c __pred will be invoked with the normal iterators nested\n \t  in the safe ones. */\n       template<typename _Predicate>\n         void\n         _M_invalidate_if(_Predicate __pred);\n \n       /** Transfers all iterators @c x that reference @c from sequence,\n-\t  are not singular, and for which @c pred(x) returns @c\n-\t  true. @c pred will be invoked with the normal iterators nested\n+\t  are not singular, and for which @c __pred(x) returns @c\n+\t  true. @c __pred will be invoked with the normal iterators nested\n \t  in the safe ones. */\n       template<typename _Predicate>\n         void"}, {"sha": "f88e6563216f37b54bc9a17a0e6f5923399484cd", "filename": "libstdc++-v3/include/debug/safe_unordered_base.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fsafe_unordered_base.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fsafe_unordered_base.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fsafe_unordered_base.h?ref=93c66bc68a2554cbb2ba11f90944314af378d16b", "patch": "@@ -55,7 +55,7 @@ namespace __gnu_debug\n     { }\n \n     /** Initialize the iterator to reference the container pointed to\n-     *  by @p__seq. @p __constant is true when we are initializing a\n+     *  by @p __seq. @p __constant is true when we are initializing a\n      *  constant local iterator, and false if it is a mutable local iterator.\n      *  Note that @p __seq may be NULL, in which case the iterator will be\n      *  singular. Otherwise, the iterator will reference @p __seq and"}, {"sha": "e65650a0d7e4ef005f91509536fd1b333ba60d72", "filename": "libstdc++-v3/include/debug/safe_unordered_container.h", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fsafe_unordered_container.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fsafe_unordered_container.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fsafe_unordered_container.h?ref=93c66bc68a2554cbb2ba11f90944314af378d16b", "patch": "@@ -48,9 +48,9 @@ namespace __gnu_debug\n    * template may only be used by deriving from it and passing the name\n    * of the derived class as its template parameter via the curiously\n    * recurring template pattern. The derived class must have @c\n-   * iterator and @const_iterator types that are instantiations of\n+   * iterator and @c const_iterator types that are instantiations of\n    * class template _Safe_iterator for this container and @c local_iterator\n-   * and @const_local_iterator types that are instantiations of class\n+   * and @c const_local_iterator types that are instantiations of class\n    * template _Safe_local_iterator for this container. Iterators will\n    * then be tracked automatically.\n    */\n@@ -59,16 +59,16 @@ namespace __gnu_debug\n     {\n     public:\n       /** Invalidates all iterators @c x that reference this container,\n-\t  are not singular, and for which @c pred(x) returns @c\n-\t  true. @c pred will be invoked with the normal iterators nested\n+\t  are not singular, and for which @c __pred(x) returns @c\n+\t  true. @c __pred will be invoked with the normal iterators nested\n \t  in the safe ones. */\n       template<typename _Predicate>\n \tvoid\n \t_M_invalidate_if(_Predicate __pred);\n \n       /** Invalidates all local iterators @c x that reference this container,\n-\t  are not singular, and for which @c pred(x) returns @c\n-\t  true. @c pred will be invoked with the normal ilocal iterators\n+\t  are not singular, and for which @c __pred(x) returns @c\n+\t  true. @c __pred will be invoked with the normal ilocal iterators\n \t  nested in the safe ones. */\n       template<typename _Predicate>\n \tvoid"}, {"sha": "e9a48dbd0cba706bff2cccb9732f22f94740fed1", "filename": "libstdc++-v3/include/ext/algorithm", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Finclude%2Fext%2Falgorithm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Finclude%2Fext%2Falgorithm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Falgorithm?ref=93c66bc68a2554cbb2ba11f90944314af378d16b", "patch": "@@ -105,9 +105,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n   /**\n    *  @brief Copies the range [first,first+count) into [result,result+count).\n-   *  @param  first  An input iterator.\n-   *  @param  count  The number of elements to copy.\n-   *  @param  result An output iterator.\n+   *  @param  __first  An input iterator.\n+   *  @param  __count  The number of elements to copy.\n+   *  @param  __result An output iterator.\n    *  @return   A std::pair composed of first+count and result+count.\n    *\n    *  This is an SGI extension.\n@@ -185,10 +185,10 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n   /**\n    *  @brief @c memcmp on steroids.\n-   *  @param  first1  An input iterator.\n-   *  @param  last1   An input iterator.\n-   *  @param  first2  An input iterator.\n-   *  @param  last2   An input iterator.\n+   *  @param  __first1  An input iterator.\n+   *  @param  __last1   An input iterator.\n+   *  @param  __first2  An input iterator.\n+   *  @param  __last2   An input iterator.\n    *  @return   An int, as with @c memcmp.\n    *\n    *  The return value will be less than zero if the first range is\n@@ -533,9 +533,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n   /**\n    *  @brief Find the median of three values.\n-   *  @param  a  A value.\n-   *  @param  b  A value.\n-   *  @param  c  A value.\n+   *  @param  __a  A value.\n+   *  @param  __b  A value.\n+   *  @param  __c  A value.\n    *  @return One of @p a, @p b or @p c.\n    *\n    *  If @c {l,m,n} is some convolution of @p {a,b,c} such that @c l<=m<=n\n@@ -566,10 +566,10 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n   /**\n    *  @brief Find the median of three values using a predicate for comparison.\n-   *  @param  a     A value.\n-   *  @param  b     A value.\n-   *  @param  c     A value.\n-   *  @param  comp  A binary predicate.\n+   *  @param  __a     A value.\n+   *  @param  __b     A value.\n+   *  @param  __c     A value.\n+   *  @param  __comp  A binary predicate.\n    *  @return One of @p a, @p b or @p c.\n    *\n    *  If @c {l,m,n} is some convolution of @p {a,b,c} such that @p comp(l,m)"}, {"sha": "51bdc6ffb91a06f7cdb35e7ee4c7333bcb89fb18", "filename": "libstdc++-v3/include/ext/bitmap_allocator.h", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Finclude%2Fext%2Fbitmap_allocator.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Finclude%2Fext%2Fbitmap_allocator.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fbitmap_allocator.h?ref=93c66bc68a2554cbb2ba11f90944314af378d16b", "patch": "@@ -59,7 +59,6 @@ namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)\n      *  It is to be used only for built-in types or PODs. Notable\n      *  differences are:\n      * \n-     *  @detail\n      *  1. Not all accessor functions are present.\n      *  2. Used ONLY for PODs.\n      *  3. No Allocator template argument. Uses ::operator new() to get\n@@ -560,7 +559,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n      *  @param  __addr The pointer to the memory block to be\n      *  validated.\n      *\n-     *  @detail  Validates the memory block passed to this function and\n+     *  Validates the memory block passed to this function and\n      *  appropriately performs the action of managing the free list of\n      *  blocks by adding this block to the free list or deleting this\n      *  or larger blocks from the free list.\n@@ -757,7 +756,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *\n        *  @throw  std::bad_alloc. If memory can not be allocated.\n        *\n-       *  @detail  Complexity: O(1), but internally depends upon the\n+       *  Complexity: O(1), but internally depends upon the\n        *  complexity of the function free_list::_M_get. The part where\n        *  the bitmap headers are written has complexity: O(X),where X\n        *  is the number of blocks of size sizeof(value_type) within\n@@ -813,7 +812,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *\n        *  @throw  std::bad_alloc. If memory can not be allocated.\n        *\n-       *  @detail  Complexity: Worst case complexity is O(N), but that\n+       *  Complexity: Worst case complexity is O(N), but that\n        *  is hardly ever hit. If and when this particular case is\n        *  encountered, the next few cases are guaranteed to have a\n        *  worst case complexity of O(1)!  That's why this function\n@@ -906,7 +905,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       /** @brief  Deallocates memory that belongs to a single object of\n        *  size sizeof(_Tp).\n        *\n-       *  @detail  Complexity: O(lg(N)), but the worst case is not hit\n+       *  Complexity: O(lg(N)), but the worst case is not hit\n        *  often!  This is because containers usually deallocate memory\n        *  close to each other and this case is handled in O(1) time by\n        *  the deallocate function."}, {"sha": "85b944bf61d253227153620a11def689c3aeea49", "filename": "libstdc++-v3/include/ext/functional", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Finclude%2Fext%2Ffunctional", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Finclude%2Fext%2Ffunctional", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Ffunctional?ref=93c66bc68a2554cbb2ba11f90944314af378d16b", "patch": "@@ -104,7 +104,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n    *\n    *  @c binary_compose is constructed from three functors, @c f, @c g1,\n    *  and @c g2.  Its @c operator() returns @c f(g1(x),g2(x)).  The function\n-   *  @compose2 takes f, g1, and g2, and constructs the @c binary_compose\n+   *  compose2 takes f, g1, and g2, and constructs the @c binary_compose\n    *  instance for you.  For example, if @c f returns an int, then\n    *  \\code\n    *  int answer = (compose2(f,g1,g2))(x);"}, {"sha": "0f2e82e76ba7c4303699e9fd6d8fd7533d50a283", "filename": "libstdc++-v3/include/ext/memory", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Finclude%2Fext%2Fmemory", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Finclude%2Fext%2Fmemory", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fmemory?ref=93c66bc68a2554cbb2ba11f90944314af378d16b", "patch": "@@ -110,10 +110,10 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n   /**\n    *  @brief Copies the range [first,last) into result.\n-   *  @param  first  An input iterator.\n-   *  @param  last   An input iterator.\n-   *  @param  result An output iterator.\n-   *  @return   result + (first - last)\n+   *  @param  __first  An input iterator.\n+   *  @param  __count  Length\n+   *  @param  __result An output iterator.\n+   *  @return   __result + (__first + __count)\n    *  @ingroup SGIextensions\n    *\n    *  Like copy(), but does not require an initialized output range."}, {"sha": "8196fc9e1c14faed9d7693b5af1dabb975f50b4b", "filename": "libstdc++-v3/include/ext/pb_ds/assoc_container.hpp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fassoc_container.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fassoc_container.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpb_ds%2Fassoc_container.hpp?ref=93c66bc68a2554cbb2ba11f90944314af378d16b", "patch": "@@ -708,7 +708,7 @@ namespace __gnu_pbds\n    *  @tparam _ATraits\t  \tElement access traits.\n    *  @tparam Tag \t  \tInstantiating data structure type,\n    *                            see container_tag.\n-   *  @tparam Node_Update \tUpdates nodes,\n+   *  @tparam Node_Update \tUpdates trie nodes,\n    *                            restores invariants when invalidated.\n    *                     XXX See design::tree-based-containers::node invariants.\n    *  @tparam _Alloc \t  \tAllocator type."}, {"sha": "415f87567e059501466305c60bfe1f01a11a0861", "filename": "libstdc++-v3/include/ext/stdio_filebuf.h", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Finclude%2Fext%2Fstdio_filebuf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Finclude%2Fext%2Fstdio_filebuf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fstdio_filebuf.h?ref=93c66bc68a2554cbb2ba11f90944314af378d16b", "patch": "@@ -66,9 +66,10 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       stdio_filebuf() : std::basic_filebuf<_CharT, _Traits>() {}\n \n       /**\n-       *  @param  fd  An open file descriptor.\n-       *  @param  mode  Same meaning as in a standard filebuf.\n-       *  @param  size  Optimal or preferred size of internal buffer, in chars.\n+       *  @param  __fd  An open file descriptor.\n+       *  @param  __mode  Same meaning as in a standard filebuf.\n+       *  @param  __size Optimal or preferred size of internal buffer,\n+       *                 in chars.\n        *\n        *  This constructor associates a file stream buffer with an open\n        *  POSIX file descriptor. The file descriptor will be automatically\n@@ -78,10 +79,10 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t\t    size_t __size = static_cast<size_t>(BUFSIZ));\n \n       /**\n-       *  @param  f  An open @c FILE*.\n-       *  @param  mode  Same meaning as in a standard filebuf.\n-       *  @param  size  Optimal or preferred size of internal buffer, in chars.\n-       *                Defaults to system's @c BUFSIZ.\n+       *  @param  __f  An open @c FILE*.\n+       *  @param  __mode  Same meaning as in a standard filebuf.\n+       *  @param  __size Optimal or preferred size of internal buffer,\n+       *                 in chars.  Defaults to system's @c BUFSIZ.\n        *\n        *  This constructor associates a file stream buffer with an open\n        *  C @c FILE*.  The @c FILE* will not be automatically closed when the"}, {"sha": "8e825e055d09ba3bf3831d55b66522f89bcda023", "filename": "libstdc++-v3/include/ext/vstring.h", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Finclude%2Fext%2Fvstring.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Finclude%2Fext%2Fvstring.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fvstring.h?ref=93c66bc68a2554cbb2ba11f90944314af378d16b", "patch": "@@ -141,7 +141,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       // NB: per LWG issue 42, semantics different from IS:\n       /**\n-       *  @brief  Construct string with copy of value of @a str.\n+       *  @brief  Construct string with copy of value of @a __str.\n        *  @param  __str  Source string.\n        */\n       __versa_string(const __versa_string& __str)\n@@ -153,7 +153,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *  @param  __str  Source string.\n        *\n        *  The newly-constructed %string contains the exact contents of\n-       *  @a str.  The contents of @a str are a valid, but unspecified\n+       *  @a __str.  The contents of @a __str are a valid, but unspecified\n        *  string.\n        */\n       __versa_string(__versa_string&& __str) noexcept\n@@ -2022,26 +2022,26 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       /**\n        *  @brief  Compare substring against a character array.\n-       *  @param __pos1  Index of first character of substring.\n+       *  @param __pos  Index of first character of substring.\n        *  @param __n1  Number of characters in substring.\n        *  @param __s  character array to compare against.\n        *  @param __n2  Number of characters of s.\n        *  @return  Integer < 0, 0, or > 0.\n        *\n        *  Form the substring of this string from the @a __n1\n-       *  characters starting at @a __pos1.  Form a string from the\n+       *  characters starting at @a __pos.  Form a string from the\n        *  first @a __n2 characters of @a __s.  Returns an integer < 0\n        *  if this substring is ordered before the string from @a __s,\n        *  0 if their values are equivalent, or > 0 if this substring\n        *  is ordered after the string from @a __s.  Determines the\n        *  effective length rlen of the strings to compare as the\n        *  smallest of the length of the substring and @a __n2.  The\n        *  function then compares the two strings by calling\n-       *  traits::compare(substring.data(),s,rlen).  If the result of\n+       *  traits::compare(substring.data(),__s,rlen).  If the result of\n        *  the comparison is nonzero returns it, otherwise the shorter\n        *  one is ordered first.\n        *\n-       *  NB: s must have at least n2 characters, <em>\\\\0</em> has no special\n+       *  NB: __s must have at least n2 characters, <em>\\\\0</em> has no special\n        *  meaning.\n       */\n       int"}, {"sha": "e4323bd1ec0a88573bac22db311cc1e73a4d8035", "filename": "libstdc++-v3/include/parallel/base.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fbase.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fbase.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fbase.h?ref=93c66bc68a2554cbb2ba11f90944314af378d16b", "patch": "@@ -365,7 +365,7 @@ namespace __gnu_parallel\n       typedef _PseudoSequenceIterator<_Tp, uint64_t> iterator;\n \n       /** @brief Constructor.\n-       *  @param _M_val Element of the sequence.\n+       *  @param __val Element of the sequence.\n        *  @param __count Number of (virtual) copies.\n        */\n       _PseudoSequence(const _Tp& __val, _DifferenceType __count)"}, {"sha": "22c8b2cc7738bdfb4248aff27c6052cf92fef2ca", "filename": "libstdc++-v3/include/parallel/for_each_selectors.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Ffor_each_selectors.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Ffor_each_selectors.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Ffor_each_selectors.h?ref=93c66bc68a2554cbb2ba11f90944314af378d16b", "patch": "@@ -228,8 +228,8 @@ namespace __gnu_parallel\n       _It2 __begin2_iterator;\n \n       /** @brief Constructor.\n-       *  @param b1 Begin iterator of first sequence.\n-       *  @param b2 Begin iterator of second sequence. */\n+       *  @param __b1 Begin iterator of first sequence.\n+       *  @param __b2 Begin iterator of second sequence. */\n       explicit\n       __inner_product_selector(_It __b1, _It2 __b2)\n       : __begin1_iterator(__b1), __begin2_iterator(__b2) { }\n@@ -291,7 +291,7 @@ namespace __gnu_parallel\n      *  @param __i iterator referencing object. */\n     template<typename _It>\n       void\n-      operator()(_It) { }\n+      operator()(_It __i) { }\n   };\n \n   /** @brief Reduction function doing nothing. */"}, {"sha": "a1977da3a83883398d34207f2b7963a640169295", "filename": "libstdc++-v3/include/parallel/multiway_merge.h", "status": "modified", "additions": 12, "deletions": 16, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fmultiway_merge.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fmultiway_merge.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fmultiway_merge.h?ref=93c66bc68a2554cbb2ba11f90944314af378d16b", "patch": "@@ -641,10 +641,7 @@ namespace __gnu_parallel\n   /** @brief Multi-way merging procedure for a high branching factor,\n    *         requiring sentinels to exist.\n    *\n-   * @param __stable The value must the same as for the used LoserTrees.\n-   * @param UnguardedLoserTree _Loser Tree variant to use for the unguarded\n-   *   merging.\n-   * @param GuardedLoserTree _Loser Tree variant to use for the guarded\n+   * @tparam UnguardedLoserTree _Loser Tree variant to use for the unguarded\n    *   merging.\n    *\n    * @param __seqs_begin Begin iterator of iterator pair input sequence.\n@@ -911,7 +908,6 @@ namespace __gnu_parallel\n    *  @param __comp Comparator.\n    *  @param __length Maximum length to merge, possibly larger than the\n    *  number of elements available.\n-   *  @param __stable Stable merging incurs a performance penalty.\n    *  @param __sentinel The sequences have __a __sentinel element.\n    *  @return End iterator of output sequence. */\n   template<bool __stable,\n@@ -1206,16 +1202,16 @@ namespace __gnu_parallel\n    *\n    * Must not be called if the number of sequences is 1.\n    *\n-   * @param _Splitter functor to split input (either __exact or sampling based)\n+   * @tparam _Splitter functor to split input (either __exact or sampling based)\n+   * @tparam __stable Stable merging incurs a performance penalty.\n+   * @tparam __sentinel Ignored.\n    *\n    * @param __seqs_begin Begin iterator of iterator pair input sequence.\n    * @param __seqs_end End iterator of iterator pair input sequence.\n    * @param __target Begin iterator of output sequence.\n    * @param __comp Comparator.\n    * @param __length Maximum length to merge, possibly larger than the\n    * number of elements available.\n-   * @param __stable Stable merging incurs a performance penalty.\n-   * @param __sentinel Ignored.\n    * @return End iterator of output sequence.\n    */\n   template<bool __stable,\n@@ -1396,11 +1392,11 @@ namespace __gnu_parallel\n    * @post return __value - __target = min(__length, number of elements in all\n    *    sequences).\n    *\n-   * @param _RAIterPairIterator iterator over sequence\n+   * @tparam _RAIterPairIterator iterator over sequence\n    *    of pairs of iterators\n-   * @param _RAIterOut iterator over target sequence\n-   * @param _DifferenceTp difference type for the sequence\n-   * @param _Compare strict weak ordering type to compare elements\n+   * @tparam _RAIterOut iterator over target sequence\n+   * @tparam _DifferenceTp difference type for the sequence\n+   * @tparam _Compare strict weak ordering type to compare elements\n    *    in sequences\n    *\n    * @param __seqs_begin  __begin of sequence __sequence\n@@ -1760,11 +1756,11 @@ namespace __gnu_parallel\n    *\n    * @see stable_multiway_merge_sentinels\n    *\n-   * @param _RAIterPairIterator iterator over sequence\n+   * @tparam _RAIterPairIterator iterator over sequence\n    *    of pairs of iterators\n-   * @param _RAIterOut iterator over target sequence\n-   * @param _DifferenceTp difference type for the sequence\n-   * @param _Compare strict weak ordering type to compare elements\n+   * @tparam _RAIterOut iterator over target sequence\n+   * @tparam _DifferenceTp difference type for the sequence\n+   * @tparam _Compare strict weak ordering type to compare elements\n    *    in sequences\n    *\n    * @param __seqs_begin  __begin of sequence __sequence"}, {"sha": "0a9e78c1a90e174c79456611acec842657bef189", "filename": "libstdc++-v3/include/parallel/multiway_mergesort.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fmultiway_mergesort.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fmultiway_mergesort.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fmultiway_mergesort.h?ref=93c66bc68a2554cbb2ba11f90944314af378d16b", "patch": "@@ -387,7 +387,6 @@ namespace __gnu_parallel\n    *  @param __begin Begin iterator of sequence.\n    *  @param __end End iterator of sequence.\n    *  @param __comp Comparator.\n-   *  @param __n Length of sequence.\n    *  @param __num_threads Number of threads to use.\n    */\n   template<bool __stable, bool __exact, typename _RAIter,"}, {"sha": "aaf271256ec8b5d829af9a19fc7bea70f79f345c", "filename": "libstdc++-v3/include/parallel/partial_sum.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fpartial_sum.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fpartial_sum.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fpartial_sum.h?ref=93c66bc68a2554cbb2ba11f90944314af378d16b", "patch": "@@ -80,7 +80,6 @@ namespace __gnu_parallel\n       *  @param __result Begin iterator of output sequence.\n       *  @param __bin_op Associative binary function.\n       *  @param __n Length of sequence.\n-      *  @param __num_threads Number of threads to use.\n       *  @return End iterator of output sequence.\n       */\n   template<typename _IIter,"}, {"sha": "ea72c8acd4e01755d111415f219c473e4c887703", "filename": "libstdc++-v3/include/parallel/queue.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fqueue.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fqueue.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fqueue.h?ref=93c66bc68a2554cbb2ba11f90944314af378d16b", "patch": "@@ -64,7 +64,7 @@ namespace __gnu_parallel\n \n     public:\n       /** @brief Constructor. Not to be called concurrent, of course.\n-       *  @param _M_max_size Maximal number of elements to be contained. */\n+       *  @param __max_size Maximal number of elements to be contained. */\n       _RestrictedBoundedConcurrentQueue(_SequenceIndex __max_size)\n       {\n         _M_max_size = __max_size;"}, {"sha": "c8994bd9c215e80e7c0f3b5f4d58fc10c5f647b2", "filename": "libstdc++-v3/include/parallel/random_number.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Frandom_number.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Frandom_number.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Frandom_number.h?ref=93c66bc68a2554cbb2ba11f90944314af378d16b", "patch": "@@ -104,7 +104,7 @@ namespace __gnu_parallel\n     }\n \n     /** @brief Generate a number of random bits, run-time parameter.\n-     *  @param bits Number of bits to generate. */\n+     *  @param __bits Number of bits to generate. */\n     unsigned long\n     __genrand_bits(int __bits)\n     {"}, {"sha": "b58ee9b8aee7eff339a54e94e30ed80ede61120b", "filename": "libstdc++-v3/include/parallel/search.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fsearch.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fsearch.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fsearch.h?ref=93c66bc68a2554cbb2ba11f90944314af378d16b", "patch": "@@ -44,7 +44,7 @@ namespace __gnu_parallel\n    *  @brief Precalculate __advances for Knuth-Morris-Pratt algorithm.\n    *  @param __elements Begin iterator of sequence to search for.\n    *  @param __length Length of sequence to search for.\n-   *  @param __advances Returned __offsets. \n+   *  @param __off Returned __offsets. \n    */\n   template<typename _RAIter, typename _DifferenceTp>\n     void"}, {"sha": "a038618e6a057385524361c93c193e8a5af0ade4", "filename": "libstdc++-v3/include/parallel/sort.h", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fsort.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fsort.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fsort.h?ref=93c66bc68a2554cbb2ba11f90944314af378d16b", "patch": "@@ -67,6 +67,7 @@ namespace __gnu_parallel\n    *  @param __begin Begin iterator of input sequence.\n    *  @param __end End iterator of input sequence.\n    *  @param __comp Comparator.\n+   *  @tparam __stable Sort stable.\n    *  @callgraph \n    */\n   template<bool __stable, typename _RAIter, typename _Compare>\n@@ -90,6 +91,7 @@ namespace __gnu_parallel\n    *  @param __begin Begin iterator of input sequence.\n    *  @param __end End iterator of input sequence.\n    *  @param __comp Comparator.\n+   *  @tparam __stable Sort stable.\n    *  @callgraph \n    */\n   template<bool __stable, typename _RAIter, typename _Compare>\n@@ -110,6 +112,7 @@ namespace __gnu_parallel\n    *  @param __begin Begin iterator of input sequence.\n    *  @param __end End iterator of input sequence.\n    *  @param __comp Comparator.\n+   *  @tparam __stable Sort stable.\n    *  @callgraph \n    */\n   template<bool __stable, typename _RAIter, typename _Compare>\n@@ -129,6 +132,7 @@ namespace __gnu_parallel\n    *  @param __begin Begin iterator of input sequence.\n    *  @param __end End iterator of input sequence.\n    *  @param __comp Comparator.\n+   *  @tparam __stable Sort stable.\n    *  @callgraph \n    */\n   template<bool __stable, typename _RAIter, typename _Compare>\n@@ -149,7 +153,7 @@ namespace __gnu_parallel\n    *  @param __begin Begin iterator of input sequence.\n    *  @param __end End iterator of input sequence.\n    *  @param __comp Comparator.\n-   *  @param __stable Sort __stable.\n+   *  @tparam __stable Sort stable.\n    *  @callgraph \n    */\n    template<bool __stable, typename _RAIter, typename _Compare>\n@@ -171,6 +175,7 @@ namespace __gnu_parallel\n    *  @param __begin Begin iterator of input sequence.\n    *  @param __end End iterator of input sequence.\n    *  @param __comp Comparator.\n+   *  @tparam __stable Sort stable.\n    *  @callgraph \n    */\n   template<bool __stable, typename _RAIter, typename _Compare>\n@@ -190,7 +195,7 @@ namespace __gnu_parallel\n    *  @param __begin Begin iterator of input sequence.\n    *  @param __end End iterator of input sequence.\n    *  @param __comp Comparator.\n-   *  @param __stable Sort __stable.\n+   *  @tparam __stable Sort stable.\n    *  @callgraph \n    */\n   template<bool __stable, typename _RAIter, typename _Compare>"}, {"sha": "5829726c5b02ed906289b42b248e33e35a8c0940", "filename": "libstdc++-v3/include/std/bitset", "status": "modified", "additions": 25, "deletions": 24, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fbitset", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fbitset", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fbitset?ref=93c66bc68a2554cbb2ba11f90944314af378d16b", "patch": "@@ -831,10 +831,10 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief  Use a subset of a string.\n-       *  @param  s  A string of @a 0 and @a 1 characters.\n-       *  @param  position  Index of the first character in @a s to use;\n+       *  @param  __s  A string of @a 0 and @a 1 characters.\n+       *  @param  __position  Index of the first character in @a __s to use;\n        *                    defaults to zero.\n-       *  @throw  std::out_of_range  If @a pos is bigger the size of @a s.\n+       *  @throw  std::out_of_range  If @a pos is bigger the size of @a __s.\n        *  @throw  std::invalid_argument  If a character appears in the string\n        *                                 which is neither @a 0 nor @a 1.\n        */\n@@ -854,10 +854,11 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief  Use a subset of a string.\n-       *  @param  s  A string of @a 0 and @a 1 characters.\n-       *  @param  position  Index of the first character in @a s to use.\n-       *  @param  n    The number of characters to copy.\n-       *  @throw  std::out_of_range  If @a pos is bigger the size of @a s.\n+       *  @param  __s  A string of @a 0 and @a 1 characters.\n+       *  @param  __position  Index of the first character in @a __s to use.\n+       *  @param  __n    The number of characters to copy.\n+       *  @throw std::out_of_range If @a __position is bigger the size\n+       *  of @a __s.\n        *  @throw  std::invalid_argument  If a character appears in the string\n        *                                 which is neither @a 0 nor @a 1.\n        */\n@@ -889,12 +890,12 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n #ifdef __GXX_EXPERIMENTAL_CXX0X__\n       /**\n        *  @brief  Construct from a character %array.\n-       *  @param  str  An %array of characters @a zero and @a one.\n-       *  @param  n    The number of characters to use.\n-       *  @param  zero The character corresponding to the value 0.\n-       *  @param  one  The character corresponding to the value 1.\n-       *  @throw  std::invalid_argument  If a character appears in the string\n-       *                                 which is neither @a zero nor @a one.\n+       *  @param  __str  An %array of characters @a zero and @a one.\n+       *  @param  __n    The number of characters to use.\n+       *  @param  __zero The character corresponding to the value 0.\n+       *  @param  __one  The character corresponding to the value 1.\n+       *  @throw  std::invalid_argument If a character appears in the string\n+       *                                which is neither @a __zero nor @a __one.\n        */\n       template<typename _CharT>\n         explicit\n@@ -919,7 +920,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n       //@{\n       /**\n        *  @brief  Operations on bitsets.\n-       *  @param  rhs  A same-sized bitset.\n+       *  @param  __rhs  A same-sized bitset.\n        *\n        *  These should be self-explanatory.\n        */\n@@ -948,7 +949,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n       //@{\n       /**\n        *  @brief  Operations on bitsets.\n-       *  @param  position  The number of places to shift.\n+       *  @param  __position  The number of places to shift.\n        *\n        *  These should be self-explanatory.\n        */\n@@ -1036,8 +1037,8 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief Sets a given bit to a particular value.\n-       *  @param  position  The index of the bit.\n-       *  @param  val  Either true or false, defaults to true.\n+       *  @param  __position  The index of the bit.\n+       *  @param  __val  Either true or false, defaults to true.\n        *  @throw  std::out_of_range  If @a pos is bigger the size of the %set.\n        */\n       bitset<_Nb>&\n@@ -1060,7 +1061,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief Sets a given bit to false.\n-       *  @param  position  The index of the bit.\n+       *  @param  __position  The index of the bit.\n        *  @throw  std::out_of_range  If @a pos is bigger the size of the %set.\n        *\n        *  Same as writing @c set(pos,false).\n@@ -1086,7 +1087,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \n       /**\n        *  @brief Toggles a given bit to its opposite value.\n-       *  @param  position  The index of the bit.\n+       *  @param  __position  The index of the bit.\n        *  @throw  std::out_of_range  If @a pos is bigger the size of the %set.\n        */\n       bitset<_Nb>&\n@@ -1105,7 +1106,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n       //@{\n       /**\n        *  @brief  Array-indexing support.\n-       *  @param  position  Index into the %bitset.\n+       *  @param  __position  Index into the %bitset.\n        *  @return A bool for a <em>const %bitset</em>.  For non-const\n        *           bitsets, an instance of the reference proxy class.\n        *  @note  These operators do no range checking and throw no exceptions,\n@@ -1271,7 +1272,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n       \n       /**\n        *  @brief Tests the value of a bit.\n-       *  @param  position  The index of a bit.\n+       *  @param  __position  The index of a bit.\n        *  @return  The value at @a pos.\n        *  @throw  std::out_of_range  If @a pos is bigger the size of the %set.\n        */\n@@ -1333,7 +1334,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n       /**\n        *  @brief  Finds the index of the next \"on\" bit after prev.\n        *  @return  The index of the next bit set, or size() if not found.\n-       *  @param  prev  Where to start searching.\n+       *  @param  __prev  Where to start searching.\n        *  @ingroup SGIextensions\n        *  @sa  _Find_first\n        */\n@@ -1381,8 +1382,8 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n   //@{\n   /**\n    *  @brief  Global bitwise operations on bitsets.\n-   *  @param  x  A bitset.\n-   *  @param  y  A bitset of the same size as @a x.\n+   *  @param  __x  A bitset.\n+   *  @param  __y  A bitset of the same size as @a __x.\n    *  @return  A new bitset.\n    *\n    *  These should be self-explanatory."}, {"sha": "245404e84cfe5f96011b015d311d0765a394b24a", "filename": "libstdc++-v3/include/std/fstream", "status": "modified", "additions": 42, "deletions": 42, "changes": 84, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ffstream", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ffstream", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ffstream?ref=93c66bc68a2554cbb2ba11f90944314af378d16b", "patch": "@@ -226,12 +226,12 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       /**\n        *  @brief  Opens an external file.\n-       *  @param  s  The name of the file.\n-       *  @param  mode  The open mode flags.\n+       *  @param  __s  The name of the file.\n+       *  @param  __mode  The open mode flags.\n        *  @return  @c this on success, NULL on failure\n        *\n        *  If a file is already open, this function immediately fails.\n-       *  Otherwise it tries to open the file named @a s using the flags\n+       *  Otherwise it tries to open the file named @a __s using the flags\n        *  given in @a mode.\n        *\n        *  Table 92, adapted here, gives the relation between openmode\n@@ -269,8 +269,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n #ifdef __GXX_EXPERIMENTAL_CXX0X__\n       /**\n        *  @brief  Opens an external file.\n-       *  @param  s  The name of the file.\n-       *  @param  mode  The open mode flags.\n+       *  @param  __s  The name of the file.\n+       *  @param  __mode  The open mode flags.\n        *  @return  @c this on success, NULL on failure\n        */\n       __filebuf_type*\n@@ -332,12 +332,12 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       /**\n        *  @brief  Manipulates the buffer.\n-       *  @param  s  Pointer to a buffer area.\n-       *  @param  n  Size of @a s.\n+       *  @param  __s  Pointer to a buffer area.\n+       *  @param  __n  Size of @a __s.\n        *  @return  @c this\n        *\n-       *  If no file has been opened, and both @a s and @a n are zero, then\n-       *  the stream becomes unbuffered.  Otherwise, @c s is used as a\n+       *  If no file has been opened, and both @a __s and @a __n are zero, then\n+       *  the stream becomes unbuffered.  Otherwise, @c __s is used as a\n        *  buffer; see\n        *  http://gcc.gnu.org/onlinedocs/libstdc++/manual/bk01pt11ch25s02.html\n        *  for more.\n@@ -448,10 +448,10 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       /**\n        *  @brief  Create an input file stream.\n-       *  @param  s  Null terminated string specifying the filename.\n-       *  @param  mode  Open file in specified mode (see std::ios_base).\n+       *  @param  __s  Null terminated string specifying the filename.\n+       *  @param  __mode  Open file in specified mode (see std::ios_base).\n        *\n-       *  @c ios_base::in is automatically included in @a mode.\n+       *  @c ios_base::in is automatically included in @a __mode.\n        *\n        *  Tip:  When using std::string to hold the filename, you must use\n        *  .c_str() before passing it to this constructor.\n@@ -467,10 +467,10 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n #ifdef __GXX_EXPERIMENTAL_CXX0X__\n       /**\n        *  @brief  Create an input file stream.\n-       *  @param  s  std::string specifying the filename.\n-       *  @param  mode  Open file in specified mode (see std::ios_base).\n+       *  @param  __s  std::string specifying the filename.\n+       *  @param  __mode  Open file in specified mode (see std::ios_base).\n        *\n-       *  @c ios_base::in is automatically included in @a mode.\n+       *  @c ios_base::in is automatically included in @a __mode.\n        */\n       explicit\n       basic_ifstream(const std::string& __s,\n@@ -518,10 +518,10 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       /**\n        *  @brief  Opens an external file.\n-       *  @param  s  The name of the file.\n-       *  @param  mode  The open mode flags.\n+       *  @param  __s  The name of the file.\n+       *  @param  __mode  The open mode flags.\n        *\n-       *  Calls @c std::basic_filebuf::open(s,mode|in).  If that function\n+       *  Calls @c std::basic_filebuf::open(s,__mode|in).  If that function\n        *  fails, @c failbit is set in the stream's error state.\n        *\n        *  Tip:  When using std::string to hold the filename, you must use\n@@ -541,10 +541,10 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n #ifdef __GXX_EXPERIMENTAL_CXX0X__\n       /**\n        *  @brief  Opens an external file.\n-       *  @param  s  The name of the file.\n-       *  @param  mode  The open mode flags.\n+       *  @param  __s  The name of the file.\n+       *  @param  __mode  The open mode flags.\n        *\n-       *  Calls @c std::basic_filebuf::open(s,mode|in).  If that function\n+       *  Calls @c std::basic_filebuf::open(__s,__mode|in).  If that function\n        *  fails, @c failbit is set in the stream's error state.\n        */\n       void\n@@ -616,11 +616,11 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       /**\n        *  @brief  Create an output file stream.\n-       *  @param  s  Null terminated string specifying the filename.\n-       *  @param  mode  Open file in specified mode (see std::ios_base).\n+       *  @param  __s  Null terminated string specifying the filename.\n+       *  @param  __mode  Open file in specified mode (see std::ios_base).\n        *\n        *  @c ios_base::out|ios_base::trunc is automatically included in\n-       *  @a mode.\n+       *  @a __mode.\n        *\n        *  Tip:  When using std::string to hold the filename, you must use\n        *  .c_str() before passing it to this constructor.\n@@ -637,11 +637,11 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n #ifdef __GXX_EXPERIMENTAL_CXX0X__\n       /**\n        *  @brief  Create an output file stream.\n-       *  @param  s  std::string specifying the filename.\n-       *  @param  mode  Open file in specified mode (see std::ios_base).\n+       *  @param  __s  std::string specifying the filename.\n+       *  @param  __mode  Open file in specified mode (see std::ios_base).\n        *\n        *  @c ios_base::out|ios_base::trunc is automatically included in\n-       *  @a mode.\n+       *  @a __mode.\n        */\n       explicit\n       basic_ofstream(const std::string& __s,\n@@ -689,10 +689,10 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       /**\n        *  @brief  Opens an external file.\n-       *  @param  s  The name of the file.\n-       *  @param  mode  The open mode flags.\n+       *  @param  __s  The name of the file.\n+       *  @param  __mode  The open mode flags.\n        *\n-       *  Calls @c std::basic_filebuf::open(s,mode|out|trunc).  If that\n+       *  Calls @c std::basic_filebuf::open(__s,__mode|out|trunc).  If that\n        *  function fails, @c failbit is set in the stream's error state.\n        *\n        *  Tip:  When using std::string to hold the filename, you must use\n@@ -713,8 +713,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n #ifdef __GXX_EXPERIMENTAL_CXX0X__\n       /**\n        *  @brief  Opens an external file.\n-       *  @param  s  The name of the file.\n-       *  @param  mode  The open mode flags.\n+       *  @param  __s  The name of the file.\n+       *  @param  __mode  The open mode flags.\n        *\n        *  Calls @c std::basic_filebuf::open(s,mode|out|trunc).  If that\n        *  function fails, @c failbit is set in the stream's error state.\n@@ -791,8 +791,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       /**\n        *  @brief  Create an input/output file stream.\n-       *  @param  s  Null terminated string specifying the filename.\n-       *  @param  mode  Open file in specified mode (see std::ios_base).\n+       *  @param  __s  Null terminated string specifying the filename.\n+       *  @param  __mode  Open file in specified mode (see std::ios_base).\n        *\n        *  Tip:  When using std::string to hold the filename, you must use\n        *  .c_str() before passing it to this constructor.\n@@ -809,8 +809,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n #ifdef __GXX_EXPERIMENTAL_CXX0X__\n       /**\n        *  @brief  Create an input/output file stream.\n-       *  @param  s  Null terminated string specifying the filename.\n-       *  @param  mode  Open file in specified mode (see std::ios_base).\n+       *  @param  __s  Null terminated string specifying the filename.\n+       *  @param  __mode  Open file in specified mode (see std::ios_base).\n        */\n       explicit\n       basic_fstream(const std::string& __s,\n@@ -858,10 +858,10 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       /**\n        *  @brief  Opens an external file.\n-       *  @param  s  The name of the file.\n-       *  @param  mode  The open mode flags.\n+       *  @param  __s  The name of the file.\n+       *  @param  __mode  The open mode flags.\n        *\n-       *  Calls @c std::basic_filebuf::open(s,mode).  If that\n+       *  Calls @c std::basic_filebuf::open(__s,__mode).  If that\n        *  function fails, @c failbit is set in the stream's error state.\n        *\n        *  Tip:  When using std::string to hold the filename, you must use\n@@ -882,10 +882,10 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n #ifdef __GXX_EXPERIMENTAL_CXX0X__\n       /**\n        *  @brief  Opens an external file.\n-       *  @param  s  The name of the file.\n-       *  @param  mode  The open mode flags.\n+       *  @param  __s  The name of the file.\n+       *  @param  __mode  The open mode flags.\n        *\n-       *  Calls @c std::basic_filebuf::open(s,mode).  If that\n+       *  Calls @c std::basic_filebuf::open(__s,__mode).  If that\n        *  function fails, @c failbit is set in the stream's error state.\n        */\n       void"}, {"sha": "9296d755faae0751ae499d13382c5da7aff0c46c", "filename": "libstdc++-v3/include/std/functional", "status": "modified", "additions": 22, "deletions": 22, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ffunctional", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ffunctional", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ffunctional?ref=93c66bc68a2554cbb2ba11f90944314af378d16b", "patch": "@@ -1996,19 +1996,19 @@ _GLIBCXX_HAS_NESTED_TYPE(result_type)\n \n       /**\n        *  @brief %Function copy constructor.\n-       *  @param x A %function object with identical call signature.\n-       *  @post @c (bool)*this == (bool)x\n+       *  @param __x A %function object with identical call signature.\n+       *  @post @c bool(*this) == bool(__x)\n        *\n        *  The newly-created %function contains a copy of the target of @a\n-       *  x (if it has one).\n+       *  __x (if it has one).\n        */\n       function(const function& __x);\n \n       /**\n        *  @brief %Function move constructor.\n-       *  @param x A %function object rvalue with identical call signature.\n+       *  @param __x A %function object rvalue with identical call signature.\n        *\n-       *  The newly-created %function contains the target of @a x\n+       *  The newly-created %function contains the target of @a __x\n        *  (if it has one).\n        */\n       function(function&& __x) : _Function_base()\n@@ -2021,17 +2021,17 @@ _GLIBCXX_HAS_NESTED_TYPE(result_type)\n       /**\n        *  @brief Builds a %function that targets a copy of the incoming\n        *  function object.\n-       *  @param f A %function object that is callable with parameters of\n+       *  @param __f A %function object that is callable with parameters of\n        *  type @c T1, @c T2, ..., @c TN and returns a value convertible\n        *  to @c Res.\n        *\n-       *  The newly-created %function object will target a copy of @a\n-       *  f. If @a f is @c reference_wrapper<F>, then this function\n+       *  The newly-created %function object will target a copy of \n+       *  @a __f. If @a __f is @c reference_wrapper<F>, then this function\n        *  object will contain a reference to the function object @c\n-       *  f.get(). If @a f is a NULL function pointer or NULL\n+       *  __f.get(). If @a __f is a NULL function pointer or NULL\n        *  pointer-to-member, the newly-created object will be empty.\n        *\n-       *  If @a f is a non-NULL function pointer or an object of type @c\n+       *  If @a __f is a non-NULL function pointer or an object of type @c\n        *  reference_wrapper<F>, this function will not throw.\n        */\n       template<typename _Functor>\n@@ -2042,14 +2042,14 @@ _GLIBCXX_HAS_NESTED_TYPE(result_type)\n \n       /**\n        *  @brief %Function assignment operator.\n-       *  @param x A %function with identical call signature.\n+       *  @param __x A %function with identical call signature.\n        *  @post @c (bool)*this == (bool)x\n        *  @returns @c *this\n        *\n-       *  The target of @a x is copied to @c *this. If @a x has no\n+       *  The target of @a __x is copied to @c *this. If @a __x has no\n        *  target, then @c *this will be empty.\n        *\n-       *  If @a x targets a function pointer or a reference to a function\n+       *  If @a __x targets a function pointer or a reference to a function\n        *  object, then this operation will not throw an %exception.\n        */\n       function&\n@@ -2061,13 +2061,13 @@ _GLIBCXX_HAS_NESTED_TYPE(result_type)\n \n       /**\n        *  @brief %Function move-assignment operator.\n-       *  @param x A %function rvalue with identical call signature.\n+       *  @param __x A %function rvalue with identical call signature.\n        *  @returns @c *this\n        *\n-       *  The target of @a x is moved to @c *this. If @a x has no\n+       *  The target of @a __x is moved to @c *this. If @a __x has no\n        *  target, then @c *this will be empty.\n        *\n-       *  If @a x targets a function pointer or a reference to a function\n+       *  If @a __x targets a function pointer or a reference to a function\n        *  object, then this operation will not throw an %exception.\n        */\n       function&\n@@ -2098,18 +2098,18 @@ _GLIBCXX_HAS_NESTED_TYPE(result_type)\n \n       /**\n        *  @brief %Function assignment to a new target.\n-       *  @param f A %function object that is callable with parameters of\n+       *  @param __f A %function object that is callable with parameters of\n        *  type @c T1, @c T2, ..., @c TN and returns a value convertible\n        *  to @c Res.\n        *  @return @c *this\n        *\n        *  This  %function object wrapper will target a copy of @a\n-       *  f. If @a f is @c reference_wrapper<F>, then this function\n+       *  __f. If @a __f is @c reference_wrapper<F>, then this function\n        *  object will contain a reference to the function object @c\n-       *  f.get(). If @a f is a NULL function pointer or NULL\n+       *  __f.get(). If @a __f is a NULL function pointer or NULL\n        *  pointer-to-member, @c this object will be empty.\n        *\n-       *  If @a f is a non-NULL function pointer or an object of type @c\n+       *  If @a __f is a non-NULL function pointer or an object of type @c\n        *  reference_wrapper<F>, this function will not throw.\n        */\n       template<typename _Functor>\n@@ -2133,9 +2133,9 @@ _GLIBCXX_HAS_NESTED_TYPE(result_type)\n \n       /**\n        *  @brief Swap the targets of two %function objects.\n-       *  @param f A %function with identical call signature.\n+       *  @param __x A %function with identical call signature.\n        *\n-       *  Swap the targets of @c this function object and @a f. This\n+       *  Swap the targets of @c this function object and @a __f. This\n        *  function will not throw an %exception.\n        */\n       void swap(function& __x)"}, {"sha": "ea2c44acf6fd5f1c62966249507e2ff355de79d1", "filename": "libstdc++-v3/include/std/iomanip", "status": "modified", "additions": 20, "deletions": 20, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fiomanip", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fiomanip", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fiomanip?ref=93c66bc68a2554cbb2ba11f90944314af378d16b", "patch": "@@ -56,10 +56,10 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n   /**\n    *  @brief  Manipulator for @c setf.\n-   *  @param  mask  A format flags mask.\n+   *  @param  __mask  A format flags mask.\n    *\n    *  Sent to a stream object, this manipulator resets the specified flags,\n-   *  via @e stream.setf(0,mask).\n+   *  via @e stream.setf(0,__mask).\n   */\n   inline _Resetiosflags \n   resetiosflags(ios_base::fmtflags __mask)\n@@ -86,10 +86,10 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n   /**\n    *  @brief  Manipulator for @c setf.\n-   *  @param  mask  A format flags mask.\n+   *  @param  __mask  A format flags mask.\n    *\n    *  Sent to a stream object, this manipulator sets the format flags\n-   *  to @a mask.\n+   *  to @a __mask.\n   */\n   inline _Setiosflags \n   setiosflags(ios_base::fmtflags __mask)\n@@ -116,11 +116,11 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n   /**\n    *  @brief  Manipulator for @c setf.\n-   *  @param  base  A numeric base.\n+   *  @param  __base  A numeric base.\n    *\n    *  Sent to a stream object, this manipulator changes the\n    *  @c ios_base::basefield flags to @c oct, @c dec, or @c hex when @a base\n-   *  is 8, 10, or 16, accordingly, and to 0 if @a base is any other value.\n+   *  is 8, 10, or 16, accordingly, and to 0 if @a __base is any other value.\n   */\n   inline _Setbase \n   setbase(int __base)\n@@ -154,9 +154,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n   /**\n    *  @brief  Manipulator for @c fill.\n-   *  @param  c  The new fill character.\n+   *  @param  __c  The new fill character.\n    *\n-   *  Sent to a stream object, this manipulator calls @c fill(c) for that\n+   *  Sent to a stream object, this manipulator calls @c fill(__c) for that\n    *  object.\n   */\n   template<typename _CharT>\n@@ -185,9 +185,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n   /**\n    *  @brief  Manipulator for @c precision.\n-   *  @param  n  The new precision.\n+   *  @param  __n  The new precision.\n    *\n-   *  Sent to a stream object, this manipulator calls @c precision(n) for\n+   *  Sent to a stream object, this manipulator calls @c precision(__n) for\n    *  that object.\n   */\n   inline _Setprecision \n@@ -215,9 +215,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n   /**\n    *  @brief  Manipulator for @c width.\n-   *  @param  n  The new width.\n+   *  @param  __n  The new width.\n    *\n-   *  Sent to a stream object, this manipulator calls @c width(n) for\n+   *  Sent to a stream object, this manipulator calls @c width(__n) for\n    *  that object.\n   */\n   inline _Setw \n@@ -247,11 +247,11 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n   /**\n    *  @brief  Extended manipulator for extracting money.\n-   *  @param  mon  Either long double or a specialization of @c basic_string.\n-   *  @param  intl A bool indicating whether international format \n-   *               is to be used.\n+   *  @param  __mon  Either long double or a specialization of @c basic_string.\n+   *  @param  __intl A bool indicating whether international format \n+   *                 is to be used.\n    *\n-   *  Sent to a stream object, this manipulator extracts @a mon.\n+   *  Sent to a stream object, this manipulator extracts @a __mon.\n   */\n   template<typename _MoneyT>\n     inline _Get_money<_MoneyT>\n@@ -283,11 +283,11 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n   /**\n    *  @brief  Extended manipulator for inserting money.\n-   *  @param  mon  Either long double or a specialization of @c basic_string.\n-   *  @param  intl A bool indicating whether international format \n-   *               is to be used.\n+   *  @param  __mon  Either long double or a specialization of @c basic_string.\n+   *  @param  __intl A bool indicating whether international format \n+   *                 is to be used.\n    *\n-   *  Sent to a stream object, this manipulator inserts @a mon.\n+   *  Sent to a stream object, this manipulator inserts @a __mon.\n   */\n   template<typename _MoneyT>\n     inline _Put_money<_MoneyT>"}, {"sha": "19bc42bab117fa97e0c9c269433dca37b836d562", "filename": "libstdc++-v3/include/std/istream", "status": "modified", "additions": 64, "deletions": 64, "changes": 128, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fistream", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fistream", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fistream?ref=93c66bc68a2554cbb2ba11f90944314af378d16b", "patch": "@@ -159,7 +159,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       //@{\n       /**\n        *  @brief  Basic arithmetic extractors\n-       *  @param  A variable of builtin type.\n+       *  @param  __n, __f, __p: A variable of builtin type.\n        *  @return  @c *this if successful\n        *\n        *  These functions use the stream's current locale (specifically, the\n@@ -219,13 +219,13 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       /**\n        *  @brief  Extracting into another streambuf.\n-       *  @param  sb  A pointer to a streambuf\n+       *  @param  __sb  A pointer to a streambuf\n        *\n        *  This function behaves like one of the basic arithmetic extractors,\n        *  in that it also constructs a sentry object and has the same error\n        *  handling behavior.\n        *\n-       *  If @a sb is NULL, the stream will set failbit in its error state.\n+       *  If @a __sb is NULL, the stream will set failbit in its error state.\n        *\n        *  Characters are extracted from this stream and inserted into the\n        *  @a sb streambuf until one of the following occurs:\n@@ -284,10 +284,10 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       /**\n        *  @brief  Simple extraction.\n-       *  @param  c  The character in which to store data.\n+       *  @param  __c  The character in which to store data.\n        *  @return  *this\n        *\n-       *  Tries to extract a character and store it in @a c.  If none are\n+       *  Tries to extract a character and store it in @a __c.  If none are\n        *  available, sets failbit and returns traits::eof().\n        *\n        *  @note  This function is not overloaded on signed char and\n@@ -298,17 +298,17 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       /**\n        *  @brief  Simple multiple-character extraction.\n-       *  @param  s  Pointer to an array.\n-       *  @param  n  Maximum number of characters to store in @a s.\n-       *  @param  delim  A \"stop\" character.\n+       *  @param  __s  Pointer to an array.\n+       *  @param  __n  Maximum number of characters to store in @a __s.\n+       *  @param  __delim  A \"stop\" character.\n        *  @return  *this\n        *\n-       *  Characters are extracted and stored into @a s until one of the\n+       *  Characters are extracted and stored into @a __s until one of the\n        *  following happens:\n        *\n-       *  - @c n-1 characters are stored\n+       *  - @c __n-1 characters are stored\n        *  - the input sequence reaches EOF\n-       *  - the next character equals @a delim, in which case the character\n+       *  - the next character equals @a __delim, in which case the character\n        *    is not extracted\n        *\n        * If no characters are stored, failbit is set in the stream's error\n@@ -325,29 +325,29 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       /**\n        *  @brief  Simple multiple-character extraction.\n-       *  @param  s  Pointer to an array.\n-       *  @param  n  Maximum number of characters to store in @a s.\n+       *  @param  __s  Pointer to an array.\n+       *  @param  __n  Maximum number of characters to store in @a s.\n        *  @return  *this\n        *\n-       *  Returns @c get(s,n,widen(&apos;\\\\n&apos;)).\n+       *  Returns @c get(__s,__n,widen(&apos;\\\\n&apos;)).\n       */\n       __istream_type& \n       get(char_type* __s, streamsize __n)\n       { return this->get(__s, __n, this->widen('\\n')); }\n \n       /**\n        *  @brief  Extraction into another streambuf.\n-       *  @param  sb  A streambuf in which to store data.\n-       *  @param  delim  A \"stop\" character.\n+       *  @param  __sb  A streambuf in which to store data.\n+       *  @param  __delim  A \"stop\" character.\n        *  @return  *this\n        *\n-       *  Characters are extracted and inserted into @a sb until one of the\n+       *  Characters are extracted and inserted into @a __sb until one of the\n        *  following happens:\n        *\n        *  - the input sequence reaches EOF\n        *  - insertion into the output buffer fails (in this case, the\n        *    character that would have been inserted is not extracted)\n-       *  - the next character equals @a delim (in this case, the character\n+       *  - the next character equals @a __delim (in this case, the character\n        *    is not extracted)\n        *  - an exception occurs (and in this case is caught)\n        *\n@@ -359,32 +359,32 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       /**\n        *  @brief  Extraction into another streambuf.\n-       *  @param  sb  A streambuf in which to store data.\n+       *  @param  __sb  A streambuf in which to store data.\n        *  @return  *this\n        *\n-       *  Returns @c get(sb,widen(&apos;\\\\n&apos;)).\n+       *  Returns @c get(__sb,widen(&apos;\\\\n&apos;)).\n       */\n       __istream_type&\n       get(__streambuf_type& __sb)\n       { return this->get(__sb, this->widen('\\n')); }\n \n       /**\n        *  @brief  String extraction.\n-       *  @param  s  A character array in which to store the data.\n-       *  @param  n  Maximum number of characters to extract.\n-       *  @param  delim  A \"stop\" character.\n+       *  @param  __s  A character array in which to store the data.\n+       *  @param  __n  Maximum number of characters to extract.\n+       *  @param  __delim  A \"stop\" character.\n        *  @return  *this\n        *\n-       *  Extracts and stores characters into @a s until one of the\n+       *  Extracts and stores characters into @a __s until one of the\n        *  following happens.  Note that these criteria are required to be\n        *  tested in the order listed here, to allow an input line to exactly\n-       *  fill the @a s array without setting failbit.\n+       *  fill the @a __s array without setting failbit.\n        *\n        *  -# the input sequence reaches end-of-file, in which case eofbit\n        *     is set in the stream error state\n-       *  -# the next character equals @c delim, in which case the character\n+       *  -# the next character equals @c __delim, in which case the character\n        *     is extracted (and therefore counted in @c gcount()) but not stored\n-       *  -# @c n-1 characters are stored, in which case failbit is set\n+       *  -# @c __n-1 characters are stored, in which case failbit is set\n        *     in the stream error state\n        *\n        *  If no characters are extracted, failbit is set.  (An empty line of\n@@ -398,45 +398,45 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       /**\n        *  @brief  String extraction.\n-       *  @param  s  A character array in which to store the data.\n-       *  @param  n  Maximum number of characters to extract.\n+       *  @param  __s  A character array in which to store the data.\n+       *  @param  __n  Maximum number of characters to extract.\n        *  @return  *this\n        *\n-       *  Returns @c getline(s,n,widen(&apos;\\\\n&apos;)).\n+       *  Returns @c getline(__s,__n,widen(&apos;\\\\n&apos;)).\n       */\n       __istream_type& \n       getline(char_type* __s, streamsize __n)\n       { return this->getline(__s, __n, this->widen('\\n')); }\n \n       /**\n        *  @brief  Discarding characters\n-       *  @param  n  Number of characters to discard.\n-       *  @param  delim  A \"stop\" character.\n+       *  @param  __n  Number of characters to discard.\n+       *  @param  __delim  A \"stop\" character.\n        *  @return  *this\n        *\n        *  Extracts characters and throws them away until one of the\n        *  following happens:\n-       *  - if @a n @c != @c std::numeric_limits<int>::max(), @a n\n+       *  - if @a __n @c != @c std::numeric_limits<int>::max(), @a __n\n        *    characters are extracted\n        *  - the input sequence reaches end-of-file\n-       *  - the next character equals @a delim (in this case, the character\n+       *  - the next character equals @a __delim (in this case, the character\n        *    is extracted); note that this condition will never occur if\n-       *    @a delim equals @c traits::eof().\n+       *    @a __delim equals @c traits::eof().\n        *\n        *  NB: Provide three overloads, instead of the single function\n        *  (with defaults) mandated by the Standard: this leads to a\n        *  better performing implementation, while still conforming to\n        *  the Standard.\n       */\n       __istream_type& \n-      ignore();\n+      ignore(streamsize __n, int_type __delim);\n \n       __istream_type& \n       ignore(streamsize __n);\n \n       __istream_type& \n-      ignore(streamsize __n, int_type __delim);\n-      \n+      ignore();\n+\n       /**\n        *  @brief  Looking ahead in the stream\n        *  @return  The next character, or eof().\n@@ -450,13 +450,13 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       \n       /**\n        *  @brief  Extraction without delimiters.\n-       *  @param  s  A character array.\n-       *  @param  n  Maximum number of characters to store.\n+       *  @param  __s  A character array.\n+       *  @param  __n  Maximum number of characters to store.\n        *  @return  *this\n        *\n        *  If the stream state is @c good(), extracts characters and stores\n-       *  them into @a s until one of the following happens:\n-       *  - @a n characters are stored\n+       *  them into @a __s until one of the following happens:\n+       *  - @a __n characters are stored\n        *  - the input sequence reaches end-of-file, in which case the error\n        *    state is set to @c failbit|eofbit.\n        *\n@@ -468,11 +468,11 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       /**\n        *  @brief  Extraction until the buffer is exhausted, but no more.\n-       *  @param  s  A character array.\n-       *  @param  n  Maximum number of characters to store.\n+       *  @param  __s  A character array.\n+       *  @param  __n  Maximum number of characters to store.\n        *  @return  The number of characters extracted.\n        *\n-       *  Extracts characters and stores them into @a s depending on the\n+       *  Extracts characters and stores them into @a __s depending on the\n        *  number of characters remaining in the streambuf's buffer,\n        *  @c rdbuf()->in_avail(), called @c A here:\n        *  - if @c A @c == @c -1, sets eofbit and extracts no characters\n@@ -487,7 +487,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       \n       /**\n        *  @brief  Unextracting a single character.\n-       *  @param  c  The character to push back into the input stream.\n+       *  @param  __c  The character to push back into the input stream.\n        *  @return  *this\n        *\n        *  If @c rdbuf() is not null, calls @c rdbuf()->sputbackc(c).\n@@ -553,10 +553,10 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       /**\n        *  @brief  Changing the current read position.\n-       *  @param  pos  A file position object.\n+       *  @param  __pos  A file position object.\n        *  @return  *this\n        *\n-       *  If @c fail() is not true, calls @c rdbuf()->pubseekpos(pos).  If\n+       *  If @c fail() is not true, calls @c rdbuf()->pubseekpos(__pos).  If\n        *  that function fails, sets failbit.\n        *\n        *  @note  This function first clears eofbit.  It does not count the\n@@ -568,11 +568,11 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       /**\n        *  @brief  Changing the current read position.\n-       *  @param  off  A file offset object.\n-       *  @param  dir  The direction in which to seek.\n+       *  @param  __off  A file offset object.\n+       *  @param  __dir  The direction in which to seek.\n        *  @return  *this\n        *\n-       *  If @c fail() is not true, calls @c rdbuf()->pubseekoff(off,dir).\n+       *  If @c fail() is not true, calls @c rdbuf()->pubseekoff(__off,__dir).\n        *  If that function fails, sets failbit.\n        *\n        *  @note  This function first clears eofbit.  It does not count the\n@@ -650,10 +650,10 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       /**\n        *  @brief  The constructor performs all the work.\n-       *  @param  is  The input stream to guard.\n-       *  @param  noskipws  Whether to consume whitespace or not.\n+       *  @param  __is  The input stream to guard.\n+       *  @param  __noskipws  Whether to consume whitespace or not.\n        *\n-       *  If the stream state is good (@a is.good() is true), then the\n+       *  If the stream state is good (@a __is.good() is true), then the\n        *  following actions are performed, otherwise the sentry state\n        *  is false (<em>not okay</em>) and failbit is set in the\n        *  stream state.\n@@ -662,7 +662,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *\n        *  -# if the stream is tied to an output stream, @c is.tie()->flush()\n        *     is called to synchronize the output sequence\n-       *  -# if @a noskipws is false, and @c ios_base::skipws is set in\n+       *  -# if @a __noskipws is false, and @c ios_base::skipws is set in\n        *     @c is.flags(), the sentry extracts and discards whitespace\n        *     characters from the stream.  The currently imbued locale is\n        *     used to determine whether each character is whitespace.\n@@ -691,14 +691,14 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   //@{\n   /**\n    *  @brief  Character extractors\n-   *  @param  in  An input stream.\n-   *  @param  c  A character reference.\n+   *  @param  __in  An input stream.\n+   *  @param  __c  A character reference.\n    *  @return  in\n    *\n    *  Behaves like one of the formatted arithmetic extractors described in\n    *  std::basic_istream.  After constructing a sentry object with good\n    *  status, this function extracts a character (if one is available) and\n-   *  stores it in @a c.  Otherwise, sets failbit in the input stream.\n+   *  stores it in @a __c.  Otherwise, sets failbit in the input stream.\n   */\n   template<typename _CharT, typename _Traits>\n     basic_istream<_CharT, _Traits>&\n@@ -718,14 +718,14 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   //@{\n   /**\n    *  @brief  Character string extractors\n-   *  @param  in  An input stream.\n-   *  @param  s  A pointer to a character array.\n-   *  @return  in\n+   *  @param  __in  An input stream.\n+   *  @param  __s  A pointer to a character array.\n+   *  @return  __in\n    *\n    *  Behaves like one of the formatted arithmetic extractors described in\n    *  std::basic_istream.  After constructing a sentry object with good\n    *  status, this function extracts up to @c n characters and stores them\n-   *  into the array starting at @a s.  @c n is defined as:\n+   *  into the array starting at @a __s.  @c n is defined as:\n    *\n    *  - if @c width() is greater than zero, @c n is width() otherwise\n    *  - @c n is <em>the number of elements of the largest array of *\n@@ -839,8 +839,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   // [27.7.1.6] Rvalue stream extraction\n   /**\n    *  @brief  Generic extractor for rvalue stream\n-   *  @param  is  An input stream.\n-   *  @param  x  A reference to the extraction target.\n+   *  @param  __is  An input stream.\n+   *  @param  __x  A reference to the extraction target.\n    *  @return  is\n    *\n    *  This is just a forwarding function to allow extraction from"}, {"sha": "f1f948f7041dc05d813231b742340cdaf84b5312", "filename": "libstdc++-v3/include/std/ostream", "status": "modified", "additions": 26, "deletions": 26, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fostream", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fostream", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fostream?ref=93c66bc68a2554cbb2ba11f90944314af378d16b", "patch": "@@ -157,7 +157,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       //@{\n       /**\n        *  @brief  Basic arithmetic inserters\n-       *  @param  A variable of builtin type.\n+       *  @param  __n, __f, __p A variable of builtin type.\n        *  @return  @c *this if successful\n        *\n        *  These functions use the stream's current locale (specifically, the\n@@ -229,21 +229,21 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       /**\n        *  @brief  Extracting from another streambuf.\n-       *  @param  sb  A pointer to a streambuf\n+       *  @param  __sb  A pointer to a streambuf\n        *\n        *  This function behaves like one of the basic arithmetic extractors,\n        *  in that it also constructs a sentry object and has the same error\n        *  handling behavior.\n        *\n-       *  If @a sb is NULL, the stream will set failbit in its error state.\n+       *  If @a __sb is NULL, the stream will set failbit in its error state.\n        *\n-       *  Characters are extracted from @a sb and inserted into @c *this\n+       *  Characters are extracted from @a __sb and inserted into @c *this\n        *  until one of the following occurs:\n        *\n        *  - the input stream reaches end-of-file,\n        *  - insertion into the output sequence fails (in this case, the\n        *    character that would have been inserted is not extracted), or\n-       *  - an exception occurs while getting a character from @a sb, which\n+       *  - an exception occurs while getting a character from @a __sb, which\n        *    sets failbit in the error state\n        *\n        *  If the function inserts no characters, failbit is set.\n@@ -273,7 +273,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       //@{\n       /**\n        *  @brief  Simple insertion.\n-       *  @param  c  The character to insert.\n+       *  @param  __c  The character to insert.\n        *  @return  *this\n        *\n        *  Tries to insert @a c.\n@@ -295,14 +295,14 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       /**\n        *  @brief  Character string insertion.\n-       *  @param  s  The array to insert.\n-       *  @param  n  Maximum number of characters to insert.\n+       *  @param  __s  The array to insert.\n+       *  @param  __n  Maximum number of characters to insert.\n        *  @return  *this\n        *\n-       *  Characters are copied from @a s and inserted into the stream until\n+       *  Characters are copied from @a __s and inserted into the stream until\n        *  one of the following happens:\n        *\n-       *  - @a n characters are inserted\n+       *  - @a __n characters are inserted\n        *  - inserting into the output sequence fails (in this case, badbit\n        *    will be set in the stream's error state)\n        *\n@@ -338,7 +338,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       /**\n        *  @brief  Changing the current write position.\n-       *  @param  pos  A file position object.\n+       *  @param  __pos  A file position object.\n        *  @return  *this\n        *\n        *  If @c fail() is not true, calls @c rdbuf()->pubseekpos(pos).  If\n@@ -349,8 +349,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       /**\n        *  @brief  Changing the current write position.\n-       *  @param  off  A file offset object.\n-       *  @param  dir  The direction in which to seek.\n+       *  @param  __off  A file offset object.\n+       *  @param  __dir  The direction in which to seek.\n        *  @return  *this\n        *\n        *  If @c fail() is not true, calls @c rdbuf()->pubseekoff(off,dir).\n@@ -385,9 +385,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     public:\n       /**\n        *  @brief  The constructor performs preparatory work.\n-       *  @param  os  The output stream to guard.\n+       *  @param  __os  The output stream to guard.\n        *\n-       *  If the stream state is good (@a os.good() is true), then if the\n+       *  If the stream state is good (@a __os.good() is true), then if the\n        *  stream is tied to another output stream, @c is.tie()->flush()\n        *  is called to synchronize the output sequences.\n        *\n@@ -433,17 +433,17 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   //@{\n   /**\n    *  @brief  Character inserters\n-   *  @param  out  An output stream.\n-   *  @param  c  A character.\n+   *  @param  __out  An output stream.\n+   *  @param  __c  A character.\n    *  @return  out\n    *\n    *  Behaves like one of the formatted arithmetic inserters described in\n    *  std::basic_ostream.  After constructing a sentry object with good\n    *  status, this function inserts a single character and any required\n-   *  padding (as determined by [22.2.2.2.2]).  @c out.width(0) is then\n+   *  padding (as determined by [22.2.2.2.2]).  @c __out.width(0) is then\n    *  called.\n    *\n-   *  If @a c is of type @c char and the character type of the stream is not\n+   *  If @a __c is of type @c char and the character type of the stream is not\n    *  @c char, the character is widened before insertion.\n   */\n   template<typename _CharT, typename _Traits>\n@@ -477,16 +477,16 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   //@{\n   /**\n    *  @brief  String inserters\n-   *  @param  out  An output stream.\n-   *  @param  s  A character string.\n+   *  @param  __out  An output stream.\n+   *  @param  __s  A character string.\n    *  @return  out\n    *  @pre  @a s must be a non-NULL pointer\n    *\n    *  Behaves like one of the formatted arithmetic inserters described in\n    *  std::basic_ostream.  After constructing a sentry object with good\n-   *  status, this function inserts @c traits::length(s) characters starting\n-   *  at @a s, widened if necessary, followed by any required padding (as\n-   *  determined by [22.2.2.2.2]).  @c out.width(0) is then called.\n+   *  status, this function inserts @c traits::length(__s) characters starting\n+   *  at @a __s, widened if necessary, followed by any required padding (as\n+   *  determined by [22.2.2.2.2]).  @c __out.width(0) is then called.\n   */\n   template<typename _CharT, typename _Traits>\n     inline basic_ostream<_CharT, _Traits>&\n@@ -568,8 +568,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   // [27.7.2.9] Rvalue stream insertion\n   /**\n    *  @brief  Generic inserter for rvalue stream\n-   *  @param  os  An input stream.\n-   *  @param  x  A reference to the object being inserted.\n+   *  @param  __os  An input stream.\n+   *  @param  __x  A reference to the object being inserted.\n    *  @return  os\n    *\n    *  This is just a forwarding function to allow insertion to"}, {"sha": "bebbbd29cc9837a73d9ab78acae26d777d1f3255", "filename": "libstdc++-v3/include/std/scoped_allocator", "status": "modified", "additions": 77, "deletions": 62, "changes": 139, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fscoped_allocator", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fscoped_allocator", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fscoped_allocator?ref=93c66bc68a2554cbb2ba11f90944314af378d16b", "patch": "@@ -93,72 +93,84 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   template<typename _OuterAlloc, typename... _InnerAllocs>\n     class scoped_allocator_adaptor;\n \n-      template<typename...> struct __inner_type_impl;\n+  template<typename...> \n+    struct __inner_type_impl;\n \n-      template<typename _Outer>\n-      struct __inner_type_impl<_Outer>\n-      {\n-\ttypedef scoped_allocator_adaptor<_Outer> __type;\n-\n-        __inner_type_impl() = default;\n-        __inner_type_impl(const __inner_type_impl&) = default;\n-        __inner_type_impl(__inner_type_impl&&) = default;\n-\n-\ttemplate<typename _Alloc>\n-\t  __inner_type_impl(const __inner_type_impl<_Alloc>& __other)\n-\t  { }\n-\n-\ttemplate<typename _Alloc>\n-\t  __inner_type_impl(__inner_type_impl<_Alloc>&& __other)\n-\t  { }\n-\n-\t__type& _M_get(__type* __p) noexcept { return *__p; }\n-\tconst __type& _M_get(const __type* __p) const noexcept { return *__p; }\n-\n-\ttuple<> _M_tie() const noexcept { return tuple<>(); }\n-\n-\tbool operator==(const __inner_type_impl&) const noexcept\n-        { return true; }\n-      };\n-\n-      template<typename _Outer, typename _InnerHead, typename... _InnerTail>\n-      struct __inner_type_impl<_Outer, _InnerHead, _InnerTail...>\n-      {\n-\ttypedef scoped_allocator_adaptor<_InnerHead, _InnerTail...> __type;\n-\n-\t__inner_type_impl() = default;\n-        __inner_type_impl(const __inner_type_impl&) = default;\n-        __inner_type_impl(__inner_type_impl&&) = default;\n-\n-\ttemplate<typename... _Allocs>\n-\t  __inner_type_impl(const __inner_type_impl<_Allocs...>& __other)\n-\t  : _M_inner(__other._M_inner) { }\n-\n-\ttemplate<typename... _Allocs>\n-\t  __inner_type_impl(__inner_type_impl<_Allocs...>&& __other)\n-\t  : _M_inner(std::move(__other._M_inner)) { }\n-\n-\ttemplate<typename... _Args>\n-\t  explicit\n-\t  __inner_type_impl(_Args&&... __args)\n-\t  : _M_inner(std::forward<_Args>(__args)...) { }\n+  template<typename _Outer>\n+    struct __inner_type_impl<_Outer>\n+    {\n+      typedef scoped_allocator_adaptor<_Outer> __type;\n \n-\t__type& _M_get(void*) noexcept { return _M_inner; }\n-\tconst __type& _M_get(const void*) const noexcept { return _M_inner; }\n+      __inner_type_impl() = default;\n+      __inner_type_impl(const __inner_type_impl&) = default;\n+      __inner_type_impl(__inner_type_impl&&) = default;\n+      \n+      template<typename _Alloc>\n+      __inner_type_impl(const __inner_type_impl<_Alloc>& __other)\n+      { }\n+      \n+      template<typename _Alloc>\n+      __inner_type_impl(__inner_type_impl<_Alloc>&& __other)\n+      { }\n+      \n+      __type& \n+      _M_get(__type* __p) noexcept { return *__p; }\n \n-\ttuple<const _InnerHead&, const _InnerTail&...> _M_tie() const noexcept\n-\t{ return _M_inner._M_tie(); }\n+      const __type& \n+      _M_get(const __type* __p) const noexcept { return *__p; }\n+      \n+      tuple<> \n+      _M_tie() const noexcept { return tuple<>(); }\n+      \n+      bool \n+      operator==(const __inner_type_impl&) const noexcept\n+      { return true; }\n+    };\n \n-\tbool operator==(const __inner_type_impl& __other) const noexcept\n-\t{ return _M_inner == __other._M_inner; }\n+  template<typename _Outer, typename _InnerHead, typename... _InnerTail>\n+    struct __inner_type_impl<_Outer, _InnerHead, _InnerTail...>\n+    {\n+      typedef scoped_allocator_adaptor<_InnerHead, _InnerTail...> __type;\n+      \n+      __inner_type_impl() = default;\n+      __inner_type_impl(const __inner_type_impl&) = default;\n+      __inner_type_impl(__inner_type_impl&&) = default;\n+      \n+      template<typename... _Allocs>\n+      __inner_type_impl(const __inner_type_impl<_Allocs...>& __other)\n+      : _M_inner(__other._M_inner) { }\n+      \n+      template<typename... _Allocs>\n+      __inner_type_impl(__inner_type_impl<_Allocs...>&& __other)\n+      : _M_inner(std::move(__other._M_inner)) { }\n \n-      private:\n-\ttemplate<typename...> friend class __inner_type_impl;\n-\ttemplate<typename, typename...> friend class scoped_allocator_adaptor;\n+    template<typename... _Args>\n+      explicit\n+      __inner_type_impl(_Args&&... __args)\n+      : _M_inner(std::forward<_Args>(__args)...) { }\n \n-\t__type _M_inner;\n-      };\n+      __type& \n+      _M_get(void*) noexcept { return _M_inner; }\n+      \n+      const __type& \n+      _M_get(const void*) const noexcept { return _M_inner; }\n+      \n+      tuple<const _InnerHead&, const _InnerTail&...> \n+      _M_tie() const noexcept\n+      { return _M_inner._M_tie(); }\n+      \n+      bool \n+      operator==(const __inner_type_impl& __other) const noexcept\n+      { return _M_inner == __other._M_inner; }\n+      \n+    private:\n+      template<typename...> friend class __inner_type_impl;\n+      template<typename, typename...> friend class scoped_allocator_adaptor;\n+      \n+      __type _M_inner;\n+    };\n \n+  /// Primary class template.\n   template<typename _OuterAlloc, typename... _InnerAllocs>\n     class scoped_allocator_adaptor\n     : public _OuterAlloc\n@@ -180,7 +192,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       \n       template<typename _Tp, typename... _Args>\n-        void _M_construct(__uses_alloc0, _Tp* __p, _Args&&... __args)\n+        void \n+        _M_construct(__uses_alloc0, _Tp* __p, _Args&&... __args)\n         {\n           auto& __outer = __outermost(*this);\n \t  typedef typename std::decay<decltype(__outer)>::type __outer_type;\n@@ -192,7 +205,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       typedef __uses_alloc2<typename __inner_type::__type> __uses_alloc2_;\n \n       template<typename _Tp, typename... _Args>\n-        void _M_construct(__uses_alloc1_, _Tp* __p, _Args&&... __args)\n+        void \n+        _M_construct(__uses_alloc1_, _Tp* __p, _Args&&... __args)\n         {\n           auto& __outer = __outermost(*this);\n \t  typedef typename std::decay<decltype(__outer)>::type __outer_type;\n@@ -202,7 +216,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n         }\n \n       template<typename _Tp, typename... _Args>\n-        void _M_construct(__uses_alloc2_, _Tp* __p, _Args&&... __args)\n+        void \n+        _M_construct(__uses_alloc2_, _Tp* __p, _Args&&... __args)\n         {\n \t  auto& __outer = __outermost(*this);\n \t  typedef typename std::decay<decltype(__outer)>::type __outer_type;"}, {"sha": "d9889d7fe23b603c50c4626d5822dfd83d68b24b", "filename": "libstdc++-v3/include/std/sstream", "status": "modified", "additions": 26, "deletions": 25, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fsstream", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fsstream", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fsstream?ref=93c66bc68a2554cbb2ba11f90944314af378d16b", "patch": "@@ -85,7 +85,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       // Constructors:\n       /**\n        *  @brief  Starts with an empty string buffer.\n-       *  @param  mode  Whether the buffer can read, or write, or both.\n+       *  @param  __mode  Whether the buffer can read, or write, or both.\n        *\n        *  The default constructor initializes the parent class using its\n        *  own default ctor.\n@@ -97,8 +97,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       /**\n        *  @brief  Starts with an existing string buffer.\n-       *  @param  str  A string to copy as a starting buffer.\n-       *  @param  mode  Whether the buffer can read, or write, or both.\n+       *  @param  __str  A string to copy as a starting buffer.\n+       *  @param  __mode  Whether the buffer can read, or write, or both.\n        *\n        *  This constructor initializes the parent class using its\n        *  own default ctor.\n@@ -137,7 +137,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       /**\n        *  @brief  Setting a new buffer.\n-       *  @param  s  The string to use as a new sequence.\n+       *  @param  __s  The string to use as a new sequence.\n        *\n        *  Deallocates any previous stored sequence, then copies @a s to\n        *  use as a new one.\n@@ -185,12 +185,12 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       /**\n        *  @brief  Manipulates the buffer.\n-       *  @param  s  Pointer to a buffer area.\n-       *  @param  n  Size of @a s.\n+       *  @param  __s  Pointer to a buffer area.\n+       *  @param  __n  Size of @a __s.\n        *  @return  @c this\n        *\n-       *  If no buffer has already been created, and both @a s and @a n are\n-       *  non-zero, then @c s is used as a buffer; see\n+       *  If no buffer has already been created, and both @a __s and @a __n are\n+       *  non-zero, then @c __s is used as a buffer; see\n        *  http://gcc.gnu.org/onlinedocs/libstdc++/manual/bk01pt11ch25s02.html\n        *  for more.\n       */\n@@ -285,11 +285,11 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       // Constructors:\n       /**\n        *  @brief  Default constructor starts with an empty string buffer.\n-       *  @param  mode  Whether the buffer can read, or write, or both.\n+       *  @param  __mode  Whether the buffer can read, or write, or both.\n        *\n-       *  @c ios_base::in is automatically included in @a mode.\n+       *  @c ios_base::in is automatically included in @a __mode.\n        *\n-       *  Initializes @c sb using @c mode|in, and passes @c &sb to the base\n+       *  Initializes @c sb using @c __mode|in, and passes @c &sb to the base\n        *  class initializer.  Does not allocate any buffer.\n        *\n        *  That's a lie.  We initialize the base class with NULL, because the\n@@ -302,8 +302,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       /**\n        *  @brief  Starts with an existing string buffer.\n-       *  @param  str  A string to copy as a starting buffer.\n-       *  @param  mode  Whether the buffer can read, or write, or both.\n+       *  @param  __str  A string to copy as a starting buffer.\n+       *  @param  __mode  Whether the buffer can read, or write, or both.\n        *\n        *  @c ios_base::in is automatically included in @a mode.\n        *\n@@ -349,7 +349,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       /**\n        *  @brief  Setting a new buffer.\n-       *  @param  s  The string to use as a new sequence.\n+       *  @param  __s  The string to use as a new sequence.\n        *\n        *  Calls @c rdbuf()->str(s).\n       */\n@@ -395,7 +395,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       // Constructors/destructor:\n       /**\n        *  @brief  Default constructor starts with an empty string buffer.\n-       *  @param  mode  Whether the buffer can read, or write, or both.\n+       *  @param  __mode  Whether the buffer can read, or write, or both.\n        *\n        *  @c ios_base::out is automatically included in @a mode.\n        *\n@@ -412,8 +412,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       /**\n        *  @brief  Starts with an existing string buffer.\n-       *  @param  str  A string to copy as a starting buffer.\n-       *  @param  mode  Whether the buffer can read, or write, or both.\n+       *  @param  __str  A string to copy as a starting buffer.\n+       *  @param  __mode  Whether the buffer can read, or write, or both.\n        *\n        *  @c ios_base::out is automatically included in @a mode.\n        *\n@@ -459,7 +459,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       /**\n        *  @brief  Setting a new buffer.\n-       *  @param  s  The string to use as a new sequence.\n+       *  @param  __s  The string to use as a new sequence.\n        *\n        *  Calls @c rdbuf()->str(s).\n       */\n@@ -505,10 +505,11 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       // Constructors/destructors\n       /**\n        *  @brief  Default constructor starts with an empty string buffer.\n-       *  @param  mode  Whether the buffer can read, or write, or both.\n+       *  @param  __m  Whether the buffer can read, or write, or both.\n        *\n-       *  Initializes @c sb using @c mode, and passes @c &sb to the base\n-       *  class initializer.  Does not allocate any buffer.\n+       *  Initializes @c sb using the mode from @c __m, and passes @c\n+       *  &sb to the base class initializer.  Does not allocate any\n+       *  buffer.\n        *\n        *  That's a lie.  We initialize the base class with NULL, because the\n        *  string class does its own memory management.\n@@ -520,10 +521,10 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       /**\n        *  @brief  Starts with an existing string buffer.\n-       *  @param  str  A string to copy as a starting buffer.\n-       *  @param  mode  Whether the buffer can read, or write, or both.\n+       *  @param  __str  A string to copy as a starting buffer.\n+       *  @param  __m  Whether the buffer can read, or write, or both.\n        *\n-       *  Initializes @c sb using @a str and @c mode, and passes @c &sb\n+       *  Initializes @c sb using @a __str and @c __m, and passes @c &sb\n        *  to the base class initializer.\n        *\n        *  That's a lie.  We initialize the base class with NULL, because the\n@@ -565,7 +566,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       /**\n        *  @brief  Setting a new buffer.\n-       *  @param  s  The string to use as a new sequence.\n+       *  @param  __s  The string to use as a new sequence.\n        *\n        *  Calls @c rdbuf()->str(s).\n       */"}, {"sha": "82a67da42d4536b6b5131fe56ea068f2a948c1e1", "filename": "libstdc++-v3/include/std/streambuf", "status": "modified", "additions": 63, "deletions": 45, "changes": 108, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstreambuf", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstreambuf", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstreambuf?ref=93c66bc68a2554cbb2ba11f90944314af378d16b", "patch": "@@ -198,13 +198,13 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       // [27.5.2.2.1] locales\n       /**\n        *  @brief  Entry point for imbue().\n-       *  @param  loc  The new locale.\n+       *  @param  __loc  The new locale.\n        *  @return  The previous locale.\n        *\n-       *  Calls the derived imbue(loc).\n+       *  Calls the derived imbue(__loc).\n       */\n       locale \n-      pubimbue(const locale &__loc)\n+      pubimbue(const locale& __loc)\n       {\n \tlocale __tmp(this->getloc());\n \tthis->imbue(__loc);\n@@ -237,16 +237,34 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       pubsetbuf(char_type* __s, streamsize __n) \n       { return this->setbuf(__s, __n); }\n \n+      /**\n+       *  @brief  Alters the stream position.\n+       *  @param  __off  Offset.\n+       *  @param  __way  Value for ios_base::seekdir.\n+       *  @param  __mode Value for ios_base::openmode.\n+       *\n+       *  Calls virtual seekoff function.\n+      */\n       pos_type \n       pubseekoff(off_type __off, ios_base::seekdir __way, \n \t\t ios_base::openmode __mode = ios_base::in | ios_base::out)\n       { return this->seekoff(__off, __way, __mode); }\n \n+      /**\n+       *  @brief  Alters the stream position.\n+       *  @param  __sp  Position\n+       *  @param  __mode Value for ios_base::openmode.\n+       *\n+       *  Calls virtual seekpos function.\n+      */\n       pos_type \n       pubseekpos(pos_type __sp,\n \t\t ios_base::openmode __mode = ios_base::in | ios_base::out)\n       { return this->seekpos(__sp, __mode); }\n \n+      /**\n+       *  @brief  Calls virtual sync function.\n+      */\n       int \n       pubsync() { return this->sync(); }\n       //@}\n@@ -327,11 +345,11 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       /**\n        *  @brief  Entry point for xsgetn.\n-       *  @param  s  A buffer area.\n-       *  @param  n  A count.\n+       *  @param  __s  A buffer area.\n+       *  @param  __n  A count.\n        *\n-       *  Returns xsgetn(s,n).  The effect is to fill @a s[0] through\n-       *  @a s[n-1] with characters from the input sequence, if possible.\n+       *  Returns xsgetn(__s,__n).  The effect is to fill @a __s[0] through\n+       *  @a __s[__n-1] with characters from the input sequence, if possible.\n       */\n       streamsize \n       sgetn(char_type* __s, streamsize __n)\n@@ -340,13 +358,13 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       // [27.5.2.2.4] putback\n       /**\n        *  @brief  Pushing characters back into the input stream.\n-       *  @param  c  The character to push back.\n+       *  @param  __c  The character to push back.\n        *  @return  The previous character, if possible.\n        *\n-       *  Similar to sungetc(), but @a c is pushed onto the stream\n+       *  Similar to sungetc(), but @a __c is pushed onto the stream\n        *  instead of <em>the previous character.</em> If successful,\n        *  the next character fetched from the input stream will be @a\n-       *  c.\n+       *  __c.\n       */\n       int_type \n       sputbackc(char_type __c)\n@@ -390,15 +408,15 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       // [27.5.2.2.5] put area\n       /**\n        *  @brief  Entry point for all single-character output functions.\n-       *  @param  c  A character to output.\n-       *  @return  @a c, if possible.\n+       *  @param  __c  A character to output.\n+       *  @return  @a __c, if possible.\n        *\n        *  One of two public output functions.\n        *\n        *  If a write position is available for the output sequence (i.e.,\n-       *  the buffer is not full), stores @a c in that position, increments\n-       *  the position, and returns @c traits::to_int_type(c).  If a write\n-       *  position is not available, returns @c overflow(c).\n+       *  the buffer is not full), stores @a __c in that position, increments\n+       *  the position, and returns @c traits::to_int_type(__c).  If a write\n+       *  position is not available, returns @c overflow(__c).\n       */\n       int_type \n       sputc(char_type __c)\n@@ -417,14 +435,14 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       /**\n        *  @brief  Entry point for all single-character output functions.\n-       *  @param  s  A buffer read area.\n-       *  @param  n  A count.\n+       *  @param  __s  A buffer read area.\n+       *  @param  __n  A count.\n        *\n        *  One of two public output functions.\n        *\n        *\n-       *  Returns xsputn(s,n).  The effect is to write @a s[0] through\n-       *  @a s[n-1] to the output sequence, if possible.\n+       *  Returns xsputn(__s,__n).  The effect is to write @a __s[0] through\n+       *  @a __s[__n-1] to the output sequence, if possible.\n       */\n       streamsize \n       sputn(const char_type* __s, streamsize __n)\n@@ -470,7 +488,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       /**\n        *  @brief  Moving the read position.\n-       *  @param  n  The delta by which to move.\n+       *  @param  __n  The delta by which to move.\n        *\n        *  This just advances the read position without returning any data.\n       */\n@@ -479,11 +497,11 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       /**\n        *  @brief  Setting the three read area pointers.\n-       *  @param  gbeg  A pointer.\n-       *  @param  gnext  A pointer.\n-       *  @param  gend  A pointer.\n-       *  @post  @a gbeg == @c eback(), @a gnext == @c gptr(), and\n-       *         @a gend == @c egptr()\n+       *  @param  __gbeg  A pointer.\n+       *  @param  __gnext  A pointer.\n+       *  @param  __gend  A pointer.\n+       *  @post  @a __gbeg == @c eback(), @a __gnext == @c gptr(), and\n+       *         @a __gend == @c egptr()\n       */\n       void \n       setg(char_type* __gbeg, char_type* __gnext, char_type* __gend)\n@@ -517,7 +535,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       /**\n        *  @brief  Moving the write position.\n-       *  @param  n  The delta by which to move.\n+       *  @param  __n  The delta by which to move.\n        *\n        *  This just advances the write position without returning any data.\n       */\n@@ -526,10 +544,10 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       /**\n        *  @brief  Setting the three write area pointers.\n-       *  @param  pbeg  A pointer.\n-       *  @param  pend  A pointer.\n-       *  @post  @a pbeg == @c pbase(), @a pbeg == @c pptr(), and\n-       *         @a pend == @c epptr()\n+       *  @param  __pbeg  A pointer.\n+       *  @param  __pend  A pointer.\n+       *  @post  @a __pbeg == @c pbase(), @a __pbeg == @c pptr(), and\n+       *         @a __pend == @c epptr()\n       */\n       void \n       setp(char_type* __pbeg, char_type* __pend)\n@@ -542,7 +560,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       // [27.5.2.4.1] locales\n       /**\n        *  @brief  Changes translations.\n-       *  @param  loc  A new locale.\n+       *  @param  __loc  A new locale.\n        *\n        *  Translations done during I/O which depend on the current\n        *  locale are changed by this call.  The standard adds,\n@@ -553,7 +571,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *  @note  Base class version does nothing.\n       */\n       virtual void \n-      imbue(const locale&) \n+      imbue(const locale& __loc) \n       { }\n \n       // [27.5.2.4.2] buffer management and positioning\n@@ -630,12 +648,12 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       /**\n        *  @brief  Multiple character extraction.\n-       *  @param  s  A buffer area.\n-       *  @param  n  Maximum number of characters to assign.\n+       *  @param  __s  A buffer area.\n+       *  @param  __n  Maximum number of characters to assign.\n        *  @return  The number of characters assigned.\n        *\n-       *  Fills @a s[0] through @a s[n-1] with characters from the input\n-       *  sequence, as if by @c sbumpc().  Stops when either @a n characters\n+       *  Fills @a __s[0] through @a __s[__n-1] with characters from the input\n+       *  sequence, as if by @c sbumpc().  Stops when either @a __n characters\n        *  have been copied, or when @c traits::eof() would be copied.\n        *\n        *  It is expected that derived classes provide a more efficient\n@@ -693,25 +711,25 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       // [27.5.2.4.4] putback\n       /**\n        *  @brief  Tries to back up the input sequence.\n-       *  @param  c  The character to be inserted back into the sequence.\n+       *  @param  __c  The character to be inserted back into the sequence.\n        *  @return  eof() on failure, <em>some other value</em> on success\n        *  @post  The constraints of @c gptr(), @c eback(), and @c pptr()\n        *         are the same as for @c underflow().\n        *\n        *  @note  Base class version does nothing, returns eof().\n       */\n       virtual int_type \n-      pbackfail(int_type /* __c */  = traits_type::eof())\n+      pbackfail(int_type __c  = traits_type::eof())\n       { return traits_type::eof(); }\n \n       // Put area:\n       /**\n        *  @brief  Multiple character insertion.\n-       *  @param  s  A buffer area.\n-       *  @param  n  Maximum number of characters to write.\n+       *  @param  __s  A buffer area.\n+       *  @param  __n  Maximum number of characters to write.\n        *  @return  The number of characters written.\n        *\n-       *  Writes @a s[0] through @a s[n-1] to the output sequence, as if\n+       *  Writes @a __s[0] through @a __s[__n-1] to the output sequence, as if\n        *  by @c sputc().  Stops when either @a n characters have been\n        *  copied, or when @c sputc() would return @c traits::eof().\n        *\n@@ -724,17 +742,17 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       /**\n        *  @brief  Consumes data from the buffer; writes to the\n        *          controlled sequence.\n-       *  @param  c  An additional character to consume.\n+       *  @param  __c  An additional character to consume.\n        *  @return  eof() to indicate failure, something else (usually\n-       *           @a c, or not_eof())\n+       *           @a __c, or not_eof())\n        *\n        *  Informally, this function is called when the output buffer\n        *  is full (or does not exist, as buffering need not actually\n        *  be done).  If a buffer exists, it is @a consumed, with\n        *  <em>some effect</em> on the controlled sequence.\n        *  (Typically, the buffer is written out to the sequence\n        *  verbatim.)  In either case, the character @a c is also\n-       *  written out, if @a c is not @c eof().\n+       *  written out, if @a __c is not @c eof().\n        *\n        *  For a formal definition of this function, see a good text\n        *  such as Langer & Kreft, or [27.5.2.4.5]/3-7.\n@@ -745,7 +763,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *  @note  Base class version does nothing, returns eof().\n       */\n       virtual int_type \n-      overflow(int_type /* __c */ = traits_type::eof())\n+      overflow(int_type __c  = traits_type::eof())\n       { return traits_type::eof(); }\n \n #if _GLIBCXX_USE_DEPRECATED"}, {"sha": "3b155c525d852a2d04ea0e5a12c7b3238f0d7e07", "filename": "libstdc++-v3/include/std/valarray", "status": "modified", "additions": 55, "deletions": 55, "changes": 110, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fvalarray", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fvalarray", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fvalarray?ref=93c66bc68a2554cbb2ba11f90944314af378d16b", "patch": "@@ -110,7 +110,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n    *  one-dimensional array from which different multidimensional subsets can\n    *  be accessed and modified.\n    *  \n-   *  @param  Tp  Type of object in the array.\n+   *  @tparam  _Tp  Type of object in the array.\n    */\n   template<class _Tp> \n     class valarray\n@@ -173,80 +173,80 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *\n        *  Assign elements of array to values in @a v.\n        *\n-       *  @param  v  Valarray to get values from.\n+       *  @param  __v  Valarray to get values from.\n        */\n-      valarray<_Tp>& operator=(const valarray<_Tp>&);\n+      valarray<_Tp>& operator=(const valarray<_Tp>& __v);\n \n #ifdef __GXX_EXPERIMENTAL_CXX0X__\n       /**\n        *  @brief  Move assign elements to an array.\n        *\n        *  Move assign elements of array to values in @a v.\n        *\n-       *  @param  v  Valarray to get values from.\n+       *  @param  __v  Valarray to get values from.\n        */\n-      valarray<_Tp>& operator=(valarray<_Tp>&&) noexcept;\n+      valarray<_Tp>& operator=(valarray<_Tp>&& __v) noexcept;\n #endif\n \n       /**\n        *  @brief  Assign elements to a value.\n        *\n        *  Assign all elements of array to @a t.\n        *\n-       *  @param  t  Value for elements.\n+       *  @param  __t  Value for elements.\n        */\n-      valarray<_Tp>& operator=(const _Tp&);\n+      valarray<_Tp>& operator=(const _Tp& __t);\n \n       /**\n        *  @brief  Assign elements to an array subset.\n        *\n        *  Assign elements of array to values in @a sa.  Results are undefined\n        *  if @a sa does not have the same size as this array.\n        *\n-       *  @param  sa  Array slice to get values from.\n+       *  @param  __sa  Array slice to get values from.\n        */\n-      valarray<_Tp>& operator=(const slice_array<_Tp>&);\n+      valarray<_Tp>& operator=(const slice_array<_Tp>& __sa);\n \n       /**\n        *  @brief  Assign elements to an array subset.\n        *\n        *  Assign elements of array to values in @a ga.  Results are undefined\n        *  if @a ga does not have the same size as this array.\n        *\n-       *  @param  ga  Array slice to get values from.\n+       *  @param  __ga  Array slice to get values from.\n        */\n-      valarray<_Tp>& operator=(const gslice_array<_Tp>&);\n+      valarray<_Tp>& operator=(const gslice_array<_Tp>& __ga);\n \n       /**\n        *  @brief  Assign elements to an array subset.\n        *\n        *  Assign elements of array to values in @a ma.  Results are undefined\n        *  if @a ma does not have the same size as this array.\n        *\n-       *  @param  ma  Array slice to get values from.\n+       *  @param  __ma  Array slice to get values from.\n        */\n-      valarray<_Tp>& operator=(const mask_array<_Tp>&);\n+      valarray<_Tp>& operator=(const mask_array<_Tp>& __ma);\n \n       /**\n        *  @brief  Assign elements to an array subset.\n        *\n        *  Assign elements of array to values in @a ia.  Results are undefined\n        *  if @a ia does not have the same size as this array.\n        *\n-       *  @param  ia  Array slice to get values from.\n+       *  @param  __ia  Array slice to get values from.\n        */\n-      valarray<_Tp>& operator=(const indirect_array<_Tp>&);\n+      valarray<_Tp>& operator=(const indirect_array<_Tp>& __ia);\n \n #ifdef __GXX_EXPERIMENTAL_CXX0X__\n       /**\n        *  @brief  Assign elements to an initializer_list.\n        *\n-       *  Assign elements of array to values in @a l.  Results are undefined\n-       *  if @a l does not have the same size as this array.\n+       *  Assign elements of array to values in @a __l.  Results are undefined\n+       *  if @a __l does not have the same size as this array.\n        *\n-       *  @param  l  initializer_list to get values from.\n+       *  @param  __l  initializer_list to get values from.\n        */\n-      valarray& operator=(initializer_list<_Tp>);\n+      valarray& operator=(initializer_list<_Tp> __l);\n #endif\n \n       template<class _Dom> valarray<_Tp>&\n@@ -256,10 +256,10 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       /**\n        *  Return a reference to the i'th array element.  \n        *\n-       *  @param  i  Index of element to return.\n+       *  @param  __i  Index of element to return.\n        *  @return  Reference to the i'th element.\n        */\n-      _Tp&                operator[](size_t);\n+      _Tp&                operator[](size_t __i);\n \n       // _GLIBCXX_RESOLVE_LIB_DEFECTS\n       // 389. Const overload of valarray::operator[] returns by value.\n@@ -273,10 +273,10 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *  indicated by the slice argument.  The new valarray has the same size\n        *  as the input slice.  @see slice.\n        *\n-       *  @param  s  The source slice.\n-       *  @return  New valarray containing elements in @a s.\n+       *  @param  __s  The source slice.\n+       *  @return  New valarray containing elements in @a __s.\n        */\n-      _Expr<_SClos<_ValArray, _Tp>, _Tp> operator[](slice) const;\n+      _Expr<_SClos<_ValArray, _Tp>, _Tp> operator[](slice __s) const;\n \n       /**\n        *  @brief  Return a reference to an array subset.\n@@ -285,21 +285,21 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *  indicated by the slice argument.  The new valarray has the same size\n        *  as the input slice.  @see slice.\n        *\n-       *  @param  s  The source slice.\n-       *  @return  New valarray containing elements in @a s.\n+       *  @param  __s  The source slice.\n+       *  @return  New valarray containing elements in @a __s.\n        */\n-      slice_array<_Tp>    operator[](slice);\n+      slice_array<_Tp>    operator[](slice __s);\n \n       /**\n        *  @brief  Return an array subset.\n        *\n        *  Returns a slice_array referencing the elements of the array\n        *  indicated by the slice argument.  @see gslice.\n        *\n-       *  @param  s  The source slice.\n-       *  @return  Slice_array referencing elements indicated by @a s.\n+       *  @param  __s  The source slice.\n+       *  @return  Slice_array referencing elements indicated by @a __s.\n        */\n-      _Expr<_GClos<_ValArray, _Tp>, _Tp> operator[](const gslice&) const;\n+      _Expr<_GClos<_ValArray, _Tp>, _Tp> operator[](const gslice& __s) const;\n \n       /**\n        *  @brief  Return a reference to an array subset.\n@@ -308,10 +308,10 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *  indicated by the gslice argument.  The new valarray has\n        *  the same size as the input gslice.  @see gslice.\n        *\n-       *  @param  s  The source gslice.\n-       *  @return  New valarray containing elements in @a s.\n+       *  @param  __s  The source gslice.\n+       *  @return  New valarray containing elements in @a __s.\n        */\n-      gslice_array<_Tp>   operator[](const gslice&);\n+      gslice_array<_Tp>   operator[](const gslice& __s);\n \n       /**\n        *  @brief  Return an array subset.\n@@ -322,10 +322,10 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *  the new valarray.  Each element of the array is added to the return\n        *  valarray if the corresponding element of the argument is true.\n        *\n-       *  @param  m  The valarray bitmask.\n-       *  @return  New valarray containing elements indicated by @a m.\n+       *  @param  __m  The valarray bitmask.\n+       *  @return  New valarray containing elements indicated by @a __m.\n        */\n-      valarray<_Tp>       operator[](const valarray<bool>&) const;\n+      valarray<_Tp>       operator[](const valarray<bool>& __m) const;\n \n       /**\n        *  @brief  Return a reference to an array subset.\n@@ -336,10 +336,10 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *  subset.  Elements of the array are part of the subset if the\n        *  corresponding element of the argument is true.\n        *\n-       *  @param  m  The valarray bitmask.\n-       *  @return  New valarray containing elements indicated by @a m.\n+       *  @param  __m  The valarray bitmask.\n+       *  @return  New valarray containing elements indicated by @a __m.\n        */\n-      mask_array<_Tp>     operator[](const valarray<bool>&);\n+      mask_array<_Tp>     operator[](const valarray<bool>& __m);\n \n       /**\n        *  @brief  Return an array subset.\n@@ -349,11 +349,11 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *  interpreted as the indices of elements of this valarray to copy to\n        *  the return valarray.\n        *\n-       *  @param  i  The valarray element index list.\n-       *  @return  New valarray containing elements in @a s.\n+       *  @param  __i  The valarray element index list.\n+       *  @return  New valarray containing elements in @a __s.\n        */\n       _Expr<_IClos<_ValArray, _Tp>, _Tp>\n-        operator[](const valarray<size_t>&) const;\n+        operator[](const valarray<size_t>& __i) const;\n \n       /**\n        *  @brief  Return a reference to an array subset.\n@@ -364,10 +364,10 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *  in the subset.  The returned indirect_array refers to these\n        *  elements.\n        *\n-       *  @param  i  The valarray element index list.\n-       *  @return  Indirect_array referencing elements in @a i.\n+       *  @param  __i  The valarray element index list.\n+       *  @return  Indirect_array referencing elements in @a __i.\n        */\n-      indirect_array<_Tp> operator[](const valarray<size_t>&);\n+      indirect_array<_Tp> operator[](const valarray<size_t>& __i);\n \n       // _lib.valarray.unary_ unary operators:\n       ///  Return a new valarray by applying unary + to each element.\n@@ -499,10 +499,10 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *  Positive arguments shift toward index 0, discarding elements [0, n).\n        *  Negative arguments discard elements from the top of the array.\n        *\n-       *  @param  n  Number of element positions to shift.\n+       *  @param  __n  Number of element positions to shift.\n        *  @return  New valarray with elements in shifted positions.\n        */\n-      valarray<_Tp> shift (int) const;\n+      valarray<_Tp> shift (int __n) const;\n \n       /**\n        *  @brief  Return a rotated array.\n@@ -516,10 +516,10 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *  Positive arguments shift toward index 0, wrapping around the top.\n        *  Negative arguments shift towards the top, wrapping around to 0.\n        *\n-       *  @param  n  Number of element positions to rotate.\n+       *  @param  __n  Number of element positions to rotate.\n        *  @return  New valarray with elements in shifted positions.\n        */\n-      valarray<_Tp> cshift(int) const;\n+      valarray<_Tp> cshift(int __n) const;\n \n       /**\n        *  @brief  Apply a function to the array.\n@@ -551,8 +551,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *  Resize this array to @a size and set all elements to @a c.  All\n        *  references and iterators are invalidated.\n        *\n-       *  @param  size  New array size.\n-       *  @param  c  New value for all elements.\n+       *  @param  __size  New array size.\n+       *  @param  __c  New value for all elements.\n        */\n       void resize(size_t __size, _Tp __c = _Tp());\n \n@@ -1176,7 +1176,7 @@ _DEFINE_BINARY_OPERATOR(>=, __greater_equal)\n   /**\n    *  @brief  Return an iterator pointing to the first element of\n    *          the valarray.\n-   *  @param  va  valarray.\n+   *  @param  __va  valarray.\n    */\n   template<class _Tp>\n     inline _Tp*\n@@ -1186,7 +1186,7 @@ _DEFINE_BINARY_OPERATOR(>=, __greater_equal)\n   /**\n    *  @brief  Return an iterator pointing to the first element of\n    *          the const valarray.\n-   *  @param  va  valarray.\n+   *  @param  __va  valarray.\n    */\n   template<class _Tp>\n     inline const _Tp*\n@@ -1196,7 +1196,7 @@ _DEFINE_BINARY_OPERATOR(>=, __greater_equal)\n   /**\n    *  @brief  Return an iterator pointing to one past the last element of\n    *          the valarray.\n-   *  @param  va  valarray.\n+   *  @param  __va  valarray.\n    */\n   template<class _Tp>\n     inline _Tp*\n@@ -1206,7 +1206,7 @@ _DEFINE_BINARY_OPERATOR(>=, __greater_equal)\n   /**\n    *  @brief  Return an iterator pointing to one past the last element of\n    *          the const valarray.\n-   *  @param  va  valarray.\n+   *  @param  __va  valarray.\n    */\n   template<class _Tp>\n     inline const _Tp*"}, {"sha": "0dc8ae90f066b296375443e3de08b0fb601d26c2", "filename": "libstdc++-v3/libsupc++/initializer_list", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Finitializer_list", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Finitializer_list", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Finitializer_list?ref=93c66bc68a2554cbb2ba11f90944314af378d16b", "patch": "@@ -80,7 +80,7 @@ namespace std\n   /**\n    *  @brief  Return an iterator pointing to the first element of\n    *          the initilizer_list.\n-   *  @param  il  Initializer list.\n+   *  @param  __ils  Initializer list.\n    */\n   template<class _Tp>\n     constexpr const _Tp*\n@@ -90,7 +90,7 @@ namespace std\n   /**\n    *  @brief  Return an iterator pointing to one past the last element\n    *          of the initilizer_list.\n-   *  @param  il  Initializer list.\n+   *  @param  __ils  Initializer list.\n    */\n   template<class _Tp>\n     constexpr const _Tp*"}, {"sha": "38c0c48a5ecba747850f0ac9b691c2e1649854ab", "filename": "libstdc++-v3/testsuite/23_containers/list/requirements/dr438/assign_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Frequirements%2Fdr438%2Fassign_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Frequirements%2Fdr438%2Fassign_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Frequirements%2Fdr438%2Fassign_neg.cc?ref=93c66bc68a2554cbb2ba11f90944314af378d16b", "patch": "@@ -18,7 +18,7 @@\n // <http://www.gnu.org/licenses/>.\n \n // { dg-do compile }\n-// { dg-error \"no matching\" \"\" { target *-*-* } 1497 }\n+// { dg-error \"no matching\" \"\" { target *-*-* } 1498 }\n \n #include <list>\n "}, {"sha": "1340dc84d6524354025eebf1909eba595c6e040c", "filename": "libstdc++-v3/testsuite/23_containers/list/requirements/dr438/constructor_1_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Frequirements%2Fdr438%2Fconstructor_1_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Frequirements%2Fdr438%2Fconstructor_1_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Frequirements%2Fdr438%2Fconstructor_1_neg.cc?ref=93c66bc68a2554cbb2ba11f90944314af378d16b", "patch": "@@ -18,7 +18,7 @@\n // <http://www.gnu.org/licenses/>.\n \n // { dg-do compile }\n-// { dg-error \"no matching\" \"\" { target *-*-* } 1453 }\n+// { dg-error \"no matching\" \"\" { target *-*-* } 1454 }\n \n #include <list>\n "}, {"sha": "4ac68432a0c6f03c4e6222ab897d950d304c7e79", "filename": "libstdc++-v3/testsuite/23_containers/list/requirements/dr438/constructor_2_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Frequirements%2Fdr438%2Fconstructor_2_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Frequirements%2Fdr438%2Fconstructor_2_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Frequirements%2Fdr438%2Fconstructor_2_neg.cc?ref=93c66bc68a2554cbb2ba11f90944314af378d16b", "patch": "@@ -18,7 +18,7 @@\n // <http://www.gnu.org/licenses/>.\n \n // { dg-do compile }\n-// { dg-error \"no matching\" \"\" { target *-*-* } 1453 }\n+// { dg-error \"no matching\" \"\" { target *-*-* } 1454 }\n \n #include <list>\n #include <utility>"}, {"sha": "1fa2ed6d94106b427ab3402d3a2d74958cba3fe6", "filename": "libstdc++-v3/testsuite/23_containers/list/requirements/dr438/insert_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Frequirements%2Fdr438%2Finsert_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93c66bc68a2554cbb2ba11f90944314af378d16b/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Frequirements%2Fdr438%2Finsert_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Frequirements%2Fdr438%2Finsert_neg.cc?ref=93c66bc68a2554cbb2ba11f90944314af378d16b", "patch": "@@ -18,7 +18,7 @@\n // <http://www.gnu.org/licenses/>.\n \n // { dg-do compile }\n-// { dg-error \"no matching\" \"\" { target *-*-* } 1453 }\n+// { dg-error \"no matching\" \"\" { target *-*-* } 1454 }\n \n #include <list>\n "}]}