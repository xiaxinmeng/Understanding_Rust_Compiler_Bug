{"sha": "b6aa31c56a6255282d71d5dd2df2c05f66d8a374", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjZhYTMxYzU2YTYyNTUyODJkNzFkNWRkMmRmMmMwNWY2NmQ4YTM3NA==", "commit": {"author": {"name": "Jason Thorpe", "email": "thorpej@gcc.gnu.org", "date": "2002-10-01T22:24:02Z"}, "committer": {"name": "Jason Thorpe", "email": "thorpej@gcc.gnu.org", "date": "2002-10-01T22:24:02Z"}, "message": "Oops, this file missed in previous checkin.\n\n2002-10-01  Matt Thomas  <matt@3am-software.com>\n            Jason Thorpe  <thorpej@wasabisystems.com>\n\n* config.gcc (vax-*-netbsdelf*): Enable configuration.\n* config/elfos.h (PCC_BITFIELD_TYPE_MATTERS): Define only\nif not already defined.\n* config/vax/elf.h: New file.\n* config/vax/netbsd-elf.h: New file.\n* config/vax/vax.c: Include \"debug.h\".\n(vax_output_function_prologue): Add dwarf2 support.  Use\nMAIN_NAME_P when checking for VMS_TARGET stack adjust.\n* config/vax/vax.h (CONST_OK_FOR_LETTER_P): Add cases for\n'J' [0..63], 'K' [-128..127], 'L' [-32768..32767],\n'M' [0..255], 'N' [0..65535], and, 'O' [-63..-1].\n(VAX_ISTREAM_SYNC): Remove.\n(INITIALIZE_TRAMPOLINE): Use gen_sync_istream.\n(JUMP_TABLES_IN_TEXT_SECTION): Define.\n(ASM_OUTPUT_REG_POP): Use reg_names for the stack pointer.\n(ASM_OUTPUT_ADDR_VEC_ELT): Use ASM_GENERATE_INTERNAL_LABEL\nand assemble_name.\n(ASM_OUTPUT_ADDR_DIFF_ELT): Likewise.\n(PRINT_OPERAND_PUNCT_VALID_P): Accept '|'.\n(PRINT_OPERAND): Output REGISTER_PREFIX for '|'.\n(INCOMING_RETURN_ADDR_RTX): Define.\n* config/vax/vax.md (VUNSPEC_BLOCKAGE)\n(VUNSPEC_SYNC_ISTREAM): Define.\n(blockage): Use VUNSPEC_BLOCKAGE.\n(sync_istream): New insn.\n\n\n2002-10-01  Richard Henderson  <rth@redhat.com>\n\n* config/vax/vax.md (call_pop, *call_pop, call_value_pop)\n(*call_value_pop, call, call_value): Add dwarf2 EH support.\n(*call): New insn.\n\nFrom-SVN: r57711", "tree": {"sha": "6a731cd683adde079ac52882f7692e90b16f85d8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6a731cd683adde079ac52882f7692e90b16f85d8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b6aa31c56a6255282d71d5dd2df2c05f66d8a374", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6aa31c56a6255282d71d5dd2df2c05f66d8a374", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b6aa31c56a6255282d71d5dd2df2c05f66d8a374", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6aa31c56a6255282d71d5dd2df2c05f66d8a374/comments", "author": null, "committer": null, "parents": [{"sha": "a1d1a0f9b0fbb8251eac485fe430feb2bcf48056", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1d1a0f9b0fbb8251eac485fe430feb2bcf48056", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a1d1a0f9b0fbb8251eac485fe430feb2bcf48056"}], "stats": {"total": 66, "additions": 53, "deletions": 13}, "files": [{"sha": "c0db2175e81ae58ac09f67f1a08c068924afc56e", "filename": "gcc/config/vax/vax.h", "status": "modified", "additions": 53, "deletions": 13, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6aa31c56a6255282d71d5dd2df2c05f66d8a374/gcc%2Fconfig%2Fvax%2Fvax.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6aa31c56a6255282d71d5dd2df2c05f66d8a374/gcc%2Fconfig%2Fvax%2Fvax.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvax%2Fvax.h?ref=b6aa31c56a6255282d71d5dd2df2c05f66d8a374", "patch": "@@ -288,16 +288,28 @@ enum reg_class { NO_REGS, ALL_REGS, LIM_REG_CLASSES };\n \n #define REG_CLASS_FROM_LETTER(C) NO_REGS\n \n-/* The letters I, J, K, L and M in a register constraint string\n+/* The letters I, J, K, L, M, N, and O in a register constraint string\n    can be used to stand for particular ranges of immediate operands.\n    This macro defines what the ranges are.\n    C is the letter, and VALUE is a constant value.\n    Return 1 if VALUE is in the range specified by C.\n \n-   `I' is the constant zero.  */\n+   `I' is the constant zero.\n+   `J' is a value between 0 .. 63 (inclusive)\n+   `K' is a value between -128 and 127 (inclusive)\n+   'L' is a value between -32768 and 32767 (inclusive)\n+   `M' is a value between 0 and 255 (inclusive)\n+   'N' is a value between 0 and 65535 (inclusive)\n+   `O' is a value between -63 and -1 (inclusive)  */\n \n #define CONST_OK_FOR_LETTER_P(VALUE, C) \\\n-  ((C) == 'I' ? (VALUE) == 0\t\t\\\n+  (  (C) == 'I' ?\t(VALUE) == 0\t\t\t\t\\\n+   : (C) == 'J' ?\t0 <= (VALUE) && (VALUE) < 64\t\t\\\n+   : (C) == 'O' ?\t-63 <= (VALUE) && (VALUE) < 0\t\t\\\n+   : (C) == 'K' ?\t-128 <= (VALUE) && (VALUE) < 128\t\\\n+   : (C) == 'M' ?\t0 <= (VALUE) && (VALUE) < 256\t\t\\\n+   : (C) == 'L' ?\t-32768 <= (VALUE) && (VALUE) < 32768\t\\\n+   : (C) == 'N' ?\t0 <= (VALUE) && (VALUE) < 65536\t\t\\\n    : 0)\n \n /* Similar, but for floating constants, and defining letters G and H.\n@@ -505,9 +517,6 @@ enum reg_class { NO_REGS, ALL_REGS, LIM_REG_CLASSES };\n    FNADDR is an RTX for the address of the function's pure code.\n    CXT is an RTX for the static chain value for the function.  */\n \n-/* Allow this be overriden with the correct register prefixes.  */\n-#define VAX_ISTREAM_SYNC \"movpsl -(sp)\\n\\tpushal 1(pc)\\n\\trei\"\n-\n /* We copy the register-mask from the function's pure code\n    to the start of the trampoline.  */\n #define INITIALIZE_TRAMPOLINE(TRAMP, FNADDR, CXT)\t\t\t\\\n@@ -517,7 +526,7 @@ enum reg_class { NO_REGS, ALL_REGS, LIM_REG_CLASSES };\n   emit_move_insn (gen_rtx_MEM (SImode, plus_constant (TRAMP, 4)), CXT);\t\\\n   emit_move_insn (gen_rtx_MEM (SImode, plus_constant (TRAMP, 11)),\t\\\n \t\t  plus_constant (FNADDR, 2));\t\t\t\t\\\n-  emit_insn (gen_rtx_ASM_INPUT (VOIDmode, VAX_ISTREAM_SYNC));\t\t\\\n+  emit_insn (gen_sync_istream ());\t\t\t\t\t\\\n }\n \n /* Byte offset of return address in a stack frame.  The \"saved PC\" field\n@@ -787,6 +796,10 @@ enum reg_class { NO_REGS, ALL_REGS, LIM_REG_CLASSES };\n    jumps to the default label instead.  */\n #define CASE_DROPS_THROUGH\n \n+/* Indicate that jump tables go in the text section.  This is\n+   necessary when compiling PIC code.  */\n+#define JUMP_TABLES_IN_TEXT_SECTION 1\n+\n /* Define this as 1 if `char' should by default be signed; else as 0.  */\n #define DEFAULT_SIGNED_CHAR 1\n \n@@ -1062,19 +1075,39 @@ enum reg_class { NO_REGS, ALL_REGS, LIM_REG_CLASSES };\n    It need not be very fast code.  */\n \n #define ASM_OUTPUT_REG_POP(FILE,REGNO)  \\\n-  fprintf (FILE, \"\\tmovl (sp)+,%s\\n\", reg_names[REGNO])\n+  fprintf (FILE, \"\\tmovl (%s)+,%s\\n\", reg_names[STACK_POINTER_REGNUM], \\\n+\t   reg_names[REGNO])\n \n /* This is how to output an element of a case-vector that is absolute.\n    (The VAX does not use such vectors,\n    but we must define this macro anyway.)  */\n \n-#define ASM_OUTPUT_ADDR_VEC_ELT(FILE, VALUE)  \\\n-  fprintf (FILE, \"\\t.long L%d\\n\", VALUE)\n+#define ASM_OUTPUT_ADDR_VEC_ELT(FILE, VALUE)\t\t\\\n+  do\t\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\\\n+      char label[256];\t\t\t\t\t\\\n+      ASM_GENERATE_INTERNAL_LABEL (label, \"L\", (VALUE));\\\n+      fprintf (FILE, \"\\t.long \");\t\t\t\\\n+      assemble_name (FILE, label);\t\t\t\\\n+      fprintf (FILE, \"\\n\");\t\t\t\t\\\n+    }\t\t\t\t\t\t\t\\\n+  while (0)\n \n /* This is how to output an element of a case-vector that is relative.  */\n \n-#define ASM_OUTPUT_ADDR_DIFF_ELT(FILE, BODY, VALUE, REL)  \\\n-  fprintf (FILE, \"\\t.word L%d-L%d\\n\", VALUE, REL)\n+#define ASM_OUTPUT_ADDR_DIFF_ELT(FILE, BODY, VALUE, REL)\t\\\n+  do\t\t\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\t\\\n+      char label[256];\t\t\t\t\t\t\\\n+      ASM_GENERATE_INTERNAL_LABEL (label, \"L\", (VALUE));\t\\\n+      fprintf (FILE, \"\\t.word \");\t\t\t\t\\\n+      assemble_name (FILE, label);\t\t\t\t\\\n+      ASM_GENERATE_INTERNAL_LABEL (label, \"L\", (REL));\t\t\\\n+      fprintf (FILE, \"-\");\t\t\t\t\t\\\n+      assemble_name (FILE, label);\t\t\t\t\\\n+      fprintf (FILE, \"\\n\");\t\t\t\t\t\\\n+    }\t\t\t\t\t\t\t\t\\\n+  while (0)\n \n /* This is how to output an assembler line\n    that says to advance the location counter\n@@ -1152,10 +1185,12 @@ VAX operand formatting codes:\n    which is not a 64-bit minus one.  */\n \n #define PRINT_OPERAND_PUNCT_VALID_P(CODE)\t\t\t\t\\\n-  ((CODE) == '#')\n+  ((CODE) == '#' || (CODE) == '|')\n \n #define PRINT_OPERAND(FILE, X, CODE)  \\\n { if (CODE == '#') fputc (ASM_DOUBLE_CHAR, FILE);\t\t\t\\\n+  else if (CODE == '|')\t\t\t\t\t\t\t\\\n+    fputs (REGISTER_PREFIX, FILE);\t\t\t\t\t\\\n   else if (CODE == 'C')\t\t\t\t\t\t\t\\\n     fputs (rev_cond_name (X), FILE);\t\t\t\t\t\\\n   else if (CODE == 'D' && GET_CODE (X) == CONST_INT && INTVAL (X) < 0)\t\\\n@@ -1198,3 +1233,8 @@ VAX operand formatting codes:\n \n #define PRINT_OPERAND_ADDRESS(FILE, ADDR)  \\\n  print_operand_address (FILE, ADDR)\n+\n+/* This is a blatent lie.  However, it's good enough, since we don't\n+   actually have any code whatsoever for which this isn't overridden\n+   by the proper FDE definition.  */\n+#define INCOMING_RETURN_ADDR_RTX gen_rtx_REG (Pmode, PC_REGNUM)"}]}