{"sha": "a5d6c7540ae44bc8fb2f4ca2aba5f16420b574a2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTVkNmM3NTQwYWU0NGJjOGZiMmY0Y2EyYWJhNWYxNjQyMGI1NzRhMg==", "commit": {"author": {"name": "Francois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2012-03-04T14:35:56Z"}, "committer": {"name": "Fran\u00e7ois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2012-03-04T14:35:56Z"}, "message": "re PR fortran/36160 (show_locus doesn't deal well with wide characters)\n\n\tPR fortran/36160\n\t* error.c (gfc_widechar_display_length, gfc_wide_display_length):\n\tNew functions.\n\t(print_wide_char_into_buffer): Return length written.\n\t(show_locus): Fix locus displayed when wide characters are present.\n\nFrom-SVN: r184884", "tree": {"sha": "82c0a8937026e7006001e06651a39cd00f27d7a2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/82c0a8937026e7006001e06651a39cd00f27d7a2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a5d6c7540ae44bc8fb2f4ca2aba5f16420b574a2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5d6c7540ae44bc8fb2f4ca2aba5f16420b574a2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a5d6c7540ae44bc8fb2f4ca2aba5f16420b574a2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5d6c7540ae44bc8fb2f4ca2aba5f16420b574a2/comments", "author": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c8191119d6481dd0e3ba4fcf2bbcbc662e0c278a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8191119d6481dd0e3ba4fcf2bbcbc662e0c278a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c8191119d6481dd0e3ba4fcf2bbcbc662e0c278a"}], "stats": {"total": 67, "additions": 56, "deletions": 11}, "files": [{"sha": "3a072e0a9b0155366b2c24630a5e767ab14bac75", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5d6c7540ae44bc8fb2f4ca2aba5f16420b574a2/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5d6c7540ae44bc8fb2f4ca2aba5f16420b574a2/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=a5d6c7540ae44bc8fb2f4ca2aba5f16420b574a2", "patch": "@@ -1,3 +1,11 @@\n+2012-03-04  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n+\n+\tPR fortran/36160\n+\t* error.c (gfc_widechar_display_length, gfc_wide_display_length):\n+\tNew functions.\n+\t(print_wide_char_into_buffer): Return length written.\n+\t(show_locus): Fix locus displayed when wide characters are present.\n+\n 2012-03-04  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n \n \t* module.c (gfc_use_module): Improve error message some more."}, {"sha": "a8c2b63a6d989b83b307c3b6866db2ca48879e86", "filename": "gcc/fortran/error.c", "status": "modified", "additions": 48, "deletions": 11, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5d6c7540ae44bc8fb2f4ca2aba5f16420b574a2/gcc%2Ffortran%2Ferror.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5d6c7540ae44bc8fb2f4ca2aba5f16420b574a2/gcc%2Ffortran%2Ferror.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ferror.c?ref=a5d6c7540ae44bc8fb2f4ca2aba5f16420b574a2", "patch": "@@ -175,7 +175,39 @@ error_integer (long int i)\n }\n \n \n-static void\n+static size_t\n+gfc_widechar_display_length (gfc_char_t c)\n+{\n+  if (gfc_wide_is_printable (c))\n+    /* Simple ASCII character  */\n+    return 1;\n+  else if (c < ((gfc_char_t) 1 << 8))\n+    /* Displayed as \\x??  */\n+    return 4;\n+  else if (c < ((gfc_char_t) 1 << 16))\n+    /* Displayed as \\u????  */\n+    return 6;\n+  else\n+    /* Displayed as \\U????????  */\n+    return 10;\n+}\n+\n+\n+/* Length of the ASCII representation of the wide string, escaping wide\n+   characters as print_wide_char_into_buffer() does.  */\n+\n+static size_t\n+gfc_wide_display_length (const gfc_char_t *str)\n+{\n+  size_t i, len;\n+\n+  for (i = 0, len = 0; str[i]; i++)\n+    len += gfc_widechar_display_length (str[i]);\n+\n+  return len;\n+}\n+\n+static int\n print_wide_char_into_buffer (gfc_char_t c, char *buf)\n {\n   static const char xdigit[16] = { '0', '1', '2', '3', '4', '5', '6',\n@@ -185,6 +217,7 @@ print_wide_char_into_buffer (gfc_char_t c, char *buf)\n     {\n       buf[1] = '\\0';\n       buf[0] = (unsigned char) c;\n+      return 1;\n     }\n   else if (c < ((gfc_char_t) 1 << 8))\n     {\n@@ -195,6 +228,7 @@ print_wide_char_into_buffer (gfc_char_t c, char *buf)\n \n       buf[1] = 'x';\n       buf[0] = '\\\\';\n+      return 4;\n     }\n   else if (c < ((gfc_char_t) 1 << 16))\n     {\n@@ -209,6 +243,7 @@ print_wide_char_into_buffer (gfc_char_t c, char *buf)\n \n       buf[1] = 'u';\n       buf[0] = '\\\\';\n+      return 6;\n     }\n   else\n     {\n@@ -231,6 +266,7 @@ print_wide_char_into_buffer (gfc_char_t c, char *buf)\n \n       buf[1] = 'U';\n       buf[0] = '\\\\';\n+      return 10;\n     }\n }\n \n@@ -326,24 +362,20 @@ show_locus (locus *loc, int c1, int c2)\n      show up on the terminal.  Tabs are converted to spaces, and \n      nonprintable characters are converted to a \"\\xNN\" sequence.  */\n \n-  /* TODO: Although setting i to the terminal width is clever, it fails\n-     to work correctly when nonprintable characters exist.  A better \n-     solution should be found.  */\n-\n   p = &(lb->line[offset]);\n-  i = gfc_wide_strlen (p);\n+  i = gfc_wide_display_length (p);\n   if (i > terminal_width)\n     i = terminal_width - 1;\n \n-  for (; i > 0; i--)\n+  while (i > 0)\n     {\n       static char buffer[11];\n \n       c = *p++;\n       if (c == '\\t')\n \tc = ' ';\n \n-      print_wide_char_into_buffer (c, buffer);\n+      i -= print_wide_char_into_buffer (c, buffer);\n       error_string (buffer);\n     }\n \n@@ -356,13 +388,18 @@ show_locus (locus *loc, int c1, int c2)\n   c1 -= offset;\n   c2 -= offset;\n \n+  p = &(lb->line[offset]);\n   for (i = 0; i <= cmax; i++)\n     {\n+      int spaces, j;\n+      spaces = gfc_widechar_display_length (*p++);\n+\n       if (i == c1)\n-\terror_char ('1');\n+\terror_char ('1'), spaces--;\n       else if (i == c2)\n-\terror_char ('2');\n-      else\n+\terror_char ('2'), spaces--;\n+\n+      for (j = 0; j < spaces; j++)\n \terror_char (' ');\n     }\n "}]}