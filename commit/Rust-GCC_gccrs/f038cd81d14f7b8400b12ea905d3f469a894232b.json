{"sha": "f038cd81d14f7b8400b12ea905d3f469a894232b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjAzOGNkODFkMTRmN2I4NDAwYjEyZWE5MDVkM2Y0NjlhODk0MjMyYg==", "commit": {"author": {"name": "Rainer Orth", "email": "ro@CeBiTec.Uni-Bielefeld.DE", "date": "2014-10-23T08:35:38Z"}, "committer": {"name": "Rainer Orth", "email": "ro@gcc.gnu.org", "date": "2014-10-23T08:35:38Z"}, "message": "Fix SPARC testsuite gnu11 fallout\n\n\t* gcc.target/sparc/20001013-1.c (main): Declare int return.\n\t* gcc.target/sparc/mnofpu.c (e1e_rphy): Declare.\n\t* gcc.target/sparc/sparc-ret.c (toto): Declare.\n\t* gcc.target/sparc/ultrasp6.c (__assert, HSRate): Declare.\n\t* gcc.target/sparc/ultrasp8.c (__malloc_lock, __malloc_unlock):\n\tDeclare.\n\nFrom-SVN: r216576", "tree": {"sha": "553c8bb966a848d30cbafb9a947a13b8d18475ca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/553c8bb966a848d30cbafb9a947a13b8d18475ca"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f038cd81d14f7b8400b12ea905d3f469a894232b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f038cd81d14f7b8400b12ea905d3f469a894232b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f038cd81d14f7b8400b12ea905d3f469a894232b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f038cd81d14f7b8400b12ea905d3f469a894232b/comments", "author": {"login": "rorth", "id": 3930951, "node_id": "MDQ6VXNlcjM5MzA5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/3930951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rorth", "html_url": "https://github.com/rorth", "followers_url": "https://api.github.com/users/rorth/followers", "following_url": "https://api.github.com/users/rorth/following{/other_user}", "gists_url": "https://api.github.com/users/rorth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rorth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rorth/subscriptions", "organizations_url": "https://api.github.com/users/rorth/orgs", "repos_url": "https://api.github.com/users/rorth/repos", "events_url": "https://api.github.com/users/rorth/events{/privacy}", "received_events_url": "https://api.github.com/users/rorth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4d885a639e4a72665b95fa895032d2600418d390", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d885a639e4a72665b95fa895032d2600418d390", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4d885a639e4a72665b95fa895032d2600418d390"}], "stats": {"total": 20, "additions": 19, "deletions": 1}, "files": [{"sha": "fe0c757c4bf56c47e7d312e341d7e1ce5879611b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f038cd81d14f7b8400b12ea905d3f469a894232b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f038cd81d14f7b8400b12ea905d3f469a894232b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f038cd81d14f7b8400b12ea905d3f469a894232b", "patch": "@@ -1,3 +1,12 @@\n+2014-10-23  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* gcc.target/sparc/20001013-1.c (main): Declare int return.\n+\t* gcc.target/sparc/mnofpu.c (e1e_rphy): Declare.\n+\t* gcc.target/sparc/sparc-ret.c (toto): Declare.\n+\t* gcc.target/sparc/ultrasp6.c (__assert, HSRate): Declare.\n+\t* gcc.target/sparc/ultrasp8.c (__malloc_lock, __malloc_unlock):\n+\tDeclare.\n+\n 2014-10-22  Guozhi Wei  <carrot@google.com>\n \n \tPR tree-optimization/63530"}, {"sha": "d47c7ff17572644b813342ba2ee3e01deca9ea79", "filename": "gcc/testsuite/gcc.target/sparc/20001013-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f038cd81d14f7b8400b12ea905d3f469a894232b/gcc%2Ftestsuite%2Fgcc.target%2Fsparc%2F20001013-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f038cd81d14f7b8400b12ea905d3f469a894232b/gcc%2Ftestsuite%2Fgcc.target%2Fsparc%2F20001013-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fsparc%2F20001013-1.c?ref=f038cd81d14f7b8400b12ea905d3f469a894232b", "patch": "@@ -31,7 +31,7 @@ union {\n   long long l;\n } x = { l: 0x7ff8000000000000LL }, y;\n \n-main ()\n+int main ()\n {\n   unsigned int fsr = 0;\n   __asm __volatile (\"ld %0, %%fsr\" : : \"m\" (fsr));"}, {"sha": "fbff4c40e2cf1578a062c2d4efb02c39ed5919c2", "filename": "gcc/testsuite/gcc.target/sparc/mnofpu.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f038cd81d14f7b8400b12ea905d3f469a894232b/gcc%2Ftestsuite%2Fgcc.target%2Fsparc%2Fmnofpu.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f038cd81d14f7b8400b12ea905d3f469a894232b/gcc%2Ftestsuite%2Fgcc.target%2Fsparc%2Fmnofpu.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fsparc%2Fmnofpu.c?ref=f038cd81d14f7b8400b12ea905d3f469a894232b", "patch": "@@ -69,6 +69,7 @@ static inline __attribute__((always_inline)) u32 __er32(struct e1000_hw *hw, uns\n {\n  return __readl(hw->hw_addr + reg);\n }\n+int e1e_rphy(struct e1000_hw *, int, u16 *);\n void e1000e_update_stats(struct e1000_adapter *adapter)\n {\n  struct e1000_hw *hw = &adapter->hw;"}, {"sha": "808e8a98f0e89efdc9eea6c77bf3251934acd8bf", "filename": "gcc/testsuite/gcc.target/sparc/sparc-ret.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f038cd81d14f7b8400b12ea905d3f469a894232b/gcc%2Ftestsuite%2Fgcc.target%2Fsparc%2Fsparc-ret.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f038cd81d14f7b8400b12ea905d3f469a894232b/gcc%2Ftestsuite%2Fgcc.target%2Fsparc%2Fsparc-ret.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fsparc%2Fsparc-ret.c?ref=f038cd81d14f7b8400b12ea905d3f469a894232b", "patch": "@@ -5,6 +5,8 @@\n \n /* Make sure that Ultrasparc return insn do not read below the stack.  */\n \n+void toto (int *);\n+\n int bar (int a, int b, int c, int d, int e, int f, int g, int h)\n {\n   int res;"}, {"sha": "0b6f46a83c44fa363e812ae6a97b1eba82c011bf", "filename": "gcc/testsuite/gcc.target/sparc/ultrasp6.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f038cd81d14f7b8400b12ea905d3f469a894232b/gcc%2Ftestsuite%2Fgcc.target%2Fsparc%2Fultrasp6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f038cd81d14f7b8400b12ea905d3f469a894232b/gcc%2Ftestsuite%2Fgcc.target%2Fsparc%2Fultrasp6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fsparc%2Fultrasp6.c?ref=f038cd81d14f7b8400b12ea905d3f469a894232b", "patch": "@@ -4,6 +4,9 @@\n /* { dg-do compile } */\n /* { dg-options \"-O2 -mcpu=ultrasparc\" } */\n \n+void __assert (const char *, const char *, int);\n+double HSRate(long, long, long, double, double, int);\n+\n typedef struct\n {\n   float EnergyErg;"}, {"sha": "295667603ea1f4da9baa48aa04cb314d9e249ea5", "filename": "gcc/testsuite/gcc.target/sparc/ultrasp8.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f038cd81d14f7b8400b12ea905d3f469a894232b/gcc%2Ftestsuite%2Fgcc.target%2Fsparc%2Fultrasp8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f038cd81d14f7b8400b12ea905d3f469a894232b/gcc%2Ftestsuite%2Fgcc.target%2Fsparc%2Fultrasp8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fsparc%2Fultrasp8.c?ref=f038cd81d14f7b8400b12ea905d3f469a894232b", "patch": "@@ -9,6 +9,9 @@ struct _reent;\n extern unsigned long __malloc_trim_threshold;\n extern unsigned long __malloc_top_pad;\n \n+void __malloc_lock (void *);\n+void __malloc_unlock (void *);\n+\n int _mallopt_r(struct _reent *reent_ptr, int param_number, int value)\n {\n   __malloc_lock(reent_ptr);"}]}