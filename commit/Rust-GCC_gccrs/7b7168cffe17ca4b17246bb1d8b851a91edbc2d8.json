{"sha": "7b7168cffe17ca4b17246bb1d8b851a91edbc2d8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2I3MTY4Y2ZmZTE3Y2E0YjE3MjQ2YmIxZDhiODUxYTkxZWRiYzJkOA==", "commit": {"author": {"name": "Igor Tsimbalist", "email": "igor.v.tsimbalist@intel.com", "date": "2017-11-17T22:48:36Z"}, "committer": {"name": "Igor Tsimbalist", "email": "itsimbal@gcc.gnu.org", "date": "2017-11-17T22:48:36Z"}, "message": "Enable building libobjc with Intel CET\n\nlibobjc/\n\t* Makefile.in: Regenerate.\n\t* aclocal.m4: Likeiwse.\n\t* configure: Likewise.\n\t* configure.ac: Set CET_FLAGS. Update XCFLAGS.\n\nFrom-SVN: r254904", "tree": {"sha": "fe3657d292a5efa04dacccd2af712d19457e3af4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fe3657d292a5efa04dacccd2af712d19457e3af4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7b7168cffe17ca4b17246bb1d8b851a91edbc2d8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b7168cffe17ca4b17246bb1d8b851a91edbc2d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7b7168cffe17ca4b17246bb1d8b851a91edbc2d8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b7168cffe17ca4b17246bb1d8b851a91edbc2d8/comments", "author": {"login": "itsimbal", "id": 29258612, "node_id": "MDQ6VXNlcjI5MjU4NjEy", "avatar_url": "https://avatars.githubusercontent.com/u/29258612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/itsimbal", "html_url": "https://github.com/itsimbal", "followers_url": "https://api.github.com/users/itsimbal/followers", "following_url": "https://api.github.com/users/itsimbal/following{/other_user}", "gists_url": "https://api.github.com/users/itsimbal/gists{/gist_id}", "starred_url": "https://api.github.com/users/itsimbal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/itsimbal/subscriptions", "organizations_url": "https://api.github.com/users/itsimbal/orgs", "repos_url": "https://api.github.com/users/itsimbal/repos", "events_url": "https://api.github.com/users/itsimbal/events{/privacy}", "received_events_url": "https://api.github.com/users/itsimbal/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "667b43c1790c5058c53ace54809f5b7aca374e72", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/667b43c1790c5058c53ace54809f5b7aca374e72", "html_url": "https://github.com/Rust-GCC/gccrs/commit/667b43c1790c5058c53ace54809f5b7aca374e72"}], "stats": {"total": 98, "additions": 94, "deletions": 4}, "files": [{"sha": "2f9361ffe454b0e0ebfdb101ce9569bfd2e73aa4", "filename": "libobjc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b7168cffe17ca4b17246bb1d8b851a91edbc2d8/libobjc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b7168cffe17ca4b17246bb1d8b851a91edbc2d8/libobjc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2FChangeLog?ref=7b7168cffe17ca4b17246bb1d8b851a91edbc2d8", "patch": "@@ -1,3 +1,10 @@\n+2017-11-17  Igor Tsimbalist  <igor.v.tsimbalist@intel.com>\n+\n+\t* Makefile.in: Regenerate.\n+\t* aclocal.m4: Likeiwse.\n+\t* configure: Likewise.\n+\t* configure.ac: Set CET_FLAGS. Update XCFLAGS.\n+\n 2017-08-30  Richard Sandiford  <richard.sandiford@linaro.org>\n \t    Alan Hayward  <alan.hayward@arm.com>\n \t    David Sherwood  <david.sherwood@arm.com>"}, {"sha": "cfbe63ab201a2e34412d038a113f2dd993230571", "filename": "libobjc/Makefile.in", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b7168cffe17ca4b17246bb1d8b851a91edbc2d8/libobjc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b7168cffe17ca4b17246bb1d8b851a91edbc2d8/libobjc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2FMakefile.in?ref=7b7168cffe17ca4b17246bb1d8b851a91edbc2d8", "patch": "@@ -72,8 +72,10 @@ RANLIB = @RANLIB@\n \n CC = @CC@\n CFLAGS = @CFLAGS@\n+XCFLAGS = @XCFLAGS@\n WARN_CFLAGS = -W -Wall -Wwrite-strings -Wstrict-prototypes\n-ALL_CFLAGS = -I. -I$(srcdir) $(CPPFLAGS) $(DEFS) $(CFLAGS) $(WARN_CFLAGS) \\\n+ALL_CFLAGS = -I. -I$(srcdir) $(CPPFLAGS) $(DEFS) \\\n+\t$(XCFLAGS) $(CFLAGS) $(WARN_CFLAGS) \\\n \t-DIN_GCC -DIN_TARGET_LIBS -fno-strict-aliasing -fexceptions\n \n # Libtool\n@@ -295,6 +297,7 @@ aclocal_deps = \\\n \t$(srcdir)/../ltsugar.m4 \\\n \t$(srcdir)/../ltversion.m4 \\\n \t$(srcdir)/../lt~obsolete.m4 \\\n+\t$(srcdir)/../cet.m4 \\\n \t$(srcdir)/acinclude.m4\n \n $(srcdir)/configure: @MAINT@ configure.ac $(srcdir)/aclocal.m4"}, {"sha": "21273411f19dc9c2dc35aa4ca3f9cc02cba1651f", "filename": "libobjc/aclocal.m4", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b7168cffe17ca4b17246bb1d8b851a91edbc2d8/libobjc%2Faclocal.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b7168cffe17ca4b17246bb1d8b851a91edbc2d8/libobjc%2Faclocal.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2Faclocal.m4?ref=7b7168cffe17ca4b17246bb1d8b851a91edbc2d8", "patch": "@@ -197,6 +197,7 @@ AC_DEFUN([_AM_SUBST_NOTMAKE])\n # Public sister of _AM_SUBST_NOTMAKE.\n AC_DEFUN([AM_SUBST_NOTMAKE], [_AM_SUBST_NOTMAKE($@)])\n \n+m4_include([../config/cet.m4])\n m4_include([../config/lthostflags.m4])\n m4_include([../config/multi.m4])\n m4_include([../config/override.m4])"}, {"sha": "3a2b2e366347f7e8a623e28f4caa96bf24b6a4fb", "filename": "libobjc/configure", "status": "modified", "additions": 77, "deletions": 3, "changes": 80, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b7168cffe17ca4b17246bb1d8b851a91edbc2d8/libobjc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b7168cffe17ca4b17246bb1d8b851a91edbc2d8/libobjc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2Fconfigure?ref=7b7168cffe17ca4b17246bb1d8b851a91edbc2d8", "patch": "@@ -635,6 +635,7 @@ INSTALL_PROGRAM\n RANLIB\n AR\n AS\n+XCFLAGS\n extra_ldflags_libobjc\n lt_host_flags\n OBJEXT\n@@ -714,6 +715,7 @@ with_target_subdir\n with_cross_host\n enable_version_specific_runtime_libs\n enable_multilib\n+enable_cet\n enable_maintainer_mode\n enable_shared\n enable_static\n@@ -1350,6 +1352,8 @@ Optional Features:\n   --enable-FEATURE[=ARG]  include FEATURE [ARG=yes]\n   --enable-version-specific-runtime-libs    Specify that runtime libraries should be installed in a compiler-specific directory\n   --enable-multilib       build many library versions (default)\n+  --enable-cet            enable Intel CET in target libraries\n+                          [default=default]\n   --enable-maintainer-mode  enable make rules and dependencies not useful\n \t\t\t  (and sometimes confusing) to the casual installer\n   --enable-shared[=PKGS]  build shared libraries [default=yes]\n@@ -3350,6 +3354,77 @@ case \"${host}\" in\n esac\n \n \n+# Add CET specific flags if CET is enabled\n+\n+ # Check whether --enable-cet was given.\n+if test \"${enable_cet+set}\" = set; then :\n+  enableval=$enable_cet;\n+      case \"$enableval\" in\n+       yes|no|default) ;;\n+       *) as_fn_error \"Unknown argument to enable/disable cet\" \"$LINENO\" 5 ;;\n+                          esac\n+\n+else\n+  enable_cet=default\n+fi\n+\n+\n+case \"$host\" in\n+  i[34567]86-*-linux* | x86_64-*-linux*)\n+    case \"$enable_cet\" in\n+      default)\n+\t# Check if assembler supports CET.\n+\tcat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+int\n+main ()\n+{\n+asm (\"setssbsy\");\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+  enable_cet=yes\n+else\n+  enable_cet=no\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+\t;;\n+      yes)\n+\t# Check if assembler supports CET.\n+\tcat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+int\n+main ()\n+{\n+asm (\"setssbsy\");\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+\n+else\n+  as_fn_error \"assembler with CET support is required for --enable-cet\" \"$LINENO\" 5\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+\t;;\n+    esac\n+    ;;\n+  *)\n+    enable_cet=no\n+    ;;\n+esac\n+if test x$enable_cet = xyes; then\n+  CET_FLAGS=\"-fcf-protection -mcet\"\n+fi\n+\n+XCFLAGS=\"$XCFLAGS $CET_FLAGS\"\n+\n+\n \n \n if test -n \"$ac_tool_prefix\"; then\n@@ -5980,7 +6055,6 @@ fi\n \n \n \n-\n \n \n # Check whether --enable-libtool-lock was given.\n@@ -10594,7 +10668,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10597 \"configure\"\n+#line 10671 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -10700,7 +10774,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10703 \"configure\"\n+#line 10777 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H"}, {"sha": "f24b5da6d576dcc3753558544505a76f8c120ab4", "filename": "libobjc/configure.ac", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b7168cffe17ca4b17246bb1d8b851a91edbc2d8/libobjc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b7168cffe17ca4b17246bb1d8b851a91edbc2d8/libobjc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2Fconfigure.ac?ref=7b7168cffe17ca4b17246bb1d8b851a91edbc2d8", "patch": "@@ -151,7 +151,12 @@ case \"${host}\" in\n esac\n AC_SUBST(extra_ldflags_libobjc)\n \n+# Add CET specific flags if CET is enabled\n+GCC_CET_FLAGS(CET_FLAGS)\n+XCFLAGS=\"$XCFLAGS $CET_FLAGS\"\n+\n AC_SUBST(CFLAGS)\n+AC_SUBST(XCFLAGS)\n \n AC_CHECK_TOOL(AS, as)\n AC_CHECK_TOOL(AR, ar)"}]}