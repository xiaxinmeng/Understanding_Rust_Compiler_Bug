{"sha": "5b3ceafea524b632bf1ad2f56fc8e70817e1bc71", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWIzY2VhZmVhNTI0YjYzMmJmMWFkMmY1NmZjOGU3MDgxN2UxYmM3MQ==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2005-05-04T21:09:36Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2005-05-04T21:09:36Z"}, "message": "FileLock.java (toString): Entirely avoid String \"+\".\n\n\t* java/nio/channels/FileLock.java (toString): Entirely avoid\n\tString \"+\".\n\n2005-05-04  Andrew Overholt  <overholt@redhat.com>\n\n\t* java/nio/channels/FileLock.java (toString): Re-implement using\n\tStringBuffer.\n\nFrom-SVN: r99230", "tree": {"sha": "182462d0e4bd1dea38fe71498c7771f2ead5a610", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/182462d0e4bd1dea38fe71498c7771f2ead5a610"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5b3ceafea524b632bf1ad2f56fc8e70817e1bc71", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b3ceafea524b632bf1ad2f56fc8e70817e1bc71", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5b3ceafea524b632bf1ad2f56fc8e70817e1bc71", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b3ceafea524b632bf1ad2f56fc8e70817e1bc71/comments", "author": null, "committer": null, "parents": [{"sha": "66d3fe476a583950232d7da789d2dc51747602ce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66d3fe476a583950232d7da789d2dc51747602ce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/66d3fe476a583950232d7da789d2dc51747602ce"}], "stats": {"total": 37, "additions": 25, "deletions": 12}, "files": [{"sha": "8380e6ce580960b5906424728640aeec01b9d6d0", "filename": "libjava/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b3ceafea524b632bf1ad2f56fc8e70817e1bc71/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b3ceafea524b632bf1ad2f56fc8e70817e1bc71/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=5b3ceafea524b632bf1ad2f56fc8e70817e1bc71", "patch": "@@ -1,3 +1,13 @@\n+2005-05-04  Tom Tromey  <tromey@redhat.com>\n+\n+\t* java/nio/channels/FileLock.java (toString): Entirely avoid\n+\tString \"+\".\n+\n+2005-05-04  Andrew Overholt  <overholt@redhat.com>\n+\n+\t* java/nio/channels/FileLock.java (toString): Re-implement using\n+\tStringBuffer.\n+\n 2005-05-04  Thomas Fitzsimmons  <fitzsim@redhat.com>\n \n \t* java/awt/ImageCapabilities.java: Document."}, {"sha": "46c5d8122795eab7ddc5f4b199234186514e151d", "filename": "libjava/java/nio/channels/FileLock.java", "status": "modified", "additions": 15, "deletions": 12, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b3ceafea524b632bf1ad2f56fc8e70817e1bc71/libjava%2Fjava%2Fnio%2Fchannels%2FFileLock.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b3ceafea524b632bf1ad2f56fc8e70817e1bc71/libjava%2Fjava%2Fnio%2Fchannels%2FFileLock.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnio%2Fchannels%2FFileLock.java?ref=5b3ceafea524b632bf1ad2f56fc8e70817e1bc71", "patch": "@@ -1,5 +1,5 @@\n /* FileLock.java --\n-   Copyright (C) 2002 Free Software Foundation, Inc.\n+   Copyright (C) 2002, 2005 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -132,16 +132,19 @@ public final long size()\n    */\n   public final String toString()\n   {\n-\tString toReturn = getClass().getName() + \n-\t  \"[\" + position + \":\" + size;\n-\tif (shared)\n-\t  toReturn += \" shared\";\n-\telse\n-\t  toReturn += \" exclusive\";\n-\tif (isValid())\n-\t  toReturn += \" valid]\";\n-\telse\n-\t  toReturn += \" invalid]\";\n-\treturn toReturn;\n+    StringBuffer buf = new StringBuffer(getClass().getName());\n+    buf.append(\"[\");\n+    buf.append(position);\n+    buf.append(\":\");\n+    buf.append(size);\n+    if (shared)\n+      buf.append(\" shared\");\n+    else\n+      buf.append(\" exclusive\");\n+    if (isValid())\n+      buf.append(\" valid]\");\n+    else\n+      buf.append(\" invalid]\");\n+    return buf.toString();\n   }\n }"}]}