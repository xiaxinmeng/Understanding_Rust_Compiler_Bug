{"sha": "5fdf7945d9286999d413f1a7232479575ac51bb6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWZkZjc5NDVkOTI4Njk5OWQ0MTNmMWE3MjMyNDc5NTc1YWM1MWJiNg==", "commit": {"author": {"name": "Bob Duff", "email": "duff@adacore.com", "date": "2020-03-18T21:17:58Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-06-12T08:29:09Z"}, "message": "[Ada] Ada2020: update Big_Numbers.* specs\n\n2020-06-12  Bob Duff  <duff@adacore.com>\n\ngcc/ada/\n\n\t* libgnat/a-nbnbin.adb, libgnat/a-nbnbin.ads,\n\tlibgnat/a-nbnbin__gmp.adb, libgnat/a-nbnbre.adb,\n\tlibgnat/a-nbnbre.ads: Update Put_Image, and uncomment the aspect\n\tspecification.  Add pragmas Ada_2020.\n\t* libgnat/a-stouut.ads, libgnat/a-stteou.ads: Add Preelaborate,\n\tbecause the Big_Numbers packages have Preelaborate, and now\n\tdepend on these Text_Output packages.", "tree": {"sha": "171e4e0c70699514e5aa01490835cb4770a5ab70", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/171e4e0c70699514e5aa01490835cb4770a5ab70"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5fdf7945d9286999d413f1a7232479575ac51bb6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5fdf7945d9286999d413f1a7232479575ac51bb6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5fdf7945d9286999d413f1a7232479575ac51bb6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5fdf7945d9286999d413f1a7232479575ac51bb6/comments", "author": {"login": "bobduff", "id": 29099567, "node_id": "MDQ6VXNlcjI5MDk5NTY3", "avatar_url": "https://avatars.githubusercontent.com/u/29099567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bobduff", "html_url": "https://github.com/bobduff", "followers_url": "https://api.github.com/users/bobduff/followers", "following_url": "https://api.github.com/users/bobduff/following{/other_user}", "gists_url": "https://api.github.com/users/bobduff/gists{/gist_id}", "starred_url": "https://api.github.com/users/bobduff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bobduff/subscriptions", "organizations_url": "https://api.github.com/users/bobduff/orgs", "repos_url": "https://api.github.com/users/bobduff/repos", "events_url": "https://api.github.com/users/bobduff/events{/privacy}", "received_events_url": "https://api.github.com/users/bobduff/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "90e975175757b4ac9712d90d27ec59cd09f22cc9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90e975175757b4ac9712d90d27ec59cd09f22cc9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/90e975175757b4ac9712d90d27ec59cd09f22cc9"}], "stats": {"total": 72, "additions": 41, "deletions": 31}, "files": [{"sha": "fa4ddf08c9615f1542c5daa3c23c77eb7e977173", "filename": "gcc/ada/libgnat/a-nbnbin.adb", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5fdf7945d9286999d413f1a7232479575ac51bb6/gcc%2Fada%2Flibgnat%2Fa-nbnbin.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5fdf7945d9286999d413f1a7232479575ac51bb6/gcc%2Fada%2Flibgnat%2Fa-nbnbin.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-nbnbin.adb?ref=5fdf7945d9286999d413f1a7232479575ac51bb6", "patch": "@@ -29,8 +29,10 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n+pragma Ada_2020;\n+\n with Ada.Unchecked_Deallocation;\n-with Ada.Characters.Conversions; use Ada.Characters.Conversions;\n+with Ada.Strings.Text_Output.Utils;\n \n with Interfaces; use Interfaces;\n \n@@ -290,11 +292,12 @@ package body Ada.Numerics.Big_Numbers.Big_Integers is\n    -- Put_Image --\n    ---------------\n \n-   procedure Put_Image\n-     (Stream : not null access Ada.Streams.Root_Stream_Type'Class;\n-      Arg    : Big_Integer) is\n+   procedure Put_Image (S : in out Sink'Class; V : Big_Integer) is\n+      --  This is implemented in terms of To_String. It might be more elegant\n+      --  and more efficient to do it the other way around, but this is the\n+      --  most expedient implementation for now.\n    begin\n-      Wide_Wide_String'Write (Stream, To_Wide_Wide_String (To_String (Arg)));\n+      Strings.Text_Output.Utils.Put_UTF_8 (S, To_String (V));\n    end Put_Image;\n \n    ---------"}, {"sha": "45a7b6e64ebf3ce60b75d2d5cd87c11fa839c9e6", "filename": "gcc/ada/libgnat/a-nbnbin.ads", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5fdf7945d9286999d413f1a7232479575ac51bb6/gcc%2Fada%2Flibgnat%2Fa-nbnbin.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5fdf7945d9286999d413f1a7232479575ac51bb6/gcc%2Fada%2Flibgnat%2Fa-nbnbin.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-nbnbin.ads?ref=5fdf7945d9286999d413f1a7232479575ac51bb6", "patch": "@@ -13,7 +13,9 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n-with Ada.Streams;\n+pragma Ada_2020;\n+\n+with Ada.Strings.Text_Output; use Ada.Strings.Text_Output;\n \n private with Ada.Finalization;\n private with System;\n@@ -24,9 +26,9 @@ private with System;\n package Ada.Numerics.Big_Numbers.Big_Integers\n   with Preelaborate\n is\n-   type Big_Integer is private;\n-   --  with Integer_Literal => From_String,\n-   --       Put_Image => Put_Image;\n+   type Big_Integer is private with\n+   --  Integer_Literal => From_String,\n+     Put_Image => Put_Image;\n \n    function Is_Valid (Arg : Big_Integer) return Boolean\n      with Convention => Intrinsic;\n@@ -95,9 +97,7 @@ is\n \n    function From_String (Arg : String) return Big_Integer;\n \n-   procedure Put_Image\n-     (Stream : not null access Ada.Streams.Root_Stream_Type'Class;\n-      Arg    : Big_Integer);\n+   procedure Put_Image (S : in out Sink'Class; V : Big_Integer);\n \n    function \"+\" (L : Big_Integer) return Big_Integer;\n "}, {"sha": "c950389a846ab26bd5fadca0b6e5f1ee3d45e729", "filename": "gcc/ada/libgnat/a-nbnbin__gmp.adb", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5fdf7945d9286999d413f1a7232479575ac51bb6/gcc%2Fada%2Flibgnat%2Fa-nbnbin__gmp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5fdf7945d9286999d413f1a7232479575ac51bb6/gcc%2Fada%2Flibgnat%2Fa-nbnbin__gmp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-nbnbin__gmp.adb?ref=5fdf7945d9286999d413f1a7232479575ac51bb6", "patch": "@@ -31,11 +31,13 @@\n \n --  This is the GMP version of this package\n \n+pragma Ada_2020;\n+\n with Ada.Unchecked_Conversion;\n with Ada.Unchecked_Deallocation;\n with Interfaces.C;               use Interfaces.C;\n with Interfaces.C.Strings;       use Interfaces.C.Strings;\n-with Ada.Characters.Conversions; use Ada.Characters.Conversions;\n+with Ada.Strings.Text_Output.Utils;\n with Ada.Characters.Handling;    use Ada.Characters.Handling;\n \n package body Ada.Numerics.Big_Numbers.Big_Integers is\n@@ -403,11 +405,12 @@ package body Ada.Numerics.Big_Numbers.Big_Integers is\n    -- Put_Image --\n    ---------------\n \n-   procedure Put_Image\n-     (Stream : not null access Ada.Streams.Root_Stream_Type'Class;\n-      Arg    : Big_Integer) is\n+   procedure Put_Image (S : in out Sink'Class; V : Big_Real) is\n+      --  This is implemented in terms of To_String. It might be more elegant\n+      --  and more efficient to do it the other way around, but this is the\n+      --  most expedient implementation for now.\n    begin\n-      Wide_Wide_String'Write (Stream, To_Wide_Wide_String (To_String (Arg)));\n+      Strings.Text_Output.Utils.Put_UTF_8 (S, To_String (V));\n    end Put_Image;\n \n    ---------"}, {"sha": "11459cafcd9c5db9b1132ef34e4d9e09801aefe9", "filename": "gcc/ada/libgnat/a-nbnbre.adb", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5fdf7945d9286999d413f1a7232479575ac51bb6/gcc%2Fada%2Flibgnat%2Fa-nbnbre.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5fdf7945d9286999d413f1a7232479575ac51bb6/gcc%2Fada%2Flibgnat%2Fa-nbnbre.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-nbnbre.adb?ref=5fdf7945d9286999d413f1a7232479575ac51bb6", "patch": "@@ -31,7 +31,9 @@\n \n --  This is the default version of this package, based on Big_Integers only.\n \n-with Ada.Characters.Conversions; use Ada.Characters.Conversions;\n+pragma Ada_2020;\n+\n+with Ada.Strings.Text_Output.Utils;\n \n package body Ada.Numerics.Big_Numbers.Big_Reals is\n \n@@ -399,11 +401,12 @@ package body Ada.Numerics.Big_Numbers.Big_Reals is\n    -- Put_Image --\n    ---------------\n \n-   procedure Put_Image\n-     (Stream : not null access Ada.Streams.Root_Stream_Type'Class;\n-      Arg    : Big_Real) is\n+   procedure Put_Image (S : in out Sink'Class; V : Big_Real) is\n+      --  This is implemented in terms of To_String. It might be more elegant\n+      --  and more efficient to do it the other way around, but this is the\n+      --  most expedient implementation for now.\n    begin\n-      Wide_Wide_String'Write (Stream, To_Wide_Wide_String (To_String (Arg)));\n+      Strings.Text_Output.Utils.Put_UTF_8 (S, To_String (V));\n    end Put_Image;\n \n    ---------"}, {"sha": "ddfbd7746f7e388f5d1ea14f2ea116e84a91832e", "filename": "gcc/ada/libgnat/a-nbnbre.ads", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5fdf7945d9286999d413f1a7232479575ac51bb6/gcc%2Fada%2Flibgnat%2Fa-nbnbre.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5fdf7945d9286999d413f1a7232479575ac51bb6/gcc%2Fada%2Flibgnat%2Fa-nbnbre.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-nbnbre.ads?ref=5fdf7945d9286999d413f1a7232479575ac51bb6", "patch": "@@ -13,18 +13,21 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n+pragma Ada_2020;\n+\n with Ada.Numerics.Big_Numbers.Big_Integers;\n-with Ada.Streams;\n+\n+with Ada.Strings.Text_Output; use Ada.Strings.Text_Output;\n \n --  Note that some Ada 2020 aspects are commented out since they are not\n --  supported yet.\n \n package Ada.Numerics.Big_Numbers.Big_Reals\n   with Preelaborate\n is\n-   type Big_Real is private;\n---   with Real_Literal => From_String,\n---        Put_Image    => Put_Image;\n+   type Big_Real is private with\n+--    Real_Literal => From_String,\n+     Put_Image    => Put_Image;\n \n    function Is_Valid (Arg : Big_Real) return Boolean\n      with Convention => Intrinsic;\n@@ -105,9 +108,7 @@ is\n \n    function From_Quotient_String (Arg : String) return Big_Real;\n \n-   procedure Put_Image\n-     (Stream : not null access Ada.Streams.Root_Stream_Type'Class;\n-      Arg    : Big_Real);\n+   procedure Put_Image (S : in out Sink'Class; V : Big_Real);\n \n    function \"+\" (L : Big_Real) return Big_Real;\n "}, {"sha": "d781a0617aaf3e5003b5f40dd619e83252705390", "filename": "gcc/ada/libgnat/a-stouut.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5fdf7945d9286999d413f1a7232479575ac51bb6/gcc%2Fada%2Flibgnat%2Fa-stouut.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5fdf7945d9286999d413f1a7232479575ac51bb6/gcc%2Fada%2Flibgnat%2Fa-stouut.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-stouut.ads?ref=5fdf7945d9286999d413f1a7232479575ac51bb6", "patch": "@@ -31,7 +31,7 @@\n \n pragma Ada_2020;\n \n-package Ada.Strings.Text_Output.Utils is\n+package Ada.Strings.Text_Output.Utils with Preelaborate is\n \n    --  This package provides utility functions on Sink'Class. These are\n    --  intended for use by Put_Image attributes, both the default versions"}, {"sha": "f4b8966c1fb76bf1e8c4e0c047a5fec9fdca0529", "filename": "gcc/ada/libgnat/a-stteou.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5fdf7945d9286999d413f1a7232479575ac51bb6/gcc%2Fada%2Flibgnat%2Fa-stteou.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5fdf7945d9286999d413f1a7232479575ac51bb6/gcc%2Fada%2Flibgnat%2Fa-stteou.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-stteou.ads?ref=5fdf7945d9286999d413f1a7232479575ac51bb6", "patch": "@@ -33,7 +33,7 @@ pragma Ada_2020;\n \n with Ada.Strings.UTF_Encoding;\n with Ada.Strings.UTF_Encoding.Wide_Wide_Strings;\n-package Ada.Strings.Text_Output is\n+package Ada.Strings.Text_Output with Preelaborate is\n \n    --  This package provides a \"Sink\" abstraction, to which characters of type\n    --  Character, Wide_Character, and Wide_Wide_Character can be sent. This"}]}