{"sha": "46806c44a44ad2b4d24eba1248d41c775c9bbd31", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDY4MDZjNDRhNDRhZDJiNGQyNGViYTEyNDhkNDFjNzc1YzliYmQzMQ==", "commit": {"author": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2015-08-04T09:44:18Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "ktkachov@gcc.gnu.org", "date": "2015-08-04T09:44:18Z"}, "message": "[AArch64][1/14] Add ident field to struct processor\n\n        * config/aarch64/aarch64.c (struct processor): Add ident field.\n        Rename core sched_core.\n        (all_cores): Handle above changes.\n        (all_architectures): Likewise.\n        (aarch64_parse_arch): Likewise.\n        (aarch64_override_options): Likewise.\n\nFrom-SVN: r226552", "tree": {"sha": "e6da24fc8737d90a0b880b0f5706f5bcf74940a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e6da24fc8737d90a0b880b0f5706f5bcf74940a6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/46806c44a44ad2b4d24eba1248d41c775c9bbd31", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46806c44a44ad2b4d24eba1248d41c775c9bbd31", "html_url": "https://github.com/Rust-GCC/gccrs/commit/46806c44a44ad2b4d24eba1248d41c775c9bbd31", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46806c44a44ad2b4d24eba1248d41c775c9bbd31/comments", "author": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4b1b9e64ce91969a7eed2796207e728a3d887ca0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b1b9e64ce91969a7eed2796207e728a3d887ca0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4b1b9e64ce91969a7eed2796207e728a3d887ca0"}], "stats": {"total": 27, "additions": 19, "deletions": 8}, "files": [{"sha": "cf83542ece144ac07132639d72397d0d7e95d180", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46806c44a44ad2b4d24eba1248d41c775c9bbd31/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46806c44a44ad2b4d24eba1248d41c775c9bbd31/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=46806c44a44ad2b4d24eba1248d41c775c9bbd31", "patch": "@@ -1,3 +1,12 @@\n+2015-08-04  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\t* config/aarch64/aarch64.c (struct processor): Add ident field.\n+\tRename core sched_core.\n+\t(all_cores): Handle above changes.\n+\t(all_architectures): Likewise.\n+\t(aarch64_parse_arch): Likewise.\n+\t(aarch64_override_options): Likewise.\n+\n 2015-08-04  Richard Biener  <rguenther@suse.de>\n \n \t* gimple-fold.c (gimple_fold_stmt_to_constant_1): Remove"}, {"sha": "1867e4c317d45c5c4d470ccb8e30a1e5a77be842", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 10, "deletions": 8, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46806c44a44ad2b4d24eba1248d41c775c9bbd31/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46806c44a44ad2b4d24eba1248d41c775c9bbd31/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=46806c44a44ad2b4d24eba1248d41c775c9bbd31", "patch": "@@ -498,7 +498,8 @@ aarch64_tuning_override_functions[] =\n struct processor\n {\n   const char *const name;\n-  enum aarch64_processor core;\n+  enum aarch64_processor ident;\n+  enum aarch64_processor sched_core;\n   const char *arch;\n   unsigned architecture_version;\n   const unsigned long flags;\n@@ -509,21 +510,22 @@ struct processor\n static const struct processor all_cores[] =\n {\n #define AARCH64_CORE(NAME, IDENT, SCHED, ARCH, FLAGS, COSTS, IMP, PART) \\\n-  {NAME, SCHED, #ARCH, ARCH, FLAGS, &COSTS##_tunings},\n+  {NAME, IDENT, SCHED, #ARCH, ARCH, FLAGS, &COSTS##_tunings},\n #include \"aarch64-cores.def\"\n #undef AARCH64_CORE\n-  {\"generic\", cortexa53, \"8\", 8, AARCH64_FL_FOR_ARCH8, &generic_tunings},\n-  {NULL, aarch64_none, NULL, 0, 0, NULL}\n+  {\"generic\", generic, cortexa53, \"8\", 8,\n+   AARCH64_FL_FOR_ARCH8, &generic_tunings},\n+  {NULL, aarch64_none, aarch64_none, NULL, 0, 0, NULL}\n };\n \n /* Architectures implementing AArch64.  */\n static const struct processor all_architectures[] =\n {\n #define AARCH64_ARCH(NAME, CORE, ARCH, FLAGS) \\\n-  {NAME, CORE, #ARCH, ARCH, FLAGS, NULL},\n+  {NAME, CORE, CORE, #ARCH, ARCH, FLAGS, NULL},\n #include \"aarch64-arches.def\"\n #undef AARCH64_ARCH\n-  {NULL, aarch64_none, NULL, 0, 0, NULL}\n+  {NULL, aarch64_none, aarch64_none, NULL, 0, 0, NULL}\n };\n \n /* Target specification.  These are populated as commandline arguments\n@@ -7206,7 +7208,7 @@ aarch64_parse_arch (void)\n \t  aarch64_isa_flags = selected_arch->flags;\n \n \t  if (!selected_cpu)\n-\t    selected_cpu = &all_cores[selected_arch->core];\n+\t    selected_cpu = &all_cores[selected_arch->ident];\n \n \t  if (ext != NULL)\n \t    {\n@@ -7531,7 +7533,7 @@ aarch64_override_options (void)\n     selected_tune = selected_cpu;\n \n   aarch64_tune_flags = selected_tune->flags;\n-  aarch64_tune = selected_tune->core;\n+  aarch64_tune = selected_tune->sched_core;\n   /* Make a copy of the tuning parameters attached to the core, which\n      we may later overwrite.  */\n   aarch64_tune_params = *(selected_tune->tune);"}]}