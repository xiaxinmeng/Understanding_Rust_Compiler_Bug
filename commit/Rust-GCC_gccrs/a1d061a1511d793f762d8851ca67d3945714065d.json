{"sha": "a1d061a1511d793f762d8851ca67d3945714065d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTFkMDYxYTE1MTFkNzkzZjc2MmQ4ODUxY2E2N2QzOTQ1NzE0MDY1ZA==", "commit": {"author": {"name": "Jeffrey A Law", "email": "law@cygnus.com", "date": "1997-12-09T09:03:51Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1997-12-09T09:03:51Z"}, "message": "* Partially cleaned up prototyping code from HJ.\n\n        * tree.h: Add many prototypes.\n\nFrom-SVN: r17025", "tree": {"sha": "38a887cce5fbbc7600deb134d86229aa4ce9bc1c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/38a887cce5fbbc7600deb134d86229aa4ce9bc1c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a1d061a1511d793f762d8851ca67d3945714065d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1d061a1511d793f762d8851ca67d3945714065d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a1d061a1511d793f762d8851ca67d3945714065d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1d061a1511d793f762d8851ca67d3945714065d/comments", "author": null, "committer": null, "parents": [{"sha": "ac957f1381bdf2d00139365d92ecff530d16b768", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac957f1381bdf2d00139365d92ecff530d16b768", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ac957f1381bdf2d00139365d92ecff530d16b768"}], "stats": {"total": 222, "additions": 217, "deletions": 5}, "files": [{"sha": "6f256057c82d62c5f2904778a2ecee419729a2f8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1d061a1511d793f762d8851ca67d3945714065d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1d061a1511d793f762d8851ca67d3945714065d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a1d061a1511d793f762d8851ca67d3945714065d", "patch": "@@ -1,6 +1,7 @@\n Tue Dec  9 01:16:06 1997  Jeffrey A Law  (law@cygnus.com)\n \n \t* Partially cleaned up prototyping code from HJ.\n+\t* tree.h: Add many prototypes.\n \t* haifa-sched.c (haifa_classify_insn): Renamed from classify_insn.\n \tAll references changed.\n \t* rtl.h: Protect from multiple inclusions.  Add many prototypes."}, {"sha": "67ad41964d13950fdae21afcf02ebc569d1270d0", "filename": "gcc/tree.h", "status": "modified", "additions": 216, "deletions": 5, "changes": 221, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1d061a1511d793f762d8851ca67d3945714065d/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1d061a1511d793f762d8851ca67d3945714065d/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=a1d061a1511d793f762d8851ca67d3945714065d", "patch": "@@ -1211,9 +1211,11 @@ union tree_node\n    defined here and in rtl.h.  */\n \n #ifndef exact_log2\n-#define exact_log2(N) exact_log2_wide ((HOST_WIDE_INT) (N))\n-#define floor_log2(N) floor_log2_wide ((HOST_WIDE_INT) (N))\n+#define exact_log2(N) exact_log2_wide ((unsigned HOST_WIDE_INT) (N))\n+#define floor_log2(N) floor_log2_wide ((unsigned HOST_WIDE_INT) (N))\n #endif\n+extern int exact_log2_wide             PROTO((unsigned HOST_WIDE_INT));\n+extern int floor_log2_wide             PROTO((unsigned HOST_WIDE_INT));\n \n #if 0\n /* At present, don't prototype xrealloc, since all of the callers don't\n@@ -1320,7 +1322,7 @@ extern int index_type_equal\t\tPROTO((tree, tree));\n    put the prototype here.  Rtl.h does declare the prototype if\n    tree.h had been included.  */\n \n-extern tree make_tree ();\n+extern tree make_tree\t\t\tPROTO((tree, struct rtx_def *));\n \f\n /* Return a type like TTYPE except that its TYPE_ATTRIBUTES\n    is ATTRIBUTE.\n@@ -1669,12 +1671,12 @@ extern int all_types_permanent;\n      2: and any other information that might be interesting, such as function\n         parameter types in C++.  */\n \n-extern char *(*decl_printable_name) (/* tree decl, int verbosity */);\n+extern char *(*decl_printable_name)\t\tPROTO((tree, int));\n \n /* Pointer to function to finish handling an incomplete decl at the\n    end of compilation.  */\n \n-extern void (*incomplete_decl_finalize_hook) ();\n+extern void (*incomplete_decl_finalize_hook)\tPROTO((tree));\n \f\n /* In tree.c */\n extern char *perm_calloc\t\t\tPROTO((int, long));\n@@ -1893,6 +1895,215 @@ extern void end_temporary_allocation PROTO((void));\n /* Pop the obstack selection stack.  */\n extern void pop_obstacks PROTO((void));\n \n+/* In tree.c */\n+extern int really_constant_p\t\tPROTO ((tree));\n+extern void push_obstacks\t\tPROTO ((struct obstack *,\n+\t\t\t\t\t\tstruct obstack *));\n+extern void pop_momentary_nofree\tPROTO ((void));\n+extern void preserve_momentary\t\tPROTO ((void));\n+extern void saveable_allocation\t\tPROTO ((void));\n+extern void temporary_allocation\tPROTO ((void));\n+extern void resume_temporary_allocation\tPROTO ((void));\n+extern tree get_file_function_name\tPROTO ((int));\n+extern void set_identifier_size\t\tPROTO ((int));\n+extern int int_fits_type_p\t\tPROTO ((tree, tree));\n+extern int tree_log2\t\t\tPROTO ((tree));\n+extern void preserve_initializer\tPROTO ((void));\n+extern void preserve_data\t\tPROTO ((void));\n+extern int object_permanent_p\t\tPROTO ((tree));\n+extern int type_precision\t\tPROTO ((tree));\n+extern int simple_cst_equal\t\tPROTO ((tree, tree));\n+extern int type_list_equal\t\tPROTO ((tree, tree));\n+extern int chain_member\t\t\tPROTO ((tree, tree));\n+extern int chain_member_purpose\t\tPROTO ((tree, tree));\n+extern int chain_member_value\t\tPROTO ((tree, tree));\n+extern tree listify\t\t\tPROTO ((tree));\n+extern tree type_hash_lookup\t\tPROTO ((int, tree));\n+extern void type_hash_add\t\tPROTO ((int, tree));\n+extern int type_hash_list\t\tPROTO ((tree));\n+extern int simple_cst_list_equal\tPROTO ((tree, tree));\n+extern void debug_obstack\t\tPROTO ((char *));\n+extern void rtl_in_current_obstack\tPROTO ((void));\n+extern void rtl_in_saveable_obstack\tPROTO ((void));\n+extern void init_tree_codes\t\tPROTO ((void));\n+extern void dump_tree_statistics\tPROTO ((void));\n+extern void print_obstack_statistics\tPROTO ((char *, struct obstack *));\n+#ifdef BUFSIZ\n+extern void print_obstack_name\t\tPROTO ((char *, FILE *, char *));\n+#endif\n+extern void expand_function_end\t\tPROTO ((char *, int, int));\n+extern void expand_function_start\tPROTO ((tree, int));\n+extern int real_onep\t\t\tPROTO ((tree));\n+extern int real_twop\t\t\tPROTO ((tree));\n+extern void start_identifier_warnings\tPROTO ((void));\n+extern void gcc_obstack_init\t\tPROTO ((struct obstack *));\n+extern void init_obstacks\t\tPROTO ((void));\n+extern void obfree\t\t\tPROTO ((char *));\n+\n+/* In function.c */\n+extern void setjmp_protect_args\t\tPROTO ((void));\n+extern void setjmp_protect\t\tPROTO ((tree));\n+extern void expand_main_function\tPROTO ((void));\n+extern void mark_varargs\t\tPROTO ((void));\n+extern void init_function_start\t\tPROTO ((tree, char *, int));\n+extern void assign_parms\t\tPROTO ((tree, int));\n+extern void put_var_into_stack\t\tPROTO ((tree));\n+extern void uninitialized_vars_warning\tPROTO ((tree));\n+extern void setjmp_args_warning\t\tPROTO ((void));\n+extern void mark_all_temps_used\t\tPROTO ((void));\n+extern void init_temp_slots\t\tPROTO ((void));\n+extern void combine_temp_slots\t\tPROTO ((void));\n+extern void free_temp_slots\t\tPROTO ((void));\n+extern void pop_temp_slots\t\tPROTO ((void));\n+extern void push_temp_slots\t\tPROTO ((void));\n+extern void preserve_temp_slots\t\tPROTO ((struct rtx_def *));\n+extern int aggregate_value_p\t\tPROTO ((tree));\n+extern tree reorder_blocks\t\tPROTO ((tree *, tree,\n+\t\t\t\t\t\tstruct rtx_def *));\n+extern void free_temps_for_rtl_expr\tPROTO ((tree));\n+extern void instantiate_virtual_regs\tPROTO ((tree, struct rtx_def *));\n+extern int max_parm_reg_num\t\tPROTO ((void));\n+extern void bc_expand_function_start\tPROTO ((tree, int));\n+extern void bc_expand_function_end\tPROTO ((void));\n+extern void push_function_context\tPROTO ((void));\n+extern void pop_function_context\tPROTO ((void));\n+extern void push_function_context_to\tPROTO ((tree));\n+extern void pop_function_context_from\tPROTO ((tree));\n+\n+/* In print-rtl.c */\n+#ifdef BUFSIZ\n+extern void print_rtl\t\t\tPROTO ((FILE *, struct rtx_def *));\n+#endif\n+\n+/* In print-tree.c */\n+extern void debug_tree\t\t\tPROTO ((tree));\n+#ifdef BUFSIZ\n+extern void print_node\t\t\tPROTO ((FILE *, char *, tree, int));\n+extern void print_node_brief\t\tPROTO ((FILE *, char *, tree, int));\n+extern void indent_to\t\t\tPROTO ((FILE *, int));\n+#endif\n+\n+/* In expr.c */\n+extern void emit_queue\t\t\t\tPROTO ((void));\n+extern int apply_args_register_offset\t\tPROTO ((int));\n+extern char * bc_gen_constr_label\t\tPROTO ((void));\n+extern struct rtx_def *bc_allocate_variable_array PROTO ((tree));\n+extern struct rtx_def *expand_builtin_return_addr\n+\tPROTO ((enum built_in_function, int, struct rtx_def *));\n+extern void do_pending_stack_adjust\t\tPROTO ((void));\n+extern struct rtx_def *expand_assignment\tPROTO ((tree, tree, int, int));\n+extern struct rtx_def *store_expr\t\tPROTO ((tree, struct rtx_def *,\n+\t\t\t\t\t\t\tint));\n+\n+/* In emit-rtl.c */\n+extern void start_sequence_for_rtl_expr\t\tPROTO ((tree));\n+extern struct rtx_def *emit_line_note_after\tPROTO ((char *, int,\n+\t\t\t\t\t\t\tstruct rtx_def *));\n+extern struct rtx_def *emit_line_note\t\tPROTO ((char *, int));\n+extern struct rtx_def *emit_line_note_force\tPROTO ((char *, int));\n+\n+/* In c-typeck.c */\n+extern int mark_addressable\t\tPROTO ((tree));\n+extern void incomplete_type_error\tPROTO ((tree, tree));\n+\n+/* In c-lang.c */\n+extern void print_lang_statistics\tPROTO ((void));\n+\n+/* In c-common.c */\n+extern tree truthvalue_conversion\tPROTO ((tree));\n+extern int min_precision\t\tPROTO ((tree, int));\n+extern void split_specs_attrs\t\tPROTO ((tree, tree *, tree *));\n+\n+/* In c-decl.c */\n+#ifdef BUFSIZ\n+extern void print_lang_decl\t\tPROTO ((FILE *, tree, int));\n+extern void print_lang_type\t\tPROTO ((FILE *, tree, int));\n+extern void print_lang_identifier\tPROTO ((FILE *, tree, int));\n+#endif\n+extern int global_bindings_p\t\tPROTO ((void));\n+extern void insert_block\t\tPROTO ((tree));\n+\n+/* In integrate.c */\n+extern void save_for_inline_nocopy\tPROTO ((tree));\n+extern void save_for_inline_copying\tPROTO ((tree));\n+extern void set_decl_abstract_flags\tPROTO ((tree, int));\n+extern void output_inline_function\tPROTO ((tree));\n+\n+/* In c-lex.c */\n+extern void set_yydebug\t\t\tPROTO ((int));\n+\n+/* In stor-layout.c */\n+extern void fixup_signed_type\t\tPROTO ((tree));\n+\n+/* varasm.c */\n+extern void make_decl_rtl\t\tPROTO ((tree, char *, int));\n+extern void make_decl_one_only\t\tPROTO ((tree));\n+extern void variable_section\t\tPROTO ((tree, int));\n+\n+/* toplev.c */\n+extern void print_time\t\t\tPROTO ((char *, int));\n+extern int get_run_time\t\t\tPROTO ((void));\n+extern void debug_start_source_file\tPROTO ((char *));\n+extern void debug_end_source_file\tPROTO ((unsigned));\n+extern void debug_define\t\tPROTO ((unsigned, char *));\n+extern void debug_undef\t\t\tPROTO ((unsigned, char *));\n+extern void rest_of_decl_compilation\tPROTO ((tree, char *, int, int));\n+extern void rest_of_type_compilation\tPROTO ((tree, int));\n+extern void rest_of_compilation\t\tPROTO ((tree));\n+extern void fatal\t\t\tPVPROTO ((char *, ...));\n+extern void fatal_io_error\t\tPROTO ((char *));\n+#if 0\n+extern void warning\t\t\tPVPROTO ((char *, ...));\n+extern void error\t\t\tPVPROTO ((char *, ...));\n+#endif\n+extern void pedwarn\t\t\tPVPROTO ((char *, ...));\n+extern void pedwarn_with_decl\t\tPVPROTO ((tree, char *, ...));\n+extern void pedwarn_with_file_and_line\tPVPROTO ((char *, int, char *, ...));\n+extern void warning_with_file_and_line\tPVPROTO ((char *, int, char *, ...));\n+extern void warning_with_decl\t\tPVPROTO ((tree, char *, ...));\n+extern void error_with_decl\t\tPVPROTO ((tree, char *, ...));\n+extern void error_with_file_and_line\tPVPROTO ((char *, int, char *, ...));\n+extern void sorry\t\t\tPVPROTO ((char *s, ...));\n+extern void default_print_error_function PROTO ((char *));\n+extern void report_error_function\tPROTO ((char *));\n+extern void announce_function\t\tPROTO ((tree));\n+\n+/* In fold-const.c */\n+extern int div_and_round_double\t\tPROTO ((enum tree_code, int,\n+\t\t\t\t\t\tHOST_WIDE_INT, HOST_WIDE_INT,\n+\t\t\t\t\t\tHOST_WIDE_INT, HOST_WIDE_INT,\n+\t\t\t\t\t\tHOST_WIDE_INT *,\n+\t\t\t\t\t\tHOST_WIDE_INT *,\n+\t\t\t\t\t\tHOST_WIDE_INT *,\n+\t\t\t\t\t\tHOST_WIDE_INT *));\n+\n+/* In stmt.c */\n+extern void emit_nop\t\t\tPROTO ((void));\n+extern void expand_computed_goto\tPROTO ((tree));\n+extern struct rtx_def *label_rtx\tPROTO ((tree));\n+extern void expand_asm_operands\t\tPROTO ((tree, tree, tree, tree, int,\n+\t\t\t\t\t\tchar *, int));\n+extern int any_pending_cleanups\t\tPROTO ((int));\n+extern void init_stmt\t\t\tPROTO ((void));\n+extern void init_stmt_for_function\tPROTO ((void));\n+extern void remember_end_note\t\tPROTO ((tree));\n+extern int drop_through_at_end_p\tPROTO ((void));\n+extern void expand_start_target_temps\tPROTO ((void));\n+extern void expand_end_target_temps\tPROTO ((void));\n+extern void expand_elseif\t\tPROTO ((tree));\n+extern void expand_decl\t\t\tPROTO ((tree));\n+extern int expand_decl_cleanup\t\tPROTO ((tree, tree));\n+extern void expand_anon_union_decl\tPROTO ((tree, tree, tree));\n+extern void move_cleanups_up\t\tPROTO ((void));\n+extern void expand_start_case_dummy\tPROTO ((void));\n+extern void expand_end_case_dummy\tPROTO ((void));\n+extern tree case_index_expr_type\tPROTO ((void));\n+extern HOST_WIDE_INT all_cases_count\tPROTO ((tree, int *));\n+extern void mark_seen_cases\t\tPROTO ((tree, unsigned char *,\n+\t\t\t\t\t\tlong, int));\n+extern void check_for_full_enumeration_handling PROTO ((tree));\n+extern void declare_nonlocal_label\tPROTO ((tree));\n+\n /* If KIND=='I', return a suitable global initializer (constructor) name.\n    If KIND=='D', return a suitable global clean-up (destructor) name.  */\n extern tree get_file_function_name PROTO((int));"}]}