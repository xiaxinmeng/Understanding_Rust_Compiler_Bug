{"sha": "e20dcbefa5407dc35fe4acf749322f6a75781d38", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTIwZGNiZWZhNTQwN2RjMzVmZTRhY2Y3NDkzMjJmNmE3NTc4MWQzOA==", "commit": {"author": {"name": "Paolo Bonzini", "email": "bonzini@gnu.org", "date": "2005-11-21T16:38:13Z"}, "committer": {"name": "Paolo Bonzini", "email": "bonzini@gcc.gnu.org", "date": "2005-11-21T16:38:13Z"}, "message": "re PR target/24951 (ICE: RTL check: expected code 'const_int', have 'const_double' in output_vec_const_move, at config/rs6000/rs6000.c)\n\n2005-11-21  Paolo Bonzini  <bonzini@gnu.org>\n\n\tPR target/24951\n\t* config/rs6000/rs6000.c (output_vec_const_move): Load cst and\n\tcst2 only for SPE vectors.\n\nFrom-SVN: r107312", "tree": {"sha": "a724852f25b48916f7cb2d977d9ce0b3aac47ece", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a724852f25b48916f7cb2d977d9ce0b3aac47ece"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e20dcbefa5407dc35fe4acf749322f6a75781d38", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e20dcbefa5407dc35fe4acf749322f6a75781d38", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e20dcbefa5407dc35fe4acf749322f6a75781d38", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e20dcbefa5407dc35fe4acf749322f6a75781d38/comments", "author": {"login": "bonzini", "id": 42082, "node_id": "MDQ6VXNlcjQyMDgy", "avatar_url": "https://avatars.githubusercontent.com/u/42082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bonzini", "html_url": "https://github.com/bonzini", "followers_url": "https://api.github.com/users/bonzini/followers", "following_url": "https://api.github.com/users/bonzini/following{/other_user}", "gists_url": "https://api.github.com/users/bonzini/gists{/gist_id}", "starred_url": "https://api.github.com/users/bonzini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bonzini/subscriptions", "organizations_url": "https://api.github.com/users/bonzini/orgs", "repos_url": "https://api.github.com/users/bonzini/repos", "events_url": "https://api.github.com/users/bonzini/events{/privacy}", "received_events_url": "https://api.github.com/users/bonzini/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "72c164b3f80fada904619f8af974adf53ceff1ad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/72c164b3f80fada904619f8af974adf53ceff1ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/72c164b3f80fada904619f8af974adf53ceff1ad"}], "stats": {"total": 15, "additions": 10, "deletions": 5}, "files": [{"sha": "38726f706cf54ea3129ab376ea83bce75a847490", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e20dcbefa5407dc35fe4acf749322f6a75781d38/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e20dcbefa5407dc35fe4acf749322f6a75781d38/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e20dcbefa5407dc35fe4acf749322f6a75781d38", "patch": "@@ -1,3 +1,9 @@\n+2005-11-21  Paolo Bonzini  <bonzini@gnu.org>\n+\n+\tPR target/24951\n+\t* config/rs6000/rs6000.c (output_vec_const_move): Load cst and\n+\tcst2 only for SPE vectors.\n+\n 2005-11-21  David Edelsohn  <edelsohn@gnu.org>\n \n \tPR target/24953"}, {"sha": "b72c3fdba35fd47c77c12a3a4fe06fe7b2f58194", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e20dcbefa5407dc35fe4acf749322f6a75781d38/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e20dcbefa5407dc35fe4acf749322f6a75781d38/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=e20dcbefa5407dc35fe4acf749322f6a75781d38", "patch": "@@ -2200,9 +2200,6 @@ output_vec_const_move (rtx *operands)\n \n   dest = operands[0];\n   vec = operands[1];\n-\n-  cst = INTVAL (CONST_VECTOR_ELT (vec, 0));\n-  cst2 = INTVAL (CONST_VECTOR_ELT (vec, 1));\n   mode = GET_MODE (dest);\n \n   if (TARGET_ALTIVEC)\n@@ -2240,8 +2237,10 @@ output_vec_const_move (rtx *operands)\n \n      FIXME: We should probably return # and add post reload\n      splitters for these, but this way is so easy ;-).  */\n-  operands[1] = GEN_INT (cst);\n-  operands[2] = GEN_INT (cst2);\n+  cst = INTVAL (CONST_VECTOR_ELT (vec, 0));\n+  cst2 = INTVAL (CONST_VECTOR_ELT (vec, 1));\n+  operands[1] = CONST_VECTOR_ELT (vec, 0);\n+  operands[2] = CONST_VECTOR_ELT (vec, 1);\n   if (cst == cst2)\n     return \"li %0,%1\\n\\tevmergelo %0,%0,%0\";\n   else"}]}