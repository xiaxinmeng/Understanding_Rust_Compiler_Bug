{"sha": "d9adb08caad78c36048380338a1a481dc157bf5f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDlhZGIwOGNhYWQ3OGMzNjA0ODM4MDMzOGExYTQ4MWRjMTU3YmY1Zg==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2013-07-05T10:21:56Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-07-05T10:21:56Z"}, "message": "freeze.adb (Freeze_Entity): Remove test of obsolete flag Propagate_Exceptions...\n\n2013-07-05  Robert Dewar  <dewar@adacore.com>\n\n\t* freeze.adb (Freeze_Entity): Remove test of obsolete flag\n\tPropagate_Exceptions, and associated useless code that did\n\tnothing.\n\t* gnat_rm.texi: Add documentation for obsolete pragma\n\tPropagate_Exceptions.\n\t* opt.ads (Propagate_Exceptions): Obsolete flag removed.\n\t* sem_prag.adb (Analyze_Pragma, case Propagate_Exceptions):\n\tRemove useless and obsolete setting of Propagate_Exceptions flag.\n\nFrom-SVN: r200698", "tree": {"sha": "178b6cc4e5b395a3bb0429bbc0d3b54f93c48122", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/178b6cc4e5b395a3bb0429bbc0d3b54f93c48122"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d9adb08caad78c36048380338a1a481dc157bf5f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d9adb08caad78c36048380338a1a481dc157bf5f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d9adb08caad78c36048380338a1a481dc157bf5f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d9adb08caad78c36048380338a1a481dc157bf5f/comments", "author": null, "committer": null, "parents": [{"sha": "4672940951fd298f1a8ffd5e32a53fb5a08c3877", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4672940951fd298f1a8ffd5e32a53fb5a08c3877", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4672940951fd298f1a8ffd5e32a53fb5a08c3877"}], "stats": {"total": 66, "additions": 38, "deletions": 28}, "files": [{"sha": "2c1f91464c14daf830ea633c59e2b69774e9a7d2", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9adb08caad78c36048380338a1a481dc157bf5f/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9adb08caad78c36048380338a1a481dc157bf5f/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=d9adb08caad78c36048380338a1a481dc157bf5f", "patch": "@@ -1,3 +1,14 @@\n+2013-07-05  Robert Dewar  <dewar@adacore.com>\n+\n+\t* freeze.adb (Freeze_Entity): Remove test of obsolete flag\n+\tPropagate_Exceptions, and associated useless code that did\n+\tnothing.\n+\t* gnat_rm.texi: Add documentation for obsolete pragma\n+\tPropagate_Exceptions.\n+\t* opt.ads (Propagate_Exceptions): Obsolete flag removed.\n+\t* sem_prag.adb (Analyze_Pragma, case Propagate_Exceptions):\n+\tRemove useless and obsolete setting of Propagate_Exceptions flag.\n+\n 2013-07-05  Robert Dewar  <dewar@adacore.com>\n \n \t* gnat_rm.texi, sem_prag.adb: Minor comment/text fixes."}, {"sha": "125c3bcb6eedcbea4034ef5375463440920c34ee", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9adb08caad78c36048380338a1a481dc157bf5f/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9adb08caad78c36048380338a1a481dc157bf5f/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=d9adb08caad78c36048380338a1a481dc157bf5f", "patch": "@@ -4940,21 +4940,6 @@ package body Freeze is\n            and then not Is_Library_Level_Entity (E)\n          then\n             Set_Is_Public (E, False);\n-\n-         --  If no address clause and not intrinsic, then for imported\n-         --  subprogram in main unit, generate descriptor if we are in\n-         --  Propagate_Exceptions mode.\n-\n-         --  This is very odd code, it makes a null result, why ???\n-\n-         elsif Propagate_Exceptions\n-           and then Is_Imported (E)\n-           and then not Is_Intrinsic_Subprogram (E)\n-           and then Convention (E) /= Convention_Stubbed\n-         then\n-            if Result = No_List then\n-               Result := Empty_List;\n-            end if;\n          end if;\n       end if;\n "}, {"sha": "cb559a320c7647cc056513495708996ac0e4ea9a", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9adb08caad78c36048380338a1a481dc157bf5f/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9adb08caad78c36048380338a1a481dc157bf5f/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=d9adb08caad78c36048380338a1a481dc157bf5f", "patch": "@@ -206,6 +206,7 @@ Implementation Defined Pragmas\n * Pragma Priority_Specific_Dispatching::\n * Pragma Profile::\n * Pragma Profile_Warnings::\n+* Pragma Propagate_Exceptions::\n * Pragma Psect_Object::\n * Pragma Pure_05::\n * Pragma Pure_12::\n@@ -1010,6 +1011,7 @@ consideration, the use of these pragmas should be minimized.\n * Pragma Priority_Specific_Dispatching::\n * Pragma Profile::\n * Pragma Profile_Warnings::\n+* Pragma Propagate_Exceptions::\n * Pragma Psect_Object::\n * Pragma Pure_05::\n * Pragma Pure_12::\n@@ -5288,7 +5290,24 @@ generating @code{Restrictions} pragmas, it generates\n violations of the profile generate warning messages instead\n of error messages.\n \n+@node Pragma Propagate_Exceptions\n+@unnumberedsec Pragma Propagate_Exceptions\n+@cindex Interfacing to C++\n+@findex Propagate_Exceptions\n+@noindent\n+Syntax:\n+\n+@smallexample @c ada\n+pragma Propagate_Exceptions;\n+@end smallexample\n+\n @noindent\n+This pragma is now obsolete and, other than generating a warning if warnings\n+on obsolescent features are enabled, is ignored.\n+It is retained for compatibility\n+purposes. It used to be used in connection with optimization of\n+a now-obsolete mechanism for implementation of exceptions.\n+\n @node Pragma Psect_Object\n @unnumberedsec Pragma Psect_Object\n @findex Psect_Object"}, {"sha": "54d39f80312195fc6ded4f1018e307f2f2a1aa40", "filename": "gcc/ada/opt.ads", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9adb08caad78c36048380338a1a481dc157bf5f/gcc%2Fada%2Fopt.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9adb08caad78c36048380338a1a481dc157bf5f/gcc%2Fada%2Fopt.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fopt.ads?ref=d9adb08caad78c36048380338a1a481dc157bf5f", "patch": "@@ -1147,12 +1147,6 @@ package Opt is\n    --  Set to true to enable printing of package standard in source form.\n    --  This flag is set by the -gnatS switch\n \n-   Propagate_Exceptions : Boolean := False;\n-   --  GNAT\n-   --  Indicates if subprogram descriptor exception tables should be\n-   --  built for imported subprograms. Set True if a Propagate_Exceptions\n-   --  pragma applies to the extended main unit.\n-\n    type Usage is (Unknown, Not_In_Use, In_Use);\n    Project_File_In_Use : Usage := Unknown;\n    --  GNAT"}, {"sha": "3f70c8f055264dbe29f39c34b568894224844075", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9adb08caad78c36048380338a1a481dc157bf5f/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9adb08caad78c36048380338a1a481dc157bf5f/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=d9adb08caad78c36048380338a1a481dc157bf5f", "patch": "@@ -10300,7 +10300,7 @@ package body Sem_Prag is\n \n             if Warn_On_Obsolescent_Feature then\n                Error_Msg_N\n-                 (\"'G'N'A'T pragma cpp'_virtual is now obsolete and has no \"\n+                 (\"'G'N'A'T pragma Cpp'_Virtual is now obsolete and has no \"\n                   & \"effect?j?\", N);\n             end if;\n          end CPP_Virtual;\n@@ -10315,7 +10315,7 @@ package body Sem_Prag is\n \n             if Warn_On_Obsolescent_Feature then\n                Error_Msg_N\n-                 (\"'G'N'A'T pragma cpp'_vtable is now obsolete and has no \"\n+                 (\"'G'N'A'T pragma Cpp'_Vtable is now obsolete and has no \"\n                   & \"effect?j?\", N);\n             end if;\n          end CPP_Vtable;\n@@ -14604,6 +14604,7 @@ package body Sem_Prag is\n          when Pragma_Overriding_Renamings =>\n             GNAT_Pragma;\n             Check_Arg_Count (0);\n+            Check_Valid_Configuration_Pragma;\n             Overriding_Renamings := True;\n \n          ----------\n@@ -15039,7 +15040,7 @@ package body Sem_Prag is\n \n          --  pragma Predicate\n          --    ([Entity =>] type_LOCAL_NAME,\n-         --     [Check  =>] EXPRESSION);\n+         --     [Check  =>] boolean_EXPRESSION);\n \n          when Pragma_Predicate => Predicate : declare\n             Type_Id : Node_Id;\n@@ -15469,10 +15470,10 @@ package body Sem_Prag is\n             GNAT_Pragma;\n             Check_Arg_Count (0);\n \n-            --  This code does not agree with above (no effect) comment ???\n-\n-            if In_Extended_Main_Source_Unit (N) then\n-               Propagate_Exceptions := True;\n+            if Warn_On_Obsolescent_Feature then\n+               Error_Msg_N\n+                 (\"'G'N'A'T pragma Propagate'_Exceptions is now obsolete \" &\n+                  \"and has no effect?j?\", N);\n             end if;\n \n          ------------------"}]}