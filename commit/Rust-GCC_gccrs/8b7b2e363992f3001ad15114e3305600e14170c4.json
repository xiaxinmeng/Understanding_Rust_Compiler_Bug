{"sha": "8b7b2e363992f3001ad15114e3305600e14170c4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGI3YjJlMzYzOTkyZjMwMDFhZDE1MTE0ZTMzMDU2MDBlMTQxNzBjNA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-05-06T16:51:22Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-05-06T16:51:22Z"}, "message": "(CONST_COSTS): Revise all costs.\n\nFrom-SVN: r7225", "tree": {"sha": "0fb24a7f2c6ef5f8c1e9537168c9b1b504b4fffd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0fb24a7f2c6ef5f8c1e9537168c9b1b504b4fffd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8b7b2e363992f3001ad15114e3305600e14170c4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b7b2e363992f3001ad15114e3305600e14170c4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8b7b2e363992f3001ad15114e3305600e14170c4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b7b2e363992f3001ad15114e3305600e14170c4/comments", "author": null, "committer": null, "parents": [{"sha": "71923da7f375ff793f50a804044b4d96b044df62", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/71923da7f375ff793f50a804044b4d96b044df62", "html_url": "https://github.com/Rust-GCC/gccrs/commit/71923da7f375ff793f50a804044b4d96b044df62"}], "stats": {"total": 19, "additions": 15, "deletions": 4}, "files": [{"sha": "ba135336986c778a667dd0151542c4b72fc8be65", "filename": "gcc/config/alpha/alpha.h", "status": "modified", "additions": 15, "deletions": 4, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b7b2e363992f3001ad15114e3305600e14170c4/gcc%2Fconfig%2Falpha%2Falpha.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b7b2e363992f3001ad15114e3305600e14170c4/gcc%2Fconfig%2Falpha%2Falpha.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.h?ref=8b7b2e363992f3001ad15114e3305600e14170c4", "patch": "@@ -1312,17 +1312,28 @@ extern char *current_function_name;\n    of a switch statement.  If the code is computed here,\n    return it with a return statement.  Otherwise, break from the switch.\n \n-   We only care about the cost if it is valid in an insn, so all constants\n-   are cheap.  */\n+   If this is an 8-bit constant, return zero since it can be used\n+   nearly anywhere with no cost.  If it is a valid operand for an\n+   ADD or AND, likewise return 0 if we know it will be used in that\n+   context.  Otherwise, return 2 since it might be used there later.\n+   All other constants take at least two insns.  */\n \n #define CONST_COSTS(RTX,CODE,OUTER_CODE) \\\n   case CONST_INT:\t\t\t\t\t\t\\\n+    if (INTVAL (RTX) >= 0 && INTVAL (RTX) < 2546)\t\t\\\n+      return 0;\t\t\t\t\t\t\t\\\n   case CONST_DOUBLE:\t\t\t\t\t\t\\\n-    return 0;\t\t\t\t\t\t\t\\\n+    if (((OUTER_CODE) == PLUS && add_operand (RTX, VOIDmode))\t\\\n+\t|| ((OUTER_CODE) == AND && and_operand (RTX, VOIDmode))) \\\n+      return 0;\t\t\t\t\t\t\t\\\n+    else if (add_operand (RTX, VOIDmode) || and_operand (RTX, VOIDmode)) \\\n+      return 2;\t\t\t\t\t\t\t\\\n+    else\t\t\t\t\t\t\t\\\n+      return COSTS_N_INSNS (2);\t\t\t\t\t\\\n   case CONST:\t\t\t\t\t\t\t\\\n   case SYMBOL_REF:\t\t\t\t\t\t\\\n   case LABEL_REF:\t\t\t\t\t\t\\\n-    return 6;\t\t\t\t\t\t\t\\\n+    return COSTS_N_INSNS (3);\n     \n /* Provide the costs of a rtl expression.  This is in the body of a\n    switch on CODE.  */"}]}