{"sha": "b67b4e47b0a2fc857295303a648839dc4ff4cdc8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjY3YjRlNDdiMGEyZmM4NTcyOTUzMDNhNjQ4ODM5ZGM0ZmY0Y2RjOA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1992-10-09T11:27:31Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1992-10-09T11:27:31Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r2378", "tree": {"sha": "81d829ad94149d2ce12d415dda7b72281345e30d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/81d829ad94149d2ce12d415dda7b72281345e30d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b67b4e47b0a2fc857295303a648839dc4ff4cdc8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b67b4e47b0a2fc857295303a648839dc4ff4cdc8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b67b4e47b0a2fc857295303a648839dc4ff4cdc8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b67b4e47b0a2fc857295303a648839dc4ff4cdc8/comments", "author": null, "committer": null, "parents": [{"sha": "a74467d457c7d44ff2ceb19ce6f4c01ddc4d694a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a74467d457c7d44ff2ceb19ce6f4c01ddc4d694a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a74467d457c7d44ff2ceb19ce6f4c01ddc4d694a"}], "stats": {"total": 32, "additions": 16, "deletions": 16}, "files": [{"sha": "1ecf6502bed0f7141fd7ff79237962d2bcefd78e", "filename": "gcc/ginclude/va-alpha.h", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b67b4e47b0a2fc857295303a648839dc4ff4cdc8/gcc%2Fginclude%2Fva-alpha.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b67b4e47b0a2fc857295303a648839dc4ff4cdc8/gcc%2Fginclude%2Fva-alpha.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fginclude%2Fva-alpha.h?ref=b67b4e47b0a2fc857295303a648839dc4ff4cdc8", "patch": "@@ -94,9 +94,9 @@ __extension__\t\t\t\t\t\t\t\t\\\n       /* Get a pointer to the value.  If we want a float instead of\t\\\n \t a double, we have to make one and point to it instead.  */     \\\n \t\t\t\t\t\t\t\t\t\\\n-      __rv = (void *) & (__va.__va_arg < 6\t\t\t\t\\\n-\t\t\t ? __va.__va_fregs[__va.__va_arg]\t\t\\\n-\t\t\t : __va.__va_stack[__va.__va_arg - 6]);\t\t\\\n+      __rv = (void *) & ((__va).__va_arg < 6\t\t\t\t\\\n+\t\t\t ? (__va).__va_fregs[(__va).__va_arg]\t\t\\\n+\t\t\t : (__va).__va_stack[(__va).__va_arg - 6]);\t\\\n \t\t\t\t\t\t\t\t\t\\\n       if (sizeof (__type) == sizeof (float))\t\t\t\t\\\n \t{\t\t\t\t\t\t\t\t\\\n@@ -120,23 +120,23 @@ __extension__\t\t\t\t\t\t\t\t\\\n \t\t\t\t\t\t\t\t\t\\\n       /* Force this on the stack if it's alignment isn't right.  */\t\\\n \t\t\t\t\t\t\t\t\t\\\n-      if (__va.__va_arg < 6)\t\t\t\t\t\t\\\n+      if ((__va).__va_arg < 6)\t\t\t\t\t\t\\\n \tswitch (sizeof (__type))\t\t\t\t\t\\\n \t  {\t\t\t\t\t\t\t\t\\\n \t  case sizeof (char):\t\t\t\t\t\t\\\n \t    break;\t\t\t\t\t\t\t\\\n \t  case sizeof (short):\t\t\t\t\t\t\\\n \t    if (__alignof__ (__type) < sizeof (short))\t\t\t\\\n-\t      __va.__va_arg = 6;\t\t\t\t\t\\\n+\t      (__va).__va_arg = 6;\t\t\t\t\t\\\n \t    break;\t\t\t\t\t\t\t\\\n \t  case 3:\t\t\t\t\t\t\t\\\n \t  case sizeof (int):\t\t\t\t\t\t\\\n \t    if (__alignof__ (__type) < sizeof (int))\t\t\t\\\n-\t      __va.__va_arg = 6;\t\t\t\t\t\\\n+\t      (__va).__va_arg = 6;\t\t\t\t\t\\\n \t    break;\t\t\t\t\t\t\t\\\n \t  default:\t\t\t\t\t\t\t\\\n \t    if (__alignof__ (__type) < sizeof (long))\t\t\t\\\n-\t      __va.__va_arg = 6;\t\t\t\t\t\\\n+\t      (__va).__va_arg = 6;\t\t\t\t\t\\\n \t    break;\t\t\t\t\t\t\t\\\n \t  }\t\t\t\t\t\t\t\t\\\n \t\t\t\t\t\t\t\t\t\\\n@@ -145,20 +145,20 @@ __extension__\t\t\t\t\t\t\t\t\\\n \t passed both in registers and in memory.  */\t\t\t\\\n \t\t\t\t\t\t\t\t\t\\\n       if (sizeof (__type) <= sizeof (long)\t\t\t\t\\\n-\t  || __va.__va_arg >= 6\t\t\t\t\t\\\n-\t  || __va.__va_arg + __va_nwords (__type) < 6)\t\t\t\\\n-\t__rv = (void *) & (__va.__va_arg < 6\t\t\t\t\\\n-\t\t\t   ? __va.__va_iregs[__va.__va_arg]\t\t\\\n-\t\t\t   : __va.__va_stack[__va.__va_arg - 6]);\t\\\n+\t  || (__va).__va_arg >= 6\t\t\t\t\t\\\n+\t  || (__va).__va_arg + __va_nwords (__type) < 6)\t\t\\\n+\t__rv = (void *) & ((__va).__va_arg < 6\t\t\t\t\\\n+\t\t\t   ? (__va).__va_iregs[(__va).__va_arg]\t\t\\\n+\t\t\t   : (__va).__va_stack[(__va).__va_arg - 6]);\t\\\n       else\t\t\t\t\t\t\t\t\\\n \t{\t\t\t\t\t\t\t\t\\\n \t  long __obj[__va_nwords (__type)];\t\t\t\t\\\n \t  int __i;\t\t\t\t\t\t\t\\\n \t\t\t\t\t\t\t\t\t\\\n \t  for (__i = 0; __i < __va_nwords (__type); __i++)\t\t\\\n-\t    __obj[__i] = (__va.__va_arg < 6\t\t\t\t\\\n-\t\t\t  ? __va.__va_iregs[__va.__va_arg]\t\t\\\n-\t\t\t  : __va.__va_stack[__va.__va_arg - 6]);\t\\\n+\t    __obj[__i] = ((__va).__va_arg < 6\t\t\t\t\\\n+\t\t\t  ? (__va).__va_iregs[(__va).__va_arg]\t\t\\\n+\t\t\t  : (__va).__va_stack[(__va).__va_arg - 6]);\t\\\n \t\t\t\t\t\t\t\t\t\\\n \t  __rv = (void *) &__obj[0];\t\t\t\t\t\\\n \t}\t\t\t\t\t\t\t\t\\\n@@ -177,7 +177,7 @@ __extension__\t\t\t\t\t\t\t\t\\\n \tabort ();\t\t\t\t\t\t\t\\\n     }\t\t\t\t\t\t\t\t\t\\\n \t\t\t\t\t\t\t\t\t\\\n-  __va.__va_arg += __va_nwords (__type);\t\t\t\t\\\n+  (__va).__va_arg += __va_nwords (__type);\t\t\t\t\\\n \t\t\t\t\t\t\t\t\t\\\n   __rv;\t\t\t\t\t\t\t\t\t\\\n }))"}]}