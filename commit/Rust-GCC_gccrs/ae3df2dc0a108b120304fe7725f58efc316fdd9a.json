{"sha": "ae3df2dc0a108b120304fe7725f58efc316fdd9a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWUzZGYyZGMwYTEwOGIxMjAzMDRmZTc3MjVmNThlZmMzMTZmZGQ5YQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2013-12-10T11:07:28Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2013-12-10T11:07:28Z"}, "message": "expr.c (expand_expr_real_1): Always return 0 for the extraction of a bit-field of null size.\n\n\t* expr.c (expand_expr_real_1) <normal_inner_ref>: Always return 0 for\n\tthe extraction of a bit-field of null size.\n\nFrom-SVN: r205855", "tree": {"sha": "7662eb21d49d1698fcaf48e012c2443104249515", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7662eb21d49d1698fcaf48e012c2443104249515"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ae3df2dc0a108b120304fe7725f58efc316fdd9a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae3df2dc0a108b120304fe7725f58efc316fdd9a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae3df2dc0a108b120304fe7725f58efc316fdd9a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae3df2dc0a108b120304fe7725f58efc316fdd9a/comments", "author": null, "committer": null, "parents": [{"sha": "ed9e19a494a43647159b156737c55bde8ebf3c59", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed9e19a494a43647159b156737c55bde8ebf3c59", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ed9e19a494a43647159b156737c55bde8ebf3c59"}], "stats": {"total": 14, "additions": 14, "deletions": 0}, "files": [{"sha": "73f297442df0168dec20beca284b49c0d727ab15", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae3df2dc0a108b120304fe7725f58efc316fdd9a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae3df2dc0a108b120304fe7725f58efc316fdd9a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ae3df2dc0a108b120304fe7725f58efc316fdd9a", "patch": "@@ -1,3 +1,8 @@\n+2013-12-10  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* expr.c (expand_expr_real_1) <normal_inner_ref>: Always return 0 for\n+\tthe extraction of a bit-field of null size.\n+\n 2013-12-10  Marek Polacek  <polacek@redhat.com>\n \n \tPR sanitizer/59437"}, {"sha": "19df9dc0146582e09f17ab2bba5a30bdaba636b1", "filename": "gcc/expr.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae3df2dc0a108b120304fe7725f58efc316fdd9a/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae3df2dc0a108b120304fe7725f58efc316fdd9a/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=ae3df2dc0a108b120304fe7725f58efc316fdd9a", "patch": "@@ -10157,6 +10157,8 @@ expand_expr_real_1 (tree exp, rtx target, enum machine_mode tmode,\n \t\tif (target == 0)\n \t\t  target = assign_temp (type, 1, 1);\n \n+\t\t/* ??? Unlike the similar test a few lines below, this one is\n+\t\t   very likely obsolete.  */\n \t\tif (bitsize == 0)\n \t\t  return target;\n \n@@ -10177,6 +10179,13 @@ expand_expr_real_1 (tree exp, rtx target, enum machine_mode tmode,\n \t\treturn target;\n \t      }\n \n+\t    /* If we have nothing to extract, the result will be 0 for targets\n+\t       with SHIFT_COUNT_TRUNCATED == 0 and garbage otherwise.  Always\n+\t       return 0 for the sake of consistency, as reading a zero-sized\n+\t       bitfield is valid in Ada and the value is fully specified.  */\n+\t    if (bitsize == 0)\n+\t      return const0_rtx;\n+\n \t    op0 = validize_mem (op0);\n \n \t    if (MEM_P (op0) && REG_P (XEXP (op0, 0)))"}]}