{"sha": "e8a25ac83c1850d2af91db335625ee7cf5cf526f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZThhMjVhYzgzYzE4NTBkMmFmOTFkYjMzNTYyNWVlN2NmNWNmNTI2Zg==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2011-10-28T14:33:21Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2011-10-28T14:33:21Z"}, "message": "50862.cc: Trivial formatting fixes.\n\n2011-10-28  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* testsuite/30_threads/condition_variable_any/50862.cc: Trivial\n\tformatting fixes.\n\nFrom-SVN: r180617", "tree": {"sha": "32e260fcf2b9106d93f77ef6fc4edce2e628a09f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/32e260fcf2b9106d93f77ef6fc4edce2e628a09f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e8a25ac83c1850d2af91db335625ee7cf5cf526f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e8a25ac83c1850d2af91db335625ee7cf5cf526f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e8a25ac83c1850d2af91db335625ee7cf5cf526f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e8a25ac83c1850d2af91db335625ee7cf5cf526f/comments", "author": null, "committer": null, "parents": [{"sha": "a53f35231396649b873de60f93562e322623c743", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a53f35231396649b873de60f93562e322623c743", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a53f35231396649b873de60f93562e322623c743"}], "stats": {"total": 68, "additions": 45, "deletions": 23}, "files": [{"sha": "22e1f04fa49799964d920f54cf51c38a68240697", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8a25ac83c1850d2af91db335625ee7cf5cf526f/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8a25ac83c1850d2af91db335625ee7cf5cf526f/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=e8a25ac83c1850d2af91db335625ee7cf5cf526f", "patch": "@@ -1,3 +1,21 @@\n+2011-10-28  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* testsuite/30_threads/condition_variable_any/50862.cc: Trivial\n+\tformatting fixes.\n+\n+2011-10-28  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* testsuite/23_containers/unordered_map/operations/count.cc: New.\n+\t* testsuite/23_containers/multimap/operations/count.cc: Likewise.\n+\t* testsuite/23_containers/set/operations/count.cc: Likewise.\n+\t* testsuite/23_containers/unordered_multimap/operations/count.cc:\n+\tLikewise.\n+\t* testsuite/23_containers/unordered_set/operations/count.cc: Likewise.\n+\t* testsuite/23_containers/multiset/operations/count.cc: Likewise.\n+\t* testsuite/23_containers/unordered_multiset/operations/count.cc:\n+\tLikewise.\n+\t* testsuite/23_containers/map/operations/count.cc: Likewise.\n+\n 2011-10-28  Richard B. Kreckel  <kreckel@ginac.de>\n \n \t* include/std/complex (__complex_acosh): Just use '< _Tp()'."}, {"sha": "b85a5e136266c585b09d2cf64e7ab4f5a2006158", "filename": "libstdc++-v3/testsuite/30_threads/condition_variable_any/50862.cc", "status": "modified", "additions": 27, "deletions": 23, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8a25ac83c1850d2af91db335625ee7cf5cf526f/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fcondition_variable_any%2F50862.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8a25ac83c1850d2af91db335625ee7cf5cf526f/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fcondition_variable_any%2F50862.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fcondition_variable_any%2F50862.cc?ref=e8a25ac83c1850d2af91db335625ee7cf5cf526f", "patch": "@@ -41,36 +41,40 @@ int main()\n \n   std::mutex                  m;\n   std::condition_variable_any cond;\n-  unsigned int                product=0;\n-  const unsigned int          count=10;\n+  unsigned int                product = 0;\n+  const unsigned int          count = 10;\n \n   // writing to stream causes timing changes which makes deadlock easier\n   // to reproduce - do not remove\n   std::ostringstream out;\n \n   // create consumers\n   std::array<scoped_thread, 2> threads;\n-  for(size_t i=0; i<threads.size(); ++i)\n-    threads[i].t = std::thread( [&] {\n-\t  for(unsigned int i=0; i<count; ++i)\n-\t  {\n-\t    std::this_thread::yield();\n-\t    Lock lock(m);\n-\t    while(product==0)\n-\t      cond.wait(lock);\n-\t    out << \"got product \" << std::this_thread::get_id() << ' ' << product << std::endl;\n-\t    --product;\n-\t  }\n-\t} );\n+  for (std::size_t i = 0; i < threads.size(); ++i)\n+    threads[i].t\n+      = std::thread( [&]\n+\t\t     {\n+\t\t       for (unsigned int i = 0; i < count; ++i)\n+\t\t\t {\n+\t\t\t   std::this_thread::yield();\n+\t\t\t   Lock lock(m);\n+\t\t\t   while(product == 0)\n+\t\t\t     cond.wait(lock);\n+\t\t\t   out << \"got product \"\n+\t\t\t       << std::this_thread::get_id()\n+\t\t\t       << ' ' << product << std::endl;\n+\t\t\t   --product;\n+\t\t\t }\n+\t\t     } );\n \n   // single producer\n-  for(size_t i=0; i<threads.size()*count; ++i)\n-  {\n-    std::this_thread::yield();\n-    Lock lock(m);\n-    ++product;\n-    out << \"setting product \" << std::this_thread::get_id() << ' ' << product << std::endl;\n-    cond.notify_one();\n-  }\n-\n+  for (std::size_t i = 0; i < threads.size() * count; ++i)\n+    {\n+      std::this_thread::yield();\n+      Lock lock(m);\n+      ++product;\n+      out << \"setting product \" << std::this_thread::get_id()\n+\t  << ' ' << product << std::endl;\n+      cond.notify_one();\n+    }\n }"}]}