{"sha": "aaceac0baab45384da2038a70b97c5d19d264cbb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWFjZWFjMGJhYWI0NTM4NGRhMjAzOGE3MGI5N2M1ZDE5ZDI2NGNiYg==", "commit": {"author": {"name": "Nick Clifton", "email": "nickc@cygnus.com", "date": "2000-04-24T18:48:41Z"}, "committer": {"name": "Nick Clifton", "email": "nickc@gcc.gnu.org", "date": "2000-04-24T18:48:41Z"}, "message": "Fix bug building libgcc:\n\nDo not generate small add insn if the source register is eliminable.\n\nFrom-SVN: r33387", "tree": {"sha": "8c849a2cf2bd81d59ed1f52d97891a9f2075cdc1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8c849a2cf2bd81d59ed1f52d97891a9f2075cdc1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aaceac0baab45384da2038a70b97c5d19d264cbb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aaceac0baab45384da2038a70b97c5d19d264cbb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aaceac0baab45384da2038a70b97c5d19d264cbb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aaceac0baab45384da2038a70b97c5d19d264cbb/comments", "author": null, "committer": null, "parents": [{"sha": "ac09f4822bdaf70d1f4e2e6873f680f62b3cd40f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac09f4822bdaf70d1f4e2e6873f680f62b3cd40f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ac09f4822bdaf70d1f4e2e6873f680f62b3cd40f"}], "stats": {"total": 18, "additions": 16, "deletions": 2}, "files": [{"sha": "a8443a85be1daccad077c1ee05ee581120ea90c9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aaceac0baab45384da2038a70b97c5d19d264cbb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aaceac0baab45384da2038a70b97c5d19d264cbb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=aaceac0baab45384da2038a70b97c5d19d264cbb", "patch": "@@ -1,3 +1,10 @@\n+2000-04-24  Nick Clifton  <nickc@cygnus.com>\n+\n+\t* config/fr30/fr30.md (addsi3): Do not use small add instruction if\n+\tthe source register is the frame pointer or arg pointer.\n+\t(addsi3_small_int): Disallow if source register is the frame\n+\tpointer or arg pointer.\n+\n 2000-04-24  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* configure.in (ENUM_BITFIELDS_ARE_UNSIGNED): Delete redundant"}, {"sha": "1b8d310d838d1def3f7d42ef209356e431054800", "filename": "gcc/config/fr30/fr30.md", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aaceac0baab45384da2038a70b97c5d19d264cbb/gcc%2Fconfig%2Ffr30%2Ffr30.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aaceac0baab45384da2038a70b97c5d19d264cbb/gcc%2Fconfig%2Ffr30%2Ffr30.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ffr30%2Ffr30.md?ref=aaceac0baab45384da2038a70b97c5d19d264cbb", "patch": "@@ -621,7 +621,10 @@\n     emit_insn (gen_addsi_regs (operands[0], operands[1], operands[2]));\n   else if (GET_CODE (operands[2]) != CONST_INT)\n     emit_insn (gen_addsi_big_int (operands[0], operands[1], operands[2]));\n-  else if ((INTVAL (operands[2]) >= -16) && (INTVAL (operands[2]) <= 15))\n+  else if (   (REGNO (operands[1]) != FRAME_POINTER_REGNUM)\n+           && (REGNO (operands[1]) != ARG_POINTER_REGNUM)\n+\t   && (INTVAL (operands[2]) >= -16)\n+\t   && (INTVAL (operands[2]) <= 15))\n     emit_insn (gen_addsi_small_int (operands[0], operands[1], operands[2]));\n   else\n     emit_insn (gen_addsi_big_int (operands[0], operands[1], operands[2]));\n@@ -637,11 +640,15 @@\n   \"addn\t%2, %0\"\n )\n \n+;; Do not allow an eliminable register in the source register.  It\n+;; might be eliminated in favour of the stack pointer, probably\n+;; increasing the offset, and so rendering the instruction illegal.\n (define_insn \"addsi_small_int\"\n   [(set (match_operand:SI 0 \"register_operand\"              \"=r,r\")\n \t(plus:SI (match_operand:SI 1 \"register_operand\"      \"0,0\")\n \t\t (match_operand:SI 2 \"add_immediate_operand\" \"I,J\")))]\n-  \"\"\n+  \"   (REGNO (operands[1]) != FRAME_POINTER_REGNUM)\n+   && (REGNO (operands[1]) != ARG_POINTER_REGNUM)\"\n   \"@\n    addn\t%2, %0\n    addn2\t%2, %0\""}]}