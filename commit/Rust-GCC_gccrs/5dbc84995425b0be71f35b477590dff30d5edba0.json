{"sha": "5dbc84995425b0be71f35b477590dff30d5edba0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWRiYzg0OTk1NDI1YjBiZTcxZjM1YjQ3NzU5MGRmZjMwZDVlZGJhMA==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1996-07-08T23:33:15Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1996-07-08T23:33:15Z"}, "message": "(note_mem_written): Varying structure memory access with\nAND address can alias scalars.\n\nFrom-SVN: r12417", "tree": {"sha": "b996b50fe93e605d92173f2a9824b5699c57ea23", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b996b50fe93e605d92173f2a9824b5699c57ea23"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5dbc84995425b0be71f35b477590dff30d5edba0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5dbc84995425b0be71f35b477590dff30d5edba0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5dbc84995425b0be71f35b477590dff30d5edba0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5dbc84995425b0be71f35b477590dff30d5edba0/comments", "author": null, "committer": null, "parents": [{"sha": "c4a18992ac16c7468abe3b701979dc8d19f47a5d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4a18992ac16c7468abe3b701979dc8d19f47a5d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c4a18992ac16c7468abe3b701979dc8d19f47a5d"}], "stats": {"total": 9, "additions": 7, "deletions": 2}, "files": [{"sha": "ba816d780c0d2762b171f2685e4fa4fa9e540825", "filename": "gcc/cse.c", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5dbc84995425b0be71f35b477590dff30d5edba0/gcc%2Fcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5dbc84995425b0be71f35b477590dff30d5edba0/gcc%2Fcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcse.c?ref=5dbc84995425b0be71f35b477590dff30d5edba0", "patch": "@@ -7583,10 +7583,15 @@ note_mem_written (written, writes_ptr)\n \t     and that's just as good as a structure element\n \t     in implying that we need not invalidate scalar variables.\n \t     However, we must allow QImode aliasing of scalars, because the\n-\t     ANSI C standard allows character pointers to alias anything.  */\n+\t     ANSI C standard allows character pointers to alias anything.\n+\t     We must also allow AND addresses, because they may generate\n+\t     accesses outside the object being referenced.  This is used to\n+\t     generate aligned addresses from unaligned addresses, for instance,\n+\t     the alpha storeqi_unaligned pattern.  */\n \t  if (! ((MEM_IN_STRUCT_P (written)\n \t\t  || GET_CODE (XEXP (written, 0)) == PLUS)\n-\t\t && GET_MODE (written) != QImode))\n+\t\t && GET_MODE (written) != QImode\n+\t\t && GET_CODE (XEXP (written, 0)) != AND))\n \t    writes_ptr->all = 1;\n \t  writes_ptr->nonscalar = 1;\n \t}"}]}