{"sha": "1e29b5465e4d8dc30cea2ff2677294fbcecd0f21", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWUyOWI1NDY1ZTRkOGRjMzBjZWEyZmYyNjc3Mjk0ZmJjZWNkMGYyMQ==", "commit": {"author": {"name": "Bob Duff", "email": "duff@adacore.com", "date": "2020-06-12T22:24:52Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-07-27T08:05:15Z"}, "message": "[Ada] Ada2020: AI12-0304 Put_Image attrs of lang-def types\n\ngcc/ada/\n\n\t* libgnat/s-rannum.ads, libgnat/s-rannum.adb: Add Put_Image.\n\tThis will be inherited by the language-defined packages\n\tAda.Numerics.Discrete_Random and Ada.Numerics.Float_Random.\n\t* libgnat/a-convec.ads, libgnat/a-convec.adb: Add Put_Image.\n\t* libgnat/s-putima.ads: Add pragma Preelaborate, so this can be\n\timported into containers packages.\n\t* libgnat/s-putima.adb: Move Digit to private part; otherwise\n\treference to Base is illegal in Preelaborate generic.\n\t* exp_put_image.adb (Build_Record_Put_Image_Procedure): Use the\n\tbase type.", "tree": {"sha": "40a3eff789d5be98873ae445f04bcc19a828f6b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/40a3eff789d5be98873ae445f04bcc19a828f6b7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1e29b5465e4d8dc30cea2ff2677294fbcecd0f21", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e29b5465e4d8dc30cea2ff2677294fbcecd0f21", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1e29b5465e4d8dc30cea2ff2677294fbcecd0f21", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e29b5465e4d8dc30cea2ff2677294fbcecd0f21/comments", "author": {"login": "bobduff", "id": 29099567, "node_id": "MDQ6VXNlcjI5MDk5NTY3", "avatar_url": "https://avatars.githubusercontent.com/u/29099567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bobduff", "html_url": "https://github.com/bobduff", "followers_url": "https://api.github.com/users/bobduff/followers", "following_url": "https://api.github.com/users/bobduff/following{/other_user}", "gists_url": "https://api.github.com/users/bobduff/gists{/gist_id}", "starred_url": "https://api.github.com/users/bobduff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bobduff/subscriptions", "organizations_url": "https://api.github.com/users/bobduff/orgs", "repos_url": "https://api.github.com/users/bobduff/repos", "events_url": "https://api.github.com/users/bobduff/events{/privacy}", "received_events_url": "https://api.github.com/users/bobduff/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7f5c0f328eced560a204bb8e3eae0d45795dd235", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f5c0f328eced560a204bb8e3eae0d45795dd235", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7f5c0f328eced560a204bb8e3eae0d45795dd235"}], "stats": {"total": 65, "additions": 57, "deletions": 8}, "files": [{"sha": "9bcf522e891815ad3e93b5bce7b20ca28ed57ee5", "filename": "gcc/ada/exp_put_image.adb", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e29b5465e4d8dc30cea2ff2677294fbcecd0f21/gcc%2Fada%2Fexp_put_image.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e29b5465e4d8dc30cea2ff2677294fbcecd0f21/gcc%2Fada%2Fexp_put_image.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_put_image.adb?ref=1e29b5465e4d8dc30cea2ff2677294fbcecd0f21", "patch": "@@ -520,8 +520,8 @@ package body Exp_Put_Image is\n       Decl : out Node_Id;\n       Pnam : out Entity_Id)\n    is\n-      pragma Assert (Typ = Base_Type (Typ));\n-      pragma Assert (not Is_Unchecked_Union (Typ));\n+      Btyp : constant Entity_Id := Base_Type (Typ);\n+      pragma Assert (not Is_Unchecked_Union (Btyp));\n \n       First_Time : Boolean := True;\n \n@@ -694,7 +694,7 @@ package body Exp_Put_Image is\n       Stms : constant List_Id := New_List;\n       Rdef : Node_Id;\n       Type_Decl : constant Node_Id :=\n-        Declaration_Node (Base_Type (Underlying_Type (Typ)));\n+        Declaration_Node (Base_Type (Underlying_Type (Btyp)));\n \n    --  Start of processing for Build_Record_Put_Image_Procedure\n \n@@ -732,8 +732,8 @@ package body Exp_Put_Image is\n           Parameter_Associations => New_List\n             (Make_Identifier (Loc, Name_S))));\n \n-      Pnam := Make_Put_Image_Name (Loc, Typ);\n-      Build_Put_Image_Proc (Loc, Typ, Decl, Pnam, Stms);\n+      Pnam := Make_Put_Image_Name (Loc, Btyp);\n+      Build_Put_Image_Proc (Loc, Btyp, Decl, Pnam, Stms);\n    end Build_Record_Put_Image_Procedure;\n \n    -------------------------------"}, {"sha": "c2a0a834c4e52aab9ccd37d8c7d5ce816837e50b", "filename": "gcc/ada/libgnat/a-convec.adb", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e29b5465e4d8dc30cea2ff2677294fbcecd0f21/gcc%2Fada%2Flibgnat%2Fa-convec.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e29b5465e4d8dc30cea2ff2677294fbcecd0f21/gcc%2Fada%2Flibgnat%2Fa-convec.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-convec.adb?ref=1e29b5465e4d8dc30cea2ff2677294fbcecd0f21", "patch": "@@ -31,6 +31,7 @@ with Ada.Containers.Generic_Array_Sort;\n with Ada.Unchecked_Deallocation;\n \n with System; use type System.Address;\n+with System.Put_Images;\n \n package body Ada.Containers.Vectors with\n   SPARK_Mode => Off\n@@ -2299,6 +2300,31 @@ is\n       end return;\n    end Pseudo_Reference;\n \n+   ---------------\n+   -- Put_Image --\n+   ---------------\n+\n+   procedure Put_Image\n+     (S : in out Ada.Strings.Text_Output.Sink'Class; V : Vector)\n+   is\n+      First_Time : Boolean := True;\n+      use System.Put_Images;\n+   begin\n+      Array_Before (S);\n+\n+      for X of V loop\n+         if First_Time then\n+            First_Time := False;\n+         else\n+            Simple_Array_Between (S);\n+         end if;\n+\n+         Element_Type'Put_Image (S, X);\n+      end loop;\n+\n+      Array_After (S);\n+   end Put_Image;\n+\n    -------------------\n    -- Query_Element --\n    -------------------"}, {"sha": "a12e4568b5655a96c95cf36346cc76cf3a928cbb", "filename": "gcc/ada/libgnat/a-convec.ads", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e29b5465e4d8dc30cea2ff2677294fbcecd0f21/gcc%2Fada%2Flibgnat%2Fa-convec.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e29b5465e4d8dc30cea2ff2677294fbcecd0f21/gcc%2Fada%2Flibgnat%2Fa-convec.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-convec.ads?ref=1e29b5465e4d8dc30cea2ff2677294fbcecd0f21", "patch": "@@ -36,6 +36,7 @@ with Ada.Iterator_Interfaces;\n with Ada.Containers.Helpers;\n private with Ada.Finalization;\n private with Ada.Streams;\n+private with Ada.Strings.Text_Output;\n \n --  The language-defined generic package Containers.Vectors provides private\n --  types Vector and Cursor, and a set of operations for each type. A vector\n@@ -696,7 +697,10 @@ private\n       Elements : Elements_Access := null;\n       Last     : Extended_Index := No_Index;\n       TC       : aliased Tamper_Counts;\n-   end record;\n+   end record with Put_Image => Put_Image;\n+\n+   procedure Put_Image\n+     (S : in out Ada.Strings.Text_Output.Sink'Class; V : Vector);\n \n    overriding procedure Adjust (Container : in out Vector);\n    overriding procedure Finalize (Container : in out Vector);"}, {"sha": "20991c390e51a998a424ff2a37cf740a0af5f391", "filename": "gcc/ada/libgnat/s-putima.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e29b5465e4d8dc30cea2ff2677294fbcecd0f21/gcc%2Fada%2Flibgnat%2Fs-putima.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e29b5465e4d8dc30cea2ff2677294fbcecd0f21/gcc%2Fada%2Flibgnat%2Fs-putima.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-putima.adb?ref=1e29b5465e4d8dc30cea2ff2677294fbcecd0f21", "patch": "@@ -46,13 +46,14 @@ package body System.Put_Images is\n       pragma Assert (Base in 2 .. 36);\n       procedure Put_Image (S : in out Sink'Class; X : Integer_Type);\n       procedure Put_Image (S : in out Sink'Class; X : Unsigned_Type);\n+   private\n+      subtype Digit is Unsigned_Type range 0 .. Base - 1;\n    end Generic_Integer_Images;\n \n    package body Generic_Integer_Images is\n \n       A : constant := Character'Pos ('a');\n       Z : constant := Character'Pos ('0');\n-      subtype Digit is Unsigned_Type range 0 .. Base - 1;\n       function Digit_To_Character (X : Digit) return Character is\n         (Character'Val (if X < 10 then X + Z else X + A - 10));\n "}, {"sha": "d4e4410b35ab8485ddf7d84a39a58088539301f9", "filename": "gcc/ada/libgnat/s-putima.ads", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e29b5465e4d8dc30cea2ff2677294fbcecd0f21/gcc%2Fada%2Flibgnat%2Fs-putima.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e29b5465e4d8dc30cea2ff2677294fbcecd0f21/gcc%2Fada%2Flibgnat%2Fs-putima.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-putima.ads?ref=1e29b5465e4d8dc30cea2ff2677294fbcecd0f21", "patch": "@@ -47,6 +47,8 @@ package System.Put_Images is\n    --  after them. See Exp_Put_Image in the compiler for details of these\n    --  calls.\n \n+   pragma Preelaborate;\n+\n    subtype Sink is Ada.Strings.Text_Output.Sink;\n \n    procedure Put_Image_Integer (S : in out Sink'Class; X : Integer);"}, {"sha": "01a6e91bd82a79b287880f0e411a1a0a22079b5b", "filename": "gcc/ada/libgnat/s-rannum.adb", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e29b5465e4d8dc30cea2ff2677294fbcecd0f21/gcc%2Fada%2Flibgnat%2Fs-rannum.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e29b5465e4d8dc30cea2ff2677294fbcecd0f21/gcc%2Fada%2Flibgnat%2Fs-rannum.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-rannum.adb?ref=1e29b5465e4d8dc30cea2ff2677294fbcecd0f21", "patch": "@@ -86,6 +86,7 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n+with Ada.Strings.Text_Output.Utils;\n with Ada.Unchecked_Conversion;\n \n with System.Random_Seed;\n@@ -639,6 +640,16 @@ is\n       return Result;\n    end Image;\n \n+   ---------------\n+   -- Put_Image --\n+   ---------------\n+\n+   procedure Put_Image\n+     (S : in out Strings.Text_Output.Sink'Class; V : State) is\n+   begin\n+      Strings.Text_Output.Utils.Put_String (S, Image (V));\n+   end Put_Image;\n+\n    -----------\n    -- Value --\n    -----------"}, {"sha": "1851b692dac098a0d1cfb68be3e92423ac71f911", "filename": "gcc/ada/libgnat/s-rannum.ads", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e29b5465e4d8dc30cea2ff2677294fbcecd0f21/gcc%2Fada%2Flibgnat%2Fs-rannum.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e29b5465e4d8dc30cea2ff2677294fbcecd0f21/gcc%2Fada%2Flibgnat%2Fs-rannum.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-rannum.ads?ref=1e29b5465e4d8dc30cea2ff2677294fbcecd0f21", "patch": "@@ -57,6 +57,8 @@\n \n with Interfaces;\n \n+private with Ada.Strings.Text_Output;\n+\n package System.Random_Numbers with\n   SPARK_Mode => Off\n is\n@@ -142,7 +144,10 @@ private\n    --  Feedback distance from the current position\n \n    subtype State_Val is Interfaces.Unsigned_32;\n-   type State is array (0 .. N - 1) of State_Val;\n+   type State is array (0 .. N - 1) of State_Val with Put_Image => Put_Image;\n+\n+   procedure Put_Image\n+     (S : in out Ada.Strings.Text_Output.Sink'Class; V : State);\n \n    type Writable_Access (Self : access Generator) is limited null record;\n    --  Auxiliary type to make Generator a self-referential type"}]}