{"sha": "b19736c9cb95e484e1b3595e23fbb5e155e3820e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjE5NzM2YzljYjk1ZTQ4NGUxYjM1OTVlMjNmYmI1ZTE1NWUzODIwZQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2009-10-02T15:32:58Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2009-10-02T15:32:58Z"}, "message": "improve DECL_ABSTRACT_ORIGIN comment\n\nFrom-SVN: r152404", "tree": {"sha": "fe48de2ec48f455f538df19fdd8b000157b2c16a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fe48de2ec48f455f538df19fdd8b000157b2c16a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b19736c9cb95e484e1b3595e23fbb5e155e3820e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b19736c9cb95e484e1b3595e23fbb5e155e3820e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b19736c9cb95e484e1b3595e23fbb5e155e3820e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b19736c9cb95e484e1b3595e23fbb5e155e3820e/comments", "author": null, "committer": null, "parents": [{"sha": "e1b243a800307b7a731b5b3cf69a2d784498923b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1b243a800307b7a731b5b3cf69a2d784498923b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e1b243a800307b7a731b5b3cf69a2d784498923b"}], "stats": {"total": 9, "additions": 5, "deletions": 4}, "files": [{"sha": "7e2e88b2a42bdd49ce0bfb1918d97f1a75a6470a", "filename": "gcc/tree.h", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b19736c9cb95e484e1b3595e23fbb5e155e3820e/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b19736c9cb95e484e1b3595e23fbb5e155e3820e/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=b19736c9cb95e484e1b3595e23fbb5e155e3820e", "patch": "@@ -2484,10 +2484,11 @@ struct GTY(()) tree_decl_minimal {\n \n \n /* For any sort of a ..._DECL node, this points to the original (abstract)\n-   decl node which this decl is an instance of, or else it is NULL indicating\n-   that this decl is not an instance of some other decl.  For example,\n-   in a nested declaration of an inline function, this points back to the\n-   definition.  */\n+   decl node which this decl is an inlined/cloned instance of, or else it\n+   is NULL indicating that this decl is not an instance of some other decl.\n+\n+   The C front-end also uses this in a nested declaration of an inline\n+   function, to point back to the definition.  */\n #define DECL_ABSTRACT_ORIGIN(NODE) (DECL_COMMON_CHECK (NODE)->decl_common.abstract_origin)\n \n /* Like DECL_ABSTRACT_ORIGIN, but returns NODE if there's no abstract"}]}