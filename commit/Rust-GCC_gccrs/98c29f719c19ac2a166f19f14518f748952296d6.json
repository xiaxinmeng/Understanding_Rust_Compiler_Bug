{"sha": "98c29f719c19ac2a166f19f14518f748952296d6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OThjMjlmNzE5YzE5YWMyYTE2NmYxOWYxNDUxOGY3NDg5NTIyOTZkNg==", "commit": {"author": {"name": "Richard Sandiford", "email": "rsandifo@redhat.com", "date": "2003-01-09T09:43:23Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2003-01-09T09:43:23Z"}, "message": "mips.h (PREDICATE_CODES): Add ADDRESSOF for predicates that match register_operands.\n\n\t* config/mips/mips.h (PREDICATE_CODES): Add ADDRESSOF for predicates\n\tthat match register_operands.\n\t* config/mips/mips.c (reg_or_0_operand, true_reg_or_0_operand): Make\n\tregister_operand the default case.\n\nFrom-SVN: r61097", "tree": {"sha": "37715c20165959ba0aae338ea3a67ce3a76bc7cd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/37715c20165959ba0aae338ea3a67ce3a76bc7cd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/98c29f719c19ac2a166f19f14518f748952296d6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98c29f719c19ac2a166f19f14518f748952296d6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/98c29f719c19ac2a166f19f14518f748952296d6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98c29f719c19ac2a166f19f14518f748952296d6/comments", "author": null, "committer": null, "parents": [{"sha": "bbb818c65a054d8b6f376877946df369556a14a7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bbb818c65a054d8b6f376877946df369556a14a7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bbb818c65a054d8b6f376877946df369556a14a7"}], "stats": {"total": 62, "additions": 35, "deletions": 27}, "files": [{"sha": "7e02d6a54def8d51261adfb9f8468115347d37ce", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98c29f719c19ac2a166f19f14518f748952296d6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98c29f719c19ac2a166f19f14518f748952296d6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=98c29f719c19ac2a166f19f14518f748952296d6", "patch": "@@ -1,3 +1,10 @@\n+2003-01-09  Richard Sandiford  <rsandifo@redhat.com>\n+\n+\t* config/mips/mips.h (PREDICATE_CODES): Add ADDRESSOF for predicates\n+\tthat match register_operands.\n+\t* config/mips/mips.c (reg_or_0_operand, true_reg_or_0_operand): Make\n+\tregister_operand the default case.\n+\n 2003-01-09  Eric Botcazou  <ebotcazou@libertysurf.fr>\n \n \tPR c/8032"}, {"sha": "5c0b78af698ae02e6229faed83dd9ff2149c5496", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 2, "deletions": 14, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98c29f719c19ac2a166f19f14518f748952296d6/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98c29f719c19ac2a166f19f14518f748952296d6/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=98c29f719c19ac2a166f19f14518f748952296d6", "patch": "@@ -780,15 +780,9 @@ reg_or_0_operand (op, mode)\n \treturn 0;\n       return op == CONST0_RTX (mode);\n \n-    case REG:\n-    case SUBREG:\n-      return register_operand (op, mode);\n-\n     default:\n-      break;\n+      return register_operand (op, mode);\n     }\n-\n-  return 0;\n }\n \n /* Return truth value of whether OP is a register or the constant 0,\n@@ -807,15 +801,9 @@ true_reg_or_0_operand (op, mode)\n     case CONST_DOUBLE:\n       return op == CONST0_RTX (mode);\n \n-    case REG:\n-    case SUBREG:\n-      return register_operand (op, mode);\n-\n     default:\n-      break;\n+      return register_operand (op, mode);\n     }\n-\n-  return 0;\n }\n \n /* Return truth value if a CONST_DOUBLE is ok to be a legitimate constant.  */"}, {"sha": "864be70a6783c1c0a7ddd6d3012193cf21ecf00d", "filename": "gcc/config/mips/mips.h", "status": "modified", "additions": 16, "deletions": 13, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98c29f719c19ac2a166f19f14518f748952296d6/gcc%2Fconfig%2Fmips%2Fmips.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98c29f719c19ac2a166f19f14518f748952296d6/gcc%2Fconfig%2Fmips%2Fmips.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.h?ref=98c29f719c19ac2a166f19f14518f748952296d6", "patch": "@@ -3786,11 +3786,13 @@ typedef struct mips_args {\n    macro are thoses used in the most insn patterns.  */\n \n #define PREDICATE_CODES\t\t\t\t\t\t\t\\\n-  {\"uns_arith_operand\",\t\t{ REG, CONST_INT, SUBREG }},\t\t\\\n-  {\"arith_operand\",\t\t{ REG, CONST_INT, SUBREG }},\t\t\\\n-  {\"arith32_operand\",\t\t{ REG, CONST_INT, SUBREG }},\t\t\\\n-  {\"reg_or_0_operand\",\t\t{ REG, CONST_INT, CONST_DOUBLE, SUBREG }}, \\\n-  {\"true_reg_or_0_operand\",\t{ REG, CONST_INT, CONST_DOUBLE, SUBREG }}, \\\n+  {\"uns_arith_operand\",\t\t{ REG, CONST_INT, SUBREG, ADDRESSOF }},\t\\\n+  {\"arith_operand\",\t\t{ REG, CONST_INT, SUBREG, ADDRESSOF }},\t\\\n+  {\"arith32_operand\",\t\t{ REG, CONST_INT, SUBREG, ADDRESSOF }},\t\\\n+  {\"reg_or_0_operand\",\t\t{ REG, CONST_INT, CONST_DOUBLE, SUBREG,\t\\\n+\t\t\t\t  ADDRESSOF }},\t\t\t\t\\\n+  {\"true_reg_or_0_operand\",\t{ REG, CONST_INT, CONST_DOUBLE, SUBREG,\t\\\n+\t\t\t\t  ADDRESSOF }},\t\t\t\t\\\n   {\"small_int\",\t\t\t{ CONST_INT }},\t\t\t\t\\\n   {\"large_int\",\t\t\t{ CONST_INT }},\t\t\t\t\\\n   {\"mips_const_double_ok\",\t{ CONST_DOUBLE }},\t\t\t\\\n@@ -3804,20 +3806,21 @@ typedef struct mips_args {\n   {\"call_insn_operand\",\t\t{ CONST_INT, CONST, SYMBOL_REF, REG}},\t\\\n   {\"move_operand\", \t\t{ CONST_INT, CONST_DOUBLE, CONST,\t\\\n \t\t\t\t  SYMBOL_REF, LABEL_REF, SUBREG,\t\\\n-\t\t\t\t  REG, MEM}},\t\t\t\t\\\n+\t\t\t\t  REG, MEM, ADDRESSOF }},\t\t\\\n   {\"movdi_operand\",\t\t{ CONST_INT, CONST_DOUBLE, CONST,\t\\\n-\t\t\t\t  SYMBOL_REF, LABEL_REF, SUBREG, REG,\t\\\n-\t\t\t\t  MEM, SIGN_EXTEND }},\t\t\t\\\n-  {\"se_register_operand\",\t{ SUBREG, REG, SIGN_EXTEND }},\t\t\\\n-  {\"se_reg_or_0_operand\",\t{ REG, CONST_INT, CONST_DOUBLE, SUBREG,\t\\\n+\t\t\t\t  SYMBOL_REF, LABEL_REF, SUBREG,\t\\\n+\t\t\t\t  REG, MEM, ADDRESSOF, SIGN_EXTEND }},\t\\\n+  {\"se_register_operand\",\t{ SUBREG, REG, ADDRESSOF,\t\t\\\n \t\t\t\t  SIGN_EXTEND }},\t\t\t\\\n+  {\"se_reg_or_0_operand\",\t{ REG, CONST_INT, CONST_DOUBLE, SUBREG,\t\\\n+\t\t\t\t  ADDRESSOF, SIGN_EXTEND }},\t\t\\\n   {\"se_uns_arith_operand\",\t{ REG, CONST_INT, SUBREG,\t\t\\\n-\t\t\t\t  SIGN_EXTEND }},\t\t\t\\\n+\t\t\t\t  ADDRESSOF, SIGN_EXTEND }},\t\t\\\n   {\"se_arith_operand\",\t\t{ REG, CONST_INT, SUBREG,\t\t\\\n-\t\t\t\t  SIGN_EXTEND }},\t\t\t\\\n+\t\t\t\t  ADDRESSOF, SIGN_EXTEND }},\t\t\\\n   {\"se_nonmemory_operand\",\t{ CONST_INT, CONST_DOUBLE, CONST,\t\\\n \t\t\t\t  SYMBOL_REF, LABEL_REF, SUBREG,\t\\\n-\t\t\t\t  REG, SIGN_EXTEND }},\t\t\t\\\n+\t\t\t\t  REG, ADDRESSOF, SIGN_EXTEND }},\t\\\n   {\"consttable_operand\",\t{ LABEL_REF, SYMBOL_REF, CONST_INT,\t\\\n \t\t\t\t  CONST_DOUBLE, CONST }},\t\t\\\n   {\"fcc_register_operand\",\t{ REG, SUBREG }},\t\t\t\\"}, {"sha": "f5d0134f2a1f1ff02f156351838cccc940a3c7e3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98c29f719c19ac2a166f19f14518f748952296d6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98c29f719c19ac2a166f19f14518f748952296d6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=98c29f719c19ac2a166f19f14518f748952296d6", "patch": "@@ -1,3 +1,7 @@\n+2003-01-09  Richard Sandiford  <rsandifo@redhat.com>\n+\n+\t* gcc.c-torture/compile/20030109-1.c: New test.\n+\n 2003-01-09  Eric Botcazou  <ebotcazou@libertysurf.fr>\n \n \t* gcc.c-torture/execute/20030109-1.c: New test."}, {"sha": "4df7d18721a205f1cba13277ede74a1e4180d8be", "filename": "gcc/testsuite/gcc.c-torture/compile/20030109-1.c", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98c29f719c19ac2a166f19f14518f748952296d6/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20030109-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98c29f719c19ac2a166f19f14518f748952296d6/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20030109-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20030109-1.c?ref=98c29f719c19ac2a166f19f14518f748952296d6", "patch": "@@ -0,0 +1,6 @@\n+void foo ()\n+{\n+  int x1, x2, x3;\n+\n+  bar (&x2 - &x1, &x3 - &x2);\n+}"}]}