{"sha": "6534852011f3e72090c690ffc53b990feb709b9f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjUzNDg1MjAxMWYzZTcyMDkwYzY5MGZmYzUzYjk5MGZlYjcwOWI5Zg==", "commit": {"author": {"name": "Bob Duff", "email": "duff@adacore.com", "date": "2018-06-11T09:19:12Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-06-11T09:19:12Z"}, "message": "[Ada] Dangling cursor checks in Element function\n\nIn Ada.Containers.Ordered_Maps, if a dangling cursor is passed to the Element\nfunction, execution is erroneous. Therefore, the compiler is not obligated to\ndetect this error. However, this patch inserts code that will detect this error\nin some cases, and raise Program_Error. The same applies to Ordered_Sets,\nOrdered_Multisets, Indefinite_Ordered_Maps, Indefinite_Ordered_Sets, and\nIndefinite_Ordered_Multisets. No test available for erroneous execution.\n\n2018-06-11  Bob Duff  <duff@adacore.com>\n\ngcc/ada/\n\n\t* libgnat/a-ciorma.adb, libgnat/a-ciormu.adb, libgnat/a-ciorse.adb,\n\tlibgnat/a-coorma.adb, libgnat/a-coormu.adb, libgnat/a-coorse.adb:\n\t(Element): Add code to detect dangling cursors in some cases.\n\nFrom-SVN: r261424", "tree": {"sha": "96875b19e41449a13338b35fcc0a99f1d4ad13b2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/96875b19e41449a13338b35fcc0a99f1d4ad13b2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6534852011f3e72090c690ffc53b990feb709b9f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6534852011f3e72090c690ffc53b990feb709b9f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6534852011f3e72090c690ffc53b990feb709b9f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6534852011f3e72090c690ffc53b990feb709b9f/comments", "author": {"login": "bobduff", "id": 29099567, "node_id": "MDQ6VXNlcjI5MDk5NTY3", "avatar_url": "https://avatars.githubusercontent.com/u/29099567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bobduff", "html_url": "https://github.com/bobduff", "followers_url": "https://api.github.com/users/bobduff/followers", "following_url": "https://api.github.com/users/bobduff/following{/other_user}", "gists_url": "https://api.github.com/users/bobduff/gists{/gist_id}", "starred_url": "https://api.github.com/users/bobduff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bobduff/subscriptions", "organizations_url": "https://api.github.com/users/bobduff/orgs", "repos_url": "https://api.github.com/users/bobduff/repos", "events_url": "https://api.github.com/users/bobduff/events{/privacy}", "received_events_url": "https://api.github.com/users/bobduff/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "90265b93430c82d817deae512208a76f5241ea1c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90265b93430c82d817deae512208a76f5241ea1c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/90265b93430c82d817deae512208a76f5241ea1c"}], "stats": {"total": 48, "additions": 48, "deletions": 0}, "files": [{"sha": "e032be370624a5fe394e60aeafd0514ad2497320", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6534852011f3e72090c690ffc53b990feb709b9f/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6534852011f3e72090c690ffc53b990feb709b9f/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=6534852011f3e72090c690ffc53b990feb709b9f", "patch": "@@ -1,3 +1,9 @@\n+2018-06-11  Bob Duff  <duff@adacore.com>\n+\n+\t* libgnat/a-ciorma.adb, libgnat/a-ciormu.adb, libgnat/a-ciorse.adb,\n+\tlibgnat/a-coorma.adb, libgnat/a-coormu.adb, libgnat/a-coorse.adb:\n+\t(Element): Add code to detect dangling cursors in some cases.\n+\n 2018-06-11  Yannick Moy  <moy@adacore.com>\n \n \t* sem_ch6.adb (Build_Subprogram_Declaration): Mark parameters as coming"}, {"sha": "000851a8cac68f1541239ca64659c7210beeff9c", "filename": "gcc/ada/libgnat/a-ciorma.adb", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6534852011f3e72090c690ffc53b990feb709b9f/gcc%2Fada%2Flibgnat%2Fa-ciorma.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6534852011f3e72090c690ffc53b990feb709b9f/gcc%2Fada%2Flibgnat%2Fa-ciorma.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-ciorma.adb?ref=6534852011f3e72090c690ffc53b990feb709b9f", "patch": "@@ -541,6 +541,13 @@ package body Ada.Containers.Indefinite_Ordered_Maps is\n            \"Position cursor of function Element is bad\";\n       end if;\n \n+      if Checks and then\n+        (Left (Position.Node) = Position.Node\n+           or else Right (Position.Node) = Position.Node)\n+      then\n+         raise Program_Error with \"dangling cursor\";\n+      end if;\n+\n       pragma Assert (Vet (Position.Container.Tree, Position.Node),\n                      \"Position cursor of function Element is bad\");\n "}, {"sha": "5c3e9f75bb2f718dbe7fe315d64fb3b62b81240c", "filename": "gcc/ada/libgnat/a-ciormu.adb", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6534852011f3e72090c690ffc53b990feb709b9f/gcc%2Fada%2Flibgnat%2Fa-ciormu.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6534852011f3e72090c690ffc53b990feb709b9f/gcc%2Fada%2Flibgnat%2Fa-ciormu.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-ciormu.adb?ref=6534852011f3e72090c690ffc53b990feb709b9f", "patch": "@@ -545,6 +545,13 @@ package body Ada.Containers.Indefinite_Ordered_Multisets is\n          raise Program_Error with \"Position cursor is bad\";\n       end if;\n \n+      if Checks and then\n+        (Left (Position.Node) = Position.Node\n+           or else Right (Position.Node) = Position.Node)\n+      then\n+         raise Program_Error with \"dangling cursor\";\n+      end if;\n+\n       pragma Assert (Vet (Position.Container.Tree, Position.Node),\n                      \"bad cursor in Element\");\n "}, {"sha": "7394a4aedc5a60da7291b93d4508895642eb64a8", "filename": "gcc/ada/libgnat/a-ciorse.adb", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6534852011f3e72090c690ffc53b990feb709b9f/gcc%2Fada%2Flibgnat%2Fa-ciorse.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6534852011f3e72090c690ffc53b990feb709b9f/gcc%2Fada%2Flibgnat%2Fa-ciorse.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-ciorse.adb?ref=6534852011f3e72090c690ffc53b990feb709b9f", "patch": "@@ -534,6 +534,13 @@ package body Ada.Containers.Indefinite_Ordered_Sets is\n          raise Program_Error with \"Position cursor is bad\";\n       end if;\n \n+      if Checks and then\n+        (Left (Position.Node) = Position.Node\n+           or else Right (Position.Node) = Position.Node)\n+      then\n+         raise Program_Error with \"dangling cursor\";\n+      end if;\n+\n       pragma Assert (Vet (Position.Container.Tree, Position.Node),\n                      \"bad cursor in Element\");\n "}, {"sha": "5fd3ec68a504486b1e598ee9f28afe9293c76364", "filename": "gcc/ada/libgnat/a-coorma.adb", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6534852011f3e72090c690ffc53b990feb709b9f/gcc%2Fada%2Flibgnat%2Fa-coorma.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6534852011f3e72090c690ffc53b990feb709b9f/gcc%2Fada%2Flibgnat%2Fa-coorma.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-coorma.adb?ref=6534852011f3e72090c690ffc53b990feb709b9f", "patch": "@@ -481,6 +481,13 @@ package body Ada.Containers.Ordered_Maps is\n            \"Position cursor of function Element equals No_Element\";\n       end if;\n \n+      if Checks and then\n+        (Left (Position.Node) = Position.Node\n+           or else Right (Position.Node) = Position.Node)\n+      then\n+         raise Program_Error with \"dangling cursor\";\n+      end if;\n+\n       pragma Assert (Vet (Position.Container.Tree, Position.Node),\n                      \"Position cursor of function Element is bad\");\n "}, {"sha": "c114cf9f48a94438872bc88577f05fa1fbd052d0", "filename": "gcc/ada/libgnat/a-coormu.adb", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6534852011f3e72090c690ffc53b990feb709b9f/gcc%2Fada%2Flibgnat%2Fa-coormu.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6534852011f3e72090c690ffc53b990feb709b9f/gcc%2Fada%2Flibgnat%2Fa-coormu.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-coormu.adb?ref=6534852011f3e72090c690ffc53b990feb709b9f", "patch": "@@ -502,6 +502,13 @@ package body Ada.Containers.Ordered_Multisets is\n          raise Constraint_Error with \"Position cursor equals No_Element\";\n       end if;\n \n+      if Checks and then\n+        (Left (Position.Node) = Position.Node\n+           or else Right (Position.Node) = Position.Node)\n+      then\n+         raise Program_Error with \"dangling cursor\";\n+      end if;\n+\n       pragma Assert (Vet (Position.Container.Tree, Position.Node),\n                      \"bad cursor in Element\");\n "}, {"sha": "1f96d39499a3b24fd5b56b1c3da2751cb946123b", "filename": "gcc/ada/libgnat/a-coorse.adb", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6534852011f3e72090c690ffc53b990feb709b9f/gcc%2Fada%2Flibgnat%2Fa-coorse.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6534852011f3e72090c690ffc53b990feb709b9f/gcc%2Fada%2Flibgnat%2Fa-coorse.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-coorse.adb?ref=6534852011f3e72090c690ffc53b990feb709b9f", "patch": "@@ -480,6 +480,13 @@ package body Ada.Containers.Ordered_Sets is\n          raise Constraint_Error with \"Position cursor equals No_Element\";\n       end if;\n \n+      if Checks and then\n+        (Left (Position.Node) = Position.Node\n+           or else Right (Position.Node) = Position.Node)\n+      then\n+         raise Program_Error with \"dangling cursor\";\n+      end if;\n+\n       pragma Assert (Vet (Position.Container.Tree, Position.Node),\n                      \"bad cursor in Element\");\n "}]}