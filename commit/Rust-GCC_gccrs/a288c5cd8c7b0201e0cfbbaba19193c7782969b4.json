{"sha": "a288c5cd8c7b0201e0cfbbaba19193c7782969b4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTI4OGM1Y2Q4YzdiMDIwMWUwY2ZiYmFiYTE5MTkzYzc3ODI5NjliNA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2005-04-01T07:47:27Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2005-04-01T07:47:27Z"}, "message": "re PR debug/19406 (ICE: in force_decl_die, at dwarf2out.c:12442)\n\n\tPR c++/19406\n\t* dwarf2out.c (gen_type_die_for_member): Handle FIELD_DECL.\n\t(dwarf2out_imported_module_or_decl): Use gen_type_die_for_member\n\tfor FIELD_DECLs.\n\n\t* g++.dg/debug/using1.C: New test.\n\nFrom-SVN: r97373", "tree": {"sha": "8d5891d5a68c5adc9e821d05f67e1feeab547dea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8d5891d5a68c5adc9e821d05f67e1feeab547dea"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a288c5cd8c7b0201e0cfbbaba19193c7782969b4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a288c5cd8c7b0201e0cfbbaba19193c7782969b4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a288c5cd8c7b0201e0cfbbaba19193c7782969b4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a288c5cd8c7b0201e0cfbbaba19193c7782969b4/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "fff72cc4ee6ce147c1a436c04583a6e39ebbf072", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fff72cc4ee6ce147c1a436c04583a6e39ebbf072", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fff72cc4ee6ce147c1a436c04583a6e39ebbf072"}], "stats": {"total": 69, "additions": 66, "deletions": 3}, "files": [{"sha": "e3902558415d049edb787761426f411253a48ade", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a288c5cd8c7b0201e0cfbbaba19193c7782969b4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a288c5cd8c7b0201e0cfbbaba19193c7782969b4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a288c5cd8c7b0201e0cfbbaba19193c7782969b4", "patch": "@@ -1,3 +1,10 @@\n+2005-04-01  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/19406\n+\t* dwarf2out.c (gen_type_die_for_member): Handle FIELD_DECL.\n+\t(dwarf2out_imported_module_or_decl): Use gen_type_die_for_member\n+\tfor FIELD_DECLs.\n+\n 2005-04-01  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* doc/contrib.texi, doc/invoke.texi, doc/tm.texi: Fix typos."}, {"sha": "bf761130e6a440d52bbb13d6e4606c1ca4f44420", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 39, "deletions": 3, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a288c5cd8c7b0201e0cfbbaba19193c7782969b4/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a288c5cd8c7b0201e0cfbbaba19193c7782969b4/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=a288c5cd8c7b0201e0cfbbaba19193c7782969b4", "patch": "@@ -11222,13 +11222,27 @@ gen_type_die_for_member (tree type, tree member, dw_die_ref context_die)\n   if (TYPE_DECL_SUPPRESS_DEBUG (TYPE_STUB_DECL (type))\n       && ! lookup_decl_die (member))\n     {\n+      dw_die_ref type_die;\n       gcc_assert (!decl_ultimate_origin (member));\n \n       push_decl_scope (type);\n+      type_die = lookup_type_die (type);\n       if (TREE_CODE (member) == FUNCTION_DECL)\n-\tgen_subprogram_die (member, lookup_type_die (type));\n+\tgen_subprogram_die (member, type_die);\n+      else if (TREE_CODE (member) == FIELD_DECL)\n+\t{\n+\t  /* Ignore the nameless fields that are used to skip bits but handle\n+\t     C++ anonymous unions and structs.  */\n+\t  if (DECL_NAME (member) != NULL_TREE\n+\t      || TREE_CODE (TREE_TYPE (member)) == UNION_TYPE\n+\t      || TREE_CODE (TREE_TYPE (member)) == RECORD_TYPE)\n+\t    {\n+\t      gen_type_die (member_declared_type (member), type_die);\n+\t      gen_field_die (member, type_die);\n+\t    }\n+\t}\n       else\n-\tgen_variable_die (member, lookup_type_die (type));\n+\tgen_variable_die (member, type_die);\n \n       pop_decl_scope ();\n     }\n@@ -12935,7 +12949,29 @@ dwarf2out_imported_module_or_decl (tree decl, tree context)\n   if (TREE_CODE (decl) == TYPE_DECL || TREE_CODE (decl) == CONST_DECL)\n     at_import_die = force_type_die (TREE_TYPE (decl));\n   else\n-    at_import_die = force_decl_die (decl);\n+    {\n+      at_import_die = lookup_decl_die (decl);\n+      if (!at_import_die)\n+\t{\n+\t  /* If we're trying to avoid duplicate debug info, we may not have\n+\t     emitted the member decl for this field.  Emit it now.  */\n+\t  if (TREE_CODE (decl) == FIELD_DECL)\n+\t    {\n+\t      tree type = DECL_CONTEXT (decl);\n+\t      dw_die_ref type_context_die;\n+\n+\t      if (TYPE_CONTEXT (type))\n+\t\tif (TYPE_P (TYPE_CONTEXT (type)))\n+\t\t  type_context_die = force_type_die (TYPE_CONTEXT (type));\n+\t      else\n+\t\ttype_context_die = force_decl_die (TYPE_CONTEXT (type));\n+\t      else\n+\t\ttype_context_die = comp_unit_die;\n+\t      gen_type_die_for_member (type, decl, type_context_die);\n+\t    }\n+\t  at_import_die = force_decl_die (decl);\n+\t}\n+    }\n \n   /* OK, now we have DIEs for decl as well as scope. Emit imported die.  */\n   if (TREE_CODE (decl) == NAMESPACE_DECL)"}, {"sha": "a08f51c35db5d26b0eb120eecc7aa45a0d64373b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a288c5cd8c7b0201e0cfbbaba19193c7782969b4/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a288c5cd8c7b0201e0cfbbaba19193c7782969b4/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a288c5cd8c7b0201e0cfbbaba19193c7782969b4", "patch": "@@ -1,3 +1,8 @@\n+2005-04-01  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/19406\n+\t* g++.dg/debug/using1.C: New test.\n+\n 2005-04-01  Hans-Peter Nilsson  <hp@axis.com>\n \n \tPR middle-end/20524"}, {"sha": "d3168fc6c1c7d01fe841f5d763dcb88323c16780", "filename": "gcc/testsuite/g++.dg/debug/using1.C", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a288c5cd8c7b0201e0cfbbaba19193c7782969b4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fusing1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a288c5cd8c7b0201e0cfbbaba19193c7782969b4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fusing1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fusing1.C?ref=a288c5cd8c7b0201e0cfbbaba19193c7782969b4", "patch": "@@ -0,0 +1,15 @@\n+// PR c++/19406\n+// { dg-do compile }\n+\n+struct A\n+{\n+  virtual int foo();\n+  double d;\n+};\n+\n+struct B : public A\n+{\n+  A::d;\n+};\n+\n+B b;"}]}