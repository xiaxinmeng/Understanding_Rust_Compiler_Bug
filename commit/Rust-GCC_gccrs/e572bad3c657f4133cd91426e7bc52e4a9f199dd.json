{"sha": "e572bad3c657f4133cd91426e7bc52e4a9f199dd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTU3MmJhZDNjNjU3ZjQxMzNjZDkxNDI2ZTdiYzUyZTRhOWYxOTlkZA==", "commit": {"author": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1993-08-16T00:16:56Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1993-08-16T00:16:56Z"}, "message": "reorg.c (find_end_label): If a suitable RETURN insn exists at the end of the current function...\n\n        * reorg.c (find_end_label): If a suitable RETURN insn exists at\n        the end of the current function, place a label in front of it\n        for the end_of_function_label.\n\nFrom-SVN: r5162", "tree": {"sha": "649f4c27bb06a04754eaa75058955721ec10b86b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/649f4c27bb06a04754eaa75058955721ec10b86b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e572bad3c657f4133cd91426e7bc52e4a9f199dd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e572bad3c657f4133cd91426e7bc52e4a9f199dd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e572bad3c657f4133cd91426e7bc52e4a9f199dd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e572bad3c657f4133cd91426e7bc52e4a9f199dd/comments", "author": null, "committer": null, "parents": [{"sha": "4724b3dea0b8f73223bf5bf45b0ff019c70fccd8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4724b3dea0b8f73223bf5bf45b0ff019c70fccd8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4724b3dea0b8f73223bf5bf45b0ff019c70fccd8"}], "stats": {"total": 22, "additions": 20, "deletions": 2}, "files": [{"sha": "98062164318b5792eb646245a8449918b3b1b0bb", "filename": "gcc/reorg.c", "status": "modified", "additions": 20, "deletions": 2, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e572bad3c657f4133cd91426e7bc52e4a9f199dd/gcc%2Freorg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e572bad3c657f4133cd91426e7bc52e4a9f199dd/gcc%2Freorg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freorg.c?ref=e572bad3c657f4133cd91426e7bc52e4a9f199dd", "patch": "@@ -738,8 +738,26 @@ find_end_label ()\n \t\t || GET_CODE (PATTERN (insn)) == CLOBBER)))\n     insn = PREV_INSN (insn);\n \n-  if (GET_CODE (insn) == CODE_LABEL)\n-   end_of_function_label = insn;\n+  /* When a target threads its epilogue we might already have a \n+     suitable return insn.  If so put a label before it for the\n+     end_of_function_label.  */\n+  if (GET_CODE (insn) == BARRIER\n+      && GET_CODE (PREV_INSN (insn)) == JUMP_INSN\n+      && GET_CODE (PATTERN (PREV_INSN (insn))) == RETURN)\n+    {\n+      rtx temp = PREV_INSN (PREV_INSN (insn));\n+      end_of_function_label = gen_label_rtx ();\n+      LABEL_NUSES (end_of_function_label) = 0;\n+\n+      /* Put the label before an USE insns that may proceed the RETURN insn. */\n+      while (GET_CODE (temp) == USE)\n+\ttemp = PREV_INSN (temp);\n+\n+      emit_label_after (end_of_function_label, temp);\n+    }\n+\n+  else if (GET_CODE (insn) == CODE_LABEL)\n+    end_of_function_label = insn;\n   else\n     {\n       /* Otherwise, make a new label and emit a RETURN and BARRIER,"}]}