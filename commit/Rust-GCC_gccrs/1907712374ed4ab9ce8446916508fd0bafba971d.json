{"sha": "1907712374ed4ab9ce8446916508fd0bafba971d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTkwNzcxMjM3NGVkNGFiOWNlODQ0NjkxNjUwOGZkMGJhZmJhOTcxZA==", "commit": {"author": {"name": "Andreas Krebbel", "email": "Andreas.Krebbel@de.ibm.com", "date": "2011-09-22T18:54:34Z"}, "committer": {"name": "Andreas Krebbel", "email": "krebbel@gcc.gnu.org", "date": "2011-09-22T18:54:34Z"}, "message": "reload.c (find_reloads): Set operand_mode to Pmode for address operands consisting of just a CONST_INT.\n\n2011-09-22  Andreas Krebbel  <Andreas.Krebbel@de.ibm.com>\n\n\t* reload.c (find_reloads): Set operand_mode to Pmode for address\n\toperands consisting of just a CONST_INT.\n\nFrom-SVN: r179099", "tree": {"sha": "7f69972f28e4826c4963b4d12d00f72aaef0ecd1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7f69972f28e4826c4963b4d12d00f72aaef0ecd1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1907712374ed4ab9ce8446916508fd0bafba971d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1907712374ed4ab9ce8446916508fd0bafba971d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1907712374ed4ab9ce8446916508fd0bafba971d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1907712374ed4ab9ce8446916508fd0bafba971d/comments", "author": null, "committer": null, "parents": [{"sha": "22deafa84406b3a1106582929c49af55bb45d0ce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22deafa84406b3a1106582929c49af55bb45d0ce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/22deafa84406b3a1106582929c49af55bb45d0ce"}], "stats": {"total": 82, "additions": 82, "deletions": 0}, "files": [{"sha": "da3374b39409d3a865e387a0f24d4c0d31342e74", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1907712374ed4ab9ce8446916508fd0bafba971d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1907712374ed4ab9ce8446916508fd0bafba971d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1907712374ed4ab9ce8446916508fd0bafba971d", "patch": "@@ -1,3 +1,8 @@\n+2011-09-22  Andreas Krebbel  <Andreas.Krebbel@de.ibm.com>\n+\n+\t* reload.c (find_reloads): Set operand_mode to Pmode for address\n+\toperands consisting of just a CONST_INT.\n+\n 2011-09-22  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR target/50482"}, {"sha": "53dcd2dafeda1277c3f95b04d8264c9552c68cb4", "filename": "gcc/reload.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1907712374ed4ab9ce8446916508fd0bafba971d/gcc%2Freload.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1907712374ed4ab9ce8446916508fd0bafba971d/gcc%2Freload.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload.c?ref=1907712374ed4ab9ce8446916508fd0bafba971d", "patch": "@@ -2825,6 +2825,13 @@ find_reloads (rtx insn, int replace, int ind_levels, int live_known,\n \t  /* Address operands are reloaded in their existing mode,\n \t     no matter what is specified in the machine description.  */\n \t  operand_mode[i] = GET_MODE (recog_data.operand[i]);\n+\n+\t  /* If the address is a single CONST_INT pick address mode\n+\t     instead otherwise we will later not know in which mode\n+\t     the reload should be performed.  */\n+\t  if (operand_mode[i] == VOIDmode)\n+\t    operand_mode[i] = Pmode;\n+\n \t}\n       else if (code == MEM)\n \t{"}, {"sha": "fbb48f282b3b4b6305569115d8394f34b172aee9", "filename": "gcc/testsuite/gcc.target/s390/addr-constraints-1.c", "status": "added", "additions": 70, "deletions": 0, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1907712374ed4ab9ce8446916508fd0bafba971d/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Faddr-constraints-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1907712374ed4ab9ce8446916508fd0bafba971d/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Faddr-constraints-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Faddr-constraints-1.c?ref=1907712374ed4ab9ce8446916508fd0bafba971d", "patch": "@@ -0,0 +1,70 @@\n+/* { dg-compile } */\n+/* { dg-options \"-O2\" } */\n+\n+static inline unsigned long\n+lay_uw(unsigned long addr)\n+{\n+  unsigned long result;\n+\n+  __asm__ (\"lay    %[result],%a[addr]\"\n+\t   : [result] \"=d\" (result)\n+\t   : [addr] \"UW\" (addr));\n+  return result;\n+}\n+\n+static inline unsigned long\n+la_u(unsigned long addr)\n+{\n+  unsigned long result;\n+\n+  __asm__ (\"la    %[result],%a[addr]\"\n+\t   : [result] \"=d\" (result)\n+\t   : [addr] \"U\" (addr));\n+  return result;\n+}\n+\n+static inline unsigned long\n+lay_zqzrzszt(unsigned long addr)\n+{\n+  unsigned long result;\n+\n+  __asm__ (\"lay    %[result],%a[addr]\"\n+\t   : [result] \"=d\" (result)\n+\t   : [addr] \"ZQZRZSZT\" (addr));\n+  return result;\n+}\n+\n+static inline unsigned long\n+la_zqzr(unsigned long addr)\n+{\n+  unsigned long result;\n+\n+  __asm__ (\"la    %[result],%a[addr]\"\n+\t   : [result] \"=d\" (result)\n+\t   : [addr] \"ZQZR\" (addr));\n+  return result;\n+}\n+\n+\n+extern unsigned long a[15];\n+\n+int main(void)\n+{\n+  a[1] = lay_uw(3333);\n+  a[2] = lay_uw(4444);\n+  a[3] = lay_uw(1000000);\n+  a[4] = lay_uw(a[0]);\n+\n+  a[5] = la_u(2222);\n+  a[6] = la_u(5555);\n+  a[7] = la_u(a[0]);\n+\n+  a[8] = lay_zqzrzszt(3333);\n+  a[9] = lay_zqzrzszt(4444);\n+  a[10] = lay_zqzrzszt(1000000);\n+  a[11] = lay_zqzrzszt(a[0]);\n+\n+  a[12] = la_zqzr(2222);\n+  a[13] = la_zqzr(5555);\n+  a[14] = la_zqzr(a[0]);\n+}"}]}