{"sha": "f5f6d8d705722d82c007ecfc56cb338ce72ea17c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjVmNmQ4ZDcwNTcyMmQ4MmMwMDdlY2ZjNTZjYjMzOGNlNzJlYTE3Yw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-01-22T14:06:41Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-01-22T14:06:41Z"}, "message": "[multiple changes]\n\n2014-01-22  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_ch3.adb, exp_util.adb, sem_dim.adb, sem_elab.adb, sem_ch8.adb,\n\tsem_eval.ads: Minor reformatting.\n\n2014-01-22  Thomas Quinot  <quinot@adacore.com>\n\n\t* sem_eval.adb (Compile_Time_Known_Bounds): Return False for\n\tAny_Composite to prevent cascaded errors.\n\n2014-01-22  Yannick Moy  <moy@adacore.com>\n\n\t* errout.adb (Initialize): Do not insert special entry in Warnings\n\ttable in GNATprove_Mode.\n\t* erroutc.adb (Set_Warnings_Mode_On): Add info in Warnings table in\n\tGNATprove_Mode.\n\t* gnat1drv.adb (Adjust_Global_Switches): Do not suppress frontend\n\twarnings anymore.\n\nFrom-SVN: r206922", "tree": {"sha": "7e53555c034af514a10577b663690b8774a9c944", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7e53555c034af514a10577b663690b8774a9c944"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f5f6d8d705722d82c007ecfc56cb338ce72ea17c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f5f6d8d705722d82c007ecfc56cb338ce72ea17c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f5f6d8d705722d82c007ecfc56cb338ce72ea17c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f5f6d8d705722d82c007ecfc56cb338ce72ea17c/comments", "author": null, "committer": null, "parents": [{"sha": "2e70d415edf3e75ac4c0e90e5418768042484d53", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e70d415edf3e75ac4c0e90e5418768042484d53", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2e70d415edf3e75ac4c0e90e5418768042484d53"}], "stats": {"total": 101, "additions": 60, "deletions": 41}, "files": [{"sha": "2dca6e32d004126ec26ffc66855df698a749782f", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5f6d8d705722d82c007ecfc56cb338ce72ea17c/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5f6d8d705722d82c007ecfc56cb338ce72ea17c/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=f5f6d8d705722d82c007ecfc56cb338ce72ea17c", "patch": "@@ -1,3 +1,22 @@\n+2014-01-22  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_ch3.adb, exp_util.adb, sem_dim.adb, sem_elab.adb, sem_ch8.adb,\n+\tsem_eval.ads: Minor reformatting.\n+\n+2014-01-22  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* sem_eval.adb (Compile_Time_Known_Bounds): Return False for\n+\tAny_Composite to prevent cascaded errors.\n+\n+2014-01-22  Yannick Moy  <moy@adacore.com>\n+\n+\t* errout.adb (Initialize): Do not insert special entry in Warnings\n+\ttable in GNATprove_Mode.\n+\t* erroutc.adb (Set_Warnings_Mode_On): Add info in Warnings table in\n+\tGNATprove_Mode.\n+\t* gnat1drv.adb (Adjust_Global_Switches): Do not suppress frontend\n+\twarnings anymore.\n+\n 2014-01-22  Robert Dewar  <dewar@adacore.com>\n \n \t* sem_prag.adb (Analyze_Initializes_In_Decl_Part): Handle null"}, {"sha": "70a770a7e4e9f5528abad7bedde954020f261f7b", "filename": "gcc/ada/errout.adb", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5f6d8d705722d82c007ecfc56cb338ce72ea17c/gcc%2Fada%2Ferrout.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5f6d8d705722d82c007ecfc56cb338ce72ea17c/gcc%2Fada%2Ferrout.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferrout.adb?ref=f5f6d8d705722d82c007ecfc56cb338ce72ea17c", "patch": "@@ -1499,13 +1499,19 @@ package body Errout is\n       Cur_Msg := No_Error_Msg;\n       List_Pragmas.Init;\n \n-      --  Initialize warnings table, if all warnings are suppressed, supply an\n-      --  initial dummy entry covering all possible source locations.\n+      --  Initialize warnings table. As an optimization, if all warnings are\n+      --  suppressed, we supply an initial dummy entry covering all possible\n+      --  source locations, which avoids taking into account pragma Warnings\n+      --  in the source. In GNATprove_Mode, this optimization is disabled, as\n+      --  we rely on the Warnings table to be correctly filled for back-end\n+      --  warnings.\n \n       Warnings.Init;\n       Specific_Warnings.Init;\n \n-      if Warning_Mode = Suppress then\n+      if not GNATprove_Mode\n+        and then Warning_Mode = Suppress\n+      then\n          Warnings.Append\n            ((Start => Source_Ptr'First, Stop => Source_Ptr'Last));\n       end if;"}, {"sha": "81a3c6d68a318a49f7ab9e57f63e778d872316d5", "filename": "gcc/ada/erroutc.adb", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5f6d8d705722d82c007ecfc56cb338ce72ea17c/gcc%2Fada%2Ferroutc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5f6d8d705722d82c007ecfc56cb338ce72ea17c/gcc%2Fada%2Ferroutc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferroutc.adb?ref=f5f6d8d705722d82c007ecfc56cb338ce72ea17c", "patch": "@@ -1207,14 +1207,18 @@ package body Erroutc is\n          return;\n       end if;\n \n-      --  Nothing to do unless command line switch to suppress all warnings\n-      --  is off, and the last entry in the warnings table covers this\n-      --  pragma Warnings (On), in which case adjust the end point.\n+      --  Nothing to do unless command line switch to suppress all warnings is\n+      --  off or we are in GNATprove_Mode, and the last entry in the warnings\n+      --  table covers this pragma Warnings (On), in which case adjust the end\n+      --  point.\n \n       if (Warnings.Last >= Warnings.First\n            and then Warnings.Table (Warnings.Last).Start <= Loc\n            and then Loc <= Warnings.Table (Warnings.Last).Stop)\n-        and then Warning_Mode /= Suppress\n+        and then\n+          (Warning_Mode /= Suppress\n+             or else\n+           GNATprove_Mode)\n       then\n          Warnings.Table (Warnings.Last).Stop := Loc;\n       end if;"}, {"sha": "1c5c63c373a792f7ee3cae3c8954c119a42f817c", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5f6d8d705722d82c007ecfc56cb338ce72ea17c/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5f6d8d705722d82c007ecfc56cb338ce72ea17c/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=f5f6d8d705722d82c007ecfc56cb338ce72ea17c", "patch": "@@ -3422,8 +3422,8 @@ package body Exp_Util is\n             --  actions, they must be added to the existing actions. The other\n             --  alternative is when the new actions are related to one of the\n             --  existing actions of the expression with actions, and should\n-            --  never reach here: if actions are inserted on a statement within\n-            --  the Actions of an expression with actions, or on some\n+            --  never reach here: if actions are inserted on a statement\n+            --  within the Actions of an expression with actions, or on some\n             --  sub-expression of such a statement, then the outermost proper\n             --  insertion point is right before the statement, and we should\n             --  never climb up as far as the N_Expression_With_Actions itself.\n@@ -3437,6 +3437,7 @@ package body Exp_Util is\n                      Insert_List_After_And_Analyze\n                        (Last (Actions (P)), Ins_Actions);\n                   end if;\n+\n                   return;\n \n                else"}, {"sha": "ba30b4c1d74a6a9ebf73ef65fa63a7dc7ed83273", "filename": "gcc/ada/gnat1drv.adb", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5f6d8d705722d82c007ecfc56cb338ce72ea17c/gcc%2Fada%2Fgnat1drv.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5f6d8d705722d82c007ecfc56cb338ce72ea17c/gcc%2Fada%2Fgnat1drv.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat1drv.adb?ref=f5f6d8d705722d82c007ecfc56cb338ce72ea17c", "patch": "@@ -383,11 +383,6 @@ procedure Gnat1drv is\n \n          Reset_Style_Check_Options;\n \n-         --  Suppress compiler warnings, since what we are interested in here\n-         --  is what formal verification can find out.\n-\n-         Warning_Mode := Suppress;\n-\n          --  Suppress the generation of name tables for enumerations, which are\n          --  not needed for formal verification, and fall outside the SPARK\n          --  subset (use of pointers)."}, {"sha": "b744873f74dad49bc317ba641522edc1c8593c1e", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5f6d8d705722d82c007ecfc56cb338ce72ea17c/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5f6d8d705722d82c007ecfc56cb338ce72ea17c/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=f5f6d8d705722d82c007ecfc56cb338ce72ea17c", "patch": "@@ -3637,7 +3637,7 @@ package body Sem_Ch3 is\n          if No (E) then\n             Act_T := Build_Default_Subtype (T, N);\n          else\n-            --  Ada 2005:  a limited object may be initialized by means of an\n+            --  Ada 2005: a limited object may be initialized by means of an\n             --  aggregate. If the type has default discriminants it has an\n             --  unconstrained nominal type, Its actual subtype will be obtained\n             --  from the aggregate, and not from the default discriminants."}, {"sha": "a766866dd4683a6806212d068c17c7ade2a83592", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 11, "deletions": 18, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5f6d8d705722d82c007ecfc56cb338ce72ea17c/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5f6d8d705722d82c007ecfc56cb338ce72ea17c/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=f5f6d8d705722d82c007ecfc56cb338ce72ea17c", "patch": "@@ -5981,21 +5981,18 @@ package body Sem_Ch8 is\n       begin\n          Comp_Unit := N;\n          while Present (Comp_Unit)\n-            and then Nkind (Comp_Unit) /= N_Compilation_Unit\n+           and then Nkind (Comp_Unit) /= N_Compilation_Unit\n          loop\n             Comp_Unit := Parent (Comp_Unit);\n          end loop;\n \n-         if No (Comp_Unit)\n-           or else Nkind (Unit (Comp_Unit)) /= N_Subunit\n-         then\n+         if No (Comp_Unit) or else Nkind (Unit (Comp_Unit)) /= N_Subunit then\n             return False;\n          end if;\n \n          --  Now check whether the package is in the context of the subunit\n \n          Clause := First (Context_Items (Comp_Unit));\n-\n          while Present (Clause) loop\n             if Nkind (Clause) = N_With_Clause\n               and then Entity (Name (Clause)) = P_Name\n@@ -6009,6 +6006,8 @@ package body Sem_Ch8 is\n          return False;\n       end Is_Reference_In_Subunit;\n \n+   --  Start of processing for Find_Selected_Component\n+\n    begin\n       Analyze (P);\n \n@@ -6036,9 +6035,7 @@ package body Sem_Ch8 is\n       --  in the expansion of record equality).\n \n       if Present (Entity (Selector_Name (N))) then\n-         if No (Etype (N))\n-           or else Etype (N) = Any_Type\n-         then\n+         if No (Etype (N)) or else Etype (N) = Any_Type then\n             declare\n                Sel_Name : constant Node_Id   := Selector_Name (N);\n                Selector : constant Entity_Id := Entity (Sel_Name);\n@@ -6065,8 +6062,7 @@ package body Sem_Ch8 is\n                      Save_Interps (P, Nam);\n                   end if;\n \n-                  Rewrite (P,\n-                    Make_Function_Call (Sloc (P), Name => Nam));\n+                  Rewrite (P, Make_Function_Call (Sloc (P), Name => Nam));\n                   Analyze_Call (P);\n                   Analyze_Selected_Component (N);\n                   return;\n@@ -6088,13 +6084,12 @@ package body Sem_Ch8 is\n                       ((RTE_Available (RE_Dispatch_Table_Wrapper)\n                          and then Scope (Selector) =\n                                      RTE (RE_Dispatch_Table_Wrapper))\n-                         or else\n-                           (RTE_Available (RE_No_Dispatch_Table_Wrapper)\n-                             and then Scope (Selector) =\n-                                        RTE (RE_No_Dispatch_Table_Wrapper)))\n+                        or else\n+                          (RTE_Available (RE_No_Dispatch_Table_Wrapper)\n+                            and then Scope (Selector) =\n+                                     RTE (RE_No_Dispatch_Table_Wrapper)))\n                   then\n                      C_Etype := Empty;\n-\n                   else\n                      C_Etype :=\n                        Build_Actual_Subtype_Of_Component\n@@ -6292,10 +6287,8 @@ package body Sem_Ch8 is\n                      if Present (P_Name) then\n                         if not Is_Reference_In_Subunit then\n                            Error_Msg_Sloc := Sloc (Entity (Prefix (N)));\n-\n                            Error_Msg_NE\n-                             (\"package& is hidden by declaration#\",\n-                               N, P_Name);\n+                             (\"package& is hidden by declaration#\", N, P_Name);\n                         end if;\n \n                         Set_Entity (Prefix (N), P_Name);"}, {"sha": "7c2978460828208f055f4b765653e177e24e61e8", "filename": "gcc/ada/sem_dim.adb", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5f6d8d705722d82c007ecfc56cb338ce72ea17c/gcc%2Fada%2Fsem_dim.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5f6d8d705722d82c007ecfc56cb338ce72ea17c/gcc%2Fada%2Fsem_dim.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_dim.adb?ref=f5f6d8d705722d82c007ecfc56cb338ce72ea17c", "patch": "@@ -1908,10 +1908,11 @@ package body Sem_Dim is\n       elsif Nkind (N) = N_Identifier then\n          Analyze_Dimension_Identifier : declare\n             Id : constant Entity_Id := Entity (N);\n+\n          begin\n-            if No (Id) then\n-               --  Abnormal tree, assume previous error\n+            --  If Id is missing, abnormal tree, assume previous error\n \n+            if No (Id) then\n                Check_Error_Detected;\n                return;\n "}, {"sha": "b0b45347fa05afeb4ae0d4b8a61dede1547c830d", "filename": "gcc/ada/sem_elab.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5f6d8d705722d82c007ecfc56cb338ce72ea17c/gcc%2Fada%2Fsem_elab.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5f6d8d705722d82c007ecfc56cb338ce72ea17c/gcc%2Fada%2Fsem_elab.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_elab.adb?ref=f5f6d8d705722d82c007ecfc56cb338ce72ea17c", "patch": "@@ -2917,11 +2917,11 @@ package body Sem_Elab is\n \n       --  Build check node, possibly with condition\n \n-      Chk := Make_Raise_Program_Error (Loc,\n-               Reason => PE_Access_Before_Elaboration);\n+      Chk :=\n+        Make_Raise_Program_Error (Loc, Reason => PE_Access_Before_Elaboration);\n+\n       if Present (C) then\n-         Set_Condition (Chk,\n-           Make_Op_Not (Loc, Right_Opnd => C));\n+         Set_Condition (Chk, Make_Op_Not (Loc, Right_Opnd => C));\n       end if;\n \n       --  If we are inserting at the top level, insert in Aux_Decls"}, {"sha": "920ee7c8777ff4d870d140d50736b14e0bf5f44d", "filename": "gcc/ada/sem_eval.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5f6d8d705722d82c007ecfc56cb338ce72ea17c/gcc%2Fada%2Fsem_eval.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5f6d8d705722d82c007ecfc56cb338ce72ea17c/gcc%2Fada%2Fsem_eval.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_eval.adb?ref=f5f6d8d705722d82c007ecfc56cb338ce72ea17c", "patch": "@@ -1259,7 +1259,7 @@ package body Sem_Eval is\n       Typ  : Entity_Id;\n \n    begin\n-      if not Is_Array_Type (T) then\n+      if T = Any_Composite or else not Is_Array_Type (T) then\n          return False;\n       end if;\n "}, {"sha": "fb1ebfa5369f4fc16776add4bdbcb3d9c00bbaae", "filename": "gcc/ada/sem_eval.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5f6d8d705722d82c007ecfc56cb338ce72ea17c/gcc%2Fada%2Fsem_eval.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5f6d8d705722d82c007ecfc56cb338ce72ea17c/gcc%2Fada%2Fsem_eval.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_eval.ads?ref=f5f6d8d705722d82c007ecfc56cb338ce72ea17c", "patch": "@@ -282,7 +282,7 @@ package Sem_Eval is\n \n    function Compile_Time_Known_Bounds (T : Entity_Id) return Boolean;\n    --  If T is an array whose index bounds are all known at compile time, then\n-   --  True is returned, if T is not an array, or one or more of its index\n+   --  True is returned. If T is not an array type, or one or more of its index\n    --  bounds is not known at compile time, then False is returned.\n \n    function Expr_Value (N : Node_Id) return Uint;"}]}