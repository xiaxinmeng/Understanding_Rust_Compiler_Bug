{"sha": "a957d12f7af10635819c754d26be87988e926fed", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTk1N2QxMmY3YWYxMDYzNTgxOWM3NTRkMjZiZTg3OTg4ZTkyNmZlZA==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2009-12-18T09:44:54Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2009-12-18T09:44:54Z"}, "message": "condition_variable: Revert inadvertent changes.\n\n2009-12-18  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* include/std/condition_variable: Revert inadvertent changes.\n\t* testsuite/30_threads/condition_variable/cons/assign_neg.cc: Ditto.\n\t* testsuite/30_threads/condition_variable/cons/copy_neg.cc: Ditto.\n\t* testsuite/30_threads/condition_variable/members/1.cc: Ditto.\n\t* testsuite/30_threads/condition_variable/members/2.cc: Ditto.\n\t* testsuite/30_threads/condition_variable_any/cons/assign_neg.cc: Ditto.\n\t* testsuite/30_threads/condition_variable_any/cons/copy_neg.cc: Ditto.\n\nFrom-SVN: r155343", "tree": {"sha": "b755453be8f098a34c0f4d66b6b194a2fbfd0e1c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b755453be8f098a34c0f4d66b6b194a2fbfd0e1c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a957d12f7af10635819c754d26be87988e926fed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a957d12f7af10635819c754d26be87988e926fed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a957d12f7af10635819c754d26be87988e926fed", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a957d12f7af10635819c754d26be87988e926fed/comments", "author": null, "committer": null, "parents": [{"sha": "4ef8972563c56304859db4bb3571f96004408a9f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ef8972563c56304859db4bb3571f96004408a9f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4ef8972563c56304859db4bb3571f96004408a9f"}], "stats": {"total": 36, "additions": 16, "deletions": 20}, "files": [{"sha": "f87eb1b8d1a05be8588c93632583a59a0a782309", "filename": "libstdc++-v3/include/std/condition_variable", "status": "modified", "additions": 8, "deletions": 12, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a957d12f7af10635819c754d26be87988e926fed/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcondition_variable", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a957d12f7af10635819c754d26be87988e926fed/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcondition_variable", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcondition_variable?ref=a957d12f7af10635819c754d26be87988e926fed", "patch": "@@ -50,9 +50,6 @@ namespace std\n    * @{\n    */\n \n-  /// cv_status\n-  enum class cv_status { no_timeout, timeout };\n-  \n   /// condition_variable\n   class condition_variable\n   {\n@@ -87,13 +84,13 @@ namespace std\n       }\n \n     template<typename _Duration>\n-      cv_status\n+      bool\n       wait_until(unique_lock<mutex>& __lock,\n \t\t const chrono::time_point<__clock_t, _Duration>& __atime)\n       { return __wait_until_impl(__lock, __atime); }\n \n     template<typename _Clock, typename _Duration>\n-      cv_status\n+      bool\n       wait_until(unique_lock<mutex>& __lock,\n \t\t const chrono::time_point<_Clock, _Duration>& __atime)\n       {\n@@ -113,14 +110,14 @@ namespace std\n \t\t _Predicate __p)\n       {\n \twhile (!__p())\n-\t  if (wait_until(__lock, __atime) == cv_status::timeout)\n+\t  if (!wait_until(__lock, __atime))\n \t    return __p();\n \n \treturn true;\n       }\n \n     template<typename _Rep, typename _Period>\n-      cv_status\n+      bool\n       wait_for(unique_lock<mutex>& __lock,\n \t       const chrono::duration<_Rep, _Period>& __rtime)\n       { return wait_until(__lock, __clock_t::now() + __rtime); }\n@@ -138,7 +135,7 @@ namespace std\n \n   private:\n     template<typename _Clock, typename _Duration>\n-      cv_status\n+      bool\n       __wait_until_impl(unique_lock<mutex>& __lock,\n \t\t\tconst chrono::time_point<_Clock, _Duration>& __atime)\n       {\n@@ -157,8 +154,7 @@ namespace std\n \t__gthread_cond_timedwait(&_M_cond, __lock.mutex()->native_handle(),\n \t\t\t\t &__ts);\n \n-\treturn (_Clock::now() < __atime\n-\t\t? cv_status::no_timeout : cv_status::timeout);\n+\treturn _Clock::now() < __atime;\n       }\n   };\n \n@@ -193,7 +189,7 @@ namespace std\n       wait(_Lock& __lock, _Predicate __p);\n \n     template<typename _Lock, typename _Clock, typename _Duration>\n-      cv_status\n+      bool\n       wait_until(_Lock& __lock,\n \t\t const chrono::time_point<_Clock, _Duration>& __atime);\n \n@@ -205,7 +201,7 @@ namespace std\n \t\t _Predicate __p);\n \n     template<typename _Lock, typename _Rep, typename _Period>\n-      cv_status\n+      bool\n       wait_for(_Lock& __lock, const chrono::duration<_Rep, _Period>& __rtime);\n \n     template<typename _Lock, typename _Rep,"}, {"sha": "04e492b3f43b2f02c72a3cb5f4d264d86152e696", "filename": "libstdc++-v3/testsuite/30_threads/condition_variable/cons/assign_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a957d12f7af10635819c754d26be87988e926fed/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fcondition_variable%2Fcons%2Fassign_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a957d12f7af10635819c754d26be87988e926fed/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fcondition_variable%2Fcons%2Fassign_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fcondition_variable%2Fcons%2Fassign_neg.cc?ref=a957d12f7af10635819c754d26be87988e926fed", "patch": "@@ -32,4 +32,4 @@ void test01()\n }\n \n // { dg-error \"used here\" \"\" { target *-*-* } 31 }\n-// { dg-error \"deleted function\" \"\" { target *-*-* } 70 }\n+// { dg-error \"deleted function\" \"\" { target *-*-* } 67 }"}, {"sha": "0d066282f1f3abd20a5091afc036dba0ae110dea", "filename": "libstdc++-v3/testsuite/30_threads/condition_variable/cons/copy_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a957d12f7af10635819c754d26be87988e926fed/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fcondition_variable%2Fcons%2Fcopy_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a957d12f7af10635819c754d26be87988e926fed/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fcondition_variable%2Fcons%2Fcopy_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fcondition_variable%2Fcons%2Fcopy_neg.cc?ref=a957d12f7af10635819c754d26be87988e926fed", "patch": "@@ -31,4 +31,4 @@ void test01()\n }\n \n // { dg-error \"used here\" \"\" { target *-*-* } 30 }\n-// { dg-error \"deleted function\" \"\" { target *-*-* } 69 }\n+// { dg-error \"deleted function\" \"\" { target *-*-* } 66 }"}, {"sha": "4dea137064f089677bd24d4783101a10dfff5ea1", "filename": "libstdc++-v3/testsuite/30_threads/condition_variable/members/1.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a957d12f7af10635819c754d26be87988e926fed/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fcondition_variable%2Fmembers%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a957d12f7af10635819c754d26be87988e926fed/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fcondition_variable%2Fmembers%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fcondition_variable%2Fmembers%2F1.cc?ref=a957d12f7af10635819c754d26be87988e926fed", "patch": "@@ -40,8 +40,8 @@ int main()\n       std::unique_lock<std::mutex> l(m);\n \n       auto then = std::chrono::system_clock::now();\n-      std::cv_status result = c1.wait_for(l, ms);\n-      VERIFY( result == std::cv_status::timeout );\n+      bool result = c1.wait_for(l, ms);\n+      VERIFY( !result );\n       VERIFY( (std::chrono::system_clock::now() - then) >= ms );\n       VERIFY( l.owns_lock() );\n     }"}, {"sha": "fe176668aa01e6246e6e616891131c92a3f823b8", "filename": "libstdc++-v3/testsuite/30_threads/condition_variable/members/2.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a957d12f7af10635819c754d26be87988e926fed/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fcondition_variable%2Fmembers%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a957d12f7af10635819c754d26be87988e926fed/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fcondition_variable%2Fmembers%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fcondition_variable%2Fmembers%2F2.cc?ref=a957d12f7af10635819c754d26be87988e926fed", "patch": "@@ -40,8 +40,8 @@ int main()\n       std::unique_lock<std::mutex> l(m);\n \n       auto then = std::chrono::monotonic_clock::now();\n-      std::cv_status result = c1.wait_until(l, then + ms);\n-      VERIFY( result == std::cv_status::timeout );\n+      bool result = c1.wait_until(l, then + ms);\n+      VERIFY( !result );\n       VERIFY( (std::chrono::monotonic_clock::now() - then) >= ms );\n       VERIFY( l.owns_lock() );\n     }"}, {"sha": "473f32639b34a1332aef3ff4abfdac928f6729ff", "filename": "libstdc++-v3/testsuite/30_threads/condition_variable_any/cons/assign_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a957d12f7af10635819c754d26be87988e926fed/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fcondition_variable_any%2Fcons%2Fassign_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a957d12f7af10635819c754d26be87988e926fed/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fcondition_variable_any%2Fcons%2Fassign_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fcondition_variable_any%2Fcons%2Fassign_neg.cc?ref=a957d12f7af10635819c754d26be87988e926fed", "patch": "@@ -32,4 +32,4 @@ void test01()\n }\n \n // { dg-error \"used here\" \"\" { target *-*-* } 31 }\n-// { dg-error \"deleted function\" \"\" { target *-*-* } 179 }\n+// { dg-error \"deleted function\" \"\" { target *-*-* } 175 }"}, {"sha": "1d06c2ded3c3beebb759dda18b8b2670de297b4b", "filename": "libstdc++-v3/testsuite/30_threads/condition_variable_any/cons/copy_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a957d12f7af10635819c754d26be87988e926fed/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fcondition_variable_any%2Fcons%2Fcopy_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a957d12f7af10635819c754d26be87988e926fed/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fcondition_variable_any%2Fcons%2Fcopy_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fcondition_variable_any%2Fcons%2Fcopy_neg.cc?ref=a957d12f7af10635819c754d26be87988e926fed", "patch": "@@ -31,4 +31,4 @@ void test01()\n }\n \n // { dg-error \"used here\" \"\" { target *-*-* } 30 }\n-// { dg-error \"deleted function\" \"\" { target *-*-* } 178 }\n+// { dg-error \"deleted function\" \"\" { target *-*-* } 174 }"}]}