{"sha": "1fd994f19119dfca57de3af7d2c6a3bc431e56e4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWZkOTk0ZjE5MTE5ZGZjYTU3ZGUzYWY3ZDJjNmEzYmM0MzFlNTZlNA==", "commit": {"author": {"name": "Steve Ellcey", "email": "sje@cup.hp.com", "date": "2007-06-06T17:48:03Z"}, "committer": {"name": "Steve Ellcey", "email": "sje@gcc.gnu.org", "date": "2007-06-06T17:48:03Z"}, "message": "re PR testsuite/31828 (FAIL: gcc.dg/float-range-[3-5].c (test for excess errors))\n\n\tPR testsuite/31828\n\t* inclhack.def (hppa_hpux_fp_macros): New.\n\t* fixincl.x: Regenerate.\n\t* * tests/base/math.h: Update.\n\nFrom-SVN: r125496", "tree": {"sha": "de2d94da0f9ecb13d3a04aba1d49ff1ff5c9f6a8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/de2d94da0f9ecb13d3a04aba1d49ff1ff5c9f6a8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1fd994f19119dfca57de3af7d2c6a3bc431e56e4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1fd994f19119dfca57de3af7d2c6a3bc431e56e4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1fd994f19119dfca57de3af7d2c6a3bc431e56e4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1fd994f19119dfca57de3af7d2c6a3bc431e56e4/comments", "author": null, "committer": null, "parents": [{"sha": "7258e976ea40ba30c37124f6811ff192289a77a1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7258e976ea40ba30c37124f6811ff192289a77a1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7258e976ea40ba30c37124f6811ff192289a77a1"}], "stats": {"total": 104, "additions": 99, "deletions": 5}, "files": [{"sha": "a51e22d3e63c0c74419cae668222fdd602f7e477", "filename": "fixincludes/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1fd994f19119dfca57de3af7d2c6a3bc431e56e4/fixincludes%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1fd994f19119dfca57de3af7d2c6a3bc431e56e4/fixincludes%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2FChangeLog?ref=1fd994f19119dfca57de3af7d2c6a3bc431e56e4", "patch": "@@ -1,3 +1,10 @@\n+2007-06-06  Steve Ellcey  <sje@cup.hp.com>\n+\n+\tPR testsuite/31828\n+\t* inclhack.def (hppa_hpux_fp_macros): New.\n+\t* fixincl.x: Regenerate.\n+\t* tests/base/math.h: Update.\n+\n 2007-03-26  Jakub Jelinek  <jakub@redhat.com>\n \n \t* inclhack.def (glibc_c99_inline_1): Define __USE_EXTERN_INLINES"}, {"sha": "3aeba916e0ce806824de26b68018fc39ef9b53b7", "filename": "fixincludes/fixincl.x", "status": "modified", "additions": 55, "deletions": 5, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1fd994f19119dfca57de3af7d2c6a3bc431e56e4/fixincludes%2Ffixincl.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1fd994f19119dfca57de3af7d2c6a3bc431e56e4/fixincludes%2Ffixincl.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ffixincl.x?ref=1fd994f19119dfca57de3af7d2c6a3bc431e56e4", "patch": "@@ -2,11 +2,11 @@\n  * \n  * DO NOT EDIT THIS FILE   (fixincl.x)\n  * \n- * It has been AutoGen-ed  Wednesday March 21, 2007 at 05:39:23 PM CET\n+ * It has been AutoGen-ed  Tuesday June  5, 2007 at 02:48:40 PM PDT\n  * From the definitions    inclhack.def\n  * and the template file   fixincl\n  */\n-/* DO NOT SVN-MERGE THIS FILE, EITHER Wed Mar 21 17:39:23 CET 2007\n+/* DO NOT SVN-MERGE THIS FILE, EITHER Tue Jun  5 14:48:40 PDT 2007\n  *\n  * You must regenerate it.  Use the ./genfixes script.\n  *\n@@ -15,7 +15,7 @@\n  * certain ANSI-incompatible system header files which are fixed to work\n  * correctly with ANSI C and placed in a directory that GNU C will search.\n  *\n- * This file contains 208 fixup descriptions.\n+ * This file contains 209 fixup descriptions.\n  *\n  * See README for more information.\n  *\n@@ -2585,6 +2585,50 @@ static const char* apzHpux11_Cpp_Pow_InlinePatch[] = {\n     \"\",\n     (char*)NULL };\n \n+/* * * * * * * * * * * * * * * * * * * * * * * * * *\n+ *\n+ *  Description of Hppa_Hpux_Fp_Macros fix\n+ */\n+tSCC zHppa_Hpux_Fp_MacrosName[] =\n+     \"hppa_hpux_fp_macros\";\n+\n+/*\n+ *  File name selection pattern\n+ */\n+tSCC zHppa_Hpux_Fp_MacrosList[] =\n+  \"math.h\\0\";\n+/*\n+ *  Machine/OS name selection pattern\n+ */\n+tSCC* apzHppa_Hpux_Fp_MacrosMachs[] = {\n+        \"hppa*-hp-hpux11*\",\n+        (const char*)NULL };\n+\n+/*\n+ *  content selection pattern - do fix if pattern found\n+ */\n+tSCC zHppa_Hpux_Fp_MacrosSelect0[] =\n+       \"#[ \\t]*define[ \\t]*FP_NORMAL.*\\n\\\n+#[ \\t]*define[ \\t]*FP_ZERO.*\\n\\\n+#[ \\t]*define[ \\t]*FP_INFINITE.*\\n\\\n+#[ \\t]*define[ \\t]*FP_SUBNORMAL.*\\n\\\n+#[ \\t]*define[ \\t]*FP_NAN.*\\n\";\n+\n+#define    HPPA_HPUX_FP_MACROS_TEST_CT  1\n+static tTestDesc aHppa_Hpux_Fp_MacrosTests[] = {\n+  { TT_EGREP,    zHppa_Hpux_Fp_MacrosSelect0, (regex_t*)NULL }, };\n+\n+/*\n+ *  Fix Command Arguments for Hppa_Hpux_Fp_Macros\n+ */\n+static const char* apzHppa_Hpux_Fp_MacrosPatch[] = {\n+    \"format\",\n+    \"#endif /* _INCLUDE_HPUX_SOURCE */\\n\\n\\\n+#if defined(_INCLUDE_HPUX_SOURCE) || (defined(__STDC_VERSION__) && (__STDC_VERSION__ >= 199901L))\\n\\\n+%0#endif\\n\\n\\\n+#ifdef _INCLUDE_HPUX_SOURCE\\n\",\n+    (char*)NULL };\n+\n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n  *\n  *  Description of Hpux10_Ctype_Declarations1 fix\n@@ -8474,9 +8518,9 @@ static const char* apzX11_SprintfPatch[] = {\n  *\n  *  List of all fixes\n  */\n-#define REGEX_COUNT          253\n+#define REGEX_COUNT          254\n #define MACH_LIST_SIZE_LIMIT 261\n-#define FIX_COUNT            208\n+#define FIX_COUNT            209\n \n /*\n  *  Enumerate the fixes\n@@ -8542,6 +8586,7 @@ typedef enum {\n     HP_SYSFILE_FIXIDX,\n     HPUX10_CPP_POW_INLINE_FIXIDX,\n     HPUX11_CPP_POW_INLINE_FIXIDX,\n+    HPPA_HPUX_FP_MACROS_FIXIDX,\n     HPUX10_CTYPE_DECLARATIONS1_FIXIDX,\n     HPUX10_CTYPE_DECLARATIONS2_FIXIDX,\n     HPUX10_STDIO_DECLARATIONS_FIXIDX,\n@@ -8993,6 +9038,11 @@ tFixDesc fixDescList[ FIX_COUNT ] = {\n      HPUX11_CPP_POW_INLINE_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n      aHpux11_Cpp_Pow_InlineTests,   apzHpux11_Cpp_Pow_InlinePatch, 0 },\n \n+  {  zHppa_Hpux_Fp_MacrosName,    zHppa_Hpux_Fp_MacrosList,\n+     apzHppa_Hpux_Fp_MacrosMachs,\n+     HPPA_HPUX_FP_MACROS_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n+     aHppa_Hpux_Fp_MacrosTests,   apzHppa_Hpux_Fp_MacrosPatch, 0 },\n+\n   {  zHpux10_Ctype_Declarations1Name,    zHpux10_Ctype_Declarations1List,\n      apzHpux10_Ctype_Declarations1Machs,\n      HPUX10_CTYPE_DECLARATIONS1_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,"}, {"sha": "dbdabb25c5fdb5e69bb3a0a9bf901b3d77e35d99", "filename": "fixincludes/inclhack.def", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1fd994f19119dfca57de3af7d2c6a3bc431e56e4/fixincludes%2Finclhack.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1fd994f19119dfca57de3af7d2c6a3bc431e56e4/fixincludes%2Finclhack.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Finclhack.def?ref=1fd994f19119dfca57de3af7d2c6a3bc431e56e4", "patch": "@@ -1558,6 +1558,27 @@ fix = {\n };\n \n \n+fix = {\n+     hackname  = hppa_hpux_fp_macros;\n+     mach      = hppa*-hp-hpux11*;\n+     files     = math.h;\n+     select    = \"#[ \\t]*define[ \\t]*FP_NORMAL.*\\n\"\n+\t\t \"#[ \\t]*define[ \\t]*FP_ZERO.*\\n\"\n+\t\t \"#[ \\t]*define[ \\t]*FP_INFINITE.*\\n\"\n+\t\t \"#[ \\t]*define[ \\t]*FP_SUBNORMAL.*\\n\"\n+\t\t \"#[ \\t]*define[ \\t]*FP_NAN.*\\n\";\n+     c_fix     = format;\n+     c_fix_arg = \"#endif /* _INCLUDE_HPUX_SOURCE */\\n\\n#if defined(_INCLUDE_HPUX_SOURCE) || (defined(__STDC_VERSION__) && (__STDC_VERSION__ >= 199901L))\\n%0#endif\\n\\n#ifdef _INCLUDE_HPUX_SOURCE\\n\";\n+\n+     test_text =\n+            \"#  define FP_NORMAL     0\\n\"\n+            \"#  define FP_ZERO       1\\n\"\n+            \"#  define FP_INFINITE   2\\n\"\n+            \"#  define FP_SUBNORMAL  3\\n\"\n+            \"#  define FP_NAN        4\\n\";\n+};\n+\n+\n /*\n  *  Fix hpux 10.X missing ctype declarations 1\n  */"}, {"sha": "2f6547d0096f611912f7862825f1e96cd3fbb38d", "filename": "fixincludes/tests/base/math.h", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1fd994f19119dfca57de3af7d2c6a3bc431e56e4/fixincludes%2Ftests%2Fbase%2Fmath.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1fd994f19119dfca57de3af7d2c6a3bc431e56e4/fixincludes%2Ftests%2Fbase%2Fmath.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ftests%2Fbase%2Fmath.h?ref=1fd994f19119dfca57de3af7d2c6a3bc431e56e4", "patch": "@@ -48,6 +48,22 @@ extern int matherr();\n #endif  /* HPUX11_CPP_POW_INLINE_CHECK */\n \n \n+#if defined( HPPA_HPUX_FP_MACROS_CHECK )\n+#endif /* _INCLUDE_HPUX_SOURCE */\n+\n+#if defined(_INCLUDE_HPUX_SOURCE) || (defined(__STDC_VERSION__) && (__STDC_VERSION__ >= 199901L))\n+#  define FP_NORMAL     0\n+#  define FP_ZERO       1\n+#  define FP_INFINITE   2\n+#  define FP_SUBNORMAL  3\n+#  define FP_NAN        4\n+#endif\n+\n+#ifdef _INCLUDE_HPUX_SOURCE\n+\n+#endif  /* HPPA_HPUX_FP_MACROS_CHECK */\n+\n+\n #if defined( HPUX11_FABSF_CHECK )\n #ifdef _PA_RISC\n #ifndef __cplusplus"}]}