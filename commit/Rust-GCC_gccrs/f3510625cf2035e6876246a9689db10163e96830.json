{"sha": "f3510625cf2035e6876246a9689db10163e96830", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjM1MTA2MjVjZjIwMzVlNjg3NjI0NmE5Njg5ZGIxMDE2M2U5NjgzMA==", "commit": {"author": {"name": "Maxim Ostapenko", "email": "m.ostapenko@samsung.com", "date": "2016-05-19T12:05:59Z"}, "committer": {"name": "Maxim Ostapenko", "email": "chefmax@gcc.gnu.org", "date": "2016-05-19T12:05:59Z"}, "message": "re PR sanitizer/64354 (no preprocessor symbol __SANITIZE_THREAD__)\n\n2016-05-19  Maxim Ostapenko  <m.ostapenko@samsung.com>\n\n\tPR sanitizer/64354\n\t* cppbuiltin.c (define_builtin_macros_for_compilation_flags): Add new\n\tbuiltin __SANITIZE_THREAD__ macros for fsanitize=thread switch.\n\t* doc/cpp.texi: Document new macros.\n\n\t* c-c++-common/tsan/sanitize-thread-macro.c: New test.\n\nFrom-SVN: r236457", "tree": {"sha": "66ed7694eb6d390d58101fcea55a0f9e4321f9c5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/66ed7694eb6d390d58101fcea55a0f9e4321f9c5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f3510625cf2035e6876246a9689db10163e96830", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f3510625cf2035e6876246a9689db10163e96830", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f3510625cf2035e6876246a9689db10163e96830", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f3510625cf2035e6876246a9689db10163e96830/comments", "author": null, "committer": null, "parents": [{"sha": "73fb6a9d96d1213ad90da2723c5fbb4f9da97c45", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73fb6a9d96d1213ad90da2723c5fbb4f9da97c45", "html_url": "https://github.com/Rust-GCC/gccrs/commit/73fb6a9d96d1213ad90da2723c5fbb4f9da97c45"}], "stats": {"total": 30, "additions": 30, "deletions": 0}, "files": [{"sha": "e7d7ab8469a9005f38af144528a0c7484ca55c2d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3510625cf2035e6876246a9689db10163e96830/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3510625cf2035e6876246a9689db10163e96830/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f3510625cf2035e6876246a9689db10163e96830", "patch": "@@ -1,3 +1,10 @@\n+2016-05-19  Maxim Ostapenko  <m.ostapenko@samsung.com>\n+\n+\tPR sanitizer/64354\n+\t* cppbuiltin.c (define_builtin_macros_for_compilation_flags): Add new\n+\tbuiltin __SANITIZE_THREAD__ macros for fsanitize=thread switch.\n+\t* doc/cpp.texi: Document new macros.\n+\n 2016-05-19 Bin Cheng  <bin.cheng@arm.com>\n \n \tPR tree-optimization/69848"}, {"sha": "69ccdb918466b651605d352b8cc3f38dd4e14e99", "filename": "gcc/cppbuiltin.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3510625cf2035e6876246a9689db10163e96830/gcc%2Fcppbuiltin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3510625cf2035e6876246a9689db10163e96830/gcc%2Fcppbuiltin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcppbuiltin.c?ref=f3510625cf2035e6876246a9689db10163e96830", "patch": "@@ -92,6 +92,9 @@ define_builtin_macros_for_compilation_flags (cpp_reader *pfile)\n   if (flag_sanitize & SANITIZE_ADDRESS)\n     cpp_define (pfile, \"__SANITIZE_ADDRESS__\");\n \n+  if (flag_sanitize & SANITIZE_THREAD)\n+    cpp_define (pfile, \"__SANITIZE_THREAD__\");\n+\n   if (optimize_size)\n     cpp_define (pfile, \"__OPTIMIZE_SIZE__\");\n   if (optimize)"}, {"sha": "44f59bdfb4703524537c23f4b2fe128aaf955616", "filename": "gcc/doc/cpp.texi", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3510625cf2035e6876246a9689db10163e96830/gcc%2Fdoc%2Fcpp.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3510625cf2035e6876246a9689db10163e96830/gcc%2Fdoc%2Fcpp.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fcpp.texi?ref=f3510625cf2035e6876246a9689db10163e96830", "patch": "@@ -2362,6 +2362,9 @@ in use.\n This macro is defined, with value 1, when @option{-fsanitize=address}\n or @option{-fsanitize=kernel-address} are in use.\n \n+@item __SANITIZE_THREAD__\n+This macro is defined, with value 1, when @option{-fsanitize=thread} is in use.\n+\n @item __TIMESTAMP__\n This macro expands to a string constant that describes the date and time\n of the last modification of the current source file. The string constant"}, {"sha": "4f20c2cd63edfc75843a2bc139c9808c1a66e4df", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3510625cf2035e6876246a9689db10163e96830/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3510625cf2035e6876246a9689db10163e96830/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f3510625cf2035e6876246a9689db10163e96830", "patch": "@@ -1,3 +1,8 @@\n+2016-05-19  Maxim Ostapenko  <m.ostapenko@samsung.com>\n+\n+\tPR sanitizer/64354\n+\t* c-c++-common/tsan/sanitize-thread-macro.c: New test.\n+\n 2016-05-19  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/70729"}, {"sha": "2b8a840687cc11dea7f7ad3eab3e65425b223560", "filename": "gcc/testsuite/c-c++-common/tsan/sanitize-thread-macro.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3510625cf2035e6876246a9689db10163e96830/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Ftsan%2Fsanitize-thread-macro.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3510625cf2035e6876246a9689db10163e96830/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Ftsan%2Fsanitize-thread-macro.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Ftsan%2Fsanitize-thread-macro.c?ref=f3510625cf2035e6876246a9689db10163e96830", "patch": "@@ -0,0 +1,12 @@\n+/* Check that -fsanitize=thread options defines __SANITIZE_THREAD__ macros.  */\n+/* { dg-do compile } */\n+/* { dg-skip-if \"\" { *-*-* } { \"*\" } { \"-O0\" } } */\n+\n+int\n+main ()\n+{\n+#ifndef __SANITIZE_THREAD__\n+  bad construction\n+#endif\n+  return 0;\n+}"}]}