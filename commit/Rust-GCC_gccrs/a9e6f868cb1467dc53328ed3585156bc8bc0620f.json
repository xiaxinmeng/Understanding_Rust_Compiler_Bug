{"sha": "a9e6f868cb1467dc53328ed3585156bc8bc0620f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTllNmY4NjhjYjE0NjdkYzUzMzI4ZWQzNTg1MTU2YmM4YmMwNjIwZg==", "commit": {"author": {"name": "Yannick Moy", "email": "moy@adacore.com", "date": "2017-09-06T10:50:12Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2017-09-06T10:50:12Z"}, "message": "sem_prag.adb (Analyze_Depends_In_Decl_Part): Add continuation message for missing input.\n\n2017-09-06  Yannick Moy  <moy@adacore.com>\n\n\t* sem_prag.adb (Analyze_Depends_In_Decl_Part): Add continuation\n\tmessage for missing input.\n\n2017-09-06  Yannick Moy  <moy@adacore.com>\n\n\t* inline.adb (Can_Be_Inlined_In_GNATprove_Mode): Prevent inlining\n\tof protected subprograms and entries.\n\t* sem_util.adb, sem_util.ads (Is_Subp_Or_Entry_Inside_Protected):\n\tNew function to detect when a subprogram of entry is defined\n\tinside a protected object.\n\nFrom-SVN: r251778", "tree": {"sha": "295a2b4b60a1a481fdc2e31f85d86539b08db1e0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/295a2b4b60a1a481fdc2e31f85d86539b08db1e0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a9e6f868cb1467dc53328ed3585156bc8bc0620f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a9e6f868cb1467dc53328ed3585156bc8bc0620f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a9e6f868cb1467dc53328ed3585156bc8bc0620f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a9e6f868cb1467dc53328ed3585156bc8bc0620f/comments", "author": {"login": "yannickmoy", "id": 859440, "node_id": "MDQ6VXNlcjg1OTQ0MA==", "avatar_url": "https://avatars.githubusercontent.com/u/859440?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yannickmoy", "html_url": "https://github.com/yannickmoy", "followers_url": "https://api.github.com/users/yannickmoy/followers", "following_url": "https://api.github.com/users/yannickmoy/following{/other_user}", "gists_url": "https://api.github.com/users/yannickmoy/gists{/gist_id}", "starred_url": "https://api.github.com/users/yannickmoy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yannickmoy/subscriptions", "organizations_url": "https://api.github.com/users/yannickmoy/orgs", "repos_url": "https://api.github.com/users/yannickmoy/repos", "events_url": "https://api.github.com/users/yannickmoy/events{/privacy}", "received_events_url": "https://api.github.com/users/yannickmoy/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "09b57dfe286b5445e30815d752bf528da047e4df", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09b57dfe286b5445e30815d752bf528da047e4df", "html_url": "https://github.com/Rust-GCC/gccrs/commit/09b57dfe286b5445e30815d752bf528da047e4df"}], "stats": {"total": 53, "additions": 53, "deletions": 0}, "files": [{"sha": "733214da004d37c82ab7951f28b2ef67300171a7", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9e6f868cb1467dc53328ed3585156bc8bc0620f/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9e6f868cb1467dc53328ed3585156bc8bc0620f/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=a9e6f868cb1467dc53328ed3585156bc8bc0620f", "patch": "@@ -1,3 +1,16 @@\n+2017-09-06  Yannick Moy  <moy@adacore.com>\n+\n+\t* sem_prag.adb (Analyze_Depends_In_Decl_Part): Add continuation\n+\tmessage for missing input.\n+\n+2017-09-06  Yannick Moy  <moy@adacore.com>\n+\n+\t* inline.adb (Can_Be_Inlined_In_GNATprove_Mode): Prevent inlining\n+\tof protected subprograms and entries.\n+\t* sem_util.adb, sem_util.ads (Is_Subp_Or_Entry_Inside_Protected):\n+\tNew function to detect when a subprogram of entry is defined\n+\tinside a protected object.\n+\n 2017-09-06  Bob Duff  <duff@adacore.com>\n \n \t* sysdep.c (__gnat_has_cap_sys_nice): New function to determine"}, {"sha": "6b6222b4d820afca72ea5a5ce8f7b335fed08203", "filename": "gcc/ada/inline.adb", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9e6f868cb1467dc53328ed3585156bc8bc0620f/gcc%2Fada%2Finline.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9e6f868cb1467dc53328ed3585156bc8bc0620f/gcc%2Fada%2Finline.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finline.adb?ref=a9e6f868cb1467dc53328ed3585156bc8bc0620f", "patch": "@@ -1406,6 +1406,13 @@ package body Inline is\n       elsif Instantiation_Location (Sloc (Id)) /= No_Location then\n          return False;\n \n+      --  Do not inline subprograms and entries defined inside protected types,\n+      --  which typically are not helper subprograms, which also avoids getting\n+      --  spurious messages on calls that cannot be inlined.\n+\n+      elsif Is_Subp_Or_Entry_Inside_Protected (Id) then\n+         return False;\n+\n       --  Do not inline predicate functions (treated specially by GNATprove)\n \n       elsif Is_Predicate_Function (Id) then"}, {"sha": "5066e7689f7bc1cb7945e7974ca0a3f75f5054d0", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9e6f868cb1467dc53328ed3585156bc8bc0620f/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9e6f868cb1467dc53328ed3585156bc8bc0620f/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=a9e6f868cb1467dc53328ed3585156bc8bc0620f", "patch": "@@ -1457,6 +1457,9 @@ package body Sem_Prag is\n \n                   Error_Msg := Name_Find;\n                   SPARK_Msg_NE (Get_Name_String (Error_Msg), N, Item_Id);\n+                  SPARK_Msg_NE\n+                    (\"\\add `null ='> &` dependency to ignore this input\",\n+                     N, Item_Id);\n                end if;\n \n             --  Output case (SPARK RM 6.1.5(10))"}, {"sha": "a06ce637748064c4ee92085e57b47507539a486b", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9e6f868cb1467dc53328ed3585156bc8bc0620f/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9e6f868cb1467dc53328ed3585156bc8bc0620f/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=a9e6f868cb1467dc53328ed3585156bc8bc0620f", "patch": "@@ -15539,6 +15539,32 @@ package body Sem_Util is\n         and then Ekind (Defining_Entity (N)) /= E_Subprogram_Body;\n    end Is_Subprogram_Stub_Without_Prior_Declaration;\n \n+   ---------------------------------------\n+   -- Is_Subp_Or_Entry_Inside_Protected --\n+   ---------------------------------------\n+\n+   function Is_Subp_Or_Entry_Inside_Protected (E : Entity_Id) return Boolean is\n+      Scop : Entity_Id;\n+\n+   begin\n+      case Ekind (E) is\n+         when Entry_Kind | Subprogram_Kind =>\n+            Scop := Scope (E);\n+\n+            while Present (Scop) loop\n+               if Ekind (Scop) = E_Protected_Type then\n+                  return True;\n+               end if;\n+               Scop := Scope (Scop);\n+            end loop;\n+\n+            return False;\n+\n+         when others =>\n+            return False;\n+      end case;\n+   end Is_Subp_Or_Entry_Inside_Protected;\n+\n    --------------------------\n    -- Is_Suspension_Object --\n    --------------------------"}, {"sha": "b73dc0e7879778d2532343683f20238e4c7a483d", "filename": "gcc/ada/sem_util.ads", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9e6f868cb1467dc53328ed3585156bc8bc0620f/gcc%2Fada%2Fsem_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9e6f868cb1467dc53328ed3585156bc8bc0620f/gcc%2Fada%2Fsem_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.ads?ref=a9e6f868cb1467dc53328ed3585156bc8bc0620f", "patch": "@@ -1842,6 +1842,10 @@ package Sem_Util is\n    --  Return True if N is a subprogram stub with no prior subprogram\n    --  declaration.\n \n+   function Is_Subp_Or_Entry_Inside_Protected (E : Entity_Id) return Boolean;\n+   --  Return True if E is an entry or a subprogram that is part (directly or\n+   --  in a nested way) of a protected type.\n+\n    function Is_Suspension_Object (Id : Entity_Id) return Boolean;\n    --  Determine whether arbitrary entity Id denotes Suspension_Object defined\n    --  in Ada.Synchronous_Task_Control."}]}