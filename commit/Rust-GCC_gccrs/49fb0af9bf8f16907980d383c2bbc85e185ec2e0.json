{"sha": "49fb0af9bf8f16907980d383c2bbc85e185ec2e0", "node_id": "C_kwDOANBUbNoAKDQ5ZmIwYWY5YmY4ZjE2OTA3OTgwZDM4M2MyYmJjODVlMTg1ZWMyZTA", "commit": {"author": {"name": "Roger Sayle", "email": "roger@nextmovesoftware.com", "date": "2022-03-15T09:05:28Z"}, "committer": {"name": "Roger Sayle", "email": "roger@nextmovesoftware.com", "date": "2022-03-15T09:05:28Z"}, "message": "PR tree-optimization/101895: Fold VEC_PERM to help recognize FMA.\n\nThis patch resolves PR tree-optimization/101895 a missed optimization\nregression, by adding a costant folding simplification to match.pd to\nsimplify the transform \"mult; vec_perm; plus\" into \"vec_perm; mult; plus\"\nwith the aim that keeping the multiplication and addition next to each\nother allows them to be recognized as fused-multiply-add on suitable\ntargets.  This transformation requires a tweak to match.pd's\nvec_same_elem_p predicate to handle CONSTRUCTOR_EXPRs using the same\nSSA_NAME_DEF_STMT idiom used for constructors elsewhere in match.pd.\n\nThe net effect is that the following code example:\n\nvoid foo(float * __restrict__ a, float b, float *c) {\n  a[0] = c[0]*b + a[0];\n  a[1] = c[2]*b + a[1];\n  a[2] = c[1]*b + a[2];\n  a[3] = c[3]*b + a[3];\n}\n\nwhen compiled on x86_64-pc-linux-gnu with -O2 -march=cascadelake\ncurrently generates:\n\n        vbroadcastss    %xmm0, %xmm0\n        vmulps  (%rsi), %xmm0, %xmm0\n        vpermilps       $216, %xmm0, %xmm0\n        vaddps  (%rdi), %xmm0, %xmm0\n        vmovups %xmm0, (%rdi)\n        ret\n\nbut with this patch now generates the improved:\n\n        vpermilps       $216, (%rsi), %xmm1\n        vbroadcastss    %xmm0, %xmm0\n        vfmadd213ps     (%rdi), %xmm0, %xmm1\n        vmovups %xmm1, (%rdi)\n        ret\n\n2022-03-15  Roger Sayle  <roger@nextmovesoftware.com>\n\t    Marc Glisse  <marc.glisse@inria.fr>\n\t    Richard Biener  <rguenther@suse.de>\n\ngcc/ChangeLog\n\tPR tree-optimization/101895\n\t* match.pd (vec_same_elem_p): Handle CONSTRUCTOR_EXPR def.\n\t(plus (vec_perm (mult ...) ...) ...): New reordering simplification.\n\ngcc/testsuite/ChangeLog\n\tPR tree-optimization/101895\n\t* gcc.target/i386/pr101895.c: New test case.", "tree": {"sha": "2c78a41302d114f6aaf1defa3f7a64619c0dfe0d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2c78a41302d114f6aaf1defa3f7a64619c0dfe0d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/49fb0af9bf8f16907980d383c2bbc85e185ec2e0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49fb0af9bf8f16907980d383c2bbc85e185ec2e0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/49fb0af9bf8f16907980d383c2bbc85e185ec2e0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49fb0af9bf8f16907980d383c2bbc85e185ec2e0/comments", "author": {"login": "rogersayle", "id": 13512313, "node_id": "MDQ6VXNlcjEzNTEyMzEz", "avatar_url": "https://avatars.githubusercontent.com/u/13512313?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rogersayle", "html_url": "https://github.com/rogersayle", "followers_url": "https://api.github.com/users/rogersayle/followers", "following_url": "https://api.github.com/users/rogersayle/following{/other_user}", "gists_url": "https://api.github.com/users/rogersayle/gists{/gist_id}", "starred_url": "https://api.github.com/users/rogersayle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rogersayle/subscriptions", "organizations_url": "https://api.github.com/users/rogersayle/orgs", "repos_url": "https://api.github.com/users/rogersayle/repos", "events_url": "https://api.github.com/users/rogersayle/events{/privacy}", "received_events_url": "https://api.github.com/users/rogersayle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rogersayle", "id": 13512313, "node_id": "MDQ6VXNlcjEzNTEyMzEz", "avatar_url": "https://avatars.githubusercontent.com/u/13512313?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rogersayle", "html_url": "https://github.com/rogersayle", "followers_url": "https://api.github.com/users/rogersayle/followers", "following_url": "https://api.github.com/users/rogersayle/following{/other_user}", "gists_url": "https://api.github.com/users/rogersayle/gists{/gist_id}", "starred_url": "https://api.github.com/users/rogersayle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rogersayle/subscriptions", "organizations_url": "https://api.github.com/users/rogersayle/orgs", "repos_url": "https://api.github.com/users/rogersayle/repos", "events_url": "https://api.github.com/users/rogersayle/events{/privacy}", "received_events_url": "https://api.github.com/users/rogersayle/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "efd1582926f3278a5e57ebab7d87fc870f06ecea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/efd1582926f3278a5e57ebab7d87fc870f06ecea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/efd1582926f3278a5e57ebab7d87fc870f06ecea"}], "stats": {"total": 32, "additions": 30, "deletions": 2}, "files": [{"sha": "7d619f4c93217d1fdb1547c49d90442155c60feb", "filename": "gcc/match.pd", "status": "modified", "additions": 19, "deletions": 2, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49fb0af9bf8f16907980d383c2bbc85e185ec2e0/gcc%2Fmatch.pd", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49fb0af9bf8f16907980d383c2bbc85e185ec2e0/gcc%2Fmatch.pd", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmatch.pd?ref=49fb0af9bf8f16907980d383c2bbc85e185ec2e0", "patch": "@@ -7691,17 +7691,34 @@ and,\n \n /* VEC_PERM_EXPR (v, v, mask) -> v where v contains same element.  */\n \n+(match vec_same_elem_p\n+ (vec_duplicate @0))\n+\n+(match vec_same_elem_p\n+ CONSTRUCTOR@0\n+ (if (TREE_CODE (@0) == SSA_NAME\n+      && uniform_vector_p (gimple_assign_rhs1 (SSA_NAME_DEF_STMT (@0))))))\n+\n (match vec_same_elem_p\n  @0\n  (if (uniform_vector_p (@0))))\n \n-(match vec_same_elem_p\n- (vec_duplicate @0))\n \n (simplify\n  (vec_perm vec_same_elem_p@0 @0 @1)\n  @0)\n \n+/* Push VEC_PERM earlier if that may help FMA perception (PR101895).  */\n+(simplify\n+ (plus:c (vec_perm:s (mult:c@0 @1 vec_same_elem_p@2) @0 @3) @4)\n+ (if (TREE_CODE (@0) == SSA_NAME && num_imm_uses (@0) == 2)\n+  (plus (mult (vec_perm @1 @1 @3) @2) @4)))\n+(simplify\n+ (minus (vec_perm:s (mult:c@0 @1 vec_same_elem_p@2) @0 @3) @4)\n+ (if (TREE_CODE (@0) == SSA_NAME && num_imm_uses (@0) == 2)\n+  (minus (mult (vec_perm @1 @1 @3) @2) @4)))\n+\n+\n /* Match count trailing zeroes for simplify_count_trailing_zeroes in fwprop.\n    The canonical form is array[((x & -x) * C) >> SHIFT] where C is a magic\n    constant which when multiplied by a power of 2 contains a unique value"}, {"sha": "4d0f1cb1799e7a4d0e410a66338231a8ba74c9bb", "filename": "gcc/testsuite/gcc.target/i386/pr101895.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49fb0af9bf8f16907980d383c2bbc85e185ec2e0/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr101895.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49fb0af9bf8f16907980d383c2bbc85e185ec2e0/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr101895.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr101895.c?ref=49fb0af9bf8f16907980d383c2bbc85e185ec2e0", "patch": "@@ -0,0 +1,11 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -march=cascadelake\" } */\n+\n+void foo(float * __restrict__ a, float b, float *c) {\n+  a[0] = c[0]*b + a[0];\n+  a[1] = c[2]*b + a[1];\n+  a[2] = c[1]*b + a[2];\n+  a[3] = c[3]*b + a[3];\n+}\n+\n+/* { dg-final { scan-assembler \"vfmadd\" } } */"}]}