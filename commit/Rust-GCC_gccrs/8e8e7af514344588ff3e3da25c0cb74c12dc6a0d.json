{"sha": "8e8e7af514344588ff3e3da25c0cb74c12dc6a0d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGU4ZTdhZjUxNDM0NDU4OGZmM2UzZGEyNWMwY2I3NGMxMmRjNmEwZA==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2019-08-02T06:07:15Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2019-08-02T06:07:15Z"}, "message": "Mark DECL_SET_IS_OPERATOR_DELETE for user-provided delete operators.\n\n2019-08-02  Martin Liska  <mliska@suse.cz>\n\n\t* decl.c (grok_op_properties):\n\tMark DECL_SET_IS_OPERATOR_DELETE for user-provided delete operators.\n2019-08-02  Martin Liska  <mliska@suse.cz>\n\n\t* g++.dg/cpp1y/new2.C: New test.\n\nFrom-SVN: r273996", "tree": {"sha": "718561f6eba3620d15ed6284d1970991666ac69c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/718561f6eba3620d15ed6284d1970991666ac69c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8e8e7af514344588ff3e3da25c0cb74c12dc6a0d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e8e7af514344588ff3e3da25c0cb74c12dc6a0d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8e8e7af514344588ff3e3da25c0cb74c12dc6a0d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e8e7af514344588ff3e3da25c0cb74c12dc6a0d/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5bae71d1aaa211493c58d03037634a06064f59fa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5bae71d1aaa211493c58d03037634a06064f59fa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5bae71d1aaa211493c58d03037634a06064f59fa"}], "stats": {"total": 53, "additions": 52, "deletions": 1}, "files": [{"sha": "b7183ac4c05cca2f972decf23f45983d3e60eceb", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e8e7af514344588ff3e3da25c0cb74c12dc6a0d/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e8e7af514344588ff3e3da25c0cb74c12dc6a0d/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=8e8e7af514344588ff3e3da25c0cb74c12dc6a0d", "patch": "@@ -1,3 +1,8 @@\n+2019-08-02  Martin Liska  <mliska@suse.cz>\n+\n+\t* decl.c (grok_op_properties):\n+\tMark DECL_SET_IS_OPERATOR_DELETE for user-provided delete operators.\n+\n 2019-08-01  Martin Sebor  <msebor@redhat.com>\n \n \tPR c++/90947"}, {"sha": "e0102c0067dc96d167b528c086692e3f2313176b", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e8e7af514344588ff3e3da25c0cb74c12dc6a0d/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e8e7af514344588ff3e3da25c0cb74c12dc6a0d/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=8e8e7af514344588ff3e3da25c0cb74c12dc6a0d", "patch": "@@ -13678,7 +13678,10 @@ grok_op_properties (tree decl, bool complain)\n \t}\n \n       if (op_flags & OVL_OP_FLAG_DELETE)\n-\tcoerce_delete_type (decl, loc);\n+\t{\n+\t  DECL_SET_IS_OPERATOR_DELETE (decl, true);\n+\t  coerce_delete_type (decl, loc);\n+\t}\n       else\n \t{\n \t  DECL_SET_IS_OPERATOR_NEW (decl, true);"}, {"sha": "72e258b3506735d0c14f335df9dcc27b54bf3e13", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e8e7af514344588ff3e3da25c0cb74c12dc6a0d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e8e7af514344588ff3e3da25c0cb74c12dc6a0d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8e8e7af514344588ff3e3da25c0cb74c12dc6a0d", "patch": "@@ -1,3 +1,7 @@\n+2019-08-02  Martin Liska  <mliska@suse.cz>\n+\n+\t* g++.dg/cpp1y/new2.C: New test.\n+\n 2019-08-02  Senthil Kumar Selvaraj  <senthilkumar.selvaraj@microchip.com>\n \n \t* gcc.dg/torture/ssa-fre-6.c: Add dg-require-effective-target int32."}, {"sha": "926e79605283e92879b94e9bbee8b7bf348bf75a", "filename": "gcc/testsuite/g++.dg/cpp1y/new2.C", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e8e7af514344588ff3e3da25c0cb74c12dc6a0d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fnew2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e8e7af514344588ff3e3da25c0cb74c12dc6a0d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fnew2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fnew2.C?ref=8e8e7af514344588ff3e3da25c0cb74c12dc6a0d", "patch": "@@ -0,0 +1,39 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -std=c++17 -fdump-tree-cddce-details\" } */\n+\n+#include <cstdio>\n+#include <cstdlib>\n+#include <new>\n+\n+void* operator new(std::size_t sz)\n+{\n+  std::printf(\"global op new called, size = %zu\\n\", sz);\n+  void *ptr = std::malloc(sz);\n+  if (ptr)\n+    return ptr;\n+  else\n+    throw std::bad_alloc{};\n+}\n+\n+void operator delete(void* ptr) noexcept\n+{\n+  std::puts(\"global op delete called\");\n+  std::free(ptr);\n+}\n+\n+void\n+new_primitive_load() {\n+  int *x = new int;\n+  int tmp = *x;\n+  delete x;\n+}\n+\n+void\n+new_array_load() {\n+  int *x = new int[10];\n+  int tmp = x[4];\n+  delete [] x;\n+}\n+\n+/* { dg-final { scan-tree-dump-times \"Deleting : _\\\\d+ = operator new\" 2 \"cddce1\"} } */\n+/* { dg-final { scan-tree-dump-times \"Deleting : operator delete\" 2 \"cddce1\"} } */"}]}