{"sha": "22b6b5d6cfb76deb68ca5bc0bcae8b4245df946d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjJiNmI1ZDZjZmI3NmRlYjY4Y2E1YmMwYmNhZThiNDI0NWRmOTQ2ZA==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-05-03T11:46:15Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-05-03T12:33:15Z"}, "message": "libstdc++: Make byte-sized std::fill_n a constant expression (PR 94933)\n\nThe overload for byte types uses memset and isn't constexpr. This adds\nthe specifier and uses std::is_constant_evaluated() to provide a\ncompile-time alternative.\n\n\tPR libstdc++/94933\n\t* include/bits/stl_algobase.h (__fill_a1): Make overload for byte types\n\tusable in constant expressions.\n\t* testsuite/25_algorithms/fill_n/constexpr.cc: Test with bytes and\n\tnon-scalars.", "tree": {"sha": "57cdb833b8970bc3301816c9862d9b748b0e5c21", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/57cdb833b8970bc3301816c9862d9b748b0e5c21"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/22b6b5d6cfb76deb68ca5bc0bcae8b4245df946d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22b6b5d6cfb76deb68ca5bc0bcae8b4245df946d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/22b6b5d6cfb76deb68ca5bc0bcae8b4245df946d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22b6b5d6cfb76deb68ca5bc0bcae8b4245df946d/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "18a6e4130fb3c63a974295a18ed6e4bef070df03", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18a6e4130fb3c63a974295a18ed6e4bef070df03", "html_url": "https://github.com/Rust-GCC/gccrs/commit/18a6e4130fb3c63a974295a18ed6e4bef070df03"}], "stats": {"total": 49, "additions": 48, "deletions": 1}, "files": [{"sha": "7f11117365e2e53e7fd60d22049d7500523b615f", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22b6b5d6cfb76deb68ca5bc0bcae8b4245df946d/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22b6b5d6cfb76deb68ca5bc0bcae8b4245df946d/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=22b6b5d6cfb76deb68ca5bc0bcae8b4245df946d", "patch": "@@ -1,3 +1,11 @@\n+2020-05-03  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/94933\n+\t* include/bits/stl_algobase.h (__fill_a1): Make overload for byte types\n+\tusable in constant expressions.\n+\t* testsuite/25_algorithms/fill_n/constexpr.cc: Test with bytes and\n+\tnon-scalars.\n+\n 2020-05-01  Jonathan Wakely  <jwakely@redhat.com>\n \n \tPR libstdc++/94901"}, {"sha": "bed61fd9d00f64decb6f64987646ce395b79a568", "filename": "libstdc++-v3/include/bits/stl_algobase.h", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22b6b5d6cfb76deb68ca5bc0bcae8b4245df946d/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_algobase.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22b6b5d6cfb76deb68ca5bc0bcae8b4245df946d/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_algobase.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_algobase.h?ref=22b6b5d6cfb76deb68ca5bc0bcae8b4245df946d", "patch": "@@ -875,11 +875,20 @@ _GLIBCXX_END_NAMESPACE_CONTAINER\n \n   // Specialization: for char types we can use memset.\n   template<typename _Tp>\n+    _GLIBCXX20_CONSTEXPR\n     inline typename\n     __gnu_cxx::__enable_if<__is_byte<_Tp>::__value, void>::__type\n     __fill_a1(_Tp* __first, _Tp* __last, const _Tp& __c)\n     {\n       const _Tp __tmp = __c;\n+#if __cpp_lib_is_constant_evaluated\n+      if (std::is_constant_evaluated())\n+\t{\n+\t  for (; __first != __last; ++__first)\n+\t    *__first = __tmp;\n+\t  return;\n+\t}\n+#endif\n       if (const size_t __len = __last - __first)\n \t__builtin_memset(__first, static_cast<unsigned char>(__tmp), __len);\n     }"}, {"sha": "17c9aa5a8d7a066dddc397860746c4a8c014349b", "filename": "libstdc++-v3/testsuite/25_algorithms/fill_n/constexpr.cc", "status": "modified", "additions": 31, "deletions": 1, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22b6b5d6cfb76deb68ca5bc0bcae8b4245df946d/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Ffill_n%2Fconstexpr.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22b6b5d6cfb76deb68ca5bc0bcae8b4245df946d/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Ffill_n%2Fconstexpr.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Ffill_n%2Fconstexpr.cc?ref=22b6b5d6cfb76deb68ca5bc0bcae8b4245df946d", "patch": "@@ -28,7 +28,37 @@ test()\n \n   const auto outd = std::fill_n(ma0.begin(), 6, 77);\n \n-  return outd == ma0.begin() + 6;\n+  return outd == ma0.begin() + 6 && ma0[5] == 77 && ma0[6] == 0;\n }\n \n static_assert(test());\n+\n+constexpr bool\n+test_byte()\n+{\n+  // PR libstdc++/94933\n+  std::array<char, 12> ma0{};\n+\n+  const auto outd = std::fill_n(ma0.begin(), 6, 77);\n+\n+  return outd == ma0.begin() + 6 && ma0[5] == 77 && ma0[6] == 0;\n+}\n+\n+static_assert( test_byte() );\n+\n+struct S\n+{\n+  int i = 0;\n+};\n+\n+constexpr bool\n+test_nonscalar()\n+{\n+  std::array<S, 12> ma0{};\n+\n+  const auto outd = std::fill_n(ma0.begin(), 6, S{77});\n+\n+  return outd == ma0.begin() + 6 && ma0[5].i == 77 && ma0[6].i == 0;\n+}\n+\n+static_assert( test_nonscalar() );"}]}