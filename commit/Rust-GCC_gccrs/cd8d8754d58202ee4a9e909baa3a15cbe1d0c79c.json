{"sha": "cd8d8754d58202ee4a9e909baa3a15cbe1d0c79c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2Q4ZDg3NTRkNTgyMDJlZTRhOWU5MDliYWEzYTE1Y2JlMWQwYzc5Yw==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2011-03-22T22:41:52Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2011-03-22T22:41:52Z"}, "message": "mn10300-opts.h: New.\n\n\t* config/mn10300/mn10300-opts.h: New.\n\t* config/mn10300/mn10300.c (mn10300_processor,\n\tmn10300_tune_string): Remove.\n\t(mn10300_handle_option): Don't assert that global structures are\n\tin use.  Access mn10300_processor via opts pointer.  Don't handle\n\tOPT_mtune_ here.\n\t* config/mn10300/mn10300.h (enum processor_type): Move to\n\tmn10300-opts.h.\n\t(mn10300_processor): Remove.\n\t* config/mn10300/mn10300.opt (config/mn10300/mn10300-opts.h): New\n\tHeaderInclude entry.\n\t(mn10300_processor): New Variable entry.\n\t(mtune=): Use Var.\n\nFrom-SVN: r171323", "tree": {"sha": "deb8a4b82ebf070f2bb617b4dee6725dd67e72e5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/deb8a4b82ebf070f2bb617b4dee6725dd67e72e5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cd8d8754d58202ee4a9e909baa3a15cbe1d0c79c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd8d8754d58202ee4a9e909baa3a15cbe1d0c79c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd8d8754d58202ee4a9e909baa3a15cbe1d0c79c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd8d8754d58202ee4a9e909baa3a15cbe1d0c79c/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "24e6e6b1c96253c78a206e57850e0c250772d293", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/24e6e6b1c96253c78a206e57850e0c250772d293", "html_url": "https://github.com/Rust-GCC/gccrs/commit/24e6e6b1c96253c78a206e57850e0c250772d293"}], "stats": {"total": 97, "additions": 67, "deletions": 30}, "files": [{"sha": "0e9d61dd2f68cdf1d6e5e33bdcd9312c72eb518c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd8d8754d58202ee4a9e909baa3a15cbe1d0c79c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd8d8754d58202ee4a9e909baa3a15cbe1d0c79c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cd8d8754d58202ee4a9e909baa3a15cbe1d0c79c", "patch": "@@ -1,3 +1,19 @@\n+2011-03-22  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* config/mn10300/mn10300-opts.h: New.\n+\t* config/mn10300/mn10300.c (mn10300_processor,\n+\tmn10300_tune_string): Remove.\n+\t(mn10300_handle_option): Don't assert that global structures are\n+\tin use.  Access mn10300_processor via opts pointer.  Don't handle\n+\tOPT_mtune_ here.\n+\t* config/mn10300/mn10300.h (enum processor_type): Move to\n+\tmn10300-opts.h.\n+\t(mn10300_processor): Remove.\n+\t* config/mn10300/mn10300.opt (config/mn10300/mn10300-opts.h): New\n+\tHeaderInclude entry.\n+\t(mn10300_processor): New Variable entry.\n+\t(mtune=): Use Var.\n+\n 2011-03-22  Joseph Myers  <joseph@codesourcery.com>\n \n \t* config/microblaze/microblaze.c: Don't include opts.h."}, {"sha": "888fd20bd6550ac874c77dfe6d1c1410b14f919e", "filename": "gcc/config/mn10300/mn10300-opts.h", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd8d8754d58202ee4a9e909baa3a15cbe1d0c79c/gcc%2Fconfig%2Fmn10300%2Fmn10300-opts.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd8d8754d58202ee4a9e909baa3a15cbe1d0c79c/gcc%2Fconfig%2Fmn10300%2Fmn10300-opts.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmn10300%2Fmn10300-opts.h?ref=cd8d8754d58202ee4a9e909baa3a15cbe1d0c79c", "patch": "@@ -0,0 +1,32 @@\n+/* Definitions for option handling for Matsushita MN10300 series.\n+   Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005,\n+   2007, 2008, 2009, 2010, 2011 Free Software Foundation, Inc.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3, or (at your option)\n+   any later version.\n+\n+   GCC is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with GCC; see the file COPYING3.  If not see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+#ifndef MN10300_OPTS_H\n+#define MN10300_OPTS_H\n+\n+enum processor_type\n+{\n+  PROCESSOR_MN10300,\n+  PROCESSOR_AM33,\n+  PROCESSOR_AM33_2,\n+  PROCESSOR_AM34\n+};\n+\n+#endif"}, {"sha": "cad6a0dbbb4af1522d9c6593b524e38ca25195a3", "filename": "gcc/config/mn10300/mn10300.c", "status": "modified", "additions": 7, "deletions": 20, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd8d8754d58202ee4a9e909baa3a15cbe1d0c79c/gcc%2Fconfig%2Fmn10300%2Fmn10300.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd8d8754d58202ee4a9e909baa3a15cbe1d0c79c/gcc%2Fconfig%2Fmn10300%2Fmn10300.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmn10300%2Fmn10300.c?ref=cd8d8754d58202ee4a9e909baa3a15cbe1d0c79c", "patch": "@@ -52,12 +52,6 @@\n    symbol names from register names.  */\n int mn10300_protect_label;\n \n-/* The selected processor.  */\n-enum processor_type mn10300_processor = PROCESSOR_DEFAULT;\n-\n-/* Processor type to select for tuning.  */\n-static const char * mn10300_tune_string = NULL;\n-\n /* Selected processor type for tuning.  */\n enum processor_type mn10300_tune_cpu = PROCESSOR_DEFAULT;\n \n@@ -91,35 +85,28 @@ static int cc_flags_for_code(enum rtx_code);\n /* Implement TARGET_HANDLE_OPTION.  */\n \n static bool\n-mn10300_handle_option (struct gcc_options *opts, struct gcc_options *opts_set,\n+mn10300_handle_option (struct gcc_options *opts,\n+\t\t       struct gcc_options *opts_set ATTRIBUTE_UNUSED,\n \t\t       const struct cl_decoded_option *decoded,\n \t\t       location_t loc ATTRIBUTE_UNUSED)\n {\n   size_t code = decoded->opt_index;\n-  const char *arg = decoded->arg;\n   int value = decoded->value;\n \n-  gcc_assert (opts == &global_options);\n-  gcc_assert (opts_set == &global_options_set);\n-\n   switch (code)\n     {\n     case OPT_mam33:\n-      mn10300_processor = value ? PROCESSOR_AM33 : PROCESSOR_MN10300;\n+      opts->x_mn10300_processor = value ? PROCESSOR_AM33 : PROCESSOR_MN10300;\n       return true;\n \n     case OPT_mam33_2:\n-      mn10300_processor = (value\n-\t\t\t   ? PROCESSOR_AM33_2\n-\t\t\t   : MIN (PROCESSOR_AM33, PROCESSOR_DEFAULT));\n+      opts->x_mn10300_processor = (value\n+\t\t\t\t   ? PROCESSOR_AM33_2\n+\t\t\t\t   : MIN (PROCESSOR_AM33, PROCESSOR_DEFAULT));\n       return true;\n \n     case OPT_mam34:\n-      mn10300_processor = (value ? PROCESSOR_AM34 : PROCESSOR_DEFAULT);\n-      return true;\n-\n-    case OPT_mtune_:\n-      mn10300_tune_string = arg;\n+      opts->x_mn10300_processor = (value ? PROCESSOR_AM34 : PROCESSOR_DEFAULT);\n       return true;\n \n     default:"}, {"sha": "ac23f5858617df55a1f48a2bdacbd6bdac41efd2", "filename": "gcc/config/mn10300/mn10300.h", "status": "modified", "additions": 4, "deletions": 9, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd8d8754d58202ee4a9e909baa3a15cbe1d0c79c/gcc%2Fconfig%2Fmn10300%2Fmn10300.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd8d8754d58202ee4a9e909baa3a15cbe1d0c79c/gcc%2Fconfig%2Fmn10300%2Fmn10300.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmn10300%2Fmn10300.h?ref=cd8d8754d58202ee4a9e909baa3a15cbe1d0c79c", "patch": "@@ -1,7 +1,7 @@\n /* Definitions of target machine for GNU compiler.\n    Matsushita MN10300 series\n    Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005,\n-   2007, 2008, 2009, 2010 Free Software Foundation, Inc.\n+   2007, 2008, 2009, 2010, 2011 Free Software Foundation, Inc.\n    Contributed by Jeff Law (law@cygnus.com).\n \n    This file is part of GCC.\n@@ -57,15 +57,10 @@\n     }\t\t\t\t\t\t\\\n   while (0)\n \n-enum processor_type\n-{\n-  PROCESSOR_MN10300,\n-  PROCESSOR_AM33,\n-  PROCESSOR_AM33_2,\n-  PROCESSOR_AM34\n-};\n+#ifndef MN10300_OPTS_H\n+#include \"config/mn10300/mn10300-opts.h\"\n+#endif\n \n-extern enum processor_type mn10300_processor;\n extern enum processor_type mn10300_tune_cpu;\n \n #define TARGET_AM33\t(mn10300_processor >= PROCESSOR_AM33)"}, {"sha": "676e434e0ef19e6a4a5662ccff56fbda9ac7d3f5", "filename": "gcc/config/mn10300/mn10300.opt", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd8d8754d58202ee4a9e909baa3a15cbe1d0c79c/gcc%2Fconfig%2Fmn10300%2Fmn10300.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd8d8754d58202ee4a9e909baa3a15cbe1d0c79c/gcc%2Fconfig%2Fmn10300%2Fmn10300.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmn10300%2Fmn10300.opt?ref=cd8d8754d58202ee4a9e909baa3a15cbe1d0c79c", "patch": "@@ -18,6 +18,13 @@\n ; along with GCC; see the file COPYING3.  If not see\n ; <http://www.gnu.org/licenses/>.\n \n+HeaderInclude\n+config/mn10300/mn10300-opts.h\n+\n+; The selected processor.\n+Variable\n+enum processor_type mn10300_processor = PROCESSOR_DEFAULT\n+\n mam33\n Target\n Target the AM33 processor\n@@ -31,7 +38,7 @@ Target Report\n Target the AM34 processor\n \n mtune=\n-Target RejectNegative Joined\n+Target RejectNegative Joined Var(mn10300_tune_string)\n Tune code for the given processor\n \n mmult-bug"}]}