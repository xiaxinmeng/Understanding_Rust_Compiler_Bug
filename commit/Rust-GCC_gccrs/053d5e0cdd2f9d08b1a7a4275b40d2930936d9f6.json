{"sha": "053d5e0cdd2f9d08b1a7a4275b40d2930936d9f6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDUzZDVlMGNkZDJmOWQwOGIxYTdhNDI3NWI0MGQyOTMwOTM2ZDlmNg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2016-11-30T08:01:47Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2016-11-30T08:01:47Z"}, "message": "re PR tree-optimization/78586 (Wrong code caused by printf-return-value)\n\n\tPR tree-optimization/78586\n\t* gimple-ssa-sprintf.c (format_integer): Use TYPE_MAX_VALUE or\n\tTYPE_MIN_VALUE or build_all_ones_cst instead of folding LSHIFT_EXPR.\n\tDon't build_int_cst min/max twice.  Formatting fix.\n\n\t* gcc.c-torture/execute/pr78586.c: New test.\n\nFrom-SVN: r242998", "tree": {"sha": "32e6db300320c3e02dd024fac38653a3c9a6b981", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/32e6db300320c3e02dd024fac38653a3c9a6b981"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/053d5e0cdd2f9d08b1a7a4275b40d2930936d9f6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/053d5e0cdd2f9d08b1a7a4275b40d2930936d9f6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/053d5e0cdd2f9d08b1a7a4275b40d2930936d9f6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/053d5e0cdd2f9d08b1a7a4275b40d2930936d9f6/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ced17de64000713e99af200bb9ff468b907ec1f9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ced17de64000713e99af200bb9ff468b907ec1f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ced17de64000713e99af200bb9ff468b907ec1f9"}], "stats": {"total": 60, "additions": 45, "deletions": 15}, "files": [{"sha": "1b8e061c873e07a8bb9bc923a08c030c8db578f5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/053d5e0cdd2f9d08b1a7a4275b40d2930936d9f6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/053d5e0cdd2f9d08b1a7a4275b40d2930936d9f6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=053d5e0cdd2f9d08b1a7a4275b40d2930936d9f6", "patch": "@@ -1,3 +1,10 @@\n+2016-11-30  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/78586\n+\t* gimple-ssa-sprintf.c (format_integer): Use TYPE_MAX_VALUE or\n+\tTYPE_MIN_VALUE or build_all_ones_cst instead of folding LSHIFT_EXPR.\n+\tDon't build_int_cst min/max twice.  Formatting fix.\n+\n 2016-11-30  Markus Trippelsdorf  <markus@trippelsdorf.de>\n \n \tPR rtl-optimization/78588"}, {"sha": "99a635a77fb1cd58774e6707b50a03b16b72a8fd", "filename": "gcc/gimple-ssa-sprintf.c", "status": "modified", "additions": 16, "deletions": 15, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/053d5e0cdd2f9d08b1a7a4275b40d2930936d9f6/gcc%2Fgimple-ssa-sprintf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/053d5e0cdd2f9d08b1a7a4275b40d2930936d9f6/gcc%2Fgimple-ssa-sprintf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-ssa-sprintf.c?ref=053d5e0cdd2f9d08b1a7a4275b40d2930936d9f6", "patch": "@@ -995,7 +995,8 @@ format_integer (const conversion_spec &spec, tree arg)\n   tree argmin = NULL_TREE;\n   tree argmax = NULL_TREE;\n \n-  if (arg && TREE_CODE (arg) == SSA_NAME\n+  if (arg\n+      && TREE_CODE (arg) == SSA_NAME\n       && TREE_CODE (argtype) == INTEGER_TYPE)\n     {\n       /* Try to determine the range of values of the integer argument\n@@ -1017,12 +1018,8 @@ format_integer (const conversion_spec &spec, tree arg)\n \t     the upper bound for %i but -3 for %u.  */\n \t  if (wi::neg_p (min) && !wi::neg_p (max))\n \t    {\n-\t      argmin = build_int_cst (argtype, wi::fits_uhwi_p (min)\n-\t\t\t\t      ? min.to_uhwi () : min.to_shwi ());\n-\n-\t      argmax = build_int_cst (argtype, wi::fits_uhwi_p (max)\n-\t\t\t\t      ? max.to_uhwi () : max.to_shwi ());\n-\n+\t      argmin = res.argmin;\n+\t      argmax = res.argmax;\n \t      int minbytes = format_integer (spec, res.argmin).range.min;\n \t      int maxbytes = format_integer (spec, res.argmax).range.max;\n \t      if (maxbytes < minbytes)\n@@ -1081,21 +1078,25 @@ format_integer (const conversion_spec &spec, tree arg)\n       int typeprec = TYPE_PRECISION (dirtype);\n       int argprec = TYPE_PRECISION (argtype);\n \n-      if (argprec < typeprec || POINTER_TYPE_P (argtype))\n+      if (argprec < typeprec)\n \t{\n-\t  if (TYPE_UNSIGNED (argtype))\n+\t  if (POINTER_TYPE_P (argtype))\n \t    argmax = build_all_ones_cst (argtype);\n+\t  else if (TYPE_UNSIGNED (argtype))\n+\t    argmax = TYPE_MAX_VALUE (argtype);\n \t  else\n-\t    argmax = fold_build2 (LSHIFT_EXPR, argtype, integer_one_node,\n-\t\t\t\t  build_int_cst (integer_type_node,\n-\t\t\t\t\t\t argprec - 1));\n+\t    argmax = TYPE_MIN_VALUE (argtype);\n \t}\n       else\n \t{\n-\t  argmax = fold_build2 (LSHIFT_EXPR, dirtype, integer_one_node,\n-\t\t\t\tbuild_int_cst (integer_type_node,\n-\t\t\t\t\t       typeprec - 1));\n+\t  if (POINTER_TYPE_P (dirtype))\n+\t    argmax = build_all_ones_cst (dirtype);\n+\t  else if (TYPE_UNSIGNED (dirtype))\n+\t    argmax = TYPE_MAX_VALUE (dirtype);\n+\t  else\n+\t    argmax = TYPE_MIN_VALUE (dirtype);\n \t}\n+\n       res.argmin = argmin;\n       res.argmax = argmax;\n     }"}, {"sha": "a79a4a8a94a0cabc79bd9f968eb095fedf7a706a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/053d5e0cdd2f9d08b1a7a4275b40d2930936d9f6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/053d5e0cdd2f9d08b1a7a4275b40d2930936d9f6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=053d5e0cdd2f9d08b1a7a4275b40d2930936d9f6", "patch": "@@ -1,3 +1,8 @@\n+2016-11-30  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/78586\n+\t* gcc.c-torture/execute/pr78586.c: New test.\n+\n 2016-11-30  Janus Weil  <janus@gcc.gnu.org>\n \n \tPR fortran/78573"}, {"sha": "6982534e9ee59a4b230ecfc274d2444687e8eb11", "filename": "gcc/testsuite/gcc.c-torture/execute/pr78586.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/053d5e0cdd2f9d08b1a7a4275b40d2930936d9f6/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr78586.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/053d5e0cdd2f9d08b1a7a4275b40d2930936d9f6/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr78586.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr78586.c?ref=053d5e0cdd2f9d08b1a7a4275b40d2930936d9f6", "patch": "@@ -0,0 +1,17 @@\n+/* PR tree-optimization/78586 */\n+\n+void\n+foo (unsigned long x)\n+{\n+  char a[30];\n+  unsigned long b = __builtin_sprintf (a, \"%lu\", x);\n+  if (b != 4)\n+    __builtin_abort ();\n+}\n+\n+int\n+main ()\n+{\n+  foo (1000);\n+  return 0;\n+}"}]}