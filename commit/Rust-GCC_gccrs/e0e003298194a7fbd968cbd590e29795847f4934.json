{"sha": "e0e003298194a7fbd968cbd590e29795847f4934", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTBlMDAzMjk4MTk0YTdmYmQ5NjhjYmQ1OTBlMjk3OTU4NDdmNDkzNA==", "commit": {"author": {"name": "Eric Christopher", "email": "echristo@gcc.gnu.org", "date": "2001-11-06T22:38:15Z"}, "committer": {"name": "Eric Christopher", "email": "echristo@gcc.gnu.org", "date": "2001-11-06T22:38:15Z"}, "message": "mips.md (movdf_internal2): Add constraints for float to general register move.\n\n2001-11-06  Eric Christopher  <echristo@redhat.com>\n\n\t* config/mips/mips.md(movdf_internal2): Add constraints for float\n\tto general register move.\n\t* config/mips/elf64.h: Add default ABI.\n\nFrom-SVN: r46814", "tree": {"sha": "b22f4d507c70fece5a456241b542de51ec4a583e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b22f4d507c70fece5a456241b542de51ec4a583e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e0e003298194a7fbd968cbd590e29795847f4934", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0e003298194a7fbd968cbd590e29795847f4934", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e0e003298194a7fbd968cbd590e29795847f4934", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0e003298194a7fbd968cbd590e29795847f4934/comments", "author": null, "committer": null, "parents": [{"sha": "d23c55c28c57c7e60d3fa9a0b252b9a1229c99fc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d23c55c28c57c7e60d3fa9a0b252b9a1229c99fc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d23c55c28c57c7e60d3fa9a0b252b9a1229c99fc"}], "stats": {"total": 24, "additions": 17, "deletions": 7}, "files": [{"sha": "3d76402fec9678f7794bad33ba46a5c281bca996", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0e003298194a7fbd968cbd590e29795847f4934/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0e003298194a7fbd968cbd590e29795847f4934/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e0e003298194a7fbd968cbd590e29795847f4934", "patch": "@@ -1,3 +1,9 @@\n+2001-11-06  Eric Christopher  <echristo@redhat.com>\n+\n+\t* config/mips/mips.md(movdf_internal2): Add constraints for float\n+\tto general register move.\n+\t* config/mips/elf64.h: Add default ABI.\n+\n 2001-11-06  Neil Booth  <neil@cat.daikokuya.demon.co.uk>\n \n \t* alias.c:: Include langhooks.h.\n@@ -61,20 +67,21 @@ Tue Nov  6 09:21:34 2001  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \tarrays.\n \tFixes PR c/461.\n \n+>>>>>>> 1.11778\n 2001-11-05  Zack Weinberg  <zack@codesourcery.com>\n \n \t* aclocal.m4: (AM_WITH_NLS): Don't look at ALL_LINGUAS.\n \t(AM_GNU_GETTEXT): Set CATALOGS to a list of .gmo files\n \tcorresponding to the complete set of .po and .gmo files in\n \tthe source directory's po subdir, modified by LINGUAS.  Don't\n \tlook at ALL_LINGUAS.\n-\t* configure.in: Don't set ALL_LINGUAS.  \n+\t* configure.in: Don't set ALL_LINGUAS.\n \t* configure: Regenerate.\n \n \t* Makefile.in (.po.gmo): Don't move into source directory.\n \t(.po.pox): Clarify comments.\n \t(install-po): Look for .gmo files in both srcdir and objdir;\n-\tdon't fail if a file is totally missing.\t\t    \n+\tdon't fail if a file is totally missing.\n \t(distclean): rmdir ada subdirectory too.\n \n 2001-11-05  Geoffrey Keating  <geoffk@redhat.com>\n@@ -110,7 +117,7 @@ Mon Nov  5 16:15:25 CET 2001  Jan Hubicka  <jh@suse.cz>\n \tremove unneded depdendencies;\n \t(cfglayout.o): New.\n \t* cfglayout.c, cfglayout.h: New files; break out from ...\n-\t* bb-reorder.c: ... here; Remove unneeded includes; \n+\t* bb-reorder.c: ... here; Remove unneeded includes;\n \n 2001-11-04  Alan Modra  <amodra@bigpond.net.au>\n "}, {"sha": "2f520282bb673644e4c36bdf2b4d0b6ac3c62de1", "filename": "gcc/config/mips/elf64.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0e003298194a7fbd968cbd590e29795847f4934/gcc%2Fconfig%2Fmips%2Felf64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0e003298194a7fbd968cbd590e29795847f4934/gcc%2Fconfig%2Fmips%2Felf64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Felf64.h?ref=e0e003298194a7fbd968cbd590e29795847f4934", "patch": "@@ -25,6 +25,9 @@ Boston, MA 02111-1307, USA.  */\n #define TARGET_DEFAULT MASK_FLOAT64|MASK_64BIT\n #define MIPS_ISA_DEFAULT 3\n \n+/* This should change to n32 when it is supported in gas.  */\n+#define MIPS_ABI_DEFAULT ABI_O64\n+\n /* Until we figure out what MIPS ELF targets normally use, just do\n    stabs in ELF.  */\n #ifndef PREFERRED_DEBUGGING_TYPE"}, {"sha": "a69440891a19f157af316e39a571212b92e164e5", "filename": "gcc/config/mips/mips.md", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0e003298194a7fbd968cbd590e29795847f4934/gcc%2Fconfig%2Fmips%2Fmips.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0e003298194a7fbd968cbd590e29795847f4934/gcc%2Fconfig%2Fmips%2Fmips.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.md?ref=e0e003298194a7fbd968cbd590e29795847f4934", "patch": "@@ -6258,17 +6258,17 @@ move\\\\t%0,%z4\\\\n\\\\\n    (set_attr \"length\"\t\"4,8,4,4,8,8,8,8,4,8,4,4\")])\n \n (define_insn \"movdf_internal2\"\n-  [(set (match_operand:DF 0 \"nonimmediate_operand\" \"=d,d,d,R,To\")\n-\t(match_operand:DF 1 \"general_operand\" \"dG,R,ToF,d,d\"))]\n+  [(set (match_operand:DF 0 \"nonimmediate_operand\" \"=d,d,d,R,To,*d\")\n+\t(match_operand:DF 1 \"general_operand\" \"dG,R,ToF,d,d,*f\"))]\n   \"(TARGET_SOFT_FLOAT || TARGET_SINGLE_FLOAT) && !TARGET_MIPS16\n    && (register_operand (operands[0], DFmode)\n        || register_operand (operands[1], DFmode)\n        || (GET_CODE (operands[1]) == CONST_INT && INTVAL (operands[1]) == 0)\n        || operands[1] == CONST0_RTX (DFmode))\"\n   \"* return mips_move_2words (operands, insn); \"\n-  [(set_attr \"type\"\t\"move,load,load,store,store\")\n+  [(set_attr \"type\"\t\"move,load,load,store,store,xfer\")\n    (set_attr \"mode\"\t\"DF\")\n-   (set_attr \"length\"\t\"8,8,16,8,16\")])\n+   (set_attr \"length\"\t\"8,8,16,8,16,8\")])\n \n (define_insn \"\"\n   [(set (match_operand:DF 0 \"nonimmediate_operand\" \"=d,y,d,d,d,R,To\")"}]}