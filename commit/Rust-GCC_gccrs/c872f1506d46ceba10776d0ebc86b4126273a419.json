{"sha": "c872f1506d46ceba10776d0ebc86b4126273a419", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yzg3MmYxNTA2ZDQ2Y2ViYTEwNzc2ZDBlYmM4NmI0MTI2MjczYTQxOQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2019-09-27T18:19:55Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2019-09-27T18:19:55Z"}, "message": "cp-tree.h (class iloc_sentinel): New.\n\n\t* cp-tree.h (class iloc_sentinel): New.\n\nWe didn't already have a sentinel for input_location, and while\ntemp_override would work, it would also happily set input_location to 0,\nwhich breaks things that try to look up the associated filename.\n\n\t* decl.c (grokdeclarator, finish_enum_value_list): Use it.\n\t* mangle.c (mangle_decl_string): Use it.\n\t* pt.c (perform_typedefs_access_check): Use it.\n\nFrom-SVN: r276191", "tree": {"sha": "2a0a2e3ea4616da4030026f5092c505936d412e3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2a0a2e3ea4616da4030026f5092c505936d412e3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c872f1506d46ceba10776d0ebc86b4126273a419", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c872f1506d46ceba10776d0ebc86b4126273a419", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c872f1506d46ceba10776d0ebc86b4126273a419", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c872f1506d46ceba10776d0ebc86b4126273a419/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "975d043ff6b6f8a9e9ff0be799701fc1d842bb83", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/975d043ff6b6f8a9e9ff0be799701fc1d842bb83", "html_url": "https://github.com/Rust-GCC/gccrs/commit/975d043ff6b6f8a9e9ff0be799701fc1d842bb83"}], "stats": {"total": 49, "additions": 32, "deletions": 17}, "files": [{"sha": "8e92d91ef8e6592c1a9aef8b2ee99307dcf1bf4d", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c872f1506d46ceba10776d0ebc86b4126273a419/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c872f1506d46ceba10776d0ebc86b4126273a419/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=c872f1506d46ceba10776d0ebc86b4126273a419", "patch": "@@ -1,3 +1,10 @@\n+2019-09-27  Jason Merrill  <jason@redhat.com>\n+\n+\t* cp-tree.h (class iloc_sentinel): New.\n+\t* decl.c (grokdeclarator, finish_enum_value_list): Use it.\n+\t* mangle.c (mangle_decl_string): Use it.\n+\t* pt.c (perform_typedefs_access_check): Use it.\n+\n 2019-09-27  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* cp-tree.h (build_cxx_call): Take the original function decl"}, {"sha": "be1a44e437330be667811dce79cd9a4d08b2e77e", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c872f1506d46ceba10776d0ebc86b4126273a419/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c872f1506d46ceba10776d0ebc86b4126273a419/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=c872f1506d46ceba10776d0ebc86b4126273a419", "patch": "@@ -1762,6 +1762,24 @@ class warning_sentinel\n   ~warning_sentinel() { flag = val; }\n };\n \n+/* RAII sentinel to temporarily override input_location.  This will not set\n+   input_location to UNKNOWN_LOCATION or BUILTINS_LOCATION.  */\n+\n+class iloc_sentinel\n+{\n+  location_t saved_loc;\n+public:\n+  iloc_sentinel (location_t loc): saved_loc (input_location)\n+  {\n+    if (loc >= RESERVED_LOCATION_COUNT)\n+      input_location = loc;\n+  }\n+  ~iloc_sentinel ()\n+  {\n+    input_location = saved_loc;\n+  }\n+};\n+\n /* RAII sentinel that saves the value of a variable, optionally\n    overrides it right away, and restores its value when the sentinel\n    id destructed.  */"}, {"sha": "67c4521e98c70e6fe2718a54776b229a5ea6a3c7", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 5, "deletions": 10, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c872f1506d46ceba10776d0ebc86b4126273a419/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c872f1506d46ceba10776d0ebc86b4126273a419/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=c872f1506d46ceba10776d0ebc86b4126273a419", "patch": "@@ -10523,7 +10523,6 @@ grokdeclarator (const cp_declarator *declarator,\n   bool constinit_p = decl_spec_seq_has_spec_p (declspecs, ds_constinit);\n   bool late_return_type_p = false;\n   bool array_parameter_p = false;\n-  location_t saved_loc = input_location;\n   tree reqs = NULL_TREE;\n \n   signed_p = decl_spec_seq_has_spec_p (declspecs, ds_signed);\n@@ -11514,9 +11513,10 @@ grokdeclarator (const cp_declarator *declarator,\n \n \t    /* Declaring a function type.  */\n \n-\t    input_location = declspecs->locations[ds_type_spec];\n-\t    abstract_virtuals_error (ACU_RETURN, type);\n-\t    input_location = saved_loc;\n+\t    {\n+\t      iloc_sentinel ils (declspecs->locations[ds_type_spec]);\n+\t      abstract_virtuals_error (ACU_RETURN, type);\n+\t    }\n \n \t    /* Pick up type qualifiers which should be applied to `this'.  */\n \t    memfn_quals = declarator->u.function.qualifiers;\n@@ -15061,11 +15061,8 @@ finish_enum_value_list (tree enumtype)\n      type of the enumeration.  */\n   for (values = TYPE_VALUES (enumtype); values; values = TREE_CHAIN (values))\n     {\n-      location_t saved_location;\n-\n       decl = TREE_VALUE (values);\n-      saved_location = input_location;\n-      input_location = DECL_SOURCE_LOCATION (decl);\n+      iloc_sentinel ils (DECL_SOURCE_LOCATION (decl));\n       if (fixed_underlying_type_p)\n         /* If the enumeration type has a fixed underlying type, we\n            already checked all of the enumerator values.  */\n@@ -15074,8 +15071,6 @@ finish_enum_value_list (tree enumtype)\n         value = perform_implicit_conversion (underlying_type,\n                                              DECL_INITIAL (decl),\n                                              tf_warning_or_error);\n-      input_location = saved_location;\n-\n       /* Do not clobber shared ints.  */\n       if (value != error_mark_node)\n \t{"}, {"sha": "a9333b84349eb883aac6ef24a51e67e1f55abcad", "filename": "gcc/cp/mangle.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c872f1506d46ceba10776d0ebc86b4126273a419/gcc%2Fcp%2Fmangle.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c872f1506d46ceba10776d0ebc86b4126273a419/gcc%2Fcp%2Fmangle.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fmangle.c?ref=c872f1506d46ceba10776d0ebc86b4126273a419", "patch": "@@ -3791,7 +3791,6 @@ static tree\n mangle_decl_string (const tree decl)\n {\n   tree result;\n-  location_t saved_loc = input_location;\n   tree saved_fn = NULL_TREE;\n   bool template_p = false;\n \n@@ -3809,7 +3808,7 @@ mangle_decl_string (const tree decl)\n \t  current_function_decl = NULL_TREE;\n \t}\n     }\n-  input_location = DECL_SOURCE_LOCATION (decl);\n+  iloc_sentinel ils (DECL_SOURCE_LOCATION (decl));\n \n   start_mangling (decl);\n \n@@ -3828,7 +3827,6 @@ mangle_decl_string (const tree decl)\n       pop_tinst_level ();\n       current_function_decl = saved_fn;\n     }\n-  input_location = saved_loc;\n \n   return result;\n }"}, {"sha": "5a2dfbbd994f3699c9418aca993f883e61d40d8e", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c872f1506d46ceba10776d0ebc86b4126273a419/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c872f1506d46ceba10776d0ebc86b4126273a419/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=c872f1506d46ceba10776d0ebc86b4126273a419", "patch": "@@ -10941,7 +10941,6 @@ apply_late_template_attributes (tree *decl_p, tree attributes, int attr_flags,\n static void\n perform_typedefs_access_check (tree tmpl, tree targs)\n {\n-  location_t saved_location;\n   unsigned i;\n   qualified_typedef_usage_t *iter;\n \n@@ -10950,7 +10949,6 @@ perform_typedefs_access_check (tree tmpl, tree targs)\n \t  && TREE_CODE (tmpl) != FUNCTION_DECL))\n     return;\n \n-  saved_location = input_location;\n   FOR_EACH_VEC_SAFE_ELT (get_types_needing_access_check (tmpl), i, iter)\n     {\n       tree type_decl = iter->typedef_decl;\n@@ -10966,12 +10964,11 @@ perform_typedefs_access_check (tree tmpl, tree targs)\n \n       /* Make access check error messages point to the location\n          of the use of the typedef.  */\n-      input_location = iter->locus;\n+      iloc_sentinel ils (iter->locus);\n       perform_or_defer_access_check (TYPE_BINFO (type_scope),\n \t\t\t\t     type_decl, type_decl,\n \t\t\t\t     tf_warning_or_error);\n     }\n-    input_location = saved_location;\n }\n \n static tree"}]}