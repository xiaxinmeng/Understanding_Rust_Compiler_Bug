{"sha": "1edf88662b51da93460b6139344edb5f9b943b0e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWVkZjg4NjYyYjUxZGE5MzQ2MGI2MTM5MzQ0ZWRiNWY5Yjk0M2IwZQ==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2018-12-19T16:16:05Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2018-12-19T16:16:05Z"}, "message": "c/c++, asm: Use nicer error for const and restrict\n\nNot all qualifiers are asm qualifiers.  We can talk about that in a\nnicer way than just giving a generic parser error.\n\nThis also adds two testcases for C++, that previously were for C only.\n\n\nc/\n\t* c-parser.c (c_parser_asm_statement) <RID_CONST, RID_RESTRICT>: Give\n\ta more specific error message (instead of just falling through).\n\ncp/\n\t* parser.c (cp_parser_asm_definition) <RID_CONST, RID_RESTRICT>: Give\n\ta more specific error message (instead of just falling through).\n\ntestsuite/\n\t* g++.dg/asm-qual-1.C: New testcase.\n\t* g++.dg/asm-qual-2.C: New testcase.\n\t* gcc.dg/asm-qual-1.c: Update.\n\nFrom-SVN: r267279", "tree": {"sha": "4074dd0bc5bdd8115294b76ba0ef8f2f85e76a2a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4074dd0bc5bdd8115294b76ba0ef8f2f85e76a2a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1edf88662b51da93460b6139344edb5f9b943b0e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1edf88662b51da93460b6139344edb5f9b943b0e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1edf88662b51da93460b6139344edb5f9b943b0e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1edf88662b51da93460b6139344edb5f9b943b0e/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "db4fd626ee2bb431adadddf5eca5fba104cea5ca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db4fd626ee2bb431adadddf5eca5fba104cea5ca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/db4fd626ee2bb431adadddf5eca5fba104cea5ca"}], "stats": {"total": 93, "additions": 89, "deletions": 4}, "files": [{"sha": "6e12dda23317582a5fa335b7da356b5353985532", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1edf88662b51da93460b6139344edb5f9b943b0e/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1edf88662b51da93460b6139344edb5f9b943b0e/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=1edf88662b51da93460b6139344edb5f9b943b0e", "patch": "@@ -1,3 +1,8 @@\n+2018-12-19  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\t* c-parser.c (c_parser_asm_statement) <RID_CONST, RID_RESTRICT>: Give\n+\ta more specific error message (instead of just falling through).\n+\n 2018-12-19  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \t* c-parser.c (c_parser_asm_statement): Keep track of the location each"}, {"sha": "0def4976408f372b363e093bdad51c5d1f0dcf76", "filename": "gcc/c/c-parser.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1edf88662b51da93460b6139344edb5f9b943b0e/gcc%2Fc%2Fc-parser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1edf88662b51da93460b6139344edb5f9b943b0e/gcc%2Fc%2Fc-parser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-parser.c?ref=1edf88662b51da93460b6139344edb5f9b943b0e", "patch": "@@ -6411,6 +6411,12 @@ c_parser_asm_statement (c_parser *parser)\n \t  c_parser_consume_token (parser);\n \t  continue;\n \n+\tcase RID_CONST:\n+\tcase RID_RESTRICT:\n+\t  error_at (loc, \"%qE is not an asm qualifier\", token->value);\n+\t  c_parser_consume_token (parser);\n+\t  continue;\n+\n \tdefault:\n \t  break;\n \t}"}, {"sha": "4f84686e411a784bf886b36e703e9b713e6c5459", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1edf88662b51da93460b6139344edb5f9b943b0e/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1edf88662b51da93460b6139344edb5f9b943b0e/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=1edf88662b51da93460b6139344edb5f9b943b0e", "patch": "@@ -1,3 +1,8 @@\n+2018-12-19  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\t* parser.c (cp_parser_asm_definition) <RID_CONST, RID_RESTRICT>: Give\n+\ta more specific error message (instead of just falling through).\n+\n 2018-12-19  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \t* parser.c (cp_parser_asm_definition): Rewrite the loop to work without"}, {"sha": "c4b969c84b9f3774dd03e353869d194ea0601144", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1edf88662b51da93460b6139344edb5f9b943b0e/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1edf88662b51da93460b6139344edb5f9b943b0e/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=1edf88662b51da93460b6139344edb5f9b943b0e", "patch": "@@ -19743,6 +19743,12 @@ cp_parser_asm_definition (cp_parser* parser)\n \t    cp_lexer_consume_token (parser->lexer);\n \t    continue;\n \n+\t  case RID_CONST:\n+\t  case RID_RESTRICT:\n+\t    error_at (loc, \"%qT is not an asm qualifier\", token->u.value);\n+\t    cp_lexer_consume_token (parser->lexer);\n+\t    continue;\n+\n \t  default:\n \t    break;\n \t  }"}, {"sha": "d5b99730899c60d6741ed8a9acef54c9276415a1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1edf88662b51da93460b6139344edb5f9b943b0e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1edf88662b51da93460b6139344edb5f9b943b0e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1edf88662b51da93460b6139344edb5f9b943b0e", "patch": "@@ -1,3 +1,9 @@\n+2018-12-19  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\t* g++.dg/asm-qual-1.C: New testcase.\n+\t* g++.dg/asm-qual-2.C: New testcase.\n+\t* gcc.dg/asm-qual-1.c: Update.\n+\n 2018-12-19  David Malcolm  <dmalcolm@redhat.com>\n \n \tPR c++/88375"}, {"sha": "3fba592ee991f4a571bb427ce8a9839821f18671", "filename": "gcc/testsuite/g++.dg/asm-qual-1.C", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1edf88662b51da93460b6139344edb5f9b943b0e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fasm-qual-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1edf88662b51da93460b6139344edb5f9b943b0e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fasm-qual-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fasm-qual-1.C?ref=1edf88662b51da93460b6139344edb5f9b943b0e", "patch": "@@ -0,0 +1,13 @@\n+// Test that qualifiers other than volatile are disallowed on asm.\n+// { dg-do compile }\n+// { dg-options \"-std=gnu++98\" }\n+\n+void\n+f ()\n+{\n+  asm volatile (\"\");\n+\n+  asm const (\"\"); // { dg-error {'const' is not an asm qualifier} }\n+\n+  asm __restrict (\"\"); // { dg-error {'__restrict' is not an asm qualifier} }\n+}"}, {"sha": "52968bdfd17e9321ea2b582135ee26e5c6301d37", "filename": "gcc/testsuite/g++.dg/asm-qual-2.C", "status": "added", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1edf88662b51da93460b6139344edb5f9b943b0e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fasm-qual-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1edf88662b51da93460b6139344edb5f9b943b0e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fasm-qual-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fasm-qual-2.C?ref=1edf88662b51da93460b6139344edb5f9b943b0e", "patch": "@@ -0,0 +1,46 @@\n+// Test that qualifiers on asm are allowed in any order.\n+// { dg-do compile }\n+// { dg-options \"-std=c++98\" }\n+\n+void\n+f ()\n+{\n+  asm volatile goto (\"\" :::: lab);\n+  asm volatile inline (\"\" :::);\n+  asm inline volatile (\"\" :::);\n+  asm inline goto (\"\" :::: lab);\n+  asm goto volatile (\"\" :::: lab);\n+  asm goto inline (\"\" :::: lab);\n+\n+  asm volatile inline goto (\"\" :::: lab);\n+  asm volatile goto inline (\"\" :::: lab);\n+  asm inline volatile goto (\"\" :::: lab);\n+  asm inline goto volatile (\"\" :::: lab);\n+  asm goto volatile inline (\"\" :::: lab);\n+  asm goto inline volatile (\"\" :::: lab);\n+\n+  /* Duplicates are not allowed.  */\n+  asm goto volatile volatile (\"\" :::: lab);  /* { dg-error \"\" } */\n+  asm volatile goto volatile (\"\" :::: lab);  /* { dg-error \"\" } */\n+  asm volatile volatile goto (\"\" :::: lab);  /* { dg-error \"\" } */\n+  asm goto goto volatile (\"\" :::: lab);  /* { dg-error \"\" } */\n+  asm goto volatile goto (\"\" :::: lab);  /* { dg-error \"\" } */\n+  asm volatile goto goto (\"\" :::: lab);  /* { dg-error \"\" } */\n+\n+  asm inline volatile volatile (\"\" :::);  /* { dg-error \"\" } */\n+  asm volatile inline volatile (\"\" :::);  /* { dg-error \"\" } */\n+  asm volatile volatile inline (\"\" :::);  /* { dg-error \"\" } */\n+  asm inline inline volatile (\"\" :::);  /* { dg-error \"\" } */\n+  asm inline volatile inline (\"\" :::);  /* { dg-error \"\" } */\n+  asm volatile inline inline (\"\" :::);  /* { dg-error \"\" } */\n+\n+  asm goto inline inline (\"\" :::: lab);  /* { dg-error \"\" } */\n+  asm inline goto inline (\"\" :::: lab);  /* { dg-error \"\" } */\n+  asm inline inline goto (\"\" :::: lab);  /* { dg-error \"\" } */\n+  asm goto goto inline (\"\" :::: lab);  /* { dg-error \"\" } */\n+  asm goto inline goto (\"\" :::: lab);  /* { dg-error \"\" } */\n+  asm inline goto goto (\"\" :::: lab);  /* { dg-error \"\" } */\n+\n+lab:\n+  ;\n+}"}, {"sha": "eff6b45d2170e643b31f7f6504f35ece0fffa620", "filename": "gcc/testsuite/gcc.dg/asm-qual-1.c", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1edf88662b51da93460b6139344edb5f9b943b0e/gcc%2Ftestsuite%2Fgcc.dg%2Fasm-qual-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1edf88662b51da93460b6139344edb5f9b943b0e/gcc%2Ftestsuite%2Fgcc.dg%2Fasm-qual-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fasm-qual-1.c?ref=1edf88662b51da93460b6139344edb5f9b943b0e", "patch": "@@ -8,9 +8,7 @@ f (void)\n {\n   asm volatile (\"\");\n \n-  asm const (\"\"); /* { dg-error {expected '\\(' before 'const'} } */\n-  /* { dg-error {expected identifier} {} {target *-*-*} .-1 } */\n+  asm const (\"\"); /* { dg-error {'const' is not an asm qualifier} } */\n \n-  asm restrict (\"\"); /* { dg-error {expected '\\(' before 'restrict'} } */\n-  /* { dg-error {expected identifier} {} {target *-*-*} .-1 } */\n+  asm restrict (\"\"); /* { dg-error {'restrict' is not an asm qualifier} } */\n }"}]}