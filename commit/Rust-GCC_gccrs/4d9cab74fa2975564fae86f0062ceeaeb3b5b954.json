{"sha": "4d9cab74fa2975564fae86f0062ceeaeb3b5b954", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGQ5Y2FiNzRmYTI5NzU1NjRmYWU4NmYwMDYyY2VlYWViM2I1Yjk1NA==", "commit": {"author": {"name": "Alexandre Oliva", "email": "aoliva@redhat.com", "date": "2006-01-13T18:28:57Z"}, "committer": {"name": "Alexandre Oliva", "email": "aoliva@gcc.gnu.org", "date": "2006-01-13T18:28:57Z"}, "message": "sse.md (*vec_extractv2di_1_sse2): Reorder alternatives to match style of other entries.\n\n* config/i386/sse.md (*vec_extractv2di_1_sse2): Reorder\nalternatives to match style of other entries.\n(*vec_extractv2di_1_sse): Likewise.  Fix mode attr.\n\nFrom-SVN: r109671", "tree": {"sha": "aaa69d0ff5acfdfcfdcef553359ff04dd2572ff0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aaa69d0ff5acfdfcfdcef553359ff04dd2572ff0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4d9cab74fa2975564fae86f0062ceeaeb3b5b954", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d9cab74fa2975564fae86f0062ceeaeb3b5b954", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4d9cab74fa2975564fae86f0062ceeaeb3b5b954", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d9cab74fa2975564fae86f0062ceeaeb3b5b954/comments", "author": null, "committer": null, "parents": [{"sha": "05b1e169b99ff16d8efc0ba5148782b7cb7ffde7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/05b1e169b99ff16d8efc0ba5148782b7cb7ffde7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/05b1e169b99ff16d8efc0ba5148782b7cb7ffde7"}], "stats": {"total": 20, "additions": 13, "deletions": 7}, "files": [{"sha": "c39dba5164380739f23b0e1cdd706e1dbb3aa825", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d9cab74fa2975564fae86f0062ceeaeb3b5b954/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d9cab74fa2975564fae86f0062ceeaeb3b5b954/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4d9cab74fa2975564fae86f0062ceeaeb3b5b954", "patch": "@@ -1,3 +1,9 @@\n+2006-01-13  Alexandre Oliva  <aoliva@redhat.com>\n+\n+\t* config/i386/sse.md (*vec_extractv2di_1_sse2): Reorder\n+\talternatives to match style of other entries.\n+\t(*vec_extractv2di_1_sse): Likewise.  Fix mode attr.\n+\n 2006-01-13  Daniel Berlin  <dberlin@dberlin.org>\n \n \tPR tree-optimization/25771"}, {"sha": "bd943f7665d0bbb16f89e159a9a63c4c24423ea5", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d9cab74fa2975564fae86f0062ceeaeb3b5b954/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d9cab74fa2975564fae86f0062ceeaeb3b5b954/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=4d9cab74fa2975564fae86f0062ceeaeb3b5b954", "patch": "@@ -3465,29 +3465,29 @@\n })\n \n (define_insn \"*vec_extractv2di_1_sse2\"\n-  [(set (match_operand:DI 0 \"nonimmediate_operand\" \"=x,m,x\")\n+  [(set (match_operand:DI 0 \"nonimmediate_operand\" \"=m,x,x\")\n \t(vec_select:DI\n-\t  (match_operand:V2DI 1 \"nonimmediate_operand\" \"0,x,o\")\n+\t  (match_operand:V2DI 1 \"nonimmediate_operand\" \"x,0,o\")\n \t  (parallel [(const_int 1)])))]\n   \"TARGET_SSE2 && !(MEM_P (operands[0]) && MEM_P (operands[1]))\"\n   \"@\n-   psrldq\\t{$4, %0|%0, 4}\n    movhps\\t{%1, %0|%0, %1}\n+   psrldq\\t{$4, %0|%0, 4}\n    movq\\t{%H1, %0|%0, %H1}\"\n-  [(set_attr \"type\" \"sseishft,ssemov,ssemov\")\n-   (set_attr \"mode\" \"TI,V4SF,TI\")])\n+  [(set_attr \"type\" \"ssemov,sseishft,ssemov\")\n+   (set_attr \"mode\" \"V2SF,TI,TI\")])\n \n ;; Not sure this is ever used, but it doesn't hurt to have it. -aoliva\n (define_insn \"*vec_extractv2di_1_sse\"\n-  [(set (match_operand:DI 0 \"nonimmediate_operand\" \"=x,m,x\")\n+  [(set (match_operand:DI 0 \"nonimmediate_operand\" \"=m,x,x\")\n \t(vec_select:DI\n \t  (match_operand:V2DI 1 \"nonimmediate_operand\" \"x,x,o\")\n \t  (parallel [(const_int 1)])))]\n   \"!TARGET_SSE2 && TARGET_SSE\n    && !(MEM_P (operands[0]) && MEM_P (operands[1]))\"\n   \"@\n-   movhlps\\t{%1, %0|%0, %1}\n    movhps\\t{%1, %0|%0, %1}\n+   movhlps\\t{%1, %0|%0, %1}\n    movlps\\t{%H1, %0|%0, %H1}\"\n   [(set_attr \"type\" \"ssemov\")\n    (set_attr \"mode\" \"V2SF,V4SF,V2SF\")])"}]}