{"sha": "872dae48e2bb95295eb596e55cabe0eab8792253", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODcyZGFlNDhlMmJiOTUyOTVlYjU5NmU1NWNhYmUwZWFiODc5MjI1Mw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-10-16T10:51:32Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-10-16T10:51:32Z"}, "message": "[multiple changes]\n\n2015-10-16  Bob Duff  <duff@adacore.com>\n\n\t* debug.adb: Document -gnatdQ switch.\n\n2015-10-16  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch12.adb (Analyze_Formal_Subprogram): Implement rule that\n\ta formal abstract subprogram cannot have a null default: RM 12.6\n\t(4 1.2).\n\nFrom-SVN: r228869", "tree": {"sha": "ed845681cc7d7b82e1510f24702f62019f97f45c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ed845681cc7d7b82e1510f24702f62019f97f45c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/872dae48e2bb95295eb596e55cabe0eab8792253", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/872dae48e2bb95295eb596e55cabe0eab8792253", "html_url": "https://github.com/Rust-GCC/gccrs/commit/872dae48e2bb95295eb596e55cabe0eab8792253", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/872dae48e2bb95295eb596e55cabe0eab8792253/comments", "author": null, "committer": null, "parents": [{"sha": "1bc619ef941fca4db7469d425bb09b4abcf1f3b4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1bc619ef941fca4db7469d425bb09b4abcf1f3b4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1bc619ef941fca4db7469d425bb09b4abcf1f3b4"}], "stats": {"total": 36, "additions": 31, "deletions": 5}, "files": [{"sha": "302c4e7657ed9ab133fa89e9d78526131a2af403", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/872dae48e2bb95295eb596e55cabe0eab8792253/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/872dae48e2bb95295eb596e55cabe0eab8792253/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=872dae48e2bb95295eb596e55cabe0eab8792253", "patch": "@@ -1,3 +1,13 @@\n+2015-10-16  Bob Duff  <duff@adacore.com>\n+\n+\t* debug.adb: Document -gnatdQ switch.\n+\n+2015-10-16  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch12.adb (Analyze_Formal_Subprogram): Implement rule that\n+\ta formal abstract subprogram cannot have a null default: RM 12.6\n+\t(4 1.2).\n+\n 2015-10-16  Bob Duff  <duff@adacore.com>\n \n \t* sem_util.ads, sinput.ads, bcheck.adb: Minor comment fixes."}, {"sha": "7f70bfa0217a71b7be237a956bb8ef70401ab62b", "filename": "gcc/ada/debug.adb", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/872dae48e2bb95295eb596e55cabe0eab8792253/gcc%2Fada%2Fdebug.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/872dae48e2bb95295eb596e55cabe0eab8792253/gcc%2Fada%2Fdebug.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdebug.adb?ref=872dae48e2bb95295eb596e55cabe0eab8792253", "patch": "@@ -80,7 +80,7 @@ package body Debug is\n    --  dN   No file name information in exception messages\n    --  dO   Output immediate error messages\n    --  dP   Do not check for controlled objects in preelaborable packages\n-   --  dQ\n+   --  dQ   Use old secondary stack method\n    --  dR   Bypass check for correct version of s-rpc\n    --  dS   Never convert numbers to machine numbers in Sem_Eval\n    --  dT   Convert to machine numbers only for constant declarations\n@@ -430,6 +430,11 @@ package body Debug is\n    --       in preelaborable packages, but this restriction is a huge pain,\n    --       especially in the predefined library units.\n \n+   --  dQ   Use old method for determining what goes on the secondary stack.\n+   --       This disables some newer optimizations. The intent is to use this\n+   --       temporarily to measure before/after efficiency. ???Remove this\n+   --       when we are done (see Sem_Util.Requires_Transient_Scope).\n+\n    --  dR   Bypass the check for a proper version of s-rpc being present\n    --       to use the -gnatz? switch. This allows debugging of the use\n    --       of stubs generation without needing to have GLADE (or some"}, {"sha": "481762534bfe70dd383f317791f5fb0e647b872d", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 15, "deletions": 4, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/872dae48e2bb95295eb596e55cabe0eab8792253/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/872dae48e2bb95295eb596e55cabe0eab8792253/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=872dae48e2bb95295eb596e55cabe0eab8792253", "patch": "@@ -1075,7 +1075,7 @@ package body Sem_Ch12 is\n       --  package. As usual an other association must be last in the list.\n \n       procedure Check_Overloaded_Formal_Subprogram (Formal : Entity_Id);\n-      --  Apply RM 12.3 (9): if a formal subprogram is overloaded, the instance\n+      --  Apply RM 12.3(9): if a formal subprogram is overloaded, the instance\n       --  cannot have a named association for it. AI05-0025 extends this rule\n       --  to formals of formal packages by AI05-0025, and it also applies to\n       --  box-initialized formals.\n@@ -2820,8 +2820,19 @@ package body Sem_Ch12 is\n \n       if Nkind (N) = N_Formal_Abstract_Subprogram_Declaration then\n          Set_Is_Abstract_Subprogram (Nam);\n+\n          Set_Is_Dispatching_Operation (Nam);\n \n+         --  A formal abstract procedure cannot have a null default\n+         --  (RM 12.6(4 1.2)).\n+\n+         if Nkind (Spec) = N_Procedure_Specification\n+           and then Null_Present (Spec)\n+         then\n+            Error_Msg_N\n+              (\"a formal abstract subprogram cannot default to null\", Spec);\n+         end if;\n+\n          declare\n             Ctrl_Type : constant Entity_Id := Find_Dispatching_Type (Nam);\n          begin\n@@ -10737,7 +10748,7 @@ package body Sem_Ch12 is\n       --  Re-establish the state of information on which checks are suppressed.\n       --  This information was set in Body_Info at the point of instantiation,\n       --  and now we restore it so that the instance is compiled using the\n-      --  check status at the instantiation (RM 11.5 (7.2/2), AI95-00224-01).\n+      --  check status at the instantiation (RM 11.5(7.2/2), AI95-00224-01).\n \n       Local_Suppress_Stack_Top := Body_Info.Local_Suppress_Stack_Top;\n       Scope_Suppress           := Body_Info.Scope_Suppress;\n@@ -11052,7 +11063,7 @@ package body Sem_Ch12 is\n       --  Re-establish the state of information on which checks are suppressed.\n       --  This information was set in Body_Info at the point of instantiation,\n       --  and now we restore it so that the instance is compiled using the\n-      --  check status at the instantiation (RM 11.5 (7.2/2), AI95-00224-01).\n+      --  check status at the instantiation (RM 11.5(7.2/2), AI95-00224-01).\n \n       Local_Suppress_Stack_Top := Body_Info.Local_Suppress_Stack_Top;\n       Scope_Suppress           := Body_Info.Scope_Suppress;\n@@ -11970,7 +11981,7 @@ package body Sem_Ch12 is\n          --  If the formal and actual types are abstract, check that there\n          --  are no abstract primitives of the actual type that correspond to\n          --  nonabstract primitives of the formal type (second sentence of\n-         --  RM95-3.9.3(9)).\n+         --  RM95 3.9.3(9)).\n \n          if Is_Abstract_Type (A_Gen_T) and then Is_Abstract_Type (Act_T) then\n             Check_Abstract_Primitives : declare"}]}