{"sha": "945648261c44e52fb0a02ee9233382248edf9896", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTQ1NjQ4MjYxYzQ0ZTUyZmIwYTAyZWU5MjMzMzgyMjQ4ZWRmOTg5Ng==", "commit": {"author": {"name": "Kai Tietz", "email": "kai.tietz@onevision.com", "date": "2008-10-13T10:32:07Z"}, "committer": {"name": "Kai Tietz", "email": "ktietz@gcc.gnu.org", "date": "2008-10-13T10:32:07Z"}, "message": "Fix PR/25502\n\n2008-10-13  Kai Tietz  <kai.tietz@onevision.com>\n\n\tFix PR/25502\n\t* c-format.c (convert_format_name_to_system_name): Use\n\tTARGET_OVERRIDES_FORMAT_INIT.\n\t* config.gcc (extra_options): Add for mingw targets mingw.opt.\n\t* config/i386/mingw.opt: New.\n\t* config/i386/mingw32.h (TARGET_OVERRIDES_FORMAT_INIT): New.\n\t* config/i386/msformat-c.c (TARGET_OVERRIDES_FORMAT_INIT): New.\n\t(ms_printf_length_specs): Removed const specifier.\n\t* doc/tm.texi (TARGET_OVERRIDES_FORMAT_INIT): New.\n\t* doc/invoke.texi (Wno-pedantic-ms-format): New.\n\t* testsuite/gcc.dg/format/ms-format1.c: New.\n\nFrom-SVN: r141087", "tree": {"sha": "6b5e20bdfb092f077651b8c498e3001d78912b1e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6b5e20bdfb092f077651b8c498e3001d78912b1e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/945648261c44e52fb0a02ee9233382248edf9896", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/945648261c44e52fb0a02ee9233382248edf9896", "html_url": "https://github.com/Rust-GCC/gccrs/commit/945648261c44e52fb0a02ee9233382248edf9896", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/945648261c44e52fb0a02ee9233382248edf9896/comments", "author": null, "committer": null, "parents": [{"sha": "36c713e04cb642a9bfbf4ddbad9ef7024dd6f05a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/36c713e04cb642a9bfbf4ddbad9ef7024dd6f05a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/36c713e04cb642a9bfbf4ddbad9ef7024dd6f05a"}], "stats": {"total": 110, "additions": 107, "deletions": 3}, "files": [{"sha": "ff7533ade0052470c3c0269f5b165a6da89b457e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/945648261c44e52fb0a02ee9233382248edf9896/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/945648261c44e52fb0a02ee9233382248edf9896/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=945648261c44e52fb0a02ee9233382248edf9896", "patch": "@@ -1,3 +1,16 @@\n+2008-10-13  Kai Tietz  <kai.tietz@onevision.com>\n+\n+\tFix PR/25502\n+\t* c-format.c (convert_format_name_to_system_name): Use\n+\tTARGET_OVERRIDES_FORMAT_INIT.\n+\t* config.gcc (extra_options): Add for mingw targets mingw.opt.\n+\t* config/i386/mingw.opt: New.\n+\t* config/i386/mingw32.h (TARGET_OVERRIDES_FORMAT_INIT): New.\n+\t* config/i386/msformat-c.c (TARGET_OVERRIDES_FORMAT_INIT): New.\n+\t(ms_printf_length_specs): Removed const specifier.\n+\t* doc/tm.texi (TARGET_OVERRIDES_FORMAT_INIT): New.\n+\t* doc/invoke.texi (Wno-pedantic-ms-format): New.\n+\n 2008-10-13  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* builtins.c: Remove MPFR_VERSION_NUM(2,3,0) conditionals."}, {"sha": "2f1370e44fe79723afad9e0e76c65bc762a164c5", "filename": "gcc/c-format.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/945648261c44e52fb0a02ee9233382248edf9896/gcc%2Fc-format.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/945648261c44e52fb0a02ee9233382248edf9896/gcc%2Fc-format.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-format.c?ref=945648261c44e52fb0a02ee9233382248edf9896", "patch": "@@ -2714,6 +2714,9 @@ extern const format_kind_info TARGET_FORMAT_TYPES[];\n #ifdef TARGET_OVERRIDES_FORMAT_ATTRIBUTES\n extern const target_ovr_attr TARGET_OVERRIDES_FORMAT_ATTRIBUTES[];\n #endif\n+#ifdef TARGET_OVERRIDES_FORMAT_INIT\n+  extern void TARGET_OVERRIDES_FORMAT_INIT (void);\n+#endif\n \n /* Attributes such as \"printf\" are equivalent to those such as\n    \"gnu_printf\" unless this is overridden by a target.  */\n@@ -2738,6 +2741,9 @@ convert_format_name_to_system_name (const char *attr_name)\n   if (attr_name == NULL || *attr_name == 0\n       || strncmp (attr_name, \"gcc_\", 4) == 0)\n     return attr_name;\n+#ifdef TARGET_OVERRIDES_FORMAT_INIT\n+  TARGET_OVERRIDES_FORMAT_INIT ();\n+#endif\n \n #ifdef TARGET_OVERRIDES_FORMAT_ATTRIBUTES\n   /* Check if format attribute is overridden by target.  */"}, {"sha": "c10e7f9fdacf00226eda946967872c2768f11294", "filename": "gcc/config.gcc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/945648261c44e52fb0a02ee9233382248edf9896/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/945648261c44e52fb0a02ee9233382248edf9896/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=945648261c44e52fb0a02ee9233382248edf9896", "patch": "@@ -1270,7 +1270,7 @@ i[34567]86-*-mingw* | x86_64-*-mingw*)\n \txm_file=i386/xm-mingw32.h\n \ttmake_file=\"${tmake_file} i386/t-cygming i386/t-mingw32\"\n \ttarget_gtfiles=\"\\$(srcdir)/config/i386/winnt.c\"\n-\textra_options=\"${extra_options} i386/cygming.opt\"\n+\textra_options=\"${extra_options} i386/cygming.opt i386/mingw.opt\"\n \textra_objs=\"winnt.o winnt-stubs.o\"\n \tc_target_objs=\"${c_target_objs} msformat-c.o\"\n \tcxx_target_objs=\"${cxx_target_objs} winnt-cxx.o msformat-c.o\""}, {"sha": "6be904e968a21f5a123fb0e8cd1b65e13e258311", "filename": "gcc/config/i386/mingw.opt", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/945648261c44e52fb0a02ee9233382248edf9896/gcc%2Fconfig%2Fi386%2Fmingw.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/945648261c44e52fb0a02ee9233382248edf9896/gcc%2Fconfig%2Fi386%2Fmingw.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fmingw.opt?ref=945648261c44e52fb0a02ee9233382248edf9896", "patch": "@@ -0,0 +1,23 @@\n+; MinGW-specific options.\n+\n+; Copyright (C) 2008 Free Software Foundation, Inc.\n+;\n+; This file is part of GCC.\n+;\n+; GCC is free software; you can redistribute it and/or modify it under\n+; the terms of the GNU General Public License as published by the Free\n+; Software Foundation; either version 3, or (at your option) any later\n+; version.\n+;\n+; GCC is distributed in the hope that it will be useful, but WITHOUT ANY\n+; WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+; FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+; for more details.\n+;\n+; You should have received a copy of the GNU General Public License\n+; along with GCC; see the file COPYING3.  If not see\n+; <http://www.gnu.org/licenses/>.\n+\n+Wpedantic-ms-format\n+C ObjC C++ ObjC++ Var(warn_pedantic_ms_format) Init(1) Warning\n+Warn about none ISO msvcrt scanf/printf width extensions"}, {"sha": "25266653042de7f04530b2a93e8ee8d123d478a6", "filename": "gcc/config/i386/mingw32.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/945648261c44e52fb0a02ee9233382248edf9896/gcc%2Fconfig%2Fi386%2Fmingw32.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/945648261c44e52fb0a02ee9233382248edf9896/gcc%2Fconfig%2Fi386%2Fmingw32.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fmingw32.h?ref=945648261c44e52fb0a02ee9233382248edf9896", "patch": "@@ -169,6 +169,10 @@ do {\t\t\t\t\t\t         \\\n #undef TARGET_OVERRIDES_FORMAT_ATTRIBUTES_COUNT\n #define TARGET_OVERRIDES_FORMAT_ATTRIBUTES_COUNT 3\n \n+/* Custom initialization for warning -Wpedantic-ms-format for c-format.  */\n+#undef TARGET_OVERRIDES_FORMAT_INIT\n+#define TARGET_OVERRIDES_FORMAT_INIT msformat_init\n+\n /* MS specific format attributes for ms_printf, ms_scanf, ms_strftime.  */\n #undef TARGET_FORMAT_TYPES\n #define TARGET_FORMAT_TYPES mingw_format_attributes"}, {"sha": "44e080d45573d7668a9ab8d9cc6c3a871d45ddfe", "filename": "gcc/config/i386/msformat-c.c", "status": "modified", "additions": 23, "deletions": 1, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/945648261c44e52fb0a02ee9233382248edf9896/gcc%2Fconfig%2Fi386%2Fmsformat-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/945648261c44e52fb0a02ee9233382248edf9896/gcc%2Fconfig%2Fi386%2Fmsformat-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fmsformat-c.c?ref=945648261c44e52fb0a02ee9233382248edf9896", "patch": "@@ -34,7 +34,7 @@ along with GCC; see the file COPYING3.  If not see\n \n /* Mingw specific format attributes ms_printf, ms_scanf, and ms_strftime.  */\n \n-static const format_length_info ms_printf_length_specs[] =\n+static format_length_info ms_printf_length_specs[] =\n {\n   { \"h\", FMT_LEN_h, STD_C89, NULL, 0, 0 },\n   { \"l\", FMT_LEN_l, STD_C89, NULL, 0, 0 },\n@@ -173,3 +173,25 @@ const target_ovr_attr mingw_format_attribute_overrides[4] =\n   { \"ms_scanf\", \"scanf\" },\n   { \"ms_strftime\", \"strftime\" }\n };\n+\n+/* Setup for option Wpedantic-ms-format.  */\n+\n+#ifdef TARGET_OVERRIDES_FORMAT_INIT\n+\n+/* Make sure TARGET_OVERRIDES_FORMAT_INIT is prototyped.  */\n+extern void TARGET_OVERRIDES_FORMAT_INIT (void);\n+\n+/* Helper.  */\n+#define C89_OR_EXT (warn_pedantic_ms_format ? STD_EXT : STD_C89)\n+\n+void\n+TARGET_OVERRIDES_FORMAT_INIT (void)\n+{\n+  ms_printf_length_specs[2].std = C89_OR_EXT; /* I32 */\n+  ms_printf_length_specs[3].std = C89_OR_EXT; /* I64 */\n+  ms_printf_length_specs[4].std = C89_OR_EXT; /* I */\n+}\n+\n+#undef C89_OR_EXT\n+\n+#endif"}, {"sha": "d17ef600918117b6fdb28dc0906b2b275ed153b2", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/945648261c44e52fb0a02ee9233382248edf9896/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/945648261c44e52fb0a02ee9233382248edf9896/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=945648261c44e52fb0a02ee9233382248edf9896", "patch": "@@ -250,7 +250,8 @@ Objective-C and Objective-C++ Dialects}.\n -Wmissing-noreturn  -Wno-mudflap @gol\n -Wno-multichar  -Wnonnull  -Wno-overflow @gol\n -Woverlength-strings  -Wpacked  -Wpadded @gol\n--Wparentheses  -Wpointer-arith  -Wno-pointer-to-int-cast @gol\n+-Wparentheses  -Wpedantic-ms-format -Wno-pedantic-ms-format @gol\n+-Wpointer-arith  -Wno-pointer-to-int-cast @gol\n -Wredundant-decls @gol\n -Wreturn-type  -Wsequence-point  -Wshadow @gol\n -Wsign-compare  -Wsign-conversion  -Wstack-protector @gol\n@@ -3572,6 +3573,14 @@ assume anything on the bounds of the loop indices.  With\n @option{-funsafe-loop-optimizations} warn if the compiler made\n such assumptions.\n \n+@item -Wno-pedantic-ms-format\n+@opindex Wno-pedantic-ms-format\n+@opindex Wpedantic-ms-format\n+Disables the warnings about non-ISO @code{printf} / @code{scanf} format\n+width specifiers @code{I32}, @code{I64}, and @code{I} used on Windows targets\n+depending on the MS runtime, when you are using the options @option{-Wformat}\n+and @option{-pedantic} without gnu-extensions.\n+\n @item -Wpointer-arith\n @opindex Wpointer-arith\n @opindex Wno-pointer-arith"}, {"sha": "28f3d7ffa7513fe0576a6919004d5193bdaaa41c", "filename": "gcc/doc/tm.texi", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/945648261c44e52fb0a02ee9233382248edf9896/gcc%2Fdoc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/945648261c44e52fb0a02ee9233382248edf9896/gcc%2Fdoc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi?ref=945648261c44e52fb0a02ee9233382248edf9896", "patch": "@@ -10539,6 +10539,12 @@ If defined, this macro specifies the number of entries in\n @code{TARGET_OVERRIDES_FORMAT_ATTRIBUTES}.\n @end defmac\n \n+@defmac TARGET_OVERRIDES_FORMAT_INIT\n+If defined, this macro specifies the optional initialization\n+routine for target specific customizations of the system printf\n+and scanf formatter settings.\n+@end defmac\n+\n @deftypefn {Target Hook} bool TARGET_RELAXED_ORDERING\n If set to @code{true}, means that the target's memory model does not\n guarantee that loads which do not depend on one another will access"}, {"sha": "592dc585d5cba450e5461dbb800f6aedcb9a78a9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/945648261c44e52fb0a02ee9233382248edf9896/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/945648261c44e52fb0a02ee9233382248edf9896/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=945648261c44e52fb0a02ee9233382248edf9896", "patch": "@@ -1,3 +1,7 @@\n+2008-10-13  Kai Tietz  <kai.tietz@onevision.com>\n+\n+\t* testsuite/gcc.dg/format/ms-format1.c: New.\n+\n 2008-10-12  Daniel Kraft  <d@domob.eu>\n \n \tPR fortran/37688"}, {"sha": "81c21d911e5844a8e17ae491be31a1b154e1069f", "filename": "gcc/testsuite/gcc.dg/format/ms-format1.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/945648261c44e52fb0a02ee9233382248edf9896/gcc%2Ftestsuite%2Fgcc.dg%2Fformat%2Fms-format1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/945648261c44e52fb0a02ee9233382248edf9896/gcc%2Ftestsuite%2Fgcc.dg%2Fformat%2Fms-format1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fformat%2Fms-format1.c?ref=945648261c44e52fb0a02ee9233382248edf9896", "patch": "@@ -0,0 +1,17 @@\n+/* Test for printf formats.  Formats using extensions to the standard\n+   should be rejected in strict pedantic mode. But allowed by -Wno-pedantic-ms-format.\n+*/\n+/* Origin: Kai Tietz <kai.tietz@onevision.com> */\n+/* { dg-do compile { target { *-*-mingw* } } } */\n+/* { dg-options \"-std=iso9899:1999 -pedantic -Wformat -Wno-pedantic-ms-format\" } */\n+\n+#define USE_SYSTEM_FORMATS\n+#include \"format.h\"\n+\n+void\n+foo (int i, long long ll, size_t z)\n+{\n+  printf (\"%I32d\", i);\n+  printf (\"%I64x\", ll);\n+  printf (\"%Ix\", z);\n+}"}]}