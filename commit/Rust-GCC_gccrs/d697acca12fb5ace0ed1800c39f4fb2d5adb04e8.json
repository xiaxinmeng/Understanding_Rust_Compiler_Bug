{"sha": "d697acca12fb5ace0ed1800c39f4fb2d5adb04e8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDY5N2FjY2ExMmZiNWFjZTBlZDE4MDBjMzlmNGZiMmQ1YWRiMDRlOA==", "commit": {"author": {"name": "Bernd Schmidt", "email": "bernds@redhat.com", "date": "2016-12-21T16:45:33Z"}, "committer": {"name": "Bernd Schmidt", "email": "bernds@gcc.gnu.org", "date": "2016-12-21T16:45:33Z"}, "message": "re PR target/71321 (x86: worse code for uint8_t % 10 and / 10)\n\n\n\tPR target/71321\n\t* config/i386/i386.md (lea<mode>_general_2b, lea<mode>_general_3b): New\n\tpatterns.\n\t* config/i386/predicates.md (const123_operand): New.\n\n\tPR target/71321\n\t* gcc.target/i386/pr71321.c: New test.\n\nFrom-SVN: r243861", "tree": {"sha": "9a979aab8d9f29d5f20951b0c4fd361694945f04", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9a979aab8d9f29d5f20951b0c4fd361694945f04"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d697acca12fb5ace0ed1800c39f4fb2d5adb04e8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d697acca12fb5ace0ed1800c39f4fb2d5adb04e8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d697acca12fb5ace0ed1800c39f4fb2d5adb04e8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d697acca12fb5ace0ed1800c39f4fb2d5adb04e8/comments", "author": null, "committer": null, "parents": [{"sha": "4e2044d68d06c85761edf7510e23ea06c9279fdb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e2044d68d06c85761edf7510e23ea06c9279fdb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4e2044d68d06c85761edf7510e23ea06c9279fdb"}], "stats": {"total": 83, "additions": 83, "deletions": 0}, "files": [{"sha": "9065731661dffba39a219e43b95a4a97fcae94fc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d697acca12fb5ace0ed1800c39f4fb2d5adb04e8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d697acca12fb5ace0ed1800c39f4fb2d5adb04e8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d697acca12fb5ace0ed1800c39f4fb2d5adb04e8", "patch": "@@ -1,3 +1,10 @@\n+2016-12-21  Bernd Schmidt  <bschmidt@redhat.com>\n+\n+\tPR target/71321\n+\t* config/i386/i386.md (lea<mode>_general_2b, lea<mode>_general_3b): New\n+\tpatterns.\n+\t* config/i386/predicates.md (const123_operand): New.\n+\n 2016-12-21  Jakub Jelinek  <jakub@redhat.com>\n \t    Martin Liska  <mliska@suse.cz>\n "}, {"sha": "f50dbab42e9eb463b8544b9c2c29fefb61c7ee27", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d697acca12fb5ace0ed1800c39f4fb2d5adb04e8/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d697acca12fb5ace0ed1800c39f4fb2d5adb04e8/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=d697acca12fb5ace0ed1800c39f4fb2d5adb04e8", "patch": "@@ -6263,6 +6263,27 @@\n   [(set_attr \"type\" \"lea\")\n    (set_attr \"mode\" \"SI\")])\n \n+(define_insn_and_split \"*lea<mode>_general_2b\"\n+  [(set (match_operand:SWI12 0 \"register_operand\" \"=r\")\n+\t(plus:SWI12\n+\t  (ashift:SWI12 (match_operand:SWI12 1 \"index_register_operand\" \"l\")\n+\t\t\t(match_operand 2 \"const123_operand\" \"n\"))\n+\t  (match_operand:SWI12 3 \"nonmemory_operand\" \"ri\")))]\n+  \"!TARGET_PARTIAL_REG_STALL || optimize_function_for_size_p (cfun)\"\n+  \"#\"\n+  \"&& reload_completed\"\n+  [(set (match_dup 0)\n+\t(plus:SI\n+\t  (ashift:SI (match_dup 1) (match_dup 2))\n+\t  (match_dup 3)))]\n+{\n+  operands[0] = gen_lowpart (SImode, operands[0]);\n+  operands[1] = gen_lowpart (SImode, operands[1]);\n+  operands[3] = gen_lowpart (SImode, operands[3]);\n+}\n+  [(set_attr \"type\" \"lea\")\n+   (set_attr \"mode\" \"SI\")])\n+\n (define_insn_and_split \"*lea<mode>_general_3\"\n   [(set (match_operand:SWI12 0 \"register_operand\" \"=r\")\n \t(plus:SWI12\n@@ -6289,6 +6310,32 @@\n   [(set_attr \"type\" \"lea\")\n    (set_attr \"mode\" \"SI\")])\n \n+(define_insn_and_split \"*lea<mode>_general_3b\"\n+  [(set (match_operand:SWI12 0 \"register_operand\" \"=r\")\n+\t(plus:SWI12\n+\t  (plus:SWI12\n+\t    (ashift:SWI12 (match_operand:SWI12 1 \"index_register_operand\" \"l\")\n+\t\t\t  (match_operand 2 \"const123_operand\" \"n\"))\n+\t    (match_operand:SWI12 3 \"register_operand\" \"r\"))\n+\t  (match_operand:SWI12 4 \"immediate_operand\" \"i\")))]\n+  \"!TARGET_PARTIAL_REG_STALL || optimize_function_for_size_p (cfun)\"\n+  \"#\"\n+  \"&& reload_completed\"\n+  [(set (match_dup 0)\n+\t(plus:SI\n+\t  (plus:SI\n+\t    (ashift:SI (match_dup 1) (match_dup 2))\n+\t    (match_dup 3))\n+\t  (match_dup 4)))]\n+{\n+  operands[0] = gen_lowpart (SImode, operands[0]);\n+  operands[1] = gen_lowpart (SImode, operands[1]);\n+  operands[3] = gen_lowpart (SImode, operands[3]);\n+  operands[4] = gen_lowpart (SImode, operands[4]);\n+}\n+  [(set_attr \"type\" \"lea\")\n+   (set_attr \"mode\" \"SI\")])\n+\n (define_insn_and_split \"*lea<mode>_general_4\"\n   [(set (match_operand:SWI12 0 \"register_operand\" \"=r\")\n \t(any_or:SWI12"}, {"sha": "eb985983ff6078a1862f9107d44149a489e91b1c", "filename": "gcc/config/i386/predicates.md", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d697acca12fb5ace0ed1800c39f4fb2d5adb04e8/gcc%2Fconfig%2Fi386%2Fpredicates.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d697acca12fb5ace0ed1800c39f4fb2d5adb04e8/gcc%2Fconfig%2Fi386%2Fpredicates.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fpredicates.md?ref=d697acca12fb5ace0ed1800c39f4fb2d5adb04e8", "patch": "@@ -765,6 +765,14 @@\n   return i == 2 || i == 4 || i == 8;\n })\n \n+;; Match 1, 2, or 3.  Used for lea shift amounts.\n+(define_predicate \"const123_operand\"\n+  (match_code \"const_int\")\n+{\n+  HOST_WIDE_INT i = INTVAL (op);\n+  return i == 1 || i == 2 || i == 3;\n+})\n+\n ;; Match 2, 3, 6, or 7\n (define_predicate \"const2367_operand\"\n   (match_code \"const_int\")"}, {"sha": "e6ee77023aab7f9ec54dcb35e4805500d88923a3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d697acca12fb5ace0ed1800c39f4fb2d5adb04e8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d697acca12fb5ace0ed1800c39f4fb2d5adb04e8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d697acca12fb5ace0ed1800c39f4fb2d5adb04e8", "patch": "@@ -1,3 +1,8 @@\n+2016-12-21  Bernd Schmidt  <bschmidt@redhat.com>\n+\n+\tPR target/71321\n+\t* gcc.target/i386/pr71321.c: New test.\n+\n 2016-12-21  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR fortran/78866"}, {"sha": "7b0009740ea6b6e3e0eb80fbfc92dc6b614a7518", "filename": "gcc/testsuite/gcc.target/i386/pr71321.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d697acca12fb5ace0ed1800c39f4fb2d5adb04e8/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr71321.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d697acca12fb5ace0ed1800c39f4fb2d5adb04e8/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr71321.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr71321.c?ref=d697acca12fb5ace0ed1800c39f4fb2d5adb04e8", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+\n+typedef unsigned char uint8_t;\n+typedef unsigned int uint32_t;\n+\n+unsigned cvt_to_2digit(uint8_t i, uint8_t base)\n+{\n+  return ((i / base) | (uint32_t)(i % base)<<8);\n+}\n+unsigned cvt_to_2digit_ascii(uint8_t i)\n+{\n+  return cvt_to_2digit(i, 10) + 0x0a3030;\n+}\n+/* { dg-final { scan-assembler-times \"lea.\\t\\\\(%\\[0-9a-z\\]+,%\\[0-9a-z\\]+,4\" 3 } } */\n+/* { dg-final { scan-assembler-times \"lea.\\t\\\\(%\\[0-9a-z\\]+,%\\[0-9a-z\\]+,8\" 1 } } */"}]}