{"sha": "23e748d7a6855ce132299cfef9692ee9c681de59", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjNlNzQ4ZDdhNjg1NWNlMTMyMjk5Y2ZlZjk2OTJlZTljNjgxZGU1OQ==", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-06-24T10:11:22Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-06-24T10:11:22Z"}, "message": "Merge #522\n\n522: Handle empty/unit tuple enum variants in the parser. r=philberty a=philberty\n\nA tuple enum variant can be empty, in which case it is a unit enum variant.\r\nHandle this in Parser<ManagedTokenSource>::parse_enum_item by creating\r\na empty tuple_field vector instead of calling parse_tuple_fields.\r\n\r\nAdd a testcase to show empty tuple enum variant types are now accepted.\r\nBut note some part of the test is commented out because using the enum\r\ntype isn't actually possible right now.\r\n\r\nAddresses #79 \n\nCo-authored-by: Mark Wielaard <mark@klomp.org>", "tree": {"sha": "de6518392abf835f285e7951c0656d7394333ba2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/de6518392abf835f285e7951c0656d7394333ba2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/23e748d7a6855ce132299cfef9692ee9c681de59", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJg1FpKCRBK7hj4Ov3rIwAAyMsIADipx6KGGEJeSGw3YHqr4A35\nmyTNYXDK//cGm43Ahs6v9mB+tu6Wu2Igyd9vA8ZkWPOFV6oXOkAhZKBEuotW2Om6\nbcaRWcZVrEoEVOsBvxlBQJP3y2PvRVEsPwE06iAb4qrmucHsxCdtbJlK+/OaKkDb\nh9WCqM7lEL28LowjuNme9w1fHb36gNu4sIGqCsJVQhEX+kTYfCCVVTPP4duXVYA1\nmUg2oCf0iTYHW/RrB+LRyIPSYYzuuRUaO7udlLzUT9+ULqpny5hAZT+0haCz0okJ\n0TUyobCJpUXJLAQPM0eMCzlYOZGJ2Dy8FBHX1infp8GBflVeAyLNQGSzHA1TFkc=\n=zYiw\n-----END PGP SIGNATURE-----\n", "payload": "tree de6518392abf835f285e7951c0656d7394333ba2\nparent 595ae7743c93bfda40a5914d15ae0db2e7e57301\nparent c41d5a20d34d11109142140a7a1db23d67ddf839\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1624529482 +0000\ncommitter GitHub <noreply@github.com> 1624529482 +0000\n\nMerge #522\n\n522: Handle empty/unit tuple enum variants in the parser. r=philberty a=philberty\n\nA tuple enum variant can be empty, in which case it is a unit enum variant.\r\nHandle this in Parser<ManagedTokenSource>::parse_enum_item by creating\r\na empty tuple_field vector instead of calling parse_tuple_fields.\r\n\r\nAdd a testcase to show empty tuple enum variant types are now accepted.\r\nBut note some part of the test is commented out because using the enum\r\ntype isn't actually possible right now.\r\n\r\nAddresses #79 \n\nCo-authored-by: Mark Wielaard <mark@klomp.org>\n"}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/23e748d7a6855ce132299cfef9692ee9c681de59", "html_url": "https://github.com/Rust-GCC/gccrs/commit/23e748d7a6855ce132299cfef9692ee9c681de59", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/23e748d7a6855ce132299cfef9692ee9c681de59/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "595ae7743c93bfda40a5914d15ae0db2e7e57301", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/595ae7743c93bfda40a5914d15ae0db2e7e57301", "html_url": "https://github.com/Rust-GCC/gccrs/commit/595ae7743c93bfda40a5914d15ae0db2e7e57301"}, {"sha": "c41d5a20d34d11109142140a7a1db23d67ddf839", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c41d5a20d34d11109142140a7a1db23d67ddf839", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c41d5a20d34d11109142140a7a1db23d67ddf839"}], "stats": {"total": 26, "additions": 25, "deletions": 1}, "files": [{"sha": "9a28f6cdb668ecec6a1c11a6fea23a5409e65094", "filename": "gcc/rust/parse/rust-parse-impl.h", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23e748d7a6855ce132299cfef9692ee9c681de59/gcc%2Frust%2Fparse%2Frust-parse-impl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23e748d7a6855ce132299cfef9692ee9c681de59/gcc%2Frust%2Fparse%2Frust-parse-impl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fparse%2Frust-parse-impl.h?ref=23e748d7a6855ce132299cfef9692ee9c681de59", "patch": "@@ -4415,7 +4415,12 @@ Parser<ManagedTokenSource>::parse_enum_item ()\n \t// tuple enum item\n \tlexer.skip_token ();\n \n-\tstd::vector<AST::TupleField> tuple_fields = parse_tuple_fields ();\n+\tstd::vector<AST::TupleField> tuple_fields;\n+\t// Might be empty tuple for unit tuple enum variant.\n+\tif (lexer.peek_token ()->get_id () == RIGHT_PAREN)\n+\t  tuple_fields = std::vector<AST::TupleField> ();\n+\telse\n+\t  tuple_fields = parse_tuple_fields ();\n \n \tif (!skip_token (RIGHT_PAREN))\n \t  {"}, {"sha": "26e3e5d0a715f0ee230be27a600e994cb87d7eb1", "filename": "gcc/testsuite/rust/compile/torture/tuple_enum_variants.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23e748d7a6855ce132299cfef9692ee9c681de59/gcc%2Ftestsuite%2Frust%2Fcompile%2Ftorture%2Ftuple_enum_variants.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23e748d7a6855ce132299cfef9692ee9c681de59/gcc%2Ftestsuite%2Frust%2Fcompile%2Ftorture%2Ftuple_enum_variants.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fcompile%2Ftorture%2Ftuple_enum_variants.rs?ref=23e748d7a6855ce132299cfef9692ee9c681de59", "patch": "@@ -0,0 +1,19 @@\n+enum E { T0(), T1(i32), T2(i32,u32) }\n+\n+/* The following doesn't parse yet...\n+fn f(e0: E, e1: E, e2: E) -> (E,E,E,())\n+{\n+  let e = e0;\n+  let f = e1;\n+  let g = e2;\n+  (e,f,g,())\n+}\n+\n+fn main()\n+{\n+  let e0 = E::T0();\n+  let e1 = E::T1(0);\n+  let e2 = E::T2(0,1);\n+  f(e0, e1, e2).3\n+}\n+*/"}]}