{"sha": "3c1247f03db5d6e9478f3fd6ea7a3950ccd68118", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2MxMjQ3ZjAzZGI1ZDZlOTQ3OGYzZmQ2ZWE3YTM5NTBjY2Q2ODExOA==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2013-05-20T13:20:39Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2013-05-20T13:20:39Z"}, "message": "re PR c++/23608 (constant propagation (CCP) would improve -Wsign-compare)\n\n/cp\n2013-05-20  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/23608\n\t* call.c (build_new_op_1): Propagate loc to cp_build_binary_op.\n\n/testsuite\n2013-05-20  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/23608\n\t* g++.dg/warn/Wsign-compare-6.C: New.\n\t* g++.dg/warn/Wdouble-promotion.C: Adjust.\n\nFrom-SVN: r199102", "tree": {"sha": "e7c1e737d6e8636b42e15975f55ed1cef3329642", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e7c1e737d6e8636b42e15975f55ed1cef3329642"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3c1247f03db5d6e9478f3fd6ea7a3950ccd68118", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c1247f03db5d6e9478f3fd6ea7a3950ccd68118", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c1247f03db5d6e9478f3fd6ea7a3950ccd68118", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c1247f03db5d6e9478f3fd6ea7a3950ccd68118/comments", "author": null, "committer": null, "parents": [{"sha": "8f1352c4190e174c76f3a7b264411b3374f87450", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f1352c4190e174c76f3a7b264411b3374f87450", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8f1352c4190e174c76f3a7b264411b3374f87450"}], "stats": {"total": 31, "additions": 28, "deletions": 3}, "files": [{"sha": "f7c4547456e661bdfc0d8e1bb6e7b22036963fe1", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c1247f03db5d6e9478f3fd6ea7a3950ccd68118/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c1247f03db5d6e9478f3fd6ea7a3950ccd68118/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=3c1247f03db5d6e9478f3fd6ea7a3950ccd68118", "patch": "@@ -1,3 +1,8 @@\n+2013-05-20  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/23608\n+\t* call.c (build_new_op_1): Propagate loc to cp_build_binary_op.\n+\n 2013-05-20  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/57317"}, {"sha": "ce6604224ca3739152fc6be0d5c206b68e50c6c3", "filename": "gcc/cp/call.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c1247f03db5d6e9478f3fd6ea7a3950ccd68118/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c1247f03db5d6e9478f3fd6ea7a3950ccd68118/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=3c1247f03db5d6e9478f3fd6ea7a3950ccd68118", "patch": "@@ -5418,7 +5418,7 @@ build_new_op_1 (location_t loc, enum tree_code code, int flags, tree arg1,\n     case BIT_AND_EXPR:\n     case BIT_IOR_EXPR:\n     case BIT_XOR_EXPR:\n-      return cp_build_binary_op (input_location, code, arg1, arg2, complain);\n+      return cp_build_binary_op (loc, code, arg1, arg2, complain);\n \n     case UNARY_PLUS_EXPR:\n     case NEGATE_EXPR:"}, {"sha": "6f7bf4110d839aa278486c68c8f27c352f4efe84", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c1247f03db5d6e9478f3fd6ea7a3950ccd68118/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c1247f03db5d6e9478f3fd6ea7a3950ccd68118/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3c1247f03db5d6e9478f3fd6ea7a3950ccd68118", "patch": "@@ -1,3 +1,9 @@\n+2013-05-20  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/23608\n+\t* g++.dg/warn/Wsign-compare-6.C: New.\n+\t* g++.dg/warn/Wdouble-promotion.C: Adjust.\n+\n 2013-05-20  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/57327"}, {"sha": "60eed6b53988a471881f5450cfe139298772b1f2", "filename": "gcc/testsuite/g++.dg/warn/Wdouble-promotion.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c1247f03db5d6e9478f3fd6ea7a3950ccd68118/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWdouble-promotion.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c1247f03db5d6e9478f3fd6ea7a3950ccd68118/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWdouble-promotion.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWdouble-promotion.C?ref=3c1247f03db5d6e9478f3fd6ea7a3950ccd68118", "patch": "@@ -5,7 +5,7 @@\n \n /* Some targets do not provide <complex.h> so we define I ourselves.  */\n #define I 1.0iF\n-#define ID ((_Complex double)I) // { dg-warning \"implicit\" }\n+#define ID ((_Complex double)I)\n \n float f;\n double d;\n@@ -36,7 +36,7 @@ usual_arithmetic_conversions(void)\n \n   local_cf = cf + 1.0;       /* { dg-warning \"implicit\" } */\n   local_cf = cf - d;         /* { dg-warning \"implicit\" } */\n-  local_cf = cf + 1.0 * ID;  /* { dg-message \"in expansion of macro 'ID'\" } */\n+  local_cf = cf + 1.0 * ID;  /* { dg-warning \"implicit\" } */\n   local_cf = cf - cd;        /* { dg-warning \"implicit\" } */\n   \n   local_f = i ? f : d;       /* { dg-warning \"implicit\" } */"}, {"sha": "1f8af664c7b68266bb086b626707cf28a33eb8fb", "filename": "gcc/testsuite/g++.dg/warn/Wsign-compare-6.C", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c1247f03db5d6e9478f3fd6ea7a3950ccd68118/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWsign-compare-6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c1247f03db5d6e9478f3fd6ea7a3950ccd68118/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWsign-compare-6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWsign-compare-6.C?ref=3c1247f03db5d6e9478f3fd6ea7a3950ccd68118", "patch": "@@ -0,0 +1,14 @@\n+// PR c++/23608\n+// { dg-options \"-Wsign-compare\" }\n+\n+#define FIVE 5\n+\n+int main()\n+{\n+  int i = 5;\n+  int const ic = 5;\n+\n+  i < 5u;  // { dg-warning \"5:comparison between signed and unsigned\" }\n+  ic < 5u;     \n+  FIVE < 5u;\n+}"}]}