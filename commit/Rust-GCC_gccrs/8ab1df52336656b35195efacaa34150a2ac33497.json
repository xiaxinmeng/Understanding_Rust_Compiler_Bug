{"sha": "8ab1df52336656b35195efacaa34150a2ac33497", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGFiMWRmNTIzMzY2NTZiMzUxOTVlZmFjYWEzNDE1MGEyYWMzMzQ5Nw==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2019-03-23T16:15:48Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2019-03-23T16:15:48Z"}, "message": "rs6000: Fix _mm_movemask_pi8 emulation for 32 bit\n\n\n\t* config/rs6000/xmmintrin.h (_mm_movemask_pi8): Implement for 32-bit\n\tbig endian.\n\nFrom-SVN: r269891", "tree": {"sha": "b8d2878cb747d89110019f57fcd0427884504fb2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b8d2878cb747d89110019f57fcd0427884504fb2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8ab1df52336656b35195efacaa34150a2ac33497", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ab1df52336656b35195efacaa34150a2ac33497", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8ab1df52336656b35195efacaa34150a2ac33497", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ab1df52336656b35195efacaa34150a2ac33497/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "27f18a6299753b124d9f9094d7dd2ba0cb64bad2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27f18a6299753b124d9f9094d7dd2ba0cb64bad2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/27f18a6299753b124d9f9094d7dd2ba0cb64bad2"}], "stats": {"total": 11, "additions": 11, "deletions": 0}, "files": [{"sha": "6b9f1c4a2b6206d3854a46130dc0ca90243fc185", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ab1df52336656b35195efacaa34150a2ac33497/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ab1df52336656b35195efacaa34150a2ac33497/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8ab1df52336656b35195efacaa34150a2ac33497", "patch": "@@ -1,3 +1,8 @@\n+2019-03-23  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\t* config/rs6000/xmmintrin.h (_mm_movemask_pi8): Implement for 32-bit\n+\tbig endian.\n+\n 2019-03-22  Andrew Pinski  <apinski@marvell.com>\n \n \t* config/aarch64/aarch64.md (zero_extendsidi2_aarch64): Fix type"}, {"sha": "f9474b6322984675bd564ef1e30825305ad7956f", "filename": "gcc/config/rs6000/xmmintrin.h", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ab1df52336656b35195efacaa34150a2ac33497/gcc%2Fconfig%2Frs6000%2Fxmmintrin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ab1df52336656b35195efacaa34150a2ac33497/gcc%2Fconfig%2Frs6000%2Fxmmintrin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fxmmintrin.h?ref=8ab1df52336656b35195efacaa34150a2ac33497", "patch": "@@ -1586,9 +1586,15 @@ _mm_movemask_pi8 (__m64 __A)\n #endif\n   return __builtin_bpermd (p, __A);\n #else\n+#ifdef __LITTLE_ENDIAN__\n   unsigned int mask = 0x20283038UL;\n   unsigned int r1 = __builtin_bpermd (mask, __A) & 0xf;\n   unsigned int r2 = __builtin_bpermd (mask, __A >> 32) & 0xf;\n+#else\n+  unsigned int mask = 0x38302820UL;\n+  unsigned int r1 = __builtin_bpermd (mask, __A >> 32) & 0xf;\n+  unsigned int r2 = __builtin_bpermd (mask, __A) & 0xf;\n+#endif\n   return (r2 << 4) | r1;\n #endif\n }"}]}