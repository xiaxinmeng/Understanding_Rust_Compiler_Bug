{"sha": "5df07255e2507514ab4ec240bb2dfdb10321b6e4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWRmMDcyNTVlMjUwNzUxNGFiNGVjMjQwYmIyZGZkYjEwMzIxYjZlNA==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2004-12-31T22:04:30Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2004-12-31T22:04:30Z"}, "message": "types.c (FFI_AGGREGATE_TYPEDEF): Remove.\n\n        * src/types.c (FFI_AGGREGATE_TYPEDEF): Remove.\n        (FFI_TYPEDEF): Rename from FFI_INTEGRAL_TYPEDEF.  Replace size and\n        offset parameters with a type parameter; deduce size and structure\n        alignment.  Update all users.\n\nFrom-SVN: r92775", "tree": {"sha": "162864d0f40d7df9bedfba3d0fd570b765c9409c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/162864d0f40d7df9bedfba3d0fd570b765c9409c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5df07255e2507514ab4ec240bb2dfdb10321b6e4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5df07255e2507514ab4ec240bb2dfdb10321b6e4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5df07255e2507514ab4ec240bb2dfdb10321b6e4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5df07255e2507514ab4ec240bb2dfdb10321b6e4/comments", "author": null, "committer": null, "parents": [{"sha": "81a69b13339a5a975ab17eef54490148addaf531", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/81a69b13339a5a975ab17eef54490148addaf531", "html_url": "https://github.com/Rust-GCC/gccrs/commit/81a69b13339a5a975ab17eef54490148addaf531"}], "stats": {"total": 101, "additions": 35, "deletions": 66}, "files": [{"sha": "02a5fc29fdbcdc47bfc4ff459085d8519dc90d9a", "filename": "libffi/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5df07255e2507514ab4ec240bb2dfdb10321b6e4/libffi%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5df07255e2507514ab4ec240bb2dfdb10321b6e4/libffi%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2FChangeLog?ref=5df07255e2507514ab4ec240bb2dfdb10321b6e4", "patch": "@@ -1,3 +1,10 @@\n+2004-12-31  Richard Henderson  <rth@redhat.com>\n+\n+\t* src/types.c (FFI_AGGREGATE_TYPEDEF): Remove.\n+\t(FFI_TYPEDEF): Rename from FFI_INTEGRAL_TYPEDEF.  Replace size and\n+\toffset parameters with a type parameter; deduce size and structure\n+\talignment.  Update all users.\n+\n 2004-12-31  Richard Henderson  <rth@redhat.com>\n \n \t* src/types.c (FFI_TYPE_POINTER): Define with sizeof."}, {"sha": "b65787359feb9970d5c14698da9d93ab1ca856cd", "filename": "libffi/src/types.c", "status": "modified", "additions": 28, "deletions": 66, "changes": 94, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5df07255e2507514ab4ec240bb2dfdb10321b6e4/libffi%2Fsrc%2Ftypes.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5df07255e2507514ab4ec240bb2dfdb10321b6e4/libffi%2Fsrc%2Ftypes.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Ftypes.c?ref=5df07255e2507514ab4ec240bb2dfdb10321b6e4", "patch": "@@ -28,71 +28,33 @@\n \n /* Type definitions */\n \n-#define FFI_INTEGRAL_TYPEDEF(n, s, a, t) ffi_type ffi_type_##n = { s, a, t, NULL }\n-#define FFI_AGGREGATE_TYPEDEF(n, e) ffi_type ffi_type_##n = { 0, 0, FFI_TYPE_STRUCT, e }\n+#define FFI_TYPEDEF(name, type, id)\t\t\\\n+struct struct_align_##name {\t\t\t\\\n+  char c;\t\t\t\t\t\\\n+  type x;\t\t\t\t\t\\\n+};\t\t\t\t\t\t\\\n+ffi_type ffi_type_##name = {\t\t\t\\\n+  sizeof(type),\t\t\t\t\t\\\n+  offsetof(struct struct_align_##name, x),\t\\\n+  id, NULL\t\t\t\t\t\\\n+}\n \n /* Size and alignment are fake here. They must not be 0. */\n-FFI_INTEGRAL_TYPEDEF(void, 1, 1, FFI_TYPE_VOID);\n-\n-FFI_INTEGRAL_TYPEDEF(uint8, 1, 1, FFI_TYPE_UINT8);\n-FFI_INTEGRAL_TYPEDEF(sint8, 1, 1, FFI_TYPE_SINT8);\n-FFI_INTEGRAL_TYPEDEF(uint16, 2, 2, FFI_TYPE_UINT16);\n-FFI_INTEGRAL_TYPEDEF(sint16, 2, 2, FFI_TYPE_SINT16);\n-FFI_INTEGRAL_TYPEDEF(uint32, 4, 4, FFI_TYPE_UINT32);\n-FFI_INTEGRAL_TYPEDEF(sint32, 4, 4, FFI_TYPE_SINT32);\n-FFI_INTEGRAL_TYPEDEF(float, 4, 4, FFI_TYPE_FLOAT);\n-\n-FFI_INTEGRAL_TYPEDEF(pointer, sizeof(void*), sizeof(void*), FFI_TYPE_POINTER);\n-\n-#if defined X86 || defined ARM || defined M68K || SH\n-\n-FFI_INTEGRAL_TYPEDEF(uint64, 8, 4, FFI_TYPE_UINT64);\n-FFI_INTEGRAL_TYPEDEF(sint64, 8, 4, FFI_TYPE_SINT64);\n-\n-#else\n-\n-FFI_INTEGRAL_TYPEDEF(uint64, 8, 8, FFI_TYPE_UINT64);\n-FFI_INTEGRAL_TYPEDEF(sint64, 8, 8, FFI_TYPE_SINT64);\n-\n-#endif\n-\n-\n-#if defined X86 || defined X86_WIN32 || defined M68K\n-\n-#ifdef X86_WIN32\n-FFI_INTEGRAL_TYPEDEF(double, 8, 8, FFI_TYPE_DOUBLE);\n-#else\n-FFI_INTEGRAL_TYPEDEF(double, 8, 4, FFI_TYPE_DOUBLE);\n-#endif\n-FFI_INTEGRAL_TYPEDEF(longdouble, 12, 4, FFI_TYPE_LONGDOUBLE);\n-\n-#elif defined ARM || defined SH || defined POWERPC_AIX || defined M32R\n-\n-FFI_INTEGRAL_TYPEDEF(double, 8, 4, FFI_TYPE_DOUBLE);\n-FFI_INTEGRAL_TYPEDEF(longdouble, 8, 4, FFI_TYPE_LONGDOUBLE);\n-\n-#elif defined POWERPC_DARWIN\n-\n-FFI_INTEGRAL_TYPEDEF(double, 8, 4, FFI_TYPE_DOUBLE);\n-FFI_INTEGRAL_TYPEDEF(longdouble, 16, 16, FFI_TYPE_LONGDOUBLE);\n-\n-#elif defined SPARC\n-\n-FFI_INTEGRAL_TYPEDEF(double, 8, 8, FFI_TYPE_DOUBLE);\n-#ifdef SPARC64\n-FFI_INTEGRAL_TYPEDEF(longdouble, 16, 16, FFI_TYPE_LONGDOUBLE);\n-#else\n-FFI_INTEGRAL_TYPEDEF(longdouble, 16, 8, FFI_TYPE_LONGDOUBLE);\n-#endif\n-\n-#elif defined X86_64 || defined POWERPC64 || defined IA64\n-\n-FFI_INTEGRAL_TYPEDEF(double, 8, 8, FFI_TYPE_DOUBLE);\n-FFI_INTEGRAL_TYPEDEF(longdouble, 16, 16, FFI_TYPE_LONGDOUBLE);\n-\n-#else\n-\n-FFI_INTEGRAL_TYPEDEF(double, 8, 8, FFI_TYPE_DOUBLE);\n-FFI_INTEGRAL_TYPEDEF(longdouble, 8, 8, FFI_TYPE_LONGDOUBLE);\n-\n-#endif\n+ffi_type ffi_type_void = {\n+  1, 1, FFI_TYPE_VOID, NULL\n+};\n+\n+FFI_TYPEDEF(uint8, UINT8, FFI_TYPE_UINT8);\n+FFI_TYPEDEF(sint8, SINT8, FFI_TYPE_SINT8);\n+FFI_TYPEDEF(uint16, UINT16, FFI_TYPE_UINT16);\n+FFI_TYPEDEF(sint16, SINT16, FFI_TYPE_SINT16);\n+FFI_TYPEDEF(uint32, UINT32, FFI_TYPE_UINT32);\n+FFI_TYPEDEF(sint32, SINT32, FFI_TYPE_SINT32);\n+FFI_TYPEDEF(uint64, UINT64, FFI_TYPE_UINT64);\n+FFI_TYPEDEF(sint64, SINT64, FFI_TYPE_SINT64);\n+\n+FFI_TYPEDEF(pointer, void*, FFI_TYPE_POINTER);\n+\n+FFI_TYPEDEF(float, float, FFI_TYPE_FLOAT);\n+FFI_TYPEDEF(double, double, FFI_TYPE_DOUBLE);\n+FFI_TYPEDEF(longdouble, long double, FFI_TYPE_LONGDOUBLE);"}]}