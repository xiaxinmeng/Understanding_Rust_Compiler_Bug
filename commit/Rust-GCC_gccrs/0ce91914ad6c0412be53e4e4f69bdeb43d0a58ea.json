{"sha": "0ce91914ad6c0412be53e4e4f69bdeb43d0a58ea", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGNlOTE5MTRhZDZjMDQxMmJlNTNlNGU0ZjY5YmRlYjQzZDBhNThlYQ==", "commit": {"author": {"name": "Hans-Peter Nilsson", "email": "hp@axis.com", "date": "2019-05-23T18:02:05Z"}, "committer": {"name": "Hans-Peter Nilsson", "email": "hp@gcc.gnu.org", "date": "2019-05-23T18:02:05Z"}, "message": "From what I understand of the libstdc++/83237 thread at\n<https://gcc.gnu.org/ml/gcc-patches/2017-12/msg00573.html>, the\nhigh numbers are not arbitrary, so it seems wrong to try\nlowering them, or we'd just waste cycles testing nothing, or\nworse, ending up with a bogus error indication.  Better to just\nplain disable this part of the test for simulator targets; I\nassume the results should be the same on any IEEE-float target,\ni.e. no target-specific things going on here that'd raise a need\nto cover it everywhere.\n\nWith this part of the test disabled, I saw the test finishing in\n(time) \"124.74s user\" where it was before \"1120.26s user\"\nrunning the cris-elf-run simulator on a \"i7-4770K CPU @ 3.50GHz\"\nhost.  Most certainly that indidates that the remainder of the\ntest is still too much for *some* host+simulator combos, but I'm\nhappy with the runtime lowered to 1/5 of the timeout (10\nminutes) on this particular combination, and I'd think this\nfixes timeouts for many other simulator combos too.\n\nThis construct (disabling or lowering limits for simulators) is\nused elsewhere in the libstdc++ test-suite and in particular the\nSIMULATOR_TEST macro is used in the testsuite machinery (though\nAFAICT not in testDiscreteDist).\n\n        * testsuite/26_numerics/random/poisson_distribution/operators/values.cc:\n        Don't run the libstdc++/83237 part on simulator targets.\n\nFrom-SVN: r271574", "tree": {"sha": "b26dab36f170061c90a9be2171ff5f32ab15329e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b26dab36f170061c90a9be2171ff5f32ab15329e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0ce91914ad6c0412be53e4e4f69bdeb43d0a58ea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ce91914ad6c0412be53e4e4f69bdeb43d0a58ea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ce91914ad6c0412be53e4e4f69bdeb43d0a58ea", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ce91914ad6c0412be53e4e4f69bdeb43d0a58ea/comments", "author": {"login": "hpataxisdotcom", "id": 80339731, "node_id": "MDQ6VXNlcjgwMzM5NzMx", "avatar_url": "https://avatars.githubusercontent.com/u/80339731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hpataxisdotcom", "html_url": "https://github.com/hpataxisdotcom", "followers_url": "https://api.github.com/users/hpataxisdotcom/followers", "following_url": "https://api.github.com/users/hpataxisdotcom/following{/other_user}", "gists_url": "https://api.github.com/users/hpataxisdotcom/gists{/gist_id}", "starred_url": "https://api.github.com/users/hpataxisdotcom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hpataxisdotcom/subscriptions", "organizations_url": "https://api.github.com/users/hpataxisdotcom/orgs", "repos_url": "https://api.github.com/users/hpataxisdotcom/repos", "events_url": "https://api.github.com/users/hpataxisdotcom/events{/privacy}", "received_events_url": "https://api.github.com/users/hpataxisdotcom/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f58be48c09b58b801a2ec2f2d1fc6478b0190ad3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f58be48c09b58b801a2ec2f2d1fc6478b0190ad3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f58be48c09b58b801a2ec2f2d1fc6478b0190ad3"}], "stats": {"total": 9, "additions": 9, "deletions": 0}, "files": [{"sha": "17a0463c2c345e42ca49d7078dfef36be3d96f33", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ce91914ad6c0412be53e4e4f69bdeb43d0a58ea/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ce91914ad6c0412be53e4e4f69bdeb43d0a58ea/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=0ce91914ad6c0412be53e4e4f69bdeb43d0a58ea", "patch": "@@ -1,3 +1,8 @@\n+2019-05-23  Hans-Peter Nilsson  <hp@axis.com>\n+\n+\t* testsuite/26_numerics/random/poisson_distribution/operators/values.cc:\n+\tDon't run the libstdc++/83237 part on simulator targets.\n+\n 2019-05-23  Jonathan Wakely  <jwakely@redhat.com>\n \n \t* doc/xml/manual/status_cxx2017.xml: Add feature test macro for"}, {"sha": "2a45081ff67811461c3b9bfeb91627417beadc20", "filename": "libstdc++-v3/testsuite/26_numerics/random/poisson_distribution/operators/values.cc", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ce91914ad6c0412be53e4e4f69bdeb43d0a58ea/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fpoisson_distribution%2Foperators%2Fvalues.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ce91914ad6c0412be53e4e4f69bdeb43d0a58ea/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fpoisson_distribution%2Foperators%2Fvalues.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fpoisson_distribution%2Foperators%2Fvalues.cc?ref=0ce91914ad6c0412be53e4e4f69bdeb43d0a58ea", "patch": "@@ -1,3 +1,4 @@\n+// { dg-options \"-DSIMULATOR_TEST\" { target simulator } }\n // { dg-do run { target c++11 } }\n // { dg-require-cstdint \"\" }\n // { dg-require-cmath \"\" }\n@@ -43,11 +44,14 @@ void test01()\n   auto bpd3 = std::bind(pd3, eng);\n   testDiscreteDist(bpd3, [](int n) { return poisson_pdf(n, 30.0); } );\n \n+  // This can take extremely long on simulators, timing out the test.\n+#ifndef SIMULATOR_TEST\n   // libstdc++/83237\n   std::poisson_distribution<> pd4(37.17);\n   auto bpd4 = std::bind(pd4, eng);\n   testDiscreteDist<100, 2000000>(bpd4, [](int n)\n \t\t\t\t { return poisson_pdf(n, 37.17); } );\n+#endif\n }\n \n int main()"}]}