{"sha": "d30c76701b519e907beaaf4e4fd4ca6de2b26dbd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDMwYzc2NzAxYjUxOWU5MDdiZWFhZjRlNGZkNGNhNmRlMmIyNmRiZA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2014-09-01T08:26:51Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2014-09-01T08:26:51Z"}, "message": "gnu-user.h (LIBLSAN_EARLY_SPEC): Define.\n\n\t* config/gnu-user.h (LIBLSAN_EARLY_SPEC): Define.\n\t* gcc.c (LIBLSAN_SPEC, LIBLSAN_EARLY_SPEC): Follow LIBTSAN*_SPEC.\n\t(SANITIZER_EARLY_SPEC): Include LIBLSAN_EARLY_SPEC for -fsanitize=leak.\n\nFrom-SVN: r214778", "tree": {"sha": "e99be9eec3bb353d4ac609a30342379cde47ff6a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e99be9eec3bb353d4ac609a30342379cde47ff6a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d30c76701b519e907beaaf4e4fd4ca6de2b26dbd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d30c76701b519e907beaaf4e4fd4ca6de2b26dbd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d30c76701b519e907beaaf4e4fd4ca6de2b26dbd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d30c76701b519e907beaaf4e4fd4ca6de2b26dbd/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a2f581e1429356d7074814a514056ed3c23a5881", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2f581e1429356d7074814a514056ed3c23a5881", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a2f581e1429356d7074814a514056ed3c23a5881"}], "stats": {"total": 30, "additions": 24, "deletions": 6}, "files": [{"sha": "8aa71ef737b85185e51d213268a58f39b5f9fa31", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d30c76701b519e907beaaf4e4fd4ca6de2b26dbd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d30c76701b519e907beaaf4e4fd4ca6de2b26dbd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d30c76701b519e907beaaf4e4fd4ca6de2b26dbd", "patch": "@@ -1,3 +1,9 @@\n+2014-09-01  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* config/gnu-user.h (LIBLSAN_EARLY_SPEC): Define.\n+\t* gcc.c (LIBLSAN_SPEC, LIBLSAN_EARLY_SPEC): Follow LIBTSAN*_SPEC.\n+\t(SANITIZER_EARLY_SPEC): Include LIBLSAN_EARLY_SPEC for -fsanitize=leak.\n+\n 2014-09-01  Yury Gribov  <y.gribov@samsung.com>\n \n \tPR sanitizer/61897"}, {"sha": "9b466212009d2975400cfbaafd4361dcb29a20b8", "filename": "gcc/config/gnu-user.h", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d30c76701b519e907beaaf4e4fd4ca6de2b26dbd/gcc%2Fconfig%2Fgnu-user.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d30c76701b519e907beaaf4e4fd4ca6de2b26dbd/gcc%2Fconfig%2Fgnu-user.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fgnu-user.h?ref=d30c76701b519e907beaaf4e4fd4ca6de2b26dbd", "patch": "@@ -114,7 +114,8 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n /* Link -lasan early on the command line.  For -static-libasan, don't link\n    it for -shared link, the executable should be compiled with -static-libasan\n    in that case, and for executable link link with --{,no-}whole-archive around\n-   it to force everything into the executable.  And similarly for -ltsan.  */\n+   it to force everything into the executable.  And similarly for -ltsan\n+   and -llsan.  */\n #if defined(HAVE_LD_STATIC_DYNAMIC)\n #undef LIBASAN_EARLY_SPEC\n #define LIBASAN_EARLY_SPEC \"%{!shared:libasan_preinit%O%s} \" \\\n@@ -125,4 +126,8 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #define LIBTSAN_EARLY_SPEC \"%{static-libtsan:%{!shared:\" \\\n   LD_STATIC_OPTION \" --whole-archive -ltsan --no-whole-archive \" \\\n   LD_DYNAMIC_OPTION \"}}%{!static-libtsan:-ltsan}\"\n+#undef LIBLSAN_EARLY_SPEC\n+#define LIBLSAN_EARLY_SPEC \"%{static-liblsan:%{!shared:\" \\\n+  LD_STATIC_OPTION \" --whole-archive -llsan --no-whole-archive \" \\\n+  LD_DYNAMIC_OPTION \"}}%{!static-liblsan:-llsan}\"\n #endif"}, {"sha": "c550d9d5559908f97dec51af98cf43e2b96966da", "filename": "gcc/gcc.c", "status": "modified", "additions": 12, "deletions": 5, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d30c76701b519e907beaaf4e4fd4ca6de2b26dbd/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d30c76701b519e907beaaf4e4fd4ca6de2b26dbd/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=d30c76701b519e907beaaf4e4fd4ca6de2b26dbd", "patch": "@@ -576,15 +576,21 @@ proper position among the other output files.  */\n #ifndef LIBLSAN_SPEC\n #define STATIC_LIBLSAN_LIBS \\\n   \" %{static-liblsan:%:include(libsanitizer.spec)%(link_liblsan)}\"\n-#ifdef HAVE_LD_STATIC_DYNAMIC\n-#define LIBLSAN_SPEC \"%{!shared:%{static-liblsan:\" LD_STATIC_OPTION \\\n+#ifdef LIBLSAN_EARLY_SPEC\n+#define LIBLSAN_SPEC STATIC_LIBLSAN_LIBS\n+#elif defined(HAVE_LD_STATIC_DYNAMIC)\n+#define LIBLSAN_SPEC \"%{static-liblsan:\" LD_STATIC_OPTION \\\n \t\t     \"} -llsan %{static-liblsan:\" LD_DYNAMIC_OPTION \"}\" \\\n-\t\t     STATIC_LIBLSAN_LIBS \"}\"\n+\t\t     STATIC_LIBLSAN_LIBS\n #else\n-#define LIBLSAN_SPEC \"%{!shared:-llsan\" STATIC_LIBLSAN_LIBS \"}\"\n+#define LIBLSAN_SPEC \"-llsan\" STATIC_LIBLSAN_LIBS\n #endif\n #endif\n \n+#ifndef LIBLSAN_EARLY_SPEC\n+#define LIBLSAN_EARLY_SPEC \"\"\n+#endif\n+\n #ifndef LIBUBSAN_SPEC\n #define STATIC_LIBUBSAN_LIBS \\\n   \" %{static-libubsan:%:include(libsanitizer.spec)%(link_libubsan)}\"\n@@ -772,7 +778,8 @@ proper position among the other output files.  */\n #ifndef SANITIZER_EARLY_SPEC\n #define SANITIZER_EARLY_SPEC \"\\\n %{!nostdlib:%{!nodefaultlibs:%{%:sanitize(address):\" LIBASAN_EARLY_SPEC \"} \\\n-    %{%:sanitize(thread):\" LIBTSAN_EARLY_SPEC \"}}}\"\n+    %{%:sanitize(thread):\" LIBTSAN_EARLY_SPEC \"} \\\n+    %{%:sanitize(leak):\" LIBLSAN_EARLY_SPEC \"}}}\"\n #endif\n \n /* Linker command line options for -fsanitize= late on the command line.  */"}]}