{"sha": "8c5005ce365a7fcfd0de57b7f247097e3bbb5449", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGM1MDA1Y2UzNjVhN2ZjZmQwZGU1N2I3ZjI0NzA5N2UzYmJiNTQ0OQ==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2013-07-25T00:14:01Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@gcc.gnu.org", "date": "2013-07-25T00:14:01Z"}, "message": "Introduce context class.\n\n2013-07-24  David Malcolm  <dmalcolm@redhat.com>\n\n\tIntroduce context class.\n\n\t* Makefile.in (CONTEXT_H): New.\n\t(OBJS): Add context.o.\n\t(toplev.o): Add CONTEXT_H to dependencies.\n\t(context.o): New.\n\n\t* toplev.c (general_init): Create the singleton gcc::context\n\tinstance.\n\n\t* context.c: New.\n\n\t* context.h: New.\n\nFrom-SVN: r201230", "tree": {"sha": "59690893637ad56224c275c8da65c63a006aec0b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/59690893637ad56224c275c8da65c63a006aec0b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8c5005ce365a7fcfd0de57b7f247097e3bbb5449", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c5005ce365a7fcfd0de57b7f247097e3bbb5449", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8c5005ce365a7fcfd0de57b7f247097e3bbb5449", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c5005ce365a7fcfd0de57b7f247097e3bbb5449/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b0c5dc1655bc88f34ecd1bf93ff297871b650392", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b0c5dc1655bc88f34ecd1bf93ff297871b650392", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b0c5dc1655bc88f34ecd1bf93ff297871b650392"}], "stats": {"total": 96, "additions": 95, "deletions": 1}, "files": [{"sha": "36bfbe976db867812893b5894aa442a24d076dd6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c5005ce365a7fcfd0de57b7f247097e3bbb5449/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c5005ce365a7fcfd0de57b7f247097e3bbb5449/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8c5005ce365a7fcfd0de57b7f247097e3bbb5449", "patch": "@@ -1,3 +1,19 @@\n+2013-07-24  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tIntroduce context class.\n+\n+\t* Makefile.in (CONTEXT_H): New.\n+\t(OBJS): Add context.o.\n+\t(toplev.o): Add CONTEXT_H to dependencies.\n+\t(context.o): New.\n+\n+\t* toplev.c (general_init): Create the singleton gcc::context\n+\tinstance.\n+\n+\t* context.c: New.\n+\n+\t* context.h: New.\n+\n 2013-07-24  Joern Rennecke  <joern.rennecke@embecosm.com>\n \n \tPR rtl-optimization/57968"}, {"sha": "fb0cb4b7028d6a668bf31e9ad8ea7fc61d0d33be", "filename": "gcc/Makefile.in", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c5005ce365a7fcfd0de57b7f247097e3bbb5449/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c5005ce365a7fcfd0de57b7f247097e3bbb5449/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=8c5005ce365a7fcfd0de57b7f247097e3bbb5449", "patch": "@@ -986,6 +986,7 @@ PLUGIN_H = plugin.h $(GCC_PLUGIN_H)\n PLUGIN_VERSION_H = plugin-version.h configargs.h\n LIBFUNCS_H = libfuncs.h $(HASHTAB_H)\n GRAPHITE_HTAB_H = graphite-htab.h graphite-clast-to-gimple.h $(HASH_TABLE_H)\n+CONTEXT_H = context.h\n \n #\f\n # Now figure out from those variables how to compile and link.\n@@ -1200,6 +1201,7 @@ OBJS = \\\n \tcombine.o \\\n \tcombine-stack-adj.o \\\n \tcompare-elim.o \\\n+\tcontext.o \\\n \tconvert.o \\\n \tcoverage.o \\\n \tcppbuiltin.o \\\n@@ -2729,7 +2731,7 @@ toplev.o : toplev.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n    $(OPTS_H) params.def tree-mudflap.h $(TREE_PASS_H) $(GIMPLE_H) \\\n    tree-ssa-alias.h $(PLUGIN_H) realmpfr.h tree-diagnostic.h \\\n    $(TREE_PRETTY_PRINT_H) opts-diagnostic.h $(COMMON_TARGET_H) \\\n-   tsan.h diagnostic-color.h\n+   tsan.h diagnostic-color.h $(CONTEXT_H)\n \n hwint.o : hwint.c $(CONFIG_H) $(SYSTEM_H) $(DIAGNOSTIC_CORE_H)\n \n@@ -3487,6 +3489,8 @@ $(out_object_file): $(out_file) $(CONFIG_H) coretypes.h $(TM_H) $(TREE_H) \\\n    regrename.h\n \t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) \\\n \t\t$(out_file) $(OUTPUT_OPTION)\n+context.o: context.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(GGC_H) \\\n+   $(CONTEXT_H)\n \n $(common_out_object_file): $(common_out_file) $(CONFIG_H) $(SYSTEM_H) \\\n     coretypes.h $(COMMON_TARGET_H) $(COMMON_TARGET_DEF_H) $(PARAMS_H) \\"}, {"sha": "76e0dde9c0fabcad06499ed7c745ec7040b67be5", "filename": "gcc/context.c", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c5005ce365a7fcfd0de57b7f247097e3bbb5449/gcc%2Fcontext.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c5005ce365a7fcfd0de57b7f247097e3bbb5449/gcc%2Fcontext.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcontext.c?ref=8c5005ce365a7fcfd0de57b7f247097e3bbb5449", "patch": "@@ -0,0 +1,27 @@\n+/* context.c - Holder for global state\n+   Copyright (C) 2013 Free Software Foundation, Inc.\n+\n+This file is part of GCC.\n+\n+GCC is free software; you can redistribute it and/or modify it under\n+the terms of the GNU General Public License as published by the Free\n+Software Foundation; either version 3, or (at your option) any later\n+version.\n+\n+GCC is distributed in the hope that it will be useful, but WITHOUT ANY\n+WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GCC; see the file COPYING3.  If not see\n+<http://www.gnu.org/licenses/>.  */\n+\n+#include \"config.h\"\n+#include \"system.h\"\n+#include \"coretypes.h\"\n+#include \"ggc.h\"\n+#include \"context.h\"\n+\n+/* The singleton holder of global state: */\n+gcc::context *g;"}, {"sha": "3caf02fed319768b2a26d6236ed4312790164cad", "filename": "gcc/context.h", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c5005ce365a7fcfd0de57b7f247097e3bbb5449/gcc%2Fcontext.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c5005ce365a7fcfd0de57b7f247097e3bbb5449/gcc%2Fcontext.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcontext.h?ref=8c5005ce365a7fcfd0de57b7f247097e3bbb5449", "patch": "@@ -0,0 +1,42 @@\n+/* context.h - Holder for global state\n+   Copyright (C) 2013 Free Software Foundation, Inc.\n+\n+This file is part of GCC.\n+\n+GCC is free software; you can redistribute it and/or modify it under\n+the terms of the GNU General Public License as published by the Free\n+Software Foundation; either version 3, or (at your option) any later\n+version.\n+\n+GCC is distributed in the hope that it will be useful, but WITHOUT ANY\n+WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GCC; see the file COPYING3.  If not see\n+<http://www.gnu.org/licenses/>.  */\n+\n+#ifndef GCC_CONTEXT_H\n+#define GCC_CONTEXT_H\n+\n+namespace gcc {\n+\n+/* GCC's internal state can be divided into zero or more\n+   \"parallel universe\" of state; an instance of this class is one such\n+   context of state.  */\n+class context\n+{\n+public:\n+\n+  /* Currently empty.  */\n+\n+}; // class context\n+\n+} // namespace gcc\n+\n+/* The global singleton context aka \"g\".\n+   (the name is chosen to be easy to type in a debugger).  */\n+extern gcc::context *g;\n+\n+#endif /* ! GCC_CONTEXT_H */"}, {"sha": "de28a2d4df1ee6cf8c6979195defbf8a4226e568", "filename": "gcc/toplev.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c5005ce365a7fcfd0de57b7f247097e3bbb5449/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c5005ce365a7fcfd0de57b7f247097e3bbb5449/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=8c5005ce365a7fcfd0de57b7f247097e3bbb5449", "patch": "@@ -75,6 +75,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-ssa-alias.h\"\n #include \"plugin.h\"\n #include \"diagnostic-color.h\"\n+#include \"context.h\"\n \n #if defined(DBX_DEBUGGING_INFO) || defined(XCOFF_DEBUGGING_INFO)\n #include \"dbxout.h\"\n@@ -1156,6 +1157,10 @@ general_init (const char *argv0)\n   /* This must be done after global_init_params but before argument\n      processing.  */\n   init_ggc_heuristics();\n+\n+  /* Create the singleton holder for global state.  */\n+  g = new gcc::context();\n+\n   init_optimization_passes ();\n   statistics_early_init ();\n   finish_params ();"}]}