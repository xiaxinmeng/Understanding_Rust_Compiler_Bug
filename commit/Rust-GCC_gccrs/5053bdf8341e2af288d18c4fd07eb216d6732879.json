{"sha": "5053bdf8341e2af288d18c4fd07eb216d6732879", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTA1M2JkZjgzNDFlMmFmMjg4ZDE4YzRmZDA3ZWIyMTZkNjczMjg3OQ==", "commit": {"author": {"name": "John David Anglin", "email": "dave.anglin@nrc-cnrc.gc.ca", "date": "2003-02-09T03:23:13Z"}, "committer": {"name": "John David Anglin", "email": "danglin@gcc.gnu.org", "date": "2003-02-09T03:23:13Z"}, "message": "atomicity.h (__Atomicity_lock<__inst>::_S_atomicity_lock): Correct alignment.\n\n\t* hppa/atomicity.h (__Atomicity_lock<__inst>::_S_atomicity_lock):\n\tCorrect alignment.\n\t(__exchange_and_add, __atomic_add): Use PA 2.0 ordered store to reset\n\tlock.\n\nFrom-SVN: r62593", "tree": {"sha": "6b966d3e9a21eb917ad886cde79105cdae4c9675", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6b966d3e9a21eb917ad886cde79105cdae4c9675"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5053bdf8341e2af288d18c4fd07eb216d6732879", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5053bdf8341e2af288d18c4fd07eb216d6732879", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5053bdf8341e2af288d18c4fd07eb216d6732879", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5053bdf8341e2af288d18c4fd07eb216d6732879/comments", "author": null, "committer": null, "parents": [{"sha": "cefadf78ae7e23000b665a2b9bbdc91aed5738ff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cefadf78ae7e23000b665a2b9bbdc91aed5738ff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cefadf78ae7e23000b665a2b9bbdc91aed5738ff"}], "stats": {"total": 22, "additions": 16, "deletions": 6}, "files": [{"sha": "703000de4070d501531e1934220a35537dce7ea0", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5053bdf8341e2af288d18c4fd07eb216d6732879/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5053bdf8341e2af288d18c4fd07eb216d6732879/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=5053bdf8341e2af288d18c4fd07eb216d6732879", "patch": "@@ -1,3 +1,10 @@\n+2003-02-08  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n+\n+\t* hppa/atomicity.h (__Atomicity_lock<__inst>::_S_atomicity_lock):\n+\tCorrect alignment.\n+\t(__exchange_and_add, __atomic_add): Use PA 2.0 ordered store to reset\n+\tlock.\n+\n 2003-02-07  Paolo Carlini  <pcarlini@unitus.it>\n \n \t* testsuite/27_io/filebuf_virtuals.cc (test08): Fix for"}, {"sha": "d99ac34d0b3e322daf87afe780ef90ce6b580599", "filename": "libstdc++-v3/config/cpu/hppa/atomicity.h", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5053bdf8341e2af288d18c4fd07eb216d6732879/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fhppa%2Fatomicity.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5053bdf8341e2af288d18c4fd07eb216d6732879/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fhppa%2Fatomicity.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fhppa%2Fatomicity.h?ref=5053bdf8341e2af288d18c4fd07eb216d6732879", "patch": "@@ -25,11 +25,12 @@ typedef int _Atomic_word;\n template <int __inst>\n struct __Atomicity_lock\n {\n-  static volatile int __attribute__ ((aligned (16))) _S_atomicity_lock;\n+  static volatile int _S_atomicity_lock;\n };\n \n template <int __inst>\n-volatile int __Atomicity_lock<__inst>::_S_atomicity_lock = 1;\n+volatile int\n+__Atomicity_lock<__inst>::_S_atomicity_lock __attribute__ ((aligned (16))) = 1;\n \n /* Because of the lack of weak support when using the hpux\n    som linker, we explicitly instantiate the atomicity lock\n@@ -58,8 +59,9 @@ __exchange_and_add (volatile _Atomic_word* __mem, int __val)\n \n   result = *__mem;\n   *__mem = result + __val;\n-  __asm__ __volatile__(\"\");\n-  lock = tmp;\n+  /* Reset lock with PA 2.0 \"ordered\" store.  */\n+  __asm__ __volatile__ (\"stw,ma %1,0(%0)\"\n+\t\t\t: : \"r\" (&lock), \"r\" (tmp) : \"memory\");\n   return result;\n }\n \n@@ -80,8 +82,9 @@ __atomic_add (_Atomic_word* __mem, int __val)\n \t\t\t: \"r\" (&lock));\n \n   *__mem += __val;\n-  __asm__ __volatile__(\"\");\n-  lock = tmp;\n+  /* Reset lock with PA 2.0 \"ordered\" store.  */\n+  __asm__ __volatile__ (\"stw,ma %1,0(%0)\"\n+\t\t\t: : \"r\" (&lock), \"r\" (tmp) : \"memory\");\n }\n \n #endif"}]}