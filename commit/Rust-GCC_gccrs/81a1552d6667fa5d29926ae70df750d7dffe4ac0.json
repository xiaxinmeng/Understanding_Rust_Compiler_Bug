{"sha": "81a1552d6667fa5d29926ae70df750d7dffe4ac0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODFhMTU1MmQ2NjY3ZmE1ZDI5OTI2YWU3MGRmNzUwZDdkZmZlNGFjMA==", "commit": {"author": {"name": "Neil Booth", "email": "neil@daikokuya.co.uk", "date": "2002-07-25T21:13:36Z"}, "committer": {"name": "Neil Booth", "email": "neil@gcc.gnu.org", "date": "2002-07-25T21:13:36Z"}, "message": "error.c (print_whitespace): Remove.\n\ncp:\n\t* error.c (print_whitespace): Remove.\n\t* g++spec.c (LIBUNWIND): Move.\n\t* mangle.c (mangled_position, write_signed_number): Remove.\n\nFrom-SVN: r55760", "tree": {"sha": "852a4bc6bcf17cb8a1a20e074c870899e047faa1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/852a4bc6bcf17cb8a1a20e074c870899e047faa1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/81a1552d6667fa5d29926ae70df750d7dffe4ac0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/81a1552d6667fa5d29926ae70df750d7dffe4ac0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/81a1552d6667fa5d29926ae70df750d7dffe4ac0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/81a1552d6667fa5d29926ae70df750d7dffe4ac0/comments", "author": {"login": "neilb-xx", "id": 160762, "node_id": "MDQ6VXNlcjE2MDc2Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/160762?v=4", "gravatar_id": "", "url": "https://api.github.com/users/neilb-xx", "html_url": "https://github.com/neilb-xx", "followers_url": "https://api.github.com/users/neilb-xx/followers", "following_url": "https://api.github.com/users/neilb-xx/following{/other_user}", "gists_url": "https://api.github.com/users/neilb-xx/gists{/gist_id}", "starred_url": "https://api.github.com/users/neilb-xx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/neilb-xx/subscriptions", "organizations_url": "https://api.github.com/users/neilb-xx/orgs", "repos_url": "https://api.github.com/users/neilb-xx/repos", "events_url": "https://api.github.com/users/neilb-xx/events{/privacy}", "received_events_url": "https://api.github.com/users/neilb-xx/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "cad2c6b66287f4ab9ead02618e76147217b1bbae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cad2c6b66287f4ab9ead02618e76147217b1bbae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cad2c6b66287f4ab9ead02618e76147217b1bbae"}], "stats": {"total": 27, "additions": 9, "deletions": 18}, "files": [{"sha": "4ee3d41a48a9e1a2e591abb0bd0ea05d5c17520a", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/81a1552d6667fa5d29926ae70df750d7dffe4ac0/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/81a1552d6667fa5d29926ae70df750d7dffe4ac0/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=81a1552d6667fa5d29926ae70df750d7dffe4ac0", "patch": "@@ -1,3 +1,9 @@\n+2002-07-25  Neil Booth  <neil@daikokuya.co.uk>\n+\n+\t* error.c (print_whitespace): Remove.\n+\t* g++spec.c (LIBUNWIND): Move.\n+\t* mangle.c (mangled_position, write_signed_number): Remove.\n+\n 2002-07-25  Neil Booth  <neil@daikokuya.co.uk>\n \n \t* decl2.c (cxx_decode_option): Similarly."}, {"sha": "3a8f5e0041c07aca7f470ea74e0186148ee5935a", "filename": "gcc/cp/error.c", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/81a1552d6667fa5d29926ae70df750d7dffe4ac0/gcc%2Fcp%2Ferror.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/81a1552d6667fa5d29926ae70df750d7dffe4ac0/gcc%2Fcp%2Ferror.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ferror.c?ref=81a1552d6667fa5d29926ae70df750d7dffe4ac0", "patch": "@@ -45,11 +45,6 @@ enum pad { none, before, after };\n    print_non_consecutive_character ((BUFFER), '<')\n #define print_template_argument_list_end(BUFFER)  \\\n    print_non_consecutive_character ((BUFFER), '>')\n-#define print_whitespace(BUFFER, TFI)        \\\n-   do {                                      \\\n-     output_add_space (BUFFER);              \\\n-     put_whitespace (TFI) = none;            \\\n-   } while (0)\n #define print_tree_identifier(BUFFER, TID) \\\n    output_add_string ((BUFFER), IDENTIFIER_POINTER (TID))\n #define print_identifier(BUFFER, ID) output_add_string ((BUFFER), (ID))"}, {"sha": "706b9697ca3b95744af79107efbd6085a3c1d6f6", "filename": "gcc/cp/g++spec.c", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/81a1552d6667fa5d29926ae70df750d7dffe4ac0/gcc%2Fcp%2Fg%2B%2Bspec.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/81a1552d6667fa5d29926ae70df750d7dffe4ac0/gcc%2Fcp%2Fg%2B%2Bspec.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fg%2B%2Bspec.c?ref=81a1552d6667fa5d29926ae70df750d7dffe4ac0", "patch": "@@ -43,10 +43,6 @@ Boston, MA 02111-1307, USA.  */\n #define LIBSTDCXX_PROFILE \"-lstdc++\"\n #endif\n \n-#ifndef LIBUNWIND\n-#define LIBUNWIND \"-lunwind\"\n-#endif\n-\n void\n lang_specific_driver (in_argc, in_argv, in_added_libraries)\n      int *in_argc;\n@@ -277,6 +273,9 @@ lang_specific_driver (in_argc, in_argv, in_added_libraries)\n       arglist[j++] = saw_profile_flag ? LIBSTDCXX_PROFILE : LIBSTDCXX;\n       added_libraries++;\n #ifdef USE_LIBUNWIND_EXCEPTIONS\n+# ifndef LIBUNWIND\n+#  define LIBUNWIND \"-lunwind\"\n+# endif\n       arglist[j++] = LIBUNWIND;\n       added_libraries++;\n #endif"}, {"sha": "ed6c547f475081184f1ec6398de7e4bd5718e787", "filename": "gcc/cp/mangle.c", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/81a1552d6667fa5d29926ae70df750d7dffe4ac0/gcc%2Fcp%2Fmangle.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/81a1552d6667fa5d29926ae70df750d7dffe4ac0/gcc%2Fcp%2Fmangle.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fmangle.c?ref=81a1552d6667fa5d29926ae70df750d7dffe4ac0", "patch": "@@ -214,11 +214,6 @@ static void write_java_integer_type_codes PARAMS ((tree));\n #define write_string(STRING)                                          \\\n   obstack_grow (&G.name_obstack, (STRING), strlen (STRING))\n \n-/* Return the position at which the next character will be appended to\n-   the mangled representation.  */\n-#define mangled_position()                                              \\\n-  obstack_object_size (&G.name_obstack)\n-\n /* Non-zero if NODE1 and NODE2 are both TREE_LIST nodes and have the\n    same purpose (context, which may be a type) and value (template\n    decl).  See write_template_prefix for more information on what this\n@@ -231,10 +226,6 @@ static void write_java_integer_type_codes PARAMS ((tree));\n        || TREE_PURPOSE (NODE1) == TREE_PURPOSE (NODE2))             \\\n    && TREE_VALUE (NODE1) == TREE_VALUE (NODE2))\n \n-/* Write out a signed quantity in base 10.  */\n-#define write_signed_number(NUMBER) \\\n-  write_number ((NUMBER), /*unsigned_p=*/0, 10)\n-\n /* Write out an unsigned quantity in base 10.  */\n #define write_unsigned_number(NUMBER) \\\n   write_number ((NUMBER), /*unsigned_p=*/1, 10)"}]}