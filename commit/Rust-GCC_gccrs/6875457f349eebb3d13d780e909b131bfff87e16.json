{"sha": "6875457f349eebb3d13d780e909b131bfff87e16", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Njg3NTQ1N2YzNDllZWJiM2QxM2Q3ODBlOTA5YjEzMWJmZmY4N2UxNg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2015-01-21T20:15:27Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2015-01-21T20:15:27Z"}, "message": "re PR c++/64629 (-Wformat-security warns with const char *const vars)\n\n\tPR c++/64629\n\t* c-format.c (check_format_arg): Call decl_constant_value.\n\nFrom-SVN: r219964", "tree": {"sha": "334f6df3b4d1b74ca05e70878a04ce65b928fe88", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/334f6df3b4d1b74ca05e70878a04ce65b928fe88"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6875457f349eebb3d13d780e909b131bfff87e16", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6875457f349eebb3d13d780e909b131bfff87e16", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6875457f349eebb3d13d780e909b131bfff87e16", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6875457f349eebb3d13d780e909b131bfff87e16/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4195393b3ce259c11e0fb7ea9985ca4357b37e1a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4195393b3ce259c11e0fb7ea9985ca4357b37e1a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4195393b3ce259c11e0fb7ea9985ca4357b37e1a"}], "stats": {"total": 22, "additions": 22, "deletions": 0}, "files": [{"sha": "3b9a3d4b5cba3e82df12da2014cf0d25633f1f3a", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6875457f349eebb3d13d780e909b131bfff87e16/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6875457f349eebb3d13d780e909b131bfff87e16/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=6875457f349eebb3d13d780e909b131bfff87e16", "patch": "@@ -1,3 +1,8 @@\n+2015-01-21  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/64629\n+\t* c-format.c (check_format_arg): Call decl_constant_value.\n+\n 2015-01-19  Martin Liska  <mliska@suse.cz>\n \n \t* c-common.c (handle_noicf_attribute): New function."}, {"sha": "faaca093070f6d0705883aa76ce718e30de33a93", "filename": "gcc/c-family/c-format.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6875457f349eebb3d13d780e909b131bfff87e16/gcc%2Fc-family%2Fc-format.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6875457f349eebb3d13d780e909b131bfff87e16/gcc%2Fc-family%2Fc-format.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-format.c?ref=6875457f349eebb3d13d780e909b131bfff87e16", "patch": "@@ -1443,6 +1443,13 @@ check_format_arg (void *ctx, tree format_tree,\n   tree array_init;\n   alloc_pool fwt_pool;\n \n+  if (TREE_CODE (format_tree) == VAR_DECL)\n+    {\n+      /* Pull out a constant value if the front end didn't.  */\n+      format_tree = decl_constant_value (format_tree);\n+      STRIP_NOPS (format_tree);\n+    }\n+\n   if (integer_zerop (format_tree))\n     {\n       /* Skip to first argument to check, so we can see if this format"}, {"sha": "6094a9ca36b90448c9ec15c2a4435c4d164d5851", "filename": "gcc/testsuite/g++.dg/warn/Wformat-1.C", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6875457f349eebb3d13d780e909b131bfff87e16/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWformat-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6875457f349eebb3d13d780e909b131bfff87e16/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWformat-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWformat-1.C?ref=6875457f349eebb3d13d780e909b131bfff87e16", "patch": "@@ -0,0 +1,10 @@\n+// PR c++/64629\n+// { dg-options \"-Wformat -Wformat-security\" }\n+\n+extern void bar (int, const char *, ...) __attribute__((format (printf, 2, 3)));\n+void\n+foo (void)\n+{\n+  const char *const msg = \"abc\";\n+  bar (1, msg);\n+}"}]}