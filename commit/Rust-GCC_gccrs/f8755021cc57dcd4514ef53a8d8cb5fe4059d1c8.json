{"sha": "f8755021cc57dcd4514ef53a8d8cb5fe4059d1c8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Zjg3NTUwMjFjYzU3ZGNkNDUxNGVmNTNhOGQ4Y2I1ZmU0MDU5ZDFjOA==", "commit": {"author": {"name": "Geert Bosch", "email": "bosch@adacore.com", "date": "2007-12-13T10:21:51Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2007-12-13T10:21:51Z"}, "message": "2007-12-06  Geert Bosch  <bosch@adacore.com>\n\n\t* a-tifiio.adb\n\t(Put_Int64): Use Put_Digit to advance Pos. This fixes a case where\n\tthe second or later Scaled_Divide would omit leading zeroes,\n\tresulting in too few digits produced and a Layout_Error as result.\n\t(Put): Initialize Pos.\n\nFrom-SVN: r130819", "tree": {"sha": "84263fa12834e30c157b0b03fe77510c1ff3ce65", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/84263fa12834e30c157b0b03fe77510c1ff3ce65"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f8755021cc57dcd4514ef53a8d8cb5fe4059d1c8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8755021cc57dcd4514ef53a8d8cb5fe4059d1c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f8755021cc57dcd4514ef53a8d8cb5fe4059d1c8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8755021cc57dcd4514ef53a8d8cb5fe4059d1c8/comments", "author": null, "committer": null, "parents": [{"sha": "470cd9e99870bde530a3f6087efdc00d9b3f8f48", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/470cd9e99870bde530a3f6087efdc00d9b3f8f48", "html_url": "https://github.com/Rust-GCC/gccrs/commit/470cd9e99870bde530a3f6087efdc00d9b3f8f48"}], "stats": {"total": 18, "additions": 14, "deletions": 4}, "files": [{"sha": "ae1a60d54ef244c5208f1a22f9b93f109774af5f", "filename": "gcc/ada/a-tifiio.adb", "status": "modified", "additions": 14, "deletions": 4, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8755021cc57dcd4514ef53a8d8cb5fe4059d1c8/gcc%2Fada%2Fa-tifiio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8755021cc57dcd4514ef53a8d8cb5fe4059d1c8/gcc%2Fada%2Fa-tifiio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-tifiio.adb?ref=f8755021cc57dcd4514ef53a8d8cb5fe4059d1c8", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -423,7 +423,7 @@ package body Ada.Text_IO.Fixed_IO is\n       X   : constant Int64   := Int64'Integer_Value (Item);\n       A   : constant Field   := Field'Max (Aft, 1);\n       Neg : constant Boolean := (Item < 0.0);\n-      Pos : Integer;  -- Next digit X has value X * 10.0**Pos;\n+      Pos : Integer := 0;  -- Next digit X has value X * 10.0**Pos;\n \n       Y, Z : Int64;\n       E : constant Integer := Boolean'Pos (not Exact)\n@@ -538,12 +538,22 @@ package body Ada.Text_IO.Fixed_IO is\n             return;\n          end if;\n \n-         Pos := Scale;\n-\n          if X not in -9 .. 9 then\n             Put_Int64 (X / 10, Scale + 1);\n          end if;\n \n+         --  Use Put_Digit to advance Pos. This fixes a case where the second\n+         --  or later Scaled_Divide would omit leading zeroes, resulting in\n+         --  too few digits produced and a Layout_Error as result.\n+\n+         while Pos > Scale loop\n+            Put_Digit (0);\n+         end loop;\n+\n+         --  If Pos is less than Scale now, reset to equal Scale\n+\n+         Pos := Scale;\n+\n          Put_Digit (abs (X rem 10));\n       end Put_Int64;\n "}]}