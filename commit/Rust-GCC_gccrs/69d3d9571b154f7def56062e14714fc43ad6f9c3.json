{"sha": "69d3d9571b154f7def56062e14714fc43ad6f9c3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjlkM2Q5NTcxYjE1NGY3ZGVmNTYwNjJlMTQ3MTRmYzQzYWQ2ZjljMw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2011-11-09T12:22:17Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2011-11-09T12:22:17Z"}, "message": "vector.md (vcondv4sfv4si, [...]): New patterns.\n\n\t* config/rs6000/vector.md (vcondv4sfv4si, vcondv4siv4sf,\n\tvconduv4sfv4si): New patterns.\n\t* config/rs6000/rs6000.c (rs6000_emit_vector_cond_expr): Handle\n\tdifferent dest_mode from comparison mode.\n\n\t* lib/target-supports.exp (check_effective_target_vect_cond_mixed):\n\tEnable also for powerpc*-*-*.\n\nFrom-SVN: r181202", "tree": {"sha": "52146e4a5b1157ba06d8a4220c6f132fc6e415cc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/52146e4a5b1157ba06d8a4220c6f132fc6e415cc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/69d3d9571b154f7def56062e14714fc43ad6f9c3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69d3d9571b154f7def56062e14714fc43ad6f9c3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/69d3d9571b154f7def56062e14714fc43ad6f9c3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69d3d9571b154f7def56062e14714fc43ad6f9c3/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7298eef346ba82d3e4e0a97ffd50ffa6469272e8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7298eef346ba82d3e4e0a97ffd50ffa6469272e8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7298eef346ba82d3e4e0a97ffd50ffa6469272e8"}], "stats": {"total": 81, "additions": 78, "deletions": 3}, "files": [{"sha": "a418265979c2bc319518d46d8551c7af921c79fe", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69d3d9571b154f7def56062e14714fc43ad6f9c3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69d3d9571b154f7def56062e14714fc43ad6f9c3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=69d3d9571b154f7def56062e14714fc43ad6f9c3", "patch": "@@ -1,3 +1,10 @@\n+2011-11-09  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* config/rs6000/vector.md (vcondv4sfv4si, vcondv4siv4sf,\n+\tvconduv4sfv4si): New patterns.\n+\t* config/rs6000/rs6000.c (rs6000_emit_vector_cond_expr): Handle\n+\tdifferent dest_mode from comparison mode.\n+\n 2011-11-09  Richard Guenther  <rguenther@suse.de>\n \n \t* gimple-fold.c (canonicalize_constructor_val): Mark"}, {"sha": "89b79abc2f3cd7d9e957156beee9c49baf4a4940", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69d3d9571b154f7def56062e14714fc43ad6f9c3/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69d3d9571b154f7def56062e14714fc43ad6f9c3/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=69d3d9571b154f7def56062e14714fc43ad6f9c3", "patch": "@@ -16775,6 +16775,7 @@ rs6000_emit_vector_cond_expr (rtx dest, rtx op_true, rtx op_false,\n \t\t\t      rtx cond, rtx cc_op0, rtx cc_op1)\n {\n   enum machine_mode dest_mode = GET_MODE (dest);\n+  enum machine_mode mask_mode = GET_MODE (cc_op0);\n   enum rtx_code rcode = GET_CODE (cond);\n   enum machine_mode cc_mode = CCmode;\n   rtx mask;\n@@ -16785,6 +16786,9 @@ rs6000_emit_vector_cond_expr (rtx dest, rtx op_true, rtx op_false,\n   if (VECTOR_UNIT_NONE_P (dest_mode))\n     return 0;\n \n+  gcc_assert (GET_MODE_SIZE (dest_mode) == GET_MODE_SIZE (mask_mode)\n+\t      && GET_MODE_NUNITS (dest_mode) == GET_MODE_NUNITS (mask_mode));\n+\n   switch (rcode)\n     {\n       /* Swap operands if we can, and fall back to doing the operation as\n@@ -16815,7 +16819,7 @@ rs6000_emit_vector_cond_expr (rtx dest, rtx op_true, rtx op_false,\n     }\n \n   /* Get the vector mask for the given relational operations.  */\n-  mask = rs6000_emit_vector_compare (rcode, cc_op0, cc_op1, dest_mode);\n+  mask = rs6000_emit_vector_compare (rcode, cc_op0, cc_op1, mask_mode);\n \n   if (!mask)\n     return 0;\n@@ -16827,7 +16831,8 @@ rs6000_emit_vector_cond_expr (rtx dest, rtx op_true, rtx op_false,\n       op_false = tmp;\n     }\n \n-  cond2 = gen_rtx_fmt_ee (NE, cc_mode, mask, CONST0_RTX (dest_mode));\n+  cond2 = gen_rtx_fmt_ee (NE, cc_mode, gen_lowpart (dest_mode, mask),\n+\t\t\t  CONST0_RTX (dest_mode));\n   emit_insn (gen_rtx_SET (VOIDmode,\n \t\t\t  dest,\n \t\t\t  gen_rtx_IF_THEN_ELSE (dest_mode,"}, {"sha": "fc3f3e176c291461354dc8c3bb063cad9fa83e2d", "filename": "gcc/config/rs6000/vector.md", "status": "modified", "additions": 57, "deletions": 0, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69d3d9571b154f7def56062e14714fc43ad6f9c3/gcc%2Fconfig%2Frs6000%2Fvector.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69d3d9571b154f7def56062e14714fc43ad6f9c3/gcc%2Fconfig%2Frs6000%2Fvector.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fvector.md?ref=69d3d9571b154f7def56062e14714fc43ad6f9c3", "patch": "@@ -406,6 +406,44 @@\n     FAIL;\n }\")\n \n+(define_expand \"vcondv4sfv4si\"\n+  [(set (match_operand:V4SF 0 \"vfloat_operand\" \"\")\n+\t(if_then_else:V4SF\n+\t (match_operator 3 \"comparison_operator\"\n+\t\t\t [(match_operand:V4SI 4 \"vint_operand\" \"\")\n+\t\t\t  (match_operand:V4SI 5 \"vint_operand\" \"\")])\n+\t (match_operand:V4SF 1 \"vfloat_operand\" \"\")\n+\t (match_operand:V4SF 2 \"vfloat_operand\" \"\")))]\n+  \"VECTOR_UNIT_ALTIVEC_OR_VSX_P (V4SFmode)\n+   && VECTOR_UNIT_ALTIVEC_P (V4SImode)\"\n+  \"\n+{\n+  if (rs6000_emit_vector_cond_expr (operands[0], operands[1], operands[2],\n+\t\t\t\t    operands[3], operands[4], operands[5]))\n+    DONE;\n+  else\n+    FAIL;\n+}\")\n+\n+(define_expand \"vcondv4siv4sf\"\n+  [(set (match_operand:V4SI 0 \"vint_operand\" \"\")\n+\t(if_then_else:V4SI\n+\t (match_operator 3 \"comparison_operator\"\n+\t\t\t [(match_operand:V4SF 4 \"vfloat_operand\" \"\")\n+\t\t\t  (match_operand:V4SF 5 \"vfloat_operand\" \"\")])\n+\t (match_operand:V4SI 1 \"vint_operand\" \"\")\n+\t (match_operand:V4SI 2 \"vint_operand\" \"\")))]\n+  \"VECTOR_UNIT_ALTIVEC_OR_VSX_P (V4SFmode)\n+   && VECTOR_UNIT_ALTIVEC_P (V4SImode)\"\n+  \"\n+{\n+  if (rs6000_emit_vector_cond_expr (operands[0], operands[1], operands[2],\n+\t\t\t\t    operands[3], operands[4], operands[5]))\n+    DONE;\n+  else\n+    FAIL;\n+}\")\n+\n (define_expand \"vcondu<mode><mode>\"\n   [(set (match_operand:VEC_I 0 \"vint_operand\" \"\")\n \t(if_then_else:VEC_I\n@@ -424,6 +462,25 @@\n     FAIL;\n }\")\n \n+(define_expand \"vconduv4sfv4si\"\n+  [(set (match_operand:V4SF 0 \"vfloat_operand\" \"\")\n+\t(if_then_else:V4SF\n+\t (match_operator 3 \"comparison_operator\"\n+\t\t\t [(match_operand:V4SI 4 \"vint_operand\" \"\")\n+\t\t\t  (match_operand:V4SI 5 \"vint_operand\" \"\")])\n+\t (match_operand:V4SF 1 \"vfloat_operand\" \"\")\n+\t (match_operand:V4SF 2 \"vfloat_operand\" \"\")))]\n+  \"VECTOR_UNIT_ALTIVEC_OR_VSX_P (V4SFmode)\n+   && VECTOR_UNIT_ALTIVEC_P (V4SImode)\"\n+  \"\n+{\n+  if (rs6000_emit_vector_cond_expr (operands[0], operands[1], operands[2],\n+\t\t\t\t    operands[3], operands[4], operands[5]))\n+    DONE;\n+  else\n+    FAIL;\n+}\")\n+\n (define_expand \"vector_eq<mode>\"\n   [(set (match_operand:VEC_C 0 \"vlogical_operand\" \"\")\n \t(eq:VEC_C (match_operand:VEC_C 1 \"vlogical_operand\" \"\")"}, {"sha": "66a534b34359627ace1850a4c37e1e9dc445873b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69d3d9571b154f7def56062e14714fc43ad6f9c3/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69d3d9571b154f7def56062e14714fc43ad6f9c3/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=69d3d9571b154f7def56062e14714fc43ad6f9c3", "patch": "@@ -1,3 +1,8 @@\n+2011-11-09  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* lib/target-supports.exp (check_effective_target_vect_cond_mixed):\n+\tEnable also for powerpc*-*-*.\n+\n 2011-11-09  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n \n \tPR fortran/50540"}, {"sha": "61bae45c1f857723f05be12707a0dd82e15caa0e", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69d3d9571b154f7def56062e14714fc43ad6f9c3/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69d3d9571b154f7def56062e14714fc43ad6f9c3/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=69d3d9571b154f7def56062e14714fc43ad6f9c3", "patch": "@@ -3354,7 +3354,8 @@ proc check_effective_target_vect_cond_mixed { } {\n     } else {\n \tset et_vect_cond_mixed_saved 0\n \tif { [istarget i?86-*-*]\n-\t     || [istarget x86_64-*-*] } {\n+\t     || [istarget x86_64-*-*]\n+\t     || [istarget powerpc*-*-*] } {\n \t   set et_vect_cond_mixed_saved 1\n \t}\n     }"}]}