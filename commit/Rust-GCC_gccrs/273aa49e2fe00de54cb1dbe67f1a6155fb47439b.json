{"sha": "273aa49e2fe00de54cb1dbe67f1a6155fb47439b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjczYWE0OWUyZmUwMGRlNTRjYjFkYmU2N2YxYTYxNTVmYjQ3NDM5Yg==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2015-09-09T16:48:13Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2015-09-09T16:48:13Z"}, "message": "re PR c++/53184 (Unnecessary anonymous namespace warnings)\n\n2015-09-09  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/53184\n\t* doc/invoke.texi ([Wsubobject-linkage]): Document.\n\n/c-family\n2015-09-09  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/53184\n\t* c.opt ([Wsubobject-linkage]): Add.\n\n/cp\n2015-09-09  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/53184\n\t* decl2.c (constrain_class_visibility): Use Wsubobject-linkage.\n\n/testsuite\n2015-09-09  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/53184\n\t* g++.dg/warn/Wsubobject-linkage-1.C: New.\n\t* g++.dg/warn/Wsubobject-linkage-2.C: Likewise.\n\t* g++.dg/warn/Wsubobject-linkage-3.C: Likewise.\n\t* g++.dg/warn/Wsubobject-linkage-4.C: Likewise.\n\nFrom-SVN: r227593", "tree": {"sha": "0ad812fa2bbf444384d10521cdec8160614a07e0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0ad812fa2bbf444384d10521cdec8160614a07e0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/273aa49e2fe00de54cb1dbe67f1a6155fb47439b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/273aa49e2fe00de54cb1dbe67f1a6155fb47439b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/273aa49e2fe00de54cb1dbe67f1a6155fb47439b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/273aa49e2fe00de54cb1dbe67f1a6155fb47439b/comments", "author": null, "committer": null, "parents": [{"sha": "1842a04ce06a470b731bc9a29bfec17e6e147c3f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1842a04ce06a470b731bc9a29bfec17e6e147c3f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1842a04ce06a470b731bc9a29bfec17e6e147c3f"}], "stats": {"total": 111, "additions": 105, "deletions": 6}, "files": [{"sha": "44bf040fe513ffc91ee205562f5ad5f8afba6fb7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/273aa49e2fe00de54cb1dbe67f1a6155fb47439b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/273aa49e2fe00de54cb1dbe67f1a6155fb47439b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=273aa49e2fe00de54cb1dbe67f1a6155fb47439b", "patch": "@@ -1,3 +1,8 @@\n+2015-09-09  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/53184\n+\t* doc/invoke.texi ([Wsubobject-linkage]): Document.\n+\n 2015-09-09  Tom de Vries  <tom@codesourcery.com>\n \n \t* params-list.h: Add missing copyright notice."}, {"sha": "3acc84f433b3b03201464e93260958e741d6af25", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/273aa49e2fe00de54cb1dbe67f1a6155fb47439b/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/273aa49e2fe00de54cb1dbe67f1a6155fb47439b/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=273aa49e2fe00de54cb1dbe67f1a6155fb47439b", "patch": "@@ -1,3 +1,8 @@\n+2015-09-09  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/53184\n+\t* c.opt ([Wsubobject-linkage]): Add.\n+\n 2015-09-03  Martin Sebor  <msebor@redhat.com>\n \n \tPR c/66516"}, {"sha": "d519d7a000bf0c9aa15e436ff4c177fe74a2412c", "filename": "gcc/c-family/c.opt", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/273aa49e2fe00de54cb1dbe67f1a6155fb47439b/gcc%2Fc-family%2Fc.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/273aa49e2fe00de54cb1dbe67f1a6155fb47439b/gcc%2Fc-family%2Fc.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc.opt?ref=273aa49e2fe00de54cb1dbe67f1a6155fb47439b", "patch": "@@ -944,6 +944,11 @@ Wuseless-cast\n C++ ObjC++ Var(warn_useless_cast) Warning\n Warn about useless casts\n \n+Wsubobject-linkage\n+C++ ObjC++ Var(warn_subobject_linkage) Warning Init(1)\n+Warn if a class type has a base or a field whose type uses the anonymous\n+namespace or depends on a type with no linkage\n+\n ansi\n C ObjC C++ ObjC++\n A synonym for -std=c89 (for C) or -std=c++98 (for C++)"}, {"sha": "1cc576a3f22943a123804e7d18c3c61ddf34b189", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/273aa49e2fe00de54cb1dbe67f1a6155fb47439b/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/273aa49e2fe00de54cb1dbe67f1a6155fb47439b/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=273aa49e2fe00de54cb1dbe67f1a6155fb47439b", "patch": "@@ -1,3 +1,8 @@\n+2015-09-09  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/53184\n+\t* decl2.c (constrain_class_visibility): Use Wsubobject-linkage.\n+\n 2015-09-09  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/67504"}, {"sha": "6c1f0842331790a2f6582b7ae5e05ea59ebd1d6b", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 35, "deletions": 5, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/273aa49e2fe00de54cb1dbe67f1a6155fb47439b/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/273aa49e2fe00de54cb1dbe67f1a6155fb47439b/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=273aa49e2fe00de54cb1dbe67f1a6155fb47439b", "patch": "@@ -2564,10 +2564,25 @@ constrain_class_visibility (tree type)\n \n \tif (subvis == VISIBILITY_ANON)\n \t  {\n-\t    if (!in_main_input_context ())\n-\t      warning (0, \"\\\n+\t    if (!in_main_input_context())\n+\t      {\n+\t\ttree nlt = no_linkage_check (ftype, /*relaxed_p=*/false);\n+\t\tif (nlt)\n+\t\t  {\n+\t\t    if (same_type_p (TREE_TYPE (t), nlt))\n+\t\t      warning (OPT_Wsubobject_linkage, \"\\\n+%qT has a field %qD whose type has no linkage\",\n+\t\t\t       type, t);\n+\t\t    else\n+\t\t      warning (OPT_Wsubobject_linkage, \"\\\n+%qT has a field %qD whose type depends on the type %qT which has no linkage\",\n+\t\t\t       type, t, nlt);\n+\t\t  }\n+\t\telse\n+\t\t  warning (OPT_Wsubobject_linkage, \"\\\n %qT has a field %qD whose type uses the anonymous namespace\",\n-\t\t       type, t);\n+\t\t\t   type, t);\n+\t      }\n \t  }\n \telse if (MAYBE_CLASS_TYPE_P (ftype)\n \t\t && vis < VISIBILITY_HIDDEN\n@@ -2585,9 +2600,24 @@ constrain_class_visibility (tree type)\n       if (subvis == VISIBILITY_ANON)\n         {\n \t  if (!in_main_input_context())\n-\t    warning (0, \"\\\n+\t    {\n+\t      tree nlt = no_linkage_check (TREE_TYPE (t), /*relaxed_p=*/false);\n+\t      if (nlt)\n+\t\t{\n+\t\t  if (same_type_p (TREE_TYPE (t), nlt))\n+\t\t    warning (OPT_Wsubobject_linkage, \"\\\n+%qT has a base %qT whose type has no linkage\",\n+\t\t\t     type, TREE_TYPE (t));\n+\t\t  else\n+\t\t    warning (OPT_Wsubobject_linkage, \"\\\n+%qT has a base %qT whose type depends on the type %qT which has no linkage\",\n+\t\t\t     type, TREE_TYPE (t), nlt);\n+\t\t}\n+\t      else\n+\t\twarning (OPT_Wsubobject_linkage, \"\\\n %qT has a base %qT whose type uses the anonymous namespace\",\n-\t\t     type, TREE_TYPE (t));\n+\t\t\t type, TREE_TYPE (t));\n+\t    }\n \t}\n       else if (vis < VISIBILITY_HIDDEN\n \t       && subvis >= VISIBILITY_HIDDEN)"}, {"sha": "403cebe2c15d55bf25893f8f86b3ad3bd794d867", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/273aa49e2fe00de54cb1dbe67f1a6155fb47439b/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/273aa49e2fe00de54cb1dbe67f1a6155fb47439b/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=273aa49e2fe00de54cb1dbe67f1a6155fb47439b", "patch": "@@ -282,7 +282,7 @@ Objective-C and Objective-C++ Dialects}.\n -Wstrict-aliasing=n @gol -Wstrict-overflow -Wstrict-overflow=@var{n} @gol\n -Wsuggest-attribute=@r{[}pure@r{|}const@r{|}noreturn@r{|}format@r{]} @gol\n -Wsuggest-final-types @gol -Wsuggest-final-methods -Wsuggest-override @gol\n--Wmissing-format-attribute @gol\n+-Wmissing-format-attribute -Wsubobject-linkage @gol\n -Wswitch  -Wswitch-default  -Wswitch-enum -Wswitch-bool -Wsync-nand @gol\n -Wsystem-headers  -Wtautological-compare  -Wtrampolines  -Wtrigraphs @gol\n -Wtype-limits  -Wundef @gol\n@@ -4923,6 +4923,13 @@ types. @option{-Wconversion-null} is enabled by default.\n Warn when a literal '0' is used as null pointer constant.  This can\n be useful to facilitate the conversion to @code{nullptr} in C++11.\n \n+@item -Wsubobject-linkage @r{(C++ and Objective-C++ only)}\n+@opindex Wsubobject-linkage\n+@opindex Wno-subobject-linkage\n+Warn if a class type has a base or a field whose type uses the anonymous\n+namespace or depends on a type with no linkage.  This warning is\n+enabled by default.\n+\n @item -Wdate-time\n @opindex Wdate-time\n @opindex Wno-date-time"}, {"sha": "8215fbea23f23e7622a6d9bfa7f133a11b2dd4ef", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/273aa49e2fe00de54cb1dbe67f1a6155fb47439b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/273aa49e2fe00de54cb1dbe67f1a6155fb47439b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=273aa49e2fe00de54cb1dbe67f1a6155fb47439b", "patch": "@@ -1,3 +1,11 @@\n+2015-09-09  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/53184\n+\t* g++.dg/warn/Wsubobject-linkage-1.C: New.\n+\t* g++.dg/warn/Wsubobject-linkage-2.C: Likewise.\n+\t* g++.dg/warn/Wsubobject-linkage-3.C: Likewise.\n+\t* g++.dg/warn/Wsubobject-linkage-4.C: Likewise.\n+\n 2015-09-09  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \t* gcc.target/aarch64/mod_2.x: New file."}, {"sha": "adcaa6dbdafbcaf47df9613361ba4e883ed0d9fb", "filename": "gcc/testsuite/g++.dg/warn/Wsubobject-linkage-1.C", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/273aa49e2fe00de54cb1dbe67f1a6155fb47439b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWsubobject-linkage-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/273aa49e2fe00de54cb1dbe67f1a6155fb47439b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWsubobject-linkage-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWsubobject-linkage-1.C?ref=273aa49e2fe00de54cb1dbe67f1a6155fb47439b", "patch": "@@ -0,0 +1,9 @@\n+// PR c++/53184\n+\n+typedef volatile struct { } Foo;\n+\n+#line 6 \"foo.C\"\n+struct Bar { Foo foo; };   // { dg-warning \"no linkage\" }\n+// { dg-bogus \"anonymous namespace\" \"\" { target *-*-* } 6 }\n+struct Bar2 : Foo { };     // { dg-warning \"no linkage\" }\n+// { dg-bogus \"anonymous namespace\" \"\" { target *-*-* } 8 }"}, {"sha": "4bb255c79a155e25c08049de055bcb6863bad698", "filename": "gcc/testsuite/g++.dg/warn/Wsubobject-linkage-2.C", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/273aa49e2fe00de54cb1dbe67f1a6155fb47439b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWsubobject-linkage-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/273aa49e2fe00de54cb1dbe67f1a6155fb47439b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWsubobject-linkage-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWsubobject-linkage-2.C?ref=273aa49e2fe00de54cb1dbe67f1a6155fb47439b", "patch": "@@ -0,0 +1,8 @@\n+// PR c++/53184\n+// { dg-options \"-Wno-subobject-linkage\" }\n+\n+typedef volatile struct { } Foo;\n+\n+#line 7 \"foo.C\"\n+struct Bar { Foo foo; };\n+struct Bar2 : Foo { };"}, {"sha": "e9acb633a1c650441eb939b30e47e4b27d315644", "filename": "gcc/testsuite/g++.dg/warn/Wsubobject-linkage-3.C", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/273aa49e2fe00de54cb1dbe67f1a6155fb47439b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWsubobject-linkage-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/273aa49e2fe00de54cb1dbe67f1a6155fb47439b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWsubobject-linkage-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWsubobject-linkage-3.C?ref=273aa49e2fe00de54cb1dbe67f1a6155fb47439b", "patch": "@@ -0,0 +1,9 @@\n+// PR c++/53184\n+\n+namespace { struct Foo { }; }\n+\n+#line 6 \"foo.C\"\n+struct Bar { Foo foo; };   // { dg-warning \"anonymous namespace\" }\n+// { dg-bogus \"no linkage\" \"\" { target *-*-* } 6 }\n+struct Bar2 : Foo { };     // { dg-warning \"anonymous namespace\" }\n+// { dg-bogus \"no linkage\" \"\" { target *-*-* } 8 }"}, {"sha": "033bc473005bbe44b35f02978d9da31177b5626e", "filename": "gcc/testsuite/g++.dg/warn/Wsubobject-linkage-4.C", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/273aa49e2fe00de54cb1dbe67f1a6155fb47439b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWsubobject-linkage-4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/273aa49e2fe00de54cb1dbe67f1a6155fb47439b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWsubobject-linkage-4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWsubobject-linkage-4.C?ref=273aa49e2fe00de54cb1dbe67f1a6155fb47439b", "patch": "@@ -0,0 +1,8 @@\n+// PR c++/53184\n+// { dg-options \"-Wno-subobject-linkage\" }\n+\n+namespace { struct Foo { }; }\n+\n+#line 7 \"foo.C\"\n+struct Bar { Foo foo; };\n+struct Bar2 : Foo { };"}]}