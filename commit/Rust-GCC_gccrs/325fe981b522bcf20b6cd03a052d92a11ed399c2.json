{"sha": "325fe981b522bcf20b6cd03a052d92a11ed399c2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzI1ZmU5ODFiNTIyYmNmMjBiNmNkMDNhMDUyZDkyYTExZWQzOTljMg==", "commit": {"author": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2014-11-14T15:48:47Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2014-11-14T15:48:47Z"}, "message": "optc-save-gen.awk: Output cl_target_option_eq...\n\n\n\t* optc-save-gen.awk: Output cl_target_option_eq,\n\tcl_target_option_hash, cl_target_option_stream_out,\n\tcl_target_option_stream_in functions.\n\t* opth-gen.awk: Output prototypes for\n\tcl_target_option_eq and cl_target_option_hash.\n\t* lto-streamer.h (cl_target_option_stream_out,\n\tcl_target_option_stream_in): Declare.\n\t* tree.c (cl_option_hash_hash): Use cl_target_option_hash.\n\t(cl_option_hash_eq): Use cl_target_option_eq.\n\t* tree-streamer-in.c (unpack_value_fields): Stream in\n\tTREE_TARGET_OPTION.\n\t* lto-streamer-out.c (DFS::DFS_write_tree_body): Follow\n\tDECL_FUNCTION_SPECIFIC_TARGET.\n\t(hash_tree): Hash TREE_TARGET_OPTION; visit\n\tDECL_FUNCTION_SPECIFIC_TARGET.\n\t* tree-streamer-out.c (streamer_pack_tree_bitfields): Skip\n\tTS_TARGET_OPTION.\n\t(streamer_write_tree_body): Output TS_TARGET_OPTION.\n\n\t* lto.c (compare_tree_sccs_1): Compare cl_target_option_eq.\n\nFrom-SVN: r217572", "tree": {"sha": "0e2bcb2312d855afe5e9758f5e7a00527e326393", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0e2bcb2312d855afe5e9758f5e7a00527e326393"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/325fe981b522bcf20b6cd03a052d92a11ed399c2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/325fe981b522bcf20b6cd03a052d92a11ed399c2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/325fe981b522bcf20b6cd03a052d92a11ed399c2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/325fe981b522bcf20b6cd03a052d92a11ed399c2/comments", "author": null, "committer": null, "parents": [{"sha": "54e774c010842d336124426aec671a96712cc1d7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54e774c010842d336124426aec671a96712cc1d7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/54e774c010842d336124426aec671a96712cc1d7"}], "stats": {"total": 14, "additions": 11, "deletions": 3}, "files": [{"sha": "f376a30dac06057691754942dc534487604ee277", "filename": "gcc/lto-streamer-out.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/325fe981b522bcf20b6cd03a052d92a11ed399c2/gcc%2Flto-streamer-out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/325fe981b522bcf20b6cd03a052d92a11ed399c2/gcc%2Flto-streamer-out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-streamer-out.c?ref=325fe981b522bcf20b6cd03a052d92a11ed399c2", "patch": "@@ -594,7 +594,7 @@ DFS::DFS_write_tree_body (struct output_block *ob,\n     {\n       DFS_follow_tree_edge (DECL_VINDEX (expr));\n       DFS_follow_tree_edge (DECL_FUNCTION_PERSONALITY (expr));\n-      /* Do not DECL_FUNCTION_SPECIFIC_TARGET.  They will be regenerated.  */\n+      DFS_follow_tree_edge (DECL_FUNCTION_SPECIFIC_TARGET (expr));\n       DFS_follow_tree_edge (DECL_FUNCTION_SPECIFIC_OPTIMIZATION (expr));\n     }\n \n@@ -945,7 +945,7 @@ hash_tree (struct streamer_tree_cache_d *cache, hash_map<tree, hashval_t> *map,\n \t\t\tstrlen (TRANSLATION_UNIT_LANGUAGE (t)));\n \n   if (CODE_CONTAINS_STRUCT (code, TS_TARGET_OPTION))\n-    gcc_unreachable ();\n+    hstate.add_wide_int (cl_target_option_hash (TREE_TARGET_OPTION (t)));\n \n   if (CODE_CONTAINS_STRUCT (code, TS_OPTIMIZATION))\n     hstate.add (t, sizeof (struct cl_optimization));\n@@ -1028,7 +1028,7 @@ hash_tree (struct streamer_tree_cache_d *cache, hash_map<tree, hashval_t> *map,\n     {\n       visit (DECL_VINDEX (t));\n       visit (DECL_FUNCTION_PERSONALITY (t));\n-      /* Do not follow DECL_FUNCTION_SPECIFIC_TARGET.  */\n+      visit (DECL_FUNCTION_SPECIFIC_TARGET (t));\n       visit (DECL_FUNCTION_SPECIFIC_OPTIMIZATION (t));\n     }\n "}, {"sha": "8e5ee628e12f9a05e26f0ac4cdc7955184e175e9", "filename": "gcc/lto-streamer.h", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/325fe981b522bcf20b6cd03a052d92a11ed399c2/gcc%2Flto-streamer.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/325fe981b522bcf20b6cd03a052d92a11ed399c2/gcc%2Flto-streamer.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-streamer.h?ref=325fe981b522bcf20b6cd03a052d92a11ed399c2", "patch": "@@ -836,6 +836,14 @@ bool reachable_from_this_partition_p (struct cgraph_node *,\n lto_symtab_encoder_t compute_ltrans_boundary (lto_symtab_encoder_t encoder);\n void select_what_to_stream (bool);\n \n+/* In options-save.c.  */\n+void cl_target_option_stream_out (struct output_block *, struct bitpack_d *,\n+\t\t\t\t  struct cl_target_option *);\n+\n+void cl_target_option_stream_in (struct data_in *,\n+\t\t\t\t struct bitpack_d *,\n+\t\t\t\t struct cl_target_option *);\n+\n \n /* In lto-symtab.c.  */\n extern void lto_symtab_merge_decls (void);"}]}