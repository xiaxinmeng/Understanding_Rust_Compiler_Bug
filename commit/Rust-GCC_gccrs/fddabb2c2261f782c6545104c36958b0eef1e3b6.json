{"sha": "fddabb2c2261f782c6545104c36958b0eef1e3b6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmRkYWJiMmMyMjYxZjc4MmM2NTQ1MTA0YzM2OTU4YjBlZWYxZTNiNg==", "commit": {"author": {"name": "Giovanni Bajo", "email": "giovannibajo@gcc.gnu.org", "date": "2004-07-06T10:51:08Z"}, "committer": {"name": "Giovanni Bajo", "email": "giovannibajo@gcc.gnu.org", "date": "2004-07-06T10:51:08Z"}, "message": "re PR c++/3671 (cannot deduce enum template parameter with multiple overloads)\n\n\tPR c++/3671\n\t* pt.c (convert_nontype_argument): Disallow conversions between\n\tdifferent enumeration types.\n\n\tPR c++/3671\n\t* g++.dg/template/spec14.C: New test.\n\nFrom-SVN: r84150", "tree": {"sha": "6857372bf97f5126f821d5886fbb5d1a6937ccf1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6857372bf97f5126f821d5886fbb5d1a6937ccf1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fddabb2c2261f782c6545104c36958b0eef1e3b6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fddabb2c2261f782c6545104c36958b0eef1e3b6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fddabb2c2261f782c6545104c36958b0eef1e3b6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fddabb2c2261f782c6545104c36958b0eef1e3b6/comments", "author": {"login": "rasky", "id": 1014109, "node_id": "MDQ6VXNlcjEwMTQxMDk=", "avatar_url": "https://avatars.githubusercontent.com/u/1014109?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rasky", "html_url": "https://github.com/rasky", "followers_url": "https://api.github.com/users/rasky/followers", "following_url": "https://api.github.com/users/rasky/following{/other_user}", "gists_url": "https://api.github.com/users/rasky/gists{/gist_id}", "starred_url": "https://api.github.com/users/rasky/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rasky/subscriptions", "organizations_url": "https://api.github.com/users/rasky/orgs", "repos_url": "https://api.github.com/users/rasky/repos", "events_url": "https://api.github.com/users/rasky/events{/privacy}", "received_events_url": "https://api.github.com/users/rasky/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rasky", "id": 1014109, "node_id": "MDQ6VXNlcjEwMTQxMDk=", "avatar_url": "https://avatars.githubusercontent.com/u/1014109?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rasky", "html_url": "https://github.com/rasky", "followers_url": "https://api.github.com/users/rasky/followers", "following_url": "https://api.github.com/users/rasky/following{/other_user}", "gists_url": "https://api.github.com/users/rasky/gists{/gist_id}", "starred_url": "https://api.github.com/users/rasky/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rasky/subscriptions", "organizations_url": "https://api.github.com/users/rasky/orgs", "repos_url": "https://api.github.com/users/rasky/repos", "events_url": "https://api.github.com/users/rasky/events{/privacy}", "received_events_url": "https://api.github.com/users/rasky/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2da8f02333e9f0eb20457f4cb4ebbe74a02f5c83", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2da8f02333e9f0eb20457f4cb4ebbe74a02f5c83", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2da8f02333e9f0eb20457f4cb4ebbe74a02f5c83"}], "stats": {"total": 38, "additions": 37, "deletions": 1}, "files": [{"sha": "f6982704c2e60654d4f564039cb0ea87211298aa", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fddabb2c2261f782c6545104c36958b0eef1e3b6/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fddabb2c2261f782c6545104c36958b0eef1e3b6/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=fddabb2c2261f782c6545104c36958b0eef1e3b6", "patch": "@@ -1,3 +1,9 @@\n+2004-07-06  Giovanni Bajo  <giovannibajo@gcc.gnu.org>\n+\n+\tPR c++/3671\n+\t* pt.c (convert_nontype_argument): Disallow conversions between\n+\tdifferent enumeration types.\n+\n 2004-07-06  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* cp-tree.h (BINFO_MARKED): Remove."}, {"sha": "0a43edead936008eef603afc99734ac21f134fcc", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fddabb2c2261f782c6545104c36958b0eef1e3b6/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fddabb2c2261f782c6545104c36958b0eef1e3b6/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=fddabb2c2261f782c6545104c36958b0eef1e3b6", "patch": "@@ -3323,7 +3323,14 @@ convert_nontype_argument (tree type, tree expr)\n          conversions (_conv.integral_) are applied.  */\n       if (!INTEGRAL_TYPE_P (expr_type))\n \treturn error_mark_node;\n-      \n+\n+      /* [conv.integral] does not allow conversions between two different\n+\t enumeration types.  */\n+      if (TREE_CODE (type) == ENUMERAL_TYPE\n+\t  && TREE_CODE (expr_type) == ENUMERAL_TYPE\n+\t  && !same_type_ignoring_top_level_qualifiers_p (type, expr_type))\n+\t  return error_mark_node;\n+\n       /* It's safe to call digest_init in this case; we know we're\n \t just converting one integral constant expression to another.  */\n       expr = digest_init (type, expr, (tree*) 0);"}, {"sha": "4f62f1a2199bd799c6710dfa997855a1a58adfd2", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fddabb2c2261f782c6545104c36958b0eef1e3b6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fddabb2c2261f782c6545104c36958b0eef1e3b6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=fddabb2c2261f782c6545104c36958b0eef1e3b6", "patch": "@@ -1,3 +1,8 @@\n+2004-07-06  Giovanni Bajo  <giovannibajo@gcc.gnu.org>\n+\n+\tPR c++/3671\n+\t* g++.dg/template/spec14.C: New test.\n+\n 2004-07-05  Jakub Jelinek  <jakub@redhat.com>\n \n \t* gcc.c-torture/execute/20040629-1.c (FIELDS1, FIELDS2): Define to"}, {"sha": "9b59565c465444392831eb3c6f556ccd39a71257", "filename": "gcc/testsuite/g++.dg/template/spec14.C", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fddabb2c2261f782c6545104c36958b0eef1e3b6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fspec14.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fddabb2c2261f782c6545104c36958b0eef1e3b6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fspec14.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fspec14.C?ref=fddabb2c2261f782c6545104c36958b0eef1e3b6", "patch": "@@ -0,0 +1,18 @@\n+// { dg-do compile }\n+// Origin: <weissr at informatik dot uni-tuebingen dot de>\n+// PR c++/3671: Non-type enum parameters must not be converted\n+\n+enum T1 {a};\n+enum T2 {b};\n+\n+struct Y {\n+  template <T1 i> void foo() {}\n+  template <T2 i> void foo() {}\n+};\n+\n+struct Z {\n+  template <T1 i> void foo() {}\n+};\n+\n+template void Y::foo<b> ();\n+template void Z::foo<b> ();   // { dg-error \"\" }"}]}