{"sha": "3fd6b9cc8bb19571726203e309e0b2472e6b8e43", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2ZkNmI5Y2M4YmIxOTU3MTcyNjIwM2UzMDllMGIyNDcyZTZiOGU0Mw==", "commit": {"author": {"name": "Jiong Wang", "email": "jiong.wang@arm.com", "date": "2016-05-27T12:57:06Z"}, "committer": {"name": "Jiong Wang", "email": "jiwang@gcc.gnu.org", "date": "2016-05-27T12:57:06Z"}, "message": "[AArch64] Enable tree-stdarg pass for AArch64 by defining counter fields\n\ngcc/\n\t* config/aarch64/aarch64.c (aarch64_build_builtin_va_list): Initialize\n\tva_list_gpr_counter_field and va_list_fpr_counter_field.\n\ngcc/testsuite/\n\t* gcc.dg/tree-ssa/stdarg-2.c: Enable all testcases for AArch64.\n\t* gcc.dg/tree-ssa/stdarg-3.c: Likewise.\n\t* gcc.dg/tree-ssa/stdarg-4.c: Likewise.\n\t* gcc.dg/tree-ssa/stdarg-5.c: Likewise.\n\t* gcc.dg/tree-ssa/stdarg-6.c: Likewise.\n\nFrom-SVN: r236818", "tree": {"sha": "99f80a82dc429582d1aec158fa6de1eb9f53a870", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/99f80a82dc429582d1aec158fa6de1eb9f53a870"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3fd6b9cc8bb19571726203e309e0b2472e6b8e43", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3fd6b9cc8bb19571726203e309e0b2472e6b8e43", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3fd6b9cc8bb19571726203e309e0b2472e6b8e43", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3fd6b9cc8bb19571726203e309e0b2472e6b8e43/comments", "author": null, "committer": null, "parents": [{"sha": "f6e0013a3c08b4a6a8d4dade8f842a2e4ae3f495", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6e0013a3c08b4a6a8d4dade8f842a2e4ae3f495", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f6e0013a3c08b4a6a8d4dade8f842a2e4ae3f495"}], "stats": {"total": 58, "additions": 58, "deletions": 0}, "files": [{"sha": "4e9498beb34b0984b1d5e9eef39fa9bb44a3cea1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3fd6b9cc8bb19571726203e309e0b2472e6b8e43/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3fd6b9cc8bb19571726203e309e0b2472e6b8e43/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3fd6b9cc8bb19571726203e309e0b2472e6b8e43", "patch": "@@ -1,3 +1,8 @@\n+2016-05-27  Jiong Wang  <jiong.wang@arm.com>\n+\n+\t* config/aarch64/aarch64.c (aarch64_build_builtin_va_list): Initialize\n+\tva_list_gpr_counter_field and va_list_fpr_counter_field.\n+\n 2016-05-27  Wilco Dijkstra  <wdijkstr@arm.com>\n \n \tPR67609"}, {"sha": "abb2b7b2bc2ba15bf3cca5cc53518a86f0eb58a7", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3fd6b9cc8bb19571726203e309e0b2472e6b8e43/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3fd6b9cc8bb19571726203e309e0b2472e6b8e43/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=3fd6b9cc8bb19571726203e309e0b2472e6b8e43", "patch": "@@ -9330,6 +9330,13 @@ aarch64_build_builtin_va_list (void)\n \t\t\tFIELD_DECL, get_identifier (\"__vr_offs\"),\n \t\t\tinteger_type_node);\n \n+  /* Tell tree-stdarg pass what's our internal offset fields.\n+     NOTE: va_list_gpr/fpr_counter_field are only used for tree comparision\n+     purpose to identify whether the code is updating va_list internal\n+     offset fields through irregular way.  */\n+  va_list_gpr_counter_field = f_groff;\n+  va_list_fpr_counter_field = f_vroff;\n+\n   DECL_ARTIFICIAL (f_stack) = 1;\n   DECL_ARTIFICIAL (f_grtop) = 1;\n   DECL_ARTIFICIAL (f_vrtop) = 1;"}, {"sha": "dece85ffe4e6e55d6ff5f97b524cf013de997241", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3fd6b9cc8bb19571726203e309e0b2472e6b8e43/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3fd6b9cc8bb19571726203e309e0b2472e6b8e43/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3fd6b9cc8bb19571726203e309e0b2472e6b8e43", "patch": "@@ -1,3 +1,11 @@\n+2016-05-27  Jiong Wang  <jiong.wang@arm.com>\n+\n+\t* gcc.dg/tree-ssa/stdarg-2.c: Enable all testcases for AArch64.\n+\t* gcc.dg/tree-ssa/stdarg-3.c: Likewise.\n+\t* gcc.dg/tree-ssa/stdarg-4.c: Likewise.\n+\t* gcc.dg/tree-ssa/stdarg-5.c: Likewise.\n+\t* gcc.dg/tree-ssa/stdarg-6.c: Likewise.\n+\n 2016-05-27  Marek Polacek  <polacek@redhat.com>\n \n \tPR middle-end/71308"}, {"sha": "0224997f18af44a416b4f7c85f1e6545d831ca92", "filename": "gcc/testsuite/gcc.dg/tree-ssa/stdarg-2.c", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3fd6b9cc8bb19571726203e309e0b2472e6b8e43/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fstdarg-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3fd6b9cc8bb19571726203e309e0b2472e6b8e43/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fstdarg-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fstdarg-2.c?ref=3fd6b9cc8bb19571726203e309e0b2472e6b8e43", "patch": "@@ -25,6 +25,7 @@ f1 (int i, ...)\n /* { dg-final { scan-tree-dump \"f1: va_list escapes 0, needs to save 0 GPR units and 0 FPR units\" \"stdarg\" { target { powerpc*-*-linux* && ilp32 } } } } */\n /* { dg-final { scan-tree-dump \"f1: va_list escapes 0, needs to save 0 GPR units and 0 FPR units\" \"stdarg\" { target alpha*-*-linux* } } } */\n /* { dg-final { scan-tree-dump \"f1: va_list escapes 0, needs to save 0 GPR units and 0 FPR units\" \"stdarg\" { target s390*-*-linux* } } } */\n+/* { dg-final { scan-tree-dump \"f1: va_list escapes 0, needs to save 0 GPR units and 0 FPR units\" \"stdarg\" { target aarch64*-*-* } } } */\n /* { dg-final { scan-tree-dump \"f1: va_list escapes 0, needs to save 0 GPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } } */\n /* { dg-final { scan-tree-dump \"f1: va_list escapes 0, needs to save 0 GPR units\" \"stdarg\" { target ia64-*-* } } } */\n /* { dg-final { scan-tree-dump \"f1: va_list escapes 0, needs to save 0 GPR units\" \"stdarg\" { target { powerpc*-*-* && lp64 } } } } */\n@@ -45,6 +46,7 @@ f2 (int i, ...)\n /* { dg-final { scan-tree-dump \"f2: va_list escapes 0, needs to save \\[148\\] GPR units and 0 FPR units\" \"stdarg\" { target { powerpc*-*-linux* && ilp32 } } } } */\n /* { dg-final { scan-tree-dump \"f2: va_list escapes 0, needs to save 8 GPR units and 1\" \"stdarg\" { target alpha*-*-linux* } } } */\n /* { dg-final { scan-tree-dump \"f2: va_list escapes 0, needs to save 1 GPR units and 0 FPR units\" \"stdarg\" { target s390*-*-linux* } } } */\n+/* { dg-final { scan-tree-dump \"f2: va_list escapes 0, needs to save 8 GPR units and 0 FPR units\" \"stdarg\" { target aarch64*-*-* } } } */\n /* { dg-final { scan-tree-dump \"f2: va_list escapes 0, needs to save \\[148\\] GPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } } */\n /* { dg-final { scan-tree-dump \"f2: va_list escapes 0, needs to save \\[148\\] GPR units\" \"stdarg\" { target ia64-*-* } } } */\n /* { dg-final { scan-tree-dump \"f2: va_list escapes 0, needs to save \\[148\\] GPR units\" \"stdarg\" { target { powerpc*-*-* && lp64 } } } } */\n@@ -60,6 +62,7 @@ f3 (int i, ...)\n /* { dg-final { scan-tree-dump \"f3: va_list escapes 0, needs to save 0 GPR units and \\[1-9\\]\\[0-9\\]* FPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && { ! { ia32 || llp64 } } } } } } */\n /* { dg-final { scan-tree-dump \"f3: va_list escapes 0, needs to save 0 GPR units and \\[1-9\\]\\[0-9\\]* FPR units\" \"stdarg\" { target { powerpc*-*-linux* && { powerpc_fprs && ilp32 } } } } } */\n /* { dg-final { scan-tree-dump \"f3: va_list escapes 0, needs to save 0 GPR units and 1 FPR units\" \"stdarg\" { target s390*-*-linux* } } } */\n+/* { dg-final { scan-tree-dump \"f3: va_list escapes 0, needs to save 0 GPR units and 16 FPR units\" \"stdarg\" { target aarch64*-*-* } } } */\n /* { dg-final { scan-tree-dump \"f3: va_list escapes 0, needs to save 8 GPR units and 2\" \"stdarg\" { target alpha*-*-linux* } } } */\n /* { dg-final { scan-tree-dump \"f3: va_list escapes 0, needs to save \\[1-9\\]\\[0-9\\]* GPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } } */\n /* { dg-final { scan-tree-dump \"f3: va_list escapes 0, needs to save \\[1-9\\]\\[0-9\\]* GPR units\" \"stdarg\" { target ia64-*-* } } } */\n@@ -78,6 +81,7 @@ f4 (int i, ...)\n /* { dg-final { scan-tree-dump \"f4: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target { powerpc*-*-linux* && ilp32 } } } } */\n /* { dg-final { scan-tree-dump \"f4: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target alpha*-*-linux* } } } */\n /* { dg-final { scan-tree-dump \"f4: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target s390*-*-linux* } } } */\n+/* { dg-final { scan-tree-dump \"f4: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target aarch64*-*-* } } } */\n /* { dg-final { scan-tree-dump \"f4: va_list escapes 1, needs to save all GPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } } */\n /* { dg-final { scan-tree-dump \"f4: va_list escapes 1, needs to save all GPR units\" \"stdarg\" { target ia64-*-* } } } */\n /* { dg-final { scan-tree-dump \"f4: va_list escapes 1, needs to save all GPR units\" \"stdarg\" { target { powerpc*-*-* && lp64 } } } } */\n@@ -96,6 +100,7 @@ f5 (int i, ...)\n /* { dg-final { scan-tree-dump \"f5: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target { powerpc*-*-linux* && ilp32 } } } } */\n /* { dg-final { scan-tree-dump \"f5: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target alpha*-*-linux* } } } */\n /* { dg-final { scan-tree-dump \"f5: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target s390*-*-linux* } } } */\n+/* { dg-final { scan-tree-dump \"f5: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target aarch64*-*-* } } } */\n /* { dg-final { scan-tree-dump \"f5: va_list escapes 1, needs to save all GPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } } */\n /* { dg-final { scan-tree-dump \"f5: va_list escapes 1, needs to save all GPR units\" \"stdarg\" { target ia64-*-* } } } */\n /* { dg-final { scan-tree-dump \"f5: va_list escapes 1, needs to save all GPR units\" \"stdarg\" { target { powerpc*-*-* && lp64 } } } } */\n@@ -116,6 +121,7 @@ f6 (int i, ...)\n /* { dg-final { scan-tree-dump \"f6: va_list escapes 0, needs to save (3|12|24) GPR units and 0 FPR units\" \"stdarg\" { target { powerpc*-*-linux* && ilp32 } } } } */\n /* { dg-final { scan-tree-dump \"f6: va_list escapes 0, needs to save 24 GPR units and 1\" \"stdarg\" { target alpha*-*-linux* } } } */\n /* { dg-final { scan-tree-dump \"f6: va_list escapes 0, needs to save 3 GPR units and 0 FPR units\" \"stdarg\" { target s390*-*-linux* } } } */\n+/* { dg-final { scan-tree-dump \"f6: va_list escapes 0, needs to save 24 GPR units and 0 FPR units\" \"stdarg\" { target aarch64*-*-* } } } */\n /* { dg-final { scan-tree-dump \"f6: va_list escapes 0, needs to save (3|12|24) GPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } } */\n /* { dg-final { scan-tree-dump \"f6: va_list escapes 0, needs to save (3|12|24) GPR units\" \"stdarg\" { target ia64-*-* } } } */\n /* { dg-final { scan-tree-dump \"f6: va_list escapes 0, needs to save (3|12|24) GPR units\" \"stdarg\" { target { powerpc*-*-* && lp64 } } } } */\n@@ -133,6 +139,7 @@ f7 (int i, ...)\n /* { dg-final { scan-tree-dump \"f7: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target { powerpc*-*-linux* && ilp32 } } } } */\n /* { dg-final { scan-tree-dump \"f7: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target alpha*-*-linux* } } } */\n /* { dg-final { scan-tree-dump \"f7: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target s390*-*-linux* } } } */\n+/* { dg-final { scan-tree-dump \"f7: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target aarch64*-*-* } } } */\n /* { dg-final { scan-tree-dump \"f7: va_list escapes 1, needs to save all GPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } } */\n /* { dg-final { scan-tree-dump \"f7: va_list escapes 1, needs to save all GPR units\" \"stdarg\" { target ia64-*-* } } } */\n /* { dg-final { scan-tree-dump \"f7: va_list escapes 1, needs to save all GPR units\" \"stdarg\" { target { powerpc*-*-* && lp64 } } } } */\n@@ -152,6 +159,7 @@ f8 (int i, ...)\n /* { dg-final { scan-tree-dump \"f8: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target { powerpc*-*-linux* && ilp32 } } } } */\n /* { dg-final { scan-tree-dump \"f8: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target alpha*-*-linux* } } } */\n /* { dg-final { scan-tree-dump \"f8: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target s390*-*-linux* } } } */\n+/* { dg-final { scan-tree-dump \"f8: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target aarch64*-*-* } } } */\n /* { dg-final { scan-tree-dump \"f8: va_list escapes 1, needs to save all GPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } } */\n /* { dg-final { scan-tree-dump \"f8: va_list escapes 1, needs to save all GPR units\" \"stdarg\" { target ia64-*-* } } } */\n /* { dg-final { scan-tree-dump \"f8: va_list escapes 1, needs to save all GPR units\" \"stdarg\" { target { powerpc*-*-* && lp64 } } } } */\n@@ -169,6 +177,7 @@ f9 (int i, ...)\n /* { dg-final { scan-tree-dump \"f9: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target { powerpc*-*-linux* && ilp32 } } } } */\n /* { dg-final { scan-tree-dump \"f9: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target alpha*-*-linux* } } } */\n /* { dg-final { scan-tree-dump \"f9: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target s390*-*-linux* } } } */\n+/* { dg-final { scan-tree-dump \"f9: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target aarch64*-*-* } } } */\n /* { dg-final { scan-tree-dump \"f9: va_list escapes 1, needs to save all GPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } } */\n /* { dg-final { scan-tree-dump \"f9: va_list escapes 1, needs to save all GPR units\" \"stdarg\" { target ia64-*-* } } } */\n /* { dg-final { scan-tree-dump \"f9: va_list escapes 1, needs to save all GPR units\" \"stdarg\" { target { powerpc*-*-* && lp64 } } } } */\n@@ -188,6 +197,7 @@ f10 (int i, ...)\n /* { dg-final { scan-tree-dump \"f10: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target { powerpc*-*-linux* && ilp32 } } } } */\n /* { dg-final { scan-tree-dump \"f10: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target alpha*-*-linux* } } } */\n /* { dg-final { scan-tree-dump \"f10: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target s390*-*-linux* } } } */\n+/* { dg-final { scan-tree-dump \"f10: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target aarch64*-*-* } } } */\n /* { dg-final { scan-tree-dump \"f10: va_list escapes 1, needs to save all GPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } } */\n /* { dg-final { scan-tree-dump \"f10: va_list escapes 1, needs to save all GPR units\" \"stdarg\" { target ia64-*-* } } } */\n /* { dg-final { scan-tree-dump \"f10: va_list escapes 1, needs to save all GPR units\" \"stdarg\" { target { powerpc*-*-* && lp64 } } } } */\n@@ -208,6 +218,7 @@ f11 (int i, ...)\n /* { dg-final { scan-tree-dump \"f11: va_list escapes 0, needs to save (3|12|24) GPR units and 0 FPR units\" \"stdarg\" { target { powerpc*-*-linux* && ilp32 } } } } */\n /* { dg-final { scan-tree-dump \"f11: va_list escapes 0, needs to save 24 GPR units and 1\" \"stdarg\" { target alpha*-*-linux* } } } */\n /* { dg-final { scan-tree-dump \"f11: va_list escapes 0, needs to save 3 GPR units and 0 FPR units\" \"stdarg\" { target s390*-*-linux* } } } */\n+/* { dg-final { scan-tree-dump \"f11: va_list escapes 0, needs to save 24 GPR units and 0 FPR units\" \"stdarg\" { target aarch64*-*-* } } } */\n /* { dg-final { scan-tree-dump \"f11: va_list escapes 0, needs to save (3|12|24) GPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } } */\n /* { dg-final { scan-tree-dump \"f11: va_list escapes 0, needs to save (3|12|24) GPR units\" \"stdarg\" { target ia64-*-* } } } */\n /* { dg-final { scan-tree-dump \"f11: va_list escapes 0, needs to save (3|12|24) GPR units\" \"stdarg\" { target { powerpc*-*-* && lp64 } } } } */\n@@ -228,6 +239,7 @@ f12 (int i, ...)\n /* { dg-final { scan-tree-dump \"f12: va_list escapes 0, needs to save 0 GPR units and \\[1-9\\]\\[0-9\\]* FPR units\" \"stdarg\" { target { powerpc*-*-linux* && { powerpc_fprs && ilp32 } } } } } */\n /* { dg-final { scan-tree-dump \"f12: va_list escapes 0, needs to save 24 GPR units and 2\" \"stdarg\" { target alpha*-*-linux* } } } */\n /* { dg-final { scan-tree-dump \"f12: va_list escapes 0, needs to save 0 GPR units and 3 FPR units\" \"stdarg\" { target s390*-*-linux* } } } */\n+/* { dg-final { scan-tree-dump \"f12: va_list escapes 0, needs to save 0 GPR units and 48 FPR units\" \"stdarg\" { target aarch64*-*-* } } } */\n /* { dg-final { scan-tree-dump \"f12: va_list escapes 0, needs to save \\[1-9]\\[0-9\\]* GPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } } */\n /* { dg-final { scan-tree-dump \"f12: va_list escapes 0, needs to save \\[1-9]\\[0-9\\]* GPR units\" \"stdarg\" { target ia64-*-* } } } */\n /* { dg-final { scan-tree-dump \"f12: va_list escapes 0, needs to save \\[1-9]\\[0-9\\]* GPR units\" \"stdarg\" { target { powerpc*-*-* && lp64 } } } } */\n@@ -248,6 +260,7 @@ f13 (int i, ...)\n /* { dg-final { scan-tree-dump \"f13: va_list escapes 0, needs to save 0 GPR units and \\[1-9\\]\\[0-9\\]* FPR units\" \"stdarg\" { target { powerpc*-*-linux* && { powerpc_fprs && ilp32 } } } } } */\n /* { dg-final { scan-tree-dump \"f13: va_list escapes 0, needs to save 24 GPR units and 2\" \"stdarg\" { target alpha*-*-linux* } } } */\n /* { dg-final { scan-tree-dump \"f13: va_list escapes 0, needs to save 0 GPR units and 3 FPR units\" \"stdarg\" { target s390*-*-linux* } } } */\n+/* { dg-final { scan-tree-dump \"f13: va_list escapes 0, needs to save 0 GPR units and 48 FPR units\" \"stdarg\" { target aarch64*-*-* } } } */\n /* { dg-final { scan-tree-dump \"f13: va_list escapes 0, needs to save \\[1-9]\\[0-9\\]* GPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } } */\n /* { dg-final { scan-tree-dump \"f13: va_list escapes 0, needs to save \\[1-9]\\[0-9\\]* GPR units\" \"stdarg\" { target ia64-*-* } } } */\n /* { dg-final { scan-tree-dump \"f13: va_list escapes 0, needs to save \\[1-9]\\[0-9\\]* GPR units\" \"stdarg\" { target { powerpc*-*-* && lp64 } } } } */\n@@ -268,6 +281,7 @@ f14 (int i, ...)\n /* { dg-final { scan-tree-dump \"f14: va_list escapes 0, needs to save \\[148\\] GPR units and \\[1-9\\]\\[0-9\\]* FPR units\" \"stdarg\" { target { powerpc*-*-linux* && { powerpc_fprs && ilp32 } } } } } */\n /* { dg-final { scan-tree-dump \"f14: va_list escapes 0, needs to save 24 GPR units and 3\" \"stdarg\" { target alpha*-*-linux* } } } */\n /* { dg-final { scan-tree-dump \"f14: va_list escapes 0, needs to save 1 GPR units and 2 FPR units\" \"stdarg\" { target s390*-*-linux* } } } */\n+/* { dg-final { scan-tree-dump \"f14: va_list escapes 0, needs to save 8 GPR units and 32 FPR units\" \"stdarg\" { target aarch64*-*-* } } } */\n /* { dg-final { scan-tree-dump \"f14: va_list escapes 0, needs to save \\[1-9]\\[0-9\\]* GPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } } */\n /* { dg-final { scan-tree-dump \"f14: va_list escapes 0, needs to save \\[1-9]\\[0-9\\]* GPR units\" \"stdarg\" { target ia64-*-* } } } */\n /* { dg-final { scan-tree-dump \"f14: va_list escapes 0, needs to save \\[1-9]\\[0-9\\]* GPR units\" \"stdarg\" { target { powerpc*-*-* && lp64 } } } } */\n@@ -291,6 +305,7 @@ f15 (int i, ...)\n /* { dg-final { scan-tree-dump \"f15: va_list escapes 0, needs to save \\[148\\] GPR units and \\[1-9\\]\\[0-9\\]* FPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && { ! { ia32 || llp64 } } } } } } */\n /* { dg-final { scan-tree-dump \"f15: va_list escapes 0, needs to save \\[148\\] GPR units and \\[1-9\\]\\[0-9\\]* FPR units\" \"stdarg\" { target { powerpc*-*-linux* && { powerpc_fprs && ilp32 } } } } } */\n /* { dg-final { scan-tree-dump \"f15: va_list escapes 0, needs to save 1 GPR units and 2 FPR units\" \"stdarg\" { target s390*-*-linux* } } } */\n+/* { dg-final { scan-tree-dump \"f15: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target aarch64*-*-* } } } */\n \n /* We may be able to improve upon this after fixing PR66010/PR66013.  */\n /* { dg-final { scan-tree-dump \"f15: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target alpha*-*-linux* } } } */"}, {"sha": "d044654e0416c2f7abe67c1d9f4a9b3221d57e4a", "filename": "gcc/testsuite/gcc.dg/tree-ssa/stdarg-3.c", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3fd6b9cc8bb19571726203e309e0b2472e6b8e43/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fstdarg-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3fd6b9cc8bb19571726203e309e0b2472e6b8e43/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fstdarg-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fstdarg-3.c?ref=3fd6b9cc8bb19571726203e309e0b2472e6b8e43", "patch": "@@ -24,6 +24,7 @@ f1 (int i, ...)\n /* { dg-final { scan-tree-dump \"f1: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target { powerpc*-*-linux* && ilp32 } } } } */\n /* { dg-final { scan-tree-dump \"f1: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target alpha*-*-linux* } } } */\n /* { dg-final { scan-tree-dump \"f1: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target s390*-*-linux* } } } */\n+/* { dg-final { scan-tree-dump \"f1: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target aarch64*-*-* } } } */\n /* { dg-final { scan-tree-dump \"f1: va_list escapes 1, needs to save all GPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } } */\n /* { dg-final { scan-tree-dump \"f1: va_list escapes 1, needs to save all GPR units\" \"stdarg\" { target ia64-*-* } } } */\n /* { dg-final { scan-tree-dump \"f1: va_list escapes 1, needs to save all GPR units\" \"stdarg\" { target { powerpc*-*-* && lp64 } } } } */\n@@ -39,6 +40,7 @@ f2 (int i, ...)\n /* { dg-final { scan-tree-dump \"f2: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target { powerpc*-*-linux* && ilp32 } } } } */\n /* { dg-final { scan-tree-dump \"f2: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target alpha*-*-linux* } } } */\n /* { dg-final { scan-tree-dump \"f2: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target s390*-*-linux* } } } */\n+/* { dg-final { scan-tree-dump \"f2: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target aarch64*-*-* } } } */\n /* { dg-final { scan-tree-dump \"f2: va_list escapes 1, needs to save all GPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } } */\n /* { dg-final { scan-tree-dump \"f2: va_list escapes 1, needs to save all GPR units\" \"stdarg\" { target ia64-*-* } } } */\n /* { dg-final { scan-tree-dump \"f2: va_list escapes 1, needs to save all GPR units\" \"stdarg\" { target { powerpc*-*-* && lp64 } } } } */\n@@ -57,6 +59,7 @@ f3 (int i, ...)\n /* { dg-final { scan-tree-dump \"f3: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target { powerpc*-*-linux* && ilp32 } } } } */\n /* { dg-final { scan-tree-dump \"f3: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target alpha*-*-linux* } } } */\n /* { dg-final { scan-tree-dump \"f3: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target s390*-*-linux* } } } */\n+/* { dg-final { scan-tree-dump \"f3: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target aarch64*-*-* } } } */\n /* { dg-final { scan-tree-dump \"f3: va_list escapes 1, needs to save all GPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } } */\n /* { dg-final { scan-tree-dump \"f3: va_list escapes 1, needs to save all GPR units\" \"stdarg\" { target ia64-*-* } } } */\n /* { dg-final { scan-tree-dump \"f3: va_list escapes 1, needs to save all GPR units\" \"stdarg\" { target { powerpc*-*-* && lp64 } } } } */\n@@ -73,6 +76,7 @@ f4 (int i, ...)\n /* { dg-final { scan-tree-dump \"f4: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target { powerpc*-*-linux* && ilp32 } } } } */\n /* { dg-final { scan-tree-dump \"f4: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target alpha*-*-linux* } } } */\n /* { dg-final { scan-tree-dump \"f4: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target s390*-*-linux* } } } */\n+/* { dg-final { scan-tree-dump \"f4: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target aarch64*-*-* } } } */\n /* { dg-final { scan-tree-dump \"f4: va_list escapes 1, needs to save all GPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } } */\n /* { dg-final { scan-tree-dump \"f4: va_list escapes 1, needs to save all GPR units\" \"stdarg\" { target ia64-*-* } } } */\n /* { dg-final { scan-tree-dump \"f4: va_list escapes 1, needs to save all GPR units\" \"stdarg\" { target { powerpc*-*-* && lp64 } } } } */\n@@ -89,6 +93,7 @@ f5 (int i, ...)\n /* { dg-final { scan-tree-dump \"f5: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target { powerpc*-*-linux* && ilp32 } } } } */\n /* { dg-final { scan-tree-dump \"f5: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target alpha*-*-linux* } } } */\n /* { dg-final { scan-tree-dump \"f5: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target s390*-*-linux* } } } */\n+/* { dg-final { scan-tree-dump \"f5: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target aarch64*-*-* } } } */\n /* { dg-final { scan-tree-dump \"f5: va_list escapes 1, needs to save all GPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } } */\n /* { dg-final { scan-tree-dump \"f5: va_list escapes 1, needs to save all GPR units\" \"stdarg\" { target ia64-*-* } } } */\n /* { dg-final { scan-tree-dump \"f5: va_list escapes 1, needs to save all GPR units\" \"stdarg\" { target { powerpc*-*-* && lp64 } } } } */\n@@ -107,6 +112,7 @@ f6 (int i, ...)\n /* { dg-final { scan-tree-dump \"f6: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target { powerpc*-*-linux* && ilp32 } } } } */\n /* { dg-final { scan-tree-dump \"f6: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target alpha*-*-linux* } } } */\n /* { dg-final { scan-tree-dump \"f6: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target s390*-*-linux* } } } */\n+/* { dg-final { scan-tree-dump \"f6: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target aarch64*-*-* } } } */\n /* { dg-final { scan-tree-dump \"f6: va_list escapes 1, needs to save all GPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } } */\n /* { dg-final { scan-tree-dump \"f6: va_list escapes 1, needs to save all GPR units\" \"stdarg\" { target ia64-*-* } } } */\n /* { dg-final { scan-tree-dump \"f6: va_list escapes 1, needs to save all GPR units\" \"stdarg\" { target { powerpc*-*-* && lp64 } } } } */\n@@ -123,6 +129,7 @@ f7 (int i, ...)\n /* { dg-final { scan-tree-dump \"f7: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target { powerpc*-*-linux* && ilp32 } } } } */\n /* { dg-final { scan-tree-dump \"f7: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target alpha*-*-linux* } } } */\n /* { dg-final { scan-tree-dump \"f7: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target s390*-*-linux* } } } */\n+/* { dg-final { scan-tree-dump \"f7: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target aarch64*-*-* } } } */\n /* { dg-final { scan-tree-dump \"f7: va_list escapes 1, needs to save all GPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } } */\n /* { dg-final { scan-tree-dump \"f7: va_list escapes 1, needs to save all GPR units\" \"stdarg\" { target ia64-*-* } } } */\n /* { dg-final { scan-tree-dump \"f7: va_list escapes 1, needs to save all GPR units\" \"stdarg\" { target { powerpc*-*-* && lp64 } } } } */\n@@ -139,6 +146,7 @@ f8 (int i, ...)\n /* { dg-final { scan-tree-dump \"f8: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target { powerpc*-*-linux* && ilp32 } } } } */\n /* { dg-final { scan-tree-dump \"f8: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target alpha*-*-linux* } } } */\n /* { dg-final { scan-tree-dump \"f8: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target s390*-*-linux* } } } */\n+/* { dg-final { scan-tree-dump \"f8: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target aarch64*-*-* } } } */\n /* { dg-final { scan-tree-dump \"f8: va_list escapes 1, needs to save all GPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } } */\n /* { dg-final { scan-tree-dump \"f8: va_list escapes 1, needs to save all GPR units\" \"stdarg\" { target ia64-*-* } } } */\n /* { dg-final { scan-tree-dump \"f8: va_list escapes 1, needs to save all GPR units\" \"stdarg\" { target { powerpc*-*-* && lp64 } } } } */\n@@ -155,6 +163,7 @@ f10 (int i, ...)\n /* { dg-final { scan-tree-dump \"f10: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target { powerpc*-*-linux* && ilp32 } } } } */\n /* { dg-final { scan-tree-dump \"f10: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target alpha*-*-linux* } } } */\n /* { dg-final { scan-tree-dump \"f10: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target s390*-*-linux* } } } */\n+/* { dg-final { scan-tree-dump \"f10: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target aarch64*-*-* } } } */\n /* { dg-final { scan-tree-dump \"f10: va_list escapes 1, needs to save all GPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } } */\n /* { dg-final { scan-tree-dump \"f10: va_list escapes 1, needs to save all GPR units\" \"stdarg\" { target ia64-*-* } } } */\n /* { dg-final { scan-tree-dump \"f10: va_list escapes 1, needs to save all GPR units\" \"stdarg\" { target { powerpc*-*-* && lp64 } } } } */\n@@ -171,6 +180,7 @@ f11 (int i, ...)\n /* { dg-final { scan-tree-dump \"f11: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target { powerpc*-*-linux* && ilp32 } } } } */\n /* { dg-final { scan-tree-dump \"f11: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target alpha*-*-linux* } } } */\n /* { dg-final { scan-tree-dump \"f11: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target s390*-*-linux* } } } */\n+/* { dg-final { scan-tree-dump \"f11: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target aarch64*-*-* } } } */\n /* { dg-final { scan-tree-dump \"f11: va_list escapes 1, needs to save all GPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } } */\n /* { dg-final { scan-tree-dump \"f11: va_list escapes 1, needs to save all GPR units\" \"stdarg\" { target ia64-*-* } } } */\n /* { dg-final { scan-tree-dump \"f11: va_list escapes 1, needs to save all GPR units\" \"stdarg\" { target { powerpc*-*-* && lp64 } } } } */\n@@ -187,6 +197,7 @@ f12 (int i, ...)\n /* { dg-final { scan-tree-dump \"f12: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target { powerpc*-*-linux* && ilp32 } } } } */\n /* { dg-final { scan-tree-dump \"f12: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target alpha*-*-linux* } } } */\n /* { dg-final { scan-tree-dump \"f12: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target s390*-*-linux* } } } */\n+/* { dg-final { scan-tree-dump \"f12: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target aarch64*-*-* } } } */\n /* { dg-final { scan-tree-dump \"f12: va_list escapes 1, needs to save all GPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } } */\n /* { dg-final { scan-tree-dump \"f12: va_list escapes 1, needs to save all GPR units\" \"stdarg\" { target ia64-*-* } } } */\n /* { dg-final { scan-tree-dump \"f12: va_list escapes 1, needs to save all GPR units\" \"stdarg\" { target { powerpc*-*-* && lp64 } } } } */"}, {"sha": "1a637d6efe4cb46852f0c75b509853d8b41f8238", "filename": "gcc/testsuite/gcc.dg/tree-ssa/stdarg-4.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3fd6b9cc8bb19571726203e309e0b2472e6b8e43/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fstdarg-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3fd6b9cc8bb19571726203e309e0b2472e6b8e43/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fstdarg-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fstdarg-4.c?ref=3fd6b9cc8bb19571726203e309e0b2472e6b8e43", "patch": "@@ -27,6 +27,7 @@ f1 (int i, ...)\n /* { dg-final { scan-tree-dump \"f1: va_list escapes 0, needs to save all GPR units and 0 FPR units\" \"stdarg\" { target { powerpc*-*-linux* && ilp32 } } } } */\n /* { dg-final { scan-tree-dump \"f1: va_list escapes 0, needs to save all GPR units and 1\" \"stdarg\" { target alpha*-*-linux* } } } */\n /* { dg-final { scan-tree-dump \"f1: va_list escapes 0, needs to save all GPR units and 0 FPR units\" \"stdarg\" { target s390*-*-linux* } } } */\n+/* { dg-final { scan-tree-dump \"f1: va_list escapes 0, needs to save all GPR units and 0 FPR units\" \"stdarg\" { target aarch64*-*-* } } } */\n /* { dg-final { scan-tree-dump \"f1: va_list escapes \\[01\\], needs to save all GPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } } */\n /* { dg-final { scan-tree-dump \"f1: va_list escapes \\[01\\], needs to save all GPR units\" \"stdarg\" { target ia64-*-* } } } */\n /* { dg-final { scan-tree-dump \"f1: va_list escapes \\[01\\], needs to save all GPR units\" \"stdarg\" { target { powerpc*-*-* && lp64 } } } } */\n@@ -44,6 +45,7 @@ f2 (int i, ...)\n /* { dg-final { scan-tree-dump \"f2: va_list escapes 0, needs to save 0 GPR units and all FPR units\" \"stdarg\" { target { powerpc*-*-linux* && { powerpc_fprs && ilp32 } } } } } */\n /* { dg-final { scan-tree-dump \"f2: va_list escapes 0, needs to save all GPR units and 2\" \"stdarg\" { target alpha*-*-linux* } } } */\n /* { dg-final { scan-tree-dump \"f2: va_list escapes 0, needs to save 0 GPR units and all FPR units\" \"stdarg\" { target s390*-*-linux* } } } */\n+/* { dg-final { scan-tree-dump \"f2: va_list escapes 0, needs to save 0 GPR units and all FPR units\" \"stdarg\" { target aarch64*-*-* } } } */\n /* { dg-final { scan-tree-dump \"f2: va_list escapes \\[01\\], needs to save all GPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } } */\n /* { dg-final { scan-tree-dump \"f2: va_list escapes \\[01\\], needs to save all GPR units\" \"stdarg\" { target ia64-*-* } } } */\n /* { dg-final { scan-tree-dump \"f2: va_list escapes \\[01\\], needs to save all GPR units\" \"stdarg\" { target { powerpc*-*-* && lp64 } } } } */\n@@ -67,6 +69,7 @@ f3 (int i, ...)\n /* { dg-final { scan-tree-dump \"f3: va_list escapes 0, needs to save \\[148\\] GPR units and 0 FPR units\" \"stdarg\" { target { powerpc*-*-linux* && ilp32 } } } } */\n /* { dg-final { scan-tree-dump \"f3: va_list escapes 0, needs to save 8 GPR units and 1\" \"stdarg\" { target alpha*-*-linux* } } } */\n /* { dg-final { scan-tree-dump \"f3: va_list escapes 0, needs to save 1 GPR units and 0 FPR units\" \"stdarg\" { target s390*-*-linux* } } } */\n+/* { dg-final { scan-tree-dump \"f3: va_list escapes 0, needs to save 8 GPR units and 0 FPR units\" \"stdarg\" { target aarch64*-*-* } } } */\n /* { dg-final { scan-tree-dump \"f3: va_list escapes 0, needs to save \\[148\\] GPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } } */\n /* { dg-final { scan-tree-dump \"f3: va_list escapes 0, needs to save \\[148\\] GPR units\" \"stdarg\" { target ia64-*-* } } } */\n /* { dg-final { scan-tree-dump \"f3: va_list escapes 0, needs to save \\[148\\] GPR units\" \"stdarg\" { target { powerpc*-*-* && lp64 } } } } */\n@@ -88,6 +91,7 @@ f4 (int i, ...)\n /* { dg-final { scan-tree-dump \"f4: va_list escapes 0, needs to save 0 GPR units and \\[1-9\\]\\[0-9\\]* FPR units\" \"stdarg\" { target { powerpc*-*-linux* && { powerpc_fprs && ilp32 } } } } } */\n /* { dg-final { scan-tree-dump \"f4: va_list escapes 0, needs to save 8 GPR units and 2\" \"stdarg\" { target alpha*-*-linux* } } } */\n /* { dg-final { scan-tree-dump \"f4: va_list escapes 0, needs to save 0 GPR units and 1 FPR units\" \"stdarg\" { target s390*-*-linux* } } } */\n+/* { dg-final { scan-tree-dump \"f4: va_list escapes 0, needs to save 0 GPR units and 16 FPR units\" \"stdarg\" { target aarch64*-*-* } } } */\n /* { dg-final { scan-tree-dump \"f4: va_list escapes 0, needs to save \\[148\\] GPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } } */\n /* { dg-final { scan-tree-dump \"f4: va_list escapes 0, needs to save \\[148\\] GPR units\" \"stdarg\" { target ia64-*-* } } } */\n /* { dg-final { scan-tree-dump \"f4: va_list escapes 0, needs to save \\[148\\] GPR units\" \"stdarg\" { target { powerpc*-*-* && lp64 } } } } */"}, {"sha": "c8ad4fe320db9f8139aba22b9fb92f1d2a5d4b87", "filename": "gcc/testsuite/gcc.dg/tree-ssa/stdarg-5.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3fd6b9cc8bb19571726203e309e0b2472e6b8e43/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fstdarg-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3fd6b9cc8bb19571726203e309e0b2472e6b8e43/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fstdarg-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fstdarg-5.c?ref=3fd6b9cc8bb19571726203e309e0b2472e6b8e43", "patch": "@@ -25,6 +25,7 @@ f1 (int i, ...)\n /* { dg-final { scan-tree-dump \"f1: va_list escapes 0, needs to save 0 GPR units and 0 FPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && { ! { ia32 || llp64 } } } } } } */\n /* { dg-final { scan-tree-dump \"f1: va_list escapes 0, needs to save all GPR units and 1\" \"stdarg\" { target alpha*-*-linux* } } } */\n /* { dg-final { scan-tree-dump \"f1: va_list escapes 0, needs to save all GPR units and 0 FPR units\" \"stdarg\" { target s390*-*-linux* } } } */\n+/* { dg-final { scan-tree-dump \"f1: va_list escapes 0, needs to save all GPR units and 0 FPR units\" \"stdarg\" { target aarch64*-*-* } } } */\n \n void\n f2 (int i, ...)\n@@ -38,6 +39,7 @@ f2 (int i, ...)\n /* { dg-final { scan-tree-dump \"f2: va_list escapes 0, needs to save all GPR units and all FPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && { ! { ia32 || llp64 } } } } } } */\n /* { dg-final { scan-tree-dump \"f2: va_list escapes 0, needs to save all GPR units and 1\" \"stdarg\" { target alpha*-*-linux* } } } */\n /* { dg-final { scan-tree-dump \"f2: va_list escapes 0, needs to save all GPR units and 0 FPR units\" \"stdarg\" { target s390*-*-linux* } } } */\n+/* { dg-final { scan-tree-dump \"f2: va_list escapes 0, needs to save all GPR units and 0 FPR units\" \"stdarg\" { target aarch64*-*-* } } } */\n \n /* Here va_arg can be executed at most as many times as va_start.  */\n void\n@@ -56,6 +58,7 @@ f3 (int i, ...)\n /* { dg-final { scan-tree-dump \"f3: va_list escapes 0, needs to save 0 GPR units and 0 FPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && { ! { ia32 || llp64 } } } } } } */\n /* { dg-final { scan-tree-dump \"f3: va_list escapes 0, needs to save 32 GPR units and 1\" \"stdarg\" { target alpha*-*-linux* } } } */\n /* { dg-final { scan-tree-dump \"f3: va_list escapes 0, needs to save 1 GPR units and 0 FPR units\" \"stdarg\" { target s390*-*-linux* } } } */\n+/* { dg-final { scan-tree-dump \"f3: va_list escapes 0, needs to save 8 GPR units and 0 FPR units\" \"stdarg\" { target aarch64*-*-* } } } */\n \n void\n f4 (int i, ...)\n@@ -74,6 +77,7 @@ f4 (int i, ...)\n /* { dg-final { scan-tree-dump \"f4: va_list escapes 0, needs to save 16 GPR units and 16 FPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && { ! { ia32 || llp64 } } } } } } */\n /* { dg-final { scan-tree-dump \"f4: va_list escapes 0, needs to save 24 GPR units and 1\" \"stdarg\" { target alpha*-*-linux* } } } */\n /* { dg-final { scan-tree-dump \"f4: va_list escapes 0, needs to save 2 GPR units and 0 FPR units\" \"stdarg\" { target s390*-*-linux* } } } */\n+/* { dg-final { scan-tree-dump \"f4: va_list escapes 0, needs to save 24 GPR units and 0 FPR units\" \"stdarg\" { target aarch64*-*-* } } } */\n \n void\n f5 (int i, ...)\n@@ -88,6 +92,7 @@ f5 (int i, ...)\n /* { dg-final { scan-tree-dump \"f5: va_list escapes 0, needs to save 16 GPR units and 0 FPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && { ! { ia32 || llp64 } } } } } } */\n /* { dg-final { scan-tree-dump \"f5: va_list escapes 0, needs to save 32 GPR units and 1\" \"stdarg\" { target alpha*-*-linux* } } } */\n /* { dg-final { scan-tree-dump \"f5: va_list escapes 0, needs to save (4|2) GPR units and 0 FPR units\" \"stdarg\" { target s390*-*-linux* } } } */\n+/* { dg-final { scan-tree-dump \"f5: va_list escapes 0, needs to save 16 GPR units and 0 FPR units\" \"stdarg\" { target aarch64*-*-* } } } */\n \n void\n f6 (int i, ...)\n@@ -102,6 +107,7 @@ f6 (int i, ...)\n /* { dg-final { scan-tree-dump \"f6: va_list escapes 0, needs to save 8 GPR units and 32 FPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && { ! { ia32 || llp64 } } } } } } */\n /* { dg-final { scan-tree-dump \"f6: va_list escapes 0, needs to save 32 GPR units and 3\" \"stdarg\" { target alpha*-*-linux* } } } */\n /* { dg-final { scan-tree-dump \"f6: va_list escapes 0, needs to save (3|2) GPR units and 0 FPR units\" \"stdarg\" { target s390*-*-linux* } } } */\n+/* { dg-final { scan-tree-dump \"f6: va_list escapes 0, needs to save 8 GPR units and 32 FPR units\" \"stdarg\" { target aarch64*-*-* } } } */\n \n void\n f7 (int i, ...)\n@@ -116,3 +122,4 @@ f7 (int i, ...)\n /* { dg-final { scan-tree-dump \"f7: va_list escapes 0, needs to save 0 GPR units and 64 FPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && { ! { ia32 || llp64 } } } } } } */\n /* { dg-final { scan-tree-dump \"f7: va_list escapes 0, needs to save 32 GPR units and 2\" \"stdarg\" { target alpha*-*-linux* } } } */\n /* { dg-final { scan-tree-dump \"f7: va_list escapes 0, needs to save 2 GPR units and 0 FPR units\" \"stdarg\" { target s390*-*-linux* } } } */\n+/* { dg-final { scan-tree-dump \"f7: va_list escapes 0, needs to save 0 GPR units and 64 FPR units\" \"stdarg\" { target aarch64*-*-* } } } */"}, {"sha": "be7bc0d12b3c5b293d9a841e98f015f338356e64", "filename": "gcc/testsuite/gcc.dg/tree-ssa/stdarg-6.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3fd6b9cc8bb19571726203e309e0b2472e6b8e43/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fstdarg-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3fd6b9cc8bb19571726203e309e0b2472e6b8e43/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fstdarg-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fstdarg-6.c?ref=3fd6b9cc8bb19571726203e309e0b2472e6b8e43", "patch": "@@ -30,6 +30,7 @@ bar (int x, char const *y, ...)\n /* { dg-final { scan-tree-dump \"bar: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target { powerpc*-*-linux* && ilp32 } } } } */\n /* { dg-final { scan-tree-dump \"bar: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target alpha*-*-linux* } } } */\n /* { dg-final { scan-tree-dump \"bar: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target s390*-*-linux* } } } */\n+/* { dg-final { scan-tree-dump \"bar: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target aarch64*-*-* } } } */\n /* { dg-final { scan-tree-dump \"bar: va_list escapes 1, needs to save all GPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } } */\n /* { dg-final { scan-tree-dump \"bar: va_list escapes 1, needs to save all GPR units\" \"stdarg\" { target ia64-*-* } } } */\n /* { dg-final { scan-tree-dump \"bar: va_list escapes 1, needs to save all GPR units\" \"stdarg\" { target { powerpc*-*-* && lp64 } } } } */"}]}