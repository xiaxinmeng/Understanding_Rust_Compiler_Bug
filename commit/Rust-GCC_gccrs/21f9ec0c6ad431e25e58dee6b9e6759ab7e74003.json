{"sha": "21f9ec0c6ad431e25e58dee6b9e6759ab7e74003", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjFmOWVjMGM2YWQ0MzFlMjVlNThkZWU2YjllNjc1OWFiN2U3NDAwMw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2006-03-10T22:47:08Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2006-03-10T22:47:08Z"}, "message": "re PR middle-end/26004 (gcc errors on valid code [SVO])\n\n        PR c/26004\n        * gimplify.c (gimplify_modify_expr_rhs): Don't do return slot opt if\n        the target was declared 'register'.\n\nFrom-SVN: r111947", "tree": {"sha": "2b1be739b500fee318e5f1d12833519be9204c09", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2b1be739b500fee318e5f1d12833519be9204c09"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/21f9ec0c6ad431e25e58dee6b9e6759ab7e74003", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21f9ec0c6ad431e25e58dee6b9e6759ab7e74003", "html_url": "https://github.com/Rust-GCC/gccrs/commit/21f9ec0c6ad431e25e58dee6b9e6759ab7e74003", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21f9ec0c6ad431e25e58dee6b9e6759ab7e74003/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e16187d98d7a47a24ea909d01bf17349aed93aeb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e16187d98d7a47a24ea909d01bf17349aed93aeb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e16187d98d7a47a24ea909d01bf17349aed93aeb"}], "stats": {"total": 20, "additions": 19, "deletions": 1}, "files": [{"sha": "0d90fa2c0912631d52518af30baa6d4d08c9fd8c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21f9ec0c6ad431e25e58dee6b9e6759ab7e74003/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21f9ec0c6ad431e25e58dee6b9e6759ab7e74003/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=21f9ec0c6ad431e25e58dee6b9e6759ab7e74003", "patch": "@@ -1,3 +1,9 @@\n+2006-03-10  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c/26004\n+\t* gimplify.c (gimplify_modify_expr_rhs): Don't do return slot opt if \n+\tthe target was declared 'register'.\n+\n 2006-03-10  Adam Nemet  <anemet@caviumnetworks.com>\n \n \t* genpreds.c (write_insn_constraint_len): Change definition of"}, {"sha": "c9498eef95afa4524d7abe4d9313e4b158c62a1e", "filename": "gcc/gimplify.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21f9ec0c6ad431e25e58dee6b9e6759ab7e74003/gcc%2Fgimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21f9ec0c6ad431e25e58dee6b9e6759ab7e74003/gcc%2Fgimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.c?ref=21f9ec0c6ad431e25e58dee6b9e6759ab7e74003", "patch": "@@ -3295,7 +3295,8 @@ gimplify_modify_expr_rhs (tree *expr_p, tree *from_p, tree *to_p, tree *pre_p,\n \t\t     && needs_to_live_in_memory (*to_p))\n \t      /* It's OK to use the return slot directly unless it's an NRV. */\n \t      use_target = true;\n-\t    else if (is_gimple_reg_type (TREE_TYPE (*to_p)))\n+\t    else if (is_gimple_reg_type (TREE_TYPE (*to_p))\n+\t\t     || (DECL_P (*to_p) && DECL_REGISTER (*to_p)))\n \t      /* Don't force regs into memory.  */\n \t      use_target = false;\n \t    else if (TREE_CODE (*to_p) == VAR_DECL"}, {"sha": "35e6a2feb932e4386638117915f77f3b8876b2b0", "filename": "gcc/testsuite/gcc.dg/pr26004.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21f9ec0c6ad431e25e58dee6b9e6759ab7e74003/gcc%2Ftestsuite%2Fgcc.dg%2Fpr26004.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21f9ec0c6ad431e25e58dee6b9e6759ab7e74003/gcc%2Ftestsuite%2Fgcc.dg%2Fpr26004.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr26004.c?ref=21f9ec0c6ad431e25e58dee6b9e6759ab7e74003", "patch": "@@ -0,0 +1,11 @@\n+/* PR c/26004 */\n+/* Bug: the return slot optimization was taking the address of s_3,\n+   causing an error. */\n+\n+struct s_3 { short s[3]; } z_3, s_3;\n+struct s_3 add_struct_3 (struct s_3 s){}\n+wack_struct_3 (void)\n+{\n+  int i; register struct s_3 u = z_3;\n+  u = add_struct_3 (u);\n+}"}]}