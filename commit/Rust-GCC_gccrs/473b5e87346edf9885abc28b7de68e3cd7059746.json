{"sha": "473b5e87346edf9885abc28b7de68e3cd7059746", "node_id": "C_kwDOANBUbNoAKDQ3M2I1ZTg3MzQ2ZWRmOTg4NWFiYzI4YjdkZTY4ZTNjZDcwNTk3NDY", "commit": {"author": {"name": "Roger Sayle", "email": "roger@nextmovesoftware.com", "date": "2021-11-16T08:55:21Z"}, "committer": {"name": "Roger Sayle", "email": "roger@nextmovesoftware.com", "date": "2021-11-16T08:55:21Z"}, "message": "x86_64: Avoid rorx rotation instructions with -Os.\n\nThis patch teaches the i386 backend to avoid using BMI2's rorx\ninstructions when optimizing for size.  The benefits are shown\nwith the following example:\n\nunsigned int ror1(unsigned int x) { return (x >> 1) | (x << 31); }\nunsigned int ror2(unsigned int x) { return (x >> 2) | (x << 30); }\nunsigned int rol2(unsigned int x) { return (x >> 30) | (x << 2); }\nunsigned int rol1(unsigned int x) { return (x >> 31) | (x << 1); }\n\nwhich currently with -Os -march=cascadelake generates:\n\nror1:\trorx    $1, %edi, %eax\t\t// 6 bytes\n        ret\nror2:\trorx    $2, %edi, %eax\t\t// 6 bytes\n        ret\nrol2:\trorx    $30, %edi, %eax\t\t// 6 bytes\n        ret\nrol1:\trorx    $31, %edi, %eax\t\t// 6 bytes\n        ret\n\nbut with this patch now generates:\n\nror1:\tmovl    %edi, %eax\t\t// 2 bytes\n        rorl    %eax\t\t\t// 2 bytes\n        ret\nror2:\tmovl    %edi, %eax\t\t// 2 bytes\n        rorl    $2, %eax\t\t// 3 bytes\n        ret\nrol2:\tmovl    %edi, %eax\t\t// 2 bytes\n        roll    $2, %eax\t\t// 3 bytes\n        ret\nrol1:\tmovl    %edi, %eax\t\t// 2 bytes\n        roll    %eax\t\t\t// 2 bytes\n        ret\n\nI've confirmed that this patch is a win on the CSiBE benchmark,\neven though rotations are rare, where for example libmspack/test/md5.o\nshrinks from 5824 bytes to 5632 bytes.\n\n2021-11-16  Roger Sayle  <roger@nextmovesoftware.com>\n\ngcc/ChangeLog\n\t* config/i386/i386.md (*bmi2_rorx<mode3>_1): Make conditional\n\ton !optimize_function_for_size_p.\n\t(*<any_rotate><mode>3_1): Add preferred_for_size attribute.\n\t(define_splits): Conditionalize on !optimize_function_for_size_p.\n\t(*bmi2_rorxsi3_1_zext): Likewise.\n\t(*<any_rotate>si2_1_zext): Add preferred_for_size attribute.\n\t(define_splits): Conditionalize on !optimize_function_for_size_p.", "tree": {"sha": "606d11010341ebf687aa40844dd78aa5ea1f572f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/606d11010341ebf687aa40844dd78aa5ea1f572f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/473b5e87346edf9885abc28b7de68e3cd7059746", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/473b5e87346edf9885abc28b7de68e3cd7059746", "html_url": "https://github.com/Rust-GCC/gccrs/commit/473b5e87346edf9885abc28b7de68e3cd7059746", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/473b5e87346edf9885abc28b7de68e3cd7059746/comments", "author": {"login": "rogersayle", "id": 13512313, "node_id": "MDQ6VXNlcjEzNTEyMzEz", "avatar_url": "https://avatars.githubusercontent.com/u/13512313?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rogersayle", "html_url": "https://github.com/rogersayle", "followers_url": "https://api.github.com/users/rogersayle/followers", "following_url": "https://api.github.com/users/rogersayle/following{/other_user}", "gists_url": "https://api.github.com/users/rogersayle/gists{/gist_id}", "starred_url": "https://api.github.com/users/rogersayle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rogersayle/subscriptions", "organizations_url": "https://api.github.com/users/rogersayle/orgs", "repos_url": "https://api.github.com/users/rogersayle/repos", "events_url": "https://api.github.com/users/rogersayle/events{/privacy}", "received_events_url": "https://api.github.com/users/rogersayle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rogersayle", "id": 13512313, "node_id": "MDQ6VXNlcjEzNTEyMzEz", "avatar_url": "https://avatars.githubusercontent.com/u/13512313?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rogersayle", "html_url": "https://github.com/rogersayle", "followers_url": "https://api.github.com/users/rogersayle/followers", "following_url": "https://api.github.com/users/rogersayle/following{/other_user}", "gists_url": "https://api.github.com/users/rogersayle/gists{/gist_id}", "starred_url": "https://api.github.com/users/rogersayle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rogersayle/subscriptions", "organizations_url": "https://api.github.com/users/rogersayle/orgs", "repos_url": "https://api.github.com/users/rogersayle/repos", "events_url": "https://api.github.com/users/rogersayle/events{/privacy}", "received_events_url": "https://api.github.com/users/rogersayle/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e69b7c5779863469479698f863ab25e0d9b4586e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e69b7c5779863469479698f863ab25e0d9b4586e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e69b7c5779863469479698f863ab25e0d9b4586e"}], "stats": {"total": 22, "additions": 16, "deletions": 6}, "files": [{"sha": "7394906303040442dab6a5298ba76166f28a3dc2", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 16, "deletions": 6, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/473b5e87346edf9885abc28b7de68e3cd7059746/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/473b5e87346edf9885abc28b7de68e3cd7059746/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=473b5e87346edf9885abc28b7de68e3cd7059746", "patch": "@@ -12775,7 +12775,7 @@\n \t(rotatert:SWI48\n \t  (match_operand:SWI48 1 \"nonimmediate_operand\" \"rm\")\n \t  (match_operand:QI 2 \"<rorx_immediate_operand>\" \"<S>\")))]\n-  \"TARGET_BMI2\"\n+  \"TARGET_BMI2 && !optimize_function_for_size_p (cfun)\"\n   \"rorx\\t{%2, %1, %0|%0, %1, %2}\"\n   [(set_attr \"type\" \"rotatex\")\n    (set_attr \"mode\" \"<MODE>\")])\n@@ -12803,6 +12803,10 @@\n }\n   [(set_attr \"isa\" \"*,bmi2\")\n    (set_attr \"type\" \"rotate,rotatex\")\n+   (set (attr \"preferred_for_size\")\n+     (cond [(eq_attr \"alternative\" \"0\")\n+\t      (symbol_ref \"true\")]\n+\t   (symbol_ref \"false\")))\n    (set (attr \"length_immediate\")\n      (if_then_else\n        (and (eq_attr \"type\" \"rotate\")\n@@ -12819,7 +12823,7 @@\n \t(rotate:SWI48 (match_operand:SWI48 1 \"nonimmediate_operand\")\n \t\t      (match_operand:QI 2 \"const_int_operand\")))\n    (clobber (reg:CC FLAGS_REG))]\n-  \"TARGET_BMI2 && reload_completed\"\n+  \"TARGET_BMI2 && reload_completed && !optimize_function_for_size_p (cfun)\"\n   [(set (match_dup 0)\n \t(rotatert:SWI48 (match_dup 1) (match_dup 2)))]\n {\n@@ -12833,7 +12837,7 @@\n \t(rotatert:SWI48 (match_operand:SWI48 1 \"nonimmediate_operand\")\n \t\t\t(match_operand:QI 2 \"const_int_operand\")))\n    (clobber (reg:CC FLAGS_REG))]\n-  \"TARGET_BMI2 && reload_completed\"\n+  \"TARGET_BMI2 && reload_completed && !optimize_function_for_size_p (cfun)\"\n   [(set (match_dup 0)\n \t(rotatert:SWI48 (match_dup 1) (match_dup 2)))])\n \n@@ -12842,7 +12846,7 @@\n \t(zero_extend:DI\n \t  (rotatert:SI (match_operand:SI 1 \"nonimmediate_operand\" \"rm\")\n \t\t       (match_operand:QI 2 \"const_0_to_31_operand\" \"I\"))))]\n-  \"TARGET_64BIT && TARGET_BMI2\"\n+  \"TARGET_64BIT && TARGET_BMI2 && !optimize_function_for_size_p (cfun)\"\n   \"rorx\\t{%2, %1, %k0|%k0, %1, %2}\"\n   [(set_attr \"type\" \"rotatex\")\n    (set_attr \"mode\" \"SI\")])\n@@ -12870,6 +12874,10 @@\n }\n   [(set_attr \"isa\" \"*,bmi2\")\n    (set_attr \"type\" \"rotate,rotatex\")\n+   (set (attr \"preferred_for_size\")\n+     (cond [(eq_attr \"alternative\" \"0\")\n+\t      (symbol_ref \"true\")]\n+\t   (symbol_ref \"false\")))\n    (set (attr \"length_immediate\")\n      (if_then_else\n        (and (eq_attr \"type\" \"rotate\")\n@@ -12887,7 +12895,8 @@\n \t  (rotate:SI (match_operand:SI 1 \"nonimmediate_operand\")\n \t\t     (match_operand:QI 2 \"const_int_operand\"))))\n    (clobber (reg:CC FLAGS_REG))]\n-  \"TARGET_64BIT && TARGET_BMI2 && reload_completed\"\n+  \"TARGET_64BIT && TARGET_BMI2 && reload_completed\n+   && !optimize_function_for_size_p (cfun)\"\n   [(set (match_dup 0)\n \t(zero_extend:DI (rotatert:SI (match_dup 1) (match_dup 2))))]\n {\n@@ -12902,7 +12911,8 @@\n \t  (rotatert:SI (match_operand:SI 1 \"nonimmediate_operand\")\n \t\t       (match_operand:QI 2 \"const_int_operand\"))))\n    (clobber (reg:CC FLAGS_REG))]\n-  \"TARGET_64BIT && TARGET_BMI2 && reload_completed\"\n+  \"TARGET_64BIT && TARGET_BMI2 && reload_completed\n+   && !optimize_function_for_size_p (cfun)\"\n   [(set (match_dup 0)\n \t(zero_extend:DI (rotatert:SI (match_dup 1) (match_dup 2))))])\n "}]}