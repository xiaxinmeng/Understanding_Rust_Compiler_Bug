{"sha": "634e7150449157267db1a1152370b11446acb6d0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjM0ZTcxNTA0NDkxNTcyNjdkYjFhMTE1MjM3MGIxMTQ0NmFjYjZkMA==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2018-07-31T14:25:47Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2018-07-31T14:25:47Z"}, "message": "[36/46] Add a pattern_stmt_p field to stmt_vec_info\n\nThis patch adds a pattern_stmt_p field to stmt_vec_info, so that it's\npossible to tell whether the statement is a pattern statement without\nreferring to other statements.  The new field goes in what was\npreviously a hole in the structure, so the size is the same as before.\n\n2018-07-31  Richard Sandiford  <richard.sandiford@arm.com>\n\ngcc/\n\t* tree-vectorizer.h (_stmt_vec_info::pattern_stmt_p): New field.\n\t(is_pattern_stmt_p): Use it.\n\t* tree-vect-patterns.c (vect_init_pattern_stmt): Set pattern_stmt_p\n\ton pattern statements.\n\nFrom-SVN: r263151", "tree": {"sha": "cea9147d59e72017aab54498a40a8debc589f618", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cea9147d59e72017aab54498a40a8debc589f618"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/634e7150449157267db1a1152370b11446acb6d0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/634e7150449157267db1a1152370b11446acb6d0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/634e7150449157267db1a1152370b11446acb6d0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/634e7150449157267db1a1152370b11446acb6d0/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "cef6cac8bcacc3314760686dfae7b23efdf7db07", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cef6cac8bcacc3314760686dfae7b23efdf7db07", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cef6cac8bcacc3314760686dfae7b23efdf7db07"}], "stats": {"total": 17, "additions": 15, "deletions": 2}, "files": [{"sha": "22ddb54eee6171a769d2de8fd2013096dd86d3a5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/634e7150449157267db1a1152370b11446acb6d0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/634e7150449157267db1a1152370b11446acb6d0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=634e7150449157267db1a1152370b11446acb6d0", "patch": "@@ -1,3 +1,10 @@\n+2018-07-31  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* tree-vectorizer.h (_stmt_vec_info::pattern_stmt_p): New field.\n+\t(is_pattern_stmt_p): Use it.\n+\t* tree-vect-patterns.c (vect_init_pattern_stmt): Set pattern_stmt_p\n+\ton pattern statements.\n+\n 2018-07-31  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* tree-vect-patterns.c (vect_mark_pattern_stmts): Take the"}, {"sha": "18619d18c0f6aecbda3898dca2de808802e1f98b", "filename": "gcc/tree-vect-patterns.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/634e7150449157267db1a1152370b11446acb6d0/gcc%2Ftree-vect-patterns.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/634e7150449157267db1a1152370b11446acb6d0/gcc%2Ftree-vect-patterns.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-patterns.c?ref=634e7150449157267db1a1152370b11446acb6d0", "patch": "@@ -108,6 +108,7 @@ vect_init_pattern_stmt (gimple *pattern_stmt, stmt_vec_info orig_stmt_info,\n     pattern_stmt_info = orig_stmt_info->vinfo->add_stmt (pattern_stmt);\n   gimple_set_bb (pattern_stmt, gimple_bb (orig_stmt_info->stmt));\n \n+  pattern_stmt_info->pattern_stmt_p = true;\n   STMT_VINFO_RELATED_STMT (pattern_stmt_info) = orig_stmt_info;\n   STMT_VINFO_DEF_TYPE (pattern_stmt_info)\n     = STMT_VINFO_DEF_TYPE (orig_stmt_info);"}, {"sha": "74ea6cf9b0d37e18823738d73e550020905a5f02", "filename": "gcc/tree-vectorizer.h", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/634e7150449157267db1a1152370b11446acb6d0/gcc%2Ftree-vectorizer.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/634e7150449157267db1a1152370b11446acb6d0/gcc%2Ftree-vectorizer.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vectorizer.h?ref=634e7150449157267db1a1152370b11446acb6d0", "patch": "@@ -791,6 +791,12 @@ struct _stmt_vec_info {\n   /* Stmt is part of some pattern (computation idiom)  */\n   bool in_pattern_p;\n \n+  /* True if the statement was created during pattern recognition as\n+     part of the replacement for RELATED_STMT.  This implies that the\n+     statement isn't part of any basic block, although for convenience\n+     its gimple_bb is the same as for RELATED_STMT.  */\n+  bool pattern_stmt_p;\n+\n   /* Is this statement vectorizable or should it be skipped in (partial)\n      vectorization.  */\n   bool vectorizable;\n@@ -1157,8 +1163,7 @@ get_later_stmt (stmt_vec_info stmt1_info, stmt_vec_info stmt2_info)\n static inline bool\n is_pattern_stmt_p (stmt_vec_info stmt_info)\n {\n-  stmt_vec_info related_stmt_info = STMT_VINFO_RELATED_STMT (stmt_info);\n-  return related_stmt_info && STMT_VINFO_IN_PATTERN_P (related_stmt_info);\n+  return stmt_info->pattern_stmt_p;\n }\n \n /* Return true if BB is a loop header.  */"}]}