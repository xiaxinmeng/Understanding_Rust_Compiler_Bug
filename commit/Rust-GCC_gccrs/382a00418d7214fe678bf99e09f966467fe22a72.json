{"sha": "382a00418d7214fe678bf99e09f966467fe22a72", "node_id": "C_kwDOANBUbNoAKDM4MmEwMDQxOGQ3MjE0ZmU2NzhiZjk5ZTA5Zjk2NjQ2N2ZlMjJhNzI", "commit": {"author": {"name": "Steve Baird", "email": "baird@adacore.com", "date": "2022-04-14T20:24:15Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2022-05-19T14:05:31Z"}, "message": "[Ada] Avoid internal compiler error for illegal Predicate_Failure aspect spec\n\ngcc/ada/\n\n\t* sem_ch13.adb (Build_Predicate_Functions): If a semantic error\n\thas been detected then ignore Predicate_Failure aspect\n\tspecifications in the same way as is done for CodePeer and\n\tSPARK. This avoids an internal compiler error if\n\tAncestor_Predicate_Function_Called is True but Result_Expr is\n\tnot an N_And_Then node (and is therefore unsuitable as an\n\targument in a call to Left_Opnd).", "tree": {"sha": "3f6bb937917a2acbede77722ffc69f9eca291e96", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3f6bb937917a2acbede77722ffc69f9eca291e96"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/382a00418d7214fe678bf99e09f966467fe22a72", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/382a00418d7214fe678bf99e09f966467fe22a72", "html_url": "https://github.com/Rust-GCC/gccrs/commit/382a00418d7214fe678bf99e09f966467fe22a72", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/382a00418d7214fe678bf99e09f966467fe22a72/comments", "author": {"login": "swbaird", "id": 50751052, "node_id": "MDQ6VXNlcjUwNzUxMDUy", "avatar_url": "https://avatars.githubusercontent.com/u/50751052?v=4", "gravatar_id": "", "url": "https://api.github.com/users/swbaird", "html_url": "https://github.com/swbaird", "followers_url": "https://api.github.com/users/swbaird/followers", "following_url": "https://api.github.com/users/swbaird/following{/other_user}", "gists_url": "https://api.github.com/users/swbaird/gists{/gist_id}", "starred_url": "https://api.github.com/users/swbaird/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/swbaird/subscriptions", "organizations_url": "https://api.github.com/users/swbaird/orgs", "repos_url": "https://api.github.com/users/swbaird/repos", "events_url": "https://api.github.com/users/swbaird/events{/privacy}", "received_events_url": "https://api.github.com/users/swbaird/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bf0b180b42babb61b4e16388b88350d75aad3c27", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf0b180b42babb61b4e16388b88350d75aad3c27", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bf0b180b42babb61b4e16388b88350d75aad3c27"}], "stats": {"total": 5, "additions": 4, "deletions": 1}, "files": [{"sha": "11abdd8613286f549429d49f1b5148e0ded2378a", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/382a00418d7214fe678bf99e09f966467fe22a72/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/382a00418d7214fe678bf99e09f966467fe22a72/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=382a00418d7214fe678bf99e09f966467fe22a72", "patch": "@@ -10489,11 +10489,14 @@ package body Sem_Ch13 is\n             begin\n                --  In GNATprove mode we are only interested in the predicate\n                --  expression itself and don't want a raise expression that\n-               --  comes from the Predicate_Failure.\n+               --  comes from the Predicate_Failure. Ditto for CodePeer.\n+               --  And an illegal Predicate_Failure aspect can lead to cases\n+               --  we want to avoid.\n \n                if Present (PF_Expr)\n                  and then not GNATprove_Mode\n                  and then not CodePeer_Mode\n+                 and then Serious_Errors_Detected = 0\n                then\n                   pragma Assert (Present (Second_Formal));\n "}]}