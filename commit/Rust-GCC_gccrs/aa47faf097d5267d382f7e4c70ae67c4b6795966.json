{"sha": "aa47faf097d5267d382f7e4c70ae67c4b6795966", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWE0N2ZhZjA5N2Q1MjY3ZDM4MmY3ZTRjNzBhZTY3YzRiNjc5NTk2Ng==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2015-02-03T09:56:45Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2015-02-03T09:56:45Z"}, "message": "re PR target/62631 (gcc.dg/tree-ssa/ivopts-lt-2.c FAILs)\n\n\tPR target/62631\n\t* config/sparc/sparc.h (TARGET_HARD_MUL): Remove TARGET_V8PLUS.\n\t(TARGET_HARD_MUL32): Rewrite based on TARGET_HARD_MUL.\n\t* config/sparc/sparc.c (sparc_rtx_costs) <MULT>: Return costs based on\n\tint_mulX for integers in 64-bit mode if TARGET_HARD_MUL is not set.\n\nFrom-SVN: r220369", "tree": {"sha": "c2f8a3eadf7eb715b108682e34f462655b776e7a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c2f8a3eadf7eb715b108682e34f462655b776e7a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aa47faf097d5267d382f7e4c70ae67c4b6795966", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa47faf097d5267d382f7e4c70ae67c4b6795966", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aa47faf097d5267d382f7e4c70ae67c4b6795966", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa47faf097d5267d382f7e4c70ae67c4b6795966/comments", "author": null, "committer": null, "parents": [{"sha": "76f0aa6c5ab7d17f06e697eebe064eedf2e6f4f6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76f0aa6c5ab7d17f06e697eebe064eedf2e6f4f6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/76f0aa6c5ab7d17f06e697eebe064eedf2e6f4f6"}], "stats": {"total": 38, "additions": 22, "deletions": 16}, "files": [{"sha": "855a76d0f1c5aab3d28655093b4e3de3db2c49e3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa47faf097d5267d382f7e4c70ae67c4b6795966/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa47faf097d5267d382f7e4c70ae67c4b6795966/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=aa47faf097d5267d382f7e4c70ae67c4b6795966", "patch": "@@ -1,3 +1,11 @@\n+2015-02-03  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\tPR target/62631\n+\t* config/sparc/sparc.h (TARGET_HARD_MUL): Remove TARGET_V8PLUS.\n+\t(TARGET_HARD_MUL32): Rewrite based on TARGET_HARD_MUL.\n+\t* config/sparc/sparc.c (sparc_rtx_costs) <MULT>: Return costs based on\n+\tint_mulX for integers in 64-bit mode if TARGET_HARD_MUL is not set.\n+\n 2015-02-03  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR other/63504"}, {"sha": "0cf2649ab97767d520df12dd2a9e8c489748bd53", "filename": "gcc/config/sparc/sparc.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa47faf097d5267d382f7e4c70ae67c4b6795966/gcc%2Fconfig%2Fsparc%2Fsparc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa47faf097d5267d382f7e4c70ae67c4b6795966/gcc%2Fconfig%2Fsparc%2Fsparc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.c?ref=aa47faf097d5267d382f7e4c70ae67c4b6795966", "patch": "@@ -11075,7 +11075,7 @@ sparc_rtx_costs (rtx x, int code, int outer_code, int opno ATTRIBUTE_UNUSED,\n     case MULT:\n       if (float_mode_p)\n \t*total = sparc_costs->float_mul;\n-      else if (! TARGET_HARD_MUL)\n+      else if (TARGET_ARCH32 && !TARGET_HARD_MUL)\n \t*total = COSTS_N_INSNS (25);\n       else\n \t{\n@@ -11113,7 +11113,7 @@ sparc_rtx_costs (rtx x, int code, int outer_code, int opno ATTRIBUTE_UNUSED,\n \t      bit_cost = COSTS_N_INSNS (bit_cost);\n \t    }\n \n-\t  if (mode == DImode)\n+\t  if (mode == DImode || !TARGET_HARD_MUL)\n \t    *total = sparc_costs->int_mulX + bit_cost;\n \t  else\n \t    *total = sparc_costs->int_mul + bit_cost;"}, {"sha": "c6100a1f233dc8cf2900cb44e9a41c2fa66abe5e", "filename": "gcc/config/sparc/sparc.h", "status": "modified", "additions": 12, "deletions": 14, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa47faf097d5267d382f7e4c70ae67c4b6795966/gcc%2Fconfig%2Fsparc%2Fsparc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa47faf097d5267d382f7e4c70ae67c4b6795966/gcc%2Fconfig%2Fsparc%2Fsparc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.h?ref=aa47faf097d5267d382f7e4c70ae67c4b6795966", "patch": "@@ -426,22 +426,20 @@ extern enum cmodel sparc_cmodel;\n #define WCHAR_TYPE_SIZE 16\n \f\n /* Mask of all CPU selection flags.  */\n-#define MASK_ISA \\\n-(MASK_V8 + MASK_SPARCLITE + MASK_SPARCLET + MASK_V9 + MASK_DEPRECATED_V8_INSNS)\n+#define MASK_ISA\t\t\t\t\t\\\n+  (MASK_SPARCLITE + MASK_SPARCLET\t\t\t\\\n+   + MASK_V8 + MASK_V9 + MASK_DEPRECATED_V8_INSNS)\n \n-/* TARGET_HARD_MUL: Use hardware multiply instructions but not %y.\n-   TARGET_HARD_MUL32: Use hardware multiply instructions with rd %y\n-   to get high 32 bits.  False in V8+ or V9 because multiply stores\n-   a 64-bit result in a register.  */\n-\n-#define TARGET_HARD_MUL32\t\t\t\t\\\n-  ((TARGET_V8 || TARGET_SPARCLITE\t\t\t\\\n-    || TARGET_SPARCLET || TARGET_DEPRECATED_V8_INSNS)\t\\\n-   && ! TARGET_V8PLUS && TARGET_ARCH32)\n+/* TARGET_HARD_MUL: Use 32-bit hardware multiply instructions but not %y.  */\n+#define TARGET_HARD_MUL\t\t\t\t\\\n+  (TARGET_SPARCLITE || TARGET_SPARCLET\t\t\\\n+   || TARGET_V8 || TARGET_DEPRECATED_V8_INSNS)\n \n-#define TARGET_HARD_MUL\t\t\t\t\t\\\n-  (TARGET_V8 || TARGET_SPARCLITE || TARGET_SPARCLET\t\\\n-   || TARGET_DEPRECATED_V8_INSNS || TARGET_V8PLUS)\n+/* TARGET_HARD_MUL32: Use 32-bit hardware multiply instructions with %y\n+   to get high 32 bits.  False in 64-bit or V8+ because multiply stores\n+   a 64-bit result in a register.  */\n+#define TARGET_HARD_MUL32 \\\n+  (TARGET_HARD_MUL && TARGET_ARCH32 && !TARGET_V8PLUS)\n \n /* MASK_APP_REGS must always be the default because that's what\n    FIXED_REGISTERS is set to and -ffixed- is processed before"}]}