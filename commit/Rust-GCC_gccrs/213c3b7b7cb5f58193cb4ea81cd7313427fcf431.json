{"sha": "213c3b7b7cb5f58193cb4ea81cd7313427fcf431", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjEzYzNiN2I3Y2I1ZjU4MTkzY2I0ZWE4MWNkNzMxMzQyN2ZjZjQzMQ==", "commit": {"author": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2017-07-24T09:50:28Z"}, "committer": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2017-07-24T09:50:28Z"}, "message": "re PR fortran/66102 (dependency mishandling with reallocation on assignment)\n\n2017-07-24  Thomas Koenig  <tkoenig@gcc.gnu.org>\n\t    Mikael Morin <mikael@gcc.gnu.org>\n\n\tPR fortran/66102\n\t* fortran/trans-array.c (gfc_conv_resolve_dependencies):\n\tBreak if dependency has been found.\n\n2017-07-24  Thomas Koenig  <tkoenig@gcc.gnu.org>\n\t    Mikael Morin <mikael@gcc.gnu.org>\n\n\tPR fortran/66102\n\t* gfortran.dg/realloc_on_assign_28.f90:  New test.\n\n\nCo-Authored-By: Mikael Morin <mikael@gcc.gnu.org>\n\nFrom-SVN: r250471", "tree": {"sha": "e15395f5809949b974874bb19800fb407b473453", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e15395f5809949b974874bb19800fb407b473453"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/213c3b7b7cb5f58193cb4ea81cd7313427fcf431", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/213c3b7b7cb5f58193cb4ea81cd7313427fcf431", "html_url": "https://github.com/Rust-GCC/gccrs/commit/213c3b7b7cb5f58193cb4ea81cd7313427fcf431", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/213c3b7b7cb5f58193cb4ea81cd7313427fcf431/comments", "author": null, "committer": null, "parents": [{"sha": "ffe64f24cc285d2c65708305304dc07529e57ba5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ffe64f24cc285d2c65708305304dc07529e57ba5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ffe64f24cc285d2c65708305304dc07529e57ba5"}], "stats": {"total": 58, "additions": 57, "deletions": 1}, "files": [{"sha": "96b445afb79cae97da90a3ec4ab9e3dcc0dcd52f", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/213c3b7b7cb5f58193cb4ea81cd7313427fcf431/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/213c3b7b7cb5f58193cb4ea81cd7313427fcf431/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=213c3b7b7cb5f58193cb4ea81cd7313427fcf431", "patch": "@@ -1,3 +1,10 @@\n+2017-07-24  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\t    Mikael Morin <mikael@gcc.gnu.org>\n+\n+\tPR fortran/66102\n+\t* fortran/trans-array.c (gfc_conv_resolve_dependencies):\n+\tBreak if dependency has been found.\n+\n 2017-07-23  Alexander Monakov  <amonakov@ispras.ru>\n \n \t* interface.c (pair_cmp): Fix gfc_symbol comparison.  Adjust comment."}, {"sha": "9efb531a7221bcaa403f5281b3759ecfe35ef516", "filename": "gcc/fortran/trans-array.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/213c3b7b7cb5f58193cb4ea81cd7313427fcf431/gcc%2Ffortran%2Ftrans-array.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/213c3b7b7cb5f58193cb4ea81cd7313427fcf431/gcc%2Ffortran%2Ftrans-array.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-array.c?ref=213c3b7b7cb5f58193cb4ea81cd7313427fcf431", "patch": "@@ -4577,7 +4577,10 @@ gfc_conv_resolve_dependencies (gfc_loopinfo * loop, gfc_ss * dest,\n \t      && gfc_check_dependency (dest_expr, ss_expr, false))\n \t    ss_info->data.scalar.needs_temporary = 1;\n \n-\t  continue;\n+\t  if (nDepend)\n+\t    break;\n+\t  else\n+\t    continue;\n \t}\n \n       if (dest_expr->symtree->n.sym != ss_expr->symtree->n.sym)"}, {"sha": "b1e5730db7e1cc7a8d5d3f674a6edfb46e25c721", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/213c3b7b7cb5f58193cb4ea81cd7313427fcf431/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/213c3b7b7cb5f58193cb4ea81cd7313427fcf431/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=213c3b7b7cb5f58193cb4ea81cd7313427fcf431", "patch": "@@ -1,3 +1,9 @@\n+2017-07-24  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\t    Mikael Morin <mikael@gcc.gnu.org>\n+\n+\tPR fortran/66102\n+\t* gfortran.dg/realloc_on_assign_28.f90:  New test.\n+\n 2017-07-23  David Edelsohn  <dje.gcc@gmail.com>\n \n \t* gcc.dg/pr56727-2.c: Limit to powerpc-linux."}, {"sha": "2e338e470fd593bfb940bbb7f2fafbfc74934106", "filename": "gcc/testsuite/gfortran.dg/realloc_on_assign_28.f90", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/213c3b7b7cb5f58193cb4ea81cd7313427fcf431/gcc%2Ftestsuite%2Fgfortran.dg%2Frealloc_on_assign_28.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/213c3b7b7cb5f58193cb4ea81cd7313427fcf431/gcc%2Ftestsuite%2Fgfortran.dg%2Frealloc_on_assign_28.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Frealloc_on_assign_28.f90?ref=213c3b7b7cb5f58193cb4ea81cd7313427fcf431", "patch": "@@ -0,0 +1,40 @@\n+! { dg-do run }\n+!\n+! PR fortran/66102\n+!\n+! Contributed by Vladimir Fuka  <vladimir.fuka@gmail.com>\n+!\n+  type t\n+    integer,allocatable :: i\n+  end type\n+\n+  type(t) :: e\n+  type(t), allocatable, dimension(:) :: a, b\n+  integer :: chksum = 0\n+\n+  do i=1,3   ! Was 100 in original\n+    e%i = i\n+    chksum = chksum + i\n+    if (.not.allocated(a)) then\n+      a = [e]\n+      b = first_arg([e], [e])\n+    else\n+      call foo\n+    end if\n+  end do\n+\n+  if (sum ([(a(i)%i, i=1,size(a))]) .ne. chksum) call abort\n+  if (any([(a(i)%i, i=1,size(a))] /= [(i, i=1,size(a))])) call abort\n+  if (size(a) /= size(b)) call abort\n+  if (any([(b(i)%i, i=1,size(b))] /= [(i, i=1,size(b))])) call abort\n+contains\n+  subroutine foo\n+    b = first_arg([b, e], [a, e])\n+    a = [a, e]\n+  end subroutine\n+  elemental function first_arg(arg1, arg2)\n+    type(t), intent(in) :: arg1, arg2\n+    type(t)             :: first_arg\n+    first_arg = arg1\n+  end function first_arg\n+end"}]}