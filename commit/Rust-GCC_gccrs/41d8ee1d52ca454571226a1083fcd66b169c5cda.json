{"sha": "41d8ee1d52ca454571226a1083fcd66b169c5cda", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDFkOGVlMWQ1MmNhNDU0NTcxMjI2YTEwODNmY2Q2NmIxNjljNWNkYQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-08-01T14:05:00Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-08-01T14:05:00Z"}, "message": "[multiple changes]\n\n2014-08-01  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* sem_ch13.adb (Analyze_Aspect_Specifications): Code\n\treformatting. Store the generated pragma Import in the related\n\tsubprogram as routine Wrap_Imported_Subprogram will need it later.\n\t* sem_prag.adb (Is_Unconstrained_Or_Tagged_Item): An item of\n\ta private type with discriminants is considered to fall in the\n\tcategory of unconstrained or tagged items.\n\n2014-08-01  Arnaud charlet  <charlet@adacore.com>\n\n\t* s-os_lib.adb (Open_Append): New functions to open a file for\n\tappending. This binds to the already existing (but not used)\n\t__gnat_open_append.\n\t* osint.ads, osint.adb (Open_File_To_Append_And_Check): New procedure\n\tto open a file for appending.\n\t* osint-c.ads, osint-c.adb (Open_Output_Library_Info): New procedure\n\tto open the ALI file for appending.\n\nFrom-SVN: r213470", "tree": {"sha": "75e5130028b296638b0bf0c1946ed652a2f59257", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/75e5130028b296638b0bf0c1946ed652a2f59257"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/41d8ee1d52ca454571226a1083fcd66b169c5cda", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41d8ee1d52ca454571226a1083fcd66b169c5cda", "html_url": "https://github.com/Rust-GCC/gccrs/commit/41d8ee1d52ca454571226a1083fcd66b169c5cda", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41d8ee1d52ca454571226a1083fcd66b169c5cda/comments", "author": null, "committer": null, "parents": [{"sha": "2feb1f84d7f26dadd19811a81b33f7bf29065272", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2feb1f84d7f26dadd19811a81b33f7bf29065272", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2feb1f84d7f26dadd19811a81b33f7bf29065272"}], "stats": {"total": 222, "additions": 175, "deletions": 47}, "files": [{"sha": "9b58a0836a2a285d8a11112fddf9b1d528159ab2", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41d8ee1d52ca454571226a1083fcd66b169c5cda/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41d8ee1d52ca454571226a1083fcd66b169c5cda/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=41d8ee1d52ca454571226a1083fcd66b169c5cda", "patch": "@@ -1,3 +1,22 @@\n+2014-08-01  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* sem_ch13.adb (Analyze_Aspect_Specifications): Code\n+\treformatting. Store the generated pragma Import in the related\n+\tsubprogram as routine Wrap_Imported_Subprogram will need it later.\n+\t* sem_prag.adb (Is_Unconstrained_Or_Tagged_Item): An item of\n+\ta private type with discriminants is considered to fall in the\n+\tcategory of unconstrained or tagged items.\n+\n+2014-08-01  Arnaud charlet  <charlet@adacore.com>\n+\n+\t* s-os_lib.adb (Open_Append): New functions to open a file for\n+\tappending. This binds to the already existing (but not used)\n+\t__gnat_open_append.\n+\t* osint.ads, osint.adb (Open_File_To_Append_And_Check): New procedure\n+\tto open a file for appending.\n+\t* osint-c.ads, osint-c.adb (Open_Output_Library_Info): New procedure\n+\tto open the ALI file for appending.\n+\n 2014-08-01  Robert Dewar  <dewar@adacore.com>\n \n \t* sem_ch8.adb: Minor reformatting."}, {"sha": "f955c2f34d35151e5949e7a4a7345ee82f9f7601", "filename": "gcc/ada/osint-c.adb", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41d8ee1d52ca454571226a1083fcd66b169c5cda/gcc%2Fada%2Fosint-c.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41d8ee1d52ca454571226a1083fcd66b169c5cda/gcc%2Fada%2Fosint-c.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fosint-c.adb?ref=41d8ee1d52ca454571226a1083fcd66b169c5cda", "patch": "@@ -197,6 +197,16 @@ package body Osint.C is\n       Create_File_And_Check (Output_FD, Text);\n    end Create_Output_Library_Info;\n \n+   ------------------------------\n+   -- Open_Output_Library_Info --\n+   ------------------------------\n+\n+   procedure Open_Output_Library_Info is\n+   begin\n+      Set_Library_Info_Name;\n+      Open_File_To_Append_And_Check (Output_FD, Text);\n+   end Open_Output_Library_Info;\n+\n    -------------------------\n    -- Create_Repinfo_File --\n    -------------------------"}, {"sha": "0d6646ed3fab7cdec1b10f8d0e31b0a5ef3cb19b", "filename": "gcc/ada/osint-c.ads", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41d8ee1d52ca454571226a1083fcd66b169c5cda/gcc%2Fada%2Fosint-c.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41d8ee1d52ca454571226a1083fcd66b169c5cda/gcc%2Fada%2Fosint-c.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fosint-c.ads?ref=41d8ee1d52ca454571226a1083fcd66b169c5cda", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2001-2011, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2001-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -127,6 +127,12 @@ package Osint.C is\n    --  is currently being compiled (i.e. the file which was most recently\n    --  returned by Next_Main_Source).\n \n+   procedure Open_Output_Library_Info;\n+   --  Opens the output library information file for the source file which\n+   --  is currently being compiled (i.e. the file which was most recently\n+   --  returned by Next_Main_Source) for appending. This is used to append\n+   --  the globals computed in flow analysis in gnatprove mode.\n+\n    procedure Write_Library_Info (Info : String);\n    --  Writes the contents of the referenced string to the library information\n    --  file for the main source file currently being compiled (i.e. the file"}, {"sha": "93e25501f77917c5d4f1b0fa5d6520d79a76db55", "filename": "gcc/ada/osint.adb", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41d8ee1d52ca454571226a1083fcd66b169c5cda/gcc%2Fada%2Fosint.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41d8ee1d52ca454571226a1083fcd66b169c5cda/gcc%2Fada%2Fosint.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fosint.adb?ref=41d8ee1d52ca454571226a1083fcd66b169c5cda", "patch": "@@ -722,6 +722,23 @@ package body Osint is\n       end if;\n    end Create_File_And_Check;\n \n+   -----------------------------------\n+   -- Open_File_To_Append_And_Check --\n+   -----------------------------------\n+\n+   procedure Open_File_To_Append_And_Check\n+     (Fdesc : out File_Descriptor;\n+      Fmode : Mode)\n+   is\n+   begin\n+      Output_File_Name := Name_Enter;\n+      Fdesc := Open_Append (Name_Buffer'Address, Fmode);\n+\n+      if Fdesc = Invalid_FD then\n+         Fail (\"Cannot create: \" & Name_Buffer (1 .. Name_Len));\n+      end if;\n+   end Open_File_To_Append_And_Check;\n+\n    ------------------------\n    -- Current_File_Index --\n    ------------------------"}, {"sha": "e281c6a79ad7cae4559ec3e049357daa351838c8", "filename": "gcc/ada/osint.ads", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41d8ee1d52ca454571226a1083fcd66b169c5cda/gcc%2Fada%2Fosint.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41d8ee1d52ca454571226a1083fcd66b169c5cda/gcc%2Fada%2Fosint.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fosint.ads?ref=41d8ee1d52ca454571226a1083fcd66b169c5cda", "patch": "@@ -725,6 +725,15 @@ private\n    --  parameter is set to either Text or Binary (for details see description\n    --  of System.OS_Lib.Create_File).\n \n+   procedure Open_File_To_Append_And_Check\n+     (Fdesc : out File_Descriptor;\n+      Fmode : Mode);\n+   --  Opens the file whose name (NUL terminated) is in Name_Buffer (with the\n+   --  length in Name_Len), and place the resulting descriptor in Fdesc. Issue\n+   --  message and exit with fatal error if file cannot be opened. The Fmode\n+   --  parameter is set to either Text or Binary (for details see description\n+   --  of System.OS_Lib.Open_Append).\n+\n    type Program_Type is (Compiler, Binder, Make, Gnatls, Unspecified);\n    --  Program currently running\n    procedure Set_Program (P : Program_Type);"}, {"sha": "3fad849b87adbade4f03b98db61e6c29d2c81c50", "filename": "gcc/ada/s-os_lib.adb", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41d8ee1d52ca454571226a1083fcd66b169c5cda/gcc%2Fada%2Fs-os_lib.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41d8ee1d52ca454571226a1083fcd66b169c5cda/gcc%2Fada%2Fs-os_lib.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-os_lib.adb?ref=41d8ee1d52ca454571226a1083fcd66b169c5cda", "patch": "@@ -2257,6 +2257,33 @@ package body System.OS_Lib is\n       return \"\";\n    end Normalize_Pathname;\n \n+   -----------------\n+   -- Open_Append --\n+   -----------------\n+\n+   function Open_Append\n+     (Name  : C_File_Name;\n+      Fmode : Mode) return File_Descriptor\n+   is\n+      function C_Open_Append\n+        (Name  : C_File_Name;\n+         Fmode : Mode) return File_Descriptor;\n+      pragma Import (C, C_Open_Append, \"__gnat_open_append\");\n+   begin\n+      return C_Open_Append (Name, Fmode);\n+   end Open_Append;\n+\n+   function Open_Append\n+     (Name  : String;\n+      Fmode : Mode) return File_Descriptor\n+   is\n+      C_Name : String (1 .. Name'Length + 1);\n+   begin\n+      C_Name (1 .. Name'Length) := Name;\n+      C_Name (C_Name'Last)      := ASCII.NUL;\n+      return Open_Append (C_Name (C_Name'First)'Address, Fmode);\n+   end Open_Append;\n+\n    ---------------\n    -- Open_Read --\n    ---------------"}, {"sha": "2a24ca29d62bb3637cfd42218d1a5e0279be10a4", "filename": "gcc/ada/s-os_lib.ads", "status": "modified", "additions": 16, "deletions": 4, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41d8ee1d52ca454571226a1083fcd66b169c5cda/gcc%2Fada%2Fs-os_lib.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41d8ee1d52ca454571226a1083fcd66b169c5cda/gcc%2Fada%2Fs-os_lib.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-os_lib.ads?ref=41d8ee1d52ca454571226a1083fcd66b169c5cda", "patch": "@@ -208,14 +208,22 @@ package System.OS_Lib is\n    function Open_Read\n      (Name  : String;\n       Fmode : Mode) return File_Descriptor;\n-   --  Open file Name for reading, returning file descriptor File descriptor\n-   --  returned is Invalid_FD if file cannot be opened.\n+   --  Open file Name for reading, returning its file descriptor. File\n+   --  descriptor returned is Invalid_FD if the file cannot be opened.\n \n    function Open_Read_Write\n      (Name  : String;\n       Fmode : Mode) return File_Descriptor;\n-   --  Open file Name for both reading and writing, returning file descriptor.\n-   --  File descriptor returned is Invalid_FD if file cannot be opened.\n+   --  Open file Name for both reading and writing, returning its file\n+   --  descriptor. File descriptor returned is Invalid_FD if the file\n+   --  cannot be opened.\n+\n+   function Open_Append\n+     (Name  : String;\n+      Fmode : Mode) return File_Descriptor;\n+   --  Opens file Name for appending, returning its file descriptor. File\n+   --  descriptor returned is Invalid_FD if the file cannot be successfully\n+   --  opened.\n \n    function Create_File\n      (Name  : String;\n@@ -642,6 +650,10 @@ package System.OS_Lib is\n      (Name  : C_File_Name;\n       Fmode : Mode) return File_Descriptor;\n \n+   function Open_Append\n+     (Name  : C_File_Name;\n+      Fmode : Mode) return File_Descriptor;\n+\n    function Create_File\n      (Name  : C_File_Name;\n       Fmode : Mode) return File_Descriptor;"}, {"sha": "f454a1e56e56207394af44cc1dbe7966fbfa1ab1", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 67, "deletions": 42, "changes": 109, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41d8ee1d52ca454571226a1083fcd66b169c5cda/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41d8ee1d52ca454571226a1083fcd66b169c5cda/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=41d8ee1d52ca454571226a1083fcd66b169c5cda", "patch": "@@ -1859,67 +1859,92 @@ package body Sem_Ch13 is\n                   --  pragma is one of Convention/Import/Export.\n \n                   declare\n-                     P_Name   : Name_Id;\n-                     A_Name   : Name_Id;\n-                     A        : Node_Id;\n-                     Arg_List : List_Id;\n-                     Found    : Boolean;\n-                     L_Assoc  : Node_Id;\n-                     E_Assoc  : Node_Id;\n+                     Args : constant List_Id := New_List (\n+                              Make_Pragma_Argument_Association (Sloc (Expr),\n+                                Expression => Relocate_Node (Expr)),\n+                              Make_Pragma_Argument_Association (Sloc (Ent),\n+                                Expression => Ent));\n+\n+                     Imp_Exp_Seen : Boolean := False;\n+                     --  Flag set when aspect Import or Export has been seen\n+\n+                     Imp_Seen : Boolean := False;\n+                     --  Flag set when aspect Import has been seen\n+\n+                     Asp        : Node_Id;\n+                     Asp_Nam    : Name_Id;\n+                     Extern_Arg : Node_Id;\n+                     Link_Arg   : Node_Id;\n+                     Prag_Nam   : Name_Id;\n \n                   begin\n-                     P_Name   := Chars (Id);\n-                     Found    := False;\n-                     Arg_List := New_List;\n-                     L_Assoc  := Empty;\n-                     E_Assoc  := Empty;\n-\n-                     A := First (L);\n-                     while Present (A) loop\n-                        A_Name := Chars (Identifier (A));\n-\n-                        if Nam_In (A_Name, Name_Import, Name_Export) then\n-                           if Found then\n-                              Error_Msg_N (\"conflicting\", A);\n+                     Extern_Arg := Empty;\n+                     Link_Arg   := Empty;\n+                     Prag_Nam   := Chars (Id);\n+\n+                     Asp := First (L);\n+                     while Present (Asp) loop\n+                        Asp_Nam := Chars (Identifier (Asp));\n+\n+                        --  Aspects Import and Export take precedence over\n+                        --  aspect Convention. As a result the generated pragma\n+                        --  must carry the proper interfacing aspect's name.\n+\n+                        if Nam_In (Asp_Nam, Name_Import, Name_Export) then\n+                           if Imp_Exp_Seen then\n+                              Error_Msg_N (\"conflicting\", Asp);\n                            else\n-                              Found := True;\n+                              Imp_Exp_Seen := True;\n+\n+                              if Asp_Nam = Name_Import then\n+                                 Imp_Seen := True;\n+                              end if;\n                            end if;\n \n-                           P_Name := A_Name;\n+                           Prag_Nam := Asp_Nam;\n+\n+                        --  Aspect External_Name adds an extra argument to the\n+                        --  generated pragma.\n \n-                        elsif A_Name = Name_Link_Name then\n-                           L_Assoc :=\n+                        elsif Asp_Nam = Name_External_Name then\n+                           Extern_Arg :=\n                              Make_Pragma_Argument_Association (Loc,\n-                               Chars      => A_Name,\n-                               Expression => Relocate_Node (Expression (A)));\n+                               Chars      => Asp_Nam,\n+                               Expression => Relocate_Node (Expression (Asp)));\n \n-                        elsif A_Name = Name_External_Name then\n-                           E_Assoc :=\n+                        --  Aspect Link_Name adds an extra argument to the\n+                        --  generated pragma.\n+\n+                        elsif Asp_Nam = Name_Link_Name then\n+                           Link_Arg :=\n                              Make_Pragma_Argument_Association (Loc,\n-                               Chars      => A_Name,\n-                               Expression => Relocate_Node (Expression (A)));\n+                               Chars      => Asp_Nam,\n+                               Expression => Relocate_Node (Expression (Asp)));\n                         end if;\n \n-                        Next (A);\n+                        Next (Asp);\n                      end loop;\n \n-                     Arg_List := New_List (\n-                       Make_Pragma_Argument_Association (Sloc (Expr),\n-                         Expression => Relocate_Node (Expr)),\n-                       Make_Pragma_Argument_Association (Sloc (Ent),\n-                         Expression => Ent));\n+                     --  Assemble the full argument list\n \n-                     if Present (L_Assoc) then\n-                        Append_To (Arg_List, L_Assoc);\n+                     if Present (Link_Arg) then\n+                        Append_To (Args, Link_Arg);\n                      end if;\n \n-                     if Present (E_Assoc) then\n-                        Append_To (Arg_List, E_Assoc);\n+                     if Present (Extern_Arg) then\n+                        Append_To (Args, Extern_Arg);\n                      end if;\n \n                      Make_Aitem_Pragma\n-                       (Pragma_Argument_Associations => Arg_List,\n-                        Pragma_Name                  => P_Name);\n+                       (Pragma_Argument_Associations => Args,\n+                        Pragma_Name                  => Prag_Nam);\n+\n+                     --  Store the generated pragma Import in the related\n+                     --  subprogram.\n+\n+                     if Imp_Seen and then Is_Subprogram (E) then\n+                        Set_Import_Pragma (E, Aitem);\n+                     end if;\n                   end;\n \n                --  CPU, Interrupt_Priority, Priority"}, {"sha": "a711f1b3a3b46b82249ff78c631ad600d56d5f57", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41d8ee1d52ca454571226a1083fcd66b169c5cda/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41d8ee1d52ca454571226a1083fcd66b169c5cda/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=41d8ee1d52ca454571226a1083fcd66b169c5cda", "patch": "@@ -25104,6 +25104,9 @@ package body Sem_Prag is\n             return Has_Unconstrained_Component (Typ);\n          end if;\n \n+      elsif Is_Private_Type (Typ) and then Has_Discriminants (Typ) then\n+         return True;\n+\n       else\n          return False;\n       end if;"}]}