{"sha": "470f5b53a29f5310b0e3782a06f18430de836fd2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDcwZjViNTNhMjlmNTMxMGIwZTM3ODJhMDZmMTg0MzBkZTgzNmZkMg==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2011-04-21T05:55:22Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2011-04-21T05:55:22Z"}, "message": "Use mpfr_prec_round, not real_convert, to constraint floats.\n\nFrom-SVN: r172811", "tree": {"sha": "25c3333ba5a3feecc16cc0dfc5053a022b9770db", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/25c3333ba5a3feecc16cc0dfc5053a022b9770db"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/470f5b53a29f5310b0e3782a06f18430de836fd2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/470f5b53a29f5310b0e3782a06f18430de836fd2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/470f5b53a29f5310b0e3782a06f18430de836fd2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/470f5b53a29f5310b0e3782a06f18430de836fd2/comments", "author": null, "committer": null, "parents": [{"sha": "fa9ef321070b9fbedf735ee8fdf864aa7c2b80f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa9ef321070b9fbedf735ee8fdf864aa7c2b80f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fa9ef321070b9fbedf735ee8fdf864aa7c2b80f5"}], "stats": {"total": 20, "additions": 3, "deletions": 17}, "files": [{"sha": "8a1fc349b95759bde7faaefeb3345c6c3d0f0ef3", "filename": "gcc/go/gofrontend/expressions.cc", "status": "modified", "additions": 3, "deletions": 17, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/470f5b53a29f5310b0e3782a06f18430de836fd2/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/470f5b53a29f5310b0e3782a06f18430de836fd2/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc?ref=470f5b53a29f5310b0e3782a06f18430de836fd2", "patch": "@@ -1909,13 +1909,7 @@ Float_expression::constrain_float(mpfr_t val, Type* type)\n {\n   Float_type* ftype = type->float_type();\n   if (ftype != NULL && !ftype->is_abstract())\n-    {\n-      tree type_tree = ftype->type_tree();\n-      REAL_VALUE_TYPE rvt;\n-      real_from_mpfr(&rvt, val, type_tree, GMP_RNDN);\n-      real_convert(&rvt, TYPE_MODE(type_tree), &rvt);\n-      mpfr_from_real(val, &rvt, GMP_RNDN);\n-    }\n+    mpfr_prec_round(val, ftype->bits(), GMP_RNDN);\n }\n \n // Return a floating point constant value.\n@@ -2158,16 +2152,8 @@ Complex_expression::constrain_complex(mpfr_t real, mpfr_t imag, Type* type)\n   Complex_type* ctype = type->complex_type();\n   if (ctype != NULL && !ctype->is_abstract())\n     {\n-      tree type_tree = ctype->type_tree();\n-\n-      REAL_VALUE_TYPE rvt;\n-      real_from_mpfr(&rvt, real, TREE_TYPE(type_tree), GMP_RNDN);\n-      real_convert(&rvt, TYPE_MODE(TREE_TYPE(type_tree)), &rvt);\n-      mpfr_from_real(real, &rvt, GMP_RNDN);\n-\n-      real_from_mpfr(&rvt, imag, TREE_TYPE(type_tree), GMP_RNDN);\n-      real_convert(&rvt, TYPE_MODE(TREE_TYPE(type_tree)), &rvt);\n-      mpfr_from_real(imag, &rvt, GMP_RNDN);\n+      mpfr_prec_round(real, ctype->bits() / 2, GMP_RNDN);\n+      mpfr_prec_round(imag, ctype->bits() / 2, GMP_RNDN);\n     }\n }\n "}]}