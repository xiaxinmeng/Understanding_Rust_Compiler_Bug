{"sha": "03bf3bc1050030f8ad8f92fc4b6d8a3f69a8f5b8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDNiZjNiYzEwNTAwMzBmOGFkOGY5MmZjNGI2ZDhhM2Y2OWE4ZjViOA==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2006-01-30T15:32:09Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2006-01-30T15:32:09Z"}, "message": "acinclude.m4 ([GLIBCXX_CHECK_C99_TR1]): Do the <inttypes.h> checks only if the <stdint.h> checks are successful.\n\n2006-01-30  Paolo Carlini  <pcarlini@suse.de>\n\n\t* acinclude.m4 ([GLIBCXX_CHECK_C99_TR1]): Do the <inttypes.h>\n\tchecks only if the <stdint.h> checks are successful.\n\t* configure: Regenerate.\n\nFrom-SVN: r110399", "tree": {"sha": "fd4f7106f8c6d5f00e1a6dbed8368648ff3ce996", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fd4f7106f8c6d5f00e1a6dbed8368648ff3ce996"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/03bf3bc1050030f8ad8f92fc4b6d8a3f69a8f5b8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03bf3bc1050030f8ad8f92fc4b6d8a3f69a8f5b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/03bf3bc1050030f8ad8f92fc4b6d8a3f69a8f5b8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03bf3bc1050030f8ad8f92fc4b6d8a3f69a8f5b8/comments", "author": null, "committer": null, "parents": [{"sha": "a6ab9fc0872bbc3330490c0e3ad5d0a61dbe4458", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6ab9fc0872bbc3330490c0e3ad5d0a61dbe4458", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a6ab9fc0872bbc3330490c0e3ad5d0a61dbe4458"}], "stats": {"total": 77, "additions": 41, "deletions": 36}, "files": [{"sha": "a2af31ac714e958223287a85ce1824eb8000fc83", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03bf3bc1050030f8ad8f92fc4b6d8a3f69a8f5b8/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03bf3bc1050030f8ad8f92fc4b6d8a3f69a8f5b8/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=03bf3bc1050030f8ad8f92fc4b6d8a3f69a8f5b8", "patch": "@@ -1,3 +1,9 @@\n+2006-01-30  Paolo Carlini  <pcarlini@suse.de>\n+\n+\t* acinclude.m4 ([GLIBCXX_CHECK_C99_TR1]): Do the <inttypes.h>\n+\tchecks only if the <stdint.h> checks are successful.\n+\t* configure: Regenerate.\n+\n 2006-01-30  Paolo Carlini  <pcarlini@suse.de>\n \n \t* include/tr1/cinttypes: New."}, {"sha": "e83658f283a86f813cccf3fd4207d62ad047f769", "filename": "libstdc++-v3/acinclude.m4", "status": "modified", "additions": 19, "deletions": 17, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03bf3bc1050030f8ad8f92fc4b6d8a3f69a8f5b8/libstdc%2B%2B-v3%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03bf3bc1050030f8ad8f92fc4b6d8a3f69a8f5b8/libstdc%2B%2B-v3%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Facinclude.m4?ref=03bf3bc1050030f8ad8f92fc4b6d8a3f69a8f5b8", "patch": "@@ -1181,27 +1181,29 @@ AC_DEFUN([GLIBCXX_CHECK_C99_TR1], [\n \t      <tr1/cstdint> in namespace std::tr1.])\n   fi\n \n-  # Check for the existence of <inttypes.h> functions.\n-  AC_MSG_CHECKING([for ISO C99 support to TR1 in <inttypes.h>])\n-  AC_CACHE_VAL(ac_c99_inttypes_tr1, [\n-  AC_TRY_COMPILE([#include <inttypes.h>],\n-\t         [intmax_t i, numer, denom, base;\n-\t          const char* s;\n-\t          char** endptr;\n-\t          intmax_t ret;\n-\t          uintmax_t uret;\n-\t          imaxdiv_t dret;\n-\t          ret = imaxabs(i);\n-\t          dret = imaxdiv(numer, denom);\n-\t          ret = strtoimax(s, endptr, base);\n-\t          uret = strtoumax(s, endptr, base);\n-\t\t ],[ac_c99_inttypes_tr1=yes], [ac_c99_inttypes_tr1=no])\n-  ])\n+  # Check for the existence of <inttypes.h> functions (NB: doesn't make\n+  # sense if the previous check fails, per C99, 7.8/1).\n+  ac_c99_inttypes_tr1=no;\n+  if test x\"$ac_c99_stdint_tr1\" = x\"yes\"; then\n+    AC_MSG_CHECKING([for ISO C99 support to TR1 in <inttypes.h>])\n+    AC_TRY_COMPILE([#include <inttypes.h>],\n+\t           [intmax_t i, numer, denom, base;\n+\t            const char* s;\n+\t            char** endptr;\n+\t            intmax_t ret;\n+\t            uintmax_t uret;\n+\t            imaxdiv_t dret;\n+\t            ret = imaxabs(i);\n+\t            dret = imaxdiv(numer, denom);\n+\t            ret = strtoimax(s, endptr, base);\n+\t            uret = strtoumax(s, endptr, base);\n+        \t   ],[ac_c99_inttypes_tr1=yes], [ac_c99_inttypes_tr1=no])\n+  fi\n   AC_MSG_RESULT($ac_c99_inttypes_tr1)\n   if test x\"$ac_c99_inttypes_tr1\" = x\"yes\"; then\n     AC_DEFINE(_GLIBCXX_USE_C99_INTTYPES_TR1, 1,\n               [Define if C99 functions in <inttypes.h> should be imported in\n-\t      <tr1/cinttypes> in namespace std::tr1.])\n+              <tr1/cinttypes> in namespace std::tr1.])\n   fi\n \n   AC_LANG_RESTORE"}, {"sha": "dfc5b4ab0e2b1be5399f8b252319bf56161c85e8", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 16, "deletions": 19, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03bf3bc1050030f8ad8f92fc4b6d8a3f69a8f5b8/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03bf3bc1050030f8ad8f92fc4b6d8a3f69a8f5b8/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=03bf3bc1050030f8ad8f92fc4b6d8a3f69a8f5b8", "patch": "@@ -30610,14 +30610,13 @@ _ACEOF\n \n   fi\n \n-  # Check for the existence of <inttypes.h> functions.\n-  echo \"$as_me:$LINENO: checking for ISO C99 support to TR1 in <inttypes.h>\" >&5\n+  # Check for the existence of <inttypes.h> functions (NB: doesn't make\n+  # sense if the previous check fails, per C99, 7.8/1).\n+  ac_c99_inttypes_tr1=no;\n+  if test x\"$ac_c99_stdint_tr1\" = x\"yes\"; then\n+    echo \"$as_me:$LINENO: checking for ISO C99 support to TR1 in <inttypes.h>\" >&5\n echo $ECHO_N \"checking for ISO C99 support to TR1 in <inttypes.h>... $ECHO_C\" >&6\n-  if test \"${ac_c99_inttypes_tr1+set}\" = set; then\n-  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n-else\n-\n-  cat >conftest.$ac_ext <<_ACEOF\n+    cat >conftest.$ac_ext <<_ACEOF\n /* confdefs.h.  */\n _ACEOF\n cat confdefs.h >>conftest.$ac_ext\n@@ -30628,15 +30627,15 @@ int\n main ()\n {\n intmax_t i, numer, denom, base;\n-\t          const char* s;\n-\t          char** endptr;\n-\t          intmax_t ret;\n-\t          uintmax_t uret;\n-\t          imaxdiv_t dret;\n-\t          ret = imaxabs(i);\n-\t          dret = imaxdiv(numer, denom);\n-\t          ret = strtoimax(s, endptr, base);\n-\t          uret = strtoumax(s, endptr, base);\n+\t            const char* s;\n+\t            char** endptr;\n+\t            intmax_t ret;\n+\t            uintmax_t uret;\n+\t            imaxdiv_t dret;\n+\t            ret = imaxabs(i);\n+\t            dret = imaxdiv(numer, denom);\n+\t            ret = strtoimax(s, endptr, base);\n+\t            uret = strtoumax(s, endptr, base);\n \n   ;\n   return 0;\n@@ -30672,9 +30671,7 @@ sed 's/^/| /' conftest.$ac_ext >&5\n ac_c99_inttypes_tr1=no\n fi\n rm -f conftest.err conftest.$ac_objext conftest.$ac_ext\n-\n-fi\n-\n+  fi\n   echo \"$as_me:$LINENO: result: $ac_c99_inttypes_tr1\" >&5\n echo \"${ECHO_T}$ac_c99_inttypes_tr1\" >&6\n   if test x\"$ac_c99_inttypes_tr1\" = x\"yes\"; then"}]}