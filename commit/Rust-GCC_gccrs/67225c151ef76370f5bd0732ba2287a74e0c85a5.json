{"sha": "67225c151ef76370f5bd0732ba2287a74e0c85a5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjcyMjVjMTUxZWY3NjM3MGY1YmQwNzMyYmEyMjg3YTc0ZTBjODVhNQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-04-30T11:22:58Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-04-30T11:22:58Z"}, "message": "(expand_expr, case CONSTRUCTOR): Don't set target to zero if more then one word.\n\n(expand_expr, case CONSTRUCTOR): Don't set target to zero if more then one\nword.\nPass size and alignment to move_by_pieces_ninsns in bytes, not bits.\n\nFrom-SVN: r9548", "tree": {"sha": "f1b4183796af77e902dd5db15168e2a525cb04b9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f1b4183796af77e902dd5db15168e2a525cb04b9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/67225c151ef76370f5bd0732ba2287a74e0c85a5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67225c151ef76370f5bd0732ba2287a74e0c85a5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/67225c151ef76370f5bd0732ba2287a74e0c85a5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67225c151ef76370f5bd0732ba2287a74e0c85a5/comments", "author": null, "committer": null, "parents": [{"sha": "c256df0bf7bd0b72dc8df19c49972051f0bfa5cf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c256df0bf7bd0b72dc8df19c49972051f0bfa5cf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c256df0bf7bd0b72dc8df19c49972051f0bfa5cf"}], "stats": {"total": 10, "additions": 6, "deletions": 4}, "files": [{"sha": "e940ccb3a9c3842de6cf99092c3d071bac0055a1", "filename": "gcc/expr.c", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67225c151ef76370f5bd0732ba2287a74e0c85a5/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67225c151ef76370f5bd0732ba2287a74e0c85a5/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=67225c151ef76370f5bd0732ba2287a74e0c85a5", "patch": "@@ -2984,8 +2984,10 @@ store_constructor (exp, target)\n \n       /* If we are building a static constructor into a register,\n \t set the initial value as zero so we can fold the value into\n-\t a constant.  */\n-      else if (GET_CODE (target) == REG && TREE_STATIC (exp))\n+\t a constant.  But if more than one register is involved,\n+\t this probably loses.  */\n+      else if (GET_CODE (target) == REG && TREE_STATIC (exp)\n+\t       && GET_MODE_SIZE (GET_MODE (target)) <= UNITS_PER_WORD)\n \temit_move_insn (target, const0_rtx);\n \n       /* If the constructor has fewer fields than the structure,\n@@ -4473,8 +4475,8 @@ expand_expr (exp, target, tmode, modifier)\n \t\t    || TREE_ADDRESSABLE (exp)\n \t\t    || (TREE_CODE (TYPE_SIZE (type)) == INTEGER_CST\n \t\t\t&& (move_by_pieces_ninsns\n-\t\t\t    (TREE_INT_CST_LOW (TYPE_SIZE (type)),\n-\t\t\t     TYPE_ALIGN (type))\n+\t\t\t    (TREE_INT_CST_LOW (TYPE_SIZE (type))/BITS_PER_UNIT,\n+\t\t\t     TYPE_ALIGN (type) / BITS_PER_UNIT)\n \t\t\t    > MOVE_RATIO))))\n \t       || (modifier == EXPAND_INITIALIZER && TREE_CONSTANT (exp)))\n \t{"}]}