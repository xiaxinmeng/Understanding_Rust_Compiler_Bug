{"sha": "d8e29a65ddcd21f2e2cad1b8eb09fff6b96bd6fa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDhlMjlhNjVkZGNkMjFmMmUyY2FkMWI4ZWIwOWZmZjZiOTZiZDZmYQ==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-08-06T01:09:27Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-08-06T01:09:27Z"}, "message": "(attrib): Support attribute `volatile' with alias `noreturn', and `const'.\n\n(stmt): In an expr stmt, call default_conversion for arrays/functions.\n\nFrom-SVN: r5083", "tree": {"sha": "a97ea54468a0330aeca3a407de715fd675d4b819", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a97ea54468a0330aeca3a407de715fd675d4b819"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d8e29a65ddcd21f2e2cad1b8eb09fff6b96bd6fa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8e29a65ddcd21f2e2cad1b8eb09fff6b96bd6fa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d8e29a65ddcd21f2e2cad1b8eb09fff6b96bd6fa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8e29a65ddcd21f2e2cad1b8eb09fff6b96bd6fa/comments", "author": null, "committer": null, "parents": [{"sha": "3550617cd5c53d0a2a7207295df8ae26e20769ad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3550617cd5c53d0a2a7207295df8ae26e20769ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3550617cd5c53d0a2a7207295df8ae26e20769ad"}], "stats": {"total": 9, "additions": 8, "deletions": 1}, "files": [{"sha": "04879dc2e93e146e32618030109226ff4e3acfe4", "filename": "gcc/c-parse.in", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8e29a65ddcd21f2e2cad1b8eb09fff6b96bd6fa/gcc%2Fc-parse.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8e29a65ddcd21f2e2cad1b8eb09fff6b96bd6fa/gcc%2Fc-parse.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-parse.in?ref=d8e29a65ddcd21f2e2cad1b8eb09fff6b96bd6fa", "patch": "@@ -1063,10 +1063,12 @@ attribute_list\n \n attrib\n     : IDENTIFIER\n-\t{ if (strcmp (IDENTIFIER_POINTER ($1), \"packed\"))\n+\t{ if (strcmp (IDENTIFIER_POINTER ($1), \"packed\")\n+\t      && strcmp (IDENTIFIER_POINTER ($1), \"noreturn\"))\n \t    warning (\"`%s' attribute directive ignored\",\n \t\t     IDENTIFIER_POINTER ($1));\n \t  $$ = $1; }\n+    | TYPE_QUAL\n     | IDENTIFIER '(' IDENTIFIER ')'\n \t{ /* If not \"mode (m)\", then issue warning.  */\n \t  if (strcmp (IDENTIFIER_POINTER ($1), \"mode\") != 0)\n@@ -1643,6 +1645,11 @@ stmt:\n \t| expr ';'\n \t\t{ stmt_count++;\n \t\t  emit_line_note ($<filename>-1, $<lineno>0);\n+\t\t  /* Call default_conversion to get an error\n+\t\t     on referring to a register array if pedantic.  */\n+\t\t  if (TREE_CODE (TREE_TYPE ($1)) == ARRAY_TYPE\n+\t\t      || TREE_CODE (TREE_TYPE ($1)) == FUNCTION_TYPE)\n+\t\t    $1 = default_conversion ($1);\n \t\t  iterator_expand ($1);\n \t\t  clear_momentary (); }\n \t| simple_if ELSE"}]}