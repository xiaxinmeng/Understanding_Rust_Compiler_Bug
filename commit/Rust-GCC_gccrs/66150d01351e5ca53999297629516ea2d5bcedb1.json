{"sha": "66150d01351e5ca53999297629516ea2d5bcedb1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjYxNTBkMDEzNTFlNWNhNTM5OTkyOTc2Mjk1MTZlYTJkNWJjZWRiMQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-10-25T14:39:59Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-10-25T14:39:59Z"}, "message": "[multiple changes]\n\n2010-10-25  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_warn.adb, einfo.ads, exp_ch4.adb: Minor comment fix\n\t* sem_case.adb: Comment clarification for loops through false\n\tpredicates.\n\t* sem_util.adb: Minor reformatting\n\t(Check_Order_Dependence): Fix bad double blank in error message\n\n2010-10-25  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch4.adb (Analyze_Membership_Op): in Ada_2012 a membership\n\toperation can have a single alternative that is a value of the type.\n\tRewrite operation as an equality test.\n\nFrom-SVN: r165918", "tree": {"sha": "2c6f0c9dfac31c5f6cbdac0e6b0f7f6d628a45b9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2c6f0c9dfac31c5f6cbdac0e6b0f7f6d628a45b9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/66150d01351e5ca53999297629516ea2d5bcedb1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66150d01351e5ca53999297629516ea2d5bcedb1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/66150d01351e5ca53999297629516ea2d5bcedb1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66150d01351e5ca53999297629516ea2d5bcedb1/comments", "author": null, "committer": null, "parents": [{"sha": "1e194575d06f78b82061218f6405c5e8a21ce085", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e194575d06f78b82061218f6405c5e8a21ce085", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1e194575d06f78b82061218f6405c5e8a21ce085"}], "stats": {"total": 103, "additions": 77, "deletions": 26}, "files": [{"sha": "40198cfb2bc4524adf4ea90fec77d3be020f7620", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66150d01351e5ca53999297629516ea2d5bcedb1/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66150d01351e5ca53999297629516ea2d5bcedb1/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=66150d01351e5ca53999297629516ea2d5bcedb1", "patch": "@@ -1,3 +1,17 @@\n+2010-10-25  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_warn.adb, einfo.ads, exp_ch4.adb: Minor comment fix\n+\t* sem_case.adb: Comment clarification for loops through false\n+\tpredicates.\n+\t* sem_util.adb: Minor reformatting\n+\t(Check_Order_Dependence): Fix bad double blank in error message\n+\n+2010-10-25  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch4.adb (Analyze_Membership_Op): in Ada_2012 a membership\n+\toperation can have a single alternative that is a value of the type.\n+\tRewrite operation as an equality test.\n+\n 2010-10-25  Matthew Heaney  <heaney@adacore.com>\n \n \t* Makefile.rtl, impunit.adb: Added a-cobove (bounded vector container)"}, {"sha": "851333db34a031318f3e1eeee7ee51fe9061b68a", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66150d01351e5ca53999297629516ea2d5bcedb1/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66150d01351e5ca53999297629516ea2d5bcedb1/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=66150d01351e5ca53999297629516ea2d5bcedb1", "patch": "@@ -3616,7 +3616,8 @@ package Einfo is\n --       entries sorted in ascending order, with all duplicates eliminated,\n --       and adjacent ranges coalesced, so that there is always a gap in the\n --       values between successive entries. The entries in this list are\n---       fully analyzed.\n+--       fully analyzed and typed with the base type of the subtype. Note\n+--       that all entries are static and have values within the subtype range.\n \n --    Storage_Size_Variable (Node15) [implementation base type only]\n --       Present in access types and task type entities. This flag is set"}, {"sha": "cfea0d6d6b6b930a01c3f85b91d8522d853ae188", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66150d01351e5ca53999297629516ea2d5bcedb1/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66150d01351e5ca53999297629516ea2d5bcedb1/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=66150d01351e5ca53999297629516ea2d5bcedb1", "patch": "@@ -4369,7 +4369,7 @@ package body Exp_Ch4 is\n             return Cond;\n          end Make_Cond;\n \n-      --  Start of processing for Expand_N_In\n+      --  Start of processing for Expand_Set_Membership\n \n       begin\n          Alt := Last (Alternatives (N));"}, {"sha": "fd601c5672bb2d8bb02510b4529dcc33acc2be66", "filename": "gcc/ada/sem_case.adb", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66150d01351e5ca53999297629516ea2d5bcedb1/gcc%2Fada%2Fsem_case.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66150d01351e5ca53999297629516ea2d5bcedb1/gcc%2Fada%2Fsem_case.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_case.adb?ref=66150d01351e5ca53999297629516ea2d5bcedb1", "patch": "@@ -878,6 +878,11 @@ package body Sem_Case is\n                                  C    : Node_Id;\n \n                               begin\n+                                 --  Loop through entries in predicate list,\n+                                 --  converting to choices. Note that if the\n+                                 --  list is empty, corresponding to a False\n+                                 --  predicate, then no choices are inserted.\n+\n                                  P := First (Static_Predicate (E));\n                                  while Present (P) loop\n                                     C := New_Copy (P);"}, {"sha": "8d8f7766f624f4a6a78a3146bc1c29310e05144c", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 33, "deletions": 7, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66150d01351e5ca53999297629516ea2d5bcedb1/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66150d01351e5ca53999297629516ea2d5bcedb1/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=66150d01351e5ca53999297629516ea2d5bcedb1", "patch": "@@ -2276,8 +2276,9 @@ package body Sem_Ch4 is\n    ---------------------------\n \n    procedure Analyze_Membership_Op (N : Node_Id) is\n-      L     : constant Node_Id := Left_Opnd (N);\n-      R     : constant Node_Id := Right_Opnd (N);\n+      Loc   : constant Source_Ptr := Sloc (N);\n+      L     : constant Node_Id     := Left_Opnd (N);\n+      R     : constant Node_Id     := Right_Opnd (N);\n \n       Index : Interp_Index;\n       It    : Interp;\n@@ -2439,14 +2440,39 @@ package body Sem_Ch4 is\n             end loop;\n          end if;\n \n-      --  If not a range, it can only be a subtype mark, or else there\n-      --  is a more basic error, to be diagnosed in Find_Type.\n+      --  If not a range, it can be a subtype mark, or else it is\n+      --  a degenerate membership test with a singleton value, i.e.\n+      --  a test for equality.\n \n       else\n-         Find_Type (R);\n-\n-         if Is_Entity_Name (R) then\n+         Analyze (R);\n+         if Is_Entity_Name (R)\n+           and then Is_Type (Entity (R))\n+         then\n+            Find_Type (R);\n             Check_Fully_Declared (Entity (R), R);\n+\n+         elsif Ada_Version >= Ada_2012 then\n+            if Nkind (N) = N_In then\n+               Rewrite (N,\n+                 Make_Op_Eq (Loc,\n+                   Left_Opnd  => L,\n+                   Right_Opnd => R));\n+            else\n+               Rewrite (N,\n+                 Make_Op_Ne (Loc,\n+                   Left_Opnd  => L,\n+                   Right_Opnd => R));\n+            end if;\n+\n+            Analyze (N);\n+            return;\n+\n+         else\n+            --  in previous version of the language this is an error\n+            --  that will be diagnosed below.\n+\n+            Find_Type (R);\n          end if;\n       end if;\n "}, {"sha": "38507029035a153dc2174a52cd178783c74a8fa3", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 20, "deletions": 15, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66150d01351e5ca53999297629516ea2d5bcedb1/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66150d01351e5ca53999297629516ea2d5bcedb1/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=66150d01351e5ca53999297629516ea2d5bcedb1", "patch": "@@ -1226,11 +1226,11 @@ package body Sem_Util is\n          return;\n       end if;\n \n-      --  Ada2012 AI04-0144-2 : dangerous order dependence.\n-      --  Actuals in nested calls within a construct have been collected.\n-      --  If one of them is writeable and overlaps with another one, evaluation\n-      --  of the enclosing construct is non-deterministic.\n-      --  This is illegal in Ada2012, but is treated as a warning for now.\n+      --  Ada 2012 AI04-0144-2 : dangerous order dependence. Actuals in nested\n+      --  calls within a construct have been collected. If one of them is\n+      --  writable and overlaps with another one, evaluation of the enclosing\n+      --  construct is nondeterministic. This is illegal in Ada 2012, but is\n+      --  treated as a warning for now.\n \n       for J in 1 .. Actuals_In_Call.Last loop\n          if Actuals_In_Call.Table (J).Is_Writable then\n@@ -1258,16 +1258,16 @@ package body Sem_Util is\n                   elsif Denotes_Same_Object (Act1, Act2)\n                     and then Parent (Act1) /= Parent (Act2)\n                   then\n-                     Error_Msg_N (\n-                       \"result may differ if evaluated \"\n-                        & \" after other actual in expression?\", Act1);\n+                     Error_Msg_N\n+                       (\"result may differ if evaluated \"\n+                        & \"after other actual in expression?\", Act1);\n                   end if;\n                end if;\n             end loop;\n          end if;\n       end loop;\n \n-      --  Remove checked actuals from table.\n+      --  Remove checked actuals from table\n \n       Actuals_In_Call.Set_Last (0);\n    end Check_Order_Dependence;\n@@ -2366,9 +2366,13 @@ package body Sem_Util is\n       Obj2 : Node_Id := A2;\n \n       procedure Check_Renaming (Obj : in out Node_Id);\n-      --  If an object is a renaming, examine renamed object. If is is a\n-      --  dereference of a variable, or an indexed expression with non-\n-      --  constant indices, no overlap check can be reported.\n+      --  If an object is a renaming, examine renamed object. If it is a\n+      --  dereference of a variable, or an indexed expression with non-constant\n+      --  indexes, no overlap check can be reported.\n+\n+      --------------------\n+      -- Check_Renaming --\n+      --------------------\n \n       procedure Check_Renaming (Obj : in out Node_Id) is\n       begin\n@@ -2400,6 +2404,8 @@ package body Sem_Util is\n          end if;\n       end Check_Renaming;\n \n+   --  Start of processing for Denotes_Same_Object\n+\n    begin\n       Check_Renaming (Obj1);\n       Check_Renaming (Obj2);\n@@ -2449,8 +2455,7 @@ package body Sem_Util is\n                Indx2 := First (Expressions (Obj2));\n                while Present (Indx1) loop\n \n-                  --  Indices must denote the same static value or the same\n-                  --  object.\n+                  --  Indexes must denote the same static value or same object\n \n                   if Is_OK_Static_Expression (Indx1) then\n                      if not Is_OK_Static_Expression (Indx2) then\n@@ -7989,7 +7994,7 @@ package body Sem_Util is\n \n          --  Positional parameter for subprogram, entry, or accept call.\n          --  In older versions of Ada function call arguments are never\n-         --  lvalues. In Ada2012 functions can have in-out parameters.\n+         --  lvalues. In Ada 2012 functions can have in-out parameters.\n \n          when N_Function_Call            |\n               N_Procedure_Call_Statement |"}, {"sha": "189750af2d52b052c7bae803211804fbc5317fa3", "filename": "gcc/ada/sem_warn.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66150d01351e5ca53999297629516ea2d5bcedb1/gcc%2Fada%2Fsem_warn.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66150d01351e5ca53999297629516ea2d5bcedb1/gcc%2Fada%2Fsem_warn.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_warn.adb?ref=66150d01351e5ca53999297629516ea2d5bcedb1", "patch": "@@ -3739,8 +3739,8 @@ package body Sem_Warn is\n                   elsif Nkind (Act2) = N_Function_Call then\n                      null;\n \n-                  --  If type is not by-copy we can assume that  the aliasing\n-                  --  is intended.\n+                  --  If type is not by-copy we can assume that the aliasing is\n+                  --  intended.\n \n                   elsif\n                     Is_By_Reference_Type (Underlying_Type (Etype (Form1)))"}]}