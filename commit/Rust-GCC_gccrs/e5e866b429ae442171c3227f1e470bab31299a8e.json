{"sha": "e5e866b429ae442171c3227f1e470bab31299a8e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTVlODY2YjQyOWFlNDQyMTcxYzMyMjdmMWU0NzBiYWIzMTI5OWE4ZQ==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2016-09-13T00:07:52Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@gcc.gnu.org", "date": "2016-09-13T00:07:52Z"}, "message": "Simplify edited_file::print_diff\n\ngcc/ChangeLog:\n\t* edit-context.c (edited_line::get_len): New accessor.\n\t(edited_file::print_diff): Split out hunk-printing into...\n\t(edited_file::print_diff_hunk): New method.\n\t(edited_file::print_diff_line): New method.\n\nFrom-SVN: r240103", "tree": {"sha": "700f03be8ce25edb4b9054dae6c9b978a9763d6c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/700f03be8ce25edb4b9054dae6c9b978a9763d6c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e5e866b429ae442171c3227f1e470bab31299a8e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5e866b429ae442171c3227f1e470bab31299a8e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e5e866b429ae442171c3227f1e470bab31299a8e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5e866b429ae442171c3227f1e470bab31299a8e/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "54700e2e7f11d6715670182ee37a378a89d77a12", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54700e2e7f11d6715670182ee37a378a89d77a12", "html_url": "https://github.com/Rust-GCC/gccrs/commit/54700e2e7f11d6715670182ee37a378a89d77a12"}], "stats": {"total": 153, "additions": 88, "deletions": 65}, "files": [{"sha": "c0d8efa44b75a652b672beed2e41ea9f15f442b7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5e866b429ae442171c3227f1e470bab31299a8e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5e866b429ae442171c3227f1e470bab31299a8e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e5e866b429ae442171c3227f1e470bab31299a8e", "patch": "@@ -1,3 +1,10 @@\n+2016-09-12  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* edit-context.c (edited_line::get_len): New accessor.\n+\t(edited_file::print_diff): Split out hunk-printing into...\n+\t(edited_file::print_diff_hunk): New method.\n+\t(edited_file::print_diff_line): New method.\n+\n 2016-09-12  Andrew Pinski  <apinski@cavium.com>\n \n \t* config/aarch64/aarch64-tuning-flags.def (SLOW_UNALIGNED_LDPW):"}, {"sha": "087764ec2de32d69ecfd26f69522c033c4f4391d", "filename": "gcc/edit-context.c", "status": "modified", "additions": 81, "deletions": 65, "changes": 146, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5e866b429ae442171c3227f1e470bab31299a8e/gcc%2Fedit-context.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5e866b429ae442171c3227f1e470bab31299a8e/gcc%2Fedit-context.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fedit-context.c?ref=e5e866b429ae442171c3227f1e470bab31299a8e", "patch": "@@ -89,6 +89,10 @@ class edited_file\n  private:\n   bool print_content (pretty_printer *pp);\n   void print_diff (pretty_printer *pp, bool show_filenames);\n+  void print_diff_hunk (pretty_printer *pp, int start_of_hunk,\n+\t\t\tint end_of_hunk);\n+  void print_diff_line (pretty_printer *pp, char prefix_char,\n+\t\t\tconst char *line, int line_size);\n   edited_line *get_line (int line);\n   edited_line *get_or_insert_line (int line);\n   int get_num_lines (bool *missing_trailing_newline);\n@@ -112,6 +116,7 @@ class edited_line\n \n   int get_line_num () const { return m_line_num; }\n   const char *get_content () const { return m_content; }\n+  int get_len () const { return m_len; }\n \n   int get_effective_column (int orig_column) const;\n   bool apply_insert (int column, const char *str, int len);\n@@ -529,82 +534,93 @@ edited_file::print_diff (pretty_printer *pp, bool show_filenames)\n       if (end_of_hunk > line_count)\n \tend_of_hunk = line_count;\n \n-      int num_lines = end_of_hunk - start_of_hunk + 1;\n+      print_diff_hunk (pp, start_of_hunk, end_of_hunk);\n \n-      pp_string (pp, colorize_start (pp_show_color (pp), \"diff-hunk\"));\n-      pp_printf (pp, \"@@ -%i,%i +%i,%i @@\\n\", start_of_hunk, num_lines,\n-\t\t start_of_hunk, num_lines);\n-      pp_string (pp, colorize_stop (pp_show_color (pp)));\n+      el = m_edited_lines.successor (el->get_line_num ());\n+    }\n+}\n \n-      int line_num = start_of_hunk;\n-      while (line_num <= end_of_hunk)\n+/* Print one hunk within a unified diff to PP, covering the\n+   given range of lines.  */\n+\n+void\n+edited_file::print_diff_hunk (pretty_printer *pp, int start_of_hunk,\n+\t\t\t      int end_of_hunk)\n+{\n+  int num_lines = end_of_hunk - start_of_hunk + 1;\n+\n+  pp_string (pp, colorize_start (pp_show_color (pp), \"diff-hunk\"));\n+  pp_printf (pp, \"@@ -%i,%i +%i,%i @@\\n\", start_of_hunk, num_lines,\n+\t     start_of_hunk, num_lines);\n+  pp_string (pp, colorize_stop (pp_show_color (pp)));\n+\n+  int line_num = start_of_hunk;\n+  while (line_num <= end_of_hunk)\n+    {\n+      edited_line *el = get_line (line_num);\n+      if (el)\n \t{\n-\t  edited_line *el = get_line (line_num);\n-\t  if (el)\n+\t  /* We have an edited line.\n+\t     Consolidate into runs of changed lines.  */\n+\t  const int first_changed_line_in_run = line_num;\n+\t  while (get_line (line_num))\n+\t    line_num++;\n+\t  const int last_changed_line_in_run = line_num - 1;\n+\n+\t  /* Show old version of lines.  */\n+\t  pp_string (pp, colorize_start (pp_show_color (pp),\n+\t\t\t\t\t \"diff-delete\"));\n+\t  for (line_num = first_changed_line_in_run;\n+\t       line_num <= last_changed_line_in_run;\n+\t       line_num++)\n \t    {\n-\t      /* We have an edited line.\n-\t\t Consolidate into runs of changed lines.  */\n-\t      const int first_changed_line_in_run = line_num;\n-\t      while (get_line (line_num))\n-\t\tline_num++;\n-\t      const int last_changed_line_in_run = line_num - 1;\n-\n-\t      pp_string (pp, colorize_start (pp_show_color (pp),\n-\t\t\t\t\t     \"diff-delete\"));\n-\n-\t      /* Show old version of lines.  */\n-\t      for (line_num = first_changed_line_in_run;\n-\t\t   line_num <= last_changed_line_in_run;\n-\t\t   line_num++)\n-\t\t{\n-\t\t  int line_size;\n-\t\t  const char *old_line\n-\t\t    = location_get_source_line (m_filename, line_num,\n-\t\t\t\t\t\t&line_size);\n-\t\t  pp_character (pp, '-');\n-\t\t  for (int i = 0; i < line_size; i++)\n-\t\t    pp_character (pp, old_line[i]);\n-\t\t  pp_character (pp, '\\n');\n-\t\t}\n-\n-\t      pp_string (pp, colorize_stop (pp_show_color (pp)));\n-\n-\t      pp_string (pp, colorize_start (pp_show_color (pp),\n-\t\t\t\t\t     \"diff-insert\"));\n-\n-\t      /* Show new version of lines.  */\n-\t      for (line_num = first_changed_line_in_run;\n-\t\t   line_num <= last_changed_line_in_run;\n-\t\t   line_num++)\n-\t\t{\n-\t\t  edited_line *el_in_run = get_line (line_num);\n-\t\t  gcc_assert (el_in_run);\n-\t\t  pp_character (pp, '+');\n-\t\t  pp_string (pp, el_in_run->get_content ());\n-\t\t  pp_character (pp, '\\n');\n-\t\t}\n-\n-\t      pp_string (pp, colorize_stop (pp_show_color (pp)));\n+\t      int line_len;\n+\t      const char *old_line\n+\t\t= location_get_source_line (m_filename, line_num, &line_len);\n+\t      print_diff_line (pp, '-', old_line, line_len);\n \t    }\n-\t  else\n+\t  pp_string (pp, colorize_stop (pp_show_color (pp)));\n+\n+\t  /* Show new version of lines.  */\n+\t  pp_string (pp, colorize_start (pp_show_color (pp),\n+\t\t\t\t\t \"diff-insert\"));\n+\t  for (line_num = first_changed_line_in_run;\n+\t       line_num <= last_changed_line_in_run;\n+\t       line_num++)\n \t    {\n-\t      /* Unchanged line.  */\n-\t      int line_size;\n-\t      const char *old_line\n-\t\t= location_get_source_line (m_filename, line_num,\n-\t\t\t\t\t    &line_size);\n-\t      pp_character (pp, ' ');\n-\t      for (int i = 0; i < line_size; i++)\n-\t\tpp_character (pp, old_line[i]);\n-\t      pp_character (pp, '\\n');\n-\t      line_num++;\n+\t      edited_line *el_in_run = get_line (line_num);\n+\t      gcc_assert (el_in_run);\n+\t      print_diff_line (pp, '+', el_in_run->get_content (),\n+\t\t\t       el_in_run->get_len ());\n \t    }\n+\t  pp_string (pp, colorize_stop (pp_show_color (pp)));\n+\t}\n+      else\n+\t{\n+\t  /* Unchanged line.  */\n+\t  int line_len;\n+\t  const char *old_line\n+\t    = location_get_source_line (m_filename, line_num, &line_len);\n+\t  print_diff_line (pp, ' ', old_line, line_len);\n+\t  line_num++;\n \t}\n-\n-      el = m_edited_lines.successor (el->get_line_num ());\n     }\n }\n \n+/* Print one line within a diff, starting with PREFIX_CHAR,\n+   followed by the LINE of content, of length LEN.  LINE is\n+   not necessarily 0-terminated.  Print a trailing newline.  */\n+\n+void\n+edited_file::print_diff_line (pretty_printer *pp, char prefix_char,\n+\t\t\t      const char *line, int len)\n+{\n+  pp_character (pp, prefix_char);\n+  for (int i = 0; i < len; i++)\n+    pp_character (pp, line[i]);\n+  pp_character (pp, '\\n');\n+}\n+\n /* Get the state of LINE within the file, or NULL if it is untouched.  */\n \n edited_line *"}]}