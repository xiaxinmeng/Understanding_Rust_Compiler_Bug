{"sha": "6cedbe443eb3d1fa3d6bd185cd3f0f94a7641f0e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmNlZGJlNDQzZWIzZDFmYTNkNmJkMTg1Y2QzZjBmOTRhNzY0MWYwZQ==", "commit": {"author": {"name": "Bob Wilson", "email": "bob.wilson@acm.org", "date": "2003-09-12T21:52:01Z"}, "committer": {"name": "Bob Wilson", "email": "bwilson@gcc.gnu.org", "date": "2003-09-12T21:52:01Z"}, "message": "elf.h (ASM_SPEC): Remove no-density option.\n\n\t* config/xtensa/elf.h (ASM_SPEC): Remove no-density option.  Reformat.\n\t* config/xtensa/linux.h (ASM_SPEC): Likewise.\n\t* config/xtensa/xtensa.h (TARGET_SWITCHES): Remove -mbig-endian,\n\t-mlittle-endian, -m[no-]density, -m[no-]abs, -m[no-]addx, -m[no-]mac16,\n\t-m[no-]mul16, -m[no-]mul32, -m[no-]nsa, -m[no-]minmax, -m[no-]sext,\n\t-m[no-]booleans, -mhard-float, -msoft-float, -m[no-]hard-float-div,\n\t-m[no-]hard-float-recip, -m[no-]hard-float-sqrt, and\n\t-m[no-]hard-float-rsqrt options.  Delete corresponding MASK_* macros\n\tand redefine corresponding TARGET_* macros with constants from the\n\txtensa-config.h header.\n\t* doc/invoke.texi (Option Summary, Xtensa Options): Remove documention\n\tfor the options listed above.\n\nFrom-SVN: r71339", "tree": {"sha": "d2a5ace584a3c54d78fb1a504456ef6479e635db", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d2a5ace584a3c54d78fb1a504456ef6479e635db"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6cedbe443eb3d1fa3d6bd185cd3f0f94a7641f0e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6cedbe443eb3d1fa3d6bd185cd3f0f94a7641f0e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6cedbe443eb3d1fa3d6bd185cd3f0f94a7641f0e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6cedbe443eb3d1fa3d6bd185cd3f0f94a7641f0e/comments", "author": null, "committer": null, "parents": [{"sha": "a2369ed310098b1f200e68cca7b14376912528d2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2369ed310098b1f200e68cca7b14376912528d2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a2369ed310098b1f200e68cca7b14376912528d2"}], "stats": {"total": 324, "additions": 59, "deletions": 265}, "files": [{"sha": "930abaa53acb682aa82584497914d63d8ea0c828", "filename": "gcc/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6cedbe443eb3d1fa3d6bd185cd3f0f94a7641f0e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6cedbe443eb3d1fa3d6bd185cd3f0f94a7641f0e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6cedbe443eb3d1fa3d6bd185cd3f0f94a7641f0e", "patch": "@@ -1,3 +1,18 @@\n+2003-09-12  Bob Wilson  <bob.wilson@acm.org>\n+\t\n+\t* config/xtensa/elf.h (ASM_SPEC): Remove no-density option.  Reformat.\n+\t* config/xtensa/linux.h (ASM_SPEC): Likewise.\n+\t* config/xtensa/xtensa.h (TARGET_SWITCHES): Remove -mbig-endian,\n+\t-mlittle-endian, -m[no-]density, -m[no-]abs, -m[no-]addx, -m[no-]mac16,\n+\t-m[no-]mul16, -m[no-]mul32, -m[no-]nsa, -m[no-]minmax, -m[no-]sext,\n+\t-m[no-]booleans, -mhard-float, -msoft-float, -m[no-]hard-float-div,\n+\t-m[no-]hard-float-recip, -m[no-]hard-float-sqrt, and\n+\t-m[no-]hard-float-rsqrt options.  Delete corresponding MASK_* macros\n+\tand redefine corresponding TARGET_* macros with constants from the\n+\txtensa-config.h header.\n+\t* doc/invoke.texi (Option Summary, Xtensa Options): Remove documention\n+\tfor the options listed above.\n+\t\n 2003-09-12  Dale Johannesen  <dale@apple.com>\n \t* config/rs6000/rs6000-protos.h:  Use C90 prototypes.\n \t* config/rs6000/rs6000-c.c:  Ditto. "}, {"sha": "849be87edb0bbc90667003b360e1c0877145b392", "filename": "gcc/config/xtensa/elf.h", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6cedbe443eb3d1fa3d6bd185cd3f0f94a7641f0e/gcc%2Fconfig%2Fxtensa%2Felf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6cedbe443eb3d1fa3d6bd185cd3f0f94a7641f0e/gcc%2Fconfig%2Fxtensa%2Felf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fxtensa%2Felf.h?ref=6cedbe443eb3d1fa3d6bd185cd3f0f94a7641f0e", "patch": "@@ -43,13 +43,14 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n #define WCHAR_TYPE_SIZE 16\n \n #undef ASM_SPEC\n-#define ASM_SPEC \"%{v} %{mno-density:--no-density} \\\n-                  %{mtext-section-literals:--text-section-literals} \\\n-                  %{mno-text-section-literals:--no-text-section-literals} \\\n-\t\t  %{mtarget-align:--target-align} \\\n-\t\t  %{mno-target-align:--no-target-align} \\\n-\t\t  %{mlongcalls:--longcalls} \\\n-\t\t  %{mno-longcalls:--no-longcalls}\"\n+#define ASM_SPEC \\\n+ \"%{v} \\\n+  %{mtext-section-literals:--text-section-literals} \\\n+  %{mno-text-section-literals:--no-text-section-literals} \\\n+  %{mtarget-align:--target-align} \\\n+  %{mno-target-align:--no-target-align} \\\n+  %{mlongcalls:--longcalls} \\\n+  %{mno-longcalls:--no-longcalls}\"\n \n #undef LIB_SPEC\n #define LIB_SPEC \"-lc -lsim -lc -lhandlers-sim -lhal\""}, {"sha": "ef5aae04f63e08e69e3e57c97afdb09fe2fe81b9", "filename": "gcc/config/xtensa/linux.h", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6cedbe443eb3d1fa3d6bd185cd3f0f94a7641f0e/gcc%2Fconfig%2Fxtensa%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6cedbe443eb3d1fa3d6bd185cd3f0f94a7641f0e/gcc%2Fconfig%2Fxtensa%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fxtensa%2Flinux.h?ref=6cedbe443eb3d1fa3d6bd185cd3f0f94a7641f0e", "patch": "@@ -40,13 +40,14 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n #define WCHAR_TYPE_SIZE 32\n \n #undef ASM_SPEC\n-#define ASM_SPEC \"%{v} %{mno-density:--no-density} \\\n-                  %{mtext-section-literals:--text-section-literals} \\\n-                  %{mno-text-section-literals:--no-text-section-literals} \\\n-\t\t  %{mtarget-align:--target-align} \\\n-\t\t  %{mno-target-align:--no-target-align} \\\n-\t\t  %{mlongcalls:--longcalls} \\\n-\t\t  %{mno-longcalls:--no-longcalls}\"\n+#define ASM_SPEC \\\n+ \"%{v} \\\n+  %{mtext-section-literals:--text-section-literals} \\\n+  %{mno-text-section-literals:--no-text-section-literals} \\\n+  %{mtarget-align:--target-align} \\\n+  %{mno-target-align:--no-target-align} \\\n+  %{mlongcalls:--longcalls} \\\n+  %{mno-longcalls:--no-longcalls}\"\n \n #undef LINK_SPEC\n #define LINK_SPEC \\"}, {"sha": "c99d15da611205fc8c4ff2762b6bac6feab3ba59", "filename": "gcc/config/xtensa/xtensa.h", "status": "modified", "additions": 26, "deletions": 131, "changes": 157, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6cedbe443eb3d1fa3d6bd185cd3f0f94a7641f0e/gcc%2Fconfig%2Fxtensa%2Fxtensa.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6cedbe443eb3d1fa3d6bd185cd3f0f94a7641f0e/gcc%2Fconfig%2Fxtensa%2Fxtensa.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fxtensa%2Fxtensa.h?ref=6cedbe443eb3d1fa3d6bd185cd3f0f94a7641f0e", "patch": "@@ -42,148 +42,43 @@ extern struct rtx_def * branch_cmp[2];\t/* operands for compare */\n extern enum cmp_type branch_type;\t/* what type of branch to use */\n extern unsigned xtensa_current_frame_size;\n \n-/* Run-time compilation parameters selecting different hardware subsets.  */\n-\n-#define MASK_BIG_ENDIAN\t\t0x00000001\t/* big or little endian */\n-#define MASK_DENSITY\t\t0x00000002\t/* code density option */\n-#define MASK_MAC16\t\t0x00000004\t/* MAC16 option */\n-#define MASK_MUL16\t\t0x00000008\t/* 16-bit integer multiply */\n-#define MASK_MUL32\t\t0x00000010\t/* integer multiply/divide */\n-#define MASK_DIV32\t\t0x00000020\t/* integer multiply/divide */\n-#define MASK_NSA\t\t0x00000040\t/* nsa instruction option */\n-#define MASK_MINMAX\t\t0x00000080\t/* min/max instructions */\n-#define MASK_SEXT\t\t0x00000100\t/* sign extend insn option */\n-#define MASK_BOOLEANS\t\t0x00000200\t/* boolean register option */\n-#define MASK_HARD_FLOAT\t\t0x00000400\t/* floating-point option */\n-#define MASK_HARD_FLOAT_DIV\t0x00000800\t/* floating-point divide */\n-#define MASK_HARD_FLOAT_RECIP\t0x00001000\t/* floating-point reciprocal */\n-#define MASK_HARD_FLOAT_SQRT\t0x00002000\t/* floating-point sqrt */\n-#define MASK_HARD_FLOAT_RSQRT\t0x00004000\t/* floating-point recip sqrt */\n-#define MASK_NO_FUSED_MADD\t0x00008000\t/* avoid f-p mul/add */\n-#define MASK_CONST16\t\t0x00010000\t/* use CONST16 instruction */\n-#define MASK_ABS\t\t0x00020000\t/* use ABS instruction */\n-#define MASK_ADDX\t\t0x00040000\t/* use ADDX* and SUBX* */\n-\n-/* Macros used in the machine description to test the flags.  */\n-\n-#define TARGET_BIG_ENDIAN\t(target_flags & MASK_BIG_ENDIAN)\n-#define TARGET_DENSITY\t\t(target_flags & MASK_DENSITY)\n-#define TARGET_MAC16\t\t(target_flags & MASK_MAC16)\n-#define TARGET_MUL16\t\t(target_flags & MASK_MUL16)\n-#define TARGET_MUL32\t\t(target_flags & MASK_MUL32)\n-#define TARGET_DIV32\t\t(target_flags & MASK_DIV32)\n-#define TARGET_NSA\t\t(target_flags & MASK_NSA)\n-#define TARGET_MINMAX\t\t(target_flags & MASK_MINMAX)\n-#define TARGET_SEXT\t\t(target_flags & MASK_SEXT)\n-#define TARGET_BOOLEANS\t\t(target_flags & MASK_BOOLEANS)\n-#define TARGET_HARD_FLOAT\t(target_flags & MASK_HARD_FLOAT)\n-#define TARGET_HARD_FLOAT_DIV\t(target_flags & MASK_HARD_FLOAT_DIV)\n-#define TARGET_HARD_FLOAT_RECIP\t(target_flags & MASK_HARD_FLOAT_RECIP)\n-#define TARGET_HARD_FLOAT_SQRT\t(target_flags & MASK_HARD_FLOAT_SQRT)\n-#define TARGET_HARD_FLOAT_RSQRT\t(target_flags & MASK_HARD_FLOAT_RSQRT)\n+/* Masks for the -m switches */\n+#define MASK_NO_FUSED_MADD\t0x00000001\t/* avoid f-p mul/add */\n+#define MASK_CONST16\t\t0x00000002\t/* use CONST16 instruction */\n+\n+/* Macros used in the machine description to select various Xtensa\n+   configuration options.  */\n+#define TARGET_BIG_ENDIAN\tXCHAL_HAVE_BE\n+#define TARGET_DENSITY\t\tXCHAL_HAVE_DENSITY\n+#define TARGET_MAC16\t\tXCHAL_HAVE_MAC16\n+#define TARGET_MUL16\t\tXCHAL_HAVE_MUL16\n+#define TARGET_MUL32\t\tXCHAL_HAVE_MUL32\n+#define TARGET_DIV32\t\tXCHAL_HAVE_DIV32\n+#define TARGET_NSA\t\tXCHAL_HAVE_NSA\n+#define TARGET_MINMAX\t\tXCHAL_HAVE_MINMAX\n+#define TARGET_SEXT\t\tXCHAL_HAVE_SEXT\n+#define TARGET_BOOLEANS\t\tXCHAL_HAVE_BOOLEANS\n+#define TARGET_HARD_FLOAT\tXCHAL_HAVE_FP\n+#define TARGET_HARD_FLOAT_DIV\tXCHAL_HAVE_FP_DIV\n+#define TARGET_HARD_FLOAT_RECIP\tXCHAL_HAVE_FP_RECIP\n+#define TARGET_HARD_FLOAT_SQRT\tXCHAL_HAVE_FP_SQRT\n+#define TARGET_HARD_FLOAT_RSQRT\tXCHAL_HAVE_FP_RSQRT\n+#define TARGET_ABS\t\tXCHAL_HAVE_ABS\n+#define TARGET_ADDX\t\tXCHAL_HAVE_ADDX\n+\n+/* Macros controlled by command-line options.  */\n #define TARGET_NO_FUSED_MADD\t(target_flags & MASK_NO_FUSED_MADD)\n #define TARGET_CONST16\t\t(target_flags & MASK_CONST16)\n-#define TARGET_ABS\t\t(target_flags & MASK_ABS)\n-#define TARGET_ADDX\t\t(target_flags & MASK_ADDX)\n-\n-/* Default target_flags if no switches are specified  */\n \n #define TARGET_DEFAULT (\t\t\t\t\t\t\\\n-  (XCHAL_HAVE_BE\t? MASK_BIG_ENDIAN : 0) |\t\t\t\\\n-  (XCHAL_HAVE_DENSITY\t? MASK_DENSITY : 0) |\t\t\t\t\\\n-  (XCHAL_HAVE_L32R\t? 0 : MASK_CONST16) |\t\t\t\t\\\n-  (XCHAL_HAVE_ABS\t? MASK_ABS : 0) |\t\t\t\t\\\n-  (XCHAL_HAVE_ADDX\t? MASK_ADDX : 0) |\t\t\t\t\\\n-  (XCHAL_HAVE_MAC16\t? MASK_MAC16 : 0) |\t\t\t\t\\\n-  (XCHAL_HAVE_MUL16\t? MASK_MUL16 : 0) |\t\t\t\t\\\n-  (XCHAL_HAVE_MUL32\t? MASK_MUL32 : 0) |\t\t\t\t\\\n-  (XCHAL_HAVE_DIV32\t? MASK_DIV32 : 0) |\t\t\t\t\\\n-  (XCHAL_HAVE_NSA\t? MASK_NSA : 0) |\t\t\t\t\\\n-  (XCHAL_HAVE_MINMAX\t? MASK_MINMAX : 0) |\t\t\t\t\\\n-  (XCHAL_HAVE_SEXT\t? MASK_SEXT : 0) |\t\t\t\t\\\n-  (XCHAL_HAVE_BOOLEANS\t? MASK_BOOLEANS : 0) |\t\t\t\t\\\n-  (XCHAL_HAVE_FP\t? MASK_HARD_FLOAT : 0) |\t\t\t\\\n-  (XCHAL_HAVE_FP_DIV\t? MASK_HARD_FLOAT_DIV : 0) |\t\t\t\\\n-  (XCHAL_HAVE_FP_RECIP\t? MASK_HARD_FLOAT_RECIP : 0) |\t\t\t\\\n-  (XCHAL_HAVE_FP_SQRT\t? MASK_HARD_FLOAT_SQRT : 0) |\t\t\t\\\n-  (XCHAL_HAVE_FP_RSQRT\t? MASK_HARD_FLOAT_RSQRT : 0))\n-\n-/* Macro to define tables used to set the flags.  */\n+  (XCHAL_HAVE_L32R\t? 0 : MASK_CONST16))\n \n #define TARGET_SWITCHES\t\t\t\t\t\t\t\\\n {\t\t\t\t\t\t\t\t\t\\\n-  {\"big-endian\",\t\tMASK_BIG_ENDIAN,\t\t\t\\\n-    N_(\"Use big-endian byte order\")},\t\t\t\t\t\\\n-  {\"little-endian\",\t\t-MASK_BIG_ENDIAN,\t\t\t\\\n-    N_(\"Use little-endian byte order\")},\t\t\t\t\\\n-  {\"density\",\t\t\tMASK_DENSITY,\t\t\t\t\\\n-    N_(\"Use the Xtensa code density option\")},\t\t\t\t\\\n-  {\"no-density\",\t\t-MASK_DENSITY,\t\t\t\t\\\n-    N_(\"Do not use the Xtensa code density option\")},\t\t\t\\\n   {\"const16\",\t\t\tMASK_CONST16,\t\t\t\t\\\n     N_(\"Use CONST16 instruction to load constants\")},\t\t\t\\\n   {\"no-const16\",\t\t-MASK_CONST16,\t\t\t\t\\\n     N_(\"Use PC-relative L32R instruction to load constants\")},\t\t\\\n-  {\"abs\",\t\t\tMASK_ABS,\t\t\t\t\\\n-    N_(\"Use the Xtensa ABS instruction\")},\t\t\t\t\\\n-  {\"no-abs\",\t\t\t-MASK_ABS,\t\t\t\t\\\n-    N_(\"Do not use the Xtensa ABS instruction\")},\t\t\t\\\n-  {\"addx\",\t\t\tMASK_ADDX,\t\t\t\t\\\n-    N_(\"Use the Xtensa ADDX and SUBX instructions\")},\t\t\t\\\n-  {\"no-addx\",\t\t\t-MASK_ADDX,\t\t\t\t\\\n-    N_(\"Do not use the Xtensa ADDX and SUBX instructions\")},\t\t\\\n-  {\"mac16\",\t\t\tMASK_MAC16,\t\t\t\t\\\n-    N_(\"Use the Xtensa MAC16 option\")},\t\t\t\t\t\\\n-  {\"no-mac16\",\t\t\t-MASK_MAC16,\t\t\t\t\\\n-    N_(\"Do not use the Xtensa MAC16 option\")},\t\t\t\t\\\n-  {\"mul16\",\t\t\tMASK_MUL16,\t\t\t\t\\\n-    N_(\"Use the Xtensa MUL16 option\")},\t\t\t\t\t\\\n-  {\"no-mul16\",\t\t\t-MASK_MUL16,\t\t\t\t\\\n-    N_(\"Do not use the Xtensa MUL16 option\")},\t\t\t\t\\\n-  {\"mul32\",\t\t\tMASK_MUL32,\t\t\t\t\\\n-    N_(\"Use the Xtensa MUL32 option\")},\t\t\t\t\t\\\n-  {\"no-mul32\",\t\t\t-MASK_MUL32,\t\t\t\t\\\n-    N_(\"Do not use the Xtensa MUL32 option\")},\t\t\t\t\\\n-  {\"div32\",\t\t\tMASK_DIV32,\t\t\t\t\\\n-    0 /* undocumented */},\t\t\t\t\t\t\\\n-  {\"no-div32\",\t\t\t-MASK_DIV32,\t\t\t\t\\\n-    0 /* undocumented */},\t\t\t\t\t\t\\\n-  {\"nsa\",\t\t\tMASK_NSA,\t\t\t\t\\\n-    N_(\"Use the Xtensa NSA option\")},\t\t\t\t\t\\\n-  {\"no-nsa\",\t\t\t-MASK_NSA,\t\t\t\t\\\n-    N_(\"Do not use the Xtensa NSA option\")},\t\t\t\t\\\n-  {\"minmax\",\t\t\tMASK_MINMAX,\t\t\t\t\\\n-    N_(\"Use the Xtensa MIN/MAX option\")},\t\t\t\t\\\n-  {\"no-minmax\",\t\t\t-MASK_MINMAX,\t\t\t\t\\\n-    N_(\"Do not use the Xtensa MIN/MAX option\")},\t\t\t\\\n-  {\"sext\",\t\t\tMASK_SEXT,\t\t\t\t\\\n-    N_(\"Use the Xtensa SEXT option\")},\t\t\t\t\t\\\n-  {\"no-sext\",\t\t\t-MASK_SEXT,\t\t\t\t\\\n-    N_(\"Do not use the Xtensa SEXT option\")},\t\t\t\t\\\n-  {\"booleans\",\t\t\tMASK_BOOLEANS,\t\t\t\t\\\n-    N_(\"Use the Xtensa boolean register option\")},\t\t\t\\\n-  {\"no-booleans\",\t\t-MASK_BOOLEANS,\t\t\t\t\\\n-    N_(\"Do not use the Xtensa boolean register option\")},\t\t\\\n-  {\"hard-float\",\t\tMASK_HARD_FLOAT,\t\t\t\\\n-    N_(\"Use the Xtensa floating-point unit\")},\t\t\t\t\\\n-  {\"soft-float\",\t\t-MASK_HARD_FLOAT,\t\t\t\\\n-    N_(\"Do not use the Xtensa floating-point unit\")},\t\t\t\\\n-  {\"hard-float-div\",\t\tMASK_HARD_FLOAT_DIV,\t\t\t\\\n-    0 /* undocumented */},\t\t\t\t\t\t\\\n-  {\"no-hard-float-div\",\t\t-MASK_HARD_FLOAT_DIV,\t\t\t\\\n-    0 /* undocumented */},\t\t\t\t\t\t\\\n-  {\"hard-float-recip\",\t\tMASK_HARD_FLOAT_RECIP,\t\t\t\\\n-    0 /* undocumented */},\t\t\t\t\t\t\\\n-  {\"no-hard-float-recip\",\t-MASK_HARD_FLOAT_RECIP,\t\t\t\\\n-    0 /* undocumented */},\t\t\t\t\t\t\\\n-  {\"hard-float-sqrt\",\t\tMASK_HARD_FLOAT_SQRT,\t\t\t\\\n-    0 /* undocumented */},\t\t\t\t\t\t\\\n-  {\"no-hard-float-sqrt\",\t-MASK_HARD_FLOAT_SQRT,\t\t\t\\\n-    0 /* undocumented */},\t\t\t\t\t\t\\\n-  {\"hard-float-rsqrt\",\t\tMASK_HARD_FLOAT_RSQRT,\t\t\t\\\n-    0 /* undocumented */},\t\t\t\t\t\t\\\n-  {\"no-hard-float-rsqrt\",\t-MASK_HARD_FLOAT_RSQRT,\t\t\t\\\n-    0 /* undocumented */},\t\t\t\t\t\t\\\n   {\"no-fused-madd\",\t\tMASK_NO_FUSED_MADD,\t\t\t\\\n     N_(\"Disable fused multiply/add and multiply/subtract FP instructions\")}, \\\n   {\"fused-madd\",\t\t-MASK_NO_FUSED_MADD,\t\t\t\\"}, {"sha": "7637e15fc592281b6dd1481ed545135f22bf1bbb", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 2, "deletions": 120, "changes": 122, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6cedbe443eb3d1fa3d6bd185cd3f0f94a7641f0e/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6cedbe443eb3d1fa3d6bd185cd3f0f94a7641f0e/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=6cedbe443eb3d1fa3d6bd185cd3f0f94a7641f0e", "patch": "@@ -637,19 +637,7 @@ in the following sections.\n @gccoptlist{-msim}\n \n @emph{Xtensa Options}\n-@gccoptlist{-mbig-endian  -mlittle-endian @gol\n--mdensity  -mno-density @gol\n--mconst16 -mno-const16 @gol\n--mabs -mno-abs @gol\n--maddx -mno-addx @gol\n--mmac16  -mno-mac16 @gol\n--mmul16  -mno-mul16 @gol\n--mmul32  -mno-mul32 @gol\n--mnsa  -mno-nsa @gol\n--mminmax  -mno-minmax @gol\n--msext  -mno-sext @gol\n--mbooleans  -mno-booleans @gol\n--mhard-float  -msoft-float @gol\n+@gccoptlist{-mconst16 -mno-const16 @gol\n -mfused-madd  -mno-fused-madd @gol\n -mtext-section-literals  -mno-text-section-literals @gol\n -mtarget-align  -mno-target-align @gol\n@@ -10862,26 +10850,9 @@ Select the processor type for which to generate code.  Possible values are\n @subsection Xtensa Options\n @cindex Xtensa Options\n \n-The Xtensa architecture is designed to support many different\n-configurations.  The compiler's default options can be set to match a\n-particular Xtensa configuration by copying a configuration file into the\n-GCC sources when building GCC@.  The options below may be used to\n-override the default options.\n+These options are supported for Xtensa targets:\n \n @table @gcctabopt\n-@item -mbig-endian\n-@itemx -mlittle-endian\n-@opindex mbig-endian\n-@opindex mlittle-endian\n-Specify big-endian or little-endian byte ordering for the target Xtensa\n-processor.\n-\n-@item -mdensity\n-@itemx -mno-density\n-@opindex mdensity\n-@opindex mno-density\n-Enable or disable use of the optional Xtensa code density instructions.\n-\n @item -mconst16\n @itemx -mno-const16\n @opindex mconst16\n@@ -10893,95 +10864,6 @@ instructions are always used in place of the standard @code{L32R}\n instructions.  The use of @code{CONST16} is enabled by default only if\n the @code{L32R} instruction is not available.\n \n-@item -mabs\n-@itemx -mno-abs\n-@opindex mabs\n-@opindex mno-abs\n-Enable or disable use of the Xtensa @code{ABS} instruction for absolute\n-value operations.\n-\n-@item -maddx\n-@itemx -mno-addx\n-@opindex maddx\n-@opindex mno-addx\n-Enable or disable use of the Xtensa @code{ADDX} and @code{SUBX}\n-instructions.\n-\n-@item -mmac16\n-@itemx -mno-mac16\n-@opindex mmac16\n-@opindex mno-mac16\n-Enable or disable use of the Xtensa MAC16 option.  When enabled, GCC\n-will generate MAC16 instructions from standard C code, with the\n-limitation that it will use neither the MR register file nor any\n-instruction that operates on the MR registers.  When this option is\n-disabled, GCC will translate 16-bit multiply/accumulate operations to a\n-combination of core instructions and library calls, depending on whether\n-any other multiplier options are enabled.\n-\n-@item -mmul16\n-@itemx -mno-mul16\n-@opindex mmul16\n-@opindex mno-mul16\n-Enable or disable use of the 16-bit integer multiplier option.  When\n-enabled, the compiler will generate 16-bit multiply instructions for\n-multiplications of 16 bits or smaller in standard C code.  When this\n-option is disabled, the compiler will either use 32-bit multiply or\n-MAC16 instructions if they are available or generate library calls to\n-perform the multiply operations using shifts and adds.\n-\n-@item -mmul32\n-@itemx -mno-mul32\n-@opindex mmul32\n-@opindex mno-mul32\n-Enable or disable use of the 32-bit integer multiplier option.  When\n-enabled, the compiler will generate 32-bit multiply instructions for\n-multiplications of 32 bits or smaller in standard C code.  When this\n-option is disabled, the compiler will generate library calls to perform\n-the multiply operations using either shifts and adds or 16-bit multiply\n-instructions if they are available.\n-\n-@item -mnsa\n-@itemx -mno-nsa\n-@opindex mnsa\n-@opindex mno-nsa\n-Enable or disable use of the optional normalization shift amount\n-(@code{NSA}) instructions to implement the built-in @code{ffs} function.\n-\n-@item -mminmax\n-@itemx -mno-minmax\n-@opindex mminmax\n-@opindex mno-minmax\n-Enable or disable use of the optional minimum and maximum value\n-instructions.\n-\n-@item -msext\n-@itemx -mno-sext\n-@opindex msext\n-@opindex mno-sext\n-Enable or disable use of the optional sign extend (@code{SEXT})\n-instruction.\n-\n-@item -mbooleans\n-@itemx -mno-booleans\n-@opindex mbooleans\n-@opindex mno-booleans\n-Enable or disable support for the boolean register file used by Xtensa\n-coprocessors.  This is not typically useful by itself but may be\n-required for other options that make use of the boolean registers (e.g.,\n-the floating-point option).\n-\n-@item -mhard-float\n-@itemx -msoft-float\n-@opindex mhard-float\n-@opindex msoft-float\n-Enable or disable use of the floating-point option.  When enabled, GCC\n-generates floating-point instructions for 32-bit @code{float}\n-operations.  When this option is disabled, GCC generates library calls\n-to emulate 32-bit floating-point operations using integer instructions.\n-Regardless of this option, 64-bit @code{double} operations are always\n-emulated with calls to library functions.\n-\n @item -mfused-madd\n @itemx -mno-fused-madd\n @opindex mfused-madd"}]}