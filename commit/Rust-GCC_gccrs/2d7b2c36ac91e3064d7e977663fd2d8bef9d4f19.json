{"sha": "2d7b2c36ac91e3064d7e977663fd2d8bef9d4f19", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmQ3YjJjMzZhYzkxZTMwNjRkN2U5Nzc2NjNmZDJkOGJlZjlkNGYxOQ==", "commit": {"author": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1995-01-17T23:42:12Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1995-01-17T23:42:12Z"}, "message": "pa.c (emit_move_sequence): Also handle displacements which do not fit in 14 bits for fp load/store...\n\n\t* pa.c (emit_move_sequence): Also handle displacements which\n\tdo not fit in 14 bits for fp load/store secondary reloads.\n\nFrom-SVN: r8769", "tree": {"sha": "3178f6cb12d4cf3c1d5a96d69dde15a9a824d962", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3178f6cb12d4cf3c1d5a96d69dde15a9a824d962"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2d7b2c36ac91e3064d7e977663fd2d8bef9d4f19", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d7b2c36ac91e3064d7e977663fd2d8bef9d4f19", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2d7b2c36ac91e3064d7e977663fd2d8bef9d4f19", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d7b2c36ac91e3064d7e977663fd2d8bef9d4f19/comments", "author": null, "committer": null, "parents": [{"sha": "a360da3a3d66e12a477381aab8d4e8a995ab62fc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a360da3a3d66e12a477381aab8d4e8a995ab62fc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a360da3a3d66e12a477381aab8d4e8a995ab62fc"}], "stats": {"total": 27, "additions": 25, "deletions": 2}, "files": [{"sha": "72a86b5142cc2be41051174836474251f0c7bf20", "filename": "gcc/config/pa/pa.c", "status": "modified", "additions": 25, "deletions": 2, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d7b2c36ac91e3064d7e977663fd2d8bef9d4f19/gcc%2Fconfig%2Fpa%2Fpa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d7b2c36ac91e3064d7e977663fd2d8bef9d4f19/gcc%2Fconfig%2Fpa%2Fpa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.c?ref=2d7b2c36ac91e3064d7e977663fd2d8bef9d4f19", "patch": "@@ -797,7 +797,19 @@ emit_move_sequence (operands, mode, scratch_reg)\n \toperand1 = XEXP (operand1, 0);\n \n       scratch_reg = gen_rtx (REG, SImode, REGNO (scratch_reg));\n-      emit_move_insn (scratch_reg, XEXP (operand1, 0));\n+\n+      /* D might not fit in 14 bits either; for such cases load D into\n+\t scratch reg.  */\n+      if (!memory_address_p (SImode, XEXP (operand1, 0)))\n+\t{\n+\t  emit_move_insn (scratch_reg, XEXP (XEXP (operand1, 0), 1));\n+\t  emit_move_insn (scratch_reg, gen_rtx (GET_CODE (XEXP (operand1, 0)),\n+\t\t\t\t\t\tSImode,\n+\t\t\t\t\t\tXEXP (XEXP (operand1, 0), 0),\n+\t\t\t\t\t\tscratch_reg));\n+\t}\n+      else\n+\temit_move_insn (scratch_reg, XEXP (operand1, 0));\n       emit_insn (gen_rtx (SET, VOIDmode, operand0, gen_rtx (MEM, mode,\n \t\t\t\t\t\t\t    scratch_reg)));\n       return 1;\n@@ -814,7 +826,18 @@ emit_move_sequence (operands, mode, scratch_reg)\n \toperand0 = XEXP (operand0, 0);\n \n       scratch_reg = gen_rtx (REG, SImode, REGNO (scratch_reg));\n-      emit_move_insn (scratch_reg, XEXP (operand0, 0));\n+      /* D might not fit in 14 bits either; for such cases load D into\n+\t scratch reg.  */\n+      if (!memory_address_p (SImode, XEXP (operand0, 0)))\n+\t{\n+\t  emit_move_insn (scratch_reg, XEXP (XEXP (operand0, 0), 1));\n+\t  emit_move_insn (scratch_reg, gen_rtx (GET_CODE (XEXP (operand0, 0)),\n+\t\t\t\t\t\tSImode,\n+\t\t\t\t\t\tXEXP (XEXP (operand0, 0), 0),\n+\t\t\t\t\t\tscratch_reg));\n+\t}\n+      else\n+\temit_move_insn (scratch_reg, XEXP (operand0, 0));\n       emit_insn (gen_rtx (SET, VOIDmode, gen_rtx (MEM, mode, scratch_reg),\n \t\t\t  operand1));\n       return 1;"}]}