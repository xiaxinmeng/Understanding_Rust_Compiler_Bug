{"sha": "406d77a4bb10d5b60a9a061f59405e0aa850ea2b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDA2ZDc3YTRiYjEwZDViNjBhOWEwNjFmNTk0MDVlMGFhODUwZWEyYg==", "commit": {"author": {"name": "Steven Bosscher", "email": "stevenb@suse.de", "date": "2004-07-20T23:20:08Z"}, "committer": {"name": "Steven Bosscher", "email": "steven@gcc.gnu.org", "date": "2004-07-20T23:20:08Z"}, "message": "cp-tree.def (TINST_LEVEL): Make it an 'x' node.\n\n\t* cp-tree.def (TINST_LEVEL): Make it an 'x' node.\n\t* cp-tree.h (tinst_level_t): New tree type.\n\t(union lang_tree_node): Handle it.\n\t(TINST_LOCATION): New accessor macro.\n\t(make_tinst_level): New prototype.\n\t* cp-lang.c (cp_tree_size): Handle TINST_LEVEL.\n\t* decl.c (cp_tree_node_structure): Likewise.\n\t* error.c (print_instantiation_full_context): Use TINST_LOCATION.\n\t(print_instantiation_partial_context): Likewise.\n\t* pt.c (pop_tinst_level): Likewise.\n\t (push_tinst_level): Use make_tinst_level.\n\t* tree.c (make_tinst_level): New function.\n\t(cp_walk_subtrees): Walk TINST_DECL for a TINST_LEVEL node.\n\nFrom-SVN: r84977", "tree": {"sha": "60f27536fd4be89c4b8a14b5f5c8d884d5f061bd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/60f27536fd4be89c4b8a14b5f5c8d884d5f061bd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/406d77a4bb10d5b60a9a061f59405e0aa850ea2b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/406d77a4bb10d5b60a9a061f59405e0aa850ea2b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/406d77a4bb10d5b60a9a061f59405e0aa850ea2b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/406d77a4bb10d5b60a9a061f59405e0aa850ea2b/comments", "author": null, "committer": null, "parents": [{"sha": "3e95a7cbf534c8f738a3267773f03dfe80d69484", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e95a7cbf534c8f738a3267773f03dfe80d69484", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3e95a7cbf534c8f738a3267773f03dfe80d69484"}], "stats": {"total": 70, "additions": 59, "deletions": 11}, "files": [{"sha": "3038907545c525a00af7c27ed3f72af383023504", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/406d77a4bb10d5b60a9a061f59405e0aa850ea2b/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/406d77a4bb10d5b60a9a061f59405e0aa850ea2b/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=406d77a4bb10d5b60a9a061f59405e0aa850ea2b", "patch": "@@ -1,3 +1,19 @@\n+2004-07-20  Steven Bosscher  <stevenb@suse.de>\n+\n+\t* cp-tree.def (TINST_LEVEL): Make it an 'x' node.\n+\t* cp-tree.h (tinst_level_t): New tree type.\n+\t(union lang_tree_node): Handle it.\n+\t(TINST_LOCATION): New accessor macro.\n+\t(make_tinst_level): New prototype.\n+\t* cp-lang.c (cp_tree_size): Handle TINST_LEVEL.\n+\t* decl.c (cp_tree_node_structure): Likewise.\n+\t* error.c (print_instantiation_full_context): Use TINST_LOCATION.\n+\t(print_instantiation_partial_context): Likewise.\n+\t* pt.c (pop_tinst_level): Likewise.\n+\t (push_tinst_level): Use make_tinst_level.\n+\t* tree.c (make_tinst_level): New function.\n+\t(cp_walk_subtrees): Walk TINST_DECL for a TINST_LEVEL node.\n+\n 2004-07-20  Mark Mitchell  <mark@codesourcery.com>\n \n \t* parser.c (cp_parser_simple_type_specifier): Fix typo."}, {"sha": "cfdc82f4762c7a53925e0558fe1438927d6f98d1", "filename": "gcc/cp/cp-lang.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/406d77a4bb10d5b60a9a061f59405e0aa850ea2b/gcc%2Fcp%2Fcp-lang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/406d77a4bb10d5b60a9a061f59405e0aa850ea2b/gcc%2Fcp%2Fcp-lang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-lang.c?ref=406d77a4bb10d5b60a9a061f59405e0aa850ea2b", "patch": "@@ -284,6 +284,7 @@ cp_tree_size (enum tree_code code)\n {\n   switch (code)\n     {\n+    case TINST_LEVEL:\t\treturn sizeof (struct tinst_level_s);\n     case PTRMEM_CST: \t\treturn sizeof (struct ptrmem_cst);\n     case BASELINK:\t\treturn sizeof (struct tree_baselink);\n     case TEMPLATE_PARM_INDEX: \treturn sizeof (template_parm_index);"}, {"sha": "d3629fd98e2c4f6424b577124692d3475cf8a38c", "filename": "gcc/cp/cp-tree.def", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/406d77a4bb10d5b60a9a061f59405e0aa850ea2b/gcc%2Fcp%2Fcp-tree.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/406d77a4bb10d5b60a9a061f59405e0aa850ea2b/gcc%2Fcp%2Fcp-tree.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.def?ref=406d77a4bb10d5b60a9a061f59405e0aa850ea2b", "patch": "@@ -274,12 +274,13 @@ DEFTREECODE (TAG_DEFN, \"tag_defn\", 'e', 0)\n \n /* Template instantiation level node.\n \n-   Operand 1 contains the original DECL node and can be accessed via TINST_DECL.\n+   TINST_DECL contains the original DECL node.\n+   TINST_LOCATION contains the location where the template is instantiated.\n \n    A stack of template instantiation nodes is kept through the TREE_CHAIN\n    fields of these nodes.  */\n \n-DEFTREECODE (TINST_LEVEL, \"TINST_LEVEL\", 'e', 1)\n+DEFTREECODE (TINST_LEVEL, \"TINST_LEVEL\", 'x', 0)\n \n /*\n Local variables:"}, {"sha": "df395ebd952f244d11689cace563be3cc4ac5479", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 18, "deletions": 3, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/406d77a4bb10d5b60a9a061f59405e0aa850ea2b/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/406d77a4bb10d5b60a9a061f59405e0aa850ea2b/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=406d77a4bb10d5b60a9a061f59405e0aa850ea2b", "patch": "@@ -183,14 +183,23 @@ struct lang_identifier GTY(())\n #define LANG_IDENTIFIER_CAST(NODE) \\\n \t((struct lang_identifier*)IDENTIFIER_NODE_CHECK (NODE))\n \n-typedef struct template_parm_index_s GTY(())\n+struct template_parm_index_s GTY(())\n {\n   struct tree_common common;\n   HOST_WIDE_INT index;\n   HOST_WIDE_INT level;\n   HOST_WIDE_INT orig_level;\n   tree decl;\n-} template_parm_index;\n+};\n+typedef struct template_parm_index_s template_parm_index;\n+\n+struct tinst_level_s GTY(())\n+{\n+  struct tree_common common;\n+  tree decl;\n+  location_t locus;\n+};\n+typedef struct tinst_level_s * tinst_level_t;\n \n struct ptrmem_cst GTY(())\n {\n@@ -385,6 +394,7 @@ enum cp_tree_node_structure_enum {\n   TS_CP_GENERIC,\n   TS_CP_IDENTIFIER,\n   TS_CP_TPI,\n+  TS_CP_TINST_LEVEL,\n   TS_CP_PTRMEM,\n   TS_CP_BINDING,\n   TS_CP_OVERLOAD,\n@@ -401,6 +411,7 @@ union lang_tree_node GTY((desc (\"cp_tree_node_structure (&%h)\"),\n   union tree_node GTY ((tag (\"TS_CP_GENERIC\"),\n \t\t\tdesc (\"tree_node_structure (&%h)\"))) generic;\n   struct template_parm_index_s GTY ((tag (\"TS_CP_TPI\"))) tpi;\n+  struct tinst_level_s GTY ((tag (\"TS_CP_TINST_LEVEL\"))) tinst_level;\n   struct ptrmem_cst GTY ((tag (\"TS_CP_PTRMEM\"))) ptrmem;\n   struct tree_overload GTY ((tag (\"TS_CP_OVERLOAD\"))) overload;\n   struct tree_baselink GTY ((tag (\"TS_CP_BASELINK\"))) baselink;\n@@ -3008,7 +3019,10 @@ typedef enum unification_kind_t {\n \n /* Macros for operating on a template instantiation level node.  */\n \n-#define TINST_DECL(NODE) TREE_OPERAND (NODE, 0)\n+#define TINST_DECL(NODE) \\\n+  (((tinst_level_t) TINST_LEVEL_CHECK (NODE))->decl)\n+#define TINST_LOCATION(NODE) \\\n+  (((tinst_level_t) TINST_LEVEL_CHECK (NODE))->locus)\n \n /* in class.c */\n \n@@ -4168,6 +4182,7 @@ extern tree build_dummy_object\t\t\t(tree);\n extern tree maybe_dummy_object\t\t\t(tree, tree *);\n extern int is_dummy_object\t\t\t(tree);\n extern const struct attribute_spec cxx_attribute_table[];\n+extern tree make_tinst_level                    (tree, location_t);\n extern tree make_ptrmem_cst                     (tree, tree);\n extern tree cp_build_type_attribute_variant     (tree, tree);\n extern tree cp_build_qualified_type_real        (tree, int, tsubst_flags_t);"}, {"sha": "69c64d19f8e22422e3bce3ac77abe7e32041376e", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/406d77a4bb10d5b60a9a061f59405e0aa850ea2b/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/406d77a4bb10d5b60a9a061f59405e0aa850ea2b/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=406d77a4bb10d5b60a9a061f59405e0aa850ea2b", "patch": "@@ -10711,6 +10711,7 @@ cp_tree_node_structure (union lang_tree_node * t)\n     case IDENTIFIER_NODE:\treturn TS_CP_IDENTIFIER;\n     case OVERLOAD:\t\treturn TS_CP_OVERLOAD;\n     case TEMPLATE_PARM_INDEX:\treturn TS_CP_TPI;\n+    case TINST_LEVEL:\t\treturn TS_CP_TINST_LEVEL;\n     case PTRMEM_CST:\t\treturn TS_CP_PTRMEM;\n     case BASELINK:              return TS_CP_BASELINK;\n     default:\t\t\treturn TS_CP_GENERIC;"}, {"sha": "f9a322eacffb3aacec7b4adbc80d9035ecc2812a", "filename": "gcc/cp/error.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/406d77a4bb10d5b60a9a061f59405e0aa850ea2b/gcc%2Fcp%2Ferror.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/406d77a4bb10d5b60a9a061f59405e0aa850ea2b/gcc%2Fcp%2Ferror.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ferror.c?ref=406d77a4bb10d5b60a9a061f59405e0aa850ea2b", "patch": "@@ -2209,7 +2209,7 @@ print_instantiation_full_context (diagnostic_context *context)\n                          decl_as_string (TINST_DECL (p),\n                                          TFF_DECL_SPECIFIERS | TFF_RETURN_TYPE));\n \n-\t  location = EXPR_LOCATION (p);\n+\t  location = TINST_LOCATION (p);\n \t  p = TREE_CHAIN (p);\n \t}\n     }\n@@ -2232,7 +2232,7 @@ print_instantiation_partial_context (diagnostic_context *context,\n                    xloc.file, xloc.line,\n                    decl_as_string (TINST_DECL (t),\n                                    TFF_DECL_SPECIFIERS | TFF_RETURN_TYPE));\n-      loc = EXPR_LOCATION (t);\n+      loc = TINST_LOCATION (t);\n     }\n   pp_verbatim (context->printer, \"%s:%d:   instantiated from here\\n\",\n                xloc.file, xloc.line);"}, {"sha": "86f945e7f8fa2ea0ee35b7dcdbebcc87866e0a60", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/406d77a4bb10d5b60a9a061f59405e0aa850ea2b/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/406d77a4bb10d5b60a9a061f59405e0aa850ea2b/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=406d77a4bb10d5b60a9a061f59405e0aa850ea2b", "patch": "@@ -4873,9 +4873,7 @@ push_tinst_level (tree d)\n       return 0;\n     }\n \n-  new = make_node (TINST_LEVEL);\n-  SET_EXPR_LOCATION (new, input_location);\n-  TINST_DECL (new) = d;\n+  new = make_tinst_level (d, input_location);\n   TREE_CHAIN (new) = current_tinst_level;\n   current_tinst_level = new;\n \n@@ -4899,7 +4897,7 @@ pop_tinst_level (void)\n \n   /* Restore the filename and line number stashed away when we started\n      this instantiation.  */\n-  input_location = EXPR_LOCATION (old);\n+  input_location = TINST_LOCATION (old);\n   extract_interface_info ();\n   \n   current_tinst_level = TREE_CHAIN (old);"}, {"sha": "0972ad2680d11c86ae564ace4b3d1c850f314a24", "filename": "gcc/cp/tree.c", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/406d77a4bb10d5b60a9a061f59405e0aa850ea2b/gcc%2Fcp%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/406d77a4bb10d5b60a9a061f59405e0aa850ea2b/gcc%2Fcp%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftree.c?ref=406d77a4bb10d5b60a9a061f59405e0aa850ea2b", "patch": "@@ -1900,6 +1900,17 @@ handle_init_priority_attribute (tree* node,\n     }\n }\n \n+/* Return a new TINST_LEVEL for DECL at location locus.  */\n+tree\n+make_tinst_level (tree decl, location_t locus)\n+{\n+  tree tinst_level = make_node (TINST_LEVEL);\n+  TREE_CHAIN (tinst_level) = NULL_TREE;\n+  TINST_DECL (tinst_level) = decl;\n+  TINST_LOCATION (tinst_level) = locus;\n+  return tinst_level;\n+}\n+\n /* Return a new PTRMEM_CST of the indicated TYPE.  The MEMBER is the\n    thing pointed to by the constant.  */\n \n@@ -1973,6 +1984,11 @@ cp_walk_subtrees (tree *tp, int *walk_subtrees_p, walk_tree_fn func,\n       *walk_subtrees_p = 0;\n       break;\n \n+    case TINST_LEVEL:\n+      WALK_SUBTREE (TINST_DECL (*tp));\n+      *walk_subtrees_p = 0;\n+      break;\n+\n     case PTRMEM_CST:\n       WALK_SUBTREE (TREE_TYPE (*tp));\n       *walk_subtrees_p = 0;"}]}