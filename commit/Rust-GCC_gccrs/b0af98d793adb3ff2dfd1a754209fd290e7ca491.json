{"sha": "b0af98d793adb3ff2dfd1a754209fd290e7ca491", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjBhZjk4ZDc5M2FkYjNmZjJkZmQxYTc1NDIwOWZkMjkwZTdjYTQ5MQ==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@redhat.com", "date": "2002-10-23T23:19:55Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2002-10-23T23:19:55Z"}, "message": "jni.cc (_Jv_JNI_AllocObject): Removed old FIXME comment.\n\n\t* jni.cc (_Jv_JNI_AllocObject): Removed old FIXME comment.\n\t(array_from_valist): Correctly handle promotion for jint, jlong,\n\tjfloat, and jdouble.\n\nFrom-SVN: r58476", "tree": {"sha": "7202a1525195aa15d68a9c5550674a2dbc3c7ee2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7202a1525195aa15d68a9c5550674a2dbc3c7ee2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b0af98d793adb3ff2dfd1a754209fd290e7ca491", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b0af98d793adb3ff2dfd1a754209fd290e7ca491", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b0af98d793adb3ff2dfd1a754209fd290e7ca491", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b0af98d793adb3ff2dfd1a754209fd290e7ca491/comments", "author": null, "committer": null, "parents": [{"sha": "6ddbb7ebbafbc655ce923bb675c890fc6d582c3b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ddbb7ebbafbc655ce923bb675c890fc6d582c3b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6ddbb7ebbafbc655ce923bb675c890fc6d582c3b"}], "stats": {"total": 22, "additions": 14, "deletions": 8}, "files": [{"sha": "faa6c68c322e735fce7745a2b8c943c2c50429d2", "filename": "libjava/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0af98d793adb3ff2dfd1a754209fd290e7ca491/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0af98d793adb3ff2dfd1a754209fd290e7ca491/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=b0af98d793adb3ff2dfd1a754209fd290e7ca491", "patch": "@@ -1,3 +1,9 @@\n+2002-10-23  Tom Tromey  <tromey@redhat.com>\n+\n+\t* jni.cc (_Jv_JNI_AllocObject): Removed old FIXME comment.\n+\t(array_from_valist): Correctly handle promotion for jint, jlong,\n+\tjfloat, and jdouble.\n+\n 2002-10-23  Ranjit Mathew <rmathew@hotmail.com>\n \n \t* java/io/natFileWin32.cc (attr): Use FindFirstFile( ) instead of"}, {"sha": "2985d47930d89056c50fac7f16a944f0686e9100", "filename": "libjava/jni.cc", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0af98d793adb3ff2dfd1a754209fd290e7ca491/libjava%2Fjni.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0af98d793adb3ff2dfd1a754209fd290e7ca491/libjava%2Fjni.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni.cc?ref=b0af98d793adb3ff2dfd1a754209fd290e7ca491", "patch": "@@ -600,10 +600,7 @@ _Jv_JNI_AllocObject (JNIEnv *env, jclass clazz)\n       if (clazz->isInterface() || Modifier::isAbstract(clazz->getModifiers()))\n \tenv->ex = new java::lang::InstantiationException ();\n       else\n-\t{\n-\t  // FIXME: will this work for String?\n-\t  obj = JvAllocObject (clazz);\n-\t}\n+\tobj = JvAllocObject (clazz);\n     }\n   catch (jthrowable t)\n     {\n@@ -694,18 +691,21 @@ array_from_valist (jvalue *values, JArray<jclass> *arg_types, va_list vargs)\n   jclass *arg_elts = elements (arg_types);\n   for (int i = 0; i < arg_types->length; ++i)\n     {\n+      // Here we assume that sizeof(int) >= sizeof(jint), because we\n+      // use `int' when decoding the varargs.  Likewise for\n+      // long/jlong, float, and double.\n       if (arg_elts[i] == JvPrimClass (byte))\n \tvalues[i].b = (jbyte) va_arg (vargs, int);\n       else if (arg_elts[i] == JvPrimClass (short))\n \tvalues[i].s = (jshort) va_arg (vargs, int);\n       else if (arg_elts[i] == JvPrimClass (int))\n-\tvalues[i].i = va_arg (vargs, jint);\n+\tvalues[i].i = (jint) va_arg (vargs, int);\n       else if (arg_elts[i] == JvPrimClass (long))\n-\tvalues[i].j = va_arg (vargs, jlong);\n+\tvalues[i].j = (jlong) va_arg (vargs, long);\n       else if (arg_elts[i] == JvPrimClass (float))\n-\tvalues[i].f = va_arg (vargs, jfloat);\n+\tvalues[i].f = (jfloat) va_arg (vargs, double);\n       else if (arg_elts[i] == JvPrimClass (double))\n-\tvalues[i].d = va_arg (vargs, jdouble);\n+\tvalues[i].d = (jdouble) va_arg (vargs, double);\n       else if (arg_elts[i] == JvPrimClass (boolean))\n \tvalues[i].z = (jboolean) va_arg (vargs, int);\n       else if (arg_elts[i] == JvPrimClass (char))"}]}