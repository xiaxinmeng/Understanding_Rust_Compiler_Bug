{"sha": "28e6bb130e41cc18e1d07330a154862a4927af65", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjhlNmJiMTMwZTQxY2MxOGUxZDA3MzMwYTE1NDg2MmE0OTI3YWY2NQ==", "commit": {"author": {"name": "Nick Clifton", "email": "nickc@redhat.com", "date": "2008-09-04T09:43:08Z"}, "committer": {"name": "Nick Clifton", "email": "nickc@gcc.gnu.org", "date": "2008-09-04T09:43:08Z"}, "message": "configure.ac (HAVE_GAS_LCOMM_WITH_ALIGNMENT): New assembler check.\n\n        * configure.ac (HAVE_GAS_LCOMM_WITH_ALIGNMENT): New assembler\n        check.\n        * configure: Regenerate.\n        * config.in: Regenerate.\n        * config/i386/bsd.h (ASM_OUTPUT_ALIGNED_LOCAL): Use .lcomm with an\n        alignment field, if it is supported.\n\nFrom-SVN: r139979", "tree": {"sha": "af697c0f2cee31ce7d1e63bab8f60062dcbbca0f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/af697c0f2cee31ce7d1e63bab8f60062dcbbca0f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/28e6bb130e41cc18e1d07330a154862a4927af65", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/28e6bb130e41cc18e1d07330a154862a4927af65", "html_url": "https://github.com/Rust-GCC/gccrs/commit/28e6bb130e41cc18e1d07330a154862a4927af65", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/28e6bb130e41cc18e1d07330a154862a4927af65/comments", "author": {"login": "nickclifton", "id": 31441682, "node_id": "MDQ6VXNlcjMxNDQxNjgy", "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nickclifton", "html_url": "https://github.com/nickclifton", "followers_url": "https://api.github.com/users/nickclifton/followers", "following_url": "https://api.github.com/users/nickclifton/following{/other_user}", "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}", "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions", "organizations_url": "https://api.github.com/users/nickclifton/orgs", "repos_url": "https://api.github.com/users/nickclifton/repos", "events_url": "https://api.github.com/users/nickclifton/events{/privacy}", "received_events_url": "https://api.github.com/users/nickclifton/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "48253184e5e4098efdb26cc7f195c46c5ba0f1f7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48253184e5e4098efdb26cc7f195c46c5ba0f1f7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/48253184e5e4098efdb26cc7f195c46c5ba0f1f7"}], "stats": {"total": 68, "additions": 64, "deletions": 4}, "files": [{"sha": "d3d023ebc44b8e0c5a87d6e59e5a72a9dd943116", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28e6bb130e41cc18e1d07330a154862a4927af65/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28e6bb130e41cc18e1d07330a154862a4927af65/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=28e6bb130e41cc18e1d07330a154862a4927af65", "patch": "@@ -1,3 +1,12 @@\n+2008-09-04  Nick Clifton  <nickc@redhat.com>\n+\n+\t* configure.ac (HAVE_GAS_LCOMM_WITH_ALIGNMENT): New assembler\n+\tcheck.\n+\t* configure: Regenerate.\n+\t* config.in: Regenerate.\n+\t* config/i386/bsd.h (ASM_OUTPUT_ALIGNED_LOCAL): Use .lcomm with an\n+\talignment field, if it is supported.\n+\n 2008-09-04  Kai Tietz  <kai.tietz@onevision.com>\n \n \t* config/i386/t-mingw32 (SHLIB_LC): Change order of import"}, {"sha": "30a67a7de029475cca6fffc90004a8f03d77b568", "filename": "gcc/config.in", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28e6bb130e41cc18e1d07330a154862a4927af65/gcc%2Fconfig.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28e6bb130e41cc18e1d07330a154862a4927af65/gcc%2Fconfig.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.in?ref=28e6bb130e41cc18e1d07330a154862a4927af65", "patch": "@@ -377,11 +377,13 @@\n #undef HAVE_AS_TLS\n #endif\n \n+\n /* Define if your assembler supports VSX instructions. */\n #ifndef USED_FOR_TARGET\n #undef HAVE_AS_VSX\n #endif\n \n+\n /* Define to 1 if you have the `atoll' function. */\n #ifndef USED_FOR_TARGET\n #undef HAVE_ATOLL\n@@ -846,6 +848,12 @@\n /* Define if your assembler and linker support .hidden. */\n #undef HAVE_GAS_HIDDEN\n \n+/* Define if your assembler supports .lcomm with an alignment field. */\n+#ifndef USED_FOR_TARGET\n+#undef HAVE_GAS_LCOMM_WITH_ALIGNMENT\n+#endif\n+\n+\n /* Define if your assembler supports .literal16. */\n #ifndef USED_FOR_TARGET\n #undef HAVE_GAS_LITERAL16"}, {"sha": "0256a6165ec1a00d3eec56806f3eb9cf95166411", "filename": "gcc/config/i386/bsd.h", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28e6bb130e41cc18e1d07330a154862a4927af65/gcc%2Fconfig%2Fi386%2Fbsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28e6bb130e41cc18e1d07330a154862a4927af65/gcc%2Fconfig%2Fi386%2Fbsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fbsd.h?ref=28e6bb130e41cc18e1d07330a154862a4927af65", "patch": "@@ -65,6 +65,13 @@ along with GCC; see the file COPYING3.  If not see\n   assemble_name ((FILE), (NAME)),\t\t\\\n   fprintf ((FILE), \",%u\\n\", (int)(ROUNDED)))\n \n+#ifdef HAVE_GAS_LCOMM_WITH_ALIGNMENT\n+#define ASM_OUTPUT_ALIGNED_LOCAL(FILE, NAME, SIZE, ALIGNMENT)  \\\n+( fputs (\".lcomm \", (FILE)),\t\t\t\\\n+  assemble_name ((FILE), (NAME)),\t\t\\\n+  fprintf ((FILE), \",%u,%u\\n\", (int)(SIZE), (int)(ALIGNMENT) / BITS_PER_UNIT))\n+#endif\n+\n /* This is how to output an assembler line\n    that says to advance the location counter\n    to a multiple of 2**LOG bytes.  */"}, {"sha": "e6535fb85f69530a1a45a1e8307322c706184a0f", "filename": "gcc/configure", "status": "modified", "additions": 34, "deletions": 4, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28e6bb130e41cc18e1d07330a154862a4927af65/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28e6bb130e41cc18e1d07330a154862a4927af65/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=28e6bb130e41cc18e1d07330a154862a4927af65", "patch": "@@ -458,7 +458,7 @@ ac_includes_default=\"\\\n # include <unistd.h>\n #endif\"\n \n-ac_subst_vars='SHELL PATH_SEPARATOR PACKAGE_NAME PACKAGE_TARNAME PACKAGE_VERSION PACKAGE_STRING PACKAGE_BUGREPORT exec_prefix prefix program_transform_name bindir sbindir libexecdir datadir sysconfdir sharedstatedir localstatedir libdir includedir oldincludedir infodir mandir build_alias host_alias target_alias DEFS ECHO_C ECHO_N ECHO_T LIBS build build_cpu build_vendor build_os host host_cpu host_vendor host_os target target_cpu target_vendor target_os target_noncanonical build_libsubdir build_subdir host_subdir target_subdir GENINSRC CC CFLAGS LDFLAGS CPPFLAGS ac_ct_CC EXEEXT OBJEXT GNATBIND ac_ct_GNATBIND GNATMAKE ac_ct_GNATMAKE NO_MINUS_C_MINUS_O OUTPUT_OPTION CPP EGREP loose_warn strict_warn warn_cflags nocommon_flag TREEBROWSER valgrind_path valgrind_path_defines valgrind_command coverage_flags enable_multilib enable_decimal_float enable_fixed_point enable_shared TARGET_SYSTEM_ROOT TARGET_SYSTEM_ROOT_DEFINE CROSS_SYSTEM_HEADER_DIR onestep PKGVERSION REPORT_BUGS_TO REPORT_BUGS_TEXI datarootdir docdir htmldir SET_MAKE AWK LN_S LN RANLIB ac_ct_RANLIB ranlib_flags INSTALL INSTALL_PROGRAM INSTALL_DATA make_compare_target have_mktemp_command MAKEINFO BUILD_INFO GENERATED_MANPAGES FLEX BISON NM AR COLLECT2_LIBS GNAT_LIBEXC LDEXP_LIB TARGET_GETGROUPS_T LIBICONV LTLIBICONV LIBICONV_DEP manext objext gthread_flags extra_modes_file extra_opt_files USE_NLS LIBINTL LIBINTL_DEP INCINTL XGETTEXT GMSGFMT POSUB CATALOGS DATADIRNAME INSTOBJEXT GENCAT CATOBJEXT CROSS ALL SYSTEM_HEADER_DIR inhibit_libc CC_FOR_BUILD BUILD_CFLAGS BUILD_LDFLAGS STMP_FIXINC STMP_FIXPROTO collect2 LIBTOOL SED FGREP GREP LD DUMPBIN ac_ct_DUMPBIN ac_ct_AR STRIP ac_ct_STRIP lt_ECHO objdir enable_fast_install gcc_cv_as ORIGINAL_AS_FOR_TARGET gcc_cv_ld ORIGINAL_LD_FOR_TARGET gcc_cv_nm ORIGINAL_NM_FOR_TARGET gcc_cv_objdump libgcc_visibility GGC zlibdir zlibinc MAINT gcc_tooldir dollar slibdir subdirs srcdir all_compilers all_gtfiles all_lang_makefrags all_lang_makefiles all_languages all_selected_languages build_exeext build_install_headers_dir build_xm_file_list build_xm_include_list build_xm_defines build_file_translate check_languages cpp_install_dir xmake_file tmake_file extra_gcc_objs extra_headers_list extra_objs extra_parts extra_passes extra_programs float_h_file gcc_config_arguments gcc_gxx_include_dir host_exeext host_xm_file_list host_xm_include_list host_xm_defines out_host_hook_obj install lang_opt_files lang_specs_files lang_tree_files local_prefix md_file objc_boehm_gc out_file out_object_file thread_file tm_file_list tm_include_list tm_defines tm_p_file_list tm_p_include_list xm_file_list xm_include_list xm_defines c_target_objs cxx_target_objs fortran_target_objs target_cpu_default GMPLIBS GMPINC PPLLIBS PPLINC CLOOGLIBS CLOOGINC GRAPHITE LIBOBJS LTLIBOBJS'\n+ac_subst_vars='SHELL PATH_SEPARATOR PACKAGE_NAME PACKAGE_TARNAME PACKAGE_VERSION PACKAGE_STRING PACKAGE_BUGREPORT exec_prefix prefix program_transform_name bindir sbindir libexecdir datadir sysconfdir sharedstatedir localstatedir libdir includedir oldincludedir infodir mandir build_alias host_alias target_alias DEFS ECHO_C ECHO_N ECHO_T LIBS build build_cpu build_vendor build_os host host_cpu host_vendor host_os target target_cpu target_vendor target_os target_noncanonical build_libsubdir build_subdir host_subdir target_subdir GENINSRC CC CFLAGS LDFLAGS CPPFLAGS ac_ct_CC EXEEXT OBJEXT GNATBIND ac_ct_GNATBIND GNATMAKE ac_ct_GNATMAKE NO_MINUS_C_MINUS_O OUTPUT_OPTION CPP EGREP loose_warn strict_warn warn_cflags nocommon_flag TREEBROWSER valgrind_path valgrind_path_defines valgrind_command coverage_flags enable_multilib enable_decimal_float enable_fixed_point enable_shared TARGET_SYSTEM_ROOT TARGET_SYSTEM_ROOT_DEFINE CROSS_SYSTEM_HEADER_DIR onestep PKGVERSION REPORT_BUGS_TO REPORT_BUGS_TEXI datarootdir docdir htmldir SET_MAKE AWK LN_S LN RANLIB ac_ct_RANLIB ranlib_flags INSTALL INSTALL_PROGRAM INSTALL_DATA make_compare_target have_mktemp_command MAKEINFO BUILD_INFO GENERATED_MANPAGES FLEX BISON NM AR COLLECT2_LIBS GNAT_LIBEXC LDEXP_LIB TARGET_GETGROUPS_T LIBICONV LTLIBICONV LIBICONV_DEP manext objext gthread_flags extra_modes_file extra_opt_files USE_NLS LIBINTL LIBINTL_DEP INCINTL XGETTEXT GMSGFMT POSUB CATALOGS DATADIRNAME INSTOBJEXT GENCAT CATOBJEXT CROSS ALL SYSTEM_HEADER_DIR inhibit_libc CC_FOR_BUILD BUILD_CFLAGS BUILD_LDFLAGS STMP_FIXINC STMP_FIXPROTO collect2 LIBTOOL SED FGREP GREP LD DUMPBIN ac_ct_DUMPBIN ac_ct_AR STRIP ac_ct_STRIP lt_ECHO objdir enable_fast_install gcc_cv_as ORIGINAL_AS_FOR_TARGET gcc_cv_ld ORIGINAL_LD_FOR_TARGET gcc_cv_nm ORIGINAL_NM_FOR_TARGET gcc_cv_objdump libgcc_visibility GGC zlibdir zlibinc MAINT gcc_tooldir dollar slibdir subdirs srcdir all_compilers all_gtfiles all_lang_makefrags all_lang_makefiles all_languages all_selected_languages build_exeext build_install_headers_dir build_xm_file_list build_xm_include_list build_xm_defines build_file_translate check_languages cpp_install_dir xmake_file tmake_file extra_gcc_objs extra_headers_list extra_objs extra_parts extra_passes extra_programs float_h_file gcc_config_arguments gcc_gxx_include_dir host_exeext host_xm_file_list host_xm_include_list host_xm_defines out_host_hook_obj install lang_opt_files lang_specs_files lang_tree_files local_prefix md_file objc_boehm_gc out_file out_object_file thread_file tm_file_list tm_include_list tm_defines tm_p_file_list tm_p_include_list xm_file_list xm_include_list xm_defines c_target_objs cxx_target_objs fortran_target_objs target_cpu_default GMPLIBS GMPINC PPLLIBS PPLINC CLOOGLIBS CLOOGINC LIBOBJS LTLIBOBJS'\n ac_subst_files='language_hooks'\n ac_pwd=`pwd`\n \n@@ -23114,6 +23114,39 @@ _ACEOF\n fi\n fi\n \n+echo \"$as_me:$LINENO: checking assembler for .lcomm with alignment\" >&5\n+echo $ECHO_N \"checking assembler for .lcomm with alignment... $ECHO_C\" >&6\n+if test \"${gcc_cv_as_lcomm_with_alignment+set}\" = set; then\n+  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n+else\n+  gcc_cv_as_lcomm_with_alignment=no\n+  if test x$gcc_cv_as != x; then\n+    echo '.lcomm bar,4,16' > conftest.s\n+    if { ac_try='$gcc_cv_as  -o conftest.o conftest.s >&5'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; }\n+    then\n+\tgcc_cv_as_lcomm_with_alignment=yes\n+    else\n+      echo \"configure: failed program was\" >&5\n+      cat conftest.s >&5\n+    fi\n+    rm -f conftest.o conftest.s\n+  fi\n+fi\n+echo \"$as_me:$LINENO: result: $gcc_cv_as_lcomm_with_alignment\" >&5\n+echo \"${ECHO_T}$gcc_cv_as_lcomm_with_alignment\" >&6\n+if test $gcc_cv_as_lcomm_with_alignment = yes; then\n+\n+cat >>confdefs.h <<\\_ACEOF\n+#define HAVE_GAS_LCOMM_WITH_ALIGNMENT 1\n+_ACEOF\n+\n+fi\n+\n echo \"$as_me:$LINENO: checking assembler for tolerance to line number 0\" >&5\n echo $ECHO_N \"checking assembler for tolerance to line number 0... $ECHO_C\" >&6\n if test \"${gcc_cv_as_line_zero+set}\" = set; then\n@@ -24028,10 +24061,8 @@ cat >>confdefs.h <<\\_ACEOF\n #define HAVE_cloog 1\n _ACEOF\n \n-   GRAPHITE=graphite.o\n fi\n \n-\n # Configure the subdirectories\n # AC_CONFIG_SUBDIRS($subdirs)\n \n@@ -24864,7 +24895,6 @@ s,@PPLLIBS@,$PPLLIBS,;t t\n s,@PPLINC@,$PPLINC,;t t\n s,@CLOOGLIBS@,$CLOOGLIBS,;t t\n s,@CLOOGINC@,$CLOOGINC,;t t\n-s,@GRAPHITE@,$GRAPHITE,;t t\n s,@LIBOBJS@,$LIBOBJS,;t t\n s,@LTLIBOBJS@,$LTLIBOBJS,;t t\n /@language_hooks@/r $language_hooks"}, {"sha": "e81b203231bcb7af860945b138c1961b9f9ca5cf", "filename": "gcc/configure.ac", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28e6bb130e41cc18e1d07330a154862a4927af65/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28e6bb130e41cc18e1d07330a154862a4927af65/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=28e6bb130e41cc18e1d07330a154862a4927af65", "patch": "@@ -3177,6 +3177,12 @@ if test x\"$insn\" != x; then\n [Define if your assembler supports the --debug-prefix-map option.])])\n fi\n \n+gcc_GAS_CHECK_FEATURE([.lcomm with alignment], gcc_cv_as_lcomm_with_alignment,\n+ ,,\n+[.lcomm bar,4,16],,\n+[AC_DEFINE(HAVE_GAS_LCOMM_WITH_ALIGNMENT, 1,\n+  [Define if your assembler supports .lcomm with an alignment field.])])\n+\n AC_CACHE_CHECK([assembler for tolerance to line number 0],\n  [gcc_cv_as_line_zero],\n  [gcc_cv_as_line_zero=no"}]}