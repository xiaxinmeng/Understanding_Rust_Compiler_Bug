{"sha": "75b7b7fdc4597170f24c069ea13aa3e14f37fde7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzViN2I3ZmRjNDU5NzE3MGYyNGMwNjllYTEzYWEzZTE0ZjM3ZmRlNw==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2020-03-16T14:17:11Z"}, "committer": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2020-03-24T23:36:20Z"}, "message": "c++: Fix wrong no post-decrement operator error in template [PR94190]\n\nNow that convert_like creates an IMPLICIT_CONV_EXPR when it converts\nsomething that involves a class in a template, we must be prepared to\nhandle it.  In this test, we have a class S and we're converting it\nto long int& using a user-defined conversion since we're performing\n-- on it.  So cp_build_unary_op/POSTDECREMENT_EXPR calls\nbuild_expr_type_conversion which gets the IMPLICIT_CONV_EXPR.  Before\nthe convert_like change it got *S::operator long int &(&b) whose type\nis long int but now it gets IMPLICIT_CONV_EXPR<long int&>(b) whose type\nis a reference type.  But the !MAYBE_CLASS_TYPE_P switch doesn't handle\nreference types and so we complain.\n\nFixed by calling convert_from_reference on the result of convert_like.\n\n\tPR c++/94190 - wrong no post-decrement operator error in template.\n\t* call.c (convert_like_real): Use convert_from_reference on the result.\n\n\t* g++.dg/conversion/op7.C: New test.", "tree": {"sha": "1f95379bc8eea238569ba3cb1f53c3751c8d273e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1f95379bc8eea238569ba3cb1f53c3751c8d273e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/75b7b7fdc4597170f24c069ea13aa3e14f37fde7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75b7b7fdc4597170f24c069ea13aa3e14f37fde7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/75b7b7fdc4597170f24c069ea13aa3e14f37fde7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75b7b7fdc4597170f24c069ea13aa3e14f37fde7/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fddfd3ce555965864b6116cf541f6355d2057d3d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fddfd3ce555965864b6116cf541f6355d2057d3d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fddfd3ce555965864b6116cf541f6355d2057d3d"}], "stats": {"total": 37, "additions": 36, "deletions": 1}, "files": [{"sha": "4332b07cc5f771ba48bdd4ae324df57a368097bd", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75b7b7fdc4597170f24c069ea13aa3e14f37fde7/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75b7b7fdc4597170f24c069ea13aa3e14f37fde7/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=75b7b7fdc4597170f24c069ea13aa3e14f37fde7", "patch": "@@ -1,3 +1,8 @@\n+2020-03-24  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/94190 - wrong no post-decrement operator error in template.\n+\t* call.c (convert_like_real): Use convert_from_reference on the result.\n+\n 2020-03-24  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/94186"}, {"sha": "bae4b2c0f5214a30e31fac9abbc38e26ad03ec0f", "filename": "gcc/cp/call.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75b7b7fdc4597170f24c069ea13aa3e14f37fde7/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75b7b7fdc4597170f24c069ea13aa3e14f37fde7/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=75b7b7fdc4597170f24c069ea13aa3e14f37fde7", "patch": "@@ -7389,7 +7389,10 @@ convert_like_real (conversion *convs, tree expr, tree fn, int argnum,\n   if (processing_template_decl\n       && convs->kind != ck_identity\n       && (CLASS_TYPE_P (totype) || CLASS_TYPE_P (TREE_TYPE (expr))))\n-    return build1 (IMPLICIT_CONV_EXPR, totype, expr);\n+    {\n+      expr = build1 (IMPLICIT_CONV_EXPR, totype, expr);\n+      return convs->kind == ck_ref_bind ? expr : convert_from_reference (expr);\n+    }\n \n   switch (convs->kind)\n     {"}, {"sha": "bd2e45dcb2d8f417d9b95296d3558ac3ca08aa42", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75b7b7fdc4597170f24c069ea13aa3e14f37fde7/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75b7b7fdc4597170f24c069ea13aa3e14f37fde7/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=75b7b7fdc4597170f24c069ea13aa3e14f37fde7", "patch": "@@ -1,3 +1,8 @@\n+2020-03-24  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/94190 - wrong no post-decrement operator error in template.\n+\t* g++.dg/conversion/op7.C: New test.\n+\n 2020-03-24  Christophe Lyon  <christophe.lyon@linaro.org>\n \n \t* gcc/arm/vfp-1.c: Use arm_fp__ok effective-target."}, {"sha": "c6401d109b464fd290376b5a5527b1fef5134b6c", "filename": "gcc/testsuite/g++.dg/conversion/op7.C", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75b7b7fdc4597170f24c069ea13aa3e14f37fde7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconversion%2Fop7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75b7b7fdc4597170f24c069ea13aa3e14f37fde7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconversion%2Fop7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconversion%2Fop7.C?ref=75b7b7fdc4597170f24c069ea13aa3e14f37fde7", "patch": "@@ -0,0 +1,22 @@\n+// PR c++/94190 - wrong no post-decrement operator error in template.\n+\n+struct S { operator long & (); } b;\n+\n+template<int> void\n+foo ()\n+{\n+  b--;\n+  ++b;\n+  --b;\n+  b++;\n+  !b;\n+  ~b;\n+  +b;\n+  -b;\n+}\n+\n+void\n+bar ()\n+{\n+  foo<0> ();\n+}"}]}