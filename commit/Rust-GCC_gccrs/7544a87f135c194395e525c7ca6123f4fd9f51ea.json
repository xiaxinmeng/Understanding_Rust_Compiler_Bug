{"sha": "7544a87f135c194395e525c7ca6123f4fd9f51ea", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzU0NGE4N2YxMzVjMTk0Mzk1ZTUyNWM3Y2E2MTIzZjRmZDlmNTFlYQ==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2005-07-17T02:29:00Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2005-07-17T02:29:00Z"}, "message": "gcc.c (MFWRAP_SPEC): Don't wrap pthread_join or pthread_exit.\n\n        * gcc.c (MFWRAP_SPEC): Don't wrap pthread_join or pthread_exit.\n\n        * acinclude.m4: New file.\n        * configure.ac: Invoke LIBMUDFLAP_CHECK_TLS.\n        * configure, config.h.in, Makefile.in, testsuite/Makefile.in: Rebuild.\n        * mf-hooks1.c (__mf_0fn_malloc): Move body from ...\n        (__mf_0fn_calloc): ... here.\n        * mf-hooks3.c (struct pthread_info): Remove.\n        (__mf_pthread_info, __mf_pthread_info_idx): Remove.\n        (LIBMUDFLAPTH_THREADS_MAX): Set to 1021.\n        (struct mf_thread_data): New.\n        (mf_thread_data, mf_thread_data_lock): New.\n        (__mf_allocate_blank_threadinfo): Remove.\n        (__mf_find_threadinfo): Rewrite and simplify.  Only use if TLS is\n        not available.\n        (__mf_state_perthread): Remove.\n        (__mf_get_state, __mf_set_state): New.\n        (__mf_pthread_cleanup): Use &errno, rather than saved pointer.\n        Update mf_thread_data killing procedure.\n        (__mf_pthread_spawner): Similarly.\n        (__mf_0fn_pthread_create): Only use wrapper if necessary.  Remove\n        code to allocate thread stack space.\n        (__mf_0fn_pthread_join, pthread_join): Remove.\n        (__mf_0fn_pthread_exit, pthread_exit): Remove.\n        * mf-impl.h (dyn_pthread_join, dyn_pthread_exit): Remove.\n        (__mf_state_1): Rename from __mf_state; use TLS when available.\n        (__mf_get_state, __mf_set_state): New.  Update all users.\n        * mf-runtime.c (begin_recursion_protect1): New.\n        (BEGIN_RECURSION_PROTECT): Use it.\n        (__mf_state_1): Rename from __mf_state; use TLS when available.\n        (threads_active_p): Remove.\n        (__mf_usage): Compute it directly.\n\nFrom-SVN: r102108", "tree": {"sha": "7eb9ea11806846cc5d60256f51b3b0a1033126fe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7eb9ea11806846cc5d60256f51b3b0a1033126fe"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7544a87f135c194395e525c7ca6123f4fd9f51ea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7544a87f135c194395e525c7ca6123f4fd9f51ea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7544a87f135c194395e525c7ca6123f4fd9f51ea", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7544a87f135c194395e525c7ca6123f4fd9f51ea/comments", "author": null, "committer": null, "parents": [{"sha": "f8820d33eba7e777142fbb8cb0772cc9dc0fe7c2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8820d33eba7e777142fbb8cb0772cc9dc0fe7c2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f8820d33eba7e777142fbb8cb0772cc9dc0fe7c2"}], "stats": {"total": 1449, "additions": 616, "deletions": 833}, "files": [{"sha": "2f8eeba2ac3690a6a7a907d6d863e3d1a2c58234", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7544a87f135c194395e525c7ca6123f4fd9f51ea/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7544a87f135c194395e525c7ca6123f4fd9f51ea/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7544a87f135c194395e525c7ca6123f4fd9f51ea", "patch": "@@ -1,3 +1,7 @@\n+2005-07-16  Richard Henderson  <rth@redhat.com>\n+\n+\t* gcc.c (MFWRAP_SPEC): Don't wrap pthread_join or pthread_exit.\n+\n 2005-07-16 Danny Berlin <dberlin@dberlin.org>\n \t   Kenneth Zadeck <zadeck@naturalbridge.com>\n "}, {"sha": "a701d2c52f2eb6197c700b4c5bcb7b97a2608d17", "filename": "gcc/gcc.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7544a87f135c194395e525c7ca6123f4fd9f51ea/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7544a87f135c194395e525c7ca6123f4fd9f51ea/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=7544a87f135c194395e525c7ca6123f4fd9f51ea", "patch": "@@ -598,7 +598,7 @@ proper position among the other output files.  */\n #define MFWRAP_SPEC \" %{static: %{fmudflap|fmudflapth: \\\n  --wrap=malloc --wrap=free --wrap=calloc --wrap=realloc\\\n  --wrap=mmap --wrap=munmap --wrap=alloca\\\n-} %{fmudflapth: --wrap=pthread_create --wrap=pthread_join --wrap=pthread_exit\\\n+} %{fmudflapth: --wrap=pthread_create\\\n }} %{fmudflap|fmudflapth: --wrap=main}\"\n #endif\n #ifndef MFLIB_SPEC"}, {"sha": "f9f13800468d762da51dfc43af8849aeaed63b99", "filename": "libmudflap/ChangeLog", "status": "modified", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7544a87f135c194395e525c7ca6123f4fd9f51ea/libmudflap%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7544a87f135c194395e525c7ca6123f4fd9f51ea/libmudflap%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libmudflap%2FChangeLog?ref=7544a87f135c194395e525c7ca6123f4fd9f51ea", "patch": "@@ -1,3 +1,36 @@\n+2005-07-16  Richard Henderson  <rth@redhat.com>\n+\n+\t* acinclude.m4: New file.\n+\t* configure.ac: Invoke LIBMUDFLAP_CHECK_TLS.\n+\t* configure, config.h.in, Makefile.in, testsuite/Makefile.in: Rebuild.\n+\t* mf-hooks1.c (__mf_0fn_malloc): Move body from ...\n+\t(__mf_0fn_calloc): ... here.\n+\t* mf-hooks3.c (struct pthread_info): Remove.\n+\t(__mf_pthread_info, __mf_pthread_info_idx): Remove.\n+\t(LIBMUDFLAPTH_THREADS_MAX): Set to 1021.\n+\t(struct mf_thread_data): New.\n+\t(mf_thread_data, mf_thread_data_lock): New.\n+\t(__mf_allocate_blank_threadinfo): Remove.\n+\t(__mf_find_threadinfo): Rewrite and simplify.  Only use if TLS is\n+\tnot available.\n+\t(__mf_state_perthread): Remove.\n+\t(__mf_get_state, __mf_set_state): New.\n+\t(__mf_pthread_cleanup): Use &errno, rather than saved pointer.\n+\tUpdate mf_thread_data killing procedure.\n+\t(__mf_pthread_spawner): Similarly.\n+\t(__mf_0fn_pthread_create): Only use wrapper if necessary.  Remove\n+\tcode to allocate thread stack space.\n+\t(__mf_0fn_pthread_join, pthread_join): Remove.\n+\t(__mf_0fn_pthread_exit, pthread_exit): Remove.\n+\t* mf-impl.h (dyn_pthread_join, dyn_pthread_exit): Remove.\n+\t(__mf_state_1): Rename from __mf_state; use TLS when available.\n+\t(__mf_get_state, __mf_set_state): New.  Update all users.\n+\t* mf-runtime.c (begin_recursion_protect1): New.\n+\t(BEGIN_RECURSION_PROTECT): Use it.\n+\t(__mf_state_1): Rename from __mf_state; use TLS when available.\n+\t(threads_active_p): Remove.\n+\t(__mf_usage): Compute it directly.\n+\n 2005-06-19  Ulrich Weigand  <uweigand@de.ibm.com>\n \n \t* testsuite/libmudflap.c/externs-1.c (main): Add return statement."}, {"sha": "24fa22102d46f22f68d6976ed17e27cca8a50f6e", "filename": "libmudflap/Makefile.in", "status": "modified", "additions": 22, "deletions": 9, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7544a87f135c194395e525c7ca6123f4fd9f51ea/libmudflap%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7544a87f135c194395e525c7ca6123f4fd9f51ea/libmudflap%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libmudflap%2FMakefile.in?ref=7544a87f135c194395e525c7ca6123f4fd9f51ea", "patch": "@@ -1,8 +1,8 @@\n-# Makefile.in generated by automake 1.9.3 from Makefile.am.\n+# Makefile.in generated by automake 1.9.5 from Makefile.am.\n # @configure_input@\n \n # Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,\n-# 2003, 2004  Free Software Foundation, Inc.\n+# 2003, 2004, 2005  Free Software Foundation, Inc.\n # This Makefile.in is free software; the Free Software Foundation\n # gives unlimited permission to copy and/or distribute it,\n # with or without modifications, as long as this notice is preserved.\n@@ -49,8 +49,9 @@ DIST_COMMON = $(am__configure_deps) $(include_HEADERS) \\\n \t$(top_srcdir)/configure ChangeLog\n subdir = .\n ACLOCAL_M4 = $(top_srcdir)/aclocal.m4\n-am__aclocal_m4_deps = $(top_srcdir)/../libtool.m4 \\\n-\t$(top_srcdir)/configure.ac\n+am__aclocal_m4_deps = $(top_srcdir)/../config/depstand.m4 \\\n+\t$(top_srcdir)/../config/lead-dot.m4 $(top_srcdir)/acinclude.m4 \\\n+\t$(top_srcdir)/../libtool.m4 $(top_srcdir)/configure.ac\n am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\\n \t$(ACLOCAL_M4)\n am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \\\n@@ -463,7 +464,13 @@ uninstall-includeHEADERS:\n #     (which will cause the Makefiles to be regenerated when you run `make');\n # (2) otherwise, pass the desired values on the `make' command line.\n $(RECURSIVE_TARGETS):\n-\t@set fnord $$MAKEFLAGS; amf=$$2; \\\n+\t@failcom='exit 1'; \\\n+\tfor f in x $$MAKEFLAGS; do \\\n+\t  case $$f in \\\n+\t    *=* | --[!k]*);; \\\n+\t    *k*) failcom='fail=yes';; \\\n+\t  esac; \\\n+\tdone; \\\n \tdot_seen=no; \\\n \ttarget=`echo $@ | sed s/-recursive//`; \\\n \tlist='$(SUBDIRS)'; for subdir in $$list; do \\\n@@ -475,15 +482,21 @@ $(RECURSIVE_TARGETS):\n \t    local_target=\"$$target\"; \\\n \t  fi; \\\n \t  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \\\n-\t   || case \"$$amf\" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \\\n+\t  || eval $$failcom; \\\n \tdone; \\\n \tif test \"$$dot_seen\" = \"no\"; then \\\n \t  $(MAKE) $(AM_MAKEFLAGS) \"$$target-am\" || exit 1; \\\n \tfi; test -z \"$$fail\"\n \n mostlyclean-recursive clean-recursive distclean-recursive \\\n maintainer-clean-recursive:\n-\t@set fnord $$MAKEFLAGS; amf=$$2; \\\n+\t@failcom='exit 1'; \\\n+\tfor f in x $$MAKEFLAGS; do \\\n+\t  case $$f in \\\n+\t    *=* | --[!k]*);; \\\n+\t    *k*) failcom='fail=yes';; \\\n+\t  esac; \\\n+\tdone; \\\n \tdot_seen=no; \\\n \tcase \"$@\" in \\\n \t  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \\\n@@ -504,7 +517,7 @@ maintainer-clean-recursive:\n \t    local_target=\"$$target\"; \\\n \t  fi; \\\n \t  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \\\n-\t   || case \"$$amf\" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \\\n+\t  || eval $$failcom; \\\n \tdone && test -z \"$$fail\"\n tags-recursive:\n \tlist='$(SUBDIRS)'; for subdir in $$list; do \\\n@@ -579,7 +592,7 @@ distclean-tags:\n distdir: $(DISTFILES)\n \t$(am__remove_distdir)\n \tmkdir $(distdir)\n-\t$(mkdir_p) $(distdir)/.. $(distdir)/testsuite\n+\t$(mkdir_p) $(distdir)/.. $(distdir)/../config $(distdir)/testsuite\n \t@srcdirstrip=`echo \"$(srcdir)\" | sed 's|.|.|g'`; \\\n \ttopsrcdirstrip=`echo \"$(top_srcdir)\" | sed 's|.|.|g'`; \\\n \tlist='$(DISTFILES)'; for file in $$list; do \\"}, {"sha": "4308f508d847bbce3bb0e358b275c7ab0e7fae99", "filename": "libmudflap/acinclude.m4", "status": "added", "additions": 72, "deletions": 0, "changes": 72, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7544a87f135c194395e525c7ca6123f4fd9f51ea/libmudflap%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7544a87f135c194395e525c7ca6123f4fd9f51ea/libmudflap%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libmudflap%2Facinclude.m4?ref=7544a87f135c194395e525c7ca6123f4fd9f51ea", "patch": "@@ -0,0 +1,72 @@\n+dnl Check whether the target supports TLS.\n+AC_DEFUN([LIBMUDFLAP_CHECK_TLS], [\n+  LIBMUDFLAP_ENABLE(tls, yes, [Use thread-local storage])\n+  AC_CACHE_CHECK([whether the target supports thread-local storage],\n+\t\t have_tls, [\n+    AC_RUN_IFELSE([__thread int a; int b; int main() { return a = b; }],\n+      [dnl If the test case passed with dynamic linking, try again with\n+      dnl static linking.  This fails at least with some older Red Hat\n+      dnl releases.\n+      save_LDFLAGS=\"$LDFLAGS\"\n+      LDFLAGS=\"-static $LDFLAGS\"\n+      AC_RUN_IFELSE([__thread int a; int b; int main() { return a = b; }],\n+\t\t    [have_tls=yes], [have_tls=no], [])\n+      LDFLAGS=\"$save_LDFLAGS\"],\n+      [have_tls=no],\n+      [AC_COMPILE_IFELSE([__thread int foo;], [have_tls=yes], [have_tls=no])]\n+    )])\n+  if test \"$enable_tls $have_tls\" = \"yes yes\"; then\n+    AC_DEFINE(HAVE_TLS, 1,\n+\t      [Define to 1 if the target supports thread-local storage.])\n+  fi])\n+\n+dnl ----------------------------------------------------------------------\n+dnl This whole bit snagged from libgfortran.\n+\n+sinclude(../libtool.m4)\n+dnl The lines below arrange for aclocal not to bring an installed\n+dnl libtool.m4 into aclocal.m4, while still arranging for automake to\n+dnl add a definition of LIBTOOL to Makefile.in.\n+ifelse(,,,[AC_SUBST(LIBTOOL)\n+AC_DEFUN([AM_PROG_LIBTOOL])\n+AC_DEFUN([AC_LIBTOOL_DLOPEN])\n+AC_DEFUN([AC_PROG_LD])\n+])\n+\n+dnl ----------------------------------------------------------------------\n+dnl This whole bit snagged from libstdc++-v3.\n+\n+dnl\n+dnl LIBMUDFLAP_ENABLE\n+dnl    (FEATURE, DEFAULT, HELP-ARG, HELP-STRING)\n+dnl    (FEATURE, DEFAULT, HELP-ARG, HELP-STRING, permit a|b|c)\n+dnl    (FEATURE, DEFAULT, HELP-ARG, HELP-STRING, SHELL-CODE-HANDLER)\n+dnl\n+dnl See docs/html/17_intro/configury.html#enable for documentation.\n+dnl\n+m4_define([LIBMUDFLAP_ENABLE],[dnl\n+m4_define([_g_switch],[--enable-$1])dnl\n+m4_define([_g_help],[AC_HELP_STRING(_g_switch$3,[$4 @<:@default=$2@:>@])])dnl\n+ AC_ARG_ENABLE($1,_g_help,\n+  m4_bmatch([$5],\n+   [^permit ],\n+     [[\n+      case \"$enableval\" in\n+       m4_bpatsubst([$5],[permit ])) ;;\n+       *) AC_MSG_ERROR(Unknown argument to enable/disable $1) ;;\n+          dnl Idea for future:  generate a URL pointing to\n+          dnl \"onlinedocs/configopts.html#whatever\"\n+      esac\n+     ]],\n+   [^$],\n+     [[\n+      case \"$enableval\" in\n+       yes|no) ;;\n+       *) AC_MSG_ERROR(Argument to enable/disable $1 must be yes or no) ;;\n+      esac\n+     ]],\n+   [[$5]]),\n+  [enable_]m4_bpatsubst([$1],-,_)[=][$2])\n+m4_undefine([_g_switch])dnl\n+m4_undefine([_g_help])dnl\n+])"}, {"sha": "95667ef84c1272fcb92803e6f9fde9675865b891", "filename": "libmudflap/aclocal.m4", "status": "modified", "additions": 118, "deletions": 329, "changes": 447, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7544a87f135c194395e525c7ca6123f4fd9f51ea/libmudflap%2Faclocal.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7544a87f135c194395e525c7ca6123f4fd9f51ea/libmudflap%2Faclocal.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libmudflap%2Faclocal.m4?ref=7544a87f135c194395e525c7ca6123f4fd9f51ea", "patch": "@@ -1,7 +1,7 @@\n-# generated automatically by aclocal 1.9.3 -*- Autoconf -*-\n+# generated automatically by aclocal 1.9.5 -*- Autoconf -*-\n \n-# Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004\n-# Free Software Foundation, Inc.\n+# Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004,\n+# 2005  Free Software Foundation, Inc.\n # This file is free software; the Free Software Foundation\n # gives unlimited permission to copy and/or distribute it,\n # with or without modifications, as long as this notice is preserved.\n@@ -11,23 +11,11 @@\n # even the implied warranty of MERCHANTABILITY or FITNESS FOR A\n # PARTICULAR PURPOSE.\n \n-#                                                        -*- Autoconf -*-\n-# Copyright (C) 2002, 2003  Free Software Foundation, Inc.\n-# Generated from amversion.in; do not edit by hand.\n-\n-# This program is free software; you can redistribute it and/or modify\n-# it under the terms of the GNU General Public License as published by\n-# the Free Software Foundation; either version 2, or (at your option)\n-# any later version.\n-\n-# This program is distributed in the hope that it will be useful,\n-# but WITHOUT ANY WARRANTY; without even the implied warranty of\n-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-# GNU General Public License for more details.\n-\n-# You should have received a copy of the GNU General Public License\n-# along with this program; if not, write to the Free Software\n-# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA\n+# Copyright (C) 2002, 2003, 2005  Free Software Foundation, Inc.\n+#\n+# This file is free software; the Free Software Foundation\n+# gives unlimited permission to copy and/or distribute it,\n+# with or without modifications, as long as this notice is preserved.\n \n # AM_AUTOMAKE_VERSION(VERSION)\n # ----------------------------\n@@ -40,26 +28,15 @@ AC_DEFUN([AM_AUTOMAKE_VERSION], [am__api_version=\"1.9\"])\n # Call AM_AUTOMAKE_VERSION so it can be traced.\n # This function is AC_REQUIREd by AC_INIT_AUTOMAKE.\n AC_DEFUN([AM_SET_CURRENT_AUTOMAKE_VERSION],\n-\t [AM_AUTOMAKE_VERSION([1.9.3])])\n-\n-# AM_AUX_DIR_EXPAND\n-\n-# Copyright (C) 2001, 2003 Free Software Foundation, Inc.\n+\t [AM_AUTOMAKE_VERSION([1.9.5])])\n \n-# This program is free software; you can redistribute it and/or modify\n-# it under the terms of the GNU General Public License as published by\n-# the Free Software Foundation; either version 2, or (at your option)\n-# any later version.\n+# AM_AUX_DIR_EXPAND                                         -*- Autoconf -*-\n \n-# This program is distributed in the hope that it will be useful,\n-# but WITHOUT ANY WARRANTY; without even the implied warranty of\n-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-# GNU General Public License for more details.\n-\n-# You should have received a copy of the GNU General Public License\n-# along with this program; if not, write to the Free Software\n-# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA\n-# 02111-1307, USA.\n+# Copyright (C) 2001, 2003, 2005  Free Software Foundation, Inc.\n+#\n+# This file is free software; the Free Software Foundation\n+# gives unlimited permission to copy and/or distribute it,\n+# with or without modifications, as long as this notice is preserved.\n \n # For projects using AC_CONFIG_AUX_DIR([foo]), Autoconf sets\n # $ac_aux_dir to `$srcdir/foo'.  In other projects, it is set to\n@@ -106,26 +83,16 @@ AC_PREREQ([2.50])dnl\n am_aux_dir=`cd $ac_aux_dir && pwd`\n ])\n \n-# AM_CONDITIONAL                                              -*- Autoconf -*-\n-\n-# Copyright (C) 1997, 2000, 2001, 2003, 2004 Free Software Foundation, Inc.\n-\n-# This program is free software; you can redistribute it and/or modify\n-# it under the terms of the GNU General Public License as published by\n-# the Free Software Foundation; either version 2, or (at your option)\n-# any later version.\n-\n-# This program is distributed in the hope that it will be useful,\n-# but WITHOUT ANY WARRANTY; without even the implied warranty of\n-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-# GNU General Public License for more details.\n+# AM_CONDITIONAL                                            -*- Autoconf -*-\n \n-# You should have received a copy of the GNU General Public License\n-# along with this program; if not, write to the Free Software\n-# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA\n-# 02111-1307, USA.\n+# Copyright (C) 1997, 2000, 2001, 2003, 2004, 2005\n+# Free Software Foundation, Inc.\n+#\n+# This file is free software; the Free Software Foundation\n+# gives unlimited permission to copy and/or distribute it,\n+# with or without modifications, as long as this notice is preserved.\n \n-# serial 6\n+# serial 7\n \n # AM_CONDITIONAL(NAME, SHELL-CONDITION)\n # -------------------------------------\n@@ -149,26 +116,15 @@ AC_CONFIG_COMMANDS_PRE(\n Usually this means the macro was only invoked conditionally.]])\n fi])])\n \n-# serial 7\t\t\t\t\t\t-*- Autoconf -*-\n \n-# Copyright (C) 1999, 2000, 2001, 2002, 2003, 2004\n+# Copyright (C) 1999, 2000, 2001, 2002, 2003, 2004, 2005\n # Free Software Foundation, Inc.\n+#\n+# This file is free software; the Free Software Foundation\n+# gives unlimited permission to copy and/or distribute it,\n+# with or without modifications, as long as this notice is preserved.\n \n-# This program is free software; you can redistribute it and/or modify\n-# it under the terms of the GNU General Public License as published by\n-# the Free Software Foundation; either version 2, or (at your option)\n-# any later version.\n-\n-# This program is distributed in the hope that it will be useful,\n-# but WITHOUT ANY WARRANTY; without even the implied warranty of\n-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-# GNU General Public License for more details.\n-\n-# You should have received a copy of the GNU General Public License\n-# along with this program; if not, write to the Free Software\n-# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA\n-# 02111-1307, USA.\n-\n+# serial 8\n \n # There are a few dirty hacks below to avoid letting `AC_PROG_CC' be\n # written in clear, in which case automake, when reading aclocal.m4,\n@@ -177,7 +133,6 @@ fi])])\n # CC etc. in the Makefile, will ask for an AC_PROG_CC use...\n \n \n-\n # _AM_DEPENDENCIES(NAME)\n # ----------------------\n # See how the compiler implements dependency checking.\n@@ -317,27 +272,16 @@ AM_CONDITIONAL([AMDEP], [test \"x$enable_dependency_tracking\" != xno])\n AC_SUBST([AMDEPBACKSLASH])\n ])\n \n-# Generate code to set up dependency tracking.   -*- Autoconf -*-\n-\n-# Copyright (C) 1999, 2000, 2001, 2002, 2003, 2004\n-#   Free Software Foundation, Inc.\n-\n-# This program is free software; you can redistribute it and/or modify\n-# it under the terms of the GNU General Public License as published by\n-# the Free Software Foundation; either version 2, or (at your option)\n-# any later version.\n+# Generate code to set up dependency tracking.              -*- Autoconf -*-\n \n-# This program is distributed in the hope that it will be useful,\n-# but WITHOUT ANY WARRANTY; without even the implied warranty of\n-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-# GNU General Public License for more details.\n-\n-# You should have received a copy of the GNU General Public License\n-# along with this program; if not, write to the Free Software\n-# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA\n-# 02111-1307, USA.\n+# Copyright (C) 1999, 2000, 2001, 2002, 2003, 2004, 2005\n+# Free Software Foundation, Inc.\n+#\n+# This file is free software; the Free Software Foundation\n+# gives unlimited permission to copy and/or distribute it,\n+# with or without modifications, as long as this notice is preserved.\n \n-#serial 2\n+#serial 3\n \n # _AM_OUTPUT_DEPENDENCY_COMMANDS\n # ------------------------------\n@@ -396,30 +340,19 @@ AC_DEFUN([AM_OUTPUT_DEPENDENCY_COMMANDS],\n      [AMDEP_TRUE=\"$AMDEP_TRUE\" ac_aux_dir=\"$ac_aux_dir\"])\n ])\n \n-# Do all the work for Automake.                            -*- Autoconf -*-\n-\n-# This macro actually does too much some checks are only needed if\n-# your package does certain things.  But this isn't really a big deal.\n+# Do all the work for Automake.                             -*- Autoconf -*-\n \n-# Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004\n+# Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005\n # Free Software Foundation, Inc.\n+#\n+# This file is free software; the Free Software Foundation\n+# gives unlimited permission to copy and/or distribute it,\n+# with or without modifications, as long as this notice is preserved.\n \n-# This program is free software; you can redistribute it and/or modify\n-# it under the terms of the GNU General Public License as published by\n-# the Free Software Foundation; either version 2, or (at your option)\n-# any later version.\n-\n-# This program is distributed in the hope that it will be useful,\n-# but WITHOUT ANY WARRANTY; without even the implied warranty of\n-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-# GNU General Public License for more details.\n-\n-# You should have received a copy of the GNU General Public License\n-# along with this program; if not, write to the Free Software\n-# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA\n-# 02111-1307, USA.\n+# serial 12\n \n-# serial 11\n+# This macro actually does too much.  Some checks are only needed if\n+# your package does certain things.  But this isn't really a big deal.\n \n # AM_INIT_AUTOMAKE(PACKAGE, VERSION, [NO-DEFINE])\n # AM_INIT_AUTOMAKE([OPTIONS])\n@@ -521,87 +454,31 @@ for _am_header in $config_headers :; do\n done\n echo \"timestamp for $1\" >`AS_DIRNAME([$1])`/stamp-h[]$_am_stamp_count])\n \n+# Copyright (C) 2001, 2003, 2005  Free Software Foundation, Inc.\n+#\n+# This file is free software; the Free Software Foundation\n+# gives unlimited permission to copy and/or distribute it,\n+# with or without modifications, as long as this notice is preserved.\n+\n # AM_PROG_INSTALL_SH\n # ------------------\n # Define $install_sh.\n-\n-# Copyright (C) 2001, 2003 Free Software Foundation, Inc.\n-\n-# This program is free software; you can redistribute it and/or modify\n-# it under the terms of the GNU General Public License as published by\n-# the Free Software Foundation; either version 2, or (at your option)\n-# any later version.\n-\n-# This program is distributed in the hope that it will be useful,\n-# but WITHOUT ANY WARRANTY; without even the implied warranty of\n-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-# GNU General Public License for more details.\n-\n-# You should have received a copy of the GNU General Public License\n-# along with this program; if not, write to the Free Software\n-# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA\n-# 02111-1307, USA.\n-\n AC_DEFUN([AM_PROG_INSTALL_SH],\n [AC_REQUIRE([AM_AUX_DIR_EXPAND])dnl\n install_sh=${install_sh-\"$am_aux_dir/install-sh\"}\n AC_SUBST(install_sh)])\n \n-#                                                          -*- Autoconf -*-\n-# Copyright (C) 2003  Free Software Foundation, Inc.\n-\n-# This program is free software; you can redistribute it and/or modify\n-# it under the terms of the GNU General Public License as published by\n-# the Free Software Foundation; either version 2, or (at your option)\n-# any later version.\n-\n-# This program is distributed in the hope that it will be useful,\n-# but WITHOUT ANY WARRANTY; without even the implied warranty of\n-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-# GNU General Public License for more details.\n-\n-# You should have received a copy of the GNU General Public License\n-# along with this program; if not, write to the Free Software\n-# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA\n-# 02111-1307, USA.\n-\n-# serial 1\n-\n-# Check whether the underlying file-system supports filenames\n-# with a leading dot.  For instance MS-DOS doesn't.\n-AC_DEFUN([AM_SET_LEADING_DOT],\n-[rm -rf .tst 2>/dev/null\n-mkdir .tst 2>/dev/null\n-if test -d .tst; then\n-  am__leading_dot=.\n-else\n-  am__leading_dot=_\n-fi\n-rmdir .tst 2>/dev/null\n-AC_SUBST([am__leading_dot])])\n-\n-# Add --enable-maintainer-mode option to configure.\n+# Add --enable-maintainer-mode option to configure.         -*- Autoconf -*-\n # From Jim Meyering\n \n-# Copyright (C) 1996, 1998, 2000, 2001, 2002, 2003, 2004\n+# Copyright (C) 1996, 1998, 2000, 2001, 2002, 2003, 2004, 2005\n # Free Software Foundation, Inc.\n+#\n+# This file is free software; the Free Software Foundation\n+# gives unlimited permission to copy and/or distribute it,\n+# with or without modifications, as long as this notice is preserved.\n \n-# This program is free software; you can redistribute it and/or modify\n-# it under the terms of the GNU General Public License as published by\n-# the Free Software Foundation; either version 2, or (at your option)\n-# any later version.\n-\n-# This program is distributed in the hope that it will be useful,\n-# but WITHOUT ANY WARRANTY; without even the implied warranty of\n-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-# GNU General Public License for more details.\n-\n-# You should have received a copy of the GNU General Public License\n-# along with this program; if not, write to the Free Software\n-# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA\n-# 02111-1307, USA.\n-\n-# serial 3\n+# serial 4\n \n AC_DEFUN([AM_MAINTAINER_MODE],\n [AC_MSG_CHECKING([whether to enable maintainer-specific portions of Makefiles])\n@@ -620,26 +497,15 @@ AC_DEFUN([AM_MAINTAINER_MODE],\n \n AU_DEFUN([jm_MAINTAINER_MODE], [AM_MAINTAINER_MODE])\n \n-# Check to see how 'make' treats includes.\t-*- Autoconf -*-\n-\n-# Copyright (C) 2001, 2002, 2003 Free Software Foundation, Inc.\n-\n-# This program is free software; you can redistribute it and/or modify\n-# it under the terms of the GNU General Public License as published by\n-# the Free Software Foundation; either version 2, or (at your option)\n-# any later version.\n-\n-# This program is distributed in the hope that it will be useful,\n-# but WITHOUT ANY WARRANTY; without even the implied warranty of\n-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-# GNU General Public License for more details.\n+# Check to see how 'make' treats includes.\t            -*- Autoconf -*-\n \n-# You should have received a copy of the GNU General Public License\n-# along with this program; if not, write to the Free Software\n-# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA\n-# 02111-1307, USA.\n+# Copyright (C) 2001, 2002, 2003, 2005  Free Software Foundation, Inc.\n+#\n+# This file is free software; the Free Software Foundation\n+# gives unlimited permission to copy and/or distribute it,\n+# with or without modifications, as long as this notice is preserved.\n \n-# serial 2\n+# serial 3\n \n # AM_MAKE_INCLUDE()\n # -----------------\n@@ -683,27 +549,16 @@ AC_MSG_RESULT([$_am_result])\n rm -f confinc confmf\n ])\n \n-#  -*- Autoconf -*-\n-\n-\n-# Copyright (C) 1997, 1999, 2000, 2001, 2003 Free Software Foundation, Inc.\n+# Fake the existence of programs that GNU maintainers use.  -*- Autoconf -*-\n \n-# This program is free software; you can redistribute it and/or modify\n-# it under the terms of the GNU General Public License as published by\n-# the Free Software Foundation; either version 2, or (at your option)\n-# any later version.\n-\n-# This program is distributed in the hope that it will be useful,\n-# but WITHOUT ANY WARRANTY; without even the implied warranty of\n-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-# GNU General Public License for more details.\n-\n-# You should have received a copy of the GNU General Public License\n-# along with this program; if not, write to the Free Software\n-# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA\n-# 02111-1307, USA.\n+# Copyright (C) 1997, 1999, 2000, 2001, 2003, 2005\n+# Free Software Foundation, Inc.\n+#\n+# This file is free software; the Free Software Foundation\n+# gives unlimited permission to copy and/or distribute it,\n+# with or without modifications, as long as this notice is preserved.\n \n-# serial 3\n+# serial 4\n \n # AM_MISSING_PROG(NAME, PROGRAM)\n # ------------------------------\n@@ -729,27 +584,16 @@ else\n fi\n ])\n \n+# Copyright (C) 2003, 2004, 2005  Free Software Foundation, Inc.\n+#\n+# This file is free software; the Free Software Foundation\n+# gives unlimited permission to copy and/or distribute it,\n+# with or without modifications, as long as this notice is preserved.\n+\n # AM_PROG_MKDIR_P\n # ---------------\n # Check whether `mkdir -p' is supported, fallback to mkinstalldirs otherwise.\n-\n-# Copyright (C) 2003, 2004 Free Software Foundation, Inc.\n-\n-# This program is free software; you can redistribute it and/or modify\n-# it under the terms of the GNU General Public License as published by\n-# the Free Software Foundation; either version 2, or (at your option)\n-# any later version.\n-\n-# This program is distributed in the hope that it will be useful,\n-# but WITHOUT ANY WARRANTY; without even the implied warranty of\n-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-# GNU General Public License for more details.\n-\n-# You should have received a copy of the GNU General Public License\n-# along with this program; if not, write to the Free Software\n-# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA\n-# 02111-1307, USA.\n-\n+#\n # Automake 1.8 used `mkdir -m 0755 -p --' to ensure that directories\n # created by `make install' are always world readable, even if the\n # installer happens to have an overly restrictive umask (e.g. 077).\n@@ -803,25 +647,14 @@ else\n fi\n AC_SUBST([mkdir_p])])\n \n-# Copyright (C) 1998, 1999, 2000, 2001, 2003, 2004\n+# Copyright (C) 1998, 1999, 2000, 2001, 2003, 2004, 2005\n # Free Software Foundation, Inc.\n+#\n+# This file is free software; the Free Software Foundation\n+# gives unlimited permission to copy and/or distribute it,\n+# with or without modifications, as long as this notice is preserved.\n \n-# This program is free software; you can redistribute it and/or modify\n-# it under the terms of the GNU General Public License as published by\n-# the Free Software Foundation; either version 2, or (at your option)\n-# any later version.\n-\n-# This program is distributed in the hope that it will be useful,\n-# but WITHOUT ANY WARRANTY; without even the implied warranty of\n-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-# GNU General Public License for more details.\n-\n-# You should have received a copy of the GNU General Public License\n-# along with this program; if not, write to the Free Software\n-# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA\n-# 02111-1307, USA.\n-\n-# serial 4\n+# serial 5\n \n # AM_ENABLE_MULTILIB([MAKEFILE], [REL-TO-TOP-SRCDIR])\n # ---------------------------------------------------\n@@ -872,26 +705,15 @@ multi_basedir=\"$multi_basedir\"\n CONFIG_SHELL=${CONFIG_SHELL-/bin/sh}\n CC=\"$CC\"])])dnl\n \n-# Helper functions for option handling.                    -*- Autoconf -*-\n-\n-# Copyright (C) 2001, 2002, 2003  Free Software Foundation, Inc.\n-\n-# This program is free software; you can redistribute it and/or modify\n-# it under the terms of the GNU General Public License as published by\n-# the Free Software Foundation; either version 2, or (at your option)\n-# any later version.\n+# Helper functions for option handling.                     -*- Autoconf -*-\n \n-# This program is distributed in the hope that it will be useful,\n-# but WITHOUT ANY WARRANTY; without even the implied warranty of\n-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-# GNU General Public License for more details.\n-\n-# You should have received a copy of the GNU General Public License\n-# along with this program; if not, write to the Free Software\n-# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA\n-# 02111-1307, USA.\n+# Copyright (C) 2001, 2002, 2003, 2005  Free Software Foundation, Inc.\n+#\n+# This file is free software; the Free Software Foundation\n+# gives unlimited permission to copy and/or distribute it,\n+# with or without modifications, as long as this notice is preserved.\n \n-# serial 2\n+# serial 3\n \n # _AM_MANGLE_OPTION(NAME)\n # -----------------------\n@@ -916,28 +738,16 @@ AC_DEFUN([_AM_SET_OPTIONS],\n AC_DEFUN([_AM_IF_OPTION],\n [m4_ifset(_AM_MANGLE_OPTION([$1]), [$2], [$3])])\n \n-#\n-# Check to make sure that the build environment is sane.\n-#\n-\n-# Copyright (C) 1996, 1997, 2000, 2001, 2003 Free Software Foundation, Inc.\n+# Check to make sure that the build environment is sane.    -*- Autoconf -*-\n \n-# This program is free software; you can redistribute it and/or modify\n-# it under the terms of the GNU General Public License as published by\n-# the Free Software Foundation; either version 2, or (at your option)\n-# any later version.\n-\n-# This program is distributed in the hope that it will be useful,\n-# but WITHOUT ANY WARRANTY; without even the implied warranty of\n-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-# GNU General Public License for more details.\n-\n-# You should have received a copy of the GNU General Public License\n-# along with this program; if not, write to the Free Software\n-# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA\n-# 02111-1307, USA.\n+# Copyright (C) 1996, 1997, 2000, 2001, 2003, 2005\n+# Free Software Foundation, Inc.\n+#\n+# This file is free software; the Free Software Foundation\n+# gives unlimited permission to copy and/or distribute it,\n+# with or without modifications, as long as this notice is preserved.\n \n-# serial 3\n+# serial 4\n \n # AM_SANITY_CHECK\n # ---------------\n@@ -980,25 +790,14 @@ Check your system clock])\n fi\n AC_MSG_RESULT(yes)])\n \n-# AM_PROG_INSTALL_STRIP\n-\n-# Copyright (C) 2001, 2003 Free Software Foundation, Inc.\n-\n-# This program is free software; you can redistribute it and/or modify\n-# it under the terms of the GNU General Public License as published by\n-# the Free Software Foundation; either version 2, or (at your option)\n-# any later version.\n-\n-# This program is distributed in the hope that it will be useful,\n-# but WITHOUT ANY WARRANTY; without even the implied warranty of\n-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-# GNU General Public License for more details.\n-\n-# You should have received a copy of the GNU General Public License\n-# along with this program; if not, write to the Free Software\n-# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA\n-# 02111-1307, USA.\n+# Copyright (C) 2001, 2003, 2005  Free Software Foundation, Inc.\n+#\n+# This file is free software; the Free Software Foundation\n+# gives unlimited permission to copy and/or distribute it,\n+# with or without modifications, as long as this notice is preserved.\n \n+# AM_PROG_INSTALL_STRIP\n+# ---------------------\n # One issue with vendor `install' (even GNU) is that you can't\n # specify the program used to strip binaries.  This is especially\n # annoying in cross-compiling environments, where the build's strip\n@@ -1021,25 +820,13 @@ AC_SUBST([INSTALL_STRIP_PROGRAM])])\n \n # Check how to create a tarball.                            -*- Autoconf -*-\n \n-# Copyright (C) 2004  Free Software Foundation, Inc.\n-\n-# This program is free software; you can redistribute it and/or modify\n-# it under the terms of the GNU General Public License as published by\n-# the Free Software Foundation; either version 2, or (at your option)\n-# any later version.\n-\n-# This program is distributed in the hope that it will be useful,\n-# but WITHOUT ANY WARRANTY; without even the implied warranty of\n-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-# GNU General Public License for more details.\n-\n-# You should have received a copy of the GNU General Public License\n-# along with this program; if not, write to the Free Software\n-# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA\n-# 02111-1307, USA.\n-\n-# serial 1\n+# Copyright (C) 2004, 2005  Free Software Foundation, Inc.\n+#\n+# This file is free software; the Free Software Foundation\n+# gives unlimited permission to copy and/or distribute it,\n+# with or without modifications, as long as this notice is preserved.\n \n+# serial 2\n \n # _AM_PROG_TAR(FORMAT)\n # --------------------\n@@ -1127,4 +914,6 @@ AC_SUBST([am__tar])\n AC_SUBST([am__untar])\n ]) # _AM_PROG_TAR\n \n-m4_include([../libtool.m4])\n+m4_include([../config/depstand.m4])\n+m4_include([../config/lead-dot.m4])\n+m4_include([acinclude.m4])"}, {"sha": "b14e2e9012188abbaf340164d927eaab2327a136", "filename": "libmudflap/config.h.in", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7544a87f135c194395e525c7ca6123f4fd9f51ea/libmudflap%2Fconfig.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7544a87f135c194395e525c7ca6123f4fd9f51ea/libmudflap%2Fconfig.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libmudflap%2Fconfig.h.in?ref=7544a87f135c194395e525c7ca6123f4fd9f51ea", "patch": "@@ -222,6 +222,9 @@\n /* Define to 1 if you have the <sys/wait.h> header file. */\n #undef HAVE_SYS_WAIT_H\n \n+/* Define to 1 if the target supports thread-local storage. */\n+#undef HAVE_TLS\n+\n /* union semun defined in sys/ipc.h or sys/sem.h */\n #undef HAVE_UNION_SEMUN\n "}, {"sha": "03b3be5d30a41702c7596af7286d116b6cfe8b69", "filename": "libmudflap/configure", "status": "modified", "additions": 132, "deletions": 1, "changes": 133, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7544a87f135c194395e525c7ca6123f4fd9f51ea/libmudflap%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7544a87f135c194395e525c7ca6123f4fd9f51ea/libmudflap%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libmudflap%2Fconfigure?ref=7544a87f135c194395e525c7ca6123f4fd9f51ea", "patch": "@@ -850,6 +850,8 @@ Optional Features:\n   --enable-static=PKGS  build static libraries default=yes\n   --enable-fast-install=PKGS  optimize for fast installation default=yes\n   --disable-libtool-lock  avoid locking (might break parallel builds)\n+  _g_switchUse thread-local storage\n+                          [default=yes]\n \n Optional Packages:\n   --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]\n@@ -5831,7 +5833,7 @@ test x\"$pic_mode\" = xno && libtool_flags=\"$libtool_flags --prefer-non-pic\"\n case $host in\n *-*-irix6*)\n   # Find out which ABI we are using.\n-  echo '#line 5834 \"configure\"' > conftest.$ac_ext\n+  echo '#line 5836 \"configure\"' > conftest.$ac_ext\n   if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n   (eval $ac_compile) 2>&5\n   ac_status=$?\n@@ -6898,6 +6900,135 @@ else\n   multilib_arg=\n fi\n \n+# See if we support thread-local storage.\n+\n+   # Check whether --enable-tls or --disable-tls was given.\n+if test \"${enable_tls+set}\" = set; then\n+  enableval=\"$enable_tls\"\n+\n+      case \"$enableval\" in\n+       yes|no) ;;\n+       *) { { echo \"$as_me:$LINENO: error: Argument to enable/disable tls must be yes or no\" >&5\n+echo \"$as_me: error: Argument to enable/disable tls must be yes or no\" >&2;}\n+   { (exit 1); exit 1; }; } ;;\n+      esac\n+\n+else\n+  enable_tls=yes\n+fi;\n+\n+  echo \"$as_me:$LINENO: checking whether the target supports thread-local storage\" >&5\n+echo $ECHO_N \"checking whether the target supports thread-local storage... $ECHO_C\" >&6\n+if test \"${have_tls+set}\" = set; then\n+  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n+else\n+\n+    if test \"$cross_compiling\" = yes; then\n+  cat >conftest.$ac_ext <<_ACEOF\n+__thread int foo;\n+_ACEOF\n+rm -f conftest.$ac_objext\n+if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n+  (eval $ac_compile) 2>conftest.er1\n+  ac_status=$?\n+  grep -v '^ *+' conftest.er1 >conftest.err\n+  rm -f conftest.er1\n+  cat conftest.err >&5\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); } &&\n+\t { ac_try='test -z \"$ac_c_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; } &&\n+\t { ac_try='test -s conftest.$ac_objext'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; }; then\n+  have_tls=yes\n+else\n+  echo \"$as_me: failed program was:\" >&5\n+sed 's/^/| /' conftest.$ac_ext >&5\n+\n+have_tls=no\n+fi\n+rm -f conftest.err conftest.$ac_objext conftest.$ac_ext\n+\n+else\n+  cat >conftest.$ac_ext <<_ACEOF\n+__thread int a; int b; int main() { return a = b; }\n+_ACEOF\n+rm -f conftest$ac_exeext\n+if { (eval echo \"$as_me:$LINENO: \\\"$ac_link\\\"\") >&5\n+  (eval $ac_link) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); } && { ac_try='./conftest$ac_exeext'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; }; then\n+                    save_LDFLAGS=\"$LDFLAGS\"\n+      LDFLAGS=\"-static $LDFLAGS\"\n+      if test \"$cross_compiling\" = yes; then\n+  { { echo \"$as_me:$LINENO: error: cannot run test program while cross compiling\n+See \\`config.log' for more details.\" >&5\n+echo \"$as_me: error: cannot run test program while cross compiling\n+See \\`config.log' for more details.\" >&2;}\n+   { (exit 1); exit 1; }; }\n+else\n+  cat >conftest.$ac_ext <<_ACEOF\n+__thread int a; int b; int main() { return a = b; }\n+_ACEOF\n+rm -f conftest$ac_exeext\n+if { (eval echo \"$as_me:$LINENO: \\\"$ac_link\\\"\") >&5\n+  (eval $ac_link) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); } && { ac_try='./conftest$ac_exeext'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; }; then\n+  have_tls=yes\n+else\n+  echo \"$as_me: program exited with status $ac_status\" >&5\n+echo \"$as_me: failed program was:\" >&5\n+sed 's/^/| /' conftest.$ac_ext >&5\n+\n+( exit $ac_status )\n+have_tls=no\n+fi\n+rm -f core *.core gmon.out bb.out conftest$ac_exeext conftest.$ac_objext conftest.$ac_ext\n+fi\n+      LDFLAGS=\"$save_LDFLAGS\"\n+else\n+  echo \"$as_me: program exited with status $ac_status\" >&5\n+echo \"$as_me: failed program was:\" >&5\n+sed 's/^/| /' conftest.$ac_ext >&5\n+\n+( exit $ac_status )\n+have_tls=no\n+fi\n+rm -f core *.core gmon.out bb.out conftest$ac_exeext conftest.$ac_objext conftest.$ac_ext\n+fi\n+fi\n+echo \"$as_me:$LINENO: result: $have_tls\" >&5\n+echo \"${ECHO_T}$have_tls\" >&6\n+  if test \"$enable_tls $have_tls\" = \"yes yes\"; then\n+\n+cat >>confdefs.h <<\\_ACEOF\n+#define HAVE_TLS 1\n+_ACEOF\n+\n+  fi\n+\n                               ac_config_files=\"$ac_config_files Makefile testsuite/Makefile testsuite/mfconfig.exp\"\n \n cat >confcache <<\\_ACEOF"}, {"sha": "58a7c739b9118905fc724be587bc6b2d0d8e51b9", "filename": "libmudflap/configure.ac", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7544a87f135c194395e525c7ca6123f4fd9f51ea/libmudflap%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7544a87f135c194395e525c7ca6123f4fd9f51ea/libmudflap%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libmudflap%2Fconfigure.ac?ref=7544a87f135c194395e525c7ca6123f4fd9f51ea", "patch": "@@ -229,5 +229,8 @@ else\n   multilib_arg=\n fi\n \n+# See if we support thread-local storage.\n+LIBMUDFLAP_CHECK_TLS\n+\n AC_CONFIG_FILES([Makefile testsuite/Makefile testsuite/mfconfig.exp])\n AC_OUTPUT"}, {"sha": "9460e443498a911aaf59366d6754322726975edd", "filename": "libmudflap/mf-hooks1.c", "status": "modified", "additions": 16, "deletions": 18, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7544a87f135c194395e525c7ca6123f4fd9f51ea/libmudflap%2Fmf-hooks1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7544a87f135c194395e525c7ca6123f4fd9f51ea/libmudflap%2Fmf-hooks1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libmudflap%2Fmf-hooks1.c?ref=7544a87f135c194395e525c7ca6123f4fd9f51ea", "patch": "@@ -79,7 +79,19 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n void *\n __mf_0fn_malloc (size_t c)\n {\n-  /* fprintf (stderr, \"0fn malloc c=%lu\\n\", c); */\n+  enum foo { BS = 4096, NB=10 };\n+  static char bufs[NB][BS];\n+  static unsigned bufs_used[NB];\n+  unsigned i;\n+\n+  for (i=0; i<NB; i++)\n+    {\n+      if (! bufs_used[i] && c < BS)\n+\t{\n+\t  bufs_used[i] = 1;\n+\t  return & bufs[i][0];\n+\t}\n+    }\n   return NULL;\n }\n #endif\n@@ -114,21 +126,7 @@ WRAPPER(void *, malloc, size_t c)\n void *\n __mf_0fn_calloc (size_t c, size_t n)\n {\n-  enum foo { BS = 4096, NB=10 };\n-  static char bufs[NB][BS];\n-  static unsigned bufs_used[NB];\n-  unsigned i;\n-\n-  /* fprintf (stderr, \"0fn calloc c=%lu n=%lu\\n\", c, n); */\n-  for (i=0; i<NB; i++)\n-    {\n-      if (! bufs_used[i] && (c*n) < BS)\n-\t{\n-\t  bufs_used[i] = 1;\n-\t  return & bufs[i][0];\n-\t}\n-    }\n-  return NULL;\n+  return __mf_0fn_malloc (c * n);\n }\n #endif\n \n@@ -194,7 +192,7 @@ WRAPPER(void *, realloc, void *buf, size_t c)\n   /* Ensure heap wiping doesn't occur during this peculiar\n      unregister/reregister pair.  */\n   LOCKTH ();\n-  __mf_state = reentrant;\n+  __mf_set_state (reentrant);\n   saved_wipe_heap = __mf_opts.wipe_heap;\n   __mf_opts.wipe_heap = 0;\n \n@@ -212,7 +210,7 @@ WRAPPER(void *, realloc, void *buf, size_t c)\n   /* Restore previous setting.  */\n   __mf_opts.wipe_heap = saved_wipe_heap;\n \n-  __mf_state = active;\n+  __mf_set_state (active);\n   UNLOCKTH ();\n \n   return result;"}, {"sha": "f3006b20fe08b1b53a079b9d0a4692a88aa1e8cf", "filename": "libmudflap/mf-hooks3.c", "status": "modified", "additions": 164, "deletions": 444, "changes": 608, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7544a87f135c194395e525c7ca6123f4fd9f51ea/libmudflap%2Fmf-hooks3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7544a87f135c194395e525c7ca6123f4fd9f51ea/libmudflap%2Fmf-hooks3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libmudflap%2Fmf-hooks3.c?ref=7544a87f135c194395e525c7ca6123f4fd9f51ea", "patch": "@@ -1,5 +1,5 @@\n /* Mudflap: narrow-pointer bounds-checking by tree rewriting.\n-   Copyright (C) 2002, 2003, 2004 Free Software Foundation, Inc.\n+   Copyright (C) 2002, 2003, 2004, 2005 Free Software Foundation, Inc.\n    Contributed by Frank Ch. Eigler <fche@redhat.com>\n    and Graydon Hoare <graydon@redhat.com>\n \n@@ -52,14 +52,10 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n #include <string.h>\n #include <stdio.h>\n #include <stdlib.h>\n-#include <sys/types.h>\n-#include <sys/mman.h>\n #include <unistd.h>\n #include <assert.h>\n #include <errno.h>\n-#include <limits.h>\n-#include <sched.h>\n-#include <fcntl.h>\n+#include <stdbool.h>\n \n #include \"mf-runtime.h\"\n #include \"mf-impl.h\"\n@@ -68,276 +64,214 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n #error \"Do not compile this file with -fmudflap!\"\n #endif\n \n-\n-/* Multithreading support hooks.  */\n-\n-\n-\n #ifndef LIBMUDFLAPTH\n #error \"pthreadstuff is to be included only in libmudflapth\"\n #endif\n \n+/* ??? Why isn't this done once in the header files.  */\n+DECLARE(void *, malloc, size_t sz);\n+DECLARE(void, free, void *ptr);\n+DECLARE(int, pthread_create, pthread_t *thr, const pthread_attr_t *attr,\n+\tvoid * (*start) (void *), void *arg);\n \n \n-/* Describe a thread (dead or alive). */\n-struct pthread_info\n-{\n-  short used_p;  /* Is this slot in use?  */\n-  short dead_p;  /* Is this thread dead?  */\n-  pthread_t self; /* The thread id.  */\n-\n-  /* If libmudflapth allocated the stack, store its adjusted base/size.  */\n-  void *stack;\n-  size_t stack_size;\n-  /* The _alloc fields store unadjusted values from the moment of allocation.  */\n-  void *stack_alloc;\n-  size_t stack_size_alloc;\n-\n-  int *thread_errno;\n-  enum __mf_state_enum state;\n-};\n+/* Multithreading support hooks.  */\n \n \n-/* Describe the startup information for a new user thread.  */\n-struct pthread_start_info\n-{\n-  /* The user's thread entry point and argument.  */\n-  void * (*user_fn)(void *);\n-  void *user_arg;\n-\n-  /* Set by user thread when this startup struct may be disposed of.  */\n-  struct pthread_info *thread_info;\n-};\n+#ifndef HAVE_TLS\n+/* We don't have TLS.  Ordinarily we could use pthread keys, but since we're\n+   commandeering malloc/free that presents a few problems.  The first is that\n+   we'll recurse from __mf_get_state to pthread_setspecific to malloc back to\n+   __mf_get_state during thread startup.  This can be solved with clever uses\n+   of a mutex.  The second problem is that thread shutdown is indistinguishable\n+   from thread startup, since libpthread is deallocating our state variable.\n+   I've no good solution for this.\n \n+   Which leaves us to handle this mess by totally by hand.  */\n \n+/* Yes, we want this prime.  If pthread_t is a pointer, it's almost always\n+   page aligned, and if we use a smaller power of 2, this results in \"%N\"\n+   being the worst possible hash -- all threads hash to zero.  */\n+#define LIBMUDFLAPTH_THREADS_MAX 1021\n \n+struct mf_thread_data\n+{\n+  pthread_t self;\n+  unsigned char used_p;\n+  unsigned char state;\n+};\n \n-/* To avoid dynamic memory allocation, use static array to store these\n-   thread description structs.  The second (_idx) array is used as a\n-   simple caching hash table, mapping PTHREAD_HASH(thread) to its\n-   index in __mf_pthread_info[]. */\n+static struct mf_thread_data mf_thread_data[LIBMUDFLAPTH_THREADS_MAX];\n+static pthread_mutex_t mf_thread_data_lock = PTHREAD_MUTEX_INITIALIZER;\n \n-#define LIBMUDFLAPTH_THREADS_MAX 1024\n-static struct pthread_info __mf_pthread_info[LIBMUDFLAPTH_THREADS_MAX];\n-static unsigned __mf_pthread_info_idx[LIBMUDFLAPTH_THREADS_MAX];\n-#define PTHREAD_HASH(p) ((unsigned) (p) % LIBMUDFLAPTH_THREADS_MAX)\n+/* Try to identify the main thread when filling in mf_thread_data.  We\n+   should always be called at least once from the main thread before \n+   any new threads are spawned.  */\n+static int main_seen_p;\n \n+#define PTHREAD_HASH(p) ((unsigned long) (p) % LIBMUDFLAPTH_THREADS_MAX)\n \n-/* Find any old empty entry in __mf_pthread_info; mark it used and\n-   return it.  Return NULL if there are no more available slots.  */\n-struct pthread_info*\n-__mf_allocate_blank_threadinfo (unsigned* idx)\n+static struct mf_thread_data *\n+__mf_find_threadinfo (int alloc)\n {\n-  static unsigned probe = LIBMUDFLAPTH_THREADS_MAX-1;\n-  unsigned probe_at_start = probe;\n-  static pthread_mutex_t mutex =\n-#ifdef PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP\n-    PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP;\n-#else\n-    PTHREAD_MUTEX_INITIALIZER;\n+  pthread_t self = pthread_self ();\n+  unsigned long hash = PTHREAD_HASH (self);\n+  unsigned long rehash;\n+\n+#ifdef __alpha__\n+  /* Alpha has the loosest memory ordering rules of all.  We need a memory\n+     barrier to flush the reorder buffer before considering a *read* of a\n+     shared variable.  Since we're not always taking a lock, we have to do\n+     this by hand.  */\n+  __sync_synchronize ();\n #endif\n-  int rc;\n \n-  rc = pthread_mutex_lock (& mutex);\n-  assert (rc == 0);\n+  rehash = hash;\n+  while (1)\n+    {\n+      if (mf_thread_data[rehash].used_p && mf_thread_data[rehash].self == self)\n+\treturn &mf_thread_data[rehash];\n+\n+      rehash += 7;\n+      if (rehash >= LIBMUDFLAPTH_THREADS_MAX)\n+\trehash -= LIBMUDFLAPTH_THREADS_MAX;\n+      if (rehash == hash)\n+\tbreak;\n+    }\n \n-  /* Look for a blank spot starting one past the last one we found. */\n-  do\n+  if (alloc)\n     {\n-      probe = (probe + 1) % LIBMUDFLAPTH_THREADS_MAX;\n-      struct pthread_info* pi = & __mf_pthread_info [probe];\n-      if (! pi->used_p)\n+      pthread_mutex_lock (&mf_thread_data_lock);\n+\n+      rehash = hash;\n+      while (1)\n \t{\n-\t  /* memset (pi, 0, sizeof (*pi)); */\n-\t  pi->used_p = 1;\n-\t  if (idx != NULL) *idx = probe;\n-\t  /* VERBOSE_TRACE (\"allocated threadinfo slot %u\\n\", probe); */\n-\t  rc = pthread_mutex_unlock (& mutex);\n-\t  assert (rc == 0);\n-\t  return pi;\n+\t  if (!mf_thread_data[rehash].used_p)\n+\t    {\n+\t      mf_thread_data[rehash].self = self;\n+\t      __sync_synchronize ();\n+\t      mf_thread_data[rehash].used_p = 1;\n+\n+\t      pthread_mutex_unlock (&mf_thread_data_lock);\n+\t      return &mf_thread_data[rehash];\n+\t    }\n+\n+\t  rehash += 7;\n+\t  if (rehash >= LIBMUDFLAPTH_THREADS_MAX)\n+\t    rehash -= LIBMUDFLAPTH_THREADS_MAX;\n+\t  if (rehash == hash)\n+\t    break;\n \t}\n+\n+      pthread_mutex_unlock (&mf_thread_data_lock);\n     }\n-  while (probe != probe_at_start);\n \n-  rc = pthread_mutex_unlock (& mutex);\n-  assert (rc == 0);\n   return NULL;\n }\n \n-\n-/* Find and return the pthread_info struct for the current thread.\n-   There might already be one in __mf_pthread_info for this thread, in\n-   which case return it.  There may not be one (if this is a main\n-   thread, an auxiliary -lpthread manager, or an actual user thread\n-   making an early call into libmudflap.  In these cases, create a new\n-   entry.  If not it's not the main thread, put it into reentrant\n-   initial state.\n-\n-   NB: VERBOSE_TRACE type functions are not generally safe to call\n-   from this context, since a new thread might just be \"booting up\",\n-   making printf unsafe to call.\n-*/\n-static struct pthread_info*\n-__mf_find_threadinfo ()\n+enum __mf_state_enum\n+__mf_get_state (void)\n {\n-  pthread_t it = pthread_self ();\n-  unsigned *hash = & __mf_pthread_info_idx [PTHREAD_HASH (it)];\n-  struct pthread_info *result = NULL;\n-  static pthread_t last;\n-  static int main_thread_seen_p;\n-\n-  /* Check out the lookup cache; failing that, do a linear search\n-     around the table.  */\n-  {\n-    struct pthread_info* pi = & __mf_pthread_info [*hash];\n-    unsigned i;\n-\n-    if (pi->used_p && pi->self == it)\n-      result = pi;\n-    else for (i = 0; i < LIBMUDFLAPTH_THREADS_MAX; i++)\n-      {\n-\tstruct pthread_info* pi2 = & __mf_pthread_info [i];\n-\tif (pi2->used_p && pi2->self == it)\n-\t  {\n-\t    *hash = i;\n-\t    result = pi2;\n-\t    break;\n-\t  }\n-      }\n-  }\n-\n-  if (result == NULL)\n-    {\n-      /* Create a __mf_pthread_info record for the main thread.  It's\n-\t different from the auto-recognized worker bees because for\n-\t example we can assume that it's a fully stack/errno-equipped\n-\t thread. */\n-\n-      /* This must be the main thread, until now unseen in libmudflap.  */\n-      unsigned *hash = & __mf_pthread_info_idx [PTHREAD_HASH (it)];\n-      struct pthread_info* pi = __mf_allocate_blank_threadinfo (hash);\n-      assert (pi != NULL);\n-      assert (pi->used_p);\n-      result = pi;\n-      result->self = it;\n-\n-      if (! main_thread_seen_p)\n-\t{\n-\t  result->state = active;\n-\t  /* NB: leave result->thread_errno unset, as main thread's errno\n-\t     has already been registered in __mf_init.  */\n-\t  /* NB: leave stack-related fields unset, to avoid\n-\t     deallocation.  */\n-\t  main_thread_seen_p = 1;\n-\t  /* VERBOSE_TRACE (\"identified self as main thread\\n\"); */\n-\t}\n-      else\n-\t{\n-\t  result->state = reentrant;\n-\t  /* NB: leave result->thread_errno unset, as worker thread's\n-\t     errno is unlikely to be used, and user threads fill them\n-\t     in during __mf_pthread_spawn().  */\n-\t  /* NB: leave stack-related fields unset, leaving pthread_create\n-\t     to fill them in for user threads, leaving them empty for\n-\t     other threads.  */\n-\t  /* VERBOSE_TRACE (\"identified self as new aux or user thread\\n\"); */\n-\t}\n-    }\n-\n-  if (last != it)\n+  struct mf_thread_data *data = __mf_find_threadinfo (0);\n+  if (data)\n+    return data->state;\n+\n+  /* The main thread needs to default to active state, so that the global\n+     constructors are processed in the active state.  Child threads should\n+     be considered to be in the reentrant state, so that we don't wind up\n+     doing Screwy Things inside the thread library; it'll get reset to \n+     active state in __mf_pthread_spawner before user code is invoked.\n+\n+     The trickiest bit here is that the LinuxThreads pthread_manager thread\n+     should *always* be considered to be reentrant, so that none of our \n+     hooks actually do anything.  Why?  Because that thread isn't a real\n+     thread from the point of view of the thread library, and so lots of\n+     stuff isn't initialized, leading to SEGV very quickly.  Even calling\n+     pthread_self is a bit suspect, but it happens to work.  */\n+\n+  if (main_seen_p)\n+    return reentrant;\n+  else\n     {\n-      /*\n-      VERBOSE_TRACE (\"found threadinfo for %u, slot %u\\n\",\n-\t\t     (unsigned) it,\n-\t\t     (unsigned) *hash);\n-      */\n-      last = it;\n+      main_seen_p = 1;\n+      data = __mf_find_threadinfo (1);\n+      data->state = active;\n+      return active;\n     }\n+}\n \n-  assert (result != NULL);\n-  assert (result->self == it);\n-\n-  return result;\n+void\n+__mf_set_state (enum __mf_state_enum new_state)\n+{\n+  struct mf_thread_data *data = __mf_find_threadinfo (1);\n+  data->state = new_state;\n }\n+#endif\n \n+/* The following two functions are used only with __mf_opts.heur_std_data.\n+   We're interested in recording the location of the thread-local errno\n+   variable.\n \n+   Note that this doesn't handle TLS references in general; we have no\n+   visibility into __tls_get_data for when that memory is allocated at\n+   runtime.  Hopefully we get to see the malloc or mmap operation that\n+   eventually allocates the backing store.  */\n \n-/* Return a pointer to the per-thread __mf_state variable.  */\n-enum __mf_state_enum *\n-__mf_state_perthread ()\n+/* Describe the startup information for a new user thread.  */\n+struct mf_thread_start_info\n {\n-  assert (! __mf_starting_p);\n-  return & (__mf_find_threadinfo()->state);\n-}\n+  /* The user's thread entry point and argument.  */\n+  void * (*user_fn)(void *);\n+  void *user_arg;\n+};\n \n \n static void\n __mf_pthread_cleanup (void *arg)\n {\n-  struct pthread_info *pi = arg;\n-\n-  /* XXX: This unregistration is not safe on platforms where distinct\n-     threads share errno (or at least its virtual address).  */\n-  if (pi->thread_errno != NULL)\n-    __mf_unregister (pi->thread_errno, sizeof (int), __MF_TYPE_GUESS);\n-\n-  /* XXX: Only detached threads should designate themselves as dead\n-     here.  Non-detached threads are marked dead after their\n-     personalized pthread_join() call.  */\n-  pi->state = reentrant;\n-  pi->dead_p = 1;\n+  if (__mf_opts.heur_std_data)\n+    __mf_unregister (&errno, sizeof (errno), __MF_TYPE_GUESS);\n \n-  VERBOSE_TRACE (\"thread pi %p exiting\\n\", pi);\n+#ifndef HAVE_TLS\n+  struct mf_thread_data *data = __mf_find_threadinfo (0);\n+  if (data)\n+    data->used_p = 0;\n+#endif\n }\n \n \n static void *\n __mf_pthread_spawner (void *arg)\n {\n-  struct pthread_info *pi = __mf_find_threadinfo ();\n   void *result = NULL;\n \n-  /* Turn off reentrancy indications.  */\n-  assert (pi->state == reentrant);\n-  pi->state = active;\n-\n-  VERBOSE_TRACE (\"new user thread\\n\");\n+#ifndef HAVE_TLS\n+  __mf_set_state (active);\n+#endif\n \n+  /* NB: We could use __MF_TYPE_STATIC here, but we guess that the thread\n+     errno is coming out of some dynamically allocated pool that we already\n+     know of as __MF_TYPE_HEAP. */\n   if (__mf_opts.heur_std_data)\n-    {\n-      pi->thread_errno = & errno;\n-      __mf_register (pi->thread_errno, sizeof (int),\n-\t\t     __MF_TYPE_GUESS, \"errno area (thread)\");\n-      /* NB: we could use __MF_TYPE_STATIC above, but we guess that\n-\t the thread errno is coming out of some dynamically allocated\n-\t pool that we already know of as __MF_TYPE_HEAP. */\n-    }\n+    __mf_register (&errno, sizeof (errno), __MF_TYPE_GUESS,\n+\t\t   \"errno area (thread)\");\n \n   /* We considered using pthread_key_t objects instead of these\n      cleanup stacks, but they were less cooperative with the\n      interposed malloc hooks in libmudflap.  */\n-  pthread_cleanup_push (& __mf_pthread_cleanup, pi);\n-\n-  /* Call user thread */\n-  {\n-    /* Extract given entry point and argument.  */\n-    struct pthread_start_info *psi = arg;\n-    void * (*user_fn)(void *) = psi->user_fn;\n-    void *user_arg = psi->user_arg;\n+  /* ??? The pthread_key_t problem is solved above...  */\n+  pthread_cleanup_push (__mf_pthread_cleanup, NULL);\n \n-    /* Signal the main thread to resume.  */\n-    psi->thread_info = pi;\n+  /* Extract given entry point and argument.  */\n+  struct mf_thread_start_info *psi = arg;\n+  void * (*user_fn)(void *) = psi->user_fn;\n+  void *user_arg = psi->user_arg;\n+  CALL_REAL (free, arg);\n \n-    result = (*user_fn)(user_arg);\n-  }\n+  result = (*user_fn)(user_arg);\n \n   pthread_cleanup_pop (1 /* execute */);\n \n-  /* NB: there is a slight race here.  The pthread_info field will now\n-     say this thread is dead, but it may still be running .. right\n-     here.  We try to check for this possibility using the\n-     pthread_kill test below. */\n-\n   return result;\n }\n \n@@ -357,245 +291,31 @@ __mf_0fn_pthread_create (pthread_t *thr, const pthread_attr_t *attr,\n WRAPPER(int, pthread_create, pthread_t *thr, const pthread_attr_t *attr,\n \t void * (*start) (void *), void *arg)\n {\n-  DECLARE(int, munmap, void *p, size_t l);\n-  DECLARE(void *, mmap, void *p, size_t l, int prot, int flags, int fd, off_t of);\n-  DECLARE(int, pthread_create, pthread_t *thr, const pthread_attr_t *attr,\n-\t  void * (*start) (void *), void *arg);\n-  int result;\n-  pthread_attr_t override_attr;\n-  void *override_stack;\n-  size_t override_stacksize;\n-  void *override_stack_alloc = (void *) 0;\n-  size_t override_stacksize_alloc = 0;\n-  unsigned i;\n+  int result, need_wrapper = 0;\n \n   TRACE (\"pthread_create\\n\");\n \n-  /* Garbage-collect dead threads' stacks.  */\n-  LOCKTH ();\n-  for (i = 0; i < LIBMUDFLAPTH_THREADS_MAX; i++)\n+#ifndef HAVE_TLS\n+  need_wrapper = 1;\n+#endif\n+  need_wrapper |= __mf_opts.heur_std_data != 0;\n+\n+  if (need_wrapper)\n     {\n-      struct pthread_info *pi = & __mf_pthread_info [i];\n-      if (! pi->used_p)\n-\tcontinue;\n-      if (! pi->dead_p)\n-\tcontinue;\n-\n-      /* VERBOSE_TRACE (\"thread %u pi %p stack cleanup deferred (%u)\\n\",\n-\t (unsigned) pi->self, pi, pi->dead_p); */\n-\n-      /* Delay actual deallocation by a few cycles, try to discourage the\n-\t race mentioned at the end of __mf_pthread_spawner().  */\n-      if (pi->dead_p)\n-\tpi->dead_p ++;\n-      if (pi->dead_p >= 10 /* XXX */)\n-\t{\n-\t  if (pi->stack)\n-\t    CALL_REAL (munmap, pi->stack_alloc, pi->stack_size_alloc);\n+      struct mf_thread_start_info *si = CALL_REAL (malloc, sizeof (*si));\n \n-\t  VERBOSE_TRACE (\"slot %u freed, stack %p\\n\", i, pi->stack_alloc);\n-\t  memset (pi, 0, sizeof (*pi));\n+      /* Fill in startup-control fields.  */\n+      si->user_fn = start;\n+      si->user_arg = arg;\n \n-\t  /* One round of garbage collection is enough.  */\n-\t  break;\n-\t}\n+      /* Actually create the thread.  */\n+      result = CALL_REAL (pthread_create, thr, attr, __mf_pthread_spawner, si);\n     }\n-  UNLOCKTH ();\n-\n-  /* Let's allocate a stack for this thread, if one is not already\n-     supplied by the caller.  We don't want to let e.g. the\n-     linuxthreads manager thread do this allocation.  */\n-  if (attr != NULL)\n-    override_attr = *attr;\n   else\n-    pthread_attr_init (& override_attr);\n-\n-  /* Get supplied attributes, if any.  */\n-  /* XXX: consider using POSIX2K attr_getstack() */\n-  if (pthread_attr_getstackaddr (& override_attr, & override_stack) != 0 ||\n-      pthread_attr_getstacksize (& override_attr, & override_stacksize) != 0)\n     {\n-      override_stack = NULL;\n-      override_stacksize = 0;\n+      /* If we're not handling heur_std_data, nothing special to do.  */\n+      result = CALL_REAL (pthread_create, thr, attr, start, arg);\n     }\n \n-  /* Do we need to allocate the new thread's stack?  */\n-  if (__mf_opts.thread_stack && override_stack == NULL)\n-    {\n-      uintptr_t alignment = 256; /* power of two */\n-\n-      /* Perturb the initial stack addresses slightly, to encourage\n-\t threads to have nonconflicting entries in the lookup cache\n-\t for their tracked stack objects.  */\n-      static unsigned perturb = 0;\n-      const unsigned perturb_delta = 32;\n-      const unsigned perturb_count = 16;\n-      perturb += perturb_delta;\n-      if (perturb > perturb_delta*perturb_count) perturb = 0;\n-\n-      /* Use glibc x86 defaults */\n-/* Should have been defined in <limits.h> */\n-#ifndef PTHREAD_STACK_MIN\n-#define PTHREAD_STACK_MIN 65536\n-#endif\n-      override_stacksize = max (PTHREAD_STACK_MIN, __mf_opts.thread_stack * 1024);\n-\n-\n-#if defined(MAP_ANONYMOUS)\n-#define MF_MAP_ANON MAP_ANONYMOUS\n-#elif defined(MAP_ANON)\n-#define MF_MAP_ANON MAP_ANON\n-#endif\n-\n-#ifndef MAP_FAILED\n-#define MAP_FAILED ((void *) -1)\n-#endif\n-\n-#ifdef MF_MAP_ANON\n-      override_stack = CALL_REAL (mmap, NULL, override_stacksize,\n-\t\t\t\t  PROT_READ|PROT_WRITE,\n-\t\t\t\t  MAP_PRIVATE|MF_MAP_ANON,\n-\t\t\t\t  0, 0);\n-#else\n-      /* Try mapping /dev/zero instead.  */\n-      {\n-        static int zerofd = -1;\n-        if (zerofd == -1)\n-          zerofd = open (\"/dev/zero\", O_RDWR);\n-        if (zerofd == -1)\n-          override_stack = MAP_FAILED;\n-        else\n-          override_stack = CALL_REAL (mmap, NULL, override_stacksize,\n-                                      PROT_READ|PROT_WRITE,\n-                                      MAP_PRIVATE, zerofd, 0);\n-      }\n-#endif\n-\n-      if (override_stack == 0 || override_stack == MAP_FAILED)\n-\t{\n-\t  errno = EAGAIN;\n-\t  return -1;\n-\t}\n-\n-      VERBOSE_TRACE (\"thread stack alloc %p size %lu\\n\",\n-\t\t     override_stack, (unsigned long) override_stacksize);\n-\n-      /* Save the original allocated values for later deallocation.  */\n-      override_stack_alloc = override_stack;\n-      override_stacksize_alloc = override_stacksize;\n-\n-      /* The stackaddr pthreads attribute is a candidate stack pointer.\n-\t It must point near the top or the bottom of this buffer, depending\n-\t on whether stack grows downward or upward, and suitably aligned.\n-\t On the x86, it grows down, so we set stackaddr near the top.  */\n-      /* XXX: port logic */\n-      override_stack = (void *)\n-\t(((uintptr_t) override_stack + override_stacksize - alignment - perturb)\n-\t & (~(uintptr_t)(alignment-1)));\n-\n-      /* XXX: consider using POSIX2K attr_setstack() */\n-      if (pthread_attr_setstackaddr (& override_attr, override_stack) != 0 ||\n-\t  pthread_attr_setstacksize (& override_attr,\n-\t\t\t\t     override_stacksize - alignment - perturb) != 0)\n-\t{\n-\t  /* This should not happen.  */\n-\t  CALL_REAL (munmap, override_stack, override_stacksize);\n-\t  errno = EAGAIN;\n-\t  return -1;\n-\t}\n-  }\n-\n-  /* Actually start the child thread.  */\n-  {\n-    struct pthread_start_info psi;\n-    struct pthread_info *pi = NULL;\n-\n-    /* Fill in startup-control fields.  */\n-    psi.user_fn = start;\n-    psi.user_arg = arg;\n-    psi.thread_info = NULL;\n-\n-    /* Actually create the thread.  */\n-    __mf_state = reentrant;\n-    result = CALL_REAL (pthread_create, thr, & override_attr,\n-\t\t\t& __mf_pthread_spawner, (void *) & psi);\n-    __mf_state = active;\n-    /* We also hook pthread_join/pthread_exit to get into reentrant\n-       mode during thread shutdown/cleanup.  */\n-\n-    /* Wait until child thread has progressed far enough into its\n-       __mf_pthread_spawner() call.  */\n-    while (1) /* XXX: timeout? */\n-      {\n-\tvolatile struct pthread_start_info *psip = & psi;\n-\tpi = psip->thread_info;\n-\tif (pi != NULL)\n-\t  break;\n-\tsched_yield ();\n-      }\n-\n-    /* Fill in remaining fields in pthread_info. */\n-    pi->stack = override_stack;\n-    pi->stack_size = override_stacksize;\n-    pi->stack_alloc = override_stack_alloc;\n-    pi->stack_size_alloc = override_stacksize_alloc;\n-    /* XXX: this might be too late for future heuristics that attempt\n-       to use thread stack bounds.  We may need to put the new thread\n-       to sleep. */\n-  }\n-\n-\n-  /* May need to clean up if we created a pthread_attr_t of our own.  */\n-  if (attr == NULL)\n-    pthread_attr_destroy (& override_attr); /* NB: this shouldn't deallocate stack */\n-\n   return result;\n }\n-\n-\n-\n-#if PIC\n-/* A special bootstrap variant. */\n-int\n-__mf_0fn_pthread_join (pthread_t thr, void **rc)\n-{\n-  return -1;\n-}\n-#endif\n-\n-\n-#undef pthread_join\n-WRAPPER(int, pthread_join, pthread_t thr, void **rc)\n-{\n-  DECLARE(int, pthread_join, pthread_t thr, void **rc);\n-  int result;\n-\n-  TRACE (\"pthread_join\\n\");\n-  __mf_state = reentrant;\n-  result = CALL_REAL (pthread_join, thr, rc);\n-  __mf_state = active;\n-\n-  return result;\n-}\n-\n-\n-#if PIC\n-/* A special bootstrap variant. */\n-void\n-__mf_0fn_pthread_exit (void *rc)\n-{\n-}\n-#endif\n-\n-\n-#undef pthread_exit\n-WRAPPER(void, pthread_exit, void *rc)\n-{\n-  DECLARE(void, pthread_exit, void *rc);\n-\n-  TRACE (\"pthread_exit\\n\");\n-  /* __mf_state = reentrant; */\n-  CALL_REAL (pthread_exit, rc);\n-  /* NOTREACHED */\n-  exit (0);  /* Satisfy noreturn attribute of pthread_exit.  */\n-}"}, {"sha": "53c25b392cab7536bb9c508d38c6132acee047d7", "filename": "libmudflap/mf-impl.h", "status": "modified", "additions": 19, "deletions": 8, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7544a87f135c194395e525c7ca6123f4fd9f51ea/libmudflap%2Fmf-impl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7544a87f135c194395e525c7ca6123f4fd9f51ea/libmudflap%2Fmf-impl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libmudflap%2Fmf-impl.h?ref=7544a87f135c194395e525c7ca6123f4fd9f51ea", "patch": "@@ -207,9 +207,7 @@ enum __mf_dynamic_index\n   dyn_munmap, dyn_realloc,\n   dyn_INITRESOLVE,  /* Marker for last init-time resolution. */\n #ifdef LIBMUDFLAPTH\n-  dyn_pthread_create,\n-  dyn_pthread_join,\n-  dyn_pthread_exit\n+  dyn_pthread_create\n #endif\n };\n \n@@ -233,12 +231,25 @@ extern pthread_mutex_t __mf_biglock;\n #define UNLOCKTH() do {} while (0)\n #endif\n \n-#ifdef LIBMUDFLAPTH\n-extern enum __mf_state_enum *__mf_state_perthread ();\n-#define __mf_state (* __mf_state_perthread ())\n+#if defined(LIBMUDFLAPTH) && !defined(HAVE_TLS)\n+extern enum __mf_state_enum __mf_get_state (void);\n+extern void __mf_set_state (enum __mf_state_enum);\n #else\n-extern enum __mf_state_enum __mf_state;\n+# ifdef LIBMUDFLAPTH\n+extern __thread enum __mf_state_enum __mf_state_1;\n+# else\n+extern enum __mf_state_enum __mf_state_1;\n+# endif\n+static inline enum __mf_state_enum __mf_get_state (void)\n+{\n+  return __mf_state_1;\n+}\n+static inline void __mf_set_state (enum __mf_state_enum s)\n+{\n+  __mf_state_1 = s;\n+}\n #endif\n+\n extern int __mf_starting_p;\n extern struct __mf_options __mf_opts;\n \n@@ -362,7 +373,7 @@ ret __mfwrap_ ## fname (__VA_ARGS__)\n   {                                         \\\n     return CALL_BACKUP(fname, __VA_ARGS__); \\\n   }                                         \\\n-  else if (UNLIKELY (__mf_state == reentrant))   \\\n+  else if (UNLIKELY (__mf_get_state () == reentrant))   \\\n   {                                         \\\n     extern unsigned long __mf_reentrancy;   \\\n     __mf_reentrancy ++; \\"}, {"sha": "af584e773d938789abefaf8530b29c98efbb06ac", "filename": "libmudflap/mf-runtime.c", "status": "modified", "additions": 24, "deletions": 19, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7544a87f135c194395e525c7ca6123f4fd9f51ea/libmudflap%2Fmf-runtime.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7544a87f135c194395e525c7ca6123f4fd9f51ea/libmudflap%2Fmf-runtime.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libmudflap%2Fmf-runtime.c?ref=7544a87f135c194395e525c7ca6123f4fd9f51ea", "patch": "@@ -141,20 +141,25 @@ static void mfsplay_tree_rebalance (mfsplay_tree sp);\n #define __MF_VIOL_WATCH 5\n \n /* Protect against recursive calls. */\n-#define BEGIN_RECURSION_PROTECT() do { \\\n-  if (UNLIKELY (__mf_state == reentrant)) { \\\n-    write (2, \"mf: erroneous reentrancy detected in `\", 38); \\\n-    write (2, __PRETTY_FUNCTION__, strlen(__PRETTY_FUNCTION__)); \\\n-    write (2, \"'\\n\", 2); \\\n-    abort (); } \\\n-  __mf_state = reentrant;  \\\n-  } while (0)\n \n-#define END_RECURSION_PROTECT() do { \\\n-  __mf_state = active; \\\n-  } while (0)\n+static void\n+begin_recursion_protect1 (const char *pf)\n+{\n+  if (__mf_get_state () == reentrant)\n+    {\n+      write (2, \"mf: erroneous reentrancy detected in `\", 38);\n+      write (2, pf, strlen(pf));\n+      write (2, \"'\\n\", 2); \\\n+      abort ();\n+    }\n+  __mf_set_state (reentrant);\n+}\n \n+#define BEGIN_RECURSION_PROTECT() \\\n+  begin_recursion_protect1 (__PRETTY_FUNCTION__)\n \n+#define END_RECURSION_PROTECT() \\\n+  __mf_set_state (active)\n \n /* ------------------------------------------------------------------------ */\n /* Required globals.  */\n@@ -169,15 +174,16 @@ unsigned char __mf_lc_shift = LOOKUP_CACHE_SHIFT_DFL;\n #define LOOKUP_CACHE_SIZE (__mf_lc_mask + 1)\n \n struct __mf_options __mf_opts;\n-\n int __mf_starting_p = 1;\n-#ifndef LIBMUDFLAPTH\n-enum __mf_state_enum __mf_state = active;\n+\n+#ifdef LIBMUDFLAPTH\n+#ifdef HAVE_TLS\n+__thread enum __mf_state_enum __mf_state_1 = active;\n+#endif\n #else\n-/* See __mf_state_perthread() in mf-hooks.c. */\n+enum __mf_state_enum __mf_state_1 = active;\n #endif\n \n-\n #ifdef LIBMUDFLAPTH\n pthread_mutex_t __mf_biglock =\n #ifdef PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP\n@@ -196,7 +202,6 @@ pthread_mutex_t __mf_biglock =\n #else\n #define pthread_join NULL\n #endif\n-const void *threads_active_p = (void *) pthread_join;\n #endif\n \n \n@@ -442,7 +447,7 @@ __mf_usage ()\n            \"any of the following options.  Use `-no-OPTION' to disable options.\\n\"\n            \"\\n\",\n #if HAVE_PTHREAD_H\n-           (threads_active_p ? \"multi-threaded \" : \"single-threaded \"),\n+           (pthread_join ? \"multi-threaded \" : \"single-threaded \"),\n #else\n            \"\",\n #endif\n@@ -2211,7 +2216,7 @@ __mf_sigusr1_respond ()\n   if (__mf_sigusr1_received > __mf_sigusr1_handled)\n     {\n       __mf_sigusr1_handled ++;\n-      assert (__mf_state == reentrant);\n+      assert (__mf_get_state () == reentrant);\n       __mfu_report ();\n       handler_installed = 0; /* We may need to re-enable signal; this might be a SysV library. */\n     }"}, {"sha": "a3f386dc8683dce818ec26b42c08da5c5eadc341", "filename": "libmudflap/testsuite/Makefile.in", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7544a87f135c194395e525c7ca6123f4fd9f51ea/libmudflap%2Ftestsuite%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7544a87f135c194395e525c7ca6123f4fd9f51ea/libmudflap%2Ftestsuite%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libmudflap%2Ftestsuite%2FMakefile.in?ref=7544a87f135c194395e525c7ca6123f4fd9f51ea", "patch": "@@ -1,8 +1,8 @@\n-# Makefile.in generated by automake 1.9.3 from Makefile.am.\n+# Makefile.in generated by automake 1.9.5 from Makefile.am.\n # @configure_input@\n \n # Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,\n-# 2003, 2004  Free Software Foundation, Inc.\n+# 2003, 2004, 2005  Free Software Foundation, Inc.\n # This Makefile.in is free software; the Free Software Foundation\n # gives unlimited permission to copy and/or distribute it,\n # with or without modifications, as long as this notice is preserved.\n@@ -40,8 +40,9 @@ subdir = testsuite\n DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in \\\n \t$(srcdir)/mfconfig.exp.in\n ACLOCAL_M4 = $(top_srcdir)/aclocal.m4\n-am__aclocal_m4_deps = $(top_srcdir)/../libtool.m4 \\\n-\t$(top_srcdir)/configure.ac\n+am__aclocal_m4_deps = $(top_srcdir)/../config/depstand.m4 \\\n+\t$(top_srcdir)/../config/lead-dot.m4 $(top_srcdir)/acinclude.m4 \\\n+\t$(top_srcdir)/../libtool.m4 $(top_srcdir)/configure.ac\n am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\\n \t$(ACLOCAL_M4)\n mkinstalldirs = $(SHELL) $(top_srcdir)/../mkinstalldirs"}]}