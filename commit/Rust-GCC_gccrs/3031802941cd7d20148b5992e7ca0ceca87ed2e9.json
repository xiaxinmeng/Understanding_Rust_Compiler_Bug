{"sha": "3031802941cd7d20148b5992e7ca0ceca87ed2e9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzAzMTgwMjk0MWNkN2QyMDE0OGI1OTkyZTdjYTBjZWNhODdlZDJlOQ==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2017-05-05T11:30:49Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2017-05-05T11:30:49Z"}, "message": "Kill per-namespace static_decls.\n\n\t* cp-tree.h (static_decls): Declare.\n\t(wrapup_globals_for_namespace)\n\tdiagnose_inline_vars_for_namespace): Replace with ...\n\t(wrapup_namespace_globals): ... this.\n\t* decl.c (static_decls): Define.\n\t(wrapup_globals_for_namespace)\n\tdiagnose_inline_vars_for_namespace): Replace with ...\n\t(wrapup_namespace_globals): ... this.\n\t(cxx_init_decl_processing): Initialize static_decls.\n\t* decl2.c (c_parse_final_cleanups): Adjust.\n\t* name-lookup.h (cp_binding_level): Remove static_decls member.\n\t* name-lookup.c (add_decl_to_level): Adjust.\n\t(begin_scope): Adjust.\n((--This line, and those below, will be ignored--\n\nM    cp/cp-tree.h\nM    cp/name-lookup.c\nM    cp/name-lookup.h\nM    cp/ChangeLog\nM    cp/decl2.c\nM    cp/decl.c\n\nFrom-SVN: r247633", "tree": {"sha": "0a0daba69572b7e5632109f589365d5c5cce8ab5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0a0daba69572b7e5632109f589365d5c5cce8ab5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3031802941cd7d20148b5992e7ca0ceca87ed2e9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3031802941cd7d20148b5992e7ca0ceca87ed2e9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3031802941cd7d20148b5992e7ca0ceca87ed2e9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3031802941cd7d20148b5992e7ca0ceca87ed2e9/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f71425227e511e736589c74879b2c80dd6717676", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f71425227e511e736589c74879b2c80dd6717676", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f71425227e511e736589c74879b2c80dd6717676"}], "stats": {"total": 110, "additions": 59, "deletions": 51}, "files": [{"sha": "8dd8889ace63a5ad46f4b2685ce972d0790bbb69", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3031802941cd7d20148b5992e7ca0ceca87ed2e9/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3031802941cd7d20148b5992e7ca0ceca87ed2e9/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=3031802941cd7d20148b5992e7ca0ceca87ed2e9", "patch": "@@ -1,3 +1,20 @@\n+2017-05-05  Nathan Sidwell  <nathan@acm.org>\n+\n+\tKill per-namespace static_decls.\n+\t* cp-tree.h (static_decls): Declare.\n+\t(wrapup_globals_for_namespace,\n+\tdiagnose_inline_vars_for_namespace): Replace with ...\n+\t(wrapup_namespace_globals): ... this.\n+\t* decl.c (static_decls): Define.\n+\t(wrapup_globals_for_namespace,\n+\tdiagnose_inline_vars_for_namespace): Replace with ...\n+\t(wrapup_namespace_globals): ... this.\n+\t(cxx_init_decl_processing): Initialize static_decls.\n+\t* decl2.c (c_parse_final_cleanups): Adjust.\n+\t* name-lookup.h (cp_binding_level): Remove static_decls member.\n+\t* name-lookup.c (add_decl_to_level): Adjust.\n+\t(begin_scope): Adjust.\n+\n 2017-05-05  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/71577"}, {"sha": "549c5765d6eddb740b2c2f396e60f889d0da4760", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3031802941cd7d20148b5992e7ca0ceca87ed2e9/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3031802941cd7d20148b5992e7ca0ceca87ed2e9/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=3031802941cd7d20148b5992e7ca0ceca87ed2e9", "patch": "@@ -4908,6 +4908,12 @@ extern int current_class_depth;\n /* An array of all local classes present in this translation unit, in\n    declaration order.  */\n extern GTY(()) vec<tree, va_gc> *local_classes;\n+\n+/* in decl.c */\n+\n+/* An array of static vars & fns.  */\n+extern GTY(()) vec<tree, va_gc> *static_decls;\n+\n \f\n /* Here's where we control how name mangling takes place.  */\n \n@@ -5899,8 +5905,7 @@ extern tree check_default_argument\t\t(tree, tree, tsubst_flags_t);\n typedef int (*walk_namespaces_fn)\t\t(tree, void *);\n extern int walk_namespaces\t\t\t(walk_namespaces_fn,\n \t\t\t\t\t\t void *);\n-extern int wrapup_globals_for_namespace\t\t(tree, void *);\n-extern int diagnose_inline_vars_for_namespace\t(tree, void *);\n+extern int wrapup_namespace_globals\t\t();\n extern tree create_implicit_typedef\t\t(tree, tree);\n extern int local_variable_p\t\t\t(const_tree);\n extern tree register_dtor_fn\t\t\t(tree);"}, {"sha": "a689750e52908175ee9d7330fb6989ac461f723a", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 33, "deletions": 39, "changes": 72, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3031802941cd7d20148b5992e7ca0ceca87ed2e9/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3031802941cd7d20148b5992e7ca0ceca87ed2e9/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=3031802941cd7d20148b5992e7ca0ceca87ed2e9", "patch": "@@ -157,6 +157,9 @@ tree tls_aggregates;\n \n tree integer_two_node;\n \n+/* vector of static decls.  */\n+vec<tree, va_gc> *static_decls;\n+\n /* Used only for jumps to as-yet undefined labels, since jumps to\n    defined labels can have their validity checked immediately.  */\n \n@@ -903,57 +906,45 @@ walk_namespaces (walk_namespaces_fn f, void* data)\n }\n \n /* Call wrapup_globals_declarations for the globals in NAMESPACE.  */\n+/* Diagnose odr-used extern inline variables without definitions\n+   in the current TU.  */\n \n int\n-wrapup_globals_for_namespace (tree name_space, void* data ATTRIBUTE_UNUSED)\n+wrapup_namespace_globals ()\n {\n-  cp_binding_level *level = NAMESPACE_LEVEL (name_space);\n-  vec<tree, va_gc> *statics = level->static_decls;\n-  tree *vec = statics->address ();\n-  int len = statics->length ();\n-\n-  if (warn_unused_function)\n+  if (vec<tree, va_gc> *statics = static_decls)\n     {\n       tree decl;\n       unsigned int i;\n-      FOR_EACH_VEC_SAFE_ELT (statics, i, decl)\n-\tif (TREE_CODE (decl) == FUNCTION_DECL\n-\t    && DECL_INITIAL (decl) == 0\n-\t    && DECL_EXTERNAL (decl)\n-\t    && !TREE_PUBLIC (decl)\n-\t    && !DECL_ARTIFICIAL (decl)\n-\t    && !DECL_FRIEND_PSEUDO_TEMPLATE_INSTANTIATION (decl)\n-\t    && !TREE_NO_WARNING (decl))\n-\t  {\n+      FOR_EACH_VEC_ELT (*statics, i, decl)\n+\t{\n+\t  if (warn_unused_function\n+\t      && TREE_CODE (decl) == FUNCTION_DECL\n+\t      && DECL_INITIAL (decl) == 0\n+\t      && DECL_EXTERNAL (decl)\n+\t      && !TREE_PUBLIC (decl)\n+\t      && !DECL_ARTIFICIAL (decl)\n+\t      && !DECL_FRIEND_PSEUDO_TEMPLATE_INSTANTIATION (decl)\n+\t      && !TREE_NO_WARNING (decl))\n \t    warning_at (DECL_SOURCE_LOCATION (decl),\n \t\t\tOPT_Wunused_function,\n \t\t\t\"%qF declared %<static%> but never defined\", decl);\n-\t    TREE_NO_WARNING (decl) = 1;\n-\t  }\n-    }\n-\n-  /* Write out any globals that need to be output.  */\n-  return wrapup_global_declarations (vec, len);\n-}\n \n-/* Diagnose odr-used extern inline variables without definitions\n-   in the current TU.  */\n-int\n-diagnose_inline_vars_for_namespace (tree name_space, void *)\n-{\n-  cp_binding_level *level = NAMESPACE_LEVEL (name_space);\n-  vec<tree, va_gc> *statics = level->static_decls;\n-  tree decl;\n-  unsigned int i;\n+\t  if (VAR_P (decl)\n+\t      && DECL_EXTERNAL (decl)\n+\t      && DECL_INLINE_VAR_P (decl)\n+\t      && DECL_ODR_USED (decl))\n+\t    error_at (DECL_SOURCE_LOCATION (decl),\n+\t\t      \"odr-used inline variable %qD is not defined\", decl);\n+\t}\n \n-  FOR_EACH_VEC_SAFE_ELT (statics, i, decl)\n-    if (VAR_P (decl)\n-\t&& DECL_EXTERNAL (decl)\n-\t&& DECL_INLINE_VAR_P (decl)\n-\t&& DECL_ODR_USED (decl))\n-      error_at (DECL_SOURCE_LOCATION (decl),\n-\t\t\"odr-used inline variable %qD is not defined\", decl);\n+      /* Clear out the list, so we don't rescan next time.  */\n+      static_decls = NULL;\n \n+      /* Write out any globals that need to be output.  */\n+      return wrapup_global_declarations (statics->address (),\n+\t\t\t\t\t statics->length ());\n+    }\n   return 0;\n }\n \f\n@@ -4097,6 +4088,9 @@ cxx_init_decl_processing (void)\n \n   integer_two_node = build_int_cst (NULL_TREE, 2);\n \n+  /* Guess at the initial static decls size.  */\n+  vec_alloc (static_decls, 500);\n+\n   record_builtin_type (RID_BOOL, \"bool\", boolean_type_node);\n   truthvalue_type_node = boolean_type_node;\n   truthvalue_false_node = boolean_false_node;"}, {"sha": "46959ec77f778837c2ef29edd1f8b4c69ac8c207", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3031802941cd7d20148b5992e7ca0ceca87ed2e9/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3031802941cd7d20148b5992e7ca0ceca87ed2e9/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=3031802941cd7d20148b5992e7ca0ceca87ed2e9", "patch": "@@ -4724,7 +4724,7 @@ c_parse_final_cleanups (void)\n \t    }\n \t}\n \n-      if (walk_namespaces (wrapup_globals_for_namespace, /*data=*/0))\n+      if (wrapup_namespace_globals ())\n \treconsider = true;\n \n       /* Static data members are just like namespace-scope globals.  */\n@@ -4749,8 +4749,6 @@ c_parse_final_cleanups (void)\n     }\n   while (reconsider);\n \n-  walk_namespaces (diagnose_inline_vars_for_namespace, /*data=*/0);\n-\n   lower_var_init ();\n \n   generate_mangling_aliases ();"}, {"sha": "b88fdeb5fbe6d8c7eafc21730a034128ec16be9a", "filename": "gcc/cp/name-lookup.c", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3031802941cd7d20148b5992e7ca0ceca87ed2e9/gcc%2Fcp%2Fname-lookup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3031802941cd7d20148b5992e7ca0ceca87ed2e9/gcc%2Fcp%2Fname-lookup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fname-lookup.c?ref=3031802941cd7d20148b5992e7ca0ceca87ed2e9", "patch": "@@ -94,7 +94,7 @@ add_decl_to_level (tree decl, cp_binding_level *b)\n \t\t&& (!TREE_PUBLIC (decl)\n \t\t    || decl_anon_ns_mem_p (decl)\n \t\t    || DECL_DECLARED_INLINE_P (decl))))\n-\t  vec_safe_push (b->static_decls, decl);\n+\t  vec_safe_push (static_decls, decl);\n     }\n }\n \n@@ -2162,9 +2162,6 @@ begin_scope (scope_kind kind, tree entity)\n \n     case sk_namespace:\n       NAMESPACE_LEVEL (entity) = scope;\n-      vec_alloc (scope->static_decls,\n-\t\t (DECL_NAME (entity) == std_identifier\n-\t\t  || DECL_NAME (entity) == global_identifier) ? 200 : 10);\n       break;\n \n     default:"}, {"sha": "a0b61d398089328b7308e690ddb6d105c62ec3ad", "filename": "gcc/cp/name-lookup.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3031802941cd7d20148b5992e7ca0ceca87ed2e9/gcc%2Fcp%2Fname-lookup.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3031802941cd7d20148b5992e7ca0ceca87ed2e9/gcc%2Fcp%2Fname-lookup.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fname-lookup.h?ref=3031802941cd7d20148b5992e7ca0ceca87ed2e9", "patch": "@@ -191,9 +191,6 @@ struct GTY(()) cp_binding_level {\n   /* A chain of NAMESPACE_DECL nodes.  */\n   tree namespaces;\n \n-  /* An array of static functions and variables (for namespaces only) */\n-  vec<tree, va_gc> *static_decls;\n-\n   /* A list of USING_DECL nodes.  */\n   tree usings;\n "}]}