{"sha": "506bd24a5d7f73fc9e3f3c612bb51477a1c4ad9c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTA2YmQyNGE1ZDdmNzNmYzllM2YzYzYxMmJiNTE0NzdhMWM0YWQ5Yw==", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2020-08-04T05:16:05Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2020-08-04T05:25:02Z"}, "message": "Adjust two_valued_val_range_p for irange API.\n\ngcc/ChangeLog:\n\n\t* vr-values.c (simplify_using_ranges::two_valued_val_range_p):\n\tUse irange API.", "tree": {"sha": "972d6dcf32eb5b1b0dd40e43dd8c9d9add7eed16", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/972d6dcf32eb5b1b0dd40e43dd8c9d9add7eed16"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/506bd24a5d7f73fc9e3f3c612bb51477a1c4ad9c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/506bd24a5d7f73fc9e3f3c612bb51477a1c4ad9c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/506bd24a5d7f73fc9e3f3c612bb51477a1c4ad9c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/506bd24a5d7f73fc9e3f3c612bb51477a1c4ad9c/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "70be5895658d9da5135957bd9af7b14ba4a82a70", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70be5895658d9da5135957bd9af7b14ba4a82a70", "html_url": "https://github.com/Rust-GCC/gccrs/commit/70be5895658d9da5135957bd9af7b14ba4a82a70"}], "stats": {"total": 31, "additions": 9, "deletions": 22}, "files": [{"sha": "2fd4956a2e4cae9ccae988ddb4b7d867a4d87f4c", "filename": "gcc/vr-values.c", "status": "modified", "additions": 9, "deletions": 22, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/506bd24a5d7f73fc9e3f3c612bb51477a1c4ad9c/gcc%2Fvr-values.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/506bd24a5d7f73fc9e3f3c612bb51477a1c4ad9c/gcc%2Fvr-values.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvr-values.c?ref=506bd24a5d7f73fc9e3f3c612bb51477a1c4ad9c", "patch": "@@ -4194,33 +4194,20 @@ simplify_using_ranges::simplify_internal_call_using_ranges\n bool\n simplify_using_ranges::two_valued_val_range_p (tree var, tree *a, tree *b)\n {\n-  const value_range *vr = get_value_range (var);\n-  if (vr->varying_p ()\n-      || vr->undefined_p ()\n-      || TREE_CODE (vr->min ()) != INTEGER_CST\n-      || TREE_CODE (vr->max ()) != INTEGER_CST)\n+  value_range vr = *get_value_range (var);\n+  vr.normalize_symbolics ();\n+  if (vr.varying_p () || vr.undefined_p ())\n     return false;\n \n-  if (vr->kind () == VR_RANGE\n-      && wi::to_wide (vr->max ()) - wi::to_wide (vr->min ()) == 1)\n-    {\n-      *a = vr->min ();\n-      *b = vr->max ();\n-      return true;\n-    }\n-\n-  /* ~[TYPE_MIN + 1, TYPE_MAX - 1] */\n-  if (vr->kind () == VR_ANTI_RANGE\n-      && (wi::to_wide (vr->min ())\n-\t  - wi::to_wide (vrp_val_min (TREE_TYPE (var)))) == 1\n-      && (wi::to_wide (vrp_val_max (TREE_TYPE (var)))\n-\t  - wi::to_wide (vr->max ())) == 1)\n+  if ((vr.num_pairs () == 1 && vr.upper_bound () - vr.lower_bound () == 1)\n+      || (vr.num_pairs () == 2\n+\t  && vr.lower_bound (0) == vr.upper_bound (0)\n+\t  && vr.lower_bound (1) == vr.upper_bound (1)))\n     {\n-      *a = vrp_val_min (TREE_TYPE (var));\n-      *b = vrp_val_max (TREE_TYPE (var));\n+      *a = wide_int_to_tree (TREE_TYPE (var), vr.lower_bound ());\n+      *b = wide_int_to_tree (TREE_TYPE (var), vr.upper_bound ());\n       return true;\n     }\n-\n   return false;\n }\n "}]}