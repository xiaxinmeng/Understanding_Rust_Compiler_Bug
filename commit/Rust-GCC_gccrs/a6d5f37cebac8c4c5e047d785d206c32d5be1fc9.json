{"sha": "a6d5f37cebac8c4c5e047d785d206c32d5be1fc9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTZkNWYzN2NlYmFjOGM0YzVlMDQ3ZDc4NWQyMDZjMzJkNWJlMWZjOQ==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2007-02-28T21:56:41Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2007-02-28T21:56:41Z"}, "message": "re PR middle-end/30364 (Wrong variable ranges due to constant folding)\n\n2007-02-28  Richard Guenther  <rguenther@suse.de>\n\n\tPR middle-end/30364\n\t* fold-const.c (fold_binary): Do not associate expressions\n\twith more than one variable for integer types that do not wrap.\n\n\t* gcc.dg/torture/pr30364-1.c: New testcase.\n\t* gcc.dg/torture/pr30364-2.c: Likewise.\n\t* gcc.dg/torture/pr30364-3.c: Likewise.\n\nFrom-SVN: r122414", "tree": {"sha": "256bfe6ccb786147c33a51a1bcfea95906edd36a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/256bfe6ccb786147c33a51a1bcfea95906edd36a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a6d5f37cebac8c4c5e047d785d206c32d5be1fc9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6d5f37cebac8c4c5e047d785d206c32d5be1fc9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a6d5f37cebac8c4c5e047d785d206c32d5be1fc9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6d5f37cebac8c4c5e047d785d206c32d5be1fc9/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "cfac137674c84791371f8bf56d672891c02bcecf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cfac137674c84791371f8bf56d672891c02bcecf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cfac137674c84791371f8bf56d672891c02bcecf"}], "stats": {"total": 100, "additions": 96, "deletions": 4}, "files": [{"sha": "67d23869fd14a38a728db02dbb3f8c066674b13f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6d5f37cebac8c4c5e047d785d206c32d5be1fc9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6d5f37cebac8c4c5e047d785d206c32d5be1fc9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a6d5f37cebac8c4c5e047d785d206c32d5be1fc9", "patch": "@@ -1,3 +1,9 @@\n+2007-02-28  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR middle-end/30364\n+\t* fold-const.c (fold_binary): Do not associate expressions\n+\twith more than one variable for integer types that do not wrap.\n+\n 2007-02-28  Sandra Loosemore  <sandra@codesourcery.com>\n \n \t* builtins.c (fold_builtin_call_list, fold_builtin_call_valist):"}, {"sha": "c8e2f514c7181e754a079be899ed29e24f5c30b9", "filename": "gcc/fold-const.c", "status": "modified", "additions": 25, "deletions": 4, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6d5f37cebac8c4c5e047d785d206c32d5be1fc9/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6d5f37cebac8c4c5e047d785d206c32d5be1fc9/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=a6d5f37cebac8c4c5e047d785d206c32d5be1fc9", "patch": "@@ -9424,6 +9424,7 @@ fold_binary (enum tree_code code, tree type, tree op0, tree op1)\n \t{\n \t  tree var0, con0, lit0, minus_lit0;\n \t  tree var1, con1, lit1, minus_lit1;\n+\t  bool ok = true;\n \n \t  /* Split both trees into variables, constants, and literals.  Then\n \t     associate each group together, the constants with literals,\n@@ -9434,12 +9435,32 @@ fold_binary (enum tree_code code, tree type, tree op0, tree op1)\n \t  var1 = split_tree (arg1, code, &con1, &lit1, &minus_lit1,\n \t\t\t     code == MINUS_EXPR);\n \n+\t  /* With undefined overflow we can only associate constants\n+\t     with one variable.  */\n+\t  if ((POINTER_TYPE_P (type)\n+\t       || (INTEGRAL_TYPE_P (type) && !TYPE_OVERFLOW_WRAPS (type)))\n+\t      && var0 && var1)\n+\t    {\n+\t      tree tmp0 = var0;\n+\t      tree tmp1 = var1;\n+\n+\t      if (TREE_CODE (tmp0) == NEGATE_EXPR)\n+\t        tmp0 = TREE_OPERAND (tmp0, 0);\n+\t      if (TREE_CODE (tmp1) == NEGATE_EXPR)\n+\t        tmp1 = TREE_OPERAND (tmp1, 0);\n+\t      /* The only case we can still associate with two variables\n+\t\t is if they are the same, modulo negation.  */\n+\t      if (!operand_equal_p (tmp0, tmp1, 0))\n+\t        ok = false;\n+\t    }\n+\n \t  /* Only do something if we found more than two objects.  Otherwise,\n \t     nothing has changed and we risk infinite recursion.  */\n-\t  if (2 < ((var0 != 0) + (var1 != 0)\n-\t\t   + (con0 != 0) + (con1 != 0)\n-\t\t   + (lit0 != 0) + (lit1 != 0)\n-\t\t   + (minus_lit0 != 0) + (minus_lit1 != 0)))\n+\t  if (ok\n+\t      && (2 < ((var0 != 0) + (var1 != 0)\n+\t\t       + (con0 != 0) + (con1 != 0)\n+\t\t       + (lit0 != 0) + (lit1 != 0)\n+\t\t       + (minus_lit0 != 0) + (minus_lit1 != 0))))\n \t    {\n \t      /* Recombine MINUS_EXPR operands by using PLUS_EXPR.  */\n \t      if (code == MINUS_EXPR)"}, {"sha": "f6a9766d11ea9cb0c97ebb3e6a187e2f0b558e33", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6d5f37cebac8c4c5e047d785d206c32d5be1fc9/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6d5f37cebac8c4c5e047d785d206c32d5be1fc9/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a6d5f37cebac8c4c5e047d785d206c32d5be1fc9", "patch": "@@ -1,3 +1,10 @@\n+2007-02-28  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR middle-end/30364\n+\t* gcc.dg/torture/pr30364-1.c: New testcase.\n+\t* gcc.dg/torture/pr30364-2.c: Likewise.\n+\t* gcc.dg/torture/pr30364-3.c: Likewise.\n+\n 2007-02-28  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* gcc.dg/torture/builtin-frexp-1.c: On mips*-*-irix6* and"}, {"sha": "09506c21c1ce9297a8aa0cc2f073cc010c911be2", "filename": "gcc/testsuite/gcc.dg/torture/pr30364-1.c", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6d5f37cebac8c4c5e047d785d206c32d5be1fc9/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr30364-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6d5f37cebac8c4c5e047d785d206c32d5be1fc9/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr30364-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr30364-1.c?ref=a6d5f37cebac8c4c5e047d785d206c32d5be1fc9", "patch": "@@ -0,0 +1,19 @@\n+/* { dg-do run } */\n+\n+extern void abort (void);\n+\n+int f(int a, int b)\n+{\n+  if (a > 0x7FFFFFF0) return 0;\n+  if (b > 0x7FFFFFF0) return 0;\n+\n+  int c = (a - 20) + (b - 20);\n+  return c > 0x7FFFFFF0;\n+}\n+\n+int main()\n+{\n+  if (f (0x7FFFFFF0, 41) != 1)\n+    abort ();\n+  return 0;\n+}"}, {"sha": "20450f55557a59341d7b68943addbf424f8b6bd3", "filename": "gcc/testsuite/gcc.dg/torture/pr30364-2.c", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6d5f37cebac8c4c5e047d785d206c32d5be1fc9/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr30364-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6d5f37cebac8c4c5e047d785d206c32d5be1fc9/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr30364-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr30364-2.c?ref=a6d5f37cebac8c4c5e047d785d206c32d5be1fc9", "patch": "@@ -0,0 +1,19 @@\n+/* { dg-do run } */\n+\n+extern void abort (void);\n+\n+int f(unsigned int a, unsigned int b)\n+{\n+  if (a > 0x7FFFFFF0) return 0;\n+  if (b > 0x7FFFFFF0) return 0;\n+\n+  int c = (a - 20) + (b - 20);\n+  return c > 0x7FFFFFF0;\n+}\n+\n+int main()\n+{\n+  if (f (0x7FFFFFF0, 41) != 1)\n+    abort ();\n+  return 0;\n+}"}, {"sha": "4365679a8e0af6d73322d629d2688d65c65fc3b0", "filename": "gcc/testsuite/gcc.dg/torture/pr30364-3.c", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6d5f37cebac8c4c5e047d785d206c32d5be1fc9/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr30364-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6d5f37cebac8c4c5e047d785d206c32d5be1fc9/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr30364-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr30364-3.c?ref=a6d5f37cebac8c4c5e047d785d206c32d5be1fc9", "patch": "@@ -0,0 +1,20 @@\n+/* { dg-do run } */\n+/* { dg-options \"-fwrapv\" } */\n+\n+extern void abort (void);\n+\n+int f(int a, int b)\n+{\n+  if (a > 0x7FFFFFF0) return 0;\n+  if (b > 0x7FFFFFF0) return 0;\n+\n+  int c = (a - 20) + (b - 20);\n+  return c > 0x7FFFFFF0;\n+}\n+\n+int main()\n+{\n+  if (f (0x7FFFFFF0, 41) != 1)\n+    abort ();\n+  return 0;\n+}"}]}