{"sha": "5035bbfe580b4b077ad71cd751fcac4fa5ca6e5c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTAzNWJiZmU1ODBiNGIwNzdhZDcxY2Q3NTFmY2FjNGZhNWNhNmU1Yw==", "commit": {"author": {"name": "Torbjorn Granlund", "email": "tege@gnu.org", "date": "1994-06-29T00:21:32Z"}, "committer": {"name": "Torbjorn Granlund", "email": "tege@gnu.org", "date": "1994-06-29T00:21:32Z"}, "message": "(smul_highpart_optab, umul_highpart_optab): New variables.\n\n(expand_binop): Handle [us]mul_highpart_optab as commutative.\n(init_optabs): Initialize [us]mul_highpart_optab.\n(expand_binop): Convert OP0 to mode for library calls.\n\nFrom-SVN: r7595", "tree": {"sha": "ba373501a32fa00e4a9459910ee4aafed75fbfc6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ba373501a32fa00e4a9459910ee4aafed75fbfc6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5035bbfe580b4b077ad71cd751fcac4fa5ca6e5c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5035bbfe580b4b077ad71cd751fcac4fa5ca6e5c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5035bbfe580b4b077ad71cd751fcac4fa5ca6e5c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5035bbfe580b4b077ad71cd751fcac4fa5ca6e5c/comments", "author": null, "committer": null, "parents": [{"sha": "dbb5b3cec9e704192a12f4b435cd74c0c5300df3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dbb5b3cec9e704192a12f4b435cd74c0c5300df3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dbb5b3cec9e704192a12f4b435cd74c0c5300df3"}], "stats": {"total": 11, "additions": 10, "deletions": 1}, "files": [{"sha": "df2f8c94ea34b74ed5289d73b117c076525d83bf", "filename": "gcc/optabs.c", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5035bbfe580b4b077ad71cd751fcac4fa5ca6e5c/gcc%2Foptabs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5035bbfe580b4b077ad71cd751fcac4fa5ca6e5c/gcc%2Foptabs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foptabs.c?ref=5035bbfe580b4b077ad71cd751fcac4fa5ca6e5c", "patch": "@@ -42,6 +42,8 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n optab add_optab;\n optab sub_optab;\n optab smul_optab;\n+optab smul_highpart_optab;\n+optab umul_highpart_optab;\n optab smul_widen_optab;\n optab umul_widen_optab;\n optab sdiv_optab;\n@@ -383,7 +385,9 @@ expand_binop (mode, binoptab, op0, op1, target, unsignedp, methods)\n      Also try to make the last operand a constant.  */\n   if (GET_RTX_CLASS (binoptab->code) == 'c'\n       || binoptab == smul_widen_optab\n-      || binoptab == umul_widen_optab)\n+      || binoptab == umul_widen_optab\n+      || binoptab == smul_highpart_optab\n+      || binoptab == umul_highpart_optab)\n     {\n       commutative_op = 1;\n \n@@ -1484,6 +1488,9 @@ expand_binop (mode, binoptab, op0, op1, target, unsignedp, methods)\n \t  op1x = convert_to_mode (word_mode, op1, 1);\n \t}\n \n+      if (GET_MODE (op0) != mode)\n+\top0 = convert_to_mode (mode, op0, unsignedp);\n+\n       /* Pass 1 for NO_QUEUE so we don't lose any increments\n \t if the libcall is cse'd or moved.  */\n       value = emit_library_call_value (binoptab->handlers[(int) mode].libfunc,\n@@ -3727,6 +3734,8 @@ init_optabs ()\n   add_optab = init_optab (PLUS);\n   sub_optab = init_optab (MINUS);\n   smul_optab = init_optab (MULT);\n+  smul_highpart_optab = init_optab (UNKNOWN);\n+  umul_highpart_optab = init_optab (UNKNOWN);\n   smul_widen_optab = init_optab (UNKNOWN);\n   umul_widen_optab = init_optab (UNKNOWN);\n   sdiv_optab = init_optab (DIV);"}]}