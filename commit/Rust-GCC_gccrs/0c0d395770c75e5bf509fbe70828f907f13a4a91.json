{"sha": "0c0d395770c75e5bf509fbe70828f907f13a4a91", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGMwZDM5NTc3MGM3NWU1YmY1MDlmYmU3MDgyOGY5MDdmMTNhNGE5MQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "rdsandiford@googlemail.com", "date": "2011-08-31T21:06:59Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2011-08-31T21:06:59Z"}, "message": "md.texi: Describe the use of match_tests in attribute tests.\n\ngcc/\n\t* doc/md.texi: Describe the use of match_tests in attribute tests.\n\t* rtl.def (MATCH_TEST): Update commentary.\n\t* genattrtab.c (attr_copy_rtx, check_attr_test, clear_struct_flag)\n\t(write_test_expr, walk_attr_value): Handle MATCH_TEST.\n\nFrom-SVN: r178388", "tree": {"sha": "a85157de90f18a976c4a35c69be1bc3cb6be9765", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a85157de90f18a976c4a35c69be1bc3cb6be9765"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0c0d395770c75e5bf509fbe70828f907f13a4a91", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c0d395770c75e5bf509fbe70828f907f13a4a91", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0c0d395770c75e5bf509fbe70828f907f13a4a91", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c0d395770c75e5bf509fbe70828f907f13a4a91/comments", "author": {"login": "rsandifo", "id": 4235983, "node_id": "MDQ6VXNlcjQyMzU5ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/4235983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo", "html_url": "https://github.com/rsandifo", "followers_url": "https://api.github.com/users/rsandifo/followers", "following_url": "https://api.github.com/users/rsandifo/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo/orgs", "repos_url": "https://api.github.com/users/rsandifo/repos", "events_url": "https://api.github.com/users/rsandifo/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "091ace5877b03942e6b71fdf13fa4ac2df8e88cf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/091ace5877b03942e6b71fdf13fa4ac2df8e88cf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/091ace5877b03942e6b71fdf13fa4ac2df8e88cf"}], "stats": {"total": 50, "additions": 47, "deletions": 3}, "files": [{"sha": "1b414b11a06825e84210592ba6e39cac4ac8cb45", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c0d395770c75e5bf509fbe70828f907f13a4a91/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c0d395770c75e5bf509fbe70828f907f13a4a91/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0c0d395770c75e5bf509fbe70828f907f13a4a91", "patch": "@@ -1,3 +1,10 @@\n+2011-08-31  Richard Sandiford  <rdsandiford@googlemail.com>\n+\n+\t* doc/md.texi: Describe the use of match_tests in attribute tests.\n+\t* rtl.def (MATCH_TEST): Update commentary.\n+\t* genattrtab.c (attr_copy_rtx, check_attr_test, clear_struct_flag)\n+\t(write_test_expr, walk_attr_value): Handle MATCH_TEST.\n+\n 2011-08-31  Richard Sandiford  <rdsandiford@googlemail.com>\n \n \t* genattrtab.c (attr_rtx_1): Hash SYMBOL_REFs."}, {"sha": "7fc1a5ee2cc062a49b54e006d588ee8c742491b6", "filename": "gcc/doc/md.texi", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c0d395770c75e5bf509fbe70828f907f13a4a91/gcc%2Fdoc%2Fmd.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c0d395770c75e5bf509fbe70828f907f13a4a91/gcc%2Fdoc%2Fmd.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fmd.texi?ref=0c0d395770c75e5bf509fbe70828f907f13a4a91", "patch": "@@ -7045,6 +7045,30 @@ string).\n \n The @var{constraints} operand is ignored and should be the null string.\n \n+@cindex @code{match_test} and attributes\n+@item (match_test @var{c-expr})\n+The test is true if C expression @var{c-expr} is true.  In non-constant\n+attributes, @var{c-expr} has access to the following variables:\n+\n+@table @var\n+@item insn\n+The rtl instruction under test.\n+@item which_alternative\n+The @code{define_insn} alternative that @var{insn} matches.\n+@xref{Output Statement}.\n+@item operands\n+An array of @var{insn}'s rtl operands.\n+@end table\n+\n+@var{c-expr} behaves like the condition in a C @code{if} statement,\n+so there is no need to explicitly convert the expression into a boolean\n+0 or 1 value.  For example, the following two tests are equivalent:\n+\n+@smallexample\n+(match_test \"x & 2\")\n+(match_test \"(x & 2) != 0\")\n+@end smallexample\n+\n @cindex @code{le} and attributes\n @cindex @code{leu} and attributes\n @cindex @code{lt} and attributes"}, {"sha": "4a4c2a2c8aaa6fd759ad12fc06d941f765f28293", "filename": "gcc/genattrtab.c", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c0d395770c75e5bf509fbe70828f907f13a4a91/gcc%2Fgenattrtab.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c0d395770c75e5bf509fbe70828f907f13a4a91/gcc%2Fgenattrtab.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenattrtab.c?ref=0c0d395770c75e5bf509fbe70828f907f13a4a91", "patch": "@@ -658,6 +658,7 @@ attr_copy_rtx (rtx orig)\n     case CONST_DOUBLE:\n     case CONST_VECTOR:\n     case SYMBOL_REF:\n+    case MATCH_TEST:\n     case CODE_LABEL:\n     case PC:\n     case CC0:\n@@ -841,6 +842,11 @@ check_attr_test (rtx exp, int is_const, int lineno)\n       XEXP (exp, 0) = check_attr_test (XEXP (exp, 0), is_const, lineno);\n       break;\n \n+    case MATCH_TEST:\n+      exp = attr_rtx (MATCH_TEST, XSTR (exp, 0));\n+      ATTR_IND_SIMPLIFIED_P (exp) = 1;\n+      break;\n+\n     case MATCH_OPERAND:\n       if (is_const)\n \tfatal (\"RTL operator \\\"%s\\\" not valid in constant attribute test\",\n@@ -2907,6 +2913,7 @@ clear_struct_flag (rtx x)\n     case CONST_INT:\n     case CONST_DOUBLE:\n     case CONST_VECTOR:\n+    case MATCH_TEST:\n     case SYMBOL_REF:\n     case CODE_LABEL:\n     case PC:\n@@ -3571,6 +3578,12 @@ write_test_expr (rtx exp, unsigned int attrs_cached, int flags)\n       printf (HOST_WIDE_INT_PRINT_DEC, XWINT (exp, 0));\n       break;\n \n+    case MATCH_TEST:\n+      print_c_condition (XSTR (exp, 0));\n+      if (flags & FLG_BITWISE)\n+\tprintf (\" != 0\");\n+      break;\n+\n     /* A random C expression.  */\n     case SYMBOL_REF:\n       print_c_condition (XSTR (exp, 0));\n@@ -3765,6 +3778,7 @@ walk_attr_value (rtx exp)\n       must_extract = 1;\n       return;\n \n+    case MATCH_TEST:\n     case EQ_ATTR_ALT:\n       must_extract = must_constrain = 1;\n       break;"}, {"sha": "dbf320e7a43f67e414fdeecd4bafbe93f614bdaa", "filename": "gcc/rtl.def", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c0d395770c75e5bf509fbe70828f907f13a4a91/gcc%2Frtl.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c0d395770c75e5bf509fbe70828f907f13a4a91/gcc%2Frtl.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.def?ref=0c0d395770c75e5bf509fbe70828f907f13a4a91", "patch": "@@ -819,9 +819,8 @@ DEF_RTL_EXPR(MATCH_PAR_DUP, \"match_par_dup\", \"iE\", RTX_MATCH)\n    the result of the one before it.  */\n DEF_RTL_EXPR(MATCH_CODE, \"match_code\", \"ss\", RTX_MATCH)\n \n-/* Appears only in define_predicate/define_special_predicate\n-    expressions.  The argument is a C expression to be injected at this\n-    point in the predicate formula.  */\n+/* Used to inject a C conditional expression into an .md file.  It can\n+   appear in a predicate definition or an attribute expression.  */\n DEF_RTL_EXPR(MATCH_TEST, \"match_test\", \"s\", RTX_MATCH)\n \n /* Insn (and related) definitions.  */"}]}