{"sha": "c096a329934deeb33448adae4f286813895c8101", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzA5NmEzMjk5MzRkZWViMzM0NDhhZGFlNGYyODY4MTM4OTVjODEwMQ==", "commit": {"author": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2016-11-03T12:08:26Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "ktkachov@gcc.gnu.org", "date": "2016-11-03T12:08:26Z"}, "message": "[rtlanal] Fix WORD_REGISTER_OPERATIONS condition in nonzero_bits\n\n\t* rtlanal.c (nonzero_bits1): Fix WORD_REGISTER_OPERATIONS condition.\n\tMove comments into more natural position.\n\nFrom-SVN: r241815", "tree": {"sha": "b7b35835e3fa2991f5d8770e247d1bf2d30b9091", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b7b35835e3fa2991f5d8770e247d1bf2d30b9091"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c096a329934deeb33448adae4f286813895c8101", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c096a329934deeb33448adae4f286813895c8101", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c096a329934deeb33448adae4f286813895c8101", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c096a329934deeb33448adae4f286813895c8101/comments", "author": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "db64c64e7d150e43721ad00e725d7cb2ccecc7f8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db64c64e7d150e43721ad00e725d7cb2ccecc7f8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/db64c64e7d150e43721ad00e725d7cb2ccecc7f8"}], "stats": {"total": 19, "additions": 12, "deletions": 7}, "files": [{"sha": "22b16c5afa4565eaab35a8638998d233c6aee164", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c096a329934deeb33448adae4f286813895c8101/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c096a329934deeb33448adae4f286813895c8101/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c096a329934deeb33448adae4f286813895c8101", "patch": "@@ -1,3 +1,8 @@\n+2016-11-03  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\t* rtlanal.c (nonzero_bits1): Fix WORD_REGISTER_OPERATIONS condition.\n+\tMove comments into more natural position.\n+\n 2016-11-03  Vineet Gupta  <vgupta@synopsys.com>\n \n \t* config/arc/arc.h (SIZE_TYPE): Define as unsigned int."}, {"sha": "4ebb314013b5a6901e4df050088b1ae93ba5194f", "filename": "gcc/rtlanal.c", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c096a329934deeb33448adae4f286813895c8101/gcc%2Frtlanal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c096a329934deeb33448adae4f286813895c8101/gcc%2Frtlanal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtlanal.c?ref=c096a329934deeb33448adae4f286813895c8101", "patch": "@@ -4568,18 +4568,18 @@ nonzero_bits1 (const_rtx x, machine_mode mode, const_rtx known_x,\n \t\t\t\t\t  known_x, known_mode, known_ret);\n \n #ifdef LOAD_EXTEND_OP\n-\t  /* If this is a typical RISC machine, we only have to worry\n-\t     about the way loads are extended.  */\n-\t  if (WORD_REGISTER_OPERATIONS\n-\t      && ((LOAD_EXTEND_OP (inner_mode) == SIGN_EXTEND\n+          /* On many CISC machines, accessing an object in a wider mode\n+\t     causes the high-order bits to become undefined.  So they are\n+\t     not known to be zero.  */\n+\t  if (!WORD_REGISTER_OPERATIONS\n+\t      /* If this is a typical RISC machine, we only have to worry\n+\t\t about the way loads are extended.  */\n+\t      || ((LOAD_EXTEND_OP (inner_mode) == SIGN_EXTEND\n \t\t     ? val_signbit_known_set_p (inner_mode, nonzero)\n \t\t     : LOAD_EXTEND_OP (inner_mode) != ZERO_EXTEND)\n \t\t   || !MEM_P (SUBREG_REG (x))))\n #endif\n \t    {\n-\t      /* On many CISC machines, accessing an object in a wider mode\n-\t\t causes the high-order bits to become undefined.  So they are\n-\t\t not known to be zero.  */\n \t      if (GET_MODE_PRECISION (GET_MODE (x))\n \t\t  > GET_MODE_PRECISION (inner_mode))\n \t\tnonzero |= (GET_MODE_MASK (GET_MODE (x))"}]}