{"sha": "02ebbe2ff6d86721356236b4906df87163d48f2d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDJlYmJlMmZmNmQ4NjcyMTM1NjIzNmI0OTA2ZGY4NzE2M2Q0OGYyZA==", "commit": {"author": {"name": "Janis Johnson", "email": "janis187@us.ibm.com", "date": "2009-10-06T23:17:07Z"}, "committer": {"name": "Janis Johnson", "email": "janis@gcc.gnu.org", "date": "2009-10-06T23:17:07Z"}, "message": "binary-arith.cc: Fix directive to skip test.\n\n\t* testsuite/decimal/binary-arith.cc: Fix directive to skip test.\n\t* testsuite/decimal/cast_neg.cc: Ditto.\n\t* testsuite/decimal/comparison.cc: Ditto.\n\t* testsuite/decimal/compound-assignment.cc: Ditto.\n\t* testsuite/decimal/compound-assignment-memfunc.cc: Ditto.\n\t* testsuite/decimal/conversion-from-float.cc: Ditto.\n\t* testsuite/decimal/conversion-from-integral.cc: Ditto.\n\t* testsuite/decimal/conversion-to-generic-float.cc: Ditto.\n\t* testsuite/decimal/conversion-to-integral.cc: Ditto.\n\t* testsuite/decimal/ctor.cc: Ditto.\n\t* testsuite/decimal/incdec.cc: Ditto.\n\t* testsuite/decimal/incdec-memfunc.cc: Ditto.\n\t* testsuite/decimal/make-decimal.cc: Ditto.\n\t* testsuite/decimal/mixed-mode_neg.cc: Ditto.\n\t* testsuite/decimal/operator_neg.cc: Ditto.\n\t* testsuite/decimal/unary-arith.cc: Ditto.\n\nFrom-SVN: r152502", "tree": {"sha": "5943fe56bc71ec15729e490db64993eed7ee27f0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5943fe56bc71ec15729e490db64993eed7ee27f0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/02ebbe2ff6d86721356236b4906df87163d48f2d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02ebbe2ff6d86721356236b4906df87163d48f2d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/02ebbe2ff6d86721356236b4906df87163d48f2d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02ebbe2ff6d86721356236b4906df87163d48f2d/comments", "author": null, "committer": null, "parents": [{"sha": "a5617632654b44137aad77e5b12ee36fab854e33", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5617632654b44137aad77e5b12ee36fab854e33", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a5617632654b44137aad77e5b12ee36fab854e33"}], "stats": {"total": 51, "additions": 35, "deletions": 16}, "files": [{"sha": "de805feb57e5f2a295dd10930844e38ac7a94269", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02ebbe2ff6d86721356236b4906df87163d48f2d/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02ebbe2ff6d86721356236b4906df87163d48f2d/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=02ebbe2ff6d86721356236b4906df87163d48f2d", "patch": "@@ -1,3 +1,22 @@\n+2009-10-06  Janis Johnson  <janis187@us.ibm.com>\n+\n+\t* testsuite/decimal/binary-arith.cc: Fix directive to skip test.\n+\t* testsuite/decimal/cast_neg.cc: Ditto.\n+\t* testsuite/decimal/comparison.cc: Ditto.\n+\t* testsuite/decimal/compound-assignment.cc: Ditto.\n+\t* testsuite/decimal/compound-assignment-memfunc.cc: Ditto.\n+\t* testsuite/decimal/conversion-from-float.cc: Ditto.\n+\t* testsuite/decimal/conversion-from-integral.cc: Ditto.\n+\t* testsuite/decimal/conversion-to-generic-float.cc: Ditto.\n+\t* testsuite/decimal/conversion-to-integral.cc: Ditto.\n+\t* testsuite/decimal/ctor.cc: Ditto.\n+\t* testsuite/decimal/incdec.cc: Ditto.\n+\t* testsuite/decimal/incdec-memfunc.cc: Ditto.\n+\t* testsuite/decimal/make-decimal.cc: Ditto.\n+\t* testsuite/decimal/mixed-mode_neg.cc: Ditto.\n+\t* testsuite/decimal/operator_neg.cc: Ditto.\n+\t* testsuite/decimal/unary-arith.cc: Ditto.\n+\n 2009-10-05  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* doc/html/*: Regenerate."}, {"sha": "180bca57167bf7e9b8e599afafd816dc54f672a8", "filename": "libstdc++-v3/testsuite/decimal/binary-arith.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02ebbe2ff6d86721356236b4906df87163d48f2d/libstdc%2B%2B-v3%2Ftestsuite%2Fdecimal%2Fbinary-arith.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02ebbe2ff6d86721356236b4906df87163d48f2d/libstdc%2B%2B-v3%2Ftestsuite%2Fdecimal%2Fbinary-arith.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fdecimal%2Fbinary-arith.cc?ref=02ebbe2ff6d86721356236b4906df87163d48f2d", "patch": "@@ -15,7 +15,7 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n-// { dg-require-effective-target-dfp }\n+// { dg-require-effective-target dfp }\n \n // ISO/IEC TR 24733  3.2.8  Binary arithmetic operators.\n "}, {"sha": "23749ba5e750cd0ebdb23c55c537c737b45cbbc6", "filename": "libstdc++-v3/testsuite/decimal/cast_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02ebbe2ff6d86721356236b4906df87163d48f2d/libstdc%2B%2B-v3%2Ftestsuite%2Fdecimal%2Fcast_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02ebbe2ff6d86721356236b4906df87163d48f2d/libstdc%2B%2B-v3%2Ftestsuite%2Fdecimal%2Fcast_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fdecimal%2Fcast_neg.cc?ref=02ebbe2ff6d86721356236b4906df87163d48f2d", "patch": "@@ -16,7 +16,7 @@\n // <http://www.gnu.org/licenses/>.\n \n // { dg-do compile }\n-// { dg-require-effective-target-dfp }\n+// { dg-require-effective-target dfp }\n \n // ISO/IEC TR 24733 doesn't say explicitly that the conversion from a\n // decimal floating-point type to a generic float type is prohibited but"}, {"sha": "1efa637ac4aacf5ba22daef09de0702e6a0c6e3b", "filename": "libstdc++-v3/testsuite/decimal/comparison.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02ebbe2ff6d86721356236b4906df87163d48f2d/libstdc%2B%2B-v3%2Ftestsuite%2Fdecimal%2Fcomparison.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02ebbe2ff6d86721356236b4906df87163d48f2d/libstdc%2B%2B-v3%2Ftestsuite%2Fdecimal%2Fcomparison.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fdecimal%2Fcomparison.cc?ref=02ebbe2ff6d86721356236b4906df87163d48f2d", "patch": "@@ -15,7 +15,7 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n-// { dg-require-effective-target-dfp }\n+// { dg-require-effective-target dfp }\n \n // ISO/IEC TR 24733  3.2.9  Comparison operators.\n "}, {"sha": "c216faa809543477b6226c623daf8fa68e702c6c", "filename": "libstdc++-v3/testsuite/decimal/compound-assignment-memfunc.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02ebbe2ff6d86721356236b4906df87163d48f2d/libstdc%2B%2B-v3%2Ftestsuite%2Fdecimal%2Fcompound-assignment-memfunc.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02ebbe2ff6d86721356236b4906df87163d48f2d/libstdc%2B%2B-v3%2Ftestsuite%2Fdecimal%2Fcompound-assignment-memfunc.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fdecimal%2Fcompound-assignment-memfunc.cc?ref=02ebbe2ff6d86721356236b4906df87163d48f2d", "patch": "@@ -15,7 +15,7 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n-// { dg-require-effective-target-dfp }\n+// { dg-require-effective-target dfp }\n \n // ISO/IEC TR 24733  3.2.2.6  Compound assignment (decimal32).\n // ISO/IEC TR 24733  3.2.3.6  Compound assignment (decimal64)."}, {"sha": "2a1f4a7218cc4af17cd02ec076a93b9734f90506", "filename": "libstdc++-v3/testsuite/decimal/compound-assignment.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02ebbe2ff6d86721356236b4906df87163d48f2d/libstdc%2B%2B-v3%2Ftestsuite%2Fdecimal%2Fcompound-assignment.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02ebbe2ff6d86721356236b4906df87163d48f2d/libstdc%2B%2B-v3%2Ftestsuite%2Fdecimal%2Fcompound-assignment.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fdecimal%2Fcompound-assignment.cc?ref=02ebbe2ff6d86721356236b4906df87163d48f2d", "patch": "@@ -15,7 +15,7 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n-// { dg-require-effective-target-dfp }\n+// { dg-require-effective-target dfp }\n \n // ISO/IEC TR 24733  3.2.2.6  Compound assignment (decimal32).\n // ISO/IEC TR 24733  3.2.3.6  Compound assignment (decimal64)."}, {"sha": "c1824a827ccb5e4ee1da02eff795ea0556595157", "filename": "libstdc++-v3/testsuite/decimal/conversion-from-float.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02ebbe2ff6d86721356236b4906df87163d48f2d/libstdc%2B%2B-v3%2Ftestsuite%2Fdecimal%2Fconversion-from-float.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02ebbe2ff6d86721356236b4906df87163d48f2d/libstdc%2B%2B-v3%2Ftestsuite%2Fdecimal%2Fconversion-from-float.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fdecimal%2Fconversion-from-float.cc?ref=02ebbe2ff6d86721356236b4906df87163d48f2d", "patch": "@@ -15,7 +15,7 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n-// { dg-require-effective-target-dfp }\n+// { dg-require-effective-target dfp }\n \n // ISO/IEC TR 24733  3.2.2.2  Conversion from floating-point type (decimal32).\n // ISO/IEC TR 24733  3.2.3.2  Conversion from floating-point type (decimal64)."}, {"sha": "78d5eb76a7932d7bb44a7cc04bb888b569050b2a", "filename": "libstdc++-v3/testsuite/decimal/conversion-from-integral.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02ebbe2ff6d86721356236b4906df87163d48f2d/libstdc%2B%2B-v3%2Ftestsuite%2Fdecimal%2Fconversion-from-integral.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02ebbe2ff6d86721356236b4906df87163d48f2d/libstdc%2B%2B-v3%2Ftestsuite%2Fdecimal%2Fconversion-from-integral.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fdecimal%2Fconversion-from-integral.cc?ref=02ebbe2ff6d86721356236b4906df87163d48f2d", "patch": "@@ -15,7 +15,7 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n-// { dg-require-effective-target-dfp }\n+// { dg-require-effective-target dfp }\n \n // ISO/IEC TR 24733  3.2.2.3  Conversion from integral type (decimal32).\n // ISO/IEC TR 24733  3.2.3.3  Conversion from integral type (decimal64)."}, {"sha": "bac0c820ee6fafcc296f9ed90e85c022e06afb20", "filename": "libstdc++-v3/testsuite/decimal/conversion-to-generic-float.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02ebbe2ff6d86721356236b4906df87163d48f2d/libstdc%2B%2B-v3%2Ftestsuite%2Fdecimal%2Fconversion-to-generic-float.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02ebbe2ff6d86721356236b4906df87163d48f2d/libstdc%2B%2B-v3%2Ftestsuite%2Fdecimal%2Fconversion-to-generic-float.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fdecimal%2Fconversion-to-generic-float.cc?ref=02ebbe2ff6d86721356236b4906df87163d48f2d", "patch": "@@ -15,7 +15,7 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n-// { dg-require-effective-target-dfp }\n+// { dg-require-effective-target dfp }\n \n // ISO/IEC TR 24733  3.2.6  Conversion to generic floating-point type.\n "}, {"sha": "9322c1bc78fa80f1a842c966cddf8696c40857f7", "filename": "libstdc++-v3/testsuite/decimal/conversion-to-integral.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02ebbe2ff6d86721356236b4906df87163d48f2d/libstdc%2B%2B-v3%2Ftestsuite%2Fdecimal%2Fconversion-to-integral.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02ebbe2ff6d86721356236b4906df87163d48f2d/libstdc%2B%2B-v3%2Ftestsuite%2Fdecimal%2Fconversion-to-integral.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fdecimal%2Fconversion-to-integral.cc?ref=02ebbe2ff6d86721356236b4906df87163d48f2d", "patch": "@@ -15,7 +15,7 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n-// { dg-require-effective-target-dfp }\n+// { dg-require-effective-target dfp }\n \n // ISO/IEC TR 24733  3.2.2.4  Conversion to integral type (decimal32).\n // ISO/IEC TR 24733  3.2.3.4  Conversion to integral type (decimal64)."}, {"sha": "84e04ade691e0399758b828e887508e372beb6e9", "filename": "libstdc++-v3/testsuite/decimal/ctor.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02ebbe2ff6d86721356236b4906df87163d48f2d/libstdc%2B%2B-v3%2Ftestsuite%2Fdecimal%2Fctor.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02ebbe2ff6d86721356236b4906df87163d48f2d/libstdc%2B%2B-v3%2Ftestsuite%2Fdecimal%2Fctor.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fdecimal%2Fctor.cc?ref=02ebbe2ff6d86721356236b4906df87163d48f2d", "patch": "@@ -15,7 +15,7 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n-// { dg-require-effective-target-dfp }\n+// { dg-require-effective-target dfp }\n \n // ISO/IEC TR 24733  3.2.2.1  Construct/copy/destroy (decimal32).\n // ISO/IEC TR 24733  3.2.3.1  Construct/copy/destroy (decimal64)."}, {"sha": "f2d1178a6f1a527037470ef5948ffb314697f229", "filename": "libstdc++-v3/testsuite/decimal/incdec-memfunc.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02ebbe2ff6d86721356236b4906df87163d48f2d/libstdc%2B%2B-v3%2Ftestsuite%2Fdecimal%2Fincdec-memfunc.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02ebbe2ff6d86721356236b4906df87163d48f2d/libstdc%2B%2B-v3%2Ftestsuite%2Fdecimal%2Fincdec-memfunc.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fdecimal%2Fincdec-memfunc.cc?ref=02ebbe2ff6d86721356236b4906df87163d48f2d", "patch": "@@ -15,7 +15,7 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n-// { dg-require-effective-target-dfp }\n+// { dg-require-effective-target dfp }\n \n // ISO/IEC TR 24733  3.2.2.5  Increment and decrement operators (decimal32).\n // ISO/IEC TR 24733  3.2.3.5  Increment and decrement operators (decimal64)."}, {"sha": "45211b1de216420e9e1aaa533a7354f4bb8621f8", "filename": "libstdc++-v3/testsuite/decimal/incdec.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02ebbe2ff6d86721356236b4906df87163d48f2d/libstdc%2B%2B-v3%2Ftestsuite%2Fdecimal%2Fincdec.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02ebbe2ff6d86721356236b4906df87163d48f2d/libstdc%2B%2B-v3%2Ftestsuite%2Fdecimal%2Fincdec.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fdecimal%2Fincdec.cc?ref=02ebbe2ff6d86721356236b4906df87163d48f2d", "patch": "@@ -15,7 +15,7 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n-// { dg-require-effective-target-dfp }\n+// { dg-require-effective-target dfp }\n \n // ISO/IEC TR 24733  3.2.2.5  Increment and decrement operators (decimal32).\n // ISO/IEC TR 24733  3.2.3.5  Increment and decrement operators (decimal64)."}, {"sha": "be4fa4632addd5e68ea9b9d7e366f5ef5454943a", "filename": "libstdc++-v3/testsuite/decimal/make-decimal.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02ebbe2ff6d86721356236b4906df87163d48f2d/libstdc%2B%2B-v3%2Ftestsuite%2Fdecimal%2Fmake-decimal.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02ebbe2ff6d86721356236b4906df87163d48f2d/libstdc%2B%2B-v3%2Ftestsuite%2Fdecimal%2Fmake-decimal.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fdecimal%2Fmake-decimal.cc?ref=02ebbe2ff6d86721356236b4906df87163d48f2d", "patch": "@@ -15,7 +15,7 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n-// { dg-require-effective-target-dfp }\n+// { dg-require-effective-target dfp }\n \n // ISO/IEC TR 24733  3.2.5  Initialization from coefficient and exponent.\n "}, {"sha": "7f9da43ed43eb5bf0c8fa1478653a793092bc361", "filename": "libstdc++-v3/testsuite/decimal/mixed-mode_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02ebbe2ff6d86721356236b4906df87163d48f2d/libstdc%2B%2B-v3%2Ftestsuite%2Fdecimal%2Fmixed-mode_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02ebbe2ff6d86721356236b4906df87163d48f2d/libstdc%2B%2B-v3%2Ftestsuite%2Fdecimal%2Fmixed-mode_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fdecimal%2Fmixed-mode_neg.cc?ref=02ebbe2ff6d86721356236b4906df87163d48f2d", "patch": "@@ -16,7 +16,7 @@\n // <http://www.gnu.org/licenses/>.\n \n // { dg-do compile }\n-// { dg-require-effective-target-dfp }\n+// { dg-require-effective-target dfp }\n \n // Test that binary operators do not accept mixed decimal and generic\n // floating-point operands.  This isn't explicity prohibited in"}, {"sha": "fff81d1c06f5e8e73e8b1f9fd24eb9ab826c97e2", "filename": "libstdc++-v3/testsuite/decimal/operator_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02ebbe2ff6d86721356236b4906df87163d48f2d/libstdc%2B%2B-v3%2Ftestsuite%2Fdecimal%2Foperator_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02ebbe2ff6d86721356236b4906df87163d48f2d/libstdc%2B%2B-v3%2Ftestsuite%2Fdecimal%2Foperator_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fdecimal%2Foperator_neg.cc?ref=02ebbe2ff6d86721356236b4906df87163d48f2d", "patch": "@@ -16,7 +16,7 @@\n // <http://www.gnu.org/licenses/>.\n \n // { dg-do compile }\n-// { dg-require-effective-target-dfp }\n+// { dg-require-effective-target dfp }\n \n // Test that C++ binary operators that are restricted to integer operands\n // do not accept decimal float operands."}, {"sha": "d32b98d0d518316e5a24cc00cb8ae11841bb1649", "filename": "libstdc++-v3/testsuite/decimal/unary-arith.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02ebbe2ff6d86721356236b4906df87163d48f2d/libstdc%2B%2B-v3%2Ftestsuite%2Fdecimal%2Funary-arith.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02ebbe2ff6d86721356236b4906df87163d48f2d/libstdc%2B%2B-v3%2Ftestsuite%2Fdecimal%2Funary-arith.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fdecimal%2Funary-arith.cc?ref=02ebbe2ff6d86721356236b4906df87163d48f2d", "patch": "@@ -15,7 +15,7 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n-// { dg-require-effective-target-dfp }\n+// { dg-require-effective-target dfp }\n \n // ISO/IEC TR 24733  3.2.7  Unary arithmetic operators.\n "}]}