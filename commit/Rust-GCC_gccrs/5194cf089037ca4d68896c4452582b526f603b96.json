{"sha": "5194cf089037ca4d68896c4452582b526f603b96", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTE5NGNmMDg5MDM3Y2E0ZDY4ODk2YzQ0NTI1ODJiNTI2ZjYwM2I5Ng==", "commit": {"author": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2000-03-08T23:44:29Z"}, "committer": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2000-03-08T23:44:29Z"}, "message": "hashtab.c: Remove debugging variables (all_searches, all_collisions, all_expansions).\n\n\t* hashtab.c: Remove debugging variables (all_searches,\n\tall_collisions, all_expansions). Delete\n\tall_hash_table_collisions.\n\t(create_hash_table, delete_hash_table, empty_hash_table,\n\tfind_hash_table_entry, remove_element_from_hash_table_entry,\n\tclear_hash_table_slot, traverse_hash_table, hash_table_size,\n\thash_table_elements_number, hash_table_collisions): Rename to:\n\thtab_create, htab_delete, htab_empty, htab_find_slot,\n\thtab_remove_elt, htab_clear_slot, htab_traverse, htab_size,\n\thtab_elements, htab_collisions.\n\t(htab_find): New function, handles common case where you don't\n\tplan to add or delete an entry.\n\t(htab_expand): Don't create a whole new table, just a new\n\tentry vector.\n\t(htab_find_slot): Simplify logic.\n\n\t* hashtab.h (hash_table_t): Rename to htab_t.\n\t(struct hash_table): Rename to struct htab.  Shorten element\n\tnames.  Reorder elements by size.\n\t(htab_hash, htab_eq, htab_trav): New typedefs for the callback\n\tfunction pointers.\n\t(hash_table_entry_t): Discard; just use void * for element\n\ttype.\n\nFrom-SVN: r32437", "tree": {"sha": "6ece5cb52df1c25d061be01b92e2ce0ecdf35f8d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6ece5cb52df1c25d061be01b92e2ce0ecdf35f8d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5194cf089037ca4d68896c4452582b526f603b96", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5194cf089037ca4d68896c4452582b526f603b96", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5194cf089037ca4d68896c4452582b526f603b96", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5194cf089037ca4d68896c4452582b526f603b96/comments", "author": null, "committer": null, "parents": [{"sha": "8ebb00d547c9267af25015ef737ff393287eb36b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ebb00d547c9267af25015ef737ff393287eb36b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8ebb00d547c9267af25015ef737ff393287eb36b"}], "stats": {"total": 605, "additions": 329, "deletions": 276}, "files": [{"sha": "5ab66bcba7a844cf93a43aa9d82e0f6d18614c0f", "filename": "include/ChangeLog", "status": "modified", "additions": 27, "deletions": 17, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5194cf089037ca4d68896c4452582b526f603b96/include%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5194cf089037ca4d68896c4452582b526f603b96/include%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2FChangeLog?ref=5194cf089037ca4d68896c4452582b526f603b96", "patch": "@@ -1,3 +1,13 @@\n+2000-03-08  Zack Weinberg  <zack@wolery.cumb.org>\n+\n+\t* hashtab.h (hash_table_t): Rename to htab_t.\n+\t(struct hash_table): Rename to struct htab.  Shorten element\n+\tnames.  Reorder elements by size.\n+\t(htab_hash, htab_eq, htab_trav): New typedefs for the callback\n+\tfunction pointers.\n+\t(hash_table_entry_t): Discard; just use void * for element\n+\ttype.\n+\n Sat Jan  1 19:06:52 2000  Hans-Peter Nilsson  <hp@bitrange.com>\n \n \t* symcat.h (STRINGX) [!__STDC__ || ALMOST_STDC]: Change \"?\" to \"s\"\n@@ -25,10 +35,10 @@ Sat Jan  1 19:06:52 2000  Hans-Peter Nilsson  <hp@bitrange.com>\n \t(asprintf, vasprintf): Provide declarations.\n \n Wed Nov 10 12:43:21 1999  Philippe De Muyter  <phdm@macqel.be>\n-                          Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\t\t\t  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* ansidecl.h: Define and test `GCC_VERSION', not `HAVE_GCC_VERSION'.\n-\t\n+\n 1999-10-23 08:51 -0700  Zack Weinberg  <zack@bitmover.com>\n \n \t* hashtab.h: Give hash_table_t a struct tag.  Add prototypes\n@@ -43,7 +53,7 @@ Fri Oct 15 01:47:51 1999  Vladimir Makarov  <vmakarov@loony.cygnus.com>\n \n \t* ansidecl.h (HAVE_GCC_VERSION): New macro.  Use it instead of\n \texplicitly testing __GNUC__ and __GNUC_MINOR__.\n-\t\n+\n \t(ATTRIBUTE_PRINTF): Use `__format__', not `format'.\n \n 1999-09-25  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n@@ -96,20 +106,20 @@ Mon Dec 14 09:53:31 1998  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \t* demangle.h: Don't check IN_GCC anymore.\n \t* splay-tree.h: Likewise.\n \n-Tue Dec  8 00:30:31 1998  Elena Zannoni  <ezannoni@kwikemart.cygnus.com> \n+Tue Dec  8 00:30:31 1998  Elena Zannoni  <ezannoni@kwikemart.cygnus.com>\n \n-        * demangle.h: (DMGL_EDG): new macro for Kuck and Associates\n-        (DMGL_STYLE_MASK): modify to include Kuck and Assoc style\n-        (demangling_styles): add new edg_demangling style\n-        (EDG_DEMANGLING_STYLE_STRING): new macro\n-        (EDG_DEMANGLING): new macro\n+\t* demangle.h: (DMGL_EDG): new macro for Kuck and Associates\n+\t(DMGL_STYLE_MASK): modify to include Kuck and Assoc style\n+\t(demangling_styles): add new edg_demangling style\n+\t(EDG_DEMANGLING_STYLE_STRING): new macro\n+\t(EDG_DEMANGLING): new macro\n \n-        * demangle.h (DMGL_HP): new macro, for HP/aCC compiler.\n-        (DMGL_STYLE_MASK): modify to include new HP's style.\n-        (demangling_styles): add new hp_demangling value.\n-        (HP_DEMANGLING_STYLE_STRING): new macro.\n-        (ARM_DEMANGLING): coerce to int.\n-        (HP_DEMANGLING): new macro.\n+\t* demangle.h (DMGL_HP): new macro, for HP/aCC compiler.\n+\t(DMGL_STYLE_MASK): modify to include new HP's style.\n+\t(demangling_styles): add new hp_demangling value.\n+\t(HP_DEMANGLING_STYLE_STRING): new macro.\n+\t(ARM_DEMANGLING): coerce to int.\n+\t(HP_DEMANGLING): new macro.\n \n Fri Nov 20 13:14:00 1998  Andrew Cagney  <cagney@b1.cygnus.com>\n \n@@ -806,8 +816,8 @@ Thu Apr 28 19:06:50 1994  Ken Raeburn  (raeburn@cujo.cygnus.com)\n \n Fri Apr  1 00:38:17 1994  Jim Wilson  (wilson@mole.gnu.ai.mit.edu)\n \n-        * obstack.h: Delete use of IN_GCC to control whether\n-        stddef.h or gstddef.h is included.\n+\t* obstack.h: Delete use of IN_GCC to control whether\n+\tstddef.h or gstddef.h is included.\n \n Tue Mar 22 13:06:02 1994  Ian Lance Taylor  (ian@tweedledumb.cygnus.com)\n "}, {"sha": "f17572af86316932b4c8d656b59610ce586703fd", "filename": "include/hashtab.h", "status": "modified", "additions": 44, "deletions": 41, "changes": 85, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5194cf089037ca4d68896c4452582b526f603b96/include%2Fhashtab.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5194cf089037ca4d68896c4452582b526f603b96/include%2Fhashtab.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2Fhashtab.h?ref=5194cf089037ca4d68896c4452582b526f603b96", "patch": "@@ -38,69 +38,72 @@ extern \"C\" {\n \n #include <ansidecl.h>\n \n-/* The hash table element is represented by the following type. */\n+/* Callback function pointer types.  */\n \n-typedef const void *hash_table_entry_t;\n+/* Calculate hash of a table entry.  */\n+typedef unsigned int (*htab_hash) PARAMS ((const void *));\n+\n+/* Compare a table entry with a possible entry.  The entry already in\n+   the table always comes first.  */\n+typedef int (*htab_eq) PARAMS ((const void *, const void *));\n+\n+/* Function called by htab_traverse for each live element.  The first\n+   arg is the element, the second arg is the auxiliary pointer handed\n+   to htab_traverse.  Return 1 to continue scan, 0 to stop.  */\n+typedef int (*htab_trav) PARAMS ((void *, void *));\n \n /* Hash tables are of the following type.  The structure\n    (implementation) of this type is not needed for using the hash\n    tables.  All work with hash table should be executed only through\n    functions mentioned below. */\n \n-typedef struct hash_table\n+struct htab\n {\n+  /* Pointer to hash function.  */\n+  htab_hash hash_f;\n+\n+  /* Pointer to comparison function. */\n+  htab_eq eq_f;\n+\n+  /* Table itself */\n+  void **entries;\n+\n   /* Current size (in entries) of the hash table */\n   size_t size;\n+\n   /* Current number of elements including also deleted elements */\n-  size_t number_of_elements;\n+  size_t n_elements;\n+\n   /* Current number of deleted elements in the table */\n-  size_t number_of_deleted_elements;\n+  size_t n_deleted;\n+\n   /* The following member is used for debugging. Its value is number\n-     of all calls of `find_hash_table_entry' for the hash table. */\n-  int searches;\n+     of all calls of `htab_find_slot' for the hash table. */\n+  unsigned int searches;\n+\n   /* The following member is used for debugging.  Its value is number\n      of collisions fixed for time of work with the hash table. */\n-  int collisions;\n-  /* Pointer to function for evaluation of hash value (any unsigned value).\n-     This function has one parameter of type hash_table_entry_t. */\n-  unsigned (*hash_function) PARAMS ((hash_table_entry_t));\n-  /* Pointer to function for test on equality of hash table elements (two\n-     parameter of type hash_table_entry_t. */\n-  int (*eq_function) PARAMS ((hash_table_entry_t, hash_table_entry_t));\n-  /* Table itself */\n-  hash_table_entry_t *entries;\n-} *hash_table_t;\n+  unsigned int collisions;\n+};\n \n+typedef struct htab *htab_t;\n \n /* The prototypes of the package functions. */\n \n-extern hash_table_t create_hash_table\n-  PARAMS ((size_t, unsigned (*) (hash_table_entry_t),\n-\t   int (*) (hash_table_entry_t, hash_table_entry_t)));\n-\n-extern void delete_hash_table PARAMS ((hash_table_t));\n-\n-extern void empty_hash_table PARAMS ((hash_table_t));\n-\n-extern hash_table_entry_t *find_hash_table_entry\n-  PARAMS ((hash_table_t, hash_table_entry_t, int));\n-\n-extern void remove_element_from_hash_table_entry PARAMS ((hash_table_t,\n-\t\t\t\t\t\t\t  hash_table_entry_t));\n-\n-extern void clear_hash_table_slot PARAMS ((hash_table_t, hash_table_entry_t *));\n-\n-extern void traverse_hash_table PARAMS ((hash_table_t,\n-\t\t\t\t\t int (*) (hash_table_entry_t, void *),\n-\t\t\t\t\t void *));\n-    \n-extern size_t hash_table_size PARAMS ((hash_table_t));\n+extern htab_t\thtab_create\tPARAMS ((size_t, htab_hash, htab_eq));\n+extern void\thtab_delete\tPARAMS ((htab_t));\n+extern void\thtab_empty\tPARAMS ((htab_t));\n \n-extern size_t hash_table_elements_number PARAMS ((hash_table_t));\n+extern void    *htab_find\tPARAMS ((htab_t, const void *));\n+extern void   **htab_find_slot\tPARAMS ((htab_t, const void *, int));\n+extern void\thtab_clear_slot\tPARAMS ((htab_t, void **));\n+extern void\thtab_remove_elt\tPARAMS ((htab_t, void *));\n \n-extern int hash_table_collisions PARAMS ((hash_table_t));\n+extern void\thtab_traverse\tPARAMS ((htab_t, htab_trav, void *));\n \n-extern int all_hash_table_collisions PARAMS ((void));\n+extern size_t\thtab_size\tPARAMS ((htab_t));\n+extern size_t\thtab_elements\tPARAMS ((htab_t));\n+extern double\thtab_collisions\tPARAMS ((htab_t));\n \n #ifdef __cplusplus\n }"}, {"sha": "c0f59a89716ef421606141362dc11523429f0ae2", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 70, "deletions": 52, "changes": 122, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5194cf089037ca4d68896c4452582b526f603b96/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5194cf089037ca4d68896c4452582b526f603b96/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=5194cf089037ca4d68896c4452582b526f603b96", "patch": "@@ -1,7 +1,25 @@\n+2000-03-08  Zack Weinberg  <zack@wolery.cumb.org>\n+\n+\t* hashtab.c: Remove debugging variables (all_searches,\n+\tall_collisions, all_expansions). Delete\n+\tall_hash_table_collisions.\n+\t(create_hash_table, delete_hash_table, empty_hash_table,\n+\tfind_hash_table_entry, remove_element_from_hash_table_entry,\n+\tclear_hash_table_slot, traverse_hash_table, hash_table_size,\n+\thash_table_elements_number, hash_table_collisions): Rename to:\n+\thtab_create, htab_delete, htab_empty, htab_find_slot,\n+\thtab_remove_elt, htab_clear_slot, htab_traverse, htab_size,\n+\thtab_elements, htab_collisions.\n+\t(htab_find): New function, handles common case where you don't\n+\tplan to add or delete an entry.\n+\t(htab_expand): Don't create a whole new table, just a new\n+\tentry vector.\n+\t(htab_find_slot): Simplify logic.\n+\n 2000-01-04  Mumit Khan  <khan@xraylith.wisc.edu>\n \n \t* pexecute.c: Conditionally include string.h.\n-\t(fix_argv): Handle embedded whitespace in args for Mingw32. \n+\t(fix_argv): Handle embedded whitespace in args for Mingw32.\n \n 2000-01-04  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n@@ -80,7 +98,7 @@ Tue Nov  2 03:23:13 1999  Philippe De Muyter  <phdm@macqel.be>\n \t(demangle_qualified): Use consume_count_with_underscores.\n \t(get_count): Tweak formatting.\n \t(do_type): Use string_append_template_idx.\n-\t\n+\n 1999-10-18  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* calloc.c: Add a public domain notice.\n@@ -143,7 +161,7 @@ Wed Sep  8 20:03:28 1999  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n Tue Sep  7 23:32:18 1999  Linas Vepstas  <linas@linas.org>\n \n-        * config.table: Add openedition target.\n+\t* config.table: Add openedition target.\n \t* config/mh-openedition: New file.\n \n Thu Sep  2 01:36:12 1999  Marc Espie <espie@cvs.openbsd.org>\n@@ -172,7 +190,7 @@ Thu Sep  2 01:36:12 1999  Marc Espie <espie@cvs.openbsd.org>\n \t(arm_special): Likewise.\n \t(demangle_fund_type): Likewise.\n \t(do_hpacc_template_const_value): Mark parameter `work' with\n-\tATTRIBUTE_UNUSED.\t\n+\tATTRIBUTE_UNUSED.\n \t(main): Constify variable `valid_symbols'.\n \n Tue Aug 24 02:50:45 1999  Philippe De Muyter  <phdm@macqel.be>\n@@ -190,7 +208,7 @@ Fri Aug  6 23:32:29 1999  Daniel Jacobowitz <drow@drow.them.org>\n \n 1999-07-14  Richard Henderson  <rth@cygnus.com>\n \n-\t* argv.c: Include stdlib.h and string.h instead of \n+\t* argv.c: Include stdlib.h and string.h instead of\n \tprototyping directly.\n \t* choose-temp.c: Conditionally include string.h.\n \n@@ -284,7 +302,7 @@ Sun Apr 25 01:18:21 1999  Mumit Khan  <khan@xraylith.wisc.edu>\n 1999-04-20  Jim Blandy  <jimb@zwingli.cygnus.com>\n \n \tFix from Dale Hawkins:\n-\t* cplus-dem.c (mop_up): Set typevec_size to zero, so it'll be \n+\t* cplus-dem.c (mop_up): Set typevec_size to zero, so it'll be\n \treallocated properly if we use it again.\n \n \t* cplus-dem.c (demangle_fund_type): Check for buffer overrun.  Be\n@@ -375,7 +393,7 @@ Sun Apr 11 23:20:59 1999  Mumit Khan  <khan@xraylith.wisc.edu>\n \t* cplus-dem.c (demangle_prefix): Don't grab all the '__' strings\n \twhen doing arm or hp style.\n \t(demangle_nested_args): Decr forgetting_types field when done.\n-\t\n+\n Thu Mar 11 01:22:58 1999  Mumit Khan  <khan@xraylith.wisc.edu>\n \n \t* pexecute.c (__CYGWIN32__): Rename to\n@@ -409,10 +427,10 @@ Tue Feb  9 01:12:27 1999  Marc Espie <Marc.Espie@liafa.jussieu.fr>\n \t* configure.in (funcs): Check for and conditionally add mkstemps to\n \tthe list of functions libiberty will provide.\n \t* configure: Rebuilt.\n-\t\n+\n Wed Feb  3 00:01:15 1999  Mumit Khan  <khan@xraylith.wisc.edu>\n \n-\t* clock.c (HZ): Define in terms of (ISO C) CLOCKS_PER_SEC on \n+\t* clock.c (HZ): Define in terms of (ISO C) CLOCKS_PER_SEC on\n \tplatforms that don't have HZ.\n \t* getruntime.c (HZ): Likewise.\n \n@@ -481,7 +499,7 @@ Fri Dec 18 17:50:18 1998  David Taylor  <taylor@texas.cygnus.com>\n \t* cplus-dem.c (demangle_arm_pt): remove declaration -- function\n  \tdoesn't exist.\n \t(do_hpacc_template_literal): remove unused variable `i'.\n-\t\n+\n Fri Dec 18 16:11:43 EST 1998  Andrew MacLeod  <amacleod@cygnus.com>\n \n \t* cplus-dem.c (demangle_fund_type): Process CV and u codes before\n@@ -587,7 +605,7 @@ Mon Nov 23 16:59:49 1998  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n 1998-11-16  Benjamin Kosnik  <bkoz@haight.constant.com>\n \n-        * cplus-dem.c (demangle_fund_type): Add demangling for C9x types.\n+\t* cplus-dem.c (demangle_fund_type): Add demangling for C9x types.\n \n Thu Nov 19 22:15:50 1998  Jeffrey A Law  (law@cygnus.com)\n \n@@ -640,8 +658,8 @@ Sat Nov  7 16:02:10 1998  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n Mon Nov  2 15:05:33 1998  Geoffrey Noer  <noer@cygnus.com>\n \n-        * configure.in: detect cygwin* instead of cygwin32*\n-        * configure: regenerate\n+\t* configure.in: detect cygwin* instead of cygwin32*\n+\t* configure: regenerate\n \n Mon Nov  2 10:22:01 1998  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n@@ -731,17 +749,17 @@ Thu Oct 15 18:51:12 1998  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n Tue Oct 13 23:51:51 1998  Jeffrey A Law  (law@cygnus.com)\n \n-        * mkstemp.c: Check HAVE_SYS_TIME_H before including sys/time.h\n-        * configure.in (AC_CHECK_HEADERS): Check for sys/time.h too.\n-        * config.in, configure: Rebuilt.\n+\t* mkstemp.c: Check HAVE_SYS_TIME_H before including sys/time.h\n+\t* configure.in (AC_CHECK_HEADERS): Check for sys/time.h too.\n+\t* config.in, configure: Rebuilt.\n \n \t* getopt.c: Check HAVE_STRINGS_H before including strings.h.\n \t* configure.in (AC_CHECK_HEADERS): Check for strings.h too.\n \t* config.in, configure: Rebuilt.\n \n Mon Oct 12 19:15:59 1998  Geoffrey Noer  <noer@cygnus.com>\n \n-        * configure.in: in comment, call AC_EXEEXT instead of AM_EXEEXT\n+\t* configure.in: in comment, call AC_EXEEXT instead of AM_EXEEXT\n \n Sun Oct 11 17:36:06 1998  Michael Tiemann  <tiemann@holodeck.cygnus.com>\n \n@@ -1181,8 +1199,8 @@ Fri Feb  6 01:35:17 1998  Manfred Hollstein  <manfred@s-direktnet.de>\n \n Thu Feb  5 18:48:56 1998  Geoffrey Noer  <noer@cygnus.com>\n \n-        * config/mh-cygwin32: remove vasprintf.o from EXTRA_OFILES\n-        since it gets built automatically\n+\t* config/mh-cygwin32: remove vasprintf.o from EXTRA_OFILES\n+\tsince it gets built automatically\n \n Sun Feb  1 02:52:32 1998  Mike Stump  <mrs@wrs.com>\n \n@@ -1267,24 +1285,24 @@ Mon Sep 29 12:28:41 1997  Ian Lance Taylor  <ian@cygnus.com>\n \n \tMon Sep 29 12:27:59 1997  Ian Lance Taylor  <ian@cygnus.com>\n \n-        * pexecute.c: Use spawn if __CYGWIN32__.\n+\t* pexecute.c: Use spawn if __CYGWIN32__.\n \n \t1997-08-08  Paul Eggert  <eggert@twinsun.com>\n \n-        * pexecute.c: Include \"config.h\" first, as per autoconf manual.\n+\t* pexecute.c: Include \"config.h\" first, as per autoconf manual.\n \n \tFri Jun 27 15:20:29 1997  Scott Christley <scottc@net-community.com>\n \n-        * pexecute.c (fix_argv): New function.\n-        (pexecute): Win32 but not Cygwin32 needs its arguments fixed.\n-        Add underscore to cwait function call.\n+\t* pexecute.c (fix_argv): New function.\n+\t(pexecute): Win32 but not Cygwin32 needs its arguments fixed.\n+\tAdd underscore to cwait function call.\n \n Sun Sep 28 12:00:52 1997  Mark Mitchell  <mmitchell@usa.net>\n \n-        * cplus-dem.c (demangle_template): Add new parameter.  Handle new\n-        template-function mangling.\n-        (consume_count_with_underscores): New function.\n-        (demangle_signature): Handle new name-mangling scheme.\n+\t* cplus-dem.c (demangle_template): Add new parameter.  Handle new\n+\ttemplate-function mangling.\n+\t(consume_count_with_underscores): New function.\n+\t(demangle_signature): Handle new name-mangling scheme.\n \n Wed Sep 24 00:31:59 1997  Felix Lee  <flee@yin.cygnus.com>\n \n@@ -1662,7 +1680,7 @@ Tue Jun 25 23:01:07 1996  Jason Molenda  (crash@godzilla.cygnus.co.jp)\n \n Tue Jun 25 22:50:07 1996  Jason Molenda  (crash@godzilla.cygnus.co.jp)\n \n-        * Makefile.in (datadir): Set to $(prefix)/share.\n+\t* Makefile.in (datadir): Set to $(prefix)/share.\n \n Thu Jun 20 21:17:52 1996  Ian Lance Taylor  <ian@cygnus.com>\n \n@@ -1708,7 +1726,7 @@ Wed Apr 17 11:17:55 1996  Doug Evans  <dje@canuck.cygnus.com>\n \n Tue Apr 16 11:27:16 1996  Jeffrey A Law  (law@cygnus.com)\n \n-        * Makefile.in (lneeded-list): If alloca.o is needed, so is xmalloc.o.\n+\t* Makefile.in (lneeded-list): If alloca.o is needed, so is xmalloc.o.\n \tReverts Feb 8, 1995 change.\n \n Mon Apr 15 12:53:26 1996  Doug Evans  <dje@canuck.cygnus.com>\n@@ -1962,7 +1980,7 @@ Wed Jun 28 19:13:23 1995  Jason Merrill  <jason@phydeaux.cygnus.com>\n \t* cplus-dem.c: Update from gcc.\n \n \t* argv.c, dummy.c: If __STDC__, #include \"alloca-conf.h\" after\n-        <stddef.h>.\n+\t<stddef.h>.\n \t* alloca-norm.h: If __STDC__, declare alloca with its parameter.\n \n Thu Jun 22 18:57:47 1995  Stan Shebs  <shebs@andros.cygnus.com>\n@@ -2055,17 +2073,17 @@ Mon May 15 19:53:17 1995  Per Bothner  <bothner@kalessin.cygnus.com>\n Thu May  4 14:36:42 1995  Jason Merrill  <jason@phydeaux.cygnus.com>\n \n \t* cplus-dem.c: Use const instead of CONST.  Don't include\n-        ansidecl.h directly.\n+\tansidecl.h directly.\n \n Wed Apr 19 01:30:27 1995  Jason Merrill  <jason@phydeaux.cygnus.com>\n \n \t* cplus-dem.c: Don't include libiberty.h.  Do declare xmalloc and\n-        xrealloc.\n+\txrealloc.\n \t(-DMAIN): Don't rely on an externally-defined version number;\n-        instead, require the version number to be defined as a\n-        preprocessor macro.  Handle the RS/6000 leading dot.  Define\n-        xmalloc, xrealloc and fatal.  Don't strip a leading underscore\n-        if we couldn't demangle the word.\n+\tinstead, require the version number to be defined as a\n+\tpreprocessor macro.  Handle the RS/6000 leading dot.  Define\n+\txmalloc, xrealloc and fatal.  Don't strip a leading underscore\n+\tif we couldn't demangle the word.\n \n Tue Apr  4 13:03:51 1995  Stan Shebs  <shebs@andros.cygnus.com>\n \n@@ -2239,7 +2257,7 @@ Fri Aug 19 15:29:12 1994  Kung Hsu  (kung@mexican.cygnus.com)\n Thu Aug 18 14:37:14 1994  Kung Hsu  (kung@mexican.cygnus.com)\n \n \t* cplus-dem.c (demangle args): Handle ARM repeat encoding where\n-        the type index is greater than 9.\n+\tthe type index is greater than 9.\n \n Wed Aug 17 16:13:49 1994  Kung Hsu  (kung@mexican.cygnus.com)\n \n@@ -2301,7 +2319,7 @@ Thu Jun 16 17:54:01 1994  Ian Lance Taylor  (ian@tweedledumb.cygnus.com)\n Sun Jun 12 01:37:09 1994  Jason Merrill  (jason@deneb.cygnus.com)\n \n \t* cplus-dem.c (demangle_template): Separate consecutive >'s with a\n-        space.\n+\tspace.\n \t(gnu_special): Demangle template and qualified names in a vtable name.\n \n Fri May 27 12:27:52 1994  Ken Raeburn  (raeburn@cujo.cygnus.com)\n@@ -2345,13 +2363,13 @@ Fri May  6 11:01:59 1994  D. V. Henkel-Wallace  (gumby@rtl.cygnus.com)\n \n Mon Apr 11 00:54:33 1994  Richard Stallman  (rms@mole.gnu.ai.mit.edu)\n \n-        * getopt.c [not __GNU_LIBRARY__] [__GCC__] [not __STDC__]:\n-        Declare strlen to return int.  Don't include stddef.h.\n+\t* getopt.c [not __GNU_LIBRARY__] [__GCC__] [not __STDC__]:\n+\tDeclare strlen to return int.  Don't include stddef.h.\n \n Fri Apr  1 00:38:17 1994  Jim Wilson  (wilson@mole.gnu.ai.mit.edu)\n \n-        * getopt.c: Delete use of IN_GCC to control whether\n-        stddef.h or gstddef.h is included.\n+\t* getopt.c: Delete use of IN_GCC to control whether\n+\tstddef.h or gstddef.h is included.\n \n Thu Apr 14 14:00:56 1994  Kung Hsu  (kung@mexican.cygnus.com)\n \n@@ -2424,27 +2442,27 @@ Thu Feb 24 11:51:12 1994  David J. Mackenzie  (djm@rtl.cygnus.com)\n \n Thu Feb 10 14:44:16 1994  Richard Stallman  (rms@mole.gnu.ai.mit.edu)\n \n-        * getopt.c [not __GNU_LIBRARY__] [__GNUC__] [not IN_GCC]:\n-        Test just __STDC__, not emacs.\n+\t* getopt.c [not __GNU_LIBRARY__] [__GNUC__] [not IN_GCC]:\n+\tTest just __STDC__, not emacs.\n \n Wed Feb  9 00:14:00 1994  Richard Stallman  (rms@mole.gnu.ai.mit.edu)\n \n-        * getopt.c [not __GNU_LIBRARY__] [__GNUC__] [not IN_GCC]\n-        [emacs] [not __STDC__]: Don't include stddef.h.  Don't declare strlen.\n+\t* getopt.c [not __GNU_LIBRARY__] [__GNUC__] [not IN_GCC]\n+\t[emacs] [not __STDC__]: Don't include stddef.h.  Don't declare strlen.\n \n Fri Dec 24 19:43:00 1993  Noah Friedman  (friedman@nutrimat.gnu.ai.mit.edu)\n \n-        * getopt.c (_NO_PROTO): Define before config.h is included.\n+\t* getopt.c (_NO_PROTO): Define before config.h is included.\n \n Mon Sep 20 15:59:03 1993  Roland McGrath  (roland@churchy.gnu.ai.mit.edu)\n \n-        * getopt.c, getopt1.c [emacs || CONFIG_BROKETS]: Include\n+\t* getopt.c, getopt1.c [emacs || CONFIG_BROKETS]: Include\n \t<config.h> only under these, else \"config.h\".\n \n Thu Aug 12 18:16:49 1993  Roland McGrath  (roland@churchy.gnu.ai.mit.edu)\n \n-        * getopt.c, getopt1.c [HAVE_CONFIG_H]: Include\n-        <config.h> instead of \"config.h\".\n+\t* getopt.c, getopt1.c [HAVE_CONFIG_H]: Include\n+\t<config.h> instead of \"config.h\".\n \n Sun Feb 20 17:17:01 1994  Ian Lance Taylor  (ian@lisa.cygnus.com)\n \n@@ -2820,7 +2838,7 @@ Fri May 21 09:53:57 1993  Jim Kingdon  (kingdon@lioth.cygnus.com)\n \n Tue May 18 17:12:10 1993  Fred Fish  (fnf@cygnus.com)\n \n-        (merge changes from dlong@cse.ucsc.edu)\n+\t(merge changes from dlong@cse.ucsc.edu)\n \t* cplus-dem.c (consume_count):  Simplify.\n \t* cplus-dem.c (arm_pt, demangle_class_name):  New functions.\n \t* cplus-dem.c (various):  Calls to arm_pt, demangle_class_name."}, {"sha": "ea9f9d38ac760e63f973f63a2849aebbf593ffa8", "filename": "libiberty/hashtab.c", "status": "modified", "additions": 188, "deletions": 166, "changes": 354, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5194cf089037ca4d68896c4452582b526f603b96/libiberty%2Fhashtab.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5194cf089037ca4d68896c4452582b526f603b96/libiberty%2Fhashtab.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fhashtab.c?ref=5194cf089037ca4d68896c4452582b526f603b96", "patch": "@@ -46,25 +46,9 @@ Boston, MA 02111-1307, USA.  */\n #include \"libiberty.h\"\n #include \"hashtab.h\"\n \n-/* The following variable is used for debugging. Its value is number\n-   of all calls of `find_hash_table_entry' for all hash tables. */\n-\n-static int all_searches = 0;\n-\n-/* The following variable is used for debugging. Its value is number\n-   of collisions fixed for time of work with all hash tables. */\n-\n-static int all_collisions = 0;\n-\n-/* The following variable is used for debugging. Its value is number\n-   of all table expansions fixed for time of work with all hash\n-   tables. */\n-\n-static int all_expansions = 0;\n-\n /* This macro defines reserved value for empty table entry. */\n \n-#define EMPTY_ENTRY    NULL\n+#define EMPTY_ENTRY    ((void *) 0)\n \n /* This macro defines reserved value for table entry which contained\n    a deleted element. */\n@@ -75,55 +59,57 @@ static int all_expansions = 0;\n    greater than given source number. */\n \n static unsigned long\n-higher_prime_number (number)\n-     unsigned long number;\n+higher_prime_number (n)\n+     unsigned long n;\n {\n   unsigned long i;\n \n-  for (number = (number / 2) * 2 + 3;; number += 2)\n+  n |= 0x01;  /* Force N to be odd.  */\n+  if (n < 9)\n+    return n; /* All odd numbers < 9 are prime.  */\n+\n+ next:\n+  n += 2;\n+  i = 3;\n+  do\n     {\n-      for (i = 3; i * i <= number; i += 2)\n-        if (number % i == 0)\n-          break;\n-      if (i * i > number)\n-        return number;\n+      if (n % i == 0)\n+\tgoto next;\n+      i += 2;\n     }\n+  while ((i * i) <= n);\n+\n+  return n;\n }\n \n /* This function creates table with length slightly longer than given\n    source length.  Created hash table is initiated as empty (all the\n    hash table entries are EMPTY_ENTRY).  The function returns the\n    created hash table. */\n \n-hash_table_t\n-create_hash_table (size, hash_function, eq_function)\n+htab_t\n+htab_create (size, hash_f, eq_f)\n      size_t size;\n-     unsigned (*hash_function) PARAMS ((hash_table_entry_t));\n-     int (*eq_function) PARAMS ((hash_table_entry_t, hash_table_entry_t));\n+     htab_hash hash_f;\n+     htab_eq eq_f;\n {\n-  hash_table_t result;\n+  htab_t result;\n \n   size = higher_prime_number (size);\n-  result = (hash_table_t) xmalloc (sizeof (*result));\n-  result->entries\n-    = (hash_table_entry_t *) xmalloc (size * sizeof (hash_table_entry_t));\n+  result = (htab_t) xcalloc (1, sizeof (struct htab));\n+  result->entries = (void **) xcalloc (size, sizeof (void *));\n   result->size = size;\n-  result->hash_function = hash_function;\n-  result->eq_function = eq_function;\n-  result->number_of_elements = 0;\n-  result->number_of_deleted_elements = 0;\n-  result->searches = 0;\n-  result->collisions = 0;\n-  memset (result->entries, 0, size * sizeof (hash_table_entry_t));\n+  result->hash_f = hash_f;\n+  result->eq_f = eq_f;\n   return result;\n }\n \n /* This function frees all memory allocated for given hash table.\n    Naturally the hash table must already exist. */\n \n void\n-delete_hash_table (htab)\n-     hash_table_t htab;\n+htab_delete (htab)\n+     htab_t htab;\n {\n   free (htab->entries);\n   free (htab);\n@@ -132,10 +118,10 @@ delete_hash_table (htab)\n /* This function clears all entries in the given hash table.  */\n \n void\n-empty_hash_table (htab)\n-     hash_table_t htab;\n+htab_empty (htab)\n+     htab_t htab;\n {\n-  memset (htab->entries, 0, htab->size * sizeof (hash_table_entry_t));\n+  memset (htab->entries, 0, htab->size * sizeof (void *));\n }\n \n /* The following function changes size of memory allocated for the\n@@ -145,121 +131,166 @@ empty_hash_table (htab)\n    table entries is changed. */\n \n static void\n-expand_hash_table (htab)\n-     hash_table_t htab;\n+htab_expand (htab)\n+     htab_t htab;\n {\n-  hash_table_t new_htab;\n-  hash_table_entry_t *entry_ptr;\n-  hash_table_entry_t *new_entry_ptr;\n-\n-  new_htab = create_hash_table (htab->number_of_elements * 2,\n-                                htab->hash_function, htab->eq_function);\n-  for (entry_ptr = htab->entries; entry_ptr < htab->entries + htab->size;\n-       entry_ptr++)\n-    if (*entry_ptr != EMPTY_ENTRY && *entry_ptr != DELETED_ENTRY)\n-      {\n-        new_entry_ptr = find_hash_table_entry (new_htab, *entry_ptr, 1);\n-        *new_entry_ptr = (*entry_ptr);\n-      }\n-  free (htab->entries);\n-  *htab = (*new_htab);\n-  free (new_htab);\n+  void **oentries;\n+  void **olimit;\n+  void **p;\n+\n+  oentries = htab->entries;\n+  olimit = oentries + htab->size;\n+\n+  htab->size = higher_prime_number (htab->size * 2);\n+  htab->entries = xcalloc (htab->size, sizeof (void **));\n+\n+  htab->n_elements -= htab->n_deleted;\n+  htab->n_deleted = 0;\n+\n+  p = oentries;\n+  do\n+    {\n+      void *x = *p;\n+      if (x != EMPTY_ENTRY && x != DELETED_ENTRY)\n+\t{\n+\t  void **q = htab_find_slot (htab, x, 1);\n+\t  *q = x;\n+\t}\n+      p++;\n+    }\n+  while (p < olimit);\n+  free (oentries);\n }\n \n-/* This function searches for hash table entry which contains element\n-   equal to given value or empty entry in which given value can be\n-   placed (if the element with given value does not exist in the\n-   table).  The function works in two regimes.  The first regime is\n-   used only for search.  The second is used for search and\n-   reservation empty entry for given value.  The table is expanded if\n-   occupancy (taking into accout also deleted elements) is more than\n-   75%.  Naturally the hash table must already exist.  If reservation\n-   flag is TRUE then the element with given value should be inserted\n-   into the table entry before another call of\n-   `find_hash_table_entry'. */\n-\n-hash_table_entry_t *\n-find_hash_table_entry (htab, element, reserve)\n-     hash_table_t htab;\n-     hash_table_entry_t element;\n-     int reserve;\n+/* This function searches for a hash table entry equal to the given\n+   element.  It cannot be used to insert or delete an element.  */\n+\n+void *\n+htab_find (htab, element)\n+     htab_t htab;\n+     const void *element;\n {\n-  hash_table_entry_t *entry_ptr;\n-  hash_table_entry_t *first_deleted_entry_ptr;\n-  unsigned index, hash_value, secondary_hash_value;\n+  unsigned int index, hash, hash2;\n+  size_t size;\n+\n+  htab->searches++;\n+  size = htab->size;\n+  hash = (*htab->hash_f) (element);\n+  hash2 = 1 + hash % (size - 2);\n+  index = hash % size;\n \n-  if (htab->size * 3 <= htab->number_of_elements * 4)\n+  for (;;)\n     {\n-      all_expansions++;\n-      expand_hash_table (htab);\n+      void *entry = htab->entries[index];\n+      if (entry == EMPTY_ENTRY)\n+\treturn NULL;\n+      else if (entry != DELETED_ENTRY && (*htab->eq_f) (entry, element))\n+\treturn entry;\n+\n+      htab->collisions++;\n+      index += hash2;\n+      if (index >= size)\n+\tindex -= size;\n     }\n-  hash_value = (*htab->hash_function) (element);\n-  secondary_hash_value = 1 + hash_value % (htab->size - 2);\n-  index = hash_value % htab->size;\n+}\n+\n+/* This function searches for a hash table slot containing an entry\n+   equal to the given element.  To delete an entry, call this with\n+   INSERT = 0, then call htab_clear_slot on the slot returned (possibly\n+   after doing some checks).  To insert an entry, call this with\n+   INSERT = 1, then write the value you want into the returned slot.  */\n+\n+void **\n+htab_find_slot (htab, element, insert)\n+     htab_t htab;\n+     const void *element;\n+     int insert;\n+{\n+  void **first_deleted_slot;\n+  unsigned int index, hash, hash2;\n+  size_t size;\n+\n+  if (insert && htab->size * 3 <= htab->n_elements * 4)\n+    htab_expand (htab);\n+\n+  size = htab->size;\n+  hash = (*htab->hash_f) (element);\n+  hash2 = 1 + hash % (size - 2);\n+  index = hash % size;\n+\n   htab->searches++;\n-  all_searches++;\n-  first_deleted_entry_ptr = NULL;\n-  for (;;htab->collisions++, all_collisions++)\n+  first_deleted_slot = NULL;\n+\n+  for (;;)\n     {\n-      entry_ptr = htab->entries + index;\n-      if (*entry_ptr == EMPTY_ENTRY)\n-        {\n-          if (reserve)\n+      void *entry = htab->entries[index];\n+      if (entry == EMPTY_ENTRY)\n+\t{\n+\t  if (!insert)\n+\t    return NULL;\n+\n+\t  htab->n_elements++;\n+\n+\t  if (first_deleted_slot)\n \t    {\n-\t      htab->number_of_elements++;\n-\t      if (first_deleted_entry_ptr != NULL)\n-\t\t{\n-\t\t  entry_ptr = first_deleted_entry_ptr;\n-\t\t  *entry_ptr = EMPTY_ENTRY;\n-\t\t}\n+\t      *first_deleted_slot = EMPTY_ENTRY;\n+\t      return first_deleted_slot;\n \t    }\n-          break;\n-        }\n-      else if (*entry_ptr != DELETED_ENTRY)\n-        {\n-          if ((*htab->eq_function) (*entry_ptr, element))\n-            break;\n-        }\n-      else if (first_deleted_entry_ptr == NULL)\n-\tfirst_deleted_entry_ptr = entry_ptr;\n-      index += secondary_hash_value;\n-      if (index >= htab->size)\n-        index -= htab->size;\n+\n+\t  return &htab->entries[index];\n+\t}\n+\n+      if (entry == DELETED_ENTRY)\n+\t{\n+\t  if (!first_deleted_slot)\n+\t    first_deleted_slot = &htab->entries[index];\n+\t}\n+      else\n+\t{\n+\t  if ((*htab->eq_f) (entry, element))\n+\t    return &htab->entries[index];\n+\t}\n+      \n+      htab->collisions++;\n+      index += hash2;\n+      if (index >= size)\n+\tindex -= size;\n     }\n-  return entry_ptr;\n }\n \n-/* This function deletes element with given value from hash table.\n-   The hash table entry value will be `DELETED_ENTRY' after the\n-   function call.  Naturally the hash table must already exist.  Hash\n-   table entry for given value should be not empty (or deleted). */\n+/* This function deletes an element with the given value from hash\n+   table.  If there is no matching element in the hash table, this\n+   function does nothing.  */\n \n void\n-remove_element_from_hash_table_entry (htab, element)\n-     hash_table_t htab;\n-     hash_table_entry_t element;\n+htab_remove_elt (htab, element)\n+     htab_t htab;\n+     void *element;\n {\n-  hash_table_entry_t *entry_ptr;\n+  void **slot;\n \n-  entry_ptr = find_hash_table_entry (htab, element, 0);\n-  *entry_ptr = DELETED_ENTRY;\n-  htab->number_of_deleted_elements++;\n+  slot = htab_find_slot (htab, element, 0);\n+  if (*slot == EMPTY_ENTRY)\n+    return;\n+\n+  *slot = DELETED_ENTRY;\n+  htab->n_deleted++;\n }\n \n-/* This function clears a specified slot in a hash table.\n-   It is useful when you've already done the lookup and don't want to\n-   do it again.  */\n+/* This function clears a specified slot in a hash table.  It is\n+   useful when you've already done the lookup and don't want to do it\n+   again.  */\n \n void\n-clear_hash_table_slot (htab, slot)\n-     hash_table_t htab;\n-     hash_table_entry_t *slot;\n+htab_clear_slot (htab, slot)\n+     htab_t htab;\n+     void **slot;\n {\n   if (slot < htab->entries || slot >= htab->entries + htab->size\n       || *slot == EMPTY_ENTRY || *slot == DELETED_ENTRY)\n     abort ();\n   *slot = DELETED_ENTRY;\n-  htab->number_of_deleted_elements++;\n+  htab->n_deleted++;\n }\n \n /* This function scans over the entire hash table calling\n@@ -268,24 +299,29 @@ clear_hash_table_slot (htab, slot)\n    argument.  */\n \n void\n-traverse_hash_table (htab, callback, info)\n-     hash_table_t htab;\n-     int (*callback) PARAMS ((hash_table_entry_t, void *));\n+htab_traverse (htab, callback, info)\n+     htab_t htab;\n+     htab_trav callback;\n      void *info;\n {\n-  hash_table_entry_t *entry_ptr;\n-  for (entry_ptr = htab->entries; entry_ptr < htab->entries + htab->size;\n-       entry_ptr++)\n-    if (*entry_ptr != EMPTY_ENTRY && *entry_ptr != DELETED_ENTRY)\n-      if (!callback (*entry_ptr, info))\n-\tbreak;\n+  void **slot, **limit;\n+  slot = htab->entries;\n+  limit = slot + htab->size;\n+  do\n+    {\n+      void *x = *slot;\n+      if (x != EMPTY_ENTRY && x != DELETED_ENTRY)\n+\tif (!(*callback) (x, info))\n+\t  break;\n+    }\n+  while (++slot < limit);\n }\n \n /* The following function returns current size of given hash table. */\n \n size_t\n-hash_table_size (htab)\n-     hash_table_t htab;\n+htab_size (htab)\n+     htab_t htab;\n {\n   return htab->size;\n }\n@@ -294,37 +330,23 @@ hash_table_size (htab)\n    hash table. */\n \n size_t\n-hash_table_elements_number (htab)\n-     hash_table_t htab;\n+htab_elements (htab)\n+     htab_t htab;\n {\n-  return htab->number_of_elements - htab->number_of_deleted_elements;\n+  return htab->n_elements - htab->n_deleted;\n }\n \n /* The following function returns number of percents of fixed\n    collisions during all work with given hash table. */\n \n-int\n-hash_table_collisions (htab)\n-     hash_table_t htab;\n+double\n+htab_collisions (htab)\n+     htab_t htab;\n {\n   int searches;\n \n   searches = htab->searches;\n   if (searches == 0)\n-    searches++;\n-  return htab->collisions * 100 / searches;\n-}\n-\n-/* The following function returns number of percents of fixed\n-   collisions during all work with all hash tables. */\n-\n-int\n-all_hash_table_collisions ()\n-{\n-  int searches;\n-\n-  searches = all_searches;\n-  if (searches == 0)\n-    searches++;\n-  return all_collisions * 100 / searches;\n+    return 0.0;\n+  return (double)htab->collisions / (double)searches;\n }"}]}