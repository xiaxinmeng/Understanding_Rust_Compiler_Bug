{"sha": "f5545ebef2aa4dbb2ea17c29f4ceb36c12f2ace1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjU1NDVlYmVmMmFhNGRiYjJlYTE3YzI5ZjRjZWIzNmMxMmYyYWNlMQ==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2019-05-13T15:57:33Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2019-05-13T15:57:33Z"}, "message": "[PATCH] A couple of driver cleanups\n\nhttps://gcc.gnu.org/ml/gcc-patches/2019-05/msg00624.html\n\t* gcc.c (execute): Simplify cond-expr into if.  Reformat comment.\n\t(run_attempt): Reformat line break\n\nFrom-SVN: r271131", "tree": {"sha": "1ddbabe127bd3d15804df2dd8ae16dc37e767b44", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1ddbabe127bd3d15804df2dd8ae16dc37e767b44"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f5545ebef2aa4dbb2ea17c29f4ceb36c12f2ace1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f5545ebef2aa4dbb2ea17c29f4ceb36c12f2ace1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f5545ebef2aa4dbb2ea17c29f4ceb36c12f2ace1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f5545ebef2aa4dbb2ea17c29f4ceb36c12f2ace1/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2a03d8cab78b0876fcc9580b5657efc3403ba6df", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a03d8cab78b0876fcc9580b5657efc3403ba6df", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2a03d8cab78b0876fcc9580b5657efc3403ba6df"}], "stats": {"total": 15, "additions": 10, "deletions": 5}, "files": [{"sha": "0baa99366a599b574f24d6ecd815d934a1ba962f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5545ebef2aa4dbb2ea17c29f4ceb36c12f2ace1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5545ebef2aa4dbb2ea17c29f4ceb36c12f2ace1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f5545ebef2aa4dbb2ea17c29f4ceb36c12f2ace1", "patch": "@@ -1,3 +1,8 @@\n+2019-05-13  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* gcc.c (execute): Simplify cond-expr into if.  Reformat comment.\n+\t(run_attempt): Reformat line break.\n+\n 2019-05-13  David Edelsohn  <dje.gcc@gmail.com>\n \n \tPR target/90418"}, {"sha": "cee9d68cbee39dd9cd1fadf49e0b19e5b3999942", "filename": "gcc/gcc.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5545ebef2aa4dbb2ea17c29f4ceb36c12f2ace1/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5545ebef2aa4dbb2ea17c29f4ceb36c12f2ace1/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=f5545ebef2aa4dbb2ea17c29f4ceb36c12f2ace1", "patch": "@@ -3068,7 +3068,8 @@ execute (void)\n   if (!wrapper_string)\n     {\n       string = find_a_file (&exec_prefixes, commands[0].prog, X_OK, false);\n-      commands[0].argv[0] = (string) ? string : commands[0].argv[0];\n+      if (string)\n+\tcommands[0].argv[0] = string;\n     }\n \n   for (n_commands = 1, i = 0; argbuf.iterate (i, &arg); i++)\n@@ -3077,8 +3078,7 @@ execute (void)\n #if defined (__MSDOS__) || defined (OS2) || defined (VMS)\n \tfatal_error (input_location, \"%<-pipe%> not supported\");\n #endif\n-\targbuf[i] = 0; /* Termination of\n-\t\t\t\t\t\t     command args.  */\n+\targbuf[i] = 0; /* Termination of command args.  */\n \tcommands[n_commands].prog = argbuf[i + 1];\n \tcommands[n_commands].argv\n \t  = &(argbuf.address ())[i + 1];\n@@ -6926,8 +6926,8 @@ run_attempt (const char **new_argv, const char *out_temp,\n     fatal_error (input_location, \"pex_init failed: %m\");\n \n   errmsg = pex_run (pex, pex_flags, new_argv[0],\n-\t\t    CONST_CAST2 (char *const *, const char **, &new_argv[1]), out_temp,\n-\t\t    err_temp, &err);\n+\t\t    CONST_CAST2 (char *const *, const char **, &new_argv[1]),\n+\t\t    out_temp, err_temp, &err);\n   if (errmsg != NULL)\n     {\n       errno = err;"}]}