{"sha": "3670ec284deac22cb2c850a354736a649031d6fa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzY3MGVjMjg0ZGVhYzIyY2IyYzg1MGEzNTQ3MzZhNjQ5MDMxZDZmYQ==", "commit": {"author": {"name": "Roman Zippel", "email": "zippel@linux-m68k.org", "date": "2007-02-18T01:20:15Z"}, "committer": {"name": "Roman Zippel", "email": "zippel@gcc.gnu.org", "date": "2007-02-18T01:20:15Z"}, "message": "m68k.md (extv,extzv,insv): disable dynamic parameter for register bitfield operations...\n\n\t* config/m68k/m68k.md (extv,extzv,insv): disable dynamic\n\tparameter for register bitfield operations, general predicates\n\tcleanup\n\nFrom-SVN: r122083", "tree": {"sha": "50bbec9cd2d157529bf8d2827964d879b3b21798", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/50bbec9cd2d157529bf8d2827964d879b3b21798"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3670ec284deac22cb2c850a354736a649031d6fa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3670ec284deac22cb2c850a354736a649031d6fa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3670ec284deac22cb2c850a354736a649031d6fa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3670ec284deac22cb2c850a354736a649031d6fa/comments", "author": null, "committer": null, "parents": [{"sha": "19a956978fbadb2f31c47df8eb5b4bd7ced09c0e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/19a956978fbadb2f31c47df8eb5b4bd7ced09c0e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/19a956978fbadb2f31c47df8eb5b4bd7ced09c0e"}], "stats": {"total": 68, "additions": 37, "deletions": 31}, "files": [{"sha": "f0be35cb21af654f398883704248def567ab0283", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3670ec284deac22cb2c850a354736a649031d6fa/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3670ec284deac22cb2c850a354736a649031d6fa/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3670ec284deac22cb2c850a354736a649031d6fa", "patch": "@@ -1,3 +1,9 @@\n+2007-02-18  Roman Zippel <zippel@linux-m68k.org>\n+\n+\t* config/m68k/m68k.md (extv,extzv,insv): disable dynamic\n+\tparameter for register bitfield operations, general predicates\n+\tcleanup\n+\n 2007-02-18  Roman Zippel <zippel@linux-m68k.org>\n \n \t* config/m68k/linux.h (MD_UNWIND_SUPPORT): Define."}, {"sha": "285abf18090378c934b74794863275cac8c0d68f", "filename": "gcc/config/m68k/m68k.md", "status": "modified", "additions": 31, "deletions": 31, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3670ec284deac22cb2c850a354736a649031d6fa/gcc%2Fconfig%2Fm68k%2Fm68k.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3670ec284deac22cb2c850a354736a649031d6fa/gcc%2Fconfig%2Fm68k%2Fm68k.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.md?ref=3670ec284deac22cb2c850a354736a649031d6fa", "patch": "@@ -4934,34 +4934,34 @@\n ;; so that its address is reloaded.\n \n (define_expand \"extv\"\n-  [(set (match_operand:SI 0 \"nonimmediate_operand\" \"\")\n+  [(set (match_operand:SI 0 \"register_operand\" \"\")\n \t(sign_extract:SI (match_operand:SI 1 \"general_operand\" \"\")\n-\t\t\t (match_operand:SI 2 \"general_operand\" \"\")\n-\t\t\t (match_operand:SI 3 \"general_operand\" \"\")))]\n+\t\t\t (match_operand:SI 2 \"const_int_operand\" \"\")\n+\t\t\t (match_operand:SI 3 \"const_int_operand\" \"\")))]\n   \"TARGET_68020 && TARGET_BITFIELD\"\n   \"\")\n \n (define_insn \"\"\n-  [(set (match_operand:SI 0 \"nonimmediate_operand\" \"=d\")\n+  [(set (match_operand:SI 0 \"register_operand\" \"=d\")\n \t(sign_extract:SI (match_operand:QI 1 \"memory_operand\" \"o\")\n-\t\t\t (match_operand:SI 2 \"general_operand\" \"dn\")\n-\t\t\t (match_operand:SI 3 \"general_operand\" \"dn\")))]\n+\t\t\t (match_operand:SI 2 \"nonmemory_operand\" \"dn\")\n+\t\t\t (match_operand:SI 3 \"nonmemory_operand\" \"dn\")))]\n   \"TARGET_68020 && TARGET_BITFIELD\"\n   \"bfexts %1{%b3:%b2},%0\")\n \n (define_expand \"extzv\"\n-  [(set (match_operand:SI 0 \"nonimmediate_operand\" \"\")\n+  [(set (match_operand:SI 0 \"register_operand\" \"\")\n \t(zero_extract:SI (match_operand:SI 1 \"general_operand\" \"\")\n-\t\t\t (match_operand:SI 2 \"general_operand\" \"\")\n-\t\t\t (match_operand:SI 3 \"general_operand\" \"\")))]\n+\t\t\t (match_operand:SI 2 \"const_int_operand\" \"\")\n+\t\t\t (match_operand:SI 3 \"const_int_operand\" \"\")))]\n   \"TARGET_68020 && TARGET_BITFIELD\"\n   \"\")\n \n (define_insn \"\"\n-  [(set (match_operand:SI 0 \"nonimmediate_operand\" \"=d,d\")\n-\t(zero_extract:SI (match_operand:QI 1 \"memory_operand\" \"o,d\")\n-\t\t\t (match_operand:SI 2 \"general_operand\" \"dn,dn\")\n-\t\t\t (match_operand:SI 3 \"general_operand\" \"dn,dn\")))]\n+  [(set (match_operand:SI 0 \"register_operand\" \"=d\")\n+\t(zero_extract:SI (match_operand:QI 1 \"memory_operand\" \"o\")\n+\t\t\t (match_operand:SI 2 \"nonmemory_operand\" \"dn\")\n+\t\t\t (match_operand:SI 3 \"nonmemory_operand\" \"dn\")))]\n   \"TARGET_68020 && TARGET_BITFIELD\"\n {\n   if (GET_CODE (operands[2]) == CONST_INT)\n@@ -4978,8 +4978,8 @@\n \n (define_insn \"\"\n   [(set (zero_extract:SI (match_operand:QI 0 \"memory_operand\" \"+o\")\n-\t\t\t (match_operand:SI 1 \"general_operand\" \"dn\")\n-\t\t\t (match_operand:SI 2 \"general_operand\" \"dn\"))\n+\t\t\t (match_operand:SI 1 \"nonmemory_operand\" \"dn\")\n+\t\t\t (match_operand:SI 2 \"nonmemory_operand\" \"dn\"))\n         (xor:SI (zero_extract:SI (match_dup 0) (match_dup 1) (match_dup 2))\n \t\t(match_operand 3 \"const_int_operand\" \"n\")))]\n   \"TARGET_68020 && TARGET_BITFIELD\n@@ -4993,8 +4993,8 @@\n \n (define_insn \"\"\n   [(set (zero_extract:SI (match_operand:QI 0 \"memory_operand\" \"+o\")\n-\t\t\t (match_operand:SI 1 \"general_operand\" \"dn\")\n-\t\t\t (match_operand:SI 2 \"general_operand\" \"dn\"))\n+\t\t\t (match_operand:SI 1 \"nonmemory_operand\" \"dn\")\n+\t\t\t (match_operand:SI 2 \"nonmemory_operand\" \"dn\"))\n \t(const_int 0))]\n   \"TARGET_68020 && TARGET_BITFIELD\"\n {\n@@ -5015,16 +5015,16 @@\n \n (define_expand \"insv\"\n   [(set (zero_extract:SI (match_operand:SI 0 \"nonimmediate_operand\" \"\")\n-\t\t\t (match_operand:SI 1 \"general_operand\" \"\")\n-\t\t\t (match_operand:SI 2 \"general_operand\" \"\"))\n+\t\t\t (match_operand:SI 1 \"const_int_operand\" \"\")\n+\t\t\t (match_operand:SI 2 \"const_int_operand\" \"\"))\n \t(match_operand:SI 3 \"register_operand\" \"\"))]\n   \"TARGET_68020 && TARGET_BITFIELD\"\n   \"\")\n \n (define_insn \"\"\n   [(set (zero_extract:SI (match_operand:QI 0 \"memory_operand\" \"+o\")\n-\t\t\t (match_operand:SI 1 \"general_operand\" \"dn\")\n-\t\t\t (match_operand:SI 2 \"general_operand\" \"dn\"))\n+\t\t\t (match_operand:SI 1 \"nonmemory_operand\" \"dn\")\n+\t\t\t (match_operand:SI 2 \"nonmemory_operand\" \"dn\"))\n \t(match_operand:SI 3 \"register_operand\" \"d\"))]\n   \"TARGET_68020 && TARGET_BITFIELD\"\n   \"bfins %3,%0{%b2:%b1}\")\n@@ -5035,16 +5035,16 @@\n (define_insn \"\"\n   [(set (match_operand:SI 0 \"nonimmediate_operand\" \"=d\")\n \t(sign_extract:SI (match_operand:SI 1 \"register_operand\" \"d\")\n-\t\t\t (match_operand:SI 2 \"general_operand\" \"dn\")\n-\t\t\t (match_operand:SI 3 \"general_operand\" \"dn\")))]\n+\t\t\t (match_operand:SI 2 \"const_int_operand\" \"n\")\n+\t\t\t (match_operand:SI 3 \"const_int_operand\" \"n\")))]\n   \"TARGET_68020 && TARGET_BITFIELD\"\n   \"bfexts %1{%b3:%b2},%0\")\n \n (define_insn \"\"\n   [(set (match_operand:SI 0 \"nonimmediate_operand\" \"=d\")\n \t(zero_extract:SI (match_operand:SI 1 \"register_operand\" \"d\")\n-\t\t\t (match_operand:SI 2 \"general_operand\" \"dn\")\n-\t\t\t (match_operand:SI 3 \"general_operand\" \"dn\")))]\n+\t\t\t (match_operand:SI 2 \"const_int_operand\" \"n\")\n+\t\t\t (match_operand:SI 3 \"const_int_operand\" \"n\")))]\n   \"TARGET_68020 && TARGET_BITFIELD\"\n {\n   if (GET_CODE (operands[2]) == CONST_INT)\n@@ -5061,8 +5061,8 @@\n \n (define_insn \"\"\n   [(set (zero_extract:SI (match_operand:SI 0 \"register_operand\" \"+d\")\n-\t\t\t (match_operand:SI 1 \"general_operand\" \"dn\")\n-\t\t\t (match_operand:SI 2 \"general_operand\" \"dn\"))\n+\t\t\t (match_operand:SI 1 \"const_int_operand\" \"n\")\n+\t\t\t (match_operand:SI 2 \"const_int_operand\" \"n\"))\n \t(const_int 0))]\n   \"TARGET_68020 && TARGET_BITFIELD\"\n {\n@@ -5072,8 +5072,8 @@\n \n (define_insn \"\"\n   [(set (zero_extract:SI (match_operand:SI 0 \"register_operand\" \"+d\")\n-\t\t\t (match_operand:SI 1 \"general_operand\" \"dn\")\n-\t\t\t (match_operand:SI 2 \"general_operand\" \"dn\"))\n+\t\t\t (match_operand:SI 1 \"const_int_operand\" \"n\")\n+\t\t\t (match_operand:SI 2 \"const_int_operand\" \"n\"))\n \t(const_int -1))]\n   \"TARGET_68020 && TARGET_BITFIELD\"\n {\n@@ -5083,8 +5083,8 @@\n \n (define_insn \"\"\n   [(set (zero_extract:SI (match_operand:SI 0 \"register_operand\" \"+d\")\n-\t\t\t (match_operand:SI 1 \"general_operand\" \"dn\")\n-\t\t\t (match_operand:SI 2 \"general_operand\" \"dn\"))\n+\t\t\t (match_operand:SI 1 \"const_int_operand\" \"n\")\n+\t\t\t (match_operand:SI 2 \"const_int_operand\" \"n\"))\n \t(match_operand:SI 3 \"register_operand\" \"d\"))]\n   \"TARGET_68020 && TARGET_BITFIELD\"\n {"}]}