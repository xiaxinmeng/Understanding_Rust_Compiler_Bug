{"sha": "c7b0e0273ea01ccc3a8b8065944f89b6d619e787", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzdiMGUwMjczZWEwMWNjYzNhOGI4MDY1OTQ0Zjg5YjZkNjE5ZTc4Nw==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2006-10-17T22:35:29Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2006-10-17T22:35:29Z"}, "message": "re PR c++/29039 (implicitly defined constructor for class with reference member)\n\n\tPR c++/29039\n\t* typeck2.c (build_functional_cast): Don't zero-initialize\n\tnon-PODs; instead, call their constructors.\n\t* method.c (synthesize_method): Always build mem-initializers, if\n\twe're synthesizing the default constructor.\n\tPR c++/29039\n\t* g++.dg/init/ctor8.C: New test.\n\nFrom-SVN: r117834", "tree": {"sha": "69dd14ebdbf552a0333a15bf8a7c239e37f2ec70", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/69dd14ebdbf552a0333a15bf8a7c239e37f2ec70"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c7b0e0273ea01ccc3a8b8065944f89b6d619e787", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7b0e0273ea01ccc3a8b8065944f89b6d619e787", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c7b0e0273ea01ccc3a8b8065944f89b6d619e787", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7b0e0273ea01ccc3a8b8065944f89b6d619e787/comments", "author": null, "committer": null, "parents": [{"sha": "05b22df961070e926ac6bf4a8a114c5d5b1745bc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/05b22df961070e926ac6bf4a8a114c5d5b1745bc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/05b22df961070e926ac6bf4a8a114c5d5b1745bc"}], "stats": {"total": 32, "additions": 28, "deletions": 4}, "files": [{"sha": "b759ba42580f5acb402b4b6b6e848b11ee88fc1f", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7b0e0273ea01ccc3a8b8065944f89b6d619e787/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7b0e0273ea01ccc3a8b8065944f89b6d619e787/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=c7b0e0273ea01ccc3a8b8065944f89b6d619e787", "patch": "@@ -1,3 +1,11 @@\n+2006-10-17  Mark Mitchell  <mark@codesourcery.com>\n+\n+\tPR c++/29039\n+\t* typeck2.c (build_functional_cast): Don't zero-initialize\n+\tnon-PODs; instead, call their constructors.\n+\t* method.c (synthesize_method): Always build mem-initializers, if\n+\twe're synthesizing the default constructor.\n+\n 2006-10-17  Mark Mitchell  <mark@codesourcery.com>\n \n \tPR c++/27270"}, {"sha": "ded0af04716195968aaefb6040a72b925646f87b", "filename": "gcc/cp/method.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7b0e0273ea01ccc3a8b8065944f89b6d619e787/gcc%2Fcp%2Fmethod.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7b0e0273ea01ccc3a8b8065944f89b6d619e787/gcc%2Fcp%2Fmethod.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fmethod.c?ref=c7b0e0273ea01ccc3a8b8065944f89b6d619e787", "patch": "@@ -784,7 +784,7 @@ synthesize_method (tree fndecl)\n       tree arg_chain = FUNCTION_FIRST_USER_PARMTYPE (fndecl);\n       if (arg_chain != void_list_node)\n \tdo_build_copy_constructor (fndecl);\n-      else if (TYPE_NEEDS_CONSTRUCTING (current_class_type))\n+      else\n \tfinish_mem_initializers (NULL_TREE);\n     }\n "}, {"sha": "12987cfab1e63422d01c6641118498a88d91a125", "filename": "gcc/cp/typeck2.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7b0e0273ea01ccc3a8b8065944f89b6d619e787/gcc%2Fcp%2Ftypeck2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7b0e0273ea01ccc3a8b8065944f89b6d619e787/gcc%2Fcp%2Ftypeck2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck2.c?ref=c7b0e0273ea01ccc3a8b8065944f89b6d619e787", "patch": "@@ -1333,9 +1333,9 @@ build_functional_cast (tree exp, tree parms)\n   if (parms && TREE_CHAIN (parms) == NULL_TREE)\n     return build_c_cast (type, TREE_VALUE (parms));\n \n-  /* We need to zero-initialize POD types.  Let's do that for everything\n-     that doesn't need a constructor.  */\n-  if (parms == NULL_TREE && !TYPE_NEEDS_CONSTRUCTING (type)\n+  /* We need to zero-initialize POD types.  */\n+  if (parms == NULL_TREE \n+      && !CLASSTYPE_NON_POD_P (type)\n       && TYPE_HAS_DEFAULT_CONSTRUCTOR (type))\n     {\n       exp = build_constructor (type, NULL);"}, {"sha": "57ec350bd8500dcec5575b78545db3099ed467a2", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7b0e0273ea01ccc3a8b8065944f89b6d619e787/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7b0e0273ea01ccc3a8b8065944f89b6d619e787/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c7b0e0273ea01ccc3a8b8065944f89b6d619e787", "patch": "@@ -1,3 +1,8 @@\n+2006-10-17  Mark Mitchell  <mark@codesourcery.com>\n+\n+\tPR c++/29039\n+\t* g++.dg/init/ctor8.C: New test.\n+\t\n 2006-10-17  Mark Mitchell  <mark@codesourcery.com>\n \n \tPR c++/27270"}, {"sha": "9723892f91cafc5332d0c4d2cc1eefeffc362c7c", "filename": "gcc/testsuite/g++.dg/init/ctor8.C", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7b0e0273ea01ccc3a8b8065944f89b6d619e787/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fctor8.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7b0e0273ea01ccc3a8b8065944f89b6d619e787/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fctor8.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fctor8.C?ref=c7b0e0273ea01ccc3a8b8065944f89b6d619e787", "patch": "@@ -0,0 +1,11 @@\n+// PR c++/29039\n+\n+typedef struct S { // { dg-error \"reference\" }\n+  int &r; \n+};\n+\n+S f () {\n+  return S (); // { dg-error \"synthesized\" }\n+}\n+\n+"}]}