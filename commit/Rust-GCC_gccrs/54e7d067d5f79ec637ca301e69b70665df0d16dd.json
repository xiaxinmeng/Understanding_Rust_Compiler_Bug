{"sha": "54e7d067d5f79ec637ca301e69b70665df0d16dd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTRlN2QwNjdkNWY3OWVjNjM3Y2EzMDFlNjliNzA2NjVkZjBkMTZkZA==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2006-12-30T12:15:16Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2006-12-30T12:15:16Z"}, "message": "ipa-pure-const.c (check_operand): SSA_NAME is safe.\n\n\t* ipa-pure-const.c (check_operand): SSA_NAME is safe.\n\t* ipa-type-escape.c (scan_for_refs): Look into SSA_NAMEs.\n\nFrom-SVN: r120286", "tree": {"sha": "51b0eb0f3a9d7bbca8347803bbb5cb19dffa4988", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/51b0eb0f3a9d7bbca8347803bbb5cb19dffa4988"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/54e7d067d5f79ec637ca301e69b70665df0d16dd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54e7d067d5f79ec637ca301e69b70665df0d16dd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/54e7d067d5f79ec637ca301e69b70665df0d16dd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54e7d067d5f79ec637ca301e69b70665df0d16dd/comments", "author": null, "committer": null, "parents": [{"sha": "b730fa614c4ff07c45ea726a6d6ce3260d268b6f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b730fa614c4ff07c45ea726a6d6ce3260d268b6f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b730fa614c4ff07c45ea726a6d6ce3260d268b6f"}], "stats": {"total": 14, "additions": 12, "deletions": 2}, "files": [{"sha": "b7bae1a1cfdca4a90c01798edea42124c8dbe670", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54e7d067d5f79ec637ca301e69b70665df0d16dd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54e7d067d5f79ec637ca301e69b70665df0d16dd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=54e7d067d5f79ec637ca301e69b70665df0d16dd", "patch": "@@ -1,3 +1,8 @@\n+2006-12-30  Jan Hubicka  <jh@suse.cz>\n+\n+\t* ipa-pure-const.c (check_operand): SSA_NAME is safe.\n+\t* ipa-type-escape.c (scan_for_refs): Look into SSA_NAMEs.\n+\n 2006-12-30  Jan Hubicka  <jh@suse.cz>\n \n \t* tree.h (DECL_CALL_CLOBBERED): Remove."}, {"sha": "5f19af8c61ea3cec91e61bf79fb68a1ddfb0138f", "filename": "gcc/ipa-pure-const.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54e7d067d5f79ec637ca301e69b70665df0d16dd/gcc%2Fipa-pure-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54e7d067d5f79ec637ca301e69b70665df0d16dd/gcc%2Fipa-pure-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-pure-const.c?ref=54e7d067d5f79ec637ca301e69b70665df0d16dd", "patch": "@@ -163,7 +163,8 @@ check_operand (funct_state local,\n static void\n check_tree (funct_state local, tree t, bool checking_write)\n {\n-  if ((TREE_CODE (t) == EXC_PTR_EXPR) || (TREE_CODE (t) == FILTER_EXPR))\n+  if ((TREE_CODE (t) == EXC_PTR_EXPR) || (TREE_CODE (t) == FILTER_EXPR)\n+      || TREE_CODE (t) == SSA_NAME)\n     return;\n \n   /* Any tree which is volatile disqualifies thie function from being"}, {"sha": "7b2fac104bc7bf74d567949801521453365a2a62", "filename": "gcc/ipa-type-escape.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54e7d067d5f79ec637ca301e69b70665df0d16dd/gcc%2Fipa-type-escape.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54e7d067d5f79ec637ca301e69b70665df0d16dd/gcc%2Fipa-type-escape.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-type-escape.c?ref=54e7d067d5f79ec637ca301e69b70665df0d16dd", "patch": "@@ -1267,7 +1267,11 @@ scan_for_refs (tree *tp, int *walk_subtrees, void *data)\n \t\t   result so we do mark the resulting cast as being\n \t\t   bad.  */\n \t\tif (check_call (rhs))\n-\t\t  bitmap_set_bit (results_of_malloc, DECL_UID (lhs));\n+\t\t  {\n+\t\t    if (TREE_CODE (lhs) == SSA_NAME)\n+\t\t      lhs = SSA_NAME_VAR (lhs);\n+\t\t    bitmap_set_bit (results_of_malloc, DECL_UID (lhs));\n+\t\t  }\n \t\tbreak;\n \t      default:\n \t\tbreak;"}]}