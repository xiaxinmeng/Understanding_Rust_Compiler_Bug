{"sha": "c58cb6ac6891886b7aa01c440ac71a5e7cbcba97", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzU4Y2I2YWM2ODkxODg2YjdhYTAxYzQ0MGFjNzFhNWU3Y2JjYmE5Nw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-04-17T07:07:49Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-04-17T07:24:03Z"}, "message": "inliner: Don't ICE on NULL TYPE_DOMAIN [PR94621]\n\nWhen I've added the VLA tweak for OpenMP to avoid error_mark_nodes in the IL in\ntype, I forgot that TYPE_DOMAIN could be NULL.  Furthermore, as an optimization,\nthis patch checks the hopefully cheapest condition that is very likely false\nmost of the time (enabled only during OpenMP handling) first.\n\n2020-04-17  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR tree-optimization/94621\n\t* tree-inline.c (remap_type_1): Don't dereference NULL TYPE_DOMAIN.\n\tMove id->adjust_array_error_bounds check first in the condition.\n\n\t* gcc.c-torture/compile/pr94621.c: New test.", "tree": {"sha": "fdb519f82bc17d195a0d24c169218e70b442661b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fdb519f82bc17d195a0d24c169218e70b442661b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c58cb6ac6891886b7aa01c440ac71a5e7cbcba97", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c58cb6ac6891886b7aa01c440ac71a5e7cbcba97", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c58cb6ac6891886b7aa01c440ac71a5e7cbcba97", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c58cb6ac6891886b7aa01c440ac71a5e7cbcba97/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e9f799d25973fc38022c5ea71ed5a2bca58a847f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9f799d25973fc38022c5ea71ed5a2bca58a847f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e9f799d25973fc38022c5ea71ed5a2bca58a847f"}], "stats": {"total": 30, "additions": 28, "deletions": 2}, "files": [{"sha": "80b0534ba51f3b60c4d12a9a8c5d4ef5e45067dd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c58cb6ac6891886b7aa01c440ac71a5e7cbcba97/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c58cb6ac6891886b7aa01c440ac71a5e7cbcba97/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c58cb6ac6891886b7aa01c440ac71a5e7cbcba97", "patch": "@@ -1,3 +1,9 @@\n+2020-04-17  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/94621\n+\t* tree-inline.c (remap_type_1): Don't dereference NULL TYPE_DOMAIN.\n+\tMove id->adjust_array_error_bounds check first in the condition.\n+\n 2020-04-17  Martin Liska  <mliska@suse.cz>\n \t    Jonathan Yong <10walls@gmail.com>\n "}, {"sha": "64181e4e532f0dc57c9f74264a7d4d011b01ba0e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c58cb6ac6891886b7aa01c440ac71a5e7cbcba97/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c58cb6ac6891886b7aa01c440ac71a5e7cbcba97/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c58cb6ac6891886b7aa01c440ac71a5e7cbcba97", "patch": "@@ -1,5 +1,8 @@\n 2020-04-17  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR tree-optimization/94621\n+\t* gcc.c-torture/compile/pr94621.c: New test.\n+\n \tPR c++/94314\n \t* g++.dg/pr94314-4.C: Require c++14 rather than c++11.\n "}, {"sha": "0d98dfd53a5b6be92ab9f26ef929499bff683715", "filename": "gcc/testsuite/gcc.c-torture/compile/pr94621.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c58cb6ac6891886b7aa01c440ac71a5e7cbcba97/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr94621.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c58cb6ac6891886b7aa01c440ac71a5e7cbcba97/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr94621.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr94621.c?ref=c58cb6ac6891886b7aa01c440ac71a5e7cbcba97", "patch": "@@ -0,0 +1,16 @@\n+/* PR tree-optimization/94621 */\n+\n+struct S { int c, e[]; };\n+\n+static inline int\n+foo (struct S *m, int r, int c)\n+{\n+  int (*a)[][m->c] = (int (*)[][m->c])&m->e;\n+  return (*a)[r][c];\n+}\n+\n+void\n+bar (struct S *a)\n+{\n+  foo (a, 0, 0);\n+}"}, {"sha": "26c23f504be9c2d6cdf474d42d2ee1d1cf116dbb", "filename": "gcc/tree-inline.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c58cb6ac6891886b7aa01c440ac71a5e7cbcba97/gcc%2Ftree-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c58cb6ac6891886b7aa01c440ac71a5e7cbcba97/gcc%2Ftree-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-inline.c?ref=c58cb6ac6891886b7aa01c440ac71a5e7cbcba97", "patch": "@@ -556,8 +556,9 @@ remap_type_1 (tree type, copy_body_data *id)\n \t  /* For array bounds where we have decided not to copy over the bounds\n \t     variable which isn't used in OpenMP/OpenACC region, change them to\n \t     an uninitialized VAR_DECL temporary.  */\n-\t  if (TYPE_MAX_VALUE (TYPE_DOMAIN (new_tree)) == error_mark_node\n-\t      && id->adjust_array_error_bounds\n+\t  if (id->adjust_array_error_bounds\n+\t      && TYPE_DOMAIN (new_tree)\n+\t      && TYPE_MAX_VALUE (TYPE_DOMAIN (new_tree)) == error_mark_node\n \t      && TYPE_MAX_VALUE (TYPE_DOMAIN (type)) != error_mark_node)\n \t    {\n \t      tree v = create_tmp_var (TREE_TYPE (TYPE_DOMAIN (new_tree)));"}]}