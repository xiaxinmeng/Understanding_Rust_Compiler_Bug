{"sha": "da4f13a4f963da5ff78c01f7bf693c1923e82038", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGE0ZjEzYTRmOTYzZGE1ZmY3OGMwMWY3YmY2OTNjMTkyM2U4MjAzOA==", "commit": {"author": {"name": "Marcus Shawcroft", "email": "marcus.shawcroft@arm.com", "date": "2013-06-28T12:26:20Z"}, "committer": {"name": "Marcus Shawcroft", "email": "mshawcroft@gcc.gnu.org", "date": "2013-06-28T12:26:20Z"}, "message": "[AArch64] Remove aarch64_symbolic_constant_p.\n\nFrom-SVN: r200519", "tree": {"sha": "0ca65db91b87450575315069d30bcfd09eb08873", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0ca65db91b87450575315069d30bcfd09eb08873"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/da4f13a4f963da5ff78c01f7bf693c1923e82038", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da4f13a4f963da5ff78c01f7bf693c1923e82038", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da4f13a4f963da5ff78c01f7bf693c1923e82038", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da4f13a4f963da5ff78c01f7bf693c1923e82038/comments", "author": {"login": "mshawcroft", "id": 6357566, "node_id": "MDQ6VXNlcjYzNTc1NjY=", "avatar_url": "https://avatars.githubusercontent.com/u/6357566?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mshawcroft", "html_url": "https://github.com/mshawcroft", "followers_url": "https://api.github.com/users/mshawcroft/followers", "following_url": "https://api.github.com/users/mshawcroft/following{/other_user}", "gists_url": "https://api.github.com/users/mshawcroft/gists{/gist_id}", "starred_url": "https://api.github.com/users/mshawcroft/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mshawcroft/subscriptions", "organizations_url": "https://api.github.com/users/mshawcroft/orgs", "repos_url": "https://api.github.com/users/mshawcroft/repos", "events_url": "https://api.github.com/users/mshawcroft/events{/privacy}", "received_events_url": "https://api.github.com/users/mshawcroft/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "956a95a55f0202fe833a3652af1ffca2b8bdae01", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/956a95a55f0202fe833a3652af1ffca2b8bdae01", "html_url": "https://github.com/Rust-GCC/gccrs/commit/956a95a55f0202fe833a3652af1ffca2b8bdae01"}], "stats": {"total": 45, "additions": 20, "deletions": 25}, "files": [{"sha": "129a608212487107b277fd05318f407280b23603", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da4f13a4f963da5ff78c01f7bf693c1923e82038/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da4f13a4f963da5ff78c01f7bf693c1923e82038/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=da4f13a4f963da5ff78c01f7bf693c1923e82038", "patch": "@@ -1,3 +1,14 @@\n+2013-06-28  Marcus Shawcroft  <marcus.shawcroft@arm.com>\n+\n+\t* config/aarch64/aarch64-protos.h\n+\taarch64_classify_symbol_expression): Define.\n+\t(aarch64_symbolic_constant_p): Remove.\n+\t* config/aarch64/aarch64.c (aarch64_classify_symbol_expression): Remove\n+\tstatic.  Fix line length and white space.\n+\t(aarch64_symbolic_constant_p): Remove.\n+\t* config/aarch64/predicates.md (aarch64_valid_symref):\n+\tUse aarch64_classify_symbol_expression.\n+\n 2013-06-28  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \t* config/arm/constraints.md (Ts): New constraint."}, {"sha": "c9d64c667120d7077390c2b43e3c507527ea7a90", "filename": "gcc/config/aarch64/aarch64-protos.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da4f13a4f963da5ff78c01f7bf693c1923e82038/gcc%2Fconfig%2Faarch64%2Faarch64-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da4f13a4f963da5ff78c01f7bf693c1923e82038/gcc%2Fconfig%2Faarch64%2Faarch64-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-protos.h?ref=da4f13a4f963da5ff78c01f7bf693c1923e82038", "patch": "@@ -137,6 +137,8 @@ struct tune_params\n \n HOST_WIDE_INT aarch64_initial_elimination_offset (unsigned, unsigned);\n bool aarch64_bitmask_imm (HOST_WIDE_INT val, enum machine_mode);\n+enum aarch64_symbol_type\n+aarch64_classify_symbolic_expression (rtx, enum aarch64_symbol_context);\n bool aarch64_constant_address_p (rtx);\n bool aarch64_float_const_zero_rtx_p (rtx);\n bool aarch64_function_arg_regno_p (unsigned);\n@@ -162,8 +164,6 @@ bool aarch64_simd_shift_imm_p (rtx, enum machine_mode, bool);\n bool aarch64_simd_valid_immediate (rtx, enum machine_mode, bool,\n \t\t\t\t   struct simd_immediate_info *);\n bool aarch64_symbolic_address_p (rtx);\n-bool aarch64_symbolic_constant_p (rtx, enum aarch64_symbol_context,\n-\t\t\t\t  enum aarch64_symbol_type *);\n bool aarch64_uimm12_shift (HOST_WIDE_INT);\n const char *aarch64_output_casesi (rtx *);\n enum aarch64_symbol_type aarch64_classify_symbol (rtx,"}, {"sha": "dea3bf6f26ebef7ca4a61f26bac0776bcef814b4", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 5, "deletions": 20, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da4f13a4f963da5ff78c01f7bf693c1923e82038/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da4f13a4f963da5ff78c01f7bf693c1923e82038/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=da4f13a4f963da5ff78c01f7bf693c1923e82038", "patch": "@@ -3130,10 +3130,13 @@ aarch64_symbolic_address_p (rtx x)\n \n /* Classify the base of symbolic expression X, given that X appears in\n    context CONTEXT.  */\n-static enum aarch64_symbol_type\n-aarch64_classify_symbolic_expression (rtx x, enum aarch64_symbol_context context)\n+\n+enum aarch64_symbol_type\n+aarch64_classify_symbolic_expression (rtx x,\n+\t\t\t\t      enum aarch64_symbol_context context)\n {\n   rtx offset;\n+\n   split_const (x, &x, &offset);\n   return aarch64_classify_symbol (x, context);\n }\n@@ -5134,24 +5137,6 @@ aarch64_classify_symbol (rtx x,\n   return SYMBOL_FORCE_TO_MEM;\n }\n \n-/* Return true if X is a symbolic constant that can be used in context\n-   CONTEXT.  If it is, store the type of the symbol in *SYMBOL_TYPE.  */\n-\n-bool\n-aarch64_symbolic_constant_p (rtx x, enum aarch64_symbol_context context,\n-\t\t\t     enum aarch64_symbol_type *symbol_type)\n-{\n-  rtx offset;\n-  split_const (x, &x, &offset);\n-  if (GET_CODE (x) == SYMBOL_REF || GET_CODE (x) == LABEL_REF)\n-    *symbol_type = aarch64_classify_symbol (x, context);\n-  else\n-    return false;\n-\n-  /* No checking of offset at this point.  */\n-  return true;\n-}\n-\n bool\n aarch64_constant_address_p (rtx x)\n {"}, {"sha": "3e2b6b34357337aa94f8e55ecb77abaf1e95771d", "filename": "gcc/config/aarch64/predicates.md", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da4f13a4f963da5ff78c01f7bf693c1923e82038/gcc%2Fconfig%2Faarch64%2Fpredicates.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da4f13a4f963da5ff78c01f7bf693c1923e82038/gcc%2Fconfig%2Faarch64%2Fpredicates.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Fpredicates.md?ref=da4f13a4f963da5ff78c01f7bf693c1923e82038", "patch": "@@ -118,9 +118,8 @@\n (define_predicate \"aarch64_valid_symref\"\n   (match_code \"const, symbol_ref, label_ref\")\n {\n-  enum aarch64_symbol_type symbol_type;\n-  return (aarch64_symbolic_constant_p (op, SYMBOL_CONTEXT_ADR, &symbol_type)\n-\t && symbol_type != SYMBOL_FORCE_TO_MEM);\n+  return (aarch64_classify_symbolic_expression (op, SYMBOL_CONTEXT_ADR)\n+\t  != SYMBOL_FORCE_TO_MEM);\n })\n \n (define_predicate \"aarch64_tls_ie_symref\""}]}