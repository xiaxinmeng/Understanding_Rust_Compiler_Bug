{"sha": "444b39959c3515529988f1b67974f46cddbb7976", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDQ0YjM5OTU5YzM1MTU1Mjk5ODhmMWI2Nzk3NGY0NmNkZGJiNzk3Ng==", "commit": {"author": {"name": "Xinliang David Li", "email": "davidxl@google.com", "date": "2011-04-19T16:48:40Z"}, "committer": {"name": "Xinliang David Li", "email": "davidxl@gcc.gnu.org", "date": "2011-04-19T16:48:40Z"}, "message": "revert 172213 and add assertion\n\nFrom-SVN: r172722", "tree": {"sha": "b761a2ebc50f88e931330b62899b2971018be996", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b761a2ebc50f88e931330b62899b2971018be996"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/444b39959c3515529988f1b67974f46cddbb7976", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/444b39959c3515529988f1b67974f46cddbb7976", "html_url": "https://github.com/Rust-GCC/gccrs/commit/444b39959c3515529988f1b67974f46cddbb7976", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/444b39959c3515529988f1b67974f46cddbb7976/comments", "author": {"login": "vns-mn", "id": 57157229, "node_id": "MDQ6VXNlcjU3MTU3MjI5", "avatar_url": "https://avatars.githubusercontent.com/u/57157229?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vns-mn", "html_url": "https://github.com/vns-mn", "followers_url": "https://api.github.com/users/vns-mn/followers", "following_url": "https://api.github.com/users/vns-mn/following{/other_user}", "gists_url": "https://api.github.com/users/vns-mn/gists{/gist_id}", "starred_url": "https://api.github.com/users/vns-mn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vns-mn/subscriptions", "organizations_url": "https://api.github.com/users/vns-mn/orgs", "repos_url": "https://api.github.com/users/vns-mn/repos", "events_url": "https://api.github.com/users/vns-mn/events{/privacy}", "received_events_url": "https://api.github.com/users/vns-mn/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d708ce50e3a360ff34f855ce9089b040d1c87d74", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d708ce50e3a360ff34f855ce9089b040d1c87d74", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d708ce50e3a360ff34f855ce9089b040d1c87d74"}], "stats": {"total": 33, "additions": 11, "deletions": 22}, "files": [{"sha": "9956f1aa0267d1311fa0d914b1ba094019154cd3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/444b39959c3515529988f1b67974f46cddbb7976/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/444b39959c3515529988f1b67974f46cddbb7976/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=444b39959c3515529988f1b67974f46cddbb7976", "patch": "@@ -1,3 +1,8 @@\n+2011-04-19  Xinliang David Li  <davidxl@google.com>\n+\t\n+\t* ipa-cp.c (ipcp_update_profiling): asserting\n+\tscale_completement is not negative.\n+\n 2011-04-19  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/48678\n@@ -1652,6 +1657,11 @@\n \t* ipa-cp.c (ipcp_update_profiling): Correct negative scale factor due\n \tto insane profile data.\n \n+2011-04-08  Xinliang David Li  <davidxl@google.com>\n+\n+\t* ipa-cp.c (ipcp_update_profiling): Correct\n+\t negative scale factor due to insane profile data.\n+\n 2011-04-08  Xinliang David Li  <davidxl@google.com>\n \n \t* final.c (dump_basic_block_info): New function."}, {"sha": "261d0741261f0689e945c86462505b7804fb5de9", "filename": "gcc/ipa-cp.c", "status": "modified", "additions": 1, "deletions": 22, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/444b39959c3515529988f1b67974f46cddbb7976/gcc%2Fipa-cp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/444b39959c3515529988f1b67974f46cddbb7976/gcc%2Fipa-cp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-cp.c?ref=444b39959c3515529988f1b67974f46cddbb7976", "patch": "@@ -1115,28 +1115,7 @@ ipcp_update_profiling (void)\n \t  node->count = orig_node->count * scale / REG_BR_PROB_BASE;\n \t  scale_complement = REG_BR_PROB_BASE - scale;\n \n-          /* Negative scale complement can result from insane profile data\n-             in which the total incoming edge counts in this module is\n-             larger than the callee's entry count. The insane profile data\n-             usually gets generated due to the following reasons:\n-\n-             1) in multithreaded programs, when profile data is dumped\n-             to gcda files in gcov_exit, some other threads are still running.\n-             The profile counters are dumped in bottom up order (call graph).\n-             The caller's BB counters may still be updated while the callee's\n-             counter data is already saved to disk.\n-\n-             2) Comdat functions: comdat functions' profile data are not\n-             allocated in comdat. When a comdat callee function gets inlined\n-             at some callsites after instrumentation, and the remaining calls\n-             to this function resolves to a comdat copy in another module,\n-             the profile counters for this function are split. This can\n-             result in sum of incoming edge counts from this module being\n-             larger than callee instance's entry count.  */\n-\n-          if (scale_complement < 0 && flag_profile_correction)\n-            scale_complement = 0;\n-\n+\t  gcc_assert (scale_complement >= 0);\n \t  orig_node->count =\n \t    orig_node->count * scale_complement / REG_BR_PROB_BASE;\n \t  for (cs = node->callees; cs; cs = cs->next_callee)"}]}