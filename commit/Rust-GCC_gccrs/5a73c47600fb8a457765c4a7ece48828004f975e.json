{"sha": "5a73c47600fb8a457765c4a7ece48828004f975e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWE3M2M0NzYwMGZiOGE0NTc3NjVjNGE3ZWNlNDg4MjgwMDRmOTc1ZQ==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2008-09-20T15:07:46Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2008-09-20T15:07:46Z"}, "message": "re PR target/37571 (Performance regression due to compare/branch fuse optimization)\n\n2008-09-20  H.J. Lu  <hongjiu.lu@intel.com>\n\n\tPR target/37571\n\t* config/i386/i386.md (*jcc_fused_1): Removed.\n\t(*jcc_fused_2): Likewise.\n\t(*jcc_fused_3): Likewise.\n\t(*jcc_fused_4): Likewise.\n\nFrom-SVN: r140514", "tree": {"sha": "92080d52ab42d0e5300b6dbffce5e0a03eac667c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/92080d52ab42d0e5300b6dbffce5e0a03eac667c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5a73c47600fb8a457765c4a7ece48828004f975e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a73c47600fb8a457765c4a7ece48828004f975e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5a73c47600fb8a457765c4a7ece48828004f975e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a73c47600fb8a457765c4a7ece48828004f975e/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7fda15966e1c2f6613cef8c30c26cc05dba2e590", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7fda15966e1c2f6613cef8c30c26cc05dba2e590", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7fda15966e1c2f6613cef8c30c26cc05dba2e590"}], "stats": {"total": 78, "additions": 8, "deletions": 70}, "files": [{"sha": "0727302553e289bd42aeac2c04ee88bb9adf1d07", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a73c47600fb8a457765c4a7ece48828004f975e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a73c47600fb8a457765c4a7ece48828004f975e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5a73c47600fb8a457765c4a7ece48828004f975e", "patch": "@@ -1,3 +1,11 @@\n+2008-09-20  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/37571\n+\t* config/i386/i386.md (*jcc_fused_1): Removed.\n+\t(*jcc_fused_2): Likewise.\n+\t(*jcc_fused_3): Likewise.\n+\t(*jcc_fused_4): Likewise.\n+\n 2008-09-20  Richard Sandiford  <rdsandiford@googlemail.com>\n \n \t* doc/tm.texi (TARGET_IRA_COVER_CLASSES): Define."}, {"sha": "de58df39edc813eabdc3c6c4c81270297cd366d3", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 0, "deletions": 70, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a73c47600fb8a457765c4a7ece48828004f975e/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a73c47600fb8a457765c4a7ece48828004f975e/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=5a73c47600fb8a457765c4a7ece48828004f975e", "patch": "@@ -14267,76 +14267,6 @@\n \t     (const_int 2)\n \t     (const_int 6)))])\n \n-;; ??? Handle alignment requirements for compare and branch fused macro-op;\n-;; the branch instruction does not start at a 16-byte boundary or cross\n-;; a 16-byte boundary.\n-\n-(define_insn \"*jcc_fused_1\"\n-  [(set (pc)\n-\t(if_then_else (match_operator 1 \"comparison_operator\"\n-\t\t\t[(match_operand:SWI32 2 \"register_operand\" \"<r>\")\n-\t\t\t (match_operand:SWI32 3 \"const0_operand\" \"\")])\n-\t (label_ref (match_operand 0 \"\" \"\"))\n-\t (pc)))]\n-  \"TARGET_FUSE_CMP_AND_BRANCH && !TARGET_64BIT\"\n-{\n-  return \"test{<imodesuffix>}\\t%2, %2\\n\\t\"\n-\t \"%+j%E1\\t%l0\\t\" ASM_COMMENT_START \" fused\";\n-}\n-  [(set_attr \"type\" \"multi\")\n-   (set_attr \"mode\" \"<MODE>\")])\n-\n-(define_insn \"*jcc_fused_2\"\n-  [(set (pc)\n-\t(if_then_else (match_operator 1 \"comparison_operator\"\n-\t\t\t[(match_operand:SWI32 2 \"register_operand\" \"<r>\")\n-\t\t\t (match_operand:SWI32 3 \"const0_operand\" \"\")])\n-\t (pc)\n-\t (label_ref (match_operand 0 \"\" \"\"))))]\n-  \"TARGET_FUSE_CMP_AND_BRANCH && !TARGET_64BIT\"\n-{\n-  return \"test{<imodesuffix>}\\t%2, %2\\n\\t\"\n-\t \"%+j%e1\\t%l0\\t\" ASM_COMMENT_START \" fused\";\n-}\n-  [(set_attr \"type\" \"multi\")\n-   (set_attr \"mode\" \"<MODE>\")])\n-\n-(define_insn \"*jcc_fused_3\"\n-  [(set (pc)\n-\t(if_then_else\n-\t  (match_operator 1 \"ix86_comparison_uns_operator\"\n-\t    [(match_operand:SWI32 2 \"nonimmediate_operand\" \"<r>,m,<r>\")\n-\t     (match_operand:SWI32 3 \"<general_operand>\" \"<r><i>,<r>,m\")])\n-\t (label_ref (match_operand 0 \"\" \"\"))\n-\t (pc)))]\n-  \"TARGET_FUSE_CMP_AND_BRANCH && !TARGET_64BIT\n-   && !(MEM_P (operands[2])\n-\t&& (MEM_P (operands[3]) || CONST_INT_P (operands[3])))\"\n-{\n-  return \"cmp{<imodesuffix>}\\t{%3, %2|%2, %3}\\n\\t\"\n-\t \"%+j%E1\\t%l0\\t\" ASM_COMMENT_START \" fused\";\n-}\n-  [(set_attr \"type\" \"multi\")\n-   (set_attr \"mode\" \"<MODE>\")])\n-\n-(define_insn \"*jcc_fused_4\"\n-  [(set (pc)\n-\t(if_then_else\n-\t  (match_operator 1 \"ix86_comparison_uns_operator\"\n-\t    [(match_operand:SWI32 2 \"nonimmediate_operand\" \"<r>,m,<r>\")\n-\t     (match_operand:SWI32 3 \"<general_operand>\" \"<r><i>,<r>,m\")])\n-\t (pc)\n-\t (label_ref (match_operand 0 \"\" \"\"))))]\n-  \"TARGET_FUSE_CMP_AND_BRANCH && !TARGET_64BIT\n-   && !(MEM_P (operands[2])\n-\t&& (MEM_P (operands[3]) || CONST_INT_P (operands[3])))\"\n-{\n-  return \"cmp{<imodesuffix>}\\t{%3, %2|%2, %3}\\n\\t\"\n-\t \"%+j%e1\\t%l0\\t\" ASM_COMMENT_START \" fused\";\n-}\n-  [(set_attr \"type\" \"multi\")\n-   (set_attr \"mode\" \"<MODE>\")])\n-\n ;; In general it is not safe to assume too much about CCmode registers,\n ;; so simplify-rtx stops when it sees a second one.  Under certain\n ;; conditions this is safe on x86, so help combine not create"}]}