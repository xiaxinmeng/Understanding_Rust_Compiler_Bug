{"sha": "92805612f4e0cdd33e10282eaf2cc0369bca3293", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTI4MDU2MTJmNGUwY2RkMzNlMTAyODJlYWYyY2MwMzY5YmNhMzI5Mw==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2016-10-05T12:01:57Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2016-10-05T12:01:57Z"}, "message": "PR 70101 fix allocator-extended ctors for std::priority_queue\n\n\tPR libstdc++/70101\n\t* include/bits/stl_queue.h (priority_queue): Fix allocator-extended\n\tconstructors.\n\t* testsuite/23_containers/priority_queue/allocator.cc: New test.\n\nFrom-SVN: r240781", "tree": {"sha": "29862dbb05dea5afe75206b023fe6e3755a2bd8c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/29862dbb05dea5afe75206b023fe6e3755a2bd8c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/92805612f4e0cdd33e10282eaf2cc0369bca3293", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92805612f4e0cdd33e10282eaf2cc0369bca3293", "html_url": "https://github.com/Rust-GCC/gccrs/commit/92805612f4e0cdd33e10282eaf2cc0369bca3293", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92805612f4e0cdd33e10282eaf2cc0369bca3293/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a2a64b499a0251618fc156cc70c31a9692d079be", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2a64b499a0251618fc156cc70c31a9692d079be", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a2a64b499a0251618fc156cc70c31a9692d079be"}], "stats": {"total": 79, "additions": 73, "deletions": 6}, "files": [{"sha": "7035f54068a37034039e2ab189e2adcd2610f2ab", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92805612f4e0cdd33e10282eaf2cc0369bca3293/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92805612f4e0cdd33e10282eaf2cc0369bca3293/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=92805612f4e0cdd33e10282eaf2cc0369bca3293", "patch": "@@ -1,5 +1,10 @@\n 2016-10-05  Jonathan Wakely  <jwakely@redhat.com>\n \n+\tPR libstdc++/70101\n+\t* include/bits/stl_queue.h (priority_queue): Fix allocator-extended\n+\tconstructors.\n+\t* testsuite/23_containers/priority_queue/allocator.cc: New test.\n+\n \tPR libstdc++/77864\n \t* include/bits/stl_map.h (map::map()): Use nothrow constructibility\n \tof comparison function in conditional noexcept."}, {"sha": "843199c5b0605ed1abc11bb68c114ee374b1e409", "filename": "libstdc++-v3/include/bits/stl_queue.h", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92805612f4e0cdd33e10282eaf2cc0369bca3293/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_queue.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92805612f4e0cdd33e10282eaf2cc0369bca3293/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_queue.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_queue.h?ref=92805612f4e0cdd33e10282eaf2cc0369bca3293", "patch": "@@ -462,28 +462,28 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       template<typename _Alloc, typename _Requires = _Uses<_Alloc>>\n \texplicit\n \tpriority_queue(const _Alloc& __a)\n-\t: c(__a) { }\n+\t: c(__a), comp() { }\n \n       template<typename _Alloc, typename _Requires = _Uses<_Alloc>>\n \tpriority_queue(const _Compare& __x, const _Alloc& __a)\n-\t: c(__x, __a) { }\n+\t: c(__a), comp(__x) { }\n \n       template<typename _Alloc, typename _Requires = _Uses<_Alloc>>\n \tpriority_queue(const _Compare& __x, const _Sequence& __c,\n \t\t       const _Alloc& __a)\n-\t: c(__x, __c, __a) { }\n+\t: c(__c, __a), comp(__x) { }\n \n       template<typename _Alloc, typename _Requires = _Uses<_Alloc>>\n \tpriority_queue(const _Compare& __x, _Sequence&& __c, const _Alloc& __a)\n-\t: c(__x, std::move(__c), __a) { }\n+\t: c(std::move(__c), __a), comp(__x) { }\n \n       template<typename _Alloc, typename _Requires = _Uses<_Alloc>>\n \tpriority_queue(const priority_queue& __q, const _Alloc& __a)\n-\t: c(__q.c, __a) { }\n+\t: c(__q.c, __a), comp(__q.comp) { }\n \n       template<typename _Alloc, typename _Requires = _Uses<_Alloc>>\n \tpriority_queue(priority_queue&& __q, const _Alloc& __a)\n-\t: c(std::move(__q.c), __a) { }\n+\t: c(std::move(__q.c), __a), comp(std::move(__q.comp)) { }\n #endif\n \n       /**"}, {"sha": "dd6ca259c64530d505b0656086bf2d964863728d", "filename": "libstdc++-v3/testsuite/23_containers/priority_queue/allocator.cc", "status": "added", "additions": 62, "deletions": 0, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92805612f4e0cdd33e10282eaf2cc0369bca3293/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fpriority_queue%2Fallocator.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92805612f4e0cdd33e10282eaf2cc0369bca3293/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fpriority_queue%2Fallocator.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fpriority_queue%2Fallocator.cc?ref=92805612f4e0cdd33e10282eaf2cc0369bca3293", "patch": "@@ -0,0 +1,62 @@\n+// Copyright (C) 2016 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-do run { target c++11 } }\n+\n+#include <queue>\n+#include <testsuite_hooks.h>\n+\n+// PR libstdc++/70101\n+\n+struct comp\n+{\n+  int init_check[64];\n+  bool operator()(int l, int r) const { return l < r; }\n+};\n+\n+struct check_init : std::priority_queue<int, std::vector<int>, comp>\n+{\n+  template<typename... Args>\n+    check_init(Args... args) : priority_queue(args...)\n+    {\n+      push(0);\n+\n+      for (int i : comp.init_check)\n+        VERIFY( i == 0 );  // Will not fail if *this was value-initialized.\n+    }\n+};\n+\n+void\n+test01()\n+{\n+  std::vector<int> vec;\n+  comp cmp{};\n+  std::allocator<int> alloc;\n+  std::priority_queue<int, std::vector<int>, comp> pq;\n+  check_init c1( pq, alloc );\n+  check_init c2( std::move(pq), alloc );\n+  check_init c3( alloc );\n+  check_init c4( cmp, alloc );\n+  check_init c5( cmp, vec, alloc );\n+  check_init c6( cmp, std::move(vec), alloc );\n+}\n+\n+int\n+main()\n+{\n+  test01();\n+}"}]}