{"sha": "6fe2f65a17ba8ccadca8e944ce11833bfcbcfb48", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmZlMmY2NWExN2JhOGNjYWRjYThlOTQ0Y2UxMTgzM2JmY2JjZmI0OA==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2008-05-27T13:10:18Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2008-05-27T13:10:18Z"}, "message": "re PR tree-optimization/36245 (internal compiler error: in build2_stat, at tree.c:3116)\n\n2008-05-27  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/36245\n\t* tree-ssa-address.c (add_to_parts): Deal with non-pointer\n\tbases.\n\n\t* gcc.c-torture/compile/pr36245.c: New testcase.\n\nFrom-SVN: r136029", "tree": {"sha": "9e81ea9a2cfa2b3f17aa296af3fde266bee91de1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9e81ea9a2cfa2b3f17aa296af3fde266bee91de1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6fe2f65a17ba8ccadca8e944ce11833bfcbcfb48", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6fe2f65a17ba8ccadca8e944ce11833bfcbcfb48", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6fe2f65a17ba8ccadca8e944ce11833bfcbcfb48", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6fe2f65a17ba8ccadca8e944ce11833bfcbcfb48/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "35b80405185fd3f8603c3dea781a29d0e6617262", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35b80405185fd3f8603c3dea781a29d0e6617262", "html_url": "https://github.com/Rust-GCC/gccrs/commit/35b80405185fd3f8603c3dea781a29d0e6617262"}], "stats": {"total": 16, "additions": 13, "deletions": 3}, "files": [{"sha": "bbe6eec73f85e9ace6ba4cfec6ca523746d4053f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6fe2f65a17ba8ccadca8e944ce11833bfcbcfb48/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6fe2f65a17ba8ccadca8e944ce11833bfcbcfb48/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6fe2f65a17ba8ccadca8e944ce11833bfcbcfb48", "patch": "@@ -1,3 +1,9 @@\n+2008-05-27  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/36245\n+\t* tree-ssa-address.c (add_to_parts): Deal with non-pointer\n+\tbases.\n+\n 2008-05-27  Andreas Krebbel  <krebbel1@de.ibm.com>\n \n \t* config/s390/s390.md: Replace all occurences of the 'm'"}, {"sha": "55d43a5e362a7f59459f148abcc302f97dbaa888", "filename": "gcc/tree-ssa-address.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6fe2f65a17ba8ccadca8e944ce11833bfcbcfb48/gcc%2Ftree-ssa-address.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6fe2f65a17ba8ccadca8e944ce11833bfcbcfb48/gcc%2Ftree-ssa-address.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-address.c?ref=6fe2f65a17ba8ccadca8e944ce11833bfcbcfb48", "patch": "@@ -423,9 +423,13 @@ add_to_parts (struct mem_address *parts, tree elt)\n \n   /* Add ELT to base.  */\n   type = TREE_TYPE (parts->base);\n-  parts->base = fold_build2 (POINTER_PLUS_EXPR, type,\n-\t\t\t     parts->base,\n-\t\t\t     fold_convert (sizetype, elt));\n+  if (POINTER_TYPE_P (type))\n+    parts->base = fold_build2 (POINTER_PLUS_EXPR, type,\n+\t\t\t       parts->base,\n+\t\t\t       fold_convert (sizetype, elt));\n+  else\n+    parts->base = fold_build2 (PLUS_EXPR, type,\n+\t\t\t       parts->base, elt);\n }\n \n /* Finds the most expensive multiplication in ADDR that can be"}]}