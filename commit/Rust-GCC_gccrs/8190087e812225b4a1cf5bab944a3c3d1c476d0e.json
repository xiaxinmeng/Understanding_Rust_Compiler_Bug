{"sha": "8190087e812225b4a1cf5bab944a3c3d1c476d0e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODE5MDA4N2U4MTIyMjViNGExY2Y1YmFiOTQ0YTNjM2QxYzQ3NmQwZQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-01-03T11:12:15Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-01-03T11:12:15Z"}, "message": "[multiple changes]\n\n2013-01-03  Thomas Quinot  <quinot@adacore.com>\n\n\t* gnat_rm.texi, freeze.adb (Check_Component_Storage_Order): Check that\n\ta record extension has the same scalar storage order as the parent type.\n\n2013-01-03  Thomas Quinot  <quinot@adacore.com>\n\n\t* exp_ch4.adb: Add comment.\n\n2013-01-03  Vincent Celier  <celier@adacore.com>\n\n\t* prj.adb: Minor spelling error correction in comment.\n\n2013-01-03  Vincent Celier  <celier@adacore.com>\n\n\t* gnatcmd.adb (GNATCmd): If a single main has been specified\n\tas an absolute path, use its simple file name to find specific\n\tswitches, instead of the absolute path.\n\n2013-01-03  Javier Miranda  <miranda@adacore.com>\n\n\t* sem_warn.adb (Warn_On_Overlapping_Actuals): For overlapping\n\tparameters that are record types or array types generate warnings\n\tonly compiling under -gnatw.i\n\t* opt.ads (Extensions_Allowed): Restore previous documentation.\n\n2013-01-03  Vincent Celier  <celier@adacore.com>\n\n\t* prj-conf.adb (Do_Autoconf): If Target is specified in the\n\tmain project, but not on the command line, use the Target in\n\tthe project to invoke gprconfig in auto-configuration.\n\t* makeutl.ads (Default_Config_Name): New constant String.\n\n2013-01-03  Arnaud Charlet  <charlet@adacore.com>\n\n\t* usage.adb: Minor: fix typo in usage.\n\n2013-01-03  Thomas Quinot  <quinot@adacore.com>\n\n\t* sem_ch13.adb (Analyze_Record_Representation_Clause): Reject\n\tan illegal component clause for an inherited component in a\n\trecord extension.\n\nFrom-SVN: r194849", "tree": {"sha": "350e960ba4b34da39e02ac8ef4aa2a786cd24b4f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/350e960ba4b34da39e02ac8ef4aa2a786cd24b4f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8190087e812225b4a1cf5bab944a3c3d1c476d0e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8190087e812225b4a1cf5bab944a3c3d1c476d0e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8190087e812225b4a1cf5bab944a3c3d1c476d0e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8190087e812225b4a1cf5bab944a3c3d1c476d0e/comments", "author": null, "committer": null, "parents": [{"sha": "6f5c2c4b49db5e9eafff76c7beae96e585afbfe6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f5c2c4b49db5e9eafff76c7beae96e585afbfe6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6f5c2c4b49db5e9eafff76c7beae96e585afbfe6"}], "stats": {"total": 234, "additions": 189, "deletions": 45}, "files": [{"sha": "6ef186d2a3ee12dcf1cc464e318ba696527c3b5e", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8190087e812225b4a1cf5bab944a3c3d1c476d0e/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8190087e812225b4a1cf5bab944a3c3d1c476d0e/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=8190087e812225b4a1cf5bab944a3c3d1c476d0e", "patch": "@@ -1,3 +1,46 @@\n+2013-01-03  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* gnat_rm.texi, freeze.adb (Check_Component_Storage_Order): Check that\n+\ta record extension has the same scalar storage order as the parent type.\n+\n+2013-01-03  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* exp_ch4.adb: Add comment.\n+\n+2013-01-03  Vincent Celier  <celier@adacore.com>\n+\n+\t* prj.adb: Minor spelling error correction in comment.\n+\n+2013-01-03  Vincent Celier  <celier@adacore.com>\n+\n+\t* gnatcmd.adb (GNATCmd): If a single main has been specified\n+\tas an absolute path, use its simple file name to find specific\n+\tswitches, instead of the absolute path.\n+\n+2013-01-03  Javier Miranda  <miranda@adacore.com>\n+\n+\t* sem_warn.adb (Warn_On_Overlapping_Actuals): For overlapping\n+\tparameters that are record types or array types generate warnings\n+\tonly compiling under -gnatw.i\n+\t* opt.ads (Extensions_Allowed): Restore previous documentation.\n+\n+2013-01-03  Vincent Celier  <celier@adacore.com>\n+\n+\t* prj-conf.adb (Do_Autoconf): If Target is specified in the\n+\tmain project, but not on the command line, use the Target in\n+\tthe project to invoke gprconfig in auto-configuration.\n+\t* makeutl.ads (Default_Config_Name): New constant String.\n+\n+2013-01-03  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* usage.adb: Minor: fix typo in usage.\n+\n+2013-01-03  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* sem_ch13.adb (Analyze_Record_Representation_Clause): Reject\n+\tan illegal component clause for an inherited component in a\n+\trecord extension.\n+\n 2013-01-03  Emmanuel Briot  <briot@adacore.com>\n \n \t* xref_lib.adb (Parse_Identifier_Info): Fix handling of arrays, which"}, {"sha": "01a68223e4f649029866fc36cca5abca18f6ef9c", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8190087e812225b4a1cf5bab944a3c3d1c476d0e/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8190087e812225b4a1cf5bab944a3c3d1c476d0e/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=8190087e812225b4a1cf5bab944a3c3d1c476d0e", "patch": "@@ -10693,6 +10693,9 @@ package body Exp_Ch4 is\n          then\n             return Suitable_Element (Next_Entity (C));\n \n+         --  Below test for C /= Original_Record_Component (C) is dubious\n+         --  if Typ is a constrained record subtype???\n+\n          elsif Is_Tagged_Type (Typ)\n            and then C /= Original_Record_Component (C)\n          then"}, {"sha": "03011fe541357a628ba51f43a21803b92419098e", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8190087e812225b4a1cf5bab944a3c3d1c476d0e/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8190087e812225b4a1cf5bab944a3c3d1c476d0e/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=8190087e812225b4a1cf5bab944a3c3d1c476d0e", "patch": "@@ -1094,13 +1094,25 @@ package body Freeze is\n                 Attribute_Scalar_Storage_Order);\n \n       if Is_Record_Type (Comp_Type) or else Is_Array_Type (Comp_Type) then\n-         if No (ADC) then\n+         if Present (Comp)\n+              and then Chars (Comp) = Name_uParent\n+         then\n+            if Reverse_Storage_Order (Encl_Type)\n+                 /=\n+               Reverse_Storage_Order (Comp_Type)\n+            then\n+               Error_Msg_N\n+                 (\"record extension must have same scalar storage order as \"\n+                  & \"parent\", Err_Node);\n+            end if;\n+\n+         elsif No (ADC) then\n             Error_Msg_N (\"nested composite must have explicit scalar \"\n                          & \"storage order\", Err_Node);\n \n          elsif (Reverse_Storage_Order (Encl_Type)\n                   /=\n-                Reverse_Storage_Order (Etype (Comp_Type)))\n+                Reverse_Storage_Order (Comp_Type))\n            and then not Comp_Byte_Aligned\n          then\n             Error_Msg_N"}, {"sha": "81d1214cb6492c393666373a602f7edb160bea39", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8190087e812225b4a1cf5bab944a3c3d1c476d0e/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8190087e812225b4a1cf5bab944a3c3d1c476d0e/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=8190087e812225b4a1cf5bab944a3c3d1c476d0e", "patch": "@@ -6852,6 +6852,9 @@ This means that if a @code{Scalar_Storage_Order} attribute definition\n clause is not confirming, then the type's @code{Bit_Order} shall be\n specified explicitly and set to the same value.\n \n+For a record extension, the derived type shall have the same scalar storage\n+order as the parent type.\n+\n If a component of @var{S} has itself a record or array type, then it shall also\n have a @code{Scalar_Storage_Order} attribute definition clause. In addition,\n if the component does not start on a byte boundary, then the scalar storage"}, {"sha": "f4508dab4f4ada22fbf58be52d2f1f9184571e29", "filename": "gcc/ada/gnatcmd.adb", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8190087e812225b4a1cf5bab944a3c3d1c476d0e/gcc%2Fada%2Fgnatcmd.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8190087e812225b4a1cf5bab944a3c3d1c476d0e/gcc%2Fada%2Fgnatcmd.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatcmd.adb?ref=8190087e812225b4a1cf5bab944a3c3d1c476d0e", "patch": "@@ -1999,7 +1999,19 @@ begin\n                           In_Arrays => Element.Decl.Arrays,\n                           Shared    => Project_Tree.Shared);\n                      Name_Len := 0;\n-                     Add_Str_To_Name_Buffer (Main.all);\n+\n+                     --  If the single main has been specified as an absolute\n+                     --  path, we use only the simple file name. If the\n+                     --  absolute path is incorrect, an error will be reported\n+                     --  by the underlying tool and it does not make a\n+                     --  difference what switches are used.\n+\n+                     if Is_Absolute_Path (Main.all) then\n+                        Add_Str_To_Name_Buffer (File_Name (Main.all));\n+                     else\n+                        Add_Str_To_Name_Buffer (Main.all);\n+                     end if;\n+\n                      The_Switches := Prj.Util.Value_Of\n                        (Index     => Name_Find,\n                         Src_Index => 0,"}, {"sha": "ade5accb02b6cd1c32ad0321061cbaa4ebd222c8", "filename": "gcc/ada/makeutl.ads", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8190087e812225b4a1cf5bab944a3c3d1c476d0e/gcc%2Fada%2Fmakeutl.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8190087e812225b4a1cf5bab944a3c3d1c476d0e/gcc%2Fada%2Fmakeutl.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmakeutl.ads?ref=8190087e812225b4a1cf5bab944a3c3d1c476d0e", "patch": "@@ -44,6 +44,10 @@ package Makeutl is\n    type Fail_Proc is access procedure (S : String);\n    --  Pointer to procedure which outputs a failure message\n \n+   Default_Config_Name : constant String := \"default.cgpr\";\n+   --  Name of the configuration file used by gprbuild and generated by\n+   --  gprconfig by default.\n+\n    On_Windows : constant Boolean := Directory_Separator = '\\';\n    --  True when on Windows\n "}, {"sha": "2b68d79699375f69a0c3316cdf0ac297e9e1b425", "filename": "gcc/ada/opt.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8190087e812225b4a1cf5bab944a3c3d1c476d0e/gcc%2Fada%2Fopt.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8190087e812225b4a1cf5bab944a3c3d1c476d0e/gcc%2Fada%2Fopt.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fopt.ads?ref=8190087e812225b4a1cf5bab944a3c3d1c476d0e", "patch": "@@ -563,7 +563,7 @@ package Opt is\n    Extensions_Allowed : Boolean := False;\n    --  GNAT\n    --  Set to True by switch -gnatX if GNAT specific language extensions\n-   --  are allowed.\n+   --  are allowed. Currently there are no such defined extensions.\n \n    type External_Casing_Type is (\n      As_Is,       -- External names cased as they appear in the Ada source"}, {"sha": "a2c5463efb66d4286706238af1349dd2990382b8", "filename": "gcc/ada/prj-conf.adb", "status": "modified", "additions": 40, "deletions": 10, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8190087e812225b4a1cf5bab944a3c3d1c476d0e/gcc%2Fada%2Fprj-conf.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8190087e812225b4a1cf5bab944a3c3d1c476d0e/gcc%2Fada%2Fprj-conf.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-conf.adb?ref=8190087e812225b4a1cf5bab944a3c3d1c476d0e", "patch": "@@ -48,9 +48,6 @@ package body Prj.Conf is\n \n    Auto_Cgpr : constant String := \"auto.cgpr\";\n \n-   Default_Name : constant String := \"default.cgpr\";\n-   --  Default configuration file that will be used if found\n-\n    Config_Project_Env_Var : constant String := \"GPR_CONFIG\";\n    --  Name of the environment variable that provides the name of the\n    --  configuration file to use.\n@@ -669,7 +666,7 @@ package body Prj.Conf is\n                Free (Tmp);\n \n                if T'Length = 0 then\n-                  return Default_Name;\n+                  return Default_Config_Name;\n                else\n                   return T;\n                end if;\n@@ -1183,13 +1180,46 @@ package body Prj.Conf is\n                Arg_Last := 3;\n             else\n                if Target_Name = \"\" then\n-                  if At_Least_One_Compiler_Command then\n-                     Args (4) := new String'(\"--target=all\");\n \n-                  else\n-                     Args (4) :=\n-                       new String'(\"--target=\" & Normalized_Hostname);\n-                  end if;\n+                  --  Check if attribute Target is specified in the main\n+                  --  project, or in a project it extends. If it is, use this\n+                  --  target to invoke gprconfig.\n+\n+                  declare\n+                     Variable : Variable_Value;\n+                     Proj : Project_Id;\n+                     Tgt_Name : Name_Id := No_Name;\n+                  begin\n+                     Proj := Project;\n+                     Project_Loop :\n+                     while Proj /= No_Project loop\n+                        Variable :=\n+                          Value_Of (Name_Target, Proj.Decl.Attributes, Shared);\n+\n+                        if Variable /= Nil_Variable_Value and then\n+                          not Variable.Default and then\n+                          Variable.Value /= No_Name\n+                        then\n+                           Tgt_Name := Variable.Value;\n+                           exit Project_Loop;\n+                        end if;\n+\n+                        Proj := Proj.Extends;\n+                     end loop Project_Loop;\n+\n+                     if Tgt_Name /= No_Name then\n+                        Args (4) :=\n+                          new String'(\"--target=\" &\n+                                      Get_Name_String (Tgt_Name));\n+\n+                     elsif At_Least_One_Compiler_Command then\n+                        Args (4) := new String'(\"--target=all\");\n+\n+                     else\n+                        Args (4) :=\n+                          new String'(\"--target=\" & Normalized_Hostname);\n+                     end if;\n+                  end;\n \n                else\n                   Args (4) := new String'(\"--target=\" & Target_Name);"}, {"sha": "bfe08d046e1283f01e5553891b1ec55704dae9a3", "filename": "gcc/ada/prj.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8190087e812225b4a1cf5bab944a3c3d1c476d0e/gcc%2Fada%2Fprj.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8190087e812225b4a1cf5bab944a3c3d1c476d0e/gcc%2Fada%2Fprj.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj.adb?ref=8190087e812225b4a1cf5bab944a3c3d1c476d0e", "patch": "@@ -563,7 +563,7 @@ package body Prj is\n            new Ada.Containers.Ordered_Sets (Element_Type => Name_Id);\n \n          Seen_Name : Name_Id_Set.Set;\n-         --  This set is needed to ensure that we do not haandle the same\n+         --  This set is needed to ensure that we do not handle the same\n          --  project twice in the context of aggregate libraries.\n \n          procedure Recursive_Check"}, {"sha": "1af5e34e2db94641ec14a7844b13c59eeba623c5", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 45, "deletions": 7, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8190087e812225b4a1cf5bab944a3c3d1c476d0e/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8190087e812225b4a1cf5bab944a3c3d1c476d0e/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=8190087e812225b4a1cf5bab944a3c3d1c476d0e", "patch": "@@ -4663,10 +4663,34 @@ package body Sem_Ch13 is\n       Ocomp   : Entity_Id;\n       Posit   : Uint;\n       Rectype : Entity_Id;\n+      Recdef  : Node_Id;\n+\n+      function Is_Inherited (Comp : Entity_Id) return Boolean;\n+      --  True if Comp is an inherited component in a record extension\n+\n+      ------------------\n+      -- Is_Inherited --\n+      ------------------\n+\n+      function Is_Inherited (Comp : Entity_Id) return Boolean is\n+         Comp_Base : Entity_Id;\n+      begin\n+         if Ekind (Rectype) = E_Record_Subtype then\n+            Comp_Base := Original_Record_Component (Comp);\n+         else\n+            Comp_Base := Comp;\n+         end if;\n+         return Comp_Base /= Original_Record_Component (Comp_Base);\n+      end Is_Inherited;\n+\n+      Is_Record_Extension : Boolean;\n+      --  True if Rectype is a record extension\n \n       CR_Pragma : Node_Id := Empty;\n       --  Points to N_Pragma node if Complete_Representation pragma present\n \n+   --  Start of processing for Analyze_Record_Representation_Clause\n+\n    begin\n       if Ignore_Rep_Clauses then\n          return;\n@@ -4706,6 +4730,14 @@ package body Sem_Ch13 is\n          return;\n       end if;\n \n+      --  We know we have a first subtype, now possibly go the the anonymous\n+      --  base type to determine whether Rectype is a record extension.\n+\n+      Recdef := Type_Definition (Declaration_Node (Base_Type (Rectype)));\n+      Is_Record_Extension :=\n+        Nkind (Recdef) = N_Derived_Type_Definition\n+          and then Present (Record_Extension_Part (Recdef));\n+\n       if Present (Mod_Clause (N)) then\n          declare\n             Loc     : constant Source_Ptr := Sloc (N);\n@@ -4881,6 +4913,11 @@ package body Sem_Ch13 is\n                        (\"cannot reference discriminant of unchecked union\",\n                         Component_Name (CC));\n \n+                  elsif Is_Record_Extension and then Is_Inherited (Comp) then\n+                     Error_Msg_NE\n+                       (\"component clause not allowed for inherited \"\n+                        & \"component&\", CC, Comp);\n+\n                   elsif Present (Component_Clause (Comp)) then\n \n                      --  Diagnose duplicate rep clause, or check consistency\n@@ -4908,10 +4945,11 @@ package body Sem_Ch13 is\n                               Error_Msg_N\n                                 (\"component clause inconsistent \"\n                                  & \"with representation of ancestor\", CC);\n+\n                            elsif Warn_On_Redundant_Constructs then\n                               Error_Msg_N\n-                                (\"?r?redundant component clause \"\n-                                 & \"for inherited component!\", CC);\n+                                (\"?r?redundant confirming component clause \"\n+                                 & \"for component!\", CC);\n                            end if;\n                         end;\n                      end if;\n@@ -7346,7 +7384,7 @@ package body Sem_Ch13 is\n       begin\n          if Present (CC1) and then Present (CC2) then\n \n-            --  Exclude odd case where we have two tag fields in the same\n+            --  Exclude odd case where we have two tag components in the same\n             --  record, both at location zero. This seems a bit strange, but\n             --  it seems to happen in some circumstances, perhaps on an error.\n \n@@ -7387,7 +7425,7 @@ package body Sem_Ch13 is\n       procedure Find_Component is\n \n          procedure Search_Component (R : Entity_Id);\n-         --  Search components of R for a match. If found, Comp is set.\n+         --  Search components of R for a match. If found, Comp is set\n \n          ----------------------\n          -- Search_Component --\n@@ -7426,8 +7464,8 @@ package body Sem_Ch13 is\n \n          Search_Component (Rectype);\n \n-         --  If not found, maybe component of base type that is absent from\n-         --  statically constrained first subtype.\n+         --  If not found, maybe component of base type discriminant that is\n+         --  absent from statically constrained first subtype.\n \n          if No (Comp) then\n             Search_Component (Base_Type (Rectype));\n@@ -7555,7 +7593,7 @@ package body Sem_Ch13 is\n                  (\"bit number out of range of specified size\",\n                   Last_Bit (CC));\n \n-               --  Check for overlap with tag field\n+               --  Check for overlap with tag component\n \n             else\n                if Is_Tagged_Type (Rectype)"}, {"sha": "230ebd6eb3416d1a581ca2682e7afefaf58ef607", "filename": "gcc/ada/sem_warn.adb", "status": "modified", "additions": 21, "deletions": 22, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8190087e812225b4a1cf5bab944a3c3d1c476d0e/gcc%2Fada%2Fsem_warn.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8190087e812225b4a1cf5bab944a3c3d1c476d0e/gcc%2Fada%2Fsem_warn.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_warn.adb?ref=8190087e812225b4a1cf5bab944a3c3d1c476d0e", "patch": "@@ -3293,8 +3293,7 @@ package body Sem_Warn is\n       Form1, Form2 : Entity_Id;\n \n       function Is_Covered_Formal (Formal : Node_Id) return Boolean;\n-      --  Return True if Formal is covered by the Ada 2012 rule. Under -gnatX\n-      --  the rule is extended to cover record and array types.\n+      --  Return True if Formal is covered by the rule.\n \n       function Refer_Same_Object (Act1, Act2 : Node_Id) return Boolean;\n       --  Two names are known to refer to the same object if the two names\n@@ -3321,24 +3320,12 @@ package body Sem_Warn is\n \n       function Is_Covered_Formal (Formal : Node_Id) return Boolean is\n       begin\n-         --  Ada 2012 rule\n-\n-         if not Extensions_Allowed then\n-            return\n-              Ekind_In (Formal, E_Out_Parameter,\n-                                E_In_Out_Parameter)\n-                and then Is_Elementary_Type (Etype (Formal));\n-\n-         --  Under -gnatX the rule is extended to cover array and record types\n-\n-         else\n-            return\n-              Ekind_In (Formal, E_Out_Parameter,\n-                                E_In_Out_Parameter)\n-                and then (Is_Elementary_Type (Etype (Formal))\n-                            or else Is_Record_Type (Etype (Formal))\n-                            or else Is_Array_Type (Etype (Formal)));\n-         end if;\n+         return\n+           Ekind_In (Formal, E_Out_Parameter,\n+                             E_In_Out_Parameter)\n+             and then (Is_Elementary_Type (Etype (Formal))\n+                         or else Is_Record_Type (Etype (Formal))\n+                         or else Is_Array_Type (Etype (Formal)));\n       end Is_Covered_Formal;\n \n    begin\n@@ -3360,7 +3347,8 @@ package body Sem_Warn is\n       --  there is no other name among the other parameters of mode in out or\n       --  out to C that is known to denote the same object (RM 6.4.1(6.15/3))\n \n-      --  Under -gnatX the rule is extended to cover array and record types.\n+      --  Compiling under -gnatw.i we also report warnings on overlapping\n+      --  parameters that are record types or array types.\n \n       Form1 := First_Formal (Subp);\n       Act1  := First_Actual (N);\n@@ -3401,10 +3389,21 @@ package body Sem_Warn is\n                   then\n                      null;\n \n+                  --  Under Ada 2012 we only report warnings on overlapping\n+                  --  arrays and record types if compiling under -gnatw.i\n+\n+                  elsif Ada_Version >= Ada_2012\n+                     and then not Is_Elementary_Type (Etype (Form1))\n+                     and then not Warn_On_Overlap\n+                  then\n+                     null;\n+\n                   --  Here we may need to issue message\n \n                   else\n-                     Error_Msg_Warn := Ada_Version < Ada_2012;\n+                     Error_Msg_Warn :=\n+                       Ada_Version < Ada_2012\n+                         or else not Is_Elementary_Type (Etype (Form1));\n \n                      declare\n                         Act  : Node_Id;"}, {"sha": "48fe87d363bdd2d1824709f1ea0b45c16c1c6efa", "filename": "gcc/ada/usage.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8190087e812225b4a1cf5bab944a3c3d1c476d0e/gcc%2Fada%2Fusage.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8190087e812225b4a1cf5bab944a3c3d1c476d0e/gcc%2Fada%2Fusage.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fusage.adb?ref=8190087e812225b4a1cf5bab944a3c3d1c476d0e", "patch": "@@ -502,7 +502,7 @@ begin\n    Write_Line (\"        L*   turn off warnings for missing \" &\n                                                   \"elaboration pragma\");\n    Write_Line (\"        .l   turn on info messages for inherited aspects\");\n-   Write_Line (\"        .L*   turn off info messages for inherited aspects\");\n+   Write_Line (\"        .L*  turn off info messages for inherited aspects\");\n    Write_Line (\"        m+   turn on warnings for variable assigned \" &\n                                                   \"but not read\");\n    Write_Line (\"        M*   turn off warnings for variable assigned \" &"}]}