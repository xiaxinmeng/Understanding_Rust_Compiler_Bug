{"sha": "f6f6b749d69f22218545b95433579fdb2af285e6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjZmNmI3NDlkNjlmMjIyMTg1NDViOTU0MzM1NzlmZGIyYWYyODVlNg==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2015-07-17T23:02:25Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2015-07-17T23:02:25Z"}, "message": "Replicate static chain on the stack\n\nIf we put static chain on the stack, we need to replicate it on the stack\nwhen stack is realigned with DRAP so that static chain can be reached via\n(argp - 2) slot.\n\ngcc/\n\n\tPR target/66906\n\t* config/i386/i386.c (ix86_expand_prologue): Replicate static\n\tchain on the stack.\n\ngcc/testsuite/\n\n\tPR target/66906\n\t* gcc.target/i386/pr66906.c: New test.\n\nFrom-SVN: r225974", "tree": {"sha": "4fd38423573f155ce3da3dba5c9c1a1a1661292e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4fd38423573f155ce3da3dba5c9c1a1a1661292e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f6f6b749d69f22218545b95433579fdb2af285e6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6f6b749d69f22218545b95433579fdb2af285e6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f6f6b749d69f22218545b95433579fdb2af285e6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6f6b749d69f22218545b95433579fdb2af285e6/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "de19301a86d2e3a71ffeb958239b3ec18a77b382", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de19301a86d2e3a71ffeb958239b3ec18a77b382", "html_url": "https://github.com/Rust-GCC/gccrs/commit/de19301a86d2e3a71ffeb958239b3ec18a77b382"}], "stats": {"total": 69, "additions": 68, "deletions": 1}, "files": [{"sha": "6d583195ff7fe994189bd7b97d106726f4ddc2db", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6f6b749d69f22218545b95433579fdb2af285e6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6f6b749d69f22218545b95433579fdb2af285e6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f6f6b749d69f22218545b95433579fdb2af285e6", "patch": "@@ -1,3 +1,9 @@\n+2015-07-17  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/66906\n+\t* config/i386/i386.c (ix86_expand_prologue): Replicate static\n+\tchain on the stack.\n+\n 2015-07-17  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* config/nvptx/mkoffload.c (process): Constify host data."}, {"sha": "01a1cb94a7c99d757e8f7ed5cbf1278617c61295", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6f6b749d69f22218545b95433579fdb2af285e6/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6f6b749d69f22218545b95433579fdb2af285e6/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=f6f6b749d69f22218545b95433579fdb2af285e6", "patch": "@@ -11495,6 +11495,7 @@ ix86_expand_prologue (void)\n   HOST_WIDE_INT allocate;\n   bool int_registers_saved;\n   bool sse_registers_saved;\n+  rtx static_chain = NULL_RTX;\n \n   ix86_finalize_stack_realign_flags ();\n \n@@ -11593,7 +11594,8 @@ ix86_expand_prologue (void)\n      call.  This insn will be skipped by the trampoline.  */\n   else if (ix86_static_chain_on_stack)\n     {\n-      insn = emit_insn (gen_push (ix86_static_chain (cfun->decl, false)));\n+      static_chain = ix86_static_chain (cfun->decl, false);\n+      insn = emit_insn (gen_push (static_chain));\n       emit_insn (gen_blockage ());\n \n       /* We don't want to interpret this push insn as a register save,\n@@ -11645,6 +11647,15 @@ ix86_expand_prologue (void)\n \t we've started over with a new frame.  */\n       m->fs.sp_offset = INCOMING_FRAME_SP_OFFSET;\n       m->fs.realigned = true;\n+\n+      if (static_chain)\n+\t{\n+\t  /* Replicate static chain on the stack so that static chain\n+\t     can be reached via (argp - 2) slot.  This is needed for\n+\t     nested function with stack realignment.  */\n+\t  insn = emit_insn (gen_push (static_chain));\n+\t  RTX_FRAME_RELATED_P (insn) = 1;\n+\t}\n     }\n \n   int_registers_saved = (frame.nregs == 0);"}, {"sha": "9628a20dc1217116df311eb5f5347a64587f3a14", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6f6b749d69f22218545b95433579fdb2af285e6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6f6b749d69f22218545b95433579fdb2af285e6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f6f6b749d69f22218545b95433579fdb2af285e6", "patch": "@@ -1,3 +1,8 @@\n+2015-07-17  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/66906\n+\t* gcc.target/i386/pr66906.c: New test.\n+\n 2015-07-17  Mikael Morin  <mikael@gcc.gnu.org>\n \n \t* gfortran.dg/coarray_collectives_16.f90: Fix pattern"}, {"sha": "969e183c79c492df69269f02a800169d2dcf1250", "filename": "gcc/testsuite/gcc.target/i386/pr66906.c", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6f6b749d69f22218545b95433579fdb2af285e6/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr66906.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6f6b749d69f22218545b95433579fdb2af285e6/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr66906.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr66906.c?ref=f6f6b749d69f22218545b95433579fdb2af285e6", "patch": "@@ -0,0 +1,45 @@\n+/* { dg-do run { target ia32 } } */\n+/* { dg-options \"-O0 -mregparm=3\" } */\n+\n+typedef int ptrdiff_t;\n+extern void abort (void);\n+int\n+check_int (int *i, int align)\n+{\n+  *i = 20;\n+  if ((((ptrdiff_t) i) & (align - 1)) != 0)\n+    abort ();\n+  return *i;\n+}\n+void\n+check (void *p, int align)\n+{\n+  if ((((ptrdiff_t) p) & (align - 1)) != 0)\n+    abort ();\n+}\n+typedef int aligned __attribute__((aligned(64)));\n+void\n+foo (void)\n+{\n+  aligned j;\n+  void bar ()\n+    {\n+      aligned i;\n+      if (check_int (&i, __alignof__(i)) != i)\n+\tabort ();\n+      if (check_int (&j, __alignof__(j)) != j)\n+\tabort ();\n+      j = -20;\n+    }\n+  bar ();\n+  if (j != -20)\n+    abort ();\n+  if (check_int (&j, __alignof__(j)) != j)\n+    abort ();\n+}\n+int\n+main()\n+{\n+  foo ();\n+  return 0;\n+}"}]}