{"sha": "7e7c843fc72dc9f503ca052f2366d5a10eabc45c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2U3Yzg0M2ZjNzJkYzlmNTAzY2EwNTJmMjM2NmQ1YTEwZWFiYzQ1Yw==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2003-12-02T10:14:40Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2003-12-02T10:14:40Z"}, "message": "rtl.h (PUT_CODE, PUT_MODE): Remove ENUM_BITFIELD cast.\n\n        * rtl.h (PUT_CODE, PUT_MODE): Remove ENUM_BITFIELD cast.\n        * tree.h (TREE_SET_CODE): Likewise.\n        * recog.h (struct insn_operand_data): Move const after ENUM_BITFIELD.\n\nFrom-SVN: r74170", "tree": {"sha": "435cdb343860221e1462222011307b8ded1f891a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/435cdb343860221e1462222011307b8ded1f891a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7e7c843fc72dc9f503ca052f2366d5a10eabc45c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e7c843fc72dc9f503ca052f2366d5a10eabc45c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7e7c843fc72dc9f503ca052f2366d5a10eabc45c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e7c843fc72dc9f503ca052f2366d5a10eabc45c/comments", "author": null, "committer": null, "parents": [{"sha": "df2b750fc14c757455d3ea296121ffe797edb217", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df2b750fc14c757455d3ea296121ffe797edb217", "html_url": "https://github.com/Rust-GCC/gccrs/commit/df2b750fc14c757455d3ea296121ffe797edb217"}], "stats": {"total": 15, "additions": 10, "deletions": 5}, "files": [{"sha": "938bf4a2cbd6c9c0e2d1f4e799822e959a3dc743", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e7c843fc72dc9f503ca052f2366d5a10eabc45c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e7c843fc72dc9f503ca052f2366d5a10eabc45c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7e7c843fc72dc9f503ca052f2366d5a10eabc45c", "patch": "@@ -1,3 +1,9 @@\n+2003-12-02  Richard Henderson  <rth@redhat.com>\n+\n+        * rtl.h (PUT_CODE, PUT_MODE): Remove ENUM_BITFIELD cast.\n+        * tree.h (TREE_SET_CODE): Likewise.\n+        * recog.h (struct insn_operand_data): Move const after ENUM_BITFIELD.\n+\n 2003-12-02  Ben Elliston  <bje@wasabisystems.com>\n \n \t* dbxstclass.h: Rename from this .."}, {"sha": "749c64b4d900493a687a30d118fc62285730c91f", "filename": "gcc/recog.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e7c843fc72dc9f503ca052f2366d5a10eabc45c/gcc%2Frecog.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e7c843fc72dc9f503ca052f2366d5a10eabc45c/gcc%2Frecog.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frecog.h?ref=7e7c843fc72dc9f503ca052f2366d5a10eabc45c", "patch": "@@ -221,7 +221,7 @@ struct insn_operand_data\n \n   const char *const constraint;\n \n-  const ENUM_BITFIELD(machine_mode) mode : 16;\n+  ENUM_BITFIELD(machine_mode) const mode : 16;\n \n   const char strict_low;\n "}, {"sha": "800282a815eaabd0cb0bc67c06a9f8e12ff40136", "filename": "gcc/rtl.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e7c843fc72dc9f503ca052f2366d5a10eabc45c/gcc%2Frtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e7c843fc72dc9f503ca052f2366d5a10eabc45c/gcc%2Frtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.h?ref=7e7c843fc72dc9f503ca052f2366d5a10eabc45c", "patch": "@@ -249,10 +249,10 @@ struct rtx_def GTY((chain_next (\"RTX_NEXT (&%h)\"),\n /* Define macros to access the `code' field of the rtx.  */\n \n #define GET_CODE(RTX)\t    ((enum rtx_code) (RTX)->code)\n-#define PUT_CODE(RTX, CODE) ((RTX)->code = (ENUM_BITFIELD(rtx_code)) (CODE))\n+#define PUT_CODE(RTX, CODE) ((RTX)->code = (CODE))\n \n #define GET_MODE(RTX)\t    ((enum machine_mode) (RTX)->mode)\n-#define PUT_MODE(RTX, MODE) ((RTX)->mode = (ENUM_BITFIELD(machine_mode)) (MODE))\n+#define PUT_MODE(RTX, MODE) ((RTX)->mode = (MODE))\n \n /* RTL vector.  These appear inside RTX's when there is a need\n    for a variable number of things.  The principle use is inside"}, {"sha": "a2fdb1eef825bb11cf9217d674bf20f2eebbb62e", "filename": "gcc/tree.h", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e7c843fc72dc9f503ca052f2366d5a10eabc45c/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e7c843fc72dc9f503ca052f2366d5a10eabc45c/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=7e7c843fc72dc9f503ca052f2366d5a10eabc45c", "patch": "@@ -270,8 +270,7 @@ struct tree_common GTY(())\n /* The tree-code says what kind of node it is.\n    Codes are defined in tree.def.  */\n #define TREE_CODE(NODE) ((enum tree_code) (NODE)->common.code)\n-#define TREE_SET_CODE(NODE, VALUE) \\\n-((NODE)->common.code = (ENUM_BITFIELD (tree_code)) (VALUE))\n+#define TREE_SET_CODE(NODE, VALUE) ((NODE)->common.code = (VALUE))\n \n /* When checking is enabled, errors will be generated if a tree node\n    is accessed incorrectly. The macros abort with a fatal error.  */"}]}