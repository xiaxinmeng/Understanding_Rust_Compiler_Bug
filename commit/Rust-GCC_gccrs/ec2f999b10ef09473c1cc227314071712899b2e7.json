{"sha": "ec2f999b10ef09473c1cc227314071712899b2e7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWMyZjk5OWIxMGVmMDk0NzNjMWNjMjI3MzE0MDcxNzEyODk5YjJlNw==", "commit": {"author": {"name": "Aaron Sawdey", "email": "acsawdey@linux.vnet.ibm.com", "date": "2018-01-10T18:30:41Z"}, "committer": {"name": "Aaron Sawdey", "email": "acsawdey@gcc.gnu.org", "date": "2018-01-10T18:30:41Z"}, "message": "memcmp-1.c: Reduce runtime to something reasonable.\n\n2018-01-10  Aaron Sawdey  <acsawdey@linux.vnet.ibm.com>\n\n\t* gcc.dg/memcmp-1.c: Reduce runtime to something reasonable.\n\nFrom-SVN: r256443", "tree": {"sha": "ac1400a54bbbd63213ff153ff78eb7f52692210d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ac1400a54bbbd63213ff153ff78eb7f52692210d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ec2f999b10ef09473c1cc227314071712899b2e7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec2f999b10ef09473c1cc227314071712899b2e7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ec2f999b10ef09473c1cc227314071712899b2e7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec2f999b10ef09473c1cc227314071712899b2e7/comments", "author": null, "committer": null, "parents": [{"sha": "7074b41bdc846ec75942aa3f883f85c9e7967a7c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7074b41bdc846ec75942aa3f883f85c9e7967a7c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7074b41bdc846ec75942aa3f883f85c9e7967a7c"}], "stats": {"total": 43, "additions": 25, "deletions": 18}, "files": [{"sha": "6431aa42928268894cf3b2464fe54f3c2f2b6397", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec2f999b10ef09473c1cc227314071712899b2e7/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec2f999b10ef09473c1cc227314071712899b2e7/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ec2f999b10ef09473c1cc227314071712899b2e7", "patch": "@@ -1,3 +1,7 @@\n+2018-01-10  Aaron Sawdey  <acsawdey@linux.vnet.ibm.com>\n+\n+\t* gcc.dg/memcmp-1.c: Reduce runtime to something reasonable.\n+\n 2018-01-10  Marek Polacek  <polacek@redhat.com>\n \n \tPR c++/82541"}, {"sha": "a79db512b668572a2bafff8e4e8a5c65239f0f7d", "filename": "gcc/testsuite/gcc.dg/memcmp-1.c", "status": "modified", "additions": 21, "deletions": 18, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec2f999b10ef09473c1cc227314071712899b2e7/gcc%2Ftestsuite%2Fgcc.dg%2Fmemcmp-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec2f999b10ef09473c1cc227314071712899b2e7/gcc%2Ftestsuite%2Fgcc.dg%2Fmemcmp-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fmemcmp-1.c?ref=ec2f999b10ef09473c1cc227314071712899b2e7", "patch": "@@ -12,8 +12,20 @@ int lib_memcmp(const void *a, const void *b, size_t n) asm(\"memcmp\");\n int lib_strncmp(const char *a, const char *b, size_t n) asm(\"strncmp\");\n \n #ifndef NRAND\n+#ifdef TEST_ALL\n #define NRAND 10000\n+#else\n+#define NRAND 500\n+#endif\n+#endif\n+#ifndef TZONE\n+#ifdef TEST_ALL\n+#define TZONE 16\n+#else\n+#define TZONE 8\n #endif\n+#endif\n+\n #define MAX_SZ 600\n \n #define DEF_RS(ALIGN)                                                      \\\n@@ -33,9 +45,7 @@ static void test_memcmp_runtime_size_ ## ALIGN (const char *str1, \t   \\\n \t  b = four+i*ALIGN+j*(4096-2*i*ALIGN);\t\t\t\t   \\\n \t  memcpy(a,str1,sz);\t\t\t\t\t\t   \\\n \t  memcpy(b,str2,sz);\t\t\t\t\t\t   \\\n-\t  asm(\" \");\t\t\t\t\t\t\t   \\\n \t  r = memcmp(a,b,sz);\t\t\t\t\t\t   \\\n-\t  asm(\" \");\t\t\t\t\t\t\t   \\\n \t  if ( r < 0 && !(expect < 0) ) abort();\t\t\t   \\\n \t  if ( r > 0 && !(expect > 0) )\tabort();\t\t\t   \\\n \t  if ( r == 0 && !(expect == 0) ) abort();\t\t\t   \\\n@@ -67,15 +77,13 @@ static void test_memcmp_runtime_size (const char *str1, const char *str2,\n \t{\n \t  for (a1=0; a1 < 2*sizeof(void *); a1++)\n \t    {\n+\t      a = three+i*a1+j*(4096-2*i*a1);\n+\t      memcpy(a,str1,sz);\n \t      for (a2=0; a2 < 2*sizeof(void *); a2++)\n \t\t{\n-\t\t  a = three+i*a1+j*(4096-2*i*a1);\n \t\t  b = four+i*a2+j*(4096-2*i*a2);\n-\t\t  memcpy(a,str1,sz);\n \t\t  memcpy(b,str2,sz);\n-\t\t  asm(\" \");\n \t\t  r = memcmp(a,b,sz);\n-\t\t  asm(\" \");\n \t\t  if ( r < 0 && !(expect < 0) ) abort();\n \t\t  if ( r > 0 && !(expect > 0) )\tabort();\n \t\t  if ( r == 0 && !(expect == 0) ) abort();\n@@ -89,7 +97,7 @@ static void test_driver_memcmp (void (test_memcmp)(const char *, const char *, i\n \t\t\t\tvoid (test_strncmp)(const char *, const char *, int),\n   size_t sz, int align)\n {\n-  char buf1[MAX_SZ*2+10],buf2[MAX_SZ*2+10];\n+  char buf1[MAX_SZ*2+TZONE],buf2[MAX_SZ*2+TZONE];\n   size_t test_sz = (sz<MAX_SZ)?sz:MAX_SZ;\n   size_t diff_pos, zero_pos;\n   uint32_t e;\n@@ -111,8 +119,8 @@ static void test_driver_memcmp (void (test_memcmp)(const char *, const char *, i\n       (*test_strncmp)(buf1,buf2,e);\n     }\n   }\n-  for(diff_pos = ((test_sz>10)?(test_sz-10):0); diff_pos < test_sz+10; diff_pos++)\n-    for(zero_pos = ((test_sz>10)?(test_sz-10):0); zero_pos < test_sz+10; zero_pos++)\n+  for(diff_pos = ((test_sz>TZONE)?(test_sz-TZONE):0); diff_pos < test_sz+TZONE; diff_pos++)\n+    for(zero_pos = ((test_sz>TZONE)?(test_sz-TZONE):0); zero_pos < test_sz+TZONE; zero_pos++)\n       {\n \tmemset(buf1, 'A', 2*test_sz);\n \tmemset(buf2, 'A', 2*test_sz);\n@@ -125,7 +133,6 @@ static void test_driver_memcmp (void (test_memcmp)(const char *, const char *, i\n \t(*test_memcmp)(buf2,buf2,0);\n \ttest_memcmp_runtime_size (buf1, buf2, sz, e);\n \ttest_memcmp_runtime_size (buf2, buf1, sz, -e);\n-\ttest_memcmp_runtime_size (buf2, buf2, sz, 0);\n \te = lib_strncmp(buf1,buf2,sz);\n \t(*test_strncmp)(buf1,buf2,e);\n \t(*test_strncmp)(buf2,buf1,-e);\n@@ -470,10 +477,8 @@ DEF_TEST(8,1)\n DEF_TEST(9,1)\n DEF_TEST(16,1)\n DEF_TEST(32,1)\n-DEF_TEST(100,1)\n-DEF_TEST(100,8)\n-DEF_TEST(180,1)\n-DEF_TEST(180,8)\n+DEF_TEST(33,8)\n+DEF_TEST(49,1)\n #endif\n \n int\n@@ -753,9 +758,7 @@ main(int argc, char **argv)\n     RUN_TEST(9,1)\n     RUN_TEST(16,1)\n     RUN_TEST(32,1)\n-    RUN_TEST(100,1)\n-    RUN_TEST(100,8)\n-    RUN_TEST(180,1)\n-    RUN_TEST(180,8)\n+    RUN_TEST(33,8)\n+    RUN_TEST(49,1)\n #endif\n }"}]}