{"sha": "560c75e960fafc380191bf162a8e428a35e5fb67", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTYwYzc1ZTk2MGZhZmMzODAxOTFiZjE2MmE4ZTQyOGEzNWU1ZmI2Nw==", "commit": {"author": {"name": "Yuri Rumyantsev", "email": "ysrumyan@gmail.com", "date": "2014-06-18T11:40:59Z"}, "committer": {"name": "Kirill Yukhin", "email": "kyukhin@gcc.gnu.org", "date": "2014-06-18T11:40:59Z"}, "message": "re PR tree-optimization/61518 (wrong code (by tree vectorizer) at -O3 on x86_64-linux-gnu)\n\n        PR tree-optimization/61518\ngcc/\n        * tree-if-conv.c (is_cond_scalar_reduction): Add missed check that\n        reduction var is used in reduction stmt or phi-function only.\n\ngcc/testsuite/\n        * gcc.dg/torture/pr61518.c: New test.\n\nFrom-SVN: r211780", "tree": {"sha": "a73d2e99228d20c464e25f44518f4a4346c72d1a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a73d2e99228d20c464e25f44518f4a4346c72d1a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/560c75e960fafc380191bf162a8e428a35e5fb67", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/560c75e960fafc380191bf162a8e428a35e5fb67", "html_url": "https://github.com/Rust-GCC/gccrs/commit/560c75e960fafc380191bf162a8e428a35e5fb67", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/560c75e960fafc380191bf162a8e428a35e5fb67/comments", "author": {"login": "ysrumyan", "id": 44425612, "node_id": "MDQ6VXNlcjQ0NDI1NjEy", "avatar_url": "https://avatars.githubusercontent.com/u/44425612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ysrumyan", "html_url": "https://github.com/ysrumyan", "followers_url": "https://api.github.com/users/ysrumyan/followers", "following_url": "https://api.github.com/users/ysrumyan/following{/other_user}", "gists_url": "https://api.github.com/users/ysrumyan/gists{/gist_id}", "starred_url": "https://api.github.com/users/ysrumyan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ysrumyan/subscriptions", "organizations_url": "https://api.github.com/users/ysrumyan/orgs", "repos_url": "https://api.github.com/users/ysrumyan/repos", "events_url": "https://api.github.com/users/ysrumyan/events{/privacy}", "received_events_url": "https://api.github.com/users/ysrumyan/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "751738cb0c1aac9501284e6973d8438919edc581", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/751738cb0c1aac9501284e6973d8438919edc581", "html_url": "https://github.com/Rust-GCC/gccrs/commit/751738cb0c1aac9501284e6973d8438919edc581"}], "stats": {"total": 54, "additions": 54, "deletions": 0}, "files": [{"sha": "19f33b2041c67dc1911331113c11efdf8d2c757c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/560c75e960fafc380191bf162a8e428a35e5fb67/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/560c75e960fafc380191bf162a8e428a35e5fb67/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=560c75e960fafc380191bf162a8e428a35e5fb67", "patch": "@@ -1,3 +1,9 @@\n+2014-06-18  Yuri Rumyantsev  <ysrumyan@gmail.com>\n+\n+\tPR tree-optimization/61518\n+\t* tree-if-conv.c (is_cond_scalar_reduction): Add missed check that\n+\treduction var is used in reduction stmt or phi-function only.\n+\n 2014-06-18  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \t* config/arm/arm_neon.h (vadd_f32): Change #ifdef to __FAST_MATH."}, {"sha": "702fc36af5cf592bab98e637db7608f8b46d3ad4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/560c75e960fafc380191bf162a8e428a35e5fb67/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/560c75e960fafc380191bf162a8e428a35e5fb67/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=560c75e960fafc380191bf162a8e428a35e5fb67", "patch": "@@ -1,3 +1,8 @@\n+2014-06-18  Yuri Rumyantsev  <ysrumyan@gmail.com>\n+\n+\tPR tree-optimization/61518\n+\t* gcc.dg/torture/pr61518.c: New test.\n+\n 2014-06-18  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n \n \tPR tree-optimization/61517"}, {"sha": "98429b09a93d85dcbda41909f2226d706f46c60b", "filename": "gcc/testsuite/gcc.dg/torture/pr61518.c", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/560c75e960fafc380191bf162a8e428a35e5fb67/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr61518.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/560c75e960fafc380191bf162a8e428a35e5fb67/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr61518.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr61518.c?ref=560c75e960fafc380191bf162a8e428a35e5fb67", "patch": "@@ -0,0 +1,29 @@\n+/* { dg-do run } */\n+\n+int a, b, c[1], d, e, f;\n+\n+void\n+fn1 ()\n+{\n+  for (; d < 1; d++)\n+    {\n+      if (b)\n+\t{\n+\t  a = e++ && f;\n+\t  b = f;\n+\t}\n+      c[b] = 0;\n+    }\n+}\n+\n+int\n+main ()\n+{\n+  fn1 ();\n+\n+  if (e != 0)\n+    __builtin_abort ();\n+\n+  return 0;\n+}\n+"}, {"sha": "36a879d1e7bb14d8b209ad20a63962347468c06d", "filename": "gcc/tree-if-conv.c", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/560c75e960fafc380191bf162a8e428a35e5fb67/gcc%2Ftree-if-conv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/560c75e960fafc380191bf162a8e428a35e5fb67/gcc%2Ftree-if-conv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-if-conv.c?ref=560c75e960fafc380191bf162a8e428a35e5fb67", "patch": "@@ -1409,6 +1409,8 @@ is_cond_scalar_reduction (gimple phi, gimple *reduc,\n   enum tree_code reduction_op;\n   struct loop *loop = gimple_bb (phi)->loop_father;\n   edge latch_e = loop_latch_edge (loop);\n+  imm_use_iterator imm_iter;\n+  use_operand_p use_p;\n \n   arg_0 = PHI_ARG_DEF (phi, 0);\n   arg_1 = PHI_ARG_DEF (phi, 1);\n@@ -1465,6 +1467,18 @@ is_cond_scalar_reduction (gimple phi, gimple *reduc,\n   else if (r_op1 != PHI_RESULT (header_phi))\n     return false;\n \n+  /* Check that R_OP1 is used in reduction stmt or in PHI only.  */\n+  FOR_EACH_IMM_USE_FAST (use_p, imm_iter, r_op1)\n+    {\n+      gimple use_stmt = USE_STMT (use_p);\n+      if (is_gimple_debug (use_stmt))\n+\tcontinue;\n+      if (use_stmt == stmt)\n+\tcontinue;\n+      if (gimple_code (use_stmt) != GIMPLE_PHI)\n+\treturn false;\n+    }\n+\n   *op0 = r_op1; *op1 = r_op2;\n   *reduc = stmt;\n   return true;"}]}