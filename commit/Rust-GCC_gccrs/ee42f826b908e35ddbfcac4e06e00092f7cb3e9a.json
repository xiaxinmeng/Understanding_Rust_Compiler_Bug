{"sha": "ee42f826b908e35ddbfcac4e06e00092f7cb3e9a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWU0MmY4MjZiOTA4ZTM1ZGRiZmNhYzRlMDZlMDAwOTJmN2NiM2U5YQ==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2020-12-02T09:19:19Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2020-12-02T10:31:09Z"}, "message": "GDB hooks: improve documentation\n\ngcc/ChangeLog:\n\n\t* gdbinit.in: Write what each command calls\n\tfor a debugging function.", "tree": {"sha": "274e94e50970e7e523f29e2032e8e409c6cb32e6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/274e94e50970e7e523f29e2032e8e409c6cb32e6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ee42f826b908e35ddbfcac4e06e00092f7cb3e9a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee42f826b908e35ddbfcac4e06e00092f7cb3e9a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ee42f826b908e35ddbfcac4e06e00092f7cb3e9a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee42f826b908e35ddbfcac4e06e00092f7cb3e9a/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "82800987cb3b22427a8799b3e8491eff496724b9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82800987cb3b22427a8799b3e8491eff496724b9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/82800987cb3b22427a8799b3e8491eff496724b9"}], "stats": {"total": 38, "additions": 19, "deletions": 19}, "files": [{"sha": "f2becb470caee0426fd4ef02ba6bd1ace64540c2", "filename": "gcc/gdbinit.in", "status": "modified", "additions": 19, "deletions": 19, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee42f826b908e35ddbfcac4e06e00092f7cb3e9a/gcc%2Fgdbinit.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee42f826b908e35ddbfcac4e06e00092f7cb3e9a/gcc%2Fgdbinit.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgdbinit.in?ref=ee42f826b908e35ddbfcac4e06e00092f7cb3e9a", "patch": "@@ -46,7 +46,7 @@ call debug ($debug_arg)\n end\n \n document pp\n-GCC hook: pp [any]\n+GCC hook: debug (<multiple overloads>)\n Print a representation of any GCC data structure for which an instance of\n overloaded function 'debug' is available.\n See also 'help-gcc-hooks'.\n@@ -58,7 +58,7 @@ call debug_rtx ($debug_arg)\n end\n \n document pr\n-GCC hook: pr [rtx]\n+GCC hook: debug_rtx (rtx)\n Print the full structure of given rtx.\n See also 'help-gcc-hooks'.\n end\n@@ -69,7 +69,7 @@ call debug_rtx_list ($debug_arg, debug_rtx_count)\n end\n \n document prl\n-GCC hook: prl [rtx]\n+GCC hook: debug_rtx_list (rtx)\n Print the full structure of all rtx insns beginning at given rtx.\n Uses variable debug_rtx_count to control number of insns printed:\n   debug_rtx_count > 0: print from given rtx on.\n@@ -85,7 +85,7 @@ call debug_tree ($debug_arg)\n end\n \n document pt\n-GCC hook: pt [tree]\n+GCC hook: debug_tree (tree)\n Print the full structure of given tree.\n See also 'help-gcc-hooks'.\n end\n@@ -96,7 +96,7 @@ call debug_c_tree ($debug_arg)\n end\n \n document pct\n-GCC hook: pct [tree]\n+GCC hook: debug_c_tree (tree)\n Print given tree in C syntax.\n See also 'help-gcc-hooks'.\n end\n@@ -107,7 +107,7 @@ call debug_gimple_stmt ($debug_arg)\n end\n \n document pgg\n-GCC hook: pgg [gimple]\n+GCC hook: debug_gimple_stmt (gimple)\n Print given GIMPLE statement in C syntax.\n See also 'help-gcc-hooks'.\n end\n@@ -118,7 +118,7 @@ call debug_gimple_seq ($debug_arg)\n end\n \n document pgq\n-GCC hook: pgq [gimple_seq]\n+GCC hook: debug_gimple_seq (gimple_seq)\n Print given GIMPLE sequence in C syntax.\n See also 'help-gcc-hooks'.\n end\n@@ -129,7 +129,7 @@ call debug_generic_stmt ($debug_arg)\n end\n \n document pgs\n-GCC hook: pgs [tree]\n+GCC hook: debug_generic_stmt (tree)\n Print given GENERIC statement in C syntax.\n See also 'help-gcc-hooks'.\n end\n@@ -140,7 +140,7 @@ call debug_generic_expr ($debug_arg)\n end\n \n document pge\n-GCC hook: pge [tree]\n+GCC hook: debug_generic_expr (tree)\n Print given GENERIC expression in C syntax.\n See also 'help-gcc-hooks'.\n end\n@@ -151,7 +151,7 @@ call mpz_out_str(stderr, 10, $debug_arg)\n end\n \n document pmz\n-GCC hook: pmz [mpz_t]\n+GCC hook: mpz_out_str (mpz_t)\n Print given mpz value.\n See also 'help-gcc-hooks'.\n end\n@@ -163,7 +163,7 @@ echo \\n\n end\n \n document ptc\n-GCC hook: ptc [tree]\n+GCC hook: TREE_CODE (tree)\n Print the tree-code of given tree node.\n See also 'help-gcc-hooks'.\n end\n@@ -175,7 +175,7 @@ echo \\n\n end\n \n document pdn\n-GCC hook: pdn [tree]\n+GCC hook: IDENTIFIER_POINTER (DECL_NAME (tree))\n Print the name of given decl-node.\n See also 'help-gcc-hooks'.\n end\n@@ -187,7 +187,7 @@ echo \\n\n end\n \n document ptn\n-GCC hook: ptn [tree]\n+GCC hook: IDENTIFIER_POINTER (DECL_NAME (TREE_TYPE (tree)))\n Print the name of given type-node.\n See also 'help-gcc-hooks'.\n end\n@@ -198,7 +198,7 @@ call debug_dwarf_die ($debug_arg)\n end\n \n document pdd\n-GCC hook: pdd [dw_die_ref]\n+GCC hook: debug_dwarf_die (dw_die_ref)\n Print given dw_die_ref.\n See also 'help-gcc-hooks'.\n end\n@@ -212,7 +212,7 @@ echo )\\n\n end\n \n document prc\n-GCC hook: prc [rtx]\n+GCC hook: GET_CODE (rtx)\n Print the rtx-code and machine mode of given rtx.\n See also 'help-gcc-hooks'.\n end\n@@ -223,7 +223,7 @@ print $debug_arg.u.fld[0].rt_rtx@7\n end\n \n document pi\n-GCC hook: pi [rtx_insn]\n+GCC hook: X0EXP (rtx_insn)\n Print the fields of given RTL instruction.\n See also 'help-gcc-hooks'.\n end\n@@ -243,7 +243,7 @@ call bitmap_print (stderr, $debug_arg, \"\", \"\\n\")\n end\n \n document pbm\n-GCC hook: pbm [bitmap]\n+GCC hook: bitmap_print (bitmap)\n Dump given bitmap as a comma-separated list of numbers.\n See also 'help-gcc-hooks'.\n end\n@@ -255,7 +255,7 @@ echo \\n\n end\n \n document pel\n-GCC hook: pel [location_t]\n+GCC hook: expand_location (location_t)\n Print given location.\n See also 'help-gcc-hooks'.\n end\n@@ -275,7 +275,7 @@ print ($debug_arg.typed.type)\n end\n \n document trt\n-GCC hook: trt [tree]\n+GCC hook: TREE_TYPE (tree)\n Print TREE_TYPE of given tree node.\n See also 'help-gcc-hooks'.\n end"}]}