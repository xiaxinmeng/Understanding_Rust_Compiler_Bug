{"sha": "603cf12f58f33ebf64e339c6e6a18f6f70d74e9f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjAzY2YxMmY1OGYzM2ViZjY0ZTMzOWM2ZTZhMThmNmY3MGQ3NGU5Zg==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2012-09-02T06:40:27Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2012-09-02T06:40:27Z"}, "message": "re PR fortran/54426 (FAIL: gfortran.dg/common_6.f90  -O  (internal compiler error) on powerpc-apple-darwin9)\n\n2012-09-02  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/54426\n        * symbol.c (find_common_symtree): New function.\n        (gfc_undo_symbols): Use it; free common_head if needed.\n\nFrom-SVN: r190853", "tree": {"sha": "98c8d15e05f6d15c1b0f8a6b9c7f64c112f54b5a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/98c8d15e05f6d15c1b0f8a6b9c7f64c112f54b5a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/603cf12f58f33ebf64e339c6e6a18f6f70d74e9f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/603cf12f58f33ebf64e339c6e6a18f6f70d74e9f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/603cf12f58f33ebf64e339c6e6a18f6f70d74e9f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/603cf12f58f33ebf64e339c6e6a18f6f70d74e9f/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "155b46f5eb925314162dfcd792bdae19d4db47a9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/155b46f5eb925314162dfcd792bdae19d4db47a9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/155b46f5eb925314162dfcd792bdae19d4db47a9"}], "stats": {"total": 41, "additions": 41, "deletions": 0}, "files": [{"sha": "ea3bb324db27c282ce8679529b1d11583d83fc17", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/603cf12f58f33ebf64e339c6e6a18f6f70d74e9f/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/603cf12f58f33ebf64e339c6e6a18f6f70d74e9f/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=603cf12f58f33ebf64e339c6e6a18f6f70d74e9f", "patch": "@@ -1,3 +1,9 @@\n+2012-09-02  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/54426\n+\t* symbol.c (find_common_symtree): New function.\n+\t(gfc_undo_symbols): Use it; free common_head if needed.\n+\n 2012-08-28  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/54389"}, {"sha": "8d3b56c9569557332b4b92b66b9ca0c1df87696a", "filename": "gcc/fortran/symbol.c", "status": "modified", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/603cf12f58f33ebf64e339c6e6a18f6f70d74e9f/gcc%2Ffortran%2Fsymbol.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/603cf12f58f33ebf64e339c6e6a18f6f70d74e9f/gcc%2Ffortran%2Fsymbol.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fsymbol.c?ref=603cf12f58f33ebf64e339c6e6a18f6f70d74e9f", "patch": "@@ -2867,6 +2867,30 @@ gfc_get_ha_symbol (const char *name, gfc_symbol **result)\n   return i;\n }\n \n+\n+/* Search for the symtree belonging to a gfc_common_head; we cannot use\n+   head->name as the common_root symtree's name might be mangled.  */\n+\n+static gfc_symtree *\n+find_common_symtree (gfc_symtree *st, gfc_common_head *head)\n+{\n+\n+  gfc_symtree *result;\n+\n+  if (st == NULL)\n+    return NULL;\n+\n+  if (st->n.common == head)\n+    return st;\n+\n+  result = find_common_symtree (st->left, head);\n+  if (!result)  \n+    result = find_common_symtree (st->right, head);\n+\n+  return result;\n+}\n+\n+\n /* Undoes all the changes made to symbols in the current statement.\n    This subroutine is made simpler due to the fact that attributes are\n    never removed once added.  */\n@@ -2890,6 +2914,17 @@ gfc_undo_symbols (void)\n \t\t needs to be removed to stop the resolver looking\n \t\t for a (possibly) dead symbol.  */\n \n+\t      if (p->common_block->head == p && !p->common_next)\n+\t\t{\n+\t\t  gfc_symtree st, *st0;\n+\t\t  st0 = find_common_symtree (p->ns->common_root,\n+\t\t\t\t\t     p->common_block);\n+\n+\t\t  st.name = st0->name;\n+\t\t  gfc_delete_bbt (&p->ns->common_root, &st, compare_symtree);\n+\t\t  free (st0);\n+\t\t}\n+\n \t      if (p->common_block->head == p)\n \t        p->common_block->head = p->common_next;\n \t      else"}]}