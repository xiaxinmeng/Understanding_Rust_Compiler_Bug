{"sha": "077827189d358f788d062a1f504c99412a9de8fb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDc3ODI3MTg5ZDM1OGY3ODhkMDYyYTFmNTA0Yzk5NDEyYTlkZThmYg==", "commit": {"author": {"name": "Kriang Lerdsuwanakij", "email": "lerdsuwa@users.sourceforge.net", "date": "2002-05-19T10:11:50Z"}, "committer": {"name": "Kriang Lerdsuwanakij", "email": "lerdsuwa@gcc.gnu.org", "date": "2002-05-19T10:11:50Z"}, "message": "PR c++/186, DR 259\n\n\tPR c++/186, DR 259\n\t* pt.c (do_decl_instantiation): Don't complain explicit\n\tinstantiation after explicit specialization.\n\t(do_type_instantiation): Likewise.\n\nFrom-SVN: r53621", "tree": {"sha": "d28288c66d4fe4f04aa35f161f16511e8f98c945", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d28288c66d4fe4f04aa35f161f16511e8f98c945"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/077827189d358f788d062a1f504c99412a9de8fb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/077827189d358f788d062a1f504c99412a9de8fb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/077827189d358f788d062a1f504c99412a9de8fb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/077827189d358f788d062a1f504c99412a9de8fb/comments", "author": null, "committer": null, "parents": [{"sha": "47754fd5485a059bba7dd059b719a1d02ff38585", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47754fd5485a059bba7dd059b719a1d02ff38585", "html_url": "https://github.com/Rust-GCC/gccrs/commit/47754fd5485a059bba7dd059b719a1d02ff38585"}], "stats": {"total": 50, "additions": 31, "deletions": 19}, "files": [{"sha": "edf3b81a2f63a142647c40df6bd05a6d6091dfb8", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/077827189d358f788d062a1f504c99412a9de8fb/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/077827189d358f788d062a1f504c99412a9de8fb/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=077827189d358f788d062a1f504c99412a9de8fb", "patch": "@@ -1,3 +1,10 @@\n+2002-05-19  Kriang Lerdsuwanakij  <lerdsuwa@users.sourceforge.net>\n+\n+\tPR c++/186, DR 259\n+\t* pt.c (do_decl_instantiation): Don't complain explicit\n+\tinstantiation after explicit specialization.\n+\t(do_type_instantiation): Likewise.\n+\n 2002-05-19  Alexandre Oliva  <aoliva@redhat.com>\n \n \t* cp-tree.h (complete_type_or_diagnostic): Changed prototype,"}, {"sha": "e54ab8e3ebc93d1cae48c776e29f7b5e55e7353b", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 18, "deletions": 13, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/077827189d358f788d062a1f504c99412a9de8fb/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/077827189d358f788d062a1f504c99412a9de8fb/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=077827189d358f788d062a1f504c99412a9de8fb", "patch": "@@ -9524,12 +9524,16 @@ do_decl_instantiation (declspecs, declarator, storage)\n \n   if (DECL_TEMPLATE_SPECIALIZATION (result))\n     {\n-      /* [temp.spec]\n+      /* DR 259 [temp.spec].\n+\n+\t Both an explicit instantiation and a declaration of an explicit\n+\t specialization shall not appear in a program unless the explicit\n+\t instantiation follows a declaration of the explicit specialization.\n \n-\t No program shall both explicitly instantiate and explicitly\n-\t specialize a template.  */\n-      pedwarn (\"explicit instantiation of `%#D' after\", result);\n-      cp_pedwarn_at (\"explicit specialization here\", result);\n+\t For a given set of template parameters, if an explicit\n+\t instantiation of a template appears after a declaration of an\n+\t explicit specialization for that template, the explicit\n+\t instantiation has no effect.  */\n       return;\n     }\n   else if (DECL_EXPLICIT_INSTANTIATION (result))\n@@ -9659,15 +9663,16 @@ do_type_instantiation (t, storage, complain)\n \n   if (CLASSTYPE_TEMPLATE_SPECIALIZATION (t))\n     {\n-      /* [temp.spec]\n+      /* DR 259 [temp.spec].\n \n-\t No program shall both explicitly instantiate and explicitly\n-\t specialize a template.  */\n-      if (complain & tf_error)\n-\t{\n-\t  error (\"explicit instantiation of `%#T' after\", t);\n-\t  cp_error_at (\"explicit specialization here\", t);\n-\t}\n+\t Both an explicit instantiation and a declaration of an explicit\n+\t specialization shall not appear in a program unless the explicit\n+\t instantiation follows a declaration of the explicit specialization.\n+\n+\t For a given set of template parameters, if an explicit\n+\t instantiation of a template appears after a declaration of an\n+\t explicit specialization for that template, the explicit\n+\t instantiation has no effect.  */\n       return;\n     }\n   else if (CLASSTYPE_EXPLICIT_INSTANTIATION (t))"}, {"sha": "544faf7bdb2368b83b43cf8b9872e5327b432766", "filename": "gcc/testsuite/g++.old-deja/g++.pt/explicit70.C", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/077827189d358f788d062a1f504c99412a9de8fb/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit70.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/077827189d358f788d062a1f504c99412a9de8fb/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit70.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit70.C?ref=077827189d358f788d062a1f504c99412a9de8fb", "patch": "@@ -28,14 +28,14 @@ template class S<void*>; // OK - explicit instantiation of partial\n                          // specialization\n \n template <>\n-struct S<long double> {};  // ERROR - explicit specialization\n+struct S<long double> {};\n \n-template class S<long double>; // ERROR - explicit instantiation after\n+template class S<long double>; // OK - explicit instantiation after\n \n template <>\n-void f(long double) {}        // ERROR - explicit specialization\n+void f(long double) {}\n \n-template void f(long double); // ERROR - explicit instantiation after\n+template void f(long double); // OK - explicit instantiation after\n \n template <class T>\n void g(T);"}, {"sha": "911c6933da4a1988f8f7f08e52f9566a07a57100", "filename": "gcc/testsuite/g++.old-deja/g++.pt/spec19.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/077827189d358f788d062a1f504c99412a9de8fb/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fspec19.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/077827189d358f788d062a1f504c99412a9de8fb/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fspec19.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fspec19.C?ref=077827189d358f788d062a1f504c99412a9de8fb", "patch": "@@ -1,5 +1,5 @@\n // Build don't link:\n \n template<class T> T f(T o) { return o; }\n-template<> int f(int o)    { return o; } // ERROR - after specialization\n-template int f(int);  // ERROR - explicit instantiation\n+template<> int f(int o)    { return o; }\n+template int f(int);"}]}