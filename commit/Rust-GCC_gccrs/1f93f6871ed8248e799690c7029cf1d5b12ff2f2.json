{"sha": "1f93f6871ed8248e799690c7029cf1d5b12ff2f2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWY5M2Y2ODcxZWQ4MjQ4ZTc5OTY5MGM3MDI5Y2YxZDViMTJmZjJmMg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2009-01-07T22:49:29Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2009-01-07T22:49:29Z"}, "message": "re PR libstdc++/38092 (libstdc++ doesn't build with GNU ld 2.19 and Sun as: no .symver support)\n\n\tPR libstdc++/38092\n\t* acinclude.m4 (HAVE_AS_SYMVER_DIRECTIVE): New test.\n\t* src/compatibility.cc: Don't use .symver directives if\n\t_GLIBCXX_HAVE_AS_SYMVER_DIRECTIVE is not defined.\n\t* config.h.in: Regenerated.\n\t* configure: Likewise.\n\nFrom-SVN: r143169", "tree": {"sha": "c51588bf25bcc97ad673fc18f899ae85d03c2a0f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c51588bf25bcc97ad673fc18f899ae85d03c2a0f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1f93f6871ed8248e799690c7029cf1d5b12ff2f2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f93f6871ed8248e799690c7029cf1d5b12ff2f2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1f93f6871ed8248e799690c7029cf1d5b12ff2f2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f93f6871ed8248e799690c7029cf1d5b12ff2f2/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "876080ffb70bdcb889f47aa334547cf25398e943", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/876080ffb70bdcb889f47aa334547cf25398e943", "html_url": "https://github.com/Rust-GCC/gccrs/commit/876080ffb70bdcb889f47aa334547cf25398e943"}], "stats": {"total": 92, "additions": 89, "deletions": 3}, "files": [{"sha": "874880896d44499e42e6db41669a8f1c5f91254a", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f93f6871ed8248e799690c7029cf1d5b12ff2f2/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f93f6871ed8248e799690c7029cf1d5b12ff2f2/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=1f93f6871ed8248e799690c7029cf1d5b12ff2f2", "patch": "@@ -1,3 +1,12 @@\n+2009-01-07  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR libstdc++/38092\n+\t* acinclude.m4 (HAVE_AS_SYMVER_DIRECTIVE): New test.\n+\t* src/compatibility.cc: Don't use .symver directives if\n+\t_GLIBCXX_HAVE_AS_SYMVER_DIRECTIVE is not defined.\n+\t* config.h.in: Regenerated.\n+\t* configure: Likewise.\n+\n 2009-01-07  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR libstdc++/38466"}, {"sha": "71cc7e9bc80d870885344f0284b1c7c0f3c45bd4", "filename": "libstdc++-v3/acinclude.m4", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f93f6871ed8248e799690c7029cf1d5b12ff2f2/libstdc%2B%2B-v3%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f93f6871ed8248e799690c7029cf1d5b12ff2f2/libstdc%2B%2B-v3%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Facinclude.m4?ref=1f93f6871ed8248e799690c7029cf1d5b12ff2f2", "patch": "@@ -2819,6 +2819,16 @@ if test x$enable_symvers != xno ; then\n \t [Define to use symbol versioning in the shared library.])\n fi\n \n+AC_CACHE_CHECK([whether the target supports .symver directive],\n+\t       glibcxx_cv_have_as_symver_directive, [\n+  AC_TRY_COMPILE([void foo (void); __asm (\".symver foo, bar@SYMVER\");],\n+\t\t [], glibcxx_cv_have_as_symver_directive=yes,\n+\t\t glibcxx_cv_have_as_symver_directive=no)])\n+if test $glibcxx_cv_have_as_symver_directive = yes; then\n+  AC_DEFINE(HAVE_AS_SYMVER_DIRECTIVE, 1,\n+    [Define to 1 if the target assembler supports .symver directive.])\n+fi\n+\n AC_SUBST(SYMVER_FILE)\n AC_SUBST(port_specific_symbol_files)\n GLIBCXX_CONDITIONAL(ENABLE_SYMVERS, test $enable_symvers != no)"}, {"sha": "5d63b7fc9238a1a36914630796fad11ec6ab60db", "filename": "libstdc++-v3/config.h.in", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f93f6871ed8248e799690c7029cf1d5b12ff2f2/libstdc%2B%2B-v3%2Fconfig.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f93f6871ed8248e799690c7029cf1d5b12ff2f2/libstdc%2B%2B-v3%2Fconfig.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig.h.in?ref=1f93f6871ed8248e799690c7029cf1d5b12ff2f2", "patch": "@@ -12,6 +12,9 @@\n /* Define to 1 if you have the `asinl' function. */\n #undef HAVE_ASINL\n \n+/* Define to 1 if the target assembler supports .symver directive. */\n+#undef HAVE_AS_SYMVER_DIRECTIVE\n+\n /* Define to 1 if you have the `atan2f' function. */\n #undef HAVE_ATAN2F\n "}, {"sha": "759b2414c1f0ee9d5d57cb310de326ca301eb41d", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 62, "deletions": 0, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f93f6871ed8248e799690c7029cf1d5b12ff2f2/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f93f6871ed8248e799690c7029cf1d5b12ff2f2/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=1f93f6871ed8248e799690c7029cf1d5b12ff2f2", "patch": "@@ -107738,6 +107738,68 @@ _ACEOF\n \n fi\n \n+echo \"$as_me:$LINENO: checking whether the target supports .symver directive\" >&5\n+echo $ECHO_N \"checking whether the target supports .symver directive... $ECHO_C\" >&6\n+if test \"${glibcxx_cv_have_as_symver_directive+set}\" = set; then\n+  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n+else\n+\n+  cat >conftest.$ac_ext <<_ACEOF\n+/* confdefs.h.  */\n+_ACEOF\n+cat confdefs.h >>conftest.$ac_ext\n+cat >>conftest.$ac_ext <<_ACEOF\n+/* end confdefs.h.  */\n+void foo (void); __asm (\".symver foo, bar@SYMVER\");\n+int\n+main ()\n+{\n+\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+rm -f conftest.$ac_objext\n+if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n+  (eval $ac_compile) 2>conftest.er1\n+  ac_status=$?\n+  grep -v '^ *+' conftest.er1 >conftest.err\n+  rm -f conftest.er1\n+  cat conftest.err >&5\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); } &&\n+\t { ac_try='test -z \"$ac_c_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; } &&\n+\t { ac_try='test -s conftest.$ac_objext'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; }; then\n+  glibcxx_cv_have_as_symver_directive=yes\n+else\n+  echo \"$as_me: failed program was:\" >&5\n+sed 's/^/| /' conftest.$ac_ext >&5\n+\n+glibcxx_cv_have_as_symver_directive=no\n+fi\n+rm -f conftest.err conftest.$ac_objext conftest.$ac_ext\n+fi\n+echo \"$as_me:$LINENO: result: $glibcxx_cv_have_as_symver_directive\" >&5\n+echo \"${ECHO_T}$glibcxx_cv_have_as_symver_directive\" >&6\n+if test $glibcxx_cv_have_as_symver_directive = yes; then\n+\n+cat >>confdefs.h <<\\_ACEOF\n+#define HAVE_AS_SYMVER_DIRECTIVE 1\n+_ACEOF\n+\n+fi\n+\n \n \n "}, {"sha": "06f6b9a58c5edf9225d1ef4a0cbc83a98ae8bce3", "filename": "libstdc++-v3/src/compatibility.cc", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f93f6871ed8248e799690c7029cf1d5b12ff2f2/libstdc%2B%2B-v3%2Fsrc%2Fcompatibility.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f93f6871ed8248e799690c7029cf1d5b12ff2f2/libstdc%2B%2B-v3%2Fsrc%2Fcompatibility.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fcompatibility.cc?ref=1f93f6871ed8248e799690c7029cf1d5b12ff2f2", "patch": "@@ -1,6 +1,6 @@\n // Compatibility symbols for previous versions -*- C++ -*-\n \n-// Copyright (C) 2005, 2006\n+// Copyright (C) 2005, 2006, 2009\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -30,7 +30,8 @@\n \n #include <bits/c++config.h>\n \n-#if defined(_GLIBCXX_SYMVER_GNU) && defined(PIC)\n+#if defined(_GLIBCXX_SYMVER_GNU) && defined(PIC) \\\n+    && defined(_GLIBCXX_HAVE_AS_SYMVER_DIRECTIVE)\n #define istreambuf_iterator istreambuf_iteratorXX\n #define basic_fstream basic_fstreamXX\n #define basic_ifstream basic_ifstreamXX\n@@ -204,7 +205,8 @@ _GLIBCXX_END_NAMESPACE\n \n // NB: These symbols renames should go into the shared library only,\n // and only those shared libraries that support versioning.\n-#if defined(_GLIBCXX_SYMVER_GNU) && defined(PIC)\n+#if defined(_GLIBCXX_SYMVER_GNU) && defined(PIC) \\\n+    && defined(_GLIBCXX_HAVE_AS_SYMVER_DIRECTIVE)\n \n /* gcc-3.4.4\n _ZNSt19istreambuf_iteratorIcSt11char_traitsIcEEppEv"}]}