{"sha": "25cd19de2f36ed2fce8aa2e9b8903591352b77a3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjVjZDE5ZGUyZjM2ZWQyZmNlOGFhMmU5Yjg5MDM1OTEzNTJiNzdhMw==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2005-04-15T03:16:20Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2005-04-15T03:16:20Z"}, "message": "cfgrtl.c (purge_all_dead_edge): Remove an unused argument.\n\n\t* cfgrtl.c (purge_all_dead_edge): Remove an unused argument.\n\t* basic-block.h: Update the prototype for\n\tpurge_all_dead_edges.\n\t* cfgexpand.c (tree_expand_cfg): Update a call to\n\tpurge_all_dead_edges.\n\t* combine.c (combine_instructions): Likewise.\n\t* passes.c (rest_of_handle_old_regalloc, rest_of_handle_cse,\n\trest_of_handle_cse2, rest_of_handle_gcse,\n\trest_of_handle_postreload): likewise.\n\nFrom-SVN: r98168", "tree": {"sha": "ae7ea22ccec56e2435490449ff187f687695052d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ae7ea22ccec56e2435490449ff187f687695052d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/25cd19de2f36ed2fce8aa2e9b8903591352b77a3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/25cd19de2f36ed2fce8aa2e9b8903591352b77a3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/25cd19de2f36ed2fce8aa2e9b8903591352b77a3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/25cd19de2f36ed2fce8aa2e9b8903591352b77a3/comments", "author": null, "committer": null, "parents": [{"sha": "c87ac7e8f700f24e213a54f4f0f6852bdd392bf4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c87ac7e8f700f24e213a54f4f0f6852bdd392bf4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c87ac7e8f700f24e213a54f4f0f6852bdd392bf4"}], "stats": {"total": 46, "additions": 21, "deletions": 25}, "files": [{"sha": "2aaf517441643b3028ade0f60504f3b87afbd02c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25cd19de2f36ed2fce8aa2e9b8903591352b77a3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25cd19de2f36ed2fce8aa2e9b8903591352b77a3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=25cd19de2f36ed2fce8aa2e9b8903591352b77a3", "patch": "@@ -1,3 +1,15 @@\n+2005-04-15  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* cfgrtl.c (purge_all_dead_edge): Remove an unused argument.\n+\t* basic-block.h: Update the prototype for\n+\tpurge_all_dead_edges.\n+\t* cfgexpand.c (tree_expand_cfg): Update a call to\n+\tpurge_all_dead_edges.\n+\t* combine.c (combine_instructions): Likewise.\n+\t* passes.c (rest_of_handle_old_regalloc, rest_of_handle_cse,\n+\trest_of_handle_cse2, rest_of_handle_gcse,\n+\trest_of_handle_postreload): likewise.\n+\n 2005-04-15  Alexandre Oliva  <aoliva@redhat.com>\n \n \tPR middle-end/20739"}, {"sha": "fcaa9a952aa601177e970746ef6050972b2643bb", "filename": "gcc/basic-block.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25cd19de2f36ed2fce8aa2e9b8903591352b77a3/gcc%2Fbasic-block.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25cd19de2f36ed2fce8aa2e9b8903591352b77a3/gcc%2Fbasic-block.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbasic-block.h?ref=25cd19de2f36ed2fce8aa2e9b8903591352b77a3", "patch": "@@ -861,7 +861,7 @@ extern int delete_noop_moves (void);\n extern basic_block force_nonfallthru (edge);\n extern rtx block_label (basic_block);\n extern bool forwarder_block_p (basic_block);\n-extern bool purge_all_dead_edges (int);\n+extern bool purge_all_dead_edges (void);\n extern bool purge_dead_edges (basic_block);\n extern void find_many_sub_basic_blocks (sbitmap);\n extern void rtl_make_eh_edge (sbitmap, basic_block, rtx);"}, {"sha": "f7a2f1e14396669910eb01fc8bbad7acc7710f84", "filename": "gcc/cfgexpand.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25cd19de2f36ed2fce8aa2e9b8903591352b77a3/gcc%2Fcfgexpand.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25cd19de2f36ed2fce8aa2e9b8903591352b77a3/gcc%2Fcfgexpand.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgexpand.c?ref=25cd19de2f36ed2fce8aa2e9b8903591352b77a3", "patch": "@@ -1320,7 +1320,7 @@ tree_expand_cfg (void)\n   blocks = sbitmap_alloc (last_basic_block);\n   sbitmap_ones (blocks);\n   find_many_sub_basic_blocks (blocks);\n-  purge_all_dead_edges (0);\n+  purge_all_dead_edges ();\n   sbitmap_free (blocks);\n \n   compact_blocks ();"}, {"sha": "26460488621f2c6c7ad539793ef34e4ebdfb4a5e", "filename": "gcc/cfgrtl.c", "status": "modified", "additions": 1, "deletions": 17, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25cd19de2f36ed2fce8aa2e9b8903591352b77a3/gcc%2Fcfgrtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25cd19de2f36ed2fce8aa2e9b8903591352b77a3/gcc%2Fcfgrtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgrtl.c?ref=25cd19de2f36ed2fce8aa2e9b8903591352b77a3", "patch": "@@ -2455,34 +2455,18 @@ purge_dead_edges (basic_block bb)\n    true if some edge has been eliminated.  */\n \n bool\n-purge_all_dead_edges (int update_life_p)\n+purge_all_dead_edges (void)\n {\n   int purged = false;\n-  sbitmap blocks = 0;\n   basic_block bb;\n \n-  if (update_life_p)\n-    {\n-      blocks = sbitmap_alloc (last_basic_block);\n-      sbitmap_zero (blocks);\n-    }\n-\n   FOR_EACH_BB (bb)\n     {\n       bool purged_here = purge_dead_edges (bb);\n \n       purged |= purged_here;\n-      if (purged_here && update_life_p)\n-\tSET_BIT (blocks, bb->index);\n     }\n \n-  if (update_life_p && purged)\n-    update_life_info (blocks, UPDATE_LIFE_GLOBAL,\n-\t\t      PROP_DEATH_NOTES | PROP_SCAN_DEAD_CODE\n-\t\t      | PROP_KILL_DEAD_CODE);\n-\n-  if (update_life_p)\n-    sbitmap_free (blocks);\n   return purged;\n }\n "}, {"sha": "96f332013725de1f2a1fd0f488778fe8bce29db8", "filename": "gcc/combine.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25cd19de2f36ed2fce8aa2e9b8903591352b77a3/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25cd19de2f36ed2fce8aa2e9b8903591352b77a3/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=25cd19de2f36ed2fce8aa2e9b8903591352b77a3", "patch": "@@ -886,7 +886,7 @@ combine_instructions (rtx f, unsigned int nregs)\n \n   EXECUTE_IF_SET_IN_SBITMAP (refresh_blocks, 0, i,\n \t\t\t     BASIC_BLOCK (i)->flags |= BB_DIRTY);\n-  new_direct_jump_p |= purge_all_dead_edges (0);\n+  new_direct_jump_p |= purge_all_dead_edges ();\n   delete_noop_moves ();\n \n   update_life_info_in_dirty_blocks (UPDATE_LIFE_GLOBAL_RM_NOTES,"}, {"sha": "d210bcf5592c15705966655b2e5972c37e2d59d9", "filename": "gcc/passes.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25cd19de2f36ed2fce8aa2e9b8903591352b77a3/gcc%2Fpasses.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25cd19de2f36ed2fce8aa2e9b8903591352b77a3/gcc%2Fpasses.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpasses.c?ref=25cd19de2f36ed2fce8aa2e9b8903591352b77a3", "patch": "@@ -459,7 +459,7 @@ rest_of_handle_old_regalloc (void)\n       timevar_push (TV_JUMP);\n \n       rebuild_jump_labels (get_insns ());\n-      purge_all_dead_edges (0);\n+      purge_all_dead_edges ();\n       delete_unreachable_blocks ();\n \n       timevar_pop (TV_JUMP);\n@@ -978,7 +978,7 @@ rest_of_handle_cse (void)\n   tem = cse_main (get_insns (), max_reg_num (), dump_file);\n   if (tem)\n     rebuild_jump_labels (get_insns ());\n-  if (purge_all_dead_edges (0))\n+  if (purge_all_dead_edges ())\n     delete_unreachable_blocks ();\n \n   delete_trivially_dead_insns (get_insns (), max_reg_num ());\n@@ -1018,7 +1018,7 @@ rest_of_handle_cse2 (void)\n      bypassed safely.  */\n   cse_condition_code_reg ();\n \n-  purge_all_dead_edges (0);\n+  purge_all_dead_edges ();\n   delete_trivially_dead_insns (get_insns (), max_reg_num ());\n \n   if (tem)\n@@ -1061,7 +1061,7 @@ rest_of_handle_gcse (void)\n       timevar_push (TV_CSE);\n       reg_scan (get_insns (), max_reg_num ());\n       tem2 = cse_main (get_insns (), max_reg_num (), dump_file);\n-      purge_all_dead_edges (0);\n+      purge_all_dead_edges ();\n       delete_trivially_dead_insns (get_insns (), max_reg_num ());\n       timevar_pop (TV_CSE);\n       cse_not_expected = !flag_rerun_cse_after_loop;\n@@ -1409,7 +1409,7 @@ rest_of_handle_postreload (void)\n   /* reload_cse_regs can eliminate potentially-trapping MEMs.\n      Remove any EH edges associated with them.  */\n   if (flag_non_call_exceptions)\n-    purge_all_dead_edges (0);\n+    purge_all_dead_edges ();\n \n   close_dump_file (DFI_postreload, print_rtl_with_bb, get_insns ());\n   timevar_pop (TV_RELOAD_CSE_REGS);"}]}