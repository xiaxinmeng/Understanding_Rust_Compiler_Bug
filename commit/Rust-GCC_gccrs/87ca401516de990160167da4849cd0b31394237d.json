{"sha": "87ca401516de990160167da4849cd0b31394237d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODdjYTQwMTUxNmRlOTkwMTYwMTY3ZGE0ODQ5Y2QwYjMxMzk0MjM3ZA==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2018-02-14T14:19:50Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2018-02-14T14:19:50Z"}, "message": "cp-tree.h (do_auto_deduction (tree, tree, tree)): Remove.\n\n2018-02-14  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* cp-tree.h (do_auto_deduction (tree, tree, tree)): Remove.\n\t(do_auto_deduction (tree, tree, tree, tsubst_flags_t,\n\tauto_deduction_context, tree, int): Add defaults.\n\t* pt.c (do_auto_deduction (tree, tree, tree)): Remove definition.\n\t(tsubst_omp_for_iterator): Adjust do_auto_deduction call, forward\n\ttsubst_flags_t argument.\n\t* init.c (build_new): Likewise.\n\nFrom-SVN: r257659", "tree": {"sha": "7b5662bc904bbb128554675d4ffb26872f44ebcd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7b5662bc904bbb128554675d4ffb26872f44ebcd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/87ca401516de990160167da4849cd0b31394237d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/87ca401516de990160167da4849cd0b31394237d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/87ca401516de990160167da4849cd0b31394237d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/87ca401516de990160167da4849cd0b31394237d/comments", "author": null, "committer": null, "parents": [{"sha": "da07141fd73342113551814b404044e9ca72afdb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da07141fd73342113551814b404044e9ca72afdb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da07141fd73342113551814b404044e9ca72afdb"}], "stats": {"total": 32, "additions": 16, "deletions": 16}, "files": [{"sha": "4955bf9e1a0ef43d045db6578ea43b0e58b54005", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87ca401516de990160167da4849cd0b31394237d/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87ca401516de990160167da4849cd0b31394237d/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=87ca401516de990160167da4849cd0b31394237d", "patch": "@@ -1,3 +1,13 @@\n+2018-02-14  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* cp-tree.h (do_auto_deduction (tree, tree, tree)): Remove.\n+\t(do_auto_deduction (tree, tree, tree, tsubst_flags_t,\n+\tauto_deduction_context, tree, int): Add defaults.\n+\t* pt.c (do_auto_deduction (tree, tree, tree)): Remove definition.\n+\t(tsubst_omp_for_iterator): Adjust do_auto_deduction call, forward\n+\ttsubst_flags_t argument.\n+\t* init.c (build_new): Likewise.\n+\n 2018-02-13  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/84364"}, {"sha": "9038d677b2de89bfa3b2cf58b6a663685fceaa8d", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87ca401516de990160167da4849cd0b31394237d/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87ca401516de990160167da4849cd0b31394237d/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=87ca401516de990160167da4849cd0b31394237d", "patch": "@@ -6470,10 +6470,11 @@ extern tree make_auto\t\t\t\t(void);\n extern tree make_decltype_auto\t\t\t(void);\n extern tree make_template_placeholder\t\t(tree);\n extern bool template_placeholder_p\t\t(tree);\n-extern tree do_auto_deduction                   (tree, tree, tree);\n extern tree do_auto_deduction                   (tree, tree, tree,\n-                                                 tsubst_flags_t,\n-                                                 auto_deduction_context,\n+                                                 tsubst_flags_t\n+\t\t\t\t\t\t = tf_warning_or_error,\n+                                                 auto_deduction_context\n+\t\t\t\t\t\t = adc_unspecified,\n \t\t\t\t\t\t tree = NULL_TREE,\n \t\t\t\t\t\t int = LOOKUP_NORMAL);\n extern tree type_uses_auto\t\t\t(tree);"}, {"sha": "d0d14abdc9fa6408a40c0bf3fda72b0916fb3fd0", "filename": "gcc/cp/init.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87ca401516de990160167da4849cd0b31394237d/gcc%2Fcp%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87ca401516de990160167da4849cd0b31394237d/gcc%2Fcp%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Finit.c?ref=87ca401516de990160167da4849cd0b31394237d", "patch": "@@ -3593,7 +3593,7 @@ build_new (vec<tree, va_gc> **placement, tree type, tree nelts,\n \t      d_init = (**init)[0];\n \t      d_init = resolve_nondeduced_context (d_init, complain);\n \t    }\n-\t  type = do_auto_deduction (type, d_init, auto_node);\n+\t  type = do_auto_deduction (type, d_init, auto_node, complain);\n \t}\n     }\n "}, {"sha": "e62e320fe31132203c5f42913eaf249fd0d6c1a4", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 1, "deletions": 12, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87ca401516de990160167da4849cd0b31394237d/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87ca401516de990160167da4849cd0b31394237d/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=87ca401516de990160167da4849cd0b31394237d", "patch": "@@ -15785,7 +15785,7 @@ tsubst_omp_for_iterator (tree t, int i, tree declv, tree orig_declv,\n   tree auto_node = type_uses_auto (TREE_TYPE (decl));\n   if (auto_node && init)\n     TREE_TYPE (decl)\n-      = do_auto_deduction (TREE_TYPE (decl), init, auto_node);\n+      = do_auto_deduction (TREE_TYPE (decl), init, auto_node, complain);\n \n   gcc_assert (!type_dependent_expression_p (decl));\n \n@@ -25940,17 +25940,6 @@ do_class_deduction (tree ptype, tree tmpl, tree init, int flags,\n   return cp_build_qualified_type (TREE_TYPE (call), cp_type_quals (ptype));\n }\n \n-/* Replace occurrences of 'auto' in TYPE with the appropriate type deduced\n-   from INIT.  AUTO_NODE is the TEMPLATE_TYPE_PARM used for 'auto' in TYPE.  */\n-\n-tree\n-do_auto_deduction (tree type, tree init, tree auto_node)\n-{\n-  return do_auto_deduction (type, init, auto_node,\n-                            tf_warning_or_error,\n-                            adc_unspecified);\n-}\n-\n /* Replace occurrences of 'auto' in TYPE with the appropriate type deduced\n    from INIT.  AUTO_NODE is the TEMPLATE_TYPE_PARM used for 'auto' in TYPE.\n    The CONTEXT determines the context in which auto deduction is performed"}]}