{"sha": "14be024e77ab8d99fde0bcd4b69bdeee55be2624", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTRiZTAyNGU3N2FiOGQ5OWZkZTBiY2Q0YjY5YmRlZWU1NWJlMjYyNA==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-05-25T02:25:35Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-05-25T02:25:35Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r1076", "tree": {"sha": "52d3ce128553af190080156a0dd6bbce8cfee2ed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/52d3ce128553af190080156a0dd6bbce8cfee2ed"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/14be024e77ab8d99fde0bcd4b69bdeee55be2624", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14be024e77ab8d99fde0bcd4b69bdeee55be2624", "html_url": "https://github.com/Rust-GCC/gccrs/commit/14be024e77ab8d99fde0bcd4b69bdeee55be2624", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14be024e77ab8d99fde0bcd4b69bdeee55be2624/comments", "author": null, "committer": null, "parents": [{"sha": "e85ddd991a921f3d0ef10ee2922ad460e04abe01", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e85ddd991a921f3d0ef10ee2922ad460e04abe01", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e85ddd991a921f3d0ef10ee2922ad460e04abe01"}], "stats": {"total": 24, "additions": 19, "deletions": 5}, "files": [{"sha": "59db147afa74c6ef6ea59a29b61d4df76ae39906", "filename": "gcc/gcc.c", "status": "modified", "additions": 19, "deletions": 5, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14be024e77ab8d99fde0bcd4b69bdeee55be2624/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14be024e77ab8d99fde0bcd4b69bdeee55be2624/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=14be024e77ab8d99fde0bcd4b69bdeee55be2624", "patch": "@@ -1368,16 +1368,17 @@ static int last_pipe_input;\n    NOT_LAST is nonzero if this is not the last subcommand\n    (i.e. its output should be piped to the next one.)  */\n \n+#ifndef OS2\n #ifdef __MSDOS__\n \n /* Declare these to avoid compilation error.  They won't be called.  */\n int execv(const char *a, const char **b){}\n int execvp(const char *a, const char **b){}\n \n static int\n-pexecute (func, program, argv, not_last)\n+pexecute (search_flag, program, argv, not_last)\n+     int search_flag;\n      char *program;\n-     int (*func)();\n      char *argv[];\n      int not_last;\n {\n@@ -1413,12 +1414,13 @@ pexecute (func, program, argv, not_last)\n #else /* not __MSDOS__ */\n \n static int\n-pexecute (func, program, argv, not_last)\n+pexecute (search_flag, program, argv, not_last)\n+     int search_flag;\n      char *program;\n-     int (*func)();\n      char *argv[];\n      int not_last;\n {\n+  int (*func)() = (search_flag ? execv : execvp);\n   int pid;\n   int pdes[2];\n   int input_desc = last_pipe_input;\n@@ -1500,6 +1502,18 @@ pexecute (func, program, argv, not_last)\n }\n \n #endif /* not __MSDOS__ */\n+#else /* not OS2 */\n+\n+static int\n+pexecute (search_flag, program, argv, not_last)\n+     int search_flag;\n+     char *program;\n+     char *argv[];\n+     int not_last;\n+{\n+  return (search_flag ? spawnv : spawnvp) (1, program, argv);\n+}\n+#endif /* not OS2 */\n \f\n /* Execute the command specified by the arguments on the current line of spec.\n    When using pipes, this includes several piped-together commands\n@@ -1594,7 +1608,7 @@ execute ()\n     {\n       char *string = commands[i].argv[0];\n \n-      commands[i].pid = pexecute ((string != commands[i].prog ? execv : execvp),\n+      commands[i].pid = pexecute (string != commands[i].prog,\n \t\t\t\t  string, commands[i].argv,\n \t\t\t\t  i + 1 < n_commands);\n "}]}