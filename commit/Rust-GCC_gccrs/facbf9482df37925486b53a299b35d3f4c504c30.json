{"sha": "facbf9482df37925486b53a299b35d3f4c504c30", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmFjYmY5NDgyZGYzNzkyNTQ4NmI1M2EyOTliMzVkM2Y0YzUwNGMzMA==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2007-02-04T13:02:45Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2007-02-04T13:02:45Z"}, "message": "tree-ssa-copyrename.c (copy_rename_partition_coalesce): Return true when something was changed.\n\n\t* tree-ssa-copyrename.c (copy_rename_partition_coalesce): Return\n\ttrue when something was changed.\n\t(rename_ssa_copies): When something was changed, do\n\tTODO_remove_unused_locals.\n\t* tree-ssa-forwprop.c (tree_ssa_forward_propagate_single_use_value):\n\tadd TODO_remove_unused_locals when instruction was removed.\n\nFrom-SVN: r121571", "tree": {"sha": "373031b3d25c6165ed4fbc6219e4c6e3bc6cae1f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/373031b3d25c6165ed4fbc6219e4c6e3bc6cae1f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/facbf9482df37925486b53a299b35d3f4c504c30", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/facbf9482df37925486b53a299b35d3f4c504c30", "html_url": "https://github.com/Rust-GCC/gccrs/commit/facbf9482df37925486b53a299b35d3f4c504c30", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/facbf9482df37925486b53a299b35d3f4c504c30/comments", "author": null, "committer": null, "parents": [{"sha": "22ad64b60c48637d63afc5b0b4d38a5568b25aa3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22ad64b60c48637d63afc5b0b4d38a5568b25aa3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/22ad64b60c48637d63afc5b0b4d38a5568b25aa3"}], "stats": {"total": 40, "additions": 26, "deletions": 14}, "files": [{"sha": "180e9c6e9c2c54b8a6a3e86dff270367ed7459d6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/facbf9482df37925486b53a299b35d3f4c504c30/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/facbf9482df37925486b53a299b35d3f4c504c30/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=facbf9482df37925486b53a299b35d3f4c504c30", "patch": "@@ -1,3 +1,12 @@\n+2007-02-04  Jan Hubicka  <jh@suse.cz>\n+\n+\t* tree-ssa-copyrename.c (copy_rename_partition_coalesce): Return\n+\ttrue when something was changed.\n+\t(rename_ssa_copies): When something was changed, do\n+\tTODO_remove_unused_locals.\n+\t* tree-ssa-forwprop.c (tree_ssa_forward_propagate_single_use_value):\n+\tadd TODO_remove_unused_locals when instruction was removed.\n+\n 2007-02-04  Jan Hubicka  <jh@suse.cz>\n \n \t* ipa-inline.c (try_inline): Improve debug output; work on already"}, {"sha": "e06de4caaf6894ccf55088241ea1f070ed60be70", "filename": "gcc/tree-ssa-copyrename.c", "status": "modified", "additions": 16, "deletions": 14, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/facbf9482df37925486b53a299b35d3f4c504c30/gcc%2Ftree-ssa-copyrename.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/facbf9482df37925486b53a299b35d3f4c504c30/gcc%2Ftree-ssa-copyrename.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-copyrename.c?ref=facbf9482df37925486b53a299b35d3f4c504c30", "patch": "@@ -109,7 +109,7 @@ Boston, MA 02110-1301, USA.  */\n /* Coalesce the partitions in MAP representing VAR1 and VAR2 if it is valid.\n    Choose a representative for the partition, and send debug info to DEBUG.  */\n \n-static void\n+static bool\n copy_rename_partition_coalesce (var_map map, tree var1, tree var2, FILE *debug)\n {\n   int p1, p2, p3;\n@@ -151,7 +151,7 @@ copy_rename_partition_coalesce (var_map map, tree var1, tree var2, FILE *debug)\n     {\n       if (debug)\n \tfprintf (debug, \" : Already coalesced.\\n\");\n-      return;\n+      return false;\n     }\n \n   /* Don't coalesce if one of the variables occurs in an abnormal PHI.  */\n@@ -161,7 +161,7 @@ copy_rename_partition_coalesce (var_map map, tree var1, tree var2, FILE *debug)\n     {\n       if (debug)\n \tfprintf (debug, \" : Abnormal PHI barrier.  No coalesce.\\n\");\n-      return;\n+      return false;\n     }\n \n   /* Partitions already have the same root, simply merge them.  */\n@@ -170,22 +170,22 @@ copy_rename_partition_coalesce (var_map map, tree var1, tree var2, FILE *debug)\n       p1 = partition_union (map->var_partition, p1, p2);\n       if (debug)\n \tfprintf (debug, \" : Same root, coalesced --> P%d.\\n\", p1);\n-      return;\n+      return false;\n     }\n \n   /* Never attempt to coalesce 2 difference parameters.  */\n   if (TREE_CODE (root1) == PARM_DECL && TREE_CODE (root2) == PARM_DECL)\n     {\n       if (debug)\n         fprintf (debug, \" : 2 different PARM_DECLS. No coalesce.\\n\");\n-      return;\n+      return false;\n     }\n \n   if ((TREE_CODE (root1) == RESULT_DECL) != (TREE_CODE (root2) == RESULT_DECL))\n     {\n       if (debug)\n         fprintf (debug, \" : One root a RESULT_DECL. No coalesce.\\n\");\n-      return;\n+      return false;\n     }\n \n   ign1 = TREE_CODE (root1) == VAR_DECL && DECL_IGNORED_P (root1);\n@@ -203,7 +203,7 @@ copy_rename_partition_coalesce (var_map map, tree var1, tree var2, FILE *debug)\n \t{\n \t  if (debug)\n \t    fprintf (debug, \" : 2 different USER vars. No coalesce.\\n\");\n-\t  return;\n+\t  return false;\n \t}\n     }\n \n@@ -214,7 +214,7 @@ copy_rename_partition_coalesce (var_map map, tree var1, tree var2, FILE *debug)\n     {\n       if (debug)\n \tfprintf (debug, \" : 2 memory tags. No coalesce.\\n\");\n-      return;\n+      return false;\n     }\n \n   /* If both values have default defs, we can't coalesce.  If only one has a \n@@ -225,7 +225,7 @@ copy_rename_partition_coalesce (var_map map, tree var1, tree var2, FILE *debug)\n \t{\n \t  if (debug)\n \t    fprintf (debug, \" : 2 default defs. No coalesce.\\n\");\n-\t  return;\n+\t  return false;\n \t}\n       else\n         {\n@@ -244,7 +244,7 @@ copy_rename_partition_coalesce (var_map map, tree var1, tree var2, FILE *debug)\n     {\n       if (debug)\n \tfprintf (debug, \" : Incompatible types.  No coalesce.\\n\");\n-      return;\n+      return false;\n     }\n \n   /* Don't coalesce if the aliasing sets of the types are different.  */\n@@ -255,7 +255,7 @@ copy_rename_partition_coalesce (var_map map, tree var1, tree var2, FILE *debug)\n     {\n       if (debug)\n \tfprintf (debug, \" : 2 different aliasing sets. No coalesce.\\n\");\n-      return;\n+      return false;\n     }\n \n \n@@ -283,6 +283,7 @@ copy_rename_partition_coalesce (var_map map, tree var1, tree var2, FILE *debug)\n \t\t\t  TDF_SLIM);\n       fprintf (debug, \"\\n\");\n     }\n+  return true;\n }\n \n \n@@ -301,6 +302,7 @@ rename_ssa_copies (void)\n   tree phi, stmt, var, part_var;\n   unsigned x;\n   FILE *debug;\n+  bool updated = false;\n \n   if (dump_file && (dump_flags & TDF_DETAILS))\n     debug = dump_file;\n@@ -321,7 +323,7 @@ rename_ssa_copies (void)\n \t      tree rhs = GIMPLE_STMT_OPERAND (stmt, 1);\n \n               if (TREE_CODE (lhs) == SSA_NAME && TREE_CODE (rhs) == SSA_NAME)\n-\t\tcopy_rename_partition_coalesce (map, lhs, rhs, debug);\n+\t\tupdated |= copy_rename_partition_coalesce (map, lhs, rhs, debug);\n \t    }\n \t}\n     }\n@@ -342,7 +344,7 @@ rename_ssa_copies (void)\n             {\n               tree arg = PHI_ARG_DEF (phi, i);\n               if (TREE_CODE (arg) == SSA_NAME)\n-\t\tcopy_rename_partition_coalesce (map, res, arg, debug);\n+\t\tupdated |= copy_rename_partition_coalesce (map, res, arg, debug);\n             }\n         }\n     }\n@@ -374,7 +376,7 @@ rename_ssa_copies (void)\n     }\n \n   delete_var_map (map);\n-  return 0;\n+  return updated ? TODO_remove_unused_locals : 0;\n }\n \n /* Return true if copy rename is to be performed.  */"}, {"sha": "446efa7434a7914537955736601bc06c3b90e42e", "filename": "gcc/tree-ssa-forwprop.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/facbf9482df37925486b53a299b35d3f4c504c30/gcc%2Ftree-ssa-forwprop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/facbf9482df37925486b53a299b35d3f4c504c30/gcc%2Ftree-ssa-forwprop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-forwprop.c?ref=facbf9482df37925486b53a299b35d3f4c504c30", "patch": "@@ -1003,6 +1003,7 @@ tree_ssa_forward_propagate_single_use_vars (void)\n \t\t  if (forward_propagate_addr_expr (stmt, &some))\n \t\t    {\n \t\t      release_defs (stmt);\n+\t\t      todoflags |= TODO_remove_unused_locals;\n \t\t      bsi_remove (&bsi, true);\n \t\t    }\n \t\t  else"}]}