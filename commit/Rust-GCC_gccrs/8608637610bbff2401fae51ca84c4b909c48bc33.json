{"sha": "8608637610bbff2401fae51ca84c4b909c48bc33", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODYwODYzNzYxMGJiZmYyNDAxZmFlNTFjYTg0YzRiOTA5YzQ4YmMzMw==", "commit": {"author": {"name": "Oleg Endo", "email": "olegendo@gcc.gnu.org", "date": "2012-10-04T18:32:20Z"}, "committer": {"name": "Oleg Endo", "email": "olegendo@gcc.gnu.org", "date": "2012-10-04T18:32:20Z"}, "message": "re PR target/33135 ([SH] -ffinite-math-only should not be on by default)\n\n\tPR target/33135\n\t* config/sh/t-sh (HOST_LIBGCC2_CFLAGS): Delete.\n\t* config/sh/t-netbsd (HOST_LIBGCC2_CFLAGS): Delete.\n\t* config/sh/t-linux (HOST_LIBGCC2_CFLAGS): Remove mieee option.\n\nFrom-SVN: r192097", "tree": {"sha": "401ada21f13763d09c9aafd4f4a2d264aab2063c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/401ada21f13763d09c9aafd4f4a2d264aab2063c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8608637610bbff2401fae51ca84c4b909c48bc33", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8608637610bbff2401fae51ca84c4b909c48bc33", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8608637610bbff2401fae51ca84c4b909c48bc33", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8608637610bbff2401fae51ca84c4b909c48bc33/comments", "author": null, "committer": null, "parents": [{"sha": "226a0af83759b5b6133c233f3e467e2183dc8fcc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/226a0af83759b5b6133c233f3e467e2183dc8fcc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/226a0af83759b5b6133c233f3e467e2183dc8fcc"}], "stats": {"total": 57, "additions": 43, "deletions": 14}, "files": [{"sha": "6a619845897e805024b3ffe20ac7bfd4d59f4b62", "filename": "gcc/config/sh/sh.md", "status": "modified", "additions": 34, "deletions": 9, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8608637610bbff2401fae51ca84c4b909c48bc33/gcc%2Fconfig%2Fsh%2Fsh.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8608637610bbff2401fae51ca84c4b909c48bc33/gcc%2Fconfig%2Fsh%2Fsh.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.md?ref=8608637610bbff2401fae51ca84c4b909c48bc33", "patch": "@@ -835,9 +835,13 @@\n \n (define_insn_and_split \"*cmp_div0s_1\"\n   [(set (match_operand:SI 0 \"arith_reg_dest\" \"\")\n-\t(ge:SI (xor:SI (match_operand:SI 1 \"arith_reg_operand\" \"\")\n-\t\t       (match_operand:SI 2 \"arith_reg_operand\" \"\"))\n-\t       (const_int 0)))\n+;;\t(ge:SI (xor:SI (match_operand:SI 1 \"arith_reg_operand\" \"\")\n+;;\t\t       (match_operand:SI 2 \"arith_reg_operand\" \"\"))\n+;;\t       (const_int 0)))\n+\t(xor:SI (lshiftrt:SI (match_operand:SI 1 \"arith_reg_operand\")\n+\t\t\t     (const_int 31))\n+\t\t(ge:SI (match_operand:SI 2 \"arith_reg_operand\")\n+\t\t       (const_int 0))))\n    (clobber (reg:SI T_REG))]\n   \"TARGET_SH1\"\n   \"#\"\n@@ -853,9 +857,13 @@\n \n (define_insn_and_split \"*cmp_div0s_1\"\n   [(set (reg:SI T_REG)\n-\t(ge:SI (xor:SI (match_operand:SI 0 \"arith_reg_operand\" \"\")\n-\t\t       (match_operand:SI 1 \"arith_reg_operand\" \"\"))\n-\t       (const_int 0)))]\n+;;\t(ge:SI (xor:SI (match_operand:SI 0 \"arith_reg_operand\" \"\")\n+;;\t\t       (match_operand:SI 1 \"arith_reg_operand\" \"\"))\n+;;\t       (const_int 0)))]\n+\t(eq:SI (lshiftrt:SI (match_operand:SI 0 \"arith_reg_operand\")\n+\t\t\t    (const_int 31))\n+\t       (ge:SI (match_operand:SI 1 \"arith_reg_operand\")\n+\t\t      (const_int 0))))]\n   \"TARGET_SH1\"\n   \"#\"\n   \"&& can_create_pseudo_p ()\"\n@@ -1002,9 +1010,13 @@\n \n (define_insn_and_split \"*cbranch_div0s\"\n   [(set (pc)\n-\t(if_then_else (ge (xor:SI (match_operand:SI 0 \"arith_reg_operand\" \"\")\n-\t\t\t\t  (match_operand:SI 1 \"arith_reg_operand\" \"\"))\n-\t\t\t  (const_int 0))\n+;;\t(if_then_else (ge (xor:SI (match_operand:SI 0 \"arith_reg_operand\" \"\")\n+;;\t\t\t\t  (match_operand:SI 1 \"arith_reg_operand\" \"\"))\n+;;\t\t\t  (const_int 0))\n+\t(if_then_else (eq (lshiftrt:SI (match_operand:SI 0 \"arith_reg_operand\")\n+\t\t\t\t       (const_int 31))\n+\t\t\t  (ge:SI (match_operand:SI 1 \"arith_reg_operand\")\n+\t\t\t\t (const_int 0)))\n \t\t      (label_ref (match_operand 2))\n \t\t      (pc)))\n    (clobber (reg:SI T_REG))]\n@@ -10669,6 +10681,19 @@ label:\n    DONE;\n })\n \n+;; The *cstoresi pattern is for combine, so that it can apply some\n+;; comparison canonicalization if it hasn't been done before.\n+(define_insn_and_split \"*cstoresi\"\n+  [(set (match_operand:SI 0 \"arith_reg_dest\")\n+\t(ge:SI (match_operand:SI 1 \"arith_reg_operand\")\n+\t       (const_int 0)))\n+   (clobber (reg:SI T_REG))]\n+  \"TARGET_SH1\"\n+  \"#\"\n+  \"&& 1\"\n+  [(set (reg:SI T_REG) (ge:SI (match_dup 1) (const_int 0)))\n+   (set (match_dup 0) (reg:SI T_REG))])\n+\n (define_expand \"cstoredi4\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n \t(match_operator:SI 1 \"comparison_operator\""}, {"sha": "4f2dc9821afe1d3d11dc044cbd8bf7ae0152810f", "filename": "gcc/testsuite/gcc.target/sh/pr52933-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8608637610bbff2401fae51ca84c4b909c48bc33/gcc%2Ftestsuite%2Fgcc.target%2Fsh%2Fpr52933-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8608637610bbff2401fae51ca84c4b909c48bc33/gcc%2Ftestsuite%2Fgcc.target%2Fsh%2Fpr52933-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fsh%2Fpr52933-1.c?ref=8608637610bbff2401fae51ca84c4b909c48bc33", "patch": "@@ -8,7 +8,7 @@\n /* { dg-final { scan-assembler-times \"div0s\" 25 } } */\n /* { dg-final { scan-assembler-not \"tst\" } } */\n \n-typedef unsigned char bool;\n+// typedef unsigned char bool;\n \n int other_func_a (int, int);\n int other_func_b (int, int);"}, {"sha": "693f395b6da134a49168f9dab9242f960129aadb", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8608637610bbff2401fae51ca84c4b909c48bc33/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8608637610bbff2401fae51ca84c4b909c48bc33/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=8608637610bbff2401fae51ca84c4b909c48bc33", "patch": "@@ -1,3 +1,10 @@\n+2012-10-04  Oleg Endo  <olegendo@gcc.gnu.org>\n+\n+\tPR target/33135\n+\t* config/sh/t-sh (HOST_LIBGCC2_CFLAGS): Delete.\n+\t* config/sh/t-netbsd (HOST_LIBGCC2_CFLAGS): Delete.\n+\t* config/sh/t-linux (HOST_LIBGCC2_CFLAGS): Remove mieee option.\n+\n 2012-10-03  Oleg Endo  <olegendo@gcc.gnu.org>\n \n \tPR target/50457"}, {"sha": "d316db937081b8d2e19fc246fbae3a0e4b2e0461", "filename": "libgcc/config/sh/t-linux", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8608637610bbff2401fae51ca84c4b909c48bc33/libgcc%2Fconfig%2Fsh%2Ft-linux", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8608637610bbff2401fae51ca84c4b909c48bc33/libgcc%2Fconfig%2Fsh%2Ft-linux", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fsh%2Ft-linux?ref=8608637610bbff2401fae51ca84c4b909c48bc33", "patch": "@@ -2,7 +2,7 @@ LIB1ASMFUNCS_CACHE = _ic_invalidate _ic_invalidate_array\n \n LIB2ADD = $(srcdir)/config/sh/linux-atomic.c\n \n-HOST_LIBGCC2_CFLAGS += -mieee -DNO_FPSCR_VALUES\n+HOST_LIBGCC2_CFLAGS += -DNO_FPSCR_VALUES\n \n # Silence atomic built-in related warnings in linux-atomic.c.\n # Unfortunately the conflicting types warning can't be disabled selectively."}, {"sha": "93fe287e5c869bb09d2d2a434787b0bdc0fecf2c", "filename": "libgcc/config/sh/t-netbsd", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8608637610bbff2401fae51ca84c4b909c48bc33/libgcc%2Fconfig%2Fsh%2Ft-netbsd", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8608637610bbff2401fae51ca84c4b909c48bc33/libgcc%2Fconfig%2Fsh%2Ft-netbsd", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fsh%2Ft-netbsd?ref=8608637610bbff2401fae51ca84c4b909c48bc33", "patch": "@@ -1,3 +1,2 @@\n LIB1ASMFUNCS_CACHE = _ic_invalidate\n \n-HOST_LIBGCC2_CFLAGS += -mieee"}, {"sha": "61cfe79a6f824ccd81ff6cea227a958bf0d96f51", "filename": "libgcc/config/sh/t-sh", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8608637610bbff2401fae51ca84c4b909c48bc33/libgcc%2Fconfig%2Fsh%2Ft-sh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8608637610bbff2401fae51ca84c4b909c48bc33/libgcc%2Fconfig%2Fsh%2Ft-sh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fsh%2Ft-sh?ref=8608637610bbff2401fae51ca84c4b909c48bc33", "patch": "@@ -59,5 +59,3 @@ div_table-4-300.o: $(srcdir)/config/sh/lib1funcs-4-300.S\n libgcc-4-300.a: div_table-4-300.o\n \t$(AR_CREATE_FOR_TARGET) $@ div_table-4-300.o\n \n-HOST_LIBGCC2_CFLAGS += -mieee\n-"}]}