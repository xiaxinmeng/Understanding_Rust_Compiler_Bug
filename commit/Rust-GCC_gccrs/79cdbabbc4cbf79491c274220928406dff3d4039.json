{"sha": "79cdbabbc4cbf79491c274220928406dff3d4039", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzljZGJhYmJjNGNiZjc5NDkxYzI3NDIyMDkyODQwNmRmZjNkNDAzOQ==", "commit": {"author": {"name": "Christophe Lyon", "email": "christophe.lyon@linaro.org", "date": "2021-03-24T08:51:41Z"}, "committer": {"name": "Christophe Lyon", "email": "christophe.lyon@linaro.org", "date": "2021-03-24T14:22:48Z"}, "message": "arm: Fix MVE constraints for movmisalign [PR target/99727]\n\nMVE has different constraints than Neon for load/store: we should use\nthe Ux constraint instead of Um.\n\n2021-03-24  Christophe Lyon  <christophe.lyon@linaro.org>\n\n\tPR target/99727\n\tgcc/\n\t* config/arm/mve.md (movmisalign<mode>_mve_store): Use Ux\n\tconstraint.\n\t(movmisalign<mode>_mve_load): Likewise.\n\n\tgcc/testsuite/\n\t* gcc.target/arm/pr99727.c: New test.", "tree": {"sha": "5ae8f573e28c425aedc0cbbb7da0a0a96d6ab359", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5ae8f573e28c425aedc0cbbb7da0a0a96d6ab359"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/79cdbabbc4cbf79491c274220928406dff3d4039", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/79cdbabbc4cbf79491c274220928406dff3d4039", "html_url": "https://github.com/Rust-GCC/gccrs/commit/79cdbabbc4cbf79491c274220928406dff3d4039", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/79cdbabbc4cbf79491c274220928406dff3d4039/comments", "author": null, "committer": null, "parents": [{"sha": "70b738f96812c369b836d9a5bc5472f4634518bb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70b738f96812c369b836d9a5bc5472f4634518bb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/70b738f96812c369b836d9a5bc5472f4634518bb"}], "stats": {"total": 17, "additions": 15, "deletions": 2}, "files": [{"sha": "135186371e741f60f8cbc1fa5bbeaa3108692c86", "filename": "gcc/config/arm/mve.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79cdbabbc4cbf79491c274220928406dff3d4039/gcc%2Fconfig%2Farm%2Fmve.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79cdbabbc4cbf79491c274220928406dff3d4039/gcc%2Fconfig%2Farm%2Fmve.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fmve.md?ref=79cdbabbc4cbf79491c274220928406dff3d4039", "patch": "@@ -10858,7 +10858,7 @@\n )\n \n (define_insn \"*movmisalign<mode>_mve_store\"\n-  [(set (match_operand:MVE_VLD_ST 0 \"neon_permissive_struct_operand\"\t     \"=Um\")\n+  [(set (match_operand:MVE_VLD_ST 0 \"neon_permissive_struct_operand\"\t     \"=Ux\")\n \t(unspec:MVE_VLD_ST [(match_operand:MVE_VLD_ST 1 \"s_register_operand\" \" w\")]\n \t UNSPEC_MISALIGNED_ACCESS))]\n   \"((TARGET_HAVE_MVE && VALID_MVE_SI_MODE (<MODE>mode))\n@@ -10871,7 +10871,7 @@\n \n (define_insn \"*movmisalign<mode>_mve_load\"\n   [(set (match_operand:MVE_VLD_ST 0 \"s_register_operand\"\t\t\t\t \"=w\")\n-\t(unspec:MVE_VLD_ST [(match_operand:MVE_VLD_ST 1 \"neon_permissive_struct_operand\" \" Um\")]\n+\t(unspec:MVE_VLD_ST [(match_operand:MVE_VLD_ST 1 \"neon_permissive_struct_operand\" \" Ux\")]\n \t UNSPEC_MISALIGNED_ACCESS))]\n   \"((TARGET_HAVE_MVE && VALID_MVE_SI_MODE (<MODE>mode))\n     || (TARGET_HAVE_MVE_FLOAT && VALID_MVE_SF_MODE (<MODE>mode)))"}, {"sha": "92585e286aae7b88db9fd7624c5e8ffe04f076ab", "filename": "gcc/testsuite/gcc.target/arm/pr99727.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79cdbabbc4cbf79491c274220928406dff3d4039/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fpr99727.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79cdbabbc4cbf79491c274220928406dff3d4039/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fpr99727.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fpr99727.c?ref=79cdbabbc4cbf79491c274220928406dff3d4039", "patch": "@@ -0,0 +1,13 @@\n+/* { dg-do compile } */\n+/* { dg-require-effective-target arm_v8_1m_mve_ok } */\n+/* { dg-options \"-O3\" } */\n+/* { dg-add-options arm_v8_1m_mve } */\n+\n+char a[7][25][15][14];\n+void b() {\n+  for (int c;; ++c)\n+    for (int d = 0; d < 25; ++d)\n+      for (int e = 0; e < 15; ++e)\n+\tfor (int f = 0; f < 14; ++f)\n+\t  a[c][d][e][f] = 1;\n+}"}]}