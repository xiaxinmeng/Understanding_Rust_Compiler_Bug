{"sha": "f2974b07109105b6d817a847d81ef5547b262609", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjI5NzRiMDcxMDkxMDViNmQ4MTdhODQ3ZDgxZWY1NTQ3YjI2MjYwOQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-08-12T18:58:02Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-08-12T18:58:02Z"}, "message": "(movsf): Don't truncate if not register; clean up.\n\nFrom-SVN: r7907", "tree": {"sha": "00686816a9b8f8026e033b0728838b0d915ed1a3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/00686816a9b8f8026e033b0728838b0d915ed1a3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f2974b07109105b6d817a847d81ef5547b262609", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2974b07109105b6d817a847d81ef5547b262609", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f2974b07109105b6d817a847d81ef5547b262609", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2974b07109105b6d817a847d81ef5547b262609/comments", "author": null, "committer": null, "parents": [{"sha": "1d12df723d8dc90f2f75b73bbf799725c214584b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d12df723d8dc90f2f75b73bbf799725c214584b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1d12df723d8dc90f2f75b73bbf799725c214584b"}], "stats": {"total": 22, "additions": 11, "deletions": 11}, "files": [{"sha": "856bf45c2a736917ad10331f80e8522e6319a733", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2974b07109105b6d817a847d81ef5547b262609/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2974b07109105b6d817a847d81ef5547b262609/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=f2974b07109105b6d817a847d81ef5547b262609", "patch": "@@ -3794,18 +3794,18 @@\n \n   if (GET_CODE (operands[0]) == MEM)\n     {\n-      operands[1] = force_reg (SFmode, operands[1]);\n-      if (! TARGET_POWERPC)\n-\tif (reload_in_progress || reload_completed)\n-\t  emit_insn (gen_truncdfsf2 (operands[1],\n+      /* If operands[1] is a register, it may have double-precision data\n+\t in it, so truncate it to single precision.  We need not do\n+\t this for POWERPC.  */\n+      if (! TARGET_POWERPC && GET_CODE (operands[1]) == REG)\n+\t{\n+\t  rtx newreg = reload_in_progress ? operands[1] : gen_reg_rtx (SFmode);\n+\t  emit_insn (gen_truncdfsf2 (newreg,\n \t\t\t\t     gen_rtx (SUBREG, DFmode, operands[1], 0)));\n-\telse\n-\t  {\n-\t    rtx newreg = gen_reg_rtx (SFmode);\n-\t    emit_insn (gen_truncdfsf2 (newreg,\n-                                       gen_rtx (SUBREG, DFmode, operands[1], 0)));\n-\t    operands[1] = newreg;\n-          }\n+\t  operands[1] = newreg;\n+\t}\n+\n+      operands[1] = force_reg (SFmode, operands[1]);\n     }\n \n   if (GET_CODE (operands[0]) == REG && REGNO (operands[0]) < 32)"}]}