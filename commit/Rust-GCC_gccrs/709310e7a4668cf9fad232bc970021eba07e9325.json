{"sha": "709310e7a4668cf9fad232bc970021eba07e9325", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzA5MzEwZTdhNDY2OGNmOWZhZDIzMmJjOTcwMDIxZWJhMDdlOTMyNQ==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2019-10-02T14:56:57Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2019-10-02T14:56:57Z"}, "message": "Document non-conformance of parallel mode to recent C++ standards\n\n\t* doc/xml/manual/parallel_mode.xml: Add caveat about support for\n\trecent standards.\n\t* doc/html/*: Regenerate.\n\nFrom-SVN: r276463", "tree": {"sha": "69b7464e9664956ea058609fc2396441a18020f9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/69b7464e9664956ea058609fc2396441a18020f9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/709310e7a4668cf9fad232bc970021eba07e9325", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/709310e7a4668cf9fad232bc970021eba07e9325", "html_url": "https://github.com/Rust-GCC/gccrs/commit/709310e7a4668cf9fad232bc970021eba07e9325", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/709310e7a4668cf9fad232bc970021eba07e9325/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c8241327cd156ed15fb136e0b0eaace263aba717", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8241327cd156ed15fb136e0b0eaace263aba717", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c8241327cd156ed15fb136e0b0eaace263aba717"}], "stats": {"total": 44, "additions": 37, "deletions": 7}, "files": [{"sha": "9b534cb2832370f7a4c09a972c06649c1ed79e37", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/709310e7a4668cf9fad232bc970021eba07e9325/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/709310e7a4668cf9fad232bc970021eba07e9325/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=709310e7a4668cf9fad232bc970021eba07e9325", "patch": "@@ -1,3 +1,9 @@\n+2019-10-02  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* doc/xml/manual/parallel_mode.xml: Add caveat about support for\n+\trecent standards.\n+\t* doc/html/*: Regenerate.\n+\n 2019-10-01  Jonathan Wakely  <jwakely@redhat.com>\n \n \t* include/experimental/algorithm (experimental::sample): Qualify call"}, {"sha": "7ffa8bb606b026b1afcb3645de5a86760844b6c2", "filename": "libstdc++-v3/doc/html/manual/parallel_mode.html", "status": "modified", "additions": 15, "deletions": 5, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/709310e7a4668cf9fad232bc970021eba07e9325/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fparallel_mode.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/709310e7a4668cf9fad232bc970021eba07e9325/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fparallel_mode.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fparallel_mode.html?ref=709310e7a4668cf9fad232bc970021eba07e9325", "patch": "@@ -3,20 +3,30 @@\n   Extensions\n   \n </th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"parallel_mode_semantics.html\">Next</a></td></tr></table><hr /></div><div class=\"chapter\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"manual.ext.parallel_mode\"></a>Chapter\u00a018.\u00a0Parallel Mode</h2></div></div></div><div class=\"toc\"><p><strong>Table of Contents</strong></p><dl class=\"toc\"><dt><span class=\"section\"><a href=\"parallel_mode.html#manual.ext.parallel_mode.intro\">Intro</a></span></dt><dt><span class=\"section\"><a href=\"parallel_mode_semantics.html\">Semantics</a></span></dt><dt><span class=\"section\"><a href=\"parallel_mode_using.html\">Using</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"parallel_mode_using.html#parallel_mode.using.prereq_flags\">Prerequisite Compiler Flags</a></span></dt><dt><span class=\"section\"><a href=\"parallel_mode_using.html#parallel_mode.using.parallel_mode\">Using Parallel Mode</a></span></dt><dt><span class=\"section\"><a href=\"parallel_mode_using.html#parallel_mode.using.specific\">Using Specific Parallel Components</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"parallel_mode_design.html\">Design</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"parallel_mode_design.html#parallel_mode.design.intro\">Interface Basics</a></span></dt><dt><span class=\"section\"><a href=\"parallel_mode_design.html#parallel_mode.design.tuning\">Configuration and Tuning</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"parallel_mode_design.html#parallel_mode.design.tuning.omp\">Setting up the OpenMP Environment</a></span></dt><dt><span class=\"section\"><a href=\"parallel_mode_design.html#parallel_mode.design.tuning.compile\">Compile Time Switches</a></span></dt><dt><span class=\"section\"><a href=\"parallel_mode_design.html#parallel_mode.design.tuning.settings\">Run Time Settings and Defaults</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"parallel_mode_design.html#parallel_mode.design.impl\">Implementation Namespaces</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"parallel_mode_test.html\">Testing</a></span></dt><dt><span class=\"bibliography\"><a href=\"parallel_mode.html#parallel_mode.biblio\">Bibliography</a></span></dt></dl></div><p> The libstdc++ parallel mode is an experimental parallel\n-implementation of many algorithms the C++ Standard Library.\n+implementation of many algorithms of the C++ Standard Library.\n </p><p>\n Several of the standard algorithms, for instance\n <code class=\"function\">std::sort</code>, are made parallel using OpenMP\n-annotations. These parallel mode constructs and can be invoked by\n+annotations. These parallel mode constructs can be invoked by\n explicit source declaration or by compiling existing sources with a\n specific compiler flag.\n-</p><div class=\"section\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"manual.ext.parallel_mode.intro\"></a>Intro</h2></div></div></div><p>The following library components in the include\n+</p><div class=\"note\" style=\"margin-left: 0.5in; margin-right: 0.5in;\"><h3 class=\"title\">Note</h3><p>\n+    The parallel mode has not been kept up to date with recent C++ standards\n+    and so it only conforms to the C++03 requirements.\n+    That means that move-only predicates may not work with parallel mode\n+    algorithms, and for C++20 most of the algorithms cannot be used in\n+    <code class=\"code\">constexpr</code> functions.\n+  </p><p>\n+    For C++17 and above there are new overloads of the standard algorithms\n+    which take an execution policy argument. You should consider using those\n+    instead of the non-standard parallel mode extensions.\n+  </p></div><div class=\"section\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"manual.ext.parallel_mode.intro\"></a>Intro</h2></div></div></div><p>The following library components in the include\n <code class=\"filename\">numeric</code> are included in the parallel mode:</p><div class=\"itemizedlist\"><ul class=\"itemizedlist\" style=\"list-style-type: disc; \"><li class=\"listitem\"><p><code class=\"function\">std::accumulate</code></p></li><li class=\"listitem\"><p><code class=\"function\">std::adjacent_difference</code></p></li><li class=\"listitem\"><p><code class=\"function\">std::inner_product</code></p></li><li class=\"listitem\"><p><code class=\"function\">std::partial_sum</code></p></li></ul></div><p>The following library components in the include\n-<code class=\"filename\">algorithm</code> are included in the parallel mode:</p><div class=\"itemizedlist\"><ul class=\"itemizedlist\" style=\"list-style-type: disc; \"><li class=\"listitem\"><p><code class=\"function\">std::adjacent_find</code></p></li><li class=\"listitem\"><p><code class=\"function\">std::count</code></p></li><li class=\"listitem\"><p><code class=\"function\">std::count_if</code></p></li><li class=\"listitem\"><p><code class=\"function\">std::equal</code></p></li><li class=\"listitem\"><p><code class=\"function\">std::find</code></p></li><li class=\"listitem\"><p><code class=\"function\">std::find_if</code></p></li><li class=\"listitem\"><p><code class=\"function\">std::find_first_of</code></p></li><li class=\"listitem\"><p><code class=\"function\">std::for_each</code></p></li><li class=\"listitem\"><p><code class=\"function\">std::generate</code></p></li><li class=\"listitem\"><p><code class=\"function\">std::generate_n</code></p></li><li class=\"listitem\"><p><code class=\"function\">std::lexicographical_compare</code></p></li><li class=\"listitem\"><p><code class=\"function\">std::mismatch</code></p></li><li class=\"listitem\"><p><code class=\"function\">std::search</code></p></li><li class=\"listitem\"><p><code class=\"function\">std::search_n</code></p></li><li class=\"listitem\"><p><code class=\"function\">std::transform</code></p></li><li class=\"listitem\"><p><code class=\"function\">std::replace</code></p></li><li class=\"listitem\"><p><code class=\"function\">std::replace_if</code></p></li><li class=\"listitem\"><p><code class=\"function\">std::max_element</code></p></li><li class=\"listitem\"><p><code class=\"function\">std::merge</code></p></li><li class=\"listitem\"><p><code class=\"function\">std::min_element</code></p></li><li class=\"listitem\"><p><code class=\"function\">std::nth_element</code></p></li><li class=\"listitem\"><p><code class=\"function\">std::partial_sort</code></p></li><li class=\"listitem\"><p><code class=\"function\">std::partition</code></p></li><li class=\"listitem\"><p><code class=\"function\">std::random_shuffle</code></p></li><li class=\"listitem\"><p><code class=\"function\">std::set_union</code></p></li><li class=\"listitem\"><p><code class=\"function\">std::set_intersection</code></p></li><li class=\"listitem\"><p><code class=\"function\">std::set_symmetric_difference</code></p></li><li class=\"listitem\"><p><code class=\"function\">std::set_difference</code></p></li><li class=\"listitem\"><p><code class=\"function\">std::sort</code></p></li><li class=\"listitem\"><p><code class=\"function\">std::stable_sort</code></p></li><li class=\"listitem\"><p><code class=\"function\">std::unique_copy</code></p></li></ul></div></div><div class=\"bibliography\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"parallel_mode.biblio\"></a>Bibliography</h2></div></div></div><div class=\"biblioentry\"><a id=\"id-1.3.5.5.9.2\"></a><p><span class=\"citetitle\"><em class=\"citetitle\">\n+<code class=\"filename\">algorithm</code> are included in the parallel mode:</p><div class=\"itemizedlist\"><ul class=\"itemizedlist\" style=\"list-style-type: disc; \"><li class=\"listitem\"><p><code class=\"function\">std::adjacent_find</code></p></li><li class=\"listitem\"><p><code class=\"function\">std::count</code></p></li><li class=\"listitem\"><p><code class=\"function\">std::count_if</code></p></li><li class=\"listitem\"><p><code class=\"function\">std::equal</code></p></li><li class=\"listitem\"><p><code class=\"function\">std::find</code></p></li><li class=\"listitem\"><p><code class=\"function\">std::find_if</code></p></li><li class=\"listitem\"><p><code class=\"function\">std::find_first_of</code></p></li><li class=\"listitem\"><p><code class=\"function\">std::for_each</code></p></li><li class=\"listitem\"><p><code class=\"function\">std::generate</code></p></li><li class=\"listitem\"><p><code class=\"function\">std::generate_n</code></p></li><li class=\"listitem\"><p><code class=\"function\">std::lexicographical_compare</code></p></li><li class=\"listitem\"><p><code class=\"function\">std::mismatch</code></p></li><li class=\"listitem\"><p><code class=\"function\">std::search</code></p></li><li class=\"listitem\"><p><code class=\"function\">std::search_n</code></p></li><li class=\"listitem\"><p><code class=\"function\">std::transform</code></p></li><li class=\"listitem\"><p><code class=\"function\">std::replace</code></p></li><li class=\"listitem\"><p><code class=\"function\">std::replace_if</code></p></li><li class=\"listitem\"><p><code class=\"function\">std::max_element</code></p></li><li class=\"listitem\"><p><code class=\"function\">std::merge</code></p></li><li class=\"listitem\"><p><code class=\"function\">std::min_element</code></p></li><li class=\"listitem\"><p><code class=\"function\">std::nth_element</code></p></li><li class=\"listitem\"><p><code class=\"function\">std::partial_sort</code></p></li><li class=\"listitem\"><p><code class=\"function\">std::partition</code></p></li><li class=\"listitem\"><p><code class=\"function\">std::random_shuffle</code></p></li><li class=\"listitem\"><p><code class=\"function\">std::set_union</code></p></li><li class=\"listitem\"><p><code class=\"function\">std::set_intersection</code></p></li><li class=\"listitem\"><p><code class=\"function\">std::set_symmetric_difference</code></p></li><li class=\"listitem\"><p><code class=\"function\">std::set_difference</code></p></li><li class=\"listitem\"><p><code class=\"function\">std::sort</code></p></li><li class=\"listitem\"><p><code class=\"function\">std::stable_sort</code></p></li><li class=\"listitem\"><p><code class=\"function\">std::unique_copy</code></p></li></ul></div></div><div class=\"bibliography\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"parallel_mode.biblio\"></a>Bibliography</h2></div></div></div><div class=\"biblioentry\"><a id=\"id-1.3.5.5.10.2\"></a><p><span class=\"citetitle\"><em class=\"citetitle\">\n       Parallelization of Bulk Operations for STL Dictionaries\n     </em>. </span><span class=\"author\"><span class=\"firstname\">Johannes</span> <span class=\"surname\">Singler</span>. </span><span class=\"author\"><span class=\"firstname\">Leonor</span> <span class=\"surname\">Frias</span>. </span><span class=\"copyright\">Copyright \u00a9 2007 . </span><span class=\"publisher\"><span class=\"publishername\">\n \tWorkshop on Highly Parallel Processing on a Chip (HPPC) 2007. (LNCS)\n-      . </span></span></p></div><div class=\"biblioentry\"><a id=\"id-1.3.5.5.9.3\"></a><p><span class=\"citetitle\"><em class=\"citetitle\">\n+      . </span></span></p></div><div class=\"biblioentry\"><a id=\"id-1.3.5.5.10.3\"></a><p><span class=\"citetitle\"><em class=\"citetitle\">\n       The Multi-Core Standard Template Library\n     </em>. </span><span class=\"author\"><span class=\"firstname\">Johannes</span> <span class=\"surname\">Singler</span>. </span><span class=\"author\"><span class=\"firstname\">Peter</span> <span class=\"surname\">Sanders</span>. </span><span class=\"author\"><span class=\"firstname\">Felix</span> <span class=\"surname\">Putze</span>. </span><span class=\"copyright\">Copyright \u00a9 2007 . </span><span class=\"publisher\"><span class=\"publishername\">\n \t Euro-Par 2007: Parallel Processing. (LNCS 4641)"}, {"sha": "ab7d2f2b56b9859a870d0f067f4684fea266aa39", "filename": "libstdc++-v3/doc/xml/manual/parallel_mode.xml", "status": "modified", "additions": 16, "deletions": 2, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/709310e7a4668cf9fad232bc970021eba07e9325/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fparallel_mode.xml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/709310e7a4668cf9fad232bc970021eba07e9325/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fparallel_mode.xml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fparallel_mode.xml?ref=709310e7a4668cf9fad232bc970021eba07e9325", "patch": "@@ -13,17 +13,31 @@\n \n \n <para> The libstdc++ parallel mode is an experimental parallel\n-implementation of many algorithms the C++ Standard Library.\n+implementation of many algorithms of the C++ Standard Library.\n </para>\n \n <para>\n Several of the standard algorithms, for instance\n <function>std::sort</function>, are made parallel using OpenMP\n-annotations. These parallel mode constructs and can be invoked by\n+annotations. These parallel mode constructs can be invoked by\n explicit source declaration or by compiling existing sources with a\n specific compiler flag.\n </para>\n \n+<note>\n+  <para>\n+    The parallel mode has not been kept up to date with recent C++ standards\n+    and so it only conforms to the C++03 requirements.\n+    That means that move-only predicates may not work with parallel mode\n+    algorithms, and for C++20 most of the algorithms cannot be used in\n+    <code>constexpr</code> functions.\n+  </para>\n+  <para>\n+    For C++17 and above there are new overloads of the standard algorithms\n+    which take an execution policy argument. You should consider using those\n+    instead of the non-standard parallel mode extensions.\n+  </para>\n+</note>\n \n <section xml:id=\"manual.ext.parallel_mode.intro\" xreflabel=\"Intro\"><info><title>Intro</title></info>\n   "}]}