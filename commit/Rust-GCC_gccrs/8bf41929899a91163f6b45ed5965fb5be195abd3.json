{"sha": "8bf41929899a91163f6b45ed5965fb5be195abd3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGJmNDE5Mjk4OTlhOTExNjNmNmI0NWVkNTk2NWZiNWJlMTk1YWJkMw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-06-13T22:19:15Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-06-13T22:19:15Z"}, "message": "Lose all references to current_vtable_decl, CLASSTYPE_INST_VAR and CLASSTYPE_VTBL_PTR.\n\nLose all references to current_vtable_decl, CLASSTYPE_INST_VAR and\nCLASSTYPE_VTBL_PTR.\nDon't mess with current_class_decl, current_vtable_decl, or C_C_D.\n\nFrom-SVN: r9934", "tree": {"sha": "8f6ce21d0a736b81b58b85b6b7df7e447e6577df", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8f6ce21d0a736b81b58b85b6b7df7e447e6577df"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8bf41929899a91163f6b45ed5965fb5be195abd3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8bf41929899a91163f6b45ed5965fb5be195abd3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8bf41929899a91163f6b45ed5965fb5be195abd3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8bf41929899a91163f6b45ed5965fb5be195abd3/comments", "author": null, "committer": null, "parents": [{"sha": "e4be64d097aa602485947b06b50df808b7e90110", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e4be64d097aa602485947b06b50df808b7e90110", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e4be64d097aa602485947b06b50df808b7e90110"}], "stats": {"total": 67, "additions": 2, "deletions": 65}, "files": [{"sha": "6ddbc840710a6c30520d34f7f9dc6a6d1981f939", "filename": "gcc/cp/class.c", "status": "modified", "additions": 2, "deletions": 65, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bf41929899a91163f6b45ed5965fb5be195abd3/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bf41929899a91163f6b45ed5965fb5be195abd3/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=8bf41929899a91163f6b45ed5965fb5be195abd3", "patch": "@@ -72,7 +72,6 @@ struct class_level\n };\n \n tree current_class_decl, C_C_D;\t/* PARM_DECL: the class instance variable */\n-tree current_vtable_decl;\n \n /* The following two can be derived from the previous one */\n tree current_class_name;\t/* IDENTIFIER_NODE: name of current class */\n@@ -430,14 +429,8 @@ build_vfn_ref (ptr_to_instptr, instance, idx)\n     basetype = TREE_TYPE (basetype);\n \n   if (instance == C_C_D)\n-    {\n-      if (current_vtable_decl == NULL_TREE\n-\t  || current_vtable_decl == error_mark_node\n-\t  || !UNIQUELY_DERIVED_FROM_P (DECL_FCONTEXT (CLASSTYPE_VFIELD (current_class_type)), basetype))\n-\tvtbl = build_indirect_ref (build_vfield_ref (instance, basetype), NULL_PTR);\n-      else\n-\tvtbl = current_vtable_decl;\n-    }\n+    vtbl = build_indirect_ref (build_vfield_ref (instance, basetype),\n+\t\t\t       NULL_PTR);\n   else\n     {\n       if (optimize)\n@@ -4011,13 +4004,6 @@ finish_struct (t, list_of_fieldlists, warn_anon)\n \n   if (CLASSTYPE_VSIZE (t) != 0)\n     {\n-      if ((flag_this_is_variable & 1) == 0)\n-\t{\n-\t  tree vtbl_ptr = build_decl (VAR_DECL, get_identifier (VPTR_NAME),\n-\t\t\t\t      TREE_TYPE (vfield));\n-\t  DECL_REGISTER (vtbl_ptr) = 1;\n-\t  CLASSTYPE_VTBL_PTR (t) = vtbl_ptr;\n-\t}\n #if 0\n       /* This is now done above. */\n       if (DECL_FIELD_CONTEXT (vfield) != t)\n@@ -4437,55 +4423,6 @@ popclass (modify)\n   current_class_type = *--current_class_stack;\n   current_class_name = *--current_class_stack;\n \n-  if (current_class_type)\n-    {\n-      if (CLASSTYPE_VTBL_PTR (current_class_type))\n-\t{\n-\t  current_vtable_decl\n-\t    = lookup_name (DECL_NAME (CLASSTYPE_VTBL_PTR (current_class_type)),\n-\t\t\t   0);\n-\t  if (current_vtable_decl)\n-\t    current_vtable_decl = build_indirect_ref (current_vtable_decl,\n-\t\t\t\t\t\t      NULL_PTR);\n-\t}\n-      current_class_decl = lookup_name (this_identifier, 0);\n-      if (current_class_decl)\n-\t{\n-\t  if (TREE_CODE (TREE_TYPE (current_class_decl)) == POINTER_TYPE)\n-\t    {\n-\t      tree temp;\n-\t      if (CLASSTYPE_INST_VAR (current_class_type) == NULL_TREE)\n-\t\t{\n-\t\t  /* Can't call build_indirect_ref here, because it has special\n-\t\t     logic to return C_C_D given this argument.  */\n-\t\t  C_C_D = build1 (INDIRECT_REF, current_class_type, current_class_decl);\n-\t\t  CLASSTYPE_INST_VAR (current_class_type) = C_C_D;\n-\t\t}\n-\t      else\n-\t\t{\n-\t\t  C_C_D = CLASSTYPE_INST_VAR (current_class_type);\n-\t\t  /* `current_class_decl' is different for every\n-\t\t     function we compile.  */\n-\t\t  TREE_OPERAND (C_C_D, 0) = current_class_decl;\n-\t\t}\n-\t      temp = TREE_TYPE (TREE_TYPE (current_class_decl));\n-\t      TREE_READONLY (C_C_D) = TYPE_READONLY (temp);\n-\t      TREE_SIDE_EFFECTS (C_C_D) = TYPE_VOLATILE (temp);\n-\t      TREE_THIS_VOLATILE (C_C_D) = TYPE_VOLATILE (temp);\n-\t    }\n-\t  else\n-\t    C_C_D = current_class_decl;\n-\t}\n-      else\n-\tC_C_D = NULL_TREE;\n-    }\n-  else\n-    {\n-      current_class_decl = NULL_TREE;\n-      current_vtable_decl = NULL_TREE;\n-      C_C_D = NULL_TREE;\n-    }\n-\n   pop_memoized_context (modify);\n \n  ret:"}]}