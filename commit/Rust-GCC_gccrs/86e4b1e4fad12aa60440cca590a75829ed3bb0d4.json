{"sha": "86e4b1e4fad12aa60440cca590a75829ed3bb0d4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODZlNGIxZTRmYWQxMmFhNjA0NDBjY2E1OTBhNzU4MjllZDNiYjBkNA==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@cygnus.com", "date": "2000-09-12T22:31:00Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2000-09-12T22:31:00Z"}, "message": "expr.c (pop_type_0): Return `Object' if trying to merge two interface types.\n\n\t* expr.c (pop_type_0): Return `Object' if trying to merge two\n\tinterface types.\n\t* verify.c (merge_types): Don't return `TYPE_UNKNOWN' for\n\tinterface types; `Object' is always a valid supertype.\n\nFrom-SVN: r36378", "tree": {"sha": "0ccf531ed65f15f9d846b6711665f7675fd947d2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0ccf531ed65f15f9d846b6711665f7675fd947d2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/86e4b1e4fad12aa60440cca590a75829ed3bb0d4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86e4b1e4fad12aa60440cca590a75829ed3bb0d4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/86e4b1e4fad12aa60440cca590a75829ed3bb0d4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86e4b1e4fad12aa60440cca590a75829ed3bb0d4/comments", "author": null, "committer": null, "parents": [{"sha": "d19cbcb5e3dd83e2628d25d2cd23892a4cac83b0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d19cbcb5e3dd83e2628d25d2cd23892a4cac83b0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d19cbcb5e3dd83e2628d25d2cd23892a4cac83b0"}], "stats": {"total": 18, "additions": 13, "deletions": 5}, "files": [{"sha": "68a1a131f3d15326640c3af01f82d5179a7e7c6f", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86e4b1e4fad12aa60440cca590a75829ed3bb0d4/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86e4b1e4fad12aa60440cca590a75829ed3bb0d4/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=86e4b1e4fad12aa60440cca590a75829ed3bb0d4", "patch": "@@ -1,3 +1,10 @@\n+2000-09-12  Tom Tromey  <tromey@cygnus.com>\n+\n+\t* expr.c (pop_type_0): Return `Object' if trying to merge two\n+\tinterface types.\n+\t* verify.c (merge_types): Don't return `TYPE_UNKNOWN' for\n+\tinterface types; `Object' is always a valid supertype.\n+\n 2000-09-12  Tom Tromey  <tromey@cygnus.com>\n \n \tFix for PR gcj/33:"}, {"sha": "fbc08c69fa2a7a3c8b3ae7bada8d3107942d96a1", "filename": "gcc/java/expr.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86e4b1e4fad12aa60440cca590a75829ed3bb0d4/gcc%2Fjava%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86e4b1e4fad12aa60440cca590a75829ed3bb0d4/gcc%2Fjava%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fexpr.c?ref=86e4b1e4fad12aa60440cca590a75829ed3bb0d4", "patch": "@@ -320,9 +320,8 @@ pop_type_0 (type)\n       /* This is a kludge, but matches what Sun's verifier does.\n \t It can be tricked, but is safe as long as type errors\n \t (i.e. interface method calls) are caught at run-time. */\n-      else if (CLASS_INTERFACE (TYPE_NAME (TREE_TYPE (type)))\n-\t       && t == object_ptr_type_node)\n-\treturn t;\n+      /* FIXME: this is worse than a kludge, probably.  */\n+      return object_ptr_type_node;\n     }\n   return NULL_TREE;\n }"}, {"sha": "5bc82cfe381c14df41a26e29601eb550e7dea0d3", "filename": "gcc/java/verify.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86e4b1e4fad12aa60440cca590a75829ed3bb0d4/gcc%2Fjava%2Fverify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86e4b1e4fad12aa60440cca590a75829ed3bb0d4/gcc%2Fjava%2Fverify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fverify.c?ref=86e4b1e4fad12aa60440cca590a75829ed3bb0d4", "patch": "@@ -173,6 +173,8 @@ merge_types (type1, type2)\n \n       if (CLASS_INTERFACE (TYPE_NAME (tt1)))\n \t{\n+\t  /* FIXME: should see if two interfaces have a common\n+\t     superinterface.  */\n \t  if (CLASS_INTERFACE (TYPE_NAME (tt2)))\n \t    {\n \t      /* This is a kludge, but matches what Sun's verifier does.\n@@ -185,15 +187,15 @@ merge_types (type1, type2)\n \t      if (can_widen_reference_to (tt2, tt1))\n \t\treturn type1;\n \t      else\n-\t\treturn TYPE_UNKNOWN;\n+\t\treturn object_ptr_type_node;\n \t    }\n \t}\n       else if (CLASS_INTERFACE (TYPE_NAME (tt2)))\n \t{\n \t  if (can_widen_reference_to (tt1, tt2))\n \t    return type2;\n \t  else\n-\t    return TYPE_UNKNOWN;\n+\t    return object_ptr_type_node;\n \t}\n \n       type1 = tt1;"}]}