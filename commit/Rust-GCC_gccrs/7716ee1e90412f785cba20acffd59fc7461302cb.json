{"sha": "7716ee1e90412f785cba20acffd59fc7461302cb", "node_id": "C_kwDOANBUbNoAKDc3MTZlZTFlOTA0MTJmNzg1Y2JhMjBhY2ZmZDU5ZmM3NDYxMzAyY2I", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-11-30T10:44:27Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-11-30T10:44:27Z"}, "message": "tree-chrec: Fix up ICE on pointer multiplication [PR107835]\n\nr13-254-gdd3c7873a61019e9 added an optimization for {a, +, a} (x-1),\nbut as can be seen on the following testcase, the way it is written\nwhere chrec_fold_multiply is called with type doesn't work for pointers:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0res\u00a0=\u00a0build_int_cst\u00a0(TREE_TYPE\u00a0(x),\u00a01);\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0res\u00a0=\u00a0chrec_fold_plus\u00a0(TREE_TYPE\u00a0(x),\u00a0x,\u00a0res);\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0res\u00a0=\u00a0chrec_convert_rhs\u00a0(type,\u00a0res,\u00a0NULL);\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0res\u00a0=\u00a0chrec_fold_multiply\u00a0(type,\u00a0chrecr,\u00a0res);\nwhile what we were doing before and what is still used if the condition\ndoesn't match is fine:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0res\u00a0=\u00a0chrec_convert_rhs\u00a0(TREE_TYPE\u00a0(chrecr),\u00a0x,\u00a0NULL);\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0res\u00a0=\u00a0chrec_fold_multiply\u00a0(TREE_TYPE\u00a0(chrecr),\u00a0chrecr,\u00a0res);\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0res\u00a0=\u00a0chrec_fold_plus\u00a0(type,\u00a0CHREC_LEFT\u00a0(chrec),\u00a0res);\nbecause it performs chrec_fold_multiply on TREE_TYPE (chrecr) and converts\nonly afterwards.\n\nI think the easiest fix is to ignore the new path for pointer types.\n\n2022-11-30  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR tree-optimization/107835\n\t* tree-chrec.cc (chrec_apply): Don't handle \"{a,\u00a0+,\u00a0a}\u00a0(x-1)\"\n\tas\u00a0\"a*x\" if type is a pointer type.\n\n\t* gcc.c-torture/compile/pr107835.c: New test.", "tree": {"sha": "f374d680de88f953f4c55120b7a7187aa71bf209", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f374d680de88f953f4c55120b7a7187aa71bf209"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7716ee1e90412f785cba20acffd59fc7461302cb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7716ee1e90412f785cba20acffd59fc7461302cb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7716ee1e90412f785cba20acffd59fc7461302cb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7716ee1e90412f785cba20acffd59fc7461302cb/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e0b95c2e8b771b53876321a6a0a9497619af73cd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0b95c2e8b771b53876321a6a0a9497619af73cd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e0b95c2e8b771b53876321a6a0a9497619af73cd"}], "stats": {"total": 14, "additions": 13, "deletions": 1}, "files": [{"sha": "122beff2f112775127c7dee37090f2c1cef3c83e", "filename": "gcc/testsuite/gcc.c-torture/compile/pr107835.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7716ee1e90412f785cba20acffd59fc7461302cb/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr107835.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7716ee1e90412f785cba20acffd59fc7461302cb/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr107835.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr107835.c?ref=7716ee1e90412f785cba20acffd59fc7461302cb", "patch": "@@ -0,0 +1,11 @@\n+/* PR tree-optimization/107835 */\n+\n+int *\n+foo (void)\n+{\n+  int *x = 0;\n+  unsigned n = n;\n+  for (; n; --n, ++x)\n+    ;\n+  return x;\n+}"}, {"sha": "dcf26cbae8407952432dda024869b89614896256", "filename": "gcc/tree-chrec.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7716ee1e90412f785cba20acffd59fc7461302cb/gcc%2Ftree-chrec.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7716ee1e90412f785cba20acffd59fc7461302cb/gcc%2Ftree-chrec.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-chrec.cc?ref=7716ee1e90412f785cba20acffd59fc7461302cb", "patch": "@@ -622,7 +622,8 @@ chrec_apply (unsigned var,\n \t  /* \"{a, +, b} (x)\"  ->  \"a + b*x\".  */\n \t  else if (operand_equal_p (CHREC_LEFT (chrec), chrecr)\n \t\t   && TREE_CODE (x) == PLUS_EXPR\n-\t\t   && integer_all_onesp (TREE_OPERAND (x, 1)))\n+\t\t   && integer_all_onesp (TREE_OPERAND (x, 1))\n+\t\t   && !POINTER_TYPE_P (type))\n \t    {\n \t      /* We know the number of iterations can't be negative.\n \t\t So {a, +, a} (x-1) -> \"a*x\".  */"}]}