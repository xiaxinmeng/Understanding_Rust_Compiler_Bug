{"sha": "654d2ec080bc55454cd5fb8c74277be760de9c7c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjU0ZDJlYzA4MGJjNTU0NTRjZDVmYjhjNzQyNzdiZTc2MGRlOWM3Yw==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2011-03-31T23:55:21Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2011-03-31T23:55:21Z"}, "message": "re PR go/47515 (Issues porting libgo to IRIX 6.5)\n\n\tPR go/47515\nlibgo: Add Irix support.\n\nFrom Rainer Orth.\n\nFrom-SVN: r171806", "tree": {"sha": "12ffe01ea1bf061534d99f4b1731e48f6d17f424", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/12ffe01ea1bf061534d99f4b1731e48f6d17f424"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/654d2ec080bc55454cd5fb8c74277be760de9c7c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/654d2ec080bc55454cd5fb8c74277be760de9c7c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/654d2ec080bc55454cd5fb8c74277be760de9c7c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/654d2ec080bc55454cd5fb8c74277be760de9c7c/comments", "author": null, "committer": null, "parents": [{"sha": "de90644af805b0ec9648de4354f9d26681e076a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de90644af805b0ec9648de4354f9d26681e076a6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/de90644af805b0ec9648de4354f9d26681e076a6"}], "stats": {"total": 92, "additions": 83, "deletions": 9}, "files": [{"sha": "f87494cac018e7166933c45ee394347512d7123b", "filename": "libgo/Makefile.am", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/654d2ec080bc55454cd5fb8c74277be760de9c7c/libgo%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/654d2ec080bc55454cd5fb8c74277be760de9c7c/libgo%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2FMakefile.am?ref=654d2ec080bc55454cd5fb8c74277be760de9c7c", "patch": "@@ -709,13 +709,17 @@ else\n if LIBGO_IS_SOLARIS\n go_os_sys_file = go/os/sys_uname.go\n else\n+if LIBGO_IS_IRIX\n+go_os_sys_file = go/os/sys_uname.go\n+else\n if LIBGO_IS_RTEMS\n go_os_sys_file = go/os/sys_uname.go\n else\n go_os_sys_file = go/os/sys_bsd.go\n endif\n endif\n endif\n+endif\n \n go_os_files = \\\n \t$(go_os_dir_file) \\"}, {"sha": "e01f4f7f95eae2ee2e3ad645541b0ddda820b3a2", "filename": "libgo/Makefile.in", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/654d2ec080bc55454cd5fb8c74277be760de9c7c/libgo%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/654d2ec080bc55454cd5fb8c74277be760de9c7c/libgo%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2FMakefile.in?ref=654d2ec080bc55454cd5fb8c74277be760de9c7c", "patch": "@@ -1072,8 +1072,9 @@ go_netchan_files = \\\n @LIBGO_IS_386_TRUE@@LIBGO_IS_SOLARIS_TRUE@go_os_dir_file = go/os/dir_largefile.go\n @LIBGO_IS_LINUX_FALSE@@LIBGO_IS_SOLARIS_FALSE@go_os_dir_file = go/os/dir_regfile.go\n @LIBGO_IS_LINUX_TRUE@@LIBGO_IS_SOLARIS_FALSE@go_os_dir_file = go/os/dir_largefile.go\n-@LIBGO_IS_LINUX_FALSE@@LIBGO_IS_RTEMS_FALSE@@LIBGO_IS_SOLARIS_FALSE@go_os_sys_file = go/os/sys_bsd.go\n-@LIBGO_IS_LINUX_FALSE@@LIBGO_IS_RTEMS_TRUE@@LIBGO_IS_SOLARIS_FALSE@go_os_sys_file = go/os/sys_uname.go\n+@LIBGO_IS_IRIX_FALSE@@LIBGO_IS_LINUX_FALSE@@LIBGO_IS_RTEMS_FALSE@@LIBGO_IS_SOLARIS_FALSE@go_os_sys_file = go/os/sys_bsd.go\n+@LIBGO_IS_IRIX_FALSE@@LIBGO_IS_LINUX_FALSE@@LIBGO_IS_RTEMS_TRUE@@LIBGO_IS_SOLARIS_FALSE@go_os_sys_file = go/os/sys_uname.go\n+@LIBGO_IS_IRIX_TRUE@@LIBGO_IS_LINUX_FALSE@@LIBGO_IS_SOLARIS_FALSE@go_os_sys_file = go/os/sys_uname.go\n @LIBGO_IS_LINUX_FALSE@@LIBGO_IS_SOLARIS_TRUE@go_os_sys_file = go/os/sys_uname.go\n @LIBGO_IS_LINUX_TRUE@go_os_sys_file = go/os/sys_linux.go\n go_os_files = \\"}, {"sha": "e8f88f3c901ab0e9f25905484fbcffa99e4f1c5d", "filename": "libgo/configure", "status": "modified", "additions": 18, "deletions": 2, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/654d2ec080bc55454cd5fb8c74277be760de9c7c/libgo%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/654d2ec080bc55454cd5fb8c74277be760de9c7c/libgo%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fconfigure?ref=654d2ec080bc55454cd5fb8c74277be760de9c7c", "patch": "@@ -646,6 +646,8 @@ LIBGO_IS_RTEMS_FALSE\n LIBGO_IS_RTEMS_TRUE\n LIBGO_IS_LINUX_FALSE\n LIBGO_IS_LINUX_TRUE\n+LIBGO_IS_IRIX_FALSE\n+LIBGO_IS_IRIX_TRUE\n LIBGO_IS_FREEBSD_FALSE\n LIBGO_IS_FREEBSD_TRUE\n LIBGO_IS_DARWIN_FALSE\n@@ -10902,7 +10904,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10905 \"configure\"\n+#line 10907 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11008,7 +11010,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11011 \"configure\"\n+#line 11013 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -13217,13 +13219,15 @@ fi\n \n is_darwin=no\n is_freebsd=no\n+is_irix=no\n is_linux=no\n is_rtems=no\n is_solaris=no\n GOOS=unknown\n case ${host} in\n   *-*-darwin*)   is_darwin=yes;  GOOS=darwin ;;\n   *-*-freebsd*)  is_freebsd=yes; GOOS=freebsd ;;\n+  *-*-irix6*)    is_irix=yes;    GOOS=irix ;;\n   *-*-linux*)    is_linux=yes;   GOOS=linux ;;\n   *-*-rtems*)    is_rtems=yes;   GOOS=rtems ;;\n   *-*-solaris2*) is_solaris=yes; GOOS=solaris ;;\n@@ -13244,6 +13248,14 @@ else\n   LIBGO_IS_FREEBSD_FALSE=\n fi\n \n+ if test $is_irix = yes; then\n+  LIBGO_IS_IRIX_TRUE=\n+  LIBGO_IS_IRIX_FALSE='#'\n+else\n+  LIBGO_IS_IRIX_TRUE='#'\n+  LIBGO_IS_IRIX_FALSE=\n+fi\n+\n  if test $is_linux = yes; then\n   LIBGO_IS_LINUX_TRUE=\n   LIBGO_IS_LINUX_FALSE='#'\n@@ -14497,6 +14509,10 @@ if test -z \"${LIBGO_IS_FREEBSD_TRUE}\" && test -z \"${LIBGO_IS_FREEBSD_FALSE}\"; th\n   as_fn_error \"conditional \\\"LIBGO_IS_FREEBSD\\\" was never defined.\n Usually this means the macro was only invoked conditionally.\" \"$LINENO\" 5\n fi\n+if test -z \"${LIBGO_IS_IRIX_TRUE}\" && test -z \"${LIBGO_IS_IRIX_FALSE}\"; then\n+  as_fn_error \"conditional \\\"LIBGO_IS_IRIX\\\" was never defined.\n+Usually this means the macro was only invoked conditionally.\" \"$LINENO\" 5\n+fi\n if test -z \"${LIBGO_IS_LINUX_TRUE}\" && test -z \"${LIBGO_IS_LINUX_FALSE}\"; then\n   as_fn_error \"conditional \\\"LIBGO_IS_LINUX\\\" was never defined.\n Usually this means the macro was only invoked conditionally.\" \"$LINENO\" 5"}, {"sha": "5bb5df4c1b91239bfe8be73e489ecbb94758987e", "filename": "libgo/configure.ac", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/654d2ec080bc55454cd5fb8c74277be760de9c7c/libgo%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/654d2ec080bc55454cd5fb8c74277be760de9c7c/libgo%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fconfigure.ac?ref=654d2ec080bc55454cd5fb8c74277be760de9c7c", "patch": "@@ -114,19 +114,22 @@ AC_SUBST(LIBFFIINCS)\n \n is_darwin=no\n is_freebsd=no\n+is_irix=no\n is_linux=no\n is_rtems=no\n is_solaris=no\n GOOS=unknown\n case ${host} in\n   *-*-darwin*)   is_darwin=yes;  GOOS=darwin ;;\n   *-*-freebsd*)  is_freebsd=yes; GOOS=freebsd ;;\n+  *-*-irix6*)    is_irix=yes;    GOOS=irix ;;\n   *-*-linux*)    is_linux=yes;   GOOS=linux ;;\n   *-*-rtems*)    is_rtems=yes;   GOOS=rtems ;;\n   *-*-solaris2*) is_solaris=yes; GOOS=solaris ;;\n esac\n AM_CONDITIONAL(LIBGO_IS_DARWIN, test $is_darwin = yes)\n AM_CONDITIONAL(LIBGO_IS_FREEBSD, test $is_freebsd = yes)\n+AM_CONDITIONAL(LIBGO_IS_IRIX, test $is_irix = yes)\n AM_CONDITIONAL(LIBGO_IS_LINUX, test $is_linux = yes)\n AM_CONDITIONAL(LIBGO_IS_RTEMS, test $is_rtems = yes)\n AM_CONDITIONAL(LIBGO_IS_SOLARIS, test $is_solaris = yes)"}, {"sha": "02c083911eb4fad811bda10465bdbbcf24dce52f", "filename": "libgo/go/debug/proc/proc_irix.go", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/654d2ec080bc55454cd5fb8c74277be760de9c7c/libgo%2Fgo%2Fdebug%2Fproc%2Fproc_irix.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/654d2ec080bc55454cd5fb8c74277be760de9c7c/libgo%2Fgo%2Fdebug%2Fproc%2Fproc_irix.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fdebug%2Fproc%2Fproc_irix.go?ref=654d2ec080bc55454cd5fb8c74277be760de9c7c", "patch": "@@ -0,0 +1,17 @@\n+// Copyright 2011 The Go Authors.  All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+package proc\n+\n+import \"os\"\n+\n+// Process tracing is not supported on IRIX yet.\n+\n+func Attach(pid int) (Process, os.Error) {\n+\treturn nil, os.NewError(\"debug/proc not implemented on IRIX\")\n+}\n+\n+func ForkExec(argv0 string, argv []string, envv []string, dir string, fd []*os.File) (Process, os.Error) {\n+\treturn Attach(0)\n+}"}, {"sha": "abc583132dc031e7f67e44a34671cea8f365964d", "filename": "libgo/mksysinfo.sh", "status": "modified", "additions": 21, "deletions": 5, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/654d2ec080bc55454cd5fb8c74277be760de9c7c/libgo%2Fmksysinfo.sh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/654d2ec080bc55454cd5fb8c74277be760de9c7c/libgo%2Fmksysinfo.sh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fmksysinfo.sh?ref=654d2ec080bc55454cd5fb8c74277be760de9c7c", "patch": "@@ -35,11 +35,23 @@ cat > sysinfo.c <<EOF\n #define __EXTENSIONS__\n #endif\n \n+#ifdef __sgi__\n+/* IRIX 6 needs _XOPEN_SOURCE=500 for the XPG5 version of struct msghdr in\n+   <sys/socket.h>.  */\n+#define _XOPEN_SOURCE 500\n+#endif\n+\n #include <sys/types.h>\n #include <dirent.h>\n #include <errno.h>\n #include <fcntl.h>\n #include <netinet/in.h>\n+/* <netinet/tcp.h> needs u_char/u_short, but <sys/bsd_types> is only\n+   included by <netinet/in.h> if _SGIAPI (i.e. _SGI_SOURCE\n+   && !_XOPEN_SOURCE.  */\n+#ifdef __sgi__\n+#include <sys/bsd_types.h>\n+#endif\n #include <netinet/tcp.h>\n #include <signal.h>\n #if defined(HAVE_SYSCALL_H)\n@@ -81,13 +93,13 @@ echo 'package syscall' > ${OUT}\n grep -v '^// ' gen-sysinfo.go | \\\n   grep -v '^func' | \\\n   grep -v '^type _timeval ' | \\\n-  grep -v '^type _timespec ' | \\\n+  grep -v '^type _timespec\\(_t\\)\\? ' | \\\n   grep -v '^type _timestruc_t ' | \\\n   grep -v '^type _epoll_' | \\\n   grep -v 'in6_addr' | \\\n   grep -v 'sockaddr_in6' | \\\n   sed -e 's/\\([^a-zA-Z0-9_]\\)_timeval\\([^a-zA-Z0-9_]\\)/\\1Timeval\\2/g' \\\n-      -e 's/\\([^a-zA-Z0-9_]\\)_timespec\\([^a-zA-Z0-9_]\\)/\\1Timespec\\2/g' \\\n+      -e 's/\\([^a-zA-Z0-9_]\\)_timespec\\(_t\\)\\?\\([^a-zA-Z0-9_]\\)/\\1Timespec\\3/g' \\\n       -e 's/\\([^a-zA-Z0-9_]\\)_timestruc_t\\([^a-zA-Z0-9_]\\)/\\1Timestruc\\2/g' \\\n     >> ${OUT}\n \n@@ -289,13 +301,17 @@ echo $timeval | \\\n   sed -e 's/type _timeval /type Timeval /' \\\n       -e 's/tv_sec *[a-zA-Z0-9_]*/Sec Timeval_sec_t/' \\\n       -e 's/tv_usec *[a-zA-Z0-9_]*/Usec Timeval_usec_t/' >> ${OUT}\n-timespec=`grep '^type _timespec ' gen-sysinfo.go`\n+timespec=`grep '^type _timespec ' gen-sysinfo.go || true`\n+if test \"$timespec\" = \"\"; then\n+  # IRIX 6.5 has __timespec instead.\n+  timespec=`grep '^type ___timespec ' gen-sysinfo.go || true`\n+fi\n timespec_sec=`echo $timespec | sed -n -e 's/^.*tv_sec \\([^ ]*\\);.*$/\\1/p'`\n timespec_nsec=`echo $timespec | sed -n -e 's/^.*tv_nsec \\([^ ]*\\);.*$/\\1/p'`\n echo \"type Timespec_sec_t $timespec_sec\" >> ${OUT}\n echo \"type Timespec_nsec_t $timespec_nsec\" >> ${OUT}\n echo $timespec | \\\n-  sed -e 's/^type _timespec /type Timespec /' \\\n+  sed -e 's/^type \\(__\\)\\?_timespec /type Timespec /' \\\n       -e 's/tv_sec *[a-zA-Z0-9_]*/Sec Timespec_sec_t/' \\\n       -e 's/tv_nsec *[a-zA-Z0-9_]*/Nsec Timespec_nsec_t/' >> ${OUT}\n \n@@ -333,7 +349,7 @@ fi | sed -e 's/type _stat\\(64\\)\\?/type Stat_t/' \\\n          -e 's/st_mtim/Mtime/' \\\n          -e 's/st_ctim/Ctime/' \\\n          -e 's/\\([^a-zA-Z0-9_]\\)_timeval\\([^a-zA-Z0-9_]\\)/\\1Timeval\\2/g' \\\n-         -e 's/\\([^a-zA-Z0-9_]\\)_timespec\\([^a-zA-Z0-9_]\\)/\\1Timespec\\2/g' \\\n+         -e 's/\\([^a-zA-Z0-9_]\\)_timespec\\(_t\\)\\?\\([^a-zA-Z0-9_]\\)/\\1Timespec\\3/g' \\\n          -e 's/\\([^a-zA-Z0-9_]\\)_timestruc_t\\([^a-zA-Z0-9_]\\)/\\1Timestruc\\2/g' \\\n        >> ${OUT}\n "}, {"sha": "e66cef045db66cb84d9d2877716aea5639e4b8df", "filename": "libgo/syscalls/syscall_irix.go", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/654d2ec080bc55454cd5fb8c74277be760de9c7c/libgo%2Fsyscalls%2Fsyscall_irix.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/654d2ec080bc55454cd5fb8c74277be760de9c7c/libgo%2Fsyscalls%2Fsyscall_irix.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fsyscalls%2Fsyscall_irix.go?ref=654d2ec080bc55454cd5fb8c74277be760de9c7c", "patch": "@@ -0,0 +1,17 @@\n+// syscall_irix.go -- IRIX 6 specific syscall interface.\n+\n+// Copyright 2011 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+package syscall\n+\n+import \"unsafe\"\n+\n+// FIXME: ptrace(3C) has this, but exec.go expects the next.\n+//func libc_ptrace(request int, pid Pid_t, addr int, data int) int __asm__ (\"ptrace\")\n+\n+func libc_ptrace(request int, pid Pid_t, addr uintptr, data *byte) int __asm__ (\"ptrace\")\n+\n+var dummy *byte\n+const sizeofPtr uintptr = uintptr(unsafe.Sizeof(dummy))"}]}