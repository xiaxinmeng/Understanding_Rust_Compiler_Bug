{"sha": "db6b21866df8c448eb783b015cb92106a3ab750a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGI2YjIxODY2ZGY4YzQ0OGViNzgzYjAxNWNiOTIxMDZhM2FiNzUwYQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-09-29T01:27:07Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-09-29T01:27:07Z"}, "message": "(expand_inline_function): Push and pop temp slots around making new\ntemp slots and freeing them.\n\nFrom-SVN: r5525", "tree": {"sha": "1a4fa384e40622b45423b7a70ee1ad62a2a107ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1a4fa384e40622b45423b7a70ee1ad62a2a107ec"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/db6b21866df8c448eb783b015cb92106a3ab750a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db6b21866df8c448eb783b015cb92106a3ab750a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/db6b21866df8c448eb783b015cb92106a3ab750a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db6b21866df8c448eb783b015cb92106a3ab750a/comments", "author": null, "committer": null, "parents": [{"sha": "0088fcb1959f84a5789d695da687b1cdb560daba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0088fcb1959f84a5789d695da687b1cdb560daba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0088fcb1959f84a5789d695da687b1cdb560daba"}], "stats": {"total": 3, "additions": 3, "deletions": 0}, "files": [{"sha": "e3531986553a84f59f8fe2e6b8d1481399731957", "filename": "gcc/integrate.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db6b21866df8c448eb783b015cb92106a3ab750a/gcc%2Fintegrate.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db6b21866df8c448eb783b015cb92106a3ab750a/gcc%2Fintegrate.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fintegrate.c?ref=db6b21866df8c448eb783b015cb92106a3ab750a", "patch": "@@ -1353,6 +1353,7 @@ expand_inline_function (fndecl, parms, target, ignore, type, structure_value_add\n      register number fits in const_equiv_map.  Then we store all non-register\n      parameters into their memory location.  */\n \n+  push_temp_slots ();\n   for (i = 0; i < nargs; i++)\n     {\n       rtx copy = arg_vals[i];\n@@ -1459,6 +1460,8 @@ expand_inline_function (fndecl, parms, target, ignore, type, structure_value_add\n \t}\n     }\n \n+  pop_temp_slots ();\n+\n   /* Deal with the places that the function puts its result.\n      We are driven by what is placed into DECL_RESULT.\n "}]}