{"sha": "74dc6a119089515f330035d60c35f56756c8c862", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzRkYzZhMTE5MDg5NTE1ZjMzMDAzNWQ2MGMzNWY1Njc1NmM4Yzg2Mg==", "commit": {"author": {"name": "Chris Demetriou", "email": "cgd@google.com", "date": "2009-09-19T06:15:21Z"}, "committer": {"name": "Chris Demetriou", "email": "cgd@gcc.gnu.org", "date": "2009-09-19T06:15:21Z"}, "message": "re PR preprocessor/28435 (-MMD vs not found system header (included from a system header))\n\n[libcpp/ChangeLog]\n2009-09-18  Chris Demetriou  <cgd@google.com>\n\n\tPR preprocessor/28435:\n\t* include/cpplib.h (struct cpp_options): Add new member\n\tdeps.need_preprocessor_output.\n\t* files.c (open_file_failed): If preprocessor output is needed\n\talways report an error.\n\n[gcc/ChangeLog]\n2009-09-19  Chris Demetriou  <cgd@google.com>\n\n\tPR preprocessor/28435:\n\t* c-opts.c (c_common_handle_option): For -MD and -MMD, indicate\n\tto cpplib that the preprocessor output is needed.\n\n[gcc/testsuite/ChangeLog]\n2009-09-19  Chris Demetriou  <cgd@google.com>\n\n\tPR preprocessor/28435:\n\t* gcc.dg/cpp/missing-header-MD.c: New test.\n\t* gcc.dg/cpp/missing-header-MMD.c: New test.\n\t* gcc.dg/cpp/missing-sysheader-MD.c: New test.\n\t* gcc.dg/cpp/missing-sysheader-MMD.c: New test.\n\nFrom-SVN: r151879", "tree": {"sha": "f813fae3ff4b5335403a4b5b6455bf737c81f085", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f813fae3ff4b5335403a4b5b6455bf737c81f085"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/74dc6a119089515f330035d60c35f56756c8c862", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/74dc6a119089515f330035d60c35f56756c8c862", "html_url": "https://github.com/Rust-GCC/gccrs/commit/74dc6a119089515f330035d60c35f56756c8c862", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/74dc6a119089515f330035d60c35f56756c8c862/comments", "author": null, "committer": null, "parents": [{"sha": "b5e7280daa65db14481b2babb55a36774f62e720", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5e7280daa65db14481b2babb55a36774f62e720", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b5e7280daa65db14481b2babb55a36774f62e720"}], "stats": {"total": 76, "additions": 70, "deletions": 6}, "files": [{"sha": "27f877faf647efb79f216c1fc90ece6edfd5d871", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74dc6a119089515f330035d60c35f56756c8c862/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74dc6a119089515f330035d60c35f56756c8c862/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=74dc6a119089515f330035d60c35f56756c8c862", "patch": "@@ -1,3 +1,9 @@\n+2009-09-19  Chris Demetriou  <cgd@google.com>\n+\n+\tPR preprocessor/28435:\n+\t* c-opts.c (c_common_handle_option): For -MD and -MMD, indicate\n+\tto cpplib that the preprocessor output is needed.\n+\n 2009-09-19  Jakub Jelinek  <jakub@redhat.com>\n \n \t* config/rs6000/rs6000.md (*save_gpregs_<mode>, *save_fpregs_<mode>,"}, {"sha": "d9165aa60616706850be59306ae020d6700ec1f1", "filename": "gcc/c-opts.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74dc6a119089515f330035d60c35f56756c8c862/gcc%2Fc-opts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74dc6a119089515f330035d60c35f56756c8c862/gcc%2Fc-opts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-opts.c?ref=74dc6a119089515f330035d60c35f56756c8c862", "patch": "@@ -343,6 +343,7 @@ c_common_handle_option (size_t scode, const char *arg, int value)\n     case OPT_MD:\n     case OPT_MMD:\n       cpp_opts->deps.style = (code == OPT_MD ? DEPS_SYSTEM: DEPS_USER);\n+      cpp_opts->deps.need_preprocessor_output = true;\n       deps_file = arg;\n       break;\n "}, {"sha": "301dfbbe4d6720147a4e81ecd56eae94ecb28997", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74dc6a119089515f330035d60c35f56756c8c862/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74dc6a119089515f330035d60c35f56756c8c862/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=74dc6a119089515f330035d60c35f56756c8c862", "patch": "@@ -1,3 +1,11 @@\n+2009-09-19  Chris Demetriou  <cgd@google.com>\n+\n+\tPR preprocessor/28435:\n+\t* gcc.dg/cpp/missing-header-MD.c: New test.\n+\t* gcc.dg/cpp/missing-header-MMD.c: New test.\n+\t* gcc.dg/cpp/missing-sysheader-MD.c: New test.\n+\t* gcc.dg/cpp/missing-sysheader-MMD.c: New test.\n+\n 2009-09-18  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n \tPR libgfortran/41328"}, {"sha": "198352537eea77f9f346fbcd0d3cb72539a2e01a", "filename": "gcc/testsuite/gcc.dg/cpp/missing-header-MD.c", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74dc6a119089515f330035d60c35f56756c8c862/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fmissing-header-MD.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74dc6a119089515f330035d60c35f56756c8c862/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fmissing-header-MD.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fmissing-header-MD.c?ref=74dc6a119089515f330035d60c35f56756c8c862", "patch": "@@ -0,0 +1,6 @@\n+/* Test that missing user headers are fatal errors with -MD.  */\n+/* { dg-do compile } */\n+/* { dg-options \"-MD\" } */\n+\n+#include \"nonexistent.h\" /* { dg-error \"nonexistent.h\" } */\n+/* { dg-message \"terminated\" \"\" { target *-*-* } 0 } */"}, {"sha": "aff8d39559613964575436d89783b92cbaa7178d", "filename": "gcc/testsuite/gcc.dg/cpp/missing-header-MMD.c", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74dc6a119089515f330035d60c35f56756c8c862/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fmissing-header-MMD.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74dc6a119089515f330035d60c35f56756c8c862/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fmissing-header-MMD.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fmissing-header-MMD.c?ref=74dc6a119089515f330035d60c35f56756c8c862", "patch": "@@ -0,0 +1,6 @@\n+/* Test that missing user headers are fatal errors with -MMD.  */\n+/* { dg-do compile } */\n+/* { dg-options \"-MMD\" } */\n+\n+#include \"nonexistent.h\" /* { dg-error \"nonexistent.h\" } */\n+/* { dg-message \"terminated\" \"\" { target *-*-* } 0 } */"}, {"sha": "bf255a4994d40613c602f08f15554ea066189e94", "filename": "gcc/testsuite/gcc.dg/cpp/missing-sysheader-MD.c", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74dc6a119089515f330035d60c35f56756c8c862/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fmissing-sysheader-MD.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74dc6a119089515f330035d60c35f56756c8c862/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fmissing-sysheader-MD.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fmissing-sysheader-MD.c?ref=74dc6a119089515f330035d60c35f56756c8c862", "patch": "@@ -0,0 +1,6 @@\n+/* Test that missing system headers are fatal errors with -MD.  */\n+/* { dg-do compile } */\n+/* { dg-options \"-MD\" } */\n+\n+#include <nonexistent.h> /* { dg-error \"nonexistent.h\" } */\n+/* { dg-message \"terminated\" \"\" { target *-*-* } 0 } */"}, {"sha": "10cd870ad54b1c9ae23c6f4acb72f3e1eed0aa82", "filename": "gcc/testsuite/gcc.dg/cpp/missing-sysheader-MMD.c", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74dc6a119089515f330035d60c35f56756c8c862/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fmissing-sysheader-MMD.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74dc6a119089515f330035d60c35f56756c8c862/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fmissing-sysheader-MMD.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fmissing-sysheader-MMD.c?ref=74dc6a119089515f330035d60c35f56756c8c862", "patch": "@@ -0,0 +1,6 @@\n+/* Test that missing system headers are fatal errors with -MMD.  */\n+/* { dg-do compile } */\n+/* { dg-options \"-MMD\" } */\n+\n+#include <nonexistent.h> /* { dg-error \"nonexistent.h\" } */\n+/* { dg-message \"terminated\" \"\" { target *-*-* } 0 } */"}, {"sha": "6b257d211cba5d6be5258580bc732bf72131d16d", "filename": "libcpp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74dc6a119089515f330035d60c35f56756c8c862/libcpp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74dc6a119089515f330035d60c35f56756c8c862/libcpp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2FChangeLog?ref=74dc6a119089515f330035d60c35f56756c8c862", "patch": "@@ -1,3 +1,11 @@\n+2009-09-18  Chris Demetriou  <cgd@google.com>\n+\n+\tPR preprocessor/28435:\n+\t* include/cpplib.h (struct cpp_options): Add new member\n+\tdeps.need_preprocessor_output.\n+\t* files.c (open_file_failed): If preprocessor output is needed\n+\talways report an error.\n+\n 2009-09-13  Kai Tietz  <kai.tietz@onevision.com>\n \n \t* configure.ac: Set for i?86-w64-mingw*"}, {"sha": "96ba7e80afc25c8de2e712b815955e10481747f0", "filename": "libcpp/files.c", "status": "modified", "additions": 19, "deletions": 6, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74dc6a119089515f330035d60c35f56756c8c862/libcpp%2Ffiles.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74dc6a119089515f330035d60c35f56756c8c862/libcpp%2Ffiles.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Ffiles.c?ref=74dc6a119089515f330035d60c35f56756c8c862", "patch": "@@ -935,15 +935,28 @@ open_file_failed (cpp_reader *pfile, _cpp_file *file, int angle_brackets)\n \n   errno = file->err_no;\n   if (print_dep && CPP_OPTION (pfile, deps.missing_files) && errno == ENOENT)\n-    deps_add_dep (pfile->deps, file->name);\n+    {\n+      deps_add_dep (pfile->deps, file->name);\n+      /* If the preprocessor output (other than dependency information) is\n+         being used, we must also flag an error.  */\n+      if (CPP_OPTION (pfile, deps.need_preprocessor_output))\n+\tcpp_errno (pfile, CPP_DL_FATAL, file->path);\n+    }\n   else\n     {\n-      /* If we are outputting dependencies but not for this file then\n-\t don't error because we can still produce correct output.  */\n-      if (CPP_OPTION (pfile, deps.style) && ! print_dep)\n-\tcpp_errno (pfile, CPP_DL_WARNING, file->path);\n-      else\n+      /* If we are not outputting dependencies, or if we are and dependencies\n+         were requested for this file, or if preprocessor output is needed\n+         in addition to dependency information, this is an error.\n+\n+         Otherwise (outputting dependencies but not for this file, and not\n+         using the preprocessor output), we can still produce correct output\n+         so it's only a warning.  */\n+      if (CPP_OPTION (pfile, deps.style) == DEPS_NONE\n+          || print_dep\n+          || CPP_OPTION (pfile, deps.need_preprocessor_output))\n \tcpp_errno (pfile, CPP_DL_FATAL, file->path);\n+      else\n+\tcpp_errno (pfile, CPP_DL_WARNING, file->path);\n     }\n }\n "}, {"sha": "df04668dda05b9ab0c8c79e118e2b6482e15b421", "filename": "libcpp/include/cpplib.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74dc6a119089515f330035d60c35f56756c8c862/libcpp%2Finclude%2Fcpplib.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74dc6a119089515f330035d60c35f56756c8c862/libcpp%2Finclude%2Fcpplib.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Finclude%2Fcpplib.h?ref=74dc6a119089515f330035d60c35f56756c8c862", "patch": "@@ -433,6 +433,10 @@ struct cpp_options\n \n     /* If true, no dependency is generated on the main file.  */\n     bool ignore_main_file;\n+\n+    /* If true, intend to use the preprocessor output (e.g., for compilation)\n+       in addition to the dependency info.  */\n+    bool need_preprocessor_output;\n   } deps;\n \n   /* Target-specific features set by the front end or client.  */"}]}