{"sha": "f0750d7091a7f9014d4327cc13f4625af2da2500", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjA3NTBkNzA5MWE3ZjkwMTRkNDMyN2NjMTNmNDYyNWFmMmRhMjUwMA==", "commit": {"author": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2021-03-18T15:18:21Z"}, "committer": {"name": "Philip Herron", "email": "herron.philip@googlemail.com", "date": "2021-03-19T08:44:25Z"}, "message": "Fix type unification for Inference Variables and return types\n\nWhen we resolve the type of an expression such as a LiteralExpr with HIR id\n10, but is the final expression in a BlockExpr of HirId 11. The same type\nis infered for the entire BlockExpr as well as the final Expr but we\noverride the reference id on the TyTy::Type. This means if there is a\nchange in reference id the old ID must be added to the combined reference\nchain for type inference to take place.\n\nFixes #293", "tree": {"sha": "0022208828fa5c37ddfbaeca23a75f1a8eb28c55", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0022208828fa5c37ddfbaeca23a75f1a8eb28c55"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f0750d7091a7f9014d4327cc13f4625af2da2500", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f0750d7091a7f9014d4327cc13f4625af2da2500", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f0750d7091a7f9014d4327cc13f4625af2da2500", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f0750d7091a7f9014d4327cc13f4625af2da2500/comments", "author": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "196476601e64a954ad10fb0a728038aedae93155", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/196476601e64a954ad10fb0a728038aedae93155", "html_url": "https://github.com/Rust-GCC/gccrs/commit/196476601e64a954ad10fb0a728038aedae93155"}], "stats": {"total": 14, "additions": 13, "deletions": 1}, "files": [{"sha": "2d97a0bedc00394a84d06f900e9e12d6818b843b", "filename": "gcc/rust/typecheck/rust-tyty.h", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0750d7091a7f9014d4327cc13f4625af2da2500/gcc%2Frust%2Ftypecheck%2Frust-tyty.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0750d7091a7f9014d4327cc13f4625af2da2500/gcc%2Frust%2Ftypecheck%2Frust-tyty.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Ftypecheck%2Frust-tyty.h?ref=f0750d7091a7f9014d4327cc13f4625af2da2500", "patch": "@@ -57,7 +57,12 @@ class BaseType\n \n   HirId get_ref () const { return ref; }\n \n-  void set_ref (HirId id) { ref = id; }\n+  void set_ref (HirId id)\n+  {\n+    if (id != ref)\n+      append_reference (ref);\n+    ref = id;\n+  }\n \n   HirId get_ty_ref () const { return ty_ref; }\n "}, {"sha": "35a5cd047179ee1e6c8f0dc3b33fcfac9b515986", "filename": "gcc/testsuite/rust.test/compilable/block_expr4.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0750d7091a7f9014d4327cc13f4625af2da2500/gcc%2Ftestsuite%2Frust.test%2Fcompilable%2Fblock_expr4.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0750d7091a7f9014d4327cc13f4625af2da2500/gcc%2Ftestsuite%2Frust.test%2Fcompilable%2Fblock_expr4.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust.test%2Fcompilable%2Fblock_expr4.rs?ref=f0750d7091a7f9014d4327cc13f4625af2da2500", "patch": "@@ -0,0 +1,7 @@\n+fn foo() -> isize {\n+    0\n+}\n+\n+fn main() {\n+    let a = foo();\n+}"}]}