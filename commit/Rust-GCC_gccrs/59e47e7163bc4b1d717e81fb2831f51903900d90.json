{"sha": "59e47e7163bc4b1d717e81fb2831f51903900d90", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTllNDdlNzE2M2JjNGIxZDcxN2U4MWZiMjgzMWY1MTkwMzkwMGQ5MA==", "commit": {"author": {"name": "Nick Clifton", "email": "nickc@gcc.gnu.org", "date": "2006-03-11T09:16:55Z"}, "committer": {"name": "Nick Clifton", "email": "nickc@gcc.gnu.org", "date": "2006-03-11T09:16:55Z"}, "message": "Remove accidental commit to this file\n\nFrom-SVN: r111961", "tree": {"sha": "ffaa469a9f58904219f98df84b9c6f3e14af39a0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ffaa469a9f58904219f98df84b9c6f3e14af39a0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/59e47e7163bc4b1d717e81fb2831f51903900d90", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/59e47e7163bc4b1d717e81fb2831f51903900d90", "html_url": "https://github.com/Rust-GCC/gccrs/commit/59e47e7163bc4b1d717e81fb2831f51903900d90", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/59e47e7163bc4b1d717e81fb2831f51903900d90/comments", "author": null, "committer": null, "parents": [{"sha": "1348fb1ae9d72b806d89d1400e99b1b8a6e4c8b8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1348fb1ae9d72b806d89d1400e99b1b8a6e4c8b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1348fb1ae9d72b806d89d1400e99b1b8a6e4c8b8"}], "stats": {"total": 24, "additions": 0, "deletions": 24}, "files": [{"sha": "e7e1a2d30247a604a75b448b48e1229a3190deba", "filename": "gcc/config/m32r/m32r.c", "status": "modified", "additions": 0, "deletions": 24, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59e47e7163bc4b1d717e81fb2831f51903900d90/gcc%2Fconfig%2Fm32r%2Fm32r.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59e47e7163bc4b1d717e81fb2831f51903900d90/gcc%2Fconfig%2Fm32r%2Fm32r.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm32r%2Fm32r.c?ref=59e47e7163bc4b1d717e81fb2831f51903900d90", "patch": "@@ -692,17 +692,6 @@ gen_compare (enum rtx_code code, rtx x, rtx y, int need_compare)\n \t{\n \tcase EQ:\n \t  if (GET_CODE (y) == CONST_INT\n-\t      && UINT16_P (INTVAL (y))\t\t/* Reg equal to small const.  */\n-\t      && y != const0_rtx)\n-\t    {\n-\t      rtx tmp = gen_reg_rtx (SImode);\t\t\n-\t      \n-\t      emit_insn (gen_xorsi3 (tmp, x, GEN_INT (INTVAL (y))));\n-\t      x = tmp;\n-\t      y = const0_rtx;\n-\t    }\n-#if 0 /* Removed for miss optimizing at simplify_relational_operation().  */\n-\t  else if (GET_CODE (y) == CONST_INT\n \t      && CMP_INT16_P (INTVAL (y))\t\t/* Reg equal to small const.  */\n \t      && y != const0_rtx)\n \t    {\n@@ -712,7 +701,6 @@ gen_compare (enum rtx_code code, rtx x, rtx y, int need_compare)\n \t      x = tmp;\n \t      y = const0_rtx;\n \t    }\n-#endif\n \t  else if (CONSTANT_P (y))\t\t\t/* Reg equal to const.  */\n \t    {\n \t      rtx tmp = force_reg (GET_MODE (x), y);\n@@ -825,17 +813,6 @@ gen_compare (enum rtx_code code, rtx x, rtx y, int need_compare)\n \treturn gen_rtx_fmt_ee (code, CCmode, x, y);\n       \n       /* Reg/smallconst equal comparison.  */\n-      if (compare_code == EQ\n-\t  && GET_CODE (y) == CONST_INT\n-\t  && UINT16_P (INTVAL (y)))\n-\t{\n-\t  rtx tmp = gen_reg_rtx (SImode);\n-\n-\t  emit_insn (gen_xorsi3 (tmp, x, GEN_INT (INTVAL (y))));\n-\t  return gen_rtx_fmt_ee (code, CCmode, tmp, const0_rtx);\n-\t}\n-      \n-#if 0 /* Removed for miss optimizing at simplify_relational_operation().  */\n       if (compare_code == EQ\n \t  && GET_CODE (y) == CONST_INT\n \t  && CMP_INT16_P (INTVAL (y)))\n@@ -845,7 +822,6 @@ gen_compare (enum rtx_code code, rtx x, rtx y, int need_compare)\n \t  emit_insn (gen_addsi3 (tmp, x, GEN_INT (-INTVAL (y))));\n \t  return gen_rtx_fmt_ee (code, CCmode, tmp, const0_rtx);\n \t}\n-#endif\n       \n       /* Reg/const equal comparison.  */\n       if (compare_code == EQ"}]}