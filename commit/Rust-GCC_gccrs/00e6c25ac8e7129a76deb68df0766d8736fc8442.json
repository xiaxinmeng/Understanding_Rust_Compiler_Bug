{"sha": "00e6c25ac8e7129a76deb68df0766d8736fc8442", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDBlNmMyNWFjOGU3MTI5YTc2ZGViNjhkZjA3NjZkODczNmZjODQ0Mg==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2016-03-24T18:13:40Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2016-03-24T18:13:40Z"}, "message": "libstdc++/69945 Add __gnu_cxx::__freeres hook\n\n\tPR libstdc++/69945\n\t* config/abi/pre/gnu.ver: Add new symbol.\n\t* libsupc++/eh_alloc.cc (__gnu_cxx::__freeres): Define.\n\t* testsuite/18_support/free_eh_pool.cc: New test.\n\nFrom-SVN: r234465", "tree": {"sha": "d91ee6d8550551a5b75ada8c1eeaec54d0d0d7a5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d91ee6d8550551a5b75ada8c1eeaec54d0d0d7a5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/00e6c25ac8e7129a76deb68df0766d8736fc8442", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/00e6c25ac8e7129a76deb68df0766d8736fc8442", "html_url": "https://github.com/Rust-GCC/gccrs/commit/00e6c25ac8e7129a76deb68df0766d8736fc8442", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/00e6c25ac8e7129a76deb68df0766d8736fc8442/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "52228180f1e50cbb082c843b933dc87d573dbfe6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52228180f1e50cbb082c843b933dc87d573dbfe6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/52228180f1e50cbb082c843b933dc87d573dbfe6"}], "stats": {"total": 63, "additions": 63, "deletions": 0}, "files": [{"sha": "4e6db2ab3db8bc3238ddfdb2cfad03b9a38b7d3d", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00e6c25ac8e7129a76deb68df0766d8736fc8442/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00e6c25ac8e7129a76deb68df0766d8736fc8442/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=00e6c25ac8e7129a76deb68df0766d8736fc8442", "patch": "@@ -1,3 +1,10 @@\n+2016-03-24  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/69945\n+\t* config/abi/pre/gnu.ver: Add new symbol.\n+\t* libsupc++/eh_alloc.cc (__gnu_cxx::__freeres): Define.\n+\t* testsuite/18_support/free_eh_pool.cc: New test.\n+\n 2016-03-23  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n \n \t* include/Makefile.am (install-freestanding-headers): Add"}, {"sha": "5c6b0feb2b3efd57613980ac1842e01f44025a93", "filename": "libstdc++-v3/config/abi/pre/gnu.ver", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00e6c25ac8e7129a76deb68df0766d8736fc8442/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpre%2Fgnu.ver", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00e6c25ac8e7129a76deb68df0766d8736fc8442/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpre%2Fgnu.ver", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpre%2Fgnu.ver?ref=00e6c25ac8e7129a76deb68df0766d8736fc8442", "patch": "@@ -2148,6 +2148,8 @@ CXXABI_1.3.10 {\n     _ZGTtNKSt13bad_exceptionD1Ev;\n     _ZGTtNKSt13bad_exception4whatEv;\n \n+    _ZN9__gnu_cxx9__freeresEv;\n+\n } CXXABI_1.3.9;\n \n # Symbols in the support library (libsupc++) supporting transactional memory."}, {"sha": "d362e406ccac572fc8a6628e5020b512692f7429", "filename": "libstdc++-v3/libsupc++/eh_alloc.cc", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00e6c25ac8e7129a76deb68df0766d8736fc8442/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Feh_alloc.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00e6c25ac8e7129a76deb68df0766d8736fc8442/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Feh_alloc.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Feh_alloc.cc?ref=00e6c25ac8e7129a76deb68df0766d8736fc8442", "patch": "@@ -73,6 +73,10 @@ using namespace __cxxabiv1;\n # define EMERGENCY_OBJ_COUNT\t4\n #endif\n \n+namespace __gnu_cxx\n+{\n+  void __freeres();\n+}\n \n namespace\n {\n@@ -106,6 +110,8 @@ namespace\n       // to implement in_pool.\n       char *arena;\n       std::size_t arena_size;\n+\n+      friend void __gnu_cxx::__freeres();\n     };\n \n   pool::pool()\n@@ -244,6 +250,19 @@ namespace\n   pool emergency_pool;\n }\n \n+namespace __gnu_cxx\n+{\n+  void\n+  __freeres()\n+  {\n+    if (emergency_pool.arena)\n+      {\n+\t::free(emergency_pool.arena);\n+\temergency_pool.arena = 0;\n+      }\n+  }\n+}\n+\n extern \"C\" void *\n __cxxabiv1::__cxa_allocate_exception(std::size_t thrown_size) _GLIBCXX_NOTHROW\n {"}, {"sha": "9712d3d7619d6cc59133457654b7d004bda81c63", "filename": "libstdc++-v3/testsuite/18_support/free_eh_pool.cc", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00e6c25ac8e7129a76deb68df0766d8736fc8442/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Ffree_eh_pool.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00e6c25ac8e7129a76deb68df0766d8736fc8442/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Ffree_eh_pool.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Ffree_eh_pool.cc?ref=00e6c25ac8e7129a76deb68df0766d8736fc8442", "patch": "@@ -0,0 +1,35 @@\n+// Copyright (C) 2016 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-do run }\n+\n+namespace __gnu_cxx {\n+  void __freeres();\n+}\n+\n+struct X {\n+  ~X() {\n+    __gnu_cxx::__freeres();\n+  }\n+};\n+\n+X x;\n+\n+int\n+main()\n+{\n+}"}]}