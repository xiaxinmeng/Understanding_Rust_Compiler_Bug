{"sha": "7b9202ea9ee9b9147a2c2e3f478f1f3eb0b5c174", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2I5MjAyZWE5ZWU5YjkxNDdhMmMyZTNmNDc4ZjFmM2ViMGI1YzE3NA==", "commit": {"author": {"name": "Harald van Dijk", "email": "harald@gigawatt.nl", "date": "2019-06-04T14:48:38Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2019-06-04T14:48:38Z"}, "message": "PR c++/60531 - Wrong error about unresolved overloaded function\n\nFor PR60531, GCC wrongly rejects function templates with explicitly\nspecified template arguments as overloaded. They are resolved by\nresolve_nondeduced_context, which is normally called by\ncp_default_conversion through decay_conversion, but the latter have\nextra effects making them unusable here. Calling the former directly\ndoes work.\n\n\t* typeck.c (cp_build_binary_op): See if overload can be resolved.\n\t(cp_build_unary_op): Ditto.\n\n\t* g++.dg/template/operator15.C: New test.\n\nFrom-SVN: r271910", "tree": {"sha": "09a05fcf0d7ab47821b96c882f7a163f5b69a85b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/09a05fcf0d7ab47821b96c882f7a163f5b69a85b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7b9202ea9ee9b9147a2c2e3f478f1f3eb0b5c174", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b9202ea9ee9b9147a2c2e3f478f1f3eb0b5c174", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7b9202ea9ee9b9147a2c2e3f478f1f3eb0b5c174", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b9202ea9ee9b9147a2c2e3f478f1f3eb0b5c174/comments", "author": {"login": "hvdijk", "id": 1389950, "node_id": "MDQ6VXNlcjEzODk5NTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1389950?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hvdijk", "html_url": "https://github.com/hvdijk", "followers_url": "https://api.github.com/users/hvdijk/followers", "following_url": "https://api.github.com/users/hvdijk/following{/other_user}", "gists_url": "https://api.github.com/users/hvdijk/gists{/gist_id}", "starred_url": "https://api.github.com/users/hvdijk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hvdijk/subscriptions", "organizations_url": "https://api.github.com/users/hvdijk/orgs", "repos_url": "https://api.github.com/users/hvdijk/repos", "events_url": "https://api.github.com/users/hvdijk/events{/privacy}", "received_events_url": "https://api.github.com/users/hvdijk/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ecdcd56094cadc7bd3c18a0edd19f00d670e0d9b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ecdcd56094cadc7bd3c18a0edd19f00d670e0d9b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ecdcd56094cadc7bd3c18a0edd19f00d670e0d9b"}], "stats": {"total": 24, "additions": 19, "deletions": 5}, "files": [{"sha": "21b82df92c42bd485b9f70e150fb0c7a03fe2eeb", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b9202ea9ee9b9147a2c2e3f478f1f3eb0b5c174/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b9202ea9ee9b9147a2c2e3f478f1f3eb0b5c174/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=7b9202ea9ee9b9147a2c2e3f478f1f3eb0b5c174", "patch": "@@ -1,3 +1,9 @@\n+2019-06-04  Harald van Dijk  <harald@gigawatt.nl>\n+\n+\tPR c++/60531 - Wrong error about unresolved overloaded function\n+\t* typeck.c (cp_build_binary_op): See if overload can be resolved.\n+\t(cp_build_unary_op): Ditto.\n+\n 2019-06-04  Jason Merrill  <jason@redhat.com>\n \n \tReduce accumulated garbage in constexpr evaluation."}, {"sha": "b9fa6f1d273258aea0c9282ddd7b5393862a4c75", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b9202ea9ee9b9147a2c2e3f478f1f3eb0b5c174/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b9202ea9ee9b9147a2c2e3f478f1f3eb0b5c174/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=7b9202ea9ee9b9147a2c2e3f478f1f3eb0b5c174", "patch": "@@ -4396,10 +4396,6 @@ cp_build_binary_op (const op_location_t &location,\n   /* True if both operands have arithmetic type.  */\n   bool arithmetic_types_p;\n \n-  /* Apply default conversions.  */\n-  op0 = orig_op0;\n-  op1 = orig_op1;\n-\n   /* Remember whether we're doing / or %.  */\n   bool doing_div_or_mod = false;\n \n@@ -4409,6 +4405,10 @@ cp_build_binary_op (const op_location_t &location,\n   /* Tree holding instrumentation expression.  */\n   tree instrument_expr = NULL_TREE;\n \n+  /* Apply default conversions.  */\n+  op0 = resolve_nondeduced_context (orig_op0, complain);\n+  op1 = resolve_nondeduced_context (orig_op1, complain);\n+\n   if (code == TRUTH_AND_EXPR || code == TRUTH_ANDIF_EXPR\n       || code == TRUTH_OR_EXPR || code == TRUTH_ORIF_EXPR\n       || code == TRUTH_XOR_EXPR)\n@@ -6216,11 +6216,13 @@ cp_build_unary_op (enum tree_code code, tree xarg, bool noconvert,\n   if (!arg || error_operand_p (arg))\n     return error_mark_node;\n \n+  arg = resolve_nondeduced_context (arg, complain);\n+\n   if ((invalid_op_diag\n        = targetm.invalid_unary_op ((code == UNARY_PLUS_EXPR\n \t\t\t\t    ? CONVERT_EXPR\n \t\t\t\t    : code),\n-\t\t\t\t   TREE_TYPE (xarg))))\n+\t\t\t\t   TREE_TYPE (arg))))\n     {\n       if (complain & tf_error)\n \terror (invalid_op_diag);"}, {"sha": "755442266bb6e90850629fe301579bc65e737b1c", "filename": "gcc/testsuite/g++.dg/template/operator15.C", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b9202ea9ee9b9147a2c2e3f478f1f3eb0b5c174/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Foperator15.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b9202ea9ee9b9147a2c2e3f478f1f3eb0b5c174/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Foperator15.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Foperator15.C?ref=7b9202ea9ee9b9147a2c2e3f478f1f3eb0b5c174", "patch": "@@ -0,0 +1,6 @@\n+// PR c++/60531\n+\n+template < class T > T foo ();\n+\n+bool b1 = foo<int> == foo<int>;\n+int (*fp1)() = +foo<int>;"}]}