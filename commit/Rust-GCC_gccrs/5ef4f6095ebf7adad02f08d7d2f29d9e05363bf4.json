{"sha": "5ef4f6095ebf7adad02f08d7d2f29d9e05363bf4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWVmNGY2MDk1ZWJmN2FkYWQwMmYwOGQ3ZDJmMjlkOWUwNTM2M2JmNA==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2012-03-19T22:16:45Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2012-03-19T22:16:45Z"}, "message": "i386.md (allocate_stack): Simplify.\n\n\t* config/i386/i386.md (allocate_stack): Simplify.\n\nFrom-SVN: r185545", "tree": {"sha": "e59d77a44964629a7705afb4fb6ca181a782b0f6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e59d77a44964629a7705afb4fb6ca181a782b0f6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5ef4f6095ebf7adad02f08d7d2f29d9e05363bf4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ef4f6095ebf7adad02f08d7d2f29d9e05363bf4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5ef4f6095ebf7adad02f08d7d2f29d9e05363bf4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ef4f6095ebf7adad02f08d7d2f29d9e05363bf4/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "fa7548481a0fa6dc43c23c6b7f3afa4d6fd3e628", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa7548481a0fa6dc43c23c6b7f3afa4d6fd3e628", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fa7548481a0fa6dc43c23c6b7f3afa4d6fd3e628"}], "stats": {"total": 36, "additions": 20, "deletions": 16}, "files": [{"sha": "258bda905ac83653c5afe9ba37ea112e04e664ba", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ef4f6095ebf7adad02f08d7d2f29d9e05363bf4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ef4f6095ebf7adad02f08d7d2f29d9e05363bf4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5ef4f6095ebf7adad02f08d7d2f29d9e05363bf4", "patch": "@@ -1,3 +1,7 @@\n+2012-03-19  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/i386.md (allocate_stack): Simplify.\n+\n 2012-03-19  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* builtins.c (expand_builtin_cexpi): Use copy_addr_to_reg instead of\n@@ -10,7 +14,6 @@\n \t(ix86_expand_setmem): Ditto.\n \t(ix86_trampoline_init): DItto.\n \t* config/i386/i386.md (cmpstrnsi): Ditto.\n-\t(allocate_stack): Ditto.\n \n 2012-03-19  Sandra Loosemore  <sandra@codesourcery.com>\n "}, {"sha": "4bcb7d2830fe2f61ddc6fef28cdfec01b549624c", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 16, "deletions": 15, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ef4f6095ebf7adad02f08d7d2f29d9e05363bf4/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ef4f6095ebf7adad02f08d7d2f29d9e05363bf4/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=5ef4f6095ebf7adad02f08d7d2f29d9e05363bf4", "patch": "@@ -16729,25 +16729,26 @@\n \n   if (CHECK_STACK_LIMIT && CONST_INT_P (operands[1])\n       && INTVAL (operands[1]) < CHECK_STACK_LIMIT)\n-    {\n-      x = expand_simple_binop (Pmode, MINUS, stack_pointer_rtx, operands[1],\n-\t\t\t       stack_pointer_rtx, 0, OPTAB_DIRECT);\n-      if (x != stack_pointer_rtx)\n-\temit_move_insn (stack_pointer_rtx, x);\n-    }\n+    x = operands[1];\n   else\n     {\n-      x = copy_addr_to_reg (operands[1]);\n-      if (TARGET_64BIT)\n-        emit_insn (gen_allocate_stack_worker_probe_di (x, x));\n-      else\n-        emit_insn (gen_allocate_stack_worker_probe_si (x, x));\n-      x = expand_simple_binop (Pmode, MINUS, stack_pointer_rtx, x,\n-\t\t\t       stack_pointer_rtx, 0, OPTAB_DIRECT);\n-      if (x != stack_pointer_rtx)\n-\temit_move_insn (stack_pointer_rtx, x);\n+      rtx (*insn) (rtx, rtx);\n+\n+      x = copy_to_mode_reg (Pmode, operands[1]);\n+\n+      insn = (TARGET_64BIT\n+\t      ? gen_allocate_stack_worker_probe_di\n+\t      : gen_allocate_stack_worker_probe_si);\n+\n+      emit_insn (insn (x, x));\n     }\n \n+  x = expand_simple_binop (Pmode, MINUS, stack_pointer_rtx, x,\n+\t\t\t   stack_pointer_rtx, 0, OPTAB_DIRECT);\n+\n+  if (x != stack_pointer_rtx)\n+    emit_move_insn (stack_pointer_rtx, x);\n+\n   emit_move_insn (operands[0], virtual_stack_dynamic_rtx);\n   DONE;\n })"}]}