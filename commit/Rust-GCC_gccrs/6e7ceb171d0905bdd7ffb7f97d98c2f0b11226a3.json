{"sha": "6e7ceb171d0905bdd7ffb7f97d98c2f0b11226a3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmU3Y2ViMTcxZDA5MDViZGQ3ZmZiN2Y5N2Q5OGMyZjBiMTEyMjZhMw==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2014-06-30T15:41:16Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2014-06-30T15:41:16Z"}, "message": "re PR c++/51400 ([c++0x] ICE with constexpr and attribute noreturn)\n\n/c-family\n2014-06-30  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/51400\n\t* c-common.c (handle_noreturn_attribute, handle_const_attribute):\n\tDo not discard TYPE_QUALS of type.\n\n/testsuite\n2014-06-30  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/51400\n\t* g++.dg/cpp0x/constexpr-attribute3.C: New.\n\nFrom-SVN: r212155", "tree": {"sha": "0875cc06c0dda13b340390dc06bb3dee99154e16", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0875cc06c0dda13b340390dc06bb3dee99154e16"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6e7ceb171d0905bdd7ffb7f97d98c2f0b11226a3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e7ceb171d0905bdd7ffb7f97d98c2f0b11226a3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6e7ceb171d0905bdd7ffb7f97d98c2f0b11226a3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e7ceb171d0905bdd7ffb7f97d98c2f0b11226a3/comments", "author": null, "committer": null, "parents": [{"sha": "e8b27b0809ded909f2652ff5d32fc83fbc955b4c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e8b27b0809ded909f2652ff5d32fc83fbc955b4c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e8b27b0809ded909f2652ff5d32fc83fbc955b4c"}], "stats": {"total": 32, "additions": 26, "deletions": 6}, "files": [{"sha": "341df696859883b93f38af3c7da73fe1154539d6", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e7ceb171d0905bdd7ffb7f97d98c2f0b11226a3/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e7ceb171d0905bdd7ffb7f97d98c2f0b11226a3/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=6e7ceb171d0905bdd7ffb7f97d98c2f0b11226a3", "patch": "@@ -1,3 +1,9 @@\n+2014-06-30  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/51400\n+\t* c-common.c (handle_noreturn_attribute, handle_const_attribute):\n+\tDo not discard TYPE_QUALS of type.\n+\n 2014-06-26  Jason Merrill  <jason@redhat.com>\n \n \t* c-common.h (enum cxx_dialect): Add cxx1z."}, {"sha": "ee89fca78d51da5674eb67d9508866935cf77b5b", "filename": "gcc/c-family/c-common.c", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e7ceb171d0905bdd7ffb7f97d98c2f0b11226a3/gcc%2Fc-family%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e7ceb171d0905bdd7ffb7f97d98c2f0b11226a3/gcc%2Fc-family%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-common.c?ref=6e7ceb171d0905bdd7ffb7f97d98c2f0b11226a3", "patch": "@@ -6575,9 +6575,11 @@ handle_noreturn_attribute (tree *node, tree name, tree ARG_UNUSED (args),\n   else if (TREE_CODE (type) == POINTER_TYPE\n \t   && TREE_CODE (TREE_TYPE (type)) == FUNCTION_TYPE)\n     TREE_TYPE (*node)\n-      = build_pointer_type\n-\t(build_type_variant (TREE_TYPE (type),\n-\t\t\t     TYPE_READONLY (TREE_TYPE (type)), 1));\n+      = (build_qualified_type\n+\t (build_pointer_type\n+\t  (build_type_variant (TREE_TYPE (type),\n+\t\t\t       TYPE_READONLY (TREE_TYPE (type)), 1)),\n+\t  TYPE_QUALS (type)));\n   else\n     {\n       warning (OPT_Wattributes, \"%qE attribute ignored\", name);\n@@ -6988,9 +6990,11 @@ handle_const_attribute (tree *node, tree name, tree ARG_UNUSED (args),\n   else if (TREE_CODE (type) == POINTER_TYPE\n \t   && TREE_CODE (TREE_TYPE (type)) == FUNCTION_TYPE)\n     TREE_TYPE (*node)\n-      = build_pointer_type\n-\t(build_type_variant (TREE_TYPE (type), 1,\n-\t\t\t     TREE_THIS_VOLATILE (TREE_TYPE (type))));\n+      = (build_qualified_type\n+\t (build_pointer_type\n+\t  (build_type_variant (TREE_TYPE (type), 1,\n+\t\t\t       TREE_THIS_VOLATILE (TREE_TYPE (type)))),\n+\t  TYPE_QUALS (type)));\n   else\n     {\n       warning (OPT_Wattributes, \"%qE attribute ignored\", name);"}, {"sha": "930d60b7338af55e428d7fbca9c82ce4f8b9f84f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e7ceb171d0905bdd7ffb7f97d98c2f0b11226a3/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e7ceb171d0905bdd7ffb7f97d98c2f0b11226a3/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6e7ceb171d0905bdd7ffb7f97d98c2f0b11226a3", "patch": "@@ -1,3 +1,8 @@\n+2014-06-30  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/51400\n+\t* g++.dg/cpp0x/constexpr-attribute3.C: New.\n+\n 2014-06-30  Jeff Law  <law@redhat.com>\n \n \tPR tree-optimization/61607"}, {"sha": "491c2e7a8fe90425247d075b0e1f0ae367f793be", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-attribute3.C", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e7ceb171d0905bdd7ffb7f97d98c2f0b11226a3/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-attribute3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e7ceb171d0905bdd7ffb7f97d98c2f0b11226a3/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-attribute3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-attribute3.C?ref=6e7ceb171d0905bdd7ffb7f97d98c2f0b11226a3", "patch": "@@ -0,0 +1,5 @@\n+// PR c++/51400\n+// { dg-do compile { target c++11 } }\n+\n+constexpr int (*f)() __attribute__((noreturn)) = 0;\n+constexpr int (*g)() __attribute__((const)) = 0;"}]}