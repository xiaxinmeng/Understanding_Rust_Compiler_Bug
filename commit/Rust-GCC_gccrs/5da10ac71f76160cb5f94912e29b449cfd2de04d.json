{"sha": "5da10ac71f76160cb5f94912e29b449cfd2de04d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWRhMTBhYzcxZjc2MTYwY2I1Zjk0OTEyZTI5YjQ0OWNmZDJkZTA0ZA==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2006-11-13T12:37:29Z"}, "committer": {"name": "Zdenek Dvorak", "email": "rakdver@gcc.gnu.org", "date": "2006-11-13T12:37:29Z"}, "message": "re PR tree-optimization/29680 (Misscompilation of spec2006 gcc)\n\n\tPR tree-optimization/29680\n\t* tree-ssa-operands.c (access_can_touch_variable): Revert fix for\n\tPR 14784.\n\n\t* gcc.dg/alias-11.c: New test.\n\n\nCo-Authored-By: Zdenek Dvorak <dvorakz@suse.cz>\n\nFrom-SVN: r118754", "tree": {"sha": "ecd30a9a95035f0a0d537ed6cda2b05b7de3d352", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ecd30a9a95035f0a0d537ed6cda2b05b7de3d352"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5da10ac71f76160cb5f94912e29b449cfd2de04d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5da10ac71f76160cb5f94912e29b449cfd2de04d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5da10ac71f76160cb5f94912e29b449cfd2de04d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5da10ac71f76160cb5f94912e29b449cfd2de04d/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "84816907e4bda26eb7a21a5d3d52eb876fcd91dd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84816907e4bda26eb7a21a5d3d52eb876fcd91dd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/84816907e4bda26eb7a21a5d3d52eb876fcd91dd"}], "stats": {"total": 131, "additions": 130, "deletions": 1}, "files": [{"sha": "78798b24fa201e4806d4f0363f94343232a6c852", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5da10ac71f76160cb5f94912e29b449cfd2de04d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5da10ac71f76160cb5f94912e29b449cfd2de04d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5da10ac71f76160cb5f94912e29b449cfd2de04d", "patch": "@@ -1,3 +1,10 @@\n+2006-11-13  H.J. Lu  <hongjiu.lu@intel.com>\n+\t    Zdenek Dvorak <dvorakz@suse.cz>\n+\n+\tPR tree-optimization/29680\n+\t* tree-ssa-operands.c (access_can_touch_variable): Revert fix for\n+\tPR 14784.\n+\n 2006-11-12  Jason Merrill  <jason@redhat.com>\n \t    Andrew Pinski <pinskia@physics.uc.edu>\n "}, {"sha": "6077396aa68fc2cee171a607ea200f193db38bcf", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5da10ac71f76160cb5f94912e29b449cfd2de04d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5da10ac71f76160cb5f94912e29b449cfd2de04d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5da10ac71f76160cb5f94912e29b449cfd2de04d", "patch": "@@ -1,3 +1,9 @@\n+2006-11-12  H.J. Lu  <hongjiu.lu@intel.com>\n+\t    Zdenek Dvorak <dvorakz@suse.cz>\n+\n+\tPR tree-optimization/29680\n+\t* gcc.dg/alias-11.c: New test.\n+\n 2006-11-12  Roger Sayle  <roger@eyesopen.com>\n \n \tPR rtl-optimization/29797"}, {"sha": "36175d7c25a80256b68c8b07eae3707fe17f742e", "filename": "gcc/testsuite/gcc.dg/alias-11.c", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5da10ac71f76160cb5f94912e29b449cfd2de04d/gcc%2Ftestsuite%2Fgcc.dg%2Falias-11.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5da10ac71f76160cb5f94912e29b449cfd2de04d/gcc%2Ftestsuite%2Fgcc.dg%2Falias-11.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Falias-11.c?ref=5da10ac71f76160cb5f94912e29b449cfd2de04d", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do run } */\n+/* { dg-require-alias \"\" } */\n+/* { dg-options \"-O2\" } */\n+\n+#include <stdio.h>\n+#include <stdlib.h>\n+#include <string.h>\n+\n+typedef struct dw_cfi_struct\n+{\n+  struct dw_cfi_struct *dw_cfi_next;\n+  const char *dw_cfi_addr;\n+}\n+dw_cfi_node;\n+\n+typedef struct dw_fde_struct\n+{\n+  const char *dw_fde_current_label;\n+  dw_cfi_node *dw_fde_cfi;\n+}\n+dw_fde_node;\n+\n+dw_cfi_node *cie_cfi_head;\n+unsigned fde_table_in_use;\n+dw_fde_node *fde_table;\n+\n+__inline__ void\n+add_cfi (dw_cfi_node **list_head, dw_cfi_node *cfi)\n+{\n+  dw_cfi_node **p;\n+\n+  for (p = list_head; (*p) != ((void *)0); p = &(*p)->dw_cfi_next)\n+    ;\n+\n+  *p = cfi;\n+}\n+\n+__inline__ struct dw_cfi_struct *\n+new_cfi (void)\n+{\n+  dw_cfi_node *cfi = (dw_cfi_node *) malloc (sizeof (dw_cfi_node));\n+\n+  memset (cfi, 0, sizeof (dw_cfi_node));\n+  return cfi;\n+}\n+\n+char *\n+dwarf2out_cfi_label (void)\n+{\n+  static char label[20];\n+  static unsigned long label_num = 0;\n+\n+  sprintf (label, \"*.%s%u\", \"LCFI\", (unsigned) (label_num++));\n+  return label;\n+}\n+\n+void\n+add_fde_cfi (const char *label, dw_cfi_node *cfi)\n+{\n+  if (label)\n+    {\n+      dw_fde_node *fde = fde_table + fde_table_in_use - 1;\n+\n+      if (*label == 0)\n+\tlabel = dwarf2out_cfi_label ();\n+\n+      if (fde->dw_fde_current_label == ((void *)0)\n+\t  || strcmp (label, fde->dw_fde_current_label))\n+\t{\n+\t  dw_cfi_node *xcfi;\n+\n+\t  fde->dw_fde_current_label = label = strdup (label);\n+\n+\t  xcfi = new_cfi ();\n+\t  xcfi->dw_cfi_addr = label;\n+\t  add_cfi (&fde->dw_fde_cfi, xcfi);\n+\t}\n+\n+      add_cfi (&fde->dw_fde_cfi, cfi);\n+    }\n+  else\n+    add_cfi (&cie_cfi_head, cfi);\n+}\n+\n+int\n+main ()\n+{\n+  dw_cfi_node *cfi;\n+  dw_fde_node *fde;\n+\n+  fde_table_in_use = 1;\n+  fde_table = (dw_fde_node *) realloc (fde_table,\n+\t\t\t\t       sizeof (dw_fde_node));\n+  memset (fde_table, 0, sizeof (dw_fde_node));\n+  cfi = new_cfi ();\n+  add_fde_cfi (\"\", cfi);\n+\n+  fde = &fde_table[0];\n+  cfi = fde->dw_fde_cfi;\n+\n+  if (cfi == NULL)\n+    abort ();\n+\n+  if (cfi->dw_cfi_addr == NULL)\n+    abort ();\n+\n+  if (strcmp (\"*.LCFI0\", cfi->dw_cfi_addr))\n+    abort ();\n+\n+  return 0;\n+}"}, {"sha": "2c776836ce6ab98b22551bd2a8abbadbcc279763", "filename": "gcc/tree-ssa-operands.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5da10ac71f76160cb5f94912e29b449cfd2de04d/gcc%2Ftree-ssa-operands.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5da10ac71f76160cb5f94912e29b449cfd2de04d/gcc%2Ftree-ssa-operands.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-operands.c?ref=5da10ac71f76160cb5f94912e29b449cfd2de04d", "patch": "@@ -1151,11 +1151,16 @@ access_can_touch_variable (tree ref, tree alias, HOST_WIDE_INT offset,\n \t   && flag_strict_aliasing\n \t   && TREE_CODE (ref) != INDIRECT_REF\n \t   && !MTAG_P (alias)\n-\t   && !var_ann (alias)->is_heapvar\n \t   && (TREE_CODE (base) != INDIRECT_REF\n \t       || TREE_CODE (TREE_TYPE (base)) != UNION_TYPE)\n \t   && !AGGREGATE_TYPE_P (TREE_TYPE (alias))\n \t   && TREE_CODE (TREE_TYPE (alias)) != COMPLEX_TYPE\n+#if 0\n+\t   /* FIXME: PR tree-optimization/29680.  */\n+\t   && !var_ann (alias)->is_heapvar\n+#else\n+\t   && !POINTER_TYPE_P (TREE_TYPE (alias))\n+#endif\n \t   /* When the struct has may_alias attached to it, we need not to\n \t      return true.  */\n \t   && get_alias_set (base))"}]}