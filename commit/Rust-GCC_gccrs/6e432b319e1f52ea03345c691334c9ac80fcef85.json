{"sha": "6e432b319e1f52ea03345c691334c9ac80fcef85", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmU0MzJiMzE5ZTFmNTJlYTAzMzQ1YzY5MTMzNGM5YWM4MGZjZWY4NQ==", "commit": {"author": {"name": "Kriang Lerdsuwanakij", "email": "lerdsuwa@users.sourceforge.net", "date": "2004-12-15T15:21:11Z"}, "committer": {"name": "Kriang Lerdsuwanakij", "email": "lerdsuwa@gcc.gnu.org", "date": "2004-12-15T15:21:11Z"}, "message": "re PR c++/18825 (ICE segmentation fault in wv2)\n\n\tPR c++/18825\n\t* pt.c (instantiate_class_template): Set input_location for\n\tfriend function.\n\t(tsubst_friend_function): Don't set input_location here.\n\tMake sure the context is complete if necessary.\n\n\t* g++.dg/template/friend32.C: New test.\n\nFrom-SVN: r92200", "tree": {"sha": "fc3c8123f4c13382b40067d4d1ac457e3358cc0c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fc3c8123f4c13382b40067d4d1ac457e3358cc0c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6e432b319e1f52ea03345c691334c9ac80fcef85", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e432b319e1f52ea03345c691334c9ac80fcef85", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6e432b319e1f52ea03345c691334c9ac80fcef85", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e432b319e1f52ea03345c691334c9ac80fcef85/comments", "author": null, "committer": null, "parents": [{"sha": "06d5588c56e70b6f89f3cdab25c381b237759bd7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06d5588c56e70b6f89f3cdab25c381b237759bd7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/06d5588c56e70b6f89f3cdab25c381b237759bd7"}], "stats": {"total": 87, "additions": 72, "deletions": 15}, "files": [{"sha": "11e90b8b6c0554cb96ead63e7170faa8c0f6ca05", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e432b319e1f52ea03345c691334c9ac80fcef85/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e432b319e1f52ea03345c691334c9ac80fcef85/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=6e432b319e1f52ea03345c691334c9ac80fcef85", "patch": "@@ -1,3 +1,11 @@\n+2004-12-15  Kriang Lerdsuwanakij  <lerdsuwa@users.sourceforge.net>\n+\n+\tPR c++/18825\n+\t* pt.c (instantiate_class_template): Set input_location for\n+\tfriend function.\n+\t(tsubst_friend_function): Don't set input_location here.\n+\tMake sure the context is complete if necessary.\n+\n 2004-12-15  Nathan Sidwell  <nathan@codesourcery.com>\n \n \tPR c++/18981"}, {"sha": "db9b08ffb9a1946aaff3c53243efd667f597af1e", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 38, "deletions": 15, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e432b319e1f52ea03345c691334c9ac80fcef85/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e432b319e1f52ea03345c691334c9ac80fcef85/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=6e432b319e1f52ea03345c691334c9ac80fcef85", "patch": "@@ -5098,9 +5098,6 @@ static tree\n tsubst_friend_function (tree decl, tree args)\n {\n   tree new_friend;\n-  location_t saved_loc = input_location;\n-\n-  input_location = DECL_SOURCE_LOCATION (decl);\n \n   if (TREE_CODE (decl) == FUNCTION_DECL \n       && DECL_TEMPLATE_INSTANTIATION (decl)\n@@ -5135,8 +5132,7 @@ tsubst_friend_function (tree decl, tree args)\n \t\t\t\t       &new_args, \n \t\t\t\t       /*need_member_template=*/0,\n \t\t\t\t       TREE_VEC_LENGTH (args));\n-      new_friend = instantiate_template (tmpl, new_args, tf_error);\n-      goto done;\n+      return instantiate_template (tmpl, new_args, tf_error);\n     }\n \n   new_friend = tsubst (decl, args, tf_error | tf_warning, NULL_TREE);\n@@ -5299,19 +5295,40 @@ tsubst_friend_function (tree decl, tree args)\n \t  new_friend = old_decl;\n \t}\n     }\n-  else if (COMPLETE_TYPE_P (DECL_CONTEXT (new_friend)))\n+  else\n     {\n-      /* Check to see that the declaration is really present, and,\n-\t possibly obtain an improved declaration.  */\n-      tree fn = check_classfn (DECL_CONTEXT (new_friend), \n-\t\t\t       new_friend, NULL_TREE);\n-      \n-      if (fn)\n-\tnew_friend = fn;\n+      tree context = DECL_CONTEXT (new_friend);\n+      bool dependent_p;\n+\n+      /* In the code\n+\t   template <class T> class C {\n+\t     template <class U> friend void C1<U>::f (); // case 1\n+\t     friend void C2<T>::f ();\t\t\t // case 2\n+\t   };\n+\t we only need to make sure CONTEXT is a complete type for\n+\t case 2.  To distinguish between the two cases, we note that\n+\t CONTEXT of case 1 remains dependent type after tsubst while\n+\t this isn't true for case 2.  */\n+      ++processing_template_decl;\n+      dependent_p = dependent_type_p (context);\n+      --processing_template_decl;\n+\n+      if (!dependent_p\n+\t  && !complete_type_or_else (context, NULL_TREE))\n+\treturn error_mark_node;\n+\n+      if (COMPLETE_TYPE_P (context))\n+\t{\n+\t  /* Check to see that the declaration is really present, and,\n+\t     possibly obtain an improved declaration.  */\n+\t  tree fn = check_classfn (context,\n+\t\t\t\t   new_friend, NULL_TREE);\n+\n+\t  if (fn)\n+\t    new_friend = fn;\n+\t}\n     }\n \n- done:\n-  input_location = saved_loc;\n   return new_friend;\n }\n \n@@ -5816,6 +5833,12 @@ instantiate_class_template (tree type)\n \t      /* Build new DECL_FRIENDLIST.  */\n \t      tree r;\n \n+\t      /* The the file and line for this declaration, to\n+\t\t assist in error message reporting.  Since we\n+\t\t called push_tinst_level above, we don't need to\n+\t\t restore these.  */\n+\t      input_location = DECL_SOURCE_LOCATION (t);\n+\n \t      if (TREE_CODE (t) == TEMPLATE_DECL)\n \t\t{\n \t\t  ++processing_template_decl;"}, {"sha": "1f099ebf5c9b2e905fd630e650eb52a6a52a06a3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e432b319e1f52ea03345c691334c9ac80fcef85/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e432b319e1f52ea03345c691334c9ac80fcef85/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6e432b319e1f52ea03345c691334c9ac80fcef85", "patch": "@@ -1,3 +1,8 @@\n+2004-12-15  Kriang Lerdsuwanakij  <lerdsuwa@users.sourceforge.net>\n+\n+\tPR c++/18825\n+\t* g++.dg/template/friend32.C: New test.\n+\n 2004-12-15  Eric Botcazou  <ebotcazou@libertysurf.fr>\n \n \t* cpp/pragma-once-1.c: New test."}, {"sha": "4ce2ba3f2cca83bebadf015b64383b8bb17a7beb", "filename": "gcc/testsuite/g++.dg/template/friend32.C", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e432b319e1f52ea03345c691334c9ac80fcef85/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ffriend32.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e432b319e1f52ea03345c691334c9ac80fcef85/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ffriend32.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ffriend32.C?ref=6e432b319e1f52ea03345c691334c9ac80fcef85", "patch": "@@ -0,0 +1,21 @@\n+// { dg-do compile }\n+\n+// Origin: Steven Bosscher <steven@gcc.gnu.org>\n+//\t   Serge Belyshev <belyshev@lubercy.com>\n+\n+// PR c++/18825: ICE member as friend\n+\n+template<class T> class A\n+{\n+  void f ();\t\t\t// { dg-error \"private\" }\n+};\n+\n+template<class T> class B\n+{\n+  friend void A<T>::f ();\t// { dg-error \"this context\" }\n+};\n+\n+int f ()\n+{\n+  B<int> b;\t\t\t// { dg-error \"instantiated\" }\n+}"}]}