{"sha": "2c56429a6890e716331a7ceea6f7c9490e71d67f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmM1NjQyOWE2ODkwZTcxNjMzMWE3Y2VlYTZmN2M5NDkwZTcxZDY3Zg==", "commit": {"author": {"name": "Alexandre Petit-Bianco", "email": "apbianco@cygnus.com", "date": "1999-06-25T16:33:20Z"}, "committer": {"name": "Alexandre Petit-Bianco", "email": "apbianco@gcc.gnu.org", "date": "1999-06-25T16:33:20Z"}, "message": "[multiple changes]\n\nFri Jun 25 13:35:19 1999  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n\t* parse.y (resolve_package): Fixed bogus return statement.\n\t(patch_method_invocation): Resolve method invocation beginning with\n \ta package name qualifier.\nThu Jun 24 13:12:15 1999  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n\t* parse.y (java_complete_lhs): When doing cross referencing, don't\n \ttry to keep file location on a WFL expanded as a CALL_EXPR.\nWed Jun 23 14:37:15 1999  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n\t* parse.y (finish_method_declaration): Insert a RETURN_EXPR when\n \tcompiling to class file a void method with an empty method body.\n  \tAs a side effect, the bytecode backend will generate the\n \tappropriate `return' instruction.\nTue Jun 22 20:43:49 1999  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n\t* parse.y (lookup_package_type_and_set_next): New function prototype.\n\t(resolve_package): Search current and imported packages.\n\t(lookup_package_type_and_set_next): New function.\n\nFrom-SVN: r27773", "tree": {"sha": "d87eb84353da0f8316a361114e15325653d3f41c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d87eb84353da0f8316a361114e15325653d3f41c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2c56429a6890e716331a7ceea6f7c9490e71d67f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c56429a6890e716331a7ceea6f7c9490e71d67f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2c56429a6890e716331a7ceea6f7c9490e71d67f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c56429a6890e716331a7ceea6f7c9490e71d67f/comments", "author": null, "committer": null, "parents": [{"sha": "7dda3e3a786c0d23b52520a396c00c835d8a3f8c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7dda3e3a786c0d23b52520a396c00c835d8a3f8c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7dda3e3a786c0d23b52520a396c00c835d8a3f8c"}], "stats": {"total": 1088, "additions": 635, "deletions": 453}, "files": [{"sha": "8401611d9f87868cc88efa95857debc0c0e9a08a", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c56429a6890e716331a7ceea6f7c9490e71d67f/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c56429a6890e716331a7ceea6f7c9490e71d67f/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=2c56429a6890e716331a7ceea6f7c9490e71d67f", "patch": "@@ -1,10 +1,34 @@\n+Fri Jun 25 13:35:19 1999  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n+\n+\t* parse.y (resolve_package): Fixed bogus return statement.\n+\t(patch_method_invocation): Resolve method invocation beginning with\n+ \ta package name qualifier.\n+\n 1999-06-25  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* Make-lang.in (java.stage1): Depend on stage1-start.\n \t(java.stage2): Likewise for stage2-start.\n \t(java.stage3): Likewise for stage3-start.\n \t(java.stage4): Likewise for stage4-start.\n \n+Thu Jun 24 13:12:15 1999  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n+\n+\t* parse.y (java_complete_lhs): When doing cross referencing, don't\n+ \ttry to keep file location on a WFL expanded as a CALL_EXPR.\n+\n+Wed Jun 23 14:37:15 1999  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n+\n+\t* parse.y (finish_method_declaration): Insert a RETURN_EXPR when\n+ \tcompiling to class file a void method with an empty method body.\n+  \tAs a side effect, the bytecode backend will generate the\n+ \tappropriate `return' instruction.\n+\t\n+Tue Jun 22 20:43:49 1999  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n+\n+\t* parse.y (lookup_package_type_and_set_next): New function prototype.\n+\t(resolve_package): Search current and imported packages.\n+\t(lookup_package_type_and_set_next): New function.\n+\n 1999-06-22  Andrew Haley  <aph@cygnus.com>\n \n \t* verify.c (verify_jvm_instructions): Check for pending blocks"}, {"sha": "0ea1eb64b85f1518b54b81e5ffd99179e73f71f5", "filename": "gcc/java/parse.c", "status": "modified", "additions": 520, "deletions": 441, "changes": 961, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c56429a6890e716331a7ceea6f7c9490e71d67f/gcc%2Fjava%2Fparse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c56429a6890e716331a7ceea6f7c9490e71d67f/gcc%2Fjava%2Fparse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.c?ref=2c56429a6890e716331a7ceea6f7c9490e71d67f", "patch": "@@ -176,6 +176,7 @@ static int find_in_imports PROTO ((tree));\n static int check_pkg_class_access PROTO ((tree, tree));\n static tree resolve_package PROTO ((tree, tree *));\n static tree lookup_package_type PROTO ((char *, int));\n+static tree lookup_package_type_and_set_next PROTO ((char *, int, tree *));\n static tree resolve_class PROTO ((tree, tree, tree));\n static void declare_local_variables PROTO ((int, tree, tree));\n static void source_start_java_method PROTO ((tree));\n@@ -375,7 +376,7 @@ static tree java_lang_cloneable = NULL_TREE;\n static tree current_static_block = NULL_TREE;\n \n \n-#line 303 \"./parse.y\"\n+#line 304 \"./parse.y\"\n typedef union {\n   tree node;\n   int sub_token;\n@@ -385,7 +386,7 @@ typedef union {\n   } operator;\n   int value;\n } YYSTYPE;\n-#line 313 \"./parse.y\"\n+#line 314 \"./parse.y\"\n \n #include \"lex.c\"\n #ifndef YYDEBUG\n@@ -683,57 +684,57 @@ static const short yyrhs[] = {   123,\n \n #if YYDEBUG != 0\n static const short yyrline[] = { 0,\n-   457,   463,   465,   466,   467,   468,   469,   473,   475,   478,\n-   480,   481,   484,   486,   489,   493,   497,   501,   507,   509,\n-   511,   513,   518,   520,   523,   527,   532,   537,   539,   540,\n-   541,   542,   543,   544,   545,   548,   553,   559,   561,   564,\n-   567,   569,   573,   575,   578,   605,   607,   611,   624,   626,\n-   630,   637,   642,   644,   654,   659,   674,   678,   681,   684,\n-   687,   689,   691,   696,   700,   702,   704,   706,   710,   712,\n-   714,   721,   727,   732,   736,   745,   755,   757,   760,   762,\n-   763,   764,   768,   770,   772,   773,   775,   780,   783,   793,\n-   796,   798,   802,   805,   812,   818,   826,   828,   830,   832,\n-   834,   838,   840,   844,   851,   852,   856,   859,   861,   863,\n-   865,   867,   869,   871,   873,   880,   883,   885,   894,   896,\n-   900,   905,   910,   914,   919,   924,   926,   933,   935,   937,\n-   941,   944,   946,   950,   952,   953,   958,   964,   971,   979,\n-   986,   989,   992,   996,   999,  1003,  1012,  1014,  1016,  1020,\n-  1022,  1025,  1032,  1040,  1042,  1046,  1053,  1063,  1067,  1070,\n-  1073,  1076,  1079,  1082,  1085,  1088,  1090,  1094,  1100,  1105,\n-  1107,  1111,  1114,  1118,  1120,  1123,  1125,  1126,  1128,  1132,\n-  1136,  1142,  1147,  1150,  1152,  1156,  1162,  1166,  1171,  1180,\n-  1184,  1189,  1201,  1203,  1206,  1208,  1210,  1214,  1218,  1221,\n-  1225,  1227,  1228,  1229,  1230,  1231,  1235,  1237,  1238,  1239,\n-  1240,  1244,  1246,  1247,  1248,  1249,  1250,  1251,  1252,  1253,\n-  1254,  1255,  1258,  1263,  1274,  1277,  1281,  1288,  1298,  1304,\n-  1310,  1316,  1318,  1324,  1326,  1332,  1334,  1336,  1338,  1340,\n-  1344,  1346,  1347,  1348,  1349,  1350,  1351,  1354,  1360,  1362,\n-  1364,  1368,  1373,  1378,  1384,  1394,  1400,  1402,  1404,  1411,\n-  1414,  1416,  1418,  1422,  1424,  1427,  1431,  1433,  1436,  1443,\n-  1449,  1451,  1453,  1457,  1465,  1468,  1470,  1472,  1476,  1481,\n-  1490,  1495,  1498,  1505,  1507,  1509,  1513,  1516,  1525,  1532,\n-  1534,  1538,  1551,  1553,  1559,  1565,  1569,  1571,  1575,  1578,\n-  1580,  1584,  1587,  1589,  1591,  1595,  1598,  1600,  1602,  1606,\n-  1609,  1611,  1613,  1617,  1623,  1625,  1629,  1636,  1638,  1640,\n-  1642,  1646,  1654,  1657,  1659,  1664,  1668,  1670,  1677,  1685,\n-  1702,  1704,  1706,  1710,  1713,  1718,  1720,  1723,  1725,  1727,\n-  1729,  1730,  1731,  1732,  1736,  1738,  1740,  1745,  1747,  1749,\n-  1751,  1753,  1757,  1760,  1765,  1767,  1772,  1773,  1774,  1775,\n-  1776,  1778,  1780,  1782,  1784,  1786,  1790,  1792,  1795,  1801,\n-  1806,  1810,  1813,  1815,  1817,  1821,  1823,  1825,  1827,  1831,\n-  1834,  1838,  1844,  1846,  1854,  1881,  1883,  1887,  1892,  1899,\n-  1903,  1906,  1908,  1919,  1930,  1935,  1944,  1946,  1950,  1953,\n-  1955,  1960,  1965,  1970,  1977,  1979,  1980,  1981,  1984,  1989,\n-  1994,  1996,  1997,  1999,  2001,  2002,  2004,  2008,  2011,  2015,\n-  2018,  2022,  2024,  2026,  2028,  2029,  2031,  2035,  2044,  2046,\n-  2048,  2061,  2063,  2069,  2071,  2073,  2077,  2079,  2084,  2089,\n-  2094,  2096,  2098,  2102,  2104,  2109,  2114,  2116,  2120,  2122,\n-  2127,  2132,  2137,  2139,  2141,  2145,  2147,  2152,  2157,  2162,\n-  2167,  2169,  2171,  2173,  2175,  2177,  2181,  2183,  2188,  2193,\n-  2195,  2199,  2201,  2206,  2210,  2212,  2217,  2221,  2223,  2228,\n-  2232,  2234,  2239,  2243,  2245,  2250,  2254,  2256,  2261,  2267,\n-  2269,  2273,  2275,  2278,  2281,  2289,  2291,  2292,  2295,  2297,\n-  2300,  2304\n+   458,   464,   466,   467,   468,   469,   470,   474,   476,   479,\n+   481,   482,   485,   487,   490,   494,   498,   502,   508,   510,\n+   512,   514,   519,   521,   524,   528,   533,   538,   540,   541,\n+   542,   543,   544,   545,   546,   549,   554,   560,   562,   565,\n+   568,   570,   574,   576,   579,   606,   608,   612,   625,   627,\n+   631,   638,   643,   645,   655,   660,   675,   679,   682,   685,\n+   688,   690,   692,   697,   701,   703,   705,   707,   711,   713,\n+   715,   722,   728,   733,   737,   746,   756,   758,   761,   763,\n+   764,   765,   769,   771,   773,   774,   776,   781,   784,   794,\n+   797,   799,   803,   806,   813,   819,   827,   829,   831,   833,\n+   835,   839,   841,   845,   852,   853,   857,   860,   862,   864,\n+   866,   868,   870,   872,   874,   881,   884,   886,   895,   897,\n+   901,   906,   911,   915,   920,   925,   927,   934,   936,   938,\n+   942,   945,   947,   951,   953,   954,   959,   965,   972,   980,\n+   987,   990,   993,   997,  1000,  1004,  1013,  1015,  1017,  1021,\n+  1023,  1026,  1033,  1041,  1043,  1047,  1054,  1064,  1068,  1071,\n+  1074,  1077,  1080,  1083,  1086,  1089,  1091,  1095,  1101,  1106,\n+  1108,  1112,  1115,  1119,  1121,  1124,  1126,  1127,  1129,  1133,\n+  1137,  1143,  1148,  1151,  1153,  1157,  1163,  1167,  1172,  1181,\n+  1185,  1190,  1202,  1204,  1207,  1209,  1211,  1215,  1219,  1222,\n+  1226,  1228,  1229,  1230,  1231,  1232,  1236,  1238,  1239,  1240,\n+  1241,  1245,  1247,  1248,  1249,  1250,  1251,  1252,  1253,  1254,\n+  1255,  1256,  1259,  1264,  1275,  1278,  1282,  1289,  1299,  1305,\n+  1311,  1317,  1319,  1325,  1327,  1333,  1335,  1337,  1339,  1341,\n+  1345,  1347,  1348,  1349,  1350,  1351,  1352,  1355,  1361,  1363,\n+  1365,  1369,  1374,  1379,  1385,  1395,  1401,  1403,  1405,  1412,\n+  1415,  1417,  1419,  1423,  1425,  1428,  1432,  1434,  1437,  1444,\n+  1450,  1452,  1454,  1458,  1466,  1469,  1471,  1473,  1477,  1482,\n+  1491,  1496,  1499,  1506,  1508,  1510,  1514,  1517,  1526,  1533,\n+  1535,  1539,  1552,  1554,  1560,  1566,  1570,  1572,  1576,  1579,\n+  1581,  1585,  1588,  1590,  1592,  1596,  1599,  1601,  1603,  1607,\n+  1610,  1612,  1614,  1618,  1624,  1626,  1630,  1637,  1639,  1641,\n+  1643,  1647,  1655,  1658,  1660,  1665,  1669,  1671,  1678,  1686,\n+  1703,  1705,  1707,  1711,  1714,  1719,  1721,  1724,  1726,  1728,\n+  1730,  1731,  1732,  1733,  1737,  1739,  1741,  1746,  1748,  1750,\n+  1752,  1754,  1758,  1761,  1766,  1768,  1773,  1774,  1775,  1776,\n+  1777,  1779,  1781,  1783,  1785,  1787,  1791,  1793,  1796,  1802,\n+  1807,  1811,  1814,  1816,  1818,  1822,  1824,  1826,  1828,  1832,\n+  1835,  1839,  1845,  1847,  1855,  1882,  1884,  1888,  1893,  1900,\n+  1904,  1907,  1909,  1920,  1931,  1936,  1945,  1947,  1951,  1954,\n+  1956,  1961,  1966,  1971,  1978,  1980,  1981,  1982,  1985,  1990,\n+  1995,  1997,  1998,  2000,  2002,  2003,  2005,  2009,  2012,  2016,\n+  2019,  2023,  2025,  2027,  2029,  2030,  2032,  2036,  2045,  2047,\n+  2049,  2062,  2064,  2070,  2072,  2074,  2078,  2080,  2085,  2090,\n+  2095,  2097,  2099,  2103,  2105,  2110,  2115,  2117,  2121,  2123,\n+  2128,  2133,  2138,  2140,  2142,  2146,  2148,  2153,  2158,  2163,\n+  2168,  2170,  2172,  2174,  2176,  2178,  2182,  2184,  2189,  2194,\n+  2196,  2200,  2202,  2207,  2211,  2213,  2218,  2222,  2224,  2229,\n+  2233,  2235,  2240,  2244,  2246,  2251,  2255,  2257,  2262,  2268,\n+  2270,  2274,  2276,  2279,  2282,  2290,  2292,  2293,  2296,  2298,\n+  2301,  2305\n };\n #endif\n \n@@ -2211,7 +2212,7 @@ static const short yycheck[] = {     3,\n #define YYPURE 1\n \n /* -*-C-*-  Note some compilers choke on comments on `#line' lines.  */\n-#line 3 \"/x1/java/posix/share/bison.simple\"\n+#line 3 \"/usr/cygnus/gnupro-98r1/share/bison.simple\"\n \n /* Skeleton output parser for bison,\n    Copyright (C) 1984, 1989, 1990 Free Software Foundation, Inc.\n@@ -2404,7 +2405,7 @@ __yy_memcpy (char *to, char *from, int count)\n #endif\n #endif\n \f\n-#line 196 \"/x1/java/posix/share/bison.simple\"\n+#line 196 \"/usr/cygnus/gnupro-98r1/share/bison.simple\"\n \n /* The user can define YYPARSE_PARAM as the name of an argument to be passed\n    into yyparse.  The argument should have type void *.\n@@ -2709,66 +2710,66 @@ yyparse(YYPARSE_PARAM_ARG)\n   switch (yyn) {\n \n case 1:\n-#line 459 \"./parse.y\"\n+#line 460 \"./parse.y\"\n {;\n     break;}\n case 18:\n-#line 503 \"./parse.y\"\n+#line 504 \"./parse.y\"\n { \n \t\t  yyval.node = build_java_array_type (yyvsp[-2].node, -1);\n \t\t  CLASS_LOADED_P (yyval.node) = 1;\n \t\t;\n     break;}\n case 19:\n-#line 508 \"./parse.y\"\n+#line 509 \"./parse.y\"\n { yyval.node = build_unresolved_array_type (yyvsp[-2].node); ;\n     break;}\n case 20:\n-#line 510 \"./parse.y\"\n+#line 511 \"./parse.y\"\n { yyval.node = build_unresolved_array_type (yyvsp[-2].node); ;\n     break;}\n case 21:\n-#line 512 \"./parse.y\"\n+#line 513 \"./parse.y\"\n {RULE (\"']' expected\"); RECOVER;;\n     break;}\n case 22:\n-#line 514 \"./parse.y\"\n+#line 515 \"./parse.y\"\n {RULE (\"']' expected\"); RECOVER;;\n     break;}\n case 26:\n-#line 529 \"./parse.y\"\n+#line 530 \"./parse.y\"\n { yyval.node = make_qualified_name (yyvsp[-2].node, yyvsp[0].node, yyvsp[-1].operator.location); ;\n     break;}\n case 28:\n-#line 538 \"./parse.y\"\n+#line 539 \"./parse.y\"\n {yyval.node = NULL;;\n     break;}\n case 36:\n-#line 550 \"./parse.y\"\n+#line 551 \"./parse.y\"\n {\n \t\t  yyval.node = NULL;\n \t\t;\n     break;}\n case 37:\n-#line 554 \"./parse.y\"\n+#line 555 \"./parse.y\"\n {\n \t\t  yyval.node = NULL;\n \t\t;\n     break;}\n case 40:\n-#line 566 \"./parse.y\"\n+#line 567 \"./parse.y\"\n { ctxp->package = EXPR_WFL_NODE (yyvsp[-1].node); ;\n     break;}\n case 41:\n-#line 568 \"./parse.y\"\n+#line 569 \"./parse.y\"\n {yyerror (\"Missing name\"); RECOVER;;\n     break;}\n case 42:\n-#line 570 \"./parse.y\"\n+#line 571 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 45:\n-#line 580 \"./parse.y\"\n+#line 581 \"./parse.y\"\n {\n \t\t  tree name = EXPR_WFL_NODE (yyvsp[-1].node), node, last_name;\n \t\t  int   i = IDENTIFIER_LENGTH (name)-1;\n@@ -2796,15 +2797,15 @@ case 45:\n \t\t;\n     break;}\n case 46:\n-#line 606 \"./parse.y\"\n+#line 607 \"./parse.y\"\n {yyerror (\"Missing name\"); RECOVER;;\n     break;}\n case 47:\n-#line 608 \"./parse.y\"\n+#line 609 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 48:\n-#line 613 \"./parse.y\"\n+#line 614 \"./parse.y\"\n {\n \t\t  tree name = EXPR_WFL_NODE (yyvsp[-3].node);\n \t\t  /* Don't import java.lang.* twice. */\n@@ -2818,47 +2819,47 @@ case 48:\n \t\t;\n     break;}\n case 49:\n-#line 625 \"./parse.y\"\n+#line 626 \"./parse.y\"\n {yyerror (\"'*' expected\"); RECOVER;;\n     break;}\n case 50:\n-#line 627 \"./parse.y\"\n+#line 628 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 51:\n-#line 632 \"./parse.y\"\n+#line 633 \"./parse.y\"\n {\n \t\t  maybe_generate_finit ();\n \t\t  maybe_generate_clinit ();\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 52:\n-#line 638 \"./parse.y\"\n+#line 639 \"./parse.y\"\n {\n \t\t  maybe_generate_clinit ();\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 53:\n-#line 643 \"./parse.y\"\n+#line 644 \"./parse.y\"\n { yyval.node = NULL; ;\n     break;}\n case 54:\n-#line 645 \"./parse.y\"\n+#line 646 \"./parse.y\"\n {\n \t\t  YYERROR_NOW;\n \t\t  yyerror (\"Class or interface declaration expected\");\n \t\t;\n     break;}\n case 55:\n-#line 656 \"./parse.y\"\n+#line 657 \"./parse.y\"\n {\n \t\t  yyval.value = (1 << yyvsp[0].value);\n \t\t;\n     break;}\n case 56:\n-#line 660 \"./parse.y\"\n+#line 661 \"./parse.y\"\n {\n \t\t  int acc = (1 << yyvsp[0].value);\n \t\t  if (yyval.value & acc)\n@@ -2872,95 +2873,95 @@ case 56:\n \t\t;\n     break;}\n case 57:\n-#line 676 \"./parse.y\"\n+#line 677 \"./parse.y\"\n { create_class (yyvsp[-4].value, yyvsp[-2].node, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 58:\n-#line 678 \"./parse.y\"\n+#line 679 \"./parse.y\"\n { \n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 59:\n-#line 682 \"./parse.y\"\n+#line 683 \"./parse.y\"\n { create_class (0, yyvsp[-2].node, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 60:\n-#line 684 \"./parse.y\"\n+#line 685 \"./parse.y\"\n { \t\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 61:\n-#line 688 \"./parse.y\"\n+#line 689 \"./parse.y\"\n {yyerror (\"Missing class name\"); RECOVER;;\n     break;}\n case 62:\n-#line 690 \"./parse.y\"\n+#line 691 \"./parse.y\"\n {yyerror (\"Missing class name\"); RECOVER;;\n     break;}\n case 63:\n-#line 692 \"./parse.y\"\n+#line 693 \"./parse.y\"\n {\n \t\t  if (!ctxp->class_err) yyerror (\"'{' expected\"); \n \t\t  DRECOVER(class1);\n \t\t;\n     break;}\n case 64:\n-#line 697 \"./parse.y\"\n+#line 698 \"./parse.y\"\n {if (!ctxp->class_err) yyerror (\"'{' expected\"); RECOVER;;\n     break;}\n case 65:\n-#line 701 \"./parse.y\"\n+#line 702 \"./parse.y\"\n { yyval.node = NULL; ;\n     break;}\n case 66:\n-#line 703 \"./parse.y\"\n+#line 704 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 67:\n-#line 705 \"./parse.y\"\n+#line 706 \"./parse.y\"\n {yyerror (\"'{' expected\"); ctxp->class_err=1;;\n     break;}\n case 68:\n-#line 707 \"./parse.y\"\n+#line 708 \"./parse.y\"\n {yyerror (\"Missing super class name\"); ctxp->class_err=1;;\n     break;}\n case 69:\n-#line 711 \"./parse.y\"\n+#line 712 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 70:\n-#line 713 \"./parse.y\"\n+#line 714 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 71:\n-#line 715 \"./parse.y\"\n+#line 716 \"./parse.y\"\n {\n \t\t  ctxp->class_err=1;\n \t\t  yyerror (\"Missing interface name\"); \n \t\t;\n     break;}\n case 72:\n-#line 723 \"./parse.y\"\n+#line 724 \"./parse.y\"\n { \n \t\t  ctxp->interface_number = 1;\n \t\t  yyval.node = build_tree_list (yyvsp[0].node, NULL_TREE);\n \t\t;\n     break;}\n case 73:\n-#line 728 \"./parse.y\"\n+#line 729 \"./parse.y\"\n { \n \t\t  ctxp->interface_number++;\n \t\t  yyval.node = chainon (yyvsp[-2].node, build_tree_list (yyvsp[0].node, NULL_TREE));\n \t\t;\n     break;}\n case 74:\n-#line 733 \"./parse.y\"\n+#line 734 \"./parse.y\"\n {yyerror (\"Missing interface name\"); RECOVER;;\n     break;}\n case 75:\n-#line 738 \"./parse.y\"\n+#line 739 \"./parse.y\"\n { \n \t\t  /* Store the location of the `}' when doing xrefs */\n \t\t  if (flag_emit_xref)\n@@ -2970,7 +2971,7 @@ case 75:\n \t\t;\n     break;}\n case 76:\n-#line 746 \"./parse.y\"\n+#line 747 \"./parse.y\"\n { \n \t\t  /* Store the location of the `}' when doing xrefs */\n \t\t  if (flag_emit_xref)\n@@ -2980,27 +2981,27 @@ case 76:\n \t\t;\n     break;}\n case 82:\n-#line 765 \"./parse.y\"\n+#line 766 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"instance initializer\"); ;\n     break;}\n case 84:\n-#line 771 \"./parse.y\"\n+#line 772 \"./parse.y\"\n { yyval.node = yyvsp[-1].node; ;\n     break;}\n case 86:\n-#line 774 \"./parse.y\"\n+#line 775 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"inner classe declaration\"); ;\n     break;}\n case 87:\n-#line 776 \"./parse.y\"\n+#line 777 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"inner interface declaration\"); ;\n     break;}\n case 88:\n-#line 782 \"./parse.y\"\n+#line 783 \"./parse.y\"\n { register_fields (0, yyvsp[-2].node, yyvsp[-1].node); ;\n     break;}\n case 89:\n-#line 784 \"./parse.y\"\n+#line 785 \"./parse.y\"\n {\n \t\t  check_modifiers \n \t\t    (\"Illegal modifier `%s' for field declaration\",\n@@ -3010,19 +3011,19 @@ case 89:\n \t\t;\n     break;}\n case 91:\n-#line 797 \"./parse.y\"\n+#line 798 \"./parse.y\"\n { yyval.node = chainon (yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 92:\n-#line 799 \"./parse.y\"\n+#line 800 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 93:\n-#line 804 \"./parse.y\"\n+#line 805 \"./parse.y\"\n { yyval.node = build_tree_list (yyvsp[0].node, NULL_TREE); ;\n     break;}\n case 94:\n-#line 806 \"./parse.y\"\n+#line 807 \"./parse.y\"\n { \n \t\t  if (java_error_count)\n \t\t    yyvsp[0].node = NULL_TREE;\n@@ -3031,101 +3032,101 @@ case 94:\n \t\t;\n     break;}\n case 95:\n-#line 813 \"./parse.y\"\n+#line 814 \"./parse.y\"\n {\n \t\t  yyerror (\"Missing variable initializer\");\n \t\t  yyval.node = build_tree_list (yyvsp[-2].node, NULL_TREE);\n \t\t  RECOVER;\n \t\t;\n     break;}\n case 96:\n-#line 819 \"./parse.y\"\n+#line 820 \"./parse.y\"\n {\n \t\t  yyerror (\"';' expected\");\n \t\t  yyval.node = build_tree_list (yyvsp[-3].node, NULL_TREE);\n \t\t  RECOVER;\n \t\t;\n     break;}\n case 98:\n-#line 829 \"./parse.y\"\n+#line 830 \"./parse.y\"\n { yyval.node = build_unresolved_array_type (yyvsp[-2].node); ;\n     break;}\n case 99:\n-#line 831 \"./parse.y\"\n+#line 832 \"./parse.y\"\n {yyerror (\"Invalid declaration\"); DRECOVER(vdi);;\n     break;}\n case 100:\n-#line 833 \"./parse.y\"\n+#line 834 \"./parse.y\"\n {yyerror (\"']' expected\"); DRECOVER(vdi);;\n     break;}\n case 101:\n-#line 835 \"./parse.y\"\n+#line 836 \"./parse.y\"\n {yyerror (\"Unbalanced ']'\"); DRECOVER(vdi);;\n     break;}\n case 104:\n-#line 846 \"./parse.y\"\n+#line 847 \"./parse.y\"\n {\n \t\t  current_function_decl = yyvsp[0].node;\n \t\t  source_start_java_method (current_function_decl);\n \t\t;\n     break;}\n case 105:\n-#line 851 \"./parse.y\"\n+#line 852 \"./parse.y\"\n { finish_method_declaration (yyvsp[0].node); ;\n     break;}\n case 106:\n-#line 853 \"./parse.y\"\n+#line 854 \"./parse.y\"\n {YYNOT_TWICE yyerror (\"'{' expected\"); RECOVER;;\n     break;}\n case 107:\n-#line 858 \"./parse.y\"\n+#line 859 \"./parse.y\"\n { yyval.node = method_header (0, yyvsp[-2].node, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 108:\n-#line 860 \"./parse.y\"\n+#line 861 \"./parse.y\"\n { yyval.node = method_header (0, void_type_node, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 109:\n-#line 862 \"./parse.y\"\n+#line 863 \"./parse.y\"\n { yyval.node = method_header (yyvsp[-3].value, yyvsp[-2].node, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 110:\n-#line 864 \"./parse.y\"\n+#line 865 \"./parse.y\"\n { yyval.node = method_header (yyvsp[-3].value, void_type_node, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 111:\n-#line 866 \"./parse.y\"\n+#line 867 \"./parse.y\"\n {RECOVER;;\n     break;}\n case 112:\n-#line 868 \"./parse.y\"\n+#line 869 \"./parse.y\"\n {RECOVER;;\n     break;}\n case 113:\n-#line 870 \"./parse.y\"\n+#line 871 \"./parse.y\"\n {yyerror (\"Identifier expected\"); RECOVER;;\n     break;}\n case 114:\n-#line 872 \"./parse.y\"\n+#line 873 \"./parse.y\"\n {yyerror (\"Identifier expected\"); RECOVER;;\n     break;}\n case 115:\n-#line 874 \"./parse.y\"\n+#line 875 \"./parse.y\"\n {\n \t\t  yyerror (\"Invalid method declaration, return type required\");\n \t\t  RECOVER;\n \t\t;\n     break;}\n case 116:\n-#line 882 \"./parse.y\"\n+#line 883 \"./parse.y\"\n { yyval.node = method_declarator (yyvsp[-2].node, NULL_TREE); ;\n     break;}\n case 117:\n-#line 884 \"./parse.y\"\n+#line 885 \"./parse.y\"\n { yyval.node = method_declarator (yyvsp[-3].node, yyvsp[-1].node); ;\n     break;}\n case 118:\n-#line 886 \"./parse.y\"\n+#line 887 \"./parse.y\"\n {\n \t\t  EXPR_WFL_LINECOL (wfl_operator) = yyvsp[-1].operator.location;\n \t\t  TREE_PURPOSE (yyvsp[-2].node) = \n@@ -3136,316 +3137,316 @@ case 118:\n \t\t;\n     break;}\n case 119:\n-#line 895 \"./parse.y\"\n+#line 896 \"./parse.y\"\n {yyerror (\"')' expected\"); DRECOVER(method_declarator);;\n     break;}\n case 120:\n-#line 897 \"./parse.y\"\n+#line 898 \"./parse.y\"\n {yyerror (\"']' expected\"); RECOVER;;\n     break;}\n case 121:\n-#line 902 \"./parse.y\"\n+#line 903 \"./parse.y\"\n {\n \t\t  ctxp->formal_parameter_number = 1;\n \t\t;\n     break;}\n case 122:\n-#line 906 \"./parse.y\"\n+#line 907 \"./parse.y\"\n {\n \t\t  ctxp->formal_parameter_number += 1;\n \t\t  yyval.node = chainon (yyvsp[-2].node, yyvsp[0].node);\n \t\t;\n     break;}\n case 123:\n-#line 911 \"./parse.y\"\n+#line 912 \"./parse.y\"\n {yyerror (\"Missing formal parameter term\"); RECOVER;;\n     break;}\n case 124:\n-#line 916 \"./parse.y\"\n+#line 917 \"./parse.y\"\n {\n \t\t  yyval.node = build_tree_list (yyvsp[0].node, yyvsp[-1].node);\n \t\t;\n     break;}\n case 125:\n-#line 920 \"./parse.y\"\n+#line 921 \"./parse.y\"\n { \n \t\t  parse_jdk1_1_error (\"final parameters\");\n \t\t  yyval.node = build_tree_list (yyvsp[0].node, yyvsp[-1].node);\n \t\t;\n     break;}\n case 126:\n-#line 925 \"./parse.y\"\n+#line 926 \"./parse.y\"\n {yyerror (\"Missing identifier\"); RECOVER;;\n     break;}\n case 127:\n-#line 927 \"./parse.y\"\n+#line 928 \"./parse.y\"\n {\n \t\t  SOURCE_FRONTEND_DEBUG ((\"Modifiers: %d\", yyvsp[-2].value));\n \t\t  yyerror (\"Missing identifier\"); RECOVER;\n \t\t;\n     break;}\n case 128:\n-#line 934 \"./parse.y\"\n+#line 935 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 129:\n-#line 936 \"./parse.y\"\n+#line 937 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 130:\n-#line 938 \"./parse.y\"\n+#line 939 \"./parse.y\"\n {yyerror (\"Missing class type term\"); RECOVER;;\n     break;}\n case 131:\n-#line 943 \"./parse.y\"\n+#line 944 \"./parse.y\"\n { yyval.node = build_tree_list (yyvsp[0].node, yyvsp[0].node); ;\n     break;}\n case 132:\n-#line 945 \"./parse.y\"\n+#line 946 \"./parse.y\"\n { yyval.node = tree_cons (yyvsp[0].node, yyvsp[0].node, yyvsp[-2].node); ;\n     break;}\n case 133:\n-#line 947 \"./parse.y\"\n+#line 948 \"./parse.y\"\n {yyerror (\"Missing class type term\"); RECOVER;;\n     break;}\n case 136:\n-#line 954 \"./parse.y\"\n+#line 955 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 137:\n-#line 960 \"./parse.y\"\n+#line 961 \"./parse.y\"\n {\n \t\t  TREE_CHAIN (yyvsp[0].node) = ctxp->static_initialized;\n \t\t  ctxp->static_initialized = yyvsp[0].node;\n \t\t;\n     break;}\n case 138:\n-#line 965 \"./parse.y\"\n+#line 966 \"./parse.y\"\n {\n \t\t  TREE_CHAIN (yyvsp[-1].node) = ctxp->static_initialized;\n \t\t  ctxp->static_initialized = yyvsp[-1].node;\n \t\t;\n     break;}\n case 139:\n-#line 973 \"./parse.y\"\n+#line 974 \"./parse.y\"\n {\n \t\t  SOURCE_FRONTEND_DEBUG ((\"Modifiers: %d\", yyvsp[0].value));\n \t\t;\n     break;}\n case 140:\n-#line 981 \"./parse.y\"\n+#line 982 \"./parse.y\"\n {\n \t\t  current_function_decl = yyvsp[0].node;\n \t\t  source_start_java_method (current_function_decl);\n \t\t;\n     break;}\n case 141:\n-#line 986 \"./parse.y\"\n+#line 987 \"./parse.y\"\n { finish_method_declaration (yyvsp[0].node); ;\n     break;}\n case 142:\n-#line 991 \"./parse.y\"\n+#line 992 \"./parse.y\"\n { yyval.node = method_header (0, NULL_TREE, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 143:\n-#line 993 \"./parse.y\"\n+#line 994 \"./parse.y\"\n { yyval.node = method_header (yyvsp[-2].value, NULL_TREE, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 144:\n-#line 998 \"./parse.y\"\n+#line 999 \"./parse.y\"\n { yyval.node = method_declarator (yyvsp[-2].node, NULL_TREE); ;\n     break;}\n case 145:\n-#line 1000 \"./parse.y\"\n+#line 1001 \"./parse.y\"\n { yyval.node = method_declarator (yyvsp[-3].node, yyvsp[-1].node); ;\n     break;}\n case 146:\n-#line 1008 \"./parse.y\"\n+#line 1009 \"./parse.y\"\n { \n \t\t  BLOCK_EXPR_BODY (yyvsp[0].node) = empty_stmt_node;\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 147:\n-#line 1013 \"./parse.y\"\n+#line 1014 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 148:\n-#line 1015 \"./parse.y\"\n+#line 1016 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 149:\n-#line 1017 \"./parse.y\"\n+#line 1018 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 152:\n-#line 1027 \"./parse.y\"\n+#line 1028 \"./parse.y\"\n { \n \t\t  yyval.node = build_method_invocation (yyvsp[-3].node, NULL_TREE); \n \t\t  yyval.node = build_debugable_stmt (EXPR_WFL_LINECOL (yyvsp[-3].node), yyval.node);\n \t\t  yyval.node = java_method_add_stmt (current_function_decl, yyval.node);\n \t\t;\n     break;}\n case 153:\n-#line 1033 \"./parse.y\"\n+#line 1034 \"./parse.y\"\n { \n \t\t  yyval.node = build_method_invocation (yyvsp[-4].node, yyvsp[-2].node); \n \t\t  yyval.node = build_debugable_stmt (EXPR_WFL_LINECOL (yyvsp[-4].node), yyval.node);\n \t\t  yyval.node = java_method_add_stmt (current_function_decl, yyval.node);\n \t\t;\n     break;}\n case 154:\n-#line 1041 \"./parse.y\"\n+#line 1042 \"./parse.y\"\n {yyval.node = parse_jdk1_1_error (\"explicit constructor invocation\"); ;\n     break;}\n case 155:\n-#line 1043 \"./parse.y\"\n+#line 1044 \"./parse.y\"\n {yyval.node = parse_jdk1_1_error (\"explicit constructor invocation\"); ;\n     break;}\n case 156:\n-#line 1048 \"./parse.y\"\n+#line 1049 \"./parse.y\"\n {\n \t\t  tree wfl = build_wfl_node (this_identifier_node);\n \t\t  EXPR_WFL_LINECOL (wfl) = yyvsp[0].operator.location;\n \t\t  yyval.node = wfl;\n \t\t;\n     break;}\n case 157:\n-#line 1054 \"./parse.y\"\n+#line 1055 \"./parse.y\"\n {\n \t\t  tree wfl = build_wfl_node (super_identifier_node);\n \t\t  EXPR_WFL_LINECOL (wfl) = yyvsp[0].operator.location;\n \t\t  yyval.node = wfl;\n \t\t;\n     break;}\n case 158:\n-#line 1065 \"./parse.y\"\n+#line 1066 \"./parse.y\"\n { create_interface (0, yyvsp[0].node, NULL_TREE); ;\n     break;}\n case 159:\n-#line 1067 \"./parse.y\"\n+#line 1068 \"./parse.y\"\n {\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 160:\n-#line 1071 \"./parse.y\"\n+#line 1072 \"./parse.y\"\n { create_interface (yyvsp[-2].value, yyvsp[0].node, NULL_TREE); ;\n     break;}\n case 161:\n-#line 1073 \"./parse.y\"\n+#line 1074 \"./parse.y\"\n {\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 162:\n-#line 1077 \"./parse.y\"\n+#line 1078 \"./parse.y\"\n { create_interface (0, yyvsp[-1].node, yyvsp[0].node);\t;\n     break;}\n case 163:\n-#line 1079 \"./parse.y\"\n+#line 1080 \"./parse.y\"\n {\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 164:\n-#line 1083 \"./parse.y\"\n+#line 1084 \"./parse.y\"\n { create_interface (yyvsp[-3].value, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 165:\n-#line 1085 \"./parse.y\"\n+#line 1086 \"./parse.y\"\n {\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 166:\n-#line 1089 \"./parse.y\"\n+#line 1090 \"./parse.y\"\n {yyerror (\"'{' expected\"); RECOVER;;\n     break;}\n case 167:\n-#line 1091 \"./parse.y\"\n+#line 1092 \"./parse.y\"\n {yyerror (\"'{' expected\"); RECOVER;;\n     break;}\n case 168:\n-#line 1096 \"./parse.y\"\n+#line 1097 \"./parse.y\"\n { \n \t\t  ctxp->interface_number = 1;\n \t\t  yyval.node = build_tree_list (yyvsp[0].node, NULL_TREE);\n \t\t;\n     break;}\n case 169:\n-#line 1101 \"./parse.y\"\n+#line 1102 \"./parse.y\"\n { \n \t\t  ctxp->interface_number++;\n \t\t  yyval.node = chainon (yyvsp[-2].node, build_tree_list (yyvsp[0].node, NULL_TREE));\n \t\t;\n     break;}\n case 170:\n-#line 1106 \"./parse.y\"\n+#line 1107 \"./parse.y\"\n {yyerror (\"Invalid interface type\"); RECOVER;;\n     break;}\n case 171:\n-#line 1108 \"./parse.y\"\n+#line 1109 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 172:\n-#line 1113 \"./parse.y\"\n+#line 1114 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 173:\n-#line 1115 \"./parse.y\"\n+#line 1116 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 178:\n-#line 1127 \"./parse.y\"\n+#line 1128 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"inner class declaration\"); ;\n     break;}\n case 179:\n-#line 1129 \"./parse.y\"\n+#line 1130 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"inner interface declaration\"); ;\n     break;}\n case 181:\n-#line 1138 \"./parse.y\"\n+#line 1139 \"./parse.y\"\n { \n \t\t  check_abstract_method_header (yyvsp[-1].node);\n \t\t  current_function_decl = NULL_TREE; /* FIXME ? */\n \t\t;\n     break;}\n case 182:\n-#line 1143 \"./parse.y\"\n+#line 1144 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 183:\n-#line 1149 \"./parse.y\"\n+#line 1150 \"./parse.y\"\n { yyval.node = build_new_array_init (yyvsp[-1].operator.location, NULL_TREE); ;\n     break;}\n case 184:\n-#line 1151 \"./parse.y\"\n+#line 1152 \"./parse.y\"\n { yyval.node = build_new_array_init (yyvsp[-2].operator.location, yyvsp[-1].node); ;\n     break;}\n case 185:\n-#line 1153 \"./parse.y\"\n+#line 1154 \"./parse.y\"\n { yyval.node = build_new_array_init (yyvsp[-3].operator.location, yyvsp[-2].node); ;\n     break;}\n case 186:\n-#line 1158 \"./parse.y\"\n+#line 1159 \"./parse.y\"\n { \n \t\t  yyval.node = tree_cons (maybe_build_array_element_wfl (yyvsp[0].node), \n \t\t\t\t  yyvsp[0].node, NULL_TREE);\n \t\t;\n     break;}\n case 187:\n-#line 1163 \"./parse.y\"\n+#line 1164 \"./parse.y\"\n {\n \t\t  yyval.node = tree_cons (maybe_build_array_element_wfl (yyvsp[0].node), yyvsp[0].node, yyvsp[-2].node);\n \t\t;\n     break;}\n case 188:\n-#line 1167 \"./parse.y\"\n+#line 1168 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 189:\n-#line 1173 \"./parse.y\"\n+#line 1174 \"./parse.y\"\n { \n \t\t  /* Store the location of the `}' when doing xrefs */\n \t\t  if (current_function_decl && flag_emit_xref)\n@@ -3455,15 +3456,15 @@ case 189:\n \t\t;\n     break;}\n case 190:\n-#line 1181 \"./parse.y\"\n+#line 1182 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 191:\n-#line 1186 \"./parse.y\"\n+#line 1187 \"./parse.y\"\n { enter_block (); ;\n     break;}\n case 192:\n-#line 1191 \"./parse.y\"\n+#line 1192 \"./parse.y\"\n { \n \t\t  maybe_absorb_scoping_blocks ();\n \t\t  /* Store the location of the `}' when doing xrefs */\n@@ -3474,35 +3475,35 @@ case 192:\n \t\t;\n     break;}\n case 196:\n-#line 1209 \"./parse.y\"\n+#line 1210 \"./parse.y\"\n { java_method_add_stmt (current_function_decl, yyvsp[0].node); ;\n     break;}\n case 197:\n-#line 1211 \"./parse.y\"\n+#line 1212 \"./parse.y\"\n { parse_jdk1_1_error (\"inner class declaration\"); ;\n     break;}\n case 199:\n-#line 1220 \"./parse.y\"\n+#line 1221 \"./parse.y\"\n { declare_local_variables (0, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 200:\n-#line 1222 \"./parse.y\"\n+#line 1223 \"./parse.y\"\n { declare_local_variables (yyvsp[-2].value, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 206:\n-#line 1232 \"./parse.y\"\n+#line 1233 \"./parse.y\"\n { yyval.node = exit_block (); ;\n     break;}\n case 211:\n-#line 1241 \"./parse.y\"\n+#line 1242 \"./parse.y\"\n { yyval.node = exit_block (); ;\n     break;}\n case 223:\n-#line 1260 \"./parse.y\"\n+#line 1261 \"./parse.y\"\n { yyval.node = empty_stmt_node; ;\n     break;}\n case 224:\n-#line 1265 \"./parse.y\"\n+#line 1266 \"./parse.y\"\n {\n \t\t  yyval.node = build_labeled_block (EXPR_WFL_LINECOL (yyvsp[-1].node), \n \t\t\t\t\t    EXPR_WFL_NODE (yyvsp[-1].node));\n@@ -3512,19 +3513,19 @@ case 224:\n \t\t;\n     break;}\n case 225:\n-#line 1276 \"./parse.y\"\n+#line 1277 \"./parse.y\"\n { yyval.node = finish_labeled_statement (yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 226:\n-#line 1278 \"./parse.y\"\n+#line 1279 \"./parse.y\"\n {yyerror (\"':' expected\"); RECOVER;;\n     break;}\n case 227:\n-#line 1283 \"./parse.y\"\n+#line 1284 \"./parse.y\"\n { yyval.node = finish_labeled_statement (yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 228:\n-#line 1290 \"./parse.y\"\n+#line 1291 \"./parse.y\"\n {\n \t\t  /* We have a statement. Generate a WFL around it so\n \t\t     we can debug it */\n@@ -3535,108 +3536,108 @@ case 228:\n \t\t;\n     break;}\n case 229:\n-#line 1299 \"./parse.y\"\n+#line 1300 \"./parse.y\"\n {\n \t\t  if (ctxp->prevent_ese != lineno)\n \t\t    yyerror (\"Invalid expression statement\");\n \t\t  DRECOVER (expr_stmt);\n \t\t;\n     break;}\n case 230:\n-#line 1305 \"./parse.y\"\n+#line 1306 \"./parse.y\"\n {\n \t\t  if (ctxp->prevent_ese != lineno)\n \t\t    yyerror (\"Invalid expression statement\");\n \t\t  DRECOVER (expr_stmt);\n \t\t;\n     break;}\n case 231:\n-#line 1311 \"./parse.y\"\n+#line 1312 \"./parse.y\"\n {\n \t\t  if (ctxp->prevent_ese != lineno)\n \t\t    yyerror (\"Invalid expression statement\");\n \t\t  DRECOVER (expr_stmt);\n \t\t;\n     break;}\n case 232:\n-#line 1317 \"./parse.y\"\n+#line 1318 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 233:\n-#line 1319 \"./parse.y\"\n+#line 1320 \"./parse.y\"\n {\n \t\t  yyerror (\"Constructor invocation must be first \"\n \t\t\t   \"thing in a constructor\"); \n \t\t  RECOVER;\n \t\t;\n     break;}\n case 234:\n-#line 1325 \"./parse.y\"\n+#line 1326 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 235:\n-#line 1327 \"./parse.y\"\n+#line 1328 \"./parse.y\"\n {\n \t\t  yyerror (\"Constructor invocation must be first \"\n \t\t\t   \"thing in a constructor\"); \n \t\t  RECOVER;\n \t\t;\n     break;}\n case 236:\n-#line 1333 \"./parse.y\"\n+#line 1334 \"./parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 237:\n-#line 1335 \"./parse.y\"\n+#line 1336 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 238:\n-#line 1337 \"./parse.y\"\n+#line 1338 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 239:\n-#line 1339 \"./parse.y\"\n+#line 1340 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 240:\n-#line 1341 \"./parse.y\"\n+#line 1342 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 248:\n-#line 1356 \"./parse.y\"\n+#line 1357 \"./parse.y\"\n { \n \t\t  yyval.node = build_if_else_statement (yyvsp[-3].operator.location, yyvsp[-2].node, \n \t\t\t\t\t\tyyvsp[0].node, NULL_TREE);\n \t\t;\n     break;}\n case 249:\n-#line 1361 \"./parse.y\"\n+#line 1362 \"./parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 250:\n-#line 1363 \"./parse.y\"\n+#line 1364 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 251:\n-#line 1365 \"./parse.y\"\n+#line 1366 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 252:\n-#line 1370 \"./parse.y\"\n+#line 1371 \"./parse.y\"\n { yyval.node = build_if_else_statement (yyvsp[-5].operator.location, yyvsp[-4].node, yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 253:\n-#line 1375 \"./parse.y\"\n+#line 1376 \"./parse.y\"\n { yyval.node = build_if_else_statement (yyvsp[-5].operator.location, yyvsp[-4].node, yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 254:\n-#line 1380 \"./parse.y\"\n+#line 1381 \"./parse.y\"\n {\n \t\t  enter_block ();\n \t\t;\n     break;}\n case 255:\n-#line 1384 \"./parse.y\"\n+#line 1385 \"./parse.y\"\n { \n \t\t  /* Make into \"proper list\" of COMPOUND_EXPRs.\n \t\t     I.e. make the last statment also have its own\n@@ -3647,112 +3648,112 @@ case 255:\n \t\t;\n     break;}\n case 256:\n-#line 1396 \"./parse.y\"\n+#line 1397 \"./parse.y\"\n { \n \t\t  yyval.node = build (SWITCH_EXPR, NULL_TREE, yyvsp[-1].node, NULL_TREE);\n \t\t  EXPR_WFL_LINECOL (yyval.node) = yyvsp[-2].operator.location;\n \t\t;\n     break;}\n case 257:\n-#line 1401 \"./parse.y\"\n+#line 1402 \"./parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 258:\n-#line 1403 \"./parse.y\"\n+#line 1404 \"./parse.y\"\n {yyerror (\"Missing term or ')'\"); DRECOVER(switch_statement);;\n     break;}\n case 259:\n-#line 1405 \"./parse.y\"\n+#line 1406 \"./parse.y\"\n {yyerror (\"'{' expected\"); RECOVER;;\n     break;}\n case 260:\n-#line 1413 \"./parse.y\"\n+#line 1414 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 261:\n-#line 1415 \"./parse.y\"\n+#line 1416 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 262:\n-#line 1417 \"./parse.y\"\n+#line 1418 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 263:\n-#line 1419 \"./parse.y\"\n+#line 1420 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 269:\n-#line 1438 \"./parse.y\"\n+#line 1439 \"./parse.y\"\n { \n \t\t  tree lab = build1 (CASE_EXPR, NULL_TREE, yyvsp[-1].node);\n \t\t  EXPR_WFL_LINECOL (lab) = yyvsp[-2].operator.location;\n \t\t  java_method_add_stmt (current_function_decl, lab);\n \t\t;\n     break;}\n case 270:\n-#line 1444 \"./parse.y\"\n+#line 1445 \"./parse.y\"\n { \n \t\t  tree lab = build1 (DEFAULT_EXPR, NULL_TREE, NULL_TREE);\n \t\t  EXPR_WFL_LINECOL (lab) = yyvsp[-1].operator.location;\n \t\t  java_method_add_stmt (current_function_decl, lab);\n \t\t;\n     break;}\n case 271:\n-#line 1450 \"./parse.y\"\n+#line 1451 \"./parse.y\"\n {yyerror (\"Missing or invalid constant expression\"); RECOVER;;\n     break;}\n case 272:\n-#line 1452 \"./parse.y\"\n+#line 1453 \"./parse.y\"\n {yyerror (\"':' expected\"); RECOVER;;\n     break;}\n case 273:\n-#line 1454 \"./parse.y\"\n+#line 1455 \"./parse.y\"\n {yyerror (\"':' expected\"); RECOVER;;\n     break;}\n case 274:\n-#line 1459 \"./parse.y\"\n+#line 1460 \"./parse.y\"\n { \n \t\t  tree body = build_loop_body (yyvsp[-2].operator.location, yyvsp[-1].node, 0);\n \t\t  yyval.node = build_new_loop (body);\n \t\t;\n     break;}\n case 275:\n-#line 1467 \"./parse.y\"\n+#line 1468 \"./parse.y\"\n { yyval.node = finish_loop_body (0, NULL_TREE, yyvsp[0].node, 0); ;\n     break;}\n case 276:\n-#line 1469 \"./parse.y\"\n+#line 1470 \"./parse.y\"\n {YYERROR_NOW; yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 277:\n-#line 1471 \"./parse.y\"\n+#line 1472 \"./parse.y\"\n {yyerror (\"Missing term and ')' expected\"); RECOVER;;\n     break;}\n case 278:\n-#line 1473 \"./parse.y\"\n+#line 1474 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 279:\n-#line 1478 \"./parse.y\"\n+#line 1479 \"./parse.y\"\n { yyval.node = finish_loop_body (0, NULL_TREE, yyvsp[0].node, 0); ;\n     break;}\n case 280:\n-#line 1483 \"./parse.y\"\n+#line 1484 \"./parse.y\"\n { \n \t\t  tree body = build_loop_body (0, NULL_TREE, 1);\n \t\t  yyval.node = build_new_loop (body);\n \t\t;\n     break;}\n case 281:\n-#line 1492 \"./parse.y\"\n+#line 1493 \"./parse.y\"\n { yyval.node = finish_loop_body (yyvsp[-3].operator.location, yyvsp[-2].node, yyvsp[-5].node, 1); ;\n     break;}\n case 282:\n-#line 1497 \"./parse.y\"\n+#line 1498 \"./parse.y\"\n { yyval.node = finish_for_loop (EXPR_WFL_LINECOL (yyvsp[-4].node), yyvsp[-4].node, yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 283:\n-#line 1499 \"./parse.y\"\n+#line 1500 \"./parse.y\"\n { \n \t\t  yyval.node = finish_for_loop (0, NULL_TREE, yyvsp[-2].node, yyvsp[0].node);\n \t\t  /* We have not condition, so we get rid of the EXIT_EXPR */\n@@ -3761,23 +3762,23 @@ case 283:\n \t\t;\n     break;}\n case 284:\n-#line 1506 \"./parse.y\"\n+#line 1507 \"./parse.y\"\n {yyerror (\"Invalid control expression\"); RECOVER;;\n     break;}\n case 285:\n-#line 1508 \"./parse.y\"\n+#line 1509 \"./parse.y\"\n {yyerror (\"Invalid update expression\"); RECOVER;;\n     break;}\n case 286:\n-#line 1510 \"./parse.y\"\n+#line 1511 \"./parse.y\"\n {yyerror (\"Invalid update expression\"); RECOVER;;\n     break;}\n case 287:\n-#line 1515 \"./parse.y\"\n+#line 1516 \"./parse.y\"\n { yyval.node = finish_for_loop (EXPR_WFL_LINECOL (yyvsp[-4].node), yyvsp[-4].node, yyvsp[-2].node, yyvsp[0].node);;\n     break;}\n case 288:\n-#line 1517 \"./parse.y\"\n+#line 1518 \"./parse.y\"\n { \n \t\t  yyval.node = finish_for_loop (0, NULL_TREE, yyvsp[-2].node, yyvsp[0].node);\n \t\t  /* We have not condition, so we get rid of the EXIT_EXPR */\n@@ -3786,23 +3787,23 @@ case 288:\n \t\t;\n     break;}\n case 289:\n-#line 1527 \"./parse.y\"\n+#line 1528 \"./parse.y\"\n { \n \t\t  /* This scope defined for local variable that may be\n                      defined within the scope of the for loop */\n \t\t  enter_block (); \n \t\t;\n     break;}\n case 290:\n-#line 1533 \"./parse.y\"\n+#line 1534 \"./parse.y\"\n {yyerror (\"'(' expected\"); DRECOVER(for_1);;\n     break;}\n case 291:\n-#line 1535 \"./parse.y\"\n+#line 1536 \"./parse.y\"\n {yyerror (\"Invalid init statement\"); RECOVER;;\n     break;}\n case 292:\n-#line 1540 \"./parse.y\"\n+#line 1541 \"./parse.y\"\n { \n \t\t  /* We now declare the loop body. The loop is\n                      declared as a for loop. */\n@@ -3815,179 +3816,179 @@ case 292:\n \t\t;\n     break;}\n case 293:\n-#line 1552 \"./parse.y\"\n+#line 1553 \"./parse.y\"\n { yyval.node = empty_stmt_node; ;\n     break;}\n case 294:\n-#line 1554 \"./parse.y\"\n+#line 1555 \"./parse.y\"\n { \n \t\t  /* Init statement recorded within the previously\n                      defined block scope */\n \t\t  yyval.node = java_method_add_stmt (current_function_decl, yyvsp[0].node);\n \t\t;\n     break;}\n case 295:\n-#line 1560 \"./parse.y\"\n+#line 1561 \"./parse.y\"\n { \n \t\t  /* Local variable are recorded within the previously\n \t\t     defined block scope */\n \t\t  yyval.node = NULL_TREE;\n \t\t;\n     break;}\n case 296:\n-#line 1566 \"./parse.y\"\n+#line 1567 \"./parse.y\"\n {yyerror (\"';' expected\"); DRECOVER(for_init_1);;\n     break;}\n case 297:\n-#line 1570 \"./parse.y\"\n+#line 1571 \"./parse.y\"\n {yyval.node = empty_stmt_node;;\n     break;}\n case 298:\n-#line 1572 \"./parse.y\"\n+#line 1573 \"./parse.y\"\n { yyval.node = build_debugable_stmt (BUILD_LOCATION (), yyvsp[0].node); ;\n     break;}\n case 299:\n-#line 1577 \"./parse.y\"\n+#line 1578 \"./parse.y\"\n { yyval.node = add_stmt_to_compound (NULL_TREE, NULL_TREE, yyvsp[0].node); ;\n     break;}\n case 300:\n-#line 1579 \"./parse.y\"\n+#line 1580 \"./parse.y\"\n { yyval.node = add_stmt_to_compound (yyvsp[-2].node, NULL_TREE, yyvsp[0].node); ;\n     break;}\n case 301:\n-#line 1581 \"./parse.y\"\n+#line 1582 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 302:\n-#line 1586 \"./parse.y\"\n+#line 1587 \"./parse.y\"\n { yyval.node = build_bc_statement (yyvsp[-1].operator.location, 1, NULL_TREE); ;\n     break;}\n case 303:\n-#line 1588 \"./parse.y\"\n+#line 1589 \"./parse.y\"\n { yyval.node = build_bc_statement (yyvsp[-2].operator.location, 1, yyvsp[-1].node); ;\n     break;}\n case 304:\n-#line 1590 \"./parse.y\"\n+#line 1591 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 305:\n-#line 1592 \"./parse.y\"\n+#line 1593 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 306:\n-#line 1597 \"./parse.y\"\n+#line 1598 \"./parse.y\"\n { yyval.node = build_bc_statement (yyvsp[-1].operator.location, 0, NULL_TREE); ;\n     break;}\n case 307:\n-#line 1599 \"./parse.y\"\n+#line 1600 \"./parse.y\"\n { yyval.node = build_bc_statement (yyvsp[-2].operator.location, 0, yyvsp[-1].node); ;\n     break;}\n case 308:\n-#line 1601 \"./parse.y\"\n+#line 1602 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 309:\n-#line 1603 \"./parse.y\"\n+#line 1604 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 310:\n-#line 1608 \"./parse.y\"\n+#line 1609 \"./parse.y\"\n { yyval.node = build_return (yyvsp[-1].operator.location, NULL_TREE); ;\n     break;}\n case 311:\n-#line 1610 \"./parse.y\"\n+#line 1611 \"./parse.y\"\n { yyval.node = build_return (yyvsp[-2].operator.location, yyvsp[-1].node); ;\n     break;}\n case 312:\n-#line 1612 \"./parse.y\"\n+#line 1613 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 313:\n-#line 1614 \"./parse.y\"\n+#line 1615 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 314:\n-#line 1619 \"./parse.y\"\n+#line 1620 \"./parse.y\"\n { \n \t\t  yyval.node = build1 (THROW_EXPR, NULL_TREE, yyvsp[-1].node);\n \t\t  EXPR_WFL_LINECOL (yyval.node) = yyvsp[-2].operator.location;\n \t\t;\n     break;}\n case 315:\n-#line 1624 \"./parse.y\"\n+#line 1625 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 316:\n-#line 1626 \"./parse.y\"\n+#line 1627 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 317:\n-#line 1631 \"./parse.y\"\n+#line 1632 \"./parse.y\"\n { \n \t\t  yyval.node = build (SYNCHRONIZED_EXPR, NULL_TREE, yyvsp[-2].node, yyvsp[0].node);\n \t\t  EXPR_WFL_LINECOL (yyval.node) = \n \t\t    EXPR_WFL_LINECOL (MODIFIER_WFL (SYNCHRONIZED_TK));\n \t\t;\n     break;}\n case 318:\n-#line 1637 \"./parse.y\"\n+#line 1638 \"./parse.y\"\n {yyerror (\"'{' expected\"); RECOVER;;\n     break;}\n case 319:\n-#line 1639 \"./parse.y\"\n+#line 1640 \"./parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 320:\n-#line 1641 \"./parse.y\"\n+#line 1642 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 321:\n-#line 1643 \"./parse.y\"\n+#line 1644 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 322:\n-#line 1648 \"./parse.y\"\n+#line 1649 \"./parse.y\"\n {\n \t\t  if ((1 << yyvsp[0].value) != ACC_SYNCHRONIZED)\n \t\t    fatal (\"synchronized was '%d' - yyparse\", (1 << yyvsp[0].value));\n \t\t;\n     break;}\n case 323:\n-#line 1656 \"./parse.y\"\n+#line 1657 \"./parse.y\"\n { yyval.node = build_try_statement (yyvsp[-2].operator.location, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 324:\n-#line 1658 \"./parse.y\"\n+#line 1659 \"./parse.y\"\n { yyval.node = build_try_finally_statement (yyvsp[-2].operator.location, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 325:\n-#line 1660 \"./parse.y\"\n+#line 1661 \"./parse.y\"\n { yyval.node = build_try_finally_statement \n \t\t    (yyvsp[-3].operator.location, build_try_statement (yyvsp[-3].operator.location,\n \t\t\t\t\t\t       yyvsp[-2].node, yyvsp[-1].node), yyvsp[0].node);\n \t\t;\n     break;}\n case 326:\n-#line 1665 \"./parse.y\"\n+#line 1666 \"./parse.y\"\n {yyerror (\"'{' expected\"); DRECOVER (try_statement);;\n     break;}\n case 328:\n-#line 1671 \"./parse.y\"\n+#line 1672 \"./parse.y\"\n { \n \t\t  TREE_CHAIN (yyvsp[0].node) = yyvsp[-1].node;\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 329:\n-#line 1679 \"./parse.y\"\n+#line 1680 \"./parse.y\"\n { \n \t\t  java_method_add_stmt (current_function_decl, yyvsp[0].node);\n \t\t  exit_block ();\n \t\t  yyval.node = yyvsp[-1].node;\n \t\t;\n     break;}\n case 330:\n-#line 1687 \"./parse.y\"\n+#line 1688 \"./parse.y\"\n { \n \t\t  /* We add a block to define a scope for\n \t\t     formal_parameter (CCBP). The formal parameter is\n@@ -4005,184 +4006,184 @@ case 330:\n \t\t;\n     break;}\n case 331:\n-#line 1703 \"./parse.y\"\n+#line 1704 \"./parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 332:\n-#line 1705 \"./parse.y\"\n+#line 1706 \"./parse.y\"\n {yyerror (\"Missing term or ')' expected\"); DRECOVER (2);;\n     break;}\n case 333:\n-#line 1707 \"./parse.y\"\n+#line 1708 \"./parse.y\"\n {yyerror (\"')' expected\"); DRECOVER (1);;\n     break;}\n case 334:\n-#line 1712 \"./parse.y\"\n+#line 1713 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 335:\n-#line 1714 \"./parse.y\"\n+#line 1715 \"./parse.y\"\n {yyerror (\"'{' expected\"); RECOVER; ;\n     break;}\n case 339:\n-#line 1726 \"./parse.y\"\n+#line 1727 \"./parse.y\"\n { yyval.node = build_this (yyvsp[0].operator.location); ;\n     break;}\n case 340:\n-#line 1728 \"./parse.y\"\n+#line 1729 \"./parse.y\"\n {yyval.node = yyvsp[-1].node;;\n     break;}\n case 345:\n-#line 1737 \"./parse.y\"\n+#line 1738 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"named class literals\"); ;\n     break;}\n case 346:\n-#line 1739 \"./parse.y\"\n+#line 1740 \"./parse.y\"\n { yyval.node = build_class_ref (yyvsp[-2].node); ;\n     break;}\n case 347:\n-#line 1741 \"./parse.y\"\n+#line 1742 \"./parse.y\"\n { yyval.node = build_class_ref (void_type_node); ;\n     break;}\n case 348:\n-#line 1746 \"./parse.y\"\n+#line 1747 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"class literals\"); ;\n     break;}\n case 349:\n-#line 1748 \"./parse.y\"\n+#line 1749 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 350:\n-#line 1750 \"./parse.y\"\n+#line 1751 \"./parse.y\"\n {yyerror (\"'class' or 'this' expected\" ); RECOVER;;\n     break;}\n case 351:\n-#line 1752 \"./parse.y\"\n+#line 1753 \"./parse.y\"\n {yyerror (\"'class' expected\" ); RECOVER;;\n     break;}\n case 352:\n-#line 1754 \"./parse.y\"\n+#line 1755 \"./parse.y\"\n {yyerror (\"'class' expected\" ); RECOVER;;\n     break;}\n case 353:\n-#line 1759 \"./parse.y\"\n+#line 1760 \"./parse.y\"\n { yyval.node = build_new_invocation (yyvsp[-3].node, yyvsp[-1].node); ;\n     break;}\n case 354:\n-#line 1761 \"./parse.y\"\n+#line 1762 \"./parse.y\"\n { yyval.node = build_new_invocation (yyvsp[-2].node, NULL_TREE); ;\n     break;}\n case 355:\n-#line 1766 \"./parse.y\"\n+#line 1767 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"inner class instance creation\"); ;\n     break;}\n case 356:\n-#line 1768 \"./parse.y\"\n+#line 1769 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"inner class instance creation\"); ;\n     break;}\n case 361:\n-#line 1777 \"./parse.y\"\n+#line 1778 \"./parse.y\"\n {yyerror (\"'(' expected\"); DRECOVER(new_1);;\n     break;}\n case 362:\n-#line 1779 \"./parse.y\"\n+#line 1780 \"./parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 363:\n-#line 1781 \"./parse.y\"\n+#line 1782 \"./parse.y\"\n {yyerror (\"')' or term expected\"); RECOVER;;\n     break;}\n case 364:\n-#line 1783 \"./parse.y\"\n+#line 1784 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 365:\n-#line 1785 \"./parse.y\"\n+#line 1786 \"./parse.y\"\n {YYERROR_NOW; yyerror (\"Identifier expected\"); RECOVER;;\n     break;}\n case 366:\n-#line 1787 \"./parse.y\"\n+#line 1788 \"./parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 369:\n-#line 1797 \"./parse.y\"\n+#line 1798 \"./parse.y\"\n { \n \t\t  yyval.node = tree_cons (NULL_TREE, yyvsp[0].node, NULL_TREE);\n \t\t  ctxp->formal_parameter_number = 1; \n \t\t;\n     break;}\n case 370:\n-#line 1802 \"./parse.y\"\n+#line 1803 \"./parse.y\"\n {\n \t\t  ctxp->formal_parameter_number += 1;\n \t\t  yyval.node = tree_cons (NULL_TREE, yyvsp[0].node, yyvsp[-2].node);\n \t\t;\n     break;}\n case 371:\n-#line 1807 \"./parse.y\"\n+#line 1808 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 372:\n-#line 1812 \"./parse.y\"\n+#line 1813 \"./parse.y\"\n { yyval.node = build_newarray_node (yyvsp[-1].node, yyvsp[0].node, 0); ;\n     break;}\n case 373:\n-#line 1814 \"./parse.y\"\n+#line 1815 \"./parse.y\"\n { yyval.node = build_newarray_node (yyvsp[-1].node, yyvsp[0].node, 0); ;\n     break;}\n case 374:\n-#line 1816 \"./parse.y\"\n+#line 1817 \"./parse.y\"\n { yyval.node = build_newarray_node (yyvsp[-2].node, yyvsp[-1].node, CURRENT_OSB (ctxp));;\n     break;}\n case 375:\n-#line 1818 \"./parse.y\"\n+#line 1819 \"./parse.y\"\n { yyval.node = build_newarray_node (yyvsp[-2].node, yyvsp[-1].node, CURRENT_OSB (ctxp));;\n     break;}\n case 376:\n-#line 1822 \"./parse.y\"\n+#line 1823 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"anonymous array\"); ;\n     break;}\n case 377:\n-#line 1824 \"./parse.y\"\n+#line 1825 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"anonymous array\"); ;\n     break;}\n case 378:\n-#line 1826 \"./parse.y\"\n+#line 1827 \"./parse.y\"\n {yyerror (\"'[' expected\"); DRECOVER (\"]\");;\n     break;}\n case 379:\n-#line 1828 \"./parse.y\"\n+#line 1829 \"./parse.y\"\n {yyerror (\"']' expected\"); RECOVER;;\n     break;}\n case 380:\n-#line 1833 \"./parse.y\"\n+#line 1834 \"./parse.y\"\n { yyval.node = build_tree_list (NULL_TREE, yyvsp[0].node); ;\n     break;}\n case 381:\n-#line 1835 \"./parse.y\"\n+#line 1836 \"./parse.y\"\n { yyval.node = tree_cons (NULL_TREE, yyvsp[0].node, yyval.node); ;\n     break;}\n case 382:\n-#line 1840 \"./parse.y\"\n+#line 1841 \"./parse.y\"\n { \n \t\t  EXPR_WFL_LINECOL (yyvsp[-1].node) = yyvsp[-2].operator.location;\n \t\t  yyval.node = yyvsp[-1].node;\n \t\t;\n     break;}\n case 383:\n-#line 1845 \"./parse.y\"\n+#line 1846 \"./parse.y\"\n {yyerror (\"']' expected\"); RECOVER;;\n     break;}\n case 384:\n-#line 1847 \"./parse.y\"\n+#line 1848 \"./parse.y\"\n {\n \t\t  yyerror (\"Missing term\");\n \t\t  yyerror (\"']' expected\");\n \t\t  RECOVER;\n \t\t;\n     break;}\n case 385:\n-#line 1856 \"./parse.y\"\n+#line 1857 \"./parse.y\"\n { \n \t\t  int allocate = 0;\n \t\t  /* If not initialized, allocate memory for the osb\n@@ -4210,19 +4211,19 @@ case 385:\n \t\t;\n     break;}\n case 386:\n-#line 1882 \"./parse.y\"\n+#line 1883 \"./parse.y\"\n { CURRENT_OSB (ctxp)++; ;\n     break;}\n case 387:\n-#line 1884 \"./parse.y\"\n+#line 1885 \"./parse.y\"\n { yyerror (\"']' expected\"); RECOVER;;\n     break;}\n case 388:\n-#line 1889 \"./parse.y\"\n+#line 1890 \"./parse.y\"\n { yyval.node = make_qualified_primary (yyvsp[-2].node, yyvsp[0].node, yyvsp[-1].operator.location); ;\n     break;}\n case 389:\n-#line 1893 \"./parse.y\"\n+#line 1894 \"./parse.y\"\n {\n \t\t  tree super_wfl = \n \t\t    build_wfl_node (super_identifier_node);\n@@ -4231,19 +4232,19 @@ case 389:\n \t\t;\n     break;}\n case 390:\n-#line 1900 \"./parse.y\"\n+#line 1901 \"./parse.y\"\n {yyerror (\"Field expected\"); DRECOVER (super_field_acces);;\n     break;}\n case 391:\n-#line 1905 \"./parse.y\"\n+#line 1906 \"./parse.y\"\n { yyval.node = build_method_invocation (yyvsp[-2].node, NULL_TREE); ;\n     break;}\n case 392:\n-#line 1907 \"./parse.y\"\n+#line 1908 \"./parse.y\"\n { yyval.node = build_method_invocation (yyvsp[-3].node, yyvsp[-1].node); ;\n     break;}\n case 393:\n-#line 1909 \"./parse.y\"\n+#line 1910 \"./parse.y\"\n { \n \t\t  if (TREE_CODE (yyvsp[-4].node) == THIS_EXPR)\n \t\t    yyval.node = build_this_super_qualified_invocation \n@@ -4256,7 +4257,7 @@ case 393:\n \t\t;\n     break;}\n case 394:\n-#line 1920 \"./parse.y\"\n+#line 1921 \"./parse.y\"\n { \n \t\t  if (TREE_CODE (yyvsp[-5].node) == THIS_EXPR)\n \t\t    yyval.node = build_this_super_qualified_invocation \n@@ -4269,121 +4270,121 @@ case 394:\n \t\t;\n     break;}\n case 395:\n-#line 1931 \"./parse.y\"\n+#line 1932 \"./parse.y\"\n { \n \t\t  yyval.node = build_this_super_qualified_invocation \n \t\t    (0, yyvsp[-2].node, NULL_TREE, yyvsp[-4].operator.location, yyvsp[-3].operator.location);\n \t\t;\n     break;}\n case 396:\n-#line 1936 \"./parse.y\"\n+#line 1937 \"./parse.y\"\n {\n \t\t  yyval.node = build_this_super_qualified_invocation \n \t\t    (0, yyvsp[-3].node, yyvsp[-1].node, yyvsp[-5].operator.location, yyvsp[-4].operator.location);\n \t\t;\n     break;}\n case 397:\n-#line 1945 \"./parse.y\"\n+#line 1946 \"./parse.y\"\n { yyerror (\"'(' expected\"); DRECOVER (method_invocation); ;\n     break;}\n case 398:\n-#line 1947 \"./parse.y\"\n+#line 1948 \"./parse.y\"\n { yyerror (\"'(' expected\"); DRECOVER (method_invocation); ;\n     break;}\n case 399:\n-#line 1952 \"./parse.y\"\n+#line 1953 \"./parse.y\"\n { yyval.node = build_array_ref (yyvsp[-2].operator.location, yyvsp[-3].node, yyvsp[-1].node); ;\n     break;}\n case 400:\n-#line 1954 \"./parse.y\"\n+#line 1955 \"./parse.y\"\n { yyval.node = build_array_ref (yyvsp[-2].operator.location, yyvsp[-3].node, yyvsp[-1].node); ;\n     break;}\n case 401:\n-#line 1956 \"./parse.y\"\n+#line 1957 \"./parse.y\"\n {\n \t\t  yyerror (\"Missing term and ']' expected\");\n \t\t  DRECOVER(array_access);\n \t\t;\n     break;}\n case 402:\n-#line 1961 \"./parse.y\"\n+#line 1962 \"./parse.y\"\n {\n \t\t  yyerror (\"']' expected\");\n \t\t  DRECOVER(array_access);\n \t\t;\n     break;}\n case 403:\n-#line 1966 \"./parse.y\"\n+#line 1967 \"./parse.y\"\n {\n \t\t  yyerror (\"Missing term and ']' expected\");\n \t\t  DRECOVER(array_access);\n \t\t;\n     break;}\n case 404:\n-#line 1971 \"./parse.y\"\n+#line 1972 \"./parse.y\"\n {\n \t\t  yyerror (\"']' expected\");\n \t\t  DRECOVER(array_access);\n \t\t;\n     break;}\n case 409:\n-#line 1986 \"./parse.y\"\n+#line 1987 \"./parse.y\"\n { yyval.node = build_incdec (yyvsp[0].operator.token, yyvsp[0].operator.location, yyvsp[-1].node, 1); ;\n     break;}\n case 410:\n-#line 1991 \"./parse.y\"\n+#line 1992 \"./parse.y\"\n { yyval.node = build_incdec (yyvsp[0].operator.token, yyvsp[0].operator.location, yyvsp[-1].node, 1); ;\n     break;}\n case 413:\n-#line 1998 \"./parse.y\"\n+#line 1999 \"./parse.y\"\n {yyval.node = build_unaryop (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[0].node); ;\n     break;}\n case 414:\n-#line 2000 \"./parse.y\"\n+#line 2001 \"./parse.y\"\n {yyval.node = build_unaryop (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[0].node); ;\n     break;}\n case 416:\n-#line 2003 \"./parse.y\"\n+#line 2004 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;\n     break;}\n case 417:\n-#line 2005 \"./parse.y\"\n+#line 2006 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;\n     break;}\n case 418:\n-#line 2010 \"./parse.y\"\n+#line 2011 \"./parse.y\"\n {yyval.node = build_incdec (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[0].node, 0); ;\n     break;}\n case 419:\n-#line 2012 \"./parse.y\"\n+#line 2013 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;\n     break;}\n case 420:\n-#line 2017 \"./parse.y\"\n+#line 2018 \"./parse.y\"\n {yyval.node = build_incdec (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[0].node, 0); ;\n     break;}\n case 421:\n-#line 2019 \"./parse.y\"\n+#line 2020 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;\n     break;}\n case 423:\n-#line 2025 \"./parse.y\"\n+#line 2026 \"./parse.y\"\n {yyval.node = build_unaryop (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[0].node); ;\n     break;}\n case 424:\n-#line 2027 \"./parse.y\"\n+#line 2028 \"./parse.y\"\n {yyval.node = build_unaryop (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[0].node); ;\n     break;}\n case 426:\n-#line 2030 \"./parse.y\"\n+#line 2031 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;\n     break;}\n case 427:\n-#line 2032 \"./parse.y\"\n+#line 2033 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;\n     break;}\n case 428:\n-#line 2037 \"./parse.y\"\n+#line 2038 \"./parse.y\"\n { \n \t\t  tree type = yyvsp[-3].node;\n \t\t  while (CURRENT_OSB (ctxp)--)\n@@ -4393,15 +4394,15 @@ case 428:\n \t\t;\n     break;}\n case 429:\n-#line 2045 \"./parse.y\"\n+#line 2046 \"./parse.y\"\n { yyval.node = build_cast (yyvsp[-3].operator.location, yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 430:\n-#line 2047 \"./parse.y\"\n+#line 2048 \"./parse.y\"\n { yyval.node = build_cast (yyvsp[-3].operator.location, yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 431:\n-#line 2049 \"./parse.y\"\n+#line 2050 \"./parse.y\"\n { \n \t\t  char *ptr;\n \t\t  while (CURRENT_OSB (ctxp)--)\n@@ -4416,275 +4417,275 @@ case 431:\n \t\t;\n     break;}\n case 432:\n-#line 2062 \"./parse.y\"\n+#line 2063 \"./parse.y\"\n {yyerror (\"']' expected, invalid type expression\");;\n     break;}\n case 433:\n-#line 2064 \"./parse.y\"\n+#line 2065 \"./parse.y\"\n {\n \t          if (ctxp->prevent_ese != lineno)\n \t\t    yyerror (\"Invalid type expression\"); RECOVER;\n \t\t  RECOVER;\n \t\t;\n     break;}\n case 434:\n-#line 2070 \"./parse.y\"\n+#line 2071 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 435:\n-#line 2072 \"./parse.y\"\n+#line 2073 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 436:\n-#line 2074 \"./parse.y\"\n+#line 2075 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 438:\n-#line 2080 \"./parse.y\"\n+#line 2081 \"./parse.y\"\n { \n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), \n \t\t\t\t    yyvsp[-1].operator.location, yyvsp[-2].node, yyvsp[0].node);\n \t\t;\n     break;}\n case 439:\n-#line 2085 \"./parse.y\"\n+#line 2086 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 440:\n-#line 2090 \"./parse.y\"\n+#line 2091 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 441:\n-#line 2095 \"./parse.y\"\n+#line 2096 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 442:\n-#line 2097 \"./parse.y\"\n+#line 2098 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 443:\n-#line 2099 \"./parse.y\"\n+#line 2100 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 445:\n-#line 2105 \"./parse.y\"\n+#line 2106 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 446:\n-#line 2110 \"./parse.y\"\n+#line 2111 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 447:\n-#line 2115 \"./parse.y\"\n+#line 2116 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 448:\n-#line 2117 \"./parse.y\"\n+#line 2118 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 450:\n-#line 2123 \"./parse.y\"\n+#line 2124 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 451:\n-#line 2128 \"./parse.y\"\n+#line 2129 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 452:\n-#line 2133 \"./parse.y\"\n+#line 2134 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 453:\n-#line 2138 \"./parse.y\"\n+#line 2139 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 454:\n-#line 2140 \"./parse.y\"\n+#line 2141 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 455:\n-#line 2142 \"./parse.y\"\n+#line 2143 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 457:\n-#line 2148 \"./parse.y\"\n+#line 2149 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 458:\n-#line 2153 \"./parse.y\"\n+#line 2154 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 459:\n-#line 2158 \"./parse.y\"\n+#line 2159 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 460:\n-#line 2163 \"./parse.y\"\n+#line 2164 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 461:\n-#line 2168 \"./parse.y\"\n+#line 2169 \"./parse.y\"\n { yyval.node = build_binop (INSTANCEOF_EXPR, yyvsp[-1].operator.location, yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 462:\n-#line 2170 \"./parse.y\"\n+#line 2171 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 463:\n-#line 2172 \"./parse.y\"\n+#line 2173 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 464:\n-#line 2174 \"./parse.y\"\n+#line 2175 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 465:\n-#line 2176 \"./parse.y\"\n+#line 2177 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 466:\n-#line 2178 \"./parse.y\"\n+#line 2179 \"./parse.y\"\n {yyerror (\"Invalid reference type\"); RECOVER;;\n     break;}\n case 468:\n-#line 2184 \"./parse.y\"\n+#line 2185 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 469:\n-#line 2189 \"./parse.y\"\n+#line 2190 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 470:\n-#line 2194 \"./parse.y\"\n+#line 2195 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 471:\n-#line 2196 \"./parse.y\"\n+#line 2197 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 473:\n-#line 2202 \"./parse.y\"\n+#line 2203 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 474:\n-#line 2207 \"./parse.y\"\n+#line 2208 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 476:\n-#line 2213 \"./parse.y\"\n+#line 2214 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 477:\n-#line 2218 \"./parse.y\"\n+#line 2219 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 479:\n-#line 2224 \"./parse.y\"\n+#line 2225 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 480:\n-#line 2229 \"./parse.y\"\n+#line 2230 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 482:\n-#line 2235 \"./parse.y\"\n+#line 2236 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 483:\n-#line 2240 \"./parse.y\"\n+#line 2241 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 485:\n-#line 2246 \"./parse.y\"\n+#line 2247 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 486:\n-#line 2251 \"./parse.y\"\n+#line 2252 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 488:\n-#line 2257 \"./parse.y\"\n+#line 2258 \"./parse.y\"\n {\n \t\t  yyval.node = build (CONDITIONAL_EXPR, NULL_TREE, yyvsp[-4].node, yyvsp[-2].node, yyvsp[0].node);\n \t\t  EXPR_WFL_LINECOL (yyval.node) = yyvsp[-3].operator.location;\n \t\t;\n     break;}\n case 489:\n-#line 2262 \"./parse.y\"\n+#line 2263 \"./parse.y\"\n {\n \t\t  YYERROR_NOW;\n \t\t  yyerror (\"Missing term\");\n \t\t  DRECOVER (1);\n \t\t;\n     break;}\n case 490:\n-#line 2268 \"./parse.y\"\n+#line 2269 \"./parse.y\"\n {yyerror (\"Missing term\"); DRECOVER (2);;\n     break;}\n case 491:\n-#line 2270 \"./parse.y\"\n+#line 2271 \"./parse.y\"\n {yyerror (\"Missing term\"); DRECOVER (3);;\n     break;}\n case 494:\n-#line 2280 \"./parse.y\"\n+#line 2281 \"./parse.y\"\n { yyval.node = build_assignment (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 495:\n-#line 2282 \"./parse.y\"\n+#line 2283 \"./parse.y\"\n {\n \t\t  if (ctxp->prevent_ese != lineno)\n \t\t    yyerror (\"Missing term\");\n@@ -4693,7 +4694,7 @@ case 495:\n     break;}\n }\n    /* the action file gets copied in in place of this dollarsign */\n-#line 498 \"/x1/java/posix/share/bison.simple\"\n+#line 498 \"/usr/cygnus/gnupro-98r1/share/bison.simple\"\n \f\n   yyvsp -= yylen;\n   yyssp -= yylen;\n@@ -4889,7 +4890,7 @@ case 495:\n   yystate = yyn;\n   goto yynewstate;\n }\n-#line 2308 \"./parse.y\"\n+#line 2309 \"./parse.y\"\n \n \f\n \n@@ -6127,6 +6128,12 @@ finish_method_declaration (method_body)\n       method_body = NULL_TREE;\n     }\n \n+  if (flag_emit_class_files && method_body \n+      && TREE_CODE (method_body) == NOP_EXPR \n+      && TREE_TYPE (current_function_decl) \n+      && TREE_TYPE (TREE_TYPE (current_function_decl)) == void_type_node)\n+    method_body = build1 (RETURN_EXPR, void_type_node, NULL);\n+    \n   BLOCK_EXPR_BODY (DECL_FUNCTION_BODY (current_function_decl)) = method_body;\n   maybe_absorb_scoping_blocks ();\n   /* Exit function's body */\n@@ -7822,6 +7829,7 @@ static tree\n resolve_package (pkg, next)\n      tree pkg, *next;\n {\n+  tree current;\n   tree type_name = NULL_TREE;\n   char *name = IDENTIFIER_POINTER (EXPR_WFL_NODE (pkg));\n \n@@ -7841,9 +7849,63 @@ resolve_package (pkg, next)\n       *next = TREE_CHAIN (TREE_CHAIN (EXPR_WFL_QUALIFICATION (pkg)));\n       type_name = lookup_package_type (name, 9);\n     }\n-  else\n-    return NULL_TREE;\t\t/* FIXME, search all imported packages. */\n \n+  /* If we found something here, return */\n+  if (type_name)\n+    return type_name; \n+\n+  *next = EXPR_WFL_QUALIFICATION (pkg);\n+\n+  /* Try the current package. */\n+  if (ctxp->package && !strncmp (name, IDENTIFIER_POINTER (ctxp->package),  \n+\t\t\t\t IDENTIFIER_LENGTH (ctxp->package)))\n+    {\n+      type_name = \n+\tlookup_package_type_and_set_next (name, \n+\t\t\t\t\t  IDENTIFIER_LENGTH (ctxp->package), \n+\t\t\t\t\t  next );\n+      if (type_name)\n+\treturn type_name;\n+    }\n+\n+  /* Search in imported package */\n+  for (current = ctxp->import_list; current; current = TREE_CHAIN (current))\n+    {\n+      tree current_pkg_name = EXPR_WFL_NODE (TREE_PURPOSE (current));\n+      int len = IDENTIFIER_LENGTH (current_pkg_name);\n+      if (!strncmp (name, IDENTIFIER_POINTER (current_pkg_name), len))\n+\t{\n+\t  tree left, dummy;\n+\t  \n+\t  breakdown_qualified (&left, &dummy, current_pkg_name);\n+\t  len = IDENTIFIER_LENGTH (left);\n+\t  type_name = lookup_package_type_and_set_next (name, len, next);\n+\t  if (type_name)\n+\t    break;\n+\t}\n+    }\n+\n+  return type_name;\n+}\n+\n+static tree\n+lookup_package_type_and_set_next (name, len, next)\n+     char *name;\n+     int len;\n+     tree *next;\n+{\n+  char *ptr;\n+  tree type_name = lookup_package_type (name, len);\n+\n+  if (!type_name)\n+    return NULL;\n+  \n+  ptr = IDENTIFIER_POINTER (type_name);\n+  while (ptr && (ptr = strchr (ptr, '.'))) \n+    {\n+      *next = TREE_CHAIN (*next);\n+      ptr++;\n+    }\n   return type_name;\n }\n \n@@ -9457,18 +9519,36 @@ patch_method_invocation (patch, primary, where, is_static, ret_decl)\n \t as a MethodName. We need to qualify what's before */\n       qualify_ambiguous_name (wfl);\n \n-      /* Package resolution are erroneous */\n+      /* Package resolution */\n       if (RESOLVE_PACKAGE_NAME_P (wfl))\n \t{\n-\t  tree remainder;\n-\t  breakdown_qualified (&remainder, NULL, EXPR_WFL_NODE (wfl));\n-\t  parse_error_context (wfl, \"Can't search method `%s' in package \"\n-\t\t\t       \"`%s'\",IDENTIFIER_POINTER (identifier),\n-\t\t\t       IDENTIFIER_POINTER (remainder));\n-\t  PATCH_METHOD_RETURN_ERROR ();\n+\t  tree next, decl, name = resolve_package (wfl, &next);\n+\t  \n+\t  if (!name)\n+\t    {\n+\t      tree remainder;\n+\t      breakdown_qualified (&remainder, NULL, EXPR_WFL_NODE (wfl));\n+\t      parse_error_context (wfl, \"Can't search method `%s' in package \"\n+\t\t\t\t   \"`%s'\",IDENTIFIER_POINTER (identifier),\n+\t\t\t\t   IDENTIFIER_POINTER (remainder));\n+\t      PATCH_METHOD_RETURN_ERROR ();\n+\t    }\n+\t  RESOLVE_PACKAGE_NAME_P (wfl) = 0;\n+\t  if ((decl = resolve_no_layout (name, QUAL_WFL (next))))\n+\t    {\n+\t      QUAL_RESOLUTION (EXPR_WFL_QUALIFICATION (wfl)) = decl;\n+\t      RESOLVE_EXPRESSION_NAME_P (wfl) = 0;\n+\t      RESOLVE_TYPE_NAME_P (wfl) = 1;\n+\t    }\n+\t  else\n+\t    {\n+\t      RESOLVE_EXPRESSION_NAME_P (wfl) = 1;\n+\t      RESOLVE_TYPE_NAME_P (wfl) = 0;\n+\t    }\n \t}\n+\n       /* We're resolving a call from a type */\n-      else if (RESOLVE_TYPE_NAME_P (wfl))\n+      if (RESOLVE_TYPE_NAME_P (wfl))\n \t{\n \t  tree decl = QUAL_RESOLUTION (EXPR_WFL_QUALIFICATION (wfl));\n \t  tree name = DECL_NAME (decl);\n@@ -10215,7 +10295,6 @@ qualify_ambiguous_name (id)\n \t/* Do one more interation to set things up */\n \tsuper_found = again = 1;\n       }\n-\n   } while (again);\n   \n   /* If name appears within the scope of a location variable\n@@ -10693,7 +10772,7 @@ java_complete_lhs (node)\n \t    return node;\n \t  /* Keep line number information somewhere were it doesn't\n \t     disrupt the completion process. */\n-\t  if (flag_emit_xref)\n+\t  if (flag_emit_xref && TREE_CODE (node) != CALL_EXPR)\n \t    {\n \t      EXPR_WFL_NODE (wfl) = TREE_OPERAND (node, 1);\n \t      TREE_OPERAND (node, 1) = wfl;"}, {"sha": "8abd4a7c0793870df65c4b91927f84c4edafd81e", "filename": "gcc/java/parse.y", "status": "modified", "additions": 91, "deletions": 12, "changes": 103, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c56429a6890e716331a7ceea6f7c9490e71d67f/gcc%2Fjava%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c56429a6890e716331a7ceea6f7c9490e71d67f/gcc%2Fjava%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.y?ref=2c56429a6890e716331a7ceea6f7c9490e71d67f", "patch": "@@ -100,6 +100,7 @@ static int find_in_imports PROTO ((tree));\n static int check_pkg_class_access PROTO ((tree, tree));\n static tree resolve_package PROTO ((tree, tree *));\n static tree lookup_package_type PROTO ((char *, int));\n+static tree lookup_package_type_and_set_next PROTO ((char *, int, tree *));\n static tree resolve_class PROTO ((tree, tree, tree));\n static void declare_local_variables PROTO ((int, tree, tree));\n static void source_start_java_method PROTO ((tree));\n@@ -3542,6 +3543,12 @@ finish_method_declaration (method_body)\n       method_body = NULL_TREE;\n     }\n \n+  if (flag_emit_class_files && method_body \n+      && TREE_CODE (method_body) == NOP_EXPR \n+      && TREE_TYPE (current_function_decl) \n+      && TREE_TYPE (TREE_TYPE (current_function_decl)) == void_type_node)\n+    method_body = build1 (RETURN_EXPR, void_type_node, NULL);\n+    \n   BLOCK_EXPR_BODY (DECL_FUNCTION_BODY (current_function_decl)) = method_body;\n   maybe_absorb_scoping_blocks ();\n   /* Exit function's body */\n@@ -5237,6 +5244,7 @@ static tree\n resolve_package (pkg, next)\n      tree pkg, *next;\n {\n+  tree current;\n   tree type_name = NULL_TREE;\n   char *name = IDENTIFIER_POINTER (EXPR_WFL_NODE (pkg));\n \n@@ -5256,9 +5264,63 @@ resolve_package (pkg, next)\n       *next = TREE_CHAIN (TREE_CHAIN (EXPR_WFL_QUALIFICATION (pkg)));\n       type_name = lookup_package_type (name, 9);\n     }\n-  else\n-    return NULL_TREE;\t\t/* FIXME, search all imported packages. */\n \n+  /* If we found something here, return */\n+  if (type_name)\n+    return type_name; \n+\n+  *next = EXPR_WFL_QUALIFICATION (pkg);\n+\n+  /* Try the current package. */\n+  if (ctxp->package && !strncmp (name, IDENTIFIER_POINTER (ctxp->package),  \n+\t\t\t\t IDENTIFIER_LENGTH (ctxp->package)))\n+    {\n+      type_name = \n+\tlookup_package_type_and_set_next (name, \n+\t\t\t\t\t  IDENTIFIER_LENGTH (ctxp->package), \n+\t\t\t\t\t  next );\n+      if (type_name)\n+\treturn type_name;\n+    }\n+\n+  /* Search in imported package */\n+  for (current = ctxp->import_list; current; current = TREE_CHAIN (current))\n+    {\n+      tree current_pkg_name = EXPR_WFL_NODE (TREE_PURPOSE (current));\n+      int len = IDENTIFIER_LENGTH (current_pkg_name);\n+      if (!strncmp (name, IDENTIFIER_POINTER (current_pkg_name), len))\n+\t{\n+\t  tree left, dummy;\n+\t  \n+\t  breakdown_qualified (&left, &dummy, current_pkg_name);\n+\t  len = IDENTIFIER_LENGTH (left);\n+\t  type_name = lookup_package_type_and_set_next (name, len, next);\n+\t  if (type_name)\n+\t    break;\n+\t}\n+    }\n+\n+  return type_name;\n+}\n+\n+static tree\n+lookup_package_type_and_set_next (name, len, next)\n+     char *name;\n+     int len;\n+     tree *next;\n+{\n+  char *ptr;\n+  tree type_name = lookup_package_type (name, len);\n+\n+  if (!type_name)\n+    return NULL;\n+  \n+  ptr = IDENTIFIER_POINTER (type_name);\n+  while (ptr && (ptr = strchr (ptr, '.'))) \n+    {\n+      *next = TREE_CHAIN (*next);\n+      ptr++;\n+    }\n   return type_name;\n }\n \n@@ -6872,18 +6934,36 @@ patch_method_invocation (patch, primary, where, is_static, ret_decl)\n \t as a MethodName. We need to qualify what's before */\n       qualify_ambiguous_name (wfl);\n \n-      /* Package resolution are erroneous */\n+      /* Package resolution */\n       if (RESOLVE_PACKAGE_NAME_P (wfl))\n \t{\n-\t  tree remainder;\n-\t  breakdown_qualified (&remainder, NULL, EXPR_WFL_NODE (wfl));\n-\t  parse_error_context (wfl, \"Can't search method `%s' in package \"\n-\t\t\t       \"`%s'\",IDENTIFIER_POINTER (identifier),\n-\t\t\t       IDENTIFIER_POINTER (remainder));\n-\t  PATCH_METHOD_RETURN_ERROR ();\n+\t  tree next, decl, name = resolve_package (wfl, &next);\n+\t  \n+\t  if (!name)\n+\t    {\n+\t      tree remainder;\n+\t      breakdown_qualified (&remainder, NULL, EXPR_WFL_NODE (wfl));\n+\t      parse_error_context (wfl, \"Can't search method `%s' in package \"\n+\t\t\t\t   \"`%s'\",IDENTIFIER_POINTER (identifier),\n+\t\t\t\t   IDENTIFIER_POINTER (remainder));\n+\t      PATCH_METHOD_RETURN_ERROR ();\n+\t    }\n+\t  RESOLVE_PACKAGE_NAME_P (wfl) = 0;\n+\t  if ((decl = resolve_no_layout (name, QUAL_WFL (next))))\n+\t    {\n+\t      QUAL_RESOLUTION (EXPR_WFL_QUALIFICATION (wfl)) = decl;\n+\t      RESOLVE_EXPRESSION_NAME_P (wfl) = 0;\n+\t      RESOLVE_TYPE_NAME_P (wfl) = 1;\n+\t    }\n+\t  else\n+\t    {\n+\t      RESOLVE_EXPRESSION_NAME_P (wfl) = 1;\n+\t      RESOLVE_TYPE_NAME_P (wfl) = 0;\n+\t    }\n \t}\n+\n       /* We're resolving a call from a type */\n-      else if (RESOLVE_TYPE_NAME_P (wfl))\n+      if (RESOLVE_TYPE_NAME_P (wfl))\n \t{\n \t  tree decl = QUAL_RESOLUTION (EXPR_WFL_QUALIFICATION (wfl));\n \t  tree name = DECL_NAME (decl);\n@@ -7630,7 +7710,6 @@ qualify_ambiguous_name (id)\n \t/* Do one more interation to set things up */\n \tsuper_found = again = 1;\n       }\n-\n   } while (again);\n   \n   /* If name appears within the scope of a location variable\n@@ -8108,7 +8187,7 @@ java_complete_lhs (node)\n \t    return node;\n \t  /* Keep line number information somewhere were it doesn't\n \t     disrupt the completion process. */\n-\t  if (flag_emit_xref)\n+\t  if (flag_emit_xref && TREE_CODE (node) != CALL_EXPR)\n \t    {\n \t      EXPR_WFL_NODE (wfl) = TREE_OPERAND (node, 1);\n \t      TREE_OPERAND (node, 1) = wfl;"}]}