{"sha": "1ac876be7e72c91dbbea0ad4041ca6039424eca9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWFjODc2YmU3ZTcyYzkxZGJiZWEwYWQ0MDQxY2E2MDM5NDI0ZWNhOQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-11-07T12:45:58Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-11-07T12:45:58Z"}, "message": "(integer_{zero,one,all_ones,pow2}p, real_{zero,one,two}p): Return 0 if\nTREE_CONSTANT_OVERFLOW.\n\nFrom-SVN: r13107", "tree": {"sha": "17ab736cb869e52c961ccac1842b44869550151b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/17ab736cb869e52c961ccac1842b44869550151b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1ac876be7e72c91dbbea0ad4041ca6039424eca9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ac876be7e72c91dbbea0ad4041ca6039424eca9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1ac876be7e72c91dbbea0ad4041ca6039424eca9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ac876be7e72c91dbbea0ad4041ca6039424eca9/comments", "author": null, "committer": null, "parents": [{"sha": "9898deac71b03c26a1080d077738a32e6107cf28", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9898deac71b03c26a1080d077738a32e6107cf28", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9898deac71b03c26a1080d077738a32e6107cf28"}], "stats": {"total": 10, "additions": 8, "deletions": 2}, "files": [{"sha": "6a1e9538a11e7617d6e0e452bdedb362b0555d97", "filename": "gcc/tree.c", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ac876be7e72c91dbbea0ad4041ca6039424eca9/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ac876be7e72c91dbbea0ad4041ca6039424eca9/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=1ac876be7e72c91dbbea0ad4041ca6039424eca9", "patch": "@@ -1502,6 +1502,7 @@ integer_zerop (expr)\n   STRIP_NOPS (expr);\n \n   return ((TREE_CODE (expr) == INTEGER_CST\n+\t   && ! TREE_CONSTANT_OVERFLOW (expr)\n \t   && TREE_INT_CST_LOW (expr) == 0\n \t   && TREE_INT_CST_HIGH (expr) == 0)\n \t  || (TREE_CODE (expr) == COMPLEX_CST\n@@ -1519,6 +1520,7 @@ integer_onep (expr)\n   STRIP_NOPS (expr);\n \n   return ((TREE_CODE (expr) == INTEGER_CST\n+\t   && ! TREE_CONSTANT_OVERFLOW (expr)\n \t   && TREE_INT_CST_LOW (expr) == 1\n \t   && TREE_INT_CST_HIGH (expr) == 0)\n \t  || (TREE_CODE (expr) == COMPLEX_CST\n@@ -1543,7 +1545,8 @@ integer_all_onesp (expr)\n       && integer_zerop (TREE_IMAGPART (expr)))\n     return 1;\n \n-  else if (TREE_CODE (expr) != INTEGER_CST)\n+  else if (TREE_CODE (expr) != INTEGER_CST\n+\t   || TREE_CONSTANT_OVERFLOW (expr))\n     return 0;\n \n   uns = TREE_UNSIGNED (TREE_TYPE (expr));\n@@ -1592,7 +1595,7 @@ integer_pow2p (expr)\n       && integer_zerop (TREE_IMAGPART (expr)))\n     return 1;\n \n-  if (TREE_CODE (expr) != INTEGER_CST)\n+  if (TREE_CODE (expr) != INTEGER_CST || TREE_CONSTANT_OVERFLOW (expr))\n     return 0;\n \n   high = TREE_INT_CST_HIGH (expr);\n@@ -1614,6 +1617,7 @@ real_zerop (expr)\n   STRIP_NOPS (expr);\n \n   return ((TREE_CODE (expr) == REAL_CST\n+\t   && ! TREE_CONSTANT_OVERFLOW (expr)\n \t   && REAL_VALUES_EQUAL (TREE_REAL_CST (expr), dconst0))\n \t  || (TREE_CODE (expr) == COMPLEX_CST\n \t      && real_zerop (TREE_REALPART (expr))\n@@ -1629,6 +1633,7 @@ real_onep (expr)\n   STRIP_NOPS (expr);\n \n   return ((TREE_CODE (expr) == REAL_CST\n+\t   && ! TREE_CONSTANT_OVERFLOW (expr)\n \t   && REAL_VALUES_EQUAL (TREE_REAL_CST (expr), dconst1))\n \t  || (TREE_CODE (expr) == COMPLEX_CST\n \t      && real_onep (TREE_REALPART (expr))\n@@ -1644,6 +1649,7 @@ real_twop (expr)\n   STRIP_NOPS (expr);\n \n   return ((TREE_CODE (expr) == REAL_CST\n+\t   && ! TREE_CONSTANT_OVERFLOW (expr)\n \t   && REAL_VALUES_EQUAL (TREE_REAL_CST (expr), dconst2))\n \t  || (TREE_CODE (expr) == COMPLEX_CST\n \t      && real_twop (TREE_REALPART (expr))"}]}