{"sha": "ce4191eed16e15397cc09bba95d8ef603ba05359", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2U0MTkxZWVkMTZlMTUzOTdjYzA5YmJhOTVkOGVmNjAzYmEwNTM1OQ==", "commit": {"author": {"name": "Roger Sayle", "email": "roger@eyesopen.com", "date": "2003-11-09T14:33:20Z"}, "committer": {"name": "Roger Sayle", "email": "sayle@gcc.gnu.org", "date": "2003-11-09T14:33:20Z"}, "message": "loop.c (check_dbra_loop): Try swapping the comparison operands of the loop condition to identify a...\n\n\n\t* loop.c (check_dbra_loop): Try swapping the comparison operands\n\tof the loop condition to identify a suitable induction variable.\n\t* unroll.c (loop_iterations): Likewise.\n\nFrom-SVN: r73391", "tree": {"sha": "c993edb42c75d10e8adc5feee8d68fa2f583bc7e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c993edb42c75d10e8adc5feee8d68fa2f583bc7e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ce4191eed16e15397cc09bba95d8ef603ba05359", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce4191eed16e15397cc09bba95d8ef603ba05359", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce4191eed16e15397cc09bba95d8ef603ba05359", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce4191eed16e15397cc09bba95d8ef603ba05359/comments", "author": null, "committer": null, "parents": [{"sha": "8b93ca2dd22f8e6d2c3a5ab70d5d79c6ee6b665a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b93ca2dd22f8e6d2c3a5ab70d5d79c6ee6b665a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8b93ca2dd22f8e6d2c3a5ab70d5d79c6ee6b665a"}], "stats": {"total": 37, "additions": 36, "deletions": 1}, "files": [{"sha": "8603eb5aeb6b59a1266777858d8a88db6b9c158d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce4191eed16e15397cc09bba95d8ef603ba05359/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce4191eed16e15397cc09bba95d8ef603ba05359/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ce4191eed16e15397cc09bba95d8ef603ba05359", "patch": "@@ -1,3 +1,9 @@\n+2003-11-09  Roger Sayle  <roger@eyesopen.com>\n+\n+\t* loop.c (check_dbra_loop): Try swapping the comparison operands\n+\tof the loop condition to identify a suitable induction variable.\n+\t* unroll.c (loop_iterations): Likewise.\n+\n 2003-11-09  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* config/sparc/sparc.h (TARGET_CPU_CPP_BUILTINS): Fix sparc vs"}, {"sha": "159906d3747e6feb15c488a882bbc23b2b9adf0f", "filename": "gcc/loop.c", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce4191eed16e15397cc09bba95d8ef603ba05359/gcc%2Floop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce4191eed16e15397cc09bba95d8ef603ba05359/gcc%2Floop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop.c?ref=ce4191eed16e15397cc09bba95d8ef603ba05359", "patch": "@@ -8017,6 +8017,22 @@ check_dbra_loop (struct loop *loop, int insn_count)\n \tbreak;\n     }\n \n+  /* Try swapping the comparison to identify a suitable biv.  */\n+  if (!bl)\n+    for (bl = ivs->list; bl; bl = bl->next)\n+      if (bl->biv_count == 1\n+\t  && ! bl->biv->maybe_multiple\n+\t  && bl->biv->dest_reg == XEXP (comparison, 1)\n+\t  && ! reg_used_between_p (regno_reg_rtx[bl->regno], bl->biv->insn,\n+\t\t\t\t   first_compare))\n+\t{\n+\t  comparison = gen_rtx_fmt_ee (swap_condition (GET_CODE (comparison)),\n+\t\t\t\t       VOIDmode,\n+\t\t\t\t       XEXP (comparison, 1),\n+\t\t\t\t       XEXP (comparison, 0));\n+\t  break;\n+\t}\n+\n   if (! bl)\n     return 0;\n "}, {"sha": "cc415a795b6376b657c8df0778d6fff7d6d400b9", "filename": "gcc/unroll.c", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce4191eed16e15397cc09bba95d8ef603ba05359/gcc%2Funroll.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce4191eed16e15397cc09bba95d8ef603ba05359/gcc%2Funroll.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Funroll.c?ref=ce4191eed16e15397cc09bba95d8ef603ba05359", "patch": "@@ -3421,7 +3421,20 @@ loop_iterations (struct loop *loop)\n \t\t \"Loop iterations: Iteration var not an integer.\\n\");\n       return 0;\n     }\n-  else if (REG_IV_TYPE (ivs, REGNO (iteration_var)) == BASIC_INDUCT)\n+\n+  /* Try swapping the comparison to identify a suitable iv.  */\n+  if (REG_IV_TYPE (ivs, REGNO (iteration_var)) != BASIC_INDUCT\n+      && REG_IV_TYPE (ivs, REGNO (iteration_var)) != GENERAL_INDUCT\n+      && GET_CODE (comparison_value) == REG\n+      && REGNO (comparison_value) < ivs->n_regs)\n+    {\n+      rtx temp = comparison_value;\n+      comparison_code = swap_condition (comparison_code);\n+      comparison_value = iteration_var;\n+      iteration_var = temp;\n+    }\n+\n+  if (REG_IV_TYPE (ivs, REGNO (iteration_var)) == BASIC_INDUCT)\n     {\n       if (REGNO (iteration_var) >= ivs->n_regs)\n \tabort ();"}]}