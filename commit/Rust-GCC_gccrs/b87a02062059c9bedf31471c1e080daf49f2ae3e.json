{"sha": "b87a02062059c9bedf31471c1e080daf49f2ae3e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yjg3YTAyMDYyMDU5YzliZWRmMzE0NzFjMWUwODBkYWY0OWYyYWUzZQ==", "commit": {"author": {"name": "Roger Sayle", "email": "roger@eyesopen.com", "date": "2005-03-15T04:24:02Z"}, "committer": {"name": "Roger Sayle", "email": "sayle@gcc.gnu.org", "date": "2005-03-15T04:24:02Z"}, "message": "real.h (struct real_format): Split the signbit field into two two fields, signbit_ro and signbit_rw.\n\n\n\t* real.h (struct real_format): Split the signbit field into two\n\ttwo fields, signbit_ro and signbit_rw.\n\t* real.c (ieee_single_format, mips_single_format, ieee_double_format,\n\tmips_double_format, ieee_extended_motorola_format,\n\tieee_extended_intel_96_format, ieee_extended_intel_96_round_53_format,\n\tieee_extended_intel_128_format, ibm_extended_format,\n\tmips_extended_format, ieee_quad_format, mips_quad_format,\n\tvax_f_format, vax_d_format, vax_g_format, i370_single_format,\n\ti370_double_format, c4x_single_format, c4x_extended_format,\n\treal_internal_format): Update initializers for new field.\n\t* builtins.c (expand_builtin_signbit): Use signbit_ro field of the\n\treal_format structure.\n\t* optabs.c (expand_absneg_bit, expand_copysign): Use signbit_rw\n\tfield of the real_format structure.\n\nFrom-SVN: r96471", "tree": {"sha": "fd1306387b9c3baa836922299f7959de1d960916", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fd1306387b9c3baa836922299f7959de1d960916"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b87a02062059c9bedf31471c1e080daf49f2ae3e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b87a02062059c9bedf31471c1e080daf49f2ae3e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b87a02062059c9bedf31471c1e080daf49f2ae3e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b87a02062059c9bedf31471c1e080daf49f2ae3e/comments", "author": null, "committer": null, "parents": [{"sha": "223c8158927a356b3a49eaa209c3ba9f57a0c6dd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/223c8158927a356b3a49eaa209c3ba9f57a0c6dd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/223c8158927a356b3a49eaa209c3ba9f57a0c6dd"}], "stats": {"total": 52, "additions": 47, "deletions": 5}, "files": [{"sha": "8a3f9c6c62fc6862242ccebe40791f436e1f75a6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b87a02062059c9bedf31471c1e080daf49f2ae3e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b87a02062059c9bedf31471c1e080daf49f2ae3e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b87a02062059c9bedf31471c1e080daf49f2ae3e", "patch": "@@ -1,3 +1,20 @@\n+2005-03-14  Roger Sayle  <roger@eyesopen.com>\n+\n+\t* real.h (struct real_format): Split the signbit field into two\n+\ttwo fields, signbit_ro and signbit_rw.\n+\t* real.c (ieee_single_format, mips_single_format, ieee_double_format,\n+\tmips_double_format, ieee_extended_motorola_format,\n+\tieee_extended_intel_96_format, ieee_extended_intel_96_round_53_format,\n+\tieee_extended_intel_128_format, ibm_extended_format,\n+\tmips_extended_format, ieee_quad_format, mips_quad_format,\n+\tvax_f_format, vax_d_format, vax_g_format, i370_single_format,\n+\ti370_double_format, c4x_single_format, c4x_extended_format,\n+\treal_internal_format): Update initializers for new field.\n+\t* builtins.c (expand_builtin_signbit): Use signbit_ro field of the\n+\treal_format structure.\n+\t* optabs.c (expand_absneg_bit, expand_copysign): Use signbit_rw\n+\tfield of the real_format structure.\n+\n 2005-03-14  Daniel Berlin <dberlin@dberlin.org>\n \n \tFix PR tree-optimization/20458"}, {"sha": "c00fe1c6357027f772a2728d34ae9d668d9e59a3", "filename": "gcc/builtins.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b87a02062059c9bedf31471c1e080daf49f2ae3e/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b87a02062059c9bedf31471c1e080daf49f2ae3e/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=b87a02062059c9bedf31471c1e080daf49f2ae3e", "patch": "@@ -4969,7 +4969,7 @@ expand_builtin_signbit (tree exp, rtx target)\n \n   /* For floating point formats without a sign bit, implement signbit\n      as \"ARG < 0.0\".  */\n-  bitpos = fmt->signbit;\n+  bitpos = fmt->signbit_ro;\n   if (bitpos < 0)\n   {\n     /* But we can't do this if the format supports signed zero.  */"}, {"sha": "d41a234de6b8d2cd36f6628616ed62f4451cd591", "filename": "gcc/optabs.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b87a02062059c9bedf31471c1e080daf49f2ae3e/gcc%2Foptabs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b87a02062059c9bedf31471c1e080daf49f2ae3e/gcc%2Foptabs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foptabs.c?ref=b87a02062059c9bedf31471c1e080daf49f2ae3e", "patch": "@@ -2182,7 +2182,7 @@ expand_absneg_bit (enum rtx_code code, enum machine_mode mode,\n   if (fmt == NULL)\n     return NULL_RTX;\n \n-  bitpos = fmt->signbit;\n+  bitpos = fmt->signbit_rw;\n   if (bitpos < 0)\n     return NULL_RTX;\n \n@@ -2882,7 +2882,7 @@ expand_copysign (rtx op0, rtx op1, rtx target)\n   if (fmt == NULL || !fmt->has_signed_zero)\n     return NULL_RTX;\n \n-  bitpos = fmt->signbit;\n+  bitpos = fmt->signbit_rw;\n   if (bitpos < 0)\n     return NULL_RTX;\n "}, {"sha": "bed2fb09301abeaa0f476f8cea830ca02c5995cd", "filename": "gcc/real.c", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b87a02062059c9bedf31471c1e080daf49f2ae3e/gcc%2Freal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b87a02062059c9bedf31471c1e080daf49f2ae3e/gcc%2Freal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freal.c?ref=b87a02062059c9bedf31471c1e080daf49f2ae3e", "patch": "@@ -2651,6 +2651,7 @@ const struct real_format ieee_single_format =\n     -125,\n     128,\n     31,\n+    31,\n     true,\n     true,\n     true,\n@@ -2669,6 +2670,7 @@ const struct real_format mips_single_format =\n     -125,\n     128,\n     31,\n+    31,\n     true,\n     true,\n     true,\n@@ -2874,6 +2876,7 @@ const struct real_format ieee_double_format =\n     -1021,\n     1024,\n     63,\n+    63,\n     true,\n     true,\n     true,\n@@ -2892,6 +2895,7 @@ const struct real_format mips_double_format =\n     -1021,\n     1024,\n     63,\n+    63,\n     true,\n     true,\n     true,\n@@ -3221,6 +3225,7 @@ const struct real_format ieee_extended_motorola_format =\n     -16382,\n     16384,\n     95,\n+    95,\n     true,\n     true,\n     true,\n@@ -3239,6 +3244,7 @@ const struct real_format ieee_extended_intel_96_format =\n     -16381,\n     16384,\n     79,\n+    79,\n     true,\n     true,\n     true,\n@@ -3257,6 +3263,7 @@ const struct real_format ieee_extended_intel_128_format =\n     -16381,\n     16384,\n     79,\n+    79,\n     true,\n     true,\n     true,\n@@ -3277,6 +3284,7 @@ const struct real_format ieee_extended_intel_96_round_53_format =\n     -16381,\n     16384,\n     79,\n+    79,\n     true,\n     true,\n     true,\n@@ -3361,6 +3369,7 @@ const struct real_format ibm_extended_format =\n     53,\n     -1021 + 53,\n     1024,\n+    127,\n     -1,\n     true,\n     true,\n@@ -3379,6 +3388,7 @@ const struct real_format mips_extended_format =\n     53,\n     -1021 + 53,\n     1024,\n+    127,\n     -1,\n     true,\n     true,\n@@ -3646,6 +3656,7 @@ const struct real_format ieee_quad_format =\n     -16381,\n     16384,\n     127,\n+    127,\n     true,\n     true,\n     true,\n@@ -3664,6 +3675,7 @@ const struct real_format mips_quad_format =\n     -16381,\n     16384,\n     127,\n+    127,\n     true,\n     true,\n     true,\n@@ -3961,6 +3973,7 @@ const struct real_format vax_f_format =\n     -127,\n     127,\n     15,\n+    15,\n     false,\n     false,\n     false,\n@@ -3979,6 +3992,7 @@ const struct real_format vax_d_format =\n     -127,\n     127,\n     15,\n+    15,\n     false,\n     false,\n     false,\n@@ -3997,6 +4011,7 @@ const struct real_format vax_g_format =\n     -1023,\n     1023,\n     15,\n+    15,\n     false,\n     false,\n     false,\n@@ -4172,6 +4187,7 @@ const struct real_format i370_single_format =\n     -64,\n     63,\n     31,\n+    31,\n     false,\n     false,\n     false, /* ??? The encoding does allow for \"unnormals\".  */\n@@ -4190,6 +4206,7 @@ const struct real_format i370_double_format =\n     -64,\n     63,\n     63,\n+    63,\n     false,\n     false,\n     false, /* ??? The encoding does allow for \"unnormals\".  */\n@@ -4398,6 +4415,7 @@ const struct real_format c4x_single_format =\n     -126,\n     128,\n     -1,\n+    -1,\n     false,\n     false,\n     false,\n@@ -4416,6 +4434,7 @@ const struct real_format c4x_extended_format =\n     -126,\n     128,\n     -1,\n+    -1,\n     false,\n     false,\n     false,\n@@ -4459,6 +4478,7 @@ const struct real_format real_internal_format =\n     -MAX_EXP,\n     MAX_EXP,\n     -1,\n+    -1,\n     true,\n     true,\n     false,"}, {"sha": "9e52c6d5b8cf739733c48d1592425447f7e53be6", "filename": "gcc/real.h", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b87a02062059c9bedf31471c1e080daf49f2ae3e/gcc%2Freal.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b87a02062059c9bedf31471c1e080daf49f2ae3e/gcc%2Freal.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freal.h?ref=b87a02062059c9bedf31471c1e080daf49f2ae3e", "patch": "@@ -138,8 +138,13 @@ struct real_format\n   /* The maximum integer, x, such that b**(x-1) is representable.  */\n   int emax;\n \n-  /* The bit position of the sign bit, or -1 for a complex encoding.  */\n-  int signbit;\n+  /* The bit position of the sign bit, for determining whether a value\n+     is positive/negative, or -1 for a complex encoding.  */\n+  int signbit_ro;\n+\n+  /* The bit position of the sign bit, for changing the sign of a number,\n+     or -1 for a complex encoding.  */\n+  int signbit_rw;\n \n   /* Properties of the format.  */\n   bool has_nans;"}]}