{"sha": "b811915de18ac5837e60898cf05cbb428dc35ead", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjgxMTkxNWRlMThhYzU4MzdlNjA4OThjZjA1Y2JiNDI4ZGMzNWVhZA==", "commit": {"author": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2015-04-29T15:44:41Z"}, "committer": {"name": "Thomas Schwinge", "email": "tschwinge@gcc.gnu.org", "date": "2015-04-29T15:44:41Z"}, "message": "Add OMP_STANDALONE_CLAUSES.\n\n\tgcc/\n\t* tree.h (OMP_STANDALONE_CLAUSES): New macro.\n\t* gimplify.c (gimplify_omp_workshare): Use it.\n\tgcc/c/\n\t* c-parser.c (c_parser_oacc_enter_exit_data): Use\n\tOMP_STANDALONE_CLAUSES.\n\tgcc/cp/\n\t* parser.c (cp_parser_oacc_enter_exit_data): Use\n\tOMP_STANDALONE_CLAUSES.\n\nFrom-SVN: r222580", "tree": {"sha": "5d32459e9ed3ee300bc31e8c1358d46db24be2d7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5d32459e9ed3ee300bc31e8c1358d46db24be2d7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b811915de18ac5837e60898cf05cbb428dc35ead", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b811915de18ac5837e60898cf05cbb428dc35ead", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b811915de18ac5837e60898cf05cbb428dc35ead", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b811915de18ac5837e60898cf05cbb428dc35ead/comments", "author": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f970a17d6fc79eda660c78632ceff35d814933a8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f970a17d6fc79eda660c78632ceff35d814933a8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f970a17d6fc79eda660c78632ceff35d814933a8"}], "stats": {"total": 44, "additions": 28, "deletions": 16}, "files": [{"sha": "11cb62ae7bbafee11055fc196d264cb06f86490d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b811915de18ac5837e60898cf05cbb428dc35ead/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b811915de18ac5837e60898cf05cbb428dc35ead/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b811915de18ac5837e60898cf05cbb428dc35ead", "patch": "@@ -1,3 +1,8 @@\n+2015-04-29  Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\t* tree.h (OMP_STANDALONE_CLAUSES): New macro.\n+\t* gimplify.c (gimplify_omp_workshare): Use it.\n+\n 2015-04-29  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* Makefile.in (build/genrecog.o): Depend on inchash.h."}, {"sha": "6d8dbb1b1356c137813da566e13e0853f7c73acc", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b811915de18ac5837e60898cf05cbb428dc35ead/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b811915de18ac5837e60898cf05cbb428dc35ead/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=b811915de18ac5837e60898cf05cbb428dc35ead", "patch": "@@ -1,3 +1,8 @@\n+2015-04-29  Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\t* c-parser.c (c_parser_oacc_enter_exit_data): Use\n+\tOMP_STANDALONE_CLAUSES.\n+\n 2015-04-28  Marek Polacek  <polacek@redhat.com>\n \n \t* c-parser.c (c_parser_binary_expression): Remove duplicate line."}, {"sha": "bf0e4c577cc085cc4b3c75ba89b7191554669fdc", "filename": "gcc/c/c-parser.c", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b811915de18ac5837e60898cf05cbb428dc35ead/gcc%2Fc%2Fc-parser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b811915de18ac5837e60898cf05cbb428dc35ead/gcc%2Fc%2Fc-parser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-parser.c?ref=b811915de18ac5837e60898cf05cbb428dc35ead", "patch": "@@ -12154,10 +12154,7 @@ c_parser_oacc_enter_exit_data (c_parser *parser, bool enter)\n \n   stmt = enter ? make_node (OACC_ENTER_DATA) : make_node (OACC_EXIT_DATA);\n   TREE_TYPE (stmt) = void_type_node;\n-  if (enter)\n-    OACC_ENTER_DATA_CLAUSES (stmt) = clauses;\n-  else\n-    OACC_EXIT_DATA_CLAUSES (stmt) = clauses;\n+  OMP_STANDALONE_CLAUSES (stmt) = clauses;\n   SET_EXPR_LOCATION (stmt, loc);\n   add_stmt (stmt);\n }"}, {"sha": "9442faa9c40722203f20d1cf925a7134d80e6438", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b811915de18ac5837e60898cf05cbb428dc35ead/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b811915de18ac5837e60898cf05cbb428dc35ead/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=b811915de18ac5837e60898cf05cbb428dc35ead", "patch": "@@ -1,3 +1,8 @@\n+2015-04-29  Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\t* parser.c (cp_parser_oacc_enter_exit_data): Use\n+\tOMP_STANDALONE_CLAUSES.\n+\n 2015-04-29  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/64667"}, {"sha": "cfb512be8e745cff6c0b670d5f5edb5f64c36a52", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b811915de18ac5837e60898cf05cbb428dc35ead/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b811915de18ac5837e60898cf05cbb428dc35ead/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=b811915de18ac5837e60898cf05cbb428dc35ead", "patch": "@@ -31606,10 +31606,7 @@ cp_parser_oacc_enter_exit_data (cp_parser *parser, cp_token *pragma_tok,\n \n   stmt = enter ? make_node (OACC_ENTER_DATA) : make_node (OACC_EXIT_DATA);\n   TREE_TYPE (stmt) = void_type_node;\n-  if (enter)\n-    OACC_ENTER_DATA_CLAUSES (stmt) = clauses;\n-  else\n-    OACC_EXIT_DATA_CLAUSES (stmt) = clauses;\n+  OMP_STANDALONE_CLAUSES (stmt) = clauses;\n   SET_EXPR_LOCATION (stmt, pragma_tok->location);\n   add_stmt (stmt);\n   return stmt;"}, {"sha": "9ce3dd973ccb84ebedc28d47d9c713374398e07f", "filename": "gcc/gimplify.c", "status": "modified", "additions": 5, "deletions": 8, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b811915de18ac5837e60898cf05cbb428dc35ead/gcc%2Fgimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b811915de18ac5837e60898cf05cbb428dc35ead/gcc%2Fgimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.c?ref=b811915de18ac5837e60898cf05cbb428dc35ead", "patch": "@@ -7411,34 +7411,31 @@ gimplify_omp_workshare (tree *expr_p, gimple_seq *pre_p)\n static void\n gimplify_omp_target_update (tree *expr_p, gimple_seq *pre_p)\n {\n-  tree expr = *expr_p, clauses;\n+  tree expr = *expr_p;\n   int kind;\n   gomp_target *stmt;\n \n   switch (TREE_CODE (expr))\n     {\n     case OACC_ENTER_DATA:\n-      clauses = OACC_ENTER_DATA_CLAUSES (expr);\n       kind = GF_OMP_TARGET_KIND_OACC_ENTER_EXIT_DATA;\n       break;\n     case OACC_EXIT_DATA:\n-      clauses = OACC_EXIT_DATA_CLAUSES (expr);\n       kind = GF_OMP_TARGET_KIND_OACC_ENTER_EXIT_DATA;\n       break;\n     case OACC_UPDATE:\n-      clauses = OACC_UPDATE_CLAUSES (expr);\n       kind = GF_OMP_TARGET_KIND_OACC_UPDATE;\n       break;\n     case OMP_TARGET_UPDATE:\n-      clauses = OMP_TARGET_UPDATE_CLAUSES (expr);\n       kind = GF_OMP_TARGET_KIND_UPDATE;\n       break;\n     default:\n       gcc_unreachable ();\n     }\n-  gimplify_scan_omp_clauses (&clauses, pre_p, ORT_WORKSHARE);\n-  gimplify_adjust_omp_clauses (pre_p, &clauses);\n-  stmt = gimple_build_omp_target (NULL, kind, clauses);\n+  gimplify_scan_omp_clauses (&OMP_STANDALONE_CLAUSES (expr), pre_p,\n+\t\t\t     ORT_WORKSHARE);\n+  gimplify_adjust_omp_clauses (pre_p, &OMP_STANDALONE_CLAUSES (expr));\n+  stmt = gimple_build_omp_target (NULL, kind, OMP_STANDALONE_CLAUSES (expr));\n \n   gimplify_seq_add_stmt (pre_p, stmt);\n   *expr_p = NULL_TREE;"}, {"sha": "e17bd9b1109bcbbef8ce918655e7d21b4d3aae5e", "filename": "gcc/tree.h", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b811915de18ac5837e60898cf05cbb428dc35ead/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b811915de18ac5837e60898cf05cbb428dc35ead/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=b811915de18ac5837e60898cf05cbb428dc35ead", "patch": "@@ -1197,11 +1197,17 @@ extern void protected_set_expr_location (tree, location_t);\n \n /* OpenMP and OpenACC directive and clause accessors.  */\n \n+/* Generic accessors for OMP nodes that keep the body as operand 0, and clauses\n+   as operand 1.  */\n #define OMP_BODY(NODE) \\\n   TREE_OPERAND (TREE_RANGE_CHECK (NODE, OACC_PARALLEL, OMP_CRITICAL), 0)\n #define OMP_CLAUSES(NODE) \\\n   TREE_OPERAND (TREE_RANGE_CHECK (NODE, OACC_PARALLEL, OMP_SINGLE), 1)\n \n+/* Generic accessors for OMP nodes that keep clauses as operand 0.  */\n+#define OMP_STANDALONE_CLAUSES(NODE) \\\n+  TREE_OPERAND (TREE_RANGE_CHECK (NODE, OACC_CACHE, OMP_TARGET_UPDATE), 0)\n+\n #define OACC_PARALLEL_BODY(NODE) \\\n   TREE_OPERAND (OACC_PARALLEL_CHECK (NODE), 0)\n #define OACC_PARALLEL_CLAUSES(NODE) \\"}]}