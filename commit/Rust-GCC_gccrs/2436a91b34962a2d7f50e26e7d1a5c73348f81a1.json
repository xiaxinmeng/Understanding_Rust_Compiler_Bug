{"sha": "2436a91b34962a2d7f50e26e7d1a5c73348f81a1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjQzNmE5MWIzNDk2MmEyZDdmNTBlMjZlN2QxYTVjNzMzNDhmODFhMQ==", "commit": {"author": {"name": "Ulrich Weigand", "email": "uweigand@de.ibm.com", "date": "2003-03-15T16:30:35Z"}, "committer": {"name": "Ulrich Weigand", "email": "uweigand@gcc.gnu.org", "date": "2003-03-15T16:30:35Z"}, "message": "varasm.c (struct rtx_const): Change type of un.addr member to struct holding an additional 'symbol' member.\n\n\t* varasm.c (struct rtx_const): Change type of un.addr member\n\tto struct holding an additional 'symbol' member.\n\t(decode_rtx_const): Re-enable optimization to count SYMBOL_REFs\n\twith equal string addresses as equal.\n\t(simplify_subtraction): Adapt to struct rtx_const change.\n\nFrom-SVN: r64406", "tree": {"sha": "2e28ee11d5a782b5d18763bde026592f748f71e1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2e28ee11d5a782b5d18763bde026592f748f71e1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2436a91b34962a2d7f50e26e7d1a5c73348f81a1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2436a91b34962a2d7f50e26e7d1a5c73348f81a1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2436a91b34962a2d7f50e26e7d1a5c73348f81a1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2436a91b34962a2d7f50e26e7d1a5c73348f81a1/comments", "author": null, "committer": null, "parents": [{"sha": "af6fd53f5acd8afb55f6fd3053bf853c9cd1e966", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af6fd53f5acd8afb55f6fd3053bf853c9cd1e966", "html_url": "https://github.com/Rust-GCC/gccrs/commit/af6fd53f5acd8afb55f6fd3053bf853c9cd1e966"}], "stats": {"total": 22, "additions": 17, "deletions": 5}, "files": [{"sha": "b2ffd69800f3a810d48a514f9ae931b66cf4e5c5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2436a91b34962a2d7f50e26e7d1a5c73348f81a1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2436a91b34962a2d7f50e26e7d1a5c73348f81a1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2436a91b34962a2d7f50e26e7d1a5c73348f81a1", "patch": "@@ -1,3 +1,11 @@\n+2003-03-15  Ulrich Weigand  <uweigand@de.ibm.com>\n+\n+\t* varasm.c (struct rtx_const): Change type of un.addr member\n+\tto struct holding an additional 'symbol' member.\n+\t(decode_rtx_const): Re-enable optimization to count SYMBOL_REFs\n+\twith equal string addresses as equal.\n+\t(simplify_subtraction): Adapt to struct rtx_const change.\n+\n 2003-03-15  Neil Booth  <neil@daikokuya.co.uk>\n \n \t* fix-header.c (read_scan_file): Read main file before handling -D."}, {"sha": "fc6f467a04fc4972b12075bb5e0430648ecd2ef3", "filename": "gcc/varasm.c", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2436a91b34962a2d7f50e26e7d1a5c73348f81a1/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2436a91b34962a2d7f50e26e7d1a5c73348f81a1/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=2436a91b34962a2d7f50e26e7d1a5c73348f81a1", "patch": "@@ -2115,7 +2115,11 @@ struct rtx_const GTY(())\n   ENUM_BITFIELD(machine_mode) mode : 16;\n   union rtx_const_un {\n     REAL_VALUE_TYPE GTY ((tag (\"4\"))) du;\n-    struct addr_const GTY ((tag (\"1\"))) addr;\n+    struct rtx_const_u_addr {\n+      rtx base;\n+      const char *symbol;\n+      HOST_WIDE_INT offset;\n+    } GTY ((tag (\"1\"))) addr;\n     struct rtx_const_u_di {\n       HOST_WIDE_INT high;\n       HOST_WIDE_INT low;\n@@ -3045,13 +3049,12 @@ decode_rtx_const (mode, x, value)\n   if (value->kind >= RTX_INT && value->un.addr.base != 0)\n     switch (GET_CODE (value->un.addr.base))\n       {\n-#if 0\n       case SYMBOL_REF:\n \t/* Use the string's address, not the SYMBOL_REF's address,\n \t   for the sake of addresses of library routines.  */\n-\tvalue->un.addr.base = (rtx) XSTR (value->un.addr.base, 0);\n+\tvalue->un.addr.symbol = XSTR (value->un.addr.base, 0);\n+\tvalue->un.addr.base = NULL_RTX;\n \tbreak;\n-#endif\n \n       case LABEL_REF:\n \t/* For a LABEL_REF, compare labels.  */\n@@ -3076,7 +3079,8 @@ simplify_subtraction (x)\n \n   if (val0.kind >= RTX_INT\n       && val0.kind == val1.kind\n-      && val0.un.addr.base == val1.un.addr.base)\n+      && val0.un.addr.base == val1.un.addr.base\n+      && val0.un.addr.symbol == val1.un.addr.symbol)\n     return GEN_INT (val0.un.addr.offset - val1.un.addr.offset);\n \n   return x;"}]}