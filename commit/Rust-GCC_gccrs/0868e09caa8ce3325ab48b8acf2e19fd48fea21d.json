{"sha": "0868e09caa8ce3325ab48b8acf2e19fd48fea21d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDg2OGUwOWNhYThjZTMzMjVhYjQ4YjhhY2YyZTE5ZmQ0OGZlYTIxZA==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@gnat.com", "date": "2001-10-12T00:21:40Z"}, "committer": {"name": "Geert Bosch", "email": "bosch@gcc.gnu.org", "date": "2001-10-12T00:21:40Z"}, "message": "restrict.adb (Disallow in No_Run_Time_Mode): Properly specialize the error message for high integrity mode.\n\n\t* restrict.adb (Disallow in No_Run_Time_Mode): Properly specialize\n\tthe error message for high integrity mode.\n\n\t* rtsfind.adb (RTE): Give message if we try to find an entity that\n\tis not available in high integrity mode.\n\n\t* rtsfind.ads:\n\t(OK_To_Use_In_HIE_Mode): New array.\n\t(RTE): May return Empty in high integrity mode.\n\n\t* rtsfind.ads (OK_To_Use_In_No_Run_Time_Mode): New name for\n\tOK_To_Use_In_HIE_Mode, now includes System_FAT_xxx.\n\n\t* sem_ch6.adb (Analyze_Subprogram_Body): Kill body in predefined\n\tunit if not inlined always and in no runtime mode. Fixes problem\n\tcaused by new Rtsfind changes.\n\n\t* sem_ch6.adb (Analyze_Subrogram_Body): Do not Check_References if\n\tbody is deleted.\n\n\t* rtsfind.adb (RTE): Make sure we do not try to load unit after\n\tgiving message for entity not available in high integrity mode.\n\nFrom-SVN: r46214", "tree": {"sha": "0f89902e80ebe7075531f1ea0945930034fb97aa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0f89902e80ebe7075531f1ea0945930034fb97aa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0868e09caa8ce3325ab48b8acf2e19fd48fea21d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0868e09caa8ce3325ab48b8acf2e19fd48fea21d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0868e09caa8ce3325ab48b8acf2e19fd48fea21d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0868e09caa8ce3325ab48b8acf2e19fd48fea21d/comments", "author": null, "committer": null, "parents": [{"sha": "934abf9c1f9ae8d393ba3649d6b63143a80c7be9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/934abf9c1f9ae8d393ba3649d6b63143a80c7be9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/934abf9c1f9ae8d393ba3649d6b63143a80c7be9"}], "stats": {"total": 219, "additions": 167, "deletions": 52}, "files": [{"sha": "b21f3c51ae541f04bee02d93e89014596b4fd493", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0868e09caa8ce3325ab48b8acf2e19fd48fea21d/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0868e09caa8ce3325ab48b8acf2e19fd48fea21d/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=0868e09caa8ce3325ab48b8acf2e19fd48fea21d", "patch": "@@ -1,3 +1,28 @@\n+2001-10-11  Robert Dewar <dewar@gnat.com>\n+\n+\t* restrict.adb (Disallow in No_Run_Time_Mode): Properly specialize \n+\tthe error message for high integrity mode.\n+\t\n+\t* rtsfind.adb (RTE): Give message if we try to find an entity that \n+\tis not available in high integrity mode.\n+\t\n+\t* rtsfind.ads:\n+\t(OK_To_Use_In_HIE_Mode): New array.\n+\t(RTE): May return Empty in high integrity mode.\n+\t\n+\t* rtsfind.ads (OK_To_Use_In_No_Run_Time_Mode): New name for \n+\tOK_To_Use_In_HIE_Mode, now includes System_FAT_xxx. \n+\t\n+\t* sem_ch6.adb (Analyze_Subprogram_Body): Kill body in predefined \n+\tunit if not inlined always and in no runtime mode. Fixes problem \n+\tcaused by new Rtsfind changes.\n+\t\n+\t* sem_ch6.adb (Analyze_Subrogram_Body): Do not Check_References if \n+\tbody is deleted.\n+\t\n+\t* rtsfind.adb (RTE): Make sure we do not try to load unit after \n+\tgiving message for entity not available in high integrity mode.\n+\n 2001-10-11  Pascal Obry <obry@gnat.com>\n \t\n \t* impunit.adb: Add GNAT.CRC32."}, {"sha": "05140887a9899c9a98c638788a6febeeabd3cd73", "filename": "gcc/ada/restrict.adb", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0868e09caa8ce3325ab48b8acf2e19fd48fea21d/gcc%2Fada%2Frestrict.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0868e09caa8ce3325ab48b8acf2e19fd48fea21d/gcc%2Fada%2Frestrict.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frestrict.adb?ref=0868e09caa8ce3325ab48b8acf2e19fd48fea21d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                            $Revision: 1.37 $\n+--                            $Revision$\n --                                                                          --\n --          Copyright (C) 1992-2001 Free Software Foundation, Inc.          --\n --                                                                          --\n@@ -37,6 +37,7 @@ with Namet;    use Namet;\n with Nmake;    use Nmake;\n with Opt;      use Opt;\n with Stand;    use Stand;\n+with Targparm; use Targparm;\n with Uname;    use Uname;\n \n package body Restrict is\n@@ -266,8 +267,13 @@ package body Restrict is\n    procedure Disallow_In_No_Run_Time_Mode (Enode : Node_Id) is\n    begin\n       if No_Run_Time then\n-         Error_Msg_N\n-           (\"this construct not allowed in No_Run_Time mode\", Enode);\n+         if High_Integrity_Mode_On_Target then\n+            Error_Msg_N\n+              (\"this construct not allowed in high integrity mode\", Enode);\n+         else\n+            Error_Msg_N\n+              (\"this construct not allowed in No_Run_Time mode\", Enode);\n+         end if;\n       end if;\n    end Disallow_In_No_Run_Time_Mode;\n "}, {"sha": "08b6e5e2a18f4a649328f08f6c7dc10493f819b8", "filename": "gcc/ada/rtsfind.adb", "status": "modified", "additions": 53, "deletions": 35, "changes": 88, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0868e09caa8ce3325ab48b8acf2e19fd48fea21d/gcc%2Fada%2Frtsfind.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0868e09caa8ce3325ab48b8acf2e19fd48fea21d/gcc%2Fada%2Frtsfind.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frtsfind.adb?ref=0868e09caa8ce3325ab48b8acf2e19fd48fea21d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                            $Revision: 1.96 $\n+--                            $Revision$\n --                                                                          --\n --          Copyright (C) 1992-2001, Free Software Foundation, Inc.         --\n --                                                                          --\n@@ -26,30 +26,30 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n-with Atree;    use Atree;\n-with Casing;   use Casing;\n-with Csets;    use Csets;\n-with Debug;    use Debug;\n-with Einfo;    use Einfo;\n-with Elists;   use Elists;\n-with Fname;    use Fname;\n-with Fname.UF; use Fname.UF;\n-with Lib;      use Lib;\n-with Lib.Load; use Lib.Load;\n-with Namet;    use Namet;\n-with Nlists;   use Nlists;\n-with Nmake;    use Nmake;\n-with Output;   use Output;\n-with Opt;      use Opt;\n-with Restrict; use Restrict;\n-with Sem;      use Sem;\n-with Sem_Ch7;  use Sem_Ch7;\n-with Sem_Util; use Sem_Util;\n-with Sinfo;    use Sinfo;\n-with Stand;    use Stand;\n-with Snames;   use Snames;\n-with Tbuild;   use Tbuild;\n-with Uname;    use Uname;\n+with Atree;     use Atree;\n+with Casing;    use Casing;\n+with Csets;     use Csets;\n+with Debug;     use Debug;\n+with Einfo;     use Einfo;\n+with Elists;    use Elists;\n+with Fname;     use Fname;\n+with Fname.UF;  use Fname.UF;\n+with Lib;       use Lib;\n+with Lib.Load;  use Lib.Load;\n+with Namet;     use Namet;\n+with Nlists;    use Nlists;\n+with Nmake;     use Nmake;\n+with Output;    use Output;\n+with Opt;       use Opt;\n+with Restrict;  use Restrict;\n+with Sem;       use Sem;\n+with Sem_Ch7;   use Sem_Ch7;\n+with Sem_Util;  use Sem_Util;\n+with Sinfo;     use Sinfo;\n+with Stand;     use Stand;\n+with Snames;    use Snames;\n+with Tbuild;    use Tbuild;\n+with Uname;     use Uname;\n \n package body Rtsfind is\n \n@@ -581,7 +581,6 @@ package body Rtsfind is\n       Lib_Unit : Node_Id;\n       Pkg_Ent  : Entity_Id;\n       Ename    : Name_Id;\n-      Enode    : Node_Id;\n \n       procedure Check_RPC;\n       --  Reject programs that make use of distribution features not supported\n@@ -713,6 +712,15 @@ package body Rtsfind is\n    --  Start of processing for RTE\n \n    begin\n+      --  Check violation of no run time mode\n+\n+      if No_Run_Time\n+        and then not OK_To_Use_In_No_Run_Time_Mode (U_Id)\n+      then\n+         Disallow_In_No_Run_Time_Mode (Current_Error_Node);\n+         return Empty;\n+      end if;\n+\n       --  Doing a rtsfind in system.ads is special, as we cannot do this\n       --  when compiling System itself. So if we are compiling system then\n       --  we should already have acquired and processed the declaration\n@@ -731,8 +739,6 @@ package body Rtsfind is\n          return Find_Local_Entity (E);\n       end if;\n \n-      Enode := Current_Error_Node;\n-\n       --  Load unit if unit not previously loaded\n \n       if No (RE_Table (E)) then\n@@ -769,10 +775,21 @@ package body Rtsfind is\n                Next_Entity (Pkg_Ent);\n             end loop;\n \n-            --  If we didn't find the unit we want, something is wrong!\n+            --  If we didn't find the unit we want, something is wrong\n+            --  although in no run time mode, we already gave a suitable\n+            --  message, and so we simply return Empty, and the caller must\n+            --  be prepared to handle this if the RTE call is otherwise\n+            --  possible in high integrity mode.\n+\n+            if No_Run_Time\n+              and then not OK_To_Use_In_No_Run_Time_Mode (U_Id)\n+            then\n+               return Empty;\n \n-            Load_Fail (\"entity not in package\", U_Id,  RE_Id'Image (E));\n-            raise Program_Error;\n+            else\n+               Load_Fail (\"entity not in package\", U_Id,  RE_Id'Image (E));\n+               raise Program_Error;\n+            end if;\n          end if;\n       end if;\n \n@@ -809,7 +826,7 @@ package body Rtsfind is\n          end;\n       end if;\n \n-      --  We can now obtain the entity. Check that the No_Run_Time condition\n+      --  We can now obtain the entity. Check that the no run time condition\n       --  is not violated. Note that we do not signal the error if we detect\n       --  it in a runtime unit. This can only arise if the user explicitly\n       --  with'ed the runtime unit (or another runtime unit that uses it\n@@ -822,11 +839,12 @@ package body Rtsfind is\n \n       if Is_Subprogram (Ent)\n         and then not Is_Inlined (Ent)\n-        and then Sloc (Enode) /= Standard_Location\n+        and then Sloc (Current_Error_Node) /= Standard_Location\n         and then not\n-          Is_Predefined_File_Name (Unit_File_Name (Get_Source_Unit (Enode)))\n+          Is_Predefined_File_Name\n+            (Unit_File_Name (Get_Source_Unit (Current_Error_Node)))\n       then\n-         Disallow_In_No_Run_Time_Mode (Enode);\n+         Disallow_In_No_Run_Time_Mode (Current_Error_Node);\n       end if;\n \n       return Ent;"}, {"sha": "6b30cf154dfcf880c4fa5181df5d1f88c6ca0222", "filename": "gcc/ada/rtsfind.ads", "status": "modified", "additions": 25, "deletions": 2, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0868e09caa8ce3325ab48b8acf2e19fd48fea21d/gcc%2Fada%2Frtsfind.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0868e09caa8ce3325ab48b8acf2e19fd48fea21d/gcc%2Fada%2Frtsfind.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frtsfind.ads?ref=0868e09caa8ce3325ab48b8acf2e19fd48fea21d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---                            $Revision: 1.216 $\n+--                            $Revision$\n --                                                                          --\n --          Copyright (C) 1992-2001, Free Software Foundation, Inc.         --\n --                                                                          --\n@@ -376,6 +376,23 @@ package Rtsfind is\n        System_Tasking_Async_Delays_Enqueue_RT;\n    --  Range of values for children of System.Tasking.Async_Delays\n \n+   OK_To_Use_In_No_Run_Time_Mode : array (RTU_Id) of Boolean :=\n+     (Ada_Tags                => True,\n+      Interfaces              => True,\n+      System                  => True,\n+      System_Fat_Flt          => True,\n+      System_Fat_LFlt         => True,\n+      System_Fat_LLF          => True,\n+      System_Fat_SFlt         => True,\n+      System_Machine_Code     => True,\n+      System_Storage_Elements => True,\n+      System_Unsigned_Types   => True,\n+      others                  => False);\n+   --  This array defines the set of packages that can legitimately be\n+   --  accessed by Rtsfind in No_Run_Time mode. Any attempt to load\n+   --  any other package in this mode will result in a message noting\n+   --  use of a feature not supported in high integrity mode.\n+\n    --------------------------\n    -- Runtime Entity Table --\n    --------------------------\n@@ -2291,7 +2308,13 @@ package Rtsfind is\n    --  expanding) its spec if the unit has not already been loaded. If the\n    --  unit cannot be found, or if it does not contain the specified entity,\n    --  then an appropriate error message is output (\"run-time configuration\n-   --  error\") and an Unrecoverable_Error exception is raised.\n+   --  error\") and an Unrecoverable_Error exception is raised. There is one\n+   --  situation in which RTE can generate an error message, and that is if\n+   --  an unuathorized entity is accessed in high integrity mode. If this\n+   --  occurs, the result returned may be Empty, and the caller must deal\n+   --  with this possibility if the call to RTE may occur in high integrity\n+   --  mode (often this will have been ruled out by specific checks for\n+   --  high integrity mode prior to the RTE call).\n \n    function Is_RTE (Ent : Entity_Id; E : RE_Id) return Boolean;\n    --  This function determines if the given entity corresponds to the entity"}, {"sha": "dcec5bae7e1e5af5ec997cc78f64a07a87cac6e5", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 55, "deletions": 12, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0868e09caa8ce3325ab48b8acf2e19fd48fea21d/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0868e09caa8ce3325ab48b8acf2e19fd48fea21d/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=0868e09caa8ce3325ab48b8acf2e19fd48fea21d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                            $Revision: 1.508 $\n+--                            $Revision$\n --                                                                          --\n --          Copyright (C) 1992-2001, Free Software Foundation, Inc.         --\n --                                                                          --\n@@ -34,6 +34,7 @@ with Elists;   use Elists;\n with Errout;   use Errout;\n with Expander; use Expander;\n with Exp_Ch7;  use Exp_Ch7;\n+with Fname;    use Fname;\n with Freeze;   use Freeze;\n with Lib.Xref; use Lib.Xref;\n with Namet;    use Namet;\n@@ -816,23 +817,25 @@ package body Sem_Ch6 is\n    --  the subprogram, or to perform conformance checks.\n \n    procedure Analyze_Subprogram_Body (N : Node_Id) is\n+      Loc       : constant Source_Ptr := Sloc (N);\n       Body_Spec : constant Node_Id    := Specification (N);\n       Body_Id   : Entity_Id           := Defining_Entity (Body_Spec);\n       Prev_Id   : constant Entity_Id  := Current_Entity_In_Scope (Body_Id);\n \n-      HSS         : Node_Id;\n-      Spec_Id     : Entity_Id;\n-      Spec_Decl   : Node_Id   := Empty;\n-      Last_Formal : Entity_Id := Empty;\n-      Conformant  : Boolean;\n-      Missing_Ret : Boolean;\n+      HSS          : Node_Id;\n+      Spec_Id      : Entity_Id;\n+      Spec_Decl    : Node_Id   := Empty;\n+      Last_Formal  : Entity_Id := Empty;\n+      Conformant   : Boolean;\n+      Missing_Ret  : Boolean;\n+      Body_Deleted : Boolean := False;\n \n    begin\n       if Debug_Flag_C then\n          Write_Str (\"====  Compiling subprogram body \");\n          Write_Name (Chars (Body_Id));\n          Write_Str (\" from \");\n-         Write_Location (Sloc (N));\n+         Write_Location (Loc);\n          Write_Eol;\n       end if;\n \n@@ -922,7 +925,6 @@ package body Sem_Ch6 is\n          --  the protected subprogram that will be used in internal calls.\n \n          declare\n-            Loc      : constant Source_Ptr := Sloc (N);\n             Decl     : Node_Id;\n             Plist    : List_Id;\n             Formal   : Entity_Id;\n@@ -1158,7 +1160,40 @@ package body Sem_Ch6 is\n          end if;\n       end if;\n \n-      --  Here we have a real body, not a stub\n+      --  Here we have a real body, not a stub. First step is to null out\n+      --  the subprogram body if we have the special case of no run time\n+      --  mode with a predefined unit, and the subprogram is not marked\n+      --  as Inline_Always. The reason is that we should never call such\n+      --  a routine in no run time mode, and it may in general have some\n+      --  statements that we cannot handle in no run time mode.\n+\n+      --  ASIS note: we do a replace here, because we are really NOT going\n+      --  to analyze the original body and declarations at all, so it is\n+      --  useless to keep them around, we really are obliterating the body,\n+      --  basically creating a specialized no run time version on the fly\n+      --  in which the bodies *are* null.\n+\n+      if No_Run_Time\n+        and then Present (Spec_Id)\n+        and then Is_Predefined_File_Name\n+                   (Unit_File_Name (Get_Source_Unit (Loc)))\n+        and then not Is_Always_Inlined (Spec_Id)\n+      then\n+         Replace (N,\n+           Make_Subprogram_Body (Loc,\n+             Specification              => Specification (N),\n+             Declarations               => Empty_List,\n+             Handled_Statement_Sequence =>\n+               Make_Handled_Sequence_Of_Statements (Loc,\n+                 Statements         => New_List (\n+                   Make_Null_Statement (Loc)),\n+                 End_Label          =>\n+                   End_Label (Handled_Statement_Sequence (N)))));\n+         Set_Corresponding_Spec (N, Spec_Id);\n+         Body_Deleted := True;\n+      end if;\n+\n+      --  Now we can go on to analyze the body\n \n       HSS := Handled_Statement_Sequence (N);\n       Set_Actual_Subtypes (N, Current_Scope);\n@@ -1223,7 +1258,9 @@ package body Sem_Ch6 is\n                   Set_Has_Missing_Return (Id);\n                end if;\n \n-            elsif not Is_Machine_Code_Subprogram (Id) then\n+            elsif not Is_Machine_Code_Subprogram (Id)\n+              and then not Body_Deleted\n+            then\n                Error_Msg_N (\"missing RETURN statement in function body\", N);\n             end if;\n          end;\n@@ -1293,7 +1330,13 @@ package body Sem_Ch6 is\n             end loop;\n          end if;\n \n-         Check_References (Body_Id);\n+         --  Check references in body unless it was deleted. Note that the\n+         --  check of Body_Deleted here is not just for efficiency, it is\n+         --  necessary to avoid junk warnings on formal parameters.\n+\n+         if not Body_Deleted then\n+            Check_References (Body_Id);\n+         end if;\n       end;\n    end Analyze_Subprogram_Body;\n "}]}