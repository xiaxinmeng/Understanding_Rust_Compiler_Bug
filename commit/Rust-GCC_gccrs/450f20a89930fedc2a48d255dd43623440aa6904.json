{"sha": "450f20a89930fedc2a48d255dd43623440aa6904", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDUwZjIwYTg5OTMwZmVkYzJhNDhkMjU1ZGQ0MzYyMzQ0MGFhNjkwNA==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2017-08-16T19:04:00Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2017-08-16T19:04:00Z"}, "message": "runtime: improvements for signal registers\n    \n    Fix dumpregs on i386, implement dumpregs for PPC Linux/AIX, get PC on AIX.\n    \n    Reviewed-on: https://go-review.googlesource.com/56170\n\nFrom-SVN: r251127", "tree": {"sha": "808764df98b516797b3f177f9308971cdf9f8f30", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/808764df98b516797b3f177f9308971cdf9f8f30"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/450f20a89930fedc2a48d255dd43623440aa6904", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/450f20a89930fedc2a48d255dd43623440aa6904", "html_url": "https://github.com/Rust-GCC/gccrs/commit/450f20a89930fedc2a48d255dd43623440aa6904", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/450f20a89930fedc2a48d255dd43623440aa6904/comments", "author": null, "committer": null, "parents": [{"sha": "7911a54d98bfdc117c2140cce0927a3755e0644d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7911a54d98bfdc117c2140cce0927a3755e0644d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7911a54d98bfdc117c2140cce0927a3755e0644d"}], "stats": {"total": 64, "additions": 50, "deletions": 14}, "files": [{"sha": "52fe0646c9da15de52fdaaf525b68157109b4377", "filename": "gcc/go/gofrontend/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/450f20a89930fedc2a48d255dd43623440aa6904/gcc%2Fgo%2Fgofrontend%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/450f20a89930fedc2a48d255dd43623440aa6904/gcc%2Fgo%2Fgofrontend%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2FMERGE?ref=450f20a89930fedc2a48d255dd43623440aa6904", "patch": "@@ -1,4 +1,4 @@\n-480fdfa9dd416bd17115a94fa6021c4dd805fc39\n+f02183eb66f5718769f3f6541dcc6744ae1771c0\n \n The first line of this file holds the git revision number of the last\n merge done from the gofrontend repository."}, {"sha": "e175fe66beebe181d6b20637fae47432304ab782", "filename": "libgo/runtime/go-signal.c", "status": "modified", "additions": 49, "deletions": 13, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/450f20a89930fedc2a48d255dd43623440aa6904/libgo%2Fruntime%2Fgo-signal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/450f20a89930fedc2a48d255dd43623440aa6904/libgo%2Fruntime%2Fgo-signal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fruntime%2Fgo-signal.c?ref=450f20a89930fedc2a48d255dd43623440aa6904", "patch": "@@ -224,6 +224,9 @@ getSiginfo(siginfo_t *info, void *context __attribute__((unused)))\n   #ifdef __linux__\n \tret.sigpc = ((ucontext_t*)(context))->uc_mcontext.regs->nip;\n   #endif\n+  #ifdef _AIX\n+\tret.sigpc = ((ucontext_t*)(context))->uc_mcontext.jmp_context.iar;\n+  #endif\n #endif\n \n \tif (ret.sigpc == 0) {\n@@ -282,19 +285,19 @@ dumpregs(siginfo_t *info __attribute__((unused)), void *context __attribute__((u\n \t{\n \t\tmcontext_t *m = &((ucontext_t*)(context))->uc_mcontext;\n \n-\t\truntime_printf(\"eax    %X\\n\", m->gregs[REG_EAX]);\n-\t\truntime_printf(\"ebx    %X\\n\", m->gregs[REG_EBX]);\n-\t\truntime_printf(\"ecx    %X\\n\", m->gregs[REG_ECX]);\n-\t\truntime_printf(\"edx    %X\\n\", m->gregs[REG_EDX]);\n-\t\truntime_printf(\"edi    %X\\n\", m->gregs[REG_EDI]);\n-\t\truntime_printf(\"esi    %X\\n\", m->gregs[REG_ESI]);\n-\t\truntime_printf(\"ebp    %X\\n\", m->gregs[REG_EBP]);\n-\t\truntime_printf(\"esp    %X\\n\", m->gregs[REG_ESP]);\n-\t\truntime_printf(\"eip    %X\\n\", m->gregs[REG_EIP]);\n-\t\truntime_printf(\"eflags %X\\n\", m->gregs[REG_EFL]);\n-\t\truntime_printf(\"cs     %X\\n\", m->gregs[REG_CS]);\n-\t\truntime_printf(\"fs     %X\\n\", m->gregs[REG_FS]);\n-\t\truntime_printf(\"gs     %X\\n\", m->gregs[REG_GS]);\n+\t\truntime_printf(\"eax    %x\\n\", m->gregs[REG_EAX]);\n+\t\truntime_printf(\"ebx    %x\\n\", m->gregs[REG_EBX]);\n+\t\truntime_printf(\"ecx    %x\\n\", m->gregs[REG_ECX]);\n+\t\truntime_printf(\"edx    %x\\n\", m->gregs[REG_EDX]);\n+\t\truntime_printf(\"edi    %x\\n\", m->gregs[REG_EDI]);\n+\t\truntime_printf(\"esi    %x\\n\", m->gregs[REG_ESI]);\n+\t\truntime_printf(\"ebp    %x\\n\", m->gregs[REG_EBP]);\n+\t\truntime_printf(\"esp    %x\\n\", m->gregs[REG_ESP]);\n+\t\truntime_printf(\"eip    %x\\n\", m->gregs[REG_EIP]);\n+\t\truntime_printf(\"eflags %x\\n\", m->gregs[REG_EFL]);\n+\t\truntime_printf(\"cs     %x\\n\", m->gregs[REG_CS]);\n+\t\truntime_printf(\"fs     %x\\n\", m->gregs[REG_FS]);\n+\t\truntime_printf(\"gs     %x\\n\", m->gregs[REG_GS]);\n \t  }\n  #endif\n #endif\n@@ -339,4 +342,37 @@ dumpregs(siginfo_t *info __attribute__((unused)), void *context __attribute__((u\n \t  }\n   #endif\n #endif\n+\n+#ifdef __PPC__\n+  #ifdef __linux__\n+\t  {\n+\t\tmcontext_t *m = &((ucontext_t*)(context))->uc_mcontext;\n+\t\tint i;\n+\n+\t\tfor (i = 0; i < 32; i++)\n+\t\t\truntime_printf(\"r%d %X\\n\", i, m->regs->gpr[i]);\n+\t\truntime_printf(\"pc  %X\\n\", m->regs->nip);\n+\t\truntime_printf(\"msr %X\\n\", m->regs->msr);\n+\t\truntime_printf(\"cr  %X\\n\", m->regs->ccr);\n+\t\truntime_printf(\"lr  %X\\n\", m->regs->link);\n+\t\truntime_printf(\"ctr %X\\n\", m->regs->ctr);\n+\t\truntime_printf(\"xer %X\\n\", m->regs->xer);\n+\t  }\n+  #endif\n+  #ifdef _AIX\n+\t  {\n+\t\tmcontext_t *m = &((ucontext_t*)(context))->uc_mcontext;\n+\t\tint i;\n+\n+\t\tfor (i = 0; i < 32; i++)\n+\t\t\truntime_printf(\"r%d %p\\n\", i, m->jmp_context.gpr[i]);\n+\t\truntime_printf(\"pc  %p\\n\", m->jmp_context.iar);\n+\t\truntime_printf(\"msr %p\\n\", m->jmp_context.msr);\n+\t\truntime_printf(\"cr  %x\\n\", m->jmp_context.cr);\n+\t\truntime_printf(\"lr  %p\\n\", m->jmp_context.lr);\n+\t\truntime_printf(\"ctr %p\\n\", m->jmp_context.ctr);\n+\t\truntime_printf(\"xer %x\\n\", m->jmp_context.xer);\n+\t  }\n+  #endif\n+#endif\n }"}]}