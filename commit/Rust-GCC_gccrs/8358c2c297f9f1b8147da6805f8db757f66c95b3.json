{"sha": "8358c2c297f9f1b8147da6805f8db757f66c95b3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODM1OGMyYzI5N2Y5ZjFiODE0N2RhNjgwNWY4ZGI3NTdmNjZjOTViMw==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2000-12-21T23:15:18Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2000-12-21T23:15:18Z"}, "message": "configure.in: Change GLIBCPP_ENABLE_SHADOW to GLIBCPP_ENABLE_CHEADERS.\n\n\n2000-12-21  Benjamin Kosnik  <bkoz@redhat.com>\n\n\t* configure.in: Change GLIBCPP_ENABLE_SHADOW to\n\tGLIBCPP_ENABLE_CHEADERS.\n\t* acinclude.m4 (GLIBCPP_ENABLE_SHADOW): Change to\n\tENABLE_CHEADERS.  C_INCLUDE_DIR defaults to c_std from c.\n\t* aclocal.m4: Regenerate.\n\t* configure: Regenerate.\n\t* include/c: Move to ...\n\t* include/c_std: ...here.\n\t* include/c_std: Move to ...\n\t* include/c_shadow: ...here.\n\t* include/c: Repopulate, with simple headers.\n\t* docs/html/configopts.html: Adjust docs.\n\nFrom-SVN: r38434", "tree": {"sha": "1c33db8d3586276d1a685cb5a9ffa4d42ab39782", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1c33db8d3586276d1a685cb5a9ffa4d42ab39782"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8358c2c297f9f1b8147da6805f8db757f66c95b3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8358c2c297f9f1b8147da6805f8db757f66c95b3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8358c2c297f9f1b8147da6805f8db757f66c95b3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8358c2c297f9f1b8147da6805f8db757f66c95b3/comments", "author": null, "committer": null, "parents": [{"sha": "ee4fca5842a2dc2ffbc1a92954ed68481ef4fabc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee4fca5842a2dc2ffbc1a92954ed68481ef4fabc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ee4fca5842a2dc2ffbc1a92954ed68481ef4fabc"}], "stats": {"total": 2451, "additions": 0, "deletions": 2451}, "files": [{"sha": "57e28db743c1258f7e6658dc3b46ff3a8f413d43", "filename": "libstdc++-v3/include/c_std/assert.h", "status": "removed", "additions": 0, "deletions": 55, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee4fca5842a2dc2ffbc1a92954ed68481ef4fabc/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fassert.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee4fca5842a2dc2ffbc1a92954ed68481ef4fabc/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fassert.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fassert.h?ref=ee4fca5842a2dc2ffbc1a92954ed68481ef4fabc", "patch": "@@ -1,55 +0,0 @@\n-// -*- C++ -*- header wrapper.\n-\n-// Copyright (C) 1997-1999 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-\n-#ifndef  _INCLUDED_CPP_ASSERT_H_\n-# define _INCLUDED_CPP_ASSERT_H_ 1\n-\n-#ifdef _IN_C_LEGACY_  /* sub-included by a C header */\n-      // get out of the \"legacy\"\n-    } // close extern \"C\"\n-  }   // close namespace _C_legacy::\n-# undef _IN_C_LEGACY_\n-# define _ASSERT_NEED_C_LEGACY_\n-#endif\n-\n-#include <cassert>\n- \n-  // Expose global C names, including non-standard ones, but shadow\n-  // some names and types with the std:: C++ version.\n-\n-#ifdef _ASSERT_NEED_C_LEGACY_\n-  // dive back into the \"swamp\"\n-  namespace _C_legacy {\n-    extern \"C\" {\n-# define _IN_C_LEGACY_\n-# undef _ASSERT_NEED_C_LEGACY_\n-#endif /* _ASSERT_NEED_C_LEGACY_ */\n-#endif /* _INCLUDED_CPP_ASSERT_H_ */\n-"}, {"sha": "0bed4bf1d4af890187748e539881860e0f2417d2", "filename": "libstdc++-v3/include/c_std/bits/wrap_fcntl.h", "status": "removed", "additions": 0, "deletions": 92, "changes": 92, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee4fca5842a2dc2ffbc1a92954ed68481ef4fabc/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fwrap_fcntl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee4fca5842a2dc2ffbc1a92954ed68481ef4fabc/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fwrap_fcntl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fwrap_fcntl.h?ref=ee4fca5842a2dc2ffbc1a92954ed68481ef4fabc", "patch": "@@ -1,92 +0,0 @@\n-// -*- C++ -*- header wrapper.\n-\n-// Copyright (C) 2000 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-//\n-// ISO C++ 14882: 26.5  C library extensions\n-//\n-\n-#ifndef _CPP_FCNTL\n-#define _CPP_FCNTL 1\n-\n-# include <bits/c++config.h>\n-\n-namespace _C_legacy {\n-  extern \"C\" {\n-#     define _IN_C_LEGACY_\n-#     pragma GCC system_header\n-    // XXX\n-# undef SEEK_SET\n-# undef SEEK_CUR\n-# undef SEEK_END\n-\n-#     include_next <fcntl.h>\n-  }\n-} // namespace _C_legacy\n-\n-# undef SEEK_SET\n-# undef SEEK_CUR\n-# undef SEEK_END\n-\n-// NB: Don't bring elements from this non-standard header into namespace std.\n-\n-# undef _IN_C_LEGACY_\n-\n-#endif\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-"}, {"sha": "52402bf66bbde7a374c29af2448f955372e5c849", "filename": "libstdc++-v3/include/c_std/bits/wrap_features.h", "status": "removed", "additions": 0, "deletions": 51, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee4fca5842a2dc2ffbc1a92954ed68481ef4fabc/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fwrap_features.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee4fca5842a2dc2ffbc1a92954ed68481ef4fabc/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fwrap_features.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fwrap_features.h?ref=ee4fca5842a2dc2ffbc1a92954ed68481ef4fabc", "patch": "@@ -1,51 +0,0 @@\n-// -*- C++ -*- header wrapper.\n-\n-// Copyright (C) 2000 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-//\n-// ISO C++ 14882: 20.5 Extensions  \n-//\n-\n-#ifndef _CPP_WRAP_FEATURES_H\n-#define _CPP_WRAP_FEATURES_H 1\n-\n-#include <bits/c++config.h>\n-\n-namespace _C_legacy {\n-  extern \"C\" {\n-#     define _IN_C_LEGACY_\n-#     pragma GCC system_header\n-#     include_next <features.h>\n-  }\n-} // namespace _C_legacy\n-\n-// NB: Don't bring elements from this non-standard header into namespace std.\n-\n-# undef _IN_C_LEGACY_\n-\n-#endif"}, {"sha": "3e72e2d46eeb50be14d4e5fce473d818409c3466", "filename": "libstdc++-v3/include/c_std/bits/wrap_iconv.h", "status": "removed", "additions": 0, "deletions": 51, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee4fca5842a2dc2ffbc1a92954ed68481ef4fabc/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fwrap_iconv.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee4fca5842a2dc2ffbc1a92954ed68481ef4fabc/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fwrap_iconv.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fwrap_iconv.h?ref=ee4fca5842a2dc2ffbc1a92954ed68481ef4fabc", "patch": "@@ -1,51 +0,0 @@\n-// -*- C++ -*- header wrapper.\n-\n-// Copyright (C) 2000 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-//\n-// ISO C++ 14882: 20.5 Extensions  \n-//\n-\n-#ifndef _CPP_WRAP_ICONV_H\n-#define _CPP_WRAP_ICONV_H 1\n-\n-namespace _C_legacy {\n-  extern \"C\" {\n-#     define _IN_C_LEGACY_\n-#     pragma GCC system_header\n-#     include_next <iconv.h>\n-  }\n-} // namespace _C_legacy\n-\n-// NB: Don't bring elements from this non-standard header into namespace std.\n-\n-# undef _IN_C_LEGACY_\n-\n-#endif\n-\n-"}, {"sha": "ddbabd7a424c70a5cff442c613ca2f2609abe18b", "filename": "libstdc++-v3/include/c_std/bits/wrap_iolibio.h", "status": "removed", "additions": 0, "deletions": 50, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee4fca5842a2dc2ffbc1a92954ed68481ef4fabc/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fwrap_iolibio.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee4fca5842a2dc2ffbc1a92954ed68481ef4fabc/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fwrap_iolibio.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fwrap_iolibio.h?ref=ee4fca5842a2dc2ffbc1a92954ed68481ef4fabc", "patch": "@@ -1,50 +0,0 @@\n-// -*- C++ -*- header wrapper.\n-\n-// Copyright (C) 1997-1999, 2000 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-//\n-// ISO C++ 14882: 20.5 Extensions  \n-//\n-\n-#ifndef _CPP_WRAP_IOLIBIO_H\n-#define _CPP_WRAP_IOLIBIO_H 1\n-\n-namespace _C_legacy {\n-  extern \"C\" {\n-#     define _IN_C_LEGACY_\n-#     pragma GCC system_header\n-#     include_next <iolibio.h>\n-  }\n-} // namespace _C_legacy\n-\n-// NB: Don't bring elements from this non-standard header into namespace std.\n-\n-# undef _IN_C_LEGACY_\n-\n-#endif\n-"}, {"sha": "138faa10d77629aaf01ac43f483f065b87ccf57e", "filename": "libstdc++-v3/include/c_std/bits/wrap_langinfo.h", "status": "removed", "additions": 0, "deletions": 49, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee4fca5842a2dc2ffbc1a92954ed68481ef4fabc/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fwrap_langinfo.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee4fca5842a2dc2ffbc1a92954ed68481ef4fabc/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fwrap_langinfo.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fwrap_langinfo.h?ref=ee4fca5842a2dc2ffbc1a92954ed68481ef4fabc", "patch": "@@ -1,49 +0,0 @@\n-// -*- C++ -*- header wrapper.\n-\n-// Copyright (C) 2000 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-//\n-// ISO C++ 14882: 20.5 Extensions\n-//\n-\n-#ifndef _CPP_WRAP_LANGINFO_H\n-#define _CPP_WRAP_LANGINFO_H 1\n-\n-namespace _C_legacy {\n-  extern \"C\" {\n-#     define _IN_C_LEGACY_\n-#     pragma GCC system_header\n-#     include_next <langinfo.h>\n-  }\n-} // namespace _C_legacy\n-\n-# undef _IN_C_LEGACY_\n-\n-#endif\n-\n-"}, {"sha": "e5da6e3f382de5c639a1987e34e5af87e6474580", "filename": "libstdc++-v3/include/c_std/bits/wrap_libio.h", "status": "removed", "additions": 0, "deletions": 50, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee4fca5842a2dc2ffbc1a92954ed68481ef4fabc/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fwrap_libio.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee4fca5842a2dc2ffbc1a92954ed68481ef4fabc/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fwrap_libio.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fwrap_libio.h?ref=ee4fca5842a2dc2ffbc1a92954ed68481ef4fabc", "patch": "@@ -1,50 +0,0 @@\n-// -*- C++ -*- header wrapper.\n-\n-// Copyright (C) 1997-1999, 2000 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-//\n-// ISO C++ 14882: 20.5 Extensions  \n-//\n-\n-#ifndef _CPP_WRAP_LIBIO_H\n-#define _CPP_WRAP_LIBIO_H 1\n-\n-namespace _C_legacy {\n-  extern \"C\" {\n-#     define _IN_C_LEGACY_\n-#     pragma GCC system_header\n-#     include_next <libio.h>\n-  }\n-} // namespace _C_legacy\n-\n-// NB: Don't bring elements from this non-standard header into namespace std.\n-\n-# undef _IN_C_LEGACY_\n-\n-#endif\n-"}, {"sha": "32f8c2ebd10a60f0bb663326f936b0347a6a6434", "filename": "libstdc++-v3/include/c_std/bits/wrap_libioP.h", "status": "removed", "additions": 0, "deletions": 50, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee4fca5842a2dc2ffbc1a92954ed68481ef4fabc/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fwrap_libioP.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee4fca5842a2dc2ffbc1a92954ed68481ef4fabc/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fwrap_libioP.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fwrap_libioP.h?ref=ee4fca5842a2dc2ffbc1a92954ed68481ef4fabc", "patch": "@@ -1,50 +0,0 @@\n-// -*- C++ -*- header wrapper.\n-\n-// Copyright (C) 1997-1999, 2000 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-//\n-// ISO C++ 14882: 20.5 Extensions  \n-//\n-\n-#ifndef _CPP_WRAP_LIBIOP_H\n-#define _CPP_WRAP_LIBIOP_H 1\n-\n-namespace _C_legacy {\n-  extern \"C\" {\n-#     define _IN_C_LEGACY_\n-#     pragma GCC system_header\n-#     include_next <libioP.h>\n-  }\n-} // namespace _C_legacy\n-\n-// NB: Don't bring elements from this non-standard header into namespace std.\n-\n-# undef _IN_C_LEGACY_\n-\n-#endif\n-"}, {"sha": "d04eeba8a31b8f68d9bff5ad6e891eeee99d3164", "filename": "libstdc++-v3/include/c_std/bits/wrap_pthread.h", "status": "removed", "additions": 0, "deletions": 81, "changes": 81, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee4fca5842a2dc2ffbc1a92954ed68481ef4fabc/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fwrap_pthread.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee4fca5842a2dc2ffbc1a92954ed68481ef4fabc/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fwrap_pthread.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fwrap_pthread.h?ref=ee4fca5842a2dc2ffbc1a92954ed68481ef4fabc", "patch": "@@ -1,81 +0,0 @@\n-// -*- C++ -*- header wrapper.\n-\n-// Copyright (C) 2000 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-//\n-// ISO C++ 14882: 26.5  C library extensions\n-//\n-\n-#ifndef _CPP_WRAP_PTHREAD_H\n-#define _CPP_WRAP_PTHREAD_H 1\n-\n-# include <bits/c++config.h>\n-\n-namespace _C_legacy {\n-  extern \"C\" {\n-#     define _IN_C_LEGACY_\n-#     pragma GCC system_header\n-#     include_next <pthread.h>\n-  }\n-} // namespace _C_legacy\n-\n-# undef _IN_C_LEGACY_\n-\n-#endif\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-"}, {"sha": "8e28b698c7218f6fed57ab5d20745c2a769be150", "filename": "libstdc++-v3/include/c_std/bits/wrap_unistd.h", "status": "removed", "additions": 0, "deletions": 47, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee4fca5842a2dc2ffbc1a92954ed68481ef4fabc/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fwrap_unistd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee4fca5842a2dc2ffbc1a92954ed68481ef4fabc/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fwrap_unistd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fwrap_unistd.h?ref=ee4fca5842a2dc2ffbc1a92954ed68481ef4fabc", "patch": "@@ -1,47 +0,0 @@\n-// -*- C++ -*- header wrapper.\n-\n-// Copyright (C) 2000 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-//\n-// ISO C++ 14882: 26.5  C library extensions\n-//\n-\n-#ifndef _CPP_WRAP_UNISTD_H\n-#define _CPP_WRAP_UNISTD_H 1\n-\n-namespace _C_legacy {\n-  extern \"C\" {\n-#     define _IN_C_LEGACY_\n-#     pragma GCC system_header\n-#     include_next <unistd.h>\n-  }\n-} // namespace _C_legacy\n-\n-# undef _IN_C_LEGACY_\n-\n-#endif"}, {"sha": "199089c594cc7b5160cc7de2b12774eeb28b6df3", "filename": "libstdc++-v3/include/c_std/ctype.h", "status": "removed", "additions": 0, "deletions": 67, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee4fca5842a2dc2ffbc1a92954ed68481ef4fabc/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fctype.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee4fca5842a2dc2ffbc1a92954ed68481ef4fabc/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fctype.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fctype.h?ref=ee4fca5842a2dc2ffbc1a92954ed68481ef4fabc", "patch": "@@ -1,67 +0,0 @@\n-// -*- C++ -*- header wrapper.\n-\n-// Copyright (C) 1997-1999, 2000 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-\n-#ifndef  _INCLUDED_CPP_CTYPE_H_\n-# define _INCLUDED_CPP_CTYPE_H_ 1\n-\n-# ifdef _IN_C_LEGACY_  /* sub-included by a C header */\n-      // get out of the \"legacy\"\n-    } // close extern \"C\"\n-  }   // close namespace _C_legacy::\n-#  undef _IN_C_LEGACY_\n-#  define _CTYPE_NEED_C_LEGACY_\n-# endif\n-\n-# include <cctype>\n-\n-  // Expose global C names, including non-standard ones, but shadow\n-  // some names and types with the std:: C++ version.\n-  using std::isalnum;\n-  using std::isalpha;\n-  using std::iscntrl;\n-  using std::isdigit;\n-  using std::isgraph;\n-  using std::islower;\n-  using std::isprint;\n-  using std::ispunct;\n-  using std::isspace;\n-  using std::isupper;\n-  using std::isxdigit;\n-  using std::tolower;\n-  using std::toupper;\n-\n-# ifdef _CTYPE_NEED_C_LEGACY_\n-  // dive back into the \"swamp\"\n-  namespace _C_legacy {\n-    extern \"C\" {\n-#  define _IN_C_LEGACY_\n-#  undef _CTYPE_NEED_C_LEGACY_\n-# endif /* _CTYPE_NEED_C_LEGACY_ */\n-#endif /* _INCLUDED_CPP_CTYPE_H_ */"}, {"sha": "4e2fc332e88084394f64901c0bd432a8b338369f", "filename": "libstdc++-v3/include/c_std/errno.h", "status": "removed", "additions": 0, "deletions": 56, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee4fca5842a2dc2ffbc1a92954ed68481ef4fabc/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Ferrno.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee4fca5842a2dc2ffbc1a92954ed68481ef4fabc/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Ferrno.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Ferrno.h?ref=ee4fca5842a2dc2ffbc1a92954ed68481ef4fabc", "patch": "@@ -1,56 +0,0 @@\n-// -*- C++ -*- header wrapper.\n-\n-// Copyright (C) 1997-1999, 2000 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-\n-#ifndef  _INCLUDED_CPP_ERRNO_H_\n-# define _INCLUDED_CPP_ERRNO_H_ 1\n-\n-# ifdef _IN_C_LEGACY_  /* sub-included by a C header */\n-      // get out of the \"legacy\"\n-    } // close extern \"C\"\n-  }   // close namespace _C_legacy::\n-#  undef _IN_C_LEGACY_\n-#  define _ERRNO_NEED_C_LEGACY_\n-# endif\n-\n-# include <cerrno>\n-\n-  // Expose global C names, including non-standard ones, but shadow\n-  // some names and types with the std:: C++ version.\n-  //  using std::errno;\n-\n-# ifdef _ERRNO_NEED_C_LEGACY_\n-  // dive back into the \"swamp\"\n-  namespace _C_legacy {\n-    extern \"C\" {\n-#  define _IN_C_LEGACY_\n-#  undef _ERRNO_NEED_C_LEGACY_\n-# endif /* _ERRNO_NEED_C_LEGACY_ */\n-#endif /* _INCLUDED_CPP_ERRNO_H_ */\n-"}, {"sha": "f19a15492741348eaf7596f73619eb05f350caee", "filename": "libstdc++-v3/include/c_std/fcntl.h", "status": "removed", "additions": 0, "deletions": 63, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee4fca5842a2dc2ffbc1a92954ed68481ef4fabc/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Ffcntl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee4fca5842a2dc2ffbc1a92954ed68481ef4fabc/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Ffcntl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Ffcntl.h?ref=ee4fca5842a2dc2ffbc1a92954ed68481ef4fabc", "patch": "@@ -1,63 +0,0 @@\n-// -*- C++ -*- header wrapper.\n-\n-// Copyright (C) 1997-1999, 2000 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-\n-#ifndef  _INCLUDED_CPP_FCNTL_H_\n-# define _INCLUDED_CPP_FCNTL_H_ 1\n-\n-# ifdef _IN_C_LEGACY_  /* sub-included by a C header */\n-      // get out of the \"legacy\"\n-    } // close extern \"C\"\n-  }   // close namespace _C_legacy::\n-#  undef _IN_C_LEGACY_\n-#  define _FCNTL_NEED_C_LEGACY_\n-# endif\n-\n-# include <bits/wrap_fcntl.h>\n-\n-  // Expose global C names, including non-standard ones, but shadow\n-  // some names and types with the std:: C++ version.\n-  using _C_legacy::flock;\n-\n-  using _C_legacy::creat;\n-  using _C_legacy::open;\n-  using _C_legacy::fcntl;\n-\n-# ifdef _FCNTL_NEED_C_LEGACY_\n-  // dive back into the \"swamp\"\n-  namespace _C_legacy {\n-    extern \"C\" {\n-#  define _IN_C_LEGACY_\n-#  undef _FCNTL_NEED_C_LEGACY_\n-# endif /* _FCNTL_NEED_C_LEGACY_ */\n-#endif /* _INCLUDED_CPP_FCNTL_H_ */\n-\n-\n-\n-"}, {"sha": "eed4b0e803d6b9197d8d811837c52d4de18402d8", "filename": "libstdc++-v3/include/c_std/features.h", "status": "removed", "additions": 0, "deletions": 58, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee4fca5842a2dc2ffbc1a92954ed68481ef4fabc/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Ffeatures.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee4fca5842a2dc2ffbc1a92954ed68481ef4fabc/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Ffeatures.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Ffeatures.h?ref=ee4fca5842a2dc2ffbc1a92954ed68481ef4fabc", "patch": "@@ -1,58 +0,0 @@\n-// -*- C++ -*- header wrapper.\n-\n-// Copyright (C) 2000 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-\n-#ifndef  _INCLUDED_CPP_FEATURES_H_\n-# define _INCLUDED_CPP_FEATURES_H_ 1\n-\n-# ifdef _IN_C_LEGACY_  /* sub-included by a C header */\n-      // get out of the \"legacy\"\n-    } // close extern \"C\"\n-  }   // close namespace _C_legacy::\n-#  undef _IN_C_LEGACY_\n-#  define _FEATURES_NEED_C_LEGACY_\n-# endif\n-\n-# include <bits/wrap_features.h>\n-\n-  // Expose global C names, including non-standard ones, but shadow\n-  // some names and types with the std:: C++ version.\n-\n-# ifdef _FEATURES_NEED_C_LEGACY_\n-  // dive back into the \"swamp\"\n-  namespace _C_legacy {\n-    extern \"C\" {\n-#  define _IN_C_LEGACY_\n-#  undef _FEATURES_NEED_C_LEGACY_\n-# endif /* _FEATURES_NEED_C_LEGACY_ */\n-#endif /* _INCLUDED_CPP_FEATURES_H_ */\n-\n-\n-\n-"}, {"sha": "f52c5f5c9eb578316b18e6bacf1ac2e4b5a18d31", "filename": "libstdc++-v3/include/c_std/float.h", "status": "removed", "additions": 0, "deletions": 54, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee4fca5842a2dc2ffbc1a92954ed68481ef4fabc/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Ffloat.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee4fca5842a2dc2ffbc1a92954ed68481ef4fabc/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Ffloat.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Ffloat.h?ref=ee4fca5842a2dc2ffbc1a92954ed68481ef4fabc", "patch": "@@ -1,54 +0,0 @@\n-// -*- C++ -*- header wrapper.\n-\n-// Copyright (C) 1997-1999, 2000 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-\n-#ifndef  _INCLUDED_CPP_FLOAT_H_\n-# define _INCLUDED_CPP_FLOAT_H_ 1\n-\n-# ifdef _IN_C_LEGACY_  /* sub-included by a C header */\n-      // get out of the \"legacy\"\n-    } // close extern \"C\"\n-  }   // close namespace _C_legacy::\n-#  undef _IN_C_LEGACY_\n-#  define _FLOAT_NEED_C_LEGACY_\n-# endif\n-\n-# include <cfloat>\n-\n-  // Expose global C names, including non-standard ones, but shadow\n-  // some names and types with the std:: C++ version.\n-\n-# ifdef _FLOAT_NEED_C_LEGACY_\n-  // dive back into the \"swamp\"\n-  namespace _C_legacy {\n-    extern \"C\" {\n-#  define _IN_C_LEGACY_\n-#  undef _FLOAT_NEED_C_LEGACY_\n-# endif /* _FLOAT_NEED_C_LEGACY_ */\n-#endif /* _INCLUDED_CPP_FLOAT_H_ */"}, {"sha": "1ea5038c24a2a222aab81477cf9f7837ad31dac5", "filename": "libstdc++-v3/include/c_std/iconv.h", "status": "removed", "additions": 0, "deletions": 66, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee4fca5842a2dc2ffbc1a92954ed68481ef4fabc/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Ficonv.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee4fca5842a2dc2ffbc1a92954ed68481ef4fabc/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Ficonv.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Ficonv.h?ref=ee4fca5842a2dc2ffbc1a92954ed68481ef4fabc", "patch": "@@ -1,66 +0,0 @@\n-// -*- C++ -*- header wrapper.\n-\n-// Copyright (C) 2000 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-\n-#ifndef  _INCLUDED_CPP_ICONV_H_\n-# define _INCLUDED_CPP_ICONV_H_ 1\n-\n-# ifdef _IN_C_LEGACY_  /* sub-included by a C header */\n-      // get out of the \"legacy\"\n-    } // close extern \"C\"\n-  }   // close namespace _C_legacy::\n-#  undef _IN_C_LEGACY_\n-#  define _ICONV_NEED_C_LEGACY_\n-# endif\n-\n-# include <bits/wrap_iconv.h>\n-\n-  // Expose global C names, including non-standard ones, but shadow\n-  // some names and types with the std:: C++ version.\n-\n-  // NB: Cannot use typedefs here to inject the names as the \"C\" headers\n-  // often include typedefs that include the keyword 'struct'\n-  using _C_legacy::iconv_t;\n-\n-  using _C_legacy::iconv_open;\n-  using _C_legacy::iconv;\n-  using _C_legacy::iconv_close;\n-\n-# ifdef _ICONV_NEED_C_LEGACY_\n-  // dive back into the \"swamp\"\n-  namespace _C_legacy {\n-    extern \"C\" {\n-#  define _IN_C_LEGACY_\n-#  undef _ICONV_NEED_C_LEGACY_\n-# endif /* _ICONV_NEED_C_LEGACY_ */\n-#endif /* _INCLUDED_CPP_ICONV_H_ */\n-\n-\n-\n-"}, {"sha": "845f6403594e3068f23d69da5ee3e0385a49bceb", "filename": "libstdc++-v3/include/c_std/iolibio.h", "status": "removed", "additions": 0, "deletions": 58, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee4fca5842a2dc2ffbc1a92954ed68481ef4fabc/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fiolibio.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee4fca5842a2dc2ffbc1a92954ed68481ef4fabc/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fiolibio.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fiolibio.h?ref=ee4fca5842a2dc2ffbc1a92954ed68481ef4fabc", "patch": "@@ -1,58 +0,0 @@\n-// -*- C++ -*- header wrapper.\n-\n-// Copyright (C) 2000 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-\n-#ifndef  _INCLUDED_CPP_IOLIBIO_H_\n-# define _INCLUDED_CPP_IOLIBIO_H_ 1\n-\n-# ifdef _IN_C_LEGACY_  /* sub-included by a C header */\n-      // get out of the \"legacy\"\n-    } // close extern \"C\"\n-  }   // close namespace _C_legacy::\n-#  undef _IN_C_LEGACY_\n-#  define _IOLIBIO_NEED_C_LEGACY_\n-# endif\n-\n-# include <bits/wrap_iolibio.h>\n-\n-  // Expose global C names, including non-standard ones, but shadow\n-  // some names and types with the std:: C++ version.\n-\n-# ifdef _IOLIBIO_NEED_C_LEGACY_\n-  // dive back into the \"swamp\"\n-  namespace _C_legacy {\n-    extern \"C\" {\n-#  define _IN_C_LEGACY_\n-#  undef _IOLIBIO_NEED_C_LEGACY_\n-# endif /* _IOLIBIO_NEED_C_LEGACY_ */\n-#endif /* _INCLUDED_CPP_IOLIBIO_H_ */\n-\n-\n-\n-"}, {"sha": "3333ef15c81f09ebeaf0224e8f84dca976d222ff", "filename": "libstdc++-v3/include/c_std/langinfo.h", "status": "removed", "additions": 0, "deletions": 55, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee4fca5842a2dc2ffbc1a92954ed68481ef4fabc/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Flanginfo.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee4fca5842a2dc2ffbc1a92954ed68481ef4fabc/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Flanginfo.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Flanginfo.h?ref=ee4fca5842a2dc2ffbc1a92954ed68481ef4fabc", "patch": "@@ -1,55 +0,0 @@\n-// -*- C++ -*- header wrapper.\n-\n-// Copyright (C) 2000 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-\n-#ifndef  _INCLUDED_CPP_LANGINFO_H_\n-# define _INCLUDED_CPP_LANGINFO_H_ 1\n-\n-# ifdef _IN_C_LEGACY_  /* sub-included by a C header */\n-      // get out of the \"legacy\"\n-    } // close extern \"C\"\n-  }   // close namespace _C_legacy::\n-#  undef _IN_C_LEGACY_\n-#  define _LANGINFO_NEED_C_LEGACY_\n-# endif\n-\n-# include <bits/wrap_langinfo.h>\n-\n-# ifdef _LANGINFO_NEED_C_LEGACY_\n-  // dive back into the \"swamp\"\n-  namespace _C_legacy {\n-    extern \"C\" {\n-#  define _IN_C_LEGACY_\n-#  undef _LANGINFO_NEED_C_LEGACY_\n-# endif /* _LANGINFO_NEED_C_LEGACY_ */\n-#endif /* _INCLUDED_CPP_LANGINFO_H_ */\n-\n-\n-\n-"}, {"sha": "2cafc7d88ebffa154757c6c9ede9e4cf1c9063da", "filename": "libstdc++-v3/include/c_std/libio.h", "status": "removed", "additions": 0, "deletions": 81, "changes": 81, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee4fca5842a2dc2ffbc1a92954ed68481ef4fabc/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Flibio.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee4fca5842a2dc2ffbc1a92954ed68481ef4fabc/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Flibio.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Flibio.h?ref=ee4fca5842a2dc2ffbc1a92954ed68481ef4fabc", "patch": "@@ -1,81 +0,0 @@\n-// -*- C++ -*- header wrapper.\n-\n-// Copyright (C) 2000 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-\n-#ifndef  _INCLUDED_CPP_LIBIO_H_\n-# define _INCLUDED_CPP_LIBIO_H_ 1\n-\n-# ifdef _IN_C_LEGACY_  /* sub-included by a C header */\n-      // get out of the \"legacy\"\n-    } // close extern \"C\"\n-  }   // close namespace _C_legacy::\n-#  undef _IN_C_LEGACY_\n-#  define _LIBIO_NEED_C_LEGACY_\n-# endif\n-\n-# include <bits/wrap_libio.h>\n-\n-  // Expose global C names, including non-standard ones, but shadow\n-  // some names and types with the std:: C++ version.\n-\n-  // NB: Cannot use typedefs here to inject the names as the \"C\" headers\n-  // often include typedefs that include the keyword 'struct'\n-  using _C_legacy::_IO_pos_t;\n-  using _C_legacy::_IO_fpos_t;\n-  using _C_legacy::_IO_fpos64_t;\n-  using _C_legacy::_IO_size_t;\n-  using _C_legacy::_IO_ssize_t;\n-  using _C_legacy::_IO_off_t;\n-  using _C_legacy::_IO_off64_t;\n-  using _C_legacy::_IO_pid_t;\n-  using _C_legacy::_IO_uid_t;\n-  using _C_legacy::_IO_iconv_t;\n-  using _C_legacy::_IO_va_list;\n-  using _C_legacy::_IO_wint_t;\n-  using _C_legacy::_IO_lock_t;\n-\n-  using _C_legacy::_IO_marker;\n-  using _C_legacy::_IO_codecvt;\n-  using _C_legacy::_IO_wide_data;\n-  using _C_legacy::_IO_FILE;\n-  using _C_legacy::_IO_cookie_io_functions_t;\n-  using _C_legacy::_IO_cookie_file;\n-\n-# ifdef _LIBIO_NEED_C_LEGACY_\n-  // dive back into the \"swamp\"\n-  namespace _C_legacy {\n-    extern \"C\" {\n-#  define _IN_C_LEGACY_\n-#  undef _LIBIO_NEED_C_LEGACY_\n-# endif /* _LIBIO_NEED_C_LEGACY_ */\n-#endif /* _INCLUDED_CPP_LIBIO_H_ */\n-\n-\n-\n-"}, {"sha": "da3e716768fb92dedc657b098ed1a34433f644ed", "filename": "libstdc++-v3/include/c_std/libioP.h", "status": "removed", "additions": 0, "deletions": 64, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee4fca5842a2dc2ffbc1a92954ed68481ef4fabc/libstdc%2B%2B-v3%2Finclude%2Fc_std%2FlibioP.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee4fca5842a2dc2ffbc1a92954ed68481ef4fabc/libstdc%2B%2B-v3%2Finclude%2Fc_std%2FlibioP.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_std%2FlibioP.h?ref=ee4fca5842a2dc2ffbc1a92954ed68481ef4fabc", "patch": "@@ -1,64 +0,0 @@\n-// -*- C++ -*- header wrapper.\n-\n-// Copyright (C) 2000 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-\n-#ifndef  _INCLUDED_CPP_LIBIOP_H_\n-# define _INCLUDED_CPP_LIBIOP_H_ 1\n-\n-# ifdef _IN_C_LEGACY_  /* sub-included by a C header */\n-      // get out of the \"legacy\"\n-    } // close extern \"C\"\n-  }   // close namespace _C_legacy::\n-#  undef _IN_C_LEGACY_\n-#  define _LIBIOP_NEED_C_LEGACY_\n-# endif\n-\n-# include <bits/wrap_libioP.h>\n-\n-  // Expose global C names, including non-standard ones, but shadow\n-  // some names and types with the std:: C++ version.\n-  using _C_legacy::_IO_jump_t;\n-  using _C_legacy::_IO_FILE_plus;\n-  using _C_legacy::_IO_cookie_file;\n-\n-  using _C_legacy::_IO_file_jumps;\n-  using _C_legacy::_IO_wfile_jumps;\n-\n-# ifdef _LIBIOP_NEED_C_LEGACY_\n-  // dive back into the \"swamp\"\n-  namespace _C_legacy {\n-    extern \"C\" {\n-#  define _IN_C_LEGACY_\n-#  undef _LIBIOP_NEED_C_LEGACY_\n-# endif /* _LIBIOP_NEED_C_LEGACY_ */\n-#endif /* _INCLUDED_CPP_LIBIOP_H_ */\n-\n-\n-\n-"}, {"sha": "26aa771f2d58860e0aa5866d6102f5aad7e5da75", "filename": "libstdc++-v3/include/c_std/limits.h", "status": "removed", "additions": 0, "deletions": 54, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee4fca5842a2dc2ffbc1a92954ed68481ef4fabc/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Flimits.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee4fca5842a2dc2ffbc1a92954ed68481ef4fabc/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Flimits.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Flimits.h?ref=ee4fca5842a2dc2ffbc1a92954ed68481ef4fabc", "patch": "@@ -1,54 +0,0 @@\n-// -*- C++ -*- header wrapper.\n-\n-// Copyright (C) 1997-1999, 2000 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-\n-#ifndef  _INCLUDED_CPP_LIMITS_H_\n-# define _INCLUDED_CPP_LIMITS_H_ 1\n-\n-# ifdef _IN_C_LEGACY_  /* sub-included by a C header */\n-      // get out of the \"legacy\"\n-    } // close extern \"C\"\n-  }   // close namespace _C_legacy::\n-#  undef _IN_C_LEGACY_\n-#  define _LIMITS_NEED_C_LEGACY_\n-# endif\n-\n-# include <climits>\n-\n-  // Expose global C names, including non-standard ones, but shadow\n-  // some names and types with the std:: C++ version.\n-\n-# ifdef _LIMITS_NEED_C_LEGACY_\n-  // dive back into the \"swamp\"\n-  namespace _C_legacy {\n-    extern \"C\" {\n-#  define _IN_C_LEGACY_\n-#  undef _LIMITS_NEED_C_LEGACY_\n-# endif /* _LIMITS_NEED_C_LEGACY_ */\n-#endif /* _INCLUDED_CPP_LIMITS_H_ */"}, {"sha": "1d5f529ed896d1d9be2aaca82bf58a41cee6f28f", "filename": "libstdc++-v3/include/c_std/locale.h", "status": "removed", "additions": 0, "deletions": 57, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee4fca5842a2dc2ffbc1a92954ed68481ef4fabc/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Flocale.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee4fca5842a2dc2ffbc1a92954ed68481ef4fabc/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Flocale.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Flocale.h?ref=ee4fca5842a2dc2ffbc1a92954ed68481ef4fabc", "patch": "@@ -1,57 +0,0 @@\n-// -*- C++ -*- header wrapper.\n-\n-// Copyright (C) 1997-1999, 2000 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-\n-#ifndef  _INCLUDED_CPP_LOCALE_H_\n-# define _INCLUDED_CPP_LOCALE_H_ 1\n-\n-# ifdef _IN_C_LEGACY_  /* sub-included by a C header */\n-      // get out of the \"legacy\"\n-    } // close extern \"C\"\n-  }   // close namespace _C_legacy::\n-#  undef _IN_C_LEGACY_\n-#  define _LOCALE_NEED_C_LEGACY_\n-#endif\n-\n-# include <clocale>\n-\n-  // Expose global C names, including non-standard ones, but shadow\n-  // some names and types with the std:: C++ version.\n-  using std::lconv;\n-  using std::setlocale;\n-  using std::localeconv;\n-\n-# ifdef _LOCALE_NEED_C_LEGACY_\n-  // dive back into the \"swamp\"\n-  namespace _C_legacy {\n-    extern \"C\" {\n-#  define _IN_C_LEGACY_\n-#  undef _LOCALE_NEED_C_LEGACY_\n-# endif /* _LOCALE_NEED_C_LEGACY_ */\n-#endif /* _INCLUDED_CPP_LOCALE_H_ */"}, {"sha": "f2ec04af671b228edf7769e4fc7a64eaca8f0720", "filename": "libstdc++-v3/include/c_std/math.h", "status": "removed", "additions": 0, "deletions": 131, "changes": 131, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee4fca5842a2dc2ffbc1a92954ed68481ef4fabc/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fmath.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee4fca5842a2dc2ffbc1a92954ed68481ef4fabc/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fmath.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fmath.h?ref=ee4fca5842a2dc2ffbc1a92954ed68481ef4fabc", "patch": "@@ -1,131 +0,0 @@\n-// -*- C++ -*- header wrapper.\n-\n-// Copyright (C) 1997-1999, 2000 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-\n-#ifndef  _INCLUDED_CPP_MATH_H_\n-# define _INCLUDED_CPP_MATH_H_ 1\n-\n-# ifdef _IN_C_LEGACY_  /* sub-included by a C header */\n-      // get out of the \"legacy\"\n-    } // close extern \"C\"\n-  }   // close namespace _C_legacy::\n-#  undef _IN_C_LEGACY_\n-#  define _MATH_NEED_C_LEGACY_\n-# endif\n-\n-# include <cmath>\n-\n-  // Expose global C names, including non-standard ones, but shadow\n-  // some names and types with the std:: C++ version.\n-  using std::abs;\n-  using std::acos;\n-  using std::asin;\n-  using std::atan;\n-  using std::atan2;\n-  using std::cos;\n-  using std::sin;\n-  using std::tan;\n-  using std::cosh;\n-  using std::sinh;\n-  using std::tanh;\n-  using std::exp;\n-  using std::frexp;\n-  using std::ldexp;\n-  using std::log;\n-  using std::log10;\n-  using std::modf;\n-  using std::pow;\n-  using std::sqrt;\n-  using std::ceil;\n-  using std::fabs;\n-  using std::floor;\n-  using std::fmod;\n-\n-  // From ISO/IEC 9899:1999\n-  using std::absf;\n-  using std::acosf;\n-  using std::asinf;\n-  using std::atanf;\n-  using std::atan2f;\n-  using std::cosf;\n-  using std::sinf;\n-  using std::tanf;\n-  using std::coshf;\n-  using std::sinhf;\n-  using std::tanhf;\n-  using std::expf;\n-  using std::frexpf;\n-  using std::ldexpf;\n-  using std::logf;\n-  using std::log10f;\n-  using std::modff;\n-  using std::powf;\n-  using std::sqrtf;\n-  using std::ceilf;\n-  using std::fabsf;\n-  using std::floorf;\n-  using std::fmodf;\n-\n-  // From ISO/IEC 9899:1999\n-  using std::absl;\n-  using std::acosl;\n-  using std::asinl;\n-  using std::atanl;\n-  using std::atan2l;\n-  using std::cosl;\n-  using std::sinl;\n-  using std::tanl;\n-  using std::coshl;\n-  using std::sinhl;\n-  using std::tanhl;\n-  using std::expl;\n-  using std::frexpl;\n-  using std::ldexpl;\n-  using std::logl;\n-  using std::log10l;\n-  using std::modfl;\n-  using std::powl;\n-  using std::sqrtl;\n-  using std::ceill;\n-  using std::fabsl;\n-  using std::floorl;\n-  using std::fmodl;\n-\n-# ifdef _MATH_NEED_C_LEGACY_\n-  // dive back into the \"swamp\"\n-  namespace _C_legacy {\n-    extern \"C\" {\n-#  define _IN_C_LEGACY_\n-#  undef _MATH_NEED_C_LEGACY_\n-# endif /* _MATH_NEED_C_LEGACY_ */\n-#endif /* _INCLUDED_CPP_MATH_H_ */\n-\n-\n-\n-"}, {"sha": "8692d3e52d43b6b88822ad4249c2b4f974b569cb", "filename": "libstdc++-v3/include/c_std/pthread.h", "status": "removed", "additions": 0, "deletions": 86, "changes": 86, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee4fca5842a2dc2ffbc1a92954ed68481ef4fabc/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fpthread.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee4fca5842a2dc2ffbc1a92954ed68481ef4fabc/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fpthread.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fpthread.h?ref=ee4fca5842a2dc2ffbc1a92954ed68481ef4fabc", "patch": "@@ -1,86 +0,0 @@\n-// -*- C++ -*- header wrapper.\n-\n-// Copyright (C) 2000 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-\n-#ifndef  _INCLUDED_CPP_PTHREAD_H_\n-# define _INCLUDED_CPP_PTHREAD_H_ 1\n-\n-# ifdef _IN_C_LEGACY_  /* sub-included by a C header */\n-      // get out of the \"legacy\"\n-    } // close extern \"C\"\n-  }   // close namespace _C_legacy::\n-#  undef _IN_C_LEGACY_\n-#  define _PTHREAD_NEED_C_LEGACY_\n-# endif\n-\n-# include <bits/wrap_pthread.h>\n-\n-  // Expose global C names, including non-standard ones, but shadow\n-  // some names and types with the std:: C++ version.\n-  using _C_legacy::__sched_param;\n-\n-  using _C_legacy::pthread_attr_t;\n-  using _C_legacy::pthread_cond_t;\n-  using _C_legacy::pthread_condattr_t;\n-  using _C_legacy::pthread_key_t;\n-  using _C_legacy::pthread_mutex_t;\n-  using _C_legacy::pthread_mutexattr_t;\n-  using _C_legacy::pthread_once_t;\n-  using _C_legacy::pthread_rwlock_t;\n-  using _C_legacy::pthread_rwlockattr_t;\n-  using _C_legacy::pthread_t;\n-\n-  using _C_legacy::pthread_mutex_init;\n-  using _C_legacy::pthread_mutex_destroy;\n-  using _C_legacy::pthread_mutex_lock;\n-  using _C_legacy::pthread_mutex_trylock;\n-  using _C_legacy::pthread_mutex_unlock;\n-  using _C_legacy::pthread_mutexattr_init;\n-  using _C_legacy::pthread_mutexattr_destroy;\n-  using _C_legacy::pthread_mutexattr_settype;\n-  using _C_legacy::pthread_mutexattr_gettype;\n-  using _C_legacy::pthread_key_create;\n-  using _C_legacy::pthread_key_delete;\n-  using _C_legacy::pthread_setspecific;\n-  using _C_legacy::pthread_getspecific;\n-  using _C_legacy::pthread_once;\n-  using _C_legacy::pthread_atfork;\n-\n-# ifdef _PTHREAD_NEED_C_LEGACY_\n-  // dive back into the \"swamp\"\n-  namespace _C_legacy {\n-    extern \"C\" {\n-#  define _IN_C_LEGACY_\n-#  undef _PTHREAD_NEED_C_LEGACY_\n-# endif /* _PTHREAD_NEED_C_LEGACY_ */\n-#endif /* _INCLUDED_CPP_PTHREAD_H_ */\n-\n-\n-\n-"}, {"sha": "c4061e871dbaa3dd2137066dfaad982bd0c6f489", "filename": "libstdc++-v3/include/c_std/setjmp.h", "status": "removed", "additions": 0, "deletions": 56, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee4fca5842a2dc2ffbc1a92954ed68481ef4fabc/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fsetjmp.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee4fca5842a2dc2ffbc1a92954ed68481ef4fabc/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fsetjmp.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fsetjmp.h?ref=ee4fca5842a2dc2ffbc1a92954ed68481ef4fabc", "patch": "@@ -1,56 +0,0 @@\n-// -*- C++ -*- header wrapper.\n-\n-// Copyright (C) 1997-1999, 2000 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-\n-#ifndef  _INCLUDED_CPP_SETJMP_H_\n-# define _INCLUDED_CPP_SETJMP_H_ 1\n-\n-# ifdef _IN_C_LEGACY_  /* sub-included by a C header */\n-      // get out of the \"legacy\"\n-    } // close extern \"C\"\n-  }   // close namespace _C_legacy::\n-#  undef _IN_C_LEGACY_\n-#  define _SETJMP_NEED_C_LEGACY_\n-# endif\n-\n-# include <csetjmp>\n-\n-  // Expose global C names, including non-standard ones, but shadow\n-  // some names and types with the std:: C++ version.\n-  using std::jmp_buf;\n-  using std::longjmp;\n-\n-# ifdef _SETJMP_NEED_C_LEGACY_\n-  // dive back into the \"swamp\"\n-  namespace _C_legacy {\n-    extern \"C\" {\n-#  define _IN_C_LEGACY_\n-#  undef _SETJMP_NEED_C_LEGACY_\n-# endif /* _SETJMP_NEED_C_LEGACY_ */\n-#endif /* _INCLUDED_CPP_SETJMP_H_ */"}, {"sha": "819ddf22f325f0277f8f08fbd49d929a4d19c125", "filename": "libstdc++-v3/include/c_std/signal.h", "status": "removed", "additions": 0, "deletions": 58, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee4fca5842a2dc2ffbc1a92954ed68481ef4fabc/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fsignal.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee4fca5842a2dc2ffbc1a92954ed68481ef4fabc/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fsignal.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fsignal.h?ref=ee4fca5842a2dc2ffbc1a92954ed68481ef4fabc", "patch": "@@ -1,58 +0,0 @@\n-// -*- C++ -*- header wrapper.\n-\n-// Copyright (C) 1997-1999, 2000 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-\n-#ifndef  _INCLUDED_CPP_SIGNAL_H_\n-# define _INCLUDED_CPP_SIGNAL_H_ 1\n-\n-# ifdef _IN_C_LEGACY_  /* sub-included by a C header */\n-      // get out of the \"legacy\"\n-    } // close extern \"C\"\n-  }   // close namespace _C_legacy::\n-#  undef _IN_C_LEGACY_\n-#  define _SIGNAL_NEED_C_LEGACY_\n-# endif\n-\n-# include <csignal>\n-\n-  // Expose global C names, including non-standard ones, but shadow\n-  // some names and types with the std:: C++ version.\n-  using std::sig_atomic_t;\n-\n-  using std::raise;\n-  using std::signal;\n-\n-# ifdef _SIGNAL_NEED_C_LEGACY_\n-  // dive back into the \"swamp\"\n-  namespace _C_legacy {\n-    extern \"C\" {\n-#  define _IN_C_LEGACY_\n-#  undef _SIGNAL_NEED_C_LEGACY_\n-#  endif /* _SIGNAL_NEED_C_LEGACY_ */\n-#endif /* _INCLUDED_CPP_SIGNAL_H_ */"}, {"sha": "cb32feca7d60956f2a2961373f64f17c7b7de81b", "filename": "libstdc++-v3/include/c_std/stdarg.h", "status": "removed", "additions": 0, "deletions": 55, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee4fca5842a2dc2ffbc1a92954ed68481ef4fabc/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fstdarg.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee4fca5842a2dc2ffbc1a92954ed68481ef4fabc/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fstdarg.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fstdarg.h?ref=ee4fca5842a2dc2ffbc1a92954ed68481ef4fabc", "patch": "@@ -1,55 +0,0 @@\n-// -*- C++ -*- header wrapper.\n-\n-// Copyright (C) 1997-1999, 2000 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-\n-#ifndef  _INCLUDED_CPP_STDARG_H_\n-# define _INCLUDED_CPP_STDARG_H_ 1\n-\n-#ifdef _IN_C_LEGACY_  /* sub-included by a C header */\n-      // get out of the \"legacy\"\n-    } // close extern \"C\"\n-  }   // close namespace _C_legacy::\n-#  undef _IN_C_LEGACY_\n-#  define _STDARG_NEED_C_LEGACY_\n-# endif\n-\n-# include <cstdarg>\n-\n-  // Expose global C names, including non-standard ones, but shadow\n-  // some names and types with the std:: C++ version.\n-  using std::va_list;\n-\n-# ifdef _STDARG_NEED_C_LEGACY_\n-  // dive back into the \"swamp\"\n-  namespace _C_legacy {\n-    extern \"C\" {\n-#  define _IN_C_LEGACY_\n-#  undef _STDARG_NEED_C_LEGACY_\n-# endif /* _STDARG_NEED_C_LEGACY_ */\n-#endif /* _INCLUDED_CPP_STDARG_H_ */"}, {"sha": "03d5896779ea32e7e4d9709223d1fbe8d789d070", "filename": "libstdc++-v3/include/c_std/stddef.h", "status": "removed", "additions": 0, "deletions": 60, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee4fca5842a2dc2ffbc1a92954ed68481ef4fabc/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fstddef.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee4fca5842a2dc2ffbc1a92954ed68481ef4fabc/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fstddef.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fstddef.h?ref=ee4fca5842a2dc2ffbc1a92954ed68481ef4fabc", "patch": "@@ -1,60 +0,0 @@\n-// -*- C++ -*- header wrapper.\n-\n-// Copyright (C) 1997-1999, 2000 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-\n-#ifndef  _INCLUDED_CPP_STDDEF_H_\n-# define _INCLUDED_CPP_STDDEF_H_ 1\n-\n-# ifdef _IN_C_LEGACY_  /* sub-included by a C header */\n-      // get out of the \"legacy\"\n-    } // close extern \"C\"\n-  }   // close namespace _C_legacy::\n-#  undef _IN_C_LEGACY_\n-#  define _STDDEF_NEED_C_LEGACY_\n-# endif\n-\n-# include <cstddef>\n-\n-  // Expose global C names, including non-standard ones, but shadow\n-  // some names and types with the std:: C++ version.\n-  using std::ptrdiff_t;\n-  using std::size_t;\n-\n-# ifdef _STDDEF_NEED_C_LEGACY_\n-  // dive back into the \"swamp\"\n-  namespace _C_legacy {\n-    extern \"C\" {\n-#  define _IN_C_LEGACY_\n-#  undef _STDDEF_NEED_C_LEGACY_\n-# endif /* _STDDEF_NEED_C_LEGACY_ */\n-#endif /* _INCLUDED_CPP_STDDEF_H_ */\n-\n-\n-\n-"}, {"sha": "c3a43b736c2dc14aa61b42b1c361373716f3aa1a", "filename": "libstdc++-v3/include/c_std/stdio.h", "status": "removed", "additions": 0, "deletions": 97, "changes": 97, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee4fca5842a2dc2ffbc1a92954ed68481ef4fabc/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fstdio.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee4fca5842a2dc2ffbc1a92954ed68481ef4fabc/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fstdio.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fstdio.h?ref=ee4fca5842a2dc2ffbc1a92954ed68481ef4fabc", "patch": "@@ -1,97 +0,0 @@\n-// -*- C++ -*- header wrapper.\n-\n-// Copyright (C) 1997-1999, 2000 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-#ifndef  _INCLUDED_CPP_STDIO_H_\n-# define _INCLUDED_CPP_STDIO_H_ 1\n-\n-# ifdef _IN_C_LEGACY_  /* sub-included by a C header */\n-      // get out of the \"legacy\"\n-    } // close extern \"C\"\n-  }   // close namespace _C_legacy::\n-#  undef _IN_C_LEGACY_\n-#  define _STDIO_NEED_C_LEGACY_\n-# endif\n-\n-# include <cstdio>\n-\n-  // Expose global C names, including non-standard ones, but shadow\n-  // some names and types with the std:: C++ version.\n-  using std::FILE;\n-  using std::fpos_t; \n-\n-  using std::remove;\n-  using std::rename;\n-  using std::tmpfile;\n-  using std::tmpnam;\n-  using std::fclose;\n-  using std::fflush;\n-  using std::fopen;\n-  using std::freopen;\n-  using std::setbuf;\n-  using std::setvbuf;\n-  using std::fprintf;\n-  using std::fscanf;\n-  using std::printf;\n-  using std::scanf;\n-  using std::sprintf;\n-  using std::sscanf;\n-  using std::vfprintf;\n-  using std::vprintf;\n-  using std::vsprintf;\n-  using std::fgetc;\n-  using std::fgets;\n-  using std::fputc;\n-  using std::fputs;\n-  using std::getc;\n-  using std::getchar;\n-  using std::gets;\n-  using std::putc;\n-  using std::putchar;\n-  using std::puts;\n-  using std::ungetc;\n-  using std::fread;\n-  using std::fwrite;\n-  using std::fgetpos;\n-  using std::fseek;\n-  using std::fsetpos;\n-  using std::ftell;\n-  using std::rewind;\n-  using std::clearerr;\n-  using std::feof;\n-  using std::ferror;\n-  using std::perror;\n-\n-# ifdef _STDIO_NEED_C_LEGACY_\n-  // dive back into the \"swamp\"\n-  namespace _C_legacy {\n-    extern \"C\" {\n-#  define _IN_C_LEGACY_\n-#  undef _STDIO_NEED_C_LEGACY_\n-# endif /* _STDIO_NEED_C_LEGACY_ */\n-#endif /* _INCLUDED_CPP_STDIO_H_ */"}, {"sha": "c75cc5c068f524934198f85bb9ac4167478f43c2", "filename": "libstdc++-v3/include/c_std/stdlib.h", "status": "removed", "additions": 0, "deletions": 101, "changes": 101, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee4fca5842a2dc2ffbc1a92954ed68481ef4fabc/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fstdlib.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee4fca5842a2dc2ffbc1a92954ed68481ef4fabc/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fstdlib.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fstdlib.h?ref=ee4fca5842a2dc2ffbc1a92954ed68481ef4fabc", "patch": "@@ -1,101 +0,0 @@\n-// -*- C++ -*- header wrapper.\n-\n-// Copyright (C) 1997-1999, 2000 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-\n-#ifndef  _INCLUDED_CPP_STDLIB_H_\n-# define _INCLUDED_CPP_STDLIB_H_ 1\n-\n-# include <bits/c++config.h>\n-\n-# ifdef _IN_C_LEGACY_  /* sub-included by a C header */\n-      // get out of the \"legacy\"\n-    } // close extern \"C\"\n-  }   // close namespace _C_legacy::\n-#  undef _IN_C_LEGACY_\n-#  define _STDLIB_NEED_C_LEGACY_\n-# endif\n-\n-# include <cstdlib>\n-\n-  // Expose global C names, including non-standard ones, but shadow\n-  // some names and types with the std:: C++ version.\n-  using std::div_t;\n-  using std::ldiv_t;\n-#ifdef _GLIBCPP_USE_LONG_LONG\n-  using std::lldiv_t;\n-#endif\n-\n-//  using std::abort;\n-  using std::abs;\n-  using std::atexit;\n-  using std::atof;\n-  using std::atoi;\n-  using std::atol;\n-  using std::bsearch;\n-  using std::calloc;\n-  using std::div;\n-//  using std::exit;\n-  using std::free;\n-  using std::getenv;\n-  using std::labs;\n-  using std::ldiv;\n-  using std::malloc;\n-  using std::mblen;\n-  using std::mbstowcs;\n-  using std::mbtowc;\n-  using std::qsort;\n-  using std::rand;\n-  using std::realloc;\n-  using std::srand;\n-  using std::strtod;\n-  using std::strtol;\n-  using std::strtoul;\n-  using std::system;\n-  using std::wcstombs;\n-  using std::wctomb;\n-\n-  using std::strtof;\n-\n-#ifdef _GLIBCPP_USE_LONG_LONG\n-  using std::strtoll;\n-  using std::strtoull;\n-#endif\n-\n-#ifdef _GLIBCPP_HAVE_STRTOLD\n-  using std::strtold;\n-#endif\n-\n-# ifdef _STDLIB_NEED_C_LEGACY_\n-  // dive back into the \"swamp\"\n-  namespace _C_legacy {\n-    extern \"C\" {\n-#  define _IN_C_LEGACY_\n-#  undef _STDLIB_NEED_C_LEGACY_\n-# endif /* _STDLIB_NEED_C__LEGACY_ */\n-#endif /* _INCLUDED_CPP_STDLIB_H_ */"}, {"sha": "6f9e6cc6372e8b53172ed1fc12f432e79213abe3", "filename": "libstdc++-v3/include/c_std/string.h", "status": "removed", "additions": 0, "deletions": 76, "changes": 76, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee4fca5842a2dc2ffbc1a92954ed68481ef4fabc/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fstring.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee4fca5842a2dc2ffbc1a92954ed68481ef4fabc/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fstring.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fstring.h?ref=ee4fca5842a2dc2ffbc1a92954ed68481ef4fabc", "patch": "@@ -1,76 +0,0 @@\n-// -*- C++ -*- header wrapper.\n-\n-// Copyright (C) 1997-1999, 2000 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-\n-#ifndef  _INCLUDED_CPP_STRING_H_\n-# define _INCLUDED_CPP_STRING_H_ 1\n-\n-# ifdef _IN_C_LEGACY_  /* sub-included by a C header */\n-      // get out of the \"legacy\"\n-    } // close extern \"C\"\n-  }   // close namespace _C_legacy::\n-#  undef _IN_C_LEGACY_\n-#  define _STRING_NEED_C_LEGACY_\n-# endif\n-\n-# include <cstring>\n-\n-  // Expose global C names, including non-standard ones, but shadow\n-  // some names and types with the std:: C++ version.\n-  using std::memcpy;\n-  using std::memmove;\n-  using std::strcpy;\n-  using std::strncpy;\n-  using std::strcat;\n-  using std::strncat;\n-  using std::memcmp;\n-  using std::strcmp;\n-  using std::strcoll;\n-  using std::strncmp;\n-  using std::strxfrm;\n-  using std::memchr;\n-  using std::strchr;\n-  using std::strcspn;\n-  using std::strpbrk;\n-  using std::strrchr;\n-  using std::strspn;\n-  using std::strstr;\n-  using std::strtok;\n-  using std::memset;\n-  using std::strerror;\n-  using std::strlen;\n-\n-# ifdef _STRING_NEED_C_LEGACY_\n-  // dive back into the \"swamp\"\n-  namespace _C_legacy {\n-    extern \"C\" {\n-#  define _IN_C_LEGACY_\n-#  undef _STRING_NEED_C_LEGACY_\n-# endif /* _STRING_NEED_C_LEGACY_ */\n-#endif /* _INCLUDED_CPP_STRING_H_ */"}, {"sha": "da377faadbcc2a19e19baeaec4a0354968289c2a", "filename": "libstdc++-v3/include/c_std/sys/cdefs.h", "status": "removed", "additions": 0, "deletions": 49, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee4fca5842a2dc2ffbc1a92954ed68481ef4fabc/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fsys%2Fcdefs.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee4fca5842a2dc2ffbc1a92954ed68481ef4fabc/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fsys%2Fcdefs.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fsys%2Fcdefs.h?ref=ee4fca5842a2dc2ffbc1a92954ed68481ef4fabc", "patch": "@@ -1,49 +0,0 @@\n-// -*- C++ -*- header wrapper.\n-\n-// Copyright (C) 2000 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-\n-#ifndef _CPP_SYS_CDEFS_H\n-# define _CPP_SYS_CDEFS_H 1\n-\n-# pragma GCC system_header\n-# include_next <sys/cdefs.h>\n-\n-// glibc-2 hackery.  Other systems likely require other hacks.\n-#undef\t__BEGIN_DECLS\n-#define\t__BEGIN_DECLS\n-#undef\t__END_DECLS\n-#define\t__END_DECLS\n-\n-#endif /* _CPP_SYS_CDEFS_H_ */\n-\n-\n-\n-\n-\n-"}, {"sha": "31064aaa135187a98d64b1cbdb8d63d8368c0405", "filename": "libstdc++-v3/include/c_std/time.h", "status": "removed", "additions": 0, "deletions": 67, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee4fca5842a2dc2ffbc1a92954ed68481ef4fabc/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Ftime.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee4fca5842a2dc2ffbc1a92954ed68481ef4fabc/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Ftime.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Ftime.h?ref=ee4fca5842a2dc2ffbc1a92954ed68481ef4fabc", "patch": "@@ -1,67 +0,0 @@\n-// -*- C++ -*- header wrapper.\n-\n-// Copyright (C) 1997-1999, 2000 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-\n-#ifndef  _INCLUDED_CPP_TIME_H_\n-# define _INCLUDED_CPP_TIME_H_ 1\n-\n-# ifdef _IN_C_LEGACY_  /* sub-included by a C header */\n-      // get out of the \"legacy\"\n-    } // close extern \"C\"\n-  }   // close namespace _C_legacy::\n-#  undef _IN_C_LEGACY_\n-#  define _TIME_NEED_C_LEGACY_\n-# endif\n-\n-# include <ctime>\n- \n-  // Expose global C names, including non-standard ones, but shadow\n-  // some names and types with the std:: C++ version.\n-  using std::clock_t;\n-  using std::time_t;\n-  using std::tm;\n-\n-  using std::clock;\n-  using std::difftime;\n-  using std::mktime;\n-  using std::time;\n-  using std::asctime;\n-  using std::ctime;\n-  using std::gmtime;\n-  using std::localtime;\n-  using std::strftime;\n-\n-# ifdef _TIME_NEED_C_LEGACY_\n-  // dive back into the \"swamp\"\n-  namespace _C_legacy {\n-    extern \"C\" {\n-#  define _IN_C_LEGACY_\n-#  undef _TIME_NEED_C_LEGACY_\n-# endif /* _TIME_NEED_C_LEGACY_ */\n-#endif /* _INCLUDED_CPP_TIME_H_ */"}, {"sha": "e05efe72f57dfd69097c6dc5af5211a1c0430539", "filename": "libstdc++-v3/include/c_std/unistd.h", "status": "removed", "additions": 0, "deletions": 101, "changes": 101, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee4fca5842a2dc2ffbc1a92954ed68481ef4fabc/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Funistd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee4fca5842a2dc2ffbc1a92954ed68481ef4fabc/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Funistd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Funistd.h?ref=ee4fca5842a2dc2ffbc1a92954ed68481ef4fabc", "patch": "@@ -1,101 +0,0 @@\n-// -*- C++ -*- header wrapper.\n-\n-// Copyright (C) 2000 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-\n-#ifndef  _INCLUDED_CPP_UNISTD_H_\n-# define _INCLUDED_CPP_UNISTD_H_ 1\n-\n-# ifdef _IN_C_LEGACY_  /* sub-included by a C header */\n-      // get out of the \"legacy\"\n-    } // close extern \"C\"\n-  }   // close namespace _C_legacy::\n-#  undef _IN_C_LEGACY_\n-#  define _TIME_NEED_C_LEGACY_\n-# endif\n-\n-# include <bits/wrap_unistd.h>\n- \n-  // Expose global C names, including non-standard ones, but shadow\n-  // some names and types with the std:: C++ version.\n-#ifdef __gid_t_defined\n-  using _C_legacy::gid_t;\n-#endif\n-#ifdef __uid_t_defined\n-  using _C_legacy::uid_t;\n-#endif\n-#ifdef __off_t_defined\n-  using _C_legacy::off_t;\n-#endif\n-#ifdef __off64_t_defined\n-  using _C_legacy::off64_t;\n-#endif\n-#ifdef __useconds_t_defined\n-  using _C_legacy::useconds_t;\n-#endif\n-#ifdef __pid_t_defined\n-  using _C_legacy::pid_t;\n-#endif\n-  using _C_legacy::intptr_t;\n-#ifdef __socklen_t_defined\n-  using _C_legacy::socklen_t;\n-#endif\n-\n-  using _C_legacy::access;\n-  using _C_legacy::euidaccess;\n-  using _C_legacy::lseek;\n-  using _C_legacy::close;\n-  using _C_legacy::read;\n-  using _C_legacy::write;\n-  using _C_legacy::pread;\n-  using _C_legacy::pwrite;\n-  using _C_legacy::pipe;\n-  using _C_legacy::alarm;\n-  using _C_legacy::sleep;\n-  using _C_legacy::ualarm;\n-  using _C_legacy::usleep;\n-  using _C_legacy::pause;\n-  using _C_legacy::chown;\n-  using _C_legacy::fchown;\n-  using _C_legacy::lchown;\n-  using _C_legacy::chdir;\n-  using _C_legacy::fchdir;\n-  using _C_legacy::getcwd;\n-  using _C_legacy::get_current_dir_name;\n-  using _C_legacy::getwd;\n-  using _C_legacy::dup;\n-  using _C_legacy::dup2;\n-\n-# ifdef _TIME_NEED_C_LEGACY_\n-  // dive back into the \"swamp\"\n-  namespace _C_legacy {\n-    extern \"C\" {\n-#  define _IN_C_LEGACY_\n-#  undef _TIME_NEED_C_LEGACY_\n-# endif /* _TIME_NEED_C_LEGACY_ */\n-#endif /* _INCLUDED_CPP_UNISTD_H_ */"}, {"sha": "efabb1519a5b85011ec829ba81b03c9eca80d2d7", "filename": "libstdc++-v3/include/c_std/wchar.h", "status": "removed", "additions": 0, "deletions": 131, "changes": 131, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee4fca5842a2dc2ffbc1a92954ed68481ef4fabc/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fwchar.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee4fca5842a2dc2ffbc1a92954ed68481ef4fabc/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fwchar.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fwchar.h?ref=ee4fca5842a2dc2ffbc1a92954ed68481ef4fabc", "patch": "@@ -1,131 +0,0 @@\n-// -*- C++ -*- header wrapper.\n-\n-// Copyright (C) 1997-1999, 2000 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-\n-#ifndef  _INCLUDED_CPP_WCHAR_H_\n-# define _INCLUDED_CPP_WCHAR_H_ 1\n-\n-# ifdef _IN_C_LEGACY_  /* sub-included by a C header */\n-      // get out of the \"legacy\"\n-    } // close extern \"C\"\n-  }   // close namespace _C_legacy::\n-#  undef _IN_C_LEGACY_  /* sub-included by a C header */\n-#  define _WCHAR_NEED_C_LEGACY_\n-# endif\n-\n-# include <cwchar>\n-\n-  // Expose global C names, including non-standard ones, but shadow\n-  // some names and types with the std:: C++ version.\n-  using std::wchar_t;\n-  using std::wint_t;\n-  using std::mbstate_t;\n-\n-#if 0\n-  using std::fwprintf;\n-  using std::fwscanf;\n-  using std::swprintf;\n-  using std::swscanf;\n-  using std::vfwprintf;\n-  using std::vfwscanf;\n-  using std::vswprintf;\n-  using std::vswscanf;\n-  using std::vwprintf;\n-  using std::vwscanf;\n-  using std::wprintf;\n-  using std::wscanf;\n-  using std::fgetwc;\n-  using std::fgetws;\n-  using std::fputwc;\n-  using std::fputws;\n-  using std::fwide;\n-  using std::getwc;\n-  using std::getwchar;\n-  using std::putwc;\n-  using std::putwchar;\n-  using std::ungetwc;\n-#endif\n-\n-  using std::wcstod;\n-  using std::wcstof;\n-  using std::wcstold;\n-  using std::wcstol;\n-  using std::wcstoll;\n-  using std::wcstoul;\n-  using std::wcstoull;\n-  using std::wcscpy;\n-  using std::wcsncpy;\n-  using std::wcscat;\n-  using std::wcsncat;\n-\n-#if 0\n-  using std::wcsmp;\n-#endif\n-\n-  using std::wcscoll;\n-  using std::wcsncmp;\n-  using std::wcsxfrm;\n-  using std::wcschr;\n-  using std::wcscspn;\n-  using std::wcslen;\n-  using std::wcspbrk;\n-  using std::wcsrchr;\n-  using std::wcsspn;\n-  using std::wcsstr;\n-  using std::wcstok;\n-  using std::wmemchr;\n-  using std::wmemcmp;\n-  using std::wmemcpy;\n-  using std::wmemmove;\n-  using std::wmemset;\n-\n-#if 0\n-  using std::wcsftime;\n-#endif\n-\n-  using std::btowc;\n-  using std::wctob;\n-  using std::mbsinit;\n-  using std::mbrlen;\n-  using std::mbrtowc;\n-  using std::wcrtomb;\n-  using std::mbsrtowcs;\n-  using std::wcsrtombs;\n-\n-# ifdef _WCHAR_NEED_C_LEGACY_\n-  // dive back into the \"swamp\"\n-  namespace _C_legacy {\n-    extern \"C\" {\n-#  define _IN_C_LEGACY_\n-#  undef _WCHAR_NEED_C_LEGACY_\n-# endif /* _WCHAR_NEED_C_LEGACY_ */\n-#endif /* _INCLUDED_CPP_WCHAR_H_ */\n-\n-\n-"}, {"sha": "cae1aff43e14caecac6184781dc9e73e306a0265", "filename": "libstdc++-v3/include/c_std/wctype.h", "status": "removed", "additions": 0, "deletions": 74, "changes": 74, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee4fca5842a2dc2ffbc1a92954ed68481ef4fabc/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fwctype.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee4fca5842a2dc2ffbc1a92954ed68481ef4fabc/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fwctype.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fwctype.h?ref=ee4fca5842a2dc2ffbc1a92954ed68481ef4fabc", "patch": "@@ -1,74 +0,0 @@\n-// -*- C++ -*- header wrapper.\n-\n-// Copyright (C) 1997-1999, 2000 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-\n-#ifndef  _INCLUDED_CPP_CWCTYPE_H_\n-# define _INCLUDED_CPP_CWCTYPE_H_ 1\n-\n-# ifdef _IN_C_LEGACY_  /* sub-included by a C header */\n-      // get out of the \"legacy\"\n-    } // close extern \"C\"\n-  }   // close namespace _C_legacy::\n-#  undef _IN_C_LEGACY_\n-#  define _CWCHAR_NEED_C_LEGACY_\n-# endif\n-\n-# include <cwctype>\n-\n-  // Expose global C names, including non-standard ones, but shadow\n-  // some names and types with the std:: C++ version.\n-  using std::wint_t;\n-  using std::wctype_t;\n-  using std::wctrans_t;\n-  using std::iswalpha;\n-  using std::iswupper;\n-  using std::iswlower;\n-  using std::iswdigit;\n-  using std::iswxdigit;\n-  using std::iswalnum;\n-  using std::iswspace;\n-  using std::iswpunct;\n-  using std::iswprint;\n-  using std::iswgraph;\n-  using std::iswcntrl;\n-  using std::iswctype;\n-  using std::towctrans;\n-  using std::towlower;\n-  using std::towupper;\n-  using std::wctrans;\n-  using std::wctype;\n-\n-# ifdef _CWCHAR_NEED_C_LEGACY_\n-  // dive back into the \"swamp\"\n-  namespace _C_legacy {\n-    extern \"C\" {\n-#  define _IN_C_LEGACY_\n-#  undef _CWCHAR_NEED_C_LEGACY_\n-# endif /* _CWCHAR_NEED_C_LEGACY_ */\n-#endif /* _INCLUDED_CPP_CWCTYPE_H_ */"}]}