{"sha": "e4b6bec2f1a0b420437fa7a8f6bf2da3dce9c228", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTRiNmJlYzJmMWEwYjQyMDQzN2ZhN2E4ZjZiZjJkYTNkY2U5YzIyOA==", "commit": {"author": {"name": "Eric Christopher", "email": "echristo@gcc.gnu.org", "date": "2007-01-04T23:16:34Z"}, "committer": {"name": "Eric Christopher", "email": "echristo@gcc.gnu.org", "date": "2007-01-04T23:16:34Z"}, "message": "libgcc2.c (__bswapsi2): Use SItype.\n\n2007-01-04  Eric Christopher  <echristo@apple.com>\n\n\t    * libgcc2.c (__bswapsi2): Use SItype.\n\t      (__bswapdi2): Use DItype.\n\t    * libgcc2.h: Update for above.\n\nFrom-SVN: r120454", "tree": {"sha": "dd4094fdd3ac11de20be720f32640aa8e1967ff6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dd4094fdd3ac11de20be720f32640aa8e1967ff6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e4b6bec2f1a0b420437fa7a8f6bf2da3dce9c228", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e4b6bec2f1a0b420437fa7a8f6bf2da3dce9c228", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e4b6bec2f1a0b420437fa7a8f6bf2da3dce9c228", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e4b6bec2f1a0b420437fa7a8f6bf2da3dce9c228/comments", "author": null, "committer": null, "parents": [{"sha": "d6c397b0ffe06e3008d3c82330bf8cf63962b328", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6c397b0ffe06e3008d3c82330bf8cf63962b328", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d6c397b0ffe06e3008d3c82330bf8cf63962b328"}], "stats": {"total": 28, "additions": 17, "deletions": 11}, "files": [{"sha": "907c7b56c1bbccf6c00887a71e7c4c18b2d2451c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4b6bec2f1a0b420437fa7a8f6bf2da3dce9c228/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4b6bec2f1a0b420437fa7a8f6bf2da3dce9c228/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e4b6bec2f1a0b420437fa7a8f6bf2da3dce9c228", "patch": "@@ -1,3 +1,9 @@\n+2007-01-04  Eric Christopher  <echristo@apple.com>\n+\n+\t* libgcc2.c (__bswapsi2): Use SItype.\n+\t(__bswapdi2): Use DItype.\n+\t* libgcc2.h: Update for above.\n+\n 2007-01-04  Paul Brook  <paul@codesourcery.com>\n \n \t* config/arm/arm.md (arm_mulsi3, thumb_mulsi3, mulsi3_compare0,\n@@ -381,14 +387,14 @@\n 2007-01-02  Steve Ellcey  <sje@cup.hp.com>\n \n \t* sbitmap.c (HOST_BITS_PER_LONG_LONG):  Change to\n-\tHOST_BITS_PER_LONGLONG \n+\tHOST_BITS_PER_LONGLONG\n \n 2007-01-02  Manuel Lopez-Ibanez <manu@gcc.gnu.org>\n \n \tPR c/19977\n \t* c-typeck.c (store_init_value): Don't emit pedantic overflow\n \twarning for non-static initializers.\n-\t\n+\n 2007-01-02  Steven Bosscher  <steven@gcc.gnu.org>\n \n \t* config/alpha/alpha.md, arm/arm.c, darwin.c, frv/frv.md,\n@@ -427,7 +433,7 @@\n \t* c-opts.c (c_common_post_options): Enabled by -Wextra.\n \t* c-decl.c (declspecs_add_scspec): Replace -Wextra with\n \t-Wold-style-declaration.\n-\t\n+\n 2007-01-02  Kazu Hirata  <kazu@codesourcery.com>\n \n \t* alias.c (init_alias_analysis): Use VEC_safe_grow_cleared.\n@@ -445,7 +451,7 @@\n \n \t* c-common.c(c_common_nodes_and_builtins): Since variants of\n \tvoid_type_node get built before it is given a name, we need to\n-\tgive those variants the name, too. \n+\tgive those variants the name, too.\n \t(complete_array_type): We need to work with the canonical main\n \ttype of the array, from which we will build the qualified version.\n \t* params.def (PARAM_VERIFY_CANONICAL_TYPES): New.\n@@ -475,7 +481,7 @@\n \tstructural equality tests.\n \t(build_array_type): Build the canonical form of an array type.\n \t(build_function_type): Function types require structural equality,\n-\tbecause they contain default arguments, attributes, etc. \n+\tbecause they contain default arguments, attributes, etc.\n \t(build_method_type_directly): Ditto for method types.\n \t(build_offset_type): Build the canonical offset type.\n \t(build_complex_type): Build the canonical vector type."}, {"sha": "b78b8f6a387978123c1c837ba7a7ee9e37d014f1", "filename": "gcc/libgcc2.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4b6bec2f1a0b420437fa7a8f6bf2da3dce9c228/gcc%2Flibgcc2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4b6bec2f1a0b420437fa7a8f6bf2da3dce9c228/gcc%2Flibgcc2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flibgcc2.c?ref=e4b6bec2f1a0b420437fa7a8f6bf2da3dce9c228", "patch": "@@ -493,8 +493,8 @@ __ashrdi3 (DWtype u, word_type b)\n #endif\n \f\n #ifdef L_bswapsi2\n-UWtype\n-__bswapsi2 (UWtype u)\n+SItype\n+__bswapsi2 (SItype u)\n {\n   return ((((u) & 0xff000000) >> 24)\n \t  | (((u) & 0x00ff0000) >>  8)\n@@ -503,8 +503,8 @@ __bswapsi2 (UWtype u)\n }\n #endif\n #ifdef L_bswapdi2\n-UDWtype\n-__bswapdi2 (UDWtype u)\n+DItype\n+__bswapdi2 (DItype u)\n {\n   return ((((u) & 0xff00000000000000ull) >> 56)\n \t  | (((u) & 0x00ff000000000000ull) >> 40)"}, {"sha": "a38758ec11ed52e9839fd774c94966d56842001d", "filename": "gcc/libgcc2.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4b6bec2f1a0b420437fa7a8f6bf2da3dce9c228/gcc%2Flibgcc2.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4b6bec2f1a0b420437fa7a8f6bf2da3dce9c228/gcc%2Flibgcc2.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flibgcc2.h?ref=e4b6bec2f1a0b420437fa7a8f6bf2da3dce9c228", "patch": "@@ -345,13 +345,13 @@ extern Wtype __addvSI3 (Wtype, Wtype);\n extern Wtype __subvSI3 (Wtype, Wtype);\n extern Wtype __mulvSI3 (Wtype, Wtype);\n extern Wtype __negvSI2 (Wtype);\n-extern UWtype __bswapsi2 (UWtype);\n+extern SItype __bswapsi2 (SItype);\n extern DWtype __absvDI2 (DWtype);\n extern DWtype __addvDI3 (DWtype, DWtype);\n extern DWtype __subvDI3 (DWtype, DWtype);\n extern DWtype __mulvDI3 (DWtype, DWtype);\n extern DWtype __negvDI2 (DWtype);\n-extern UDWtype __bswapdi2 (UDWtype);\n+extern DItype __bswapdi2 (DItype);\n \n #ifdef COMPAT_SIMODE_TRAPPING_ARITHMETIC\n extern SItype __absvsi2 (SItype);"}]}