{"sha": "ba6bdc291161cc347ee83e88d7f93efd80fb8f31", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmE2YmRjMjkxMTYxY2MzNDdlZTgzZTg4ZDdmOTNlZmQ4MGZiOGYzMQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2012-12-16T10:25:17Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2012-12-16T10:25:17Z"}, "message": "re PR target/55673 (Reversed before/after handling in sparc_emit_membar_for_model)\n\n\tPR target/55673\n\t* config/sparc/sparc.c (sparc_emit_membar_for_model): Fix reversed\n\thandling of before and after cases.\n\t* config/sparc/sync.md (atomic_store): Fix pasto.\n\nCo-Authored-By: Tomash Brechko <tomash.brechko@gmail.com>\n\nFrom-SVN: r194531", "tree": {"sha": "4faef93d90e276856005eaf25fedc681149fdb61", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4faef93d90e276856005eaf25fedc681149fdb61"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ba6bdc291161cc347ee83e88d7f93efd80fb8f31", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba6bdc291161cc347ee83e88d7f93efd80fb8f31", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ba6bdc291161cc347ee83e88d7f93efd80fb8f31", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba6bdc291161cc347ee83e88d7f93efd80fb8f31/comments", "author": null, "committer": null, "parents": [{"sha": "1bae867a84abddcbd146f0a8b5d82426c3bb8a46", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1bae867a84abddcbd146f0a8b5d82426c3bb8a46", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1bae867a84abddcbd146f0a8b5d82426c3bb8a46"}], "stats": {"total": 33, "additions": 20, "deletions": 13}, "files": [{"sha": "f3583edcbdc5afddc4fba9837495754efb6b9fd0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba6bdc291161cc347ee83e88d7f93efd80fb8f31/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba6bdc291161cc347ee83e88d7f93efd80fb8f31/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ba6bdc291161cc347ee83e88d7f93efd80fb8f31", "patch": "@@ -1,3 +1,11 @@\n+2012-12-16  Eric Botcazou  <ebotcazou@adacore.com>\n+\t    Tomash Brechko  <tomash.brechko@gmail.com>\n+\n+\tPR target/55673\n+\t* config/sparc/sparc.c (sparc_emit_membar_for_model): Fix reversed\n+\thandling of before and after cases.\n+\t* config/sparc/sync.md (atomic_store): Fix pasto.\n+\n 2012-12-16  Eric Botcazou  <ebotcazou@adacore.com>\n \n \tPR rtl-optimization/55630"}, {"sha": "054672bd777ec6760b19466422220c0be671ad06", "filename": "gcc/config/sparc/sparc.c", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba6bdc291161cc347ee83e88d7f93efd80fb8f31/gcc%2Fconfig%2Fsparc%2Fsparc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba6bdc291161cc347ee83e88d7f93efd80fb8f31/gcc%2Fconfig%2Fsparc%2Fsparc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.c?ref=ba6bdc291161cc347ee83e88d7f93efd80fb8f31", "patch": "@@ -11190,26 +11190,26 @@ sparc_emit_membar_for_model (enum memmodel model,\n \n   if (before_after & 1)\n     {\n-      if (model == MEMMODEL_ACQUIRE\n-          || model == MEMMODEL_ACQ_REL\n-          || model == MEMMODEL_SEQ_CST)\n+      if (model == MEMMODEL_RELEASE\n+\t  || model == MEMMODEL_ACQ_REL\n+\t  || model == MEMMODEL_SEQ_CST)\n \t{\n \t  if (load_store & 1)\n-\t    mm |= LoadLoad | LoadStore;\n+\t    mm |= LoadLoad | StoreLoad;\n \t  if (load_store & 2)\n-\t    mm |= StoreLoad | StoreStore;\n+\t    mm |= LoadStore | StoreStore;\n \t}\n     }\n   if (before_after & 2)\n     {\n-      if (model == MEMMODEL_RELEASE\n+      if (model == MEMMODEL_ACQUIRE\n \t  || model == MEMMODEL_ACQ_REL\n \t  || model == MEMMODEL_SEQ_CST)\n \t{\n \t  if (load_store & 1)\n-\t    mm |= LoadLoad | StoreLoad;\n+\t    mm |= LoadLoad | LoadStore;\n \t  if (load_store & 2)\n-\t    mm |= LoadStore | StoreStore;\n+\t    mm |= StoreLoad | StoreStore;\n \t}\n     }\n "}, {"sha": "0295e6ee24a46b2e182abc57c8867a7e7b4a1f1d", "filename": "gcc/config/sparc/sync.md", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba6bdc291161cc347ee83e88d7f93efd80fb8f31/gcc%2Fconfig%2Fsparc%2Fsync.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba6bdc291161cc347ee83e88d7f93efd80fb8f31/gcc%2Fconfig%2Fsparc%2Fsync.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsync.md?ref=ba6bdc291161cc347ee83e88d7f93efd80fb8f31", "patch": "@@ -35,8 +35,7 @@\n \n (define_expand \"membar\"\n   [(set (match_dup 1)\n-\t(unspec:BLK [(match_dup 1)\n-\t\t     (match_operand:SI 0 \"const_int_operand\")]\n+\t(unspec:BLK [(match_dup 1) (match_operand:SI 0 \"const_int_operand\")]\n \t\t    UNSPEC_MEMBAR))]\n   \"TARGET_V8 || TARGET_V9\"\n {\n@@ -66,7 +65,7 @@\n   \"stbar\"\n   [(set_attr \"type\" \"multi\")])\n \n-;; For V8, LDSTUB has the effect of membar #StoreLoad\n+;; For V8, LDSTUB has the effect of membar #StoreLoad.\n (define_insn \"*membar_storeload\"\n   [(set (match_operand:BLK 0 \"\" \"\")\n \t(unspec:BLK [(match_dup 0) (const_int 2)] UNSPEC_MEMBAR))]\n@@ -123,8 +122,8 @@\n   [(set_attr \"type\" \"load,fpload\")])\n \n (define_expand \"atomic_store<mode>\"\n-  [(match_operand:I 0 \"register_operand\" \"\")\n-   (match_operand:I 1 \"memory_operand\" \"\")\n+  [(match_operand:I 0 \"memory_operand\" \"\")\n+   (match_operand:I 1 \"register_operand\" \"\")\n    (match_operand:SI 2 \"const_int_operand\" \"\")]\n   \"\"\n {"}]}