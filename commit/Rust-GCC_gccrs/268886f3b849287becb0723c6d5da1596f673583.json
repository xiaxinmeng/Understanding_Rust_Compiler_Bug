{"sha": "268886f3b849287becb0723c6d5da1596f673583", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjY4ODg2ZjNiODQ5Mjg3YmVjYjA3MjNjNmQ1ZGExNTk2ZjY3MzU4Mw==", "commit": {"author": {"name": "Zdenek Dvorak", "email": "dvorakz@suse.cz", "date": "2007-04-29T17:33:34Z"}, "committer": {"name": "Zdenek Dvorak", "email": "rakdver@gcc.gnu.org", "date": "2007-04-29T17:33:34Z"}, "message": "df-scan.c (record_nonlocal_goto_receiver_defs): New function.\n\n\t* df-scan.c (record_nonlocal_goto_receiver_defs): New function.\n\t(df_refs_record): Call it.\n\nFrom-SVN: r124283", "tree": {"sha": "eeda8d346aacdcfb0bc2f25ac2d64a014a13730a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eeda8d346aacdcfb0bc2f25ac2d64a014a13730a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/268886f3b849287becb0723c6d5da1596f673583", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/268886f3b849287becb0723c6d5da1596f673583", "html_url": "https://github.com/Rust-GCC/gccrs/commit/268886f3b849287becb0723c6d5da1596f673583", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/268886f3b849287becb0723c6d5da1596f673583/comments", "author": null, "committer": null, "parents": [{"sha": "677e29e167fb205d5bee619c68ba057d5211cf73", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/677e29e167fb205d5bee619c68ba057d5211cf73", "html_url": "https://github.com/Rust-GCC/gccrs/commit/677e29e167fb205d5bee619c68ba057d5211cf73"}], "stats": {"total": 34, "additions": 34, "deletions": 0}, "files": [{"sha": "dbf78d08e222c961bb689fdb68d35ea96af25aa5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/268886f3b849287becb0723c6d5da1596f673583/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/268886f3b849287becb0723c6d5da1596f673583/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=268886f3b849287becb0723c6d5da1596f673583", "patch": "@@ -1,3 +1,8 @@\n+2007-04-29  Zdenek Dvorak  <dvorakz@suse.cz>\n+\n+\t* df-scan.c (record_nonlocal_goto_receiver_defs): New function.\n+\t(df_refs_record): Call it.\n+\n 2007-04-29  Bernd Schmidt  <bernd.schmidt@analog.com>\n \n \t* rtl.def (SS_ABS): New code."}, {"sha": "87d21a4bb170b98483b92b6100eaeb4612009186", "filename": "gcc/df-scan.c", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/268886f3b849287becb0723c6d5da1596f673583/gcc%2Fdf-scan.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/268886f3b849287becb0723c6d5da1596f673583/gcc%2Fdf-scan.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdf-scan.c?ref=268886f3b849287becb0723c6d5da1596f673583", "patch": "@@ -1765,6 +1765,32 @@ df_bb_refs_record (struct dataflow *dflow, basic_block bb)\n     }\n }\n \n+/* Records the implicit definitions at targets of nonlocal gotos in BLOCKS.  */\n+\n+static void\n+record_nonlocal_goto_receiver_defs (struct dataflow *dflow, bitmap blocks)\n+{\n+  rtx x;\n+  basic_block bb;\n+\n+  /* See expand_builtin_setjmp_receiver; hard_frame_pointer_rtx is used in\n+     the nonlocal goto receiver, and needs to be considered defined\n+     implicitly.  */\n+  if (!(dflow->flags & DF_HARD_REGS))\n+    return;\n+\n+  for (x = nonlocal_goto_handler_labels; x; x = XEXP (x, 1))\n+    {\n+      bb = BLOCK_FOR_INSN (XEXP (x, 0));\n+      if (!bitmap_bit_p (blocks, bb->index))\n+\tcontinue;\n+\n+      df_ref_record (dflow, hard_frame_pointer_rtx, &hard_frame_pointer_rtx,\n+\t\t     bb, NULL,\n+\t\t     DF_REF_REG_DEF, DF_REF_ARTIFICIAL | DF_REF_AT_TOP,\n+\t\t     false);\n+    }\n+}\n \n /* Record all the refs in the basic blocks specified by BLOCKS.  */\n \n@@ -1785,6 +1811,9 @@ df_refs_record (struct dataflow *dflow, bitmap blocks)\n \n   if (bitmap_bit_p (blocks, ENTRY_BLOCK))\n     df_record_entry_block_defs (dflow);\n+\n+  if (current_function_has_nonlocal_label)\n+    record_nonlocal_goto_receiver_defs (dflow, blocks);\n }\n \n "}]}