{"sha": "9330cba6e3eb902fd41f3bcb40c9ff063cd83556", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTMzMGNiYTZlM2ViOTAyZmQ0MWYzYmNiNDBjOWZmMDYzY2Q4MzU1Ng==", "commit": {"author": {"name": "Keith Seitz", "email": "keiths@redhat.com", "date": "2006-06-26T16:31:06Z"}, "committer": {"name": "Keith Seitz", "email": "kseitz@gcc.gnu.org", "date": "2006-06-26T16:31:06Z"}, "message": "no-gc.h (_Jv_SuspendThread): Declare.\n\n        * include/no-gc.h (_Jv_SuspendThread): Declare.\n        (_Jv_ResumeThread): Likewise.\n        * include/boehm-gc.h (_Jv_SuspendThread): Declare.\n        (_Jv_ResumeThread): Likewise.\n        * nogc.cc (_Jv_SuspendThread): New function.\n        (_Jv_ResumeThread): Likewise.\n        * boehm.cc (_Jv_SuspendThread): New function.\n        (_Jv_ResumeThread): Likewise.\n\nFrom-SVN: r115019", "tree": {"sha": "1fa6120b44c9750c14438a1be5fa7c56c5336ae7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1fa6120b44c9750c14438a1be5fa7c56c5336ae7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9330cba6e3eb902fd41f3bcb40c9ff063cd83556", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9330cba6e3eb902fd41f3bcb40c9ff063cd83556", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9330cba6e3eb902fd41f3bcb40c9ff063cd83556", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9330cba6e3eb902fd41f3bcb40c9ff063cd83556/comments", "author": {"login": "shtiek", "id": 107581324, "node_id": "U_kgDOBmmPjA", "avatar_url": "https://avatars.githubusercontent.com/u/107581324?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shtiek", "html_url": "https://github.com/shtiek", "followers_url": "https://api.github.com/users/shtiek/followers", "following_url": "https://api.github.com/users/shtiek/following{/other_user}", "gists_url": "https://api.github.com/users/shtiek/gists{/gist_id}", "starred_url": "https://api.github.com/users/shtiek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shtiek/subscriptions", "organizations_url": "https://api.github.com/users/shtiek/orgs", "repos_url": "https://api.github.com/users/shtiek/repos", "events_url": "https://api.github.com/users/shtiek/events{/privacy}", "received_events_url": "https://api.github.com/users/shtiek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a469a4f2410b8e85bb7cdd6ea9ea07320491ceee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a469a4f2410b8e85bb7cdd6ea9ea07320491ceee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a469a4f2410b8e85bb7cdd6ea9ea07320491ceee"}], "stats": {"total": 50, "additions": 46, "deletions": 4}, "files": [{"sha": "5bff6bd1261c7b8155c4f3b7801561c7db5db2ce", "filename": "libjava/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9330cba6e3eb902fd41f3bcb40c9ff063cd83556/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9330cba6e3eb902fd41f3bcb40c9ff063cd83556/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=9330cba6e3eb902fd41f3bcb40c9ff063cd83556", "patch": "@@ -1,3 +1,14 @@\n+2006-06-26  Keith Seitz  <keiths@redhat.com>\n+\n+\t* include/no-gc.h (_Jv_SuspendThread): Declare.\n+\t(_Jv_ResumeThread): Likewise.\n+\t* include/boehm-gc.h (_Jv_SuspendThread): Declare.\n+\t(_Jv_ResumeThread): Likewise.\n+\t* nogc.cc (_Jv_SuspendThread): New function.\n+\t(_Jv_ResumeThread): Likewise.\n+\t* boehm.cc (_Jv_SuspendThread): New function.\n+\t(_Jv_ResumeThread): Likewise.\n+\n 2006-06-22  Thomas Fitzsimmons  <fitzsim@redhat.com>\n \n \t* testsuite/libjava.jni/jni.exp (gcj_jni_invocation_test_one):"}, {"sha": "7b2c031730b040956ee3390a13f5b66de85bf279", "filename": "libjava/boehm.cc", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9330cba6e3eb902fd41f3bcb40c9ff063cd83556/libjava%2Fboehm.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9330cba6e3eb902fd41f3bcb40c9ff063cd83556/libjava%2Fboehm.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fboehm.cc?ref=9330cba6e3eb902fd41f3bcb40c9ff063cd83556", "patch": "@@ -673,3 +673,14 @@ _Jv_RegisterLibForGc (const void *p __attribute__ ((__unused__)))\n #endif\n }\n \n+void\n+_Jv_SuspendThread (_Jv_Thread_t *thread)\n+{\n+  GC_suspend_thread (_Jv_GetPlatformThreadID (thread));\n+}\n+\n+void\n+_Jv_ResumeThread (_Jv_Thread_t *thread)\n+{\n+  GC_resume_thread (_Jv_GetPlatformThreadID (thread));\n+}"}, {"sha": "764b2a1d661a493a7c6cf2544f5d7df5bf2b26c0", "filename": "libjava/include/boehm-gc.h", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9330cba6e3eb902fd41f3bcb40c9ff063cd83556/libjava%2Finclude%2Fboehm-gc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9330cba6e3eb902fd41f3bcb40c9ff063cd83556/libjava%2Finclude%2Fboehm-gc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Finclude%2Fboehm-gc.h?ref=9330cba6e3eb902fd41f3bcb40c9ff063cd83556", "patch": "@@ -1,7 +1,7 @@\n // -*- c++ -*-\n // boehm-gc.h - Defines for Boehm collector.\n \n-/* Copyright (C) 1998, 1999, 2002, 2004  Free Software Foundation\n+/* Copyright (C) 1998, 1999, 2002, 2004, 2006  Free Software Foundation\n \n    This file is part of libgcj.\n \n@@ -83,4 +83,10 @@ _Jv_AllocPtrFreeObj (jsize size, jclass klass);\n // _Jv_AllocBytes (jsize size) should go here, too.  But clients don't\n // usually include this header.\n \n+// Suspend the given thread. This includes suspending the calling thread.\n+extern \"C\" void _Jv_SuspendThread (_Jv_Thread_t *);\n+\n+// Resume a suspended thread.\n+extern \"C\" void _Jv_ResumeThread (_Jv_Thread_t *);\n+\n #endif /* __JV_BOEHM_GC__ */"}, {"sha": "193b8ea4d05c9ddc0c5086d3dcc4d700392d06e3", "filename": "libjava/include/no-gc.h", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9330cba6e3eb902fd41f3bcb40c9ff063cd83556/libjava%2Finclude%2Fno-gc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9330cba6e3eb902fd41f3bcb40c9ff063cd83556/libjava%2Finclude%2Fno-gc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Finclude%2Fno-gc.h?ref=9330cba6e3eb902fd41f3bcb40c9ff063cd83556", "patch": "@@ -1,7 +1,7 @@\n // -*- c++ -*-\n // no-gc.h - Defines for no garbage collector.\n \n-/* Copyright (C) 1998, 1999  Free Software Foundation\n+/* Copyright (C) 1998, 1999, 2006  Free Software Foundation\n \n    This file is part of libgcj.\n \n@@ -12,6 +12,10 @@ details.  */\n #ifndef __JV_NO_GC__\n #define __JV_NO_GC__\n \n-// Nothing.\n+// Suspend the given thread. This includes suspending the calling thread.\n+extern \"C\" void _Jv_SuspendThread (_Jv_Thread_t *);\n+\n+// Resume a suspended thread.\n+extern \"C\" void _Jv_ResumeThread (_Jv_Thread_t *);\n \n #endif /* __JV_NO_GC__ */"}, {"sha": "f25037aae0e97da0d7af87c5fbbabc05de37204c", "filename": "libjava/nogc.cc", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9330cba6e3eb902fd41f3bcb40c9ff063cd83556/libjava%2Fnogc.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9330cba6e3eb902fd41f3bcb40c9ff063cd83556/libjava%2Fnogc.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fnogc.cc?ref=9330cba6e3eb902fd41f3bcb40c9ff063cd83556", "patch": "@@ -1,6 +1,6 @@\n // nogc.cc - Implement null garbage collector.\n \n-/* Copyright (C) 1998, 1999, 2000, 2001, 2002  Free Software Foundation\n+/* Copyright (C) 1998, 1999, 2000, 2001, 2002, 2006  Free Software Foundation\n \n    This file is part of libgcj.\n \n@@ -165,3 +165,13 @@ _Jv_AllocTraceTwo (jsize size /* includes vtable slot */)\n   return result;\n }\n #endif /* JV_HASH_SYNCHRONIZATION */\n+\n+void\n+_Jv_SuspendThread (_Jv_Thread_t *thread)\n+{\n+}\n+\n+void\n+_Jv_ResumeThread (_Jv_Thread_t *thread)\n+{\n+}"}]}