{"sha": "236d6a33ca63714474f0077390bff2d9d5b125eb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjM2ZDZhMzNjYTYzNzE0NDc0ZjAwNzczOTBiZmYyZDlkNWIxMjVlYg==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2021-01-14T16:06:08Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2021-01-14T16:06:08Z"}, "message": "mklog: skip unsupported files\n\nThis fixes an infinite loop one could see for:\ngit show b87ec922c40 | ./contrib/mklog.py\n\ncontrib/ChangeLog:\n\n\t* mklog.py: Fix infinite loop for unsupported files.", "tree": {"sha": "371ae2f30c281a9dabbb5852e253e67a8bed1478", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/371ae2f30c281a9dabbb5852e253e67a8bed1478"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/236d6a33ca63714474f0077390bff2d9d5b125eb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/236d6a33ca63714474f0077390bff2d9d5b125eb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/236d6a33ca63714474f0077390bff2d9d5b125eb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/236d6a33ca63714474f0077390bff2d9d5b125eb/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "77d372abec0fbf2cfe922e3140ee3410248f979e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77d372abec0fbf2cfe922e3140ee3410248f979e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/77d372abec0fbf2cfe922e3140ee3410248f979e"}], "stats": {"total": 3, "additions": 3, "deletions": 0}, "files": [{"sha": "a70536a6849a44b55babcd85cc26faf2b40e8d98", "filename": "contrib/mklog.py", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/236d6a33ca63714474f0077390bff2d9d5b125eb/contrib%2Fmklog.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/236d6a33ca63714474f0077390bff2d9d5b125eb/contrib%2Fmklog.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fmklog.py?ref=236d6a33ca63714474f0077390bff2d9d5b125eb", "patch": "@@ -133,6 +133,9 @@ def generate_changelog(data, no_functions=False, fill_pr_titles=False):\n     diff = PatchSet(data)\n \n     for file in diff:\n+        # skip files that can't be parsed\n+        if file.path == '/dev/null':\n+            continue\n         changelog = find_changelog(file.path)\n         if changelog not in changelogs:\n             changelogs[changelog] = []"}]}