{"sha": "9c4ce18d030434d47e6ad6b68caa4f630bc6df72", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWM0Y2UxOGQwMzA0MzRkNDdlNmFkNmI2OGNhYTRmNjMwYmM2ZGY3Mg==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2010-09-07T15:50:22Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2010-09-07T15:50:22Z"}, "message": "tree-ssa-ccp.c (fold_const_aggregate_ref): Fix handling of array_ref_low_bound in string access folding.\n\n\n\t* tree-ssa-ccp.c (fold_const_aggregate_ref): Fix handling of array_ref_low_bound\n\tin string access folding.\n\nFrom-SVN: r163956", "tree": {"sha": "ca9a334cc242b08b21557c11f3aa17f41987eec5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ca9a334cc242b08b21557c11f3aa17f41987eec5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9c4ce18d030434d47e6ad6b68caa4f630bc6df72", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c4ce18d030434d47e6ad6b68caa4f630bc6df72", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9c4ce18d030434d47e6ad6b68caa4f630bc6df72", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c4ce18d030434d47e6ad6b68caa4f630bc6df72/comments", "author": null, "committer": null, "parents": [{"sha": "d341a5d09057127a50c916b8708d4aa7d1f74ec8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d341a5d09057127a50c916b8708d4aa7d1f74ec8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d341a5d09057127a50c916b8708d4aa7d1f74ec8"}], "stats": {"total": 26, "additions": 22, "deletions": 4}, "files": [{"sha": "7d75459163edeb8a9454d9e9b5ab2196d6b1a872", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c4ce18d030434d47e6ad6b68caa4f630bc6df72/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c4ce18d030434d47e6ad6b68caa4f630bc6df72/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9c4ce18d030434d47e6ad6b68caa4f630bc6df72", "patch": "@@ -1,3 +1,8 @@\n+2010-09-07  Jan Hubicka  <jh@suse.cz>\n+\n+\t* tree-ssa-ccp.c (fold_const_aggregate_ref): Fix handling of array_ref_low_bound\n+\tin string access folding.\n+\n 2010-09-07  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR target/45206\n@@ -6,7 +11,7 @@\n \n 2010-09-07  Jan Hubicka  <jh@suse.cz>\n \n-\t* gimple.c (maybe_fold_reference): Verify that operand is\n+\t* gimple-fold.c (maybe_fold_reference): Verify that operand is\n \tgimple_min_invariant.\n \n 2010-09-07  Richard Guenther  <rguenther@suse.de>"}, {"sha": "734147794a6b4baa3f0f82829c8f6cc7b79921f9", "filename": "gcc/tree-ssa-ccp.c", "status": "modified", "additions": 16, "deletions": 3, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c4ce18d030434d47e6ad6b68caa4f630bc6df72/gcc%2Ftree-ssa-ccp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c4ce18d030434d47e6ad6b68caa4f630bc6df72/gcc%2Ftree-ssa-ccp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-ccp.c?ref=9c4ce18d030434d47e6ad6b68caa4f630bc6df72", "patch": "@@ -1398,17 +1398,30 @@ fold_const_aggregate_ref (tree t)\n \t}\n \n       /* Fold read from constant string.  */\n-      if (TREE_CODE (ctor) == STRING_CST)\n+      if (TREE_CODE (ctor) == STRING_CST\n+\t  && TREE_CODE (idx) == INTEGER_CST)\n \t{\n+\t  tree low_bound = array_ref_low_bound (t);\n+\t  double_int low_bound_cst;\n+\t  double_int index_cst;\n+\t  double_int length_cst;\n+\t  bool signed_p = TYPE_UNSIGNED (TREE_TYPE (idx));\n+\n+\t  if (TREE_CODE (low_bound) != INTEGER_CST)\n+\t    return NULL_TREE;\n+\t  low_bound_cst = tree_to_double_int (low_bound);\n+\t  index_cst = tree_to_double_int (idx);\n+\t  length_cst = uhwi_to_double_int (TREE_STRING_LENGTH (ctor));\n+\t  index_cst = double_int_sub (index_cst, low_bound_cst);\n \t  if ((TYPE_MODE (TREE_TYPE (t))\n \t       == TYPE_MODE (TREE_TYPE (TREE_TYPE (ctor))))\n \t      && (GET_MODE_CLASS (TYPE_MODE (TREE_TYPE (TREE_TYPE (ctor))))\n \t          == MODE_INT)\n \t      && GET_MODE_SIZE (TYPE_MODE (TREE_TYPE (TREE_TYPE (ctor)))) == 1\n-\t      && compare_tree_int (idx, TREE_STRING_LENGTH (ctor)) < 0)\n+\t      && double_int_cmp (index_cst, length_cst, signed_p) < 0)\n \t    return build_int_cst_type (TREE_TYPE (t),\n \t\t\t\t       (TREE_STRING_POINTER (ctor)\n-\t\t\t\t\t[TREE_INT_CST_LOW (idx)]));\n+\t\t\t\t\t[double_int_to_uhwi (index_cst)]));\n \t  return NULL_TREE;\n \t}\n "}]}