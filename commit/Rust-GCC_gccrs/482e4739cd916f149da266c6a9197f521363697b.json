{"sha": "482e4739cd916f149da266c6a9197f521363697b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDgyZTQ3MzljZDkxNmYxNDlkYTI2NmM2YTkxOTdmNTIxMzYzNjk3Yg==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2006-08-15T15:11:24Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2006-08-15T15:11:24Z"}, "message": "random (poisson_distribution<>::_M_initialize): Add.\n\n2006-08-15  Paolo Carlini  <pcarlini@suse.de>\n\n\t* include/tr1/random (poisson_distribution<>::_M_initialize): Add.\n\t(poisson_distribution<>::poisson_distribution(const _RealType&):\n\tUse it.\n\t(operator>>(std::basic_istream<>&, poisson_distribution<>&)):\n\tLikewise.\n\t(poisson_distribution<>::_M_large): Remove.\n\t* include/tr1/random.tcc (poisson_distribution<>::_M_initialize):\n\tDefine.\n\t(operator<<(std::basic_ostream<>&, const poisson_distribution<>&)):\n\tDo not output the constants.\n\n\t* include/tr1/random (operator>>(std::basic_istream<>&,\n\tgamma_distribution&)): Minor tweak.\n\t\n\t* include/tr1/random.tcc (poisson_distribution<>::operator()):\n\tMinor tweak.\n\n\t* include/tr1/random: Consistently, all data members private.\n\nFrom-SVN: r116155", "tree": {"sha": "631ec234f1176ef83ccfbf570a3308601ec864c6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/631ec234f1176ef83ccfbf570a3308601ec864c6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/482e4739cd916f149da266c6a9197f521363697b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/482e4739cd916f149da266c6a9197f521363697b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/482e4739cd916f149da266c6a9197f521363697b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/482e4739cd916f149da266c6a9197f521363697b/comments", "author": null, "committer": null, "parents": [{"sha": "018b899bc74533a6f22c21b75ad20c572078972e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/018b899bc74533a6f22c21b75ad20c572078972e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/018b899bc74533a6f22c21b75ad20c572078972e"}], "stats": {"total": 117, "additions": 56, "deletions": 61}, "files": [{"sha": "a9556d7a9512cd757973ce93bea652da69f5696e", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/482e4739cd916f149da266c6a9197f521363697b/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/482e4739cd916f149da266c6a9197f521363697b/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=482e4739cd916f149da266c6a9197f521363697b", "patch": "@@ -1,3 +1,24 @@\n+2006-08-15  Paolo Carlini  <pcarlini@suse.de>\n+\n+\t* include/tr1/random (poisson_distribution<>::_M_initialize): Add.\n+\t(poisson_distribution<>::poisson_distribution(const _RealType&):\n+\tUse it.\n+\t(operator>>(std::basic_istream<>&, poisson_distribution<>&)):\n+\tLikewise.\n+\t(poisson_distribution<>::_M_large): Remove.\n+\t* include/tr1/random.tcc (poisson_distribution<>::_M_initialize):\n+\tDefine.\n+\t(operator<<(std::basic_ostream<>&, const poisson_distribution<>&)):\n+\tDo not output the constants.\n+\n+\t* include/tr1/random (operator>>(std::basic_istream<>&,\n+\tgamma_distribution&)): Minor tweak.\n+\t\n+\t* include/tr1/random.tcc (poisson_distribution<>::operator()):\n+\tMinor tweak.\n+\n+\t* include/tr1/random: Consistently, all data members private.\n+\n 2006-08-15  Paolo Carlini  <pcarlini@suse.de>\n \n \t* include/tr1/random.tcc (mersenne_twister<>::operator()): Revert"}, {"sha": "ef4390a0610f2217afd5241542aeeaa3e838cab6", "filename": "libstdc++-v3/include/tr1/random", "status": "modified", "additions": 24, "deletions": 18, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/482e4739cd916f149da266c6a9197f521363697b/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Frandom", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/482e4739cd916f149da266c6a9197f521363697b/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Frandom", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Frandom?ref=482e4739cd916f149da266c6a9197f521363697b", "patch": "@@ -1556,7 +1556,7 @@ _GLIBCXX_BEGIN_NAMESPACE(tr1)\n \t\t bernoulli_distribution& __x)\n       { return __is >> __x._M_p; }\n \n-  protected:\n+  private:\n     double _M_p;\n   };\n \n@@ -1643,7 +1643,7 @@ _GLIBCXX_BEGIN_NAMESPACE(tr1)\n \t  return __is;\n \t}\n \n-    protected:\n+    private:\n       _RealType _M_p;\n       _RealType _M_log_p;\n     };\n@@ -1665,12 +1665,6 @@ _GLIBCXX_BEGIN_NAMESPACE(tr1)\n     operator<<(std::basic_ostream<_CharT, _Traits>& __os,\n \t       const poisson_distribution<_IntType, _RealType>& __x);\n \n-  template<typename _IntType, typename _RealType,\n-\t   typename _CharT, typename _Traits>\n-    std::basic_istream<_CharT, _Traits>&\n-    operator>>(std::basic_istream<_CharT, _Traits>& __is,\n-\t       poisson_distribution<_IntType, _RealType>& __x);\n-\n   template<typename _IntType, typename _RealType>\n     class poisson_distribution\n     {\n@@ -1681,7 +1675,12 @@ _GLIBCXX_BEGIN_NAMESPACE(tr1)\n \n       // constructors and member function\n       explicit\n-      poisson_distribution(const _RealType& __mean = _RealType(1));\n+      poisson_distribution(const _RealType& __mean = _RealType(1))\n+      : _M_mean(__mean)\n+      {\n+\t_GLIBCXX_DEBUG_ASSERT(_M_mean > 0.0);\n+\t_M_initialize();\n+      }\n \n       /**\n        * Gets the distribution parameter @p mean.\n@@ -1722,20 +1721,27 @@ _GLIBCXX_BEGIN_NAMESPACE(tr1)\n        *\n        * @returns The input stream with @p __x extracted or in an error state.\n        */\n-      template<typename _IntType1, typename _RealType1,\n-\t       typename _CharT, typename _Traits>\n+      template<typename _CharT, typename _Traits>\n         friend std::basic_istream<_CharT, _Traits>&\n         operator>>(std::basic_istream<_CharT, _Traits>& __is,\n-\t\t   poisson_distribution<_IntType1, _RealType1>& __x);\n+\t\t   poisson_distribution& __x)\n+        {\n+\t  __is >> __x._M_mean;\n+\t  __x._M_initialize();\n+\t  return __is;\n+\t}\n \n-    protected:\n-      _RealType _M_mean;\n+    private:\n+      void\n+      _M_initialize();\n \n+      _RealType _M_mean;\n+      // _M_lm_thr hosts either log(mean) or the threshold of the simple\n+      // method.\n       _RealType _M_lm_thr;\n #if _GLIBCXX_USE_C99_MATH_TR1\n       _RealType _M_lfm, _M_sm, _M_d, _M_scx4, _M_2cx, _M_c2b, _M_cb;\n #endif\n-      bool _M_large;\n     };\n \n   /* @} */ // group tr1_random_distributions_discrete\n@@ -1834,7 +1840,7 @@ _GLIBCXX_BEGIN_NAMESPACE(tr1)\n         operator>>(std::basic_istream<_CharT, _Traits>& __is,\n \t\t   uniform_real<_RealType1>& __x);\n \n-    protected:\n+    private:\n       _RealType _M_min;\n       _RealType _M_max;\n     };\n@@ -2115,10 +2121,10 @@ _GLIBCXX_BEGIN_NAMESPACE(tr1)\n        *\n        * @returns The input stream with @p __x extracted or in an error state.\n        */\n-      template<typename _RealType1, typename _CharT, typename _Traits>\n+      template<typename _CharT, typename _Traits>\n         friend std::basic_istream<_CharT, _Traits>&\n         operator>>(std::basic_istream<_CharT, _Traits>& __is,\n-\t\t   gamma_distribution<_RealType1>& __x)\n+\t\t   gamma_distribution& __x)\n         { return __is >> __x._M_alpha; }\n \n     private:"}, {"sha": "abc4d3a3df8a8ba76be3acfd520a5cc542c3b137", "filename": "libstdc++-v3/include/tr1/random.tcc", "status": "modified", "additions": 11, "deletions": 43, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/482e4739cd916f149da266c6a9197f521363697b/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Frandom.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/482e4739cd916f149da266c6a9197f521363697b/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Frandom.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Frandom.tcc?ref=482e4739cd916f149da266c6a9197f521363697b", "patch": "@@ -656,16 +656,13 @@ _GLIBCXX_BEGIN_NAMESPACE(tr1)\n \n \n   template<typename _IntType, typename _RealType>\n+    void\n     poisson_distribution<_IntType, _RealType>::\n-    poisson_distribution(const _RealType& __mean)\n-    : _M_mean(__mean), _M_large(false)\n+    _M_initialize()\n     {\n-      _GLIBCXX_DEBUG_ASSERT(_M_mean > 0.0);\n-\n #if _GLIBCXX_USE_C99_MATH_TR1\n       if (_M_mean >= 12)\n \t{\n-\t  _M_large = true;\n \t  const _RealType __m = std::floor(_M_mean);\n \t  _M_lm_thr = std::log(_M_mean);\n \t  _M_lfm = std::tr1::lgamma(__m + 1);\n@@ -708,20 +705,20 @@ _GLIBCXX_BEGIN_NAMESPACE(tr1)\n       operator()(_UniformRandomNumberGenerator& __urng)\n       {\n #if _GLIBCXX_USE_C99_MATH_TR1\n-\tif (_M_large)\n+\tif (_M_mean >= 12)\n \t  {\n \t    _RealType __x;\n \n \t    const _RealType __m = std::floor(_M_mean);\n-\t    // sqrt(mu * pi / 2)\n-\t    const _RealType __c1 = (_M_sm\n-\t\t\t\t    * 1.2533141373155002512078826424055226L);\n+\t    // sqrt(pi / 2)\n+\t    const _RealType __spi_2 = 1.2533141373155002512078826424055226L;\n+\t    const _RealType __c1 = _M_sm * __spi_2;\n \t    const _RealType __c2 = _M_c2b + __c1; \n \t    const _RealType __c3 = __c2 + 1;\n \t    const _RealType __c4 = __c3 + 1;\n-\t    // c4 + e^(1 / 78)\n-\t    const _RealType __c5 = (__c4\n-\t\t\t\t    + 1.0129030479320018583185514777512983L);\n+\t    // e^(1 / 78)\n+\t    const _RealType __e178 = 1.0129030479320018583185514777512983L;\n+\t    const _RealType __c5 = __c4 + __e178;\n \t    const _RealType __c = _M_cb + __c5;\n \t    const _RealType __cx = 2 * (2 * __m + _M_d);\n \n@@ -801,47 +798,18 @@ _GLIBCXX_BEGIN_NAMESPACE(tr1)\n       const std::ios_base::fmtflags __flags = __os.flags();\n       const _CharT __fill = __os.fill();\n       const std::streamsize __precision = __os.precision();\n-      const _CharT __space = __os.widen(' ');\n       __os.flags(std::ios_base::scientific | std::ios_base::left);\n-      __os.fill(__space);\n+      __os.fill(__os.widen(' '));\n       __os.precision(_Max_digits10<_RealType>::__value);\n \n-      __os << __x._M_large << __space << __x.mean()\n-\t   << __space << __x._M_lm_thr;\n-#if _GLIBCXX_USE_C99_MATH_TR1\n-      if (__x._M_large)\n-\t__os << __space << __x._M_lfm << __space << __x._M_sm\n-\t     << __space << __x._M_d << __space << __x._M_scx4\n-\t     << __space << __x._M_2cx << __space << __x._M_c2b\n-\t     << __space << __x._M_cb;\n-#endif\n+      __os << __x.mean();\n \n       __os.flags(__flags);\n       __os.fill(__fill);\n       __os.precision(__precision);\n       return __os;\n     }\n \n-  template<typename _IntType, typename _RealType,\n-\t   typename _CharT, typename _Traits>\n-    std::basic_istream<_CharT, _Traits>&\n-    operator>>(std::basic_istream<_CharT, _Traits>& __is,\n-\t       poisson_distribution<_IntType, _RealType>& __x)\n-    {\n-      const std::ios_base::fmtflags __flags = __is.flags();\n-      __is.flags(std::ios_base::skipws);\n-\n-      __is >> __x._M_large >> __x._M_mean >> __x._M_lm_thr;\n-#if _GLIBCXX_USE_C99_MATH_TR1\n-      if (__x._M_large)\n-\t__is >> __x._M_lfm >> __x._M_sm >> __x._M_d >> __x._M_scx4\n-\t     >> __x._M_2cx >> __x._M_c2b >> __x._M_cb;\n-#endif\n-\n-      __is.flags(__flags);\n-      return __is;\n-    }\n-\n \n   template<typename _RealType, typename _CharT, typename _Traits>\n     std::basic_ostream<_CharT, _Traits>&"}]}