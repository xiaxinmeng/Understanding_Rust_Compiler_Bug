{"sha": "98ee7e6caa96e4fe7ef50d0db29f5dd8ccbc0c59", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OThlZTdlNmNhYTk2ZTRmZTdlZjUwZDBkYjI5ZjVkZDhjY2JjMGM1OQ==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2002-09-30T06:04:16Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2002-09-30T06:04:16Z"}, "message": "* real.c (real_from_string): Apply sign last.  Tidy exponent handling.\n\nFrom-SVN: r57637", "tree": {"sha": "3a446a9049cc5952eced61f2dc460d2614aba10b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3a446a9049cc5952eced61f2dc460d2614aba10b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/98ee7e6caa96e4fe7ef50d0db29f5dd8ccbc0c59", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98ee7e6caa96e4fe7ef50d0db29f5dd8ccbc0c59", "html_url": "https://github.com/Rust-GCC/gccrs/commit/98ee7e6caa96e4fe7ef50d0db29f5dd8ccbc0c59", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98ee7e6caa96e4fe7ef50d0db29f5dd8ccbc0c59/comments", "author": null, "committer": null, "parents": [{"sha": "d3cc3f10dac7b93c7b62d7e30b15f171fec3e8a5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3cc3f10dac7b93c7b62d7e30b15f171fec3e8a5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d3cc3f10dac7b93c7b62d7e30b15f171fec3e8a5"}], "stats": {"total": 43, "additions": 25, "deletions": 18}, "files": [{"sha": "6bd1e0e1cc9701c48d7e2ffbf546b945db1998c2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98ee7e6caa96e4fe7ef50d0db29f5dd8ccbc0c59/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98ee7e6caa96e4fe7ef50d0db29f5dd8ccbc0c59/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=98ee7e6caa96e4fe7ef50d0db29f5dd8ccbc0c59", "patch": "@@ -1,3 +1,7 @@\n+2002-09-29  Richard Henderson  <rth@redhat.com>\n+\n+\t* real.c (real_from_string): Apply sign last.  Tidy exponent handling.\n+\n 2002-09-29  Richard Henderson  <rth@redhat.com>\n \n \t* combine.c (force_to_mode): Handle FLOAT_MODE destinations"}, {"sha": "891be811d0361c1023b9f32b13f02462b6b67018", "filename": "gcc/real.c", "status": "modified", "additions": 21, "deletions": 18, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98ee7e6caa96e4fe7ef50d0db29f5dd8ccbc0c59/gcc%2Freal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98ee7e6caa96e4fe7ef50d0db29f5dd8ccbc0c59/gcc%2Freal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freal.c?ref=98ee7e6caa96e4fe7ef50d0db29f5dd8ccbc0c59", "patch": "@@ -1579,12 +1579,13 @@ real_from_string (r, str)\n      const char *str;\n {\n   int exp = 0;\n+  bool sign = false;\n \n   get_zero (r, 0);\n \n   if (*str == '-')\n     {\n-      r->sign = 1;\n+      sign = true;\n       str++;\n     }\n   else if (*str == '+')\n@@ -1616,6 +1617,11 @@ real_from_string (r, str)\n       if (*str == '.')\n \t{\n \t  str++;\n+\t  if (pos == SIGNIFICAND_BITS - 4)\n+\t    {\n+\t      while (*str == '0')\n+\t\tstr++, exp -= 4;\n+\t    }\n \t  while (1)\n \t    {\n \t      d = hex_value (*str);\n@@ -1632,12 +1638,12 @@ real_from_string (r, str)\n \t}\n       if (*str == 'p' || *str == 'P')\n \t{\n-\t  int exp_neg = 0;\n+\t  bool exp_neg = false;\n \n \t  str++;\n \t  if (*str == '-')\n \t    {\n-\t      exp_neg = 1;\n+\t      exp_neg = true;\n \t      str++;\n \t    }\n \t  else if (*str == '+')\n@@ -1646,10 +1652,9 @@ real_from_string (r, str)\n \t  d = 0;\n \t  while (ISDIGIT (*str))\n \t    {\n-\t      int t = d;\n \t      d *= 10;\n \t      d += *str - '0';\n-\t      if (d < t)\n+\t      if (d > MAX_EXP)\n \t\t{\n \t\t  /* Overflowed the exponent.  */\n \t\t  if (exp_neg)\n@@ -1667,13 +1672,6 @@ real_from_string (r, str)\n \n       r->class = rvc_normal;\n       r->exp = exp;\n-      if (r->exp != exp)\n-\t{\n-\t  if (exp < 0)\n-\t    goto underflow;\n-\t  else\n-\t    goto overflow;\n-\t}\n \n       normalize (r);\n     }\n@@ -1695,6 +1693,11 @@ real_from_string (r, str)\n       if (*str == '.')\n \t{\n \t  str++;\n+\t  if (r->class == rvc_zero)\n+\t    {\n+\t      while (*str == '0')\n+\t\tstr++, exp--;\n+\t    }\n \t  while (ISDIGIT (*str))\n \t    {\n \t      d = *str++ - '0';\n@@ -1707,12 +1710,12 @@ real_from_string (r, str)\n \n       if (*str == 'e' || *str == 'E')\n \t{\n-\t  int exp_neg = 0;\n+\t  bool exp_neg = false;\n \n \t  str++;\n \t  if (*str == '-')\n \t    {\n-\t      exp_neg = 1;\n+\t      exp_neg = true;\n \t      str++;\n \t    }\n \t  else if (*str == '+')\n@@ -1721,10 +1724,9 @@ real_from_string (r, str)\n \t  d = 0;\n \t  while (ISDIGIT (*str))\n \t    {\n-\t      int t = d;\n \t      d *= 10;\n \t      d += *str - '0';\n-\t      if (d < t)\n+\t      if (d > MAX_EXP)\n \t\t{\n \t\t  /* Overflowed the exponent.  */\n \t\t  if (exp_neg)\n@@ -1754,14 +1756,15 @@ real_from_string (r, str)\n \t}\n     }\n \n+  r->sign = sign;\n   return;\n \n  underflow:\n-  get_zero (r, r->sign);\n+  get_zero (r, sign);\n   return;\n \n  overflow:\n-  get_inf (r, r->sign);\n+  get_inf (r, sign);\n   return;\n }\n "}]}