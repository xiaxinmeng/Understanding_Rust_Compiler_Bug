{"sha": "96e2d1d1ae69d409e3052d45f79f471c2caf6c9a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTZlMmQxZDFhZTY5ZDQwOWUzMDUyZDQ1Zjc5ZjQ3MWMyY2FmNmM5YQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2017-10-02T10:04:00Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2017-10-02T10:04:00Z"}, "message": "graphite-isl-ast-to-gimple.c (set_codegen_error): With -fchecking and --param graphite-allow-codegen-errors=0 ICE.\n\n2017-10-02  Richard Biener  <rguenther@suse.de>\n\n\t* graphite-isl-ast-to-gimple.c (set_codegen_error): With\n\t-fchecking and --param graphite-allow-codegen-errors=0 ICE.\n\t* params.def (PARAM_GRAPHITE_ALLOW_CODEGEN_ERRORS): New param.\n\n\t* gcc.dg/graphite/graphite.exp: Add -fdump-tree-graphite-details.\n\t* gcc.dg/graphite/id-15.c: Adjust for existing codegen errors.\n\t* gcc.dg/graphite/id-16.c: Likewise.\n\t* gcc.dg/graphite/pr46168.c: Likewise.\n\t* gcc.dg/graphite/pr68756.c: Likewise.\n\t* gcc.dg/graphite/pr69728.c: Likewise.\n\t* gcc.dg/graphite/pr71575-2.c: Likewise.\n\t* gcc.dg/graphite/pr77362.c: Likewise.\n\t* gcc.dg/graphite/pr81373.c: Likewise.\n\t* gcc.dg/graphite/run-id-pr67700-1.c: Likewise.\n\t* gfortran.dg/graphite/interchange-1.f: Likewise.\n\t* gfortran.dg/graphite/pr29581.f90: Likewise.\n\t* gfortran.dg/graphite/pr42334-1.f: Likewise.\n\t* gfortran.dg/graphite/pr42393-1.f90: Likewise.\n\t* gfortran.dg/graphite/pr42393.f90: Likewise.\n\t* gfortran.dg/graphite/pr47019.f: Likewise.\n\nFrom-SVN: r253342", "tree": {"sha": "c1e756fa65093265268fb24b80f92bcad3593c63", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c1e756fa65093265268fb24b80f92bcad3593c63"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/96e2d1d1ae69d409e3052d45f79f471c2caf6c9a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96e2d1d1ae69d409e3052d45f79f471c2caf6c9a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/96e2d1d1ae69d409e3052d45f79f471c2caf6c9a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96e2d1d1ae69d409e3052d45f79f471c2caf6c9a/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a1488398d4abf50ff8b2ec25d6a75185aefc52c8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1488398d4abf50ff8b2ec25d6a75185aefc52c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a1488398d4abf50ff8b2ec25d6a75185aefc52c8"}], "stats": {"total": 97, "additions": 83, "deletions": 14}, "files": [{"sha": "a2e33e4b91027ebac93766c56fe82287c2c56b5a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96e2d1d1ae69d409e3052d45f79f471c2caf6c9a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96e2d1d1ae69d409e3052d45f79f471c2caf6c9a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=96e2d1d1ae69d409e3052d45f79f471c2caf6c9a", "patch": "@@ -1,3 +1,9 @@\n+2017-10-02  Richard Biener  <rguenther@suse.de>\n+\n+\t* graphite-isl-ast-to-gimple.c (set_codegen_error): With\n+\t-fchecking and --param graphite-allow-codegen-errors=0 ICE.\n+\t* params.def (PARAM_GRAPHITE_ALLOW_CODEGEN_ERRORS): New param.\n+\n 2017-10-02  Richard Sandiford  <richard.sandiford@linaro.org>\n \n \t* tree.h (wi::int_traits <const_tree>::decompose): Assert that the"}, {"sha": "3022f0005dca5396cd4a320e379e9f684678237e", "filename": "gcc/graphite-isl-ast-to-gimple.c", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96e2d1d1ae69d409e3052d45f79f471c2caf6c9a/gcc%2Fgraphite-isl-ast-to-gimple.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96e2d1d1ae69d409e3052d45f79f471c2caf6c9a/gcc%2Fgraphite-isl-ast-to-gimple.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-isl-ast-to-gimple.c?ref=96e2d1d1ae69d409e3052d45f79f471c2caf6c9a", "patch": "@@ -240,7 +240,14 @@ class translate_isl_ast_to_gimple\n   void gsi_insert_earliest (gimple_seq seq);\n   tree rename_all_uses (tree new_expr, basic_block new_bb, basic_block old_bb);\n   bool codegen_error_p () const { return codegen_error; }\n-  void set_codegen_error () { codegen_error = true; }\n+\n+  void set_codegen_error ()\n+  {\n+    codegen_error = true;\n+    gcc_assert (! flag_checking\n+\t\t|| PARAM_VALUE (PARAM_GRAPHITE_ALLOW_CODEGEN_ERRORS));\n+  }\n+\n   bool is_constant (tree op) const\n   {\n     return TREE_CODE (op) == INTEGER_CST"}, {"sha": "e55afc28053039b258d83fa369c38b5b9977fec6", "filename": "gcc/params.def", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96e2d1d1ae69d409e3052d45f79f471c2caf6c9a/gcc%2Fparams.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96e2d1d1ae69d409e3052d45f79f471c2caf6c9a/gcc%2Fparams.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fparams.def?ref=96e2d1d1ae69d409e3052d45f79f471c2caf6c9a", "patch": "@@ -894,6 +894,12 @@ DEFPARAM (PARAM_MAX_ISL_OPERATIONS,\n \t  \"maximum number of isl operations, 0 means unlimited\",\n \t  350000, 0, 0)\n \n+/* For testsuite purposes allow to check for codegen error handling.  */\n+DEFPARAM (PARAM_GRAPHITE_ALLOW_CODEGEN_ERRORS,\n+\t  \"graphite-allow-codegen-errors\",\n+\t  \"whether codegen errors should be ICEs when -fchecking.\",\n+\t  0, 0, 1)\n+\n /* Avoid data dependence analysis on very large loops.  */\n DEFPARAM (PARAM_LOOP_MAX_DATAREFS_FOR_DATADEPS,\n \t  \"loop-max-datarefs-for-datadeps\","}, {"sha": "0214693486f80001800be38a312962660c70736f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96e2d1d1ae69d409e3052d45f79f471c2caf6c9a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96e2d1d1ae69d409e3052d45f79f471c2caf6c9a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=96e2d1d1ae69d409e3052d45f79f471c2caf6c9a", "patch": "@@ -1,3 +1,22 @@\n+2017-10-02  Richard Biener  <rguenther@suse.de>\n+\n+\t* gcc.dg/graphite/graphite.exp: Add -fdump-tree-graphite-details.\n+\t* gcc.dg/graphite/id-15.c: Adjust for existing codegen errors.\n+\t* gcc.dg/graphite/id-16.c: Likewise.\n+\t* gcc.dg/graphite/pr46168.c: Likewise.\n+\t* gcc.dg/graphite/pr68756.c: Likewise.\n+\t* gcc.dg/graphite/pr69728.c: Likewise.\n+\t* gcc.dg/graphite/pr71575-2.c: Likewise.\n+\t* gcc.dg/graphite/pr77362.c: Likewise.\n+\t* gcc.dg/graphite/pr81373.c: Likewise.\n+\t* gcc.dg/graphite/run-id-pr67700-1.c: Likewise.\n+\t* gfortran.dg/graphite/interchange-1.f: Likewise.\n+\t* gfortran.dg/graphite/pr29581.f90: Likewise.\n+\t* gfortran.dg/graphite/pr42334-1.f: Likewise.\n+\t* gfortran.dg/graphite/pr42393-1.f90: Likewise.\n+\t* gfortran.dg/graphite/pr42393.f90: Likewise.\n+\t* gfortran.dg/graphite/pr47019.f: Likewise.\n+\n 2017-10-02  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/69977"}, {"sha": "646d192ee7fadfa69ec4ec51798699ed879c542a", "filename": "gcc/testsuite/gcc.dg/graphite/graphite.exp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96e2d1d1ae69d409e3052d45f79f471c2caf6c9a/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fgraphite.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96e2d1d1ae69d409e3052d45f79f471c2caf6c9a/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fgraphite.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fgraphite.exp?ref=96e2d1d1ae69d409e3052d45f79f471c2caf6c9a", "patch": "@@ -57,11 +57,11 @@ set vect_files        [lsort [glob -nocomplain $srcdir/$subdir/vect-*.c ] ]\n # Tests to be compiled.\n set dg-do-what-default compile\n dg-runtest $scop_files        \"\" \"-O2 -fgraphite -fdump-tree-graphite-all\"\n-dg-runtest $id_files          \"\" \"-O2 -fgraphite-identity -ffast-math\"\n+dg-runtest $id_files          \"\" \"-O2 -fgraphite-identity -ffast-math -fdump-tree-graphite-details\"\n \n # Tests to be run.\n set dg-do-what-default run\n-dg-runtest $run_id_files      \"\" \"-O2 -fgraphite-identity\"\n+dg-runtest $run_id_files      \"\" \"-O2 -fgraphite-identity -fdump-tree-graphite-details\"\n dg-runtest $opt_files         \"\" \"-O2 -ffast-math -floop-nest-optimize -fdump-tree-graphite-all\"\n \n # Vectorizer tests, to be run or compiled, depending on target capabilities."}, {"sha": "ac5c6495dc70040579aeaec574d6e87a8476b5e3", "filename": "gcc/testsuite/gcc.dg/graphite/id-15.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96e2d1d1ae69d409e3052d45f79f471c2caf6c9a/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fid-15.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96e2d1d1ae69d409e3052d45f79f471c2caf6c9a/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fid-15.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fid-15.c?ref=96e2d1d1ae69d409e3052d45f79f471c2caf6c9a", "patch": "@@ -1,4 +1,5 @@\n /* { dg-require-effective-target int32plus } */\n+/* { dg-additional-options \"--param graphite-allow-codegen-errors=1\" { target ilp32 } } */\n \n typedef long unsigned int size_t;\n extern void *memset (void *__s, int __c, size_t __n) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));\n@@ -118,3 +119,4 @@ mul_double (l1, h1, l2, h2, lv, hv)\n   return (*hv < 0 ? ~(toplow & tophigh) : toplow | tophigh) != 0;\n }\n \n+/* { dg-final { scan-tree-dump-times \"code generation error\" 1 \"graphite\" { target ilp32 } } } */"}, {"sha": "bc1c29fd1e464a2364f032931bcb077335975b96", "filename": "gcc/testsuite/gcc.dg/graphite/id-16.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96e2d1d1ae69d409e3052d45f79f471c2caf6c9a/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fid-16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96e2d1d1ae69d409e3052d45f79f471c2caf6c9a/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fid-16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fid-16.c?ref=96e2d1d1ae69d409e3052d45f79f471c2caf6c9a", "patch": "@@ -1,3 +1,5 @@\n+/* { dg-additional-options \"--param graphite-allow-codegen-errors=1\" } */\n+\n int transformation[(2*19 - 1) * (2*19 - 1)][8];\n \n const int transformation2[8][2][2] = {\n@@ -42,3 +44,5 @@ transformation_init (void)\n \t}\n     }\n }\n+\n+/* { dg-final { scan-tree-dump-times \"code generation error\" 1 \"graphite\" } } */"}, {"sha": "97a8adf6ece71d9b1c0853e6b9b67a6cc7e11288", "filename": "gcc/testsuite/gcc.dg/graphite/pr46168.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96e2d1d1ae69d409e3052d45f79f471c2caf6c9a/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr46168.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96e2d1d1ae69d409e3052d45f79f471c2caf6c9a/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr46168.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr46168.c?ref=96e2d1d1ae69d409e3052d45f79f471c2caf6c9a", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O -ftree-loop-linear\" } */\n+/* { dg-options \"-O -ftree-loop-linear -fdump-tree-graphite-details --param graphite-allow-codegen-errors=1\" } */\n \n int\n foo (int a[4096], int mi, int mj)\n@@ -13,3 +13,5 @@ foo (int a[4096], int mi, int mj)\n     }\n   return i16;\n }\n+\n+/* { dg-final { scan-tree-dump-times \"code generation error\" 1 \"graphite\" } } */"}, {"sha": "3307d747f9fcb32359117053db6e68fa39527780", "filename": "gcc/testsuite/gcc.dg/graphite/pr68756.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96e2d1d1ae69d409e3052d45f79f471c2caf6c9a/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr68756.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96e2d1d1ae69d409e3052d45f79f471c2caf6c9a/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr68756.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr68756.c?ref=96e2d1d1ae69d409e3052d45f79f471c2caf6c9a", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O1 -floop-nest-optimize\" } */\n+/* { dg-options \"-O1 -floop-nest-optimize -fdump-tree-graphite-details --param graphite-allow-codegen-errors=1\" } */\n \n unsigned int z4, pz;\n int nn[2];\n@@ -24,3 +24,5 @@ la (void)\n       pz = xq (hn);\n     }\n }\n+\n+/* { dg-final { scan-tree-dump-times \"code generation error\" 1 \"graphite\" } } */"}, {"sha": "771d19d98bebfc3f15649e25f31538974621168d", "filename": "gcc/testsuite/gcc.dg/graphite/pr69728.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96e2d1d1ae69d409e3052d45f79f471c2caf6c9a/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr69728.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96e2d1d1ae69d409e3052d45f79f471c2caf6c9a/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr69728.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr69728.c?ref=96e2d1d1ae69d409e3052d45f79f471c2caf6c9a", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O3 -floop-nest-optimize\" } */\n+/* { dg-options \"-O3 -floop-nest-optimize -fdump-tree-graphite-details --param graphite-allow-codegen-errors=1\" } */\n \n int a[1];\n int b, c, d, e;\n@@ -19,3 +19,5 @@ fn1 ()\n \t}\n     }\n }\n+\n+/* { dg-final { scan-tree-dump-times \"code generation error\" 1 \"graphite\" } } */"}, {"sha": "59c78c2c5fc39d744fe89beff93311aba1fa7bcf", "filename": "gcc/testsuite/gcc.dg/graphite/pr71575-2.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96e2d1d1ae69d409e3052d45f79f471c2caf6c9a/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr71575-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96e2d1d1ae69d409e3052d45f79f471c2caf6c9a/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr71575-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr71575-2.c?ref=96e2d1d1ae69d409e3052d45f79f471c2caf6c9a", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-Ofast -floop-nest-optimize\" } */\n+/* { dg-options \"-Ofast -floop-nest-optimize -fdump-tree-graphite-details --param graphite-allow-codegen-errors=1\" } */\n \n int *a;\n int b, c, d, e, g;\n@@ -14,3 +14,5 @@ void fn1() {\n \t}\n     }\n }\n+\n+/* { dg-final { scan-tree-dump-times \"code generation error\" 1 \"graphite\" } } */"}, {"sha": "06681fd3a37fdd14bafffab2d48536f345804100", "filename": "gcc/testsuite/gcc.dg/graphite/pr77362.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96e2d1d1ae69d409e3052d45f79f471c2caf6c9a/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr77362.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96e2d1d1ae69d409e3052d45f79f471c2caf6c9a/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr77362.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr77362.c?ref=96e2d1d1ae69d409e3052d45f79f471c2caf6c9a", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -floop-nest-optimize\" } */\n+/* { dg-options \"-O2 -floop-nest-optimize -fdump-tree-graphite-details --param graphite-allow-codegen-errors=1\" } */\n \n int mc[2];\n int f2, sk;\n@@ -19,3 +19,4 @@ zm (void)\n     }\n }\n \n+/* { dg-final { scan-tree-dump-times \"code generation error\" 1 \"graphite\" } } */"}, {"sha": "4427c472d56b8eb9f75802cef6c4c6c1f164393e", "filename": "gcc/testsuite/gcc.dg/graphite/pr81373.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96e2d1d1ae69d409e3052d45f79f471c2caf6c9a/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr81373.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96e2d1d1ae69d409e3052d45f79f471c2caf6c9a/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr81373.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr81373.c?ref=96e2d1d1ae69d409e3052d45f79f471c2caf6c9a", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-options \"-fno-tree-scev-cprop -fgraphite-identity -O -fdump-tree-graphite-all\" } */\n+/* { dg-options \"-fno-tree-scev-cprop -fgraphite-identity -O -fdump-tree-graphite-all --param graphite-allow-codegen-errors=1\" } */\n \n void bar (void);\n \n@@ -38,3 +38,4 @@ int toto()\n }\n \n /* { dg-final { scan-tree-dump-times \"number of SCoPs: 2\" 1 \"graphite\"} } */\n+/* { dg-final { scan-tree-dump-times \"code generation error\" 1 \"graphite\" } } */"}, {"sha": "da54cf964ae3a55c86e0f593e3aed6e22b74a09c", "filename": "gcc/testsuite/gcc.dg/graphite/run-id-pr67700-1.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96e2d1d1ae69d409e3052d45f79f471c2caf6c9a/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Frun-id-pr67700-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96e2d1d1ae69d409e3052d45f79f471c2caf6c9a/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Frun-id-pr67700-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Frun-id-pr67700-1.c?ref=96e2d1d1ae69d409e3052d45f79f471c2caf6c9a", "patch": "@@ -1,3 +1,5 @@\n+/* { dg-additional-options \"--param graphite-allow-codegen-errors=1\" } */\n+\n #include <stdlib.h>\n #include <assert.h>\n \n@@ -46,3 +48,4 @@ int main()\n   return 0;\n }\n \n+/* { dg-final { scan-tree-dump-times \"code generation error\" 1 \"graphite\" } } */"}, {"sha": "466284e1fbd3f545950a9a98f051c593c2e518dc", "filename": "gcc/testsuite/gfortran.dg/graphite/interchange-1.f", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96e2d1d1ae69d409e3052d45f79f471c2caf6c9a/gcc%2Ftestsuite%2Fgfortran.dg%2Fgraphite%2Finterchange-1.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96e2d1d1ae69d409e3052d45f79f471c2caf6c9a/gcc%2Ftestsuite%2Fgfortran.dg%2Fgraphite%2Finterchange-1.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgraphite%2Finterchange-1.f?ref=96e2d1d1ae69d409e3052d45f79f471c2caf6c9a", "patch": "@@ -1,3 +1,4 @@\n+! { dg-additional-options \"--param graphite-allow-codegen-errors=1\" }\n       subroutine foo(f1,f2,f3,f4,f5,f6,f7,f8,f9,f0,g1,g2,g3)\n       implicit none\n       integer f4,f3,f2,f1\n@@ -42,3 +43,4 @@ subroutine foo(f1,f2,f3,f4,f5,f6,f7,f8,f9,f0,g1,g2,g3)\n ! kernel from bwaves.\n \n ! { dg-final { scan-tree-dump-times \"will be interchanged\" 1 \"graphite\" { xfail *-*-* } } }\n+! { dg-final { scan-tree-dump-times \"code generation error\" 1 \"graphite\" } }"}, {"sha": "223baf8da6f1d3da004a56cf98f33dbd46bd0954", "filename": "gcc/testsuite/gfortran.dg/graphite/pr29581.f90", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96e2d1d1ae69d409e3052d45f79f471c2caf6c9a/gcc%2Ftestsuite%2Fgfortran.dg%2Fgraphite%2Fpr29581.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96e2d1d1ae69d409e3052d45f79f471c2caf6c9a/gcc%2Ftestsuite%2Fgfortran.dg%2Fgraphite%2Fpr29581.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgraphite%2Fpr29581.f90?ref=96e2d1d1ae69d409e3052d45f79f471c2caf6c9a", "patch": "@@ -1,6 +1,6 @@\n ! PR tree-optimization/29581\n ! { dg-do run }\n-! { dg-options \"-O2 -ftree-loop-linear\" }\n+! { dg-options \"-O2 -ftree-loop-linear -fdump-tree-graphite-details --param graphite-allow-codegen-errors=1\" }\n \n       SUBROUTINE FOO (K)\n       INTEGER I, J, K, A(5,5), B\n@@ -25,3 +25,5 @@ PROGRAM BAR\n         A(1,1) = 0\n         IF (ANY(A.NE.0)) CALL ABORT\n       END\n+\n+! { dg-final { scan-tree-dump-times \"code generation error\" 1 \"graphite\" } }"}, {"sha": "fd6f71d506633463fb15f318571e5fb0993c0ac9", "filename": "gcc/testsuite/gfortran.dg/graphite/pr42334-1.f", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96e2d1d1ae69d409e3052d45f79f471c2caf6c9a/gcc%2Ftestsuite%2Fgfortran.dg%2Fgraphite%2Fpr42334-1.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96e2d1d1ae69d409e3052d45f79f471c2caf6c9a/gcc%2Ftestsuite%2Fgfortran.dg%2Fgraphite%2Fpr42334-1.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgraphite%2Fpr42334-1.f?ref=96e2d1d1ae69d409e3052d45f79f471c2caf6c9a", "patch": "@@ -1,4 +1,4 @@\n-! { dg-options \"-O2 -floop-interchange\" }\n+! { dg-options \"-O2 -floop-interchange -fdump-tree-graphite-details --param graphite-allow-codegen-errors=1\" }\n \n       subroutine linel(icmdl,stre,anisox)\n       real*8 stre(6),tkl(3,3),ekl(3,3),anisox(3,3,3,3)\n@@ -14,3 +14,5 @@ subroutine linel(icmdl,stre,anisox)\n             enddo\n             stre(1)=tkl(1,1)\n       end\n+\n+! { dg-final { scan-tree-dump-times \"code generation error\" 1 \"graphite\" } }"}, {"sha": "84c9c57b24eb64b8c54b96aff7f6cc1edb5d895f", "filename": "gcc/testsuite/gfortran.dg/graphite/pr42393-1.f90", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96e2d1d1ae69d409e3052d45f79f471c2caf6c9a/gcc%2Ftestsuite%2Fgfortran.dg%2Fgraphite%2Fpr42393-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96e2d1d1ae69d409e3052d45f79f471c2caf6c9a/gcc%2Ftestsuite%2Fgfortran.dg%2Fgraphite%2Fpr42393-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgraphite%2Fpr42393-1.f90?ref=96e2d1d1ae69d409e3052d45f79f471c2caf6c9a", "patch": "@@ -1,4 +1,4 @@\n-! { dg-options \"-O2 -fgraphite-identity -fno-loop-block -fno-loop-interchange -fno-loop-strip-mine\" }\n+! { dg-options \"-O2 -fgraphite-identity -fno-loop-block -fno-loop-interchange -fno-loop-strip-mine --param graphite-allow-codegen-errors=1\" }\n \n MODULE beta_gamma_psi\n   INTEGER, PARAMETER :: dp=KIND(0.0D0)\n@@ -22,3 +22,5 @@ FUNCTION basym () RESULT(fn_val)\n     fn_val = sum\n   END FUNCTION basym\n END MODULE beta_gamma_psi\n+\n+! { dg-final { scan-tree-dump-times \"code generation error\" 1 \"graphite\" } }"}, {"sha": "f0255ca0ed294789727ec81ae4141a55a154def7", "filename": "gcc/testsuite/gfortran.dg/graphite/pr42393.f90", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96e2d1d1ae69d409e3052d45f79f471c2caf6c9a/gcc%2Ftestsuite%2Fgfortran.dg%2Fgraphite%2Fpr42393.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96e2d1d1ae69d409e3052d45f79f471c2caf6c9a/gcc%2Ftestsuite%2Fgfortran.dg%2Fgraphite%2Fpr42393.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgraphite%2Fpr42393.f90?ref=96e2d1d1ae69d409e3052d45f79f471c2caf6c9a", "patch": "@@ -1,4 +1,4 @@\n-! { dg-options \"-O2 -fgraphite-identity -fno-loop-block -fno-loop-interchange -fno-loop-strip-mine\" }\n+! { dg-options \"-O2 -fgraphite-identity -fno-loop-block -fno-loop-interchange -fno-loop-strip-mine -fdump-tree-graphite-details --param graphite-allow-codegen-errors=1\" }\n \n MODULE beta_gamma_psi\n   INTEGER, PARAMETER :: dp=KIND(0.0D0)\n@@ -28,3 +28,5 @@ FUNCTION basym (a, b, lambda, eps) RESULT(fn_val)\n     fn_val = e0*t*u*sum\n   END FUNCTION basym\n END MODULE beta_gamma_psi\n+\n+! { dg-final { scan-tree-dump-times \"code generation error\" 1 \"graphite\" } }"}, {"sha": "8f0c80ceb19d8b49fe0a2184c70fb59fddce7988", "filename": "gcc/testsuite/gfortran.dg/graphite/pr47019.f", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96e2d1d1ae69d409e3052d45f79f471c2caf6c9a/gcc%2Ftestsuite%2Fgfortran.dg%2Fgraphite%2Fpr47019.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96e2d1d1ae69d409e3052d45f79f471c2caf6c9a/gcc%2Ftestsuite%2Fgfortran.dg%2Fgraphite%2Fpr47019.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgraphite%2Fpr47019.f?ref=96e2d1d1ae69d409e3052d45f79f471c2caf6c9a", "patch": "@@ -1,4 +1,4 @@\n-! { dg-options \"-O -ftree-pre -fgraphite-identity -fno-tree-copy-prop\" }\n+! { dg-options \"-O -ftree-pre -fgraphite-identity -fno-tree-copy-prop -fdump-tree-graphite-details --param graphite-allow-codegen-errors=1\" }\n \n       subroutine foo (ldmx,ldmy,v)\n       integer :: ldmx, ldmy, v, l, m\n@@ -10,3 +10,5 @@ subroutine foo (ldmx,ldmy,v)\n         v(m,3,2) = m\n       end do\n       end\n+\n+! { dg-final { scan-tree-dump-times \"code generation error\" 1 \"graphite\" } }"}]}