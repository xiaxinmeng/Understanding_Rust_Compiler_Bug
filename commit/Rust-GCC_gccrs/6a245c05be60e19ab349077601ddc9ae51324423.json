{"sha": "6a245c05be60e19ab349077601ddc9ae51324423", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmEyNDVjMDViZTYwZTE5YWIzNDkwNzc2MDFkZGM5YWU1MTMyNDQyMw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2016-09-27T08:15:26Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2016-09-27T08:15:26Z"}, "message": "combine.c (simplify_comparison): Add canonical FALLTHROUGH comments.\n\n\t* combine.c (simplify_comparison): Add canonical FALLTHROUGH comments.\n\t* config/i386/i386.c (ix86_dep_by_shift_count_body): Add FALLTHROUGH\n\tcomments.  Remove break after return.\n\t(ix86_fp_compare_code_to_integer, has_dispatch,\n\tix86_simd_clone_usable): Remove break after return.\n\nFrom-SVN: r240523", "tree": {"sha": "47999c44a971eddccb9a241ce0262c4e9760f28c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/47999c44a971eddccb9a241ce0262c4e9760f28c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6a245c05be60e19ab349077601ddc9ae51324423", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a245c05be60e19ab349077601ddc9ae51324423", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a245c05be60e19ab349077601ddc9ae51324423", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a245c05be60e19ab349077601ddc9ae51324423/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f2e0c4e1ce34642b613ec2ed6cd2be83b1753849", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2e0c4e1ce34642b613ec2ed6cd2be83b1753849", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f2e0c4e1ce34642b613ec2ed6cd2be83b1753849"}], "stats": {"total": 25, "additions": 13, "deletions": 12}, "files": [{"sha": "1a2d42fe96fbe17b4277232e9312631d135ad144", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a245c05be60e19ab349077601ddc9ae51324423/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a245c05be60e19ab349077601ddc9ae51324423/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6a245c05be60e19ab349077601ddc9ae51324423", "patch": "@@ -1,3 +1,11 @@\n+2016-09-27  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* combine.c (simplify_comparison): Add canonical FALLTHROUGH comments.\n+\t* config/i386/i386.c (ix86_dep_by_shift_count_body): Add FALLTHROUGH\n+\tcomments.  Remove break after return.\n+\t(ix86_fp_compare_code_to_integer, has_dispatch,\n+\tix86_simd_clone_usable): Remove break after return.\n+\n 2016-09-27  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n \n \tPR rlt-optimization/77714"}, {"sha": "b27aae5f02fb8547a8b6440b524d030870561a62", "filename": "gcc/combine.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a245c05be60e19ab349077601ddc9ae51324423/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a245c05be60e19ab349077601ddc9ae51324423/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=6a245c05be60e19ab349077601ddc9ae51324423", "patch": "@@ -11923,11 +11923,11 @@ simplify_comparison (enum rtx_code code, rtx *pop0, rtx *pop1)\n \t     we can treat the SUBREG as if it were a ZERO_EXTEND.  */\n \t  if (subreg_lowpart_p (op0)\n \t      && GET_MODE_PRECISION (GET_MODE (SUBREG_REG (op0))) < mode_width)\n-\t    /* Fall through */ ;\n+\t    ;\n \t  else\n \t    break;\n \n-\t  /* ... fall through ...  */\n+\t  /* FALLTHROUGH */\n \n \tcase ZERO_EXTEND:\n \t  mode = GET_MODE (XEXP (op0, 0));\n@@ -12339,7 +12339,7 @@ simplify_comparison (enum rtx_code code, rtx *pop0, rtx *pop1)\n \t      continue;\n \t    }\n \n-\t  /* ... fall through ...  */\n+\t  /* FALLTHROUGH */\n \tcase LSHIFTRT:\n \t  /* If we have (compare (xshiftrt FOO N) (const_int C)) and\n \t     the low order N bits of FOO are known to be zero, we can do this"}, {"sha": "e0b2d5703be6ecd15666d51258cf3449993f2915", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 2, "deletions": 9, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a245c05be60e19ab349077601ddc9ae51324423/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a245c05be60e19ab349077601ddc9ae51324423/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=6a245c05be60e19ab349077601ddc9ae51324423", "patch": "@@ -21238,9 +21238,9 @@ ix86_dep_by_shift_count_body (const_rtx set_body, const_rtx use_body)\n \tif (ix86_dep_by_shift_count_body (XVECEXP (set_body, 0, i),\n \t\t\t\t\t  use_body))\n \t  return true;\n+      /* FALLTHROUGH */\n     default:\n       return false;\n-      break;\n     }\n \n   /* Retrieve shift count of USE_BODY.  */\n@@ -21254,9 +21254,9 @@ ix86_dep_by_shift_count_body (const_rtx set_body, const_rtx use_body)\n \tif (ix86_dep_by_shift_count_body (set_body,\n \t\t\t\t\t  XVECEXP (use_body, 0, i)))\n \t  return true;\n+      /* FALLTHROUGH */\n     default:\n       return false;\n-      break;\n     }\n \n   if (shift_rtx\n@@ -22370,19 +22370,14 @@ ix86_fp_compare_code_to_integer (enum rtx_code code)\n     case ORDERED:\n     case UNORDERED:\n       return code;\n-      break;\n     case UNEQ:\n       return EQ;\n-      break;\n     case UNLT:\n       return LTU;\n-      break;\n     case UNLE:\n       return LEU;\n-      break;\n     case LTGT:\n       return NE;\n-      break;\n     default:\n       return UNKNOWN;\n     }\n@@ -49501,7 +49496,6 @@ has_dispatch (rtx_insn *insn, int action)\n \n       case IS_DISPATCH_ON:\n \treturn true;\n-\tbreak;\n \n       case IS_CMP:\n \treturn is_cmp (insn);\n@@ -49959,7 +49953,6 @@ ix86_simd_clone_usable (struct cgraph_node *node)\n       if (!TARGET_AVX)\n \treturn -1;\n       return TARGET_AVX2 ? 1 : 0;\n-      break;\n     case 'd':\n       if (!TARGET_AVX2)\n \treturn -1;"}]}