{"sha": "39bdfaa056121fd2a7d54de19863547390be29ab", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzliZGZhYTA1NjEyMWZkMmE3ZDU0ZGUxOTg2MzU0NzM5MGJlMjlhYg==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "1998-04-04T18:37:01Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "1998-04-04T18:37:01Z"}, "message": "Clarify LEGITIMIZE_RELOAD_ADDRESS issues a tad.\n\nFrom-SVN: r18997", "tree": {"sha": "ee5288b2caa5c9ec936ff96e9c7ffb866778d2c5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ee5288b2caa5c9ec936ff96e9c7ffb866778d2c5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/39bdfaa056121fd2a7d54de19863547390be29ab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39bdfaa056121fd2a7d54de19863547390be29ab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/39bdfaa056121fd2a7d54de19863547390be29ab", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39bdfaa056121fd2a7d54de19863547390be29ab/comments", "author": null, "committer": null, "parents": [{"sha": "0022a940045b4dfc379556ed14df105362a3f5df", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0022a940045b4dfc379556ed14df105362a3f5df", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0022a940045b4dfc379556ed14df105362a3f5df"}], "stats": {"total": 24, "additions": 12, "deletions": 12}, "files": [{"sha": "9f704032f637ba2a0ff34047b6cdbd5203ce03eb", "filename": "gcc/tm.texi", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39bdfaa056121fd2a7d54de19863547390be29ab/gcc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39bdfaa056121fd2a7d54de19863547390be29ab/gcc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftm.texi?ref=39bdfaa056121fd2a7d54de19863547390be29ab", "patch": "@@ -4243,21 +4243,26 @@ LEGITIMIZE_RELOAD_ADDRESS appropriately, the intermediate addresses\n generated for adjacent some stack slots can be made identical, and thus\n be shared.\n \n-@findex strict_memory_address_p\n-The macro definition may use @code{strict_memory_address_p} to test if\n-the address has become legitimate.\n+@emph{Note}: This macro should be used with caution.  It is necessary\n+to know something of how reload works in order to effectively use this,\n+and it is quite easy to produce macros that build in too much knowledge\n+of reload internals.\n \n @findex push_reload\n-It may use @code{push_reload} to indicate parts that need reloading.\n-@var{opnum}, @var{type} and @var{ind_levels} are usually suitable to be\n-passed unaltered to push_reload.\n+The macro definition should use @code{push_reload} to indicate parts that\n+need reloading; @var{opnum}, @var{type} and @var{ind_levels} are usually\n+suitable to be passed unaltered to @code{push_reload}.\n \n-The code generated by this macro should not alter the substructure of\n+The code generated by this macro must not alter the substructure of\n @var{x}.  If it transforms @var{x} into a more legitimate form, it\n should assign @var{x} (which will always be a C variable) a new value.\n This also applies to parts that you change indirectly by calling\n @code{push_reload}.\n \n+@findex strict_memory_address_p\n+The macro definition may use @code{strict_memory_address_p} to test if\n+the address has become legitimate.\n+\n @findex copy_rtx\n If you want to change only a part of @var{x}, one standard way of doing\n this is to use @code{copy_rtx}.  Note, however, that is unshares only a\n@@ -4266,11 +4271,6 @@ top level, you'll need to replace first the top leve\n It is not necessary for this macro to come up with a legitimate\n address;  but often a machine-dependent strategy can generate better code.\n \n-@emph{Note}: This macro should be used with caution.  It is necessary\n-to know something of how reload works in order to effectively use this,\n-and it is quite easy to produce macros that build in too much knowledge\n-of reload internals.\n-\n @findex GO_IF_MODE_DEPENDENT_ADDRESS\n @item GO_IF_MODE_DEPENDENT_ADDRESS (@var{addr}, @var{label})\n A C statement or compound statement with a conditional @code{goto"}]}