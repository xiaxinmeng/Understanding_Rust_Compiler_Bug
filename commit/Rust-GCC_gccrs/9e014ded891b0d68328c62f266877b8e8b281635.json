{"sha": "9e014ded891b0d68328c62f266877b8e8b281635", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWUwMTRkZWQ4OTFiMGQ2ODMyOGM2MmYyNjY4NzdiOGU4YjI4MTYzNQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-05-19T16:24:26Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-05-19T16:24:26Z"}, "message": "Include bc-emit.h.\n\n({save,restore}_machine_status): Add prototype for args.\n(bc_runtime_type_code, bc_build_calldesc): Delete redundant decls.\n(bc_emit_trampoline, bc_end_function): Likewise.\n\nFrom-SVN: r12045", "tree": {"sha": "b1d2d64d7822e2686cb30d0bbb872f5f576aaced", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b1d2d64d7822e2686cb30d0bbb872f5f576aaced"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9e014ded891b0d68328c62f266877b8e8b281635", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e014ded891b0d68328c62f266877b8e8b281635", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e014ded891b0d68328c62f266877b8e8b281635", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e014ded891b0d68328c62f266877b8e8b281635/comments", "author": null, "committer": null, "parents": [{"sha": "06398f9dc95bf93df06d3ed9870bcee754d9dd1a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06398f9dc95bf93df06d3ed9870bcee754d9dd1a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/06398f9dc95bf93df06d3ed9870bcee754d9dd1a"}], "stats": {"total": 11, "additions": 3, "deletions": 8}, "files": [{"sha": "ee9ecf3fdec7f800749873aaeb90241f58284e84", "filename": "gcc/function.c", "status": "modified", "additions": 3, "deletions": 8, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e014ded891b0d68328c62f266877b8e8b281635/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e014ded891b0d68328c62f266877b8e8b281635/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=9e014ded891b0d68328c62f266877b8e8b281635", "patch": "@@ -39,9 +39,7 @@ Boston, MA 02111-1307, USA.  */\n    then scans all the RTL instructions so far generated to correct them.  */\n \n #include \"config.h\"\n-\n #include <stdio.h>\n-\n #include \"rtl.h\"\n #include \"tree.h\"\n #include \"flags.h\"\n@@ -57,6 +55,7 @@ Boston, MA 02111-1307, USA.  */\n #include \"basic-block.h\"\n #include \"obstack.h\"\n #include \"bytecode.h\"\n+#include \"bc-emit.h\"\n \n /* Some systems use __main in a way incompatible with its use in gcc, in these\n    cases use the macros NAME__MAIN to give a quoted symbol and SYMBOL__MAIN to\n@@ -314,19 +313,15 @@ static int virtuals_instantiated;\n /* These variables hold pointers to functions to\n    save and restore machine-specific data,\n    in push_function_context and pop_function_context.  */\n-void (*save_machine_status) ();\n-void (*restore_machine_status) ();\n+void (*save_machine_status) PROTO((struct function *));\n+void (*restore_machine_status) PROTO((struct function *));\n \n /* Nonzero if we need to distinguish between the return value of this function\n    and the return value of a function called by this function.  This helps\n    integrate.c  */\n \n extern int rtx_equal_function_value_matters;\n extern tree sequence_rtl_expr;\n-extern tree bc_runtime_type_code ();\n-extern rtx bc_build_calldesc ();\n-extern char *bc_emit_trampoline ();\n-extern char *bc_end_function ();\n \f\n /* In order to evaluate some expressions, such as function calls returning\n    structures in memory, we need to temporarily allocate stack locations."}]}