{"sha": "57dbdc5a66ce818e168dc5f3d364b9d9cad3826a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTdkYmRjNWE2NmNlODE4ZTE2OGRjNWYzZDM2NGI5ZDljYWQzODI2YQ==", "commit": {"author": {"name": "Martin Jambor", "email": "mjambor@suse.cz", "date": "2011-04-11T14:25:55Z"}, "committer": {"name": "Martin Jambor", "email": "jamborm@gcc.gnu.org", "date": "2011-04-11T14:25:55Z"}, "message": "re PR tree-optimization/48195 (ICE: vector VEC(ipa_node_params_t,base) index domain error, in ipa_analyze_node at ipa-prop.c:1525 with -flto --param partial-inlining-entry-probability=101)\n\n2011-04-11  Martin Jambor  <mjambor@suse.cz>\n\n\tPR tree-optimization/48195\n\t* ipa-cp.c (ipcp_driver): Call ipa_check_create_node_params and\n\tipa_check_create_edge_args.\n\t(ipcp_generate_summary): Do not call ipa_check_create_node_params and\n\tipa_check_create_edge_args.\n\t* ipa-inline.c (inline_generate_summary): Do not call\n\tipa_check_create_node_params and ipa_check_create_edge_args.\n\t* ipa-prop.c (ipa_analyze_node): Call ipa_check_create_node_params and\n\tipa_check_create_edge_args.\n\n\t* testsuite/gcc.dg/ipa/pr48195.c: New test.\n\nFrom-SVN: r172256", "tree": {"sha": "e690b4ca50737bf970f32c7f639f74ec84803fd1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e690b4ca50737bf970f32c7f639f74ec84803fd1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/57dbdc5a66ce818e168dc5f3d364b9d9cad3826a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57dbdc5a66ce818e168dc5f3d364b9d9cad3826a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/57dbdc5a66ce818e168dc5f3d364b9d9cad3826a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57dbdc5a66ce818e168dc5f3d364b9d9cad3826a/comments", "author": {"login": "jamborm", "id": 2180070, "node_id": "MDQ6VXNlcjIxODAwNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2180070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamborm", "html_url": "https://github.com/jamborm", "followers_url": "https://api.github.com/users/jamborm/followers", "following_url": "https://api.github.com/users/jamborm/following{/other_user}", "gists_url": "https://api.github.com/users/jamborm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamborm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamborm/subscriptions", "organizations_url": "https://api.github.com/users/jamborm/orgs", "repos_url": "https://api.github.com/users/jamborm/repos", "events_url": "https://api.github.com/users/jamborm/events{/privacy}", "received_events_url": "https://api.github.com/users/jamborm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d0bfa8b5ab2c72a8e0aed04308bee6f47af75ad6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d0bfa8b5ab2c72a8e0aed04308bee6f47af75ad6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d0bfa8b5ab2c72a8e0aed04308bee6f47af75ad6"}], "stats": {"total": 56, "additions": 48, "deletions": 8}, "files": [{"sha": "2ecd35cce59c9b0a79f714c19afbc6994b7a8d2e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57dbdc5a66ce818e168dc5f3d364b9d9cad3826a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57dbdc5a66ce818e168dc5f3d364b9d9cad3826a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=57dbdc5a66ce818e168dc5f3d364b9d9cad3826a", "patch": "@@ -1,3 +1,15 @@\n+2011-04-11  Martin Jambor  <mjambor@suse.cz>\n+\n+\tPR tree-optimization/48195\n+\t* ipa-cp.c (ipcp_driver): Call ipa_check_create_node_params and\n+\tipa_check_create_edge_args.\n+\t(ipcp_generate_summary): Do not call ipa_check_create_node_params and\n+\tipa_check_create_edge_args.\n+\t* ipa-inline.c (inline_generate_summary): Do not call\n+\tipa_check_create_node_params and ipa_check_create_edge_args.\n+\t* ipa-prop.c (ipa_analyze_node): Call ipa_check_create_node_params and\n+\tipa_check_create_edge_args.\n+\n 2011-04-09  Anatoly Sokolov  <aesok@post.ru>\n \n \t* expr.c (expand_expr_real_1): Use add_to_hard_reg_set function"}, {"sha": "a2928dbee6c55ea72ba70911b19609b44e57f138", "filename": "gcc/ipa-cp.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57dbdc5a66ce818e168dc5f3d364b9d9cad3826a/gcc%2Fipa-cp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57dbdc5a66ce818e168dc5f3d364b9d9cad3826a/gcc%2Fipa-cp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-cp.c?ref=57dbdc5a66ce818e168dc5f3d364b9d9cad3826a", "patch": "@@ -1539,6 +1539,8 @@ ipcp_driver (void)\n         ipa_print_all_params (dump_file);\n       ipa_print_all_jump_functions (dump_file);\n     }\n+  ipa_check_create_node_params ();\n+  ipa_check_create_edge_args ();\n   /* 2. Do the interprocedural propagation.  */\n   ipcp_iterate_stage ();\n   /* 3. Insert the constants found to the functions.  */\n@@ -1566,8 +1568,6 @@ ipcp_generate_summary (void)\n \n   if (dump_file)\n     fprintf (dump_file, \"\\nIPA constant propagation start:\\n\");\n-  ipa_check_create_node_params ();\n-  ipa_check_create_edge_args ();\n   ipa_register_cgraph_hooks ();\n \n   for (node = cgraph_nodes; node; node = node->next)"}, {"sha": "38d55bc843b78e2c9a12729a9ddc876918d16d18", "filename": "gcc/ipa-inline.c", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57dbdc5a66ce818e168dc5f3d364b9d9cad3826a/gcc%2Fipa-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57dbdc5a66ce818e168dc5f3d364b9d9cad3826a/gcc%2Fipa-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-inline.c?ref=57dbdc5a66ce818e168dc5f3d364b9d9cad3826a", "patch": "@@ -2066,11 +2066,7 @@ inline_generate_summary (void)\n       cgraph_add_function_insertion_hook (&add_new_function, NULL);\n \n   if (flag_indirect_inlining)\n-    {\n-      ipa_register_cgraph_hooks ();\n-      ipa_check_create_node_params ();\n-      ipa_check_create_edge_args ();\n-    }\n+    ipa_register_cgraph_hooks ();\n \n   for (node = cgraph_nodes; node; node = node->next)\n     if (node->analyzed)"}, {"sha": "0587844e354a8f4756f08231cdf721c6da0f38b3", "filename": "gcc/ipa-prop.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57dbdc5a66ce818e168dc5f3d364b9d9cad3826a/gcc%2Fipa-prop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57dbdc5a66ce818e168dc5f3d364b9d9cad3826a/gcc%2Fipa-prop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-prop.c?ref=57dbdc5a66ce818e168dc5f3d364b9d9cad3826a", "patch": "@@ -1522,10 +1522,13 @@ ipa_analyze_params_uses (struct cgraph_node *node,\n void\n ipa_analyze_node (struct cgraph_node *node)\n {\n-  struct ipa_node_params *info = IPA_NODE_REF (node);\n+  struct ipa_node_params *info;\n   struct param_analysis_info *parms_info;\n   int i, param_count;\n \n+  ipa_check_create_node_params ();\n+  ipa_check_create_edge_args ();\n+  info = IPA_NODE_REF (node);\n   push_cfun (DECL_STRUCT_FUNCTION (node->decl));\n   current_function_decl = node->decl;\n   ipa_initialize_node_params (node);"}, {"sha": "cb7e7695f025969659e936b795aa5b684d522336", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57dbdc5a66ce818e168dc5f3d364b9d9cad3826a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57dbdc5a66ce818e168dc5f3d364b9d9cad3826a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=57dbdc5a66ce818e168dc5f3d364b9d9cad3826a", "patch": "@@ -1,3 +1,8 @@\n+2011-04-11  Martin Jambor  <mjambor@suse.cz>\n+\n+\tPR tree-optimization/48195\n+\t* gcc.dg/ipa/pr48195.c: New test.\n+\n 2011-04-10  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gnat.dg/return3.adb: Remove unused switch."}, {"sha": "1cf7a7f71d48911d87652b6f5f7b31c8e7560055", "filename": "gcc/testsuite/gcc.dg/ipa/pr48195.c", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57dbdc5a66ce818e168dc5f3d364b9d9cad3826a/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fpr48195.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57dbdc5a66ce818e168dc5f3d364b9d9cad3826a/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fpr48195.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fpr48195.c?ref=57dbdc5a66ce818e168dc5f3d364b9d9cad3826a", "patch": "@@ -0,0 +1,24 @@\n+/* { dg-do link } */\n+/* { dg-options \"-O2 -flto --param partial-inlining-entry-probability=101\" } */\n+\n+extern void abort(void);\n+\n+int i;\n+\n+void __attribute__ ((constructor))\n+c2 ()\n+{\n+  if (i)\n+    abort ();\n+}\n+\n+void __attribute__ ((destructor))\n+d1 ()\n+{\n+  if (i)\n+    abort ();\n+}\n+\n+void main ()\n+{\n+}"}]}