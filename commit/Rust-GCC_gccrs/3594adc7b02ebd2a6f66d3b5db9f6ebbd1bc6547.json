{"sha": "3594adc7b02ebd2a6f66d3b5db9f6ebbd1bc6547", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzU5NGFkYzdiMDJlYmQyYTZmNjZkM2I1ZGI5ZjZlYmJkMWJjNjU0Nw==", "commit": {"author": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2017-01-11T21:02:46Z"}, "committer": {"name": "Martin Sebor", "email": "msebor@gcc.gnu.org", "date": "2017-01-11T21:02:46Z"}, "message": "PR c++/24511 - [DR 470] explicit instantiation/extern template unsats\n\nPR c++/24511 - [DR 470] explicit instantiation/extern template unsats\n// on symbols defined later\n\ngcc/testsuite/ChangeLog:\n\t* g++.dg/template/explicit9.C: New test.\n\nFrom-SVN: r244337", "tree": {"sha": "9832fc5ed512100c0621333f325a13d0a6275067", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9832fc5ed512100c0621333f325a13d0a6275067"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3594adc7b02ebd2a6f66d3b5db9f6ebbd1bc6547", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3594adc7b02ebd2a6f66d3b5db9f6ebbd1bc6547", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3594adc7b02ebd2a6f66d3b5db9f6ebbd1bc6547", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3594adc7b02ebd2a6f66d3b5db9f6ebbd1bc6547/comments", "author": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "01bfd25762bea829b0ad271bc6daeddb7fcac22f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01bfd25762bea829b0ad271bc6daeddb7fcac22f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/01bfd25762bea829b0ad271bc6daeddb7fcac22f"}], "stats": {"total": 29, "additions": 29, "deletions": 0}, "files": [{"sha": "98fd94963b758d05b5acb182d4ba54908f64100b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3594adc7b02ebd2a6f66d3b5db9f6ebbd1bc6547/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3594adc7b02ebd2a6f66d3b5db9f6ebbd1bc6547/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3594adc7b02ebd2a6f66d3b5db9f6ebbd1bc6547", "patch": "@@ -1,3 +1,8 @@\n+2017-01-11  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR c++/24511\n+\t* g++.dg/template/explicit9.C: New test.\n+\n 2017-01-11  Nathan Sidwell  <nathan@acm.org>\n \n \tPR c++/77812"}, {"sha": "e4f7d88256113f536987b02fc77d4a93427299ac", "filename": "gcc/testsuite/g++.dg/template/explicit9.C", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3594adc7b02ebd2a6f66d3b5db9f6ebbd1bc6547/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fexplicit9.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3594adc7b02ebd2a6f66d3b5db9f6ebbd1bc6547/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fexplicit9.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fexplicit9.C?ref=3594adc7b02ebd2a6f66d3b5db9f6ebbd1bc6547", "patch": "@@ -0,0 +1,24 @@\n+// PR c++/24511 - [DR 470] explicit instantiation/extern template unsats\n+// on symbols defined later\n+// { dg-do compile }\n+\n+template <class T> struct S { T foo (); T bar (); };\n+template <class T> T S<T>::foo () { return T (); }\n+\n+#ifndef MAIN\n+\n+// This part is being tested by the dg-final directive.\n+template struct S<int>;\n+#else\n+\n+// This part is not being tested.\n+extern template struct S<int>;\n+int main ()\n+{\n+  return S<int>().foo () + S<int>().bar ();\n+}\n+#endif\n+\n+template <class T> T S<T>::bar () { return T (); }\n+\n+// { dg-final { scan-assembler-not \"\\\\\\*UND\\\\\\*\\[^\\n]*_Z1fIiEvPT_\" } }"}]}