{"sha": "5ab99fa41cbd172a893947a87f72bfaee3a72c53", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWFiOTlmYTQxY2JkMTcyYTg5Mzk0N2E4N2Y3MmJmYWVlM2E3MmM1Mw==", "commit": {"author": {"name": "Andrew Stubbs", "email": "ams@codesourcery.com", "date": "2019-01-17T12:27:46Z"}, "committer": {"name": "Andrew Stubbs", "email": "ams@gcc.gnu.org", "date": "2019-01-17T12:27:46Z"}, "message": "GCN libgfortran.\n\nThis patch contains the GCN port of libgfortran.  We use the minimal\nconfiguration created for NVPTX.  That's all that's required, besides the\ntarget-independent bug fixes posted already.\n\n2019-01-17  Andrew Stubbs  <ams@codesourcery.com>\n\t    Kwok Cheung Yeung  <kcy@codesourcery.com>\n\t    Julian Brown  <julian@codesourcery.com>\n\t    Tom de Vries  <tom@codesourcery.com>\n\n\tlibgfortran/\n\t* configure.ac: Use minimal mode for amdgcn.\n\t* configure: Regenerate.\n\n\nCo-Authored-By: Julian Brown <julian@codesourcery.com>\nCo-Authored-By: Kwok Cheung Yeung <kcy@codesourcery.com>\nCo-Authored-By: Tom de Vries <tom@codesourcery.com>\n\nFrom-SVN: r268020", "tree": {"sha": "ddc37902a46024632f83d3a8ba170369cc33801d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ddc37902a46024632f83d3a8ba170369cc33801d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5ab99fa41cbd172a893947a87f72bfaee3a72c53", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ab99fa41cbd172a893947a87f72bfaee3a72c53", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5ab99fa41cbd172a893947a87f72bfaee3a72c53", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ab99fa41cbd172a893947a87f72bfaee3a72c53/comments", "author": {"login": "ams-cs", "id": 2235130, "node_id": "MDQ6VXNlcjIyMzUxMzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2235130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ams-cs", "html_url": "https://github.com/ams-cs", "followers_url": "https://api.github.com/users/ams-cs/followers", "following_url": "https://api.github.com/users/ams-cs/following{/other_user}", "gists_url": "https://api.github.com/users/ams-cs/gists{/gist_id}", "starred_url": "https://api.github.com/users/ams-cs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ams-cs/subscriptions", "organizations_url": "https://api.github.com/users/ams-cs/orgs", "repos_url": "https://api.github.com/users/ams-cs/repos", "events_url": "https://api.github.com/users/ams-cs/events{/privacy}", "received_events_url": "https://api.github.com/users/ams-cs/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3d058ebb6ffcac960aa8604ce56b9077854b582a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d058ebb6ffcac960aa8604ce56b9077854b582a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3d058ebb6ffcac960aa8604ce56b9077854b582a"}], "stats": {"total": 18, "additions": 14, "deletions": 4}, "files": [{"sha": "1cb8961d1ad8c502717356ceb94cd10b0f9636a6", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ab99fa41cbd172a893947a87f72bfaee3a72c53/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ab99fa41cbd172a893947a87f72bfaee3a72c53/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=5ab99fa41cbd172a893947a87f72bfaee3a72c53", "patch": "@@ -1,3 +1,11 @@\n+2019-01-17  Andrew Stubbs  <ams@codesourcery.com>\n+\t    Kwok Cheung Yeung  <kcy@codesourcery.com>\n+\t    Julian Brown  <julian@codesourcery.com>\n+\t    Tom de Vries  <tom@codesourcery.com>\n+\n+\t* configure.ac: Use minimal mode for amdgcn.\n+\t* configure: Regenerate.\n+\n 2019-01-13  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n \tPR libfortran/88776"}, {"sha": "487d8c090e2720c4638e5cbc6f77b1c3b9b755f6", "filename": "libgfortran/configure", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ab99fa41cbd172a893947a87f72bfaee3a72c53/libgfortran%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ab99fa41cbd172a893947a87f72bfaee3a72c53/libgfortran%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fconfigure?ref=5ab99fa41cbd172a893947a87f72bfaee3a72c53", "patch": "@@ -6164,7 +6164,8 @@ fi\n # * C library support for other features such as signal, environment\n #   variables, time functions\n \n- if test \"x${target_cpu}\" = xnvptx; then\n+ if test \"x${target_cpu}\" = xnvptx \\\n+\t\t\t\t || test \"x${target_cpu}\" = xamdgcn; then\n   LIBGFOR_MINIMAL_TRUE=\n   LIBGFOR_MINIMAL_FALSE='#'\n else\n@@ -12684,7 +12685,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12687 \"configure\"\n+#line 12688 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -12790,7 +12791,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12793 \"configure\"\n+#line 12794 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H"}, {"sha": "c06db7b1a78967976765a11893435b7496809bb2", "filename": "libgfortran/configure.ac", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ab99fa41cbd172a893947a87f72bfaee3a72c53/libgfortran%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ab99fa41cbd172a893947a87f72bfaee3a72c53/libgfortran%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fconfigure.ac?ref=5ab99fa41cbd172a893947a87f72bfaee3a72c53", "patch": "@@ -205,7 +205,8 @@ AM_CONDITIONAL(LIBGFOR_USE_SYMVER_SUN, [test \"x$gfortran_use_symver\" = xsun])\n # * C library support for other features such as signal, environment\n #   variables, time functions\n \n-AM_CONDITIONAL(LIBGFOR_MINIMAL, [test \"x${target_cpu}\" = xnvptx])\n+AM_CONDITIONAL(LIBGFOR_MINIMAL, [test \"x${target_cpu}\" = xnvptx \\\n+\t\t\t\t || test \"x${target_cpu}\" = xamdgcn])\n \n # Figure out whether the compiler supports \"-ffunction-sections -fdata-sections\",\n # similarly to how libstdc++ does it"}]}