{"sha": "dde460d482fcf150d17b0baa2bc0b97714ec6365", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGRlNDYwZDQ4MmZjZjE1MGQxN2IwYmFhMmJjMGI5NzcxNGVjNjM2NQ==", "commit": {"author": {"name": "Michael Matz", "email": "matz@suse.de", "date": "2011-09-02T18:31:47Z"}, "committer": {"name": "Michael Matz", "email": "matz@gcc.gnu.org", "date": "2011-09-02T18:31:47Z"}, "message": "re PR middle-end/50260 (internal compiler error: Segmentation fault  at ../../gcc/gcc/tree-ssa-live.c:88)\n\n\tPR middle-end/50260\n\t* ipa-split.c (split_function): Call add_referenced_var.\n\n\t* tree-ssa-phiopt.c (cond_store_replacement): Don't call get_var_ann.\n\t(cond_if_else_store_replacement_1): Ditto.\n\t* tree-ssa-pre.c (get_representative_for): Ditto.\n\t(create_expression_by_pieces): Ditto.\n\t(insert_into_preds_of_block): Ditto.\n\t* tree-sra.c (create_access_replacement): Ditto.\n\t(get_replaced_param_substitute): Ditto.\n\nFrom-SVN: r178489", "tree": {"sha": "da6f6fbaadc0e51a49a926d72b946f5ff6ad2d7e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/da6f6fbaadc0e51a49a926d72b946f5ff6ad2d7e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dde460d482fcf150d17b0baa2bc0b97714ec6365", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dde460d482fcf150d17b0baa2bc0b97714ec6365", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dde460d482fcf150d17b0baa2bc0b97714ec6365", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dde460d482fcf150d17b0baa2bc0b97714ec6365/comments", "author": {"login": "susematz", "id": 4117296, "node_id": "MDQ6VXNlcjQxMTcyOTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4117296?v=4", "gravatar_id": "", "url": "https://api.github.com/users/susematz", "html_url": "https://github.com/susematz", "followers_url": "https://api.github.com/users/susematz/followers", "following_url": "https://api.github.com/users/susematz/following{/other_user}", "gists_url": "https://api.github.com/users/susematz/gists{/gist_id}", "starred_url": "https://api.github.com/users/susematz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/susematz/subscriptions", "organizations_url": "https://api.github.com/users/susematz/orgs", "repos_url": "https://api.github.com/users/susematz/repos", "events_url": "https://api.github.com/users/susematz/events{/privacy}", "received_events_url": "https://api.github.com/users/susematz/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6bd9bf425438065b5a1daf0b19a0f8cdd0ed985e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6bd9bf425438065b5a1daf0b19a0f8cdd0ed985e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6bd9bf425438065b5a1daf0b19a0f8cdd0ed985e"}], "stats": {"total": 40, "additions": 21, "deletions": 19}, "files": [{"sha": "b6aeebb40f6269fef609304b7ed47a5daedf45b1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dde460d482fcf150d17b0baa2bc0b97714ec6365/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dde460d482fcf150d17b0baa2bc0b97714ec6365/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=dde460d482fcf150d17b0baa2bc0b97714ec6365", "patch": "@@ -1,3 +1,16 @@\n+2011-09-02  Michael Matz  <matz@suse.de>\n+\n+\tPR middle-end/50260\n+\t* ipa-split.c (split_function): Call add_referenced_var.\n+\n+\t* tree-ssa-phiopt.c (cond_store_replacement): Don't call get_var_ann.\n+\t(cond_if_else_store_replacement_1): Ditto.\n+\t* tree-ssa-pre.c (get_representative_for): Ditto.\n+\t(create_expression_by_pieces): Ditto.\n+\t(insert_into_preds_of_block): Ditto.\n+\t* tree-sra.c (create_access_replacement): Ditto.\n+\t(get_replaced_param_substitute): Ditto.\n+\n 2011-09-02  Bernd Schmidt  <bernds@codesourcery.com>\n \n \t* config/c6x/c6x.md (collapse-ndfa, no-comb-vect): New"}, {"sha": "d5e5c69b5d85ce3940caa275d421bbd52dd67c22", "filename": "gcc/ipa-split.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dde460d482fcf150d17b0baa2bc0b97714ec6365/gcc%2Fipa-split.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dde460d482fcf150d17b0baa2bc0b97714ec6365/gcc%2Fipa-split.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-split.c?ref=dde460d482fcf150d17b0baa2bc0b97714ec6365", "patch": "@@ -988,6 +988,9 @@ split_function (struct split_point *split_point)\n \targ = gimple_default_def (cfun, parm);\n \tif (!arg)\n \t  {\n+\t    /* This parm wasn't used up to now, but is going to be used,\n+\t       hence register it.  */\n+\t    add_referenced_var (parm);\n \t    arg = make_ssa_name (parm, gimple_build_nop ());\n \t    set_default_def (parm, arg);\n \t  }"}, {"sha": "203c4823db5eef74654534c85cf3189f414595d8", "filename": "gcc/tree-sra.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dde460d482fcf150d17b0baa2bc0b97714ec6365/gcc%2Ftree-sra.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dde460d482fcf150d17b0baa2bc0b97714ec6365/gcc%2Ftree-sra.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-sra.c?ref=dde460d482fcf150d17b0baa2bc0b97714ec6365", "patch": "@@ -1825,7 +1825,6 @@ create_access_replacement (struct access *access, bool rename)\n   tree repl;\n \n   repl = create_tmp_var (access->type, \"SR\");\n-  get_var_ann (repl);\n   add_referenced_var (repl);\n   if (rename)\n     mark_sym_for_renaming (repl);\n@@ -4106,7 +4105,6 @@ get_replaced_param_substitute (struct ipa_parm_adjustment *adj)\n       DECL_NAME (repl) = get_identifier (pretty_name);\n       obstack_free (&name_obstack, pretty_name);\n \n-      get_var_ann (repl);\n       add_referenced_var (repl);\n       adj->new_ssa_base = repl;\n     }"}, {"sha": "4275344757533e16b721987eac65545312eb4a07", "filename": "gcc/tree-ssa-phiopt.c", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dde460d482fcf150d17b0baa2bc0b97714ec6365/gcc%2Ftree-ssa-phiopt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dde460d482fcf150d17b0baa2bc0b97714ec6365/gcc%2Ftree-ssa-phiopt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-phiopt.c?ref=dde460d482fcf150d17b0baa2bc0b97714ec6365", "patch": "@@ -1269,10 +1269,7 @@ cond_store_replacement (basic_block middle_bb, basic_block join_bb,\n   /* 2) Create a temporary where we can store the old content\n         of the memory touched by the store, if we need to.  */\n   if (!condstoretemp || TREE_TYPE (lhs) != TREE_TYPE (condstoretemp))\n-    {\n-      condstoretemp = create_tmp_reg (TREE_TYPE (lhs), \"cstore\");\n-      get_var_ann (condstoretemp);\n-    }\n+    condstoretemp = create_tmp_reg (TREE_TYPE (lhs), \"cstore\");\n   add_referenced_var (condstoretemp);\n \n   /* 3) Insert a load from the memory of the store to the temporary\n@@ -1355,10 +1352,7 @@ cond_if_else_store_replacement_1 (basic_block then_bb, basic_block else_bb,\n   /* 2) Create a temporary where we can store the old content\n \tof the memory touched by the store, if we need to.  */\n   if (!condstoretemp || TREE_TYPE (lhs) != TREE_TYPE (condstoretemp))\n-    {\n-      condstoretemp = create_tmp_reg (TREE_TYPE (lhs), \"cstore\");\n-      get_var_ann (condstoretemp);\n-    }\n+    condstoretemp = create_tmp_reg (TREE_TYPE (lhs), \"cstore\");\n   add_referenced_var (condstoretemp);\n \n   /* 3) Create a PHI node at the join block, with one argument"}, {"sha": "6f3b03b3f98f5fbeb58a67fa0a41a5b2f8f433c1", "filename": "gcc/tree-ssa-pre.c", "status": "modified", "additions": 3, "deletions": 9, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dde460d482fcf150d17b0baa2bc0b97714ec6365/gcc%2Ftree-ssa-pre.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dde460d482fcf150d17b0baa2bc0b97714ec6365/gcc%2Ftree-ssa-pre.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-pre.c?ref=dde460d482fcf150d17b0baa2bc0b97714ec6365", "patch": "@@ -1399,7 +1399,7 @@ get_representative_for (const pre_expr e)\n   if (!pretemp || exprtype != TREE_TYPE (pretemp))\n     {\n       pretemp = create_tmp_reg (exprtype, \"pretmp\");\n-      get_var_ann (pretemp);\n+      add_referenced_var (pretemp);\n     }\n \n   name = make_ssa_name (pretemp, gimple_build_nop ());\n@@ -3178,10 +3178,7 @@ create_expression_by_pieces (basic_block block, pre_expr expr,\n   /* Build and insert the assignment of the end result to the temporary\n      that we will return.  */\n   if (!pretemp || exprtype != TREE_TYPE (pretemp))\n-    {\n-      pretemp = create_tmp_reg (exprtype, \"pretmp\");\n-      get_var_ann (pretemp);\n-    }\n+    pretemp = create_tmp_reg (exprtype, \"pretmp\");\n \n   temp = pretemp;\n   add_referenced_var (temp);\n@@ -3441,10 +3438,7 @@ insert_into_preds_of_block (basic_block block, unsigned int exprnum,\n \n   /* Now build a phi for the new variable.  */\n   if (!prephitemp || TREE_TYPE (prephitemp) != type)\n-    {\n-      prephitemp = create_tmp_var (type, \"prephitmp\");\n-      get_var_ann (prephitemp);\n-    }\n+    prephitemp = create_tmp_var (type, \"prephitmp\");\n \n   temp = prephitemp;\n   add_referenced_var (temp);"}]}