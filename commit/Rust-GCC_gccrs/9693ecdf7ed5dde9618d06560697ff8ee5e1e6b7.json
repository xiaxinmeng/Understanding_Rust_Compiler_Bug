{"sha": "9693ecdf7ed5dde9618d06560697ff8ee5e1e6b7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTY5M2VjZGY3ZWQ1ZGRlOTYxOGQwNjU2MDY5N2ZmOGVlNWUxZTZiNw==", "commit": {"author": {"name": "Andrew MacLeod", "email": "amacleod@redhat.com", "date": "2021-07-12T18:38:42Z"}, "committer": {"name": "Andrew MacLeod", "email": "amacleod@redhat.com", "date": "2021-07-12T23:14:30Z"}, "message": "Add relation processing to ubsan builtins.\n\nUbsan builtins call the plus/minus/multiple fold routines, but did not\nuse any relation information between the 2 operands that is available.\nquery and pass any relations.\nThis resolves gcc.dg/pr97505.c when operating in ranger-only mode.\n\n\t* gimple-range-fold.cc (fold_using_range::range_of_builtin_ubsan_call):\n\tQuery relation between the 2 operands and use it.", "tree": {"sha": "fb132b2cd789877a7164529e09aefacaa05e82e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fb132b2cd789877a7164529e09aefacaa05e82e4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9693ecdf7ed5dde9618d06560697ff8ee5e1e6b7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9693ecdf7ed5dde9618d06560697ff8ee5e1e6b7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9693ecdf7ed5dde9618d06560697ff8ee5e1e6b7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9693ecdf7ed5dde9618d06560697ff8ee5e1e6b7/comments", "author": null, "committer": null, "parents": [{"sha": "e61afa0c2fb633b037368c067d4744c07349a2eb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e61afa0c2fb633b037368c067d4744c07349a2eb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e61afa0c2fb633b037368c067d4744c07349a2eb"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "eff5d1f89f21c7d457421f9a42700bea54aef065", "filename": "gcc/gimple-range-fold.cc", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9693ecdf7ed5dde9618d06560697ff8ee5e1e6b7/gcc%2Fgimple-range-fold.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9693ecdf7ed5dde9618d06560697ff8ee5e1e6b7/gcc%2Fgimple-range-fold.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-range-fold.cc?ref=9693ecdf7ed5dde9618d06560697ff8ee5e1e6b7", "patch": "@@ -825,12 +825,14 @@ fold_using_range::range_of_builtin_ubsan_call (irange &r, gcall *call,\n   tree arg1 = gimple_call_arg (call, 1);\n   src.get_operand (ir0, arg0);\n   src.get_operand (ir1, arg1);\n+  // Check for any relation between arg0 and arg1.\n+  relation_kind relation = src.query_relation (arg0, arg1);\n \n   bool saved_flag_wrapv = flag_wrapv;\n   // Pretend the arithmetic is wrapping.  If there is any overflow,\n   // we'll complain, but will actually do wrapping operation.\n   flag_wrapv = 1;\n-  op->fold_range (r, type, ir0, ir1);\n+  op->fold_range (r, type, ir0, ir1, relation);\n   flag_wrapv = saved_flag_wrapv;\n \n   // If for both arguments vrp_valueize returned non-NULL, this should"}]}