{"sha": "90cb5151ca94f00a47024120d72af238af47cb55", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTBjYjUxNTFjYTk0ZjAwYTQ3MDI0MTIwZDcyYWYyMzhhZjQ3Y2I1NQ==", "commit": {"author": {"name": "Michael Koch", "email": "konqueror@gmx.de", "date": "2004-04-20T18:15:44Z"}, "committer": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2004-04-20T18:15:44Z"}, "message": "BufferedWriter.java: Reordered variables to be at top of the class.\n\n2004-04-20  Michael Koch  <konqueror@gmx.de>\n\n\t* java/io/BufferedWriter.java:\n\tReordered variables to be at top of the class.\n\t(localFlush): Removed redundant final keyword.\n\nFrom-SVN: r80916", "tree": {"sha": "4d9e4268629aaa85c1c3d57b9dd5786ad431eabb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4d9e4268629aaa85c1c3d57b9dd5786ad431eabb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/90cb5151ca94f00a47024120d72af238af47cb55", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90cb5151ca94f00a47024120d72af238af47cb55", "html_url": "https://github.com/Rust-GCC/gccrs/commit/90cb5151ca94f00a47024120d72af238af47cb55", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90cb5151ca94f00a47024120d72af238af47cb55/comments", "author": null, "committer": null, "parents": [{"sha": "5ede96a4796c1a6794a316e1b1a8feef614c9ab7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ede96a4796c1a6794a316e1b1a8feef614c9ab7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5ede96a4796c1a6794a316e1b1a8feef614c9ab7"}], "stats": {"total": 66, "additions": 36, "deletions": 30}, "files": [{"sha": "e0aceb1af65a1a97f4d0671aac097865e58af1f0", "filename": "libjava/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90cb5151ca94f00a47024120d72af238af47cb55/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90cb5151ca94f00a47024120d72af238af47cb55/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=90cb5151ca94f00a47024120d72af238af47cb55", "patch": "@@ -1,3 +1,9 @@\n+2004-04-20  Michael Koch  <konqueror@gmx.de>\n+\n+\t* java/io/BufferedWriter.java:\n+\tReordered variables to be at top of the class.\n+\t(localFlush): Removed redundant final keyword.\n+\n 2004-04-20  Ingo Proetel  <proetel@aicas.com>\n \n \t* java/awt/event/MouseEvent.java (<init>): fixed field assignment "}, {"sha": "009bdccc144fa47ea7265081b71b5376b753146d", "filename": "libjava/java/io/BufferedWriter.java", "status": "modified", "additions": 30, "deletions": 30, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90cb5151ca94f00a47024120d72af238af47cb55/libjava%2Fjava%2Fio%2FBufferedWriter.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90cb5151ca94f00a47024120d72af238af47cb55/libjava%2Fjava%2Fio%2FBufferedWriter.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fio%2FBufferedWriter.java?ref=90cb5151ca94f00a47024120d72af238af47cb55", "patch": "@@ -57,6 +57,30 @@\n  */\n public class BufferedWriter extends Writer\n {\n+  /**\n+   * This is the default buffer size\n+   */\n+  private static final int DEFAULT_BUFFER_SIZE = 8192;\n+\n+  /**\n+   * This is the underlying <code>Writer</code> to which this object\n+   * sends its output.\n+   */\n+  private Writer out;\n+\n+  /**\n+   * This is the internal char array used for buffering output before\n+   * writing it.\n+   */\n+  char[] buffer;\n+\n+  /**\n+   * This is the number of chars that are currently in the buffer and\n+   * are waiting to be written to the underlying stream.  It always points to\n+   * the index into the buffer where the next char of data will be stored\n+   */\n+  int count;\n+\n   /**\n    * This method initializes a new <code>BufferedWriter</code> instance\n    * that will write to the specified subordinate <code>Writer</code>\n@@ -77,12 +101,12 @@ public BufferedWriter (Writer out)\n    * @param out The underlying <code>Writer</code> to write data to\n    * @param size The size of the internal buffer\n    */\n-  public BufferedWriter (Writer ox, int size)\n+  public BufferedWriter (Writer out, int size)\n   {\n-    super (ox);\n-    out = ox;\n-    buffer = new char[size];\n-    count = 0;\n+    super(out);\n+    this.out = out;\n+    this.buffer = new char[size];\n+    this.count = 0;\n   }\n \n   /**\n@@ -227,36 +251,12 @@ public void write (String str, int offset, int len) throws IOException\n   }\n \n   // This should only be called with the lock held.\n-  private final void localFlush () throws IOException\n+  private void localFlush () throws IOException\n   {\n     if (count > 0)\n       {\n \tout.write(buffer, 0, count);\n \tcount = 0;\n       }\n   }\n-\n-  /**\n-   * This is the underlying <code>Writer</code> to which this object\n-   * sends its output.\n-   */\n-  private Writer out;\n-\n-  /**\n-   * This is the internal char array used for buffering output before\n-   * writing it.\n-   */\n-  char[] buffer;\n-\n-  /**\n-   * This is the number of chars that are currently in the buffer and\n-   * are waiting to be written to the underlying stream.  It always points to\n-   * the index into the buffer where the next char of data will be stored\n-   */\n-  int count;\n-\n-  /**\n-   * This is the default buffer size\n-   */\n-  private static final int DEFAULT_BUFFER_SIZE = 8192;\n }"}]}