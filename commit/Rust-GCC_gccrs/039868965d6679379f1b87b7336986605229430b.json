{"sha": "039868965d6679379f1b87b7336986605229430b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDM5ODY4OTY1ZDY2NzkzNzlmMWI4N2I3MzM2OTg2NjA1MjI5NDMwYg==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2011-01-22T02:15:01Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2011-01-22T02:15:01Z"}, "message": "libgo: Adjust deadlock avoidance.\n\nFrom-SVN: r169120", "tree": {"sha": "24a07c8f2c70c351413311e83632aaddce690aba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/24a07c8f2c70c351413311e83632aaddce690aba"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/039868965d6679379f1b87b7336986605229430b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/039868965d6679379f1b87b7336986605229430b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/039868965d6679379f1b87b7336986605229430b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/039868965d6679379f1b87b7336986605229430b/comments", "author": null, "committer": null, "parents": [{"sha": "2e8e58aa8adc4cb4a276a54f139eb40c5e19e00d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e8e58aa8adc4cb4a276a54f139eb40c5e19e00d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2e8e58aa8adc4cb4a276a54f139eb40c5e19e00d"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "31462685afbb7722723e67e744ff7cec323ed871", "filename": "libgo/runtime/go-go.c", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/039868965d6679379f1b87b7336986605229430b/libgo%2Fruntime%2Fgo-go.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/039868965d6679379f1b87b7336986605229430b/libgo%2Fruntime%2Fgo-go.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fruntime%2Fgo-go.c?ref=039868965d6679379f1b87b7336986605229430b", "patch": "@@ -297,6 +297,15 @@ gc_stop_handler (int sig __attribute__ ((unused)))\n {\n   struct M *pm = m;\n \n+  if (__sync_bool_compare_and_swap (&pm->holds_finlock, 1, 1))\n+    {\n+      /* We can't interrupt the thread while it holds the finalizer\n+\t lock.  Otherwise we can get into a deadlock when mark calls\n+\t runtime_walkfintab.  */\n+      __sync_bool_compare_and_swap (&pm->gcing_for_finlock, 0, 1);\n+      return;\n+    }\n+\n   if (__sync_bool_compare_and_swap (&pm->mallocing, 1, 1))\n     {\n       /* m->mallocing was already non-zero.  We can't interrupt the\n@@ -315,15 +324,6 @@ gc_stop_handler (int sig __attribute__ ((unused)))\n       return;\n     }\n \n-  if (__sync_bool_compare_and_swap (&pm->holds_finlock, 1, 1))\n-    {\n-      /* Similarly, we can't interrupt the thread while it holds the\n-\t finalizer lock.  Otherwise we can get into a deadlock when\n-\t mark calls runtime_walkfintab.  */\n-      __sync_bool_compare_and_swap (&pm->gcing_for_finlock, 0, 1);\n-      return;\n-    }\n-\n   stop_for_gc ();\n }\n "}]}