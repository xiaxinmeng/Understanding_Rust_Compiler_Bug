{"sha": "09176aea40fcc440cbedae0b222de8724888fa4e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDkxNzZhZWE0MGZjYzQ0MGNiZWRhZTBiMjIyZGU4NzI0ODg4ZmE0ZQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-07-29T14:46:27Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-07-29T14:46:27Z"}, "message": "[multiple changes]\n\n2014-07-29  Robert Dewar  <dewar@adacore.com>\n\n\t* gnat_rm.texi, sem_prag.adb: Minor reformatting.\n\n2014-07-29  Sergey Rybin  <rybin@adacore.com frybin>\n\n\t* gnat_ugn.texi: gnatmetric: clarify documentation for cyclomatic\n\tcomplexity metrics.\n\n2014-07-29  Thomas Quinot  <quinot@adacore.com>\n\n\tPR ada/60652\n\t* s-oscons-tmplt.c: For Linux, define _BSD_SOURCE in order for\n\tCRTSCTS to be visible.\n\n2014-07-29  Bob Duff  <duff@adacore.com>\n\n\t* g-trasym.adb, g-trasym.ads: Code cleanup.\n\nFrom-SVN: r213201", "tree": {"sha": "8ba554d642cd65c3d924d6770093c6c80c66f6b1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8ba554d642cd65c3d924d6770093c6c80c66f6b1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/09176aea40fcc440cbedae0b222de8724888fa4e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09176aea40fcc440cbedae0b222de8724888fa4e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/09176aea40fcc440cbedae0b222de8724888fa4e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09176aea40fcc440cbedae0b222de8724888fa4e/comments", "author": null, "committer": null, "parents": [{"sha": "1b4ada8ff0a07ce407259c81248d813a295f9c41", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b4ada8ff0a07ce407259c81248d813a295f9c41", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1b4ada8ff0a07ce407259c81248d813a295f9c41"}], "stats": {"total": 103, "additions": 83, "deletions": 20}, "files": [{"sha": "eb1e9f76cb38013d21e19db84b9b2a6861d02644", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09176aea40fcc440cbedae0b222de8724888fa4e/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09176aea40fcc440cbedae0b222de8724888fa4e/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=09176aea40fcc440cbedae0b222de8724888fa4e", "patch": "@@ -1,3 +1,22 @@\n+2014-07-29  Robert Dewar  <dewar@adacore.com>\n+\n+\t* gnat_rm.texi, sem_prag.adb: Minor reformatting.\n+\n+2014-07-29  Sergey Rybin  <rybin@adacore.com frybin>\n+\n+\t* gnat_ugn.texi: gnatmetric: clarify documentation for cyclomatic\n+\tcomplexity metrics.\n+\n+2014-07-29  Thomas Quinot  <quinot@adacore.com>\n+\n+\tPR ada/60652\n+\t* s-oscons-tmplt.c: For Linux, define _BSD_SOURCE in order for\n+\tCRTSCTS to be visible.\n+\n+2014-07-29  Bob Duff  <duff@adacore.com>\n+\n+\t* g-trasym.adb, g-trasym.ads: Code cleanup.\n+\n 2014-07-29  Doug Rupp  <rupp@adacore.com>\n \n \t* sigtramp-vxworks.c: Minor reformatting."}, {"sha": "35d4020d3251f846edcddebb0bbb9eedad391071", "filename": "gcc/ada/g-trasym.adb", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09176aea40fcc440cbedae0b222de8724888fa4e/gcc%2Fada%2Fg-trasym.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09176aea40fcc440cbedae0b222de8724888fa4e/gcc%2Fada%2Fg-trasym.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-trasym.adb?ref=09176aea40fcc440cbedae0b222de8724888fa4e", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                     Copyright (C) 1999-2012, AdaCore                     --\n+--                     Copyright (C) 1999-2014, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -69,7 +69,9 @@ package body GNAT.Traceback.Symbolic is\n       end if;\n    end Symbolic_Traceback;\n \n-   function Symbolic_Traceback (E : Exception_Occurrence) return String is\n+   function Symbolic_Traceback\n+     (E : Ada.Exceptions.Exception_Occurrence) return String\n+   is\n    begin\n       return Symbolic_Traceback (Tracebacks (E));\n    end Symbolic_Traceback;"}, {"sha": "a3ac108f6ea4589db7f3d23b583d612823714fc8", "filename": "gcc/ada/g-trasym.ads", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09176aea40fcc440cbedae0b222de8724888fa4e/gcc%2Fada%2Fg-trasym.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09176aea40fcc440cbedae0b222de8724888fa4e/gcc%2Fada%2Fg-trasym.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-trasym.ads?ref=09176aea40fcc440cbedae0b222de8724888fa4e", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---                     Copyright (C) 1999-2012, AdaCore                     --\n+--                     Copyright (C) 1999-2014, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -84,7 +84,7 @@\n --  Symbolic_Traceback return a list of addresses expressed as \"0x...\"\n --  separated by line feed.\n \n-with Ada.Exceptions; use Ada.Exceptions;\n+with Ada.Exceptions;\n \n package GNAT.Traceback.Symbolic is\n    pragma Elaborate_Body;\n@@ -94,7 +94,8 @@ package GNAT.Traceback.Symbolic is\n    --  Note: This procedure may be installed by Set_Trace_Decorator, to get a\n    --  symbolic traceback on all exceptions raised (see GNAT.Exception_Traces).\n \n-   function Symbolic_Traceback (E : Exception_Occurrence) return String;\n+   function Symbolic_Traceback\n+     (E : Ada.Exceptions.Exception_Occurrence) return String;\n    --  Build string containing symbolic traceback of given exception occurrence\n \n end GNAT.Traceback.Symbolic;"}, {"sha": "6f6e0edc55cef1b4b0d240c20ea3a8a3d66ca99e", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 29, "deletions": 4, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09176aea40fcc440cbedae0b222de8724888fa4e/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09176aea40fcc440cbedae0b222de8724888fa4e/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=09176aea40fcc440cbedae0b222de8724888fa4e", "patch": "@@ -4573,7 +4573,9 @@ There are five supported optimization hints for a loop:\n @itemize @bullet\n @item Ivdep\n \n-The programmer asserts that there are no loop-carried dependencies which would prevent consecutive iterations of the loop from being executed simultaneously.\n+The programmer asserts that there are no loop-carried dependencies\n+which would prevent consecutive iterations of the loop from being\n+executed simultaneously.\n \n @item No_Unroll\n \n@@ -4599,7 +4601,7 @@ unrolling, but there is no guarantee that the loop will be vectorized.\n \n @end itemize\n \n-These hints do not void the need to pass the appropriate switches to the\n+These hints do not remove the need to pass the appropriate switches to the\n compiler in order to enable the relevant optimizations, that is to say\n @option{-funroll-loops} for unrolling and @option{-ftree-vectorize} for\n vectorization.\n@@ -8345,7 +8347,30 @@ that it is separately controllable using pragma @code{Assertion_Policy}.\n @unnumberedsec Aspect Iterable\n @findex Iterable\n @noindent\n-PLEASE ADD DOCUMENTATION HERE???\n+This aspect is used in the GNAT-defined formal container packages, to provide\n+a light-weight mechanism for loops over such containers, without the overhead\n+imposed by the tampering checks of standard Ada2012 iterators. The value of the\n+aspect is a aggregate with four named  components: First, Next, Has_Element,\n+and Element. The following is a typical example of use:\n+\n+@smallexample @c ada\n+type List is private with\n+    Iterable => (First        => First_Element,\n+                 Next         => Advance,\n+                 Has_Element  => Get_Element,\n+                 Element      => List_Element);\n+@end smallexample\n+@itemize @bullet\n+@item The value denoted by @code{First} must denote a primitive operation of\n+the  container type that returns a Cursor, which must a be a type declared in\n+the container package.\n+@item The value of @code{Next} is a primitive operation of the container type\n+that takes a cursor and yields a cursor.\n+@item @code{Has_Element} is an operation that applies to a cursor a yields an\n+element of the container.\n+@item @code{Element} is the type of the elements of the container type, and\n+thus the result of the function denoted by Has_Element.\n+@end itemize\n \n @node Aspect Linker_Section\n @unnumberedsec Aspect Linker_Section\n@@ -9107,7 +9132,7 @@ relevant environment variables at run time.\n @unnumberedsec Attribute Iterable\n @findex Iterable\n @noindent\n-PLEASE ADD DOCUMENTATION HERE???\n+Equivalent to Aspect Iterable.\n \n @node Attribute Large\n @unnumberedsec Attribute Large"}, {"sha": "2dcdb4f35a24af9e8cf4510523872d79d2cf6870", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09176aea40fcc440cbedae0b222de8724888fa4e/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09176aea40fcc440cbedae0b222de8724888fa4e/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=09176aea40fcc440cbedae0b222de8724888fa4e", "patch": "@@ -16222,14 +16222,17 @@ and quantified expressions. For each body, we compute three metric values:\n @itemize @bullet\n @item\n the complexity introduced by control\n-statements only, without taking into account short-circuit forms,\n+statements only, without taking into account short-circuit forms\n+(referred as @code{statement complexity} in @command{gnatmetric} output),\n \n @item\n-the complexity introduced by short-circuit control forms only, and\n+the complexity introduced by short-circuit control forms only\n+(referred as @code{expression complexity} in @command{gnatmetric} output), and\n \n @item\n the total\n-cyclomatic complexity, which is the sum of these two values.\n+cyclomatic complexity, which is the sum of these two values\n+(referred as @code{cyclomatic complexity} in @command{gnatmetric} output).\n @end itemize\n \n @noindent\n@@ -19851,8 +19854,8 @@ Specifies whether or not passed tests should be shown. @var{val} can be either\n \n @item --tests-root=@var{dirname}\n @cindex @option{--tests-root} (@command{gnattest})\n-The directory hierarchy of tested sources is recreated in the @var{dirname}\n-directory, and test packages are placed in corresponding directories.\n+The hierarchy of source directories, if any, is recreated in the @var{dirname}\n+directory, with test packages placed in directories corresponding to those of the sources.\n If the @var{dirname} is a relative path, it is considered relative to the object\n directory of the project file. When all sources from all projects are taken\n recursively from all projects, directory hierarchies of tested sources are\n@@ -19861,7 +19864,10 @@ placed accordingly.\n \n @item --subdir=@var{dirname}\n @cindex @option{--subdir} (@command{gnattest})\n-Test packages are placed in subdirectories.\n+Test packages are placed in a subdirectory of the corresponding source directory,\n+with the name @var{dirname}. Thus, each set of unit tests is located in a subdirectory of the\n+code under test.  If the sources are in separate directories, each source directory\n+has a test subdirectory named @var{dirname}.\n \n @item --tests-dir=@var{dirname}\n @cindex @option{--tests-dir} (@command{gnattest})"}, {"sha": "de2b9b988bf2b8784cd350319e50ac73fac88dd1", "filename": "gcc/ada/s-oscons-tmplt.c", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09176aea40fcc440cbedae0b222de8724888fa4e/gcc%2Fada%2Fs-oscons-tmplt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09176aea40fcc440cbedae0b222de8724888fa4e/gcc%2Fada%2Fs-oscons-tmplt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-oscons-tmplt.c?ref=09176aea40fcc440cbedae0b222de8724888fa4e", "patch": "@@ -86,10 +86,17 @@ pragma Style_Checks (\"M32766\");\n  ** a number of non-POSIX but useful/required features.\n  **/\n \n-#if defined (__linux__) && !defined (_XOPEN_SOURCE)\n-/* For Linux, define _XOPEN_SOURCE to get IOV_MAX */\n-#define _XOPEN_SOURCE 500\n-#endif\n+#if defined (__linux__)\n+\n+/* Define _XOPEN_SOURCE to get IOV_MAX */\n+# if !defined (_XOPEN_SOURCE)\n+#  define _XOPEN_SOURCE 500\n+# endif\n+\n+/* Define _BSD_SOURCE to get CRTSCTS */\n+# define _BSD_SOURCE\n+\n+#endif /* defined (__linux__) */\n \n /* Include gsocket.h before any system header so it can redefine FD_SETSIZE */\n "}, {"sha": "dac9342965711a2440aae6a1a95b7c5e13c26b16", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09176aea40fcc440cbedae0b222de8724888fa4e/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09176aea40fcc440cbedae0b222de8724888fa4e/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=09176aea40fcc440cbedae0b222de8724888fa4e", "patch": "@@ -16720,7 +16720,10 @@ package body Sem_Prag is\n             Hint := First (Pragma_Argument_Associations (N));\n             while Present (Hint) loop\n                Check_Arg_Is_One_Of (Hint, Name_Ivdep,\n-                 Name_No_Unroll, Name_Unroll, Name_No_Vector, Name_Vector);\n+                                          Name_No_Unroll,\n+                                          Name_Unroll,\n+                                          Name_No_Vector,\n+                                          Name_Vector);\n                Next (Hint);\n             end loop;\n "}]}