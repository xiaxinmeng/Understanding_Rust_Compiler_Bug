{"sha": "f0e40b0a064d027278df3bc690bc5bfc4dbf8878", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjBlNDBiMGEwNjRkMDI3Mjc4ZGYzYmM2OTBiYzViZmM0ZGJmODg3OA==", "commit": {"author": {"name": "Adam Butcher", "email": "adam@jessamine.co.uk", "date": "2013-09-13T06:37:25Z"}, "committer": {"name": "Adam Butcher", "email": "abutcher@gcc.gnu.org", "date": "2013-09-13T06:37:25Z"}, "message": "Fix uninitialized variables causing breakage with -Werror.\n\n\t* lambda.c (maybe_add_lambda_conv_op): Initialize direct_argvec and call\n\tto nullptr to avoid breakage with -Werror.\n\nFrom-SVN: r202554", "tree": {"sha": "b15bb40f3518494bd206b36977d776a621ecfdd8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b15bb40f3518494bd206b36977d776a621ecfdd8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f0e40b0a064d027278df3bc690bc5bfc4dbf8878", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f0e40b0a064d027278df3bc690bc5bfc4dbf8878", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f0e40b0a064d027278df3bc690bc5bfc4dbf8878", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f0e40b0a064d027278df3bc690bc5bfc4dbf8878/comments", "author": {"login": "abutcher-gh", "id": 10379705, "node_id": "MDQ6VXNlcjEwMzc5NzA1", "avatar_url": "https://avatars.githubusercontent.com/u/10379705?v=4", "gravatar_id": "", "url": "https://api.github.com/users/abutcher-gh", "html_url": "https://github.com/abutcher-gh", "followers_url": "https://api.github.com/users/abutcher-gh/followers", "following_url": "https://api.github.com/users/abutcher-gh/following{/other_user}", "gists_url": "https://api.github.com/users/abutcher-gh/gists{/gist_id}", "starred_url": "https://api.github.com/users/abutcher-gh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/abutcher-gh/subscriptions", "organizations_url": "https://api.github.com/users/abutcher-gh/orgs", "repos_url": "https://api.github.com/users/abutcher-gh/repos", "events_url": "https://api.github.com/users/abutcher-gh/events{/privacy}", "received_events_url": "https://api.github.com/users/abutcher-gh/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "823b5d6bbc2a7495618f3e42a223be6500d27ca4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/823b5d6bbc2a7495618f3e42a223be6500d27ca4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/823b5d6bbc2a7495618f3e42a223be6500d27ca4"}], "stats": {"total": 9, "additions": 7, "deletions": 2}, "files": [{"sha": "80e0d9623dc4b8d1e919b28b35d8ee972c259a65", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0e40b0a064d027278df3bc690bc5bfc4dbf8878/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0e40b0a064d027278df3bc690bc5bfc4dbf8878/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=f0e40b0a064d027278df3bc690bc5bfc4dbf8878", "patch": "@@ -1,3 +1,8 @@\n+2013-09-13  Adam Butcher  <adam@jessamine.co.uk>\n+\n+\t* lambda.c (maybe_add_lambda_conv_op): Initialize direct_argvec and call\n+\tto nullptr to avoid breakage with -Werror.\n+\n 2013-09-12  Brooks Moses  <bmoses@google.com>\n \n \tPR driver/42955"}, {"sha": "0da22fdec6d9b88ea3e234634667becaa2af706a", "filename": "gcc/cp/lambda.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0e40b0a064d027278df3bc690bc5bfc4dbf8878/gcc%2Fcp%2Flambda.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0e40b0a064d027278df3bc690bc5bfc4dbf8878/gcc%2Fcp%2Flambda.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Flambda.c?ref=f0e40b0a064d027278df3bc690bc5bfc4dbf8878", "patch": "@@ -792,8 +792,8 @@ maybe_add_lambda_conv_op (tree type)\n      particular, parameter pack expansions are marked PACK_EXPANSION_LOCAL_P in\n      the body CALL, but not in DECLTYPE_CALL.  */\n \n-  vec<tree, va_gc> *direct_argvec;\n-  tree decltype_call = 0, call;\n+  vec<tree, va_gc> *direct_argvec = 0;\n+  tree decltype_call = 0, call = 0;\n   tree fn_result = TREE_TYPE (TREE_TYPE (callop));\n \n   if (generic_lambda_p)"}]}