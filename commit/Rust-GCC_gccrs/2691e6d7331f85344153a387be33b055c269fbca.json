{"sha": "2691e6d7331f85344153a387be33b055c269fbca", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjY5MWU2ZDczMzFmODUzNDQxNTNhMzg3YmUzM2IwNTVjMjY5ZmJjYQ==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2011-05-20T15:19:05Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2011-05-20T15:19:05Z"}, "message": "Makefile.in (LIBDEPS): Add libcommon.a.\n\n\t* Makefile.in (LIBDEPS): Add libcommon.a.\n\t(LIBS): Likewise.\n\t(GCC_OBJS): Remove diagnostic.o, pretty-print.o and input.o.\n\t(OBJS-common): Remove diagnostic.o, input.o, intl.o,\n\tpretty-print.o and version.o.\n\t(OBJS-libcommon): New.\n\t(ALL_HOST_BACKEND_OBJS): Add $(OBJS-libcommon).\n\t(BACKEND): Add libcommon.a.\n\t(MOSTLYCLEANFILES): Likewise.\n\t(libcommon.a): New.\n\t(xgcc$(exeext)): Don't explicitly use version.o and intl.o.\n\t(cpp$(exeext)): Likewise.\n\t(COLLECT2_OBJS): Remove intl.o, version.o, diagnostic.o,\n\tpretty-print.o and input.o.\n\t(lto-wrapper$(exeext)): Don't explicitly use intl.o.\n\t(lto-wrapper.o): Depend on $(DIAGNOSTIC_H).\n\t(errors.o): Remove.\n\t(mips-tfile): Don't explicitly use version.o.\n\t(mips-tdump): Likewise.\n\t(gcov.o): Depend on $(DIAGNOSTIC_H).\n\t(gcov-dump.o): Depend on intl.h and $(DIAGNOSTIC_H).\n\t(GCOV_OBJS): Remove intl.o, version.o and errors.o.\n\t(GCOV_DUMP_OBJS): Remove version.o and errors.o.\n\t* gcov-dump.c: Include intl.h and diagnostic.h.\n\t(main): Initialize diagnostics.\n\t* gcov.c: Include diagnostic.h.\n\t(fnotice): Remove.\n\t(main): Initialize diagnostics.\n\t* lto-wrapper.c: Include diagnostic.h.\n\t(main): Initialize diagnostics.\n\nada:\n\t* gcc-interface/Make-lang.in (EXTRA_GNATBIND_OBJS): Remove\n\tversion.o.\n\t* gcc-interface/Makefile.in (EXTRA_GNATTOOLS_OBJS): Use\n\tlibcommon.a instead of version.o.\n\ncp:\n\t* Make-lang.in (GXX_OBJS): Remove intl.o and version.o.\n\nfortran:\n\t* Make-lang.in (GFORTRAN_D_OBJS): Remove version.o and intl.o.\n\ngo:\n\t* Make-lang.in (GCCGO_OBJS): Remove intl.o and version.o.\n\njava:\n\t* Make-lang.in ($(XGCJ)$(exeext)): Don't explicitly use intl.o and\n\tversion.o.\n\t(JCFDUMP_OBJS): Remove errors.o, version.o and intl.o.\n\t(JVGENMAIN_OBJS): Remove errors.o and intl.o.\n\t(java/jcf-dump.o, java/jvgenmain.o): Depend in $(DIAGNOSTIC_H).\n\t* jcf-dump.c: Include diagnostic.h.\n\t(main): Initialize diagnostics.\n\t* jvgenmain.c: Include diagnostic.h.\n\t(main): Initialize diagnostics.\n\nFrom-SVN: r173958", "tree": {"sha": "fa5aead1f29326d9b2bb2587e177b39ecc6739c3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fa5aead1f29326d9b2bb2587e177b39ecc6739c3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2691e6d7331f85344153a387be33b055c269fbca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2691e6d7331f85344153a387be33b055c269fbca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2691e6d7331f85344153a387be33b055c269fbca", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2691e6d7331f85344153a387be33b055c269fbca/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "252b3e8c7814cc47e68248d556cad390a137b955", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/252b3e8c7814cc47e68248d556cad390a137b955", "html_url": "https://github.com/Rust-GCC/gccrs/commit/252b3e8c7814cc47e68248d556cad390a137b955"}], "stats": {"total": 233, "additions": 172, "deletions": 61}, "files": [{"sha": "7f8c21aa21c929d2d3fabd8e77c14fd37270ca04", "filename": "gcc/ChangeLog", "status": "modified", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2691e6d7331f85344153a387be33b055c269fbca/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2691e6d7331f85344153a387be33b055c269fbca/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2691e6d7331f85344153a387be33b055c269fbca", "patch": "@@ -1,3 +1,36 @@\n+2011-05-20  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* Makefile.in (LIBDEPS): Add libcommon.a.\n+\t(LIBS): Likewise.\n+\t(GCC_OBJS): Remove diagnostic.o, pretty-print.o and input.o.\n+\t(OBJS-common): Remove diagnostic.o, input.o, intl.o,\n+\tpretty-print.o and version.o.\n+\t(OBJS-libcommon): New.\n+\t(ALL_HOST_BACKEND_OBJS): Add $(OBJS-libcommon).\n+\t(BACKEND): Add libcommon.a.\n+\t(MOSTLYCLEANFILES): Likewise.\n+\t(libcommon.a): New.\n+\t(xgcc$(exeext)): Don't explicitly use version.o and intl.o.\n+\t(cpp$(exeext)): Likewise.\n+\t(COLLECT2_OBJS): Remove intl.o, version.o, diagnostic.o,\n+\tpretty-print.o and input.o.\n+\t(lto-wrapper$(exeext)): Don't explicitly use intl.o.\n+\t(lto-wrapper.o): Depend on $(DIAGNOSTIC_H).\n+\t(errors.o): Remove.\n+\t(mips-tfile): Don't explicitly use version.o.\n+\t(mips-tdump): Likewise.\n+\t(gcov.o): Depend on $(DIAGNOSTIC_H).\n+\t(gcov-dump.o): Depend on intl.h and $(DIAGNOSTIC_H).\n+\t(GCOV_OBJS): Remove intl.o, version.o and errors.o.\n+\t(GCOV_DUMP_OBJS): Remove version.o and errors.o.\n+\t* gcov-dump.c: Include intl.h and diagnostic.h.\n+\t(main): Initialize diagnostics.\n+\t* gcov.c: Include diagnostic.h.\n+\t(fnotice): Remove.\n+\t(main): Initialize diagnostics.\n+\t* lto-wrapper.c: Include diagnostic.h.\n+\t(main): Initialize diagnostics.\n+\n 2011-05-20  Michael Matz  <matz@suse.de>\n \n \t* Makefile.in (OBJS-common, OBJS-md, OBJS-archive): Merge into OBJS."}, {"sha": "ccb72da37ed7f3b6434ab1b44116f37ee2c08fd6", "filename": "gcc/Makefile.in", "status": "modified", "additions": 35, "deletions": 34, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2691e6d7331f85344153a387be33b055c269fbca/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2691e6d7331f85344153a387be33b055c269fbca/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=2691e6d7331f85344153a387be33b055c269fbca", "patch": "@@ -1047,16 +1047,17 @@ LIBIBERTY = ../libiberty/libiberty.a\n BUILD_LIBIBERTY = $(build_libobjdir)/libiberty/libiberty.a\n \n # Dependencies on the intl and portability libraries.\n-LIBDEPS= $(CPPLIB) $(LIBIBERTY) $(LIBINTL_DEP) $(LIBICONV_DEP) $(LIBDECNUMBER)\n+LIBDEPS= libcommon.a $(CPPLIB) $(LIBIBERTY) $(LIBINTL_DEP) $(LIBICONV_DEP) \\\n+\t$(LIBDECNUMBER)\n \n # Likewise, for use in the tools that must run on this machine\n # even if we are cross-building GCC.\n BUILD_LIBDEPS= $(BUILD_LIBIBERTY)\n \n # How to link with both our special library facilities\n # and the system's installed libraries.\n-LIBS = @LIBS@ $(CPPLIB) $(LIBINTL) $(LIBICONV) $(LIBIBERTY) $(LIBDECNUMBER) \\\n-\t$(HOST_LIBS)\n+LIBS = @LIBS@ libcommon.a $(CPPLIB) $(LIBINTL) $(LIBICONV) $(LIBIBERTY) \\\n+\t$(LIBDECNUMBER) $(HOST_LIBS)\n BACKENDLIBS = $(CLOOGLIBS) $(PPLLIBS) $(GMPLIBS) $(PLUGINLIBS) $(HOST_LIBS) \\\n \t$(ZLIB)\n # Any system libraries needed just for GNAT.\n@@ -1167,8 +1168,7 @@ CXX_TARGET_OBJS=@cxx_target_objs@\n FORTRAN_TARGET_OBJS=@fortran_target_objs@\n \n # Object files for gcc driver.\n-GCC_OBJS = gcc.o opts-common.o gcc-options.o diagnostic.o pretty-print.o \\\n-  input.o vec.o ggc-none.o\n+GCC_OBJS = gcc.o opts-common.o gcc-options.o vec.o ggc-none.o\n \n # Language-specific object files shared by all C-family front ends.\n C_COMMON_OBJS = c-family/c-common.o c-family/c-cppbuiltin.o c-family/c-dump.o \\\n@@ -1244,7 +1244,6 @@ OBJS = \\\n \tdf-problems.o \\\n \tdf-scan.o \\\n \tdfp.o \\\n-\tdiagnostic.o \\\n \tdojump.o \\\n \tdominance.o \\\n \tdomwalk.o \\\n@@ -1294,10 +1293,8 @@ OBJS = \\\n \timplicit-zee.o \\\n \tincpath.o \\\n \tinit-regs.o \\\n-\tinput.o \\\n \tintegrate.o \\\n \tinternal-fn.o \\\n-\tintl.o \\\n \tipa-cp.o \\\n \tipa-split.o \\\n \tipa-inline.o \\\n@@ -1355,7 +1352,6 @@ OBJS = \\\n \tpostreload.o \\\n \tpredict.o \\\n \tprefix.o \\\n-\tpretty-print.o \\\n \tprint-rtl.o \\\n \tprint-tree.o \\\n \tprofile.o \\\n@@ -1486,28 +1482,32 @@ OBJS = \\\n \tvarasm.o \\\n \tvarpool.o \\\n \tvec.o \\\n-\tversion.o \\\n \tvmsdbgout.o \\\n \tweb.o \\\n \txcoffout.o \\\n \t$(out_object_file) \\\n \t$(EXTRA_OBJS) \\\n \t$(host_hook_obj)\n \n+# Objects in libcommon.a, potentially used by all host binaries and with\n+# no target dependencies.\n+OBJS-libcommon = diagnostic.o pretty-print.o intl.o input.o version.o\n+\n # This lists all host objects for the front ends.\n ALL_HOST_FRONTEND_OBJS = $(C_OBJS) \\\n   $(foreach v,$(CONFIG_LANGUAGES),$($(v)_OBJS))\n \n-ALL_HOST_BACKEND_OBJS = $(GCC_OBJS) $(OBJS) \\\n-  @TREEBROWSER@ main.o gccspec.o version.o intl.o prefix.o cppspec.o \\\n+ALL_HOST_BACKEND_OBJS = $(GCC_OBJS) $(OBJS) $(OBJS-libcommon) \\\n+  @TREEBROWSER@ main.o gccspec.o prefix.o cppspec.o \\\n   $(COLLECT2_OBJS) $(EXTRA_GCC_OBJS) mips-tfile.o mips-tdump.o \\\n   $(GCOV_OBJS) $(GCOV_DUMP_OBJS)\n \n # This lists all host object files, whether they are included in this\n # compilation or not.\n ALL_HOST_OBJS = $(ALL_HOST_FRONTEND_OBJS) $(ALL_HOST_BACKEND_OBJS)\n \n-BACKEND = main.o @TREEBROWSER@ libbackend.a $(CPPLIB) $(LIBDECNUMBER)\n+BACKEND = main.o @TREEBROWSER@ libbackend.a libcommon.a $(CPPLIB) \\\n+\t$(LIBDECNUMBER)\n \n MOSTLYCLEANFILES = insn-flags.h insn-config.h insn-codes.h \\\n  insn-output.c insn-recog.c insn-emit.c insn-extract.c insn-peep.c \\\n@@ -1519,7 +1519,7 @@ MOSTLYCLEANFILES = insn-flags.h insn-config.h insn-codes.h \\\n  $(EXTRA_PARTS) $(EXTRA_PROGRAMS) gcc-cross$(exeext) \\\n  $(SPECS) collect2$(exeext) lto-wrapper$(exeext) \\\n  gcov-iov$(build_exeext) gcov$(exeext) gcov-dump$(exeext) \\\n- *.[0-9][0-9].* *.[si] *-checksum.c libbackend.a libgcc.mk\n+ *.[0-9][0-9].* *.[si] *-checksum.c libbackend.a libcommon.a libgcc.mk\n \n # Defined in libgcc2.c, included only in the static library.\n LIB2FUNCS_ST = _eprintf __gcc_bcmp\n@@ -1831,21 +1831,24 @@ libbackend.a: $(OBJS)\n \t$(AR) $(AR_FLAGS) libbackend.a $(OBJS)\n \t-$(RANLIB) $(RANLIB_FLAGS) libbackend.a\n \n+libcommon.a: $(OBJS-libcommon)\n+\t-rm -rf libcommon.a\n+\t$(AR) $(AR_FLAGS) libcommon.a $(OBJS-libcommon)\n+\t-$(RANLIB) $(RANLIB_FLAGS) libcommon.a\n+\n # We call this executable `xgcc' rather than `gcc'\n # to avoid confusion if the current directory is in the path\n # and CC is `gcc'.  It is renamed to `gcc' when it is installed.\n-xgcc$(exeext): $(GCC_OBJS) gccspec.o version.o intl.o prefix.o \\\n-   version.o $(LIBDEPS) $(EXTRA_GCC_OBJS)\n+xgcc$(exeext): $(GCC_OBJS) gccspec.o prefix.o $(LIBDEPS) $(EXTRA_GCC_OBJS)\n \t+$(LINKER) $(ALL_LINKERFLAGS) $(LDFLAGS) -o $@ $(GCC_OBJS) \\\n-\t  gccspec.o intl.o prefix.o version.o $(EXTRA_GCC_OBJS) $(LIBS)\n+\t  gccspec.o prefix.o $(EXTRA_GCC_OBJS) $(LIBS)\n \n # cpp is to cpp0 as gcc is to cc1.\n # The only difference from xgcc is that it's linked with cppspec.o\n # instead of gccspec.o.\n-cpp$(exeext): $(GCC_OBJS) cppspec.o version.o intl.o prefix.o \\\n-   version.o $(LIBDEPS) $(EXTRA_GCC_OBJS)\n+cpp$(exeext): $(GCC_OBJS) cppspec.o prefix.o $(LIBDEPS) $(EXTRA_GCC_OBJS)\n \t+$(LINKER) $(ALL_LINKERFLAGS) $(LDFLAGS) -o $@ $(GCC_OBJS) \\\n-\t  cppspec.o intl.o prefix.o version.o $(EXTRA_GCC_OBJS) $(LIBS)\n+\t  cppspec.o prefix.o $(EXTRA_GCC_OBJS) $(LIBS)\n \n # Dump a specs file to make -B./ read these specs over installed ones.\n $(SPECS): xgcc$(exeext)\n@@ -2082,8 +2085,7 @@ sbitmap.o: sbitmap.c sbitmap.h $(CONFIG_H) $(SYSTEM_H) coretypes.h $(BASIC_BLOCK\n ebitmap.o: ebitmap.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(EBITMAP_H)\n sparseset.o: sparseset.c $(SYSTEM_H) sparseset.h $(CONFIG_H)\n \n-COLLECT2_OBJS = collect2.o collect2-aix.o tlink.o intl.o version.o \\\n-  diagnostic.o pretty-print.o input.o\n+COLLECT2_OBJS = collect2.o collect2-aix.o tlink.o\n COLLECT2_LIBS = @COLLECT2_LIBS@\n collect2$(exeext): $(COLLECT2_OBJS) $(LIBDEPS)\n # Don't try modifying collect2 (aka ld) in place--it might be linking this.\n@@ -2104,12 +2106,12 @@ collect2-aix.o : collect2-aix.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n tlink.o: tlink.c $(DEMANGLE_H) $(HASHTAB_H) $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n     $(OBSTACK_H) collect2.h intl.h $(DIAGNOSTIC_CORE_H)\n \n-lto-wrapper$(exeext): lto-wrapper.o intl.o $(LIBDEPS)\n-\t+$(COMPILER) $(ALL_COMPILERFLAGS) $(LDFLAGS) -o T$@ lto-wrapper.o intl.o $(LIBS)\n+lto-wrapper$(exeext): lto-wrapper.o $(LIBDEPS)\n+\t+$(COMPILER) $(ALL_COMPILERFLAGS) $(LDFLAGS) -o T$@ lto-wrapper.o $(LIBS)\n \tmv -f T$@ $@\n \n lto-wrapper.o: lto-wrapper.c $(CONFIG_H) $(SYSTEM_H) coretypes.h intl.h \\\n-\t$(OBSTACK_H)\n+\t$(OBSTACK_H) $(DIAGNOSTIC_H)\n \n # Files used by all variants of C.\n c-family/c-common.o : c-family/c-common.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n@@ -3498,7 +3500,6 @@ params.o : params.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(PARAMS_H) \\\n pointer-set.o: pointer-set.c pointer-set.h $(CONFIG_H) $(SYSTEM_H)\n hooks.o: hooks.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(HOOKS_H)\n pretty-print.o: $(CONFIG_H) $(SYSTEM_H) coretypes.h intl.h $(PRETTY_PRINT_H)\n-errors.o : errors.c $(CONFIG_H) $(SYSTEM_H) errors.h $(BCONFIG_H)\n dbgcnt.o: dbgcnt.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(DIAGNOSTIC_CORE_H) $(DBGCNT_H) \\\n    $(TM_H) $(RTL_H) output.h\n lower-subreg.o : lower-subreg.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n@@ -3520,16 +3521,16 @@ $(out_object_file): $(out_file) $(CONFIG_H) coretypes.h $(TM_H) $(TREE_H) \\\n \t\t$(out_file) $(OUTPUT_OPTION)\n \n # Build auxiliary files that support ecoff format.\n-mips-tfile: mips-tfile.o version.o $(LIBDEPS)\n+mips-tfile: mips-tfile.o $(LIBDEPS)\n \t$(LINKER) $(LINKERFLAGS) $(LDFLAGS) -o $@ \\\n-\t\tmips-tfile.o version.o $(LIBS)\n+\t\tmips-tfile.o $(LIBS)\n \n mips-tfile.o : mips-tfile.c $(CONFIG_H) $(SYSTEM_H) \\\n    version.h $(srcdir)/../include/getopt.h $(GSTAB_H) intl.h\n \n-mips-tdump: mips-tdump.o version.o $(LIBDEPS)\n+mips-tdump: mips-tdump.o $(LIBDEPS)\n \t$(LINKER) $(LINKERFLAGS) $(LDFLAGS) -o $@ \\\n-\t\tmips-tdump.o version.o $(LIBS)\n+\t\tmips-tdump.o $(LIBS)\n \n mips-tdump.o : mips-tdump.c $(CONFIG_H) $(SYSTEM_H) \\\n    version.h $(srcdir)/../include/getopt.h stab.def\n@@ -4053,14 +4054,14 @@ s-iov: build/gcov-iov$(build_exeext) $(BASEVER) $(DEVPHASE)\n \t$(STAMP) s-iov\n \n gcov.o: gcov.c gcov-io.c $(GCOV_IO_H) intl.h $(SYSTEM_H) coretypes.h $(TM_H) \\\n-   $(CONFIG_H) version.h\n+   $(CONFIG_H) version.h $(DIAGNOSTIC_H)\n gcov-dump.o: gcov-dump.c gcov-io.c $(GCOV_IO_H) $(SYSTEM_H) coretypes.h \\\n-   $(TM_H) $(CONFIG_H) version.h\n+   $(TM_H) $(CONFIG_H) version.h intl.h $(DIAGNOSTIC_H)\n \n-GCOV_OBJS = gcov.o intl.o version.o errors.o\n+GCOV_OBJS = gcov.o\n gcov$(exeext): $(GCOV_OBJS) $(LIBDEPS)\n \t+$(LINKER) $(ALL_LINKERFLAGS) $(LDFLAGS) $(GCOV_OBJS) $(LIBS) -o $@\n-GCOV_DUMP_OBJS = gcov-dump.o version.o errors.o\n+GCOV_DUMP_OBJS = gcov-dump.o\n gcov-dump$(exeext): $(GCOV_DUMP_OBJS) $(LIBDEPS)\n \t+$(LINKER) $(ALL_LINKERFLAGS) $(LDFLAGS) $(GCOV_DUMP_OBJS) \\\n \t\t$(LIBS) -o $@"}, {"sha": "8c297ded3713adf1c8cfb7a992f229d2cfaa9eae", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2691e6d7331f85344153a387be33b055c269fbca/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2691e6d7331f85344153a387be33b055c269fbca/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=2691e6d7331f85344153a387be33b055c269fbca", "patch": "@@ -1,3 +1,10 @@\n+2011-05-20  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* gcc-interface/Make-lang.in (EXTRA_GNATBIND_OBJS): Remove\n+\tversion.o.\n+\t* gcc-interface/Makefile.in (EXTRA_GNATTOOLS_OBJS): Use\n+\tlibcommon.a instead of version.o.\n+\n 2011-05-18  Kai Tietz <ktietz@redhat.com>\n \n \t* gcc-interface/trans.c (Exception_Handler_to_gnu_sjlj): Use"}, {"sha": "14c94092915c9d5ad2361f876ff50cc774687cfc", "filename": "gcc/ada/gcc-interface/Make-lang.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2691e6d7331f85344153a387be33b055c269fbca/gcc%2Fada%2Fgcc-interface%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2691e6d7331f85344153a387be33b055c269fbca/gcc%2Fada%2Fgcc-interface%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2FMake-lang.in?ref=2691e6d7331f85344153a387be33b055c269fbca", "patch": "@@ -469,7 +469,7 @@ GNATBIND_OBJS = \\\n \n # List of extra object files linked in with various programs.\n EXTRA_GNAT1_OBJS = prefix.o\n-EXTRA_GNATBIND_OBJS = prefix.o version.o\n+EXTRA_GNATBIND_OBJS = prefix.o\n \n # Language-independent object files.\n ADA_BACKEND = $(BACKEND) attribs.o"}, {"sha": "fbcff81210ac9ae9519cef9c92f44e93773eaf9e", "filename": "gcc/ada/gcc-interface/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2691e6d7331f85344153a387be33b055c269fbca/gcc%2Fada%2Fgcc-interface%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2691e6d7331f85344153a387be33b055c269fbca/gcc%2Fada%2Fgcc-interface%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2FMakefile.in?ref=2691e6d7331f85344153a387be33b055c269fbca", "patch": "@@ -180,7 +180,7 @@ LIBINTL_DEP = @LIBINTL_DEP@\n SYSLIBS = @GNAT_LIBEXC@\n \n # List of extra object files linked in with various programs.\n-EXTRA_GNATTOOLS_OBJS = ../../prefix.o ../../version.o\n+EXTRA_GNATTOOLS_OBJS = ../../prefix.o ../../libcommon.a\n \n # List extra gnattools\n EXTRA_GNATTOOLS ="}, {"sha": "118022e4d5d26e82b859472518dcbb5e8f47a758", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2691e6d7331f85344153a387be33b055c269fbca/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2691e6d7331f85344153a387be33b055c269fbca/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=2691e6d7331f85344153a387be33b055c269fbca", "patch": "@@ -1,3 +1,7 @@\n+2011-05-20  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* Make-lang.in (GXX_OBJS): Remove intl.o and version.o.\n+\n 2011-05-19  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/49043"}, {"sha": "e343c3f16da2d75766c2a7a6ef1c3a47daa62b91", "filename": "gcc/cp/Make-lang.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2691e6d7331f85344153a387be33b055c269fbca/gcc%2Fcp%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2691e6d7331f85344153a387be33b055c269fbca/gcc%2Fcp%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FMake-lang.in?ref=2691e6d7331f85344153a387be33b055c269fbca", "patch": "@@ -60,7 +60,7 @@ g++spec.o: $(srcdir)/cp/g++spec.c $(SYSTEM_H) coretypes.h $(TM_H) $(GCC_H) \\\n \t\t$(INCLUDES) $(srcdir)/cp/g++spec.c)\n \n # Create the compiler driver for g++.\n-GXX_OBJS = $(GCC_OBJS) g++spec.o intl.o prefix.o version.o\n+GXX_OBJS = $(GCC_OBJS) g++spec.o prefix.o\n g++$(exeext): $(GXX_OBJS) $(EXTRA_GCC_OBJS) $(LIBDEPS)\n \t+$(LINKER) $(ALL_LINKERFLAGS) $(LDFLAGS) -o $@ \\\n \t  $(GXX_OBJS) $(EXTRA_GCC_OBJS) $(LIBS)"}, {"sha": "610840130eaba4ab22c92a560497bc820228ebed", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2691e6d7331f85344153a387be33b055c269fbca/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2691e6d7331f85344153a387be33b055c269fbca/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=2691e6d7331f85344153a387be33b055c269fbca", "patch": "@@ -1,3 +1,7 @@\n+2011-05-20  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* Make-lang.in (GFORTRAN_D_OBJS): Remove version.o and intl.o.\n+\n 2011-05-20  Janne Blomqvist  <jb@gcc.gnu.org>\n \n         * gfortran.texi (set_fpe): Update documentation."}, {"sha": "174a144ed7fc4296f1e2cc53017afc651687e432", "filename": "gcc/fortran/Make-lang.in", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2691e6d7331f85344153a387be33b055c269fbca/gcc%2Ffortran%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2691e6d7331f85344153a387be33b055c269fbca/gcc%2Ffortran%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FMake-lang.in?ref=2691e6d7331f85344153a387be33b055c269fbca", "patch": "@@ -1,6 +1,6 @@\n # -*- makefile -*-\n # Top level makefile fragment for GNU gfortran, the GNU Fortran 95 compiler.\n-# Copyright (C) 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010\n+# Copyright (C) 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011\n # Free Software Foundation, Inc.\n # Contributed by Paul Brook <paul@nowt.org\n # and Steven Bosscher <s.bosscher@student.tudelft.nl>\n@@ -84,7 +84,7 @@ gfortranspec.o: $(srcdir)/fortran/gfortranspec.c $(SYSTEM_H) $(TM_H) $(GCC_H) \\\n \t\t$(INCLUDES) $(srcdir)/fortran/gfortranspec.c)\n \n # Create the compiler driver gfortran.\n-GFORTRAN_D_OBJS = $(GCC_OBJS) gfortranspec.o version.o prefix.o intl.o\n+GFORTRAN_D_OBJS = $(GCC_OBJS) gfortranspec.o prefix.o\n gfortran$(exeext): $(GFORTRAN_D_OBJS) $(EXTRA_GCC_OBJS) $(LIBDEPS)\n \t+$(LINKER) $(ALL_LINKERFLAGS) $(LDFLAGS) -o $@ \\\n \t  $(GFORTRAN_D_OBJS) $(EXTRA_GCC_OBJS) $(LIBS)"}, {"sha": "200917053fbda419eae4ab926040d65d120d810c", "filename": "gcc/gcov-dump.c", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2691e6d7331f85344153a387be33b055c269fbca/gcc%2Fgcov-dump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2691e6d7331f85344153a387be33b055c269fbca/gcc%2Fgcov-dump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcov-dump.c?ref=2691e6d7331f85344153a387be33b055c269fbca", "patch": "@@ -22,6 +22,8 @@ along with Gcov; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"version.h\"\n+#include \"intl.h\"\n+#include \"diagnostic.h\"\n #include <getopt.h>\n #define IN_GCOV (-1)\n #include \"gcov-io.h\"\n@@ -76,10 +78,22 @@ int\n main (int argc ATTRIBUTE_UNUSED, char **argv)\n {\n   int opt;\n+  const char *p;\n+\n+  p = argv[0] + strlen (argv[0]);\n+  while (p != argv[0] && !IS_DIR_SEPARATOR (p[-1]))\n+    --p;\n+  progname = p;\n+\n+  xmalloc_set_program_name (progname);\n \n   /* Unlock the stdio streams.  */\n   unlock_std_streams ();\n \n+  gcc_init_libintl ();\n+\n+  diagnostic_initialize (global_dc, 0);\n+\n   while ((opt = getopt_long (argc, argv, \"hlpv\", options, NULL)) != -1)\n     {\n       switch (opt)"}, {"sha": "dcbadce4b1427539d8097816f246c4694462991d", "filename": "gcc/gcov.c", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2691e6d7331f85344153a387be33b055c269fbca/gcc%2Fgcov.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2691e6d7331f85344153a387be33b055c269fbca/gcc%2Fgcov.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcov.c?ref=2691e6d7331f85344153a387be33b055c269fbca", "patch": "@@ -37,6 +37,7 @@ along with Gcov; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"intl.h\"\n+#include \"diagnostic.h\"\n #include \"version.h\"\n \n #include <getopt.h>\n@@ -342,7 +343,6 @@ static int flag_preserve_paths = 0;\n static int flag_counts = 0;\n \n /* Forward declarations.  */\n-static void fnotice (FILE *, const char *, ...) ATTRIBUTE_PRINTF_2;\n static int process_args (int, char **);\n static void print_usage (int) ATTRIBUTE_NORETURN;\n static void print_version (void) ATTRIBUTE_NORETURN;\n@@ -369,12 +369,22 @@ main (int argc, char **argv)\n {\n   int argno;\n   int first_arg;\n+  const char *p;\n+\n+  p = argv[0] + strlen (argv[0]);\n+  while (p != argv[0] && !IS_DIR_SEPARATOR (p[-1]))\n+    --p;\n+  progname = p;\n+\n+  xmalloc_set_program_name (progname);\n \n   /* Unlock the stdio streams.  */\n   unlock_std_streams ();\n \n   gcc_init_libintl ();\n \n+  diagnostic_initialize (global_dc, 0);\n+\n   /* Handle response files.  */\n   expandargv (&argc, &argv);\n \n@@ -401,16 +411,6 @@ main (int argc, char **argv)\n \n   return 0;\n }\n-\n-static void\n-fnotice (FILE *file, const char *cmsgid, ...)\n-{\n-  va_list ap;\n-\n-  va_start (ap, cmsgid);\n-  vfprintf (file, _(cmsgid), ap);\n-  va_end (ap);\n-}\n \f\n /* Print a usage message and exit.  If ERROR_P is nonzero, this is an error,\n    otherwise the output of --help.  */"}, {"sha": "5a0d30af84b6e0680fe134edbb87daeb10eeb78a", "filename": "gcc/go/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2691e6d7331f85344153a387be33b055c269fbca/gcc%2Fgo%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2691e6d7331f85344153a387be33b055c269fbca/gcc%2Fgo%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2FChangeLog?ref=2691e6d7331f85344153a387be33b055c269fbca", "patch": "@@ -1,3 +1,7 @@\n+2011-05-20  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* Make-lang.in (GCCGO_OBJS): Remove intl.o and version.o.\n+\n 2011-05-13  Ian Lance Taylor  <iant@google.com>\n \n \t* go-gcc.cc (Gcc_backend::function_type): When building a struct"}, {"sha": "0342b32cfae920cfa1493cb412aa8569163f5b99", "filename": "gcc/go/Make-lang.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2691e6d7331f85344153a387be33b055c269fbca/gcc%2Fgo%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2691e6d7331f85344153a387be33b055c269fbca/gcc%2Fgo%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2FMake-lang.in?ref=2691e6d7331f85344153a387be33b055c269fbca", "patch": "@@ -36,7 +36,7 @@ gospec.o: $(srcdir)/go/gospec.c $(SYSTEM_H) coretypes.h $(TM_H) $(GCC_H) \\\n \t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(DRIVER_DEFINES) \\\n \t\t$(INCLUDES) $(srcdir)/go/gospec.c)\n \n-GCCGO_OBJS = $(GCC_OBJS) gospec.o intl.o prefix.o version.o\n+GCCGO_OBJS = $(GCC_OBJS) gospec.o prefix.o\n gccgo$(exeext): $(GCCGO_OBJS) $(EXTRA_GCC_OBJS) $(LIBDEPS)\n \t$(LINKER) $(ALL_LINKERFLAGS) $(LDFLAGS) -o $@ \\\n \t  $(GCCGO_OBJS) $(EXTRA_GCC_OBJS) $(LIBS)"}, {"sha": "e0d97bf12cb53c2d76cc6b889970a39fcf47cf02", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2691e6d7331f85344153a387be33b055c269fbca/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2691e6d7331f85344153a387be33b055c269fbca/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=2691e6d7331f85344153a387be33b055c269fbca", "patch": "@@ -1,3 +1,15 @@\n+2011-05-20  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* Make-lang.in ($(XGCJ)$(exeext)): Don't explicitly use intl.o and\n+\tversion.o.\n+\t(JCFDUMP_OBJS): Remove errors.o, version.o and intl.o.\n+\t(JVGENMAIN_OBJS): Remove errors.o and intl.o.\n+\t(java/jcf-dump.o, java/jvgenmain.o): Depend in $(DIAGNOSTIC_H).\n+\t* jcf-dump.c: Include diagnostic.h.\n+\t(main): Initialize diagnostics.\n+\t* jvgenmain.c: Include diagnostic.h.\n+\t(main): Initialize diagnostics.\n+\n 2011-05-11  Nathan Froyd  <froydnj@codesourcery.com>\n \n \t* java-tree.h (TYPE_ARGUMENT_SIGNATURE): Use TYPE_MINVAL."}, {"sha": "21bf93da8ca41785dda582a441e72f0090516bd2", "filename": "gcc/java/Make-lang.in", "status": "modified", "additions": 8, "deletions": 9, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2691e6d7331f85344153a387be33b055c269fbca/gcc%2Fjava%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2691e6d7331f85344153a387be33b055c269fbca/gcc%2Fjava%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FMake-lang.in?ref=2691e6d7331f85344153a387be33b055c269fbca", "patch": "@@ -1,7 +1,7 @@\n # Top level -*- makefile -*- fragment for the GNU compiler for the Java(TM)\n # language.\n #   Copyright (C) 1996, 1998, 1999, 2000, 2001, 2002, 2003, 2004,\n-#   2005, 2006, 2007, 2008, 2009, 2010 Free Software Foundation, Inc.\n+#   2005, 2006, 2007, 2008, 2009, 2010, 2011 Free Software Foundation, Inc.\n \n #This file is part of GCC.\n \n@@ -63,11 +63,10 @@ jvspec.o: $(srcdir)/java/jvspec.c $(SYSTEM_H) coretypes.h $(TM_H) \\\n \t\t$(INCLUDES) $(srcdir)/java/jvspec.c $(OUTPUT_OPTION))\n \n # Create the compiler driver for $(XGCJ).\n-$(XGCJ)$(exeext): $(GCC_OBJS) jvspec.o java/jcf-path.o version.o \\\n-\t   prefix.o intl.o $(LIBDEPS) $(EXTRA_GCC_OBJS)\n+$(XGCJ)$(exeext): $(GCC_OBJS) jvspec.o java/jcf-path.o \\\n+\t   prefix.o $(LIBDEPS) $(EXTRA_GCC_OBJS)\n \t+$(LINKER) $(ALL_LINKERFLAGS) $(LDFLAGS) -o $@ $(GCC_OBJS) \\\n-\t  jvspec.o java/jcf-path.o prefix.o intl.o \\\n-\t  version.o $(EXTRA_GCC_OBJS) $(LIBS)\n+\t  jvspec.o java/jcf-path.o prefix.o $(EXTRA_GCC_OBJS) $(LIBS)\n \n # Create a version of the $(XGCJ) driver which calls the cross-compiler.\n $(XGCJ)-cross$(exeext): $(XGCJ)$(exeext)\n@@ -86,9 +85,9 @@ JAVA_OBJS = java/class.o java/decl.o java/expr.o \\\n   java/jcf-path.o java/boehm.o java/java-gimplify.o\n \n JCFDUMP_OBJS = java/jcf-dump.o java/jcf-io.o java/jcf-depend.o java/jcf-path.o \\\n-\t\tjava/win32-host.o java/zextract.o errors.o version.o ggc-none.o intl.o\n+\t\tjava/win32-host.o java/zextract.o ggc-none.o\n \n-JVGENMAIN_OBJS = java/jvgenmain.o java/mangle_name.o errors.o intl.o\n+JVGENMAIN_OBJS = java/jvgenmain.o java/mangle_name.o\n \n java_OBJS = $(sort $(JAVA_OBJS) $(JCFDUMP_OBJS) $(JVGENMAIN_OBJS)) jvspec.o\n \n@@ -269,7 +268,7 @@ JAVA_TREE_H = $(TREE_H) $(HASHTAB_H) java/java-tree.h\n \n java/jcf-dump.o: $(CONFIG_H) $(SYSTEM_H) coretypes.h $(JAVA_TREE_H) \\\n   java/jcf-dump.c java/jcf-reader.c java/jcf.h java/javaop.h java/javaop.def \\\n-  version.h $(GGC_H) intl.h java/zipfile.h\n+  version.h $(GGC_H) intl.h java/zipfile.h $(DIAGNOSTIC_H)\n java/boehm.o: java/boehm.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n   $(TREE_H) $(JAVA_TREE_H) java/parse.h\n java/builtins.o: java/builtins.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n@@ -299,7 +298,7 @@ java/jcf-parse.o: java/jcf-parse.c $(CONFIG_H) $(JAVA_TREE_H) $(FLAGS_H) \\\n   java/parse.h $(GGC_H) debug.h $(REAL_H) gt-java-jcf-parse.h \\\n   java/jcf-reader.c java/zipfile.h java/jcf.h $(BITMAP_H)\n java/jvgenmain.o: java/jvgenmain.c $(CONFIG_H) $(JAVA_TREE_H) $(SYSTEM_H) \\\n-  coretypes.h $(TM_H) intl.h\n+  coretypes.h $(TM_H) intl.h $(DIAGNOSTIC_H)\n java/lang.o: java/lang.c $(CONFIG_H) $(JAVA_TREE_H) java/jcf.h input.h \\\n   $(SYSTEM_H) coretypes.h $(TM_H) $(DIAGNOSTIC_H) \\\n   langhooks.h $(LANGHOOKS_DEF_H) gt-java-lang.h $(OPTS_H) $(OPTIONS_H) \\"}, {"sha": "6a2714c12058ab57c5e1b4383f0a5ade4a611e3b", "filename": "gcc/java/jcf-dump.c", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2691e6d7331f85344153a387be33b055c269fbca/gcc%2Fjava%2Fjcf-dump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2691e6d7331f85344153a387be33b055c269fbca/gcc%2Fjava%2Fjcf-dump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjcf-dump.c?ref=2691e6d7331f85344153a387be33b055c269fbca", "patch": "@@ -52,6 +52,7 @@ The Free Software Foundation is independent of Sun Microsystems, Inc.  */\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"intl.h\"\n+#include \"diagnostic.h\"\n \n #include \"jcf.h\"\n #include \"tree.h\"\n@@ -1172,12 +1173,22 @@ main (int argc, char** argv)\n {\n   JCF jcf[1];\n   int argi, opt;\n+  const char *p;\n+\n+  p = argv[0] + strlen (argv[0]);\n+  while (p != argv[0] && !IS_DIR_SEPARATOR (p[-1]))\n+    --p;\n+  progname = p;\n+\n+  xmalloc_set_program_name (progname);\n \n   /* Unlock the stdio streams.  */\n   unlock_std_streams ();\n \n   gcc_init_libintl ();\n \n+  diagnostic_initialize (global_dc, 0);\n+\n   if (argc <= 1)\n     {\n       fprintf (stderr, _(\"jcf-dump: no classes specified\\n\"));"}, {"sha": "db9b05977144b3085d6a402de75845309a3389e2", "filename": "gcc/java/jvgenmain.c", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2691e6d7331f85344153a387be33b055c269fbca/gcc%2Fjava%2Fjvgenmain.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2691e6d7331f85344153a387be33b055c269fbca/gcc%2Fjava%2Fjvgenmain.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjvgenmain.c?ref=2691e6d7331f85344153a387be33b055c269fbca", "patch": "@@ -1,6 +1,6 @@\n /* Program to generate \"main\" a Java(TM) class containing a main method.\n    Copyright (C) 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006,\n-   2007, 2008, 2010 Free Software Foundation, Inc.\n+   2007, 2008, 2010, 2011 Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -32,6 +32,7 @@ The Free Software Foundation is independent of Sun Microsystems, Inc.  */\n #include \"tree.h\"\n #include \"java-tree.h\"\n #include \"intl.h\"\n+#include \"diagnostic.h\"\n #include \"tm.h\"         /* FIXME: For gcc_obstack_init from defaults.h.  */\n \n static char * do_mangle_classname (const char *string);\n@@ -59,11 +60,20 @@ main (int argc, char **argv)\n   int indirect = 0;\n   char *prog_name = argv[0];\n \n+  p = argv[0] + strlen (argv[0]);\n+  while (p != argv[0] && !IS_DIR_SEPARATOR (p[-1]))\n+    --p;\n+  progname = p;\n+\n+  xmalloc_set_program_name (progname);\n+\n   /* Unlock the stdio streams.  */\n   unlock_std_streams ();\n \n   gcc_init_libintl ();\n \n+  diagnostic_initialize (global_dc, 0);\n+\n   if (argc > 1 && ! strcmp (argv[1], \"-findirect-dispatch\"))\n     {\n       indirect = 1;"}, {"sha": "f26b3aca510c672773d04c691cdf53546aaaec1e", "filename": "gcc/lto-wrapper.c", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2691e6d7331f85344153a387be33b055c269fbca/gcc%2Flto-wrapper.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2691e6d7331f85344153a387be33b055c269fbca/gcc%2Flto-wrapper.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-wrapper.c?ref=2691e6d7331f85344153a387be33b055c269fbca", "patch": "@@ -41,6 +41,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"intl.h\"\n+#include \"diagnostic.h\"\n #include \"obstack.h\"\n \n int debug;\t\t\t\t/* true if -save-temps.  */\n@@ -627,8 +628,19 @@ run_gcc (unsigned argc, char *argv[])\n int\n main (int argc, char *argv[])\n {\n+  const char *p;\n+\n+  p = argv[0] + strlen (argv[0]);\n+  while (p != argv[0] && !IS_DIR_SEPARATOR (p[-1]))\n+    --p;\n+  progname = p;\n+\n+  xmalloc_set_program_name (progname);\n+\n   gcc_init_libintl ();\n \n+  diagnostic_initialize (global_dc, 0);\n+\n   if (signal (SIGINT, SIG_IGN) != SIG_IGN)\n     signal (SIGINT, fatal_signal);\n #ifdef SIGHUP"}]}