{"sha": "34fdd6b31e8b715b2dfb1490b7c77b4eddacc8df", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzRmZGQ2YjMxZThiNzE1YjJkZmIxNDkwYjdjNzdiNGVkZGFjYzhkZg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2013-08-18T01:06:49Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2013-08-18T01:06:49Z"}, "message": "re PR c++/58083 (ICE with lambda as default parameter of a template function)\n\n\tPR c++/58083\n\t* name-lookup.c (push_class_level_binding_1): It's OK to push a\n\tlambda type after the enclosing type is complete.\n\nFrom-SVN: r201822", "tree": {"sha": "55f2774f9a93daf2247bc5f51587bb5fb38bb0f8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/55f2774f9a93daf2247bc5f51587bb5fb38bb0f8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/34fdd6b31e8b715b2dfb1490b7c77b4eddacc8df", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/34fdd6b31e8b715b2dfb1490b7c77b4eddacc8df", "html_url": "https://github.com/Rust-GCC/gccrs/commit/34fdd6b31e8b715b2dfb1490b7c77b4eddacc8df", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/34fdd6b31e8b715b2dfb1490b7c77b4eddacc8df/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d709431600b4c790e51d838bd71f38a3acda8eba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d709431600b4c790e51d838bd71f38a3acda8eba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d709431600b4c790e51d838bd71f38a3acda8eba"}], "stats": {"total": 42, "additions": 40, "deletions": 2}, "files": [{"sha": "71dcfb8935fdf18f2c1652cc612d30ca80359bae", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34fdd6b31e8b715b2dfb1490b7c77b4eddacc8df/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34fdd6b31e8b715b2dfb1490b7c77b4eddacc8df/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=34fdd6b31e8b715b2dfb1490b7c77b4eddacc8df", "patch": "@@ -1,3 +1,9 @@\n+2013-08-17  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/58083\n+\t* name-lookup.c (push_class_level_binding_1): It's OK to push a\n+\tlambda type after the enclosing type is complete.\n+\n 2013-08-17  Gabriel Dos Reis  <gdr@integrable-solutions.net>\n \n \t* error.c (dump_scope): Add a cxx_pretty_printer parameter."}, {"sha": "cf6c7573cedceda3076617ff1ce9f5cf3d2862fd", "filename": "gcc/cp/name-lookup.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34fdd6b31e8b715b2dfb1490b7c77b4eddacc8df/gcc%2Fcp%2Fname-lookup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34fdd6b31e8b715b2dfb1490b7c77b4eddacc8df/gcc%2Fcp%2Fname-lookup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fname-lookup.c?ref=34fdd6b31e8b715b2dfb1490b7c77b4eddacc8df", "patch": "@@ -3062,8 +3062,10 @@ push_class_level_binding_1 (tree name, tree x)\n   if (name == error_mark_node)\n     return false;\n \n-  /* Check for invalid member names.  */\n-  gcc_assert (TYPE_BEING_DEFINED (current_class_type));\n+  /* Check for invalid member names.  But don't worry about a default\n+     argument-scope lambda being pushed after the class is complete.  */\n+  gcc_assert (TYPE_BEING_DEFINED (current_class_type)\n+\t      || LAMBDA_TYPE_P (TREE_TYPE (decl)));\n   /* Check that we're pushing into the right binding level.  */\n   gcc_assert (current_class_type == class_binding_level->this_entity);\n "}, {"sha": "d85918dd07bee1582d562f682835d93adde53f11", "filename": "gcc/testsuite/g++.dg/cpp0x/lambda/lambda-defarg5.C", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34fdd6b31e8b715b2dfb1490b7c77b4eddacc8df/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-defarg5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34fdd6b31e8b715b2dfb1490b7c77b4eddacc8df/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-defarg5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-defarg5.C?ref=34fdd6b31e8b715b2dfb1490b7c77b4eddacc8df", "patch": "@@ -0,0 +1,30 @@\n+// PR c++/58083\n+// { dg-do compile { target c++11 } }\n+\n+namespace details {\n+struct iterator_concept_checker\n+{\n+    typedef char yes_type;\n+    typedef char (&no_type)[2];\n+\n+    template <typename T>\n+    static no_type test(...);\n+\n+    template <typename T>\n+    static yes_type test(\n+        int*\n+\t, void (*)(T) = [](T it)\n+        {\n+            auto copy = T{it};                              // copy constructible\n+            copy = it;                                      // copy assignable\n+            copy.~T();                                      // destroyable\n+            ++it;                                           // incrementable\n+        }\n+      );\n+};\n+}\n+\n+int main()\n+{\n+  details::iterator_concept_checker::test<int>(0);\n+}"}]}