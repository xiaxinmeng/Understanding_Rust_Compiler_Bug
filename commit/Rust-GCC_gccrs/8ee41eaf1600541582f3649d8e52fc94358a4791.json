{"sha": "8ee41eaf1600541582f3649d8e52fc94358a4791", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGVlNDFlYWYxNjAwNTQxNTgyZjM2NDlkOGU1MmZjOTQzNThhNDc5MQ==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2002-05-14T07:43:37Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2002-05-14T07:43:37Z"}, "message": "i386.md: Use define_constants for unspec numbers.\n\n        * config/i386/i386.md: Use define_constants for unspec numbers.\n        * config/i386/i386.c: Likewise.\n\nFrom-SVN: r53448", "tree": {"sha": "c567a6de245b787b9b0a91b99deae66c1fab2d14", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c567a6de245b787b9b0a91b99deae66c1fab2d14"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8ee41eaf1600541582f3649d8e52fc94358a4791", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ee41eaf1600541582f3649d8e52fc94358a4791", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8ee41eaf1600541582f3649d8e52fc94358a4791", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ee41eaf1600541582f3649d8e52fc94358a4791/comments", "author": null, "committer": null, "parents": [{"sha": "3b7dcffac9cb6a86195628f7e50d400b46c6aab3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b7dcffac9cb6a86195628f7e50d400b46c6aab3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3b7dcffac9cb6a86195628f7e50d400b46c6aab3"}], "stats": {"total": 452, "additions": 259, "deletions": 193}, "files": [{"sha": "d4eb4fd29c382ba6f362431bd6447e3dc3946b12", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ee41eaf1600541582f3649d8e52fc94358a4791/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ee41eaf1600541582f3649d8e52fc94358a4791/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8ee41eaf1600541582f3649d8e52fc94358a4791", "patch": "@@ -1,3 +1,8 @@\n+2002-05-14  Richard Henderson  <rth@redhat.com>\n+\n+\t* config/i386/i386.md: Use define_constants for unspec numbers.\n+\t* config/i386/i386.c: Likewise.\n+\n 2002-05-13  Mark Mitchell  <mark@codesourcery.com>\n \n \t* fixinc/inclhack.def (winidss_valist): Limit applicability."}, {"sha": "245ed77b4acbef0e6d34e9e6c46705771930105e", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 28, "deletions": 32, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ee41eaf1600541582f3649d8e52fc94358a4791/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ee41eaf1600541582f3649d8e52fc94358a4791/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=8ee41eaf1600541582f3649d8e52fc94358a4791", "patch": "@@ -2885,9 +2885,9 @@ symbolic_operand (op, mode)\n       if (GET_CODE (op) == SYMBOL_REF\n \t  || GET_CODE (op) == LABEL_REF\n \t  || (GET_CODE (op) == UNSPEC\n-\t      && (XINT (op, 1) == 6\n-\t\t  || XINT (op, 1) == 7\n-\t\t  || XINT (op, 1) == 15)))\n+\t      && (XINT (op, 1) == UNSPEC_GOT\n+\t\t  || XINT (op, 1) == UNSPEC_GOTOFF\n+\t\t  || XINT (op, 1) == UNSPEC_GOTPCREL)))\n \treturn 1;\n       if (GET_CODE (op) != PLUS\n \t  || GET_CODE (XEXP (op, 1)) != CONST_INT)\n@@ -2899,7 +2899,7 @@ symbolic_operand (op, mode)\n \treturn 1;\n       /* Only @GOTOFF gets offsets.  */\n       if (GET_CODE (op) != UNSPEC\n-\t  || XINT (op, 1) != 7)\n+\t  || XINT (op, 1) != UNSPEC_GOTOFF)\n \treturn 0;\n \n       op = XVECEXP (op, 0, 0);\n@@ -3649,8 +3649,7 @@ x86_64_sign_extended_value (value)\n          cases.  */\n       case CONST:\n \tif (GET_CODE (XEXP (value, 0)) == UNSPEC\n-\t    && XVECLEN (XEXP (value, 0), 0) == 1\n-\t    && XINT (XEXP (value, 0), 1) ==  15)\n+\t    && XINT (XEXP (value, 0), 1) == UNSPEC_GOTPCREL)\n \t  return 1;\n \telse if (GET_CODE (XEXP (value, 0)) == PLUS)\n \t  {\n@@ -4629,8 +4628,7 @@ ix86_find_base_term (x)\n \t      || GET_CODE (XEXP (term, 1)) == CONST_DOUBLE))\n \tterm = XEXP (term, 0);\n       if (GET_CODE (term) != UNSPEC\n-\t  || XVECLEN (term, 0) != 1\n-\t  || XINT (term, 1) !=  15)\n+\t  || XINT (term, 1) != UNSPEC_GOTPCREL)\n \treturn x;\n \n       term = XVECEXP (term, 0, 0);\n@@ -4653,8 +4651,7 @@ ix86_find_base_term (x)\n     term = XEXP (term, 0);\n \n   if (GET_CODE (term) != UNSPEC\n-      || XVECLEN (term, 0) != 1\n-      || XINT (term, 1) !=  7)\n+      || XINT (term, 1) != UNSPEC_GOTOFF)\n     return x;\n \n   term = XVECEXP (term, 0, 0);\n@@ -4699,8 +4696,7 @@ legitimate_pic_address_disp_p (disp)\n       /* We are unsafe to allow PLUS expressions.  This limit allowed distance\n          of GOT tables.  We should not need these anyway.  */\n       if (GET_CODE (disp) != UNSPEC\n-\t  || XVECLEN (disp, 0) != 1\n-\t  || XINT (disp, 1) != 15)\n+\t  || XINT (disp, 1) != UNSPEC_GOTPCREL)\n \treturn 0;\n \n       if (GET_CODE (XVECEXP (disp, 0, 0)) != SYMBOL_REF\n@@ -4716,17 +4712,15 @@ legitimate_pic_address_disp_p (disp)\n       disp = XEXP (disp, 0);\n     }\n \n-  if (GET_CODE (disp) != UNSPEC\n-      || XVECLEN (disp, 0) != 1)\n+  if (GET_CODE (disp) != UNSPEC)\n     return 0;\n \n   /* Must be @GOT or @GOTOFF.  */\n   switch (XINT (disp, 1))\n     {\n-    case 6: /* @GOT */\n+    case UNSPEC_GOT:\n       return GET_CODE (XVECEXP (disp, 0, 0)) == SYMBOL_REF;\n-\n-    case 7: /* @GOTOFF */\n+    case UNSPEC_GOTOFF:\n       return local_symbolic_operand (XVECEXP (disp, 0, 0), Pmode);\n     }\n     \n@@ -4998,7 +4992,7 @@ legitimize_pic_address (orig, reg)\n \t     base address (@GOTOFF).  */\n \n \t  current_function_uses_pic_offset_table = 1;\n-\t  new = gen_rtx_UNSPEC (Pmode, gen_rtvec (1, addr), 7);\n+\t  new = gen_rtx_UNSPEC (Pmode, gen_rtvec (1, addr), UNSPEC_GOTOFF);\n \t  new = gen_rtx_CONST (Pmode, new);\n \t  new = gen_rtx_PLUS (Pmode, pic_offset_table_rtx, new);\n \n@@ -5014,7 +5008,7 @@ legitimize_pic_address (orig, reg)\n       if (TARGET_64BIT)\n \t{\n \t  current_function_uses_pic_offset_table = 1;\n-\t  new = gen_rtx_UNSPEC (Pmode, gen_rtvec (1, addr), 15);\n+\t  new = gen_rtx_UNSPEC (Pmode, gen_rtvec (1, addr), UNSPEC_GOTPCREL);\n \t  new = gen_rtx_CONST (Pmode, new);\n \t  new = gen_rtx_MEM (Pmode, new);\n \t  RTX_UNCHANGING_P (new) = 1;\n@@ -5034,7 +5028,7 @@ legitimize_pic_address (orig, reg)\n \t     Global Offset Table (@GOT).  */\n \n \t  current_function_uses_pic_offset_table = 1;\n-\t  new = gen_rtx_UNSPEC (Pmode, gen_rtvec (1, addr), 6);\n+\t  new = gen_rtx_UNSPEC (Pmode, gen_rtvec (1, addr), UNSPEC_GOT);\n \t  new = gen_rtx_CONST (Pmode, new);\n \t  new = gen_rtx_PLUS (Pmode, pic_offset_table_rtx, new);\n \t  new = gen_rtx_MEM (Pmode, new);\n@@ -5075,7 +5069,8 @@ legitimize_pic_address (orig, reg)\n \t      if (!TARGET_64BIT)\n \t\t{\n \t\t  current_function_uses_pic_offset_table = 1;\n-\t\t  new = gen_rtx_UNSPEC (Pmode, gen_rtvec (1, op0), 7);\n+\t\t  new = gen_rtx_UNSPEC (Pmode, gen_rtvec (1, op0),\n+\t\t\t\t\tUNSPEC_GOTOFF);\n \t\t  new = gen_rtx_PLUS (Pmode, new, op1);\n \t\t  new = gen_rtx_CONST (Pmode, new);\n \t\t  new = gen_rtx_PLUS (Pmode, pic_offset_table_rtx, new);\n@@ -5394,16 +5389,16 @@ output_pic_addr_const (file, x, code)\n        output_pic_addr_const (file, XVECEXP (x, 0, 0), code);\n        switch (XINT (x, 1))\n \t{\n-\tcase 6:\n+\tcase UNSPEC_GOT:\n \t  fputs (\"@GOT\", file);\n \t  break;\n-\tcase 7:\n+\tcase UNSPEC_GOTOFF:\n \t  fputs (\"@GOTOFF\", file);\n \t  break;\n-\tcase 8:\n+\tcase UNSPEC_PLT:\n \t  fputs (\"@PLT\", file);\n \t  break;\n-\tcase 15:\n+\tcase UNSPEC_GOTPCREL:\n \t  fputs (\"@GOTPCREL(%RIP)\", file);\n \t  break;\n \tdefault:\n@@ -5456,7 +5451,7 @@ i386_simplify_dwarf_addr (orig_x)\n     {\n       if (GET_CODE (x) != CONST\n \t  || GET_CODE (XEXP (x, 0)) != UNSPEC\n-\t  || XINT (XEXP (x, 0), 1) != 15\n+\t  || XINT (XEXP (x, 0), 1) != UNSPEC_GOTPCREL\n \t  || GET_CODE (orig_x) != MEM)\n \treturn orig_x;\n       return XVECEXP (XEXP (x, 0), 0, 0);\n@@ -5492,8 +5487,8 @@ i386_simplify_dwarf_addr (orig_x)\n \n   x = XEXP (XEXP (x, 1), 0);\n   if (GET_CODE (x) == UNSPEC\n-      && ((XINT (x, 1) == 6 && GET_CODE (orig_x) == MEM)\n-\t  || (XINT (x, 1) == 7 && GET_CODE (orig_x) != MEM)))\n+      && ((XINT (x, 1) == UNSPEC_GOT && GET_CODE (orig_x) == MEM)\n+\t  || (XINT (x, 1) == UNSPEC_GOTOFF && GET_CODE (orig_x) != MEM)))\n     {\n       if (y)\n \treturn gen_rtx_PLUS (Pmode, y, XVECEXP (x, 0, 0));\n@@ -5503,8 +5498,9 @@ i386_simplify_dwarf_addr (orig_x)\n   if (GET_CODE (x) == PLUS\n       && GET_CODE (XEXP (x, 0)) == UNSPEC\n       && GET_CODE (XEXP (x, 1)) == CONST_INT\n-      && ((XINT (XEXP (x, 0), 1) == 6 && GET_CODE (orig_x) == MEM)\n-\t  || (XINT (XEXP (x, 0), 1) == 7 && GET_CODE (orig_x) != MEM)))\n+      && ((XINT (XEXP (x, 0), 1) == UNSPEC_GOT && GET_CODE (orig_x) == MEM)\n+\t  || (XINT (XEXP (x, 0), 1) == UNSPEC_GOTOFF\n+\t      && GET_CODE (orig_x) != MEM)))\n     {\n       x = gen_rtx_PLUS (VOIDmode, XVECEXP (XEXP (x, 0), 0, 0), XEXP (x, 1));\n       if (y)\n@@ -7492,7 +7488,7 @@ ix86_expand_fp_compare (code, op0, op1, scratch, second_test, bypass_test)\n       else\n \t{\n \t  tmp = gen_rtx_COMPARE (fpcmp_mode, op0, op1);\n-\t  tmp2 = gen_rtx_UNSPEC (HImode, gen_rtvec (1, tmp), 9);\n+\t  tmp2 = gen_rtx_UNSPEC (HImode, gen_rtvec (1, tmp), UNSPEC_FNSTSW);\n \t  if (!scratch)\n \t    scratch = gen_reg_rtx (HImode);\n \t  emit_insn (gen_rtx_SET (VOIDmode, scratch, tmp2));\n@@ -7515,7 +7511,7 @@ ix86_expand_fp_compare (code, op0, op1, scratch, second_test, bypass_test)\n     {\n       /* Sadness wrt reg-stack pops killing fpsr -- gotta get fnstsw first.  */\n       tmp = gen_rtx_COMPARE (fpcmp_mode, op0, op1);\n-      tmp2 = gen_rtx_UNSPEC (HImode, gen_rtvec (1, tmp), 9);\n+      tmp2 = gen_rtx_UNSPEC (HImode, gen_rtvec (1, tmp), UNSPEC_FNSTSW);\n       if (!scratch)\n \tscratch = gen_reg_rtx (HImode);\n       emit_insn (gen_rtx_SET (VOIDmode, scratch, tmp2));"}, {"sha": "ba9385531053b211afaa4ad56836f7227bebc1a0", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 226, "deletions": 161, "changes": 387, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ee41eaf1600541582f3649d8e52fc94358a4791/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ee41eaf1600541582f3649d8e52fc94358a4791/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=8ee41eaf1600541582f3649d8e52fc94358a4791", "patch": "@@ -49,62 +49,63 @@\n ;; 'k' Likewise, print the SImode name of the register.\n ;; 'h' Print the QImode name for a \"high\" register, either ah, bh, ch or dh.\n ;; 'y' Print \"st(0)\" instead of \"st\" as a register.\n-;;\n+\n ;; UNSPEC usage:\n-;; 0  This is a `scas' operation.  The mode of the UNSPEC is always SImode.\n-;;    operand 0 is the memory address to scan.\n-;;    operand 1 is a register containing the value to scan for.  The mode\n-;;       of the scas opcode will be the same as the mode of this operand.\n-;;    operand 2 is the known alignment of operand 0.\n-;; 1  This is a `sin' operation.  The mode of the UNSPEC is MODE_FLOAT.\n-;;    operand 0 is the argument for `sin'.\n-;; 2  This is a `cos' operation.  The mode of the UNSPEC is MODE_FLOAT.\n-;;    operand 0 is the argument for `cos'.\n-;; 3  This is part of a `stack probe' operation.  The mode of the UNSPEC is \n-;;    always SImode.  operand 0 is the size of the stack allocation.\n-;; 4  This is the source of a fake SET of the frame pointer which is used to\n-;;    prevent insns referencing it being scheduled across the initial\n-;;    decrement of the stack pointer.\n-;; 5  This is a `bsf' operation.\n-;; 6  This is the @GOT offset of a PIC address.\n-;; 7  This is the @GOTOFF offset of a PIC address.\n-;; 8  This is a reference to a symbol's @PLT address.\n-;; 9  This is an `fnstsw' operation.\n-;; 10 This is a `sahf' operation.\n-;; 11 This is a `fstcw' operation\n-;; 12 This is behaviour of add when setting carry flag.\n-;; 13 This is a `eh_return' placeholder.\n-\n-;; For SSE/MMX support:\n-;; 30 This is `fix', guaranteed to be truncating.\n-;; 31 This is a `emms' operation.\n-;; 32 This is a `maskmov' operation.\n-;; 33 This is a `movmsk' operation.\n-;; 34 This is a `non-temporal' move.\n-;; 36 This is used to distinguish COMISS from UCOMISS.\n-;; 37 This is a `ldmxcsr' operation.\n-;; 38 This is a forced `movaps' instruction (rather than whatever movti does)\n-;; 39 This is a forced `movups' instruction (rather than whatever movti does)\n-;; 40 This is a `stmxcsr' operation.\n-;; 41 This is a `shuffle' operation.\n-;; 42 This is a `rcp' operation.\n-;; 43 This is a `rsqsrt' operation.\n-;; 44 This is a `sfence' operation.\n-;; 45 This is a noop to prevent excessive combiner cleverness.\n-;; 46 This is a `femms' operation.\n-;; 49 This is a 'pavgusb' operation.\n-;; 50 This is a `pfrcp' operation.\n-;; 51 This is a `pfrcpit1' operation.\n-;; 52 This is a `pfrcpit2' operation.\n-;; 53 This is a `pfrsqrt' operation.\n-;; 54 This is a `pfrsqrit1' operation.\n-;; 55 This is a `pshuflw' operation.\n-;; 56 This is a `pshufhw' operation.\n-;; 57 This is a `clflush' operation.\n-;; 58 This is a `sfence' operation.\n-;; 59 This is a `mfence' operation.\n-;; 60 This is a `lfence' operation.\n-;; 61 This is a `psadbw' operation.\n+\n+(define_constants\n+  [(UNSPEC_SCAS\t\t\t0)\n+   (UNSPEC_SIN\t\t\t1)\n+   (UNSPEC_COS\t\t\t2)\n+   (UNSPEC_STACK_PROBE\t\t3)\n+   (UNSPEC_STACK_ALLOC\t\t4)\n+   (UNSPEC_BSF\t\t\t5)\n+   (UNSPEC_GOT\t\t\t6)\n+   (UNSPEC_GOTOFF\t\t7)\n+   (UNSPEC_PLT\t\t\t8)\n+   (UNSPEC_FNSTSW\t\t9)\n+   (UNSPEC_SAHF\t\t\t10)\n+   (UNSPEC_FSTCW\t\t11)\n+   (UNSPEC_ADD_CARRY\t\t12)\n+   (UNSPEC_SSE_PROLOGUE_SAVE\t13)\n+   (UNSPEC_FLDCW\t\t14)\n+   (UNSPEC_GOTPCREL\t\t15)\n+\n+   ; For SSE/MMX support:\n+   (UNSPEC_FIX\t\t\t30)\n+   (UNSPEC_MASKMOV\t\t32)\n+   (UNSPEC_MOVMSK\t\t33)\n+   (UNSPEC_MOVNT\t\t34)\n+   (UNSPEC_MOVA\t\t\t38)\n+   (UNSPEC_MOVU\t\t\t39)\n+   (UNSPEC_SHUFFLE\t\t41)\n+   (UNSPEC_RCP\t\t\t42)\n+   (UNSPEC_RSQRT\t\t43)\n+   (UNSPEC_SFENCE\t\t44)\n+   (UNSPEC_NOP\t\t\t45)\t; prevents combiner cleverness\n+   (UNSPEC_PAVGUSB\t\t49)\n+   (UNSPEC_PFRCP\t\t50)\n+   (UNSPEC_PFRCPIT1\t\t51)\n+   (UNSPEC_PFRCPIT2\t\t52)\n+   (UNSPEC_PFRSQRT\t\t53)\n+   (UNSPEC_PFRSQIT1\t\t54)\n+   (UNSPEC_PSHUFLW\t\t55)\n+   (UNSPEC_PSHUFHW\t\t56)\n+   (UNSPEC_MFENCE\t\t59)\n+   (UNSPEC_LFENCE\t\t60)\n+   (UNSPEC_PSADBW\t\t61)\n+  ])\n+\n+(define_constants\n+  [(UNSPECV_BLOCKAGE\t\t0)\n+   (UNSPECV_PROLOGUE_SET_GOT\t1)\n+   (UNSPECV_PROLOGUE_GET_PC\t2)\n+   (UNSPECV_EH_RETURN\t\t13)\n+   (UNSPECV_EMMS\t\t31)\n+   (UNSPECV_LDMXCSR\t\t37)\n+   (UNSPECV_STMXCSR\t\t40)\n+   (UNSPECV_FEMMS\t\t46)\n+   (UNSPECV_CLFLUSH\t\t57)\n+  ])\n \n ;; Insns whose names begin with \"x86_\" are emitted by gen_FOO calls\n ;; from i386.c.\n@@ -722,7 +723,8 @@\n   [(set (match_operand:HI 0 \"register_operand\" \"=a\")\n \t(unspec:HI\n \t  [(compare:CCFP (match_operand 1 \"register_operand\" \"f\")\n-\t\t         (match_operand 2 \"const0_operand\" \"X\"))] 9))]\n+\t\t         (match_operand 2 \"const0_operand\" \"X\"))]\n+\t  UNSPEC_FNSTSW))]\n   \"TARGET_80387\n    && FLOAT_MODE_P (GET_MODE (operands[1]))\n    && GET_MODE (operands[1]) == GET_MODE (operands[2])\"\n@@ -753,7 +755,8 @@\n \t(unspec:HI\n \t  [(compare:CCFP\n \t     (match_operand:SF 1 \"register_operand\" \"f\")\n-\t     (match_operand:SF 2 \"nonimmediate_operand\" \"fm\"))] 9))]\n+\t     (match_operand:SF 2 \"nonimmediate_operand\" \"fm\"))]\n+\t  UNSPEC_FNSTSW))]\n   \"TARGET_80387\"\n   \"* return output_fp_compare (insn, operands, 2, 0);\"\n   [(set_attr \"type\" \"fcmp\")\n@@ -774,7 +777,8 @@\n \t(unspec:HI\n \t  [(compare:CCFP\n \t     (match_operand:DF 1 \"register_operand\" \"f\")\n-\t     (match_operand:DF 2 \"nonimmediate_operand\" \"fm\"))] 9))]\n+\t     (match_operand:DF 2 \"nonimmediate_operand\" \"fm\"))]\n+\t  UNSPEC_FNSTSW))]\n   \"TARGET_80387\"\n   \"* return output_fp_compare (insn, operands, 2, 0);\"\n   [(set_attr \"type\" \"multi\")\n@@ -805,7 +809,8 @@\n \t(unspec:HI\n \t  [(compare:CCFP\n \t     (match_operand:XF 1 \"register_operand\" \"f\")\n-\t     (match_operand:XF 2 \"register_operand\" \"f\"))] 9))]\n+\t     (match_operand:XF 2 \"register_operand\" \"f\"))]\n+\t  UNSPEC_FNSTSW))]\n   \"!TARGET_64BIT && TARGET_80387\"\n   \"* return output_fp_compare (insn, operands, 2, 0);\"\n   [(set_attr \"type\" \"multi\")\n@@ -816,7 +821,8 @@\n \t(unspec:HI\n \t  [(compare:CCFP\n \t     (match_operand:TF 1 \"register_operand\" \"f\")\n-\t     (match_operand:TF 2 \"register_operand\" \"f\"))] 9))]\n+\t     (match_operand:TF 2 \"register_operand\" \"f\"))]\n+\t  UNSPEC_FNSTSW))]\n   \"TARGET_80387\"\n   \"* return output_fp_compare (insn, operands, 2, 0);\"\n   [(set_attr \"type\" \"multi\")\n@@ -839,7 +845,8 @@\n \t(unspec:HI\n \t  [(compare:CCFPU\n \t     (match_operand 1 \"register_operand\" \"f\")\n-\t     (match_operand 2 \"register_operand\" \"f\"))] 9))]\n+\t     (match_operand 2 \"register_operand\" \"f\"))]\n+\t  UNSPEC_FNSTSW))]\n   \"TARGET_80387\n    && FLOAT_MODE_P (GET_MODE (operands[1]))\n    && GET_MODE (operands[1]) == GET_MODE (operands[2])\"\n@@ -887,7 +894,7 @@\n \n (define_insn \"x86_fnstsw_1\"\n   [(set (match_operand:HI 0 \"register_operand\" \"=a\")\n-\t(unspec:HI [(reg 18)] 9))]\n+\t(unspec:HI [(reg 18)] UNSPEC_FNSTSW))]\n   \"TARGET_80387\"\n   \"fnstsw\\t%0\"\n   [(set_attr \"length\" \"2\")\n@@ -900,7 +907,7 @@\n \n (define_insn \"x86_sahf_1\"\n   [(set (reg:CC 17)\n-\t(unspec:CC [(match_operand:HI 0 \"register_operand\" \"a\")] 10))]\n+\t(unspec:CC [(match_operand:HI 0 \"register_operand\" \"a\")] UNSPEC_SAHF))]\n   \"!TARGET_64BIT\"\n   \"sahf\"\n   [(set_attr \"length\" \"1\")\n@@ -4395,7 +4402,7 @@\n ;; %% Not used yet.\n (define_insn \"x86_fnstcw_1\"\n   [(set (match_operand:HI 0 \"memory_operand\" \"=m\")\n-\t(unspec:HI [(reg:HI 18)] 11))]\n+\t(unspec:HI [(reg:HI 18)] UNSPEC_FSTCW))]\n   \"TARGET_80387\"\n   \"fnstcw\\t%0\"\n   [(set_attr \"length\" \"2\")\n@@ -4405,7 +4412,7 @@\n \n (define_insn \"x86_fldcw_1\"\n   [(set (reg:HI 18)\n-\t(unspec:HI [(match_operand:HI 0 \"memory_operand\" \"m\")] 12))]\n+\t(unspec:HI [(match_operand:HI 0 \"memory_operand\" \"m\")] UNSPEC_FLDCW))]\n   \"TARGET_80387\"\n   \"fldcw\\t%0\"\n   [(set_attr \"length\" \"2\")\n@@ -4681,7 +4688,8 @@\n \t\t (match_operand:DI 2 \"general_operand\" \"\")))\n    (clobber (reg:CC 17))]\n   \"!TARGET_64BIT && reload_completed\"\n-  [(parallel [(set (reg:CC 17) (unspec:CC [(match_dup 1) (match_dup 2)] 12))\n+  [(parallel [(set (reg:CC 17) (unspec:CC [(match_dup 1) (match_dup 2)]\n+\t\t\t\t\t  UNSPEC_ADD_CARRY))\n \t      (set (match_dup 0) (plus:SI (match_dup 1) (match_dup 2)))])\n    (parallel [(set (match_dup 3)\n \t\t   (plus:SI (plus:SI (ltu:SI (reg:CC 17) (const_int 0))\n@@ -4706,8 +4714,10 @@\n    (set_attr \"ppro_uops\" \"few\")])\n \n (define_insn \"*adddi3_cc_rex64\"\n-  [(set (reg:CC 17) (unspec:CC [(match_operand:DI 1 \"nonimmediate_operand\" \"%0,0\")\n-\t\t\t\t(match_operand:DI 2 \"x86_64_general_operand\" \"re,rm\")] 12))\n+  [(set (reg:CC 17)\n+\t(unspec:CC [(match_operand:DI 1 \"nonimmediate_operand\" \"%0,0\")\n+\t\t    (match_operand:DI 2 \"x86_64_general_operand\" \"re,rm\")]\n+\t\t   UNSPEC_ADD_CARRY))\n    (set (match_operand:DI 0 \"nonimmediate_operand\" \"=rm,r\")\n \t(plus:DI (match_dup 1) (match_dup 2)))]\n   \"TARGET_64BIT && ix86_binary_operator_ok (PLUS, DImode, operands)\"\n@@ -4743,8 +4753,10 @@\n    (set_attr \"ppro_uops\" \"few\")])\n \n (define_insn \"*addsi3_cc\"\n-  [(set (reg:CC 17) (unspec:CC [(match_operand:SI 1 \"nonimmediate_operand\" \"%0,0\")\n-\t\t\t        (match_operand:SI 2 \"general_operand\" \"ri,rm\")] 12))\n+  [(set (reg:CC 17)\n+\t(unspec:CC [(match_operand:SI 1 \"nonimmediate_operand\" \"%0,0\")\n+\t\t    (match_operand:SI 2 \"general_operand\" \"ri,rm\")]\n+\t\t   UNSPEC_ADD_CARRY))\n    (set (match_operand:SI 0 \"nonimmediate_operand\" \"=rm,r\")\n \t(plus:SI (match_dup 1) (match_dup 2)))]\n   \"ix86_binary_operator_ok (PLUS, SImode, operands)\"\n@@ -4753,8 +4765,10 @@\n    (set_attr \"mode\" \"SI\")])\n \n (define_insn \"addqi3_cc\"\n-  [(set (reg:CC 17) (unspec:CC [(match_operand:QI 1 \"nonimmediate_operand\" \"%0,0\")\n-\t\t\t        (match_operand:QI 2 \"general_operand\" \"qi,qm\")] 12))\n+  [(set (reg:CC 17)\n+\t(unspec:CC [(match_operand:QI 1 \"nonimmediate_operand\" \"%0,0\")\n+\t\t    (match_operand:QI 2 \"general_operand\" \"qi,qm\")]\n+\t\t   UNSPEC_ADD_CARRY))\n    (set (match_operand:QI 0 \"nonimmediate_operand\" \"=qm,q\")\n \t(plus:QI (match_dup 1) (match_dup 2)))]\n   \"ix86_binary_operator_ok (PLUS, QImode, operands)\"\n@@ -13124,7 +13138,7 @@\n ;; all of memory.  This blocks insns from being moved across this point.\n \n (define_insn \"blockage\"\n-  [(unspec_volatile [(const_int 0)] 0)]\n+  [(unspec_volatile [(const_int 0)] UNSPECV_BLOCKAGE)]\n   \"\"\n   \"\"\n   [(set_attr \"length\" \"0\")])\n@@ -13189,7 +13203,8 @@\n \t(unspec_volatile:SI\n \t [(plus:SI (match_dup 0)\n \t\t   (plus:SI (match_operand:SI 1 \"symbolic_operand\" \"\")\n-\t\t\t    (minus:SI (pc) (match_operand 2 \"\" \"\"))))] 1))\n+\t\t\t    (minus:SI (pc) (match_operand 2 \"\" \"\"))))]\n+\t UNSPECV_PROLOGUE_SET_GOT))\n    (clobber (reg:CC 17))]\n   \"!TARGET_64BIT\"\n {\n@@ -13208,7 +13223,8 @@\n \n (define_insn \"prologue_get_pc\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n-    (unspec_volatile:SI [(plus:SI (pc) (match_operand 1 \"\" \"\"))] 2))]\n+    (unspec_volatile:SI [(plus:SI (pc) (match_operand 1 \"\" \"\"))]\n+\t\t\tUNSPECV_PROLOGUE_GET_PC))]\n   \"!TARGET_64BIT\"\n {\n   if (GET_CODE (operands[1]) == LABEL_REF)\n@@ -13257,15 +13273,17 @@\n })\n \n (define_insn_and_split \"eh_return_si\"\n-  [(unspec_volatile [(match_operand:SI 0 \"register_operand\" \"c\")] 13)]\n+  [(unspec_volatile [(match_operand:SI 0 \"register_operand\" \"c\")]\n+\t\t    UNSPECV_EH_RETURN)]\n   \"!TARGET_64BIT\"\n   \"#\"\n   \"reload_completed\"\n   [(const_int 1)]\n   \"ix86_expand_epilogue (2); DONE;\")\n \n (define_insn_and_split \"eh_return_di\"\n-  [(unspec_volatile [(match_operand:DI 0 \"register_operand\" \"c\")] 13)]\n+  [(unspec_volatile [(match_operand:DI 0 \"register_operand\" \"c\")]\n+\t\t    UNSPECV_EH_RETURN)]\n   \"TARGET_64BIT\"\n   \"#\"\n   \"reload_completed\"\n@@ -13389,7 +13407,7 @@\n         (compare:CCZ (match_operand:SI 1 \"nonimmediate_operand\" \"rm\")\n \t\t     (const_int 0)))\n    (set (match_operand:SI 0 \"register_operand\" \"=r\")\n-\t(unspec:SI [(match_dup 1)] 5))]\n+\t(unspec:SI [(match_dup 1)] UNSPEC_BSF))]\n   \"\"\n   \"bsf{l}\\t{%1, %0|%0, %1}\"\n   [(set_attr \"prefix_0f\" \"1\")\n@@ -14197,7 +14215,7 @@\n \n (define_insn \"sindf2\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n-\t(unspec:DF [(match_operand:DF 1 \"register_operand\" \"0\")] 1))]\n+\t(unspec:DF [(match_operand:DF 1 \"register_operand\" \"0\")] UNSPEC_SIN))]\n   \"! TARGET_NO_FANCY_MATH_387 && TARGET_80387 \n    && flag_unsafe_math_optimizations\"\n   \"fsin\"\n@@ -14206,7 +14224,7 @@\n \n (define_insn \"sinsf2\"\n   [(set (match_operand:SF 0 \"register_operand\" \"=f\")\n-\t(unspec:SF [(match_operand:SF 1 \"register_operand\" \"0\")] 1))]\n+\t(unspec:SF [(match_operand:SF 1 \"register_operand\" \"0\")] UNSPEC_SIN))]\n   \"! TARGET_NO_FANCY_MATH_387 && TARGET_80387 \n    && flag_unsafe_math_optimizations\"\n   \"fsin\"\n@@ -14216,7 +14234,8 @@\n (define_insn \"*sinextendsfdf2\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n \t(unspec:DF [(float_extend:DF\n-\t\t     (match_operand:SF 1 \"register_operand\" \"0\"))] 1))]\n+\t\t     (match_operand:SF 1 \"register_operand\" \"0\"))]\n+\t\t   UNSPEC_SIN))]\n   \"! TARGET_NO_FANCY_MATH_387 && TARGET_80387 \n    && flag_unsafe_math_optimizations\"\n   \"fsin\"\n@@ -14225,7 +14244,7 @@\n \n (define_insn \"sinxf2\"\n   [(set (match_operand:XF 0 \"register_operand\" \"=f\")\n-\t(unspec:XF [(match_operand:XF 1 \"register_operand\" \"0\")] 1))]\n+\t(unspec:XF [(match_operand:XF 1 \"register_operand\" \"0\")] UNSPEC_SIN))]\n   \"!TARGET_64BIT && TARGET_80387 && !TARGET_NO_FANCY_MATH_387\n    && flag_unsafe_math_optimizations\"\n   \"fsin\"\n@@ -14234,7 +14253,7 @@\n \n (define_insn \"sintf2\"\n   [(set (match_operand:TF 0 \"register_operand\" \"=f\")\n-\t(unspec:TF [(match_operand:TF 1 \"register_operand\" \"0\")] 1))]\n+\t(unspec:TF [(match_operand:TF 1 \"register_operand\" \"0\")] UNSPEC_SIN))]\n   \"! TARGET_NO_FANCY_MATH_387 && TARGET_80387 \n    && flag_unsafe_math_optimizations\"\n   \"fsin\"\n@@ -14243,7 +14262,7 @@\n \n (define_insn \"cosdf2\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n-\t(unspec:DF [(match_operand:DF 1 \"register_operand\" \"0\")] 2))]\n+\t(unspec:DF [(match_operand:DF 1 \"register_operand\" \"0\")] UNSPEC_COS))]\n   \"! TARGET_NO_FANCY_MATH_387 && TARGET_80387 \n    && flag_unsafe_math_optimizations\"\n   \"fcos\"\n@@ -14252,7 +14271,7 @@\n \n (define_insn \"cossf2\"\n   [(set (match_operand:SF 0 \"register_operand\" \"=f\")\n-\t(unspec:SF [(match_operand:SF 1 \"register_operand\" \"0\")] 2))]\n+\t(unspec:SF [(match_operand:SF 1 \"register_operand\" \"0\")] UNSPEC_COS))]\n   \"! TARGET_NO_FANCY_MATH_387 && TARGET_80387 \n    && flag_unsafe_math_optimizations\"\n   \"fcos\"\n@@ -14262,7 +14281,8 @@\n (define_insn \"*cosextendsfdf2\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n \t(unspec:DF [(float_extend:DF\n-\t\t     (match_operand:SF 1 \"register_operand\" \"0\"))] 2))]\n+\t\t     (match_operand:SF 1 \"register_operand\" \"0\"))]\n+\t\t   UNSPEC_COS))]\n   \"! TARGET_NO_FANCY_MATH_387 && TARGET_80387 \n    && flag_unsafe_math_optimizations\"\n   \"fcos\"\n@@ -14271,7 +14291,7 @@\n \n (define_insn \"cosxf2\"\n   [(set (match_operand:XF 0 \"register_operand\" \"=f\")\n-\t(unspec:XF [(match_operand:XF 1 \"register_operand\" \"0\")] 2))]\n+\t(unspec:XF [(match_operand:XF 1 \"register_operand\" \"0\")] UNSPEC_COS))]\n   \"! TARGET_NO_FANCY_MATH_387 && TARGET_80387\n    && flag_unsafe_math_optimizations\"\n   \"fcos\"\n@@ -14280,7 +14300,7 @@\n \n (define_insn \"costf2\"\n   [(set (match_operand:TF 0 \"register_operand\" \"=f\")\n-\t(unspec:TF [(match_operand:TF 1 \"register_operand\" \"0\")] 2))]\n+\t(unspec:TF [(match_operand:TF 1 \"register_operand\" \"0\")] UNSPEC_COS))]\n   \"! TARGET_NO_FANCY_MATH_387 && TARGET_80387 \n    && flag_unsafe_math_optimizations\"\n   \"fcos\"\n@@ -15174,7 +15194,7 @@\n   [(set (match_operand:SI 0 \"register_operand\" \"\")\n \t(unspec:SI [(match_operand:BLK 1 \"general_operand\" \"\")\n \t\t    (match_operand:QI 2 \"immediate_operand\" \"\")\n-\t\t    (match_operand 3 \"immediate_operand\" \"\")] 0))]\n+\t\t    (match_operand 3 \"immediate_operand\" \"\")] UNSPEC_SCAS))]\n   \"\"\n {\n  if (ix86_expand_strlen (operands[0], operands[1], operands[2], operands[3]))\n@@ -15187,7 +15207,7 @@\n   [(set (match_operand:DI 0 \"register_operand\" \"\")\n \t(unspec:DI [(match_operand:BLK 1 \"general_operand\" \"\")\n \t\t    (match_operand:QI 2 \"immediate_operand\" \"\")\n-\t\t    (match_operand 3 \"immediate_operand\" \"\")] 0))]\n+\t\t    (match_operand 3 \"immediate_operand\" \"\")] UNSPEC_SCAS))]\n   \"\"\n {\n  if (ix86_expand_strlen (operands[0], operands[1], operands[2], operands[3]))\n@@ -15201,7 +15221,7 @@\n \t(unspec:SI [(mem:BLK (match_operand:SI 5 \"register_operand\" \"1\"))\n \t\t    (match_operand:QI 2 \"register_operand\" \"a\")\n \t\t    (match_operand:SI 3 \"immediate_operand\" \"i\")\n-\t\t    (match_operand:SI 4 \"register_operand\" \"0\")] 0))\n+\t\t    (match_operand:SI 4 \"register_operand\" \"0\")] UNSPEC_SCAS))\n    (use (reg:SI 19))\n    (clobber (match_operand:SI 1 \"register_operand\" \"=D\"))\n    (clobber (reg:CC 17))]\n@@ -15216,7 +15236,7 @@\n \t(unspec:DI [(mem:BLK (match_operand:DI 5 \"register_operand\" \"1\"))\n \t\t    (match_operand:QI 2 \"register_operand\" \"a\")\n \t\t    (match_operand:DI 3 \"immediate_operand\" \"i\")\n-\t\t    (match_operand:DI 4 \"register_operand\" \"0\")] 0))\n+\t\t    (match_operand:DI 4 \"register_operand\" \"0\")] UNSPEC_SCAS))\n    (use (reg:SI 19))\n    (clobber (match_operand:DI 1 \"register_operand\" \"=D\"))\n    (clobber (reg:CC 17))]\n@@ -16223,7 +16243,7 @@\n })\n \n (define_insn \"allocate_stack_worker_1\"\n-  [(unspec:SI [(match_operand:SI 0 \"register_operand\" \"a\")] 3)\n+  [(unspec:SI [(match_operand:SI 0 \"register_operand\" \"a\")] UNSPEC_STACK_PROBE)\n    (set (reg:SI 7) (minus:SI (reg:SI 7) (match_dup 0)))\n    (clobber (match_dup 0))\n    (clobber (reg:CC 17))]\n@@ -16233,7 +16253,7 @@\n    (set_attr \"length\" \"5\")])\n \n (define_insn \"allocate_stack_worker_rex64\"\n-  [(unspec:DI [(match_operand:DI 0 \"register_operand\" \"a\")] 3)\n+  [(unspec:DI [(match_operand:DI 0 \"register_operand\" \"a\")] UNSPEC_STACK_PROBE)\n    (set (reg:DI 7) (minus:DI (reg:DI 7) (match_dup 0)))\n    (clobber (match_dup 0))\n    (clobber (reg:CC 17))]\n@@ -17605,8 +17625,8 @@\n ;; movaps or movups\n (define_insn \"sse_movaps\"\n   [(set (match_operand:V4SF 0 \"nonimmediate_operand\" \"=x,m\")\n-\t(unspec:V4SF\n-\t [(match_operand:V4SF 1 \"nonimmediate_operand\" \"xm,x\")] 38))]\n+\t(unspec:V4SF [(match_operand:V4SF 1 \"nonimmediate_operand\" \"xm,x\")]\n+\t\t     UNSPEC_MOVA))]\n   \"TARGET_SSE\"\n   \"@\n    movaps\\t{%1, %0|%0, %1}\n@@ -17616,8 +17636,8 @@\n \n (define_insn \"sse_movups\"\n   [(set (match_operand:V4SF 0 \"nonimmediate_operand\" \"=x,m\")\n-\t(unspec:V4SF\n-\t [(match_operand:V4SF 1 \"nonimmediate_operand\" \"xm,x\")] 39))]\n+\t(unspec:V4SF [(match_operand:V4SF 1 \"nonimmediate_operand\" \"xm,x\")]\n+\t\t     UNSPEC_MOVU))]\n   \"TARGET_SSE\"\n   \"@\n    movups\\t{%1, %0|%0, %1}\n@@ -17630,15 +17650,17 @@\n \n (define_insn \"sse_movmskps\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n-\t(unspec:SI [(match_operand:V4SF 1 \"register_operand\" \"x\")] 33))]\n+\t(unspec:SI [(match_operand:V4SF 1 \"register_operand\" \"x\")]\n+\t\t   UNSPEC_MOVMSK))]\n   \"TARGET_SSE\"\n   \"movmskps\\t{%1, %0|%0, %1}\"\n   [(set_attr \"type\" \"ssecvt\")\n    (set_attr \"mode\" \"V4SF\")])\n \n (define_insn \"mmx_pmovmskb\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n-\t(unspec:SI [(match_operand:V8QI 1 \"register_operand\" \"y\")] 33))]\n+\t(unspec:SI [(match_operand:V8QI 1 \"register_operand\" \"y\")]\n+\t\t   UNSPEC_MOVMSK))]\n   \"TARGET_SSE || TARGET_3DNOW_A\"\n   \"pmovmskb\\t{%1, %0|%0, %1}\"\n   [(set_attr \"type\" \"ssecvt\")\n@@ -17648,7 +17670,8 @@\n (define_insn \"mmx_maskmovq\"\n   [(set (mem:V8QI (match_operand:SI 0 \"register_operand\" \"D\"))\n \t(unspec:V8QI [(match_operand:V8QI 1 \"register_operand\" \"y\")\n-\t\t      (match_operand:V8QI 2 \"register_operand\" \"y\")] 32))]\n+\t\t      (match_operand:V8QI 2 \"register_operand\" \"y\")]\n+\t\t     UNSPEC_MASKMOV))]\n   \"(TARGET_SSE || TARGET_3DNOW_A) && !TARGET_64BIT\"\n   ;; @@@ check ordering of operands in intel/nonintel syntax\n   \"maskmovq\\t{%2, %1|%1, %2}\"\n@@ -17658,7 +17681,8 @@\n (define_insn \"mmx_maskmovq_rex\"\n   [(set (mem:V8QI (match_operand:DI 0 \"register_operand\" \"D\"))\n \t(unspec:V8QI [(match_operand:V8QI 1 \"register_operand\" \"y\")\n-\t\t      (match_operand:V8QI 2 \"register_operand\" \"y\")] 32))]\n+\t\t      (match_operand:V8QI 2 \"register_operand\" \"y\")]\n+\t\t     UNSPEC_MASKMOV))]\n   \"(TARGET_SSE || TARGET_3DNOW_A) && TARGET_64BIT\"\n   ;; @@@ check ordering of operands in intel/nonintel syntax\n   \"maskmovq\\t{%2, %1|%1, %2}\"\n@@ -17667,15 +17691,17 @@\n \n (define_insn \"sse_movntv4sf\"\n   [(set (match_operand:V4SF 0 \"memory_operand\" \"=m\")\n-\t(unspec:V4SF [(match_operand:V4SF 1 \"register_operand\" \"x\")] 34))]\n+\t(unspec:V4SF [(match_operand:V4SF 1 \"register_operand\" \"x\")]\n+\t\t     UNSPEC_MOVNT))]\n   \"TARGET_SSE\"\n   \"movntps\\t{%1, %0|%0, %1}\"\n   [(set_attr \"type\" \"ssemov\")\n    (set_attr \"mode\" \"V4SF\")])\n \n (define_insn \"sse_movntdi\"\n   [(set (match_operand:DI 0 \"memory_operand\" \"=m\")\n-\t(unspec:DI [(match_operand:DI 1 \"register_operand\" \"y\")] 34))]\n+\t(unspec:DI [(match_operand:DI 1 \"register_operand\" \"y\")]\n+\t\t   UNSPEC_MOVNT))]\n   \"TARGET_SSE || TARGET_3DNOW_A\"\n   \"movntq\\t{%1, %0|%0, %1}\"\n   [(set_attr \"type\" \"mmxmov\")\n@@ -17771,7 +17797,8 @@\n   [(set (match_operand:V4SF 0 \"register_operand\" \"=x\")\n         (unspec:V4SF [(match_operand:V4SF 1 \"register_operand\" \"0\")\n \t\t      (match_operand:V4SF 2 \"nonimmediate_operand\" \"xm\")\n-\t\t      (match_operand:SI 3 \"immediate_operand\" \"i\")] 41))]\n+\t\t      (match_operand:SI 3 \"immediate_operand\" \"i\")]\n+\t\t     UNSPEC_SHUFFLE))]\n   \"TARGET_SSE\"\n   ;; @@@ check operand order for intel/nonintel syntax\n   \"shufps\\t{%3, %2, %0|%0, %2, %3}\"\n@@ -17871,7 +17898,7 @@\n (define_insn \"rcpv4sf2\"\n   [(set (match_operand:V4SF 0 \"register_operand\" \"=x\")\n         (unspec:V4SF\n-\t [(match_operand:V4SF 1 \"nonimmediate_operand\" \"xm\")] 42))]\n+\t [(match_operand:V4SF 1 \"nonimmediate_operand\" \"xm\")] UNSPEC_RCP))]\n   \"TARGET_SSE\"\n   \"rcpps\\t{%1, %0|%0, %1}\"\n   [(set_attr \"type\" \"sse\")\n@@ -17880,7 +17907,8 @@\n (define_insn \"vmrcpv4sf2\"\n   [(set (match_operand:V4SF 0 \"register_operand\" \"=x\")\n \t(vec_merge:V4SF\n-\t (unspec:V4SF [(match_operand:V4SF 1 \"nonimmediate_operand\" \"xm\")] 42)\n+\t (unspec:V4SF [(match_operand:V4SF 1 \"nonimmediate_operand\" \"xm\")]\n+\t\t      UNSPEC_RCP)\n \t (match_operand:V4SF 2 \"register_operand\" \"0\")\n \t (const_int 1)))]\n   \"TARGET_SSE\"\n@@ -17891,7 +17919,7 @@\n (define_insn \"rsqrtv4sf2\"\n   [(set (match_operand:V4SF 0 \"register_operand\" \"=x\")\n         (unspec:V4SF\n-\t [(match_operand:V4SF 1 \"nonimmediate_operand\" \"xm\")] 43))]\n+\t [(match_operand:V4SF 1 \"nonimmediate_operand\" \"xm\")] UNSPEC_RSQRT))]\n   \"TARGET_SSE\"\n   \"rsqrtps\\t{%1, %0|%0, %1}\"\n   [(set_attr \"type\" \"sse\")\n@@ -17900,7 +17928,8 @@\n (define_insn \"vmrsqrtv4sf2\"\n   [(set (match_operand:V4SF 0 \"register_operand\" \"=x\")\n \t(vec_merge:V4SF\n-\t (unspec:V4SF [(match_operand:V4SF 1 \"nonimmediate_operand\" \"xm\")] 43)\n+\t (unspec:V4SF [(match_operand:V4SF 1 \"nonimmediate_operand\" \"xm\")]\n+\t\t      UNSPEC_RSQRT)\n \t (match_operand:V4SF 2 \"register_operand\" \"0\")\n \t (const_int 1)))]\n   \"TARGET_SSE\"\n@@ -18177,7 +18206,7 @@\n ;; this insn.\n (define_insn \"sse_clrv4sf\"\n   [(set (match_operand:V4SF 0 \"register_operand\" \"=x\")\n-        (unspec:V4SF [(const_int 0)] 45))]\n+        (unspec:V4SF [(const_int 0)] UNSPEC_NOP))]\n   \"TARGET_SSE\"\n   \"xorps\\t{%0, %0|%0, %0}\"\n   [(set_attr \"type\" \"sselog\")\n@@ -18386,7 +18415,8 @@\n (define_insn \"cvttps2pi\"\n   [(set (match_operand:V2SI 0 \"register_operand\" \"=y\")\n \t(vec_select:V2SI\n-\t (unspec:V4SI [(match_operand:V4SF 1 \"nonimmediate_operand\" \"xm\")] 30)\n+\t (unspec:V4SI [(match_operand:V4SF 1 \"nonimmediate_operand\" \"xm\")]\n+\t\t      UNSPEC_FIX)\n \t (parallel [(const_int 0) (const_int 1)])))]\n   \"TARGET_SSE\"\n   \"cvttps2pi\\t{%1, %0|%0, %1}\"\n@@ -18418,7 +18448,8 @@\n (define_insn \"cvttss2si\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n \t(vec_select:SI\n-\t (unspec:V4SI [(match_operand:V4SF 1 \"nonimmediate_operand\" \"xm\")] 30)\n+\t (unspec:V4SI [(match_operand:V4SF 1 \"nonimmediate_operand\" \"xm\")]\n+\t\t      UNSPEC_FIX)\n \t (parallel [(const_int 0)])))]\n   \"TARGET_SSE\"\n   \"cvttss2si\\t{%1, %0|%0, %1}\"\n@@ -18624,7 +18655,8 @@\n   [(set (match_operand:DI 0 \"register_operand\" \"=y\")\n         (unspec:DI\n \t [(ior:DI (match_operand:DI 1 \"register_operand\" \"0\")\n-\t\t  (match_operand:DI 2 \"nonimmediate_operand\" \"ym\"))] 45))]\n+\t\t  (match_operand:DI 2 \"nonimmediate_operand\" \"ym\"))]\n+\t UNSPEC_NOP))]\n   \"TARGET_MMX\"\n   \"por\\t{%2, %0|%0, %2}\"\n   [(set_attr \"type\" \"mmxadd\")\n@@ -18634,7 +18666,8 @@\n   [(set (match_operand:DI 0 \"register_operand\" \"=y\")\n         (unspec:DI\n \t [(xor:DI (match_operand:DI 1 \"register_operand\" \"0\")\n-\t\t  (match_operand:DI 2 \"nonimmediate_operand\" \"ym\"))] 45))]\n+\t\t  (match_operand:DI 2 \"nonimmediate_operand\" \"ym\"))]\n+\t UNSPEC_NOP))]\n   \"TARGET_MMX\"\n   \"pxor\\t{%2, %0|%0, %2}\"\n   [(set_attr \"type\" \"mmxadd\")\n@@ -18645,7 +18678,7 @@\n ;; they are live.\n (define_insn \"mmx_clrdi\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=y\")\n-        (unspec:DI [(const_int 0)] 45))]\n+        (unspec:DI [(const_int 0)] UNSPEC_NOP))]\n   \"TARGET_MMX\"\n   \"pxor\\t{%0, %0|%0, %0}\"\n   [(set_attr \"type\" \"mmxadd\")\n@@ -18656,7 +18689,8 @@\n   [(set (match_operand:DI 0 \"register_operand\" \"=y\")\n         (unspec:DI\n \t [(and:DI (match_operand:DI 1 \"register_operand\" \"0\")\n-\t\t  (match_operand:DI 2 \"nonimmediate_operand\" \"ym\"))] 45))]\n+\t\t  (match_operand:DI 2 \"nonimmediate_operand\" \"ym\"))]\n+\t UNSPEC_NOP))]\n   \"TARGET_MMX\"\n   \"pand\\t{%2, %0|%0, %2}\"\n   [(set_attr \"type\" \"mmxadd\")\n@@ -18666,7 +18700,8 @@\n   [(set (match_operand:DI 0 \"register_operand\" \"=y\")\n         (unspec:DI\n \t [(and:DI (not:DI (match_operand:DI 1 \"register_operand\" \"0\"))\n-\t\t\t  (match_operand:DI 2 \"nonimmediate_operand\" \"ym\"))] 45))]\n+\t\t\t  (match_operand:DI 2 \"nonimmediate_operand\" \"ym\"))]\n+\t UNSPEC_NOP))]\n   \"TARGET_MMX\"\n   \"pandn\\t{%2, %0|%0, %2}\"\n   [(set_attr \"type\" \"mmxadd\")\n@@ -18714,7 +18749,8 @@\n (define_insn \"mmx_psadbw\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=y\")\n         (unspec:DI [(match_operand:V8QI 1 \"register_operand\" \"0\")\n-\t\t    (match_operand:V8QI 2 \"nonimmediate_operand\" \"ym\")] 61))]\n+\t\t    (match_operand:V8QI 2 \"nonimmediate_operand\" \"ym\")]\n+\t\t   UNSPEC_PSADBW))]\n   \"TARGET_SSE || TARGET_3DNOW_A\"\n   \"psadbw\\t{%2, %0|%0, %2}\"\n   [(set_attr \"type\" \"mmxshft\")\n@@ -18747,7 +18783,8 @@\n (define_insn \"mmx_pshufw\"\n   [(set (match_operand:V4HI 0 \"register_operand\" \"=y\")\n         (unspec:V4HI [(match_operand:V4HI 1 \"register_operand\" \"0\")\n-\t\t      (match_operand:SI 2 \"immediate_operand\" \"i\")] 41))]\n+\t\t      (match_operand:SI 2 \"immediate_operand\" \"i\")]\n+\t\t     UNSPEC_SHUFFLE))]\n   \"TARGET_SSE || TARGET_3DNOW_A\"\n   \"pshufw\\t{%2, %1, %0|%0, %1, %2}\"\n   [(set_attr \"type\" \"mmxcvt\")\n@@ -18893,7 +18930,8 @@\n   [(set (match_operand:DI 0 \"register_operand\" \"=y\")\n         (unspec:DI\n \t  [(lshiftrt:DI (match_operand:DI 1 \"register_operand\" \"0\")\n-\t\t       (match_operand:DI 2 \"nonmemory_operand\" \"yi\"))] 45))]\n+\t\t       (match_operand:DI 2 \"nonmemory_operand\" \"yi\"))]\n+\t  UNSPEC_NOP))]\n   \"TARGET_MMX\"\n   \"psrlq\\t{%2, %0|%0, %2}\"\n   [(set_attr \"type\" \"mmxshft\")\n@@ -18922,7 +18960,8 @@\n   [(set (match_operand:DI 0 \"register_operand\" \"=y\")\n         (unspec:DI\n \t [(ashift:DI (match_operand:DI 1 \"register_operand\" \"0\")\n-\t\t     (match_operand:DI 2 \"nonmemory_operand\" \"yi\"))] 45))]\n+\t\t     (match_operand:DI 2 \"nonmemory_operand\" \"yi\"))]\n+\t UNSPEC_NOP))]\n   \"TARGET_MMX\"\n   \"psllq\\t{%2, %0|%0, %2}\"\n   [(set_attr \"type\" \"mmxshft\")\n@@ -19087,7 +19126,7 @@\n ;; Miscellaneous stuff\n \n (define_insn \"emms\"\n-  [(unspec_volatile [(const_int 0)] 31)\n+  [(unspec_volatile [(const_int 0)] UNSPECV_EMMS)\n    (clobber (reg:XF 8))\n    (clobber (reg:XF 9))\n    (clobber (reg:XF 10))\n@@ -19110,23 +19149,24 @@\n    (set_attr \"memory\" \"unknown\")])\n \n (define_insn \"ldmxcsr\"\n-  [(unspec_volatile [(match_operand:SI 0 \"memory_operand\" \"m\")] 37)]\n+  [(unspec_volatile [(match_operand:SI 0 \"memory_operand\" \"m\")]\n+\t\t    UNSPECV_LDMXCSR)]\n   \"TARGET_MMX\"\n   \"ldmxcsr\\t%0\"\n   [(set_attr \"type\" \"mmx\")\n    (set_attr \"memory\" \"load\")])\n \n (define_insn \"stmxcsr\"\n   [(set (match_operand:SI 0 \"memory_operand\" \"=m\")\n-\t(unspec_volatile:SI [(const_int 0)] 40))]\n+\t(unspec_volatile:SI [(const_int 0)] UNSPECV_STMXCSR))]\n   \"TARGET_MMX\"\n   \"stmxcsr\\t%0\"\n   [(set_attr \"type\" \"mmx\")\n    (set_attr \"memory\" \"store\")])\n \n (define_expand \"sfence\"\n   [(set (match_dup 0)\n-\t(unspec:BLK [(match_dup 0)] 44))]\n+\t(unspec:BLK [(match_dup 0)] UNSPEC_SFENCE))]\n   \"TARGET_SSE || TARGET_3DNOW_A\"\n {\n   operands[0] = gen_rtx_MEM (BLKmode, gen_rtx_SCRATCH (Pmode));\n@@ -19135,7 +19175,7 @@\n \n (define_insn \"*sfence_insn\"\n   [(set (match_operand:BLK 0 \"\" \"\")\n-\t(unspec:BLK [(match_dup 0)] 44))]\n+\t(unspec:BLK [(match_dup 0)] UNSPEC_SFENCE))]\n   \"TARGET_SSE || TARGET_3DNOW_A\"\n   \"sfence\"\n   [(set_attr \"type\" \"sse\")\n@@ -19150,7 +19190,7 @@\n \t\t\t\t(reg:DI 25)\n \t\t\t\t(reg:DI 26)\n \t\t\t\t(reg:DI 27)\n-\t\t\t\t(reg:DI 28)] 13))\n+\t\t\t\t(reg:DI 28)] UNSPEC_SSE_PROLOGUE_SAVE))\n \t      (use (match_operand:DI 1 \"register_operand\" \"\"))\n \t      (use (match_operand:DI 2 \"immediate_operand\" \"\"))\n \t      (use (label_ref:DI (match_operand 3 \"\" \"\")))])]\n@@ -19167,7 +19207,7 @@\n \t\t     (reg:DI 25)\n \t\t     (reg:DI 26)\n \t\t     (reg:DI 27)\n-\t\t     (reg:DI 28)] 13))\n+\t\t     (reg:DI 28)] UNSPEC_SSE_PROLOGUE_SAVE))\n    (use (match_operand:DI 1 \"register_operand\" \"r\"))\n    (use (match_operand:DI 2 \"const_int_operand\" \"i\"))\n    (use (label_ref:DI (match_operand 3 \"\" \"X\")))]\n@@ -19286,7 +19326,7 @@\n    (set_attr \"mode\" \"V2SF\")])\n \n (define_insn \"femms\"\n-  [(unspec_volatile [(const_int 0)] 46)\n+  [(unspec_volatile [(const_int 0)] UNSPECV_FEMMS)\n    (clobber (reg:XF 8))\n    (clobber (reg:XF 9))\n    (clobber (reg:XF 10))\n@@ -19411,7 +19451,8 @@\n  [(set (match_operand:V8QI 0 \"register_operand\" \"=y\")\n        (unspec:V8QI\n           [(match_operand:V8QI 1 \"register_operand\" \"0\")\n-           (match_operand:V8QI 2 \"nonimmediate_operand\" \"ym\")] 49))]\n+           (match_operand:V8QI 2 \"nonimmediate_operand\" \"ym\")]\n+\t  UNSPEC_PAVGUSB))]\n   \"TARGET_3DNOW\"\n   \"pavgusb\\\\t{%2, %0|%0, %2}\"\n   [(set_attr \"type\" \"mmxshft\")\n@@ -19421,7 +19462,8 @@\n  \n (define_insn \"pfrcpv2sf2\"\n   [(set (match_operand:V2SF 0 \"register_operand\" \"=y\")\n-        (unspec:V2SF [(match_operand:V2SF 1 \"nonimmediate_operand\" \"ym\")] 50))]\n+        (unspec:V2SF [(match_operand:V2SF 1 \"nonimmediate_operand\" \"ym\")]\n+\tUNSPEC_PFRCP))]\n   \"TARGET_3DNOW\"\n   \"pfrcp\\\\t{%1, %0|%0, %1}\"\n   [(set_attr \"type\" \"mmx\")\n@@ -19430,7 +19472,8 @@\n (define_insn \"pfrcpit1v2sf3\"\n   [(set (match_operand:V2SF 0 \"register_operand\" \"=y\")\n \t(unspec:V2SF [(match_operand:V2SF 1 \"register_operand\" \"0\")\n-\t\t      (match_operand:V2SF 2 \"nonimmediate_operand\" \"ym\")] 51))]\n+\t\t      (match_operand:V2SF 2 \"nonimmediate_operand\" \"ym\")]\n+\t\t     UNSPEC_PFRCPIT1))]\n   \"TARGET_3DNOW\"\n   \"pfrcpit1\\\\t{%2, %0|%0, %2}\"\n   [(set_attr \"type\" \"mmx\")\n@@ -19439,15 +19482,17 @@\n (define_insn \"pfrcpit2v2sf3\"\n   [(set (match_operand:V2SF 0 \"register_operand\" \"=y\")\n \t(unspec:V2SF [(match_operand:V2SF 1 \"register_operand\" \"0\")\n-\t\t      (match_operand:V2SF 2 \"nonimmediate_operand\" \"ym\")] 52))]\n+\t\t      (match_operand:V2SF 2 \"nonimmediate_operand\" \"ym\")]\n+\t\t     UNSPEC_PFRCPIT2))]\n   \"TARGET_3DNOW\"\n   \"pfrcpit2\\\\t{%2, %0|%0, %2}\"\n   [(set_attr \"type\" \"mmx\")\n    (set_attr \"mode\" \"TI\")])\n \n (define_insn \"pfrsqrtv2sf2\"\n   [(set (match_operand:V2SF 0 \"register_operand\" \"=y\")\n-\t(unspec:V2SF [(match_operand:V2SF 1 \"nonimmediate_operand\" \"ym\")] 53))]\n+\t(unspec:V2SF [(match_operand:V2SF 1 \"nonimmediate_operand\" \"ym\")]\n+\t\t     UNSPEC_PFRSQRT))]\n   \"TARGET_3DNOW\"\n   \"pfrsqrt\\\\t{%1, %0|%0, %1}\"\n   [(set_attr \"type\" \"mmx\")\n@@ -19456,7 +19501,8 @@\n (define_insn \"pfrsqit1v2sf3\"\n   [(set (match_operand:V2SF 0 \"register_operand\" \"=y\")\n \t(unspec:V2SF [(match_operand:V2SF 1 \"register_operand\" \"0\")\n-\t\t      (match_operand:V2SF 2 \"nonimmediate_operand\" \"ym\")] 54))]\n+\t\t      (match_operand:V2SF 2 \"nonimmediate_operand\" \"ym\")]\n+\t\t     UNSPEC_PFRSQIT1))]\n   \"TARGET_3DNOW\"\n   \"pfrsqit1\\\\t{%2, %0|%0, %2}\"\n   [(set_attr \"type\" \"mmx\")\n@@ -19819,15 +19865,17 @@\n \n (define_insn \"sse2_movmskpd\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n-\t(unspec:SI [(match_operand:V2DF 1 \"register_operand\" \"x\")] 33))]\n+\t(unspec:SI [(match_operand:V2DF 1 \"register_operand\" \"x\")]\n+\t\t   UNSPEC_MOVMSK))]\n   \"TARGET_SSE2\"\n   \"movmskpd\\t{%1, %0|%0, %1}\"\n   [(set_attr \"type\" \"ssecvt\")\n    (set_attr \"mode\" \"V2DF\")])\n \n (define_insn \"sse2_pmovmskb\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n-\t(unspec:SI [(match_operand:V16QI 1 \"register_operand\" \"x\")] 33))]\n+\t(unspec:SI [(match_operand:V16QI 1 \"register_operand\" \"x\")]\n+\t\t   UNSPEC_MOVMSK))]\n   \"TARGET_SSE2\"\n   \"pmovmskb\\t{%1, %0|%0, %1}\"\n   [(set_attr \"type\" \"ssecvt\")\n@@ -19836,7 +19884,8 @@\n (define_insn \"sse2_maskmovdqu\"\n   [(set (mem:V16QI (match_operand:SI 0 \"register_operand\" \"D\"))\n \t(unspec:V16QI [(match_operand:V16QI 1 \"register_operand\" \"x\")\n-\t\t       (match_operand:V16QI 2 \"register_operand\" \"x\")] 32))]\n+\t\t       (match_operand:V16QI 2 \"register_operand\" \"x\")]\n+\t\t      UNSPEC_MASKMOV))]\n   \"TARGET_SSE2\"\n   ;; @@@ check ordering of operands in intel/nonintel syntax\n   \"maskmovdqu\\t{%2, %1|%1, %2}\"\n@@ -19845,23 +19894,26 @@\n \n (define_insn \"sse2_movntv2df\"\n   [(set (match_operand:V2DF 0 \"memory_operand\" \"=m\")\n-\t(unspec:V2DF [(match_operand:V2DF 1 \"register_operand\" \"x\")] 34))]\n+\t(unspec:V2DF [(match_operand:V2DF 1 \"register_operand\" \"x\")]\n+\t\t     UNSPEC_MOVNT))]\n   \"TARGET_SSE2\"\n   \"movntpd\\t{%1, %0|%0, %1}\"\n   [(set_attr \"type\" \"ssecvt\")\n    (set_attr \"mode\" \"V2DF\")])\n \n (define_insn \"sse2_movntv2di\"\n   [(set (match_operand:V2DI 0 \"memory_operand\" \"=m\")\n-\t(unspec:V2DI [(match_operand:V2DI 1 \"register_operand\" \"x\")] 34))]\n+\t(unspec:V2DI [(match_operand:V2DI 1 \"register_operand\" \"x\")]\n+\t\t     UNSPEC_MOVNT))]\n   \"TARGET_SSE2\"\n   \"movntdq\\t{%1, %0|%0, %1}\"\n   [(set_attr \"type\" \"ssecvt\")\n    (set_attr \"mode\" \"TI\")])\n \n (define_insn \"sse2_movntsi\"\n   [(set (match_operand:SI 0 \"memory_operand\" \"=m\")\n-\t(unspec:SI [(match_operand:SI 1 \"register_operand\" \"r\")] 34))]\n+\t(unspec:SI [(match_operand:SI 1 \"register_operand\" \"r\")]\n+\t\t   UNSPEC_MOVNT))]\n   \"TARGET_SSE2\"\n   \"movnti\\t{%1, %0|%0, %1}\"\n   [(set_attr \"type\" \"ssecvt\")\n@@ -19889,7 +19941,8 @@\n \n (define_insn \"cvttps2dq\"\n   [(set (match_operand:V4SI 0 \"register_operand\" \"=x\")\n-\t(unspec:V4SI [(match_operand:V4SF 1 \"nonimmediate_operand\" \"xm\")] 30))]\n+\t(unspec:V4SI [(match_operand:V4SF 1 \"nonimmediate_operand\" \"xm\")]\n+\t\t     UNSPEC_FIX))]\n   \"TARGET_SSE2\"\n   \"cvttps2dq\\t{%1, %0|%0, %1}\"\n   [(set_attr \"type\" \"ssecvt\")\n@@ -19922,7 +19975,8 @@\n (define_insn \"cvttpd2dq\"\n   [(set (match_operand:V4SI 0 \"register_operand\" \"=x\")\n \t(vec_concat:V4SI\n-\t (unspec:V2SI [(match_operand:V2DF 1 \"nonimmediate_operand\" \"xm\")] 30)\n+\t (unspec:V2SI [(match_operand:V2DF 1 \"nonimmediate_operand\" \"xm\")]\n+\t\t      UNSPEC_FIX)\n \t (const_vector:V2SI [(const_int 0) (const_int 0)])))]\n   \"TARGET_SSE2\"\n   \"cvttpd2dq\\t{%1, %0|%0, %1}\"\n@@ -19939,7 +19993,8 @@\n \n (define_insn \"cvttpd2pi\"\n   [(set (match_operand:V2SI 0 \"register_operand\" \"=y\")\n-\t(unspec:V2SI [(match_operand:V2DF 1 \"nonimmediate_operand\" \"xm\")] 30))]\n+\t(unspec:V2SI [(match_operand:V2DF 1 \"nonimmediate_operand\" \"xm\")]\n+\t\t     UNSPEC_FIX))]\n   \"TARGET_SSE2\"\n   \"cvttpd2pi\\t{%1, %0|%0, %1}\"\n   [(set_attr \"type\" \"ssecvt\")\n@@ -19967,7 +20022,7 @@\n (define_insn \"cvttsd2si\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n \t(unspec:SI [(vec_select:DF (match_operand:V2DF 1 \"register_operand\" \"xm\")\n-\t\t\t\t   (parallel [(const_int 0)]))] 30))]\n+\t\t\t\t   (parallel [(const_int 0)]))] UNSPEC_FIX))]\n   \"TARGET_SSE2\"\n   \"cvttsd2si\\t{%1, %0|%0, %1}\"\n   [(set_attr \"type\" \"ssecvt\")\n@@ -20327,7 +20382,8 @@\n (define_insn \"sse2_psadbw\"\n   [(set (match_operand:V2DI 0 \"register_operand\" \"=x\")\n         (unspec:V2DI [(match_operand:V16QI 1 \"register_operand\" \"0\")\n-\t\t      (match_operand:V16QI 2 \"nonimmediate_operand\" \"ym\")] 61))]\n+\t\t      (match_operand:V16QI 2 \"nonimmediate_operand\" \"ym\")]\n+\t\t     UNSPEC_PSADBW))]\n   \"TARGET_SSE2\"\n   \"psadbw\\t{%2, %0|%0, %2}\"\n   [(set_attr \"type\" \"sseiadd\")\n@@ -20361,7 +20417,8 @@\n (define_insn \"sse2_pshufd\"\n   [(set (match_operand:V4SI 0 \"register_operand\" \"=x\")\n         (unspec:V4SI [(match_operand:V4SI 1 \"register_operand\" \"0\")\n-\t\t      (match_operand:SI 2 \"immediate_operand\" \"i\")] 41))]\n+\t\t      (match_operand:SI 2 \"immediate_operand\" \"i\")]\n+\t\t     UNSPEC_SHUFFLE))]\n   \"TARGET_SSE2\"\n   \"pshufd\\t{%2, %1, %0|%0, %1, %2}\"\n   [(set_attr \"type\" \"ssecvt\")\n@@ -20370,7 +20427,8 @@\n (define_insn \"sse2_pshuflw\"\n   [(set (match_operand:V8HI 0 \"register_operand\" \"=x\")\n         (unspec:V8HI [(match_operand:V8HI 1 \"register_operand\" \"0\")\n-\t\t      (match_operand:SI 2 \"immediate_operand\" \"i\")] 55))]\n+\t\t      (match_operand:SI 2 \"immediate_operand\" \"i\")]\n+\t\t     UNSPEC_PSHUFLW))]\n   \"TARGET_SSE2\"\n   \"pshuflw\\t{%2, %1, %0|%0, %1, %2}\"\n   [(set_attr \"type\" \"ssecvt\")\n@@ -20379,7 +20437,8 @@\n (define_insn \"sse2_pshufhw\"\n   [(set (match_operand:V8HI 0 \"register_operand\" \"=x\")\n         (unspec:V8HI [(match_operand:V8HI 1 \"register_operand\" \"0\")\n-\t\t      (match_operand:SI 2 \"immediate_operand\" \"i\")] 56))]\n+\t\t      (match_operand:SI 2 \"immediate_operand\" \"i\")]\n+\t\t     UNSPEC_PSHUFHW))]\n   \"TARGET_SSE2\"\n   \"pshufhw\\t{%2, %1, %0|%0, %1, %2}\"\n   [(set_attr \"type\" \"ssecvt\")\n@@ -20628,7 +20687,7 @@\n         (unspec:TI\n \t [(ashift:TI (match_operand:TI 1 \"register_operand\" \"0\")\n \t\t     (mult:SI (match_operand:SI 2 \"immediate_operand\" \"i\")\n-\t\t\t       (const_int 8)))] 30))]\n+\t\t\t       (const_int 8)))] UNSPEC_NOP))]\n   \"TARGET_SSE2\"\n   \"pslldq\\t{%2, %0|%0, %2}\"\n   [(set_attr \"type\" \"sseishft\")\n@@ -20639,7 +20698,7 @@\n         (unspec:TI\n \t [(lshiftrt:TI (match_operand:TI 1 \"register_operand\" \"0\")\n \t\t       (mult:SI (match_operand:SI 2 \"immediate_operand\" \"i\")\n-\t\t\t\t(const_int 8)))] 30))]\n+\t\t\t\t(const_int 8)))] UNSPEC_NOP))]\n   \"TARGET_SSE2\"\n   \"pslrdq\\t{%2, %0|%0, %2}\"\n   [(set_attr \"type\" \"sseishft\")\n@@ -20829,7 +20888,8 @@\n \n (define_insn \"sse2_movapd\"\n   [(set (match_operand:V2DF 0 \"nonimmediate_operand\" \"=x,m\")\n-\t(unspec:V2DF [(match_operand:V2DF 1 \"general_operand\" \"xm,x\")] 38))]\n+\t(unspec:V2DF [(match_operand:V2DF 1 \"general_operand\" \"xm,x\")]\n+\t\t     UNSPEC_MOVA))]\n   \"TARGET_SSE2\"\n   \"@\n    movapd\\t{%1, %0|%0, %1}\n@@ -20839,7 +20899,8 @@\n \n (define_insn \"sse2_movupd\"\n   [(set (match_operand:V2DF 0 \"nonimmediate_operand\" \"=x,m\")\n-\t(unspec:V2DF [(match_operand:V2DF 1 \"general_operand\" \"xm,x\")] 39))]\n+\t(unspec:V2DF [(match_operand:V2DF 1 \"general_operand\" \"xm,x\")]\n+\t\t     UNSPEC_MOVU))]\n   \"TARGET_SSE2\"\n   \"@\n    movupd\\t{%1, %0|%0, %1}\n@@ -20849,7 +20910,8 @@\n \n (define_insn \"sse2_movdqa\"\n   [(set (match_operand:TI 0 \"nonimmediate_operand\" \"=x,m\")\n-\t(unspec:TI [(match_operand:TI 1 \"general_operand\" \"xm,x\")] 38))]\n+\t(unspec:TI [(match_operand:TI 1 \"general_operand\" \"xm,x\")]\n+\t\t   UNSPEC_MOVA))]\n   \"TARGET_SSE2\"\n   \"@\n    movdqa\\t{%1, %0|%0, %1}\n@@ -20859,7 +20921,8 @@\n \n (define_insn \"sse2_movdqu\"\n   [(set (match_operand:TI 0 \"nonimmediate_operand\" \"=x,m\")\n-\t(unspec:TI [(match_operand:TI 1 \"general_operand\" \"xm,x\")] 39))]\n+\t(unspec:TI [(match_operand:TI 1 \"general_operand\" \"xm,x\")]\n+\t\t   UNSPEC_MOVU))]\n   \"TARGET_SSE2\"\n   \"@\n    movdqu\\t{%1, %0|%0, %1}\n@@ -20943,23 +21006,25 @@\n   [(set (match_operand:V2DF 0 \"register_operand\" \"=x\")\n         (unspec:V2DF [(match_operand:V2DF 1 \"register_operand\" \"0\")\n \t\t      (match_operand:V2DF 2 \"nonimmediate_operand\" \"xm\")\n-\t\t      (match_operand:SI 3 \"immediate_operand\" \"i\")] 41))]\n+\t\t      (match_operand:SI 3 \"immediate_operand\" \"i\")]\n+\t\t     UNSPEC_SHUFFLE))]\n   \"TARGET_SSE2\"\n   ;; @@@ check operand order for intel/nonintel syntax\n   \"shufpd\\t{%3, %2, %0|%0, %2, %3}\"\n   [(set_attr \"type\" \"ssecvt\")\n    (set_attr \"mode\" \"V2DF\")])\n \n (define_insn \"sse2_clflush\"\n-  [(unspec_volatile [(match_operand:SI 0 \"address_operand\" \"p\")] 57)]\n+  [(unspec_volatile [(match_operand:SI 0 \"address_operand\" \"p\")]\n+\t\t    UNSPECV_CLFLUSH)]\n   \"TARGET_SSE2\"\n   \"clflush %0\"\n   [(set_attr \"type\" \"sse\")\n    (set_attr \"memory\" \"unknown\")])\n \n (define_expand \"sse2_mfence\"\n   [(set (match_dup 0)\n-\t(unspec:BLK [(match_dup 0)] 59))]\n+\t(unspec:BLK [(match_dup 0)] UNSPEC_MFENCE))]\n   \"TARGET_SSE2\"\n {\n   operands[0] = gen_rtx_MEM (BLKmode, gen_rtx_SCRATCH (Pmode));\n@@ -20968,15 +21033,15 @@\n \n (define_insn \"*mfence_insn\"\n   [(set (match_operand:BLK 0 \"\" \"\")\n-\t(unspec:BLK [(match_dup 0)] 59))]\n+\t(unspec:BLK [(match_dup 0)] UNSPEC_MFENCE))]\n   \"TARGET_SSE2\"\n   \"mfence\"\n   [(set_attr \"type\" \"sse\")\n    (set_attr \"memory\" \"unknown\")])\n \n (define_expand \"sse2_lfence\"\n   [(set (match_dup 0)\n-\t(unspec:BLK [(match_dup 0)] 60))]\n+\t(unspec:BLK [(match_dup 0)] UNSPEC_LFENCE))]\n   \"TARGET_SSE2\"\n {\n   operands[0] = gen_rtx_MEM (BLKmode, gen_rtx_SCRATCH (Pmode));\n@@ -20985,7 +21050,7 @@\n \n (define_insn \"*lfence_insn\"\n   [(set (match_operand:BLK 0 \"\" \"\")\n-\t(unspec:BLK [(match_dup 0)] 60))]\n+\t(unspec:BLK [(match_dup 0)] UNSPEC_LFENCE))]\n   \"TARGET_SSE2\"\n   \"lfence\"\n   [(set_attr \"type\" \"sse\")"}]}