{"sha": "879fb1de5c8670e52d298bcbaa5278d4794fbe4e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODc5ZmIxZGU1Yzg2NzBlNTJkMjk4YmNiYWE1Mjc4ZDQ3OTRmYmU0ZQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@yorick.cygnus.com", "date": "1998-10-26T00:48:20Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1998-10-26T00:48:20Z"}, "message": "typeck.c (convert_arguments): Don't handle pmf references specially.\n\n\t* typeck.c (convert_arguments): Don't handle pmf references\n\tspecially.\n\t* init.c (build_member_call): Don't try to convert to the base type\n\tif it's ambiguous.\n\t* typeck2.c (check_for_new_type): Don't depend on pedantic.\n\nFrom-SVN: r23338", "tree": {"sha": "83e85864922eb01b5b4ba921cd412652f02ad0ca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/83e85864922eb01b5b4ba921cd412652f02ad0ca"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/879fb1de5c8670e52d298bcbaa5278d4794fbe4e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/879fb1de5c8670e52d298bcbaa5278d4794fbe4e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/879fb1de5c8670e52d298bcbaa5278d4794fbe4e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/879fb1de5c8670e52d298bcbaa5278d4794fbe4e/comments", "author": null, "committer": null, "parents": [{"sha": "083c24ed0037e8e50729fb9534d64b3003592d5c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/083c24ed0037e8e50729fb9534d64b3003592d5c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/083c24ed0037e8e50729fb9534d64b3003592d5c"}], "stats": {"total": 25, "additions": 16, "deletions": 9}, "files": [{"sha": "4a22f1ec2b7114a338ec7e94c8832cfa9daba7b0", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/879fb1de5c8670e52d298bcbaa5278d4794fbe4e/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/879fb1de5c8670e52d298bcbaa5278d4794fbe4e/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=879fb1de5c8670e52d298bcbaa5278d4794fbe4e", "patch": "@@ -1,3 +1,13 @@\n+1998-10-26  Jason Merrill  <jason@yorick.cygnus.com>\n+\n+\t* typeck.c (convert_arguments): Don't handle pmf references \n+\tspecially.\n+\n+\t* init.c (build_member_call): Don't try to convert to the base type\n+\tif it's ambiguous.\n+\n+\t* typeck2.c (check_for_new_type): Don't depend on pedantic.\n+\n 1998-10-25  Mark Mitchell  <mark@markmitchell.com>\n \n \t* decl.c (grokdeclarator): Set DECL_NONCONVERTING_P for all"}, {"sha": "3b3ee7f6cc45bd419debf343a115715c0a0e552c", "filename": "gcc/cp/init.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/879fb1de5c8670e52d298bcbaa5278d4794fbe4e/gcc%2Fcp%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/879fb1de5c8670e52d298bcbaa5278d4794fbe4e/gcc%2Fcp%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Finit.c?ref=879fb1de5c8670e52d298bcbaa5278d4794fbe4e", "patch": "@@ -1417,8 +1417,11 @@ build_member_call (type, name, parmlist)\n   decl = maybe_dummy_object (type, &basetype_path);\n \n   /* Convert 'this' to the specified type to disambiguate conversion\n-     to the function's context.  */\n-  if (decl == current_class_ref)\n+     to the function's context.  Apparently Standard C++ says that we\n+     shouldn't do this.  */\n+  if (decl == current_class_ref\n+      && ! pedantic\n+      && ACCESSIBLY_UNIQUELY_DERIVED_P (type, current_class_type))\n     {\n       tree olddecl = current_class_ptr;\n       tree oldtype = TREE_TYPE (TREE_TYPE (olddecl));"}, {"sha": "5030030af946ac31d1e4015c5d0ae6541bd4699e", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/879fb1de5c8670e52d298bcbaa5278d4794fbe4e/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/879fb1de5c8670e52d298bcbaa5278d4794fbe4e/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=879fb1de5c8670e52d298bcbaa5278d4794fbe4e", "patch": "@@ -3063,12 +3063,6 @@ convert_arguments (typelist, values, fndecl, flags)\n \t    error (\"insufficient type information in parameter list\");\n \t  val = integer_zero_node;\n \t}\n-      else if (TREE_CODE (val) == OFFSET_REF\n-\t    && TREE_CODE (TREE_TYPE (val)) == METHOD_TYPE)\n-\t{\n-\t  /* This is unclean.  Should be handled elsewhere.  */\n-\t  val = build_unary_op (ADDR_EXPR, val, 0);\n-\t}\n       else if (TREE_CODE (val) == OFFSET_REF)\n \tval = resolve_offset_ref (val);\n "}, {"sha": "8fa70c9fb961c3cb6379b195bc40f7834aa46fa1", "filename": "gcc/cp/typeck2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/879fb1de5c8670e52d298bcbaa5278d4794fbe4e/gcc%2Fcp%2Ftypeck2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/879fb1de5c8670e52d298bcbaa5278d4794fbe4e/gcc%2Fcp%2Ftypeck2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck2.c?ref=879fb1de5c8670e52d298bcbaa5278d4794fbe4e", "patch": "@@ -1659,6 +1659,6 @@ check_for_new_type (string, inptree)\n      char *string;\n      flagged_type_tree inptree;\n {\n-  if (pedantic && inptree.new_type_flag)\n+  if (inptree.new_type_flag)\n     pedwarn (\"ANSI C++ forbids defining types within %s\",string);\n }"}]}