{"sha": "599780d601abd0e67814a07d9574cc00f227ea5e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTk5NzgwZDYwMWFiZDBlNjc4MTRhMDdkOTU3NGNjMDBmMjI3ZWE1ZQ==", "commit": {"author": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2019-07-25T19:39:04Z"}, "committer": {"name": "Martin Sebor", "email": "msebor@gcc.gnu.org", "date": "2019-07-25T19:39:04Z"}, "message": "Wstringop-overflow-14.c: Disable for stricly aligned targets.\n\ngcc/testsuite/ChangeLog:\n\t* gcc.dg/Wstringop-overflow-14.c: Disable for stricly aligned targets.\n\nFrom-SVN: r273814", "tree": {"sha": "f74eb4ef688268eec5831317e778bc197adf02a4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f74eb4ef688268eec5831317e778bc197adf02a4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/599780d601abd0e67814a07d9574cc00f227ea5e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/599780d601abd0e67814a07d9574cc00f227ea5e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/599780d601abd0e67814a07d9574cc00f227ea5e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/599780d601abd0e67814a07d9574cc00f227ea5e/comments", "author": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f2d52e0042fb5027ae6f8af48e39071648c6b65e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2d52e0042fb5027ae6f8af48e39071648c6b65e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f2d52e0042fb5027ae6f8af48e39071648c6b65e"}], "stats": {"total": 10, "additions": 9, "deletions": 1}, "files": [{"sha": "f1f1cbe37e6f38e83937bcf654e2907259a62dfe", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/599780d601abd0e67814a07d9574cc00f227ea5e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/599780d601abd0e67814a07d9574cc00f227ea5e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=599780d601abd0e67814a07d9574cc00f227ea5e", "patch": "@@ -2,6 +2,7 @@\n \n \tPR tree-optimization/91183\n \tPR tree-optimization/86688\n+\t* gcc.dg/Wstringop-overflow-14.c: Disable for stricly aligned targets.\n \t* gcc.dg/strlenopt-70.c: Fix bugs.\n \t* gcc.dg/strlenopt-71.c: Same.\n \t* gcc.dg/strlenopt-72.c: Same."}, {"sha": "d6201b068b6399c9f670b2a80f0a76ab16279492", "filename": "gcc/testsuite/gcc.dg/Wstringop-overflow-14.c", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/599780d601abd0e67814a07d9574cc00f227ea5e/gcc%2Ftestsuite%2Fgcc.dg%2FWstringop-overflow-14.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/599780d601abd0e67814a07d9574cc00f227ea5e/gcc%2Ftestsuite%2Fgcc.dg%2FWstringop-overflow-14.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2FWstringop-overflow-14.c?ref=599780d601abd0e67814a07d9574cc00f227ea5e", "patch": "@@ -2,7 +2,7 @@\n    types than char are diagnosed.\n    { dg-do compile }\n    { dg-require-effective-target int32plus }\n-   { dg-options \"-O2 -Wall\" } */\n+   { dg-options \"-O2 -Wall -Wno-array-bounds\" } */\n \n typedef __INT16_TYPE__  int16_t;\n typedef __INT32_TYPE__  int32_t;\n@@ -21,6 +21,13 @@ void test_memcpy_cond (int i)\n {\n   char *p = a4 + 1;\n   const char *q = i ? s4 : t4;\n+  // On strictly aligned target the call below is left unchanged and\n+  // triggers (inaccurately) a -Warray-bounds.  The test suppresses\n+  // the warning above, which then lets -Wstringop-overrflow detect\n+  // the overflow just before expansion.\n+  // On other targets it's transformed into a store of a 4-byte integer\n+  // which is detected by -Wstringop-overrflow in the strlen pass (i.e.,\n+  // before it gets to expansion).\n   memcpy (p, q, 4);         // { dg-warning \"writing 4 bytes into a region of size 3\" }\n }\n "}]}