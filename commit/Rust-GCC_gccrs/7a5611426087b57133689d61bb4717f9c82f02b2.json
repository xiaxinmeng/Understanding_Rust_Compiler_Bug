{"sha": "7a5611426087b57133689d61bb4717f9c82f02b2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2E1NjExNDI2MDg3YjU3MTMzNjg5ZDYxYmI0NzE3ZjljODJmMDJiMg==", "commit": {"author": {"name": "Gabriel Dos Reis", "email": "gdr@nerim.net", "date": "2002-07-20T12:45:45Z"}, "committer": {"name": "Gabriel Dos Reis", "email": "gdr@gcc.gnu.org", "date": "2002-07-20T12:45:45Z"}, "message": "spew.c (struct uinparsed_test): Replace 'filename' and 'lineno' members with 'locus'.\n\n        * spew.c (struct uinparsed_test): Replace 'filename' and 'lineno'\n        members with 'locus'.  Adjust use throughout.\n        (struct feed):  Likewise.\n        (alloc_unparsed_test): Change prototype, take a 'const location_t *'.\n        Adjust use.\n        (snarf_defarg): Use error(), not error_with_file_and_line().\n\nFrom-SVN: r55610", "tree": {"sha": "ebd6b620d9bb852bb4446d7075d7290fc2722386", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ebd6b620d9bb852bb4446d7075d7290fc2722386"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7a5611426087b57133689d61bb4717f9c82f02b2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a5611426087b57133689d61bb4717f9c82f02b2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7a5611426087b57133689d61bb4717f9c82f02b2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a5611426087b57133689d61bb4717f9c82f02b2/comments", "author": null, "committer": null, "parents": [{"sha": "3d1fc12974737e18ecaadc71ee9ee84c3f443bc0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d1fc12974737e18ecaadc71ee9ee84c3f443bc0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3d1fc12974737e18ecaadc71ee9ee84c3f443bc0"}], "stats": {"total": 68, "additions": 35, "deletions": 33}, "files": [{"sha": "efe479b72b44168d33b0b2010699d7e3ad2384dd", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a5611426087b57133689d61bb4717f9c82f02b2/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a5611426087b57133689d61bb4717f9c82f02b2/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=7a5611426087b57133689d61bb4717f9c82f02b2", "patch": "@@ -1,3 +1,12 @@\n+2002-07-20  Gabriel Dos Reis  <gdr@nerim.net>\n+\n+\t* spew.c (struct uinparsed_test): Replace 'filename' and 'lineno'\n+\tmembers with 'locus'.  Adjust use throughout.\n+\t(struct feed):  Likewise.\n+\t(alloc_unparsed_test): Change prototype, take a 'const location_t *'.\n+\tAdjust use.\n+\t(snarf_defarg): Use error(), not error_with_file_and_line().\n+\n 2002-07-19  Chris Demetriou  <cgd@broadcom.com>\n \n \t* lang-specs.h (@c++): Include \"%2\" (cc1plus_spec) wherever"}, {"sha": "85f5cdac77234e2b2e7b364e46e1dfd1af93a0d5", "filename": "gcc/cp/spew.c", "status": "modified", "additions": 26, "deletions": 33, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a5611426087b57133689d61bb4717f9c82f02b2/gcc%2Fcp%2Fspew.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a5611426087b57133689d61bb4717f9c82f02b2/gcc%2Fcp%2Fspew.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fspew.c?ref=7a5611426087b57133689d61bb4717f9c82f02b2", "patch": "@@ -79,8 +79,7 @@ struct unparsed_text GTY(())\n {\n   struct unparsed_text *next;\t/* process this one next */\n   tree decl;\t\t/* associated declaration */\n-  const char *filename;\t/* name of file we were processing */\n-  int lineno;\t\t/* line number we got the text from */\n+  location_t locus;     /* location we got the text from */\n   int interface;\t/* remembering interface_unknown and interface_only */\n \n   struct token_chunk * tokens; /* Start of the token list.  */\n@@ -98,8 +97,7 @@ struct unparsed_text GTY(())\n struct feed GTY(())\n {\n   struct unparsed_text *input;\n-  const char *filename;\n-  int lineno;\n+  location_t locus;\n   int yychar;\n   YYSTYPE GTY ((desc (\"%1.yychar\"))) yylval;\n   int first_token;\n@@ -131,7 +129,7 @@ static SPEW_INLINE struct token * space_for_token\n static SPEW_INLINE struct token * remove_last_token\n   PARAMS ((struct unparsed_text *t));\n static struct unparsed_text * alloc_unparsed_text\n-  PARAMS ((const char *fn, int li, tree decl, int interface));\n+  PARAMS ((const location_t *, tree decl, int interface));\n \n static void snarf_block PARAMS ((struct unparsed_text *t));\n static tree snarf_defarg PARAMS ((void));\n@@ -403,20 +401,20 @@ feed_input (input)\n #ifdef SPEW_DEBUG\n   if (spew_debug)\n     fprintf (stderr, \"\\tfeeding %s:%d [%d tokens]\\n\",\n-\t     input->filename, input->lineno, input->limit - input->pos);\n+\t     input->locus.file, input->locus.line, input->limit - input->pos);\n #endif\n \n   f->input = input;\n-  f->filename = input_filename;\n-  f->lineno = lineno;\n+  f->locus.file = input_filename;\n+  f->locus.line = lineno;\n   f->yychar = yychar;\n   f->yylval = yylval;\n   f->first_token = first_token;\n   f->token_obstack = token_obstack;\n   f->next = feed;\n \n-  input_filename = input->filename;\n-  lineno = input->lineno;\n+  input_filename = input->locus.file;\n+  lineno = input->locus.line;\n   yychar = YYEMPTY;\n   yylval.ttype = NULL_TREE;\n   first_token = 0;\n@@ -429,8 +427,8 @@ end_input ()\n {\n   struct feed *f = feed;\n \n-  input_filename = f->filename;\n-  lineno = f->lineno;\n+  input_filename = f->locus.file;\n+  lineno = f->locus.line;\n   yychar = f->yychar;\n   yylval = f->yylval;\n   first_token = f->first_token;\n@@ -1070,17 +1068,15 @@ remove_last_token (t)\n \n /* Allocate an 'unparsed_text' structure, ready to use space_for_token.  */\n static struct unparsed_text *\n-alloc_unparsed_text (fn, li, decl, interface)\n-     const char *fn;\n-     int li;\n+alloc_unparsed_text (locus, decl, interface)\n+     const location_t *locus;\n      tree decl;\n      int interface;\n {\n   struct unparsed_text *r;\n   r = ggc_alloc_cleared (sizeof (*r));\n   r->decl = decl;\n-  r->filename = fn;\n-  r->lineno = li;\n+  r->locus = *locus;\n   r->interface = interface;\n   r->tokens = r->last_chunk = ggc_alloc_cleared (sizeof (*r->tokens));\n   return r;\n@@ -1166,8 +1162,7 @@ snarf_block (t)\n \t}\n       else if (yyc == 0)\n \t{\n-\t  error_with_file_and_line (t->filename, t->lineno,\n-\t\t\t\t    \"end of file read inside definition\");\n+\t  error (\"%Hend of file read inside definition\", &t->locus);\n \t  break;\n \t}\n     }\n@@ -1179,13 +1174,13 @@ void\n snarf_method (decl)\n      tree decl;\n {\n-  int starting_lineno = lineno;\n-  const char *starting_filename = input_filename;\n   struct unparsed_text *meth;\n+  location_t starting;\n+  starting.file = input_filename;\n+  starting.line = lineno;\n \n-  meth = alloc_unparsed_text (starting_filename, starting_lineno, decl,\n-\t\t\t      (interface_unknown ? 1\n-\t\t\t       : (interface_only ? 0 : 2)));\n+  meth = alloc_unparsed_text (&starting, decl, (interface_unknown ? 1\n+\t\t\t\t\t\t: (interface_only ? 0 : 2)));\n \n   snarf_block (meth);\n \n@@ -1198,8 +1193,7 @@ snarf_method (decl)\n #ifdef SPEW_DEBUG\n   if (spew_debug)\n     fprintf (stderr, \"\\tsaved method of %d tokens from %s:%d\\n\",\n-\t     meth->limit,\n-\t     starting_filename, starting_lineno);\n+\t     meth->limit, starting.file, starting.line);\n #endif\n \n   DECL_PENDING_INLINE_INFO (decl) = meth;\n@@ -1218,14 +1212,15 @@ snarf_method (decl)\n static tree\n snarf_defarg ()\n {\n-  int starting_lineno = lineno;\n-  const char *starting_filename = input_filename;\n   int yyc;\n   int plev = 0;\n   struct unparsed_text *buf;\n   tree arg;\n+  location_t starting;\n+  starting.file = input_filename;\n+  starting.line = lineno;\n \n-  buf = alloc_unparsed_text (starting_filename, starting_lineno, 0, 0);\n+  buf = alloc_unparsed_text (&starting, 0, 0);\n \n   for (;;)\n     {\n@@ -1239,8 +1234,7 @@ snarf_defarg ()\n \t--plev;\n       else if (yyc == 0)\n \t{\n-\t  error_with_file_and_line (starting_filename, starting_lineno,\n-\t\t\t\t    \"end of file read inside default argument\");\n+\t  error (\"%Hend of file read inside default argument\", &starting);\n \t  goto done;\n \t}\n     }\n@@ -1252,8 +1246,7 @@ snarf_defarg ()\n #ifdef SPEW_DEBUG\n   if (spew_debug)\n     fprintf (stderr, \"\\tsaved defarg of %d tokens from %s:%d\\n\",\n-\t     buf->limit,\n-\t     starting_filename, starting_lineno);\n+\t     buf->limit, starting.file, starting.line);\n #endif\n \n   arg = make_node (DEFAULT_ARG);"}]}