{"sha": "edc5f63bf6f3be7c7288a1692734f08c88cc13b8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWRjNWY2M2JmNmYzYmU3YzcyODhhMTY5MjczNGYwOGM4OGNjMTNiOA==", "commit": {"author": {"name": "Daniel Franke", "email": "franke.daniel@gmail.com", "date": "2007-04-24T00:02:46Z"}, "committer": {"name": "Daniel Franke", "email": "dfranke@gcc.gnu.org", "date": "2007-04-24T00:02:46Z"}, "message": "invoke.texi: Removed leading '-' from option index entries.\n\n2007-04-24  Daniel Franke  <franke.daniel@gmail.com>\n\n       * doc/invoke.texi: Removed leading '-' from option index entries.\n\nFrom-SVN: r124092", "tree": {"sha": "aed1be4e50d13da89351fa72ebd4ed7007ea0a8f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aed1be4e50d13da89351fa72ebd4ed7007ea0a8f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/edc5f63bf6f3be7c7288a1692734f08c88cc13b8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/edc5f63bf6f3be7c7288a1692734f08c88cc13b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/edc5f63bf6f3be7c7288a1692734f08c88cc13b8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/edc5f63bf6f3be7c7288a1692734f08c88cc13b8/comments", "author": {"login": "dfranke76", "id": 15729164, "node_id": "MDQ6VXNlcjE1NzI5MTY0", "avatar_url": "https://avatars.githubusercontent.com/u/15729164?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dfranke76", "html_url": "https://github.com/dfranke76", "followers_url": "https://api.github.com/users/dfranke76/followers", "following_url": "https://api.github.com/users/dfranke76/following{/other_user}", "gists_url": "https://api.github.com/users/dfranke76/gists{/gist_id}", "starred_url": "https://api.github.com/users/dfranke76/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dfranke76/subscriptions", "organizations_url": "https://api.github.com/users/dfranke76/orgs", "repos_url": "https://api.github.com/users/dfranke76/repos", "events_url": "https://api.github.com/users/dfranke76/events{/privacy}", "received_events_url": "https://api.github.com/users/dfranke76/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b2b89b8db59dcc507c64f71229f6052bb5d41d3b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b2b89b8db59dcc507c64f71229f6052bb5d41d3b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b2b89b8db59dcc507c64f71229f6052bb5d41d3b"}], "stats": {"total": 82, "additions": 43, "deletions": 39}, "files": [{"sha": "d7ef0c9a1a345c65af62320cabb0c29fe68e8d0b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/edc5f63bf6f3be7c7288a1692734f08c88cc13b8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/edc5f63bf6f3be7c7288a1692734f08c88cc13b8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=edc5f63bf6f3be7c7288a1692734f08c88cc13b8", "patch": "@@ -1,3 +1,7 @@\n+2007-04-24  Daniel Franke  <franke.daniel@gmail.com>\n+\n+\t* doc/invoke.texi: Removed leading '-' from option index entries.\n+\n 2007-04-23  Zdenek Dvorak  <dvorakz@suse.cz>\n \n \t* tree-phinodes.c (reserve_phi_args_for_new_edge, remove_phi_node):"}, {"sha": "c6ddd9fb4bb6c9d2e86bc581d8723135a4020013", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 39, "deletions": 39, "changes": 78, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/edc5f63bf6f3be7c7288a1692734f08c88cc13b8/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/edc5f63bf6f3be7c7288a1692734f08c88cc13b8/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=edc5f63bf6f3be7c7288a1692734f08c88cc13b8", "patch": "@@ -3016,7 +3016,7 @@ cases that are safe.\n \n @item -Wstrict-overflow\n @item -Wstrict-overflow=@var{n}\n-@opindex -Wstrict-overflow\n+@opindex Wstrict-overflow\n This option is only active when @option{-fstrict-overflow} is active.\n It warns about cases where the compiler optimizes based on the\n assumption that signed overflow does not occur.  Note that it does not\n@@ -5232,7 +5232,7 @@ the condition is known to be true or false.\n Enabled at levels @option{-O2}, @option{-O3}, @option{-Os}.\n \n @item -fsplit-wide-types\n-@opindex -fsplit-wide-types\n+@opindex fsplit-wide-types\n When using a type that occupies multiple registers, such as @code{long\n long} on a 32-bit system, split the registers apart and allocate them\n independently.  This normally generates better code for those types,\n@@ -5640,7 +5640,7 @@ the loop is entered.  This usually makes programs run more slowly.\n @option{-funroll-loops},\n \n @item -fsplit-ivs-in-unroller\n-@opindex -fsplit-ivs-in-unroller\n+@opindex fsplit-ivs-in-unroller\n Enables expressing of values of induction variables in later iterations\n of the unrolled loop using the value in the first iteration.  This breaks\n long dependency chains, thus improving efficiency of the scheduling passes.\n@@ -5653,7 +5653,7 @@ on some of the architectures due to restrictions in the CSE pass.\n This optimization is enabled by default.\n \n @item -fvariable-expansion-in-unroller\n-@opindex -fvariable-expansion-in-unroller\n+@opindex fvariable-expansion-in-unroller\n With this option, the compiler will create multiple copies of some\n local variables when unrolling a loop which can result in superior code.\n \n@@ -8655,13 +8655,13 @@ warn about constructs contained within header files found via\n @var{dir}.  This option is valid only for the C family of languages.\n \n @item -gused\n-@opindex -gused\n+@opindex gused\n Emit debugging information for symbols that are used.  For STABS\n debugging format, this enables @option{-feliminate-unused-debug-symbols}.\n This is by default ON@.\n \n @item -gfull\n-@opindex -gfull\n+@opindex gfull\n Emit debugging information for all symbols and types.\n \n @item -mmacosx-version-min=@var{version}\n@@ -8683,7 +8683,7 @@ applicable.  This mode also sets @option{-mno-altivec},\n @option{-mlong-branch} for PowerPC targets.\n \n @item -mone-byte-bool\n-@opindex -mone-byte-bool\n+@opindex mone-byte-bool\n Override the defaults for @samp{bool} so that @samp{sizeof(bool)==1}.\n By default @samp{sizeof(bool)} is @samp{4} when compiling for\n Darwin/PowerPC and @samp{1} when compiling for Darwin/x86, so this\n@@ -8732,12 +8732,12 @@ This option specifies the @var{executable} that will be loading the build\n output file being linked.  See man ld(1) for more information.\n \n @item -dynamiclib\n-@opindex -dynamiclib\n+@opindex dynamiclib\n When passed this option, GCC will produce a dynamic library instead of\n an executable when linking, using the Darwin @file{libtool} command.\n \n @item -force_cpusubtype_ALL\n-@opindex -force_cpusubtype_ALL\n+@opindex force_cpusubtype_ALL\n This causes GCC's output file to have the @var{ALL} subtype, instead of\n one controlled by the @option{-mcpu} or @option{-march} option.\n \n@@ -10209,15 +10209,15 @@ the file containing the CPU detection code should be compiled without\n these options.\n \n @item -mcx16\n-@opindex -mcx16\n+@opindex mcx16\n This option will enable GCC to use CMPXCHG16B instruction in generated code.\n CMPXCHG16B allows for atomic operations on 128-bit double quadword (or oword)\n data types.  This is useful for high resolution counters that could be updated\n by multiple processors (or cores).  This instruction is generated as part of\n atomic built-in functions: see @ref{Atomic Builtins} for details.\n \n @item -msahf\n-@opindex -msahf\n+@opindex msahf\n This option will enable GCC to use SAHF instruction in generated 64-bit code.\n Early Intel CPUs with Intel 64 lacked LAHF and SAHF instructions supported\n by AMD64 until introduction of Pentium 4 G1 step in December 2005.  LAHF and\n@@ -10497,26 +10497,26 @@ to 64 bits.  These are HP-UX specific flags.\n \n @item -mno-sched-br-data-spec\n @itemx -msched-br-data-spec\n-@opindex -mno-sched-br-data-spec\n-@opindex -msched-br-data-spec\n+@opindex mno-sched-br-data-spec\n+@opindex msched-br-data-spec\n (Dis/En)able data speculative scheduling before reload.\n This will result in generation of the ld.a instructions and\n the corresponding check instructions (ld.c / chk.a).\n The default is 'disable'.\n \n @item -msched-ar-data-spec\n @itemx -mno-sched-ar-data-spec\n-@opindex -msched-ar-data-spec\n-@opindex -mno-sched-ar-data-spec\n+@opindex msched-ar-data-spec\n+@opindex mno-sched-ar-data-spec\n (En/Dis)able data speculative scheduling after reload.\n This will result in generation of the ld.a instructions and\n the corresponding check instructions (ld.c / chk.a).\n The default is 'enable'.\n \n @item -mno-sched-control-spec\n @itemx -msched-control-spec\n-@opindex -mno-sched-control-spec\n-@opindex -msched-control-spec\n+@opindex mno-sched-control-spec\n+@opindex msched-control-spec\n (Dis/En)able control speculative scheduling.  This feature is\n available only during region scheduling (i.e. before reload).\n This will result in generation of the ld.s instructions and\n@@ -10525,44 +10525,44 @@ The default is 'disable'.\n \n @item -msched-br-in-data-spec\n @itemx -mno-sched-br-in-data-spec\n-@opindex -msched-br-in-data-spec\n-@opindex -mno-sched-br-in-data-spec\n+@opindex msched-br-in-data-spec\n+@opindex mno-sched-br-in-data-spec\n (En/Dis)able speculative scheduling of the instructions that\n are dependent on the data speculative loads before reload.\n This is effective only with @option{-msched-br-data-spec} enabled.\n The default is 'enable'.\n \n @item -msched-ar-in-data-spec\n @itemx -mno-sched-ar-in-data-spec\n-@opindex -msched-ar-in-data-spec\n-@opindex -mno-sched-ar-in-data-spec\n+@opindex msched-ar-in-data-spec\n+@opindex mno-sched-ar-in-data-spec\n (En/Dis)able speculative scheduling of the instructions that\n are dependent on the data speculative loads after reload.\n This is effective only with @option{-msched-ar-data-spec} enabled.\n The default is 'enable'.\n \n @item -msched-in-control-spec\n @itemx -mno-sched-in-control-spec\n-@opindex -msched-in-control-spec\n-@opindex -mno-sched-in-control-spec\n+@opindex msched-in-control-spec\n+@opindex mno-sched-in-control-spec\n (En/Dis)able speculative scheduling of the instructions that\n are dependent on the control speculative loads.\n This is effective only with @option{-msched-control-spec} enabled.\n The default is 'enable'.\n \n @item -msched-ldc\n @itemx -mno-sched-ldc\n-@opindex -msched-ldc\n-@opindex -mno-sched-ldc\n+@opindex msched-ldc\n+@opindex mno-sched-ldc\n (En/Dis)able use of simple data speculation checks ld.c .\n If disabled, only chk.a instructions will be emitted to check\n data speculative loads.\n The default is 'enable'.\n \n @item -mno-sched-control-ldc\n @itemx -msched-control-ldc\n-@opindex -mno-sched-control-ldc\n-@opindex -msched-control-ldc\n+@opindex mno-sched-control-ldc\n+@opindex msched-control-ldc\n (Dis/En)able use of ld.c instructions to check control speculative loads.\n If enabled, in case of control speculative load with no speculatively\n scheduled dependent instructions this load will be emitted as ld.sa and\n@@ -10571,32 +10571,32 @@ The default is 'disable'.\n \n @item -mno-sched-spec-verbose\n @itemx -msched-spec-verbose\n-@opindex -mno-sched-spec-verbose\n-@opindex -msched-spec-verbose\n+@opindex mno-sched-spec-verbose\n+@opindex msched-spec-verbose\n (Dis/En)able printing of the information about speculative motions.\n \n @item -mno-sched-prefer-non-data-spec-insns\n @itemx -msched-prefer-non-data-spec-insns\n-@opindex -mno-sched-prefer-non-data-spec-insns\n-@opindex -msched-prefer-non-data-spec-insns\n+@opindex mno-sched-prefer-non-data-spec-insns\n+@opindex msched-prefer-non-data-spec-insns\n If enabled, data speculative instructions will be chosen for schedule\n only if there are no other choices at the moment.  This will make\n the use of the data speculation much more conservative.\n The default is 'disable'.\n \n @item -mno-sched-prefer-non-control-spec-insns\n @itemx -msched-prefer-non-control-spec-insns\n-@opindex -mno-sched-prefer-non-control-spec-insns\n-@opindex -msched-prefer-non-control-spec-insns\n+@opindex mno-sched-prefer-non-control-spec-insns\n+@opindex msched-prefer-non-control-spec-insns\n If enabled, control speculative instructions will be chosen for schedule\n only if there are no other choices at the moment.  This will make\n the use of the control speculation much more conservative.\n The default is 'disable'.\n \n @item -mno-sched-count-spec-in-critical-path\n @itemx -msched-count-spec-in-critical-path\n-@opindex -mno-sched-count-spec-in-critical-path\n-@opindex -msched-count-spec-in-critical-path\n+@opindex mno-sched-count-spec-in-critical-path\n+@opindex msched-count-spec-in-critical-path\n If enabled, speculative dependencies will be considered during\n computation of the instructions priorities.  This will make the use of the\n speculation a bit more conservative.\n@@ -11007,7 +11007,7 @@ Additionally, parameters passed on the stack are also aligned to a\n 16-bit boundary even on targets whose API mandates promotion to 32-bit.\n \n @item -mno-short\n-@opindex -mno-short\n+@opindex mno-short\n Do not consider type @code{int} to be 16 bits wide.  This is the default.\n \n @item -mnobitfield\n@@ -13025,15 +13025,15 @@ These options are defined for Score implementations:\n Compile code for big endian mode.  This is the default.\n \n @item -mel\n-@opindex -mel\n+@opindex mel\n Compile code for little endian mode. \n \n @item -mnhwloop\n-@opindex -mnhwloop\n+@opindex mnhwloop\n Disable generate bcnz instruction.\n \n @item -muls\n-@opindex -muls\n+@opindex muls\n Enable generate unaligned load and store instruction.\n \n @item -mmac"}]}