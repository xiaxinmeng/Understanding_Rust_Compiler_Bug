{"sha": "f4fda3eec408e1eb12cc966f55f0de396be71597", "node_id": "C_kwDOANBUbNoAKGY0ZmRhM2VlYzQwOGUxZWIxMmNjOTY2ZjU1ZjBkZTM5NmJlNzE1OTc", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2022-10-20T06:55:36Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2022-10-20T14:11:22Z"}, "message": "Do not set NAN flags for VARYING ranges when !HONOR_NANS.\n\nSince NANs can't appear in ranges for !HONOR_NANS, there's no reason\nto set them in a VARYING range.\n\ngcc/ChangeLog:\n\n\t* value-range.h (frange::set_varying): Do not set NAN flags for\n\t!HONOR_NANS.\n\t* value-range.cc (frange::normalize_kind): Adjust for no NAN when\n\t!HONOR_NANS.\n\t(frange::verify_range): Same.\n\t* range-op-float.cc (maybe_isnan): Remove flag_finite_math_only check.", "tree": {"sha": "0f8e7c96459b453de04a3a7b740e580229bfcfdd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0f8e7c96459b453de04a3a7b740e580229bfcfdd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f4fda3eec408e1eb12cc966f55f0de396be71597", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4fda3eec408e1eb12cc966f55f0de396be71597", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f4fda3eec408e1eb12cc966f55f0de396be71597", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4fda3eec408e1eb12cc966f55f0de396be71597/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "be43d5d3051589ee00f6685103539dced767c47d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be43d5d3051589ee00f6685103539dced767c47d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/be43d5d3051589ee00f6685103539dced767c47d"}], "stats": {"total": 26, "additions": 18, "deletions": 8}, "files": [{"sha": "a9e74c868772903fd2f5330fd7e8cfbadddaabe9", "filename": "gcc/range-op-float.cc", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4fda3eec408e1eb12cc966f55f0de396be71597/gcc%2Frange-op-float.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4fda3eec408e1eb12cc966f55f0de396be71597/gcc%2Frange-op-float.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frange-op-float.cc?ref=f4fda3eec408e1eb12cc966f55f0de396be71597", "patch": "@@ -171,9 +171,6 @@ range_operator_float::op1_op2_relation (const frange &lhs ATTRIBUTE_UNUSED) cons\n static inline bool\n maybe_isnan (const frange &op1, const frange &op2)\n {\n-  if (flag_finite_math_only)\n-    return false;\n-\n   return op1.maybe_isnan () || op2.maybe_isnan ();\n }\n "}, {"sha": "bcda4987307c1e8e327df8ab04755eb455e27439", "filename": "gcc/value-range.cc", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4fda3eec408e1eb12cc966f55f0de396be71597/gcc%2Fvalue-range.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4fda3eec408e1eb12cc966f55f0de396be71597/gcc%2Fvalue-range.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvalue-range.cc?ref=f4fda3eec408e1eb12cc966f55f0de396be71597", "patch": "@@ -388,15 +388,15 @@ frange::normalize_kind ()\n       && frange_val_is_min (m_min, m_type)\n       && frange_val_is_max (m_max, m_type))\n     {\n-      if (m_pos_nan && m_neg_nan)\n+      if (!HONOR_NANS (m_type) || (m_pos_nan && m_neg_nan))\n \t{\n \t  set_varying (m_type);\n \t  return true;\n \t}\n     }\n   else if (m_kind == VR_VARYING)\n     {\n-      if (!m_pos_nan || !m_neg_nan)\n+      if (HONOR_NANS (m_type) && (!m_pos_nan || !m_neg_nan))\n \t{\n \t  m_kind = VR_RANGE;\n \t  m_min = frange_val_min (m_type);\n@@ -712,14 +712,19 @@ frange::supports_type_p (const_tree type) const\n void\n frange::verify_range ()\n {\n+  if (flag_finite_math_only)\n+    gcc_checking_assert (!maybe_isnan ());\n   switch (m_kind)\n     {\n     case VR_UNDEFINED:\n       gcc_checking_assert (!m_type);\n       return;\n     case VR_VARYING:\n+      if (flag_finite_math_only)\n+\tgcc_checking_assert (!m_pos_nan && !m_neg_nan);\n+      else\n+\tgcc_checking_assert (m_pos_nan && m_neg_nan);\n       gcc_checking_assert (m_type);\n-      gcc_checking_assert (m_pos_nan && m_neg_nan);\n       gcc_checking_assert (frange_val_is_min (m_min, m_type));\n       gcc_checking_assert (frange_val_is_max (m_max, m_type));\n       return;"}, {"sha": "b48542a68aa14f1306550c7f64bd2ef9cddbd277", "filename": "gcc/value-range.h", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4fda3eec408e1eb12cc966f55f0de396be71597/gcc%2Fvalue-range.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4fda3eec408e1eb12cc966f55f0de396be71597/gcc%2Fvalue-range.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvalue-range.h?ref=f4fda3eec408e1eb12cc966f55f0de396be71597", "patch": "@@ -1103,8 +1103,16 @@ frange::set_varying (tree type)\n   m_type = type;\n   m_min = frange_val_min (type);\n   m_max = frange_val_max (type);\n-  m_pos_nan = true;\n-  m_neg_nan = true;\n+  if (HONOR_NANS (m_type))\n+    {\n+      m_pos_nan = true;\n+      m_neg_nan = true;\n+    }\n+  else\n+    {\n+      m_pos_nan = false;\n+      m_neg_nan = false;\n+    }\n }\n \n inline void"}]}