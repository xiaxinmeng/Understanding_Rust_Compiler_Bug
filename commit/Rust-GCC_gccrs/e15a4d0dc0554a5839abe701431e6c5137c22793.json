{"sha": "e15a4d0dc0554a5839abe701431e6c5137c22793", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTE1YTRkMGRjMDU1NGE1ODM5YWJlNzAxNDMxZTZjNTEzN2MyMjc5Mw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@yorick.cygnus.com", "date": "1998-10-28T21:02:49Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1998-10-28T21:02:49Z"}, "message": "class.c (instantiate_type): Don't consider templates for a normal match.\n\n\t* class.c (instantiate_type): Don't consider templates for a normal\n\tmatch.\n\nFrom-SVN: r23412", "tree": {"sha": "a287d5ae40e2c2fbe1e011355bd299548ae07800", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a287d5ae40e2c2fbe1e011355bd299548ae07800"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e15a4d0dc0554a5839abe701431e6c5137c22793", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e15a4d0dc0554a5839abe701431e6c5137c22793", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e15a4d0dc0554a5839abe701431e6c5137c22793", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e15a4d0dc0554a5839abe701431e6c5137c22793/comments", "author": null, "committer": null, "parents": [{"sha": "2455f26fc144984fa410ac85ae9efa6cbbac6ffb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2455f26fc144984fa410ac85ae9efa6cbbac6ffb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2455f26fc144984fa410ac85ae9efa6cbbac6ffb"}], "stats": {"total": 13, "additions": 10, "deletions": 3}, "files": [{"sha": "1e07758b00d2da0594167727289fa151a365da7c", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e15a4d0dc0554a5839abe701431e6c5137c22793/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e15a4d0dc0554a5839abe701431e6c5137c22793/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=e15a4d0dc0554a5839abe701431e6c5137c22793", "patch": "@@ -1,5 +1,8 @@\n 1998-10-28  Jason Merrill  <jason@yorick.cygnus.com>\n \n+\t* class.c (instantiate_type): Don't consider templates for a normal\n+\tmatch.\n+\n \t* class.c (finish_struct_1): Don't complain about non-copy\n \tassignment ops in union members.\n \n@@ -10,6 +13,7 @@\n \t(finish_prevtable_vardecl): Lose.\n \t(finish_file): Don't call it.\n \t* pt.c (instantiate_class_template): Likewise.\n+\t* cp-tree.h: Remove it.\n \n \t* init.c (build_delete): Reset TYPE_HAS_DESTRUCTOR here.\n \t* decl.c (finish_function): Not here."}, {"sha": "3cd89a6872d4322f0063c7d58c92f1a4c4eb37da", "filename": "gcc/cp/class.c", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e15a4d0dc0554a5839abe701431e6c5137c22793/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e15a4d0dc0554a5839abe701431e6c5137c22793/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=e15a4d0dc0554a5839abe701431e6c5137c22793", "patch": "@@ -5140,7 +5140,8 @@ instantiate_type (lhstype, rhs, complain)\n \telse for (elems = rhs; elems; elems = OVL_CHAIN (elems))\n \t  {\n \t    elem = OVL_FUNCTION (elems);\n-\t    if (comptypes (lhstype, TREE_TYPE (elem), 1))\n+\t    if (TREE_CODE (elem) == FUNCTION_DECL\n+\t\t&& comptypes (lhstype, TREE_TYPE (elem), 1))\n \t      {\n \t\tmark_used (elem);\n \t\treturn elem;\n@@ -5195,7 +5196,8 @@ instantiate_type (lhstype, rhs, complain)\n \t    for (elems = rhs; elems; elems = OVL_NEXT (elems))\n \t      {\n \t\telem = OVL_CURRENT (elems);\n-\t\tif (comp_target_types (lhstype, TREE_TYPE (elem), 1) > 0)\n+\t\tif (TREE_CODE (elem) == FUNCTION_DECL\n+\t\t    && comp_target_types (lhstype, TREE_TYPE (elem), 1) > 0)\n \t\t  break;\n \t      }\n \t    if (elems)\n@@ -5205,7 +5207,8 @@ instantiate_type (lhstype, rhs, complain)\n \t\t     elems = OVL_CHAIN (elems))\n \t\t  {\n \t\t    elem = OVL_FUNCTION (elems);\n-\t\t    if (comp_target_types (lhstype, TREE_TYPE (elem), 0) > 0)\n+\t\t    if (TREE_CODE (elem) == FUNCTION_DECL\n+\t\t\t&& comp_target_types (lhstype, TREE_TYPE (elem), 0) >0)\n \t\t      break;\n \t\t  }\n \t\tif (elems)"}]}