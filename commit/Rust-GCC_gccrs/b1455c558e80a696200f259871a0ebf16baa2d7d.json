{"sha": "b1455c558e80a696200f259871a0ebf16baa2d7d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjE0NTVjNTU4ZTgwYTY5NjIwMGYyNTk4NzFhMGViZjE2YmFhMmQ3ZA==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@unitus.it", "date": "2002-11-26T01:22:13Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2002-11-26T01:22:13Z"}, "message": "localename.cc (locale::_Impl::_Impl(const char*, size_t)): Avoid strtok for thread safety.\n\n2002-11-25  Paolo Carlini  <pcarlini@unitus.it>\n\t    Nathan Myers  <ncm@cantrip.org>\n\n\t* src/localename.cc\n\t(locale::_Impl::_Impl(const char*, size_t)):\n\tAvoid strtok for thread safety.\n\nCo-Authored-By: Nathan Myers <ncm@cantrip.org>\n\nFrom-SVN: r59486", "tree": {"sha": "7bca89ff40dc3a09433debe2a119abd1c08b0a3f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7bca89ff40dc3a09433debe2a119abd1c08b0a3f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b1455c558e80a696200f259871a0ebf16baa2d7d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1455c558e80a696200f259871a0ebf16baa2d7d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b1455c558e80a696200f259871a0ebf16baa2d7d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1455c558e80a696200f259871a0ebf16baa2d7d/comments", "author": null, "committer": null, "parents": [{"sha": "162c7cd92dae4c0504dd653b948369a3f593ca32", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/162c7cd92dae4c0504dd653b948369a3f593ca32", "html_url": "https://github.com/Rust-GCC/gccrs/commit/162c7cd92dae4c0504dd653b948369a3f593ca32"}], "stats": {"total": 38, "additions": 23, "deletions": 15}, "files": [{"sha": "fbf147f5a8c70625ae34d52ce6850cdda392327a", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1455c558e80a696200f259871a0ebf16baa2d7d/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1455c558e80a696200f259871a0ebf16baa2d7d/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=b1455c558e80a696200f259871a0ebf16baa2d7d", "patch": "@@ -1,3 +1,10 @@\n+2002-11-25  Paolo Carlini  <pcarlini@unitus.it>\n+            Nathan Myers  <ncm@cantrip.org>\n+\n+\t* src/localename.cc\n+\t(locale::_Impl::_Impl(const char*, size_t)):\n+\tAvoid strtok for thread safety.\n+\n 2002-11-25  Stephen M. Webb  <stephen@bregmasoft.com>\n \n   \t* testsuite/testsuite_allocator.h: New file."}, {"sha": "daed6f1f20326853c3b5ede3c20da897c02dd0e6", "filename": "libstdc++-v3/src/localename.cc", "status": "modified", "additions": 16, "deletions": 15, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1455c558e80a696200f259871a0ebf16baa2d7d/libstdc%2B%2B-v3%2Fsrc%2Flocalename.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1455c558e80a696200f259871a0ebf16baa2d7d/libstdc%2B%2B-v3%2Fsrc%2Flocalename.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Flocalename.cc?ref=b1455c558e80a696200f259871a0ebf16baa2d7d", "patch": "@@ -141,9 +141,9 @@ namespace std\n       }\n \n     // Name all the categories.\n+    size_t __len = strlen(__s) + 1;\n     if (!strchr(__s, ';'))\n       {\n-\tsize_t __len = strlen(__s) + 1;\n \tfor (size_t __i = 0; \n \t     __i < _S_categories_size + _S_extra_categories_size; ++__i)\n \t  {\n@@ -152,27 +152,28 @@ namespace std\n \t  }\n       }\n     else\n-      {\n-\tchar* __tmp = strdup(__s);\n-\t__tmp[strlen(__tmp)] = ';';\n-\tstrtok(__tmp, \"=;\");\n+     {\n+\tchar* __new;\n+\tconst char* __save = __s;\n+\tchar* __next = strpbrk(__save, \"=;\");\n+\t__save = __next + 1;\n \tfor (size_t __i = 0; \n \t     __i < _S_categories_size + _S_extra_categories_size - 1; ++__i)\n \t  {\n-\t    char* __src = strtok(NULL, \"=;\");\n-\t    char* __new = new char[strlen(__src) + 1];\n-\t    strcpy(__new, __src);\n+\t    __next = strpbrk(__save, \"=;\");\n+\t    __new = new char[__next - __save + 1];\n+\t    memcpy(__new, __save, __next - __save);\n+\t    __new[__next - __save] = '\\0';\n \t    _M_names[__i] = __new;\n-\t    strtok(NULL, \"=;\");\n+\t    __save = __next + 1;\n+\t    __next = strpbrk(__save, \"=;\");\n+\t    __save = __next + 1;\n \t  }\n-\tchar* __src = strtok(NULL, \"=;\");\n-\tchar* __new = new char[strlen(__src) + 1];\n-\tstrcpy(__new, __src);\n+\t__new = new char[__s + __len - __save];\n+\tmemcpy(__new, __save, __s + __len - __save);\n \t_M_names[_S_categories_size + _S_extra_categories_size - 1] = __new;\n-\n-\tfree(__tmp);\n       }\n-      \n+\n     // Construct all standard facets and add them to _M_facets.  \n     _M_init_facet(new std::ctype<char>(__cloc, 0, false));\n     _M_init_facet(new codecvt<char, char, mbstate_t>(__cloc));"}]}