{"sha": "099400909ed214b5fbf04404bbbc823fdb355b96", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDk5NDAwOTA5ZWQyMTRiNWZiZjA0NDA0YmJiYzgyM2ZkYjM1NWI5Ng==", "commit": {"author": {"name": "Tom de Vries", "email": "tdevries@suse.de", "date": "2018-08-04T20:07:22Z"}, "committer": {"name": "Tom de Vries", "email": "vries@gcc.gnu.org", "date": "2018-08-04T20:07:22Z"}, "message": "[libgomp, nvptx, --without-cuda-driver] Don't use system cuda driver\n\nUsing libgomp configure option --with-cuda-driver=<dir> we can indicate what\ncuda driver to use to build the libgomp nvptx plugin.  Without such an option,\nthe system cuda driver is used, if available.  If not availabe, a dlopen\ninterface is used instead.\n\nHowever, when we use --without-cuda-driver (or the equivalent\n--with-cuda-driver=no) the system cuda driver is still used if available.\n\nThis patch fixes that, making sure that --without-cuda-driver selects the dlopen\ninterface.\n\nBuild on x86_64 with nvptx accelerator and tested libgomp testsuite, with and\nwithout option --without-cuda-driver.\n\n2018-08-04  Tom de Vries  <tdevries@suse.de>\n\n\t* plugin/configfrag.ac: For --without-cuda-driver, set\n\tCUDA_DRIVER_INCLUDE and CUDA_DRIVER_LIB to no.  Handle\n\tCUDA_DRIVER_INCLUDE == no and CUDA_DRIVER_LIB == no.\n\t* configure: Regenerate.\n\nFrom-SVN: r263310", "tree": {"sha": "088ef575bf4cd22a5750acea15219ceed28ee893", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/088ef575bf4cd22a5750acea15219ceed28ee893"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/099400909ed214b5fbf04404bbbc823fdb355b96", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/099400909ed214b5fbf04404bbbc823fdb355b96", "html_url": "https://github.com/Rust-GCC/gccrs/commit/099400909ed214b5fbf04404bbbc823fdb355b96", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/099400909ed214b5fbf04404bbbc823fdb355b96/comments", "author": {"login": "vries", "id": 4057235, "node_id": "MDQ6VXNlcjQwNTcyMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vries", "html_url": "https://github.com/vries", "followers_url": "https://api.github.com/users/vries/followers", "following_url": "https://api.github.com/users/vries/following{/other_user}", "gists_url": "https://api.github.com/users/vries/gists{/gist_id}", "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vries/subscriptions", "organizations_url": "https://api.github.com/users/vries/orgs", "repos_url": "https://api.github.com/users/vries/repos", "events_url": "https://api.github.com/users/vries/events{/privacy}", "received_events_url": "https://api.github.com/users/vries/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "11fc901348dc14cc6338a4932cb2ddee396d3916", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11fc901348dc14cc6338a4932cb2ddee396d3916", "html_url": "https://github.com/Rust-GCC/gccrs/commit/11fc901348dc14cc6338a4932cb2ddee396d3916"}], "stats": {"total": 111, "additions": 70, "deletions": 41}, "files": [{"sha": "0742c78c9cce2813b2ca4962e522a7278c44db29", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/099400909ed214b5fbf04404bbbc823fdb355b96/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/099400909ed214b5fbf04404bbbc823fdb355b96/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=099400909ed214b5fbf04404bbbc823fdb355b96", "patch": "@@ -1,3 +1,10 @@\n+2018-08-04  Tom de Vries  <tdevries@suse.de>\n+\n+\t* plugin/configfrag.ac: For --without-cuda-driver, set\n+\tCUDA_DRIVER_INCLUDE and CUDA_DRIVER_LIB to no.  Handle\n+\tCUDA_DRIVER_INCLUDE == no and CUDA_DRIVER_LIB == no.\n+\t* configure: Regenerate.\n+\n 2018-08-02  Tom de Vries  <tdevries@suse.de>\n \n \tPR target/86660"}, {"sha": "b4fc9d3cc72f762afc8f2f2ad40312e8ec4f187f", "filename": "libgomp/configure", "status": "modified", "additions": 30, "deletions": 19, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/099400909ed214b5fbf04404bbbc823fdb355b96/libgomp%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/099400909ed214b5fbf04404bbbc823fdb355b96/libgomp%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Fconfigure?ref=099400909ed214b5fbf04404bbbc823fdb355b96", "patch": "@@ -15302,7 +15302,11 @@ if test \"${with_cuda_driver_lib+set}\" = set; then :\n fi\n \n case \"x$with_cuda_driver\" in\n-  x | xno) ;;\n+  x) ;;\n+  xno)\n+    CUDA_DRIVER_INCLUDE=no\n+    CUDA_DRIVER_LIB=no\n+    ;;\n   *) CUDA_DRIVER_INCLUDE=$with_cuda_driver/include\n      CUDA_DRIVER_LIB=$with_cuda_driver/lib\n      ;;\n@@ -15313,10 +15317,12 @@ fi\n if test \"x$with_cuda_driver_lib\" != x; then\n   CUDA_DRIVER_LIB=$with_cuda_driver_lib\n fi\n-if test \"x$CUDA_DRIVER_INCLUDE\" != x; then\n+if test \"x$CUDA_DRIVER_INCLUDE\" != x \\\n+   && test \"x$CUDA_DRIVER_INCLUDE\" != xno; then\n   CUDA_DRIVER_CPPFLAGS=-I$CUDA_DRIVER_INCLUDE\n fi\n-if test \"x$CUDA_DRIVER_LIB\" != x; then\n+if test \"x$CUDA_DRIVER_LIB\" != x \\\n+   && test \"x$CUDA_DRIVER_LIB\" != xno; then\n   CUDA_DRIVER_LDFLAGS=-L$CUDA_DRIVER_LIB\n fi\n \n@@ -15400,17 +15406,19 @@ if test x\"$enable_offload_targets\" != x; then\n       nvptx*)\n         tgt_name=nvptx\n \tPLUGIN_NVPTX=$tgt\n-\tPLUGIN_NVPTX_CPPFLAGS=$CUDA_DRIVER_CPPFLAGS\n-\tPLUGIN_NVPTX_LDFLAGS=$CUDA_DRIVER_LDFLAGS\n-\tPLUGIN_NVPTX_LIBS='-lcuda'\n-\n-\tPLUGIN_NVPTX_save_CPPFLAGS=$CPPFLAGS\n-\tCPPFLAGS=\"$PLUGIN_NVPTX_CPPFLAGS $CPPFLAGS\"\n-\tPLUGIN_NVPTX_save_LDFLAGS=$LDFLAGS\n-\tLDFLAGS=\"$PLUGIN_NVPTX_LDFLAGS $LDFLAGS\"\n-\tPLUGIN_NVPTX_save_LIBS=$LIBS\n-\tLIBS=\"$PLUGIN_NVPTX_LIBS $LIBS\"\n-\tcat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+\tif test \"x$CUDA_DRIVER_LIB\" != xno \\\n+\t   && test \"x$CUDA_DRIVER_LIB\" != xno; then\n+\t  PLUGIN_NVPTX_CPPFLAGS=$CUDA_DRIVER_CPPFLAGS\n+\t  PLUGIN_NVPTX_LDFLAGS=$CUDA_DRIVER_LDFLAGS\n+\t  PLUGIN_NVPTX_LIBS='-lcuda'\n+\n+\t  PLUGIN_NVPTX_save_CPPFLAGS=$CPPFLAGS\n+\t  CPPFLAGS=\"$PLUGIN_NVPTX_CPPFLAGS $CPPFLAGS\"\n+\t  PLUGIN_NVPTX_save_LDFLAGS=$LDFLAGS\n+\t  LDFLAGS=\"$PLUGIN_NVPTX_LDFLAGS $LDFLAGS\"\n+\t  PLUGIN_NVPTX_save_LIBS=$LIBS\n+\t  LIBS=\"$PLUGIN_NVPTX_LIBS $LIBS\"\n+\t  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n /* end confdefs.h.  */\n #include \"cuda.h\"\n int\n@@ -15426,13 +15434,16 @@ if ac_fn_c_try_link \"$LINENO\"; then :\n fi\n rm -f core conftest.err conftest.$ac_objext \\\n     conftest$ac_exeext conftest.$ac_ext\n-\tCPPFLAGS=$PLUGIN_NVPTX_save_CPPFLAGS\n-\tLDFLAGS=$PLUGIN_NVPTX_save_LDFLAGS\n-\tLIBS=$PLUGIN_NVPTX_save_LIBS\n+\t  CPPFLAGS=$PLUGIN_NVPTX_save_CPPFLAGS\n+\t  LDFLAGS=$PLUGIN_NVPTX_save_LDFLAGS\n+\t  LIBS=$PLUGIN_NVPTX_save_LIBS\n+\tfi\n \tcase $PLUGIN_NVPTX in\n \t  nvptx*)\n-\t    if test \"x$CUDA_DRIVER_INCLUDE\" = x \\\n-\t       && test \"x$CUDA_DRIVER_LIB\" = x; then\n+\t    if (test \"x$CUDA_DRIVER_INCLUDE\" = x \\\n+\t\t|| test \"x$CUDA_DRIVER_INCLUDE\" = xno) \\\n+\t       && (test \"x$CUDA_DRIVER_LIB\" = x \\\n+\t\t   || test \"x$CUDA_DRIVER_LIB\" = xno); then\n \t      PLUGIN_NVPTX=1\n \t      PLUGIN_NVPTX_CPPFLAGS='-I$(srcdir)/plugin/cuda'\n \t      PLUGIN_NVPTX_LIBS='-ldl'"}, {"sha": "a979425a293b62af68ee4946d2702fa6277e1d0d", "filename": "libgomp/plugin/configfrag.ac", "status": "modified", "additions": 33, "deletions": 22, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/099400909ed214b5fbf04404bbbc823fdb355b96/libgomp%2Fplugin%2Fconfigfrag.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/099400909ed214b5fbf04404bbbc823fdb355b96/libgomp%2Fplugin%2Fconfigfrag.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Fplugin%2Fconfigfrag.ac?ref=099400909ed214b5fbf04404bbbc823fdb355b96", "patch": "@@ -59,7 +59,11 @@ AC_ARG_WITH(cuda-driver-lib,\n \t[AS_HELP_STRING([--with-cuda-driver-lib=PATH],\n \t\t[specify directory for the installed CUDA driver library])])\n case \"x$with_cuda_driver\" in\n-  x | xno) ;;\n+  x) ;;\n+  xno)\n+    CUDA_DRIVER_INCLUDE=no\n+    CUDA_DRIVER_LIB=no\n+    ;;\n   *) CUDA_DRIVER_INCLUDE=$with_cuda_driver/include\n      CUDA_DRIVER_LIB=$with_cuda_driver/lib\n      ;;\n@@ -70,10 +74,12 @@ fi\n if test \"x$with_cuda_driver_lib\" != x; then\n   CUDA_DRIVER_LIB=$with_cuda_driver_lib\n fi\n-if test \"x$CUDA_DRIVER_INCLUDE\" != x; then\n+if test \"x$CUDA_DRIVER_INCLUDE\" != x \\\n+   && test \"x$CUDA_DRIVER_INCLUDE\" != xno; then\n   CUDA_DRIVER_CPPFLAGS=-I$CUDA_DRIVER_INCLUDE\n fi\n-if test \"x$CUDA_DRIVER_LIB\" != x; then\n+if test \"x$CUDA_DRIVER_LIB\" != x \\\n+   && test \"x$CUDA_DRIVER_LIB\" != xno; then\n   CUDA_DRIVER_LDFLAGS=-L$CUDA_DRIVER_LIB\n fi\n \n@@ -150,28 +156,33 @@ if test x\"$enable_offload_targets\" != x; then\n       nvptx*)\n         tgt_name=nvptx\n \tPLUGIN_NVPTX=$tgt\n-\tPLUGIN_NVPTX_CPPFLAGS=$CUDA_DRIVER_CPPFLAGS\n-\tPLUGIN_NVPTX_LDFLAGS=$CUDA_DRIVER_LDFLAGS\n-\tPLUGIN_NVPTX_LIBS='-lcuda'\n+\tif test \"x$CUDA_DRIVER_LIB\" != xno \\\n+\t   && test \"x$CUDA_DRIVER_LIB\" != xno; then\n+\t  PLUGIN_NVPTX_CPPFLAGS=$CUDA_DRIVER_CPPFLAGS\n+\t  PLUGIN_NVPTX_LDFLAGS=$CUDA_DRIVER_LDFLAGS\n+\t  PLUGIN_NVPTX_LIBS='-lcuda'\n \n-\tPLUGIN_NVPTX_save_CPPFLAGS=$CPPFLAGS\n-\tCPPFLAGS=\"$PLUGIN_NVPTX_CPPFLAGS $CPPFLAGS\"\n-\tPLUGIN_NVPTX_save_LDFLAGS=$LDFLAGS\n-\tLDFLAGS=\"$PLUGIN_NVPTX_LDFLAGS $LDFLAGS\"\n-\tPLUGIN_NVPTX_save_LIBS=$LIBS\n-\tLIBS=\"$PLUGIN_NVPTX_LIBS $LIBS\"\n-\tAC_LINK_IFELSE(\n-\t  [AC_LANG_PROGRAM(\n-\t    [#include \"cuda.h\"],\n-\t      [CUresult r = cuCtxPushCurrent (NULL);])],\n-\t  [PLUGIN_NVPTX=1])\n-\tCPPFLAGS=$PLUGIN_NVPTX_save_CPPFLAGS\n-\tLDFLAGS=$PLUGIN_NVPTX_save_LDFLAGS\n-\tLIBS=$PLUGIN_NVPTX_save_LIBS\n+\t  PLUGIN_NVPTX_save_CPPFLAGS=$CPPFLAGS\n+\t  CPPFLAGS=\"$PLUGIN_NVPTX_CPPFLAGS $CPPFLAGS\"\n+\t  PLUGIN_NVPTX_save_LDFLAGS=$LDFLAGS\n+\t  LDFLAGS=\"$PLUGIN_NVPTX_LDFLAGS $LDFLAGS\"\n+\t  PLUGIN_NVPTX_save_LIBS=$LIBS\n+\t  LIBS=\"$PLUGIN_NVPTX_LIBS $LIBS\"\n+\t  AC_LINK_IFELSE(\n+\t    [AC_LANG_PROGRAM(\n+\t      [#include \"cuda.h\"],\n+\t\t[CUresult r = cuCtxPushCurrent (NULL);])],\n+\t    [PLUGIN_NVPTX=1])\n+\t  CPPFLAGS=$PLUGIN_NVPTX_save_CPPFLAGS\n+\t  LDFLAGS=$PLUGIN_NVPTX_save_LDFLAGS\n+\t  LIBS=$PLUGIN_NVPTX_save_LIBS\n+\tfi\n \tcase $PLUGIN_NVPTX in\n \t  nvptx*)\n-\t    if test \"x$CUDA_DRIVER_INCLUDE\" = x \\\n-\t       && test \"x$CUDA_DRIVER_LIB\" = x; then\n+\t    if (test \"x$CUDA_DRIVER_INCLUDE\" = x \\\n+\t\t|| test \"x$CUDA_DRIVER_INCLUDE\" = xno) \\\n+\t       && (test \"x$CUDA_DRIVER_LIB\" = x \\\n+\t\t   || test \"x$CUDA_DRIVER_LIB\" = xno); then\n \t      PLUGIN_NVPTX=1\n \t      PLUGIN_NVPTX_CPPFLAGS='-I$(srcdir)/plugin/cuda'\n \t      PLUGIN_NVPTX_LIBS='-ldl'"}]}