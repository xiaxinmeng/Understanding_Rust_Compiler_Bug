{"sha": "dcb043351307001a85fc1e7d56669f5adc9628f7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGNiMDQzMzUxMzA3MDAxYTg1ZmMxZTdkNTY2NjlmNWFkYzk2MjhmNw==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2020-08-25T12:31:16Z"}, "committer": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2020-08-25T12:31:16Z"}, "message": "aarch64: Update the mangling of single SVE vectors and predicates\n\nGCC was implementing an old mangling scheme for single SVE\nvectors and predicates (based on the Advanced SIMD one).\nThe final definition instead put them in the vendor built-in\nnamespace via the \"u\" prefix.\n\ngcc/\n\t* config/aarch64/aarch64-sve-builtins.cc (DEF_SVE_TYPE): Add a\n\tleading \"u\" to each mangled name.\n\ngcc/testsuite/\n\t* g++.target/aarch64/sve/acle/general-c++/mangle_1.C: Add a leading\n\t\"u\" to the mangling of each SVE vector and predicate type.\n\t* g++.target/aarch64/sve/acle/general-c++/mangle_2.C: Likewise.\n\t* g++.target/aarch64/sve/acle/general-c++/mangle_3.C: Likewise.\n\t* g++.target/aarch64/sve/acle/general-c++/mangle_5.C: Likewise.", "tree": {"sha": "6f123d13440a53036e8ebba37bb9fc192f301e5d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6f123d13440a53036e8ebba37bb9fc192f301e5d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dcb043351307001a85fc1e7d56669f5adc9628f7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dcb043351307001a85fc1e7d56669f5adc9628f7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dcb043351307001a85fc1e7d56669f5adc9628f7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dcb043351307001a85fc1e7d56669f5adc9628f7/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "660b5c10dc04988b02a2c3f6baed013340af3ef8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/660b5c10dc04988b02a2c3f6baed013340af3ef8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/660b5c10dc04988b02a2c3f6baed013340af3ef8"}], "stats": {"total": 62, "additions": 31, "deletions": 31}, "files": [{"sha": "3150659bee91296cc902c08e4e7f1b52e10c420e", "filename": "gcc/config/aarch64/aarch64-sve-builtins.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dcb043351307001a85fc1e7d56669f5adc9628f7/gcc%2Fconfig%2Faarch64%2Faarch64-sve-builtins.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dcb043351307001a85fc1e7d56669f5adc9628f7/gcc%2Fconfig%2Faarch64%2Faarch64-sve-builtins.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-sve-builtins.cc?ref=dcb043351307001a85fc1e7d56669f5adc9628f7", "patch": "@@ -101,7 +101,7 @@ struct registered_function_hasher : nofree_ptr_hash <registered_function>\n /* Information about each single-predicate or single-vector type.  */\n static CONSTEXPR const vector_type_info vector_types[] = {\n #define DEF_SVE_TYPE(ACLE_NAME, NCHARS, ABI_NAME, SCALAR_TYPE) \\\n-  { #ACLE_NAME, #ABI_NAME, #NCHARS #ABI_NAME },\n+  { #ACLE_NAME, #ABI_NAME, \"u\" #NCHARS #ABI_NAME },\n #include \"aarch64-sve-builtins.def\"\n };\n "}, {"sha": "36dab3c9b712a684636cf9264484376e03baae57", "filename": "gcc/testsuite/g++.target/aarch64/sve/acle/general-c++/mangle_1.C", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dcb043351307001a85fc1e7d56669f5adc9628f7/gcc%2Ftestsuite%2Fg%2B%2B.target%2Faarch64%2Fsve%2Facle%2Fgeneral-c%2B%2B%2Fmangle_1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dcb043351307001a85fc1e7d56669f5adc9628f7/gcc%2Ftestsuite%2Fg%2B%2B.target%2Faarch64%2Fsve%2Facle%2Fgeneral-c%2B%2B%2Fmangle_1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Faarch64%2Fsve%2Facle%2Fgeneral-c%2B%2B%2Fmangle_1.C?ref=dcb043351307001a85fc1e7d56669f5adc9628f7", "patch": "@@ -16,16 +16,16 @@ void f11(svfloat32_t) {}\n void f12(svfloat64_t) {}\n void f13(svbfloat16_t) {}\n \n-/* { dg-final { scan-assembler \"_Z2f110__SVBool_t:\" } } */\n-/* { dg-final { scan-assembler \"_Z2f210__SVInt8_t:\" } } */\n-/* { dg-final { scan-assembler \"_Z2f311__SVInt16_t:\" } } */\n-/* { dg-final { scan-assembler \"_Z2f411__SVInt32_t:\" } } */\n-/* { dg-final { scan-assembler \"_Z2f511__SVInt64_t:\" } } */\n-/* { dg-final { scan-assembler \"_Z2f611__SVUint8_t:\" } } */\n-/* { dg-final { scan-assembler \"_Z2f712__SVUint16_t:\" } } */\n-/* { dg-final { scan-assembler \"_Z2f812__SVUint32_t:\" } } */\n-/* { dg-final { scan-assembler \"_Z2f912__SVUint64_t:\" } } */\n-/* { dg-final { scan-assembler \"_Z3f1013__SVFloat16_t:\" } } */\n-/* { dg-final { scan-assembler \"_Z3f1113__SVFloat32_t:\" } } */\n-/* { dg-final { scan-assembler \"_Z3f1213__SVFloat64_t:\" } } */\n-/* { dg-final { scan-assembler \"_Z3f1314__SVBfloat16_t:\" } } */\n+/* { dg-final { scan-assembler \"_Z2f1u10__SVBool_t:\" } } */\n+/* { dg-final { scan-assembler \"_Z2f2u10__SVInt8_t:\" } } */\n+/* { dg-final { scan-assembler \"_Z2f3u11__SVInt16_t:\" } } */\n+/* { dg-final { scan-assembler \"_Z2f4u11__SVInt32_t:\" } } */\n+/* { dg-final { scan-assembler \"_Z2f5u11__SVInt64_t:\" } } */\n+/* { dg-final { scan-assembler \"_Z2f6u11__SVUint8_t:\" } } */\n+/* { dg-final { scan-assembler \"_Z2f7u12__SVUint16_t:\" } } */\n+/* { dg-final { scan-assembler \"_Z2f8u12__SVUint32_t:\" } } */\n+/* { dg-final { scan-assembler \"_Z2f9u12__SVUint64_t:\" } } */\n+/* { dg-final { scan-assembler \"_Z3f10u13__SVFloat16_t:\" } } */\n+/* { dg-final { scan-assembler \"_Z3f11u13__SVFloat32_t:\" } } */\n+/* { dg-final { scan-assembler \"_Z3f12u13__SVFloat64_t:\" } } */\n+/* { dg-final { scan-assembler \"_Z3f13u14__SVBfloat16_t:\" } } */"}, {"sha": "ad4aaee291f2de179bf9048974375b4806db3162", "filename": "gcc/testsuite/g++.target/aarch64/sve/acle/general-c++/mangle_2.C", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dcb043351307001a85fc1e7d56669f5adc9628f7/gcc%2Ftestsuite%2Fg%2B%2B.target%2Faarch64%2Fsve%2Facle%2Fgeneral-c%2B%2B%2Fmangle_2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dcb043351307001a85fc1e7d56669f5adc9628f7/gcc%2Ftestsuite%2Fg%2B%2B.target%2Faarch64%2Fsve%2Facle%2Fgeneral-c%2B%2B%2Fmangle_2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Faarch64%2Fsve%2Facle%2Fgeneral-c%2B%2B%2Fmangle_2.C?ref=dcb043351307001a85fc1e7d56669f5adc9628f7", "patch": "@@ -14,16 +14,16 @@ void f11(__SVFloat32_t) {}\n void f12(__SVFloat64_t) {}\n void f13(__SVBfloat16_t) {}\n \n-/* { dg-final { scan-assembler \"_Z2f110__SVBool_t:\" } } */\n-/* { dg-final { scan-assembler \"_Z2f210__SVInt8_t:\" } } */\n-/* { dg-final { scan-assembler \"_Z2f311__SVInt16_t:\" } } */\n-/* { dg-final { scan-assembler \"_Z2f411__SVInt32_t:\" } } */\n-/* { dg-final { scan-assembler \"_Z2f511__SVInt64_t:\" } } */\n-/* { dg-final { scan-assembler \"_Z2f611__SVUint8_t:\" } } */\n-/* { dg-final { scan-assembler \"_Z2f712__SVUint16_t:\" } } */\n-/* { dg-final { scan-assembler \"_Z2f812__SVUint32_t:\" } } */\n-/* { dg-final { scan-assembler \"_Z2f912__SVUint64_t:\" } } */\n-/* { dg-final { scan-assembler \"_Z3f1013__SVFloat16_t:\" } } */\n-/* { dg-final { scan-assembler \"_Z3f1113__SVFloat32_t:\" } } */\n-/* { dg-final { scan-assembler \"_Z3f1213__SVFloat64_t:\" } } */\n-/* { dg-final { scan-assembler \"_Z3f1314__SVBfloat16_t:\" } } */\n+/* { dg-final { scan-assembler \"_Z2f1u10__SVBool_t:\" } } */\n+/* { dg-final { scan-assembler \"_Z2f2u10__SVInt8_t:\" } } */\n+/* { dg-final { scan-assembler \"_Z2f3u11__SVInt16_t:\" } } */\n+/* { dg-final { scan-assembler \"_Z2f4u11__SVInt32_t:\" } } */\n+/* { dg-final { scan-assembler \"_Z2f5u11__SVInt64_t:\" } } */\n+/* { dg-final { scan-assembler \"_Z2f6u11__SVUint8_t:\" } } */\n+/* { dg-final { scan-assembler \"_Z2f7u12__SVUint16_t:\" } } */\n+/* { dg-final { scan-assembler \"_Z2f8u12__SVUint32_t:\" } } */\n+/* { dg-final { scan-assembler \"_Z2f9u12__SVUint64_t:\" } } */\n+/* { dg-final { scan-assembler \"_Z3f10u13__SVFloat16_t:\" } } */\n+/* { dg-final { scan-assembler \"_Z3f11u13__SVFloat32_t:\" } } */\n+/* { dg-final { scan-assembler \"_Z3f12u13__SVFloat64_t:\" } } */\n+/* { dg-final { scan-assembler \"_Z3f13u14__SVBfloat16_t:\" } } */"}, {"sha": "7aaafeb71eb33723e3b629be9f3a0184a4487d42", "filename": "gcc/testsuite/g++.target/aarch64/sve/acle/general-c++/mangle_3.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dcb043351307001a85fc1e7d56669f5adc9628f7/gcc%2Ftestsuite%2Fg%2B%2B.target%2Faarch64%2Fsve%2Facle%2Fgeneral-c%2B%2B%2Fmangle_3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dcb043351307001a85fc1e7d56669f5adc9628f7/gcc%2Ftestsuite%2Fg%2B%2B.target%2Faarch64%2Fsve%2Facle%2Fgeneral-c%2B%2B%2Fmangle_3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Faarch64%2Fsve%2Facle%2Fgeneral-c%2B%2B%2Fmangle_3.C?ref=dcb043351307001a85fc1e7d56669f5adc9628f7", "patch": "@@ -13,6 +13,6 @@ void f2(t2) {}\n void f3(t3) {}\n void f4(t1 &a, t2 &b, t3 &c) { a = b = c; }\n \n-/* { dg-final { scan-assembler \"_Z2f110__SVInt8_t:\" } } */\n-/* { dg-final { scan-assembler \"_Z2f210__SVInt8_t:\" } } */\n+/* { dg-final { scan-assembler \"_Z2f1u10__SVInt8_t:\" } } */\n+/* { dg-final { scan-assembler \"_Z2f2u10__SVInt8_t:\" } } */\n /* { dg-final { scan-assembler \"_Z2f3Dv32_a:\" } } */"}, {"sha": "1504cc12f41b9903bd924faf0b26b5c5a7d12c77", "filename": "gcc/testsuite/g++.target/aarch64/sve/acle/general-c++/mangle_5.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dcb043351307001a85fc1e7d56669f5adc9628f7/gcc%2Ftestsuite%2Fg%2B%2B.target%2Faarch64%2Fsve%2Facle%2Fgeneral-c%2B%2B%2Fmangle_5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dcb043351307001a85fc1e7d56669f5adc9628f7/gcc%2Ftestsuite%2Fg%2B%2B.target%2Faarch64%2Fsve%2Facle%2Fgeneral-c%2B%2B%2Fmangle_5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Faarch64%2Fsve%2Facle%2Fgeneral-c%2B%2B%2Fmangle_5.C?ref=dcb043351307001a85fc1e7d56669f5adc9628f7", "patch": "@@ -4,5 +4,5 @@ typedef volatile foo bar;\n foo f (foo x) { return x; }\n bar g (bar x) { return x; }\n \n-/* { dg-final { scan-assembler {_Z1f10__SVInt8_t:\\n} } } */\n-/* { dg-final { scan-assembler {_Z1g10__SVInt8_t:\\n} } } */\n+/* { dg-final { scan-assembler {_Z1fu10__SVInt8_t:\\n} } } */\n+/* { dg-final { scan-assembler {_Z1gu10__SVInt8_t:\\n} } } */"}]}