{"sha": "1f92d7f29a1ee221a8a590bf0f4f724e7e45e103", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWY5MmQ3ZjI5YTFlZTIyMWE4YTU5MGJmMGY0ZjcyNGU3ZTQ1ZTEwMw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-08-10T13:37:59Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-08-10T13:37:59Z"}, "message": "[multiple changes]\n\n2010-08-10  Thomas Quinot  <quinot@adacore.com>\n\n\t* exp_attr.adb: Add comments.\n\n2010-08-10  Jerome Lambourg  <lambourg@adacore.com>\n\n\t* adaint.c (__gnat_get_file_names_case_sensitive): return 0 on darwin.\n\nFrom-SVN: r163059", "tree": {"sha": "8ab33dac867c15cfdb6ccd8db63755069b8b472c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8ab33dac867c15cfdb6ccd8db63755069b8b472c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1f92d7f29a1ee221a8a590bf0f4f724e7e45e103", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f92d7f29a1ee221a8a590bf0f4f724e7e45e103", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1f92d7f29a1ee221a8a590bf0f4f724e7e45e103", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f92d7f29a1ee221a8a590bf0f4f724e7e45e103/comments", "author": null, "committer": null, "parents": [{"sha": "ceddf62caf3e2cb2feb0abc6005016d3bb4b1362", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ceddf62caf3e2cb2feb0abc6005016d3bb4b1362", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ceddf62caf3e2cb2feb0abc6005016d3bb4b1362"}], "stats": {"total": 15, "additions": 13, "deletions": 2}, "files": [{"sha": "2715b54782cb881e0237d6d6158b3f5df9d021cc", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f92d7f29a1ee221a8a590bf0f4f724e7e45e103/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f92d7f29a1ee221a8a590bf0f4f724e7e45e103/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=1f92d7f29a1ee221a8a590bf0f4f724e7e45e103", "patch": "@@ -1,3 +1,11 @@\n+2010-08-10  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* exp_attr.adb: Add comments.\n+\n+2010-08-10  Jerome Lambourg  <lambourg@adacore.com>\n+\n+\t* adaint.c (__gnat_get_file_names_case_sensitive): return 0 on darwin.\n+\n 2010-08-09  Nathan Froyd  <froydnj@codesourcery.com>\n \n \t* gcc-interface/utils.c (gnat_poplevel): Use blocks_nreverse."}, {"sha": "cc1dd99ead6c47b95d4759e9966e12b2742c42fa", "filename": "gcc/ada/adaint.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f92d7f29a1ee221a8a590bf0f4f724e7e45e103/gcc%2Fada%2Fadaint.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f92d7f29a1ee221a8a590bf0f4f724e7e45e103/gcc%2Fada%2Fadaint.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fadaint.c?ref=1f92d7f29a1ee221a8a590bf0f4f724e7e45e103", "patch": "@@ -579,7 +579,7 @@ __gnat_get_maximum_file_name_length (void)\n int\n __gnat_get_file_names_case_sensitive (void)\n {\n-#if defined (VMS) || defined (WINNT)\n+#if defined (VMS) || defined (WINNT) || defined (__APPLE__)\n   return 0;\n #else\n   return 1;"}, {"sha": "7bb6285f5e233a4bd6353472b487842361f1d582", "filename": "gcc/ada/exp_attr.adb", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f92d7f29a1ee221a8a590bf0f4f724e7e45e103/gcc%2Fada%2Fexp_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f92d7f29a1ee221a8a590bf0f4f724e7e45e103/gcc%2Fada%2Fexp_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_attr.adb?ref=1f92d7f29a1ee221a8a590bf0f4f724e7e45e103", "patch": "@@ -96,7 +96,6 @@ package body Exp_Attr is\n      (N    : Node_Id;\n       Pref : Node_Id;\n       Typ  : Entity_Id);\n-\n    --  An attribute reference to a protected subprogram is transformed into\n    --  a pair of pointers: one to the object, and one to the operations.\n    --  This expansion is performed for 'Access and for 'Unrestricted_Access.\n@@ -370,7 +369,11 @@ package body Exp_Attr is\n         Make_Aggregate (Loc,\n           Expressions => New_List (Obj_Ref, Sub_Ref));\n \n+      --  Sub_Ref has been marked as analyzed, but we still need to make sure\n+      --  Sub is correctly frozen.\n+\n       Freeze_Before (N, Entity (Sub));\n+\n       Rewrite (N, Agg);\n       Analyze_And_Resolve (N, E_T);\n "}]}