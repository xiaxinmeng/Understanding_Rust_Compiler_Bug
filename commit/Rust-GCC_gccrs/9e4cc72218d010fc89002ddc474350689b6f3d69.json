{"sha": "9e4cc72218d010fc89002ddc474350689b6f3d69", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWU0Y2M3MjIxOGQwMTBmYzg5MDAyZGRjNDc0MzUwNjg5YjZmM2Q2OQ==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2000-02-10T09:07:59Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2000-02-10T09:07:59Z"}, "message": "ir.texi (ADDR_EXPR): Document the fact that an ADDR_EXPR can be used to create an implicit temporary.\n\n\t* ir.texi (ADDR_EXPR): Document the fact that an ADDR_EXPR can be\n\tused to create an implicit temporary.\n\nFrom-SVN: r31888", "tree": {"sha": "e43ce4bbef22b8f42374af7b52570c1656a4c64d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e43ce4bbef22b8f42374af7b52570c1656a4c64d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9e4cc72218d010fc89002ddc474350689b6f3d69", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e4cc72218d010fc89002ddc474350689b6f3d69", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e4cc72218d010fc89002ddc474350689b6f3d69", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e4cc72218d010fc89002ddc474350689b6f3d69/comments", "author": null, "committer": null, "parents": [{"sha": "76177fb35add99f18bb77e513af355ddc2dcdb94", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76177fb35add99f18bb77e513af355ddc2dcdb94", "html_url": "https://github.com/Rust-GCC/gccrs/commit/76177fb35add99f18bb77e513af355ddc2dcdb94"}], "stats": {"total": 10, "additions": 8, "deletions": 2}, "files": [{"sha": "710b9d8f50081b52956fdb4422372bbda1086907", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e4cc72218d010fc89002ddc474350689b6f3d69/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e4cc72218d010fc89002ddc474350689b6f3d69/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=9e4cc72218d010fc89002ddc474350689b6f3d69", "patch": "@@ -1,5 +1,8 @@\n 2000-02-10  Mark Mitchell  <mark@codesourcery.com>\n \n+\t* ir.texi (ADDR_EXPR): Document the fact that an ADDR_EXPR can be\n+\tused to create an implicit temporary.\n+\n \t* class.c (dfs_modify_vtables): Tweak calculation of functions to\n \toverride.\n "}, {"sha": "97aa51a72344faabf8ba5d84f59638594512b5e3", "filename": "gcc/cp/ir.texi", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e4cc72218d010fc89002ddc474350689b6f3d69/gcc%2Fcp%2Fir.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e4cc72218d010fc89002ddc474350689b6f3d69/gcc%2Fcp%2Fir.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fir.texi?ref=9e4cc72218d010fc89002ddc474350689b6f3d69", "patch": "@@ -31,7 +31,7 @@\n This manual documents the internal representation used by G++ to represent\n C++ source programs.\n \n-Copyright (c) 1999 Free Software Foundation, Inc.\n+Copyright (c) 1999, 2000 Free Software Foundation, Inc.\n @end ifinfo\n \n @c ---------------------------------------------------------------------\n@@ -43,7 +43,7 @@ Copyright (c) 1999 Free Software Foundation, Inc.\n @author CodeSourcery, LLC <info@@codesourcery.com>\n @page\n @vskip 0pt plus 1filll\n-Copyright @copyright{} 1999 Free Software Foundation, Inc.\n+Copyright @copyright{} 1999, 2000 Free Software Foundation, Inc.\n @end titlepage\n \n @c ---------------------------------------------------------------------\n@@ -1655,6 +1655,9 @@ As an extension, G++ allows users to take the address of a label.  In\n this case, the operand of the @code{ADDR_EXPR} will be a\n @code{LABEL_DECL}.  The type of such an expression is @code{void*}.\n \n+If the object addressed is not an lvalue, a temporary is created, and\n+the address of the temporary is used.\n+\n @item INDIRECT_REF \n These nodes are used to represent the object pointed to by a pointer.\n The operand is the pointer being dereferenced; it will always have"}]}