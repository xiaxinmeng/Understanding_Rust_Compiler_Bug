{"sha": "8ef62eeb746043239772dd99ad2cff5176735713", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGVmNjJlZWI3NDYwNDMyMzk3NzJkZDk5YWQyY2ZmNTE3NjczNTcxMw==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2007-11-20T15:16:25Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2007-11-20T15:16:25Z"}, "message": "tree-ssa-operands.c (add_virtual_operand): Consistently prune accesses.\n\n2007-11-20  Richard Guenther  <rguenther@suse.de>\n\n\t* tree-ssa-operands.c (add_virtual_operand): Consistently prune\n\taccesses.\n\n\t* gcc.c-torture/execute/20071120-1.c: New testcase.\n\nFrom-SVN: r130315", "tree": {"sha": "59272568e1491b41aa8b2b5d380b8dabbdf8eec2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/59272568e1491b41aa8b2b5d380b8dabbdf8eec2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8ef62eeb746043239772dd99ad2cff5176735713", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ef62eeb746043239772dd99ad2cff5176735713", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8ef62eeb746043239772dd99ad2cff5176735713", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ef62eeb746043239772dd99ad2cff5176735713/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f22aa574dc04c5a06f068b1793fc092071661a18", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f22aa574dc04c5a06f068b1793fc092071661a18", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f22aa574dc04c5a06f068b1793fc092071661a18"}], "stats": {"total": 91, "additions": 90, "deletions": 1}, "files": [{"sha": "beb2370d220aa0fbcdfef7deb51a2c976516d7cb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ef62eeb746043239772dd99ad2cff5176735713/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ef62eeb746043239772dd99ad2cff5176735713/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8ef62eeb746043239772dd99ad2cff5176735713", "patch": "@@ -1,3 +1,8 @@\n+2007-11-20  Richard Guenther  <rguenther@suse.de>\n+\n+\t* tree-ssa-operands.c (add_virtual_operand): Consistently prune\n+\taccesses.\n+\n 2007-11-20  Thiemo Seufer  <ths@mips.com>\n \n \t* config/mips/mips.c (mips_file_start): Add support for"}, {"sha": "3ad61fd676dae3071798cff3fc067f832c0a9a70", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ef62eeb746043239772dd99ad2cff5176735713/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ef62eeb746043239772dd99ad2cff5176735713/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8ef62eeb746043239772dd99ad2cff5176735713", "patch": "@@ -1,3 +1,7 @@\n+2007-11-20  Richard Guenther  <rguenther@suse.de>\n+\n+\t* gcc.c-torture/execute/20071120-1.c: New testcase.\n+\n 2007-11-20  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c/34146"}, {"sha": "ffe51aec847731fe0b93743a0a1c977d0cfb5748", "filename": "gcc/testsuite/gcc.c-torture/execute/20071120-1.c", "status": "added", "additions": 81, "deletions": 0, "changes": 81, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ef62eeb746043239772dd99ad2cff5176735713/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20071120-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ef62eeb746043239772dd99ad2cff5176735713/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20071120-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20071120-1.c?ref=8ef62eeb746043239772dd99ad2cff5176735713", "patch": "@@ -0,0 +1,81 @@\n+extern void abort (void);\n+\n+void __attribute__((noinline,noreturn))\n+vec_assert_fail (void)\n+{\n+    abort ();\n+}\n+\n+struct ggc_root_tab {\n+    void *base;\n+};\n+\n+typedef struct deferred_access_check {} VEC_deferred_access_check_gc;\n+\n+typedef struct deferred_access {\n+    VEC_deferred_access_check_gc* deferred_access_checks;\n+    int deferring_access_checks_kind;\n+} deferred_access;\n+\n+typedef struct VEC_deferred_access_base {\n+    unsigned num;\n+    deferred_access vec[1];\n+} VEC_deferred_access_base;\n+\n+static __inline__ deferred_access *\n+VEC_deferred_access_base_last (VEC_deferred_access_base *vec_)\n+{\n+    (void)((vec_ && vec_->num) ? 0 : (vec_assert_fail (), 0));\n+    return &vec_->vec[vec_->num - 1];\n+}\n+\n+static __inline__  void\n+VEC_deferred_access_base_pop (VEC_deferred_access_base *vec_)\n+{\n+    (void)((vec_->num) ? 0 : (vec_assert_fail (), 0));\n+    --vec_->num;\n+}\n+\n+void __attribute__((noinline))\n+perform_access_checks (VEC_deferred_access_check_gc* p)\n+{\n+    abort ();\n+}\n+\n+typedef struct VEC_deferred_access_gc {\n+    VEC_deferred_access_base base;\n+} VEC_deferred_access_gc;\n+\n+static VEC_deferred_access_gc *deferred_access_stack;\n+static unsigned deferred_access_no_check;\n+\n+const struct ggc_root_tab gt_pch_rs_gt_cp_semantics_h[] = {\n+    {\n+\t&deferred_access_no_check\n+    }\n+};\n+\n+void __attribute__((noinline)) pop_to_parent_deferring_access_checks (void)\n+{\n+    if (deferred_access_no_check)\n+\tdeferred_access_no_check--;\n+    else\n+    {\n+        VEC_deferred_access_check_gc *checks;\n+        deferred_access *ptr;\n+\tchecks = (VEC_deferred_access_base_last(deferred_access_stack ? &deferred_access_stack->base : 0))->deferred_access_checks;\n+        VEC_deferred_access_base_pop(deferred_access_stack ? &deferred_access_stack->base : 0);\n+        ptr = VEC_deferred_access_base_last(deferred_access_stack ? &deferred_access_stack->base : 0);\n+        if (ptr->deferring_access_checks_kind == 0)\n+\t    perform_access_checks (checks);\n+    }\n+}\n+\n+int main()\n+{\n+    deferred_access_stack = __builtin_malloc (sizeof(VEC_deferred_access_gc) + sizeof(deferred_access) * 8);\n+    deferred_access_stack->base.num = 2;\n+    deferred_access_stack->base.vec[0].deferring_access_checks_kind = 1;\n+    pop_to_parent_deferring_access_checks ();\n+    return 0;\n+}"}, {"sha": "36cf6240567d99225fb025eb7b0a3a9d6115871b", "filename": "gcc/tree-ssa-operands.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ef62eeb746043239772dd99ad2cff5176735713/gcc%2Ftree-ssa-operands.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ef62eeb746043239772dd99ad2cff5176735713/gcc%2Ftree-ssa-operands.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-operands.c?ref=8ef62eeb746043239772dd99ad2cff5176735713", "patch": "@@ -1531,7 +1531,6 @@ add_virtual_operand (tree var, stmt_ann_t s_ann, int flags,\n \t\t unspecified [0, -1], we cannot prune it.  Otherwise try doing\n \t\t so using access_can_touch_variable.  */\n \t      if (full_ref\n-\t\t  && !(offset == 0 && size == -1)\n \t\t  && !access_can_touch_variable (full_ref, al, offset, size))\n \t\tcontinue;\n "}]}