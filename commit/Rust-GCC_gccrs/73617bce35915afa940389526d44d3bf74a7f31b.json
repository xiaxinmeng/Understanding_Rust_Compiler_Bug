{"sha": "73617bce35915afa940389526d44d3bf74a7f31b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzM2MTdiY2UzNTkxNWFmYTk0MDM4OTUyNmQ0NGQzYmY3NGE3ZjMxYg==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2006-06-19T20:10:02Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2006-06-19T20:10:02Z"}, "message": "re PR tree-optimization/27090 (FRE does not look past previous type casts)\n\n2006-06-19  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/27090\n\t* g++.dg/tree-ssa/pr27090.C: New testcase.\n\nFrom-SVN: r114786", "tree": {"sha": "5cc3181728e0bd4bd32e455bcc8e6e8894da9909", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5cc3181728e0bd4bd32e455bcc8e6e8894da9909"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/73617bce35915afa940389526d44d3bf74a7f31b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73617bce35915afa940389526d44d3bf74a7f31b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/73617bce35915afa940389526d44d3bf74a7f31b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73617bce35915afa940389526d44d3bf74a7f31b/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5ff5e6c8240829c5dc7eb17ea3e729c302bae0ad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ff5e6c8240829c5dc7eb17ea3e729c302bae0ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5ff5e6c8240829c5dc7eb17ea3e729c302bae0ad"}], "stats": {"total": 26, "additions": 26, "deletions": 0}, "files": [{"sha": "8fda51d5d1c613d0481a3fe5ccecae840863fcbf", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73617bce35915afa940389526d44d3bf74a7f31b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73617bce35915afa940389526d44d3bf74a7f31b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=73617bce35915afa940389526d44d3bf74a7f31b", "patch": "@@ -1,3 +1,8 @@\n+2006-06-19  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/27090\n+\t* g++.dg/tree-ssa/pr27090.C: New testcase.\n+\n 2006-06-19  Roger Sayle  <roger@eyesopen.com>\n \n \tPR target/27861"}, {"sha": "a56357a1b52a761e651cb6d68b3f7f2ce6fb0293", "filename": "gcc/testsuite/g++.dg/tree-ssa/pr27090.C", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73617bce35915afa940389526d44d3bf74a7f31b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr27090.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73617bce35915afa940389526d44d3bf74a7f31b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr27090.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr27090.C?ref=73617bce35915afa940389526d44d3bf74a7f31b", "patch": "@@ -0,0 +1,21 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O -fdump-tree-optimized\" } */\n+\n+template <class T>\n+struct Bar\n+{\n+        int get() { return static_cast<T*>(this)->get2(); }\n+};\n+struct Foo : public Bar<Foo>\n+{\n+        int get2() { return x; }\n+        int x;\n+};\n+\n+int foo(Foo& f)\n+{\n+        return f.get();\n+}\n+\n+/* { dg-final { scan-tree-dump \"return f->x;\" \"optimized\" } } */\n+/* { dg-final { cleanup-tree-dump \"optimized\" } } */"}]}