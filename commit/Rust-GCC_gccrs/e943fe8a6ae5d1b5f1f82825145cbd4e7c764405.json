{"sha": "e943fe8a6ae5d1b5f1f82825145cbd4e7c764405", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTk0M2ZlOGE2YWU1ZDFiNWYxZjgyODI1MTQ1Y2JkNGU3Yzc2NDQwNQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-08-04T09:49:19Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-08-04T09:49:19Z"}, "message": "[multiple changes]\n\n2014-08-04  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_ch12.adb: Minor reformatting.\n\n2014-08-04  Arnaud Charlet  <charlet@adacore.com>\n\n\t* exp_util.adb, checks.adb (Check_Float_Op_Overflow): Add special\n\texpansion in CodePeer_Mode.\n\t(Selected_Range_Checks): Add handling of overflow checks in\n\tCodePeer_Mode.\n\nFrom-SVN: r213547", "tree": {"sha": "f9480b46729c2d40ecc02010804a5d4de3c660df", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f9480b46729c2d40ecc02010804a5d4de3c660df"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e943fe8a6ae5d1b5f1f82825145cbd4e7c764405", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e943fe8a6ae5d1b5f1f82825145cbd4e7c764405", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e943fe8a6ae5d1b5f1f82825145cbd4e7c764405", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e943fe8a6ae5d1b5f1f82825145cbd4e7c764405/comments", "author": null, "committer": null, "parents": [{"sha": "29049f0b22b4475b4f8e0872b0455d025782e041", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29049f0b22b4475b4f8e0872b0455d025782e041", "html_url": "https://github.com/Rust-GCC/gccrs/commit/29049f0b22b4475b4f8e0872b0455d025782e041"}], "stats": {"total": 51, "additions": 49, "deletions": 2}, "files": [{"sha": "474921e0726e17aaf4f149c10ceaa58534b38834", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e943fe8a6ae5d1b5f1f82825145cbd4e7c764405/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e943fe8a6ae5d1b5f1f82825145cbd4e7c764405/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=e943fe8a6ae5d1b5f1f82825145cbd4e7c764405", "patch": "@@ -1,3 +1,14 @@\n+2014-08-04  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_ch12.adb: Minor reformatting.\n+\n+2014-08-04  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* exp_util.adb, checks.adb (Check_Float_Op_Overflow): Add special\n+\texpansion in CodePeer_Mode.\n+\t(Selected_Range_Checks): Add handling of overflow checks in\n+\tCodePeer_Mode.\n+\n 2014-08-04  Robert Dewar  <dewar@adacore.com>\n \n \t* exp_attr.adb (Expand_N_Attribute_Reference, case Pred):"}, {"sha": "cddd15a57f916a7f6e9f9727d72db16eb38cd365", "filename": "gcc/ada/checks.adb", "status": "modified", "additions": 15, "deletions": 2, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e943fe8a6ae5d1b5f1f82825145cbd4e7c764405/gcc%2Fada%2Fchecks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e943fe8a6ae5d1b5f1f82825145cbd4e7c764405/gcc%2Fada%2Fchecks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fchecks.adb?ref=e943fe8a6ae5d1b5f1f82825145cbd4e7c764405", "patch": "@@ -391,11 +391,13 @@ package body Checks is\n    begin\n       --  Nothing to do for unconstrained floating-point types (the test for\n       --  Etype (N) being present seems necessary in some cases, should be\n-      --  tracked down, but for now just ignore the check in this case ???)\n+      --  tracked down, but for now just ignore the check in this case ???),\n+      --  except if Check_Float_Overflow is set.\n \n       if Present (Etype (N))\n         and then Is_Floating_Point_Type (Etype (N))\n         and then not Is_Constrained (Etype (N))\n+        and then not Check_Float_Overflow\n       then\n          return;\n       end if;\n@@ -9212,6 +9214,7 @@ package body Checks is\n       Wnode       : Node_Id  := Warn_Node;\n       Ret_Result  : Check_Result := (Empty, Empty);\n       Num_Checks  : Integer := 0;\n+      Reason      : RT_Exception_Code := CE_Range_Check_Failed;\n \n       procedure Add_Check (N : Node_Id);\n       --  Adds the action given to Ret_Result if N is non-Empty\n@@ -9833,6 +9836,16 @@ package body Checks is\n          else\n             if not In_Subrange_Of (S_Typ, T_Typ) then\n                Cond := Discrete_Expr_Cond (Ck_Node, T_Typ);\n+\n+            --  Special case CodePeer_Mode and apparently redundant checks on\n+            --  floating point types: these are used as overflow checks, see\n+            --  Exp_Util.Check_Float_Op_Overflow.\n+\n+            elsif CodePeer_Mode and then Check_Float_Overflow\n+              and then Is_Floating_Point_Type (S_Typ)\n+            then\n+               Cond := Discrete_Expr_Cond (Ck_Node, T_Typ);\n+               Reason := CE_Overflow_Check_Failed;\n             end if;\n          end if;\n       end if;\n@@ -10027,7 +10040,7 @@ package body Checks is\n          Add_Check\n            (Make_Raise_Constraint_Error (Loc,\n              Condition => Cond,\n-             Reason    => CE_Range_Check_Failed));\n+             Reason    => Reason));\n       end if;\n \n       return Ret_Result;"}, {"sha": "f3ea21fe2bfcc484c583287c795efd11a3b4a835", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e943fe8a6ae5d1b5f1f82825145cbd4e7c764405/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e943fe8a6ae5d1b5f1f82825145cbd4e7c764405/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=e943fe8a6ae5d1b5f1f82825145cbd4e7c764405", "patch": "@@ -1647,6 +1647,28 @@ package body Exp_Util is\n          return;\n       end if;\n \n+      --  Special expansion for CodePeer_Mode: we reuse the Apply_Range_Check\n+      --  machinery instead of expanding a 'Valid attribute, since CodePeer\n+      --  does not know how to handle expansion of 'Valid on floating point.\n+      --  ??? Consider using the same expansion in normal mode. This should\n+      --  work assuming division checks are also enabled (to prevent generation\n+      --  of NaNs), except for e.g. unchecked conversions which might also\n+      --  generate NaNs.\n+\n+      if CodePeer_Mode then\n+         declare\n+            Typ : constant Entity_Id := Etype (N);\n+         begin\n+            --  Prevent recursion\n+\n+            Set_Analyzed (N);\n+\n+            Apply_Range_Check (N, Typ);\n+            Analyze_And_Resolve (N, Typ);\n+            return;\n+         end;\n+      end if;\n+\n       --  Otherwise we replace the expression by\n \n       --  do Tnn : constant ftype := expression;"}, {"sha": "ee6a1d978b4ef0206b999c3b2e3c567e2d1cfe65", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e943fe8a6ae5d1b5f1f82825145cbd4e7c764405/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e943fe8a6ae5d1b5f1f82825145cbd4e7c764405/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=e943fe8a6ae5d1b5f1f82825145cbd4e7c764405", "patch": "@@ -1682,6 +1682,7 @@ package body Sem_Ch12 is\n \n                         if Present (Match) then\n                            if Nkind (Match) = N_Operator_Symbol then\n+\n                               --  If the name is a default, find its visible\n                               --  entity at the point of instantiation.\n "}]}