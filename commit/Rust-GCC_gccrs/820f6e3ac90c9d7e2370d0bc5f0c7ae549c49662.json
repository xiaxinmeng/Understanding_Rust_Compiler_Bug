{"sha": "820f6e3ac90c9d7e2370d0bc5f0c7ae549c49662", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODIwZjZlM2FjOTBjOWQ3ZTIzNzBkMGJjNWYwYzdhZTU0OWM0OTY2Mg==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@cygnus.com", "date": "1999-10-05T23:07:09Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1999-10-05T23:07:09Z"}, "message": "Make libgcc1-test.c compile without warnings\n\nFrom-SVN: r29832", "tree": {"sha": "71c9266b821c1ac91ca564a8cd9a87f0d9c25948", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/71c9266b821c1ac91ca564a8cd9a87f0d9c25948"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/820f6e3ac90c9d7e2370d0bc5f0c7ae549c49662", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/820f6e3ac90c9d7e2370d0bc5f0c7ae549c49662", "html_url": "https://github.com/Rust-GCC/gccrs/commit/820f6e3ac90c9d7e2370d0bc5f0c7ae549c49662", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/820f6e3ac90c9d7e2370d0bc5f0c7ae549c49662/comments", "author": null, "committer": null, "parents": [{"sha": "2f9e65b1f1677a6268a587b3d389488c20ffefb1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f9e65b1f1677a6268a587b3d389488c20ffefb1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2f9e65b1f1677a6268a587b3d389488c20ffefb1"}], "stats": {"total": 27, "additions": 23, "deletions": 4}, "files": [{"sha": "2a249a0aa50f9e2c923e7646b89a59d34f20d549", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/820f6e3ac90c9d7e2370d0bc5f0c7ae549c49662/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/820f6e3ac90c9d7e2370d0bc5f0c7ae549c49662/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=820f6e3ac90c9d7e2370d0bc5f0c7ae549c49662", "patch": "@@ -1,4 +1,10 @@\n-Tue Oct  5 15:37:04 1999  Michael Meissner  <meissner@cygnus.com>\n+Tue Oct  5 16:14:40 1999  Michael Meissner  <meissner@cygnus.com>\n+\n+\t* libgcc1-test.c (toplevel): Include stddef.h to get size_t.\n+\t({,d}discard): Add forward declarations.  Declare parameter as\n+\tunused.\n+\t(main_without_main): Explicitly declare return type to be int.\n+\t(memcpy): Properly declare.\n \n \t* libgcc2.c (toplevel): If inhibit_libc is defined and not\n \tbuilding the trampoline support, declare malloc, free, and"}, {"sha": "67c7639deeac60a5b90f5b693abf5d9d9e3cd1d8", "filename": "gcc/libgcc1-test.c", "status": "modified", "additions": 16, "deletions": 3, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/820f6e3ac90c9d7e2370d0bc5f0c7ae549c49662/gcc%2Flibgcc1-test.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/820f6e3ac90c9d7e2370d0bc5f0c7ae549c49662/gcc%2Flibgcc1-test.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flibgcc1-test.c?ref=820f6e3ac90c9d7e2370d0bc5f0c7ae549c49662", "patch": "@@ -3,12 +3,17 @@\n    you have provided replacements for all the libgcc1.c functions that\n    your target machine needs.  */\n \n+#include <stddef.h>\n+\n int foo ();\n double dfoo ();\n+void discard (int);\n+void ddiscard (double);\n \n /* We don't want __main here because that can drag in atexit (among other\n    things) which won't necessarily exist yet.  */\n \n+int\n main_without__main ()\n {\n   int a = foo (), b = foo ();\n@@ -65,14 +70,17 @@ main_without__main ()\n   return 0;\n }\n \n+void\n discard (x)\n-     int x;\n+     int x __attribute__((__unused__));\n {}\n \n+void\n ddiscard (x)\n-     double x;\n+     double x __attribute__((__unused__));\n {}\n \n+int\n foo ()\n {\n   static int table[] = {20, 69, 4, 12};\n@@ -98,7 +106,12 @@ extern void _start() __asm__(\"_start\");\n extern void __start() __asm__(\"__start\");\n \n /* Provide functions that might be needed by soft-float emulation routines.  */\n-void memcpy() {}\n+void *memcpy(void *to,\n+\t     const void *from __attribute__((__unused__)),\n+\t     size_t len __attribute__((__unused__)))\n+{\n+  return to;\n+}\n \n void start() {}\n void _start() {}"}]}