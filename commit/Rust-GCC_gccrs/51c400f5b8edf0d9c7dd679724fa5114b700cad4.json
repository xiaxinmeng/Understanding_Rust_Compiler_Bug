{"sha": "51c400f5b8edf0d9c7dd679724fa5114b700cad4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTFjNDAwZjViOGVkZjBkOWM3ZGQ2Nzk3MjRmYTUxMTRiNzAwY2FkNA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-04T08:55:50Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-04T08:55:50Z"}, "message": "[multiple changes]\n\n2011-08-04  Robert Dewar  <dewar@adacore.com>\n\n\t* erroutc.adb: Minor reformatting.\n\n2011-08-04  Thomas Quinot  <quinot@adacore.com>\n\n\t* par_sco.adb: Comment update.\n\n2011-08-04  Tristan Gingold  <gingold@adacore.com>\n\n\t* s-flocon.ads: New file.\n\t* g-flocon.ads: Now a renaming of s-flocon.\n\t* Makefile.rtl: Add s-flocon.o\n\nFrom-SVN: r177336", "tree": {"sha": "1a5af59ce150f5ecbbf65e9787b42a1736f1e056", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1a5af59ce150f5ecbbf65e9787b42a1736f1e056"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/51c400f5b8edf0d9c7dd679724fa5114b700cad4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51c400f5b8edf0d9c7dd679724fa5114b700cad4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/51c400f5b8edf0d9c7dd679724fa5114b700cad4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51c400f5b8edf0d9c7dd679724fa5114b700cad4/comments", "author": null, "committer": null, "parents": [{"sha": "6a49f11019c0927147f2b11efc45fddacd51d6fe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a49f11019c0927147f2b11efc45fddacd51d6fe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a49f11019c0927147f2b11efc45fddacd51d6fe"}], "stats": {"total": 115, "additions": 86, "deletions": 29}, "files": [{"sha": "0bf95191e56f048061c34821d6869d10b2ed08d4", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51c400f5b8edf0d9c7dd679724fa5114b700cad4/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51c400f5b8edf0d9c7dd679724fa5114b700cad4/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=51c400f5b8edf0d9c7dd679724fa5114b700cad4", "patch": "@@ -1,3 +1,17 @@\n+2011-08-04  Robert Dewar  <dewar@adacore.com>\n+\n+\t* erroutc.adb: Minor reformatting.\n+\n+2011-08-04  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* par_sco.adb: Comment update.\n+\n+2011-08-04  Tristan Gingold  <gingold@adacore.com>\n+\n+\t* s-flocon.ads: New file.\n+\t* g-flocon.ads: Now a renaming of s-flocon.\n+\t* Makefile.rtl: Add s-flocon.o\n+\n 2011-08-04  Javier Miranda  <miranda@adacore.com>\n \n \t* exp_strm.adb (Build_Array_Input_Function): if the array type is"}, {"sha": "046e5378bf9fcbac0a62f88cc4ec0c4416071457", "filename": "gcc/ada/Makefile.rtl", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51c400f5b8edf0d9c7dd679724fa5114b700cad4/gcc%2Fada%2FMakefile.rtl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51c400f5b8edf0d9c7dd679724fa5114b700cad4/gcc%2Fada%2FMakefile.rtl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FMakefile.rtl?ref=51c400f5b8edf0d9c7dd679724fa5114b700cad4", "patch": "@@ -492,6 +492,7 @@ GNATRTL_NONTASKING_OBJS= \\\n   s-filofl$(objext) \\\n   s-finroo$(objext) \\\n   s-fishfl$(objext) \\\n+  s-flocon$(objext) \\\n   s-fore$(objext)   \\\n   s-fvadfl$(objext) \\\n   s-fvaffl$(objext) \\"}, {"sha": "593b71ceb278753bc8e54daa5dffbce584c93236", "filename": "gcc/ada/erroutc.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51c400f5b8edf0d9c7dd679724fa5114b700cad4/gcc%2Fada%2Ferroutc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51c400f5b8edf0d9c7dd679724fa5114b700cad4/gcc%2Fada%2Ferroutc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferroutc.adb?ref=51c400f5b8edf0d9c7dd679724fa5114b700cad4", "patch": "@@ -21,7 +21,7 @@\n -- GNAT was originally developed  by the GNAT team at  New York University. --\n -- Extensive contributions were provided by Ada Core Technologies Inc.      --\n --                                                                          --\n--------------------------------------------R-----------------------------------\n+------------------------------------------------------------------------------\n \n --  Warning! Error messages can be generated during Gigi processing by direct\n --  calls to error message routines, so it is essential that the processing"}, {"sha": "a7ab7f6d90ffa67cfe0c3099f7afb494d0fdd5cf", "filename": "gcc/ada/g-flocon.ads", "status": "modified", "additions": 4, "deletions": 25, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51c400f5b8edf0d9c7dd679724fa5114b700cad4/gcc%2Fada%2Fg-flocon.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51c400f5b8edf0d9c7dd679724fa5114b700cad4/gcc%2Fada%2Fg-flocon.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-flocon.ads?ref=51c400f5b8edf0d9c7dd679724fa5114b700cad4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---                     Copyright (C) 2000-2010, AdaCore                     --\n+--                     Copyright (C) 2000-2011, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -31,29 +31,8 @@\n \n --  Control functions for floating-point unit\n \n-package GNAT.Float_Control is\n+--  See file s-flocon.ads for full documentation of the interface\n \n-   procedure Reset;\n-   --  Reset the floating-point processor to the default state needed to get\n-   --  correct Ada semantics for the target. Some third party tools change\n-   --  the settings for the floating-point processor. Reset can be called\n-   --  to reset the floating-point processor into the mode required by GNAT\n-   --  for correct operation. Use this call after a call to foreign code if\n-   --  you suspect incorrect floating-point operation after the call.\n-   --\n-   --  For example under Windows NT some system DLL calls change the default\n-   --  FPU arithmetic to 64 bit precision mode. However, since in Ada 95 it\n-   --  is required to provide full access to the floating-point types of the\n-   --  architecture, GNAT requires full 80-bit precision mode, and Reset makes\n-   --  sure this mode is established.\n-   --\n-   --  Similarly on the PPC processor, it is important that overflow and\n-   --  underflow exceptions be disabled.\n-   --\n-   --  The call to Reset simply has no effect if the target environment\n-   --  does not give rise to such concerns.\n+with System.Float_Control;\n \n-private\n-   pragma Import (C, Reset, \"__gnat_init_float\");\n-\n-end GNAT.Float_Control;\n+package GNAT.Float_Control renames System.Float_Control;"}, {"sha": "af953771f20d401237e7ff254557e6d0fb027b25", "filename": "gcc/ada/par_sco.adb", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51c400f5b8edf0d9c7dd679724fa5114b700cad4/gcc%2Fada%2Fpar_sco.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51c400f5b8edf0d9c7dd679724fa5114b700cad4/gcc%2Fada%2Fpar_sco.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar_sco.adb?ref=51c400f5b8edf0d9c7dd679724fa5114b700cad4", "patch": "@@ -987,9 +987,13 @@ package body Par_SCO is\n       procedure Set_Statement_Entry;\n       --  If Start is No_Location, does nothing, otherwise outputs a SCO_Table\n       --  statement entry for the range Start-Stop and then sets both Start\n-      --  and Stop to No_Location. Unconditionally sets Term to True. This is\n-      --  called when we find a statement or declaration that generates its\n-      --  own table entry, so that we must end the current statement sequence.\n+      --  and Stop to No_Location.\n+      --  What are Start and Stop??? This comment seems completely unrelated\n+      --  to the implementation!???\n+      --  Unconditionally sets Term to True. What is Term???\n+      --  This is called when we find a statement or declaration that generates\n+      --  its own table entry, so that we must end the current statement\n+      --  sequence.\n \n       procedure Process_Decisions_Defer (N : Node_Id; T : Character);\n       pragma Inline (Process_Decisions_Defer);"}, {"sha": "5741efd90a06753102439838904f1d7f04a6c75f", "filename": "gcc/ada/s-flocon.ads", "status": "added", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51c400f5b8edf0d9c7dd679724fa5114b700cad4/gcc%2Fada%2Fs-flocon.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51c400f5b8edf0d9c7dd679724fa5114b700cad4/gcc%2Fada%2Fs-flocon.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-flocon.ads?ref=51c400f5b8edf0d9c7dd679724fa5114b700cad4", "patch": "@@ -0,0 +1,59 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                         GNAT RUN-TIME COMPONENTS                         --\n+--                                                                          --\n+--                 S Y S T E M . F L O A T _ C O N T R O L                  --\n+--                                                                          --\n+--                                 S p e c                                  --\n+--                                                                          --\n+--                     Copyright (C) 2000-2011, AdaCore                     --\n+--                                                                          --\n+-- GNAT is free software;  you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.                                     --\n+--                                                                          --\n+-- As a special exception under Section 7 of GPL version 3, you are granted --\n+-- additional permissions described in the GCC Runtime Library Exception,   --\n+-- version 3.1, as published by the Free Software Foundation.               --\n+--                                                                          --\n+-- You should have received a copy of the GNU General Public License and    --\n+-- a copy of the GCC Runtime Library Exception along with this program;     --\n+-- see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    --\n+-- <http://www.gnu.org/licenses/>.                                          --\n+--                                                                          --\n+-- GNAT was originally developed  by the GNAT team at  New York University. --\n+-- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+--  Control functions for floating-point unit\n+\n+package System.Float_Control is\n+\n+   procedure Reset;\n+   --  Reset the floating-point processor to the default state needed to get\n+   --  correct Ada semantics for the target. Some third party tools change\n+   --  the settings for the floating-point processor. Reset can be called\n+   --  to reset the floating-point processor into the mode required by GNAT\n+   --  for correct operation. Use this call after a call to foreign code if\n+   --  you suspect incorrect floating-point operation after the call.\n+   --\n+   --  For example under Windows NT some system DLL calls change the default\n+   --  FPU arithmetic to 64 bit precision mode. However, since in Ada 95 it\n+   --  is required to provide full access to the floating-point types of the\n+   --  architecture, GNAT requires full 80-bit precision mode, and Reset makes\n+   --  sure this mode is established.\n+   --\n+   --  Similarly on the PPC processor, it is important that overflow and\n+   --  underflow exceptions be disabled.\n+   --\n+   --  The call to Reset simply has no effect if the target environment\n+   --  does not give rise to such concerns.\n+\n+private\n+   pragma Import (C, Reset, \"__gnat_init_float\");\n+\n+end System.Float_Control;"}]}