{"sha": "960a58b949d97b106bc3579e7c451d0f4f5749ac", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTYwYTU4Yjk0OWQ5N2IxMDZiYzM1NzllN2M0NTFkMGY0ZjU3NDlhYw==", "commit": {"author": {"name": "Martin Sebor", "email": "msebor@gcc.gnu.org", "date": "2018-06-11T20:32:24Z"}, "committer": {"name": "Martin Sebor", "email": "msebor@gcc.gnu.org", "date": "2018-06-11T20:32:24Z"}, "message": "invoke.texi (-Wall): List -Wc++17-compat.\n\ngcc/ChangeLog:\n\n\t* doc/invoke.texi (-Wall): List -Wc++17-compat.\n\t(Wno-class-memaccess): Add @opindex.\n\t(Wno-templates, Wno-multiple-inheritance): Same.\n\t(Wno-virtual-inheritance, Wno-namespaces): Same.\n\t(Wno-pedantic, Wno-chkp, Wcoverage-mismatch): Same.\n\t(Wno-format-overflow, Wno-format-truncation): Same.\n\t(Wno-unused-local-typedefs, Walloc-size-larger-than): Same.\n\t(Wno-alloc-size-larger-than, Wframe-larger-than): Same\n\t(Wno-stack-usage, Wno-c++-compat, Wno-c++11-compat): Same.\n\t(Wno-c++14-compat, Wno-c++17-compat, Wno-openmp-simd): Same.\n\t(Wno-unsuffixed-float-constants, Wno-addr-space-convert): Same.\n\t(Wno-misspelled-isr): Same.\n\nFrom-SVN: r261453", "tree": {"sha": "cc4e09a89a5d0c6e5e74112b28e9591582596bb6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cc4e09a89a5d0c6e5e74112b28e9591582596bb6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/960a58b949d97b106bc3579e7c451d0f4f5749ac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/960a58b949d97b106bc3579e7c451d0f4f5749ac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/960a58b949d97b106bc3579e7c451d0f4f5749ac", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/960a58b949d97b106bc3579e7c451d0f4f5749ac/comments", "author": null, "committer": null, "parents": [{"sha": "223c63e62ab44cb36102758dffd5ac8c9ab63bb1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/223c63e62ab44cb36102758dffd5ac8c9ab63bb1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/223c63e62ab44cb36102758dffd5ac8c9ab63bb1"}], "stats": {"total": 49, "additions": 45, "deletions": 4}, "files": [{"sha": "7e1dcba48cf5d315c680e5705442dacd76c787df", "filename": "gcc/ChangeLog", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/960a58b949d97b106bc3579e7c451d0f4f5749ac/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/960a58b949d97b106bc3579e7c451d0f4f5749ac/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=960a58b949d97b106bc3579e7c451d0f4f5749ac", "patch": "@@ -1,3 +1,18 @@\n+2018-06-11  Martin Sebor  <msebor@redhat.com>\n+\n+\t* doc/invoke.texi (-Wall): List -Wc++17-compat.\n+\t(Wno-class-memaccess): Add @opindex.\n+\t(Wno-templates, Wno-multiple-inheritance): Same.\n+\t(Wno-virtual-inheritance, Wno-namespaces): Same.\n+\t(Wno-pedantic, Wno-chkp, Wcoverage-mismatch): Same.\n+\t(Wno-format-overflow, Wno-format-truncation): Same.\n+\t(Wno-unused-local-typedefs, Walloc-size-larger-than): Same.\n+\t(Wno-alloc-size-larger-than, Wframe-larger-than): Same\n+\t(Wno-stack-usage, Wno-c++-compat, Wno-c++11-compat): Same.\n+\t(Wno-c++14-compat, Wno-c++17-compat, Wno-openmp-simd): Same.\n+\t(Wno-unsuffixed-float-constants, Wno-addr-space-convert): Same.\n+\t(Wno-misspelled-isr): Same.\n+\n 2018-06-11  Martin Sebor  <msebor@redhat.com>\n \n \t* PR tree-optimization/86083\n@@ -43,7 +58,7 @@\n 2018-06-08  David Edelsohn  <dje.gcc@gmail.com>\n \n \t* config/rs6000/rs6000.c (rs6000_passes_ieee128): Protect with #if\n-\tTARGET_ELF. \n+\tTARGET_ELF.\n \n 2018-06-08  Martin Liska  <mliska@suse.cz>\n "}, {"sha": "5c8f66c86ce000515a92d6fc1dc319f136649e7c", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 29, "deletions": 3, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/960a58b949d97b106bc3579e7c451d0f4f5749ac/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/960a58b949d97b106bc3579e7c451d0f4f5749ac/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=960a58b949d97b106bc3579e7c451d0f4f5749ac", "patch": "@@ -267,7 +267,7 @@ Objective-C and Objective-C++ Dialects}.\n -Wno-attributes  -Wbool-compare  -Wbool-operation @gol\n -Wno-builtin-declaration-mismatch @gol\n -Wno-builtin-macro-redefined  -Wc90-c99-compat  -Wc99-c11-compat @gol\n--Wc++-compat  -Wc++11-compat  -Wc++14-compat  @gol\n+-Wc++-compat  -Wc++11-compat  -Wc++14-compat  -Wc++17-compat  @gol\n -Wcast-align  -Wcast-align=strict  -Wcast-function-type  -Wcast-qual  @gol\n -Wchar-subscripts  -Wcatch-value  -Wcatch-value=@var{n} @gol\n -Wclobbered  -Wcomment  -Wconditionally-supported @gol\n@@ -3034,6 +3034,7 @@ C++17 it calls @code{f<void(*)()noexcept>}.\n \n @item -Wclass-memaccess @r{(C++ and Objective-C++ only)}\n @opindex Wclass-memaccess\n+@opindex Wno-class-memaccess\n Warn when the destination of a call to a raw memory function such as\n @code{memset} or @code{memcpy} is an object of class type, and when writing\n into such an object might bypass the class non-trivial or deleted constructor\n@@ -3220,6 +3221,7 @@ unsignedness, but the standard mandates the current behavior.\n \n @item -Wtemplates @r{(C++ and Objective-C++ only)}\n @opindex Wtemplates\n+@opindex Wno-templates\n Warn when a primary template declaration is encountered.  Some coding\n rules disallow templates, and this may be used to enforce that rule.\n The warning is inactive inside a system header file, such as the STL, so\n@@ -3228,6 +3230,7 @@ templates.\n \n @item -Wmultiple-inheritance @r{(C++ and Objective-C++ only)}\n @opindex Wmultiple-inheritance\n+@opindex Wno-multiple-inheritance\n Warn when a class is defined with multiple direct base classes.  Some\n coding rules disallow multiple inheritance, and this may be used to\n enforce that rule.  The warning is inactive inside a system header file,\n@@ -3236,6 +3239,7 @@ classes that indirectly use multiple inheritance.\n \n @item -Wvirtual-inheritance\n @opindex Wvirtual-inheritance\n+@opindex Wno-virtual-inheritance\n Warn when a class is defined with a virtual direct base class.  Some\n coding rules disallow multiple inheritance, and this may be used to\n enforce that rule.  The warning is inactive inside a system header file,\n@@ -3244,6 +3248,7 @@ classes that indirectly use virtual inheritance.\n \n @item -Wnamespaces\n @opindex Wnamespaces\n+@opindex Wno-namespaces\n Warn when a namespace definition is opened.  Some coding rules disallow\n namespaces, and this may be used to enforce that rule.  The warning is\n inactive inside a system header file, such as the STL, so one can still\n@@ -3874,6 +3879,7 @@ warns that an unrecognized option is present.\n @itemx -pedantic\n @opindex pedantic\n @opindex Wpedantic\n+@opindex Wno-pedantic\n Issue all the warnings demanded by strict ISO C and ISO C++;\n reject all programs that use forbidden extensions, and some other\n programs that do not follow ISO C and ISO C++.  For ISO C, follows the\n@@ -4055,8 +4061,15 @@ of error, as programmers often forget that this type is signed on some\n machines.\n This warning is enabled by @option{-Wall}.\n \n+@item -Wchkp\n+@opindex Wchkp\n+@opindex Wno-chkp\n+Warn about an invalid memory access that is found by Pointer Bounds Checker\n+(@option{-fcheck-pointer-bounds}).\n+\n @item -Wno-coverage-mismatch\n @opindex Wno-coverage-mismatch\n+@opindex Wcoverage-mismatch\n Warn if feedback profiles do not match when using the\n @option{-fprofile-use} option.\n If a source file is changed between compiling with @option{-fprofile-gen} and\n@@ -4306,7 +4319,7 @@ logic @option{-Wformat-overflow}.\n @item -Wformat-truncation\n @itemx -Wformat-truncation=1\n @opindex Wformat-truncation\n-@opindex Wno-format-overflow\n+@opindex Wno-format-truncation\n Level @var{1} of @option{-Wformat-truncation} enabled by @option{-Wformat}\n employs a conservative approach that warns only about calls to bounded\n functions whose return value is unused and that will most likely result\n@@ -4963,6 +4976,7 @@ To suppress this warning use the @code{unused} attribute\n \n @item -Wunused-local-typedefs @r{(C, Objective-C, C++ and Objective-C++ only)}\n @opindex Wunused-local-typedefs\n+@opindex Wno-unused-local-typedefs\n Warn when a typedef locally defined in a function is not used.\n This warning is enabled by @option{-Wall}.\n \n@@ -5496,6 +5510,8 @@ of @code{realloc} has been deprecated) relying on it may result in subtle\n portability bugs and should be avoided.\n \n @item -Walloc-size-larger-than=@var{n}\n+@opindex Walloc-size-larger-than=@var{n}\n+@opindex Wno-alloc-size-larger-than\n Warn about calls to functions decorated with attribute @code{alloc_size}\n that attempt to allocate objects larger than the specified number of bytes,\n or where the result of the size computation in an integer type with infinite\n@@ -5930,6 +5946,7 @@ This warning is enabled by @option{-Wshadow=local}.\n Warn whenever an object of larger than @var{len} bytes is defined.\n \n @item -Wframe-larger-than=@var{len}\n+@opindex Wframe-larger-than=@var{len}\n @opindex Wframe-larger-than\n Warn if the size of a function frame is larger than @var{len} bytes.\n The computation done to determine the stack frame size is approximate\n@@ -5948,6 +5965,7 @@ on the heap.\n \n @item -Wstack-usage=@var{len}\n @opindex Wstack-usage\n+@opindex Wno-stack-usage\n Warn if the stack usage of a function might be larger than @var{len} bytes.\n The computation done to determine the stack usage is conservative.\n Any space allocated via @code{alloca}, variable-length arrays, or related\n@@ -6114,24 +6132,28 @@ disabled in the expression that follows @code{__extension__}.\n \n @item -Wc++-compat @r{(C and Objective-C only)}\n @opindex Wc++-compat\n+@opindex Wno-c++-compat\n Warn about ISO C constructs that are outside of the common subset of\n ISO C and ISO C++, e.g.@: request for implicit conversion from\n @code{void *} to a pointer to non-@code{void} type.\n \n @item -Wc++11-compat @r{(C++ and Objective-C++ only)}\n @opindex Wc++11-compat\n+@opindex Wno-c++11-compat\n Warn about C++ constructs whose meaning differs between ISO C++ 1998\n and ISO C++ 2011, e.g., identifiers in ISO C++ 1998 that are keywords\n in ISO C++ 2011.  This warning turns on @option{-Wnarrowing} and is\n enabled by @option{-Wall}.\n \n @item -Wc++14-compat @r{(C++ and Objective-C++ only)}\n @opindex Wc++14-compat\n+@opindex Wno-c++14-compat\n Warn about C++ constructs whose meaning differs between ISO C++ 2011\n and ISO C++ 2014.  This warning is enabled by @option{-Wall}.\n \n @item -Wc++17-compat @r{(C++ and Objective-C++ only)}\n @opindex Wc++17-compat\n+@opindex Wno-c++17-compat\n Warn about C++ constructs whose meaning differs between ISO C++ 2014\n and ISO C++ 2017.  This warning is enabled by @option{-Wall}.\n \n@@ -6735,7 +6757,8 @@ Warn about One Definition Rule violations during link-time optimization.\n Requires @option{-flto-odr-type-merging} to be enabled.  Enabled by default.\n \n @item -Wopenmp-simd\n-@opindex Wopenm-simd\n+@opindex Wopenmp-simd\n+@opindex Wno-openmp-simd\n Warn if the vectorizer cost model overrides the OpenMP\n simd directive set by user.  The @option{-fsimd-cost-model=unlimited}\n option can be used to relax the cost model.\n@@ -7049,6 +7072,7 @@ This option is implied by @option{-Wpedantic}, and can be disabled with\n \n @item -Wunsuffixed-float-constants @r{(C and Objective-C only)}\n @opindex Wunsuffixed-float-constants\n+@opindex Wno-unsuffixed-float-constants\n \n Issue a warning for any floating constant that does not have\n a suffix.  When used together with @option{-Wsystem-headers} it\n@@ -16756,11 +16780,13 @@ Don't link against AVR-LibC's device specific library @code{lib<mcu>.a}.\n \n @item -Waddr-space-convert\n @opindex Waddr-space-convert\n+@opindex Wno-addr-space-convert\n Warn about conversions between address spaces in the case where the\n resulting address space is not contained in the incoming address space.\n \n @item -Wmisspelled-isr\n @opindex Wmisspelled-isr\n+@opindex Wno-misspelled-isr\n Warn if the ISR is misspelled, i.e. without __vector prefix.\n Enabled by default.\n @end table"}]}