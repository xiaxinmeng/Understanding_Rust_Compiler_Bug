{"sha": "62fcdefba1b955d55f55d89b8524e8b01463efd4", "node_id": "C_kwDOANBUbNoAKDYyZmNkZWZiYTFiOTU1ZDU1ZjU1ZDg5Yjg1MjRlOGIwMTQ2M2VmZDQ", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2022-01-18T13:30:30Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2022-01-18T16:25:37Z"}, "message": "v850: fix -Wformat-diag warnings.\n\ngcc/ChangeLog:\n\n\t* config/v850/v850-c.cc (pop_data_area): Fix -Wformat-diag\n\twarning.\n\t(ghs_pragma_section): Likewise.\n\t(ghs_pragma_interrupt): Likewise.\n\t(ghs_pragma_starttda): Likewise.\n\t(ghs_pragma_startsda): Likewise.\n\t(ghs_pragma_startzda): Likewise.\n\t(ghs_pragma_endtda): Likewise.\n\t(ghs_pragma_endsda): Likewise.\n\t(ghs_pragma_endzda): Likewise.", "tree": {"sha": "738f4a263fa318defa575ec9f7b197a9bf5af8d7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/738f4a263fa318defa575ec9f7b197a9bf5af8d7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/62fcdefba1b955d55f55d89b8524e8b01463efd4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62fcdefba1b955d55f55d89b8524e8b01463efd4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62fcdefba1b955d55f55d89b8524e8b01463efd4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62fcdefba1b955d55f55d89b8524e8b01463efd4/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "67f84a803f4a6daa669157ab0424ed8c62b7bbdd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67f84a803f4a6daa669157ab0424ed8c62b7bbdd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/67f84a803f4a6daa669157ab0424ed8c62b7bbdd"}], "stats": {"total": 22, "additions": 11, "deletions": 11}, "files": [{"sha": "45a3a0d811f36909c15ebb5018f2c1f35b026c1a", "filename": "gcc/config/v850/v850-c.cc", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62fcdefba1b955d55f55d89b8524e8b01463efd4/gcc%2Fconfig%2Fv850%2Fv850-c.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62fcdefba1b955d55f55d89b8524e8b01463efd4/gcc%2Fconfig%2Fv850%2Fv850-c.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fv850%2Fv850-c.cc?ref=62fcdefba1b955d55f55d89b8524e8b01463efd4", "patch": "@@ -64,10 +64,10 @@ static int\n pop_data_area (v850_data_area data_area)\n {\n   if (data_area_stack == NULL)\n-    warning (OPT_Wpragmas, \"#pragma GHS endXXXX found without \"\n+    warning (OPT_Wpragmas, \"%<#pragma%> GHS endXXXX found without \"\n \t     \"previous startXXX\");\n   else if (data_area != data_area_stack->data_area)\n-    warning (OPT_Wpragmas, \"#pragma GHS endXXX does not match \"\n+    warning (OPT_Wpragmas, \"%<#pragma%> GHS endXXX does not match \"\n \t     \"previous startXXX\");\n   else\n     {\n@@ -150,7 +150,7 @@ ghs_pragma_section (cpp_reader * pfile ATTRIBUTE_UNUSED)\n       if (type == CPP_COMMA)\n \trepeat = 1;\n       else if (type != CPP_EOF)\n-\twarning (OPT_Wpragmas, \"junk at end of #pragma ghs section\");\n+\twarning (OPT_Wpragmas, \"junk at end of %<#pragma%> ghs section\");\n       \n       if      (streq (sect, \"data\"))    kind = GHS_SECTION_KIND_DATA;\n       else if (streq (sect, \"text\"))    kind = GHS_SECTION_KIND_TEXT;\n@@ -181,7 +181,7 @@ ghs_pragma_section (cpp_reader * pfile ATTRIBUTE_UNUSED)\n   return;\n \n  bad:\n-  warning (OPT_Wpragmas, \"malformed #pragma ghs section\");\n+  warning (OPT_Wpragmas, \"malformed %<#pragma%> ghs section\");\n   return;\n \n  reset:\n@@ -200,7 +200,7 @@ ghs_pragma_interrupt (cpp_reader * pfile ATTRIBUTE_UNUSED)\n   tree x;\n   \n   if (pragma_lex (&x) != CPP_EOF)\n-    warning (OPT_Wpragmas, \"junk at end of #pragma ghs interrupt\");\n+    warning (OPT_Wpragmas, \"junk at end of %<#pragma%> ghs interrupt\");\n   \n   mark_current_function_as_interrupt ();\n }\n@@ -211,7 +211,7 @@ ghs_pragma_starttda (cpp_reader * pfile ATTRIBUTE_UNUSED)\n   tree x;\n   \n   if (pragma_lex (&x) != CPP_EOF)\n-    warning (OPT_Wpragmas, \"junk at end of #pragma ghs starttda\");\n+    warning (OPT_Wpragmas, \"junk at end of %<#pragma%> ghs starttda\");\n   \n   push_data_area (DATA_AREA_TDA);\n }\n@@ -222,7 +222,7 @@ ghs_pragma_startsda (cpp_reader * pfile ATTRIBUTE_UNUSED)\n   tree x;\n   \n   if (pragma_lex (&x) != CPP_EOF)\n-    warning (OPT_Wpragmas, \"junk at end of #pragma ghs startsda\");\n+    warning (OPT_Wpragmas, \"junk at end of %<#pragma%> ghs startsda\");\n   \n   push_data_area (DATA_AREA_SDA);\n }\n@@ -233,7 +233,7 @@ ghs_pragma_startzda (cpp_reader * pfile ATTRIBUTE_UNUSED)\n   tree x;\n   \n   if (pragma_lex (&x) != CPP_EOF)\n-    warning (OPT_Wpragmas, \"junk at end of #pragma ghs startzda\");\n+    warning (OPT_Wpragmas, \"junk at end of %<#pragma%> ghs startzda\");\n   \n   push_data_area (DATA_AREA_ZDA);\n }\n@@ -244,7 +244,7 @@ ghs_pragma_endtda (cpp_reader * pfile ATTRIBUTE_UNUSED)\n   tree x;\n   \n   if (pragma_lex (&x) != CPP_EOF)\n-    warning (OPT_Wpragmas, \"junk at end of #pragma ghs endtda\");\n+    warning (OPT_Wpragmas, \"junk at end of %<#pragma%> ghs endtda\");\n   \n   pop_data_area (DATA_AREA_TDA);\n }\n@@ -255,7 +255,7 @@ ghs_pragma_endsda (cpp_reader * pfile ATTRIBUTE_UNUSED)\n   tree x;\n   \n   if (pragma_lex (&x) != CPP_EOF)\n-    warning (OPT_Wpragmas, \"junk at end of #pragma ghs endsda\");\n+    warning (OPT_Wpragmas, \"junk at end of %<#pragma%> ghs endsda\");\n   \n   pop_data_area (DATA_AREA_SDA);\n }\n@@ -266,7 +266,7 @@ ghs_pragma_endzda (cpp_reader * pfile ATTRIBUTE_UNUSED)\n   tree x;\n   \n   if (pragma_lex (&x) != CPP_EOF)\n-    warning (OPT_Wpragmas, \"junk at end of #pragma ghs endzda\");\n+    warning (OPT_Wpragmas, \"junk at end of %<#pragma%> ghs endzda\");\n   \n   pop_data_area (DATA_AREA_ZDA);\n }"}]}