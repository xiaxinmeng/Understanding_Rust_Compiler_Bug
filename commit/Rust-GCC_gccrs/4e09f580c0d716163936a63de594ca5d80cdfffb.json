{"sha": "4e09f580c0d716163936a63de594ca5d80cdfffb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGUwOWY1ODBjMGQ3MTYxNjM5MzZhNjNkZTU5NGNhNWQ4MGNkZmZmYg==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1992-03-30T23:22:55Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1992-03-30T23:22:55Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r640", "tree": {"sha": "f9f9e70502e29d1bbe24f696707d9f66deb94a38", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f9f9e70502e29d1bbe24f696707d9f66deb94a38"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4e09f580c0d716163936a63de594ca5d80cdfffb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e09f580c0d716163936a63de594ca5d80cdfffb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4e09f580c0d716163936a63de594ca5d80cdfffb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e09f580c0d716163936a63de594ca5d80cdfffb/comments", "author": null, "committer": null, "parents": [{"sha": "58e54c449bcd843cde0e989ef386283e708a88c9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58e54c449bcd843cde0e989ef386283e708a88c9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/58e54c449bcd843cde0e989ef386283e708a88c9"}], "stats": {"total": 26, "additions": 23, "deletions": 3}, "files": [{"sha": "068abf19c5edf50826f50b992b171c2cb860bc27", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 23, "deletions": 3, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e09f580c0d716163936a63de594ca5d80cdfffb/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e09f580c0d716163936a63de594ca5d80cdfffb/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=4e09f580c0d716163936a63de594ca5d80cdfffb", "patch": "@@ -1997,14 +1997,20 @@ output_block_move (insn, operands, num_regs)\n     {\n       if (CONSTANT_P (src_reg))\n \t{\n+\t  if (TARGET_STATS)\n+\t    mips_count_memory_refs (operands[1], 1);\n+\n \t  xoperands[1] = operands[1];\n \t  xoperands[0] = src_reg = operands[ 3 + num_regs-- ];\n \t  output_asm_insn (\"la\\t%0,%1\", xoperands);\n \t}\n \n       if (CONSTANT_P (dest_reg))\n \t{\n-\t  xoperands[1] = operands[1];\n+\t  if (TARGET_STATS)\n+\t    mips_count_memory_refs (operands[0], 1);\n+\n+\t  xoperands[1] = operands[0];\n \t  xoperands[0] = dest_reg = operands[ 3 + num_regs-- ];\n \t  output_asm_insn (\"la\\t%0,%1\", xoperands);\n \t}\n@@ -2023,6 +2029,8 @@ output_block_move (insn, operands, num_regs)\n     {\n       load_store[num].offset = offset;\n \n+      dslots_load_total++;\n+      dslots_load_filled++;\n       if (bytes >= UNITS_PER_WORD && align >= UNITS_PER_WORD)\n \t{\n \t  load_store[num].load     = \"lw\\t%0,%1\";\n@@ -2064,14 +2072,26 @@ output_block_move (insn, operands, num_regs)\n \t  bytes--;\n \t}\n \n+      if (TARGET_STATS)\n+\t{\n+\t  if (CONSTANT_P (src_reg))\n+\t    mips_count_memory_refs (src_reg, 1);\n+\n+\t  if (CONSTANT_P (dest_reg))\n+\t    mips_count_memory_refs (dest_reg, 1);\n+\t}\n+\n       /* Emit load/stores now if we have run out of registers or are\n \t at the end of the move.  */\n \n-      if (++num == 4 || bytes == 0)\n+      if (++num == num_regs || bytes == 0)\n \t{\n \t  /* If only load/store, we need a NOP after the load.  */\n \t  if (num == 1)\n-\t    load_store[0].load = load_store[0].load_nop;\n+\t    {\n+\t      load_store[0].load = load_store[0].load_nop;\n+\t      dslots_load_filled--;\n+\t    }\n \n \t  for (i = 0; i < num; i++)\n \t    {"}]}