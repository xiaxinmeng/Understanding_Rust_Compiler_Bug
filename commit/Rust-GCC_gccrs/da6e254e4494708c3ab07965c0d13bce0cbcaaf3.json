{"sha": "da6e254e4494708c3ab07965c0d13bce0cbcaaf3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGE2ZTI1NGU0NDk0NzA4YzNhYjA3OTY1YzBkMTNiY2UwY2JjYWFmMw==", "commit": {"author": {"name": "Catherine Moore", "email": "clm@redhat.com", "date": "2001-10-05T20:33:09Z"}, "committer": {"name": "Catherine Moore", "email": "clm@gcc.gnu.org", "date": "2001-10-05T20:33:09Z"}, "message": "stormy-abi: Document abi changes.\n\n        * config/stormy16/stormy-abi:  Document abi changes.\n        * config/stormy16/stormy16.h (REG_ALLOC_ORDER): Redefine.\n        (ICALL_REGS): New register class.\n        (NUM_ARGUMENT_REGISTERS): Now 6.\n        (DEFAULT_PCC_STRUCT_RETURN): Don't try to return structs\n        in registers.\n        (REG_CLASS_FROM_LETTER): Map 'z' to ICALL_REGS.\n        * config/stormy16.md (call_internal, call_value_internal,\n        indirect_jump): Use new 'z' constraint.\n\nFrom-SVN: r46041", "tree": {"sha": "de24cc2f4de71f36970bb2f8a818bd54857ec18f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/de24cc2f4de71f36970bb2f8a818bd54857ec18f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/da6e254e4494708c3ab07965c0d13bce0cbcaaf3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da6e254e4494708c3ab07965c0d13bce0cbcaaf3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da6e254e4494708c3ab07965c0d13bce0cbcaaf3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da6e254e4494708c3ab07965c0d13bce0cbcaaf3/comments", "author": null, "committer": null, "parents": [{"sha": "9f1c29317caa8a7433fd893ee86a0efafd8ab249", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f1c29317caa8a7433fd893ee86a0efafd8ab249", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9f1c29317caa8a7433fd893ee86a0efafd8ab249"}], "stats": {"total": 46, "additions": 31, "deletions": 15}, "files": [{"sha": "b696f91da8a3f5813759e68bf233cc75fbd3cc6e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da6e254e4494708c3ab07965c0d13bce0cbcaaf3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da6e254e4494708c3ab07965c0d13bce0cbcaaf3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=da6e254e4494708c3ab07965c0d13bce0cbcaaf3", "patch": "@@ -1,3 +1,15 @@\n+2001-10-05  Catherine Moore  <clm@redhat.com>\n+\n+        * config/stormy16/stormy-abi:  Document abi changes.\n+        * config/stormy16/stormy16.h (REG_ALLOC_ORDER): Redefine.\n+        (ICALL_REGS): New register class.\n+        (NUM_ARGUMENT_REGISTERS): Now 6.\n+        (DEFAULT_PCC_STRUCT_RETURN): Don't try to return structs\n+        in registers.\n+        (REG_CLASS_FROM_LETTER): Map 'z' to ICALL_REGS.\n+        * config/stormy16.md (call_internal, call_value_internal,\n+        indirect_jump): Use new 'z' constraint.\n+\n 2001-10-05  Neil Booth  <neil@daikokuya.demon.co.uk>\n \n \t* doc/cppinternals.texi: Update."}, {"sha": "847aa7c80283f0878980d7a852b03b6a2cdb7660", "filename": "gcc/config/stormy16/stormy-abi", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da6e254e4494708c3ab07965c0d13bce0cbcaaf3/gcc%2Fconfig%2Fstormy16%2Fstormy-abi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da6e254e4494708c3ab07965c0d13bce0cbcaaf3/gcc%2Fconfig%2Fstormy16%2Fstormy-abi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fstormy16%2Fstormy-abi?ref=da6e254e4494708c3ab07965c0d13bce0cbcaaf3", "patch": "@@ -24,17 +24,19 @@ The registers are allocated as follows:\n \n Register\tPurpose\n -------------------------------------------------------------------\n-r0, r1\t\tCall-volatile.  May be changed during the execution\n+r0, r1          Call-volatile.  May be changed during the execution\n+                of a call instruction.\n+r2 through r7   Argument passing;  call-clobbered.\n+r8, r9\t\tCall-volatile.  May be changed during the execution\n \t\tof a call instruction.\n-r2 through r9\tArgument passing; call-clobbered.\n r10 through r13\tCall-saved.\n r14\t\tProgram status word.\n r15\t\tStack pointer.\n \n \n-The return value of a procedure is returned in r2-r9 if it fits,\n-otherwise a pointer is passed as a `hidden' first argument\n-and the return value is placed there.\n+Scalar values are returned in register r2-r7 if the value fits.\n+Otherwise, a pointer is passed as a 'hidden' first argument and\n+the return value is placed there.\n \n Arguments are passed in registers starting in r2, then on the stack.\n Arguments of size not a multiple of a word are padded to whole words.\n@@ -83,20 +85,18 @@ count += N;\n \n \n One implementation of this is if a variadic function first\n-pushes registers 2 through 9 in sequence at entry, and\n+pushes registers 2 through 7 in sequence at entry, and\n sets 'base' to the address of the first word pushed, \n producing a stack that appears like:\n \n SP ->\n \t[other data]\n-\tr9\n-\tr8\n \tr7\n \tr6\n \tr5\n \tr4\n \tr3\n-count-> r2\n+count->\tr2\n \tReturn address (two words)\n \t9th procedure parameter word\n \t10th procedure parameter word"}, {"sha": "a0a3961b7b635e9de1108d866c269919ecdc5a51", "filename": "gcc/config/stormy16/stormy16.h", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da6e254e4494708c3ab07965c0d13bce0cbcaaf3/gcc%2Fconfig%2Fstormy16%2Fstormy16.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da6e254e4494708c3ab07965c0d13bce0cbcaaf3/gcc%2Fconfig%2Fstormy16%2Fstormy16.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fstormy16%2Fstormy16.h?ref=da6e254e4494708c3ab07965c0d13bce0cbcaaf3", "patch": "@@ -1043,7 +1043,7 @@ do {\t\t\t\t\t\t\t\t\t\\\n    only sequences of consecutive registers.  On such machines, define\n    `REG_ALLOC_ORDER' to be an initializer that lists the highest numbered\n    allocatable register first.  */\n-#define REG_ALLOC_ORDER { 9, 7, 6, 5, 4, 3, 8, 2, 1, 0, 10, 11, 12, 13, 14, 15, 16 }\n+#define REG_ALLOC_ORDER { 7, 6, 5, 4, 3, 2, 1, 0, 9, 8, 10, 11, 12, 13, 14, 15, 16 }\n \n /* A C statement (sans semicolon) to choose the order in which to allocate hard\n    registers for pseudo-registers local to a basic block.\n@@ -1204,6 +1204,7 @@ enum reg_class\n   R2_REGS,\n   EIGHT_REGS,\n   R8_REGS,\n+  ICALL_REGS,\n   GENERAL_REGS,\n   CARRY_REGS,\n   ALL_REGS,\n@@ -1226,6 +1227,7 @@ enum reg_class\n   \"R2_REGS\",\t\t\t\t\t\\\n   \"EIGHT_REGS\",\t\t\t\t\t\\\n   \"R8_REGS\",\t\t\t\t\t\\\n+  \"ICALL_REGS\",\t\t\t\t\t\\\n   \"GENERAL_REGS\",\t\t\t\t\\\n   \"CARRY_REGS\",\t\t\t\t\t\\\n   \"ALL_REGS\"\t\t\t\t\t\\\n@@ -1250,6 +1252,7 @@ enum reg_class\n   0x00004,\t\t\t\t\t\\\n   0x000FF,\t\t\t\t\t\\\n   0x00100,\t\t\t\t\t\\\n+  0x00300,\t\t\t\t\t\\\n   0x6FFFF,\t\t\t\t\t\\\n   0x10000,\t\t\t\t\t\\\n   (1 << FIRST_PSEUDO_REGISTER) - 1\t\t\\\n@@ -1303,6 +1306,7 @@ enum reg_class\n   : (CHAR) == 'e' ? EIGHT_REGS\t\t\t\\\n   : (CHAR) == 't' ? TWO_REGS\t\t\t\\\n   : (CHAR) == 'y' ? CARRY_REGS\t\t\t\\\n+  : (CHAR) == 'z' ? ICALL_REGS\t\t\t\\\n   : NO_REGS)\n \n /* A C expression which is nonzero if register number NUM is suitable for use\n@@ -2007,7 +2011,7 @@ enum reg_class\n \f\n /* Function Arguments in Registers */\n \n-#define NUM_ARGUMENT_REGISTERS 8\n+#define NUM_ARGUMENT_REGISTERS 6\n #define FIRST_ARGUMENT_REGISTER 2\n \n #define STORMY16_WORD_SIZE(TYPE, MODE)\t\t\t\t\\\n@@ -2293,7 +2297,7 @@ typedef int CUMULATIVE_ARGS;\n    return values are decided by the `RETURN_IN_MEMORY' macro.\n \n    If not defined, this defaults to the value 1.  */\n-#define DEFAULT_PCC_STRUCT_RETURN 0\n+/* #define DEFAULT_PCC_STRUCT_RETURN 0 */\n \n /* If the structure value address is passed in a register, then\n    `STRUCT_VALUE_REGNUM' should be the number of that register.  */"}, {"sha": "ae3b76a44a871dcb62a950087de68df4078e77b9", "filename": "gcc/config/stormy16/stormy16.md", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da6e254e4494708c3ab07965c0d13bce0cbcaaf3/gcc%2Fconfig%2Fstormy16%2Fstormy16.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da6e254e4494708c3ab07965c0d13bce0cbcaaf3/gcc%2Fconfig%2Fstormy16%2Fstormy16.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fstormy16%2Fstormy16.md?ref=da6e254e4494708c3ab07965c0d13bce0cbcaaf3", "patch": "@@ -822,7 +822,7 @@\n (define_insn \"*call_internal\"\n   [(call (mem:HI (match_operand:HI 0 \"nonmemory_operand\" \"i,r\"))\n \t (match_operand 1 \"\" \"\"))\n-   (use (match_operand:HI 2 \"nonmemory_operand\" \"X,t\"))]\n+   (use (match_operand:HI 2 \"nonmemory_operand\" \"X,z\"))]\n   \"\"\n   \"@\n    callf %C0\n@@ -834,7 +834,7 @@\n   [(set (match_operand 3 \"register_operand\" \"=r,r\")\n         (call (mem:HI (match_operand:HI 0 \"nonmemory_operand\" \"i,r\"))\n \t      (match_operand 1 \"\" \"\")))\n-   (use (match_operand:HI 2 \"nonmemory_operand\" \"X,t\"))]\n+   (use (match_operand:HI 2 \"nonmemory_operand\" \"X,z\"))]\n   \"\"\n   \"@\n    callf %C0\n@@ -882,7 +882,7 @@\n \n (define_insn \"\"\n   [(set (pc) (match_operand:HI 0 \"register_operand\" \"r\"))\n-   (use (match_operand:HI 1 \"register_operand\" \"t\"))]\n+   (use (match_operand:HI 1 \"register_operand\" \"z\"))]\n   \"\"\n   \"jmp %1,%0\"\n   [(set_attr \"length\" \"4\")"}]}