{"sha": "2f352e3d30920e6e703e528b9e7335702de91b74", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmYzNTJlM2QzMDkyMGU2ZTcwM2U1MjhiOWU3MzM1NzAyZGU5MWI3NA==", "commit": {"author": {"name": "Hans-Peter Nilsson", "email": "hp@axis.com", "date": "2012-06-09T20:53:39Z"}, "committer": {"name": "Hans-Peter Nilsson", "email": "hp@gcc.gnu.org", "date": "2012-06-09T20:53:39Z"}, "message": "Fix CRIS build errors with --enable-build-with-cxx.\n\n\t* config/cris/cris.c (cris_emit_trap_for_misalignment): Rename\n\tvariable \"and\" to \"andop\".\n\t* config/cris/sync.md (\"atomic_fetch_<atomic_op_name><mode>\"): Use\n\ttemporary variable for memory model, passing C++-type-correct\n\tparameter type to expand_mem_thread_fence.\n\t(\"atomic_compare_and_swap<mode>\"): Ditto.\n\nFrom-SVN: r188362", "tree": {"sha": "04feb51f47a5381f3cb1809ede5b7871ffe76c17", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/04feb51f47a5381f3cb1809ede5b7871ffe76c17"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2f352e3d30920e6e703e528b9e7335702de91b74", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f352e3d30920e6e703e528b9e7335702de91b74", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2f352e3d30920e6e703e528b9e7335702de91b74", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f352e3d30920e6e703e528b9e7335702de91b74/comments", "author": {"login": "hpataxisdotcom", "id": 80339731, "node_id": "MDQ6VXNlcjgwMzM5NzMx", "avatar_url": "https://avatars.githubusercontent.com/u/80339731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hpataxisdotcom", "html_url": "https://github.com/hpataxisdotcom", "followers_url": "https://api.github.com/users/hpataxisdotcom/followers", "following_url": "https://api.github.com/users/hpataxisdotcom/following{/other_user}", "gists_url": "https://api.github.com/users/hpataxisdotcom/gists{/gist_id}", "starred_url": "https://api.github.com/users/hpataxisdotcom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hpataxisdotcom/subscriptions", "organizations_url": "https://api.github.com/users/hpataxisdotcom/orgs", "repos_url": "https://api.github.com/users/hpataxisdotcom/repos", "events_url": "https://api.github.com/users/hpataxisdotcom/events{/privacy}", "received_events_url": "https://api.github.com/users/hpataxisdotcom/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "492fbea1624fb5b754c2abc978e3275c576b4ba8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/492fbea1624fb5b754c2abc978e3275c576b4ba8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/492fbea1624fb5b754c2abc978e3275c576b4ba8"}], "stats": {"total": 28, "additions": 21, "deletions": 7}, "files": [{"sha": "7ecc132082ef241e0cc3bf52658add3158841cdb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f352e3d30920e6e703e528b9e7335702de91b74/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f352e3d30920e6e703e528b9e7335702de91b74/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2f352e3d30920e6e703e528b9e7335702de91b74", "patch": "@@ -1,3 +1,13 @@\n+2012-06-09  Hans-Peter Nilsson  <hp@axis.com>\n+\n+\tFix CRIS build errors with --enable-build-with-cxx.\n+\t* config/cris/cris.c (cris_emit_trap_for_misalignment): Rename\n+\tvariable \"and\" to \"andop\".\n+\t* config/cris/sync.md (\"atomic_fetch_<atomic_op_name><mode>\"): Use\n+\ttemporary variable for memory model, passing C++-type-correct\n+\tparameter type to expand_mem_thread_fence.\n+\t(\"atomic_compare_and_swap<mode>\"): Ditto.\n+\n 2012-06-09  Richard Henderson  <rth@redhat.com>\n \n \tPR c++/53602"}, {"sha": "f5bd6dbdb3a55df955cb8921099df78f10f8fff9", "filename": "gcc/config/cris/cris.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f352e3d30920e6e703e528b9e7335702de91b74/gcc%2Fconfig%2Fcris%2Fcris.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f352e3d30920e6e703e528b9e7335702de91b74/gcc%2Fconfig%2Fcris%2Fcris.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fcris%2Fcris.c?ref=2f352e3d30920e6e703e528b9e7335702de91b74", "patch": "@@ -1929,7 +1929,7 @@ cris_simple_epilogue (void)\n void\n cris_emit_trap_for_misalignment (rtx mem)\n {\n-  rtx addr, reg, ok_label, and, jmp;\n+  rtx addr, reg, ok_label, andop, jmp;\n   int natural_alignment;\n   gcc_assert (MEM_P (mem));\n \n@@ -1941,8 +1941,8 @@ cris_emit_trap_for_misalignment (rtx mem)\n   /* This will yield a btstq without a separate register used, usually -\n      with the exception for PRE hoisting the \"and\" but not the branch\n      around the trap: see gcc.dg/target/cris/sync-3s.c.  */\n-  and = gen_rtx_AND (Pmode, reg, GEN_INT (natural_alignment - 1));\n-  emit_cmp_and_jump_insns (force_reg (SImode, and), const0_rtx, EQ,\n+  andop = gen_rtx_AND (Pmode, reg, GEN_INT (natural_alignment - 1));\n+  emit_cmp_and_jump_insns (force_reg (SImode, andop), const0_rtx, EQ,\n \t\t\t   NULL_RTX, Pmode, 1, ok_label);\n   jmp = get_last_insn ();\n   gcc_assert (JUMP_P (jmp));"}, {"sha": "d0cc3b28e4e5326e3d52c45e37af080ebfc74e86", "filename": "gcc/config/cris/sync.md", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f352e3d30920e6e703e528b9e7335702de91b74/gcc%2Fconfig%2Fcris%2Fsync.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f352e3d30920e6e703e528b9e7335702de91b74/gcc%2Fconfig%2Fcris%2Fsync.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fcris%2Fsync.md?ref=2f352e3d30920e6e703e528b9e7335702de91b74", "patch": "@@ -88,14 +88,16 @@\n    (atomic_op:BWD (match_dup 0) (match_dup 1))]\n   \"\"\n {\n+  enum memmodel mmodel = (enum memmodel) INTVAL (operands[3]);\n+\n   if (<MODE>mode != QImode && TARGET_TRAP_UNALIGNED_ATOMIC)\n     cris_emit_trap_for_misalignment (operands[1]);\n \n-  expand_mem_thread_fence (INTVAL (operands[3]));\n+  expand_mem_thread_fence (mmodel);\n   emit_insn (gen_cris_atomic_fetch_<atomic_op_name><mode>_1 (operands[0],\n \t\t\t\t\t\t\t     operands[1],\n \t\t\t\t\t\t\t     operands[2]));\n-  expand_mem_thread_fence (INTVAL (operands[3]));\n+  expand_mem_thread_fence (mmodel);\n   DONE;\n })\n \n@@ -189,16 +191,18 @@\n    (match_operand 7)]\n   \"\"\n {\n+  enum memmodel mmodel = (enum memmodel) INTVAL (operands[6]);\n+\n   if (<MODE>mode != QImode && TARGET_TRAP_UNALIGNED_ATOMIC)\n     cris_emit_trap_for_misalignment (operands[2]);\n \n-  expand_mem_thread_fence (INTVAL (operands[6]));\n+  expand_mem_thread_fence (mmodel);\n   emit_insn (gen_cris_atomic_compare_and_swap<mode>_1 (operands[0],\n \t\t\t\t\t\t       operands[1],\n \t\t\t\t\t\t       operands[2],\n \t\t\t\t\t\t       operands[3],\n \t\t\t\t\t\t       operands[4]));\n-  expand_mem_thread_fence (INTVAL (operands[6]));\n+  expand_mem_thread_fence (mmodel);\n   DONE;\n })\n "}]}