{"sha": "ea3fbfda608a148f112f1d2f4bdd0e8bf9429cd9", "node_id": "C_kwDOANBUbNoAKGVhM2ZiZmRhNjA4YTE0OGYxMTJmMWQyZjRiZGQwZThiZjk0MjljZDk", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-05-07T00:16:26Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-05-07T00:16:26Z"}, "message": "Daily bump.", "tree": {"sha": "365a5f7fa6160a141615cea8af43ee8d12046e4f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/365a5f7fa6160a141615cea8af43ee8d12046e4f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ea3fbfda608a148f112f1d2f4bdd0e8bf9429cd9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea3fbfda608a148f112f1d2f4bdd0e8bf9429cd9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ea3fbfda608a148f112f1d2f4bdd0e8bf9429cd9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea3fbfda608a148f112f1d2f4bdd0e8bf9429cd9/comments", "author": null, "committer": null, "parents": [{"sha": "fa2d5fc0497b702f37ef18a85535826e910a7307", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa2d5fc0497b702f37ef18a85535826e910a7307", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fa2d5fc0497b702f37ef18a85535826e910a7307"}], "stats": {"total": 136, "additions": 135, "deletions": 1}, "files": [{"sha": "9f9b011286317cd295c500d05bfc528c903dd8f1", "filename": "contrib/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea3fbfda608a148f112f1d2f4bdd0e8bf9429cd9/contrib%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea3fbfda608a148f112f1d2f4bdd0e8bf9429cd9/contrib%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2FChangeLog?ref=ea3fbfda608a148f112f1d2f4bdd0e8bf9429cd9", "patch": "@@ -1,3 +1,7 @@\n+2022-05-06  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* gennews (files): Add files for GCC 12.\n+\n 2022-04-28  Jakub Jelinek  <jakub@redhat.com>\n \n \t* gcc-changelog/git_update_version.py (active_refs): Add"}, {"sha": "c9f8572f007fe675b2fb8ebf4176d5c333b45b91", "filename": "gcc/ChangeLog", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea3fbfda608a148f112f1d2f4bdd0e8bf9429cd9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea3fbfda608a148f112f1d2f4bdd0e8bf9429cd9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ea3fbfda608a148f112f1d2f4bdd0e8bf9429cd9", "patch": "@@ -1,3 +1,32 @@\n+2022-05-06  Jason Merrill  <jason@redhat.com>\n+\n+\t* diagnostic-color.cc: Add fnname and targs color entries.\n+\t* doc/invoke.texi: Document them.\n+\n+2022-05-06  Jason Merrill  <jason@redhat.com>\n+\n+\t* vec.h (vec::iterate): Fix comment.\n+\n+2022-05-06   Michael Meissner  <meissner@linux.ibm.com>\n+\n+\tPR target/102059\n+\t* config/rs6000/rs6000.cc (rs6000_can_inline_p): Ignore -mpower8-fusion\n+\tand -mpower10-fusion options for inlining purposes.\n+\n+2022-05-06  Christophe Lyon  <christophe.lyon@arm.com>\n+\n+\t* config/aarch64/iterators.md (GPF_TF_F16): Delete.\n+\n+2022-05-06  Marcel Vollweiler  <marcel@codesourcery.com>\n+\n+\t* omp-low.cc (omp_runtime_api_call): Added target_is_accessible to\n+\tomp_runtime_apis array.\n+\n+2022-05-06  Hafiz Abid Qadeer  <abidh@codesourcery.com>\n+\n+\t* omp-low.cc (omp_maybe_offloaded_ctx): New prototype.\n+\t(scan_sharing_clauses):  Check a restriction on allocate clause.\n+\n 2022-05-05  Sandra Loosemore  <sandra@codesourcery.com>\n \n \t* gimplify.cc (gimplify_omp_for): Update messages for SCHEDULED"}, {"sha": "e490589f7bfcff0b16dd90c7a917f4bb153ae37a", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea3fbfda608a148f112f1d2f4bdd0e8bf9429cd9/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea3fbfda608a148f112f1d2f4bdd0e8bf9429cd9/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=ea3fbfda608a148f112f1d2f4bdd0e8bf9429cd9", "patch": "@@ -1 +1 @@\n-20220506\n+20220507"}, {"sha": "a539a0d8ae547ee7e901bf27b64859c5e30403af", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea3fbfda608a148f112f1d2f4bdd0e8bf9429cd9/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea3fbfda608a148f112f1d2f4bdd0e8bf9429cd9/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=ea3fbfda608a148f112f1d2f4bdd0e8bf9429cd9", "patch": "@@ -1,3 +1,21 @@\n+2022-05-06  Jason Merrill  <jason@redhat.com>\n+\n+\t* error.cc (decl_to_string): Add show_color parameter.\n+\t(subst_to_string): Likewise.\n+\t(cp_printer): Pass it.\n+\t(type_to_string): Set pp_show_color.\n+\t(dump_function_name): Use \"fnname\" color.\n+\t(dump_template_bindings): Use \"targs\" color.\n+\t(struct colorize_guard): New.\n+\t(reinit_cxx_pp): Clear pp_show_color.\n+\n+2022-05-06  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/105245\n+\tPR c++/100111\n+\t* constexpr.cc (cxx_eval_store_expression): Reorganize empty base\n+\thandling.\n+\n 2022-05-05  Marek Polacek  <polacek@redhat.com>\n \n \tPR c++/64679"}, {"sha": "7630ce66e959a52c9086467c3e31d54a051becfd", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea3fbfda608a148f112f1d2f4bdd0e8bf9429cd9/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea3fbfda608a148f112f1d2f4bdd0e8bf9429cd9/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ea3fbfda608a148f112f1d2f4bdd0e8bf9429cd9", "patch": "@@ -1,3 +1,19 @@\n+2022-05-06  Jason Merrill  <jason@redhat.com>\n+\n+\t* g++.dg/diagnostic/function-color1.C: New test.\n+\n+2022-05-06   Michael Meissner  <meissner@linux.ibm.com>\n+\n+\tPR target/102059\n+\t* gcc.target/powerpc/pr102059-4.c: New test.\n+\n+2022-05-06  Hafiz Abid Qadeer  <abidh@codesourcery.com>\n+\n+\t* c-c++-common/gomp/allocate-2.c: Add tests.\n+\t* c-c++-common/gomp/allocate-8.c: New test.\n+\t* gfortran.dg/gomp/allocate-3.f90: Add tests.\n+\t* gcc.dg/gomp/pr104517.c: Update.\n+\n 2022-05-05  Marek Polacek  <polacek@redhat.com>\n \n \tPR c++/64679"}, {"sha": "b7e83227d0303ea342fc7165f48a9e04e38e8370", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea3fbfda608a148f112f1d2f4bdd0e8bf9429cd9/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea3fbfda608a148f112f1d2f4bdd0e8bf9429cd9/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=ea3fbfda608a148f112f1d2f4bdd0e8bf9429cd9", "patch": "@@ -1,3 +1,15 @@\n+2022-05-06  Marcel Vollweiler  <marcel@codesourcery.com>\n+\n+\t* libgomp.map: Added omp_target_is_accessible.\n+\t* libgomp.texi: Tagged omp_target_is_accessible as supported.\n+\t* omp.h.in: Added omp_target_is_accessible.\n+\t* omp_lib.f90.in: Added interface for omp_target_is_accessible.\n+\t* omp_lib.h.in: Likewise.\n+\t* target.c (omp_target_is_accessible): Added implementation of\n+\tomp_target_is_accessible.\n+\t* testsuite/libgomp.c-c++-common/target-is-accessible-1.c: New test.\n+\t* testsuite/libgomp.fortran/target-is-accessible-1.f90: New test.\n+\n 2022-05-05  Sandra Loosemore  <sandra@codesourcery.com>\n \n \t* libgomp.texi (OpenMP 5.0): Feature is now fully supported."}, {"sha": "e235ded9c92c2661d25b8c157f10288eee682913", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 55, "deletions": 0, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea3fbfda608a148f112f1d2f4bdd0e8bf9429cd9/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea3fbfda608a148f112f1d2f4bdd0e8bf9429cd9/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=ea3fbfda608a148f112f1d2f4bdd0e8bf9429cd9", "patch": "@@ -1,3 +1,58 @@\n+2022-05-06  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/bits/random.tcc (operator==): Only check\n+\tnormal_distribution::_M_saved_available once.\n+\t* testsuite/26_numerics/random/normal_distribution/operators/equal.cc:\n+\tCheck equality after state changes.\n+\t* testsuite/26_numerics/random/pr60037-neg.cc: Adjust dg-error\n+\tlineno.\n+\n+2022-05-06  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/105502\n+\t* include/bits/random.tcc\n+\t(operator>>(basic_istream<C,T>&, normal_distribution<R>&)):\n+\tUpdate state when __state_avail is false.\n+\t* testsuite/26_numerics/random/normal_distribution/operators/serialize.cc:\n+\tCheck that deserialized object equals serialized one.\n+\n+2022-05-06  Alexandre Oliva  <oliva@adacore.com>\n+\n+\t* include/experimental/bits/simd.h [__ALTIVEC__]: Require VSX\n+\tfor double, long long, and 64-bit long intrinsic types.\n+\t[__ALTIVEC__] (__intrinsic_type): Mention 128-bit in\n+\tpreexisting long double diagnostic, adjust no-VSX double\n+\tdiagnostic to cover 64-bit long double as well.\n+\n+2022-05-06  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/104731\n+\t* testsuite/27_io/filesystem/iterators/error_reporting.cc:\n+\tUse a trailing char array as storage for dirent::d_name.\n+\n+2022-05-06  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/std/stacktrace: Do not include <cxxabi.h>.\n+\t(__cxa_demangle): Declare.\n+\n+2022-05-06  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/99871\n+\t* include/bits/specfun.h: Use visibility attribute on namespace,\n+\tinstead of pragma push/pop.\n+\t* libsupc++/compare: Likewise.\n+\t* libsupc++/exception: Likewise.\n+\t* libsupc++/exception.h: Likewise.\n+\t* libsupc++/exception_ptr.h: Likewise.\n+\t* libsupc++/initializer_list: Likewise.\n+\t* libsupc++/nested_exception.h: Likewise.\n+\n+2022-05-06  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* doc/xml/manual/test.xml: Remove requirement for copyright and\n+\tGPL notice in tests.\n+\t* doc/html/manual/test.html: Regenerate.\n+\n 2022-05-05  Jonathan Wakely  <jwakely@redhat.com>\n \n \t* include/experimental/memory_resource [!__cpp_rtti]"}]}