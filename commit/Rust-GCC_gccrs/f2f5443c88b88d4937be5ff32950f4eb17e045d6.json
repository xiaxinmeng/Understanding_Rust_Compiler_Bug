{"sha": "f2f5443c88b88d4937be5ff32950f4eb17e045d6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjJmNTQ0M2M4OGI4OGQ0OTM3YmU1ZmYzMjk1MGY0ZWIxN2UwNDVkNg==", "commit": {"author": {"name": "Francois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2008-05-29T15:24:46Z"}, "committer": {"name": "Fran\u00e7ois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2008-05-29T15:24:46Z"}, "message": "scanner.c (load_line): Add first_char argument.\n\n\t* scanner.c (load_line): Add first_char argument. Don't call ungetc.\n\t(gfc_read_orig_filename): Adjust call to load_line. Don't call\n\tungetc.\n\t(load_file): Adjust call to load_line.\n\nFrom-SVN: r136171", "tree": {"sha": "994e21554a3858b02380144ec757f3df2a878542", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/994e21554a3858b02380144ec757f3df2a878542"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f2f5443c88b88d4937be5ff32950f4eb17e045d6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2f5443c88b88d4937be5ff32950f4eb17e045d6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f2f5443c88b88d4937be5ff32950f4eb17e045d6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2f5443c88b88d4937be5ff32950f4eb17e045d6/comments", "author": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a20007a490d5105e25086df930a4bd67e5e250a0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a20007a490d5105e25086df930a4bd67e5e250a0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a20007a490d5105e25086df930a4bd67e5e250a0"}], "stats": {"total": 56, "additions": 34, "deletions": 22}, "files": [{"sha": "4db2b229d30f3fa038d3e05aa9827e133e1d2a55", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2f5443c88b88d4937be5ff32950f4eb17e045d6/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2f5443c88b88d4937be5ff32950f4eb17e045d6/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=f2f5443c88b88d4937be5ff32950f4eb17e045d6", "patch": "@@ -1,3 +1,10 @@\n+2008-05-29  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n+\n+\t* scanner.c (load_line): Add first_char argument. Don't call ungetc.\n+\t(gfc_read_orig_filename): Adjust call to load_line. Don't call\n+\tungetc.\n+\t(load_file): Adjust call to load_line.\n+\n 2008-05-28  Janus Weil  <janus@gcc.gnu.org>\n \n \tPR fortran/36325"}, {"sha": "02d87b4f4cea8218d13a68f6c3cda815982cb51a", "filename": "gcc/fortran/scanner.c", "status": "modified", "additions": 27, "deletions": 22, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2f5443c88b88d4937be5ff32950f4eb17e045d6/gcc%2Ffortran%2Fscanner.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2f5443c88b88d4937be5ff32950f4eb17e045d6/gcc%2Ffortran%2Fscanner.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fscanner.c?ref=f2f5443c88b88d4937be5ff32950f4eb17e045d6", "patch": "@@ -1307,14 +1307,19 @@ gfc_gobble_whitespace (void)\n    In fixed mode, we expand a tab that occurs within the statement\n    label region to expand to spaces that leave the next character in\n    the source region.\n+\n+   If first_char is not NULL, it's a pointer to a single char value holding\n+   the first character of the line, which has already been read by the\n+   caller.  This avoids the use of ungetc().\n+\n    load_line returns whether the line was truncated.\n \n    NOTE: The error machinery isn't available at this point, so we can't\n \t easily report line and column numbers consistent with other \n \t parts of gfortran.  */\n \n static int\n-load_line (FILE *input, gfc_char_t **pbuf, int *pbuflen)\n+load_line (FILE *input, gfc_char_t **pbuf, int *pbuflen, const int *first_char)\n {\n   static int linenum = 0, current_line = 1;\n   int c, maxlen, i, preprocessor_flag, buflen = *pbuflen;\n@@ -1349,20 +1354,20 @@ load_line (FILE *input, gfc_char_t **pbuf, int *pbuflen)\n   i = 0;\n   buffer = *pbuf;\n \n-  preprocessor_flag = 0;\n-  c = getc (input);\n-  if (c == '#')\n-    /* In order to not truncate preprocessor lines, we have to\n-       remember that this is one.  */\n-    preprocessor_flag = 1;\n-  ungetc (c, input);\n+  if (first_char)\n+    c = *first_char;\n+  else\n+    c = getc (input);\n+\n+  /* In order to not truncate preprocessor lines, we have to\n+     remember that this is one.  */\n+  preprocessor_flag = (c == '#' ? 1 : 0);\n \n   for (;;)\n     {\n-      c = getc (input);\n-\n       if (c == EOF)\n \tbreak;\n+\n       if (c == '\\n')\n \t{\n \t  /* Check for illegal use of ampersand. See F95 Standard 3.3.1.3.  */\n@@ -1379,10 +1384,8 @@ load_line (FILE *input, gfc_char_t **pbuf, int *pbuflen)\n \t  break;\n \t}\n \n-      if (c == '\\r')\n-\tcontinue;\t\t/* Gobble characters.  */\n-      if (c == '\\0')\n-\tcontinue;\n+      if (c == '\\r' || c == '\\0')\n+\tgoto next_char;\t\t\t/* Gobble characters.  */\n \n       if (c == '&')\n \t{\n@@ -1407,7 +1410,7 @@ load_line (FILE *input, gfc_char_t **pbuf, int *pbuflen)\n \t  if (c >= '1' && c <= '9')\n \t    {\n \t      *(buffer-1) = c;\n-\t      continue;\n+\t      goto next_char;\n \t    }\n \t}\n \n@@ -1429,7 +1432,7 @@ load_line (FILE *input, gfc_char_t **pbuf, int *pbuflen)\n \t      i++;\n \t    }\n \n-\t  continue;\n+\t  goto next_char;\n \t}\n \n       *buffer++ = c;\n@@ -1458,8 +1461,12 @@ load_line (FILE *input, gfc_char_t **pbuf, int *pbuflen)\n \t      trunc_flag = 1;\n \t    }\n \n-\t  ungetc ('\\n', input);\n+\t  c = '\\n';\n+\t  continue;\n \t}\n+\n+next_char:\n+      c = getc (input);\n     }\n \n   /* Pad lines to the selected line length in fixed form.  */\n@@ -1807,7 +1814,7 @@ load_file (const char *filename, bool initial)\n \n   for (;;)\n     {\n-      int trunc = load_line (input, &line, &line_len);\n+      int trunc = load_line (input, &line, &line_len, NULL);\n \n       len = gfc_wide_strlen (line);\n       if (feof (input) && len == 0)\n@@ -1989,13 +1996,12 @@ gfc_read_orig_filename (const char *filename, const char **canon_source_file)\n     return NULL;\n \n   c = getc (gfc_src_file);\n-  ungetc (c, gfc_src_file);\n \n   if (c != '#')\n     return NULL;\n \n   len = 0;\n-  load_line (gfc_src_file, &gfc_src_preprocessor_lines[0], &len);\n+  load_line (gfc_src_file, &gfc_src_preprocessor_lines[0], &len, &c);\n \n   if (wide_strncmp (gfc_src_preprocessor_lines[0], \"# 1 \\\"\", 5) != 0)\n     return NULL;\n@@ -2007,13 +2013,12 @@ gfc_read_orig_filename (const char *filename, const char **canon_source_file)\n     return NULL;\n \n   c = getc (gfc_src_file);\n-  ungetc (c, gfc_src_file);\n \n   if (c != '#')\n     return filename;\n \n   len = 0;\n-  load_line (gfc_src_file, &gfc_src_preprocessor_lines[1], &len);\n+  load_line (gfc_src_file, &gfc_src_preprocessor_lines[1], &len, &c);\n \n   if (wide_strncmp (gfc_src_preprocessor_lines[1], \"# 1 \\\"\", 5) != 0)\n     return filename;"}]}