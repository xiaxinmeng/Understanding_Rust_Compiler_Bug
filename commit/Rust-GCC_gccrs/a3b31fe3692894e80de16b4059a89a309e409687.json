{"sha": "a3b31fe3692894e80de16b4059a89a309e409687", "node_id": "C_kwDOANBUbNoAKGEzYjMxZmUzNjkyODk0ZTgwZGUxNmI0MDU5YTg5YTMwOWU0MDk2ODc", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2021-11-24T14:57:03Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2021-11-29T10:18:35Z"}, "message": "Remove unreachable gcc_unreachable () at the end of functions\n\nIt seems to be a style to place gcc_unreachable () after a\nswitch that handles all cases with every case returning.\nThose are unreachable (well, yes!), so they will be elided\nat CFG construction time and the middle-end will place\nanother __builtin_unreachable \"after\" them to note the\npath doesn't lead to a return when the function is not declared\nvoid.\n\nSo IMHO those explicit gcc_unreachable () serve no purpose,\nif they could be replaced by a comment.  But since all cases\ncover switches not handling a case or not returning will\nlikely cause some diagnostic to be emitted which is better\nthan running into an ICE only at runtime.\n\n2021-11-24  Richard Biener  <rguenther@suse.de>\n\n\t* tree.h (reverse_storage_order_for_component_p): Remove\n\tspurious gcc_unreachable.\n\t* cfganal.c (dfs_find_deadend): Likewise.\n\t* fold-const-call.c (fold_const_logb): Likewise.\n\t(fold_const_significand): Likewise.\n\t* gimple-ssa-store-merging.c (lhs_valid_for_store_merging_p):\n\tLikewise.\n\ngcc/c-family/\n\t* c-format.c (check_format_string): Remove spurious\n\tgcc_unreachable.", "tree": {"sha": "c6c945f5d3d893cb2ac000b12f07854eae1c53ce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c6c945f5d3d893cb2ac000b12f07854eae1c53ce"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a3b31fe3692894e80de16b4059a89a309e409687", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a3b31fe3692894e80de16b4059a89a309e409687", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a3b31fe3692894e80de16b4059a89a309e409687", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a3b31fe3692894e80de16b4059a89a309e409687/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "16507dea753527d073f1cfb7200c6612a7fa44aa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16507dea753527d073f1cfb7200c6612a7fa44aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/16507dea753527d073f1cfb7200c6612a7fa44aa"}], "stats": {"total": 10, "additions": 0, "deletions": 10}, "files": [{"sha": "617fb5ea6266dd714c04ba24ab79d344bcda50fa", "filename": "gcc/c-family/c-format.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3b31fe3692894e80de16b4059a89a309e409687/gcc%2Fc-family%2Fc-format.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3b31fe3692894e80de16b4059a89a309e409687/gcc%2Fc-family%2Fc-format.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-format.c?ref=a3b31fe3692894e80de16b4059a89a309e409687", "patch": "@@ -296,8 +296,6 @@ check_format_string (const_tree fntype, unsigned HOST_WIDE_INT format_num,\n       *no_add_attrs = true;\n       return false;\n     }\n-\n-  gcc_unreachable ();\n }\n \n /* Under the control of FLAGS, verify EXPR is a valid constant that"}, {"sha": "48598e55c01471ece546b522279e9f80f9c3ec0c", "filename": "gcc/cfganal.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3b31fe3692894e80de16b4059a89a309e409687/gcc%2Fcfganal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3b31fe3692894e80de16b4059a89a309e409687/gcc%2Fcfganal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfganal.c?ref=a3b31fe3692894e80de16b4059a89a309e409687", "patch": "@@ -752,8 +752,6 @@ dfs_find_deadend (basic_block bb)\n \t  next = e ? e->dest : EDGE_SUCC (bb, 0)->dest;\n \t}\n     }\n-\n-  gcc_unreachable ();\n }\n \n "}, {"sha": "c542e780a18679748b62f00f476b0ea904e376c8", "filename": "gcc/fold-const-call.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3b31fe3692894e80de16b4059a89a309e409687/gcc%2Ffold-const-call.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3b31fe3692894e80de16b4059a89a309e409687/gcc%2Ffold-const-call.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const-call.c?ref=a3b31fe3692894e80de16b4059a89a309e409687", "patch": "@@ -429,7 +429,6 @@ fold_const_logb (real_value *result, const real_value *arg,\n \t}\n       return false;\n     }\n-  gcc_unreachable ();\n }\n \n /* Try to evaluate:\n@@ -463,7 +462,6 @@ fold_const_significand (real_value *result, const real_value *arg,\n \t}\n       return false;\n     }\n-  gcc_unreachable ();\n }\n \n /* Try to evaluate:"}, {"sha": "29d5c2449abcb0644ded8f1ea1dbc303af51a01e", "filename": "gcc/gimple-ssa-store-merging.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3b31fe3692894e80de16b4059a89a309e409687/gcc%2Fgimple-ssa-store-merging.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3b31fe3692894e80de16b4059a89a309e409687/gcc%2Fgimple-ssa-store-merging.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-ssa-store-merging.c?ref=a3b31fe3692894e80de16b4059a89a309e409687", "patch": "@@ -4867,8 +4867,6 @@ lhs_valid_for_store_merging_p (tree lhs)\n     default:\n       return false;\n     }\n-\n-  gcc_unreachable ();\n }\n \n /* Return true if the tree RHS is a constant we want to consider"}, {"sha": "094501bd9b1aaf3c7f2cf3d687785445de96ecb6", "filename": "gcc/tree.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3b31fe3692894e80de16b4059a89a309e409687/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3b31fe3692894e80de16b4059a89a309e409687/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=a3b31fe3692894e80de16b4059a89a309e409687", "patch": "@@ -5110,8 +5110,6 @@ reverse_storage_order_for_component_p (tree t)\n     default:\n       return false;\n     }\n-\n-  gcc_unreachable ();\n }\n \n /* Return true if T is a storage order barrier, i.e. a VIEW_CONVERT_EXPR"}]}