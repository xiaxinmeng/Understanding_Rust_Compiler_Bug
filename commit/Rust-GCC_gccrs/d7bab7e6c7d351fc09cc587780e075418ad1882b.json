{"sha": "d7bab7e6c7d351fc09cc587780e075418ad1882b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDdiYWI3ZTZjN2QzNTFmYzA5Y2M1ODc3ODBlMDc1NDE4YWQxODgyYg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-10-08T09:40:32Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-10-08T09:40:32Z"}, "message": "[multiple changes]\n\n2010-10-08  Thomas Quinot  <quinot@adacore.com>\n\n\t* sem_ch12.adb (Instantiate_Object): Rename Formal_Id to Gen_Obj, for\n\tconsistency with Gen_T in Instantiate_Type.\n\tIntroduce constant A_Gen_Obj to avoid repeated queries for\n\tDefining_Identifier (Analyzed_Formal).\n\n2010-10-08  Vincent Celier  <celier@adacore.com>\n\n\t* prj-nmsc.adb: Minor comment fix.\n\nFrom-SVN: r165152", "tree": {"sha": "e60d77e67360077d3b2e0abf35fbfadc9e1cdb94", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e60d77e67360077d3b2e0abf35fbfadc9e1cdb94"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d7bab7e6c7d351fc09cc587780e075418ad1882b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7bab7e6c7d351fc09cc587780e075418ad1882b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d7bab7e6c7d351fc09cc587780e075418ad1882b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7bab7e6c7d351fc09cc587780e075418ad1882b/comments", "author": null, "committer": null, "parents": [{"sha": "135a0d0ac5d6d770c089022fabf7c215e5e3c472", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/135a0d0ac5d6d770c089022fabf7c215e5e3c472", "html_url": "https://github.com/Rust-GCC/gccrs/commit/135a0d0ac5d6d770c089022fabf7c215e5e3c472"}], "stats": {"total": 78, "additions": 40, "deletions": 38}, "files": [{"sha": "f15e9c0b74d9ced6ee99b3a242990470f5dc6e1f", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7bab7e6c7d351fc09cc587780e075418ad1882b/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7bab7e6c7d351fc09cc587780e075418ad1882b/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=d7bab7e6c7d351fc09cc587780e075418ad1882b", "patch": "@@ -1,3 +1,14 @@\n+2010-10-08  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* sem_ch12.adb (Instantiate_Object): Rename Formal_Id to Gen_Obj, for\n+\tconsistency with Gen_T in Instantiate_Type.\n+\tIntroduce constant A_Gen_Obj to avoid repeated queries for\n+\tDefining_Identifier (Analyzed_Formal).\n+\n+2010-10-08  Vincent Celier  <celier@adacore.com>\n+\n+\t* prj-nmsc.adb: Minor comment fix.\n+\n 2010-10-07  Robert Dewar  <dewar@adacore.com>\n \n \t* sem_prag.adb, sem_ch13.adb: Implement AI05-0012-1/02."}, {"sha": "59f10fe6f2fb0f451b228297977ee7dde2d657b3", "filename": "gcc/ada/prj-nmsc.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7bab7e6c7d351fc09cc587780e075418ad1882b/gcc%2Fada%2Fprj-nmsc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7bab7e6c7d351fc09cc587780e075418ad1882b/gcc%2Fada%2Fprj-nmsc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-nmsc.adb?ref=d7bab7e6c7d351fc09cc587780e075418ad1882b", "patch": "@@ -3287,7 +3287,7 @@ package body Prj.Nmsc is\n             --  Spec_Suffix cannot be equal to Body_Suffix or Separate_Suffix,\n             --  since that would cause a clear ambiguity. Note that we do allow\n             --  a Spec_Suffix to have the same termination as one of these,\n-            --  which causes a potential ambiguity, but we resolve that my\n+            --  which causes a potential ambiguity, but we resolve that by\n             --  matching the longest possible suffix.\n \n             if Lang_Id.Config.Naming_Data.Spec_Suffix /= No_File"}, {"sha": "5ef38fad66aedc975788ec3bce21fd176754bccb", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 28, "deletions": 37, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7bab7e6c7d351fc09cc587780e075418ad1882b/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7bab7e6c7d351fc09cc587780e075418ad1882b/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=d7bab7e6c7d351fc09cc587780e075418ad1882b", "patch": "@@ -8225,17 +8225,18 @@ package body Sem_Ch12 is\n       Actual          : Node_Id;\n       Analyzed_Formal : Node_Id) return List_Id\n    is\n+      Gen_Obj     : constant Entity_Id  := Defining_Identifier (Formal);\n+      A_Gen_Obj   : constant Entity_Id  :=\n+                      Defining_Identifier (Analyzed_Formal);\n       Acc_Def     : Node_Id             := Empty;\n       Act_Assoc   : constant Node_Id    := Parent (Actual);\n       Actual_Decl : Node_Id             := Empty;\n-      Formal_Id   : constant Entity_Id  := Defining_Identifier (Formal);\n       Decl_Node   : Node_Id;\n       Def         : Node_Id;\n       Ftyp        : Entity_Id;\n       List        : constant List_Id    := New_List;\n       Loc         : constant Source_Ptr := Sloc (Actual);\n-      Orig_Ftyp   : constant Entity_Id  :=\n-                      Etype (Defining_Identifier (Analyzed_Formal));\n+      Orig_Ftyp   : constant Entity_Id  := Etype (A_Gen_Obj);\n       Subt_Decl   : Node_Id             := Empty;\n       Subt_Mark   : Node_Id             := Empty;\n \n@@ -8249,9 +8250,9 @@ package body Sem_Ch12 is\n \n       --  Sloc for error message on missing actual\n \n-      Error_Msg_Sloc := Sloc (Scope (Defining_Identifier (Analyzed_Formal)));\n+      Error_Msg_Sloc := Sloc (Scope (A_Gen_Obj));\n \n-      if Get_Instance_Of (Formal_Id) /= Formal_Id then\n+      if Get_Instance_Of (Gen_Obj) /= Gen_Obj then\n          Error_Msg_N (\"duplicate instantiation of generic parameter\", Actual);\n       end if;\n \n@@ -8272,25 +8273,24 @@ package body Sem_Ch12 is\n          if No (Actual) then\n             Error_Msg_NE\n               (\"missing actual&\",\n-               Instantiation_Node, Formal_Id);\n+               Instantiation_Node, Gen_Obj);\n             Error_Msg_NE\n               (\"\\in instantiation of & declared#\",\n-                 Instantiation_Node,\n-                   Scope (Defining_Identifier (Analyzed_Formal)));\n+                 Instantiation_Node, Scope (A_Gen_Obj));\n             Abandon_Instantiation (Instantiation_Node);\n          end if;\n \n          if Present (Subt_Mark) then\n             Decl_Node :=\n               Make_Object_Renaming_Declaration (Loc,\n-                Defining_Identifier => New_Copy (Formal_Id),\n+                Defining_Identifier => New_Copy (Gen_Obj),\n                 Subtype_Mark        => New_Copy_Tree (Subt_Mark),\n                 Name                => Actual);\n \n          else pragma Assert (Present (Acc_Def));\n             Decl_Node :=\n               Make_Object_Renaming_Declaration (Loc,\n-                Defining_Identifier => New_Copy (Formal_Id),\n+                Defining_Identifier => New_Copy (Gen_Obj),\n                 Access_Definition   => New_Copy_Tree (Acc_Def),\n                 Name                => Actual);\n          end if;\n@@ -8323,24 +8323,22 @@ package body Sem_Ch12 is\n          end if;\n \n          --  The actual has to be resolved in order to check that it is a\n-         --  variable (due to cases such as F(1), where F returns\n-         --  access to an array, and for overloaded prefixes).\n+         --  variable (due to cases such as F (1), where F returns access to an\n+         --  array, and for overloaded prefixes).\n \n-         Ftyp :=\n-           Get_Instance_Of (Etype (Defining_Identifier (Analyzed_Formal)));\n+         Ftyp := Get_Instance_Of (Etype (A_Gen_Obj));\n \n          --  If the type of the formal is not itself a formal, and the\n          --  current unit is a child unit, the formal type must be declared\n          --  in a parent, and must be retrieved by visibility.\n \n          if Ftyp = Orig_Ftyp\n            and then Is_Generic_Unit (Scope (Ftyp))\n-           and then\n-             Is_Child_Unit (Scope (Defining_Identifier (Analyzed_Formal)))\n+           and then Is_Child_Unit (Scope (A_Gen_Obj))\n          then\n             declare\n                Temp : constant Node_Id :=\n-                 New_Copy_Tree (Subtype_Mark (Analyzed_Formal));\n+                        New_Copy_Tree (Subtype_Mark (Analyzed_Formal));\n             begin\n                Set_Entity (Temp, Empty);\n                Find_Type (Temp);\n@@ -8374,7 +8372,7 @@ package body Sem_Ch12 is\n \n          if not Denotes_Variable (Actual) then\n             Error_Msg_NE\n-              (\"actual for& must be a variable\", Actual, Formal_Id);\n+              (\"actual for& must be a variable\", Actual, Gen_Obj);\n \n          elsif Base_Type (Ftyp) /= Base_Type (Etype (Actual)) then\n \n@@ -8391,7 +8389,7 @@ package body Sem_Ch12 is\n                   E_Anonymous_Access_Type\n             then\n                Error_Msg_NE (\"type of actual does not match type of&\",\n-                             Actual, Formal_Id);\n+                             Actual, Gen_Obj);\n             end if;\n          end if;\n \n@@ -8430,7 +8428,7 @@ package body Sem_Ch12 is\n \n             Decl_Node :=\n               Make_Object_Declaration (Loc,\n-                Defining_Identifier    => New_Copy (Formal_Id),\n+                Defining_Identifier    => New_Copy (Gen_Obj),\n                 Constant_Present       => True,\n                 Null_Exclusion_Present => Null_Exclusion_Present (Formal),\n                 Object_Definition      => New_Copy_Tree (Def),\n@@ -8441,9 +8439,7 @@ package body Sem_Ch12 is\n             --  A generic formal object of a tagged type is defined to be\n             --  aliased so the new constant must also be treated as aliased.\n \n-            if Is_Tagged_Type\n-                 (Etype (Defining_Identifier (Analyzed_Formal)))\n-            then\n+            if Is_Tagged_Type (Etype (A_Gen_Obj)) then\n                Set_Aliased_Present (Decl_Node);\n             end if;\n \n@@ -8463,11 +8459,8 @@ package body Sem_Ch12 is\n             end if;\n \n             declare\n-               Formal_Object : constant Entity_Id :=\n-                                 Defining_Identifier (Analyzed_Formal);\n-               Formal_Type   : constant Entity_Id := Etype (Formal_Object);\n-\n-               Typ : Entity_Id;\n+               Formal_Type : constant Entity_Id := Etype (A_Gen_Obj);\n+               Typ         : Entity_Id;\n \n             begin\n                Typ := Get_Instance_Of (Formal_Type);\n@@ -8504,7 +8497,7 @@ package body Sem_Ch12 is\n \n             Decl_Node :=\n               Make_Object_Declaration (Sloc (Formal),\n-                Defining_Identifier    => New_Copy (Formal_Id),\n+                Defining_Identifier    => New_Copy (Gen_Obj),\n                 Constant_Present       => True,\n                 Null_Exclusion_Present => Null_Exclusion_Present (Formal),\n                 Object_Definition      => New_Copy (Def),\n@@ -8517,14 +8510,12 @@ package body Sem_Ch12 is\n          else\n             Error_Msg_NE\n               (\"missing actual&\",\n-                Instantiation_Node, Formal_Id);\n+                Instantiation_Node, Gen_Obj);\n             Error_Msg_NE (\"\\in instantiation of & declared#\",\n-              Instantiation_Node,\n-                Scope (Defining_Identifier (Analyzed_Formal)));\n+              Instantiation_Node, Scope (A_Gen_Obj));\n+\n+            if Is_Scalar_Type (Etype (A_Gen_Obj)) then\n \n-            if Is_Scalar_Type\n-                 (Etype (Defining_Identifier (Analyzed_Formal)))\n-            then\n                --  Create dummy constant declaration so that instance can be\n                --  analyzed, to minimize cascaded visibility errors.\n \n@@ -8536,12 +8527,12 @@ package body Sem_Ch12 is\n \n                Decl_Node :=\n                  Make_Object_Declaration (Loc,\n-                   Defining_Identifier    => New_Copy (Formal_Id),\n+                   Defining_Identifier    => New_Copy (Gen_Obj),\n                    Constant_Present       => True,\n                    Null_Exclusion_Present => Null_Exclusion_Present (Formal),\n                    Object_Definition      => New_Copy (Def),\n                    Expression             =>\n-                     Make_Attribute_Reference (Sloc (Formal_Id),\n+                     Make_Attribute_Reference (Sloc (Gen_Obj),\n                        Attribute_Name => Name_First,\n                        Prefix         => New_Copy (Def)));\n "}]}