{"sha": "9f1bbeaa4948ab793852e247462ae601a64243f7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWYxYmJlYWE0OTQ4YWI3OTM4NTJlMjQ3NDYyYWU2MDFhNjQyNDNmNw==", "commit": {"author": {"name": "Joseph Myers", "email": "jsm28@cam.ac.uk", "date": "2000-11-30T01:24:39Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2000-11-30T01:24:39Z"}, "message": "* extend.texi: Update documentation for attributes.\n\nFrom-SVN: r37861", "tree": {"sha": "ac8a0629d556c2f6b8a144c9ae7706fc66a78eda", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ac8a0629d556c2f6b8a144c9ae7706fc66a78eda"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9f1bbeaa4948ab793852e247462ae601a64243f7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f1bbeaa4948ab793852e247462ae601a64243f7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9f1bbeaa4948ab793852e247462ae601a64243f7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f1bbeaa4948ab793852e247462ae601a64243f7/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "74e5aa4b46ce430a362382c628fc017268ba2378", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/74e5aa4b46ce430a362382c628fc017268ba2378", "html_url": "https://github.com/Rust-GCC/gccrs/commit/74e5aa4b46ce430a362382c628fc017268ba2378"}], "stats": {"total": 47, "additions": 32, "deletions": 15}, "files": [{"sha": "00c776bf9cf499bdc9f9302ff1b94f662b245f78", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f1bbeaa4948ab793852e247462ae601a64243f7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f1bbeaa4948ab793852e247462ae601a64243f7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9f1bbeaa4948ab793852e247462ae601a64243f7", "patch": "@@ -1,3 +1,7 @@\n+2000-11-30  Joseph S. Myers  <jsm28@cam.ac.uk>\n+\n+\t* extend.texi: Update documentation for attributes.\n+\n 2000-11-29  David O'Brien  <obrien@FreeBSD.org>\n \n \t* config/alpha/elf.h (IDENT_ASM_OP): Protect the #define."}, {"sha": "17e037d2c166699f8875c930c57d237e22292930", "filename": "gcc/extend.texi", "status": "modified", "additions": 28, "deletions": 15, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f1bbeaa4948ab793852e247462ae601a64243f7/gcc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f1bbeaa4948ab793852e247462ae601a64243f7/gcc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fextend.texi?ref=9f1bbeaa4948ab793852e247462ae601a64243f7", "patch": "@@ -1392,11 +1392,13 @@ carefully.\n \n The keyword @code{__attribute__} allows you to specify special\n attributes when making a declaration.  This keyword is followed by an\n-attribute specification inside double parentheses.  Ten attributes,\n-@code{noreturn}, @code{const}, @code{format},\n-@code{no_instrument_function}, @code{section}, @code{constructor},\n-@code{destructor}, @code{unused}, @code{weak} and @code{malloc} are\n-currently defined for functions.  Other attributes, including\n+attribute specification inside double parentheses.  Fourteen attributes,\n+@code{noreturn}, @code{pure}, @code{const}, @code{format},\n+@code{format_arg}, @code{no_instrument_function}, @code{section},\n+@code{constructor}, @code{destructor}, @code{unused}, @code{weak},\n+@code{malloc}, @code{alias} and @code{no_check_memory_usage} are\n+currently defined for functions.  Several other attributes are defined\n+for functions on particular target systems.  Other attributes, including\n @code{section} are supported for variables declarations (@pxref{Variable\n Attributes}) and for types (@pxref{Type Attributes}).\n \n@@ -1831,9 +1833,10 @@ attribute declaration with another attribute declaration.\n \n @cindex @code{#pragma}, reason for not using\n @cindex pragma, reason for not using\n-Some people object to the @code{__attribute__} feature, suggesting that ANSI C's\n-@code{#pragma} should be used instead.  There are two reasons for not\n-doing this.\n+Some people object to the @code{__attribute__} feature, suggesting that\n+ISO C's @code{#pragma} should be used instead.  At the time\n+@code{__attribute__} was designed, there were two reasons for not doing\n+this.\n \n @enumerate\n @item\n@@ -1844,9 +1847,18 @@ There is no telling what the same @code{#pragma} might mean in another\n compiler.\n @end enumerate\n \n-These two reasons apply to almost any application that might be proposed\n-for @code{#pragma}.  It is basically a mistake to use @code{#pragma} for\n-@emph{anything}.\n+These two reasons applied to almost any application that might have been\n+proposed for @code{#pragma}.  It was basically a mistake to use\n+@code{#pragma} for @emph{anything}.\n+\n+The ISO C99 standard includes @code{_Pragma}, which now allows pragmas\n+to be generated from macros.  In addition, a @code{#pragma GCC}\n+namespace is now in use for GCC-specific pragmas.  However, it has been\n+found convenient to use @code{__attribute__} to achieve a natural\n+attachment of attributes to their corresponding declarations, whereas\n+@code{#pragma GCC} is of use for constructs that do not naturally form\n+part of the grammar.  @xref{Other Directives,,Miscellaneous\n+Preprocessing Directives, cpp, The C Preprocessor}.\n \n @node Function Prototypes\n @section Prototypes and Old-Style Function Definitions\n@@ -1986,7 +1998,8 @@ attributes of variables or structure fields.  This keyword is followed\n by an attribute specification inside double parentheses.  Eight\n attributes are currently defined for variables: @code{aligned},\n @code{mode}, @code{nocommon}, @code{packed}, @code{section},\n-@code{transparent_union}, @code{unused}, and @code{weak}.  Other\n+@code{transparent_union}, @code{unused}, and @code{weak}.  Some other\n+attributes are defined for variables on particular target systems.  Other\n attributes are available for functions (@pxref{Function Attributes}) and\n for types (@pxref{Type Attributes}).\n \n@@ -2215,9 +2228,9 @@ packed))}.\n The keyword @code{__attribute__} allows you to specify special\n attributes of @code{struct} and @code{union} types when you define such\n types.  This keyword is followed by an attribute specification inside\n-double parentheses.  Three attributes are currently defined for types:\n-@code{aligned}, @code{packed}, and @code{transparent_union}.  Other\n-attributes are defined for functions (@pxref{Function Attributes}) and\n+double parentheses.  Four attributes are currently defined for types:\n+@code{aligned}, @code{packed}, @code{transparent_union}, and @code{unused}.\n+Other attributes are defined for functions (@pxref{Function Attributes}) and\n for variables (@pxref{Variable Attributes}).\n \n You may also specify any one of these attributes with @samp{__}"}]}