{"sha": "7af1c0ad98613e1a8684b075ac2a6e4739b07b07", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2FmMWMwYWQ5ODYxM2UxYTg2ODRiMDc1YWMyYTZlNDczOWIwN2IwNw==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2017-05-12T12:04:31Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2017-05-12T12:04:31Z"}, "message": "tree-ssa-sccvn.h (has_VN_INFO): Declare.\n\n2017-05-12  Richard Biener  <rguenther@suse.de>\n\n\t* tree-ssa-sccvn.h (has_VN_INFO): Declare.\n\t* tree-ssa-pre.c (eliminate_dom_walker::before_dom_children):\n\tFold all stmts not inplace.\n\n\t* g++.dg/tree-ssa/ssa-dse-2.C: Adjust.\n\nFrom-SVN: r247966", "tree": {"sha": "34ee03d7358901d784081705859f9cc7124ad624", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/34ee03d7358901d784081705859f9cc7124ad624"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7af1c0ad98613e1a8684b075ac2a6e4739b07b07", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7af1c0ad98613e1a8684b075ac2a6e4739b07b07", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7af1c0ad98613e1a8684b075ac2a6e4739b07b07", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7af1c0ad98613e1a8684b075ac2a6e4739b07b07/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f7e95bdbca9d3c949a809fda0947e047d1c618b0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f7e95bdbca9d3c949a809fda0947e047d1c618b0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f7e95bdbca9d3c949a809fda0947e047d1c618b0"}], "stats": {"total": 80, "additions": 55, "deletions": 25}, "files": [{"sha": "5f5bd2a7445b15a971a026ad4949527e91e730fb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7af1c0ad98613e1a8684b075ac2a6e4739b07b07/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7af1c0ad98613e1a8684b075ac2a6e4739b07b07/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7af1c0ad98613e1a8684b075ac2a6e4739b07b07", "patch": "@@ -1,3 +1,9 @@\n+2017-05-12  Richard Biener  <rguenther@suse.de>\n+\n+\t* tree-ssa-sccvn.h (has_VN_INFO): Declare.\n+\t* tree-ssa-pre.c (eliminate_dom_walker::before_dom_children):\n+\tFold all stmts not inplace.\n+\n 2017-05-12  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/80713"}, {"sha": "ff4327a37346b34dab7f03d370bf999fcac27f85", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7af1c0ad98613e1a8684b075ac2a6e4739b07b07/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7af1c0ad98613e1a8684b075ac2a6e4739b07b07/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7af1c0ad98613e1a8684b075ac2a6e4739b07b07", "patch": "@@ -1,3 +1,7 @@\n+2017-05-12  Richard Biener  <rguenther@suse.de>\n+\n+\t* g++.dg/tree-ssa/ssa-dse-2.C: Adjust.\n+\n 2017-05-12  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/67687"}, {"sha": "913df2223747f4942cfac1eb9395d24b74ca03c8", "filename": "gcc/testsuite/g++.dg/tree-ssa/ssa-dse-2.C", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7af1c0ad98613e1a8684b075ac2a6e4739b07b07/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fssa-dse-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7af1c0ad98613e1a8684b075ac2a6e4739b07b07/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fssa-dse-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fssa-dse-2.C?ref=7af1c0ad98613e1a8684b075ac2a6e4739b07b07", "patch": "@@ -54,6 +54,4 @@ fill_vec_av_set (av_set_t av)\n }\n \n /* { dg-final { scan-tree-dump-not \"Trimming statement .head = -\" \"dse2\" } } */\n-/* { dg-final { scan-tree-dump \"Deleted dead call: \" \"dse2\" } } */\n-\n-\n+/* { dg-final { scan-tree-dump-not \"mem\\[^\\r\\n\\]*, 0\\\\);\" \"dse2\" } } */"}, {"sha": "e97fdb42b486fbaabed25b77a18df41ca98ee65a", "filename": "gcc/tree-ssa-pre.c", "status": "modified", "additions": 43, "deletions": 22, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7af1c0ad98613e1a8684b075ac2a6e4739b07b07/gcc%2Ftree-ssa-pre.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7af1c0ad98613e1a8684b075ac2a6e4739b07b07/gcc%2Ftree-ssa-pre.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-pre.c?ref=7af1c0ad98613e1a8684b075ac2a6e4739b07b07", "patch": "@@ -4645,30 +4645,51 @@ eliminate_dom_walker::before_dom_children (basic_block b)\n \t      && TREE_CODE (gimple_assign_rhs1 (stmt)) == ADDR_EXPR)\n \t    recompute_tree_invariant_for_addr_expr (gimple_assign_rhs1 (stmt));\n \t  gimple *old_stmt = stmt;\n-\t  if (is_gimple_call (stmt))\n+\t  gimple_stmt_iterator prev = gsi;\n+\t  gsi_prev (&prev);\n+\t  if (fold_stmt (&gsi))\n \t    {\n-\t      /* ???  Only fold calls inplace for now, this may create new\n-\t\t SSA names which in turn will confuse free_scc_vn SSA name\n-\t\t release code.  */\n-\t      fold_stmt_inplace (&gsi);\n-\t      /* When changing a call into a noreturn call, cfg cleanup\n-\t\t is needed to fix up the noreturn call.  */\n-\t      if (!was_noreturn && gimple_call_noreturn_p (stmt))\n-\t\tel_to_fixup.safe_push  (stmt);\n-\t    }\n-\t  else\n-\t    {\n-\t      fold_stmt (&gsi);\n-\t      stmt = gsi_stmt (gsi);\n-\t      if ((gimple_code (stmt) == GIMPLE_COND\n-\t\t   && (gimple_cond_true_p (as_a <gcond *> (stmt))\n-\t\t       || gimple_cond_false_p (as_a <gcond *> (stmt))))\n-\t\t  || (gimple_code (stmt) == GIMPLE_SWITCH\n-\t\t      && TREE_CODE (gimple_switch_index (\n-\t\t\t\t      as_a <gswitch *> (stmt)))\n-\t\t         == INTEGER_CST))\n-\t\tel_todo |= TODO_cleanup_cfg;\n+\t      /* fold_stmt may have created new stmts inbetween\n+\t\t the previous stmt and the folded stmt.  Mark\n+\t\t all defs created there as varying to not confuse\n+\t\t the SCCVN machinery as we're using that even during\n+\t\t elimination.  */\n+\t      if (gsi_end_p (prev))\n+\t\tprev = gsi_start_bb (b);\n+\t      else\n+\t\tgsi_next (&prev);\n+\t      if (gsi_stmt (prev) != gsi_stmt (gsi))\n+\t\tdo\n+\t\t  {\n+\t\t    tree def;\n+\t\t    ssa_op_iter dit;\n+\t\t    FOR_EACH_SSA_TREE_OPERAND (def, gsi_stmt (prev),\n+\t\t\t\t\t       dit, SSA_OP_ALL_DEFS)\n+\t\t      /* As existing DEFs may move between stmts\n+\t\t\t we have to guard VN_INFO_GET.  */\n+\t\t      if (! has_VN_INFO (def))\n+\t\t\tVN_INFO_GET (def)->valnum = def;\n+\t\t    if (gsi_stmt (prev) == gsi_stmt (gsi))\n+\t\t      break;\n+\t\t    gsi_next (&prev);\n+\t\t  }\n+\t\twhile (1);\n \t    }\n+\t  stmt = gsi_stmt (gsi);\n+\t  /* When changing a call into a noreturn call, cfg cleanup\n+\t     is needed to fix up the noreturn call.  */\n+\t  if (!was_noreturn\n+\t      && is_gimple_call (stmt) && gimple_call_noreturn_p (stmt))\n+\t    el_to_fixup.safe_push  (stmt);\n+\t  /* When changing a condition or switch into one we know what\n+\t     edge will be executed, schedule a cfg cleanup.  */\n+\t  if ((gimple_code (stmt) == GIMPLE_COND\n+\t       && (gimple_cond_true_p (as_a <gcond *> (stmt))\n+\t\t   || gimple_cond_false_p (as_a <gcond *> (stmt))))\n+\t      || (gimple_code (stmt) == GIMPLE_SWITCH\n+\t\t  && TREE_CODE (gimple_switch_index\n+\t\t\t\t  (as_a <gswitch *> (stmt))) == INTEGER_CST))\n+\t    el_todo |= TODO_cleanup_cfg;\n \t  /* If we removed EH side-effects from the statement, clean\n \t     its EH information.  */\n \t  if (maybe_clean_or_replace_eh_stmt (old_stmt, stmt))"}, {"sha": "77d0183fcda02e0925c7a41ba82b011f549948b4", "filename": "gcc/tree-ssa-sccvn.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7af1c0ad98613e1a8684b075ac2a6e4739b07b07/gcc%2Ftree-ssa-sccvn.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7af1c0ad98613e1a8684b075ac2a6e4739b07b07/gcc%2Ftree-ssa-sccvn.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-sccvn.h?ref=7af1c0ad98613e1a8684b075ac2a6e4739b07b07", "patch": "@@ -209,6 +209,7 @@ typedef struct vn_ssa_aux\n enum vn_lookup_kind { VN_NOWALK, VN_WALK, VN_WALKREWRITE };\n \n /* Return the value numbering info for an SSA_NAME.  */\n+bool has_VN_INFO (tree);\n extern vn_ssa_aux_t VN_INFO (tree);\n extern vn_ssa_aux_t VN_INFO_GET (tree);\n tree vn_get_expr_for (tree);"}]}