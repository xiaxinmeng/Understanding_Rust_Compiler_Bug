{"sha": "d99dcb77bbbfdaf30c5993ea917001da259f47ba", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDk5ZGNiNzdiYmJmZGFmMzBjNTk5M2VhOTE3MDAxZGEyNTlmNDdiYQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@linaro.org", "date": "2018-02-26T16:17:00Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2018-02-26T16:17:00Z"}, "message": "Make fix for PR 83965 handle SLP reduction chains\n\nThis patch prevents pattern-matching of fold-left SLP reduction chains,\nwhich the previous patch for 83965 didn't handle properly.  It only\nstops the last statement in the group from being matched, but that's\nenough to cause the group to be dissolved later.\n\nA better fix would be to put all the information about the reduction\non the the first statement in the reduction chain, so that every\nstatement in the group can tell what the group is doing.  That doesn't\nseem like stage 4 material though.\n\n2018-02-26  Richard Sandiford  <richard.sandiford@linaro.org>\n\ngcc/\n\tPR tree-optimization/83965\n\t* tree-vect-patterns.c (vect_reassociating_reduction_p): Assume\n\tthat grouped statements are part of a reduction chain.  Return\n\ttrue if the statement is not marked as a reduction itself but\n\tis part of a group.\n\t(vect_recog_dot_prod_pattern): Don't check whether the statement\n\tis part of a group here.\n\t(vect_recog_sad_pattern): Likewise.\n\t(vect_recog_widen_sum_pattern): Likewise.\n\ngcc/testsuite/\n\tPR tree-optimization/83965\n\t* gcc.dg/vect/pr83965-2.c: New test.\n\nFrom-SVN: r257995", "tree": {"sha": "59edac294bea33d8f9fd7c5da312c8c3aaf1b4b2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/59edac294bea33d8f9fd7c5da312c8c3aaf1b4b2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d99dcb77bbbfdaf30c5993ea917001da259f47ba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d99dcb77bbbfdaf30c5993ea917001da259f47ba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d99dcb77bbbfdaf30c5993ea917001da259f47ba", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d99dcb77bbbfdaf30c5993ea917001da259f47ba/comments", "author": null, "committer": null, "parents": [{"sha": "9992661cc6611fcc3156440dc9982e2e72b6cf00", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9992661cc6611fcc3156440dc9982e2e72b6cf00", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9992661cc6611fcc3156440dc9982e2e72b6cf00"}], "stats": {"total": 49, "additions": 41, "deletions": 8}, "files": [{"sha": "6ba082ac7ed8887fc5adf82fc8a8686e37c672a8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d99dcb77bbbfdaf30c5993ea917001da259f47ba/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d99dcb77bbbfdaf30c5993ea917001da259f47ba/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d99dcb77bbbfdaf30c5993ea917001da259f47ba", "patch": "@@ -1,3 +1,15 @@\n+2018-02-26  Richard Sandiford  <richard.sandiford@linaro.org>\n+\n+\tPR tree-optimization/83965\n+\t* tree-vect-patterns.c (vect_reassociating_reduction_p): Assume\n+\tthat grouped statements are part of a reduction chain.  Return\n+\ttrue if the statement is not marked as a reduction itself but\n+\tis part of a group.\n+\t(vect_recog_dot_prod_pattern): Don't check whether the statement\n+\tis part of a group here.\n+\t(vect_recog_sad_pattern): Likewise.\n+\t(vect_recog_widen_sum_pattern): Likewise.\n+\n 2018-02-26  Eric Botcazou  <ebotcazou@adacore.com>\n \n \tPR debug/84545"}, {"sha": "a927f22cdf24fbe52a068a827213ff7265c3b5dc", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d99dcb77bbbfdaf30c5993ea917001da259f47ba/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d99dcb77bbbfdaf30c5993ea917001da259f47ba/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d99dcb77bbbfdaf30c5993ea917001da259f47ba", "patch": "@@ -1,3 +1,8 @@\n+2018-02-26  Richard Sandiford  <richard.sandiford@linaro.org>\n+\n+\tPR tree-optimization/83965\n+\t* gcc.dg/vect/pr83965-2.c: New test.\n+\n 2018-02-26  Tom de Vries  <tom@codesourcery.com>\n \n \t* gcc.c-torture/compile/regs-arg-size.c (swprintf): Declare."}, {"sha": "b9e3260dbe9a7ca5481ff994a4d96954eab8d5eb", "filename": "gcc/testsuite/gcc.dg/vect/pr83965-2.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d99dcb77bbbfdaf30c5993ea917001da259f47ba/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr83965-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d99dcb77bbbfdaf30c5993ea917001da259f47ba/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr83965-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr83965-2.c?ref=d99dcb77bbbfdaf30c5993ea917001da259f47ba", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do compile } */\n+/* { dg-additional-options \"-Ofast -ftrapv\" } */\n+\n+int c;\n+unsigned char d;\n+int e (unsigned char *f)\n+{\n+  int g;\n+  for (int a; a; a++)\n+    {\n+      for (int b = 0; b < 6; b++)\n+\tg += __builtin_abs (f[b] - d);\n+      f += c;\n+    }\n+  return g;\n+}"}, {"sha": "621ed07758ff587d3fe6fca0c4ee1a4579a7b6fe", "filename": "gcc/tree-vect-patterns.c", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d99dcb77bbbfdaf30c5993ea917001da259f47ba/gcc%2Ftree-vect-patterns.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d99dcb77bbbfdaf30c5993ea917001da259f47ba/gcc%2Ftree-vect-patterns.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-patterns.c?ref=d99dcb77bbbfdaf30c5993ea917001da259f47ba", "patch": "@@ -222,13 +222,16 @@ vect_recog_temp_ssa_var (tree type, gimple *stmt)\n }\n \n /* Return true if STMT_VINFO describes a reduction for which reassociation\n-   is allowed.  */\n+   is allowed.  If STMT_INFO is part of a group, assume that it's part of\n+   a reduction chain and optimistically assume that all statements\n+   except the last allow reassociation.  */\n \n static bool\n vect_reassociating_reduction_p (stmt_vec_info stmt_vinfo)\n {\n   return (STMT_VINFO_DEF_TYPE (stmt_vinfo) == vect_reduction_def\n-\t  && STMT_VINFO_REDUC_TYPE (stmt_vinfo) != FOLD_LEFT_REDUCTION);\n+\t  ? STMT_VINFO_REDUC_TYPE (stmt_vinfo) != FOLD_LEFT_REDUCTION\n+\t  : GROUP_FIRST_ELEMENT (stmt_vinfo) != NULL);\n }\n \n /* Function vect_recog_dot_prod_pattern\n@@ -350,8 +353,7 @@ vect_recog_dot_prod_pattern (vec<gimple *> *stmts, tree *type_in,\n     {\n       gimple *def_stmt;\n \n-      if (!vect_reassociating_reduction_p (stmt_vinfo)\n-\t  && ! STMT_VINFO_GROUP_FIRST_ELEMENT (stmt_vinfo))\n+      if (!vect_reassociating_reduction_p (stmt_vinfo))\n \treturn NULL;\n       oprnd0 = gimple_assign_rhs1 (last_stmt);\n       oprnd1 = gimple_assign_rhs2 (last_stmt);\n@@ -571,8 +573,7 @@ vect_recog_sad_pattern (vec<gimple *> *stmts, tree *type_in,\n     {\n       gimple *def_stmt;\n \n-      if (!vect_reassociating_reduction_p (stmt_vinfo)\n-\t  && ! STMT_VINFO_GROUP_FIRST_ELEMENT (stmt_vinfo))\n+      if (!vect_reassociating_reduction_p (stmt_vinfo))\n \treturn NULL;\n       plus_oprnd0 = gimple_assign_rhs1 (last_stmt);\n       plus_oprnd1 = gimple_assign_rhs2 (last_stmt);\n@@ -1256,8 +1257,7 @@ vect_recog_widen_sum_pattern (vec<gimple *> *stmts, tree *type_in,\n   if (gimple_assign_rhs_code (last_stmt) != PLUS_EXPR)\n     return NULL;\n \n-  if (!vect_reassociating_reduction_p (stmt_vinfo)\n-      && ! STMT_VINFO_GROUP_FIRST_ELEMENT (stmt_vinfo))\n+  if (!vect_reassociating_reduction_p (stmt_vinfo))\n     return NULL;\n \n   oprnd0 = gimple_assign_rhs1 (last_stmt);"}]}