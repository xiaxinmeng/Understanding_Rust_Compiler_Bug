{"sha": "44a147ad2ee5436c0f2b1bb95e3de61cce8c226e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDRhMTQ3YWQyZWU1NDM2YzBmMmIxYmI5NWUzZGU2MWNjZThjMjI2ZQ==", "commit": {"author": {"name": "Neil Booth", "email": "neil@daikokuya.demon.co.uk", "date": "2002-05-07T21:07:24Z"}, "committer": {"name": "Neil Booth", "email": "neil@gcc.gnu.org", "date": "2002-05-07T21:07:24Z"}, "message": "c-common.c (c_common_init): Set options->unsigned_wchar.\n\n\t* c-common.c (c_common_init): Set options->unsigned_wchar.\n\t* cppinit.c (cpp_create_reader): Default unsigned_wchar,\n\tgroup target dependencies.\n\t(init_builtins, cpp_handle_option): Update.\n\t* cpplex.c (cpp_interpret_charconst): Update.\n\t* cpplib.h (struct cpp_options): Add unsigned_wchar, rename\n\tsigned_char to unsigned_char, group target dependencies.\n\t* defaults.h (WCHAR_UNSIGNED): Remove.\n\t* system.h (WCHAR_UNSIGNED, MAX_CHAR_TYPE_SIZE): Poison.\nconfig:\n\t* freebsd.h, interix.h, alpha/freebsd.h, arm/freebsd.h,\n\ti386/386bsd.h, i386/beos-elf.h, i386/bsd386.h, i386/cygwin.h,\n\ti386/djgpp.h, i386/freebsd-aout.h, i386/i386-interix.h,\n\ti386/win32.h, ia64/freebsd.h, mips/netbsd.h, rs6000/freebsd.h,\n\tsh/elf.h, sh/sh.h, sparc/freebsd.h: Remove WCHAR_UNSIGNED.\ndoc:\n\t* tm.texi: Remove MAX_CHAR_TYPE_SIZE.\n\nFrom-SVN: r53271", "tree": {"sha": "74df1638e099a3467f9206ea84d1ec4945ea2b23", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/74df1638e099a3467f9206ea84d1ec4945ea2b23"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/44a147ad2ee5436c0f2b1bb95e3de61cce8c226e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44a147ad2ee5436c0f2b1bb95e3de61cce8c226e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/44a147ad2ee5436c0f2b1bb95e3de61cce8c226e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44a147ad2ee5436c0f2b1bb95e3de61cce8c226e/comments", "author": null, "committer": null, "parents": [{"sha": "522e3d222659a0f3ea3d0ffc1e72b35feafed01e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/522e3d222659a0f3ea3d0ffc1e72b35feafed01e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/522e3d222659a0f3ea3d0ffc1e72b35feafed01e"}], "stats": {"total": 119, "additions": 47, "deletions": 72}, "files": [{"sha": "764836dcee2f6cb930f4bcb2c5dee2b0f66060c5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44a147ad2ee5436c0f2b1bb95e3de61cce8c226e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44a147ad2ee5436c0f2b1bb95e3de61cce8c226e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=44a147ad2ee5436c0f2b1bb95e3de61cce8c226e", "patch": "@@ -1,3 +1,23 @@\n+2002-05-07  Neil Booth  <neil@daikokuya.demon.co.uk>\n+\n+\t* c-common.c (c_common_init): Set options->unsigned_wchar.\n+\t* cppinit.c (cpp_create_reader): Default unsigned_wchar,\n+\tgroup target dependencies.\n+\t(init_builtins, cpp_handle_option): Update.\n+\t* cpplex.c (cpp_interpret_charconst): Update.\n+\t* cpplib.h (struct cpp_options): Add unsigned_wchar, rename\n+\tsigned_char to unsigned_char, group target dependencies.\n+\t* defaults.h (WCHAR_UNSIGNED): Remove.\n+\t* system.h (WCHAR_UNSIGNED, MAX_CHAR_TYPE_SIZE): Poison.\n+config:\n+\t* freebsd.h, interix.h, alpha/freebsd.h, arm/freebsd.h,\n+\ti386/386bsd.h, i386/beos-elf.h, i386/bsd386.h, i386/cygwin.h,\n+\ti386/djgpp.h, i386/freebsd-aout.h, i386/i386-interix.h,\n+\ti386/win32.h, ia64/freebsd.h, mips/netbsd.h, rs6000/freebsd.h,\n+\tsh/elf.h, sh/sh.h, sparc/freebsd.h: Remove WCHAR_UNSIGNED.\n+doc:\n+\t* tm.texi: Remove MAX_CHAR_TYPE_SIZE.\n+\n 2002-05-07  Mark Mitchell  <mark@codesourcery.com>\n \n \t* fixinc/inclhack.def (windiss_math1): New fix."}, {"sha": "b23bcfe14dd08cbd75e1c8093b094c7d250668a5", "filename": "gcc/c-common.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44a147ad2ee5436c0f2b1bb95e3de61cce8c226e/gcc%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44a147ad2ee5436c0f2b1bb95e3de61cce8c226e/gcc%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.c?ref=44a147ad2ee5436c0f2b1bb95e3de61cce8c226e", "patch": "@@ -4310,6 +4310,15 @@ c_common_init (filename)\n   options->char_precision = TYPE_PRECISION (char_type_node);\n   options->int_precision = TYPE_PRECISION (integer_type_node);\n   options->wchar_precision = TYPE_PRECISION (wchar_type_node);\n+  options->unsigned_wchar = TREE_UNSIGNED (wchar_type_node);\n+  /* This can be uncommented when 1) This all happens before\n+     cpp_post_options() (needed for __CHAR_UNSIGNED__ builtin), which\n+     in turn requires wchat_type_node to be set up properly by then,\n+     and 2) tradcpp is integrated, so that the preprocessors don't\n+     need to handle the command-line options and the specs in gcc.c\n+     can be updated.\n+\n+     options->unsigned_char = !flag_signed_char; */\n \n   options->warn_multichar = warn_multichar;\n "}, {"sha": "c5b8fc834bba6bc2ba252c3d0f752b2ec9be3722", "filename": "gcc/config/alpha/freebsd.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44a147ad2ee5436c0f2b1bb95e3de61cce8c226e/gcc%2Fconfig%2Falpha%2Ffreebsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44a147ad2ee5436c0f2b1bb95e3de61cce8c226e/gcc%2Fconfig%2Falpha%2Ffreebsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Ffreebsd.h?ref=44a147ad2ee5436c0f2b1bb95e3de61cce8c226e", "patch": "@@ -53,9 +53,6 @@ Boston, MA 02111-1307, USA.  */\n /* alpha.h gets this wrong for FreeBSD.  We use the GCC defaults instead.  */\n #undef WCHAR_TYPE\n \n-#undef  WCHAR_UNSIGNED\n-#define WCHAR_UNSIGNED\t0\n-\n #undef  WCHAR_TYPE_SIZE\n #define WCHAR_TYPE_SIZE\t32\n "}, {"sha": "0d417a22ded0ab825842d558819e43cfff6876ef", "filename": "gcc/config/arm/freebsd.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44a147ad2ee5436c0f2b1bb95e3de61cce8c226e/gcc%2Fconfig%2Farm%2Ffreebsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44a147ad2ee5436c0f2b1bb95e3de61cce8c226e/gcc%2Fconfig%2Farm%2Ffreebsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Ffreebsd.h?ref=44a147ad2ee5436c0f2b1bb95e3de61cce8c226e", "patch": "@@ -41,9 +41,6 @@ Boston, MA 02111-1307, USA.  */\n /* We use the GCC defaults here.  */\n #undef WCHAR_TYPE\n \n-#undef  WCHAR_UNSIGNED\n-#define WCHAR_UNSIGNED 0\n-\n #undef  WCHAR_TYPE_SIZE\n #define WCHAR_TYPE_SIZE 32\n "}, {"sha": "99ee6ae3aa6257abf50dbb64380632f837654283", "filename": "gcc/config/freebsd.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44a147ad2ee5436c0f2b1bb95e3de61cce8c226e/gcc%2Fconfig%2Ffreebsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44a147ad2ee5436c0f2b1bb95e3de61cce8c226e/gcc%2Fconfig%2Ffreebsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ffreebsd.h?ref=44a147ad2ee5436c0f2b1bb95e3de61cce8c226e", "patch": "@@ -76,9 +76,6 @@ Boston, MA 02111-1307, USA.  */\n #undef  WCHAR_TYPE\n #define WCHAR_TYPE \"int\"\n \n-#undef  WCHAR_UNSIGNED\n-#define WCHAR_UNSIGNED 0\n-\n #define MATH_LIBRARY_PROFILE    \"-lm_p\"\n \n /* Code generation parameters.  */"}, {"sha": "9745530abec0725eb05aee4a2e9b28e307956fc7", "filename": "gcc/config/i386/386bsd.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44a147ad2ee5436c0f2b1bb95e3de61cce8c226e/gcc%2Fconfig%2Fi386%2F386bsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44a147ad2ee5436c0f2b1bb95e3de61cce8c226e/gcc%2Fconfig%2Fi386%2F386bsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2F386bsd.h?ref=44a147ad2ee5436c0f2b1bb95e3de61cce8c226e", "patch": "@@ -17,8 +17,6 @@\n #undef WCHAR_TYPE\n #define WCHAR_TYPE \"short unsigned int\"\n \n-#define WCHAR_UNSIGNED 1\n-\n #undef WCHAR_TYPE_SIZE\n #define WCHAR_TYPE_SIZE 16\n "}, {"sha": "5b1d1d3ff22be321984ddf1dfa8cdf43af1ae9c3", "filename": "gcc/config/i386/beos-elf.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44a147ad2ee5436c0f2b1bb95e3de61cce8c226e/gcc%2Fconfig%2Fi386%2Fbeos-elf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44a147ad2ee5436c0f2b1bb95e3de61cce8c226e/gcc%2Fconfig%2Fi386%2Fbeos-elf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fbeos-elf.h?ref=44a147ad2ee5436c0f2b1bb95e3de61cce8c226e", "patch": "@@ -65,9 +65,6 @@ Boston, MA 02111-1307, USA.  */\n #undef WCHAR_TYPE\n #define WCHAR_TYPE \"short unsigned int\"\n    \n-#undef WCHAR_UNSIGNED\n-#define WCHAR_UNSIGNED 1\n-\n #undef WCHAR_TYPE_SIZE\n #define WCHAR_TYPE_SIZE 16\n     "}, {"sha": "eda80d213ed5a78e5e51ef0c1b978dc6d8871916", "filename": "gcc/config/i386/bsd386.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44a147ad2ee5436c0f2b1bb95e3de61cce8c226e/gcc%2Fconfig%2Fi386%2Fbsd386.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44a147ad2ee5436c0f2b1bb95e3de61cce8c226e/gcc%2Fconfig%2Fi386%2Fbsd386.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fbsd386.h?ref=44a147ad2ee5436c0f2b1bb95e3de61cce8c226e", "patch": "@@ -10,9 +10,6 @@\n #undef WCHAR_TYPE\n #define WCHAR_TYPE \"int\"\n \n-#undef WCHAR_UNSIGNED\n-#define WCHAR_UNSIGNED 0\n-\n #undef WCHAR_TYPE_SIZE\n #define WCHAR_TYPE_SIZE 32\n "}, {"sha": "09d4e691d8836ed81445fadc02a3b978f5c876aa", "filename": "gcc/config/i386/cygwin.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44a147ad2ee5436c0f2b1bb95e3de61cce8c226e/gcc%2Fconfig%2Fi386%2Fcygwin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44a147ad2ee5436c0f2b1bb95e3de61cce8c226e/gcc%2Fconfig%2Fi386%2Fcygwin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fcygwin.h?ref=44a147ad2ee5436c0f2b1bb95e3de61cce8c226e", "patch": "@@ -171,7 +171,6 @@ Boston, MA 02111-1307, USA.  */\n \n #define SIZE_TYPE \"unsigned int\"\n #define PTRDIFF_TYPE \"int\"\n-#define WCHAR_UNSIGNED 1\n #define WCHAR_TYPE_SIZE 16\n #define WCHAR_TYPE \"short unsigned int\"\n "}, {"sha": "6e53e510b4f255f905a9e4c2857abc4ff984bcdf", "filename": "gcc/config/i386/djgpp.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44a147ad2ee5436c0f2b1bb95e3de61cce8c226e/gcc%2Fconfig%2Fi386%2Fdjgpp.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44a147ad2ee5436c0f2b1bb95e3de61cce8c226e/gcc%2Fconfig%2Fi386%2Fdjgpp.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fdjgpp.h?ref=44a147ad2ee5436c0f2b1bb95e3de61cce8c226e", "patch": "@@ -159,9 +159,6 @@ Boston, MA 02111-1307, USA.  */\n \n /* Definitions for types and sizes. Wide characters are 16-bits long so\n    Win32 compiler add-ons will be wide character compatible.  */\n-#undef WCHAR_UNSIGNED\n-#define WCHAR_UNSIGNED 1\n-\n #undef WCHAR_TYPE_SIZE\n #define WCHAR_TYPE_SIZE 16\n "}, {"sha": "7f8a4fe811c056eaff88af9a061bcd14fded6859", "filename": "gcc/config/i386/freebsd-aout.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44a147ad2ee5436c0f2b1bb95e3de61cce8c226e/gcc%2Fconfig%2Fi386%2Ffreebsd-aout.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44a147ad2ee5436c0f2b1bb95e3de61cce8c226e/gcc%2Fconfig%2Fi386%2Ffreebsd-aout.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Ffreebsd-aout.h?ref=44a147ad2ee5436c0f2b1bb95e3de61cce8c226e", "patch": "@@ -53,8 +53,6 @@ Boston, MA 02111-1307, USA.  */\n #undef WCHAR_TYPE\n #define WCHAR_TYPE \"int\"\n \n-#define WCHAR_UNSIGNED 0\n-\n #undef WCHAR_TYPE_SIZE\n #define WCHAR_TYPE_SIZE BITS_PER_WORD\n "}, {"sha": "1043c5f2a49cf604db9f3372ea8384f32ec60acf", "filename": "gcc/config/i386/i386-interix.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44a147ad2ee5436c0f2b1bb95e3de61cce8c226e/gcc%2Fconfig%2Fi386%2Fi386-interix.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44a147ad2ee5436c0f2b1bb95e3de61cce8c226e/gcc%2Fconfig%2Fi386%2Fi386-interix.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-interix.h?ref=44a147ad2ee5436c0f2b1bb95e3de61cce8c226e", "patch": "@@ -44,7 +44,6 @@ Boston, MA 02111-1307, USA.  */\n #undef TARGET_CPU_DEFAULT\n #define TARGET_CPU_DEFAULT 2 /* 486 */\n \n-#define WCHAR_UNSIGNED 1\n #define WCHAR_TYPE_SIZE 16\n #define WCHAR_TYPE \"short unsigned int\"\n "}, {"sha": "561118b558dbfbcaaa39eb83873739afae0de4c8", "filename": "gcc/config/i386/win32.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44a147ad2ee5436c0f2b1bb95e3de61cce8c226e/gcc%2Fconfig%2Fi386%2Fwin32.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44a147ad2ee5436c0f2b1bb95e3de61cce8c226e/gcc%2Fconfig%2Fi386%2Fwin32.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fwin32.h?ref=44a147ad2ee5436c0f2b1bb95e3de61cce8c226e", "patch": "@@ -95,7 +95,6 @@ Boston, MA 02111-1307, USA.  */\n \n #define SIZE_TYPE \"unsigned int\"\n #define PTRDIFF_TYPE \"int\"\n-#define WCHAR_UNSIGNED 1\n #define WCHAR_TYPE_SIZE 16\n #define WCHAR_TYPE \"short unsigned int\"\n /* Currently we do not have the atexit() function,"}, {"sha": "34dc885905b24830d2a0fa0c53978eda128dde76", "filename": "gcc/config/ia64/freebsd.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44a147ad2ee5436c0f2b1bb95e3de61cce8c226e/gcc%2Fconfig%2Fia64%2Ffreebsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44a147ad2ee5436c0f2b1bb95e3de61cce8c226e/gcc%2Fconfig%2Fia64%2Ffreebsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Ffreebsd.h?ref=44a147ad2ee5436c0f2b1bb95e3de61cce8c226e", "patch": "@@ -42,9 +42,6 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n    We use the GCC defaults instead.  */\n #undef WCHAR_TYPE\n \n-#undef  WCHAR_UNSIGNED\n-#define WCHAR_UNSIGNED 0\n-\n #undef  WCHAR_TYPE_SIZE\n #define WCHAR_TYPE_SIZE 32\n "}, {"sha": "9100e01adb7bd69e9628b508897731d34da790d1", "filename": "gcc/config/interix.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44a147ad2ee5436c0f2b1bb95e3de61cce8c226e/gcc%2Fconfig%2Finterix.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44a147ad2ee5436c0f2b1bb95e3de61cce8c226e/gcc%2Fconfig%2Finterix.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Finterix.h?ref=44a147ad2ee5436c0f2b1bb95e3de61cce8c226e", "patch": "@@ -100,7 +100,6 @@ for windows/multi thread */\n \n #undef WCHAR_TYPE\n #undef WCHAR_TYPE_SIZE\n-#define WCHAR_UNSIGNED 1\n #define WCHAR_TYPE \"short unsigned int\"\n #define WCHAR_TYPE_SIZE 16\n "}, {"sha": "c625b9d2cdb58904b57bae0837f2df80c250d08b", "filename": "gcc/config/mips/netbsd.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44a147ad2ee5436c0f2b1bb95e3de61cce8c226e/gcc%2Fconfig%2Fmips%2Fnetbsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44a147ad2ee5436c0f2b1bb95e3de61cce8c226e/gcc%2Fconfig%2Fmips%2Fnetbsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fnetbsd.h?ref=44a147ad2ee5436c0f2b1bb95e3de61cce8c226e", "patch": "@@ -185,9 +185,6 @@ Boston, MA 02111-1307, USA.  */\n #undef WCHAR_TYPE\n #define WCHAR_TYPE \"int\"\n \n-#undef WCHAR_UNSIGNED\n-#define WCHAR_UNSIGNED 0\n-\n #undef WCHAR_TYPE_SIZE\n #define WCHAR_TYPE_SIZE 32\n "}, {"sha": "e4b6482798edc05fe3dcc3a3d5b374e0c1d18e29", "filename": "gcc/config/rs6000/freebsd.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44a147ad2ee5436c0f2b1bb95e3de61cce8c226e/gcc%2Fconfig%2Frs6000%2Ffreebsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44a147ad2ee5436c0f2b1bb95e3de61cce8c226e/gcc%2Fconfig%2Frs6000%2Ffreebsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Ffreebsd.h?ref=44a147ad2ee5436c0f2b1bb95e3de61cce8c226e", "patch": "@@ -48,9 +48,6 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n /* rs6000.h gets this wrong for FreeBSD.  We use the GCC defaults instead.  */\n #undef WCHAR_TYPE\n \n-#undef  WCHAR_UNSIGNED\n-#define WCHAR_UNSIGNED 0\n-\n #undef  WCHAR_TYPE_SIZE\n #define WCHAR_TYPE_SIZE 32\n "}, {"sha": "716f494229af349a266d8f2ef0e2131289c07406", "filename": "gcc/config/sh/elf.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44a147ad2ee5436c0f2b1bb95e3de61cce8c226e/gcc%2Fconfig%2Fsh%2Felf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44a147ad2ee5436c0f2b1bb95e3de61cce8c226e/gcc%2Fconfig%2Fsh%2Felf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Felf.h?ref=44a147ad2ee5436c0f2b1bb95e3de61cce8c226e", "patch": "@@ -30,9 +30,6 @@ Boston, MA 02111-1307, USA.  */\n #undef SIZE_TYPE\n #undef PTRDIFF_TYPE\n \n-/* And one that is defined in sh.h and should be undefined in svr4.h...  */\n-#undef WCHAR_UNSIGNED\n-\n /* Be ELF-like.  */\n /* TODO: convert includes to ${tm_file} list in config.gcc.  */\n #include \"dbxelf.h\""}, {"sha": "5a5094e1c9d9b6cd2d9cfc448ccde44b33ae52bd", "filename": "gcc/config/sh/sh.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44a147ad2ee5436c0f2b1bb95e3de61cce8c226e/gcc%2Fconfig%2Fsh%2Fsh.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44a147ad2ee5436c0f2b1bb95e3de61cce8c226e/gcc%2Fconfig%2Fsh%2Fsh.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.h?ref=44a147ad2ee5436c0f2b1bb95e3de61cce8c226e", "patch": "@@ -2522,7 +2522,6 @@ while (0)\n \n #define WCHAR_TYPE \"short unsigned int\"\n #define WCHAR_TYPE_SIZE 16\n-#define WCHAR_UNSIGNED 1\n \n #define SH_ELF_WCHAR_TYPE \"long int\"\n "}, {"sha": "e966090eafb222a666612dfa4589de5f5ebaf427", "filename": "gcc/config/sparc/freebsd.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44a147ad2ee5436c0f2b1bb95e3de61cce8c226e/gcc%2Fconfig%2Fsparc%2Ffreebsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44a147ad2ee5436c0f2b1bb95e3de61cce8c226e/gcc%2Fconfig%2Fsparc%2Ffreebsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Ffreebsd.h?ref=44a147ad2ee5436c0f2b1bb95e3de61cce8c226e", "patch": "@@ -50,9 +50,6 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n    We use the GCC defaults instead.  */\n #undef WCHAR_TYPE\n \n-#undef  WCHAR_UNSIGNED\n-#define WCHAR_UNSIGNED 0\n-\n #undef  WCHAR_TYPE_SIZE\n #define WCHAR_TYPE_SIZE 32\n "}, {"sha": "dae4ffe602c8040ed2ee3c0955b661670209cfbd", "filename": "gcc/cppinit.c", "status": "modified", "additions": 5, "deletions": 8, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44a147ad2ee5436c0f2b1bb95e3de61cce8c226e/gcc%2Fcppinit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44a147ad2ee5436c0f2b1bb95e3de61cce8c226e/gcc%2Fcppinit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcppinit.c?ref=44a147ad2ee5436c0f2b1bb95e3de61cce8c226e", "patch": "@@ -494,11 +494,6 @@ cpp_create_reader (lang)\n   CPP_OPTION (pfile, tabstop) = 8;\n   CPP_OPTION (pfile, operator_names) = 1;\n   CPP_OPTION (pfile, warn_endif_labels) = 1;\n-#if DEFAULT_SIGNED_CHAR\n-  CPP_OPTION (pfile, signed_char) = 1;\n-#else\n-  CPP_OPTION (pfile, signed_char) = 0;\n-#endif\n \n   CPP_OPTION (pfile, pending) =\n     (struct cpp_pending *) xcalloc (1, sizeof (struct cpp_pending));\n@@ -510,6 +505,8 @@ cpp_create_reader (lang)\n   CPP_OPTION (pfile, char_precision) = CHAR_BIT;\n   CPP_OPTION (pfile, wchar_precision) = CHAR_BIT * sizeof (int);\n   CPP_OPTION (pfile, int_precision) = CHAR_BIT * sizeof (int);\n+  CPP_OPTION (pfile, unsigned_char) = !DEFAULT_SIGNED_CHAR;\n+  CPP_OPTION (pfile, unsigned_wchar) = 1;\n \n   /* It's simplest to just create this struct whether or not it will\n      be needed.  */\n@@ -779,7 +776,7 @@ init_builtins (pfile)\n   else if (CPP_OPTION (pfile, c99))\n     _cpp_define_builtin (pfile, \"__STDC_VERSION__ 199901L\");\n \n-  if (CPP_OPTION (pfile, signed_char) == 0)\n+  if (CPP_OPTION (pfile, unsigned_char))\n     _cpp_define_builtin (pfile, \"__CHAR_UNSIGNED__ 1\");\n \n   if (CPP_OPTION (pfile, lang) == CLK_STDC89\n@@ -1450,10 +1447,10 @@ cpp_handle_option (pfile, argc, argv, ignore)\n \t  CPP_OPTION (pfile, show_column) = 0;\n \t  break;\n \tcase OPT_fsigned_char:\n-\t  CPP_OPTION (pfile, signed_char) = 1;\n+\t  CPP_OPTION (pfile, unsigned_char) = 0;\n \t  break;\n \tcase OPT_funsigned_char:\n-\t  CPP_OPTION (pfile, signed_char) = 0;\n+\t  CPP_OPTION (pfile, unsigned_char) = 1;\n \t  break;\n \tcase OPT_ftabstop:\n \t  /* Silently ignore empty string, non-longs and silly values.  */"}, {"sha": "39afc5905a93bb5ff68ad152015ecce34e2e61f8", "filename": "gcc/cpplex.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44a147ad2ee5436c0f2b1bb95e3de61cce8c226e/gcc%2Fcpplex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44a147ad2ee5436c0f2b1bb95e3de61cce8c226e/gcc%2Fcpplex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcpplex.c?ref=44a147ad2ee5436c0f2b1bb95e3de61cce8c226e", "patch": "@@ -1883,13 +1883,13 @@ cpp_interpret_charconst (pfile, token, pchars_seen, unsignedp)\n     {\n       width = CPP_OPTION (pfile, char_precision);\n       max_chars = CPP_OPTION (pfile, int_precision) / width;\n-      unsigned_p = CPP_OPTION (pfile, signed_char) == 0;\n+      unsigned_p = CPP_OPTION (pfile, unsigned_char);\n     }\n   else\n     {\n       width = CPP_OPTION (pfile, wchar_precision);\n       max_chars = 1;\n-      unsigned_p = WCHAR_UNSIGNED;\n+      unsigned_p = CPP_OPTION (pfile, unsigned_wchar);\n     }\n \n   if (width < BITS_PER_CPPCHAR_T)"}, {"sha": "1b7da3794f3e286590032d1eab53b44b79287dd9", "filename": "gcc/cpplib.h", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44a147ad2ee5436c0f2b1bb95e3de61cce8c226e/gcc%2Fcpplib.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44a147ad2ee5436c0f2b1bb95e3de61cce8c226e/gcc%2Fcpplib.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcpplib.h?ref=44a147ad2ee5436c0f2b1bb95e3de61cce8c226e", "patch": "@@ -251,19 +251,12 @@ struct cpp_options\n   /* -fleading_underscore sets this to \"_\".  */\n   const char *user_label_prefix;\n \n-  /* Precision for target CPP arithmetic, target characters, target\n-     ints and target wide characters, respectively.  */\n-  size_t precision, char_precision, int_precision, wchar_precision;\n-\n   /* The language we're preprocessing.  */\n   enum c_lang lang;\n \n   /* Non-0 means -v, so print the full set of include dirs.  */\n   unsigned char verbose;\n \n-  /* Nonzero means chars are signed.  */\n-  unsigned char signed_char;\n-\n   /* Nonzero means use extra default include directories for C++.  */\n   unsigned char cplusplus;\n \n@@ -395,6 +388,15 @@ struct cpp_options\n      options.  Stand-alone CPP should then bail out after option\n      parsing; drivers might want to continue printing help.  */\n   unsigned char help_only;\n+\n+  /* Target-specific features set by the front end or client.  */\n+\n+  /* Precision for target CPP arithmetic, target characters, target\n+     ints and target wide characters, respectively.  */\n+  size_t precision, char_precision, int_precision, wchar_precision;\n+\n+  /* Nonzero means chars (wide chars) are unsigned.  */\n+  unsigned char unsigned_char, unsigned_wchar;\n };\n \n /* Call backs.  */"}, {"sha": "69c95e7d9e9d40111bfaa7174f64e08dcb80bc52", "filename": "gcc/defaults.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44a147ad2ee5436c0f2b1bb95e3de61cce8c226e/gcc%2Fdefaults.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44a147ad2ee5436c0f2b1bb95e3de61cce8c226e/gcc%2Fdefaults.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdefaults.h?ref=44a147ad2ee5436c0f2b1bb95e3de61cce8c226e", "patch": "@@ -318,10 +318,6 @@ do {\t\t\t\t\t\t\t\t\\\n #define WCHAR_TYPE_SIZE INT_TYPE_SIZE\n #endif\n \n-#ifndef WCHAR_UNSIGNED\n-#define WCHAR_UNSIGNED 0\n-#endif\n-\n #ifndef FLOAT_TYPE_SIZE\n #define FLOAT_TYPE_SIZE BITS_PER_WORD\n #endif"}, {"sha": "b70ae4862a4415fe4ffd47867d8783f56ae72a5a", "filename": "gcc/doc/tm.texi", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44a147ad2ee5436c0f2b1bb95e3de61cce8c226e/gcc%2Fdoc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44a147ad2ee5436c0f2b1bb95e3de61cce8c226e/gcc%2Fdoc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi?ref=44a147ad2ee5436c0f2b1bb95e3de61cce8c226e", "patch": "@@ -1516,14 +1516,6 @@ A C expression for the size in bits of the type @code{char} on the\n target machine.  If you don't define this, the default is\n @code{BITS_PER_UNIT}.\n \n-@findex MAX_CHAR_TYPE_SIZE\n-@item MAX_CHAR_TYPE_SIZE\n-Maximum number for the size in bits of the type @code{char} on the\n-target machine.  If this is undefined, the default is\n-@code{CHAR_TYPE_SIZE}.  Otherwise, it is the constant value that is the\n-largest value that @code{CHAR_TYPE_SIZE} can have at run-time.  This is\n-used in @code{cpp}.\n-\n @findex BOOL_TYPE_SIZE\n @item BOOL_TYPE_SIZE\n A C expression for the size in bits of the C++ type @code{bool} and"}, {"sha": "e12585b3fb0bc6cd126933953a59bde45476c505", "filename": "gcc/system.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44a147ad2ee5436c0f2b1bb95e3de61cce8c226e/gcc%2Fsystem.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44a147ad2ee5436c0f2b1bb95e3de61cce8c226e/gcc%2Fsystem.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsystem.h?ref=44a147ad2ee5436c0f2b1bb95e3de61cce8c226e", "patch": "@@ -594,7 +594,8 @@ typedef char _Bool;\n \tSET_DEFAULT_TYPE_ATTRIBUTES SET_DEFAULT_DECL_ATTRIBUTES\t\t\\\n \tMERGE_MACHINE_TYPE_ATTRIBUTES MERGE_MACHINE_DECL_ATTRIBUTES\t\\\n \tMD_INIT_BUILTINS MD_EXPAND_BUILTIN ASM_OUTPUT_CONSTRUCTOR\t\\\n-\tASM_OUTPUT_DESTRUCTOR SIGNED_CHAR_SPEC\n+\tASM_OUTPUT_DESTRUCTOR SIGNED_CHAR_SPEC MAX_CHAR_TYPE_SIZE\t\\\n+\tWCHAR_UNSIGNED\n \n /* And other obsolete target macros, or macros that used to be in target\n    headers and were not used, and may be obsolete or may never have"}]}