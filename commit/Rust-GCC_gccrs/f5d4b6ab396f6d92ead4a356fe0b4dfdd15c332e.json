{"sha": "f5d4b6ab396f6d92ead4a356fe0b4dfdd15c332e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjVkNGI2YWIzOTZmNmQ5MmVhZDRhMzU2ZmUwYjRkZmRkMTVjMzMyZQ==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2018-12-11T11:09:46Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-12-11T11:09:46Z"}, "message": "[Ada] Spurious visibility error on aspect Predicate\n\nThe GNAT-defined aspect Predicate has the same semantics as the Ada\naspect Dynamic_Predicate, including direct visibility to the components\nof a record type to which the aspect applies.\n\nThe following must compile quietly:\n\n   gcc -c integer_stacks.ads\n\n----\npragma SPARK_Mode (On);\n\nwith Bounded_Stacks;\npackage Integer_Stacks is\n     new Bounded_Stacks (Element => Integer, Default_Element => 0);\n----\ngeneric\n   type Element is private;\n   Default_Element : Element;\npackage Bounded_Stacks is\n\n   type Stack (Capacity : Positive) is tagged private\n      with Default_Initial_Condition => Empty (Stack);\n\n   function \"=\" (Left, Right : Stack) return Boolean;\n\n   function Extent (This : Stack) return Natural;\n\n   function Empty (This : Stack) return Boolean;\n\n   function Full (This : Stack) return Boolean;\n\n   procedure Reset (This : out Stack) with\n     Post'Class => Empty (This) and\n                   not Full (This),\n     Global     => null,\n     Depends    => (This =>+ null);\n\n   procedure Push (This : in out Stack;  Item : Element) with\n     Pre'Class  => not Full (This) and\n                   Extent (This) < This.Capacity,\n     Post'Class => not Empty (This) and\n                   Extent (This) = Extent (This'Old) + 1,\n     Global     => null,\n     Depends    => (This =>+ Item);\n\n   procedure Pop (This : in out Stack;  Item : out Element) with\n     Pre'Class  => not Empty (This),\n     Post'Class => not Full (This) and\n                   Extent (This) = Extent (This'Old) - 1,\n     Global     => null,\n     Depends    => (This =>+ null, Item => This);\n\n   function Peek (This : Stack) return Element with\n     Pre'Class => not Empty (This),\n     Global    => null,\n     Depends   => (Peek'Result => This);\n\nprivate\n\n   type Contents is array (Positive range <>) of Element;\n\n   type Stack (Capacity : Positive) is tagged record\n      Values : Contents (1 .. Capacity); -- := (others => Default_Element);\n--        Top    : Natural;\n      Top    : Natural := 0;\n   end record with Predicate => Top <= Capacity,\n     Annotate => (GNATprove,\n                  Intentional,\n                  \"type \"\"Stack\"\" is not fully initialized\",\n                  \"Because zeroing Top is sufficient\");\n\nend Bounded_Stacks;\n----\npackage body Bounded_Stacks is\n\n   ------------\n   -- Extent --\n   ------------\n\n   function Extent (This : Stack) return Natural is\n     (This.Top);\n\n   -----------\n   -- Empty --\n   -----------\n\n   function Empty (This : Stack) return Boolean is\n     (This.Top = 0);\n\n   ----------\n   -- Full --\n   ----------\n\n   function Full (This : Stack) return Boolean is\n     (This.Top = This.Capacity);\n\n   -----------\n   -- Reset --\n   -----------\n\n   procedure Reset (This : out Stack) is\n   begin\n      This := (This.Capacity, Top => 0, others => <>);\n--        This.Top := 0;\n   end Reset;\n\n   ----------\n   -- Push --\n   ----------\n\n   procedure Push (This : in out Stack;  Item : Element) is\n   begin\n      This.Top := This.Top + 1;\n      This.Values (This.Top) := Item;\n   end Push;\n\n   ---------\n   -- Pop --\n   ---------\n\n   procedure Pop (This : in out Stack;  Item : out Element) is\n   begin\n      Item := This.Values (This.Top);\n      This.Top := This.Top - 1;\n   end Pop;\n\n   ----------\n   -- Peek --\n   ----------\n\n   function Peek (This : Stack) return Element is\n     (This.Values (This.Top));\n\n   ---------\n   -- \"=\" --\n   ---------\n\n   function \"=\" (Left, Right : Stack) return Boolean is\n   begin\n      if Left.Top /= Right.Top then\n         return False;\n      else\n         for K in 1 .. Left.Top loop\n            if Left.Values (K) /= Right.Values (K) then\n               return False;\n            end if;\n         end loop;\n         return True;\n      end if;\n   end \"=\";\n\nend Bounded_Stacks;\n----\n\n2018-12-11  Ed Schonberg  <schonberg@adacore.com>\n\ngcc/ada/\n\n\t* sem_ch13.adb (Check_Aspect_At_End_Of_Declarations,\n\tFreeze_Entity_Checks): Process aspect Predicate in the same\n\tfashion as aspect Dynamic_Predicate.\n\nFrom-SVN: r266985", "tree": {"sha": "36ab5bc9403781912d80f9cfc9047349baa85409", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/36ab5bc9403781912d80f9cfc9047349baa85409"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f5d4b6ab396f6d92ead4a356fe0b4dfdd15c332e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f5d4b6ab396f6d92ead4a356fe0b4dfdd15c332e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f5d4b6ab396f6d92ead4a356fe0b4dfdd15c332e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f5d4b6ab396f6d92ead4a356fe0b4dfdd15c332e/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "56bad7dbfb28ef984d23ff9f69de5db431d02a15", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56bad7dbfb28ef984d23ff9f69de5db431d02a15", "html_url": "https://github.com/Rust-GCC/gccrs/commit/56bad7dbfb28ef984d23ff9f69de5db431d02a15"}], "stats": {"total": 8, "additions": 8, "deletions": 0}, "files": [{"sha": "50f53b8596589a25e979fbc1f2f298cb05f38a93", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5d4b6ab396f6d92ead4a356fe0b4dfdd15c332e/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5d4b6ab396f6d92ead4a356fe0b4dfdd15c332e/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=f5d4b6ab396f6d92ead4a356fe0b4dfdd15c332e", "patch": "@@ -1,3 +1,9 @@\n+2018-12-11  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch13.adb (Check_Aspect_At_End_Of_Declarations,\n+\tFreeze_Entity_Checks): Process aspect Predicate in the same\n+\tfashion as aspect Dynamic_Predicate.\n+\n 2018-12-11  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc-interface/trans.c (elaborate_all_entities_for_package):"}, {"sha": "fb8dff01cf6d31ee08dad88dc9c1d371148cb12f", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5d4b6ab396f6d92ead4a356fe0b4dfdd15c332e/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5d4b6ab396f6d92ead4a356fe0b4dfdd15c332e/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=f5d4b6ab396f6d92ead4a356fe0b4dfdd15c332e", "patch": "@@ -9364,6 +9364,7 @@ package body Sem_Ch13 is\n          --  components and discriminants of the type.\n \n          elsif A_Id  = Aspect_Dynamic_Predicate\n+           or else A_Id = Aspect_Predicate\n            or else A_Id = Aspect_Priority\n          then\n             Push_Type (Ent);\n@@ -11252,6 +11253,7 @@ package body Sem_Ch13 is\n                then\n                   A_Id := Get_Aspect_Id (Ritem);\n                   if A_Id = Aspect_Dynamic_Predicate\n+                    or else A_Id = Aspect_Predicate\n                     or else A_Id = Aspect_Priority\n                   then\n                     --  Retrieve the visibility to components and discriminants"}]}