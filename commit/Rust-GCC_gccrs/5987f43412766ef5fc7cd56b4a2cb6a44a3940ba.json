{"sha": "5987f43412766ef5fc7cd56b4a2cb6a44a3940ba", "node_id": "C_kwDOANBUbNoAKDU5ODdmNDM0MTI3NjZlZjVmYzdjZDU2YjRhMmNiNmE0NGEzOTQwYmE", "commit": {"author": {"name": "Yannick Moy", "email": "moy@adacore.com", "date": "2022-05-02T15:38:41Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2022-06-02T09:06:39Z"}, "message": "[Ada] Issue errors on wrong context for ghost entities\n\nReferences to ghost entities should only occur in ghost context.  This\nwas not checked systematically on all references.\n\ngcc/ada/\n\n\t* sem_ch2.adb (Analyze_Identifier): Add checking for ghost\n\tcontext.\n\t* sem_ch5.adb (Analyze_Implicit_Label_Declaration): Treat\n\timplicit labels like other entities by setting their ghost\n\tstatus according to context.\n\t* ghost.adb (Check_Ghost_Context): Adapt checking.", "tree": {"sha": "6bd9706970f08e0b62630e7717a36cbb5fce6d20", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6bd9706970f08e0b62630e7717a36cbb5fce6d20"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5987f43412766ef5fc7cd56b4a2cb6a44a3940ba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5987f43412766ef5fc7cd56b4a2cb6a44a3940ba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5987f43412766ef5fc7cd56b4a2cb6a44a3940ba", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5987f43412766ef5fc7cd56b4a2cb6a44a3940ba/comments", "author": {"login": "yannickmoy", "id": 859440, "node_id": "MDQ6VXNlcjg1OTQ0MA==", "avatar_url": "https://avatars.githubusercontent.com/u/859440?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yannickmoy", "html_url": "https://github.com/yannickmoy", "followers_url": "https://api.github.com/users/yannickmoy/followers", "following_url": "https://api.github.com/users/yannickmoy/following{/other_user}", "gists_url": "https://api.github.com/users/yannickmoy/gists{/gist_id}", "starred_url": "https://api.github.com/users/yannickmoy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yannickmoy/subscriptions", "organizations_url": "https://api.github.com/users/yannickmoy/orgs", "repos_url": "https://api.github.com/users/yannickmoy/repos", "events_url": "https://api.github.com/users/yannickmoy/events{/privacy}", "received_events_url": "https://api.github.com/users/yannickmoy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d276374355196abe35e162795da94c112ee13b80", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d276374355196abe35e162795da94c112ee13b80", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d276374355196abe35e162795da94c112ee13b80"}], "stats": {"total": 87, "additions": 79, "deletions": 8}, "files": [{"sha": "25b9a28fa011abd0129ab80db113745a01e9bd12", "filename": "gcc/ada/ghost.adb", "status": "modified", "additions": 58, "deletions": 8, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5987f43412766ef5fc7cd56b4a2cb6a44a3940ba/gcc%2Fada%2Fghost.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5987f43412766ef5fc7cd56b4a2cb6a44a3940ba/gcc%2Fada%2Fghost.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fghost.adb?ref=5987f43412766ef5fc7cd56b4a2cb6a44a3940ba", "patch": "@@ -365,6 +365,17 @@ package body Ghost is\n                if Is_Ghost_Pragma (Prag) then\n                   return True;\n \n+               --  A pragma may not be analyzed, so that its Ghost status is\n+               --  not determined yet, but it is guaranteed to be Ghost when\n+               --  referencing a Ghost entity.\n+\n+               elsif Prag_Nam in Name_Annotate\n+                               | Name_Compile_Time_Error\n+                               | Name_Compile_Time_Warning\n+                               | Name_Unreferenced\n+               then\n+                  return True;\n+\n                --  An assertion expression pragma is Ghost when it contains a\n                --  reference to a Ghost entity (SPARK RM 6.9(10)), except for\n                --  predicate pragmas (SPARK RM 6.9(11)).\n@@ -444,14 +455,6 @@ package body Ghost is\n          if Ghost_Mode > None then\n             return True;\n \n-         --  A Ghost type may be referenced in a use_type clause\n-         --  (SPARK RM 6.9.10).\n-\n-         elsif Present (Parent (Context))\n-           and then Nkind (Parent (Context)) = N_Use_Type_Clause\n-         then\n-            return True;\n-\n          --  Routine Expand_Record_Extension creates a parent subtype without\n          --  inserting it into the tree. There is no good way of recognizing\n          --  this special case as there is no parent. Try to approximate the\n@@ -482,6 +485,46 @@ package body Ghost is\n                then\n                   return True;\n \n+               --  A Ghost type may be referenced in a use or use_type clause\n+               --  (SPARK RM 6.9(10)).\n+\n+               elsif Present (Parent (Par))\n+                 and then Nkind (Parent (Par)) in N_Use_Package_Clause\n+                                                | N_Use_Type_Clause\n+               then\n+                  return True;\n+\n+               --  The context is an attribute definition clause for a Ghost\n+               --  entity.\n+\n+               elsif Nkind (Parent (Par)) = N_Attribute_Definition_Clause\n+                 and then Par = Name (Parent (Par))\n+               then\n+                  return True;\n+\n+               --  The context is the instantiation or renaming of a Ghost\n+               --  entity.\n+\n+               elsif Nkind (Parent (Par)) in N_Generic_Instantiation\n+                                           | N_Renaming_Declaration\n+                                           | N_Generic_Renaming_Declaration\n+                   and then Par = Name (Parent (Par))\n+               then\n+                  return True;\n+\n+               --  In the context of an instantiation, accept currently Ghost\n+               --  arguments for formal subprograms, as SPARK does not provide\n+               --  a way to distinguish Ghost formal parameters from non-Ghost\n+               --  ones. Illegal use of such arguments in a non-Ghost context\n+               --  will lead to errors inside the instantiation.\n+\n+               elsif Nkind (Parent (Par)) = N_Generic_Association\n+                 and then (Nkind (Par) in N_Has_Entity\n+                            and then Present (Entity (Par))\n+                            and then Is_Subprogram (Entity (Par)))\n+               then\n+                  return True;\n+\n                elsif Is_OK_Declaration (Par) then\n                   return True;\n \n@@ -593,6 +636,13 @@ package body Ghost is\n          return;\n       end if;\n \n+      --  When assertions are enabled, compiler generates code for ghost\n+      --  entities, that is not subject to Ghost policy.\n+\n+      if not Comes_From_Source (Ghost_Ref) then\n+         return;\n+      end if;\n+\n       --  Once it has been established that the reference to the Ghost entity\n       --  is within a suitable context, ensure that the policy at the point of\n       --  declaration and at the point of use match."}, {"sha": "6b84af4cedae73383b9fb350fb83b4530935d40e", "filename": "gcc/ada/sem_ch2.adb", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5987f43412766ef5fc7cd56b4a2cb6a44a3940ba/gcc%2Fada%2Fsem_ch2.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5987f43412766ef5fc7cd56b4a2cb6a44a3940ba/gcc%2Fada%2Fsem_ch2.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch2.adb?ref=5987f43412766ef5fc7cd56b4a2cb6a44a3940ba", "patch": "@@ -26,6 +26,7 @@\n with Atree;          use Atree;\n with Einfo;          use Einfo;\n with Einfo.Utils;    use Einfo.Utils;\n+with Ghost;          use Ghost;\n with Namet;          use Namet;\n with Opt;            use Opt;\n with Restrict;       use Restrict;\n@@ -34,6 +35,7 @@ with Sem_Ch8;        use Sem_Ch8;\n with Sem_Dim;        use Sem_Dim;\n with Sinfo;          use Sinfo;\n with Sinfo.Nodes;    use Sinfo.Nodes;\n+with Sinfo.Utils;    use Sinfo.Utils;\n with Stand;          use Stand;\n with Uintp;          use Uintp;\n \n@@ -77,6 +79,18 @@ package body Sem_Ch2 is\n          Find_Direct_Name (N);\n       end if;\n \n+      --  A Ghost entity must appear in a specific context. Only do this\n+      --  checking on non-overloaded expressions, as otherwise we need to\n+      --  wait for resolution, and the checking is done in Resolve_Entity_Name.\n+\n+      if Nkind (N) in N_Expanded_Name | N_Identifier\n+        and then Present (Entity (N))\n+        and then Is_Ghost_Entity (Entity (N))\n+        and then not Is_Overloaded (N)\n+      then\n+         Check_Ghost_Context (Entity (N), N);\n+      end if;\n+\n       Analyze_Dimension (N);\n    end Analyze_Identifier;\n "}, {"sha": "6c11f64d62782e3a0473a0f1b6c2184e6a6cddce", "filename": "gcc/ada/sem_ch5.adb", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5987f43412766ef5fc7cd56b4a2cb6a44a3940ba/gcc%2Fada%2Fsem_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5987f43412766ef5fc7cd56b4a2cb6a44a3940ba/gcc%2Fada%2Fsem_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch5.adb?ref=5987f43412766ef5fc7cd56b4a2cb6a44a3940ba", "patch": "@@ -2119,6 +2119,13 @@ package body Sem_Ch5 is\n       Mutate_Ekind        (Id, E_Label);\n       Set_Etype           (Id, Standard_Void_Type);\n       Set_Enclosing_Scope (Id, Current_Scope);\n+\n+      --  A label declared within a Ghost region becomes Ghost (SPARK RM\n+      --  6.9(2)).\n+\n+      if Ghost_Mode > None then\n+         Set_Is_Ghost_Entity (Id);\n+      end if;\n    end Analyze_Implicit_Label_Declaration;\n \n    ------------------------------"}]}