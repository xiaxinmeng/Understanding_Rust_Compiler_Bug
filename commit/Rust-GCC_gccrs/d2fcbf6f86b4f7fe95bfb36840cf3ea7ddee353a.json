{"sha": "d2fcbf6f86b4f7fe95bfb36840cf3ea7ddee353a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDJmY2JmNmY4NmI0ZjdmZTk1YmZiMzY4NDBjZjNlYTdkZGVlMzUzYQ==", "commit": {"author": {"name": "DJ Delorie", "email": "dj@redhat.com", "date": "2005-07-22T18:09:37Z"}, "committer": {"name": "DJ Delorie", "email": "dj@gcc.gnu.org", "date": "2005-07-22T18:09:37Z"}, "message": "c-objc-common.c (c_cannot_inline_tree_fn): Add warning control to warning calls.\n\n* c-objc-common.c (c_cannot_inline_tree_fn): Add warning control\nto warning calls.\n* tree-inline.c (inlinable_function_p): Likewise.\n\nFrom-SVN: r102289", "tree": {"sha": "8c35f55f99ebd1c1cec33e6d264c3de14164291e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8c35f55f99ebd1c1cec33e6d264c3de14164291e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d2fcbf6f86b4f7fe95bfb36840cf3ea7ddee353a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2fcbf6f86b4f7fe95bfb36840cf3ea7ddee353a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d2fcbf6f86b4f7fe95bfb36840cf3ea7ddee353a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2fcbf6f86b4f7fe95bfb36840cf3ea7ddee353a/comments", "author": null, "committer": null, "parents": [{"sha": "d1cc97e081d63dd6c9a89014d2e2af6ac32c378e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d1cc97e081d63dd6c9a89014d2e2af6ac32c378e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d1cc97e081d63dd6c9a89014d2e2af6ac32c378e"}], "stats": {"total": 18, "additions": 12, "deletions": 6}, "files": [{"sha": "55e2f4a7adca493e63876ede88541794d1707ba4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2fcbf6f86b4f7fe95bfb36840cf3ea7ddee353a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2fcbf6f86b4f7fe95bfb36840cf3ea7ddee353a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d2fcbf6f86b4f7fe95bfb36840cf3ea7ddee353a", "patch": "@@ -1,3 +1,9 @@\n+2005-07-22  DJ Delorie  <dj@redhat.com>\n+\n+\t* c-objc-common.c (c_cannot_inline_tree_fn): Add warning control\n+\tto warning calls.\n+\t* tree-inline.c (inlinable_function_p): Likewise.\n+\n 2005-07-22  Mark Mitchell  <mark@codesourcery.com>\n \n \tPR debug/21828"}, {"sha": "8fcee7330f481c6cb246e48e660f25cf55c64e31", "filename": "gcc/c-objc-common.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2fcbf6f86b4f7fe95bfb36840cf3ea7ddee353a/gcc%2Fc-objc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2fcbf6f86b4f7fe95bfb36840cf3ea7ddee353a/gcc%2Fc-objc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-objc-common.c?ref=d2fcbf6f86b4f7fe95bfb36840cf3ea7ddee353a", "patch": "@@ -78,7 +78,7 @@ c_cannot_inline_tree_fn (tree *fnp)\n       && lookup_attribute (\"always_inline\", DECL_ATTRIBUTES (fn)) == NULL)\n     {\n       if (do_warning)\n-\twarning (0, \"function %q+F can never be inlined because it \"\n+\twarning (OPT_Winline, \"function %q+F can never be inlined because it \"\n \t\t \"is suppressed using -fno-inline\", fn);\n       goto cannot_inline;\n     }\n@@ -88,16 +88,16 @@ c_cannot_inline_tree_fn (tree *fnp)\n   if (!DECL_DECLARED_INLINE_P (fn) && !targetm.binds_local_p (fn))\n     {\n       if (do_warning)\n-\twarning (0, \"function %q+F can never be inlined because it might not \"\n-\t\t \"be bound within this unit of translation\", fn);\n+\twarning (OPT_Winline, \"function %q+F can never be inlined because it \"\n+\t\t \"might not be bound within this unit of translation\", fn);\n       goto cannot_inline;\n     }\n \n   if (!function_attribute_inlinable_p (fn))\n     {\n       if (do_warning)\n-\twarning (0, \"function %q+F can never be inlined because it uses \"\n-\t\t \"attributes conflicting with inlining\", fn);\n+\twarning (OPT_Winline, \"function %q+F can never be inlined because it \"\n+\t\t \"uses attributes conflicting with inlining\", fn);\n       goto cannot_inline;\n     }\n "}, {"sha": "a0e5a71d194db0cbc11837606e7100808f0d2dfe", "filename": "gcc/tree-inline.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2fcbf6f86b4f7fe95bfb36840cf3ea7ddee353a/gcc%2Ftree-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2fcbf6f86b4f7fe95bfb36840cf3ea7ddee353a/gcc%2Ftree-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-inline.c?ref=d2fcbf6f86b4f7fe95bfb36840cf3ea7ddee353a", "patch": "@@ -1528,7 +1528,7 @@ inlinable_function_p (tree fn)\n       if (lookup_attribute (\"always_inline\", DECL_ATTRIBUTES (fn)))\n \tsorry (inline_forbidden_reason, fn);\n       else if (do_warning)\n-\twarning (0, inline_forbidden_reason, fn);\n+\twarning (OPT_Winline, inline_forbidden_reason, fn);\n \n       inlinable = false;\n     }"}]}