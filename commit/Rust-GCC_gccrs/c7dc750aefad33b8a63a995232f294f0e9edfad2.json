{"sha": "c7dc750aefad33b8a63a995232f294f0e9edfad2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzdkYzc1MGFlZmFkMzNiOGE2M2E5OTUyMzJmMjk0ZjBlOWVkZmFkMg==", "commit": {"author": {"name": "Gary Benson", "email": "gbenson@redhat.com", "date": "2006-08-09T08:38:28Z"}, "committer": {"name": "Gary Benson", "email": "gary@gcc.gnu.org", "date": "2006-08-09T08:38:28Z"}, "message": "java-stack.h (accesscontrol_trace_fn): Declare.\n\n2006-08-09  Gary Benson  <gbenson@redhat.com>\n\n\t* include/java-stack.h (accesscontrol_trace_fn): Declare.\n\t(GetAccessControlStack): Likewise.\n\t(GetClassMethodStack): Remove.\n\t* stacktrace.cc (accesscontrol_trace_fn): New method.\n\t(GetAccessControlStack): Likewise.\n\t(GetClassMethodStack): Remove.\n\t* java/security/natVMAccessController.cc (getStack): Use\n\tGetAccessControlStack.\n\nFrom-SVN: r116032", "tree": {"sha": "5d3d1d26ab20351d70765360f80f9bc8939ddd20", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5d3d1d26ab20351d70765360f80f9bc8939ddd20"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c7dc750aefad33b8a63a995232f294f0e9edfad2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7dc750aefad33b8a63a995232f294f0e9edfad2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c7dc750aefad33b8a63a995232f294f0e9edfad2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7dc750aefad33b8a63a995232f294f0e9edfad2/comments", "author": null, "committer": null, "parents": [{"sha": "ca7872007455ca2656f14de0feab6f1b95fa4acb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca7872007455ca2656f14de0feab6f1b95fa4acb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca7872007455ca2656f14de0feab6f1b95fa4acb"}], "stats": {"total": 59, "additions": 49, "deletions": 10}, "files": [{"sha": "27061ae8b6d4db3d43797f0a18bcd63c20d429c6", "filename": "libjava/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7dc750aefad33b8a63a995232f294f0e9edfad2/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7dc750aefad33b8a63a995232f294f0e9edfad2/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=c7dc750aefad33b8a63a995232f294f0e9edfad2", "patch": "@@ -1,3 +1,14 @@\n+2006-08-09  Gary Benson  <gbenson@redhat.com>\n+\n+\t* include/java-stack.h (accesscontrol_trace_fn): Declare.\n+\t(GetAccessControlStack): Likewise.\n+\t(GetClassMethodStack): Remove.\n+\t* stacktrace.cc (accesscontrol_trace_fn): New method.\n+\t(GetAccessControlStack): Likewise.\n+\t(GetClassMethodStack): Remove.\n+\t* java/security/natVMAccessController.cc (getStack): Use\n+\tGetAccessControlStack.\n+\n 2006-08-07  Gary Benson  <gbenson@redhat.com>\n \n \tPR libgcj/28340:"}, {"sha": "29e4285fa02e7cdd0a14e807741a513734c58f25", "filename": "libjava/include/java-stack.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7dc750aefad33b8a63a995232f294f0e9edfad2/libjava%2Finclude%2Fjava-stack.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7dc750aefad33b8a63a995232f294f0e9edfad2/libjava%2Finclude%2Fjava-stack.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Finclude%2Fjava-stack.h?ref=c7dc750aefad33b8a63a995232f294f0e9edfad2", "patch": "@@ -114,6 +114,7 @@ class _Jv_StackTrace\n     \n   static _Unwind_Reason_Code calling_class_trace_fn (_Jv_UnwindState *state);\n   static _Unwind_Reason_Code non_system_trace_fn (_Jv_UnwindState *state);\n+  static _Unwind_Reason_Code accesscontrol_trace_fn (_Jv_UnwindState *state);\n \n public:\n   static _Jv_StackTrace *GetStackTrace (void);\n@@ -124,7 +125,7 @@ class _Jv_StackTrace\n   static void GetCallerInfo (jclass checkClass, jclass *, _Jv_Method **);\n   static JArray<jclass> *GetClassContext (jclass checkClass);\n   static ClassLoader *GetFirstNonSystemClassLoader (void);\n-  static JArray<jobjectArray> *GetClassMethodStack (_Jv_StackTrace *trace);\n+  static JArray<jobjectArray> *GetAccessControlStack ();\n   \n };\n "}, {"sha": "42cfc9cfe68730fd8813000e8274383018e1c6bb", "filename": "libjava/java/security/natVMAccessController.cc", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7dc750aefad33b8a63a995232f294f0e9edfad2/libjava%2Fjava%2Fsecurity%2FnatVMAccessController.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7dc750aefad33b8a63a995232f294f0e9edfad2/libjava%2Fjava%2Fsecurity%2FnatVMAccessController.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fsecurity%2FnatVMAccessController.cc?ref=c7dc750aefad33b8a63a995232f294f0e9edfad2", "patch": "@@ -19,6 +19,5 @@ details.  */\n JArray<jobjectArray> *\n java::security::VMAccessController::getStack ()\n {\n-  _Jv_StackTrace *trace = _Jv_StackTrace::GetStackTrace ();\n-  return _Jv_StackTrace::GetClassMethodStack (trace);\n+  return _Jv_StackTrace::GetAccessControlStack ();\n }"}, {"sha": "e81294ddf690587a26641fe932dba29d7f88e826", "filename": "libjava/stacktrace.cc", "status": "modified", "additions": 35, "deletions": 7, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7dc750aefad33b8a63a995232f294f0e9edfad2/libjava%2Fstacktrace.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7dc750aefad33b8a63a995232f294f0e9edfad2/libjava%2Fstacktrace.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fstacktrace.cc?ref=c7dc750aefad33b8a63a995232f294f0e9edfad2", "patch": "@@ -20,6 +20,7 @@ details.  */\n \n #include <java/lang/Class.h>\n #include <java/lang/Long.h>\n+#include <java/security/AccessController.h>\n #include <java/util/ArrayList.h>\n #include <java/util/IdentityHashMap.h>\n #include <gnu/java/lang/MainThread.h>\n@@ -535,16 +536,43 @@ _Jv_StackTrace::GetFirstNonSystemClassLoader ()\n   return NULL;\n }\n \n+_Unwind_Reason_Code\n+_Jv_StackTrace::accesscontrol_trace_fn (_Jv_UnwindState *state)\n+{\n+  _Jv_StackFrame *frame = &state->frames[state->pos];\n+  FillInFrameInfo (frame);\n+\n+  bool *stopping = (bool *) state->trace_data;\n+  if (*stopping)\n+    return _URC_NORMAL_STOP;\n+  \n+  if (frame->klass == &::java::security::AccessController::class$\n+      && frame->meth\n+      && strcmp (frame->meth->name->chars(), \"doPrivileged\") == 0)\n+    *stopping = true;\n+\n+  return _URC_NO_REASON;\n+}\n+\n JArray<jobjectArray> *\n-_Jv_StackTrace::GetClassMethodStack (_Jv_StackTrace *trace)\n+_Jv_StackTrace::GetAccessControlStack (void)\n {\n-  jint length = 0;\n+  int trace_size = 100;\n+  _Jv_StackFrame frames[trace_size];\n+  _Jv_UnwindState state (trace_size);\n+  state.frames = (_Jv_StackFrame *) &frames;\n+  state.trace_function = accesscontrol_trace_fn;\n+  bool stopping = false;\n+  state.trace_data = (void *) &stopping;\n \n   UpdateNCodeMap();\n-  for (int i = 0; i < trace->length; i++)\n+  _Unwind_Backtrace (UnwindTraceFn, &state);\n+  \n+  jint length = 0;\n+\n+  for (int i = 0; i < state.pos; i++)\n     {\n-      _Jv_StackFrame *frame = &trace->frames[i];\n-      FillInFrameInfo (frame);\n+      _Jv_StackFrame *frame = &state.frames[i];\n \n       if (frame->klass && frame->meth)\n \tlength++;\n@@ -560,9 +588,9 @@ _Jv_StackTrace::GetClassMethodStack (_Jv_StackTrace *trace)\n   jclass  *c = elements (classes);\n   jstring *m = elements (methods);\n \n-  for (int i = 0, j = 0; i < trace->length; i++)\n+  for (int i = 0, j = 0; i < state.pos; i++)\n     {\n-      _Jv_StackFrame *frame = &trace->frames[i];\n+      _Jv_StackFrame *frame = &state.frames[i];\n       if (!frame->klass || !frame->meth)\n \tcontinue;\n       c[j] = frame->klass;"}]}