{"sha": "bda243ec50619e4b80e35a8c77a9ebc44647ca38", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmRhMjQzZWM1MDYxOWU0YjgwZTM1YThjNzdhOWViYzQ0NjQ3Y2EzOA==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@unitus.it", "date": "2003-07-14T18:23:12Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2003-07-14T18:23:12Z"}, "message": "Nathan C.\n\n2003-07-14  Paolo Carlini  <pcarlini@unitus.it>\n\t    Nathan C. Myers  <ncm-nospam@cantrip.org>\n\n\tPR libstdc++/11378\n\t* include/std/std_fstream.h (xsputn): Declare only.\n\t* include/bits/fstream.tcc (xsputn): Define, optimize for the\n\talways_noconv() case: when __n is sufficiently large flush\n\tthe buffer and issue a direct write, if possible combining the\n\ttwo with writev in __basic_file<>::xsputn_2.\n\t* config/io/basic_file_stdio.h (__basic_file<>::xsputn_2):\n\tNew, declare.\n\t* config/io/basic_file_stdio.cc (__basic_file<>::xsputn_2):\n\tDefine.\n\t* acinclude.m4 (GLIBCXX_CHECK_WRITE): New macro, checking for\n\tthe availability of writev in <sys/uio.h>.\n\t* configure.in: Call here.\n\t* acconfig.h: Add undef for the corresponding symbol.\n\t* aclocal.m4: Regenerate.\n\t* configure: Regenerate.\n\t* config.h.in: Regenerate.\n\t* testsuite/27_io/basic_filebuf/setbuf/char/3.cc: Tweak.\n\n\t* include/std/std_fstream.h (sync): Constify a variable.\n\nCo-Authored-By: Nathan C. Myers <ncm-nospam@cantrip.org>\n\nFrom-SVN: r69341", "tree": {"sha": "11c82ea18a45d7f42a2a512635da67b8184d3c7a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/11c82ea18a45d7f42a2a512635da67b8184d3c7a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bda243ec50619e4b80e35a8c77a9ebc44647ca38", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bda243ec50619e4b80e35a8c77a9ebc44647ca38", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bda243ec50619e4b80e35a8c77a9ebc44647ca38", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bda243ec50619e4b80e35a8c77a9ebc44647ca38/comments", "author": null, "committer": null, "parents": [{"sha": "19948e32a8be1a439f58c2d34a7f0b03ec03b85c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/19948e32a8be1a439f58c2d34a7f0b03ec03b85c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/19948e32a8be1a439f58c2d34a7f0b03ec03b85c"}], "stats": {"total": 338, "additions": 286, "deletions": 52}, "files": [{"sha": "24bde10073a405afed116d9d44a7b489d52a28f2", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bda243ec50619e4b80e35a8c77a9ebc44647ca38/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bda243ec50619e4b80e35a8c77a9ebc44647ca38/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=bda243ec50619e4b80e35a8c77a9ebc44647ca38", "patch": "@@ -1,3 +1,27 @@\n+2003-07-14  Paolo Carlini  <pcarlini@unitus.it>\n+\t    Nathan C. Myers  <ncm-nospam@cantrip.org>\n+\n+\tPR libstdc++/11378\n+\t* include/std/std_fstream.h (xsputn): Declare only.\n+\t* include/bits/fstream.tcc (xsputn): Define, optimize for the\n+\talways_noconv() case: when __n is sufficiently large flush \n+\tthe buffer and issue a direct write, if possible combining the\n+\ttwo with writev in __basic_file<>::xsputn_2.\n+\t* config/io/basic_file_stdio.h (__basic_file<>::xsputn_2):\n+\tNew, declare.\n+\t* config/io/basic_file_stdio.cc (__basic_file<>::xsputn_2):\n+\tDefine.\n+\t* acinclude.m4 (GLIBCXX_CHECK_WRITE): New macro, checking for\n+\tthe availability of writev in <sys/uio.h>.\n+\t* configure.in: Call here.\n+\t* acconfig.h: Add undef for the corresponding symbol.\n+\t* aclocal.m4: Regenerate.\n+\t* configure: Regenerate.\n+\t* config.h.in: Regenerate.\n+\t* testsuite/27_io/basic_filebuf/setbuf/char/3.cc: Tweak.\n+\n+\t* include/std/std_fstream.h (sync): Constify a variable.\n+\n 2003-07-14  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* testsuite/27_io/ios_base/cons/assign_neg.cc: Fix line numbers."}, {"sha": "dbc1c5a2e15d6263d4351cbf4cf446736bb2d668", "filename": "libstdc++-v3/acconfig.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bda243ec50619e4b80e35a8c77a9ebc44647ca38/libstdc%2B%2B-v3%2Facconfig.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bda243ec50619e4b80e35a8c77a9ebc44647ca38/libstdc%2B%2B-v3%2Facconfig.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Facconfig.h?ref=bda243ec50619e4b80e35a8c77a9ebc44647ca38", "patch": "@@ -144,6 +144,9 @@\n // Define if S_IFREG is available in <sys/stat.h>.\n #undef HAVE_S_IFREG\n \n+// Define if writev is available in <sys/uio.h>.\n+#undef HAVE_WRITEV\n+\n // Define if LC_MESSAGES is available in <locale.h>.\n #undef HAVE_LC_MESSAGES\n "}, {"sha": "8f74811242219618c6f405a571bbc33b0026effc", "filename": "libstdc++-v3/acinclude.m4", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bda243ec50619e4b80e35a8c77a9ebc44647ca38/libstdc%2B%2B-v3%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bda243ec50619e4b80e35a8c77a9ebc44647ca38/libstdc%2B%2B-v3%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Facinclude.m4?ref=bda243ec50619e4b80e35a8c77a9ebc44647ca38", "patch": "@@ -2162,6 +2162,23 @@ AC_DEFUN(GLIBCXX_CHECK_POLL, [\n   fi\n ])\n \n+dnl\n+dnl Check whether writev is available in <sys/uio.h>.\n+dnl\n+\n+AC_DEFUN(GLIBCXX_CHECK_WRITEV, [\n+  AC_CACHE_VAL(glibcxx_cv_WRITEV, [\n+    AC_TRY_COMPILE([#include <sys/uio.h>],\n+                [struct iovec iov[2]; writev(0, iov, 0); ],\n+                [glibcxx_cv_WRITEV=yes],\n+                [glibcxx_cv_WRITEV=no])\n+  ])\n+  if test x$glibcxx_cv_WRITEV = xyes; then\n+    AC_DEFINE(HAVE_WRITEV)\n+  fi\n+])\n+\n+\n # Check whether LC_MESSAGES is available in <locale.h>.\n # Ulrich Drepper <drepper@cygnus.com>, 1995.\n #"}, {"sha": "f5677b8cb70dfc1f2292fbcd18d8754d8f7ba5d9", "filename": "libstdc++-v3/aclocal.m4", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bda243ec50619e4b80e35a8c77a9ebc44647ca38/libstdc%2B%2B-v3%2Faclocal.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bda243ec50619e4b80e35a8c77a9ebc44647ca38/libstdc%2B%2B-v3%2Faclocal.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Faclocal.m4?ref=bda243ec50619e4b80e35a8c77a9ebc44647ca38", "patch": "@@ -2174,6 +2174,23 @@ AC_DEFUN(GLIBCXX_CHECK_POLL, [\n   fi\n ])\n \n+dnl\n+dnl Check whether writev is available in <sys/uio.h>.\n+dnl\n+\n+AC_DEFUN(GLIBCXX_CHECK_WRITEV, [\n+  AC_CACHE_VAL(glibcxx_cv_WRITEV, [\n+    AC_TRY_COMPILE([#include <sys/uio.h>],\n+                [struct iovec iov[2]; writev(0, iov, 0); ],\n+                [glibcxx_cv_WRITEV=yes],\n+                [glibcxx_cv_WRITEV=no])\n+  ])\n+  if test x$glibcxx_cv_WRITEV = xyes; then\n+    AC_DEFINE(HAVE_WRITEV)\n+  fi\n+])\n+\n+\n # Check whether LC_MESSAGES is available in <locale.h>.\n # Ulrich Drepper <drepper@cygnus.com>, 1995.\n #"}, {"sha": "41d86ada3780fc2422a477fefef74d6ba72b9204", "filename": "libstdc++-v3/config.h.in", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bda243ec50619e4b80e35a8c77a9ebc44647ca38/libstdc%2B%2B-v3%2Fconfig.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bda243ec50619e4b80e35a8c77a9ebc44647ca38/libstdc%2B%2B-v3%2Fconfig.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig.h.in?ref=bda243ec50619e4b80e35a8c77a9ebc44647ca38", "patch": "@@ -122,6 +122,9 @@\n // Define if S_IFREG is available in <sys/stat.h>.\n #undef HAVE_S_IFREG\n \n+// Define if writev is available in <sys/uio.h>.\n+#undef HAVE_WRITEV\n+\n // Define if LC_MESSAGES is available in <locale.h>.\n #undef HAVE_LC_MESSAGES\n \n@@ -749,9 +752,6 @@\n /* Define if you have the <nan.h> header file.  */\n #undef HAVE_NAN_H\n \n-/* Define if you have the <stdlib.h> header file.  */\n-#undef HAVE_STDLIB_H\n-\n /* Define if you have the <sys/filio.h> header file.  */\n #undef HAVE_SYS_FILIO_H\n \n@@ -776,6 +776,9 @@\n /* Define if you have the <sys/types.h> header file.  */\n #undef HAVE_SYS_TYPES_H\n \n+/* Define if you have the <sys/uio.h> header file.  */\n+#undef HAVE_SYS_UIO_H\n+\n /* Define if you have the <unistd.h> header file.  */\n #undef HAVE_UNISTD_H\n "}, {"sha": "5a3921c46d371cb4dd9a3e2480507bdda95c7046", "filename": "libstdc++-v3/config/io/basic_file_stdio.cc", "status": "modified", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bda243ec50619e4b80e35a8c77a9ebc44647ca38/libstdc%2B%2B-v3%2Fconfig%2Fio%2Fbasic_file_stdio.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bda243ec50619e4b80e35a8c77a9ebc44647ca38/libstdc%2B%2B-v3%2Fconfig%2Fio%2Fbasic_file_stdio.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fio%2Fbasic_file_stdio.cc?ref=bda243ec50619e4b80e35a8c77a9ebc44647ca38", "patch": "@@ -50,6 +50,10 @@\n #include <poll.h>\n #endif\n \n+#ifdef _GLIBCXX_HAVE_SYS_UIO_H\n+#include <sys/uio.h>\n+#endif\n+\n #if defined(_GLIBCXX_HAVE_S_ISREG) || defined(_GLIBCXX_HAVE_S_IFREG)\n # include <sys/stat.h>\n # ifdef _GLIBCXX_HAVE_S_ISREG\n@@ -225,6 +229,40 @@ namespace std\n     return __ret;\n   }\n \n+  streamsize \n+  __basic_file<char>::xsputn_2(const char* __s1, streamsize __n1,\n+\t\t\t       const char* __s2, streamsize __n2)\n+  {\n+    streamsize __ret = 0;\n+#ifdef _GLIBCXX_HAVE_WRITEV\n+    struct iovec __iov[2];\n+    __iov[0].iov_base = const_cast<char*>(__s1);\n+    __iov[0].iov_len = __n1;\n+    __iov[1].iov_base = const_cast<char*>(__s2);\n+    __iov[1].iov_len = __n2;\n+\n+    do\n+      __ret = writev(this->fd(), __iov, 2);\n+    while (__ret == -1L && errno == EINTR);\n+#else\n+    if (__n1)\n+      do\n+\t__ret = write(this->fd(), __s1, __n1);\n+      while (__ret == -1L && errno == EINTR);\n+\n+    if (__ret == __n1)\n+      {\n+\tdo\n+\t  __ret = write(this->fd(), __s2, __n2);\n+\twhile (__ret == -1L && errno == EINTR);\n+\t\n+\tif (__ret != -1L)\n+\t  __ret += __n1;\n+      }\n+#endif\n+    return __ret;\n+  }\n+\n   streampos\n   __basic_file<char>::seekoff(streamoff __off, ios_base::seekdir __way, \n \t\t\t      ios_base::openmode /*__mode*/)"}, {"sha": "90721bb30c2fcf6f4b10f34eadeee8c2f26dad07", "filename": "libstdc++-v3/config/io/basic_file_stdio.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bda243ec50619e4b80e35a8c77a9ebc44647ca38/libstdc%2B%2B-v3%2Fconfig%2Fio%2Fbasic_file_stdio.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bda243ec50619e4b80e35a8c77a9ebc44647ca38/libstdc%2B%2B-v3%2Fconfig%2Fio%2Fbasic_file_stdio.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fio%2Fbasic_file_stdio.h?ref=bda243ec50619e4b80e35a8c77a9ebc44647ca38", "patch": "@@ -96,6 +96,10 @@ namespace std\n       streamsize \n       xsputn(const char* __s, streamsize __n);\n \n+      streamsize \n+      xsputn_2(const char* __s1, streamsize __n1,\n+\t       const char* __s2, streamsize __n2);\n+\n       streamsize \n       xsgetn(char* __s, streamsize __n);\n "}, {"sha": "2464c333f1a3cb696532b10b532da29f26e3d955", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 120, "deletions": 45, "changes": 165, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bda243ec50619e4b80e35a8c77a9ebc44647ca38/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bda243ec50619e4b80e35a8c77a9ebc44647ca38/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=bda243ec50619e4b80e35a8c77a9ebc44647ca38", "patch": "@@ -1476,7 +1476,7 @@ else\n   if { (eval echo configure:1477: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; }; then\n     for file in conftest.*; do\n       case $file in\n-      *.$ac_ext | *.c | *.o | *.obj) ;;\n+      *.c | *.o | *.obj) ;;\n       *) ac_cv_exeext=`echo $file | sed -e s/conftest//` ;;\n       esac\n     done\n@@ -22819,20 +22819,95 @@ EOF\n   fi\n \n \n+  # For xsputn_2().\n+  for ac_hdr in sys/uio.h\n+do\n+ac_safe=`echo \"$ac_hdr\" | sed 'y%./+-%__p_%'`\n+echo $ac_n \"checking for $ac_hdr\"\"... $ac_c\" 1>&6\n+echo \"configure:22828: checking for $ac_hdr\" >&5\n+if eval \"test \\\"`echo '$''{'ac_cv_header_$ac_safe'+set}'`\\\" = set\"; then\n+  echo $ac_n \"(cached) $ac_c\" 1>&6\n+else\n+  cat > conftest.$ac_ext <<EOF\n+#line 22833 \"configure\"\n+#include \"confdefs.h\"\n+#include <$ac_hdr>\n+EOF\n+ac_try=\"$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out\"\n+{ (eval echo configure:22838: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n+ac_err=`grep -v '^ *+' conftest.out | grep -v \"^conftest.${ac_ext}\\$\"`\n+if test -z \"$ac_err\"; then\n+  rm -rf conftest*\n+  eval \"ac_cv_header_$ac_safe=yes\"\n+else\n+  echo \"$ac_err\" >&5\n+  echo \"configure: failed program was:\" >&5\n+  cat conftest.$ac_ext >&5\n+  rm -rf conftest*\n+  eval \"ac_cv_header_$ac_safe=no\"\n+fi\n+rm -f conftest*\n+fi\n+if eval \"test \\\"`echo '$ac_cv_header_'$ac_safe`\\\" = yes\"; then\n+  echo \"$ac_t\"\"yes\" 1>&6\n+    ac_tr_hdr=HAVE_`echo $ac_hdr | sed 'y%abcdefghijklmnopqrstuvwxyz./-%ABCDEFGHIJKLMNOPQRSTUVWXYZ___%'`\n+  cat >> confdefs.h <<EOF\n+#define $ac_tr_hdr 1\n+EOF\n+ \n+else\n+  echo \"$ac_t\"\"no\" 1>&6\n+fi\n+done\n+\n+  \n+  if eval \"test \\\"`echo '$''{'glibcxx_cv_WRITEV'+set}'`\\\" = set\"; then\n+  echo $ac_n \"(cached) $ac_c\" 1>&6\n+else\n+  \n+    cat > conftest.$ac_ext <<EOF\n+#line 22870 \"configure\"\n+#include \"confdefs.h\"\n+#include <sys/uio.h>\n+int main() {\n+struct iovec iov[2]; writev(0, iov, 0); \n+; return 0; }\n+EOF\n+if { (eval echo configure:22877: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+  rm -rf conftest*\n+  glibcxx_cv_WRITEV=yes\n+else\n+  echo \"configure: failed program was:\" >&5\n+  cat conftest.$ac_ext >&5\n+  rm -rf conftest*\n+  glibcxx_cv_WRITEV=no\n+fi\n+rm -f conftest*\n+  \n+fi\n+\n+  if test x$glibcxx_cv_WRITEV = xyes; then\n+    cat >> confdefs.h <<\\EOF\n+#define HAVE_WRITEV 1\n+EOF\n+\n+  fi\n+\n+\n   \n   ac_safe=`echo \"locale.h\" | sed 'y%./+-%__p_%'`\n echo $ac_n \"checking for locale.h\"\"... $ac_c\" 1>&6\n-echo \"configure:22826: checking for locale.h\" >&5\n+echo \"configure:22901: checking for locale.h\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_header_$ac_safe'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 22831 \"configure\"\n+#line 22906 \"configure\"\n #include \"confdefs.h\"\n #include <locale.h>\n EOF\n ac_try=\"$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out\"\n-{ (eval echo configure:22836: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n+{ (eval echo configure:22911: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n ac_err=`grep -v '^ *+' conftest.out | grep -v \"^conftest.${ac_ext}\\$\"`\n if test -z \"$ac_err\"; then\n   rm -rf conftest*\n@@ -22850,19 +22925,19 @@ if eval \"test \\\"`echo '$ac_cv_header_'$ac_safe`\\\" = yes\"; then\n   echo \"$ac_t\"\"yes\" 1>&6\n   \n     echo $ac_n \"checking for LC_MESSAGES\"\"... $ac_c\" 1>&6\n-echo \"configure:22854: checking for LC_MESSAGES\" >&5\n+echo \"configure:22929: checking for LC_MESSAGES\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_val_LC_MESSAGES'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 22859 \"configure\"\n+#line 22934 \"configure\"\n #include \"confdefs.h\"\n #include <locale.h>\n int main() {\n return LC_MESSAGES\n ; return 0; }\n EOF\n-if { (eval echo configure:22866: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:22941: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   ac_cv_val_LC_MESSAGES=yes\n else\n@@ -22889,7 +22964,7 @@ fi\n \n \n   cat > conftest.$ac_ext <<EOF\n-#line 22893 \"configure\"\n+#line 22968 \"configure\"\n #include \"confdefs.h\"\n \n   #include <setjmp.h>\n@@ -22898,7 +22973,7 @@ int main() {\n sigjmp_buf env; while (! sigsetjmp (env, 1)) siglongjmp (env, 1);\n ; return 0; }\n EOF\n-if { (eval echo configure:22902: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:22977: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   cat >> confdefs.h <<\\EOF\n #define HAVE_SIGSETJMP 1\n@@ -22915,17 +22990,17 @@ rm -f conftest*\n do\n ac_safe=`echo \"$ac_hdr\" | sed 'y%./+-%__p_%'`\n echo $ac_n \"checking for $ac_hdr\"\"... $ac_c\" 1>&6\n-echo \"configure:22919: checking for $ac_hdr\" >&5\n+echo \"configure:22994: checking for $ac_hdr\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_header_$ac_safe'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 22924 \"configure\"\n+#line 22999 \"configure\"\n #include \"confdefs.h\"\n #include <$ac_hdr>\n EOF\n ac_try=\"$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out\"\n-{ (eval echo configure:22929: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n+{ (eval echo configure:23004: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n ac_err=`grep -v '^ *+' conftest.out | grep -v \"^conftest.${ac_ext}\\$\"`\n if test -z \"$ac_err\"; then\n   rm -rf conftest*\n@@ -22954,12 +23029,12 @@ done\n for ac_func in getpagesize\n do\n echo $ac_n \"checking for $ac_func\"\"... $ac_c\" 1>&6\n-echo \"configure:22958: checking for $ac_func\" >&5\n+echo \"configure:23033: checking for $ac_func\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_$ac_func'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 22963 \"configure\"\n+#line 23038 \"configure\"\n #include \"confdefs.h\"\n /* System header to define __stub macros and hopefully few prototypes,\n     which can conflict with char $ac_func(); below.  */\n@@ -22982,7 +23057,7 @@ $ac_func();\n \n ; return 0; }\n EOF\n-if { (eval echo configure:22986: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:23061: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_func_$ac_func=yes\"\n else\n@@ -23007,15 +23082,15 @@ fi\n done\n \n echo $ac_n \"checking for working mmap\"\"... $ac_c\" 1>&6\n-echo \"configure:23011: checking for working mmap\" >&5\n+echo \"configure:23086: checking for working mmap\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_mmap_fixed_mapped'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   if test \"$cross_compiling\" = yes; then\n   ac_cv_func_mmap_fixed_mapped=no\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 23019 \"configure\"\n+#line 23094 \"configure\"\n #include \"confdefs.h\"\n \n /* Thanks to Mike Haertel and Jim Avera for this test.\n@@ -23155,7 +23230,7 @@ main()\n }\n \n EOF\n-if { (eval echo configure:23159: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null\n+if { (eval echo configure:23234: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null\n then\n   ac_cv_func_mmap_fixed_mapped=yes\n else\n@@ -23206,18 +23281,18 @@ fi\n # Check to see if libgcc_s exists, indicating that shared libgcc is possible.\n if test $enable_symvers != no; then\n   echo $ac_n \"checking for shared libgcc\"\"... $ac_c\" 1>&6\n-echo \"configure:23210: checking for shared libgcc\" >&5\n+echo \"configure:23285: checking for shared libgcc\" >&5\n   ac_save_CFLAGS=\"$CFLAGS\"\n   CFLAGS=' -lgcc_s'\n   cat > conftest.$ac_ext <<EOF\n-#line 23214 \"configure\"\n+#line 23289 \"configure\"\n #include \"confdefs.h\"\n \n int main() {\n return 0\n ; return 0; }\n EOF\n-if { (eval echo configure:23221: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:23296: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   glibcxx_shared_libgcc=yes\n else\n@@ -23287,7 +23362,7 @@ else\n   GLIBCXX_BUILD_VERSIONED_SHLIB_FALSE=\n fi\n echo $ac_n \"checking versioning on shared library symbols\"\"... $ac_c\" 1>&6\n-echo \"configure:23291: checking versioning on shared library symbols\" >&5\n+echo \"configure:23366: checking versioning on shared library symbols\" >&5\n echo \"$ac_t\"\"$enable_symvers\" 1>&6\n \n \n@@ -23302,17 +23377,17 @@ echo \"$ac_t\"\"$enable_symvers\" 1>&6\n do\n ac_safe=`echo \"$ac_hdr\" | sed 'y%./+-%__p_%'`\n echo $ac_n \"checking for $ac_hdr\"\"... $ac_c\" 1>&6\n-echo \"configure:23306: checking for $ac_hdr\" >&5\n+echo \"configure:23381: checking for $ac_hdr\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_header_$ac_safe'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 23311 \"configure\"\n+#line 23386 \"configure\"\n #include \"confdefs.h\"\n #include <$ac_hdr>\n EOF\n ac_try=\"$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out\"\n-{ (eval echo configure:23316: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n+{ (eval echo configure:23391: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n ac_err=`grep -v '^ *+' conftest.out | grep -v \"^conftest.${ac_ext}\\$\"`\n if test -z \"$ac_err\"; then\n   rm -rf conftest*\n@@ -23345,7 +23420,7 @@ done\n     # Can't do these in a loop, else the resulting syntax is wrong.\n     \n   cat > conftest.$ac_ext <<EOF\n-#line 23349 \"configure\"\n+#line 23424 \"configure\"\n #include \"confdefs.h\"\n #include <unistd.h>\n                   #include <sys/time.h>\n@@ -23355,7 +23430,7 @@ int main() {\n  int f = RLIMIT_DATA ; \n ; return 0; }\n EOF\n-if { (eval echo configure:23359: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:23434: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   glibcxx_mresult=1\n else\n@@ -23372,7 +23447,7 @@ EOF\n \n     \n   cat > conftest.$ac_ext <<EOF\n-#line 23376 \"configure\"\n+#line 23451 \"configure\"\n #include \"confdefs.h\"\n #include <unistd.h>\n                   #include <sys/time.h>\n@@ -23382,7 +23457,7 @@ int main() {\n  int f = RLIMIT_RSS ; \n ; return 0; }\n EOF\n-if { (eval echo configure:23386: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:23461: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   glibcxx_mresult=1\n else\n@@ -23399,7 +23474,7 @@ EOF\n \n     \n   cat > conftest.$ac_ext <<EOF\n-#line 23403 \"configure\"\n+#line 23478 \"configure\"\n #include \"confdefs.h\"\n #include <unistd.h>\n                   #include <sys/time.h>\n@@ -23409,7 +23484,7 @@ int main() {\n  int f = RLIMIT_VMEM ; \n ; return 0; }\n EOF\n-if { (eval echo configure:23413: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:23488: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   glibcxx_mresult=1\n else\n@@ -23426,7 +23501,7 @@ EOF\n \n     \n   cat > conftest.$ac_ext <<EOF\n-#line 23430 \"configure\"\n+#line 23505 \"configure\"\n #include \"confdefs.h\"\n #include <unistd.h>\n                   #include <sys/time.h>\n@@ -23436,7 +23511,7 @@ int main() {\n  int f = RLIMIT_AS ; \n ; return 0; }\n EOF\n-if { (eval echo configure:23440: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:23515: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   glibcxx_mresult=1\n else\n@@ -23458,7 +23533,7 @@ EOF\n else\n   \n       cat > conftest.$ac_ext <<EOF\n-#line 23462 \"configure\"\n+#line 23537 \"configure\"\n #include \"confdefs.h\"\n #include <unistd.h>\n                   #include <sys/time.h>\n@@ -23468,7 +23543,7 @@ int main() {\n  struct rlimit r; setrlimit(0, &r);\n ; return 0; }\n EOF\n-if { (eval echo configure:23472: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:23547: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   ac_setrlimit=yes\n else\n@@ -23484,7 +23559,7 @@ fi\n   fi\n \n   echo $ac_n \"checking for testsuite memory limit support\"\"... $ac_c\" 1>&6\n-echo \"configure:23488: checking for testsuite memory limit support\" >&5\n+echo \"configure:23563: checking for testsuite memory limit support\" >&5\n   if test $setrlimit_have_headers = yes && test $ac_setrlimit = yes; then\n     ac_mem_limits=yes\n     cat >> confdefs.h <<\\EOF\n@@ -23500,7 +23575,7 @@ EOF\n     # Look for setenv, so that extended locale tests can be performed.\n     \n   echo $ac_n \"checking for setenv declaration\"\"... $ac_c\" 1>&6\n-echo \"configure:23504: checking for setenv declaration\" >&5\n+echo \"configure:23579: checking for setenv declaration\" >&5\n   if test x${glibcxx_cv_func_setenv_use+set} != xset; then\n     if eval \"test \\\"`echo '$''{'glibcxx_cv_func_setenv_use'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n@@ -23515,14 +23590,14 @@ ac_link='${CXX-g++} -o conftest${ac_exeext} $CXXFLAGS $CPPFLAGS $LDFLAGS conftes\n cross_compiling=$ac_cv_prog_cxx_cross\n \n       cat > conftest.$ac_ext <<EOF\n-#line 23519 \"configure\"\n+#line 23594 \"configure\"\n #include \"confdefs.h\"\n #include <stdlib.h>\n int main() {\n  setenv(0, 0, 0);\n ; return 0; }\n EOF\n-if { (eval echo configure:23526: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:23601: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   glibcxx_cv_func_setenv_use=yes\n else\n@@ -23548,12 +23623,12 @@ fi\n     for ac_func in setenv\n do\n echo $ac_n \"checking for $ac_func\"\"... $ac_c\" 1>&6\n-echo \"configure:23552: checking for $ac_func\" >&5\n+echo \"configure:23627: checking for $ac_func\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_$ac_func'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 23557 \"configure\"\n+#line 23632 \"configure\"\n #include \"confdefs.h\"\n /* System header to define __stub macros and hopefully few prototypes,\n     which can conflict with char $ac_func(); below.  */\n@@ -23576,7 +23651,7 @@ $ac_func();\n \n ; return 0; }\n EOF\n-if { (eval echo configure:23580: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:23655: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_func_$ac_func=yes\"\n else\n@@ -23736,7 +23811,7 @@ glibcxx_prefixdir=${prefix}\n \n # Process the option --with-gxx-include-dir=<path to include-files directory>\n echo $ac_n \"checking for --with-gxx-include-dir\"\"... $ac_c\" 1>&6\n-echo \"configure:23740: checking for --with-gxx-include-dir\" >&5\n+echo \"configure:23815: checking for --with-gxx-include-dir\" >&5\n # Check whether --with-gxx-include-dir or --without-gxx-include-dir was given.\n if test \"${with_gxx_include_dir+set}\" = set; then\n   withval=\"$with_gxx_include_dir\"\n@@ -23760,7 +23835,7 @@ echo \"$ac_t\"\"$gxx_include_dir\" 1>&6\n \n # Process the option \"--enable-version-specific-runtime-libs\"\n echo $ac_n \"checking for --enable-version-specific-runtime-libs\"\"... $ac_c\" 1>&6\n-echo \"configure:23764: checking for --enable-version-specific-runtime-libs\" >&5\n+echo \"configure:23839: checking for --enable-version-specific-runtime-libs\" >&5\n # Check whether --enable-version-specific-runtime-libs or --disable-version-specific-runtime-libs was given.\n if test \"${enable_version_specific_runtime_libs+set}\" = set; then\n   enableval=\"$enable_version_specific_runtime_libs\"\n@@ -23811,7 +23886,7 @@ if test x\"$glibcxx_toolexecdir\" = x\"no\"; then\n fi\n \n echo $ac_n \"checking for install location\"\"... $ac_c\" 1>&6\n-echo \"configure:23815: checking for install location\" >&5\n+echo \"configure:23890: checking for install location\" >&5\n echo \"$ac_t\"\"$gxx_include_dir\" 1>&6\n \n "}, {"sha": "a0d003ef86d403f3d34f15438543f6beaa407309", "filename": "libstdc++-v3/configure.in", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bda243ec50619e4b80e35a8c77a9ebc44647ca38/libstdc%2B%2B-v3%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bda243ec50619e4b80e35a8c77a9ebc44647ca38/libstdc%2B%2B-v3%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure.in?ref=bda243ec50619e4b80e35a8c77a9ebc44647ca38", "patch": "@@ -423,6 +423,10 @@ else\n   GLIBCXX_CHECK_POLL\n   GLIBCXX_CHECK_S_ISREG_OR_S_IFREG\n \n+  # For xsputn_2().\n+  AC_CHECK_HEADERS(sys/uio.h)\n+  GLIBCXX_CHECK_WRITEV\n+\n   AC_LC_MESSAGES\n \n   AC_TRY_COMPILE(["}, {"sha": "458b6ef4c44378c7377aba78c018d3997ae467aa", "filename": "libstdc++-v3/include/bits/fstream.tcc", "status": "modified", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bda243ec50619e4b80e35a8c77a9ebc44647ca38/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffstream.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bda243ec50619e4b80e35a8c77a9ebc44647ca38/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffstream.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffstream.tcc?ref=bda243ec50619e4b80e35a8c77a9ebc44647ca38", "patch": "@@ -438,6 +438,54 @@ namespace std\n       return __elen && __elen == __plen;\n     }\n \n+   template<typename _CharT, typename _Traits>\n+     streamsize\n+     basic_filebuf<_CharT, _Traits>::\n+     xsputn(const _CharT* __s, streamsize __n)\n+     { \n+       streamsize __ret = 0;\n+      \n+       // Optimization in the always_noconv() case, to be generalized in the\n+       // future: when __n is sufficiently large we write directly instead of\n+       // using the buffer.\n+       const bool __testout = this->_M_mode & ios_base::out;\n+       if (__testout && !_M_reading\n+\t   && __check_facet(_M_codecvt).always_noconv())\n+\t{\n+\t  // Measurement would reveal the best choice.\n+\t  const streamsize __chunk = 1ul << 10;\n+\t  streamsize __bufavail = this->epptr() - this->pptr();\n+\n+\t  // Don't mistake 'uncommitted' mode buffered with unbuffered.\n+\t  if (!_M_writing && this->_M_buf_size > 1)\n+\t    __bufavail = this->_M_buf_size - 1;\n+\n+\t  const streamsize __limit = std::min(__chunk, __bufavail);\n+\t  if (__n >= __limit)\n+\t    {\n+\t      const streamsize __buffill = this->pptr() - this->pbase();\n+\t      const char* __buf = reinterpret_cast<const char*>(this->pbase());\n+\t      __ret = _M_file.xsputn_2(__buf, __buffill,\n+\t\t\t\t       reinterpret_cast<const char*>(__s), __n);\n+\t      if (__ret == __buffill + __n)\n+\t\t{\n+\t\t  _M_set_buffer(0);\n+\t\t  _M_writing = true;\n+\t\t}\n+\t      if (__ret > __buffill)\n+\t\t__ret -= __buffill;\n+\t      else\n+\t\t__ret = 0;\n+\t    }\n+\t  else\n+\t    __ret = __streambuf_type::xsputn(__s, __n);\n+\t}\n+       else\n+\t __ret = __streambuf_type::xsputn(__s, __n);\n+      \n+       return __ret;\n+    }\n+\n   template<typename _CharT, typename _Traits>\n     typename basic_filebuf<_CharT, _Traits>::__streambuf_type* \n     basic_filebuf<_CharT, _Traits>::"}, {"sha": "ca4171c89ba1ae5cdf50001fb731d9363e521eae", "filename": "libstdc++-v3/include/std/std_fstream.h", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bda243ec50619e4b80e35a8c77a9ebc44647ca38/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_fstream.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bda243ec50619e4b80e35a8c77a9ebc44647ca38/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_fstream.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_fstream.h?ref=bda243ec50619e4b80e35a8c77a9ebc44647ca38", "patch": "@@ -365,7 +365,7 @@ namespace std\n \t// NB: _M_file.sync() will be called within.\n \tif (this->pbase() < this->pptr())\n \t  {\n-\t    int_type __tmp = this->overflow();\n+\t    const int_type __tmp = this->overflow();\n \t    if (traits_type::eq_int_type(__tmp, traits_type::eof()))\n \t      __ret = -1;\n \t    else\n@@ -407,8 +407,7 @@ namespace std\n \n       // [documentation is inherited]\n       virtual streamsize\n-      xsputn(const char_type* __s, streamsize __n)\n-      { return __streambuf_type::xsputn(__s, __n); }\n+      xsputn(const char_type* __s, streamsize __n);\n \n       /**\n        *  @if maint"}, {"sha": "f7a65870df4bfc66c0d17f8c5addb831d5790f63", "filename": "libstdc++-v3/testsuite/27_io/basic_filebuf/setbuf/char/3.cc", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bda243ec50619e4b80e35a8c77a9ebc44647ca38/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fsetbuf%2Fchar%2F3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bda243ec50619e4b80e35a8c77a9ebc44647ca38/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fsetbuf%2Fchar%2F3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fsetbuf%2Fchar%2F3.cc?ref=bda243ec50619e4b80e35a8c77a9ebc44647ca38", "patch": "@@ -34,7 +34,9 @@ void test02()\n   filebuf fbuf01;\n   fbuf01.open(\"tmp\", ios_base::out);\n \n-  fbuf01.pubsetbuf(buf, strlitsize);\n+  // NB: +2 otherwise sputn is optimized to a direct write,\n+  // bypassing the buffer.\n+  fbuf01.pubsetbuf(buf, strlitsize + 2);\n   fbuf01.sputn(strlit, strlitsize);\n   VERIFY( std::strncmp(strlit, buf, strlitsize) == 0 );\n }"}]}