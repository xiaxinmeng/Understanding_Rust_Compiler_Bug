{"sha": "1225d6b1134b5eb31bcb592ac46a4d479dcb62b1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTIyNWQ2YjExMzRiNWViMzFiY2I1OTJhYzQ2YTRkNDc5ZGNiNjJiMQ==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2016-07-28T08:45:29Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2016-07-28T08:45:29Z"}, "message": "Introduce no_profile_instrument_function attribute\n\n\tPR gcov-profile/68025\n\t* tree-profile.c (tree_profiling): Respect\n\tno_profile_instrument_function attribute.\n\t* doc/extend.texi: Document no_profile_instrument_function\n\tattribute.\n\tPR gcov-profile/68025\n\t* c-common.c (handle_no_profile_instrument_function_attribute):\n\tPR gcov-profile/68025\n\t* gcc.dg/no_profile_instrument_function-attr-1.c: New test.\n\nFrom-SVN: r238811", "tree": {"sha": "65d289d14b3f9bef4364fd78f61f605d0611bbf4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/65d289d14b3f9bef4364fd78f61f605d0611bbf4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1225d6b1134b5eb31bcb592ac46a4d479dcb62b1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1225d6b1134b5eb31bcb592ac46a4d479dcb62b1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1225d6b1134b5eb31bcb592ac46a4d479dcb62b1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1225d6b1134b5eb31bcb592ac46a4d479dcb62b1/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9bd6a6aebf1d2ef3c8199d2c9a263dd47054d14c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9bd6a6aebf1d2ef3c8199d2c9a263dd47054d14c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9bd6a6aebf1d2ef3c8199d2c9a263dd47054d14c"}], "stats": {"total": 71, "additions": 71, "deletions": 0}, "files": [{"sha": "7e3ac320cf0e44830fd313191560b40e079bc67b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1225d6b1134b5eb31bcb592ac46a4d479dcb62b1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1225d6b1134b5eb31bcb592ac46a4d479dcb62b1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1225d6b1134b5eb31bcb592ac46a4d479dcb62b1", "patch": "@@ -1,3 +1,11 @@\n+2016-07-28  Martin Liska  <mliska@suse.cz>\n+\n+\tPR gcov-profile/68025\n+\t* tree-profile.c (tree_profiling): Respect\n+\tno_profile_instrument_function attribute.\n+\t* doc/extend.texi: Document no_profile_instrument_function\n+\tattribute.\n+\n 2016-07-28  Martin Liska  <mliska@suse.cz>\n \n \tPR rtl-optimization/70944"}, {"sha": "10073406963852313bf71a8eb3f8c88405992873", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1225d6b1134b5eb31bcb592ac46a4d479dcb62b1/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1225d6b1134b5eb31bcb592ac46a4d479dcb62b1/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=1225d6b1134b5eb31bcb592ac46a4d479dcb62b1", "patch": "@@ -1,3 +1,8 @@\n+2016-07-28  Martin Liska  <mliska@suse.cz>\n+\n+\tPR gcov-profile/68025\n+\t* c-common.c (handle_no_profile_instrument_function_attribute):\n+\n 2016-07-27  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n \n \t* c-common.c (check_user_alignment): Use LOG2_BITS_PER_UNIT instead of"}, {"sha": "16e3965cbd00c4d50d472b17d16d6f16eb0d0ccb", "filename": "gcc/c-family/c-common.c", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1225d6b1134b5eb31bcb592ac46a4d479dcb62b1/gcc%2Fc-family%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1225d6b1134b5eb31bcb592ac46a4d479dcb62b1/gcc%2Fc-family%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-common.c?ref=1225d6b1134b5eb31bcb592ac46a4d479dcb62b1", "patch": "@@ -353,6 +353,8 @@ static tree handle_tls_model_attribute (tree *, tree, tree, int,\n \t\t\t\t\tbool *);\n static tree handle_no_instrument_function_attribute (tree *, tree,\n \t\t\t\t\t\t     tree, int, bool *);\n+static tree handle_no_profile_instrument_function_attribute (tree *, tree,\n+\t\t\t\t\t\t\t     tree, int, bool *);\n static tree handle_malloc_attribute (tree *, tree, tree, int, bool *);\n static tree handle_returns_twice_attribute (tree *, tree, tree, int, bool *);\n static tree handle_no_limit_stack_attribute (tree *, tree, tree, int,\n@@ -717,6 +719,9 @@ const struct attribute_spec c_common_attribute_table[] =\n   { \"no_instrument_function\", 0, 0, true,  false, false,\n \t\t\t      handle_no_instrument_function_attribute,\n \t\t\t      false },\n+  { \"no_profile_instrument_function\",  0, 0, true, false, false,\n+\t\t\t      handle_no_profile_instrument_function_attribute,\n+\t\t\t      false },\n   { \"malloc\",                 0, 0, true,  false, false,\n \t\t\t      handle_malloc_attribute, false },\n   { \"returns_twice\",          0, 0, true,  false, false,\n@@ -8293,6 +8298,22 @@ handle_no_instrument_function_attribute (tree *node, tree name,\n   return NULL_TREE;\n }\n \n+/* Handle a \"no_profile_instrument_function\" attribute; arguments as in\n+   struct attribute_spec.handler.  */\n+\n+static tree\n+handle_no_profile_instrument_function_attribute (tree *node, tree name, tree,\n+\t\t\t\t\t\t int, bool *no_add_attrs)\n+{\n+  if (TREE_CODE (*node) != FUNCTION_DECL)\n+    {\n+      warning (OPT_Wattributes, \"%qE attribute ignored\", name);\n+      *no_add_attrs = true;\n+    }\n+\n+  return NULL_TREE;\n+}\n+\n /* Handle a \"malloc\" attribute; arguments as in\n    struct attribute_spec.handler.  */\n "}, {"sha": "70636c1bf4fe615d07c4d0e8c5fe3a20212a0512", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1225d6b1134b5eb31bcb592ac46a4d479dcb62b1/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1225d6b1134b5eb31bcb592ac46a4d479dcb62b1/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=1225d6b1134b5eb31bcb592ac46a4d479dcb62b1", "patch": "@@ -2853,6 +2853,12 @@ If @option{-finstrument-functions} is given, profiling function calls are\n generated at entry and exit of most user-compiled functions.\n Functions with this attribute are not so instrumented.\n \n+@item no_profile_instrument_function\n+@cindex @code{no_profile_instrument_function} function attribute\n+The @code{no_profile_instrument_function} attribute on functions is used\n+to inform the compiler that it should not process any profile feedback based\n+optimization code instrumentation.\n+\n @item no_reorder\n @cindex @code{no_reorder} function attribute\n Do not reorder functions or variables marked @code{no_reorder}"}, {"sha": "6123f100dad317ff05b1d6fedb4a9c3249f6086e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1225d6b1134b5eb31bcb592ac46a4d479dcb62b1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1225d6b1134b5eb31bcb592ac46a4d479dcb62b1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1225d6b1134b5eb31bcb592ac46a4d479dcb62b1", "patch": "@@ -1,3 +1,8 @@\n+2016-07-28  Martin Liska  <mliska@suse.cz>\n+\n+\tPR gcov-profile/68025\n+\t* gcc.dg/no_profile_instrument_function-attr-1.c: New test.\n+\n 2016-07-28  Martin Liska  <mliska@suse.cz>\n \n \t* g++.dg/vect/pr70944.cc: New test."}, {"sha": "c93d1718b642feea42324a8b83539abc92a315fd", "filename": "gcc/testsuite/gcc.dg/no_profile_instrument_function-attr-1.c", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1225d6b1134b5eb31bcb592ac46a4d479dcb62b1/gcc%2Ftestsuite%2Fgcc.dg%2Fno_profile_instrument_function-attr-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1225d6b1134b5eb31bcb592ac46a4d479dcb62b1/gcc%2Ftestsuite%2Fgcc.dg%2Fno_profile_instrument_function-attr-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fno_profile_instrument_function-attr-1.c?ref=1225d6b1134b5eb31bcb592ac46a4d479dcb62b1", "patch": "@@ -0,0 +1,23 @@\n+/* { dg-options \"-O2 -fprofile-generate -fdump-tree-optimized\" } */\n+\n+__attribute__ ((no_profile_instrument_function))\n+int foo()\n+{\n+  return 0;\n+}\n+\n+__attribute__ ((no_profile_instrument_function))\n+int bar()\n+{\n+  return 1;\n+}\n+\n+int main ()\n+{\n+  return foo ();\n+}\n+\n+/* { dg-final { scan-tree-dump-times \"__gcov0\\\\.main.* = PROF_edge_counter\" 1 \"optimized\"} } */\n+/* { dg-final { scan-tree-dump-times \"__gcov_indirect_call_profiler_v2\" 1 \"optimized\" } } */\n+/* { dg-final { scan-tree-dump-times \"__gcov_time_profiler\" 1 \"optimized\" } } */\n+/* { dg-final { scan-tree-dump-times \"__gcov_init\" 1 \"optimized\" } } */"}, {"sha": "39fe15fae9bba12d5d9bbe251ef4f5a8fe20adbd", "filename": "gcc/tree-profile.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1225d6b1134b5eb31bcb592ac46a4d479dcb62b1/gcc%2Ftree-profile.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1225d6b1134b5eb31bcb592ac46a4d479dcb62b1/gcc%2Ftree-profile.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-profile.c?ref=1225d6b1134b5eb31bcb592ac46a4d479dcb62b1", "patch": "@@ -524,6 +524,9 @@ tree_profiling (void)\n       if (DECL_SOURCE_LOCATION (node->decl) == BUILTINS_LOCATION)\n \tcontinue;\n \n+      if (lookup_attribute (\"no_profile_instrument_function\",\n+\t\t\t    DECL_ATTRIBUTES (node->decl)))\n+\tcontinue;\n       /* Do not instrument extern inline functions when testing coverage.\n \t While this is not perfectly consistent (early inlined extern inlines\n \t will get acocunted), testsuite expects that.  */"}]}