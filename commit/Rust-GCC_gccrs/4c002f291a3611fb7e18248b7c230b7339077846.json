{"sha": "4c002f291a3611fb7e18248b7c230b7339077846", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGMwMDJmMjkxYTM2MTFmYjdlMTgyNDhiN2MyMzBiNzMzOTA3Nzg0Ng==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-10-10T23:18:18Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-10-10T23:18:18Z"}, "message": "(force_to_mode, case ASHIFTRT): Verify that result of making a\nLSHIFTRT remains a shift.\n\nFrom-SVN: r5715", "tree": {"sha": "b396626094d3bf712bae96c05286768a92cf6446", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b396626094d3bf712bae96c05286768a92cf6446"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4c002f291a3611fb7e18248b7c230b7339077846", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c002f291a3611fb7e18248b7c230b7339077846", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4c002f291a3611fb7e18248b7c230b7339077846", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c002f291a3611fb7e18248b7c230b7339077846/comments", "author": null, "committer": null, "parents": [{"sha": "4da73fa0bab5a9c53eae9ccf476fcd291cf696d6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4da73fa0bab5a9c53eae9ccf476fcd291cf696d6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4da73fa0bab5a9c53eae9ccf476fcd291cf696d6"}], "stats": {"total": 6, "additions": 4, "deletions": 2}, "files": [{"sha": "fa34ce00f51509a48a8436a77a1c0ee6e30d1960", "filename": "gcc/combine.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c002f291a3611fb7e18248b7c230b7339077846/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c002f291a3611fb7e18248b7c230b7339077846/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=4c002f291a3611fb7e18248b7c230b7339077846", "patch": "@@ -5892,9 +5892,11 @@ force_to_mode (x, mode, mask, reg)\n \tx = gen_binary (LSHIFTRT, GET_MODE (x), XEXP (x, 0), XEXP (x, 1));\n \n       /* If this is a sign-extension operation that just affects bits\n-\t we don't care about, remove it.  */\n+\t we don't care about, remove it.  Be sure the call above returned\n+\t something that is still a shift.  */\n \n-      if (GET_CODE (XEXP (x, 1)) == CONST_INT\n+      if ((GET_CODE (x) == LSHIFTRT || GET_CODE (x) == ASHIFTRT)\n+\t  && GET_CODE (XEXP (x, 1)) == CONST_INT\n \t  && INTVAL (XEXP (x, 1)) >= 0\n \t  && (INTVAL (XEXP (x, 1))\n \t      <= GET_MODE_BITSIZE (GET_MODE (x)) - (floor_log2 (mask) + 1))"}]}