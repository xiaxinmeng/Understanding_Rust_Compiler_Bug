{"sha": "fd164b17ac570b8fd2ade4b0479a7e110b6320b3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmQxNjRiMTdhYzU3MGI4ZmQyYWRlNGIwNDc5YTdlMTEwYjYzMjBiMw==", "commit": {"author": {"name": "Per Bothner", "email": "bothner@gcc.gnu.org", "date": "1999-05-05T11:05:57Z"}, "committer": {"name": "Per Bothner", "email": "bothner@gcc.gnu.org", "date": "1999-05-05T11:05:57Z"}, "message": "Add AWT stubs and incomplete classes.\n\nFrom-SVN: r26778", "tree": {"sha": "3edb990316aba3328ac1c48470efa027d207dceb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3edb990316aba3328ac1c48470efa027d207dceb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fd164b17ac570b8fd2ade4b0479a7e110b6320b3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd164b17ac570b8fd2ade4b0479a7e110b6320b3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fd164b17ac570b8fd2ade4b0479a7e110b6320b3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd164b17ac570b8fd2ade4b0479a7e110b6320b3/comments", "author": null, "committer": null, "parents": [{"sha": "dfac8a13330e009a0143c9823b92c27d74b18a2b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dfac8a13330e009a0143c9823b92c27d74b18a2b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dfac8a13330e009a0143c9823b92c27d74b18a2b"}], "stats": {"total": 1321, "additions": 1321, "deletions": 0}, "files": [{"sha": "45859cf8674033fcceeeceb71a303724464420ac", "filename": "libjava/java/awt/AWTEvent.java", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd164b17ac570b8fd2ade4b0479a7e110b6320b3/libjava%2Fjava%2Fawt%2FAWTEvent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd164b17ac570b8fd2ade4b0479a7e110b6320b3/libjava%2Fjava%2Fawt%2FAWTEvent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FAWTEvent.java?ref=fd164b17ac570b8fd2ade4b0479a7e110b6320b3", "patch": "@@ -0,0 +1,25 @@\n+/* Copyright (C) 1999  Cygnus Solutions\n+\n+   This file is part of libjava.\n+\n+This software is copyrighted work licensed under the terms of the\n+Libjava License.  Please consult the file \"LIBJAVA_LICENSE\" for\n+details.  */\n+\n+package java.awt;\n+\n+/* A very incomplete placeholder. */\n+\n+public abstract class AWTEvent extends java.util.EventObject\n+{\n+  protected boolean consumed;\n+  protected int id;\n+\n+  public int getID() { return id; }\n+\n+  public AWTEvent (Object source, int id)\n+  {\n+    super(source);\n+    this.id = id;\n+  }\n+}"}, {"sha": "8549a5b61f1753cbbc13bc880abc84d937515c71", "filename": "libjava/java/awt/BorderLayout.java", "status": "added", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd164b17ac570b8fd2ade4b0479a7e110b6320b3/libjava%2Fjava%2Fawt%2FBorderLayout.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd164b17ac570b8fd2ade4b0479a7e110b6320b3/libjava%2Fjava%2Fawt%2FBorderLayout.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FBorderLayout.java?ref=fd164b17ac570b8fd2ade4b0479a7e110b6320b3", "patch": "@@ -0,0 +1,46 @@\n+/* Copyright (C) 1999  Cygnus Solutions\n+\n+   This file is part of libjava.\n+\n+This software is copyrighted work licensed under the terms of the\n+Libjava License.  Please consult the file \"LIBJAVA_LICENSE\" for\n+details.  */\n+\n+package java.awt;\n+\n+/* A very incomplete placeholder. */\n+\n+public class BorderLayout implements LayoutManager2\n+{\n+  int hgap;\n+  int vgap;\n+\n+  public BorderLayout (int hgap, int vgap)\n+  {\n+    this.hgap = hgap;\n+    this.vgap = vgap;\n+  }\n+\n+  public void addLayoutComponent (String name, Component comp)\n+  { /* FIXME */ }\n+  public void layoutContainer (Container parent)\n+  { /* FIXME */ }\n+  public Dimension minimumLayoutSize (Container parent)\n+  { /* FIXME */ return null; }\n+  public Dimension preferredLayoutSize (Container parent)\n+  { /* FIXME */ return null; }\n+  public void removeLayoutComponent (Component comp)\n+  { /* FIXME */ }\n+\n+  public void addLayoutComponent (Component comp, Object constraints)\n+  { /* FIXME */ }\n+  public float getLayoutAlignmentX (Container target)\n+  { /* FIXME */ return (float) 0.0; }\n+  public float getLayoutAlignmentY (Container target)\n+  { /* FIXME */ return (float) 0.0; }\n+  public void invalidateLayout (Container target)\n+  { /* FIXME */ }\n+  public Dimension maximumLayoutSize (Container target)\n+  { /* FIXME */ return null; }\n+\n+}"}, {"sha": "c79d3b706040175d6aec83d0e579601971a289ec", "filename": "libjava/java/awt/Component.java", "status": "added", "additions": 98, "deletions": 0, "changes": 98, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd164b17ac570b8fd2ade4b0479a7e110b6320b3/libjava%2Fjava%2Fawt%2FComponent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd164b17ac570b8fd2ade4b0479a7e110b6320b3/libjava%2Fjava%2Fawt%2FComponent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FComponent.java?ref=fd164b17ac570b8fd2ade4b0479a7e110b6320b3", "patch": "@@ -0,0 +1,98 @@\n+/* Copyright (C) 1999  Cygnus Solutions\n+\n+   This file is part of libjava.\n+\n+This software is copyrighted work licensed under the terms of the\n+Libjava License.  Please consult the file \"LIBJAVA_LICENSE\" for\n+details.  */\n+\n+package java.awt;\n+import java.awt.event.*;\n+//import java.awt.peer.ComponentPeer;\n+\n+/* A very incomplete placeholder. */\n+\n+public abstract class Component implements MenuContainer\n+{\n+  Container parent;\n+  java.awt.peer.ComponentPeer peer;\n+  int x, y, width, height;\n+\n+  public Container getParent () { return parent; }\n+\n+  /** @deprecated */\n+  public java.awt.peer.ComponentPeer getPeer () { return peer; }\n+\n+  public void setVisible (boolean b)\n+  { /* FIXME */ }\n+\n+  public void setSize (Dimension d)\n+  { setSize(d.width, d.height); }\n+\n+  public void setSize (int width, int height)\n+  {\n+    this.width = width;  this.height = height;\n+    if (peer != null)\n+      peer.setBounds(x, y, width, height);\n+  }\n+\n+  public void setLocation (int x, int y)\n+  {\n+    this.x = x;  this.y = y;\n+    if (peer != null)\n+      peer.setBounds(x, y, width, height);\n+  }\n+\n+  public void setLocation (Point pt)\n+  { setLocation(pt.x, pt.y); }\n+\n+  public void setBounds (int x, int y, int w, int h)\n+  {\n+    this.x = x;  this.y = y;\n+    this.width = w;  this.height = h;\n+    if (peer != null)\n+      peer.setBounds(x, y, w, h);\n+  }\n+\n+  public void setBounds (Rectangle rect)\n+  { setBounds(rect.x, rect.y, rect.width, rect.height); }\n+\n+  public Rectangle getBounds ()\n+  {\n+    return new Rectangle(x, y, width, height);\n+  }\n+\n+  public Point getLocation ()\n+  {\n+    return new Point(x, y);\n+  }\n+\n+  public Dimension getSize ()\n+  {\n+    return new Dimension(width, height);\n+  }\n+\n+  public Dimension getMinimumSize ()\n+  {\n+    if (peer == null)\n+      return new Dimension(width, height);\n+    else\n+      return peer.getMinimumSize();\n+  }\n+\n+  public Dimension getPreferredSize ()\n+  {\n+    if (peer == null)\n+      return new Dimension(width, height);\n+    else\n+      return peer.getPreferredSize();\n+  }\n+\n+  public synchronized void addKeyListener (KeyListener listener)\n+  { /* FIXME */ }\n+\n+  public boolean isFocusTraversable ()\n+  { /* FIXME */ return false; }\n+\n+  public void addNotify () { }\n+}"}, {"sha": "dc3d19385709e8fa8d6d4e6f2659fcae462c5779", "filename": "libjava/java/awt/Container.java", "status": "added", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd164b17ac570b8fd2ade4b0479a7e110b6320b3/libjava%2Fjava%2Fawt%2FContainer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd164b17ac570b8fd2ade4b0479a7e110b6320b3/libjava%2Fjava%2Fawt%2FContainer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FContainer.java?ref=fd164b17ac570b8fd2ade4b0479a7e110b6320b3", "patch": "@@ -0,0 +1,59 @@\n+/* Copyright (C) 1999  Cygnus Solutions\n+\n+   This file is part of libjava.\n+\n+This software is copyrighted work licensed under the terms of the\n+Libjava License.  Please consult the file \"LIBJAVA_LICENSE\" for\n+details.  */\n+\n+package java.awt;\n+\n+/* A very incomplete placeholder. */\n+\n+public abstract class Container extends Component\n+{\n+  int componentCount;\n+  Component[] components;\n+\n+  public Component[] getComponents()\n+  {\n+    Component[] result = new Component[componentCount];\n+    if (componentCount > 0)\n+      System.arraycopy(components, 0, result, 0, componentCount);\n+    return result;\n+  }\n+\n+  public Component getComponent (int n)\n+  {\n+    if (n < 0 || n >= componentCount)\n+      throw new ArrayIndexOutOfBoundsException(\"no such component\");\n+    return components[n];\n+  }\n+\n+  public boolean isAncestorOf (Component comp)\n+  {\n+    for (;;)\n+      {\n+\tif (comp == null)\n+\t  return false;\n+\tif (comp == this)\n+\t  return true;\n+\tcomp = comp.getParent();\n+      }\n+  }\n+\n+  public Component add (String name, Component comp)\n+  {\n+    /* FIXME */\n+    return comp;\n+  }\n+\n+  public void addNotify ()\n+  {\n+    for (int i = componentCount;  --i >= 0; )\n+      components[i].addNotify();\n+  }\n+\n+  public void setLayout (LayoutManager layout)\n+  { /* FIXME */ }\n+}"}, {"sha": "8593f0e13550e4a31e47131e21bf25b43c34aa4e", "filename": "libjava/java/awt/Dimension.java", "status": "added", "additions": 78, "deletions": 0, "changes": 78, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd164b17ac570b8fd2ade4b0479a7e110b6320b3/libjava%2Fjava%2Fawt%2FDimension.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd164b17ac570b8fd2ade4b0479a7e110b6320b3/libjava%2Fjava%2Fawt%2FDimension.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FDimension.java?ref=fd164b17ac570b8fd2ade4b0479a7e110b6320b3", "patch": "@@ -0,0 +1,78 @@\n+/* Copyright (C) 1999  Cygnus Solutions\n+\n+   This file is part of libjava.\n+\n+This software is copyrighted work licensed under the terms of the\n+Libjava License.  Please consult the file \"LIBJAVA_LICENSE\" for\n+details.  */\n+\n+package java.awt;\n+\n+/**\n+ * @author Per Bothner <bothner@cygnus.com>\n+ * @date Fenruary 8, 1999.\n+ */\n+\n+/* Written using \"Java Class Libraries\", 2nd edition, plus online\n+ * API docs for JDK 1.2 beta from http://www.javasoft.com.\n+ * Status:  Believed complete and correct, except that neither toString\n+ * has not been compared with JDK output.\n+ */\n+\n+public class Dimension extends java.awt.geom.Dimension2D\n+{\n+  public int height;\n+  public int width;\n+\n+  public Dimension () { }\n+\n+  public Dimension (Dimension dim)\n+  {\n+    this.width = dim.width;\n+    this.height = dim.height;\n+  }\n+\n+  public Dimension (int width, int height)\n+  {\n+    this.width = width;\n+    this.height = height;\n+  }\n+\n+  public boolean equals (Object obj)\n+  {\n+    if (! (obj instanceof Dimension))\n+      return false;\n+    Dimension dim = (Dimension) obj;\n+    return height == dim.height && width == dim.width;\n+  }\n+\n+  public Dimension getSize () { return new Dimension(this); }\n+\n+  public void setSize (Dimension dim)\n+  {\n+    this.width = dim.width;\n+    this.height = dim.height;\n+  }\n+\n+  public void setSize (int width, int height)\n+  {\n+    this.width = width;\n+    this.height = height;\n+  }\n+\n+  public String toString ()\n+  {\n+    return \"Dimension[w:\"+width+\",h:\"+height+']';\n+  }\n+\n+  /* Note:  There is no Dimension.hashCode. */\n+\n+  public double getWidth() { return width; }\n+  public double getHeight() { return height; }\n+\n+  public void setSize (double width, double height)\n+  {\n+    this.width = (int) width;\n+    this.height = (int) height;\n+  }\n+}"}, {"sha": "a5991f25e3ad0fb0d5076ef7d8ce25942d833df1", "filename": "libjava/java/awt/Event.java", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd164b17ac570b8fd2ade4b0479a7e110b6320b3/libjava%2Fjava%2Fawt%2FEvent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd164b17ac570b8fd2ade4b0479a7e110b6320b3/libjava%2Fjava%2Fawt%2FEvent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FEvent.java?ref=fd164b17ac570b8fd2ade4b0479a7e110b6320b3", "patch": "@@ -0,0 +1,26 @@\n+/* Copyright (C) 1999  Cygnus Solutions\n+\n+   This file is part of libjava.\n+\n+This software is copyrighted work licensed under the terms of the\n+Libjava License.  Please consult the file \"LIBJAVA_LICENSE\" for\n+details.  */\n+\n+package java.awt;\n+\n+/* A very incomplete placeholder. */\n+\n+public class Event\n+{\n+  public Event evt;\n+  public Object arg;\n+  public int id;\n+  public Object target;\n+\n+  public Event (Object target, int id, Object arg)\n+  {\n+    this.id = id;\n+    this.target = target;\n+    this.arg = arg;\n+  }\n+}"}, {"sha": "43b3c160e62c54ce969b81179b27b1243ed5593e", "filename": "libjava/java/awt/Font.java", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd164b17ac570b8fd2ade4b0479a7e110b6320b3/libjava%2Fjava%2Fawt%2FFont.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd164b17ac570b8fd2ade4b0479a7e110b6320b3/libjava%2Fjava%2Fawt%2FFont.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FFont.java?ref=fd164b17ac570b8fd2ade4b0479a7e110b6320b3", "patch": "@@ -0,0 +1,15 @@\n+/* Copyright (C) 1999  Cygnus Solutions\n+\n+   This file is part of libjava.\n+\n+This software is copyrighted work licensed under the terms of the\n+Libjava License.  Please consult the file \"LIBJAVA_LICENSE\" for\n+details.  */\n+\n+package java.awt;\n+\n+/* A *very* incomplete placeholder. */\n+\n+public class Font\n+{\n+}"}, {"sha": "8d258f73261f54c1cedc8261507a4d29af9b4082", "filename": "libjava/java/awt/Frame.java", "status": "added", "additions": 55, "deletions": 0, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd164b17ac570b8fd2ade4b0479a7e110b6320b3/libjava%2Fjava%2Fawt%2FFrame.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd164b17ac570b8fd2ade4b0479a7e110b6320b3/libjava%2Fjava%2Fawt%2FFrame.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FFrame.java?ref=fd164b17ac570b8fd2ade4b0479a7e110b6320b3", "patch": "@@ -0,0 +1,55 @@\n+/* Copyright (C) 1999  Cygnus Solutions\n+\n+   This file is part of libjava.\n+\n+This software is copyrighted work licensed under the terms of the\n+Libjava License.  Please consult the file \"LIBJAVA_LICENSE\" for\n+details.  */\n+\n+package java.awt;\n+import java.awt.peer.FramePeer;\n+\n+/* A very incomplete placeholder. */\n+\n+public class Frame extends Window implements MenuContainer\n+{\n+  MenuBar menuBar = null;\n+  String title;\n+\n+  public Frame ()\n+  { /* FIXME */ }\n+\n+  public Frame (String title)\n+  {\n+    this();\n+    setTitle(title);\n+  }\n+\n+  public String getTitle () { return title; }\n+\n+  public void setTitle (String title)\n+  {\n+    this.title = title;\n+    if (peer != null)\n+      ((FramePeer)peer).setTitle(title);\n+  }\n+\n+  public synchronized void dispose ()\n+  { /* FIXME */ }\n+\n+  public synchronized void setMenuBar (MenuBar menuBar)\n+  { this.menuBar = menuBar; }\n+\n+  public synchronized void addNotify ()\n+  {\n+    if (peer == null)\n+      {\n+\tFramePeer fpeer = Toolkit.getDefaultToolkit().createFrame(this);\n+\t// Compiler bug requires cast ??;  FIXME?\n+\tpeer = (java.awt.peer.ComponentPeer) fpeer;\n+\tif (width + height > 0)\n+\t  peer.setBounds(x, y, width, height);\n+      }\n+    super.addNotify();\n+  }\n+}"}, {"sha": "1cd47b131ba7a838a9430da776fe40f8ac7ab0a3", "filename": "libjava/java/awt/LayoutManager.java", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd164b17ac570b8fd2ade4b0479a7e110b6320b3/libjava%2Fjava%2Fawt%2FLayoutManager.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd164b17ac570b8fd2ade4b0479a7e110b6320b3/libjava%2Fjava%2Fawt%2FLayoutManager.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FLayoutManager.java?ref=fd164b17ac570b8fd2ade4b0479a7e110b6320b3", "patch": "@@ -0,0 +1,20 @@\n+/* Copyright (C) 1999  Cygnus Solutions\n+\n+   This file is part of libjava.\n+\n+This software is copyrighted work licensed under the terms of the\n+Libjava License.  Please consult the file \"LIBJAVA_LICENSE\" for\n+details.  */\n+\n+package java.awt;\n+\n+/* Status:  Believed complete and correct. */\n+\n+public interface LayoutManager\n+{\n+  public void addLayoutComponent (String name, Component comp);\n+  public void layoutContainer (Container parent);\n+  public Dimension minimumLayoutSize (Container parent);\n+  public Dimension preferredLayoutSize (Container parent);\n+  public void removeLayoutComponent (Component comp);\n+}"}, {"sha": "6c0286c007ee4c4bff149c27a0fd1c14f29a932d", "filename": "libjava/java/awt/LayoutManager2.java", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd164b17ac570b8fd2ade4b0479a7e110b6320b3/libjava%2Fjava%2Fawt%2FLayoutManager2.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd164b17ac570b8fd2ade4b0479a7e110b6320b3/libjava%2Fjava%2Fawt%2FLayoutManager2.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FLayoutManager2.java?ref=fd164b17ac570b8fd2ade4b0479a7e110b6320b3", "patch": "@@ -0,0 +1,20 @@\n+/* Copyright (C) 1999  Cygnus Solutions\n+\n+   This file is part of libjava.\n+\n+This software is copyrighted work licensed under the terms of the\n+Libjava License.  Please consult the file \"LIBJAVA_LICENSE\" for\n+details.  */\n+\n+package java.awt;\n+\n+/* Status:  Believed complete and correct. */\n+\n+public interface LayoutManager2 extends LayoutManager\n+{\n+  public void addLayoutComponent (Component comp, Object constraints);\n+  public float getLayoutAlignmentX (Container target);\n+  public float getLayoutAlignmentY (Container target);\n+  public void invalidateLayout (Container target);\n+  public Dimension maximumLayoutSize (Container target);\n+}"}, {"sha": "ad602e77e9fd59a28fb3cbc940bc46691283394a", "filename": "libjava/java/awt/Menu.java", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd164b17ac570b8fd2ade4b0479a7e110b6320b3/libjava%2Fjava%2Fawt%2FMenu.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd164b17ac570b8fd2ade4b0479a7e110b6320b3/libjava%2Fjava%2Fawt%2FMenu.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FMenu.java?ref=fd164b17ac570b8fd2ade4b0479a7e110b6320b3", "patch": "@@ -0,0 +1,33 @@\n+/* Copyright (C) 1999  Cygnus Solutions\n+\n+   This file is part of libjava.\n+\n+This software is copyrighted work licensed under the terms of the\n+Libjava License.  Please consult the file \"LIBJAVA_LICENSE\" for\n+details.  */\n+\n+package java.awt;\n+\n+/* A very incomplete placeholder. */\n+\n+public class Menu extends MenuItem implements MenuContainer\n+{\n+  public Menu (String label)\n+  {\n+    super(label);  // ???\n+    throw new Error (\"java.awt.Menu: not implemented\");\n+  }\n+\n+  public void add (String label)\n+  { /* FIXME */ }\n+\n+  public synchronized MenuItem add (MenuItem item)\n+  {\n+    /* FIXME */\n+    return item;\n+  }\n+\n+  public Font getFont() { return null; } // FIXME\n+  //public boolean postEvent(Event evt);\n+  public void remove(MenuComponent comp) { } // FIXME\n+}"}, {"sha": "4b93e8ab5047117f67fbff76c78425c2f625c9d7", "filename": "libjava/java/awt/MenuBar.java", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd164b17ac570b8fd2ade4b0479a7e110b6320b3/libjava%2Fjava%2Fawt%2FMenuBar.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd164b17ac570b8fd2ade4b0479a7e110b6320b3/libjava%2Fjava%2Fawt%2FMenuBar.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FMenuBar.java?ref=fd164b17ac570b8fd2ade4b0479a7e110b6320b3", "patch": "@@ -0,0 +1,44 @@\n+/* Copyright (C) 1999  Cygnus Solutions\n+\n+   This file is part of libjava.\n+\n+This software is copyrighted work licensed under the terms of the\n+Libjava License.  Please consult the file \"LIBJAVA_LICENSE\" for\n+details.  */\n+\n+package java.awt;\n+\n+/* A very incomplete placeholder. */\n+\n+public class MenuBar extends MenuComponent  implements MenuContainer\n+{\n+  Menu[] menus;\n+  int count;\n+\n+  public synchronized Menu add (Menu m)\n+  {\n+    if (menus == null)\n+      menus = new Menu[1];\n+    else if (count == menus.length)\n+      {\n+\tMenu[] newMenus = new Menu[2 * count];\n+\tSystem.arraycopy(menus, 0, newMenus, 0, count);\n+      }\n+    menus[count++] = m;\n+    return m;\n+  }\n+\n+  public void remove (MenuComponent comp)\n+  {\n+    for (int i = count; --i >= 0; )\n+      {\n+\tif (menus[i] == comp)\n+\t  {\n+\t    System.arraycopy(menus, i, menus, i+1, count-i-1);\n+\t    count--;\n+\t    // FIXME:  destroy peer\n+\t    return;\n+\t  }\n+      }\n+  }\n+}"}, {"sha": "3bd92a4b2228cad404370923b6bd7323e782f20c", "filename": "libjava/java/awt/MenuComponent.java", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd164b17ac570b8fd2ade4b0479a7e110b6320b3/libjava%2Fjava%2Fawt%2FMenuComponent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd164b17ac570b8fd2ade4b0479a7e110b6320b3/libjava%2Fjava%2Fawt%2FMenuComponent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FMenuComponent.java?ref=fd164b17ac570b8fd2ade4b0479a7e110b6320b3", "patch": "@@ -0,0 +1,15 @@\n+/* Copyright (C) 1999  Cygnus Solutions\n+\n+   This file is part of libjava.\n+\n+This software is copyrighted work licensed under the terms of the\n+Libjava License.  Please consult the file \"LIBJAVA_LICENSE\" for\n+details.  */\n+\n+package java.awt;\n+\n+/* A very incomplete placeholder. */\n+\n+public abstract class MenuComponent\n+{\n+}"}, {"sha": "2d8ff9275fba2f22f219662dd3a9f066c8d800cb", "filename": "libjava/java/awt/MenuContainer.java", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd164b17ac570b8fd2ade4b0479a7e110b6320b3/libjava%2Fjava%2Fawt%2FMenuContainer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd164b17ac570b8fd2ade4b0479a7e110b6320b3/libjava%2Fjava%2Fawt%2FMenuContainer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FMenuContainer.java?ref=fd164b17ac570b8fd2ade4b0479a7e110b6320b3", "patch": "@@ -0,0 +1,27 @@\n+/* Copyright (C) 1999  Cygnus Solutions\n+\n+   This file is part of libjava.\n+\n+This software is copyrighted work licensed under the terms of the\n+Libjava License.  Please consult the file \"LIBJAVA_LICENSE\" for\n+details.  */\n+\n+package java.awt;\n+\n+/* Written using \"Java Class Libraries\", 2nd edition, plus online\n+ * API docs for JDK 1.2 beta from http://www.javasoft.com.\n+ * Status:  Believed complete and correct.\n+ */\n+\n+public  interface MenuContainer\n+{\n+  public Font getFont();\n+\n+  /**\n+   * @deprected\n+   */\n+  public boolean postEvent(Event evt);\n+\n+  public void remove(MenuComponent comp);\n+}\n+"}, {"sha": "1becbccb8ff640558aee2dc57d9b52f91aeab88a", "filename": "libjava/java/awt/MenuItem.java", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd164b17ac570b8fd2ade4b0479a7e110b6320b3/libjava%2Fjava%2Fawt%2FMenuItem.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd164b17ac570b8fd2ade4b0479a7e110b6320b3/libjava%2Fjava%2Fawt%2FMenuItem.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FMenuItem.java?ref=fd164b17ac570b8fd2ade4b0479a7e110b6320b3", "patch": "@@ -0,0 +1,25 @@\n+/* Copyright (C) 1999  Cygnus Solutions\n+\n+   This file is part of libjava.\n+\n+This software is copyrighted work licensed under the terms of the\n+Libjava License.  Please consult the file \"LIBJAVA_LICENSE\" for\n+details.  */\n+\n+package java.awt;\n+import java.awt.event.*;\n+\n+/* A very incomplete placeholder. */\n+\n+public class MenuItem extends MenuComponent\n+{\n+  public MenuItem (String label)\n+  {\n+    throw new Error(\"java.awt.MenuItem: not implemented\");\n+  }\n+\n+  public synchronized void addActionListener (ActionListener listener)\n+  {\n+    /* FIXME */\n+  }\n+}"}, {"sha": "bdeb39d513b93fd5debc852bd3817f1d294d22d1", "filename": "libjava/java/awt/Point.java", "status": "added", "additions": 65, "deletions": 0, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd164b17ac570b8fd2ade4b0479a7e110b6320b3/libjava%2Fjava%2Fawt%2FPoint.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd164b17ac570b8fd2ade4b0479a7e110b6320b3/libjava%2Fjava%2Fawt%2FPoint.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FPoint.java?ref=fd164b17ac570b8fd2ade4b0479a7e110b6320b3", "patch": "@@ -0,0 +1,65 @@\n+/* Copyright (C) 1999  Cygnus Solutions\n+\n+   This file is part of libjava.\n+\n+This software is copyrighted work licensed under the terms of the\n+Libjava License.  Please consult the file \"LIBJAVA_LICENSE\" for\n+details.  */\n+\n+package java.awt;\n+import java.awt.geom.Point2D;\n+\n+/**\n+ * @author Per Bothner <bothner@cygnus.com>\n+ * @date February 8, 1999.\n+ */\n+\n+/* Written using \"Java Class Libraries\", 2nd edition, plus online\n+ * API docs for JDK 1.2 beta from http://www.javasoft.com.\n+ * Status:  Believed complete and correct, except that neither toString\n+ * nor hashCode have been compared with JDK output.\n+ */\n+\n+public class Point extends Point2D implements java.io.Serializable\n+{\n+  public int x;\n+  public int y;\n+\n+  public Point () { }\n+\n+  public Point (Point p) { this.x = p.x;  this.y = p.y; }\n+\n+  public Point (int x, int y) { this.x = x;  this.y = y; }\n+\n+  public boolean equals (Object obj)\n+  {\n+    if (! (obj instanceof Point))\n+      return false;\n+    Point p = (Point) obj;\n+    return this.x == p.x && this.y == p.y;\n+  }\n+\n+  public int hashCode () { return x ^ y; }\n+\n+  public Point getLocation () { return new Point(this); }\n+\n+  public void move (int x, int y) { this.x = x;  this.y = y; }\n+\n+  public void setLocation (int x, int y) { this.x = x;  this.y = y; }\n+\n+  public void setLocation (Point pt) { this.x = pt.x;  this.y = pt.y; }\n+\n+  public void translate (int x, int y) { this.x += x;  this.y += y; }\n+\n+  public String toString ()\n+  {\n+    return \"Point[x:\"+x+\",y:\"+y+']';\n+  }\n+\n+  public double getX() { return x; }\n+  public double getY() { return y; }\n+\n+  public void setLocation (double x, double y)\n+  { this.x = (int) x;  this.y = (int) y; }\n+\n+}"}, {"sha": "975a41572e142989daa4dc7b2ba5067b5e16e7cf", "filename": "libjava/java/awt/Rectangle.java", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd164b17ac570b8fd2ade4b0479a7e110b6320b3/libjava%2Fjava%2Fawt%2FRectangle.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd164b17ac570b8fd2ade4b0479a7e110b6320b3/libjava%2Fjava%2Fawt%2FRectangle.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FRectangle.java?ref=fd164b17ac570b8fd2ade4b0479a7e110b6320b3", "patch": "@@ -0,0 +1,35 @@\n+/* Copyright (C) 1999  Cygnus Solutions\n+\n+   This file is part of libjava.\n+\n+This software is copyrighted work licensed under the terms of the\n+Libjava License.  Please consult the file \"LIBJAVA_LICENSE\" for\n+details.  */\n+\n+package java.awt;\n+\n+/* Status:  Quite imcomplete. */\n+\n+public class Rectangle implements Shape\n+{\n+  public int x;\n+  public int y;\n+  public int width;\n+  public int height;\n+\n+  public Rectangle () { }\n+\n+  public Rectangle (int width, int height)\n+  { this.width = width;  this.height = height; }\n+\n+  public Rectangle (int x, int y, int width, int height) \n+  {\n+    this.x = x;  this.y = y;\n+    this.width = width;  this.height = height;\n+  }\n+\n+  public Rectangle getBounds ()\n+  {\n+    return new Rectangle (x, y, width, height);\n+  }\n+}"}, {"sha": "c54ad15ee73bfba5261f298b969b49d313f9522f", "filename": "libjava/java/awt/Shape.java", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd164b17ac570b8fd2ade4b0479a7e110b6320b3/libjava%2Fjava%2Fawt%2FShape.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd164b17ac570b8fd2ade4b0479a7e110b6320b3/libjava%2Fjava%2Fawt%2FShape.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FShape.java?ref=fd164b17ac570b8fd2ade4b0479a7e110b6320b3", "patch": "@@ -0,0 +1,23 @@\n+/* Copyright (C) 1999  Cygnus Solutions\n+\n+   This file is part of libjava.\n+\n+This software is copyrighted work licensed under the terms of the\n+Libjava License.  Please consult the file \"LIBJAVA_LICENSE\" for\n+details.  */\n+\n+package java.awt;\n+\n+/**\n+ * @author Per Bothner <bothner@cygnus.com>\n+ * @date Fenruary 8, 1999.\n+ */\n+\n+/* Written using \"Java Class Libraries\", 2nd edition.\n+ * Status:  Believed complete and correct.\n+ */\n+\n+public interface Shape\n+{\n+  public Rectangle getBounds ();\n+}"}, {"sha": "7ee3f9110c51a96df5076522dd0848d4fab002ab", "filename": "libjava/java/awt/TextArea.java", "status": "added", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd164b17ac570b8fd2ade4b0479a7e110b6320b3/libjava%2Fjava%2Fawt%2FTextArea.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd164b17ac570b8fd2ade4b0479a7e110b6320b3/libjava%2Fjava%2Fawt%2FTextArea.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FTextArea.java?ref=fd164b17ac570b8fd2ade4b0479a7e110b6320b3", "patch": "@@ -0,0 +1,49 @@\n+/* Copyright (C) 1999  Cygnus Solutions\n+\n+   This file is part of libjava.\n+\n+This software is copyrighted work licensed under the terms of the\n+Libjava License.  Please consult the file \"LIBJAVA_LICENSE\" for\n+details.  */\n+\n+package java.awt;\n+\n+/* A very incomplete placeholder. */\n+\n+public class TextArea extends TextComponent\n+{\n+  public synchronized void append (String str)\n+  {\n+    replaceRange(str, length, length);\n+  }\n+\n+  public synchronized void insert (String str, int pos)\n+  {\n+    replaceRange(str, pos, pos);\n+  }\n+\n+  public synchronized void replaceRange (String str, int start, int end)\n+  {\n+    if (length == 0)\n+      setText (str);\n+    else\n+      {\n+\tint len = str.length();\n+\tint delta = len - (end - start);\n+\tint new_length = length + delta;\n+\tif (buffer.length < new_length)\n+\t  {\n+\t    int new_size = 2 * buffer.length;\n+\t    if (new_size < new_length)\n+\t      new_size = new_length;\n+\t    char[] new_buffer = new char[new_size];\n+\t    System.arraycopy(buffer, 0, new_buffer, 0, length);\n+\t    buffer = new_buffer;\n+\t  }\n+\tif (len != end)\n+\t  System.arraycopy(buffer, start, buffer, start + len, len - end);\n+\tstr.getChars(0, len, buffer, start);\n+\tlength += delta;\n+      }\n+  }\n+}"}, {"sha": "bbdd51830e66fb984c951a57c5b0bc7fe1a570dc", "filename": "libjava/java/awt/TextComponent.java", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd164b17ac570b8fd2ade4b0479a7e110b6320b3/libjava%2Fjava%2Fawt%2FTextComponent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd164b17ac570b8fd2ade4b0479a7e110b6320b3/libjava%2Fjava%2Fawt%2FTextComponent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FTextComponent.java?ref=fd164b17ac570b8fd2ade4b0479a7e110b6320b3", "patch": "@@ -0,0 +1,38 @@\n+/* Copyright (C) 1999  Cygnus Solutions\n+\n+   This file is part of libjava.\n+\n+This software is copyrighted work licensed under the terms of the\n+Libjava License.  Please consult the file \"LIBJAVA_LICENSE\" for\n+details.  */\n+\n+package java.awt;\n+import java.awt.event.*;\n+\n+/* A very incomplete placeholder. */\n+\n+public class TextComponent extends Component\n+{\n+  char[] buffer;\n+  int length;\n+  int caretPosition;\n+\n+  public synchronized String getText ()\n+  { return new String(buffer, 0, length); }\n+\n+  public synchronized void setText (String text)\n+  {\n+    length = text.length();\n+    if (buffer == null || buffer.length < length)\n+      buffer = new char[length];\n+    text.getChars(0, length, buffer, 0);\n+  }\n+\n+  public synchronized void addTextListener (TextListener listener)\n+  { /* FIXME */ }\n+\n+  public int getCaretPosition () { return caretPosition; }\n+\n+  public void setCaretPosition (int pos) { caretPosition = pos; }\n+\n+}"}, {"sha": "b6a27dd42f3780bba70ad8faf42866e46ed593b2", "filename": "libjava/java/awt/Toolkit.java", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd164b17ac570b8fd2ade4b0479a7e110b6320b3/libjava%2Fjava%2Fawt%2FToolkit.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd164b17ac570b8fd2ade4b0479a7e110b6320b3/libjava%2Fjava%2Fawt%2FToolkit.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FToolkit.java?ref=fd164b17ac570b8fd2ade4b0479a7e110b6320b3", "patch": "@@ -0,0 +1,29 @@\n+/* Copyright (C) 1999  Cygnus Solutions\n+\n+   This file is part of libjava.\n+\n+This software is copyrighted work licensed under the terms of the\n+Libjava License.  Please consult the file \"LIBJAVA_LICENSE\" for\n+details.  */\n+\n+package java.awt;\n+import java.awt.peer.*;\n+\n+/* A very incomplete placeholder. */\n+\n+public abstract class Toolkit\n+{\n+  static Toolkit defaultToolkit;\n+\n+  public static synchronized Toolkit getDefaultToolkit()\n+  {\n+    if (defaultToolkit == null)\n+      init();\n+    return defaultToolkit;\n+  }\n+\n+  protected abstract FramePeer createFrame(Frame target);\n+\n+  private static native void init();\n+  // static { init(); }\n+}"}, {"sha": "a7a4b4b713f6b59741a3384331a8833facf69707", "filename": "libjava/java/awt/Window.java", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd164b17ac570b8fd2ade4b0479a7e110b6320b3/libjava%2Fjava%2Fawt%2FWindow.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd164b17ac570b8fd2ade4b0479a7e110b6320b3/libjava%2Fjava%2Fawt%2FWindow.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FWindow.java?ref=fd164b17ac570b8fd2ade4b0479a7e110b6320b3", "patch": "@@ -0,0 +1,29 @@\n+/* Copyright (C) 1999  Cygnus Solutions\n+\n+   This file is part of libjava.\n+\n+This software is copyrighted work licensed under the terms of the\n+Libjava License.  Please consult the file \"LIBJAVA_LICENSE\" for\n+details.  */\n+\n+package java.awt;\n+import java.awt.event.WindowListener;\n+\n+/* A very incomplete placeholder. */\n+\n+public class Window extends Container\n+{\n+  public void dispose ()\n+  { /* FIXME */ }\n+\n+  public synchronized void addWindowListener (WindowListener listener)\n+  { /* FIXME */ }\n+\n+\n+  public void show ()\n+  {\n+    addNotify();\n+    // validate FIXME\n+    // validate setVisible FIXME\n+  }\n+}"}, {"sha": "3ea105b93b4bb396d36c4f986ea4788ece027298", "filename": "libjava/java/awt/event/ActionEvent.java", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd164b17ac570b8fd2ade4b0479a7e110b6320b3/libjava%2Fjava%2Fawt%2Fevent%2FActionEvent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd164b17ac570b8fd2ade4b0479a7e110b6320b3/libjava%2Fjava%2Fawt%2Fevent%2FActionEvent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FActionEvent.java?ref=fd164b17ac570b8fd2ade4b0479a7e110b6320b3", "patch": "@@ -0,0 +1,35 @@\n+/* Copyright (C) 1999  Cygnus Solutions\n+\n+   This file is part of libjava.\n+\n+This software is copyrighted work licensed under the terms of the\n+Libjava License.  Please consult the file \"LIBJAVA_LICENSE\" for\n+details.  */\n+\n+package java.awt.event;\n+import java.awt.*;\n+\n+/* A very incomplete placeholder. */\n+\n+public class ActionEvent extends AWTEvent\n+{\n+  String actionCommand;\n+  int modifiers;\n+\n+  public ActionEvent (Object source, int id, String command)\n+  {\n+    super(source, id);\n+    actionCommand = command;\n+  }\n+\n+  public ActionEvent (Object source, int id, String command, int modifiers)\n+  {\n+    super(source, id);\n+    actionCommand = command;\n+    this.modifiers = modifiers;\n+  }\n+\n+  public String getActionCommand () { return actionCommand; }\n+\n+  public int getModifiers () { return modifiers; }\n+}"}, {"sha": "5a3700a0ace89b2dc489053113e0d4cdcffc504f", "filename": "libjava/java/awt/event/ActionListener.java", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd164b17ac570b8fd2ade4b0479a7e110b6320b3/libjava%2Fjava%2Fawt%2Fevent%2FActionListener.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd164b17ac570b8fd2ade4b0479a7e110b6320b3/libjava%2Fjava%2Fawt%2Fevent%2FActionListener.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FActionListener.java?ref=fd164b17ac570b8fd2ade4b0479a7e110b6320b3", "patch": "@@ -0,0 +1,21 @@\n+/* Copyright (C) 1999  Cygnus Solutions\n+\n+   This file is part of libjava.\n+\n+This software is copyrighted work licensed under the terms of the\n+Libjava License.  Please consult the file \"LIBJAVA_LICENSE\" for\n+details.  */\n+\n+package java.awt.event;\n+\n+/**\n+ * @author Per Bothner <bothner@cygnus.com>\n+ * @date Fenruary, 1999.\n+ */\n+\n+/* Status:  Believed complete and correct. */\n+\n+public interface ActionListener extends java.util.EventListener\n+{\n+  public void actionPerformed (ActionEvent e);\n+}"}, {"sha": "c44ddf6ad9c4417d3b913a609d87db6693f37c2d", "filename": "libjava/java/awt/event/ComponentEvent.java", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd164b17ac570b8fd2ade4b0479a7e110b6320b3/libjava%2Fjava%2Fawt%2Fevent%2FComponentEvent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd164b17ac570b8fd2ade4b0479a7e110b6320b3/libjava%2Fjava%2Fawt%2Fevent%2FComponentEvent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FComponentEvent.java?ref=fd164b17ac570b8fd2ade4b0479a7e110b6320b3", "patch": "@@ -0,0 +1,20 @@\n+/* Copyright (C) 1999  Cygnus Solutions\n+\n+   This file is part of libjava.\n+\n+This software is copyrighted work licensed under the terms of the\n+Libjava License.  Please consult the file \"LIBJAVA_LICENSE\" for\n+details.  */\n+\n+package java.awt.event;\n+import java.awt.*;\n+\n+/* A very incomplete placeholder. */\n+\n+public class ComponentEvent extends AWTEvent\n+{\n+  public ComponentEvent (Object source, int id)\n+  {\n+    super(source, id);\n+  }\n+}"}, {"sha": "bc98e7edd0de4e4528f6e24a3d5aeb0e8fee1526", "filename": "libjava/java/awt/event/InputEvent.java", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd164b17ac570b8fd2ade4b0479a7e110b6320b3/libjava%2Fjava%2Fawt%2Fevent%2FInputEvent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd164b17ac570b8fd2ade4b0479a7e110b6320b3/libjava%2Fjava%2Fawt%2Fevent%2FInputEvent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FInputEvent.java?ref=fd164b17ac570b8fd2ade4b0479a7e110b6320b3", "patch": "@@ -0,0 +1,22 @@\n+/* Copyright (C) 1999  Cygnus Solutions\n+\n+   This file is part of libjava.\n+\n+This software is copyrighted work licensed under the terms of the\n+Libjava License.  Please consult the file \"LIBJAVA_LICENSE\" for\n+details.  */\n+\n+package java.awt.event;\n+\n+/* A very incomplete placeholder. */\n+\n+public class InputEvent extends ComponentEvent\n+{\n+  InputEvent (Object source, int id)  // Not public\n+  {\n+    super(source, id);\n+  }\n+\n+  public void consume ()\n+  { /* FIXME */ }\n+}"}, {"sha": "1fcb9747e4186d4c9fd3d2daa1df9dbc4e5c7ef3", "filename": "libjava/java/awt/event/KeyEvent.java", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd164b17ac570b8fd2ade4b0479a7e110b6320b3/libjava%2Fjava%2Fawt%2Fevent%2FKeyEvent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd164b17ac570b8fd2ade4b0479a7e110b6320b3/libjava%2Fjava%2Fawt%2Fevent%2FKeyEvent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FKeyEvent.java?ref=fd164b17ac570b8fd2ade4b0479a7e110b6320b3", "patch": "@@ -0,0 +1,38 @@\n+/* Copyright (C) 1999  Cygnus Solutions\n+\n+   This file is part of libjava.\n+\n+This software is copyrighted work licensed under the terms of the\n+Libjava License.  Please consult the file \"LIBJAVA_LICENSE\" for\n+details.  */\n+\n+package java.awt.event;\n+import java.awt.*;\n+\n+/* A very incomplete placeholder. */\n+\n+public class KeyEvent extends InputEvent\n+{\n+  int keyCode;\n+  char keyChar;\n+  int modifiers;\n+\n+  public KeyEvent (Component source, int id, long when,\n+\t\t  int modifiers, int keyCode, char keyChar)\n+  {\n+    super(source, id);\n+    this.keyCode = keyCode;\n+    this.keyChar = keyChar;\n+    this.modifiers = modifiers;\n+  }\n+\n+  public int getKeyCode () { return keyCode; }\n+\n+  public char getKeyChar () { return keyChar; }\n+\n+  public void setKeyCode (int keyCode) { this.keyCode = keyCode; }\n+\n+  public void setKeyChar (char keyChar) { this.keyChar = keyChar; }\n+\n+  public void setModifiers (int modifiers) { this.modifiers = modifiers; }\n+}"}, {"sha": "126cc459136c0f402abdf8f1d79b249f4e2d60e1", "filename": "libjava/java/awt/event/KeyListener.java", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd164b17ac570b8fd2ade4b0479a7e110b6320b3/libjava%2Fjava%2Fawt%2Fevent%2FKeyListener.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd164b17ac570b8fd2ade4b0479a7e110b6320b3/libjava%2Fjava%2Fawt%2Fevent%2FKeyListener.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FKeyListener.java?ref=fd164b17ac570b8fd2ade4b0479a7e110b6320b3", "patch": "@@ -0,0 +1,23 @@\n+/* Copyright (C) 1999  Cygnus Solutions\n+\n+   This file is part of libjava.\n+\n+This software is copyrighted work licensed under the terms of the\n+Libjava License.  Please consult the file \"LIBJAVA_LICENSE\" for\n+details.  */\n+\n+package java.awt.event;\n+\n+/**\n+ * @author Per Bothner <bothner@cygnus.com>\n+ * @date Fenruary, 1999.\n+ */\n+\n+/* Status:  Believed complete and correct. */\n+\n+public interface KeyListener extends java.util.EventListener\n+{\n+  public void keyPressed (KeyEvent w);\n+  public void keyReleased (KeyEvent w);\n+  public void keyTyped (KeyEvent w);\n+}"}, {"sha": "b3725f920eb7c35cf4921627c5646f271e33f9f9", "filename": "libjava/java/awt/event/TextEvent.java", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd164b17ac570b8fd2ade4b0479a7e110b6320b3/libjava%2Fjava%2Fawt%2Fevent%2FTextEvent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd164b17ac570b8fd2ade4b0479a7e110b6320b3/libjava%2Fjava%2Fawt%2Fevent%2FTextEvent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FTextEvent.java?ref=fd164b17ac570b8fd2ade4b0479a7e110b6320b3", "patch": "@@ -0,0 +1,20 @@\n+/* Copyright (C) 1999  Cygnus Solutions\n+\n+   This file is part of libjava.\n+\n+This software is copyrighted work licensed under the terms of the\n+Libjava License.  Please consult the file \"LIBJAVA_LICENSE\" for\n+details.  */\n+\n+package java.awt.event;\n+import java.awt.*;\n+\n+/* A very incomplete placeholder. */\n+\n+public class TextEvent extends AWTEvent\n+{\n+  public TextEvent (Object source, int id)\n+  {\n+    super(source, id);\n+  }\n+}"}, {"sha": "b4863fff8d97c067c1fb4b1018c76dade940580f", "filename": "libjava/java/awt/event/TextListener.java", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd164b17ac570b8fd2ade4b0479a7e110b6320b3/libjava%2Fjava%2Fawt%2Fevent%2FTextListener.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd164b17ac570b8fd2ade4b0479a7e110b6320b3/libjava%2Fjava%2Fawt%2Fevent%2FTextListener.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FTextListener.java?ref=fd164b17ac570b8fd2ade4b0479a7e110b6320b3", "patch": "@@ -0,0 +1,22 @@\n+/* Copyright (C) 1999  Cygnus Solutions\n+\n+   This file is part of libjava.\n+\n+This software is copyrighted work licensed under the terms of the\n+Libjava License.  Please consult the file \"LIBJAVA_LICENSE\" for\n+details.  */\n+\n+package java.awt.event;\n+\n+/**\n+ * @author Per Bothner <bothner@cygnus.com>\n+ * @date Fenruary, 1999.\n+ */\n+\n+/* Status:  Believed complete and correct. */\n+\n+public interface TextListener extends java.util.EventListener\n+{\n+  public void textValueChanged (TextEvent w);\n+}\n+"}, {"sha": "f2675a3cca1a5e43ac7d05c0ffbb4dba0194ea65", "filename": "libjava/java/awt/event/WindowAdapter.java", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd164b17ac570b8fd2ade4b0479a7e110b6320b3/libjava%2Fjava%2Fawt%2Fevent%2FWindowAdapter.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd164b17ac570b8fd2ade4b0479a7e110b6320b3/libjava%2Fjava%2Fawt%2Fevent%2FWindowAdapter.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FWindowAdapter.java?ref=fd164b17ac570b8fd2ade4b0479a7e110b6320b3", "patch": "@@ -0,0 +1,27 @@\n+/* Copyright (C) 1999  Cygnus Solutions\n+\n+   This file is part of libjava.\n+\n+This software is copyrighted work licensed under the terms of the\n+Libjava License.  Please consult the file \"LIBJAVA_LICENSE\" for\n+details.  */\n+\n+package java.awt.event;\n+\n+/**\n+ * @author Per Bothner <bothner@cygnus.com>\n+ * @date Fenruary, 1999.\n+ */\n+\n+/* Status:  Believed complete and correct. */\n+\n+public class WindowAdapter implements WindowListener\n+{\n+  public void windowActivated (WindowEvent w) { }\n+  public void windowClosed (WindowEvent w) { }\n+  public void windowClosing (WindowEvent w) { }\n+  public void windowDeactivated (WindowEvent w) { }\n+  public void windowDeiconified (WindowEvent w) { }\n+  public void windowIconified (WindowEvent w) { }\n+  public void windowOpened (WindowEvent w) { }\n+}"}, {"sha": "4b347dd6bc20351c3119ccc52a5db3c4369d131a", "filename": "libjava/java/awt/event/WindowEvent.java", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd164b17ac570b8fd2ade4b0479a7e110b6320b3/libjava%2Fjava%2Fawt%2Fevent%2FWindowEvent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd164b17ac570b8fd2ade4b0479a7e110b6320b3/libjava%2Fjava%2Fawt%2Fevent%2FWindowEvent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FWindowEvent.java?ref=fd164b17ac570b8fd2ade4b0479a7e110b6320b3", "patch": "@@ -0,0 +1,19 @@\n+/* Copyright (C) 1999  Cygnus Solutions\n+\n+   This file is part of libjava.\n+\n+This software is copyrighted work licensed under the terms of the\n+Libjava License.  Please consult the file \"LIBJAVA_LICENSE\" for\n+details.  */\n+\n+package java.awt.event;\n+\n+/* A very incomplete placeholder. */\n+\n+public class WindowEvent extends ComponentEvent\n+{\n+  public WindowEvent (Object source, int id)\n+  {\n+    super(source, id);\n+  }\n+}"}, {"sha": "ff8ae94336331a55f0b813788ec2a901983dee3e", "filename": "libjava/java/awt/event/WindowListener.java", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd164b17ac570b8fd2ade4b0479a7e110b6320b3/libjava%2Fjava%2Fawt%2Fevent%2FWindowListener.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd164b17ac570b8fd2ade4b0479a7e110b6320b3/libjava%2Fjava%2Fawt%2Fevent%2FWindowListener.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FWindowListener.java?ref=fd164b17ac570b8fd2ade4b0479a7e110b6320b3", "patch": "@@ -0,0 +1,27 @@\n+/* Copyright (C) 1999  Cygnus Solutions\n+\n+   This file is part of libjava.\n+\n+This software is copyrighted work licensed under the terms of the\n+Libjava License.  Please consult the file \"LIBJAVA_LICENSE\" for\n+details.  */\n+\n+package java.awt.event;\n+\n+/**\n+ * @author Per Bothner <bothner@cygnus.com>\n+ * @date Fenruary, 1999.\n+ */\n+\n+/* Status:  Believed complete and correct. */\n+\n+public interface WindowListener extends java.util.EventListener\n+{\n+  public void windowActivated (WindowEvent w);\n+  public void windowClosed (WindowEvent w);\n+  public void windowClosing (WindowEvent w);\n+  public void windowDeactivated (WindowEvent w);\n+  public void windowDeiconified (WindowEvent w);\n+  public void windowIconified (WindowEvent w);\n+  public void windowOpened (WindowEvent w);\n+}"}, {"sha": "7bdcf37c376200586e8d7bf629e6ae7dbfe8f207", "filename": "libjava/java/awt/geom/Dimension2D.java", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd164b17ac570b8fd2ade4b0479a7e110b6320b3/libjava%2Fjava%2Fawt%2Fgeom%2FDimension2D.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd164b17ac570b8fd2ade4b0479a7e110b6320b3/libjava%2Fjava%2Fawt%2Fgeom%2FDimension2D.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fgeom%2FDimension2D.java?ref=fd164b17ac570b8fd2ade4b0479a7e110b6320b3", "patch": "@@ -0,0 +1,36 @@\n+/* Copyright (C) 1999  Cygnus Solutions\n+\n+   This file is part of libjava.\n+\n+This software is copyrighted work licensed under the terms of the\n+Libjava License.  Please consult the file \"LIBJAVA_LICENSE\" for\n+details.  */\n+\n+package java.awt.geom;\n+\n+/**\n+ * @author Per Bothner <bothner@cygnus.com>\n+ * @date Fenruary, 1999.\n+ */\n+\n+/* Written using online API docs for JDK 1.2 beta from http://www.javasoft.com.\n+ * Status:  Believed complete and correct.\n+ */\n+\n+public abstract class Dimension2D implements Cloneable\n+{\n+  public abstract double getWidth();\n+  public abstract double getHeight();\n+\n+  public abstract void setSize (double width, double height);\n+\n+  public void setSize (Dimension2D dim)\n+  {\n+    setSize(dim.getWidth(), dim.getHeight());\n+  }\n+\n+  public Object clone ()\n+  {\n+    return super.clone();\n+  }\n+}"}, {"sha": "3d9e0a4a9da5180bdb885e8ac29391e4401e3cfa", "filename": "libjava/java/awt/geom/Point2D.java", "status": "added", "additions": 69, "deletions": 0, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd164b17ac570b8fd2ade4b0479a7e110b6320b3/libjava%2Fjava%2Fawt%2Fgeom%2FPoint2D.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd164b17ac570b8fd2ade4b0479a7e110b6320b3/libjava%2Fjava%2Fawt%2Fgeom%2FPoint2D.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fgeom%2FPoint2D.java?ref=fd164b17ac570b8fd2ade4b0479a7e110b6320b3", "patch": "@@ -0,0 +1,69 @@\n+/* Copyright (C) 1999  Cygnus Solutions\n+\n+   This file is part of libjava.\n+\n+This software is copyrighted work licensed under the terms of the\n+Libjava License.  Please consult the file \"LIBJAVA_LICENSE\" for\n+details.  */\n+\n+package java.awt.geom;\n+\n+/**\n+ * @author Per Bothner <bothner@cygnus.com>\n+ * @date Fenruary 8, 1999.\n+ */\n+\n+/* Written using \"Java Class Libraries\", 2nd edition, plus online\n+ * API docs for JDK 1.2 beta from http://www.javasoft.com.\n+ * Status:  Believed complete and correct, except that neither toString\n+ * nor hashCode have been compared with JDK output.\n+ */\n+\n+public abstract class Point2D implements Cloneable\n+{\n+  public abstract double getX();\n+  public abstract double getY();\n+\n+  public abstract void setLocation (double x, double y);\n+\n+  public void setLocation (Point2D pt)  { setLocation(pt.getX(), pt.getY()); }\n+\n+  static public double distanceSq (double X1, double Y1, double X2, double Y2)\n+  {\n+    X2 -= X1;\n+    Y2 -= Y1;\n+    return X2*X2 + Y2*Y2;\n+  }\n+\n+  static public double distance (double X1, double Y1, double X2, double Y2)\n+  {\n+    return Math.sqrt(distance(X1, Y1, X2, Y2));\n+  }\n+\n+  public double distanceSq (double PX, double PY)\n+  {\n+    return distanceSq (getX(), PX, getY(), PY);\n+  }\n+\n+  public double distance (double PX, double PY)\n+  {\n+    return distance (getX(), PX, getY(), PY);\n+  }\n+\n+  public double distanceSq (Point2D pt)\n+  {\n+    return distanceSq (getX(), pt.getX(), getY(), pt.getY());\n+  }\n+\n+  public double distance (Point2D pt)\n+  {\n+    return distance (getX(), pt.getX(), getY(), pt.getY());\n+  }\n+\n+  public int hashCode() { return (int) getX() ^ (int) getY(); }\n+\n+  public Object clone()\n+  {\n+    return super.clone();\n+  }\n+}"}, {"sha": "8a9c0acca244d18c8bf3f1bb3f56865f47049eec", "filename": "libjava/java/awt/natToolkit.cc", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd164b17ac570b8fd2ade4b0479a7e110b6320b3/libjava%2Fjava%2Fawt%2FnatToolkit.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd164b17ac570b8fd2ade4b0479a7e110b6320b3/libjava%2Fjava%2Fawt%2FnatToolkit.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FnatToolkit.cc?ref=fd164b17ac570b8fd2ade4b0479a7e110b6320b3", "patch": "@@ -0,0 +1,19 @@\n+#include <config.h>\n+\n+/*#define ENABLE_GTK*/\n+\n+#include <cni.h>\n+#include <java/awt/Toolkit.h>\n+#ifdef ENABLE_GTK\n+#include <java/awt/peer/GtkToolkit.h>\n+#endif\n+\n+void\n+java::awt::Toolkit::init()\n+{\n+#ifdef ENABLE_GTK\n+  defaultToolkit = new java::awt::peer::GtkToolkit();\n+#else\n+  JvFail(\"no awt (graphics) toolkit available\");\n+#endif\n+}"}, {"sha": "edf47a622a02c2bcb99a391b6b4d2155b264f643", "filename": "libjava/java/awt/peer/ComponentPeer.java", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd164b17ac570b8fd2ade4b0479a7e110b6320b3/libjava%2Fjava%2Fawt%2Fpeer%2FComponentPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd164b17ac570b8fd2ade4b0479a7e110b6320b3/libjava%2Fjava%2Fawt%2Fpeer%2FComponentPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fpeer%2FComponentPeer.java?ref=fd164b17ac570b8fd2ade4b0479a7e110b6320b3", "patch": "@@ -0,0 +1,23 @@\n+/* Copyright (C) 1999  Cygnus Solutions\n+\n+   This file is part of libjava.\n+\n+This software is copyrighted work licensed under the terms of the\n+Libjava License.  Please consult the file \"LIBJAVA_LICENSE\" for\n+details.  */\n+\n+package java.awt.peer;\n+import java.awt.*;\n+\n+/* A very incomplete placeholder. */\n+\n+public interface ComponentPeer\n+{\n+  public abstract Toolkit getToolkit ();\n+\n+  public Dimension getMinimumSize ();\n+\n+  public Dimension getPreferredSize ();\n+\n+  public void setBounds (int x, int y, int w, int h);\n+}"}, {"sha": "6c5ad1cdd6292ffc92a51831f4d3804146066cc8", "filename": "libjava/java/awt/peer/ContainerPeer.java", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd164b17ac570b8fd2ade4b0479a7e110b6320b3/libjava%2Fjava%2Fawt%2Fpeer%2FContainerPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd164b17ac570b8fd2ade4b0479a7e110b6320b3/libjava%2Fjava%2Fawt%2Fpeer%2FContainerPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fpeer%2FContainerPeer.java?ref=fd164b17ac570b8fd2ade4b0479a7e110b6320b3", "patch": "@@ -0,0 +1,15 @@\n+/* Copyright (C) 1999  Cygnus Solutions\n+\n+   This file is part of libjava.\n+\n+This software is copyrighted work licensed under the terms of the\n+Libjava License.  Please consult the file \"LIBJAVA_LICENSE\" for\n+details.  */\n+\n+package java.awt.peer;\n+\n+/* A very incomplete placeholder. */\n+\n+public interface ContainerPeer extends ComponentPeer\n+{\n+}"}, {"sha": "6db70193ab6b8001f8514fac212a00ceae3f0ad1", "filename": "libjava/java/awt/peer/FramePeer.java", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd164b17ac570b8fd2ade4b0479a7e110b6320b3/libjava%2Fjava%2Fawt%2Fpeer%2FFramePeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd164b17ac570b8fd2ade4b0479a7e110b6320b3/libjava%2Fjava%2Fawt%2Fpeer%2FFramePeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fpeer%2FFramePeer.java?ref=fd164b17ac570b8fd2ade4b0479a7e110b6320b3", "patch": "@@ -0,0 +1,16 @@\n+/* Copyright (C) 1999  Cygnus Solutions\n+\n+   This file is part of libjava.\n+\n+This software is copyrighted work licensed under the terms of the\n+Libjava License.  Please consult the file \"LIBJAVA_LICENSE\" for\n+details.  */\n+\n+package java.awt.peer;\n+\n+/* A very incomplete placeholder. */\n+\n+public interface FramePeer extends WindowPeer\n+{\n+  void setTitle(String title);\n+}"}, {"sha": "9d76f56016c137034cae2403f1caf42b725e031a", "filename": "libjava/java/awt/peer/WindowPeer.java", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd164b17ac570b8fd2ade4b0479a7e110b6320b3/libjava%2Fjava%2Fawt%2Fpeer%2FWindowPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd164b17ac570b8fd2ade4b0479a7e110b6320b3/libjava%2Fjava%2Fawt%2Fpeer%2FWindowPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fpeer%2FWindowPeer.java?ref=fd164b17ac570b8fd2ade4b0479a7e110b6320b3", "patch": "@@ -0,0 +1,15 @@\n+/* Copyright (C) 1999  Cygnus Solutions\n+\n+   This file is part of libjava.\n+\n+This software is copyrighted work licensed under the terms of the\n+Libjava License.  Please consult the file \"LIBJAVA_LICENSE\" for\n+details.  */\n+\n+package java.awt.peer;\n+\n+/* A very incomplete placeholder. */\n+\n+public interface WindowPeer extends ContainerPeer\n+{\n+}"}]}