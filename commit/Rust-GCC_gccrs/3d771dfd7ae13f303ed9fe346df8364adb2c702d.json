{"sha": "3d771dfd7ae13f303ed9fe346df8364adb2c702d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2Q3NzFkZmQ3YWUxM2YzMDNlZDlmZTM0NmRmODM2NGFkYjJjNzAyZA==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1994-10-07T19:45:00Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1994-10-07T19:45:00Z"}, "message": "Do not allow SUBREGs as either base or index register.\n\nFrom-SVN: r8237", "tree": {"sha": "f486b95c3ac94e9daf7240c13b66613c2d0f79bc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f486b95c3ac94e9daf7240c13b66613c2d0f79bc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3d771dfd7ae13f303ed9fe346df8364adb2c702d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d771dfd7ae13f303ed9fe346df8364adb2c702d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3d771dfd7ae13f303ed9fe346df8364adb2c702d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d771dfd7ae13f303ed9fe346df8364adb2c702d/comments", "author": null, "committer": null, "parents": [{"sha": "45524ce90e86676a976b32afe3e612b06f692bdd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45524ce90e86676a976b32afe3e612b06f692bdd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/45524ce90e86676a976b32afe3e612b06f692bdd"}], "stats": {"total": 34, "additions": 14, "deletions": 20}, "files": [{"sha": "830f3dd975f863fb2653d3a6493e572d61434599", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 14, "deletions": 20, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d771dfd7ae13f303ed9fe346df8364adb2c702d/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d771dfd7ae13f303ed9fe346df8364adb2c702d/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=3d771dfd7ae13f303ed9fe346df8364adb2c702d", "patch": "@@ -1424,21 +1424,18 @@ legitimate_address_p (mode, addr, strict)\n     }\n \n   /* Validate base register */\n+  /* Don't allow SUBREG's here, it can lead to spill failures when the base\n+     is one word out of a two word structure, which is represented internally\n+     as a DImode int.  */\n   if (base)\n     {\n-      if (GET_CODE (base) == SUBREG)\n+      if (GET_CODE (base) != REG)\n \t{\n-\t  if (GET_CODE (SUBREG_REG (base)) != REG || SUBREG_WORD (base) != 0)\n-\t    {\n-\t      ADDR_INVALID (\"Base SUBREG is not of a REG.\\n\", base);\n-\t      return FALSE;\n-\t    }\n-\n-\t  base = SUBREG_REG (base);\n+\t  ADDR_INVALID (\"Base is not a register.\\n\", base);\n+\t  return FALSE;\n \t}\n \n-      if (GET_CODE (base) != REG\n-\t  || ( strict && !REG_OK_FOR_BASE_STRICT_P (base))\n+      if ((strict && !REG_OK_FOR_BASE_STRICT_P (base))\n \t  || (!strict && !REG_OK_FOR_BASE_NONSTRICT_P (base)))\n \t{\n \t  ADDR_INVALID (\"Base is not valid.\\n\", base);\n@@ -1447,21 +1444,18 @@ legitimate_address_p (mode, addr, strict)\n     }\n \n   /* Validate index register */\n+  /* Don't allow SUBREG's here, it can lead to spill failures when the index\n+     is one word out of a two word structure, which is represented internally\n+     as a DImode int.  */\n   if (indx)\n     {\n-      if (GET_CODE (indx) == SUBREG)\n+      if (GET_CODE (indx) != REG)\n \t{\n-\t  if (GET_CODE (SUBREG_REG (indx)) != REG || SUBREG_WORD (indx) != 0)\n-\t    {\n-\t      ADDR_INVALID (\"Index SUBREG is not of a REG.\", indx);\n-\t      return FALSE;\n-\t    }\n-\n-\t  indx = SUBREG_REG (indx);\n+\t  ADDR_INVALID (\"Index is not a register.\\n\", indx);\n+\t  return FALSE;\n \t}\n \n-      if (GET_CODE (indx) != REG\n-\t  || ( strict && !REG_OK_FOR_INDEX_STRICT_P (indx))\n+      if ((strict && !REG_OK_FOR_INDEX_STRICT_P (indx))\n \t  || (!strict && !REG_OK_FOR_INDEX_NONSTRICT_P (indx)))\n \t{\n \t  ADDR_INVALID (\"Index is not valid.\\n\", indx);"}]}