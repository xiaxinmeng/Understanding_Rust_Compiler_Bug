{"sha": "226a2e08e50f39f910b847f04fb16ab2cac6d5e1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjI2YTJlMDhlNTBmMzlmOTEwYjg0N2YwNGZiMTZhYjJjYWM2ZDVlMQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2007-01-28T18:40:42Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2007-01-28T18:40:42Z"}, "message": "locale_facets.tcc (num_get<>::do_get(iter_type, iter_type, ios_base&, ios_base::iostate&, bool&), [...]): -Wconversion and -Woverflow fixes.\n\n2007-01-28  Paolo Carlini  <pcarlini@suse.de>\n\n\t* include/bits/locale_facets.tcc (num_get<>::do_get(iter_type,\n\titer_type, ios_base&, ios_base::iostate&, bool&),\n\tnum_put<>::_M_insert_int(_OutIter, ios_base&, _CharT, _ValueT)):\n\t-Wconversion and -Woverflow fixes.\n\t* include/bits/istream.tcc (operator>>(int&), operator>>(short&)):\n\tLikewise.\n\t* include/std/valarray (valarray<>::shift, cshift): Likewise.\n\nFrom-SVN: r121264", "tree": {"sha": "df114705c63752201601d1f2f2f22989ed2ffe17", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/df114705c63752201601d1f2f2f22989ed2ffe17"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/226a2e08e50f39f910b847f04fb16ab2cac6d5e1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/226a2e08e50f39f910b847f04fb16ab2cac6d5e1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/226a2e08e50f39f910b847f04fb16ab2cac6d5e1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/226a2e08e50f39f910b847f04fb16ab2cac6d5e1/comments", "author": null, "committer": null, "parents": [{"sha": "5cf10afb0b7887fdd9e0c187be8a39fb65aa2f38", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5cf10afb0b7887fdd9e0c187be8a39fb65aa2f38", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5cf10afb0b7887fdd9e0c187be8a39fb65aa2f38"}], "stats": {"total": 39, "additions": 26, "deletions": 13}, "files": [{"sha": "59e187127813992ecd38e19c6c97af2b219d66e8", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/226a2e08e50f39f910b847f04fb16ab2cac6d5e1/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/226a2e08e50f39f910b847f04fb16ab2cac6d5e1/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=226a2e08e50f39f910b847f04fb16ab2cac6d5e1", "patch": "@@ -1,3 +1,13 @@\n+2007-01-28  Paolo Carlini  <pcarlini@suse.de>\n+\n+\t* include/bits/locale_facets.tcc (num_get<>::do_get(iter_type,\n+\titer_type, ios_base&, ios_base::iostate&, bool&),\n+\tnum_put<>::_M_insert_int(_OutIter, ios_base&, _CharT, _ValueT)):\n+\t-Wconversion and -Woverflow fixes.\n+\t* include/bits/istream.tcc (operator>>(int&), operator>>(short&)):\n+\tLikewise.\n+\t* include/std/valarray (valarray<>::shift, cshift): Likewise.\n+\n 2007-01-26  Paolo Carlini  <pcarlini@suse.de>\n \n \tPR libstdc++/30586"}, {"sha": "c6a884650ddd84c49491862ac977e51869f364c7", "filename": "libstdc++-v3/include/bits/istream.tcc", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/226a2e08e50f39f910b847f04fb16ab2cac6d5e1/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fistream.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/226a2e08e50f39f910b847f04fb16ab2cac6d5e1/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fistream.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fistream.tcc?ref=226a2e08e50f39f910b847f04fb16ab2cac6d5e1", "patch": "@@ -1,6 +1,7 @@\n // istream classes -*- C++ -*-\n \n-// Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006\n+// Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005,\n+// 2006, 2007\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -121,7 +122,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n \t{\n \t  if (numeric_limits<short>::min() <= __l\n \t      && __l <= numeric_limits<short>::max())\n-\t    __n = __l;\n+\t    __n = short(__l);\n \t  else\n \t    this->setstate(ios_base::failbit);\n \t}\n@@ -141,7 +142,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n \t{\n \t  if (numeric_limits<int>::min() <= __l\n \t      && __l <= numeric_limits<int>::max())\n-\t    __n = __l;\n+\t    __n = int(__l);\n \t  else\n \t    this->setstate(ios_base::failbit);\n \t}"}, {"sha": "80c0cc2060233d5d2244fd26ec4f7c85f8e02dc3", "filename": "libstdc++-v3/include/bits/locale_facets.tcc", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/226a2e08e50f39f910b847f04fb16ab2cac6d5e1/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/226a2e08e50f39f910b847f04fb16ab2cac6d5e1/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc?ref=226a2e08e50f39f910b847f04fb16ab2cac6d5e1", "patch": "@@ -725,7 +725,7 @@ _GLIBCXX_BEGIN_LDBL_NAMESPACE\n \t  long __l = -1;\n           __beg = _M_extract_int(__beg, __end, __io, __err, __l);\n \t  if (__l == 0 || __l == 1)\n-\t    __v = __l;\n+\t    __v = bool(__l);\n \t  else\n             __err |= ios_base::failbit;\n         }\n@@ -764,9 +764,9 @@ _GLIBCXX_BEGIN_LDBL_NAMESPACE\n \t\t__testeof = true;\n             }\n \t  if (__testf && __n == __lc->_M_falsename_size)\n-\t    __v = 0;\n+\t    __v = false;\n \t  else if (__testt && __n == __lc->_M_truename_size)\n-\t    __v = 1;\n+\t    __v = true;\n \t  else\n \t    __err |= ios_base::failbit;\n \n@@ -994,7 +994,9 @@ _GLIBCXX_BEGIN_LDBL_NAMESPACE\n \tconst ios_base::fmtflags __basefield = __flags & ios_base::basefield;\n \tconst bool __dec = (__basefield != ios_base::oct\n \t\t\t    && __basefield != ios_base::hex);\n-\tconst __unsigned_type __u = (__v > 0 || !__dec) ? __v : -__v;\n+\tconst __unsigned_type __u = ((__v > 0 || !__dec)\n+\t\t\t\t     ? __unsigned_type(__v)\n+\t\t\t\t     : -__unsigned_type(__v));\n  \tint __len = __int_to_char(__cs + __ilen, __u, __lit, __flags, __dec);\n \t__cs += __ilen - __len;\n "}, {"sha": "50528bfa7fd2a1641b58d9b73e2edc7cd0127b61", "filename": "libstdc++-v3/include/std/valarray", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/226a2e08e50f39f910b847f04fb16ab2cac6d5e1/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fvalarray", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/226a2e08e50f39f910b847f04fb16ab2cac6d5e1/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fvalarray", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fvalarray?ref=226a2e08e50f39f910b847f04fb16ab2cac6d5e1", "patch": "@@ -796,7 +796,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n        else if (__n > 0)      // shift left\n \t {\n \t   if (size_t(__n) > _M_size)\n-\t     __n = _M_size;\n+\t     __n = int(_M_size);\n \n \t   std::__valarray_copy_construct(_M_data + __n,\n \t\t\t\t\t  _M_data + _M_size, __tmp_M_data);\n@@ -805,8 +805,8 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n \t }\n        else                   // shift right\n \t {\n-\t   if (size_t(-__n) > _M_size)\n-\t     __n = -_M_size;\n+\t   if (-size_t(__n) > _M_size)\n+\t     __n = -int(_M_size);\n \n \t   std::__valarray_copy_construct(_M_data, _M_data + _M_size + __n,\n \t\t\t\t\t  __tmp_M_data - __n);\n@@ -837,7 +837,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n        else if (__n > 0)      // cshift left\n \t {\n \t   if (size_t(__n) > _M_size)\n-\t     __n = __n % _M_size;\n+\t     __n = int(__n % _M_size);\n \n \t   std::__valarray_copy_construct(_M_data, _M_data + __n,\n \t\t\t\t\t  __tmp_M_data + _M_size - __n);\n@@ -846,8 +846,8 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n \t }\n        else                   // cshift right\n \t {\n-\t   if (size_t(-__n) > _M_size)\n-\t     __n = -(size_t(-__n) % _M_size);\n+\t   if (-size_t(__n) > _M_size)\n+\t     __n = -int(-size_t(__n) % _M_size);\n \n \t   std::__valarray_copy_construct(_M_data + _M_size + __n,\n \t\t\t\t\t  _M_data + _M_size, __tmp_M_data);"}]}