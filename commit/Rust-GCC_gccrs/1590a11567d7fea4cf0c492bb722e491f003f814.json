{"sha": "1590a11567d7fea4cf0c492bb722e491f003f814", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTU5MGExMTU2N2Q3ZmVhNGNmMGM0OTJiYjcyMmU0OTFmMDAzZjgxNA==", "commit": {"author": {"name": "Nathan Froyd", "email": "froydnj@codesourcery.com", "date": "2008-10-13T15:44:26Z"}, "committer": {"name": "Nathan Froyd", "email": "froydnj@gcc.gnu.org", "date": "2008-10-13T15:44:26Z"}, "message": "install.texi (powerpc-*-*): Require binutils 2.15.\n\n\t* doc/install.texi (powerpc-*-*): Require binutils 2.15.\n\t(powerpc*-*-linux-gnu*): Describe.\n\t* config/rs6000/ppc-asm.h (HIDDEN_FUNC): New macro.\n\t* config/rs6000/crtresfpr.asm, config/rs6000/crtresgpr.asm,\n\tconfig/rs6000/crtresxfpr.asm, config/rs6000/crtresxgpr.asm,\n\tconfig/rs6000/crtsavfpr.asm, config/rs6000/crtsavgpr.asm,\n\tconfig/rs6000/e500crtres32gpr.asm,\n\tconfig/rs6000/e500crtres64gpr.asm,\n\tconfig/rs6000/e500crtres64gprctr.asm,\n\tconfig/rs6000/e500crtrest32gpr.asm,\n\tconfig/rs6000/e500crtrest64gpr.asm,\n\tconfig/rs6000/e500crtresx32gpr.asm,\n\tconfig/rs6000/e500crtresx64gpr.asm,\n\tconfig/rs6000/e500crtsav32gpr.asm,\n\tconfig/rs6000/e500crtsav64gpr.asm,\n\tconfig/rs6000/e500crtsav64gprctr.asm,\n\tconfig/rs6000/e500crtsavg32gpr.asm,\n\tconfig/rs6000/e500crtsavg64gpr.asm,\n\tconfig/rs6000/e500crtsavg64gprctr.asm: Use it.\n\t* config/rs6000/crtsavres.asm: Really remove.\n\nFrom-SVN: r141090", "tree": {"sha": "80cef8a1af308e08022a686ccffe17bc2b743423", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/80cef8a1af308e08022a686ccffe17bc2b743423"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1590a11567d7fea4cf0c492bb722e491f003f814", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1590a11567d7fea4cf0c492bb722e491f003f814", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1590a11567d7fea4cf0c492bb722e491f003f814", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1590a11567d7fea4cf0c492bb722e491f003f814/comments", "author": null, "committer": null, "parents": [{"sha": "7f7aa9e154db9cd6b52925a7ca2ce75829f38179", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f7aa9e154db9cd6b52925a7ca2ce75829f38179", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7f7aa9e154db9cd6b52925a7ca2ce75829f38179"}], "stats": {"total": 729, "additions": 384, "deletions": 345}, "files": [{"sha": "32a67a5d0463a3d11bab77751a289f67ffb9315c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1590a11567d7fea4cf0c492bb722e491f003f814/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1590a11567d7fea4cf0c492bb722e491f003f814/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1590a11567d7fea4cf0c492bb722e491f003f814", "patch": "@@ -1,3 +1,26 @@\n+2008-10-13  Nathan Froyd  <froydnj@codesourcery.com>\n+\n+\t* doc/install.texi (powerpc-*-*): Require binutils 2.15.\n+\t(powerpc*-*-linux-gnu*): Describe.\n+\t* config/rs6000/ppc-asm.h (HIDDEN_FUNC): New macro.\n+\t* config/rs6000/crtresfpr.asm, config/rs6000/crtresgpr.asm,\n+\tconfig/rs6000/crtresxfpr.asm, config/rs6000/crtresxgpr.asm,\n+\tconfig/rs6000/crtsavfpr.asm, config/rs6000/crtsavgpr.asm,\n+\tconfig/rs6000/e500crtres32gpr.asm,\n+\tconfig/rs6000/e500crtres64gpr.asm,\n+\tconfig/rs6000/e500crtres64gprctr.asm,\n+\tconfig/rs6000/e500crtrest32gpr.asm,\n+\tconfig/rs6000/e500crtrest64gpr.asm,\n+\tconfig/rs6000/e500crtresx32gpr.asm,\n+\tconfig/rs6000/e500crtresx64gpr.asm,\n+\tconfig/rs6000/e500crtsav32gpr.asm,\n+\tconfig/rs6000/e500crtsav64gpr.asm,\n+\tconfig/rs6000/e500crtsav64gprctr.asm,\n+\tconfig/rs6000/e500crtsavg32gpr.asm,\n+\tconfig/rs6000/e500crtsavg64gpr.asm,\n+\tconfig/rs6000/e500crtsavg64gprctr.asm: Use it.\n+\t* config/rs6000/crtsavres.asm: Really remove.\n+\n 2008-10-13  Kai Tietz  <kai.tietz@onevision.com>\n \n \tFix PR/25502"}, {"sha": "105a417370f408be58496d78bf5d3e1645dc4e9e", "filename": "gcc/config/rs6000/crtresfpr.asm", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1590a11567d7fea4cf0c492bb722e491f003f814/gcc%2Fconfig%2Frs6000%2Fcrtresfpr.asm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1590a11567d7fea4cf0c492bb722e491f003f814/gcc%2Fconfig%2Frs6000%2Fcrtresfpr.asm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fcrtresfpr.asm?ref=1590a11567d7fea4cf0c492bb722e491f003f814", "patch": "@@ -48,24 +48,24 @@\n /* Called with r11 pointing to the stack header word of the caller of the */\n /* function, just beyond the end of the floating point save area.  */\n \n-FUNC_START(_restfpr_14)\tlfd\t14,-144(11)\t/* restore fp registers */\n-FUNC_START(_restfpr_15)\tlfd\t15,-136(11)\n-FUNC_START(_restfpr_16)\tlfd\t16,-128(11)\n-FUNC_START(_restfpr_17)\tlfd\t17,-120(11)\n-FUNC_START(_restfpr_18)\tlfd\t18,-112(11)\n-FUNC_START(_restfpr_19)\tlfd\t19,-104(11)\n-FUNC_START(_restfpr_20)\tlfd\t20,-96(11)\n-FUNC_START(_restfpr_21)\tlfd\t21,-88(11)\n-FUNC_START(_restfpr_22)\tlfd\t22,-80(11)\n-FUNC_START(_restfpr_23)\tlfd\t23,-72(11)\n-FUNC_START(_restfpr_24)\tlfd\t24,-64(11)\n-FUNC_START(_restfpr_25)\tlfd\t25,-56(11)\n-FUNC_START(_restfpr_26)\tlfd\t26,-48(11)\n-FUNC_START(_restfpr_27)\tlfd\t27,-40(11)\n-FUNC_START(_restfpr_28)\tlfd\t28,-32(11)\n-FUNC_START(_restfpr_29)\tlfd\t29,-24(11)\n-FUNC_START(_restfpr_30)\tlfd\t30,-16(11)\n-FUNC_START(_restfpr_31)\tlfd\t31,-8(11)\n+HIDDEN_FUNC(_restfpr_14)\tlfd\t14,-144(11)\t/* restore fp registers */\n+HIDDEN_FUNC(_restfpr_15)\tlfd\t15,-136(11)\n+HIDDEN_FUNC(_restfpr_16)\tlfd\t16,-128(11)\n+HIDDEN_FUNC(_restfpr_17)\tlfd\t17,-120(11)\n+HIDDEN_FUNC(_restfpr_18)\tlfd\t18,-112(11)\n+HIDDEN_FUNC(_restfpr_19)\tlfd\t19,-104(11)\n+HIDDEN_FUNC(_restfpr_20)\tlfd\t20,-96(11)\n+HIDDEN_FUNC(_restfpr_21)\tlfd\t21,-88(11)\n+HIDDEN_FUNC(_restfpr_22)\tlfd\t22,-80(11)\n+HIDDEN_FUNC(_restfpr_23)\tlfd\t23,-72(11)\n+HIDDEN_FUNC(_restfpr_24)\tlfd\t24,-64(11)\n+HIDDEN_FUNC(_restfpr_25)\tlfd\t25,-56(11)\n+HIDDEN_FUNC(_restfpr_26)\tlfd\t26,-48(11)\n+HIDDEN_FUNC(_restfpr_27)\tlfd\t27,-40(11)\n+HIDDEN_FUNC(_restfpr_28)\tlfd\t28,-32(11)\n+HIDDEN_FUNC(_restfpr_29)\tlfd\t29,-24(11)\n+HIDDEN_FUNC(_restfpr_30)\tlfd\t30,-16(11)\n+HIDDEN_FUNC(_restfpr_31)\tlfd\t31,-8(11)\n \t\t\tblr\n FUNC_END(_restfpr_31)\n FUNC_END(_restfpr_30)"}, {"sha": "2db0572072bf5790767b98a15312cdc37736f9a6", "filename": "gcc/config/rs6000/crtresgpr.asm", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1590a11567d7fea4cf0c492bb722e491f003f814/gcc%2Fconfig%2Frs6000%2Fcrtresgpr.asm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1590a11567d7fea4cf0c492bb722e491f003f814/gcc%2Fconfig%2Frs6000%2Fcrtresgpr.asm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fcrtresgpr.asm?ref=1590a11567d7fea4cf0c492bb722e491f003f814", "patch": "@@ -48,24 +48,24 @@\n /* Called with r11 pointing to the stack header word of the caller of the */\n /* function, just beyond the end of the integer restore area.  */\n \n-FUNC_START(_restgpr_14)\tlwz\t14,-72(11)\t/* restore gp registers */\n-FUNC_START(_restgpr_15)\tlwz\t15,-68(11)\n-FUNC_START(_restgpr_16)\tlwz\t16,-64(11)\n-FUNC_START(_restgpr_17)\tlwz\t17,-60(11)\n-FUNC_START(_restgpr_18)\tlwz\t18,-56(11)\n-FUNC_START(_restgpr_19)\tlwz\t19,-52(11)\n-FUNC_START(_restgpr_20)\tlwz\t20,-48(11)\n-FUNC_START(_restgpr_21)\tlwz\t21,-44(11)\n-FUNC_START(_restgpr_22)\tlwz\t22,-40(11)\n-FUNC_START(_restgpr_23)\tlwz\t23,-36(11)\n-FUNC_START(_restgpr_24)\tlwz\t24,-32(11)\n-FUNC_START(_restgpr_25)\tlwz\t25,-28(11)\n-FUNC_START(_restgpr_26)\tlwz\t26,-24(11)\n-FUNC_START(_restgpr_27)\tlwz\t27,-20(11)\n-FUNC_START(_restgpr_28)\tlwz\t28,-16(11)\n-FUNC_START(_restgpr_29)\tlwz\t29,-12(11)\n-FUNC_START(_restgpr_30)\tlwz\t30,-8(11)\n-FUNC_START(_restgpr_31)\tlwz\t31,-4(11)\n+HIDDEN_FUNC(_restgpr_14)\tlwz\t14,-72(11)\t/* restore gp registers */\n+HIDDEN_FUNC(_restgpr_15)\tlwz\t15,-68(11)\n+HIDDEN_FUNC(_restgpr_16)\tlwz\t16,-64(11)\n+HIDDEN_FUNC(_restgpr_17)\tlwz\t17,-60(11)\n+HIDDEN_FUNC(_restgpr_18)\tlwz\t18,-56(11)\n+HIDDEN_FUNC(_restgpr_19)\tlwz\t19,-52(11)\n+HIDDEN_FUNC(_restgpr_20)\tlwz\t20,-48(11)\n+HIDDEN_FUNC(_restgpr_21)\tlwz\t21,-44(11)\n+HIDDEN_FUNC(_restgpr_22)\tlwz\t22,-40(11)\n+HIDDEN_FUNC(_restgpr_23)\tlwz\t23,-36(11)\n+HIDDEN_FUNC(_restgpr_24)\tlwz\t24,-32(11)\n+HIDDEN_FUNC(_restgpr_25)\tlwz\t25,-28(11)\n+HIDDEN_FUNC(_restgpr_26)\tlwz\t26,-24(11)\n+HIDDEN_FUNC(_restgpr_27)\tlwz\t27,-20(11)\n+HIDDEN_FUNC(_restgpr_28)\tlwz\t28,-16(11)\n+HIDDEN_FUNC(_restgpr_29)\tlwz\t29,-12(11)\n+HIDDEN_FUNC(_restgpr_30)\tlwz\t30,-8(11)\n+HIDDEN_FUNC(_restgpr_31)\tlwz\t31,-4(11)\n \t\t\tblr\n FUNC_END(_restgpr_31)\n FUNC_END(_restgpr_30)"}, {"sha": "71f01a5c780360852cf2dc4d12b053a649b97971", "filename": "gcc/config/rs6000/crtresxfpr.asm", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1590a11567d7fea4cf0c492bb722e491f003f814/gcc%2Fconfig%2Frs6000%2Fcrtresxfpr.asm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1590a11567d7fea4cf0c492bb722e491f003f814/gcc%2Fconfig%2Frs6000%2Fcrtresxfpr.asm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fcrtresxfpr.asm?ref=1590a11567d7fea4cf0c492bb722e491f003f814", "patch": "@@ -50,24 +50,24 @@\n /* In addition to restoring the fp registers, it will return to the caller's */\n /* caller */\n \n-FUNC_START(_restfpr_14_x)\tlfd\t14,-144(11)\t/* restore fp registers */\n-FUNC_START(_restfpr_15_x)\tlfd\t15,-136(11)\n-FUNC_START(_restfpr_16_x)\tlfd\t16,-128(11)\n-FUNC_START(_restfpr_17_x)\tlfd\t17,-120(11)\n-FUNC_START(_restfpr_18_x)\tlfd\t18,-112(11)\n-FUNC_START(_restfpr_19_x)\tlfd\t19,-104(11)\n-FUNC_START(_restfpr_20_x)\tlfd\t20,-96(11)\n-FUNC_START(_restfpr_21_x)\tlfd\t21,-88(11)\n-FUNC_START(_restfpr_22_x)\tlfd\t22,-80(11)\n-FUNC_START(_restfpr_23_x)\tlfd\t23,-72(11)\n-FUNC_START(_restfpr_24_x)\tlfd\t24,-64(11)\n-FUNC_START(_restfpr_25_x)\tlfd\t25,-56(11)\n-FUNC_START(_restfpr_26_x)\tlfd\t26,-48(11)\n-FUNC_START(_restfpr_27_x)\tlfd\t27,-40(11)\n-FUNC_START(_restfpr_28_x)\tlfd\t28,-32(11)\n-FUNC_START(_restfpr_29_x)\tlfd\t29,-24(11)\n-FUNC_START(_restfpr_30_x)\tlfd\t30,-16(11)\n-FUNC_START(_restfpr_31_x)\tlwz\t0,4(11)\n+HIDDEN_FUNC(_restfpr_14_x)\tlfd\t14,-144(11)\t/* restore fp registers */\n+HIDDEN_FUNC(_restfpr_15_x)\tlfd\t15,-136(11)\n+HIDDEN_FUNC(_restfpr_16_x)\tlfd\t16,-128(11)\n+HIDDEN_FUNC(_restfpr_17_x)\tlfd\t17,-120(11)\n+HIDDEN_FUNC(_restfpr_18_x)\tlfd\t18,-112(11)\n+HIDDEN_FUNC(_restfpr_19_x)\tlfd\t19,-104(11)\n+HIDDEN_FUNC(_restfpr_20_x)\tlfd\t20,-96(11)\n+HIDDEN_FUNC(_restfpr_21_x)\tlfd\t21,-88(11)\n+HIDDEN_FUNC(_restfpr_22_x)\tlfd\t22,-80(11)\n+HIDDEN_FUNC(_restfpr_23_x)\tlfd\t23,-72(11)\n+HIDDEN_FUNC(_restfpr_24_x)\tlfd\t24,-64(11)\n+HIDDEN_FUNC(_restfpr_25_x)\tlfd\t25,-56(11)\n+HIDDEN_FUNC(_restfpr_26_x)\tlfd\t26,-48(11)\n+HIDDEN_FUNC(_restfpr_27_x)\tlfd\t27,-40(11)\n+HIDDEN_FUNC(_restfpr_28_x)\tlfd\t28,-32(11)\n+HIDDEN_FUNC(_restfpr_29_x)\tlfd\t29,-24(11)\n+HIDDEN_FUNC(_restfpr_30_x)\tlfd\t30,-16(11)\n+HIDDEN_FUNC(_restfpr_31_x)\tlwz\t0,4(11)\n \t\t\t\tlfd\t31,-8(11)\n \t\t\t\tmtlr\t0\n \t\t\t\tmr\t1,11"}, {"sha": "aeae757e2e3ec067ac25ab068d78a2a44a077195", "filename": "gcc/config/rs6000/crtresxgpr.asm", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1590a11567d7fea4cf0c492bb722e491f003f814/gcc%2Fconfig%2Frs6000%2Fcrtresxgpr.asm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1590a11567d7fea4cf0c492bb722e491f003f814/gcc%2Fconfig%2Frs6000%2Fcrtresxgpr.asm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fcrtresxgpr.asm?ref=1590a11567d7fea4cf0c492bb722e491f003f814", "patch": "@@ -48,24 +48,24 @@\n /* Called with r11 pointing to the stack header word of the caller of the */\n /* function, just beyond the end of the integer restore area.  */\n \n-FUNC_START(_restgpr_14_x)\tlwz\t14,-72(11)\t/* restore gp registers */\n-FUNC_START(_restgpr_15_x)\tlwz\t15,-68(11)\n-FUNC_START(_restgpr_16_x)\tlwz\t16,-64(11)\n-FUNC_START(_restgpr_17_x)\tlwz\t17,-60(11)\n-FUNC_START(_restgpr_18_x)\tlwz\t18,-56(11)\n-FUNC_START(_restgpr_19_x)\tlwz\t19,-52(11)\n-FUNC_START(_restgpr_20_x)\tlwz\t20,-48(11)\n-FUNC_START(_restgpr_21_x)\tlwz\t21,-44(11)\n-FUNC_START(_restgpr_22_x)\tlwz\t22,-40(11)\n-FUNC_START(_restgpr_23_x)\tlwz\t23,-36(11)\n-FUNC_START(_restgpr_24_x)\tlwz\t24,-32(11)\n-FUNC_START(_restgpr_25_x)\tlwz\t25,-28(11)\n-FUNC_START(_restgpr_26_x)\tlwz\t26,-24(11)\n-FUNC_START(_restgpr_27_x)\tlwz\t27,-20(11)\n-FUNC_START(_restgpr_28_x)\tlwz\t28,-16(11)\n-FUNC_START(_restgpr_29_x)\tlwz\t29,-12(11)\n-FUNC_START(_restgpr_30_x)\tlwz\t30,-8(11)\n-FUNC_START(_restgpr_31_x)\tlwz\t0,4(11)\n+HIDDEN_FUNC(_restgpr_14_x)\tlwz\t14,-72(11)\t/* restore gp registers */\n+HIDDEN_FUNC(_restgpr_15_x)\tlwz\t15,-68(11)\n+HIDDEN_FUNC(_restgpr_16_x)\tlwz\t16,-64(11)\n+HIDDEN_FUNC(_restgpr_17_x)\tlwz\t17,-60(11)\n+HIDDEN_FUNC(_restgpr_18_x)\tlwz\t18,-56(11)\n+HIDDEN_FUNC(_restgpr_19_x)\tlwz\t19,-52(11)\n+HIDDEN_FUNC(_restgpr_20_x)\tlwz\t20,-48(11)\n+HIDDEN_FUNC(_restgpr_21_x)\tlwz\t21,-44(11)\n+HIDDEN_FUNC(_restgpr_22_x)\tlwz\t22,-40(11)\n+HIDDEN_FUNC(_restgpr_23_x)\tlwz\t23,-36(11)\n+HIDDEN_FUNC(_restgpr_24_x)\tlwz\t24,-32(11)\n+HIDDEN_FUNC(_restgpr_25_x)\tlwz\t25,-28(11)\n+HIDDEN_FUNC(_restgpr_26_x)\tlwz\t26,-24(11)\n+HIDDEN_FUNC(_restgpr_27_x)\tlwz\t27,-20(11)\n+HIDDEN_FUNC(_restgpr_28_x)\tlwz\t28,-16(11)\n+HIDDEN_FUNC(_restgpr_29_x)\tlwz\t29,-12(11)\n+HIDDEN_FUNC(_restgpr_30_x)\tlwz\t30,-8(11)\n+HIDDEN_FUNC(_restgpr_31_x)\tlwz\t0,4(11)\n \t\t\t\tlwz\t31,-4(11)\n \t\t\t\tmtlr\t0\n \t\t\t\tmr\t1,11"}, {"sha": "925768905c791d82bd9f9e20e37aab3ab3f33e11", "filename": "gcc/config/rs6000/crtsavfpr.asm", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1590a11567d7fea4cf0c492bb722e491f003f814/gcc%2Fconfig%2Frs6000%2Fcrtsavfpr.asm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1590a11567d7fea4cf0c492bb722e491f003f814/gcc%2Fconfig%2Frs6000%2Fcrtsavfpr.asm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fcrtsavfpr.asm?ref=1590a11567d7fea4cf0c492bb722e491f003f814", "patch": "@@ -48,24 +48,24 @@\n /* Called with r11 pointing to the stack header word of the caller of the */\n /* function, just beyond the end of the floating point save area.  */\n \n-FUNC_START(_savefpr_14)\tstfd\t14,-144(11)\t/* save fp registers */\n-FUNC_START(_savefpr_15)\tstfd\t15,-136(11)\n-FUNC_START(_savefpr_16)\tstfd\t16,-128(11)\n-FUNC_START(_savefpr_17)\tstfd\t17,-120(11)\n-FUNC_START(_savefpr_18)\tstfd\t18,-112(11)\n-FUNC_START(_savefpr_19)\tstfd\t19,-104(11)\n-FUNC_START(_savefpr_20)\tstfd\t20,-96(11)\n-FUNC_START(_savefpr_21)\tstfd\t21,-88(11)\n-FUNC_START(_savefpr_22)\tstfd\t22,-80(11)\n-FUNC_START(_savefpr_23)\tstfd\t23,-72(11)\n-FUNC_START(_savefpr_24)\tstfd\t24,-64(11)\n-FUNC_START(_savefpr_25)\tstfd\t25,-56(11)\n-FUNC_START(_savefpr_26)\tstfd\t26,-48(11)\n-FUNC_START(_savefpr_27)\tstfd\t27,-40(11)\n-FUNC_START(_savefpr_28)\tstfd\t28,-32(11)\n-FUNC_START(_savefpr_29)\tstfd\t29,-24(11)\n-FUNC_START(_savefpr_30)\tstfd\t30,-16(11)\n-FUNC_START(_savefpr_31)\tstfd\t31,-8(11)\n+HIDDEN_FUNC(_savefpr_14)\tstfd\t14,-144(11)\t/* save fp registers */\n+HIDDEN_FUNC(_savefpr_15)\tstfd\t15,-136(11)\n+HIDDEN_FUNC(_savefpr_16)\tstfd\t16,-128(11)\n+HIDDEN_FUNC(_savefpr_17)\tstfd\t17,-120(11)\n+HIDDEN_FUNC(_savefpr_18)\tstfd\t18,-112(11)\n+HIDDEN_FUNC(_savefpr_19)\tstfd\t19,-104(11)\n+HIDDEN_FUNC(_savefpr_20)\tstfd\t20,-96(11)\n+HIDDEN_FUNC(_savefpr_21)\tstfd\t21,-88(11)\n+HIDDEN_FUNC(_savefpr_22)\tstfd\t22,-80(11)\n+HIDDEN_FUNC(_savefpr_23)\tstfd\t23,-72(11)\n+HIDDEN_FUNC(_savefpr_24)\tstfd\t24,-64(11)\n+HIDDEN_FUNC(_savefpr_25)\tstfd\t25,-56(11)\n+HIDDEN_FUNC(_savefpr_26)\tstfd\t26,-48(11)\n+HIDDEN_FUNC(_savefpr_27)\tstfd\t27,-40(11)\n+HIDDEN_FUNC(_savefpr_28)\tstfd\t28,-32(11)\n+HIDDEN_FUNC(_savefpr_29)\tstfd\t29,-24(11)\n+HIDDEN_FUNC(_savefpr_30)\tstfd\t30,-16(11)\n+HIDDEN_FUNC(_savefpr_31)\tstfd\t31,-8(11)\n \t\t\tblr\n FUNC_END(_savefpr_31)\n FUNC_END(_savefpr_30)"}, {"sha": "02f261e03125e2a37d7a646dd5c0a2f241985168", "filename": "gcc/config/rs6000/crtsavgpr.asm", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1590a11567d7fea4cf0c492bb722e491f003f814/gcc%2Fconfig%2Frs6000%2Fcrtsavgpr.asm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1590a11567d7fea4cf0c492bb722e491f003f814/gcc%2Fconfig%2Frs6000%2Fcrtsavgpr.asm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fcrtsavgpr.asm?ref=1590a11567d7fea4cf0c492bb722e491f003f814", "patch": "@@ -48,24 +48,24 @@\n /* Called with r11 pointing to the stack header word of the caller of the */\n /* function, just beyond the end of the integer save area.  */\n \n-FUNC_START(_savegpr_14)\tstw\t14,-72(11)\t/* save gp registers */\n-FUNC_START(_savegpr_15)\tstw\t15,-68(11)\n-FUNC_START(_savegpr_16)\tstw\t16,-64(11)\n-FUNC_START(_savegpr_17)\tstw\t17,-60(11)\n-FUNC_START(_savegpr_18)\tstw\t18,-56(11)\n-FUNC_START(_savegpr_19)\tstw\t19,-52(11)\n-FUNC_START(_savegpr_20)\tstw\t20,-48(11)\n-FUNC_START(_savegpr_21)\tstw\t21,-44(11)\n-FUNC_START(_savegpr_22)\tstw\t22,-40(11)\n-FUNC_START(_savegpr_23)\tstw\t23,-36(11)\n-FUNC_START(_savegpr_24)\tstw\t24,-32(11)\n-FUNC_START(_savegpr_25)\tstw\t25,-28(11)\n-FUNC_START(_savegpr_26)\tstw\t26,-24(11)\n-FUNC_START(_savegpr_27)\tstw\t27,-20(11)\n-FUNC_START(_savegpr_28)\tstw\t28,-16(11)\n-FUNC_START(_savegpr_29)\tstw\t29,-12(11)\n-FUNC_START(_savegpr_30)\tstw\t30,-8(11)\n-FUNC_START(_savegpr_31)\tstw\t31,-4(11)\n+HIDDEN_FUNC(_savegpr_14)\tstw\t14,-72(11)\t/* save gp registers */\n+HIDDEN_FUNC(_savegpr_15)\tstw\t15,-68(11)\n+HIDDEN_FUNC(_savegpr_16)\tstw\t16,-64(11)\n+HIDDEN_FUNC(_savegpr_17)\tstw\t17,-60(11)\n+HIDDEN_FUNC(_savegpr_18)\tstw\t18,-56(11)\n+HIDDEN_FUNC(_savegpr_19)\tstw\t19,-52(11)\n+HIDDEN_FUNC(_savegpr_20)\tstw\t20,-48(11)\n+HIDDEN_FUNC(_savegpr_21)\tstw\t21,-44(11)\n+HIDDEN_FUNC(_savegpr_22)\tstw\t22,-40(11)\n+HIDDEN_FUNC(_savegpr_23)\tstw\t23,-36(11)\n+HIDDEN_FUNC(_savegpr_24)\tstw\t24,-32(11)\n+HIDDEN_FUNC(_savegpr_25)\tstw\t25,-28(11)\n+HIDDEN_FUNC(_savegpr_26)\tstw\t26,-24(11)\n+HIDDEN_FUNC(_savegpr_27)\tstw\t27,-20(11)\n+HIDDEN_FUNC(_savegpr_28)\tstw\t28,-16(11)\n+HIDDEN_FUNC(_savegpr_29)\tstw\t29,-12(11)\n+HIDDEN_FUNC(_savegpr_30)\tstw\t30,-8(11)\n+HIDDEN_FUNC(_savegpr_31)\tstw\t31,-4(11)\n \t\t\tblr\n FUNC_END(_savegpr_31)\n FUNC_END(_savegpr_30)"}, {"sha": "70b087fefc8d601cd2888b2b4242686b6df807ad", "filename": "gcc/config/rs6000/e500crtres32gpr.asm", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1590a11567d7fea4cf0c492bb722e491f003f814/gcc%2Fconfig%2Frs6000%2Fe500crtres32gpr.asm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1590a11567d7fea4cf0c492bb722e491f003f814/gcc%2Fconfig%2Frs6000%2Fe500crtres32gpr.asm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fe500crtres32gpr.asm?ref=1590a11567d7fea4cf0c492bb722e491f003f814", "patch": "@@ -42,24 +42,24 @@\n /* Routines for restoring 32-bit integer registers, called by the compiler.  */\n /* \"Bare\" versions that simply return to their caller.  */\n \n-FUNC_START(_rest32gpr_14)\tlwz 14,-72(11)\n-FUNC_START(_rest32gpr_15)\tlwz 15,-68(11)\n-FUNC_START(_rest32gpr_16)\tlwz 16,-64(11)\n-FUNC_START(_rest32gpr_17)\tlwz 17,-60(11)\n-FUNC_START(_rest32gpr_18)\tlwz 18,-56(11)\n-FUNC_START(_rest32gpr_19)\tlwz 19,-52(11)\n-FUNC_START(_rest32gpr_20)\tlwz 20,-48(11)\n-FUNC_START(_rest32gpr_21)\tlwz 21,-44(11)\n-FUNC_START(_rest32gpr_22)\tlwz 22,-40(11)\n-FUNC_START(_rest32gpr_23)\tlwz 23,-36(11)\n-FUNC_START(_rest32gpr_24)\tlwz 24,-32(11)\n-FUNC_START(_rest32gpr_25)\tlwz 25,-28(11)\n-FUNC_START(_rest32gpr_26)\tlwz 26,-24(11)\n-FUNC_START(_rest32gpr_27)\tlwz 27,-20(11)\n-FUNC_START(_rest32gpr_28)\tlwz 28,-16(11)\n-FUNC_START(_rest32gpr_29)\tlwz 29,-12(11)\n-FUNC_START(_rest32gpr_30)\tlwz 30,-8(11)\n-FUNC_START(_rest32gpr_31)\tlwz 31,-4(11)\n+HIDDEN_FUNC(_rest32gpr_14)\tlwz 14,-72(11)\n+HIDDEN_FUNC(_rest32gpr_15)\tlwz 15,-68(11)\n+HIDDEN_FUNC(_rest32gpr_16)\tlwz 16,-64(11)\n+HIDDEN_FUNC(_rest32gpr_17)\tlwz 17,-60(11)\n+HIDDEN_FUNC(_rest32gpr_18)\tlwz 18,-56(11)\n+HIDDEN_FUNC(_rest32gpr_19)\tlwz 19,-52(11)\n+HIDDEN_FUNC(_rest32gpr_20)\tlwz 20,-48(11)\n+HIDDEN_FUNC(_rest32gpr_21)\tlwz 21,-44(11)\n+HIDDEN_FUNC(_rest32gpr_22)\tlwz 22,-40(11)\n+HIDDEN_FUNC(_rest32gpr_23)\tlwz 23,-36(11)\n+HIDDEN_FUNC(_rest32gpr_24)\tlwz 24,-32(11)\n+HIDDEN_FUNC(_rest32gpr_25)\tlwz 25,-28(11)\n+HIDDEN_FUNC(_rest32gpr_26)\tlwz 26,-24(11)\n+HIDDEN_FUNC(_rest32gpr_27)\tlwz 27,-20(11)\n+HIDDEN_FUNC(_rest32gpr_28)\tlwz 28,-16(11)\n+HIDDEN_FUNC(_rest32gpr_29)\tlwz 29,-12(11)\n+HIDDEN_FUNC(_rest32gpr_30)\tlwz 30,-8(11)\n+HIDDEN_FUNC(_rest32gpr_31)\tlwz 31,-4(11)\n \t\t\t\tblr\n FUNC_END(_rest32gpr_31)\n FUNC_END(_rest32gpr_30)"}, {"sha": "59c693194e45f1056dcb7cabbe769f7c5426930f", "filename": "gcc/config/rs6000/e500crtres64gpr.asm", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1590a11567d7fea4cf0c492bb722e491f003f814/gcc%2Fconfig%2Frs6000%2Fe500crtres64gpr.asm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1590a11567d7fea4cf0c492bb722e491f003f814/gcc%2Fconfig%2Frs6000%2Fe500crtres64gpr.asm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fe500crtres64gpr.asm?ref=1590a11567d7fea4cf0c492bb722e491f003f814", "patch": "@@ -42,24 +42,24 @@\n /* Routines for restoring 64-bit integer registers, called by the compiler.  */\n /* \"Bare\" versions that return to their caller.  */\n \n-FUNC_START(_rest64gpr_14)\tevldd 14,0(11)\n-FUNC_START(_rest64gpr_15)\tevldd 15,8(11)\n-FUNC_START(_rest64gpr_16)\tevldd 16,16(11)\n-FUNC_START(_rest64gpr_17)\tevldd 17,24(11)\n-FUNC_START(_rest64gpr_18)\tevldd 18,32(11)\n-FUNC_START(_rest64gpr_19)\tevldd 19,40(11)\n-FUNC_START(_rest64gpr_20)\tevldd 20,48(11)\n-FUNC_START(_rest64gpr_21)\tevldd 21,56(11)\n-FUNC_START(_rest64gpr_22)\tevldd 22,64(11)\n-FUNC_START(_rest64gpr_23)\tevldd 23,72(11)\n-FUNC_START(_rest64gpr_24)\tevldd 24,80(11)\n-FUNC_START(_rest64gpr_25)\tevldd 25,88(11)\n-FUNC_START(_rest64gpr_26)\tevldd 26,96(11)\n-FUNC_START(_rest64gpr_27)\tevldd 27,104(11)\n-FUNC_START(_rest64gpr_28)\tevldd 28,112(11)\n-FUNC_START(_rest64gpr_29)\tevldd 29,120(11)\n-FUNC_START(_rest64gpr_30)\tevldd 30,128(11)\n-FUNC_START(_rest64gpr_31)\tevldd 31,136(11)\n+HIDDEN_FUNC(_rest64gpr_14)\tevldd 14,0(11)\n+HIDDEN_FUNC(_rest64gpr_15)\tevldd 15,8(11)\n+HIDDEN_FUNC(_rest64gpr_16)\tevldd 16,16(11)\n+HIDDEN_FUNC(_rest64gpr_17)\tevldd 17,24(11)\n+HIDDEN_FUNC(_rest64gpr_18)\tevldd 18,32(11)\n+HIDDEN_FUNC(_rest64gpr_19)\tevldd 19,40(11)\n+HIDDEN_FUNC(_rest64gpr_20)\tevldd 20,48(11)\n+HIDDEN_FUNC(_rest64gpr_21)\tevldd 21,56(11)\n+HIDDEN_FUNC(_rest64gpr_22)\tevldd 22,64(11)\n+HIDDEN_FUNC(_rest64gpr_23)\tevldd 23,72(11)\n+HIDDEN_FUNC(_rest64gpr_24)\tevldd 24,80(11)\n+HIDDEN_FUNC(_rest64gpr_25)\tevldd 25,88(11)\n+HIDDEN_FUNC(_rest64gpr_26)\tevldd 26,96(11)\n+HIDDEN_FUNC(_rest64gpr_27)\tevldd 27,104(11)\n+HIDDEN_FUNC(_rest64gpr_28)\tevldd 28,112(11)\n+HIDDEN_FUNC(_rest64gpr_29)\tevldd 29,120(11)\n+HIDDEN_FUNC(_rest64gpr_30)\tevldd 30,128(11)\n+HIDDEN_FUNC(_rest64gpr_31)\tevldd 31,136(11)\n \t\t\t\tblr\n FUNC_END(_rest64gpr_31)\n FUNC_END(_rest64gpr_30)"}, {"sha": "469ca6043551d19899e08ed60652d1d4d183bb57", "filename": "gcc/config/rs6000/e500crtres64gprctr.asm", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1590a11567d7fea4cf0c492bb722e491f003f814/gcc%2Fconfig%2Frs6000%2Fe500crtres64gprctr.asm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1590a11567d7fea4cf0c492bb722e491f003f814/gcc%2Fconfig%2Frs6000%2Fe500crtres64gprctr.asm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fe500crtres64gprctr.asm?ref=1590a11567d7fea4cf0c492bb722e491f003f814", "patch": "@@ -42,41 +42,41 @@\n /* Routines for restoring 64-bit integer registers where the number of\n    registers to be restored is passed in CTR, called by the compiler.  */\n \n-FUNC_START(_rest64gpr_ctr_14)\tevldd 14,0(11)\n+HIDDEN_FUNC(_rest64gpr_ctr_14)\tevldd 14,0(11)\n \t\t\t\tbdz _rest64_gpr_ctr_done\n-FUNC_START(_rest64gpr_ctr_15)\tevldd 15,8(11)\n+HIDDEN_FUNC(_rest64gpr_ctr_15)\tevldd 15,8(11)\n \t\t\t\tbdz _rest64_gpr_ctr_done\n-FUNC_START(_rest64gpr_ctr_16)\tevldd 16,16(11)\n+HIDDEN_FUNC(_rest64gpr_ctr_16)\tevldd 16,16(11)\n \t\t\t\tbdz _rest64_gpr_ctr_done\n-FUNC_START(_rest64gpr_ctr_17)\tevldd 17,24(11)\n+HIDDEN_FUNC(_rest64gpr_ctr_17)\tevldd 17,24(11)\n \t\t\t\tbdz _rest64_gpr_ctr_done\n-FUNC_START(_rest64gpr_ctr_18)\tevldd 18,32(11)\n+HIDDEN_FUNC(_rest64gpr_ctr_18)\tevldd 18,32(11)\n \t\t\t\tbdz _rest64_gpr_ctr_done\n-FUNC_START(_rest64gpr_ctr_19)\tevldd 19,40(11)\n+HIDDEN_FUNC(_rest64gpr_ctr_19)\tevldd 19,40(11)\n \t\t\t\tbdz _rest64_gpr_ctr_done\n-FUNC_START(_rest64gpr_ctr_20)\tevldd 20,48(11)\n+HIDDEN_FUNC(_rest64gpr_ctr_20)\tevldd 20,48(11)\n \t\t\t\tbdz _rest64_gpr_ctr_done\n-FUNC_START(_rest64gpr_ctr_21)\tevldd 21,56(11)\n+HIDDEN_FUNC(_rest64gpr_ctr_21)\tevldd 21,56(11)\n \t\t\t\tbdz _rest64_gpr_ctr_done\n-FUNC_START(_rest64gpr_ctr_22)\tevldd 22,64(11)\n+HIDDEN_FUNC(_rest64gpr_ctr_22)\tevldd 22,64(11)\n \t\t\t\tbdz _rest64_gpr_ctr_done\n-FUNC_START(_rest64gpr_ctr_23)\tevldd 23,72(11)\n+HIDDEN_FUNC(_rest64gpr_ctr_23)\tevldd 23,72(11)\n \t\t\t\tbdz _rest64_gpr_ctr_done\n-FUNC_START(_rest64gpr_ctr_24)\tevldd 24,80(11)\n+HIDDEN_FUNC(_rest64gpr_ctr_24)\tevldd 24,80(11)\n \t\t\t\tbdz _rest64_gpr_ctr_done\n-FUNC_START(_rest64gpr_ctr_25)\tevldd 25,88(11)\n+HIDDEN_FUNC(_rest64gpr_ctr_25)\tevldd 25,88(11)\n \t\t\t\tbdz _rest64_gpr_ctr_done\n-FUNC_START(_rest64gpr_ctr_26)\tevldd 26,96(11)\n+HIDDEN_FUNC(_rest64gpr_ctr_26)\tevldd 26,96(11)\n \t\t\t\tbdz _rest64_gpr_ctr_done\n-FUNC_START(_rest64gpr_ctr_27)\tevldd 27,104(11)\n+HIDDEN_FUNC(_rest64gpr_ctr_27)\tevldd 27,104(11)\n \t\t\t\tbdz _rest64_gpr_ctr_done\n-FUNC_START(_rest64gpr_ctr_28)\tevldd 28,112(11)\n+HIDDEN_FUNC(_rest64gpr_ctr_28)\tevldd 28,112(11)\n \t\t\t\tbdz _rest64_gpr_ctr_done\n-FUNC_START(_rest64gpr_ctr_29)\tevldd 29,120(11)\n+HIDDEN_FUNC(_rest64gpr_ctr_29)\tevldd 29,120(11)\n \t\t\t\tbdz _rest64_gpr_ctr_done\n-FUNC_START(_rest64gpr_ctr_30)\tevldd 30,128(11)\n+HIDDEN_FUNC(_rest64gpr_ctr_30)\tevldd 30,128(11)\n \t\t\t\tbdz _rest64_gpr_ctr_done\n-FUNC_START(_rest64gpr_ctr_31)\tevldd 31,136(11)\n+HIDDEN_FUNC(_rest64gpr_ctr_31)\tevldd 31,136(11)\n _rest64gpr_ctr_done:\t\tblr\n \n #endif"}, {"sha": "e558b8c4fecbd711696bc1ea596b305adc4df71d", "filename": "gcc/config/rs6000/e500crtrest32gpr.asm", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1590a11567d7fea4cf0c492bb722e491f003f814/gcc%2Fconfig%2Frs6000%2Fe500crtrest32gpr.asm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1590a11567d7fea4cf0c492bb722e491f003f814/gcc%2Fconfig%2Frs6000%2Fe500crtrest32gpr.asm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fe500crtrest32gpr.asm?ref=1590a11567d7fea4cf0c492bb722e491f003f814", "patch": "@@ -42,24 +42,24 @@\n /* Routines for restoring 32-bit integer registers, called by the compiler.  */\n /* \"Tail\" versions that perform a tail call.  */\n \n-FUNC_START(_rest32gpr_14_t)\tlwz 14,-72(11)\n-FUNC_START(_rest32gpr_15_t)\tlwz 15,-68(11)\n-FUNC_START(_rest32gpr_16_t)\tlwz 16,-64(11)\n-FUNC_START(_rest32gpr_17_t)\tlwz 17,-60(11)\n-FUNC_START(_rest32gpr_18_t)\tlwz 18,-56(11)\n-FUNC_START(_rest32gpr_19_t)\tlwz 19,-52(11)\n-FUNC_START(_rest32gpr_20_t)\tlwz 20,-48(11)\n-FUNC_START(_rest32gpr_21_t)\tlwz 21,-44(11)\n-FUNC_START(_rest32gpr_22_t)\tlwz 22,-40(11)\n-FUNC_START(_rest32gpr_23_t)\tlwz 23,-36(11)\n-FUNC_START(_rest32gpr_24_t)\tlwz 24,-32(11)\n-FUNC_START(_rest32gpr_25_t)\tlwz 25,-28(11)\n-FUNC_START(_rest32gpr_26_t)\tlwz 26,-24(11)\n-FUNC_START(_rest32gpr_27_t)\tlwz 27,-20(11)\n-FUNC_START(_rest32gpr_28_t)\tlwz 28,-16(11)\n-FUNC_START(_rest32gpr_29_t)\tlwz 29,-12(11)\n-FUNC_START(_rest32gpr_30_t)\tlwz 30,-8(11)\n-FUNC_START(_rest32gpr_31_t)\tlwz 31,-4(11)\n+HIDDEN_FUNC(_rest32gpr_14_t)\tlwz 14,-72(11)\n+HIDDEN_FUNC(_rest32gpr_15_t)\tlwz 15,-68(11)\n+HIDDEN_FUNC(_rest32gpr_16_t)\tlwz 16,-64(11)\n+HIDDEN_FUNC(_rest32gpr_17_t)\tlwz 17,-60(11)\n+HIDDEN_FUNC(_rest32gpr_18_t)\tlwz 18,-56(11)\n+HIDDEN_FUNC(_rest32gpr_19_t)\tlwz 19,-52(11)\n+HIDDEN_FUNC(_rest32gpr_20_t)\tlwz 20,-48(11)\n+HIDDEN_FUNC(_rest32gpr_21_t)\tlwz 21,-44(11)\n+HIDDEN_FUNC(_rest32gpr_22_t)\tlwz 22,-40(11)\n+HIDDEN_FUNC(_rest32gpr_23_t)\tlwz 23,-36(11)\n+HIDDEN_FUNC(_rest32gpr_24_t)\tlwz 24,-32(11)\n+HIDDEN_FUNC(_rest32gpr_25_t)\tlwz 25,-28(11)\n+HIDDEN_FUNC(_rest32gpr_26_t)\tlwz 26,-24(11)\n+HIDDEN_FUNC(_rest32gpr_27_t)\tlwz 27,-20(11)\n+HIDDEN_FUNC(_rest32gpr_28_t)\tlwz 28,-16(11)\n+HIDDEN_FUNC(_rest32gpr_29_t)\tlwz 29,-12(11)\n+HIDDEN_FUNC(_rest32gpr_30_t)\tlwz 30,-8(11)\n+HIDDEN_FUNC(_rest32gpr_31_t)\tlwz 31,-4(11)\n \t\t\t\tlwz 0,4(11)\n \t\t\t\tmr 1,11\n \t\t\t\tblr"}, {"sha": "c586262c65bb769b3fccccb5914221dfe247e427", "filename": "gcc/config/rs6000/e500crtrest64gpr.asm", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1590a11567d7fea4cf0c492bb722e491f003f814/gcc%2Fconfig%2Frs6000%2Fe500crtrest64gpr.asm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1590a11567d7fea4cf0c492bb722e491f003f814/gcc%2Fconfig%2Frs6000%2Fe500crtrest64gpr.asm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fe500crtrest64gpr.asm?ref=1590a11567d7fea4cf0c492bb722e491f003f814", "patch": "@@ -41,24 +41,24 @@\n \n /* \"Tail\" versions that perform a tail call.  */\n \n-FUNC_START(_rest64gpr_14_t)\tevldd 14,0(11)\n-FUNC_START(_rest64gpr_15_t)\tevldd 15,8(11)\n-FUNC_START(_rest64gpr_16_t)\tevldd 16,16(11)\n-FUNC_START(_rest64gpr_17_t)\tevldd 17,24(11)\n-FUNC_START(_rest64gpr_18_t)\tevldd 18,32(11)\n-FUNC_START(_rest64gpr_19_t)\tevldd 19,40(11)\n-FUNC_START(_rest64gpr_20_t)\tevldd 20,48(11)\n-FUNC_START(_rest64gpr_21_t)\tevldd 21,56(11)\n-FUNC_START(_rest64gpr_22_t)\tevldd 22,64(11)\n-FUNC_START(_rest64gpr_23_t)\tevldd 23,72(11)\n-FUNC_START(_rest64gpr_24_t)\tevldd 24,80(11)\n-FUNC_START(_rest64gpr_25_t)\tevldd 25,88(11)\n-FUNC_START(_rest64gpr_26_t)\tevldd 26,96(11)\n-FUNC_START(_rest64gpr_27_t)\tevldd 27,104(11)\n-FUNC_START(_rest64gpr_28_t)\tevldd 28,112(11)\n-FUNC_START(_rest64gpr_29_t)\tevldd 29,120(11)\n-FUNC_START(_rest64gpr_30_t)\tevldd 30,128(11)\n-FUNC_START(_rest64gpr_31_t)\tlwz 0,148(11)\n+HIDDEN_FUNC(_rest64gpr_14_t)\tevldd 14,0(11)\n+HIDDEN_FUNC(_rest64gpr_15_t)\tevldd 15,8(11)\n+HIDDEN_FUNC(_rest64gpr_16_t)\tevldd 16,16(11)\n+HIDDEN_FUNC(_rest64gpr_17_t)\tevldd 17,24(11)\n+HIDDEN_FUNC(_rest64gpr_18_t)\tevldd 18,32(11)\n+HIDDEN_FUNC(_rest64gpr_19_t)\tevldd 19,40(11)\n+HIDDEN_FUNC(_rest64gpr_20_t)\tevldd 20,48(11)\n+HIDDEN_FUNC(_rest64gpr_21_t)\tevldd 21,56(11)\n+HIDDEN_FUNC(_rest64gpr_22_t)\tevldd 22,64(11)\n+HIDDEN_FUNC(_rest64gpr_23_t)\tevldd 23,72(11)\n+HIDDEN_FUNC(_rest64gpr_24_t)\tevldd 24,80(11)\n+HIDDEN_FUNC(_rest64gpr_25_t)\tevldd 25,88(11)\n+HIDDEN_FUNC(_rest64gpr_26_t)\tevldd 26,96(11)\n+HIDDEN_FUNC(_rest64gpr_27_t)\tevldd 27,104(11)\n+HIDDEN_FUNC(_rest64gpr_28_t)\tevldd 28,112(11)\n+HIDDEN_FUNC(_rest64gpr_29_t)\tevldd 29,120(11)\n+HIDDEN_FUNC(_rest64gpr_30_t)\tevldd 30,128(11)\n+HIDDEN_FUNC(_rest64gpr_31_t)\tlwz 0,148(11)\n \t\t\t\tevldd 31,136(11)\n \t\t\t\taddi 1,11,144\n \t\t\t\tblr"}, {"sha": "0e3a4147b74bfc3e3f05448d5280dfdd920bcc98", "filename": "gcc/config/rs6000/e500crtresx32gpr.asm", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1590a11567d7fea4cf0c492bb722e491f003f814/gcc%2Fconfig%2Frs6000%2Fe500crtresx32gpr.asm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1590a11567d7fea4cf0c492bb722e491f003f814/gcc%2Fconfig%2Frs6000%2Fe500crtresx32gpr.asm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fe500crtresx32gpr.asm?ref=1590a11567d7fea4cf0c492bb722e491f003f814", "patch": "@@ -42,24 +42,24 @@\n /* Routines for restoring 32-bit integer registers, called by the compiler.  */\n /* \"Exit\" versions that return to the caller's caller.  */\n \n-FUNC_START(_rest32gpr_14_x)\tlwz 14,-72(11)\n-FUNC_START(_rest32gpr_15_x)\tlwz 15,-68(11)\n-FUNC_START(_rest32gpr_16_x)\tlwz 16,-64(11)\n-FUNC_START(_rest32gpr_17_x)\tlwz 17,-60(11)\n-FUNC_START(_rest32gpr_18_x)\tlwz 18,-56(11)\n-FUNC_START(_rest32gpr_19_x)\tlwz 19,-52(11)\n-FUNC_START(_rest32gpr_20_x)\tlwz 20,-48(11)\n-FUNC_START(_rest32gpr_21_x)\tlwz 21,-44(11)\n-FUNC_START(_rest32gpr_22_x)\tlwz 22,-40(11)\n-FUNC_START(_rest32gpr_23_x)\tlwz 23,-36(11)\n-FUNC_START(_rest32gpr_24_x)\tlwz 24,-32(11)\n-FUNC_START(_rest32gpr_25_x)\tlwz 25,-28(11)\n-FUNC_START(_rest32gpr_26_x)\tlwz 26,-24(11)\n-FUNC_START(_rest32gpr_27_x)\tlwz 27,-20(11)\n-FUNC_START(_rest32gpr_28_x)\tlwz 28,-16(11)\n-FUNC_START(_rest32gpr_29_x)\tlwz 29,-12(11)\n-FUNC_START(_rest32gpr_30_x)\tlwz 30,-8(11)\n-FUNC_START(_rest32gpr_31_x)\tlwz 0,4(11)\n+HIDDEN_FUNC(_rest32gpr_14_x)\tlwz 14,-72(11)\n+HIDDEN_FUNC(_rest32gpr_15_x)\tlwz 15,-68(11)\n+HIDDEN_FUNC(_rest32gpr_16_x)\tlwz 16,-64(11)\n+HIDDEN_FUNC(_rest32gpr_17_x)\tlwz 17,-60(11)\n+HIDDEN_FUNC(_rest32gpr_18_x)\tlwz 18,-56(11)\n+HIDDEN_FUNC(_rest32gpr_19_x)\tlwz 19,-52(11)\n+HIDDEN_FUNC(_rest32gpr_20_x)\tlwz 20,-48(11)\n+HIDDEN_FUNC(_rest32gpr_21_x)\tlwz 21,-44(11)\n+HIDDEN_FUNC(_rest32gpr_22_x)\tlwz 22,-40(11)\n+HIDDEN_FUNC(_rest32gpr_23_x)\tlwz 23,-36(11)\n+HIDDEN_FUNC(_rest32gpr_24_x)\tlwz 24,-32(11)\n+HIDDEN_FUNC(_rest32gpr_25_x)\tlwz 25,-28(11)\n+HIDDEN_FUNC(_rest32gpr_26_x)\tlwz 26,-24(11)\n+HIDDEN_FUNC(_rest32gpr_27_x)\tlwz 27,-20(11)\n+HIDDEN_FUNC(_rest32gpr_28_x)\tlwz 28,-16(11)\n+HIDDEN_FUNC(_rest32gpr_29_x)\tlwz 29,-12(11)\n+HIDDEN_FUNC(_rest32gpr_30_x)\tlwz 30,-8(11)\n+HIDDEN_FUNC(_rest32gpr_31_x)\tlwz 0,4(11)\n \t\t\t\tlwz 31,-4(11)\n \t\t\t\tmr 1,11\n \t\t\t\tmtlr 0"}, {"sha": "e0fb588ffc81f6df612d4099f213596e8b33af4e", "filename": "gcc/config/rs6000/e500crtresx64gpr.asm", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1590a11567d7fea4cf0c492bb722e491f003f814/gcc%2Fconfig%2Frs6000%2Fe500crtresx64gpr.asm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1590a11567d7fea4cf0c492bb722e491f003f814/gcc%2Fconfig%2Frs6000%2Fe500crtresx64gpr.asm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fe500crtresx64gpr.asm?ref=1590a11567d7fea4cf0c492bb722e491f003f814", "patch": "@@ -41,24 +41,24 @@\n \n /* \"Exit\" versions that return to their caller's caller.  */\n \n-FUNC_START(_rest64gpr_14_x)\tevldd 14,0(11)\n-FUNC_START(_rest64gpr_15_x)\tevldd 15,8(11)\n-FUNC_START(_rest64gpr_16_x)\tevldd 16,16(11)\n-FUNC_START(_rest64gpr_17_x)\tevldd 17,24(11)\n-FUNC_START(_rest64gpr_18_x)\tevldd 18,32(11)\n-FUNC_START(_rest64gpr_19_x)\tevldd 19,40(11)\n-FUNC_START(_rest64gpr_20_x)\tevldd 20,48(11)\n-FUNC_START(_rest64gpr_21_x)\tevldd 21,56(11)\n-FUNC_START(_rest64gpr_22_x)\tevldd 22,64(11)\n-FUNC_START(_rest64gpr_23_x)\tevldd 23,72(11)\n-FUNC_START(_rest64gpr_24_x)\tevldd 24,80(11)\n-FUNC_START(_rest64gpr_25_x)\tevldd 25,88(11)\n-FUNC_START(_rest64gpr_26_x)\tevldd 26,96(11)\n-FUNC_START(_rest64gpr_27_x)\tevldd 27,104(11)\n-FUNC_START(_rest64gpr_28_x)\tevldd 28,112(11)\n-FUNC_START(_rest64gpr_29_x)\tevldd 29,120(11)\n-FUNC_START(_rest64gpr_30_x)\tevldd 30,128(11)\n-FUNC_START(_rest64gpr_31_x)\tlwz 0,148(11)\n+HIDDEN_FUNC(_rest64gpr_14_x)\tevldd 14,0(11)\n+HIDDEN_FUNC(_rest64gpr_15_x)\tevldd 15,8(11)\n+HIDDEN_FUNC(_rest64gpr_16_x)\tevldd 16,16(11)\n+HIDDEN_FUNC(_rest64gpr_17_x)\tevldd 17,24(11)\n+HIDDEN_FUNC(_rest64gpr_18_x)\tevldd 18,32(11)\n+HIDDEN_FUNC(_rest64gpr_19_x)\tevldd 19,40(11)\n+HIDDEN_FUNC(_rest64gpr_20_x)\tevldd 20,48(11)\n+HIDDEN_FUNC(_rest64gpr_21_x)\tevldd 21,56(11)\n+HIDDEN_FUNC(_rest64gpr_22_x)\tevldd 22,64(11)\n+HIDDEN_FUNC(_rest64gpr_23_x)\tevldd 23,72(11)\n+HIDDEN_FUNC(_rest64gpr_24_x)\tevldd 24,80(11)\n+HIDDEN_FUNC(_rest64gpr_25_x)\tevldd 25,88(11)\n+HIDDEN_FUNC(_rest64gpr_26_x)\tevldd 26,96(11)\n+HIDDEN_FUNC(_rest64gpr_27_x)\tevldd 27,104(11)\n+HIDDEN_FUNC(_rest64gpr_28_x)\tevldd 28,112(11)\n+HIDDEN_FUNC(_rest64gpr_29_x)\tevldd 29,120(11)\n+HIDDEN_FUNC(_rest64gpr_30_x)\tevldd 30,128(11)\n+HIDDEN_FUNC(_rest64gpr_31_x)\tlwz 0,148(11)\n \t\t\t\tevldd 31,136(11)\n \t\t\t\taddi 1,11,144\n \t\t\t\tmtlr 0"}, {"sha": "042784955602d4de8b0591bfb59dfac017a28135", "filename": "gcc/config/rs6000/e500crtsav32gpr.asm", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1590a11567d7fea4cf0c492bb722e491f003f814/gcc%2Fconfig%2Frs6000%2Fe500crtsav32gpr.asm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1590a11567d7fea4cf0c492bb722e491f003f814/gcc%2Fconfig%2Frs6000%2Fe500crtsav32gpr.asm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fe500crtsav32gpr.asm?ref=1590a11567d7fea4cf0c492bb722e491f003f814", "patch": "@@ -42,24 +42,24 @@\n /* Routines for saving 32-bit integer registers, called by the compiler.  */\n /* \"Bare\" versions that simply return to their caller.  */\n \n-FUNC_START(_save32gpr_14)\tstw 14,-72(11)\n-FUNC_START(_save32gpr_15)\tstw 15,-68(11)\n-FUNC_START(_save32gpr_16)\tstw 16,-64(11)\n-FUNC_START(_save32gpr_17)\tstw 17,-60(11)\n-FUNC_START(_save32gpr_18)\tstw 18,-56(11)\n-FUNC_START(_save32gpr_19)\tstw 19,-52(11)\n-FUNC_START(_save32gpr_20)\tstw 20,-48(11)\n-FUNC_START(_save32gpr_21)\tstw 21,-44(11)\n-FUNC_START(_save32gpr_22)\tstw 22,-40(11)\n-FUNC_START(_save32gpr_23)\tstw 23,-36(11)\n-FUNC_START(_save32gpr_24)\tstw 24,-32(11)\n-FUNC_START(_save32gpr_25)\tstw 25,-28(11)\n-FUNC_START(_save32gpr_26)\tstw 26,-24(11)\n-FUNC_START(_save32gpr_27)\tstw 27,-20(11)\n-FUNC_START(_save32gpr_28)\tstw 28,-16(11)\n-FUNC_START(_save32gpr_29)\tstw 29,-12(11)\n-FUNC_START(_save32gpr_30)\tstw 30,-8(11)\n-FUNC_START(_save32gpr_31)\tstw 31,-4(11)\n+HIDDEN_FUNC(_save32gpr_14)\tstw 14,-72(11)\n+HIDDEN_FUNC(_save32gpr_15)\tstw 15,-68(11)\n+HIDDEN_FUNC(_save32gpr_16)\tstw 16,-64(11)\n+HIDDEN_FUNC(_save32gpr_17)\tstw 17,-60(11)\n+HIDDEN_FUNC(_save32gpr_18)\tstw 18,-56(11)\n+HIDDEN_FUNC(_save32gpr_19)\tstw 19,-52(11)\n+HIDDEN_FUNC(_save32gpr_20)\tstw 20,-48(11)\n+HIDDEN_FUNC(_save32gpr_21)\tstw 21,-44(11)\n+HIDDEN_FUNC(_save32gpr_22)\tstw 22,-40(11)\n+HIDDEN_FUNC(_save32gpr_23)\tstw 23,-36(11)\n+HIDDEN_FUNC(_save32gpr_24)\tstw 24,-32(11)\n+HIDDEN_FUNC(_save32gpr_25)\tstw 25,-28(11)\n+HIDDEN_FUNC(_save32gpr_26)\tstw 26,-24(11)\n+HIDDEN_FUNC(_save32gpr_27)\tstw 27,-20(11)\n+HIDDEN_FUNC(_save32gpr_28)\tstw 28,-16(11)\n+HIDDEN_FUNC(_save32gpr_29)\tstw 29,-12(11)\n+HIDDEN_FUNC(_save32gpr_30)\tstw 30,-8(11)\n+HIDDEN_FUNC(_save32gpr_31)\tstw 31,-4(11)\n \t\t\t\tblr\n FUNC_END(_save32gpr_31)\n FUNC_END(_save32gpr_30)"}, {"sha": "0e4fd209f9ecb95d78ae61f6cff975a8a801ef22", "filename": "gcc/config/rs6000/e500crtsav64gpr.asm", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1590a11567d7fea4cf0c492bb722e491f003f814/gcc%2Fconfig%2Frs6000%2Fe500crtsav64gpr.asm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1590a11567d7fea4cf0c492bb722e491f003f814/gcc%2Fconfig%2Frs6000%2Fe500crtsav64gpr.asm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fe500crtsav64gpr.asm?ref=1590a11567d7fea4cf0c492bb722e491f003f814", "patch": "@@ -41,24 +41,24 @@\n \n /* Routines for saving 64-bit integer registers, called by the compiler.  */\n \n-FUNC_START(_save64gpr_14)\tevstdd 14,0(11)\n-FUNC_START(_save64gpr_15)\tevstdd 15,8(11)\n-FUNC_START(_save64gpr_16)\tevstdd 16,16(11)\n-FUNC_START(_save64gpr_17)\tevstdd 17,24(11)\n-FUNC_START(_save64gpr_18)\tevstdd 18,32(11)\n-FUNC_START(_save64gpr_19)\tevstdd 19,40(11)\n-FUNC_START(_save64gpr_20)\tevstdd 20,48(11)\n-FUNC_START(_save64gpr_21)\tevstdd 21,56(11)\n-FUNC_START(_save64gpr_22)\tevstdd 22,64(11)\n-FUNC_START(_save64gpr_23)\tevstdd 23,72(11)\n-FUNC_START(_save64gpr_24)\tevstdd 24,80(11)\n-FUNC_START(_save64gpr_25)\tevstdd 25,88(11)\n-FUNC_START(_save64gpr_26)\tevstdd 26,96(11)\n-FUNC_START(_save64gpr_27)\tevstdd 27,104(11)\n-FUNC_START(_save64gpr_28)\tevstdd 28,112(11)\n-FUNC_START(_save64gpr_29)\tevstdd 29,120(11)\n-FUNC_START(_save64gpr_30)\tevstdd 30,128(11)\n-FUNC_START(_save64gpr_31)\tevstdd 31,136(11)\n+HIDDEN_FUNC(_save64gpr_14)\tevstdd 14,0(11)\n+HIDDEN_FUNC(_save64gpr_15)\tevstdd 15,8(11)\n+HIDDEN_FUNC(_save64gpr_16)\tevstdd 16,16(11)\n+HIDDEN_FUNC(_save64gpr_17)\tevstdd 17,24(11)\n+HIDDEN_FUNC(_save64gpr_18)\tevstdd 18,32(11)\n+HIDDEN_FUNC(_save64gpr_19)\tevstdd 19,40(11)\n+HIDDEN_FUNC(_save64gpr_20)\tevstdd 20,48(11)\n+HIDDEN_FUNC(_save64gpr_21)\tevstdd 21,56(11)\n+HIDDEN_FUNC(_save64gpr_22)\tevstdd 22,64(11)\n+HIDDEN_FUNC(_save64gpr_23)\tevstdd 23,72(11)\n+HIDDEN_FUNC(_save64gpr_24)\tevstdd 24,80(11)\n+HIDDEN_FUNC(_save64gpr_25)\tevstdd 25,88(11)\n+HIDDEN_FUNC(_save64gpr_26)\tevstdd 26,96(11)\n+HIDDEN_FUNC(_save64gpr_27)\tevstdd 27,104(11)\n+HIDDEN_FUNC(_save64gpr_28)\tevstdd 28,112(11)\n+HIDDEN_FUNC(_save64gpr_29)\tevstdd 29,120(11)\n+HIDDEN_FUNC(_save64gpr_30)\tevstdd 30,128(11)\n+HIDDEN_FUNC(_save64gpr_31)\tevstdd 31,136(11)\n \t\t\t\tblr\n FUNC_END(_save64gpr_31)\n FUNC_END(_save64gpr_30)"}, {"sha": "00215a451658d2f269180cd11b23d98fd2ae4953", "filename": "gcc/config/rs6000/e500crtsav64gprctr.asm", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1590a11567d7fea4cf0c492bb722e491f003f814/gcc%2Fconfig%2Frs6000%2Fe500crtsav64gprctr.asm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1590a11567d7fea4cf0c492bb722e491f003f814/gcc%2Fconfig%2Frs6000%2Fe500crtsav64gprctr.asm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fe500crtsav64gprctr.asm?ref=1590a11567d7fea4cf0c492bb722e491f003f814", "patch": "@@ -43,41 +43,41 @@\n    registers to be saved is passed in CTR, called by the compiler.  */\n /* \"Bare\" versions that return to their caller.  */\n \n-FUNC_START(_save64gpr_ctr_14)\tevstdd 14,0(11)\n+HIDDEN_FUNC(_save64gpr_ctr_14)\tevstdd 14,0(11)\n \t\t\t\tbdz _save64_gpr_ctr_done\n-FUNC_START(_save64gpr_ctr_15)\tevstdd 15,8(11)\n+HIDDEN_FUNC(_save64gpr_ctr_15)\tevstdd 15,8(11)\n \t\t\t\tbdz _save64_gpr_ctr_done\n-FUNC_START(_save64gpr_ctr_16)\tevstdd 16,16(11)\n+HIDDEN_FUNC(_save64gpr_ctr_16)\tevstdd 16,16(11)\n \t\t\t\tbdz _save64_gpr_ctr_done\n-FUNC_START(_save64gpr_ctr_17)\tevstdd 17,24(11)\n+HIDDEN_FUNC(_save64gpr_ctr_17)\tevstdd 17,24(11)\n \t\t\t\tbdz _save64_gpr_ctr_done\n-FUNC_START(_save64gpr_ctr_18)\tevstdd 18,32(11)\n+HIDDEN_FUNC(_save64gpr_ctr_18)\tevstdd 18,32(11)\n \t\t\t\tbdz _save64_gpr_ctr_done\n-FUNC_START(_save64gpr_ctr_19)\tevstdd 19,40(11)\n+HIDDEN_FUNC(_save64gpr_ctr_19)\tevstdd 19,40(11)\n \t\t\t\tbdz _save64_gpr_ctr_done\n-FUNC_START(_save64gpr_ctr_20)\tevstdd 20,48(11)\n+HIDDEN_FUNC(_save64gpr_ctr_20)\tevstdd 20,48(11)\n \t\t\t\tbdz _save64_gpr_ctr_done\n-FUNC_START(_save64gpr_ctr_21)\tevstdd 21,56(11)\n+HIDDEN_FUNC(_save64gpr_ctr_21)\tevstdd 21,56(11)\n \t\t\t\tbdz _save64_gpr_ctr_done\n-FUNC_START(_save64gpr_ctr_22)\tevstdd 22,64(11)\n+HIDDEN_FUNC(_save64gpr_ctr_22)\tevstdd 22,64(11)\n \t\t\t\tbdz _save64_gpr_ctr_done\n-FUNC_START(_save64gpr_ctr_23)\tevstdd 23,72(11)\n+HIDDEN_FUNC(_save64gpr_ctr_23)\tevstdd 23,72(11)\n \t\t\t\tbdz _save64_gpr_ctr_done\n-FUNC_START(_save64gpr_ctr_24)\tevstdd 24,80(11)\n+HIDDEN_FUNC(_save64gpr_ctr_24)\tevstdd 24,80(11)\n \t\t\t\tbdz _save64_gpr_ctr_done\n-FUNC_START(_save64gpr_ctr_25)\tevstdd 25,88(11)\n+HIDDEN_FUNC(_save64gpr_ctr_25)\tevstdd 25,88(11)\n \t\t\t\tbdz _save64_gpr_ctr_done\n-FUNC_START(_save64gpr_ctr_26)\tevstdd 26,96(11)\n+HIDDEN_FUNC(_save64gpr_ctr_26)\tevstdd 26,96(11)\n \t\t\t\tbdz _save64_gpr_ctr_done\n-FUNC_START(_save64gpr_ctr_27)\tevstdd 27,104(11)\n+HIDDEN_FUNC(_save64gpr_ctr_27)\tevstdd 27,104(11)\n \t\t\t\tbdz _save64_gpr_ctr_done\n-FUNC_START(_save64gpr_ctr_28)\tevstdd 28,112(11)\n+HIDDEN_FUNC(_save64gpr_ctr_28)\tevstdd 28,112(11)\n \t\t\t\tbdz _save64_gpr_ctr_done\n-FUNC_START(_save64gpr_ctr_29)\tevstdd 29,120(11)\n+HIDDEN_FUNC(_save64gpr_ctr_29)\tevstdd 29,120(11)\n \t\t\t\tbdz _save64_gpr_ctr_done\n-FUNC_START(_save64gpr_ctr_30)\tevstdd 30,128(11)\n+HIDDEN_FUNC(_save64gpr_ctr_30)\tevstdd 30,128(11)\n \t\t\t\tbdz _save64_gpr_ctr_done\n-FUNC_START(_save64gpr_ctr_31)\tevstdd 31,136(11)\n+HIDDEN_FUNC(_save64gpr_ctr_31)\tevstdd 31,136(11)\n _save64gpr_ctr_done:\t\tblr\n FUNC_END(_save64gpr_ctr_31)\n FUNC_END(_save64gpr_ctr_30)"}, {"sha": "b3f081dc4eb8eb74436b60baf01e22f9a8925523", "filename": "gcc/config/rs6000/e500crtsavg32gpr.asm", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1590a11567d7fea4cf0c492bb722e491f003f814/gcc%2Fconfig%2Frs6000%2Fe500crtsavg32gpr.asm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1590a11567d7fea4cf0c492bb722e491f003f814/gcc%2Fconfig%2Frs6000%2Fe500crtsavg32gpr.asm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fe500crtsavg32gpr.asm?ref=1590a11567d7fea4cf0c492bb722e491f003f814", "patch": "@@ -42,24 +42,24 @@\n /* Routines for saving 32-bit integer registers, called by the compiler.  */\n /* \"GOT\" versions that load the address of the GOT into lr before returning.  */\n \n-FUNC_START(_save32gpr_14_g)\tstw 14,-72(11)\n-FUNC_START(_save32gpr_15_g)\tstw 15,-68(11)\n-FUNC_START(_save32gpr_16_g)\tstw 16,-64(11)\n-FUNC_START(_save32gpr_17_g)\tstw 17,-60(11)\n-FUNC_START(_save32gpr_18_g)\tstw 18,-56(11)\n-FUNC_START(_save32gpr_19_g)\tstw 19,-52(11)\n-FUNC_START(_save32gpr_20_g)\tstw 20,-48(11)\n-FUNC_START(_save32gpr_21_g)\tstw 21,-44(11)\n-FUNC_START(_save32gpr_22_g)\tstw 22,-40(11)\n-FUNC_START(_save32gpr_23_g)\tstw 23,-36(11)\n-FUNC_START(_save32gpr_24_g)\tstw 24,-32(11)\n-FUNC_START(_save32gpr_25_g)\tstw 25,-28(11)\n-FUNC_START(_save32gpr_26_g)\tstw 26,-24(11)\n-FUNC_START(_save32gpr_27_g)\tstw 27,-20(11)\n-FUNC_START(_save32gpr_28_g)\tstw 28,-16(11)\n-FUNC_START(_save32gpr_29_g)\tstw 29,-12(11)\n-FUNC_START(_save32gpr_30_g)\tstw 30,-8(11)\n-FUNC_START(_save32gpr_31_g)\tstw 31,-4(11)\n+HIDDEN_FUNC(_save32gpr_14_g)\tstw 14,-72(11)\n+HIDDEN_FUNC(_save32gpr_15_g)\tstw 15,-68(11)\n+HIDDEN_FUNC(_save32gpr_16_g)\tstw 16,-64(11)\n+HIDDEN_FUNC(_save32gpr_17_g)\tstw 17,-60(11)\n+HIDDEN_FUNC(_save32gpr_18_g)\tstw 18,-56(11)\n+HIDDEN_FUNC(_save32gpr_19_g)\tstw 19,-52(11)\n+HIDDEN_FUNC(_save32gpr_20_g)\tstw 20,-48(11)\n+HIDDEN_FUNC(_save32gpr_21_g)\tstw 21,-44(11)\n+HIDDEN_FUNC(_save32gpr_22_g)\tstw 22,-40(11)\n+HIDDEN_FUNC(_save32gpr_23_g)\tstw 23,-36(11)\n+HIDDEN_FUNC(_save32gpr_24_g)\tstw 24,-32(11)\n+HIDDEN_FUNC(_save32gpr_25_g)\tstw 25,-28(11)\n+HIDDEN_FUNC(_save32gpr_26_g)\tstw 26,-24(11)\n+HIDDEN_FUNC(_save32gpr_27_g)\tstw 27,-20(11)\n+HIDDEN_FUNC(_save32gpr_28_g)\tstw 28,-16(11)\n+HIDDEN_FUNC(_save32gpr_29_g)\tstw 29,-12(11)\n+HIDDEN_FUNC(_save32gpr_30_g)\tstw 30,-8(11)\n+HIDDEN_FUNC(_save32gpr_31_g)\tstw 31,-4(11)\n \t\t\t\tb _GLOBAL_OFFSET_TABLE_-4\n FUNC_END(_save32gpr_31_g)\n FUNC_END(_save32gpr_30_g)"}, {"sha": "1ecff2aa56dd661294c1e19e91748acba1258677", "filename": "gcc/config/rs6000/e500crtsavg64gpr.asm", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1590a11567d7fea4cf0c492bb722e491f003f814/gcc%2Fconfig%2Frs6000%2Fe500crtsavg64gpr.asm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1590a11567d7fea4cf0c492bb722e491f003f814/gcc%2Fconfig%2Frs6000%2Fe500crtsavg64gpr.asm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fe500crtsavg64gpr.asm?ref=1590a11567d7fea4cf0c492bb722e491f003f814", "patch": "@@ -42,24 +42,24 @@\n /* Routines for saving 64-bit integer registers, called by the compiler.  */\n /* \"GOT\" versions that load the address of the GOT into lr before returning.  */\n \n-FUNC_START(_save64gpr_14_g)\tevstdd 14,0(11)\n-FUNC_START(_save64gpr_15_g)\tevstdd 15,8(11)\n-FUNC_START(_save64gpr_16_g)\tevstdd 16,16(11)\n-FUNC_START(_save64gpr_17_g)\tevstdd 17,24(11)\n-FUNC_START(_save64gpr_18_g)\tevstdd 18,32(11)\n-FUNC_START(_save64gpr_19_g)\tevstdd 19,40(11)\n-FUNC_START(_save64gpr_20_g)\tevstdd 20,48(11)\n-FUNC_START(_save64gpr_21_g)\tevstdd 21,56(11)\n-FUNC_START(_save64gpr_22_g)\tevstdd 22,64(11)\n-FUNC_START(_save64gpr_23_g)\tevstdd 23,72(11)\n-FUNC_START(_save64gpr_24_g)\tevstdd 24,80(11)\n-FUNC_START(_save64gpr_25_g)\tevstdd 25,88(11)\n-FUNC_START(_save64gpr_26_g)\tevstdd 26,96(11)\n-FUNC_START(_save64gpr_27_g)\tevstdd 27,104(11)\n-FUNC_START(_save64gpr_28_g)\tevstdd 28,112(11)\n-FUNC_START(_save64gpr_29_g)\tevstdd 29,120(11)\n-FUNC_START(_save64gpr_30_g)\tevstdd 30,128(11)\n-FUNC_START(_save64gpr_31_g)\tevstdd 31,136(11)\n+HIDDEN_FUNC(_save64gpr_14_g)\tevstdd 14,0(11)\n+HIDDEN_FUNC(_save64gpr_15_g)\tevstdd 15,8(11)\n+HIDDEN_FUNC(_save64gpr_16_g)\tevstdd 16,16(11)\n+HIDDEN_FUNC(_save64gpr_17_g)\tevstdd 17,24(11)\n+HIDDEN_FUNC(_save64gpr_18_g)\tevstdd 18,32(11)\n+HIDDEN_FUNC(_save64gpr_19_g)\tevstdd 19,40(11)\n+HIDDEN_FUNC(_save64gpr_20_g)\tevstdd 20,48(11)\n+HIDDEN_FUNC(_save64gpr_21_g)\tevstdd 21,56(11)\n+HIDDEN_FUNC(_save64gpr_22_g)\tevstdd 22,64(11)\n+HIDDEN_FUNC(_save64gpr_23_g)\tevstdd 23,72(11)\n+HIDDEN_FUNC(_save64gpr_24_g)\tevstdd 24,80(11)\n+HIDDEN_FUNC(_save64gpr_25_g)\tevstdd 25,88(11)\n+HIDDEN_FUNC(_save64gpr_26_g)\tevstdd 26,96(11)\n+HIDDEN_FUNC(_save64gpr_27_g)\tevstdd 27,104(11)\n+HIDDEN_FUNC(_save64gpr_28_g)\tevstdd 28,112(11)\n+HIDDEN_FUNC(_save64gpr_29_g)\tevstdd 29,120(11)\n+HIDDEN_FUNC(_save64gpr_30_g)\tevstdd 30,128(11)\n+HIDDEN_FUNC(_save64gpr_31_g)\tevstdd 31,136(11)\n \t\t\t\tb _GLOBAL_OFFSET_TABLE_-4\n FUNC_END(_save64gpr_31_g)\n FUNC_END(_save64gpr_30_g)"}, {"sha": "e048d1b9f812d920464dbc258c90451f63e9a03b", "filename": "gcc/config/rs6000/e500crtsavg64gprctr.asm", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1590a11567d7fea4cf0c492bb722e491f003f814/gcc%2Fconfig%2Frs6000%2Fe500crtsavg64gprctr.asm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1590a11567d7fea4cf0c492bb722e491f003f814/gcc%2Fconfig%2Frs6000%2Fe500crtsavg64gprctr.asm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fe500crtsavg64gprctr.asm?ref=1590a11567d7fea4cf0c492bb722e491f003f814", "patch": "@@ -42,41 +42,41 @@\n /* Routines for saving 64-bit integer registers, called by the compiler.  */\n /* \"GOT\" versions that load the address of the GOT into lr before returning.  */\n \n-FUNC_START(_save64gpr_ctr_14_g)\tevstdd 14,0(11)\n+HIDDEN_FUNC(_save64gpr_ctr_14_g)\tevstdd 14,0(11)\n \t\t\t\tbdz _save64_gpr_ctr_g_done\n-FUNC_START(_save64gpr_ctr_15_g)\tevstdd 15,8(11)\n+HIDDEN_FUNC(_save64gpr_ctr_15_g)\tevstdd 15,8(11)\n \t\t\t\tbdz _save64_gpr_ctr_g_done\n-FUNC_START(_save64gpr_ctr_16_g)\tevstdd 16,16(11)\n+HIDDEN_FUNC(_save64gpr_ctr_16_g)\tevstdd 16,16(11)\n \t\t\t\tbdz _save64_gpr_ctr_g_done\n-FUNC_START(_save64gpr_ctr_17_g)\tevstdd 17,24(11)\n+HIDDEN_FUNC(_save64gpr_ctr_17_g)\tevstdd 17,24(11)\n \t\t\t\tbdz _save64_gpr_ctr_g_done\n-FUNC_START(_save64gpr_ctr_18_g)\tevstdd 18,32(11)\n+HIDDEN_FUNC(_save64gpr_ctr_18_g)\tevstdd 18,32(11)\n \t\t\t\tbdz _save64_gpr_ctr_g_done\n-FUNC_START(_save64gpr_ctr_19_g)\tevstdd 19,40(11)\n+HIDDEN_FUNC(_save64gpr_ctr_19_g)\tevstdd 19,40(11)\n \t\t\t\tbdz _save64_gpr_ctr_g_done\n-FUNC_START(_save64gpr_ctr_20_g)\tevstdd 20,48(11)\n+HIDDEN_FUNC(_save64gpr_ctr_20_g)\tevstdd 20,48(11)\n \t\t\t\tbdz _save64_gpr_ctr_g_done\n-FUNC_START(_save64gpr_ctr_21_g)\tevstdd 21,56(11)\n+HIDDEN_FUNC(_save64gpr_ctr_21_g)\tevstdd 21,56(11)\n \t\t\t\tbdz _save64_gpr_ctr_g_done\n-FUNC_START(_save64gpr_ctr_22_g)\tevstdd 22,64(11)\n+HIDDEN_FUNC(_save64gpr_ctr_22_g)\tevstdd 22,64(11)\n \t\t\t\tbdz _save64_gpr_ctr_g_done\n-FUNC_START(_save64gpr_ctr_23_g)\tevstdd 23,72(11)\n+HIDDEN_FUNC(_save64gpr_ctr_23_g)\tevstdd 23,72(11)\n \t\t\t\tbdz _save64_gpr_ctr_g_done\n-FUNC_START(_save64gpr_ctr_24_g)\tevstdd 24,80(11)\n+HIDDEN_FUNC(_save64gpr_ctr_24_g)\tevstdd 24,80(11)\n \t\t\t\tbdz _save64_gpr_ctr_g_done\n-FUNC_START(_save64gpr_ctr_25_g)\tevstdd 25,88(11)\n+HIDDEN_FUNC(_save64gpr_ctr_25_g)\tevstdd 25,88(11)\n \t\t\t\tbdz _save64_gpr_ctr_g_done\n-FUNC_START(_save64gpr_ctr_26_g)\tevstdd 26,96(11)\n+HIDDEN_FUNC(_save64gpr_ctr_26_g)\tevstdd 26,96(11)\n \t\t\t\tbdz _save64_gpr_ctr_g_done\n-FUNC_START(_save64gpr_ctr_27_g)\tevstdd 27,104(11)\n+HIDDEN_FUNC(_save64gpr_ctr_27_g)\tevstdd 27,104(11)\n \t\t\t\tbdz _save64_gpr_ctr_g_done\n-FUNC_START(_save64gpr_ctr_28_g)\tevstdd 28,112(11)\n+HIDDEN_FUNC(_save64gpr_ctr_28_g)\tevstdd 28,112(11)\n \t\t\t\tbdz _save64_gpr_ctr_g_done\n-FUNC_START(_save64gpr_ctr_29_g)\tevstdd 29,120(11)\n+HIDDEN_FUNC(_save64gpr_ctr_29_g)\tevstdd 29,120(11)\n \t\t\t\tbdz _save64_gpr_ctr_g_done\n-FUNC_START(_save64gpr_ctr_30_g)\tevstdd 30,128(11)\n+HIDDEN_FUNC(_save64gpr_ctr_30_g)\tevstdd 30,128(11)\n \t\t\t\tbdz _save64_gpr_ctr_g_done\n-FUNC_START(_save64gpr_ctr_31_g)\tevstdd 31,136(11)\n+HIDDEN_FUNC(_save64gpr_ctr_31_g)\tevstdd 31,136(11)\n _save64gpr_ctr_g_done:\t\tb _GLOBAL_OFFSET_TABLE_-4\n FUNC_END(_save64gpr_ctr_31_g)\n FUNC_END(_save64gpr_ctr_30_g)"}, {"sha": "7f39a2a43043112aa203234319a97faf768311a3", "filename": "gcc/config/rs6000/ppc-asm.h", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1590a11567d7fea4cf0c492bb722e491f003f814/gcc%2Fconfig%2Frs6000%2Fppc-asm.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1590a11567d7fea4cf0c492bb722e491f003f814/gcc%2Fconfig%2Frs6000%2Fppc-asm.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fppc-asm.h?ref=1590a11567d7fea4cf0c492bb722e491f003f814", "patch": "@@ -110,6 +110,11 @@ name: \\\n \t.globl GLUE(.,name); \\\n GLUE(.,name):\n \n+#define HIDDEN_FUNC(name) \\\n+  FUNC_START(name) \\\n+  .hidden name;\t\\\n+  .hidden GLUE(.,name);\n+\n #define FUNC_END(name) \\\n GLUE(.L,name): \\\n \t.size GLUE(.,name),GLUE(.L,name)-GLUE(.,name)\n@@ -136,6 +141,11 @@ name: \\\n \t.globl GLUE(.,name); \\\n GLUE(.,name):\n \n+#define HIDDEN_FUNC(name) \\\n+  FUNC_START(name) \\\n+  .hidden name; \\\n+  .hidden GLUE(.,name);\n+\n #define FUNC_END(name) \\\n GLUE(.L,name): \\\n \t.size GLUE(.,name),GLUE(.L,name)-GLUE(.,name)\n@@ -153,6 +163,10 @@ GLUE(.L,name): \\\n \t.globl FUNC_NAME(name); \\\n FUNC_NAME(name):\n \n+#define HIDDEN_FUNC(name) \\\n+  FUNC_START(name) \\\n+  .hidden FUNC_NAME(name);\n+\n #define FUNC_END(name) \\\n GLUE(.L,name): \\\n \t.size FUNC_NAME(name),GLUE(.L,name)-FUNC_NAME(name)"}, {"sha": "b42a12b37f7a6d7b44d8228f7066d253121fbe66", "filename": "gcc/doc/install.texi", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1590a11567d7fea4cf0c492bb722e491f003f814/gcc%2Fdoc%2Finstall.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1590a11567d7fea4cf0c492bb722e491f003f814/gcc%2Fdoc%2Finstall.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finstall.texi?ref=1590a11567d7fea4cf0c492bb722e491f003f814", "patch": "@@ -3653,6 +3653,10 @@ information about using GCC on IRIX platforms.\n You can specify a default version for the @option{-mcpu=@var{cpu_type}}\n switch by using the configure option @option{--with-cpu-@var{cpu_type}}.\n \n+You will need\n+@uref{ftp://ftp.kernel.org/pub/linux/devel/binutils,,binutils 2.15}\n+or newer for a working GCC@.\n+\n @html\n <hr />\n @end html\n@@ -3681,9 +3685,7 @@ PowerPC system in big endian mode, running System V.4.\n @end html\n @heading @anchor{powerpc-x-linux-gnu}powerpc*-*-linux-gnu*\n \n-You will need\n-@uref{ftp://ftp.kernel.org/pub/linux/devel/binutils,,binutils 2.15}\n-or newer for a working GCC@.\n+PowerPC system in big endian mode running Linux.\n \n @html\n <hr />"}]}