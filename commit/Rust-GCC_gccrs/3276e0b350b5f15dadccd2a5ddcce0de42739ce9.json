{"sha": "3276e0b350b5f15dadccd2a5ddcce0de42739ce9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzI3NmUwYjM1MGI1ZjE1ZGFkY2NkMmE1ZGRjY2UwZGU0MjczOWNlOQ==", "commit": {"author": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2009-07-08T04:38:06Z"}, "committer": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2009-07-08T04:38:06Z"}, "message": "re PR fortran/40591 (Procedure(interface): Rejected if interface is indirectly hostassociated)\n\n2008-07-08  Paul Thomas  <pault@gcc.gnu.org>\n\n\tPR fortran/40591\n\t* decl.c (match_procedure_interface):  Correct the association\n\tor creation of the interface procedure's symbol.\n\n2008-07-08  Paul Thomas  <pault@gcc.gnu.org>\n\n\tPR fortran/40591\n\t* gfortran.dg/proc_ptr_21.f90: New test.\n\nFrom-SVN: r149362", "tree": {"sha": "6d4026fe8045642d5fa69016eab58b1c0b876efe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6d4026fe8045642d5fa69016eab58b1c0b876efe"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3276e0b350b5f15dadccd2a5ddcce0de42739ce9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3276e0b350b5f15dadccd2a5ddcce0de42739ce9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3276e0b350b5f15dadccd2a5ddcce0de42739ce9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3276e0b350b5f15dadccd2a5ddcce0de42739ce9/comments", "author": null, "committer": null, "parents": [{"sha": "d1b5afd55742da70e645bf0fd4be9e39e0379576", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d1b5afd55742da70e645bf0fd4be9e39e0379576", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d1b5afd55742da70e645bf0fd4be9e39e0379576"}], "stats": {"total": 70, "additions": 64, "deletions": 6}, "files": [{"sha": "371fddeb35fc6354baeaa331f7740f82ec7ffada", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3276e0b350b5f15dadccd2a5ddcce0de42739ce9/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3276e0b350b5f15dadccd2a5ddcce0de42739ce9/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=3276e0b350b5f15dadccd2a5ddcce0de42739ce9", "patch": "@@ -1,3 +1,9 @@\n+2008-07-08  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/40591\n+\t* decl.c (match_procedure_interface):  Correct the association\n+\tor creation of the interface procedure's symbol.\n+\n 2009-07-04  Jakub Jelinek  <jakub@redhat.com>\n \n \t* trans-intrinsic.c (gfc_conv_intrinsic_minmaxloc): For integer"}, {"sha": "e2816348643bbce14ea4cc5bbe5797aaf2623e05", "filename": "gcc/fortran/decl.c", "status": "modified", "additions": 21, "deletions": 6, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3276e0b350b5f15dadccd2a5ddcce0de42739ce9/gcc%2Ffortran%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3276e0b350b5f15dadccd2a5ddcce0de42739ce9/gcc%2Ffortran%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fdecl.c?ref=3276e0b350b5f15dadccd2a5ddcce0de42739ce9", "patch": "@@ -4156,9 +4156,12 @@ static match\n match_procedure_interface (gfc_symbol **proc_if)\n {\n   match m;\n+  gfc_symtree *st;\n   locus old_loc, entry_loc;\n-  old_loc = entry_loc = gfc_current_locus;\n+  gfc_namespace *old_ns = gfc_current_ns;\n+  char name[GFC_MAX_SYMBOL_LEN + 1];\n \n+  old_loc = entry_loc = gfc_current_locus;\n   gfc_clear_ts (&current_ts);\n \n   if (gfc_match (\" (\") != MATCH_YES)\n@@ -4177,13 +4180,25 @@ match_procedure_interface (gfc_symbol **proc_if)\n   if (m == MATCH_ERROR)\n     return m;\n \n+  /* Procedure interface is itself a procedure.  */\n   gfc_current_locus = old_loc;\n+  m = gfc_match_name (name);\n \n-  /* Get the name of the procedure or abstract interface\n-  to inherit the interface from.  */\n-  m = gfc_match_symbol (proc_if, 1);\n-  if (m != MATCH_YES)\n-    return m;\n+  /* First look to see if it is already accessible in the current\n+     namespace because it is use associated or contained.  */\n+  st = NULL;\n+  if (gfc_find_sym_tree (name, NULL, 0, &st))\n+    return MATCH_ERROR;\n+\n+  /* If it is still not found, then try the parent namespace, if it\n+     exists and create the symbol there if it is still not found.  */\n+  if (gfc_current_ns->parent)\n+    gfc_current_ns = gfc_current_ns->parent;\n+  if (st == NULL && gfc_get_ha_sym_tree (name, &st))\n+    return MATCH_ERROR;\n+\n+  gfc_current_ns = old_ns;\n+  *proc_if = st->n.sym;\n \n   /* Various interface checks.  */\n   if (*proc_if)"}, {"sha": "c3603d18b722deb9b07aeee4f99197a411f7c0db", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3276e0b350b5f15dadccd2a5ddcce0de42739ce9/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3276e0b350b5f15dadccd2a5ddcce0de42739ce9/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3276e0b350b5f15dadccd2a5ddcce0de42739ce9", "patch": "@@ -1,3 +1,8 @@\n+2008-07-08  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/40591\n+\t* gfortran.dg/proc_ptr_21.f90: New test.\n+\n 2009-07-08  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n \t\n \tPR c++/31246"}, {"sha": "312dca941baecacc4d3bf95b8711b928c9d42e73", "filename": "gcc/testsuite/gfortran.dg/proc_ptr_21.f90", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3276e0b350b5f15dadccd2a5ddcce0de42739ce9/gcc%2Ftestsuite%2Fgfortran.dg%2Fproc_ptr_21.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3276e0b350b5f15dadccd2a5ddcce0de42739ce9/gcc%2Ftestsuite%2Fgfortran.dg%2Fproc_ptr_21.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fproc_ptr_21.f90?ref=3276e0b350b5f15dadccd2a5ddcce0de42739ce9", "patch": "@@ -0,0 +1,32 @@\n+! { dg-do run }\r\n+! Tests the fix for PR40591 in which the interface 'sub2'\r\n+! for 'pptr2' was not resolved.\r\n+!\r\n+! Contributed by Tobias Burnus  <burnus@gcc.gnu.org>\r\n+!\r\n+program main\r\n+  call test\r\n+contains\r\n+  subroutine sub1(arg)\n+    integer arg\n+    arg = arg + 1\r\n+  end subroutine sub1\r\n+  subroutine test()\r\n+    procedure(sub1), pointer :: pptr1\r\n+    procedure(sub2), pointer :: pptr2\n+    integer i\r\n+    pptr1 => sub1\n+    call pptr1 (i)\r\n+    pptr1 => sub2\n+    call pptr1 (i)\r\n+    pptr2 => sub1\n+    call pptr2 (i)\r\n+    pptr2 => sub2\n+    call pptr2 (i)\n+    if (i .ne. 22) call abort\r\n+  end subroutine test\r\n+  subroutine sub2(arg)\n+    integer arg\n+    arg = arg + 10\r\n+  end subroutine sub2\r\n+end program main\r"}]}