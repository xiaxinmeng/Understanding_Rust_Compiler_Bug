{"sha": "408e31a2dd76f5813f37027c99fbcfb04bda808b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDA4ZTMxYTJkZDc2ZjU4MTNmMzcwMjdjOTlmYmNmYjA0YmRhODA4Yg==", "commit": {"author": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2003-03-13T00:15:59Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2003-03-13T00:15:59Z"}, "message": "index.html: Explain memory \"leaks\" due to allocators.\n\n2003-03-12  Jonathan Wakely  <redi@gcc.gnu.org>\n\n\t* docs/html/faq/index.html: Explain memory \"leaks\" due to allocators.\n\t* docs/html/faq/index.txt: Regenerate.\n\t* docs/html/debug.html: Add a bit to allocator text and fix XHTML.\n\nFrom-SVN: r64273", "tree": {"sha": "23a25adf2b7a28532dc3f634b1e2b5562ad3dd68", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/23a25adf2b7a28532dc3f634b1e2b5562ad3dd68"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/408e31a2dd76f5813f37027c99fbcfb04bda808b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/408e31a2dd76f5813f37027c99fbcfb04bda808b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/408e31a2dd76f5813f37027c99fbcfb04bda808b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/408e31a2dd76f5813f37027c99fbcfb04bda808b/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "03d0dce1607d56ad75f07ec893d1f6e15d7e5c6c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03d0dce1607d56ad75f07ec893d1f6e15d7e5c6c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/03d0dce1607d56ad75f07ec893d1f6e15d7e5c6c"}], "stats": {"total": 334, "additions": 184, "deletions": 150}, "files": [{"sha": "3acb4a46fbb532f8d3853fa0e0f69893bdc9d6ca", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/408e31a2dd76f5813f37027c99fbcfb04bda808b/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/408e31a2dd76f5813f37027c99fbcfb04bda808b/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=408e31a2dd76f5813f37027c99fbcfb04bda808b", "patch": "@@ -1,3 +1,9 @@\n+2003-03-12  Jonathan Wakely  <redi@gcc.gnu.org>\n+\n+\t* docs/html/faq/index.html: Explain memory \"leaks\" due to allocators.\n+\t* docs/html/faq/index.txt: Regenerate.\n+\t* docs/html/debug.html: Add a bit to allocator text and fix XHTML.\n+\n 2003-03-12  Andreas Schwab  <schwab@suse.de>\n \n \t* acinclude.m4 (GLIBCPP_EXPORT_INSTALL_INFO): Avoid trailing /. in"}, {"sha": "0ca332c7346849a0bbfc984e766720d203071791", "filename": "libstdc++-v3/docs/html/debug.html", "status": "modified", "additions": 27, "deletions": 25, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/408e31a2dd76f5813f37027c99fbcfb04bda808b/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fdebug.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/408e31a2dd76f5813f37027c99fbcfb04bda808b/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fdebug.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fdebug.html?ref=408e31a2dd76f5813f37027c99fbcfb04bda808b", "patch": "@@ -17,13 +17,13 @@\n <h1 class=\"centered\"><a name=\"top\">Debugging schemes and strategies</a></h1>\n \n <p class=\"fineprint\"><em>\n-<p>The latest version of this document is always available at\n+   The latest version of this document is always available at\n    <a href=\"http://gcc.gnu.org/onlinedocs/libstdc++/debug.html\">\n    http://gcc.gnu.org/onlinedocs/libstdc++/debug.html</a>.\n-</p>\n+</em></p>\n \n-<p>To the <a href=\"http://gcc.gnu.org/libstdc++/\">libstdc++-v3 homepage</a>.\n-</p>\n+<p><em>\n+   To the <a href=\"http://gcc.gnu.org/libstdc++/\">libstdc++-v3 homepage</a>.\n </em></p>\n \n <!-- ####################################################### -->\n@@ -34,7 +34,7 @@ <h1 class=\"centered\"><a name=\"top\">Debugging schemes and strategies</a></h1>\n    code with GNU tools.\n </p>\n \n-<h3 class=\"left\"><a name=\"g++\">Compiler flags determine debug info</a></h3>\n+<h3 class=\"left\"><a name=\"gplusplus\">Compiler flags determine debug info</a></h3>\n <p>The default optimizations and debug flags for a libstdc++ build are\n    <code>-g -O2</code>. However, both debug and optimization flags can\n    be varied to change debugging characteristics. For instance,\n@@ -52,38 +52,39 @@ <h3 class=\"left\"><a name=\"g++\">Compiler flags determine debug info</a></h3>\n </p>\n \n <p>Many other options are available: please see\n-<a href=http://gcc.gnu.org/onlinedocs/gcc/Debugging-Options.html#Debugging%20Options> \"Options for Debugging Your Program\" </a>\n+<a href=\"http://gcc.gnu.org/onlinedocs/gcc/Debugging-Options.html#Debugging%20Options\">\"Options for Debugging Your Program\"</a>\n    in Using the GNU Compiler Collection (GCC) for a complete list.\n </p>\n \n \n <h3 class=\"left\"><a name=\"lib\">Using special flags to make a debug binary</a></h3>\n <p>There are two ways to build libstdc++ with debug flags. The first\n    is to run make from the toplevel in a freshly-configured tree with\n-   specialized debug <code>CXXFLAGS</code>, as in <dd> <code> make\n-   CXXFLAGS='-g3 -O0' all </code></dd>\n+   specialized debug <code>CXXFLAGS</code>, as in\n </p>\n+<pre>\n+     make CXXFLAGS='-g3 -O0' all\n+</pre>\n \n <p>This quick and dirty approach is often sufficient for quick\n    debugging tasks, but the lack of state can be confusing in the long\n    term.\n </p>\n-\n <p>A second approach is to use the configuration flags \n </p>\n-\n-   <dd><code>--enable-debug</code></dd>\n-\n+<pre>\n+     --enable-debug\n+</pre>\n <p>and perhaps</p>\n-\n-   <dd><code>--enable-debug-flags='...'</code></dd>\n-\n+<pre>\n+     --enable-debug-flags='...'\n+</pre>\n <p>to create a separate debug build. Both the normal build and the\n    debug build will persist, without having to specify\n    <code>CXXFLAGS</code>, and the debug library will be installed in a\n    separate directory tree, in <code>(prefix)/lib/debug</code>. For\n-   more information, look at the configuration options document \n-<a href=http://gcc.gnu.org/onlinedocs/libstdc++/configopts.html>here</a>\n+   more information, look at the <a href=\"configopts.html\">configuration\n+   options</a> document.\n </p>\n \n \n@@ -92,7 +93,7 @@ <h3 class=\"left\"><a name=\"mem\">Tips for memory leak hunting</a></h3>\n <p>There are various third party memory tracing and debug utilities\n    that can be used to provide detailed memory allocation information\n    about C++ code. An exhaustive list of tools is not going to be\n-   attempted, but include <code>mtrace</code>, <code>valgrind</code>,\n+   attempted, but includes <code>mtrace</code>, <code>valgrind</code>,\n    <code>mudflap</code>, and <code>purify</code>. Also highly\n    recommended are <code>libcwd</code> and some other one that I\n    forget right now.\n@@ -103,14 +104,15 @@ <h3 class=\"left\"><a name=\"mem\">Tips for memory leak hunting</a></h3>\n    that uses <code>new</code> and <code>delete</code>:\n    there are different kinds of allocation schemes that can be used by\n    <code> std::allocator </code>. For implementation details, see this\n-   <a href=http://gcc.gnu.org/onlinedocs/libstdc++/ext/howto.html#3>\n-   document </a> and look specifically for <code>GLIBCPP_FORCE_NEW</code>. \n+   <a href=\"ext/howto.html#3\"> document</a> and look specifically for\n+   <code>GLIBCPP_FORCE_NEW</code>. \n </p>\n \n <p>In a nutshell, the default allocator used by <code>\n    std::allocator</code> is a high-performance pool allocator, and can\n    give the mistaken impression that memory is being leaked, when in\n-   reality the memory is reclaimed after program termination.\n+   reality the memory is still being used by the library and is reclaimed\n+   after program termination.\n </p>\n \n <p>For valgrind, there are some specific items to keep in mind. First\n@@ -164,15 +166,15 @@ <h3 class=\"left\"><a name=\"mem\">Tips for memory leak hunting</a></h3>\n \n <p>Suggested valgrind flags, given the suggestions above about setting\n    up the runtime environment, library, and test file, might be:\n- \n-   <dd><code>valgrind -v --num-callers=20 --leak-check=yes\n-   --leak-resolution=high --show-reachable=yes a.out</code></dd>\n </p>\n+<pre> \n+   valgrind -v --num-callers=20 --leak-check=yes --leak-resolution=high --show-reachable=yes a.out\n+</pre>\n \n \n <h3 class=\"left\"><a name=\"gdb\">Some gdb strategies</a></h3>\n <p>Many options are available for gdb itself: please see <a\n-   href=http://sources.redhat.com/gdb/current/onlinedocs/gdb_13.html#SEC109>\n+   href=\"http://sources.redhat.com/gdb/current/onlinedocs/gdb_13.html#SEC109\">\n    \"GDB features for C++\" </a> in the gdb documentation. Also\n    recommended: the other parts of this manual.\n </p>"}, {"sha": "099283420cf1f68596e8fc5c313a91debb9bf9c9", "filename": "libstdc++-v3/docs/html/faq/index.html", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/408e31a2dd76f5813f37027c99fbcfb04bda808b/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Ffaq%2Findex.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/408e31a2dd76f5813f37027c99fbcfb04bda808b/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Ffaq%2Findex.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Ffaq%2Findex.html?ref=408e31a2dd76f5813f37027c99fbcfb04bda808b", "patch": "@@ -94,6 +94,7 @@ <h1>Questions</h1>\n                                <em>constraints</em> in the STL...</a> </li>\n            <li><a href=\"#4_4_dlsym\">program crashes when using library code\n                                in a dynamically-loaded library</a> </li>\n+           <li><a href=\"#4_4_leak\">\"memory leaks\" in containers</a> </li>\n          </ul>\n          </li>\n          <li><a href=\"#4_5\">Aw, that's easy to fix!</a> </li>\n@@ -795,6 +796,18 @@ <h3><a name=\"4_4_interface\">The g++-3 headers are <em>not ours</em></a></h3>\n \n     // link the executable\n     g++ -fPIC -rdynamic -o foo ... -L. -lfoo -ldl</pre>\n+      <p><a name=\"4_4_leak\"><strong>\"memory leaks\" in containers</strong></a>\n+         A few people have reported that the standard containers appear\n+         to leak memory when tested with memory checkers such as\n+         <a href=\"http://developer.kde.org/~sewardj/\">valgrind</a>.\n+         The library's default allocators keep free memory in a pool\n+         for later reuse, rather than returning it to the OS.  Although\n+         this memory is always reachable by the library and is never\n+         lost, memory debugging tools can report it as a leak.  If you\n+         want to test the library for memory leaks please read\n+         <a href=\"../debug.html#mem\">Tips for memory leak hunting</a>\n+         first.\n+      </p>\n \n <hr />\n    <h2><a name=\"4_5\">4.5 Aw, that's easy to fix!</a></h2>"}, {"sha": "3dd49c7f8d70318bcdb113b1ae5e1797530f2182", "filename": "libstdc++-v3/docs/html/faq/index.txt", "status": "modified", "additions": 138, "deletions": 125, "changes": 263, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/408e31a2dd76f5813f37027c99fbcfb04bda808b/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Ffaq%2Findex.txt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/408e31a2dd76f5813f37027c99fbcfb04bda808b/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Ffaq%2Findex.txt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Ffaq%2Findex.txt?ref=408e31a2dd76f5813f37027c99fbcfb04bda808b", "patch": "@@ -51,17 +51,18 @@\n                o [40]errors about *Concept and constraints in the STL...\n                o [41]program crashes when using library code in a\n                  dynamically-loaded library\n-         5. [42]Aw, that's easy to fix!\n-    5. [43]Miscellaneous\n-         1. [44]string::iterator is not char*; vector<T>::iterator is not\n+               o [42]\"memory leaks\" in containers\n+         5. [43]Aw, that's easy to fix!\n+    5. [44]Miscellaneous\n+         1. [45]string::iterator is not char*; vector<T>::iterator is not\n             T*\n-         2. [45]What's next after libstdc++-v3?\n-         3. [46]What about the STL from SGI?\n-         4. [47]Extensions and Backward Compatibility\n-         5. [48][removed]\n-         6. [49]Is libstdc++-v3 thread-safe?\n-         7. [50]How do I get a copy of the ISO C++ Standard?\n-         8. [51]What's an ABI and why is it so messy?\n+         2. [46]What's next after libstdc++-v3?\n+         3. [47]What about the STL from SGI?\n+         4. [48]Extensions and Backward Compatibility\n+         5. [49][removed]\n+         6. [50]Is libstdc++-v3 thread-safe?\n+         7. [51]How do I get a copy of the ISO C++ Standard?\n+         8. [52]What's an ABI and why is it so messy?\n      _________________________________________________________________\n \n                             1.0 General Information\n@@ -71,19 +72,19 @@\n    The GNU Standard C++ Library v3 is an ongoing project to implement the\n    ISO 14882 Standard C++ library as described in chapters 17 through 27\n    and annex D. As the library reaches stable plateaus, it is captured in\n-   a snapshot and released. The latest release is [52]the fourteenth\n+   a snapshot and released. The latest release is [53]the fourteenth\n    snapshot but newer versions have been included in recent GCC releases.\n    For those who want to see exactly how far the project has come, or\n    just want the latest bleeding-edge code, the up-to-date source is\n    available over anonymous CVS, and can even be browsed over the Web\n-   (see [53]1.4 below).\n+   (see [54]1.4 below).\n \n    The older libstdc++-v2 project is no longer maintained; the code has\n-   been completely replaced and rewritten. [54]If you are using V2, then\n+   been completely replaced and rewritten. [55]If you are using V2, then\n    you need to report bugs to your system vendor, not to the V3 list.\n \n    A more formal description of the V3 goals can be found in the official\n-   [55]design document.\n+   [56]design document.\n      _________________________________________________________________\n \n 1.2 Why should I use libstdc++?\n@@ -96,8 +97,8 @@\n \n    The GNU C/C++/FORTRAN/<pick-a-language> compiler (gcc, g++, etc) is\n    widely considered to be one of the leading compilers in the world. Its\n-   development has recently been taken over by the [56]GCC team. All of\n-   the rapid development and near-legendary [57]portability that are the\n+   development has recently been taken over by the [57]GCC team. All of\n+   the rapid development and near-legendary [58]portability that are the\n    hallmarks of an open-source project are being applied to libstdc++.\n \n    That means that all of the Standard classes and functions (such as\n@@ -115,16 +116,16 @@\n \n    Development and discussion is held on the libstdc++ mailing list.\n    Subscribing to the list, or searching the list archives, is open to\n-   everyone. You can read instructions for doing so on the [58]homepage.\n+   everyone. You can read instructions for doing so on the [59]homepage.\n    If you have questions, ideas, code, or are just curious, sign up!\n      _________________________________________________________________\n \n 1.4 How do I get libstdc++?\n \n-   The fourteenth (and latest) snapshot of libstdc++-v3 is [59]available\n+   The fourteenth (and latest) snapshot of libstdc++-v3 is [60]available\n    via ftp.\n \n-   The [60]homepage has instructions for retrieving the latest CVS\n+   The [61]homepage has instructions for retrieving the latest CVS\n    sources, and for browsing the CVS sources over the web.\n \n    The subset commonly known as the Standard Template Library (chapters\n@@ -140,7 +141,7 @@\n \n 1.6 How do I contribute to the effort?\n \n-   Here is [61]a page devoted to this topic. Subscribing to the mailing\n+   Here is [62]a page devoted to this topic. Subscribing to the mailing\n    list (see above, or the homepage) is a very good idea if you have\n    something to contribute, or if you have spare time and want to help.\n    Contributions don't have to be in the form of source code; anybody who\n@@ -175,11 +176,11 @@\n    extracted into an updated utilities library, but nobody has stated\n    such a project yet.\n \n-   (The [62]Boost site houses free C++ libraries that do varying things,\n+   (The [63]Boost site houses free C++ libraries that do varying things,\n    and happened to be started by members of the Standards Committee.\n    Certain \"useful stuff\" classes will probably migrate there.)\n \n-   For the bold and/or desperate, the [63]GCC extensions page describes\n+   For the bold and/or desperate, the [64]GCC extensions page describes\n    where to find the last libg++ source.\n      _________________________________________________________________\n \n@@ -189,16 +190,16 @@\n    remains unanswered, then just ask the mailing list. At present, you do\n    not need to be subscribed to the list to send a message to it. More\n    information is available on the homepage (including how to browse the\n-   list archives); to send to the list, use [64]libstdc++@gcc.gnu.org.\n+   list archives); to send to the list, use [65]libstdc++@gcc.gnu.org.\n \n    If you have a question that you think should be included here, or if\n-   you have a question about a question/answer here, contact [65]Phil\n-   Edwards or [66]Gabriel Dos Reis.\n+   you have a question about a question/answer here, contact [66]Phil\n+   Edwards or [67]Gabriel Dos Reis.\n      _________________________________________________________________\n \n 1.9 What are the license terms for libstdc++-v3?\n \n-   See [67]our license description for these and related questions.\n+   See [68]our license description for these and related questions.\n      _________________________________________________________________\n \n                                2.0 Installation\n@@ -215,13 +216,13 @@\n      * The GNU Autotools are needed if you are messing with the configury\n        or makefiles.\n \n-   The file [68]documentation.html provides a good overview of the steps\n+   The file [69]documentation.html provides a good overview of the steps\n    necessary to build, install, and use the library. Instructions for\n    configuring the library with new flags such as --enable-threads are\n    there also, as well as patches and instructions for working with GCC\n    2.95.\n \n-   The top-level install.html and [69]RELEASE-NOTES files contain the\n+   The top-level install.html and [70]RELEASE-NOTES files contain the\n    exact build and installation instructions. You may wish to browse\n    those files over CVSweb ahead of time to get a feel for what's\n    required. RELEASE-NOTES is located in the \".../docs/17_intro/\"\n@@ -238,8 +239,8 @@\n \n    The Concurrent Versions System is one of several revision control\n    packages. It was selected for GNU projects because it's free (speech),\n-   free (beer), and very high quality. The [70]CVS entry in the GNU\n-   software catalogue has a better description as well as a [71]link to\n+   free (beer), and very high quality. The [71]CVS entry in the GNU\n+   software catalogue has a better description as well as a [72]link to\n    the makers of CVS.\n \n    The \"anonymous client checkout\" feature of CVS is similar to anonymous\n@@ -290,7 +291,7 @@\n    people don't like it, so here are two pseudo-solutions:\n \n    If the only functions from libstdc++.a which you need are language\n-   support functions (those listed in [72]clause 18 of the standard,\n+   support functions (those listed in [73]clause 18 of the standard,\n    e.g., new and delete), then try linking against libsupc++.a (usually\n    specifying -lsupc++ when calling g++ for the final link step will do\n    it). This library contains only those support routines, one per object\n@@ -385,7 +386,7 @@\n    - < /dev/null\" to display a list of predefined macros for any\n    particular installation.\n \n-   This has been discussed on the mailing lists [73]quite a bit.\n+   This has been discussed on the mailing lists [74]quite a bit.\n \n    This method is something of a wart. We'd like to find a cleaner\n    solution, but nobody yet has contributed the time.\n@@ -394,7 +395,7 @@\n 3.6 OS X ctype.h is broken! How can I hack it?\n \n    This is a long-standing bug in the OS X support. Fortunately, the\n-   patch is quite simple, and well-known. [74]Here's a link to the\n+   patch is quite simple, and well-known. [75]Here's a link to the\n    solution.\n      _________________________________________________________________\n \n@@ -432,7 +433,7 @@\n    enable itself.\n \n    You can fix the problems yourself, and learn more about the situation,\n-   by reading [75]this short thread (\"_GLIBCPP_USE_WCHAR_T undefined in\n+   by reading [76]this short thread (\"_GLIBCPP_USE_WCHAR_T undefined in\n    FreeBSD's c++config.h?\").\n      _________________________________________________________________\n \n@@ -445,15 +446,15 @@\n \n    For 3.0.1, the most common \"bug\" is an apparently missing \"../\" in\n    include/Makefile, resulting in files like gthr.h and gthr-single.h not\n-   being found. Please read [76]the configuration instructions for GCC,\n+   being found. Please read [77]the configuration instructions for GCC,\n    specifically the part about configuring in a separate build directory,\n    and how strongly recommended it is. Building in the source directory\n    is fragile, is rarely tested, and tends to break, as in this case.\n    This was fixed for 3.0.2.\n \n    For 3.1, the most common \"bug\" is a parse error when using <fstream>,\n    ending with a message, \"bits/basic_file.h:52: parse error before `{'\n-   token.\" Please read [77]the installation instructions for GCC,\n+   token.\" Please read [78]the installation instructions for GCC,\n    specifically the part about not installing newer versions on top of\n    older versions. If you install 3.1 over a 3.0.x release, then the\n    wrong basic_file.h header will be found (its location changed between\n@@ -522,30 +523,30 @@ New:\n    libstdc++. If you are experiencing one of these problems, you can find\n    more information on the libstdc++ and the GCC mailing lists.\n \n-   Before reporting a bug, examine the [78]bugs database with the\n+   Before reporting a bug, examine the [79]bugs database with the\n    category set to \"libstdc++\". The BUGS file in the source tree also\n    tracks known serious problems.\n      * Debugging is problematic, due to bugs in line-number generation\n        (mostly fixed in the compiler) and gdb lagging behind the compiler\n        (lack of personnel). We recommend configuring the compiler using\n        --with-dwarf2 if the DWARF2 debugging format is not already the\n-       default on your platform. Also, [79]changing your GDB settings can\n+       default on your platform. Also, [80]changing your GDB settings can\n        have a profound effect on your C++ debugging experiences. :-)\n      _________________________________________________________________\n \n 4.3 Bugs in the C++ language/lib specification\n \n-   Yes, unfortunately, there are some. In a [80]message to the list,\n+   Yes, unfortunately, there are some. In a [81]message to the list,\n    Nathan Myers announced that he has started a list of problems in the\n    ISO C++ Standard itself, especially with regard to the chapters that\n-   concern the library. The list itself is [81]posted on his website.\n+   concern the library. The list itself is [82]posted on his website.\n    Developers who are having problems interpreting the Standard may wish\n    to consult his notes.\n \n    For those people who are not part of the ISO Library Group (i.e.,\n    nearly all of us needing to read this page in the first place :-), a\n-   public list of the library defects is occasionally published [82]here.\n-   Some of these have resulted in [83]code changes.\n+   public list of the library defects is occasionally published [83]here.\n+   Some of these have resulted in [84]code changes.\n      _________________________________________________________________\n \n 4.4 Things in libstdc++ that only look like bugs\n@@ -577,7 +578,7 @@ New:\n    state on the previous file. The reason is that the state flags are not\n    cleared on a successful call to open(). The standard unfortunately did\n    not specify behavior in this case, and to everybody's great sorrow,\n-   the [84]proposed LWG resolution (see DR #22) is to leave the flags\n+   the [85]proposed LWG resolution (see DR #22) is to leave the flags\n    unchanged. You must insert a call to fs.clear() between the calls to\n    close() and open(), and then everything will work like we all expect\n    it to work.\n@@ -587,15 +588,15 @@ New:\n    same namespace as other comparison functions (e.g., 'using' them and\n    the <iterator> header), then you will suddenly be faced with huge\n    numbers of ambiguity errors. This was discussed on the -v3 list;\n-   Nathan Myers [85]sums things up here. The collisions with\n+   Nathan Myers [86]sums things up here. The collisions with\n    vector/string iterator types have been fixed for 3.1.\n \n   The g++-3 headers are not ours\n \n    If you have found an extremely broken header file which is causing\n    problems for you, look carefully before submitting a \"high\" priority\n    bug report (which you probably shouldn't do anyhow; see the last\n-   paragraph of the page describing [86]the GCC bug database).\n+   paragraph of the page describing [87]the GCC bug database).\n \n    If the headers are in ${prefix}/include/g++-3, or if the installed\n    library's name looks like libstdc++-2.10.a or libstdc++-libc6-2.10.so,\n@@ -620,7 +621,7 @@ type has changed in glibc 2.2.  The patch is at\n http://clisp.cons.org/~haible/gccinclude-glibc-2.2-compat.diff\n \n \n-   Note that 2.95.x shipped with the [87]old v2 library which is no\n+   Note that 2.95.x shipped with the [88]old v2 library which is no\n    longer maintained. Also note that gcc 2.95.3 fixes this problem, but\n    requires a separate patch for libstdc++-v3.\n \n@@ -633,7 +634,7 @@ http://clisp.cons.org/~haible/gccinclude-glibc-2.2-compat.diff\n    visibility, or you just plain forgot, etc).\n \n    More information, including how to optionally enable/disable the\n-   checks, is available [88]here.\n+   checks, is available [89]here.\n \n    dlopen/dlsym If you are using the C++ library across\n    dynamically-loaded objects, make certain that you are passing the\n@@ -649,22 +650,31 @@ http://clisp.cons.org/~haible/gccinclude-glibc-2.2-compat.diff\n \n     // link the executable\n     g++ -fPIC -rdynamic -o foo ... -L. -lfoo -ldl\n+\n+   \"memory leaks\" in containers A few people have reported that the\n+   standard containers appear to leak memory when tested with memory\n+   checkers such as [90]valgrind. The library's default allocators keep\n+   free memory in a pool for later reuse, rather than returning it to the\n+   OS. Although this memory is always reachable by the library and is\n+   never lost, memory debugging tools can report it as a leak. If you\n+   want to test the library for memory leaks please read [91]Tips for\n+   memory leak hunting first.\n      _________________________________________________________________\n \n 4.5 Aw, that's easy to fix!\n \n    If you have found a bug in the library and you think you have a\n    working fix, then send it in! The main GCC site has a page on\n-   [89]submitting patches that covers the procedure, but for libstdc++\n+   [92]submitting patches that covers the procedure, but for libstdc++\n    you should also send the patch to our mailing list in addition to the\n-   GCC patches mailing list. The libstdc++ [90]contributors' page also\n+   GCC patches mailing list. The libstdc++ [93]contributors' page also\n    talks about how to submit patches.\n \n    In addition to the description, the patch, and the ChangeLog entry, it\n    is a Good Thing if you can additionally create a small test program to\n    test for the presence of the bug that your patch fixes. Bugs have a\n    way of being reintroduced; if an old bug creeps back in, it will be\n-   caught immediately by the [91]testsuite -- but only if such a test\n+   caught immediately by the [94]testsuite -- but only if such a test\n    exists.\n      _________________________________________________________________\n \n@@ -698,7 +708,7 @@ http://clisp.cons.org/~haible/gccinclude-glibc-2.2-compat.diff\n        libstdc++. Some of that is already happening, see 4.2. Some of\n        those changes are being predicted by the library maintainers, and\n        we add code to the library based on what the current proposed\n-       resolution specifies. Those additions are listed in [92]the\n+       resolution specifies. Those additions are listed in [95]the\n        extensions page.\n     2. Performance tuning. Lots of performance tuning. This too is\n        already underway for post-3.0 releases, starting with memory\n@@ -714,13 +724,13 @@ http://clisp.cons.org/~haible/gccinclude-glibc-2.2-compat.diff\n        type from C99.) Bugfixes and rewrites (to improve or fix thread\n        safety, for instance) will of course be a continuing task.\n \n-   [93]This question about the next libstdc++ prompted some brief but\n-   interesting [94]speculation.\n+   [96]This question about the next libstdc++ prompted some brief but\n+   interesting [97]speculation.\n      _________________________________________________________________\n \n 5.3 What about the STL from SGI?\n \n-   The [95]STL from SGI, version 3.3, was the most recent merge of the\n+   The [98]STL from SGI, version 3.3, was the most recent merge of the\n    STL codebase. The code in libstdc++ contains many fixes and changes,\n    and it is very likely that the SGI code is no longer under active\n    development. We expect that no future merges will take place.\n@@ -769,7 +779,7 @@ http://clisp.cons.org/~haible/gccinclude-glibc-2.2-compat.diff\n    This is a bit cleaner than defining typedefs for all the\n    instantiations you might need.\n \n-   Extensions to the library have [96]their own page.\n+   Extensions to the library have [99]their own page.\n      _________________________________________________________________\n \n 5.5 [removed]\n@@ -818,8 +828,8 @@ a\n    otherwise documented as safe, do not assume that two threads may\n    access a shared standard library object at the same time.\n \n-   See chapters [97]17 (library introduction), [98]23 (containers), and\n-   [99]27 (I/O) for more information.\n+   See chapters [100]17 (library introduction), [101]23 (containers), and\n+   [102]27 (I/O) for more information.\n      _________________________________________________________________\n \n 5.7 How do I get a copy of the ISO C++ Standard?\n@@ -830,11 +840,11 @@ a\n    their two-meeting commitment for voting rights, may get a copy of the\n    standard from their respective national standards organization. In the\n    USA, this national standards organization is ANSI and their website is\n-   right [100]here. (And if you've already registered with them, clicking\n+   right [103]here. (And if you've already registered with them, clicking\n    this link will take you to directly to the place where you can\n-   [101]buy the standard on-line.\n+   [104]buy the standard on-line.\n \n-   Who is your country's member body? Visit the [102]ISO homepage and\n+   Who is your country's member body? Visit the [105]ISO homepage and\n    find out!\n      _________________________________________________________________\n \n@@ -885,8 +895,8 @@ a\n    encompasses the standard library.\n      _________________________________________________________________\n \n-   See [103]license.html for copying conditions. Comments and suggestions\n-   are welcome, and may be sent to [104]the libstdc++ mailing list. \n+   See [106]license.html for copying conditions. Comments and suggestions\n+   are welcome, and may be sent to [107]the libstdc++ mailing list. \n \n References\n \n@@ -931,66 +941,69 @@ References\n   39. ../faq/index.html#4_4_glibc\n   40. ../faq/index.html#4_4_checks\n   41. ../faq/index.html#4_4_dlsym\n-  42. ../faq/index.html#4_5\n-  43. ../faq/index.html#5_0\n-  44. ../faq/index.html#5_1\n-  45. ../faq/index.html#5_2\n-  46. ../faq/index.html#5_3\n-  47. ../faq/index.html#5_4\n-  48. ../faq/index.html#5_5\n-  49. ../faq/index.html#5_6\n-  50. ../faq/index.html#5_7\n-  51. ../faq/index.html#5_8\n-  52. http://gcc.gnu.org/libstdc++/index.html#download\n-  53. ../faq/index.html#1_4\n-  54. ../faq/index.html#4_4_interface\n-  55. ../17_intro/DESIGN\n-  56. http://gcc.gnu.org/\n-  57. http://gcc.gnu.org/gcc-3.0/buildstat.html\n-  58. http://gcc.gnu.org/libstdc++/\n-  59. http://gcc.gnu.org/libstdc++/index.html#download\n-  60. http://gcc.gnu.org/libstdc++/\n-  61. ../17_intro/contribute.html\n-  62. http://www.boost.org/\n-  63. http://gcc.gnu.org/extensions.html\n-  64. mailto:libstdc++@gcc.gnu.org\n-  65. mailto:pme@gcc.gnu.org\n-  66. mailto:gdr@gcc.gnu.org\n-  67. ../17_intro/license.html\n-  68. ../documentation.html\n-  69. ../17_intro/RELEASE-NOTES\n-  70. http://www.gnu.org/software/cvs/cvs.html\n-  71. http://www.cvshome.org/\n-  72. ../18_support/howto.html\n-  73. http://gcc.gnu.org/cgi-bin/htsearch?method=and&format=builtin-long&sort=score&words=_XOPEN_SOURCE+Solaris\n-  74. http://gcc.gnu.org/ml/gcc/2002-03/msg00817.html\n-  75. http://gcc.gnu.org/ml/libstdc++/2003-02/subjects.html#00286\n-  76. http://gcc.gnu.org/install/configure.html\n-  77. http://gcc.gnu.org/install/\n-  78. http://gcc.gnu.org/bugs.html\n-  79. http://gcc.gnu.org/ml/libstdc++/2002-02/msg00034.html\n-  80. http://gcc.gnu.org/ml/libstdc++/1998/msg00006.html\n-  81. http://www.cantrip.org/draft-bugs.txt\n-  82. http://anubis.dkuug.dk/jtc1/sc22/wg21/\n-  83. ../faq/index.html#5_2\n-  84. ../ext/howto.html#5\n-  85. http://gcc.gnu.org/ml/libstdc++/2001-01/msg00247.html\n-  86. http://gcc.gnu.org/gnatswrite.html\n-  87. ../faq/index.html#4_4_interface\n-  88. ../19_diagnostics/howto.html#3\n-  89. http://gcc.gnu.org/contribute.html\n-  90. ../17_intro/contribute.html\n-  91. ../faq/index.html#2_4\n-  92. ../ext/howto.html#5\n-  93. http://gcc.gnu.org/ml/libstdc++/1999/msg00080.html\n-  94. http://gcc.gnu.org/ml/libstdc++/1999/msg00084.html\n-  95. http://www.sgi.com/Technology/STL/\n-  96. ../ext/howto.html\n-  97. ../17_intro/howto.html#3\n-  98. ../23_containers/howto.html#3\n-  99. ../27_io/howto.html#9\n- 100. http://www.ansi.org/\n- 101. http://webstore.ansi.org/ansidocstore/product.asp?sku=ISO%2FIEC+14882%2D1998\n- 102. http://www.iso.ch/\n- 103. ../17_intro/license.html\n- 104. mailto:libstdc++@gcc.gnu.org\n+  42. ../faq/index.html#4_4_leak\n+  43. ../faq/index.html#4_5\n+  44. ../faq/index.html#5_0\n+  45. ../faq/index.html#5_1\n+  46. ../faq/index.html#5_2\n+  47. ../faq/index.html#5_3\n+  48. ../faq/index.html#5_4\n+  49. ../faq/index.html#5_5\n+  50. ../faq/index.html#5_6\n+  51. ../faq/index.html#5_7\n+  52. ../faq/index.html#5_8\n+  53. http://gcc.gnu.org/libstdc++/index.html#download\n+  54. ../faq/index.html#1_4\n+  55. ../faq/index.html#4_4_interface\n+  56. ../17_intro/DESIGN\n+  57. http://gcc.gnu.org/\n+  58. http://gcc.gnu.org/gcc-3.0/buildstat.html\n+  59. http://gcc.gnu.org/libstdc++/\n+  60. http://gcc.gnu.org/libstdc++/index.html#download\n+  61. http://gcc.gnu.org/libstdc++/\n+  62. ../17_intro/contribute.html\n+  63. http://www.boost.org/\n+  64. http://gcc.gnu.org/extensions.html\n+  65. mailto:libstdc++@gcc.gnu.org\n+  66. mailto:pme@gcc.gnu.org\n+  67. mailto:gdr@gcc.gnu.org\n+  68. ../17_intro/license.html\n+  69. ../documentation.html\n+  70. ../17_intro/RELEASE-NOTES\n+  71. http://www.gnu.org/software/cvs/cvs.html\n+  72. http://www.cvshome.org/\n+  73. ../18_support/howto.html\n+  74. http://gcc.gnu.org/cgi-bin/htsearch?method=and&format=builtin-long&sort=score&words=_XOPEN_SOURCE+Solaris\n+  75. http://gcc.gnu.org/ml/gcc/2002-03/msg00817.html\n+  76. http://gcc.gnu.org/ml/libstdc++/2003-02/subjects.html#00286\n+  77. http://gcc.gnu.org/install/configure.html\n+  78. http://gcc.gnu.org/install/\n+  79. http://gcc.gnu.org/bugs.html\n+  80. http://gcc.gnu.org/ml/libstdc++/2002-02/msg00034.html\n+  81. http://gcc.gnu.org/ml/libstdc++/1998/msg00006.html\n+  82. http://www.cantrip.org/draft-bugs.txt\n+  83. http://anubis.dkuug.dk/jtc1/sc22/wg21/\n+  84. ../faq/index.html#5_2\n+  85. ../ext/howto.html#5\n+  86. http://gcc.gnu.org/ml/libstdc++/2001-01/msg00247.html\n+  87. http://gcc.gnu.org/gnatswrite.html\n+  88. ../faq/index.html#4_4_interface\n+  89. ../19_diagnostics/howto.html#3\n+  90. http://developer.kde.org/~sewardj/\n+  91. ../debug.html#mem\n+  92. http://gcc.gnu.org/contribute.html\n+  93. ../17_intro/contribute.html\n+  94. ../faq/index.html#2_4\n+  95. ../ext/howto.html#5\n+  96. http://gcc.gnu.org/ml/libstdc++/1999/msg00080.html\n+  97. http://gcc.gnu.org/ml/libstdc++/1999/msg00084.html\n+  98. http://www.sgi.com/Technology/STL/\n+  99. ../ext/howto.html\n+ 100. ../17_intro/howto.html#3\n+ 101. ../23_containers/howto.html#3\n+ 102. ../27_io/howto.html#9\n+ 103. http://www.ansi.org/\n+ 104. http://webstore.ansi.org/ansidocstore/product.asp?sku=ISO%2FIEC+14882%2D1998\n+ 105. http://www.iso.ch/\n+ 106. ../17_intro/license.html\n+ 107. mailto:libstdc++@gcc.gnu.org"}]}