{"sha": "3b1f091c4b6881cd60f6f37c31b0054e04d137cc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2IxZjA5MWM0YjY4ODFjZDYwZjZmMzdjMzFiMDA1NGUwNGQxMzdjYw==", "commit": {"author": {"name": "Michael Ploujnikov", "email": "michael.ploujnikov@oracle.com", "date": "2019-01-21T19:04:04Z"}, "committer": {"name": "Michael Ploujnikov", "email": "plouj@gcc.gnu.org", "date": "2019-01-21T19:04:04Z"}, "message": "hash-map-tests.c (test_map_of_strings_to_int): Show how to use string contents as hash_map keys.\n\n\t* hash-map-tests.c (test_map_of_strings_to_int): Show how to use\n\tstring contents as hash_map keys.\n\nFrom-SVN: r268121", "tree": {"sha": "0dae35d7f9650ce70726e092cb7b4e781f5a1406", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0dae35d7f9650ce70726e092cb7b4e781f5a1406"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3b1f091c4b6881cd60f6f37c31b0054e04d137cc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b1f091c4b6881cd60f6f37c31b0054e04d137cc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3b1f091c4b6881cd60f6f37c31b0054e04d137cc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b1f091c4b6881cd60f6f37c31b0054e04d137cc/comments", "author": {"login": "plouj-oracle", "id": 7086511, "node_id": "MDQ6VXNlcjcwODY1MTE=", "avatar_url": "https://avatars.githubusercontent.com/u/7086511?v=4", "gravatar_id": "", "url": "https://api.github.com/users/plouj-oracle", "html_url": "https://github.com/plouj-oracle", "followers_url": "https://api.github.com/users/plouj-oracle/followers", "following_url": "https://api.github.com/users/plouj-oracle/following{/other_user}", "gists_url": "https://api.github.com/users/plouj-oracle/gists{/gist_id}", "starred_url": "https://api.github.com/users/plouj-oracle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/plouj-oracle/subscriptions", "organizations_url": "https://api.github.com/users/plouj-oracle/orgs", "repos_url": "https://api.github.com/users/plouj-oracle/repos", "events_url": "https://api.github.com/users/plouj-oracle/events{/privacy}", "received_events_url": "https://api.github.com/users/plouj-oracle/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9011fa06de952258f7e514bd37c5265a73d15781", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9011fa06de952258f7e514bd37c5265a73d15781", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9011fa06de952258f7e514bd37c5265a73d15781"}], "stats": {"total": 25, "additions": 25, "deletions": 0}, "files": [{"sha": "5ca20aed5da459ecf9be2526fc133017900dc953", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b1f091c4b6881cd60f6f37c31b0054e04d137cc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b1f091c4b6881cd60f6f37c31b0054e04d137cc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3b1f091c4b6881cd60f6f37c31b0054e04d137cc", "patch": "@@ -1,3 +1,8 @@\n+2019-01-21  Michael Ploujnikov  <michael.ploujnikov@oracle.com>\n+\n+\t* hash-map-tests.c (test_map_of_strings_to_int): Show how to use\n+\tstring contents as hash_map keys.\n+\n 2019-01-21  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n \n \tPR c/88928"}, {"sha": "2137464e69378d6666a6703c16991310e4dc4100", "filename": "gcc/hash-map-tests.c", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b1f091c4b6881cd60f6f37c31b0054e04d137cc/gcc%2Fhash-map-tests.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b1f091c4b6881cd60f6f37c31b0054e04d137cc/gcc%2Fhash-map-tests.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fhash-map-tests.c?ref=3b1f091c4b6881cd60f6f37c31b0054e04d137cc", "patch": "@@ -77,6 +77,26 @@ test_map_of_strings_to_int ()\n   m.remove (eric);\n   ASSERT_EQ (5, m.elements ());\n   ASSERT_EQ (NULL, m.get (eric));\n+\n+  /* A plain char * key is hashed based on its value (address), rather\n+     than the string it points to.  */\n+  char *another_ant = static_cast <char *> (xcalloc (4, 1));\n+  another_ant[0] = 'a';\n+  another_ant[1] = 'n';\n+  another_ant[2] = 't';\n+  another_ant[3] = 0;\n+  ASSERT_NE (ant, another_ant);\n+  unsigned prev_size = m.elements ();\n+  ASSERT_EQ (false, m.put (another_ant, 7));\n+  ASSERT_EQ (prev_size + 1, m.elements ());\n+\n+  /* Need to use string_hash or nofree_string_hash key types to hash\n+     based on the string contents.  */\n+  hash_map <nofree_string_hash, int> string_map;\n+  ASSERT_EQ (false, string_map.put (ant, 1));\n+  ASSERT_EQ (1, string_map.elements ());\n+  ASSERT_EQ (true, string_map.put (another_ant, 5));\n+  ASSERT_EQ (1, string_map.elements ());\n }\n \n /* Run all of the selftests within this file.  */"}]}