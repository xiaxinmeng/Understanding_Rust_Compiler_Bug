{"sha": "2fe4dc01ede9e03a406dfccc4d7c7dd8ac1d0c1a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmZlNGRjMDFlZGU5ZTAzYTQwNmRmY2NjNGQ3YzdkZDhhYzFkMGMxYQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2010-10-28T20:49:46Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2010-10-28T20:49:46Z"}, "message": "Partially revert:\n\n\t2010-10-28  Uros Bizjak  <ubizjak@gmail.com>\n\n\tPR target/46153\n\t* config/i386/sse.md (*avx_movhlps): Use ix86_binary_operator_ok\n\tin insn predicate.\n\t(sse_movhlps): Ditto.\n\t(*avx_movlhps): Ditto.\n\t(sse_movlhps): Ditto.\n\t(*avx_loadhps): Ditto.\n\t(sse_loadhps): Ditto.\n\t(*avx_loadhpd): Ditto.\n\t(sse_loadhpd): Ditto.\n\t(*avx_storelps): Prevent both operands in memory.\n\t(sse_storelps): Ditto.\n\nFrom-SVN: r166047", "tree": {"sha": "3aafaab8bc9c9ea42f4053d54656d40e9096aed3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3aafaab8bc9c9ea42f4053d54656d40e9096aed3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2fe4dc01ede9e03a406dfccc4d7c7dd8ac1d0c1a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2fe4dc01ede9e03a406dfccc4d7c7dd8ac1d0c1a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2fe4dc01ede9e03a406dfccc4d7c7dd8ac1d0c1a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2fe4dc01ede9e03a406dfccc4d7c7dd8ac1d0c1a/comments", "author": null, "committer": null, "parents": [{"sha": "05fda8480960186392f5f0501793dae9a96c9a66", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/05fda8480960186392f5f0501793dae9a96c9a66", "html_url": "https://github.com/Rust-GCC/gccrs/commit/05fda8480960186392f5f0501793dae9a96c9a66"}], "stats": {"total": 30, "additions": 10, "deletions": 20}, "files": [{"sha": "9753886f911b5f8d783875bb8e0a451b334f9cf5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fe4dc01ede9e03a406dfccc4d7c7dd8ac1d0c1a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fe4dc01ede9e03a406dfccc4d7c7dd8ac1d0c1a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2fe4dc01ede9e03a406dfccc4d7c7dd8ac1d0c1a", "patch": "@@ -155,16 +155,6 @@\n \t(sse_loadlps_exp): Ditto.\n \t(sse2_loadhpd_exp): Ditto.\n \t(sse2_loadlpd_exp): Ditto.\n-\t(*avx_movhlps): Use ix86_binary_operator_ok in insn predicate.\n-\t(sse_movhlps): Ditto.\n-\t(*avx_movlhps): Ditto.\n-\t(sse_movlhps): Ditto.\n-\t(*avx_loadhps): Ditto.\n-\t(sse_loadhps): Ditto.\n-\t(*avx_loadhpd): Ditto.\n-\t(sse_loadhpd): Ditto.\n-\t(*avx_storelps): Prevent both operands in memory.\n-\t(sse_storelps): Ditto.\n \n 2010-10-28  Andrew Stubbs  <ams@codesourcery.com>\n "}, {"sha": "c359aed079192bf33965782542a6e9dd00710d9d", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fe4dc01ede9e03a406dfccc4d7c7dd8ac1d0c1a/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fe4dc01ede9e03a406dfccc4d7c7dd8ac1d0c1a/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=2fe4dc01ede9e03a406dfccc4d7c7dd8ac1d0c1a", "patch": "@@ -3266,7 +3266,7 @@\n \t\t     (const_int 7)\n \t\t     (const_int 2)\n \t\t     (const_int 3)])))]\n-  \"TARGET_AVX && ix86_binary_operator_ok (UNKNOWN, V4SFmode, operands)\"\n+  \"TARGET_AVX && !(MEM_P (operands[1]) && MEM_P (operands[2]))\"\n   \"@\n    vmovhlps\\t{%2, %1, %0|%0, %1, %2}\n    vmovlps\\t{%H2, %1, %0|%0, %1, %H2}\n@@ -3285,7 +3285,7 @@\n \t\t     (const_int 7)\n \t\t     (const_int 2)\n \t\t     (const_int 3)])))]\n-  \"TARGET_SSE && ix86_binary_operator_ok (UNKNOWN, V4SFmode, operands)\"\n+  \"TARGET_SSE && !(MEM_P (operands[1]) && MEM_P (operands[2]))\"\n   \"@\n    movhlps\\t{%2, %0|%0, %2}\n    movlps\\t{%H2, %0|%0, %H2}\n@@ -3740,7 +3740,7 @@\n \t    (match_operand:V4SF 1 \"nonimmediate_operand\" \"x,x,0\")\n \t    (parallel [(const_int 0) (const_int 1)]))\n \t  (match_operand:V2SF 2 \"nonimmediate_operand\" \"m,x,x\")))]\n-  \"TARGET_AVX && ix86_binary_operator_ok (UNKNOWN, V4SFmode, operands)\"\n+  \"TARGET_AVX\"\n   \"@\n    vmovhps\\t{%2, %1, %0|%0, %1, %2}\n    vmovlhps\\t{%2, %1, %0|%0, %1, %2}\n@@ -3756,7 +3756,7 @@\n \t    (match_operand:V4SF 1 \"nonimmediate_operand\" \"0,0,0\")\n \t    (parallel [(const_int 0) (const_int 1)]))\n \t  (match_operand:V2SF 2 \"nonimmediate_operand\" \"m,x,x\")))]\n-  \"TARGET_SSE && ix86_binary_operator_ok (UNKNOWN, V4SFmode, operands)\"\n+  \"TARGET_SSE\"\n   \"@\n    movhps\\t{%2, %0|%0, %2}\n    movlhps\\t{%2, %0|%0, %2}\n@@ -3769,7 +3769,7 @@\n \t(vec_select:V2SF\n \t  (match_operand:V4SF 1 \"nonimmediate_operand\" \"x,x,m\")\n \t  (parallel [(const_int 0) (const_int 1)])))]\n-  \"TARGET_AVX && !(MEM_P (operands[0]) && MEM_P (operands[1]))\"\n+  \"TARGET_AVX\"\n   \"@\n    vmovlps\\t{%1, %0|%0, %1}\n    vmovaps\\t{%1, %0|%0, %1}\n@@ -3783,7 +3783,7 @@\n \t(vec_select:V2SF\n \t  (match_operand:V4SF 1 \"nonimmediate_operand\" \"x,x,m\")\n \t  (parallel [(const_int 0) (const_int 1)])))]\n-  \"TARGET_SSE && !(MEM_P (operands[0]) && MEM_P (operands[1]))\"\n+  \"TARGET_SSE\"\n   \"@\n    movlps\\t{%1, %0|%0, %1}\n    movaps\\t{%1, %0|%0, %1}\n@@ -3818,7 +3818,7 @@\n \t  (vec_select:V2SF\n \t    (match_operand:V4SF 1 \"nonimmediate_operand\" \"x,x,0\")\n \t    (parallel [(const_int 2) (const_int 3)]))))]\n-  \"TARGET_AVX && ix86_binary_operator_ok (UNKNOWN, V4SFmode, operands)\"\n+  \"TARGET_AVX\"\n   \"@\n    shufps\\t{$0xe4, %1, %2, %0|%0, %2, %1, 0xe4}\n    vmovlps\\t{%2, %1, %0|%0, %1, %2}\n@@ -3835,7 +3835,7 @@\n \t  (vec_select:V2SF\n \t    (match_operand:V4SF 1 \"nonimmediate_operand\" \"x,0,0\")\n \t    (parallel [(const_int 2) (const_int 3)]))))]\n-  \"TARGET_SSE && ix86_binary_operator_ok (UNKNOWN, V4SFmode, operands)\"\n+  \"TARGET_SSE\"\n   \"@\n    shufps\\t{$0xe4, %1, %0|%0, %1, 0xe4}\n    movlps\\t{%2, %0|%0, %2}\n@@ -4959,7 +4959,7 @@\n \t    (match_operand:V2DF 1 \"nonimmediate_operand\" \" x,x,0,0,0\")\n \t    (parallel [(const_int 0)]))\n \t  (match_operand:DF 2 \"nonimmediate_operand\"     \" m,x,x,*f,r\")))]\n-  \"TARGET_AVX && ix86_binary_operator_ok (UNKNOWN, V2DFmode, operands)\"\n+  \"TARGET_AVX && !(MEM_P (operands[1]) && MEM_P (operands[2]))\"\n   \"@\n    vmovhpd\\t{%2, %1, %0|%0, %1, %2}\n    vunpcklpd\\t{%2, %1, %0|%0, %1, %2}\n@@ -4977,7 +4977,7 @@\n \t    (match_operand:V2DF 1 \"nonimmediate_operand\" \" 0,0,x,0,0,0\")\n \t    (parallel [(const_int 0)]))\n \t  (match_operand:DF 2 \"nonimmediate_operand\"     \" m,x,0,x,*f,r\")))]\n-  \"TARGET_SSE2 && ix86_binary_operator_ok (UNKNOWN, V2DFmode, operands)\"\n+  \"TARGET_SSE2 && !(MEM_P (operands[1]) && MEM_P (operands[2]))\"\n   \"@\n    movhpd\\t{%2, %0|%0, %2}\n    unpcklpd\\t{%2, %0|%0, %2}"}]}