{"sha": "ae86ede8e988d1863b92a19f35d5f7c6b998bf8c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWU4NmVkZThlOTg4ZDE4NjNiOTJhMTlmMzVkNWY3YzZiOTk4YmY4Yw==", "commit": {"author": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2020-02-03T09:00:07Z"}, "committer": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2020-02-03T09:00:07Z"}, "message": "[Fortran] Fix to strict associate check (PR93427)\n\n        PR fortran/93427\n        * resolve.c (resolve_assoc_var): Remove too strict check.\n        * gfortran.dg/associate_51.f90: Update test case.\n\n        PR fortran/93427\n        * gfortran.dg/associate_52.f90: New.", "tree": {"sha": "4aab7841fde78e7f5cb65d86a4774d2df59003c6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4aab7841fde78e7f5cb65d86a4774d2df59003c6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ae86ede8e988d1863b92a19f35d5f7c6b998bf8c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae86ede8e988d1863b92a19f35d5f7c6b998bf8c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae86ede8e988d1863b92a19f35d5f7c6b998bf8c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae86ede8e988d1863b92a19f35d5f7c6b998bf8c/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f626ae5478887b0cec886160dcfc4d59bf6fda07", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f626ae5478887b0cec886160dcfc4d59bf6fda07", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f626ae5478887b0cec886160dcfc4d59bf6fda07"}], "stats": {"total": 47, "additions": 44, "deletions": 3}, "files": [{"sha": "570cacbd8471422b3ed8c33fc648865d85100ecd", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae86ede8e988d1863b92a19f35d5f7c6b998bf8c/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae86ede8e988d1863b92a19f35d5f7c6b998bf8c/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=ae86ede8e988d1863b92a19f35d5f7c6b998bf8c", "patch": "@@ -1,3 +1,9 @@\n+2020-02-03  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\tPR fortran/93427\n+\t* resolve.c (resolve_assoc_var): Remove too strict check.\n+\t* gfortran.dg/associate_51.f90: Update test case.\n+\n 2020-02-01  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR fortran/92305"}, {"sha": "8f5267fde052b2c0ba167e40a458bf192e8dc180", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae86ede8e988d1863b92a19f35d5f7c6b998bf8c/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae86ede8e988d1863b92a19f35d5f7c6b998bf8c/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=ae86ede8e988d1863b92a19f35d5f7c6b998bf8c", "patch": "@@ -8846,8 +8846,7 @@ resolve_assoc_var (gfc_symbol* sym, bool resolve_target)\n \n       if (tsym->attr.subroutine\n \t  || tsym->attr.external\n-\t  || (tsym->attr.function\n-\t      && (tsym->result != tsym || tsym->attr.recursive)))\n+\t  || (tsym->attr.function && tsym->result != tsym))\n \t{\n \t  gfc_error (\"Associating entity %qs at %L is a procedure name\",\n \t\t     tsym->name, &target->where);"}, {"sha": "8f116971229b8684326a11e9c8e52a55d6b5510a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae86ede8e988d1863b92a19f35d5f7c6b998bf8c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae86ede8e988d1863b92a19f35d5f7c6b998bf8c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ae86ede8e988d1863b92a19f35d5f7c6b998bf8c", "patch": "@@ -1,3 +1,8 @@\n+2020-02-03  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\tPR fortran/93427\n+\t* gfortran.dg/associate_52.f90: New.\n+\n 2020-02-03  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/93533"}, {"sha": "b6ab1414b02ed33742d896a74fbdb21f8f2ff0f4", "filename": "gcc/testsuite/gfortran.dg/associate_51.f90", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae86ede8e988d1863b92a19f35d5f7c6b998bf8c/gcc%2Ftestsuite%2Fgfortran.dg%2Fassociate_51.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae86ede8e988d1863b92a19f35d5f7c6b998bf8c/gcc%2Ftestsuite%2Fgfortran.dg%2Fassociate_51.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fassociate_51.f90?ref=ae86ede8e988d1863b92a19f35d5f7c6b998bf8c", "patch": "@@ -14,7 +14,14 @@ recursive function f() result(z)\n recursive function f2()\n   associate (y1 => f2()) ! { dg-error \"Invalid association target\" }\n   end associate          ! { dg-error \"Expecting END FUNCTION statement\" }\n-  associate (y2 => f2)   ! { dg-error \"is a procedure name\" }\n+end\n+\n+recursive function f3()\n+  associate (y1 => f3)\n+    print *, y1()  ! { dg-error \"Expected array subscript\" }\n+  end associate\n+  associate (y2 => f3) ! { dg-error \"Associate-name 'y2' at \\\\(1\\\\) is used as array\" }\n+    print *, y2(1)\n   end associate\n end\n "}, {"sha": "c24ec4b8f6a021bc3c3aed15920c442ef98e21e3", "filename": "gcc/testsuite/gfortran.dg/associate_52.f90", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae86ede8e988d1863b92a19f35d5f7c6b998bf8c/gcc%2Ftestsuite%2Fgfortran.dg%2Fassociate_52.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae86ede8e988d1863b92a19f35d5f7c6b998bf8c/gcc%2Ftestsuite%2Fgfortran.dg%2Fassociate_52.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fassociate_52.f90?ref=ae86ede8e988d1863b92a19f35d5f7c6b998bf8c", "patch": "@@ -0,0 +1,24 @@\n+! { dg-do compile }\n+!\n+! PR fortran/93427\n+!\n+! Contributed by Andrew Benson\n+!\n+module a\n+\n+type :: t\n+end type t\n+\n+contains\n+\n+recursive function b()\n+  class(t), pointer :: b\n+  type(t) :: c\n+  allocate(t :: b)\n+  select type (b)\n+  type is (t)\n+     b=c\n+  end select\n+end function b\n+\n+end module a"}]}