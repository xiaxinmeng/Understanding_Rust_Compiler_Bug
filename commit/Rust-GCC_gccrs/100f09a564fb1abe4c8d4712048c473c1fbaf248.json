{"sha": "100f09a564fb1abe4c8d4712048c473c1fbaf248", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTAwZjA5YTU2NGZiMWFiZTRjOGQ0NzEyMDQ4YzQ3M2MxZmJhZjI0OA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2013-12-02T15:43:01Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2013-12-02T15:43:01Z"}, "message": "re PR tree-optimization/59139 (internal compiler error: in get_val_for, at tree-ssa-loop-niter.c:2267)\n\n2013-12-02  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/59139\n\t* tree-ssa-loop-niter.c (chain_of_csts_start): Properly match\n\tcode in get_val_for.\n\t(get_val_for): Use gcc_checking_asserts.\n\n\t* gcc.dg/torture/pr59139.c: New testcase.\n\nFrom-SVN: r205588", "tree": {"sha": "9fc08085cca4b298627c57cd8470d98d9df55b04", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9fc08085cca4b298627c57cd8470d98d9df55b04"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/100f09a564fb1abe4c8d4712048c473c1fbaf248", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/100f09a564fb1abe4c8d4712048c473c1fbaf248", "html_url": "https://github.com/Rust-GCC/gccrs/commit/100f09a564fb1abe4c8d4712048c473c1fbaf248", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/100f09a564fb1abe4c8d4712048c473c1fbaf248/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "75fcf2876f2e3746137e939deec4cf2cff602d02", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75fcf2876f2e3746137e939deec4cf2cff602d02", "html_url": "https://github.com/Rust-GCC/gccrs/commit/75fcf2876f2e3746137e939deec4cf2cff602d02"}], "stats": {"total": 40, "additions": 37, "deletions": 3}, "files": [{"sha": "38af5b76455822f118fe21d29c04d063e8c340f8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/100f09a564fb1abe4c8d4712048c473c1fbaf248/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/100f09a564fb1abe4c8d4712048c473c1fbaf248/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=100f09a564fb1abe4c8d4712048c473c1fbaf248", "patch": "@@ -1,5 +1,13 @@\n 2013-12-02  Richard Biener  <rguenther@suse.de>\n \n+\tPR tree-optimization/59139\n+\t* tree-ssa-loop-niter.c (chain_of_csts_start): Properly match\n+\tcode in get_val_for.\n+\t(get_val_for): Use gcc_checking_asserts.\n+\n+2013-12-02  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/59199\n \t* tree-ssa-operands.c (opf_implicit): Remove.\n \t(opf_address_taken): New flag.\n \t(get_expr_operands): Remove early out, pass down"}, {"sha": "59c0b5b8846e027eeaaf285aca02d4ec34e2cc7d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/100f09a564fb1abe4c8d4712048c473c1fbaf248/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/100f09a564fb1abe4c8d4712048c473c1fbaf248/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=100f09a564fb1abe4c8d4712048c473c1fbaf248", "patch": "@@ -1,3 +1,8 @@\n+2013-12-02  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/59139\n+\t* gcc.dg/torture/pr59139.c: New testcase.\n+\n 2013-12-02  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gnat.dg/opt30.adb: New test."}, {"sha": "4ec9177ffe7323d2969c494f14972e1e64246161", "filename": "gcc/testsuite/gcc.dg/torture/pr59139.c", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/100f09a564fb1abe4c8d4712048c473c1fbaf248/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr59139.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/100f09a564fb1abe4c8d4712048c473c1fbaf248/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr59139.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr59139.c?ref=100f09a564fb1abe4c8d4712048c473c1fbaf248", "patch": "@@ -0,0 +1,20 @@\n+/* { dg-do compile } */\n+\n+int a, b, c, d, e;\n+int fn1(p1, p2) { return p2 == 0 ? p1 : 1 % p2; }\n+\n+void fn2()\n+{\n+  c = 0;\n+  for (;; c = (unsigned short)c)\n+    {\n+      b = 2;\n+      for (; b; b = a)\n+\t{\n+\t  e = fn1(2, c && 1);\n+\t  d = c == 0 ? e : c;\n+\t  if (d)\n+\t    return;\n+\t}\n+    }\n+}"}, {"sha": "08c8541b490c0634015d30f4f8e4870ec5857c55", "filename": "gcc/tree-ssa-loop-niter.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/100f09a564fb1abe4c8d4712048c473c1fbaf248/gcc%2Ftree-ssa-loop-niter.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/100f09a564fb1abe4c8d4712048c473c1fbaf248/gcc%2Ftree-ssa-loop-niter.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-niter.c?ref=100f09a564fb1abe4c8d4712048c473c1fbaf248", "patch": "@@ -2167,7 +2167,8 @@ chain_of_csts_start (struct loop *loop, tree x)\n       return NULL;\n     }\n \n-  if (gimple_code (stmt) != GIMPLE_ASSIGN)\n+  if (gimple_code (stmt) != GIMPLE_ASSIGN\n+      || gimple_assign_rhs_class (stmt) == GIMPLE_TERNARY_RHS)\n     return NULL;\n \n   code = gimple_assign_rhs_code (stmt);\n@@ -2235,7 +2236,7 @@ get_val_for (tree x, tree base)\n {\n   gimple stmt;\n \n-  gcc_assert (is_gimple_min_invariant (base));\n+  gcc_checking_assert (is_gimple_min_invariant (base));\n \n   if (!x)\n     return base;\n@@ -2244,7 +2245,7 @@ get_val_for (tree x, tree base)\n   if (gimple_code (stmt) == GIMPLE_PHI)\n     return base;\n \n-  gcc_assert (is_gimple_assign (stmt));\n+  gcc_checking_assert (is_gimple_assign (stmt));\n \n   /* STMT must be either an assignment of a single SSA name or an\n      expression involving an SSA name and a constant.  Try to fold that"}]}