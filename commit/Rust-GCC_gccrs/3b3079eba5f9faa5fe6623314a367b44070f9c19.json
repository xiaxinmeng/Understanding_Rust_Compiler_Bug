{"sha": "3b3079eba5f9faa5fe6623314a367b44070f9c19", "node_id": "C_kwDOANBUbNoAKDNiMzA3OWViYTVmOWZhYTVmZTY2MjMzMTRhMzY3YjQ0MDcwZjljMTk", "commit": {"author": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2022-02-24T15:55:35Z"}, "committer": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2022-02-24T15:55:35Z"}, "message": "Cleanup error handling on array index expression type resolution", "tree": {"sha": "7578113bad17300b21a2cf94dad001eac25acc06", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7578113bad17300b21a2cf94dad001eac25acc06"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3b3079eba5f9faa5fe6623314a367b44070f9c19", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b3079eba5f9faa5fe6623314a367b44070f9c19", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3b3079eba5f9faa5fe6623314a367b44070f9c19", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b3079eba5f9faa5fe6623314a367b44070f9c19/comments", "author": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7d6579c2fada550ad31d69f740597947f1f42d44", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d6579c2fada550ad31d69f740597947f1f42d44", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7d6579c2fada550ad31d69f740597947f1f42d44"}], "stats": {"total": 37, "additions": 18, "deletions": 19}, "files": [{"sha": "02694334436f9c22b442f78729cddb9319c30163", "filename": "gcc/rust/typecheck/rust-hir-type-check-expr.cc", "status": "modified", "additions": 17, "deletions": 19, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b3079eba5f9faa5fe6623314a367b44070f9c19/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-expr.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b3079eba5f9faa5fe6623314a367b44070f9c19/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-expr.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-expr.cc?ref=3b3079eba5f9faa5fe6623314a367b44070f9c19", "patch": "@@ -245,29 +245,18 @@ TypeCheckExpr::visit (HIR::RangeFromToInclExpr &expr)\n void\n TypeCheckExpr::visit (HIR::ArrayIndexExpr &expr)\n {\n-  TyTy::BaseType *size_ty;\n-  if (!context->lookup_builtin (\"usize\", &size_ty))\n-    {\n-      rust_error_at (\n-\texpr.get_locus (),\n-\t\"Failure looking up size type for index in ArrayIndexExpr\");\n-      return;\n-    }\n-\n-  auto resolved_index_expr\n-    = size_ty->unify (TypeCheckExpr::Resolve (expr.get_index_expr (), false));\n-  if (resolved_index_expr->get_kind () != TyTy::TypeKind::ERROR)\n-    {\n-      // allow the index expr to fail lets just continue on\n-      context->insert_type (expr.get_index_expr ()->get_mappings (),\n-\t\t\t    resolved_index_expr);\n-    }\n-\n   auto array_expr_ty\n     = TypeCheckExpr::Resolve (expr.get_array_expr (), inside_loop);\n   if (array_expr_ty->get_kind () == TyTy::TypeKind::ERROR)\n     return;\n-  else if (array_expr_ty->get_kind () == TyTy::TypeKind::REF)\n+\n+  auto index_expr_ty = TypeCheckExpr::Resolve (expr.get_index_expr (), false);\n+  if (index_expr_ty->get_kind () == TyTy::TypeKind::ERROR)\n+    return;\n+\n+  // is this a case of core::ops::index?\n+\n+  if (array_expr_ty->get_kind () == TyTy::TypeKind::REF)\n     {\n       // lets try and deref it since rust allows this\n       auto ref = static_cast<TyTy::ReferenceType *> (array_expr_ty);\n@@ -284,6 +273,15 @@ TypeCheckExpr::visit (HIR::ArrayIndexExpr &expr)\n       return;\n     }\n \n+  TyTy::BaseType *size_ty;\n+  bool ok = context->lookup_builtin (\"usize\", &size_ty);\n+  rust_assert (ok);\n+\n+  auto resolved_index_expr\n+    = size_ty->unify (TypeCheckExpr::Resolve (expr.get_index_expr (), false));\n+  if (resolved_index_expr->get_kind () == TyTy::TypeKind::ERROR)\n+    return;\n+\n   TyTy::ArrayType *array_type = static_cast<TyTy::ArrayType *> (array_expr_ty);\n   infered = array_type->get_element_type ()->clone ();\n }"}, {"sha": "c7e746bf4499358aaa7012ff4debae5dcdc9a68f", "filename": "gcc/testsuite/rust/compile/usize1.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b3079eba5f9faa5fe6623314a367b44070f9c19/gcc%2Ftestsuite%2Frust%2Fcompile%2Fusize1.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b3079eba5f9faa5fe6623314a367b44070f9c19/gcc%2Ftestsuite%2Frust%2Fcompile%2Fusize1.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fcompile%2Fusize1.rs?ref=3b3079eba5f9faa5fe6623314a367b44070f9c19", "patch": "@@ -2,4 +2,5 @@ fn main() {\n     let a = [1, 2, 3];\n     let b: u32 = 1;\n     let c = a[b]; // { dg-error \"expected .usize. got .u32.\" }\n+                  // { dg-error {failed to type resolve expression} \"\" { target *-*-* } .-1 }\n }"}]}