{"sha": "cf3822f181e345f952f1497d24a854ffd50cdb9e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2YzODIyZjE4MWUzNDVmOTUyZjE0OTdkMjRhODU0ZmZkNTBjZGI5ZQ==", "commit": {"author": {"name": "Nicola Pero", "email": "nicola.pero@meta-innovation.com", "date": "2010-10-09T22:22:23Z"}, "committer": {"name": "Nicola Pero", "email": "nicola@gcc.gnu.org", "date": "2010-10-09T22:22:23Z"}, "message": "In libobjc/: 2010-10-10 Nicola Pero <nicola.pero@meta-innovation.com>\n\nIn libobjc/:\n2010-10-10  Nicola Pero  <nicola.pero@meta-innovation.com>\n\n        * objc-foreach.c: Include objc-private/common.h.\n        * objc/deprecated/METHOD_NULL.h: New file.\n        * objc/objc-api.h: Include deprecated/METHOD_NULL.h instead of\n        defining METHOD_NULL here.\n        * Makefile.in (OBJC_DEPRECATED_H): Added METHOD_NULL.h.\n        * Object.m ([+instancesRespondTo:]): Use (Method_t)0 instead of\n        METHOD_NULL.\n        ([-respondsTo:]): Same change.\n        * objc/objc-api.h (method_get_imp): Converted it into a normal\n        function so that we can hide the internals of struct objc_method.\n        * sendmsg.c (method_get_imp): Implemented.\n\nFrom-SVN: r165241", "tree": {"sha": "4c22a690a34cb9deabdd429ff045afebaf9343b9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4c22a690a34cb9deabdd429ff045afebaf9343b9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cf3822f181e345f952f1497d24a854ffd50cdb9e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf3822f181e345f952f1497d24a854ffd50cdb9e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cf3822f181e345f952f1497d24a854ffd50cdb9e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf3822f181e345f952f1497d24a854ffd50cdb9e/comments", "author": {"login": "Nico-31415", "id": 94470564, "node_id": "U_kgDOBaGBpA", "avatar_url": "https://avatars.githubusercontent.com/u/94470564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nico-31415", "html_url": "https://github.com/Nico-31415", "followers_url": "https://api.github.com/users/Nico-31415/followers", "following_url": "https://api.github.com/users/Nico-31415/following{/other_user}", "gists_url": "https://api.github.com/users/Nico-31415/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nico-31415/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nico-31415/subscriptions", "organizations_url": "https://api.github.com/users/Nico-31415/orgs", "repos_url": "https://api.github.com/users/Nico-31415/repos", "events_url": "https://api.github.com/users/Nico-31415/events{/privacy}", "received_events_url": "https://api.github.com/users/Nico-31415/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3a42502df4cb1fd3b8090658920bfe2635b39613", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a42502df4cb1fd3b8090658920bfe2635b39613", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a42502df4cb1fd3b8090658920bfe2635b39613"}], "stats": {"total": 42, "additions": 31, "deletions": 11}, "files": [{"sha": "f388a68bce9bc526ca2edabb3255d4039dff1e5a", "filename": "libobjc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf3822f181e345f952f1497d24a854ffd50cdb9e/libobjc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf3822f181e345f952f1497d24a854ffd50cdb9e/libobjc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2FChangeLog?ref=cf3822f181e345f952f1497d24a854ffd50cdb9e", "patch": "@@ -1,3 +1,17 @@\n+2010-10-10  Nicola Pero  <nicola.pero@meta-innovation.com>\n+\n+\t* objc-foreach.c: Include objc-private/common.h.\n+\t* objc/deprecated/METHOD_NULL.h: New file.\n+\t* objc/objc-api.h: Include deprecated/METHOD_NULL.h instead of\n+\tdefining METHOD_NULL here.\n+\t* Makefile.in (OBJC_DEPRECATED_H): Added METHOD_NULL.h.\n+\t* Object.m ([+instancesRespondTo:]): Use (Method_t)0 instead of\n+\tMETHOD_NULL.\n+\t([-respondsTo:]): Same change.\n+\t* objc/objc-api.h (method_get_imp): Converted it into a normal\n+\tfunction so that we can hide the internals of struct objc_method.\n+\t* sendmsg.c (method_get_imp): Implemented.\n+\n 2010-10-09  Nicola Pero  <nicola.pero@meta-innovation.com>\n \n \t* objc/objc-api.h (struct objc_super, Super, Super_t,"}, {"sha": "25d607708883be6b15123ca71267615e0bac6efe", "filename": "libobjc/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf3822f181e345f952f1497d24a854ffd50cdb9e/libobjc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf3822f181e345f952f1497d24a854ffd50cdb9e/libobjc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2FMakefile.in?ref=cf3822f181e345f952f1497d24a854ffd50cdb9e", "patch": "@@ -131,6 +131,7 @@ OBJC_H = \\\n # User-visible header files containing deprecated APIs, from the\n # objc/deprecated directory\n OBJC_DEPRECATED_H = \\\n+  METHOD_NULL.h \\\n   MetaClass.h \\\n   Object.h \\\n   STR.h \\"}, {"sha": "441c471b2a16b900c84872b7837b8002e5717b70", "filename": "libobjc/Object.m", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf3822f181e345f952f1497d24a854ffd50cdb9e/libobjc%2FObject.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf3822f181e345f952f1497d24a854ffd50cdb9e/libobjc%2FObject.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2FObject.m?ref=cf3822f181e345f952f1497d24a854ffd50cdb9e", "patch": "@@ -172,14 +172,14 @@ - (BOOL)isMemberOfClassNamed:(const char *)aClassName\n \n + (BOOL)instancesRespondTo:(SEL)aSel\n {\n-  return class_get_instance_method(self, aSel)!=METHOD_NULL;\n+  return class_get_instance_method(self, aSel) != (Method_t)0;\n }\n \n - (BOOL)respondsTo:(SEL)aSel\n {\n   return ((object_is_instance(self)\n            ?class_get_instance_method(self->isa, aSel)\n-           :class_get_class_method(self->isa, aSel))!=METHOD_NULL);\n+           :class_get_class_method(self->isa, aSel)) != (Method_t)0);\n }\n \n + (IMP)instanceMethodFor:(SEL)aSel"}, {"sha": "a06a77ec8e536f7964f803300530b8a46d11a3e3", "filename": "libobjc/objc-foreach.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf3822f181e345f952f1497d24a854ffd50cdb9e/libobjc%2Fobjc-foreach.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf3822f181e345f952f1497d24a854ffd50cdb9e/libobjc%2Fobjc-foreach.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2Fobjc-foreach.c?ref=cf3822f181e345f952f1497d24a854ffd50cdb9e", "patch": "@@ -27,8 +27,9 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n   objc_set_enumeration_mutation_handler(), the two functions required\n   to handle mutations during a fast enumeration.\n */\n-#include \"objc/runtime.h\"           /* For objc_enumerationMutation() and objc_set_enumeration_mutation_handler() */\n+#include \"objc-private/common.h\"\n #include \"objc-private/error.h\"     /* For _objc_abort() */\n+#include \"objc/runtime.h\"           /* For objc_enumerationMutation() and objc_set_enumeration_mutation_handler() */\n \n /* The enumeration mutation handler currently in use.  */\n static void (*__objc_enumeration_mutation_handler)(id) = NULL;"}, {"sha": "6912be345e1c864069cce1e1137a1d64671d7989", "filename": "libobjc/objc/deprecated/METHOD_NULL.h", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf3822f181e345f952f1497d24a854ffd50cdb9e/libobjc%2Fobjc%2Fdeprecated%2FMETHOD_NULL.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf3822f181e345f952f1497d24a854ffd50cdb9e/libobjc%2Fobjc%2Fdeprecated%2FMETHOD_NULL.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2Fobjc%2Fdeprecated%2FMETHOD_NULL.h?ref=cf3822f181e345f952f1497d24a854ffd50cdb9e", "patch": "@@ -0,0 +1,2 @@\n+/* For functions which return Method_t */\n+#define METHOD_NULL\t(Method_t)0"}, {"sha": "5f9043086b70efdd12389770eb687f3ec780a7e8", "filename": "libobjc/objc/objc-api.h", "status": "modified", "additions": 3, "deletions": 8, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf3822f181e345f952f1497d24a854ffd50cdb9e/libobjc%2Fobjc%2Fobjc-api.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf3822f181e345f952f1497d24a854ffd50cdb9e/libobjc%2Fobjc%2Fobjc-api.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2Fobjc%2Fobjc-api.h?ref=cf3822f181e345f952f1497d24a854ffd50cdb9e", "patch": "@@ -40,9 +40,8 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n extern \"C\" {\n #endif /* __cplusplus */\n \n-/* For functions which return Method_t */\n-#define METHOD_NULL\t(Method_t)0\n-                                                /* Boolean typedefs */\n+#include \"deprecated/METHOD_NULL.h\"\n+\n /* Method descriptor returned by introspective Object methods.\n    This is really just the first part of the more complete objc_method\n    structure defined below and used internally by the runtime.  */\n@@ -441,11 +440,7 @@ extern void class_ivar_set_gcinvisible (Class _class,\n \t\t\t\t\tconst char* ivarname,\n \t\t\t\t\tBOOL gcInvisible);\n \n-static inline IMP\n-method_get_imp(Method_t method)\n-{\n-  return (method!=METHOD_NULL)?method->method_imp:(IMP)0;\n-}\n+objc_EXPORT IMP method_get_imp(Method_t method);\n \n objc_EXPORT IMP get_imp (Class _class, SEL sel);\n "}, {"sha": "a822af4a31a20d368b93e0315e65feb744bab804", "filename": "libobjc/sendmsg.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf3822f181e345f952f1497d24a854ffd50cdb9e/libobjc%2Fsendmsg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf3822f181e345f952f1497d24a854ffd50cdb9e/libobjc%2Fsendmsg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2Fsendmsg.c?ref=cf3822f181e345f952f1497d24a854ffd50cdb9e", "patch": "@@ -194,6 +194,13 @@ get_imp (Class class, SEL sel)\n   return res;\n }\n \n+/* Given a method, return its implementation.  */\n+IMP\n+method_get_imp (Method_t method)\n+{\n+  return (method != (Method_t)0) ? method->method_imp : (IMP)0;\n+}\n+\n /* Query if an object can respond to a selector, returns YES if the\n object implements the selector otherwise NO.  Does not check if the\n method can be forwarded. */"}]}