{"sha": "12e19e0588445040f55e4299a69904afd0cd1b22", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTJlMTllMDU4ODQ0NTA0MGY1NWU0Mjk5YTY5OTA0YWZkMGNkMWIyMg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2008-04-16T16:01:57Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2008-04-16T16:01:57Z"}, "message": "re PR c/35739 (ICE with _Decimal128 and va_list)\n\n\tPR c/35739\n\t* tree-nrv.c (tree_nrv): Don't optimize if result_type is GIMPLE\n\treg type.\n\n\t* gcc.dg/dfp/pr35739.c: New test.\n\nFrom-SVN: r134351", "tree": {"sha": "eb8633e764cac5e80e5b5885d5b624e8fbfb7c0e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eb8633e764cac5e80e5b5885d5b624e8fbfb7c0e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/12e19e0588445040f55e4299a69904afd0cd1b22", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12e19e0588445040f55e4299a69904afd0cd1b22", "html_url": "https://github.com/Rust-GCC/gccrs/commit/12e19e0588445040f55e4299a69904afd0cd1b22", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12e19e0588445040f55e4299a69904afd0cd1b22/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3d5e00a036cec0a70c46c0f2617de26849c7d46b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d5e00a036cec0a70c46c0f2617de26849c7d46b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3d5e00a036cec0a70c46c0f2617de26849c7d46b"}], "stats": {"total": 30, "additions": 29, "deletions": 1}, "files": [{"sha": "57d334c17e0c2fb08c5c67734978847e87e48cca", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12e19e0588445040f55e4299a69904afd0cd1b22/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12e19e0588445040f55e4299a69904afd0cd1b22/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=12e19e0588445040f55e4299a69904afd0cd1b22", "patch": "@@ -1,5 +1,9 @@\n 2008-04-16  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR c/35739\n+\t* tree-nrv.c (tree_nrv): Don't optimize if result_type is GIMPLE\n+\treg type.\n+\n \tPR tree-optimization/35899\n \t* tree-inline.c (expand_call_inline): Use GIMPLE_STMT_OPERAND\n \trather than TREE_OPERAND."}, {"sha": "85f4cb37bcd793866b7c55d92532c83d976eb503", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12e19e0588445040f55e4299a69904afd0cd1b22/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12e19e0588445040f55e4299a69904afd0cd1b22/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=12e19e0588445040f55e4299a69904afd0cd1b22", "patch": "@@ -1,5 +1,8 @@\n 2008-04-16  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR c/35739\n+\t* gcc.dg/dfp/pr35739.c: New test.\n+\n \tPR tree-optimization/35899\n \t* gcc.dg/pr35899.c: New test.\n "}, {"sha": "d4e1839026e02325b08ea22f6fdf5756a5f4639a", "filename": "gcc/testsuite/gcc.dg/dfp/pr35739.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12e19e0588445040f55e4299a69904afd0cd1b22/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fpr35739.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12e19e0588445040f55e4299a69904afd0cd1b22/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fpr35739.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fpr35739.c?ref=12e19e0588445040f55e4299a69904afd0cd1b22", "patch": "@@ -0,0 +1,16 @@\n+/* PR c/35739 */\n+/* { dg-do compile { target *-*-linux* } } */\n+/* { dg-options \"-O -fpreprocessed -fmudflap\" } */\n+\n+_Decimal128\n+foo (int n, ...)\n+{\n+  int i;\n+  _Decimal128 j = 0;\n+  __builtin_va_list ap;\n+  __builtin_va_start (ap, n);\n+  for (i = 0; i < n; i++)\n+    j += __builtin_va_arg (ap, _Decimal128);\n+  __builtin_va_end (ap);\n+  return j;\n+}"}, {"sha": "35928ea99e707cac63dc2a271cbefe675b0b0d10", "filename": "gcc/tree-nrv.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12e19e0588445040f55e4299a69904afd0cd1b22/gcc%2Ftree-nrv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12e19e0588445040f55e4299a69904afd0cd1b22/gcc%2Ftree-nrv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-nrv.c?ref=12e19e0588445040f55e4299a69904afd0cd1b22", "patch": "@@ -1,5 +1,5 @@\n /* Language independent return value optimizations\n-   Copyright (C) 2004, 2005, 2007 Free Software Foundation, Inc.\n+   Copyright (C) 2004, 2005, 2007, 2008 Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -115,6 +115,11 @@ tree_nrv (void)\n   if (!aggregate_value_p (result, current_function_decl))\n     return 0;\n \n+  /* If a GIMPLE type is returned in memory, finalize_nrv_r might create\n+     non-GIMPLE.  */\n+  if (is_gimple_reg_type (result_type))\n+    return 0;\n+\n   /* Look through each block for assignments to the RESULT_DECL.  */\n   FOR_EACH_BB (bb)\n     {"}]}