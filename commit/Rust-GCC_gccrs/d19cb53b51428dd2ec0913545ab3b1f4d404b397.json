{"sha": "d19cb53b51428dd2ec0913545ab3b1f4d404b397", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDE5Y2I1M2I1MTQyOGRkMmVjMDkxMzU0NWFiM2IxZjRkNDA0YjM5Nw==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2009-07-16T17:08:50Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2009-07-16T17:08:50Z"}, "message": "New test\n\nFrom-SVN: r149715", "tree": {"sha": "ed9987daad4c48c3979653d7e35eb8668d27e0a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ed9987daad4c48c3979653d7e35eb8668d27e0a6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d19cb53b51428dd2ec0913545ab3b1f4d404b397", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d19cb53b51428dd2ec0913545ab3b1f4d404b397", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d19cb53b51428dd2ec0913545ab3b1f4d404b397", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d19cb53b51428dd2ec0913545ab3b1f4d404b397/comments", "author": null, "committer": null, "parents": [{"sha": "271167f1135ec6fbaa711a2a72fff1353293ee06", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/271167f1135ec6fbaa711a2a72fff1353293ee06", "html_url": "https://github.com/Rust-GCC/gccrs/commit/271167f1135ec6fbaa711a2a72fff1353293ee06"}], "stats": {"total": 63, "additions": 63, "deletions": 0}, "files": [{"sha": "558a0b9bb9c7d034acb3bde4656668b0ecb9b7c7", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d19cb53b51428dd2ec0913545ab3b1f4d404b397/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d19cb53b51428dd2ec0913545ab3b1f4d404b397/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d19cb53b51428dd2ec0913545ab3b1f4d404b397", "patch": "@@ -1,3 +1,7 @@\n+2009-07-16  Richard Henderson  <rth@redhat.com>\n+\n+\t* g++.dg/opt/eh4.C: New test.\n+\n 2009-07-16  Jakub Jelinek  <jakub@redhat.com>\n \n \t* obj-c++.dg/defs.mm (abort): Make it extern \"C\"."}, {"sha": "0a62ee2db272259bd3ef700cd987366defa2392c", "filename": "gcc/testsuite/g++.dg/opt/eh4.C", "status": "added", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d19cb53b51428dd2ec0913545ab3b1f4d404b397/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Feh4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d19cb53b51428dd2ec0913545ab3b1f4d404b397/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Feh4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Feh4.C?ref=d19cb53b51428dd2ec0913545ab3b1f4d404b397", "patch": "@@ -0,0 +1,59 @@\n+// { dg-do run }\n+// { dg-options \"-O3\" }\n+\n+// Make sure that the call to terminate within F2 is not eliminated\n+// by incorrect MUST_NOT_THROW optimization.  Note that we expect F1\n+// to be inlined into F2 in order to expose this case.\n+\n+#include <cstdlib>\n+#include <exception>\n+\n+static volatile int zero = 0;\n+\n+// Note that we need F0 to not be marked nothrow, though we don't actually\n+// want a throw to happen at runtime here.  The noinline tag is merely to\n+// make sure the assembly in F0 is not unnecessarily complex.\n+static void __attribute__((noinline)) f0()\n+{\n+  if (zero != 0)\n+    throw 0;\n+}\n+\n+struct S1\n+{\n+  S1() { }\n+  ~S1() { f0(); }\n+};\n+\n+static void f1()\n+{\n+  S1 s1;\n+  throw 1;\n+}\n+\n+struct S2\n+{\n+  S2() { }\n+  ~S2() { f1(); }\n+};\n+\n+static void __attribute__((noinline)) f2()\n+{\n+  S2 s2;\n+  throw 2;\n+}\n+\n+static void pass()\n+{\n+  exit (0);\n+}\n+\n+int main()\n+{\n+  std::set_terminate (pass);\n+  try {\n+    f2();\n+  } catch (...) {\n+  }\n+  abort ();\n+}"}]}