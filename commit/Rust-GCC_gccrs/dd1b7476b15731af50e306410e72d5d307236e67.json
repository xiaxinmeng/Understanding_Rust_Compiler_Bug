{"sha": "dd1b7476b15731af50e306410e72d5d307236e67", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGQxYjc0NzZiMTU3MzFhZjUwZTMwNjQxMGU3MmQ1ZDMwNzIzNmU2Nw==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "2003-01-15T01:21:46Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "2003-01-15T01:21:46Z"}, "message": "decl2.c (check_classfn): Fix uninitialized warning.\n\ncp:\n\t* decl2.c (check_classfn): Fix uninitialized warning.\n\t(build_anon_union_vars): Likewise.\n\t* pt.c (tsubst_copy): Likewise.\n\ngcc:\n\t* genattr.c (main): Rearrange output to avoid prototype warning.\n\t* genautomata.c (transform_3): Fix ambiguous-else warning.\n\t* local-alloc.c (requires_inout): Add parentheses around\n\tassignment used as truth-value.\n\t* timevar.c: Move system includes above local includes.  Include\n\ttoplev.h\n\t* Makefile.in (timevar.o): Depend on toplev.h.\n\nFrom-SVN: r61308", "tree": {"sha": "3ad64b3477d3a7f104bf10206c07949e3b39a226", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3ad64b3477d3a7f104bf10206c07949e3b39a226"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dd1b7476b15731af50e306410e72d5d307236e67", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd1b7476b15731af50e306410e72d5d307236e67", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dd1b7476b15731af50e306410e72d5d307236e67", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd1b7476b15731af50e306410e72d5d307236e67/comments", "author": null, "committer": null, "parents": [{"sha": "8cb5ee71923f70805d8b67418e9d098d640ff6c4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8cb5ee71923f70805d8b67418e9d098d640ff6c4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8cb5ee71923f70805d8b67418e9d098d640ff6c4"}], "stats": {"total": 65, "additions": 43, "deletions": 22}, "files": [{"sha": "1f04fa4b19625aff86c1e9255ef902a1b751fe1b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd1b7476b15731af50e306410e72d5d307236e67/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd1b7476b15731af50e306410e72d5d307236e67/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=dd1b7476b15731af50e306410e72d5d307236e67", "patch": "@@ -1,3 +1,13 @@\n+2003-01-14  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* genattr.c (main): Rearrange output to avoid prototype warning.\n+\t* genautomata.c (transform_3): Fix ambiguous-else warning.\n+\t* local-alloc.c (requires_inout): Add parentheses around\n+\tassignment used as truth-value.\n+\t* timevar.c: Move system includes above local includes.  Include\n+\ttoplev.h\n+\t* Makefile.in (timevar.o): Depend on toplev.h.\n+\n 2003-01-14  Denis Chertykov  <denisc@overta.ru>\n \n \t* config/ip2k/ip2k.h (VALID_MACHINE_DECL_ATTRIBUTE): Remove."}, {"sha": "dbd6a688ca2bf81e4aab412b932e282098bf1656", "filename": "gcc/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd1b7476b15731af50e306410e72d5d307236e67/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd1b7476b15731af50e306410e72d5d307236e67/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=dd1b7476b15731af50e306410e72d5d307236e67", "patch": "@@ -1660,7 +1660,7 @@ cfglayout.o : cfglayout.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) $\n    insn-config.h $(BASIC_BLOCK_H) hard-reg-set.h output.h function.h \\\n    cfglayout.h\n timevar.o : timevar.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TIMEVAR_H) flags.h \\\n-   intl.h\n+   intl.h toplev.h\n regrename.o : regrename.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    insn-config.h $(BASIC_BLOCK_H) $(REGS_H) hard-reg-set.h output.h $(RECOG_H) function.h \\\n    resource.h $(OBSTACK_H) flags.h $(TM_P_H)"}, {"sha": "2f9d10bc94ed756795534c75b16a7f0806486208", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd1b7476b15731af50e306410e72d5d307236e67/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd1b7476b15731af50e306410e72d5d307236e67/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=dd1b7476b15731af50e306410e72d5d307236e67", "patch": "@@ -1,3 +1,9 @@\n+2003-01-14  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* decl2.c (check_classfn): Fix uninitialized warning.\n+\t(build_anon_union_vars): Likewise.\n+\t* pt.c (tsubst_copy): Likewise.\n+\n 2003-01-14  Jeffrey D. Oldham  <oldham@codesourcery.com>\n \n \tFurther conform g++'s __vmi_class_type_info to the C++ ABI"}, {"sha": "6179df62656848931ba586cf98dc9ad32dfe68fb", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd1b7476b15731af50e306410e72d5d307236e67/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd1b7476b15731af50e306410e72d5d307236e67/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=dd1b7476b15731af50e306410e72d5d307236e67", "patch": "@@ -681,7 +681,7 @@ check_classfn (tree ctype, tree function)\n   if (ix >= 0)\n     {\n       tree methods = CLASSTYPE_METHOD_VEC (ctype);\n-      tree fndecls, fndecl;\n+      tree fndecls, fndecl = 0;\n       bool is_conv_op;\n       const char *format = NULL;\n       \n@@ -1294,6 +1294,8 @@ build_anon_union_vars (tree object)\n \t}\n       else if (ANON_AGGR_TYPE_P (TREE_TYPE (field)))\n \tdecl = build_anon_union_vars (ref);\n+      else\n+\tdecl = 0;\n \n       if (main_decl == NULL_TREE)\n \tmain_decl = decl;"}, {"sha": "133318d169cac74e15caf549a852fd345f13cd4a", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd1b7476b15731af50e306410e72d5d307236e67/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd1b7476b15731af50e306410e72d5d307236e67/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=dd1b7476b15731af50e306410e72d5d307236e67", "patch": "@@ -7242,7 +7242,7 @@ tsubst_copy (t, args, complain, in_decl)\n \ttree name;\n \ttree qualifying_scope;\n \ttree fns;\n-\ttree template_args;\n+\ttree template_args = 0;\n \tbool template_id_p = false;\n \n \t/* A baselink indicates a function from a base class.  The"}, {"sha": "72d13f59826c62381620831efa8e45c364761f46", "filename": "gcc/genattr.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd1b7476b15731af50e306410e72d5d307236e67/gcc%2Fgenattr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd1b7476b15731af50e306410e72d5d307236e67/gcc%2Fgenattr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenattr.c?ref=dd1b7476b15731af50e306410e72d5d307236e67", "patch": "@@ -441,12 +441,12 @@ main (argc, argv)\n       printf (\"   unit with given code is currently reserved in given\\n\");\n       printf (\"   DFA state.  */\\n\");\n       printf (\"extern int cpu_unit_reservation_p PARAMS ((state_t, int));\\n\");\n+      printf (\"#endif\\n\\n\");\n       printf (\"/* Clean insn code cache.  It should be called if there\\n\");\n       printf (\"   is a chance that condition value in a\\n\");\n       printf (\"   define_insn_reservation will be changed after\\n\");\n       printf (\"   last call of dfa_start.  */\\n\");\n       printf (\"extern void dfa_clean_insn_cache PARAMS ((void));\\n\\n\");\n-      printf (\"#endif\\n\\n\");\n       printf (\"/* Initiate and finish work with DFA.  They should be\\n\");\n       printf (\"   called as the first and the last interface\\n\");\n       printf (\"   functions.  */\\n\");"}, {"sha": "8ee2c22aae0c259e5a0e7e2678a267a0dd04601e", "filename": "gcc/genautomata.c", "status": "modified", "additions": 14, "deletions": 12, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd1b7476b15731af50e306410e72d5d307236e67/gcc%2Fgenautomata.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd1b7476b15731af50e306410e72d5d307236e67/gcc%2Fgenautomata.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenautomata.c?ref=dd1b7476b15731af50e306410e72d5d307236e67", "patch": "@@ -5275,18 +5275,20 @@ transform_3 (regexp)\n       max_seq_length = 0;\n       if (regexp->mode == rm_allof)\n \tfor (i = 0; i < REGEXP_ALLOF (regexp)->regexps_num; i++)\n-\t  if (REGEXP_ALLOF (regexp)->regexps [i]->mode == rm_sequence)\n-\t    {\n-\t      seq = REGEXP_ALLOF (regexp)->regexps [i];\n-\t      if (max_seq_length < REGEXP_SEQUENCE (seq)->regexps_num)\n-\t\tmax_seq_length = REGEXP_SEQUENCE (seq)->regexps_num;\n-\t    }\n-\t  else if (REGEXP_ALLOF (regexp)->regexps [i]->mode != rm_unit\n-\t\t   && REGEXP_ALLOF (regexp)->regexps [i]->mode != rm_nothing)\n-\t    {\n-\t      max_seq_length = 0;\n-\t      break;\n-\t    }\n+\t  {\n+\t    if (REGEXP_ALLOF (regexp)->regexps [i]->mode == rm_sequence)\n+\t      {\n+\t\tseq = REGEXP_ALLOF (regexp)->regexps [i];\n+\t\tif (max_seq_length < REGEXP_SEQUENCE (seq)->regexps_num)\n+\t\t  max_seq_length = REGEXP_SEQUENCE (seq)->regexps_num;\n+\t      }\n+\t    else if (REGEXP_ALLOF (regexp)->regexps [i]->mode != rm_unit\n+\t\t     && REGEXP_ALLOF (regexp)->regexps [i]->mode != rm_nothing)\n+\t      {\n+\t\tmax_seq_length = 0;\n+\t\tbreak;\n+\t      }\n+\t  }\n       if (max_seq_length != 0)\n \t{\n \t  if (max_seq_length == 1 || REGEXP_ALLOF (regexp)->regexps_num <= 1)"}, {"sha": "36dca9be193d1672b8b0c41d148adf0fa2a1c582", "filename": "gcc/local-alloc.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd1b7476b15731af50e306410e72d5d307236e67/gcc%2Flocal-alloc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd1b7476b15731af50e306410e72d5d307236e67/gcc%2Flocal-alloc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flocal-alloc.c?ref=dd1b7476b15731af50e306410e72d5d307236e67", "patch": "@@ -2427,7 +2427,7 @@ requires_inout (p)\n   int num_matching_alts = 0;\n   int len;\n \n-  for ( ; c = *p; p += len)\n+  for ( ; (c = *p); p += len)\n     {\n       len = CONSTRAINT_LEN (c, p);\n       switch (c)"}, {"sha": "11bcec97a30fc9fc79eededf75961d7d2d723c8a", "filename": "gcc/timevar.c", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd1b7476b15731af50e306410e72d5d307236e67/gcc%2Ftimevar.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd1b7476b15731af50e306410e72d5d307236e67/gcc%2Ftimevar.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftimevar.c?ref=dd1b7476b15731af50e306410e72d5d307236e67", "patch": "@@ -21,17 +21,18 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n \n #include \"config.h\"\n #include \"system.h\"\n-#include \"coretypes.h\"\n-#include \"tm.h\"\n-#include \"intl.h\"\n-#include \"rtl.h\"\n-\n #ifdef HAVE_SYS_TIMES_H\n # include <sys/times.h>\n #endif\n #ifdef HAVE_SYS_RESOURCE_H\n #include <sys/resource.h>\n #endif\n+#include \"coretypes.h\"\n+#include \"tm.h\"\n+#include \"intl.h\"\n+#include \"rtl.h\"\n+#include \"toplev.h\"\n+\n \n #ifndef HAVE_CLOCK_T\n typedef int clock_t;"}]}