{"sha": "1b40975c87503035f4a1647f959740369f9f3aed", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWI0MDk3NWM4NzUwMzAzNWY0YTE2NDdmOTU5NzQwMzY5ZjlmM2FlZA==", "commit": {"author": {"name": "Pekka J\u00e4\u00e4skel\u00e4inen", "email": "pekka.jaaskelainen@parmance.com", "date": "2018-05-04T16:40:50Z"}, "committer": {"name": "Pekka J\u00e4\u00e4skel\u00e4inen", "email": "visit0r@gcc.gnu.org", "date": "2018-05-04T16:40:50Z"}, "message": "[BRIGFE] fix an alloca stack underflow\n\nWe didn't preserve additional space for the alloca frame pointers that\nare needed to be saved in the alloca space.\n\nFixes libgomp.c++/target-6.C execution test.\n\nFrom-SVN: r259942", "tree": {"sha": "f602a98b4ecebf4ce3501844d330963c50001122", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f602a98b4ecebf4ce3501844d330963c50001122"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1b40975c87503035f4a1647f959740369f9f3aed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b40975c87503035f4a1647f959740369f9f3aed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1b40975c87503035f4a1647f959740369f9f3aed", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b40975c87503035f4a1647f959740369f9f3aed/comments", "author": {"login": "pjaaskel", "id": 1652632, "node_id": "MDQ6VXNlcjE2NTI2MzI=", "avatar_url": "https://avatars.githubusercontent.com/u/1652632?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pjaaskel", "html_url": "https://github.com/pjaaskel", "followers_url": "https://api.github.com/users/pjaaskel/followers", "following_url": "https://api.github.com/users/pjaaskel/following{/other_user}", "gists_url": "https://api.github.com/users/pjaaskel/gists{/gist_id}", "starred_url": "https://api.github.com/users/pjaaskel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pjaaskel/subscriptions", "organizations_url": "https://api.github.com/users/pjaaskel/orgs", "repos_url": "https://api.github.com/users/pjaaskel/repos", "events_url": "https://api.github.com/users/pjaaskel/events{/privacy}", "received_events_url": "https://api.github.com/users/pjaaskel/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "534fe823347ae065c53d890607f95229f25b336d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/534fe823347ae065c53d890607f95229f25b336d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/534fe823347ae065c53d890607f95229f25b336d"}], "stats": {"total": 19, "additions": 16, "deletions": 3}, "files": [{"sha": "5ab9e8515f00573deec1274933a8b119e86edbf1", "filename": "libhsail-rt/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b40975c87503035f4a1647f959740369f9f3aed/libhsail-rt%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b40975c87503035f4a1647f959740369f9f3aed/libhsail-rt%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libhsail-rt%2FChangeLog?ref=1b40975c87503035f4a1647f959740369f9f3aed", "patch": "@@ -1,3 +1,7 @@\n+2018-05-04  Pekka J\u00e4\u00e4skel\u00e4inen  <pekka.jaaskelainen@parmance.com>\n+\n+\t* rt/workitems.c: Fix an alloca stack underflow.\n+\n 2018-04-18  David Malcolm  <dmalcolm@redhat.com>\n \n \tPR jit/85384"}, {"sha": "36c91691a71450c186a50ac1346560cf4ef51b38", "filename": "libhsail-rt/rt/workitems.c", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b40975c87503035f4a1647f959740369f9f3aed/libhsail-rt%2Frt%2Fworkitems.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b40975c87503035f4a1647f959740369f9f3aed/libhsail-rt%2Frt%2Fworkitems.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libhsail-rt%2Frt%2Fworkitems.c?ref=1b40975c87503035f4a1647f959740369f9f3aed", "patch": "@@ -63,6 +63,12 @@ static clock_t start_time;\n #define FIBER_STACK_SIZE (64*1024)\n #define GROUP_SEGMENT_ALIGN 256\n \n+/* Preserve this amount of additional space in the alloca stack as we need to\n+   store the alloca frame pointer to the alloca frame, thus must preserve\n+   space for it.  This thus supports at most 1024 functions with allocas in\n+   a call chain.  */\n+#define ALLOCA_OVERHEAD 1024*4\n+\n uint32_t __hsail_workitemabsid (uint32_t dim, PHSAWorkItem *context);\n \n uint32_t __hsail_workitemid (uint32_t dim, PHSAWorkItem *context);\n@@ -246,7 +252,7 @@ phsa_execute_wi_gang (PHSAKernelLaunchData *context, void *group_base_ptr,\n \t   != 0)\n     phsa_fatal_error (3);\n \n-  wg.alloca_stack_p = wg.private_segment_total_size;\n+  wg.alloca_stack_p = wg.private_segment_total_size + ALLOCA_OVERHEAD;\n   wg.alloca_frame_p = wg.alloca_stack_p;\n   wg.initial_group_offset = group_local_offset;\n \n@@ -446,7 +452,7 @@ phsa_execute_work_groups (PHSAKernelLaunchData *context, void *group_base_ptr,\n \t   != 0)\n     phsa_fatal_error (3);\n \n-  wg.alloca_stack_p = dp->private_segment_size * wg_size;\n+  wg.alloca_stack_p = dp->private_segment_size * wg_size + ALLOCA_OVERHEAD;\n   wg.alloca_frame_p = wg.alloca_stack_p;\n \n   wg.private_base_ptr = private_base_ptr;\n@@ -867,9 +873,12 @@ uint32_t\n __hsail_alloca (uint32_t size, uint32_t align, PHSAWorkItem *wi)\n {\n   volatile PHSAWorkGroup *wg = wi->wg;\n-  uint32_t new_pos = wg->alloca_stack_p - size;\n+  int64_t new_pos = wg->alloca_stack_p - size;\n   while (new_pos % align != 0)\n     new_pos--;\n+  if (new_pos < 0)\n+    phsa_fatal_error (2);\n+\n   wg->alloca_stack_p = new_pos;\n \n #ifdef DEBUG_ALLOCA"}]}