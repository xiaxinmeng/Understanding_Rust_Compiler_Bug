{"sha": "252043ee440c4f59c85236e88ed663acf7d56bb7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjUyMDQzZWU0NDBjNGY1OWM4NTIzNmU4OGVkNjYzYWNmN2Q1NmJiNw==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-04-25T01:09:03Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-04-25T01:09:03Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r826", "tree": {"sha": "8c87352406528d08744e5738d92b47f02819b804", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8c87352406528d08744e5738d92b47f02819b804"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/252043ee440c4f59c85236e88ed663acf7d56bb7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/252043ee440c4f59c85236e88ed663acf7d56bb7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/252043ee440c4f59c85236e88ed663acf7d56bb7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/252043ee440c4f59c85236e88ed663acf7d56bb7/comments", "author": null, "committer": null, "parents": [{"sha": "c785c6603cd6b1f9550702a894f9918622eb8019", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c785c6603cd6b1f9550702a894f9918622eb8019", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c785c6603cd6b1f9550702a894f9918622eb8019"}], "stats": {"total": 9, "additions": 5, "deletions": 4}, "files": [{"sha": "59aafd9c487d2db035b85b591ab8dbfcba5b83d9", "filename": "gcc/assert.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/252043ee440c4f59c85236e88ed663acf7d56bb7/gcc%2Fassert.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/252043ee440c4f59c85236e88ed663acf7d56bb7/gcc%2Fassert.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fassert.h?ref=252043ee440c4f59c85236e88ed663acf7d56bb7", "patch": "@@ -13,7 +13,7 @@\n   ((void) ((expression) ? 0 : __assert (expression, __FILE__, __LINE__)))\n \n #define __assert(expression, file, lineno)  \\\n-  (printf (\"%s:%d: failed assertion\\n\", file, lineno),\t\\\n+  (printf (\"%s:%u: failed assertion\\n\", file, lineno),\t\\\n    abort (), 0)\n \n #else\n@@ -27,7 +27,7 @@ extern void __eprintf (const char *, const char *, int, const char *);\n   ((void) ((expression) ? 0 : __assert (#expression, __FILE__, __LINE__)))\n \n #define __assert(expression, file, line)  \\\n-  (__eprintf (\"%s:%d: failed assertion `%s'\\n\",\t\t\\\n+  (__eprintf (\"%s:%u: failed assertion `%s'\\n\",\t\t\\\n \t      file, line, expression), 0)\n \n #else /* no __STDC__; i.e. -traditional.  */\n@@ -38,7 +38,7 @@ extern void __eprintf (); /* Defined in libgcc.a */\n   ((void) ((expression) ? 0 : __assert (expression, __FILE__, __LINE__)))\n \n #define __assert(expression, file, lineno)  \\\n-  (__eprintf (\"%s:%d: failed assertion `%s'\\n\",\t\t\\\n+  (__eprintf (\"%s:%u: failed assertion `%s'\\n\",\t\t\\\n \t      file, lineno, \"expression\"), 0)\n \n #endif /* no __STDC__; i.e. -traditional.  */"}, {"sha": "fcdd9d026a40413978013da8f7bdf359c942a93d", "filename": "gcc/config/svr4.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/252043ee440c4f59c85236e88ed663acf7d56bb7/gcc%2Fconfig%2Fsvr4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/252043ee440c4f59c85236e88ed663acf7d56bb7/gcc%2Fconfig%2Fsvr4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsvr4.h?ref=252043ee440c4f59c85236e88ed663acf7d56bb7", "patch": "@@ -499,6 +499,7 @@ dtors_section ()\t\t\t\t\t\t\t\\\n \n #define TYPE_ASM_OP\t\".type\"\n #define SIZE_ASM_OP\t\".size\"\n+#define WEAK_ASM_OP\t\".weak\"\n \n /* The following macro defines the format used to output the second\n    operand of the .type assembler directive.  Different svr4 assemblers\n@@ -570,7 +571,7 @@ dtors_section ()\t\t\t\t\t\t\t\\\n         fprintf (FILE, \",\");\t\t\t\t\t\t\\\n \tassemble_name (FILE, label);\t\t\t\t\t\\\n         fprintf (FILE, \"-\");\t\t\t\t\t\t\\\n-\tASM_OUTPUT_LABELREF (FILE, (FNAME));\t\t\t\t\\\n+\tassemble_name (FILE, (FNAME));\t\t\t\t\t\\\n \tputc ('\\n', FILE);\t\t\t\t\t\t\\\n       }\t\t\t\t\t\t\t\t\t\\\n   } while (0)"}]}