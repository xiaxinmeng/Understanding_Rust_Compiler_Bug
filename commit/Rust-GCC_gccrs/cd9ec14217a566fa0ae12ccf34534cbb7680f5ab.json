{"sha": "cd9ec14217a566fa0ae12ccf34534cbb7680f5ab", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2Q5ZWMxNDIxN2E1NjZmYTBhZTEyY2NmMzQ1MzRjYmI3NjgwZjVhYg==", "commit": {"author": {"name": "Matthias Klose", "email": "doko@ubuntu.com", "date": "2015-11-23T20:27:57Z"}, "committer": {"name": "Matthias Klose", "email": "doko@gcc.gnu.org", "date": "2015-11-23T20:27:57Z"}, "message": "2015-11-23  Matthias Klose  <doko@ubuntu.com>\n\n        * Imported zlib 1.2.8; merged local changes.\n\nFrom-SVN: r230774", "tree": {"sha": "c0867a0d04452190fa29a7e38ad632c37d5221cd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c0867a0d04452190fa29a7e38ad632c37d5221cd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/comments", "author": {"login": "doko42", "id": 11258518, "node_id": "MDQ6VXNlcjExMjU4NTE4", "avatar_url": "https://avatars.githubusercontent.com/u/11258518?v=4", "gravatar_id": "", "url": "https://api.github.com/users/doko42", "html_url": "https://github.com/doko42", "followers_url": "https://api.github.com/users/doko42/followers", "following_url": "https://api.github.com/users/doko42/following{/other_user}", "gists_url": "https://api.github.com/users/doko42/gists{/gist_id}", "starred_url": "https://api.github.com/users/doko42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/doko42/subscriptions", "organizations_url": "https://api.github.com/users/doko42/orgs", "repos_url": "https://api.github.com/users/doko42/repos", "events_url": "https://api.github.com/users/doko42/events{/privacy}", "received_events_url": "https://api.github.com/users/doko42/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4c93660449ea23e5eee1f8ce3e97129c7974b7fc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c93660449ea23e5eee1f8ce3e97129c7974b7fc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4c93660449ea23e5eee1f8ce3e97129c7974b7fc"}], "stats": {"total": 4054, "additions": 3657, "deletions": 397}, "files": [{"sha": "0c0247cc516b4493bb9a9b66f743a6110139a2b5", "filename": "zlib/CMakeLists.txt", "status": "modified", "additions": 45, "deletions": 7, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2FCMakeLists.txt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2FCMakeLists.txt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2FCMakeLists.txt?ref=cd9ec14217a566fa0ae12ccf34534cbb7680f5ab", "patch": "@@ -3,7 +3,10 @@ set(CMAKE_ALLOW_LOOSE_LOOP_CONSTRUCTS ON)\n \n project(zlib C)\n \n-set(VERSION \"1.2.7\")\n+set(VERSION \"1.2.8\")\n+\n+option(ASM686 \"Enable building i686 assembly implementation\")\n+option(AMD64 \"Enable building amd64 assembly implementation\")\n \n set(INSTALL_BIN_DIR \"${CMAKE_INSTALL_PREFIX}/bin\" CACHE PATH \"Installation directory for executables\")\n set(INSTALL_LIB_DIR \"${CMAKE_INSTALL_PREFIX}/lib\" CACHE PATH \"Installation directory for libraries\")\n@@ -121,11 +124,44 @@ set(ZLIB_SRCS\n )\n \n if(NOT MINGW)\n-    set(ZLIB_SRCS ${ZLIB_SRCS}\n+    set(ZLIB_DLL_SRCS\n         win32/zlib1.rc # If present will override custom build rule below.\n     )\n endif()\n \n+if(CMAKE_COMPILER_IS_GNUCC)\n+    if(ASM686)\n+        set(ZLIB_ASMS contrib/asm686/match.S)\n+    elseif (AMD64)\n+        set(ZLIB_ASMS contrib/amd64/amd64-match.S)\n+    endif ()\n+\n+\tif(ZLIB_ASMS)\n+\t\tadd_definitions(-DASMV)\n+\t\tset_source_files_properties(${ZLIB_ASMS} PROPERTIES LANGUAGE C COMPILE_FLAGS -DNO_UNDERLINE)\n+\tendif()\n+endif()\n+\n+if(MSVC)\n+    if(ASM686)\n+\t\tENABLE_LANGUAGE(ASM_MASM)\n+        set(ZLIB_ASMS\n+\t\t\tcontrib/masmx86/inffas32.asm\n+\t\t\tcontrib/masmx86/match686.asm\n+\t\t)\n+    elseif (AMD64)\n+\t\tENABLE_LANGUAGE(ASM_MASM)\n+        set(ZLIB_ASMS\n+\t\t\tcontrib/masmx64/gvmat64.asm\n+\t\t\tcontrib/masmx64/inffasx64.asm\n+\t\t)\n+    endif()\n+\n+\tif(ZLIB_ASMS)\n+\t\tadd_definitions(-DASMV -DASMINF)\n+\tendif()\n+endif()\n+\n # parse the full version number from zlib.h and include in ZLIB_FULL_VERSION\n file(READ ${CMAKE_CURRENT_SOURCE_DIR}/zlib.h _zlib_h_contents)\n string(REGEX REPLACE \".*#define[ \\t]+ZLIB_VERSION[ \\t]+\\\"([-0-9A-Za-z.]+)\\\".*\"\n@@ -134,7 +170,7 @@ string(REGEX REPLACE \".*#define[ \\t]+ZLIB_VERSION[ \\t]+\\\"([-0-9A-Za-z.]+)\\\".*\"\n if(MINGW)\n     # This gets us DLL resource information when compiling on MinGW.\n     if(NOT CMAKE_RC_COMPILER)\n-        SET(CMAKE_RC_COMPILER windres.exe)\n+        set(CMAKE_RC_COMPILER windres.exe)\n     endif()\n \n     add_custom_command(OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/zlib1rc.obj\n@@ -144,11 +180,11 @@ if(MINGW)\n                             -I ${CMAKE_CURRENT_BINARY_DIR}\n                             -o ${CMAKE_CURRENT_BINARY_DIR}/zlib1rc.obj\n                             -i ${CMAKE_CURRENT_SOURCE_DIR}/win32/zlib1.rc)\n-    set(ZLIB_SRCS ${ZLIB_SRCS} ${CMAKE_CURRENT_BINARY_DIR}/zlib1rc.obj)\n+    set(ZLIB_DLL_SRCS ${CMAKE_CURRENT_BINARY_DIR}/zlib1rc.obj)\n endif(MINGW)\n \n-add_library(zlib SHARED ${ZLIB_SRCS} ${ZLIB_PUBLIC_HDRS} ${ZLIB_PRIVATE_HDRS})\n-add_library(zlibstatic STATIC ${ZLIB_SRCS} ${ZLIB_PUBLIC_HDRS} ${ZLIB_PRIVATE_HDRS})\n+add_library(zlib SHARED ${ZLIB_SRCS} ${ZLIB_ASMS} ${ZLIB_DLL_SRCS} ${ZLIB_PUBLIC_HDRS} ${ZLIB_PRIVATE_HDRS})\n+add_library(zlibstatic STATIC ${ZLIB_SRCS} ${ZLIB_ASMS} ${ZLIB_PUBLIC_HDRS} ${ZLIB_PRIVATE_HDRS})\n set_target_properties(zlib PROPERTIES DEFINE_SYMBOL ZLIB_DLL)\n set_target_properties(zlib PROPERTIES SOVERSION 1)\n \n@@ -166,7 +202,9 @@ endif()\n if(UNIX)\n     # On unix-like platforms the library is almost always called libz\n    set_target_properties(zlib zlibstatic PROPERTIES OUTPUT_NAME z)\n-   set_target_properties(zlib PROPERTIES LINK_FLAGS \"-Wl,--version-script,${CMAKE_CURRENT_SOURCE_DIR}/zlib.map\")\n+   if(NOT APPLE)\n+     set_target_properties(zlib PROPERTIES LINK_FLAGS \"-Wl,--version-script,\\\"${CMAKE_CURRENT_SOURCE_DIR}/zlib.map\\\"\")\n+   endif()\n elseif(BUILD_SHARED_LIBS AND WIN32)\n     # Creates zlib1.dll when building shared library version\n     set_target_properties(zlib PROPERTIES SUFFIX \"1.dll\")"}, {"sha": "47cb65dc6105e3a3a27aea1489a61b845e8dd640", "filename": "zlib/ChangeLog", "status": "modified", "additions": 63, "deletions": 0, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2FChangeLog?ref=cd9ec14217a566fa0ae12ccf34534cbb7680f5ab", "patch": "@@ -1,6 +1,69 @@\n \n                 ChangeLog file for zlib\n \n+Changes in 1.2.8 (28 Apr 2013)\n+- Update contrib/minizip/iowin32.c for Windows RT [Vollant]\n+- Do not force Z_CONST for C++\n+- Clean up contrib/vstudio [Ro\ufffd]\n+- Correct spelling error in zlib.h\n+- Fix mixed line endings in contrib/vstudio\n+\n+Changes in 1.2.7.3 (13 Apr 2013)\n+- Fix version numbers and DLL names in contrib/vstudio/*/zlib.rc\n+\n+Changes in 1.2.7.2 (13 Apr 2013)\n+- Change check for a four-byte type back to hexadecimal\n+- Fix typo in win32/Makefile.msc\n+- Add casts in gzwrite.c for pointer differences\n+\n+Changes in 1.2.7.1 (24 Mar 2013)\n+- Replace use of unsafe string functions with snprintf if available\n+- Avoid including stddef.h on Windows for Z_SOLO compile [Niessink]\n+- Fix gzgetc undefine when Z_PREFIX set [Turk]\n+- Eliminate use of mktemp in Makefile (not always available)\n+- Fix bug in 'F' mode for gzopen()\n+- Add inflateGetDictionary() function\n+- Correct comment in deflate.h\n+- Use _snprintf for snprintf in Microsoft C\n+- On Darwin, only use /usr/bin/libtool if libtool is not Apple\n+- Delete \"--version\" file if created by \"ar --version\" [Richard G.]\n+- Fix configure check for veracity of compiler error return codes\n+- Fix CMake compilation of static lib for MSVC2010 x64\n+- Remove unused variable in infback9.c\n+- Fix argument checks in gzlog_compress() and gzlog_write()\n+- Clean up the usage of z_const and respect const usage within zlib\n+- Clean up examples/gzlog.[ch] comparisons of different types\n+- Avoid shift equal to bits in type (caused endless loop)\n+- Fix unintialized value bug in gzputc() introduced by const patches\n+- Fix memory allocation error in examples/zran.c [Nor]\n+- Fix bug where gzopen(), gzclose() would write an empty file\n+- Fix bug in gzclose() when gzwrite() runs out of memory\n+- Check for input buffer malloc failure in examples/gzappend.c\n+- Add note to contrib/blast to use binary mode in stdio\n+- Fix comparisons of differently signed integers in contrib/blast\n+- Check for invalid code length codes in contrib/puff\n+- Fix serious but very rare decompression bug in inftrees.c\n+- Update inflateBack() comments, since inflate() can be faster\n+- Use underscored I/O function names for WINAPI_FAMILY\n+- Add _tr_flush_bits to the external symbols prefixed by --zprefix\n+- Add contrib/vstudio/vc10 pre-build step for static only\n+- Quote --version-script argument in CMakeLists.txt\n+- Don't specify --version-script on Apple platforms in CMakeLists.txt\n+- Fix casting error in contrib/testzlib/testzlib.c\n+- Fix types in contrib/minizip to match result of get_crc_table()\n+- Simplify contrib/vstudio/vc10 with 'd' suffix\n+- Add TOP support to win32/Makefile.msc\n+- Suport i686 and amd64 assembler builds in CMakeLists.txt\n+- Fix typos in the use of _LARGEFILE64_SOURCE in zconf.h\n+- Add vc11 and vc12 build files to contrib/vstudio\n+- Add gzvprintf() as an undocumented function in zlib\n+- Fix configure for Sun shell\n+- Remove runtime check in configure for four-byte integer type\n+- Add casts and consts to ease user conversion to C++\n+- Add man pages for minizip and miniunzip\n+- In Makefile uninstall, don't rm if preceding cd fails\n+- Do not return Z_BUF_ERROR if deflateParam() has nothing to write\n+\n Changes in 1.2.7 (2 May 2012)\n - Replace use of memmove() with a simple copy for portability\n - Test for existence of strerror"}, {"sha": "252f2299fda7e881053152db5da8410684a1f3bc", "filename": "zlib/ChangeLog.gcj", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2FChangeLog.gcj", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2FChangeLog.gcj", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2FChangeLog.gcj?ref=cd9ec14217a566fa0ae12ccf34534cbb7680f5ab", "patch": "@@ -1,3 +1,7 @@\n+2015-11-23  Matthias Klose  <doko@ubuntu.com>\n+\n+\t* Imported zlib 1.2.8; merged local changes.\n+\n 2015-05-13  Michael Haubenwallner  <michael.haubenwallner@ssi-schaefer.com>\n \n \t* Makefile.in: Regenerated with automake-1.11.6."}, {"sha": "9e98215c9f643a2ce55a5f0006818ce612fffb3f", "filename": "zlib/README", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2FREADME", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2FREADME", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2FREADME?ref=cd9ec14217a566fa0ae12ccf34534cbb7680f5ab", "patch": "@@ -3,7 +3,7 @@ shipped with GCC as convenience.\n \n ZLIB DATA COMPRESSION LIBRARY\n \n-zlib 1.2.7 is a general purpose data compression library.  All the code is\n+zlib 1.2.8 is a general purpose data compression library.  All the code is\n thread safe.  The data format used by the zlib library is described by RFCs\n (Request for Comments) 1950 to 1952 in the files\n http://tools.ietf.org/html/rfc1950 (zlib format), rfc1951 (deflate format) and\n@@ -34,7 +34,7 @@ Mark Nelson <markn@ieee.org> wrote an article about zlib for the Jan.  1997\n issue of Dr.  Dobb's Journal; a copy of the article is available at\n http://marknelson.us/1997/01/01/zlib-engine/ .\n \n-The changes made in version 1.2.7 are documented in the file ChangeLog.\n+The changes made in version 1.2.8 are documented in the file ChangeLog.\n \n Unsupported third party contributions are provided in directory contrib/ .\n \n@@ -87,7 +87,7 @@ Acknowledgments:\n \n Copyright notice:\n \n- (C) 1995-2012 Jean-loup Gailly and Mark Adler\n+ (C) 1995-2013 Jean-loup Gailly and Mark Adler\n \n   This software is provided 'as-is', without any express or implied\n   warranty.  In no event will the authors be held liable for any damages"}, {"sha": "98814fd4c145714602656d17c47eb0dbe0f53d8b", "filename": "zlib/as400/bndsrc", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Fas400%2Fbndsrc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Fas400%2Fbndsrc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fas400%2Fbndsrc?ref=cd9ec14217a566fa0ae12ccf34534cbb7680f5ab", "patch": "@@ -202,4 +202,14 @@ STRPGMEXP PGMLVL(*CURRENT) SIGNATURE('ZLIB')\n \n   EXPORT SYMBOL(\"inflateResetKeep\")\n \n+/*@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*/\n+/*   Version 1.2.8 additional entry points.                         */\n+/*@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*/\n+\n+/********************************************************************/\n+/*   *MODULE      INFLATE      ZLIB         01/02/01  00:15:09      */\n+/********************************************************************/\n+\n+  EXPORT SYMBOL(\"inflateGetDictionary\")\n+\n ENDPGMEXP"}, {"sha": "e3f47c638727ec9fb1c11d9e4415bca6f47cf214", "filename": "zlib/as400/compile.clp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Fas400%2Fcompile.clp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Fas400%2Fcompile.clp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fas400%2Fcompile.clp?ref=cd9ec14217a566fa0ae12ccf34534cbb7680f5ab", "patch": "@@ -105,6 +105,6 @@\n                                  &MODLIB/TREES       &MODLIB/UNCOMPR     +\n                                  &MODLIB/ZUTIL)                          +\n                           SRCFILE(&SRCLIB/&CTLFILE) SRCMBR(BNDSRC)       +\n-                          TEXT('ZLIB 1.2.7') TGTRLS(&TGTRLS)\n+                          TEXT('ZLIB 1.2.8') TGTRLS(&TGTRLS)\n \n              ENDPGM"}, {"sha": "7b5d93bf51f6c6378610782fd84f88eafe4199db", "filename": "zlib/as400/readme.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Fas400%2Freadme.txt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Fas400%2Freadme.txt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fas400%2Freadme.txt?ref=cd9ec14217a566fa0ae12ccf34534cbb7680f5ab", "patch": "@@ -1,4 +1,4 @@\n-        ZLIB version 1.2.7 for AS400 installation instructions\n+        ZLIB version 1.2.8 for AS400 installation instructions\n \n I) From an AS400 *SAVF file:\n "}, {"sha": "7341a6d818760f0ce1d0911147f66fda6d867ff2", "filename": "zlib/as400/zlib.inc", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Fas400%2Fzlib.inc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Fas400%2Fzlib.inc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fas400%2Fzlib.inc?ref=cd9ec14217a566fa0ae12ccf34534cbb7680f5ab", "patch": "@@ -1,7 +1,7 @@\n       *  ZLIB.INC - Interface to the general purpose compression library\n       *\n       *  ILE RPG400 version by Patrick Monnerat, DATASPHERE.\n-      *  Version 1.2.7\n+      *  Version 1.2.8\n       *\n       *\n       *  WARNING:\n@@ -22,12 +22,12 @@\n       *\n       *  Versioning information.\n       *\n-     D ZLIB_VERSION    C                   '1.2.7'\n-     D ZLIB_VERNUM     C                   X'1270'\n+     D ZLIB_VERSION    C                   '1.2.8'\n+     D ZLIB_VERNUM     C                   X'1280'\n      D ZLIB_VER_MAJOR  C                   1\n      D ZLIB_VER_MINOR  C                   2\n      D ZLIB_VER_REVISION...\n-     D                 C                   7\n+     D                 C                   8\n      D ZLIB_VER_SUBREVISION...\n      D                 C                   0\n       *\n@@ -359,6 +359,12 @@\n      D  dictionary                65535    const options(*varsize)              Dictionary bytes\n      D  dictLength                   10U 0 value                                Dictionary length\n       *\n+     D inflateGetDictionary...\n+     D                 PR            10I 0 extproc('inflateGetDictionary')      Get dictionary\n+     D  strm                               like(z_stream)                       Expansion stream\n+     D  dictionary                65535    options(*varsize)                    Dictionary bytes\n+     D  dictLength                   10U 0                                      Dictionary length\n+      *\n      D inflateSync     PR            10I 0 extproc('inflateSync')               Sync. expansion\n      D  strm                               like(z_stream)                       Expansion stream\n       *"}, {"sha": "5dfe73b072d0ee42128f3ccdd29f1a38613dde53", "filename": "zlib/compress.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Fcompress.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Fcompress.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcompress.c?ref=cd9ec14217a566fa0ae12ccf34534cbb7680f5ab", "patch": "@@ -29,7 +29,7 @@ int ZEXPORT compress2 (dest, destLen, source, sourceLen, level)\n     z_stream stream;\n     int err;\n \n-    stream.next_in = (Bytef*)source;\n+    stream.next_in = (z_const Bytef *)source;\n     stream.avail_in = (uInt)sourceLen;\n #ifdef MAXSEG_64K\n     /* Check for source > 64K on 16-bit machine: */"}, {"sha": "c66349b7c67606babdd04050329828139d1a9ea0", "filename": "zlib/contrib/README.contrib", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Fcontrib%2FREADME.contrib", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Fcontrib%2FREADME.contrib", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2FREADME.contrib?ref=cd9ec14217a566fa0ae12ccf34534cbb7680f5ab", "patch": "@@ -75,3 +75,4 @@ untgz/      by Pedro A. Aranda Gutierrez <paag@tid.es>\n \n vstudio/    by Gilles Vollant <info@winimage.com>\n         Building a minizip-enhanced zlib with Microsoft Visual Studio\n+        Includes vc11 from kreuzerkrieg and vc12 from davispuh"}, {"sha": "69ef0fe00e8d883539e88596dadd4ba51e2a5704", "filename": "zlib/contrib/blast/blast.c", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Fcontrib%2Fblast%2Fblast.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Fcontrib%2Fblast%2Fblast.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fblast%2Fblast.c?ref=cd9ec14217a566fa0ae12ccf34534cbb7680f5ab", "patch": "@@ -1,7 +1,7 @@\n /* blast.c\n- * Copyright (C) 2003 Mark Adler\n+ * Copyright (C) 2003, 2012 Mark Adler\n  * For conditions of distribution and use, see copyright notice in blast.h\n- * version 1.1, 16 Feb 2003\n+ * version 1.2, 24 Oct 2012\n  *\n  * blast.c decompresses data compressed by the PKWare Compression Library.\n  * This function provides functionality similar to the explode() function of\n@@ -22,6 +22,8 @@\n  *\n  * 1.0  12 Feb 2003     - First version\n  * 1.1  16 Feb 2003     - Fixed distance check for > 4 GB uncompressed data\n+ * 1.2  24 Oct 2012     - Add note about using binary mode in stdio\n+ *                      - Fix comparisons of differently signed integers\n  */\n \n #include <setjmp.h>             /* for setjmp(), longjmp(), and jmp_buf */\n@@ -279,7 +281,7 @@ local int decomp(struct state *s)\n     int dict;           /* log2(dictionary size) - 6 */\n     int symbol;         /* decoded symbol, extra bits for distance */\n     int len;            /* length for copy */\n-    int dist;           /* distance for copy */\n+    unsigned dist;      /* distance for copy */\n     int copy;           /* copy counter */\n     unsigned char *from, *to;   /* copy pointers */\n     static int virgin = 1;                              /* build tables once */"}, {"sha": "658cfd32004031af173a450bd7c4c7bc09e1b5a7", "filename": "zlib/contrib/blast/blast.h", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Fcontrib%2Fblast%2Fblast.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Fcontrib%2Fblast%2Fblast.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fblast%2Fblast.h?ref=cd9ec14217a566fa0ae12ccf34534cbb7680f5ab", "patch": "@@ -1,6 +1,6 @@\n /* blast.h -- interface for blast.c\n-  Copyright (C) 2003 Mark Adler\n-  version 1.1, 16 Feb 2003\n+  Copyright (C) 2003, 2012 Mark Adler\n+  version 1.2, 24 Oct 2012\n \n   This software is provided 'as-is', without any express or implied\n   warranty.  In no event will the author be held liable for any damages\n@@ -28,6 +28,10 @@\n  * that library.  (Note: PKWare overused the \"implode\" verb, and the format\n  * used by their library implode() function is completely different and\n  * incompatible with the implode compression method supported by PKZIP.)\n+ *\n+ * The binary mode for stdio functions should be used to assure that the\n+ * compressed data is not corrupted when read or written.  For example:\n+ * fopen(..., \"rb\") and fopen(..., \"wb\").\n  */\n \n "}, {"sha": "a579974f0440d3938bd1fb9ea6f95d3e53edf6af", "filename": "zlib/contrib/delphi/ZLib.pas", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Fcontrib%2Fdelphi%2FZLib.pas", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Fcontrib%2Fdelphi%2FZLib.pas", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fdelphi%2FZLib.pas?ref=cd9ec14217a566fa0ae12ccf34534cbb7680f5ab", "patch": "@@ -152,7 +152,7 @@ procedure DecompressToUserBuf(const InBuf: Pointer; InBytes: Integer;\n   const OutBuf: Pointer; BufSize: Integer);\n \n const\n-  zlib_version = '1.2.7';\n+  zlib_version = '1.2.8';\n \n type\n   EZlibError = class(Exception);"}, {"sha": "b273d54b348adb6ee0df267264250e0e130265e3", "filename": "zlib/contrib/dotzlib/DotZLib/UnitTests.cs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Fcontrib%2Fdotzlib%2FDotZLib%2FUnitTests.cs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Fcontrib%2Fdotzlib%2FDotZLib%2FUnitTests.cs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fdotzlib%2FDotZLib%2FUnitTests.cs?ref=cd9ec14217a566fa0ae12ccf34534cbb7680f5ab", "patch": "@@ -1,5 +1,5 @@\n //\r\n-// \ufffd Copyright Henrik Ravn 2004\r\n+// \u00a9 Copyright Henrik Ravn 2004\r\n //\r\n // Use, modification and distribution are subject to the Boost Software License, Version 1.0.\r\n // (See accompanying file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\r\n@@ -156,7 +156,7 @@ public class InfoTests\n         public void Info_Version()\r\n         {\r\n             Info info = new Info();\r\n-            Assert.AreEqual(\"1.2.7\", Info.Version);\r\n+            Assert.AreEqual(\"1.2.8\", Info.Version);\r\n             Assert.AreEqual(32, info.SizeOfUInt);\r\n             Assert.AreEqual(32, info.SizeOfULong);\r\n             Assert.AreEqual(32, info.SizeOfPointer);\r"}, {"sha": "05fb3e338070d67054858cd2fe469e3bbb2044a3", "filename": "zlib/contrib/infback9/infback9.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Fcontrib%2Finfback9%2Finfback9.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Fcontrib%2Finfback9%2Finfback9.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Finfback9%2Finfback9.c?ref=cd9ec14217a566fa0ae12ccf34534cbb7680f5ab", "patch": "@@ -222,14 +222,13 @@ out_func out;\n void FAR *out_desc;\n {\n     struct inflate_state FAR *state;\n-    unsigned char FAR *next;    /* next input */\n+    z_const unsigned char FAR *next;    /* next input */\n     unsigned char FAR *put;     /* next output */\n     unsigned have;              /* available input */\n     unsigned long left;         /* available output */\n     inflate_mode mode;          /* current inflate mode */\n     int lastblock;              /* true if processing last block */\n     int wrap;                   /* true if the window has wrapped */\n-    unsigned long write;        /* window write index */\n     unsigned char FAR *window;  /* allocated sliding window, if needed */\n     unsigned long hold;         /* bit buffer */\n     unsigned bits;              /* bits in bit buffer */\n@@ -259,7 +258,6 @@ void FAR *out_desc;\n     strm->msg = Z_NULL;\n     mode = TYPE;\n     lastblock = 0;\n-    write = 0;\n     wrap = 0;\n     window = state->window;\n     next = strm->next_in;"}, {"sha": "4a73ad215f5ac0be2b8f66d55b2aa86d99ed0676", "filename": "zlib/contrib/infback9/inftree9.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Fcontrib%2Finfback9%2Finftree9.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Fcontrib%2Finfback9%2Finftree9.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Finfback9%2Finftree9.c?ref=cd9ec14217a566fa0ae12ccf34534cbb7680f5ab", "patch": "@@ -1,5 +1,5 @@\n /* inftree9.c -- generate Huffman trees for efficient decoding\n- * Copyright (C) 1995-2012 Mark Adler\n+ * Copyright (C) 1995-2013 Mark Adler\n  * For conditions of distribution and use, see copyright notice in zlib.h\n  */\n \n@@ -9,7 +9,7 @@\n #define MAXBITS 15\n \n const char inflate9_copyright[] =\n-   \" inflate9 1.2.7 Copyright 1995-2012 Mark Adler \";\n+   \" inflate9 1.2.8 Copyright 1995-2013 Mark Adler \";\n /*\n   If you use the zlib library in a product, an acknowledgment is welcome\n   in the documentation of your product. If for some reason you cannot\n@@ -64,7 +64,7 @@ unsigned short FAR *work;\n     static const unsigned short lext[31] = { /* Length codes 257..285 extra */\n         128, 128, 128, 128, 128, 128, 128, 128, 129, 129, 129, 129,\n         130, 130, 130, 130, 131, 131, 131, 131, 132, 132, 132, 132,\n-        133, 133, 133, 133, 144, 78, 68};\n+        133, 133, 133, 133, 144, 72, 78};\n     static const unsigned short dbase[32] = { /* Distance codes 0..31 base */\n         1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49,\n         65, 97, 129, 193, 257, 385, 513, 769, 1025, 1537, 2049, 3073,"}, {"sha": "827a4e05770f87127cf1333b4b85d24503d6e532", "filename": "zlib/contrib/minizip/configure.ac", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Fcontrib%2Fminizip%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Fcontrib%2Fminizip%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fminizip%2Fconfigure.ac?ref=cd9ec14217a566fa0ae12ccf34534cbb7680f5ab", "patch": "@@ -1,7 +1,7 @@\n #                                               -*- Autoconf -*-\n # Process this file with autoconf to produce a configure script.\n \n-AC_INIT([minizip], [1.2.7], [bugzilla.redhat.com])\n+AC_INIT([minizip], [1.2.8], [bugzilla.redhat.com])\n AC_CONFIG_SRCDIR([minizip.c])\n AM_INIT_AUTOMAKE([foreign])\n LT_INIT"}, {"sha": "1e9e8200b201ff600aecd9eb7df1ac6989931266", "filename": "zlib/contrib/minizip/crypt.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Fcontrib%2Fminizip%2Fcrypt.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Fcontrib%2Fminizip%2Fcrypt.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fminizip%2Fcrypt.h?ref=cd9ec14217a566fa0ae12ccf34534cbb7680f5ab", "patch": "@@ -32,7 +32,7 @@\n /***********************************************************************\n  * Return the next byte in the pseudo-random sequence\n  */\n-static int decrypt_byte(unsigned long* pkeys, const unsigned long* pcrc_32_tab)\n+static int decrypt_byte(unsigned long* pkeys, const z_crc_t* pcrc_32_tab)\n {\n     unsigned temp;  /* POTENTIAL BUG:  temp*(temp^1) may overflow in an\n                      * unpredictable manner on 16-bit systems; not a problem\n@@ -45,7 +45,7 @@ static int decrypt_byte(unsigned long* pkeys, const unsigned long* pcrc_32_tab)\n /***********************************************************************\n  * Update the encryption keys with the next byte of plain text\n  */\n-static int update_keys(unsigned long* pkeys,const unsigned long* pcrc_32_tab,int c)\n+static int update_keys(unsigned long* pkeys,const z_crc_t* pcrc_32_tab,int c)\n {\n     (*(pkeys+0)) = CRC32((*(pkeys+0)), c);\n     (*(pkeys+1)) += (*(pkeys+0)) & 0xff;\n@@ -62,7 +62,7 @@ static int update_keys(unsigned long* pkeys,const unsigned long* pcrc_32_tab,int\n  * Initialize the encryption keys and the random header according to\n  * the given password.\n  */\n-static void init_keys(const char* passwd,unsigned long* pkeys,const unsigned long* pcrc_32_tab)\n+static void init_keys(const char* passwd,unsigned long* pkeys,const z_crc_t* pcrc_32_tab)\n {\n     *(pkeys+0) = 305419896L;\n     *(pkeys+1) = 591751049L;\n@@ -91,7 +91,7 @@ static int crypthead(const char* passwd,      /* password string */\n                      unsigned char* buf,      /* where to write header */\n                      int bufSize,\n                      unsigned long* pkeys,\n-                     const unsigned long* pcrc_32_tab,\n+                     const z_crc_t* pcrc_32_tab,\n                      unsigned long crcForCrypting)\n {\n     int n;                       /* index in random header */"}, {"sha": "a46d96c7fddc6347454efab6c999a8a4ce4cb9cf", "filename": "zlib/contrib/minizip/iowin32.c", "status": "modified", "additions": 85, "deletions": 13, "changes": 98, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Fcontrib%2Fminizip%2Fiowin32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Fcontrib%2Fminizip%2Fiowin32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fminizip%2Fiowin32.c?ref=cd9ec14217a566fa0ae12ccf34534cbb7680f5ab", "patch": "@@ -25,6 +25,13 @@\n #define INVALID_SET_FILE_POINTER ((DWORD)-1)\n #endif\n \n+\n+#if defined(WINAPI_FAMILY_PARTITION) && (!(defined(IOWIN32_USING_WINRT_API)))\n+#if WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_APP)\n+#define IOWIN32_USING_WINRT_API 1\n+#endif\n+#endif\n+\n voidpf  ZCALLBACK win32_open_file_func  OF((voidpf opaque, const char* filename, int mode));\n uLong   ZCALLBACK win32_read_file_func  OF((voidpf opaque, voidpf stream, void* buf, uLong size));\n uLong   ZCALLBACK win32_write_file_func OF((voidpf opaque, voidpf stream, const void* buf, uLong size));\n@@ -93,8 +100,22 @@ voidpf ZCALLBACK win32_open64_file_func (voidpf opaque,const void* filename,int\n \n     win32_translate_open_mode(mode,&dwDesiredAccess,&dwCreationDisposition,&dwShareMode,&dwFlagsAndAttributes);\n \n+#ifdef IOWIN32_USING_WINRT_API\n+#ifdef UNICODE\n+    if ((filename!=NULL) && (dwDesiredAccess != 0))\n+        hFile = CreateFile2((LPCTSTR)filename, dwDesiredAccess, dwShareMode, dwCreationDisposition, NULL);\n+#else\n+    if ((filename!=NULL) && (dwDesiredAccess != 0))\n+    {\n+        WCHAR filenameW[FILENAME_MAX + 0x200 + 1];\n+        MultiByteToWideChar(CP_ACP,0,(const char*)filename,-1,filenameW,FILENAME_MAX + 0x200);\n+        hFile = CreateFile2(filenameW, dwDesiredAccess, dwShareMode, dwCreationDisposition, NULL);\n+    }\n+#endif\n+#else\n     if ((filename!=NULL) && (dwDesiredAccess != 0))\n         hFile = CreateFile((LPCTSTR)filename, dwDesiredAccess, dwShareMode, NULL, dwCreationDisposition, dwFlagsAndAttributes, NULL);\n+#endif\n \n     return win32_build_iowin(hFile);\n }\n@@ -108,8 +129,17 @@ voidpf ZCALLBACK win32_open64_file_funcA (voidpf opaque,const void* filename,int\n \n     win32_translate_open_mode(mode,&dwDesiredAccess,&dwCreationDisposition,&dwShareMode,&dwFlagsAndAttributes);\n \n+#ifdef IOWIN32_USING_WINRT_API\n+    if ((filename!=NULL) && (dwDesiredAccess != 0))\n+    {\n+        WCHAR filenameW[FILENAME_MAX + 0x200 + 1];\n+        MultiByteToWideChar(CP_ACP,0,(const char*)filename,-1,filenameW,FILENAME_MAX + 0x200);\n+        hFile = CreateFile2(filenameW, dwDesiredAccess, dwShareMode, dwCreationDisposition, NULL);\n+    }\n+#else\n     if ((filename!=NULL) && (dwDesiredAccess != 0))\n         hFile = CreateFileA((LPCSTR)filename, dwDesiredAccess, dwShareMode, NULL, dwCreationDisposition, dwFlagsAndAttributes, NULL);\n+#endif\n \n     return win32_build_iowin(hFile);\n }\n@@ -123,8 +153,13 @@ voidpf ZCALLBACK win32_open64_file_funcW (voidpf opaque,const void* filename,int\n \n     win32_translate_open_mode(mode,&dwDesiredAccess,&dwCreationDisposition,&dwShareMode,&dwFlagsAndAttributes);\n \n+#ifdef IOWIN32_USING_WINRT_API\n+    if ((filename!=NULL) && (dwDesiredAccess != 0))\n+        hFile = CreateFile2((LPCWSTR)filename, dwDesiredAccess, dwShareMode, dwCreationDisposition,NULL);\n+#else\n     if ((filename!=NULL) && (dwDesiredAccess != 0))\n         hFile = CreateFileW((LPCWSTR)filename, dwDesiredAccess, dwShareMode, NULL, dwCreationDisposition, dwFlagsAndAttributes, NULL);\n+#endif\n \n     return win32_build_iowin(hFile);\n }\n@@ -138,8 +173,22 @@ voidpf ZCALLBACK win32_open_file_func (voidpf opaque,const char* filename,int mo\n \n     win32_translate_open_mode(mode,&dwDesiredAccess,&dwCreationDisposition,&dwShareMode,&dwFlagsAndAttributes);\n \n+#ifdef IOWIN32_USING_WINRT_API\n+#ifdef UNICODE\n+    if ((filename!=NULL) && (dwDesiredAccess != 0))\n+        hFile = CreateFile2((LPCTSTR)filename, dwDesiredAccess, dwShareMode, dwCreationDisposition, NULL);\n+#else\n+    if ((filename!=NULL) && (dwDesiredAccess != 0))\n+    {\n+        WCHAR filenameW[FILENAME_MAX + 0x200 + 1];\n+        MultiByteToWideChar(CP_ACP,0,(const char*)filename,-1,filenameW,FILENAME_MAX + 0x200);\n+        hFile = CreateFile2(filenameW, dwDesiredAccess, dwShareMode, dwCreationDisposition, NULL);\n+    }\n+#endif\n+#else\n     if ((filename!=NULL) && (dwDesiredAccess != 0))\n         hFile = CreateFile((LPCTSTR)filename, dwDesiredAccess, dwShareMode, NULL, dwCreationDisposition, dwFlagsAndAttributes, NULL);\n+#endif\n \n     return win32_build_iowin(hFile);\n }\n@@ -188,6 +237,26 @@ uLong ZCALLBACK win32_write_file_func (voidpf opaque,voidpf stream,const void* b\n     return ret;\n }\n \n+static BOOL MySetFilePointerEx(HANDLE hFile, LARGE_INTEGER pos, LARGE_INTEGER *newPos,  DWORD dwMoveMethod)\n+{\n+#ifdef IOWIN32_USING_WINRT_API\n+    return SetFilePointerEx(hFile, pos, newPos, dwMoveMethod);\n+#else\n+    LONG lHigh = pos.HighPart;\n+    DWORD dwNewPos = SetFilePointer(hFile, pos.LowPart, &lHigh, FILE_CURRENT);\n+    BOOL fOk = TRUE;\n+    if (dwNewPos == 0xFFFFFFFF)\n+        if (GetLastError() != NO_ERROR)\n+            fOk = FALSE;\n+    if ((newPos != NULL) && (fOk))\n+    {\n+        newPos->LowPart = dwNewPos;\n+        newPos->HighPart = lHigh;\n+    }\n+    return fOk;\n+#endif\n+}\n+\n long ZCALLBACK win32_tell_file_func (voidpf opaque,voidpf stream)\n {\n     long ret=-1;\n@@ -196,15 +265,17 @@ long ZCALLBACK win32_tell_file_func (voidpf opaque,voidpf stream)\n         hFile = ((WIN32FILE_IOWIN*)stream) -> hf;\n     if (hFile != NULL)\n     {\n-        DWORD dwSet = SetFilePointer(hFile, 0, NULL, FILE_CURRENT);\n-        if (dwSet == INVALID_SET_FILE_POINTER)\n+        LARGE_INTEGER pos;\n+        pos.QuadPart = 0;\n+\n+        if (!MySetFilePointerEx(hFile, pos, &pos, FILE_CURRENT))\n         {\n             DWORD dwErr = GetLastError();\n             ((WIN32FILE_IOWIN*)stream) -> error=(int)dwErr;\n             ret = -1;\n         }\n         else\n-            ret=(long)dwSet;\n+            ret=(long)pos.LowPart;\n     }\n     return ret;\n }\n@@ -218,17 +289,17 @@ ZPOS64_T ZCALLBACK win32_tell64_file_func (voidpf opaque, voidpf stream)\n \n     if (hFile)\n     {\n-        LARGE_INTEGER li;\n-        li.QuadPart = 0;\n-        li.u.LowPart = SetFilePointer(hFile, li.u.LowPart, &li.u.HighPart, FILE_CURRENT);\n-        if ( (li.LowPart == 0xFFFFFFFF) && (GetLastError() != NO_ERROR))\n+        LARGE_INTEGER pos;\n+        pos.QuadPart = 0;\n+\n+        if (!MySetFilePointerEx(hFile, pos, &pos, FILE_CURRENT))\n         {\n             DWORD dwErr = GetLastError();\n             ((WIN32FILE_IOWIN*)stream) -> error=(int)dwErr;\n             ret = (ZPOS64_T)-1;\n         }\n         else\n-            ret=li.QuadPart;\n+            ret=pos.QuadPart;\n     }\n     return ret;\n }\n@@ -258,8 +329,9 @@ long ZCALLBACK win32_seek_file_func (voidpf opaque,voidpf stream,uLong offset,in\n \n     if (hFile != NULL)\n     {\n-        DWORD dwSet = SetFilePointer(hFile, offset, NULL, dwMoveMethod);\n-        if (dwSet == INVALID_SET_FILE_POINTER)\n+        LARGE_INTEGER pos;\n+        pos.QuadPart = offset;\n+        if (!MySetFilePointerEx(hFile, pos, NULL, dwMoveMethod))\n         {\n             DWORD dwErr = GetLastError();\n             ((WIN32FILE_IOWIN*)stream) -> error=(int)dwErr;\n@@ -296,9 +368,9 @@ long ZCALLBACK win32_seek64_file_func (voidpf opaque, voidpf stream,ZPOS64_T off\n \n     if (hFile)\n     {\n-        LARGE_INTEGER* li = (LARGE_INTEGER*)&offset;\n-        DWORD dwSet = SetFilePointer(hFile, li->u.LowPart, &li->u.HighPart, dwMoveMethod);\n-        if (dwSet == INVALID_SET_FILE_POINTER)\n+        LARGE_INTEGER pos;\n+        pos.QuadPart = offset;\n+        if (!MySetFilePointerEx(hFile, pos, NULL, FILE_CURRENT))\n         {\n             DWORD dwErr = GetLastError();\n             ((WIN32FILE_IOWIN*)stream) -> error=(int)dwErr;"}, {"sha": "111ac69190f0b2153a6f263f0ce8c888984b527c", "filename": "zlib/contrib/minizip/miniunzip.1", "status": "added", "additions": 63, "deletions": 0, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Fcontrib%2Fminizip%2Fminiunzip.1", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Fcontrib%2Fminizip%2Fminiunzip.1", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fminizip%2Fminiunzip.1?ref=cd9ec14217a566fa0ae12ccf34534cbb7680f5ab", "patch": "@@ -0,0 +1,63 @@\n+.\\\"                                      Hey, EMACS: -*- nroff -*-\n+.TH miniunzip 1 \"Nov 7, 2001\"\n+.\\\" Please adjust this date whenever revising the manpage.\n+.\\\"\n+.\\\" Some roff macros, for reference:\n+.\\\" .nh        disable hyphenation\n+.\\\" .hy        enable hyphenation\n+.\\\" .ad l      left justify\n+.\\\" .ad b      justify to both left and right margins\n+.\\\" .nf        disable filling\n+.\\\" .fi        enable filling\n+.\\\" .br        insert line break\n+.\\\" .sp <n>    insert n+1 empty lines\n+.\\\" for manpage-specific macros, see man(7)\n+.SH NAME\n+miniunzip - uncompress and examine ZIP archives\n+.SH SYNOPSIS\n+.B miniunzip\n+.RI [ -exvlo ]\n+zipfile [ files_to_extract ] [-d tempdir]\n+.SH DESCRIPTION\n+.B minizip\n+is a simple tool which allows the extraction of compressed file\n+archives in the ZIP format used by the MS-DOS utility PKZIP.  It was\n+written as a demonstration of the\n+.IR zlib (3)\n+library and therefore lack many of the features of the\n+.IR unzip (1)\n+program.\n+.SH OPTIONS\n+A number of options are supported.  With the exception of\n+.BI \\-d\\  tempdir\n+these must be supplied before any\n+other arguments and are:\n+.TP\n+.BI \\-l\\ ,\\ \\-\\-v\n+List the files in the archive without extracting them.\n+.TP\n+.B \\-o\n+Overwrite files without prompting for confirmation.\n+.TP\n+.B \\-x\n+Extract files (default).\n+.PP\n+The\n+.I zipfile\n+argument is the name of the archive to process. The next argument can be used\n+to specify a single file to extract from the archive.\n+\n+Lastly, the following option can be specified at the end of the command-line:\n+.TP\n+.BI \\-d\\  tempdir\n+Extract the archive in the directory\n+.I tempdir\n+rather than the current directory.\n+.SH SEE ALSO\n+.BR minizip (1),\n+.BR zlib (3),\n+.BR unzip (1).\n+.SH AUTHOR\n+This program was written by Gilles Vollant.  This manual page was\n+written by Mark Brown <broonie@sirena.org.uk>. The -d tempdir option\n+was added by Dirk Eddelbuettel <edd@debian.org>."}, {"sha": "1154484c1cc15874a95b5d58af1f41e18bfc0407", "filename": "zlib/contrib/minizip/minizip.1", "status": "added", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Fcontrib%2Fminizip%2Fminizip.1", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Fcontrib%2Fminizip%2Fminizip.1", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fminizip%2Fminizip.1?ref=cd9ec14217a566fa0ae12ccf34534cbb7680f5ab", "patch": "@@ -0,0 +1,46 @@\n+.\\\"                                      Hey, EMACS: -*- nroff -*-\n+.TH minizip 1 \"May 2, 2001\"\n+.\\\" Please adjust this date whenever revising the manpage.\n+.\\\"\n+.\\\" Some roff macros, for reference:\n+.\\\" .nh        disable hyphenation\n+.\\\" .hy        enable hyphenation\n+.\\\" .ad l      left justify\n+.\\\" .ad b      justify to both left and right margins\n+.\\\" .nf        disable filling\n+.\\\" .fi        enable filling\n+.\\\" .br        insert line break\n+.\\\" .sp <n>    insert n+1 empty lines\n+.\\\" for manpage-specific macros, see man(7)\n+.SH NAME\n+minizip - create ZIP archives\n+.SH SYNOPSIS\n+.B minizip\n+.RI [ -o ]\n+zipfile [ \" files\" ... ]\n+.SH DESCRIPTION\n+.B minizip\n+is a simple tool which allows the creation of compressed file archives\n+in the ZIP format used by the MS-DOS utility PKZIP.  It was written as\n+a demonstration of the\n+.IR zlib (3)\n+library and therefore lack many of the features of the\n+.IR zip (1)\n+program.\n+.SH OPTIONS\n+The first argument supplied is the name of the ZIP archive to create or\n+.RI -o\n+in which case it is ignored and the second argument treated as the\n+name of the ZIP file.  If the ZIP file already exists it will be\n+overwritten.\n+.PP\n+Subsequent arguments specify a list of files to place in the ZIP\n+archive.  If none are specified then an empty archive will be created.\n+.SH SEE ALSO\n+.BR miniunzip (1),\n+.BR zlib (3),\n+.BR zip (1).\n+.SH AUTHOR\n+This program was written by Gilles Vollant.  This manual page was\n+written by Mark Brown <broonie@sirena.org.uk>.\n+"}, {"sha": "909350435a51f96ecac2a2f789b616bc3704cea0", "filename": "zlib/contrib/minizip/unzip.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Fcontrib%2Fminizip%2Funzip.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Fcontrib%2Fminizip%2Funzip.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fminizip%2Funzip.c?ref=cd9ec14217a566fa0ae12ccf34534cbb7680f5ab", "patch": "@@ -188,7 +188,7 @@ typedef struct\n \n #    ifndef NOUNCRYPT\n     unsigned long keys[3];     /* keys defining the pseudo-random sequence */\n-    const unsigned long* pcrc_32_tab;\n+    const z_crc_t* pcrc_32_tab;\n #    endif\n } unz64_s;\n \n@@ -801,9 +801,9 @@ extern unzFile ZEXPORT unzOpen64 (const void *path)\n }\n \n /*\n-  Close a ZipFile opened with unzipOpen.\n-  If there is files inside the .Zip opened with unzipOpenCurrentFile (see later),\n-    these files MUST be closed with unzipCloseCurrentFile before call unzipClose.\n+  Close a ZipFile opened with unzOpen.\n+  If there is files inside the .Zip opened with unzOpenCurrentFile (see later),\n+    these files MUST be closed with unzCloseCurrentFile before call unzClose.\n   return UNZ_OK if there is no problem. */\n extern int ZEXPORT unzClose (unzFile file)\n {\n@@ -1223,7 +1223,7 @@ extern int ZEXPORT unzGoToNextFile (unzFile  file)\n \n /*\n   Try locate the file szFileName in the zipfile.\n-  For the iCaseSensitivity signification, see unzipStringFileNameCompare\n+  For the iCaseSensitivity signification, see unzStringFileNameCompare\n \n   return value :\n   UNZ_OK if the file is found. It becomes the current file.\n@@ -1998,7 +1998,7 @@ extern int ZEXPORT unzGetLocalExtrafield (unzFile file, voidp buf, unsigned len)\n }\n \n /*\n-  Close the file in zip opened with unzipOpenCurrentFile\n+  Close the file in zip opened with unzOpenCurrentFile\n   Return UNZ_CRCERROR if all the file was read but the CRC is not good\n */\n extern int ZEXPORT unzCloseCurrentFile (unzFile file)"}, {"sha": "2104e39150749b496ecfac6cabb266488c4777d4", "filename": "zlib/contrib/minizip/unzip.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Fcontrib%2Fminizip%2Funzip.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Fcontrib%2Fminizip%2Funzip.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fminizip%2Funzip.h?ref=cd9ec14217a566fa0ae12ccf34534cbb7680f5ab", "patch": "@@ -197,9 +197,9 @@ extern unzFile ZEXPORT unzOpen2_64 OF((const void *path,\n \n extern int ZEXPORT unzClose OF((unzFile file));\n /*\n-  Close a ZipFile opened with unzipOpen.\n+  Close a ZipFile opened with unzOpen.\n   If there is files inside the .Zip opened with unzOpenCurrentFile (see later),\n-    these files MUST be closed with unzipCloseCurrentFile before call unzipClose.\n+    these files MUST be closed with unzCloseCurrentFile before call unzClose.\n   return UNZ_OK if there is no problem. */\n \n extern int ZEXPORT unzGetGlobalInfo OF((unzFile file,"}, {"sha": "ea54853e858a7f02f1600fb82f66d42685f67217", "filename": "zlib/contrib/minizip/zip.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Fcontrib%2Fminizip%2Fzip.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Fcontrib%2Fminizip%2Fzip.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fminizip%2Fzip.c?ref=cd9ec14217a566fa0ae12ccf34534cbb7680f5ab", "patch": "@@ -157,7 +157,7 @@ typedef struct\n     ZPOS64_T totalUncompressedData;\n #ifndef NOCRYPT\n     unsigned long keys[3];     /* keys defining the pseudo-random sequence */\n-    const unsigned long* pcrc_32_tab;\n+    const z_crc_t* pcrc_32_tab;\n     int crypt_header_size;\n #endif\n } curfile64_info;"}, {"sha": "e6a0782b48cc83d8101358c0b951d400f7981485", "filename": "zlib/contrib/pascal/zlibpas.pas", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Fcontrib%2Fpascal%2Fzlibpas.pas", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Fcontrib%2Fpascal%2Fzlibpas.pas", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fpascal%2Fzlibpas.pas?ref=cd9ec14217a566fa0ae12ccf34534cbb7680f5ab", "patch": "@@ -10,8 +10,8 @@\n interface\n \n const\n-  ZLIB_VERSION = '1.2.7';\n-  ZLIB_VERNUM  = $1270;\n+  ZLIB_VERSION = '1.2.8';\n+  ZLIB_VERNUM  = $1280;\n \n type\n   alloc_func = function(opaque: Pointer; items, size: Integer): Pointer;"}, {"sha": "ba58483d570c412fd6a5989dbb4fb27e83d7ddc1", "filename": "zlib/contrib/puff/puff.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Fcontrib%2Fpuff%2Fpuff.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Fcontrib%2Fpuff%2Fpuff.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fpuff%2Fpuff.c?ref=cd9ec14217a566fa0ae12ccf34534cbb7680f5ab", "patch": "@@ -1,8 +1,8 @@\n /*\n  * puff.c\n- * Copyright (C) 2002-2010 Mark Adler\n+ * Copyright (C) 2002-2013 Mark Adler\n  * For conditions of distribution and use, see copyright notice in puff.h\n- * version 2.2, 25 Apr 2010\n+ * version 2.3, 21 Jan 2013\n  *\n  * puff.c is a simple inflate written to be an unambiguous way to specify the\n  * deflate format.  It is not written for speed but rather simplicity.  As a\n@@ -76,6 +76,7 @@\n  *                      - Move NIL to puff.h\n  *                      - Allow incomplete code only if single code length is 1\n  *                      - Add full code coverage test to Makefile\n+ * 2.3  21 Jan 2013     - Check for invalid code length codes in dynamic blocks\n  */\n \n #include <setjmp.h>             /* for setjmp(), longjmp(), and jmp_buf */\n@@ -704,6 +705,8 @@ local int dynamic(struct state *s)\n         int len;                /* last length to repeat */\n \n         symbol = decode(s, &lencode);\n+        if (symbol < 0)\n+            return symbol;          /* invalid symbol */\n         if (symbol < 16)                /* length in 0..15 */\n             lengths[index++] = symbol;\n         else {                          /* repeat instruction */"}, {"sha": "e23a2454316cfa0c05e5e01cd6e1d548b4f2d44e", "filename": "zlib/contrib/puff/puff.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Fcontrib%2Fpuff%2Fpuff.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Fcontrib%2Fpuff%2Fpuff.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fpuff%2Fpuff.h?ref=cd9ec14217a566fa0ae12ccf34534cbb7680f5ab", "patch": "@@ -1,6 +1,6 @@\n /* puff.h\n-  Copyright (C) 2002-2010 Mark Adler, all rights reserved\n-  version 2.2, 25 Apr 2010\n+  Copyright (C) 2002-2013 Mark Adler, all rights reserved\n+  version 2.3, 21 Jan 2013\n \n   This software is provided 'as-is', without any express or implied\n   warranty.  In no event will the author be held liable for any damages"}, {"sha": "776481488c90d077cd01c7ec8b770fd6ca86de7b", "filename": "zlib/contrib/puff/pufftest.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Fcontrib%2Fpuff%2Fpufftest.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Fcontrib%2Fpuff%2Fpufftest.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fpuff%2Fpufftest.c?ref=cd9ec14217a566fa0ae12ccf34534cbb7680f5ab", "patch": "@@ -1,8 +1,8 @@\n /*\n  * pufftest.c\n- * Copyright (C) 2002-2010 Mark Adler\n+ * Copyright (C) 2002-2013 Mark Adler\n  * For conditions of distribution and use, see copyright notice in puff.h\n- * version 2.2, 25 Apr 2010\n+ * version 2.3, 21 Jan 2013\n  */\n \n /* Example of how to use puff()."}, {"sha": "5f659dea00f65275ae43fa8f37b00c94d2b69b77", "filename": "zlib/contrib/testzlib/testzlib.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Fcontrib%2Ftestzlib%2Ftestzlib.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Fcontrib%2Ftestzlib%2Ftestzlib.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Ftestzlib%2Ftestzlib.c?ref=cd9ec14217a566fa0ae12ccf34534cbb7680f5ab", "patch": "@@ -116,10 +116,10 @@ DWORD GetMsecSincePerfCounter(LARGE_INTEGER beginTime64,BOOL fComputeTimeQueryPe\n     return dwRet;\r\n }\r\n \r\n-int ReadFileMemory(const char* filename,long* plFileSize,void** pFilePtr)\r\n+int ReadFileMemory(const char* filename,long* plFileSize,unsigned char** pFilePtr)\r\n {\r\n     FILE* stream;\r\n-    void* ptr;\r\n+    unsigned char* ptr;\r\n     int retVal=1;\r\n     stream=fopen(filename, \"rb\");\r\n     if (stream==NULL)\r"}, {"sha": "bfdcd9dd013c31c4dc6004d1deb4d3feea85dd93", "filename": "zlib/contrib/vstudio/readme.txt", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Fcontrib%2Fvstudio%2Freadme.txt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Fcontrib%2Fvstudio%2Freadme.txt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fvstudio%2Freadme.txt?ref=cd9ec14217a566fa0ae12ccf34534cbb7680f5ab", "patch": "@@ -1,4 +1,4 @@\n-Building instructions for the DLL versions of Zlib 1.2.7\r\n+Building instructions for the DLL versions of Zlib 1.2.8\r\n ========================================================\r\n \r\n This directory contains projects that build zlib and minizip using\r\n@@ -28,6 +28,11 @@ Build instructions for Visual Studio 2010 (32 bits or 64 bits)\n - Uncompress current zlib, including all contrib/* files\r\n - Open contrib\\vstudio\\vc10\\zlibvc.sln with Microsoft Visual C++ 2010\r\n \r\n+Build instructions for Visual Studio 2012 (32 bits or 64 bits)\r\n+--------------------------------------------------------------\r\n+- Uncompress current zlib, including all contrib/* files\r\n+- Open contrib\\vstudio\\vc11\\zlibvc.sln with Microsoft Visual C++ 2012\r\n+\r\n \r\n Important\r\n ---------\r"}, {"sha": "695b5c78b91edfc29f77823eb642fc9ead8e15f1", "filename": "zlib/contrib/vstudio/vc10/miniunz.vcxproj.user", "status": "removed", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c93660449ea23e5eee1f8ce3e97129c7974b7fc/zlib%2Fcontrib%2Fvstudio%2Fvc10%2Fminiunz.vcxproj.user", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c93660449ea23e5eee1f8ce3e97129c7974b7fc/zlib%2Fcontrib%2Fvstudio%2Fvc10%2Fminiunz.vcxproj.user", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fvstudio%2Fvc10%2Fminiunz.vcxproj.user?ref=4c93660449ea23e5eee1f8ce3e97129c7974b7fc", "patch": "@@ -1,3 +0,0 @@\n-\ufeff<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n-<Project ToolsVersion=\"4.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\r\n-</Project>\n\\ No newline at end of file"}, {"sha": "695b5c78b91edfc29f77823eb642fc9ead8e15f1", "filename": "zlib/contrib/vstudio/vc10/minizip.vcxproj.user", "status": "removed", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c93660449ea23e5eee1f8ce3e97129c7974b7fc/zlib%2Fcontrib%2Fvstudio%2Fvc10%2Fminizip.vcxproj.user", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c93660449ea23e5eee1f8ce3e97129c7974b7fc/zlib%2Fcontrib%2Fvstudio%2Fvc10%2Fminizip.vcxproj.user", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fvstudio%2Fvc10%2Fminizip.vcxproj.user?ref=4c93660449ea23e5eee1f8ce3e97129c7974b7fc", "patch": "@@ -1,3 +0,0 @@\n-\ufeff<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n-<Project ToolsVersion=\"4.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\r\n-</Project>\n\\ No newline at end of file"}, {"sha": "695b5c78b91edfc29f77823eb642fc9ead8e15f1", "filename": "zlib/contrib/vstudio/vc10/testzlib.vcxproj.user", "status": "removed", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c93660449ea23e5eee1f8ce3e97129c7974b7fc/zlib%2Fcontrib%2Fvstudio%2Fvc10%2Ftestzlib.vcxproj.user", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c93660449ea23e5eee1f8ce3e97129c7974b7fc/zlib%2Fcontrib%2Fvstudio%2Fvc10%2Ftestzlib.vcxproj.user", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fvstudio%2Fvc10%2Ftestzlib.vcxproj.user?ref=4c93660449ea23e5eee1f8ce3e97129c7974b7fc", "patch": "@@ -1,3 +0,0 @@\n-\ufeff<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n-<Project ToolsVersion=\"4.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\r\n-</Project>\n\\ No newline at end of file"}, {"sha": "695b5c78b91edfc29f77823eb642fc9ead8e15f1", "filename": "zlib/contrib/vstudio/vc10/testzlibdll.vcxproj.user", "status": "removed", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c93660449ea23e5eee1f8ce3e97129c7974b7fc/zlib%2Fcontrib%2Fvstudio%2Fvc10%2Ftestzlibdll.vcxproj.user", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c93660449ea23e5eee1f8ce3e97129c7974b7fc/zlib%2Fcontrib%2Fvstudio%2Fvc10%2Ftestzlibdll.vcxproj.user", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fvstudio%2Fvc10%2Ftestzlibdll.vcxproj.user?ref=4c93660449ea23e5eee1f8ce3e97129c7974b7fc", "patch": "@@ -1,3 +0,0 @@\n-\ufeff<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n-<Project ToolsVersion=\"4.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\r\n-</Project>\n\\ No newline at end of file"}, {"sha": "73f6476d6051d049e7b807217817ff6f51b2a302", "filename": "zlib/contrib/vstudio/vc10/zlib.rc", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Fcontrib%2Fvstudio%2Fvc10%2Fzlib.rc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Fcontrib%2Fvstudio%2Fvc10%2Fzlib.rc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fvstudio%2Fvc10%2Fzlib.rc?ref=cd9ec14217a566fa0ae12ccf34534cbb7680f5ab", "patch": "@@ -2,8 +2,8 @@\n \r\n #define IDR_VERSION1  1\r\n IDR_VERSION1\tVERSIONINFO\tMOVEABLE IMPURE LOADONCALL DISCARDABLE\r\n-  FILEVERSION\t 1.2.7,0\r\n-  PRODUCTVERSION 1.2.7,0\r\n+  FILEVERSION\t 1,2,8,0\r\n+  PRODUCTVERSION 1,2,8,0\r\n   FILEFLAGSMASK\tVS_FFI_FILEFLAGSMASK\r\n   FILEFLAGS\t0\r\n   FILEOS\tVOS_DOS_WINDOWS32\r\n@@ -17,12 +17,12 @@ BEGIN\n \r\n     BEGIN\r\n       VALUE \"FileDescription\", \"zlib data compression and ZIP file I/O library\\0\"\r\n-      VALUE \"FileVersion\",\t\"1.2.7\\0\"\r\n+      VALUE \"FileVersion\",\t\"1.2.8\\0\"\r\n       VALUE \"InternalName\",\t\"zlib\\0\"\r\n-      VALUE \"OriginalFilename\",\t\"zlib.dll\\0\"\r\n+      VALUE \"OriginalFilename\",\t\"zlibwapi.dll\\0\"\r\n       VALUE \"ProductName\",\t\"ZLib.DLL\\0\"\r\n       VALUE \"Comments\",\"DLL support by Alessandro Iacopetti & Gilles Vollant\\0\"\r\n-      VALUE \"LegalCopyright\", \"(C) 1995-2012 Jean-loup Gailly & Mark Adler\\0\"\r\n+      VALUE \"LegalCopyright\", \"(C) 1995-2013 Jean-loup Gailly & Mark Adler\\0\"\r\n     END\r\n   END\r\n   BLOCK \"VarFileInfo\"\r"}, {"sha": "b9f2bbe5f0b19a7ac93781ba04b1042b4a7c4d05", "filename": "zlib/contrib/vstudio/vc10/zlibstat.vcxproj", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Fcontrib%2Fvstudio%2Fvc10%2Fzlibstat.vcxproj", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Fcontrib%2Fvstudio%2Fvc10%2Fzlibstat.vcxproj", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fvstudio%2Fvc10%2Fzlibstat.vcxproj?ref=cd9ec14217a566fa0ae12ccf34534cbb7680f5ab", "patch": "@@ -182,6 +182,10 @@\n       <OutputFile>$(OutDir)zlibstat.lib</OutputFile>\r\n       <SuppressStartupBanner>true</SuppressStartupBanner>\r\n     </Lib>\r\n+    <PreBuildEvent>\r\n+      <Command>cd ..\\..\\masmx86\r\n+bld_ml32.bat</Command>\r\n+    </PreBuildEvent>\r\n   </ItemDefinitionGroup>\r\n   <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\r\n     <ClCompile>\r\n@@ -210,6 +214,10 @@\n       <OutputFile>$(OutDir)zlibstat.lib</OutputFile>\r\n       <SuppressStartupBanner>true</SuppressStartupBanner>\r\n     </Lib>\r\n+    <PreBuildEvent>\r\n+      <Command>cd ..\\..\\masmx86\r\n+bld_ml32.bat</Command>\r\n+    </PreBuildEvent>\r\n   </ItemDefinitionGroup>\r\n   <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Win32'\">\r\n     <ClCompile>\r\n@@ -266,6 +274,10 @@\n       <OutputFile>$(OutDir)zlibstat.lib</OutputFile>\r\n       <SuppressStartupBanner>true</SuppressStartupBanner>\r\n     </Lib>\r\n+    <PreBuildEvent>\r\n+      <Command>cd ..\\..\\masmx64\r\n+bld_ml64.bat</Command>\r\n+    </PreBuildEvent>\r\n   </ItemDefinitionGroup>\r\n   <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">\r\n     <Midl>\r\n@@ -326,6 +338,10 @@\n       <OutputFile>$(OutDir)zlibstat.lib</OutputFile>\r\n       <SuppressStartupBanner>true</SuppressStartupBanner>\r\n     </Lib>\r\n+    <PreBuildEvent>\r\n+      <Command>cd ..\\..\\masmx64\r\n+bld_ml64.bat</Command>\r\n+    </PreBuildEvent>\r\n   </ItemDefinitionGroup>\r\n   <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">\r\n     <Midl>\r"}, {"sha": "695b5c78b91edfc29f77823eb642fc9ead8e15f1", "filename": "zlib/contrib/vstudio/vc10/zlibstat.vcxproj.user", "status": "removed", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c93660449ea23e5eee1f8ce3e97129c7974b7fc/zlib%2Fcontrib%2Fvstudio%2Fvc10%2Fzlibstat.vcxproj.user", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c93660449ea23e5eee1f8ce3e97129c7974b7fc/zlib%2Fcontrib%2Fvstudio%2Fvc10%2Fzlibstat.vcxproj.user", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fvstudio%2Fvc10%2Fzlibstat.vcxproj.user?ref=4c93660449ea23e5eee1f8ce3e97129c7974b7fc", "patch": "@@ -1,3 +0,0 @@\n-\ufeff<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n-<Project ToolsVersion=\"4.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\r\n-</Project>\n\\ No newline at end of file"}, {"sha": "63670467220c7268cb3eb153a109b1caa3bc7672", "filename": "zlib/contrib/vstudio/vc10/zlibvc.def", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Fcontrib%2Fvstudio%2Fvc10%2Fzlibvc.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Fcontrib%2Fvstudio%2Fvc10%2Fzlibvc.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fvstudio%2Fvc10%2Fzlibvc.def?ref=cd9ec14217a566fa0ae12ccf34534cbb7680f5ab", "patch": "@@ -1,7 +1,7 @@\n LIBRARY\r\n ; zlib data compression and ZIP file I/O library\r\n \r\n-VERSION\t\t1.2.7\r\n+VERSION\t\t1.2.8\r\n \r\n EXPORTS\r\n         adler32                                  @1\r\n@@ -134,6 +134,10 @@ EXPORTS\n         gzgetc_                                 @161\r\n         inflateResetKeep                        @163\r\n         deflateResetKeep                        @164\r\n-\n-; zlib1 v1.2.7 added:\n-        gzopen_w                                @165\n+\r\n+; zlib1 v1.2.7 added:\r\n+        gzopen_w                                @165\r\n+\r\n+; zlib1 v1.2.8 added:\r\n+        inflateGetDictionary                    @166\r\n+        gzvprintf                               @167\r"}, {"sha": "6ff9ddb0772af1e9c78c13840927eed7e55253b5", "filename": "zlib/contrib/vstudio/vc10/zlibvc.vcxproj", "status": "modified", "additions": 3, "deletions": 27, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Fcontrib%2Fvstudio%2Fvc10%2Fzlibvc.vcxproj", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Fcontrib%2Fvstudio%2Fvc10%2Fzlibvc.vcxproj", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fvstudio%2Fvc10%2Fzlibvc.vcxproj?ref=cd9ec14217a566fa0ae12ccf34534cbb7680f5ab", "patch": "@@ -180,10 +180,10 @@\n     <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">AllRules.ruleset</CodeAnalysisRuleSet>\r\n     <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" />\r\n     <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" />\r\n-    <TargetName Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">zlibwapi</TargetName>\r\n+    <TargetName Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">zlibwapid</TargetName>\r\n     <TargetName Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Win32'\">zlibwapi</TargetName>\r\n     <TargetName Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">zlibwapi</TargetName>\r\n-    <TargetName Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">zlibwapi</TargetName>\r\n+    <TargetName Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">zlibwapid</TargetName>\r\n     <TargetName Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|x64'\">zlibwapi</TargetName>\r\n     <TargetName Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">zlibwapi</TargetName>\r\n   </PropertyGroup>\r\n@@ -220,18 +220,14 @@\n     <Link>\r\n       <AdditionalOptions>/MACHINE:I386 %(AdditionalOptions)</AdditionalOptions>\r\n       <AdditionalDependencies>..\\..\\masmx86\\match686.obj;..\\..\\masmx86\\inffas32.obj;%(AdditionalDependencies)</AdditionalDependencies>\r\n-      <OutputFile>$(OutDir)zlibwapi.dll</OutputFile>\r\n       <SuppressStartupBanner>true</SuppressStartupBanner>\r\n       <ModuleDefinitionFile>.\\zlibvc.def</ModuleDefinitionFile>\r\n       <GenerateDebugInformation>true</GenerateDebugInformation>\r\n-      <ProgramDatabaseFile>$(OutDir)zlibwapi.pdb</ProgramDatabaseFile>\r\n       <GenerateMapFile>true</GenerateMapFile>\r\n-      <MapFileName>$(OutDir)zlibwapi.map</MapFileName>\r\n       <SubSystem>Windows</SubSystem>\r\n       <RandomizedBaseAddress>false</RandomizedBaseAddress>\r\n       <DataExecutionPrevention>\r\n       </DataExecutionPrevention>\r\n-      <ImportLibrary>$(OutDir)zlibwapi.lib</ImportLibrary>\r\n     </Link>\r\n     <PreBuildEvent>\r\n       <Command>cd ..\\..\\masmx86\r\n@@ -272,18 +268,14 @@ bld_ml32.bat</Command>\n     </ResourceCompile>\r\n     <Link>\r\n       <AdditionalOptions>/MACHINE:I386 %(AdditionalOptions)</AdditionalOptions>\r\n-      <OutputFile>$(OutDir)zlibwapi.dll</OutputFile>\r\n       <SuppressStartupBanner>true</SuppressStartupBanner>\r\n       <IgnoreAllDefaultLibraries>false</IgnoreAllDefaultLibraries>\r\n       <ModuleDefinitionFile>.\\zlibvc.def</ModuleDefinitionFile>\r\n-      <ProgramDatabaseFile>$(OutDir)zlibwapi.pdb</ProgramDatabaseFile>\r\n       <GenerateMapFile>true</GenerateMapFile>\r\n-      <MapFileName>$(OutDir)zlibwapi.map</MapFileName>\r\n       <SubSystem>Windows</SubSystem>\r\n       <RandomizedBaseAddress>false</RandomizedBaseAddress>\r\n       <DataExecutionPrevention>\r\n       </DataExecutionPrevention>\r\n-      <ImportLibrary>$(OutDir)zlibwapi.lib</ImportLibrary>\r\n     </Link>\r\n   </ItemDefinitionGroup>\r\n   <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\r\n@@ -321,18 +313,14 @@ bld_ml32.bat</Command>\n     <Link>\r\n       <AdditionalOptions>/MACHINE:I386 %(AdditionalOptions)</AdditionalOptions>\r\n       <AdditionalDependencies>..\\..\\masmx86\\match686.obj;..\\..\\masmx86\\inffas32.obj;%(AdditionalDependencies)</AdditionalDependencies>\r\n-      <OutputFile>$(OutDir)zlibwapi.dll</OutputFile>\r\n       <SuppressStartupBanner>true</SuppressStartupBanner>\r\n       <IgnoreAllDefaultLibraries>false</IgnoreAllDefaultLibraries>\r\n       <ModuleDefinitionFile>.\\zlibvc.def</ModuleDefinitionFile>\r\n-      <ProgramDatabaseFile>$(OutDir)zlibwapi.pdb</ProgramDatabaseFile>\r\n       <GenerateMapFile>true</GenerateMapFile>\r\n-      <MapFileName>$(OutDir)zlibwapi.map</MapFileName>\r\n       <SubSystem>Windows</SubSystem>\r\n       <RandomizedBaseAddress>false</RandomizedBaseAddress>\r\n       <DataExecutionPrevention>\r\n       </DataExecutionPrevention>\r\n-      <ImportLibrary>$(OutDir)zlibwapi.lib</ImportLibrary>\r\n     </Link>\r\n     <PreBuildEvent>\r\n       <Command>cd ..\\..\\masmx86\r\n@@ -371,19 +359,15 @@ bld_ml32.bat</Command>\n     </ResourceCompile>\r\n     <Link>\r\n       <AdditionalDependencies>..\\..\\masmx64\\gvmat64.obj;..\\..\\masmx64\\inffasx64.obj;%(AdditionalDependencies)</AdditionalDependencies>\r\n-      <OutputFile>$(OutDir)zlibwapi.dll</OutputFile>\r\n       <SuppressStartupBanner>true</SuppressStartupBanner>\r\n       <ModuleDefinitionFile>.\\zlibvc.def</ModuleDefinitionFile>\r\n       <GenerateDebugInformation>true</GenerateDebugInformation>\r\n-      <ProgramDatabaseFile>$(OutDir)zlibwapi.pdb</ProgramDatabaseFile>\r\n       <GenerateMapFile>true</GenerateMapFile>\r\n-      <MapFileName>$(OutDir)zlibwapi.map</MapFileName>\r\n       <SubSystem>Windows</SubSystem>\r\n-      <ImportLibrary>$(OutDir)zlibwapi.lib</ImportLibrary>\r\n       <TargetMachine>MachineX64</TargetMachine>\r\n     </Link>\r\n     <PreBuildEvent>\r\n-      <Command>cd ..\\..\\contrib\\masmx64\r\n+      <Command>cd ..\\..\\masmx64\r\n bld_ml64.bat</Command>\r\n     </PreBuildEvent>\r\n   </ItemDefinitionGroup>\r\n@@ -463,15 +447,11 @@ bld_ml64.bat</Command>\n       <Culture>0x040c</Culture>\r\n     </ResourceCompile>\r\n     <Link>\r\n-      <OutputFile>$(OutDir)zlibwapi.dll</OutputFile>\r\n       <SuppressStartupBanner>true</SuppressStartupBanner>\r\n       <IgnoreAllDefaultLibraries>false</IgnoreAllDefaultLibraries>\r\n       <ModuleDefinitionFile>.\\zlibvc.def</ModuleDefinitionFile>\r\n-      <ProgramDatabaseFile>$(OutDir)zlibwapi.pdb</ProgramDatabaseFile>\r\n       <GenerateMapFile>true</GenerateMapFile>\r\n-      <MapFileName>$(OutDir)zlibwapi.map</MapFileName>\r\n       <SubSystem>Windows</SubSystem>\r\n-      <ImportLibrary>$(OutDir)zlibwapi.lib</ImportLibrary>\r\n       <TargetMachine>MachineX64</TargetMachine>\r\n     </Link>\r\n   </ItemDefinitionGroup>\r\n@@ -554,15 +534,11 @@ bld_ml64.bat</Command>\n     </ResourceCompile>\r\n     <Link>\r\n       <AdditionalDependencies>..\\..\\masmx64\\gvmat64.obj;..\\..\\masmx64\\inffasx64.obj;%(AdditionalDependencies)</AdditionalDependencies>\r\n-      <OutputFile>$(OutDir)zlibwapi.dll</OutputFile>\r\n       <SuppressStartupBanner>true</SuppressStartupBanner>\r\n       <IgnoreAllDefaultLibraries>false</IgnoreAllDefaultLibraries>\r\n       <ModuleDefinitionFile>.\\zlibvc.def</ModuleDefinitionFile>\r\n-      <ProgramDatabaseFile>$(OutDir)zlibwapi.pdb</ProgramDatabaseFile>\r\n       <GenerateMapFile>true</GenerateMapFile>\r\n-      <MapFileName>$(OutDir)zlibwapi.map</MapFileName>\r\n       <SubSystem>Windows</SubSystem>\r\n-      <ImportLibrary>$(OutDir)zlibwapi.lib</ImportLibrary>\r\n       <TargetMachine>MachineX64</TargetMachine>\r\n     </Link>\r\n     <PreBuildEvent>\r"}, {"sha": "695b5c78b91edfc29f77823eb642fc9ead8e15f1", "filename": "zlib/contrib/vstudio/vc10/zlibvc.vcxproj.user", "status": "removed", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c93660449ea23e5eee1f8ce3e97129c7974b7fc/zlib%2Fcontrib%2Fvstudio%2Fvc10%2Fzlibvc.vcxproj.user", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c93660449ea23e5eee1f8ce3e97129c7974b7fc/zlib%2Fcontrib%2Fvstudio%2Fvc10%2Fzlibvc.vcxproj.user", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fvstudio%2Fvc10%2Fzlibvc.vcxproj.user?ref=4c93660449ea23e5eee1f8ce3e97129c7974b7fc", "patch": "@@ -1,3 +0,0 @@\n-\ufeff<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n-<Project ToolsVersion=\"4.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\r\n-</Project>\n\\ No newline at end of file"}, {"sha": "8f9f20bd3290a4c2858af1274973a9ce7adf8851", "filename": "zlib/contrib/vstudio/vc11/miniunz.vcxproj", "status": "added", "additions": 314, "deletions": 0, "changes": 314, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Fcontrib%2Fvstudio%2Fvc11%2Fminiunz.vcxproj", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Fcontrib%2Fvstudio%2Fvc11%2Fminiunz.vcxproj", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fvstudio%2Fvc11%2Fminiunz.vcxproj?ref=cd9ec14217a566fa0ae12ccf34534cbb7680f5ab", "patch": "@@ -0,0 +1,314 @@\n+\ufeff<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n+<Project DefaultTargets=\"Build\" ToolsVersion=\"4.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\r\n+  <ItemGroup Label=\"ProjectConfigurations\">\r\n+    <ProjectConfiguration Include=\"Debug|Itanium\">\r\n+      <Configuration>Debug</Configuration>\r\n+      <Platform>Itanium</Platform>\r\n+    </ProjectConfiguration>\r\n+    <ProjectConfiguration Include=\"Debug|Win32\">\r\n+      <Configuration>Debug</Configuration>\r\n+      <Platform>Win32</Platform>\r\n+    </ProjectConfiguration>\r\n+    <ProjectConfiguration Include=\"Debug|x64\">\r\n+      <Configuration>Debug</Configuration>\r\n+      <Platform>x64</Platform>\r\n+    </ProjectConfiguration>\r\n+    <ProjectConfiguration Include=\"Release|Itanium\">\r\n+      <Configuration>Release</Configuration>\r\n+      <Platform>Itanium</Platform>\r\n+    </ProjectConfiguration>\r\n+    <ProjectConfiguration Include=\"Release|Win32\">\r\n+      <Configuration>Release</Configuration>\r\n+      <Platform>Win32</Platform>\r\n+    </ProjectConfiguration>\r\n+    <ProjectConfiguration Include=\"Release|x64\">\r\n+      <Configuration>Release</Configuration>\r\n+      <Platform>x64</Platform>\r\n+    </ProjectConfiguration>\r\n+  </ItemGroup>\r\n+  <PropertyGroup Label=\"Globals\">\r\n+    <ProjectGuid>{C52F9E7B-498A-42BE-8DB4-85A15694382A}</ProjectGuid>\r\n+    <Keyword>Win32Proj</Keyword>\r\n+  </PropertyGroup>\r\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.Default.props\" />\r\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" Label=\"Configuration\">\r\n+    <ConfigurationType>Application</ConfigurationType>\r\n+    <CharacterSet>MultiByte</CharacterSet>\r\n+    <PlatformToolset>v110</PlatformToolset>\r\n+  </PropertyGroup>\r\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" Label=\"Configuration\">\r\n+    <ConfigurationType>Application</ConfigurationType>\r\n+    <CharacterSet>Unicode</CharacterSet>\r\n+    <PlatformToolset>v110</PlatformToolset>\r\n+  </PropertyGroup>\r\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\" Label=\"Configuration\">\r\n+    <ConfigurationType>Application</ConfigurationType>\r\n+    <CharacterSet>MultiByte</CharacterSet>\r\n+  </PropertyGroup>\r\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\" Label=\"Configuration\">\r\n+    <ConfigurationType>Application</ConfigurationType>\r\n+    <CharacterSet>MultiByte</CharacterSet>\r\n+  </PropertyGroup>\r\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" Label=\"Configuration\">\r\n+    <ConfigurationType>Application</ConfigurationType>\r\n+    <CharacterSet>MultiByte</CharacterSet>\r\n+    <PlatformToolset>v110</PlatformToolset>\r\n+  </PropertyGroup>\r\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" Label=\"Configuration\">\r\n+    <ConfigurationType>Application</ConfigurationType>\r\n+    <CharacterSet>MultiByte</CharacterSet>\r\n+    <PlatformToolset>v110</PlatformToolset>\r\n+  </PropertyGroup>\r\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\r\n+  <ImportGroup Label=\"ExtensionSettings\">\r\n+  </ImportGroup>\r\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" Label=\"PropertySheets\">\r\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\r\n+  </ImportGroup>\r\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" Label=\"PropertySheets\">\r\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\r\n+  </ImportGroup>\r\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\" Label=\"PropertySheets\">\r\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\r\n+  </ImportGroup>\r\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\" Label=\"PropertySheets\">\r\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\r\n+  </ImportGroup>\r\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" Label=\"PropertySheets\">\r\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\r\n+  </ImportGroup>\r\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" Label=\"PropertySheets\">\r\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\r\n+  </ImportGroup>\r\n+  <PropertyGroup Label=\"UserMacros\" />\r\n+  <PropertyGroup>\r\n+    <_ProjectFileVersion>10.0.30128.1</_ProjectFileVersion>\r\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">x86\\MiniUnzip$(Configuration)\\</OutDir>\r\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">x86\\MiniUnzip$(Configuration)\\Tmp\\</IntDir>\r\n+    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">true</LinkIncremental>\r\n+    <GenerateManifest Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">false</GenerateManifest>\r\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">x86\\MiniUnzip$(Configuration)\\</OutDir>\r\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">x86\\MiniUnzip$(Configuration)\\Tmp\\</IntDir>\r\n+    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">false</LinkIncremental>\r\n+    <GenerateManifest Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">false</GenerateManifest>\r\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">x64\\MiniUnzip$(Configuration)\\</OutDir>\r\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">x64\\MiniUnzip$(Configuration)\\Tmp\\</IntDir>\r\n+    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">true</LinkIncremental>\r\n+    <GenerateManifest Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">false</GenerateManifest>\r\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">ia64\\MiniUnzip$(Configuration)\\</OutDir>\r\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">ia64\\MiniUnzip$(Configuration)\\Tmp\\</IntDir>\r\n+    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">true</LinkIncremental>\r\n+    <GenerateManifest Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">false</GenerateManifest>\r\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">x64\\MiniUnzip$(Configuration)\\</OutDir>\r\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">x64\\MiniUnzip$(Configuration)\\Tmp\\</IntDir>\r\n+    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">false</LinkIncremental>\r\n+    <GenerateManifest Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">false</GenerateManifest>\r\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">ia64\\MiniUnzip$(Configuration)\\</OutDir>\r\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">ia64\\MiniUnzip$(Configuration)\\Tmp\\</IntDir>\r\n+    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">false</LinkIncremental>\r\n+    <GenerateManifest Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">false</GenerateManifest>\r\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">AllRules.ruleset</CodeAnalysisRuleSet>\r\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\" />\r\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\" />\r\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">AllRules.ruleset</CodeAnalysisRuleSet>\r\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" />\r\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" />\r\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">AllRules.ruleset</CodeAnalysisRuleSet>\r\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" />\r\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" />\r\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">AllRules.ruleset</CodeAnalysisRuleSet>\r\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\" />\r\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\" />\r\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">AllRules.ruleset</CodeAnalysisRuleSet>\r\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" />\r\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" />\r\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">AllRules.ruleset</CodeAnalysisRuleSet>\r\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" />\r\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" />\r\n+  </PropertyGroup>\r\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\r\n+    <ClCompile>\r\n+      <Optimization>Disabled</Optimization>\r\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\minizip;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\r\n+      <PreprocessorDefinitions>WIN32;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;ZLIB_WINAPI;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <MinimalRebuild>true</MinimalRebuild>\r\n+      <BasicRuntimeChecks>Default</BasicRuntimeChecks>\r\n+      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>\r\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\r\n+      <PrecompiledHeader>\r\n+      </PrecompiledHeader>\r\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\r\n+      <WarningLevel>Level3</WarningLevel>\r\n+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\r\n+    </ClCompile>\r\n+    <Link>\r\n+      <AdditionalDependencies>x86\\ZlibDllDebug\\zlibwapi.lib;%(AdditionalDependencies)</AdditionalDependencies>\r\n+      <OutputFile>$(OutDir)miniunz.exe</OutputFile>\r\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\r\n+      <ProgramDatabaseFile>$(OutDir)miniunz.pdb</ProgramDatabaseFile>\r\n+      <SubSystem>Console</SubSystem>\r\n+      <RandomizedBaseAddress>false</RandomizedBaseAddress>\r\n+      <DataExecutionPrevention>\r\n+      </DataExecutionPrevention>\r\n+      <TargetMachine>MachineX86</TargetMachine>\r\n+    </Link>\r\n+  </ItemDefinitionGroup>\r\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\r\n+    <ClCompile>\r\n+      <Optimization>MaxSpeed</Optimization>\r\n+      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>\r\n+      <OmitFramePointers>true</OmitFramePointers>\r\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\minizip;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\r\n+      <PreprocessorDefinitions>WIN32;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;ZLIB_WINAPI;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <StringPooling>true</StringPooling>\r\n+      <BasicRuntimeChecks>Default</BasicRuntimeChecks>\r\n+      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>\r\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\r\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\r\n+      <PrecompiledHeader>\r\n+      </PrecompiledHeader>\r\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\r\n+      <WarningLevel>Level3</WarningLevel>\r\n+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\r\n+    </ClCompile>\r\n+    <Link>\r\n+      <AdditionalDependencies>x86\\ZlibDllRelease\\zlibwapi.lib;%(AdditionalDependencies)</AdditionalDependencies>\r\n+      <OutputFile>$(OutDir)miniunz.exe</OutputFile>\r\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\r\n+      <SubSystem>Console</SubSystem>\r\n+      <OptimizeReferences>true</OptimizeReferences>\r\n+      <EnableCOMDATFolding>true</EnableCOMDATFolding>\r\n+      <RandomizedBaseAddress>false</RandomizedBaseAddress>\r\n+      <DataExecutionPrevention>\r\n+      </DataExecutionPrevention>\r\n+      <TargetMachine>MachineX86</TargetMachine>\r\n+    </Link>\r\n+  </ItemDefinitionGroup>\r\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\r\n+    <Midl>\r\n+      <TargetEnvironment>X64</TargetEnvironment>\r\n+    </Midl>\r\n+    <ClCompile>\r\n+      <Optimization>Disabled</Optimization>\r\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\minizip;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\r\n+      <PreprocessorDefinitions>_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;ZLIB_WINAPI;_DEBUG;_CONSOLE;WIN64;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <MinimalRebuild>true</MinimalRebuild>\r\n+      <BasicRuntimeChecks>Default</BasicRuntimeChecks>\r\n+      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>\r\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\r\n+      <PrecompiledHeader>\r\n+      </PrecompiledHeader>\r\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\r\n+      <WarningLevel>Level3</WarningLevel>\r\n+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\r\n+    </ClCompile>\r\n+    <Link>\r\n+      <AdditionalDependencies>x64\\ZlibDllDebug\\zlibwapi.lib;%(AdditionalDependencies)</AdditionalDependencies>\r\n+      <OutputFile>$(OutDir)miniunz.exe</OutputFile>\r\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\r\n+      <ProgramDatabaseFile>$(OutDir)miniunz.pdb</ProgramDatabaseFile>\r\n+      <SubSystem>Console</SubSystem>\r\n+      <TargetMachine>MachineX64</TargetMachine>\r\n+    </Link>\r\n+  </ItemDefinitionGroup>\r\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">\r\n+    <Midl>\r\n+      <TargetEnvironment>Itanium</TargetEnvironment>\r\n+    </Midl>\r\n+    <ClCompile>\r\n+      <Optimization>Disabled</Optimization>\r\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\minizip;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\r\n+      <PreprocessorDefinitions>_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;ZLIB_WINAPI;_DEBUG;_CONSOLE;WIN64;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <MinimalRebuild>true</MinimalRebuild>\r\n+      <BasicRuntimeChecks>Default</BasicRuntimeChecks>\r\n+      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>\r\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\r\n+      <PrecompiledHeader>\r\n+      </PrecompiledHeader>\r\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\r\n+      <WarningLevel>Level3</WarningLevel>\r\n+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\r\n+    </ClCompile>\r\n+    <Link>\r\n+      <AdditionalDependencies>ia64\\ZlibDllDebug\\zlibwapi.lib;%(AdditionalDependencies)</AdditionalDependencies>\r\n+      <OutputFile>$(OutDir)miniunz.exe</OutputFile>\r\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\r\n+      <ProgramDatabaseFile>$(OutDir)miniunz.pdb</ProgramDatabaseFile>\r\n+      <SubSystem>Console</SubSystem>\r\n+      <TargetMachine>MachineIA64</TargetMachine>\r\n+    </Link>\r\n+  </ItemDefinitionGroup>\r\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\r\n+    <Midl>\r\n+      <TargetEnvironment>X64</TargetEnvironment>\r\n+    </Midl>\r\n+    <ClCompile>\r\n+      <Optimization>MaxSpeed</Optimization>\r\n+      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>\r\n+      <OmitFramePointers>true</OmitFramePointers>\r\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\minizip;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\r\n+      <PreprocessorDefinitions>_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;ZLIB_WINAPI;NDEBUG;_CONSOLE;WIN64;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <StringPooling>true</StringPooling>\r\n+      <BasicRuntimeChecks>Default</BasicRuntimeChecks>\r\n+      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>\r\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\r\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\r\n+      <PrecompiledHeader>\r\n+      </PrecompiledHeader>\r\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\r\n+      <WarningLevel>Level3</WarningLevel>\r\n+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\r\n+    </ClCompile>\r\n+    <Link>\r\n+      <AdditionalDependencies>x64\\ZlibDllRelease\\zlibwapi.lib;%(AdditionalDependencies)</AdditionalDependencies>\r\n+      <OutputFile>$(OutDir)miniunz.exe</OutputFile>\r\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\r\n+      <SubSystem>Console</SubSystem>\r\n+      <OptimizeReferences>true</OptimizeReferences>\r\n+      <EnableCOMDATFolding>true</EnableCOMDATFolding>\r\n+      <TargetMachine>MachineX64</TargetMachine>\r\n+    </Link>\r\n+  </ItemDefinitionGroup>\r\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">\r\n+    <Midl>\r\n+      <TargetEnvironment>Itanium</TargetEnvironment>\r\n+    </Midl>\r\n+    <ClCompile>\r\n+      <Optimization>MaxSpeed</Optimization>\r\n+      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>\r\n+      <OmitFramePointers>true</OmitFramePointers>\r\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\minizip;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\r\n+      <PreprocessorDefinitions>_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;ZLIB_WINAPI;NDEBUG;_CONSOLE;WIN64;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <StringPooling>true</StringPooling>\r\n+      <BasicRuntimeChecks>Default</BasicRuntimeChecks>\r\n+      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>\r\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\r\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\r\n+      <PrecompiledHeader>\r\n+      </PrecompiledHeader>\r\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\r\n+      <WarningLevel>Level3</WarningLevel>\r\n+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\r\n+    </ClCompile>\r\n+    <Link>\r\n+      <AdditionalDependencies>ia64\\ZlibDllRelease\\zlibwapi.lib;%(AdditionalDependencies)</AdditionalDependencies>\r\n+      <OutputFile>$(OutDir)miniunz.exe</OutputFile>\r\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\r\n+      <SubSystem>Console</SubSystem>\r\n+      <OptimizeReferences>true</OptimizeReferences>\r\n+      <EnableCOMDATFolding>true</EnableCOMDATFolding>\r\n+      <TargetMachine>MachineIA64</TargetMachine>\r\n+    </Link>\r\n+  </ItemDefinitionGroup>\r\n+  <ItemGroup>\r\n+    <ClCompile Include=\"..\\..\\minizip\\miniunz.c\" />\r\n+  </ItemGroup>\r\n+  <ItemGroup>\r\n+    <ProjectReference Include=\"zlibvc.vcxproj\">\r\n+      <Project>{8fd826f8-3739-44e6-8cc8-997122e53b8d}</Project>\r\n+    </ProjectReference>\r\n+  </ItemGroup>\r\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\r\n+  <ImportGroup Label=\"ExtensionTargets\">\r\n+  </ImportGroup>\r\n+</Project>\n\\ No newline at end of file"}, {"sha": "c93d9e6fffbb927a0016cf7afc73320c547897aa", "filename": "zlib/contrib/vstudio/vc11/minizip.vcxproj", "status": "added", "additions": 311, "deletions": 0, "changes": 311, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Fcontrib%2Fvstudio%2Fvc11%2Fminizip.vcxproj", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Fcontrib%2Fvstudio%2Fvc11%2Fminizip.vcxproj", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fvstudio%2Fvc11%2Fminizip.vcxproj?ref=cd9ec14217a566fa0ae12ccf34534cbb7680f5ab", "patch": "@@ -0,0 +1,311 @@\n+\ufeff<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n+<Project DefaultTargets=\"Build\" ToolsVersion=\"4.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\r\n+  <ItemGroup Label=\"ProjectConfigurations\">\r\n+    <ProjectConfiguration Include=\"Debug|Itanium\">\r\n+      <Configuration>Debug</Configuration>\r\n+      <Platform>Itanium</Platform>\r\n+    </ProjectConfiguration>\r\n+    <ProjectConfiguration Include=\"Debug|Win32\">\r\n+      <Configuration>Debug</Configuration>\r\n+      <Platform>Win32</Platform>\r\n+    </ProjectConfiguration>\r\n+    <ProjectConfiguration Include=\"Debug|x64\">\r\n+      <Configuration>Debug</Configuration>\r\n+      <Platform>x64</Platform>\r\n+    </ProjectConfiguration>\r\n+    <ProjectConfiguration Include=\"Release|Itanium\">\r\n+      <Configuration>Release</Configuration>\r\n+      <Platform>Itanium</Platform>\r\n+    </ProjectConfiguration>\r\n+    <ProjectConfiguration Include=\"Release|Win32\">\r\n+      <Configuration>Release</Configuration>\r\n+      <Platform>Win32</Platform>\r\n+    </ProjectConfiguration>\r\n+    <ProjectConfiguration Include=\"Release|x64\">\r\n+      <Configuration>Release</Configuration>\r\n+      <Platform>x64</Platform>\r\n+    </ProjectConfiguration>\r\n+  </ItemGroup>\r\n+  <PropertyGroup Label=\"Globals\">\r\n+    <ProjectGuid>{48CDD9DC-E09F-4135-9C0C-4FE50C3C654B}</ProjectGuid>\r\n+    <Keyword>Win32Proj</Keyword>\r\n+  </PropertyGroup>\r\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.Default.props\" />\r\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" Label=\"Configuration\">\r\n+    <ConfigurationType>Application</ConfigurationType>\r\n+    <CharacterSet>MultiByte</CharacterSet>\r\n+    <PlatformToolset>v110</PlatformToolset>\r\n+  </PropertyGroup>\r\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" Label=\"Configuration\">\r\n+    <ConfigurationType>Application</ConfigurationType>\r\n+    <CharacterSet>Unicode</CharacterSet>\r\n+    <PlatformToolset>v110</PlatformToolset>\r\n+  </PropertyGroup>\r\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\" Label=\"Configuration\">\r\n+    <ConfigurationType>Application</ConfigurationType>\r\n+    <CharacterSet>MultiByte</CharacterSet>\r\n+  </PropertyGroup>\r\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\" Label=\"Configuration\">\r\n+    <ConfigurationType>Application</ConfigurationType>\r\n+    <CharacterSet>MultiByte</CharacterSet>\r\n+  </PropertyGroup>\r\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" Label=\"Configuration\">\r\n+    <ConfigurationType>Application</ConfigurationType>\r\n+    <CharacterSet>MultiByte</CharacterSet>\r\n+    <PlatformToolset>v110</PlatformToolset>\r\n+  </PropertyGroup>\r\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" Label=\"Configuration\">\r\n+    <ConfigurationType>Application</ConfigurationType>\r\n+    <CharacterSet>MultiByte</CharacterSet>\r\n+    <PlatformToolset>v110</PlatformToolset>\r\n+  </PropertyGroup>\r\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\r\n+  <ImportGroup Label=\"ExtensionSettings\">\r\n+  </ImportGroup>\r\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" Label=\"PropertySheets\">\r\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\r\n+  </ImportGroup>\r\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" Label=\"PropertySheets\">\r\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\r\n+  </ImportGroup>\r\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\" Label=\"PropertySheets\">\r\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\r\n+  </ImportGroup>\r\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\" Label=\"PropertySheets\">\r\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\r\n+  </ImportGroup>\r\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" Label=\"PropertySheets\">\r\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\r\n+  </ImportGroup>\r\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" Label=\"PropertySheets\">\r\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\r\n+  </ImportGroup>\r\n+  <PropertyGroup Label=\"UserMacros\" />\r\n+  <PropertyGroup>\r\n+    <_ProjectFileVersion>10.0.30128.1</_ProjectFileVersion>\r\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">x86\\MiniZip$(Configuration)\\</OutDir>\r\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">x86\\MiniZip$(Configuration)\\Tmp\\</IntDir>\r\n+    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">true</LinkIncremental>\r\n+    <GenerateManifest Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">false</GenerateManifest>\r\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">x86\\MiniZip$(Configuration)\\</OutDir>\r\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">x86\\MiniZip$(Configuration)\\Tmp\\</IntDir>\r\n+    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">false</LinkIncremental>\r\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">x64\\$(Configuration)\\</OutDir>\r\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">x64\\$(Configuration)\\</IntDir>\r\n+    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">true</LinkIncremental>\r\n+    <GenerateManifest Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">false</GenerateManifest>\r\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">ia64\\$(Configuration)\\</OutDir>\r\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">ia64\\$(Configuration)\\</IntDir>\r\n+    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">true</LinkIncremental>\r\n+    <GenerateManifest Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">false</GenerateManifest>\r\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">x64\\$(Configuration)\\</OutDir>\r\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">x64\\$(Configuration)\\</IntDir>\r\n+    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">false</LinkIncremental>\r\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">ia64\\$(Configuration)\\</OutDir>\r\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">ia64\\$(Configuration)\\</IntDir>\r\n+    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">false</LinkIncremental>\r\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">AllRules.ruleset</CodeAnalysisRuleSet>\r\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\" />\r\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\" />\r\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">AllRules.ruleset</CodeAnalysisRuleSet>\r\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" />\r\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" />\r\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">AllRules.ruleset</CodeAnalysisRuleSet>\r\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" />\r\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" />\r\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">AllRules.ruleset</CodeAnalysisRuleSet>\r\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\" />\r\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\" />\r\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">AllRules.ruleset</CodeAnalysisRuleSet>\r\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" />\r\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" />\r\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">AllRules.ruleset</CodeAnalysisRuleSet>\r\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" />\r\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" />\r\n+  </PropertyGroup>\r\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\r\n+    <ClCompile>\r\n+      <Optimization>Disabled</Optimization>\r\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\minizip;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\r\n+      <PreprocessorDefinitions>WIN32;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;ZLIB_WINAPI;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <MinimalRebuild>true</MinimalRebuild>\r\n+      <BasicRuntimeChecks>Default</BasicRuntimeChecks>\r\n+      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>\r\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\r\n+      <PrecompiledHeader>\r\n+      </PrecompiledHeader>\r\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\r\n+      <WarningLevel>Level3</WarningLevel>\r\n+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\r\n+    </ClCompile>\r\n+    <Link>\r\n+      <AdditionalDependencies>x86\\ZlibDllDebug\\zlibwapi.lib;%(AdditionalDependencies)</AdditionalDependencies>\r\n+      <OutputFile>$(OutDir)minizip.exe</OutputFile>\r\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\r\n+      <ProgramDatabaseFile>$(OutDir)minizip.pdb</ProgramDatabaseFile>\r\n+      <SubSystem>Console</SubSystem>\r\n+      <RandomizedBaseAddress>false</RandomizedBaseAddress>\r\n+      <DataExecutionPrevention>\r\n+      </DataExecutionPrevention>\r\n+      <TargetMachine>MachineX86</TargetMachine>\r\n+    </Link>\r\n+  </ItemDefinitionGroup>\r\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\r\n+    <ClCompile>\r\n+      <Optimization>MaxSpeed</Optimization>\r\n+      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>\r\n+      <OmitFramePointers>true</OmitFramePointers>\r\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\minizip;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\r\n+      <PreprocessorDefinitions>WIN32;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;ZLIB_WINAPI;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <StringPooling>true</StringPooling>\r\n+      <BasicRuntimeChecks>Default</BasicRuntimeChecks>\r\n+      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>\r\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\r\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\r\n+      <PrecompiledHeader>\r\n+      </PrecompiledHeader>\r\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\r\n+      <WarningLevel>Level3</WarningLevel>\r\n+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\r\n+    </ClCompile>\r\n+    <Link>\r\n+      <AdditionalDependencies>x86\\ZlibDllRelease\\zlibwapi.lib;%(AdditionalDependencies)</AdditionalDependencies>\r\n+      <OutputFile>$(OutDir)minizip.exe</OutputFile>\r\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\r\n+      <SubSystem>Console</SubSystem>\r\n+      <OptimizeReferences>true</OptimizeReferences>\r\n+      <EnableCOMDATFolding>true</EnableCOMDATFolding>\r\n+      <RandomizedBaseAddress>false</RandomizedBaseAddress>\r\n+      <DataExecutionPrevention>\r\n+      </DataExecutionPrevention>\r\n+      <TargetMachine>MachineX86</TargetMachine>\r\n+    </Link>\r\n+  </ItemDefinitionGroup>\r\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\r\n+    <Midl>\r\n+      <TargetEnvironment>X64</TargetEnvironment>\r\n+    </Midl>\r\n+    <ClCompile>\r\n+      <Optimization>Disabled</Optimization>\r\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\minizip;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\r\n+      <PreprocessorDefinitions>_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;ZLIB_WINAPI;_DEBUG;_CONSOLE;WIN64;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <MinimalRebuild>true</MinimalRebuild>\r\n+      <BasicRuntimeChecks>Default</BasicRuntimeChecks>\r\n+      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>\r\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\r\n+      <PrecompiledHeader>\r\n+      </PrecompiledHeader>\r\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\r\n+      <WarningLevel>Level3</WarningLevel>\r\n+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\r\n+    </ClCompile>\r\n+    <Link>\r\n+      <AdditionalDependencies>x64\\ZlibDllDebug\\zlibwapi.lib;%(AdditionalDependencies)</AdditionalDependencies>\r\n+      <OutputFile>$(OutDir)minizip.exe</OutputFile>\r\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\r\n+      <ProgramDatabaseFile>$(OutDir)minizip.pdb</ProgramDatabaseFile>\r\n+      <SubSystem>Console</SubSystem>\r\n+      <TargetMachine>MachineX64</TargetMachine>\r\n+    </Link>\r\n+  </ItemDefinitionGroup>\r\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">\r\n+    <Midl>\r\n+      <TargetEnvironment>Itanium</TargetEnvironment>\r\n+    </Midl>\r\n+    <ClCompile>\r\n+      <Optimization>Disabled</Optimization>\r\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\minizip;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\r\n+      <PreprocessorDefinitions>_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;ZLIB_WINAPI;_DEBUG;_CONSOLE;WIN64;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <MinimalRebuild>true</MinimalRebuild>\r\n+      <BasicRuntimeChecks>Default</BasicRuntimeChecks>\r\n+      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>\r\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\r\n+      <PrecompiledHeader>\r\n+      </PrecompiledHeader>\r\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\r\n+      <WarningLevel>Level3</WarningLevel>\r\n+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\r\n+    </ClCompile>\r\n+    <Link>\r\n+      <AdditionalDependencies>ia64\\ZlibDllDebug\\zlibwapi.lib;%(AdditionalDependencies)</AdditionalDependencies>\r\n+      <OutputFile>$(OutDir)minizip.exe</OutputFile>\r\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\r\n+      <ProgramDatabaseFile>$(OutDir)minizip.pdb</ProgramDatabaseFile>\r\n+      <SubSystem>Console</SubSystem>\r\n+      <TargetMachine>MachineIA64</TargetMachine>\r\n+    </Link>\r\n+  </ItemDefinitionGroup>\r\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\r\n+    <Midl>\r\n+      <TargetEnvironment>X64</TargetEnvironment>\r\n+    </Midl>\r\n+    <ClCompile>\r\n+      <Optimization>MaxSpeed</Optimization>\r\n+      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>\r\n+      <OmitFramePointers>true</OmitFramePointers>\r\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\minizip;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\r\n+      <PreprocessorDefinitions>_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;ZLIB_WINAPI;NDEBUG;_CONSOLE;WIN64;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <StringPooling>true</StringPooling>\r\n+      <BasicRuntimeChecks>Default</BasicRuntimeChecks>\r\n+      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>\r\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\r\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\r\n+      <PrecompiledHeader>\r\n+      </PrecompiledHeader>\r\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\r\n+      <WarningLevel>Level3</WarningLevel>\r\n+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\r\n+    </ClCompile>\r\n+    <Link>\r\n+      <AdditionalDependencies>x64\\ZlibDllRelease\\zlibwapi.lib;%(AdditionalDependencies)</AdditionalDependencies>\r\n+      <OutputFile>$(OutDir)minizip.exe</OutputFile>\r\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\r\n+      <SubSystem>Console</SubSystem>\r\n+      <OptimizeReferences>true</OptimizeReferences>\r\n+      <EnableCOMDATFolding>true</EnableCOMDATFolding>\r\n+      <TargetMachine>MachineX64</TargetMachine>\r\n+    </Link>\r\n+  </ItemDefinitionGroup>\r\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">\r\n+    <Midl>\r\n+      <TargetEnvironment>Itanium</TargetEnvironment>\r\n+    </Midl>\r\n+    <ClCompile>\r\n+      <Optimization>MaxSpeed</Optimization>\r\n+      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>\r\n+      <OmitFramePointers>true</OmitFramePointers>\r\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\minizip;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\r\n+      <PreprocessorDefinitions>_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;ZLIB_WINAPI;NDEBUG;_CONSOLE;WIN64;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <StringPooling>true</StringPooling>\r\n+      <BasicRuntimeChecks>Default</BasicRuntimeChecks>\r\n+      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>\r\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\r\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\r\n+      <PrecompiledHeader>\r\n+      </PrecompiledHeader>\r\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\r\n+      <WarningLevel>Level3</WarningLevel>\r\n+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\r\n+    </ClCompile>\r\n+    <Link>\r\n+      <AdditionalDependencies>ia64\\ZlibDllRelease\\zlibwapi.lib;%(AdditionalDependencies)</AdditionalDependencies>\r\n+      <OutputFile>$(OutDir)minizip.exe</OutputFile>\r\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\r\n+      <SubSystem>Console</SubSystem>\r\n+      <OptimizeReferences>true</OptimizeReferences>\r\n+      <EnableCOMDATFolding>true</EnableCOMDATFolding>\r\n+      <TargetMachine>MachineIA64</TargetMachine>\r\n+    </Link>\r\n+  </ItemDefinitionGroup>\r\n+  <ItemGroup>\r\n+    <ClCompile Include=\"..\\..\\minizip\\minizip.c\" />\r\n+  </ItemGroup>\r\n+  <ItemGroup>\r\n+    <ProjectReference Include=\"zlibvc.vcxproj\">\r\n+      <Project>{8fd826f8-3739-44e6-8cc8-997122e53b8d}</Project>\r\n+    </ProjectReference>\r\n+  </ItemGroup>\r\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\r\n+  <ImportGroup Label=\"ExtensionTargets\">\r\n+  </ImportGroup>\r\n+</Project>\n\\ No newline at end of file"}, {"sha": "6d5595401306370d787930cda038499a5c9146d2", "filename": "zlib/contrib/vstudio/vc11/testzlib.vcxproj", "status": "added", "additions": 426, "deletions": 0, "changes": 426, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Fcontrib%2Fvstudio%2Fvc11%2Ftestzlib.vcxproj", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Fcontrib%2Fvstudio%2Fvc11%2Ftestzlib.vcxproj", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fvstudio%2Fvc11%2Ftestzlib.vcxproj?ref=cd9ec14217a566fa0ae12ccf34534cbb7680f5ab", "patch": "@@ -0,0 +1,426 @@\n+\ufeff<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n+<Project DefaultTargets=\"Build\" ToolsVersion=\"4.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\r\n+  <ItemGroup Label=\"ProjectConfigurations\">\r\n+    <ProjectConfiguration Include=\"Debug|Itanium\">\r\n+      <Configuration>Debug</Configuration>\r\n+      <Platform>Itanium</Platform>\r\n+    </ProjectConfiguration>\r\n+    <ProjectConfiguration Include=\"Debug|Win32\">\r\n+      <Configuration>Debug</Configuration>\r\n+      <Platform>Win32</Platform>\r\n+    </ProjectConfiguration>\r\n+    <ProjectConfiguration Include=\"Debug|x64\">\r\n+      <Configuration>Debug</Configuration>\r\n+      <Platform>x64</Platform>\r\n+    </ProjectConfiguration>\r\n+    <ProjectConfiguration Include=\"ReleaseWithoutAsm|Itanium\">\r\n+      <Configuration>ReleaseWithoutAsm</Configuration>\r\n+      <Platform>Itanium</Platform>\r\n+    </ProjectConfiguration>\r\n+    <ProjectConfiguration Include=\"ReleaseWithoutAsm|Win32\">\r\n+      <Configuration>ReleaseWithoutAsm</Configuration>\r\n+      <Platform>Win32</Platform>\r\n+    </ProjectConfiguration>\r\n+    <ProjectConfiguration Include=\"ReleaseWithoutAsm|x64\">\r\n+      <Configuration>ReleaseWithoutAsm</Configuration>\r\n+      <Platform>x64</Platform>\r\n+    </ProjectConfiguration>\r\n+    <ProjectConfiguration Include=\"Release|Itanium\">\r\n+      <Configuration>Release</Configuration>\r\n+      <Platform>Itanium</Platform>\r\n+    </ProjectConfiguration>\r\n+    <ProjectConfiguration Include=\"Release|Win32\">\r\n+      <Configuration>Release</Configuration>\r\n+      <Platform>Win32</Platform>\r\n+    </ProjectConfiguration>\r\n+    <ProjectConfiguration Include=\"Release|x64\">\r\n+      <Configuration>Release</Configuration>\r\n+      <Platform>x64</Platform>\r\n+    </ProjectConfiguration>\r\n+  </ItemGroup>\r\n+  <PropertyGroup Label=\"Globals\">\r\n+    <ProjectGuid>{AA6666AA-E09F-4135-9C0C-4FE50C3C654B}</ProjectGuid>\r\n+    <RootNamespace>testzlib</RootNamespace>\r\n+    <Keyword>Win32Proj</Keyword>\r\n+  </PropertyGroup>\r\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.Default.props\" />\r\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" Label=\"Configuration\">\r\n+    <ConfigurationType>Application</ConfigurationType>\r\n+    <CharacterSet>MultiByte</CharacterSet>\r\n+    <WholeProgramOptimization>true</WholeProgramOptimization>\r\n+    <PlatformToolset>v110</PlatformToolset>\r\n+  </PropertyGroup>\r\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Win32'\" Label=\"Configuration\">\r\n+    <ConfigurationType>Application</ConfigurationType>\r\n+    <CharacterSet>MultiByte</CharacterSet>\r\n+    <WholeProgramOptimization>true</WholeProgramOptimization>\r\n+    <PlatformToolset>v110</PlatformToolset>\r\n+  </PropertyGroup>\r\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" Label=\"Configuration\">\r\n+    <ConfigurationType>Application</ConfigurationType>\r\n+    <CharacterSet>Unicode</CharacterSet>\r\n+    <PlatformToolset>v110</PlatformToolset>\r\n+  </PropertyGroup>\r\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\" Label=\"Configuration\">\r\n+    <ConfigurationType>Application</ConfigurationType>\r\n+    <CharacterSet>MultiByte</CharacterSet>\r\n+    <WholeProgramOptimization>true</WholeProgramOptimization>\r\n+  </PropertyGroup>\r\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Itanium'\" Label=\"Configuration\">\r\n+    <ConfigurationType>Application</ConfigurationType>\r\n+    <CharacterSet>MultiByte</CharacterSet>\r\n+    <WholeProgramOptimization>true</WholeProgramOptimization>\r\n+  </PropertyGroup>\r\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\" Label=\"Configuration\">\r\n+    <ConfigurationType>Application</ConfigurationType>\r\n+    <CharacterSet>MultiByte</CharacterSet>\r\n+  </PropertyGroup>\r\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" Label=\"Configuration\">\r\n+    <ConfigurationType>Application</ConfigurationType>\r\n+    <WholeProgramOptimization>true</WholeProgramOptimization>\r\n+    <PlatformToolset>v110</PlatformToolset>\r\n+  </PropertyGroup>\r\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|x64'\" Label=\"Configuration\">\r\n+    <ConfigurationType>Application</ConfigurationType>\r\n+    <WholeProgramOptimization>true</WholeProgramOptimization>\r\n+    <PlatformToolset>v110</PlatformToolset>\r\n+  </PropertyGroup>\r\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" Label=\"Configuration\">\r\n+    <ConfigurationType>Application</ConfigurationType>\r\n+    <PlatformToolset>v110</PlatformToolset>\r\n+  </PropertyGroup>\r\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\r\n+  <ImportGroup Label=\"ExtensionSettings\">\r\n+  </ImportGroup>\r\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" Label=\"PropertySheets\">\r\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\r\n+  </ImportGroup>\r\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Win32'\" Label=\"PropertySheets\">\r\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\r\n+  </ImportGroup>\r\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" Label=\"PropertySheets\">\r\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\r\n+  </ImportGroup>\r\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\" Label=\"PropertySheets\">\r\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\r\n+  </ImportGroup>\r\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Itanium'\" Label=\"PropertySheets\">\r\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\r\n+  </ImportGroup>\r\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\" Label=\"PropertySheets\">\r\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\r\n+  </ImportGroup>\r\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" Label=\"PropertySheets\">\r\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\r\n+  </ImportGroup>\r\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|x64'\" Label=\"PropertySheets\">\r\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\r\n+  </ImportGroup>\r\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" Label=\"PropertySheets\">\r\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\r\n+  </ImportGroup>\r\n+  <PropertyGroup Label=\"UserMacros\" />\r\n+  <PropertyGroup>\r\n+    <_ProjectFileVersion>10.0.30128.1</_ProjectFileVersion>\r\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">x86\\TestZlib$(Configuration)\\</OutDir>\r\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">x86\\TestZlib$(Configuration)\\Tmp\\</IntDir>\r\n+    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">true</LinkIncremental>\r\n+    <GenerateManifest Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">false</GenerateManifest>\r\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Win32'\">x86\\TestZlib$(Configuration)\\</OutDir>\r\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Win32'\">x86\\TestZlib$(Configuration)\\Tmp\\</IntDir>\r\n+    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Win32'\">false</LinkIncremental>\r\n+    <GenerateManifest Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Win32'\">false</GenerateManifest>\r\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">x86\\TestZlib$(Configuration)\\</OutDir>\r\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">x86\\TestZlib$(Configuration)\\Tmp\\</IntDir>\r\n+    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">false</LinkIncremental>\r\n+    <GenerateManifest Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">false</GenerateManifest>\r\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">x64\\TestZlib$(Configuration)\\</OutDir>\r\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">x64\\TestZlib$(Configuration)\\Tmp\\</IntDir>\r\n+    <GenerateManifest Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">false</GenerateManifest>\r\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">ia64\\TestZlib$(Configuration)\\</OutDir>\r\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">ia64\\TestZlib$(Configuration)\\Tmp\\</IntDir>\r\n+    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">true</LinkIncremental>\r\n+    <GenerateManifest Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">false</GenerateManifest>\r\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|x64'\">x64\\TestZlib$(Configuration)\\</OutDir>\r\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|x64'\">x64\\TestZlib$(Configuration)\\Tmp\\</IntDir>\r\n+    <GenerateManifest Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|x64'\">false</GenerateManifest>\r\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Itanium'\">ia64\\TestZlib$(Configuration)\\</OutDir>\r\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Itanium'\">ia64\\TestZlib$(Configuration)\\Tmp\\</IntDir>\r\n+    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Itanium'\">false</LinkIncremental>\r\n+    <GenerateManifest Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Itanium'\">false</GenerateManifest>\r\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">x64\\TestZlib$(Configuration)\\</OutDir>\r\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">x64\\TestZlib$(Configuration)\\Tmp\\</IntDir>\r\n+    <GenerateManifest Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">false</GenerateManifest>\r\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">ia64\\TestZlib$(Configuration)\\</OutDir>\r\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">ia64\\TestZlib$(Configuration)\\Tmp\\</IntDir>\r\n+    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">false</LinkIncremental>\r\n+    <GenerateManifest Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">false</GenerateManifest>\r\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">AllRules.ruleset</CodeAnalysisRuleSet>\r\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\" />\r\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\" />\r\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">AllRules.ruleset</CodeAnalysisRuleSet>\r\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" />\r\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" />\r\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">AllRules.ruleset</CodeAnalysisRuleSet>\r\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" />\r\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" />\r\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Itanium'\">AllRules.ruleset</CodeAnalysisRuleSet>\r\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Itanium'\" />\r\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Itanium'\" />\r\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Win32'\">AllRules.ruleset</CodeAnalysisRuleSet>\r\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Win32'\" />\r\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Win32'\" />\r\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|x64'\">AllRules.ruleset</CodeAnalysisRuleSet>\r\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|x64'\" />\r\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|x64'\" />\r\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">AllRules.ruleset</CodeAnalysisRuleSet>\r\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\" />\r\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\" />\r\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">AllRules.ruleset</CodeAnalysisRuleSet>\r\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" />\r\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" />\r\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">AllRules.ruleset</CodeAnalysisRuleSet>\r\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" />\r\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" />\r\n+  </PropertyGroup>\r\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\r\n+    <ClCompile>\r\n+      <Optimization>Disabled</Optimization>\r\n+      <AdditionalIncludeDirectories>..\\..\\..;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\r\n+      <PreprocessorDefinitions>ASMV;ASMINF;WIN32;ZLIB_WINAPI;_DEBUG;_CONSOLE;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <MinimalRebuild>true</MinimalRebuild>\r\n+      <BasicRuntimeChecks>Default</BasicRuntimeChecks>\r\n+      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>\r\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\r\n+      <PrecompiledHeader>\r\n+      </PrecompiledHeader>\r\n+      <AssemblerOutput>AssemblyAndSourceCode</AssemblerOutput>\r\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\r\n+      <WarningLevel>Level3</WarningLevel>\r\n+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\r\n+    </ClCompile>\r\n+    <Link>\r\n+      <AdditionalDependencies>..\\..\\masmx86\\match686.obj;..\\..\\masmx86\\inffas32.obj;%(AdditionalDependencies)</AdditionalDependencies>\r\n+      <OutputFile>$(OutDir)testzlib.exe</OutputFile>\r\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\r\n+      <ProgramDatabaseFile>$(OutDir)testzlib.pdb</ProgramDatabaseFile>\r\n+      <SubSystem>Console</SubSystem>\r\n+      <RandomizedBaseAddress>false</RandomizedBaseAddress>\r\n+      <DataExecutionPrevention>\r\n+      </DataExecutionPrevention>\r\n+      <TargetMachine>MachineX86</TargetMachine>\r\n+    </Link>\r\n+  </ItemDefinitionGroup>\r\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Win32'\">\r\n+    <ClCompile>\r\n+      <Optimization>MaxSpeed</Optimization>\r\n+      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>\r\n+      <OmitFramePointers>true</OmitFramePointers>\r\n+      <AdditionalIncludeDirectories>..\\..\\..;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\r\n+      <PreprocessorDefinitions>WIN32;ZLIB_WINAPI;NDEBUG;_CONSOLE;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <StringPooling>true</StringPooling>\r\n+      <BasicRuntimeChecks>Default</BasicRuntimeChecks>\r\n+      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>\r\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\r\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\r\n+      <PrecompiledHeader>\r\n+      </PrecompiledHeader>\r\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\r\n+      <WarningLevel>Level3</WarningLevel>\r\n+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\r\n+    </ClCompile>\r\n+    <Link>\r\n+      <OutputFile>$(OutDir)testzlib.exe</OutputFile>\r\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\r\n+      <SubSystem>Console</SubSystem>\r\n+      <OptimizeReferences>true</OptimizeReferences>\r\n+      <EnableCOMDATFolding>true</EnableCOMDATFolding>\r\n+      <RandomizedBaseAddress>false</RandomizedBaseAddress>\r\n+      <DataExecutionPrevention>\r\n+      </DataExecutionPrevention>\r\n+      <TargetMachine>MachineX86</TargetMachine>\r\n+    </Link>\r\n+  </ItemDefinitionGroup>\r\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\r\n+    <ClCompile>\r\n+      <Optimization>MaxSpeed</Optimization>\r\n+      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>\r\n+      <OmitFramePointers>true</OmitFramePointers>\r\n+      <AdditionalIncludeDirectories>..\\..\\..;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\r\n+      <PreprocessorDefinitions>ASMV;ASMINF;WIN32;ZLIB_WINAPI;NDEBUG;_CONSOLE;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <StringPooling>true</StringPooling>\r\n+      <BasicRuntimeChecks>Default</BasicRuntimeChecks>\r\n+      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>\r\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\r\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\r\n+      <PrecompiledHeader>\r\n+      </PrecompiledHeader>\r\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\r\n+      <WarningLevel>Level3</WarningLevel>\r\n+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\r\n+    </ClCompile>\r\n+    <Link>\r\n+      <AdditionalDependencies>..\\..\\masmx86\\match686.obj;..\\..\\masmx86\\inffas32.obj;%(AdditionalDependencies)</AdditionalDependencies>\r\n+      <OutputFile>$(OutDir)testzlib.exe</OutputFile>\r\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\r\n+      <SubSystem>Console</SubSystem>\r\n+      <OptimizeReferences>true</OptimizeReferences>\r\n+      <EnableCOMDATFolding>true</EnableCOMDATFolding>\r\n+      <RandomizedBaseAddress>false</RandomizedBaseAddress>\r\n+      <DataExecutionPrevention>\r\n+      </DataExecutionPrevention>\r\n+      <TargetMachine>MachineX86</TargetMachine>\r\n+    </Link>\r\n+  </ItemDefinitionGroup>\r\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\r\n+    <ClCompile>\r\n+      <AdditionalIncludeDirectories>..\\..\\..;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\r\n+      <PreprocessorDefinitions>ASMV;ASMINF;WIN32;ZLIB_WINAPI;_DEBUG;_CONSOLE;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <BasicRuntimeChecks>Default</BasicRuntimeChecks>\r\n+      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>\r\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\r\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\r\n+    </ClCompile>\r\n+    <Link>\r\n+      <AdditionalDependencies>..\\..\\masmx64\\gvmat64.obj;..\\..\\masmx64\\inffasx64.obj;%(AdditionalDependencies)</AdditionalDependencies>\r\n+    </Link>\r\n+  </ItemDefinitionGroup>\r\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">\r\n+    <Midl>\r\n+      <TargetEnvironment>Itanium</TargetEnvironment>\r\n+    </Midl>\r\n+    <ClCompile>\r\n+      <Optimization>Disabled</Optimization>\r\n+      <AdditionalIncludeDirectories>..\\..\\..;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\r\n+      <PreprocessorDefinitions>ZLIB_WINAPI;_DEBUG;_CONSOLE;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS;WIN64;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <MinimalRebuild>true</MinimalRebuild>\r\n+      <BasicRuntimeChecks>Default</BasicRuntimeChecks>\r\n+      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>\r\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\r\n+      <PrecompiledHeader>\r\n+      </PrecompiledHeader>\r\n+      <AssemblerOutput>AssemblyAndSourceCode</AssemblerOutput>\r\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\r\n+      <WarningLevel>Level3</WarningLevel>\r\n+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\r\n+    </ClCompile>\r\n+    <Link>\r\n+      <OutputFile>$(OutDir)testzlib.exe</OutputFile>\r\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\r\n+      <ProgramDatabaseFile>$(OutDir)testzlib.pdb</ProgramDatabaseFile>\r\n+      <SubSystem>Console</SubSystem>\r\n+      <TargetMachine>MachineIA64</TargetMachine>\r\n+    </Link>\r\n+  </ItemDefinitionGroup>\r\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|x64'\">\r\n+    <ClCompile>\r\n+      <AdditionalIncludeDirectories>..\\..\\..;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\r\n+      <PreprocessorDefinitions>WIN32;ZLIB_WINAPI;NDEBUG;_CONSOLE;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <BasicRuntimeChecks>Default</BasicRuntimeChecks>\r\n+      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>\r\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\r\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\r\n+    </ClCompile>\r\n+    <Link>\r\n+      <AdditionalDependencies>%(AdditionalDependencies)</AdditionalDependencies>\r\n+    </Link>\r\n+  </ItemDefinitionGroup>\r\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Itanium'\">\r\n+    <Midl>\r\n+      <TargetEnvironment>Itanium</TargetEnvironment>\r\n+    </Midl>\r\n+    <ClCompile>\r\n+      <Optimization>MaxSpeed</Optimization>\r\n+      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>\r\n+      <OmitFramePointers>true</OmitFramePointers>\r\n+      <AdditionalIncludeDirectories>..\\..\\..;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\r\n+      <PreprocessorDefinitions>ZLIB_WINAPI;NDEBUG;_CONSOLE;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS;WIN64;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <StringPooling>true</StringPooling>\r\n+      <BasicRuntimeChecks>Default</BasicRuntimeChecks>\r\n+      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>\r\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\r\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\r\n+      <PrecompiledHeader>\r\n+      </PrecompiledHeader>\r\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\r\n+      <WarningLevel>Level3</WarningLevel>\r\n+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\r\n+    </ClCompile>\r\n+    <Link>\r\n+      <OutputFile>$(OutDir)testzlib.exe</OutputFile>\r\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\r\n+      <SubSystem>Console</SubSystem>\r\n+      <OptimizeReferences>true</OptimizeReferences>\r\n+      <EnableCOMDATFolding>true</EnableCOMDATFolding>\r\n+      <TargetMachine>MachineIA64</TargetMachine>\r\n+    </Link>\r\n+  </ItemDefinitionGroup>\r\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\r\n+    <ClCompile>\r\n+      <AdditionalIncludeDirectories>..\\..\\..;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\r\n+      <PreprocessorDefinitions>ASMV;ASMINF;WIN32;ZLIB_WINAPI;NDEBUG;_CONSOLE;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <BasicRuntimeChecks>Default</BasicRuntimeChecks>\r\n+      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>\r\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\r\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\r\n+    </ClCompile>\r\n+    <Link>\r\n+      <AdditionalDependencies>..\\..\\masmx64\\gvmat64.obj;..\\..\\masmx64\\inffasx64.obj;%(AdditionalDependencies)</AdditionalDependencies>\r\n+    </Link>\r\n+  </ItemDefinitionGroup>\r\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">\r\n+    <Midl>\r\n+      <TargetEnvironment>Itanium</TargetEnvironment>\r\n+    </Midl>\r\n+    <ClCompile>\r\n+      <Optimization>MaxSpeed</Optimization>\r\n+      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>\r\n+      <OmitFramePointers>true</OmitFramePointers>\r\n+      <AdditionalIncludeDirectories>..\\..\\..;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\r\n+      <PreprocessorDefinitions>ZLIB_WINAPI;NDEBUG;_CONSOLE;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS;WIN64;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <StringPooling>true</StringPooling>\r\n+      <BasicRuntimeChecks>Default</BasicRuntimeChecks>\r\n+      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>\r\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\r\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\r\n+      <PrecompiledHeader>\r\n+      </PrecompiledHeader>\r\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\r\n+      <WarningLevel>Level3</WarningLevel>\r\n+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\r\n+    </ClCompile>\r\n+    <Link>\r\n+      <OutputFile>$(OutDir)testzlib.exe</OutputFile>\r\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\r\n+      <SubSystem>Console</SubSystem>\r\n+      <OptimizeReferences>true</OptimizeReferences>\r\n+      <EnableCOMDATFolding>true</EnableCOMDATFolding>\r\n+      <TargetMachine>MachineIA64</TargetMachine>\r\n+    </Link>\r\n+  </ItemDefinitionGroup>\r\n+  <ItemGroup>\r\n+    <ClCompile Include=\"..\\..\\..\\adler32.c\" />\r\n+    <ClCompile Include=\"..\\..\\..\\compress.c\" />\r\n+    <ClCompile Include=\"..\\..\\..\\crc32.c\" />\r\n+    <ClCompile Include=\"..\\..\\..\\deflate.c\" />\r\n+    <ClCompile Include=\"..\\..\\..\\infback.c\" />\r\n+    <ClCompile Include=\"..\\..\\masmx64\\inffas8664.c\">\r\n+      <ExcludedFromBuild Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">true</ExcludedFromBuild>\r\n+      <ExcludedFromBuild Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">true</ExcludedFromBuild>\r\n+      <ExcludedFromBuild Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Itanium'\">true</ExcludedFromBuild>\r\n+      <ExcludedFromBuild Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Win32'\">true</ExcludedFromBuild>\r\n+      <ExcludedFromBuild Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">true</ExcludedFromBuild>\r\n+      <ExcludedFromBuild Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">true</ExcludedFromBuild>\r\n+    </ClCompile>\r\n+    <ClCompile Include=\"..\\..\\..\\inffast.c\" />\r\n+    <ClCompile Include=\"..\\..\\..\\inflate.c\" />\r\n+    <ClCompile Include=\"..\\..\\..\\inftrees.c\" />\r\n+    <ClCompile Include=\"..\\..\\testzlib\\testzlib.c\" />\r\n+    <ClCompile Include=\"..\\..\\..\\trees.c\" />\r\n+    <ClCompile Include=\"..\\..\\..\\uncompr.c\" />\r\n+    <ClCompile Include=\"..\\..\\..\\zutil.c\" />\r\n+  </ItemGroup>\r\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\r\n+  <ImportGroup Label=\"ExtensionTargets\">\r\n+  </ImportGroup>\r\n+</Project>\n\\ No newline at end of file"}, {"sha": "9f20c78f60b9840da0ad4d0a428d2b0ecebebfac", "filename": "zlib/contrib/vstudio/vc11/testzlibdll.vcxproj", "status": "added", "additions": 314, "deletions": 0, "changes": 314, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Fcontrib%2Fvstudio%2Fvc11%2Ftestzlibdll.vcxproj", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Fcontrib%2Fvstudio%2Fvc11%2Ftestzlibdll.vcxproj", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fvstudio%2Fvc11%2Ftestzlibdll.vcxproj?ref=cd9ec14217a566fa0ae12ccf34534cbb7680f5ab", "patch": "@@ -0,0 +1,314 @@\n+\ufeff<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n+<Project DefaultTargets=\"Build\" ToolsVersion=\"4.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\r\n+  <ItemGroup Label=\"ProjectConfigurations\">\r\n+    <ProjectConfiguration Include=\"Debug|Itanium\">\r\n+      <Configuration>Debug</Configuration>\r\n+      <Platform>Itanium</Platform>\r\n+    </ProjectConfiguration>\r\n+    <ProjectConfiguration Include=\"Debug|Win32\">\r\n+      <Configuration>Debug</Configuration>\r\n+      <Platform>Win32</Platform>\r\n+    </ProjectConfiguration>\r\n+    <ProjectConfiguration Include=\"Debug|x64\">\r\n+      <Configuration>Debug</Configuration>\r\n+      <Platform>x64</Platform>\r\n+    </ProjectConfiguration>\r\n+    <ProjectConfiguration Include=\"Release|Itanium\">\r\n+      <Configuration>Release</Configuration>\r\n+      <Platform>Itanium</Platform>\r\n+    </ProjectConfiguration>\r\n+    <ProjectConfiguration Include=\"Release|Win32\">\r\n+      <Configuration>Release</Configuration>\r\n+      <Platform>Win32</Platform>\r\n+    </ProjectConfiguration>\r\n+    <ProjectConfiguration Include=\"Release|x64\">\r\n+      <Configuration>Release</Configuration>\r\n+      <Platform>x64</Platform>\r\n+    </ProjectConfiguration>\r\n+  </ItemGroup>\r\n+  <PropertyGroup Label=\"Globals\">\r\n+    <ProjectGuid>{C52F9E7B-498A-42BE-8DB4-85A15694366A}</ProjectGuid>\r\n+    <Keyword>Win32Proj</Keyword>\r\n+  </PropertyGroup>\r\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.Default.props\" />\r\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" Label=\"Configuration\">\r\n+    <ConfigurationType>Application</ConfigurationType>\r\n+    <CharacterSet>MultiByte</CharacterSet>\r\n+    <PlatformToolset>v110</PlatformToolset>\r\n+  </PropertyGroup>\r\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" Label=\"Configuration\">\r\n+    <ConfigurationType>Application</ConfigurationType>\r\n+    <CharacterSet>Unicode</CharacterSet>\r\n+    <PlatformToolset>v110</PlatformToolset>\r\n+  </PropertyGroup>\r\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\" Label=\"Configuration\">\r\n+    <ConfigurationType>Application</ConfigurationType>\r\n+    <CharacterSet>MultiByte</CharacterSet>\r\n+  </PropertyGroup>\r\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\" Label=\"Configuration\">\r\n+    <ConfigurationType>Application</ConfigurationType>\r\n+    <CharacterSet>MultiByte</CharacterSet>\r\n+  </PropertyGroup>\r\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" Label=\"Configuration\">\r\n+    <ConfigurationType>Application</ConfigurationType>\r\n+    <CharacterSet>MultiByte</CharacterSet>\r\n+    <PlatformToolset>v110</PlatformToolset>\r\n+  </PropertyGroup>\r\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" Label=\"Configuration\">\r\n+    <ConfigurationType>Application</ConfigurationType>\r\n+    <CharacterSet>MultiByte</CharacterSet>\r\n+    <PlatformToolset>v110</PlatformToolset>\r\n+  </PropertyGroup>\r\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\r\n+  <ImportGroup Label=\"ExtensionSettings\">\r\n+  </ImportGroup>\r\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" Label=\"PropertySheets\">\r\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\r\n+  </ImportGroup>\r\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" Label=\"PropertySheets\">\r\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\r\n+  </ImportGroup>\r\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\" Label=\"PropertySheets\">\r\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\r\n+  </ImportGroup>\r\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\" Label=\"PropertySheets\">\r\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\r\n+  </ImportGroup>\r\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" Label=\"PropertySheets\">\r\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\r\n+  </ImportGroup>\r\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" Label=\"PropertySheets\">\r\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\r\n+  </ImportGroup>\r\n+  <PropertyGroup Label=\"UserMacros\" />\r\n+  <PropertyGroup>\r\n+    <_ProjectFileVersion>10.0.30128.1</_ProjectFileVersion>\r\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">x86\\TestZlibDll$(Configuration)\\</OutDir>\r\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">x86\\TestZlibDll$(Configuration)\\Tmp\\</IntDir>\r\n+    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">true</LinkIncremental>\r\n+    <GenerateManifest Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">false</GenerateManifest>\r\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">x86\\TestZlibDll$(Configuration)\\</OutDir>\r\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">x86\\TestZlibDll$(Configuration)\\Tmp\\</IntDir>\r\n+    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">false</LinkIncremental>\r\n+    <GenerateManifest Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">false</GenerateManifest>\r\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">x64\\TestZlibDll$(Configuration)\\</OutDir>\r\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">x64\\TestZlibDll$(Configuration)\\Tmp\\</IntDir>\r\n+    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">true</LinkIncremental>\r\n+    <GenerateManifest Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">false</GenerateManifest>\r\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">ia64\\TestZlibDll$(Configuration)\\</OutDir>\r\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">ia64\\TestZlibDll$(Configuration)\\Tmp\\</IntDir>\r\n+    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">true</LinkIncremental>\r\n+    <GenerateManifest Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">false</GenerateManifest>\r\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">x64\\TestZlibDll$(Configuration)\\</OutDir>\r\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">x64\\TestZlibDll$(Configuration)\\Tmp\\</IntDir>\r\n+    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">false</LinkIncremental>\r\n+    <GenerateManifest Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">false</GenerateManifest>\r\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">ia64\\TestZlibDll$(Configuration)\\</OutDir>\r\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">ia64\\TestZlibDll$(Configuration)\\Tmp\\</IntDir>\r\n+    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">false</LinkIncremental>\r\n+    <GenerateManifest Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">false</GenerateManifest>\r\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">AllRules.ruleset</CodeAnalysisRuleSet>\r\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\" />\r\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\" />\r\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">AllRules.ruleset</CodeAnalysisRuleSet>\r\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" />\r\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" />\r\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">AllRules.ruleset</CodeAnalysisRuleSet>\r\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" />\r\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" />\r\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">AllRules.ruleset</CodeAnalysisRuleSet>\r\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\" />\r\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\" />\r\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">AllRules.ruleset</CodeAnalysisRuleSet>\r\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" />\r\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" />\r\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">AllRules.ruleset</CodeAnalysisRuleSet>\r\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" />\r\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" />\r\n+  </PropertyGroup>\r\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\r\n+    <ClCompile>\r\n+      <Optimization>Disabled</Optimization>\r\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\minizip;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\r\n+      <PreprocessorDefinitions>WIN32;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;ZLIB_WINAPI;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <MinimalRebuild>true</MinimalRebuild>\r\n+      <BasicRuntimeChecks>Default</BasicRuntimeChecks>\r\n+      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>\r\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\r\n+      <PrecompiledHeader>\r\n+      </PrecompiledHeader>\r\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\r\n+      <WarningLevel>Level3</WarningLevel>\r\n+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\r\n+    </ClCompile>\r\n+    <Link>\r\n+      <AdditionalDependencies>x86\\ZlibDllDebug\\zlibwapi.lib;%(AdditionalDependencies)</AdditionalDependencies>\r\n+      <OutputFile>$(OutDir)testzlibdll.exe</OutputFile>\r\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\r\n+      <ProgramDatabaseFile>$(OutDir)testzlib.pdb</ProgramDatabaseFile>\r\n+      <SubSystem>Console</SubSystem>\r\n+      <RandomizedBaseAddress>false</RandomizedBaseAddress>\r\n+      <DataExecutionPrevention>\r\n+      </DataExecutionPrevention>\r\n+      <TargetMachine>MachineX86</TargetMachine>\r\n+    </Link>\r\n+  </ItemDefinitionGroup>\r\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\r\n+    <ClCompile>\r\n+      <Optimization>MaxSpeed</Optimization>\r\n+      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>\r\n+      <OmitFramePointers>true</OmitFramePointers>\r\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\minizip;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\r\n+      <PreprocessorDefinitions>WIN32;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;ZLIB_WINAPI;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <StringPooling>true</StringPooling>\r\n+      <BasicRuntimeChecks>Default</BasicRuntimeChecks>\r\n+      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>\r\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\r\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\r\n+      <PrecompiledHeader>\r\n+      </PrecompiledHeader>\r\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\r\n+      <WarningLevel>Level3</WarningLevel>\r\n+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\r\n+    </ClCompile>\r\n+    <Link>\r\n+      <AdditionalDependencies>x86\\ZlibDllRelease\\zlibwapi.lib;%(AdditionalDependencies)</AdditionalDependencies>\r\n+      <OutputFile>$(OutDir)testzlibdll.exe</OutputFile>\r\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\r\n+      <SubSystem>Console</SubSystem>\r\n+      <OptimizeReferences>true</OptimizeReferences>\r\n+      <EnableCOMDATFolding>true</EnableCOMDATFolding>\r\n+      <RandomizedBaseAddress>false</RandomizedBaseAddress>\r\n+      <DataExecutionPrevention>\r\n+      </DataExecutionPrevention>\r\n+      <TargetMachine>MachineX86</TargetMachine>\r\n+    </Link>\r\n+  </ItemDefinitionGroup>\r\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\r\n+    <Midl>\r\n+      <TargetEnvironment>X64</TargetEnvironment>\r\n+    </Midl>\r\n+    <ClCompile>\r\n+      <Optimization>Disabled</Optimization>\r\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\minizip;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\r\n+      <PreprocessorDefinitions>_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;ZLIB_WINAPI;_DEBUG;_CONSOLE;WIN64;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <MinimalRebuild>true</MinimalRebuild>\r\n+      <BasicRuntimeChecks>Default</BasicRuntimeChecks>\r\n+      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>\r\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\r\n+      <PrecompiledHeader>\r\n+      </PrecompiledHeader>\r\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\r\n+      <WarningLevel>Level3</WarningLevel>\r\n+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\r\n+    </ClCompile>\r\n+    <Link>\r\n+      <AdditionalDependencies>x64\\ZlibDllDebug\\zlibwapi.lib;%(AdditionalDependencies)</AdditionalDependencies>\r\n+      <OutputFile>$(OutDir)testzlibdll.exe</OutputFile>\r\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\r\n+      <ProgramDatabaseFile>$(OutDir)testzlib.pdb</ProgramDatabaseFile>\r\n+      <SubSystem>Console</SubSystem>\r\n+      <TargetMachine>MachineX64</TargetMachine>\r\n+    </Link>\r\n+  </ItemDefinitionGroup>\r\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">\r\n+    <Midl>\r\n+      <TargetEnvironment>Itanium</TargetEnvironment>\r\n+    </Midl>\r\n+    <ClCompile>\r\n+      <Optimization>Disabled</Optimization>\r\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\minizip;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\r\n+      <PreprocessorDefinitions>_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;ZLIB_WINAPI;_DEBUG;_CONSOLE;WIN64;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <MinimalRebuild>true</MinimalRebuild>\r\n+      <BasicRuntimeChecks>Default</BasicRuntimeChecks>\r\n+      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>\r\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\r\n+      <PrecompiledHeader>\r\n+      </PrecompiledHeader>\r\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\r\n+      <WarningLevel>Level3</WarningLevel>\r\n+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\r\n+    </ClCompile>\r\n+    <Link>\r\n+      <AdditionalDependencies>ia64\\ZlibDllDebug\\zlibwapi.lib;%(AdditionalDependencies)</AdditionalDependencies>\r\n+      <OutputFile>$(OutDir)testzlibdll.exe</OutputFile>\r\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\r\n+      <ProgramDatabaseFile>$(OutDir)testzlib.pdb</ProgramDatabaseFile>\r\n+      <SubSystem>Console</SubSystem>\r\n+      <TargetMachine>MachineIA64</TargetMachine>\r\n+    </Link>\r\n+  </ItemDefinitionGroup>\r\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\r\n+    <Midl>\r\n+      <TargetEnvironment>X64</TargetEnvironment>\r\n+    </Midl>\r\n+    <ClCompile>\r\n+      <Optimization>MaxSpeed</Optimization>\r\n+      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>\r\n+      <OmitFramePointers>true</OmitFramePointers>\r\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\minizip;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\r\n+      <PreprocessorDefinitions>_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;ZLIB_WINAPI;NDEBUG;_CONSOLE;WIN64;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <StringPooling>true</StringPooling>\r\n+      <BasicRuntimeChecks>Default</BasicRuntimeChecks>\r\n+      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>\r\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\r\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\r\n+      <PrecompiledHeader>\r\n+      </PrecompiledHeader>\r\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\r\n+      <WarningLevel>Level3</WarningLevel>\r\n+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\r\n+    </ClCompile>\r\n+    <Link>\r\n+      <AdditionalDependencies>x64\\ZlibDllRelease\\zlibwapi.lib;%(AdditionalDependencies)</AdditionalDependencies>\r\n+      <OutputFile>$(OutDir)testzlibdll.exe</OutputFile>\r\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\r\n+      <SubSystem>Console</SubSystem>\r\n+      <OptimizeReferences>true</OptimizeReferences>\r\n+      <EnableCOMDATFolding>true</EnableCOMDATFolding>\r\n+      <TargetMachine>MachineX64</TargetMachine>\r\n+    </Link>\r\n+  </ItemDefinitionGroup>\r\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">\r\n+    <Midl>\r\n+      <TargetEnvironment>Itanium</TargetEnvironment>\r\n+    </Midl>\r\n+    <ClCompile>\r\n+      <Optimization>MaxSpeed</Optimization>\r\n+      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>\r\n+      <OmitFramePointers>true</OmitFramePointers>\r\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\minizip;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\r\n+      <PreprocessorDefinitions>_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;ZLIB_WINAPI;NDEBUG;_CONSOLE;WIN64;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <StringPooling>true</StringPooling>\r\n+      <BasicRuntimeChecks>Default</BasicRuntimeChecks>\r\n+      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>\r\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\r\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\r\n+      <PrecompiledHeader>\r\n+      </PrecompiledHeader>\r\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\r\n+      <WarningLevel>Level3</WarningLevel>\r\n+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\r\n+    </ClCompile>\r\n+    <Link>\r\n+      <AdditionalDependencies>ia64\\ZlibDllRelease\\zlibwapi.lib;%(AdditionalDependencies)</AdditionalDependencies>\r\n+      <OutputFile>$(OutDir)testzlibdll.exe</OutputFile>\r\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\r\n+      <SubSystem>Console</SubSystem>\r\n+      <OptimizeReferences>true</OptimizeReferences>\r\n+      <EnableCOMDATFolding>true</EnableCOMDATFolding>\r\n+      <TargetMachine>MachineIA64</TargetMachine>\r\n+    </Link>\r\n+  </ItemDefinitionGroup>\r\n+  <ItemGroup>\r\n+    <ClCompile Include=\"..\\..\\testzlib\\testzlib.c\" />\r\n+  </ItemGroup>\r\n+  <ItemGroup>\r\n+    <ProjectReference Include=\"zlibvc.vcxproj\">\r\n+      <Project>{8fd826f8-3739-44e6-8cc8-997122e53b8d}</Project>\r\n+    </ProjectReference>\r\n+  </ItemGroup>\r\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\r\n+  <ImportGroup Label=\"ExtensionTargets\">\r\n+  </ImportGroup>\r\n+</Project>\n\\ No newline at end of file"}, {"sha": "73f6476d6051d049e7b807217817ff6f51b2a302", "filename": "zlib/contrib/vstudio/vc11/zlib.rc", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Fcontrib%2Fvstudio%2Fvc11%2Fzlib.rc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Fcontrib%2Fvstudio%2Fvc11%2Fzlib.rc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fvstudio%2Fvc11%2Fzlib.rc?ref=cd9ec14217a566fa0ae12ccf34534cbb7680f5ab", "patch": "@@ -0,0 +1,32 @@\n+#include <windows.h>\r\n+\r\n+#define IDR_VERSION1  1\r\n+IDR_VERSION1\tVERSIONINFO\tMOVEABLE IMPURE LOADONCALL DISCARDABLE\r\n+  FILEVERSION\t 1,2,8,0\r\n+  PRODUCTVERSION 1,2,8,0\r\n+  FILEFLAGSMASK\tVS_FFI_FILEFLAGSMASK\r\n+  FILEFLAGS\t0\r\n+  FILEOS\tVOS_DOS_WINDOWS32\r\n+  FILETYPE\tVFT_DLL\r\n+  FILESUBTYPE\t0\t// not used\r\n+BEGIN\r\n+  BLOCK \"StringFileInfo\"\r\n+  BEGIN\r\n+    BLOCK \"040904E4\"\r\n+    //language ID = U.S. English, char set = Windows, Multilingual\r\n+\r\n+    BEGIN\r\n+      VALUE \"FileDescription\", \"zlib data compression and ZIP file I/O library\\0\"\r\n+      VALUE \"FileVersion\",\t\"1.2.8\\0\"\r\n+      VALUE \"InternalName\",\t\"zlib\\0\"\r\n+      VALUE \"OriginalFilename\",\t\"zlibwapi.dll\\0\"\r\n+      VALUE \"ProductName\",\t\"ZLib.DLL\\0\"\r\n+      VALUE \"Comments\",\"DLL support by Alessandro Iacopetti & Gilles Vollant\\0\"\r\n+      VALUE \"LegalCopyright\", \"(C) 1995-2013 Jean-loup Gailly & Mark Adler\\0\"\r\n+    END\r\n+  END\r\n+  BLOCK \"VarFileInfo\"\r\n+  BEGIN\r\n+    VALUE \"Translation\", 0x0409, 1252\r\n+  END\r\n+END\r"}, {"sha": "806b76a88b6337c9e0a2ca41ec92f290eb7775e6", "filename": "zlib/contrib/vstudio/vc11/zlibstat.vcxproj", "status": "added", "additions": 464, "deletions": 0, "changes": 464, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Fcontrib%2Fvstudio%2Fvc11%2Fzlibstat.vcxproj", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Fcontrib%2Fvstudio%2Fvc11%2Fzlibstat.vcxproj", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fvstudio%2Fvc11%2Fzlibstat.vcxproj?ref=cd9ec14217a566fa0ae12ccf34534cbb7680f5ab", "patch": "@@ -0,0 +1,464 @@\n+\ufeff<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n+<Project DefaultTargets=\"Build\" ToolsVersion=\"4.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\r\n+  <ItemGroup Label=\"ProjectConfigurations\">\r\n+    <ProjectConfiguration Include=\"Debug|Itanium\">\r\n+      <Configuration>Debug</Configuration>\r\n+      <Platform>Itanium</Platform>\r\n+    </ProjectConfiguration>\r\n+    <ProjectConfiguration Include=\"Debug|Win32\">\r\n+      <Configuration>Debug</Configuration>\r\n+      <Platform>Win32</Platform>\r\n+    </ProjectConfiguration>\r\n+    <ProjectConfiguration Include=\"Debug|x64\">\r\n+      <Configuration>Debug</Configuration>\r\n+      <Platform>x64</Platform>\r\n+    </ProjectConfiguration>\r\n+    <ProjectConfiguration Include=\"ReleaseWithoutAsm|Itanium\">\r\n+      <Configuration>ReleaseWithoutAsm</Configuration>\r\n+      <Platform>Itanium</Platform>\r\n+    </ProjectConfiguration>\r\n+    <ProjectConfiguration Include=\"ReleaseWithoutAsm|Win32\">\r\n+      <Configuration>ReleaseWithoutAsm</Configuration>\r\n+      <Platform>Win32</Platform>\r\n+    </ProjectConfiguration>\r\n+    <ProjectConfiguration Include=\"ReleaseWithoutAsm|x64\">\r\n+      <Configuration>ReleaseWithoutAsm</Configuration>\r\n+      <Platform>x64</Platform>\r\n+    </ProjectConfiguration>\r\n+    <ProjectConfiguration Include=\"Release|Itanium\">\r\n+      <Configuration>Release</Configuration>\r\n+      <Platform>Itanium</Platform>\r\n+    </ProjectConfiguration>\r\n+    <ProjectConfiguration Include=\"Release|Win32\">\r\n+      <Configuration>Release</Configuration>\r\n+      <Platform>Win32</Platform>\r\n+    </ProjectConfiguration>\r\n+    <ProjectConfiguration Include=\"Release|x64\">\r\n+      <Configuration>Release</Configuration>\r\n+      <Platform>x64</Platform>\r\n+    </ProjectConfiguration>\r\n+  </ItemGroup>\r\n+  <PropertyGroup Label=\"Globals\">\r\n+    <ProjectGuid>{745DEC58-EBB3-47A9-A9B8-4C6627C01BF8}</ProjectGuid>\r\n+  </PropertyGroup>\r\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.Default.props\" />\r\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Win32'\" Label=\"Configuration\">\r\n+    <ConfigurationType>StaticLibrary</ConfigurationType>\r\n+    <UseOfMfc>false</UseOfMfc>\r\n+    <PlatformToolset>v110</PlatformToolset>\r\n+  </PropertyGroup>\r\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" Label=\"Configuration\">\r\n+    <ConfigurationType>StaticLibrary</ConfigurationType>\r\n+    <UseOfMfc>false</UseOfMfc>\r\n+    <PlatformToolset>v110</PlatformToolset>\r\n+  </PropertyGroup>\r\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" Label=\"Configuration\">\r\n+    <ConfigurationType>StaticLibrary</ConfigurationType>\r\n+    <UseOfMfc>false</UseOfMfc>\r\n+    <PlatformToolset>v110</PlatformToolset>\r\n+    <CharacterSet>Unicode</CharacterSet>\r\n+  </PropertyGroup>\r\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Itanium'\" Label=\"Configuration\">\r\n+    <ConfigurationType>StaticLibrary</ConfigurationType>\r\n+    <UseOfMfc>false</UseOfMfc>\r\n+  </PropertyGroup>\r\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\" Label=\"Configuration\">\r\n+    <ConfigurationType>StaticLibrary</ConfigurationType>\r\n+    <UseOfMfc>false</UseOfMfc>\r\n+  </PropertyGroup>\r\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\" Label=\"Configuration\">\r\n+    <ConfigurationType>StaticLibrary</ConfigurationType>\r\n+    <UseOfMfc>false</UseOfMfc>\r\n+  </PropertyGroup>\r\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|x64'\" Label=\"Configuration\">\r\n+    <ConfigurationType>StaticLibrary</ConfigurationType>\r\n+    <UseOfMfc>false</UseOfMfc>\r\n+    <PlatformToolset>v110</PlatformToolset>\r\n+  </PropertyGroup>\r\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" Label=\"Configuration\">\r\n+    <ConfigurationType>StaticLibrary</ConfigurationType>\r\n+    <UseOfMfc>false</UseOfMfc>\r\n+    <PlatformToolset>v110</PlatformToolset>\r\n+  </PropertyGroup>\r\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" Label=\"Configuration\">\r\n+    <ConfigurationType>StaticLibrary</ConfigurationType>\r\n+    <UseOfMfc>false</UseOfMfc>\r\n+    <PlatformToolset>v110</PlatformToolset>\r\n+  </PropertyGroup>\r\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\r\n+  <ImportGroup Label=\"ExtensionSettings\">\r\n+  </ImportGroup>\r\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Win32'\" Label=\"PropertySheets\">\r\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\r\n+  </ImportGroup>\r\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" Label=\"PropertySheets\">\r\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\r\n+  </ImportGroup>\r\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" Label=\"PropertySheets\">\r\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\r\n+  </ImportGroup>\r\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Itanium'\" Label=\"PropertySheets\">\r\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\r\n+  </ImportGroup>\r\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\" Label=\"PropertySheets\">\r\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\r\n+  </ImportGroup>\r\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\" Label=\"PropertySheets\">\r\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\r\n+  </ImportGroup>\r\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|x64'\" Label=\"PropertySheets\">\r\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\r\n+  </ImportGroup>\r\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" Label=\"PropertySheets\">\r\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\r\n+  </ImportGroup>\r\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" Label=\"PropertySheets\">\r\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\r\n+  </ImportGroup>\r\n+  <PropertyGroup Label=\"UserMacros\" />\r\n+  <PropertyGroup>\r\n+    <_ProjectFileVersion>10.0.30128.1</_ProjectFileVersion>\r\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">x86\\ZlibStat$(Configuration)\\</OutDir>\r\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">x86\\ZlibStat$(Configuration)\\Tmp\\</IntDir>\r\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">x86\\ZlibStat$(Configuration)\\</OutDir>\r\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">x86\\ZlibStat$(Configuration)\\Tmp\\</IntDir>\r\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Win32'\">x86\\ZlibStat$(Configuration)\\</OutDir>\r\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Win32'\">x86\\ZlibStat$(Configuration)\\Tmp\\</IntDir>\r\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">x64\\ZlibStat$(Configuration)\\</OutDir>\r\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">x64\\ZlibStat$(Configuration)\\Tmp\\</IntDir>\r\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">ia64\\ZlibStat$(Configuration)\\</OutDir>\r\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">ia64\\ZlibStat$(Configuration)\\Tmp\\</IntDir>\r\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">x64\\ZlibStat$(Configuration)\\</OutDir>\r\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">x64\\ZlibStat$(Configuration)\\Tmp\\</IntDir>\r\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">ia64\\ZlibStat$(Configuration)\\</OutDir>\r\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">ia64\\ZlibStat$(Configuration)\\Tmp\\</IntDir>\r\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|x64'\">x64\\ZlibStat$(Configuration)\\</OutDir>\r\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|x64'\">x64\\ZlibStat$(Configuration)\\Tmp\\</IntDir>\r\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Itanium'\">ia64\\ZlibStat$(Configuration)\\</OutDir>\r\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Itanium'\">ia64\\ZlibStat$(Configuration)\\Tmp\\</IntDir>\r\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">AllRules.ruleset</CodeAnalysisRuleSet>\r\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\" />\r\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\" />\r\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">AllRules.ruleset</CodeAnalysisRuleSet>\r\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" />\r\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" />\r\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">AllRules.ruleset</CodeAnalysisRuleSet>\r\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" />\r\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" />\r\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Itanium'\">AllRules.ruleset</CodeAnalysisRuleSet>\r\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Itanium'\" />\r\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Itanium'\" />\r\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Win32'\">AllRules.ruleset</CodeAnalysisRuleSet>\r\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Win32'\" />\r\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Win32'\" />\r\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|x64'\">AllRules.ruleset</CodeAnalysisRuleSet>\r\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|x64'\" />\r\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|x64'\" />\r\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">AllRules.ruleset</CodeAnalysisRuleSet>\r\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\" />\r\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\" />\r\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">AllRules.ruleset</CodeAnalysisRuleSet>\r\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" />\r\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" />\r\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">AllRules.ruleset</CodeAnalysisRuleSet>\r\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" />\r\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" />\r\n+  </PropertyGroup>\r\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\r\n+    <ClCompile>\r\n+      <Optimization>Disabled</Optimization>\r\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\masmx86;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\r\n+      <PreprocessorDefinitions>WIN32;ZLIB_WINAPI;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <ExceptionHandling>\r\n+      </ExceptionHandling>\r\n+      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>\r\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\r\n+      <PrecompiledHeaderOutputFile>$(IntDir)zlibstat.pch</PrecompiledHeaderOutputFile>\r\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\r\n+      <ObjectFileName>$(IntDir)</ObjectFileName>\r\n+      <ProgramDataBaseFileName>$(OutDir)</ProgramDataBaseFileName>\r\n+      <WarningLevel>Level3</WarningLevel>\r\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\r\n+      <DebugInformationFormat>OldStyle</DebugInformationFormat>\r\n+    </ClCompile>\r\n+    <ResourceCompile>\r\n+      <Culture>0x040c</Culture>\r\n+    </ResourceCompile>\r\n+    <Lib>\r\n+      <AdditionalOptions>/MACHINE:X86 /NODEFAULTLIB %(AdditionalOptions)</AdditionalOptions>\r\n+      <OutputFile>$(OutDir)zlibstat.lib</OutputFile>\r\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\r\n+    </Lib>\r\n+  </ItemDefinitionGroup>\r\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\r\n+    <ClCompile>\r\n+      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>\r\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\masmx86;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\r\n+      <PreprocessorDefinitions>WIN32;ZLIB_WINAPI;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS;ASMV;ASMINF;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <StringPooling>true</StringPooling>\r\n+      <ExceptionHandling>\r\n+      </ExceptionHandling>\r\n+      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>\r\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\r\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\r\n+      <PrecompiledHeaderOutputFile>$(IntDir)zlibstat.pch</PrecompiledHeaderOutputFile>\r\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\r\n+      <ObjectFileName>$(IntDir)</ObjectFileName>\r\n+      <ProgramDataBaseFileName>$(OutDir)</ProgramDataBaseFileName>\r\n+      <WarningLevel>Level3</WarningLevel>\r\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\r\n+    </ClCompile>\r\n+    <ResourceCompile>\r\n+      <Culture>0x040c</Culture>\r\n+    </ResourceCompile>\r\n+    <Lib>\r\n+      <AdditionalOptions>/MACHINE:X86 /NODEFAULTLIB %(AdditionalOptions)</AdditionalOptions>\r\n+      <AdditionalDependencies>..\\..\\masmx86\\match686.obj;..\\..\\masmx86\\inffas32.obj;%(AdditionalDependencies)</AdditionalDependencies>\r\n+      <OutputFile>$(OutDir)zlibstat.lib</OutputFile>\r\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\r\n+    </Lib>\r\n+  </ItemDefinitionGroup>\r\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Win32'\">\r\n+    <ClCompile>\r\n+      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>\r\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\masmx86;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\r\n+      <PreprocessorDefinitions>WIN32;ZLIB_WINAPI;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <StringPooling>true</StringPooling>\r\n+      <ExceptionHandling>\r\n+      </ExceptionHandling>\r\n+      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>\r\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\r\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\r\n+      <PrecompiledHeaderOutputFile>$(IntDir)zlibstat.pch</PrecompiledHeaderOutputFile>\r\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\r\n+      <ObjectFileName>$(IntDir)</ObjectFileName>\r\n+      <ProgramDataBaseFileName>$(OutDir)</ProgramDataBaseFileName>\r\n+      <WarningLevel>Level3</WarningLevel>\r\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\r\n+    </ClCompile>\r\n+    <ResourceCompile>\r\n+      <Culture>0x040c</Culture>\r\n+    </ResourceCompile>\r\n+    <Lib>\r\n+      <AdditionalOptions>/MACHINE:X86 /NODEFAULTLIB %(AdditionalOptions)</AdditionalOptions>\r\n+      <OutputFile>$(OutDir)zlibstat.lib</OutputFile>\r\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\r\n+    </Lib>\r\n+  </ItemDefinitionGroup>\r\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\r\n+    <Midl>\r\n+      <TargetEnvironment>X64</TargetEnvironment>\r\n+    </Midl>\r\n+    <ClCompile>\r\n+      <Optimization>Disabled</Optimization>\r\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\masmx86;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\r\n+      <PreprocessorDefinitions>ZLIB_WINAPI;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS;WIN64;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <ExceptionHandling>\r\n+      </ExceptionHandling>\r\n+      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>\r\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\r\n+      <PrecompiledHeaderOutputFile>$(IntDir)zlibstat.pch</PrecompiledHeaderOutputFile>\r\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\r\n+      <ObjectFileName>$(IntDir)</ObjectFileName>\r\n+      <ProgramDataBaseFileName>$(OutDir)</ProgramDataBaseFileName>\r\n+      <WarningLevel>Level3</WarningLevel>\r\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\r\n+      <DebugInformationFormat>OldStyle</DebugInformationFormat>\r\n+    </ClCompile>\r\n+    <ResourceCompile>\r\n+      <Culture>0x040c</Culture>\r\n+    </ResourceCompile>\r\n+    <Lib>\r\n+      <AdditionalOptions>/MACHINE:AMD64 /NODEFAULTLIB %(AdditionalOptions)</AdditionalOptions>\r\n+      <OutputFile>$(OutDir)zlibstat.lib</OutputFile>\r\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\r\n+    </Lib>\r\n+  </ItemDefinitionGroup>\r\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">\r\n+    <Midl>\r\n+      <TargetEnvironment>Itanium</TargetEnvironment>\r\n+    </Midl>\r\n+    <ClCompile>\r\n+      <Optimization>Disabled</Optimization>\r\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\masmx86;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\r\n+      <PreprocessorDefinitions>ZLIB_WINAPI;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS;WIN64;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <ExceptionHandling>\r\n+      </ExceptionHandling>\r\n+      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>\r\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\r\n+      <PrecompiledHeaderOutputFile>$(IntDir)zlibstat.pch</PrecompiledHeaderOutputFile>\r\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\r\n+      <ObjectFileName>$(IntDir)</ObjectFileName>\r\n+      <ProgramDataBaseFileName>$(OutDir)</ProgramDataBaseFileName>\r\n+      <WarningLevel>Level3</WarningLevel>\r\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\r\n+      <DebugInformationFormat>OldStyle</DebugInformationFormat>\r\n+    </ClCompile>\r\n+    <ResourceCompile>\r\n+      <Culture>0x040c</Culture>\r\n+    </ResourceCompile>\r\n+    <Lib>\r\n+      <AdditionalOptions>/MACHINE:IA64 /NODEFAULTLIB %(AdditionalOptions)</AdditionalOptions>\r\n+      <OutputFile>$(OutDir)zlibstat.lib</OutputFile>\r\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\r\n+    </Lib>\r\n+  </ItemDefinitionGroup>\r\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\r\n+    <Midl>\r\n+      <TargetEnvironment>X64</TargetEnvironment>\r\n+    </Midl>\r\n+    <ClCompile>\r\n+      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>\r\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\masmx86;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\r\n+      <PreprocessorDefinitions>ZLIB_WINAPI;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS;ASMV;ASMINF;WIN64;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <StringPooling>true</StringPooling>\r\n+      <ExceptionHandling>\r\n+      </ExceptionHandling>\r\n+      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>\r\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\r\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\r\n+      <PrecompiledHeaderOutputFile>$(IntDir)zlibstat.pch</PrecompiledHeaderOutputFile>\r\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\r\n+      <ObjectFileName>$(IntDir)</ObjectFileName>\r\n+      <ProgramDataBaseFileName>$(OutDir)</ProgramDataBaseFileName>\r\n+      <WarningLevel>Level3</WarningLevel>\r\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\r\n+    </ClCompile>\r\n+    <ResourceCompile>\r\n+      <Culture>0x040c</Culture>\r\n+    </ResourceCompile>\r\n+    <Lib>\r\n+      <AdditionalOptions>/MACHINE:AMD64 /NODEFAULTLIB %(AdditionalOptions)</AdditionalOptions>\r\n+      <AdditionalDependencies>..\\..\\masmx64\\gvmat64.obj;..\\..\\masmx64\\inffasx64.obj;%(AdditionalDependencies)</AdditionalDependencies>\r\n+      <OutputFile>$(OutDir)zlibstat.lib</OutputFile>\r\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\r\n+    </Lib>\r\n+  </ItemDefinitionGroup>\r\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">\r\n+    <Midl>\r\n+      <TargetEnvironment>Itanium</TargetEnvironment>\r\n+    </Midl>\r\n+    <ClCompile>\r\n+      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>\r\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\masmx86;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\r\n+      <PreprocessorDefinitions>ZLIB_WINAPI;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS;WIN64;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <StringPooling>true</StringPooling>\r\n+      <ExceptionHandling>\r\n+      </ExceptionHandling>\r\n+      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>\r\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\r\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\r\n+      <PrecompiledHeaderOutputFile>$(IntDir)zlibstat.pch</PrecompiledHeaderOutputFile>\r\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\r\n+      <ObjectFileName>$(IntDir)</ObjectFileName>\r\n+      <ProgramDataBaseFileName>$(OutDir)</ProgramDataBaseFileName>\r\n+      <WarningLevel>Level3</WarningLevel>\r\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\r\n+    </ClCompile>\r\n+    <ResourceCompile>\r\n+      <Culture>0x040c</Culture>\r\n+    </ResourceCompile>\r\n+    <Lib>\r\n+      <AdditionalOptions>/MACHINE:IA64 /NODEFAULTLIB %(AdditionalOptions)</AdditionalOptions>\r\n+      <OutputFile>$(OutDir)zlibstat.lib</OutputFile>\r\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\r\n+    </Lib>\r\n+  </ItemDefinitionGroup>\r\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|x64'\">\r\n+    <Midl>\r\n+      <TargetEnvironment>X64</TargetEnvironment>\r\n+    </Midl>\r\n+    <ClCompile>\r\n+      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>\r\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\masmx86;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\r\n+      <PreprocessorDefinitions>ZLIB_WINAPI;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS;WIN64;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <StringPooling>true</StringPooling>\r\n+      <ExceptionHandling>\r\n+      </ExceptionHandling>\r\n+      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>\r\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\r\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\r\n+      <PrecompiledHeaderOutputFile>$(IntDir)zlibstat.pch</PrecompiledHeaderOutputFile>\r\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\r\n+      <ObjectFileName>$(IntDir)</ObjectFileName>\r\n+      <ProgramDataBaseFileName>$(OutDir)</ProgramDataBaseFileName>\r\n+      <WarningLevel>Level3</WarningLevel>\r\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\r\n+    </ClCompile>\r\n+    <ResourceCompile>\r\n+      <Culture>0x040c</Culture>\r\n+    </ResourceCompile>\r\n+    <Lib>\r\n+      <AdditionalOptions>/MACHINE:AMD64 /NODEFAULTLIB %(AdditionalOptions)</AdditionalOptions>\r\n+      <OutputFile>$(OutDir)zlibstat.lib</OutputFile>\r\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\r\n+    </Lib>\r\n+  </ItemDefinitionGroup>\r\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Itanium'\">\r\n+    <Midl>\r\n+      <TargetEnvironment>Itanium</TargetEnvironment>\r\n+    </Midl>\r\n+    <ClCompile>\r\n+      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>\r\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\masmx86;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\r\n+      <PreprocessorDefinitions>ZLIB_WINAPI;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS;WIN64;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <StringPooling>true</StringPooling>\r\n+      <ExceptionHandling>\r\n+      </ExceptionHandling>\r\n+      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>\r\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\r\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\r\n+      <PrecompiledHeaderOutputFile>$(IntDir)zlibstat.pch</PrecompiledHeaderOutputFile>\r\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\r\n+      <ObjectFileName>$(IntDir)</ObjectFileName>\r\n+      <ProgramDataBaseFileName>$(OutDir)</ProgramDataBaseFileName>\r\n+      <WarningLevel>Level3</WarningLevel>\r\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\r\n+    </ClCompile>\r\n+    <ResourceCompile>\r\n+      <Culture>0x040c</Culture>\r\n+    </ResourceCompile>\r\n+    <Lib>\r\n+      <AdditionalOptions>/MACHINE:IA64 /NODEFAULTLIB %(AdditionalOptions)</AdditionalOptions>\r\n+      <OutputFile>$(OutDir)zlibstat.lib</OutputFile>\r\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\r\n+    </Lib>\r\n+  </ItemDefinitionGroup>\r\n+  <ItemGroup>\r\n+    <ClCompile Include=\"..\\..\\..\\adler32.c\" />\r\n+    <ClCompile Include=\"..\\..\\..\\compress.c\" />\r\n+    <ClCompile Include=\"..\\..\\..\\crc32.c\" />\r\n+    <ClCompile Include=\"..\\..\\..\\deflate.c\" />\r\n+    <ClCompile Include=\"..\\..\\..\\gzclose.c\" />\r\n+    <ClCompile Include=\"..\\..\\..\\gzlib.c\" />\r\n+    <ClCompile Include=\"..\\..\\..\\gzread.c\" />\r\n+    <ClCompile Include=\"..\\..\\..\\gzwrite.c\" />\r\n+    <ClCompile Include=\"..\\..\\..\\infback.c\" />\r\n+    <ClCompile Include=\"..\\..\\masmx64\\inffas8664.c\">\r\n+      <ExcludedFromBuild Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">true</ExcludedFromBuild>\r\n+      <ExcludedFromBuild Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">true</ExcludedFromBuild>\r\n+      <ExcludedFromBuild Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Itanium'\">true</ExcludedFromBuild>\r\n+      <ExcludedFromBuild Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Win32'\">true</ExcludedFromBuild>\r\n+      <ExcludedFromBuild Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">true</ExcludedFromBuild>\r\n+      <ExcludedFromBuild Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">true</ExcludedFromBuild>\r\n+    </ClCompile>\r\n+    <ClCompile Include=\"..\\..\\..\\inffast.c\" />\r\n+    <ClCompile Include=\"..\\..\\..\\inflate.c\" />\r\n+    <ClCompile Include=\"..\\..\\..\\inftrees.c\" />\r\n+    <ClCompile Include=\"..\\..\\minizip\\ioapi.c\" />\r\n+    <ClCompile Include=\"..\\..\\..\\trees.c\" />\r\n+    <ClCompile Include=\"..\\..\\..\\uncompr.c\" />\r\n+    <ClCompile Include=\"..\\..\\minizip\\unzip.c\" />\r\n+    <ClCompile Include=\"..\\..\\minizip\\zip.c\" />\r\n+    <ClCompile Include=\"..\\..\\..\\zutil.c\" />\r\n+  </ItemGroup>\r\n+  <ItemGroup>\r\n+    <ResourceCompile Include=\"zlib.rc\" />\r\n+  </ItemGroup>\r\n+  <ItemGroup>\r\n+    <None Include=\"zlibvc.def\" />\r\n+  </ItemGroup>\r\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\r\n+  <ImportGroup Label=\"ExtensionTargets\">\r\n+  </ImportGroup>\r\n+</Project>\n\\ No newline at end of file"}, {"sha": "63670467220c7268cb3eb153a109b1caa3bc7672", "filename": "zlib/contrib/vstudio/vc11/zlibvc.def", "status": "added", "additions": 143, "deletions": 0, "changes": 143, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Fcontrib%2Fvstudio%2Fvc11%2Fzlibvc.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Fcontrib%2Fvstudio%2Fvc11%2Fzlibvc.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fvstudio%2Fvc11%2Fzlibvc.def?ref=cd9ec14217a566fa0ae12ccf34534cbb7680f5ab", "patch": "@@ -0,0 +1,143 @@\n+LIBRARY\r\n+; zlib data compression and ZIP file I/O library\r\n+\r\n+VERSION\t\t1.2.8\r\n+\r\n+EXPORTS\r\n+        adler32                                  @1\r\n+        compress                                 @2\r\n+        crc32                                    @3\r\n+        deflate                                  @4\r\n+        deflateCopy                              @5\r\n+        deflateEnd                               @6\r\n+        deflateInit2_                            @7\r\n+        deflateInit_                             @8\r\n+        deflateParams                            @9\r\n+        deflateReset                             @10\r\n+        deflateSetDictionary                     @11\r\n+        gzclose                                  @12\r\n+        gzdopen                                  @13\r\n+        gzerror                                  @14\r\n+        gzflush                                  @15\r\n+        gzopen                                   @16\r\n+        gzread                                   @17\r\n+        gzwrite                                  @18\r\n+        inflate                                  @19\r\n+        inflateEnd                               @20\r\n+        inflateInit2_                            @21\r\n+        inflateInit_                             @22\r\n+        inflateReset                             @23\r\n+        inflateSetDictionary                     @24\r\n+        inflateSync                              @25\r\n+        uncompress                               @26\r\n+        zlibVersion                              @27\r\n+        gzprintf                                 @28\r\n+        gzputc                                   @29\r\n+        gzgetc                                   @30\r\n+        gzseek                                   @31\r\n+        gzrewind                                 @32\r\n+        gztell                                   @33\r\n+        gzeof                                    @34\r\n+        gzsetparams                              @35\r\n+        zError                                   @36\r\n+        inflateSyncPoint                         @37\r\n+        get_crc_table                            @38\r\n+        compress2                                @39\r\n+        gzputs                                   @40\r\n+        gzgets                                   @41\r\n+        inflateCopy                              @42\r\n+        inflateBackInit_                         @43\r\n+        inflateBack                              @44\r\n+        inflateBackEnd                           @45\r\n+        compressBound                            @46\r\n+        deflateBound                             @47\r\n+        gzclearerr                               @48\r\n+        gzungetc                                 @49\r\n+        zlibCompileFlags                         @50\r\n+        deflatePrime                             @51\r\n+        deflatePending                           @52\r\n+\r\n+        unzOpen                                  @61\r\n+        unzClose                                 @62\r\n+        unzGetGlobalInfo                         @63\r\n+        unzGetCurrentFileInfo                    @64\r\n+        unzGoToFirstFile                         @65\r\n+        unzGoToNextFile                          @66\r\n+        unzOpenCurrentFile                       @67\r\n+        unzReadCurrentFile                       @68\r\n+        unzOpenCurrentFile3                      @69\r\n+        unztell                                  @70\r\n+        unzeof                                   @71\r\n+        unzCloseCurrentFile                      @72\r\n+        unzGetGlobalComment                      @73\r\n+        unzStringFileNameCompare                 @74\r\n+        unzLocateFile                            @75\r\n+        unzGetLocalExtrafield                    @76\r\n+        unzOpen2                                 @77\r\n+        unzOpenCurrentFile2                      @78\r\n+        unzOpenCurrentFilePassword               @79\r\n+\r\n+        zipOpen                                  @80\r\n+        zipOpenNewFileInZip                      @81\r\n+        zipWriteInFileInZip                      @82\r\n+        zipCloseFileInZip                        @83\r\n+        zipClose                                 @84\r\n+        zipOpenNewFileInZip2                     @86\r\n+        zipCloseFileInZipRaw                     @87\r\n+        zipOpen2                                 @88\r\n+        zipOpenNewFileInZip3                     @89\r\n+\r\n+        unzGetFilePos                            @100\r\n+        unzGoToFilePos                           @101\r\n+\r\n+        fill_win32_filefunc                      @110\r\n+\r\n+; zlibwapi v1.2.4 added:\r\n+        fill_win32_filefunc64                   @111\r\n+        fill_win32_filefunc64A                  @112\r\n+        fill_win32_filefunc64W                  @113\r\n+\r\n+        unzOpen64                               @120\r\n+        unzOpen2_64                             @121\r\n+        unzGetGlobalInfo64                      @122\r\n+        unzGetCurrentFileInfo64                 @124\r\n+        unzGetCurrentFileZStreamPos64           @125\r\n+        unztell64                               @126\r\n+        unzGetFilePos64                         @127\r\n+        unzGoToFilePos64                        @128\r\n+\r\n+        zipOpen64                               @130\r\n+        zipOpen2_64                             @131\r\n+        zipOpenNewFileInZip64                   @132\r\n+        zipOpenNewFileInZip2_64                 @133\r\n+        zipOpenNewFileInZip3_64                 @134\r\n+        zipOpenNewFileInZip4_64                 @135\r\n+        zipCloseFileInZipRaw64                  @136\r\n+\r\n+; zlib1 v1.2.4 added:\r\n+        adler32_combine                         @140\r\n+        crc32_combine                           @142\r\n+        deflateSetHeader                        @144\r\n+        deflateTune                             @145\r\n+        gzbuffer                                @146\r\n+        gzclose_r                               @147\r\n+        gzclose_w                               @148\r\n+        gzdirect                                @149\r\n+        gzoffset                                @150\r\n+        inflateGetHeader                        @156\r\n+        inflateMark                             @157\r\n+        inflatePrime                            @158\r\n+        inflateReset2                           @159\r\n+        inflateUndermine                        @160\r\n+\r\n+; zlib1 v1.2.6 added:\r\n+        gzgetc_                                 @161\r\n+        inflateResetKeep                        @163\r\n+        deflateResetKeep                        @164\r\n+\r\n+; zlib1 v1.2.7 added:\r\n+        gzopen_w                                @165\r\n+\r\n+; zlib1 v1.2.8 added:\r\n+        inflateGetDictionary                    @166\r\n+        gzvprintf                               @167\r"}, {"sha": "9fcbafdd02cbddc94602902183fc98e305a1ec47", "filename": "zlib/contrib/vstudio/vc11/zlibvc.sln", "status": "added", "additions": 117, "deletions": 0, "changes": 117, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Fcontrib%2Fvstudio%2Fvc11%2Fzlibvc.sln", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Fcontrib%2Fvstudio%2Fvc11%2Fzlibvc.sln", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fvstudio%2Fvc11%2Fzlibvc.sln?ref=cd9ec14217a566fa0ae12ccf34534cbb7680f5ab", "patch": "@@ -0,0 +1,117 @@\n+\ufeff\r\n+Microsoft Visual Studio Solution File, Format Version 12.00\r\n+# Visual Studio 2012\r\n+Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"zlibvc\", \"zlibvc.vcxproj\", \"{8FD826F8-3739-44E6-8CC8-997122E53B8D}\"\r\n+EndProject\r\n+Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"zlibstat\", \"zlibstat.vcxproj\", \"{745DEC58-EBB3-47A9-A9B8-4C6627C01BF8}\"\r\n+EndProject\r\n+Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"testzlib\", \"testzlib.vcxproj\", \"{AA6666AA-E09F-4135-9C0C-4FE50C3C654B}\"\r\n+EndProject\r\n+Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"testzlibdll\", \"testzlibdll.vcxproj\", \"{C52F9E7B-498A-42BE-8DB4-85A15694366A}\"\r\n+EndProject\r\n+Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"minizip\", \"minizip.vcxproj\", \"{48CDD9DC-E09F-4135-9C0C-4FE50C3C654B}\"\r\n+EndProject\r\n+Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"miniunz\", \"miniunz.vcxproj\", \"{C52F9E7B-498A-42BE-8DB4-85A15694382A}\"\r\n+EndProject\r\n+Global\r\n+\tGlobalSection(SolutionConfigurationPlatforms) = preSolution\r\n+\t\tDebug|Itanium = Debug|Itanium\r\n+\t\tDebug|Win32 = Debug|Win32\r\n+\t\tDebug|x64 = Debug|x64\r\n+\t\tRelease|Itanium = Release|Itanium\r\n+\t\tRelease|Win32 = Release|Win32\r\n+\t\tRelease|x64 = Release|x64\r\n+\t\tReleaseWithoutAsm|Itanium = ReleaseWithoutAsm|Itanium\r\n+\t\tReleaseWithoutAsm|Win32 = ReleaseWithoutAsm|Win32\r\n+\t\tReleaseWithoutAsm|x64 = ReleaseWithoutAsm|x64\r\n+\tEndGlobalSection\r\n+\tGlobalSection(ProjectConfigurationPlatforms) = postSolution\r\n+\t\t{8FD826F8-3739-44E6-8CC8-997122E53B8D}.Debug|Itanium.ActiveCfg = Debug|Win32\r\n+\t\t{8FD826F8-3739-44E6-8CC8-997122E53B8D}.Debug|Win32.ActiveCfg = Debug|Win32\r\n+\t\t{8FD826F8-3739-44E6-8CC8-997122E53B8D}.Debug|Win32.Build.0 = Debug|Win32\r\n+\t\t{8FD826F8-3739-44E6-8CC8-997122E53B8D}.Debug|x64.ActiveCfg = Debug|x64\r\n+\t\t{8FD826F8-3739-44E6-8CC8-997122E53B8D}.Debug|x64.Build.0 = Debug|x64\r\n+\t\t{8FD826F8-3739-44E6-8CC8-997122E53B8D}.Release|Itanium.ActiveCfg = Release|Win32\r\n+\t\t{8FD826F8-3739-44E6-8CC8-997122E53B8D}.Release|Win32.ActiveCfg = Release|Win32\r\n+\t\t{8FD826F8-3739-44E6-8CC8-997122E53B8D}.Release|Win32.Build.0 = Release|Win32\r\n+\t\t{8FD826F8-3739-44E6-8CC8-997122E53B8D}.Release|x64.ActiveCfg = Release|x64\r\n+\t\t{8FD826F8-3739-44E6-8CC8-997122E53B8D}.Release|x64.Build.0 = Release|x64\r\n+\t\t{8FD826F8-3739-44E6-8CC8-997122E53B8D}.ReleaseWithoutAsm|Itanium.ActiveCfg = ReleaseWithoutAsm|Win32\r\n+\t\t{8FD826F8-3739-44E6-8CC8-997122E53B8D}.ReleaseWithoutAsm|Win32.ActiveCfg = ReleaseWithoutAsm|Win32\r\n+\t\t{8FD826F8-3739-44E6-8CC8-997122E53B8D}.ReleaseWithoutAsm|Win32.Build.0 = ReleaseWithoutAsm|Win32\r\n+\t\t{8FD826F8-3739-44E6-8CC8-997122E53B8D}.ReleaseWithoutAsm|x64.ActiveCfg = ReleaseWithoutAsm|x64\r\n+\t\t{8FD826F8-3739-44E6-8CC8-997122E53B8D}.ReleaseWithoutAsm|x64.Build.0 = ReleaseWithoutAsm|x64\r\n+\t\t{745DEC58-EBB3-47A9-A9B8-4C6627C01BF8}.Debug|Itanium.ActiveCfg = Debug|Win32\r\n+\t\t{745DEC58-EBB3-47A9-A9B8-4C6627C01BF8}.Debug|Win32.ActiveCfg = Debug|Win32\r\n+\t\t{745DEC58-EBB3-47A9-A9B8-4C6627C01BF8}.Debug|Win32.Build.0 = Debug|Win32\r\n+\t\t{745DEC58-EBB3-47A9-A9B8-4C6627C01BF8}.Debug|x64.ActiveCfg = Debug|x64\r\n+\t\t{745DEC58-EBB3-47A9-A9B8-4C6627C01BF8}.Debug|x64.Build.0 = Debug|x64\r\n+\t\t{745DEC58-EBB3-47A9-A9B8-4C6627C01BF8}.Release|Itanium.ActiveCfg = Release|Win32\r\n+\t\t{745DEC58-EBB3-47A9-A9B8-4C6627C01BF8}.Release|Win32.ActiveCfg = Release|Win32\r\n+\t\t{745DEC58-EBB3-47A9-A9B8-4C6627C01BF8}.Release|Win32.Build.0 = Release|Win32\r\n+\t\t{745DEC58-EBB3-47A9-A9B8-4C6627C01BF8}.Release|x64.ActiveCfg = Release|x64\r\n+\t\t{745DEC58-EBB3-47A9-A9B8-4C6627C01BF8}.Release|x64.Build.0 = Release|x64\r\n+\t\t{745DEC58-EBB3-47A9-A9B8-4C6627C01BF8}.ReleaseWithoutAsm|Itanium.ActiveCfg = ReleaseWithoutAsm|Win32\r\n+\t\t{745DEC58-EBB3-47A9-A9B8-4C6627C01BF8}.ReleaseWithoutAsm|Win32.ActiveCfg = ReleaseWithoutAsm|Win32\r\n+\t\t{745DEC58-EBB3-47A9-A9B8-4C6627C01BF8}.ReleaseWithoutAsm|Win32.Build.0 = ReleaseWithoutAsm|Win32\r\n+\t\t{745DEC58-EBB3-47A9-A9B8-4C6627C01BF8}.ReleaseWithoutAsm|x64.ActiveCfg = ReleaseWithoutAsm|x64\r\n+\t\t{745DEC58-EBB3-47A9-A9B8-4C6627C01BF8}.ReleaseWithoutAsm|x64.Build.0 = ReleaseWithoutAsm|x64\r\n+\t\t{AA6666AA-E09F-4135-9C0C-4FE50C3C654B}.Debug|Itanium.ActiveCfg = Debug|Win32\r\n+\t\t{AA6666AA-E09F-4135-9C0C-4FE50C3C654B}.Debug|Win32.ActiveCfg = Debug|Win32\r\n+\t\t{AA6666AA-E09F-4135-9C0C-4FE50C3C654B}.Debug|Win32.Build.0 = Debug|Win32\r\n+\t\t{AA6666AA-E09F-4135-9C0C-4FE50C3C654B}.Debug|x64.ActiveCfg = Debug|x64\r\n+\t\t{AA6666AA-E09F-4135-9C0C-4FE50C3C654B}.Debug|x64.Build.0 = Debug|x64\r\n+\t\t{AA6666AA-E09F-4135-9C0C-4FE50C3C654B}.Release|Itanium.ActiveCfg = Release|Win32\r\n+\t\t{AA6666AA-E09F-4135-9C0C-4FE50C3C654B}.Release|Win32.ActiveCfg = Release|Win32\r\n+\t\t{AA6666AA-E09F-4135-9C0C-4FE50C3C654B}.Release|Win32.Build.0 = Release|Win32\r\n+\t\t{AA6666AA-E09F-4135-9C0C-4FE50C3C654B}.Release|x64.ActiveCfg = Release|x64\r\n+\t\t{AA6666AA-E09F-4135-9C0C-4FE50C3C654B}.Release|x64.Build.0 = Release|x64\r\n+\t\t{AA6666AA-E09F-4135-9C0C-4FE50C3C654B}.ReleaseWithoutAsm|Itanium.ActiveCfg = ReleaseWithoutAsm|Win32\r\n+\t\t{AA6666AA-E09F-4135-9C0C-4FE50C3C654B}.ReleaseWithoutAsm|Win32.ActiveCfg = ReleaseWithoutAsm|Win32\r\n+\t\t{AA6666AA-E09F-4135-9C0C-4FE50C3C654B}.ReleaseWithoutAsm|Win32.Build.0 = ReleaseWithoutAsm|Win32\r\n+\t\t{AA6666AA-E09F-4135-9C0C-4FE50C3C654B}.ReleaseWithoutAsm|x64.ActiveCfg = ReleaseWithoutAsm|x64\r\n+\t\t{AA6666AA-E09F-4135-9C0C-4FE50C3C654B}.ReleaseWithoutAsm|x64.Build.0 = ReleaseWithoutAsm|x64\r\n+\t\t{C52F9E7B-498A-42BE-8DB4-85A15694366A}.Debug|Itanium.ActiveCfg = Debug|Win32\r\n+\t\t{C52F9E7B-498A-42BE-8DB4-85A15694366A}.Debug|Win32.ActiveCfg = Debug|Win32\r\n+\t\t{C52F9E7B-498A-42BE-8DB4-85A15694366A}.Debug|Win32.Build.0 = Debug|Win32\r\n+\t\t{C52F9E7B-498A-42BE-8DB4-85A15694366A}.Debug|x64.ActiveCfg = Debug|x64\r\n+\t\t{C52F9E7B-498A-42BE-8DB4-85A15694366A}.Debug|x64.Build.0 = Debug|x64\r\n+\t\t{C52F9E7B-498A-42BE-8DB4-85A15694366A}.Release|Itanium.ActiveCfg = Release|Win32\r\n+\t\t{C52F9E7B-498A-42BE-8DB4-85A15694366A}.Release|Win32.ActiveCfg = Release|Win32\r\n+\t\t{C52F9E7B-498A-42BE-8DB4-85A15694366A}.Release|Win32.Build.0 = Release|Win32\r\n+\t\t{C52F9E7B-498A-42BE-8DB4-85A15694366A}.Release|x64.ActiveCfg = Release|x64\r\n+\t\t{C52F9E7B-498A-42BE-8DB4-85A15694366A}.Release|x64.Build.0 = Release|x64\r\n+\t\t{C52F9E7B-498A-42BE-8DB4-85A15694366A}.ReleaseWithoutAsm|Itanium.ActiveCfg = Release|Win32\r\n+\t\t{C52F9E7B-498A-42BE-8DB4-85A15694366A}.ReleaseWithoutAsm|Win32.ActiveCfg = Release|Win32\r\n+\t\t{C52F9E7B-498A-42BE-8DB4-85A15694366A}.ReleaseWithoutAsm|x64.ActiveCfg = Release|x64\r\n+\t\t{48CDD9DC-E09F-4135-9C0C-4FE50C3C654B}.Debug|Itanium.ActiveCfg = Debug|Win32\r\n+\t\t{48CDD9DC-E09F-4135-9C0C-4FE50C3C654B}.Debug|Win32.ActiveCfg = Debug|Win32\r\n+\t\t{48CDD9DC-E09F-4135-9C0C-4FE50C3C654B}.Debug|Win32.Build.0 = Debug|Win32\r\n+\t\t{48CDD9DC-E09F-4135-9C0C-4FE50C3C654B}.Debug|x64.ActiveCfg = Debug|x64\r\n+\t\t{48CDD9DC-E09F-4135-9C0C-4FE50C3C654B}.Debug|x64.Build.0 = Debug|x64\r\n+\t\t{48CDD9DC-E09F-4135-9C0C-4FE50C3C654B}.Release|Itanium.ActiveCfg = Release|Win32\r\n+\t\t{48CDD9DC-E09F-4135-9C0C-4FE50C3C654B}.Release|Win32.ActiveCfg = Release|Win32\r\n+\t\t{48CDD9DC-E09F-4135-9C0C-4FE50C3C654B}.Release|Win32.Build.0 = Release|Win32\r\n+\t\t{48CDD9DC-E09F-4135-9C0C-4FE50C3C654B}.Release|x64.ActiveCfg = Release|x64\r\n+\t\t{48CDD9DC-E09F-4135-9C0C-4FE50C3C654B}.Release|x64.Build.0 = Release|x64\r\n+\t\t{48CDD9DC-E09F-4135-9C0C-4FE50C3C654B}.ReleaseWithoutAsm|Itanium.ActiveCfg = Release|Win32\r\n+\t\t{48CDD9DC-E09F-4135-9C0C-4FE50C3C654B}.ReleaseWithoutAsm|Win32.ActiveCfg = Release|Win32\r\n+\t\t{48CDD9DC-E09F-4135-9C0C-4FE50C3C654B}.ReleaseWithoutAsm|x64.ActiveCfg = Release|x64\r\n+\t\t{C52F9E7B-498A-42BE-8DB4-85A15694382A}.Debug|Itanium.ActiveCfg = Debug|Win32\r\n+\t\t{C52F9E7B-498A-42BE-8DB4-85A15694382A}.Debug|Win32.ActiveCfg = Debug|Win32\r\n+\t\t{C52F9E7B-498A-42BE-8DB4-85A15694382A}.Debug|Win32.Build.0 = Debug|Win32\r\n+\t\t{C52F9E7B-498A-42BE-8DB4-85A15694382A}.Debug|x64.ActiveCfg = Debug|x64\r\n+\t\t{C52F9E7B-498A-42BE-8DB4-85A15694382A}.Debug|x64.Build.0 = Debug|x64\r\n+\t\t{C52F9E7B-498A-42BE-8DB4-85A15694382A}.Release|Itanium.ActiveCfg = Release|Win32\r\n+\t\t{C52F9E7B-498A-42BE-8DB4-85A15694382A}.Release|Win32.ActiveCfg = Release|Win32\r\n+\t\t{C52F9E7B-498A-42BE-8DB4-85A15694382A}.Release|Win32.Build.0 = Release|Win32\r\n+\t\t{C52F9E7B-498A-42BE-8DB4-85A15694382A}.Release|x64.ActiveCfg = Release|x64\r\n+\t\t{C52F9E7B-498A-42BE-8DB4-85A15694382A}.Release|x64.Build.0 = Release|x64\r\n+\t\t{C52F9E7B-498A-42BE-8DB4-85A15694382A}.ReleaseWithoutAsm|Itanium.ActiveCfg = Release|Win32\r\n+\t\t{C52F9E7B-498A-42BE-8DB4-85A15694382A}.ReleaseWithoutAsm|Win32.ActiveCfg = Release|Win32\r\n+\t\t{C52F9E7B-498A-42BE-8DB4-85A15694382A}.ReleaseWithoutAsm|x64.ActiveCfg = Release|x64\r\n+\tEndGlobalSection\r\n+\tGlobalSection(SolutionProperties) = preSolution\r\n+\t\tHideSolutionNode = FALSE\r\n+\tEndGlobalSection\r\n+EndGlobal\r"}, {"sha": "c65b95fdbb5cdaf7f280f73b692dd894a0eef293", "filename": "zlib/contrib/vstudio/vc11/zlibvc.vcxproj", "status": "added", "additions": 688, "deletions": 0, "changes": 688, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Fcontrib%2Fvstudio%2Fvc11%2Fzlibvc.vcxproj", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Fcontrib%2Fvstudio%2Fvc11%2Fzlibvc.vcxproj", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fvstudio%2Fvc11%2Fzlibvc.vcxproj?ref=cd9ec14217a566fa0ae12ccf34534cbb7680f5ab", "patch": "@@ -0,0 +1,688 @@\n+\ufeff<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n+<Project DefaultTargets=\"Build\" ToolsVersion=\"4.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\r\n+  <ItemGroup Label=\"ProjectConfigurations\">\r\n+    <ProjectConfiguration Include=\"Debug|Itanium\">\r\n+      <Configuration>Debug</Configuration>\r\n+      <Platform>Itanium</Platform>\r\n+    </ProjectConfiguration>\r\n+    <ProjectConfiguration Include=\"Debug|Win32\">\r\n+      <Configuration>Debug</Configuration>\r\n+      <Platform>Win32</Platform>\r\n+    </ProjectConfiguration>\r\n+    <ProjectConfiguration Include=\"Debug|x64\">\r\n+      <Configuration>Debug</Configuration>\r\n+      <Platform>x64</Platform>\r\n+    </ProjectConfiguration>\r\n+    <ProjectConfiguration Include=\"ReleaseWithoutAsm|Itanium\">\r\n+      <Configuration>ReleaseWithoutAsm</Configuration>\r\n+      <Platform>Itanium</Platform>\r\n+    </ProjectConfiguration>\r\n+    <ProjectConfiguration Include=\"ReleaseWithoutAsm|Win32\">\r\n+      <Configuration>ReleaseWithoutAsm</Configuration>\r\n+      <Platform>Win32</Platform>\r\n+    </ProjectConfiguration>\r\n+    <ProjectConfiguration Include=\"ReleaseWithoutAsm|x64\">\r\n+      <Configuration>ReleaseWithoutAsm</Configuration>\r\n+      <Platform>x64</Platform>\r\n+    </ProjectConfiguration>\r\n+    <ProjectConfiguration Include=\"Release|Itanium\">\r\n+      <Configuration>Release</Configuration>\r\n+      <Platform>Itanium</Platform>\r\n+    </ProjectConfiguration>\r\n+    <ProjectConfiguration Include=\"Release|Win32\">\r\n+      <Configuration>Release</Configuration>\r\n+      <Platform>Win32</Platform>\r\n+    </ProjectConfiguration>\r\n+    <ProjectConfiguration Include=\"Release|x64\">\r\n+      <Configuration>Release</Configuration>\r\n+      <Platform>x64</Platform>\r\n+    </ProjectConfiguration>\r\n+  </ItemGroup>\r\n+  <PropertyGroup Label=\"Globals\">\r\n+    <ProjectGuid>{8FD826F8-3739-44E6-8CC8-997122E53B8D}</ProjectGuid>\r\n+  </PropertyGroup>\r\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.Default.props\" />\r\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" Label=\"Configuration\">\r\n+    <ConfigurationType>DynamicLibrary</ConfigurationType>\r\n+    <UseOfMfc>false</UseOfMfc>\r\n+    <WholeProgramOptimization>true</WholeProgramOptimization>\r\n+    <PlatformToolset>v110</PlatformToolset>\r\n+  </PropertyGroup>\r\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Win32'\" Label=\"Configuration\">\r\n+    <ConfigurationType>DynamicLibrary</ConfigurationType>\r\n+    <UseOfMfc>false</UseOfMfc>\r\n+    <WholeProgramOptimization>true</WholeProgramOptimization>\r\n+    <PlatformToolset>v110</PlatformToolset>\r\n+  </PropertyGroup>\r\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" Label=\"Configuration\">\r\n+    <ConfigurationType>DynamicLibrary</ConfigurationType>\r\n+    <UseOfMfc>false</UseOfMfc>\r\n+    <PlatformToolset>v110</PlatformToolset>\r\n+    <CharacterSet>Unicode</CharacterSet>\r\n+  </PropertyGroup>\r\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\" Label=\"Configuration\">\r\n+    <ConfigurationType>DynamicLibrary</ConfigurationType>\r\n+    <UseOfMfc>false</UseOfMfc>\r\n+    <WholeProgramOptimization>true</WholeProgramOptimization>\r\n+  </PropertyGroup>\r\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Itanium'\" Label=\"Configuration\">\r\n+    <ConfigurationType>DynamicLibrary</ConfigurationType>\r\n+    <UseOfMfc>false</UseOfMfc>\r\n+    <WholeProgramOptimization>true</WholeProgramOptimization>\r\n+  </PropertyGroup>\r\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\" Label=\"Configuration\">\r\n+    <ConfigurationType>DynamicLibrary</ConfigurationType>\r\n+    <UseOfMfc>false</UseOfMfc>\r\n+  </PropertyGroup>\r\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" Label=\"Configuration\">\r\n+    <ConfigurationType>DynamicLibrary</ConfigurationType>\r\n+    <UseOfMfc>false</UseOfMfc>\r\n+    <WholeProgramOptimization>true</WholeProgramOptimization>\r\n+    <PlatformToolset>v110</PlatformToolset>\r\n+  </PropertyGroup>\r\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|x64'\" Label=\"Configuration\">\r\n+    <ConfigurationType>DynamicLibrary</ConfigurationType>\r\n+    <UseOfMfc>false</UseOfMfc>\r\n+    <WholeProgramOptimization>true</WholeProgramOptimization>\r\n+    <PlatformToolset>v110</PlatformToolset>\r\n+  </PropertyGroup>\r\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" Label=\"Configuration\">\r\n+    <ConfigurationType>DynamicLibrary</ConfigurationType>\r\n+    <UseOfMfc>false</UseOfMfc>\r\n+    <PlatformToolset>v110</PlatformToolset>\r\n+  </PropertyGroup>\r\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\r\n+  <ImportGroup Label=\"ExtensionSettings\">\r\n+  </ImportGroup>\r\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" Label=\"PropertySheets\">\r\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\r\n+  </ImportGroup>\r\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Win32'\" Label=\"PropertySheets\">\r\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\r\n+  </ImportGroup>\r\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" Label=\"PropertySheets\">\r\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\r\n+  </ImportGroup>\r\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\" Label=\"PropertySheets\">\r\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\r\n+  </ImportGroup>\r\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Itanium'\" Label=\"PropertySheets\">\r\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\r\n+  </ImportGroup>\r\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\" Label=\"PropertySheets\">\r\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\r\n+  </ImportGroup>\r\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" Label=\"PropertySheets\">\r\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\r\n+  </ImportGroup>\r\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|x64'\" Label=\"PropertySheets\">\r\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\r\n+  </ImportGroup>\r\n+  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" Label=\"PropertySheets\">\r\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\r\n+  </ImportGroup>\r\n+  <PropertyGroup Label=\"UserMacros\" />\r\n+  <PropertyGroup>\r\n+    <_ProjectFileVersion>10.0.30128.1</_ProjectFileVersion>\r\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">x86\\ZlibDll$(Configuration)\\</OutDir>\r\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">x86\\ZlibDll$(Configuration)\\Tmp\\</IntDir>\r\n+    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">true</LinkIncremental>\r\n+    <GenerateManifest Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">false</GenerateManifest>\r\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Win32'\">x86\\ZlibDll$(Configuration)\\</OutDir>\r\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Win32'\">x86\\ZlibDll$(Configuration)\\Tmp\\</IntDir>\r\n+    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Win32'\">false</LinkIncremental>\r\n+    <GenerateManifest Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Win32'\">false</GenerateManifest>\r\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">x86\\ZlibDll$(Configuration)\\</OutDir>\r\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">x86\\ZlibDll$(Configuration)\\Tmp\\</IntDir>\r\n+    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">false</LinkIncremental>\r\n+    <GenerateManifest Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">false</GenerateManifest>\r\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">x64\\ZlibDll$(Configuration)\\</OutDir>\r\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">x64\\ZlibDll$(Configuration)\\Tmp\\</IntDir>\r\n+    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">true</LinkIncremental>\r\n+    <GenerateManifest Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">false</GenerateManifest>\r\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">ia64\\ZlibDll$(Configuration)\\</OutDir>\r\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">ia64\\ZlibDll$(Configuration)\\Tmp\\</IntDir>\r\n+    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">true</LinkIncremental>\r\n+    <GenerateManifest Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">false</GenerateManifest>\r\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|x64'\">x64\\ZlibDll$(Configuration)\\</OutDir>\r\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|x64'\">x64\\ZlibDll$(Configuration)\\Tmp\\</IntDir>\r\n+    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|x64'\">false</LinkIncremental>\r\n+    <GenerateManifest Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|x64'\">false</GenerateManifest>\r\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Itanium'\">ia64\\ZlibDll$(Configuration)\\</OutDir>\r\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Itanium'\">ia64\\ZlibDll$(Configuration)\\Tmp\\</IntDir>\r\n+    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Itanium'\">false</LinkIncremental>\r\n+    <GenerateManifest Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Itanium'\">false</GenerateManifest>\r\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">x64\\ZlibDll$(Configuration)\\</OutDir>\r\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">x64\\ZlibDll$(Configuration)\\Tmp\\</IntDir>\r\n+    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">false</LinkIncremental>\r\n+    <GenerateManifest Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">false</GenerateManifest>\r\n+    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">ia64\\ZlibDll$(Configuration)\\</OutDir>\r\n+    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">ia64\\ZlibDll$(Configuration)\\Tmp\\</IntDir>\r\n+    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">false</LinkIncremental>\r\n+    <GenerateManifest Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">false</GenerateManifest>\r\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">AllRules.ruleset</CodeAnalysisRuleSet>\r\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\" />\r\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\" />\r\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">AllRules.ruleset</CodeAnalysisRuleSet>\r\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" />\r\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" />\r\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">AllRules.ruleset</CodeAnalysisRuleSet>\r\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" />\r\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" />\r\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Itanium'\">AllRules.ruleset</CodeAnalysisRuleSet>\r\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Itanium'\" />\r\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Itanium'\" />\r\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Win32'\">AllRules.ruleset</CodeAnalysisRuleSet>\r\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Win32'\" />\r\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Win32'\" />\r\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|x64'\">AllRules.ruleset</CodeAnalysisRuleSet>\r\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|x64'\" />\r\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|x64'\" />\r\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">AllRules.ruleset</CodeAnalysisRuleSet>\r\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\" />\r\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\" />\r\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">AllRules.ruleset</CodeAnalysisRuleSet>\r\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" />\r\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" />\r\n+    <CodeAnalysisRuleSet Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">AllRules.ruleset</CodeAnalysisRuleSet>\r\n+    <CodeAnalysisRules Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" />\r\n+    <CodeAnalysisRuleAssemblies Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" />\r\n+    <TargetName Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">zlibwapi</TargetName>\r\n+    <TargetName Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Win32'\">zlibwapi</TargetName>\r\n+    <TargetName Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">zlibwapi</TargetName>\r\n+    <TargetName Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">zlibwapi</TargetName>\r\n+    <TargetName Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|x64'\">zlibwapi</TargetName>\r\n+    <TargetName Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">zlibwapi</TargetName>\r\n+  </PropertyGroup>\r\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\r\n+    <Midl>\r\n+      <PreprocessorDefinitions>_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <MkTypLibCompatible>true</MkTypLibCompatible>\r\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\r\n+      <TargetEnvironment>Win32</TargetEnvironment>\r\n+      <TypeLibraryName>$(OutDir)zlibvc.tlb</TypeLibraryName>\r\n+    </Midl>\r\n+    <ClCompile>\r\n+      <Optimization>Disabled</Optimization>\r\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\masmx86;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\r\n+      <PreprocessorDefinitions>WIN32;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS;ZLIB_WINAPI;ASMV;ASMINF;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <ExceptionHandling>\r\n+      </ExceptionHandling>\r\n+      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>\r\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\r\n+      <PrecompiledHeaderOutputFile>$(IntDir)zlibvc.pch</PrecompiledHeaderOutputFile>\r\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\r\n+      <ObjectFileName>$(IntDir)</ObjectFileName>\r\n+      <ProgramDataBaseFileName>$(OutDir)</ProgramDataBaseFileName>\r\n+      <BrowseInformation>\r\n+      </BrowseInformation>\r\n+      <WarningLevel>Level3</WarningLevel>\r\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\r\n+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\r\n+    </ClCompile>\r\n+    <ResourceCompile>\r\n+      <PreprocessorDefinitions>_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <Culture>0x040c</Culture>\r\n+    </ResourceCompile>\r\n+    <Link>\r\n+      <AdditionalOptions>/MACHINE:I386 %(AdditionalOptions)</AdditionalOptions>\r\n+      <AdditionalDependencies>..\\..\\masmx86\\match686.obj;..\\..\\masmx86\\inffas32.obj;%(AdditionalDependencies)</AdditionalDependencies>\r\n+      <OutputFile>$(OutDir)zlibwapi.dll</OutputFile>\r\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\r\n+      <ModuleDefinitionFile>.\\zlibvc.def</ModuleDefinitionFile>\r\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\r\n+      <ProgramDatabaseFile>$(OutDir)zlibwapi.pdb</ProgramDatabaseFile>\r\n+      <GenerateMapFile>true</GenerateMapFile>\r\n+      <MapFileName>$(OutDir)zlibwapi.map</MapFileName>\r\n+      <SubSystem>Windows</SubSystem>\r\n+      <RandomizedBaseAddress>false</RandomizedBaseAddress>\r\n+      <DataExecutionPrevention>\r\n+      </DataExecutionPrevention>\r\n+      <ImportLibrary>$(OutDir)zlibwapi.lib</ImportLibrary>\r\n+    </Link>\r\n+    <PreBuildEvent>\r\n+      <Command>cd ..\\..\\masmx86\r\n+bld_ml32.bat</Command>\r\n+    </PreBuildEvent>\r\n+  </ItemDefinitionGroup>\r\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Win32'\">\r\n+    <Midl>\r\n+      <PreprocessorDefinitions>NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <MkTypLibCompatible>true</MkTypLibCompatible>\r\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\r\n+      <TargetEnvironment>Win32</TargetEnvironment>\r\n+      <TypeLibraryName>$(OutDir)zlibvc.tlb</TypeLibraryName>\r\n+    </Midl>\r\n+    <ClCompile>\r\n+      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>\r\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\masmx86;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\r\n+      <PreprocessorDefinitions>WIN32;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS;ZLIB_WINAPI;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <StringPooling>true</StringPooling>\r\n+      <ExceptionHandling>\r\n+      </ExceptionHandling>\r\n+      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>\r\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\r\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\r\n+      <PrecompiledHeaderOutputFile>$(IntDir)zlibvc.pch</PrecompiledHeaderOutputFile>\r\n+      <AssemblerOutput>All</AssemblerOutput>\r\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\r\n+      <ObjectFileName>$(IntDir)</ObjectFileName>\r\n+      <ProgramDataBaseFileName>$(OutDir)</ProgramDataBaseFileName>\r\n+      <BrowseInformation>\r\n+      </BrowseInformation>\r\n+      <WarningLevel>Level3</WarningLevel>\r\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\r\n+    </ClCompile>\r\n+    <ResourceCompile>\r\n+      <PreprocessorDefinitions>NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <Culture>0x040c</Culture>\r\n+    </ResourceCompile>\r\n+    <Link>\r\n+      <AdditionalOptions>/MACHINE:I386 %(AdditionalOptions)</AdditionalOptions>\r\n+      <OutputFile>$(OutDir)zlibwapi.dll</OutputFile>\r\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\r\n+      <IgnoreAllDefaultLibraries>false</IgnoreAllDefaultLibraries>\r\n+      <ModuleDefinitionFile>.\\zlibvc.def</ModuleDefinitionFile>\r\n+      <ProgramDatabaseFile>$(OutDir)zlibwapi.pdb</ProgramDatabaseFile>\r\n+      <GenerateMapFile>true</GenerateMapFile>\r\n+      <MapFileName>$(OutDir)zlibwapi.map</MapFileName>\r\n+      <SubSystem>Windows</SubSystem>\r\n+      <RandomizedBaseAddress>false</RandomizedBaseAddress>\r\n+      <DataExecutionPrevention>\r\n+      </DataExecutionPrevention>\r\n+      <ImportLibrary>$(OutDir)zlibwapi.lib</ImportLibrary>\r\n+    </Link>\r\n+  </ItemDefinitionGroup>\r\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\r\n+    <Midl>\r\n+      <PreprocessorDefinitions>NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <MkTypLibCompatible>true</MkTypLibCompatible>\r\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\r\n+      <TargetEnvironment>Win32</TargetEnvironment>\r\n+      <TypeLibraryName>$(OutDir)zlibvc.tlb</TypeLibraryName>\r\n+    </Midl>\r\n+    <ClCompile>\r\n+      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>\r\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\masmx86;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\r\n+      <PreprocessorDefinitions>WIN32;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS;ZLIB_WINAPI;ASMV;ASMINF;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <StringPooling>true</StringPooling>\r\n+      <ExceptionHandling>\r\n+      </ExceptionHandling>\r\n+      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>\r\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\r\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\r\n+      <PrecompiledHeaderOutputFile>$(IntDir)zlibvc.pch</PrecompiledHeaderOutputFile>\r\n+      <AssemblerOutput>All</AssemblerOutput>\r\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\r\n+      <ObjectFileName>$(IntDir)</ObjectFileName>\r\n+      <ProgramDataBaseFileName>$(OutDir)</ProgramDataBaseFileName>\r\n+      <BrowseInformation>\r\n+      </BrowseInformation>\r\n+      <WarningLevel>Level3</WarningLevel>\r\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\r\n+    </ClCompile>\r\n+    <ResourceCompile>\r\n+      <PreprocessorDefinitions>NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <Culture>0x040c</Culture>\r\n+    </ResourceCompile>\r\n+    <Link>\r\n+      <AdditionalOptions>/MACHINE:I386 %(AdditionalOptions)</AdditionalOptions>\r\n+      <AdditionalDependencies>..\\..\\masmx86\\match686.obj;..\\..\\masmx86\\inffas32.obj;%(AdditionalDependencies)</AdditionalDependencies>\r\n+      <OutputFile>$(OutDir)zlibwapi.dll</OutputFile>\r\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\r\n+      <IgnoreAllDefaultLibraries>false</IgnoreAllDefaultLibraries>\r\n+      <ModuleDefinitionFile>.\\zlibvc.def</ModuleDefinitionFile>\r\n+      <ProgramDatabaseFile>$(OutDir)zlibwapi.pdb</ProgramDatabaseFile>\r\n+      <GenerateMapFile>true</GenerateMapFile>\r\n+      <MapFileName>$(OutDir)zlibwapi.map</MapFileName>\r\n+      <SubSystem>Windows</SubSystem>\r\n+      <RandomizedBaseAddress>false</RandomizedBaseAddress>\r\n+      <DataExecutionPrevention>\r\n+      </DataExecutionPrevention>\r\n+      <ImportLibrary>$(OutDir)zlibwapi.lib</ImportLibrary>\r\n+    </Link>\r\n+    <PreBuildEvent>\r\n+      <Command>cd ..\\..\\masmx86\r\n+bld_ml32.bat</Command>\r\n+    </PreBuildEvent>\r\n+  </ItemDefinitionGroup>\r\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\r\n+    <Midl>\r\n+      <PreprocessorDefinitions>_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <MkTypLibCompatible>true</MkTypLibCompatible>\r\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\r\n+      <TargetEnvironment>X64</TargetEnvironment>\r\n+      <TypeLibraryName>$(OutDir)zlibvc.tlb</TypeLibraryName>\r\n+    </Midl>\r\n+    <ClCompile>\r\n+      <Optimization>Disabled</Optimization>\r\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\masmx86;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\r\n+      <PreprocessorDefinitions>WIN32;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS;ZLIB_WINAPI;ASMV;ASMINF;WIN64;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <ExceptionHandling>\r\n+      </ExceptionHandling>\r\n+      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>\r\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\r\n+      <PrecompiledHeaderOutputFile>$(IntDir)zlibvc.pch</PrecompiledHeaderOutputFile>\r\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\r\n+      <ObjectFileName>$(IntDir)</ObjectFileName>\r\n+      <ProgramDataBaseFileName>$(OutDir)</ProgramDataBaseFileName>\r\n+      <BrowseInformation>\r\n+      </BrowseInformation>\r\n+      <WarningLevel>Level3</WarningLevel>\r\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\r\n+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\r\n+    </ClCompile>\r\n+    <ResourceCompile>\r\n+      <PreprocessorDefinitions>_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <Culture>0x040c</Culture>\r\n+    </ResourceCompile>\r\n+    <Link>\r\n+      <AdditionalDependencies>..\\..\\masmx64\\gvmat64.obj;..\\..\\masmx64\\inffasx64.obj;%(AdditionalDependencies)</AdditionalDependencies>\r\n+      <OutputFile>$(OutDir)zlibwapi.dll</OutputFile>\r\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\r\n+      <ModuleDefinitionFile>.\\zlibvc.def</ModuleDefinitionFile>\r\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\r\n+      <ProgramDatabaseFile>$(OutDir)zlibwapi.pdb</ProgramDatabaseFile>\r\n+      <GenerateMapFile>true</GenerateMapFile>\r\n+      <MapFileName>$(OutDir)zlibwapi.map</MapFileName>\r\n+      <SubSystem>Windows</SubSystem>\r\n+      <ImportLibrary>$(OutDir)zlibwapi.lib</ImportLibrary>\r\n+      <TargetMachine>MachineX64</TargetMachine>\r\n+    </Link>\r\n+    <PreBuildEvent>\r\n+      <Command>cd ..\\..\\contrib\\masmx64\r\n+bld_ml64.bat</Command>\r\n+    </PreBuildEvent>\r\n+  </ItemDefinitionGroup>\r\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">\r\n+    <Midl>\r\n+      <PreprocessorDefinitions>_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <MkTypLibCompatible>true</MkTypLibCompatible>\r\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\r\n+      <TargetEnvironment>Itanium</TargetEnvironment>\r\n+      <TypeLibraryName>$(OutDir)zlibvc.tlb</TypeLibraryName>\r\n+    </Midl>\r\n+    <ClCompile>\r\n+      <Optimization>Disabled</Optimization>\r\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\masmx86;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\r\n+      <PreprocessorDefinitions>WIN32;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS;ZLIB_WINAPI;WIN64;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <ExceptionHandling>\r\n+      </ExceptionHandling>\r\n+      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>\r\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\r\n+      <PrecompiledHeaderOutputFile>$(IntDir)zlibvc.pch</PrecompiledHeaderOutputFile>\r\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\r\n+      <ObjectFileName>$(IntDir)</ObjectFileName>\r\n+      <ProgramDataBaseFileName>$(OutDir)</ProgramDataBaseFileName>\r\n+      <BrowseInformation>\r\n+      </BrowseInformation>\r\n+      <WarningLevel>Level3</WarningLevel>\r\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\r\n+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\r\n+    </ClCompile>\r\n+    <ResourceCompile>\r\n+      <PreprocessorDefinitions>_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <Culture>0x040c</Culture>\r\n+    </ResourceCompile>\r\n+    <Link>\r\n+      <OutputFile>$(OutDir)zlibwapi.dll</OutputFile>\r\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\r\n+      <ModuleDefinitionFile>.\\zlibvc.def</ModuleDefinitionFile>\r\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\r\n+      <ProgramDatabaseFile>$(OutDir)zlibwapi.pdb</ProgramDatabaseFile>\r\n+      <GenerateMapFile>true</GenerateMapFile>\r\n+      <MapFileName>$(OutDir)zlibwapi.map</MapFileName>\r\n+      <SubSystem>Windows</SubSystem>\r\n+      <ImportLibrary>$(OutDir)zlibwapi.lib</ImportLibrary>\r\n+      <TargetMachine>MachineIA64</TargetMachine>\r\n+    </Link>\r\n+  </ItemDefinitionGroup>\r\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|x64'\">\r\n+    <Midl>\r\n+      <PreprocessorDefinitions>NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <MkTypLibCompatible>true</MkTypLibCompatible>\r\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\r\n+      <TargetEnvironment>X64</TargetEnvironment>\r\n+      <TypeLibraryName>$(OutDir)zlibvc.tlb</TypeLibraryName>\r\n+    </Midl>\r\n+    <ClCompile>\r\n+      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>\r\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\masmx86;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\r\n+      <PreprocessorDefinitions>WIN32;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS;ZLIB_WINAPI;WIN64;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <StringPooling>true</StringPooling>\r\n+      <ExceptionHandling>\r\n+      </ExceptionHandling>\r\n+      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>\r\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\r\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\r\n+      <PrecompiledHeaderOutputFile>$(IntDir)zlibvc.pch</PrecompiledHeaderOutputFile>\r\n+      <AssemblerOutput>All</AssemblerOutput>\r\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\r\n+      <ObjectFileName>$(IntDir)</ObjectFileName>\r\n+      <ProgramDataBaseFileName>$(OutDir)</ProgramDataBaseFileName>\r\n+      <BrowseInformation>\r\n+      </BrowseInformation>\r\n+      <WarningLevel>Level3</WarningLevel>\r\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\r\n+    </ClCompile>\r\n+    <ResourceCompile>\r\n+      <PreprocessorDefinitions>NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <Culture>0x040c</Culture>\r\n+    </ResourceCompile>\r\n+    <Link>\r\n+      <OutputFile>$(OutDir)zlibwapi.dll</OutputFile>\r\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\r\n+      <IgnoreAllDefaultLibraries>false</IgnoreAllDefaultLibraries>\r\n+      <ModuleDefinitionFile>.\\zlibvc.def</ModuleDefinitionFile>\r\n+      <ProgramDatabaseFile>$(OutDir)zlibwapi.pdb</ProgramDatabaseFile>\r\n+      <GenerateMapFile>true</GenerateMapFile>\r\n+      <MapFileName>$(OutDir)zlibwapi.map</MapFileName>\r\n+      <SubSystem>Windows</SubSystem>\r\n+      <ImportLibrary>$(OutDir)zlibwapi.lib</ImportLibrary>\r\n+      <TargetMachine>MachineX64</TargetMachine>\r\n+    </Link>\r\n+  </ItemDefinitionGroup>\r\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Itanium'\">\r\n+    <Midl>\r\n+      <PreprocessorDefinitions>NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <MkTypLibCompatible>true</MkTypLibCompatible>\r\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\r\n+      <TargetEnvironment>Itanium</TargetEnvironment>\r\n+      <TypeLibraryName>$(OutDir)zlibvc.tlb</TypeLibraryName>\r\n+    </Midl>\r\n+    <ClCompile>\r\n+      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>\r\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\masmx86;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\r\n+      <PreprocessorDefinitions>WIN32;_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS;ZLIB_WINAPI;WIN64;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <StringPooling>true</StringPooling>\r\n+      <ExceptionHandling>\r\n+      </ExceptionHandling>\r\n+      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>\r\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\r\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\r\n+      <PrecompiledHeaderOutputFile>$(IntDir)zlibvc.pch</PrecompiledHeaderOutputFile>\r\n+      <AssemblerOutput>All</AssemblerOutput>\r\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\r\n+      <ObjectFileName>$(IntDir)</ObjectFileName>\r\n+      <ProgramDataBaseFileName>$(OutDir)</ProgramDataBaseFileName>\r\n+      <BrowseInformation>\r\n+      </BrowseInformation>\r\n+      <WarningLevel>Level3</WarningLevel>\r\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\r\n+    </ClCompile>\r\n+    <ResourceCompile>\r\n+      <PreprocessorDefinitions>NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <Culture>0x040c</Culture>\r\n+    </ResourceCompile>\r\n+    <Link>\r\n+      <OutputFile>$(OutDir)zlibwapi.dll</OutputFile>\r\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\r\n+      <IgnoreAllDefaultLibraries>false</IgnoreAllDefaultLibraries>\r\n+      <ModuleDefinitionFile>.\\zlibvc.def</ModuleDefinitionFile>\r\n+      <ProgramDatabaseFile>$(OutDir)zlibwapi.pdb</ProgramDatabaseFile>\r\n+      <GenerateMapFile>true</GenerateMapFile>\r\n+      <MapFileName>$(OutDir)zlibwapi.map</MapFileName>\r\n+      <SubSystem>Windows</SubSystem>\r\n+      <ImportLibrary>$(OutDir)zlibwapi.lib</ImportLibrary>\r\n+      <TargetMachine>MachineIA64</TargetMachine>\r\n+    </Link>\r\n+  </ItemDefinitionGroup>\r\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\r\n+    <Midl>\r\n+      <PreprocessorDefinitions>NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <MkTypLibCompatible>true</MkTypLibCompatible>\r\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\r\n+      <TargetEnvironment>X64</TargetEnvironment>\r\n+      <TypeLibraryName>$(OutDir)zlibvc.tlb</TypeLibraryName>\r\n+    </Midl>\r\n+    <ClCompile>\r\n+      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>\r\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\masmx86;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\r\n+      <PreprocessorDefinitions>_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS;ZLIB_WINAPI;ASMV;ASMINF;WIN64;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <StringPooling>true</StringPooling>\r\n+      <ExceptionHandling>\r\n+      </ExceptionHandling>\r\n+      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>\r\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\r\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\r\n+      <PrecompiledHeaderOutputFile>$(IntDir)zlibvc.pch</PrecompiledHeaderOutputFile>\r\n+      <AssemblerOutput>All</AssemblerOutput>\r\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\r\n+      <ObjectFileName>$(IntDir)</ObjectFileName>\r\n+      <ProgramDataBaseFileName>$(OutDir)</ProgramDataBaseFileName>\r\n+      <BrowseInformation>\r\n+      </BrowseInformation>\r\n+      <WarningLevel>Level3</WarningLevel>\r\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\r\n+    </ClCompile>\r\n+    <ResourceCompile>\r\n+      <PreprocessorDefinitions>NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <Culture>0x040c</Culture>\r\n+    </ResourceCompile>\r\n+    <Link>\r\n+      <AdditionalDependencies>..\\..\\masmx64\\gvmat64.obj;..\\..\\masmx64\\inffasx64.obj;%(AdditionalDependencies)</AdditionalDependencies>\r\n+      <OutputFile>$(OutDir)zlibwapi.dll</OutputFile>\r\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\r\n+      <IgnoreAllDefaultLibraries>false</IgnoreAllDefaultLibraries>\r\n+      <ModuleDefinitionFile>.\\zlibvc.def</ModuleDefinitionFile>\r\n+      <ProgramDatabaseFile>$(OutDir)zlibwapi.pdb</ProgramDatabaseFile>\r\n+      <GenerateMapFile>true</GenerateMapFile>\r\n+      <MapFileName>$(OutDir)zlibwapi.map</MapFileName>\r\n+      <SubSystem>Windows</SubSystem>\r\n+      <ImportLibrary>$(OutDir)zlibwapi.lib</ImportLibrary>\r\n+      <TargetMachine>MachineX64</TargetMachine>\r\n+    </Link>\r\n+    <PreBuildEvent>\r\n+      <Command>cd ..\\..\\masmx64\r\n+bld_ml64.bat</Command>\r\n+    </PreBuildEvent>\r\n+  </ItemDefinitionGroup>\r\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">\r\n+    <Midl>\r\n+      <PreprocessorDefinitions>NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <MkTypLibCompatible>true</MkTypLibCompatible>\r\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\r\n+      <TargetEnvironment>Itanium</TargetEnvironment>\r\n+      <TypeLibraryName>$(OutDir)zlibvc.tlb</TypeLibraryName>\r\n+    </Midl>\r\n+    <ClCompile>\r\n+      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>\r\n+      <AdditionalIncludeDirectories>..\\..\\..;..\\..\\masmx86;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\r\n+      <PreprocessorDefinitions>_CRT_NONSTDC_NO_DEPRECATE;_CRT_SECURE_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS;ZLIB_WINAPI;WIN64;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <StringPooling>true</StringPooling>\r\n+      <ExceptionHandling>\r\n+      </ExceptionHandling>\r\n+      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>\r\n+      <BufferSecurityCheck>false</BufferSecurityCheck>\r\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\r\n+      <PrecompiledHeaderOutputFile>$(IntDir)zlibvc.pch</PrecompiledHeaderOutputFile>\r\n+      <AssemblerOutput>All</AssemblerOutput>\r\n+      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>\r\n+      <ObjectFileName>$(IntDir)</ObjectFileName>\r\n+      <ProgramDataBaseFileName>$(OutDir)</ProgramDataBaseFileName>\r\n+      <BrowseInformation>\r\n+      </BrowseInformation>\r\n+      <WarningLevel>Level3</WarningLevel>\r\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\r\n+    </ClCompile>\r\n+    <ResourceCompile>\r\n+      <PreprocessorDefinitions>NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <Culture>0x040c</Culture>\r\n+    </ResourceCompile>\r\n+    <Link>\r\n+      <OutputFile>$(OutDir)zlibwapi.dll</OutputFile>\r\n+      <SuppressStartupBanner>true</SuppressStartupBanner>\r\n+      <IgnoreAllDefaultLibraries>false</IgnoreAllDefaultLibraries>\r\n+      <ModuleDefinitionFile>.\\zlibvc.def</ModuleDefinitionFile>\r\n+      <ProgramDatabaseFile>$(OutDir)zlibwapi.pdb</ProgramDatabaseFile>\r\n+      <GenerateMapFile>true</GenerateMapFile>\r\n+      <MapFileName>$(OutDir)zlibwapi.map</MapFileName>\r\n+      <SubSystem>Windows</SubSystem>\r\n+      <ImportLibrary>$(OutDir)zlibwapi.lib</ImportLibrary>\r\n+      <TargetMachine>MachineIA64</TargetMachine>\r\n+    </Link>\r\n+  </ItemDefinitionGroup>\r\n+  <ItemGroup>\r\n+    <ClCompile Include=\"..\\..\\..\\adler32.c\" />\r\n+    <ClCompile Include=\"..\\..\\..\\compress.c\" />\r\n+    <ClCompile Include=\"..\\..\\..\\crc32.c\" />\r\n+    <ClCompile Include=\"..\\..\\..\\deflate.c\" />\r\n+    <ClCompile Include=\"..\\..\\..\\gzclose.c\" />\r\n+    <ClCompile Include=\"..\\..\\..\\gzlib.c\" />\r\n+    <ClCompile Include=\"..\\..\\..\\gzread.c\" />\r\n+    <ClCompile Include=\"..\\..\\..\\gzwrite.c\" />\r\n+    <ClCompile Include=\"..\\..\\..\\infback.c\" />\r\n+    <ClCompile Include=\"..\\..\\masmx64\\inffas8664.c\">\r\n+      <ExcludedFromBuild Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">true</ExcludedFromBuild>\r\n+      <ExcludedFromBuild Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">true</ExcludedFromBuild>\r\n+      <ExcludedFromBuild Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Itanium'\">true</ExcludedFromBuild>\r\n+      <ExcludedFromBuild Condition=\"'$(Configuration)|$(Platform)'=='ReleaseWithoutAsm|Win32'\">true</ExcludedFromBuild>\r\n+      <ExcludedFromBuild Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">true</ExcludedFromBuild>\r\n+      <ExcludedFromBuild Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">true</ExcludedFromBuild>\r\n+    </ClCompile>\r\n+    <ClCompile Include=\"..\\..\\..\\inffast.c\" />\r\n+    <ClCompile Include=\"..\\..\\..\\inflate.c\" />\r\n+    <ClCompile Include=\"..\\..\\..\\inftrees.c\" />\r\n+    <ClCompile Include=\"..\\..\\minizip\\ioapi.c\" />\r\n+    <ClCompile Include=\"..\\..\\minizip\\iowin32.c\" />\r\n+    <ClCompile Include=\"..\\..\\..\\trees.c\" />\r\n+    <ClCompile Include=\"..\\..\\..\\uncompr.c\" />\r\n+    <ClCompile Include=\"..\\..\\minizip\\unzip.c\">\r\n+      <AdditionalIncludeDirectories Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\r\n+      <PreprocessorDefinitions Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">ZLIB_INTERNAL;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <AdditionalIncludeDirectories Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\r\n+      <PreprocessorDefinitions Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">ZLIB_INTERNAL;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <AdditionalIncludeDirectories Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\r\n+      <PreprocessorDefinitions Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">ZLIB_INTERNAL;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+    </ClCompile>\r\n+    <ClCompile Include=\"..\\..\\minizip\\zip.c\">\r\n+      <AdditionalIncludeDirectories Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\r\n+      <PreprocessorDefinitions Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">ZLIB_INTERNAL;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <AdditionalIncludeDirectories Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\r\n+      <PreprocessorDefinitions Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">ZLIB_INTERNAL;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <AdditionalIncludeDirectories Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\r\n+      <PreprocessorDefinitions Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">ZLIB_INTERNAL;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+    </ClCompile>\r\n+    <ClCompile Include=\"..\\..\\..\\zutil.c\" />\r\n+  </ItemGroup>\r\n+  <ItemGroup>\r\n+    <ResourceCompile Include=\"zlib.rc\" />\r\n+  </ItemGroup>\r\n+  <ItemGroup>\r\n+    <None Include=\"zlibvc.def\" />\r\n+  </ItemGroup>\r\n+  <ItemGroup>\r\n+    <ClInclude Include=\"..\\..\\..\\deflate.h\" />\r\n+    <ClInclude Include=\"..\\..\\..\\infblock.h\" />\r\n+    <ClInclude Include=\"..\\..\\..\\infcodes.h\" />\r\n+    <ClInclude Include=\"..\\..\\..\\inffast.h\" />\r\n+    <ClInclude Include=\"..\\..\\..\\inftrees.h\" />\r\n+    <ClInclude Include=\"..\\..\\..\\infutil.h\" />\r\n+    <ClInclude Include=\"..\\..\\..\\zconf.h\" />\r\n+    <ClInclude Include=\"..\\..\\..\\zlib.h\" />\r\n+    <ClInclude Include=\"..\\..\\..\\zutil.h\" />\r\n+  </ItemGroup>\r\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\r\n+  <ImportGroup Label=\"ExtensionTargets\">\r\n+  </ImportGroup>\r\n+</Project>\n\\ No newline at end of file"}, {"sha": "73f6476d6051d049e7b807217817ff6f51b2a302", "filename": "zlib/contrib/vstudio/vc9/zlib.rc", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Fcontrib%2Fvstudio%2Fvc9%2Fzlib.rc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Fcontrib%2Fvstudio%2Fvc9%2Fzlib.rc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fvstudio%2Fvc9%2Fzlib.rc?ref=cd9ec14217a566fa0ae12ccf34534cbb7680f5ab", "patch": "@@ -2,8 +2,8 @@\n \r\n #define IDR_VERSION1  1\r\n IDR_VERSION1\tVERSIONINFO\tMOVEABLE IMPURE LOADONCALL DISCARDABLE\r\n-  FILEVERSION\t 1.2.7,0\r\n-  PRODUCTVERSION 1.2.7,0\r\n+  FILEVERSION\t 1,2,8,0\r\n+  PRODUCTVERSION 1,2,8,0\r\n   FILEFLAGSMASK\tVS_FFI_FILEFLAGSMASK\r\n   FILEFLAGS\t0\r\n   FILEOS\tVOS_DOS_WINDOWS32\r\n@@ -17,12 +17,12 @@ BEGIN\n \r\n     BEGIN\r\n       VALUE \"FileDescription\", \"zlib data compression and ZIP file I/O library\\0\"\r\n-      VALUE \"FileVersion\",\t\"1.2.7\\0\"\r\n+      VALUE \"FileVersion\",\t\"1.2.8\\0\"\r\n       VALUE \"InternalName\",\t\"zlib\\0\"\r\n-      VALUE \"OriginalFilename\",\t\"zlib.dll\\0\"\r\n+      VALUE \"OriginalFilename\",\t\"zlibwapi.dll\\0\"\r\n       VALUE \"ProductName\",\t\"ZLib.DLL\\0\"\r\n       VALUE \"Comments\",\"DLL support by Alessandro Iacopetti & Gilles Vollant\\0\"\r\n-      VALUE \"LegalCopyright\", \"(C) 1995-2012 Jean-loup Gailly & Mark Adler\\0\"\r\n+      VALUE \"LegalCopyright\", \"(C) 1995-2013 Jean-loup Gailly & Mark Adler\\0\"\r\n     END\r\n   END\r\n   BLOCK \"VarFileInfo\"\r"}, {"sha": "63670467220c7268cb3eb153a109b1caa3bc7672", "filename": "zlib/contrib/vstudio/vc9/zlibvc.def", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Fcontrib%2Fvstudio%2Fvc9%2Fzlibvc.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Fcontrib%2Fvstudio%2Fvc9%2Fzlibvc.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fcontrib%2Fvstudio%2Fvc9%2Fzlibvc.def?ref=cd9ec14217a566fa0ae12ccf34534cbb7680f5ab", "patch": "@@ -1,7 +1,7 @@\n LIBRARY\r\n ; zlib data compression and ZIP file I/O library\r\n \r\n-VERSION\t\t1.2.7\r\n+VERSION\t\t1.2.8\r\n \r\n EXPORTS\r\n         adler32                                  @1\r\n@@ -133,7 +133,11 @@ EXPORTS\n ; zlib1 v1.2.6 added:\r\n         gzgetc_                                 @161\r\n         inflateResetKeep                        @163\r\n-        deflateResetKeep                        @164\n-\n-; zlib1 v1.2.7 added:\n-        gzopen_w                                @165\n+        deflateResetKeep                        @164\r\n+\r\n+; zlib1 v1.2.7 added:\r\n+        gzopen_w                                @165\r\n+\r\n+; zlib1 v1.2.8 added:\r\n+        inflateGetDictionary                    @166\r\n+        gzvprintf                               @167\r"}, {"sha": "03e76ab79328903aedc5fdb2e2273ad6e21cc902", "filename": "zlib/deflate.c", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Fdeflate.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Fdeflate.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fdeflate.c?ref=cd9ec14217a566fa0ae12ccf34534cbb7680f5ab", "patch": "@@ -1,5 +1,5 @@\n /* deflate.c -- compress data using the deflation algorithm\n- * Copyright (C) 1995-2012 Jean-loup Gailly and Mark Adler\n+ * Copyright (C) 1995-2013 Jean-loup Gailly and Mark Adler\n  * For conditions of distribution and use, see copyright notice in zlib.h\n  */\n \n@@ -52,7 +52,7 @@\n #include \"deflate.h\"\n \n const char deflate_copyright[] =\n-   \" deflate 1.2.7 Copyright 1995-2012 Jean-loup Gailly and Mark Adler \";\n+   \" deflate 1.2.8 Copyright 1995-2013 Jean-loup Gailly and Mark Adler \";\n /*\n   If you use the zlib library in a product, an acknowledgment is welcome\n   in the documentation of your product. If for some reason you cannot\n@@ -305,7 +305,7 @@ int ZEXPORT deflateInit2_(strm, level, method, windowBits, memLevel, strategy,\n     if (s->window == Z_NULL || s->prev == Z_NULL || s->head == Z_NULL ||\n         s->pending_buf == Z_NULL) {\n         s->status = FINISH_STATE;\n-        strm->msg = (char*)ERR_MSG(Z_MEM_ERROR);\n+        strm->msg = ERR_MSG(Z_MEM_ERROR);\n         deflateEnd (strm);\n         return Z_MEM_ERROR;\n     }\n@@ -329,7 +329,7 @@ int ZEXPORT deflateSetDictionary (strm, dictionary, dictLength)\n     uInt str, n;\n     int wrap;\n     unsigned avail;\n-    unsigned char *next;\n+    z_const unsigned char *next;\n \n     if (strm == Z_NULL || strm->state == Z_NULL || dictionary == Z_NULL)\n         return Z_STREAM_ERROR;\n@@ -359,7 +359,7 @@ int ZEXPORT deflateSetDictionary (strm, dictionary, dictLength)\n     avail = strm->avail_in;\n     next = strm->next_in;\n     strm->avail_in = dictLength;\n-    strm->next_in = (Bytef *)dictionary;\n+    strm->next_in = (z_const Bytef *)dictionary;\n     fill_window(s);\n     while (s->lookahead >= MIN_MATCH) {\n         str = s->strstart;\n@@ -513,6 +513,8 @@ int ZEXPORT deflateParams(strm, level, strategy)\n         strm->total_in != 0) {\n         /* Flush the last buffer: */\n         err = deflate(strm, Z_BLOCK);\n+        if (err == Z_BUF_ERROR && s->pending == 0)\n+            err = Z_OK;\n     }\n     if (s->level != level) {\n         s->level = level;"}, {"sha": "1eba66516b8ffe7b8a710443ca452a83914c25e5", "filename": "zlib/deflate.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Fdeflate.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Fdeflate.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fdeflate.h?ref=cd9ec14217a566fa0ae12ccf34534cbb7680f5ab", "patch": "@@ -104,7 +104,7 @@ typedef struct internal_state {\n     int   wrap;          /* bit 0 true for zlib, bit 1 true for gzip */\n     gz_headerp  gzhead;  /* gzip header information to write */\n     uInt   gzindex;      /* where in extra, name, or comment */\n-    Byte  method;        /* STORED (for zip only) or DEFLATED */\n+    Byte  method;        /* can only be DEFLATED */\n     int   last_flush;    /* value of flush param for previous deflate call */\n \n                 /* used by deflate.c: */"}, {"sha": "b991144305253c58e3397d7ff7737aa93d4a136b", "filename": "zlib/examples/enough.c", "status": "modified", "additions": 21, "deletions": 18, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Fexamples%2Fenough.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Fexamples%2Fenough.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fexamples%2Fenough.c?ref=cd9ec14217a566fa0ae12ccf34534cbb7680f5ab", "patch": "@@ -1,7 +1,7 @@\n /* enough.c -- determine the maximum size of inflate's Huffman code tables over\n  * all possible valid and complete Huffman codes, subject to a length limit.\n- * Copyright (C) 2007, 2008 Mark Adler\n- * Version 1.3  17 February 2008  Mark Adler\n+ * Copyright (C) 2007, 2008, 2012 Mark Adler\n+ * Version 1.4  18 August 2012  Mark Adler\n  */\n \n /* Version history:\n@@ -14,6 +14,9 @@\n    1.3  17 Feb 2008  Add argument for initial root table size\n                      Fix bug for initial root table size == max - 1\n                      Use a macro to compute the history index\n+   1.4  18 Aug 2012  Avoid shifts more than bits in type (caused endless loop!)\n+                     Clean up comparisons of different types\n+                     Clean up code indentation\n  */\n \n /*\n@@ -236,8 +239,8 @@ local big_t count(int syms, int len, int left)\n     for (use = least; use <= most; use++) {\n         got = count(syms - use, len + 1, (left - use) << 1);\n         sum += got;\n-        if (got == -1 || sum < got)         /* overflow */\n-            return -1;\n+        if (got == (big_t)0 - 1 || sum < got)   /* overflow */\n+            return (big_t)0 - 1;\n     }\n \n     /* verify that all recursive calls are productive */\n@@ -458,6 +461,7 @@ int main(int argc, char **argv)\n     int n;              /* number of symbols to code for this run */\n     big_t got;          /* return value of count() */\n     big_t sum;          /* accumulated number of codes over n */\n+    code_t word;        /* for counting bits in code_t */\n \n     /* set up globals for cleanup() */\n     code = NULL;\n@@ -466,19 +470,19 @@ int main(int argc, char **argv)\n \n     /* get arguments -- default to the deflate literal/length code */\n     syms = 286;\n-        root = 9;\n+    root = 9;\n     max = 15;\n     if (argc > 1) {\n         syms = atoi(argv[1]);\n         if (argc > 2) {\n             root = atoi(argv[2]);\n-                        if (argc > 3)\n-                                max = atoi(argv[3]);\n-                }\n+            if (argc > 3)\n+                max = atoi(argv[3]);\n+        }\n     }\n     if (argc > 4 || syms < 2 || root < 1 || max < 1) {\n         fputs(\"invalid arguments, need: [sym >= 2 [root >= 1 [max >= 1]]]\\n\",\n-                          stderr);\n+              stderr);\n         return 1;\n     }\n \n@@ -487,18 +491,17 @@ int main(int argc, char **argv)\n         max = syms - 1;\n \n     /* determine the number of bits in a code_t */\n-    n = 0;\n-    while (((code_t)1 << n) != 0)\n-        n++;\n+    for (n = 0, word = 1; word; n++, word <<= 1)\n+        ;\n \n     /* make sure that the calculation of most will not overflow */\n-    if (max > n || syms - 2 >= (((code_t)0 - 1) >> (max - 1))) {\n+    if (max > n || (code_t)(syms - 2) >= (((code_t)0 - 1) >> (max - 1))) {\n         fputs(\"abort: code length too long for internal types\\n\", stderr);\n         return 1;\n     }\n \n     /* reject impossible code requests */\n-    if (syms - 1 > ((code_t)1 << max) - 1) {\n+    if ((code_t)(syms - 1) > ((code_t)1 << max) - 1) {\n         fprintf(stderr, \"%d symbols cannot be coded in %d bits\\n\",\n                 syms, max);\n         return 1;\n@@ -532,7 +535,7 @@ int main(int argc, char **argv)\n     for (n = 2; n <= syms; n++) {\n         got = count(n, 1, 2);\n         sum += got;\n-        if (got == -1 || sum < got) {       /* overflow */\n+        if (got == (big_t)0 - 1 || sum < got) {     /* overflow */\n             fputs(\"abort: can't count that high!\\n\", stderr);\n             cleanup();\n             return 1;\n@@ -556,9 +559,9 @@ int main(int argc, char **argv)\n     }\n \n     /* find and show maximum inflate table usage */\n-        if (root > max)                 /* reduce root to max length */\n-                root = max;\n-    if (syms < ((code_t)1 << (root + 1)))\n+    if (root > max)                 /* reduce root to max length */\n+        root = max;\n+    if ((code_t)syms < ((code_t)1 << (root + 1)))\n         enough(syms);\n     else\n         puts(\"cannot handle minimum code lengths > root\");"}, {"sha": "89e484fee600190331dff67f6aa3d8bd906aaf9f", "filename": "zlib/examples/gun.c", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Fexamples%2Fgun.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Fexamples%2Fgun.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fexamples%2Fgun.c?ref=cd9ec14217a566fa0ae12ccf34534cbb7680f5ab", "patch": "@@ -1,7 +1,7 @@\n /* gun.c -- simple gunzip to give an example of the use of inflateBack()\n- * Copyright (C) 2003, 2005, 2008, 2010 Mark Adler\n+ * Copyright (C) 2003, 2005, 2008, 2010, 2012 Mark Adler\n  * For conditions of distribution and use, see copyright notice in zlib.h\n-   Version 1.6  17 January 2010  Mark Adler */\n+   Version 1.7  12 August 2012  Mark Adler */\n \n /* Version history:\n    1.0  16 Feb 2003  First version for testing of inflateBack()\n@@ -18,6 +18,7 @@\n    1.4   8 Dec 2006  LZW decompression speed improvements\n    1.5   9 Feb 2008  Avoid warning in latest version of gcc\n    1.6  17 Jan 2010  Avoid signed/unsigned comparison warnings\n+   1.7  12 Aug 2012  Update for z_const usage in zlib 1.2.8\n  */\n \n /*\n@@ -85,7 +86,7 @@ struct ind {\n /* Load input buffer, assumed to be empty, and return bytes loaded and a\n    pointer to them.  read() is called until the buffer is full, or until it\n    returns end-of-file or error.  Return 0 on error. */\n-local unsigned in(void *in_desc, unsigned char **buf)\n+local unsigned in(void *in_desc, z_const unsigned char **buf)\n {\n     int ret;\n     unsigned len;\n@@ -196,7 +197,7 @@ unsigned char match[65280 + 2];         /* buffer for reversed match or gzip\n    file, read error, or write error (a write error indicated by strm->next_in\n    not equal to Z_NULL), or Z_DATA_ERROR for invalid input.\n  */\n-local int lunpipe(unsigned have, unsigned char *next, struct ind *indp,\n+local int lunpipe(unsigned have, z_const unsigned char *next, struct ind *indp,\n                   int outfile, z_stream *strm)\n {\n     int last;                   /* last byte read by NEXT(), or -1 if EOF */\n@@ -383,7 +384,7 @@ local int gunpipe(z_stream *strm, int infile, int outfile)\n {\n     int ret, first, last;\n     unsigned have, flags, len;\n-    unsigned char *next = NULL;\n+    z_const unsigned char *next = NULL;\n     struct ind ind, *indp;\n     struct outd outd;\n "}, {"sha": "662dec3794b7c0f799fcb8e9feb1a1f43a3a46da", "filename": "zlib/examples/gzappend.c", "status": "modified", "additions": 13, "deletions": 9, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Fexamples%2Fgzappend.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Fexamples%2Fgzappend.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fexamples%2Fgzappend.c?ref=cd9ec14217a566fa0ae12ccf34534cbb7680f5ab", "patch": "@@ -1,7 +1,7 @@\n /* gzappend -- command to append to a gzip file\n \n-  Copyright (C) 2003 Mark Adler, all rights reserved\n-  version 1.1, 4 Nov 2003\n+  Copyright (C) 2003, 2012 Mark Adler, all rights reserved\n+  version 1.2, 11 Oct 2012\n \n   This software is provided 'as-is', without any express or implied\n   warranty.  In no event will the author be held liable for any damages\n@@ -39,6 +39,8 @@\n  *                      - Keep gzip file clean on appended file read errors\n  *                      - Use in-place rotate instead of auxiliary buffer\n  *                        (Why you ask?  Because it was fun to write!)\n+ * 1.2  11 Oct 2012     - Fix for proper z_const usage\n+ *                      - Check for input buffer malloc failure\n  */\n \n /*\n@@ -170,7 +172,7 @@ typedef struct {\n     int size;                   /* 1 << size is bytes in buf */\n     unsigned left;              /* bytes available at next */\n     unsigned char *buf;         /* buffer */\n-    unsigned char *next;        /* next byte in buffer */\n+    z_const unsigned char *next;    /* next byte in buffer */\n     char *name;                 /* file name for error messages */\n } file;\n \n@@ -399,14 +401,14 @@ local void gztack(char *name, int gd, z_stream *strm, int last)\n     }\n \n     /* allocate buffers */\n-    in = fd == -1 ? NULL : malloc(CHUNK);\n+    in = malloc(CHUNK);\n     out = malloc(CHUNK);\n-    if (out == NULL) bye(\"out of memory\", \"\");\n+    if (in == NULL || out == NULL) bye(\"out of memory\", \"\");\n \n     /* compress input file and append to gzip file */\n     do {\n         /* get more input */\n-        len = fd == -1 ? 0 : read(fd, in, CHUNK);\n+        len = read(fd, in, CHUNK);\n         if (len == -1) {\n             fprintf(stderr,\n                     \"gzappend warning: error reading %s, skipping rest ...\\n\",\n@@ -453,7 +455,7 @@ local void gztack(char *name, int gd, z_stream *strm, int last)\n \n     /* clean up and return */\n     free(out);\n-    if (in != NULL) free(in);\n+    free(in);\n     if (fd > 0) close(fd);\n }\n \n@@ -467,11 +469,13 @@ int main(int argc, char **argv)\n     z_stream strm;\n \n     /* ignore command name */\n-    argv++;\n+    argc--; argv++;\n \n     /* provide usage if no arguments */\n     if (*argv == NULL) {\n-        printf(\"gzappend 1.1 (4 Nov 2003) Copyright (C) 2003 Mark Adler\\n\");\n+        printf(\n+            \"gzappend 1.2 (11 Oct 2012) Copyright (C) 2003, 2012 Mark Adler\\n\"\n+               );\n         printf(\n             \"usage: gzappend [-level] file.gz [ addthis [ andthis ... ]]\\n\");\n         return 0;"}, {"sha": "89e8098441b6b51530e207d902100fb65e194ea7", "filename": "zlib/examples/gzjoin.c", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Fexamples%2Fgzjoin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Fexamples%2Fgzjoin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fexamples%2Fgzjoin.c?ref=cd9ec14217a566fa0ae12ccf34534cbb7680f5ab", "patch": "@@ -1,7 +1,7 @@\n /* gzjoin -- command to join gzip files into one gzip file\n \n-  Copyright (C) 2004 Mark Adler, all rights reserved\n-  version 1.0, 11 Dec 2004\n+  Copyright (C) 2004, 2005, 2012 Mark Adler, all rights reserved\n+  version 1.2, 14 Aug 2012\n \n   This software is provided 'as-is', without any express or implied\n   warranty.  In no event will the author be held liable for any damages\n@@ -27,6 +27,7 @@\n  *\n  * 1.0  11 Dec 2004     - First version\n  * 1.1  12 Jun 2005     - Changed ssize_t to long for portability\n+ * 1.2  14 Aug 2012     - Clean up for z_const usage\n  */\n \n /*\n@@ -308,7 +309,7 @@ local void gzcopy(char *name, int clr, unsigned long *crc, unsigned long *tot,\n     /* inflate and copy compressed data, clear last-block bit if requested */\n     len = 0;\n     zpull(&strm, in);\n-    start = strm.next_in;\n+    start = in->next;\n     last = start[0] & 1;\n     if (last && clr)\n         start[0] &= ~1;\n@@ -351,7 +352,7 @@ local void gzcopy(char *name, int clr, unsigned long *crc, unsigned long *tot,\n                 pos = 0x100 >> pos;\n                 last = strm.next_in[-1] & pos;\n                 if (last && clr)\n-                    strm.next_in[-1] &= ~pos;\n+                    in->buf[strm.next_in - in->buf - 1] &= ~pos;\n             }\n             else {\n                 /* next last-block bit is in next unused byte */\n@@ -364,14 +365,14 @@ local void gzcopy(char *name, int clr, unsigned long *crc, unsigned long *tot,\n                 }\n                 last = strm.next_in[0] & 1;\n                 if (last && clr)\n-                    strm.next_in[0] &= ~1;\n+                    in->buf[strm.next_in - in->buf] &= ~1;\n             }\n         }\n     }\n \n     /* update buffer with unused input */\n     in->left = strm.avail_in;\n-    in->next = strm.next_in;\n+    in->next = in->buf + (strm.next_in - in->buf);\n \n     /* copy used input, write empty blocks to get to byte boundary */\n     pos = strm.data_type & 7;"}, {"sha": "922f878dde3d8aecead27afbaed7768f5079cdce", "filename": "zlib/examples/gzlog.c", "status": "modified", "additions": 11, "deletions": 10, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Fexamples%2Fgzlog.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Fexamples%2Fgzlog.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fexamples%2Fgzlog.c?ref=cd9ec14217a566fa0ae12ccf34534cbb7680f5ab", "patch": "@@ -1,8 +1,8 @@\n /*\n  * gzlog.c\n- * Copyright (C) 2004, 2008 Mark Adler, all rights reserved\n+ * Copyright (C) 2004, 2008, 2012 Mark Adler, all rights reserved\n  * For conditions of distribution and use, see copyright notice in gzlog.h\n- * version 2.0, 25 Apr 2008\n+ * version 2.2, 14 Aug 2012\n  */\n \n /*\n@@ -750,15 +750,16 @@ local int log_recover(struct log *log, int op)\n         strcpy(log->end, \".add\");\n         if (stat(log->path, &st) == 0 && st.st_size) {\n             len = (size_t)(st.st_size);\n-            if (len != st.st_size || (data = malloc(st.st_size)) == NULL) {\n+            if ((off_t)len != st.st_size ||\n+                    (data = malloc(st.st_size)) == NULL) {\n                 log_log(log, op, \"allocation failure\");\n                 return -2;\n             }\n             if ((fd = open(log->path, O_RDONLY, 0)) < 0) {\n                 log_log(log, op, \".add file read failure\");\n                 return -1;\n             }\n-            ret = read(fd, data, len) != len;\n+            ret = (size_t)read(fd, data, len) != len;\n             close(fd);\n             if (ret) {\n                 log_log(log, op, \".add file read failure\");\n@@ -913,7 +914,7 @@ int gzlog_compress(gzlog *logd)\n     struct log *log = logd;\n \n     /* check arguments */\n-    if (log == NULL || strcmp(log->id, LOGID) || len < 0)\n+    if (log == NULL || strcmp(log->id, LOGID))\n         return -3;\n \n     /* see if we lost the lock -- if so get it again and reload the extra\n@@ -952,7 +953,7 @@ int gzlog_compress(gzlog *logd)\n         fd = open(log->path, O_WRONLY | O_CREAT | O_TRUNC, 0644);\n         if (fd < 0)\n             break;\n-        ret = write(fd, data, len) != len;\n+        ret = (size_t)write(fd, data, len) != len;\n         if (ret | close(fd))\n             break;\n         log_touch(log);\n@@ -963,7 +964,7 @@ int gzlog_compress(gzlog *logd)\n         if (fd < 0)\n             break;\n         next = DICT > len ? len : DICT;\n-        ret = write(fd, (char *)data + len - next, next) != next;\n+        ret = (size_t)write(fd, (char *)data + len - next, next) != next;\n         if (ret | close(fd))\n             break;\n         log_touch(log);\n@@ -997,9 +998,9 @@ int gzlog_write(gzlog *logd, void *data, size_t len)\n     struct log *log = logd;\n \n     /* check arguments */\n-    if (log == NULL || strcmp(log->id, LOGID) || len < 0)\n+    if (log == NULL || strcmp(log->id, LOGID))\n         return -3;\n-    if (data == NULL || len == 0)\n+    if (data == NULL || len <= 0)\n         return 0;\n \n     /* see if we lost the lock -- if so get it again and reload the extra\n@@ -1013,7 +1014,7 @@ int gzlog_write(gzlog *logd, void *data, size_t len)\n     fd = open(log->path, O_WRONLY | O_CREAT | O_TRUNC, 0644);\n     if (fd < 0)\n         return -1;\n-    ret = write(fd, data, len) != len;\n+    ret = (size_t)write(fd, data, len) != len;\n     if (ret | close(fd))\n         return -1;\n     log_touch(log);"}, {"sha": "86f0cecba5b402eba32038fd4865e0f8ce8da94f", "filename": "zlib/examples/gzlog.h", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Fexamples%2Fgzlog.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Fexamples%2Fgzlog.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fexamples%2Fgzlog.h?ref=cd9ec14217a566fa0ae12ccf34534cbb7680f5ab", "patch": "@@ -1,6 +1,6 @@\n /* gzlog.h\n-  Copyright (C) 2004, 2008 Mark Adler, all rights reserved\n-  version 2.0, 25 Apr 2008\n+  Copyright (C) 2004, 2008, 2012 Mark Adler, all rights reserved\n+  version 2.2, 14 Aug 2012\n \n   This software is provided 'as-is', without any express or implied\n   warranty.  In no event will the author be held liable for any damages\n@@ -27,6 +27,8 @@\n                      Interface changed slightly in that now path is a prefix\n                      Compression now occurs as needed during gzlog_write()\n                      gzlog_write() now always leaves the log file as valid gzip\n+   2.1   8 Jul 2012  Fix argument checks in gzlog_compress() and gzlog_write()\n+   2.2  14 Aug 2012  Clean up signed comparisons\n  */\n \n /*"}, {"sha": "278f9ad07d23d76052282233f2868254b5ef6045", "filename": "zlib/examples/zran.c", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Fexamples%2Fzran.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Fexamples%2Fzran.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fexamples%2Fzran.c?ref=cd9ec14217a566fa0ae12ccf34534cbb7680f5ab", "patch": "@@ -1,7 +1,12 @@\n /* zran.c -- example of zlib/gzip stream indexing and random access\n- * Copyright (C) 2005 Mark Adler\n+ * Copyright (C) 2005, 2012 Mark Adler\n  * For conditions of distribution and use, see copyright notice in zlib.h\n-   Version 1.0  29 May 2005  Mark Adler */\n+   Version 1.1  29 Sep 2012  Mark Adler */\n+\n+/* Version History:\n+ 1.0  29 May 2005  First version\n+ 1.1  29 Sep 2012  Fix memory reallocation error\n+ */\n \n /* Illustrate the use of Z_BLOCK, inflatePrime(), and inflateSetDictionary()\n    for random access of a compressed file.  A file containing a zlib or gzip\n@@ -221,7 +226,7 @@ local int build_index(FILE *in, off_t span, struct access **built)\n \n     /* clean up and return index (release unused entries in list) */\n     (void)inflateEnd(&strm);\n-    index = realloc(index, sizeof(struct point) * index->have);\n+    index->list = realloc(index->list, sizeof(struct point) * index->have);\n     index->size = index->have;\n     *built = index;\n     return index->size;"}, {"sha": "d87659d0319fa36db9f59ea62124bd28207ef9ae", "filename": "zlib/gzguts.h", "status": "modified", "additions": 19, "deletions": 3, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Fgzguts.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Fgzguts.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fgzguts.h?ref=cd9ec14217a566fa0ae12ccf34534cbb7680f5ab", "patch": "@@ -1,5 +1,5 @@\n /* gzguts.h -- zlib internal header definitions for gz* operations\n- * Copyright (C) 2004, 2005, 2010, 2011, 2012 Mark Adler\n+ * Copyright (C) 2004, 2005, 2010, 2011, 2012, 2013 Mark Adler\n  * For conditions of distribution and use, see copyright notice in zlib.h\n  */\n \n@@ -35,6 +35,13 @@\n #  include <io.h>\n #endif\n \n+#ifdef WINAPI_FAMILY\n+#  define open _open\n+#  define read _read\n+#  define write _write\n+#  define close _close\n+#endif\n+\n #ifdef NO_DEFLATE       /* for compatibility with old definition */\n #  define NO_GZCOMPRESS\n #endif\n@@ -60,7 +67,7 @@\n #ifndef HAVE_VSNPRINTF\n #  ifdef MSDOS\n /* vsnprintf may exist on some MS-DOS compilers (DJGPP?),\n- but for now we just assume it doesn't. */\n+   but for now we just assume it doesn't. */\n #    define NO_vsnprintf\n #  endif\n #  ifdef __TURBOC__\n@@ -88,6 +95,14 @@\n #  endif\n #endif\n \n+/* unlike snprintf (which is required in C99, yet still not supported by\n+   Microsoft more than a decade later!), _snprintf does not guarantee null\n+   termination of the result -- however this is only used in gzlib.c where\n+   the result is assured to fit in the space provided */\n+#ifdef _MSC_VER\n+#  define snprintf _snprintf\n+#endif\n+\n #ifndef local\n #  define local static\n #endif\n@@ -127,7 +142,8 @@\n #  define DEF_MEM_LEVEL  MAX_MEM_LEVEL\n #endif\n \n-/* default i/o buffer size -- double this for output when reading */\n+/* default i/o buffer size -- double this for output when reading (this and\n+   twice this must be able to fit in an unsigned type) */\n #define GZBUFSIZE 8192\n \n /* gzip modes, also provide a little integrity check on the passed structure */"}, {"sha": "fae202ef8905a3c99e4b71d756a45d55f9b1c163", "filename": "zlib/gzlib.c", "status": "modified", "additions": 27, "deletions": 13, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Fgzlib.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Fgzlib.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fgzlib.c?ref=cd9ec14217a566fa0ae12ccf34534cbb7680f5ab", "patch": "@@ -1,5 +1,5 @@\n /* gzlib.c -- zlib functions common to reading and writing gzip files\n- * Copyright (C) 2004, 2010, 2011, 2012 Mark Adler\n+ * Copyright (C) 2004, 2010, 2011, 2012, 2013 Mark Adler\n  * For conditions of distribution and use, see copyright notice in zlib.h\n  */\n \n@@ -108,7 +108,7 @@ local gzFile gz_open(path, fd, mode)\n         return NULL;\n \n     /* allocate gzFile structure to return */\n-    state = malloc(sizeof(gz_state));\n+    state = (gz_statep)malloc(sizeof(gz_state));\n     if (state == NULL)\n         return NULL;\n     state->size = 0;            /* no buffers allocated yet */\n@@ -162,8 +162,10 @@ local gzFile gz_open(path, fd, mode)\n                 break;\n             case 'F':\n                 state->strategy = Z_FIXED;\n+                break;\n             case 'T':\n                 state->direct = 1;\n+                break;\n             default:        /* could consider as an error, but just ignore */\n                 ;\n             }\n@@ -194,8 +196,8 @@ local gzFile gz_open(path, fd, mode)\n     }\n     else\n #endif\n-        len = strlen(path);\n-    state->path = malloc(len + 1);\n+        len = strlen((const char *)path);\n+    state->path = (char *)malloc(len + 1);\n     if (state->path == NULL) {\n         free(state);\n         return NULL;\n@@ -208,7 +210,11 @@ local gzFile gz_open(path, fd, mode)\n             *(state->path) = 0;\n     else\n #endif\n+#if !defined(NO_snprintf) && !defined(NO_vsnprintf)\n+        snprintf(state->path, len + 1, \"%s\", (const char *)path);\n+#else\n         strcpy(state->path, path);\n+#endif\n \n     /* compute the flags for open() */\n     oflag =\n@@ -236,7 +242,7 @@ local gzFile gz_open(path, fd, mode)\n #ifdef _WIN32\n         fd == -2 ? _wopen(path, oflag, 0666) :\n #endif\n-        open(path, oflag, 0666));\n+        open((const char *)path, oflag, 0666));\n     if (state->fd == -1) {\n         free(state->path);\n         free(state);\n@@ -282,9 +288,13 @@ gzFile ZEXPORT gzdopen(fd, mode)\n     char *path;         /* identifier for error messages */\n     gzFile gz;\n \n-    if (fd == -1 || (path = malloc(7 + 3 * sizeof(int))) == NULL)\n+    if (fd == -1 || (path = (char *)malloc(7 + 3 * sizeof(int))) == NULL)\n         return NULL;\n+#if !defined(NO_snprintf) && !defined(NO_vsnprintf)\n+    snprintf(path, 7 + 3 * sizeof(int), \"<fd:%d>\", fd); /* for debugging */\n+#else\n     sprintf(path, \"<fd:%d>\", fd);   /* for debugging */\n+#endif\n     gz = gz_open(path, fd, mode);\n     free(path);\n     return gz;\n@@ -531,7 +541,8 @@ const char * ZEXPORT gzerror(file, errnum)\n     /* return error information */\n     if (errnum != NULL)\n         *errnum = state->err;\n-    return state->msg == NULL ? \"\" : state->msg;\n+    return state->err == Z_MEM_ERROR ? \"out of memory\" :\n+                                       (state->msg == NULL ? \"\" : state->msg);\n }\n \n /* -- see zlib.h -- */\n@@ -582,21 +593,24 @@ void ZLIB_INTERNAL gz_error(state, err, msg)\n     if (msg == NULL)\n         return;\n \n-    /* for an out of memory error, save as static string */\n-    if (err == Z_MEM_ERROR) {\n-        state->msg = (char *)msg;\n+    /* for an out of memory error, return literal string when requested */\n+    if (err == Z_MEM_ERROR)\n         return;\n-    }\n \n     /* construct error message with path */\n-    if ((state->msg = malloc(strlen(state->path) + strlen(msg) + 3)) == NULL) {\n+    if ((state->msg = (char *)malloc(strlen(state->path) + strlen(msg) + 3)) ==\n+            NULL) {\n         state->err = Z_MEM_ERROR;\n-        state->msg = (char *)\"out of memory\";\n         return;\n     }\n+#if !defined(NO_snprintf) && !defined(NO_vsnprintf)\n+    snprintf(state->msg, strlen(state->path) + strlen(msg) + 3,\n+             \"%s%s%s\", state->path, \": \", msg);\n+#else\n     strcpy(state->msg, state->path);\n     strcat(state->msg, \": \");\n     strcat(state->msg, msg);\n+#endif\n     return;\n }\n "}, {"sha": "bf4538eb274245ad118edd3eaac38ee9e697c2b5", "filename": "zlib/gzread.c", "status": "modified", "additions": 13, "deletions": 8, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Fgzread.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Fgzread.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fgzread.c?ref=cd9ec14217a566fa0ae12ccf34534cbb7680f5ab", "patch": "@@ -1,5 +1,5 @@\n /* gzread.c -- zlib functions for reading gzip files\n- * Copyright (C) 2004, 2005, 2010, 2011, 2012 Mark Adler\n+ * Copyright (C) 2004, 2005, 2010, 2011, 2012, 2013 Mark Adler\n  * For conditions of distribution and use, see copyright notice in zlib.h\n  */\n \n@@ -58,7 +58,8 @@ local int gz_avail(state)\n         return -1;\n     if (state->eof == 0) {\n         if (strm->avail_in) {       /* copy what's there to the start */\n-            unsigned char *p = state->in, *q = strm->next_in;\n+            unsigned char *p = state->in;\n+            unsigned const char *q = strm->next_in;\n             unsigned n = strm->avail_in;\n             do {\n                 *p++ = *q++;\n@@ -90,8 +91,8 @@ local int gz_look(state)\n     /* allocate read buffers and inflate memory */\n     if (state->size == 0) {\n         /* allocate buffers */\n-        state->in = malloc(state->want);\n-        state->out = malloc(state->want << 1);\n+        state->in = (unsigned char *)malloc(state->want);\n+        state->out = (unsigned char *)malloc(state->want << 1);\n         if (state->in == NULL || state->out == NULL) {\n             if (state->out != NULL)\n                 free(state->out);\n@@ -352,14 +353,14 @@ int ZEXPORT gzread(file, buf, len)\n \n         /* large len -- read directly into user buffer */\n         else if (state->how == COPY) {      /* read directly */\n-            if (gz_load(state, buf, len, &n) == -1)\n+            if (gz_load(state, (unsigned char *)buf, len, &n) == -1)\n                 return -1;\n         }\n \n         /* large len -- decompress directly into user buffer */\n         else {  /* state->how == GZIP */\n             strm->avail_out = len;\n-            strm->next_out = buf;\n+            strm->next_out = (unsigned char *)buf;\n             if (gz_decomp(state) == -1)\n                 return -1;\n             n = state->x.have;\n@@ -378,7 +379,11 @@ int ZEXPORT gzread(file, buf, len)\n }\n \n /* -- see zlib.h -- */\n-#undef gzgetc\n+#ifdef Z_PREFIX_SET\n+#  undef z_gzgetc\n+#else\n+#  undef gzgetc\n+#endif\n int ZEXPORT gzgetc(file)\n     gzFile file;\n {\n@@ -518,7 +523,7 @@ char * ZEXPORT gzgets(file, buf, len)\n \n         /* look for end-of-line in current output buffer */\n         n = state->x.have > left ? left : state->x.have;\n-        eol = memchr(state->x.next, '\\n', n);\n+        eol = (unsigned char *)memchr(state->x.next, '\\n', n);\n         if (eol != NULL)\n             n = (unsigned)(eol - state->x.next) + 1;\n "}, {"sha": "aa767fbf63ec7ddd2f5863d05c03f647303a101f", "filename": "zlib/gzwrite.c", "status": "modified", "additions": 38, "deletions": 26, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Fgzwrite.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Fgzwrite.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fgzwrite.c?ref=cd9ec14217a566fa0ae12ccf34534cbb7680f5ab", "patch": "@@ -1,5 +1,5 @@\n /* gzwrite.c -- zlib functions for writing gzip files\n- * Copyright (C) 2004, 2005, 2010, 2011, 2012 Mark Adler\n+ * Copyright (C) 2004, 2005, 2010, 2011, 2012, 2013 Mark Adler\n  * For conditions of distribution and use, see copyright notice in zlib.h\n  */\n \n@@ -19,7 +19,7 @@ local int gz_init(state)\n     z_streamp strm = &(state->strm);\n \n     /* allocate input buffer */\n-    state->in = malloc(state->want);\n+    state->in = (unsigned char *)malloc(state->want);\n     if (state->in == NULL) {\n         gz_error(state, Z_MEM_ERROR, \"out of memory\");\n         return -1;\n@@ -28,7 +28,7 @@ local int gz_init(state)\n     /* only need output buffer and deflate state if compressing */\n     if (!state->direct) {\n         /* allocate output buffer */\n-        state->out = malloc(state->want);\n+        state->out = (unsigned char *)malloc(state->want);\n         if (state->out == NULL) {\n             free(state->in);\n             gz_error(state, Z_MEM_ERROR, \"out of memory\");\n@@ -168,7 +168,6 @@ int ZEXPORT gzwrite(file, buf, len)\n     unsigned len;\n {\n     unsigned put = len;\n-    unsigned n;\n     gz_statep state;\n     z_streamp strm;\n \n@@ -208,16 +207,19 @@ int ZEXPORT gzwrite(file, buf, len)\n     if (len < state->size) {\n         /* copy to input buffer, compress when full */\n         do {\n+            unsigned have, copy;\n+\n             if (strm->avail_in == 0)\n                 strm->next_in = state->in;\n-            n = state->size - strm->avail_in;\n-            if (n > len)\n-                n = len;\n-            memcpy(strm->next_in + strm->avail_in, buf, n);\n-            strm->avail_in += n;\n-            state->x.pos += n;\n-            buf = (char *)buf + n;\n-            len -= n;\n+            have = (unsigned)((strm->next_in + strm->avail_in) - state->in);\n+            copy = state->size - have;\n+            if (copy > len)\n+                copy = len;\n+            memcpy(state->in + have, buf, copy);\n+            strm->avail_in += copy;\n+            state->x.pos += copy;\n+            buf = (const char *)buf + copy;\n+            len -= copy;\n             if (len && gz_comp(state, Z_NO_FLUSH) == -1)\n                 return 0;\n         } while (len);\n@@ -229,7 +231,7 @@ int ZEXPORT gzwrite(file, buf, len)\n \n         /* directly compress user buffer to file */\n         strm->avail_in = len;\n-        strm->next_in = (voidp)buf;\n+        strm->next_in = (z_const Bytef *)buf;\n         state->x.pos += len;\n         if (gz_comp(state, Z_NO_FLUSH) == -1)\n             return 0;\n@@ -244,6 +246,7 @@ int ZEXPORT gzputc(file, c)\n     gzFile file;\n     int c;\n {\n+    unsigned have;\n     unsigned char buf[1];\n     gz_statep state;\n     z_streamp strm;\n@@ -267,12 +270,16 @@ int ZEXPORT gzputc(file, c)\n \n     /* try writing to input buffer for speed (state->size == 0 if buffer not\n        initialized) */\n-    if (strm->avail_in < state->size) {\n+    if (state->size) {\n         if (strm->avail_in == 0)\n             strm->next_in = state->in;\n-        strm->next_in[strm->avail_in++] = c;\n-        state->x.pos++;\n-        return c & 0xff;\n+        have = (unsigned)((strm->next_in + strm->avail_in) - state->in);\n+        if (have < state->size) {\n+            state->in[have] = c;\n+            strm->avail_in++;\n+            state->x.pos++;\n+            return c & 0xff;\n+        }\n     }\n \n     /* no room in buffer or not initialized, use gz_write() */\n@@ -300,12 +307,11 @@ int ZEXPORT gzputs(file, str)\n #include <stdarg.h>\n \n /* -- see zlib.h -- */\n-int ZEXPORTVA gzprintf (gzFile file, const char *format, ...)\n+int ZEXPORTVA gzvprintf(gzFile file, const char *format, va_list va)\n {\n     int size, len;\n     gz_statep state;\n     z_streamp strm;\n-    va_list va;\n \n     /* get internal structure */\n     if (file == NULL)\n@@ -335,25 +341,20 @@ int ZEXPORTVA gzprintf (gzFile file, const char *format, ...)\n     /* do the printf() into the input buffer, put length in len */\n     size = (int)(state->size);\n     state->in[size - 1] = 0;\n-    va_start(va, format);\n #ifdef NO_vsnprintf\n #  ifdef HAS_vsprintf_void\n     (void)vsprintf((char *)(state->in), format, va);\n-    va_end(va);\n     for (len = 0; len < size; len++)\n         if (state->in[len] == 0) break;\n #  else\n     len = vsprintf((char *)(state->in), format, va);\n-    va_end(va);\n #  endif\n #else\n #  ifdef HAS_vsnprintf_void\n     (void)vsnprintf((char *)(state->in), size, format, va);\n-    va_end(va);\n     len = strlen((char *)(state->in));\n #  else\n     len = vsnprintf((char *)(state->in), size, format, va);\n-    va_end(va);\n #  endif\n #endif\n \n@@ -368,6 +369,17 @@ int ZEXPORTVA gzprintf (gzFile file, const char *format, ...)\n     return len;\n }\n \n+int ZEXPORTVA gzprintf(gzFile file, const char *format, ...)\n+{\n+    va_list va;\n+    int ret;\n+\n+    va_start(va, format);\n+    ret = gzvprintf(file, format, va);\n+    va_end(va);\n+    return ret;\n+}\n+\n #else /* !STDC && !Z_HAVE_STDARG_H */\n \n /* -- see zlib.h -- */\n@@ -547,9 +559,9 @@ int ZEXPORT gzclose_w(file)\n     }\n \n     /* flush, free memory, and close file */\n+    if (gz_comp(state, Z_FINISH) == -1)\n+        ret = state->err;\n     if (state->size) {\n-        if (gz_comp(state, Z_FINISH) == -1)\n-            ret = state->err;\n         if (!state->direct) {\n             (void)deflateEnd(&(state->strm));\n             free(state->out);"}, {"sha": "f3833c2e434a560b41325d0001c9c4ff0d5d1279", "filename": "zlib/infback.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Finfback.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Finfback.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Finfback.c?ref=cd9ec14217a566fa0ae12ccf34534cbb7680f5ab", "patch": "@@ -255,7 +255,7 @@ out_func out;\n void FAR *out_desc;\n {\n     struct inflate_state FAR *state;\n-    unsigned char FAR *next;    /* next input */\n+    z_const unsigned char FAR *next;    /* next input */\n     unsigned char FAR *put;     /* next output */\n     unsigned have, left;        /* available input and output */\n     unsigned long hold;         /* bit buffer */"}, {"sha": "bda59ceb6a12b2d7de80ef3c1e7318e54fc979ac", "filename": "zlib/inffast.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Finffast.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Finffast.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Finffast.c?ref=cd9ec14217a566fa0ae12ccf34534cbb7680f5ab", "patch": "@@ -1,5 +1,5 @@\n /* inffast.c -- fast decoding\n- * Copyright (C) 1995-2008, 2010 Mark Adler\n+ * Copyright (C) 1995-2008, 2010, 2013 Mark Adler\n  * For conditions of distribution and use, see copyright notice in zlib.h\n  */\n \n@@ -69,8 +69,8 @@ z_streamp strm;\n unsigned start;         /* inflate()'s starting value for strm->avail_out */\n {\n     struct inflate_state FAR *state;\n-    unsigned char FAR *in;      /* local strm->next_in */\n-    unsigned char FAR *last;    /* while in < last, enough input available */\n+    z_const unsigned char FAR *in;      /* local strm->next_in */\n+    z_const unsigned char FAR *last;    /* have enough input while in < last */\n     unsigned char FAR *out;     /* local strm->next_out */\n     unsigned char FAR *beg;     /* inflate()'s initial strm->next_out */\n     unsigned char FAR *end;     /* while out < end, enough space available */"}, {"sha": "870f89bb4d3646684bf37e2144c4b83c808ab84d", "filename": "zlib/inflate.c", "status": "modified", "additions": 40, "deletions": 24, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Finflate.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Finflate.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Finflate.c?ref=cd9ec14217a566fa0ae12ccf34534cbb7680f5ab", "patch": "@@ -93,11 +93,12 @@\n \n /* function prototypes */\n local void fixedtables OF((struct inflate_state FAR *state));\n-local int updatewindow OF((z_streamp strm, unsigned out));\n+local int updatewindow OF((z_streamp strm, const unsigned char FAR *end,\n+                           unsigned copy));\n #ifdef BUILDFIXED\n    void makefixed OF((void));\n #endif\n-local unsigned syncsearch OF((unsigned FAR *have, unsigned char FAR *buf,\n+local unsigned syncsearch OF((unsigned FAR *have, const unsigned char FAR *buf,\n                               unsigned len));\n \n int ZEXPORT inflateResetKeep(strm)\n@@ -375,12 +376,13 @@ void makefixed()\n    output will fall in the output data, making match copies simpler and faster.\n    The advantage may be dependent on the size of the processor's data caches.\n  */\n-local int updatewindow(strm, out)\n+local int updatewindow(strm, end, copy)\n z_streamp strm;\n-unsigned out;\n+const Bytef *end;\n+unsigned copy;\n {\n     struct inflate_state FAR *state;\n-    unsigned copy, dist;\n+    unsigned dist;\n \n     state = (struct inflate_state FAR *)strm->state;\n \n@@ -400,19 +402,18 @@ unsigned out;\n     }\n \n     /* copy state->wsize or less output bytes into the circular window */\n-    copy = out - strm->avail_out;\n     if (copy >= state->wsize) {\n-        zmemcpy(state->window, strm->next_out - state->wsize, state->wsize);\n+        zmemcpy(state->window, end - state->wsize, state->wsize);\n         state->wnext = 0;\n         state->whave = state->wsize;\n     }\n     else {\n         dist = state->wsize - state->wnext;\n         if (dist > copy) dist = copy;\n-        zmemcpy(state->window + state->wnext, strm->next_out - copy, dist);\n+        zmemcpy(state->window + state->wnext, end - copy, dist);\n         copy -= dist;\n         if (copy) {\n-            zmemcpy(state->window, strm->next_out - copy, copy);\n+            zmemcpy(state->window, end - copy, copy);\n             state->wnext = copy;\n             state->whave = state->wsize;\n         }\n@@ -606,7 +607,7 @@ z_streamp strm;\n int flush;\n {\n     struct inflate_state FAR *state;\n-    unsigned char FAR *next;    /* next input */\n+    z_const unsigned char FAR *next;    /* next input */\n     unsigned char FAR *put;     /* next output */\n     unsigned have, left;        /* available input and output */\n     unsigned long hold;         /* bit buffer */\n@@ -920,7 +921,7 @@ int flush;\n             while (state->have < 19)\n                 state->lens[order[state->have++]] = 0;\n             state->next = state->codes;\n-            state->lencode = (code const FAR *)(state->next);\n+            state->lencode = (const code FAR *)(state->next);\n             state->lenbits = 7;\n             ret = inflate_table(CODES, state->lens, 19, &(state->next),\n                                 &(state->lenbits), state->work);\n@@ -994,7 +995,7 @@ int flush;\n                values here (9 and 6) without reading the comments in inftrees.h\n                concerning the ENOUGH constants, which depend on those values */\n             state->next = state->codes;\n-            state->lencode = (code const FAR *)(state->next);\n+            state->lencode = (const code FAR *)(state->next);\n             state->lenbits = 9;\n             ret = inflate_table(LENS, state->lens, state->nlen, &(state->next),\n                                 &(state->lenbits), state->work);\n@@ -1003,7 +1004,7 @@ int flush;\n                 state->mode = BAD;\n                 break;\n             }\n-            state->distcode = (code const FAR *)(state->next);\n+            state->distcode = (const code FAR *)(state->next);\n             state->distbits = 6;\n             ret = inflate_table(DISTS, state->lens + state->nlen, state->ndist,\n                             &(state->next), &(state->distbits), state->work);\n@@ -1230,7 +1231,7 @@ int flush;\n     RESTORE();\n     if (state->wsize || (out != strm->avail_out && state->mode < BAD &&\n             (state->mode < CHECK || flush != Z_FINISH)))\n-        if (updatewindow(strm, out)) {\n+        if (updatewindow(strm, strm->next_out, out - strm->avail_out)) {\n             state->mode = MEM;\n             return Z_MEM_ERROR;\n         }\n@@ -1264,15 +1265,36 @@ z_streamp strm;\n     return Z_OK;\n }\n \n+int ZEXPORT inflateGetDictionary(strm, dictionary, dictLength)\n+z_streamp strm;\n+Bytef *dictionary;\n+uInt *dictLength;\n+{\n+    struct inflate_state FAR *state;\n+\n+    /* check state */\n+    if (strm == Z_NULL || strm->state == Z_NULL) return Z_STREAM_ERROR;\n+    state = (struct inflate_state FAR *)strm->state;\n+\n+    /* copy dictionary */\n+    if (state->whave && dictionary != Z_NULL) {\n+        zmemcpy(dictionary, state->window + state->wnext,\n+                state->whave - state->wnext);\n+        zmemcpy(dictionary + state->whave - state->wnext,\n+                state->window, state->wnext);\n+    }\n+    if (dictLength != Z_NULL)\n+        *dictLength = state->whave;\n+    return Z_OK;\n+}\n+\n int ZEXPORT inflateSetDictionary(strm, dictionary, dictLength)\n z_streamp strm;\n const Bytef *dictionary;\n uInt dictLength;\n {\n     struct inflate_state FAR *state;\n     unsigned long dictid;\n-    unsigned char *next;\n-    unsigned avail;\n     int ret;\n \n     /* check state */\n@@ -1291,13 +1313,7 @@ uInt dictLength;\n \n     /* copy dictionary to window using updatewindow(), which will amend the\n        existing dictionary if appropriate */\n-    next = strm->next_out;\n-    avail = strm->avail_out;\n-    strm->next_out = (Bytef *)dictionary + dictLength;\n-    strm->avail_out = 0;\n-    ret = updatewindow(strm, dictLength);\n-    strm->avail_out = avail;\n-    strm->next_out = next;\n+    ret = updatewindow(strm, dictionary + dictLength, dictLength);\n     if (ret) {\n         state->mode = MEM;\n         return Z_MEM_ERROR;\n@@ -1337,7 +1353,7 @@ gz_headerp head;\n  */\n local unsigned syncsearch(have, buf, len)\n unsigned FAR *have;\n-unsigned char FAR *buf;\n+const unsigned char FAR *buf;\n unsigned len;\n {\n     unsigned got;"}, {"sha": "44d89cf24e1c2aa20c3b4f0e68bff0d15ae3a5d7", "filename": "zlib/inftrees.c", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Finftrees.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Finftrees.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Finftrees.c?ref=cd9ec14217a566fa0ae12ccf34534cbb7680f5ab", "patch": "@@ -1,5 +1,5 @@\n /* inftrees.c -- generate Huffman trees for efficient decoding\n- * Copyright (C) 1995-2012 Mark Adler\n+ * Copyright (C) 1995-2013 Mark Adler\n  * For conditions of distribution and use, see copyright notice in zlib.h\n  */\n \n@@ -9,7 +9,7 @@\n #define MAXBITS 15\n \n const char inflate_copyright[] =\n-   \" inflate 1.2.7 Copyright 1995-2012 Mark Adler \";\n+   \" inflate 1.2.8 Copyright 1995-2013 Mark Adler \";\n /*\n   If you use the zlib library in a product, an acknowledgment is welcome\n   in the documentation of your product. If for some reason you cannot\n@@ -62,7 +62,7 @@ unsigned short FAR *work;\n         35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0};\n     static const unsigned short lext[31] = { /* Length codes 257..285 extra */\n         16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18,\n-        19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 78, 68};\n+        19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78};\n     static const unsigned short dbase[32] = { /* Distance codes 0..29 base */\n         1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193,\n         257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145,\n@@ -208,8 +208,8 @@ unsigned short FAR *work;\n     mask = used - 1;            /* mask for comparing low */\n \n     /* check available table space */\n-    if ((type == LENS && used >= ENOUGH_LENS) ||\n-        (type == DISTS && used >= ENOUGH_DISTS))\n+    if ((type == LENS && used > ENOUGH_LENS) ||\n+        (type == DISTS && used > ENOUGH_DISTS))\n         return 1;\n \n     /* process all codes and make table entries */\n@@ -277,8 +277,8 @@ unsigned short FAR *work;\n \n             /* check for enough space */\n             used += 1U << curr;\n-            if ((type == LENS && used >= ENOUGH_LENS) ||\n-                (type == DISTS && used >= ENOUGH_DISTS))\n+            if ((type == LENS && used > ENOUGH_LENS) ||\n+                (type == DISTS && used > ENOUGH_DISTS))\n                 return 1;\n \n             /* point entry in root table to sub-table */"}, {"sha": "aebf6e3ac1271528b2aa25c06b6ded762e5d764c", "filename": "zlib/qnx/package.qpg", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Fqnx%2Fpackage.qpg", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Fqnx%2Fpackage.qpg", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fqnx%2Fpackage.qpg?ref=cd9ec14217a566fa0ae12ccf34534cbb7680f5ab", "patch": "@@ -25,10 +25,10 @@\n       <QPG:Files>\n          <QPG:Add file=\"../zconf.h\" install=\"/opt/include/\" user=\"root:sys\" permission=\"644\"/>\n          <QPG:Add file=\"../zlib.h\" install=\"/opt/include/\" user=\"root:sys\" permission=\"644\"/>\n-         <QPG:Add file=\"../libz.so.1.2.7\" install=\"/opt/lib/\" user=\"root:bin\" permission=\"644\"/>\n-         <QPG:Add file=\"libz.so\" install=\"/opt/lib/\" component=\"dev\" filetype=\"symlink\" linkto=\"libz.so.1.2.7\"/>\n-         <QPG:Add file=\"libz.so.1\" install=\"/opt/lib/\" filetype=\"symlink\" linkto=\"libz.so.1.2.7\"/>\n-         <QPG:Add file=\"../libz.so.1.2.7\" install=\"/opt/lib/\" component=\"slib\"/>\n+         <QPG:Add file=\"../libz.so.1.2.8\" install=\"/opt/lib/\" user=\"root:bin\" permission=\"644\"/>\n+         <QPG:Add file=\"libz.so\" install=\"/opt/lib/\" component=\"dev\" filetype=\"symlink\" linkto=\"libz.so.1.2.8\"/>\n+         <QPG:Add file=\"libz.so.1\" install=\"/opt/lib/\" filetype=\"symlink\" linkto=\"libz.so.1.2.8\"/>\n+         <QPG:Add file=\"../libz.so.1.2.8\" install=\"/opt/lib/\" component=\"slib\"/>\n       </QPG:Files>\n \n       <QPG:PackageFilter>\n@@ -63,7 +63,7 @@\n             </QPM:ProductDescription>\n \n             <QPM:ReleaseDescription>\n-               <QPM:ReleaseVersion>1.2.7</QPM:ReleaseVersion>\n+               <QPM:ReleaseVersion>1.2.8</QPM:ReleaseVersion>\n                <QPM:ReleaseUrgency>Medium</QPM:ReleaseUrgency>\n                <QPM:ReleaseStability>Stable</QPM:ReleaseStability>\n                <QPM:ReleaseNoteMinor></QPM:ReleaseNoteMinor>"}, {"sha": "138a699bd53e60250b3eed61e631175ef0452630", "filename": "zlib/test/example.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Ftest%2Fexample.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Ftest%2Fexample.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Ftest%2Fexample.c?ref=cd9ec14217a566fa0ae12ccf34534cbb7680f5ab", "patch": "@@ -26,7 +26,7 @@\n     } \\\n }\n \n-const char hello[] = \"hello, hello!\";\n+z_const char hello[] = \"hello, hello!\";\n /* \"hello world\" would be more standard, but the repeated \"hello\"\n  * stresses the compression code better, sorry...\n  */\n@@ -212,7 +212,7 @@ void test_deflate(compr, comprLen)\n     err = deflateInit(&c_stream, Z_DEFAULT_COMPRESSION);\n     CHECK_ERR(err, \"deflateInit\");\n \n-    c_stream.next_in  = (Bytef*)hello;\n+    c_stream.next_in  = (z_const unsigned char *)hello;\n     c_stream.next_out = compr;\n \n     while (c_stream.total_in != len && c_stream.total_out < comprLen) {\n@@ -387,7 +387,7 @@ void test_flush(compr, comprLen)\n     err = deflateInit(&c_stream, Z_DEFAULT_COMPRESSION);\n     CHECK_ERR(err, \"deflateInit\");\n \n-    c_stream.next_in  = (Bytef*)hello;\n+    c_stream.next_in  = (z_const unsigned char *)hello;\n     c_stream.next_out = compr;\n     c_stream.avail_in = 3;\n     c_stream.avail_out = (uInt)*comprLen;\n@@ -476,7 +476,7 @@ void test_dict_deflate(compr, comprLen)\n     c_stream.next_out = compr;\n     c_stream.avail_out = (uInt)comprLen;\n \n-    c_stream.next_in = (Bytef*)hello;\n+    c_stream.next_in = (z_const unsigned char *)hello;\n     c_stream.avail_in = (uInt)strlen(hello)+1;\n \n     err = deflate(&c_stream, Z_FINISH);"}, {"sha": "b3025a489a91b4cf986e8873705dd276b44ad129", "filename": "zlib/test/minigzip.c", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Ftest%2Fminigzip.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Ftest%2Fminigzip.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Ftest%2Fminigzip.c?ref=cd9ec14217a566fa0ae12ccf34534cbb7680f5ab", "patch": "@@ -40,6 +40,10 @@\n #  define SET_BINARY_MODE(file)\n #endif\n \n+#ifdef _MSC_VER\n+#  define snprintf _snprintf\n+#endif\n+\n #ifdef VMS\n #  define unlink delete\n #  define GZ_SUFFIX \"-gz\"\n@@ -463,8 +467,12 @@ void file_compress(file, mode)\n         exit(1);\n     }\n \n+#if !defined(NO_snprintf) && !defined(NO_vsnprintf)\n+    snprintf(outfile, sizeof(outfile), \"%s%s\", file, GZ_SUFFIX);\n+#else\n     strcpy(outfile, file);\n     strcat(outfile, GZ_SUFFIX);\n+#endif\n \n     in = fopen(file, \"rb\");\n     if (in == NULL) {\n@@ -499,7 +507,11 @@ void file_uncompress(file)\n         exit(1);\n     }\n \n+#if !defined(NO_snprintf) && !defined(NO_vsnprintf)\n+    snprintf(buf, sizeof(buf), \"%s\", file);\n+#else\n     strcpy(buf, file);\n+#endif\n \n     if (len > SUFFIX_LEN && strcmp(file+len-SUFFIX_LEN, GZ_SUFFIX) == 0) {\n         infile = file;\n@@ -508,7 +520,11 @@ void file_uncompress(file)\n     } else {\n         outfile = file;\n         infile = buf;\n+#if !defined(NO_snprintf) && !defined(NO_vsnprintf)\n+        snprintf(buf + len, sizeof(buf) - len, \"%s\", GZ_SUFFIX);\n+#else\n         strcat(infile, GZ_SUFFIX);\n+#endif\n     }\n     in = gzopen(infile, \"rb\");\n     if (in == NULL) {\n@@ -546,7 +562,11 @@ int main(argc, argv)\n     gzFile file;\n     char *bname, outmode[20];\n \n+#if !defined(NO_snprintf) && !defined(NO_vsnprintf)\n+    snprintf(outmode, sizeof(outmode), \"%s\", \"wb6 \");\n+#else\n     strcpy(outmode, \"wb6 \");\n+#endif\n \n     prog = argv[0];\n     bname = strrchr(argv[0], '/');"}, {"sha": "38d29d75efc79b94ac7155f6e07acb3e4d8f04c0", "filename": "zlib/treebuild.xml", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Ftreebuild.xml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Ftreebuild.xml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Ftreebuild.xml?ref=cd9ec14217a566fa0ae12ccf34534cbb7680f5ab", "patch": "@@ -1,6 +1,6 @@\n <?xml version=\"1.0\" ?>\n-<package name=\"zlib\" version=\"1.2.7\">\n-    <library name=\"zlib\" dlversion=\"1.2.7\" dlname=\"z\">\n+<package name=\"zlib\" version=\"1.2.8\">\n+    <library name=\"zlib\" dlversion=\"1.2.8\" dlname=\"z\">\n \t<property name=\"description\"> zip compression library </property>\n \t<property name=\"include-target-dir\" value=\"$(@PACKAGE/install-includedir)\" />\n "}, {"sha": "4b5dfa1b97ef56dfdb497a7bf920e887e9e22f05", "filename": "zlib/trees.c", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Ftrees.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Ftrees.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Ftrees.c?ref=cd9ec14217a566fa0ae12ccf34534cbb7680f5ab", "patch": "@@ -146,8 +146,8 @@ local void send_tree      OF((deflate_state *s, ct_data *tree, int max_code));\n local int  build_bl_tree  OF((deflate_state *s));\n local void send_all_trees OF((deflate_state *s, int lcodes, int dcodes,\n                               int blcodes));\n-local void compress_block OF((deflate_state *s, ct_data *ltree,\n-                              ct_data *dtree));\n+local void compress_block OF((deflate_state *s, const ct_data *ltree,\n+                              const ct_data *dtree));\n local int  detect_data_type OF((deflate_state *s));\n local unsigned bi_reverse OF((unsigned value, int length));\n local void bi_windup      OF((deflate_state *s));\n@@ -972,15 +972,17 @@ void ZLIB_INTERNAL _tr_flush_block(s, buf, stored_len, last)\n     } else if (s->strategy == Z_FIXED || static_lenb == opt_lenb) {\n #endif\n         send_bits(s, (STATIC_TREES<<1)+last, 3);\n-        compress_block(s, (ct_data *)static_ltree, (ct_data *)static_dtree);\n+        compress_block(s, (const ct_data *)static_ltree,\n+                       (const ct_data *)static_dtree);\n #ifdef DEBUG\n         s->compressed_len += 3 + s->static_len;\n #endif\n     } else {\n         send_bits(s, (DYN_TREES<<1)+last, 3);\n         send_all_trees(s, s->l_desc.max_code+1, s->d_desc.max_code+1,\n                        max_blindex+1);\n-        compress_block(s, (ct_data *)s->dyn_ltree, (ct_data *)s->dyn_dtree);\n+        compress_block(s, (const ct_data *)s->dyn_ltree,\n+                       (const ct_data *)s->dyn_dtree);\n #ifdef DEBUG\n         s->compressed_len += 3 + s->opt_len;\n #endif\n@@ -1057,8 +1059,8 @@ int ZLIB_INTERNAL _tr_tally (s, dist, lc)\n  */\n local void compress_block(s, ltree, dtree)\n     deflate_state *s;\n-    ct_data *ltree; /* literal tree */\n-    ct_data *dtree; /* distance tree */\n+    const ct_data *ltree; /* literal tree */\n+    const ct_data *dtree; /* distance tree */\n {\n     unsigned dist;      /* distance of matched string */\n     int lc;             /* match length or unmatched char (if dist == 0) */"}, {"sha": "cf2e3a0486b8135cdda058ac7f668636c736d95e", "filename": "zlib/uncompr.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Funcompr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Funcompr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Funcompr.c?ref=cd9ec14217a566fa0ae12ccf34534cbb7680f5ab", "patch": "@@ -30,7 +30,7 @@ int ZEXPORT uncompress (dest, destLen, source, sourceLen)\n     z_stream stream;\n     int err;\n \n-    stream.next_in = (Bytef*)source;\n+    stream.next_in = (z_const Bytef *)source;\n     stream.avail_in = (uInt)sourceLen;\n     /* Check for source > 64K on 16-bit machine: */\n     if ((uLong)stream.avail_in != sourceLen) return Z_BUF_ERROR;"}, {"sha": "67b773171da2dc4a5623f44e40dba573c2f9f8e5", "filename": "zlib/win32/Makefile.msc", "status": "modified", "additions": 40, "deletions": 37, "changes": 77, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Fwin32%2FMakefile.msc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Fwin32%2FMakefile.msc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fwin32%2FMakefile.msc?ref=cd9ec14217a566fa0ae12ccf34534cbb7680f5ab", "patch": "@@ -9,6 +9,10 @@\n #   nmake -f win32/Makefile.msc AS=ml64 LOC=\"-DASMV -DASMINF -I.\" \\\n #         OBJA=\"inffasx64.obj gvmat64.obj inffas8664.obj\"  (use ASM code, x64)\n \n+# The toplevel directory of the source tree.\n+#\n+TOP = .\n+\n # optional build flags\n LOC =\n \n@@ -43,8 +47,8 @@ $(STATICLIB): $(OBJS) $(OBJA)\n \n $(IMPLIB): $(SHAREDLIB)\n \n-$(SHAREDLIB): win32/zlib.def $(OBJS) $(OBJA) zlib1.res\n-\t$(LD) $(LDFLAGS) -def:win32/zlib.def -dll -implib:$(IMPLIB) \\\n+$(SHAREDLIB): $(TOP)/win32/zlib.def $(OBJS) $(OBJA) zlib1.res\n+\t$(LD) $(LDFLAGS) -def:$(TOP)/win32/zlib.def -dll -implib:$(IMPLIB) \\\n \t  -out:$@ -base:0x5A4C0000 $(OBJS) $(OBJA) zlib1.res\n \tif exist $@.manifest \\\n \t  mt -nologo -manifest $@.manifest -outputresource:$@;2\n@@ -69,72 +73,71 @@ minigzip_d.exe: minigzip.obj $(IMPLIB)\n \tif exist $@.manifest \\\n \t  mt -nologo -manifest $@.manifest -outputresource:$@;1\n \n-.c.obj:\n+{$(TOP)}.c.obj:\n \t$(CC) -c $(WFLAGS) $(CFLAGS) $<\n \n-{test}.c.obj:\n-\t$(CC) -c -I. $(WFLAGS) $(CFLAGS) $<\n+{$(TOP)/test}.c.obj:\n+\t$(CC) -c -I$(TOP) $(WFLAGS) $(CFLAGS) $<\n \n-{contrib/masmx64}.c.obj:\n+{$(TOP)/contrib/masmx64}.c.obj:\n \t$(CC) -c $(WFLAGS) $(CFLAGS) $<\n \n-{contrib/masmx64}.asm.obj:\n+{$(TOP)/contrib/masmx64}.asm.obj:\n \t$(AS) -c $(ASFLAGS) $<\n \n-{contrib/masmx86}.asm.obj:\n+{$(TOP)/contrib/masmx86}.asm.obj:\n \t$(AS) -c $(ASFLAGS) $<\n \n-adler32.obj: adler32.c zlib.h zconf.h\n-\n-compress.obj: compress.c zlib.h zconf.h\n+adler32.obj: $(TOP)/adler32.c $(TOP)/zlib.h $(TOP)/zconf.h\n \n-crc32.obj: crc32.c zlib.h zconf.h crc32.h\n+compress.obj: $(TOP)/compress.c $(TOP)/zlib.h $(TOP)/zconf.h\n \n-deflate.obj: deflate.c deflate.h zutil.h zlib.h zconf.h\n+crc32.obj: $(TOP)/crc32.c $(TOP)/zlib.h $(TOP)/zconf.h $(TOP)/crc32.h\n \n-gzclose.obj: gzclose.c zlib.h zconf.h gzguts.h\n+deflate.obj: $(TOP)/deflate.c $(TOP)/deflate.h $(TOP)/zutil.h $(TOP)/zlib.h $(TOP)/zconf.h\n \n-gzlib.obj: gzlib.c zlib.h zconf.h gzguts.h\n+gzclose.obj: $(TOP)/gzclose.c $(TOP)/zlib.h $(TOP)/zconf.h $(TOP)/gzguts.h\n \n-gzread.obj: gzread.c zlib.h zconf.h gzguts.h\n+gzlib.obj: $(TOP)/gzlib.c $(TOP)/zlib.h $(TOP)/zconf.h $(TOP)/gzguts.h\n \n-gzwrite.obj: gzwrite.c zlib.h zconf.h gzguts.h\n+gzread.obj: $(TOP)/gzread.c $(TOP)/zlib.h $(TOP)/zconf.h $(TOP)/gzguts.h\n \n-infback.obj: infback.c zutil.h zlib.h zconf.h inftrees.h inflate.h \\\n-             inffast.h inffixed.h\n+gzwrite.obj: $(TOP)/gzwrite.c $(TOP)/zlib.h $(TOP)/zconf.h $(TOP)/gzguts.h\n \n-inffast.obj: inffast.c zutil.h zlib.h zconf.h inftrees.h inflate.h \\\n-             inffast.h\n+infback.obj: $(TOP)/infback.c $(TOP)/zutil.h $(TOP)/zlib.h $(TOP)/zconf.h $(TOP)/inftrees.h $(TOP)/inflate.h \\\n+             $(TOP)/inffast.h $(TOP)/inffixed.h\n \n-inflate.obj: inflate.c zutil.h zlib.h zconf.h inftrees.h inflate.h \\\n-             inffast.h inffixed.h\n+inffast.obj: $(TOP)/inffast.c $(TOP)/zutil.h $(TOP)/zlib.h $(TOP)/zconf.h $(TOP)/inftrees.h $(TOP)/inflate.h \\\n+             $(TOP)/inffast.h\n \n-inftrees.obj: inftrees.c zutil.h zlib.h zconf.h inftrees.h\n+inflate.obj: $(TOP)/inflate.c $(TOP)/zutil.h $(TOP)/zlib.h $(TOP)/zconf.h $(TOP)/inftrees.h $(TOP)/inflate.h \\\n+             $(TOP)/inffast.h $(TOP)/inffixed.h\n \n-trees.obj: trees.c zutil.h zlib.h zconf.h deflate.h trees.h\n+inftrees.obj: $(TOP)/inftrees.c $(TOP)/zutil.h $(TOP)/zlib.h $(TOP)/zconf.h $(TOP)/inftrees.h\n \n-uncompr.obj: uncompr.c zlib.h zconf.h\n+trees.obj: $(TOP)/trees.c $(TOP)/zutil.h $(TOP)/zlib.h $(TOP)/zconf.h $(TOP)/deflate.h $(TOP)/trees.h\n \n-zutil.obj: zutil.c zutil.h zlib.h zconf.h\n+uncompr.obj: $(TOP)/uncompr.c $(TOP)/zlib.h $(TOP)/zconf.h\n \n-gvmat64.obj: contrib\\masmx64\\gvmat64.asm\n+zutil.obj: $(TOP)/zutil.c $(TOP)/zutil.h $(TOP)/zlib.h $(TOP)/zconf.h\n \n-inffasx64.obj: contrib\\masmx64\\inffasx64.asm\n+gvmat64.obj: $(TOP)/contrib\\masmx64\\gvmat64.asm\n \n-inffas8664.obj: contrib\\masmx64\\inffas8664.c zutil.h zlib.h zconf.h \\\n-\t\tinftrees.h inflate.h inffast.h\n+inffasx64.obj: $(TOP)/contrib\\masmx64\\inffasx64.asm\n \n-inffas32.obj: contrib\\masmx86\\inffas32.asm\n+inffas8664.obj: $(TOP)/contrib\\masmx64\\inffas8664.c $(TOP)/zutil.h $(TOP)/zlib.h $(TOP)/zconf.h \\\n+\t\t$(TOP)/inftrees.h $(TOP)/inflate.h $(TOP)/inffast.h\n \n-match686.obj: contrib\\masmx86\\match686.asm\n+inffas32.obj: $(TOP)/contrib\\masmx86\\inffas32.asm\n \n-example.obj: test/example.c zlib.h zconf.h\n+match686.obj: $(TOP)/contrib\\masmx86\\match686.asm\n \n-minigzip.obj: test/minigzip.c zlib.h zconf.h\n+example.obj: $(TOP)/test/example.c $(TOP)/zlib.h $(TOP)/zconf.h\n \n-zlib1.res: win32/zlib1.rc\n-\t$(RC) $(RCFLAGS) /fo$@ win32/zlib1.rc\n+minigzip.obj: $(TOP)/test/minigzip.c $(TOP)/zlib.h $(TOP)/zconf.h\n \n+zlib1.res: $(TOP)/win32/zlib1.rc\n+\t$(RC) $(RCFLAGS) /fo$@ $(TOP)/win32/zlib1.rc\n \n # testing\n test: example.exe minigzip.exe"}, {"sha": "3d77d521e83f6264cde310ed48ec462ef1177571", "filename": "zlib/win32/README-WIN32.txt", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Fwin32%2FREADME-WIN32.txt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Fwin32%2FREADME-WIN32.txt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fwin32%2FREADME-WIN32.txt?ref=cd9ec14217a566fa0ae12ccf34534cbb7680f5ab", "patch": "@@ -1,6 +1,6 @@\n ZLIB DATA COMPRESSION LIBRARY\n \n-zlib 1.2.7 is a general purpose data compression library.  All the code is\n+zlib 1.2.8 is a general purpose data compression library.  All the code is\n thread safe.  The data format used by the zlib library is described by RFCs\n (Request for Comments) 1950 to 1952 in the files\n http://www.ietf.org/rfc/rfc1950.txt (zlib format), rfc1951.txt (deflate format)\n@@ -22,7 +22,7 @@ before asking for help.\n \n Manifest:\n \n-The package zlib-1.2.7-win32-x86.zip will contain the following files:\n+The package zlib-1.2.8-win32-x86.zip will contain the following files:\n \n   README-WIN32.txt This document\n   ChangeLog        Changes since previous zlib packages"}, {"sha": "face655183a63bd30e4c226272bc0273119f1611", "filename": "zlib/win32/zlib.def", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Fwin32%2Fzlib.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Fwin32%2Fzlib.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fwin32%2Fzlib.def?ref=cd9ec14217a566fa0ae12ccf34534cbb7680f5ab", "patch": "@@ -17,6 +17,7 @@ EXPORTS\n     deflatePrime\n     deflateSetHeader\n     inflateSetDictionary\n+    inflateGetDictionary\n     inflateSync\n     inflateCopy\n     inflateReset\n@@ -39,6 +40,7 @@ EXPORTS\n     gzread\n     gzwrite\n     gzprintf\n+    gzvprintf\n     gzputs\n     gzgets\n     gzputc"}, {"sha": "5c0feed1b44534c971832ec000224d513f9d517b", "filename": "zlib/win32/zlib1.rc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Fwin32%2Fzlib1.rc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Fwin32%2Fzlib1.rc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fwin32%2Fzlib1.rc?ref=cd9ec14217a566fa0ae12ccf34534cbb7680f5ab", "patch": "@@ -26,7 +26,7 @@ BEGIN\n       VALUE \"FileDescription\",\t\"zlib data compression library\\0\"\n       VALUE \"FileVersion\",\tZLIB_VERSION \"\\0\"\n       VALUE \"InternalName\",\t\"zlib1.dll\\0\"\n-      VALUE \"LegalCopyright\",\t\"(C) 1995-2006 Jean-loup Gailly & Mark Adler\\0\"\n+      VALUE \"LegalCopyright\",\t\"(C) 1995-2013 Jean-loup Gailly & Mark Adler\\0\"\n       VALUE \"OriginalFilename\",\t\"zlib1.dll\\0\"\n       VALUE \"ProductName\",\t\"zlib\\0\"\n       VALUE \"ProductVersion\",\tZLIB_VERSION \"\\0\""}, {"sha": "da7fd94a367682b499794501e261ba34a65a9030", "filename": "zlib/zconf.h", "status": "modified", "additions": 19, "deletions": 14, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Fzconf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Fzconf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fzconf.h?ref=cd9ec14217a566fa0ae12ccf34534cbb7680f5ab", "patch": "@@ -1,5 +1,5 @@\n /* zconf.h -- configuration of the zlib compression library\n- * Copyright (C) 1995-2012 Jean-loup Gailly.\n+ * Copyright (C) 1995-2013 Jean-loup Gailly.\n  * For conditions of distribution and use, see copyright notice in zlib.h\n  */\n \n@@ -21,6 +21,7 @@\n #  define _dist_code            z__dist_code\n #  define _length_code          z__length_code\n #  define _tr_align             z__tr_align\n+#  define _tr_flush_bits        z__tr_flush_bits\n #  define _tr_flush_block       z__tr_flush_block\n #  define _tr_init              z__tr_init\n #  define _tr_stored_block      z__tr_stored_block\n@@ -77,6 +78,7 @@\n #      define gzopen_w              z_gzopen_w\n #    endif\n #    define gzprintf              z_gzprintf\n+#    define gzvprintf             z_gzvprintf\n #    define gzputc                z_gzputc\n #    define gzputs                z_gzputs\n #    define gzread                z_gzread\n@@ -103,6 +105,7 @@\n #  define inflateReset          z_inflateReset\n #  define inflateReset2         z_inflateReset2\n #  define inflateSetDictionary  z_inflateSetDictionary\n+#  define inflateGetDictionary  z_inflateGetDictionary\n #  define inflateSync           z_inflateSync\n #  define inflateSyncPoint      z_inflateSyncPoint\n #  define inflateUndermine      z_inflateUndermine\n@@ -388,20 +391,14 @@ typedef uLong FAR uLongf;\n    typedef Byte       *voidp;\n #endif\n \n-/* ./configure may #define Z_U4 here */\n-\n #if !defined(Z_U4) && !defined(Z_SOLO) && defined(STDC)\n #  include <limits.h>\n #  if (UINT_MAX == 0xffffffffUL)\n #    define Z_U4 unsigned\n-#  else\n-#    if (ULONG_MAX == 0xffffffffUL)\n-#      define Z_U4 unsigned long\n-#    else\n-#      if (USHRT_MAX == 0xffffffffUL)\n-#        define Z_U4 unsigned short\n-#      endif\n-#    endif\n+#  elif (ULONG_MAX == 0xffffffffUL)\n+#    define Z_U4 unsigned long\n+#  elif (USHRT_MAX == 0xffffffffUL)\n+#    define Z_U4 unsigned short\n #  endif\n #endif\n \n@@ -425,8 +422,16 @@ typedef uLong FAR uLongf;\n #  endif\n #endif\n \n+#if defined(STDC) || defined(Z_HAVE_STDARG_H)\n+#  ifndef Z_SOLO\n+#    include <stdarg.h>         /* for va_list */\n+#  endif\n+#endif\n+\n #ifdef _WIN32\n-#  include <stddef.h>           /* for wchar_t */\n+#  ifndef Z_SOLO\n+#    include <stddef.h>         /* for wchar_t */\n+#  endif\n #endif\n \n /* a little trick to accommodate both \"#define _LARGEFILE64_SOURCE\" and\n@@ -435,15 +440,15 @@ typedef uLong FAR uLongf;\n  * both \"#undef _LARGEFILE64_SOURCE\" and \"#define _LARGEFILE64_SOURCE 0\" as\n  * equivalently requesting no 64-bit operations\n  */\n-#if defined(LARGEFILE64_SOURCE) && -_LARGEFILE64_SOURCE - -1 == 1\n+#if defined(_LARGEFILE64_SOURCE) && -_LARGEFILE64_SOURCE - -1 == 1\n #  undef _LARGEFILE64_SOURCE\n #endif\n \n #if defined(__WATCOMC__) && !defined(Z_HAVE_UNISTD_H)\n #  define Z_HAVE_UNISTD_H\n #endif\n #ifndef Z_SOLO\n-#  if defined(Z_HAVE_UNISTD_H) || defined(LARGEFILE64_SOURCE)\n+#  if defined(Z_HAVE_UNISTD_H) || defined(_LARGEFILE64_SOURCE)\n #    include <unistd.h>         /* for SEEK_*, off_t, and _LFS64_LARGEFILE */\n #    ifdef VMS\n #      include <unixio.h>       /* for off_t */"}, {"sha": "043019cda1db5ec2ca6a7c82acce4d559e9787d0", "filename": "zlib/zconf.h.cmakein", "status": "modified", "additions": 19, "deletions": 14, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Fzconf.h.cmakein", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Fzconf.h.cmakein", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fzconf.h.cmakein?ref=cd9ec14217a566fa0ae12ccf34534cbb7680f5ab", "patch": "@@ -1,5 +1,5 @@\n /* zconf.h -- configuration of the zlib compression library\n- * Copyright (C) 1995-2012 Jean-loup Gailly.\n+ * Copyright (C) 1995-2013 Jean-loup Gailly.\n  * For conditions of distribution and use, see copyright notice in zlib.h\n  */\n \n@@ -23,6 +23,7 @@\n #  define _dist_code            z__dist_code\n #  define _length_code          z__length_code\n #  define _tr_align             z__tr_align\n+#  define _tr_flush_bits        z__tr_flush_bits\n #  define _tr_flush_block       z__tr_flush_block\n #  define _tr_init              z__tr_init\n #  define _tr_stored_block      z__tr_stored_block\n@@ -79,6 +80,7 @@\n #      define gzopen_w              z_gzopen_w\n #    endif\n #    define gzprintf              z_gzprintf\n+#    define gzvprintf             z_gzvprintf\n #    define gzputc                z_gzputc\n #    define gzputs                z_gzputs\n #    define gzread                z_gzread\n@@ -105,6 +107,7 @@\n #  define inflateReset          z_inflateReset\n #  define inflateReset2         z_inflateReset2\n #  define inflateSetDictionary  z_inflateSetDictionary\n+#  define inflateGetDictionary  z_inflateGetDictionary\n #  define inflateSync           z_inflateSync\n #  define inflateSyncPoint      z_inflateSyncPoint\n #  define inflateUndermine      z_inflateUndermine\n@@ -390,20 +393,14 @@ typedef uLong FAR uLongf;\n    typedef Byte       *voidp;\n #endif\n \n-/* ./configure may #define Z_U4 here */\n-\n #if !defined(Z_U4) && !defined(Z_SOLO) && defined(STDC)\n #  include <limits.h>\n #  if (UINT_MAX == 0xffffffffUL)\n #    define Z_U4 unsigned\n-#  else\n-#    if (ULONG_MAX == 0xffffffffUL)\n-#      define Z_U4 unsigned long\n-#    else\n-#      if (USHRT_MAX == 0xffffffffUL)\n-#        define Z_U4 unsigned short\n-#      endif\n-#    endif\n+#  elif (ULONG_MAX == 0xffffffffUL)\n+#    define Z_U4 unsigned long\n+#  elif (USHRT_MAX == 0xffffffffUL)\n+#    define Z_U4 unsigned short\n #  endif\n #endif\n \n@@ -427,8 +424,16 @@ typedef uLong FAR uLongf;\n #  endif\n #endif\n \n+#if defined(STDC) || defined(Z_HAVE_STDARG_H)\n+#  ifndef Z_SOLO\n+#    include <stdarg.h>         /* for va_list */\n+#  endif\n+#endif\n+\n #ifdef _WIN32\n-#  include <stddef.h>           /* for wchar_t */\n+#  ifndef Z_SOLO\n+#    include <stddef.h>         /* for wchar_t */\n+#  endif\n #endif\n \n /* a little trick to accommodate both \"#define _LARGEFILE64_SOURCE\" and\n@@ -437,15 +442,15 @@ typedef uLong FAR uLongf;\n  * both \"#undef _LARGEFILE64_SOURCE\" and \"#define _LARGEFILE64_SOURCE 0\" as\n  * equivalently requesting no 64-bit operations\n  */\n-#if defined(LARGEFILE64_SOURCE) && -_LARGEFILE64_SOURCE - -1 == 1\n+#if defined(_LARGEFILE64_SOURCE) && -_LARGEFILE64_SOURCE - -1 == 1\n #  undef _LARGEFILE64_SOURCE\n #endif\n \n #if defined(__WATCOMC__) && !defined(Z_HAVE_UNISTD_H)\n #  define Z_HAVE_UNISTD_H\n #endif\n #ifndef Z_SOLO\n-#  if defined(Z_HAVE_UNISTD_H) || defined(LARGEFILE64_SOURCE)\n+#  if defined(Z_HAVE_UNISTD_H) || defined(_LARGEFILE64_SOURCE)\n #    include <unistd.h>         /* for SEEK_*, off_t, and _LFS64_LARGEFILE */\n #    ifdef VMS\n #      include <unixio.h>       /* for off_t */"}, {"sha": "9987a775530c0393e7c27b73b1e854b946d5ee47", "filename": "zlib/zconf.h.in", "status": "modified", "additions": 19, "deletions": 14, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Fzconf.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Fzconf.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fzconf.h.in?ref=cd9ec14217a566fa0ae12ccf34534cbb7680f5ab", "patch": "@@ -1,5 +1,5 @@\n /* zconf.h -- configuration of the zlib compression library\n- * Copyright (C) 1995-2012 Jean-loup Gailly.\n+ * Copyright (C) 1995-2013 Jean-loup Gailly.\n  * For conditions of distribution and use, see copyright notice in zlib.h\n  */\n \n@@ -21,6 +21,7 @@\n #  define _dist_code            z__dist_code\n #  define _length_code          z__length_code\n #  define _tr_align             z__tr_align\n+#  define _tr_flush_bits        z__tr_flush_bits\n #  define _tr_flush_block       z__tr_flush_block\n #  define _tr_init              z__tr_init\n #  define _tr_stored_block      z__tr_stored_block\n@@ -77,6 +78,7 @@\n #      define gzopen_w              z_gzopen_w\n #    endif\n #    define gzprintf              z_gzprintf\n+#    define gzvprintf             z_gzvprintf\n #    define gzputc                z_gzputc\n #    define gzputs                z_gzputs\n #    define gzread                z_gzread\n@@ -103,6 +105,7 @@\n #  define inflateReset          z_inflateReset\n #  define inflateReset2         z_inflateReset2\n #  define inflateSetDictionary  z_inflateSetDictionary\n+#  define inflateGetDictionary  z_inflateGetDictionary\n #  define inflateSync           z_inflateSync\n #  define inflateSyncPoint      z_inflateSyncPoint\n #  define inflateUndermine      z_inflateUndermine\n@@ -388,20 +391,14 @@ typedef uLong FAR uLongf;\n    typedef Byte       *voidp;\n #endif\n \n-/* ./configure may #define Z_U4 here */\n-\n #if !defined(Z_U4) && !defined(Z_SOLO) && defined(STDC)\n #  include <limits.h>\n #  if (UINT_MAX == 0xffffffffUL)\n #    define Z_U4 unsigned\n-#  else\n-#    if (ULONG_MAX == 0xffffffffUL)\n-#      define Z_U4 unsigned long\n-#    else\n-#      if (USHRT_MAX == 0xffffffffUL)\n-#        define Z_U4 unsigned short\n-#      endif\n-#    endif\n+#  elif (ULONG_MAX == 0xffffffffUL)\n+#    define Z_U4 unsigned long\n+#  elif (USHRT_MAX == 0xffffffffUL)\n+#    define Z_U4 unsigned short\n #  endif\n #endif\n \n@@ -425,8 +422,16 @@ typedef uLong FAR uLongf;\n #  endif\n #endif\n \n+#if defined(STDC) || defined(Z_HAVE_STDARG_H)\n+#  ifndef Z_SOLO\n+#    include <stdarg.h>         /* for va_list */\n+#  endif\n+#endif\n+\n #ifdef _WIN32\n-#  include <stddef.h>           /* for wchar_t */\n+#  ifndef Z_SOLO\n+#    include <stddef.h>         /* for wchar_t */\n+#  endif\n #endif\n \n /* a little trick to accommodate both \"#define _LARGEFILE64_SOURCE\" and\n@@ -435,15 +440,15 @@ typedef uLong FAR uLongf;\n  * both \"#undef _LARGEFILE64_SOURCE\" and \"#define _LARGEFILE64_SOURCE 0\" as\n  * equivalently requesting no 64-bit operations\n  */\n-#if defined(LARGEFILE64_SOURCE) && -_LARGEFILE64_SOURCE - -1 == 1\n+#if defined(_LARGEFILE64_SOURCE) && -_LARGEFILE64_SOURCE - -1 == 1\n #  undef _LARGEFILE64_SOURCE\n #endif\n \n #if defined(__WATCOMC__) && !defined(Z_HAVE_UNISTD_H)\n #  define Z_HAVE_UNISTD_H\n #endif\n #ifndef Z_SOLO\n-#  if defined(Z_HAVE_UNISTD_H) || defined(LARGEFILE64_SOURCE)\n+#  if defined(Z_HAVE_UNISTD_H) || defined(_LARGEFILE64_SOURCE)\n #    include <unistd.h>         /* for SEEK_*, off_t, and _LFS64_LARGEFILE */\n #    ifdef VMS\n #      include <unixio.h>       /* for off_t */"}, {"sha": "0160e62b69f419e1eb903cf1d323c07e1ec19936", "filename": "zlib/zlib.3", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Fzlib.3", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Fzlib.3", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fzlib.3?ref=cd9ec14217a566fa0ae12ccf34534cbb7680f5ab", "patch": "@@ -1,4 +1,4 @@\n-.TH ZLIB 3 \"2 May 2012\"\n+.TH ZLIB 3 \"28 Apr 2013\"\n .SH NAME\n zlib \\- compression/decompression library\n .SH SYNOPSIS\n@@ -125,8 +125,8 @@ before asking for help.\n Send questions and/or comments to zlib@gzip.org,\n or (for the Windows DLL version) to Gilles Vollant (info@winimage.com).\n .SH AUTHORS\n-Version 1.2.7\n-Copyright (C) 1995-2012 Jean-loup Gailly (jloup@gzip.org)\n+Version 1.2.8\n+Copyright (C) 1995-2013 Jean-loup Gailly (jloup@gzip.org)\n and Mark Adler (madler@alumni.caltech.edu).\n .LP\n This software is provided \"as-is,\""}, {"sha": "3e0c7672ac51d93782f020bba32eb1207617e70a", "filename": "zlib/zlib.h", "status": "modified", "additions": 36, "deletions": 12, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Fzlib.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Fzlib.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fzlib.h?ref=cd9ec14217a566fa0ae12ccf34534cbb7680f5ab", "patch": "@@ -1,7 +1,7 @@\n /* zlib.h -- interface of the 'zlib' general purpose compression library\n-  version 1.2.7, May 2nd, 2012\n+  version 1.2.8, April 28th, 2013\n \n-  Copyright (C) 1995-2012 Jean-loup Gailly and Mark Adler\n+  Copyright (C) 1995-2013 Jean-loup Gailly and Mark Adler\n \n   This software is provided 'as-is', without any express or implied\n   warranty.  In no event will the authors be held liable for any damages\n@@ -37,11 +37,11 @@\n extern \"C\" {\n #endif\n \n-#define ZLIB_VERSION \"1.2.7\"\n-#define ZLIB_VERNUM 0x1270\n+#define ZLIB_VERSION \"1.2.8\"\n+#define ZLIB_VERNUM 0x1280\n #define ZLIB_VER_MAJOR 1\n #define ZLIB_VER_MINOR 2\n-#define ZLIB_VER_REVISION 7\n+#define ZLIB_VER_REVISION 8\n #define ZLIB_VER_SUBREVISION 0\n \n /*\n@@ -839,14 +839,29 @@ ZEXTERN int ZEXPORT inflateSetDictionary OF((z_streamp strm,\n    inflate().\n */\n \n+ZEXTERN int ZEXPORT inflateGetDictionary OF((z_streamp strm,\n+                                             Bytef *dictionary,\n+                                             uInt  *dictLength));\n+/*\n+     Returns the sliding dictionary being maintained by inflate.  dictLength is\n+   set to the number of bytes in the dictionary, and that many bytes are copied\n+   to dictionary.  dictionary must have enough space, where 32768 bytes is\n+   always enough.  If inflateGetDictionary() is called with dictionary equal to\n+   Z_NULL, then only the dictionary length is returned, and nothing is copied.\n+   Similary, if dictLength is Z_NULL, then it is not set.\n+\n+     inflateGetDictionary returns Z_OK on success, or Z_STREAM_ERROR if the\n+   stream state is inconsistent.\n+*/\n+\n ZEXTERN int ZEXPORT inflateSync OF((z_streamp strm));\n /*\n      Skips invalid compressed data until a possible full flush point (see above\n    for the description of deflate with Z_FULL_FLUSH) can be found, or until all\n    available input is skipped.  No output is provided.\n \n      inflateSync searches for a 00 00 FF FF pattern in the compressed data.\n-   All full flush points have this pattern, but not all occurences of this\n+   All full flush points have this pattern, but not all occurrences of this\n    pattern are full flush points.\n \n      inflateSync returns Z_OK if a possible full flush point has been found,\n@@ -1007,19 +1022,21 @@ ZEXTERN int ZEXPORT inflateBackInit OF((z_streamp strm, int windowBits,\n    the version of the header file.\n */\n \n-typedef unsigned (*in_func) OF((void FAR *, unsigned char FAR * FAR *));\n+typedef unsigned (*in_func) OF((void FAR *,\n+                                z_const unsigned char FAR * FAR *));\n typedef int (*out_func) OF((void FAR *, unsigned char FAR *, unsigned));\n \n ZEXTERN int ZEXPORT inflateBack OF((z_streamp strm,\n                                     in_func in, void FAR *in_desc,\n                                     out_func out, void FAR *out_desc));\n /*\n      inflateBack() does a raw inflate with a single call using a call-back\n-   interface for input and output.  This is more efficient than inflate() for\n-   file i/o applications in that it avoids copying between the output and the\n-   sliding window by simply making the window itself the output buffer.  This\n-   function trusts the application to not change the output buffer passed by\n-   the output function, at least until inflateBack() returns.\n+   interface for input and output.  This is potentially more efficient than\n+   inflate() for file i/o applications, in that it avoids copying between the\n+   output and the sliding window by simply making the window itself the output\n+   buffer.  inflate() can be faster on modern CPUs when used with large\n+   buffers.  inflateBack() trusts the application to not change the output\n+   buffer passed by the output function, at least until inflateBack() returns.\n \n      inflateBackInit() must be called first to allocate the internal state\n    and to initialize the state with the user-provided window buffer.\n@@ -1736,6 +1753,13 @@ ZEXTERN int            ZEXPORT deflateResetKeep OF((z_streamp));\n ZEXTERN gzFile         ZEXPORT gzopen_w OF((const wchar_t *path,\n                                             const char *mode));\n #endif\n+#if defined(STDC) || defined(Z_HAVE_STDARG_H)\n+#  ifndef Z_SOLO\n+ZEXTERN int            ZEXPORTVA gzvprintf Z_ARG((gzFile file,\n+                                                  const char *format,\n+                                                  va_list va));\n+#  endif\n+#endif\n \n #ifdef __cplusplus\n }"}, {"sha": "55c6647eb46f95a82af2881d4943d0457058480a", "filename": "zlib/zlib.map", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Fzlib.map", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Fzlib.map", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fzlib.map?ref=cd9ec14217a566fa0ae12ccf34534cbb7680f5ab", "patch": "@@ -76,3 +76,8 @@ ZLIB_1.2.5.2 {\n     gzgetc_;\n     inflateResetKeep;\n } ZLIB_1.2.5.1;\n+\n+ZLIB_1.2.7.1 {\n+    inflateGetDictionary;\n+    gzvprintf;\n+} ZLIB_1.2.5.2;"}, {"sha": "5c660c7e63bd7d3a99fd722788c03dea5c47a9df", "filename": "zlib/zutil.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Fzutil.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Fzutil.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fzutil.c?ref=cd9ec14217a566fa0ae12ccf34534cbb7680f5ab", "patch": "@@ -14,7 +14,7 @@\n struct internal_state      {int dummy;}; /* for buggy compilers */\n #endif\n \n-const char * const z_errmsg[10] = {\n+z_const char * const z_errmsg[10] = {\n \"need dictionary\",     /* Z_NEED_DICT       2  */\n \"stream end\",          /* Z_STREAM_END      1  */\n \"\",                    /* Z_OK              0  */"}, {"sha": "1b6fbb8a86d56f04053f875fdcb5d48708c571ce", "filename": "zlib/zutil.h", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Fzutil.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd9ec14217a566fa0ae12ccf34534cbb7680f5ab/zlib%2Fzutil.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fzutil.h?ref=cd9ec14217a566fa0ae12ccf34534cbb7680f5ab", "patch": "@@ -1,5 +1,5 @@\n /* zutil.h -- internal interface and configuration of the compression library\n- * Copyright (C) 1995-2012 Jean-loup Gailly.\n+ * Copyright (C) 1995-2013 Jean-loup Gailly.\n  * For conditions of distribution and use, see copyright notice in zlib.h\n  */\n \n@@ -44,13 +44,13 @@ typedef unsigned short ush;\n typedef ush FAR ushf;\n typedef unsigned long  ulg;\n \n-extern const char * const z_errmsg[10]; /* indexed by 2-zlib_error */\n+extern z_const char * const z_errmsg[10]; /* indexed by 2-zlib_error */\n /* (size given to avoid silly warnings with Visual C++) */\n \n #define ERR_MSG(err) z_errmsg[Z_NEED_DICT-(err)]\n \n #define ERR_RETURN(strm,err) \\\n-  return (strm->msg = (char*)ERR_MSG(err), (err))\n+  return (strm->msg = ERR_MSG(err), (err))\n /* To be used only when the state is known to be valid */\n \n         /* common constants */\n@@ -168,7 +168,8 @@ extern const char * const z_errmsg[10]; /* indexed by 2-zlib_error */\n #endif\n \n /* provide prototypes for these when building zlib without LFS */\n-#if !defined(_WIN32) && (!defined(_LARGEFILE64_SOURCE) || _LFS64_LARGEFILE-0 == 0)\n+#if !defined(_WIN32) && \\\n+    (!defined(_LARGEFILE64_SOURCE) || _LFS64_LARGEFILE-0 == 0)\n     ZEXTERN uLong ZEXPORT adler32_combine64 OF((uLong, uLong, z_off_t));\n     ZEXTERN uLong ZEXPORT crc32_combine64 OF((uLong, uLong, z_off_t));\n #endif"}]}