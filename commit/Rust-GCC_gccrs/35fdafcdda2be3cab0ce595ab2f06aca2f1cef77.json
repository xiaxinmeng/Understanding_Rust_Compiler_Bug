{"sha": "35fdafcdda2be3cab0ce595ab2f06aca2f1cef77", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzVmZGFmY2RkYTJiZTNjYWIwY2U1OTVhYjJmMDZhY2EyZjFjZWY3Nw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-10-30T11:46:20Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-10-30T11:46:20Z"}, "message": "Recommit wrongly reverted change.\n\nFrom-SVN: r216924", "tree": {"sha": "71cf6013dc9ad01fef72a378c872389bf381ccbe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/71cf6013dc9ad01fef72a378c872389bf381ccbe"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/35fdafcdda2be3cab0ce595ab2f06aca2f1cef77", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35fdafcdda2be3cab0ce595ab2f06aca2f1cef77", "html_url": "https://github.com/Rust-GCC/gccrs/commit/35fdafcdda2be3cab0ce595ab2f06aca2f1cef77", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35fdafcdda2be3cab0ce595ab2f06aca2f1cef77/comments", "author": null, "committer": null, "parents": [{"sha": "f11ac8e701b988b82ceb0d5f2fb60a22054b4d9b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f11ac8e701b988b82ceb0d5f2fb60a22054b4d9b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f11ac8e701b988b82ceb0d5f2fb60a22054b4d9b"}], "stats": {"total": 37, "additions": 20, "deletions": 17}, "files": [{"sha": "0d3f16455ee715cb7068ce22c31d4a338d85b6b9", "filename": "gcc/ada/a-cimutr.adb", "status": "modified", "additions": 11, "deletions": 10, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35fdafcdda2be3cab0ce595ab2f06aca2f1cef77/gcc%2Fada%2Fa-cimutr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35fdafcdda2be3cab0ce595ab2f06aca2f1cef77/gcc%2Fada%2Fa-cimutr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cimutr.adb?ref=35fdafcdda2be3cab0ce595ab2f06aca2f1cef77", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2004-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -1217,6 +1217,7 @@ package body Ada.Containers.Indefinite_Multiway_Trees is\n       Position  : out Cursor;\n       Count     : Count_Type := 1)\n    is\n+      First   : Tree_Node_Access;\n       Last    : Tree_Node_Access;\n       Element : Element_Access;\n \n@@ -1249,8 +1250,6 @@ package body Ada.Containers.Indefinite_Multiway_Trees is\n            with \"attempt to tamper with cursors (tree is busy)\";\n       end if;\n \n-      Position.Container := Parent.Container;\n-\n       declare\n          --  The element allocator may need an accessibility check in the case\n          --  the actual type is class-wide or has access discriminants (see\n@@ -1264,16 +1263,16 @@ package body Ada.Containers.Indefinite_Multiway_Trees is\n          Element := new Element_Type'(New_Item);\n       end;\n \n-      Position.Node := new Tree_Node_Type'(Parent  => Parent.Node,\n-                                           Element => Element,\n-                                           others  => <>);\n-\n-      Last := Position.Node;\n+      First := new Tree_Node_Type'(Parent  => Parent.Node,\n+                                   Element => Element,\n+                                   others  => <>);\n \n+      Last := First;\n       for J in Count_Type'(2) .. Count loop\n+\n          --  Reclaim other nodes if Storage_Error.  ???\n \n-         Element := new Element_Type'(New_Item);\n+         Element   := new Element_Type'(New_Item);\n          Last.Next := new Tree_Node_Type'(Parent  => Parent.Node,\n                                           Prev    => Last,\n                                           Element => Element,\n@@ -1283,7 +1282,7 @@ package body Ada.Containers.Indefinite_Multiway_Trees is\n       end loop;\n \n       Insert_Subtree_List\n-        (First  => Position.Node,\n+        (First  => First,\n          Last   => Last,\n          Parent => Parent.Node,\n          Before => Before.Node);\n@@ -1293,6 +1292,8 @@ package body Ada.Containers.Indefinite_Multiway_Trees is\n       --  nodes we just inserted.\n \n       Container.Count := Container.Count + Count;\n+\n+      Position := Cursor'(Parent.Container, First);\n    end Insert_Child;\n \n    -------------------------"}, {"sha": "63da31844a0f608417631e01133c069eefdf847a", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35fdafcdda2be3cab0ce595ab2f06aca2f1cef77/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35fdafcdda2be3cab0ce595ab2f06aca2f1cef77/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=35fdafcdda2be3cab0ce595ab2f06aca2f1cef77", "patch": "@@ -3569,11 +3569,15 @@ package body Freeze is\n             Next_Entity (Comp);\n          end loop;\n \n-         SSO_ADC := Get_Attribute_Definition_Clause\n-                      (Rec, Attribute_Scalar_Storage_Order);\n+         --  Deal with default setting of reverse storage order\n+\n+         Set_SSO_From_Default (Rec);\n \n          --  Check consistent attribute setting on component types\n \n+         SSO_ADC := Get_Attribute_Definition_Clause\n+                      (Rec, Attribute_Scalar_Storage_Order);\n+\n          declare\n             Comp_ADC_Present : Boolean;\n          begin\n@@ -3589,10 +3593,6 @@ package body Freeze is\n             end loop;\n          end;\n \n-         --  Deal with default setting of reverse storage order\n-\n-         Set_SSO_From_Default (Rec);\n-\n          --  Now deal with reverse storage order/bit order issues\n \n          if Present (SSO_ADC) then"}, {"sha": "0afab6515f34f032229fbbcb5846a26f81698b60", "filename": "gcc/ada/opt.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35fdafcdda2be3cab0ce595ab2f06aca2f1cef77/gcc%2Fada%2Fopt.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35fdafcdda2be3cab0ce595ab2f06aca2f1cef77/gcc%2Fada%2Fopt.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fopt.adb?ref=35fdafcdda2be3cab0ce595ab2f06aca2f1cef77", "patch": "@@ -171,6 +171,7 @@ package body Opt is\n \n          Ada_Version                 := Ada_Version_Runtime;\n          Ada_Version_Pragma          := Empty;\n+         Default_SSO                 := ' ';\n          Dynamic_Elaboration_Checks  := False;\n          Extensions_Allowed          := True;\n          External_Name_Exp_Casing    := As_Is;\n@@ -194,7 +195,6 @@ package body Opt is\n             Assertions_Enabled       := Assertions_Enabled_Config;\n             Assume_No_Invalid_Values := Assume_No_Invalid_Values_Config;\n             Check_Policy_List        := Check_Policy_List_Config;\n-            Default_SSO              := Default_SSO_Config;\n             SPARK_Mode               := SPARK_Mode_Config;\n             SPARK_Mode_Pragma        := SPARK_Mode_Pragma_Config;\n          else"}, {"sha": "5f70faba0ab6ea61bd9c997c573d448a938fb768", "filename": "gcc/ada/s-os_lib.adb", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35fdafcdda2be3cab0ce595ab2f06aca2f1cef77/gcc%2Fada%2Fs-os_lib.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35fdafcdda2be3cab0ce595ab2f06aca2f1cef77/gcc%2Fada%2Fs-os_lib.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-os_lib.adb?ref=35fdafcdda2be3cab0ce595ab2f06aca2f1cef77", "patch": "@@ -797,6 +797,8 @@ package body System.OS_Lib is\n          return C_Create_File (C_Name (C_Name'First)'Address);\n       end Create_New_Output_Text_File;\n \n+   --  Start of processing for Create_Temp_File_Internal\n+\n    begin\n       --  Loop until a new temp file can be created\n "}]}