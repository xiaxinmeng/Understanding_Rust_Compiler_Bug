{"sha": "f27a59cf8a51f4c28cec55545673405b20a02a98", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjI3YTU5Y2Y4YTUxZjRjMjhjZWM1NTU0NTY3MzQwNWIyMGEwMmE5OA==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2012-08-25T09:53:30Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2012-08-25T09:53:30Z"}, "message": "re PR c++/51421 ([c++0x] ICE with invalid use of auto)\n\n/cp\n2012-08-25  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/51421\n\t* decl2.c (mark_used): Consistently return false after errors\n\tabout uses before deduction of auto.\n\t* semantics.c (finish_id_expression): Check mark_used return\n\tvalue and return error_mark_node in case of failure.\n\n/testsuite\n2012-08-25  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/51421\n\t* g++.dg/cpp0x/auto34.C: New.\n\nFrom-SVN: r190665", "tree": {"sha": "2800260d9c8b267b986fcfd7872938067b8bd713", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2800260d9c8b267b986fcfd7872938067b8bd713"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f27a59cf8a51f4c28cec55545673405b20a02a98", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f27a59cf8a51f4c28cec55545673405b20a02a98", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f27a59cf8a51f4c28cec55545673405b20a02a98", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f27a59cf8a51f4c28cec55545673405b20a02a98/comments", "author": null, "committer": null, "parents": [{"sha": "cd057e3af0627c7528c19625bf972acde2b207fa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd057e3af0627c7528c19625bf972acde2b207fa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd057e3af0627c7528c19625bf972acde2b207fa"}], "stats": {"total": 52, "additions": 45, "deletions": 7}, "files": [{"sha": "845f0b4ea6caf13fc357754c284bf2a2a429a7ad", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f27a59cf8a51f4c28cec55545673405b20a02a98/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f27a59cf8a51f4c28cec55545673405b20a02a98/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=f27a59cf8a51f4c28cec55545673405b20a02a98", "patch": "@@ -1,3 +1,11 @@\n+2012-08-25  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/51421\n+\t* decl2.c (mark_used): Consistently return false after errors\n+\tabout uses before deduction of auto.\n+\t* semantics.c (finish_id_expression): Check mark_used return\n+\tvalue and return error_mark_node in case of failure.\n+\n 2012-08-24  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/51213 (again)"}, {"sha": "f76b59605ae21b57c793bbc871849d5bbc627e09", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f27a59cf8a51f4c28cec55545673405b20a02a98/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f27a59cf8a51f4c28cec55545673405b20a02a98/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=f27a59cf8a51f4c28cec55545673405b20a02a98", "patch": "@@ -4238,7 +4238,10 @@ mark_used (tree decl)\n       || DECL_THUNK_P (decl))\n     {\n       if (!processing_template_decl && type_uses_auto (TREE_TYPE (decl)))\n-\terror (\"use of %qD before deduction of %<auto%>\", decl);\n+\t{\n+\t  error (\"use of %qD before deduction of %<auto%>\", decl);\n+\t  return false;\n+\t}\n       return true;\n     }\n \n@@ -4284,7 +4287,10 @@ mark_used (tree decl)\n     }\n \n   if (type_uses_auto (TREE_TYPE (decl)))\n-    error (\"use of %qD before deduction of %<auto%>\", decl);\n+    {\n+      error (\"use of %qD before deduction of %<auto%>\", decl);\n+      return false;\n+    }\n \n   /* If we don't need a value, then we don't need to synthesize DECL.  */\n   if (cp_unevaluated_operand != 0)"}, {"sha": "d66accfa934cca6f91ea7d9cabd09eab7af72498", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f27a59cf8a51f4c28cec55545673405b20a02a98/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f27a59cf8a51f4c28cec55545673405b20a02a98/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=f27a59cf8a51f4c28cec55545673405b20a02a98", "patch": "@@ -3221,11 +3221,12 @@ finish_id_expression (tree id_expression,\n \n       /* Mark variable-like entities as used.  Functions are similarly\n \t marked either below or after overload resolution.  */\n-      if (TREE_CODE (decl) == VAR_DECL\n-\t  || TREE_CODE (decl) == PARM_DECL\n-\t  || TREE_CODE (decl) == CONST_DECL\n-\t  || TREE_CODE (decl) == RESULT_DECL)\n-\tmark_used (decl);\n+      if ((TREE_CODE (decl) == VAR_DECL\n+\t   || TREE_CODE (decl) == PARM_DECL\n+\t   || TREE_CODE (decl) == CONST_DECL\n+\t   || TREE_CODE (decl) == RESULT_DECL)\n+\t  && !mark_used (decl))\n+\treturn error_mark_node;\n \n       /* Only certain kinds of names are allowed in constant\n \t expression.  Template parameters have already"}, {"sha": "94b23a444f88c4ac2a82b2cf19d4e2ece3562494", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f27a59cf8a51f4c28cec55545673405b20a02a98/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f27a59cf8a51f4c28cec55545673405b20a02a98/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f27a59cf8a51f4c28cec55545673405b20a02a98", "patch": "@@ -1,3 +1,8 @@\n+2012-08-25  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/51421\n+\t* g++.dg/cpp0x/auto34.C: New.\n+\n 2012-08-24  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c/54363"}, {"sha": "3682d60bf4bc465c76f9a37bd4016b6c4ebbf115", "filename": "gcc/testsuite/g++.dg/cpp0x/auto34.C", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f27a59cf8a51f4c28cec55545673405b20a02a98/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto34.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f27a59cf8a51f4c28cec55545673405b20a02a98/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto34.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto34.C?ref=f27a59cf8a51f4c28cec55545673405b20a02a98", "patch": "@@ -0,0 +1,18 @@\n+// PR c++/51421\n+// { dg-do compile { target c++11 } }\n+\n+int foo1(int);\n+\n+void bar1()\n+{\n+  auto i = foo1(i);   // { dg-error \"before deduction\" }\n+}\n+\n+struct A {};\n+\n+A foo2(A);\n+\n+void bar2()\n+{\n+  auto a = foo2(a);   // { dg-error \"before deduction\" }\n+}"}]}