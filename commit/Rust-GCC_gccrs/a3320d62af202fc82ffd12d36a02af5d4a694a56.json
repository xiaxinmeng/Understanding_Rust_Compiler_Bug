{"sha": "a3320d62af202fc82ffd12d36a02af5d4a694a56", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTMzMjBkNjJhZjIwMmZjODJmZmQxMmQzNmEwMmFmNWQ0YTY5NGE1Ng==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2015-10-28T18:55:38Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2015-10-28T18:55:38Z"}, "message": "DR 1518\n\n\tDR 1518\n\t* class.c (type_has_user_provided_or_explicit_constructor): New.\n\t(check_bases_and_members): Use it.\n\t* cp-tree.h: Declare it.\n\nFrom-SVN: r229501", "tree": {"sha": "17eb39bfae398799fc8f39adbe4dd62f9f8edaa4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/17eb39bfae398799fc8f39adbe4dd62f9f8edaa4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a3320d62af202fc82ffd12d36a02af5d4a694a56", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a3320d62af202fc82ffd12d36a02af5d4a694a56", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a3320d62af202fc82ffd12d36a02af5d4a694a56", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a3320d62af202fc82ffd12d36a02af5d4a694a56/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d90ec4f2bc82f513821be7054b1eeb5c200e81af", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d90ec4f2bc82f513821be7054b1eeb5c200e81af", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d90ec4f2bc82f513821be7054b1eeb5c200e81af"}], "stats": {"total": 42, "additions": 39, "deletions": 3}, "files": [{"sha": "d4c9a4f613dce2761254656de33b8bab3ce930a7", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3320d62af202fc82ffd12d36a02af5d4a694a56/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3320d62af202fc82ffd12d36a02af5d4a694a56/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=a3320d62af202fc82ffd12d36a02af5d4a694a56", "patch": "@@ -1,3 +1,10 @@\n+2015-10-28  Jason Merrill  <jason@redhat.com>\n+\n+\tDR 1518\n+\t* class.c (type_has_user_provided_or_explicit_constructor): New.\n+\t(check_bases_and_members): Use it.\n+\t* cp-tree.h: Declare it.\n+\n 2015-10-27  Cesar Philippidis  <cesar@codesourcery.com>\n \t    Thomas Schwinge  <thomas@codesourcery.com>\n \t    James Norris  <jnorris@codesourcery.com>"}, {"sha": "4465963523f77d36ee35087bbae9dcafc8a15e94", "filename": "gcc/cp/class.c", "status": "modified", "additions": 29, "deletions": 1, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3320d62af202fc82ffd12d36a02af5d4a694a56/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3320d62af202fc82ffd12d36a02af5d4a694a56/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=a3320d62af202fc82ffd12d36a02af5d4a694a56", "patch": "@@ -5150,6 +5150,33 @@ type_has_user_provided_constructor (tree t)\n   return false;\n }\n \n+/* Returns true iff class T has a user-provided or explicit constructor.  */\n+\n+bool\n+type_has_user_provided_or_explicit_constructor (tree t)\n+{\n+  tree fns;\n+\n+  if (!CLASS_TYPE_P (t))\n+    return false;\n+\n+  if (!TYPE_HAS_USER_CONSTRUCTOR (t))\n+    return false;\n+\n+  /* This can happen in error cases; avoid crashing.  */\n+  if (!CLASSTYPE_METHOD_VEC (t))\n+    return false;\n+\n+  for (fns = CLASSTYPE_CONSTRUCTORS (t); fns; fns = OVL_NEXT (fns))\n+    {\n+      tree fn = OVL_CURRENT (fns);\n+      if (user_provided_p (fn) || DECL_NONCONVERTING_P (fn))\n+\treturn true;\n+    }\n+\n+  return false;\n+}\n+\n /* Returns true iff class T has a non-user-provided (i.e. implicitly\n    declared or explicitly defaulted in the class body) default\n    constructor.  */\n@@ -5735,7 +5762,8 @@ check_bases_and_members (tree t)\n      Again, other conditions for being an aggregate are checked\n      elsewhere.  */\n   CLASSTYPE_NON_AGGREGATE (t)\n-    |= (type_has_user_provided_constructor (t) || TYPE_POLYMORPHIC_P (t));\n+    |= (type_has_user_provided_or_explicit_constructor (t)\n+\t|| TYPE_POLYMORPHIC_P (t));\n   /* This is the C++98/03 definition of POD; it changed in C++0x, but we\n      retain the old definition internally for ABI reasons.  */\n   CLASSTYPE_NON_LAYOUT_POD_P (t)"}, {"sha": "acdd71ccc2e2cc12a044b66974849eda9899f1ec", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3320d62af202fc82ffd12d36a02af5d4a694a56/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3320d62af202fc82ffd12d36a02af5d4a694a56/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=a3320d62af202fc82ffd12d36a02af5d4a694a56", "patch": "@@ -5574,6 +5574,7 @@ extern bool type_has_user_nondefault_constructor (tree);\n extern tree in_class_defaulted_default_constructor (tree);\n extern bool user_provided_p\t\t\t(tree);\n extern bool type_has_user_provided_constructor  (tree);\n+extern bool type_has_user_provided_or_explicit_constructor  (tree);\n extern bool type_has_non_user_provided_default_constructor (tree);\n extern bool vbase_has_user_provided_move_assign (tree);\n extern tree default_init_uninitialized_part (tree);"}, {"sha": "f9f8925d3483f4987bb0e9ef511adbeef7d6e175", "filename": "gcc/testsuite/g++.dg/cpp0x/explicit10.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3320d62af202fc82ffd12d36a02af5d4a694a56/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fexplicit10.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3320d62af202fc82ffd12d36a02af5d4a694a56/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fexplicit10.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fexplicit10.C?ref=a3320d62af202fc82ffd12d36a02af5d4a694a56", "patch": "@@ -28,12 +28,12 @@ template<typename T> void g() {\n \n int main()\n {\n-  f<A>();\t\t\t// { dg-bogus \"required from here\" }\n+  f<A>();\t\t\t// { dg-message \"required from here\" }\n   f<B>();\t\t\t// { dg-message \"required from here\" }\n   f<C>();\t\t\t// { dg-message \"required from here\" }\n   f<D>();\t\t\t// { dg-message \"required from here\" }\n \n-  g<A>();\t\t\t// { dg-bogus \"required from here\" }\n+  g<A>();\t\t\t// { dg-message \"required from here\" }\n   g<B>();\t\t\t// { dg-message \"required from here\" }\n   g<C>();\t\t\t// { dg-message \"required from here\" }\n   g<D>();\t\t\t// { dg-message \"required from here\" }"}]}