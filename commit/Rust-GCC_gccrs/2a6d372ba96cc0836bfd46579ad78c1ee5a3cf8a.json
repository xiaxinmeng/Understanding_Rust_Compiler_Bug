{"sha": "2a6d372ba96cc0836bfd46579ad78c1ee5a3cf8a", "node_id": "C_kwDOANBUbNoAKDJhNmQzNzJiYTk2Y2MwODM2YmZkNDY1NzlhZDc4YzFlZTVhM2NmOGE", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-04-20T07:24:18Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-04-20T07:24:18Z"}, "message": "cgraph: Fix up semantic_interposition handling [PR105306]\n\ncgraph_node has a semantic_interposition flag which should mirror\nopt_for_fn (decl, flag_semantic_interposition).  But it actually is\ninitialized not from that, but from flag_semantic_interposition in the\n  explicit symtab_node (symtab_type t)\n    : type (t), resolution (LDPR_UNKNOWN), definition (false), alias (false),\n...\n      semantic_interposition (flag_semantic_interposition),\n...\n      x_comdat_group (NULL_TREE), x_section (NULL)\n  {}\nctor.  I think that might be fine for varpool nodes, but since\nflag_semantic_interposition is now implied from -Ofast it isn't correct\nfor cgraph nodes, unless we guarantee that cgraph node for a particular\nfunction decl is always created while that function is\ncurrent_function_decl.  That is often the case, but not always as the\nfollowing function shows.\nBecause symtab_node's ctor doesn't know for which decl the cgraph node\nis being created, the following patch keeps that as is, but updates it from\nopt_for_fn (decl, flag_semantic_interposition) when we know that, or for\nclones copies that flag (often it is then overridden in\nset_new_clone_decl_and_node_flags, but not always).\n\n2022-04-20  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR ipa/105306\n\t* cgraph.cc (cgraph_node::create): Set node->semantic_interposition\n\tto opt_for_fn (decl, flag_semantic_interposition).\n\t* cgraphclones.cc (cgraph_node::create_clone): Copy over\n\tsemantic_interposition flag.\n\n\t* g++.dg/opt/pr105306.C: New test.", "tree": {"sha": "1e69e3b4252acdcecae1cf4fae510edf86027fff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1e69e3b4252acdcecae1cf4fae510edf86027fff"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2a6d372ba96cc0836bfd46579ad78c1ee5a3cf8a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a6d372ba96cc0836bfd46579ad78c1ee5a3cf8a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2a6d372ba96cc0836bfd46579ad78c1ee5a3cf8a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a6d372ba96cc0836bfd46579ad78c1ee5a3cf8a/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d1d571873c83ed49a98f84c98f78349e7ad1df14", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d1d571873c83ed49a98f84c98f78349e7ad1df14", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d1d571873c83ed49a98f84c98f78349e7ad1df14"}], "stats": {"total": 15, "additions": 15, "deletions": 0}, "files": [{"sha": "d3cc06bbaed00c2ab6d3697abac33f699e2d1f96", "filename": "gcc/cgraph.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a6d372ba96cc0836bfd46579ad78c1ee5a3cf8a/gcc%2Fcgraph.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a6d372ba96cc0836bfd46579ad78c1ee5a3cf8a/gcc%2Fcgraph.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraph.cc?ref=2a6d372ba96cc0836bfd46579ad78c1ee5a3cf8a", "patch": "@@ -507,6 +507,7 @@ cgraph_node::create (tree decl)\n   gcc_assert (TREE_CODE (decl) == FUNCTION_DECL);\n \n   node->decl = decl;\n+  node->semantic_interposition = opt_for_fn (decl, flag_semantic_interposition);\n \n   if ((flag_openacc || flag_openmp)\n       && lookup_attribute (\"omp declare target\", DECL_ATTRIBUTES (decl)))"}, {"sha": "eb0fa87b554c0cb27217f60da6526006bec518d9", "filename": "gcc/cgraphclones.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a6d372ba96cc0836bfd46579ad78c1ee5a3cf8a/gcc%2Fcgraphclones.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a6d372ba96cc0836bfd46579ad78c1ee5a3cf8a/gcc%2Fcgraphclones.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraphclones.cc?ref=2a6d372ba96cc0836bfd46579ad78c1ee5a3cf8a", "patch": "@@ -394,6 +394,7 @@ cgraph_node::create_clone (tree new_decl, profile_count prof_count,\n   new_node->versionable = versionable;\n   new_node->can_change_signature = can_change_signature;\n   new_node->redefined_extern_inline = redefined_extern_inline;\n+  new_node->semantic_interposition = semantic_interposition;\n   new_node->tm_may_enter_irr = tm_may_enter_irr;\n   new_node->externally_visible = false;\n   new_node->no_reorder = no_reorder;"}, {"sha": "552d37491bc7eb06b9ca14b1ff6406a6cb0abd49", "filename": "gcc/testsuite/g++.dg/opt/pr105306.C", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a6d372ba96cc0836bfd46579ad78c1ee5a3cf8a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr105306.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a6d372ba96cc0836bfd46579ad78c1ee5a3cf8a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr105306.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr105306.C?ref=2a6d372ba96cc0836bfd46579ad78c1ee5a3cf8a", "patch": "@@ -0,0 +1,13 @@\n+// PR ipa/105306\n+// { dg-do compile }\n+// { dg-options \"-Ofast\" }\n+\n+#pragma GCC optimize 0\n+template <typename T> void foo (T);\n+struct B { ~B () {} };\n+struct C { B f; };\n+template <typename> struct E {\n+  void bar () { foo (g); }\n+  C g;\n+};\n+template class E<char>;"}]}