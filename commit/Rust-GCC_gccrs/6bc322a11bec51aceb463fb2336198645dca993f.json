{"sha": "6bc322a11bec51aceb463fb2336198645dca993f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmJjMzIyYTExYmVjNTFhY2ViNDYzZmIyMzM2MTk4NjQ1ZGNhOTkzZg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2017-11-09T08:54:19Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2017-11-09T08:54:19Z"}, "message": "re PR debug/82837 (ICE in output_operand: invalid expression as operand)\n\n\tPR debug/82837\n\t* dwarf2out.c (const_ok_for_output_1): Reject NEG in addition to NOT.\n\t(mem_loc_descriptor): Handle (const (neg (...))) as (neg (const (...)))\n\tand similarly for not instead of neg.\n\n\t* gcc.dg/debug/dwarf2/pr82837.c: New test.\n\nFrom-SVN: r254561", "tree": {"sha": "8ca86eec5904dd459014b877b1bc6b7d7aa43bd9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8ca86eec5904dd459014b877b1bc6b7d7aa43bd9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6bc322a11bec51aceb463fb2336198645dca993f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6bc322a11bec51aceb463fb2336198645dca993f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6bc322a11bec51aceb463fb2336198645dca993f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6bc322a11bec51aceb463fb2336198645dca993f/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e7c77c4f12100602e078cee454b8d0e7433c2660", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7c77c4f12100602e078cee454b8d0e7433c2660", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e7c77c4f12100602e078cee454b8d0e7433c2660"}], "stats": {"total": 79, "additions": 74, "deletions": 5}, "files": [{"sha": "982b43bb291de5ec5f52d1c316901685fb21f046", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bc322a11bec51aceb463fb2336198645dca993f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bc322a11bec51aceb463fb2336198645dca993f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6bc322a11bec51aceb463fb2336198645dca993f", "patch": "@@ -1,3 +1,10 @@\n+2017-11-09  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR debug/82837\n+\t* dwarf2out.c (const_ok_for_output_1): Reject NEG in addition to NOT.\n+\t(mem_loc_descriptor): Handle (const (neg (...))) as (neg (const (...)))\n+\tand similarly for not instead of neg.\n+\n 2017-11-08  Andi Kleen  <ak@linux.intel.com>\n \n \t* config/i386/i386.opt: Add -mforce-indirect-call."}, {"sha": "b8f4e4888f1bc0884564bf9b972f34295def1aa8", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 33, "deletions": 5, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bc322a11bec51aceb463fb2336198645dca993f/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bc322a11bec51aceb463fb2336198645dca993f/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=6bc322a11bec51aceb463fb2336198645dca993f", "patch": "@@ -13783,10 +13783,14 @@ const_ok_for_output_1 (rtx rtl)\n      We should really identify / validate expressions\n      enclosed in CONST that can be handled by assemblers on various\n      targets and only handle legitimate cases here.  */\n-  if (GET_CODE (rtl) != SYMBOL_REF)\n+  switch (GET_CODE (rtl))\n     {\n-      if (GET_CODE (rtl) == NOT)\n-\treturn false;\n+    case SYMBOL_REF:\n+      break;\n+    case NOT:\n+    case NEG:\n+      return false;\n+    default:\n       return true;\n     }\n \n@@ -14959,8 +14963,32 @@ mem_loc_descriptor (rtx rtl, machine_mode mode,\n       if (!const_ok_for_output (rtl))\n \t{\n \t  if (GET_CODE (rtl) == CONST)\n-\t    mem_loc_result = mem_loc_descriptor (XEXP (rtl, 0), int_mode,\n-\t\t\t\t\t\t mem_mode, initialized);\n+\t    switch (GET_CODE (XEXP (rtl, 0)))\n+\t      {\n+\t      case NOT:\n+\t\top = DW_OP_not;\n+\t\tgoto try_const_unop;\n+\t      case NEG:\n+\t\top = DW_OP_neg;\n+\t\tgoto try_const_unop;\n+\t      try_const_unop:\n+\t\trtx arg;\n+\t\targ = XEXP (XEXP (rtl, 0), 0);\n+\t\tif (!CONSTANT_P (arg))\n+\t\t  arg = gen_rtx_CONST (int_mode, arg);\n+\t\top0 = mem_loc_descriptor (arg, int_mode, mem_mode,\n+\t\t\t\t\t  initialized);\n+\t\tif (op0)\n+\t\t  {\n+\t\t    mem_loc_result = op0;\n+\t\t    add_loc_descr (&mem_loc_result, new_loc_descr (op, 0, 0));\n+\t\t  }\n+\t\tbreak;\n+\t      default:\n+\t\tmem_loc_result = mem_loc_descriptor (XEXP (rtl, 0), int_mode,\n+\t\t\t\t\t\t     mem_mode, initialized);\n+\t\tbreak;\n+\t      }\n \t  break;\n \t}\n "}, {"sha": "cb577bff571b0bb3927ab4c768ecff7bf086b253", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bc322a11bec51aceb463fb2336198645dca993f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bc322a11bec51aceb463fb2336198645dca993f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6bc322a11bec51aceb463fb2336198645dca993f", "patch": "@@ -1,3 +1,8 @@\n+2017-11-09  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR debug/82837\n+\t* gcc.dg/debug/dwarf2/pr82837.c: New test.\n+\n 2017-11-08  Andi Kleen  <ak@linux.intel.com>\n \n \t* gcc.target/i386/force-indirect-call-1.c: New test."}, {"sha": "743fb28ca41de55c5fd89fc93d4c1dc44d9cafd9", "filename": "gcc/testsuite/gcc.dg/debug/dwarf2/pr82837.c", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bc322a11bec51aceb463fb2336198645dca993f/gcc%2Ftestsuite%2Fgcc.dg%2Fdebug%2Fdwarf2%2Fpr82837.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bc322a11bec51aceb463fb2336198645dca993f/gcc%2Ftestsuite%2Fgcc.dg%2Fdebug%2Fdwarf2%2Fpr82837.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdebug%2Fdwarf2%2Fpr82837.c?ref=6bc322a11bec51aceb463fb2336198645dca993f", "patch": "@@ -0,0 +1,29 @@\n+/* PR debug/82837 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -g\" } */\n+/* { dg-additional-options \"-march=athlon\" { target ia32 } } */\n+/* { dg-additional-options \"-fPIE\" { target pie } } */\n+\n+static char b[100];\n+static int *c;\n+char *e;\n+void a(char *f, char *i) {\n+  int d = __builtin_object_size(f, 1);\n+  __builtin___strcpy_chk(f, i, d);\n+}\n+void g(void) {\n+  int h;\n+  switch (*c) {\n+  case 8:\n+    e = \"swapgs\";\n+    break;\n+  case 9:\n+    e = \"rdtscp\";\n+    break;\n+  default:\n+    return;\n+  }\n+  h = __builtin_strlen(b);\n+  a(b + h - 6, e);\n+  c++;\n+}"}]}