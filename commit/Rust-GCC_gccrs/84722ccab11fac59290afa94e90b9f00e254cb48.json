{"sha": "84722ccab11fac59290afa94e90b9f00e254cb48", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODQ3MjJjY2FiMTFmYWM1OTI5MGFmYTk0ZTkwYjlmMDBlMjU0Y2I0OA==", "commit": {"author": {"name": "Christophe Lyon", "email": "christophe.lyon@linaro.org", "date": "2015-01-21T11:13:21Z"}, "committer": {"name": "Christophe Lyon", "email": "clyon@gcc.gnu.org", "date": "2015-01-21T11:13:21Z"}, "message": "[ARM/AArch64][testsuite] Add vsubw tests, putting most of the code in common with vaddw through vXXWw.inc.\n\n2015-01-21  Christophe Lyon  <christophe.lyon@linaro.org>\n\n\t* gcc.target/aarch64/advsimd-intrinsics/vXXXw.inc: New file.\n\t* gcc.target/aarch64/advsimd-intrinsics/vsubw.c: New file.\n\t* gcc.target/aarch64/advsimd-intrinsics/vaddw.c: Use code from\n\tvXXXw.inc.\n\nFrom-SVN: r219938", "tree": {"sha": "ca8bfa9aac371afad3e7d1e72d0303c14f4d765c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ca8bfa9aac371afad3e7d1e72d0303c14f4d765c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/84722ccab11fac59290afa94e90b9f00e254cb48", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84722ccab11fac59290afa94e90b9f00e254cb48", "html_url": "https://github.com/Rust-GCC/gccrs/commit/84722ccab11fac59290afa94e90b9f00e254cb48", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84722ccab11fac59290afa94e90b9f00e254cb48/comments", "author": null, "committer": null, "parents": [{"sha": "9ba08321129e8f2f73e78a138c58d21177d6a1fc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ba08321129e8f2f73e78a138c58d21177d6a1fc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9ba08321129e8f2f73e78a138c58d21177d6a1fc"}], "stats": {"total": 204, "additions": 131, "deletions": 73}, "files": [{"sha": "ec795ea7f818719254bef01b545cb0250b187306", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84722ccab11fac59290afa94e90b9f00e254cb48/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84722ccab11fac59290afa94e90b9f00e254cb48/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=84722ccab11fac59290afa94e90b9f00e254cb48", "patch": "@@ -1,3 +1,10 @@\n+2015-01-21  Christophe Lyon  <christophe.lyon@linaro.org>\n+\n+\t* gcc.target/aarch64/advsimd-intrinsics/vXXXw.inc: New file.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vsubw.c: New file.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vaddw.c: Use code from\n+\tvXXXw.inc.\n+\n 2015-01-21  Christophe Lyon  <christophe.lyon@linaro.org>\n \n \t* gcc.target/aarch64/advsimd-intrinsics/vXXXl.inc: New file."}, {"sha": "c535557ed353150bbf8fc40927c287c9103f4785", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vXXXw.inc", "status": "added", "additions": 70, "deletions": 0, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84722ccab11fac59290afa94e90b9f00e254cb48/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2FvXXXw.inc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84722ccab11fac59290afa94e90b9f00e254cb48/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2FvXXXw.inc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2FvXXXw.inc?ref=84722ccab11fac59290afa94e90b9f00e254cb48", "patch": "@@ -0,0 +1,70 @@\n+#define FNNAME1(NAME) exec_ ## NAME\n+#define FNNAME(NAME) FNNAME1(NAME)\n+\n+void FNNAME (INSN_NAME) (void)\n+{\n+  /* Basic test: y=vaddw(x1,x2), then store the result.  */\n+#define TEST_VADDW1(INSN, T1, T2, W, W2, N)\t\t\t\t\\\n+  VECT_VAR(vector_res, T1, W2, N) =\t\t\t\t\t\\\n+    INSN##_##T2##W(VECT_VAR(vector, T1, W2, N),\t\t\t\t\\\n+\t\t   VECT_VAR(vector2, T1, W, N));\t\t\t\\\n+  vst1q_##T2##W2(VECT_VAR(result, T1, W2, N), VECT_VAR(vector_res, T1, W2, N))\n+\n+#define TEST_VADDW(INSN, T1, T2, W, W2, N)\t\\\n+  TEST_VADDW1(INSN, T1, T2, W, W2, N)\n+\n+  DECL_VARIABLE(vector, int, 16, 8);\n+  DECL_VARIABLE(vector, int, 32, 4);\n+  DECL_VARIABLE(vector, int, 64, 2);\n+  DECL_VARIABLE(vector, uint, 16, 8);\n+  DECL_VARIABLE(vector, uint, 32, 4);\n+  DECL_VARIABLE(vector, uint, 64, 2);\n+\n+  DECL_VARIABLE(vector2, int, 8, 8);\n+  DECL_VARIABLE(vector2, int, 16, 4);\n+  DECL_VARIABLE(vector2, int, 32, 2);\n+  DECL_VARIABLE(vector2, uint, 8, 8);\n+  DECL_VARIABLE(vector2, uint, 16, 4);\n+  DECL_VARIABLE(vector2, uint, 32, 2);\n+\n+  DECL_VARIABLE(vector_res, int, 16, 8);\n+  DECL_VARIABLE(vector_res, int, 32, 4);\n+  DECL_VARIABLE(vector_res, int, 64, 2);\n+  DECL_VARIABLE(vector_res, uint, 16, 8);\n+  DECL_VARIABLE(vector_res, uint, 32, 4);\n+  DECL_VARIABLE(vector_res, uint, 64, 2);\n+\n+  clean_results ();\n+\n+  /* Initialize input \"vector\" from \"buffer\".  */\n+  VLOAD(vector, buffer, q, int, s, 16, 8);\n+  VLOAD(vector, buffer, q, int, s, 32, 4);\n+  VLOAD(vector, buffer, q, int, s, 64, 2);\n+  VLOAD(vector, buffer, q, uint, u, 16, 8);\n+  VLOAD(vector, buffer, q, uint, u, 32, 4);\n+  VLOAD(vector, buffer, q, uint, u, 64, 2);\n+\n+  /* Choose init value arbitrarily.  */\n+  VDUP(vector2, , int, s, 8, 8, -13);\n+  VDUP(vector2, , int, s, 16, 4, -14);\n+  VDUP(vector2, , int, s, 32, 2, -16);\n+  VDUP(vector2, , uint, u, 8, 8, 0xf3);\n+  VDUP(vector2, , uint, u, 16, 4, 0xfff1);\n+  VDUP(vector2, , uint, u, 32, 2, 0xfffffff0);\n+\n+  /* Execute the tests.  */\n+  TEST_VADDW(INSN_NAME, int, s, 8, 16, 8);\n+  TEST_VADDW(INSN_NAME, int, s, 16, 32, 4);\n+  TEST_VADDW(INSN_NAME, int, s, 32, 64, 2);\n+  TEST_VADDW(INSN_NAME, uint, u, 8, 16, 8);\n+  TEST_VADDW(INSN_NAME, uint, u, 16, 32, 4);\n+  TEST_VADDW(INSN_NAME, uint, u, 32, 64, 2);\n+\n+  CHECK_RESULTS (TEST_MSG, \"\");\n+}\n+\n+int main (void)\n+{\n+  FNNAME (INSN_NAME) ();\n+  return 0;\n+}"}, {"sha": "27f54f635940f6da4112527a1869add13fe611d6", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vaddw.c", "status": "modified", "additions": 4, "deletions": 73, "changes": 77, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84722ccab11fac59290afa94e90b9f00e254cb48/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvaddw.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84722ccab11fac59290afa94e90b9f00e254cb48/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvaddw.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvaddw.c?ref=84722ccab11fac59290afa94e90b9f00e254cb48", "patch": "@@ -2,6 +2,9 @@\n #include \"arm-neon-ref.h\"\n #include \"compute-ref-data.h\"\n \n+#define INSN_NAME vaddw\n+#define TEST_MSG \"VADDW\"\n+\n /* Expected results.  */\n VECT_VAR_DECL(expected,int,8,8) [] = { 0x33, 0x33, 0x33, 0x33,\n \t\t\t\t       0x33, 0x33, 0x33, 0x33 };\n@@ -45,76 +48,4 @@ VECT_VAR_DECL(expected,poly,16,8) [] = { 0x3333, 0x3333, 0x3333, 0x3333,\n VECT_VAR_DECL(expected,hfloat,32,4) [] = { 0x33333333, 0x33333333,\n \t\t\t\t\t   0x33333333, 0x33333333 };\n \n-#define INSN_NAME vaddw\n-#define TEST_MSG \"VADDW\"\n-\n-#define FNNAME1(NAME) exec_ ## NAME\n-#define FNNAME(NAME) FNNAME1(NAME)\n-\n-void FNNAME (INSN_NAME) (void)\n-{\n-  /* Basic test: y=vaddw(x1,x2), then store the result.  */\n-#define TEST_VADDW1(INSN, T1, T2, W, W2, N)\t\t\t\t\\\n-  VECT_VAR(vector_res, T1, W2, N) =\t\t\t\t\t\\\n-    INSN##_##T2##W(VECT_VAR(vector, T1, W2, N),\t\t\t\t\\\n-\t\t   VECT_VAR(vector2, T1, W, N));\t\t\t\\\n-  vst1q_##T2##W2(VECT_VAR(result, T1, W2, N), VECT_VAR(vector_res, T1, W2, N))\n-\n-#define TEST_VADDW(INSN, T1, T2, W, W2, N)\t\\\n-  TEST_VADDW1(INSN, T1, T2, W, W2, N)\n-\n-  DECL_VARIABLE(vector, int, 16, 8);\n-  DECL_VARIABLE(vector, int, 32, 4);\n-  DECL_VARIABLE(vector, int, 64, 2);\n-  DECL_VARIABLE(vector, uint, 16, 8);\n-  DECL_VARIABLE(vector, uint, 32, 4);\n-  DECL_VARIABLE(vector, uint, 64, 2);\n-\n-  DECL_VARIABLE(vector2, int, 8, 8);\n-  DECL_VARIABLE(vector2, int, 16, 4);\n-  DECL_VARIABLE(vector2, int, 32, 2);\n-  DECL_VARIABLE(vector2, uint, 8, 8);\n-  DECL_VARIABLE(vector2, uint, 16, 4);\n-  DECL_VARIABLE(vector2, uint, 32, 2);\n-\n-  DECL_VARIABLE(vector_res, int, 16, 8);\n-  DECL_VARIABLE(vector_res, int, 32, 4);\n-  DECL_VARIABLE(vector_res, int, 64, 2);\n-  DECL_VARIABLE(vector_res, uint, 16, 8);\n-  DECL_VARIABLE(vector_res, uint, 32, 4);\n-  DECL_VARIABLE(vector_res, uint, 64, 2);\n-\n-  clean_results ();\n-\n-  /* Initialize input \"vector\" from \"buffer\".  */\n-  VLOAD(vector, buffer, q, int, s, 16, 8);\n-  VLOAD(vector, buffer, q, int, s, 32, 4);\n-  VLOAD(vector, buffer, q, int, s, 64, 2);\n-  VLOAD(vector, buffer, q, uint, u, 16, 8);\n-  VLOAD(vector, buffer, q, uint, u, 32, 4);\n-  VLOAD(vector, buffer, q, uint, u, 64, 2);\n-\n-  /* Choose init value arbitrarily.  */\n-  VDUP(vector2, , int, s, 8, 8, -13);\n-  VDUP(vector2, , int, s, 16, 4, -14);\n-  VDUP(vector2, , int, s, 32, 2, -16);\n-  VDUP(vector2, , uint, u, 8, 8, 0xf3);\n-  VDUP(vector2, , uint, u, 16, 4, 0xfff1);\n-  VDUP(vector2, , uint, u, 32, 2, 0xfffffff0);\n-\n-  /* Execute the tests.  */\n-  TEST_VADDW(INSN_NAME, int, s, 8, 16, 8);\n-  TEST_VADDW(INSN_NAME, int, s, 16, 32, 4);\n-  TEST_VADDW(INSN_NAME, int, s, 32, 64, 2);\n-  TEST_VADDW(INSN_NAME, uint, u, 8, 16, 8);\n-  TEST_VADDW(INSN_NAME, uint, u, 16, 32, 4);\n-  TEST_VADDW(INSN_NAME, uint, u, 32, 64, 2);\n-\n-  CHECK_RESULTS (TEST_MSG, \"\");\n-}\n-\n-int main (void)\n-{\n-  FNNAME (INSN_NAME) ();\n-  return 0;\n-}\n+#include \"vXXXw.inc\""}, {"sha": "3e8bc98b121889d91f8b2a0f9cf97d0f5c4b63cb", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vsubw.c", "status": "added", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84722ccab11fac59290afa94e90b9f00e254cb48/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvsubw.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84722ccab11fac59290afa94e90b9f00e254cb48/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvsubw.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvsubw.c?ref=84722ccab11fac59290afa94e90b9f00e254cb48", "patch": "@@ -0,0 +1,50 @@\n+#include <arm_neon.h>\n+#include \"arm-neon-ref.h\"\n+#include \"compute-ref-data.h\"\n+\n+#define INSN_NAME vsubw\n+#define TEST_MSG \"VSUBW\"\n+\n+/* Expected results.  */\n+VECT_VAR_DECL(expected,int,8,8) [] = { 0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t       0x33, 0x33, 0x33, 0x33 };\n+VECT_VAR_DECL(expected,int,16,4) [] = { 0x3333, 0x3333, 0x3333, 0x3333 };\n+VECT_VAR_DECL(expected,int,32,2) [] = { 0x33333333, 0x33333333 };\n+VECT_VAR_DECL(expected,int,64,1) [] = { 0x3333333333333333 };\n+VECT_VAR_DECL(expected,uint,8,8) [] = { 0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t0x33, 0x33, 0x33, 0x33 };\n+VECT_VAR_DECL(expected,uint,16,4) [] = { 0x3333, 0x3333, 0x3333, 0x3333 };\n+VECT_VAR_DECL(expected,uint,32,2) [] = { 0x33333333, 0x33333333 };\n+VECT_VAR_DECL(expected,uint,64,1) [] = { 0x3333333333333333 };\n+VECT_VAR_DECL(expected,poly,8,8) [] = { 0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t0x33, 0x33, 0x33, 0x33 };\n+VECT_VAR_DECL(expected,poly,16,4) [] = { 0x3333, 0x3333, 0x3333, 0x3333 };\n+VECT_VAR_DECL(expected,hfloat,32,2) [] = { 0x33333333, 0x33333333 };\n+VECT_VAR_DECL(expected,int,8,16) [] = { 0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t0x33, 0x33, 0x33, 0x33 };\n+VECT_VAR_DECL(expected,int,16,8) [] = { 0xfffd, 0xfffe, 0xffff, 0x0,\n+\t\t\t\t\t0x1, 0x2, 0x3, 0x4 };\n+VECT_VAR_DECL(expected,int,32,4) [] = { 0xfffffffe, 0xffffffff, 0x0, 0x1 };\n+VECT_VAR_DECL(expected,int,64,2) [] = { 0x0, 0x1 };\n+VECT_VAR_DECL(expected,uint,8,16) [] = { 0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t 0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t 0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t 0x33, 0x33, 0x33, 0x33 };\n+VECT_VAR_DECL(expected,uint,16,8) [] = { 0xfefd, 0xfefe, 0xfeff, 0xff00,\n+\t\t\t\t\t 0xff01, 0xff02, 0xff03, 0xff04 };\n+VECT_VAR_DECL(expected,uint,32,4) [] = { 0xfffeffff, 0xffff0000,\n+\t\t\t\t\t 0xffff0001, 0xffff0002 };\n+VECT_VAR_DECL(expected,uint,64,2) [] = { 0xffffffff00000000,\n+\t\t\t\t\t 0xffffffff00000001 };\n+VECT_VAR_DECL(expected,poly,8,16) [] = { 0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t 0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t 0x33, 0x33, 0x33, 0x33,\n+\t\t\t\t\t 0x33, 0x33, 0x33, 0x33 };\n+VECT_VAR_DECL(expected,poly,16,8) [] = { 0x3333, 0x3333, 0x3333, 0x3333,\n+\t\t\t\t\t 0x3333, 0x3333, 0x3333, 0x3333 };\n+VECT_VAR_DECL(expected,hfloat,32,4) [] = { 0x33333333, 0x33333333,\n+\t\t\t\t\t   0x33333333, 0x33333333 };\n+\n+#include \"vXXXw.inc\""}]}