{"sha": "198bd0d599e0a91df1cfa6ab37545d05dff48e97", "node_id": "C_kwDOANBUbNoAKDE5OGJkMGQ1OTllMGE5MWRmMWNmYTZhYjM3NTQ1ZDA1ZGZmNDhlOTc", "commit": {"author": {"name": "Sandra Loosemore", "email": "sandra@codesourcery.com", "date": "2022-03-25T04:02:34Z"}, "committer": {"name": "Sandra Loosemore", "email": "sandra@codesourcery.com", "date": "2022-05-02T17:58:12Z"}, "message": "Fortran: Add location info to OpenMP tree nodes\n\ngcc/fortran/\n\t* trans-openmp.cc (gfc_trans_omp_critical): Set location on OMP\n\ttree node.\n\t(gfc_trans_omp_do): Likewise.\n\t(gfc_trans_omp_masked): Likewise.\n\t(gfc_trans_omp_do_simd): Likewise.\n\t(gfc_trans_omp_scope): Likewise.\n\t(gfc_trans_omp_taskgroup): Likewise.\n\t(gfc_trans_omp_taskwait): Likewise.\n\t(gfc_trans_omp_distribute): Likewise.\n\t(gfc_trans_omp_taskloop): Likewise.\n\t(gfc_trans_omp_master_masked_taskloop): Likewise.", "tree": {"sha": "53ef649a9c9ccdeb5c80ceb8c26f03534bb650e2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/53ef649a9c9ccdeb5c80ceb8c26f03534bb650e2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/198bd0d599e0a91df1cfa6ab37545d05dff48e97", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/198bd0d599e0a91df1cfa6ab37545d05dff48e97", "html_url": "https://github.com/Rust-GCC/gccrs/commit/198bd0d599e0a91df1cfa6ab37545d05dff48e97", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/198bd0d599e0a91df1cfa6ab37545d05dff48e97/comments", "author": {"login": "SandraLoosemore", "id": 104087111, "node_id": "U_kgDOBjQ-Rw", "avatar_url": "https://avatars.githubusercontent.com/u/104087111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SandraLoosemore", "html_url": "https://github.com/SandraLoosemore", "followers_url": "https://api.github.com/users/SandraLoosemore/followers", "following_url": "https://api.github.com/users/SandraLoosemore/following{/other_user}", "gists_url": "https://api.github.com/users/SandraLoosemore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SandraLoosemore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SandraLoosemore/subscriptions", "organizations_url": "https://api.github.com/users/SandraLoosemore/orgs", "repos_url": "https://api.github.com/users/SandraLoosemore/repos", "events_url": "https://api.github.com/users/SandraLoosemore/events{/privacy}", "received_events_url": "https://api.github.com/users/SandraLoosemore/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SandraLoosemore", "id": 104087111, "node_id": "U_kgDOBjQ-Rw", "avatar_url": "https://avatars.githubusercontent.com/u/104087111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SandraLoosemore", "html_url": "https://github.com/SandraLoosemore", "followers_url": "https://api.github.com/users/SandraLoosemore/followers", "following_url": "https://api.github.com/users/SandraLoosemore/following{/other_user}", "gists_url": "https://api.github.com/users/SandraLoosemore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SandraLoosemore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SandraLoosemore/subscriptions", "organizations_url": "https://api.github.com/users/SandraLoosemore/orgs", "repos_url": "https://api.github.com/users/SandraLoosemore/repos", "events_url": "https://api.github.com/users/SandraLoosemore/events{/privacy}", "received_events_url": "https://api.github.com/users/SandraLoosemore/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "05cd2d3f588e2ecc0fd40c08d938fd016064b04d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/05cd2d3f588e2ecc0fd40c08d938fd016064b04d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/05cd2d3f588e2ecc0fd40c08d938fd016064b04d"}], "stats": {"total": 11, "additions": 11, "deletions": 0}, "files": [{"sha": "7f3ac971d8a15b7305cb8d16634cd35bc05d019f", "filename": "gcc/fortran/trans-openmp.cc", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/198bd0d599e0a91df1cfa6ab37545d05dff48e97/gcc%2Ffortran%2Ftrans-openmp.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/198bd0d599e0a91df1cfa6ab37545d05dff48e97/gcc%2Ffortran%2Ftrans-openmp.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-openmp.cc?ref=198bd0d599e0a91df1cfa6ab37545d05dff48e97", "patch": "@@ -5014,6 +5014,7 @@ gfc_trans_omp_critical (gfc_code *code)\n     name = get_identifier (code->ext.omp_clauses->critical_name);\n   gfc_start_block (&block);\n   stmt = make_node (OMP_CRITICAL);\n+  SET_EXPR_LOCATION (stmt, gfc_get_location (&code->loc));\n   TREE_TYPE (stmt) = void_type_node;\n   OMP_CRITICAL_BODY (stmt) = gfc_trans_code (code->block->next);\n   OMP_CRITICAL_NAME (stmt) = name;\n@@ -5046,6 +5047,7 @@ gfc_trans_omp_do (gfc_code *code, gfc_exec_op op, stmtblock_t *pblock,\n   unsigned ix;\n   vec<tree, va_heap, vl_embed> *saved_doacross_steps = doacross_steps;\n   gfc_expr_list *tile = do_clauses ? do_clauses->tile_list : clauses->tile_list;\n+  gfc_code *orig_code = code;\n \n   /* Both collapsed and tiled loops are lowered the same way.  In\n      OpenACC, those clauses are not compatible, so prioritize the tile\n@@ -5400,6 +5402,7 @@ gfc_trans_omp_do (gfc_code *code, gfc_exec_op op, stmtblock_t *pblock,\n     default: gcc_unreachable ();\n     }\n \n+  SET_EXPR_LOCATION (stmt, gfc_get_location (&orig_code->loc));\n   TREE_TYPE (stmt) = void_type_node;\n   OMP_FOR_BODY (stmt) = gfc_finish_block (&body);\n   OMP_FOR_CLAUSES (stmt) = omp_clauses;\n@@ -5672,6 +5675,7 @@ gfc_trans_omp_masked (gfc_code *code, gfc_omp_clauses *clauses)\n   gfc_start_block (&block);\n   tree omp_clauses = gfc_trans_omp_clauses (&block, clauses, code->loc);\n   tree stmt = make_node (OMP_MASKED);\n+  SET_EXPR_LOCATION (stmt, gfc_get_location (&code->loc));\n   TREE_TYPE (stmt) = void_type_node;\n   OMP_MASKED_BODY (stmt) = body;\n   OMP_MASKED_CLAUSES (stmt) = omp_clauses;\n@@ -6446,6 +6450,7 @@ gfc_trans_omp_do_simd (gfc_code *code, stmtblock_t *pblock,\n   if (flag_openmp)\n     {\n       stmt = make_node (OMP_FOR);\n+      SET_EXPR_LOCATION (stmt, gfc_get_location (&code->loc));\n       TREE_TYPE (stmt) = void_type_node;\n       OMP_FOR_BODY (stmt) = body;\n       OMP_FOR_CLAUSES (stmt) = omp_do_clauses;\n@@ -6618,6 +6623,7 @@ gfc_trans_omp_scope (gfc_code *code)\n   tree omp_clauses = gfc_trans_omp_clauses (&block, code->ext.omp_clauses,\n \t\t\t\t\t    code->loc);\n   tree stmt = make_node (OMP_SCOPE);\n+  SET_EXPR_LOCATION (stmt, gfc_get_location (&code->loc));\n   TREE_TYPE (stmt) = void_type_node;\n   OMP_SCOPE_BODY (stmt) = body;\n   OMP_SCOPE_CLAUSES (stmt) = omp_clauses;\n@@ -6693,6 +6699,7 @@ gfc_trans_omp_taskgroup (gfc_code *code)\n   gfc_start_block (&block);\n   tree body = gfc_trans_code (code->block->next);\n   tree stmt = make_node (OMP_TASKGROUP);\n+  SET_EXPR_LOCATION (stmt, gfc_get_location (&code->loc));\n   TREE_TYPE (stmt) = void_type_node;\n   OMP_TASKGROUP_BODY (stmt) = body;\n   OMP_TASKGROUP_CLAUSES (stmt) = gfc_trans_omp_clauses (&block,\n@@ -6713,6 +6720,7 @@ gfc_trans_omp_taskwait (gfc_code *code)\n   stmtblock_t block;\n   gfc_start_block (&block);\n   tree stmt = make_node (OMP_TASK);\n+  SET_EXPR_LOCATION (stmt, gfc_get_location (&code->loc));\n   TREE_TYPE (stmt) = void_type_node;\n   OMP_TASK_BODY (stmt) = NULL_TREE;\n   OMP_TASK_CLAUSES (stmt) = gfc_trans_omp_clauses (&block,\n@@ -6790,6 +6798,7 @@ gfc_trans_omp_distribute (gfc_code *code, gfc_omp_clauses *clausesa)\n   if (flag_openmp)\n     {\n       tree distribute = make_node (OMP_DISTRIBUTE);\n+      SET_EXPR_LOCATION (distribute, gfc_get_location (&code->loc));\n       TREE_TYPE (distribute) = void_type_node;\n       OMP_FOR_BODY (distribute) = stmt;\n       OMP_FOR_CLAUSES (distribute) = omp_clauses;\n@@ -7010,6 +7019,7 @@ gfc_trans_omp_taskloop (gfc_code *code, gfc_exec_op op)\n   if (flag_openmp)\n     {\n       tree taskloop = make_node (OMP_TASKLOOP);\n+      SET_EXPR_LOCATION (taskloop, gfc_get_location (&code->loc));\n       TREE_TYPE (taskloop) = void_type_node;\n       OMP_FOR_BODY (taskloop) = stmt;\n       OMP_FOR_CLAUSES (taskloop) = omp_clauses;\n@@ -7055,6 +7065,7 @@ gfc_trans_omp_master_masked_taskloop (gfc_code *code, gfc_exec_op op)\n \t\t\t\t\t    &clausesa[GFC_OMP_SPLIT_MASKED],\n \t\t\t\t\t    code->loc);\n       tree msk = make_node (OMP_MASKED);\n+      SET_EXPR_LOCATION (msk, gfc_get_location (&code->loc));\n       TREE_TYPE (msk) = void_type_node;\n       OMP_MASKED_BODY (msk) = stmt;\n       OMP_MASKED_CLAUSES (msk) = clauses;"}]}