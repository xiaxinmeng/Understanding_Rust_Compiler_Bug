{"sha": "9905ca975c593e92c0183fdc791f9919edbeb1c8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTkwNWNhOTc1YzU5M2U5MmMwMTgzZmRjNzkxZjk5MTllZGJlYjFjOA==", "commit": {"author": {"name": "Mark Wielaard", "email": "mark@klomp.org", "date": "2017-03-13T18:26:47Z"}, "committer": {"name": "Mark Wielaard", "email": "mark@gcc.gnu.org", "date": "2017-03-13T18:26:47Z"}, "message": "libiberty: Initialize d_printing in all cplus_demangle_fill_* functions.\n\nWhile integrating the d_printing recursion guard change into gdb I\nnoticed we forgot to initialize the demangle_component d_printing\nfield in cplus_demangle_fill_{name,extended_operator,ctor,dtor}.\nAs is done in cplus_demangle_fill_{component,builtin_type,operator}.\nIt happened to work because in gcc all demangle_components were\nallocated through d_make_empty. But gdb has its own allocation\nmechanism (as might other users).\n\nlibiberty/ChangeLog:\n\n       * cp-demangle.c (cplus_demangle_fill_name): Initialize\n       demangle_component d_printing.\n       (cplus_demangle_fill_extended_operator): Likewise.\n       (cplus_demangle_fill_ctor): Likewise.\n       (cplus_demangle_fill_dtor): Likewise.\n\nFrom-SVN: r246105", "tree": {"sha": "13f4dfa2660d2841e047b8bd9e6ae7a8ae25c5d8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/13f4dfa2660d2841e047b8bd9e6ae7a8ae25c5d8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9905ca975c593e92c0183fdc791f9919edbeb1c8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9905ca975c593e92c0183fdc791f9919edbeb1c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9905ca975c593e92c0183fdc791f9919edbeb1c8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9905ca975c593e92c0183fdc791f9919edbeb1c8/comments", "author": null, "committer": null, "parents": [{"sha": "fd231ad75a03bea9e7ac61c57f806740abddcab2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd231ad75a03bea9e7ac61c57f806740abddcab2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fd231ad75a03bea9e7ac61c57f806740abddcab2"}], "stats": {"total": 12, "additions": 12, "deletions": 0}, "files": [{"sha": "b513fcefe3ef2077010b2bdbb8e46bc65692b875", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9905ca975c593e92c0183fdc791f9919edbeb1c8/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9905ca975c593e92c0183fdc791f9919edbeb1c8/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=9905ca975c593e92c0183fdc791f9919edbeb1c8", "patch": "@@ -1,3 +1,11 @@\n+2017-03-12  Mark Wielaard  <mark@klomp.org>\n+\n+\t* cp-demangle.c (cplus_demangle_fill_name): Initialize\n+\tdemangle_component d_printing.\n+\t(cplus_demangle_fill_extended_operator): Likewise.\n+\t(cplus_demangle_fill_ctor): Likewise.\n+\t(cplus_demangle_fill_dtor): Likewise.\n+\n 2017-03-08  Mark Wielaard  <mark@klomp.org>\n \n \tPR demangler/70909"}, {"sha": "04832ff6830ab341c63480974dea848ef4c65f4f", "filename": "libiberty/cp-demangle.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9905ca975c593e92c0183fdc791f9919edbeb1c8/libiberty%2Fcp-demangle.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9905ca975c593e92c0183fdc791f9919edbeb1c8/libiberty%2Fcp-demangle.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fcp-demangle.c?ref=9905ca975c593e92c0183fdc791f9919edbeb1c8", "patch": "@@ -854,6 +854,7 @@ cplus_demangle_fill_name (struct demangle_component *p, const char *s, int len)\n {\n   if (p == NULL || s == NULL || len == 0)\n     return 0;\n+  p->d_printing = 0;\n   p->type = DEMANGLE_COMPONENT_NAME;\n   p->u.s_name.s = s;\n   p->u.s_name.len = len;\n@@ -869,6 +870,7 @@ cplus_demangle_fill_extended_operator (struct demangle_component *p, int args,\n {\n   if (p == NULL || args < 0 || name == NULL)\n     return 0;\n+  p->d_printing = 0;\n   p->type = DEMANGLE_COMPONENT_EXTENDED_OPERATOR;\n   p->u.s_extended_operator.args = args;\n   p->u.s_extended_operator.name = name;\n@@ -888,6 +890,7 @@ cplus_demangle_fill_ctor (struct demangle_component *p,\n       || (int) kind < gnu_v3_complete_object_ctor\n       || (int) kind > gnu_v3_object_ctor_group)\n     return 0;\n+  p->d_printing = 0;\n   p->type = DEMANGLE_COMPONENT_CTOR;\n   p->u.s_ctor.kind = kind;\n   p->u.s_ctor.name = name;\n@@ -907,6 +910,7 @@ cplus_demangle_fill_dtor (struct demangle_component *p,\n       || (int) kind < gnu_v3_deleting_dtor\n       || (int) kind > gnu_v3_object_dtor_group)\n     return 0;\n+  p->d_printing = 0;\n   p->type = DEMANGLE_COMPONENT_DTOR;\n   p->u.s_dtor.kind = kind;\n   p->u.s_dtor.name = name;"}]}