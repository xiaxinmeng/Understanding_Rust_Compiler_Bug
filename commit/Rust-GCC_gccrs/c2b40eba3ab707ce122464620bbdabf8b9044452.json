{"sha": "c2b40eba3ab707ce122464620bbdabf8b9044452", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzJiNDBlYmEzYWI3MDdjZTEyMjQ2NDYyMGJiZGFiZjhiOTA0NDQ1Mg==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2011-07-05T17:10:29Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2011-07-05T17:10:29Z"}, "message": "ia64: Remove TARGET_DWARF_HANDLE_FRAME_UNSPEC hook.\n\nUse an empty REG_FRAME_RELATED_EXPR instead.\n\n        * config/ia64/ia64.c (ia64_dwarf_handle_frame_unspec): Remove.\n        (TARGET_DWARF_HANDLE_FRAME_UNSPEC): Remove.\n        (ia64_expand_epilogue): Emit an empty FRAME_RELATED_EXPR for\n        the alloc insn.\n\nFrom-SVN: r175875", "tree": {"sha": "7e0e70dc0bd43809617a7f54edac6ce2dc24cf2e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7e0e70dc0bd43809617a7f54edac6ce2dc24cf2e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c2b40eba3ab707ce122464620bbdabf8b9044452", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c2b40eba3ab707ce122464620bbdabf8b9044452", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c2b40eba3ab707ce122464620bbdabf8b9044452", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c2b40eba3ab707ce122464620bbdabf8b9044452/comments", "author": null, "committer": null, "parents": [{"sha": "7d3c6cd8f4ea00b984ce11cc8aad3282da1b6408", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d3c6cd8f4ea00b984ce11cc8aad3282da1b6408", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7d3c6cd8f4ea00b984ce11cc8aad3282da1b6408"}], "stats": {"total": 28, "additions": 14, "deletions": 14}, "files": [{"sha": "4ab0abf48364881ecc1e7840d67805eabd5d5aaf", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2b40eba3ab707ce122464620bbdabf8b9044452/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2b40eba3ab707ce122464620bbdabf8b9044452/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c2b40eba3ab707ce122464620bbdabf8b9044452", "patch": "@@ -1,5 +1,10 @@\n 2011-07-05  Richard Henderson  <rth@redhat.com>\n \n+\t* config/ia64/ia64.c (ia64_dwarf_handle_frame_unspec): Remove.\n+\t(TARGET_DWARF_HANDLE_FRAME_UNSPEC): Remove.\n+\t(ia64_expand_epilogue): Emit an empty FRAME_RELATED_EXPR for\n+\tthe alloc insn.\n+\n \t* config/ia64/ia64.c (ia64_emit_deleted_label_after_insn): Remove.\n \t(IA64_CHANGE_CFA_IN_EPILOGUE): Remove.\n \t(process_epilogue): Don't call dwarf2out_def_cfa."}, {"sha": "2ebb225ec8b9777eeb769058e5e002a1492aa4ec", "filename": "gcc/config/ia64/ia64.c", "status": "modified", "additions": 9, "deletions": 14, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2b40eba3ab707ce122464620bbdabf8b9044452/gcc%2Fconfig%2Fia64%2Fia64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2b40eba3ab707ce122464620bbdabf8b9044452/gcc%2Fconfig%2Fia64%2Fia64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64.c?ref=c2b40eba3ab707ce122464620bbdabf8b9044452", "patch": "@@ -319,7 +319,6 @@ static enum machine_mode ia64_promote_function_mode (const_tree,\n static void ia64_trampoline_init (rtx, tree, rtx);\n static void ia64_override_options_after_change (void);\n \n-static void ia64_dwarf_handle_frame_unspec (const char *, rtx, int);\n static tree ia64_builtin_decl (unsigned, bool);\n \n static reg_class_t ia64_preferred_reload_class (rtx, reg_class_t);\n@@ -551,8 +550,6 @@ static const struct attribute_spec ia64_attribute_table[] =\n #undef TARGET_GIMPLIFY_VA_ARG_EXPR\n #define TARGET_GIMPLIFY_VA_ARG_EXPR ia64_gimplify_va_arg\n \n-#undef TARGET_DWARF_HANDLE_FRAME_UNSPEC\n-#define TARGET_DWARF_HANDLE_FRAME_UNSPEC  ia64_dwarf_handle_frame_unspec\n #undef TARGET_ASM_UNWIND_EMIT\n #define TARGET_ASM_UNWIND_EMIT ia64_asm_unwind_emit\n #undef TARGET_ASM_EMIT_EXCEPT_PERSONALITY\n@@ -3793,10 +3790,19 @@ ia64_expand_epilogue (int sibcall_p)\n       if (current_frame_info.n_input_regs != 0)\n \t{\n \t  rtx n_inputs = GEN_INT (current_frame_info.n_input_regs);\n+\n \t  insn = emit_insn (gen_alloc (gen_rtx_REG (DImode, fp),\n \t\t\t\tconst0_rtx, const0_rtx,\n \t\t\t\tn_inputs, const0_rtx));\n \t  RTX_FRAME_RELATED_P (insn) = 1;\n+\n+\t  /* ??? We need to mark the alloc as frame-related so that it gets\n+\t     passed into ia64_asm_unwind_emit for ia64-specific unwinding.\n+\t     But there's nothing dwarf2 related to be done wrt the register\n+\t     windows.  If we do nothing, dwarf2out will abort on the UNSPEC;\n+\t     the empty parallel means dwarf2out will not see anything.  */\n+\t  add_reg_note (insn, REG_FRAME_RELATED_EXPR,\n+\t\t\tgen_rtx_PARALLEL (VOIDmode, rtvec_alloc (0)));\n \t}\n     }\n }\n@@ -9620,17 +9626,6 @@ static bool need_copy_state;\n # define MAX_ARTIFICIAL_LABEL_BYTES 30\n #endif\n \n-/* All we need to do here is avoid a crash in the generic dwarf2\n-   processing.  The real CFA definition is set up above.  */\n-\n-static void\n-ia64_dwarf_handle_frame_unspec (const char * ARG_UNUSED (label),\n-\t\t\t\trtx ARG_UNUSED (pattern),\n-\t\t\t\tint index)\n-{\n-  gcc_assert (index == UNSPECV_ALLOC);\n-}\n-\n /* The function emits unwind directives for the start of an epilogue.  */\n \n static void"}]}