{"sha": "86fff623afa161dc0997319a2112ac51f62ef0ed", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODZmZmY2MjNhZmExNjFkYzA5OTczMTlhMjExMmFjNTFmNjJlZjBlZA==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "1999-12-05T02:42:10Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "1999-12-05T02:42:10Z"}, "message": "tree.def (EXPR_WITH_FILE_LOCATION): Fix comment formatting.\n\n\t* tree.def (EXPR_WITH_FILE_LOCATION): Fix comment formatting.\n\t* tree.h (EXPR_WFL_FILENAME): Define in terms of\n\tEXPR_WFL_FILENAME_NODE.\n\t(EXPR_WFL_FILENAME_NODE): Use the second operand slot rather than\n\tthe TREE_CHAIN.\n\t* print-tree.c (print_note): Print TREE_PRIVATE and\n\tTREE_PROTECTED.\n\nFrom-SVN: r30783", "tree": {"sha": "53798d61e5d3fb49d9f72272a44ba10668704a38", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/53798d61e5d3fb49d9f72272a44ba10668704a38"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/86fff623afa161dc0997319a2112ac51f62ef0ed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86fff623afa161dc0997319a2112ac51f62ef0ed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/86fff623afa161dc0997319a2112ac51f62ef0ed", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86fff623afa161dc0997319a2112ac51f62ef0ed/comments", "author": null, "committer": null, "parents": [{"sha": "c9818a41dc9b1c13aa187cfa22e3d7fd77890a7d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9818a41dc9b1c13aa187cfa22e3d7fd77890a7d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c9818a41dc9b1c13aa187cfa22e3d7fd77890a7d"}], "stats": {"total": 34, "additions": 31, "deletions": 3}, "files": [{"sha": "68125046a584dcb518ef01514d8b154eb4b91bed", "filename": "gcc/ChangeLog", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86fff623afa161dc0997319a2112ac51f62ef0ed/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86fff623afa161dc0997319a2112ac51f62ef0ed/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=86fff623afa161dc0997319a2112ac51f62ef0ed", "patch": "@@ -1,5 +1,28 @@\n 1999-12-04  Mark Mitchell  <mark@codesourcery.com>\n \n+\t* tree.def (EXPR_WITH_FILE_LOCATION): Fix comment formatting.\n+\t* tree.h (EXPR_WFL_FILENAME): Define in terms of\n+\tEXPR_WFL_FILENAME_NODE.\n+\t(EXPR_WFL_FILENAME_NODE): Use the second operand slot rather than\n+\tthe TREE_CHAIN.\n+\t* print-tree.c (print_note): Print TREE_PRIVATE and\n+\tTREE_PROTECTED.\n+\t\n+\t* dwarf2out.c (add_abstract_origin_attribute): Don't abort when\n+\tthe original die cannot be found.\n+\n+\t* varray.h (varray_head_tag): Add elements_used.\n+\t(VARRAY_PUSH): New macro.\n+\t(VARRAY_POP): Likewise.\n+\t(VARRAY_TOP): Likewise.\n+\tAdd variants of VARRAY_PUSH and VARRAY_POP for all varray element\n+\ttypes. \n+\t* varray.c (varray_init): Initialize elements_used.\n+\t* Makefile.in (BASIC_BLOCK_H): Add varray.h.\n+\t(INTEGRATE_H): New variable.\n+\t(integrate.o): Depend on INTEGRATE_H.\n+\t(unroll.o): Likewise.\n+\t\n \t* function.h (insert_block_after_note): Declare.\n \t* function.c (insert_block_after_note): Split out from ...\n \t(retrofit_block): ... here."}, {"sha": "caf2aeeba15cd011452a104a71d2295d3e435705", "filename": "gcc/print-tree.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86fff623afa161dc0997319a2112ac51f62ef0ed/gcc%2Fprint-tree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86fff623afa161dc0997319a2112ac51f62ef0ed/gcc%2Fprint-tree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fprint-tree.c?ref=86fff623afa161dc0997319a2112ac51f62ef0ed", "patch": "@@ -304,6 +304,10 @@ print_node (file, prefix, node, indent)\n     fputs (\" permanent\", file);\n   if (TREE_PUBLIC (node))\n     fputs (\" public\", file);\n+  if (TREE_PRIVATE (node))\n+    fputs (\" private\", file);\n+  if (TREE_PROTECTED (node))\n+    fputs (\" protected\", file);\n   if (TREE_STATIC (node))\n     fputs (\" static\", file);\n   if (TREE_LANG_FLAG_0 (node))"}, {"sha": "b34895b59b3c740ea2f06e2de08c95dcf8fbfe75", "filename": "gcc/tree.def", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86fff623afa161dc0997319a2112ac51f62ef0ed/gcc%2Ftree.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86fff623afa161dc0997319a2112ac51f62ef0ed/gcc%2Ftree.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.def?ref=86fff623afa161dc0997319a2112ac51f62ef0ed", "patch": "@@ -794,7 +794,7 @@ DEFTREECODE (EXIT_BLOCK_EXPR, \"exit_block_expr\", 'e', 2)\n    information: a file name (EXPR_WFL_FILENAME);  a line number\n    (EXPR_WFL_LINENO); and column number (EXPR_WFL_COLNO).  It is\n    expanded as the contained node (EXPR_WFL_NODE);  a line note should\n-   be emitted first if EXPR_WFL_EMIT_LINE_NOTE. */\n+   be emitted first if EXPR_WFL_EMIT_LINE_NOTE.  */\n DEFTREECODE (EXPR_WITH_FILE_LOCATION, \"expr_with_file_location\", 'e', 2)\n \n /* Switch expression."}, {"sha": "ee726684203c58dbebe7de06d5e4e8c60c57f1e4", "filename": "gcc/tree.h", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86fff623afa161dc0997319a2112ac51f62ef0ed/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86fff623afa161dc0997319a2112ac51f62ef0ed/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=86fff623afa161dc0997319a2112ac51f62ef0ed", "patch": "@@ -750,8 +750,9 @@ struct tree_vec\n \n /* In a EXPR_WITH_FILE_LOCATION node.  */\n #define EXPR_WFL_NODE(NODE) TREE_OPERAND((NODE), 0)\n-#define EXPR_WFL_FILENAME(NODE) (IDENTIFIER_POINTER ((NODE)->common.chain))\n-#define EXPR_WFL_FILENAME_NODE(NODE) ((NODE)->common.chain)\n+#define EXPR_WFL_FILENAME(NODE) \\\n+  (IDENTIFIER_POINTER (EXPR_WFL_FILENAME_NODE ((NODE))))\n+#define EXPR_WFL_FILENAME_NODE(NODE) TREE_OPERAND((NODE), 1)\n #define EXPR_WFL_LINENO(NODE) (EXPR_CHECK (NODE)->exp.complexity >> 12)\n #define EXPR_WFL_COLNO(NODE) (EXPR_CHECK (NODE)->exp.complexity & 0xfff)\n #define EXPR_WFL_LINECOL(NODE) (EXPR_CHECK (NODE)->exp.complexity)"}]}