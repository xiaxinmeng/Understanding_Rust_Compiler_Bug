{"sha": "3c323b522aa996eb4f1d889126002762b34dc066", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2MzMjNiNTIyYWE5OTZlYjRmMWQ4ODkxMjYwMDI3NjJiMzRkYzA2Ng==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2010-04-20T13:57:44Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2010-04-20T13:57:44Z"}, "message": "tree-ssa-structalias.c (do_sd_constraint): Add edges only from vars that can have pointers.\n\n2010-04-20  Richard Guenther  <rguenther@suse.de>\n\n\t* tree-ssa-structalias.c (do_sd_constraint): Add edges only\n\tfrom vars that can have pointers.\n\t(process_constraint): Dump useless constraints.\n\nFrom-SVN: r158558", "tree": {"sha": "551540181227ce7439f560e0f1ab3cb8d2e10ea2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/551540181227ce7439f560e0f1ab3cb8d2e10ea2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3c323b522aa996eb4f1d889126002762b34dc066", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c323b522aa996eb4f1d889126002762b34dc066", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c323b522aa996eb4f1d889126002762b34dc066", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c323b522aa996eb4f1d889126002762b34dc066/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b28ae58f12038292271d7356e2c98d983afdcf56", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b28ae58f12038292271d7356e2c98d983afdcf56", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b28ae58f12038292271d7356e2c98d983afdcf56"}], "stats": {"total": 19, "additions": 18, "deletions": 1}, "files": [{"sha": "a5b70375bba4db2b667e4ef8c81ced19569bd9fc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c323b522aa996eb4f1d889126002762b34dc066/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c323b522aa996eb4f1d889126002762b34dc066/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3c323b522aa996eb4f1d889126002762b34dc066", "patch": "@@ -1,3 +1,9 @@\n+2010-04-20  Richard Guenther  <rguenther@suse.de>\n+\n+\t* tree-ssa-structalias.c (do_sd_constraint): Add edges only\n+\tfrom vars that can have pointers.\n+\t(process_constraint): Dump useless constraints.\n+\n 2010-04-20  Richard Guenther  <rguenther@suse.de>\n \n \t* tree-ssa-structalias.c (do_structure_copy): Properly handle"}, {"sha": "492907e580521a1c89542ed44632ffd629975847", "filename": "gcc/tree-ssa-structalias.c", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c323b522aa996eb4f1d889126002762b34dc066/gcc%2Ftree-ssa-structalias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c323b522aa996eb4f1d889126002762b34dc066/gcc%2Ftree-ssa-structalias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-structalias.c?ref=3c323b522aa996eb4f1d889126002762b34dc066", "patch": "@@ -1706,7 +1706,8 @@ do_sd_constraint (constraint_graph_t graph, constraint_t c,\n \t     the set.  Use ESCAPED as representative instead.  */\n \t  else if (v->id == escaped_id)\n \t    flag |= bitmap_set_bit (sol, escaped_id);\n-\t  else if (add_graph_edge (graph, lhs, t))\n+\t  else if (v->may_have_pointers\n+\t\t   && add_graph_edge (graph, lhs, t))\n \t    flag |= bitmap_ior_into (sol, get_varinfo (t)->solution);\n \n \t  /* If the variable is not exactly at the requested offset\n@@ -2885,6 +2886,16 @@ process_constraint (constraint_t t)\n   /* ADDRESSOF on the lhs is invalid.  */\n   gcc_assert (lhs.type != ADDRESSOF);\n \n+  /* We shouldn't add constraints from things that cannot have pointers.\n+     It's not completely trivial to avoid in the callers, so do it here.  */\n+  if (rhs.type != ADDRESSOF\n+      && !get_varinfo (rhs.var)->may_have_pointers)\n+    return;\n+\n+  /* Likewise adding to the solution of a non-pointer var isn't useful.  */\n+  if (!get_varinfo (lhs.var)->may_have_pointers)\n+    return;\n+\n   /* This can happen in our IR with things like n->a = *p */\n   if (rhs.type == DEREF && lhs.type == DEREF && rhs.var != anything_id)\n     {"}]}