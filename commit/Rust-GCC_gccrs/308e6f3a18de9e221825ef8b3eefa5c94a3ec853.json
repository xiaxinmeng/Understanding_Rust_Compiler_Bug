{"sha": "308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzA4ZTZmM2ExOGRlOWUyMjE4MjVlZjhiM2VlZmE1Yzk0YTNlYzg1Mw==", "commit": {"author": {"name": "Ralf Wildenhues", "email": "Ralf.Wildenhues@gmx.de", "date": "2010-12-20T07:26:57Z"}, "committer": {"name": "Ralf Wildenhues", "email": "rwild@gcc.gnu.org", "date": "2010-12-20T07:26:57Z"}, "message": "Fix typos in gcc/ada.\n\ngcc/ada/:\n\t* projects.texi: Fix typos.\n\t* gnat_rm.texi: Likewise.\n\t* gnat_ugn.texi: Likewise.\n\t* sem_util.adb: Fix typo in variable, typos in comments.\n\t* a-btgbso.adb: Fix typos in comments.\n\t* a-cbdlli.adb, a-cbhase.ads, a-cdlili.adb, a-cobove.adb,\n\ta-coinve.adb, a-convec.adb, a-direct.ads, a-strunb-shared.adb,\n\ta-strunb-shared.ads, a-stuten.ads, a-stwiun-shared.adb,\n\ta-stwiun-shared.ads, a-stzunb-shared.adb, a-stzunb-shared.ads,\n\ta-suenco.adb, a-suenst.adb, a-suewst.adb, a-suezst.adb, ali.ads,\n\taspects.ads, atree.ads, binde.adb, bindgen.adb, checks.adb,\n\tchecks.ads, einfo.ads, err_vars.ads, errout.adb, errout.ads,\n\texp_aggr.adb, exp_attr.adb, exp_cg.adb, exp_ch3.adb,\n\texp_ch4.adb, exp_ch5.adb, exp_ch6.adb, exp_ch7.adb,\n\texp_dbug.ads, exp_disp.adb, exp_fixd.ads, freeze.adb,\n\tg-altive.ads, g-comlin.ads, g-excact.ads, g-mbdira.adb,\n\tg-sechas.ads, g-sehash.ads, g-sha1.ads, g-sha224.ads,\n\tg-sha256.ads, g-sha384.ads, g-sha512.ads, g-shsh32.ads,\n\tg-shsh64.ads, g-socket.adb, g-socket.ads, g-sothco.ads,\n\tgcc-interface/decl.c, gcc-interface/trans.c,\n\tgcc-interface/utils2.c, gnat1drv.adb, init.c, inline.adb,\n\tlink.c, locales.c, make.adb, mingw32.h, namet.ads, osint.adb,\n\tpar-ch12.adb, par-ch13.adb, par-ch3.adb, par-ch4.adb,\n\tpar-prag.adb, par.adb, par_sco.adb, prepcomp.adb,\n\tprj-conf.ads, prj-dect.adb, prj-env.adb, prj-env.ads,\n\tprj-nmsc.adb, prj-tree.ads, prj-util.ads, prj.adb, prj.ads,\n\ts-auxdec-vms-alpha.adb, s-auxdec-vms_64.ads, s-oscons-tmplt.c,\n\ts-osinte-vxworks.ads, s-osprim-mingw.adb, s-regexp.adb,\n\ts-stusta.adb, s-taprop-mingw.adb, s-taprop-solaris.adb,\n\tscn.adb, scos.ads, sem.adb, sem_aggr.adb, sem_attr.adb,\n\tsem_aux.adb, sem_aux.ads, sem_ch12.adb, sem_ch12.ads,\n\tsem_ch13.adb, sem_ch13.ads, sem_ch3.adb, sem_ch4.adb,\n\tsem_ch6.adb, sem_ch7.adb, sem_ch8.adb, sem_disp.adb,\n\tsem_disp.ads, sem_eval.adb, sem_intr.adb, sem_prag.adb,\n\tsem_res.adb, sem_scil.adb, sem_util.ads, sem_warn.adb,\n\tsem_warn.ads, sinfo.ads, socket.c, styleg.adb, switch.ads,\n\tsysdep.c, tb-alvxw.c, xoscons.adb: Likewise.\n\nFrom-SVN: r168082", "tree": {"sha": "b6e28e67b70cd1bb9cdb8886f6d4b2090f2d7a04", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b6e28e67b70cd1bb9cdb8886f6d4b2090f2d7a04"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "html_url": "https://github.com/Rust-GCC/gccrs/commit/308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/comments", "author": null, "committer": null, "parents": [{"sha": "917e11d7fda32e59f01db97d97d3d9d83895a30b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/917e11d7fda32e59f01db97d97d3d9d83895a30b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/917e11d7fda32e59f01db97d97d3d9d83895a30b"}], "stats": {"total": 692, "additions": 368, "deletions": 324}, "files": [{"sha": "264a2de1c81ff10244f1941a0bc7cea46e712983", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "patch": "@@ -1,3 +1,43 @@\n+2010-12-20  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n+\n+\t* projects.texi: Fix typos.\n+\t* gnat_rm.texi: Likewise.\n+\t* gnat_ugn.texi: Likewise.\n+\t* sem_util.adb: Fix typo in variable, typos in comments.\n+\t* a-btgbso.adb: Fix typos in comments.\n+\t* a-cbdlli.adb, a-cbhase.ads, a-cdlili.adb, a-cobove.adb,\n+\ta-coinve.adb, a-convec.adb, a-direct.ads, a-strunb-shared.adb,\n+\ta-strunb-shared.ads, a-stuten.ads, a-stwiun-shared.adb,\n+\ta-stwiun-shared.ads, a-stzunb-shared.adb, a-stzunb-shared.ads,\n+\ta-suenco.adb, a-suenst.adb, a-suewst.adb, a-suezst.adb, ali.ads,\n+\taspects.ads, atree.ads, binde.adb, bindgen.adb, checks.adb,\n+\tchecks.ads, einfo.ads, err_vars.ads, errout.adb, errout.ads,\n+\texp_aggr.adb, exp_attr.adb, exp_cg.adb, exp_ch3.adb,\n+\texp_ch4.adb, exp_ch5.adb, exp_ch6.adb, exp_ch7.adb,\n+\texp_dbug.ads, exp_disp.adb, exp_fixd.ads, freeze.adb,\n+\tg-altive.ads, g-comlin.ads, g-excact.ads, g-mbdira.adb,\n+\tg-sechas.ads, g-sehash.ads, g-sha1.ads, g-sha224.ads,\n+\tg-sha256.ads, g-sha384.ads, g-sha512.ads, g-shsh32.ads,\n+\tg-shsh64.ads, g-socket.adb, g-socket.ads, g-sothco.ads,\n+\tgcc-interface/decl.c, gcc-interface/trans.c,\n+\tgcc-interface/utils2.c, gnat1drv.adb, init.c, inline.adb,\n+\tlink.c, locales.c, make.adb, mingw32.h, namet.ads, osint.adb,\n+\tpar-ch12.adb, par-ch13.adb, par-ch3.adb, par-ch4.adb,\n+\tpar-prag.adb, par.adb, par_sco.adb, prepcomp.adb,\n+\tprj-conf.ads, prj-dect.adb, prj-env.adb, prj-env.ads,\n+\tprj-nmsc.adb, prj-tree.ads, prj-util.ads, prj.adb, prj.ads,\n+\ts-auxdec-vms-alpha.adb, s-auxdec-vms_64.ads, s-oscons-tmplt.c,\n+\ts-osinte-vxworks.ads, s-osprim-mingw.adb, s-regexp.adb,\n+\ts-stusta.adb, s-taprop-mingw.adb, s-taprop-solaris.adb,\n+\tscn.adb, scos.ads, sem.adb, sem_aggr.adb, sem_attr.adb,\n+\tsem_aux.adb, sem_aux.ads, sem_ch12.adb, sem_ch12.ads,\n+\tsem_ch13.adb, sem_ch13.ads, sem_ch3.adb, sem_ch4.adb,\n+\tsem_ch6.adb, sem_ch7.adb, sem_ch8.adb, sem_disp.adb,\n+\tsem_disp.ads, sem_eval.adb, sem_intr.adb, sem_prag.adb,\n+\tsem_res.adb, sem_scil.adb, sem_util.ads, sem_warn.adb,\n+\tsem_warn.ads, sinfo.ads, socket.c, styleg.adb, switch.ads,\n+\tsysdep.c, tb-alvxw.c, xoscons.adb: Likewise.\n+\n 2010-12-13  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc-interface/decl.c (gnat_to_gnu_entity) <E_General_Access_Type>:"}, {"sha": "bd4dad4b86d6fa6c00f2517153ee405332b94cf0", "filename": "gcc/ada/a-btgbso.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fa-btgbso.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fa-btgbso.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-btgbso.adb?ref=308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "patch": "@@ -546,7 +546,7 @@ package body Ada.Containers.Red_Black_Trees.Generic_Bounded_Set_Operations is\n            \"attempt to tamper with cursors (container is busy)\";\n       end if;\n \n-      --  Note that there's no way to decide apriori whether the\n+      --  Note that there's no way to decide a priori whether the\n       --  target has enough capacity for the union with source.\n       --  We cannot simply compare the sum of the existing lengths\n       --  to the capacity of the target, because equivalent items"}, {"sha": "2dd8a5c879dcc44c10761ecfb748ec58c08dca7c", "filename": "gcc/ada/a-cbdlli.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fa-cbdlli.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fa-cbdlli.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cbdlli.adb?ref=308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "patch": "@@ -583,7 +583,7 @@ package body Ada.Containers.Bounded_Doubly_Linked_Lists is\n       --  logical end being manipulated). The only time we need to actually\n       --  initialize the nodes in the free store is if the node that becomes\n       --  inactive is not at the end of the list. The free store would then\n-      --  be discontigous and so its nodes would need to be linked in the\n+      --  be discontiguous and so its nodes would need to be linked in the\n       --  traditional way.\n       --\n       --  ???\n@@ -1936,7 +1936,7 @@ package body Ada.Containers.Bounded_Doubly_Linked_Lists is\n             return False;\n          end if;\n \n-         if Position.Node = L.First then  -- eliminates ealier disjunct\n+         if Position.Node = L.First then  -- eliminates earlier disjunct\n             return True;\n          end if;\n "}, {"sha": "9618ff3087efd3ccf2684c89aaf08f44fcc5ebe3", "filename": "gcc/ada/a-cbhase.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fa-cbhase.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fa-cbhase.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cbhase.ads?ref=308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "patch": "@@ -258,7 +258,7 @@ package Ada.Containers.Bounded_Hashed_Sets is\n    procedure Symmetric_Difference (Target : in out Set; Source : Set);\n    --  The operation iterates over the Source set, searching for the element\n    --  in Target (calling Hash and Equivalent_Elements). If an equivalent\n-   --  elementis found, it is removed from Target; otherwise it is inserted\n+   --  element is found, it is removed from Target; otherwise it is inserted\n    --  into Target.\n \n    function Symmetric_Difference (Left, Right : Set) return Set;"}, {"sha": "cbac8fd4a1dd13158744921e3f1a22e688d02936", "filename": "gcc/ada/a-cdlili.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fa-cdlili.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fa-cdlili.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cdlili.adb?ref=308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "patch": "@@ -1767,7 +1767,7 @@ package body Ada.Containers.Doubly_Linked_Lists is\n             return False;\n          end if;\n \n-         if Position.Node = L.First then  -- eliminates ealier disjunct\n+         if Position.Node = L.First then  -- eliminates earlier disjunct\n             return True;\n          end if;\n "}, {"sha": "759bab44599d6b50a27077a90704cc7df52edc1e", "filename": "gcc/ada/a-cobove.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fa-cobove.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fa-cobove.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cobove.adb?ref=308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "patch": "@@ -84,7 +84,7 @@ package body Ada.Containers.Bounded_Vectors is\n       --  There are two constraints we need to satisfy. The first constraint is\n       --  that a container cannot have more than Count_Type'Last elements, so\n       --  we must check the sum of the combined lengths. Note that we cannot\n-      --  simply add the lengths, because of the possibilty of overflow.\n+      --  simply add the lengths, because of the possibility of overflow.\n \n       if LN > Count_Type'Last - RN then\n          raise Constraint_Error with \"new length is out of range\";\n@@ -917,7 +917,7 @@ package body Ada.Containers.Bounded_Vectors is\n       --  that a container cannot have more than Count_Type'Last elements, so\n       --  we must check the sum of the current length and the insertion\n       --  count. Note that we cannot simply add these values, because of the\n-      --  possibilty of overflow.\n+      --  possibility of overflow.\n \n       if Old_Length > Count_Type'Last - Count then\n          raise Constraint_Error with \"Count is out of range\";\n@@ -1369,7 +1369,7 @@ package body Ada.Containers.Bounded_Vectors is\n       --  that a container cannot have more than Count_Type'Last elements, so\n       --  we must check the sum of the current length and the insertion\n       --  count. Note that we cannot simply add these values, because of the\n-      --  possibilty of overflow.\n+      --  possibility of overflow.\n \n       if Old_Length > Count_Type'Last - Count then\n          raise Constraint_Error with \"Count is out of range\";"}, {"sha": "c6f8cb26325ae506a991e874a0c0c13633f17dc7", "filename": "gcc/ada/a-coinve.adb", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fa-coinve.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fa-coinve.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-coinve.adb?ref=308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "patch": "@@ -142,7 +142,7 @@ package body Ada.Containers.Indefinite_Vectors is\n       --  There are two constraints we need to satisfy. The first constraint is\n       --  that a container cannot have more than Count_Type'Last elements, so\n       --  we must check the sum of the combined lengths. Note that we cannot\n-      --  simply add the lengths, because of the possibilty of overflow.\n+      --  simply add the lengths, because of the possibility of overflow.\n \n       if LN > Count_Type'Last - RN then\n          raise Constraint_Error with \"new length is out of range\";\n@@ -1343,7 +1343,7 @@ package body Ada.Containers.Indefinite_Vectors is\n       --  that a container cannot have more than Count_Type'Last elements, so\n       --  we must check the sum of the current length and the insertion\n       --  count. Note that we cannot simply add these values, because of the\n-      --  possibilty of overflow.\n+      --  possibility of overflow.\n \n       if Old_Length > Count_Type'Last - Count then\n          raise Constraint_Error with \"Count is out of range\";\n@@ -1684,7 +1684,7 @@ package body Ada.Containers.Indefinite_Vectors is\n             Free (Src);\n \n             --  The new array has a range in the middle containing null access\n-            --  values. We now fill in that partion of the array with the new\n+            --  values. We now fill in that partition of the array with the new\n             --  items.\n \n             for Idx in Before .. Index - 1 loop\n@@ -2076,7 +2076,7 @@ package body Ada.Containers.Indefinite_Vectors is\n       --  that a container cannot have more than Count_Type'Last elements, so\n       --  we must check the sum of the current length and the insertion\n       --  count. Note that we cannot simply add these values, because of the\n-      --  possibilty of overflow.\n+      --  possibility of overflow.\n \n       if Old_Length > Count_Type'Last - Count then\n          raise Constraint_Error with \"Count is out of range\";\n@@ -2833,7 +2833,7 @@ package body Ada.Containers.Indefinite_Vectors is\n \n                Container.Elements := new Elements_Type'(Container.Last, Src);\n \n-               --  We have succesfully allocated a new internal array (with a\n+               --  We have successfully allocated a new internal array (with a\n                --  smaller length than the old one, and containing a copy of\n                --  just the active elements in the container), so we can\n                --  deallocate the old array.\n@@ -2964,7 +2964,7 @@ package body Ada.Containers.Indefinite_Vectors is\n \n                Container.Elements := new Elements_Type'(Container.Last, Src);\n \n-               --  We have succesfully allocated a new internal array (with a\n+               --  We have successfully allocated a new internal array (with a\n                --  smaller length than the old one, and containing a copy of\n                --  just the active elements in the container), so it is now\n                --  safe to deallocate the old array.\n@@ -3023,7 +3023,7 @@ package body Ada.Containers.Indefinite_Vectors is\n \n          Container.Elements.EA (Index_Subtype) := X.EA (Index_Subtype);\n \n-         --  We have moved the elements from the old interal array, so now we\n+         --  We have moved the elements from the old internal array, so now we\n          --  can deallocate it.\n \n          Free (X);"}, {"sha": "6a3d186a200c4838f2b401a322a882b646385787", "filename": "gcc/ada/a-convec.adb", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fa-convec.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fa-convec.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-convec.adb?ref=308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "patch": "@@ -96,7 +96,7 @@ package body Ada.Containers.Vectors is\n       --  There are two constraints we need to satisfy. The first constraint is\n       --  that a container cannot have more than Count_Type'Last elements, so\n       --  we must check the sum of the combined lengths. Note that we cannot\n-      --  simply add the lengths, because of the possibilty of overflow.\n+      --  simply add the lengths, because of the possibility of overflow.\n \n       if LN > Count_Type'Last - RN then\n          raise Constraint_Error with \"new length is out of range\";\n@@ -1008,7 +1008,7 @@ package body Ada.Containers.Vectors is\n       --  that a container cannot have more than Count_Type'Last elements, so\n       --  we must check the sum of the current length and the insertion\n       --  count. Note that we cannot simply add these values, because of the\n-      --  possibilty of overflow.\n+      --  possibility of overflow.\n \n       if Old_Length > Count_Type'Last - Count then\n          raise Constraint_Error with \"Count is out of range\";\n@@ -1664,7 +1664,7 @@ package body Ada.Containers.Vectors is\n       --  that a container cannot have more than Count_Type'Last elements, so\n       --  we must check the sum of the current length and the insertion\n       --  count. Note that we cannot simply add these values, because of the\n-      --  possibilty of overflow.\n+      --  possibility of overflow.\n \n       if Old_Length > Count_Type'Last - Count then\n          raise Constraint_Error with \"Count is out of range\";\n@@ -2414,7 +2414,7 @@ package body Ada.Containers.Vectors is\n \n                Container.Elements := new Elements_Type'(Container.Last, Src);\n \n-               --  We have succesfully allocated a new internal array (with a\n+               --  We have successfully allocated a new internal array (with a\n                --  smaller length than the old one, and containing a copy of\n                --  just the active elements in the container), so it is now\n                --  safe to attempt to deallocate the old array. The old array\n@@ -2549,7 +2549,7 @@ package body Ada.Containers.Vectors is\n \n                Container.Elements := new Elements_Type'(Container.Last, Src);\n \n-               --  We have succesfully allocated a new internal array (with a\n+               --  We have successfully allocated a new internal array (with a\n                --  smaller length than the old one, and containing a copy of\n                --  just the active elements in the container), so it is now\n                --  safe to attempt to deallocate the old array. The old array"}, {"sha": "9e2f880c4a846f45064baac88509f4e69a7db57e", "filename": "gcc/ada/a-direct.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fa-direct.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fa-direct.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-direct.ads?ref=308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "patch": "@@ -205,7 +205,7 @@ package Ada.Directories is\n    --        copy:           Only copy if the destination file does not already\n    --                        exist. If it already exists, Copy_File will fail.\n    --\n-   --        overwrite:      Copy the file in all cases. Overwite an already\n+   --        overwrite:      Copy the file in all cases. Overwrite an already\n    --                        existing destination file. This is the default if\n    --                        no mode= is found in Form.\n    --"}, {"sha": "a85e669693158f4d292cde84678ee579abe73934", "filename": "gcc/ada/a-strunb-shared.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fa-strunb-shared.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fa-strunb-shared.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-strunb-shared.adb?ref=308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "patch": "@@ -86,7 +86,7 @@ package body Ada.Strings.Unbounded is\n          Reference (Empty_Shared_String'Access);\n          DR := Empty_Shared_String'Access;\n \n-      --  Left string is empty, return Rigth string\n+      --  Left string is empty, return Right string\n \n       elsif LR.Last = 0 then\n          Reference (RR);\n@@ -98,7 +98,7 @@ package body Ada.Strings.Unbounded is\n          Reference (LR);\n          DR := LR;\n \n-      --  Overwise, allocate new shared string and fill data\n+      --  Otherwise, allocate new shared string and fill data\n \n       else\n          DR := Allocate (LR.Last + RR.Last);"}, {"sha": "70ba549fd2e0e1babf54edc0b51933e7b51ee3c7", "filename": "gcc/ada/a-strunb-shared.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fa-strunb-shared.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fa-strunb-shared.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-strunb-shared.ads?ref=308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "patch": "@@ -51,7 +51,7 @@\n    --   - Implicit sharing or copy-on-write. An Unbounded_String contains only\n    --     the reference to the data which is shared between several instances.\n    --     The shared data is reallocated only when its value is changed and\n-   --     the object mutation can't be used or it is unefficient to use it.\n+   --     the object mutation can't be used or it is inefficient to use it.\n \n    --   - Object mutation. Shared data object can be reused without memory\n    --     reallocation when all of the following requirements are met:\n@@ -68,7 +68,7 @@\n    --  Reference counting uses GCC builtin atomic operations, which allows to\n    --  safely share internal data between Ada tasks. Nevertheless, this doesn't\n    --  make objects of Unbounded_String thread-safe: each instance can't be\n-   --  accessed by several tasks simulatenously.\n+   --  accessed by several tasks simultaneously.\n \n with Ada.Strings.Maps;\n private with Ada.Finalization;\n@@ -459,7 +459,7 @@ private\n \n    function Allocate (Max_Length : Natural) return Shared_String_Access;\n    --  Allocates new Shared_String with at least specified maximum length.\n-   --  Actual maximum length of the allocated Shared_String can be sligtly\n+   --  Actual maximum length of the allocated Shared_String can be slightly\n    --  greater. Returns reference to Empty_Shared_String when requested length\n    --  is zero.\n "}, {"sha": "b8c09a631db4219360633cc39ce36b3aacd8fde4", "filename": "gcc/ada/a-stuten.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fa-stuten.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fa-stuten.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-stuten.ads?ref=308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "patch": "@@ -49,7 +49,7 @@ package Ada.Strings.UTF_Encoding is\n    --  values encoded in one of three ways (UTF-8, UTF-16BE, or UTF-16LE).\n    --  Typically used in connection with a Scheme parameter indicating which\n    --  of the encodings applies. This is not strictly a String value in the\n-   --  sense defined in the Ada RM, but in practice type String accomodates\n+   --  sense defined in the Ada RM, but in practice type String accommodates\n    --  all possible 256 codes, and can be used to hold any sequence of 8-bit\n    --  codes. We use String directly rather than create a new type so that\n    --  all existing facilities for manipulating type String (e.g. the child"}, {"sha": "6a9f7a60ae60b73ffb740735c6dea758f0adad56", "filename": "gcc/ada/a-stwiun-shared.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fa-stwiun-shared.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fa-stwiun-shared.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-stwiun-shared.adb?ref=308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "patch": "@@ -86,7 +86,7 @@ package body Ada.Strings.Wide_Unbounded is\n          Reference (Empty_Shared_Wide_String'Access);\n          DR := Empty_Shared_Wide_String'Access;\n \n-      --  Left string is empty, return Rigth string.\n+      --  Left string is empty, return Right string.\n \n       elsif LR.Last = 0 then\n          Reference (RR);\n@@ -98,7 +98,7 @@ package body Ada.Strings.Wide_Unbounded is\n          Reference (LR);\n          DR := LR;\n \n-      --  Overwise, allocate new shared string and fill data.\n+      --  Otherwise, allocate new shared string and fill data.\n \n       else\n          DR := Allocate (LR.Last + RR.Last);"}, {"sha": "b6314166a055de2efe7762823fdedbe9985d1fba", "filename": "gcc/ada/a-stwiun-shared.ads", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fa-stwiun-shared.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fa-stwiun-shared.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-stwiun-shared.ads?ref=308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "patch": "@@ -416,7 +416,7 @@ private\n       Last    : Natural                        := 0;\n       Data    : Wide_String (1 .. Max_Length);\n       --  Last is the index of last significant element of the Data. All\n-      --  elements with larger indecies are just an extra room.\n+      --  elements with larger indices are just an extra room.\n    end record;\n \n    type Shared_Wide_String_Access is access all Shared_Wide_String;\n@@ -438,7 +438,7 @@ private\n \n    function Allocate (Max_Length : Natural) return Shared_Wide_String_Access;\n    --  Allocates new Shared_Wide_String with at least specified maximum length.\n-   --  Actual maximum length of the allocated Shared_Wide_String can be sligtly\n+   --  Actual maximum length of the allocated Shared_Wide_String can be slightly\n    --  greater. Returns reference to Empty_Shared_Wide_String when requested\n    --  length is zero.\n \n@@ -452,28 +452,28 @@ private\n       Reference : Shared_Wide_String_Access := Empty_Shared_Wide_String'Access;\n    end record;\n \n-   --  The Unbounded_Wide_String uses several techniques to increasy speed of\n+   --  The Unbounded_Wide_String uses several techniques to increase speed of\n    --  the application:\n    --   - implicit sharing or copy-on-write. Unbounded_Wide_String contains\n    --     only the reference to the data which is shared between several\n    --     instances. The shared data is reallocated only when its value is\n-   --     changed and the object mutation can't be used or it is unefficient to\n+   --     changed and the object mutation can't be used or it is inefficient to\n    --     use it;\n    --   - object mutation. Shared data object can be reused without memory\n    --     reallocation when all of the following requirements are meat:\n    --      - shared data object don't used anywhere longer;\n    --      - its size is sufficient to store new value;\n-   --      - the gap after reuse is less then some threashold.\n+   --      - the gap after reuse is less then some threshold.\n    --   - memory preallocation. Most of used memory allocation algorithms\n-   --     alligns allocated segment on the some boundary, thus some amount of\n+   --     aligns allocated segment on the some boundary, thus some amount of\n    --     additional memory can be preallocated without any impact. Such\n    --     preallocated memory can used later by Append/Insert operations\n    --     without reallocation.\n    --\n    --  Reference counting uses GCC builtin atomic operations, which allows to\n    --  safely share internal data between Ada tasks. Nevertheless, this not\n    --  make objects of Unbounded_Wide_String thread-safe, so each instance\n-   --  can't be accessed by several tasks simulatenously.\n+   --  can't be accessed by several tasks simultaneously.\n \n    pragma Stream_Convert (Unbounded_Wide_String, To_Unbounded, To_Wide_String);\n    --  Provide stream routines without dragging in Ada.Streams"}, {"sha": "bed79790a3c6ba3734dac1d96d4c2388117120c9", "filename": "gcc/ada/a-stzunb-shared.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fa-stzunb-shared.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fa-stzunb-shared.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-stzunb-shared.adb?ref=308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "patch": "@@ -86,7 +86,7 @@ package body Ada.Strings.Wide_Wide_Unbounded is\n          Reference (Empty_Shared_Wide_Wide_String'Access);\n          DR := Empty_Shared_Wide_Wide_String'Access;\n \n-      --  Left string is empty, return Rigth string.\n+      --  Left string is empty, return Right string.\n \n       elsif LR.Last = 0 then\n          Reference (RR);\n@@ -98,7 +98,7 @@ package body Ada.Strings.Wide_Wide_Unbounded is\n          Reference (LR);\n          DR := LR;\n \n-      --  Overwise, allocate new shared string and fill data.\n+      --  Otherwise, allocate new shared string and fill data.\n \n       else\n          DR := Allocate (LR.Last + RR.Last);"}, {"sha": "bea5169c879bae0f29d020c97ca046aa5ef53fdc", "filename": "gcc/ada/a-stzunb-shared.ads", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fa-stzunb-shared.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fa-stzunb-shared.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-stzunb-shared.ads?ref=308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "patch": "@@ -425,7 +425,7 @@ private\n       Last    : Natural                        := 0;\n       Data    : Wide_Wide_String (1 .. Max_Length);\n       --  Last is the index of last significant element of the Data. All\n-      --  elements with larger indecies are just an extra room.\n+      --  elements with larger indices are just an extra room.\n    end record;\n \n    type Shared_Wide_Wide_String_Access is access all Shared_Wide_Wide_String;\n@@ -450,7 +450,7 @@ private\n      (Max_Length : Natural) return Shared_Wide_Wide_String_Access;\n    --  Allocates new Shared_Wide_Wide_String with at least specified maximum\n    --  length. Actual maximum length of the allocated Shared_Wide_Wide_String\n-   --  can be sligtly greater. Returns reference to\n+   --  can be slightly greater. Returns reference to\n    --  Empty_Shared_Wide_Wide_String when requested length is zero.\n \n    Empty_Shared_Wide_Wide_String : aliased Shared_Wide_Wide_String (0);\n@@ -465,28 +465,28 @@ private\n                     Empty_Shared_Wide_Wide_String'Access;\n    end record;\n \n-   --  The Unbounded_Wide_Wide_String uses several techniques to increasy speed\n+   --  The Unbounded_Wide_Wide_String uses several techniques to increase speed\n    --  of the application:\n    --   - implicit sharing or copy-on-write. Unbounded_Wide_Wide_String\n    --     contains only the reference to the data which is shared between\n    --     several instances. The shared data is reallocated only when its value\n-   --     is changed and the object mutation can't be used or it is unefficient\n+   --     is changed and the object mutation can't be used or it is inefficient\n    --     to use it;\n    --   - object mutation. Shared data object can be reused without memory\n    --     reallocation when all of the following requirements are meat:\n    --      - shared data object don't used anywhere longer;\n    --      - its size is sufficient to store new value;\n-   --      - the gap after reuse is less then some threashold.\n+   --      - the gap after reuse is less then some threshold.\n    --   - memory preallocation. Most of used memory allocation algorithms\n-   --     alligns allocated segment on the some boundary, thus some amount of\n+   --     aligns allocated segment on the some boundary, thus some amount of\n    --     additional memory can be preallocated without any impact. Such\n    --     preallocated memory can used later by Append/Insert operations\n    --     without reallocation.\n    --\n    --  Reference counting uses GCC builtin atomic operations, which allows to\n    --  safely share internal data between Ada tasks. Nevertheless, this not\n    --  make objects of Unbounded_Wide_Wide_String thread-safe, so each instance\n-   --  can't be accessed by several tasks simulatenously.\n+   --  can't be accessed by several tasks simultaneously.\n \n    pragma Stream_Convert\n      (Unbounded_Wide_Wide_String, To_Unbounded, To_Wide_Wide_String);"}, {"sha": "00df4ab14d66bc04535ca259a06c9cd7275def20", "filename": "gcc/ada/a-suenco.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fa-suenco.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fa-suenco.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-suenco.adb?ref=308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "patch": "@@ -96,7 +96,7 @@ package body Ada.Strings.UTF_Encoding.Conversions is\n       procedure Get_Continuation;\n       --  Reads a continuation byte of the form 10xxxxxx, shifts R left\n       --  by 6 bits, and or's in the xxxxxx to the low order 6 bits. On\n-      --  return Ptr is incremented. Raises exceptioon if continuation\n+      --  return Ptr is incremented. Raises exception if continuation\n       --  byte does not exist or is invalid.\n \n       ----------------------"}, {"sha": "af057f16b0b6f8d6f243c12994fe5cbdaf9145ae", "filename": "gcc/ada/a-suenst.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fa-suenst.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fa-suenst.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-suenst.adb?ref=308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "patch": "@@ -68,7 +68,7 @@ package body Ada.Strings.UTF_Encoding.Strings is\n       procedure Get_Continuation;\n       --  Reads a continuation byte of the form 10xxxxxx, shifts R left\n       --  by 6 bits, and or's in the xxxxxx to the low order 6 bits. On\n-      --  return Ptr is incremented. Raises exceptioon if continuation\n+      --  return Ptr is incremented. Raises exception if continuation\n       --  byte does not exist or is invalid.\n \n       ----------------------"}, {"sha": "67f39ec2da4184c692a270fc31d64987c126062e", "filename": "gcc/ada/a-suewst.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fa-suewst.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fa-suewst.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-suewst.adb?ref=308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "patch": "@@ -68,7 +68,7 @@ package body Ada.Strings.UTF_Encoding.Wide_Strings is\n       procedure Get_Continuation;\n       --  Reads a continuation byte of the form 10xxxxxx, shifts R left\n       --  by 6 bits, and or's in the xxxxxx to the low order 6 bits. On\n-      --  return Ptr is incremented. Raises exceptioon if continuation\n+      --  return Ptr is incremented. Raises exception if continuation\n       --  byte does not exist or is invalid.\n \n       ----------------------\n@@ -353,7 +353,7 @@ package body Ada.Strings.UTF_Encoding.Wide_Strings is\n             Len := Len + 1;\n             Result (Len) := Wide_Character'Val (C);\n \n-         --  Codes in tne range 16#D800#..16#DFFF# should never appear in the\n+         --  Codes in the range 16#D800#..16#DFFF# should never appear in the\n          --  input, since no valid Unicode characters are in this range (which\n          --  would conflict with the UTF-16 surrogate encodings). Similarly\n          --  codes in the range 16#FFFE#..16#FFFF conflict with BOM codes."}, {"sha": "40266fb926644068e26a5727736db248d173fc86", "filename": "gcc/ada/a-suezst.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fa-suezst.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fa-suezst.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-suezst.adb?ref=308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "patch": "@@ -68,7 +68,7 @@ package body Ada.Strings.UTF_Encoding.Wide_Wide_Strings is\n       procedure Get_Continuation;\n       --  Reads a continuation byte of the form 10xxxxxx, shifts R left\n       --  by 6 bits, and or's in the xxxxxx to the low order 6 bits. On\n-      --  return Ptr is incremented. Raises exceptioon if continuation\n+      --  return Ptr is incremented. Raises exception if continuation\n       --  byte does not exist or is invalid.\n \n       ----------------------"}, {"sha": "ab15ca11f3f261072936973c2d5c0aa6a6cba966", "filename": "gcc/ada/ali.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fali.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fali.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fali.ads?ref=308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "patch": "@@ -843,7 +843,7 @@ package ALI is\n       --  Column number of definition\n \n       Visibility : Visibility_Kind;\n-      --  Visiblity of entity\n+      --  Visibility of entity\n \n       Entity : Name_Id;\n       --  Name of entity"}, {"sha": "9f44197dd42c3402168989a54804e683b399cd73", "filename": "gcc/ada/aspects.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Faspects.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Faspects.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Faspects.ads?ref=308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "patch": "@@ -31,7 +31,7 @@\n \n --  This package defines the aspects that are recognized by GNAT in aspect\n --  specifications. It also contains the subprograms for storing/retrieving\n---  aspect speciciations from the tree. The semantic processing for aspect\n+--  aspect specifications from the tree. The semantic processing for aspect\n --  specifications is found in Sem_Ch13.Analyze_Aspect_Specifications.\n \n with Namet; use Namet;\n@@ -190,7 +190,7 @@ package Aspects is\n    --  True (i.e. the declaration nodes defined in the RM as permitting the\n    --  presence of Aspect_Specifications). However, it is possible for the\n    --  flag Has_Aspects to be set on other nodes as a result of Rewrite and\n-   --  Replace calls, and this function may be used to retrive the aspect\n+   --  Replace calls, and this function may be used to retrieve the aspect\n    --  specifications for the original rewritten node in such cases.\n \n    procedure Set_Aspect_Specifications (N : Node_Id; L : List_Id);\n@@ -213,6 +213,6 @@ package Aspects is\n    --  Writes contents of Aspect_Specifications hash table to the tree file\n \n    procedure Tree_Read;\n-   --  Reads contents of Aspect_Specificatins hash table from the tree file\n+   --  Reads contents of Aspect_Specifications hash table from the tree file\n \n end Aspects;"}, {"sha": "cf8573f0b5c16863bd390cc6f22f3468e77e0e5d", "filename": "gcc/ada/atree.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fatree.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fatree.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fatree.ads?ref=308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "patch": "@@ -844,7 +844,7 @@ package Atree is\n    --  This is similar to Rewrite, except that the old value of Old_Node is\n    --  not saved, and the New_Node is deleted after the replace, since it\n    --  is assumed that it can no longer be legitimately needed. The flag\n-   --  Is_Rewrite_Susbtitute will be False for the resulting node, unless\n+   --  Is_Rewrite_Substitution will be False for the resulting node, unless\n    --  it was already true on entry, and Original_Node will not return the\n    --  original contents of the Old_Node, but rather the New_Node value (unless\n    --  Old_Node had already been rewritten using Rewrite). Replace also"}, {"sha": "46dc6d2a54670bd8cb5304a8a872c95d9447d3bf", "filename": "gcc/ada/binde.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fbinde.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fbinde.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbinde.adb?ref=308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "patch": "@@ -1515,7 +1515,7 @@ package body Binde is\n       --  A before the spec of B if it could. Since it could not, there it\n       --  must be the case that A depends on B. It is therefore a good idea\n       --  to put the body of B last so that if there is an elaboration order\n-      --  problem, we will find it (that's what pssimistic order is about)\n+      --  problem, we will find it (that's what pessimistic order is about)\n \n       elsif Is_Waiting_Body (U1) and then Is_Waiting_Body (U2) then\n          declare"}, {"sha": "b17d7b9a1af834e70f8a14ce3894dbd08558c60f", "filename": "gcc/ada/bindgen.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fbindgen.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fbindgen.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbindgen.adb?ref=308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "patch": "@@ -2120,7 +2120,7 @@ package body Bindgen is\n       --  Write user linker options, i.e. the set of linker options that come\n       --  from all files other than GNAT internal files, Lgnat is left set to\n       --  point to the first entry from a GNAT internal file, or past the end\n-      --  of the entriers if there are no internal files.\n+      --  of the entries if there are no internal files.\n \n       Lgnat := Linker_Options.Last + 1;\n "}, {"sha": "46a966827fccb78d4702a8604679b7f3928ce327", "filename": "gcc/ada/checks.adb", "status": "modified", "additions": 15, "deletions": 14, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fchecks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fchecks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fchecks.adb?ref=308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "patch": "@@ -102,7 +102,7 @@ package body Checks is\n    --  how we ensure that this condition is met.\n \n    --  First, we need to know for certain that the previous expression has\n-   --  been executed. This is done principly by the mechanism of calling\n+   --  been executed. This is done principally by the mechanism of calling\n    --  Conditional_Statements_Begin at the start of any statement sequence\n    --  and Conditional_Statements_End at the end. The End call causes all\n    --  checks remembered since the Begin call to be discarded. This does\n@@ -159,7 +159,7 @@ package body Checks is\n       Target_Type : Entity_Id;\n       --  Used only if Do_Range_Check is set. Records the target type for\n       --  the check. We need this, because a check is a duplicate only if\n-      --  it has a the same target type (or more accurately one with a\n+      --  it has the same target type (or more accurately one with a\n       --  range that is smaller or equal to the stored target type of a\n       --  saved check).\n    end record;\n@@ -650,10 +650,11 @@ package body Checks is\n          return;\n       end if;\n \n-      --  Here we do not know if the value is acceptable. Stricly we don't have\n-      --  to do anything, since if the alignment is bad, we have an erroneous\n-      --  program. However we are allowed to check for erroneous conditions and\n-      --  we decide to do this by default if the check is not suppressed.\n+      --  Here we do not know if the value is acceptable. Strictly we don't\n+      --  have to do anything, since if the alignment is bad, we have an\n+      --  erroneous program. However we are allowed to check for erroneous\n+      --  conditions and we decide to do this by default if the check is not\n+      --  suppressed.\n \n       --  However, don't do the check if elaboration code is unwanted\n \n@@ -1003,7 +1004,7 @@ package body Checks is\n          return;\n       end if;\n \n-      --  Apply required constaint checks\n+      --  Apply required constraint checks\n \n       if Is_Scalar_Type (Typ) then\n          Apply_Scalar_Range_Check (N, Typ);\n@@ -2148,7 +2149,7 @@ package body Checks is\n \n                --  If checks are off, then analyze the length check after\n                --  temporarily attaching it to the tree in case the relevant\n-               --  condition can be evaluted at compile time. We still want a\n+               --  condition can be evaluated at compile time. We still want a\n                --  compile time warning in this case.\n \n                else\n@@ -2770,7 +2771,7 @@ package body Checks is\n               (\"use `OR ELSE` instead of OR?\", P);\n          end if;\n \n-         --  If not short-circuited, we need the ckeck\n+         --  If not short-circuited, we need the check\n \n          return True;\n \n@@ -4029,7 +4030,7 @@ package body Checks is\n       then\n          return;\n \n-      --  No check on a univeral real constant. The context will eventually\n+      --  No check on a universal real constant. The context will eventually\n       --  convert it to a machine number for some target type, or report an\n       --  illegality.\n \n@@ -4038,7 +4039,7 @@ package body Checks is\n       then\n          return;\n \n-      --  If the expression denotes a component of a packed boolean arrray,\n+      --  If the expression denotes a component of a packed boolean array,\n       --  no possible check applies. We ignore the old ACATS chestnuts that\n       --  involve Boolean range True..True.\n \n@@ -5226,7 +5227,7 @@ package body Checks is\n               Reason => CE_Invalid_Data),\n             Suppress => Validity_Check);\n \n-         --  If the expression is a a reference to an element of a bit-packed\n+         --  If the expression is a reference to an element of a bit-packed\n          --  array, then it is rewritten as a renaming declaration. If the\n          --  expression is an actual in a call, it has not been expanded,\n          --  waiting for the proper point at which to do it. The same happens\n@@ -5343,7 +5344,7 @@ package body Checks is\n                   return False;\n                end if;\n \n-               --  If we are in a case eexpression, and not part of the\n+               --  If we are in a case expression, and not part of the\n                --  expression, then we return False, since a particular\n                --  branch may not always be elaborated\n \n@@ -6073,7 +6074,7 @@ package body Checks is\n             --  The checking code to be generated will freeze the\n             --  corresponding array type. However, we must freeze the\n             --  type now, so that the freeze node does not appear within\n-            --  the generated condional expression, but ahead of it.\n+            --  the generated conditional expression, but ahead of it.\n \n             Freeze_Before (Ck_Node, T_Typ);\n "}, {"sha": "509a55c2533e08259f1387be444f0c7a4c4e8cc5", "filename": "gcc/ada/checks.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fchecks.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fchecks.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fchecks.ads?ref=308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "patch": "@@ -150,7 +150,7 @@ package Checks is\n    --  where the target object may be needed to determine the subtype to\n    --  check against (such as the cases of unconstrained formal parameters\n    --  and unconstrained aliased objects). For the case of unconstrained\n-   --  formals, the check is peformed only if the corresponding actual is\n+   --  formals, the check is performed only if the corresponding actual is\n    --  constrained, i.e., whether Lhs'Constrained is True.\n \n    procedure Apply_Predicate_Check (N : Node_Id; Typ : Entity_Id);"}, {"sha": "88fabd76fc9423f99180a6cebcc1c645d0e30d70", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 13, "deletions": 12, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "patch": "@@ -504,7 +504,7 @@ package Einfo is\n --       which can never have a null value. This is set True for constant\n --       access values initialized to a non-null value. This is also True for\n --       all access parameters in Ada 83 and Ada 95 modes, and for access\n---       parameters that explicily exclude null in Ada 2005.\n+--       parameters that explicitly exclude null in Ada 2005.\n --\n --       This is used to avoid unnecessary resetting of the Is_Known_Non_Null\n --       flag for such entities. In Ada 2005 mode, this is also used when\n@@ -632,7 +632,7 @@ package Einfo is\n --       where Comes_From_Source is always False.\n \n --    Corresponding_Protected_Entry (Node18)\n---       Present in subrogram bodies. Set for subprogram bodies that implement\n+--       Present in subprogram bodies. Set for subprogram bodies that implement\n --       a protected type entry to point to the entity for the entry.\n \n --    Corresponding_Record_Type (Node18)\n@@ -642,7 +642,8 @@ package Einfo is\n \n --    Corresponding_Remote_Type (Node22)\n --       Present in record types that describe the fat pointer structure for\n---       Remote_Access_To_Subrogram types. References the original access type.\n+--       Remote_Access_To_Subprogram types. References the original access\n+--       type.\n \n --    CR_Discriminant (Node23)\n --       Present in discriminants of concurrent types. Denotes the homologous\n@@ -1055,7 +1056,7 @@ package Einfo is\n --       Etype of the N_Null node is Empty.\n \n --    Exception_Code (Uint22)\n---       Present in exception entitites. Set to zero unless either an\n+--       Present in exception entities. Set to zero unless either an\n --       Import_Exception or Export_Exception pragma applies to the\n --       pragma and specifies a Code value. See description of these\n --       pragmas for details. Note that this field is relevant only if\n@@ -1175,7 +1176,7 @@ package Einfo is\n \n --    First_Exit_Statement (Node8)\n --       Present in E_Loop entity. The exit statements for a loop are chained\n---       (in reverse order of appearence) using this field to point to the\n+--       (in reverse order of appearance) using this field to point to the\n --       first entry in the chain (last exit statement in the loop). The\n --       entries are chained through the Next_Exit_Statement field of the\n --       N_Exit_Statement node with Empty marking the end of the list.\n@@ -1335,7 +1336,7 @@ package Einfo is\n --    Has_Anon_Block_Suffix (Flag201)\n --       Present in all entities. Set if the entity is nested within one or\n --       more anonymous blocks and the Chars field contains a name with an\n---       anonymous block suffix (see Exp_Dbug for furthert details).\n+--       anonymous block suffix (see Exp_Dbug for further details).\n \n --    Has_Atomic_Components (Flag86) [implementation base type only]\n --       Present in all types and objects. Set only for an array type or\n@@ -1548,7 +1549,7 @@ package Einfo is\n --       Present in functions and generic functions. Set if there is one or\n --       more missing return statements in the function. This is used to\n --       control wrapping of the body in Exp_Ch6 to ensure that the program\n---       error exeption is correctly raised in this case at runtime.\n+--       error exception is correctly raised in this case at runtime.\n \n --    Has_Up_Level_Access (Flag215)\n --      Present in E_Variable and E_Constant entities. Set if the entity\n@@ -3663,7 +3664,7 @@ package Einfo is\n --    Subprograms_For_Type (Node29)\n --       Present in all type entities, and in subprogram entities. This is used\n --       to hold a list of subprogram entities for subprograms associated with\n---       the type, linked through the Suprogram_List field of the subprogram\n+--       the type, linked through the Subprogram_List field of the subprogram\n --       entity. Basically this is a way of multiplexing the single field to\n --       hold more than one entity (since we ran out of space in some type\n --       entities). This is currently used for Invariant_Procedure and also\n@@ -5676,9 +5677,9 @@ package Einfo is\n       Calign_Component_Size_4, -- natural for size <= 4, 4 for size >= 4\n       Calign_Storage_Unit);    -- all components byte aligned\n \n-   ----------------------------------\n-   -- Floating Point Repesentation --\n-   ----------------------------------\n+   -----------------------------------\n+   -- Floating Point Representation --\n+   -----------------------------------\n \n    type Float_Rep_Kind is (\n       IEEE_Binary,  -- IEEE 754p conform binary format\n@@ -7032,7 +7033,7 @@ package Einfo is\n      (E   : Entity_Id;\n       Nam : Name_Id) return Node_Id;\n    --  Searches the Rep_Item chain for a given entity E, for an instance of a\n-   --  rep item (pragma, attribute definition clause, or aspect specitication)\n+   --  rep item (pragma, attribute definition clause, or aspect specification)\n    --  whose name matches the given name. If one is found, it is returned,\n    --  otherwise Empty is returned. Unlike the other Get routines for the\n    --  Rep_Item chain, this only returns items whose entity matches E (it"}, {"sha": "2cf2bedc9a6e5f989bd37eaff46dda010c658a78", "filename": "gcc/ada/err_vars.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Ferr_vars.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Ferr_vars.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferr_vars.ads?ref=308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "patch": "@@ -35,7 +35,7 @@ package Err_Vars is\n    --  All of these variables are set when needed, so they do not need to be\n    --  initialized. However, there is code that saves and restores existing\n    --  values, which may malfunction in -gnatVa mode if the variable has never\n-   --  been iniitalized, so we initialize some variables to avoid exceptions\n+   --  been initialized, so we initialize some variables to avoid exceptions\n    --  from invalid values in such cases.\n \n    ------------------"}, {"sha": "0fb8f9e12781ce3c22595517b6718cda251f96d9", "filename": "gcc/ada/errout.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Ferrout.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Ferrout.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferrout.adb?ref=308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "patch": "@@ -2144,7 +2144,7 @@ package body Errout is\n       --  if the loop does not exit, then the desired case will be left set to\n       --  Mixed_Case, this can happen if the name was not in canonical form,\n       --  and gets canonicalized on VMS. Possibly we could fix this by\n-      --  unconditinally canonicalizing these names ???\n+      --  unconditionally canonicalizing these names ???\n \n       for J in 1 .. Last_Source_File loop\n          Get_Name_String (Full_Debug_Name (J));"}, {"sha": "1dc22797cd105be51bb69c5f5155e0c48a59bde1", "filename": "gcc/ada/errout.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Ferrout.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Ferrout.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferrout.ads?ref=308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "patch": "@@ -202,7 +202,7 @@ package Errout is\n    --      are that an RM reference may follow in the form (RM .....) and a\n    --      right parenthesis may immediately follow the #. In the case of\n    --      continued messages, # can only appear at the end of a group of\n-   --      continuation messsages, except that \\\\ messages which always start\n+   --      continuation messages, except that \\\\ messages which always start\n    --      a new line end the sequence from the point of view of this rule.\n    --      The idea is that for any use of -gnatj, it will still be the case\n    --      that a location reference appears only at the end of a line."}, {"sha": "64d8127e5a2f0092e6aa0b97ba066eb266dfbda2", "filename": "gcc/ada/exp_aggr.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fexp_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fexp_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_aggr.adb?ref=308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "patch": "@@ -1101,7 +1101,7 @@ package body Exp_Aggr is\n \n             if Is_Delayed_Aggregate (Expr_Q) then\n \n-               --  This is either a subaggregate of a multidimentional array,\n+               --  This is either a subaggregate of a multidimensional array,\n                --  or a component of an array type whose component type is\n                --  also an array. In the latter case, the expression may have\n                --  component associations that provide different bounds from\n@@ -3731,7 +3731,7 @@ package body Exp_Aggr is\n \n       function Is_Flat (N : Node_Id; Dims : Int) return Boolean;\n       --  Return True iff the array N is flat (which is not trivial in the case\n-      --  of multidimensionsl aggregates).\n+      --  of multidimensional aggregates).\n \n       -----------------------------\n       -- Check_Static_Components --"}, {"sha": "fe92f98cb1b2256b2f996b5fb8efcc64c1b644ee", "filename": "gcc/ada/exp_attr.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fexp_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fexp_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_attr.adb?ref=308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "patch": "@@ -1275,7 +1275,7 @@ package body Exp_Attr is\n       --  and T is B for the cases of Body_Version, or Version applied to a\n       --  subprogram acting as its own spec, and S for Version applied to a\n       --  subprogram spec or package. This sequence of code references the\n-      --  the unsigned constant created in the main program by the binder.\n+      --  unsigned constant created in the main program by the binder.\n \n       --  A special exception occurs for Standard, where the string returned\n       --  is a copy of the library string in gnatvsn.ads."}, {"sha": "4f9666476fe49af14b4797ef63b90178f2565604", "filename": "gcc/ada/exp_cg.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fexp_cg.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fexp_cg.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_cg.adb?ref=308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "patch": "@@ -354,7 +354,8 @@ package body Exp_CG is\n            or else Entity_Is_In_Main_Unit (Current_Scope)\n          then\n             --  Register a copy of the dispatching call node. Needed since the\n-            --  node containing a dispatching call is rewriten by the expander.\n+            --  node containing a dispatching call is rewritten by the\n+            --  expander.\n \n             declare\n                Copy : constant Node_Id := New_Copy (N);"}, {"sha": "ecbb9a3a974cec7532eddab4f746865cf2ac8b05", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "patch": "@@ -4961,7 +4961,7 @@ package body Exp_Ch3 is\n \n                   Analyze (N, Suppress => All_Checks);\n \n-                  --  Replace internal identifier of rewriten node by the\n+                  --  Replace internal identifier of rewritten node by the\n                   --  identifier found in the sources. We also have to exchange\n                   --  entities containing their defining identifiers to ensure\n                   --  the correct replacement of the object declaration by this\n@@ -6098,7 +6098,7 @@ package body Exp_Ch3 is\n             --  wrapper functions for each nonoverridden inherited function\n             --  with a controlling result of the type. The wrapper for such\n             --  a function returns an extension aggregate that invokes the\n-            --  the parent function.\n+            --  parent function.\n \n             if Ada_Version >= Ada_2005\n               and then not Is_Abstract_Type (Def_Id)"}, {"sha": "fa1ad4f4459e813ae683baf44fe58b64c58a97ce", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 10, "deletions": 9, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "patch": "@@ -2340,7 +2340,7 @@ package body Exp_Ch4 is\n       --  in packages System.Concat_n.\n \n       Known_Non_Null_Operand_Seen : Boolean;\n-      --  Set True during generation of the assignements of operands into\n+      --  Set True during generation of the assignments of operands into\n       --  result once an operand known to be non-null has been seen.\n \n       function Make_Artyp_Literal (Val : Nat) return Node_Id;\n@@ -2434,9 +2434,10 @@ package body Exp_Ch4 is\n \n       --  We can't just use the index type, or even its base type for this\n       --  purpose for two reasons. First it might be an enumeration type which\n-      --  is not suitable fo computations of any kind, and second it may simply\n-      --  not have enough range. For example if the index type is -128..+127\n-      --  then lengths can be up to 256, which is out of range of the type.\n+      --  is not suitable for computations of any kind, and second it may\n+      --  simply not have enough range. For example if the index type is\n+      --  -128..+127 then lengths can be up to 256, which is out of range of\n+      --  the type.\n \n       --  For enumeration types, we can simply use Standard_Integer, this is\n       --  sufficient since the actual number of enumeration literals cannot\n@@ -3486,7 +3487,7 @@ package body Exp_Ch4 is\n \n       --  Same if the allocator is an access discriminant for a local object:\n       --  instead of an allocator we create a local value and constrain the\n-      --  the enclosing object with the corresponding access attribute.\n+      --  enclosing object with the corresponding access attribute.\n \n       if Is_Static_Coextension (N) then\n          Rewrite_Coextension (N);\n@@ -3517,7 +3518,7 @@ package body Exp_Ch4 is\n          --    raise Storage_Error;\n          --  end if;\n \n-         --  where 3.5 gigabytes is a constant large enough to accomodate any\n+         --  where 3.5 gigabytes is a constant large enough to accommodate any\n          --  reasonable request for. But we can't do it this way because at\n          --  least at the moment we don't compute this attribute right, and\n          --  can silently give wrong results when the result gets large. Since\n@@ -4140,7 +4141,7 @@ package body Exp_Ch4 is\n       --         Cnn := else-expr'Unrestricted_Access;\n       --      end if;\n \n-      --  and replace the conditional expresion by a reference to Cnn.all.\n+      --  and replace the conditional expression by a reference to Cnn.all.\n \n       --  This special case can be skipped if the back end handles limited\n       --  types properly and ensures that no incorrect copies are made.\n@@ -4415,7 +4416,7 @@ package body Exp_Ch4 is\n    --  Start of processing for Expand_N_In\n \n    begin\n-      --  If set membersip case, expand with separate procedure\n+      --  If set membership case, expand with separate procedure\n \n       if Present (Alternatives (N)) then\n          Remove_Side_Effects (Lop);\n@@ -8373,7 +8374,7 @@ package body Exp_Ch4 is\n       --  target is a real type or a 64-bit integer type, and the operand\n       --  is an arithmetic operation using a 32-bit integer type. However,\n       --  we do not bother with this case, because it could cause significant\n-      --  ineffiencies on 32-bit machines. On a 64-bit machine it would be\n+      --  inefficiencies on 32-bit machines. On a 64-bit machine it would be\n       --  much cheaper, but we don't want different behavior on 32-bit and\n       --  64-bit machines. Note that the exclusion of the 64-bit case also\n       --  handles the configurable run-time cases where 64-bit arithmetic"}, {"sha": "bdd5d3adce8eb612ac486d0bacfaa9cd685b1f0b", "filename": "gcc/ada/exp_ch5.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fexp_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fexp_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch5.adb?ref=308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "patch": "@@ -892,7 +892,7 @@ package body Exp_Ch5 is\n                end if;\n \n                --  Reset the Analyzed flag, because the bounds of the index\n-               --  type itself may be universal, and must must be reaanalyzed\n+               --  type itself may be universal, and must must be reanalyzed\n                --  to acquire the proper type for the back end.\n \n                Set_Analyzed (Cleft_Lo, False);\n@@ -3200,7 +3200,7 @@ package body Exp_Ch5 is\n \n    --  Note: the expander can handle generation of loops over predicated\n    --  subtypes for both the dynamic and static cases. Depending on what\n-   --  we decide is allowed in Ada 2012 mode and/or extentions allowed\n+   --  we decide is allowed in Ada 2012 mode and/or extensions allowed\n    --  mode, the semantic analyzer may disallow one or both forms.\n \n    procedure Expand_Predicated_Loop (N : Node_Id) is"}, {"sha": "1a5fd1376095d1b8989a82568b0dd7b2dc4c0d9c", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "patch": "@@ -2403,7 +2403,7 @@ package body Exp_Ch6 is\n             --  Ada 2005 (AI-231): Check null-excluding access types. Note that\n             --  the intent of 6.4.1(13) is that null-exclusion checks should\n             --  not be done for 'out' parameters, even though it refers only\n-            --  to constraint checks, and a null_exlusion is not a constraint.\n+            --  to constraint checks, and a null_exclusion is not a constraint.\n             --  Note that AI05-0196-1 corrects this mistake in the RM.\n \n             if Is_Access_Type (Etype (Formal))\n@@ -3231,7 +3231,7 @@ package body Exp_Ch6 is\n       --  Functions returning controlled objects need special attention:\n       --  if the return type is limited, the context is an initialization\n       --  and different processing applies. If the call is to a protected\n-      --  function, the expansion above will call Expand_Call recusively.\n+      --  function, the expansion above will call Expand_Call recursively.\n       --  To prevent a double attachment, check that the current call is\n       --  not a rewriting of a protected function call.\n "}, {"sha": "ebfac59d42f177813714486aaf9eaad8b7fa8c57", "filename": "gcc/ada/exp_ch7.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fexp_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fexp_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch7.adb?ref=308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "patch": "@@ -2703,7 +2703,7 @@ package body Exp_Ch7 is\n    ---------------------------\n \n    --  The Deep procedures call the appropriate Controlling proc on the\n-   --  the controller component. In the init case, it also attach the\n+   --  controller component. In the init case, it also attach the\n    --  controller to the current finalization list.\n \n    function Make_Deep_Record_Body"}, {"sha": "5dcbd91488e14861b9f59f2781efa9b0e7373887", "filename": "gcc/ada/exp_dbug.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fexp_dbug.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fexp_dbug.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_dbug.ads?ref=308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "patch": "@@ -416,7 +416,7 @@ package Exp_Dbug is\n    --  ??? We want to migrate all platforms to use the same convention. As a\n    --  first step, we force this constant to always be True. This constant will\n    --  eventually be deleted after we have verified that the migration does not\n-   --  cause any unforseen adverse impact. We chose \"__\" because it is\n+   --  cause any unforeseen adverse impact. We chose \"__\" because it is\n    --  supported on all platforms, which is not the case of \"$\".\n \n    procedure Get_External_Name"}, {"sha": "9cf300fd96aac608dc81428c956058c8d7b05f2a", "filename": "gcc/ada/exp_disp.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fexp_disp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fexp_disp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_disp.adb?ref=308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "patch": "@@ -980,7 +980,7 @@ package body Exp_Disp is\n               Parent (Entity (Prefix (Controlling_Tag))));\n \n          --  For a direct reference of the tag of the type the SCIL node\n-         --  references the the internal object declaration containing the tag\n+         --  references the internal object declaration containing the tag\n          --  of the type.\n \n          elsif Nkind (Controlling_Tag) = N_Attribute_Reference\n@@ -7519,7 +7519,7 @@ package body Exp_Disp is\n          --  excluded from this check because interfaces must be visible in\n          --  the public and private part (RM 7.3 (7.3/2))\n \n-         --  We disable this check in CodePeer mode, to accomodate legacy\n+         --  We disable this check in CodePeer mode, to accommodate legacy\n          --  Ada code.\n \n          if not CodePeer_Mode"}, {"sha": "c1dc847a2c2ca48a049570a55c4da44251e453dc", "filename": "gcc/ada/exp_fixd.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fexp_fixd.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fexp_fixd.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_fixd.ads?ref=308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "patch": "@@ -133,7 +133,7 @@ package Exp_Fixd is\n    procedure Expand_Multiply_Integer_By_Fixed_Giving_Fixed (N : Node_Id);\n    --  This routine expands the multiplication between standard integer and a\n    --  fixed-point type. The result type is the same fixed-point type as the\n-   --  the fixed operand type. N is an N_Op_Multiply node whose result type\n+   --  fixed operand type. N is an N_Op_Multiply node whose result type\n    --  and right operand types are the fixed-point type, and whose left operand\n    --  type is always standard integer.\n "}, {"sha": "9ef3a55a508e3ade6390edfbd35e67ab4dd9b61a", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "patch": "@@ -234,7 +234,7 @@ package body Freeze is\n           (not In_Same_Source_Unit (Renamed_Subp, Ent)\n             or else Sloc (Renamed_Subp) < Sloc (Ent))\n \n-        --  We can make the renaming entity intrisic if the renamed function\n+        --  We can make the renaming entity intrinsic if the renamed function\n         --  has an interface name, or if it is one of the shift/rotate\n         --  operations known to the compiler.\n \n@@ -784,7 +784,7 @@ package body Freeze is\n                return False;\n \n             --  A subtype of a variant record must not have non-static\n-            --  discriminanted components.\n+            --  discriminated components.\n \n             elsif T /= Base_Type (T)\n               and then not Static_Discriminated_Components (T)\n@@ -2373,7 +2373,7 @@ package body Freeze is\n       --  Deal with delayed aspect specifications. At the point of occurrence\n       --  of the aspect definition, we preanalyzed the argument, to capture\n       --  the visibility at that point, but the actual analysis of the aspect\n-      --  is required to be delayed to the freeze point, so we evalute the\n+      --  is required to be delayed to the freeze point, so we evaluate the\n       --  pragma or attribute definition clause in the tree at this point.\n \n       if Has_Delayed_Aspects (E) then\n@@ -2701,7 +2701,7 @@ package body Freeze is\n                         end if;\n                      end if;\n \n-                     --  Give warning for suspicous return of a result of an\n+                     --  Give warning for suspicious return of a result of an\n                      --  unconstrained array type in a foreign convention\n                      --  function.\n \n@@ -2958,7 +2958,7 @@ package body Freeze is\n       else\n          --  We used to check here that a full type must have preelaborable\n          --  initialization if it completes a private type specified with\n-         --  pragma Preelaborable_Intialization, but that missed cases where\n+         --  pragma Preelaborable_Initialization, but that missed cases where\n          --  the types occur within a generic package, since the freezing\n          --  that occurs within a containing scope generally skips traversal\n          --  of a generic unit's declarations (those will be frozen within"}, {"sha": "392b7908dc77c67c479fbf6d3da269631dd65814", "filename": "gcc/ada/g-altive.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fg-altive.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fg-altive.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-altive.ads?ref=308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "patch": "@@ -143,7 +143,7 @@\n --    additional facilities.\n \n --  The identification of the low level interface is directly inspired by the\n---  the base API organization, basically consisting of a rich set of functions\n+--  base API organization, basically consisting of a rich set of functions\n --  around a core of low level primitives mapping to AltiVec instructions.\n \n --  See for instance \"vec_add\" in [PIM-4.4 Generic and Specific AltiVec"}, {"sha": "4ee683a49d47636a6a6c25d3c160288e81147b50", "filename": "gcc/ada/g-comlin.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fg-comlin.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fg-comlin.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-comlin.ads?ref=308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "patch": "@@ -187,7 +187,7 @@\n --     Display_Help (Config);\n --  that will display a properly formatted help message for your application,\n --  listing all possible switches. That way you have a single place in which\n---  to maintain the list of switches and their meaning, rather than maintaing\n+--  to maintain the list of switches and their meaning, rather than maintaining\n --  both the string to pass to Getopt and a subprogram to display the help.\n --  Both will properly stay synchronized.\n "}, {"sha": "77abadac8fbdd7dd44e5f24471ae04362f1777f9", "filename": "gcc/ada/g-excact.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fg-excact.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fg-excact.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-excact.ads?ref=308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "patch": "@@ -54,7 +54,7 @@ with Ada.Exceptions; use Ada.Exceptions;\n package GNAT.Exception_Actions is\n \n    type Exception_Action is access\n-     procedure (Occurence : Exception_Occurrence);\n+     procedure (Occurrence : Exception_Occurrence);\n    --  General callback type whenever an exception is raised. The callback\n    --  procedure must not propagate an exception (execution of the program\n    --  is erroneous if such an exception is propagated)."}, {"sha": "44937f9d6a5c39d2ab47fe60e487282180f0d612", "filename": "gcc/ada/g-mbdira.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fg-mbdira.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fg-mbdira.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-mbdira.adb?ref=308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "patch": "@@ -60,7 +60,7 @@ package body GNAT.MBBS_Discrete_Random is\n    --  One might assume that we could get a more accurate result by testing\n    --  the lower and upper bounds of the type Rst against the bounds of 32-bit\n    --  Integer. However, there is no easy way to do that. Why? Because in the\n-   --  relatively rare case where this expresion has to be evaluated at run\n+   --  relatively rare case where this expression has to be evaluated at run\n    --  time rather than compile time (when the bounds are dynamic), we need a\n    --  type to use for the computation. But the possible range of upper bound\n    --  values for Rst (remembering the possibility of 64-bit modular types) is"}, {"sha": "7fe34b172f8b5021cc0e9cd3c555fa88cade80b9", "filename": "gcc/ada/g-sechas.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fg-sechas.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fg-sechas.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-sechas.ads?ref=308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "patch": "@@ -29,7 +29,7 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  This package provides common suporting code for a family of secure\n+--  This package provides common supporting code for a family of secure\n --  hash functions (including MD5 and the FIPS PUB 180-3 functions SHA-1,\n --  SHA-224, SHA-256, SHA-384 and SHA-512).\n "}, {"sha": "898f2adfa5bae77f9e1a50a07e4bd52a183467c3", "filename": "gcc/ada/g-sehash.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fg-sehash.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fg-sehash.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-sehash.ads?ref=308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "patch": "@@ -30,7 +30,7 @@\n ------------------------------------------------------------------------------\n \n --  This package provides supporting code for implementation of the SHA-1\n---  secure hash function as decsribed in FIPS PUB 180-3. The complete text\n+--  secure hash function as described in FIPS PUB 180-3. The complete text\n --  of FIPS PUB 180-3 can be found at:\n --    http://csrc.nist.gov/publications/fips/fips180-3/fips180-3_final.pdf\n "}, {"sha": "06fe9bc8e7cb3bd5392a4d7f12730037b800513b", "filename": "gcc/ada/g-sha1.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fg-sha1.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fg-sha1.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-sha1.ads?ref=308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "patch": "@@ -31,7 +31,7 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  This package implaments the SHA-1 secure hash function as decsribed in\n+--  This package implements the SHA-1 secure hash function as described in\n --  FIPS PUB 180-3. The complete text of FIPS PUB 180-3 can be found at:\n --    http://csrc.nist.gov/publications/fips/fips180-3/fips180-3_final.pdf\n "}, {"sha": "4b81112bbdb4cf89421bded8602714f4d4221304", "filename": "gcc/ada/g-sha224.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fg-sha224.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fg-sha224.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-sha224.ads?ref=308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "patch": "@@ -29,7 +29,7 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  This package implaments the SHA-224 secure hash function as decsribed in\n+--  This package implements the SHA-224 secure hash function as described in\n --  FIPS PUB 180-3. The complete text of FIPS PUB 180-3 can be found at:\n --    http://csrc.nist.gov/publications/fips/fips180-3/fips180-3_final.pdf\n "}, {"sha": "a638ff974efa1a8be452ea3a9d5ebc76eb9d9bce", "filename": "gcc/ada/g-sha256.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fg-sha256.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fg-sha256.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-sha256.ads?ref=308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "patch": "@@ -29,7 +29,7 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  This package implaments the SHA-256 secure hash function as decsribed in\n+--  This package implements the SHA-256 secure hash function as described in\n --  FIPS PUB 180-3. The complete text of FIPS PUB 180-3 can be found at:\n --    http://csrc.nist.gov/publications/fips/fips180-3/fips180-3_final.pdf\n "}, {"sha": "7a63d7e6ef21ceb0058c70cbad510f70ba9ac3fa", "filename": "gcc/ada/g-sha384.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fg-sha384.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fg-sha384.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-sha384.ads?ref=308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "patch": "@@ -29,7 +29,7 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  This package implaments the SHA-384 secure hash function as decsribed in\n+--  This package implements the SHA-384 secure hash function as described in\n --  FIPS PUB 180-3. The complete text of FIPS PUB 180-3 can be found at:\n --    http://csrc.nist.gov/publications/fips/fips180-3/fips180-3_final.pdf\n "}, {"sha": "331db7d34692870437bbc3d6bd436a42b30effd4", "filename": "gcc/ada/g-sha512.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fg-sha512.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fg-sha512.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-sha512.ads?ref=308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "patch": "@@ -29,7 +29,7 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  This package implaments the SHA-512 secure hash function as decsribed in\n+--  This package implements the SHA-512 secure hash function as described in\n --  FIPS PUB 180-3. The complete text of FIPS PUB 180-3 can be found at:\n --    http://csrc.nist.gov/publications/fips/fips180-3/fips180-3_final.pdf\n "}, {"sha": "4495a150db8bf472c0e7efb0ef74c1272a3f541d", "filename": "gcc/ada/g-shsh32.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fg-shsh32.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fg-shsh32.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-shsh32.ads?ref=308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "patch": "@@ -29,7 +29,7 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  This pacakge provides support for the 32-bit FIPS PUB 180-3 functions\n+--  This package provides support for the 32-bit FIPS PUB 180-3 functions\n --  SHA-224 and SHA-256.\n \n --  This is an internal unit and should not be used directly in applications."}, {"sha": "4b27c7db1fe23e80a49471d0a6db60cdf9857527", "filename": "gcc/ada/g-shsh64.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fg-shsh64.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fg-shsh64.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-shsh64.ads?ref=308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "patch": "@@ -29,7 +29,7 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  This pacakge provides support for the 64-bit FIPS PUB 180-3 functions\n+--  This package provides support for the 64-bit FIPS PUB 180-3 functions\n --  SHA-384 and SHA-512.\n \n --  This is an internal unit and should not be used directly in applications."}, {"sha": "6bca4909a64facb8745744de468f983834f97dd4", "filename": "gcc/ada/g-socket.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fg-socket.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fg-socket.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socket.adb?ref=308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "patch": "@@ -2319,7 +2319,7 @@ package body GNAT.Sockets is\n       end loop;\n \n       --  For an empty array, we have First > Max, and hence Index >= Max (no\n-      --  error, the loop above is never executed). After a succesful send,\n+      --  error, the loop above is never executed). After a successful send,\n       --  Index = Max. The only remaining case, Index < Max, is therefore\n       --  always an actual send failure.\n "}, {"sha": "169538a4d754a45f668f60fdb6d9560a6e5422ec", "filename": "gcc/ada/g-socket.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fg-socket.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fg-socket.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socket.ads?ref=308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "patch": "@@ -61,7 +61,7 @@ package GNAT.Sockets is\n \n    --  Sockets are designed to provide a consistent communication facility\n    --  between applications. This package provides an Ada binding to the\n-   --  the de-facto standard BSD sockets API. The documentation below covers\n+   --  de-facto standard BSD sockets API. The documentation below covers\n    --  only the specific binding provided by this package. It assumes that\n    --  the reader is already familiar with general network programming and\n    --  sockets usage. A useful reference on this matter is W. Richard Stevens'"}, {"sha": "c71a7ddf4fa11f7da28de68a671df1ff6ec6184e", "filename": "gcc/ada/g-sothco.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fg-sothco.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fg-sothco.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-sothco.ads?ref=308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "patch": "@@ -273,9 +273,9 @@ package GNAT.Sockets.Thin_Common is\n    --    - thread unsafe.\n    --\n    --  In the first and third cases, the Buf and Buflen are ignored. In the\n-   --  second case, the caller must provide a buffer large enough to accomodate\n-   --  the returned data. In the third case, the caller must ensure that these\n-   --  functions are called within a critical section.\n+   --  second case, the caller must provide a buffer large enough to\n+   --  accommodate the returned data. In the third case, the caller must ensure\n+   --  that these functions are called within a critical section.\n \n    function C_Gethostbyname\n      (Name     : C.char_array;"}, {"sha": "419db6b7d901681e050775c3c7245a35d9f3b64e", "filename": "gcc/ada/gcc-interface/decl.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Fdecl.c?ref=308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "patch": "@@ -180,7 +180,7 @@ static void rest_of_type_decl_compilation_no_defer (tree);\n static void finish_fat_pointer_type (tree, tree);\n \n /* The relevant constituents of a subprogram binding to a GCC builtin.  Used\n-   to pass around calls performing profile compatibilty checks.  */\n+   to pass around calls performing profile compatibility checks.  */\n \n typedef struct {\n   Entity_Id gnat_entity;  /* The Ada subprogram entity.  */\n@@ -3962,7 +3962,7 @@ gnat_to_gnu_entity (Entity_Id gnat_entity, tree gnu_expr, int definition)\n \t  {\n \t    gnu_builtin_decl = builtin_decl_for (gnu_ext_name);\n \n-\t    /* Unability to find the builtin decl most often indicates a\n+\t    /* Inability to find the builtin decl most often indicates a\n \t       genuine mistake, but imports of unregistered intrinsics are\n \t       sometimes issued on purpose to allow hooking in alternate\n \t       bodies.  We post a warning conditioned on Wshadow in this case,\n@@ -8297,7 +8297,7 @@ intrin_return_compatible_p (intrin_binding_t * inb)\n    compatible.  Issue relevant warnings when they are not.\n \n    This is intended as a light check to diagnose the most obvious cases, not\n-   as a full fledged type compatiblity predicate.  It is the programmer's\n+   as a full fledged type compatibility predicate.  It is the programmer's\n    responsibility to ensure correctness of the Ada declarations in Imports,\n    especially when binding straight to a compiler internal.  */\n "}, {"sha": "689f072d81689345d68fd7bb2f414a380f49a2d7", "filename": "gcc/ada/gcc-interface/trans.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fgcc-interface%2Ftrans.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fgcc-interface%2Ftrans.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Ftrans.c?ref=308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "patch": "@@ -956,7 +956,7 @@ Identifier_to_gnu (Node_Id gnat_node, tree *gnu_result_type_p)\n      required if this is a static expression because it might be used\n      in a context where a dereference is inappropriate, such as a case\n      statement alternative or a record discriminant.  There is no possible\n-     volatile-ness short-circuit here since Volatile constants must bei\n+     volatile-ness short-circuit here since Volatile constants must be\n      imported per C.6.  */\n   if (Ekind (gnat_temp) == E_Constant\n       && Is_Scalar_Type (gnat_temp_type)\n@@ -6885,7 +6885,7 @@ build_binary_op_trapv (enum tree_code code, tree gnu_type, tree left,\n     case MULT_EXPR:\n       /* The check here is designed to be efficient if the rhs is constant,\n \t but it will work for any rhs by using integer division.\n-\t Four different check expressions determine wether X * C overflows,\n+\t Four different check expressions determine whether X * C overflows,\n \t depending on C.\n \t   C ==  0  =>  false\n \t   C  >  0  =>  X > type_max / C || X < type_min / C"}, {"sha": "905b9aa481e2f6372dc211119e570f2ae20169f9", "filename": "gcc/ada/gcc-interface/utils2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fgcc-interface%2Futils2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fgcc-interface%2Futils2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Futils2.c?ref=308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "patch": "@@ -2359,7 +2359,7 @@ gnat_protect_expr (tree exp)\n   if (TREE_CONSTANT (exp) || code == SAVE_EXPR || code == NULL_EXPR)\n     return exp;\n \n-  /* If EXP has no side effects, we theoritically don't need to do anything.\n+  /* If EXP has no side effects, we theoretically don't need to do anything.\n      However, we may be recursively passed more and more complex expressions\n      involving checks which will be reused multiple times and eventually be\n      unshared for gimplification; in order to avoid a complexity explosion"}, {"sha": "2bd24ad54318df12dd38ffb3c095b24c48717ca6", "filename": "gcc/ada/gnat1drv.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fgnat1drv.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fgnat1drv.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat1drv.adb?ref=308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "patch": "@@ -321,7 +321,7 @@ procedure Gnat1drv is\n          Targparm.Frontend_Layout_On_Target := True;\n       end if;\n \n-      --  Set and check exception mechnism\n+      --  Set and check exception mechanism\n \n       if Targparm.ZCX_By_Default_On_Target then\n          if Targparm.GCC_ZCX_Support_On_Target then"}, {"sha": "40e3c9142efc9b0297eeb0e24c3e0b4b5768902b", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "patch": "@@ -2444,7 +2444,7 @@ implementation_kind ::= By_Entry | By_Protected_Procedure | By_Any\n @noindent\n This is an Ada 2012 representation pragma which applies to protected, task\n and synchronized interface primitives. The use of pragma Implemented provides\n-a way to impose a static requirement on the overriding opreration by adhering\n+a way to impose a static requirement on the overriding operation by adhering\n to one of the three implementation kids: entry, protected procedure or any of\n the above.\n \n@@ -2469,7 +2469,7 @@ end Task_Typ;\n @noindent\n When applied to the procedure_or_entry_NAME of a requeue statement, pragma\n Implemented determines the runtime behavior of the requeue. Implementation kind\n-By_Entry guarantees that the action of requeueing will procede from an entry to\n+By_Entry guarantees that the action of requeueing will proceed from an entry to\n another entry. Implementation kind By_Protected_Procedure transforms the\n requeue into a dispatching call, thus eliminating the chance of blocking. Kind\n By_Any shares the behavior of By_Entry and By_Protected_Procedure depending on\n@@ -2524,7 +2524,7 @@ for r'size use 16;\n @noindent\n Without a pragma Pack, each Boolean field requires 8 bits, so the\n minimum size is 72 bits, but with a pragma Pack, 16 bits would be\n-sufficient. The use of pragma Implciit_Packing allows this record\n+sufficient. The use of pragma Implicit_Packing allows this record\n declaration to compile without an explicit pragma Pack.\n @node Pragma Import_Exception\n @unnumberedsec Pragma Import_Exception\n@@ -3603,7 +3603,7 @@ The effect of this pragma is to output a warning message on a reference to\n an entity thus marked that the subprogram is obsolescent if the appropriate\n warning option in the compiler is activated. If the Message parameter is\n present, then a second warning message is given containing this text. In\n-addition, a reference to the eneity is considered to be a violation of pragma\n+addition, a reference to the entity is considered to be a violation of pragma\n Restrictions (No_Obsolescent_Features).\n \n This pragma can also be used as a program unit pragma for a package,\n@@ -9255,7 +9255,7 @@ Only do the copy if the destination file does not already exist. If it already\n exists, Copy_File fails.\n \n @item overwrite\n-Copy the file in all cases. Overwite an already existing destination file.\n+Copy the file in all cases. Overwrite an already existing destination file.\n \n @item append\n Append the original file to the destination file. If the destination file does\n@@ -16287,7 +16287,7 @@ case for machines compliant with the IEEE floating-point standard, but on\n machines that are not fully compliant with this standard, such as Alpha, the\n @option{-mieee} compiler flag must be used for achieving IEEE confirming\n behavior (although at the cost of a significant performance penalty), so\n-infinite and and NaN values are properly generated.\n+infinite and NaN values are properly generated.\n \n \n @node Implementation of Ada 2012 Features\n@@ -16484,7 +16484,7 @@ A complete description of the AIs may be found in\n @cindex AI-0003 (Ada 2012 feature)\n \n @noindent\n-   In Ada 2012, a qualified expression is considered to be syntatically a name,\n+   In Ada 2012, a qualified expression is considered to be syntactically a name,\n    meaning that constructs such as @code{A'(F(X)).B} are now legal. This is\n    useful in disambiguating some cases of overloading.\n \n@@ -16704,7 +16704,7 @@ A complete description of the AIs may be found in\n \n @noindent\n   This AI covers a number of issues regarding returning abstract types. In\n-  particular generic fucntions cannot have abstract result types or access\n+  particular generic functions cannot have abstract result types or access\n   result types designated an abstract type. There are some other cases which\n   are detailed in the AI. Note that this binding interpretation has not been\n   retrofitted to operate before Ada 2012 mode, since it caused a significant\n@@ -17044,11 +17044,11 @@ A complete description of the AIs may be found in\n \n \n @item\n-@emph{AI-0050 Raising Constraingt_Errpr early for function call (0000-00-00)}\n+@emph{AI-0050 Raising Constraint_Error early for function call (0000-00-00)}\n @cindex AI-0050 (Ada 2012 feature)\n \n @noindent\n-  The implementation permissions for raising @code{Constraing_Error} early on a function call when it was clear an exception would be raised were over-permissive and allowed mishandling of discriminants in some cases. GNAT did\n+  The implementation permissions for raising @code{Constraint_Error} early on a function call when it was clear an exception would be raised were over-permissive and allowed mishandling of discriminants in some cases. GNAT did\n   not take advantage of these incorrect permissions in any case.\n \n @noindent\n@@ -17108,7 +17108,7 @@ A complete description of the AIs may be found in\n \n @noindent\n   This AI clarifies that ``needs finalization'' is part of dynamic semantics,\n-  and therefore depends on the run-time charateristics of an object (i.e. its\n+  and therefore depends on the run-time characteristics of an object (i.e. its\n   tag) and not on its nominal type. As the AI indicates: ``we do not expect\n   this to affect any implementation''.\n \n@@ -17799,7 +17799,7 @@ A complete description of the AIs may be found in\n   forbid tasks declared locally within subprograms, or functions returning task\n   objects, and that is the implementation that GNAT has always provided.\n   However the language in the RM was not sufficiently clear on this point.\n-  Thus this is a docmentation change in the RM only.\n+  Thus this is a documentation change in the RM only.\n \n @noindent\n   RM References:  D.07 (3/3)"}, {"sha": "48a38ba0aeecc7c3daad59f7768af33050cdbcc2", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "patch": "@@ -5600,7 +5600,7 @@ component type.\n Note that @option{-gnatwa} does not affect the setting of this warning option.\n \n @item -gnatw.S\n-@emph{Suppress warnings on overriddebn size clauses.}\n+@emph{Suppress warnings on overridden size clauses.}\n @cindex @option{-gnatw.S} (@command{gcc})\n This switch suppresses warnings on component clauses in record\n representation clauses that override size clauses, and similar\n@@ -8218,7 +8218,7 @@ Use 32-bit allocations for @code{__gnat_malloc} (and thus for access types).\n For further details see @ref{Dynamic Allocation Control}.\n \n @item ^-H64^/64_MALLOC^\n-@cindex @option{^-H32^/32_MALLOC^} (@command{gnatbind})\n+@cindex @option{^-H64^/64_MALLOC^} (@command{gnatbind})\n Use 64-bit allocations for @code{__gnat_malloc} (and thus for access types).\n @cindex @code{__gnat_malloc}\n For further details see @ref{Dynamic Allocation Control}.\n@@ -9492,7 +9492,7 @@ This also assumes that no directory matches the naming scheme for files (for\n instance that you do not have a directory called \"sources.ads\" when using the\n default GNAT naming scheme).\n \n-When you do not have to use this switch (ie by default), gnatmake is able to\n+When you do not have to use this switch (i.e.@: by default), gnatmake is able to\n save a lot of system calls (several per source file and object file), which\n can result in a significant speed up to load and manipulate a project file,\n especially when using source files from a remote system.\n@@ -10240,7 +10240,7 @@ the slowest compilation time.\n @item ^-O3^/OPTIMIZE=INLINING^\n Full optimization as in @option{-O2};\n also uses more aggressive automatic inlining of subprograms within a unit\n-(@pxref{Inlining of Subprograms}) and attemps to vectorize loops.\n+(@pxref{Inlining of Subprograms}) and attempts to vectorize loops.\n \n @item ^-Os^/OPTIMIZE=SPACE^\n Optimize space usage (code and data) of resulting program.\n@@ -10948,7 +10948,7 @@ being processed.\n \n @item ^-wq^/WARNINGS=QUIET^\n @cindex @option{^-wq^/WARNINGS=QUIET^} (@command{gnatelim})\n-Quet warning mode - some warnings are suppressed. In particular warnings that\n+Quiet warning mode - some warnings are suppressed. In particular warnings that\n indicate that the analysed set of sources is incomplete to make up a\n partition and that some subprogram bodies are missing are not generated.\n @end table\n@@ -15471,7 +15471,7 @@ all other options.\n \n @item ^--subdirs^/SUBDIRS^=subdir\n Actual object directory of each project file is the subdirectory subdir of the\n-object directory specified or defauted in the project file.\n+object directory specified or defaulted in the project file.\n \n @item ^--unchecked-shared-lib-imports^/UNCHECKED_SHARED_LIB_IMPORTS^\n By default, shared library projects are not allowed to import static library\n@@ -17416,7 +17416,7 @@ Same as @option{^-gnatyM^/MAX_LINE_LENGTH=^@var{n}}\n \n @item ^--no-exception^/NO_EXCEPTION^\n @cindex @option{^--no-exception^/NO_EXCEPTION^} (@command{gnatstub})\n-Avoind raising PROGRAM_ERROR in the generated bodies of program unit stubs.\n+void raising PROGRAM_ERROR in the generated bodies of program unit stubs.\n This is not always possible for function stubs.\n \n @item ^--no-local-header^/NO_LOCAL_HEADER^\n@@ -17506,7 +17506,7 @@ easier to interface with other languages than previous versions of Ada.\n The binding generator is part of the @command{gcc} compiler and can be\n invoked via the @option{-fdump-ada-spec} switch, which will generate Ada\n spec files for the header files specified on the command line, and all\n-header files needed by these files transitivitely. For example:\n+header files needed by these files transitively. For example:\n \n @smallexample\n $ g++ -c -fdump-ada-spec -C /usr/include/time.h\n@@ -18633,7 +18633,7 @@ Set a catchpoint that stops execution whenever (any task in the) program\n raises the exception @var{name}.\n \n @item catch exception unhandled\n-Set a catchpoint that stops executino whenever (any task in the) program\n+Set a catchpoint that stops executing whenever (any task in the) program\n raises an exception for which there is no handler.\n \n @item info exceptions\n@@ -26839,7 +26839,7 @@ look for a library name in this specific order:\n @end enumerate\n \n The first three are the GNU style import libraries. The third is the\n-Microsoft style import libraries. The last two are the DLL themself.\n+Microsoft style import libraries. The last two are the actual DLL names.\n \n Note that if the Ada package spec for @file{API.dll} contains the\n following pragma"}, {"sha": "9b6370e1a5779b4153634aaaa91ebe33c2464e78", "filename": "gcc/ada/init.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finit.c?ref=308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "patch": "@@ -1238,7 +1238,7 @@ static const struct cond_except cond_except_table [] = {\n \n    That predicate function is called indirectly, via a function pointer,\n    by __gnat_error_handler, and changing that pointer is allowed to the\n-   the user code by way of the __gnat_set_resignal_predicate interface.\n+   user code by way of the __gnat_set_resignal_predicate interface.\n \n    The user level function may then implement what it likes, including\n    for instance the maintenance of a dynamic data structure if the set"}, {"sha": "f40edd92d797da6c2df2dc97d0a5aaabbeacb655", "filename": "gcc/ada/inline.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Finline.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Finline.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finline.adb?ref=308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "patch": "@@ -388,7 +388,7 @@ package body Inline is\n \n          function Process (N : Node_Id) return Traverse_Result;\n          --  Look for calls to subprograms with no previous spec, declared\n-         --  in the same enclosiong package body.\n+         --  in the same enclosing package body.\n \n          -------------\n          -- Process --"}, {"sha": "62dd683f1c79fc97ad90d96d1dde39acb9a75cd1", "filename": "gcc/ada/link.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Flink.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Flink.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flink.c?ref=308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "patch": "@@ -63,7 +63,7 @@\n /*  be used by default for linking libgnat (shared or static)               */\n \n /*  shared_libgcc_default gives the system dependent link method that       */\n-/*  be used by default for linking libgcc (shared or statis)                */\n+/*  be used by default for linking libgcc (shared or static)                */\n \n /*  using_gnu_linker is set to 1 when the GNU linker is used under this     */\n /*  target.                                                                 */"}, {"sha": "2fa1b58a0cf7011f750a9a0a80013461be778b46", "filename": "gcc/ada/locales.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Flocales.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Flocales.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flocales.c?ref=308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "patch": "@@ -35,7 +35,7 @@ typedef char char4 [4];\n \n /*\n   c_get_language_code needs to fill in the Alpha-3 encoding of the\n-  language code (3 lowercase letters). That shoud be \"und\" if the\n+  language code (3 lowercase letters). That should be \"und\" if the\n   language is unknown. [see Ada.Locales]\n */\n void c_get_language_code (char4 p) {\n@@ -46,7 +46,7 @@ void c_get_language_code (char4 p) {\n \n /*\n   c_get_country_code needs to fill in the Alpha-2 encoding of the\n-  country code (2 uppercase letters). That shoud be \"ZZ\" if the\n+  country code (2 uppercase letters). That should be \"ZZ\" if the\n   country is unknown. [see Ada.Locales]\n */\n void c_get_country_code (char4 p) {"}, {"sha": "98ae1eb4eb325392e2150c7ef710b204d1094dd2", "filename": "gcc/ada/make.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fmake.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fmake.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmake.adb?ref=308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "patch": "@@ -202,7 +202,7 @@ package body Make is\n       --  extracted.\n \n       function Processed return Natural;\n-      --  Return the number of source in the queue that have aready been\n+      --  Return the number of source in the queue that have already been\n       --  processed.\n \n       procedure Set_Obj_Dir_Busy (Obj_Dir : Path_Name_Type);\n@@ -6189,8 +6189,8 @@ package body Make is\n                   end;\n                end if;\n \n-               --  Add switch -M to gnatlink if buider switch --create-map-file\n-               --  has been specified.\n+               --  Add switch -M to gnatlink if builder switch\n+               --  --create-map-file has been specified.\n \n                if Map_File /= null then\n                   Linker_Switches.Increment_Last;\n@@ -7003,7 +7003,7 @@ package body Make is\n             --  If Put_In_Q is False, we add the source as if it were specified\n             --  on the command line, and we set Put_In_Q to True, so that the\n             --  following sources will only be put in the queue. The source is\n-            --  aready in the Q, but we need at least one fake main to call\n+            --  already in the Q, but we need at least one fake main to call\n             --  Compile_Sources.\n \n             if Verbose_Mode then"}, {"sha": "bee45852e113fb8ebae268a0fa1645455f0551a0", "filename": "gcc/ada/mingw32.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fmingw32.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fmingw32.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmingw32.h?ref=308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "patch": "@@ -83,7 +83,7 @@\n \n extern UINT CurrentCodePage;\n \n-/*  Macros to convert to/from the code page speficied in CurrentCodePage.  */\n+/*  Macros to convert to/from the code page specified in CurrentCodePage.  */\n #define S2WSC(wstr,str,len) \\\n    MultiByteToWideChar (CurrentCodePage,0,str,-1,wstr,len)\n #define WS2SC(str,wstr,len) \\"}, {"sha": "c4155b4ba3026571f25d836253be5eeea0691610", "filename": "gcc/ada/namet.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fnamet.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fnamet.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fnamet.ads?ref=308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "patch": "@@ -244,7 +244,7 @@ package Namet is\n    --  initialization is performed automatically during package elaboration.\n    --  Note that this change fixes problems which existed prior to the change\n    --  of Initialize being called more than once. See also Reinitialize which\n-   --  allows reinitialiation of the tables.\n+   --  allows reinitialization of the tables.\n \n    procedure Lock;\n    --  Lock name tables before calling back end. We reserve some extra space"}, {"sha": "248845f3fba69865967370ad64c8fe93c5307e21", "filename": "gcc/ada/osint.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fosint.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fosint.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fosint.adb?ref=308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "patch": "@@ -1163,7 +1163,7 @@ package body Osint is\n       begin\n          --  If we are looking for a config file, look only in the current\n          --  directory, i.e. return input argument unchanged. Also look only in\n-         --  the curren directory if we are looking for a .dg file (happens in\n+         --  the current directory if we are looking for a .dg file (happens in\n          --  -gnatD mode).\n \n          if T = Config"}, {"sha": "9e80403895e8b988cac11a1e9dac597d41bb8307", "filename": "gcc/ada/par-ch12.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fpar-ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fpar-ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch12.adb?ref=308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "patch": "@@ -278,7 +278,7 @@ package body Ch12 is\n    begin\n       --  Figure out if a generic actual part operation is present. Clearly\n       --  there is no generic actual part if the current token is semicolon\n-      --  or if we have apsect specifications present.\n+      --  or if we have aspect specifications present.\n \n       if Token = Tok_Semicolon or else Aspect_Specifications_Present then\n          return No_List;"}, {"sha": "2e237e6631c4fa7d02601af4c043fd068227f283", "filename": "gcc/ada/par-ch13.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fpar-ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fpar-ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch13.adb?ref=308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "patch": "@@ -367,9 +367,9 @@ package body Ch13 is\n \n    --  Parsed by P_Representation_Clause (13.1)\n \n-   ------------------------------\n-   -- 13.1  Aspect Specifation --\n-   ------------------------------\n+   --------------------------------\n+   -- 13.1  Aspect Specification --\n+   --------------------------------\n \n    --  ASPECT_SPECIFICATION ::=\n    --    with ASPECT_MARK [=> ASPECT_DEFINITION] {.\n@@ -456,7 +456,7 @@ package body Ch13 is\n                if not Class_Aspect_OK (A_Id) then\n                   Error_Msg_Node_1 := Identifier (Aspect);\n                   Error_Msg_SC (\"aspect& does not permit attribute here\");\n-                  Scan; -- past apostophe\n+                  Scan; -- past apostrophe\n                   Scan; -- past presumed CLASS\n                   OK := False;\n "}, {"sha": "059b40340aed7ce08cbb0775329bff82db5253be", "filename": "gcc/ada/par-ch3.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fpar-ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fpar-ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch3.adb?ref=308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "patch": "@@ -3673,15 +3673,15 @@ package body Ch3 is\n \n                else\n                   --  In Ada 2012 mode, the expression must be a simple\n-                  --  expression. The resaon for this restriction (i.e. going\n+                  --  expression. The reason for this restriction (i.e. going\n                   --  back to the Ada 83 rule) is to avoid ambiguities when set\n                   --  membership operations are allowed, consider the\n                   --  following:\n \n                   --     when A in 1 .. 10 | 12 =>\n \n                   --  This is ambiguous without parentheses, so we require one\n-                  --  of the following two parenthesized forms to disambuguate:\n+                  --  of the following two parenthesized forms to disambiguate:\n \n                   --  one of the following:\n "}, {"sha": "4c25c3ca649dbdb9fb51815f37e4af621def8f2b", "filename": "gcc/ada/par-ch4.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fpar-ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fpar-ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch4.adb?ref=308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "patch": "@@ -1194,7 +1194,7 @@ package body Ch4 is\n          Expr_Node := Error;\n       end Box_Error;\n \n-   --  Start of processsing for P_Aggregate_Or_Paren_Expr\n+   --  Start of processing for P_Aggregate_Or_Paren_Expr\n \n    begin\n       Lparen_Sloc := Token_Ptr;"}, {"sha": "8ddd2209ad61b0ff2fe18aaae5962bc00cf9610d", "filename": "gcc/ada/par-prag.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fpar-prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fpar-prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-prag.adb?ref=308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "patch": "@@ -994,7 +994,7 @@ begin\n       --  if it were a configuration pragma.\n \n       --  Since the reason we provide this pragma is for compatibility with\n-      --  these other compilers, we want to accomodate these strange placement\n+      --  these other compilers, we want to accommodate these strange placement\n       --  rules, and the easiest thing is simply to allow it anywhere in a\n       --  unit. If this pragma appears anywhere within a unit, then the effect\n       --  is as though a pragma Suppress (All_Checks) had appeared as the first"}, {"sha": "776e6bd757fa3bb2141798156b4267991633e198", "filename": "gcc/ada/par.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fpar.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fpar.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar.adb?ref=308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "patch": "@@ -353,7 +353,7 @@ function Par (Configuration_Pragmas : Boolean) return List_Id is\n       Pbod : Boolean;                  -- True if proper body OK\n       Rnam : Boolean;                  -- True if renaming declaration OK\n       Stub : Boolean;                  -- True if body stub OK\n-      Pexp : Boolean;                  -- True if parametried expression OK\n+      Pexp : Boolean;                  -- True if parametrized expression OK\n       Fil2 : Boolean;                  -- Filler to fill to 8 bits\n    end record;\n    pragma Pack (Pf_Rec);\n@@ -632,7 +632,7 @@ function Par (Configuration_Pragmas : Boolean) return List_Id is\n       function P_Range_Or_Subtype_Mark\n         (Allow_Simple_Expression : Boolean := False) return Node_Id;\n       --  Scans out a range or subtype mark, and also permits a general simple\n-      --  expression if Allow_Simple_Expresion is set to True.\n+      --  expression if Allow_Simple_Expression is set to True.\n \n       function Init_Expr_Opt (P : Boolean := False) return Node_Id;\n       --  If an initialization expression is present (:= expression), then\n@@ -858,9 +858,9 @@ function Par (Configuration_Pragmas : Boolean) return List_Id is\n       --  of generating appropriate messages if aspect specifications appear\n       --  in versions of Ada prior to Ada 2012. The parameter strict can be\n       --  set to True, to be rather strict about considering something to be\n-      --  an aspect speficiation. If Strict is False, then the circuitry is\n+      --  an aspect specification. If Strict is False, then the circuitry is\n       --  rather more generous in considering something ill-formed to be an\n-      --  attempt at an aspect speciciation. The default is more strict for\n+      --  attempt at an aspect specification. The default is more strict for\n       --  Ada versions before Ada 2012 (where aspect specifications are not\n       --  permitted).\n "}, {"sha": "251c6e23c82057b866febe130515f1fa4c0762b1", "filename": "gcc/ada/par_sco.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fpar_sco.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fpar_sco.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar_sco.adb?ref=308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "patch": "@@ -104,7 +104,7 @@ package body Par_SCO is\n    procedure Process_Decisions (N : Node_Id; T : Character);\n    --  If N is Empty, has no effect. Otherwise scans the tree for the node N,\n    --  to output any decisions it contains. T is one of IEPWX (for context of\n-   --  expresion: if/exit when/pragma/while/expression). If T is other than X,\n+   --  expression: if/exit when/pragma/while/expression). If T is other than X,\n    --  the node N is the conditional expression involved, and a decision is\n    --  always present (at the very least a simple decision is present at the\n    --  top level)."}, {"sha": "62f962aa40a32a9fa1552317cab9d594b56c91f3", "filename": "gcc/ada/prepcomp.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fprepcomp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fprepcomp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprepcomp.adb?ref=308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "patch": "@@ -47,7 +47,7 @@ package body Prepcomp is\n \n    --  The following variable should be a constant, but this is not possible\n    --  because its type GNAT.Dynamic_Tables.Instance has a component P of\n-   --  unitialized private type GNAT.Dynamic_Tables.Table_Private and there\n+   --  uninitialized private type GNAT.Dynamic_Tables.Table_Private and there\n    --  are no exported values for this private type. Warnings are Off because\n    --  it is never assigned a value.\n "}, {"sha": "199e3e8094741ad1f0ba871537f453d85d914c63", "filename": "gcc/ada/prj-conf.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fprj-conf.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fprj-conf.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-conf.ads?ref=308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "patch": "@@ -64,7 +64,7 @@ package Prj.Conf is\n    --  set).\n    --\n    --  If the processing fails, Main_Project is set to No_Project. If the error\n-   --  happend while parsing the project itself (ie creating the tree),\n+   --  happened while parsing the project itself (i.e. creating the tree),\n    --  User_Project_Node is also set to Empty_Node.\n    --\n    --  Autoconf_Specified indicates whether the user has specified --autoconf.\n@@ -151,7 +151,7 @@ package Prj.Conf is\n    --  by the user (either through gprbuild's --config or --autoconf switches).\n    --  In the latter case, Autoconf_Specified should be set to true to indicate\n    --  that the configuration file can be regenerated to match target and\n-   --  languages. This name can either be an absolute path, or the a base name\n+   --  languages. This name can either be an absolute path, or the base name\n    --  that will be searched in the default config file directories (which\n    --  depends on the installation path for the tools).\n    --"}, {"sha": "83ec3575b326c03408f23fb4b03f01f1457a4abe", "filename": "gcc/ada/prj-dect.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fprj-dect.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fprj-dect.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-dect.adb?ref=308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "patch": "@@ -62,7 +62,7 @@ package body Prj.Dect is\n       Project         : Project_Node_Id;\n       Attribute       : Project_Node_Id;\n       Flags           : Processing_Flags);\n-   --  Chech whether the attribute is valid in this project.\n+   --  Check whether the attribute is valid in this project.\n    --  In particular, depending on the type of project (qualifier), some\n    --  attributes might be disabled.\n "}, {"sha": "1114ab342059a6439329eb49014e3ffd22b683f7", "filename": "gcc/ada/prj-env.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fprj-env.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fprj-env.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-env.adb?ref=308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "patch": "@@ -41,7 +41,7 @@ package body Prj.Env is\n    --  Initial size of Buffer\n \n    Uninitialized_Prefix : constant String := '#' & Path_Separator;\n-   --  Prefix to indicate that the project path has not been initilized yet.\n+   --  Prefix to indicate that the project path has not been initialized yet.\n    --  Must be two characters long\n \n    No_Project_Default_Dir : constant String := \"-\";\n@@ -478,7 +478,7 @@ package body Prj.Env is\n       procedure Put (S : String);\n       procedure Put_Line (S : String);\n       --  Output procedures, analogous to normal Text_IO procs of same name.\n-      --  The text is put in Buffer, then it will be writen into a temporary\n+      --  The text is put in Buffer, then it will be written into a temporary\n       --  file with procedure Write_Temp_File below.\n \n       procedure Write_Temp_File;"}, {"sha": "c750023681728d2cbe794c9fbb90962480dde127", "filename": "gcc/ada/prj-env.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fprj-env.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fprj-env.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-env.ads?ref=308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "patch": "@@ -197,7 +197,7 @@ package Prj.Env is\n       Project_File_Name  : String;\n       Directory          : String;\n       Path               : out Namet.Path_Name_Type);\n-   --  Search for a the project with the given name either in Directory (which\n+   --  Search for a project with the given name either in Directory (which\n    --  often will be the directory contain the project we are currently parsing\n    --  and which we found a reference to another project), or in the project\n    --  path. Extra_Project_Path contains additional directories to search."}, {"sha": "5175d01ab50ed3b3104208e0650c347ad529f4a9", "filename": "gcc/ada/prj-nmsc.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fprj-nmsc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fprj-nmsc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-nmsc.adb?ref=308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "patch": "@@ -5684,7 +5684,7 @@ package body Prj.Nmsc is\n          end;\n       end if;\n \n-      --  Name_Buffer contains the name of the the unit in lower-cases. Check\n+      --  Name_Buffer contains the name of the unit in lower-cases. Check\n       --  that this is a valid unit name\n \n       Check_Ada_Name (Name_Buffer (1 .. Name_Len), Unit);\n@@ -7414,7 +7414,7 @@ package body Prj.Nmsc is\n       --  error when appropriate\n \n       procedure Get_Sources_From_Source_Info;\n-      --  Get the source information from the tabes that were created when a\n+      --  Get the source information from the tables that were created when a\n       --  source info fie was read.\n \n       ---------------------------"}, {"sha": "4cd66c0d22091074368505eda68c825e9ec678b6", "filename": "gcc/ada/prj-tree.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fprj-tree.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fprj-tree.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-tree.ads?ref=308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "patch": "@@ -816,7 +816,7 @@ package Prj.Tree is\n       To      : Int);\n    pragma Inline (Set_Source_Index_Of);\n    --  Only valid for N_Literal_String and N_Attribute_Declaration nodes. For\n-   --  N_Literal_String, set the source index of the litteral string. For\n+   --  N_Literal_String, set the source index of the literal string. For\n    --  N_Attribute_Declaration, set the source index of the index of the\n    --  associative array element.\n \n@@ -1469,7 +1469,7 @@ package Prj.Tree is\n \n       External_References : Name_To_Name_HTable.Instance;\n       --  External references are stored in this hash table (and manipulated\n-      --  through subprogrames in prj-ext.ads). External references are\n+      --  through subprograms in prj-ext.ads). External references are\n       --  project-tree specific so that one can load the same tree twice but\n       --  have two views of it, for instance.\n "}, {"sha": "741dc7f048d5210fe10975488e4de84c5218e5af", "filename": "gcc/ada/prj-util.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fprj-util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fprj-util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-util.ads?ref=308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "patch": "@@ -165,7 +165,7 @@ package Prj.Util is\n    --  Open a text file to read (File is invalid if text file cannot be opened)\n \n    procedure Create (File : out Text_File; Name : String);\n-   --  Create a text file to write (File is invaid if text file cannot be\n+   --  Create a text file to write (File is invalid if text file cannot be\n    --  created).\n \n    function End_Of_File (File : Text_File) return Boolean;\n@@ -223,7 +223,7 @@ package Prj.Util is\n    procedure Initialize\n      (Iter        : out Source_Info_Iterator;\n       For_Project : Name_Id);\n-   --  Initiaize Iter for the project\n+   --  Initialize Iter for the project\n \n    function Source_Info_Of (Iter : Source_Info_Iterator) return Source_Info;\n    --  Get the source info for the source corresponding to the current value of"}, {"sha": "2ad07b13e1e18f2d5c8dedca6370e0299c014bba", "filename": "gcc/ada/prj.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fprj.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fprj.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj.adb?ref=308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "patch": "@@ -1164,7 +1164,7 @@ package body Prj is\n                          or else Source.Kind /= Spec)\n             then\n                --  Do not modify Source.Compilable before the source record\n-               --  has been initilaized.\n+               --  has been initialized.\n \n                if Source.Source_TS /= Empty_Time_Stamp then\n                   Source.Compilable := Yes;"}, {"sha": "b1e01efbdee8f88c5d07ed17fc95844c3e1c0318", "filename": "gcc/ada/prj.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fprj.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fprj.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj.ads?ref=308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "patch": "@@ -899,7 +899,7 @@ package Prj is\n    --  Return the object directory to use for the project. This depends on\n    --  whether we have a library project or a standard project. This function\n    --  might return No_Name when no directory applies.\n-   --  If we have a a library project file and Including_Libraries is True then\n+   --  If we have a library project file and Including_Libraries is True then\n    --  the library dir is returned instead of the object dir.\n    --  If Only_If_Ada is True, then No_Name will be returned when the project\n    --  doesn't Ada sources.\n@@ -1508,7 +1508,7 @@ package Prj is\n    type Error_Handler is access procedure\n      (Project    : Project_Id;\n       Is_Warning : Boolean);\n-   --  This warngs when an error was found when parsing a project. The error\n+   --  This warns when an error was found when parsing a project. The error\n    --  itself is handled through Prj.Err (and Prj.Err.Finalize should be called\n    --  to actually print the error). This ensures that duplicate error messages\n    --  are always correctly removed, that errors msgs are sorted, and that all"}, {"sha": "3b05c44d5b3598a24b1af726b2785dab03aa2b44", "filename": "gcc/ada/projects.texi", "status": "modified", "additions": 19, "deletions": 19, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fprojects.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fprojects.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprojects.texi?ref=308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "patch": "@@ -393,7 +393,7 @@ setting @code{Source_Dirs}. The project manager automatically finds\n project.\n \n Note that it is considered an error for a project file to have no sources\n-attached to it unless explicitly declared as mentionend above.\n+attached to it unless explicitly declared as mentioned above.\n \n If the order of the source directories is known statically, that is if\n @code{\"/**\"} is not used in the string list @code{Source_Dirs}, then there may\n@@ -534,7 +534,7 @@ or more executables on the command line to build a subset of them.\n We now have a project file that fully describes our environment, and can be\n used to build the application with a simple @command{gnatmake} command as seen\n in the previous section. In fact, the empty project we showed immediately at\n-the beginning (with no attribute at all) could already fullfill that need if it\n+the beginning (with no attribute at all) could already fulfill that need if it\n was put in the @file{common} directory.\n \n Of course, we always want more control. This section will show you how to\n@@ -736,7 +736,7 @@ Notice the three steps described earlier:\n The default output of GPRbuild's execution is kept reasonably simple and easy\n to understand. In particular, some of the less frequently used commands are not\n shown, and some parameters are abbreviated. So it is not possible to rerun the\n-effect ofthe gprbuild command by cut-and-pasting its output. GPRbuild's option\n+effect of the gprbuild command by cut-and-pasting its output. GPRbuild's option\n @code{-v} provides a much more verbose output which includes, among other\n information, more complete compilation, post-compilation and link commands.\n \n@@ -1152,7 +1152,7 @@ when they do, they need to specify precisely which project owns which sources\n using attribute @code{Source_Files} or equivalent. By contrast, 2 projects\n can each own a source with the same base file name as long as they live in\n different directories. The latter is not true for Ada Sources because of the\n-correlation betwen source files and Ada units.\n+correlation between source files and Ada units.\n \n @c ---------------------------------------------\n @node Cyclic Project Dependencies\n@@ -1201,7 +1201,7 @@ end D;\n @c ---------------------------------------------\n \n @noindent\n-When building an application, it is common to have similar needs in severa of\n+When building an application, it is common to have similar needs in several of\n the projects corresponding to the subsystems under construction. For instance,\n they will all have the same compilation switches.\n \n@@ -1495,10 +1495,10 @@ installation of the library (i.e., copying associated source, object and\n \n @noindent\n Let's enhance our example and transform the @code{logging} subsystem into a\n-library.In orer to do so, a few changes need to be made to @file{logging.gpr}.\n+library.  In order to do so, a few changes need to be made to @file{logging.gpr}.\n A number of specific attributes needs to be defined: at least @code{Library_Name}\n and @code{Library_Dir}; in addition, a number of other attributes can be used\n-to specify specific aspects of the library. For readablility, it is also\n+to specify specific aspects of the library. For readability, it is also\n recommended (although not mandatory), to use the qualifier @code{library} in\n front of the @code{project} keyword.\n \n@@ -1547,13 +1547,13 @@ Other library-related attributes can be used to change the defaults:\n   which kind of library should be build (the default is to build a\n   static library, that is an archive of object files that can potentially\n   be linked into a static executable). When the library is set to be dynamic,\n-  a separate image is created that will be loaded independnently, usually\n+  a separate image is created that will be loaded independently, usually\n   at the start of the main program execution. Support for dynamic libraries is\n   very platform specific, for instance on Windows it takes the form of a DLL\n   while on GNU/Linux, it is a dynamic elf image whose suffix is usually\n   @file{.so}. Library project files, on the other hand, can be written in\n-  a platform independant way so that the same project file can be used to build\n-  a library on different Oses.\n+  a platform independent way so that the same project file can be used to build\n+  a library on different operating systems.\n \n   If you need to build both a static and a dynamic library, it is recommended\n   use two different object directories, since in some cases some extra code\n@@ -1647,7 +1647,7 @@ executables.\n \n It is also possible to build @b{multi-language libraries}. When using\n @command{gprbuild} as a builder, multi-language library projects allow naturally\n-the creation of multi-language libraries . @command{gnatmake}, does n ot try to\n+the creation of multi-language libraries . @command{gnatmake}, does not try to\n compile non Ada sources. However, when the project is multi-language, it will\n automatically link all object files found in the object directory, whether or\n not they were compiled from an Ada source file. This specific behavior does not\n@@ -1728,10 +1728,10 @@ elaborate the Ada units that are included in the library. A stand-alone\n library is a convenient way to add an Ada subsystem to a more global system\n whose main is not in Ada since it makes the elaboration of the Ada part mostly\n transparent. However, stand-alone libraries are also useful when the main is in\n-Ada: they provide a means for minimizing relinking & redeployement of complex\n+Ada: they provide a means for minimizing relinking & redeployment of complex\n systems when localized changes are made.\n \n-The most proeminent characteristic of a stand-alone library is that it offers a\n+The most prominent characteristic of a stand-alone library is that it offers a\n distinction between interface units and implementation units. Only the former\n are visible to units outside the library. A stand-alone library project is thus\n characterised by a third attribute, @b{Library_Interface}, in addition to the\n@@ -2140,7 +2140,7 @@ The identifier @code{Empty} is the name of the project.\n This project name must be present after the reserved\n word @code{end} at the end of the project file, followed by a semi-colon.\n \n-@b{Identifiers} (ie the user-defined names such as project or variable names)\n+@b{Identifiers} (i.e.@: the user-defined names such as project or variable names)\n have the same syntax as Ada identifiers: they must start with a letter,\n and be followed by zero or more letters, digits or underscore characters;\n it is also illegal to have two underscores next to each other. Identifiers\n@@ -2445,7 +2445,7 @@ package_extension ::==\n \n @noindent\n An expression is any value that can be assigned to an attribute or a\n-variable. It is either a litteral value, or a construct requiring runtime\n+variable. It is either a literal value, or a construct requiring runtime\n computation by the project manager. In a project file, the computed value of\n an expression is either a string or a list of strings.\n \n@@ -2574,8 +2574,8 @@ the result is an empty list. This is also the case, if the separator is an\n empty string or if the external value is only one separator.\n \n Any separator at the beginning or at the end of the external value is\n-discarded. Then, if there is no separator in the external vaue, the result is\n-a string list with only one string. Otherwise, any string between the biginning\n+discarded. Then, if there is no separator in the external value, the result is\n+a string list with only one string. Otherwise, any string between the beginning\n and the first separator, between two consecutive separators and between the\n last separator and the end are components of the string list.\n \n@@ -2920,7 +2920,7 @@ system (file). The text is between brackets ([]) if the index is optional.\n @item Object_File_Suffix @tab string @tab Compiler @tab insensitive (language)\n @item Object_File_Switches @tab list @tab Compiler @tab insensitive (language)\n @item Multi_Unit_Switches @tab list @tab Compiler @tab insensitive (language)\n-@item Multi_Unit_Object_Separator @tab string @tab Compiler @tab insensitve (language)\n+@item Multi_Unit_Object_Separator @tab string @tab Compiler @tab insensitive (language)\n @item Mapping_File_Switches @tab list @tab Compiler @tab insensitive (language)\n @item Mapping_Spec_Suffix @tab string @tab Compiler @tab insensitive (language)\n @item Mapping_body_Suffix @tab string @tab Compiler @tab insensitive (language)\n@@ -3817,7 +3817,7 @@ gnat metric -Pproj -U main_unit\n will compute the metrics for the closure of units rooted at\n @code{main_unit}. This last possibility relies implicitly\n on @command{gnatbind}'s option @option{-R}. But if the argument files for the\n-tool invoked by the the @command{gnat} driver are explicitly  specified\n+tool invoked by the @command{gnat} driver are explicitly  specified\n either directly or through the tool @option{-files} option, then the tool\n is called only for these explicitly specified files.\n "}, {"sha": "86c4629893f21bc96191af4be81a68141b2eed68", "filename": "gcc/ada/s-auxdec-vms-alpha.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fs-auxdec-vms-alpha.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fs-auxdec-vms-alpha.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-auxdec-vms-alpha.adb?ref=308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "patch": "@@ -75,7 +75,7 @@ package body System.Aux_DEC is\n       Old_Bit : Boolean;\n \n    begin\n-      --  All these ASM sequences should be commented. I suggest definining\n+      --  All these ASM sequences should be commented. I suggest defining\n       --  a constant called E which is LF & HT and then you have more space\n       --  for line by line comments ???\n "}, {"sha": "202cdbc985792bf03caac3f7c616fe8a2cec516e", "filename": "gcc/ada/s-auxdec-vms_64.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fs-auxdec-vms_64.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fs-auxdec-vms_64.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-auxdec-vms_64.ads?ref=308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "patch": "@@ -579,7 +579,7 @@ private\n       Mechanism       => (Reference, Value, Value, Reference, Reference));\n    pragma Inline_Always (Or_Atomic);\n \n-   --  Inline the VAX Queue Funtions\n+   --  Inline the VAX Queue Functions\n \n    pragma Inline_Always (Insqhi);\n    pragma Inline_Always (Remqhi);"}, {"sha": "ed3653a48783b352d5bb7ea1d31c4ccc0c143163", "filename": "gcc/ada/s-oscons-tmplt.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fs-oscons-tmplt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fs-oscons-tmplt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-oscons-tmplt.c?ref=308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "patch": "@@ -948,7 +948,7 @@ CND(AF_INET, \"IPv4 address family\")\n #endif\n \n /**\n- ** Tru64 UNIX V4.0F defines AF_INET6 without IPv6 support, specificially\n+ ** Tru64 UNIX V4.0F defines AF_INET6 without IPv6 support, specifically\n  ** without struct sockaddr_in6.  We use _SS_MAXSIZE (used for the definition\n  ** of struct sockaddr_storage on Tru64 UNIX V5.1) to detect this.\n  **/"}, {"sha": "0fc4c13e97e00b9cad4da3a7814727a0f59bd2c3", "filename": "gcc/ada/s-osinte-vxworks.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fs-osinte-vxworks.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fs-osinte-vxworks.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osinte-vxworks.ads?ref=308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "patch": "@@ -471,7 +471,7 @@ package System.OS_Interface is\n       Handler   : Interrupt_Handler;\n       Parameter : System.Address := System.Null_Address) return int;\n    pragma Inline (Interrupt_Connect);\n-   --  Use this to set up an user handler. The routine installs a a user\n+   --  Use this to set up an user handler. The routine installs a user\n    --  handler which is invoked after the OS has saved enough context for a\n    --  high-level language routine to be safely invoked.\n "}, {"sha": "6c05b524fb53c4adf8d3377b4596fd3a9fce1987", "filename": "gcc/ada/s-osprim-mingw.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fs-osprim-mingw.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fs-osprim-mingw.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osprim-mingw.adb?ref=308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "patch": "@@ -193,9 +193,9 @@ package body System.OS_Primitives is\n \n          GetSystemTimeAsFileTime (Ctrl_Time'Access);\n \n-         --  Scan for clock tick, will take upto 16ms/1ms depending on PC.\n+         --  Scan for clock tick, will take up to 16ms/1ms depending on PC.\n          --  This cannot be an infinite loop or the system hardware is badly\n-         --  dammaged.\n+         --  damaged.\n \n          loop\n             GetSystemTimeAsFileTime (Loc_Time'Access);"}, {"sha": "b347d46ff6a81cc29a681528daca4943d8a71502", "filename": "gcc/ada/s-regexp.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fs-regexp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fs-regexp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-regexp.adb?ref=308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "patch": "@@ -196,18 +196,18 @@ package body System.Regexp is\n \n          Past_Elmt : Boolean := False;\n          --  Set to True everywhere an elmt has been parsed, if Glob=False,\n-         --  meaning there can be now an occurence of '*', '+' and '?'.\n+         --  meaning there can be now an occurrence of '*', '+' and '?'.\n \n          Past_Term : Boolean := False;\n          --  Set to True everywhere a term has been parsed, if Glob=False,\n-         --  meaning there can be now an occurence of '|'.\n+         --  meaning there can be now an occurrence of '|'.\n \n          Parenthesis_Level : Integer := 0;\n          Curly_Level       : Integer := 0;\n \n          Last_Open : Integer := S'First - 1;\n-         --  The last occurence of an opening parenthesis, if Glob=False,\n-         --  or the last occurence of an opening curly brace, if Glob=True.\n+         --  The last occurrence of an opening parenthesis, if Glob=False,\n+         --  or the last occurrence of an opening curly brace, if Glob=True.\n \n          procedure Raise_Exception_If_No_More_Chars (K : Integer := 0);\n          --  If no more characters are raised, call Raise_Exception"}, {"sha": "8078d9bfee395ae17ce46655af25d57ea5a3a5bd", "filename": "gcc/ada/s-stusta.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fs-stusta.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fs-stusta.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-stusta.adb?ref=308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "patch": "@@ -51,7 +51,7 @@ package body System.Stack_Usage.Tasking is\n    --  System.Stack_Usage.Result_Array\n \n    procedure Compute_Current_Task;\n-   --  Compute the stack usage for a given task and saves it in the a precise\n+   --  Compute the stack usage for a given task and saves it in the precise\n    --  slot in System.Stack_Usage.Result_Array;\n \n    procedure Report_Impl (All_Tasks : Boolean; Do_Print : Boolean);"}, {"sha": "20568ce1c58f75e86e580fce08d18218d41c81ba", "filename": "gcc/ada/s-taprop-mingw.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fs-taprop-mingw.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fs-taprop-mingw.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taprop-mingw.adb?ref=308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "patch": "@@ -957,7 +957,7 @@ package body System.Task_Primitives.Operations is\n       if T.Common.Base_CPU /= System.Multiprocessors.Not_A_Specific_CPU then\n \n          --  The CPU numbering in pragma CPU starts at 1 while the subprogram\n-         --  to set the affinity starts at 0, therefore we must substract 1.\n+         --  to set the affinity starts at 0, therefore we must subtract 1.\n \n          Result := SetThreadIdealProcessor\n            (hTask, ProcessorId (T.Common.Base_CPU) - 1);\n@@ -1115,7 +1115,7 @@ package body System.Task_Primitives.Operations is\n          System.Multiprocessors.Not_A_Specific_CPU\n       then\n          --  The CPU numbering in pragma CPU starts at 1 while the subprogram\n-         --  to set the affinity starts at 0, therefore we must substract 1.\n+         --  to set the affinity starts at 0, therefore we must subtract 1.\n \n          Result :=\n            SetThreadIdealProcessor"}, {"sha": "a48622d0345fb78ab87047bbc2268278000d0989", "filename": "gcc/ada/s-taprop-solaris.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fs-taprop-solaris.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fs-taprop-solaris.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taprop-solaris.adb?ref=308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "patch": "@@ -880,7 +880,7 @@ package body System.Task_Primitives.Operations is\n          System.Multiprocessors.Not_A_Specific_CPU\n       then\n          --  The CPU numbering in pragma CPU starts at 1 while the subprogram\n-         --  to set the affinity starts at 0, therefore we must substract 1.\n+         --  to set the affinity starts at 0, therefore we must subtract 1.\n \n          Result :=\n            processor_bind"}, {"sha": "2862a0afa0859bfeba87e3f4f308665bee17eefb", "filename": "gcc/ada/scn.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fscn.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fscn.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fscn.adb?ref=308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "patch": "@@ -473,8 +473,8 @@ package body Scn is\n \n       if not Used_As_Identifier (Token) or else Force_Msg then\n \n-         --  If \"some\" is made into a reseverd work in Ada2012, the following\n-         --  check will make it into a regular identifer in earlier versions\n+         --  If \"some\" is made into a reserved work in Ada2012, the following\n+         --  check will make it into a regular identifier in earlier versions\n          --  of the language.\n \n          if Token = Tok_Some and then Ada_Version < Ada_2012 then"}, {"sha": "fbb7e90ee4ee5f00ca8a673cc20c0df2a7a2d203", "filename": "gcc/ada/scos.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fscos.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fscos.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fscos.ads?ref=308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "patch": "@@ -186,7 +186,7 @@ package SCOs is\n    --    operand of a logical operator.\n \n    --    Decisions are either simple or complex. A simple decision is a top\n-   --    level boolean expresssion that has only one condition and that occurs\n+   --    level boolean expression that has only one condition and that occurs\n    --    in the context of a control structure in the source program, including\n    --    WHILE, IF, EXIT WHEN, or in an Assert, Check, Pre_Condition or\n    --    Post_Condition pragma. For pragmas, decision SCOs are generated only"}, {"sha": "4cf2ec74026d6d70752850e6750b82657341de30", "filename": "gcc/ada/sem.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fsem.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fsem.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem.adb?ref=308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "patch": "@@ -1803,7 +1803,7 @@ package body Sem is\n \n             Do_Withed_Units (CU, Include_Limited => False);\n \n-            --  Process the unit if it is a spec or the the main unit, if it\n+            --  Process the unit if it is a spec or the main unit, if it\n             --  has no previous spec or we have done all other units.\n \n             if not Nkind_In (Item, N_Package_Body, N_Subprogram_Body)"}, {"sha": "1d75a3c75a9a91085a8daae404a88cb04b1e8883", "filename": "gcc/ada/sem_aggr.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fsem_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fsem_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_aggr.adb?ref=308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "patch": "@@ -3577,7 +3577,7 @@ package body Sem_Aggr is\n                      --  for the rest, if other components are present.\n                      --  The type of the aggregate is the known subtype of\n                      --  the component. The capture of discriminants must\n-                     --  be recursive because subcomponents may be contrained\n+                     --  be recursive because subcomponents may be constrained\n                      --  (transitively) by discriminants of enclosing types.\n                      --  For a private type with discriminants, a call to the\n                      --  initialization procedure will be generated, and no"}, {"sha": "b7b4f2f631928d907872091f4645f864c85b4508", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "patch": "@@ -1630,7 +1630,7 @@ package body Sem_Attr is\n          end if;\n \n          --  Check special case of Exception_Id and Exception_Occurrence which\n-         --  are not allowed for restriction No_Exception_Regstriation.\n+         --  are not allowed for restriction No_Exception_Registration.\n \n          if Is_RTE (P_Type, RE_Exception_Id)\n               or else"}, {"sha": "e9a47a3bfdedfccdfd9af9a97e6a8c104b01f2f1", "filename": "gcc/ada/sem_aux.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fsem_aux.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fsem_aux.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_aux.adb?ref=308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "patch": "@@ -665,7 +665,7 @@ package body Sem_Aux is\n                   --  only occur in the case of a _parent component anyway).\n                   --  They don't have any components, plus it would cause this\n                   --  function to return true for nonlimited types derived from\n-                  --  limited intefaces.\n+                  --  limited interfaces.\n \n                   if not Is_Interface (Etype (C))\n                     and then Is_Immutably_Limited_Type (Etype (C))"}, {"sha": "e54016c99718b353ce9c7d4f3f8ecc9143e19d56", "filename": "gcc/ada/sem_aux.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fsem_aux.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fsem_aux.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_aux.ads?ref=308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "patch": "@@ -132,7 +132,7 @@ package Sem_Aux is\n    --  the entity chain of the derived type which are a copy of the\n    --  discriminants of the root type. Furthermore their Is_Completely_Hidden\n    --  flag is set since although they are actually stored in the object, they\n-   --  are not in the set of discriminants that is visble in the type.\n+   --  are not in the set of discriminants that is visible in the type.\n    --\n    --  For derived untagged types, the set of stored discriminants are the real\n    --  discriminants from Gigi's standpoint, i.e. those that will be stored in\n@@ -177,7 +177,7 @@ package Sem_Aux is\n    --  These are the types that are defined as return-by-reference types in Ada\n    --  95 (see RM95-6.5(11-16)). In Ada 2005, these are the types that require\n    --  build-in-place for function calls. Note that build-in-place is allowed\n-   --  for other types, too. This is also used for idenfitying pure procedures\n+   --  for other types, too. This is also used for identifying pure procedures\n    --  whose calls should not be eliminated (RM 10.2.1(18/2)).\n \n    function Is_Limited_Type (Ent : Entity_Id) return Boolean;"}, {"sha": "80eacf6600edc61e90cc57e51ce7187ad84fcbf2", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "patch": "@@ -2819,7 +2819,7 @@ package body Sem_Ch12 is\n             --  Check restriction imposed by AI05-073: a generic function\n             --  cannot return an abstract type or an access to such.\n \n-            --  This is a binding interpreration should it apply to earlier\n+            --  This is a binding interpretation should it apply to earlier\n             --  versions of Ada as well as Ada 2012???\n \n             if Is_Abstract_Type (Designated_Type (Result_Type))"}, {"sha": "676be37e31f379df2da46fb362c2588c5f09aec4", "filename": "gcc/ada/sem_ch12.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fsem_ch12.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fsem_ch12.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.ads?ref=308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "patch": "@@ -53,7 +53,7 @@ package Sem_Ch12 is\n    --  the child unit that must be declared within. Similarly, if this is the\n    --  name of a generic child unit within an instantiation of its own parent,\n    --  retrieve the parent generic. If the parent is installed as a result of\n-   --  this call, then Parent_Installed is set True, otherwise Parent_Intalled\n+   --  this call, then Parent_Installed is set True, otherwise Parent_Installed\n    --  is unchanged by the call.\n \n    function Copy_Generic_Node"}, {"sha": "128b398bf7b1cf66be45c698f3f0ed45c430cf7e", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "patch": "@@ -81,12 +81,12 @@ package body Sem_Ch13 is\n    procedure Build_Predicate_Function (Typ : Entity_Id; N : Node_Id);\n    --  If Typ has predicates (indicated by Has_Predicates being set for Typ,\n    --  then either there are pragma Invariant entries on the rep chain for the\n-   --  type (note that Predicate aspects are converted to pragam Predicate), or\n+   --  type (note that Predicate aspects are converted to pragma Predicate), or\n    --  there are inherited aspects from a parent type, or ancestor subtypes.\n    --  This procedure builds the spec and body for the Predicate function that\n    --  tests these predicates. N is the freeze node for the type. The spec of\n    --  the function is inserted before the freeze node, and the body of the\n-   --  funtion is inserted after the freeze node.\n+   --  function is inserted after the freeze node.\n \n    procedure Build_Static_Predicate\n      (Typ  : Entity_Id;\n@@ -96,7 +96,7 @@ package body Sem_Ch13 is\n    --  whose predicate expression is Expr, tests if Expr is a static predicate,\n    --  and if so, builds the predicate range list. Nam is the name of the one\n    --  argument to the predicate function. Occurrences of the type name in the\n-   --  predicate expression have been replaced by identifer references to this\n+   --  predicate expression have been replaced by identifier references to this\n    --  name, which is unique, so any identifier with Chars matching Nam must be\n    --  a reference to the type. If the predicate is non-static, this procedure\n    --  returns doing nothing. If the predicate is static, then the predicate\n@@ -211,7 +211,7 @@ package body Sem_Ch13 is\n       --  The entity of the object being overlaid\n \n       Off : Boolean;\n-      --  Whether the address is offseted within Y\n+      --  Whether the address is offset within Y\n    end record;\n \n    package Address_Clause_Checks is new Table.Table (\n@@ -723,13 +723,13 @@ package body Sem_Ch13 is\n       end if;\n \n       --  Return if already analyzed (avoids duplicate calls in some cases\n-      --  where type declarations get rewritten and proessed twice).\n+      --  where type declarations get rewritten and processed twice).\n \n       if Analyzed (N) then\n          return;\n       end if;\n \n-      --  Loop through apsects\n+      --  Loop through aspects\n \n       Aspect := First (L);\n       while Present (Aspect) loop\n@@ -1077,8 +1077,8 @@ package body Sem_Ch13 is\n                end;\n \n                --  Invariant aspects generate a corresponding pragma with a\n-               --  first argument that is the entity, and the second argument\n-               --  is the expression and anthird argument with an appropriate\n+               --  first argument that is the entity, a second argument that is\n+               --  the expression and a third argument that is an appropriate\n                --  message. This is inserted right after the declaration, to\n                --  get the required pragma placement. The pragma processing\n                --  takes care of the required delay.\n@@ -3950,7 +3950,7 @@ package body Sem_Ch13 is\n          procedure Replace_Type_References is\n            new Replace_Type_References_Generic (Replace_Type_Reference);\n          --  Traverse an expression changing every occurrence of an identifier\n-         --  whose name mathches the name of the subtype with a reference to\n+         --  whose name matches the name of the subtype with a reference to\n          --  the formal parameter of the predicate function.\n \n          ----------------------------\n@@ -4186,7 +4186,7 @@ package body Sem_Ch13 is\n       function Is_False (R : RList) return Boolean;\n       pragma Inline (Is_False);\n       --  Returns True if the given range list is empty, and thus represents\n-      --  a False list of ranges that can never be satsified.\n+      --  a False list of ranges that can never be satisfied.\n \n       function Is_True (R : RList) return Boolean;\n       --  Returns True if R trivially represents the True predicate by having"}, {"sha": "95263ec84fd39939265713c73aaf3f1659b0cca8", "filename": "gcc/ada/sem_ch13.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fsem_ch13.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fsem_ch13.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.ads?ref=308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "patch": "@@ -40,8 +40,8 @@ package Sem_Ch13 is\n      (N : Node_Id;\n       E : Entity_Id;\n       L : List_Id);\n-   --  This procedure is called to analyze aspect spefications for node N. E is\n-   --  the corresponding entity declared by the declaration node N, and L is\n+   --  This procedure is called to analyze aspect specifications for node N. E\n+   --  is the corresponding entity declared by the declaration node N, and L is\n    --  the list of aspect specifications for this node. If L is No_List, the\n    --  call is ignored. Note that we can't use a simpler interface of just\n    --  passing the node N, since the analysis of the node may cause it to be\n@@ -210,7 +210,7 @@ package Sem_Ch13 is\n    --  This is called after the back end has been called (and thus after the\n    --  layout of components has been back annotated). It goes through the\n    --  table of saved pragma Independent[_Component] entries, checking that\n-   --  independence can be achieved, and if necessary issuing error mssags.\n+   --  independence can be achieved, and if necessary issuing error messages.\n \n    -------------------------------------\n    -- Table for Validate_Independence --"}, {"sha": "0587b9a36de87758d55ddbd58c3733d27e72e7b5", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "patch": "@@ -8683,7 +8683,7 @@ package body Sem_Ch3 is\n                Make_Pragma_Argument_Association (Loc,\n                  Expression => Make_Identifier (Loc, Iface_Kind))));\n \n-         --  The pragma doesn't need to be analyzed because it is internaly\n+         --  The pragma doesn't need to be analyzed because it is internally\n          --  build. It is safe to directly register it as a rep item since we\n          --  are only interested in the characters of the implementation kind.\n \n@@ -10435,7 +10435,7 @@ package body Sem_Ch3 is\n                   \"be allowed in Ada 2005?\", S);\n             else\n                Error_Msg_N\n-                 (\"access subype of general access type not allowed\", S);\n+                 (\"access subtype of general access type not allowed\", S);\n             end if;\n \n             Error_Msg_N (\"\\discriminants have defaults\", S);\n@@ -11768,10 +11768,10 @@ package body Sem_Ch3 is\n             Access_Types_To_Process (Freeze_Node (Priv)));\n       end if;\n \n-      --  Swap the two entities. Now Privat is the full type entity and Full is\n-      --  the private one. They will be swapped back at the end of the private\n-      --  part. This swapping ensures that the entity that is visible in the\n-      --  private part is the full declaration.\n+      --  Swap the two entities. Now Private is the full type entity and Full\n+      --  is the private one. They will be swapped back at the end of the\n+      --  private part. This swapping ensures that the entity that is visible\n+      --  in the private part is the full declaration.\n \n       Exchange_Entities (Priv, Full);\n       Append_Entity (Full, Scope (Full));\n@@ -16869,7 +16869,7 @@ package body Sem_Ch3 is\n \n             if Ekind (Typ) = E_Record_Type_With_Private then\n \n-               --  Handle the following erronous case:\n+               --  Handle the following erroneous case:\n                --      type Private_Type is tagged private;\n                --   private\n                --      type Private_Type is new Type_Implementing_Iface;\n@@ -17407,8 +17407,8 @@ package body Sem_Ch3 is\n          --  but it means we don't have to struggle to meet the requirements in\n          --  the RM for having Preelaborable Initialization. Otherwise we\n          --  require that the type meets the RM rules. But we can't check that\n-         --  yet, because of the rule about overriding Ininitialize, so we\n-         --  simply set a flag that will be checked at freeze time.\n+         --  yet, because of the rule about overriding Initialize, so we simply\n+         --  set a flag that will be checked at freeze time.\n \n          if not In_Predefined_Unit (Full_T) then\n             Set_Must_Have_Preelab_Init (Full_T);"}, {"sha": "c94196ab0424b1851f5e9c8909f5c92a6ea4209f", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "patch": "@@ -400,7 +400,7 @@ package body Sem_Ch4 is\n                   exit;\n                end if;\n \n-               --  The other case is appearence in a subprogram body. This may\n+               --  The other case is appearance in a subprogram body. This may\n                --  be a violation if this is a library level subprogram, and it\n                --  turns out to be used as the main program, but only the\n                --  binder knows that, so just record the occurrence.\n@@ -1195,8 +1195,8 @@ package body Sem_Ch4 is\n             Get_First_Interp (FirstX, I, It);\n             while Present (It.Nam) loop\n \n-               --  For each intepretation of the first expression, we only\n-               --  add the intepretation if every other expression in the\n+               --  For each interpretation of the first expression, we only\n+               --  add the interpretation if every other expression in the\n                --  case expression alternatives has a compatible type.\n \n                Alt := Next (First (Alternatives (N)));\n@@ -1497,7 +1497,7 @@ package body Sem_Ch4 is\n             Get_First_Interp (Then_Expr, I, It);\n             while Present (It.Nam) loop\n \n-               --  For each possible intepretation of the Then Expression,\n+               --  For each possible interpretation of the Then Expression,\n                --  add it only if the else expression has a compatible type.\n \n                --  Is this right if Else_Expr is empty?\n@@ -4084,7 +4084,7 @@ package body Sem_Ch4 is\n \n          --  Finally, the formal and the actual may be private extensions,\n          --  but the generic is declared in a child unit of the parent, and\n-         --  an addtional step is needed to retrieve the proper scope.\n+         --  an additional step is needed to retrieve the proper scope.\n \n          elsif In_Instance\n            and then Present (Parent_Subtype (Etype (Base_Type (Prefix_Type))))\n@@ -5303,7 +5303,7 @@ package body Sem_Ch4 is\n             null;\n \n          else\n-            --  Save candidate type for subsquent error message, if any\n+            --  Save candidate type for subsequent error message, if any\n \n             if not Is_Limited_Type (T1) then\n                Candidate_Type := T1;"}, {"sha": "ab3f26b7a8e0c0862605f1f1f934d6a5de341501", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "patch": "@@ -7868,7 +7868,7 @@ package body Sem_Ch6 is\n \n             --  (Ada 2012: AI05-0125-1): If S is a dispatching operation then\n             --  it may have overridden some hidden inherited primitive. Update\n-            --  Overriden_Subp to avoid spurious errors when checking the\n+            --  Overridden_Subp to avoid spurious errors when checking the\n             --  overriding indicator.\n \n             if Ada_Version >= Ada_2012\n@@ -8766,7 +8766,7 @@ package body Sem_Ch6 is\n             end;\n          end if;\n \n-         --  Now we can copy the tree, doing any required substituations\n+         --  Now we can copy the tree, doing any required substitutions\n \n          CP := New_Copy_Tree (Prag, Map => Map, New_Scope => Current_Scope);\n "}, {"sha": "324f1a97311fabd8018eb22be3e8da766b054a64", "filename": "gcc/ada/sem_ch7.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fsem_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fsem_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch7.adb?ref=308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "patch": "@@ -1934,7 +1934,7 @@ package body Sem_Ch7 is\n \n    procedure New_Private_Type (N : Node_Id; Id : Entity_Id; Def : Node_Id) is\n    begin\n-      --  For other than Ada 2012, enter tha name in the current scope\n+      --  For other than Ada 2012, enter the name in the current scope\n \n       if Ada_Version < Ada_2012 then\n          Enter_Name (Id);"}, {"sha": "c14c446fe6b5007cea3a9d1c1f3d2a61a7058fa9", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "patch": "@@ -3508,7 +3508,7 @@ package body Sem_Ch8 is\n \n       function May_Be_Used_Primitive_Of (T : Entity_Id) return Boolean;\n       --  An operator may be primitive in several types, if they are declared\n-      --  in the same scope as the operator. To determine the use-visiblity of\n+      --  in the same scope as the operator. To determine the use-visibility of\n       --  the operator in such cases we must examine all types in the profile.\n \n       ------------------------------"}, {"sha": "818f9b85574eb2fc3ad207fbb9c172d297625671", "filename": "gcc/ada/sem_disp.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fsem_disp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fsem_disp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_disp.adb?ref=308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "patch": "@@ -1035,7 +1035,7 @@ package body Sem_Disp is\n                            end if;\n \n                            --  Indicate that this is an overriding operation,\n-                           --  and replace the overriden entry in the list of\n+                           --  and replace the overridden entry in the list of\n                            --  primitive operations, which is used for xref\n                            --  generation subsequently.\n \n@@ -2077,7 +2077,7 @@ package body Sem_Disp is\n \n       --  The location of entities that come from source in the list of\n       --  primitives of the tagged type must follow their order of occurrence\n-      --  in the sources to fulfill the C++ ABI. If the overriden entity is a\n+      --  in the sources to fulfill the C++ ABI. If the overridden entity is a\n       --  primitive of an interface that is not an ancestor of this tagged\n       --  type (that is, it is an entity added to the list of primitives by\n       --  Derive_Interface_Progenitors), then we must append the new entity\n@@ -2091,7 +2091,7 @@ package body Sem_Disp is\n          Remove_Elmt (Primitive_Operations (Tagged_Type), Elmt);\n          Append_Elmt (New_Op, Primitive_Operations (Tagged_Type));\n \n-      --  The new primitive replaces the overriden entity. Required to ensure\n+      --  The new primitive replaces the overridden entity. Required to ensure\n       --  that overriding primitive is assigned the same dispatch table slot.\n \n       else"}, {"sha": "c27346dd4281126bcd394ba19055cccdad94b108", "filename": "gcc/ada/sem_disp.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fsem_disp.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fsem_disp.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_disp.ads?ref=308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "patch": "@@ -90,7 +90,7 @@ package Sem_Disp is\n    --  in the list of primitives of Tagged_Type. This latter search is needed\n    --  when the interface primitive is covered by a private subprogram. If the\n    --  primitive has not been covered yet then return the entity that will be\n-   --  overriden when the primitive is covered (that is, return the entity\n+   --  overridden when the primitive is covered (that is, return the entity\n    --  whose alias attribute references the interface primitive). If none of\n    --  these entities is found then return Empty.\n "}, {"sha": "caa0f704ffce2656fc6d5b265d4f968a606dd155", "filename": "gcc/ada/sem_eval.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fsem_eval.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fsem_eval.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_eval.adb?ref=308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "patch": "@@ -211,7 +211,7 @@ package body Sem_Eval is\n    --\n    --  If Stat is set True on return, then Is_Static_Expression is also set\n    --  true in node N. There are some cases where this is over-enthusiastic,\n-   --  e.g. in the two operand case below, for string comaprison, the result\n+   --  e.g. in the two operand case below, for string comparison, the result\n    --  is not static even though the two operands are static. In such cases,\n    --  the caller must reset the Is_Static_Expression flag in N.\n \n@@ -4854,7 +4854,7 @@ package body Sem_Eval is\n       elsif Is_Array_Type (T1) then\n \n          --  If either subtype is unconstrained then both must be, and if both\n-         --  are unconstrained then no further checking is neede.\n+         --  are unconstrained then no further checking is needed.\n \n          if not Is_Constrained (T1) or else not Is_Constrained (T2) then\n             return not (Is_Constrained (T1) or else Is_Constrained (T2));"}, {"sha": "9203a9af8789d24a3cc830f3f23c5b69919c4434", "filename": "gcc/ada/sem_intr.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fsem_intr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fsem_intr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_intr.adb?ref=308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "patch": "@@ -167,7 +167,7 @@ package body Sem_Intr is\n \n       --  For unchecked deallocation, error to deallocate from empty pool.\n       --  Note: this test used to be in Exp_Intr as a warning, but AI 157\n-      --  issues a binding intepretation that this should be an error, and\n+      --  issues a binding interpretation that this should be an error, and\n       --  consequently it needs to be done in the semantic analysis so that\n       --  the error is issued even in semantics only mode.\n "}, {"sha": "fd509c482aecf1d5ae51c8962b85f1c5575f9073", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "patch": "@@ -1644,7 +1644,7 @@ package body Sem_Prag is\n                end;\n             end if;\n \n-            --  Note: we do not analye the pragma at this point. Instead we\n+            --  Note: we do not analyze the pragma at this point. Instead we\n             --  delay this analysis until the end of the declarative part in\n             --  which the pragma appears. This implements the required delay\n             --  in this analysis, allowing forward references. The analysis\n@@ -13917,8 +13917,8 @@ package body Sem_Prag is\n    --  whether a given pragma is significant.\n \n    --  -1  indicates that references in any argument position are significant\n-   --  0   indicates that appearence in any argument is not significant\n-   --  +n  indicates that appearence as argument n is significant, but all\n+   --  0   indicates that appearance in any argument is not significant\n+   --  +n  indicates that appearance as argument n is significant, but all\n    --      other arguments are not significant\n    --  99  special processing required (e.g. for pragma Check)\n "}, {"sha": "ce5323d85cdefd818abf09d4d0db9003fe40caa7", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "patch": "@@ -4885,7 +4885,7 @@ package body Sem_Res is\n                --  expander does, so we match its logic here).\n \n                --  The second case is mod where either operand can be negative.\n-               --  In this case, the back end has to generate additonal tests.\n+               --  In this case, the back end has to generate additional tests.\n \n                if (Nkind (N) = N_Op_Rem and then (LNeg and RNeg))\n                     or else\n@@ -5985,7 +5985,7 @@ package body Sem_Res is\n          then\n             null;\n \n-         --  Any other use is an eror\n+         --  Any other use is an error\n \n          else\n             Error_Msg_N"}, {"sha": "a069a0a632c0d932f11205ac1d7af4030201daa5", "filename": "gcc/ada/sem_scil.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fsem_scil.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fsem_scil.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_scil.adb?ref=308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "patch": "@@ -148,7 +148,7 @@ package body Sem_SCIL is\n             --  Note: When the SCIL node is generated the private and full-view\n             --    of the tagged types may have been swapped and hence the node\n             --    referenced by attribute SCIL_Entity may be the private view.\n-            --    Therefore, in order to uniformily locate the full-view we use\n+            --    Therefore, in order to uniformly locate the full-view we use\n             --    attribute Underlying_Type.\n \n             pragma Assert"}, {"sha": "b218b8ea6630818b07400fcf1c311892cd89bc44", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "patch": "@@ -73,7 +73,7 @@ package body Sem_Util is\n    --  safely used by New_Copy_Tree, since there is no case of a recursive\n    --  call from the processing inside New_Copy_Tree.\n \n-   NCT_Hash_Threshhold : constant := 20;\n+   NCT_Hash_Threshold : constant := 20;\n    --  If there are more than this number of pairs of entries in the\n    --  map, then Hash_Tables_Used will be set, and the hash tables will\n    --  be initialized and used for the searches.\n@@ -82,7 +82,7 @@ package body Sem_Util is\n    --  Set to True if hash tables are in use\n \n    NCT_Table_Entries : Nat;\n-   --  Count entries in table to see if threshhold is reached\n+   --  Count entries in table to see if threshold is reached\n \n    NCT_Hash_Table_Setup : Boolean := False;\n    --  Set to True if hash table contains data. We set this True if we\n@@ -8248,7 +8248,7 @@ package body Sem_Util is\n    --  Itype references within the copied tree.\n \n    --  The following hash tables are used if the Map supplied has more\n-   --  than hash threshhold entries to speed up access to the map. If\n+   --  than hash threshold entries to speed up access to the map. If\n    --  there are fewer entries, then the map is searched sequentially\n    --  (because setting up a hash table for only a few entries takes\n    --  more time than it saves.\n@@ -8984,7 +8984,7 @@ package body Sem_Util is\n          else\n             NCT_Table_Entries := NCT_Table_Entries + 1;\n \n-            if NCT_Table_Entries > NCT_Hash_Threshhold then\n+            if NCT_Table_Entries > NCT_Hash_Threshold then\n                Build_NCT_Hash_Tables;\n             end if;\n          end if;\n@@ -9118,7 +9118,7 @@ package body Sem_Util is\n                Next_Elmt (Elmt);\n             end loop;\n \n-            if NCT_Table_Entries > NCT_Hash_Threshhold then\n+            if NCT_Table_Entries > NCT_Hash_Threshold then\n                Build_NCT_Hash_Tables;\n             else\n                NCT_Hash_Tables_Used := False;\n@@ -9977,7 +9977,7 @@ package body Sem_Util is\n       then\n          return Original_Corresponding_Operation (Alias (S));\n \n-      --  If S overrides an inherted subprogram S2 the original corresponding\n+      --  If S overrides an inherited subprogram S2 the original corresponding\n       --  operation of S is the original corresponding operation of S2\n \n       elsif Present (Overridden_Operation (S)) then"}, {"sha": "40a3df32cc790858f383eaffbe629a97dcb72bf3", "filename": "gcc/ada/sem_util.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fsem_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fsem_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.ads?ref=308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "patch": "@@ -776,13 +776,13 @@ package Sem_Util is\n    --  initialized (in particular in the record case, that at least one\n    --  component has an initialization expression). Note that initialization\n    --  resulting from the use of pragma Normalized_Scalars does not count.\n-   --  Include_Implicit controls whether implicit initialiation of access\n+   --  Include_Implicit controls whether implicit initialization of access\n    --  values to null, and of discriminant values, is counted as making the\n    --  type be partially initialized. For the default setting of True, these\n    --  implicit cases do count, and discriminated types or types containing\n    --  access values not explicitly initialized will return True. Otherwise\n    --  if Include_Implicit is False, these cases do not count as making the\n-   --  type be partially initialied.\n+   --  type be partially initialized.\n \n    function Is_Potentially_Persistent_Type (T : Entity_Id) return Boolean;\n    --  Determines if type T is a potentially persistent type. A potentially"}, {"sha": "9388c66290002bc64f0c7639154ff55d2f414622", "filename": "gcc/ada/sem_warn.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fsem_warn.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fsem_warn.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_warn.adb?ref=308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "patch": "@@ -2055,7 +2055,7 @@ package body Sem_Warn is\n          --  or a pragma, and a warning is worthwhile as well.\n \n          function Check_System_Aux return Boolean;\n-         --  Before giving a warning on a with_clause for System, check wheter\n+         --  Before giving a warning on a with_clause for System, check whether\n          --  a system extension is present.\n \n          function Find_Package_Renaming\n@@ -4466,7 +4466,7 @@ package body Sem_Warn is\n                      --  variable in question, or if the entity in question\n                      --  is an OUT or IN OUT parameter, which which case\n                      --  the caller can reference it after the exception\n-                     --  hanlder completes\n+                     --  handler completes.\n \n                   else\n                      if Is_Formal (Ent) then"}, {"sha": "eb756ed627aed0902d13b48efb967fedc289092c", "filename": "gcc/ada/sem_warn.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fsem_warn.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fsem_warn.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_warn.ads?ref=308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "patch": "@@ -49,7 +49,7 @@ package Sem_Warn is\n \n    Warn_On_Overridden_Size : Boolean := False;\n    --  Warn when explicit record component clause or array component_size\n-   --  clause specifies a size that overrides a size for the typen which was\n+   --  clause specifies a size that overrides a size for the type which was\n    --  set with an explicit size clause. Off by default, set by -gnatw.s (but\n    --  not -gnatwa).\n "}, {"sha": "8a6690360f270fe59782ef758328515fcef03aa1", "filename": "gcc/ada/sinfo.ads", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fsinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fsinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.ads?ref=308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "patch": "@@ -1150,7 +1150,7 @@ package Sinfo is\n \n    --  Has_Pragma_Suppress_All (Flag14-Sem)\n    --    This flag is set in an N_Compilation_Unit node if the Suppress_All\n-   --    pragma appears anywhere in the unit. This accomodates the rather\n+   --    pragma appears anywhere in the unit. This accommodates the rather\n    --    strange placement rules of other compilers (DEC permits it at the\n    --    end of a unit, and Rational allows it as a program unit pragma). We\n    --    allow it anywhere at all, and consider it equivalent to a pragma\n@@ -1455,7 +1455,7 @@ package Sinfo is\n \n    --  Next_Exit_Statement (Node3-Sem)\n    --    Present in N_Exit_Statement nodes. The exit statements for a loop are\n-   --    chained (in reverse order of appearence) from the First_Exit_Statement\n+   --    chained (in reverse order of appearance) from the First_Exit_Statement\n    --    field of the E_Loop entity for the loop. Next_Exit_Statement points to\n    --    the next entry on this chain (Empty = end of list).\n \n@@ -1466,7 +1466,7 @@ package Sinfo is\n    --    A postorder traversal of the tree whose nodes are units and whose\n    --    links are with_clauses defines the order in which Inspector must\n    --    examine a compiled unit and its full context. This ordering ensures\n-   --    that any subprogram call is examined after the subprogram declartion\n+   --    that any subprogram call is examined after the subprogram declaration\n    --    has been seen.\n \n    --  Next_Named_Actual (Node4-Sem)\n@@ -1734,9 +1734,9 @@ package Sinfo is\n    --    secondary stack.\n \n    --  Suppress_Assignment_Checks (Flag18-Sem)\n-   --    Used in genererated N_Assignment_Statement nodes to suppress predicate\n+   --    Used in generated N_Assignment_Statement nodes to suppress predicate\n    --    and range checks in cases where the generated code knows that the\n-   --    value being assigned is in range and satisifies any predicate. Also\n+   --    value being assigned is in range and satisfies any predicate. Also\n    --    can be set in N_Object_Declaration nodes, to similarly suppress any\n    --    checks on the initializing value.\n \n@@ -4063,7 +4063,7 @@ package Sinfo is\n       --  Suppress_Assignment_Checks (Flag18-Sem)\n \n       --  Note: if a range check is required, then the Do_Range_Check flag\n-      --  is set in the Expression (right hand side), with the check b6ing\n+      --  is set in the Expression (right hand side), with the check being\n       --  done against the type of the Name (left hand side).\n \n       --  Note: the back end places some restrictions on the form of the\n@@ -4188,7 +4188,7 @@ package Sinfo is\n       --  explicit loop identifier. Otherwise the parser leaves this field\n       --  set to Empty, and then the semantic processing for a loop statement\n       --  creates an identifier, setting the Has_Created_Identifier flag to\n-      --  True. So after semantic anlaysis, the Identifier is always set,\n+      --  True. So after semantic analysis, the Identifier is always set,\n       --  referencing an identifier whose entity has an Ekind of E_Loop.\n \n       --------------------------\n@@ -6806,7 +6806,7 @@ package Sinfo is\n       --      CASE_EXPRESSION_ALTERNATIVE\n       --      {CASE_EXPRESSION_ALTERNATIVE}\n \n-      --  Note that the Alternatives cannot include pragmas (this constrasts\n+      --  Note that the Alternatives cannot include pragmas (this contrasts\n       --  with the situation of case statements where pragmas are allowed).\n \n       --  N_Case_Expression\n@@ -6830,7 +6830,7 @@ package Sinfo is\n \n       --  Note: The Actions field temporarily holds any actions associated with\n       --  evaluation of the Expression. During expansion of the case expression\n-      --  these actions are wrapped into the an N_Expressions_With_Actions node\n+      --  these actions are wrapped into an N_Expressions_With_Actions node\n       --  replacing the original expression.\n \n       ----------------------------\n@@ -6859,7 +6859,7 @@ package Sinfo is\n \n       --  And we add the additional constructs\n \n-      --  PRIMARY ::= ( CONDITIONAL_EXPRESION )\n+      --  PRIMARY ::= ( CONDITIONAL_EXPRESSION )\n       --  PRAGMA_ARGUMENT_ASSOCIATION ::= CONDITIONAL_EXPRESSION\n \n       --  Note: if we have (IF x1 THEN x2 ELSIF x3 THEN x4 ELSE x5) then it"}, {"sha": "ee1f760daab8ec1735e1b3c5ed5b3f08fd1c4abf", "filename": "gcc/ada/socket.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fsocket.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fsocket.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsocket.c?ref=308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "patch": "@@ -37,7 +37,7 @@\n /*\n  * For VMS, gsocket.h can't include sockets-related DEC C header files\n  * when building the runtime (because these files are in a DEC C text library\n- * (DECC$RTLDEF.TLB) not accessable to GCC). So, we generate a separate header\n+ * (DECC$RTLDEF.TLB) not accessible to GCC). So, we generate a separate header\n  * file along with s-oscons.ads and include it here.\n  */\n # include \"s-oscons.h\""}, {"sha": "fd6cbae7ead1bff314d40d845b217a3b58199034", "filename": "gcc/ada/styleg.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fstyleg.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fstyleg.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fstyleg.adb?ref=308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "patch": "@@ -201,7 +201,7 @@ package body Styleg is\n          end if;\n       end OK_Boolean_Operand;\n \n-   --  Start of processig for Check_Boolean_Operator\n+   --  Start of processing for Check_Boolean_Operator\n \n    begin\n       if Style_Check_Boolean_And_Or"}, {"sha": "f7c62cba2330eaf98fbe424dfe5d02f3c6f50810", "filename": "gcc/ada/switch.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fswitch.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fswitch.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fswitch.ads?ref=308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "patch": "@@ -75,7 +75,7 @@ package Switch is\n    function Is_Internal_GCC_Switch (Switch_Chars : String) return Boolean;\n    --  Returns True iff Switch_Chars represents an internal GCC switch to be\n    --  followed by a single argument, such as -dumpbase, --param or -auxbase.\n-   --  Eventhough passed by the \"gcc\" driver, these need not be stored in ALI\n+   --  Even though passed by the \"gcc\" driver, these need not be stored in ALI\n    --  files and may safely be ignored by non GCC back-ends.\n \n    function Switch_Last (Switch_Chars : String) return Natural;\n@@ -98,7 +98,7 @@ private\n    --  Returns True if an integer is at the current scan location or an equal\n    --  sign. This is used as a guard for calling Scan_Nat. Switch_Chars is the\n    --  string containing the switch, and Ptr points just past the switch\n-   --  character. Max is the maximum alllowed value of Ptr.\n+   --  character. Max is the maximum allowed value of Ptr.\n \n    procedure Scan_Nat\n      (Switch_Chars : String;\n@@ -109,7 +109,7 @@ private\n    --  Scan natural integer parameter for switch. On entry, Ptr points just\n    --  past the switch character, on exit it points past the last digit of the\n    --  integer value. Max is the maximum allowed value of Ptr, so the scan is\n-   --  restricted to Switch_Chars (Ptr .. Max). It is posssible for Ptr to be\n+   --  restricted to Switch_Chars (Ptr .. Max). It is possible for Ptr to be\n    --  one greater than Max on return if the entire string is digits. Scan_Nat\n    --  will skip an optional equal sign if it is present. Nat_Present must be\n    --  True, or an error will be signalled."}, {"sha": "aee200a8db80f954e901d20f8d6bfb51d666b8eb", "filename": "gcc/ada/sysdep.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fsysdep.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fsysdep.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsysdep.c?ref=308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "patch": "@@ -850,11 +850,11 @@ __gnat_localtime_tzoff (const time_t *timer, long *off)\n \n #else\n \n-/* VMS does not need __gnat_locatime_tzoff */\n+/* VMS does not need __gnat_localtime_tzoff */\n \n #if defined (VMS)\n \n-/* Other targets except Lynx, VMS and Windows provide a standard locatime_r */\n+/* Other targets except Lynx, VMS and Windows provide a standard localtime_r */\n \n #else\n "}, {"sha": "381c9b0406ad72dbd893518d89292a89223204b3", "filename": "gcc/ada/tb-alvxw.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Ftb-alvxw.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Ftb-alvxw.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftb-alvxw.c?ref=308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "patch": "@@ -564,7 +564,7 @@ heuristic_proc_desc (CORE_ADDR start_pc,\n \t     So we recognize only a few registers (t7, t9, ra) within\n \t     the procedure prologue as valid return address registers.\n \t     If we encounter a return instruction, we extract the\n-\t     the return address register from it.\n+\t     return address register from it.\n \n \t     FIXME: Rewriting GDB to access the procedure descriptors,\n \t     e.g. via the minimal symbol table, might obviate this hack.  */"}, {"sha": "56ea8a877d9d7c78aa3f1d2e583ac70eeae128ba", "filename": "gcc/ada/xoscons.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fxoscons.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308e6f3a18de9e221825ef8b3eefa5c94a3ec853/gcc%2Fada%2Fxoscons.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fxoscons.adb?ref=308e6f3a18de9e221825ef8b3eefa5c94a3ec853", "patch": "@@ -64,7 +64,7 @@ procedure XOSCons is\n    --  is not available in older base compilers.\n \n    --  We need to deal with integer values that can be signed or unsigned, so\n-   --  we need to accomodate the maximum range of both cases.\n+   --  we need to accommodate the maximum range of both cases.\n \n    type Int_Value_Type is record\n       Positive  : Boolean;"}]}