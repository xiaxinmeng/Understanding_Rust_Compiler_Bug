{"sha": "d4c32e1d76fcbda6dc861b1867d55d5ca0acce8e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDRjMzJlMWQ3NmZjYmRhNmRjODYxYjE4NjdkNTVkNWNhMGFjY2U4ZQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2008-04-01T10:58:02Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2008-04-01T10:58:02Z"}, "message": "re PR pch/13675 (#including a precompiled header more than once in the same unit fails)\n\n\tPR pch/13675\n\t* files.c (struct _cpp_file): Remove pch field.\n\t(pch_open_file): Don't set file->pch, just file->pchname.\n\t(should_stack_file): After pfile->cb.read_pch call\n\tfree pchname and clear pchname, don't close file->fd.\n\tTest file->pchname instead of file->pch.  Don't close fd after cb.\n\t(_cpp_stack_include): Test file->pchname instead of file->pch.\n\n\t* c-pch.c (c_common_read_pch): On error close (fd) resp. fclose (f).\n\nFrom-SVN: r133790", "tree": {"sha": "8a8f5b38d60fa065b109dbce3b10bb03f01befe1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8a8f5b38d60fa065b109dbce3b10bb03f01befe1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d4c32e1d76fcbda6dc861b1867d55d5ca0acce8e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4c32e1d76fcbda6dc861b1867d55d5ca0acce8e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d4c32e1d76fcbda6dc861b1867d55d5ca0acce8e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4c32e1d76fcbda6dc861b1867d55d5ca0acce8e/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "764a79eda2a2e64329eea92b11a73bdfcdd18276", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/764a79eda2a2e64329eea92b11a73bdfcdd18276", "html_url": "https://github.com/Rust-GCC/gccrs/commit/764a79eda2a2e64329eea92b11a73bdfcdd18276"}], "stats": {"total": 38, "additions": 27, "deletions": 11}, "files": [{"sha": "0ba7058737f078802b74be5367987f572c353fe4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4c32e1d76fcbda6dc861b1867d55d5ca0acce8e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4c32e1d76fcbda6dc861b1867d55d5ca0acce8e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d4c32e1d76fcbda6dc861b1867d55d5ca0acce8e", "patch": "@@ -1,3 +1,8 @@\n+2008-04-01  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR pch/13675\n+\t* c-pch.c (c_common_read_pch): On error close (fd) resp. fclose (f).\n+\n 2008-04-01  Rafael Espindola  <espindola@google.com>\n \n \t* tree-vrp.c (extract_code_and_val_from_cond_with_ops): New."}, {"sha": "0da17f7f24ba80906db72c3841aad70116ded4ca", "filename": "gcc/c-pch.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4c32e1d76fcbda6dc861b1867d55d5ca0acce8e/gcc%2Fc-pch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4c32e1d76fcbda6dc861b1867d55d5ca0acce8e/gcc%2Fc-pch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-pch.c?ref=d4c32e1d76fcbda6dc861b1867d55d5ca0acce8e", "patch": "@@ -373,6 +373,7 @@ c_common_read_pch (cpp_reader *pfile, const char *name,\n   if (f == NULL)\n     {\n       cpp_errno (pfile, CPP_DL_ERROR, \"calling fdopen\");\n+      close (fd);\n       return;\n     }\n \n@@ -381,6 +382,7 @@ c_common_read_pch (cpp_reader *pfile, const char *name,\n   if (fread (&h, sizeof (h), 1, f) != 1)\n     {\n       cpp_errno (pfile, CPP_DL_ERROR, \"reading\");\n+      fclose (f);\n       return;\n     }\n \n@@ -417,7 +419,10 @@ c_common_read_pch (cpp_reader *pfile, const char *name,\n   gt_pch_restore (f);\n \n   if (cpp_read_state (pfile, name, f, smd) != 0)\n-    return;\n+    {\n+      fclose (f);\n+      return;\n+    }\n \n   fclose (f);\n "}, {"sha": "e8719d931e1b8255ff2cac3963d1504b64628f94", "filename": "libcpp/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4c32e1d76fcbda6dc861b1867d55d5ca0acce8e/libcpp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4c32e1d76fcbda6dc861b1867d55d5ca0acce8e/libcpp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2FChangeLog?ref=d4c32e1d76fcbda6dc861b1867d55d5ca0acce8e", "patch": "@@ -1,3 +1,13 @@\n+2008-04-01  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR pch/13675\n+\t* files.c (struct _cpp_file): Remove pch field.\n+\t(pch_open_file): Don't set file->pch, just file->pchname.\n+\t(should_stack_file): After pfile->cb.read_pch call\n+\tfree pchname and clear pchname, don't close file->fd.\n+\tTest file->pchname instead of file->pch.  Don't close fd after cb.\n+\t(_cpp_stack_include): Test file->pchname instead of file->pch.\n+\n 2008-03-28  Tom Tromey  <tromey@redhat.com>\n \n \t* Makefile.in (POSTCOMPILE): New variable."}, {"sha": "2bc3a801e3562e0d391ac7de6e69770073abd574", "filename": "libcpp/files.c", "status": "modified", "additions": 6, "deletions": 10, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4c32e1d76fcbda6dc861b1867d55d5ca0acce8e/libcpp%2Ffiles.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4c32e1d76fcbda6dc861b1867d55d5ca0acce8e/libcpp%2Ffiles.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Ffiles.c?ref=d4c32e1d76fcbda6dc861b1867d55d5ca0acce8e", "patch": "@@ -1,6 +1,6 @@\n /* Part of CPP library.  File handling.\n    Copyright (C) 1986, 1987, 1989, 1992, 1993, 1994, 1995, 1998,\n-   1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007\n+   1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008\n    Free Software Foundation, Inc.\n    Written by Per Bothner, 1994.\n    Based on CCCP program by Paul Rubin, June 1986\n@@ -106,9 +106,6 @@ struct _cpp_file\n \n   /* If BUFFER above contains the true contents of the file.  */\n   bool buffer_valid;\n-\n-  /* File is a PCH (on return from find_include_file).  */\n-  bool pch;\n };\n \n /* A singly-linked list for all searches for a given file name, with\n@@ -322,9 +319,7 @@ pch_open_file (cpp_reader *pfile, _cpp_file *file, bool *invalid_pch)\n \t    }\n \t  closedir (pchdir);\n \t}\n-      if (valid)\n-\tfile->pch = true;\n-      else\n+      if (!valid)\n \t*invalid_pch = true;\n     }\n \n@@ -703,11 +698,12 @@ should_stack_file (cpp_reader *pfile, _cpp_file *file, bool import)\n     return false;\n \n   /* Handle PCH files immediately; don't stack them.  */\n-  if (file->pch)\n+  if (file->pchname)\n     {\n       pfile->cb.read_pch (pfile, file->pchname, file->fd, file->path);\n-      close (file->fd);\n       file->fd = -1;\n+      free ((void *) file->pchname);\n+      file->pchname = NULL;\n       return false;\n     }\n \n@@ -916,7 +912,7 @@ _cpp_stack_include (cpp_reader *pfile, const char *fname, int angle_brackets,\n      complicates LAST_SOURCE_LINE_LOCATION.  This does not apply if we\n      found a PCH file (in which case linemap_add is not called) or we\n      were included from the command-line.  */\n-  if (! file->pch && file->err_no == 0 && type != IT_CMDLINE)\n+  if (file->pchname == NULL && file->err_no == 0 && type != IT_CMDLINE)\n     pfile->line_table->highest_location--;\n \n   return _cpp_stack_file (pfile, file, type == IT_IMPORT);"}]}