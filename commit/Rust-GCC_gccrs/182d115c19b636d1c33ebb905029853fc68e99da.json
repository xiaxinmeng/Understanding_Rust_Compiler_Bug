{"sha": "182d115c19b636d1c33ebb905029853fc68e99da", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTgyZDExNWMxOWI2MzZkMWMzM2ViYjkwNTAyOTg1M2ZjNjhlOTlkYQ==", "commit": {"author": {"name": "Mikhail Maltsev", "email": "maltsevm@gmail.com", "date": "2015-04-15T00:58:28Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2015-04-15T00:58:28Z"}, "message": "tree.c (replace_placeholders_t): Remove unused type.\n\n\t* tree.c (replace_placeholders_t): Remove unused type.\n\t(replace_placeholders): Remove unused pset.\n\nFrom-SVN: r222110", "tree": {"sha": "d5af54ccd7966e147cd6900d72f12a8d3dcf9b1f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d5af54ccd7966e147cd6900d72f12a8d3dcf9b1f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/182d115c19b636d1c33ebb905029853fc68e99da", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/182d115c19b636d1c33ebb905029853fc68e99da", "html_url": "https://github.com/Rust-GCC/gccrs/commit/182d115c19b636d1c33ebb905029853fc68e99da", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/182d115c19b636d1c33ebb905029853fc68e99da/comments", "author": {"login": "miyuki", "id": 4668268, "node_id": "MDQ6VXNlcjQ2NjgyNjg=", "avatar_url": "https://avatars.githubusercontent.com/u/4668268?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miyuki", "html_url": "https://github.com/miyuki", "followers_url": "https://api.github.com/users/miyuki/followers", "following_url": "https://api.github.com/users/miyuki/following{/other_user}", "gists_url": "https://api.github.com/users/miyuki/gists{/gist_id}", "starred_url": "https://api.github.com/users/miyuki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miyuki/subscriptions", "organizations_url": "https://api.github.com/users/miyuki/orgs", "repos_url": "https://api.github.com/users/miyuki/repos", "events_url": "https://api.github.com/users/miyuki/events{/privacy}", "received_events_url": "https://api.github.com/users/miyuki/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9282d562f7e74ddf9d964cd2026a2b26340e2376", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9282d562f7e74ddf9d964cd2026a2b26340e2376", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9282d562f7e74ddf9d964cd2026a2b26340e2376"}], "stats": {"total": 12, "additions": 5, "deletions": 7}, "files": [{"sha": "d91b6149c8c78e87e9606d34693cc72489eea3ed", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/182d115c19b636d1c33ebb905029853fc68e99da/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/182d115c19b636d1c33ebb905029853fc68e99da/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=182d115c19b636d1c33ebb905029853fc68e99da", "patch": "@@ -1,3 +1,8 @@\n+2015-04-14  Mikhail Maltsev  <maltsevm@gmail.com>\n+\n+\t* tree.c (replace_placeholders_t): Remove unused type.\n+\t(replace_placeholders): Remove unused pset.\n+\n 2015-04-14  Jason Merrill  <jason@redhat.com>\n \n \t* pt.c (lookup_template_class_1): Use coerce_innermost_template_parms."}, {"sha": "9a4779f4a3c40321b8bf6c2b59a42cc103e6813a", "filename": "gcc/cp/tree.c", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/182d115c19b636d1c33ebb905029853fc68e99da/gcc%2Fcp%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/182d115c19b636d1c33ebb905029853fc68e99da/gcc%2Fcp%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftree.c?ref=182d115c19b636d1c33ebb905029853fc68e99da", "patch": "@@ -2473,12 +2473,6 @@ build_ctor_subob_ref (tree index, tree type, tree obj)\n /* Like substitute_placeholder_in_expr, but handle C++ tree codes and\n    build up subexpressions as we go deeper.  */\n \n-struct replace_placeholders_t\n-{\n-  tree obj;\n-  hash_set<tree> *pset;\n-};\n-\n static tree\n replace_placeholders_r (tree* t, int* walk_subtrees, void* data_)\n {\n@@ -2539,7 +2533,6 @@ replace_placeholders_r (tree* t, int* walk_subtrees, void* data_)\n tree\n replace_placeholders (tree exp, tree obj)\n {\n-  hash_set<tree> pset;\n   tree *tp = &exp;\n   if (TREE_CODE (exp) == TARGET_EXPR)\n     tp = &TARGET_EXPR_INITIAL (exp);"}]}