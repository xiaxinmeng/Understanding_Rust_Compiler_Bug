{"sha": "2ecb85c86b62f9daa50b8fd19096ed9f80ede9e4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmVjYjg1Yzg2YjYyZjlkYWE1MGI4ZmQxOTA5NmVkOWY4MGVkZTllNA==", "commit": {"author": {"name": "Kai Tietz", "email": "ktietz@gcc.gnu.org", "date": "2011-12-16T18:43:06Z"}, "committer": {"name": "Kai Tietz", "email": "ktietz@gcc.gnu.org", "date": "2011-12-16T18:43:06Z"}, "message": "re PR target/51135 (SIGSEGV during exception cleanup on win32)\n\n        PR libstdc++/51135\n        * libsupc++/unwind-cxx.h (__cxa_exception): Mark\n        exceptionDestructor by _GLIBCXX_CDTOR_CALLABI.\n        * libsupc++/eh_throw.cc (__cxa_throw): Mark destructor\n        function argument by _GLIBCXX_CDTOR_CALLABI.\n        * libsupc++/cxxabi.h (__cxa_throw): Likewise.\n        (_GLIBCXX_CDTOR_CALLABI): Add empty default\n        definition.\n        * config/os/mingw32-w64/os_defines.h (_GLIBCXX_CDTOR_CALLABI): Define\n        for IA-32 target as __thiscall.\n        * config/os/mingw32/os_defines.h (_GLIBCXX_CDTOR_CALLABI): Likewise.\n\nFrom-SVN: r182410", "tree": {"sha": "235420959ce49d4349d33b9c1a7eb34ef39e0a60", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/235420959ce49d4349d33b9c1a7eb34ef39e0a60"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2ecb85c86b62f9daa50b8fd19096ed9f80ede9e4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ecb85c86b62f9daa50b8fd19096ed9f80ede9e4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2ecb85c86b62f9daa50b8fd19096ed9f80ede9e4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ecb85c86b62f9daa50b8fd19096ed9f80ede9e4/comments", "author": null, "committer": null, "parents": [{"sha": "134f529521772583a1249809157d14f298a1440d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/134f529521772583a1249809157d14f298a1440d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/134f529521772583a1249809157d14f298a1440d"}], "stats": {"total": 24, "additions": 21, "deletions": 3}, "files": [{"sha": "f82e25c76a7301cc2fbc3f9eb4c03be13d3de515", "filename": "libstdc++-v3/config/os/mingw32-w64/os_defines.h", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ecb85c86b62f9daa50b8fd19096ed9f80ede9e4/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fmingw32-w64%2Fos_defines.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ecb85c86b62f9daa50b8fd19096ed9f80ede9e4/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fmingw32-w64%2Fos_defines.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fmingw32-w64%2Fos_defines.h?ref=2ecb85c86b62f9daa50b8fd19096ed9f80ede9e4", "patch": "@@ -65,4 +65,11 @@\n // ioctlsocket function doesn't work for normal file-descriptors.\n #define _GLIBCXX_NO_IOCTL 1\n \n+// See libstdc++/51135\n+// Class constructors/destructors have __thiscall calling-convention on\n+// IA 32-bit\n+#if defined (__i386__)\n+#define _GLIBCXX_CDTOR_CALLABI __thiscall\n+#endif\n+\n #endif"}, {"sha": "f82e25c76a7301cc2fbc3f9eb4c03be13d3de515", "filename": "libstdc++-v3/config/os/mingw32/os_defines.h", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ecb85c86b62f9daa50b8fd19096ed9f80ede9e4/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fmingw32%2Fos_defines.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ecb85c86b62f9daa50b8fd19096ed9f80ede9e4/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fmingw32%2Fos_defines.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fmingw32%2Fos_defines.h?ref=2ecb85c86b62f9daa50b8fd19096ed9f80ede9e4", "patch": "@@ -65,4 +65,11 @@\n // ioctlsocket function doesn't work for normal file-descriptors.\n #define _GLIBCXX_NO_IOCTL 1\n \n+// See libstdc++/51135\n+// Class constructors/destructors have __thiscall calling-convention on\n+// IA 32-bit\n+#if defined (__i386__)\n+#define _GLIBCXX_CDTOR_CALLABI __thiscall\n+#endif\n+\n #endif"}, {"sha": "b924fc1707959ddd3eeb02fe1da5bd9f7a595a7d", "filename": "libstdc++-v3/libsupc++/cxxabi.h", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ecb85c86b62f9daa50b8fd19096ed9f80ede9e4/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fcxxabi.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ecb85c86b62f9daa50b8fd19096ed9f80ede9e4/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fcxxabi.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fcxxabi.h?ref=2ecb85c86b62f9daa50b8fd19096ed9f80ede9e4", "patch": "@@ -51,6 +51,10 @@\n #include <bits/cxxabi_tweaks.h>\n #include <bits/cxxabi_forced.h>\n \n+#ifndef _GLIBCXX_CDTOR_CALLABI\n+#define _GLIBCXX_CDTOR_CALLABI\n+#endif\n+\n #ifdef __cplusplus\n namespace __cxxabiv1\n {\n@@ -596,7 +600,7 @@ namespace __cxxabiv1\n \n   // Throw the exception.\n   void\n-  __cxa_throw(void*, std::type_info*, void (*) (void *))\n+  __cxa_throw(void*, std::type_info*, void (_GLIBCXX_CDTOR_CALLABI *) (void *))\n   __attribute__((__noreturn__));\n \n   // Used to implement exception handlers."}, {"sha": "a3d2b0d24b2f8340342fe84a10617011196d2e97", "filename": "libstdc++-v3/libsupc++/eh_throw.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ecb85c86b62f9daa50b8fd19096ed9f80ede9e4/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Feh_throw.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ecb85c86b62f9daa50b8fd19096ed9f80ede9e4/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Feh_throw.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Feh_throw.cc?ref=2ecb85c86b62f9daa50b8fd19096ed9f80ede9e4", "patch": "@@ -59,7 +59,7 @@ __gxx_exception_cleanup (_Unwind_Reason_Code code, _Unwind_Exception *exc)\n \n extern \"C\" void\n __cxxabiv1::__cxa_throw (void *obj, std::type_info *tinfo,\n-\t\t\t void (*dest) (void *))\n+\t\t\t void (_GLIBCXX_CDTOR_CALLABI *dest) (void *))\n {\n   // Definitely a primary.\n   __cxa_refcounted_exception *header"}, {"sha": "b0cdeae1150dd043089dda9b7bf4534557dc77ba", "filename": "libstdc++-v3/libsupc++/unwind-cxx.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ecb85c86b62f9daa50b8fd19096ed9f80ede9e4/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Funwind-cxx.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ecb85c86b62f9daa50b8fd19096ed9f80ede9e4/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Funwind-cxx.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Funwind-cxx.h?ref=2ecb85c86b62f9daa50b8fd19096ed9f80ede9e4", "patch": "@@ -51,7 +51,7 @@ struct __cxa_exception\n {\n   // Manage the exception object itself.\n   std::type_info *exceptionType;\n-  void (*exceptionDestructor)(void *);\n+  void (_GLIBCXX_CDTOR_CALLABI *exceptionDestructor)(void *);\n \n   // The C++ standard has entertaining rules wrt calling set_terminate\n   // and set_unexpected in the middle of the exception cleanup process."}]}