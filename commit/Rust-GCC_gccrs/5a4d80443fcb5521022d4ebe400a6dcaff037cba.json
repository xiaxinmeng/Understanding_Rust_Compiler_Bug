{"sha": "5a4d80443fcb5521022d4ebe400a6dcaff037cba", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWE0ZDgwNDQzZmNiNTUyMTAyMmQ0ZWJlNDAwYTZkY2FmZjAzN2NiYQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2009-08-06T16:25:19Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2009-08-06T16:25:19Z"}, "message": "re PR c++/40948 (ICE in lower_stmt, at gimple-low.c:408)\n\n\tPR c++/40948\n\t* init.c (build_vec_init): Evaluate the initializer before\n\tstarting the initialization try block.\n\nFrom-SVN: r150529", "tree": {"sha": "145a67ca32f7630b9856f54b551b05a96ef421c1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/145a67ca32f7630b9856f54b551b05a96ef421c1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5a4d80443fcb5521022d4ebe400a6dcaff037cba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a4d80443fcb5521022d4ebe400a6dcaff037cba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5a4d80443fcb5521022d4ebe400a6dcaff037cba", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a4d80443fcb5521022d4ebe400a6dcaff037cba/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a9717079fc197509ef5856eca087808d9dce96d0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a9717079fc197509ef5856eca087808d9dce96d0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a9717079fc197509ef5856eca087808d9dce96d0"}], "stats": {"total": 46, "additions": 36, "deletions": 10}, "files": [{"sha": "a7cc6b15d80d9c60e9f8c22bd11fb6b3b073bbc1", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a4d80443fcb5521022d4ebe400a6dcaff037cba/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a4d80443fcb5521022d4ebe400a6dcaff037cba/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=5a4d80443fcb5521022d4ebe400a6dcaff037cba", "patch": "@@ -1,3 +1,9 @@\n+2009-08-05  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/40948\n+\t* init.c (build_vec_init): Evaluate the initializer before\n+\tstarting the initialization try block.\n+\n 2009-08-05  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n \n \tPR c++/36069"}, {"sha": "ef18a6c104158c52a9fb8f80d763049234f7271c", "filename": "gcc/cp/init.c", "status": "modified", "additions": 14, "deletions": 10, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a4d80443fcb5521022d4ebe400a6dcaff037cba/gcc%2Fcp%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a4d80443fcb5521022d4ebe400a6dcaff037cba/gcc%2Fcp%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Finit.c?ref=5a4d80443fcb5521022d4ebe400a6dcaff037cba", "patch": "@@ -2698,7 +2698,8 @@ build_vec_init (tree base, tree maxindex, tree init,\n \n   /* Look through the TARGET_EXPR around a compound literal.  */\n   if (init && TREE_CODE (init) == TARGET_EXPR\n-      && TREE_CODE (TARGET_EXPR_INITIAL (init)) == CONSTRUCTOR)\n+      && TREE_CODE (TARGET_EXPR_INITIAL (init)) == CONSTRUCTOR\n+      && from_array != 2)\n     init = TARGET_EXPR_INITIAL (init);\n \n   if (init\n@@ -2769,6 +2770,17 @@ build_vec_init (tree base, tree maxindex, tree init,\n   base = get_temp_regvar (ptype, rval);\n   iterator = get_temp_regvar (ptrdiff_type_node, maxindex);\n \n+  /* If initializing one array from another, initialize element by\n+     element.  We rely upon the below calls to do the argument\n+     checking.  Evaluate the initializer before entering the try block.  */\n+  if (from_array && init && TREE_CODE (init) != CONSTRUCTOR)\n+    {\n+      base2 = decay_conversion (init);\n+      itype = TREE_TYPE (base2);\n+      base2 = get_temp_regvar (itype, base2);\n+      itype = TREE_TYPE (itype);\n+    }\n+\n   /* Protect the entire array initialization so that we can destroy\n      the partially constructed array if an exception is thrown.\n      But don't do this if we're assigning.  */\n@@ -2811,16 +2823,8 @@ build_vec_init (tree base, tree maxindex, tree init,\n     }\n   else if (from_array)\n     {\n-      /* If initializing one array from another, initialize element by\n-\t element.  We rely upon the below calls the do argument\n-\t checking.  */\n       if (init)\n-\t{\n-\t  base2 = decay_conversion (init);\n-\t  itype = TREE_TYPE (base2);\n-\t  base2 = get_temp_regvar (itype, base2);\n-\t  itype = TREE_TYPE (itype);\n-\t}\n+\t/* OK, we set base2 above.  */;\n       else if (TYPE_LANG_SPECIFIC (type)\n \t       && TYPE_NEEDS_CONSTRUCTING (type)\n \t       && ! TYPE_HAS_DEFAULT_CONSTRUCTOR (type))"}, {"sha": "b17d3484fdd458402a9af1f02f16b50c749280b6", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a4d80443fcb5521022d4ebe400a6dcaff037cba/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a4d80443fcb5521022d4ebe400a6dcaff037cba/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5a4d80443fcb5521022d4ebe400a6dcaff037cba", "patch": "@@ -1,3 +1,8 @@\n+2009-08-05  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/40948\n+\t* g++.dg/ext/complit12.C: Expand.\n+\n 2009-08-05  Richard Earnshaw  <rearnsha@arm.com>\n \n \tMerge ARM/hard_vfp_branch to trunk."}, {"sha": "29c9af1864f36fb05241123158a1a561dd45274b", "filename": "gcc/testsuite/g++.dg/ext/complit12.C", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a4d80443fcb5521022d4ebe400a6dcaff037cba/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fcomplit12.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a4d80443fcb5521022d4ebe400a6dcaff037cba/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fcomplit12.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fcomplit12.C?ref=5a4d80443fcb5521022d4ebe400a6dcaff037cba", "patch": "@@ -30,6 +30,11 @@ T::T () : m ((M[4]) { M (), M (), M (), M () })\n {\n }\n \n+typedef M MA[1];\n+MA &bar (MA, MA& r) { return r; }\n+\n+M f(M m) { return m; }\n+\n int main ()\n {\n   {\n@@ -48,6 +53,12 @@ int main ()\n     T t;\n     if (c != 11)\n       return 5;\n+    MA ma = bar ((M[2]) { M(), M() }, m);\n+    if (c != 12)\n+      return 7;\n+    M mm[2] = ((M[2]) { f(M()), f(M()) });\n+    if (c != 14)\n+      return 8;\n   }\n   if (c != 0)\n     return 6;"}]}