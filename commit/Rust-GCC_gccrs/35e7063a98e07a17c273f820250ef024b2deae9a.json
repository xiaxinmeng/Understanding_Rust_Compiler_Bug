{"sha": "35e7063a98e07a17c273f820250ef024b2deae9a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzVlNzA2M2E5OGUwN2ExN2MyNzNmODIwMjUwZWYwMjRiMmRlYWU5YQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-11-20T11:45:28Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-11-20T11:45:28Z"}, "message": "[multiple changes]\n\n2014-11-20  Thomas Quinot  <quinot@adacore.com>\n\n\t* freeze.adb, sem_ch13.adb: Minor editing.\n\n2014-11-20  Vincent Celier  <celier@adacore.com>\n\n\t* gnatcmd.adb: Remove any special processing for the ASIS tools\n\t(gnatpp, gnatmetric, gnatcheck, gnatelim and gnatstup) and simply\n\tinvoke the tool with the provided switches and arguments.\n\n2014-11-20  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch6.adb (Analyze_Expression_Function): Reject declaration\n\tof expression function with identical profile as previous\n\texpression function.\n\nFrom-SVN: r217846", "tree": {"sha": "d9922669737d1d3b3d47b510d9cb9120e211056b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d9922669737d1d3b3d47b510d9cb9120e211056b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/35e7063a98e07a17c273f820250ef024b2deae9a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35e7063a98e07a17c273f820250ef024b2deae9a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/35e7063a98e07a17c273f820250ef024b2deae9a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35e7063a98e07a17c273f820250ef024b2deae9a/comments", "author": null, "committer": null, "parents": [{"sha": "8b64ed4caa9831dd98e2f8de09624a0cf1f878f7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b64ed4caa9831dd98e2f8de09624a0cf1f878f7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8b64ed4caa9831dd98e2f8de09624a0cf1f878f7"}], "stats": {"total": 699, "additions": 60, "deletions": 639}, "files": [{"sha": "c01298c750edf98d5c417eb343aa11959731a5fb", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35e7063a98e07a17c273f820250ef024b2deae9a/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35e7063a98e07a17c273f820250ef024b2deae9a/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=35e7063a98e07a17c273f820250ef024b2deae9a", "patch": "@@ -1,3 +1,19 @@\n+2014-11-20  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* freeze.adb, sem_ch13.adb: Minor editing.\n+\n+2014-11-20  Vincent Celier  <celier@adacore.com>\n+\n+\t* gnatcmd.adb: Remove any special processing for the ASIS tools\n+\t(gnatpp, gnatmetric, gnatcheck, gnatelim and gnatstup) and simply\n+\tinvoke the tool with the provided switches and arguments.\n+\n+2014-11-20  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch6.adb (Analyze_Expression_Function): Reject declaration\n+\tof expression function with identical profile as previous\n+\texpression function.\n+\n 2014-11-20  Thomas Quinot  <quinot@adacore.com>\n \n \t* sem_ch13.adb: Complete previous change."}, {"sha": "8c8f019acfb0b6e979fd24a309c0e22694d65e03", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35e7063a98e07a17c273f820250ef024b2deae9a/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35e7063a98e07a17c273f820250ef024b2deae9a/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=35e7063a98e07a17c273f820250ef024b2deae9a", "patch": "@@ -7705,8 +7705,8 @@ package body Freeze is\n                              and then not (Is_Tagged_Type (T)\n                                             and then Is_Derived_Type (T))))\n       then\n-         if ((Bytes_Big_Endian and then SSO_Set_Low_By_Default (T))\n-               or else\n+         if ((Bytes_Big_Endian       and then SSO_Set_Low_By_Default  (T))\n+                or else\n             ((not Bytes_Big_Endian) and then SSO_Set_High_By_Default (T)))\n \n            --  For a record type, if native bit order is specified explicitly,"}, {"sha": "3306aa644648d88e8b21adbc18c61b22ca2b4f7e", "filename": "gcc/ada/gnatcmd.adb", "status": "modified", "additions": 27, "deletions": 635, "changes": 662, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35e7063a98e07a17c273f820250ef024b2deae9a/gcc%2Fada%2Fgnatcmd.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35e7063a98e07a17c273f820250ef024b2deae9a/gcc%2Fada%2Fgnatcmd.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatcmd.adb?ref=35e7063a98e07a17c273f820250ef024b2deae9a", "patch": "@@ -123,9 +123,6 @@ procedure GNATCmd is\n    --  The name of the temporary text file to put a list of source/object\n    --  files to pass to a tool.\n \n-   ASIS_Main : String_Access := null;\n-   --  Main for commands Check, Metric and Pretty, when -U is used\n-\n    package First_Switches is new Table.Table\n      (Table_Component_Type => String_Access,\n       Table_Index_Type     => Integer,\n@@ -177,33 +174,20 @@ procedure GNATCmd is\n \n    Naming_String      : constant SA := new String'(\"naming\");\n    Binder_String      : constant SA := new String'(\"binder\");\n-   Builder_String     : constant SA := new String'(\"builder\");\n    Compiler_String    : constant SA := new String'(\"compiler\");\n-   Check_String       : constant SA := new String'(\"check\");\n    Synchronize_String : constant SA := new String'(\"synchronize\");\n-   Eliminate_String   : constant SA := new String'(\"eliminate\");\n    Finder_String      : constant SA := new String'(\"finder\");\n    Linker_String      : constant SA := new String'(\"linker\");\n    Gnatls_String      : constant SA := new String'(\"gnatls\");\n-   Pretty_String      : constant SA := new String'(\"pretty_printer\");\n    Stack_String       : constant SA := new String'(\"stack\");\n-   Gnatstub_String    : constant SA := new String'(\"gnatstub\");\n-   Metric_String      : constant SA := new String'(\"metrics\");\n    Xref_String        : constant SA := new String'(\"cross_reference\");\n \n    Packages_To_Check_By_Binder   : constant String_List_Access :=\n      new String_List'((Naming_String, Binder_String));\n \n-   Packages_To_Check_By_Check : constant String_List_Access :=\n-     new String_List'\n-          ((Naming_String, Builder_String, Check_String, Compiler_String));\n-\n    Packages_To_Check_By_Sync : constant String_List_Access :=\n      new String_List'((Naming_String, Synchronize_String, Compiler_String));\n \n-   Packages_To_Check_By_Eliminate : constant String_List_Access :=\n-     new String_List'((Naming_String, Eliminate_String, Compiler_String));\n-\n    Packages_To_Check_By_Finder    : constant String_List_Access :=\n      new String_List'((Naming_String, Finder_String));\n \n@@ -213,18 +197,9 @@ procedure GNATCmd is\n    Packages_To_Check_By_Gnatls    : constant String_List_Access :=\n      new String_List'((Naming_String, Gnatls_String));\n \n-   Packages_To_Check_By_Pretty    : constant String_List_Access :=\n-     new String_List'((Naming_String, Pretty_String, Compiler_String));\n-\n    Packages_To_Check_By_Stack     : constant String_List_Access :=\n      new String_List'((Naming_String, Stack_String));\n \n-   Packages_To_Check_By_Gnatstub  : constant String_List_Access :=\n-     new String_List'((Naming_String, Gnatstub_String, Compiler_String));\n-\n-   Packages_To_Check_By_Metric  : constant String_List_Access :=\n-     new String_List'((Naming_String, Metric_String, Compiler_String));\n-\n    Packages_To_Check_By_Xref      : constant String_List_Access :=\n      new String_List'((Naming_String, Xref_String));\n \n@@ -374,10 +349,6 @@ procedure GNATCmd is\n    --  Add a switch to the Carg_Switches table. If it is the first one, put the\n    --  switch \"-cargs\" at the beginning of the table.\n \n-   procedure Add_To_Rules_Switches (Switch : String_Access);\n-   --  Add a switch to the Rules_Switches table. If it is the first one, put\n-   --  the switch \"-crules\" at the beginning of the table.\n-\n    procedure Check_Files;\n    --  For GNAT LIST, GNAT PRETTY, GNAT METRIC, and GNAT STACK, check if a\n    --  project file is specified, without any file arguments and without a\n@@ -414,10 +385,6 @@ procedure GNATCmd is\n    --  includes directory information, prepend the path with Parent. This\n    --  subprogram is only called when using project files.\n \n-   procedure Get_Closure;\n-   --  Get the sources in the closure of the ASIS_Main and add them to the\n-   --  list of arguments.\n-\n    function Mapping_File return Path_Name_Type;\n    --  Create and return the path name of a mapping file. Used for gnatstub\n    --  (GNAT STUB), gnatpp (GNAT PRETTY), gnatelim (GNAT ELIM), and gnatmetric\n@@ -460,23 +427,6 @@ procedure GNATCmd is\n       Carg_Switches.Table (Carg_Switches.Last) := Switch;\n    end Add_To_Carg_Switches;\n \n-   ---------------------------\n-   -- Add_To_Rules_Switches --\n-   ---------------------------\n-\n-   procedure Add_To_Rules_Switches (Switch : String_Access) is\n-   begin\n-      --  If the Rules_Switches table is empty, put \"-rules\" at the beginning\n-\n-      if Rules_Switches.Last = 0 then\n-         Rules_Switches.Increment_Last;\n-         Rules_Switches.Table (Rules_Switches.Last) := new String'(\"-rules\");\n-      end if;\n-\n-      Rules_Switches.Increment_Last;\n-      Rules_Switches.Table (Rules_Switches.Last) := Switch;\n-   end Add_To_Rules_Switches;\n-\n    -----------------\n    -- Check_Files --\n    -----------------\n@@ -538,36 +488,13 @@ procedure GNATCmd is\n       --  there is a -files= switch.\n \n       for Index in 1 .. Last_Switches.Last loop\n-         if Last_Switches.Table (Index).all'Length > 7\n-           and then Last_Switches.Table (Index) (1 .. 7) = \"-files=\"\n+         if Last_Switches.Table (Index) (1) /= '-'\n+           or else\n+           (Last_Switches.Table (Index).all'Length > 7\n+            and then Last_Switches.Table (Index) (1 .. 7) = \"-files=\")\n          then\n             Add_Sources := False;\n             exit;\n-\n-         elsif Last_Switches.Table (Index) (1) /= '-' then\n-            if Index = 1\n-              or else\n-                (The_Command = Check\n-                   and then Last_Switches.Table (Index - 1).all /= \"-o\")\n-              or else\n-                (The_Command = Pretty\n-                   and then Last_Switches.Table (Index - 1).all /= \"-o\"\n-                   and then Last_Switches.Table (Index - 1).all /= \"-of\")\n-              or else\n-                (The_Command = Metric\n-                   and then\n-                     Last_Switches.Table (Index - 1).all /= \"-o\"  and then\n-                     Last_Switches.Table (Index - 1).all /= \"-og\" and then\n-                     Last_Switches.Table (Index - 1).all /= \"-ox\" and then\n-                     Last_Switches.Table (Index - 1).all /= \"-d\")\n-              or else\n-                (The_Command /= Check  and then\n-                 The_Command /= Pretty and then\n-                 The_Command /= Metric)\n-            then\n-               Add_Sources := False;\n-               exit;\n-            end if;\n          end if;\n       end loop;\n \n@@ -580,10 +507,7 @@ procedure GNATCmd is\n          --  put the list of sources in it. For gnatstack create a temporary\n          --  file with the list of .ci files.\n \n-         if The_Command = Check  or else\n-            The_Command = Pretty or else\n-            The_Command = Metric or else\n-            The_Command = List   or else\n+         if The_Command = List   or else\n             The_Command = Stack\n          then\n             Tempdir.Create_Temp_File (FD, Temp_File_Name);\n@@ -805,26 +729,6 @@ procedure GNATCmd is\n                               \"ci\"));\n                      end if;\n                   end if;\n-\n-               else\n-                  --  For gnatcheck, gnatsync, gnatpp and gnatmetric, put all\n-                  --  sources of the project, or of all projects if -U was\n-                  --  specified.\n-\n-                  for Kind in Spec_Or_Body loop\n-                     if Unit.File_Names (Kind) /= null\n-                       and then Check_Project\n-                                  (Unit.File_Names (Kind).Project, Project)\n-                       and then not Unit.File_Names (Kind).Locally_Removed\n-                     then\n-                        Add_To_Response_File\n-                          (\"\"\"\"                                         &\n-                           Get_Name_String\n-                             (Unit.File_Names (Kind).Path.Display_Name) &\n-                           \"\"\"\",\n-                           Check_File => False);\n-                     end if;\n-                  end loop;\n                end if;\n \n                Unit := Units_Htable.Get_Next (Project_Tree.Units_HT);\n@@ -849,24 +753,12 @@ procedure GNATCmd is\n      (Project      : Project_Id;\n       Root_Project : Project_Id) return Boolean\n    is\n-      Proj : Project_Id;\n-\n    begin\n       if Project = No_Project then\n          return False;\n \n       elsif All_Projects or else Project = Root_Project then\n          return True;\n-\n-      elsif The_Command = Metric then\n-         Proj := Root_Project;\n-         while Proj.Extends /= No_Project loop\n-            if Project = Proj.Extends then\n-               return True;\n-            end if;\n-\n-            Proj := Proj.Extends;\n-         end loop;\n       end if;\n \n       return False;\n@@ -964,175 +856,6 @@ procedure GNATCmd is\n          Including_RTS        => True);\n    end Ensure_Absolute_Path;\n \n-   -----------------\n-   -- Get_Closure --\n-   -----------------\n-\n-   procedure Get_Closure is\n-      Args : constant Argument_List :=\n-               (1 => new String'(\"-q\"),\n-                2 => new String'(\"-b\"),\n-                3 => new String'(\"-P\"),\n-                4 => Project_File,\n-                5 => ASIS_Main,\n-                6 => new String'(\"-bargs\"),\n-                7 => new String'(\"-R\"),\n-                8 => new String'(\"-Z\"));\n-      --  Arguments for the invocation of gnatmake which are added to the\n-      --  Last_Arguments list by this procedure.\n-\n-      FD : File_Descriptor;\n-      --  File descriptor for the temp file that will get the output of the\n-      --  invocation of gnatmake.\n-\n-      Name : Path_Name_Type;\n-      --  Path of the file FD\n-\n-      GN_Name : constant String := Program_Name (\"gnatmake\", \"gnat\").all;\n-      --  Name for gnatmake\n-\n-      GN_Path : constant String_Access := Locate_Exec_On_Path (GN_Name);\n-      --  Path of gnatmake\n-\n-      Return_Code : Integer;\n-\n-      Unused : Boolean;\n-      pragma Warnings (Off, Unused);\n-\n-      File : Ada.Text_IO.File_Type;\n-      Line : String (1 .. 250);\n-      Last : Natural;\n-      --  Used to read file if there is an error, it is good enough to display\n-      --  just 250 characters if the first line of the file is very long.\n-\n-      Unit  : Unit_Index;\n-      Path  : Path_Name_Type;\n-\n-      Files_File     : Ada.Text_IO.File_Type;\n-      Temp_File_Name : Path_Name_Type;\n-\n-   begin\n-      if GN_Path = null then\n-         Put_Line (Standard_Error, \"could not locate \" & GN_Name);\n-         raise Error_Exit;\n-      end if;\n-\n-      --  Create the temp file\n-\n-      Prj.Env.Create_Temp_File (Project_Tree.Shared, FD, Name, \"files\");\n-\n-      --  And close it\n-\n-      Close (FD);\n-\n-      --  Spawn \"gnatmake -q -b -P <project> <main> -bargs -R -Z\"\n-\n-      Spawn\n-        (Program_Name => GN_Path.all,\n-         Args         => Args,\n-         Output_File  => Get_Name_String (Name),\n-         Success      => Unused,\n-         Return_Code  => Return_Code,\n-         Err_To_Out   => True);\n-\n-      --  Read the output of the invocation of gnatmake\n-\n-      Open (File, In_File, Get_Name_String (Name));\n-\n-      --  If it was unsuccessful, display the first line in the file and exit\n-      --  with error.\n-\n-      if Return_Code /= 0 then\n-         Get_Line (File, Line, Last);\n-\n-         begin\n-            if not Keep_Temporary_Files then\n-               Delete (File);\n-            else\n-               Close (File);\n-            end if;\n-\n-         --  Don't crash if it is not possible to delete or close the file,\n-         --  just ignore the situation.\n-\n-         exception\n-            when others =>\n-               null;\n-         end;\n-\n-         Put_Line (Standard_Error, Line (1 .. Last));\n-         Put_Line\n-           (Standard_Error, \"could not get closure of \" & ASIS_Main.all);\n-         raise Error_Exit;\n-\n-      else\n-         --  Create a temporary file to put the list of files in the closure\n-\n-         Tempdir.Create_Temp_File (FD, Temp_File_Name);\n-         Last_Switches.Increment_Last;\n-         Last_Switches.Table (Last_Switches.Last) :=\n-           new String'(\"-files=\" & Get_Name_String (Temp_File_Name));\n-\n-         Close (FD);\n-\n-         Open (Files_File, Out_File, Get_Name_String (Temp_File_Name));\n-\n-         --  Get each file name in the file, find its path and add it the list\n-         --  of arguments.\n-\n-         while not End_Of_File (File) loop\n-            Get_Line (File, Line, Last);\n-            Path := No_Path;\n-\n-            Unit := Units_Htable.Get_First (Project_Tree.Units_HT);\n-            while Unit /= No_Unit_Index loop\n-               if Unit.File_Names (Spec) /= null\n-                 and then\n-                   Get_Name_String (Unit.File_Names (Spec).File) =\n-                      Line (1 .. Last)\n-               then\n-                  Path := Unit.File_Names (Spec).Path.Name;\n-                  exit;\n-\n-               elsif Unit.File_Names (Impl) /= null\n-                 and then\n-                   Get_Name_String (Unit.File_Names (Impl).File) =\n-                     Line (1 .. Last)\n-               then\n-                  Path := Unit.File_Names (Impl).Path.Name;\n-                  exit;\n-               end if;\n-\n-               Unit := Units_Htable.Get_Next (Project_Tree.Units_HT);\n-            end loop;\n-\n-            if Path /= No_Path then\n-               Put_Line (Files_File, Get_Name_String (Path));\n-\n-            else\n-               Put_Line (Files_File, Line (1 .. Last));\n-            end if;\n-         end loop;\n-\n-         Close (Files_File);\n-\n-         begin\n-            if not Keep_Temporary_Files then\n-               Delete (File);\n-            else\n-               Close (File);\n-            end if;\n-\n-         --  Don't crash if it is not possible to delete or close the file,\n-         --  just ignore the situation.\n-\n-         exception\n-            when others =>\n-               null;\n-         end;\n-      end if;\n-   end Get_Closure;\n-\n    ------------------\n    -- Mapping_File --\n    ------------------\n@@ -1216,7 +939,8 @@ procedure GNATCmd is\n \n       New_Line;\n       Put_Line (\"All commands except chop, krunch and preprocess \" &\n-                \"accept project file switches -vPx, -Pprj and -Xnam=val\");\n+                  \"accept project file switches -vPx, -Pprj, -Xnam=val,\" &\n+                \"--subdirs= and -eL\");\n       New_Line;\n    end Usage;\n \n@@ -1792,12 +1516,6 @@ begin\n          when Bind =>\n             Tool_Package_Name := Name_Binder;\n             Packages_To_Check := Packages_To_Check_By_Binder;\n-         when Check =>\n-            Tool_Package_Name := Name_Check;\n-            Packages_To_Check := Packages_To_Check_By_Check;\n-         when Elim =>\n-            Tool_Package_Name := Name_Eliminate;\n-            Packages_To_Check := Packages_To_Check_By_Eliminate;\n          when Find =>\n             Tool_Package_Name := Name_Finder;\n             Packages_To_Check := Packages_To_Check_By_Finder;\n@@ -1807,18 +1525,9 @@ begin\n          when List =>\n             Tool_Package_Name := Name_Gnatls;\n             Packages_To_Check := Packages_To_Check_By_Gnatls;\n-         when Metric =>\n-            Tool_Package_Name := Name_Metrics;\n-            Packages_To_Check := Packages_To_Check_By_Metric;\n-         when Pretty =>\n-            Tool_Package_Name := Name_Pretty_Printer;\n-            Packages_To_Check := Packages_To_Check_By_Pretty;\n          when Stack =>\n             Tool_Package_Name := Name_Stack;\n             Packages_To_Check := Packages_To_Check_By_Stack;\n-         when Stub =>\n-            Tool_Package_Name := Name_Gnatstub;\n-            Packages_To_Check := Packages_To_Check_By_Gnatstub;\n          when Sync =>\n             Tool_Package_Name := Name_Synchronize;\n             Packages_To_Check := Packages_To_Check_By_Sync;\n@@ -2013,10 +1722,7 @@ begin\n                      Remove_Switch (Arg_Num);\n \n                   elsif\n-                    (The_Command = Check  or else\n-                     The_Command = Sync   or else\n-                     The_Command = Pretty or else\n-                     The_Command = Metric or else\n+                    (The_Command = Sync   or else\n                      The_Command = Stack  or else\n                      The_Command = List)\n                     and then Argv'Length = 2\n@@ -2029,20 +1735,6 @@ begin\n                      Arg_Num := Arg_Num + 1;\n                   end if;\n \n-               elsif ((The_Command = Check and then Argv (Argv'First) /= '+')\n-                        or else The_Command = Sync\n-                        or else The_Command = Metric\n-                        or else The_Command = Pretty)\n-                 and then Project_File /= null\n-                 and then All_Projects\n-               then\n-                  if ASIS_Main /= null then\n-                     Fail (\"cannot specify more than one main after -U\");\n-                  else\n-                     ASIS_Main := Argv;\n-                     Remove_Switch (Arg_Num);\n-                  end if;\n-\n                else\n                   Arg_Num := Arg_Num + 1;\n                end if;\n@@ -2121,10 +1813,8 @@ begin\n \n                --  Packages Binder (for gnatbind), Cross_Reference (for\n                --  gnatxref), Linker (for gnatlink), Finder (for gnatfind),\n-               --  Pretty_Printer (for gnatpp), Eliminate (for gnatelim), Check\n-               --  (for gnatcheck), and Metric (for gnatmetric) have an\n-               --  attributed Switches, an associative array, indexed by the\n-               --  name of the file.\n+               --  have an attributed Switches, an associative array, indexed\n+               --  by the name of the file.\n \n                --  They also have an attribute Default_Switches, indexed by the\n                --  name of the programming language.\n@@ -2229,10 +1919,7 @@ begin\n             end if;\n          end;\n \n-         if The_Command = Bind or else\n-            The_Command = Link or else\n-            The_Command = Elim\n-         then\n+         if The_Command = Bind or else The_Command = Link then\n             if Project.Object_Directory.Name = No_Path then\n                Fail (\"project \" & Get_Name_String (Project.Display_Name)\n                      & \" has no object directory\");\n@@ -2249,13 +1936,7 @@ begin\n          --  For gnatcheck, gnatstub, gnatmetric, gnatpp and gnatelim, create\n          --  a configuration pragmas file, if necessary.\n \n-         if        The_Command = Pretty\n-           or else The_Command = Metric\n-           or else The_Command = Stub\n-           or else The_Command = Elim\n-           or else The_Command = Check\n-           or else The_Command = Sync\n-         then\n+         if The_Command = Sync then\n             --  If there are switches in package Compiler, put them in the\n             --  Carg_Switches table.\n \n@@ -2384,11 +2065,7 @@ begin\n                      --  command is CHECK.\n \n                      K := J + 1;\n-                     while K <= First_Switches.Last\n-                       and then\n-                        (The_Command /= Check\n-                          or else First_Switches.Table (K).all /= \"-rules\")\n-                     loop\n+                     while K <= First_Switches.Last loop\n                         Add_To_Carg_Switches (First_Switches.Table (K));\n                         K := K + 1;\n                      end loop;\n@@ -2415,40 +2092,11 @@ begin\n \n             for J in 1 .. Last_Switches.Last loop\n                if Last_Switches.Table (J).all = \"-cargs\" then\n-                  declare\n-                     K    : Positive;\n-                     Last : Natural;\n-\n-                  begin\n-                     --  Move the switches that are before -rules when the\n-                     --  command is CHECK.\n-\n-                     K := J + 1;\n-                     while K <= Last_Switches.Last\n-                       and then\n-                        (The_Command /= Check\n-                          or else Last_Switches.Table (K).all /= \"-rules\")\n-                     loop\n-                        Add_To_Carg_Switches (Last_Switches.Table (K));\n-                        K := K + 1;\n-                     end loop;\n-\n-                     if K > Last_Switches.Last then\n-                        Last_Switches.Set_Last (J - 1);\n-\n-                     else\n-                        Last := J - 1;\n-                        while K <= Last_Switches.Last loop\n-                           Last := Last + 1;\n-                           Last_Switches.Table (Last) :=\n-                             Last_Switches.Table (K);\n-                           K := K + 1;\n-                        end loop;\n-\n-                        Last_Switches.Set_Last (Last);\n-                     end if;\n-                  end;\n+                  for K in J + 1 .. Last_Switches.Last loop\n+                     Add_To_Carg_Switches (Last_Switches.Table (K));\n+                  end loop;\n \n+                  Last_Switches.Set_Last (J - 1);\n                   exit;\n                end if;\n             end loop;\n@@ -2459,122 +2107,14 @@ begin\n \n             begin\n                if CP_File /= No_Path then\n-                  if The_Command = Elim then\n-                     First_Switches.Increment_Last;\n-                     First_Switches.Table (First_Switches.Last)  :=\n-                       new String'(\"-C\" & Get_Name_String (CP_File));\n-\n-                  else\n-                     Add_To_Carg_Switches\n-                       (new String'(\"-gnatec=\" & Get_Name_String (CP_File)));\n-                  end if;\n+                  Add_To_Carg_Switches\n+                    (new String'(\"-gnatec=\" & Get_Name_String (CP_File)));\n                end if;\n \n                if M_File /= No_Path then\n                   Add_To_Carg_Switches\n                     (new String'(\"-gnatem=\" & Get_Name_String (M_File)));\n                end if;\n-\n-               --  For gnatcheck, gnatpp, gnatstub and gnatmetric, also\n-               --  indicate a global configuration pragmas file and, if -U\n-               --  is not used, a local one.\n-\n-               if The_Command = Check  or else\n-                  The_Command = Pretty or else\n-                  The_Command = Stub   or else\n-                  The_Command = Metric\n-               then\n-                  declare\n-                     Pkg  : constant Prj.Package_Id :=\n-                              Prj.Util.Value_Of\n-                                (Name        => Name_Builder,\n-                                 In_Packages => Project.Decl.Packages,\n-                                 Shared      => Project_Tree.Shared);\n-\n-                     Variable : Variable_Value :=\n-                                  Prj.Util.Value_Of\n-                                    (Name                    => No_Name,\n-                                     Attribute_Or_Array_Name =>\n-                                       Name_Global_Configuration_Pragmas,\n-                                     In_Package              => Pkg,\n-                                     Shared            => Project_Tree.Shared);\n-\n-                  begin\n-                     if (Variable = Nil_Variable_Value\n-                          or else Length_Of_Name (Variable.Value) = 0)\n-                       and then Pkg /= No_Package\n-                     then\n-                        Variable :=\n-                          Prj.Util.Value_Of\n-                            (Name                    => Name_Ada,\n-                             Attribute_Or_Array_Name =>\n-                               Name_Global_Config_File,\n-                             In_Package              => Pkg,\n-                             Shared                  => Project_Tree.Shared);\n-                     end if;\n-\n-                     if Variable /= Nil_Variable_Value\n-                       and then Length_Of_Name (Variable.Value) /= 0\n-                     then\n-                        declare\n-                           Path : constant String :=\n-                                    Absolute_Path\n-                                      (Path_Name_Type (Variable.Value),\n-                                       Variable.Project);\n-                        begin\n-                           Add_To_Carg_Switches\n-                             (new String'(\"-gnatec=\" & Path));\n-                        end;\n-                     end if;\n-                  end;\n-\n-                  if not All_Projects then\n-                     declare\n-                        Pkg : constant Prj.Package_Id :=\n-                                Prj.Util.Value_Of\n-                                  (Name        => Name_Compiler,\n-                                   In_Packages => Project.Decl.Packages,\n-                                   Shared      => Project_Tree.Shared);\n-\n-                        Variable : Variable_Value :=\n-                                     Prj.Util.Value_Of\n-                                       (Name        => No_Name,\n-                                        Attribute_Or_Array_Name =>\n-                                          Name_Local_Configuration_Pragmas,\n-                                        In_Package  => Pkg,\n-                                        Shared      => Project_Tree.Shared);\n-\n-                     begin\n-                        if (Variable = Nil_Variable_Value\n-                             or else Length_Of_Name (Variable.Value) = 0)\n-                          and then Pkg /= No_Package\n-                        then\n-                           Variable :=\n-                             Prj.Util.Value_Of\n-                               (Name                    => Name_Ada,\n-                                Attribute_Or_Array_Name =>\n-                                  Name_Local_Config_File,\n-                                In_Package              => Pkg,\n-                                Shared                  =>\n-                                  Project_Tree.Shared);\n-                        end if;\n-\n-                        if Variable /= Nil_Variable_Value\n-                          and then Length_Of_Name (Variable.Value) /= 0\n-                        then\n-                           declare\n-                              Path : constant String :=\n-                                       Absolute_Path\n-                                         (Path_Name_Type (Variable.Value),\n-                                          Variable.Project);\n-                           begin\n-                              Add_To_Carg_Switches\n-                                (new String'(\"-gnatec=\" & Path));\n-                           end;\n-                        end if;\n-                     end;\n-                  end if;\n-               end if;\n             end;\n          end if;\n \n@@ -2606,166 +2146,18 @@ begin\n                     (First_Switches.Table (J), Project_Dir);\n                end loop;\n             end;\n-\n-         elsif The_Command = Stub then\n-            declare\n-               File_Index : Integer := 0;\n-               Dir_Index  : Integer := 0;\n-               Last       : constant Integer := Last_Switches.Last;\n-               Lang       : constant Language_Ptr :=\n-                              Get_Language_From_Name (Project, \"ada\");\n-\n-            begin\n-               for Index in 1 .. Last loop\n-                  if Last_Switches.Table (Index)\n-                    (Last_Switches.Table (Index)'First) /= '-'\n-                  then\n-                     File_Index := Index;\n-                     exit;\n-                  end if;\n-               end loop;\n-\n-               --  If the project file naming scheme is not standard, and if\n-               --  the file name ends with the spec suffix, then indicate to\n-               --  gnatstub the name of the body file with a -o switch.\n-\n-               if Lang /= No_Language_Index\n-                 and then not Is_Standard_GNAT_Naming (Lang.Config.Naming_Data)\n-               then\n-                  if File_Index /= 0 then\n-                     declare\n-                        Spec : constant String :=\n-                                 Base_Name\n-                                   (Last_Switches.Table (File_Index).all);\n-                        Last : Natural := Spec'Last;\n-\n-                     begin\n-                        Get_Name_String (Lang.Config.Naming_Data.Spec_Suffix);\n-\n-                        if Spec'Length > Name_Len\n-                          and then Spec (Last - Name_Len + 1 .. Last) =\n-                                                  Name_Buffer (1 .. Name_Len)\n-                        then\n-                           Last := Last - Name_Len;\n-                           Get_Name_String\n-                             (Lang.Config.Naming_Data.Body_Suffix);\n-                           Last_Switches.Increment_Last;\n-                           Last_Switches.Table (Last_Switches.Last) :=\n-                             new String'(\"-o\");\n-                           Last_Switches.Increment_Last;\n-                           Last_Switches.Table (Last_Switches.Last) :=\n-                             new String'(Spec (Spec'First .. Last) &\n-                                           Name_Buffer (1 .. Name_Len));\n-                        end if;\n-                     end;\n-                  end if;\n-               end if;\n-\n-               --  Add the directory of the spec as the destination directory\n-               --  of the body, if there is no destination directory already\n-               --  specified.\n-\n-               if File_Index /= 0 then\n-                  for Index in File_Index + 1 .. Last loop\n-                     if Last_Switches.Table (Index)\n-                         (Last_Switches.Table (Index)'First) /= '-'\n-                     then\n-                        Dir_Index := Index;\n-                        exit;\n-                     end if;\n-                  end loop;\n-\n-                  if Dir_Index = 0 then\n-                     Last_Switches.Increment_Last;\n-                     Last_Switches.Table (Last_Switches.Last) :=\n-                       new String'\n-                             (Dir_Name (Last_Switches.Table (File_Index).all));\n-                  end if;\n-               end if;\n-            end;\n          end if;\n \n-         --  For gnatmetric, the generated files should be put in the object\n-         --  directory. This must be the first switch, because it may be\n-         --  overridden by a switch in package Metrics in the project file or\n-         --  by a command line option. Note that we don't add the -d= switch\n-         --  if there is no object directory available.\n+         --  For gnat sync with -U + a main, get the list of sources from the\n+         --  closure and add them to the arguments.\n \n-         if The_Command = Metric\n-           and then Project.Object_Directory /= No_Path_Information\n-         then\n-            First_Switches.Increment_Last;\n-            First_Switches.Table (2 .. First_Switches.Last) :=\n-              First_Switches.Table (1 .. First_Switches.Last - 1);\n-            First_Switches.Table (1) :=\n-              new String'(\"-d=\" &\n-                          Get_Name_String (Project.Object_Directory.Name));\n-         end if;\n-\n-         --  For gnat check, -rules and the following switches need to be the\n-         --  last options, so move all these switches to table Rules_Switches.\n-\n-         if The_Command = Check then\n-            declare\n-               New_Last : Natural;\n-               --  Set to rank of options preceding \"-rules\"\n-\n-               In_Rules_Switches : Boolean;\n-               --  Set to True when options \"-rules\" is found\n-\n-            begin\n-               New_Last := First_Switches.Last;\n-               In_Rules_Switches := False;\n-\n-               for J in 1 .. First_Switches.Last loop\n-                  if In_Rules_Switches then\n-                     Add_To_Rules_Switches (First_Switches.Table (J));\n-\n-                  elsif First_Switches.Table (J).all = \"-rules\" then\n-                     New_Last := J - 1;\n-                     In_Rules_Switches := True;\n-                  end if;\n-               end loop;\n-\n-               if In_Rules_Switches then\n-                  First_Switches.Set_Last (New_Last);\n-               end if;\n+         --  For gnat sync, gnat list, and gnat stack, if no file has been put\n+         --  on the command line, call tool with all the sources of the main\n+         --  project.\n \n-               New_Last := Last_Switches.Last;\n-               In_Rules_Switches := False;\n-\n-               for J in 1 .. Last_Switches.Last loop\n-                  if In_Rules_Switches then\n-                     Add_To_Rules_Switches (Last_Switches.Table (J));\n-\n-                  elsif Last_Switches.Table (J).all = \"-rules\" then\n-                     New_Last := J - 1;\n-                     In_Rules_Switches := True;\n-                  end if;\n-               end loop;\n-\n-               if In_Rules_Switches then\n-                  Last_Switches.Set_Last (New_Last);\n-               end if;\n-            end;\n-         end if;\n-\n-         --  For gnat check, sync, metric or pretty with -U + a main, get the\n-         --  list of sources from the closure and add them to the arguments.\n-\n-         if ASIS_Main /= null then\n-            Get_Closure;\n-\n-         --  For gnat check, gnat sync, gnat pretty, gnat metric, gnat list,\n-         --  and gnat stack, if no file has been put on the command line, call\n-         --  tool with all the sources of the main project.\n-\n-         elsif The_Command = Check  or else\n-               The_Command = Sync   or else\n-               The_Command = Pretty or else\n-               The_Command = Metric or else\n-               The_Command = List   or else\n-               The_Command = Stack\n+         if The_Command = Sync   or else\n+            The_Command = List   or else\n+            The_Command = Stack\n          then\n             Check_Files;\n          end if;"}, {"sha": "d8f71c53d5967d53d1e98d1f4ec675d3541f4f42", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35e7063a98e07a17c273f820250ef024b2deae9a/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35e7063a98e07a17c273f820250ef024b2deae9a/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=35e7063a98e07a17c273f820250ef024b2deae9a", "patch": "@@ -3798,7 +3798,8 @@ package body Sem_Ch13 is\n                      (\"variable indexing must return a reference type\");\n                   return;\n \n-               elsif Is_Access_Constant (Etype (First_Discriminant (Ret_Type)))\n+               elsif Is_Access_Constant\n+                       (Etype (First_Discriminant (Ret_Type)))\n                then\n                   Illegal_Indexing\n                     (\"variable indexing must return an access to variable\");\n@@ -10936,7 +10937,8 @@ package body Sem_Ch13 is\n                                 SSO_Set_High_By_Default (Bas_Typ)))\n                then\n                   Set_Reverse_Storage_Order (Bas_Typ,\n-                    Reverse_Storage_Order (Base_Type (Etype (Bas_Typ))));\n+                    Reverse_Storage_Order\n+                      (Implementation_Base_Type (Etype (Bas_Typ))));\n \n                   --  Clear default SSO indications, since the inherited aspect\n                   --  which was set explicitly overrides the default."}, {"sha": "5a5265c2778e116c9aae1b5506c331e40e4412f9", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35e7063a98e07a17c273f820250ef024b2deae9a/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35e7063a98e07a17c273f820250ef024b2deae9a/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=35e7063a98e07a17c273f820250ef024b2deae9a", "patch": "@@ -326,6 +326,17 @@ package body Sem_Ch6 is\n       then\n          Def_Id := Analyze_Subprogram_Specification (Spec);\n          Prev   := Find_Corresponding_Spec (N);\n+\n+         --  The previous entity may be an expression function as well, in\n+         --  which case the redeclaration is illegal.\n+\n+         if Present (Prev)\n+           and then Nkind (Original_Node (Unit_Declaration_Node (Prev)))\n+             =  N_Expression_Function\n+         then\n+            Error_Msg_N (\"Duplicate expression function\", N);\n+            return;\n+         end if;\n       end if;\n \n       Ret := Make_Simple_Return_Statement (LocX, Expression (N));"}]}