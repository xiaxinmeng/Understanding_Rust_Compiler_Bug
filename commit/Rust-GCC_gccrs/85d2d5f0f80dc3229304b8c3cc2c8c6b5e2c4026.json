{"sha": "85d2d5f0f80dc3229304b8c3cc2c8c6b5e2c4026", "node_id": "C_kwDOANBUbNoAKDg1ZDJkNWYwZjgwZGMzMjI5MzA0YjhjM2NjMmM4YzZiNWUyYzQwMjY", "commit": {"author": {"name": "Philip Herron", "email": "herron.philip@googlemail.com", "date": "2023-05-30T12:45:14Z"}, "committer": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2023-05-30T16:32:08Z"}, "message": "gccrs: Fix missing pop of name scope at the end of Trait Impl\n\nThis adds the missing label scope and fixes the missing pop of the name\nscope at the end of the resolution for a TraitImpl.\n\ngcc/rust/ChangeLog:\n\n\t* resolve/rust-ast-resolve-item.cc (ResolveItem::visit): fix missing pop\n\nSigned-off-by: Philip Herron <herron.philip@googlemail.com>", "tree": {"sha": "ef8e25e24cd2c9cb200ac656fd66b91fb1fc51ff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ef8e25e24cd2c9cb200ac656fd66b91fb1fc51ff"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/85d2d5f0f80dc3229304b8c3cc2c8c6b5e2c4026", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85d2d5f0f80dc3229304b8c3cc2c8c6b5e2c4026", "html_url": "https://github.com/Rust-GCC/gccrs/commit/85d2d5f0f80dc3229304b8c3cc2c8c6b5e2c4026", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85d2d5f0f80dc3229304b8c3cc2c8c6b5e2c4026/comments", "author": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "82d9bd0b033acb555b629dc527b32d4e510ba69a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82d9bd0b033acb555b629dc527b32d4e510ba69a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/82d9bd0b033acb555b629dc527b32d4e510ba69a"}], "stats": {"total": 15, "additions": 11, "deletions": 4}, "files": [{"sha": "e70383ec46291d2e2ad6b67130eb51451ded1ce2", "filename": "gcc/rust/resolve/rust-ast-resolve-item.cc", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85d2d5f0f80dc3229304b8c3cc2c8c6b5e2c4026/gcc%2Frust%2Fresolve%2Frust-ast-resolve-item.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85d2d5f0f80dc3229304b8c3cc2c8c6b5e2c4026/gcc%2Frust%2Fresolve%2Frust-ast-resolve-item.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fresolve%2Frust-ast-resolve-item.cc?ref=85d2d5f0f80dc3229304b8c3cc2c8c6b5e2c4026", "patch": "@@ -699,8 +699,10 @@ ResolveItem::visit (AST::TraitImpl &impl_block)\n \n   resolver->get_name_scope ().push (scope_node_id);\n   resolver->get_type_scope ().push (scope_node_id);\n+  resolver->get_label_scope ().push (scope_node_id);\n   resolver->push_new_name_rib (resolver->get_name_scope ().peek ());\n   resolver->push_new_type_rib (resolver->get_type_scope ().peek ());\n+  resolver->push_new_label_rib (resolver->get_type_scope ().peek ());\n \n   if (impl_block.has_generics ())\n     for (auto &generic : impl_block.get_generic_params ())\n@@ -714,17 +716,19 @@ ResolveItem::visit (AST::TraitImpl &impl_block)\n   NodeId trait_resolved_node = ResolveType::go (&impl_block.get_trait_path ());\n   if (trait_resolved_node == UNKNOWN_NODEID)\n     {\n-      resolver->get_type_scope ().pop ();\n       resolver->get_name_scope ().pop ();\n+      resolver->get_type_scope ().pop ();\n+      resolver->get_label_scope ().pop ();\n       return;\n     }\n \n   //   CanonicalPath canonical_impl_type = CanonicalPath::create_empty ();\n   NodeId type_resolved_node = ResolveType::go (impl_block.get_type ().get ());\n   if (type_resolved_node == UNKNOWN_NODEID)\n     {\n-      resolver->get_type_scope ().pop ();\n       resolver->get_name_scope ().pop ();\n+      resolver->get_type_scope ().pop ();\n+      resolver->get_label_scope ().pop ();\n       return;\n     }\n \n@@ -792,9 +796,12 @@ ResolveItem::visit (AST::TraitImpl &impl_block)\n       resolve_impl_item (impl_item.get (), impl_prefix, cpath);\n     }\n \n-  resolver->get_type_scope ().peek ()->clear_name (\n-    Self, impl_block.get_type ()->get_node_id ());\n+  Rib *r = resolver->get_type_scope ().peek ();\n+  r->clear_name (Self, impl_block.get_type ()->get_node_id ());\n+\n+  resolver->get_name_scope ().pop ();\n   resolver->get_type_scope ().pop ();\n+  resolver->get_label_scope ().pop ();\n }\n \n void"}]}