{"sha": "49931fcb6ebd4100b95f190fc7b780b7426a9e5a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDk5MzFmY2I2ZWJkNDEwMGI5NWYxOTBmYzdiNzgwYjc0MjZhOWU1YQ==", "commit": {"author": {"name": "Alexandre Oliva", "email": "aoliva@redhat.com", "date": "2011-06-08T19:39:12Z"}, "committer": {"name": "Alexandre Oliva", "email": "aoliva@gcc.gnu.org", "date": "2011-06-08T19:39:12Z"}, "message": "tree-flow-inline.h (op_iter_init): Reject GIMPLE_PHI stmts.\n\n* tree-flow-inline.h (op_iter_init): Reject GIMPLE_PHI stmts.\n(num_ssa_operands): Likewise.\n(op_iter_init_phiuse): Forward-declare.\n(delink_stmt_imm_use): Iterate with FOR_EACH_PHI_OR_STMT_USE.\n\nFrom-SVN: r174815", "tree": {"sha": "d9d6317d1ce0f5f397999b2a960a0dd9f00eb49f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d9d6317d1ce0f5f397999b2a960a0dd9f00eb49f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/49931fcb6ebd4100b95f190fc7b780b7426a9e5a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49931fcb6ebd4100b95f190fc7b780b7426a9e5a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/49931fcb6ebd4100b95f190fc7b780b7426a9e5a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49931fcb6ebd4100b95f190fc7b780b7426a9e5a/comments", "author": null, "committer": null, "parents": [{"sha": "2427150138deb7c8efff398b3d9b1915021efd44", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2427150138deb7c8efff398b3d9b1915021efd44", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2427150138deb7c8efff398b3d9b1915021efd44"}], "stats": {"total": 18, "additions": 15, "deletions": 3}, "files": [{"sha": "297fc790d04bbaa5316ca88e7e4541045f8d8c82", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49931fcb6ebd4100b95f190fc7b780b7426a9e5a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49931fcb6ebd4100b95f190fc7b780b7426a9e5a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=49931fcb6ebd4100b95f190fc7b780b7426a9e5a", "patch": "@@ -1,3 +1,10 @@\n+2011-06-08  Alexandre Oliva  <aoliva@redhat.com>\n+\n+\t* tree-flow-inline.h (op_iter_init): Reject GIMPLE_PHI stmts.\n+\t(num_ssa_operands): Likewise.\n+\t(op_iter_init_phiuse): Forward-declare.\n+\t(delink_stmt_imm_use): Iterate with FOR_EACH_PHI_OR_STMT_USE.\n+\n 2011-06-08  Nick Clifton  <nickc@redhat.com>\n \n \t* doc/invoke.texi (ARM Options): Update description of"}, {"sha": "b9c5e16e972c8d28924464c69e77c23fe96f5b89", "filename": "gcc/tree-flow-inline.h", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49931fcb6ebd4100b95f190fc7b780b7426a9e5a/gcc%2Ftree-flow-inline.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49931fcb6ebd4100b95f190fc7b780b7426a9e5a/gcc%2Ftree-flow-inline.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-flow-inline.h?ref=49931fcb6ebd4100b95f190fc7b780b7426a9e5a", "patch": "@@ -737,9 +737,11 @@ clear_and_done_ssa_iter (ssa_op_iter *ptr)\n static inline void\n op_iter_init (ssa_op_iter *ptr, gimple stmt, int flags)\n {\n-  /* We do not support iterating over virtual defs or uses without\n+  /* PHI nodes require a different iterator initialization path.  We\n+     do not support iterating over virtual defs or uses without\n      iterating over defs or uses at the same time.  */\n-  gcc_checking_assert ((!(flags & SSA_OP_VDEF) || (flags & SSA_OP_DEF))\n+  gcc_checking_assert (gimple_code (stmt) != GIMPLE_PHI\n+\t\t       && (!(flags & SSA_OP_VDEF) || (flags & SSA_OP_DEF))\n \t\t       && (!(flags & SSA_OP_VUSE) || (flags & SSA_OP_USE)));\n   ptr->defs = (flags & (SSA_OP_DEF|SSA_OP_VDEF)) ? gimple_def_ops (stmt) : NULL;\n   if (!(flags & SSA_OP_VDEF)\n@@ -868,11 +870,14 @@ num_ssa_operands (gimple stmt, int flags)\n   tree t;\n   int num = 0;\n \n+  gcc_checking_assert (gimple_code (stmt) != GIMPLE_PHI);\n   FOR_EACH_SSA_TREE_OPERAND (t, stmt, iter, flags)\n     num++;\n   return num;\n }\n \n+static inline use_operand_p\n+op_iter_init_phiuse (ssa_op_iter *ptr, gimple phi, int flags);\n \n /* Delink all immediate_use information for STMT.  */\n static inline void\n@@ -882,7 +887,7 @@ delink_stmt_imm_use (gimple stmt)\n    use_operand_p use_p;\n \n    if (ssa_operands_active ())\n-     FOR_EACH_SSA_USE_OPERAND (use_p, stmt, iter, SSA_OP_ALL_USES)\n+     FOR_EACH_PHI_OR_STMT_USE (use_p, stmt, iter, SSA_OP_ALL_USES)\n        delink_imm_use (use_p);\n }\n "}]}