{"sha": "975a4fc1a3818c84aafa85aa49915426305f7ae5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTc1YTRmYzFhMzgxOGM4NGFhZmE4NWFhNDk5MTU0MjYzMDVmN2FlNQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2006-12-28T10:54:56Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2006-12-28T10:54:56Z"}, "message": "array (array<>::_M_at): Remove.\n\n2006-12-28  Paolo Carlini  <pcarlini@suse.de>\n\n\t* include/tr1/array (array<>::_M_at): Remove.\n\t(array<>::_M_check): Add.\n\t(array<>::at): Use the latter.\n\nFrom-SVN: r120242", "tree": {"sha": "656e0c2e1846d9cc83ce28dab79c88b3382f701a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/656e0c2e1846d9cc83ce28dab79c88b3382f701a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/975a4fc1a3818c84aafa85aa49915426305f7ae5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/975a4fc1a3818c84aafa85aa49915426305f7ae5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/975a4fc1a3818c84aafa85aa49915426305f7ae5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/975a4fc1a3818c84aafa85aa49915426305f7ae5/comments", "author": null, "committer": null, "parents": [{"sha": "036bcce8e4c7b41a6b432be21f65a8b50bf7de93", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/036bcce8e4c7b41a6b432be21f65a8b50bf7de93", "html_url": "https://github.com/Rust-GCC/gccrs/commit/036bcce8e4c7b41a6b432be21f65a8b50bf7de93"}], "stats": {"total": 49, "additions": 20, "deletions": 29}, "files": [{"sha": "ae6549b045ed4e9ac478ecca0267498f91ae2c3d", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/975a4fc1a3818c84aafa85aa49915426305f7ae5/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/975a4fc1a3818c84aafa85aa49915426305f7ae5/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=975a4fc1a3818c84aafa85aa49915426305f7ae5", "patch": "@@ -1,3 +1,9 @@\n+2006-12-28  Paolo Carlini  <pcarlini@suse.de>\n+\n+\t* include/tr1/array (array<>::_M_at): Remove.\n+\t(array<>::_M_check): Add.\n+\t(array<>::at): Use the latter.\n+\n 2006-12-22  Paolo Carlini  <pcarlini@suse.de>\n \n         DR 541, [WP]."}, {"sha": "23808b334620b55dff9d556dd6670f226e625377", "filename": "libstdc++-v3/include/tr1/array", "status": "modified", "additions": 14, "deletions": 29, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/975a4fc1a3818c84aafa85aa49915426305f7ae5/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Farray", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/975a4fc1a3818c84aafa85aa49915426305f7ae5/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Farray", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Farray?ref=975a4fc1a3818c84aafa85aa49915426305f7ae5", "patch": "@@ -128,11 +128,17 @@ _GLIBCXX_BEGIN_NAMESPACE(tr1)\n \n       reference\n       at(size_type __n)\n-      { return _M_at<_Nm>(__n); }\n+      { \n+\t_M_check<_Nm>(__n);\n+\treturn _M_instance[__n];\n+      }\n \n       const_reference\n       at(size_type __n) const\n-      { return _M_at<_Nm>(__n); }\n+      {\n+\t_M_check<_Nm>(__n);\n+\treturn _M_instance[__n];\n+      }\n \n       reference \n       front()\n@@ -160,39 +166,18 @@ _GLIBCXX_BEGIN_NAMESPACE(tr1)\n \n     private:\n       template<std::size_t _Mm>\n-        typename __gnu_cxx::__enable_if<_Mm, reference>::__type\n-        _M_at(size_type __n)\n+        typename __gnu_cxx::__enable_if<_Mm, void>::__type\n+        _M_check(size_type __n) const\n         {\n \t  if (__builtin_expect(__n >= _Mm, false))\n-\t    std::__throw_out_of_range(__N(\"array::_M_at\"));\n-\t  return _M_instance[__n];\n+\t    std::__throw_out_of_range(__N(\"array::_M_check\"));\n \t}\n \n       // Avoid \"unsigned comparison with zero\" warnings.\n       template<std::size_t _Mm>\n-        typename __gnu_cxx::__enable_if<!_Mm, reference>::__type\n-        _M_at(size_type)\n-        {\n-\t  std::__throw_out_of_range(__N(\"array::_M_at\"));\n-\t  return _M_instance[0];\n-\t}\n-\n-      template<std::size_t _Mm>\n-        typename __gnu_cxx::__enable_if<_Mm, const_reference>::__type\n-        _M_at(size_type __n) const\n-        {\n-\t  if (__builtin_expect(__n >= _Mm, false))\n-\t    std::__throw_out_of_range(__N(\"array::_M_at\"));\n-\t  return _M_instance[__n];\n-\t}\n-\n-      template<std::size_t _Mm>\n-        typename __gnu_cxx::__enable_if<!_Mm, const_reference>::__type\n-        _M_at(size_type) const\n-        {\n-\t  std::__throw_out_of_range(__N(\"array::_M_at\"));\n-\t  return _M_instance[0];\n-\t}     \n+        typename __gnu_cxx::__enable_if<!_Mm, void>::__type\n+        _M_check(size_type) const\n+        { std::__throw_out_of_range(__N(\"array::_M_check\")); }\n     };\n \n   // Array comparisons."}]}