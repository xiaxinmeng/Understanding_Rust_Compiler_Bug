{"sha": "33727b5ecb2653eaa3688a4e9102cb454c1ff6a2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzM3MjdiNWVjYjI2NTNlYWEzNjg4YTRlOTEwMmNiNDU0YzFmZjZhMg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2007-11-18T19:18:39Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2007-11-18T19:18:39Z"}, "message": "re PR middle-end/33335 (FAIL: 26_numerics/complex/inserters_extractors/wchar_t/1.cc)\n\n\tPR middle-end/33335\n\t* optabs.h (optab_table): Change type to struct optab from optab.\n\t(convert_optab_table): Similarly.\n\tAdjust all _optab macros to expand to addresses of optab_table\n\tresp. convert_optab_table elements rather than the values of the\n\telements.\n\t* optabs.c (optab_table): Change typype to struct optab from optab.\n\tIf compiled by recent GCC, initialize all the insn_code fields in\n\tthe array using designated range initializers.\n\t(convert_optab_table): Similarly.\n\t(convert_optab_libfunc, optab_libfunc, set_optab_libfunc,\n\tset_conv_libfunc): Into libfunc_entry's optab field store index within\n\toptab_table resp. convert_optab_table array instead of difference\n\tbetween two separately malloced addresses.\n\t(new_optab): Add op argument, don't return anything.  Initialize\n\tjust the insn_code field in handlers array and only when needed.\n\t(init_optab, init_optabv): Add op argument, don't return anything.\n\tAdjust new_optab caller.\n\t(new_convert_optab): Removed.\n\t(init_convert_optab): Add op argument, don't return anything, don't\n\tcall new_convert_optab.  If needed, initialize insn_code field in\n\thandlers array.\n\t(init_optabs): Adjust init_optab, init_optabv and init_convert_optab\n\tcallers.\n\t(debug_optab_libfuncs): Adjust uses of optab_table and\n\tconvert_optab_table arrays.\n\nFrom-SVN: r130274", "tree": {"sha": "783387161f29ac9c3beb6ce47f7af8e82a3bca64", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/783387161f29ac9c3beb6ce47f7af8e82a3bca64"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/33727b5ecb2653eaa3688a4e9102cb454c1ff6a2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33727b5ecb2653eaa3688a4e9102cb454c1ff6a2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/33727b5ecb2653eaa3688a4e9102cb454c1ff6a2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33727b5ecb2653eaa3688a4e9102cb454c1ff6a2/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3c279553647c683018e777eaf6e95f5140bc3425", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c279553647c683018e777eaf6e95f5140bc3425", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c279553647c683018e777eaf6e95f5140bc3425"}], "stats": {"total": 854, "additions": 447, "deletions": 407}, "files": [{"sha": "e3b5f8483ba30b2ce4f2111c00337bc2034aee57", "filename": "gcc/ChangeLog", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33727b5ecb2653eaa3688a4e9102cb454c1ff6a2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33727b5ecb2653eaa3688a4e9102cb454c1ff6a2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=33727b5ecb2653eaa3688a4e9102cb454c1ff6a2", "patch": "@@ -1,3 +1,32 @@\n+2007-11-18  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/33335\n+\t* optabs.h (optab_table): Change type to struct optab from optab.\n+\t(convert_optab_table): Similarly.\n+\tAdjust all _optab macros to expand to addresses of optab_table\n+\tresp. convert_optab_table elements rather than the values of the\n+\telements.\n+\t* optabs.c (optab_table): Change typype to struct optab from optab.\n+\tIf compiled by recent GCC, initialize all the insn_code fields in\n+\tthe array using designated range initializers.\n+\t(convert_optab_table): Similarly.\n+\t(convert_optab_libfunc, optab_libfunc, set_optab_libfunc,\n+\tset_conv_libfunc): Into libfunc_entry's optab field store index within\n+\toptab_table resp. convert_optab_table array instead of difference\n+\tbetween two separately malloced addresses.\n+\t(new_optab): Add op argument, don't return anything.  Initialize\n+\tjust the insn_code field in handlers array and only when needed.\n+\t(init_optab, init_optabv): Add op argument, don't return anything.\n+\tAdjust new_optab caller.\n+\t(new_convert_optab): Removed.\n+\t(init_convert_optab): Add op argument, don't return anything, don't\n+\tcall new_convert_optab.  If needed, initialize insn_code field in\n+\thandlers array.\n+\t(init_optabs): Adjust init_optab, init_optabv and init_convert_optab\n+\tcallers.\n+\t(debug_optab_libfuncs): Adjust uses of optab_table and\n+\tconvert_optab_table arrays.\n+\n 2007-11-18  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/34127"}, {"sha": "1f8442b658b9a6a5865971dc28eb1793f5245519", "filename": "gcc/optabs.c", "status": "modified", "additions": 233, "deletions": 222, "changes": 455, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33727b5ecb2653eaa3688a4e9102cb454c1ff6a2/gcc%2Foptabs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33727b5ecb2653eaa3688a4e9102cb454c1ff6a2/gcc%2Foptabs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foptabs.c?ref=33727b5ecb2653eaa3688a4e9102cb454c1ff6a2", "patch": "@@ -54,12 +54,27 @@ along with GCC; see the file COPYING3.  If not see\n \n    See expr.h for documentation of these optabs.  */\n \n-optab optab_table[OTI_MAX];\n+#if GCC_VERSION >= 4000\n+__extension__ struct optab optab_table[OTI_MAX]\n+  = { [0 ... OTI_MAX - 1].handlers[0 ... NUM_MACHINE_MODES - 1].insn_code\n+      = CODE_FOR_nothing };\n+#else\n+/* new_optab will do runtime initialization otherwise.  */\n+struct optab optab_table[OTI_MAX];\n+#endif\n \n rtx libfunc_table[LTI_MAX];\n \n /* Tables of patterns for converting one mode to another.  */\n-convert_optab convert_optab_table[COI_MAX];\n+#if GCC_VERSION >= 4000\n+__extension__ struct convert_optab convert_optab_table[COI_MAX]\n+  = { [0 ... COI_MAX - 1].handlers[0 ... NUM_MACHINE_MODES - 1]\n+\t[0 ... NUM_MACHINE_MODES - 1].insn_code\n+      = CODE_FOR_nothing };\n+#else\n+/* init_convert_optab will do runtime initialization otherwise.  */\n+struct convert_optab convert_optab_table[COI_MAX];\n+#endif\n \n /* Contains the optab used for each rtx code.  */\n optab code_to_optab[NUM_RTX_CODE + 1];\n@@ -161,7 +176,7 @@ convert_optab_libfunc (convert_optab optab, enum machine_mode mode1,\n   struct libfunc_entry e;\n   struct libfunc_entry **slot;\n \n-  e.optab = (size_t) (convert_optab_table[0] - optab);\n+  e.optab = (size_t) (optab - &convert_optab_table[0]);\n   e.mode1 = mode1;\n   e.mode2 = mode2;\n   slot = (struct libfunc_entry **) htab_find_slot (libfunc_hash, &e, NO_INSERT);\n@@ -190,7 +205,7 @@ optab_libfunc (optab optab, enum machine_mode mode)\n   struct libfunc_entry e;\n   struct libfunc_entry **slot;\n \n-  e.optab = (size_t) (optab_table[0] - optab);\n+  e.optab = (size_t) (optab - &optab_table[0]);\n   e.mode1 = mode;\n   e.mode2 = VOIDmode;\n   slot = (struct libfunc_entry **) htab_find_slot (libfunc_hash, &e, NO_INSERT);\n@@ -5550,59 +5565,55 @@ have_insn_for (enum rtx_code code, enum machine_mode mode)\n }\n \n /* Create a blank optab.  */\n-static optab\n-new_optab (void)\n+#if GCC_VERSION >= 4000\n+static inline void\n+new_optab (optab op ATTRIBUTE_UNUSED)\n {\n-  int i;\n-  optab op = xcalloc (sizeof (struct optab), 1);\n-\n-  for (i = 0; i < NUM_MACHINE_MODES; i++)\n-    optab_handler (op, i)->insn_code = CODE_FOR_nothing;\n-\n-  return op;\n+  /* All insn_code fields are already initialized using\n+     designated initializers.  */\n }\n-\n-static convert_optab\n-new_convert_optab (void)\n+#else\n+static void\n+new_optab (optab op)\n {\n-  int i, j;\n-  convert_optab op = xcalloc (sizeof (struct convert_optab), 1);\n+  int i;\n \n   for (i = 0; i < NUM_MACHINE_MODES; i++)\n-    for (j = 0; j < NUM_MACHINE_MODES; j++)\n-      convert_optab_handler (op, i, j)->insn_code = CODE_FOR_nothing;\n-\n-  return op;\n+    optab_handler (op, i)->insn_code = CODE_FOR_nothing;\n }\n+#endif\n \n /* Same, but fill in its code as CODE, and write it into the\n    code_to_optab table.  */\n-static inline optab\n-init_optab (enum rtx_code code)\n+static inline void\n+init_optab (optab op, enum rtx_code code)\n {\n-  optab op = new_optab ();\n+  new_optab (op);\n   op->code = code;\n   code_to_optab[(int) code] = op;\n-  return op;\n }\n \n /* Same, but fill in its code as CODE, and do _not_ write it into\n    the code_to_optab table.  */\n-static inline optab\n-init_optabv (enum rtx_code code)\n+static inline void\n+init_optabv (optab op, enum rtx_code code)\n {\n-  optab op = new_optab ();\n+  new_optab (op);\n   op->code = code;\n-  return op;\n }\n \n /* Conversion optabs never go in the code_to_optab table.  */\n-static inline convert_optab\n-init_convert_optab (enum rtx_code code)\n+static void\n+init_convert_optab (convert_optab op, enum rtx_code code)\n {\n-  convert_optab op = new_convert_optab ();\n+#if !(GCC_VERSION >= 4000)\n+  int i, j;\n+\n+  for (i = 0; i < NUM_MACHINE_MODES; i++)\n+    for (j = 0; j < NUM_MACHINE_MODES; j++)\n+      convert_optab_handler (op, i, j)->insn_code = CODE_FOR_nothing;\n+#endif\n   op->code = code;\n-  return op;\n }\n \n /* Initialize the libfunc fields of an entire group of entries in some\n@@ -6178,7 +6189,7 @@ set_optab_libfunc (optab optable, enum machine_mode mode, const char *name)\n   rtx val;\n   struct libfunc_entry e;\n   struct libfunc_entry **slot;\n-  e.optab = (size_t) (optab_table[0] - optable);\n+  e.optab = (size_t) (optable - &optab_table[0]);\n   e.mode1 = mode;\n   e.mode2 = VOIDmode;\n \n@@ -6189,7 +6200,7 @@ set_optab_libfunc (optab optable, enum machine_mode mode, const char *name)\n   slot = (struct libfunc_entry **) htab_find_slot (libfunc_hash, &e, INSERT);\n   if (*slot == NULL)\n     *slot = ggc_alloc (sizeof (struct libfunc_entry));\n-  (*slot)->optab = (size_t) (optab_table[0] - optable);\n+  (*slot)->optab = (size_t) (optable - &optab_table[0]);\n   (*slot)->mode1 = mode;\n   (*slot)->mode2 = VOIDmode;\n   (*slot)->libfunc = val;\n@@ -6205,7 +6216,7 @@ set_conv_libfunc (convert_optab optable, enum machine_mode tmode,\n   rtx val;\n   struct libfunc_entry e;\n   struct libfunc_entry **slot;\n-  e.optab = (size_t) (convert_optab_table[0] - optable);\n+  e.optab = (size_t) (optable - &convert_optab_table[0]);\n   e.mode1 = tmode;\n   e.mode2 = fmode;\n \n@@ -6216,7 +6227,7 @@ set_conv_libfunc (convert_optab optable, enum machine_mode tmode,\n   slot = (struct libfunc_entry **) htab_find_slot (libfunc_hash, &e, INSERT);\n   if (*slot == NULL)\n     *slot = ggc_alloc (sizeof (struct libfunc_entry));\n-  (*slot)->optab = (size_t) (convert_optab_table[0] - optable);\n+  (*slot)->optab = (size_t) (optable - &convert_optab_table[0]);\n   (*slot)->mode1 = tmode;\n   (*slot)->mode2 = fmode;\n   (*slot)->libfunc = val;\n@@ -6248,192 +6259,192 @@ init_optabs (void)\n       vcondu_gen_code[i] = CODE_FOR_nothing;\n     }\n \n-  add_optab = init_optab (PLUS);\n-  addv_optab = init_optabv (PLUS);\n-  sub_optab = init_optab (MINUS);\n-  subv_optab = init_optabv (MINUS);\n-  ssadd_optab = init_optab (SS_PLUS);\n-  usadd_optab = init_optab (US_PLUS);\n-  sssub_optab = init_optab (SS_MINUS);\n-  ussub_optab = init_optab (US_MINUS);\n-  smul_optab = init_optab (MULT);\n-  ssmul_optab = init_optab (SS_MULT);\n-  usmul_optab = init_optab (US_MULT);\n-  smulv_optab = init_optabv (MULT);\n-  smul_highpart_optab = init_optab (UNKNOWN);\n-  umul_highpart_optab = init_optab (UNKNOWN);\n-  smul_widen_optab = init_optab (UNKNOWN);\n-  umul_widen_optab = init_optab (UNKNOWN);\n-  usmul_widen_optab = init_optab (UNKNOWN);\n-  smadd_widen_optab = init_optab (UNKNOWN);\n-  umadd_widen_optab = init_optab (UNKNOWN);\n-  ssmadd_widen_optab = init_optab (UNKNOWN);\n-  usmadd_widen_optab = init_optab (UNKNOWN);\n-  smsub_widen_optab = init_optab (UNKNOWN);\n-  umsub_widen_optab = init_optab (UNKNOWN);\n-  ssmsub_widen_optab = init_optab (UNKNOWN);\n-  usmsub_widen_optab = init_optab (UNKNOWN);\n-  sdiv_optab = init_optab (DIV);\n-  ssdiv_optab = init_optab (SS_DIV);\n-  usdiv_optab = init_optab (US_DIV);\n-  sdivv_optab = init_optabv (DIV);\n-  sdivmod_optab = init_optab (UNKNOWN);\n-  udiv_optab = init_optab (UDIV);\n-  udivmod_optab = init_optab (UNKNOWN);\n-  smod_optab = init_optab (MOD);\n-  umod_optab = init_optab (UMOD);\n-  fmod_optab = init_optab (UNKNOWN);\n-  remainder_optab = init_optab (UNKNOWN);\n-  ftrunc_optab = init_optab (UNKNOWN);\n-  and_optab = init_optab (AND);\n-  ior_optab = init_optab (IOR);\n-  xor_optab = init_optab (XOR);\n-  ashl_optab = init_optab (ASHIFT);\n-  ssashl_optab = init_optab (SS_ASHIFT);\n-  usashl_optab = init_optab (US_ASHIFT);\n-  ashr_optab = init_optab (ASHIFTRT);\n-  lshr_optab = init_optab (LSHIFTRT);\n-  rotl_optab = init_optab (ROTATE);\n-  rotr_optab = init_optab (ROTATERT);\n-  smin_optab = init_optab (SMIN);\n-  smax_optab = init_optab (SMAX);\n-  umin_optab = init_optab (UMIN);\n-  umax_optab = init_optab (UMAX);\n-  pow_optab = init_optab (UNKNOWN);\n-  atan2_optab = init_optab (UNKNOWN);\n+  init_optab (add_optab, PLUS);\n+  init_optabv (addv_optab, PLUS);\n+  init_optab (sub_optab, MINUS);\n+  init_optabv (subv_optab, MINUS);\n+  init_optab (ssadd_optab, SS_PLUS);\n+  init_optab (usadd_optab, US_PLUS);\n+  init_optab (sssub_optab, SS_MINUS);\n+  init_optab (ussub_optab, US_MINUS);\n+  init_optab (smul_optab, MULT);\n+  init_optab (ssmul_optab, SS_MULT);\n+  init_optab (usmul_optab, US_MULT);\n+  init_optabv (smulv_optab, MULT);\n+  init_optab (smul_highpart_optab, UNKNOWN);\n+  init_optab (umul_highpart_optab, UNKNOWN);\n+  init_optab (smul_widen_optab, UNKNOWN);\n+  init_optab (umul_widen_optab, UNKNOWN);\n+  init_optab (usmul_widen_optab, UNKNOWN);\n+  init_optab (smadd_widen_optab, UNKNOWN);\n+  init_optab (umadd_widen_optab, UNKNOWN);\n+  init_optab (ssmadd_widen_optab, UNKNOWN);\n+  init_optab (usmadd_widen_optab, UNKNOWN);\n+  init_optab (smsub_widen_optab, UNKNOWN);\n+  init_optab (umsub_widen_optab, UNKNOWN);\n+  init_optab (ssmsub_widen_optab, UNKNOWN);\n+  init_optab (usmsub_widen_optab, UNKNOWN);\n+  init_optab (sdiv_optab, DIV);\n+  init_optab (ssdiv_optab, SS_DIV);\n+  init_optab (usdiv_optab, US_DIV);\n+  init_optabv (sdivv_optab, DIV);\n+  init_optab (sdivmod_optab, UNKNOWN);\n+  init_optab (udiv_optab, UDIV);\n+  init_optab (udivmod_optab, UNKNOWN);\n+  init_optab (smod_optab, MOD);\n+  init_optab (umod_optab, UMOD);\n+  init_optab (fmod_optab, UNKNOWN);\n+  init_optab (remainder_optab, UNKNOWN);\n+  init_optab (ftrunc_optab, UNKNOWN);\n+  init_optab (and_optab, AND);\n+  init_optab (ior_optab, IOR);\n+  init_optab (xor_optab, XOR);\n+  init_optab (ashl_optab, ASHIFT);\n+  init_optab (ssashl_optab, SS_ASHIFT);\n+  init_optab (usashl_optab, US_ASHIFT);\n+  init_optab (ashr_optab, ASHIFTRT);\n+  init_optab (lshr_optab, LSHIFTRT);\n+  init_optab (rotl_optab, ROTATE);\n+  init_optab (rotr_optab, ROTATERT);\n+  init_optab (smin_optab, SMIN);\n+  init_optab (smax_optab, SMAX);\n+  init_optab (umin_optab, UMIN);\n+  init_optab (umax_optab, UMAX);\n+  init_optab (pow_optab, UNKNOWN);\n+  init_optab (atan2_optab, UNKNOWN);\n \n   /* These three have codes assigned exclusively for the sake of\n      have_insn_for.  */\n-  mov_optab = init_optab (SET);\n-  movstrict_optab = init_optab (STRICT_LOW_PART);\n-  cmp_optab = init_optab (COMPARE);\n-\n-  storent_optab = init_optab (UNKNOWN);\n-\n-  ucmp_optab = init_optab (UNKNOWN);\n-  tst_optab = init_optab (UNKNOWN);\n-\n-  eq_optab = init_optab (EQ);\n-  ne_optab = init_optab (NE);\n-  gt_optab = init_optab (GT);\n-  ge_optab = init_optab (GE);\n-  lt_optab = init_optab (LT);\n-  le_optab = init_optab (LE);\n-  unord_optab = init_optab (UNORDERED);\n-\n-  neg_optab = init_optab (NEG);\n-  ssneg_optab = init_optab (SS_NEG);\n-  usneg_optab = init_optab (US_NEG);\n-  negv_optab = init_optabv (NEG);\n-  abs_optab = init_optab (ABS);\n-  absv_optab = init_optabv (ABS);\n-  addcc_optab = init_optab (UNKNOWN);\n-  one_cmpl_optab = init_optab (NOT);\n-  bswap_optab = init_optab (BSWAP);\n-  ffs_optab = init_optab (FFS);\n-  clz_optab = init_optab (CLZ);\n-  ctz_optab = init_optab (CTZ);\n-  popcount_optab = init_optab (POPCOUNT);\n-  parity_optab = init_optab (PARITY);\n-  sqrt_optab = init_optab (SQRT);\n-  floor_optab = init_optab (UNKNOWN);\n-  ceil_optab = init_optab (UNKNOWN);\n-  round_optab = init_optab (UNKNOWN);\n-  btrunc_optab = init_optab (UNKNOWN);\n-  nearbyint_optab = init_optab (UNKNOWN);\n-  rint_optab = init_optab (UNKNOWN);\n-  sincos_optab = init_optab (UNKNOWN);\n-  sin_optab = init_optab (UNKNOWN);\n-  asin_optab = init_optab (UNKNOWN);\n-  cos_optab = init_optab (UNKNOWN);\n-  acos_optab = init_optab (UNKNOWN);\n-  exp_optab = init_optab (UNKNOWN);\n-  exp10_optab = init_optab (UNKNOWN);\n-  exp2_optab = init_optab (UNKNOWN);\n-  expm1_optab = init_optab (UNKNOWN);\n-  ldexp_optab = init_optab (UNKNOWN);\n-  scalb_optab = init_optab (UNKNOWN);\n-  logb_optab = init_optab (UNKNOWN);\n-  ilogb_optab = init_optab (UNKNOWN);\n-  log_optab = init_optab (UNKNOWN);\n-  log10_optab = init_optab (UNKNOWN);\n-  log2_optab = init_optab (UNKNOWN);\n-  log1p_optab = init_optab (UNKNOWN);\n-  tan_optab = init_optab (UNKNOWN);\n-  atan_optab = init_optab (UNKNOWN);\n-  copysign_optab = init_optab (UNKNOWN);\n-  signbit_optab = init_optab (UNKNOWN);\n-\n-  isinf_optab = init_optab (UNKNOWN);\n-\n-  strlen_optab = init_optab (UNKNOWN);\n-  cbranch_optab = init_optab (UNKNOWN);\n-  cmov_optab = init_optab (UNKNOWN);\n-  cstore_optab = init_optab (UNKNOWN);\n-  push_optab = init_optab (UNKNOWN);\n-\n-  reduc_smax_optab = init_optab (UNKNOWN);\n-  reduc_umax_optab = init_optab (UNKNOWN);\n-  reduc_smin_optab = init_optab (UNKNOWN);\n-  reduc_umin_optab = init_optab (UNKNOWN);\n-  reduc_splus_optab = init_optab (UNKNOWN);\n-  reduc_uplus_optab = init_optab (UNKNOWN);\n-\n-  ssum_widen_optab = init_optab (UNKNOWN);\n-  usum_widen_optab = init_optab (UNKNOWN);\n-  sdot_prod_optab = init_optab (UNKNOWN); \n-  udot_prod_optab = init_optab (UNKNOWN);\n-\n-  vec_extract_optab = init_optab (UNKNOWN);\n-  vec_extract_even_optab = init_optab (UNKNOWN);\n-  vec_extract_odd_optab = init_optab (UNKNOWN);\n-  vec_interleave_high_optab = init_optab (UNKNOWN);\n-  vec_interleave_low_optab = init_optab (UNKNOWN);\n-  vec_set_optab = init_optab (UNKNOWN);\n-  vec_init_optab = init_optab (UNKNOWN);\n-  vec_shl_optab = init_optab (UNKNOWN);\n-  vec_shr_optab = init_optab (UNKNOWN);\n-  vec_realign_load_optab = init_optab (UNKNOWN);\n-  movmisalign_optab = init_optab (UNKNOWN);\n-  vec_widen_umult_hi_optab = init_optab (UNKNOWN);\n-  vec_widen_umult_lo_optab = init_optab (UNKNOWN);\n-  vec_widen_smult_hi_optab = init_optab (UNKNOWN);\n-  vec_widen_smult_lo_optab = init_optab (UNKNOWN);\n-  vec_unpacks_hi_optab = init_optab (UNKNOWN);\n-  vec_unpacks_lo_optab = init_optab (UNKNOWN);\n-  vec_unpacku_hi_optab = init_optab (UNKNOWN);\n-  vec_unpacku_lo_optab = init_optab (UNKNOWN);\n-  vec_unpacks_float_hi_optab = init_optab (UNKNOWN);\n-  vec_unpacks_float_lo_optab = init_optab (UNKNOWN);\n-  vec_unpacku_float_hi_optab = init_optab (UNKNOWN);\n-  vec_unpacku_float_lo_optab = init_optab (UNKNOWN);\n-  vec_pack_trunc_optab = init_optab (UNKNOWN);\n-  vec_pack_usat_optab = init_optab (UNKNOWN);\n-  vec_pack_ssat_optab = init_optab (UNKNOWN);\n-  vec_pack_ufix_trunc_optab = init_optab (UNKNOWN);\n-  vec_pack_sfix_trunc_optab = init_optab (UNKNOWN);\n-\n-  powi_optab = init_optab (UNKNOWN);\n+  init_optab (mov_optab, SET);\n+  init_optab (movstrict_optab, STRICT_LOW_PART);\n+  init_optab (cmp_optab, COMPARE);\n+\n+  init_optab (storent_optab, UNKNOWN);\n+\n+  init_optab (ucmp_optab, UNKNOWN);\n+  init_optab (tst_optab, UNKNOWN);\n+\n+  init_optab (eq_optab, EQ);\n+  init_optab (ne_optab, NE);\n+  init_optab (gt_optab, GT);\n+  init_optab (ge_optab, GE);\n+  init_optab (lt_optab, LT);\n+  init_optab (le_optab, LE);\n+  init_optab (unord_optab, UNORDERED);\n+\n+  init_optab (neg_optab, NEG);\n+  init_optab (ssneg_optab, SS_NEG);\n+  init_optab (usneg_optab, US_NEG);\n+  init_optabv (negv_optab, NEG);\n+  init_optab (abs_optab, ABS);\n+  init_optabv (absv_optab, ABS);\n+  init_optab (addcc_optab, UNKNOWN);\n+  init_optab (one_cmpl_optab, NOT);\n+  init_optab (bswap_optab, BSWAP);\n+  init_optab (ffs_optab, FFS);\n+  init_optab (clz_optab, CLZ);\n+  init_optab (ctz_optab, CTZ);\n+  init_optab (popcount_optab, POPCOUNT);\n+  init_optab (parity_optab, PARITY);\n+  init_optab (sqrt_optab, SQRT);\n+  init_optab (floor_optab, UNKNOWN);\n+  init_optab (ceil_optab, UNKNOWN);\n+  init_optab (round_optab, UNKNOWN);\n+  init_optab (btrunc_optab, UNKNOWN);\n+  init_optab (nearbyint_optab, UNKNOWN);\n+  init_optab (rint_optab, UNKNOWN);\n+  init_optab (sincos_optab, UNKNOWN);\n+  init_optab (sin_optab, UNKNOWN);\n+  init_optab (asin_optab, UNKNOWN);\n+  init_optab (cos_optab, UNKNOWN);\n+  init_optab (acos_optab, UNKNOWN);\n+  init_optab (exp_optab, UNKNOWN);\n+  init_optab (exp10_optab, UNKNOWN);\n+  init_optab (exp2_optab, UNKNOWN);\n+  init_optab (expm1_optab, UNKNOWN);\n+  init_optab (ldexp_optab, UNKNOWN);\n+  init_optab (scalb_optab, UNKNOWN);\n+  init_optab (logb_optab, UNKNOWN);\n+  init_optab (ilogb_optab, UNKNOWN);\n+  init_optab (log_optab, UNKNOWN);\n+  init_optab (log10_optab, UNKNOWN);\n+  init_optab (log2_optab, UNKNOWN);\n+  init_optab (log1p_optab, UNKNOWN);\n+  init_optab (tan_optab, UNKNOWN);\n+  init_optab (atan_optab, UNKNOWN);\n+  init_optab (copysign_optab, UNKNOWN);\n+  init_optab (signbit_optab, UNKNOWN);\n+\n+  init_optab (isinf_optab, UNKNOWN);\n+\n+  init_optab (strlen_optab, UNKNOWN);\n+  init_optab (cbranch_optab, UNKNOWN);\n+  init_optab (cmov_optab, UNKNOWN);\n+  init_optab (cstore_optab, UNKNOWN);\n+  init_optab (push_optab, UNKNOWN);\n+\n+  init_optab (reduc_smax_optab, UNKNOWN);\n+  init_optab (reduc_umax_optab, UNKNOWN);\n+  init_optab (reduc_smin_optab, UNKNOWN);\n+  init_optab (reduc_umin_optab, UNKNOWN);\n+  init_optab (reduc_splus_optab, UNKNOWN);\n+  init_optab (reduc_uplus_optab, UNKNOWN);\n+\n+  init_optab (ssum_widen_optab, UNKNOWN);\n+  init_optab (usum_widen_optab, UNKNOWN);\n+  init_optab (sdot_prod_optab, UNKNOWN); \n+  init_optab (udot_prod_optab, UNKNOWN);\n+\n+  init_optab (vec_extract_optab, UNKNOWN);\n+  init_optab (vec_extract_even_optab, UNKNOWN);\n+  init_optab (vec_extract_odd_optab, UNKNOWN);\n+  init_optab (vec_interleave_high_optab, UNKNOWN);\n+  init_optab (vec_interleave_low_optab, UNKNOWN);\n+  init_optab (vec_set_optab, UNKNOWN);\n+  init_optab (vec_init_optab, UNKNOWN);\n+  init_optab (vec_shl_optab, UNKNOWN);\n+  init_optab (vec_shr_optab, UNKNOWN);\n+  init_optab (vec_realign_load_optab, UNKNOWN);\n+  init_optab (movmisalign_optab, UNKNOWN);\n+  init_optab (vec_widen_umult_hi_optab, UNKNOWN);\n+  init_optab (vec_widen_umult_lo_optab, UNKNOWN);\n+  init_optab (vec_widen_smult_hi_optab, UNKNOWN);\n+  init_optab (vec_widen_smult_lo_optab, UNKNOWN);\n+  init_optab (vec_unpacks_hi_optab, UNKNOWN);\n+  init_optab (vec_unpacks_lo_optab, UNKNOWN);\n+  init_optab (vec_unpacku_hi_optab, UNKNOWN);\n+  init_optab (vec_unpacku_lo_optab, UNKNOWN);\n+  init_optab (vec_unpacks_float_hi_optab, UNKNOWN);\n+  init_optab (vec_unpacks_float_lo_optab, UNKNOWN);\n+  init_optab (vec_unpacku_float_hi_optab, UNKNOWN);\n+  init_optab (vec_unpacku_float_lo_optab, UNKNOWN);\n+  init_optab (vec_pack_trunc_optab, UNKNOWN);\n+  init_optab (vec_pack_usat_optab, UNKNOWN);\n+  init_optab (vec_pack_ssat_optab, UNKNOWN);\n+  init_optab (vec_pack_ufix_trunc_optab, UNKNOWN);\n+  init_optab (vec_pack_sfix_trunc_optab, UNKNOWN);\n+\n+  init_optab (powi_optab, UNKNOWN);\n \n   /* Conversions.  */\n-  sext_optab = init_convert_optab (SIGN_EXTEND);\n-  zext_optab = init_convert_optab (ZERO_EXTEND);\n-  trunc_optab = init_convert_optab (TRUNCATE);\n-  sfix_optab = init_convert_optab (FIX);\n-  ufix_optab = init_convert_optab (UNSIGNED_FIX);\n-  sfixtrunc_optab = init_convert_optab (UNKNOWN);\n-  ufixtrunc_optab = init_convert_optab (UNKNOWN);\n-  sfloat_optab = init_convert_optab (FLOAT);\n-  ufloat_optab = init_convert_optab (UNSIGNED_FLOAT);\n-  lrint_optab = init_convert_optab (UNKNOWN);\n-  lround_optab = init_convert_optab (UNKNOWN);\n-  lfloor_optab = init_convert_optab (UNKNOWN);\n-  lceil_optab = init_convert_optab (UNKNOWN);\n-\n-  fract_optab = init_convert_optab (FRACT_CONVERT);\n-  fractuns_optab = init_convert_optab (UNSIGNED_FRACT_CONVERT);\n-  satfract_optab = init_convert_optab (SAT_FRACT);\n-  satfractuns_optab = init_convert_optab (UNSIGNED_SAT_FRACT);\n+  init_convert_optab (sext_optab, SIGN_EXTEND);\n+  init_convert_optab (zext_optab, ZERO_EXTEND);\n+  init_convert_optab (trunc_optab, TRUNCATE);\n+  init_convert_optab (sfix_optab, FIX);\n+  init_convert_optab (ufix_optab, UNSIGNED_FIX);\n+  init_convert_optab (sfixtrunc_optab, UNKNOWN);\n+  init_convert_optab (ufixtrunc_optab, UNKNOWN);\n+  init_convert_optab (sfloat_optab, FLOAT);\n+  init_convert_optab (ufloat_optab, UNSIGNED_FLOAT);\n+  init_convert_optab (lrint_optab, UNKNOWN);\n+  init_convert_optab (lround_optab, UNKNOWN);\n+  init_convert_optab (lfloor_optab, UNKNOWN);\n+  init_convert_optab (lceil_optab, UNKNOWN);\n+\n+  init_convert_optab (fract_optab, FRACT_CONVERT);\n+  init_convert_optab (fractuns_optab, UNSIGNED_FRACT_CONVERT);\n+  init_convert_optab (satfract_optab, SAT_FRACT);\n+  init_convert_optab (satfractuns_optab, UNSIGNED_SAT_FRACT);\n \n   for (i = 0; i < NUM_MACHINE_MODES; i++)\n     {\n@@ -6744,8 +6755,8 @@ debug_optab_libfuncs (void)\n \toptab o;\n \trtx l;\n \n-\to = optab_table[i];\n-\tl = optab_libfunc (optab_table[i], j);\n+\to = &optab_table[i];\n+\tl = optab_libfunc (o, j);\n \tif (l)\n \t  {\n \t    gcc_assert (GET_CODE (l) == SYMBOL_REF);\n@@ -6764,7 +6775,7 @@ debug_optab_libfuncs (void)\n \t  convert_optab o;\n \t  rtx l;\n \n-\t  o = convert_optab_table[i];\n+\t  o = &convert_optab_table[i];\n \t  l = convert_optab_libfunc (o, j, k);\n \t  if (l)\n \t    {"}, {"sha": "91625debb737bc5bbe88cd24bf07ff4a452d05f7", "filename": "gcc/optabs.h", "status": "modified", "additions": 185, "deletions": 185, "changes": 370, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33727b5ecb2653eaa3688a4e9102cb454c1ff6a2/gcc%2Foptabs.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33727b5ecb2653eaa3688a4e9102cb454c1ff6a2/gcc%2Foptabs.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foptabs.h?ref=33727b5ecb2653eaa3688a4e9102cb454c1ff6a2", "patch": "@@ -360,172 +360,172 @@ enum optab_index\n   OTI_MAX\n };\n \n-extern optab optab_table[OTI_MAX];\n-\n-#define ssadd_optab (optab_table[OTI_ssadd])\n-#define usadd_optab (optab_table[OTI_usadd])\n-#define sssub_optab (optab_table[OTI_sssub])\n-#define ussub_optab (optab_table[OTI_ussub])\n-#define ssmul_optab (optab_table[OTI_ssmul])\n-#define usmul_optab (optab_table[OTI_usmul])\n-#define ssdiv_optab (optab_table[OTI_ssdiv])\n-#define usdiv_optab (optab_table[OTI_usdiv])\n-#define ssneg_optab (optab_table[OTI_ssneg])\n-#define usneg_optab (optab_table[OTI_usneg])\n-#define ssashl_optab (optab_table[OTI_ssashl])\n-#define usashl_optab (optab_table[OTI_usashl])\n-\n-#define add_optab (optab_table[OTI_add])\n-#define sub_optab (optab_table[OTI_sub])\n-#define smul_optab (optab_table[OTI_smul])\n-#define addv_optab (optab_table[OTI_addv])\n-#define subv_optab (optab_table[OTI_subv])\n-#define smul_highpart_optab (optab_table[OTI_smul_highpart])\n-#define umul_highpart_optab (optab_table[OTI_umul_highpart])\n-#define smul_widen_optab (optab_table[OTI_smul_widen])\n-#define umul_widen_optab (optab_table[OTI_umul_widen])\n-#define usmul_widen_optab (optab_table[OTI_usmul_widen])\n-#define smadd_widen_optab (optab_table[OTI_smadd_widen])\n-#define umadd_widen_optab (optab_table[OTI_umadd_widen])\n-#define ssmadd_widen_optab (optab_table[OTI_ssmadd_widen])\n-#define usmadd_widen_optab (optab_table[OTI_usmadd_widen])\n-#define smsub_widen_optab (optab_table[OTI_smsub_widen])\n-#define umsub_widen_optab (optab_table[OTI_umsub_widen])\n-#define ssmsub_widen_optab (optab_table[OTI_ssmsub_widen])\n-#define usmsub_widen_optab (optab_table[OTI_usmsub_widen])\n-#define sdiv_optab (optab_table[OTI_sdiv])\n-#define smulv_optab (optab_table[OTI_smulv])\n-#define sdivv_optab (optab_table[OTI_sdivv])\n-#define sdivmod_optab (optab_table[OTI_sdivmod])\n-#define udiv_optab (optab_table[OTI_udiv])\n-#define udivmod_optab (optab_table[OTI_udivmod])\n-#define smod_optab (optab_table[OTI_smod])\n-#define umod_optab (optab_table[OTI_umod])\n-#define fmod_optab (optab_table[OTI_fmod])\n-#define remainder_optab (optab_table[OTI_remainder])\n-#define ftrunc_optab (optab_table[OTI_ftrunc])\n-#define and_optab (optab_table[OTI_and])\n-#define ior_optab (optab_table[OTI_ior])\n-#define xor_optab (optab_table[OTI_xor])\n-#define ashl_optab (optab_table[OTI_ashl])\n-#define lshr_optab (optab_table[OTI_lshr])\n-#define ashr_optab (optab_table[OTI_ashr])\n-#define rotl_optab (optab_table[OTI_rotl])\n-#define rotr_optab (optab_table[OTI_rotr])\n-#define smin_optab (optab_table[OTI_smin])\n-#define smax_optab (optab_table[OTI_smax])\n-#define umin_optab (optab_table[OTI_umin])\n-#define umax_optab (optab_table[OTI_umax])\n-#define pow_optab (optab_table[OTI_pow])\n-#define atan2_optab (optab_table[OTI_atan2])\n-\n-#define mov_optab (optab_table[OTI_mov])\n-#define movstrict_optab (optab_table[OTI_movstrict])\n-#define movmisalign_optab (optab_table[OTI_movmisalign])\n-#define storent_optab (optab_table[OTI_storent])\n-\n-#define neg_optab (optab_table[OTI_neg])\n-#define negv_optab (optab_table[OTI_negv])\n-#define abs_optab (optab_table[OTI_abs])\n-#define absv_optab (optab_table[OTI_absv])\n-#define one_cmpl_optab (optab_table[OTI_one_cmpl])\n-#define bswap_optab (optab_table[OTI_bswap])\n-#define ffs_optab (optab_table[OTI_ffs])\n-#define clz_optab (optab_table[OTI_clz])\n-#define ctz_optab (optab_table[OTI_ctz])\n-#define popcount_optab (optab_table[OTI_popcount])\n-#define parity_optab (optab_table[OTI_parity])\n-#define sqrt_optab (optab_table[OTI_sqrt])\n-#define sincos_optab (optab_table[OTI_sincos])\n-#define sin_optab (optab_table[OTI_sin])\n-#define asin_optab (optab_table[OTI_asin])\n-#define cos_optab (optab_table[OTI_cos])\n-#define acos_optab (optab_table[OTI_acos])\n-#define exp_optab (optab_table[OTI_exp])\n-#define exp10_optab (optab_table[OTI_exp10])\n-#define exp2_optab (optab_table[OTI_exp2])\n-#define expm1_optab (optab_table[OTI_expm1])\n-#define ldexp_optab (optab_table[OTI_ldexp])\n-#define scalb_optab (optab_table[OTI_scalb])\n-#define logb_optab (optab_table[OTI_logb])\n-#define ilogb_optab (optab_table[OTI_ilogb])\n-#define log_optab (optab_table[OTI_log])\n-#define log10_optab (optab_table[OTI_log10])\n-#define log2_optab (optab_table[OTI_log2])\n-#define log1p_optab (optab_table[OTI_log1p])\n-#define floor_optab (optab_table[OTI_floor])\n-#define ceil_optab (optab_table[OTI_ceil])\n-#define btrunc_optab (optab_table[OTI_btrunc])\n-#define round_optab (optab_table[OTI_round])\n-#define nearbyint_optab (optab_table[OTI_nearbyint])\n-#define rint_optab (optab_table[OTI_rint])\n-#define tan_optab (optab_table[OTI_tan])\n-#define atan_optab (optab_table[OTI_atan])\n-#define copysign_optab (optab_table[OTI_copysign])\n-#define signbit_optab (optab_table[OTI_signbit])\n-#define isinf_optab (optab_table[OTI_isinf])\n-\n-#define cmp_optab (optab_table[OTI_cmp])\n-#define ucmp_optab (optab_table[OTI_ucmp])\n-#define tst_optab (optab_table[OTI_tst])\n-\n-#define eq_optab (optab_table[OTI_eq])\n-#define ne_optab (optab_table[OTI_ne])\n-#define gt_optab (optab_table[OTI_gt])\n-#define ge_optab (optab_table[OTI_ge])\n-#define lt_optab (optab_table[OTI_lt])\n-#define le_optab (optab_table[OTI_le])\n-#define unord_optab (optab_table[OTI_unord])\n-\n-#define strlen_optab (optab_table[OTI_strlen])\n-\n-#define cbranch_optab (optab_table[OTI_cbranch])\n-#define cmov_optab (optab_table[OTI_cmov])\n-#define cstore_optab (optab_table[OTI_cstore])\n-#define push_optab (optab_table[OTI_push])\n-#define addcc_optab (optab_table[OTI_addcc])\n-\n-#define reduc_smax_optab (optab_table[OTI_reduc_smax])\n-#define reduc_umax_optab (optab_table[OTI_reduc_umax])\n-#define reduc_smin_optab (optab_table[OTI_reduc_smin])\n-#define reduc_umin_optab (optab_table[OTI_reduc_umin])\n-#define reduc_splus_optab (optab_table[OTI_reduc_splus])\n-#define reduc_uplus_optab (optab_table[OTI_reduc_uplus])\n-\n-#define ssum_widen_optab (optab_table[OTI_ssum_widen])\n-#define usum_widen_optab (optab_table[OTI_usum_widen])\n-#define sdot_prod_optab (optab_table[OTI_sdot_prod])\n-#define udot_prod_optab (optab_table[OTI_udot_prod])\n-\n-#define vec_set_optab (optab_table[OTI_vec_set])\n-#define vec_extract_optab (optab_table[OTI_vec_extract])\n-#define vec_extract_even_optab (optab_table[OTI_vec_extract_even])\n-#define vec_extract_odd_optab (optab_table[OTI_vec_extract_odd])\n-#define vec_interleave_high_optab (optab_table[OTI_vec_interleave_high])\n-#define vec_interleave_low_optab (optab_table[OTI_vec_interleave_low])\n-#define vec_init_optab (optab_table[OTI_vec_init])\n-#define vec_shl_optab (optab_table[OTI_vec_shl])\n-#define vec_shr_optab (optab_table[OTI_vec_shr])\n-#define vec_realign_load_optab (optab_table[OTI_vec_realign_load])\n-#define vec_widen_umult_hi_optab (optab_table[OTI_vec_widen_umult_hi])\n-#define vec_widen_umult_lo_optab (optab_table[OTI_vec_widen_umult_lo])\n-#define vec_widen_smult_hi_optab (optab_table[OTI_vec_widen_smult_hi])\n-#define vec_widen_smult_lo_optab (optab_table[OTI_vec_widen_smult_lo])\n-#define vec_unpacks_hi_optab (optab_table[OTI_vec_unpacks_hi])\n-#define vec_unpacks_lo_optab (optab_table[OTI_vec_unpacks_lo])\n-#define vec_unpacku_hi_optab (optab_table[OTI_vec_unpacku_hi])\n-#define vec_unpacku_lo_optab (optab_table[OTI_vec_unpacku_lo])\n-#define vec_unpacks_float_hi_optab (optab_table[OTI_vec_unpacks_float_hi])\n-#define vec_unpacks_float_lo_optab (optab_table[OTI_vec_unpacks_float_lo])\n-#define vec_unpacku_float_hi_optab (optab_table[OTI_vec_unpacku_float_hi])\n-#define vec_unpacku_float_lo_optab (optab_table[OTI_vec_unpacku_float_lo])\n-#define vec_pack_trunc_optab (optab_table[OTI_vec_pack_trunc])\n-#define vec_pack_ssat_optab (optab_table[OTI_vec_pack_ssat])\n-#define vec_pack_usat_optab (optab_table[OTI_vec_pack_usat])\n-#define vec_pack_sfix_trunc_optab (optab_table[OTI_vec_pack_sfix_trunc])\n-#define vec_pack_ufix_trunc_optab (optab_table[OTI_vec_pack_ufix_trunc])\n-\n-#define powi_optab (optab_table[OTI_powi])\n+extern struct optab optab_table[OTI_MAX];\n+\n+#define ssadd_optab (&optab_table[OTI_ssadd])\n+#define usadd_optab (&optab_table[OTI_usadd])\n+#define sssub_optab (&optab_table[OTI_sssub])\n+#define ussub_optab (&optab_table[OTI_ussub])\n+#define ssmul_optab (&optab_table[OTI_ssmul])\n+#define usmul_optab (&optab_table[OTI_usmul])\n+#define ssdiv_optab (&optab_table[OTI_ssdiv])\n+#define usdiv_optab (&optab_table[OTI_usdiv])\n+#define ssneg_optab (&optab_table[OTI_ssneg])\n+#define usneg_optab (&optab_table[OTI_usneg])\n+#define ssashl_optab (&optab_table[OTI_ssashl])\n+#define usashl_optab (&optab_table[OTI_usashl])\n+\n+#define add_optab (&optab_table[OTI_add])\n+#define sub_optab (&optab_table[OTI_sub])\n+#define smul_optab (&optab_table[OTI_smul])\n+#define addv_optab (&optab_table[OTI_addv])\n+#define subv_optab (&optab_table[OTI_subv])\n+#define smul_highpart_optab (&optab_table[OTI_smul_highpart])\n+#define umul_highpart_optab (&optab_table[OTI_umul_highpart])\n+#define smul_widen_optab (&optab_table[OTI_smul_widen])\n+#define umul_widen_optab (&optab_table[OTI_umul_widen])\n+#define usmul_widen_optab (&optab_table[OTI_usmul_widen])\n+#define smadd_widen_optab (&optab_table[OTI_smadd_widen])\n+#define umadd_widen_optab (&optab_table[OTI_umadd_widen])\n+#define ssmadd_widen_optab (&optab_table[OTI_ssmadd_widen])\n+#define usmadd_widen_optab (&optab_table[OTI_usmadd_widen])\n+#define smsub_widen_optab (&optab_table[OTI_smsub_widen])\n+#define umsub_widen_optab (&optab_table[OTI_umsub_widen])\n+#define ssmsub_widen_optab (&optab_table[OTI_ssmsub_widen])\n+#define usmsub_widen_optab (&optab_table[OTI_usmsub_widen])\n+#define sdiv_optab (&optab_table[OTI_sdiv])\n+#define smulv_optab (&optab_table[OTI_smulv])\n+#define sdivv_optab (&optab_table[OTI_sdivv])\n+#define sdivmod_optab (&optab_table[OTI_sdivmod])\n+#define udiv_optab (&optab_table[OTI_udiv])\n+#define udivmod_optab (&optab_table[OTI_udivmod])\n+#define smod_optab (&optab_table[OTI_smod])\n+#define umod_optab (&optab_table[OTI_umod])\n+#define fmod_optab (&optab_table[OTI_fmod])\n+#define remainder_optab (&optab_table[OTI_remainder])\n+#define ftrunc_optab (&optab_table[OTI_ftrunc])\n+#define and_optab (&optab_table[OTI_and])\n+#define ior_optab (&optab_table[OTI_ior])\n+#define xor_optab (&optab_table[OTI_xor])\n+#define ashl_optab (&optab_table[OTI_ashl])\n+#define lshr_optab (&optab_table[OTI_lshr])\n+#define ashr_optab (&optab_table[OTI_ashr])\n+#define rotl_optab (&optab_table[OTI_rotl])\n+#define rotr_optab (&optab_table[OTI_rotr])\n+#define smin_optab (&optab_table[OTI_smin])\n+#define smax_optab (&optab_table[OTI_smax])\n+#define umin_optab (&optab_table[OTI_umin])\n+#define umax_optab (&optab_table[OTI_umax])\n+#define pow_optab (&optab_table[OTI_pow])\n+#define atan2_optab (&optab_table[OTI_atan2])\n+\n+#define mov_optab (&optab_table[OTI_mov])\n+#define movstrict_optab (&optab_table[OTI_movstrict])\n+#define movmisalign_optab (&optab_table[OTI_movmisalign])\n+#define storent_optab (&optab_table[OTI_storent])\n+\n+#define neg_optab (&optab_table[OTI_neg])\n+#define negv_optab (&optab_table[OTI_negv])\n+#define abs_optab (&optab_table[OTI_abs])\n+#define absv_optab (&optab_table[OTI_absv])\n+#define one_cmpl_optab (&optab_table[OTI_one_cmpl])\n+#define bswap_optab (&optab_table[OTI_bswap])\n+#define ffs_optab (&optab_table[OTI_ffs])\n+#define clz_optab (&optab_table[OTI_clz])\n+#define ctz_optab (&optab_table[OTI_ctz])\n+#define popcount_optab (&optab_table[OTI_popcount])\n+#define parity_optab (&optab_table[OTI_parity])\n+#define sqrt_optab (&optab_table[OTI_sqrt])\n+#define sincos_optab (&optab_table[OTI_sincos])\n+#define sin_optab (&optab_table[OTI_sin])\n+#define asin_optab (&optab_table[OTI_asin])\n+#define cos_optab (&optab_table[OTI_cos])\n+#define acos_optab (&optab_table[OTI_acos])\n+#define exp_optab (&optab_table[OTI_exp])\n+#define exp10_optab (&optab_table[OTI_exp10])\n+#define exp2_optab (&optab_table[OTI_exp2])\n+#define expm1_optab (&optab_table[OTI_expm1])\n+#define ldexp_optab (&optab_table[OTI_ldexp])\n+#define scalb_optab (&optab_table[OTI_scalb])\n+#define logb_optab (&optab_table[OTI_logb])\n+#define ilogb_optab (&optab_table[OTI_ilogb])\n+#define log_optab (&optab_table[OTI_log])\n+#define log10_optab (&optab_table[OTI_log10])\n+#define log2_optab (&optab_table[OTI_log2])\n+#define log1p_optab (&optab_table[OTI_log1p])\n+#define floor_optab (&optab_table[OTI_floor])\n+#define ceil_optab (&optab_table[OTI_ceil])\n+#define btrunc_optab (&optab_table[OTI_btrunc])\n+#define round_optab (&optab_table[OTI_round])\n+#define nearbyint_optab (&optab_table[OTI_nearbyint])\n+#define rint_optab (&optab_table[OTI_rint])\n+#define tan_optab (&optab_table[OTI_tan])\n+#define atan_optab (&optab_table[OTI_atan])\n+#define copysign_optab (&optab_table[OTI_copysign])\n+#define signbit_optab (&optab_table[OTI_signbit])\n+#define isinf_optab (&optab_table[OTI_isinf])\n+\n+#define cmp_optab (&optab_table[OTI_cmp])\n+#define ucmp_optab (&optab_table[OTI_ucmp])\n+#define tst_optab (&optab_table[OTI_tst])\n+\n+#define eq_optab (&optab_table[OTI_eq])\n+#define ne_optab (&optab_table[OTI_ne])\n+#define gt_optab (&optab_table[OTI_gt])\n+#define ge_optab (&optab_table[OTI_ge])\n+#define lt_optab (&optab_table[OTI_lt])\n+#define le_optab (&optab_table[OTI_le])\n+#define unord_optab (&optab_table[OTI_unord])\n+\n+#define strlen_optab (&optab_table[OTI_strlen])\n+\n+#define cbranch_optab (&optab_table[OTI_cbranch])\n+#define cmov_optab (&optab_table[OTI_cmov])\n+#define cstore_optab (&optab_table[OTI_cstore])\n+#define push_optab (&optab_table[OTI_push])\n+#define addcc_optab (&optab_table[OTI_addcc])\n+\n+#define reduc_smax_optab (&optab_table[OTI_reduc_smax])\n+#define reduc_umax_optab (&optab_table[OTI_reduc_umax])\n+#define reduc_smin_optab (&optab_table[OTI_reduc_smin])\n+#define reduc_umin_optab (&optab_table[OTI_reduc_umin])\n+#define reduc_splus_optab (&optab_table[OTI_reduc_splus])\n+#define reduc_uplus_optab (&optab_table[OTI_reduc_uplus])\n+\n+#define ssum_widen_optab (&optab_table[OTI_ssum_widen])\n+#define usum_widen_optab (&optab_table[OTI_usum_widen])\n+#define sdot_prod_optab (&optab_table[OTI_sdot_prod])\n+#define udot_prod_optab (&optab_table[OTI_udot_prod])\n+\n+#define vec_set_optab (&optab_table[OTI_vec_set])\n+#define vec_extract_optab (&optab_table[OTI_vec_extract])\n+#define vec_extract_even_optab (&optab_table[OTI_vec_extract_even])\n+#define vec_extract_odd_optab (&optab_table[OTI_vec_extract_odd])\n+#define vec_interleave_high_optab (&optab_table[OTI_vec_interleave_high])\n+#define vec_interleave_low_optab (&optab_table[OTI_vec_interleave_low])\n+#define vec_init_optab (&optab_table[OTI_vec_init])\n+#define vec_shl_optab (&optab_table[OTI_vec_shl])\n+#define vec_shr_optab (&optab_table[OTI_vec_shr])\n+#define vec_realign_load_optab (&optab_table[OTI_vec_realign_load])\n+#define vec_widen_umult_hi_optab (&optab_table[OTI_vec_widen_umult_hi])\n+#define vec_widen_umult_lo_optab (&optab_table[OTI_vec_widen_umult_lo])\n+#define vec_widen_smult_hi_optab (&optab_table[OTI_vec_widen_smult_hi])\n+#define vec_widen_smult_lo_optab (&optab_table[OTI_vec_widen_smult_lo])\n+#define vec_unpacks_hi_optab (&optab_table[OTI_vec_unpacks_hi])\n+#define vec_unpacks_lo_optab (&optab_table[OTI_vec_unpacks_lo])\n+#define vec_unpacku_hi_optab (&optab_table[OTI_vec_unpacku_hi])\n+#define vec_unpacku_lo_optab (&optab_table[OTI_vec_unpacku_lo])\n+#define vec_unpacks_float_hi_optab (&optab_table[OTI_vec_unpacks_float_hi])\n+#define vec_unpacks_float_lo_optab (&optab_table[OTI_vec_unpacks_float_lo])\n+#define vec_unpacku_float_hi_optab (&optab_table[OTI_vec_unpacku_float_hi])\n+#define vec_unpacku_float_lo_optab (&optab_table[OTI_vec_unpacku_float_lo])\n+#define vec_pack_trunc_optab (&optab_table[OTI_vec_pack_trunc])\n+#define vec_pack_ssat_optab (&optab_table[OTI_vec_pack_ssat])\n+#define vec_pack_usat_optab (&optab_table[OTI_vec_pack_usat])\n+#define vec_pack_sfix_trunc_optab (&optab_table[OTI_vec_pack_sfix_trunc])\n+#define vec_pack_ufix_trunc_optab (&optab_table[OTI_vec_pack_ufix_trunc])\n+\n+#define powi_optab (&optab_table[OTI_powi])\n \n /* Conversion optabs have their own table and indexes.  */\n enum convert_optab_index\n@@ -556,25 +556,25 @@ enum convert_optab_index\n   COI_MAX\n };\n \n-extern convert_optab convert_optab_table[COI_MAX];\n-\n-#define sext_optab (convert_optab_table[COI_sext])\n-#define zext_optab (convert_optab_table[COI_zext])\n-#define trunc_optab (convert_optab_table[COI_trunc])\n-#define sfix_optab (convert_optab_table[COI_sfix])\n-#define ufix_optab (convert_optab_table[COI_ufix])\n-#define sfixtrunc_optab (convert_optab_table[COI_sfixtrunc])\n-#define ufixtrunc_optab (convert_optab_table[COI_ufixtrunc])\n-#define sfloat_optab (convert_optab_table[COI_sfloat])\n-#define ufloat_optab (convert_optab_table[COI_ufloat])\n-#define lrint_optab (convert_optab_table[COI_lrint])\n-#define lround_optab (convert_optab_table[COI_lround])\n-#define lfloor_optab (convert_optab_table[COI_lfloor])\n-#define lceil_optab (convert_optab_table[COI_lceil])\n-#define fract_optab (convert_optab_table[COI_fract])\n-#define fractuns_optab (convert_optab_table[COI_fractuns])\n-#define satfract_optab (convert_optab_table[COI_satfract])\n-#define satfractuns_optab (convert_optab_table[COI_satfractuns])\n+extern struct convert_optab convert_optab_table[COI_MAX];\n+\n+#define sext_optab (&convert_optab_table[COI_sext])\n+#define zext_optab (&convert_optab_table[COI_zext])\n+#define trunc_optab (&convert_optab_table[COI_trunc])\n+#define sfix_optab (&convert_optab_table[COI_sfix])\n+#define ufix_optab (&convert_optab_table[COI_ufix])\n+#define sfixtrunc_optab (&convert_optab_table[COI_sfixtrunc])\n+#define ufixtrunc_optab (&convert_optab_table[COI_ufixtrunc])\n+#define sfloat_optab (&convert_optab_table[COI_sfloat])\n+#define ufloat_optab (&convert_optab_table[COI_ufloat])\n+#define lrint_optab (&convert_optab_table[COI_lrint])\n+#define lround_optab (&convert_optab_table[COI_lround])\n+#define lfloor_optab (&convert_optab_table[COI_lfloor])\n+#define lceil_optab (&convert_optab_table[COI_lceil])\n+#define fract_optab (&convert_optab_table[COI_fract])\n+#define fractuns_optab (&convert_optab_table[COI_fractuns])\n+#define satfract_optab (&convert_optab_table[COI_satfract])\n+#define satfractuns_optab (&convert_optab_table[COI_satfractuns])\n \n /* These arrays record the insn_code of insns that may be needed to\n    perform input and output reloads of special objects.  They provide a"}]}