{"sha": "1ebd8d9ac1a51af9a1a65f1db575fd2499835074", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWViZDhkOWFjMWE1MWFmOWExYTY1ZjFkYjU3NWZkMjQ5OTgzNTA3NA==", "commit": {"author": {"name": "Steven Bosscher", "email": "stevenb@suse.de", "date": "2005-09-29T12:25:10Z"}, "committer": {"name": "Steven Bosscher", "email": "steven@gcc.gnu.org", "date": "2005-09-29T12:25:10Z"}, "message": "re PR tree-optimization/23911 (Failure to propagate constants from a const initializer for _Complex)\n\ngcc/\n\tPR tree-optimization/23911\n\t* tree-ssa-ccp.c (fold_const_aggregate_ref): Handle REALPART_EXPR\n\tand IMAGPART_EXPR too.\n\ntestsuite/\n\t* gcc.dg/pr23911.c: New test.\n\nFrom-SVN: r104771", "tree": {"sha": "bb658ab7113eb0a075f5c79afff242ff5018b2f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bb658ab7113eb0a075f5c79afff242ff5018b2f5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1ebd8d9ac1a51af9a1a65f1db575fd2499835074", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ebd8d9ac1a51af9a1a65f1db575fd2499835074", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1ebd8d9ac1a51af9a1a65f1db575fd2499835074", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ebd8d9ac1a51af9a1a65f1db575fd2499835074/comments", "author": null, "committer": null, "parents": [{"sha": "577b2a064ee8634cd57b36cecddb4e9e2a57e51c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/577b2a064ee8634cd57b36cecddb4e9e2a57e51c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/577b2a064ee8634cd57b36cecddb4e9e2a57e51c"}], "stats": {"total": 41, "additions": 41, "deletions": 0}, "files": [{"sha": "fb6640308a1fdfb407240d02d4239348389970a8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ebd8d9ac1a51af9a1a65f1db575fd2499835074/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ebd8d9ac1a51af9a1a65f1db575fd2499835074/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1ebd8d9ac1a51af9a1a65f1db575fd2499835074", "patch": "@@ -1,3 +1,9 @@\n+2005-09-29  Steven Bosscher  <stevenb@suse.de>\n+\n+\tPR tree-optimization/23911\n+\t* tree-ssa-ccp.c (fold_const_aggregate_ref): Handle REALPART_EXPR\n+\tand IMAGPART_EXPR too.\n+\n 2005-09-28  Mark Mitchell  <mark@codesourcery.com>\n \n \tPR 17886"}, {"sha": "6146c2387f668a682bf621c3516ff7d9fc9478b0", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ebd8d9ac1a51af9a1a65f1db575fd2499835074/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ebd8d9ac1a51af9a1a65f1db575fd2499835074/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1ebd8d9ac1a51af9a1a65f1db575fd2499835074", "patch": "@@ -1,3 +1,7 @@\n+2005-09-29  Steven Bosscher  <stevenb@suse.de>\n+\n+\t* gcc.dg/pr23911.c: New test.\n+\n 2005-09-28  Mark Mitchell  <mark@codesourcery.com>\n \n \t* g++.dg/opt/pr19650.C: Use -w -fpermissive."}, {"sha": "1003075b39dbd49eb0f2106f82ed3092f439f959", "filename": "gcc/testsuite/gcc.dg/pr23911.c", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ebd8d9ac1a51af9a1a65f1db575fd2499835074/gcc%2Ftestsuite%2Fgcc.dg%2Fpr23911.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ebd8d9ac1a51af9a1a65f1db575fd2499835074/gcc%2Ftestsuite%2Fgcc.dg%2Fpr23911.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr23911.c?ref=1ebd8d9ac1a51af9a1a65f1db575fd2499835074", "patch": "@@ -0,0 +1,22 @@\n+/* This was a missed optimization in tree constant propagation\n+   that CSE would catch later on.  */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fdump-tree-store_ccp\" } */\n+\n+double _Complex *a; \n+const double _Complex b[10] = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9}; \n+ \n+void \n+test (void) \n+{ \n+  a[0] = b[0] + b[1]; \n+  a[1] = b[0] + b[1]; \n+  return; \n+} \n+\n+/* After store_ccp, there should not be any assignments from real or\n+   imaginary parts anymore.  The constants should be loaded from b and\n+   propagated into the elements of a.  */\n+/* { dg-final { scan-tree-dump-times \"= CR\" 0 \"store_ccp\" } } */\n+/* { dg-final { scan-tree-dump-times \"= CI\" 0 \"store_ccp\" } } */\n+/* { dg-final { cleanup-tree-dump \"store_ccp\" } } */"}, {"sha": "43b8129109b08ed0fc3dda67ba3230aade6da2ce", "filename": "gcc/tree-ssa-ccp.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ebd8d9ac1a51af9a1a65f1db575fd2499835074/gcc%2Ftree-ssa-ccp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ebd8d9ac1a51af9a1a65f1db575fd2499835074/gcc%2Ftree-ssa-ccp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-ccp.c?ref=1ebd8d9ac1a51af9a1a65f1db575fd2499835074", "patch": "@@ -1045,6 +1045,15 @@ fold_const_aggregate_ref (tree t)\n \t  return cval;\n       break;\n \n+    case REALPART_EXPR:\n+    case IMAGPART_EXPR:\n+      {\n+\ttree c = fold_const_aggregate_ref (TREE_OPERAND (t, 0));\n+\tif (c && TREE_CODE (c) == COMPLEX_CST)\n+\t  return fold_build1 (TREE_CODE (t), TREE_TYPE (t), c);\n+\tbreak;\n+      }\n+    \n     default:\n       break;\n     }"}]}