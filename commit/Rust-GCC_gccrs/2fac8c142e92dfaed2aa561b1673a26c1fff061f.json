{"sha": "2fac8c142e92dfaed2aa561b1673a26c1fff061f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmZhYzhjMTQyZTkyZGZhZWQyYWE1NjFiMTY3M2EyNmMxZmZmMDYxZg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2016-03-21T13:50:50Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2016-03-21T13:50:50Z"}, "message": "re PR tree-optimization/70310 (wrong code with vector compare at -O0)\n\n2016-03-21  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/70310\n\t* tree-vect-generic.c (expand_vector_condition): Fold the built\n\tcondition.\n\n\t* gcc.dg/torture/pr70310.c: New testcase.\n\nFrom-SVN: r234369", "tree": {"sha": "a5566024809b0b8210ed61d1335deb870db31259", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a5566024809b0b8210ed61d1335deb870db31259"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2fac8c142e92dfaed2aa561b1673a26c1fff061f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2fac8c142e92dfaed2aa561b1673a26c1fff061f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2fac8c142e92dfaed2aa561b1673a26c1fff061f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2fac8c142e92dfaed2aa561b1673a26c1fff061f/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e9bde85499f691bc790b6b8be095900cb72c8458", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9bde85499f691bc790b6b8be095900cb72c8458", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e9bde85499f691bc790b6b8be095900cb72c8458"}], "stats": {"total": 33, "additions": 32, "deletions": 1}, "files": [{"sha": "fc480c72ebc8ee7231b5a5e15aade9a5a7f65f0a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fac8c142e92dfaed2aa561b1673a26c1fff061f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fac8c142e92dfaed2aa561b1673a26c1fff061f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2fac8c142e92dfaed2aa561b1673a26c1fff061f", "patch": "@@ -1,3 +1,9 @@\n+2016-03-21  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/70310\n+\t* tree-vect-generic.c (expand_vector_condition): Fold the built\n+\tcondition.\n+\n 2016-03-21  Kirill Yukhin  <kirill.yukhin@intel.com>\n \n \tPR target/70293"}, {"sha": "78802920f69a7fad26b3a1fe1e5fe7464b0a663d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fac8c142e92dfaed2aa561b1673a26c1fff061f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fac8c142e92dfaed2aa561b1673a26c1fff061f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2fac8c142e92dfaed2aa561b1673a26c1fff061f", "patch": "@@ -1,3 +1,8 @@\n+2016-03-21  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/70310\n+\t* gcc.dg/torture/pr70310.c: New testcase.\n+\n 2016-03-21  Kirill Yukhin  <kirill.yukhin@intel.com>\n \n \tPR target/70293"}, {"sha": "a962562fca2d1ef282cbf55dba17946df3393c20", "filename": "gcc/testsuite/gcc.dg/torture/pr70310.c", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fac8c142e92dfaed2aa561b1673a26c1fff061f/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr70310.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fac8c142e92dfaed2aa561b1673a26c1fff061f/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr70310.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr70310.c?ref=2fac8c142e92dfaed2aa561b1673a26c1fff061f", "patch": "@@ -0,0 +1,20 @@\n+/* { dg-do run } */\n+\n+typedef unsigned char v32u8 __attribute__ ((vector_size (32)));\n+\n+unsigned __attribute__((noinline, noclone))\n+foo(unsigned u)\n+{\n+  v32u8 v32u8_0 = (v32u8){} > (v32u8){-u};\n+  return v32u8_0[31] + v32u8_0[0];\n+}\n+\n+int\n+main ()\n+{\n+  unsigned x = foo(0);\n+  __builtin_printf (\"%08x\\n\",x);\n+  if (x != 0)\n+    __builtin_abort();\n+  return 0;\n+}"}, {"sha": "ce9127035ed72e280084bf4e06a65dde1f33ea9f", "filename": "gcc/tree-vect-generic.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fac8c142e92dfaed2aa561b1673a26c1fff061f/gcc%2Ftree-vect-generic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fac8c142e92dfaed2aa561b1673a26c1fff061f/gcc%2Ftree-vect-generic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-generic.c?ref=2fac8c142e92dfaed2aa561b1673a26c1fff061f", "patch": "@@ -897,7 +897,7 @@ expand_vector_condition (gimple_stmt_iterator *gsi)\n \t{\n \t  tree aa1 = tree_vec_extract (gsi, comp_inner_type, a1, width, index);\n \t  tree aa2 = tree_vec_extract (gsi, comp_inner_type, a2, width, index);\n-\t  aa = build2 (TREE_CODE (a), cond_type, aa1, aa2);\n+\t  aa = fold_build2 (TREE_CODE (a), cond_type, aa1, aa2);\n \t}\n       else\n \taa = tree_vec_extract (gsi, cond_type, a, width, index);"}]}