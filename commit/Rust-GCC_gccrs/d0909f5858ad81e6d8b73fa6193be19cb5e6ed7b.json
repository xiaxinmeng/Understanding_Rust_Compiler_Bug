{"sha": "d0909f5858ad81e6d8b73fa6193be19cb5e6ed7b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDA5MDlmNTg1OGFkODFlNmQ4YjczZmE2MTkzYmUxOWNiNWU2ZWQ3Yg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2020-06-17T12:57:59Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2020-06-17T13:01:25Z"}, "message": "tree-optimization/95717 - fix SSA update for vectorizer epilogue\n\nThis fixes yet another issue with the custom SSA updating in the\nvectorizer when we copy from the non-if-converted loop.  We must\nnot mess with current defs before we updated the BB copies.\n\n2020-06-17  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/95717\n\t* tree-vect-loop-manip.c (slpeel_tree_duplicate_loop_to_edge_cfg):\n\tMove BB SSA updating before exit/latch PHI current def copying.\n\n\t* g++.dg/torture/pr95717.C: New testcase.", "tree": {"sha": "30866025a8611fbc7c0b0d983a73fc96cdf05092", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/30866025a8611fbc7c0b0d983a73fc96cdf05092"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d0909f5858ad81e6d8b73fa6193be19cb5e6ed7b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d0909f5858ad81e6d8b73fa6193be19cb5e6ed7b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d0909f5858ad81e6d8b73fa6193be19cb5e6ed7b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d0909f5858ad81e6d8b73fa6193be19cb5e6ed7b/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9efbb03616f556dcceabe364f734b5b11fb13587", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9efbb03616f556dcceabe364f734b5b11fb13587", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9efbb03616f556dcceabe364f734b5b11fb13587"}], "stats": {"total": 20, "additions": 16, "deletions": 4}, "files": [{"sha": "362dc10656bea7809c735c699871114e84e28e05", "filename": "gcc/testsuite/g++.dg/torture/pr95717.C", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0909f5858ad81e6d8b73fa6193be19cb5e6ed7b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr95717.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0909f5858ad81e6d8b73fa6193be19cb5e6ed7b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr95717.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr95717.C?ref=d0909f5858ad81e6d8b73fa6193be19cb5e6ed7b", "patch": "@@ -0,0 +1,12 @@\n+// { dg-do compile }\n+\n+bool a;\n+extern bool b[];\n+long c, d;\n+int *f;\n+void g(bool h)\n+{\n+  for (short e = 0; e < c; e = 4)\n+    for (; d; d++)\n+      b[d] = a = f[d] ? c ? h : 0 : h;\n+}"}, {"sha": "169ea64fd9e9e633341ed28143ed83bb730cde38", "filename": "gcc/tree-vect-loop-manip.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0909f5858ad81e6d8b73fa6193be19cb5e6ed7b/gcc%2Ftree-vect-loop-manip.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0909f5858ad81e6d8b73fa6193be19cb5e6ed7b/gcc%2Ftree-vect-loop-manip.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-loop-manip.c?ref=d0909f5858ad81e6d8b73fa6193be19cb5e6ed7b", "patch": "@@ -1053,6 +1053,10 @@ slpeel_tree_duplicate_loop_to_edge_cfg (class loop *loop,\n \n   add_phi_args_after_copy (new_bbs, scalar_loop->num_nodes + 1, NULL);\n \n+  /* Skip new preheader since it's deleted if copy loop is added at entry.  */\n+  for (unsigned i = (at_exit ? 0 : 1); i < scalar_loop->num_nodes + 1; i++)\n+    rename_variables_in_bb (new_bbs[i], duplicate_outer_loop);\n+\n   if (scalar_loop != loop)\n     {\n       /* If we copied from SCALAR_LOOP rather than LOOP, SSA_NAMEs from\n@@ -1130,10 +1134,6 @@ slpeel_tree_duplicate_loop_to_edge_cfg (class loop *loop,\n \t\t\t       loop_preheader_edge (new_loop)->src);\n     }\n \n-  /* Skip new preheader since it's deleted if copy loop is added at entry.  */\n-  for (unsigned i = (at_exit ? 0 : 1); i < scalar_loop->num_nodes + 1; i++)\n-    rename_variables_in_bb (new_bbs[i], duplicate_outer_loop);\n-\n   if (scalar_loop != loop)\n     {\n       /* Update new_loop->header PHIs, so that on the preheader"}]}