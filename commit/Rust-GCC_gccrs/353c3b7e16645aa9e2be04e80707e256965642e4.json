{"sha": "353c3b7e16645aa9e2be04e80707e256965642e4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzUzYzNiN2UxNjY0NWFhOWUyYmUwNGU4MDcwN2UyNTY5NjU2NDJlNA==", "commit": {"author": {"name": "Paul Brook", "email": "paul@codesourcery.com", "date": "2004-05-29T01:21:51Z"}, "committer": {"name": "Paul Brook", "email": "pbrook@gcc.gnu.org", "date": "2004-05-29T01:21:51Z"}, "message": "trans-common.c (find_equivalence): Find multiple rules.\n\n\t* trans-common.c (find_equivalence): Find multiple rules.\ntestsuite/\n\t* gfortran.fortran-torture/execute/equiv_1.f90: New test.\n\nFrom-SVN: r82411", "tree": {"sha": "247774f94be446e16946bbb9f3c16c77c9b72c15", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/247774f94be446e16946bbb9f3c16c77c9b72c15"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/353c3b7e16645aa9e2be04e80707e256965642e4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/353c3b7e16645aa9e2be04e80707e256965642e4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/353c3b7e16645aa9e2be04e80707e256965642e4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/353c3b7e16645aa9e2be04e80707e256965642e4/comments", "author": null, "committer": null, "parents": [{"sha": "b1243dd57bc4692e15fa8eaa8e6e566aaa65d289", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1243dd57bc4692e15fa8eaa8e6e566aaa65d289", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b1243dd57bc4692e15fa8eaa8e6e566aaa65d289"}], "stats": {"total": 35, "additions": 31, "deletions": 4}, "files": [{"sha": "786cc39077e41b3f337d2ab7c580b82a3c6fd04e", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/353c3b7e16645aa9e2be04e80707e256965642e4/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/353c3b7e16645aa9e2be04e80707e256965642e4/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=353c3b7e16645aa9e2be04e80707e256965642e4", "patch": "@@ -1,3 +1,7 @@\n+2004-05-29  Paul Brook  <paul@codesourcery.com>\n+\n+\t* trans-common.c (find_equivalence): Find multiple rules.\n+\n 2004-05-27  Tobias Schlueter  <tobias.schlueter@physik.uni-muenchen.de>\n \n \t* gfortran.h (gfc_current_locus, gfc_set_locus): Remove."}, {"sha": "7484284730748917144a7812b4b7939826d1b911", "filename": "gcc/fortran/trans-common.c", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/353c3b7e16645aa9e2be04e80707e256965642e4/gcc%2Ffortran%2Ftrans-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/353c3b7e16645aa9e2be04e80707e256965642e4/gcc%2Ffortran%2Ftrans-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-common.c?ref=353c3b7e16645aa9e2be04e80707e256965642e4", "patch": "@@ -649,7 +649,8 @@ add_condition (segment_info *f, gfc_equiv *eq1, gfc_equiv *eq2)\n \n \n /* Given a segment element, search through the equivalence lists for unused\n-   conditions that involve the symbol.  Add these rules to the segment.  */\n+   conditions that involve the symbol.  Add these rules to the segment.  Only\n+   checks for rules involving the first symbol in the equivalence set.  */\n  \n static bool\n find_equivalence (segment_info *f)\n@@ -666,7 +667,7 @@ find_equivalence (segment_info *f)\n \t  if (l->used)\n \t    continue;\n \n-\t  if (c->expr->symtree->n.sym ==f-> sym)\n+\t  if (c->expr->symtree->n.sym == f-> sym)\n \t    {\n \t      eq = c;\n \t      other = l;\n@@ -682,9 +683,12 @@ find_equivalence (segment_info *f)\n \t  if (eq)\n \t    {\n \t      add_condition (f, eq, other);\n-\t      l->used = 1;\n+\t      eq->used = 1;\n \t      found = TRUE;\n-\t      break;\n+\t      /* If this symbol is the fist in the chain we may find other\n+\t\t matches. Otherwise we can skip to the next equivalence.  */\n+\t      if (eq == l) \n+\t\tbreak;\n \t    }\n \t}\n     }"}, {"sha": "96b7c9377658479ef38ed12256126debc8014d92", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/353c3b7e16645aa9e2be04e80707e256965642e4/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/353c3b7e16645aa9e2be04e80707e256965642e4/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=353c3b7e16645aa9e2be04e80707e256965642e4", "patch": "@@ -1,3 +1,7 @@\n+2004-05-29  Paul Brook  <paul@codesourcery.com>\n+\n+\t* gfortran.fortran-torture/execute/equiv_1.f90: New test.\n+\n 2004-05-28  Ziemowit Laski  <zlaski@apple.com>\n \n \t* gcc.dg/altivec-16.c: New test."}, {"sha": "b4719fcaa4ab8f95c4ac148b809224023676b109", "filename": "gcc/testsuite/gfortran.fortran-torture/execute/equiv_1.f90", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/353c3b7e16645aa9e2be04e80707e256965642e4/gcc%2Ftestsuite%2Fgfortran.fortran-torture%2Fexecute%2Fequiv_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/353c3b7e16645aa9e2be04e80707e256965642e4/gcc%2Ftestsuite%2Fgfortran.fortran-torture%2Fexecute%2Fequiv_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.fortran-torture%2Fexecute%2Fequiv_1.f90?ref=353c3b7e16645aa9e2be04e80707e256965642e4", "patch": "@@ -0,0 +1,15 @@\n+program prog \n+  common /block/ i\n+  equivalence (a, b, c), (i, j, k ,l)\n+  a = 1.0\n+  b = 2.0\n+  c = 3.0\n+  i = 1\n+  j = 2\n+  k = 3\n+  l = 4\n+\n+  if ((a .ne. 3.0) .or. (b .ne. 3.0) .or. (c .ne. 3.0)) call abort ()\n+  if ((i .ne. 4) .or. (j .ne. 4) .or. (k .ne. 4) .or. (l .ne. 4)) &\n+    call abort ()\n+end program"}]}