{"sha": "9594fe5e915511490888e8e414c7f5c561e1faaf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTU5NGZlNWU5MTU1MTE0OTA4ODhlOGU0MTRjN2Y1YzU2MWUxZmFhZg==", "commit": {"author": {"name": "Ramana Radhakrishnan", "email": "ramana@gcc.gnu.org", "date": "2012-07-24T12:02:30Z"}, "committer": {"name": "Ramana Radhakrishnan", "email": "ramana@gcc.gnu.org", "date": "2012-07-24T12:02:30Z"}, "message": "re PR target/54051 (Invalid alignment specifier generated for vld3_lane_* and vld3_dup_* intrinsics.)\n\n\nFix PR target/54051\n\n\n2012-07-24  Ramana Radhakrishnan  <ramana.radhakrishnan@linaro.org>\n\n\tPR target/54051\n\t* config/arm/arm.c (arm_print_operand_address): Remove superfluous\n\tprinting of 0.\n\t* config/arm/neon.md (\"neon_vld3_lane<mode>\":VD): Remove alignment\n\tspecifier.\n\t(\"neon_vld3_lane<mode>\":VMQ): Likewise.\n\t(\"neon_vld3_dup<mode>\":VDX): Likewise.\n\t(\"neon_vst3_lane<mode>\":VD): Likewise.\n\t(\"neon_vst3_lane<mode>\":VMQ): Likewise.\n\n\n2012-07-24  Ramana Radhakrishnan  <ramana.radhakrishnan@linaro.org>\n\n\tPR target/54051\n\t* gcc.target/arm/pr54051.c: New.\n\t* gcc.target/arm/vfp-1.c: Adjust test.\n\nFrom-SVN: r189808", "tree": {"sha": "a0f852b6a3bd76f2251b5fe2ecae7b273e76532b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a0f852b6a3bd76f2251b5fe2ecae7b273e76532b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9594fe5e915511490888e8e414c7f5c561e1faaf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9594fe5e915511490888e8e414c7f5c561e1faaf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9594fe5e915511490888e8e414c7f5c561e1faaf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9594fe5e915511490888e8e414c7f5c561e1faaf/comments", "author": null, "committer": null, "parents": [{"sha": "e2a6dd68afec2aad9db7b7fa438846c02c5a245e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2a6dd68afec2aad9db7b7fa438846c02c5a245e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e2a6dd68afec2aad9db7b7fa438846c02c5a245e"}], "stats": {"total": 54, "additions": 46, "deletions": 8}, "files": [{"sha": "2ae289446809941e683df0b74686f05751b08d3e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9594fe5e915511490888e8e414c7f5c561e1faaf/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9594fe5e915511490888e8e414c7f5c561e1faaf/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9594fe5e915511490888e8e414c7f5c561e1faaf", "patch": "@@ -1,6 +1,18 @@\n+2012-07-24  Ramana Radhakrishnan  <ramana.radhakrishnan@linaro.org>\n+\n+\tPR target/54051\n+\t* config/arm/arm.c (arm_print_operand_address): Remove superfluous\n+\tprinting of 0.\n+\t* config/arm/neon.md (\"neon_vld3_lane<mode>\":VD): Remove alignment\n+\tspecifier.\n+\t(\"neon_vld3_lane<mode>\":VMQ): Likewise.\n+\t(\"neon_vld3_dup<mode>\":VDX): Likewise.\n+\t(\"neon_vst3_lane<mode>\":VD): Likewise.\n+\t(\"neon_vst3_lane<mode>\":VMQ): Likewise.\n+\n 2012-07-24  Roland McGrath  <mcgrathr@google.com>\n \n-\t* arm.c (arm_get_frame_offsets): Don't use fixed regs for \n+\t* arm.c (arm_get_frame_offsets): Don't use fixed regs for\n \tstack alignment padding.\n \n 2012-07-24  Uros Bizjak  <ubizjak@gmail.com>"}, {"sha": "267868b3b75d34ce508f03d51d1b312fbbcc090e", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9594fe5e915511490888e8e414c7f5c561e1faaf/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9594fe5e915511490888e8e414c7f5c561e1faaf/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=9594fe5e915511490888e8e414c7f5c561e1faaf", "patch": "@@ -17420,7 +17420,7 @@ arm_print_operand_address (FILE *stream, rtx x)\n       int is_minus = GET_CODE (x) == MINUS;\n \n       if (GET_CODE (x) == REG)\n-\tasm_fprintf (stream, \"[%r, #0]\", REGNO (x));\n+\tasm_fprintf (stream, \"[%r]\", REGNO (x));\n       else if (GET_CODE (x) == PLUS || is_minus)\n \t{\n \t  rtx base = XEXP (x, 0);"}, {"sha": "7142c98d7c91154615add94b9c51aa36b581fc3c", "filename": "gcc/config/arm/neon.md", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9594fe5e915511490888e8e414c7f5c561e1faaf/gcc%2Fconfig%2Farm%2Fneon.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9594fe5e915511490888e8e414c7f5c561e1faaf/gcc%2Fconfig%2Farm%2Fneon.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fneon.md?ref=9594fe5e915511490888e8e414c7f5c561e1faaf", "patch": "@@ -4806,7 +4806,7 @@\n   ops[2] = gen_rtx_REG (DImode, regno + 4);\n   ops[3] = operands[1];\n   ops[4] = operands[3];\n-  output_asm_insn (\"vld3.<V_sz_elem>\\t{%P0[%c4], %P1[%c4], %P2[%c4]}, %A3\",\n+  output_asm_insn (\"vld3.<V_sz_elem>\\t{%P0[%c4], %P1[%c4], %P2[%c4]}, %3\",\n                    ops);\n   return \"\";\n }\n@@ -4838,7 +4838,7 @@\n   ops[2] = gen_rtx_REG (DImode, regno + 8);\n   ops[3] = operands[1];\n   ops[4] = GEN_INT (lane);\n-  output_asm_insn (\"vld3.<V_sz_elem>\\t{%P0[%c4], %P1[%c4], %P2[%c4]}, %A3\",\n+  output_asm_insn (\"vld3.<V_sz_elem>\\t{%P0[%c4], %P1[%c4], %P2[%c4]}, %3\",\n                    ops);\n   return \"\";\n }\n@@ -4860,7 +4860,7 @@\n       ops[1] = gen_rtx_REG (DImode, regno + 2);\n       ops[2] = gen_rtx_REG (DImode, regno + 4);\n       ops[3] = operands[1];\n-      output_asm_insn (\"vld3.<V_sz_elem>\\t{%P0[], %P1[], %P2[]}, %A3\", ops);\n+      output_asm_insn (\"vld3.<V_sz_elem>\\t{%P0[], %P1[], %P2[]}, %3\", ops);\n       return \"\";\n     }\n   else\n@@ -4978,7 +4978,7 @@\n   ops[2] = gen_rtx_REG (DImode, regno + 2);\n   ops[3] = gen_rtx_REG (DImode, regno + 4);\n   ops[4] = operands[2];\n-  output_asm_insn (\"vst3.<V_sz_elem>\\t{%P1[%c4], %P2[%c4], %P3[%c4]}, %A0\",\n+  output_asm_insn (\"vst3.<V_sz_elem>\\t{%P1[%c4], %P2[%c4], %P3[%c4]}, %0\",\n                    ops);\n   return \"\";\n }\n@@ -5010,7 +5010,7 @@\n   ops[2] = gen_rtx_REG (DImode, regno + 4);\n   ops[3] = gen_rtx_REG (DImode, regno + 8);\n   ops[4] = GEN_INT (lane);\n-  output_asm_insn (\"vst3.<V_sz_elem>\\t{%P1[%c4], %P2[%c4], %P3[%c4]}, %A0\",\n+  output_asm_insn (\"vst3.<V_sz_elem>\\t{%P1[%c4], %P2[%c4], %P3[%c4]}, %0\",\n                    ops);\n   return \"\";\n }"}, {"sha": "abc08c996ad5e84434d874a3ce03c22b4947ded1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9594fe5e915511490888e8e414c7f5c561e1faaf/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9594fe5e915511490888e8e414c7f5c561e1faaf/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9594fe5e915511490888e8e414c7f5c561e1faaf", "patch": "@@ -1,3 +1,9 @@\n+2012-07-24  Ramana Radhakrishnan  <ramana.radhakrishnan@linaro.org>\n+\n+\tPR target/54051\n+\t* gcc.target/arm/pr54051.c: New.\n+\t* gcc.target/arm/vfp-1.c: Adjust test.\n+\n 2012-07-24  Julian Brown  <julian@codesourcery.com>\n \n \t* lib/target-supports.exp (check_effective_target_arm_hf_eabi): New."}, {"sha": "1d2e93c894febc10c020bfbd8d0361fa4aa8ce02", "filename": "gcc/testsuite/gcc.target/arm/pr54051.c", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9594fe5e915511490888e8e414c7f5c561e1faaf/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fpr54051.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9594fe5e915511490888e8e414c7f5c561e1faaf/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fpr54051.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fpr54051.c?ref=9594fe5e915511490888e8e414c7f5c561e1faaf", "patch": "@@ -0,0 +1,20 @@\n+/* { dg-do assemble }  */\n+/* { dg-require-effective-target arm_neon }  */\n+/* { dg-options \"-O2\" }  */\n+/* { dg-add-options arm_neon }  */\n+\n+#include <arm_neon.h>\n+\n+int32_t a __attribute__ ((aligned (64)));\n+\n+int32x2x3_t test (void)\n+{\n+  return vld3_dup_s32 (&a);\n+}\n+\n+int32x2x3_t test1 (void)\n+{\n+  int32x2x3_t res ;\n+  return vld3_lane_s32 (&a, res, 1);\n+}\n+"}, {"sha": "d6d9c46425b2d8e39866e7c40356167f7efcb717", "filename": "gcc/testsuite/gcc.target/arm/vfp-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9594fe5e915511490888e8e414c7f5c561e1faaf/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fvfp-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9594fe5e915511490888e8e414c7f5c561e1faaf/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fvfp-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fvfp-1.c?ref=9594fe5e915511490888e8e414c7f5c561e1faaf", "patch": "@@ -129,7 +129,7 @@ void test_ldst (float f[], double d[]) {\n   /* { dg-final { scan-assembler \"flds.+ \\\\\\[r0, #1020\\\\\\]\" } } */\n   /* { dg-final { scan-assembler \"flds.+ \\\\\\[r\\[0-9\\], #-1020\\\\\\]\" { target { arm32 && { ! arm_thumb2_ok } } } } } */\n   /* { dg-final { scan-assembler \"add.+ r0, #1024\" } } */\n-  /* { dg-final { scan-assembler \"fsts.+ \\\\\\[r\\[0-9\\], #0\\\\\\]\\n\" } } */\n+  /* { dg-final { scan-assembler \"fsts.+ \\\\\\[r\\[0-9\\]\\\\\\]\\n\" } } */\n   f[256] = f[255] + f[-255];\n \n   /* { dg-final { scan-assembler \"fldd.+ \\\\\\[r1, #1016\\\\\\]\" } } */"}]}