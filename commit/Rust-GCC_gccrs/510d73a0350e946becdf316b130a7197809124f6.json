{"sha": "510d73a0350e946becdf316b130a7197809124f6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTEwZDczYTAzNTBlOTQ2YmVjZGYzMTZiMTMwYTcxOTc4MDkxMjRmNg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2016-11-16T08:42:20Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2016-11-16T08:42:20Z"}, "message": "re PR tree-optimization/78348 ([7 REGRESSION] 15% performance drop for coremark-pro/nnet-test after r242038)\n\n2016-11-16  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/78348\n\t* tree-loop-distribution.c (enum partition_kind): Add PKIND_MEMMOVE.\n\t(generate_memcpy_builtin): Honor PKIND_MEMCPY on the partition.\n\t(classify_partition): Set PKIND_MEMCPY if dependence analysis\n\trevealed no dependency, PKIND_MEMMOVE otherwise.\n\n\t* gcc.dg/tree-ssa/ldist-24.c: New testcase.\n\nFrom-SVN: r242470", "tree": {"sha": "76050ac73f5409a11f1f258016acdc03026af8ac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/76050ac73f5409a11f1f258016acdc03026af8ac"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/510d73a0350e946becdf316b130a7197809124f6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/510d73a0350e946becdf316b130a7197809124f6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/510d73a0350e946becdf316b130a7197809124f6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/510d73a0350e946becdf316b130a7197809124f6/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1705cebd79f24bc85dab766a9a26390827f26fa0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1705cebd79f24bc85dab766a9a26390827f26fa0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1705cebd79f24bc85dab766a9a26390827f26fa0"}], "stats": {"total": 51, "additions": 46, "deletions": 5}, "files": [{"sha": "3f6f3ce958787725a4711fe1096767f5493b54c7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/510d73a0350e946becdf316b130a7197809124f6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/510d73a0350e946becdf316b130a7197809124f6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=510d73a0350e946becdf316b130a7197809124f6", "patch": "@@ -1,3 +1,11 @@\n+2016-11-16  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/78348\n+\t* tree-loop-distribution.c (enum partition_kind): Add PKIND_MEMMOVE.\n+\t(generate_memcpy_builtin): Honor PKIND_MEMCPY on the partition.\n+\t(classify_partition): Set PKIND_MEMCPY if dependence analysis\n+\trevealed no dependency, PKIND_MEMMOVE otherwise.\n+\n 2016-11-16  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR sanitizer/77823"}, {"sha": "3da84c6a80451f3aa749d894061460fad4d6568a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/510d73a0350e946becdf316b130a7197809124f6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/510d73a0350e946becdf316b130a7197809124f6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=510d73a0350e946becdf316b130a7197809124f6", "patch": "@@ -1,3 +1,8 @@\n+2016-11-16  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/78348\n+\t* gcc.dg/tree-ssa/ldist-24.c: New testcase.\n+\n 2016-11-16  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR sanitizer/77823"}, {"sha": "7ab79e659e154ad7e2571fec05495c9b225d7010", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ldist-24.c", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/510d73a0350e946becdf316b130a7197809124f6/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fldist-24.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/510d73a0350e946becdf316b130a7197809124f6/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fldist-24.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fldist-24.c?ref=510d73a0350e946becdf316b130a7197809124f6", "patch": "@@ -0,0 +1,24 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -fdump-tree-ldist-details\" } */\n+\n+typedef struct S {\n+    double z[8][25];\n+    double x1[8][40];\n+    double x2[8][40];\n+    double y[8][35];\n+} S;\n+\n+S * par;\n+void foo ()\n+{\n+  int i, j;\n+  for (i = 0; i<8; i++)\n+    for (j = 0; j<35; j++)\n+      {\n+\tpar->x1[i][j] = par->x2[i][j];\n+\tpar->x2[i][j] = 0.0;\n+      }\n+}\n+\n+/* { dg-final { scan-tree-dump \"generated memcpy\" \"ldist\" } } */\n+/* { dg-final { scan-tree-dump \"generated memset zero\" \"ldist\" } } */"}, {"sha": "aabc11ab25c63402858851e81c1d5f307cacf527", "filename": "gcc/tree-loop-distribution.c", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/510d73a0350e946becdf316b130a7197809124f6/gcc%2Ftree-loop-distribution.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/510d73a0350e946becdf316b130a7197809124f6/gcc%2Ftree-loop-distribution.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-loop-distribution.c?ref=510d73a0350e946becdf316b130a7197809124f6", "patch": "@@ -466,7 +466,7 @@ build_rdg (vec<loop_p> loop_nest, control_dependences *cd)\n \n \n enum partition_kind {\n-    PKIND_NORMAL, PKIND_MEMSET, PKIND_MEMCPY\n+    PKIND_NORMAL, PKIND_MEMSET, PKIND_MEMCPY, PKIND_MEMMOVE\n };\n \n struct partition\n@@ -875,10 +875,11 @@ generate_memcpy_builtin (struct loop *loop, partition *partition)\n \t\t\t\t       false, GSI_CONTINUE_LINKING);\n   dest = build_addr_arg_loc (loc, partition->main_dr, nb_bytes);\n   src = build_addr_arg_loc (loc, partition->secondary_dr, nb_bytes);\n-  if (ptr_derefs_may_alias_p (dest, src))\n-    kind = BUILT_IN_MEMMOVE;\n-  else\n+  if (partition->kind == PKIND_MEMCPY\n+      || ! ptr_derefs_may_alias_p (dest, src))\n     kind = BUILT_IN_MEMCPY;\n+  else\n+    kind = BUILT_IN_MEMMOVE;\n \n   dest = force_gimple_operand_gsi (&gsi, dest, true, NULL_TREE,\n \t\t\t\t   false, GSI_CONTINUE_LINKING);\n@@ -970,6 +971,7 @@ generate_code_for_partition (struct loop *loop,\n       break;\n \n     case PKIND_MEMCPY:\n+    case PKIND_MEMMOVE:\n       generate_memcpy_builtin (loop, partition);\n       break;\n \n@@ -1166,10 +1168,12 @@ classify_partition (loop_p loop, struct graph *rdg, partition *partition)\n \t\t  return;\n \t\t}\n \t    }\n+\t  partition->kind = PKIND_MEMMOVE;\n \t}\n+      else\n+\tpartition->kind = PKIND_MEMCPY;\n       free_dependence_relation (ddr);\n       loops.release ();\n-      partition->kind = PKIND_MEMCPY;\n       partition->main_dr = single_store;\n       partition->secondary_dr = single_load;\n       partition->niter = nb_iter;"}]}