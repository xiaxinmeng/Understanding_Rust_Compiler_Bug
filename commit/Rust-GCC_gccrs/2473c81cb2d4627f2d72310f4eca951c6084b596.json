{"sha": "2473c81cb2d4627f2d72310f4eca951c6084b596", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjQ3M2M4MWNiMmQ0NjI3ZjJkNzIzMTBmNGVjYTk1MWM2MDg0YjU5Ng==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-02-25T09:21:34Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-02-25T09:21:34Z"}, "message": "pass_manager: Fix ICE with -fdump-passes -fdisable-tree-* [PR93874]\n\ndump_passes pushes a dummy function for which it evaluates the gates\nand checks whether the pass is enabled or disabled.\nUnfortunately, if any -fdisable-*-*/-fenable-*-* options were seen,\nwe ICE during is_pass_explicitly_enabled_or_disabled because slot\nis non-NULL then and the code will do:\n  cgraph_uid = func ? cgraph_node::get (func)->get_uid () : 0;\nbut the dummy function doesn't have a cgraph node.\n\nSo, either we need to create and then remove a cgraph node for the dummy\nfunction like the following patch, or function.c would need to export the\nin_dummy_function flag (or have some way to query that flag from other TUs)\nand we'd need to check it in is_pass_explicitly_enabled_or_disabled.\n\n2020-02-25  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR middle-end/93874\n\t* passes.c (pass_manager::dump_passes): Create a cgraph node for the\n\tdummy function and remove it at the end.\n\n\t* gcc.dg/pr93874.c: New test.", "tree": {"sha": "88f88fe214114edb8988d30f61037f3c60c3ffde", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/88f88fe214114edb8988d30f61037f3c60c3ffde"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2473c81cb2d4627f2d72310f4eca951c6084b596", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2473c81cb2d4627f2d72310f4eca951c6084b596", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2473c81cb2d4627f2d72310f4eca951c6084b596", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2473c81cb2d4627f2d72310f4eca951c6084b596/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fe86f537f010828b7f77ff459cef138e84071660", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe86f537f010828b7f77ff459cef138e84071660", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fe86f537f010828b7f77ff459cef138e84071660"}], "stats": {"total": 15, "additions": 15, "deletions": 0}, "files": [{"sha": "9d453f16f07851074e66b2c1f0e8535062b8c281", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2473c81cb2d4627f2d72310f4eca951c6084b596/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2473c81cb2d4627f2d72310f4eca951c6084b596/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2473c81cb2d4627f2d72310f4eca951c6084b596", "patch": "@@ -1,5 +1,9 @@\n 2020-02-25  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR middle-end/93874\n+\t* passes.c (pass_manager::dump_passes): Create a cgraph node for the\n+\tdummy function and remove it at the end.\n+\n \tPR translation/93864\n \t* config/lm32/lm32.c (lm32_setup_incoming_varargs): Fix comment typo\n \tparamter -> parameter."}, {"sha": "07b2613ffeaa3b8a6180686aaed72246d79e6932", "filename": "gcc/passes.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2473c81cb2d4627f2d72310f4eca951c6084b596/gcc%2Fpasses.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2473c81cb2d4627f2d72310f4eca951c6084b596/gcc%2Fpasses.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpasses.c?ref=2473c81cb2d4627f2d72310f4eca951c6084b596", "patch": "@@ -950,6 +950,7 @@ void\n pass_manager::dump_passes () const\n {\n   push_dummy_function (true);\n+  cgraph_node *node = cgraph_node::get_create (current_function_decl);\n \n   create_pass_tab ();\n \n@@ -959,6 +960,7 @@ pass_manager::dump_passes () const\n   dump_pass_list (all_late_ipa_passes, 1);\n   dump_pass_list (all_passes, 1);\n \n+  node->remove ();\n   pop_dummy_function ();\n }\n "}, {"sha": "62b000b23145b614903dea52b86c316b241fe1d7", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2473c81cb2d4627f2d72310f4eca951c6084b596/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2473c81cb2d4627f2d72310f4eca951c6084b596/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2473c81cb2d4627f2d72310f4eca951c6084b596", "patch": "@@ -1,5 +1,8 @@\n 2020-02-25  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR middle-end/93874\n+\t* gcc.dg/pr93874.c: New test.\n+\n \tPR ipa/93763\n \t* gcc.dg/ipa/pr93763.c: Adjust the test so that it compiles without\n \twarnings and still ICEs before the ipa-cp.c fix."}, {"sha": "154ef50ea54730a3396bf471872c14c26a20af85", "filename": "gcc/testsuite/gcc.dg/pr93874.c", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2473c81cb2d4627f2d72310f4eca951c6084b596/gcc%2Ftestsuite%2Fgcc.dg%2Fpr93874.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2473c81cb2d4627f2d72310f4eca951c6084b596/gcc%2Ftestsuite%2Fgcc.dg%2Fpr93874.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr93874.c?ref=2473c81cb2d4627f2d72310f4eca951c6084b596", "patch": "@@ -0,0 +1,6 @@\n+/* PR middle-end/93874 */\n+/* { dg-do compile } */\n+/* { dg-options \"-fdisable-tree-dse3 -fdump-passes\" } */\n+/* { dg-prune-output \".*\" } */\n+\n+int i;"}]}