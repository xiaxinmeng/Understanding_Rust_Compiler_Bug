{"sha": "b281000393220c7ce754f42c8d73b4ea9efe5657", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjI4MTAwMDM5MzIyMGM3Y2U3NTRmNDJjOGQ3M2I0ZWE5ZWZlNTY1Nw==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2015-08-27T23:09:37Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2015-08-27T23:09:37Z"}, "message": "compiler: Report unused variables initialized to function literals.\n\n    \n    Fixes golang/go#12317.\n    \n    Reviewed-on: https://go-review.googlesource.com/13908\n\nFrom-SVN: r227285", "tree": {"sha": "ff8e1e8088a82aa764a04cc7c779b01cff468d9d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ff8e1e8088a82aa764a04cc7c779b01cff468d9d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b281000393220c7ce754f42c8d73b4ea9efe5657", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b281000393220c7ce754f42c8d73b4ea9efe5657", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b281000393220c7ce754f42c8d73b4ea9efe5657", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b281000393220c7ce754f42c8d73b4ea9efe5657/comments", "author": null, "committer": null, "parents": [{"sha": "26343eaf9d25412f6deba7eae9117fc5e9bc02cc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26343eaf9d25412f6deba7eae9117fc5e9bc02cc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/26343eaf9d25412f6deba7eae9117fc5e9bc02cc"}], "stats": {"total": 17, "additions": 9, "deletions": 8}, "files": [{"sha": "beb095a5557a0777de916ee4cda575a5c5b320b5", "filename": "gcc/go/gofrontend/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b281000393220c7ce754f42c8d73b4ea9efe5657/gcc%2Fgo%2Fgofrontend%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b281000393220c7ce754f42c8d73b4ea9efe5657/gcc%2Fgo%2Fgofrontend%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2FMERGE?ref=b281000393220c7ce754f42c8d73b4ea9efe5657", "patch": "@@ -1,4 +1,4 @@\n-9ae5835a010a55fba875103be5f4e61485a97099\n+3aa2ea272e475010da8b480fc3095d0cd7254d12\n \n The first line of this file holds the git revision number of the last\n merge done from the gofrontend repository."}, {"sha": "233ee274cf0e0c726d8696a698f298f1eaaa0d41", "filename": "gcc/go/gofrontend/gogo.cc", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b281000393220c7ce754f42c8d73b4ea9efe5657/gcc%2Fgo%2Fgofrontend%2Fgogo.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b281000393220c7ce754f42c8d73b4ea9efe5657/gcc%2Fgo%2Fgofrontend%2Fgogo.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fgogo.cc?ref=b281000393220c7ce754f42c8d73b4ea9efe5657", "patch": "@@ -3156,6 +3156,7 @@ Check_types_traverse::variable(Named_object* named_object)\n \t    error_at(var->location(),\n \t\t     \"incompatible type in initialization (%s)\",\n \t\t     reason.c_str());\n+          init = Expression::make_error(named_object->location());\n \t  var->clear_init();\n \t}\n       else if (init != NULL\n@@ -3180,13 +3181,13 @@ Check_types_traverse::variable(Named_object* named_object)\n                        no->message_name().c_str());\n             }\n         }\n-      else if (!var->is_used()\n-\t       && !var->is_global()\n-\t       && !var->is_parameter()\n-\t       && !var->is_receiver()\n-\t       && !var->type()->is_error()\n-\t       && (init == NULL || !init->is_error_expression())\n-\t       && !Lex::is_invalid_identifier(named_object->name()))\n+      if (!var->is_used()\n+          && !var->is_global()\n+          && !var->is_parameter()\n+          && !var->is_receiver()\n+          && !var->type()->is_error()\n+          && (init == NULL || !init->is_error_expression())\n+          && !Lex::is_invalid_identifier(named_object->name()))\n \terror_at(var->location(), \"%qs declared and not used\",\n \t\t named_object->message_name().c_str());\n     }"}]}