{"sha": "d239991ff65181a5e81cd9e103f5543f1904c042", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDIzOTk5MWZmNjUxODFhNWU4MWNkOWUxMDNmNTU0M2YxOTA0YzA0Mg==", "commit": {"author": {"name": "Gary Dismukes", "email": "dismukes@adacore.com", "date": "2005-03-29T16:15:45Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2005-03-29T16:15:45Z"}, "message": "re PR ada/20300 (ICE on undefined value of type derived from Character)\n\n2005-03-29  Gary Dismukes  <dismukes@adacore.com>\n\t    Robert Dewar  <dewar@adacore.com>\n\n\t* exp_intr.adb (Expand_Dispatching_Constructor_Call): New procedure to\n\texpand a call to an instance of\n\tAda.Tags.Generic_Dispatching_Constructor into a dispatching call to the\n\tConstructor actual of the instance. A class-wide membership\n\tcheck is also generated, to ensure that the tag passed to the instance\n\tdenotes a type in the class.\n\t(Expand_Intrinsic_Call): Call Expand_Dispatching_Constructor in the case\n\tof Name_Generic_Dispatching_Constructor.\n\n\t* Makefile.rtl: Add a-tgdico.ads to the list of library units (new Ada\n\t05 unit for AI-260-02).\n\n\t* a-tgdico.ads: New file.\n\n\t* impunit.adb (Non_Imp_File_Names_05): Add entry \"a-tgdico\" for new\n\tpredefined Ada 05 generic unit Ada.Tags.Generic_Dispatching_Constructor.\n\n\t* snames.ads, snames.adb (Preset_Names): Add entry for\n\tGeneric_Dispatching_Constructor.\n\n\tPR ada/20300\n\n\t* sem_ch8.adb (Find_Direct_Name): Go to root type for check of\n\tcharacter type cases.\n\t(Analyze_Subprogram_Renaming): Add special handling for\n\tthe case of renaming of stream attributes when the renaming denotes a\n\tgeneric formal subprogram association for an abstract formal subprogram.\n\tCheck that the attribute is a primitive stream attribute (and not\n\ta class-wide stream attribute) and then rewrite the attribute name\n\tas the name of the appropriate compiler-generated stream primitive.\n\nFrom-SVN: r97172", "tree": {"sha": "e6b0e275d222d8952cb61f29f30b8e056a79aee2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e6b0e275d222d8952cb61f29f30b8e056a79aee2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d239991ff65181a5e81cd9e103f5543f1904c042", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d239991ff65181a5e81cd9e103f5543f1904c042", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d239991ff65181a5e81cd9e103f5543f1904c042", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d239991ff65181a5e81cd9e103f5543f1904c042/comments", "author": {"login": "dismukes", "id": 50880541, "node_id": "MDQ6VXNlcjUwODgwNTQx", "avatar_url": "https://avatars.githubusercontent.com/u/50880541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dismukes", "html_url": "https://github.com/dismukes", "followers_url": "https://api.github.com/users/dismukes/followers", "following_url": "https://api.github.com/users/dismukes/following{/other_user}", "gists_url": "https://api.github.com/users/dismukes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dismukes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dismukes/subscriptions", "organizations_url": "https://api.github.com/users/dismukes/orgs", "repos_url": "https://api.github.com/users/dismukes/repos", "events_url": "https://api.github.com/users/dismukes/events{/privacy}", "received_events_url": "https://api.github.com/users/dismukes/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c857f5ed55dd4f8f02892da3c79a595b39e376e5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c857f5ed55dd4f8f02892da3c79a595b39e376e5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c857f5ed55dd4f8f02892da3c79a595b39e376e5"}], "stats": {"total": 405, "additions": 294, "deletions": 111}, "files": [{"sha": "7687c33e6bce5a7224781b16cc30a25ff47469c1", "filename": "gcc/ada/Makefile.rtl", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d239991ff65181a5e81cd9e103f5543f1904c042/gcc%2Fada%2FMakefile.rtl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d239991ff65181a5e81cd9e103f5543f1904c042/gcc%2Fada%2FMakefile.rtl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FMakefile.rtl?ref=d239991ff65181a5e81cd9e103f5543f1904c042", "patch": "@@ -212,6 +212,7 @@ GNATRTL_NONTASKING_OBJS= \\\n   a-szunha$(objext) \\\n   a-szuzti$(objext) \\\n   a-tags$(objext) \\\n+  a-tgdico$(objext) \\\n   a-teioed$(objext) \\\n   a-textio$(objext) \\\n   a-ticoau$(objext) \\"}, {"sha": "8534d9f29570def35efbb50eb8ed99c0a5eb7161", "filename": "gcc/ada/a-tgdico.ads", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d239991ff65181a5e81cd9e103f5543f1904c042/gcc%2Fada%2Fa-tgdico.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d239991ff65181a5e81cd9e103f5543f1904c042/gcc%2Fada%2Fa-tgdico.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-tgdico.ads?ref=d239991ff65181a5e81cd9e103f5543f1904c042", "patch": "@@ -0,0 +1,29 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                         GNAT COMPILER COMPONENTS                         --\n+--                                                                          --\n+--                 ADA.TAGS.GENERIC_DISPATCHING_CONSTRUCTOR                 --\n+--                                                                          --\n+--                                 S p e c                                  --\n+--                                                                          --\n+-- This specification is adapted from the Ada Reference Manual for use with --\n+-- GNAT.  In accordance with the copyright of that document, you can freely --\n+-- copy and modify this specification,  provided that if you redistribute a --\n+-- modified version,  any changes that you have made are clearly indicated. --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+generic\n+   type T (<>) is abstract tagged limited private;\n+   type Parameters (<>) is limited private;\n+   with function Constructor (Params : access Parameters) return T is abstract;\n+\n+function Ada.Tags.Generic_Dispatching_Constructor\n+  (The_Tag : Tag; Params : access Parameters) return T'Class;\n+\n+--  pragma Preelaborate (Generic_Dispatching_Constructor);\n+--  Commented out temporarily because various other predefined units do not\n+--  yet have proper categorization as specified by AI-362 (such as Ada.Tags,\n+--  Ada.Exceptions, etc.).\n+\n+pragma Import (Intrinsic, Generic_Dispatching_Constructor);"}, {"sha": "b46b8f09c7d218b32374ba3360f54dd37b96e485", "filename": "gcc/ada/exp_intr.adb", "status": "modified", "additions": 83, "deletions": 0, "changes": 83, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d239991ff65181a5e81cd9e103f5543f1904c042/gcc%2Fada%2Fexp_intr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d239991ff65181a5e81cd9e103f5543f1904c042/gcc%2Fada%2Fexp_intr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_intr.adb?ref=d239991ff65181a5e81cd9e103f5543f1904c042", "patch": "@@ -26,11 +26,13 @@\n \n with Atree;    use Atree;\n with Einfo;    use Einfo;\n+with Elists;   use Elists;\n with Errout;   use Errout;\n with Exp_Ch4;  use Exp_Ch4;\n with Exp_Ch7;  use Exp_Ch7;\n with Exp_Ch11; use Exp_Ch11;\n with Exp_Code; use Exp_Code;\n+with Exp_Disp; use Exp_Disp;\n with Exp_Fixd; use Exp_Fixd;\n with Exp_Util; use Exp_Util;\n with Itypes;   use Itypes;\n@@ -61,6 +63,13 @@ package body Exp_Intr is\n    procedure Expand_Is_Negative (N : Node_Id);\n    --  Expand a call to the intrinsic Is_Negative function\n \n+   procedure Expand_Dispatching_Constructor_Call (N : Node_Id);\n+   --  Expand a call to an instantiation of Generic_Dispatching_Constructor\n+   --  into a dispatching call to the actual subprogram associated with the\n+   --  Constructor formal subprogram, passing it the Parameters actual of\n+   --  the call to the instantiation and dispatching based on call's Tag\n+   --  parameter.\n+\n    procedure Expand_Exception_Call (N : Node_Id; Ent : RE_Id);\n    --  Expand a call to Exception_Information/Message/Name. The first\n    --  parameter, N, is the node for the function call, and Ent is the\n@@ -96,6 +105,77 @@ package body Exp_Intr is\n    --    Name_Source_Location  - expand string of form file:line\n    --    Name_Enclosing_Entity - expand string  with name of enclosing entity\n \n+   -----------------------------------------\n+   -- Expand_Dispatching_Constructor_Call --\n+   -----------------------------------------\n+\n+   --  Transform a call to an instantiation of Generic_Dispatching_Constructor\n+   --  of the form:\n+\n+   --     GDC_Instance (The_Tag, Parameters'Access)\n+\n+   --  to a class-wide conversion of a dispatching call to the actual\n+   --  associated with the formal subprogram Construct, designating\n+   --  The_Tag as the controlling tag of the call:\n+\n+   --     T'Class (Construct'Actual (Params)) -- Controlling tag is The_Tag\n+\n+   --  which will eventually be expanded to the following:\n+\n+   --     T'Class (The_Tag.all (Construct'Actual'Index).all (Params))\n+\n+   --  A class-wide membership test is also generated, preceding the call,\n+   --  to ensure that the controlling tag denotes a type in T'Class.\n+\n+   procedure Expand_Dispatching_Constructor_Call (N : Node_Id) is\n+      Loc        : constant Source_Ptr := Sloc (N);\n+      Tag_Arg    : constant Node_Id    := First_Actual (N);\n+      Param_Arg  : constant Node_Id    := Next_Actual (Tag_Arg);\n+      Subp_Decl  : constant Node_Id    := Parent (Parent (Entity (Name (N))));\n+      Inst_Pkg   : constant Node_Id    := Parent (Subp_Decl);\n+      Act_Rename : constant Node_Id    :=\n+                     Next (Next (First (Visible_Declarations (Inst_Pkg))));\n+      Act_Constr : constant Entity_Id  := Entity (Name (Act_Rename));\n+      Result_Typ : constant Entity_Id  := Class_Wide_Type (Etype (Act_Constr));\n+      Cnstr_Call : Node_Id;\n+\n+   begin\n+      --  Create the call to the actual Constructor function\n+\n+      Cnstr_Call :=\n+        Make_Function_Call (Loc,\n+          Name                   => New_Occurrence_Of (Act_Constr, Loc),\n+          Parameter_Associations => New_List (Relocate_Node (Param_Arg)));\n+\n+      --  Establish its controlling tag from the tag passed to the instance\n+\n+      Set_Controlling_Argument (Cnstr_Call, Relocate_Node (Tag_Arg));\n+\n+      --  Rewrite and analyze the call to the instance as a class-wide\n+      --  conversion of the call to the actual constructor.\n+\n+      Rewrite (N, Convert_To (Result_Typ, Cnstr_Call));\n+      Analyze_And_Resolve (N, Etype (Act_Constr));\n+\n+      --  Generate a class-wide membership test to ensure that the call's tag\n+      --  argument denotes a type within the class.\n+\n+      Insert_Action (N,\n+        Make_Implicit_If_Statement (N,\n+          Condition =>\n+            Make_Op_Not (Loc,\n+              Make_DT_Access_Action (Result_Typ,\n+                 Action => CW_Membership,\n+                 Args   => New_List (\n+                   Duplicate_Subexpr (Tag_Arg),\n+                   New_Reference_To (\n+                     Node (First_Elmt (Access_Disp_Table (\n+                                         Root_Type (Result_Typ)))), Loc)))),\n+          Then_Statements =>\n+            New_List (Make_Raise_Statement (Loc,\n+                        New_Occurrence_Of (RTE (RE_Tag_Error), Loc)))));\n+   end Expand_Dispatching_Constructor_Call;\n+\n    ---------------------------\n    -- Expand_Exception_Call --\n    ---------------------------\n@@ -236,6 +316,9 @@ package body Exp_Intr is\n       elsif Nam = Name_Exception_Name then\n          Expand_Exception_Call (N, RE_Exception_Name_Simple);\n \n+      elsif Nam = Name_Generic_Dispatching_Constructor then\n+         Expand_Dispatching_Constructor_Call (N);\n+\n       elsif Nam = Name_Import_Address\n               or else\n             Nam = Name_Import_Largest_Value"}, {"sha": "f1303a2eb0a5ad6d9c54026e5f584f81e6e443ad", "filename": "gcc/ada/impunit.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d239991ff65181a5e81cd9e103f5543f1904c042/gcc%2Fada%2Fimpunit.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d239991ff65181a5e81cd9e103f5543f1904c042/gcc%2Fada%2Fimpunit.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fimpunit.adb?ref=d239991ff65181a5e81cd9e103f5543f1904c042", "patch": "@@ -363,6 +363,7 @@ package body Impunit is\n      \"a-swunha\",    -- Ada.Strings.Wide_Unbounded.Hash\n      \"a-szmzco\",    -- Ada.Strings.Wide_Wide_Maps.Wide_Wide_Constants;\n      \"a-szunha\",    -- Ada.Strings.Wide_Wide_Unbounded.Hash\n+     \"a-tgdico\",    -- Ada.Tags.Generic_Dispatching_Constructor;\n      \"a-tiunio\",    -- Ada.Text_IO.Unbounded_IO;\n      \"a-wwunio\",    -- Ada.Wide_Text_IO.Wide_Unbounded_IO;\n      \"a-zttest\",    -- Ada.Wide_Wide_Text_IO.Text_Streams"}, {"sha": "394f6dbb8e9701abbf1ed6925c2ec514131d80c3", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 82, "deletions": 15, "changes": 97, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d239991ff65181a5e81cd9e103f5543f1904c042/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d239991ff65181a5e81cd9e103f5543f1904c042/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=d239991ff65181a5e81cd9e103f5543f1904c042", "patch": "@@ -29,6 +29,7 @@ with Debug;    use Debug;\n with Einfo;    use Einfo;\n with Elists;   use Elists;\n with Errout;   use Errout;\n+with Exp_Tss;  use Exp_Tss;\n with Exp_Util; use Exp_Util;\n with Fname;    use Fname;\n with Freeze;   use Freeze;\n@@ -1102,10 +1103,11 @@ package body Sem_Ch8 is\n       Save_AV     : constant Ada_Version_Type := Ada_Version;\n       Nam         : constant Node_Id          := Name (N);\n       New_S       : Entity_Id;\n-      Old_S       : Entity_Id  := Empty;\n+      Old_S       : Entity_Id                 := Empty;\n       Rename_Spec : Entity_Id;\n-      Is_Actual   : Boolean    := False;\n-      Inst_Node   : Node_Id    := Empty;\n+      Formal_Spec : constant Node_Id          := Corresponding_Formal_Spec (N);\n+      Is_Actual   : constant Boolean          := Present (Formal_Spec);\n+      Inst_Node   : Node_Id                   := Empty;\n \n       function Original_Subprogram (Subp : Entity_Id) return Entity_Id;\n       --  Find renamed entity when the declaration is a renaming_as_body\n@@ -1167,8 +1169,75 @@ package body Sem_Ch8 is\n       --  is missing an argument when it is analyzed.\n \n       if Nkind (Nam) = N_Attribute_Reference then\n-         Attribute_Renaming (N);\n-         return;\n+\n+         --  In the case of an abstract formal subprogram association,\n+         --  rewrite an actual given by a stream attribute as the name\n+         --  of the corresponding stream primitive of the type.\n+\n+         if Is_Actual and then Is_Abstract (Formal_Spec) then\n+            declare\n+               Stream_Prim : Entity_Id;\n+               Prefix_Type : constant Entity_Id := Entity (Prefix (Nam));\n+\n+            begin\n+               --  The class-wide forms of the stream attributes are not\n+               --  primitive dispatching operations (even though they\n+               --  internally dispatch to a stream attribute).\n+\n+               if Is_Class_Wide_Type (Prefix_Type) then\n+                  Error_Msg_N\n+                    (\"attribute must be a primitive dispatching operation\",\n+                     Nam);\n+                  return;\n+               end if;\n+\n+               --  Retrieve the primitive subprogram associated with the\n+               --  attribute. This can only be a stream attribute, since\n+               --  those are the only ones that are dispatching (and the\n+               --  actual for an abstract formal subprogram must be a\n+               --  dispatching operation).\n+\n+               case Attribute_Name (Nam) is\n+                  when Name_Input  =>\n+                     Stream_Prim :=\n+                       Find_Prim_Op (Prefix_Type, TSS_Stream_Input);\n+                  when Name_Output =>\n+                     Stream_Prim :=\n+                       Find_Prim_Op (Prefix_Type, TSS_Stream_Output);\n+                  when Name_Read   =>\n+                     Stream_Prim :=\n+                       Find_Prim_Op (Prefix_Type, TSS_Stream_Read);\n+                  when Name_Write  =>\n+                     Stream_Prim :=\n+                       Find_Prim_Op (Prefix_Type, TSS_Stream_Write);\n+                  when others      =>\n+                     Error_Msg_N\n+                       (\"attribute must be a primitive dispatching operation\",\n+                        Nam);\n+                     return;\n+               end case;\n+\n+               --  Rewrite the attribute into the name of its corresponding\n+               --  primitive dispatching subprogram. We can then proceed with\n+               --  the usual processing for subprogram renamings.\n+\n+               declare\n+                  Prim_Name : constant Node_Id :=\n+                                Make_Identifier (Sloc (Nam),\n+                                  Chars => Chars (Stream_Prim));\n+               begin\n+                  Set_Entity (Prim_Name, Stream_Prim);\n+                  Rewrite (Nam, Prim_Name);\n+                  Analyze (Nam);\n+               end;\n+            end;\n+\n+         --  Normal processing for a renaming of an attribute\n+\n+         else\n+            Attribute_Renaming (N);\n+            return;\n+         end if;\n       end if;\n \n       --  Check whether this declaration corresponds to the instantiation\n@@ -1183,9 +1252,8 @@ package body Sem_Ch8 is\n       --  is determined in Find_Renamed_Entity. If the entity is an operator,\n       --  Find_Renamed_Entity applies additional visibility checks.\n \n-      if Present (Corresponding_Formal_Spec (N)) then\n-         Is_Actual := True;\n-         Inst_Node := Unit_Declaration_Node (Corresponding_Formal_Spec (N));\n+      if Is_Actual then\n+         Inst_Node := Unit_Declaration_Node (Formal_Spec);\n \n          if Is_Entity_Name (Nam)\n            and then Present (Entity (Nam))\n@@ -1477,9 +1545,7 @@ package body Sem_Ch8 is\n             --  indicate that the renaming is an abstract dispatching operation\n             --  with a controlling type.\n \n-            if Is_Actual\n-              and then Is_Abstract (Corresponding_Formal_Spec (N))\n-            then\n+            if Is_Actual and then Is_Abstract (Formal_Spec) then\n                --  Mark the renaming as abstract here, so Find_Dispatching_Type\n                --  see it as corresponding to a generic association for a\n                --  formal abstract subprogram\n@@ -1547,7 +1613,7 @@ package body Sem_Ch8 is\n \n             if (Ekind (Old_S) = E_Procedure or else Ekind (Old_S) = E_Function)\n               and then Is_Abstract (Old_S)\n-              and then not Is_Abstract (Corresponding_Formal_Spec (N))\n+              and then not Is_Abstract (Formal_Spec)\n             then\n                Error_Msg_N\n                  (\"abstract subprogram not allowed as generic actual\", Nam);\n@@ -2801,14 +2867,15 @@ package body Sem_Ch8 is\n                Case_Str : constant String    := Name_Buffer (1 .. Name_Len);\n                Case_Stm : constant Node_Id   := Parent (Parent (N));\n                Case_Typ : constant Entity_Id := Etype (Expression (Case_Stm));\n+               Case_Rtp : constant Entity_Id := Root_Type (Case_Typ);\n \n                Lit : Node_Id;\n \n             begin\n                if Is_Enumeration_Type (Case_Typ)\n-                 and then Case_Typ /= Standard_Character\n-                 and then Case_Typ /= Standard_Wide_Character\n-                 and then Case_Typ /= Standard_Wide_Wide_Character\n+                 and then Case_Rtp /= Standard_Character\n+                 and then Case_Rtp /= Standard_Wide_Character\n+                 and then Case_Rtp /= Standard_Wide_Wide_Character\n                then\n                   Lit := First_Literal (Case_Typ);\n                   Get_Name_String (Chars (Lit));"}, {"sha": "237984600d7be18138e98a96beaf42ecb43dda32", "filename": "gcc/ada/snames.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d239991ff65181a5e81cd9e103f5543f1904c042/gcc%2Fada%2Fsnames.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d239991ff65181a5e81cd9e103f5543f1904c042/gcc%2Fada%2Fsnames.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsnames.adb?ref=d239991ff65181a5e81cd9e103f5543f1904c042", "patch": "@@ -607,6 +607,7 @@ package body Snames is\n      \"exception_message#\" &\n      \"exception_name#\" &\n      \"file#\" &\n+     \"generic_dispatching_constructor#\" &\n      \"import_address#\" &\n      \"import_largest_value#\" &\n      \"import_value#\" &"}, {"sha": "4c8d2547ef0ed50721aa286d3402027bd12e59b4", "filename": "gcc/ada/snames.ads", "status": "modified", "additions": 97, "deletions": 96, "changes": 193, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d239991ff65181a5e81cd9e103f5543f1904c042/gcc%2Fada%2Fsnames.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d239991ff65181a5e81cd9e103f5543f1904c042/gcc%2Fada%2Fsnames.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsnames.ads?ref=d239991ff65181a5e81cd9e103f5543f1904c042", "patch": "@@ -880,126 +880,127 @@ package Snames is\n    --  Note: Asm is missing from this list, since Asm is a legitimate\n    --  convention name. So is To_Adress, which is a GNAT attribute.\n \n-   First_Intrinsic_Name                : constant Name_Id := N + 544;\n-   Name_Divide                         : constant Name_Id := N + 544;\n-   Name_Enclosing_Entity               : constant Name_Id := N + 545;\n-   Name_Exception_Information          : constant Name_Id := N + 546;\n-   Name_Exception_Message              : constant Name_Id := N + 547;\n-   Name_Exception_Name                 : constant Name_Id := N + 548;\n-   Name_File                           : constant Name_Id := N + 549;\n-   Name_Import_Address                 : constant Name_Id := N + 550;\n-   Name_Import_Largest_Value           : constant Name_Id := N + 551;\n-   Name_Import_Value                   : constant Name_Id := N + 552;\n-   Name_Is_Negative                    : constant Name_Id := N + 553;\n-   Name_Line                           : constant Name_Id := N + 554;\n-   Name_Rotate_Left                    : constant Name_Id := N + 555;\n-   Name_Rotate_Right                   : constant Name_Id := N + 556;\n-   Name_Shift_Left                     : constant Name_Id := N + 557;\n-   Name_Shift_Right                    : constant Name_Id := N + 558;\n-   Name_Shift_Right_Arithmetic         : constant Name_Id := N + 559;\n-   Name_Source_Location                : constant Name_Id := N + 560;\n-   Name_Unchecked_Conversion           : constant Name_Id := N + 561;\n-   Name_Unchecked_Deallocation         : constant Name_Id := N + 562;\n-   Name_To_Pointer                     : constant Name_Id := N + 563;\n-   Last_Intrinsic_Name                 : constant Name_Id := N + 563;\n+   First_Intrinsic_Name                 : constant Name_Id := N + 544;\n+   Name_Divide                          : constant Name_Id := N + 544;\n+   Name_Enclosing_Entity                : constant Name_Id := N + 545;\n+   Name_Exception_Information           : constant Name_Id := N + 546;\n+   Name_Exception_Message               : constant Name_Id := N + 547;\n+   Name_Exception_Name                  : constant Name_Id := N + 548;\n+   Name_File                            : constant Name_Id := N + 549;\n+   Name_Generic_Dispatching_Constructor : constant Name_Id := N + 550;\n+   Name_Import_Address                  : constant Name_Id := N + 551;\n+   Name_Import_Largest_Value            : constant Name_Id := N + 552;\n+   Name_Import_Value                    : constant Name_Id := N + 553;\n+   Name_Is_Negative                     : constant Name_Id := N + 554;\n+   Name_Line                            : constant Name_Id := N + 555;\n+   Name_Rotate_Left                     : constant Name_Id := N + 556;\n+   Name_Rotate_Right                    : constant Name_Id := N + 557;\n+   Name_Shift_Left                      : constant Name_Id := N + 558;\n+   Name_Shift_Right                     : constant Name_Id := N + 559;\n+   Name_Shift_Right_Arithmetic          : constant Name_Id := N + 560;\n+   Name_Source_Location                 : constant Name_Id := N + 561;\n+   Name_Unchecked_Conversion            : constant Name_Id := N + 562;\n+   Name_Unchecked_Deallocation          : constant Name_Id := N + 563;\n+   Name_To_Pointer                      : constant Name_Id := N + 564;\n+   Last_Intrinsic_Name                  : constant Name_Id := N + 564;\n \n    --  Reserved words used only in Ada 95\n \n-   First_95_Reserved_Word              : constant Name_Id := N + 564;\n-   Name_Abstract                       : constant Name_Id := N + 564;\n-   Name_Aliased                        : constant Name_Id := N + 565;\n-   Name_Protected                      : constant Name_Id := N + 566;\n-   Name_Until                          : constant Name_Id := N + 567;\n-   Name_Requeue                        : constant Name_Id := N + 568;\n-   Name_Tagged                         : constant Name_Id := N + 569;\n-   Last_95_Reserved_Word               : constant Name_Id := N + 569;\n+   First_95_Reserved_Word              : constant Name_Id := N + 565;\n+   Name_Abstract                       : constant Name_Id := N + 565;\n+   Name_Aliased                        : constant Name_Id := N + 566;\n+   Name_Protected                      : constant Name_Id := N + 567;\n+   Name_Until                          : constant Name_Id := N + 568;\n+   Name_Requeue                        : constant Name_Id := N + 569;\n+   Name_Tagged                         : constant Name_Id := N + 570;\n+   Last_95_Reserved_Word               : constant Name_Id := N + 570;\n \n    subtype Ada_95_Reserved_Words is\n      Name_Id range First_95_Reserved_Word .. Last_95_Reserved_Word;\n \n    --  Miscellaneous names used in semantic checking\n \n-   Name_Raise_Exception                : constant Name_Id := N + 570;\n+   Name_Raise_Exception                : constant Name_Id := N + 571;\n \n    --  Additional reserved words and identifiers used in GNAT Project Files\n    --  Note that Name_External is already previously declared\n \n-   Name_Ada_Roots                      : constant Name_Id := N + 571;\n-   Name_Binder                         : constant Name_Id := N + 572;\n-   Name_Binder_Driver                  : constant Name_Id := N + 573;\n-   Name_Body_Suffix                    : constant Name_Id := N + 574;\n-   Name_Builder                        : constant Name_Id := N + 575;\n-   Name_Compiler                       : constant Name_Id := N + 576;\n-   Name_Compiler_Driver                : constant Name_Id := N + 577;\n-   Name_Compiler_Kind                  : constant Name_Id := N + 578;\n-   Name_Compute_Dependency             : constant Name_Id := N + 579;\n-   Name_Cross_Reference                : constant Name_Id := N + 580;\n-   Name_Default_Linker                 : constant Name_Id := N + 581;\n-   Name_Default_Switches               : constant Name_Id := N + 582;\n-   Name_Dependency_Option              : constant Name_Id := N + 583;\n-   Name_Exec_Dir                       : constant Name_Id := N + 584;\n-   Name_Executable                     : constant Name_Id := N + 585;\n-   Name_Executable_Suffix              : constant Name_Id := N + 586;\n-   Name_Extends                        : constant Name_Id := N + 587;\n-   Name_Externally_Built               : constant Name_Id := N + 588;\n-   Name_Finder                         : constant Name_Id := N + 589;\n-   Name_Global_Configuration_Pragmas   : constant Name_Id := N + 590;\n-   Name_Gnatls                         : constant Name_Id := N + 591;\n-   Name_Gnatstub                       : constant Name_Id := N + 592;\n-   Name_Implementation                 : constant Name_Id := N + 593;\n-   Name_Implementation_Exceptions      : constant Name_Id := N + 594;\n-   Name_Implementation_Suffix          : constant Name_Id := N + 595;\n-   Name_Include_Option                 : constant Name_Id := N + 596;\n-   Name_Language_Processing            : constant Name_Id := N + 597;\n-   Name_Languages                      : constant Name_Id := N + 598;\n-   Name_Library_Dir                    : constant Name_Id := N + 599;\n-   Name_Library_Auto_Init              : constant Name_Id := N + 600;\n-   Name_Library_GCC                    : constant Name_Id := N + 601;\n-   Name_Library_Interface              : constant Name_Id := N + 602;\n-   Name_Library_Kind                   : constant Name_Id := N + 603;\n-   Name_Library_Name                   : constant Name_Id := N + 604;\n-   Name_Library_Options                : constant Name_Id := N + 605;\n-   Name_Library_Reference_Symbol_File  : constant Name_Id := N + 606;\n-   Name_Library_Src_Dir                : constant Name_Id := N + 607;\n-   Name_Library_Symbol_File            : constant Name_Id := N + 608;\n-   Name_Library_Symbol_Policy          : constant Name_Id := N + 609;\n-   Name_Library_Version                : constant Name_Id := N + 610;\n-   Name_Linker                         : constant Name_Id := N + 611;\n-   Name_Local_Configuration_Pragmas    : constant Name_Id := N + 612;\n-   Name_Locally_Removed_Files          : constant Name_Id := N + 613;\n-   Name_Metrics                        : constant Name_Id := N + 614;\n-   Name_Naming                         : constant Name_Id := N + 615;\n-   Name_Object_Dir                     : constant Name_Id := N + 616;\n-   Name_Pretty_Printer                 : constant Name_Id := N + 617;\n-   Name_Project                        : constant Name_Id := N + 618;\n-   Name_Separate_Suffix                : constant Name_Id := N + 619;\n-   Name_Source_Dirs                    : constant Name_Id := N + 620;\n-   Name_Source_Files                   : constant Name_Id := N + 621;\n-   Name_Source_List_File               : constant Name_Id := N + 622;\n-   Name_Spec                           : constant Name_Id := N + 623;\n-   Name_Spec_Suffix                    : constant Name_Id := N + 624;\n-   Name_Specification                  : constant Name_Id := N + 625;\n-   Name_Specification_Exceptions       : constant Name_Id := N + 626;\n-   Name_Specification_Suffix           : constant Name_Id := N + 627;\n-   Name_Switches                       : constant Name_Id := N + 628;\n+   Name_Ada_Roots                      : constant Name_Id := N + 572;\n+   Name_Binder                         : constant Name_Id := N + 573;\n+   Name_Binder_Driver                  : constant Name_Id := N + 574;\n+   Name_Body_Suffix                    : constant Name_Id := N + 575;\n+   Name_Builder                        : constant Name_Id := N + 576;\n+   Name_Compiler                       : constant Name_Id := N + 577;\n+   Name_Compiler_Driver                : constant Name_Id := N + 578;\n+   Name_Compiler_Kind                  : constant Name_Id := N + 579;\n+   Name_Compute_Dependency             : constant Name_Id := N + 580;\n+   Name_Cross_Reference                : constant Name_Id := N + 581;\n+   Name_Default_Linker                 : constant Name_Id := N + 582;\n+   Name_Default_Switches               : constant Name_Id := N + 583;\n+   Name_Dependency_Option              : constant Name_Id := N + 584;\n+   Name_Exec_Dir                       : constant Name_Id := N + 585;\n+   Name_Executable                     : constant Name_Id := N + 586;\n+   Name_Executable_Suffix              : constant Name_Id := N + 587;\n+   Name_Extends                        : constant Name_Id := N + 588;\n+   Name_Externally_Built               : constant Name_Id := N + 589;\n+   Name_Finder                         : constant Name_Id := N + 590;\n+   Name_Global_Configuration_Pragmas   : constant Name_Id := N + 591;\n+   Name_Gnatls                         : constant Name_Id := N + 592;\n+   Name_Gnatstub                       : constant Name_Id := N + 593;\n+   Name_Implementation                 : constant Name_Id := N + 594;\n+   Name_Implementation_Exceptions      : constant Name_Id := N + 595;\n+   Name_Implementation_Suffix          : constant Name_Id := N + 596;\n+   Name_Include_Option                 : constant Name_Id := N + 597;\n+   Name_Language_Processing            : constant Name_Id := N + 598;\n+   Name_Languages                      : constant Name_Id := N + 599;\n+   Name_Library_Dir                    : constant Name_Id := N + 600;\n+   Name_Library_Auto_Init              : constant Name_Id := N + 601;\n+   Name_Library_GCC                    : constant Name_Id := N + 602;\n+   Name_Library_Interface              : constant Name_Id := N + 603;\n+   Name_Library_Kind                   : constant Name_Id := N + 604;\n+   Name_Library_Name                   : constant Name_Id := N + 605;\n+   Name_Library_Options                : constant Name_Id := N + 606;\n+   Name_Library_Reference_Symbol_File  : constant Name_Id := N + 607;\n+   Name_Library_Src_Dir                : constant Name_Id := N + 608;\n+   Name_Library_Symbol_File            : constant Name_Id := N + 609;\n+   Name_Library_Symbol_Policy          : constant Name_Id := N + 610;\n+   Name_Library_Version                : constant Name_Id := N + 611;\n+   Name_Linker                         : constant Name_Id := N + 612;\n+   Name_Local_Configuration_Pragmas    : constant Name_Id := N + 613;\n+   Name_Locally_Removed_Files          : constant Name_Id := N + 614;\n+   Name_Metrics                        : constant Name_Id := N + 615;\n+   Name_Naming                         : constant Name_Id := N + 616;\n+   Name_Object_Dir                     : constant Name_Id := N + 617;\n+   Name_Pretty_Printer                 : constant Name_Id := N + 618;\n+   Name_Project                        : constant Name_Id := N + 619;\n+   Name_Separate_Suffix                : constant Name_Id := N + 620;\n+   Name_Source_Dirs                    : constant Name_Id := N + 621;\n+   Name_Source_Files                   : constant Name_Id := N + 622;\n+   Name_Source_List_File               : constant Name_Id := N + 623;\n+   Name_Spec                           : constant Name_Id := N + 624;\n+   Name_Spec_Suffix                    : constant Name_Id := N + 625;\n+   Name_Specification                  : constant Name_Id := N + 626;\n+   Name_Specification_Exceptions       : constant Name_Id := N + 627;\n+   Name_Specification_Suffix           : constant Name_Id := N + 628;\n+   Name_Switches                       : constant Name_Id := N + 629;\n \n    --  Other miscellaneous names used in front end\n \n-   Name_Unaligned_Valid                : constant Name_Id := N + 629;\n+   Name_Unaligned_Valid                : constant Name_Id := N + 630;\n \n    --  ----------------------------------------------------------------\n-   First_2005_Reserved_Word            : constant Name_Id := N + 630;\n-   Name_Interface                      : constant Name_Id := N + 630;\n-   Name_Overriding                     : constant Name_Id := N + 631;\n-   Name_Synchronized                   : constant Name_Id := N + 632;\n-   Last_2005_Reserved_Word             : constant Name_Id := N + 632;\n+   First_2005_Reserved_Word            : constant Name_Id := N + 631;\n+   Name_Interface                      : constant Name_Id := N + 631;\n+   Name_Overriding                     : constant Name_Id := N + 632;\n+   Name_Synchronized                   : constant Name_Id := N + 633;\n+   Last_2005_Reserved_Word             : constant Name_Id := N + 633;\n \n    subtype Ada_2005_Reserved_Words is\n      Name_Id range First_2005_Reserved_Word .. Last_2005_Reserved_Word;\n \n    --  Mark last defined name for consistency check in Snames body\n \n-   Last_Predefined_Name                : constant Name_Id := N + 632;\n+   Last_Predefined_Name                : constant Name_Id := N + 633;\n \n    subtype Any_Operator_Name is Name_Id range\n      First_Operator_Name .. Last_Operator_Name;"}]}