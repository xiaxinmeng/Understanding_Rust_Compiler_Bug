{"sha": "57c8cf5d5b14a02a44e6c896c7677e38027f2937", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTdjOGNmNWQ1YjE0YTAyYTQ0ZTZjODk2Yzc2NzdlMzgwMjdmMjkzNw==", "commit": {"author": {"name": "Revital Eres", "email": "eres@il.ibm.com", "date": "2008-01-17T10:19:58Z"}, "committer": {"name": "Revital Eres", "email": "revitale@gcc.gnu.org", "date": "2008-01-17T10:19:58Z"}, "message": "Fix pr30957-1.c testcase\n\nFrom-SVN: r131593", "tree": {"sha": "683c581e7991ea6e2da4d8d4f972f5b7dda49514", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/683c581e7991ea6e2da4d8d4f972f5b7dda49514"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/57c8cf5d5b14a02a44e6c896c7677e38027f2937", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57c8cf5d5b14a02a44e6c896c7677e38027f2937", "html_url": "https://github.com/Rust-GCC/gccrs/commit/57c8cf5d5b14a02a44e6c896c7677e38027f2937", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57c8cf5d5b14a02a44e6c896c7677e38027f2937/comments", "author": {"login": "revit13", "id": 16211463, "node_id": "MDQ6VXNlcjE2MjExNDYz", "avatar_url": "https://avatars.githubusercontent.com/u/16211463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/revit13", "html_url": "https://github.com/revit13", "followers_url": "https://api.github.com/users/revit13/followers", "following_url": "https://api.github.com/users/revit13/following{/other_user}", "gists_url": "https://api.github.com/users/revit13/gists{/gist_id}", "starred_url": "https://api.github.com/users/revit13/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/revit13/subscriptions", "organizations_url": "https://api.github.com/users/revit13/orgs", "repos_url": "https://api.github.com/users/revit13/repos", "events_url": "https://api.github.com/users/revit13/events{/privacy}", "received_events_url": "https://api.github.com/users/revit13/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1c8bcdf715b0475effdd0cc2c27d461c3ce5540f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c8bcdf715b0475effdd0cc2c27d461c3ce5540f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1c8bcdf715b0475effdd0cc2c27d461c3ce5540f"}], "stats": {"total": 15, "additions": 12, "deletions": 3}, "files": [{"sha": "e379da02b300057ab7bbb52c4daf67f1a09e9bac", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57c8cf5d5b14a02a44e6c896c7677e38027f2937/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57c8cf5d5b14a02a44e6c896c7677e38027f2937/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=57c8cf5d5b14a02a44e6c896c7677e38027f2937", "patch": "@@ -1,3 +1,8 @@\n+2008-01-17  Revital Eres  <eres@il.ibm.com>\n+\n+\tPR30957\n+\t* gcc.dg/pr30957-1.c: Always xfail and add noinline attribute.\n+\n 2008-01-17  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/34429"}, {"sha": "44cdf9db9b0893adc3e84bf437ab9d7cc185611d", "filename": "gcc/testsuite/gcc.dg/pr30957-1.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57c8cf5d5b14a02a44e6c896c7677e38027f2937/gcc%2Ftestsuite%2Fgcc.dg%2Fpr30957-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57c8cf5d5b14a02a44e6c896c7677e38027f2937/gcc%2Ftestsuite%2Fgcc.dg%2Fpr30957-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr30957-1.c?ref=57c8cf5d5b14a02a44e6c896c7677e38027f2937", "patch": "@@ -1,13 +1,17 @@\n-/* { dg-do run { xfail vax-*-* powerpc-*-*spe } } */\n+/* { dg-do run { xfail *-*-* } } */\n /* We don't (and don't want to) perform this optimisation on soft-float\n-   targets, where each addition is a library call.  */\n+   targets, where each addition is a library call.  This test requires\n+   -fassociative-math for enabling the variable-expansion as well as\n+   -fsigned-zeros for honoring the sign of zero; but\n+   they can not co-exist; also under -funsafe-math-optimizations, so we\n+   expect it to fail.  */\n /* { dg-require-effective-target hard_float } */\n /* { dg-options \"-O2 -funroll-loops -funsafe-math-optimizations -fvariable-expansion-in-unroller -dL\" } */\n \n extern void abort (void);\n extern void exit (int);\n \n-float\n+float __attribute__((noinline))\n foo (float d, int n)\n {\n   unsigned i;"}]}