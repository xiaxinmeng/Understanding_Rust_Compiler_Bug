{"sha": "4d49c6e1495d4fb524123042ef1e52738b699733", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGQ0OWM2ZTE0OTVkNGZiNTI0MTIzMDQyZWYxZTUyNzM4YjY5OTczMw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-08-01T10:04:35Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-08-01T10:04:35Z"}, "message": "[multiple changes]\n\n2014-08-01  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_res.adb: Minor comment addition.\n\n2014-08-01  Arnaud Charlet  <charlet@adacore.com>\n\n\t* s-crtl.ads, i-cstrea.ads, adaint.c, adaint.h, osint.adb,\n\ts-fileio.adb (__gnat_fopen, __gnat_freopen): Remove vms_form parameter,\n\tno longer used.\n\t* s-os_lib.ads: Minor reformatting.\n\nFrom-SVN: r213441", "tree": {"sha": "5eb404af953f3dc94a89c389bbe230bd928c27e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5eb404af953f3dc94a89c389bbe230bd928c27e4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4d49c6e1495d4fb524123042ef1e52738b699733", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d49c6e1495d4fb524123042ef1e52738b699733", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4d49c6e1495d4fb524123042ef1e52738b699733", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d49c6e1495d4fb524123042ef1e52738b699733/comments", "author": null, "committer": null, "parents": [{"sha": "d18bbd25340adf4768c4e71ecd655630513876c7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d18bbd25340adf4768c4e71ecd655630513876c7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d18bbd25340adf4768c4e71ecd655630513876c7"}], "stats": {"total": 69, "additions": 33, "deletions": 36}, "files": [{"sha": "f174a297681548db422d2d6966ca20d5cfa841b7", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d49c6e1495d4fb524123042ef1e52738b699733/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d49c6e1495d4fb524123042ef1e52738b699733/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=4d49c6e1495d4fb524123042ef1e52738b699733", "patch": "@@ -1,3 +1,14 @@\n+2014-08-01  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_res.adb: Minor comment addition.\n+\n+2014-08-01  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* s-crtl.ads, i-cstrea.ads, adaint.c, adaint.h, osint.adb,\n+\ts-fileio.adb (__gnat_fopen, __gnat_freopen): Remove vms_form parameter,\n+\tno longer used.\n+\t* s-os_lib.ads: Minor reformatting.\n+\n 2014-08-01  Arnaud Charlet  <charlet@adacore.com>\n \n \t* exp_attr.adb (Is_Inline_Floating_Point_Attribute): Restore more"}, {"sha": "2fbecb4246393555ac444ec67f0619b342606375", "filename": "gcc/ada/adaint.c", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d49c6e1495d4fb524123042ef1e52738b699733/gcc%2Fada%2Fadaint.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d49c6e1495d4fb524123042ef1e52738b699733/gcc%2Fada%2Fadaint.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fadaint.c?ref=4d49c6e1495d4fb524123042ef1e52738b699733", "patch": "@@ -744,8 +744,7 @@ __gnat_fputwc(int c, FILE *stream)\n }\n \n FILE *\n-__gnat_fopen (char *path, char *mode, int encoding ATTRIBUTE_UNUSED,\n-              char *vms_form ATTRIBUTE_UNUSED)\n+__gnat_fopen (char *path, char *mode, int encoding ATTRIBUTE_UNUSED)\n {\n #if defined (_WIN32) && ! defined (__vxworks) && ! defined (IS_CROSS)\n   TCHAR wpath[GNAT_MAX_PATH_LEN];\n@@ -771,8 +770,7 @@ FILE *\n __gnat_freopen (char *path,\n \t\tchar *mode,\n \t\tFILE *stream,\n-\t\tint encoding ATTRIBUTE_UNUSED,\n-                char *vms_form ATTRIBUTE_UNUSED)\n+\t\tint encoding ATTRIBUTE_UNUSED)\n {\n #if defined (_WIN32) && ! defined (__vxworks) && ! defined (IS_CROSS)\n   TCHAR wpath[GNAT_MAX_PATH_LEN];"}, {"sha": "d2a838e53f5476d1ddaa26d5f155fd186ddc002a", "filename": "gcc/ada/adaint.h", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d49c6e1495d4fb524123042ef1e52738b699733/gcc%2Fada%2Fadaint.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d49c6e1495d4fb524123042ef1e52738b699733/gcc%2Fada%2Fadaint.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fadaint.h?ref=4d49c6e1495d4fb524123042ef1e52738b699733", "patch": "@@ -148,10 +148,9 @@ extern int    __gnat_rename                        (char *, char *);\n extern int    __gnat_chdir                         (char *);\n extern int    __gnat_rmdir                         (char *);\n \n-extern FILE  *__gnat_fopen\t\t\t   (char *, char *, int,\n-\t\t\t\t\t\t    char *);\n+extern FILE  *__gnat_fopen\t\t\t   (char *, char *, int);\n extern FILE  *__gnat_freopen\t\t\t   (char *, char *, FILE *,\n-\t\t\t\t                    int, char *);\n+\t\t\t\t                    int);\n extern int    __gnat_open                          (char *, int);\n extern int    __gnat_open_read                     (char *, int);\n extern int    __gnat_open_rw                       (char *, int);"}, {"sha": "5927e5f95c20edcf20796f34111063e71f77b808", "filename": "gcc/ada/i-cstrea.ads", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d49c6e1495d4fb524123042ef1e52738b699733/gcc%2Fada%2Fi-cstrea.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d49c6e1495d4fb524123042ef1e52738b699733/gcc%2Fada%2Fi-cstrea.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fi-cstrea.ads?ref=4d49c6e1495d4fb524123042ef1e52738b699733", "patch": "@@ -108,9 +108,8 @@ package Interfaces.C_Streams is\n    function fopen\n      (filename : chars;\n       mode     : chars;\n-      encoding : System.CRTL.Filename_Encoding := System.CRTL.UTF8;\n-      vms_form : chars := System.Null_Address) return FILEs\n-     renames System.CRTL.fopen;\n+      encoding : System.CRTL.Filename_Encoding := System.CRTL.UTF8)\n+     return FILEs renames System.CRTL.fopen;\n    --  Note: to maintain target independence, use text_translation_required,\n    --  a boolean variable defined in sysdep.c to deal with the target\n    --  dependent text translation requirement. If this variable is set,\n@@ -148,9 +147,8 @@ package Interfaces.C_Streams is\n      (filename : chars;\n       mode     : chars;\n       stream   : FILEs;\n-      encoding : System.CRTL.Filename_Encoding := System.CRTL.UTF8;\n-      vms_form : chars := System.Null_Address) return FILEs\n-     renames System.CRTL.freopen;\n+      encoding : System.CRTL.Filename_Encoding := System.CRTL.UTF8)\n+     return FILEs renames System.CRTL.freopen;\n \n    function fseek\n      (stream : FILEs;"}, {"sha": "2fb1618e6e105ef1a2f598379be61f62ca67b809", "filename": "gcc/ada/osint.adb", "status": "modified", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d49c6e1495d4fb524123042ef1e52738b699733/gcc%2Fada%2Fosint.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d49c6e1495d4fb524123042ef1e52738b699733/gcc%2Fada%2Fosint.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fosint.adb?ref=4d49c6e1495d4fb524123042ef1e52738b699733", "patch": "@@ -1276,21 +1276,6 @@ package body Osint is\n       --  Command_Name(Cindex1 .. Cindex2) is now the equivalent of the\n       --  POSIX command \"basename argv[0]\"\n \n-      --  Strip off any versioning information found on some systems. This\n-      --  would take the form of TOOL.exe followed by a \";\" or \".\" and a\n-      --  sequence of one or more numbers.\n-\n-      if Command_Name (Cindex2) in '0' .. '9' then\n-         for J in reverse Cindex1 .. Cindex2 loop\n-            if Command_Name (J) = '.' or else Command_Name (J) = ';' then\n-               Cindex2 := J - 1;\n-               exit;\n-            end if;\n-\n-            exit when Command_Name (J) not in '0' .. '9';\n-         end loop;\n-      end if;\n-\n       --  Strip off any executable extension (usually nothing or .exe)\n       --  but formally reported by autoconf in the variable EXEEXT\n "}, {"sha": "835bbd9e3ae4f4b13a4b307903d290cec5aadefe", "filename": "gcc/ada/s-crtl.ads", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d49c6e1495d4fb524123042ef1e52738b699733/gcc%2Fada%2Fs-crtl.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d49c6e1495d4fb524123042ef1e52738b699733/gcc%2Fada%2Fs-crtl.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-crtl.ads?ref=4d49c6e1495d4fb524123042ef1e52738b699733", "patch": "@@ -117,8 +117,7 @@ package System.CRTL is\n    function fopen\n      (filename : chars;\n       mode     : chars;\n-      encoding : Filename_Encoding := Unspecified;\n-      vms_form : chars := System.Null_Address) return FILEs;\n+      encoding : Filename_Encoding := Unspecified) return FILEs;\n    pragma Import (C, fopen, \"__gnat_fopen\");\n \n    function fputc (C : int; stream : FILEs) return int;\n@@ -137,8 +136,7 @@ package System.CRTL is\n      (filename : chars;\n       mode     : chars;\n       stream   : FILEs;\n-      encoding : Filename_Encoding := Unspecified;\n-      vms_form : chars := System.Null_Address) return FILEs;\n+      encoding : Filename_Encoding := Unspecified) return FILEs;\n    pragma Import (C, freopen, \"__gnat_freopen\");\n \n    function fseek"}, {"sha": "73838bf8e54b94113f911ffd05a6d61a2d0ae0af", "filename": "gcc/ada/s-fileio.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d49c6e1495d4fb524123042ef1e52738b699733/gcc%2Fada%2Fs-fileio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d49c6e1495d4fb524123042ef1e52738b699733/gcc%2Fada%2Fs-fileio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-fileio.adb?ref=4d49c6e1495d4fb524123042ef1e52738b699733", "patch": "@@ -1068,7 +1068,7 @@ package body System.File_IO is\n             --  may have changed and we do not want to delete a different file.\n \n             Stream :=\n-              fopen (Namestr'Address, Fopstr'Address, Encoding, Null_Address);\n+              fopen (Namestr'Address, Fopstr'Address, Encoding);\n \n             if Stream = NULL_Stream then\n \n@@ -1222,7 +1222,7 @@ package body System.File_IO is\n \n          File.Stream := freopen\n            (File.Name.all'Address, Fopstr'Address, File.Stream,\n-            File.Encoding, Null_Address);\n+            File.Encoding);\n \n          if File.Stream = NULL_Stream then\n             Close (File_Ptr);"}, {"sha": "77052cdb9b656c637f9b15e589344ff4cde20ccd", "filename": "gcc/ada/s-os_lib.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d49c6e1495d4fb524123042ef1e52738b699733/gcc%2Fada%2Fs-os_lib.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d49c6e1495d4fb524123042ef1e52738b699733/gcc%2Fada%2Fs-os_lib.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-os_lib.ads?ref=4d49c6e1495d4fb524123042ef1e52738b699733", "patch": "@@ -426,7 +426,7 @@ package System.OS_Lib is\n    --  to the current position (origin = SEEK_CUR), end of file (origin =\n    --  SEEK_END), or start of file (origin = SEEK_SET).\n \n-   type Large_File_Size is range -(2 ** 63) .. (2 ** 63) - 1;\n+   type Large_File_Size is range -2 ** 63 .. 2 ** 63 - 1;\n \n    function File_Length (FD : File_Descriptor) return Long_Integer;\n    pragma Import (C, File_Length, \"__gnat_file_length_long\");"}, {"sha": "dd7aedd1e8f70d0967e4430f6245efc8fa3c5eee", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d49c6e1495d4fb524123042ef1e52738b699733/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d49c6e1495d4fb524123042ef1e52738b699733/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=4d49c6e1495d4fb524123042ef1e52738b699733", "patch": "@@ -11512,7 +11512,15 @@ package body Sem_Res is\n                      Remove_Interp (I);\n                   end if;\n \n-                  if Present (System_Aux_Id)\n+                  --  When compiling for a system where Address is of a visible\n+                  --  integer type, spurious ambiguities can be produced when\n+                  --  arithmetic operations have a literal operand and return\n+                  --  System.Address or a descendant of it. These ambiguities\n+                  --  are usually resolved by the context, but for conversions\n+                  --  there is no context type and the removal of the spurious\n+                  --  operations must be done explicitly here.\n+\n+                  if not Address_Is_Private\n                     and then Is_Descendent_Of_Address (It.Typ)\n                   then\n                      Remove_Interp (I);"}]}