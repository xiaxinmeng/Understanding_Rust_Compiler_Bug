{"sha": "e1617c1d3837a5d914a6bfd6b01f46c941d0caca", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTE2MTdjMWQzODM3YTVkOTE0YTZiZmQ2YjAxZjQ2Yzk0MWQwY2FjYQ==", "commit": {"author": {"name": "Yury Gribov", "email": "tetra2005@gmail.com", "date": "2018-02-16T20:38:14Z"}, "committer": {"name": "Yury Gribov", "email": "ygribov@gcc.gnu.org", "date": "2018-02-16T20:38:14Z"}, "message": "Fix PowerPC tests in PR 81535.\n\ngcc/testsuite/\n\n2018-02-16  Yury Gribov  <tetra2005@gmail.com>\n\n\tPR target/81535\n\t* gcc.dg/pr56727-1.c: Prevent tailcalls and update for powerpc*-*-*.\n\t* gcc.dg/pr56727-2.c: Ditto.\n\t* gcc.target/powerpc/pr79439.c: Renamed to...\n\t* gcc.target/powerpc/pr79439-1.c: ...this.\n\t* gcc.target/powerpc/pr79439-2.c: New test.\n\t* gcc.target/powerpc/pr79439-3.c: New test.\n\nFrom-SVN: r257760", "tree": {"sha": "48945b033934a978622d971f85ea1ccd5e474e44", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/48945b033934a978622d971f85ea1ccd5e474e44"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e1617c1d3837a5d914a6bfd6b01f46c941d0caca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1617c1d3837a5d914a6bfd6b01f46c941d0caca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e1617c1d3837a5d914a6bfd6b01f46c941d0caca", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1617c1d3837a5d914a6bfd6b01f46c941d0caca/comments", "author": {"login": "yugr", "id": 1101391, "node_id": "MDQ6VXNlcjExMDEzOTE=", "avatar_url": "https://avatars.githubusercontent.com/u/1101391?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yugr", "html_url": "https://github.com/yugr", "followers_url": "https://api.github.com/users/yugr/followers", "following_url": "https://api.github.com/users/yugr/following{/other_user}", "gists_url": "https://api.github.com/users/yugr/gists{/gist_id}", "starred_url": "https://api.github.com/users/yugr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yugr/subscriptions", "organizations_url": "https://api.github.com/users/yugr/orgs", "repos_url": "https://api.github.com/users/yugr/repos", "events_url": "https://api.github.com/users/yugr/events{/privacy}", "received_events_url": "https://api.github.com/users/yugr/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "023e7b552641153895b906b6da22f6703c3bfdae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/023e7b552641153895b906b6da22f6703c3bfdae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/023e7b552641153895b906b6da22f6703c3bfdae"}], "stats": {"total": 84, "additions": 78, "deletions": 6}, "files": [{"sha": "1604854d8864831c09df9430c61c7aea5c662262", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1617c1d3837a5d914a6bfd6b01f46c941d0caca/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1617c1d3837a5d914a6bfd6b01f46c941d0caca/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e1617c1d3837a5d914a6bfd6b01f46c941d0caca", "patch": "@@ -1,3 +1,13 @@\n+2018-02-16  Yury Gribov  <tetra2005@gmail.com>\n+\n+\tPR target/81535\n+\t* gcc.dg/pr56727-1.c: Prevent tailcalls and update for powerpc*-*-*.\n+\t* gcc.dg/pr56727-2.c: Ditto.\n+\t* gcc.target/powerpc/pr79439.c: Renamed to...\n+\t* gcc.target/powerpc/pr79439-1.c: ...this.\n+\t* gcc.target/powerpc/pr79439-2.c: New test.\n+\t* gcc.target/powerpc/pr79439-3.c: New test.\n+\n 2018-02-16  Will Schmidt  <will_schmidt@vnet.ibm.com>\n \n \ttarget/pr84371"}, {"sha": "a26edb2bf9be8091f486f7fbdbfe326dc60255ee", "filename": "gcc/testsuite/gcc.dg/pr56727-1.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1617c1d3837a5d914a6bfd6b01f46c941d0caca/gcc%2Ftestsuite%2Fgcc.dg%2Fpr56727-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1617c1d3837a5d914a6bfd6b01f46c941d0caca/gcc%2Ftestsuite%2Fgcc.dg%2Fpr56727-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr56727-1.c?ref=e1617c1d3837a5d914a6bfd6b01f46c941d0caca", "patch": "@@ -1,6 +1,5 @@\n /* { dg-do compile { target fpic } } */\n /* { dg-options \"-O2 -fPIC\" } */\n-/* { dg-final { scan-assembler-not \"@(PLT|plt)\" { target i?86-*-* x86_64-*-* powerpc*-*-* } } } */\n \n #define define_func(type) \\\n   void f_ ## type (type b) { f_ ## type (0); } \\\n@@ -21,3 +20,7 @@ int __attribute__((noinline, noclone)) foo_noinline(int n)\n {\n   return (n == 1 || n == 2) ? 1 : foo_noinline(n-1) * foo_noinline(n-2);\n }\n+\n+/* { dg-final { scan-assembler-not \"@(PLT|plt)\" { target i?86-*-* x86_64-*-* } } } */\n+/* { dg-final { scan-assembler-not \"@(PLT|plt)\" { target { powerpc*-*-* && ilp32 } } } } */\n+/* { dg-final { scan-assembler-not \"bl \\[a-z_\\]*\\n\\\\s*nop\" { target { powerpc*-*-* && lp64 } } } } */"}, {"sha": "c54369ed25ec1530ee1fcec35cc78ce3cde278c6", "filename": "gcc/testsuite/gcc.dg/pr56727-2.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1617c1d3837a5d914a6bfd6b01f46c941d0caca/gcc%2Ftestsuite%2Fgcc.dg%2Fpr56727-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1617c1d3837a5d914a6bfd6b01f46c941d0caca/gcc%2Ftestsuite%2Fgcc.dg%2Fpr56727-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr56727-2.c?ref=e1617c1d3837a5d914a6bfd6b01f46c941d0caca", "patch": "@@ -1,11 +1,11 @@\n /* { dg-do compile { target fpic } } */\n /* { dg-options \"-O2 -fPIC\" } */\n /* { dg-require-alias \"\" } */\n-/* { dg-final { scan-assembler \"@(PLT|plt)\" { target i?86-*-* x86_64-*-* powerpc*-*-linux* } } } */\n \n __attribute__((noinline, noclone))\n void f (short b)\n {\n+  __builtin_setjmp (0);  /* Prevent tailcall */\n   f (0);\n }\n \n@@ -15,3 +15,7 @@ void h ()\n {\n   g (0);\n }\n+\n+/* { dg-final { scan-assembler \"@(PLT|plt)\" { target i?86-*-* x86_64-*-* } } } */\n+/* { dg-final { scan-assembler \"@(PLT|plt)\" { target { powerpc*-*-linux* && ilp32 } } } } */\n+/* { dg-final { scan-assembler \"bl f\\n\\\\s*nop\" { target { powerpc*-*-linux* && lp64 } } } } */"}, {"sha": "5732a236c8e64158d2f70f1d2e472605d381fd27", "filename": "gcc/testsuite/gcc.target/powerpc/pr79439-1.c", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1617c1d3837a5d914a6bfd6b01f46c941d0caca/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr79439-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1617c1d3837a5d914a6bfd6b01f46c941d0caca/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr79439-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr79439-1.c?ref=e1617c1d3837a5d914a6bfd6b01f46c941d0caca", "patch": "@@ -0,0 +1,28 @@\n+/* { dg-do compile { target { powerpc*-*-linux* && lp64 } } } */\n+/* { dg-options \"-O2 -fpic -fno-reorder-blocks\" } */\n+\n+/* On the Linux 64-bit ABIs, we eliminate NOP in the 'rec' call even if\n+   -fpic is used.  The recursive call should call the local alias.  The\n+   Linux 32-bit ABIs do not require NOPs after the BL instruction.  */\n+\n+int f (void);\n+\n+void\n+g (void)\n+{\n+}\n+\n+int\n+rec (int a)\n+{\n+  int ret = 0;\n+  if (a > 10 && f ())\n+    ret += rec (a - 1);\n+  g ();\n+  return a + ret;\n+}\n+\n+/* { dg-final { scan-assembler-times {\\mbl f\\M}   1 } } */\n+/* { dg-final { scan-assembler-times {\\mbl g\\M}   1 } } */\n+/* { dg-final { scan-assembler-times {\\mbl rec\\M} 1 } } */\n+/* { dg-final { scan-assembler-times {\\mnop\\M}    2 } } */"}, {"sha": "b53af445265910c7b27037877caddeca307c9e7f", "filename": "gcc/testsuite/gcc.target/powerpc/pr79439-2.c", "status": "renamed", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1617c1d3837a5d914a6bfd6b01f46c941d0caca/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr79439-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1617c1d3837a5d914a6bfd6b01f46c941d0caca/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr79439-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr79439-2.c?ref=e1617c1d3837a5d914a6bfd6b01f46c941d0caca", "patch": "@@ -1,9 +1,9 @@\n-/* { dg-do compile { target { powerpc64*-*-linux* && lp64 } } } */\n-/* { dg-options \"-O2 -fpic\" } */\n+/* { dg-do compile { target { powerpc*-*-linux* && lp64 } } } */\n+/* { dg-options \"-O2 -fpic -fno-reorder-blocks\" } */\n \n /* On the Linux 64-bit ABIs, we should not eliminate NOP in the 'rec' call if\n-   -fpic is used because rec can be interposed at link time (since it is\n-   external), and the recursive call should call the interposed function.  The\n+   -fpic is used because rec can be interposed at link time (since it has an\n+   alias), and the recursive call should call the interposed function.  The\n    Linux 32-bit ABIs do not require NOPs after the BL instruction.  */\n \n int f (void);\n@@ -23,6 +23,8 @@ rec (int a)\n   return a + ret;\n }\n \n+int rec_alias (int) __attribute__ ((alias (\"rec\")));\n+\n /* { dg-final { scan-assembler-times {\\mbl f\\M}   1 } } */\n /* { dg-final { scan-assembler-times {\\mbl g\\M}   1 } } */\n /* { dg-final { scan-assembler-times {\\mbl rec\\M} 1 } } */", "previous_filename": "gcc/testsuite/gcc.target/powerpc/pr79439.c"}, {"sha": "762ca44b17772df191cee71080d3db51e0feb982", "filename": "gcc/testsuite/gcc.target/powerpc/pr79439-3.c", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1617c1d3837a5d914a6bfd6b01f46c941d0caca/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr79439-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1617c1d3837a5d914a6bfd6b01f46c941d0caca/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr79439-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr79439-3.c?ref=e1617c1d3837a5d914a6bfd6b01f46c941d0caca", "patch": "@@ -0,0 +1,25 @@\n+/* { dg-do compile { target { powerpc-*-linux* && ilp32 } } } */\n+/* { dg-options \"-O2 -fpic -fno-reorder-blocks\" } */\n+\n+/* Analog of pr79439-1.c for 32-bit Linux.  */\n+\n+int f (void);\n+\n+void\n+g (void)\n+{\n+}\n+\n+int\n+rec (int a)\n+{\n+  int ret = 0;\n+  if (a > 10 && f ())\n+    ret += rec (a - 1);\n+  g ();\n+  return a + ret;\n+}\n+\n+/* { dg-final { scan-assembler-times {\\mbl f@plt\\M}   1 } } */\n+/* { dg-final { scan-assembler-times {\\mbl g@plt\\M}   1 } } */\n+/* { dg-final { scan-assembler-times {\\mbl rec@plt\\M} 0 } } */"}]}