{"sha": "52cf95a7d43d865fd35f73d49400479d540e63e9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTJjZjk1YTdkNDNkODY1ZmQzNWY3M2Q0OTQwMDQ3OWQ1NDBlNjNlOQ==", "commit": {"author": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1995-02-27T22:06:25Z"}, "committer": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1995-02-27T22:06:25Z"}, "message": "(do_include): Check for redundant file before opening in relative path case.\n\n(do_include): Check for redundant file before opening in\nrelative path case.  Don't call fstat unnecessarily.\n\nFrom-SVN: r9091", "tree": {"sha": "7377477d2cf11f6a86fff4cd28a90591e1a10485", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7377477d2cf11f6a86fff4cd28a90591e1a10485"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/52cf95a7d43d865fd35f73d49400479d540e63e9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52cf95a7d43d865fd35f73d49400479d540e63e9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/52cf95a7d43d865fd35f73d49400479d540e63e9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52cf95a7d43d865fd35f73d49400479d540e63e9/comments", "author": null, "committer": null, "parents": [{"sha": "e7faa2f6cb2f8a3de6adbe631f1e4bbfed76ad41", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7faa2f6cb2f8a3de6adbe631f1e4bbfed76ad41", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e7faa2f6cb2f8a3de6adbe631f1e4bbfed76ad41"}], "stats": {"total": 67, "additions": 35, "deletions": 32}, "files": [{"sha": "a97420b78c7d14541dee72da12e50b89fc243b5c", "filename": "gcc/cccp.c", "status": "modified", "additions": 35, "deletions": 32, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52cf95a7d43d865fd35f73d49400479d540e63e9/gcc%2Fcccp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52cf95a7d43d865fd35f73d49400479d540e63e9/gcc%2Fcccp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcccp.c?ref=52cf95a7d43d865fd35f73d49400479d540e63e9", "patch": "@@ -4351,6 +4351,11 @@ do_include (buf, limit, op, keyword)\n \t}\n       }\n #endif /* VMS */\n+      /* ??? There are currently 3 separate mechanisms for avoiding processing\n+\t of redundant include files: #import, #pragma once, and\n+\t redundant_include_p.  It would be nice if they were unified.  */\n+      if (redundant_include_p (fname))\n+\treturn 0;\n       if (importing)\n \tf = lookup_import (fname, searchptr);\n       else\n@@ -4361,10 +4366,6 @@ do_include (buf, limit, op, keyword)\n       else if (f == -1 && errno == EACCES)\n \twarning (\"Header file %s exists, but is not readable\", fname);\n #endif\n-      if (redundant_include_p (fname)) {\n-\tclose (f);\n-\treturn 0;\n-      }\n       if (f >= 0)\n \tbreak;\n     }\n@@ -4424,8 +4425,6 @@ do_include (buf, limit, op, keyword)\n     else\n       error (\"No include path in which to find %s\", fname);\n   } else {\n-    struct stat stat_f;\n-\n     /* Check to see if this include file is a once-only include file.\n        If so, give up.  */\n \n@@ -4476,34 +4475,38 @@ do_include (buf, limit, op, keyword)\n     pcfbuf = 0;\n     pcfnum = 0;\n \n-    fstat (f, &stat_f);\n-\n     if (!no_precomp)\n-      do {\n-\tsprintf (pcftry, \"%s%d\", fname, pcfnum++);\n-\t\n-\tpcf = open (pcftry, O_RDONLY, 0666);\n-\tif (pcf != -1)\n-\t  {\n-\t    struct stat s;\n+      {\n+\tstruct stat stat_f;\n \n-\t    fstat (pcf, &s);\n-\t    if (bcmp ((char *) &stat_f.st_ino, (char *) &s.st_ino,\n-\t\t      sizeof (s.st_ino))\n-\t\t|| stat_f.st_dev != s.st_dev)\n-\t      {\n-\t\tpcfbuf = check_precompiled (pcf, fname, &pcfbuflimit);\n-\t\t/* Don't need it any more.  */\n-\t\tclose (pcf);\n-\t      }\n-\t    else\n-\t      {\n-\t\t/* Don't need it at all.  */\n-\t\tclose (pcf);\n-\t\tbreak;\n-\t      }\n-\t  }\n-      } while (pcf != -1 && !pcfbuf);\n+\tfstat (f, &stat_f);\n+\n+\tdo {\n+\t  sprintf (pcftry, \"%s%d\", fname, pcfnum++);\n+\n+\t  pcf = open (pcftry, O_RDONLY, 0666);\n+\t  if (pcf != -1)\n+\t    {\n+\t      struct stat s;\n+\n+\t      fstat (pcf, &s);\n+\t      if (bcmp ((char *) &stat_f.st_ino, (char *) &s.st_ino,\n+\t\t\tsizeof (s.st_ino))\n+\t\t  || stat_f.st_dev != s.st_dev)\n+\t\t{\n+\t\t  pcfbuf = check_precompiled (pcf, fname, &pcfbuflimit);\n+\t\t  /* Don't need it any more.  */\n+\t\t  close (pcf);\n+\t\t}\n+\t      else\n+\t\t{\n+\t\t  /* Don't need it at all.  */\n+\t\t  close (pcf);\n+\t\t  break;\n+\t\t}\n+\t    }\n+\t} while (pcf != -1 && !pcfbuf);\n+      }\n     \n     /* Actually process the file */\n     if (pcfbuf) {"}]}