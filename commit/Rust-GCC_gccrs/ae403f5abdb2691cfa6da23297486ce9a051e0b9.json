{"sha": "ae403f5abdb2691cfa6da23297486ce9a051e0b9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWU0MDNmNWFiZGIyNjkxY2ZhNmRhMjMyOTc0ODZjZTlhMDUxZTBiOQ==", "commit": {"author": {"name": "Riyadh Baghdadi", "email": "baghdadi.mr@gmail.com", "date": "2010-09-30T21:16:10Z"}, "committer": {"name": "Sebastian Pop", "email": "spop@gcc.gnu.org", "date": "2010-09-30T21:16:10Z"}, "message": "Write OpenScop format.\n\n2010-07-29  Riyadh Baghdadi <baghdadi.mr@gmail.com>\n\n\t* graphite-cloog-util.c (openscop_print_cloog_matrix): New.\n\t(openscop_print_polyhedron_matrix): New.\n\t* graphite-cloog-util.h (openscop_print_polyhedron_matrix): Declared.\n\t* graphite-poly.c (openscop_print_pdr_polyhedron): Same.\n\t(openscop_print_pdr_powerset): New.\n\t(openscop_print_powerset_matrix): New.\n\t(openscop_print_scattering_function_1): New.\n\t(print_scattering_function): Add support for scattering names and\n\tOpenScop format.\n\t(graphite_write_transforms): Remove.\n\t(apply_poly_transforms): Updated to call print_scop.\n\t(print_pdr_access_layout): Updated to support OpenScop format.\n\t(print_pdr): Same.\n\t(openscop_print_pbb_domain): New.\n\t(print_pbb_body): Added a parameter to allow indicating that pbb_body is\n\tnot provided.\n\t(print_pbb): Updated to call the new print_pbb_body.\n\t(openscop_print_scop_context): New.\n\t(print_scop_header): New.\n\t(print_scop): Updated to call print_scop_header.\n\t* graphite-poly.h: Document OpenScop format.\n\nFrom-SVN: r164770", "tree": {"sha": "6feb4aded8057ea7f65b1e0847fd6c2f973acaae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6feb4aded8057ea7f65b1e0847fd6c2f973acaae"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ae403f5abdb2691cfa6da23297486ce9a051e0b9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae403f5abdb2691cfa6da23297486ce9a051e0b9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae403f5abdb2691cfa6da23297486ce9a051e0b9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae403f5abdb2691cfa6da23297486ce9a051e0b9/comments", "author": {"login": "rbaghdadi", "id": 9944372, "node_id": "MDQ6VXNlcjk5NDQzNzI=", "avatar_url": "https://avatars.githubusercontent.com/u/9944372?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rbaghdadi", "html_url": "https://github.com/rbaghdadi", "followers_url": "https://api.github.com/users/rbaghdadi/followers", "following_url": "https://api.github.com/users/rbaghdadi/following{/other_user}", "gists_url": "https://api.github.com/users/rbaghdadi/gists{/gist_id}", "starred_url": "https://api.github.com/users/rbaghdadi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rbaghdadi/subscriptions", "organizations_url": "https://api.github.com/users/rbaghdadi/orgs", "repos_url": "https://api.github.com/users/rbaghdadi/repos", "events_url": "https://api.github.com/users/rbaghdadi/events{/privacy}", "received_events_url": "https://api.github.com/users/rbaghdadi/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sebpop", "id": 568397, "node_id": "MDQ6VXNlcjU2ODM5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/568397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebpop", "html_url": "https://github.com/sebpop", "followers_url": "https://api.github.com/users/sebpop/followers", "following_url": "https://api.github.com/users/sebpop/following{/other_user}", "gists_url": "https://api.github.com/users/sebpop/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebpop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebpop/subscriptions", "organizations_url": "https://api.github.com/users/sebpop/orgs", "repos_url": "https://api.github.com/users/sebpop/repos", "events_url": "https://api.github.com/users/sebpop/events{/privacy}", "received_events_url": "https://api.github.com/users/sebpop/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c8c2d4e7d78dbc07c893410325c1733e13afe446", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8c2d4e7d78dbc07c893410325c1733e13afe446", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c8c2d4e7d78dbc07c893410325c1733e13afe446"}], "stats": {"total": 440, "additions": 416, "deletions": 24}, "files": [{"sha": "b4a7367ae703a3b1d558db33ae5d6ea728a05f6e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae403f5abdb2691cfa6da23297486ce9a051e0b9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae403f5abdb2691cfa6da23297486ce9a051e0b9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ae403f5abdb2691cfa6da23297486ce9a051e0b9", "patch": "@@ -1,3 +1,26 @@\n+2010-09-30  Riyadh Baghdadi <baghdadi.mr@gmail.com>\n+\n+\t* graphite-cloog-util.c (openscop_print_cloog_matrix): New.\n+\t(openscop_print_polyhedron_matrix): New.\n+\t* graphite-cloog-util.h (openscop_print_polyhedron_matrix): Declared.\n+\t* graphite-poly.c (openscop_print_pdr_polyhedron): Same.\n+\t(openscop_print_pdr_powerset): New.\n+\t(openscop_print_powerset_matrix): New.\n+\t(openscop_print_scattering_function_1): New.\n+\t(print_scattering_function): Add support for scattering names and\n+\tOpenScop format.\n+\t(graphite_write_transforms): Remove.\n+\t(print_pdr_access_layout): Updated to support OpenScop format.\n+\t(print_pdr): Same.\n+\t(openscop_print_pbb_domain): New.\n+\t(print_pbb_body): Added a parameter to allow indicating that pbb_body is\n+\tnot provided.\n+\t(print_pbb): Updated to call the new print_pbb_body.\n+\t(openscop_print_scop_context): New.\n+\t(print_scop_header): New.\n+\t(print_scop): Updated to call print_scop_header.\n+\t* graphite-poly.h: Document OpenScop format.\n+\n 2010-09-30  Anatoly Sokolov  <aesok@post.ru>\n \n \t* config/cris/m32c.c (cris_memory_move_cost): New."}, {"sha": "50c1e130acc19df0d070bfc3d2ef0d53d6c5bd0f", "filename": "gcc/ChangeLog.graphite", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae403f5abdb2691cfa6da23297486ce9a051e0b9/gcc%2FChangeLog.graphite", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae403f5abdb2691cfa6da23297486ce9a051e0b9/gcc%2FChangeLog.graphite", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog.graphite?ref=ae403f5abdb2691cfa6da23297486ce9a051e0b9", "patch": "@@ -1,3 +1,27 @@\n+2010-07-29  Riyadh Baghdadi <baghdadi.mr@gmail.com>\n+\n+\t* graphite-cloog-util.c (openscop_print_cloog_matrix): New.\n+\t(openscop_print_polyhedron_matrix): New.\n+\t* graphite-cloog-util.h (openscop_print_polyhedron_matrix): Declared.\n+\t* graphite-poly.c (openscop_print_pdr_polyhedron): Same.\n+\t(openscop_print_pdr_powerset): New.\n+\t(openscop_print_powerset_matrix): New.\n+\t(openscop_print_scattering_function_1): New.\n+\t(print_scattering_function): Add support for scattering names and\n+\tOpenScop format.\n+\t(graphite_write_transforms): Remove.\n+\t(apply_poly_transforms): Updated to call print_scop.\n+\t(print_pdr_access_layout): Updated to support OpenScop format.\n+\t(print_pdr): Same.\n+\t(openscop_print_pbb_domain): New.\n+\t(print_pbb_body): Added a parameter to allow indicating that pbb_body is\n+\tnot provided.\n+\t(print_pbb): Updated to call the new print_pbb_body.\n+\t(openscop_print_scop_context): New.\n+\t(print_scop_header): New.\n+\t(print_scop): Updated to call print_scop_header.\n+\t* graphite-poly.h: Document OpenScop format.\n+\n 2010-07-29  Sebastian Pop  <sebastian.pop@amd.com>\n \n \t* graphite-sese-to-poly.c (rewrite_close_phi_out_of_ssa): Add back"}, {"sha": "0bb5d742586f9659ec29427990ddd26a4b3b4897", "filename": "gcc/graphite-cloog-util.c", "status": "modified", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae403f5abdb2691cfa6da23297486ce9a051e0b9/gcc%2Fgraphite-cloog-util.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae403f5abdb2691cfa6da23297486ce9a051e0b9/gcc%2Fgraphite-cloog-util.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-cloog-util.c?ref=ae403f5abdb2691cfa6da23297486ce9a051e0b9", "patch": "@@ -296,4 +296,43 @@ new_Cloog_Domain_from_ppl_Pointset_Powerset\n \n   return res;\n }\n+\n+/* Print to FILE the matrix MAT in OpenScop format.  OUTPUT is the number\n+   of output dimensions, INPUT is the number of input dimensions, LOCALS\n+   is the number of existentially quantified variables and PARAMS is the\n+   number of parameters.  */\n+\n+static void\n+openscop_print_cloog_matrix (FILE *file, CloogMatrix *mat,\n+\t\t\t     int output, int input, int locals,\n+\t\t\t     int params)\n+{\n+  int i, j;\n+\n+  fprintf (file, \"%d %d %d %d %d %d \\n\", cloog_matrix_nrows (mat),\n+\t   cloog_matrix_ncolumns (mat), output, input, locals, params);\n+\n+  for (i = 0; i < cloog_matrix_nrows (mat); i++)\n+    {\n+      for (j = 0; j < cloog_matrix_ncolumns (mat); j++)\n+\tfprintf (file, \"%6ld \", mpz_get_si (mat->p[i][j]));\n+      fprintf (file, \"\\n\");\n+    }\n+}\n+\n+/* Print to FILE the polyhedron PH in OpenScop format.  OUTPUT is the number\n+   of output dimensions, INPUT is the number of input dimensions, LOCALS is\n+   the number of existentially quantified variables and PARAMS is the number\n+   of parameters.  */\n+\n+void\n+openscop_print_polyhedron_matrix (FILE *file, ppl_const_Polyhedron_t ph,\n+\t\t\t\t  int output, int input, int locals,\n+\t\t\t\t  int params)\n+{\n+  CloogMatrix *mat = new_Cloog_Matrix_from_ppl_Polyhedron (ph);\n+  openscop_print_cloog_matrix (file, mat, output, input, locals, params);\n+  cloog_matrix_free (mat);\n+}\n+\n #endif"}, {"sha": "62e2f94dd8214a5df1ea502c606ecfc0aab7dc50", "filename": "gcc/graphite-cloog-util.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae403f5abdb2691cfa6da23297486ce9a051e0b9/gcc%2Fgraphite-cloog-util.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae403f5abdb2691cfa6da23297486ce9a051e0b9/gcc%2Fgraphite-cloog-util.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-cloog-util.h?ref=ae403f5abdb2691cfa6da23297486ce9a051e0b9", "patch": "@@ -32,5 +32,7 @@ CloogScattering *new_Cloog_Scattering_from_ppl_Polyhedron\n CloogDomain * new_Cloog_Domain_from_ppl_Pointset_Powerset\n   (ppl_Pointset_Powerset_C_Polyhedron_t, int, CloogState *);\n void new_C_Polyhedron_from_Cloog_Matrix (ppl_Polyhedron_t *, CloogMatrix *);\n+void openscop_print_polyhedron_matrix (FILE *, ppl_const_Polyhedron_t, int,\n+\t\t\t\t       int, int, int);\n \n #endif /* GRAPHITE_CLOOG_UTIL_H */"}, {"sha": "c886e1184bea8c289efdcbeabb19cdbda66d7cc7", "filename": "gcc/graphite-poly.c", "status": "modified", "additions": 280, "deletions": 23, "changes": 303, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae403f5abdb2691cfa6da23297486ce9a051e0b9/gcc%2Fgraphite-poly.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae403f5abdb2691cfa6da23297486ce9a051e0b9/gcc%2Fgraphite-poly.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-poly.c?ref=ae403f5abdb2691cfa6da23297486ce9a051e0b9", "patch": "@@ -44,6 +44,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"pointer-set.h\"\n #include \"gimple.h\"\n #include \"params.h\"\n+#include \"graphite-cloog-util.h\"\n \n #ifdef HAVE_cloog\n #include \"ppl_c.h\"\n@@ -136,6 +137,159 @@ unify_scattering_dimensions (scop_p scop)\n   return max_scattering;\n }\n \n+/* Print to FILE the pdr PH in OpenScop format.  NB_SUBSCRIPTS is the number\n+   of subscripts in PH, ALIAS_SET_DIM is the dimension of the alias set and\n+   NB_PARAMS is the number of parameters in PH.  */\n+\n+static void\n+openscop_print_pdr_polyhedron (FILE *file, ppl_const_Polyhedron_t ph,\n+\t\t\t       int nb_subscripts, int alias_set_dimension,\n+\t\t\t       int nb_params)\n+{\n+  int input, locals, output;\n+  ppl_dimension_type alias_set_dim = (ppl_dimension_type) alias_set_dimension;\n+  ppl_dimension_type sub_dim_last = alias_set_dim + nb_subscripts;\n+  ppl_dimension_type *map, i, ph_space_dim = sub_dim_last + 1;\n+  ppl_Polyhedron_t pph;\n+\n+  ppl_new_C_Polyhedron_from_C_Polyhedron (&pph,ph);\n+\n+  map = (ppl_dimension_type *) XNEWVEC (ppl_dimension_type, ph_space_dim);\n+\n+  for (i = 0; i < alias_set_dim - 1; i++)\n+    map[i] = nb_subscripts + 1 + i;\n+\n+  for (i = alias_set_dim - 1; i < sub_dim_last; i++)\n+    map[i] = i - alias_set_dim + 1;\n+\n+  ppl_Polyhedron_map_space_dimensions (pph, map, ph_space_dim - 1);\n+\n+  locals = 0;\n+  input = alias_set_dim - nb_params - 1;\n+\n+  /* According to OpenScop specification, the alias set column is a part of\n+     the output columns.  */\n+  output = nb_subscripts + 1;\n+\n+  openscop_print_polyhedron_matrix (file, ph, output, input, locals, nb_params);\n+}\n+\n+/* Print to FILE the powerset PDR.  NB_SUBSCRIPTS is the number of subscripts\n+   in PDR, ALIAS_SET_DIM is the dimension of the alias set in PDR and\n+   NB_PARAMS is the number of parameters in PDR.  */\n+\n+static void\n+openscop_print_pdr_powerset (FILE *file,\n+\t\t\t     ppl_Pointset_Powerset_C_Polyhedron_t ps,\n+\t\t\t     int nb_subscripts,\n+\t\t\t     int alias_set_dim,\n+\t\t\t     int nb_params)\n+{\n+  size_t nb_disjuncts;\n+  ppl_Pointset_Powerset_C_Polyhedron_iterator_t it, end;\n+\n+  ppl_new_Pointset_Powerset_C_Polyhedron_iterator (&it);\n+  ppl_new_Pointset_Powerset_C_Polyhedron_iterator (&end);\n+\n+  ppl_Pointset_Powerset_C_Polyhedron_size (ps, &nb_disjuncts);\n+  fprintf (file, \"%d\\n\", (int) nb_disjuncts);\n+\n+  for (ppl_Pointset_Powerset_C_Polyhedron_iterator_begin (ps, it),\n+       ppl_Pointset_Powerset_C_Polyhedron_iterator_end (ps, end);\n+       !ppl_Pointset_Powerset_C_Polyhedron_iterator_equal_test (it, end);\n+       ppl_Pointset_Powerset_C_Polyhedron_iterator_increment (it))\n+    {\n+      ppl_const_Polyhedron_t ph;\n+\n+      ppl_Pointset_Powerset_C_Polyhedron_iterator_dereference (it, &ph);\n+      openscop_print_pdr_polyhedron (file, ph, nb_subscripts, alias_set_dim,\n+\t\t\t\t     nb_params);\n+    }\n+\n+  ppl_delete_Pointset_Powerset_C_Polyhedron_iterator (it);\n+  ppl_delete_Pointset_Powerset_C_Polyhedron_iterator (end);\n+}\n+\n+/* Print to FILE the powerset PS in its OpenScop matrix form.  */\n+\n+static void\n+openscop_print_powerset_matrix (FILE *file,\n+\t\t\t\tppl_Pointset_Powerset_C_Polyhedron_t ps,\n+\t\t\t\tint output, int input, int locals,\n+\t\t\t\tint params)\n+{\n+  size_t nb_disjuncts;\n+  ppl_Pointset_Powerset_C_Polyhedron_iterator_t it, end;\n+\n+  ppl_new_Pointset_Powerset_C_Polyhedron_iterator (&it);\n+  ppl_new_Pointset_Powerset_C_Polyhedron_iterator (&end);\n+\n+  ppl_Pointset_Powerset_C_Polyhedron_size (ps, &nb_disjuncts);\n+  fprintf (file, \"%d\\n\", (int) nb_disjuncts);\n+\n+  for (ppl_Pointset_Powerset_C_Polyhedron_iterator_begin (ps, it),\n+       ppl_Pointset_Powerset_C_Polyhedron_iterator_end (ps, end);\n+       !ppl_Pointset_Powerset_C_Polyhedron_iterator_equal_test (it, end);\n+       ppl_Pointset_Powerset_C_Polyhedron_iterator_increment (it))\n+    {\n+      ppl_const_Polyhedron_t ph;\n+\n+      ppl_Pointset_Powerset_C_Polyhedron_iterator_dereference (it, &ph);\n+      openscop_print_polyhedron_matrix (file, ph, output, input, locals,\n+\t\t\t\t        params);\n+    }\n+\n+  ppl_delete_Pointset_Powerset_C_Polyhedron_iterator (it);\n+  ppl_delete_Pointset_Powerset_C_Polyhedron_iterator (end);\n+}\n+\n+/* Prints to FILE the scattering function of PBB in OpenScop format, at some\n+   VERBOSITY level.  */\n+\n+static void\n+openscop_print_scattering_function_1 (FILE *file, poly_bb_p pbb, int verbosity)\n+{\n+  graphite_dim_t i;\n+  ppl_const_Polyhedron_t ph;\n+\n+  if (verbosity > 0)\n+    {\n+      fprintf (file, \"# scattering bb_%d (\\n\", pbb_index (pbb));\n+      fprintf (file, \"#  eq\");\n+\n+      for (i = 0; i < pbb_nb_scattering_transform (pbb); i++)\n+\tfprintf (file, \"     s%d\", (int) i);\n+\n+      for (i = 0; i < pbb_nb_local_vars (pbb); i++)\n+\tfprintf (file, \"    lv%d\", (int) i);\n+\n+      for (i = 0; i < pbb_dim_iter_domain (pbb); i++)\n+\tfprintf (file, \"     i%d\", (int) i);\n+\n+      for (i = 0; i < pbb_nb_params (pbb); i++)\n+\tfprintf (file, \"     p%d\", (int) i);\n+\n+      fprintf (file, \"    cst\\n\");\n+    }\n+\n+  /* Number of disjunct components.  Remove this when\n+     PBB_TRANSFORMED_SCATTERING will be a pointset_powerset.  */\n+  fprintf (file, \"1\\n\");\n+\n+  ph = PBB_TRANSFORMED_SCATTERING (pbb)\n+    ? PBB_TRANSFORMED_SCATTERING (pbb)\n+    : PBB_ORIGINAL_SCATTERING (pbb);\n+\n+  openscop_print_polyhedron_matrix (file, ph,\n+\t\t\t\t    pbb_nb_scattering_transform (pbb),\n+\t\t\t\t    pbb_dim_iter_domain (pbb),\n+\t\t\t\t    pbb_nb_local_vars (pbb),\n+\t\t\t\t    pbb_nb_params (pbb));\n+\n+  if (verbosity > 0)\n+    fprintf (file, \"#)\\n\");\n+}\n+\n /* Prints to FILE the scattering function of PBB, at some VERBOSITY\n    level.  */\n \n@@ -201,7 +355,13 @@ print_scattering_function (FILE *file, poly_bb_p pbb, int verbosity)\n       return;\n     }\n \n-  print_scattering_function_1 (file, pbb, verbosity);\n+  openscop_print_scattering_function_1 (file, pbb, verbosity);\n+\n+  if (verbosity > 0)\n+    fprintf (file, \"# Scattering names are not provided\\n\");\n+\n+  fprintf (file, \"0\\n\");\n+\n }\n \n /* Prints to FILE the iteration domain of PBB, at some VERBOSITY\n@@ -430,23 +590,23 @@ free_poly_bb (poly_bb_p pbb)\n }\n \n static void\n-print_pdr_access_layout (FILE *file, poly_dr_p pdr)\n+print_pdr_access_layout (FILE *file, poly_bb_p pbb, poly_dr_p pdr)\n {\n   graphite_dim_t i;\n \n   fprintf (file, \"#  eq\");\n \n-  for (i = 0; i < pdr_dim_iter_domain (pdr); i++)\n-    fprintf (file, \"     i%d\", (int) i);\n-\n-  for (i = 0; i < pdr_nb_params (pdr); i++)\n-    fprintf (file, \"     p%d\", (int) i);\n-\n-  fprintf (file, \"  alias\");\n+  fprintf (file, \"   alias\");\n \n   for (i = 0; i < PDR_NB_SUBSCRIPTS (pdr); i++)\n     fprintf (file, \"   sub%d\", (int) i);\n \n+  for (i = 0; i < pbb_dim_iter_domain (pbb); i++)\n+    fprintf (file, \"     i%d\", (int) i);\n+\n+  for (i = 0; i < pbb_nb_params (pbb); i++)\n+    fprintf (file, \"     p%d\", (int) i);\n+\n   fprintf (file, \"    cst\\n\");\n }\n \n@@ -456,6 +616,8 @@ print_pdr_access_layout (FILE *file, poly_dr_p pdr)\n void\n print_pdr (FILE *file, poly_dr_p pdr, int verbosity)\n {\n+  int alias_set_dim;\n+\n   if (verbosity > 1)\n     {\n       fprintf (file, \"# pdr_%d (\", PDR_ID (pdr));\n@@ -484,10 +646,16 @@ print_pdr (FILE *file, poly_dr_p pdr, int verbosity)\n   if (verbosity > 0)\n     {\n       fprintf (file, \"# data accesses (\\n\");\n-      print_pdr_access_layout (file, pdr);\n+      print_pdr_access_layout (file, PDR_PBB (pdr), pdr);\n     }\n \n-  ppl_print_powerset_matrix (file, PDR_ACCESSES (pdr));\n+  alias_set_dim = pdr_alias_set_dim (pdr) + 1;\n+\n+  openscop_print_pdr_powerset (file,\n+\t\t\t       PDR_ACCESSES (pdr),\n+\t\t\t       PDR_NB_SUBSCRIPTS (pdr),\n+\t\t\t       alias_set_dim,\n+\t\t\t       pbb_nb_params (PDR_PBB (pdr)));\n \n   if (verbosity > 0)\n     fprintf (file, \"#)\\n\");\n@@ -548,6 +716,45 @@ free_scop (scop_p scop)\n   XDELETE (scop);\n }\n \n+/* Print to FILE the domain of PBB in OpenScop format, at some VERBOSITY\n+   level.  */\n+\n+static void\n+openscop_print_pbb_domain (FILE *file, poly_bb_p pbb, int verbosity)\n+{\n+  graphite_dim_t i;\n+  gimple_bb_p gbb = PBB_BLACK_BOX (pbb);\n+\n+  if (!PBB_DOMAIN (pbb))\n+    return;\n+\n+  if (verbosity > 0)\n+    {\n+      fprintf (file, \"\\n# Iteration domain of bb_%d (\\n\", GBB_BB (gbb)->index);\n+      fprintf (file, \"#  eq\");\n+\n+      for (i = 0; i < pbb_dim_iter_domain (pbb); i++)\n+\tfprintf (file, \"     i%d\", (int) i);\n+\n+      for (i = 0; i < pbb_nb_params (pbb); i++)\n+\tfprintf (file, \"     p%d\", (int) i);\n+\n+      fprintf (file, \"    cst\\n\");\n+    }\n+\n+  if (PBB_DOMAIN (pbb))\n+    openscop_print_powerset_matrix (file, PBB_DOMAIN (pbb),\n+\t\t\t\t    pbb_dim_iter_domain (pbb),\n+\t\t\t\t    0,\n+\t\t\t\t    0,\n+\t\t\t\t    pbb_nb_params (pbb));\n+  else\n+    fprintf (file, \"0\\n\");\n+\n+  if (verbosity > 0)\n+    fprintf (file, \"#)\\n\");\n+}\n+\n /* Print to FILE the domain of PBB, at some VERBOSITY level.  */\n \n void\n@@ -708,14 +915,25 @@ debug_pdrs (poly_bb_p pbb, int verbosity)\n   print_pdrs (stderr, pbb, verbosity);\n }\n \n-/* Print to FILE the body of PBB, at some VERBOSITY level.  */\n+/* Print to FILE the body of PBB, at some VERBOSITY level.\n+   If statement_body_provided is false statement body is not printed.  */\n \n static void\n-print_pbb_body (FILE *file, poly_bb_p pbb, int verbosity)\n+print_pbb_body (FILE *file, poly_bb_p pbb, int verbosity,\n+\t\tbool statement_body_provided)\n {\n   if (verbosity > 1)\n     fprintf (file, \"# Body (\\n\");\n \n+  if (!statement_body_provided)\n+  {\n+    if (verbosity > 0)\n+      fprintf (file, \"# Statement body is not provided\\n\");\n+\n+   fprintf (file, \"0\\n\");\n+   return;\n+  }\n+\n   if (verbosity > 0)\n     fprintf (file, \"# Statement body is provided\\n\");\n   fprintf (file, \"1\\n\");\n@@ -747,10 +965,10 @@ print_pbb (FILE *file, poly_bb_p pbb, int verbosity)\n       dump_gbb_cases (file, PBB_BLACK_BOX (pbb));\n     }\n \n-  print_pbb_domain (file, pbb, verbosity);\n+  openscop_print_pbb_domain (file, pbb, verbosity);\n   print_scattering_function (file, pbb, verbosity);\n   print_pdrs (file, pbb, verbosity);\n-  print_pbb_body (file, pbb, verbosity);\n+  print_pbb_body (file, pbb, verbosity, false);\n \n   if (verbosity > 1)\n     fprintf (file, \"#)\\n\");\n@@ -796,6 +1014,36 @@ print_scop_params (FILE *file, scop_p scop, int verbosity)\n     fprintf (file, \"#)\\n\");\n }\n \n+/* Print to FILE the context of SCoP in OpenScop format, at some VERBOSITY\n+   level.  */\n+\n+static void\n+openscop_print_scop_context (FILE *file, scop_p scop, int verbosity)\n+{\n+  graphite_dim_t i;\n+\n+  if (verbosity > 0)\n+    {\n+      fprintf (file, \"# Context (\\n\");\n+      fprintf (file, \"#  eq\");\n+\n+      for (i = 0; i < scop_nb_params (scop); i++)\n+\tfprintf (file, \"     p%d\", (int) i);\n+\n+      fprintf (file, \"    cst\\n\");\n+    }\n+\n+  if (SCOP_CONTEXT (scop))\n+    openscop_print_powerset_matrix (file, SCOP_CONTEXT (scop), 0, 0, 0,\n+\t\t\t\t    scop_nb_params (scop));\n+  else\n+    fprintf (file, \"0 %d 0 0 0 %d\\n\", (int) scop_nb_params (scop) + 2,\n+\t     (int) scop_nb_params (scop));\n+\n+  if (verbosity > 0)\n+    fprintf (file, \"# )\\n\");\n+}\n+\n /* Print to FILE the context of SCoP, at some VERBOSITY level.  */\n \n void\n@@ -823,23 +1071,32 @@ print_scop_context (FILE *file, scop_p scop, int verbosity)\n     fprintf (file, \"# )\\n\");\n }\n \n-/* Print to FILE the SCOP, at some VERBOSITY level.  */\n+/* Print to FILE the SCOP header: context, parameters, and statements\n+   number.  */\n \n-void\n-print_scop (FILE *file, scop_p scop, int verbosity)\n+static void\n+print_scop_header (FILE *file, scop_p scop, int verbosity)\n {\n-  int i;\n-  poly_bb_p pbb;\n-\n-  fprintf (file, \"SCoP #(\\n\");\n+  fprintf (file, \"SCoP 1\\n#(\\n\");\n   fprintf (file, \"# Language\\nGimple\\n\");\n-  print_scop_context (file, scop, verbosity);\n+  openscop_print_scop_context (file, scop, verbosity);\n   print_scop_params (file, scop, verbosity);\n \n   if (verbosity > 0)\n     fprintf (file, \"# Number of statements\\n\");\n \n   fprintf (file, \"%d\\n\",VEC_length (poly_bb_p, SCOP_BBS (scop)));\n+}\n+\n+/* Print to FILE the SCOP, at some VERBOSITY level.  */\n+\n+void\n+print_scop (FILE *file, scop_p scop, int verbosity)\n+{\n+  int i;\n+  poly_bb_p pbb;\n+\n+  print_scop_header (file, scop, verbosity);\n \n   FOR_EACH_VEC_ELT (poly_bb_p, SCOP_BBS (scop), i, pbb)\n     print_pbb (file, pbb, verbosity);"}, {"sha": "0e1aa1f0d34277faf61e999be001b51fe81b7ee8", "filename": "gcc/graphite-poly.h", "status": "modified", "additions": 48, "deletions": 1, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae403f5abdb2691cfa6da23297486ce9a051e0b9/gcc%2Fgraphite-poly.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae403f5abdb2691cfa6da23297486ce9a051e0b9/gcc%2Fgraphite-poly.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-poly.h?ref=ae403f5abdb2691cfa6da23297486ce9a051e0b9", "patch": "@@ -132,7 +132,54 @@ struct poly_dr\n      dimensions.\n \n      | i   j   k   a   1\n-     | 0   0   0  -1   15  = 0 */\n+     | 0   0   0  -1   15  = 0\n+\n+     The difference between the graphite internal format for access data and\n+     the OpenSop format is in the order of columns.\n+     Instead of having:\n+\n+     | i   j   k   a  s0  s1   1\n+     | 0   0   0   1   0   0  -5     =  0\n+     |-1   0   0   0   1   0   0     =  0\n+     | 0  -1  -1   0   0   1   0     =  0\n+     | 0   0   0   0   1   0   0     >= 0  # The last four lines describe the\n+     | 0   0   0   0   0   1   0     >= 0  # array size.\n+     | 0   0   0   0  -1   0 1335    >= 0\n+     | 0   0   0   0   0  -1 123     >= 0\n+\n+     In OpenScop we have:\n+\n+     | a  s0  s1   i   j   k   1\n+     | 1   0   0   0   0   0  -5     =  0\n+     | 0   1   0  -1   0   0   0     =  0\n+     | 0   0   1   0  -1  -1   0     =  0\n+     | 0   1   0   0   0   0   0     >= 0  # The last four lines describe the\n+     | 0   0   1   0   0   0   0     >= 0  # array size.\n+     | 0  -1   0   0   0   0 1335    >= 0\n+     | 0   0  -1   0   0   0 123     >= 0\n+\n+     The OpenScop access function is printed as follows:\n+\n+     | 1  # The number of disjunct components in a union of access functions.\n+     | R C O I L P  # Described bellow.\n+     | a  s0  s1   i   j   k   1\n+     | 1   0   0   0   0   0  -5     =  0\n+     | 0   1   0  -1   0   0   0     =  0\n+     | 0   0   1   0  -1  -1   0     =  0\n+     | 0   1   0   0   0   0   0     >= 0  # The last four lines describe the\n+     | 0   0   1   0   0   0   0     >= 0  # array size.\n+     | 0  -1   0   0   0   0 1335    >= 0\n+     | 0   0  -1   0   0   0 123     >= 0\n+\n+     Where:\n+     - R: Number of rows.\n+     - C: Number of columns.\n+     - O: Number of output dimensions = alias set + number of subscripts.\n+     - I: Number of input dimensions (iterators).\n+     - L: Number of local (existentially quantified) dimensions.\n+     - P: Number of parameters.\n+\n+     In the example, the vector \"R C O I L P\" is \"7 7 3 2 0 1\".  */\n   ppl_Pointset_Powerset_C_Polyhedron_t accesses;\n \n   /* Data reference's base object set number, we must assure 2 pdrs are in the"}]}