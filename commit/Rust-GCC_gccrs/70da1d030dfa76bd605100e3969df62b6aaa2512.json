{"sha": "70da1d030dfa76bd605100e3969df62b6aaa2512", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzBkYTFkMDMwZGZhNzZiZDYwNTEwMGUzOTY5ZGY2MmI2YWFhMjUxMg==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2002-02-28T11:03:16Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2002-02-28T11:03:16Z"}, "message": "cfgrtl.c (purge_dead_edges): Fix handling of EH edges.\n\n\n\t* cfgrtl.c (purge_dead_edges): Fix handling of EH edges.\n\n\t* i386.h (CONDITIONAL_REGISTER_USAGE): Do not write to\n\tPIC_OFFSET_TABLE_REGNUM when it is INVALID_REGNUM\n\nFrom-SVN: r50128", "tree": {"sha": "fb25d9f24c8c90f7ba4b342c30d5c155f0d7b4c5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fb25d9f24c8c90f7ba4b342c30d5c155f0d7b4c5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/70da1d030dfa76bd605100e3969df62b6aaa2512", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70da1d030dfa76bd605100e3969df62b6aaa2512", "html_url": "https://github.com/Rust-GCC/gccrs/commit/70da1d030dfa76bd605100e3969df62b6aaa2512", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70da1d030dfa76bd605100e3969df62b6aaa2512/comments", "author": null, "committer": null, "parents": [{"sha": "38c1593d577d667bd1bcb486c0a6b34c218ebb46", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/38c1593d577d667bd1bcb486c0a6b34c218ebb46", "html_url": "https://github.com/Rust-GCC/gccrs/commit/38c1593d577d667bd1bcb486c0a6b34c218ebb46"}], "stats": {"total": 61, "additions": 32, "deletions": 29}, "files": [{"sha": "165147b84af715fbe08c086492d0dc0dd9900d7c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70da1d030dfa76bd605100e3969df62b6aaa2512/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70da1d030dfa76bd605100e3969df62b6aaa2512/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=70da1d030dfa76bd605100e3969df62b6aaa2512", "patch": "@@ -1,3 +1,10 @@\n+Don Feb 28 11:24:30 CET 2002  Jan Hubicka  <jh@suse.cz>\n+\n+\t* cfgrtl.c (purge_dead_edges): Fix handling of EH edges.\n+\n+\t* i386.h (CONDITIONAL_REGISTER_USAGE): Do not write to\n+\tPIC_OFFSET_TABLE_REGNUM when it is INVALID_REGNUM\n+\n Don Feb 28 11:07:36 CET 2002  Jan Hubicka  <jh@suse.cz>\n \n \t* basic-block.h (BB_REACHABLE): Renumber."}, {"sha": "a45d4a37f7e5d0d2d7d1cc3ecc4de8cfab4cfebb", "filename": "gcc/cfgrtl.c", "status": "modified", "additions": 24, "deletions": 28, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70da1d030dfa76bd605100e3969df62b6aaa2512/gcc%2Fcfgrtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70da1d030dfa76bd605100e3969df62b6aaa2512/gcc%2Fcfgrtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgrtl.c?ref=70da1d030dfa76bd605100e3969df62b6aaa2512", "patch": "@@ -1899,9 +1899,30 @@ purge_dead_edges (bb)\n   rtx insn = bb->end, note;\n   bool purged = false;\n \n-  /* ??? This makes no sense since the later test includes more cases.  */\n-  if (GET_CODE (insn) == JUMP_INSN && !simplejump_p (insn))\n-    return false;\n+  /* If this instruction cannot trap, remove REG_EH_REGION notes.  */\n+  if (GET_CODE (insn) == INSN\n+      && (note = find_reg_note (insn, REG_EH_REGION, NULL)))\n+    {\n+      rtx eqnote;\n+\n+      if (! may_trap_p (PATTERN (insn))\n+\t  || ((eqnote = find_reg_equal_equiv_note (insn))\n+\t      && ! may_trap_p (XEXP (eqnote, 0))))\n+\tremove_note (insn, note);\n+    }\n+\n+  /* Cleanup abnormal edges caused by throwing insns that have been\n+     eliminated.  */\n+  if (! can_throw_internal (bb->end))\n+    for (e = bb->succ; e; e = next)\n+      {\n+\tnext = e->succ_next;\n+\tif (e->flags & EDGE_EH)\n+\t  {\n+\t    remove_edge (e);\n+\t    purged = true;\n+\t  }\n+      }\n \n   if (GET_CODE (insn) == JUMP_INSN)\n     {\n@@ -1970,31 +1991,6 @@ purge_dead_edges (bb)\n       return purged;\n     }\n \n-  /* If this instruction cannot trap, remove REG_EH_REGION notes.  */\n-  if (GET_CODE (insn) == INSN\n-      && (note = find_reg_note (insn, REG_EH_REGION, NULL)))\n-    {\n-      rtx eqnote;\n-\n-      if (! may_trap_p (PATTERN (insn))\n-\t  || ((eqnote = find_reg_equal_equiv_note (insn))\n-\t      && ! may_trap_p (XEXP (eqnote, 0))))\n-\tremove_note (insn, note);\n-    }\n-\n-  /* Cleanup abnormal edges caused by throwing insns that have been\n-     eliminated.  */\n-  if (! can_throw_internal (bb->end))\n-    for (e = bb->succ; e; e = next)\n-      {\n-\tnext = e->succ_next;\n-\tif (e->flags & EDGE_EH)\n-\t  {\n-\t    remove_edge (e);\n-\t    purged = true;\n-\t  }\n-      }\n-\n   /* If we don't see a jump insn, we don't know exactly why the block would\n      have been broken at this point.  Look for a simple, non-fallthru edge,\n      as these are only created by conditional branches.  If we find such an"}, {"sha": "63dae0122ef52dc5f2db5e9f4cc81e92e3530e9d", "filename": "gcc/config/i386/i386.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70da1d030dfa76bd605100e3969df62b6aaa2512/gcc%2Fconfig%2Fi386%2Fi386.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70da1d030dfa76bd605100e3969df62b6aaa2512/gcc%2Fconfig%2Fi386%2Fi386.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.h?ref=70da1d030dfa76bd605100e3969df62b6aaa2512", "patch": "@@ -957,7 +957,7 @@ do {\t\t\t\t\t\t\t\t\t\\\n         call_used_regs[i] = (call_used_regs[i]\t\t\t\t\\\n \t\t\t     & (TARGET_64BIT ? 2 : 1)) != 0;\t\t\\\n       }\t\t\t\t\t\t\t\t\t\\\n-    if (flag_pic)\t\t\t\t\t\t\t\\\n+    if (flag_pic && PIC_OFFSET_TABLE_REGNUM != INVALID_REGNUM)\t\t\\\n       {\t\t\t\t\t\t\t\t\t\\\n \tfixed_regs[PIC_OFFSET_TABLE_REGNUM] = 1;\t\t\t\\\n \tcall_used_regs[PIC_OFFSET_TABLE_REGNUM] = 1;\t\t\t\\"}]}