{"sha": "867bf6f087e9566339cecce358319603ecd08248", "node_id": "C_kwDOANBUbNoAKDg2N2JmNmYwODdlOTU2NjMzOWNlY2NlMzU4MzE5NjAzZWNkMDgyNDg", "commit": {"author": {"name": "Gary Dismukes", "email": "dismukes@adacore.com", "date": "2022-03-25T16:56:24Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2022-05-17T08:25:48Z"}, "message": "[Ada] Provide allocation subtype for allocators of a Designated_Storage_Model type\n\nWhen an allocator is for an access type that has a\nDesignated_Storage_Model aspect, and the designated type is an\nunconstrained record type with discriminants, and the subtype associated\nwith the allocator is constrained, a dereference of the new access value\ncan be passed to the designated type's initialization procedure. The\npost-front-end phase of the compiler needs to be able to create a\ntemporary object in the host memory space to pass to the init proc,\nwhich requires creating such an object, but the subtype needed for the\nallocation isn't readily available at the point of the dereference.  To\nmake the subtype easily accessible, we set the Actual_Designated_Subtype\nof such a dereference to the subtype of the allocated object.\n\ngcc/ada/\n\n\t* exp_ch4.adb (Expand_N_Allocator): For an allocator with an\n\tunconstrained discriminated designated type, and whose\n\tallocation subtype is constrained, set the\n\tActual_Designated_Subtype of the dereference passed to the init\n\tproc of the designated type to be the allocation subtype.\n\t* sinfo.ads: Add documentation of new setting of\n\tActual_Designated_Subtype on a dereference used as an actual\n\tparameter of call to an init proc associated with an allocator.\n\tAlso add missing syntax and documentation for the GNAT language\n\textension that allows an expression as a default for a concrete\n\tgeneric formal function.", "tree": {"sha": "44272b8f08aca7e50f3b3506c501c60a571d9fa3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/44272b8f08aca7e50f3b3506c501c60a571d9fa3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/867bf6f087e9566339cecce358319603ecd08248", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/867bf6f087e9566339cecce358319603ecd08248", "html_url": "https://github.com/Rust-GCC/gccrs/commit/867bf6f087e9566339cecce358319603ecd08248", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/867bf6f087e9566339cecce358319603ecd08248/comments", "author": {"login": "dismukes", "id": 50880541, "node_id": "MDQ6VXNlcjUwODgwNTQx", "avatar_url": "https://avatars.githubusercontent.com/u/50880541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dismukes", "html_url": "https://github.com/dismukes", "followers_url": "https://api.github.com/users/dismukes/followers", "following_url": "https://api.github.com/users/dismukes/following{/other_user}", "gists_url": "https://api.github.com/users/dismukes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dismukes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dismukes/subscriptions", "organizations_url": "https://api.github.com/users/dismukes/orgs", "repos_url": "https://api.github.com/users/dismukes/repos", "events_url": "https://api.github.com/users/dismukes/events{/privacy}", "received_events_url": "https://api.github.com/users/dismukes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f2ef7a0545d1c17dd7e0ec8eb85b286d445dcc3f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2ef7a0545d1c17dd7e0ec8eb85b286d445dcc3f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f2ef7a0545d1c17dd7e0ec8eb85b286d445dcc3f"}], "stats": {"total": 52, "additions": 44, "deletions": 8}, "files": [{"sha": "aa291569f3bd16adff09ef3492ae1e653cf6d0e8", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/867bf6f087e9566339cecce358319603ecd08248/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/867bf6f087e9566339cecce358319603ecd08248/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=867bf6f087e9566339cecce358319603ecd08248", "patch": "@@ -5135,6 +5135,30 @@ package body Exp_Ch4 is\n                         Set_Expression (N, New_Occurrence_Of (Typ, Loc));\n                      end if;\n \n+                     --  When the designated subtype is unconstrained and\n+                     --  the allocator specifies a constrained subtype (or\n+                     --  such a subtype has been created, such as above by\n+                     --  Build_Default_Subtype), associate that subtype with\n+                     --  the dereference of the allocator's access value.\n+                     --  This is needed by the back end for cases where\n+                     --  the access type has a Designated_Storage_Model,\n+                     --  to support allocation of a host object of the right\n+                     --  size for passing to the initialization procedure.\n+\n+                     if not Is_Constrained (Dtyp)\n+                       and then Is_Constrained (Typ)\n+                     then\n+                        declare\n+                           Init_Deref : constant Node_Id :=\n+                             Unqual_Conv (Init_Arg1);\n+                        begin\n+                           pragma Assert\n+                             (Nkind (Init_Deref) = N_Explicit_Dereference);\n+\n+                           Set_Actual_Designated_Subtype (Init_Deref, Typ);\n+                        end;\n+                     end if;\n+\n                      Discr := First_Elmt (Discriminant_Constraint (Typ));\n                      while Present (Discr) loop\n                         Nod := Node (Discr);"}, {"sha": "e3e06ee5f93bf389e5059a2659eb20b5d9a99f27", "filename": "gcc/ada/sinfo.ads", "status": "modified", "additions": 20, "deletions": 8, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/867bf6f087e9566339cecce358319603ecd08248/gcc%2Fada%2Fsinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/867bf6f087e9566339cecce358319603ecd08248/gcc%2Fada%2Fsinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.ads?ref=867bf6f087e9566339cecce358319603ecd08248", "patch": "@@ -816,12 +816,15 @@ package Sinfo is\n \n    --  Actual_Designated_Subtype\n    --    Present in N_Free_Statement and N_Explicit_Dereference nodes. If gigi\n-   --    needs to known the dynamic constrained subtype of the designated\n-   --    object, this attribute is set to that type. This is done for\n-   --    N_Free_Statements for access-to-classwide types and access to\n-   --    unconstrained packed array types, and for N_Explicit_Dereference when\n-   --    the designated type is an unconstrained packed array and the\n-   --    dereference is the prefix of a 'Size attribute reference.\n+   --    needs to know the dynamic constrained subtype of the designated\n+   --    object, this attribute is set to that subtype. This is done for\n+   --    N_Free_Statements for access-to-classwide types and access-to-\n+   --    unconstrained packed array types. For N_Explicit_Dereference,\n+   --    this is done in two circumstances: 1) when the designated type is\n+   --    an unconstrained packed array and the dereference is the prefix of\n+   --    a 'Size attribute reference, or 2) when the dereference node is\n+   --    created for the expansion of an allocator with a subtype_indication\n+   --    and the designated subtype is an unconstrained discriminated type.\n \n    --  Address_Warning_Posted\n    --    Present in N_Attribute_Definition nodes. Set to indicate that we have\n@@ -7313,10 +7316,15 @@ package Sinfo is\n       --  Specification\n       --  Default_Name (set to Empty if no subprogram default)\n       --  Box_Present\n+      --  Expression (set to Empty if no expression present)\n \n-      --  Note: if no subprogram default is present, then Name is set\n+      --  Note: If no subprogram default is present, then Name is set\n       --  to Empty, and Box_Present is False.\n \n+      --  Note: The Expression field is only used for the GNAT extension\n+      --  that allows a FORMAL_CONCRETE_SUBPROGRAM_DECLARATION to specify\n+      --  an expression default for generic formal functions.\n+\n       --------------------------------------------------\n       -- 12.6  Formal Abstract Subprogram Declaration --\n       --------------------------------------------------\n@@ -7338,13 +7346,17 @@ package Sinfo is\n       -- 12.6  Subprogram Default --\n       ------------------------------\n \n-      --  SUBPROGRAM_DEFAULT ::= DEFAULT_NAME | <>\n+      --  SUBPROGRAM_DEFAULT ::= DEFAULT_NAME | <> | (EXPRESSION)\n \n       --  There is no separate node in the tree for a subprogram default.\n       --  Instead the parent (N_Formal_Concrete_Subprogram_Declaration\n       --  or N_Formal_Abstract_Subprogram_Declaration) node contains the\n       --  default name or box indication, as needed.\n \n+      --  Note: The syntax \"(EXPRESSION)\" is a GNAT extension, and allows\n+      --  a FORMAL_CONCRETE_SUBPROGRAM_DECLARATION to specify an expression\n+      --  default for formal functions, in analogy with expression_functions.\n+\n       ------------------------\n       -- 12.6  Default Name --\n       ------------------------"}]}