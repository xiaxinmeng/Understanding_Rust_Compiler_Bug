{"sha": "83d52e6de23f65cefde615183cdef1eb94d18b1f", "node_id": "C_kwDOANBUbNoAKDgzZDUyZTZkZTIzZjY1Y2VmZGU2MTUxODNjZGVmMWViOTRkMThiMWY", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2022-12-07T16:26:27Z"}, "committer": {"name": "Marc Poulhi\u00e8s", "email": "poulhies@adacore.com", "date": "2023-01-03T09:29:53Z"}, "message": "ada: Make Sem_Util.Is_Aliased_View predicate more robust\n\nThe predicate implements the rules of the language so it needs to cope with\nconstructs rewritten by the expander, in particular explicit dereferences\nthat the expander uses liberally for various purposes.\n\nThis change makes the detection of rewritten calls more robust, plugging an\nexisting loophole for specific objects and exposing a missing propagation of\nthe Is_Aliased flag for certain build-in-place objects, as well as adds the\ndetection of rewritten return objects.\n\nIt also contains a small enhancement to Set_Debug_Info_Defining_Id aimed at\nmaking it easier to debug the generated code by means of -gnatD.\n\ngcc/ada/\n\n\t* sem_util.ads (Set_Debug_Info_Defining_Id): Adjust comment.\n\t* sem_util.adb (Is_Aliased_View) <N_Explicit_Dereference>: Return\n\tfalse for more artificial dereferences generated by the expander.\n\t(Set_Debug_Info_Defining_Id): Set Debug_Info_Needed unconditionally\n\tin -gnatD mode.\n\t* exp_ch6.adb (Replace_Renaming_Declaration_Id): Also preserve the\n\tIs_Aliased flag.", "tree": {"sha": "1ced4614e9f0c0565dc6708b7c356e73096d7cbd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1ced4614e9f0c0565dc6708b7c356e73096d7cbd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/83d52e6de23f65cefde615183cdef1eb94d18b1f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/83d52e6de23f65cefde615183cdef1eb94d18b1f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/83d52e6de23f65cefde615183cdef1eb94d18b1f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/83d52e6de23f65cefde615183cdef1eb94d18b1f/comments", "author": null, "committer": {"login": "dkm", "id": 87603, "node_id": "MDQ6VXNlcjg3NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/87603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dkm", "html_url": "https://github.com/dkm", "followers_url": "https://api.github.com/users/dkm/followers", "following_url": "https://api.github.com/users/dkm/following{/other_user}", "gists_url": "https://api.github.com/users/dkm/gists{/gist_id}", "starred_url": "https://api.github.com/users/dkm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dkm/subscriptions", "organizations_url": "https://api.github.com/users/dkm/orgs", "repos_url": "https://api.github.com/users/dkm/repos", "events_url": "https://api.github.com/users/dkm/events{/privacy}", "received_events_url": "https://api.github.com/users/dkm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1fc93c2437dd3bc5cfd19b1397b9b0ca4c5f4064", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1fc93c2437dd3bc5cfd19b1397b9b0ca4c5f4064", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1fc93c2437dd3bc5cfd19b1397b9b0ca4c5f4064"}], "stats": {"total": 21, "additions": 17, "deletions": 4}, "files": [{"sha": "975a96668df5f2e12f361a692c08cdf22749144f", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83d52e6de23f65cefde615183cdef1eb94d18b1f/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83d52e6de23f65cefde615183cdef1eb94d18b1f/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=83d52e6de23f65cefde615183cdef1eb94d18b1f", "patch": "@@ -9378,6 +9378,10 @@ package body Exp_Ch6 is\n       Preserve_Comes_From_Source (Orig_Id, Orig_Decl);\n \n       Set_Comes_From_Source (New_Id, False);\n+\n+      --  Preserve aliased indication\n+\n+      Set_Is_Aliased (Orig_Id, Is_Aliased (New_Id));\n    end Replace_Renaming_Declaration_Id;\n \n    ---------------------------------"}, {"sha": "3132446515bcd89bcd97035db7983d87f7f8ef34", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83d52e6de23f65cefde615183cdef1eb94d18b1f/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83d52e6de23f65cefde615183cdef1eb94d18b1f/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=83d52e6de23f65cefde615183cdef1eb94d18b1f", "patch": "@@ -15255,8 +15255,15 @@ package body Sem_Util is\n       then\n          return Is_Aliased_View (Expression (Obj));\n \n+      --  The dereference of an access-to-object value denotes an aliased view,\n+      --  but this routine uses the rules of the language so we need to exclude\n+      --  rewritten constructs that introduce artificial dereferences.\n+\n       elsif Nkind (Obj) = N_Explicit_Dereference then\n-         return Nkind (Original_Node (Obj)) /= N_Function_Call;\n+         return not Is_Captured_Function_Call (Obj)\n+           and then not\n+             (Nkind (Parent (Obj)) = N_Object_Renaming_Declaration\n+               and then Is_Return_Object (Defining_Entity (Parent (Obj))));\n \n       else\n          return False;\n@@ -27394,7 +27401,9 @@ package body Sem_Util is\n \n    procedure Set_Debug_Info_Defining_Id (N : Node_Id) is\n    begin\n-      if Comes_From_Source (Defining_Identifier (N)) then\n+      if Comes_From_Source (Defining_Identifier (N))\n+        or else Debug_Generated_Code\n+      then\n          Set_Debug_Info_Needed (Defining_Identifier (N));\n       end if;\n    end Set_Debug_Info_Defining_Id;"}, {"sha": "dc1bb084b549af8d6736c0b6ed0ea48c0c08012a", "filename": "gcc/ada/sem_util.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83d52e6de23f65cefde615183cdef1eb94d18b1f/gcc%2Fada%2Fsem_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83d52e6de23f65cefde615183cdef1eb94d18b1f/gcc%2Fada%2Fsem_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.ads?ref=83d52e6de23f65cefde615183cdef1eb94d18b1f", "patch": "@@ -3096,8 +3096,8 @@ package Sem_Util is\n    --  associated name (i.e. the Node_Id associated with its name).\n \n    procedure Set_Debug_Info_Defining_Id (N : Node_Id);\n-   --  Call Set_Debug_Info_Needed on Defining_Identifier (N) if it comes\n-   --  from source.\n+   --  Call Set_Debug_Info_Needed on Defining_Identifier (N) if it comes from\n+   --  source or we are in -gnatD mode, where we are debugging generated code.\n \n    procedure Set_Debug_Info_Needed (T : Entity_Id);\n    --  Sets the Debug_Info_Needed flag on entity T , and also on any entities"}]}