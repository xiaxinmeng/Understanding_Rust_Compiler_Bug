{"sha": "261bd78d57d40a03f340cfe4fc78ff9717c9602d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjYxYmQ3OGQ1N2Q0MGEwM2YzNDBjZmU0ZmM3OGZmOTcxN2M5NjAyZA==", "commit": {"author": {"name": "Iain Buclaw", "email": "ibuclaw@gdcproject.org", "date": "2020-03-25T08:38:58Z"}, "committer": {"name": "Iain Buclaw", "email": "ibuclaw@gdcproject.org", "date": "2020-04-18T16:25:49Z"}, "message": "libphobos: Add --with-libphobos-druntime-only option.\n\nThe intended purpose of the option is both for targets that don't\nsupport phobos yet, and for gdc itself to support bootstrapping itself\nas a self-hosted D compiler.\n\nThe libphobos testsuite has been updated to only add libphobos to the\nsearch paths if it's being built.  A new D2 testsuite directive\nRUNNABLE_PHOBOS_TEST has also been patched in to disable some runnable\ntests that have phobos dependencies, of which is a temporary measure\nuntil upstream DMD fixes or removes these tests entirely.\n\ngcc/testsuite/ChangeLog:\n\n\t* lib/gdc-utils.exp (gdc-convert-test): Add dg-skip-if for tests that\n\tdepending on the phobos standard library.\n\nlibphobos/ChangeLog:\n\n\t* configure: Regenerate.\n\t* configure.ac: Add --with-libphobos-druntime-only option and the\n\tconditional ENABLE_LIBDRUNTIME_ONLY.\n\t* configure.tgt: Define LIBDRUNTIME_ONLY.\n\t* src/Makefile.am: Add phobos sources if not ENABLE_LIBDRUNTIME_ONLY.\n\t* src/Makefile.in: Regenerate.\n\t* testsuite/testsuite_flags.in: Add phobos path if compiling phobos.", "tree": {"sha": "56918700689bbafd55af340a13d15c94ac5831fe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/56918700689bbafd55af340a13d15c94ac5831fe"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/261bd78d57d40a03f340cfe4fc78ff9717c9602d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/261bd78d57d40a03f340cfe4fc78ff9717c9602d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/261bd78d57d40a03f340cfe4fc78ff9717c9602d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/261bd78d57d40a03f340cfe4fc78ff9717c9602d/comments", "author": {"login": "ibuclaw", "id": 397929, "node_id": "MDQ6VXNlcjM5NzkyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/397929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibuclaw", "html_url": "https://github.com/ibuclaw", "followers_url": "https://api.github.com/users/ibuclaw/followers", "following_url": "https://api.github.com/users/ibuclaw/following{/other_user}", "gists_url": "https://api.github.com/users/ibuclaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibuclaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibuclaw/subscriptions", "organizations_url": "https://api.github.com/users/ibuclaw/orgs", "repos_url": "https://api.github.com/users/ibuclaw/repos", "events_url": "https://api.github.com/users/ibuclaw/events{/privacy}", "received_events_url": "https://api.github.com/users/ibuclaw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ibuclaw", "id": 397929, "node_id": "MDQ6VXNlcjM5NzkyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/397929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibuclaw", "html_url": "https://github.com/ibuclaw", "followers_url": "https://api.github.com/users/ibuclaw/followers", "following_url": "https://api.github.com/users/ibuclaw/following{/other_user}", "gists_url": "https://api.github.com/users/ibuclaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibuclaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibuclaw/subscriptions", "organizations_url": "https://api.github.com/users/ibuclaw/orgs", "repos_url": "https://api.github.com/users/ibuclaw/repos", "events_url": "https://api.github.com/users/ibuclaw/events{/privacy}", "received_events_url": "https://api.github.com/users/ibuclaw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "baf3b9b2e5259558ef86bd62398e2ccecd7a4a4c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/baf3b9b2e5259558ef86bd62398e2ccecd7a4a4c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/baf3b9b2e5259558ef86bd62398e2ccecd7a4a4c"}], "stats": {"total": 460, "additions": 322, "deletions": 138}, "files": [{"sha": "d7ac356757ff6da6059cc6bab404acbc2c579724", "filename": "gcc/testsuite/gdc.test/runnable/builtin.d", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/261bd78d57d40a03f340cfe4fc78ff9717c9602d/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fbuiltin.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/261bd78d57d40a03f340cfe4fc78ff9717c9602d/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fbuiltin.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fbuiltin.d?ref=261bd78d57d40a03f340cfe4fc78ff9717c9602d", "patch": "@@ -116,3 +116,4 @@ int main()\n     printf(\"Success\\n\");\n     return 0;\n }\n+// RUNNABLE_PHOBOS_TEST"}, {"sha": "49bb3097aefc3ac6d74b29d8964f6aa26d050077", "filename": "gcc/testsuite/gdc.test/runnable/complex.d", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/261bd78d57d40a03f340cfe4fc78ff9717c9602d/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fcomplex.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/261bd78d57d40a03f340cfe4fc78ff9717c9602d/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fcomplex.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fcomplex.d?ref=261bd78d57d40a03f340cfe4fc78ff9717c9602d", "patch": "@@ -460,3 +460,4 @@ int main(char[][] args)\n     return 0;\n }\n \n+// RUNNABLE_PHOBOS_TEST"}, {"sha": "d56f6c1357cb22141e0ab8c7fe7d89e328c9a559", "filename": "gcc/testsuite/gdc.test/runnable/constfold.d", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/261bd78d57d40a03f340cfe4fc78ff9717c9602d/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fconstfold.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/261bd78d57d40a03f340cfe4fc78ff9717c9602d/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fconstfold.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fconstfold.d?ref=261bd78d57d40a03f340cfe4fc78ff9717c9602d", "patch": "@@ -672,3 +672,4 @@ int main()\n     printf(\"Success\\n\");\n     return 0;\n }\n+// RUNNABLE_PHOBOS_TEST"}, {"sha": "bf8eab45b0e61830b7d8709d25d80d73041855c2", "filename": "gcc/testsuite/gdc.test/runnable/foreach4.d", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/261bd78d57d40a03f340cfe4fc78ff9717c9602d/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fforeach4.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/261bd78d57d40a03f340cfe4fc78ff9717c9602d/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fforeach4.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fforeach4.d?ref=261bd78d57d40a03f340cfe4fc78ff9717c9602d", "patch": "@@ -928,3 +928,4 @@ int main()\n     printf(\"Success\\n\");\n     return 0;\n }\n+// RUNNABLE_PHOBOS_TEST"}, {"sha": "0e4edef89830a0dcf4d0dc7d267fc285f7105365", "filename": "gcc/testsuite/gdc.test/runnable/ifti.d", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/261bd78d57d40a03f340cfe4fc78ff9717c9602d/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fifti.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/261bd78d57d40a03f340cfe4fc78ff9717c9602d/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fifti.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fifti.d?ref=261bd78d57d40a03f340cfe4fc78ff9717c9602d", "patch": "@@ -118,3 +118,4 @@ void main() {\n     }\n \n }\n+// RUNNABLE_PHOBOS_TEST"}, {"sha": "89e6ac11b9fa2ee45b09055e523099d234635de9", "filename": "gcc/testsuite/gdc.test/runnable/implicit.d", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/261bd78d57d40a03f340cfe4fc78ff9717c9602d/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fimplicit.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/261bd78d57d40a03f340cfe4fc78ff9717c9602d/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fimplicit.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fimplicit.d?ref=261bd78d57d40a03f340cfe4fc78ff9717c9602d", "patch": "@@ -479,3 +479,4 @@ void main()\n \n     writefln(\"Success\");\n }\n+// RUNNABLE_PHOBOS_TEST"}, {"sha": "40eb27d57990861d4ca2005d9eb4fdbd93203fc8", "filename": "gcc/testsuite/gdc.test/runnable/inner.d", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/261bd78d57d40a03f340cfe4fc78ff9717c9602d/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Finner.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/261bd78d57d40a03f340cfe4fc78ff9717c9602d/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Finner.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Finner.d?ref=261bd78d57d40a03f340cfe4fc78ff9717c9602d", "patch": "@@ -916,3 +916,4 @@ int main()\n     printf(\"Success\\n\");\n     return 0;\n }\n+// RUNNABLE_PHOBOS_TEST"}, {"sha": "eee3930d34bb07d9bca86b06c8b52a556d91d377", "filename": "gcc/testsuite/gdc.test/runnable/interpret.d", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/261bd78d57d40a03f340cfe4fc78ff9717c9602d/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Finterpret.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/261bd78d57d40a03f340cfe4fc78ff9717c9602d/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Finterpret.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Finterpret.d?ref=261bd78d57d40a03f340cfe4fc78ff9717c9602d", "patch": "@@ -3609,3 +3609,4 @@ int main()\n     printf(\"Success\\n\");\n     return 0;\n }\n+// RUNNABLE_PHOBOS_TEST"}, {"sha": "8097e79d6bfed34b56efadb8e4cf2c267462b1a6", "filename": "gcc/testsuite/gdc.test/runnable/issue8671.d", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/261bd78d57d40a03f340cfe4fc78ff9717c9602d/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fissue8671.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/261bd78d57d40a03f340cfe4fc78ff9717c9602d/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fissue8671.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fissue8671.d?ref=261bd78d57d40a03f340cfe4fc78ff9717c9602d", "patch": "@@ -3,3 +3,4 @@ void main()\n {\n     double t = 1.0 - uniform(0.0, 1.0);\n }\n+// RUNNABLE_PHOBOS_TEST"}, {"sha": "741877cb9703d30c42faa773d9efc32d685d750d", "filename": "gcc/testsuite/gdc.test/runnable/lazy.d", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/261bd78d57d40a03f340cfe4fc78ff9717c9602d/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Flazy.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/261bd78d57d40a03f340cfe4fc78ff9717c9602d/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Flazy.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Flazy.d?ref=261bd78d57d40a03f340cfe4fc78ff9717c9602d", "patch": "@@ -308,3 +308,4 @@ int main()\n     printf(\"Success\\n\");\n     return 0;\n }\n+// RUNNABLE_PHOBOS_TEST"}, {"sha": "b240745a51383710eeb1d390c7a2c581393d3053", "filename": "gcc/testsuite/gdc.test/runnable/mars1.d", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/261bd78d57d40a03f340cfe4fc78ff9717c9602d/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fmars1.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/261bd78d57d40a03f340cfe4fc78ff9717c9602d/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fmars1.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fmars1.d?ref=261bd78d57d40a03f340cfe4fc78ff9717c9602d", "patch": "@@ -1723,3 +1723,4 @@ int main()\n     printf(\"Success\\n\");\n     return 0;\n }\n+// RUNNABLE_PHOBOS_TEST"}, {"sha": "c16d943d20f3faf897c8f476f9a1f0219e1c624a", "filename": "gcc/testsuite/gdc.test/runnable/mixin1.d", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/261bd78d57d40a03f340cfe4fc78ff9717c9602d/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fmixin1.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/261bd78d57d40a03f340cfe4fc78ff9717c9602d/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fmixin1.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fmixin1.d?ref=261bd78d57d40a03f340cfe4fc78ff9717c9602d", "patch": "@@ -1468,3 +1468,4 @@ int main()\n     printf(\"Success\\n\");\n     return 0;\n }\n+// RUNNABLE_PHOBOS_TEST"}, {"sha": "53a64d5f40ec95b89e3f2b6e6173f7f2a8511dd1", "filename": "gcc/testsuite/gdc.test/runnable/mixin2.d", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/261bd78d57d40a03f340cfe4fc78ff9717c9602d/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fmixin2.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/261bd78d57d40a03f340cfe4fc78ff9717c9602d/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fmixin2.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fmixin2.d?ref=261bd78d57d40a03f340cfe4fc78ff9717c9602d", "patch": "@@ -361,3 +361,4 @@ void main()\n \n     writeln(\"Success\");\n }\n+// RUNNABLE_PHOBOS_TEST"}, {"sha": "4c969b4b16f6c2659032753ee5a3de5795e911a9", "filename": "gcc/testsuite/gdc.test/runnable/s2ir.d", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/261bd78d57d40a03f340cfe4fc78ff9717c9602d/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fs2ir.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/261bd78d57d40a03f340cfe4fc78ff9717c9602d/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fs2ir.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fs2ir.d?ref=261bd78d57d40a03f340cfe4fc78ff9717c9602d", "patch": "@@ -95,3 +95,4 @@ int main()\n     writefln(\"Success\\n\");\n     return 0;\n }\n+// RUNNABLE_PHOBOS_TEST"}, {"sha": "1b7f6457cf033f8b26619a97367e5d377193a584", "filename": "gcc/testsuite/gdc.test/runnable/stress.d", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/261bd78d57d40a03f340cfe4fc78ff9717c9602d/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fstress.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/261bd78d57d40a03f340cfe4fc78ff9717c9602d/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fstress.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fstress.d?ref=261bd78d57d40a03f340cfe4fc78ff9717c9602d", "patch": "@@ -725,3 +725,4 @@ void CLASS()\n         }\n     }\n }\n+// RUNNABLE_PHOBOS_TEST"}, {"sha": "84792dae6ae0bb045860a664da3a37fecce8e17f", "filename": "gcc/testsuite/gdc.test/runnable/template4.d", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/261bd78d57d40a03f340cfe4fc78ff9717c9602d/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftemplate4.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/261bd78d57d40a03f340cfe4fc78ff9717c9602d/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftemplate4.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftemplate4.d?ref=261bd78d57d40a03f340cfe4fc78ff9717c9602d", "patch": "@@ -1164,3 +1164,4 @@ int main()\n     printf(\"Success\\n\");\n     return 0;\n }\n+// RUNNABLE_PHOBOS_TEST"}, {"sha": "0b11c6b4fa319b8016b929b498099f5a40dd3433", "filename": "gcc/testsuite/gdc.test/runnable/template9.d", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/261bd78d57d40a03f340cfe4fc78ff9717c9602d/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftemplate9.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/261bd78d57d40a03f340cfe4fc78ff9717c9602d/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftemplate9.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftemplate9.d?ref=261bd78d57d40a03f340cfe4fc78ff9717c9602d", "patch": "@@ -4965,3 +4965,4 @@ int main()\n     printf(\"Success\\n\");\n     return 0;\n }\n+// RUNNABLE_PHOBOS_TEST"}, {"sha": "612158fc294376208845362e19525e6c589ea2ed", "filename": "gcc/testsuite/gdc.test/runnable/test10942.d", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/261bd78d57d40a03f340cfe4fc78ff9717c9602d/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftest10942.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/261bd78d57d40a03f340cfe4fc78ff9717c9602d/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftest10942.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftest10942.d?ref=261bd78d57d40a03f340cfe4fc78ff9717c9602d", "patch": "@@ -24,3 +24,4 @@ mixin(getEnum(1087));\n \n void main() { }\n \n+// RUNNABLE_PHOBOS_TEST"}, {"sha": "e62ea97940a54c972258d25ccec5f49ac200f056", "filename": "gcc/testsuite/gdc.test/runnable/test11.d", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/261bd78d57d40a03f340cfe4fc78ff9717c9602d/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftest11.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/261bd78d57d40a03f340cfe4fc78ff9717c9602d/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftest11.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftest11.d?ref=261bd78d57d40a03f340cfe4fc78ff9717c9602d", "patch": "@@ -1390,3 +1390,4 @@ int main(string[] argv)\n }\n \n \n+// RUNNABLE_PHOBOS_TEST"}, {"sha": "c196361a40143bc22090e9aef2bdad8945f675cd", "filename": "gcc/testsuite/gdc.test/runnable/test12.d", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/261bd78d57d40a03f340cfe4fc78ff9717c9602d/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftest12.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/261bd78d57d40a03f340cfe4fc78ff9717c9602d/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftest12.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftest12.d?ref=261bd78d57d40a03f340cfe4fc78ff9717c9602d", "patch": "@@ -1250,3 +1250,4 @@ int main(string[] argv)\n     return 0;\n }\n \n+// RUNNABLE_PHOBOS_TEST"}, {"sha": "52d44c94a2e25274025d15b3e00bf10b446b2acf", "filename": "gcc/testsuite/gdc.test/runnable/test12197.d", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/261bd78d57d40a03f340cfe4fc78ff9717c9602d/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftest12197.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/261bd78d57d40a03f340cfe4fc78ff9717c9602d/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftest12197.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftest12197.d?ref=261bd78d57d40a03f340cfe4fc78ff9717c9602d", "patch": "@@ -10,3 +10,4 @@ void main()\n     foo(a);\n     assert(a[0] == 10000);\n }\n+// RUNNABLE_PHOBOS_TEST"}, {"sha": "75cd11ee8e7ddc59b86642050ddf71e0d9cfb397", "filename": "gcc/testsuite/gdc.test/runnable/test15.d", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/261bd78d57d40a03f340cfe4fc78ff9717c9602d/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftest15.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/261bd78d57d40a03f340cfe4fc78ff9717c9602d/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftest15.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftest15.d?ref=261bd78d57d40a03f340cfe4fc78ff9717c9602d", "patch": "@@ -1439,3 +1439,4 @@ int main()\n     printf(\"Success\\n\");\n     return 0;\n }\n+// RUNNABLE_PHOBOS_TEST"}, {"sha": "d15db1d86a99c18d51875e25ff17ffaa16544c4e", "filename": "gcc/testsuite/gdc.test/runnable/test22.d", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/261bd78d57d40a03f340cfe4fc78ff9717c9602d/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftest22.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/261bd78d57d40a03f340cfe4fc78ff9717c9602d/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftest22.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftest22.d?ref=261bd78d57d40a03f340cfe4fc78ff9717c9602d", "patch": "@@ -1306,3 +1306,4 @@ int main()\n     printf(\"Success\\n\");\n     return 0;\n }\n+// RUNNABLE_PHOBOS_TEST"}, {"sha": "dda2864fb48da0d39feb9e149c4d8f09fc9ffa99", "filename": "gcc/testsuite/gdc.test/runnable/test23.d", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/261bd78d57d40a03f340cfe4fc78ff9717c9602d/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftest23.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/261bd78d57d40a03f340cfe4fc78ff9717c9602d/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftest23.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftest23.d?ref=261bd78d57d40a03f340cfe4fc78ff9717c9602d", "patch": "@@ -1566,3 +1566,4 @@ void main()\n \n     printf(\"Success\\n\");\n }\n+// RUNNABLE_PHOBOS_TEST"}, {"sha": "cc6d6686d7a33e4c1bb7f94759a62880c48811f0", "filename": "gcc/testsuite/gdc.test/runnable/test24.d", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/261bd78d57d40a03f340cfe4fc78ff9717c9602d/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftest24.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/261bd78d57d40a03f340cfe4fc78ff9717c9602d/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftest24.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftest24.d?ref=261bd78d57d40a03f340cfe4fc78ff9717c9602d", "patch": "@@ -8,3 +8,4 @@ void main()\n {\n     string hi = std.string.format(\"%s\", 3);\n }\n+// RUNNABLE_PHOBOS_TEST"}, {"sha": "3e5a462e4a56b32ff4226c079e1d23d5166381e4", "filename": "gcc/testsuite/gdc.test/runnable/test27.d", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/261bd78d57d40a03f340cfe4fc78ff9717c9602d/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftest27.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/261bd78d57d40a03f340cfe4fc78ff9717c9602d/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftest27.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftest27.d?ref=261bd78d57d40a03f340cfe4fc78ff9717c9602d", "patch": "@@ -11,3 +11,4 @@ int main()\n     return 0;\n }\n \n+// RUNNABLE_PHOBOS_TEST"}, {"sha": "1f7e7e89cf0b034ada4a31fd9aaea308bf46b280", "filename": "gcc/testsuite/gdc.test/runnable/test28.d", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/261bd78d57d40a03f340cfe4fc78ff9717c9602d/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftest28.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/261bd78d57d40a03f340cfe4fc78ff9717c9602d/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftest28.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftest28.d?ref=261bd78d57d40a03f340cfe4fc78ff9717c9602d", "patch": "@@ -1318,3 +1318,4 @@ void main()\n     printf(\"Success\\n\");\n }\n \n+// RUNNABLE_PHOBOS_TEST"}, {"sha": "e92f3d6e3406a6b09ecffc00d3d824fe0c6b7e70", "filename": "gcc/testsuite/gdc.test/runnable/test34.d", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/261bd78d57d40a03f340cfe4fc78ff9717c9602d/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftest34.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/261bd78d57d40a03f340cfe4fc78ff9717c9602d/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftest34.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftest34.d?ref=261bd78d57d40a03f340cfe4fc78ff9717c9602d", "patch": "@@ -1292,3 +1292,4 @@ void main()\n }\n \n \n+// RUNNABLE_PHOBOS_TEST"}, {"sha": "c28d30f2ae923aadbbad09a38ab60b3f0a44d008", "filename": "gcc/testsuite/gdc.test/runnable/test37.d", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/261bd78d57d40a03f340cfe4fc78ff9717c9602d/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftest37.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/261bd78d57d40a03f340cfe4fc78ff9717c9602d/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftest37.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftest37.d?ref=261bd78d57d40a03f340cfe4fc78ff9717c9602d", "patch": "@@ -11,3 +11,4 @@ void main()\n     // imports in a subdirectory of the -J path\n     writefln(import(\"std14198/uni.d\"));\n }\n+// RUNNABLE_PHOBOS_TEST"}, {"sha": "2bb04580a7d93bcdbe938f0f70c2c444dfa53228", "filename": "gcc/testsuite/gdc.test/runnable/test42.d", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/261bd78d57d40a03f340cfe4fc78ff9717c9602d/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftest42.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/261bd78d57d40a03f340cfe4fc78ff9717c9602d/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftest42.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftest42.d?ref=261bd78d57d40a03f340cfe4fc78ff9717c9602d", "patch": "@@ -6438,3 +6438,4 @@ int main()\n     return 0;\n }\n \n+// RUNNABLE_PHOBOS_TEST"}, {"sha": "9102cba91f21fc4baa6fbb64f843587dcc53962e", "filename": "gcc/testsuite/gdc.test/runnable/test5305.d", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/261bd78d57d40a03f340cfe4fc78ff9717c9602d/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftest5305.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/261bd78d57d40a03f340cfe4fc78ff9717c9602d/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftest5305.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftest5305.d?ref=261bd78d57d40a03f340cfe4fc78ff9717c9602d", "patch": "@@ -5,3 +5,4 @@ void map(real function(real) f) { }\n int main() { map(&sqrt); return 0; }\n \n \n+// RUNNABLE_PHOBOS_TEST"}, {"sha": "ab967329f083a0fadf1ed16ac1549db941be42d9", "filename": "gcc/testsuite/gdc.test/runnable/test60.d", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/261bd78d57d40a03f340cfe4fc78ff9717c9602d/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftest60.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/261bd78d57d40a03f340cfe4fc78ff9717c9602d/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftest60.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftest60.d?ref=261bd78d57d40a03f340cfe4fc78ff9717c9602d", "patch": "@@ -20,3 +20,4 @@ void main()\n \n     writeln(\"Success\");\n }\n+// RUNNABLE_PHOBOS_TEST"}, {"sha": "6e28e894cf2f20068cdaf1652adfa2ef81590ac5", "filename": "gcc/testsuite/gdc.test/runnable/testaa.d", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/261bd78d57d40a03f340cfe4fc78ff9717c9602d/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftestaa.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/261bd78d57d40a03f340cfe4fc78ff9717c9602d/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftestaa.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftestaa.d?ref=261bd78d57d40a03f340cfe4fc78ff9717c9602d", "patch": "@@ -1383,3 +1383,4 @@ int main()\n     printf(\"Success\\n\");\n     return 0;\n }\n+// RUNNABLE_PHOBOS_TEST"}, {"sha": "118388bebd1cbc1fdc2dacac333e7b6557dd516c", "filename": "gcc/testsuite/gdc.test/runnable/testbitarray.d", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/261bd78d57d40a03f340cfe4fc78ff9717c9602d/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftestbitarray.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/261bd78d57d40a03f340cfe4fc78ff9717c9602d/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftestbitarray.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftestbitarray.d?ref=261bd78d57d40a03f340cfe4fc78ff9717c9602d", "patch": "@@ -14,3 +14,4 @@ void main() {\n }\n \n \n+// RUNNABLE_PHOBOS_TEST"}, {"sha": "097fc310d3405c90cf143e832f0cad5c31c12179", "filename": "gcc/testsuite/gdc.test/runnable/testdstress.d", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/261bd78d57d40a03f340cfe4fc78ff9717c9602d/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftestdstress.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/261bd78d57d40a03f340cfe4fc78ff9717c9602d/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftestdstress.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftestdstress.d?ref=261bd78d57d40a03f340cfe4fc78ff9717c9602d", "patch": "@@ -930,3 +930,4 @@ int main()\n     printf(\"Success\\n\");\n     return 0;\n }\n+// RUNNABLE_PHOBOS_TEST"}, {"sha": "e7c3e19a49daba044c096bd504bd5a8197ff60dd", "filename": "gcc/testsuite/gdc.test/runnable/testfile.d", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/261bd78d57d40a03f340cfe4fc78ff9717c9602d/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftestfile.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/261bd78d57d40a03f340cfe4fc78ff9717c9602d/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftestfile.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftestfile.d?ref=261bd78d57d40a03f340cfe4fc78ff9717c9602d", "patch": "@@ -22,3 +22,4 @@ int main()\n     printf(\"Success\\n\");\n     return 0;\n }\n+// RUNNABLE_PHOBOS_TEST"}, {"sha": "2cb0da9fc4d4f158ea2043d8e371772aa260bacd", "filename": "gcc/testsuite/gdc.test/runnable/testformat.d", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/261bd78d57d40a03f340cfe4fc78ff9717c9602d/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftestformat.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/261bd78d57d40a03f340cfe4fc78ff9717c9602d/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftestformat.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftestformat.d?ref=261bd78d57d40a03f340cfe4fc78ff9717c9602d", "patch": "@@ -123,3 +123,4 @@ int main()\n     std.stdio.writefln(\"Success\");\n     return 0;\n }\n+// RUNNABLE_PHOBOS_TEST"}, {"sha": "5001fc2fa681a8b22fc49c0c0e4e4d0fc80c9763", "filename": "gcc/testsuite/gdc.test/runnable/testline.d", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/261bd78d57d40a03f340cfe4fc78ff9717c9602d/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftestline.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/261bd78d57d40a03f340cfe4fc78ff9717c9602d/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftestline.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftestline.d?ref=261bd78d57d40a03f340cfe4fc78ff9717c9602d", "patch": "@@ -41,3 +41,4 @@ void checkFileSpec(Object o){\n writeln(str);\n         assert(str[start .. start+3]==\"(1)\");\n }\n+// RUNNABLE_PHOBOS_TEST"}, {"sha": "1ae98df9178b7db4036d4d008485d8f9400b76b3", "filename": "gcc/testsuite/gdc.test/runnable/testmmfile.d", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/261bd78d57d40a03f340cfe4fc78ff9717c9602d/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftestmmfile.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/261bd78d57d40a03f340cfe4fc78ff9717c9602d/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftestmmfile.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftestmmfile.d?ref=261bd78d57d40a03f340cfe4fc78ff9717c9602d", "patch": "@@ -117,3 +117,4 @@ int main()\n \n     return 0;\n }\n+// RUNNABLE_PHOBOS_TEST"}, {"sha": "cde02ab405f21d2a8f3c19b3d74704654040136a", "filename": "gcc/testsuite/gdc.test/runnable/testscope2.d", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/261bd78d57d40a03f340cfe4fc78ff9717c9602d/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftestscope2.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/261bd78d57d40a03f340cfe4fc78ff9717c9602d/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftestscope2.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftestscope2.d?ref=261bd78d57d40a03f340cfe4fc78ff9717c9602d", "patch": "@@ -246,3 +246,4 @@ void main()\n     printf(\"Success\\n\");\n }\n \n+// RUNNABLE_PHOBOS_TEST"}, {"sha": "a43f89295e8fce33b0086f445cbf1c10d8647995", "filename": "gcc/testsuite/gdc.test/runnable/testsignals.d", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/261bd78d57d40a03f340cfe4fc78ff9717c9602d/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftestsignals.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/261bd78d57d40a03f340cfe4fc78ff9717c9602d/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftestsignals.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftestsignals.d?ref=261bd78d57d40a03f340cfe4fc78ff9717c9602d", "patch": "@@ -111,3 +111,4 @@ int main()\n     printf(\"Success\\n\");\n     return 0;\n }\n+// RUNNABLE_PHOBOS_TEST"}, {"sha": "00b757a896b6c73af73186ac04612f7aed52e2fa", "filename": "gcc/testsuite/gdc.test/runnable/testsocket.d", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/261bd78d57d40a03f340cfe4fc78ff9717c9602d/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftestsocket.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/261bd78d57d40a03f340cfe4fc78ff9717c9602d/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftestsocket.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftestsocket.d?ref=261bd78d57d40a03f340cfe4fc78ff9717c9602d", "patch": "@@ -48,3 +48,4 @@ int main ()\n }\n \n \n+// RUNNABLE_PHOBOS_TEST"}, {"sha": "854dcb5ae382b5216b7ead7e7f5d49982bae5358", "filename": "gcc/testsuite/gdc.test/runnable/teststdio.d", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/261bd78d57d40a03f340cfe4fc78ff9717c9602d/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fteststdio.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/261bd78d57d40a03f340cfe4fc78ff9717c9602d/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fteststdio.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fteststdio.d?ref=261bd78d57d40a03f340cfe4fc78ff9717c9602d", "patch": "@@ -31,3 +31,4 @@ void main()\n     } while (!feof(fp));\n     //fclose(fp);\n }\n+// RUNNABLE_PHOBOS_TEST"}, {"sha": "0ec6e0dbcdcd68ede000179e5764c0bcda7edbe2", "filename": "gcc/testsuite/gdc.test/runnable/testthread2.d", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/261bd78d57d40a03f340cfe4fc78ff9717c9602d/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftestthread2.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/261bd78d57d40a03f340cfe4fc78ff9717c9602d/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftestthread2.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftestthread2.d?ref=261bd78d57d40a03f340cfe4fc78ff9717c9602d", "patch": "@@ -106,3 +106,4 @@ void main() {\n     }\n }\n \n+// RUNNABLE_PHOBOS_TEST"}, {"sha": "dcaac731fa3182b8cb5bceae0ea464bb9c46b082", "filename": "gcc/testsuite/gdc.test/runnable/testtypeid.d", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/261bd78d57d40a03f340cfe4fc78ff9717c9602d/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftesttypeid.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/261bd78d57d40a03f340cfe4fc78ff9717c9602d/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftesttypeid.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftesttypeid.d?ref=261bd78d57d40a03f340cfe4fc78ff9717c9602d", "patch": "@@ -684,3 +684,4 @@ int main()\n \n     return 0;\n }\n+// RUNNABLE_PHOBOS_TEST"}, {"sha": "915f16da48efe5f52a320c736bfde1fb720d14d8", "filename": "gcc/testsuite/gdc.test/runnable/traits.d", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/261bd78d57d40a03f340cfe4fc78ff9717c9602d/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftraits.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/261bd78d57d40a03f340cfe4fc78ff9717c9602d/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftraits.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftraits.d?ref=261bd78d57d40a03f340cfe4fc78ff9717c9602d", "patch": "@@ -1606,3 +1606,4 @@ int main()\n     writeln(\"Success\");\n     return 0;\n }\n+// RUNNABLE_PHOBOS_TEST"}, {"sha": "e5fd98a0f835486d2148ccbd769a745788838a27", "filename": "gcc/testsuite/gdc.test/runnable/wc.d", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/261bd78d57d40a03f340cfe4fc78ff9717c9602d/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fwc.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/261bd78d57d40a03f340cfe4fc78ff9717c9602d/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fwc.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fwc.d?ref=261bd78d57d40a03f340cfe4fc78ff9717c9602d", "patch": "@@ -48,3 +48,4 @@ int main (string[] args)\n     }\n     return 0;\n }\n+// RUNNABLE_PHOBOS_TEST"}, {"sha": "780f5f160eaf91ee01462c57b652a5c83cb95331", "filename": "gcc/testsuite/gdc.test/runnable/wc2.d", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/261bd78d57d40a03f340cfe4fc78ff9717c9602d/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fwc2.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/261bd78d57d40a03f340cfe4fc78ff9717c9602d/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fwc2.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fwc2.d?ref=261bd78d57d40a03f340cfe4fc78ff9717c9602d", "patch": "@@ -72,3 +72,4 @@ int main (string[] args)\n     }\n     return 0;\n }\n+// RUNNABLE_PHOBOS_TEST"}, {"sha": "666bfb99113a5c92252a7b6a0c8195b50b072c61", "filename": "gcc/testsuite/gdc.test/runnable/wc3.d", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/261bd78d57d40a03f340cfe4fc78ff9717c9602d/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fwc3.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/261bd78d57d40a03f340cfe4fc78ff9717c9602d/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fwc3.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fwc3.d?ref=261bd78d57d40a03f340cfe4fc78ff9717c9602d", "patch": "@@ -70,3 +70,4 @@ int main (string[] args)\n     }\n     return 0;\n }\n+// RUNNABLE_PHOBOS_TEST"}, {"sha": "e1cdbcd1922d8274e664ade9c53506ca4126e97d", "filename": "gcc/testsuite/gdc.test/runnable/xtest46.d", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/261bd78d57d40a03f340cfe4fc78ff9717c9602d/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fxtest46.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/261bd78d57d40a03f340cfe4fc78ff9717c9602d/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fxtest46.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fxtest46.d?ref=261bd78d57d40a03f340cfe4fc78ff9717c9602d", "patch": "@@ -8283,3 +8283,4 @@ int main()\n     printf(\"Success\\n\");\n     return 0;\n }\n+// RUNNABLE_PHOBOS_TEST"}, {"sha": "1062a1a77fc245c7ded633e6424515894d7ac942", "filename": "gcc/testsuite/gdc.test/runnable/xtest55.d", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/261bd78d57d40a03f340cfe4fc78ff9717c9602d/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fxtest55.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/261bd78d57d40a03f340cfe4fc78ff9717c9602d/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fxtest55.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fxtest55.d?ref=261bd78d57d40a03f340cfe4fc78ff9717c9602d", "patch": "@@ -22,3 +22,4 @@ int main()\n     return 0;\n }\n \n+// RUNNABLE_PHOBOS_TEST"}, {"sha": "87d1105a9dbe683839ea94cfb9b978548cfcceed", "filename": "gcc/testsuite/lib/gdc-utils.exp", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/261bd78d57d40a03f340cfe4fc78ff9717c9602d/gcc%2Ftestsuite%2Flib%2Fgdc-utils.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/261bd78d57d40a03f340cfe4fc78ff9717c9602d/gcc%2Ftestsuite%2Flib%2Fgdc-utils.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fgdc-utils.exp?ref=261bd78d57d40a03f340cfe4fc78ff9717c9602d", "patch": "@@ -208,6 +208,7 @@ proc gdc-convert-test { base test } {\n \n     set extra_sources \"\"\n     set extra_files \"\"\n+    set needs_phobos 0\n \n     upvar 1 compilable_do_what compilable_do_what\n     set compilable_output_file_ext \"\"\n@@ -296,6 +297,11 @@ proc gdc-convert-test { base test } {\n \t    }\n \t    regsub -- {COMPILED_IMPORTS.*$} $copy_line \"\" out_line\n \n+\t} elseif [regexp -- {RUNNABLE_PHOBOS_TEST} $copy_line match sources] {\n+\t    # RUNNABLE_PHOBOS_TEST annotates tests that import the std module.\n+\t    # It will need skipping if phobos is not available on the target.\n+\t    regsub -- {RUNNABLE_PHOBOS_TEST.*$} $copy_line \"\" out_line\n+\t    set needs_phobos 1\n \t}\n \n \tputs $fdout $out_line\n@@ -331,6 +337,9 @@ proc gdc-convert-test { base test } {\n \t    if ![isnative] {\n \t\tputs $fdout \"// { dg-final { output-exists } }\"\n \t    }\n+\t    if $needs_phobos {\n+\t\tputs $fdout \"// { dg-skip-if \\\"imports phobos\\\" { ! d_runtime_has_std_library } }\"\n+\t    }\n \t}\n \n \tcompilable {"}, {"sha": "2dcf15ed85275284a2753299ee05657715901d50", "filename": "libphobos/configure", "status": "modified", "additions": 46, "deletions": 2, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/261bd78d57d40a03f340cfe4fc78ff9717c9602d/libphobos%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/261bd78d57d40a03f340cfe4fc78ff9717c9602d/libphobos%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Fconfigure?ref=261bd78d57d40a03f340cfe4fc78ff9717c9602d", "patch": "@@ -638,6 +638,8 @@ GDCFLAGSX\n libtool_VERSION\n SPEC_PHOBOS_DEPS\n CHECKING_DFLAGS\n+ENABLE_LIBDRUNTIME_ONLY_FALSE\n+ENABLE_LIBDRUNTIME_ONLY_TRUE\n ENABLE_LIBPHOBOS_FALSE\n ENABLE_LIBPHOBOS_TRUE\n gdc_include_dir\n@@ -840,6 +842,7 @@ with_cross_host\n enable_version_specific_runtime_libs\n with_toolexeclibdir\n enable_libphobos\n+with_libdruntime_only\n enable_libphobos_checking\n '\n       ac_precious_vars='build_alias\n@@ -1509,6 +1512,8 @@ Optional Packages:\n   --with-toolexeclibdir=DIR\n                           install libraries built with a cross compiler within\n                           DIR\n+  --with-libphobos-druntime-only={yes,no,auto}\n+                          build only the druntime library (default: auto)\n \n Some influential environment variables:\n   CC          C compiler command\n@@ -11645,7 +11650,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11648 \"configure\"\n+#line 11653 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11751,7 +11756,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11754 \"configure\"\n+#line 11759 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -15230,8 +15235,27 @@ fi\n { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $enable_libphobos\" >&5\n $as_echo \"$enable_libphobos\" >&6; }\n \n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for --with-libphobos-druntime-only\" >&5\n+$as_echo_n \"checking for --with-libphobos-druntime-only... \" >&6; }\n+\n+# Check whether --with-libdruntime-only was given.\n+if test \"${with_libdruntime_only+set}\" = set; then :\n+  withval=$with_libdruntime_only;\n+else\n+  with_libdruntime_only=auto\n+fi\n+\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $with_libdruntime_only\" >&5\n+$as_echo \"$with_libdruntime_only\" >&6; }\n+\n+case \"$with_libdruntime_only\" in\n+  yes|no|auto) ;;\n+  *) as_fn_error $? \"Invalid argument for --with-libphobos-druntime-only\" \"$LINENO\" 5 ;;\n+esac\n+\n # See if supported.\n unset LIBPHOBOS_SUPPORTED\n+unset LIBDRUNTIME_ONLY\n { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for host support for libphobos\" >&5\n $as_echo_n \"checking for host support for libphobos... \" >&6; }\n . ${srcdir}/configure.tgt\n@@ -15274,6 +15298,22 @@ else\n fi\n \n \n+# Decide if only libdruntime should be built.\n+case $LIBDRUNTIME_ONLY:$with_libdruntime_only in\n+*:no)  only_libdruntime=no  ;;\n+*:yes) only_libdruntime=yes ;;\n+yes:*) only_libdruntime=yes ;;\n+*:*)   only_libdruntime=no  ;;\n+esac\n+ if test x$only_libdruntime = xyes; then\n+  ENABLE_LIBDRUNTIME_ONLY_TRUE=\n+  ENABLE_LIBDRUNTIME_ONLY_FALSE='#'\n+else\n+  ENABLE_LIBDRUNTIME_ONLY_TRUE='#'\n+  ENABLE_LIBDRUNTIME_ONLY_FALSE=\n+fi\n+\n+\n # Enable expensive internal checks\n # Check whether --enable-libphobos-checking was given.\n if test \"${enable_libphobos_checking+set}\" = set; then :\n@@ -15577,6 +15617,10 @@ if test -z \"${ENABLE_LIBPHOBOS_TRUE}\" && test -z \"${ENABLE_LIBPHOBOS_FALSE}\"; th\n   as_fn_error $? \"conditional \\\"ENABLE_LIBPHOBOS\\\" was never defined.\n Usually this means the macro was only invoked conditionally.\" \"$LINENO\" 5\n fi\n+if test -z \"${ENABLE_LIBDRUNTIME_ONLY_TRUE}\" && test -z \"${ENABLE_LIBDRUNTIME_ONLY_FALSE}\"; then\n+  as_fn_error $? \"conditional \\\"ENABLE_LIBDRUNTIME_ONLY\\\" was never defined.\n+Usually this means the macro was only invoked conditionally.\" \"$LINENO\" 5\n+fi\n \n : \"${CONFIG_STATUS=./config.status}\"\n ac_write_fail=0"}, {"sha": "8c89ebd23b08f7b0bef005b21ad513efc8f1abb4", "filename": "libphobos/configure.ac", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/261bd78d57d40a03f340cfe4fc78ff9717c9602d/libphobos%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/261bd78d57d40a03f340cfe4fc78ff9717c9602d/libphobos%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Fconfigure.ac?ref=261bd78d57d40a03f340cfe4fc78ff9717c9602d", "patch": "@@ -152,8 +152,21 @@ AC_ARG_ENABLE(libphobos,\n   [AS_HELP_STRING([--enable-libphobos], [Enable libphobos])])\n AC_MSG_RESULT($enable_libphobos)\n \n+AC_MSG_CHECKING([for --with-libphobos-druntime-only])\n+AC_ARG_WITH(libdruntime-only,\n+  AS_HELP_STRING([--with-libphobos-druntime-only={yes,no,auto}],\n+\t\t [build only the druntime library (default: auto)]),,\n+\t    [with_libdruntime_only=auto])\n+AC_MSG_RESULT($with_libdruntime_only)\n+\n+case \"$with_libdruntime_only\" in\n+  yes|no|auto) ;;\n+  *) AC_MSG_ERROR([Invalid argument for --with-libphobos-druntime-only]) ;;\n+esac\n+\n # See if supported.\n unset LIBPHOBOS_SUPPORTED\n+unset LIBDRUNTIME_ONLY\n AC_MSG_CHECKING([for host support for libphobos])\n . ${srcdir}/configure.tgt\n case ${host} in\n@@ -187,6 +200,15 @@ yes:*) use_libphobos=yes ;;\n esac\n AM_CONDITIONAL(ENABLE_LIBPHOBOS, test x$use_libphobos = xyes)\n \n+# Decide if only libdruntime should be built.\n+case $LIBDRUNTIME_ONLY:$with_libdruntime_only in\n+*:no)  only_libdruntime=no  ;;\n+*:yes) only_libdruntime=yes ;;\n+yes:*) only_libdruntime=yes ;;\n+*:*)   only_libdruntime=no  ;;\n+esac\n+AM_CONDITIONAL(ENABLE_LIBDRUNTIME_ONLY, test x$only_libdruntime = xyes)\n+\n # Enable expensive internal checks\n AC_ARG_ENABLE(libphobos-checking,\n [AS_HELP_STRING([[--enable-libphobos-checking[=LIST]]],"}, {"sha": "66082e36fad795ae3a6906bdbced3b9171e0f141", "filename": "libphobos/configure.tgt", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/261bd78d57d40a03f340cfe4fc78ff9717c9602d/libphobos%2Fconfigure.tgt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/261bd78d57d40a03f340cfe4fc78ff9717c9602d/libphobos%2Fconfigure.tgt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Fconfigure.tgt?ref=261bd78d57d40a03f340cfe4fc78ff9717c9602d", "patch": "@@ -22,6 +22,7 @@\n # Disable the libphobos or libdruntime components on untested or known\n # broken systems.  More targets shall be added after testing.\n LIBPHOBOS_SUPPORTED=no\n+LIBDRUNTIME_ONLY=auto\n case \"${target}\" in\n   aarch64*-*-linux*)\n \tLIBPHOBOS_SUPPORTED=yes"}, {"sha": "9fb416ecc32f4f0f5045ef3e737fdb79c40088a2", "filename": "libphobos/src/Makefile.am", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/261bd78d57d40a03f340cfe4fc78ff9717c9602d/libphobos%2Fsrc%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/261bd78d57d40a03f340cfe4fc78ff9717c9602d/libphobos%2Fsrc%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Fsrc%2FMakefile.am?ref=261bd78d57d40a03f340cfe4fc78ff9717c9602d", "patch": "@@ -70,6 +70,12 @@ install-data-local:\n # https://gist.github.com/jpf91/8744acebc9dcf1e9d1a35cdff20afbb2\n # Can't use wildcards here:\n # https://www.gnu.org/software/automake/manual/html_node/Wildcards.html\n+if ENABLE_LIBDRUNTIME_ONLY\n+\n+PHOBOS_DSOURCES =\n+\n+else\n+\n PHOBOS_DSOURCES = etc/c/curl.d etc/c/sqlite3.d etc/c/zlib.d \\\n \tstd/algorithm/comparison.d std/algorithm/internal.d \\\n \tstd/algorithm/iteration.d std/algorithm/mutation.d \\\n@@ -132,3 +138,5 @@ PHOBOS_DSOURCES = etc/c/curl.d etc/c/sqlite3.d etc/c/zlib.d \\\n \tstd/utf.d std/uuid.d std/variant.d std/windows/charset.d \\\n \tstd/windows/registry.d std/windows/syserror.d std/xml.d std/zip.d \\\n \tstd/zlib.d\n+\n+endif"}, {"sha": "e1b0588a690b35dc0b9ad338cf4ea72fedd59a38", "filename": "libphobos/src/Makefile.in", "status": "modified", "additions": 180, "deletions": 134, "changes": 314, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/261bd78d57d40a03f340cfe4fc78ff9717c9602d/libphobos%2Fsrc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/261bd78d57d40a03f340cfe4fc78ff9717c9602d/libphobos%2Fsrc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Fsrc%2FMakefile.in?ref=261bd78d57d40a03f340cfe4fc78ff9717c9602d", "patch": "@@ -145,77 +145,122 @@ am__installdirs = \"$(DESTDIR)$(toolexeclibdir)\" \\\n LTLIBRARIES = $(toolexeclib_LTLIBRARIES)\n am__DEPENDENCIES_1 =\n am__dirstamp = $(am__leading_dot)dirstamp\n-am__objects_1 = etc/c/curl.lo etc/c/sqlite3.lo etc/c/zlib.lo \\\n-\tstd/algorithm/comparison.lo std/algorithm/internal.lo \\\n-\tstd/algorithm/iteration.lo std/algorithm/mutation.lo \\\n-\tstd/algorithm/package.lo std/algorithm/searching.lo \\\n-\tstd/algorithm/setops.lo std/algorithm/sorting.lo std/array.lo \\\n-\tstd/ascii.lo std/base64.lo std/bigint.lo std/bitmanip.lo \\\n-\tstd/compiler.lo std/complex.lo std/concurrency.lo \\\n-\tstd/container/array.lo std/container/binaryheap.lo \\\n-\tstd/container/dlist.lo std/container/package.lo \\\n-\tstd/container/rbtree.lo std/container/slist.lo \\\n-\tstd/container/util.lo std/conv.lo std/csv.lo \\\n-\tstd/datetime/date.lo std/datetime/interval.lo \\\n-\tstd/datetime/package.lo std/datetime/stopwatch.lo \\\n-\tstd/datetime/systime.lo std/datetime/timezone.lo \\\n-\tstd/demangle.lo std/digest/crc.lo std/digest/digest.lo \\\n-\tstd/digest/hmac.lo std/digest/md.lo std/digest/murmurhash.lo \\\n-\tstd/digest/package.lo std/digest/ripemd.lo std/digest/sha.lo \\\n-\tstd/encoding.lo std/exception.lo \\\n-\tstd/experimental/allocator/building_blocks/affix_allocator.lo \\\n-\tstd/experimental/allocator/building_blocks/allocator_list.lo \\\n-\tstd/experimental/allocator/building_blocks/bitmapped_block.lo \\\n-\tstd/experimental/allocator/building_blocks/bucketizer.lo \\\n-\tstd/experimental/allocator/building_blocks/fallback_allocator.lo \\\n-\tstd/experimental/allocator/building_blocks/free_list.lo \\\n-\tstd/experimental/allocator/building_blocks/free_tree.lo \\\n-\tstd/experimental/allocator/building_blocks/kernighan_ritchie.lo \\\n-\tstd/experimental/allocator/building_blocks/null_allocator.lo \\\n-\tstd/experimental/allocator/building_blocks/package.lo \\\n-\tstd/experimental/allocator/building_blocks/quantizer.lo \\\n-\tstd/experimental/allocator/building_blocks/region.lo \\\n-\tstd/experimental/allocator/building_blocks/scoped_allocator.lo \\\n-\tstd/experimental/allocator/building_blocks/segregator.lo \\\n-\tstd/experimental/allocator/building_blocks/stats_collector.lo \\\n-\tstd/experimental/allocator/common.lo \\\n-\tstd/experimental/allocator/gc_allocator.lo \\\n-\tstd/experimental/allocator/mallocator.lo \\\n-\tstd/experimental/allocator/mmap_allocator.lo \\\n-\tstd/experimental/allocator/package.lo \\\n-\tstd/experimental/allocator/showcase.lo \\\n-\tstd/experimental/allocator/typed.lo \\\n-\tstd/experimental/checkedint.lo std/experimental/logger/core.lo \\\n-\tstd/experimental/logger/filelogger.lo \\\n-\tstd/experimental/logger/multilogger.lo \\\n-\tstd/experimental/logger/nulllogger.lo \\\n-\tstd/experimental/logger/package.lo \\\n-\tstd/experimental/typecons.lo std/file.lo std/format.lo \\\n-\tstd/functional.lo std/getopt.lo std/internal/cstring.lo \\\n-\tstd/internal/math/biguintcore.lo \\\n-\tstd/internal/math/biguintnoasm.lo \\\n-\tstd/internal/math/errorfunction.lo \\\n-\tstd/internal/math/gammafunction.lo std/internal/scopebuffer.lo \\\n-\tstd/internal/test/dummyrange.lo std/internal/test/range.lo \\\n-\tstd/internal/test/uda.lo std/internal/unicode_comp.lo \\\n-\tstd/internal/unicode_decomp.lo \\\n-\tstd/internal/unicode_grapheme.lo std/internal/unicode_norm.lo \\\n-\tstd/internal/unicode_tables.lo \\\n-\tstd/internal/windows/advapi32.lo std/json.lo std/math.lo \\\n-\tstd/mathspecial.lo std/meta.lo std/mmfile.lo std/net/curl.lo \\\n-\tstd/net/isemail.lo std/numeric.lo std/outbuffer.lo \\\n-\tstd/parallelism.lo std/path.lo std/process.lo std/random.lo \\\n-\tstd/range/interfaces.lo std/range/package.lo \\\n-\tstd/range/primitives.lo std/regex/internal/backtracking.lo \\\n-\tstd/regex/internal/generator.lo std/regex/internal/ir.lo \\\n-\tstd/regex/internal/kickstart.lo std/regex/internal/parser.lo \\\n-\tstd/regex/internal/tests.lo std/regex/internal/thompson.lo \\\n-\tstd/regex/package.lo std/signals.lo std/socket.lo \\\n-\tstd/stdint.lo std/stdio.lo std/string.lo std/system.lo \\\n-\tstd/traits.lo std/typecons.lo std/typetuple.lo std/uni.lo \\\n-\tstd/uri.lo std/utf.lo std/uuid.lo std/variant.lo \\\n-\tstd/windows/charset.lo std/windows/registry.lo \\\n-\tstd/windows/syserror.lo std/xml.lo std/zip.lo std/zlib.lo\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@am__objects_1 = etc/c/curl.lo \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tetc/c/sqlite3.lo etc/c/zlib.lo \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/algorithm/comparison.lo \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/algorithm/internal.lo \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/algorithm/iteration.lo \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/algorithm/mutation.lo \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/algorithm/package.lo \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/algorithm/searching.lo \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/algorithm/setops.lo \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/algorithm/sorting.lo \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/array.lo std/ascii.lo \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/base64.lo std/bigint.lo \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/bitmanip.lo std/compiler.lo \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/complex.lo \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/concurrency.lo \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/container/array.lo \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/container/binaryheap.lo \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/container/dlist.lo \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/container/package.lo \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/container/rbtree.lo \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/container/slist.lo \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/container/util.lo \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/conv.lo std/csv.lo \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/datetime/date.lo \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/datetime/interval.lo \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/datetime/package.lo \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/datetime/stopwatch.lo \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/datetime/systime.lo \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/datetime/timezone.lo \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/demangle.lo \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/digest/crc.lo \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/digest/digest.lo \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/digest/hmac.lo \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/digest/md.lo \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/digest/murmurhash.lo \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/digest/package.lo \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/digest/ripemd.lo \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/digest/sha.lo \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/encoding.lo \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/exception.lo \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/experimental/allocator/building_blocks/affix_allocator.lo \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/experimental/allocator/building_blocks/allocator_list.lo \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/experimental/allocator/building_blocks/bitmapped_block.lo \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/experimental/allocator/building_blocks/bucketizer.lo \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/experimental/allocator/building_blocks/fallback_allocator.lo \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/experimental/allocator/building_blocks/free_list.lo \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/experimental/allocator/building_blocks/free_tree.lo \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/experimental/allocator/building_blocks/kernighan_ritchie.lo \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/experimental/allocator/building_blocks/null_allocator.lo \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/experimental/allocator/building_blocks/package.lo \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/experimental/allocator/building_blocks/quantizer.lo \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/experimental/allocator/building_blocks/region.lo \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/experimental/allocator/building_blocks/scoped_allocator.lo \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/experimental/allocator/building_blocks/segregator.lo \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/experimental/allocator/building_blocks/stats_collector.lo \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/experimental/allocator/common.lo \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/experimental/allocator/gc_allocator.lo \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/experimental/allocator/mallocator.lo \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/experimental/allocator/mmap_allocator.lo \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/experimental/allocator/package.lo \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/experimental/allocator/showcase.lo \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/experimental/allocator/typed.lo \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/experimental/checkedint.lo \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/experimental/logger/core.lo \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/experimental/logger/filelogger.lo \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/experimental/logger/multilogger.lo \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/experimental/logger/nulllogger.lo \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/experimental/logger/package.lo \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/experimental/typecons.lo \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/file.lo std/format.lo \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/functional.lo std/getopt.lo \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/internal/cstring.lo \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/internal/math/biguintcore.lo \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/internal/math/biguintnoasm.lo \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/internal/math/errorfunction.lo \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/internal/math/gammafunction.lo \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/internal/scopebuffer.lo \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/internal/test/dummyrange.lo \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/internal/test/range.lo \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/internal/test/uda.lo \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/internal/unicode_comp.lo \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/internal/unicode_decomp.lo \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/internal/unicode_grapheme.lo \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/internal/unicode_norm.lo \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/internal/unicode_tables.lo \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/internal/windows/advapi32.lo \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/json.lo std/math.lo \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/mathspecial.lo std/meta.lo \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/mmfile.lo std/net/curl.lo \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/net/isemail.lo \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/numeric.lo std/outbuffer.lo \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/parallelism.lo std/path.lo \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/process.lo std/random.lo \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/range/interfaces.lo \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/range/package.lo \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/range/primitives.lo \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/regex/internal/backtracking.lo \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/regex/internal/generator.lo \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/regex/internal/ir.lo \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/regex/internal/kickstart.lo \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/regex/internal/parser.lo \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/regex/internal/tests.lo \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/regex/internal/thompson.lo \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/regex/package.lo \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/signals.lo std/socket.lo \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/stdint.lo std/stdio.lo \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/string.lo std/system.lo \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/traits.lo std/typecons.lo \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/typetuple.lo std/uni.lo \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/uri.lo std/utf.lo \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/uuid.lo std/variant.lo \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/windows/charset.lo \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/windows/registry.lo \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/windows/syserror.lo \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/xml.lo std/zip.lo \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/zlib.lo\n am__objects_2 = $(am__objects_1)\n am__objects_3 = $(am__objects_2)\n am_libgphobos_la_OBJECTS = $(am__objects_3)\n@@ -461,74 +506,75 @@ libgphobos_la_LINK = $(LIBTOOL) --tag=D $(libgphobos_la_LIBTOOLFLAGS) \\\n \t$(LIBTOOLFLAGS) --mode=link $(GDC) $(AM_CFLAGS) $(CFLAGS) \\\n \t$(libgphobos_la_LDFLAGS) $(LDFLAGS) -o $@\n \n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@PHOBOS_DSOURCES = etc/c/curl.d etc/c/sqlite3.d etc/c/zlib.d \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/algorithm/comparison.d std/algorithm/internal.d \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/algorithm/iteration.d std/algorithm/mutation.d \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/algorithm/package.d std/algorithm/searching.d \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/algorithm/setops.d std/algorithm/sorting.d std/array.d std/ascii.d \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/base64.d std/bigint.d std/bitmanip.d std/compiler.d std/complex.d \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/concurrency.d std/container/array.d std/container/binaryheap.d \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/container/dlist.d std/container/package.d std/container/rbtree.d \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/container/slist.d std/container/util.d std/conv.d std/csv.d \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/datetime/date.d std/datetime/interval.d std/datetime/package.d \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/datetime/stopwatch.d std/datetime/systime.d \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/datetime/timezone.d std/demangle.d std/digest/crc.d \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/digest/digest.d std/digest/hmac.d std/digest/md.d \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/digest/murmurhash.d std/digest/package.d std/digest/ripemd.d \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/digest/sha.d std/encoding.d std/exception.d \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/experimental/allocator/building_blocks/affix_allocator.d \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/experimental/allocator/building_blocks/allocator_list.d \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/experimental/allocator/building_blocks/bitmapped_block.d \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/experimental/allocator/building_blocks/bucketizer.d \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/experimental/allocator/building_blocks/fallback_allocator.d \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/experimental/allocator/building_blocks/free_list.d \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/experimental/allocator/building_blocks/free_tree.d \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/experimental/allocator/building_blocks/kernighan_ritchie.d \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/experimental/allocator/building_blocks/null_allocator.d \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/experimental/allocator/building_blocks/package.d \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/experimental/allocator/building_blocks/quantizer.d \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/experimental/allocator/building_blocks/region.d \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/experimental/allocator/building_blocks/scoped_allocator.d \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/experimental/allocator/building_blocks/segregator.d \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/experimental/allocator/building_blocks/stats_collector.d \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/experimental/allocator/common.d \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/experimental/allocator/gc_allocator.d \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/experimental/allocator/mallocator.d \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/experimental/allocator/mmap_allocator.d \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/experimental/allocator/package.d \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/experimental/allocator/showcase.d \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/experimental/allocator/typed.d std/experimental/checkedint.d \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/experimental/logger/core.d std/experimental/logger/filelogger.d \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/experimental/logger/multilogger.d \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/experimental/logger/nulllogger.d std/experimental/logger/package.d \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/experimental/typecons.d std/file.d std/format.d std/functional.d \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/getopt.d std/internal/cstring.d std/internal/math/biguintcore.d \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/internal/math/biguintnoasm.d std/internal/math/errorfunction.d \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/internal/math/gammafunction.d std/internal/scopebuffer.d \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/internal/test/dummyrange.d std/internal/test/range.d \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/internal/test/uda.d std/internal/unicode_comp.d \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/internal/unicode_decomp.d std/internal/unicode_grapheme.d \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/internal/unicode_norm.d std/internal/unicode_tables.d \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/internal/windows/advapi32.d std/json.d std/math.d \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/mathspecial.d std/meta.d std/mmfile.d std/net/curl.d \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/net/isemail.d std/numeric.d std/outbuffer.d std/parallelism.d \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/path.d std/process.d std/random.d std/range/interfaces.d \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/range/package.d std/range/primitives.d \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/regex/internal/backtracking.d std/regex/internal/generator.d \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/regex/internal/ir.d std/regex/internal/kickstart.d \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/regex/internal/parser.d std/regex/internal/tests.d \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/regex/internal/thompson.d std/regex/package.d std/signals.d \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/socket.d std/stdint.d std/stdio.d std/string.d std/system.d \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/traits.d std/typecons.d std/typetuple.d std/uni.d std/uri.d \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/utf.d std/uuid.d std/variant.d std/windows/charset.d \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/windows/registry.d std/windows/syserror.d std/xml.d std/zip.d \\\n+@ENABLE_LIBDRUNTIME_ONLY_FALSE@\tstd/zlib.d\n+\n \n # Source file definitions. Boring stuff, auto-generated with\n # https://gist.github.com/jpf91/8744acebc9dcf1e9d1a35cdff20afbb2\n # Can't use wildcards here:\n # https://www.gnu.org/software/automake/manual/html_node/Wildcards.html\n-PHOBOS_DSOURCES = etc/c/curl.d etc/c/sqlite3.d etc/c/zlib.d \\\n-\tstd/algorithm/comparison.d std/algorithm/internal.d \\\n-\tstd/algorithm/iteration.d std/algorithm/mutation.d \\\n-\tstd/algorithm/package.d std/algorithm/searching.d \\\n-\tstd/algorithm/setops.d std/algorithm/sorting.d std/array.d std/ascii.d \\\n-\tstd/base64.d std/bigint.d std/bitmanip.d std/compiler.d std/complex.d \\\n-\tstd/concurrency.d std/container/array.d std/container/binaryheap.d \\\n-\tstd/container/dlist.d std/container/package.d std/container/rbtree.d \\\n-\tstd/container/slist.d std/container/util.d std/conv.d std/csv.d \\\n-\tstd/datetime/date.d std/datetime/interval.d std/datetime/package.d \\\n-\tstd/datetime/stopwatch.d std/datetime/systime.d \\\n-\tstd/datetime/timezone.d std/demangle.d std/digest/crc.d \\\n-\tstd/digest/digest.d std/digest/hmac.d std/digest/md.d \\\n-\tstd/digest/murmurhash.d std/digest/package.d std/digest/ripemd.d \\\n-\tstd/digest/sha.d std/encoding.d std/exception.d \\\n-\tstd/experimental/allocator/building_blocks/affix_allocator.d \\\n-\tstd/experimental/allocator/building_blocks/allocator_list.d \\\n-\tstd/experimental/allocator/building_blocks/bitmapped_block.d \\\n-\tstd/experimental/allocator/building_blocks/bucketizer.d \\\n-\tstd/experimental/allocator/building_blocks/fallback_allocator.d \\\n-\tstd/experimental/allocator/building_blocks/free_list.d \\\n-\tstd/experimental/allocator/building_blocks/free_tree.d \\\n-\tstd/experimental/allocator/building_blocks/kernighan_ritchie.d \\\n-\tstd/experimental/allocator/building_blocks/null_allocator.d \\\n-\tstd/experimental/allocator/building_blocks/package.d \\\n-\tstd/experimental/allocator/building_blocks/quantizer.d \\\n-\tstd/experimental/allocator/building_blocks/region.d \\\n-\tstd/experimental/allocator/building_blocks/scoped_allocator.d \\\n-\tstd/experimental/allocator/building_blocks/segregator.d \\\n-\tstd/experimental/allocator/building_blocks/stats_collector.d \\\n-\tstd/experimental/allocator/common.d \\\n-\tstd/experimental/allocator/gc_allocator.d \\\n-\tstd/experimental/allocator/mallocator.d \\\n-\tstd/experimental/allocator/mmap_allocator.d \\\n-\tstd/experimental/allocator/package.d \\\n-\tstd/experimental/allocator/showcase.d \\\n-\tstd/experimental/allocator/typed.d std/experimental/checkedint.d \\\n-\tstd/experimental/logger/core.d std/experimental/logger/filelogger.d \\\n-\tstd/experimental/logger/multilogger.d \\\n-\tstd/experimental/logger/nulllogger.d std/experimental/logger/package.d \\\n-\tstd/experimental/typecons.d std/file.d std/format.d std/functional.d \\\n-\tstd/getopt.d std/internal/cstring.d std/internal/math/biguintcore.d \\\n-\tstd/internal/math/biguintnoasm.d std/internal/math/errorfunction.d \\\n-\tstd/internal/math/gammafunction.d std/internal/scopebuffer.d \\\n-\tstd/internal/test/dummyrange.d std/internal/test/range.d \\\n-\tstd/internal/test/uda.d std/internal/unicode_comp.d \\\n-\tstd/internal/unicode_decomp.d std/internal/unicode_grapheme.d \\\n-\tstd/internal/unicode_norm.d std/internal/unicode_tables.d \\\n-\tstd/internal/windows/advapi32.d std/json.d std/math.d \\\n-\tstd/mathspecial.d std/meta.d std/mmfile.d std/net/curl.d \\\n-\tstd/net/isemail.d std/numeric.d std/outbuffer.d std/parallelism.d \\\n-\tstd/path.d std/process.d std/random.d std/range/interfaces.d \\\n-\tstd/range/package.d std/range/primitives.d \\\n-\tstd/regex/internal/backtracking.d std/regex/internal/generator.d \\\n-\tstd/regex/internal/ir.d std/regex/internal/kickstart.d \\\n-\tstd/regex/internal/parser.d std/regex/internal/tests.d \\\n-\tstd/regex/internal/thompson.d std/regex/package.d std/signals.d \\\n-\tstd/socket.d std/stdint.d std/stdio.d std/string.d std/system.d \\\n-\tstd/traits.d std/typecons.d std/typetuple.d std/uni.d std/uri.d \\\n-\tstd/utf.d std/uuid.d std/variant.d std/windows/charset.d \\\n-\tstd/windows/registry.d std/windows/syserror.d std/xml.d std/zip.d \\\n-\tstd/zlib.d\n-\n+@ENABLE_LIBDRUNTIME_ONLY_TRUE@PHOBOS_DSOURCES = \n all: all-am\n \n .SUFFIXES:"}, {"sha": "43e42810434a317e02aee1ee15b25d70cac1bb03", "filename": "libphobos/testsuite/testsuite_flags.in", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/261bd78d57d40a03f340cfe4fc78ff9717c9602d/libphobos%2Ftestsuite%2Ftestsuite_flags.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/261bd78d57d40a03f340cfe4fc78ff9717c9602d/libphobos%2Ftestsuite%2Ftestsuite_flags.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Ftestsuite%2Ftestsuite_flags.in?ref=261bd78d57d40a03f340cfe4fc78ff9717c9602d", "patch": "@@ -35,8 +35,11 @@ case ${query} in\n       GDCPATHS_default=\"-nostdinc\"\n       GDCPATHS_config=\"-B${BUILD_DIR}/src\n                        -I${BUILD_DIR}/libdruntime\n-                       -I${SRC_DIR}/libdruntime\n-                       -I${SRC_DIR}/src\"\n+                       -I${SRC_DIR}/libdruntime\"\n+      # Include phobos in search path if compiling in library.\n+      if [ \"x@ENABLE_LIBDRUNTIME_ONLY_FALSE@\" = \"x\" ]; then\n+         GDCPATHS_config=\"${GDCPATHS_config} -I${SRC_DIR}/src\"\n+      fi\n       echo ${GDCPATHS_default} ${GDCPATHS_config}\n       ;;\n     --gdcldflags)"}]}