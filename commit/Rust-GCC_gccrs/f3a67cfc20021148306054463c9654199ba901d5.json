{"sha": "f3a67cfc20021148306054463c9654199ba901d5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjNhNjdjZmMyMDAyMTE0ODMwNjA1NDQ2M2M5NjU0MTk5YmE5MDFkNQ==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2009-04-22T10:11:00Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-04-22T10:11:00Z"}, "message": "lib-load.ads, [...] (Make_Child_Decl_Unit): New subprogram...\n\n2009-04-22  Ed Schonberg  <schonberg@adacore.com>\n\n\t* lib-load.ads, lib-load.adb (Make_Child_Decl_Unit): New subprogram, to\n\tcreate a unit table entry for the subprogram declaration created for a\n\tchild suprogram body that has no separate specification.\n\n\t* sem_ch10.adb (Analyze_Compilation_Unit): For a child unit that is a\n\tsubprogram body, call Make_Child_Decl_Unit.\n\n\t* lib.adb (Get_Cunit_Unit_Number): Verify that an entry not yet in the\n\ttable can only be the created specification of a child subprogram body\n\tthat is the main unit, which has not been entered in the table yet.\n\n\t* errout.adb  (Output_Messages): Ignore created specification of a\n\tchild subprogram body to prevent repeated listing of error messages.\n\n\t* gnat1drv.adb (gnat1drv): The generated specification for a child\n\tsubprogram body does not generate code.\n\nFrom-SVN: r146559", "tree": {"sha": "efe68ba58667e8b31a2bb078cde6c3002d8fe676", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/efe68ba58667e8b31a2bb078cde6c3002d8fe676"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f3a67cfc20021148306054463c9654199ba901d5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f3a67cfc20021148306054463c9654199ba901d5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f3a67cfc20021148306054463c9654199ba901d5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f3a67cfc20021148306054463c9654199ba901d5/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1ef4d0a80a0f685d97c032717c90032f9793f3af", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ef4d0a80a0f685d97c032717c90032f9793f3af", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1ef4d0a80a0f685d97c032717c90032f9793f3af"}], "stats": {"total": 98, "additions": 86, "deletions": 12}, "files": [{"sha": "064083ed7205bd0a33297e320ea96a87d91bf2a5", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3a67cfc20021148306054463c9654199ba901d5/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3a67cfc20021148306054463c9654199ba901d5/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=f3a67cfc20021148306054463c9654199ba901d5", "patch": "@@ -1,3 +1,22 @@\n+2009-04-22  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* lib-load.ads, lib-load.adb (Make_Child_Decl_Unit): New subprogram, to\n+\tcreate a unit table entry for the subprogram declaration created for a\n+\tchild suprogram body that has no separate specification.\n+\n+\t* sem_ch10.adb (Analyze_Compilation_Unit): For a child unit that is a\n+\tsubprogram body, call Make_Child_Decl_Unit.\n+\n+\t* lib.adb (Get_Cunit_Unit_Number): Verify that an entry not yet in the\n+\ttable can only be the created specification of a child subprogram body\n+\tthat is the main unit, which has not been entered in the table yet.\n+\n+\t* errout.adb  (Output_Messages): Ignore created specification of a\n+\tchild subprogram body to prevent repeated listing of error messages.\n+\n+\t* gnat1drv.adb (gnat1drv): The generated specification for a child\n+\tsubprogram body does not generate code.\n+\n 2009-04-22  Arnaud Charlet  <charlet@adacore.com>\n \n \t* s-bitops.adb, s-bitops.ads (Raise_Error): Do not use Ada 05 syntax,"}, {"sha": "76d465a05f3e795ebc84dbc057e30ca1e66167d3", "filename": "gcc/ada/errout.adb", "status": "modified", "additions": 13, "deletions": 3, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3a67cfc20021148306054463c9654199ba901d5/gcc%2Fada%2Ferrout.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3a67cfc20021148306054463c9654199ba901d5/gcc%2Fada%2Ferrout.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferrout.adb?ref=f3a67cfc20021148306054463c9654199ba901d5", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2008, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -1681,11 +1681,21 @@ package body Errout is\n \n          --  First list extended main source file units with errors\n \n-         --  Note: if debug flag d.m is set, only the main source is listed\n-\n          for U in Main_Unit .. Last_Unit loop\n             if In_Extended_Main_Source_Unit (Cunit_Entity (U))\n+\n+              --  If debug flag d.m is set, only the main source is listed\n+\n               and then (U = Main_Unit or else not Debug_Flag_Dot_M)\n+\n+              --  If the unit of the entity does not come from source, it is\n+              --  an implicit subprogram declaration for a child subprogram.\n+              --  Do not emit errors for it, they are listed with the body.\n+\n+              and then\n+                (No (Cunit_Entity (U))\n+                   or else Comes_From_Source (Cunit_Entity (U))\n+                   or else not Is_Subprogram (Cunit_Entity (U)))\n             then\n                declare\n                   Sfile : constant Source_File_Index := Source_Index (U);"}, {"sha": "3ae1d4884283b46bdced5872dca96d5bf034c15b", "filename": "gcc/ada/gnat1drv.adb", "status": "modified", "additions": 12, "deletions": 5, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3a67cfc20021148306054463c9654199ba901d5/gcc%2Fada%2Fgnat1drv.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3a67cfc20021148306054463c9654199ba901d5/gcc%2Fada%2Fgnat1drv.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat1drv.adb?ref=f3a67cfc20021148306054463c9654199ba901d5", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2008, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -510,14 +510,21 @@ begin\n \n       Set_Generate_Code (Main_Unit);\n \n-      --  If we have a corresponding spec, then we need object\n-      --  code for the spec unit as well\n+      --  If we have a corresponding spec, and it comes from source\n+      --  or it is not a generated spec for a child subprogram body,\n+      --  then we need object code for the spec unit as well\n \n       if Nkind (Unit (Main_Unit_Node)) in N_Unit_Body\n         and then not Acts_As_Spec (Main_Unit_Node)\n       then\n-         Set_Generate_Code\n-           (Get_Cunit_Unit_Number (Library_Unit (Main_Unit_Node)));\n+         if Nkind (Main_Unit_Node) = N_Subprogram_Body\n+           and then not Comes_From_Source (Library_Unit (Main_Unit_Node))\n+         then\n+            null;\n+         else\n+            Set_Generate_Code\n+              (Get_Cunit_Unit_Number (Library_Unit (Main_Unit_Node)));\n+         end if;\n       end if;\n \n       --  Case of no code required to be generated, exit indicating no error"}, {"sha": "dcd4e12773e46100c5f71e78c16a1bb1d21fc255", "filename": "gcc/ada/lib-load.adb", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3a67cfc20021148306054463c9654199ba901d5/gcc%2Fada%2Flib-load.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3a67cfc20021148306054463c9654199ba901d5/gcc%2Fada%2Flib-load.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-load.adb?ref=f3a67cfc20021148306054463c9654199ba901d5", "patch": "@@ -753,6 +753,30 @@ package body Lib.Load is\n       end if;\n    end Load_Unit;\n \n+   --------------------------\n+   -- Make_Child_Decl_Unit --\n+   --------------------------\n+\n+   procedure Make_Child_Decl_Unit (N : Node_Id) is\n+      Unit_Decl : constant Node_Id := Library_Unit (N);\n+\n+   begin\n+      Units.Increment_Last;\n+      Units.Table (Units.Last) := Units.Table (Get_Cunit_Unit_Number (N));\n+      Units.Table (Units.Last).Unit_Name :=\n+        Get_Spec_Name (Unit_Name (Get_Cunit_Unit_Number (N)));\n+      Units.Table (Units.Last).Cunit := Unit_Decl;\n+      Units.Table (Units.Last).Cunit_Entity  :=\n+        Defining_Identifier\n+          (Defining_Unit_Name (Specification (Unit (Unit_Decl))));\n+\n+      --  The library unit created for of a child subprogram unit plays no\n+      --  role in code generation and binding, so label it accordingly.\n+\n+      Units.Table (Units.Last).Generate_Code := False;\n+      Set_Has_No_Elaboration_Code (Unit_Decl);\n+   end Make_Child_Decl_Unit;\n+\n    ------------------------\n    -- Make_Instance_Unit --\n    ------------------------"}, {"sha": "97abc71473afa3e84ded3be338f12002713f8190", "filename": "gcc/ada/lib-load.ads", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3a67cfc20021148306054463c9654199ba901d5/gcc%2Fada%2Flib-load.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3a67cfc20021148306054463c9654199ba901d5/gcc%2Fada%2Flib-load.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-load.ads?ref=f3a67cfc20021148306054463c9654199ba901d5", "patch": "@@ -169,6 +169,12 @@ package Lib.Load is\n    --  creates a dummy package unit so that compilation can continue without\n    --  blowing up when the missing unit is referenced.\n \n+   procedure Make_Child_Decl_Unit (N : Node_Id);\n+   --  For a child subprogram body without a spec, we create a subprogram\n+   --  declaration in order to attach the required parent link. We create\n+   --  a Units_Table entry for this declaration, in order to maintain a\n+   --  one-to-one correspondence between compilation units and table entries.\n+\n    procedure Make_Instance_Unit (N : Node_Id; In_Main : Boolean);\n    --  When a compilation unit is an instantiation, it contains both the\n    --  declaration and the body of the instance, each of which can have its"}, {"sha": "a7c4128e0d45c35a6cab09f9adabdcd0d1b00fe8", "filename": "gcc/ada/lib.adb", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3a67cfc20021148306054463c9654199ba901d5/gcc%2Fada%2Flib.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3a67cfc20021148306054463c9654199ba901d5/gcc%2Fada%2Flib.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib.adb?ref=f3a67cfc20021148306054463c9654199ba901d5", "patch": "@@ -602,10 +602,14 @@ package body Lib is\n          end if;\n       end loop;\n \n-      --  If not in the table, must be the main source unit, and we just\n-      --  have not got it put into the table yet.\n+      --  If not in the table, must be a spec created for a main unit that is a\n+      --  child subprogram body which we have not inserted into the table yet.\n \n-      return Main_Unit;\n+      if N /= Library_Unit (Cunit (Main_Unit)) then\n+         raise Program_Error;\n+      else\n+         return Main_Unit;\n+      end if;\n    end Get_Cunit_Unit_Number;\n \n    ---------------------"}, {"sha": "82b221f1a21c2b2ea50340a81c4c23206fa48089", "filename": "gcc/ada/sem_ch10.adb", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3a67cfc20021148306054463c9654199ba901d5/gcc%2Fada%2Fsem_ch10.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3a67cfc20021148306054463c9654199ba901d5/gcc%2Fada%2Fsem_ch10.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch10.adb?ref=f3a67cfc20021148306054463c9654199ba901d5", "patch": "@@ -731,7 +731,10 @@ package body Sem_Ch10 is\n                   --  it, and this must be indicated explicitly. We also mark\n                   --  the body entity as a child unit now, to prevent a\n                   --  cascaded error if the spec entity cannot be entered\n-                  --  in its scope.\n+                  --  in its scope. Finally we create a Units table entry for\n+                  --  the subprogram declaration, to maintain a one-to-one\n+                  --  correspondence with compilation unit nodes. This is\n+                  --  critical for the tree traversals performed by Inspector.\n \n                   declare\n                      Loc : constant Source_Ptr := Sloc (N);\n@@ -753,6 +756,7 @@ package body Sem_Ch10 is\n \n                      Set_Library_Unit (N, Lib_Unit);\n                      Set_Parent_Spec (Unit (Lib_Unit), Cunit (Unum));\n+                     Make_Child_Decl_Unit (N);\n                      Semantics (Lib_Unit);\n \n                      --  Now that a separate declaration exists, the body"}]}