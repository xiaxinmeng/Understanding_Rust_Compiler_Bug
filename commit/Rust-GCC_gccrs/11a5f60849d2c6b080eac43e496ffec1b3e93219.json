{"sha": "11a5f60849d2c6b080eac43e496ffec1b3e93219", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTFhNWY2MDg0OWQyYzZiMDgwZWFjNDNlNDk2ZmZlYzFiM2U5MzIxOQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2006-03-13T21:44:04Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2006-03-13T21:44:04Z"}, "message": "trans-openmp.c (gfc_trans_omp_variable): Handle references to parent result.\n\n\t* trans-openmp.c (gfc_trans_omp_variable): Handle references\n\tto parent result.\n\t* trans-expr.c (gfc_conv_variable): Remove useless setting\n\tof parent_flag, formatting.\n\n\t* testsuite/libgomp.fortran/retval2.f90: New test.\n\nFrom-SVN: r112026", "tree": {"sha": "a57d6f733c78bc82586aadfe97600fb307eae75f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a57d6f733c78bc82586aadfe97600fb307eae75f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/11a5f60849d2c6b080eac43e496ffec1b3e93219", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11a5f60849d2c6b080eac43e496ffec1b3e93219", "html_url": "https://github.com/Rust-GCC/gccrs/commit/11a5f60849d2c6b080eac43e496ffec1b3e93219", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11a5f60849d2c6b080eac43e496ffec1b3e93219/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4b8ae4dbb7b517474580c4e7a6f15fb4c8bb3e8d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b8ae4dbb7b517474580c4e7a6f15fb4c8bb3e8d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4b8ae4dbb7b517474580c4e7a6f15fb4c8bb3e8d"}], "stats": {"total": 109, "additions": 79, "deletions": 30}, "files": [{"sha": "b1c5864f6d05f9a984593f4ce61c3c81dcc06d94", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11a5f60849d2c6b080eac43e496ffec1b3e93219/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11a5f60849d2c6b080eac43e496ffec1b3e93219/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=11a5f60849d2c6b080eac43e496ffec1b3e93219", "patch": "@@ -1,5 +1,10 @@\n 2006-03-13  Jakub Jelinek  <jakub@redhat.com>\n \n+\t* trans-openmp.c (gfc_trans_omp_variable): Handle references\n+\tto parent result.\n+\t* trans-expr.c (gfc_conv_variable): Remove useless setting\n+\tof parent_flag, formatting.\n+\n \t* trans-decl.c (gfc_get_fake_result_decl): Re-add setting of\n \tGFC_DECL_RESULT flag.\n "}, {"sha": "783583caac87276bb3abf29500e2c5936c7bd505", "filename": "gcc/fortran/trans-expr.c", "status": "modified", "additions": 11, "deletions": 14, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11a5f60849d2c6b080eac43e496ffec1b3e93219/gcc%2Ffortran%2Ftrans-expr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11a5f60849d2c6b080eac43e496ffec1b3e93219/gcc%2Ffortran%2Ftrans-expr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-expr.c?ref=11a5f60849d2c6b080eac43e496ffec1b3e93219", "patch": "@@ -324,34 +324,31 @@ gfc_conv_variable (gfc_se * se, gfc_expr * expr)\n \n       /* Deal with references to a parent results or entries by storing\n \t the current_function_decl and moving to the parent_decl.  */\n-      parent_flag = 0;\n-\n       return_value = sym->attr.function && sym->result == sym;\n       alternate_entry = sym->attr.function && sym->attr.entry\n-\t\t\t  && sym->result == sym;\n+\t\t\t&& sym->result == sym;\n       entry_master = sym->attr.result\n-\t\t\t&& sym->ns->proc_name->attr.entry_master\n-\t\t\t&& !gfc_return_by_reference (sym->ns->proc_name);\n+\t\t     && sym->ns->proc_name->attr.entry_master\n+\t\t     && !gfc_return_by_reference (sym->ns->proc_name);\n       parent_decl = DECL_CONTEXT (current_function_decl);\n \n       if ((se->expr == parent_decl && return_value)\n-\t    || (sym->ns  && sym->ns->proc_name\n-\t\t  && sym->ns->proc_name->backend_decl == parent_decl\n-\t\t  && (alternate_entry || entry_master)))\n+\t   || (sym->ns && sym->ns->proc_name\n+\t       && sym->ns->proc_name->backend_decl == parent_decl\n+\t       && (alternate_entry || entry_master)))\n \tparent_flag = 1;\n       else\n \tparent_flag = 0;\n \n       /* Special case for assigning the return value of a function.\n \t Self recursive functions must have an explicit return value.  */\n-      if (sym->attr.function && sym->result == sym\n-\t    && (se->expr == current_function_decl || parent_flag))\n+      if (return_value && (se->expr == current_function_decl || parent_flag))\n \tse_expr = gfc_get_fake_result_decl (sym, parent_flag);\n \n       /* Similarly for alternate entry points.  */\n       else if (alternate_entry \n-\t\t && (sym->ns->proc_name->backend_decl == current_function_decl\n-\t\t        || parent_flag))\n+\t       && (sym->ns->proc_name->backend_decl == current_function_decl\n+\t\t   || parent_flag))\n \t{\n \t  gfc_entry_list *el = NULL;\n \n@@ -364,8 +361,8 @@ gfc_conv_variable (gfc_se * se, gfc_expr * expr)\n \t}\n \n       else if (entry_master\n-\t\t && (sym->ns->proc_name->backend_decl == current_function_decl\n-\t\t\t|| parent_flag))\n+\t       && (sym->ns->proc_name->backend_decl == current_function_decl\n+\t\t   || parent_flag))\n \tse_expr = gfc_get_fake_result_decl (sym, parent_flag);\n \n       if (se_expr)"}, {"sha": "56d8829693525fd57b9dce7c33a6f89280b6cdd5", "filename": "gcc/fortran/trans-openmp.c", "status": "modified", "additions": 32, "deletions": 16, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11a5f60849d2c6b080eac43e496ffec1b3e93219/gcc%2Ffortran%2Ftrans-openmp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11a5f60849d2c6b080eac43e496ffec1b3e93219/gcc%2Ffortran%2Ftrans-openmp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-openmp.c?ref=11a5f60849d2c6b080eac43e496ffec1b3e93219", "patch": "@@ -182,40 +182,56 @@ gfc_trans_add_clause (tree node, tree tail)\n   return node;\n }\n \n-/* TODO make references to parent function results, as done in\n-   gfc_conv_variable.  */\n-\n static tree\n gfc_trans_omp_variable (gfc_symbol *sym)\n {\n   tree t = gfc_get_symbol_decl (sym);\n+  tree parent_decl;\n+  int parent_flag;\n+  bool return_value;\n+  bool alternate_entry;\n+  bool entry_master;\n+\n+  return_value = sym->attr.function && sym->result == sym;\n+  alternate_entry = sym->attr.function && sym->attr.entry\n+\t\t    && sym->result == sym;\n+  entry_master = sym->attr.result\n+\t\t && sym->ns->proc_name->attr.entry_master\n+\t\t && !gfc_return_by_reference (sym->ns->proc_name);\n+  parent_decl = DECL_CONTEXT (current_function_decl);\n+\n+  if ((t == parent_decl && return_value)\n+       || (sym->ns && sym->ns->proc_name\n+\t   && sym->ns->proc_name->backend_decl == parent_decl\n+\t   && (alternate_entry || entry_master)))\n+    parent_flag = 1;\n+  else\n+    parent_flag = 0;\n \n   /* Special case for assigning the return value of a function.\n      Self recursive functions must have an explicit return value.  */\n-  if (t == current_function_decl && sym->attr.function\n-      && (sym->result == sym))\n-    t = gfc_get_fake_result_decl (sym, 0);\n+  if (return_value && (t == current_function_decl || parent_flag))\n+    t = gfc_get_fake_result_decl (sym, parent_flag);\n \n   /* Similarly for alternate entry points.  */\n-  else if (sym->attr.function && sym->attr.entry\n-\t   && (sym->result == sym)\n-\t   && sym->ns->proc_name->backend_decl == current_function_decl)\n+  else if (alternate_entry\n+\t   && (sym->ns->proc_name->backend_decl == current_function_decl\n+\t       || parent_flag))\n     {\n       gfc_entry_list *el = NULL;\n \n       for (el = sym->ns->entries; el; el = el->next)\n \tif (sym == el->sym)\n \t  {\n-\t    t = gfc_get_fake_result_decl (sym, 0);\n+\t    t = gfc_get_fake_result_decl (sym, parent_flag);\n \t    break;\n \t  }\n     }\n \n-  else if (sym->attr.result\n-\t   && sym->ns->proc_name->backend_decl == current_function_decl\n-\t   && sym->ns->proc_name->attr.entry_master\n-\t   && !gfc_return_by_reference (sym->ns->proc_name))\n-    t = gfc_get_fake_result_decl (sym, 0);\n+  else if (entry_master\n+\t   && (sym->ns->proc_name->backend_decl == current_function_decl\n+\t       || parent_flag))\n+    t = gfc_get_fake_result_decl (sym, parent_flag);\n \n   return t;\n }\n@@ -408,7 +424,7 @@ gfc_trans_omp_array_reduction (tree c, gfc_symbol *sym, locus where)\n \n static tree\n gfc_trans_omp_reduction_list (gfc_namelist *namelist, tree list, \n-                              enum tree_code reduction_code, locus where)\n+\t\t\t      enum tree_code reduction_code, locus where)\n {\n   for (; namelist != NULL; namelist = namelist->next)\n     if (namelist->sym->attr.referenced)"}, {"sha": "f93bfa56371300276e867a9a26f4490b9453661d", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11a5f60849d2c6b080eac43e496ffec1b3e93219/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11a5f60849d2c6b080eac43e496ffec1b3e93219/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=11a5f60849d2c6b080eac43e496ffec1b3e93219", "patch": "@@ -1,3 +1,7 @@\n+2006-03-13  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* testsuite/libgomp.fortran/retval2.f90: New test.\n+\n 2006-03-09  Diego Novillo  <dnovillo@redhat.com>\n \n \t* testsuite/libgomp.c++: New directory."}, {"sha": "92da15f58f1b0cdf861c33ea5b3fc700ebb851c6", "filename": "libgomp/testsuite/libgomp.fortran/retval2.f90", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11a5f60849d2c6b080eac43e496ffec1b3e93219/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fretval2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11a5f60849d2c6b080eac43e496ffec1b3e93219/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fretval2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fretval2.f90?ref=11a5f60849d2c6b080eac43e496ffec1b3e93219", "patch": "@@ -0,0 +1,27 @@\n+! { dg-do run }\n+\n+function f1 ()\n+  real :: f1\n+  f1 = 6.5\n+  call sub1\n+contains\n+  subroutine sub1\n+    use omp_lib\n+    logical :: l\n+    l = .false.\n+!$omp parallel firstprivate (f1) num_threads (2) reduction (.or.:l)\n+    l = f1 .ne. 6.5\n+    if (omp_get_thread_num () .eq. 0) f1 = 8.5\n+    if (omp_get_thread_num () .eq. 1) f1 = 14.5\n+!$omp barrier\n+    l = l .or. (omp_get_thread_num () .eq. 0 .and. f1 .ne. 8.5)\n+    l = l .or. (omp_get_thread_num () .eq. 1 .and. f1 .ne. 14.5)\n+!$omp end parallel\n+    if (l) call abort\n+    f1 = -2.5\n+  end subroutine sub1\n+end function f1\n+\n+  real :: f1\n+  if (f1 () .ne. -2.5) call abort\n+end"}]}