{"sha": "f986735ac51029172a62e9e705a658cd0ee241e8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Zjk4NjczNWFjNTEwMjkxNzJhNjJlOWU3MDVhNjU4Y2QwZWUyNDFlOA==", "commit": {"author": {"name": "Pekka J\u00e4\u00e4skel\u00e4inen", "email": "pekka.jaaskelainen@parmance.com", "date": "2018-05-04T16:47:34Z"}, "committer": {"name": "Pekka J\u00e4\u00e4skel\u00e4inen", "email": "visit0r@gcc.gnu.org", "date": "2018-05-04T16:47:34Z"}, "message": "[BRIGFE] The modulo in ID computation should not be needed.\n\nThe case where a dim is greater than the grid size doesn't seem\nto be mentioned in the specs nor tested by PRM test suite.\n\nFrom-SVN: r259944", "tree": {"sha": "84a491a892e61aa0e2eaac3d3328b9837a8d4c7b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/84a491a892e61aa0e2eaac3d3328b9837a8d4c7b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f986735ac51029172a62e9e705a658cd0ee241e8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f986735ac51029172a62e9e705a658cd0ee241e8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f986735ac51029172a62e9e705a658cd0ee241e8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f986735ac51029172a62e9e705a658cd0ee241e8/comments", "author": {"login": "pjaaskel", "id": 1652632, "node_id": "MDQ6VXNlcjE2NTI2MzI=", "avatar_url": "https://avatars.githubusercontent.com/u/1652632?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pjaaskel", "html_url": "https://github.com/pjaaskel", "followers_url": "https://api.github.com/users/pjaaskel/followers", "following_url": "https://api.github.com/users/pjaaskel/following{/other_user}", "gists_url": "https://api.github.com/users/pjaaskel/gists{/gist_id}", "starred_url": "https://api.github.com/users/pjaaskel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pjaaskel/subscriptions", "organizations_url": "https://api.github.com/users/pjaaskel/orgs", "repos_url": "https://api.github.com/users/pjaaskel/repos", "events_url": "https://api.github.com/users/pjaaskel/events{/privacy}", "received_events_url": "https://api.github.com/users/pjaaskel/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "637f3cdec3168c4acf42b067cf511e0aecfcfcae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/637f3cdec3168c4acf42b067cf511e0aecfcfcae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/637f3cdec3168c4acf42b067cf511e0aecfcfcae"}], "stats": {"total": 15, "additions": 6, "deletions": 9}, "files": [{"sha": "c68c8dd4757c4f0bf0dc60a149e514b7db3c7b3d", "filename": "gcc/brig/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f986735ac51029172a62e9e705a658cd0ee241e8/gcc%2Fbrig%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f986735ac51029172a62e9e705a658cd0ee241e8/gcc%2Fbrig%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbrig%2FChangeLog?ref=f986735ac51029172a62e9e705a658cd0ee241e8", "patch": "@@ -1,3 +1,8 @@\n+2018-05-04  Pekka J\u00e4\u00e4skel\u00e4inen  <pekka.jaaskelainen@parmance.com>\n+\n+\t* brig/brigfrontend/brig-code-entry-handler.cc: The modulo in\n+\tID computation should not be needed.\n+\n 2018-05-04  Pekka J\u00e4\u00e4skel\u00e4inen  <pekka.jaaskelainen@parmance.com>\n \n \t* brig/brig-lang.c: Add support for whole program"}, {"sha": "36a8deb403d1a84168b78afd28c04a53d1c22c2e", "filename": "gcc/brig/brigfrontend/brig-code-entry-handler.cc", "status": "modified", "additions": 1, "deletions": 9, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f986735ac51029172a62e9e705a658cd0ee241e8/gcc%2Fbrig%2Fbrigfrontend%2Fbrig-code-entry-handler.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f986735ac51029172a62e9e705a658cd0ee241e8/gcc%2Fbrig%2Fbrigfrontend%2Fbrig-code-entry-handler.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbrig%2Fbrigfrontend%2Fbrig-code-entry-handler.cc?ref=f986735ac51029172a62e9e705a658cd0ee241e8", "patch": "@@ -1048,23 +1048,15 @@ brig_code_entry_handler::expand_builtin (BrigOpcode16_t brig_opcode,\n       tree local_id_var = m_parent.m_cf->m_local_id_vars[dim];\n       tree wg_id_var = m_parent.m_cf->m_wg_id_vars[dim];\n       tree wg_size_var = m_parent.m_cf->m_wg_size_vars[dim];\n-      tree grid_size_var = m_parent.m_cf->m_grid_size_vars[dim];\n \n       tree wg_id_x_wg_size = build2 (MULT_EXPR, uint32_type_node,\n \t\t\t\t     convert (uint32_type_node, wg_id_var),\n \t\t\t\t     convert (uint32_type_node, wg_size_var));\n       tree sum\n \t= build2 (PLUS_EXPR, uint32_type_node, wg_id_x_wg_size, local_id_var);\n \n-      /* We need a modulo here because of work-groups which have dimensions\n-\t larger than the grid size :( TO CHECK: is this really allowed in the\n-\t specs?  */\n-      tree modulo\n-\t= build2 (TRUNC_MOD_EXPR, uint32_type_node, sum, grid_size_var);\n-\n       return add_temp_var (std::string (\"workitemabsid_\")\n-\t\t\t     + (char) ((int) 'x' + dim),\n-\t\t\t   modulo);\n+\t\t\t   + (char) ((int) 'x' + dim), sum);\n     }\n   else if (brig_opcode == BRIG_OPCODE_WORKITEMFLATID)\n     {"}]}