{"sha": "e1775b33f51ecff1824554750d249bedf380dd27", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTE3NzViMzNmNTFlY2ZmMTgyNDU1NDc1MGQyNDliZWRmMzgwZGQyNw==", "commit": {"author": {"name": "Bruce Korb", "email": "bkorb@gnu.org", "date": "2013-12-08T21:55:46Z"}, "committer": {"name": "Bruce Korb", "email": "korbb@gcc.gnu.org", "date": "2013-12-08T21:55:46Z"}, "message": "fenv.h on Ubuntu\n\nplus fix the ordering of the patches:\n\n* inclhack.def: many of the headers found under \"bits/\" are\n  often stashed under architecture directories.  Apply fixes\n  to those, too.  Also, re-ordered misordered fixes.\n* tests/base/linux/vt.h: 80 columns in .def file limitation\n* tests/base/iso/math_c99.h: adjust ordering\n* tests/base/rtldef/string.h: likewise\n* tests/base/bits/fenv.h: likewise\n* tests/base/pthread.h: likewise\n\nFrom-SVN: r205793", "tree": {"sha": "eae0ea3a2fb681b6c1e79c3d180d330e71d68eb8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eae0ea3a2fb681b6c1e79c3d180d330e71d68eb8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e1775b33f51ecff1824554750d249bedf380dd27", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1775b33f51ecff1824554750d249bedf380dd27", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e1775b33f51ecff1824554750d249bedf380dd27", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1775b33f51ecff1824554750d249bedf380dd27/comments", "author": {"login": "brkorb", "id": 1242936, "node_id": "MDQ6VXNlcjEyNDI5MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1242936?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brkorb", "html_url": "https://github.com/brkorb", "followers_url": "https://api.github.com/users/brkorb/followers", "following_url": "https://api.github.com/users/brkorb/following{/other_user}", "gists_url": "https://api.github.com/users/brkorb/gists{/gist_id}", "starred_url": "https://api.github.com/users/brkorb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brkorb/subscriptions", "organizations_url": "https://api.github.com/users/brkorb/orgs", "repos_url": "https://api.github.com/users/brkorb/repos", "events_url": "https://api.github.com/users/brkorb/events{/privacy}", "received_events_url": "https://api.github.com/users/brkorb/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f58fc6a5d2716c6711ea401d0d6d89ec7bdcea20", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f58fc6a5d2716c6711ea401d0d6d89ec7bdcea20", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f58fc6a5d2716c6711ea401d0d6d89ec7bdcea20"}], "stats": {"total": 3354, "additions": 1702, "deletions": 1652}, "files": [{"sha": "9cac3771da8aa9103e867de620d17b8f112d9625", "filename": "fixincludes/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1775b33f51ecff1824554750d249bedf380dd27/fixincludes%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1775b33f51ecff1824554750d249bedf380dd27/fixincludes%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2FChangeLog?ref=e1775b33f51ecff1824554750d249bedf380dd27", "patch": "@@ -1,3 +1,14 @@\n+2013-12-07  Bruce Korb  <bkorb@gnu.org>\n+\n+\t* inclhack.def: many of the headers found under \"bits/\" are\n+\toften stashed under architecture directories.  Apply fixes\n+\tto those, too.  Also, re-ordered misordered fixes.\n+\t* tests/base/linux/vt.h: 80 columns in .def file limitation\n+\t* tests/base/iso/math_c99.h: adjust ordering\n+\t* tests/base/rtldef/string.h: likewise\n+\t* tests/base/bits/fenv.h: likewise\n+\t* tests/base/pthread.h: likewise\n+\n 2013-12-06  Richard Biener  <rguenther@suse.de>\n \n \t* inclhack.def (suse_linux_vt_cxx): New fix for linux/vt.h"}, {"sha": "10b4061f30a48934d9c2d9f93af47f53e39a88c0", "filename": "fixincludes/fixincl.x", "status": "modified", "additions": 1128, "deletions": 1128, "changes": 2256, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1775b33f51ecff1824554750d249bedf380dd27/fixincludes%2Ffixincl.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1775b33f51ecff1824554750d249bedf380dd27/fixincludes%2Ffixincl.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ffixincl.x?ref=e1775b33f51ecff1824554750d249bedf380dd27"}, {"sha": "411300fb2e0f9015cc09b6ee5be5b4d3c6acfc70", "filename": "fixincludes/inclhack.def", "status": "modified", "additions": 529, "deletions": 490, "changes": 1019, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1775b33f51ecff1824554750d249bedf380dd27/fixincludes%2Finclhack.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1775b33f51ecff1824554750d249bedf380dd27/fixincludes%2Finclhack.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Finclhack.def?ref=e1775b33f51ecff1824554750d249bedf380dd27", "patch": "@@ -11,7 +11,7 @@ autogen definitions fixincl;\n           pattern='^/\\*$' \\\n           trailer='^/\\*EOF\\*[/]' \\\n           input=inclhack.def \\\n-          key='hackname[ \t]*=[ \t]*(.*);'\n+          key=$'hackname[ \\t]*=[ \\t]*(.*);'\n \n    Set up a debug test so we can make the templates emit special\n    code while debugging these fixes:  */\n@@ -1139,6 +1139,20 @@ fix = {\n     test_text = '#define  vfscanf\t__svfscanf';\n };\n \n+/*\n+ *  Old Linux kernel's <compiler.h> header breaks Traditional CPP\n+ */\n+fix = {\n+    hackname  = complier_h_tradcpp;\n+    files     = linux/compiler.h;\n+\n+    select    = \"#define __builtin_warning\\\\(x, y\\\\.\\\\.\\\\.\\\\) \\\\(1\\\\)\";\n+    c_fix     = format;\n+    c_fix_arg = \"/* __builtin_warning(x, y...) is obsolete */\";\n+\n+    test_text = \"#define __builtin_warning(x, y...) (1)\";\n+};\n+\n /*\n  *  Fix various macros used to define ioctl numbers.\n  *  The traditional syntax was:\n@@ -1508,6 +1522,60 @@ fix = {\n     test_text = \"#ifdef ecd.cursor\\n#error bogus\\n#endif /* ecd+cursor */\";\n };\n \n+/*\n+ *  Incorrect feraiseexcept extern inline in bits/fenv.h on x86_64\n+ *  that fails when compiling for SSE-less 32-bit x86.\n+ */\n+fix = {\n+    hackname  = feraiseexcept_nosse_divbyzero;\n+    mach      = 'i[34567]86-*-linux*', 'x86*-linux*', 'amd64-*-linux*';\n+    files     = bits/fenv.h, '*/bits/fenv.h';\n+    select    = \"^([\\t ]*)__asm__ __volatile__ \\\\(\\\"divss %1, %0 *\\\" : \"\n+\t\t\": \\\"x\\\" \\\\(__f\\\\), \\\"x\\\" \\\\(__g\\\\)\\\\);$\";\n+    bypass    = \"\\\"fdivp .*; fwait\\\"\";\n+    \n+    c_fix     = format;\n+    c_fix_arg = <<- _EOText_\n+\t# ifdef __SSE_MATH__\n+\t%0\n+\t# else\n+\t%1__asm__ __volatile__ (\"fdivp %%%%st, %%%%st(1); fwait\"\n+\t%1\t\t\t: \"=t\" (__f) : \"0\" (__f), \"u\" (__g) : \"st(1)\");\n+\t# endif\n+\t_EOText_;\n+\n+    test_text = <<- _EOText_\n+\t  __asm__ __volatile__ (\"divss %1, %0\" : : \"x\" (__f), \"x\" (__g));\n+\t_EOText_;\n+};\n+\n+/*\n+ *  Incorrect feraiseexcept extern inline in bits/fenv.h on x86_64\n+ *  that fails when compiling for SSE-less 32-bit x86.\n+ */\n+fix = {\n+    hackname  = feraiseexcept_nosse_invalid;\n+    mach      = 'i[34567]86-*-linux*', 'x86*-linux*', 'amd64-*-linux*';\n+    files     = bits/fenv.h, '*/bits/fenv.h';\n+    select    = \"^([\\t ]*)__asm__ __volatile__ \\\\(\\\"divss %0, %0 *\\\" : \"\n+\t\t\": \\\"x\\\" \\\\(__f\\\\)\\\\);$\";\n+    bypass    = \"\\\"fdiv .*; fwait\\\"\";\n+    \n+    c_fix     = format;\n+    c_fix_arg = <<- _EOText_\n+\t# ifdef __SSE_MATH__\n+\t%0\n+\t# else\n+\t%1__asm__ __volatile__ (\"fdiv %%%%st, %%%%st(0); fwait\"\n+\t%1\t\t\t: \"=t\" (__f) : \"0\" (__f));\n+\t# endif\n+\t_EOText_;\n+\n+    test_text = <<- _EOText_\n+\t  __asm__ __volatile__ (\"divss %0, %0\" : : \"x\" (__f));\n+\t_EOText_;\n+};\n+\n /*\n  *  Between 8/24/1998 and 2/17/2001, FreeBSD system headers presume\n  *  neither the existence of GCC 3 nor its exact feature set yet break\n@@ -1738,7 +1806,7 @@ fix = {\n    versions.  */\n fix = {\n     hackname  = glibc_strncpy;\n-    files     = bits/string2.h;\n+    files     = bits/string2.h, '*/bits/string2.h';\n     bypass    = \"__builtin_strncpy\";\n     c_fix     = format;\n     c_fix_arg = \"#  define strncpy(dest, src, n) __builtin_strncpy (dest, src, n)\";\n@@ -2006,6 +2074,34 @@ fix = {\n     test_text = \"#ifndef _MATH_INCLUDED\";\n };\n \n+/*\n+ * hpux sendfile()\n+ */\n+fix = {\n+    hackname  = hpux11_extern_sendfile;\n+    mach      = \"*-hp-hpux11.[12]*\";\n+    files     = sys/socket.h;\n+    select    = \"^[ \\t]*extern sbsize_t sendfile.*\\n.*, int\\\\)\\\\);\\n\";\n+    c_fix     = format;\n+    c_fix_arg = \"#ifndef _APP32_64BIT_OFF_T\\n%0#endif\\n\";\n+    test_text = \"   extern sbsize_t sendfile __((int, int, off_t, bsize_t,\\n\"\n+        \"                               const struct iovec *, int));\\n\";\n+};\n+\n+/*\n+ * hpux sendpath()\n+ */\n+fix = {\n+    hackname  = hpux11_extern_sendpath;\n+    mach      = \"*-hp-hpux11.[12]*\";\n+    files     = sys/socket.h;\n+    select    = \"^[ \\t]*extern sbsize_t sendpath.*\\n.*, int\\\\)\\\\);\\n\";\n+    c_fix     = format;\n+    c_fix_arg = \"#ifndef _APP32_64BIT_OFF_T\\n%0#endif\\n\";\n+    test_text = \"   extern sbsize_t sendpath __((int, int, off_t, bsize_t,\\n\"\n+        \"                               const struct iovec *, int));\\n\";\n+};\n+\n /*\n  *  Keep HP-UX 11 from stomping on C++ math namespace\n  *  with defines for fabsf.\n@@ -2106,6 +2202,76 @@ fix = {\n                 \"inline double sqr(double v) { return v**0.5; }\";\n };\n \n+/*\n+ * hpux intptr\n+ */\n+fix = {\n+    hackname  = hpux_c99_intptr;\n+    mach      = \"*-hp-hpux11.3*\";\n+    files     = stdint-hpux11.h, stdint.h;\n+    sed       = \"s@^[ \\t]*#[ \\t]*define[ \\t]*PTRDIFF_MAX[ \\t]*\"\n+        \"INT32_MAX[ \\t]*$@#define PTRDIFF_MAX (2147483647l)@\";\n+    sed       = \"s@^[ \\t]*#[ \\t]*define[ \\t]*PTRDIFF_MIN[ \\t]*\"\n+        \"INT32_MIN[ \\t]*$@#define PTRDIFF_MIN (-PTRDIFF_MAX - 1)@\";\n+    sed       = \"s@^[ \\t]*#[ \\t]*define[ \\t]*INTPTR_MAX[ \\t]*\"\n+        \"INT32_MAX[ \\t]*$@#define INTPTR_MAX (2147483647l)@\";\n+    sed       = \"s@^[ \\t]*#[ \\t]*define[ \\t]*INTPTR_MIN[ \\t]*\"\n+        \"INT32_MIN[ \\t]*$@#define INTPTR_MIN (-INTPTR_MAX - 1)@\";\n+    sed       = \"s@^[ \\t]*#[ \\t]*define[ \\t]*UINTPTR_MAX[ \\t]*\"\n+        \"UINT32_MAX[ \\t]*$@#define UINTPTR_MAX (4294967295ul)@\";\n+    sed       = \"s@^[ \\t]*#[ \\t]*define[ \\t]*SIZE_MAX[ \\t]*\"\n+        \"UINT32_MAX[ \\t]*$@#define SIZE_MAX (4294967295ul)@\";\n+    test_text = \"#define PTRDIFF_MAX\tINT32_MAX\\n\"\n+\t\t\"#define PTRDIFF_MIN\tINT32_MIN\\n\"\n+\t\t\"#define INTPTR_MAX\tINT32_MAX\\n\"\n+\t\t\"#define INTPTR_MIN\tINT32_MIN\\n\"\n+\t\t\"#define UINTPTR_MAX\tUINT32_MAX\\n\"\n+\t\t\"#define SIZE_MAX\tUINT32_MAX\\n\";\n+};\n+\n+/*\n+ * These hacks are need in inttypes.h on 11.23 and in stdint.h on 11.31.\n+ */\n+fix = {\n+    hackname  = hpux_c99_inttypes;\n+    mach      = \"*-hp-hpux11.[23]*\";\n+    files     = inttypes.h;\n+    files     = stdint-hpux11.h, stdint.h;\n+    sed       = \"s@^[ \\t]*#[ \\t]*define[ \\t]*UINT8_C(__c)[ \\t]*\"\n+        \"__CONCAT_U__(__c)[ \\t]*$@#define UINT8_C(__c) (__c)@\";\n+    sed       = \"s@^[ \\t]*#[ \\t]*define[ \\t]*UINT16_C(__c)[ \\t]*\"\n+        \"__CONCAT_U__(__c)[ \\t]*$@#define UINT16_C(__c) (__c)@\";\n+    sed       = \"s@^[ \\t]*#[ \\t]*define[ \\t]*INT32_C(__c)[ \\t]*\"\n+        \"__CONCAT__(__c,l)[ \\t]*$@#define INT32_C(__c) (__c)@\";\n+    sed       = \"s@^[ \\t]*#[ \\t]*define[ \\t]*UINT32_C(__c)[ \\t].*$@\"\n+        \"#define UINT32_C(__c) __CONCAT__(__c,u)@\";\n+    test_text = \"#define UINT8_C(__c)     __CONCAT_U__(__c)\\n\"\n+                \"#define UINT16_C(__c)    __CONCAT_U__(__c)\\n\"\n+\t\t\"#define INT32_C(__c)     __CONCAT__(__c,l)\\n\"\n+\t\t\"#define UINT32_C(__c)     __CONCAT__(__c,ul)\\n\";\n+};\n+\n+/*\n+ * These hacks are need in inttypes.h on 11.23 and in stdint.h on 11.31.\n+ */\n+fix = {\n+    hackname  = hpux_c99_inttypes2;\n+    mach      = \"*-hp-hpux11.2*\";\n+    files     = stdint-hpux11.h, stdint.h;\n+    sed       = \"s@^[ \\t]*#[ \\t]*define[ \\t]*INT8_C(__c)[ \\t]*\"\n+        \"((signed char)(__c))[ \\t]*$@#define INT8_C(__c) (__c)@\";\n+    sed       = \"s@^[ \\t]*#[ \\t]*define[ \\t]*UINT8_C(__c)[ \\t]*\"\n+        \"((unsigned char)(__c))[ \\t]*$@#define UINT8_C(__c) (__c)@\";\n+    sed       = \"s@^[ \\t]*#[ \\t]*define[ \\t]*INT16_C(__c)[ \\t]*\"\n+        \"((short)(__c))[ \\t]*$@#define INT16_C(__c) (__c)@\";\n+    sed       = \"s@^[ \\t]*#[ \\t]*define[ \\t]*UINT16_C(__c)[ \\t]*\"\n+        \"((unsigned short)(__c))[ \\t]*$@#define UINT16_C(__c) (__c)@\";\n+    test_text = \"#  define\tINT8_C(__c)\t((signed char)(__c))\\n\"\n+                \"#  define      UINT8_C(__c)    ((unsigned char)(__c))\\n\"\n+\t\t\"#  define      INT16_C(__c)    ((short)(__c))\\n\"\n+\t\t\"#  define\tUINT16_C(__c)\t((unsigned short)(__c))\\n\";\n+};\n+\n /*\n  *  Fix hpux broken ctype macros\n  */\n@@ -2121,6 +2287,26 @@ fix = {\n \t\t\"# define isalpha(__c) (__SB_masks ? __SB_masks[__c] & _IS\\n\";\n };\n \n+/*\n+ * hpux errno()\n+ */\n+fix = {\n+    hackname  = hpux_extern_errno;\n+    mach      = \"*-hp-hpux10.*\";\n+    mach      = \"*-hp-hpux11.[0-2]*\";\n+    files     = errno.h;\n+    select    = \"^[ \\t]*extern int errno;$\";\n+    c_fix     = format;\n+    c_fix_arg = \"#ifdef __cplusplus\\n\"\n+        \"extern \\\"C\\\" {\\n\"\n+        \"#endif\\n\"\n+        \"%0\\n\"\n+        \"#ifdef __cplusplus\\n\"\n+        \"}\\n\"\n+        \"#endif\";\n+    test_text = \"   extern int errno;\\n\";\n+};\n+\n /*\n  *  Fix hpux broken #ifndef _XOPEN_SOURCE_EXTENDED conditional on htonl etc.\n  */\n@@ -2148,6 +2334,33 @@ fix = {\n                 \"#endif  /* ! _XOPEN_SOURCE_EXTENDED */\";\n };\n \n+/*\n+ * These hacks are need in inttypes.h on 11.23 and in stdint.h on 11.31.\n+ */\n+fix = {\n+    hackname  = hpux_imaginary_i;\n+    mach      = \"ia64-hp-hpux11.*\";\n+    files     = complex.h;\n+    select    = \"^[ \\t]*#[ \\t]*define[ \\t]*_Complex_I.*\";\n+    c_fix     = format;\n+    c_fix_arg = \"#define _Complex_I (__extension__ 1.0iF)\";\n+    test_text = \"#define _Complex_I (0.f+_Imaginary_I)\\n\";\n+};\n+\n+/*\n+ * These hacks are need in inttypes.h on 11.23 and in stdint.h on 11.31.\n+ */\n+fix = {\n+    hackname  = hpux_inttype_int8_t;\n+    mach      = \"*-hp-hpux1[01].*\";\n+    files     = sys/_inttypes.h;\n+    select    = \"^[ \\t]*typedef[ \\t]*char[ \\t]*int(_least){0,1}8_t.*\";\n+    c_fix     = format;\n+    c_fix_arg = \"typedef signed char int%18_t;\";\n+    test_text = \"typedef char int_least8_t;\\n\"\n+                \"typedef char int8_t;\\n\";\n+};\n+\n /*\n  * HP-UX long_double\n  */\n@@ -2170,10 +2383,10 @@ fix = {\n \t\t\"extern long_double strtold(const char *, char **);\\n\";\n };\n \n- /*\n-  * We cannot use the above rule on 11.31 because it removes the strtold\n-  * definition.  ia64 is OK with no hack, PA needs some help.\n-  */\n+/*\n+ * We cannot use the above rule on 11.31 because it removes the strtold\n+ * definition.  ia64 is OK with no hack, PA needs some help.\n+ */\n fix = {\n     hackname  = hpux_long_double_2;\n     mach      = \"hppa*-*-hpux11.3*\";\n@@ -2190,17 +2403,45 @@ fix = {\n };\n \n /*\n- *  Fix hpux10.20 <sys/time.h> to avoid invalid forward decl\n+ *  Add missing braces to pthread initializer defines.\n  */\n fix = {\n-    hackname = hpux_systime;\n-    files    = sys/time.h;\n-    select   = \"^extern struct sigevent;\";\n-\n-    c_fix     = format;\n-    c_fix_arg = \"struct sigevent;\";\n-\n-    test_text = 'extern struct sigevent;';\n+    hackname  = hpux_pthread_initializers;\n+    mach      = \"*-hp-hpux11.[0-3]*\";\n+    files     = sys/pthread.h;\n+    sed       = \"s@^[ \\t]*1, 1, 1, 1,[ \\t]*\\\\\\\\\"\n+\t\t \"@\\t{ 1, 1, 1, 1 },\\t\\t\\t\\t\\t\\t\\t\\\\\\\\@\";\n+    sed       = \"s@^[ \\t]*1,[ \\t]*\\\\\\\\\"\n+\t\t \"@\\t{ 1, 0 }@\";\n+    sed       = \"/^[ \\t]*0$/d\";\n+    sed       = \"s@__PTHREAD_MUTEX_VALID, 0\"\n+\t\t \"@{ __PTHREAD_MUTEX_VALID, 0 }@\";\n+    sed       = \"s@^[ \\t]*0, 0, -1, 0,[ \\t]*\\\\\\\\\"\n+\t\t \"@\\t{ 0, 0, -1, 0 },\\t\\t\\t\\t\\t\\t\\\\\\\\@\";\n+    sed       = \"s@0, __LWP_MTX_VALID, 0, 1, 1, 1, 1,[ \\t]*\\\\\\\\\"\n+\t\t \"@{ 0, __LWP_MTX_VALID }, { 0, 1, 1, 1, 1 },\\t\\t\\t\\\\\\\\@\";\n+    sed       = \"s@^[ \\t]*__LWP_MTX_VALID, 0, 1, 1, 1, 1,[ \\t]*\\\\\\\\\"\n+\t\t \"@\\t{ 0, __LWP_MTX_VALID }, { 0, 1, 1, 1, 1 },\\t\\t\\t\\\\\\\\@\";\n+    sed       = \"s@^[ \\t]*0, 0[ \\t]*\\\\\\\\\"\n+\t\t \"@\\t{ 0, 0 }\\t\\t\\t\\t\\t\\t\\t\\\\\\\\@\";\n+    sed       = \"s@__PTHREAD_COND_VALID, 0\"\n+\t\t \"@{ __PTHREAD_COND_VALID, 0 }@\";\n+    sed       = \"s@__LWP_COND_VALID, 0,[ \\t]*\\\\\\\\\"\n+\t\t \"@{ __LWP_COND_VALID, 0 },\\t\\t\\t\\t\\t\\\\\\\\@\";\n+    sed       = \"s@__PTHREAD_RWLOCK_VALID, 0\"\n+\t\t \"@{ __PTHREAD_RWLOCK_VALID, 0 }@\";\n+    sed       = \"s@__LWP_RWLOCK_VALID, 0,[ \\t]*\\\\\\\\\"\n+\t\t \"@{ __LWP_RWLOCK_VALID, 0 },\\t\\t\\t\\t\\t\\\\\\\\@\";\n+    sed       = \"s@^[ \\t]*0, 0, 0, 0, 0, 0, 0[ \\t]*\\\\\\\\\"\n+\t\t \"@\\t{ 0, 0, 0, 0, 0 }, { 0, 0}\\t\\t\\t\\t\\t\\\\\\\\@\";\n+    test_text = \"#define PTHREAD_MUTEX_INITIALIZER  {\\t\\t\\t\\t\\t\\\\\\\\\\n\"\n+\t\t\"\\t__PTHREAD_MUTEX_VALID, 0,\\t\\t\\t\\t\\t\\\\\\\\\\n\"\n+\t\t\"\\t(PTHREAD_MUTEX_DEFAULT | PTHREAD_PROCESS_PRIVATE),\\t\\t\\\\\\\\\\n\"\n+\t\t\"\\t__SPNLCK_INITIALIZER,\\t\\t\\t\\t\\t\\t\\\\\\\\\\n\"\n+\t\t\"\\t0, 0, -1, 0,\\t\\t\\t\\t\\t\\t\\t\\\\\\\\\\n\"\n+\t\t\"\\t0, __LWP_MTX_VALID, 0, 1, 1, 1, 1,\\t\\t\\t\\t\\\\\\\\\\n\"\n+\t\t\"\\t0, 0\\t\\t\\t\\t\\t\\t\\t\\t\\\\\\\\\\n\"\n+\t\t\"}\\n\";\n };\n \n /*\n@@ -2226,152 +2467,9 @@ fix = {\n     test_text = \"extern union mpinfou spu_info[];\";\n };\n \n-fix = {\n-    hackname  = hpux11_extern_sendfile;\n-    mach      = \"*-hp-hpux11.[12]*\";\n-    files     = sys/socket.h;\n-    select    = \"^[ \\t]*extern sbsize_t sendfile.*\\n.*, int\\\\)\\\\);\\n\";\n-    c_fix     = format;\n-    c_fix_arg = \"#ifndef _APP32_64BIT_OFF_T\\n%0#endif\\n\";\n-    test_text = \"   extern sbsize_t sendfile __((int, int, off_t, bsize_t,\\n\"\n-        \"                               const struct iovec *, int));\\n\";\n-};\n-\n-fix = {\n-    hackname  = hpux11_extern_sendpath;\n-    mach      = \"*-hp-hpux11.[12]*\";\n-    files     = sys/socket.h;\n-    select    = \"^[ \\t]*extern sbsize_t sendpath.*\\n.*, int\\\\)\\\\);\\n\";\n-    c_fix     = format;\n-    c_fix_arg = \"#ifndef _APP32_64BIT_OFF_T\\n%0#endif\\n\";\n-    test_text = \"   extern sbsize_t sendpath __((int, int, off_t, bsize_t,\\n\"\n-        \"                               const struct iovec *, int));\\n\";\n-};\n-\n-fix = {\n-    hackname  = hpux_extern_errno;\n-    mach      = \"*-hp-hpux10.*\";\n-    mach      = \"*-hp-hpux11.[0-2]*\";\n-    files     = errno.h;\n-    select    = \"^[ \\t]*extern int errno;$\";\n-    c_fix     = format;\n-    c_fix_arg = \"#ifdef __cplusplus\\n\"\n-        \"extern \\\"C\\\" {\\n\"\n-        \"#endif\\n\"\n-        \"%0\\n\"\n-        \"#ifdef __cplusplus\\n\"\n-        \"}\\n\"\n-        \"#endif\";\n-    test_text = \"   extern int errno;\\n\";\n-};\n-\n-/*\n- *  Add missing braces to pthread initializer defines.\n- */\n-fix = {\n-    hackname  = hpux_pthread_initializers;\n-    mach      = \"*-hp-hpux11.[0-3]*\";\n-    files     = sys/pthread.h;\n-    sed       = \"s@^[ \\t]*1, 1, 1, 1,[ \\t]*\\\\\\\\\"\n-\t\t \"@\\t{ 1, 1, 1, 1 },\\t\\t\\t\\t\\t\\t\\t\\\\\\\\@\";\n-    sed       = \"s@^[ \\t]*1,[ \\t]*\\\\\\\\\"\n-\t\t \"@\\t{ 1, 0 }@\";\n-    sed       = \"/^[ \\t]*0$/d\";\n-    sed       = \"s@__PTHREAD_MUTEX_VALID, 0\"\n-\t\t \"@{ __PTHREAD_MUTEX_VALID, 0 }@\";\n-    sed       = \"s@^[ \\t]*0, 0, -1, 0,[ \\t]*\\\\\\\\\"\n-\t\t \"@\\t{ 0, 0, -1, 0 },\\t\\t\\t\\t\\t\\t\\\\\\\\@\";\n-    sed       = \"s@0, __LWP_MTX_VALID, 0, 1, 1, 1, 1,[ \\t]*\\\\\\\\\"\n-\t\t \"@{ 0, __LWP_MTX_VALID }, { 0, 1, 1, 1, 1 },\\t\\t\\t\\\\\\\\@\";\n-    sed       = \"s@^[ \\t]*__LWP_MTX_VALID, 0, 1, 1, 1, 1,[ \\t]*\\\\\\\\\"\n-\t\t \"@\\t{ 0, __LWP_MTX_VALID }, { 0, 1, 1, 1, 1 },\\t\\t\\t\\\\\\\\@\";\n-    sed       = \"s@^[ \\t]*0, 0[ \\t]*\\\\\\\\\"\n-\t\t \"@\\t{ 0, 0 }\\t\\t\\t\\t\\t\\t\\t\\\\\\\\@\";\n-    sed       = \"s@__PTHREAD_COND_VALID, 0\"\n-\t\t \"@{ __PTHREAD_COND_VALID, 0 }@\";\n-    sed       = \"s@__LWP_COND_VALID, 0,[ \\t]*\\\\\\\\\"\n-\t\t \"@{ __LWP_COND_VALID, 0 },\\t\\t\\t\\t\\t\\\\\\\\@\";\n-    sed       = \"s@__PTHREAD_RWLOCK_VALID, 0\"\n-\t\t \"@{ __PTHREAD_RWLOCK_VALID, 0 }@\";\n-    sed       = \"s@__LWP_RWLOCK_VALID, 0,[ \\t]*\\\\\\\\\"\n-\t\t \"@{ __LWP_RWLOCK_VALID, 0 },\\t\\t\\t\\t\\t\\\\\\\\@\";\n-    sed       = \"s@^[ \\t]*0, 0, 0, 0, 0, 0, 0[ \\t]*\\\\\\\\\"\n-\t\t \"@\\t{ 0, 0, 0, 0, 0 }, { 0, 0}\\t\\t\\t\\t\\t\\\\\\\\@\";\n-    test_text = \"#define PTHREAD_MUTEX_INITIALIZER  {\\t\\t\\t\\t\\t\\\\\\\\\\n\"\n-\t\t\"\\t__PTHREAD_MUTEX_VALID, 0,\\t\\t\\t\\t\\t\\\\\\\\\\n\"\n-\t\t\"\\t(PTHREAD_MUTEX_DEFAULT | PTHREAD_PROCESS_PRIVATE),\\t\\t\\\\\\\\\\n\"\n-\t\t\"\\t__SPNLCK_INITIALIZER,\\t\\t\\t\\t\\t\\t\\\\\\\\\\n\"\n-\t\t\"\\t0, 0, -1, 0,\\t\\t\\t\\t\\t\\t\\t\\\\\\\\\\n\"\n-\t\t\"\\t0, __LWP_MTX_VALID, 0, 1, 1, 1, 1,\\t\\t\\t\\t\\\\\\\\\\n\"\n-\t\t\"\\t0, 0\\t\\t\\t\\t\\t\\t\\t\\t\\\\\\\\\\n\"\n-\t\t\"}\\n\";\n-};\n-\n-fix = {\n-    hackname  = hpux_c99_intptr;\n-    mach      = \"*-hp-hpux11.3*\";\n-    files     = stdint-hpux11.h, stdint.h;\n-    sed       = \"s@^[ \\t]*#[ \\t]*define[ \\t]*PTRDIFF_MAX[ \\t]*\"\n-        \"INT32_MAX[ \\t]*$@#define PTRDIFF_MAX (2147483647l)@\";\n-    sed       = \"s@^[ \\t]*#[ \\t]*define[ \\t]*PTRDIFF_MIN[ \\t]*\"\n-        \"INT32_MIN[ \\t]*$@#define PTRDIFF_MIN (-PTRDIFF_MAX - 1)@\";\n-    sed       = \"s@^[ \\t]*#[ \\t]*define[ \\t]*INTPTR_MAX[ \\t]*\"\n-        \"INT32_MAX[ \\t]*$@#define INTPTR_MAX (2147483647l)@\";\n-    sed       = \"s@^[ \\t]*#[ \\t]*define[ \\t]*INTPTR_MIN[ \\t]*\"\n-        \"INT32_MIN[ \\t]*$@#define INTPTR_MIN (-INTPTR_MAX - 1)@\";\n-    sed       = \"s@^[ \\t]*#[ \\t]*define[ \\t]*UINTPTR_MAX[ \\t]*\"\n-        \"UINT32_MAX[ \\t]*$@#define UINTPTR_MAX (4294967295ul)@\";\n-    sed       = \"s@^[ \\t]*#[ \\t]*define[ \\t]*SIZE_MAX[ \\t]*\"\n-        \"UINT32_MAX[ \\t]*$@#define SIZE_MAX (4294967295ul)@\";\n-    test_text = \"#define PTRDIFF_MAX\tINT32_MAX\\n\"\n-\t\t\"#define PTRDIFF_MIN\tINT32_MIN\\n\"\n-\t\t\"#define INTPTR_MAX\tINT32_MAX\\n\"\n-\t\t\"#define INTPTR_MIN\tINT32_MIN\\n\"\n-\t\t\"#define UINTPTR_MAX\tUINT32_MAX\\n\"\n-\t\t\"#define SIZE_MAX\tUINT32_MAX\\n\";\n-};\n-\n /*\n  * These hacks are need in inttypes.h on 11.23 and in stdint.h on 11.31.\n  */\n-\n-fix = {\n-    hackname  = hpux_c99_inttypes;\n-    mach      = \"*-hp-hpux11.[23]*\";\n-    files     = inttypes.h;\n-    files     = stdint-hpux11.h, stdint.h;\n-    sed       = \"s@^[ \\t]*#[ \\t]*define[ \\t]*UINT8_C(__c)[ \\t]*\"\n-        \"__CONCAT_U__(__c)[ \\t]*$@#define UINT8_C(__c) (__c)@\";\n-    sed       = \"s@^[ \\t]*#[ \\t]*define[ \\t]*UINT16_C(__c)[ \\t]*\"\n-        \"__CONCAT_U__(__c)[ \\t]*$@#define UINT16_C(__c) (__c)@\";\n-    sed       = \"s@^[ \\t]*#[ \\t]*define[ \\t]*INT32_C(__c)[ \\t]*\"\n-        \"__CONCAT__(__c,l)[ \\t]*$@#define INT32_C(__c) (__c)@\";\n-    sed       = \"s@^[ \\t]*#[ \\t]*define[ \\t]*UINT32_C(__c)[ \\t].*$@\"\n-        \"#define UINT32_C(__c) __CONCAT__(__c,u)@\";\n-    test_text = \"#define UINT8_C(__c)     __CONCAT_U__(__c)\\n\"\n-                \"#define UINT16_C(__c)    __CONCAT_U__(__c)\\n\"\n-\t\t\"#define INT32_C(__c)     __CONCAT__(__c,l)\\n\"\n-\t\t\"#define UINT32_C(__c)     __CONCAT__(__c,ul)\\n\";\n-};\n-\n-fix = {\n-    hackname  = hpux_c99_inttypes2;\n-    mach      = \"*-hp-hpux11.2*\";\n-    files     = stdint-hpux11.h, stdint.h;\n-    sed       = \"s@^[ \\t]*#[ \\t]*define[ \\t]*INT8_C(__c)[ \\t]*\"\n-        \"((signed char)(__c))[ \\t]*$@#define INT8_C(__c) (__c)@\";\n-    sed       = \"s@^[ \\t]*#[ \\t]*define[ \\t]*UINT8_C(__c)[ \\t]*\"\n-        \"((unsigned char)(__c))[ \\t]*$@#define UINT8_C(__c) (__c)@\";\n-    sed       = \"s@^[ \\t]*#[ \\t]*define[ \\t]*INT16_C(__c)[ \\t]*\"\n-        \"((short)(__c))[ \\t]*$@#define INT16_C(__c) (__c)@\";\n-    sed       = \"s@^[ \\t]*#[ \\t]*define[ \\t]*UINT16_C(__c)[ \\t]*\"\n-        \"((unsigned short)(__c))[ \\t]*$@#define UINT16_C(__c) (__c)@\";\n-    test_text = \"#  define\tINT8_C(__c)\t((signed char)(__c))\\n\"\n-                \"#  define      UINT8_C(__c)    ((unsigned char)(__c))\\n\"\n-\t\t\"#  define      INT16_C(__c)    ((short)(__c))\\n\"\n-\t\t\"#  define\tUINT16_C(__c)\t((unsigned short)(__c))\\n\";\n-};\n-\n fix = {\n     hackname  = hpux_stdint_least_fast;\n     mach      = \"*-hp-hpux11.2*\";\n@@ -2385,33 +2483,26 @@ fix = {\n \t_EOFix_;\n };\n \n+/*\n+ *  Fix hpux10.20 <sys/time.h> to avoid invalid forward decl\n+ */\n fix = {\n-    hackname  = hpux_inttype_int8_t;\n-    mach      = \"*-hp-hpux1[01].*\";\n-    files     = sys/_inttypes.h;\n-    select    = \"^[ \\t]*typedef[ \\t]*char[ \\t]*int(_least){0,1}8_t.*\";\n-    c_fix     = format;\n-    c_fix_arg = \"typedef signed char int%18_t;\";\n-    test_text = \"typedef char int_least8_t;\\n\"\n-                \"typedef char int8_t;\\n\";\n-};\n+    hackname = hpux_systime;\n+    files    = sys/time.h;\n+    select   = \"^extern struct sigevent;\";\n \n-fix = {\n-    hackname  = hpux_imaginary_i;\n-    mach      = \"ia64-hp-hpux11.*\";\n-    files     = complex.h;\n-    select    = \"^[ \\t]*#[ \\t]*define[ \\t]*_Complex_I.*\";\n     c_fix     = format;\n-    c_fix_arg = \"#define _Complex_I (__extension__ 1.0iF)\";\n-    test_text = \"#define _Complex_I (0.f+_Imaginary_I)\\n\";\n+    c_fix_arg = \"struct sigevent;\";\n+\n+    test_text = 'extern struct sigevent;';\n };\n \n /*\n  *  Fix glibc definition of HUGE_VAL in terms of hex floating point constant\n  */\n fix = {\n     hackname  = huge_val_hex;\n-    files     = bits/huge_val.h;\n+    files     = bits/huge_val.h, '*/bits/huge_val.h';\n     select    = \"^#[ \\t]*define[ \\t]*HUGE_VAL[ \\t].*0x1\\\\.0p.*\";\n     bypass    = \"__builtin_huge_val\";\n \n@@ -2426,7 +2517,7 @@ fix = {\n  */\n fix = {\n     hackname  = huge_valf_hex;\n-    files     = bits/huge_val.h;\n+    files     = bits/huge_val.h, '*/bits/huge_val.h';\n     select    = \"^#[ \\t]*define[ \\t]*HUGE_VALF[ \\t].*0x1\\\\.0p.*\";\n     bypass    = \"__builtin_huge_valf\";\n \n@@ -2441,7 +2532,7 @@ fix = {\n  */\n fix = {\n     hackname  = huge_vall_hex;\n-    files     = bits/huge_val.h;\n+    files     = bits/huge_val.h, '*/bits/huge_val.h';\n     select    = \"^#[ \\t]*define[ \\t]*HUGE_VALL[ \\t].*0x1\\\\.0p.*\";\n     bypass    = \"__builtin_huge_vall\";\n \n@@ -2579,7 +2670,8 @@ fix = {\n     test_text = \"#define __CONCAT__(a,b) a/**/b\";\n };\n \n-/* The /usr/include/sys/ucontext.h on ia64-*linux-gnu systems defines\n+/*\n+ * The /usr/include/sys/ucontext.h on ia64-*linux-gnu systems defines\n  * an _SC_GR0_OFFSET macro using an idiom that isn't a compile time\n  * constant on recent versions of g++.\n  */\n@@ -2792,9 +2884,11 @@ fix = {\n     test_text = \"#define __END_DECLS };\";\n };\n \n-/* newlib's stdint.h has several failures to conform to C99.  The fix\n-   for these removed a comment that can be matched to identify unfixed\n-   versions.  */\n+/*\n+ * newlib's stdint.h has several failures to conform to C99.  The fix\n+ *  for these removed a comment that can be matched to identify unfixed\n+ *  versions.\n+ */\n fix = {\n     hackname  = newlib_stdint_1;\n     files     = stdint-newlib.h, stdint.h;\n@@ -3241,6 +3335,98 @@ fix = {\n     \"#if\t!defined(_REENTRANT) && !defined(_LP64) && !defined(_STRICT_STDC)\";\n };\n \n+/*\n+ * Sun Solaris 2 has a version of sys/int_const.h that defines\n+ * UINT8_C and UINT16_C to unsigned constants.\n+ */\n+fix = {\n+    hackname  = solaris_int_const;\n+    files     = sys/int_const.h;\n+    mach      = '*-*-solaris2*';\n+    c_fix     = format;\n+    c_fix_arg = \"#define\\tUINT8_C(c)\\t(c)\\n\"\n+                \"%1\\n\"\n+                \"#define\\tUINT16_C(c)\\t(c)\";\n+    select    = \"^#define[ \\t]+UINT8_C\\\\(c\\\\)[ \\t]+__CONCAT__.*\\n\"\n+                \"(/\\*.*\\*/)\\n\"\n+                \"#define[ \\t]+UINT16_C\\\\(c\\\\)[ \\t]+__CONCAT__.*\";\n+    test_text =\n+    \"#define\tUINT8_C(c)\t__CONCAT__(c,u)\\n\"\n+    \"/* CSTYLED */\\n\"\n+    \"#define\tUINT16_C(c)\t__CONCAT__(c,u)\";\n+};\n+\n+/*\n+ * Sun Solaris 2 has a version of sys/int_limits.h that defines\n+ * UINT8_MAX and UINT16_MAX to unsigned constants.\n+ */\n+fix = {\n+    hackname  = solaris_int_limits_1;\n+    files     = sys/int_limits.h;\n+    mach      = '*-*-solaris2*';\n+    c_fix     = format;\n+    c_fix_arg = \"#define\\tUINT8_MAX\\t(255)\\n\"\n+                \"#define\\tUINT16_MAX\\t(65535)\";\n+    select    = \"^#define[ \\t]+UINT8_MAX[ \\t]+\\\\(255U\\\\)\\n\"\n+                \"#define[ \\t]+UINT16_MAX[ \\t]+\\\\(65535U\\\\)\";\n+    test_text =\n+    \"#define\tUINT8_MAX\t(255U)\\n\"\n+    \"#define\tUINT16_MAX\t(65535U)\";\n+};\n+\n+/*\n+ * Sun Solaris 2 has a version of sys/int_limits.h that defines\n+ * INT_FAST16 limits to wrong values for sys/int_types.h.\n+ */\n+fix = {\n+    hackname  = solaris_int_limits_2;\n+    files     = sys/int_limits.h;\n+    mach      = '*-*-solaris2*';\n+    c_fix     = format;\n+    c_fix_arg = \"#define\\t%1_FAST16_%2 %132_%2\";\n+    select    = \"^#define[ \\t]+(INT|UINT)_FAST16_(MAX|MIN)[ \\t](INT|UINT)16.*\";\n+    test_text =\n+    \"#define\tINT_FAST16_MAX INT16_MAX\\n\"\n+    \"#define\tUINT_FAST16_MAX UINT16_MAX\\n\"\n+    \"#define\tINT_FAST16_MIN\tINT16_MIN\";\n+};\n+\n+/*\n+ * Sun Solaris 2 has a version of sys/int_limits.h that defines\n+ * SIZE_MAX as unsigned long.\n+ */\n+fix = {\n+    hackname  = solaris_int_limits_3;\n+    files     = sys/int_limits.h;\n+    mach      = '*-*-solaris2*';\n+    c_fix     = format;\n+    c_fix_arg = \"#define\\tSIZE_MAX\\t4294967295U\";\n+    select    = \"^#define[ \\t]+SIZE_MAX[ \\t]+4294967295UL\";\n+    test_text =\n+    \"#define\tSIZE_MAX\t4294967295UL\";\n+};\n+\n+/*\n+ * Sun Solaris up to 9 has a version of sys/int_types.h that forbids use\n+ * of Standard C99 64-bit types in 32-bit mode.\n+ */\n+fix = {\n+    hackname  = solaris_int_types;\n+    select    = \"__STDC__ - 0 == 0\";\n+    bypass    = \"_LONGLONG_TYPE\";\n+    files     = sys/int_types.h;\n+    c_fix     = format;\n+    c_fix_arg =\n+    \"(defined(_STDC_C99) || !defined(_STRICT_STDC) || defined(__GNUC__))\";\n+    test_text =\n+    \"#if __STDC__ - 0 == 0 && !defined(_NO_LONGLONG)\\n\"\n+    \"typedef\tlong long\t\tint64_t;\\n\"\n+    \"#endif\\n\\n\"\n+    \"#if defined(_LP64) || (__STDC__ - 0 == 0 && !defined(_NO_LONGLONG))\\n\"\n+    \"typedef int64_t\t\t\tintmax_t;\\n\"\n+    \"#endif\";\n+};\n+\n /*\n  *  Before Solaris 10, <iso/setjmp_iso.h> doesn't mark longjump noreturn.\n  */\n@@ -3279,6 +3465,35 @@ fix = {\n     \"#define\tHUGE_VALL\t__builtin_huge_vall\";\n };\n \n+/*\n+ * On Solaris 11, if you do isinf(NaN) you'll get a floating point\n+ * exception.  Provide an alternative using GCC's builtin.\n+ */\n+fix = {\n+    hackname  = solaris_math_10;\n+    select    = '@\\(#\\)math_c99.h' \"[ \\t]+1.[0-9]+[ \\t]+[0-9/]+ SMI\";\n+    files     = iso/math_c99.h;\n+    c_fix     = format;\n+    c_fix_arg = \"#define\\tisinf(x) __builtin_isinf(x)\";\n+    c_fix_arg = \"^#define[ \\t]+isinf\\\\(x\\\\)[ \\t]+__extension__\\\\([ \\t]*\\\\\\\\\\n\"\n+                \"[ \\t]*\\\\{[ \\t]*__typeof\\\\(x\\\\)[ \\t]*__x_i[ \\t]*=[ \\t]*\\\\(x\\\\);\"\n+                    \"[ \\t]*\\\\\\\\\\n\"\n+                \"[ \\t]*__x_i[ \\t]*==[ \\t]*\\\\(__typeof\\\\(__x_i\\\\)\\\\)[ \\t]*\"\n+                    \"INFINITY[ \\t]*\\\\|\\\\|[ \\t]*\\\\\\\\\\n\"\n+                \"[ \\t]*__x_i[ \\t]*==[ \\t]*\\\\(__typeof\\\\(__x_i\\\\)\\\\)[ \\t]*\"\n+                    \"\\\\(-INFINITY\\\\);[ \\t]*\\\\}\\\\)\";\n+    test_text =\n+    '#pragma ident\t\"@(#)math_c99.h\t1.12\t07/01/21 SMI\"'\"\\n\"\n+    \"#undef\tisinf\\n\"\n+    \"#define\tisinf(x)\t__extension__( \\\\\\\\\\n\"\n+    \"\t\t\t{ __typeof(x) __x_i = (x); \\\\\\\\\\n\"\n+    \"\t\t\t__x_i == (__typeof(__x_i)) INFINITY || \\\\\\\\\\n\"\n+    \"\t\t\t__x_i == (__typeof(__x_i)) (-INFINITY); })\";\n+};\n+\n+/*\n+ * Solaris math INFINITY\n+ */\n fix = {\n     hackname = solaris_math_2;\n     select = '@\\(#\\)math_c99.h' \"[ \\t]+1.[0-9]+[ \\t]+[0-9/]+ SMI\";\n@@ -3293,6 +3508,9 @@ fix = {\n     \"#define\tINFINITY\t__builtin_infinity\";\n };\n \n+/*\n+ * Solaris math NAN\n+ */\n fix = {\n     hackname = solaris_math_3;\n     select = '@\\(#\\)math_c99.h' \"[ \\t]+1.[0-9]+[ \\t]+[0-9/]+ SMI\";\n@@ -3307,6 +3525,9 @@ fix = {\n     \"#define\tNAN\t__builtin_nan\";\n };\n \n+/*\n+ * Solaris math fpclassify\n+ */\n fix = {\n     hackname = solaris_math_4;\n     select = '@\\(#\\)math_c99.h' \"[ \\t]+1.[0-9]+[ \\t]+[0-9/]+ SMI\";\n@@ -3323,6 +3544,9 @@ fix = {\n     \"#define\tfpclassify(x)\t__builtin_fpclassify(x)\";\n };\n \n+/*\n+ * Solaris math signbit\n+ */\n fix = {\n     hackname = solaris_math_8;\n     select = '@\\(#\\)math_c99\\.h' \"[ \\t]+1\\\\.[0-9]+[ \\t]+[0-9/]+ SMI\";\n@@ -3342,6 +3566,9 @@ fix = {\n \t_EOText_;\n };\n \n+/*\n+ * Solaris math comparison macros\n+ */\n fix = {\n     hackname = solaris_math_9;\n     select = '@\\(#\\)math_c99.h' \"[ \\t]+1.[0-9]+[ \\t]+[0-9/]+ SMI\";\n@@ -3367,33 +3594,6 @@ fix = {\n     \"#define\tisunordered(x, y)\t((x) __builtin_isunordered(y))\";\n };\n \n-/*\n- * On Solaris 11, if you do isinf(NaN) you'll get a floating point\n- * exception.  Provide an alternative using GCC's builtin.\n- */\n-\n-fix = {\n-    hackname  = solaris_math_10;\n-    select    = '@\\(#\\)math_c99.h' \"[ \\t]+1.[0-9]+[ \\t]+[0-9/]+ SMI\";\n-    files     = iso/math_c99.h;\n-    c_fix     = format;\n-    c_fix_arg = \"#define\\tisinf(x) __builtin_isinf(x)\";\n-    c_fix_arg = \"^#define[ \\t]+isinf\\\\(x\\\\)[ \\t]+__extension__\\\\([ \\t]*\\\\\\\\\\n\"\n-                \"[ \\t]*\\\\{[ \\t]*__typeof\\\\(x\\\\)[ \\t]*__x_i[ \\t]*=[ \\t]*\\\\(x\\\\);\"\n-                    \"[ \\t]*\\\\\\\\\\n\"\n-                \"[ \\t]*__x_i[ \\t]*==[ \\t]*\\\\(__typeof\\\\(__x_i\\\\)\\\\)[ \\t]*\"\n-                    \"INFINITY[ \\t]*\\\\|\\\\|[ \\t]*\\\\\\\\\\n\"\n-                \"[ \\t]*__x_i[ \\t]*==[ \\t]*\\\\(__typeof\\\\(__x_i\\\\)\\\\)[ \\t]*\"\n-                    \"\\\\(-INFINITY\\\\);[ \\t]*\\\\}\\\\)\";\n-    test_text =\n-    '#pragma ident\t\"@(#)math_c99.h\t1.12\t07/01/21 SMI\"'\"\\n\"\n-    \"#undef\tisinf\\n\"\n-    \"#define\tisinf(x)\t__extension__( \\\\\\\\\\n\"\n-    \"\t\t\t{ __typeof(x) __x_i = (x); \\\\\\\\\\n\"\n-    \"\t\t\t__x_i == (__typeof(__x_i)) INFINITY || \\\\\\\\\\n\"\n-    \"\t\t\t__x_i == (__typeof(__x_i)) (-INFINITY); })\";\n-};\n-\n /*\n  * Sun Solaris defines PTHREAD_MUTEX_INITIALIZER with a trailing\n  * \"0\" for the last field of the pthread_mutex_t structure, which is\n@@ -3432,49 +3632,6 @@ fix = {\n     \"\t{{{0, 0, 0, 0}, DEFAULT_TYPE, _COND_MAGIC}, 0}\";\n };\n \n-/*\n- *  The pow overloads with int were removed in C++ 2011 DR 550.\n- */\n-fix = {\n-    hackname  = solaris_pow_int_overload;\n-    mach      = '*-*-solaris2*';\n-    files     = \"iso/math_iso.h\";\n-    select    = \"^[ \\t]*inline [a-z ]* pow\\\\([^()]*, int [^()]*\\\\)\"\n-\t\t\" *\\\\{[^{}]*\\n[^{}]*\\\\}\";\n-    c_fix     = format;\n-    c_fix_arg = \"#if __cplusplus < 201103L\\n%0\\n#endif\";\n-\n-    test_text =\n-    \"\tinline long double pow(long double __X, int __Y) { return\\n\"\n-    \"\t\t__powl(__X, (long double) (__Y)); }\";\n-};\n-\n-/*\n- * Sun Solaris defines PTHREAD_RWLOCK_INITIALIZER with a \"0\" for some\n- *  fields of the pthread_rwlock_t structure, which are of type\n- *  upad64_t, which itself is typedef'd to int64_t, but with __STDC__\n- *  defined (e.g. by -ansi) it is a union. So change the initializer\n- *  to \"{0}\" instead.\n- */\n-fix = {\n-    hackname = solaris_rwlock_init_1;\n-    select = '@\\(#\\)pthread.h' \"[ \\t]+1.[0-9]+[ \\t]+[0-9/]+ SMI\";\n-    files = pthread.h;\n-    mach = '*-*-solaris*';\n-    c_fix = format;\n-    c_fix_arg = \"#if __STDC__ - 0 == 0 && !defined(_NO_LONGLONG)\\n\"\n-                \"%0\\n\"\n-                \"#else\\n\"\n-                \"%1{0, 0, 0, {{0}, {0}, {0}}, {{0}, {0}}, {{0}, {0}}}\\n\"\n-                \"#endif\";\n-    c_fix_arg = \"(^#define[ \\t]+PTHREAD_RWLOCK_INITIALIZER[ \\t]+)\"\n-                \"\\\\{0, 0, 0, \\\\{0, 0, 0\\\\}, \\\\{0, 0\\\\}, \\\\{0, 0\\\\}\\\\}[ \\t]*$\";\n-\n-    test_text =\n-    '#ident \"@(#)pthread.h  1.26  98/04/12 SMI\"'\"\\n\"\n-    \"#define PTHREAD_RWLOCK_INITIALIZER\\t{0, 0, 0, {0, 0, 0}, {0, 0}, {0, 0}}\";\n-};\n-\n /*\n  * Sun Solaris defines PTHREAD_ONCE_INIT as an array containing a\n  * structure.  As such, it need two levels of brackets, but only\n@@ -3526,111 +3683,62 @@ fix = {\n };\n \n /*\n- * Sun Solaris 2 has a version of sys/int_const.h that defines\n- * UINT8_C and UINT16_C to unsigned constants.\n- */\n-fix = {\n-    hackname  = solaris_int_const;\n-    files     = sys/int_const.h;\n-    mach      = '*-*-solaris2*';\n-    c_fix     = format;\n-    c_fix_arg = \"#define\\tUINT8_C(c)\\t(c)\\n\"\n-                \"%1\\n\"\n-                \"#define\\tUINT16_C(c)\\t(c)\";\n-    select    = \"^#define[ \\t]+UINT8_C\\\\(c\\\\)[ \\t]+__CONCAT__.*\\n\"\n-                \"(/\\*.*\\*/)\\n\"\n-                \"#define[ \\t]+UINT16_C\\\\(c\\\\)[ \\t]+__CONCAT__.*\";\n-    test_text =\n-    \"#define\tUINT8_C(c)\t__CONCAT__(c,u)\\n\"\n-    \"/* CSTYLED */\\n\"\n-    \"#define\tUINT16_C(c)\t__CONCAT__(c,u)\";\n-};\n-\n-/*\n- * Sun Solaris 2 has a version of sys/int_limits.h that defines\n- * UINT8_MAX and UINT16_MAX to unsigned constants.\n- */\n-fix = {\n-    hackname  = solaris_int_limits_1;\n-    files     = sys/int_limits.h;\n-    mach      = '*-*-solaris2*';\n-    c_fix     = format;\n-    c_fix_arg = \"#define\\tUINT8_MAX\\t(255)\\n\"\n-                \"#define\\tUINT16_MAX\\t(65535)\";\n-    select    = \"^#define[ \\t]+UINT8_MAX[ \\t]+\\\\(255U\\\\)\\n\"\n-                \"#define[ \\t]+UINT16_MAX[ \\t]+\\\\(65535U\\\\)\";\n-    test_text =\n-    \"#define\tUINT8_MAX\t(255U)\\n\"\n-    \"#define\tUINT16_MAX\t(65535U)\";\n-};\n-\n-/*\n- * Sun Solaris 2 has a version of sys/int_limits.h that defines\n- * INT_FAST16 limits to wrong values for sys/int_types.h.\n+ * Solaris 10+ <spawn.h> uses char *const argv[_RESTRICT_KYWD] in the\n+ * posix_spawn declarations, which doesn't work with C++.\n  */\n fix = {\n-    hackname  = solaris_int_limits_2;\n-    files     = sys/int_limits.h;\n+    hackname  = solaris_posix_spawn_restrict;\n+    files     = spawn.h;\n     mach      = '*-*-solaris2*';\n     c_fix     = format;\n-    c_fix_arg = \"#define\\t%1_FAST16_%2 %132_%2\";\n-    select    = \"^#define[ \\t]+(INT|UINT)_FAST16_(MAX|MIN)[ \\t](INT|UINT)16.*\";\n+    c_fix_arg = \"%1*_RESTRICT_KYWD %2%3\";\n+    select    = \"(.*[ \\t]+)([a-z]+)\\\\[_RESTRICT_KYWD\\\\](.*)\";\n     test_text =\n-    \"#define\tINT_FAST16_MAX INT16_MAX\\n\"\n-    \"#define\tUINT_FAST16_MAX UINT16_MAX\\n\"\n-    \"#define\tINT_FAST16_MIN\tINT16_MIN\";\n+    \"char *const argv[_RESTRICT_KYWD],\\n\"\n+    \"char *const envp[_RESTRICT_KYWD]);\";\n };\n \n /*\n- * Sun Solaris 2 has a version of sys/int_limits.h that defines\n- * SIZE_MAX as unsigned long.\n+ *  The pow overloads with int were removed in C++ 2011 DR 550.\n  */\n fix = {\n-    hackname  = solaris_int_limits_3;\n-    files     = sys/int_limits.h;\n+    hackname  = solaris_pow_int_overload;\n     mach      = '*-*-solaris2*';\n+    files     = \"iso/math_iso.h\";\n+    select    = \"^[ \\t]*inline [a-z ]* pow\\\\([^()]*, int [^()]*\\\\)\"\n+\t\t\" *\\\\{[^{}]*\\n[^{}]*\\\\}\";\n     c_fix     = format;\n-    c_fix_arg = \"#define\\tSIZE_MAX\\t4294967295U\";\n-    select    = \"^#define[ \\t]+SIZE_MAX[ \\t]+4294967295UL\";\n-    test_text =\n-    \"#define\tSIZE_MAX\t4294967295UL\";\n-};\n+    c_fix_arg = \"#if __cplusplus < 201103L\\n%0\\n#endif\";\n \n-/*\n- * Sun Solaris up to 9 has a version of sys/int_types.h that forbids use\n- * of Standard C99 64-bit types in 32-bit mode.\n- */\n-fix = {\n-    hackname  = solaris_int_types;\n-    select    = \"__STDC__ - 0 == 0\";\n-    bypass    = \"_LONGLONG_TYPE\";\n-    files     = sys/int_types.h;\n-    c_fix     = format;\n-    c_fix_arg =\n-    \"(defined(_STDC_C99) || !defined(_STRICT_STDC) || defined(__GNUC__))\";\n     test_text =\n-    \"#if __STDC__ - 0 == 0 && !defined(_NO_LONGLONG)\\n\"\n-    \"typedef\tlong long\t\tint64_t;\\n\"\n-    \"#endif\\n\\n\"\n-    \"#if defined(_LP64) || (__STDC__ - 0 == 0 && !defined(_NO_LONGLONG))\\n\"\n-    \"typedef int64_t\t\t\tintmax_t;\\n\"\n-    \"#endif\";\n+    \"\tinline long double pow(long double __X, int __Y) { return\\n\"\n+    \"\t\t__powl(__X, (long double) (__Y)); }\";\n };\n \n /*\n- * Solaris 10+ <spawn.h> uses char *const argv[_RESTRICT_KYWD] in the\n- * posix_spawn declarations, which doesn't work with C++.\n+ * Sun Solaris defines PTHREAD_RWLOCK_INITIALIZER with a \"0\" for some\n+ *  fields of the pthread_rwlock_t structure, which are of type\n+ *  upad64_t, which itself is typedef'd to int64_t, but with __STDC__\n+ *  defined (e.g. by -ansi) it is a union. So change the initializer\n+ *  to \"{0}\" instead.\n  */\n fix = {\n-    hackname  = solaris_posix_spawn_restrict;\n-    files     = spawn.h;\n-    mach      = '*-*-solaris2*';\n-    c_fix     = format;\n-    c_fix_arg = \"%1*_RESTRICT_KYWD %2%3\";\n-    select    = \"(.*[ \\t]+)([a-z]+)\\\\[_RESTRICT_KYWD\\\\](.*)\";\n+    hackname = solaris_rwlock_init_1;\n+    select = '@\\(#\\)pthread.h' \"[ \\t]+1.[0-9]+[ \\t]+[0-9/]+ SMI\";\n+    files = pthread.h;\n+    mach = '*-*-solaris*';\n+    c_fix = format;\n+    c_fix_arg = \"#if __STDC__ - 0 == 0 && !defined(_NO_LONGLONG)\\n\"\n+                \"%0\\n\"\n+                \"#else\\n\"\n+                \"%1{0, 0, 0, {{0}, {0}, {0}}, {{0}, {0}}, {{0}, {0}}}\\n\"\n+                \"#endif\";\n+    c_fix_arg = \"(^#define[ \\t]+PTHREAD_RWLOCK_INITIALIZER[ \\t]+)\"\n+                \"\\\\{0, 0, 0, \\\\{0, 0, 0\\\\}, \\\\{0, 0\\\\}, \\\\{0, 0\\\\}\\\\}[ \\t]*$\";\n+\n     test_text =\n-    \"char *const argv[_RESTRICT_KYWD],\\n\"\n-    \"char *const envp[_RESTRICT_KYWD]);\";\n+    '#ident \"@(#)pthread.h  1.26  98/04/12 SMI\"'\"\\n\"\n+    \"#define PTHREAD_RWLOCK_INITIALIZER\\t{0, 0, 0, {0, 0, 0}, {0, 0}, {0, 0}}\";\n };\n \n /*\n@@ -4076,7 +4184,7 @@ fix = {\n     c_fix     = format;\n     c_fix_arg = \"unsigned int newev;\";\n \n-    test_text = \"        unsigned int new;               /* New console (if changing) */\";\n+    test_text = \"        unsigned int new;      /* New console (if changing) */\";\n };\n \n /*\n@@ -4240,7 +4348,7 @@ fix = {\n fix = {\n     hackname  = thread_keyword;\n     files     = \"pthread.h\";\n-    files     = \"bits/sigthread.h\";\n+    files     = bits/sigthread.h, '*/bits/sigthread.h';\n     select    = \"([* ])__thread([,)])\";\n     c_fix     = format;\n     c_fix_arg = \"%1__thr%2\";\n@@ -4325,6 +4433,41 @@ fix = {\n     \"#define __alignof__(x) ...\";\n };\n \n+/*\n+ * On VMS, add missing braces around sigset_t constants.\n+ */\n+fix = {\n+    hackname  = vms_add_missing_braces;\n+    select    = \"(_SIG_[A-Z]+_SET[ \\t]+= \\\\{)(0x[0F]+, 0x[0F]+)\";\n+    mach      = \"*-*-*vms*\";\n+    files     = \"rtldef/signal.h\";\n+    c_fix     = format;\n+\n+    c_fix_arg = '%1 {%2} ';\n+\n+    test_text = \"static const __sigset_t _SIG_EMPTY_SET  = \"\n+                \"{0x00000000, 0x00000000},\\n\"\n+                \" _SIG_FULL_SET   = {0xFFFFFFFF, 0xFFFFFFFF};\\n\";\n+};\n+\n+/*\n+ * On VMS, some DEC-C builtins are directly used.\n+ */\n+fix = {\n+    hackname  = vms_decc_builtin;\n+    select    = \"(__MEMSET|__MEMMOVE|__MEMCPY|__STRLEN|__STRCPY)\";\n+    mach      = \"*-*-*vms*\";\n+    files     = rtldef/string.h, rtldef/time.h, rtldef/strings.h,\n+                rtldef/socket.h;\n+    sed       = \"s@__MEMSET@memset@\";\n+    sed       = \"s@__MEMMOVE@memmove@\";\n+    sed       = \"s@__MEMCPY@memcpy@\";\n+    sed       = \"s@__STRLEN@strlen@\";\n+    sed       = \"s@__STRCPY@strcpy@\";\n+\n+    test_text = \"define FD_ZERO(__p) __MEMSET((__p), 0, sizeof(*(__p)))\\n\";\n+};\n+\n /*\n  *  Define __CAN_USE_EXTERN_PREFIX on vms.\n  */\n@@ -4348,27 +4491,6 @@ fix = {\n \t\t\"# endif\\n\";\n };\n \n-/*\n- * On VMS, use pragma extern_model instead of VAX-C keywords.\n- */\n-fix = {\n-    hackname  = vms_use_pragma_extern_model;\n-    select    = \"#if defined\\\\(__DECC\\\\) \\\\|\\\\| defined\\\\(__DECCXX\\\\)\\n\"\n-\t\t\"# pragma extern_model __save\\n\";\n-    mach      = \"*-*-*vms*\";\n-    c_fix     = format;\n-\n-    c_fix_arg = \"#if defined(__DECC) || defined(__DECCXX) || defined(__GNUC__)\\n\"\n-\t\t\"# pragma extern_model __save\\n\";\n-\n-    test_text = \"#if defined(__DECC) || defined(__DECCXX)\\n\"\n-\t\t\"# pragma extern_model __save\\n\"\n-\t\t\"# pragma extern_model strict_refdef\\n\"\n-\t\t\"   extern struct x zz$yy;\\n\"\n-\t\t\"# pragma extern_model __restore\\n\"\n-\t\t\"#endif\\n\";\n-};\n-\n /*\n  * On VMS, disable the use of dec-c string builtins\n  */\n@@ -4384,39 +4506,6 @@ fix = {\n     test_text = \"#if !defined(__VAX)\\n\";\n };\n \n-/*\n- * On VMS, change <resource.h> to <sys/resource.h> to avoid a\n- * conflict while building gcc.  Likewise for <builtins.h>\n- */\n-fix = {\n-    hackname  = vms_use_quoted_include;\n-    select    = \"(#[ \\t]*include[ \\t]+)<(resource|builtins)\\\\.h>\";\n-    mach      = \"*-*-*vms*\";\n-    files     = rtldef/wait.h, starlet_c/pthread.h;\n-    c_fix     = format;\n-\n-    c_fix_arg = '%1<sys/%2.h>';\n-\n-    test_text = \"#   include <resource.h>\";\n-};\n-\n-/*\n- * On VMS, add missing braces around sigset_t constants.\n- */\n-fix = {\n-    hackname  = vms_add_missing_braces;\n-    select    = \"(_SIG_[A-Z]+_SET[ \\t]+= \\\\{)(0x[0F]+, 0x[0F]+)\";\n-    mach      = \"*-*-*vms*\";\n-    files     = \"rtldef/signal.h\";\n-    c_fix     = format;\n-\n-    c_fix_arg = '%1 {%2} ';\n-\n-    test_text = \"static const __sigset_t _SIG_EMPTY_SET  = \"\n-                \"{0x00000000, 0x00000000},\\n\"\n-                \" _SIG_FULL_SET   = {0xFFFFFFFF, 0xFFFFFFFF};\\n\";\n-};\n-\n /*\n  * On VMS, fix incompatible redeclaration of hostalias.\n  */\n@@ -4436,21 +4525,23 @@ fix = {\n };\n \n /*\n- * On VMS, some DEC-C builtins are directly used.\n+ * On VMS, forward declare structure before referencing them in prototypes.\n  */\n fix = {\n-    hackname  = vms_decc_builtin;\n-    select    = \"(__MEMSET|__MEMMOVE|__MEMCPY|__STRLEN|__STRCPY)\";\n+    hackname  = vms_forward_declare_struct;\n+    select    = \"(/\\\\* forward decls for C\\\\+\\\\+ \\\\*/\\n)\"\n+                \"#ifdef __cplusplus\\n\";\n     mach      = \"*-*-*vms*\";\n-    files     = rtldef/string.h, rtldef/time.h, rtldef/strings.h,\n-                rtldef/socket.h;\n-    sed       = \"s@__MEMSET@memset@\";\n-    sed       = \"s@__MEMMOVE@memmove@\";\n-    sed       = \"s@__MEMCPY@memcpy@\";\n-    sed       = \"s@__STRLEN@strlen@\";\n-    sed       = \"s@__STRCPY@strcpy@\";\n+    files     = rtldef/if.h;\n+    c_fix     = format;\n \n-    test_text = \"define FD_ZERO(__p) __MEMSET((__p), 0, sizeof(*(__p)))\\n\";\n+    c_fix_arg = \"%1\"\n+                \"#if defined (__cplusplus) || defined (__GNUC__)\\n\";\n+\n+    test_text = \"/* forward decls for C++ */\\n\"\n+                \"#ifdef __cplusplus\\n\"\n+                \"struct foo;\\n\"\n+                \"#endif\\n\";\n };\n \n /*\n@@ -4474,39 +4565,56 @@ fix = {\n };\n \n /*\n- * On VMS, forward declare structure before referencing them in prototypes.\n+ * On VMS, force the use of fast setjmp, as the normal setjmp uses conditions\n+ * which is not yet fully supported by gcc.\n  */\n fix = {\n-    hackname  = vms_forward_declare_struct;\n-    select    = \"(/\\\\* forward decls for C\\\\+\\\\+ \\\\*/\\n)\"\n-                \"#ifdef __cplusplus\\n\";\n+    hackname  = vms_use_fast_setjmp;\n+    select    = \"(#[ \\t]*if[ \\t]*defined\\\\(__FAST_SETJMP\\\\)[ \\t]*\\\\|\\\\|)\";\n     mach      = \"*-*-*vms*\";\n-    files     = rtldef/if.h;\n+    files     = rtldef/setjmp.h;\n     c_fix     = format;\n \n-    c_fix_arg = \"%1\"\n-                \"#if defined (__cplusplus) || defined (__GNUC__)\\n\";\n+    c_fix_arg = \"%0 defined (__GNUC__) ||\";\n \n-    test_text = \"/* forward decls for C++ */\\n\"\n-                \"#ifdef __cplusplus\\n\"\n-                \"struct foo;\\n\"\n-                \"#endif\\n\";\n+    test_text = \"#   if defined(__FAST_SETJMP) || defined(__UNIX_SETJMP)\";\n };\n \n /*\n- * On VMS, force the use of fast setjmp, as the normal setjmp uses conditions\n- * which is not yet fully supported by gcc.\n+ * On VMS, use pragma extern_model instead of VAX-C keywords.\n  */\n fix = {\n-    hackname  = vms_use_fast_setjmp;\n-    select    = \"(#[ \\t]*if[ \\t]*defined\\\\(__FAST_SETJMP\\\\)[ \\t]*\\\\|\\\\|)\";\n+    hackname  = vms_use_pragma_extern_model;\n+    select    = \"#if defined\\\\(__DECC\\\\) \\\\|\\\\| defined\\\\(__DECCXX\\\\)\\n\"\n+\t\t\"# pragma extern_model __save\\n\";\n     mach      = \"*-*-*vms*\";\n-    files     = rtldef/setjmp.h;\n     c_fix     = format;\n \n-    c_fix_arg = \"%0 defined (__GNUC__) ||\";\n+    c_fix_arg = \"#if defined(__DECC) || defined(__DECCXX) || defined(__GNUC__)\\n\"\n+\t\t\"# pragma extern_model __save\\n\";\n \n-    test_text = \"#   if defined(__FAST_SETJMP) || defined(__UNIX_SETJMP)\";\n+    test_text = \"#if defined(__DECC) || defined(__DECCXX)\\n\"\n+\t\t\"# pragma extern_model __save\\n\"\n+\t\t\"# pragma extern_model strict_refdef\\n\"\n+\t\t\"   extern struct x zz$yy;\\n\"\n+\t\t\"# pragma extern_model __restore\\n\"\n+\t\t\"#endif\\n\";\n+};\n+\n+/*\n+ * On VMS, change <resource.h> to <sys/resource.h> to avoid a\n+ * conflict while building gcc.  Likewise for <builtins.h>\n+ */\n+fix = {\n+    hackname  = vms_use_quoted_include;\n+    select    = \"(#[ \\t]*include[ \\t]+)<(resource|builtins)\\\\.h>\";\n+    mach      = \"*-*-*vms*\";\n+    files     = rtldef/wait.h, starlet_c/pthread.h;\n+    c_fix     = format;\n+\n+    c_fix_arg = '%1<sys/%2.h>';\n+\n+    test_text = \"#   include <resource.h>\";\n };\n \n /*\n@@ -4773,73 +4881,4 @@ fix = {\n \n     test_text = \"extern char *\\tsprintf();\";\n };\n-\n-/*\n- *  Incorrect feraiseexcept extern inline in bits/fenv.h on x86_64\n- *  that fails when compiling for SSE-less 32-bit x86.\n- */\n-fix = {\n-    hackname  = feraiseexcept_nosse_invalid;\n-    mach      = 'i[34567]86-*-linux*', 'x86*-linux*', 'amd64-*-linux*';\n-    files     = bits/fenv.h;\n-    select    = \"^([\\t ]*)__asm__ __volatile__ \\\\(\\\"divss %0, %0 *\\\" : \"\n-\t\t\": \\\"x\\\" \\\\(__f\\\\)\\\\);$\";\n-    bypass    = \"\\\"fdiv .*; fwait\\\"\";\n-    \n-    c_fix     = format;\n-    c_fix_arg = <<- _EOText_\n-\t# ifdef __SSE_MATH__\n-\t%0\n-\t# else\n-\t%1__asm__ __volatile__ (\"fdiv %%%%st, %%%%st(0); fwait\"\n-\t%1\t\t\t: \"=t\" (__f) : \"0\" (__f));\n-\t# endif\n-\t_EOText_;\n-\n-    test_text = <<- _EOText_\n-\t  __asm__ __volatile__ (\"divss %0, %0\" : : \"x\" (__f));\n-\t_EOText_;\n-};\n-\n-/*\n- *  Incorrect feraiseexcept extern inline in bits/fenv.h on x86_64\n- *  that fails when compiling for SSE-less 32-bit x86.\n- */\n-fix = {\n-    hackname  = feraiseexcept_nosse_divbyzero;\n-    mach      = 'i[34567]86-*-linux*', 'x86*-linux*', 'amd64-*-linux*';\n-    files     = bits/fenv.h;\n-    select    = \"^([\\t ]*)__asm__ __volatile__ \\\\(\\\"divss %1, %0 *\\\" : \"\n-\t\t\": \\\"x\\\" \\\\(__f\\\\), \\\"x\\\" \\\\(__g\\\\)\\\\);$\";\n-    bypass    = \"\\\"fdivp .*; fwait\\\"\";\n-    \n-    c_fix     = format;\n-    c_fix_arg = <<- _EOText_\n-\t# ifdef __SSE_MATH__\n-\t%0\n-\t# else\n-\t%1__asm__ __volatile__ (\"fdivp %%%%st, %%%%st(1); fwait\"\n-\t%1\t\t\t: \"=t\" (__f) : \"0\" (__f), \"u\" (__g) : \"st(1)\");\n-\t# endif\n-\t_EOText_;\n-\n-    test_text = <<- _EOText_\n-\t  __asm__ __volatile__ (\"divss %1, %0\" : : \"x\" (__f), \"x\" (__g));\n-\t_EOText_;\n-};\n-\n-/*\n- *  Old Linux kernel's <compiler.h> header breaks Traditional CPP\n- */\n-fix = {\n-    hackname  = complier_h_tradcpp;\n-    files     = linux/compiler.h;\n-\n-    select    = \"#define __builtin_warning\\\\(x, y\\\\.\\\\.\\\\.\\\\) \\\\(1\\\\)\";\n-    c_fix     = format;\n-    c_fix_arg = \"/* __builtin_warning(x, y...) is obsolete */\";\n-\n-    test_text = \"#define __builtin_warning(x, y...) (1)\";\n-};\n-\n /*EOF*/"}, {"sha": "eec612b7e241f86b4bc402ddf5620af91ea14a63", "filename": "fixincludes/tests/base/bits/fenv.h", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1775b33f51ecff1824554750d249bedf380dd27/fixincludes%2Ftests%2Fbase%2Fbits%2Ffenv.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1775b33f51ecff1824554750d249bedf380dd27/fixincludes%2Ftests%2Fbase%2Fbits%2Ffenv.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ftests%2Fbase%2Fbits%2Ffenv.h?ref=e1775b33f51ecff1824554750d249bedf380dd27", "patch": "@@ -9,16 +9,6 @@\n \n \n \n-#if defined( FERAISEEXCEPT_NOSSE_INVALID_CHECK )\n-# ifdef __SSE_MATH__\n-  __asm__ __volatile__ (\"divss %0, %0\" : : \"x\" (__f));\n-# else\n-  __asm__ __volatile__ (\"fdiv %%st, %%st(0); fwait\"\n-  \t\t\t: \"=t\" (__f) : \"0\" (__f));\n-# endif\n-#endif  /* FERAISEEXCEPT_NOSSE_INVALID_CHECK */\n-\n-\n #if defined( FERAISEEXCEPT_NOSSE_DIVBYZERO_CHECK )\n # ifdef __SSE_MATH__\n   __asm__ __volatile__ (\"divss %1, %0\" : : \"x\" (__f), \"x\" (__g));\n@@ -27,3 +17,13 @@\n   \t\t\t: \"=t\" (__f) : \"0\" (__f), \"u\" (__g) : \"st(1)\");\n # endif\n #endif  /* FERAISEEXCEPT_NOSSE_DIVBYZERO_CHECK */\n+\n+\n+#if defined( FERAISEEXCEPT_NOSSE_INVALID_CHECK )\n+# ifdef __SSE_MATH__\n+  __asm__ __volatile__ (\"divss %0, %0\" : : \"x\" (__f));\n+# else\n+  __asm__ __volatile__ (\"fdiv %%st, %%st(0); fwait\"\n+  \t\t\t: \"=t\" (__f) : \"0\" (__f));\n+# endif\n+#endif  /* FERAISEEXCEPT_NOSSE_INVALID_CHECK */"}, {"sha": "3758cb9b5bcb772b2b00206b9e32170f57192ed0", "filename": "fixincludes/tests/base/iso/math_c99.h", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1775b33f51ecff1824554750d249bedf380dd27/fixincludes%2Ftests%2Fbase%2Fiso%2Fmath_c99.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1775b33f51ecff1824554750d249bedf380dd27/fixincludes%2Ftests%2Fbase%2Fiso%2Fmath_c99.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ftests%2Fbase%2Fiso%2Fmath_c99.h?ref=e1775b33f51ecff1824554750d249bedf380dd27", "patch": "@@ -20,6 +20,13 @@\n #endif  /* SOLARIS_MATH_1_CHECK */\n \n \n+#if defined( SOLARIS_MATH_10_CHECK )\n+#pragma ident\t\"@(#)math_c99.h\t1.12\t07/01/21 SMI\"\n+#undef\tisinf\n+#define\tisinf(x) __builtin_isinf(x)\n+#endif  /* SOLARIS_MATH_10_CHECK */\n+\n+\n #if defined( SOLARIS_MATH_2_CHECK )\n #ident\t\"@(#)math_c99.h\t1.9\t04/11/01 SMI\"\n #undef\tINFINITY\n@@ -68,10 +75,3 @@\n #undef\tisunordered\n #define\tisunordered(x, y)\t__builtin_isunordered(x, y)\n #endif  /* SOLARIS_MATH_9_CHECK */\n-\n-\n-#if defined( SOLARIS_MATH_10_CHECK )\n-#pragma ident\t\"@(#)math_c99.h\t1.12\t07/01/21 SMI\"\n-#undef\tisinf\n-#define\tisinf(x) __builtin_isinf(x)\n-#endif  /* SOLARIS_MATH_10_CHECK */"}, {"sha": "94e44efc26f3603791ee1b8372adfc3485adc47e", "filename": "fixincludes/tests/base/linux/vt.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1775b33f51ecff1824554750d249bedf380dd27/fixincludes%2Ftests%2Fbase%2Flinux%2Fvt.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1775b33f51ecff1824554750d249bedf380dd27/fixincludes%2Ftests%2Fbase%2Flinux%2Fvt.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ftests%2Fbase%2Flinux%2Fvt.h?ref=e1775b33f51ecff1824554750d249bedf380dd27", "patch": "@@ -10,5 +10,5 @@\n \n \n #if defined( SUSE_LINUX_VT_CXX_CHECK )\n-unsigned int newev;               /* New console (if changing) */\n+unsigned int newev;      /* New console (if changing) */\n #endif  /* SUSE_LINUX_VT_CXX_CHECK */"}, {"sha": "c39cd9472dd74b4af399fc9a03dd4b36172aa759", "filename": "fixincludes/tests/base/pthread.h", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1775b33f51ecff1824554750d249bedf380dd27/fixincludes%2Ftests%2Fbase%2Fpthread.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1775b33f51ecff1824554750d249bedf380dd27/fixincludes%2Ftests%2Fbase%2Fpthread.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ftests%2Fbase%2Fpthread.h?ref=e1775b33f51ecff1824554750d249bedf380dd27", "patch": "@@ -125,16 +125,6 @@ extern int __sigsetjmp (struct __jmp_buf_tag *__env, int __savemask);\n #endif  /* SOLARIS_MUTEX_INIT_2_CHECK */\n \n \n-#if defined( SOLARIS_RWLOCK_INIT_1_CHECK )\n-#ident \"@(#)pthread.h  1.26  98/04/12 SMI\"\n-#if __STDC__ - 0 == 0 && !defined(_NO_LONGLONG)\n-#define PTHREAD_RWLOCK_INITIALIZER\t{0, 0, 0, {0, 0, 0}, {0, 0}, {0, 0}}\n-#else\n-#define PTHREAD_RWLOCK_INITIALIZER\t{0, 0, 0, {{0}, {0}, {0}}, {{0}, {0}}, {{0}, {0}}}\n-#endif\n-#endif  /* SOLARIS_RWLOCK_INIT_1_CHECK */\n-\n-\n #if defined( SOLARIS_ONCE_INIT_1_CHECK )\n #pragma ident\t\"@(#)pthread.h\t1.37\t04/09/28 SMI\"\n #if __STDC__ - 0 == 0 && !defined(_NO_LONGLONG)\n@@ -156,6 +146,16 @@ extern int __sigsetjmp (struct __jmp_buf_tag *__env, int __savemask);\n #endif  /* SOLARIS_ONCE_INIT_2_CHECK */\n \n \n+#if defined( SOLARIS_RWLOCK_INIT_1_CHECK )\n+#ident \"@(#)pthread.h  1.26  98/04/12 SMI\"\n+#if __STDC__ - 0 == 0 && !defined(_NO_LONGLONG)\n+#define PTHREAD_RWLOCK_INITIALIZER\t{0, 0, 0, {0, 0, 0}, {0, 0}, {0, 0}}\n+#else\n+#define PTHREAD_RWLOCK_INITIALIZER\t{0, 0, 0, {{0}, {0}, {0}}, {{0}, {0}}, {{0}, {0}}}\n+#endif\n+#endif  /* SOLARIS_RWLOCK_INIT_1_CHECK */\n+\n+\n #if defined( THREAD_KEYWORD_CHECK )\n extern int pthread_create (pthread_t *__restrict __thr,\n extern int pthread_kill (pthread_t __thr, int __signo);"}, {"sha": "e01354831dea90726cc3b927c80a66d8d3225c4b", "filename": "fixincludes/tests/base/rtldef/string.h", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1775b33f51ecff1824554750d249bedf380dd27/fixincludes%2Ftests%2Fbase%2Frtldef%2Fstring.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1775b33f51ecff1824554750d249bedf380dd27/fixincludes%2Ftests%2Fbase%2Frtldef%2Fstring.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ftests%2Fbase%2Frtldef%2Fstring.h?ref=e1775b33f51ecff1824554750d249bedf380dd27", "patch": "@@ -9,13 +9,13 @@\n \n \n \n-#if defined( VMS_DISABLE_DECC_STRING_BUILTINS_CHECK )\n-#if !defined(__VAX) && !defined(__GNUC__)\n-\n-#endif  /* VMS_DISABLE_DECC_STRING_BUILTINS_CHECK */\n-\n-\n #if defined( VMS_DECC_BUILTIN_CHECK )\n define FD_ZERO(__p) memset((__p), 0, sizeof(*(__p)))\n \n #endif  /* VMS_DECC_BUILTIN_CHECK */\n+\n+\n+#if defined( VMS_DISABLE_DECC_STRING_BUILTINS_CHECK )\n+#if !defined(__VAX) && !defined(__GNUC__)\n+\n+#endif  /* VMS_DISABLE_DECC_STRING_BUILTINS_CHECK */"}]}