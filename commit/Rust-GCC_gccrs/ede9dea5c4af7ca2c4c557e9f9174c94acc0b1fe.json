{"sha": "ede9dea5c4af7ca2c4c557e9f9174c94acc0b1fe", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWRlOWRlYTVjNGFmN2NhMmM0YzU1N2U5ZjkxNzRjOTRhY2MwYjFmZQ==", "commit": {"author": {"name": "Steven G. Kargl", "email": "kargl@gcc.gnu.org", "date": "2018-12-29T19:14:32Z"}, "committer": {"name": "Steven G. Kargl", "email": "kargl@gcc.gnu.org", "date": "2018-12-29T19:14:32Z"}, "message": "expr.c (external_spec_function): Add ieee_support_subnormal to list of IEEE inquiry functions.\n\n2018-12-29  Steven G. Kargl  <kargl@gcc.gnu.org>\n\n\t* expr.c (external_spec_function): Add ieee_support_subnormal to list\n\tof IEEE inquiry functions.\n\n2018-12-29  Steven G. Kargl  <kargl@gcc.gnu.org>\n\n\t* gfortran.map: Expose subnormal functions in dynamic library.\n\t* ieee/ieee_arithmetic.F90: Add support for IEEE_SUBNORMAL,\n\tIEEE_POSITIVE_SUBNORMAL, and IEEE_NEGATIVE_SUBNORMAL.\n\t* ieee/ieee_helper.c: Ditto.\n\t* ieee/ieee_features.F90:  Add IEEE_SUBNORMAL.\n\n2018-12-29  Steven G. Kargl  <kargl@gcc.gnu.org>\n\n\t* gfortran.dg/ieee/ieee_11.F90: New test.\n\nFrom-SVN: r267468", "tree": {"sha": "20ff329b4ba94978ae0c6552340ae28cc2d483da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/20ff329b4ba94978ae0c6552340ae28cc2d483da"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ede9dea5c4af7ca2c4c557e9f9174c94acc0b1fe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ede9dea5c4af7ca2c4c557e9f9174c94acc0b1fe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ede9dea5c4af7ca2c4c557e9f9174c94acc0b1fe", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ede9dea5c4af7ca2c4c557e9f9174c94acc0b1fe/comments", "author": null, "committer": null, "parents": [{"sha": "600845521e68b5e0da136636ecf174eee8e5ee17", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/600845521e68b5e0da136636ecf174eee8e5ee17", "html_url": "https://github.com/Rust-GCC/gccrs/commit/600845521e68b5e0da136636ecf174eee8e5ee17"}], "stats": {"total": 116, "additions": 114, "deletions": 2}, "files": [{"sha": "30a7c0f3b0a412795fa89593cfaabb0801096de5", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ede9dea5c4af7ca2c4c557e9f9174c94acc0b1fe/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ede9dea5c4af7ca2c4c557e9f9174c94acc0b1fe/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=ede9dea5c4af7ca2c4c557e9f9174c94acc0b1fe", "patch": "@@ -1,3 +1,8 @@\n+2018-12-29  Steven G. Kargl  <kargl@gcc.gnu.org>\n+\n+\t* expr.c (external_spec_function): Add ieee_support_subnormal to list\n+\tof IEEE inquiry functions.\n+\n 2018-12-29  Steven G. Kargl  <kargl@gcc.gnu.org>\n \n \t* cpp.c (gfc_cpp_init):  Add pre-defined macros for INTEGER(1)"}, {"sha": "aad1496689f19b91c2685df8037bd11803419153", "filename": "gcc/fortran/expr.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ede9dea5c4af7ca2c4c557e9f9174c94acc0b1fe/gcc%2Ffortran%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ede9dea5c4af7ca2c4c557e9f9174c94acc0b1fe/gcc%2Ffortran%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fexpr.c?ref=ede9dea5c4af7ca2c4c557e9f9174c94acc0b1fe", "patch": "@@ -3068,6 +3068,7 @@ external_spec_function (gfc_expr *e)\n \t  || !strcmp (f->name, \"ieee_support_halting\")\n \t  || !strcmp (f->name, \"ieee_support_datatype\")\n \t  || !strcmp (f->name, \"ieee_support_denormal\")\n+\t  || !strcmp (f->name, \"ieee_support_subnormal\")\n \t  || !strcmp (f->name, \"ieee_support_divide\")\n \t  || !strcmp (f->name, \"ieee_support_inf\")\n \t  || !strcmp (f->name, \"ieee_support_io\")"}, {"sha": "5e9bd887c41741da3b3123a45e5bf17421e5a998", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ede9dea5c4af7ca2c4c557e9f9174c94acc0b1fe/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ede9dea5c4af7ca2c4c557e9f9174c94acc0b1fe/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ede9dea5c4af7ca2c4c557e9f9174c94acc0b1fe", "patch": "@@ -1,3 +1,7 @@\n+2018-12-29  Steven G. Kargl  <kargl@gcc.gnu.org>\n+\n+\t* gfortran.dg/ieee/ieee_11.F90: New test.\n+\n 2018-12-29  Jozef Lawrynowicz  <jozef.l@mittosystems.com>\n \n \t* gcc.target/msp430/critical-interrupt.c: New test."}, {"sha": "9f62e7087a2953f2111048bb2a1f7a3da6da40b1", "filename": "gcc/testsuite/gfortran.dg/ieee/ieee_11.F90", "status": "added", "additions": 74, "deletions": 0, "changes": 74, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ede9dea5c4af7ca2c4c557e9f9174c94acc0b1fe/gcc%2Ftestsuite%2Fgfortran.dg%2Fieee%2Fieee_11.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ede9dea5c4af7ca2c4c557e9f9174c94acc0b1fe/gcc%2Ftestsuite%2Fgfortran.dg%2Fieee%2Fieee_11.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fieee%2Fieee_11.F90?ref=ede9dea5c4af7ca2c4c557e9f9174c94acc0b1fe", "patch": "@@ -0,0 +1,74 @@\n+! { dg-do run }\n+program foo\n+\n+   use ieee_arithmetic\n+\n+   implicit none\n+\n+   call test04\n+   call test08\n+   call test10\n+   call test16\n+\n+   contains\n+\n+      subroutine test04\n+         real(4) x, y \n+         if (ieee_support_subnormal(x)) then\n+            x = ieee_value(x, ieee_positive_subnormal)\n+            y = ieee_value(y, ieee_positive_denormal)\n+            if (x /= y) stop 1\n+            x = ieee_value(x, ieee_negative_subnormal)\n+            y = ieee_value(y, ieee_negative_denormal)\n+            if (x /= y) stop 2\n+         end if\n+      end subroutine test04\n+\n+      subroutine test08\n+         real(8) x, y \n+         if (ieee_support_subnormal(x)) then\n+            x = ieee_value(x, ieee_positive_subnormal)\n+            y = ieee_value(y, ieee_positive_denormal)\n+            if (x /= y) stop 1\n+            x = ieee_value(x, ieee_negative_subnormal)\n+            y = ieee_value(y, ieee_negative_denormal)\n+            if (x /= y) stop 2\n+         end if\n+      end subroutine test08\n+\n+#ifdef __GFC_REAL_10__\n+      subroutine test10\n+         real(10) x, y \n+         if (ieee_support_subnormal(x)) then\n+            x = ieee_value(x, ieee_positive_subnormal)\n+            y = ieee_value(y, ieee_positive_denormal)\n+            if (x /= y) stop 1\n+            x = ieee_value(x, ieee_negative_subnormal)\n+            y = ieee_value(y, ieee_negative_denormal)\n+            if (x /= y) stop 2\n+         end if\n+      end subroutine test10\n+#else\n+      subroutine test10\n+      end subroutine test10\n+#endif\n+\n+#ifdef __GFC_REAL_16__\n+      subroutine test16\n+         real(16) x, y \n+         if (ieee_support_subnormal(x)) then\n+            x = ieee_value(x, ieee_positive_subnormal)\n+            y = ieee_value(y, ieee_positive_denormal)\n+            if (x /= y) stop 1\n+            x = ieee_value(x, ieee_negative_subnormal)\n+            y = ieee_value(y, ieee_negative_denormal)\n+            if (x /= y) stop 2\n+         end if\n+      end subroutine test16\n+#else\n+      subroutine test16\n+      end subroutine test16\n+#endif\n+\n+\n+end program foo"}, {"sha": "ab0dd2115ffeedb578ee8eb2e08291eb5e580dfb", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ede9dea5c4af7ca2c4c557e9f9174c94acc0b1fe/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ede9dea5c4af7ca2c4c557e9f9174c94acc0b1fe/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=ede9dea5c4af7ca2c4c557e9f9174c94acc0b1fe", "patch": "@@ -1,3 +1,11 @@\n+2018-12-29  Steven G. Kargl  <kargl@gcc.gnu.org>\n+\n+\t* gfortran.map: Expose subnormal functions in dynamic library.\n+\t* ieee/ieee_arithmetic.F90: Add support for IEEE_SUBNORMAL,\n+\tIEEE_POSITIVE_SUBNORMAL, and IEEE_NEGATIVE_SUBNORMAL.\n+\t* ieee/ieee_helper.c: Ditto.\n+\t* ieee/ieee_features.F90:  Add IEEE_SUBNORMAL.\n+\n 2018-12-29  Steven G. Kargl  <kargl@gcc.gnu.org>\n       \n \tPR fortran/88342"}, {"sha": "ce4fe201b1e6aa7121b63c0c146a858a7ffd406e", "filename": "libgfortran/gfortran.map", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ede9dea5c4af7ca2c4c557e9f9174c94acc0b1fe/libgfortran%2Fgfortran.map", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ede9dea5c4af7ca2c4c557e9f9174c94acc0b1fe/libgfortran%2Fgfortran.map", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgfortran.map?ref=ede9dea5c4af7ca2c4c557e9f9174c94acc0b1fe", "patch": "@@ -1573,4 +1573,9 @@ GFORTRAN_9 {\n   _gfortran_sfindloc2_s1;\n   _gfortran_sfindloc2_s4;\n   _gfortran_st_wait_async;\n+  __ieee_arithmetic_MOD_ieee_support_subnormal_10;\n+  __ieee_arithmetic_MOD_ieee_support_subnormal_16;\n+  __ieee_arithmetic_MOD_ieee_support_subnormal_4;\n+  __ieee_arithmetic_MOD_ieee_support_subnormal_8;\n+  __ieee_arithmetic_MOD_ieee_support_subnormal_noarg;\n };"}, {"sha": "ac6334cba70913eb75e2502a22cf287d439a37c4", "filename": "libgfortran/ieee/ieee_arithmetic.F90", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ede9dea5c4af7ca2c4c557e9f9174c94acc0b1fe/libgfortran%2Fieee%2Fieee_arithmetic.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ede9dea5c4af7ca2c4c557e9f9174c94acc0b1fe/libgfortran%2Fieee%2Fieee_arithmetic.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fieee%2Fieee_arithmetic.F90?ref=ede9dea5c4af7ca2c4c557e9f9174c94acc0b1fe", "patch": "@@ -55,9 +55,11 @@ module IEEE_ARITHMETIC\n     IEEE_NEGATIVE_INF      = IEEE_CLASS_TYPE(3), &\n     IEEE_NEGATIVE_NORMAL   = IEEE_CLASS_TYPE(4), &\n     IEEE_NEGATIVE_DENORMAL = IEEE_CLASS_TYPE(5), &\n+    IEEE_NEGATIVE_SUBNORMAL= IEEE_CLASS_TYPE(5), &\n     IEEE_NEGATIVE_ZERO     = IEEE_CLASS_TYPE(6), &\n     IEEE_POSITIVE_ZERO     = IEEE_CLASS_TYPE(7), &\n     IEEE_POSITIVE_DENORMAL = IEEE_CLASS_TYPE(8), &\n+    IEEE_POSITIVE_SUBNORMAL= IEEE_CLASS_TYPE(8), &\n     IEEE_POSITIVE_NORMAL   = IEEE_CLASS_TYPE(9), &\n     IEEE_POSITIVE_INF      = IEEE_CLASS_TYPE(10)\n \n@@ -795,6 +797,7 @@ pure integer function support_underflow_control_helper(kind) &\n \n SUPPORTGENERIC(IEEE_SUPPORT_DATATYPE)\n SUPPORTGENERIC(IEEE_SUPPORT_DENORMAL)\n+SUPPORTGENERIC(IEEE_SUPPORT_SUBNORMAL)\n SUPPORTGENERIC(IEEE_SUPPORT_DIVIDE)\n SUPPORTGENERIC(IEEE_SUPPORT_INF)\n SUPPORTGENERIC(IEEE_SUPPORT_IO)\n@@ -1359,7 +1362,7 @@ pure logical function NAME/**/_NOARG () result(res) ; \\\n #endif\n SUPPORTMACRO_NOARG(IEEE_SUPPORT_DATATYPE,.true.)\n \n-! IEEE_SUPPORT_DENORMAL\n+! IEEE_SUPPORT_DENORMAL and IEEE_SUPPORT_SUBNORMAL\n \n SUPPORTMACRO(IEEE_SUPPORT_DENORMAL,4,.true.)\n SUPPORTMACRO(IEEE_SUPPORT_DENORMAL,8,.true.)\n@@ -1371,6 +1374,16 @@ pure logical function NAME/**/_NOARG () result(res) ; \\\n #endif\n SUPPORTMACRO_NOARG(IEEE_SUPPORT_DENORMAL,.true.)\n \n+SUPPORTMACRO(IEEE_SUPPORT_SUBNORMAL,4,.true.)\n+SUPPORTMACRO(IEEE_SUPPORT_SUBNORMAL,8,.true.)\n+#ifdef HAVE_GFC_REAL_10\n+SUPPORTMACRO(IEEE_SUPPORT_SUBNORMAL,10,.true.)\n+#endif\n+#ifdef HAVE_GFC_REAL_16\n+SUPPORTMACRO(IEEE_SUPPORT_SUBNORMAL,16,.true.)\n+#endif\n+SUPPORTMACRO_NOARG(IEEE_SUPPORT_SUBNORMAL,.true.)\n+\n ! IEEE_SUPPORT_DIVIDE\n \n SUPPORTMACRO(IEEE_SUPPORT_DIVIDE,4,.true.)"}, {"sha": "af8185e827769d70cfdc2cafc83bd10fb5690339", "filename": "libgfortran/ieee/ieee_features.F90", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ede9dea5c4af7ca2c4c557e9f9174c94acc0b1fe/libgfortran%2Fieee%2Fieee_features.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ede9dea5c4af7ca2c4c557e9f9174c94acc0b1fe/libgfortran%2Fieee%2Fieee_features.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fieee%2Fieee_features.F90?ref=ede9dea5c4af7ca2c4c557e9f9174c94acc0b1fe", "patch": "@@ -36,6 +36,7 @@ module IEEE_FEATURES\n   type(IEEE_FEATURES_TYPE), parameter, public :: &\n     IEEE_DATATYPE       = IEEE_FEATURES_TYPE(0), &\n     IEEE_DENORMAL       = IEEE_FEATURES_TYPE(1), &\n+    IEEE_SUBNORMAL      = IEEE_FEATURES_TYPE(1), &\n     IEEE_DIVIDE         = IEEE_FEATURES_TYPE(2), &\n     IEEE_HALTING        = IEEE_FEATURES_TYPE(3), &\n     IEEE_INEXACT_FLAG   = IEEE_FEATURES_TYPE(4), &"}, {"sha": "35231274a1a706ea36c9cad5324cd8126721032c", "filename": "libgfortran/ieee/ieee_helper.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ede9dea5c4af7ca2c4c557e9f9174c94acc0b1fe/libgfortran%2Fieee%2Fieee_helper.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ede9dea5c4af7ca2c4c557e9f9174c94acc0b1fe/libgfortran%2Fieee%2Fieee_helper.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fieee%2Fieee_helper.c?ref=ede9dea5c4af7ca2c4c557e9f9174c94acc0b1fe", "patch": "@@ -50,7 +50,8 @@ internal_proto(ieee_class_helper_16);\n enum { IEEE_OTHER_VALUE = 0, IEEE_SIGNALING_NAN, IEEE_QUIET_NAN,\n   IEEE_NEGATIVE_INF, IEEE_NEGATIVE_NORMAL, IEEE_NEGATIVE_DENORMAL,\n   IEEE_NEGATIVE_ZERO, IEEE_POSITIVE_ZERO, IEEE_POSITIVE_DENORMAL,\n-  IEEE_POSITIVE_NORMAL, IEEE_POSITIVE_INF };\n+  IEEE_POSITIVE_NORMAL, IEEE_POSITIVE_INF, IEEE_SUBNORMAL,\n+  IEEE_NEGATIVE_SUBNORMAL, IEEE_POSITIVE_SUBNORMAL };\n \n #define CLASSMACRO(TYPE) \\\n   int ieee_class_helper_ ## TYPE (GFC_REAL_ ## TYPE *value) \\"}]}