{"sha": "c8d3b4ff3f469a3553c0e5d27b5d25dd03bf34e0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzhkM2I0ZmYzZjQ2OWEzNTUzYzBlNWQyN2I1ZDI1ZGQwM2JmMzRlMA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-05-12T15:00:49Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-05-12T15:00:49Z"}, "message": "[multiple changes]\n\n2015-05-12  Pierre-Marie de Rodat  <derodat@adacore.com>\n\n\t* sem_ch10.adb (Sem_Ch10.Analyze_Proper_Body): Generate SCOs\n\tfor subunit in generic units.\n\n2015-05-12  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_elab.adb (Check_A_Call): Avoid checking internal call\n\tfrom Valid_Scalars\n\n2015-05-12  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch6.adb (Process_Formals): An untagged incomplete type\n\tis legal in the profile of a null procedure.\n\n2015-05-12  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch12.adb (Validate_Derived_Type_Instance): Handle properly\n\tthe checks on a derived formal whose parent type is a previous\n\tformal that is not a derived type.\n\n2015-05-12  Robert Dewar  <dewar@adacore.com>\n\n\t* aspects.ads, aspects.adb: Add entries for aspect Volatile_Full_Access\n\t* einfo.adb (Has_Volatile_Full_Access): New flag.\n\t(Has_Volatile_Full_Access): New flag.\n\t* einfo.ads (Has_Volatile_Full_Access): New flag.\n\t* par-prag.adb: Add dummy entry for Volatile_Full_Access.\n\t* sem_prag.adb (Analyze_Pragma, case Volatile_Full_Access):\n\tImplement new pragma.\n\t* snames.ads-tmpl: Add entries for pragma Volatile_Full_Access.\n\n2015-05-12  Robert Dewar  <dewar@adacore.com>\n\n\t* targparm.ads: Minor reformatting.\n\n2015-05-12  Robert Dewar  <dewar@adacore.com>\n\n\t* a-reatim.adb (Time_Of): Properly detect overflow when TS = 0.0.\n\t* a-reatim.ads: Minor reformatting.\n\nFrom-SVN: r223074", "tree": {"sha": "aaa9b028bcb542cb164ac3d9379d1b02616ca275", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aaa9b028bcb542cb164ac3d9379d1b02616ca275"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c8d3b4ff3f469a3553c0e5d27b5d25dd03bf34e0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8d3b4ff3f469a3553c0e5d27b5d25dd03bf34e0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c8d3b4ff3f469a3553c0e5d27b5d25dd03bf34e0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8d3b4ff3f469a3553c0e5d27b5d25dd03bf34e0/comments", "author": null, "committer": null, "parents": [{"sha": "98b5dc6118b9298790e842075a86a9be832e79a4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98b5dc6118b9298790e842075a86a9be832e79a4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/98b5dc6118b9298790e842075a86a9be832e79a4"}], "stats": {"total": 368, "additions": 273, "deletions": 95}, "files": [{"sha": "e189279b3c21e21cb07a17d036fdf02dd1969fb7", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8d3b4ff3f469a3553c0e5d27b5d25dd03bf34e0/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8d3b4ff3f469a3553c0e5d27b5d25dd03bf34e0/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=c8d3b4ff3f469a3553c0e5d27b5d25dd03bf34e0", "patch": "@@ -1,3 +1,44 @@\n+2015-05-12  Pierre-Marie de Rodat  <derodat@adacore.com>\n+\n+\t* sem_ch10.adb (Sem_Ch10.Analyze_Proper_Body): Generate SCOs\n+\tfor subunit in generic units.\n+\n+2015-05-12  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_elab.adb (Check_A_Call): Avoid checking internal call\n+\tfrom Valid_Scalars\n+\n+2015-05-12  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch6.adb (Process_Formals): An untagged incomplete type\n+\tis legal in the profile of a null procedure.\n+\n+2015-05-12  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch12.adb (Validate_Derived_Type_Instance): Handle properly\n+\tthe checks on a derived formal whose parent type is a previous\n+\tformal that is not a derived type.\n+\n+2015-05-12  Robert Dewar  <dewar@adacore.com>\n+\n+\t* aspects.ads, aspects.adb: Add entries for aspect Volatile_Full_Access\n+\t* einfo.adb (Has_Volatile_Full_Access): New flag.\n+\t(Has_Volatile_Full_Access): New flag.\n+\t* einfo.ads (Has_Volatile_Full_Access): New flag.\n+\t* par-prag.adb: Add dummy entry for Volatile_Full_Access.\n+\t* sem_prag.adb (Analyze_Pragma, case Volatile_Full_Access):\n+\tImplement new pragma.\n+\t* snames.ads-tmpl: Add entries for pragma Volatile_Full_Access.\n+\n+2015-05-12  Robert Dewar  <dewar@adacore.com>\n+\n+\t* targparm.ads: Minor reformatting.\n+\n+2015-05-12  Robert Dewar  <dewar@adacore.com>\n+\n+\t* a-reatim.adb (Time_Of): Properly detect overflow when TS = 0.0.\n+\t* a-reatim.ads: Minor reformatting.\n+\n 2015-05-12  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* einfo.ads: Update the documentation of flags"}, {"sha": "c313d50142714a33e79d1369738769aa0a8c39ca", "filename": "gcc/ada/a-reatim.adb", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8d3b4ff3f469a3553c0e5d27b5d25dd03bf34e0/gcc%2Fada%2Fa-reatim.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8d3b4ff3f469a3553c0e5d27b5d25dd03bf34e0/gcc%2Fada%2Fa-reatim.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-reatim.adb?ref=c8d3b4ff3f469a3553c0e5d27b5d25dd03bf34e0", "patch": "@@ -228,6 +228,28 @@ package body Ada.Real_Time is\n \n    function Time_Of (SC : Seconds_Count; TS : Time_Span) return Time is\n    begin\n+      --  Simple case first, TS = 0.0, we need to make sure SC is in range\n+\n+      if TS = 0.0 then\n+         if SC >= Seconds_Count (Duration (Time_Span_First) + Duration'(0.5))\n+               and then\n+            SC <= Seconds_Count (Duration (Time_Span_Last)  - Duration'(0.5))\n+         then\n+            --  Don't need any further checks after that manual check\n+\n+            declare\n+               pragma Suppress (All_Checks);\n+            begin\n+               return Time (SC);\n+            end;\n+\n+         --  Here we have a Seconds_Count value that is out of range\n+\n+         else\n+            raise Constraint_Error;\n+         end if;\n+      end if;\n+\n       --  We want to return Time (SC) + TS. To avoid spurious overflows in\n       --  the intermediate result Time (SC) we take advantage of the different\n       --  signs in SC and TS (when that is the case)."}, {"sha": "4fbe7be54cff6223ab50bdaffa3aee6b98541715", "filename": "gcc/ada/a-reatim.ads", "status": "modified", "additions": 10, "deletions": 9, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8d3b4ff3f469a3553c0e5d27b5d25dd03bf34e0/gcc%2Fada%2Fa-reatim.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8d3b4ff3f469a3553c0e5d27b5d25dd03bf34e0/gcc%2Fada%2Fa-reatim.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-reatim.ads?ref=c8d3b4ff3f469a3553c0e5d27b5d25dd03bf34e0", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  S p e c                                 --\n --                                                                          --\n---          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -91,18 +91,23 @@ package Ada.Real_Time is\n    pragma Ada_05 (Minutes);\n \n    type Seconds_Count is new Long_Long_Integer;\n-   --  Seconds_Count needs 64 bits, since Time has the full range of\n+   --  Seconds_Count needs 64 bits, since the type Time has the full range of\n    --  Duration. The delta of Duration is 10 ** (-9), so the maximum number of\n    --  seconds is 2**63/10**9 = 8*10**9 which does not quite fit in 32 bits.\n    --  However, rather than make this explicitly 64-bits we derive from\n-   --  Long_Long_Integer. In normal usage this will have the same effect.\n-   --  But in the case of CodePeer with a target configuration file with a\n-   --  maximum integer size of 32, it allows analysis of this unit.\n+   --  Long_Long_Integer. In normal usage this will have the same effect. But\n+   --  in the case of CodePeer with a target configuration file with a maximum\n+   --  integer size of 32, it allows analysis of this unit.\n \n    procedure Split (T : Time; SC : out Seconds_Count; TS : out Time_Span);\n    function Time_Of (SC : Seconds_Count; TS : Time_Span) return Time;\n \n private\n+   --  Time and Time_Span are represented in 64-bit Duration value in\n+   --  nanoseconds. For example, 1 second and 1 nanosecond is represented\n+   --  as the stored integer 1_000_000_001. This is for the 64-bit Duration\n+   --  case, not clear if this also is used for 32-bit Duration values.\n+\n    type Time is new Duration;\n \n    Time_First : constant Time := Time'First;\n@@ -122,10 +127,6 @@ private\n    Tick : constant Time_Span :=\n             Time_Span (System.Task_Primitives.Operations.RT_Resolution);\n \n-   --  Time and Time_Span are represented in 64-bit Duration value in\n-   --  nanoseconds. For example, 1 second and 1 nanosecond is represented\n-   --  as the stored integer 1_000_000_001.\n-\n    pragma Import (Intrinsic, \"<\");\n    pragma Import (Intrinsic, \"<=\");\n    pragma Import (Intrinsic, \">\");"}, {"sha": "976b89d7ec4a3079376734fac66f2c1429190937", "filename": "gcc/ada/aspects.adb", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8d3b4ff3f469a3553c0e5d27b5d25dd03bf34e0/gcc%2Fada%2Faspects.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8d3b4ff3f469a3553c0e5d27b5d25dd03bf34e0/gcc%2Fada%2Faspects.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Faspects.adb?ref=c8d3b4ff3f469a3553c0e5d27b5d25dd03bf34e0", "patch": "@@ -55,6 +55,7 @@ package body Aspects is\n       Aspect_Unchecked_Union         => True,\n       Aspect_Variable_Indexing       => True,\n       Aspect_Volatile                => True,\n+      Aspect_Volatile_Full_Access    => True,\n       others                         => False);\n \n    --  The following array indicates type aspects that are inherited and apply\n@@ -606,6 +607,7 @@ package body Aspects is\n     Aspect_Value_Size                   => Aspect_Value_Size,\n     Aspect_Volatile                     => Aspect_Volatile,\n     Aspect_Volatile_Components          => Aspect_Volatile_Components,\n+    Aspect_Volatile_Full_Access         => Aspect_Volatile_Full_Access,\n     Aspect_Warnings                     => Aspect_Warnings,\n     Aspect_Write                        => Aspect_Write);\n "}, {"sha": "41fa96100dc80ce4f4be719279e69b729831b91c", "filename": "gcc/ada/aspects.ads", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8d3b4ff3f469a3553c0e5d27b5d25dd03bf34e0/gcc%2Fada%2Faspects.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8d3b4ff3f469a3553c0e5d27b5d25dd03bf34e0/gcc%2Fada%2Faspects.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Faspects.ads?ref=c8d3b4ff3f469a3553c0e5d27b5d25dd03bf34e0", "patch": "@@ -201,7 +201,8 @@ package Aspects is\n       Aspect_Unreferenced,                  -- GNAT\n       Aspect_Unreferenced_Objects,          -- GNAT\n       Aspect_Volatile,\n-      Aspect_Volatile_Components);\n+      Aspect_Volatile_Components,\n+      Aspect_Volatile_Full_Access);         -- GNAT\n \n    subtype Aspect_Id_Exclude_No_Aspect is\n      Aspect_Id range Aspect_Id'Succ (No_Aspect) .. Aspect_Id'Last;\n@@ -503,6 +504,7 @@ package Aspects is\n       Aspect_Variable_Indexing            => Name_Variable_Indexing,\n       Aspect_Volatile                     => Name_Volatile,\n       Aspect_Volatile_Components          => Name_Volatile_Components,\n+      Aspect_Volatile_Full_Access         => Name_Volatile_Full_Access,\n       Aspect_Warnings                     => Name_Warnings,\n       Aspect_Write                        => Name_Write);\n \n@@ -737,7 +739,8 @@ package Aspects is\n       Aspect_Storage_Size                 => Rep_Aspect,\n       Aspect_Value_Size                   => Rep_Aspect,\n       Aspect_Volatile                     => Rep_Aspect,\n-      Aspect_Volatile_Components          => Rep_Aspect);\n+      Aspect_Volatile_Components          => Rep_Aspect,\n+      Aspect_Volatile_Full_Access         => Rep_Aspect);\n \n    ------------------------------------------------\n    -- Handling of Aspect Specifications on Stubs --"}, {"sha": "af85c2b10639f807828fe5111f3beffedbce94c8", "filename": "gcc/ada/einfo.adb", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8d3b4ff3f469a3553c0e5d27b5d25dd03bf34e0/gcc%2Fada%2Feinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8d3b4ff3f469a3553c0e5d27b5d25dd03bf34e0/gcc%2Fada%2Feinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.adb?ref=c8d3b4ff3f469a3553c0e5d27b5d25dd03bf34e0", "patch": "@@ -591,8 +591,8 @@ package body Einfo is\n    --    Has_Nested_Subprogram           Flag282\n    --    Is_Uplevel_Referenced_Entity    Flag283\n    --    Is_Unimplemented                Flag284\n+   --    Has_Volatile_Full_Access        Flag285\n \n-   --    (unused)                        Flag285\n    --    (unused)                        Flag286\n    --    (unused)                        Flag287\n    --    (unused)                        Flag288\n@@ -1849,6 +1849,11 @@ package body Einfo is\n       return Flag87 (Implementation_Base_Type (Id));\n    end Has_Volatile_Components;\n \n+   function Has_Volatile_Full_Access (Id : E) return B is\n+   begin\n+      return Flag285 (Id);\n+   end Has_Volatile_Full_Access;\n+\n    function Has_Xref_Entry (Id : E) return B is\n    begin\n       return Flag182 (Id);\n@@ -4730,6 +4735,11 @@ package body Einfo is\n       Set_Flag87 (Id, V);\n    end Set_Has_Volatile_Components;\n \n+   procedure Set_Has_Volatile_Full_Access (Id : E; V : B := True) is\n+   begin\n+      Set_Flag285 (Id, V);\n+   end Set_Has_Volatile_Full_Access;\n+\n    procedure Set_Has_Xref_Entry (Id : E; V : B := True) is\n    begin\n       Set_Flag182 (Id, V);\n@@ -8695,6 +8705,7 @@ package body Einfo is\n       W (\"Has_Uplevel_Reference\",           Flag215 (Id));\n       W (\"Has_Visible_Refinement\",          Flag263 (Id));\n       W (\"Has_Volatile_Components\",         Flag87  (Id));\n+      W (\"Has_Volatile_Full_Access\",        Flag285 (Id));\n       W (\"Has_Xref_Entry\",                  Flag182 (Id));\n       W (\"In_Package_Body\",                 Flag48  (Id));\n       W (\"In_Private_Part\",                 Flag45  (Id));"}, {"sha": "bf21f76015fc1a637c755e47880f679a6fcb9c42", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 63, "deletions": 49, "changes": 112, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8d3b4ff3f469a3553c0e5d27b5d25dd03bf34e0/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8d3b4ff3f469a3553c0e5d27b5d25dd03bf34e0/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=c8d3b4ff3f469a3553c0e5d27b5d25dd03bf34e0", "patch": "@@ -2046,6 +2046,12 @@ package Einfo is\n --       type the pragma will be chained to the rep item chain of the first\n --       subtype in the usual manner.\n \n+--    Has_Volatile_Full_Access (Flag285)\n+--       Defined in all type entities, and also in constants, components and\n+--       variables. Set if a pragma Volatile_Full_Access applies to the entity.\n+--       In the case of private and incomplete types, this flag is set in\n+--       both the partial view and the full view.\n+\n --    Has_Xref_Entry (Flag182)\n --       Defined in all entities. Set if an entity has an entry in the Xref\n --       information generated in ali files. This is true for all source\n@@ -5412,6 +5418,7 @@ package Einfo is\n    --    Has_Task                            (Flag30)   (base type only)\n    --    Has_Unchecked_Union                 (Flag123)  (base type only)\n    --    Has_Volatile_Components             (Flag87)   (base type only)\n+   --    Has_Volatile_Full_Access            (Flag285)\n    --    In_Use                              (Flag8)\n    --    Is_Abstract_Type                    (Flag146)\n    --    Is_Asynchronous                     (Flag81)\n@@ -5423,10 +5430,10 @@ package Einfo is\n    --    Is_Frozen                           (Flag4)\n    --    Is_Generic_Actual_Type              (Flag94)\n    --    Is_Independent                      (Flag268)\n-   --    Is_RACW_Stub_Type                   (Flag244)\n    --    Is_Non_Static_Subtype               (Flag109)\n    --    Is_Packed                           (Flag51)   (base type only)\n    --    Is_Private_Composite                (Flag107)\n+   --    Is_RACW_Stub_Type                   (Flag244)\n    --    Is_Unsigned_Type                    (Flag144)\n    --    Is_Volatile                         (Flag16)\n    --    Itype_Printed                       (Flag202)  (itypes only)\n@@ -5595,12 +5602,13 @@ package Einfo is\n    --    Related_Type                        (Node27)\n    --    Has_Biased_Representation           (Flag139)\n    --    Has_Per_Object_Constraint           (Flag154)\n+   --    Has_Volatile_Full_Access            (Flag285)\n    --    Is_Atomic                           (Flag85)\n    --    Is_Independent                      (Flag268)\n+   --    Is_Return_Object                    (Flag209)\n    --    Is_Tag                              (Flag78)\n    --    Is_Volatile                         (Flag16)\n    --    Treat_As_Volatile                   (Flag41)\n-   --    Is_Return_Object                    (Flag209)\n    --    Next_Component                      (synth)\n    --    Next_Component_Or_Discriminant      (synth)\n \n@@ -5633,6 +5641,7 @@ package Einfo is\n    --    Has_Size_Clause                     (Flag29)\n    --    Has_Thunks                          (Flag228)  (constants only)\n    --    Has_Volatile_Components             (Flag87)\n+   --    Has_Volatile_Full_Access            (Flag285)\n    --    Is_Atomic                           (Flag85)\n    --    Is_Eliminated                       (Flag124)\n    --    Is_Independent                      (Flag268)\n@@ -5641,9 +5650,9 @@ package Einfo is\n    --    Is_True_Constant                    (Flag163)\n    --    Is_Uplevel_Referenced_Entity        (Flag283)\n    --    Is_Volatile                         (Flag16)\n-   --    Stores_Attribute_Old_Prefix         (Flag270)  (constants only)\n    --    Optimize_Alignment_Space            (Flag241)  (constants only)\n    --    Optimize_Alignment_Time             (Flag242)  (constants only)\n+   --    Stores_Attribute_Old_Prefix         (Flag270)  (constants only)\n    --    Treat_As_Volatile                   (Flag41)\n    --    Address_Clause                      (synth)\n    --    Alignment_Clause                    (synth)\n@@ -6364,16 +6373,17 @@ package Einfo is\n    --    Has_Initial_Value                   (Flag219)\n    --    Has_Size_Clause                     (Flag29)\n    --    Has_Volatile_Components             (Flag87)\n+   --    Has_Volatile_Full_Access            (Flag285)\n    --    Is_Atomic                           (Flag85)\n    --    Is_Eliminated                       (Flag124)\n    --    Is_Independent                      (Flag268)\n    --    Is_Processed_Transient              (Flag252)\n+   --    Is_Return_Object                    (Flag209)\n    --    Is_Safe_To_Reevaluate               (Flag249)\n    --    Is_Shared_Passive                   (Flag60)\n    --    Is_True_Constant                    (Flag163)\n-   --    Is_Volatile                         (Flag16)\n-   --    Is_Return_Object                    (Flag209)\n    --    Is_Uplevel_Referenced_Entity        (Flag283)\n+   --    Is_Volatile                         (Flag16)\n    --    OK_To_Rename                        (Flag247)\n    --    Optimize_Alignment_Space            (Flag241)\n    --    Optimize_Alignment_Time             (Flag242)\n@@ -6630,12 +6640,11 @@ package Einfo is\n    function Associated_Node_For_Itype           (Id : E) return N;\n    function Associated_Storage_Pool             (Id : E) return E;\n    function Barrier_Function                    (Id : E) return N;\n+   function BIP_Initialization_Call             (Id : E) return N;\n    function Block_Node                          (Id : E) return N;\n    function Body_Entity                         (Id : E) return E;\n    function Body_Needed_For_SAL                 (Id : E) return B;\n    function Body_References                     (Id : E) return L;\n-   function BIP_Initialization_Call             (Id : E) return N;\n-   function CR_Discriminant                     (Id : E) return E;\n    function C_Pass_By_Copy                      (Id : E) return B;\n    function Can_Never_Be_Null                   (Id : E) return B;\n    function Can_Use_Internal_Rep                (Id : E) return B;\n@@ -6655,12 +6664,9 @@ package Einfo is\n    function Corresponding_Protected_Entry       (Id : E) return E;\n    function Corresponding_Record_Type           (Id : E) return E;\n    function Corresponding_Remote_Type           (Id : E) return E;\n+   function CR_Discriminant                     (Id : E) return E;\n    function Current_Use_Clause                  (Id : E) return E;\n    function Current_Value                       (Id : E) return N;\n-   function DTC_Entity                          (Id : E) return E;\n-   function DT_Entry_Count                      (Id : E) return U;\n-   function DT_Offset_To_Top_Func               (Id : E) return E;\n-   function DT_Position                         (Id : E) return U;\n    function Debug_Info_Off                      (Id : E) return B;\n    function Debug_Renaming_Link                 (Id : E) return E;\n    function Default_Aspect_Component_Value      (Id : E) return N;\n@@ -6685,6 +6691,10 @@ package Einfo is\n    function Discriminant_Default_Value          (Id : E) return N;\n    function Discriminant_Number                 (Id : E) return U;\n    function Dispatch_Table_Wrappers             (Id : E) return L;\n+   function DT_Entry_Count                      (Id : E) return U;\n+   function DT_Offset_To_Top_Func               (Id : E) return E;\n+   function DT_Position                         (Id : E) return U;\n+   function DTC_Entity                          (Id : E) return E;\n    function Elaborate_Body_Desirable            (Id : E) return B;\n    function Elaboration_Entity                  (Id : E) return E;\n    function Elaboration_Entity_Required         (Id : E) return B;\n@@ -6815,6 +6825,7 @@ package Einfo is\n    function Has_Uplevel_Reference               (Id : E) return B;\n    function Has_Visible_Refinement              (Id : E) return B;\n    function Has_Volatile_Components             (Id : E) return B;\n+   function Has_Volatile_Full_Access            (Id : E) return B;\n    function Has_Xref_Entry                      (Id : E) return B;\n    function Hiding_Loop_Variable                (Id : E) return E;\n    function Homonym                             (Id : E) return E;\n@@ -6836,20 +6847,20 @@ package Einfo is\n    function Is_Asynchronous                     (Id : E) return B;\n    function Is_Atomic                           (Id : E) return B;\n    function Is_Bit_Packed_Array                 (Id : E) return B;\n-   function Is_CPP_Class                        (Id : E) return B;\n    function Is_Called                           (Id : E) return B;\n    function Is_Character_Type                   (Id : E) return B;\n    function Is_Checked_Ghost_Entity             (Id : E) return B;\n    function Is_Child_Unit                       (Id : E) return B;\n    function Is_Class_Wide_Equivalent_Type       (Id : E) return B;\n    function Is_Compilation_Unit                 (Id : E) return B;\n    function Is_Completely_Hidden                (Id : E) return B;\n-   function Is_Constr_Subt_For_UN_Aliased       (Id : E) return B;\n    function Is_Constr_Subt_For_U_Nominal        (Id : E) return B;\n+   function Is_Constr_Subt_For_UN_Aliased       (Id : E) return B;\n    function Is_Constrained                      (Id : E) return B;\n    function Is_Constructor                      (Id : E) return B;\n    function Is_Controlled                       (Id : E) return B;\n    function Is_Controlling_Formal               (Id : E) return B;\n+   function Is_CPP_Class                        (Id : E) return B;\n    function Is_Default_Init_Cond_Procedure      (Id : E) return B;\n    function Is_Descendent_Of_Address            (Id : E) return B;\n    function Is_Discrim_SO_Function              (Id : E) return B;\n@@ -6976,22 +6987,21 @@ package Einfo is\n    function Original_Record_Component           (Id : E) return E;\n    function Overlays_Constant                   (Id : E) return B;\n    function Overridden_Operation                (Id : E) return E;\n-   function PPC_Wrapper                         (Id : E) return E;\n    function Package_Instantiation               (Id : E) return N;\n    function Packed_Array_Impl_Type              (Id : E) return E;\n    function Parent_Subtype                      (Id : E) return E;\n    function Part_Of_Constituents                (Id : E) return L;\n    function Partial_View_Has_Unknown_Discr      (Id : E) return B;\n    function Pending_Access_Types                (Id : E) return L;\n    function Postconditions_Proc                 (Id : E) return E;\n+   function PPC_Wrapper                         (Id : E) return E;\n    function Prival                              (Id : E) return E;\n    function Prival_Link                         (Id : E) return E;\n    function Private_Dependents                  (Id : E) return L;\n    function Private_View                        (Id : E) return N;\n    function Protected_Body_Subprogram           (Id : E) return E;\n    function Protected_Formal                    (Id : E) return E;\n    function Protection_Object                   (Id : E) return E;\n-   function RM_Size                             (Id : E) return U;\n    function Reachable                           (Id : E) return B;\n    function Referenced                          (Id : E) return B;\n    function Referenced_As_LHS                   (Id : E) return B;\n@@ -7014,6 +7024,7 @@ package Einfo is\n    function Returns_Limited_View                (Id : E) return B;\n    function Reverse_Bit_Order                   (Id : E) return B;\n    function Reverse_Storage_Order               (Id : E) return B;\n+   function RM_Size                             (Id : E) return U;\n    function Scalar_Range                        (Id : E) return N;\n    function Scale_Value                         (Id : E) return U;\n    function Scope_Depth_Value                   (Id : E) return U;\n@@ -7031,9 +7042,9 @@ package Einfo is\n    function Spec_Entity                         (Id : E) return E;\n    function SSO_Set_High_By_Default             (Id : E) return B;\n    function SSO_Set_Low_By_Default              (Id : E) return B;\n+   function Static_Discrete_Predicate           (Id : E) return S;\n    function Static_Elaboration_Desired          (Id : E) return B;\n    function Static_Initialization               (Id : E) return N;\n-   function Static_Discrete_Predicate           (Id : E) return S;\n    function Static_Real_Or_String_Predicate     (Id : E) return N;\n    function Status_Flag_Or_Transient_Decl       (Id : E) return E;\n    function Storage_Size_Variable               (Id : E) return E;\n@@ -7282,12 +7293,11 @@ package Einfo is\n    procedure Set_Associated_Node_For_Itype       (Id : E; V : N);\n    procedure Set_Associated_Storage_Pool         (Id : E; V : E);\n    procedure Set_Barrier_Function                (Id : E; V : N);\n+   procedure Set_BIP_Initialization_Call         (Id : E; V : N);\n    procedure Set_Block_Node                      (Id : E; V : N);\n    procedure Set_Body_Entity                     (Id : E; V : E);\n    procedure Set_Body_Needed_For_SAL             (Id : E; V : B := True);\n    procedure Set_Body_References                 (Id : E; V : L);\n-   procedure Set_BIP_Initialization_Call         (Id : E; V : N);\n-   procedure Set_CR_Discriminant                 (Id : E; V : E);\n    procedure Set_C_Pass_By_Copy                  (Id : E; V : B := True);\n    procedure Set_Can_Never_Be_Null               (Id : E; V : B := True);\n    procedure Set_Can_Use_Internal_Rep            (Id : E; V : B := True);\n@@ -7307,12 +7317,9 @@ package Einfo is\n    procedure Set_Corresponding_Protected_Entry   (Id : E; V : E);\n    procedure Set_Corresponding_Record_Type       (Id : E; V : E);\n    procedure Set_Corresponding_Remote_Type       (Id : E; V : E);\n+   procedure Set_CR_Discriminant                 (Id : E; V : E);\n    procedure Set_Current_Use_Clause              (Id : E; V : E);\n    procedure Set_Current_Value                   (Id : E; V : N);\n-   procedure Set_DTC_Entity                      (Id : E; V : E);\n-   procedure Set_DT_Entry_Count                  (Id : E; V : U);\n-   procedure Set_DT_Offset_To_Top_Func           (Id : E; V : E);\n-   procedure Set_DT_Position                     (Id : E; V : U);\n    procedure Set_Debug_Info_Off                  (Id : E; V : B := True);\n    procedure Set_Debug_Renaming_Link             (Id : E; V : E);\n    procedure Set_Default_Aspect_Component_Value  (Id : E; V : N);\n@@ -7337,6 +7344,10 @@ package Einfo is\n    procedure Set_Discriminant_Default_Value      (Id : E; V : N);\n    procedure Set_Discriminant_Number             (Id : E; V : U);\n    procedure Set_Dispatch_Table_Wrappers         (Id : E; V : L);\n+   procedure Set_DT_Entry_Count                  (Id : E; V : U);\n+   procedure Set_DT_Offset_To_Top_Func           (Id : E; V : E);\n+   procedure Set_DT_Position                     (Id : E; V : U);\n+   procedure Set_DTC_Entity                      (Id : E; V : E);\n    procedure Set_Elaborate_Body_Desirable        (Id : E; V : B := True);\n    procedure Set_Elaboration_Entity              (Id : E; V : E);\n    procedure Set_Elaboration_Entity_Required     (Id : E; V : B := True);\n@@ -7465,6 +7476,7 @@ package Einfo is\n    procedure Set_Has_Uplevel_Reference           (Id : E; V : B := True);\n    procedure Set_Has_Visible_Refinement          (Id : E; V : B := True);\n    procedure Set_Has_Volatile_Components         (Id : E; V : B := True);\n+   procedure Set_Has_Volatile_Full_Access        (Id : E; V : B := True);\n    procedure Set_Has_Xref_Entry                  (Id : E; V : B := True);\n    procedure Set_Hiding_Loop_Variable            (Id : E; V : E);\n    procedure Set_Homonym                         (Id : E; V : E);\n@@ -7486,7 +7498,6 @@ package Einfo is\n    procedure Set_Is_Asynchronous                 (Id : E; V : B := True);\n    procedure Set_Is_Atomic                       (Id : E; V : B := True);\n    procedure Set_Is_Bit_Packed_Array             (Id : E; V : B := True);\n-   procedure Set_Is_CPP_Class                    (Id : E; V : B := True);\n    procedure Set_Is_Called                       (Id : E; V : B := True);\n    procedure Set_Is_Character_Type               (Id : E; V : B := True);\n    procedure Set_Is_Checked_Ghost_Entity         (Id : E; V : B := True);\n@@ -7495,12 +7506,13 @@ package Einfo is\n    procedure Set_Is_Compilation_Unit             (Id : E; V : B := True);\n    procedure Set_Is_Completely_Hidden            (Id : E; V : B := True);\n    procedure Set_Is_Concurrent_Record_Type       (Id : E; V : B := True);\n-   procedure Set_Is_Constr_Subt_For_UN_Aliased   (Id : E; V : B := True);\n    procedure Set_Is_Constr_Subt_For_U_Nominal    (Id : E; V : B := True);\n+   procedure Set_Is_Constr_Subt_For_UN_Aliased   (Id : E; V : B := True);\n    procedure Set_Is_Constrained                  (Id : E; V : B := True);\n    procedure Set_Is_Constructor                  (Id : E; V : B := True);\n    procedure Set_Is_Controlled                   (Id : E; V : B := True);\n    procedure Set_Is_Controlling_Formal           (Id : E; V : B := True);\n+   procedure Set_Is_CPP_Class                    (Id : E; V : B := True);\n    procedure Set_Is_Default_Init_Cond_Procedure  (Id : E; V : B := True);\n    procedure Set_Is_Descendent_Of_Address        (Id : E; V : B := True);\n    procedure Set_Is_Discrim_SO_Function          (Id : E; V : B := True);\n@@ -7632,22 +7644,21 @@ package Einfo is\n    procedure Set_Original_Record_Component       (Id : E; V : E);\n    procedure Set_Overlays_Constant               (Id : E; V : B := True);\n    procedure Set_Overridden_Operation            (Id : E; V : E);\n-   procedure Set_PPC_Wrapper                     (Id : E; V : E);\n    procedure Set_Package_Instantiation           (Id : E; V : N);\n    procedure Set_Packed_Array_Impl_Type          (Id : E; V : E);\n    procedure Set_Parent_Subtype                  (Id : E; V : E);\n    procedure Set_Part_Of_Constituents            (Id : E; V : L);\n    procedure Set_Partial_View_Has_Unknown_Discr  (Id : E; V : B := True);\n    procedure Set_Pending_Access_Types            (Id : E; V : L);\n    procedure Set_Postconditions_Proc             (Id : E; V : E);\n+   procedure Set_PPC_Wrapper                     (Id : E; V : E);\n    procedure Set_Prival                          (Id : E; V : E);\n    procedure Set_Prival_Link                     (Id : E; V : E);\n    procedure Set_Private_Dependents              (Id : E; V : L);\n    procedure Set_Private_View                    (Id : E; V : N);\n    procedure Set_Protected_Body_Subprogram       (Id : E; V : E);\n    procedure Set_Protected_Formal                (Id : E; V : E);\n    procedure Set_Protection_Object               (Id : E; V : E);\n-   procedure Set_RM_Size                         (Id : E; V : U);\n    procedure Set_Reachable                       (Id : E; V : B := True);\n    procedure Set_Referenced                      (Id : E; V : B := True);\n    procedure Set_Referenced_As_LHS               (Id : E; V : B := True);\n@@ -7670,6 +7681,7 @@ package Einfo is\n    procedure Set_Returns_Limited_View            (Id : E; V : B := True);\n    procedure Set_Reverse_Bit_Order               (Id : E; V : B := True);\n    procedure Set_Reverse_Storage_Order           (Id : E; V : B := True);\n+   procedure Set_RM_Size                         (Id : E; V : U);\n    procedure Set_Scalar_Range                    (Id : E; V : N);\n    procedure Set_Scale_Value                     (Id : E; V : U);\n    procedure Set_Scope_Depth_Value               (Id : E; V : U);\n@@ -7687,9 +7699,9 @@ package Einfo is\n    procedure Set_Spec_Entity                     (Id : E; V : E);\n    procedure Set_SSO_Set_High_By_Default         (Id : E; V : B := True);\n    procedure Set_SSO_Set_Low_By_Default          (Id : E; V : B := True);\n+   procedure Set_Static_Discrete_Predicate       (Id : E; V : S);\n    procedure Set_Static_Elaboration_Desired      (Id : E; V : B);\n    procedure Set_Static_Initialization           (Id : E; V : N);\n-   procedure Set_Static_Discrete_Predicate       (Id : E; V : S);\n    procedure Set_Static_Real_Or_String_Predicate (Id : E; V : N);\n    procedure Set_Status_Flag_Or_Transient_Decl   (Id : E; V : E);\n    procedure Set_Storage_Size_Variable           (Id : E; V : E);\n@@ -8055,12 +8067,11 @@ package Einfo is\n    pragma Inline (Associated_Node_For_Itype);\n    pragma Inline (Associated_Storage_Pool);\n    pragma Inline (Barrier_Function);\n+   pragma Inline (BIP_Initialization_Call);\n    pragma Inline (Block_Node);\n    pragma Inline (Body_Entity);\n    pragma Inline (Body_Needed_For_SAL);\n    pragma Inline (Body_References);\n-   pragma Inline (BIP_Initialization_Call);\n-   pragma Inline (CR_Discriminant);\n    pragma Inline (C_Pass_By_Copy);\n    pragma Inline (Can_Never_Be_Null);\n    pragma Inline (Can_Use_Internal_Rep);\n@@ -8079,12 +8090,9 @@ package Einfo is\n    pragma Inline (Corresponding_Protected_Entry);\n    pragma Inline (Corresponding_Record_Type);\n    pragma Inline (Corresponding_Remote_Type);\n+   pragma Inline (CR_Discriminant);\n    pragma Inline (Current_Use_Clause);\n    pragma Inline (Current_Value);\n-   pragma Inline (DTC_Entity);\n-   pragma Inline (DT_Entry_Count);\n-   pragma Inline (DT_Offset_To_Top_Func);\n-   pragma Inline (DT_Position);\n    pragma Inline (Debug_Info_Off);\n    pragma Inline (Debug_Renaming_Link);\n    pragma Inline (Default_Aspect_Component_Value);\n@@ -8109,6 +8117,10 @@ package Einfo is\n    pragma Inline (Discriminant_Default_Value);\n    pragma Inline (Discriminant_Number);\n    pragma Inline (Dispatch_Table_Wrappers);\n+   pragma Inline (DT_Entry_Count);\n+   pragma Inline (DT_Offset_To_Top_Func);\n+   pragma Inline (DT_Position);\n+   pragma Inline (DTC_Entity);\n    pragma Inline (Elaborate_Body_Desirable);\n    pragma Inline (Elaboration_Entity);\n    pragma Inline (Elaboration_Entity_Required);\n@@ -8236,6 +8248,7 @@ package Einfo is\n    pragma Inline (Has_Uplevel_Reference);\n    pragma Inline (Has_Visible_Refinement);\n    pragma Inline (Has_Volatile_Components);\n+   pragma Inline (Has_Volatile_Full_Access);\n    pragma Inline (Has_Xref_Entry);\n    pragma Inline (Hiding_Loop_Variable);\n    pragma Inline (Homonym);\n@@ -8262,7 +8275,6 @@ package Einfo is\n    pragma Inline (Is_Asynchronous);\n    pragma Inline (Is_Atomic);\n    pragma Inline (Is_Bit_Packed_Array);\n-   pragma Inline (Is_CPP_Class);\n    pragma Inline (Is_Called);\n    pragma Inline (Is_Character_Type);\n    pragma Inline (Is_Checked_Ghost_Entity);\n@@ -8275,12 +8287,13 @@ package Einfo is\n    pragma Inline (Is_Concurrent_Body);\n    pragma Inline (Is_Concurrent_Record_Type);\n    pragma Inline (Is_Concurrent_Type);\n-   pragma Inline (Is_Constr_Subt_For_UN_Aliased);\n    pragma Inline (Is_Constr_Subt_For_U_Nominal);\n+   pragma Inline (Is_Constr_Subt_For_UN_Aliased);\n    pragma Inline (Is_Constrained);\n    pragma Inline (Is_Constructor);\n    pragma Inline (Is_Controlled);\n    pragma Inline (Is_Controlling_Formal);\n+   pragma Inline (Is_CPP_Class);\n    pragma Inline (Is_Decimal_Fixed_Point_Type);\n    pragma Inline (Is_Default_Init_Cond_Procedure);\n    pragma Inline (Is_Descendent_Of_Address);\n@@ -8444,7 +8457,6 @@ package Einfo is\n    pragma Inline (Original_Record_Component);\n    pragma Inline (Overlays_Constant);\n    pragma Inline (Overridden_Operation);\n-   pragma Inline (PPC_Wrapper);\n    pragma Inline (Package_Instantiation);\n    pragma Inline (Packed_Array_Impl_Type);\n    pragma Inline (Parameter_Mode);\n@@ -8453,14 +8465,14 @@ package Einfo is\n    pragma Inline (Partial_View_Has_Unknown_Discr);\n    pragma Inline (Pending_Access_Types);\n    pragma Inline (Postconditions_Proc);\n+   pragma Inline (PPC_Wrapper);\n    pragma Inline (Prival);\n    pragma Inline (Prival_Link);\n    pragma Inline (Private_Dependents);\n    pragma Inline (Private_View);\n    pragma Inline (Protected_Body_Subprogram);\n    pragma Inline (Protected_Formal);\n    pragma Inline (Protection_Object);\n-   pragma Inline (RM_Size);\n    pragma Inline (Reachable);\n    pragma Inline (Referenced);\n    pragma Inline (Referenced_As_LHS);\n@@ -8483,6 +8495,7 @@ package Einfo is\n    pragma Inline (Returns_Limited_View);\n    pragma Inline (Reverse_Bit_Order);\n    pragma Inline (Reverse_Storage_Order);\n+   pragma Inline (RM_Size);\n    pragma Inline (Scalar_Range);\n    pragma Inline (Scale_Value);\n    pragma Inline (Scope_Depth_Value);\n@@ -8500,9 +8513,9 @@ package Einfo is\n    pragma Inline (Spec_Entity);\n    pragma Inline (SSO_Set_High_By_Default);\n    pragma Inline (SSO_Set_Low_By_Default);\n+   pragma Inline (Static_Discrete_Predicate);\n    pragma Inline (Static_Elaboration_Desired);\n    pragma Inline (Static_Initialization);\n-   pragma Inline (Static_Discrete_Predicate);\n    pragma Inline (Static_Real_Or_String_Predicate);\n    pragma Inline (Status_Flag_Or_Transient_Decl);\n    pragma Inline (Storage_Size_Variable);\n@@ -8554,12 +8567,11 @@ package Einfo is\n    pragma Inline (Set_Associated_Node_For_Itype);\n    pragma Inline (Set_Associated_Storage_Pool);\n    pragma Inline (Set_Barrier_Function);\n+   pragma Inline (Set_BIP_Initialization_Call);\n    pragma Inline (Set_Block_Node);\n    pragma Inline (Set_Body_Entity);\n    pragma Inline (Set_Body_Needed_For_SAL);\n    pragma Inline (Set_Body_References);\n-   pragma Inline (Set_BIP_Initialization_Call);\n-   pragma Inline (Set_CR_Discriminant);\n    pragma Inline (Set_C_Pass_By_Copy);\n    pragma Inline (Set_Can_Never_Be_Null);\n    pragma Inline (Set_Can_Use_Internal_Rep);\n@@ -8578,12 +8590,9 @@ package Einfo is\n    pragma Inline (Set_Corresponding_Protected_Entry);\n    pragma Inline (Set_Corresponding_Record_Type);\n    pragma Inline (Set_Corresponding_Remote_Type);\n+   pragma Inline (Set_CR_Discriminant);\n    pragma Inline (Set_Current_Use_Clause);\n    pragma Inline (Set_Current_Value);\n-   pragma Inline (Set_DTC_Entity);\n-   pragma Inline (Set_DT_Entry_Count);\n-   pragma Inline (Set_DT_Offset_To_Top_Func);\n-   pragma Inline (Set_DT_Position);\n    pragma Inline (Set_Debug_Info_Off);\n    pragma Inline (Set_Debug_Renaming_Link);\n    pragma Inline (Set_Default_Aspect_Component_Value);\n@@ -8608,6 +8617,10 @@ package Einfo is\n    pragma Inline (Set_Discriminant_Default_Value);\n    pragma Inline (Set_Discriminant_Number);\n    pragma Inline (Set_Dispatch_Table_Wrappers);\n+   pragma Inline (Set_DT_Entry_Count);\n+   pragma Inline (Set_DT_Offset_To_Top_Func);\n+   pragma Inline (Set_DT_Position);\n+   pragma Inline (Set_DTC_Entity);\n    pragma Inline (Set_Elaborate_Body_Desirable);\n    pragma Inline (Set_Elaboration_Entity);\n    pragma Inline (Set_Elaboration_Entity_Required);\n@@ -8732,6 +8745,7 @@ package Einfo is\n    pragma Inline (Set_Has_Unknown_Discriminants);\n    pragma Inline (Set_Has_Visible_Refinement);\n    pragma Inline (Set_Has_Volatile_Components);\n+   pragma Inline (Set_Has_Volatile_Full_Access);\n    pragma Inline (Set_Has_Xref_Entry);\n    pragma Inline (Set_Hiding_Loop_Variable);\n    pragma Inline (Set_Homonym);\n@@ -8752,7 +8766,6 @@ package Einfo is\n    pragma Inline (Set_Is_Asynchronous);\n    pragma Inline (Set_Is_Atomic);\n    pragma Inline (Set_Is_Bit_Packed_Array);\n-   pragma Inline (Set_Is_CPP_Class);\n    pragma Inline (Set_Is_Called);\n    pragma Inline (Set_Is_Character_Type);\n    pragma Inline (Set_Is_Checked_Ghost_Entity);\n@@ -8761,12 +8774,13 @@ package Einfo is\n    pragma Inline (Set_Is_Compilation_Unit);\n    pragma Inline (Set_Is_Completely_Hidden);\n    pragma Inline (Set_Is_Concurrent_Record_Type);\n-   pragma Inline (Set_Is_Constr_Subt_For_UN_Aliased);\n    pragma Inline (Set_Is_Constr_Subt_For_U_Nominal);\n+   pragma Inline (Set_Is_Constr_Subt_For_UN_Aliased);\n    pragma Inline (Set_Is_Constrained);\n    pragma Inline (Set_Is_Constructor);\n    pragma Inline (Set_Is_Controlled);\n    pragma Inline (Set_Is_Controlling_Formal);\n+   pragma Inline (Set_Is_CPP_Class);\n    pragma Inline (Set_Is_Default_Init_Cond_Procedure);\n    pragma Inline (Set_Is_Descendent_Of_Address);\n    pragma Inline (Set_Is_Discrim_SO_Function);\n@@ -8898,22 +8912,21 @@ package Einfo is\n    pragma Inline (Set_Original_Record_Component);\n    pragma Inline (Set_Overlays_Constant);\n    pragma Inline (Set_Overridden_Operation);\n-   pragma Inline (Set_PPC_Wrapper);\n    pragma Inline (Set_Package_Instantiation);\n    pragma Inline (Set_Packed_Array_Impl_Type);\n    pragma Inline (Set_Parent_Subtype);\n    pragma Inline (Set_Part_Of_Constituents);\n    pragma Inline (Set_Partial_View_Has_Unknown_Discr);\n    pragma Inline (Set_Pending_Access_Types);\n    pragma Inline (Set_Postconditions_Proc);\n+   pragma Inline (Set_PPC_Wrapper);\n    pragma Inline (Set_Prival);\n    pragma Inline (Set_Prival_Link);\n    pragma Inline (Set_Private_Dependents);\n    pragma Inline (Set_Private_View);\n    pragma Inline (Set_Protected_Body_Subprogram);\n    pragma Inline (Set_Protected_Formal);\n    pragma Inline (Set_Protection_Object);\n-   pragma Inline (Set_RM_Size);\n    pragma Inline (Set_Reachable);\n    pragma Inline (Set_Referenced);\n    pragma Inline (Set_Referenced_As_LHS);\n@@ -8936,6 +8949,7 @@ package Einfo is\n    pragma Inline (Set_Returns_Limited_View);\n    pragma Inline (Set_Reverse_Bit_Order);\n    pragma Inline (Set_Reverse_Storage_Order);\n+   pragma Inline (Set_RM_Size);\n    pragma Inline (Set_Scalar_Range);\n    pragma Inline (Set_Scale_Value);\n    pragma Inline (Set_Scope_Depth_Value);\n@@ -8953,9 +8967,9 @@ package Einfo is\n    pragma Inline (Set_Spec_Entity);\n    pragma Inline (Set_SSO_Set_High_By_Default);\n    pragma Inline (Set_SSO_Set_Low_By_Default);\n+   pragma Inline (Set_Static_Discrete_Predicate);\n    pragma Inline (Set_Static_Elaboration_Desired);\n    pragma Inline (Set_Static_Initialization);\n-   pragma Inline (Set_Static_Discrete_Predicate);\n    pragma Inline (Set_Static_Real_Or_String_Predicate);\n    pragma Inline (Set_Status_Flag_Or_Transient_Decl);\n    pragma Inline (Set_Storage_Size_Variable);"}, {"sha": "825929afa42c3fbc1f2e866cad651e642e05b4c7", "filename": "gcc/ada/par-prag.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8d3b4ff3f469a3553c0e5d27b5d25dd03bf34e0/gcc%2Fada%2Fpar-prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8d3b4ff3f469a3553c0e5d27b5d25dd03bf34e0/gcc%2Fada%2Fpar-prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-prag.adb?ref=c8d3b4ff3f469a3553c0e5d27b5d25dd03bf34e0", "patch": "@@ -1487,6 +1487,7 @@ begin\n            Pragma_Use_VADS_Size                  |\n            Pragma_Volatile                       |\n            Pragma_Volatile_Components            |\n+           Pragma_Volatile_Full_Access           |\n            Pragma_Warning_As_Error               |\n            Pragma_Weak_External                  |\n            Pragma_Validity_Checks                =>"}, {"sha": "97933bbda36840bf297f56fa8d519e06a43f4a83", "filename": "gcc/ada/sem_ch10.adb", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8d3b4ff3f469a3553c0e5d27b5d25dd03bf34e0/gcc%2Fada%2Fsem_ch10.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8d3b4ff3f469a3553c0e5d27b5d25dd03bf34e0/gcc%2Fada%2Fsem_ch10.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch10.adb?ref=c8d3b4ff3f469a3553c0e5d27b5d25dd03bf34e0", "patch": "@@ -1713,6 +1713,16 @@ package body Sem_Ch10 is\n                return;\n             end if;\n \n+            --  Collect SCO information for loaded subunit if we are in the\n+            --  extended main unit.\n+\n+            if Generate_SCO\n+              and then In_Extended_Main_Source_Unit\n+                         (Cunit_Entity (Current_Sem_Unit))\n+            then\n+               SCO_Record_Raw (Get_Cunit_Unit_Number (Library_Unit (N)));\n+            end if;\n+\n             Analyze_Subunit (Library_Unit (N));\n \n          --  Otherwise we must load the subunit and link to it\n@@ -1873,7 +1883,7 @@ package body Sem_Ch10 is\n                   Version_Update (Cunit (Main_Unit), Comp_Unit);\n \n                   --  Collect SCO information for loaded subunit if we are in\n-                  --  the main unit.\n+                  --  the extended main unit.\n \n                   if Generate_SCO\n                     and then"}, {"sha": "fca3856fca6e1f59efd80d4caca08b2f24724ef4", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8d3b4ff3f469a3553c0e5d27b5d25dd03bf34e0/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8d3b4ff3f469a3553c0e5d27b5d25dd03bf34e0/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=c8d3b4ff3f469a3553c0e5d27b5d25dd03bf34e0", "patch": "@@ -11698,6 +11698,14 @@ package body Sem_Ch12 is\n                  Get_Instance_Of (Base_Type (Get_Instance_Of (A_Gen_T)));\n             end if;\n \n+         --  Check whether parent is a previous formal of the current generic\n+\n+         elsif Is_Derived_Type (A_Gen_T)\n+           and then Is_Generic_Type (Etype (A_Gen_T))\n+           and then Scope (A_Gen_T) = Scope (Etype (A_Gen_T))\n+         then\n+            Ancestor := Get_Instance_Of (First_Subtype (Etype (A_Gen_T)));\n+\n          --  An unusual case: the actual is a type declared in a parent unit,\n          --  but is not a formal type so there is no instance_of for it.\n          --  Retrieve it by analyzing the record extension.\n@@ -11733,6 +11741,9 @@ package body Sem_Ch12 is\n                   Actual, Ancestor);\n             end if;\n \n+         --  Finally verify that the (instance of) the ancestor is an ancestor\n+         --  of the actual.\n+\n          elsif not Is_Ancestor (Base_Type (Ancestor), Act_T) then\n             Error_Msg_NE\n               (\"expect type derived from & in instantiation\","}, {"sha": "001365b712f765478b6b7f49f1e74b1d2897a709", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8d3b4ff3f469a3553c0e5d27b5d25dd03bf34e0/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8d3b4ff3f469a3553c0e5d27b5d25dd03bf34e0/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=c8d3b4ff3f469a3553c0e5d27b5d25dd03bf34e0", "patch": "@@ -9882,6 +9882,7 @@ package body Sem_Ch6 is\n      (T           : List_Id;\n       Related_Nod : Node_Id)\n    is\n+      Context     : constant Node_Id := Parent (Parent (T));\n       Param_Spec  : Node_Id;\n       Formal      : Entity_Id;\n       Formal_Type : Entity_Id;\n@@ -10027,6 +10028,8 @@ package body Sem_Ch6 is\n \n                   --  Incomplete formal untagged types are not allowed in\n                   --  subprogram bodies (but are legal in their declarations).\n+                  --  This excludes bodies created for null procedures, which\n+                  --  are basic declarations.\n \n                   if Is_Generic_Type (Formal_Type)\n                     and then not Is_Tagged_Type (Formal_Type)\n@@ -10042,13 +10045,14 @@ package body Sem_Ch6 is\n                      then\n                         null;\n \n-                     elsif Nkind_In (Parent (Parent (T)), N_Accept_Statement,\n-                                                          N_Accept_Alternative,\n-                                                          N_Entry_Body,\n-                                                          N_Subprogram_Body)\n+                     elsif Nkind_In (Context, N_Accept_Statement,\n+                                              N_Accept_Alternative,\n+                                              N_Entry_Body)\n+                       or else (Nkind (Context) = N_Subprogram_Body\n+                                 and then Comes_From_Source (Context))\n                      then\n                         Error_Msg_NE\n-                          (\"invalid use of untagged incomplete type&\",\n+                          (\"invalid use of untagged incomplete type &\",\n                            Ptype, Formal_Type);\n                      end if;\n "}, {"sha": "9e514c17411f7a06c05ae64c3ad003d36d76d755", "filename": "gcc/ada/sem_elab.adb", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8d3b4ff3f469a3553c0e5d27b5d25dd03bf34e0/gcc%2Fada%2Fsem_elab.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8d3b4ff3f469a3553c0e5d27b5d25dd03bf34e0/gcc%2Fada%2Fsem_elab.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_elab.adb?ref=c8d3b4ff3f469a3553c0e5d27b5d25dd03bf34e0", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1997-2014, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1997-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -619,6 +619,18 @@ package body Sem_Elab is\n          return;\n       end if;\n \n+      --  If this is a rewrite of a Valid_Scalars attribute, then nothing to\n+      --  check, we don't mind in this case if the call occurs before the body\n+      --  since this is all generated code.\n+\n+      if Nkind (Original_Node (N)) = N_Attribute_Reference\n+        and then Attribute_Name (Original_Node (N)) = Name_Valid_Scalars\n+      then\n+         return;\n+      end if;\n+\n+      --  Proceed with check\n+\n       Ent := E;\n \n       --  For a variable reference, just set Body_Acts_As_Spec to False"}, {"sha": "8e3cd4c9ecd75f2e696bbd0cb2fdb28b46d45f75", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 68, "deletions": 24, "changes": 92, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8d3b4ff3f469a3553c0e5d27b5d25dd03bf34e0/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8d3b4ff3f469a3553c0e5d27b5d25dd03bf34e0/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=c8d3b4ff3f469a3553c0e5d27b5d25dd03bf34e0", "patch": "@@ -3058,9 +3058,9 @@ package body Sem_Prag is\n       --  Issue fatal error message for misplaced pragma\n \n       procedure Process_Atomic_Independent_Shared_Volatile;\n-      --  Common processing for pragmas Atomic, Independent, Shared, Volatile.\n-      --  Note that Shared is an obsolete Ada 83 pragma and treated as being\n-      --  identical in effect to pragma Atomic.\n+      --  Common processing for pragmas Atomic, Independent, Shared, Volatile,\n+      --  Volatile_Full_Access. Note that Shared is an obsolete Ada 83 pragma\n+      --  and treated as being identical in effect to pragma Atomic.\n \n       procedure Process_Compile_Time_Warning_Or_Error;\n       --  Common processing for Compile_Time_Error and Compile_Time_Warning\n@@ -5822,24 +5822,28 @@ package body Sem_Prag is\n          K    : Node_Kind;\n          Utyp : Entity_Id;\n \n-         procedure Set_Atomic (E : Entity_Id);\n-         --  Set given type as atomic, and if no explicit alignment was given,\n-         --  set alignment to unknown, since back end knows what the alignment\n-         --  requirements are for atomic arrays. Note: this step is necessary\n-         --  for derived types.\n+         procedure Set_Atomic_Full (E : Entity_Id);\n+         --  Set given type as Is_Atomic or Has_Volatile_Full_Access. Also, if\n+         --  no explicit alignment was given, set alignment to unknown, since\n+         --  back end knows what the alignment requirements are for atomic and\n+         --  full access arrays. Note: this is necessary for derived types.\n \n-         ----------------\n-         -- Set_Atomic --\n-         ----------------\n+         ---------------------\n+         -- Set_Atomic_Full --\n+         ---------------------\n \n-         procedure Set_Atomic (E : Entity_Id) is\n+         procedure Set_Atomic_Full (E : Entity_Id) is\n          begin\n-            Set_Is_Atomic (E);\n+            if Prag_Id = Pragma_Volatile_Full_Access then\n+               Set_Has_Volatile_Full_Access (E);\n+            else\n+               Set_Is_Atomic (E);\n+            end if;\n \n             if not Has_Alignment_Clause (E) then\n                Set_Alignment (E, Uint_0);\n             end if;\n-         end Set_Atomic;\n+         end Set_Atomic_Full;\n \n       --  Start of processing for Process_Atomic_Independent_Shared_Volatile\n \n@@ -5874,13 +5878,18 @@ package body Sem_Prag is\n                Check_First_Subtype (Arg1);\n             end if;\n \n-            if Prag_Id = Pragma_Atomic or else Prag_Id = Pragma_Shared then\n-               Set_Atomic (E);\n-               Set_Atomic (Underlying_Type (E));\n-               Set_Atomic (Base_Type (E));\n+            if Prag_Id = Pragma_Atomic\n+                 or else\n+               Prag_Id = Pragma_Shared\n+                 or else\n+               Prag_Id = Pragma_Volatile_Full_Access\n+            then\n+               Set_Atomic_Full (E);\n+               Set_Atomic_Full (Underlying_Type (E));\n+               Set_Atomic_Full (Base_Type (E));\n             end if;\n \n-            --  Atomic/Shared imply both Independent and Volatile\n+            --  Atomic/Shared/Volatile_Full_Access imply Independent\n \n             if Prag_Id /= Pragma_Volatile then\n                Set_Is_Independent (E);\n@@ -5896,6 +5905,11 @@ package body Sem_Prag is\n             --  currently private, it also belongs on the underlying type.\n \n             if Prag_Id /= Pragma_Independent then\n+               if Prag_Id = Pragma_Volatile_Full_Access then\n+                  Set_Has_Volatile_Full_Access (Base_Type (E));\n+                  Set_Has_Volatile_Full_Access (Underlying_Type (E));\n+               end if;\n+\n                Set_Is_Volatile (Base_Type (E));\n                Set_Is_Volatile (Underlying_Type (E));\n \n@@ -5911,8 +5925,17 @@ package body Sem_Prag is\n                return;\n             end if;\n \n-            if Prag_Id = Pragma_Atomic or else Prag_Id = Pragma_Shared then\n-               Set_Is_Atomic (E);\n+            if Prag_Id = Pragma_Atomic\n+                 or else\n+               Prag_Id = Pragma_Shared\n+                 or else\n+               Prag_Id = Pragma_Volatile_Full_Access\n+            then\n+               if Prag_Id = Pragma_Volatile_Full_Access then\n+                  Set_Has_Volatile_Full_Access (E);\n+               else\n+                  Set_Is_Atomic (E);\n+               end if;\n \n                --  If the object declaration has an explicit initialization, a\n                --  temporary may have to be created to hold the expression, to\n@@ -5939,21 +5962,31 @@ package body Sem_Prag is\n                --  treated as atomic, thus incurring a potentially costly\n                --  synchronization operation for every access.\n \n+               --  For Volatile_Full_Access we can do this for elementary\n+               --  types too, since there is no issue of atomic sync.\n+\n                --  Of course it would be best if the back end could just adjust\n                --  the alignment etc for the specific object, but that's not\n                --  something we are capable of doing at this point.\n \n                Utyp := Underlying_Type (Etype (E));\n \n                if Present (Utyp)\n-                 and then Is_Composite_Type (Utyp)\n+                 and then (Is_Composite_Type (Utyp)\n+                            or else Prag_Id = Pragma_Volatile_Full_Access)\n                  and then Sloc (E) > No_Location\n                  and then Sloc (Utyp) > No_Location\n                  and then\n                    Get_Source_File_Index (Sloc (E)) =\n                    Get_Source_File_Index (Sloc (Underlying_Type (Etype (E))))\n                then\n-                  Set_Is_Atomic (Underlying_Type (Etype (E)));\n+                  if Prag_Id = Pragma_Volatile_Full_Access then\n+                     Set_Has_Volatile_Full_Access\n+                       (Underlying_Type (Etype (E)));\n+                  else\n+                     Set_Is_Atomic\n+                       (Underlying_Type (Etype (E)));\n+                  end if;\n                end if;\n             end if;\n \n@@ -21220,7 +21253,17 @@ package body Sem_Prag is\n          when Pragma_Volatile =>\n             Process_Atomic_Independent_Shared_Volatile;\n \n-         -------------------------\n+         --------------------------\n+         -- Volatile_Full_Access --\n+         --------------------------\n+\n+         --  pragma Volatile_Full_Access (LOCAL_NAME);\n+\n+         when Pragma_Volatile_Full_Access =>\n+            GNAT_Pragma;\n+            Process_Atomic_Independent_Shared_Volatile;\n+\n+            -------------------------\n          -- Volatile_Components --\n          -------------------------\n \n@@ -26148,6 +26191,7 @@ package body Sem_Prag is\n       Pragma_Validity_Checks                =>  0,\n       Pragma_Volatile                       =>  0,\n       Pragma_Volatile_Components            =>  0,\n+      Pragma_Volatile_Full_Access           =>  0,\n       Pragma_Warning_As_Error               =>  0,\n       Pragma_Warnings                       =>  0,\n       Pragma_Weak_External                  =>  0,"}, {"sha": "6dc7c00de9d7103263b2087e9c42675f9e83fdb1", "filename": "gcc/ada/snames.ads-tmpl", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8d3b4ff3f469a3553c0e5d27b5d25dd03bf34e0/gcc%2Fada%2Fsnames.ads-tmpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8d3b4ff3f469a3553c0e5d27b5d25dd03bf34e0/gcc%2Fada%2Fsnames.ads-tmpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsnames.ads-tmpl?ref=c8d3b4ff3f469a3553c0e5d27b5d25dd03bf34e0", "patch": "@@ -632,6 +632,7 @@ package Snames is\n    Name_Unreserve_All_Interrupts       : constant Name_Id := N + $; -- GNAT\n    Name_Volatile                       : constant Name_Id := N + $;\n    Name_Volatile_Components            : constant Name_Id := N + $;\n+   Name_Volatile_Full_Access           : constant Name_Id := N + $; -- GNAT\n    Name_Weak_External                  : constant Name_Id := N + $; -- GNAT\n    Last_Pragma_Name                    : constant Name_Id := N + $;\n \n@@ -1939,6 +1940,7 @@ package Snames is\n       Pragma_Unreserve_All_Interrupts,\n       Pragma_Volatile,\n       Pragma_Volatile_Components,\n+      Pragma_Volatile_Full_Access,\n       Pragma_Weak_External,\n \n       --  The following pragmas are on their own, out of order, because of the"}, {"sha": "03dfb51534978f7d893727182af3728c56982d48", "filename": "gcc/ada/targparm.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8d3b4ff3f469a3553c0e5d27b5d25dd03bf34e0/gcc%2Fada%2Ftargparm.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8d3b4ff3f469a3553c0e5d27b5d25dd03bf34e0/gcc%2Fada%2Ftargparm.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftargparm.ads?ref=c8d3b4ff3f469a3553c0e5d27b5d25dd03bf34e0", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1999-2014, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1999-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -362,13 +362,13 @@ package Targparm is\n    ---------------------\n \n    --  By default, type Duration is a 64-bit fixed-point type with a delta\n-   --  and small of 10**(-9) (i.e. it is a count in nanoseconds. This flag\n+   --  and small of 10**(-9) (i.e. it is a count in nanoseconds). This flag\n    --  allows that standard format to be modified.\n \n    Duration_32_Bits_On_Target : Boolean := False;\n    --  If True, then Duration is represented in 32 bits and the delta and\n    --  small values are set to 20.0*(10**(-3)) (i.e. it is a count in units\n-   --  of 20 milliseconds.\n+   --  of 20 milliseconds).\n \n    ------------------------------------\n    -- Back-End Code Generation Flags --"}]}