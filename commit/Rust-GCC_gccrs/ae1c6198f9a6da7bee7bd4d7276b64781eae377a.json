{"sha": "ae1c6198f9a6da7bee7bd4d7276b64781eae377a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWUxYzYxOThmOWE2ZGE3YmVlN2JkNGQ3Mjc2YjY0NzgxZWFlMzc3YQ==", "commit": {"author": {"name": "Andreas Krebbel", "email": "krebbel@linux.vnet.ibm.com", "date": "2016-04-29T09:17:35Z"}, "committer": {"name": "Andreas Krebbel", "email": "krebbel@gcc.gnu.org", "date": "2016-04-29T09:17:35Z"}, "message": "S/390: Replace LDER with LDR.\n\nFor performance reasons it is important to write the full 64 bits of\nan FPR target reg even when dealing with 32 bit values.  So we chose\nlder over ler for 32 bit float register moves.  lder zero-extends the\n32 bit value from the source reg to 64 bit in the target.  However,\nsince it actually doesn't matter whether we write the upper 32 bits\nwith zeros or with any other garbage we can also use ldr instead.  It\nis bit shorter and therefore will do good for I-Cache usage.\n\ngcc/ChangeLog:\n\n2016-04-29  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>\n\n\t* config/s390/2964.md (\"z13_unit_fxu\", \"z13_0\"): Remove lder.\n\t* config/s390/s390.md (\"movsi_larl\", \"*movsi_esa\", \"mov<mode>\"):\n\tChange lder to ldr.\n\t* config/s390/vector.md (\"mov<mode>\"): Likewise.\n\nFrom-SVN: r235627", "tree": {"sha": "862051704ad7057867536ddf07eccd300a1ce886", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/862051704ad7057867536ddf07eccd300a1ce886"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ae1c6198f9a6da7bee7bd4d7276b64781eae377a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae1c6198f9a6da7bee7bd4d7276b64781eae377a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae1c6198f9a6da7bee7bd4d7276b64781eae377a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae1c6198f9a6da7bee7bd4d7276b64781eae377a/comments", "author": null, "committer": null, "parents": [{"sha": "3e4be43f69daddc9123f5c2f8129311e0a702ef6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e4be43f69daddc9123f5c2f8129311e0a702ef6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3e4be43f69daddc9123f5c2f8129311e0a702ef6"}], "stats": {"total": 27, "additions": 17, "deletions": 10}, "files": [{"sha": "31e32355bce759995f945dd9ef45b05404895e1f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae1c6198f9a6da7bee7bd4d7276b64781eae377a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae1c6198f9a6da7bee7bd4d7276b64781eae377a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ae1c6198f9a6da7bee7bd4d7276b64781eae377a", "patch": "@@ -1,3 +1,10 @@\n+2016-04-29  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>\n+\n+\t* config/s390/2964.md (\"z13_unit_fxu\", \"z13_0\"): Remove lder.\n+\t* config/s390/s390.md (\"movsi_larl\", \"*movsi_esa\", \"mov<mode>\"):\n+\tChange lder to ldr.\n+\t* config/s390/vector.md (\"mov<mode>\"): Likewise.\n+\n 2016-04-29  Ulrich Weigand  <uweigand@de.ibm.com>\n \n \t* config/s390/constraints.md (\"U\", \"W\"): Invoke"}, {"sha": "e0e732b7f6d68fbff2e9a2a40d4384ad48454c53", "filename": "gcc/config/s390/2964.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae1c6198f9a6da7bee7bd4d7276b64781eae377a/gcc%2Fconfig%2Fs390%2F2964.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae1c6198f9a6da7bee7bd4d7276b64781eae377a/gcc%2Fconfig%2Fs390%2F2964.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2F2964.md?ref=ae1c6198f9a6da7bee7bd4d7276b64781eae377a", "patch": "@@ -57,7 +57,7 @@ vllezh,oc,xc,clc,lrl,ear,nc,lgrl,sfpc,llgf,llgfrl,llgh,llgt,lcbb,vll,sar\") (cons\n (define_attr \"z13_unit_fxu\" \"\"\n   (cond [(eq_attr \"mnemonic\" \"s,lcgr,x,nop,oiy,ppa,ng,msy,sgrk,vstl,aghik,\\\n msgf,ipm,mvi,stocg,rll,srlg,cghsi,clgit,srlk,alrk,sg,sh,sl,st,sy,vst,ark,\\\n-xgr,agsi,tm,nrk,shy,llhr,agf,alcr,slgfr,sr,clgrt,laa,lder,sgf,lan,llilf,\\\n+xgr,agsi,tm,nrk,shy,llhr,agf,alcr,slgfr,sr,clgrt,laa,sgf,lan,llilf,\\\n llilh,ag,llill,lay,al,n,laxg,ar,ahi,sgr,ntstg,ay,stcy,nopr,mfy,ngrk,lbr,\\\n br,dsgr,stdy,ork,ldgr,lcr,cg,ch,lgfrl,cl,stoc,cr,agfr,stgrl,cy,alfi,xg,\\\n cgfi,xi,clfhsi,cgfr,xr,slb,mghi,clfi,slg,clhhsi,agfi,clfit,sly,mr,ldr,nihf,\\\n@@ -121,7 +121,7 @@ vchfs,madb,ddbr\") (const_int 1)]\n   (and (eq_attr \"cpu\" \"z13\")\n        (eq_attr \"mnemonic\" \"s,lcgr,x,nop,oiy,vlbb,ppa,ng,sgrk,vstl,aghik,\\\n mvc,ipm,llgc,mvi,stocg,rll,jg,srlg,cghsi,clgit,srlk,alrk,sg,sh,sl,st,sy,\\\n-vst,ark,xgr,agsi,tm,nrk,shy,llhr,agf,alcr,slgfr,sr,clgrt,llc,laa,lder,sgf,\\\n+vst,ark,xgr,agsi,tm,nrk,shy,llhr,agf,alcr,slgfr,sr,clgrt,llc,laa,sgf,\\\n lan,llhrl,llilf,llilh,ag,llill,lay,al,n,laxg,ar,ahi,sgr,ntstg,ay,stcy,vl,\\\n nopr,ngrk,lbr,br,stdy,ork,ldgr,lcr,cg,ch,llghrl,lgfrl,cl,stoc,cr,agfr,stgrl,\\\n cy,alfi,xg,cgfi,xi,vlrepf,vlrepg,vlreph,clfhsi,cgfr,xr,slb,mghi,clfi,slg,\\"}, {"sha": "12a7f2a63c39f3b5035713fb52d3ec613f7fac74", "filename": "gcc/config/s390/s390.md", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae1c6198f9a6da7bee7bd4d7276b64781eae377a/gcc%2Fconfig%2Fs390%2Fs390.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae1c6198f9a6da7bee7bd4d7276b64781eae377a/gcc%2Fconfig%2Fs390%2Fs390.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.md?ref=ae1c6198f9a6da7bee7bd4d7276b64781eae377a", "patch": "@@ -1924,7 +1924,7 @@\n    ly\\t%0,%1\n    st\\t%1,%0\n    sty\\t%1,%0\n-   lder\\t%0,%1\n+   ldr\\t%0,%1\n    ler\\t%0,%1\n    lde\\t%0,%1\n    le\\t%0,%1\n@@ -1944,7 +1944,7 @@\n    vlef\\t%v0,%1,0\n    vstef\\t%v1,%0,0\"\n   [(set_attr \"op_type\" \"RI,RI,RI,RIL,RXY,RIL,RR,RX,RXY,RX,RXY,\n-                        RRE,RR,RXE,RX,RXY,RX,RXY,RRE,RRE,RS,RIL,SIL,RS,VRI,VRR,VRS,VRS,VRX,VRX\")\n+                        RR,RR,RXE,RX,RXY,RX,RXY,RRE,RRE,RS,RIL,SIL,RS,VRI,VRR,VRS,VRS,VRX,VRX\")\n    (set_attr \"type\" \"*,\n                      *,\n                      *,\n@@ -2005,7 +2005,7 @@\n    lr\\t%0,%1\n    l\\t%0,%1\n    st\\t%1,%0\n-   lder\\t%0,%1\n+   ldr\\t%0,%1\n    ler\\t%0,%1\n    lde\\t%0,%1\n    le\\t%0,%1\n@@ -2014,7 +2014,7 @@\n    sar\\t%0,%1\n    stam\\t%1,%1,%S0\n    lam\\t%0,%0,%S1\"\n-  [(set_attr \"op_type\" \"RI,RR,RX,RX,RRE,RR,RXE,RX,RX,RRE,RRE,RS,RS\")\n+  [(set_attr \"op_type\" \"RI,RR,RX,RX,RR,RR,RXE,RX,RX,RRE,RRE,RS,RS\")\n    (set_attr \"type\" \"*,lr,load,store,floadsf,floadsf,floadsf,floadsf,fstoresf,*,*,*,*\")\n    (set_attr \"z10prop\" \"z10_fwd_A1,z10_fr_E1,z10_fwd_A3,z10_rec,*,*,*,*,*,z10_super_E1,\n                         z10_super,*,*\")\n@@ -2550,7 +2550,7 @@\n   \"\"\n   \"@\n    lzer\\t%0\n-   lder\\t%0,%1\n+   ldr\\t%0,%1\n    ler\\t%0,%1\n    lde\\t%0,%1\n    le\\t%0,%1\n@@ -2571,7 +2571,7 @@\n    vlgvf\\t%0,%v1,0\n    vleg\\t%0,%1,0\n    vsteg\\t%1,%0,0\"\n-  [(set_attr \"op_type\" \"RRE,RRE,RR,RXE,RX,RXY,RX,RXY,RI,RR,RIL,RX,RXY,RIL,RX,RXY,VRR,VRI,VRS,VRS,VRX,VRX\")\n+  [(set_attr \"op_type\" \"RRE,RR,RR,RXE,RX,RXY,RX,RXY,RI,RR,RIL,RX,RXY,RIL,RX,RXY,VRR,VRI,VRS,VRS,VRX,VRX\")\n    (set_attr \"type\"    \"fsimpsf,fsimpsf,fload<mode>,fload<mode>,fload<mode>,fload<mode>,\n                         fstore<mode>,fstore<mode>,*,lr,load,load,load,store,store,store,*,*,*,*,load,store\")\n    (set_attr \"z10prop\" \"*,*,*,*,*,*,*,*,z10_fwd_A1,z10_fr_E1,z10_fr_E1,z10_fwd_A3,z10_fwd_A3,z10_rec,z10_rec,z10_rec,*,*,*,*,*,*\")"}, {"sha": "bc4f8dadf3da226fd1ce8883912badfbdc5dd8bc", "filename": "gcc/config/s390/vector.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae1c6198f9a6da7bee7bd4d7276b64781eae377a/gcc%2Fconfig%2Fs390%2Fvector.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae1c6198f9a6da7bee7bd4d7276b64781eae377a/gcc%2Fconfig%2Fs390%2Fvector.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fvector.md?ref=ae1c6198f9a6da7bee7bd4d7276b64781eae377a", "patch": "@@ -237,7 +237,7 @@\n \t(match_operand:V_32 1 \"general_operand\"      \" f,R,T,f,f,v,d,v,R,v,j00,j00,jm1,jyy,jxx,j00,jm1,j00,jm1,b,d,R,T,d,d,d\"))]\n   \"TARGET_VX\"\n   \"@\n-   lder\\t%v0,%v1\n+   ldr\\t%v0,%v1\n    lde\\t%0,%1\n    ley\\t%0,%1\n    ste\\t%1,%0\n@@ -263,7 +263,7 @@\n    st\\t%1,%0\n    sty\\t%1,%0\n    strl\\t%1,%0\"\n-  [(set_attr \"op_type\" \"RRE,RXE,RXY,RX,RXY,VRR,VRS,VRS,VRX,VRX,RRE,VRI,VRI,VRI,VRI,SIL,SIL,RI,RI,\n+  [(set_attr \"op_type\" \"RR,RXE,RXY,RX,RXY,VRR,VRS,VRS,VRX,VRX,RRE,VRI,VRI,VRI,VRI,SIL,SIL,RI,RI,\n                         RIL,RR,RX,RXY,RX,RXY,RIL\")])\n \n (define_insn \"mov<mode>\""}]}