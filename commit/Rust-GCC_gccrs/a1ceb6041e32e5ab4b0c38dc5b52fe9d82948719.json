{"sha": "a1ceb6041e32e5ab4b0c38dc5b52fe9d82948719", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTFjZWI2MDQxZTMyZTVhYjRiMGMzOGRjNWI1MmZlOWQ4Mjk0ODcxOQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2015-06-17T18:11:42Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2015-06-17T18:11:42Z"}, "message": "re PR middle-end/66429 (ICE in expand_GOMP_SIMD_LAST_LANE)\n\n\tPR middle-end/66429\n\t* omp-low.c (expand_omp_taskreg, expand_omp_target): Use child_cfun\n\tinstead of DECL_STRUCT_FUNCTION (child_fn).  Or in has_simduid_loops\n\tand has_force_vectorize_loops flags from cfun into\n\tchild_cfun.\n\t(expand_omp_simd): For broken loop, set cfun->has_simduid_loops\n\tif simduid is non-NULL.\n\t* tree-pass.h (make_pass_simduid_cleanup): New prototype.\n\t* passes.def (pass_simduid_cleanup): Add new pass after loop\n\tpasses.\n\t* tree-vectorizer.c (adjust_simduid_builtins): Remove one unnecessary\n\tindirection from htab argument's type.\n\t(shrink_simd_arrays): New function.\n\t(vectorize_loops): Use it.  Adjust adjust_simduid_builtins caller.\n\tDon't call adjust_simduid_builtins if there are no loops.\n\t(pass_data_simduid_cleanup, pass_simduid_cleanup): New variables.\n\t(pass_simduid_cleanup::execute): New method.\n\t(make_pass_simduid_cleanup): New function.\n\nFrom-SVN: r224571", "tree": {"sha": "9fb5fd8414b3ccc7263ca8c4c655d25b948628eb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9fb5fd8414b3ccc7263ca8c4c655d25b948628eb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a1ceb6041e32e5ab4b0c38dc5b52fe9d82948719", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1ceb6041e32e5ab4b0c38dc5b52fe9d82948719", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a1ceb6041e32e5ab4b0c38dc5b52fe9d82948719", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1ceb6041e32e5ab4b0c38dc5b52fe9d82948719/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "64b5fcfa3bc6ac1d5f0bab9d5de3a8cd2259d70e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/64b5fcfa3bc6ac1d5f0bab9d5de3a8cd2259d70e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/64b5fcfa3bc6ac1d5f0bab9d5de3a8cd2259d70e"}], "stats": {"total": 8, "additions": 5, "deletions": 3}, "files": [{"sha": "919a6216ee0747e00f6cff786c2ceb21e7707728", "filename": "gcc/ChangeLog", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1ceb6041e32e5ab4b0c38dc5b52fe9d82948719/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1ceb6041e32e5ab4b0c38dc5b52fe9d82948719/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a1ceb6041e32e5ab4b0c38dc5b52fe9d82948719", "patch": "@@ -1,8 +1,8 @@\n 2015-06-17  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR middle-end/66429\n-\t* omp-low.c (expand_omp_taskreg): Use child_cfun instead of\n-\tDECL_STRUCT_FUNCTION (child_fn).  Or in has_simduid_loops\n+\t* omp-low.c (expand_omp_taskreg, expand_omp_target): Use child_cfun\n+\tinstead of DECL_STRUCT_FUNCTION (child_fn).  Or in has_simduid_loops\n \tand has_force_vectorize_loops flags from cfun into\n \tchild_cfun.\n \t(expand_omp_simd): For broken loop, set cfun->has_simduid_loops"}, {"sha": "415a2c88a0b9dfa7ef3465a349052ca6cf43f1b8", "filename": "gcc/omp-low.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1ceb6041e32e5ab4b0c38dc5b52fe9d82948719/gcc%2Fomp-low.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1ceb6041e32e5ab4b0c38dc5b52fe9d82948719/gcc%2Fomp-low.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fomp-low.c?ref=a1ceb6041e32e5ab4b0c38dc5b52fe9d82948719", "patch": "@@ -8960,7 +8960,9 @@ expand_omp_target (struct omp_region *region)\n \tvec_safe_truncate (child_cfun->local_decls, dstidx);\n \n       /* Inform the callgraph about the new function.  */\n-      DECL_STRUCT_FUNCTION (child_fn)->curr_properties = cfun->curr_properties;\n+      child_cfun->curr_properties = cfun->curr_properties;\n+      child_cfun->has_simduid_loops |= cfun->has_simduid_loops;\n+      child_cfun->has_force_vectorize_loops |= cfun->has_force_vectorize_loops;\n       cgraph_node *node = cgraph_node::get_create (child_fn);\n       node->parallelized_function = 1;\n       cgraph_node::add_new_function (child_fn, true);"}]}