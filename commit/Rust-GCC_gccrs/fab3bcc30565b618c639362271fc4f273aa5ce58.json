{"sha": "fab3bcc30565b618c639362271fc4f273aa5ce58", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmFiM2JjYzMwNTY1YjYxOGM2MzkzNjIyNzFmYzRmMjczYWE1Y2U1OA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-01-12T10:59:49Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-01-12T10:59:49Z"}, "message": "(rs6000_override_options): Change POWERPCSQR to PPCFPX.\n\nFrom-SVN: r6383", "tree": {"sha": "b941acae96067b5a69903872a4fc4c0500a2fe7d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b941acae96067b5a69903872a4fc4c0500a2fe7d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fab3bcc30565b618c639362271fc4f273aa5ce58", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fab3bcc30565b618c639362271fc4f273aa5ce58", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fab3bcc30565b618c639362271fc4f273aa5ce58", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fab3bcc30565b618c639362271fc4f273aa5ce58/comments", "author": null, "committer": null, "parents": [{"sha": "b7f37b10e0224957c7e56b5f06d5e5bc3f127dd5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b7f37b10e0224957c7e56b5f06d5e5bc3f127dd5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b7f37b10e0224957c7e56b5f06d5e5bc3f127dd5"}], "stats": {"total": 30, "additions": 15, "deletions": 15}, "files": [{"sha": "9cf9eb5e744107ad3310ecac9f5f5fb1430b6491", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fab3bcc30565b618c639362271fc4f273aa5ce58/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fab3bcc30565b618c639362271fc4f273aa5ce58/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=fab3bcc30565b618c639362271fc4f273aa5ce58", "patch": "@@ -1,6 +1,6 @@\n /* Subroutines used for code generation on IBM RS/6000.\n-   Copyright (C) 1991, 1993 Free Software Foundation, Inc.\n-   Contributed by Richard Kenner (kenner@nyu.edu)\n+   Copyright (C) 1991, 1993, 1994 Free Software Foundation, Inc.\n+   Contributed by Richard Kenner (kenner@vlsi1.ultra.nyu.edu)\n \n This file is part of GNU CC.\n \n@@ -73,7 +73,7 @@ rs6000_override_options ()\n      variant and any PowerPC variant.  */\n \n #define POWER_MASKS (MASK_POWER | MASK_POWER2)\n-#define POWERPC_MASKS (MASK_POWERPC | MASK_POWERPCSQR | MASK_POWERPC64)\n+#define POWERPC_MASKS (MASK_POWERPC | MASK_PPCFPX | MASK_POWERPC64)\n \n   static struct ptt\n     {\n@@ -90,41 +90,41 @@ rs6000_override_options ()\n \t {\"rios2\", PROCESSOR_RIOS2, MASK_POWER | MASK_POWER2 , POWERPC_MASKS},\n \t {\"601\", PROCESSOR_PPC601,\n \t    MASK_POWER | MASK_POWERPC | MASK_NEW_MNEMONICS,\n-\t    MASK_POWER2 | MASK_POWERPCSQR | MASK_POWERPC64},\n+\t    MASK_POWER2 | MASK_PPCFPX | MASK_POWERPC64},\n \t {\"mpc601\", PROCESSOR_PPC601,\n \t    MASK_POWER | MASK_POWERPC | MASK_NEW_MNEMONICS,\n-\t    MASK_POWER2 | MASK_POWERPCSQR | MASK_POWERPC64},\n+\t    MASK_POWER2 | MASK_PPCFPX | MASK_POWERPC64},\n \t {\"ppc601\", PROCESSOR_PPC601,\n \t    MASK_POWER | MASK_POWERPC | MASK_NEW_MNEMONICS,\n-\t    MASK_POWER2 | MASK_POWERPCSQR | MASK_POWERPC64},\n+\t    MASK_POWER2 | MASK_PPCFPX | MASK_POWERPC64},\n \t {\"603\", PROCESSOR_PPC603,\n-\t    MASK_POWERPC | MASK_POWERPCSQR | MASK_NEW_MNEMONICS,\n+\t    MASK_POWERPC | MASK_PPCFPX | MASK_NEW_MNEMONICS,\n \t    POWER_MASKS | MASK_POWERPC64},\n \t {\"mpc603\", PROCESSOR_PPC603,\n-\t    MASK_POWERPC | MASK_POWERPCSQR | MASK_NEW_MNEMONICS,\n+\t    MASK_POWERPC | MASK_PPCFPX | MASK_NEW_MNEMONICS,\n \t    POWER_MASKS | MASK_POWERPC64},\n \t {\"ppc603\", PROCESSOR_PPC603,\n-\t    MASK_POWERPC | MASK_POWERPCSQR | MASK_NEW_MNEMONICS,\n+\t    MASK_POWERPC | MASK_PPCFPX | MASK_NEW_MNEMONICS,\n \t    POWER_MASKS | MASK_POWERPC64},\n \t {\"604\", PROCESSOR_PPC604,\n-\t    MASK_POWERPC | MASK_POWERPCSQR | MASK_NEW_MNEMONICS,\n+\t    MASK_POWERPC | MASK_PPCFPX | MASK_NEW_MNEMONICS,\n \t    POWER_MASKS | MASK_POWERPC64},\n \t {\"mpc604\", PROCESSOR_PPC604,\n-\t    MASK_POWERPC | MASK_POWERPCSQR | MASK_NEW_MNEMONICS,\n+\t    MASK_POWERPC | MASK_PPCFPX | MASK_NEW_MNEMONICS,\n \t    POWER_MASKS | MASK_POWERPC64},\n \t {\"ppc604\", PROCESSOR_PPC604,\n-\t    MASK_POWERPC | MASK_POWERPCSQR | MASK_NEW_MNEMONICS,\n+\t    MASK_POWERPC | MASK_PPCFPX | MASK_NEW_MNEMONICS,\n \t    POWER_MASKS | MASK_POWERPC64},\n \t {\"620\", PROCESSOR_PPC620,\n-\t    (MASK_POWERPC | MASK_POWERPCSQR | MASK_POWERPC64\n+\t    (MASK_POWERPC | MASK_PPCFPX | MASK_POWERPC64\n \t     | MASK_NEW_MNEMONICS),\n \t      POWER_MASKS},\n \t {\"mpc620\", PROCESSOR_PPC620,\n-\t    (MASK_POWERPC | MASK_POWERPCSQR | MASK_POWERPC64\n+\t    (MASK_POWERPC | MASK_PPCFPX | MASK_POWERPC64\n \t     | MASK_NEW_MNEMONICS),\n \t      POWER_MASKS},\n \t {\"ppc620\", PROCESSOR_PPC620,\n-\t    (MASK_POWERPC | MASK_POWERPCSQR | MASK_POWERPC64\n+\t    (MASK_POWERPC | MASK_PPCFPX | MASK_POWERPC64\n \t     | MASK_NEW_MNEMONICS),\n \t      POWER_MASKS}};\n "}]}