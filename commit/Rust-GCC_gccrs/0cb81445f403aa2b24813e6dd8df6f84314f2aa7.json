{"sha": "0cb81445f403aa2b24813e6dd8df6f84314f2aa7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGNiODE0NDVmNDAzYWEyYjI0ODEzZTZkZDhkZjZmODQzMTRmMmFhNw==", "commit": {"author": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2017-09-13T09:53:05Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2017-09-13T09:53:05Z"}, "message": "[multiple changes]\n\n2017-09-13  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* einfo.adb: Flag42 is now Is_Controlled_Active.\n\t(Is_Controlled): This attribute is now synthesized.\n\t(Is_Controlled_Active): This attribute is now an explicit flag rather\n\tthan a synthesized attribute.\t(Set_Is_Controlled): Removed.\n\t(Set_Is_Controlled_Active): New routine.\n\t(Write_Entity_Flags): Update the output for Flag42.\n\t* einfo.ads: Update the documentation of the following attributes:\n\tDisable_Controlled, Is_Controlled, Is_Controlled_Active, Is_Controlled\n\tand Is_Controlled_Active have swapped their functionality.\n\t(Is_Controlled): Renamed to Is_Controlled_Active.\n\t(Is_Controlled_Active): Renamed to Is_Controlled.\n\t(Set_Is_Controlled): Renamed to Set_Is_Controlled_Active.\n\t* exp_ch3.adb (Expand_Freeze_Record_Type): Restore the original use of\n\tIs_Controlled.\n\t* exp_util.adb (Has_Some_Controlled_Component): Code clean up.\n\t(Needs_Finalization): Code clean up. Remove the tests for\n\tDisable_Controlled because a) they were incorrect as they would reject\n\ta type which is sublect to the aspect, but may contain controlled\n\tcomponents, and b) they are no longer necessary.\n\t* exp_util.ads (Needs_Finalization): Update comment on documentation.\n\t* freeze.adb (Freeze_Array_Type): Restore the original use of\n\tIs_Controlled.\n\t(Freeze_Record_Type): Restore the original use of Is_Controlled.\n\t* sem_ch3.adb (Analyze_Object_Declaration): Restore the original use of\n\tIs_Controlled.\n\t(Array_Type_Declaration): Restore the original use of Is_Controlled.\n\t(Build_Derived_Private_Type): Restore the original use of\n\tIs_Controlled.\n\t(Build_Derived_Record_Type): Set the Is_Controlled_Active flag of a\n\ttype derived from Ada.Finalization.[Limited_]Controlled.\n\t(Build_Derived_Type): Restore the original use of Is_Controlled.\n\t(Record_Type_Definition): Restore the original use of Is_Controlled.\n\t* sem_ch7.adb (Preserve_Full_Attributes): Restore the original use of\n\tIs_Controlled.\n\t* sem_ch13.adb (Analyze_Aspect_Disable_Controlled): New routine.\n\t(Analyze_Aspect_Specifications): Use routine\n\tAnalyze_Aspect_Disable_Controlled to process aspect Disable_Controlled.\n\n2017-09-13  Vincent Celier  <celier@adacore.com>\n\n\t* clean.adb (Gnatclean): Fix error when looking for target\n\tof <target>-gnatclean\n\n2017-09-13  Javier Miranda  <miranda@adacore.com>\n            Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch8.adb (Find_Expanded_Name): Complete code that identifies an\n\texpanded name that designates the current instance of a child unit in\n\tits own body and appears as the prefix of a reference to an entity\n\tlocal to the child unit.\n\nFrom-SVN: r252065", "tree": {"sha": "12b7f017e97782cf79c630dfe7f78da7b790f7e6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/12b7f017e97782cf79c630dfe7f78da7b790f7e6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0cb81445f403aa2b24813e6dd8df6f84314f2aa7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0cb81445f403aa2b24813e6dd8df6f84314f2aa7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0cb81445f403aa2b24813e6dd8df6f84314f2aa7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0cb81445f403aa2b24813e6dd8df6f84314f2aa7/comments", "author": null, "committer": null, "parents": [{"sha": "caf3dcdf25eb77b655d7bdf8e55fff3eacd487f8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/caf3dcdf25eb77b655d7bdf8e55fff3eacd487f8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/caf3dcdf25eb77b655d7bdf8e55fff3eacd487f8"}], "stats": {"total": 363, "additions": 226, "deletions": 137}, "files": [{"sha": "4f04cc0a138e3ccc7743a81f9230afe0fd947da4", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 53, "deletions": 0, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0cb81445f403aa2b24813e6dd8df6f84314f2aa7/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0cb81445f403aa2b24813e6dd8df6f84314f2aa7/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=0cb81445f403aa2b24813e6dd8df6f84314f2aa7", "patch": "@@ -1,3 +1,56 @@\n+2017-09-13  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* einfo.adb: Flag42 is now Is_Controlled_Active.\n+\t(Is_Controlled): This attribute is now synthesized.\n+\t(Is_Controlled_Active): This attribute is now an explicit flag rather\n+\tthan a synthesized attribute.\t(Set_Is_Controlled): Removed.\n+\t(Set_Is_Controlled_Active): New routine.\n+\t(Write_Entity_Flags): Update the output for Flag42.\n+\t* einfo.ads: Update the documentation of the following attributes:\n+\tDisable_Controlled, Is_Controlled, Is_Controlled_Active, Is_Controlled\n+\tand Is_Controlled_Active have swapped their functionality.\n+\t(Is_Controlled): Renamed to Is_Controlled_Active.\n+\t(Is_Controlled_Active): Renamed to Is_Controlled.\n+\t(Set_Is_Controlled): Renamed to Set_Is_Controlled_Active.\n+\t* exp_ch3.adb (Expand_Freeze_Record_Type): Restore the original use of\n+\tIs_Controlled.\n+\t* exp_util.adb (Has_Some_Controlled_Component): Code clean up.\n+\t(Needs_Finalization): Code clean up. Remove the tests for\n+\tDisable_Controlled because a) they were incorrect as they would reject\n+\ta type which is sublect to the aspect, but may contain controlled\n+\tcomponents, and b) they are no longer necessary.\n+\t* exp_util.ads (Needs_Finalization): Update comment on documentation.\n+\t* freeze.adb (Freeze_Array_Type): Restore the original use of\n+\tIs_Controlled.\n+\t(Freeze_Record_Type): Restore the original use of Is_Controlled.\n+\t* sem_ch3.adb (Analyze_Object_Declaration): Restore the original use of\n+\tIs_Controlled.\n+\t(Array_Type_Declaration): Restore the original use of Is_Controlled.\n+\t(Build_Derived_Private_Type): Restore the original use of\n+\tIs_Controlled.\n+\t(Build_Derived_Record_Type): Set the Is_Controlled_Active flag of a\n+\ttype derived from Ada.Finalization.[Limited_]Controlled.\n+\t(Build_Derived_Type): Restore the original use of Is_Controlled.\n+\t(Record_Type_Definition): Restore the original use of Is_Controlled.\n+\t* sem_ch7.adb (Preserve_Full_Attributes): Restore the original use of\n+\tIs_Controlled.\n+\t* sem_ch13.adb (Analyze_Aspect_Disable_Controlled): New routine.\n+\t(Analyze_Aspect_Specifications): Use routine\n+\tAnalyze_Aspect_Disable_Controlled to process aspect Disable_Controlled.\n+\n+2017-09-13  Vincent Celier  <celier@adacore.com>\n+\n+\t* clean.adb (Gnatclean): Fix error when looking for target\n+\tof <target>-gnatclean\n+\n+2017-09-13  Javier Miranda  <miranda@adacore.com>\n+            Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch8.adb (Find_Expanded_Name): Complete code that identifies an\n+\texpanded name that designates the current instance of a child unit in\n+\tits own body and appears as the prefix of a reference to an entity\n+\tlocal to the child unit.\n+\n 2017-09-12  Bob Duff  <duff@adacore.com>\n \n \t* sem_warn.adb: Minor comment."}, {"sha": "2b3d03324edb278fffc6bb654db547597bb32cfb", "filename": "gcc/ada/clean.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0cb81445f403aa2b24813e6dd8df6f84314f2aa7/gcc%2Fada%2Fclean.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0cb81445f403aa2b24813e6dd8df6f84314f2aa7/gcc%2Fada%2Fclean.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fclean.adb?ref=0cb81445f403aa2b24813e6dd8df6f84314f2aa7", "patch": "@@ -519,7 +519,7 @@ package body Clean is\n             Find_Program_Name;\n \n             if Name_Len > 10\n-              and then Name_Buffer (Name_Len - 7 .. Name_Len) = \"gnatclean\"\n+              and then Name_Buffer (Name_Len - 8 .. Name_Len) = \"gnatclean\"\n             then\n                Target  := new String'(Name_Buffer (1 .. Name_Len - 9));\n                Arg_Len := Arg_Len + 1;"}, {"sha": "21d88385a8f2c29d7c19c8b0178d54bb18cd321a", "filename": "gcc/ada/einfo.adb", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0cb81445f403aa2b24813e6dd8df6f84314f2aa7/gcc%2Fada%2Feinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0cb81445f403aa2b24813e6dd8df6f84314f2aa7/gcc%2Fada%2Feinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.adb?ref=0cb81445f403aa2b24813e6dd8df6f84314f2aa7", "patch": "@@ -334,7 +334,7 @@ package body Einfo is\n    --    Body_Needed_For_SAL             Flag40\n \n    --    Treat_As_Volatile               Flag41\n-   --    Is_Controlled                   Flag42\n+   --    Is_Controlled_Active            Flag42\n    --    Has_Controlled_Component        Flag43\n    --    Is_Pure                         Flag44\n    --    In_Private_Part                 Flag45\n@@ -2189,10 +2189,10 @@ package body Einfo is\n       return Flag76 (Id);\n    end Is_Constructor;\n \n-   function Is_Controlled (Id : E) return B is\n+   function Is_Controlled_Active (Id : E) return B is\n    begin\n       return Flag42 (Base_Type (Id));\n-   end Is_Controlled;\n+   end Is_Controlled_Active;\n \n    function Is_Controlling_Formal (Id : E) return B is\n    begin\n@@ -5341,11 +5341,11 @@ package body Einfo is\n       Set_Flag76 (Id, V);\n    end Set_Is_Constructor;\n \n-   procedure Set_Is_Controlled (Id : E; V : B := True) is\n+   procedure Set_Is_Controlled_Active (Id : E; V : B := True) is\n    begin\n       pragma Assert (Id = Base_Type (Id));\n       Set_Flag42 (Id, V);\n-   end Set_Is_Controlled;\n+   end Set_Is_Controlled_Active;\n \n    procedure Set_Is_Controlling_Formal (Id : E; V : B := True) is\n    begin\n@@ -7902,14 +7902,14 @@ package body Einfo is\n         K = E_Constant or else K = E_In_Parameter or else K = E_Loop_Parameter;\n    end Is_Constant_Object;\n \n-   --------------------------\n-   -- Is_Controlled_Active --\n-   --------------------------\n+   -------------------\n+   -- Is_Controlled --\n+   -------------------\n \n-   function Is_Controlled_Active (Id : E) return B is\n+   function Is_Controlled (Id : E) return B is\n    begin\n-      return Is_Controlled (Id) and then not Disable_Controlled (Id);\n-   end Is_Controlled_Active;\n+      return Is_Controlled_Active (Id) and then not Disable_Controlled (Id);\n+   end Is_Controlled;\n \n    --------------------\n    -- Is_Discriminal --\n@@ -9549,7 +9549,7 @@ package body Einfo is\n       W (\"Is_Constr_Subt_For_U_Nominal\",    Flag80  (Id));\n       W (\"Is_Constrained\",                  Flag12  (Id));\n       W (\"Is_Constructor\",                  Flag76  (Id));\n-      W (\"Is_Controlled\",                   Flag42  (Id));\n+      W (\"Is_Controlled_Active\",            Flag42  (Id));\n       W (\"Is_Controlling_Formal\",           Flag97  (Id));\n       W (\"Is_Descendant_Of_Address\",        Flag223 (Id));\n       W (\"Is_DIC_Procedure\",                Flag132 (Id));"}, {"sha": "fa349cd270d77feccfe2385cb8a876662998189e", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 18, "deletions": 17, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0cb81445f403aa2b24813e6dd8df6f84314f2aa7/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0cb81445f403aa2b24813e6dd8df6f84314f2aa7/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=0cb81445f403aa2b24813e6dd8df6f84314f2aa7", "patch": "@@ -980,8 +980,9 @@ package Einfo is\n --       incomplete type.\n \n --    Disable_Controlled (Flag253)\n---      Present in all entities. Set for a controlled type (Is_Controlled flag\n---      set) if the aspect Disable_Controlled is active for the type.\n+--      Present in all entities. Set for a controlled type subject to aspect\n+--      Disable_Controlled which evaluates to True. This flag is taken into\n+--      account in synthesized attribute Is_Controlled.\n \n --    Discard_Names (Flag88)\n --       Defined in types and exception entities. Set if pragma Discard_Names\n@@ -2443,14 +2444,14 @@ package Einfo is\n --       Defined in function and procedure entities. Set if a pragma\n --       CPP_Constructor applies to the subprogram.\n \n---    Is_Controlled (Flag42) [base type only]\n+--    Is_Controlled_Active (Flag42) [base type only]\n --       Defined in all type entities. Indicates that the type is controlled,\n --       i.e. is either a descendant of Ada.Finalization.Controlled or of\n --       Ada.Finalization.Limited_Controlled.\n \n---    Is_Controlled_Active (synth) [base type only]\n---       Defined in all type entities. Set if Is_Controlled is set for the\n---       type, and Disable_Controlled is not set.\n+--    Is_Controlled (synth) [base type only]\n+--       Defined in all type entities. Set if Is_Controlled_Active is set for\n+--       the type, and Disable_Controlled is not set.\n \n --    Is_Controlling_Formal (Flag97)\n --       Defined in all Formal_Kind entities. Marks the controlling parameters\n@@ -5648,7 +5649,7 @@ package Einfo is\n    --    Is_Atomic                           (Flag85)\n    --    Is_Constr_Subt_For_U_Nominal        (Flag80)\n    --    Is_Constr_Subt_For_UN_Aliased       (Flag141)\n-   --    Is_Controlled                       (Flag42)   (base type only)\n+   --    Is_Controlled_Active                (Flag42)   (base type only)\n    --    Is_Eliminated                       (Flag124)\n    --    Is_Frozen                           (Flag4)\n    --    Is_Generic_Actual_Type              (Flag94)\n@@ -5684,7 +5685,7 @@ package Einfo is\n    --    Invariant_Procedure                 (synth)\n    --    Is_Access_Protected_Subprogram_Type (synth)\n    --    Is_Atomic_Or_VFA                    (synth)\n-   --    Is_Controlled_Active                (synth)\n+   --    Is_Controlled                       (synth)\n    --    Partial_Invariant_Procedure         (synth)\n    --    Predicate_Function                  (synth)\n    --    Predicate_Function_M                (synth)\n@@ -6344,7 +6345,7 @@ package Einfo is\n    --    Private_View                        (Node22)\n    --    Stored_Constraint                   (Elist23)\n    --    Has_Completion                      (Flag26)\n-   --    Is_Controlled                       (Flag42)   (base type only)\n+   --    Is_Controlled_Active                (Flag42)   (base type only)\n    --    Is_For_Access_Subtype               (Flag118)  (subtype only)\n    --    (plus type attributes)\n \n@@ -6497,7 +6498,7 @@ package Einfo is\n    --    Is_Class_Wide_Equivalent_Type       (Flag35)\n    --    Is_Concurrent_Record_Type           (Flag20)\n    --    Is_Constrained                      (Flag12)\n-   --    Is_Controlled                       (Flag42)   (base type only)\n+   --    Is_Controlled_Active                (Flag42)   (base type only)\n    --    Is_Interface                        (Flag186)\n    --    Is_Limited_Interface                (Flag197)\n    --    No_Reordering                       (Flag239)  (base type only)\n@@ -6526,7 +6527,7 @@ package Einfo is\n    --    Has_Record_Rep_Clause               (Flag65)   (base type only)\n    --    Is_Concurrent_Record_Type           (Flag20)\n    --    Is_Constrained                      (Flag12)\n-   --    Is_Controlled                       (Flag42)   (base type only)\n+   --    Is_Controlled_Active                (Flag42)   (base type only)\n    --    Is_Interface                        (Flag186)\n    --    Is_Limited_Interface                (Flag197)\n    --    No_Reordering                       (Flag239)  (base type only)\n@@ -7169,7 +7170,7 @@ package Einfo is\n    function Is_Constr_Subt_For_UN_Aliased       (Id : E) return B;\n    function Is_Constrained                      (Id : E) return B;\n    function Is_Constructor                      (Id : E) return B;\n-   function Is_Controlled                       (Id : E) return B;\n+   function Is_Controlled_Active                (Id : E) return B;\n    function Is_Controlling_Formal               (Id : E) return B;\n    function Is_CPP_Class                        (Id : E) return B;\n    function Is_Descendant_Of_Address            (Id : E) return B;\n@@ -7489,7 +7490,7 @@ package Einfo is\n    function Is_Base_Type                        (Id : E) return B;\n    function Is_Boolean_Type                     (Id : E) return B;\n    function Is_Constant_Object                  (Id : E) return B;\n-   function Is_Controlled_Active                (Id : E) return B;\n+   function Is_Controlled                       (Id : E) return B;\n    function Is_Discriminal                      (Id : E) return B;\n    function Is_Dynamic_Scope                    (Id : E) return B;\n    function Is_External_State                   (Id : E) return B;\n@@ -7858,7 +7859,7 @@ package Einfo is\n    procedure Set_Is_Constr_Subt_For_UN_Aliased   (Id : E; V : B := True);\n    procedure Set_Is_Constrained                  (Id : E; V : B := True);\n    procedure Set_Is_Constructor                  (Id : E; V : B := True);\n-   procedure Set_Is_Controlled                   (Id : E; V : B := True);\n+   procedure Set_Is_Controlled_Active            (Id : E; V : B := True);\n    procedure Set_Is_Controlling_Formal           (Id : E; V : B := True);\n    procedure Set_Is_CPP_Class                    (Id : E; V : B := True);\n    procedure Set_Is_Descendant_Of_Address        (Id : E; V : B := True);\n@@ -8676,7 +8677,7 @@ package Einfo is\n    pragma Inline (Is_Constr_Subt_For_UN_Aliased);\n    pragma Inline (Is_Constrained);\n    pragma Inline (Is_Constructor);\n-   pragma Inline (Is_Controlled);\n+   pragma Inline (Is_Controlled_Active);\n    pragma Inline (Is_Controlling_Formal);\n    pragma Inline (Is_CPP_Class);\n    pragma Inline (Is_Decimal_Fixed_Point_Type);\n@@ -9190,7 +9191,7 @@ package Einfo is\n    pragma Inline (Set_Is_Constr_Subt_For_UN_Aliased);\n    pragma Inline (Set_Is_Constrained);\n    pragma Inline (Set_Is_Constructor);\n-   pragma Inline (Set_Is_Controlled);\n+   pragma Inline (Set_Is_Controlled_Active);\n    pragma Inline (Set_Is_Controlling_Formal);\n    pragma Inline (Set_Is_CPP_Class);\n    pragma Inline (Set_Is_Descendant_Of_Address);\n@@ -9434,7 +9435,7 @@ package Einfo is\n \n    pragma Inline (Base_Type);\n    pragma Inline (Is_Base_Type);\n-   pragma Inline (Is_Controlled_Active);\n+   pragma Inline (Is_Controlled);\n    pragma Inline (Is_Package_Or_Generic_Package);\n    pragma Inline (Is_Packed_Array);\n    pragma Inline (Is_Subprogram_Or_Generic_Subprogram);"}, {"sha": "9ed8ea0ae1656523f25029261b353a6d6df1626a", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0cb81445f403aa2b24813e6dd8df6f84314f2aa7/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0cb81445f403aa2b24813e6dd8df6f84314f2aa7/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=0cb81445f403aa2b24813e6dd8df6f84314f2aa7", "patch": "@@ -4951,7 +4951,7 @@ package body Exp_Ch3 is\n            and then\n              (Has_Controlled_Component (Comp_Typ)\n                or else (Chars (Comp) /= Name_uParent\n-                         and then (Is_Controlled_Active (Comp_Typ))))\n+                         and then Is_Controlled (Comp_Typ)))\n          then\n             Set_Has_Controlled_Component (Typ);\n          end if;"}, {"sha": "b8c528eb52c9568514c43c4ea7bd6eef7fceb6e3", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 42, "deletions": 41, "changes": 83, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0cb81445f403aa2b24813e6dd8df6f84314f2aa7/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0cb81445f403aa2b24813e6dd8df6f84314f2aa7/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=0cb81445f403aa2b24813e6dd8df6f84314f2aa7", "patch": "@@ -10296,48 +10296,48 @@ package body Exp_Util is\n    -- Needs_Finalization --\n    ------------------------\n \n-   function Needs_Finalization (T : Entity_Id) return Boolean is\n-      function Has_Some_Controlled_Component (Rec : Entity_Id) return Boolean;\n-      --  If type is not frozen yet, check explicitly among its components,\n-      --  because the Has_Controlled_Component flag is not necessarily set.\n+   function Needs_Finalization (Typ : Entity_Id) return Boolean is\n+      function Has_Some_Controlled_Component\n+        (Input_Typ : Entity_Id) return Boolean;\n+      --  Determine whether type Input_Typ has at least one controlled\n+      --  component.\n \n       -----------------------------------\n       -- Has_Some_Controlled_Component --\n       -----------------------------------\n \n       function Has_Some_Controlled_Component\n-        (Rec : Entity_Id) return Boolean\n+        (Input_Typ : Entity_Id) return Boolean\n       is\n          Comp : Entity_Id;\n \n       begin\n-         if Has_Controlled_Component (Rec) then\n+         --  When a type is already frozen and has at least one controlled\n+         --  component, or is manually decorated, it is sufficient to inspect\n+         --  flag Has_Controlled_Component.\n+\n+         if Has_Controlled_Component (Input_Typ) then\n             return True;\n \n-         elsif not Is_Frozen (Rec) then\n-            if Is_Record_Type (Rec) then\n-               Comp := First_Entity (Rec);\n+         --  Otherwise inspect the internals of the type\n+\n+         elsif not Is_Frozen (Input_Typ) then\n+            if Is_Array_Type (Input_Typ) then\n+               return Needs_Finalization (Component_Type (Input_Typ));\n \n+            elsif Is_Record_Type (Input_Typ) then\n+               Comp := First_Component (Input_Typ);\n                while Present (Comp) loop\n-                  if not Is_Type (Comp)\n-                    and then Needs_Finalization (Etype (Comp))\n-                  then\n+                  if Needs_Finalization (Etype (Comp)) then\n                      return True;\n                   end if;\n \n-                  Next_Entity (Comp);\n+                  Next_Component (Comp);\n                end loop;\n-\n-               return False;\n-\n-            else\n-               return\n-                 Is_Array_Type (Rec)\n-                   and then Needs_Finalization (Component_Type (Rec));\n             end if;\n-         else\n-            return False;\n          end if;\n+\n+         return False;\n       end Has_Some_Controlled_Component;\n \n    --  Start of processing for Needs_Finalization\n@@ -10349,32 +10349,34 @@ package body Exp_Util is\n       if Restriction_Active (No_Finalization) then\n          return False;\n \n-      --  C++ types are not considered controlled. It is assumed that the\n-      --  non-Ada side will handle their clean up.\n+      --  C++ types are not considered controlled. It is assumed that the non-\n+      --  Ada side will handle their clean up.\n \n-      elsif Convention (T) = Convention_CPP then\n+      elsif Convention (Typ) = Convention_CPP then\n          return False;\n \n-      --  Never needs finalization if Disable_Controlled set\n+      --  Class-wide types are treated as controlled because derivations from\n+      --  the root type may introduce controlled components.\n \n-      elsif Disable_Controlled (T) then\n-         return False;\n+      elsif Is_Class_Wide_Type (Typ) then\n+         return True;\n \n-      elsif Is_Class_Wide_Type (T) and then Disable_Controlled (Etype (T)) then\n-         return False;\n+      --  Concurrent types are controlled as long as their corresponding record\n+      --  is controlled.\n \n-      else\n-         --  Class-wide types are treated as controlled because derivations\n-         --  from the root type can introduce controlled components.\n+      elsif Is_Concurrent_Type (Typ)\n+        and then Present (Corresponding_Record_Type (Typ))\n+        and then Needs_Finalization (Corresponding_Record_Type (Typ))\n+      then\n+         return True;\n+\n+      --  Otherwise the type is controlled when it is either derived from type\n+      --  [Limited_]Controlled and not subject to aspect Disable_Controlled, or\n+      --  contains at least one controlled component.\n \n+      else\n          return\n-           Is_Class_Wide_Type (T)\n-             or else Is_Controlled (T)\n-             or else Has_Some_Controlled_Component (T)\n-             or else\n-               (Is_Concurrent_Type (T)\n-                 and then Present (Corresponding_Record_Type (T))\n-                 and then Needs_Finalization (Corresponding_Record_Type (T)));\n+           Is_Controlled (Typ) or else Has_Some_Controlled_Component (Typ);\n       end if;\n    end Needs_Finalization;\n \n@@ -10387,7 +10389,6 @@ package body Exp_Util is\n       Typ  : Entity_Id) return Boolean\n    is\n    begin\n-\n       --  If we have no initialization of any kind, then we don't need to place\n       --  any restrictions on the address clause, because the object will be\n       --  elaborated after the address clause is evaluated. This happens if the"}, {"sha": "99500584dd88b45ceb011c1b8c25a2729a56e81b", "filename": "gcc/ada/exp_util.ads", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0cb81445f403aa2b24813e6dd8df6f84314f2aa7/gcc%2Fada%2Fexp_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0cb81445f403aa2b24813e6dd8df6f84314f2aa7/gcc%2Fada%2Fexp_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.ads?ref=0cb81445f403aa2b24813e6dd8df6f84314f2aa7", "patch": "@@ -924,11 +924,9 @@ package Exp_Util is\n    --  consist of constants, when the object has a nontrivial initialization\n    --  or is controlled.\n \n-   function Needs_Finalization (T : Entity_Id) return Boolean;\n-   --  True if type T is controlled, or has controlled subcomponents. Also\n-   --  True if T is a class-wide type, because some type extension might add\n-   --  controlled subcomponents, except that if pragma Restrictions\n-   --  (No_Finalization) applies, this is False for class-wide types.\n+   function Needs_Finalization (Typ : Entity_Id) return Boolean;\n+   --  Determine whether type Typ is controlled and this requires finalization\n+   --  actions.\n \n    function Non_Limited_Designated_Type (T : Entity_Id) return Entity_Id;\n    --  An anonymous access type may designate a limited view. Check whether"}, {"sha": "cff742a83b3543b96604c6f48b83c2675d1f90c1", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0cb81445f403aa2b24813e6dd8df6f84314f2aa7/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0cb81445f403aa2b24813e6dd8df6f84314f2aa7/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=0cb81445f403aa2b24813e6dd8df6f84314f2aa7", "patch": "@@ -2574,7 +2574,7 @@ package body Freeze is\n \n             --  Propagate flags for component type\n \n-            if Is_Controlled_Active (Component_Type (Arr))\n+            if Is_Controlled (Component_Type (Arr))\n               or else Has_Controlled_Component (Ctyp)\n             then\n                Set_Has_Controlled_Component (Arr);\n@@ -4508,7 +4508,7 @@ package body Freeze is\n                    (Has_Controlled_Component (Etype (Comp))\n                      or else\n                        (Chars (Comp) /= Name_uParent\n-                         and then Is_Controlled_Active (Etype (Comp)))\n+                         and then Is_Controlled (Etype (Comp)))\n                      or else\n                        (Is_Protected_Type (Etype (Comp))\n                          and then"}, {"sha": "3ab8b359844f780dc606202f9ac6d84f779be261", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 63, "deletions": 33, "changes": 96, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0cb81445f403aa2b24813e6dd8df6f84314f2aa7/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0cb81445f403aa2b24813e6dd8df6f84314f2aa7/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=0cb81445f403aa2b24813e6dd8df6f84314f2aa7", "patch": "@@ -1595,6 +1595,9 @@ package body Sem_Ch13 is\n             procedure Analyze_Aspect_Convention;\n             --  Perform analysis of aspect Convention\n \n+            procedure Analyze_Aspect_Disable_Controlled;\n+            --  Perform analysis of aspect Disable_Controlled\n+\n             procedure Analyze_Aspect_Export_Import;\n             --  Perform analysis of aspects Export or Import\n \n@@ -1678,6 +1681,60 @@ package body Sem_Ch13 is\n                end if;\n             end Analyze_Aspect_Convention;\n \n+            ---------------------------------------\n+            -- Analyze_Aspect_Disable_Controlled --\n+            ---------------------------------------\n+\n+            procedure Analyze_Aspect_Disable_Controlled is\n+            begin\n+               --  The aspect applies only to controlled records\n+\n+               if not (Ekind (E) = E_Record_Type\n+                        and then Is_Controlled_Active (E))\n+               then\n+                  Error_Msg_N\n+                    (\"aspect % requires controlled record type\", Aspect);\n+                  return;\n+               end if;\n+\n+               --  Preanalyze the expression (if any) when the aspect resides\n+               --  in a generic unit.\n+\n+               if Inside_A_Generic then\n+                  if Present (Expr) then\n+                     Preanalyze_And_Resolve (Expr, Any_Boolean);\n+                  end if;\n+\n+               --  Otherwise the aspect resides in a nongeneric context\n+\n+               else\n+                  --  A controlled record type loses its controlled semantics\n+                  --  when the expression statically evaluates to True.\n+\n+                  if Present (Expr) then\n+                     Analyze_And_Resolve (Expr, Any_Boolean);\n+\n+                     if Is_OK_Static_Expression (Expr) then\n+                        if Is_True (Static_Boolean (Expr)) then\n+                           Set_Disable_Controlled (E);\n+                        end if;\n+\n+                     --  Otherwise the expression is not static\n+\n+                     else\n+                        Error_Msg_N\n+                          (\"expression of aspect % must be static\", Aspect);\n+                     end if;\n+\n+                  --  Otherwise the aspect appears without an expression and\n+                  --  defaults to True.\n+\n+                  else\n+                     Set_Disable_Controlled (E);\n+                  end if;\n+               end if;\n+            end Analyze_Aspect_Disable_Controlled;\n+\n             ----------------------------------\n             -- Analyze_Aspect_Export_Import --\n             ----------------------------------\n@@ -3468,34 +3525,7 @@ package body Sem_Ch13 is\n                   --  Disable_Controlled\n \n                   elsif A_Id = Aspect_Disable_Controlled then\n-                     if Ekind (E) /= E_Record_Type\n-                       or else not Is_Controlled (E)\n-                     then\n-                        Error_Msg_N\n-                          (\"aspect % requires controlled record type\", Aspect);\n-                        goto Continue;\n-                     end if;\n-\n-                     --  If we're in a generic template, we don't want to try\n-                     --  to disable controlled types, because typical usage is\n-                     --  \"Disable_Controlled => not <some_check>'Enabled\", and\n-                     --  the value of Enabled is not known until we see a\n-                     --  particular instance. In such a context, we just need\n-                     --  to preanalyze the expression for legality.\n-\n-                     if Expander_Active then\n-                        Analyze_And_Resolve (Expr, Standard_Boolean);\n-\n-                        if not Present (Expr)\n-                          or else Is_True (Static_Boolean (Expr))\n-                        then\n-                           Set_Disable_Controlled (E);\n-                        end if;\n-\n-                     elsif Serious_Errors_Detected = 0 then\n-                        Preanalyze_And_Resolve (Expr, Standard_Boolean);\n-                     end if;\n-\n+                     Analyze_Aspect_Disable_Controlled;\n                      goto Continue;\n                   end if;\n \n@@ -10839,8 +10869,8 @@ package body Sem_Ch13 is\n \n       E : constant Entity_Id := Entity (N);\n \n-      Non_Generic_Case : constant Boolean := Nkind (N) = N_Freeze_Entity;\n-      --  True in non-generic case. Some of the processing here is skipped\n+      Nongeneric_Case : constant Boolean := Nkind (N) = N_Freeze_Entity;\n+      --  True in nongeneric case. Some of the processing here is skipped\n       --  for the generic case since it is not needed. Basically in the\n       --  generic case, we only need to do stuff that might generate error\n       --  messages or warnings.\n@@ -10867,7 +10897,7 @@ package body Sem_Ch13 is\n       --  This is not needed in the generic case\n \n       if Ada_Version >= Ada_2005\n-        and then Non_Generic_Case\n+        and then Nongeneric_Case\n         and then Ekind (E) = E_Record_Type\n         and then Is_Tagged_Type (E)\n         and then not Is_Interface (E)\n@@ -11003,7 +11033,7 @@ package body Sem_Ch13 is\n       --  predefined primitives.\n \n       if Is_Type (E)\n-        and then Non_Generic_Case\n+        and then Nongeneric_Case\n         and then not Within_Internal_Subprogram\n         and then Has_Predicates (E)\n       then\n@@ -11019,7 +11049,7 @@ package body Sem_Ch13 is\n \n       --  This is also not needed in the generic case\n \n-      if Non_Generic_Case\n+      if Nongeneric_Case\n         and then Has_Delayed_Aspects (E)\n         and then Scope (E) = Current_Scope\n       then"}, {"sha": "803ff81c24ae2cf245a31cb509e4858bd2d7d36b", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 28, "deletions": 24, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0cb81445f403aa2b24813e6dd8df6f84314f2aa7/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0cb81445f403aa2b24813e6dd8df6f84314f2aa7/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=0cb81445f403aa2b24813e6dd8df6f84314f2aa7", "patch": "@@ -4848,7 +4848,7 @@ package body Sem_Ch3 is\n         and then not Is_Constrained (Underlying_Type (T))\n         and then not Is_Aliased (Id)\n         and then not Is_Class_Wide_Type (T)\n-        and then not Is_Controlled_Active (T)\n+        and then not Is_Controlled (T)\n         and then not Has_Controlled_Component (Base_Type (T))\n         and then Expander_Active\n       then\n@@ -6157,7 +6157,7 @@ package body Sem_Ch3 is\n          Set_Has_Controlled_Component\n                             (Implicit_Base,\n                               Has_Controlled_Component (Element_Type)\n-                                or else Is_Controlled_Active  (Element_Type));\n+                                or else Is_Controlled (Element_Type));\n          Set_Packed_Array_Impl_Type\n                             (Implicit_Base, Empty);\n \n@@ -6178,7 +6178,7 @@ package body Sem_Ch3 is\n          Set_Has_Controlled_Component (T, Has_Controlled_Component\n                                                         (Element_Type)\n                                             or else\n-                                          Is_Controlled_Active (Element_Type));\n+                                          Is_Controlled (Element_Type));\n          Set_Finalize_Storage_Only    (T, Finalize_Storage_Only\n                                                         (Element_Type));\n          Set_Default_SSO              (T);\n@@ -7897,18 +7897,21 @@ package body Sem_Ch3 is\n             Error_Msg_N (\"cannot add discriminants to untagged type\", N);\n          end if;\n \n-         Set_Stored_Constraint  (Derived_Type, No_Elist);\n-         Set_Is_Constrained     (Derived_Type, Is_Constrained (Parent_Type));\n-         Set_Is_Controlled      (Derived_Type, Is_Controlled  (Parent_Type));\n-         Set_Disable_Controlled (Derived_Type, Disable_Controlled\n-                                                              (Parent_Type));\n+         Set_Stored_Constraint (Derived_Type, No_Elist);\n+         Set_Is_Constrained    (Derived_Type, Is_Constrained (Parent_Type));\n+\n+         Set_Is_Controlled_Active\n+           (Derived_Type, Is_Controlled_Active     (Parent_Type));\n+\n+         Set_Disable_Controlled\n+           (Derived_Type, Disable_Controlled       (Parent_Type));\n+\n          Set_Has_Controlled_Component\n-                                (Derived_Type, Has_Controlled_Component\n-                                                              (Parent_Type));\n+           (Derived_Type, Has_Controlled_Component (Parent_Type));\n \n          --  Direct controlled types do not inherit Finalize_Storage_Only flag\n \n-         if not Is_Controlled_Active (Parent_Type) then\n+         if not Is_Controlled (Parent_Type) then\n             Set_Finalize_Storage_Only\n               (Base_Type (Derived_Type), Finalize_Storage_Only (Parent_Type));\n          end if;\n@@ -9206,9 +9209,10 @@ package body Sem_Ch3 is\n            and then Chars (Scope (Scope (Derived_Type))) = Name_Ada\n            and then Scope (Scope (Scope (Derived_Type))) = Standard_Standard\n          then\n-            Set_Is_Controlled (Derived_Type);\n+            Set_Is_Controlled_Active (Derived_Type);\n          else\n-            Set_Is_Controlled (Derived_Type, Is_Controlled (Parent_Base));\n+            Set_Is_Controlled_Active\n+              (Derived_Type, Is_Controlled_Active (Parent_Base));\n          end if;\n \n          --  Minor optimization: there is no need to generate the class-wide\n@@ -9475,19 +9479,20 @@ package body Sem_Ch3 is\n    begin\n       --  Set common attributes\n \n-      Set_Scope                (Derived_Type, Current_Scope);\n-\n+      Set_Scope                  (Derived_Type, Current_Scope);\n       Set_Etype                  (Derived_Type,        Parent_Base);\n       Set_Ekind                  (Derived_Type, Ekind (Parent_Base));\n       Propagate_Concurrent_Flags (Derived_Type,        Parent_Base);\n \n-      Set_Size_Info          (Derived_Type,                     Parent_Type);\n-      Set_RM_Size            (Derived_Type, RM_Size            (Parent_Type));\n-      Set_Is_Controlled      (Derived_Type, Is_Controlled      (Parent_Type));\n-      Set_Disable_Controlled (Derived_Type, Disable_Controlled (Parent_Type));\n+      Set_Size_Info (Derived_Type,          Parent_Type);\n+      Set_RM_Size   (Derived_Type, RM_Size (Parent_Type));\n \n-      Set_Is_Tagged_Type (Derived_Type, Is_Tagged_Type (Parent_Type));\n-      Set_Is_Volatile    (Derived_Type, Is_Volatile    (Parent_Type));\n+      Set_Is_Controlled_Active\n+        (Derived_Type, Is_Controlled_Active (Parent_Type));\n+\n+      Set_Disable_Controlled (Derived_Type, Disable_Controlled (Parent_Type));\n+      Set_Is_Tagged_Type     (Derived_Type, Is_Tagged_Type     (Parent_Type));\n+      Set_Is_Volatile        (Derived_Type, Is_Volatile        (Parent_Type));\n \n       if Is_Tagged_Type (Derived_Type) then\n          Set_No_Tagged_Streams_Pragma\n@@ -21799,7 +21804,7 @@ package body Sem_Ch3 is\n          end;\n       end if;\n \n-      Final_Storage_Only := not Is_Controlled_Active (T);\n+      Final_Storage_Only := not Is_Controlled (T);\n \n       --  Ada 2005: Check whether an explicit Limited is present in a derived\n       --  type declaration.\n@@ -21859,8 +21864,7 @@ package body Sem_Ch3 is\n          elsif not Is_Class_Wide_Equivalent_Type (T)\n            and then (Has_Controlled_Component (Etype (Component))\n                       or else (Chars (Component) /= Name_uParent\n-                                and then Is_Controlled_Active\n-                                           (Etype (Component))))\n+                                and then Is_Controlled (Etype (Component))))\n          then\n             Set_Has_Controlled_Component (T, True);\n             Final_Storage_Only :="}, {"sha": "030d4f09a7c3f6daafe5fdec412da423fbabfcf9", "filename": "gcc/ada/sem_ch7.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0cb81445f403aa2b24813e6dd8df6f84314f2aa7/gcc%2Fada%2Fsem_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0cb81445f403aa2b24813e6dd8df6f84314f2aa7/gcc%2Fada%2Fsem_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch7.adb?ref=0cb81445f403aa2b24813e6dd8df6f84314f2aa7", "patch": "@@ -2644,7 +2644,8 @@ package body Sem_Ch7 is\n          end if;\n \n          if Priv_Is_Base_Type then\n-            Set_Is_Controlled (Priv, Is_Controlled            (Full_Base));\n+            Set_Is_Controlled_Active\n+                              (Priv, Is_Controlled_Active     (Full_Base));\n             Set_Finalize_Storage_Only\n                               (Priv, Finalize_Storage_Only    (Full_Base));\n             Set_Has_Controlled_Component"}, {"sha": "89478415bd417f5b52d4ef2fe63dbefe4860318a", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0cb81445f403aa2b24813e6dd8df6f84314f2aa7/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0cb81445f403aa2b24813e6dd8df6f84314f2aa7/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=0cb81445f403aa2b24813e6dd8df6f84314f2aa7", "patch": "@@ -6013,6 +6013,7 @@ package body Sem_Ch8 is\n               and then Ekind (Scope (Id)) = E_Package\n               and then Ekind (Id) = E_Package\n               and then Renamed_Entity (Id) = Scope (Id)\n+              and then Is_Immediately_Visible (P_Name)\n             then\n                Is_New_Candidate := True;\n "}]}