{"sha": "8a6a52dcb9b0a1f64fcaee58936fc84d416c7651", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGE2YTUyZGNiOWIwYTFmNjRmY2FlZTU4OTM2ZmM4NGQ0MTZjNzY1MQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2004-03-05T10:58:59Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2004-03-05T10:58:59Z"}, "message": "[multiple changes]\n\n2004-03-05  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n\n\t* trans.c: Reflect GCC changes to fix bootstrap problem.\n\tAdd warning for suspicious aliasing unchecked conversion.\n\n2004-03-05  Robert Dewar  <dewar@gnat.com>\n\n\t* 56taprop.adb, 5ataprop.adb: Remove unneeded unchecked conversions\n\n\t* a-tags.adb, a-tags.ads, s-finimp.adb, s-finroo.ads,\n\ti-cpoint.ads, i-cpoint.adb, i-cstrin.adb, i-cstrin.ads,\n\t5iosinte.ads, 5sosinte.ads, 5staspri.ads, 5itaprop.adb,\n\t5staprop.adb, 5wtaprop.adb, s-tataat.ads, s-tataat.adb: Move\n\tunchecked conversion to spec to avoid warnings.\n\n\t* s-tasini.adb, s-taskin.ads, 5atpopsp.adb: Correct spelling Task_Id\n\tto Task_ID\n\n\t* 7stpopsp.adb: Correct casing in To_Task_ID call\n\n\t* a-strsea.ads, a-strsea.adb: Minor reformatting\n\n\t* einfo.ads, einfo.adb: Define new flag No_Strict_Aliasing\n\n\t* errout.ads: Switch for VMS is now NO_STRICT_ALIASING.\n\tAdjust Max_Msg_Length to be clearly large enough.\n\n\t* fe.h: Define In_Same_Source_Unit\n\n\t* osint.adb: Add pragma Warnings Off to suppress warnings\n\t* g-dyntab.adb, g-table.adb, g-thread.adb: Add Warnings (Off) to kill\n\taliasing warnings.\n\n\t* opt.ads: Put entries in alpha order. Add entry for No_Strict_Aliasing\n\n\t* par-prag.adb: Add dummy entry for No_Strict_Aliasing pragma\n\n\t* sem_ch13.adb: Generate validate unchecked conversion nodes for gcc.\n\n\t* sem_ch3.adb: Set No_Strict_Aliasing flag if config pragma set.\n\n\t* sem_prag.adb: Implement pragma No_Strict_Aliasing.\n\n\t* sinfo.ads: Remove obsolete comment on validate unchecked conversion\n\tnode. We now do generate them for gcc back end.\n\n\t* table.adb, sinput.adb: Add pragma Warnings Off to suppress aliasing\n\twarning.\n\n\t* sinput-c.adb: Fix bad name in header.\n\tAdd pragma Warnings Off to suppress aliasing warning.\n\n\t* sinput-l.adb: Add pragma Warnings Off to suppress aliasing warning.\n\n\t* snames.h, snames.ads, snames.adb: Add entry for pragma\n\tNo_Strict_Aliasing.\n\n2004-03-05  Vincent Celier  <celier@gnat.com>\n\n\t* prj-com.ads: Add hash table Files_Htable to check when a file name\n\tis already a source of another project.\n\n\t* prj-nmsc.adb (Record_Source): Before recording a new source, check\n\tif its file name is not already a source of another project. Report an\n\terror if it is.\n\n\t* gnatcmd.adb: When GNAT PRETTY is invoked with a project file and no\n\tsource file name, call gnatpp with all the sources of the main project.\n\n\t* vms_conv.adb (Initialize): GNAT PRETTY may be called with any number\n\tof file names.\n\n\t* vms_data.ads: Correct documentation of new /OPTIMIZE keyword\n\tNO_STRICT_ALIASING. Add new qualifier for GNAT PRETTY:\n\t/RUNTIME_SYSTEM=, converted to --RTS=\n\t/NOTABS, converted to -notabs\n\n2004-03-05  Pascal Obry  <obry@gnat.com>\n\n\t* make.adb: Minor reformatting.\n\n2004-03-05  Ed Schonberg  <schonberg@gnat.com>\n\n\tPart of implemention of AI-262.\n\t* par-ch10.adb (P_Context_Clause): Recognize private with_clauses.\n\n\t* sem_ch10.ads, sem_ch10.adb: (Install_Private_With_Clauses): New\n\tprocedure.\n\n\t* sem_ch3.adb (Analyze_Component_Declaration): Improve error message\n\twhen component type is a partially constrained class-wide subtype.\n\t(Constrain_Discriminated_Type): If parent type has unknown\n\tdiscriminants, a constraint is illegal, even if full view has\n\tdiscriminants.\n\t(Build_Derived_Record_Type): Inherit discriminants when deriving a type\n\twith unknown discriminants whose full view is a discriminated record.\n\n\t* sem_ch7.adb (Preserve_Full_Attributes): Preserve Has_Discriminants\n\tflag, to handle properly derivations of tagged types with unknown\n\tdiscriminants.\n\t(Analyze_Package_Spec, Analyze_Package_Body): Install\n\tPrivate_With_Clauses before analyzing private part or body.\n\n\t* einfo.ads: Indicate that both Has_Unknown_Discriminants and\n\tHas_Discriminants can be true for a given type (documentation).\n\n2004-03-05  Arnaud Charlet  <charlet@act-europe.fr>\n\n\t* s-restri.ads: Fix license (GPL->GMGPL).\n\n\t* s-tassta.adb: Minor reformatting.\n\n\t* s-tasren.adb: Replace manual handling of Self_Id.ATC_Nesting_Level\n\tby calls to Exit_One_ATC_Level, since additional clean up is performed\n\tby this function.\n\n\t* s-tpobop.adb: Replace manual handling of Self_Id.ATC_Nesting_Level\n\tby calls to Exit_One_ATC_Level, since additional clean up is performed\n\tby this function.\n\n2004-03-05  GNAT Script  <nobody@gnat.com>\n\n\t* Make-lang.in: Makefile automatically updated\n\nFrom-SVN: r78964", "tree": {"sha": "d7e76278139b8a14ab79056f737b24f8081eaf15", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d7e76278139b8a14ab79056f737b24f8081eaf15"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8a6a52dcb9b0a1f64fcaee58936fc84d416c7651", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a6a52dcb9b0a1f64fcaee58936fc84d416c7651", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8a6a52dcb9b0a1f64fcaee58936fc84d416c7651", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a6a52dcb9b0a1f64fcaee58936fc84d416c7651/comments", "author": null, "committer": null, "parents": [{"sha": "35bd3c283e349040506360ea6a4215d3a4adbff8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35bd3c283e349040506360ea6a4215d3a4adbff8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/35bd3c283e349040506360ea6a4215d3a4adbff8"}], "stats": {"total": 2751, "additions": 1640, "deletions": 1111}, "files": [{"sha": "b409826426286eb6886659f626dc6cd5d967bedf", "filename": "gcc/ada/56taprop.adb", "status": "modified", "additions": 5, "deletions": 9, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a6a52dcb9b0a1f64fcaee58936fc84d416c7651/gcc%2Fada%2F56taprop.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a6a52dcb9b0a1f64fcaee58936fc84d416c7651/gcc%2Fada%2F56taprop.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F56taprop.adb?ref=8a6a52dcb9b0a1f64fcaee58936fc84d416c7651", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  B o d y                                 --\n --                                                                          --\n---         Copyright (C) 1992-2003, Free Software Foundation, Inc.          --\n+--         Copyright (C) 1992-2004, Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -79,7 +79,6 @@ with System.Soft_Links;\n with System.OS_Primitives;\n --  used for Delay_Modes\n \n-with Unchecked_Conversion;\n with Unchecked_Deallocation;\n \n package body System.Task_Primitives.Operations is\n@@ -186,8 +185,6 @@ package body System.Task_Primitives.Operations is\n    procedure Set_OS_Priority (T : Task_ID; Prio : System.Any_Priority);\n    --  This procedure calls the scheduler of the OS to set thread's priority\n \n-   function To_Address is new Unchecked_Conversion (Task_ID, System.Address);\n-\n    -------------------\n    -- Abort_Handler --\n    -------------------\n@@ -215,8 +212,10 @@ package body System.Task_Primitives.Operations is\n \n          --  Make sure signals used for RTS internal purpose are unmasked\n \n-         Result := pthread_sigmask (SIG_UNBLOCK,\n-           Unblocked_Signal_Mask'Unchecked_Access, Old_Set'Unchecked_Access);\n+         Result :=\n+           pthread_sigmask (SIG_UNBLOCK,\n+                            Unblocked_Signal_Mask'Unchecked_Access,\n+                            Old_Set'Unchecked_Access);\n          pragma Assert (Result = 0);\n \n          raise Standard'Abort_Signal;\n@@ -896,9 +895,6 @@ package body System.Task_Primitives.Operations is\n       Adjusted_Stack_Size : Interfaces.C.size_t;\n       Result              : Interfaces.C.int;\n \n-      function Thread_Body_Access is new\n-        Unchecked_Conversion (System.Address, Thread_Body);\n-\n       use System.Task_Info;\n \n    begin"}, {"sha": "20821fda2988d1666a0f16930d467b615ffa39bd", "filename": "gcc/ada/5ataprop.adb", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a6a52dcb9b0a1f64fcaee58936fc84d416c7651/gcc%2Fada%2F5ataprop.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a6a52dcb9b0a1f64fcaee58936fc84d416c7651/gcc%2Fada%2F5ataprop.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5ataprop.adb?ref=8a6a52dcb9b0a1f64fcaee58936fc84d416c7651", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  B o d y                                 --\n --                                                                          --\n---         Copyright (C) 1992-2003, Free Software Foundation, Inc.          --\n+--         Copyright (C) 1992-2004, Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -82,7 +82,6 @@ with System.Soft_Links;\n with System.OS_Primitives;\n --  used for Delay_Modes\n \n-with Unchecked_Conversion;\n with Unchecked_Deallocation;\n \n package body System.Task_Primitives.Operations is\n@@ -178,8 +177,6 @@ package body System.Task_Primitives.Operations is\n    procedure Abort_Handler (Sig : Signal);\n    --  Signal handler used to implement asynchronous abortion.\n \n-   function To_Address is new Unchecked_Conversion (Task_ID, System.Address);\n-\n    -------------------\n    -- Abort_Handler --\n    -------------------\n@@ -807,9 +804,6 @@ package body System.Task_Primitives.Operations is\n       Result              : Interfaces.C.int;\n       Param               : aliased System.OS_Interface.struct_sched_param;\n \n-      function Thread_Body_Access is new\n-        Unchecked_Conversion (System.Address, Thread_Body);\n-\n       use System.Task_Info;\n \n    begin"}, {"sha": "d80cf0464d7af1581bbf4734bdfeb020f8b2b96e", "filename": "gcc/ada/5atpopsp.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a6a52dcb9b0a1f64fcaee58936fc84d416c7651/gcc%2Fada%2F5atpopsp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a6a52dcb9b0a1f64fcaee58936fc84d416c7651/gcc%2Fada%2F5atpopsp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5atpopsp.adb?ref=8a6a52dcb9b0a1f64fcaee58936fc84d416c7651", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  B o d y                                 --\n --                                                                          --\n---         Copyright (C) 1992-2003, Free Software Foundation, Inc.          --\n+--         Copyright (C) 1992-2004, Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -99,7 +99,7 @@ package body Specific is\n       --  If the key value is Null, then it is a non-Ada task.\n \n       if Result /= System.Null_Address then\n-         return To_Task_Id (Result);\n+         return To_Task_ID (Result);\n       else\n          return Register_Foreign_Thread;\n       end if;"}, {"sha": "c8f06916f138f5b92e8e802ddc63525470351606", "filename": "gcc/ada/5iosinte.ads", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a6a52dcb9b0a1f64fcaee58936fc84d416c7651/gcc%2Fada%2F5iosinte.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a6a52dcb9b0a1f64fcaee58936fc84d416c7651/gcc%2Fada%2F5iosinte.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5iosinte.ads?ref=8a6a52dcb9b0a1f64fcaee58936fc84d416c7651", "patch": "@@ -273,9 +273,12 @@ package System.OS_Interface is\n    function Thread_Body_Access is new\n      Unchecked_Conversion (System.Address, Thread_Body);\n \n-   type pthread_t           is private;\n+   type pthread_t is new unsigned_long;\n    subtype Thread_Id        is pthread_t;\n \n+   function To_pthread_t is new Unchecked_Conversion\n+     (unsigned_long, pthread_t);\n+\n    type pthread_mutex_t     is limited private;\n    type pthread_cond_t      is limited private;\n    type pthread_attr_t      is limited private;\n@@ -498,8 +501,6 @@ private\n    end record;\n    pragma Convention (C, pthread_mutexattr_t);\n \n-   type pthread_t is new unsigned_long;\n-\n    type struct_pthread_fast_lock is record\n       status   : long;\n       spinlock : int;"}, {"sha": "84eb3514f832d82a4b12952fdcb56a283d823845", "filename": "gcc/ada/5itaprop.adb", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a6a52dcb9b0a1f64fcaee58936fc84d416c7651/gcc%2Fada%2F5itaprop.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a6a52dcb9b0a1f64fcaee58936fc84d416c7651/gcc%2Fada%2F5itaprop.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5itaprop.adb?ref=8a6a52dcb9b0a1f64fcaee58936fc84d416c7651", "patch": "@@ -189,8 +189,6 @@ package body System.Task_Primitives.Operations is\n \n    procedure Abort_Handler (signo : Signal);\n \n-   function To_Address is new Unchecked_Conversion (Task_ID, System.Address);\n-\n    function To_pthread_t is new Unchecked_Conversion\n      (unsigned_long, System.OS_Interface.pthread_t);\n \n@@ -839,9 +837,6 @@ package body System.Task_Primitives.Operations is\n       Attributes : aliased pthread_attr_t;\n       Result     : Interfaces.C.int;\n \n-      function Thread_Body_Access is new\n-        Unchecked_Conversion (System.Address, Thread_Body);\n-\n    begin\n       if Stack_Size = Unspecified_Size then\n          Adjusted_Stack_Size := Interfaces.C.size_t (Default_Stack_Size);"}, {"sha": "b5754630372f66d93624ecf5fb74a655f06bdefe", "filename": "gcc/ada/5sosinte.ads", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a6a52dcb9b0a1f64fcaee58936fc84d416c7651/gcc%2Fada%2F5sosinte.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a6a52dcb9b0a1f64fcaee58936fc84d416c7651/gcc%2Fada%2F5sosinte.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5sosinte.ads?ref=8a6a52dcb9b0a1f64fcaee58936fc84d416c7651", "patch": "@@ -308,8 +308,11 @@ package System.OS_Interface is\n    THR_NEW_LWP   : constant := 2;\n    USYNC_THREAD  : constant := 0;\n \n-   type thread_t is private;\n+   type thread_t is new unsigned;\n    subtype Thread_Id is thread_t;\n+   --  These types should be commented ???\n+\n+   function To_thread_t is new Unchecked_Conversion (Integer, thread_t);\n \n    type mutex_t is limited private;\n \n@@ -540,8 +543,6 @@ private\n    end record;\n    pragma Convention (C, struct_timeval);\n \n-   type thread_t is new unsigned;\n-\n    type array_type_9 is array (0 .. 3) of unsigned_char;\n    type record_type_3 is record\n       flag  : array_type_9;"}, {"sha": "dcabcd121351a9340307d162c3cc7c757b9dcb82", "filename": "gcc/ada/5staprop.adb", "status": "modified", "additions": 18, "deletions": 38, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a6a52dcb9b0a1f64fcaee58936fc84d416c7651/gcc%2Fada%2F5staprop.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a6a52dcb9b0a1f64fcaee58936fc84d416c7651/gcc%2Fada%2F5staprop.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5staprop.adb?ref=8a6a52dcb9b0a1f64fcaee58936fc84d416c7651", "patch": "@@ -86,7 +86,6 @@ with System.Soft_Links;\n with System.OS_Primitives;\n --  used for Delay_Modes\n \n-with Unchecked_Conversion;\n with Unchecked_Deallocation;\n \n package body System.Task_Primitives.Operations is\n@@ -173,14 +172,14 @@ package body System.Task_Primitives.Operations is\n    -- Local Subprograms --\n    -----------------------\n \n-   function sysconf (name : System.OS_Interface.int)\n-     return processorid_t;\n+   function sysconf (name : System.OS_Interface.int) return processorid_t;\n    pragma Import (C, sysconf, \"sysconf\");\n \n    SC_NPROCESSORS_CONF : constant System.OS_Interface.int := 14;\n \n-   function Num_Procs (name : System.OS_Interface.int := SC_NPROCESSORS_CONF)\n-     return processorid_t renames sysconf;\n+   function Num_Procs\n+     (name : System.OS_Interface.int := SC_NPROCESSORS_CONF)\n+      return processorid_t renames sysconf;\n \n    procedure Abort_Handler\n      (Sig     : Signal;\n@@ -190,22 +189,13 @@ package body System.Task_Primitives.Operations is\n    --  the raising of the Abort_Signal exception.\n    --  See also comments in 7staprop.adb\n \n-   function To_thread_t is new Unchecked_Conversion\n-     (Integer, System.OS_Interface.thread_t);\n-\n-   function To_Task_ID is new Unchecked_Conversion (System.Address, Task_ID);\n-\n-   function To_Address is new Unchecked_Conversion (Task_ID, System.Address);\n-\n-   function Thread_Body_Access is\n-     new Unchecked_Conversion (System.Address, Thread_Body);\n-\n    ------------\n    -- Checks --\n    ------------\n \n-   function Check_Initialize_Lock (L : Lock_Ptr; Level : Lock_Level)\n-     return Boolean;\n+   function Check_Initialize_Lock\n+     (L     : Lock_Ptr;\n+      Level : Lock_Level) return Boolean;\n    pragma Inline (Check_Initialize_Lock);\n \n    function Check_Lock (L : Lock_Ptr) return Boolean;\n@@ -218,12 +208,12 @@ package body System.Task_Primitives.Operations is\n    pragma Inline (Check_Sleep);\n \n    function Record_Wakeup\n-     (L : Lock_Ptr;\n+     (L      : Lock_Ptr;\n       Reason : Task_States) return Boolean;\n    pragma Inline (Record_Wakeup);\n \n    function Check_Wakeup\n-     (T : Task_ID;\n+     (T      : Task_ID;\n       Reason : Task_States) return Boolean;\n    pragma Inline (Check_Wakeup);\n \n@@ -278,11 +268,6 @@ package body System.Task_Primitives.Operations is\n    Lock_Count   : Integer := 0;\n    Unlock_Count : Integer := 0;\n \n-   function To_Lock_Ptr is\n-     new Unchecked_Conversion (RTS_Lock_Ptr, Lock_Ptr);\n-   function To_Owner_ID is\n-     new Unchecked_Conversion (Task_ID, Owner_ID);\n-\n    -------------------\n    -- Abort_Handler --\n    -------------------\n@@ -1365,8 +1350,7 @@ package body System.Task_Primitives.Operations is\n \n    function Check_Initialize_Lock\n      (L     : Lock_Ptr;\n-      Level : Lock_Level)\n-      return  Boolean\n+      Level : Lock_Level) return Boolean\n    is\n       Self_ID : constant Task_ID := Self;\n \n@@ -1416,7 +1400,7 @@ package body System.Task_Primitives.Operations is\n \n       --  Check that caller is not holding this lock already\n \n-      if L.Owner = To_Owner_ID (Self_ID) then\n+      if L.Owner = To_Owner_ID (To_Address (Self_ID)) then\n          return False;\n       end if;\n \n@@ -1457,7 +1441,7 @@ package body System.Task_Primitives.Operations is\n \n       --  Record new owner\n \n-      L.Owner := To_Owner_ID (Self_ID);\n+      L.Owner := To_Owner_ID (To_Address (Self_ID));\n \n       if Single_Lock then\n          return True;\n@@ -1524,8 +1508,7 @@ package body System.Task_Primitives.Operations is\n \n    function Record_Wakeup\n      (L      : Lock_Ptr;\n-      Reason : Task_States)\n-      return   Boolean\n+      Reason : Task_States) return Boolean\n    is\n       pragma Unreferenced (Reason);\n \n@@ -1535,7 +1518,7 @@ package body System.Task_Primitives.Operations is\n    begin\n       --  Record new owner\n \n-      L.Owner := To_Owner_ID (Self_ID);\n+      L.Owner := To_Owner_ID (To_Address (Self_ID));\n \n       if Single_Lock then\n          return True;\n@@ -1560,15 +1543,14 @@ package body System.Task_Primitives.Operations is\n \n    function Check_Wakeup\n      (T      : Task_ID;\n-      Reason : Task_States)\n-      return   Boolean\n+      Reason : Task_States) return Boolean\n    is\n       Self_ID : constant Task_ID := Self;\n \n    begin\n       --  Is caller holding T's lock?\n \n-      if T.Common.LL.L.Owner /= To_Owner_ID (Self_ID) then\n+      if T.Common.LL.L.Owner /= To_Owner_ID (To_Address (Self_ID)) then\n          return False;\n       end if;\n \n@@ -1727,8 +1709,7 @@ package body System.Task_Primitives.Operations is\n \n    function Suspend_Task\n      (T           : ST.Task_ID;\n-      Thread_Self : Thread_Id)\n-      return        Boolean\n+      Thread_Self : Thread_Id) return Boolean\n    is\n    begin\n       if T.Common.LL.Thread /= Thread_Self then\n@@ -1744,8 +1725,7 @@ package body System.Task_Primitives.Operations is\n \n    function Resume_Task\n      (T           : ST.Task_ID;\n-      Thread_Self : Thread_Id)\n-      return        Boolean\n+      Thread_Self : Thread_Id) return Boolean\n    is\n    begin\n       if T.Common.LL.Thread /= Thread_Self then"}, {"sha": "335079b7cec7cf120deb8cc35ec3ae0cd226c302", "filename": "gcc/ada/5staspri.ads", "status": "modified", "additions": 21, "deletions": 16, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a6a52dcb9b0a1f64fcaee58936fc84d416c7651/gcc%2Fada%2F5staspri.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a6a52dcb9b0a1f64fcaee58936fc84d416c7651/gcc%2Fada%2F5staspri.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5staspri.ads?ref=8a6a52dcb9b0a1f64fcaee58936fc84d416c7651", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  S p e c                                 --\n --                                                                          --\n---          Copyright (C) 1992-2000, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2004, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -31,9 +31,7 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  This is a Solaris version of this package.\n---  It was created by hand for use with new \"checked\"\n---  GNULLI primitives.\n+--  This is a Solaris version of this package\n \n --  This package provides low-level support for most tasking features.\n \n@@ -46,12 +44,14 @@ with System.OS_Interface;\n --           cond_t\n --           thread_t\n \n+with Unchecked_Conversion;\n+\n package System.Task_Primitives is\n    pragma Preelaborate;\n \n    type Lock is limited private;\n    type Lock_Ptr is access all Lock;\n-   --  Should be used for implementation of protected objects.\n+   --  Should be used for implementation of protected objects\n \n    type RTS_Lock is limited private;\n    type RTS_Lock_Ptr is access all RTS_Lock;\n@@ -60,6 +60,8 @@ package System.Task_Primitives is\n    --  one serves only as a semaphore so that do not check for\n    --  ceiling violations.\n \n+   function To_Lock_Ptr is new Unchecked_Conversion (RTS_Lock_Ptr, Lock_Ptr);\n+\n    type Task_Body_Access is access procedure;\n    --  Pointer to the task body's entry point (or possibly a wrapper\n    --  declared local to the GNARL).\n@@ -81,15 +83,18 @@ private\n \n    type Owner_ID is access all Owner_Int;\n \n+   function To_Owner_ID is\n+     new Unchecked_Conversion (System.Address, Owner_ID);\n+\n    type Lock is record\n-      L : aliased Base_Lock;\n-      Ceiling : System.Any_Priority := System.Any_Priority'First;\n+      L              : aliased Base_Lock;\n+      Ceiling        : System.Any_Priority := System.Any_Priority'First;\n       Saved_Priority : System.Any_Priority :=  System.Any_Priority'First;\n-      Owner : Owner_ID;\n-      Next  : Lock_Ptr;\n-      Level : Private_Task_Serial_Number := 0;\n-      Buddy : Owner_ID;\n-      Frozen : Boolean := False;\n+      Owner          : Owner_ID;\n+      Next           : Lock_Ptr;\n+      Level          : Private_Task_Serial_Number := 0;\n+      Buddy          : Owner_ID;\n+      Frozen         : Boolean := False;\n    end record;\n \n    type RTS_Lock is new Lock;\n@@ -109,16 +114,16 @@ private\n       LWP : System.OS_Interface.lwpid_t;\n       --  The LWP id of the thread. Set by self in Enter_Task.\n \n-      CV          : aliased System.OS_Interface.cond_t;\n-      L           : aliased RTS_Lock;\n-      --  protection for all components is lock L\n+      CV : aliased System.OS_Interface.cond_t;\n+      L  : aliased RTS_Lock;\n+      --  Protection for all components is lock L\n \n       Active_Priority : System.Any_Priority := System.Any_Priority'First;\n       --  Simulated active priority,\n       --  used only if Priority_Ceiling_Support is True.\n \n       Locking : Lock_Ptr;\n-      Locks : Lock_Ptr;\n+      Locks   : Lock_Ptr;\n       Wakeups : Natural := 0;\n    end record;\n "}, {"sha": "755872bcd8435ceeae82f86eb0671b7bfbeacce9", "filename": "gcc/ada/5wtaprop.adb", "status": "modified", "additions": 4, "deletions": 19, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a6a52dcb9b0a1f64fcaee58936fc84d416c7651/gcc%2Fada%2F5wtaprop.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a6a52dcb9b0a1f64fcaee58936fc84d416c7651/gcc%2Fada%2F5wtaprop.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5wtaprop.adb?ref=8a6a52dcb9b0a1f64fcaee58936fc84d416c7651", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  B o d y                                 --\n --                                                                          --\n---         Copyright (C) 1992-2003, Free Software Foundation, Inc.          --\n+--         Copyright (C) 1992-2004, Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -75,7 +75,6 @@ with System.OS_Primitives;\n with System.Task_Info;\n --  used for Unspecified_Task_Info\n \n-with Unchecked_Conversion;\n with Unchecked_Deallocation;\n \n package body System.Task_Primitives.Operations is\n@@ -170,14 +169,6 @@ package body System.Task_Primitives.Operations is\n    function Register_Foreign_Thread\n      (Thread : Thread_Id) return Task_ID is separate;\n \n-   ----------------------------------\n-   -- Utility Conversion Functions --\n-   ----------------------------------\n-\n-   function To_Task_Id is new Unchecked_Conversion (System.Address, Task_ID);\n-\n-   function To_Address is new Unchecked_Conversion (Task_ID, System.Address);\n-\n    ----------------------------------\n    -- Condition Variable Functions --\n    ----------------------------------\n@@ -377,8 +368,7 @@ package body System.Task_Primitives.Operations is\n    ----------\n \n    function Self return Task_ID is\n-      Self_Id : constant Task_ID := To_Task_Id (TlsGetValue (TlsIndex));\n-\n+      Self_Id : constant Task_ID := To_Task_ID (TlsGetValue (TlsIndex));\n    begin\n       if Self_Id = null then\n          return Register_Foreign_Thread (GetCurrentThread);\n@@ -862,9 +852,6 @@ package body System.Task_Primitives.Operations is\n       Result         : DWORD;\n       Entry_Point    : PTHREAD_START_ROUTINE;\n \n-      function To_PTHREAD_START_ROUTINE is new\n-        Unchecked_Conversion (System.Address, PTHREAD_START_ROUTINE);\n-\n    begin\n       pTaskParameter := To_Address (T);\n \n@@ -1091,8 +1078,7 @@ package body System.Task_Primitives.Operations is\n \n    function Suspend_Task\n      (T           : ST.Task_ID;\n-      Thread_Self : Thread_Id)\n-      return        Boolean\n+      Thread_Self : Thread_Id) return Boolean\n    is\n    begin\n       if T.Common.LL.Thread /= Thread_Self then\n@@ -1108,8 +1094,7 @@ package body System.Task_Primitives.Operations is\n \n    function Resume_Task\n      (T           : ST.Task_ID;\n-      Thread_Self : Thread_Id)\n-      return        Boolean\n+      Thread_Self : Thread_Id) return Boolean\n    is\n    begin\n       if T.Common.LL.Thread /= Thread_Self then"}, {"sha": "f7a67a074ca8352f6b6932bde182563cb82c8f6d", "filename": "gcc/ada/7stpopsp.adb", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a6a52dcb9b0a1f64fcaee58936fc84d416c7651/gcc%2Fada%2F7stpopsp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a6a52dcb9b0a1f64fcaee58936fc84d416c7651/gcc%2Fada%2F7stpopsp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F7stpopsp.adb?ref=8a6a52dcb9b0a1f64fcaee58936fc84d416c7651", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  B o d y                                 --\n --                                                                          --\n---            Copyright (C) 1992-2003, Free Software Fundation, Inc.        --\n+--            Copyright (C) 1992-2004, Free Software Fundation, Inc.        --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -73,9 +73,8 @@ package body Specific is\n    ----------\n \n    function Self return Task_ID is\n-\n    begin\n-      return To_Task_Id (pthread_getspecific (ATCB_Key));\n+      return To_Task_ID (pthread_getspecific (ATCB_Key));\n    end Self;\n \n end Specific;"}, {"sha": "b41f0200ffc417d6d6a7163b63187a7620f2bdb2", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 124, "deletions": 0, "changes": 124, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a6a52dcb9b0a1f64fcaee58936fc84d416c7651/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a6a52dcb9b0a1f64fcaee58936fc84d416c7651/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=8a6a52dcb9b0a1f64fcaee58936fc84d416c7651", "patch": "@@ -1,3 +1,127 @@\n+2004-03-05  Robert Dewar  <dewar@gnat.com>\n+\n+\t* 56taprop.adb, 5ataprop.adb: Remove unneeded unchecked conversions\n+\n+\t* a-tags.adb, a-tags.ads, s-finimp.adb, s-finroo.ads,\n+\ti-cpoint.ads, i-cpoint.adb, i-cstrin.adb, i-cstrin.ads,\n+\t5iosinte.ads, 5sosinte.ads, 5staspri.ads, 5itaprop.adb, \n+\t5staprop.adb, 5wtaprop.adb, s-tataat.ads, s-tataat.adb: Move\n+\tunchecked conversion to spec to avoid warnings.\n+\n+\t* s-tasini.adb, s-taskin.ads, 5atpopsp.adb: Correct spelling Task_Id\n+\tto Task_ID\n+\n+\t* 7stpopsp.adb: Correct casing in To_Task_ID call\n+\n+\t* a-strsea.ads, a-strsea.adb: Minor reformatting\n+\n+\t* einfo.ads, einfo.adb: Define new flag No_Strict_Aliasing\n+\n+\t* errout.ads: Switch for VMS is now NO_STRICT_ALIASING.\n+\tAdjust Max_Msg_Length to be clearly large enough.\n+\n+\t* fe.h: Define In_Same_Source_Unit\n+\n+\t* osint.adb: Add pragma Warnings Off to suppress warnings\n+\t* g-dyntab.adb, g-table.adb, g-thread.adb: Add Warnings (Off) to kill\n+\taliasing warnings.\n+\n+\t* opt.ads: Put entries in alpha order. Add entry for No_Strict_Aliasing\n+\n+\t* par-prag.adb: Add dummy entry for No_Strict_Aliasing pragma\n+\n+\t* sem_ch13.adb: Generate validate unchecked conversion nodes for gcc.\n+\n+\t* sem_ch3.adb: Set No_Strict_Aliasing flag if config pragma set.\n+\n+\t* sem_prag.adb: Implement pragma No_Strict_Aliasing.\n+\n+\t* sinfo.ads: Remove obsolete comment on validate unchecked conversion\n+\tnode. We now do generate them for gcc back end.\n+\n+\t* table.adb, sinput.adb: Add pragma Warnings Off to suppress aliasing\n+\twarning.\n+\n+\t* sinput-c.adb: Fix bad name in header.\n+\tAdd pragma Warnings Off to suppress aliasing warning.\n+\n+\t* sinput-l.adb: Add pragma Warnings Off to suppress aliasing warning.\n+\n+\t* snames.h, snames.ads, snames.adb: Add entry for pragma\n+\tNo_Strict_Aliasing.\n+\n+2004-03-05  Vincent Celier  <celier@gnat.com>\n+\n+\t* prj-com.ads: Add hash table Files_Htable to check when a file name\n+\tis already a source of another project.\n+\n+\t* prj-nmsc.adb (Record_Source): Before recording a new source, check\n+\tif its file name is not already a source of another project. Report an\n+\terror if it is.\n+\n+\t* gnatcmd.adb: When GNAT PRETTY is invoked with a project file and no\n+\tsource file name, call gnatpp with all the sources of the main project.\n+\n+\t* vms_conv.adb (Initialize): GNAT PRETTY may be called with any number\n+\tof file names.\n+\n+\t* vms_data.ads: Correct documentation of new /OPTIMIZE keyword\n+\tNO_STRICT_ALIASING. Add new qualifier for GNAT PRETTY:\n+\t/RUNTIME_SYSTEM=, converted to --RTS=\n+\t/NOTABS, converted to -notabs\n+\n+2004-03-05  Pascal Obry  <obry@gnat.com>\n+\n+\t* make.adb: Minor reformatting.\n+\n+2004-03-05  Ed Schonberg  <schonberg@gnat.com>\n+\n+\tPart of implemention of AI-262.\n+\t* par-ch10.adb (P_Context_Clause): Recognize private with_clauses.\n+\n+\t* sem_ch10.ads, sem_ch10.adb: (Install_Private_With_Clauses): New\n+\tprocedure.\n+\n+\t* sem_ch3.adb (Analyze_Component_Declaration): Improve error message\n+\twhen component type is a partially constrained class-wide subtype.\n+\t(Constrain_Discriminated_Type): If parent type has unknown\n+\tdiscriminants, a constraint is illegal, even if full view has\n+\tdiscriminants.\n+\t(Build_Derived_Record_Type): Inherit discriminants when deriving a type\n+\twith unknown discriminants whose full view is a discriminated record.\n+\n+\t* sem_ch7.adb (Preserve_Full_Attributes): Preserve Has_Discriminants\n+\tflag, to handle properly derivations of tagged types with unknown\n+\tdiscriminants.\n+\t(Analyze_Package_Spec, Analyze_Package_Body): Install\n+\tPrivate_With_Clauses before analyzing private part or body.\n+\n+\t* einfo.ads: Indicate that both Has_Unknown_Discriminants and\n+\tHas_Discriminants can be true for a given type (documentation).\n+\n+2004-03-05  Arnaud Charlet  <charlet@act-europe.fr>\n+\n+\t* s-restri.ads: Fix license (GPL->GMGPL).\n+\n+\t* s-tassta.adb: Minor reformatting.\n+\n+\t* s-tasren.adb: Replace manual handling of Self_Id.ATC_Nesting_Level\n+\tby calls to Exit_One_ATC_Level, since additional clean up is performed\n+\tby this function.\n+\n+\t* s-tpobop.adb: Replace manual handling of Self_Id.ATC_Nesting_Level\n+\tby calls to Exit_One_ATC_Level, since additional clean up is performed\n+\tby this function.\n+\n+2004-03-05  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n+\n+\t* trans.c: Reflect GCC changes to fix bootstrap problem.\n+\tAdd warning for suspicious aliasing unchecked conversion.\n+\n+2004-03-05  GNAT Script  <nobody@gnat.com>\n+\n+\t* Make-lang.in: Makefile automatically updated\n+\n 2004-03-02  Emmanuel Briot  <briot@act-europe.fr>\n \n \t* ali.adb (Read_Instantiation_Instance): Do not modify the"}, {"sha": "94d3c33d52dee2088a2b982e10f5c05b9f652530", "filename": "gcc/ada/Make-lang.in", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a6a52dcb9b0a1f64fcaee58936fc84d416c7651/gcc%2Fada%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a6a52dcb9b0a1f64fcaee58936fc84d416c7651/gcc%2Fada%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FMake-lang.in?ref=8a6a52dcb9b0a1f64fcaee58936fc84d416c7651", "patch": "@@ -3221,21 +3221,21 @@ ada/sem_ch7.o : ada/ada.ads ada/a-except.ads ada/alloc.ads ada/atree.ads \\\n    ada/namet.ads ada/namet.adb ada/nlists.ads ada/nlists.adb ada/nmake.ads \\\n    ada/nmake.adb ada/opt.ads ada/output.ads ada/restrict.ads \\\n    ada/rident.ads ada/rtsfind.ads ada/scans.ads ada/scn.ads ada/scng.ads \\\n-   ada/scng.adb ada/sem.ads ada/sem_cat.ads ada/sem_ch12.ads \\\n-   ada/sem_ch3.ads ada/sem_ch6.ads ada/sem_ch7.ads ada/sem_ch7.adb \\\n-   ada/sem_ch8.ads ada/sem_eval.ads ada/sem_res.ads ada/sem_type.ads \\\n-   ada/sem_util.ads ada/sem_util.adb ada/sem_warn.ads ada/sinfo.ads \\\n-   ada/sinfo.adb ada/sinput.ads ada/sinput.adb ada/snames.ads \\\n-   ada/snames.adb ada/stand.ads ada/stringt.ads ada/style.ads \\\n-   ada/styleg.ads ada/styleg.adb ada/styleg-c.ads ada/stylesw.ads \\\n-   ada/system.ads ada/s-crc32.ads ada/s-exctab.ads ada/s-htable.ads \\\n-   ada/s-imgenu.ads ada/s-memory.ads ada/s-rident.ads ada/s-secsta.ads \\\n-   ada/s-soflin.ads ada/s-stache.ads ada/s-stalib.ads ada/s-stoele.ads \\\n-   ada/s-stoele.adb ada/s-traent.ads ada/s-unstyp.ads ada/s-wchcon.ads \\\n-   ada/table.ads ada/table.adb ada/targparm.ads ada/tbuild.ads \\\n-   ada/tree_io.ads ada/ttypes.ads ada/types.ads ada/uintp.ads \\\n-   ada/uintp.adb ada/uname.ads ada/unchconv.ads ada/unchdeal.ads \\\n-   ada/urealp.ads ada/widechar.ads \n+   ada/scng.adb ada/sem.ads ada/sem_cat.ads ada/sem_ch10.ads \\\n+   ada/sem_ch12.ads ada/sem_ch3.ads ada/sem_ch6.ads ada/sem_ch7.ads \\\n+   ada/sem_ch7.adb ada/sem_ch8.ads ada/sem_eval.ads ada/sem_res.ads \\\n+   ada/sem_type.ads ada/sem_util.ads ada/sem_util.adb ada/sem_warn.ads \\\n+   ada/sinfo.ads ada/sinfo.adb ada/sinput.ads ada/sinput.adb \\\n+   ada/snames.ads ada/snames.adb ada/stand.ads ada/stringt.ads \\\n+   ada/style.ads ada/styleg.ads ada/styleg.adb ada/styleg-c.ads \\\n+   ada/stylesw.ads ada/system.ads ada/s-crc32.ads ada/s-exctab.ads \\\n+   ada/s-htable.ads ada/s-imgenu.ads ada/s-memory.ads ada/s-rident.ads \\\n+   ada/s-secsta.ads ada/s-soflin.ads ada/s-stache.ads ada/s-stalib.ads \\\n+   ada/s-stoele.ads ada/s-stoele.adb ada/s-traent.ads ada/s-unstyp.ads \\\n+   ada/s-wchcon.ads ada/table.ads ada/table.adb ada/targparm.ads \\\n+   ada/tbuild.ads ada/tree_io.ads ada/ttypes.ads ada/types.ads \\\n+   ada/uintp.ads ada/uintp.adb ada/uname.ads ada/unchconv.ads \\\n+   ada/unchdeal.ads ada/urealp.ads ada/widechar.ads \n \n ada/sem_ch8.o : ada/ada.ads ada/a-except.ads ada/alloc.ads ada/atree.ads \\\n    ada/atree.adb ada/casing.ads ada/checks.ads ada/csets.ads ada/debug.ads \\"}, {"sha": "62089c31f8e2f1d201e2983a31eaccb0153afe60", "filename": "gcc/ada/a-strsea.adb", "status": "modified", "additions": 29, "deletions": 37, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a6a52dcb9b0a1f64fcaee58936fc84d416c7651/gcc%2Fada%2Fa-strsea.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a6a52dcb9b0a1f64fcaee58936fc84d416c7651/gcc%2Fada%2Fa-strsea.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-strsea.adb?ref=8a6a52dcb9b0a1f64fcaee58936fc84d416c7651", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---   Copyright (C) 1992,1993,1994,1995,1996 Free Software Foundation, Inc.  --\n+--          Copyright (C) 1992-2004 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -49,8 +49,7 @@ package body Ada.Strings.Search is\n    function Belongs\n      (Element : Character;\n       Set     : Maps.Character_Set;\n-      Test    : Membership)\n-      return    Boolean;\n+      Test    : Membership) return Boolean;\n    pragma Inline (Belongs);\n    --  Determines if the given element is in (Test = Inside) or not in\n    --  (Test = Outside) the given character set.\n@@ -62,8 +61,7 @@ package body Ada.Strings.Search is\n    function Belongs\n      (Element : Character;\n       Set     : Maps.Character_Set;\n-      Test    : Membership)\n-      return    Boolean\n+      Test    : Membership) return Boolean\n    is\n    begin\n       if Test = Inside then\n@@ -78,10 +76,9 @@ package body Ada.Strings.Search is\n    -----------\n \n    function Count\n-     (Source   : in String;\n-      Pattern  : in String;\n-      Mapping  : in Maps.Character_Mapping := Maps.Identity)\n-      return     Natural\n+     (Source   : String;\n+      Pattern  : String;\n+      Mapping  : Maps.Character_Mapping := Maps.Identity) return Natural\n    is\n       N : Natural;\n       J : Natural;\n@@ -113,10 +110,9 @@ package body Ada.Strings.Search is\n    end Count;\n \n    function Count\n-     (Source   : in String;\n-      Pattern  : in String;\n-      Mapping  : in Maps.Character_Mapping_Function)\n-      return     Natural\n+     (Source   : String;\n+      Pattern  : String;\n+      Mapping  : Maps.Character_Mapping_Function) return Natural\n    is\n       Mapped_Source : String (Source'Range);\n       N             : Natural;\n@@ -156,9 +152,8 @@ package body Ada.Strings.Search is\n    end Count;\n \n    function Count\n-     (Source : in String;\n-      Set    : in Maps.Character_Set)\n-      return   Natural\n+     (Source : String;\n+      Set    : Maps.Character_Set) return Natural\n    is\n       N : Natural := 0;\n \n@@ -177,9 +172,9 @@ package body Ada.Strings.Search is\n    ----------------\n \n    procedure Find_Token\n-     (Source : in String;\n-      Set    : in Maps.Character_Set;\n-      Test   : in Membership;\n+     (Source : String;\n+      Set    : Maps.Character_Set;\n+      Test   : Membership;\n       First  : out Positive;\n       Last   : out Natural)\n    is\n@@ -214,11 +209,10 @@ package body Ada.Strings.Search is\n    -----------\n \n    function Index\n-     (Source   : in String;\n-      Pattern  : in String;\n-      Going    : in Direction := Forward;\n-      Mapping  : in Maps.Character_Mapping := Maps.Identity)\n-      return     Natural\n+     (Source  : String;\n+      Pattern : String;\n+      Going   : Direction := Forward;\n+      Mapping : Maps.Character_Mapping := Maps.Identity) return Natural\n    is\n       Cur_Index     : Natural;\n       Mapped_Source : String (Source'Range);\n@@ -266,11 +260,11 @@ package body Ada.Strings.Search is\n       return 0;\n    end Index;\n \n-   function Index (Source   : in String;\n-                   Pattern  : in String;\n-                   Going    : in Direction := Forward;\n-                   Mapping  : in Maps.Character_Mapping_Function)\n-      return Natural\n+   function Index\n+     (Source  : String;\n+      Pattern : String;\n+      Going   : Direction := Forward;\n+      Mapping : Maps.Character_Mapping_Function) return Natural\n    is\n       Mapped_Source : String (Source'Range);\n       Cur_Index     : Natural;\n@@ -324,11 +318,10 @@ package body Ada.Strings.Search is\n    end Index;\n \n    function Index\n-     (Source : in String;\n-      Set    : in Maps.Character_Set;\n-      Test   : in Membership := Inside;\n-      Going  : in Direction  := Forward)\n-      return   Natural\n+     (Source : String;\n+      Set    : Maps.Character_Set;\n+      Test   : Membership := Inside;\n+      Going  : Direction  := Forward) return Natural\n    is\n    begin\n       --  Forwards case\n@@ -360,9 +353,8 @@ package body Ada.Strings.Search is\n    ---------------------\n \n    function Index_Non_Blank\n-     (Source : in String;\n-      Going  : in Direction := Forward)\n-      return   Natural\n+     (Source : String;\n+      Going  : Direction := Forward) return Natural\n    is\n    begin\n       if Going = Forward then"}, {"sha": "c176d12d626c84622f8680b7c9a507756461beb1", "filename": "gcc/ada/a-strsea.ads", "status": "modified", "additions": 26, "deletions": 34, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a6a52dcb9b0a1f64fcaee58936fc84d416c7651/gcc%2Fada%2Fa-strsea.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a6a52dcb9b0a1f64fcaee58936fc84d416c7651/gcc%2Fada%2Fa-strsea.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-strsea.ads?ref=8a6a52dcb9b0a1f64fcaee58936fc84d416c7651", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2003 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2004 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -44,53 +44,45 @@ private package Ada.Strings.Search is\n pragma Preelaborate (Search);\n \n    function Index\n-     (Source   : in String;\n-      Pattern  : in String;\n-      Going    : in Direction := Forward;\n-      Mapping  : in Maps.Character_Mapping := Maps.Identity)\n-      return     Natural;\n+     (Source  : String;\n+      Pattern : String;\n+      Going   : Direction := Forward;\n+      Mapping : Maps.Character_Mapping := Maps.Identity) return Natural;\n \n    function Index\n-     (Source   : in String;\n-      Pattern  : in String;\n-      Going    : in Direction := Forward;\n-      Mapping  : in Maps.Character_Mapping_Function)\n-      return     Natural;\n+     (Source  : String;\n+      Pattern : String;\n+      Going   : Direction := Forward;\n+      Mapping : Maps.Character_Mapping_Function) return Natural;\n \n    function Index\n-     (Source : in String;\n-      Set    : in Maps.Character_Set;\n-      Test   : in Membership := Inside;\n-      Going  : in Direction  := Forward)\n-      return   Natural;\n+     (Source : String;\n+      Set    : Maps.Character_Set;\n+      Test   : Membership := Inside;\n+      Going  : Direction  := Forward) return Natural;\n \n    function Index_Non_Blank\n-     (Source : in String;\n-      Going  : in Direction := Forward)\n-      return   Natural;\n+     (Source : String;\n+      Going  : Direction := Forward) return Natural;\n \n    function Count\n-     (Source   : in String;\n-      Pattern  : in String;\n-      Mapping  : in Maps.Character_Mapping := Maps.Identity)\n-      return     Natural;\n+     (Source  : String;\n+      Pattern : String;\n+      Mapping : Maps.Character_Mapping := Maps.Identity) return Natural;\n \n    function Count\n-     (Source   : in String;\n-      Pattern  : in String;\n-      Mapping  : in Maps.Character_Mapping_Function)\n-      return     Natural;\n+     (Source  : String;\n+      Pattern : String;\n+      Mapping : Maps.Character_Mapping_Function) return Natural;\n \n    function Count\n-     (Source   : in String;\n-      Set      : in Maps.Character_Set)\n-      return     Natural;\n-\n+     (Source : String;\n+      Set    : Maps.Character_Set) return Natural;\n \n    procedure Find_Token\n-     (Source : in String;\n-      Set    : in Maps.Character_Set;\n-      Test   : in Membership;\n+     (Source : String;\n+      Set    : Maps.Character_Set;\n+      Test   : Membership;\n       First  : out Positive;\n       Last   : out Natural);\n "}, {"sha": "a2e40f8d4efa0b1e28401060b71a6b5af1acb7d8", "filename": "gcc/ada/a-tags.adb", "status": "modified", "additions": 24, "deletions": 34, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a6a52dcb9b0a1f64fcaee58936fc84d416c7651/gcc%2Fada%2Fa-tags.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a6a52dcb9b0a1f64fcaee58936fc84d416c7651/gcc%2Fada%2Fa-tags.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-tags.adb?ref=8a6a52dcb9b0a1f64fcaee58936fc84d416c7651", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2002 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2004 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -87,25 +87,15 @@ package body Ada.Tags is\n       Prims_Ptr : Address_Array (Positive);\n    end record;\n \n-   -------------------------------------------\n-   -- Unchecked Conversions for Tag and TSD --\n-   -------------------------------------------\n-\n-   function To_Type_Specific_Data_Ptr is\n-     new Unchecked_Conversion (S.Address, Type_Specific_Data_Ptr);\n-\n-   function To_Address is\n-     new Unchecked_Conversion (Type_Specific_Data_Ptr, S.Address);\n-\n    ---------------------------------------------\n    -- Unchecked Conversions for String Fields --\n    ---------------------------------------------\n \n    function To_Cstring_Ptr is\n-     new Unchecked_Conversion (S.Address, Cstring_Ptr);\n+     new Unchecked_Conversion (System.Address, Cstring_Ptr);\n \n    function To_Address is\n-     new Unchecked_Conversion (Cstring_Ptr, S.Address);\n+     new Unchecked_Conversion (Cstring_Ptr, System.Address);\n \n    -----------------------\n    -- Local Subprograms --\n@@ -128,8 +118,8 @@ package body Ada.Tags is\n    package HTable_Subprograms is\n       procedure Set_HT_Link (T : Tag; Next : Tag);\n       function  Get_HT_Link (T : Tag) return Tag;\n-      function Hash (F : S.Address) return HTable_Headers;\n-      function Equal (A, B : S.Address) return Boolean;\n+      function Hash (F : System.Address) return HTable_Headers;\n+      function Equal (A, B : System.Address) return Boolean;\n    end HTable_Subprograms;\n \n    package External_Tag_HTable is new System.HTable.Static_HTable (\n@@ -139,7 +129,7 @@ package body Ada.Tags is\n      Null_Ptr   => null,\n      Set_Next   => HTable_Subprograms.Set_HT_Link,\n      Next       => HTable_Subprograms.Get_HT_Link,\n-     Key        => S.Address,\n+     Key        => System.Address,\n      Get_Key    => Get_External_Tag,\n      Hash       => HTable_Subprograms.Hash,\n      Equal      => HTable_Subprograms.Equal);\n@@ -156,7 +146,7 @@ package body Ada.Tags is\n    -- Equal --\n    -----------\n \n-      function Equal (A, B : S.Address) return Boolean is\n+      function Equal (A, B : System.Address) return Boolean is\n          Str1 : constant Cstring_Ptr := To_Cstring_Ptr (A);\n          Str2 : constant Cstring_Ptr := To_Cstring_Ptr (B);\n          J    : Integer := 1;\n@@ -188,7 +178,7 @@ package body Ada.Tags is\n       -- Hash --\n       ----------\n \n-      function Hash (F : S.Address) return HTable_Headers is\n+      function Hash (F : System.Address) return HTable_Headers is\n          function H is new System.HTable.Hash (HTable_Headers);\n          Str : constant Cstring_Ptr    := To_Cstring_Ptr (F);\n          Res : constant HTable_Headers := H (Str (1 .. Length (Str)));\n@@ -260,7 +250,7 @@ package body Ada.Tags is\n    -- Get_Expanded_Name --\n    -----------------------\n \n-   function Get_Expanded_Name (T : Tag) return S.Address is\n+   function Get_Expanded_Name (T : Tag) return System.Address is\n    begin\n       return To_Address (T.TSD.Expanded_Name);\n    end Get_Expanded_Name;\n@@ -269,7 +259,7 @@ package body Ada.Tags is\n    -- Get_External_Tag --\n    ----------------------\n \n-   function Get_External_Tag (T : Tag) return S.Address is\n+   function Get_External_Tag (T : Tag) return System.Address is\n    begin\n       return To_Address (T.TSD.External_Tag);\n    end Get_External_Tag;\n@@ -289,8 +279,7 @@ package body Ada.Tags is\n \n    function Get_Prim_Op_Address\n      (T        : Tag;\n-      Position : Positive)\n-      return     S.Address\n+      Position : Positive) return System.Address\n    is\n    begin\n       return T.Prims_Ptr (Position);\n@@ -318,7 +307,7 @@ package body Ada.Tags is\n    -- Get_TSD --\n    -------------\n \n-   function Get_TSD  (T : Tag) return S.Address is\n+   function Get_TSD  (T : Tag) return System.Address is\n    begin\n       return To_Address (T.TSD);\n    end Get_TSD;\n@@ -343,7 +332,7 @@ package body Ada.Tags is\n    -- Inherit_TSD --\n    -----------------\n \n-   procedure Inherit_TSD (Old_TSD : S.Address; New_Tag : Tag) is\n+   procedure Inherit_TSD (Old_TSD : System.Address; New_Tag : Tag) is\n       TSD     : constant Type_Specific_Data_Ptr :=\n                   To_Type_Specific_Data_Ptr (Old_TSD);\n       New_TSD : Type_Specific_Data renames New_Tag.TSD.all;\n@@ -411,15 +400,16 @@ package body Ada.Tags is\n    -- Parent_Size --\n    -----------------\n \n-   type Acc_Size is access function (A : S.Address) return Long_Long_Integer;\n-   function To_Acc_Size is new Unchecked_Conversion (S.Address, Acc_Size);\n+   type Acc_Size\n+     is access function (A : System.Address) return Long_Long_Integer;\n+\n+   function To_Acc_Size is new Unchecked_Conversion (System.Address, Acc_Size);\n    --  The profile of the implicitly defined _size primitive\n \n    function Parent_Size\n-     (Obj : S.Address;\n-      T   : Tag)\n-      return SSE.Storage_Count is\n-\n+     (Obj : System.Address;\n+      T   : Tag) return SSE.Storage_Count\n+   is\n       Parent_Tag : constant Tag := T.TSD.Ancestor_Tags (1);\n       --  The tag of the parent type through the dispatch table\n \n@@ -455,7 +445,7 @@ package body Ada.Tags is\n    -- Set_Expanded_Name --\n    -----------------------\n \n-   procedure Set_Expanded_Name (T : Tag; Value : S.Address) is\n+   procedure Set_Expanded_Name (T : Tag; Value : System.Address) is\n    begin\n       T.TSD.Expanded_Name := To_Cstring_Ptr (Value);\n    end Set_Expanded_Name;\n@@ -464,7 +454,7 @@ package body Ada.Tags is\n    -- Set_External_Tag --\n    ----------------------\n \n-   procedure Set_External_Tag (T : Tag; Value : S.Address) is\n+   procedure Set_External_Tag (T : Tag; Value : System.Address) is\n    begin\n       T.TSD.External_Tag := To_Cstring_Ptr (Value);\n    end Set_External_Tag;\n@@ -488,7 +478,7 @@ package body Ada.Tags is\n    procedure Set_Prim_Op_Address\n      (T        : Tag;\n       Position : Positive;\n-      Value    : S.Address)\n+      Value    : System.Address)\n    is\n    begin\n       T.Prims_Ptr (Position) := Value;\n@@ -520,7 +510,7 @@ package body Ada.Tags is\n    -- Set_TSD --\n    -------------\n \n-   procedure Set_TSD (T : Tag; Value : S.Address) is\n+   procedure Set_TSD (T : Tag; Value : System.Address) is\n    begin\n       T.TSD := To_Type_Specific_Data_Ptr (Value);\n    end Set_TSD;"}, {"sha": "6dd97ff6642e1dfa521d4fa77850bf796f0dd5c6", "filename": "gcc/ada/a-tags.ads", "status": "modified", "additions": 27, "deletions": 20, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a6a52dcb9b0a1f64fcaee58936fc84d416c7651/gcc%2Fada%2Fa-tags.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a6a52dcb9b0a1f64fcaee58936fc84d416c7651/gcc%2Fada%2Fa-tags.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-tags.ads?ref=8a6a52dcb9b0a1f64fcaee58936fc84d416c7651", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2003 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2004 Free Software Foundation, Inc.          --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -37,6 +37,7 @@\n \n with System;\n with System.Storage_Elements;\n+with Unchecked_Conversion;\n \n package Ada.Tags is\n \n@@ -78,25 +79,23 @@ private\n    --  initialize those structures and uses the GET functions to\n    --  retreive the information when needed\n \n-   package S   renames System;\n    package SSE renames System.Storage_Elements;\n \n    function CW_Membership (Obj_Tag : Tag; Typ_Tag : Tag) return Boolean;\n    --  Given the tag of an object and the tag associated to a type, return\n    --  true if Obj is in Typ'Class.\n \n-   function Get_Expanded_Name (T : Tag) return S.Address;\n+   function Get_Expanded_Name (T : Tag) return System.Address;\n    --  Retrieve the address of a null terminated string containing\n    --  the expanded name\n \n-   function Get_External_Tag (T : Tag) return S.Address;\n+   function Get_External_Tag (T : Tag) return System.Address;\n    --  Retrieve the address of a null terminated string containing\n    --  the external name\n \n    function Get_Prim_Op_Address\n      (T        : Tag;\n-      Position : Positive)\n-      return     S.Address;\n+      Position : Positive) return System.Address;\n    --  Given a pointer to a dispatch Table (T) and a position in the DT\n    --  this function returns the address of the virtual function stored\n    --  in it (used for dispatching calls)\n@@ -117,7 +116,7 @@ private\n    function Get_Remotely_Callable (T : Tag) return Boolean;\n    --  Return the value previously set by Set_Remotely_Callable\n \n-   function  Get_TSD (T : Tag) return S.Address;\n+   function  Get_TSD (T : Tag) return System.Address;\n    --  Given a pointer T to a dispatch Table, retreives the address of the\n    --  record containing the Type Specific Data generated by GNAT\n \n@@ -129,14 +128,13 @@ private\n    --  of the direct ancestor and the number of primitive ops that are\n    --  inherited (Entry_Count).\n \n-   procedure Inherit_TSD (Old_TSD : S.Address; New_Tag : Tag);\n+   procedure Inherit_TSD (Old_TSD : System.Address; New_Tag : Tag);\n    --  Entry point used to initialize the TSD of a type knowing the\n    --  TSD of the direct ancestor.\n \n    function Parent_Size\n-     (Obj : S.Address;\n-      T   : Tag)\n-      return SSE.Storage_Count;\n+     (Obj : System.Address;\n+      T   : Tag) return SSE.Storage_Count;\n    --  Computes the size the ancestor part of a tagged extension object\n    --  whose address is 'obj' by calling the indirectly _size function of\n    --  the ancestor. The ancestor is the parent of the type represented by\n@@ -167,20 +165,20 @@ private\n    procedure Set_Prim_Op_Address\n      (T        : Tag;\n       Position : Positive;\n-      Value    : S.Address);\n+      Value    : System.Address);\n    --  Given a pointer to a dispatch Table (T) and a position in the\n    --  dispatch Table put the address of the virtual function in it\n    --  (used for overriding)\n \n-   procedure Set_TSD (T : Tag; Value : S.Address);\n+   procedure Set_TSD (T : Tag; Value : System.Address);\n    --  Given a pointer T to a dispatch Table, stores the address of the record\n    --  containing the Type Specific Data generated by GNAT\n \n-   procedure Set_Expanded_Name (T : Tag; Value : S.Address);\n+   procedure Set_Expanded_Name (T : Tag; Value : System.Address);\n    --  Set the address of the string containing the expanded name\n    --  in the Dispatch table\n \n-   procedure Set_External_Tag (T : Tag; Value : S.Address);\n+   procedure Set_External_Tag (T : Tag; Value : System.Address);\n    --  Set the address of the string containing the external tag\n    --  in the Dispatch table\n \n@@ -194,31 +192,40 @@ private\n \n    DT_Prologue_Size : constant SSE.Storage_Count :=\n                         SSE.Storage_Count\n-                          (Standard'Address_Size / S.Storage_Unit);\n+                          (Standard'Address_Size / System.Storage_Unit);\n    --  Size of the first part of the dispatch table\n \n    DT_Entry_Size : constant SSE.Storage_Count :=\n                      SSE.Storage_Count\n-                       (Standard'Address_Size / S.Storage_Unit);\n+                       (Standard'Address_Size / System.Storage_Unit);\n    --  Size of each primitive operation entry in the Dispatch Table.\n \n    TSD_Prologue_Size : constant SSE.Storage_Count :=\n                          SSE.Storage_Count\n-                           (6 * Standard'Address_Size / S.Storage_Unit);\n+                           (6 * Standard'Address_Size / System.Storage_Unit);\n    --  Size of the first part of the type specific data\n \n    TSD_Entry_Size : constant SSE.Storage_Count :=\n-     SSE.Storage_Count (Standard'Address_Size / S.Storage_Unit);\n+     SSE.Storage_Count (Standard'Address_Size / System.Storage_Unit);\n    --  Size of each ancestor tag entry in the TSD\n \n-   type Address_Array is array (Natural range <>) of S.Address;\n+   type Address_Array is array (Natural range <>) of System.Address;\n \n    type Dispatch_Table;\n    type Tag is access all Dispatch_Table;\n \n    type Type_Specific_Data;\n    type Type_Specific_Data_Ptr is access all Type_Specific_Data;\n \n+   function To_Type_Specific_Data_Ptr is\n+     new Unchecked_Conversion (System.Address, Type_Specific_Data_Ptr);\n+\n+   function To_Address is\n+     new Unchecked_Conversion (Type_Specific_Data_Ptr, System.Address);\n+\n+   --  Primitive dispatching operations are always inlined, to facilitate\n+   --  use in a minimal/no run-time environment for high integrity use.\n+\n    pragma Inline_Always (CW_Membership);\n    pragma Inline_Always (Get_Expanded_Name);\n    pragma Inline_Always (Get_Inheritance_Depth);"}, {"sha": "543aa2caa940f25df3f7d700ff4f0399909756c4", "filename": "gcc/ada/einfo.adb", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a6a52dcb9b0a1f64fcaee58936fc84d416c7651/gcc%2Fada%2Feinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a6a52dcb9b0a1f64fcaee58936fc84d416c7651/gcc%2Fada%2Feinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.adb?ref=8a6a52dcb9b0a1f64fcaee58936fc84d416c7651", "patch": "@@ -367,6 +367,7 @@ package body Einfo is\n    --    Is_VMS_Exception               Flag133\n    --    Is_Optional_Parameter          Flag134\n    --    Has_Aliased_Components         Flag135\n+   --    No_Strict_Aliasing             Flag136\n    --    Is_Machine_Code_Subprogram     Flag137\n    --    Is_Packed_Array_Type           Flag138\n    --    Has_Biased_Representation      Flag139\n@@ -421,7 +422,6 @@ package body Einfo is\n \n    --  Remaining flags are currently unused and available\n \n-   --    (unused)                       Flag136\n    --    (unused)                       Flag183\n \n    --------------------------------\n@@ -1793,6 +1793,12 @@ package body Einfo is\n       return Flag113 (Id);\n    end No_Return;\n \n+   function No_Strict_Aliasing (Id : E) return B is\n+   begin\n+      pragma Assert (Is_Access_Type (Id));\n+      return Flag136 (Base_Type (Id));\n+   end No_Strict_Aliasing;\n+\n    function Non_Binary_Modulus (Id : E) return B is\n    begin\n       pragma Assert (Is_Modular_Integer_Type (Id));\n@@ -3735,6 +3741,13 @@ package body Einfo is\n       Set_Flag113 (Id, V);\n    end Set_No_Return;\n \n+   procedure Set_No_Strict_Aliasing (Id : E; V : B := True) is\n+   begin\n+      pragma Assert (Is_Access_Type (Id) and then Base_Type (Id) = Id);\n+      Set_Flag136 (Id, V);\n+   end Set_No_Strict_Aliasing;\n+\n+\n    procedure Set_Non_Binary_Modulus (Id : E; V : B := True) is\n    begin\n       pragma Assert (Ekind (Id) = E_Modular_Integer_Type);\n@@ -6226,6 +6239,7 @@ package body Einfo is\n       W (\"Never_Set_In_Source\",           Flag115 (Id));\n       W (\"No_Pool_Assigned\",              Flag131 (Id));\n       W (\"No_Return\",                     Flag113 (Id));\n+      W (\"No_Strict_Aliasing\",            Flag136 (Id));\n       W (\"Non_Binary_Modulus\",            Flag58  (Id));\n       W (\"Nonzero_Is_True\",               Flag162 (Id));\n       W (\"Reachable\",                     Flag49  (Id));"}, {"sha": "795d69e5ad1c02efde0ca8044d4a4f27815a1b7e", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 23, "deletions": 1, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a6a52dcb9b0a1f64fcaee58936fc84d416c7651/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a6a52dcb9b0a1f64fcaee58936fc84d416c7651/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=8a6a52dcb9b0a1f64fcaee58936fc84d416c7651", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2003 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2004 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -1533,6 +1533,13 @@ package Einfo is\n --       either from their declaration or through type derivation. The use\n --       of this flag exactly meets the spec in RM 3.7(26). Note that all\n --       class-wide types are considered to have unknown discriminants.\n+--       Note that both Has_Discriminants and Has_Unknown_Discriminants may\n+--       be true for a type. Class-wide types and their subtypes have\n+--       unknown discriminants and can have declared ones as well. Private\n+--       types declared with unknown discriminants may have a full view that\n+--       has explicit discriminants, and both flag will be set on the partial\n+--       view, to insure that discriminants are properly inherited in certain\n+--       contexts.\n \n --    Has_Volatile_Components (Flag87) [implementation base type only]\n --       Present in all types and objects. Set only for an array type or\n@@ -2600,6 +2607,16 @@ package Einfo is\n --       the maximum size such records (needed for allocation purposes when\n --       there are default discriminants, and also for the 'Size value).\n \n+--    No_Strict_Aliasing (Flag136) [base type only]\n+--       Present in access types. Set to direct the back end to avoid any\n+--       optimizations based on an assumption about the aliasing status of\n+--       objects designated by the access type. For the case of the gcc\n+--       back end, the effect is as though all references to objects of\n+--       the type were compiled with -fno-strict-aliasing. This flag is\n+--       set if an unchecked conversion with the access type as a target\n+--       type occurs in the same source unit as the declaration of the\n+--       access type, or if an explicit pragma No_Strict_Aliasing applies.\n+\n --    Number_Dimensions (synthesized)\n --       Applies to array types and subtypes. Returns the number of dimensions\n --       of the array type or subtype as a value of type Pos.\n@@ -3997,6 +4014,7 @@ package Einfo is\n    --    Has_Storage_Size_Clause       (Flag23)   (base type only)\n    --    Is_Access_Constant            (Flag69)\n    --    No_Pool_Assigned              (Flag131)  (base type only)\n+   --    No_Strict_Aliasing            (Flag136)  (base type only)\n    --    (plus type attributes)\n \n    --  E_Access_Attribute_Type\n@@ -5154,6 +5172,7 @@ package Einfo is\n    function Next_Inlined_Subprogram            (Id : E) return E;\n    function No_Pool_Assigned                   (Id : E) return B;\n    function No_Return                          (Id : E) return B;\n+   function No_Strict_Aliasing                 (Id : E) return B;\n    function Non_Binary_Modulus                 (Id : E) return B;\n    function Non_Limited_View                   (Id : E) return E;\n    function Nonzero_Is_True                    (Id : E) return B;\n@@ -5626,6 +5645,7 @@ package Einfo is\n    procedure Set_Next_Inlined_Subprogram       (Id : E; V : E);\n    procedure Set_No_Pool_Assigned              (Id : E; V : B := True);\n    procedure Set_No_Return                     (Id : E; V : B := True);\n+   procedure Set_No_Strict_Aliasing            (Id : E; V : B := True);\n    procedure Set_Non_Binary_Modulus            (Id : E; V : B := True);\n    procedure Set_Non_Limited_View              (Id : E; V : E);\n    procedure Set_Nonzero_Is_True               (Id : E; V : B := True);\n@@ -6152,6 +6172,7 @@ package Einfo is\n    pragma Inline (Next_Literal);\n    pragma Inline (No_Pool_Assigned);\n    pragma Inline (No_Return);\n+   pragma Inline (No_Strict_Aliasing);\n    pragma Inline (Non_Binary_Modulus);\n    pragma Inline (Non_Limited_View);\n    pragma Inline (Nonzero_Is_True);\n@@ -6457,6 +6478,7 @@ package Einfo is\n    pragma Inline (Set_Next_Inlined_Subprogram);\n    pragma Inline (Set_No_Pool_Assigned);\n    pragma Inline (Set_No_Return);\n+   pragma Inline (Set_No_Strict_Aliasing);\n    pragma Inline (Set_Non_Binary_Modulus);\n    pragma Inline (Set_Non_Limited_View);\n    pragma Inline (Set_Nonzero_Is_True);"}, {"sha": "e307bb039be15db48ec8827a93595e46d432b210", "filename": "gcc/ada/errout.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a6a52dcb9b0a1f64fcaee58936fc84d416c7651/gcc%2Fada%2Ferrout.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a6a52dcb9b0a1f64fcaee58936fc84d416c7651/gcc%2Fada%2Ferrout.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferrout.ads?ref=8a6a52dcb9b0a1f64fcaee58936fc84d416c7651", "patch": "@@ -288,7 +288,7 @@ package Errout is\n    --  \"/yyy qualifier\", where yyy is the corresponding Vname? entry.\n \n    Gname1 : aliased constant String := \"fno-strict-aliasing\";\n-   Vname1 : aliased constant String := \"OPTIMIZE=NO_ALIASING\";\n+   Vname1 : aliased constant String := \"OPTIMIZE=NO_STRICT_ALIASING\";\n \n    Gname2 : aliased constant String := \"gnatX\";\n    Vname2 : aliased constant String := \"EXTENSIONS_ALLOWED\";"}, {"sha": "b0af72df446c8c94c6a0020a38bf8b117fe34bc7", "filename": "gcc/ada/erroutc.ads", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a6a52dcb9b0a1f64fcaee58936fc84d416c7651/gcc%2Fada%2Ferroutc.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a6a52dcb9b0a1f64fcaee58936fc84d416c7651/gcc%2Fada%2Ferroutc.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferroutc.ads?ref=8a6a52dcb9b0a1f64fcaee58936fc84d416c7651", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2003 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2004 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -77,9 +77,11 @@ package Erroutc is\n    Manual_Quote_Mode : Boolean := False;\n    --  Set True in manual quotation mode\n \n-   Max_Msg_Length : constant := 80 + 2 * Hostparm.Max_Line_Length;\n+   Max_Msg_Length : constant := 256 + 2 * Hostparm.Max_Line_Length;\n    --  Maximum length of error message. The addition of Max_Line_Length\n    --  ensures that two insertion tokens of maximum length can be accomodated.\n+   --  The value of 256 is an arbitrary value that should be more than long\n+   --  enough to accomodate any reasonable message.\n \n    Msg_Buffer : String (1 .. Max_Msg_Length);\n    --  Buffer used to prepare error messages"}, {"sha": "18b63471447f72284677ff5f389cef7526e429c0", "filename": "gcc/ada/fe.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a6a52dcb9b0a1f64fcaee58936fc84d416c7651/gcc%2Fada%2Ffe.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a6a52dcb9b0a1f64fcaee58936fc84d416c7651/gcc%2Fada%2Ffe.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffe.h?ref=8a6a52dcb9b0a1f64fcaee58936fc84d416c7651", "patch": "@@ -139,10 +139,12 @@ extern void Get_External_Name_With_Suffix (Entity_Id, Fat_Pointer);\n #define Cunit \t\t\t\tlib__cunit\n #define Ident_String\t\t\tlib__ident_string\n #define In_Extended_Main_Code_Unit\tlib__in_extended_main_code_unit\n+#define In_Same_Source_Unit             lib__in_same_source_unit\n \n extern Node_Id Cunit\t\t\t\t(Unit_Number_Type);\n extern Node_Id Ident_String\t\t\t(Unit_Number_Type);\n extern Boolean In_Extended_Main_Code_Unit\t(Entity_Id);\n+extern Boolean In_Same_Source_Unit              (Node_Id, Node_Id);\n \n /* opt: */\n "}, {"sha": "25320dca7de764222b8a6797aa106f13d70d294d", "filename": "gcc/ada/g-dyntab.adb", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a6a52dcb9b0a1f64fcaee58936fc84d416c7651/gcc%2Fada%2Fg-dyntab.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a6a52dcb9b0a1f64fcaee58936fc84d416c7651/gcc%2Fada%2Fg-dyntab.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-dyntab.adb?ref=8a6a52dcb9b0a1f64fcaee58936fc84d416c7651", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---           Copyright (C) 2000-2003 Ada Core Technologies, Inc.            --\n+--           Copyright (C) 2000-2004 Ada Core Technologies, Inc.            --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -51,9 +51,15 @@ package body GNAT.Dynamic_Tables is\n    --  in Max. Works correctly to do an initial allocation if the table\n    --  is currently null.\n \n+   pragma Warnings (Off);\n+   --  These unchecked conversions are in fact safe, since they never\n+   --  generate improperly aliased pointer values.\n+\n    function To_Address is new Unchecked_Conversion (Table_Ptr, Address);\n    function To_Pointer is new Unchecked_Conversion (Address, Table_Ptr);\n \n+   pragma Warnings (On);\n+\n    --------------\n    -- Allocate --\n    --------------"}, {"sha": "793f6e29820938212befeb20b231c61e99b32b56", "filename": "gcc/ada/g-table.adb", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a6a52dcb9b0a1f64fcaee58936fc84d416c7651/gcc%2Fada%2Fg-table.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a6a52dcb9b0a1f64fcaee58936fc84d416c7651/gcc%2Fada%2Fg-table.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-table.adb?ref=8a6a52dcb9b0a1f64fcaee58936fc84d416c7651", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---            Copyright (C) 1998-2003 Ada Core Technologies, Inc.           --\n+--            Copyright (C) 1998-2004 Ada Core Technologies, Inc.           --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -60,9 +60,16 @@ package body GNAT.Table is\n    --  in Max. Works correctly to do an initial allocation if the table\n    --  is currently null.\n \n+   pragma Warnings (Off);\n+   --  Turn off warnings. The following unchecked conversions are only used\n+   --  internally in this package, and cannot never result in any instances\n+   --  of improperly aliased pointers for the client of the package.\n+\n    function To_Address is new Unchecked_Conversion (Table_Ptr, Address);\n    function To_Pointer is new Unchecked_Conversion (Address, Table_Ptr);\n \n+   pragma Warnings (On);\n+\n    --------------\n    -- Allocate --\n    --------------"}, {"sha": "98e663dc978b79145633110a1cef1547cd6d5b58", "filename": "gcc/ada/g-thread.adb", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a6a52dcb9b0a1f64fcaee58936fc84d416c7651/gcc%2Fada%2Fg-thread.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a6a52dcb9b0a1f64fcaee58936fc84d416c7651/gcc%2Fada%2Fg-thread.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-thread.adb?ref=8a6a52dcb9b0a1f64fcaee58936fc84d416c7651", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---            Copyright (C) 1998-2003 Ada Core Technologies, Inc.           --\n+--            Copyright (C) 1998-2004 Ada Core Technologies, Inc.           --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -47,13 +47,19 @@ package body GNAT.Threads is\n \n    type Thread_Id_Ptr is access all Thread_Id;\n \n+   pragma Warnings (Off);\n+   --  The following unchecked conversions are aliasing safe, since they\n+   --  are never used to create pointers to improperly aliased data.\n+\n    function To_Addr is new Unchecked_Conversion (Task_Id, Address);\n    function To_Id   is new Unchecked_Conversion (Address, Task_Id);\n    function To_Id   is new Unchecked_Conversion (Address, Tasking.Task_ID);\n    function To_Tid  is new Unchecked_Conversion\n      (Address, Ada.Task_Identification.Task_Id);\n    function To_Thread is new Unchecked_Conversion (Address, Thread_Id_Ptr);\n \n+   pragma Warnings (On);\n+\n    type Code_Proc is access procedure (Id : Address; Parm : Void_Ptr);\n \n    task type Thread"}, {"sha": "f3ff3632c360b33137a444930f3b65e0c14a0fc3", "filename": "gcc/ada/gnatcmd.adb", "status": "modified", "additions": 43, "deletions": 1, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a6a52dcb9b0a1f64fcaee58936fc84d416c7651/gcc%2Fada%2Fgnatcmd.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a6a52dcb9b0a1f64fcaee58936fc84d416c7651/gcc%2Fada%2Fgnatcmd.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatcmd.adb?ref=8a6a52dcb9b0a1f64fcaee58936fc84d416c7651", "patch": "@@ -34,6 +34,7 @@ with Opt;\n with Osint;    use Osint;\n with Output;\n with Prj;      use Prj;\n+with Prj.Com;\n with Prj.Env;\n with Prj.Ext;  use Prj.Ext;\n with Prj.Pars;\n@@ -836,7 +837,7 @@ begin\n                      Default_Switches_Array :=\n                        Prj.Util.Value_Of\n                          (Name => Name_Default_Switches,\n-                          In_Arrays => Packages.Table (Pkg).Decl.Arrays);\n+                          In_Arrays => Element.Decl.Arrays);\n                      The_Switches := Prj.Util.Value_Of\n                        (Index => Name_Ada,\n                         In_Array => Default_Switches_Array);\n@@ -1325,6 +1326,47 @@ begin\n                end if;\n             end;\n          end if;\n+\n+         --  For gnat pretty, if no file has been put on the command line,\n+         --  call gnatpp with all the sources of the main project.\n+\n+         if The_Command = Pretty then\n+            declare\n+               Add_Sources : Boolean := True;\n+               Unit_Data   : Prj.Com.Unit_Data;\n+            begin\n+               --  Check if there is at least one argument that is not a switch\n+\n+               for Index in 1 .. Last_Switches.Last loop\n+                  if Last_Switches.Table (Index)(1) = '-' then\n+                     Add_Sources := False;\n+                     exit;\n+                  end if;\n+               end loop;\n+\n+               --  If all arguments were switches, add the path names of\n+               --  all the sources of the main project.\n+\n+               if Add_Sources then\n+                  for Unit in 1 .. Prj.Com.Units.Last loop\n+                     Unit_Data := Prj.Com.Units.Table (Unit);\n+\n+                     for Kind in Prj.Com.Spec_Or_Body loop\n+\n+                        --  Put only sources that belong to the main project\n+\n+                        if Unit_Data.File_Names (Kind).Project = Project then\n+                           Last_Switches.Increment_Last;\n+                           Last_Switches.Table (Last_Switches.Last) :=\n+                             new String'\n+                               (Get_Name_String\n+                                  (Unit_Data.File_Names (Kind).Display_Path));\n+                        end if;\n+                     end loop;\n+                  end loop;\n+               end if;\n+            end;\n+         end if;\n       end if;\n \n       --  Gather all the arguments and invoke the executable"}, {"sha": "8dc5acd0c74da50b967d1e4f85dba24ba280df6b", "filename": "gcc/ada/i-cpoint.adb", "status": "modified", "additions": 18, "deletions": 21, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a6a52dcb9b0a1f64fcaee58936fc84d416c7651/gcc%2Fada%2Fi-cpoint.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a6a52dcb9b0a1f64fcaee58936fc84d416c7651/gcc%2Fada%2Fi-cpoint.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fi-cpoint.adb?ref=8a6a52dcb9b0a1f64fcaee58936fc84d416c7651", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2001 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2004 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -55,7 +55,7 @@ package body Interfaces.C.Pointers is\n    -- \"+\" --\n    ---------\n \n-   function \"+\" (Left : in Pointer;   Right : in ptrdiff_t) return Pointer is\n+   function \"+\" (Left : Pointer; Right : ptrdiff_t) return Pointer is\n    begin\n       if Left = null then\n          raise Pointer_Error;\n@@ -64,7 +64,7 @@ package body Interfaces.C.Pointers is\n       return To_Pointer (To_Addr (Left) + To_Addr (Elmt_Size * Right));\n    end \"+\";\n \n-   function \"+\" (Left : in ptrdiff_t; Right : in Pointer) return Pointer is\n+   function \"+\" (Left : ptrdiff_t; Right : Pointer) return Pointer is\n    begin\n       if Right = null then\n          raise Pointer_Error;\n@@ -77,7 +77,7 @@ package body Interfaces.C.Pointers is\n    -- \"-\" --\n    ---------\n \n-   function \"-\" (Left : in Pointer; Right : in ptrdiff_t) return Pointer is\n+   function \"-\" (Left : Pointer; Right : ptrdiff_t) return Pointer is\n    begin\n       if Left = null then\n          raise Pointer_Error;\n@@ -86,7 +86,7 @@ package body Interfaces.C.Pointers is\n       return To_Pointer (To_Addr (Left) - To_Addr (Right * Elmt_Size));\n    end \"-\";\n \n-   function \"-\" (Left : in Pointer; Right : in Pointer) return ptrdiff_t is\n+   function \"-\" (Left : Pointer; Right : Pointer) return ptrdiff_t is\n    begin\n       if Left = null or else Right = null then\n          raise Pointer_Error;\n@@ -100,9 +100,9 @@ package body Interfaces.C.Pointers is\n    ----------------\n \n    procedure Copy_Array\n-     (Source  : in Pointer;\n-      Target  : in Pointer;\n-      Length  : in ptrdiff_t)\n+     (Source  : Pointer;\n+      Target  : Pointer;\n+      Length  : ptrdiff_t)\n    is\n       T : Pointer := Target;\n       S : Pointer := Source;\n@@ -125,10 +125,10 @@ package body Interfaces.C.Pointers is\n    ---------------------------\n \n    procedure Copy_Terminated_Array\n-     (Source     : in Pointer;\n-      Target     : in Pointer;\n-      Limit      : in ptrdiff_t := ptrdiff_t'Last;\n-      Terminator : in Element := Default_Terminator)\n+     (Source     : Pointer;\n+      Target     : Pointer;\n+      Limit      : ptrdiff_t := ptrdiff_t'Last;\n+      Terminator : Element := Default_Terminator)\n    is\n       S : Pointer   := Source;\n       T : Pointer   := Target;\n@@ -172,9 +172,8 @@ package body Interfaces.C.Pointers is\n    -----------\n \n    function Value\n-     (Ref        : in Pointer;\n-      Terminator : in Element := Default_Terminator)\n-      return       Element_Array\n+     (Ref        : Pointer;\n+      Terminator : Element := Default_Terminator) return Element_Array\n    is\n       P : Pointer;\n       L : constant Index_Base := Index'First;\n@@ -207,9 +206,8 @@ package body Interfaces.C.Pointers is\n    end Value;\n \n    function Value\n-     (Ref    : in Pointer;\n-      Length : in ptrdiff_t)\n-      return   Element_Array\n+     (Ref    : Pointer;\n+      Length : ptrdiff_t) return Element_Array\n    is\n       L : Index_Base;\n       H : Index_Base;\n@@ -255,9 +253,8 @@ package body Interfaces.C.Pointers is\n    --------------------\n \n    function Virtual_Length\n-     (Ref        : in Pointer;\n-      Terminator : in Element := Default_Terminator)\n-      return       ptrdiff_t\n+     (Ref        : Pointer;\n+      Terminator : Element := Default_Terminator) return ptrdiff_t\n    is\n       P : Pointer;\n       C : ptrdiff_t;"}, {"sha": "1e997386d3c885dcdd5be4abb72c3370b749b0ff", "filename": "gcc/ada/i-cpoint.ads", "status": "modified", "additions": 22, "deletions": 21, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a6a52dcb9b0a1f64fcaee58936fc84d416c7651/gcc%2Fada%2Fi-cpoint.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a6a52dcb9b0a1f64fcaee58936fc84d416c7651/gcc%2Fada%2Fi-cpoint.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fi-cpoint.ads?ref=8a6a52dcb9b0a1f64fcaee58936fc84d416c7651", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1993-2000 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1993-2004 Free Software Foundation, Inc.          --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -46,26 +46,28 @@ pragma Preelaborate (Pointers);\n \n    type Pointer is access all Element;\n \n+   pragma No_Strict_Aliasing (Pointer);\n+   --  We turn off any strict aliasing assumptions for the pointer type,\n+   --  since it is possible to create \"improperly\" aliased values.\n+\n    function Value\n-     (Ref        : in Pointer;\n-      Terminator : in Element := Default_Terminator)\n-      return       Element_Array;\n+     (Ref        : Pointer;\n+      Terminator : Element := Default_Terminator) return Element_Array;\n \n    function Value\n-     (Ref    : in Pointer;\n-      Length : in ptrdiff_t)\n-      return   Element_Array;\n+     (Ref    : Pointer;\n+      Length : ptrdiff_t) return Element_Array;\n \n    Pointer_Error : exception;\n \n    --------------------------------\n    -- C-style Pointer Arithmetic --\n    --------------------------------\n \n-   function \"+\" (Left : in Pointer;   Right : in ptrdiff_t) return Pointer;\n-   function \"+\" (Left : in ptrdiff_t; Right : in Pointer)   return Pointer;\n-   function \"-\" (Left : in Pointer;   Right : in ptrdiff_t) return Pointer;\n-   function \"-\" (Left : in Pointer;   Right : in Pointer)   return ptrdiff_t;\n+   function \"+\" (Left : Pointer;   Right : ptrdiff_t) return Pointer;\n+   function \"+\" (Left : ptrdiff_t; Right : Pointer)   return Pointer;\n+   function \"-\" (Left : Pointer;   Right : ptrdiff_t) return Pointer;\n+   function \"-\" (Left : Pointer;   Right : Pointer)   return ptrdiff_t;\n \n    procedure Increment (Ref : in out Pointer);\n    procedure Decrement (Ref : in out Pointer);\n@@ -76,20 +78,19 @@ pragma Preelaborate (Pointers);\n    pragma Convention (Intrinsic, Decrement);\n \n    function Virtual_Length\n-     (Ref        : in Pointer;\n-      Terminator : in Element := Default_Terminator)\n-      return       ptrdiff_t;\n+     (Ref        : Pointer;\n+      Terminator : Element := Default_Terminator) return ptrdiff_t;\n \n    procedure Copy_Terminated_Array\n-     (Source     : in Pointer;\n-      Target     : in Pointer;\n-      Limit      : in ptrdiff_t := ptrdiff_t'Last;\n-      Terminator : in Element := Default_Terminator);\n+     (Source     : Pointer;\n+      Target     : Pointer;\n+      Limit      : ptrdiff_t := ptrdiff_t'Last;\n+      Terminator : Element := Default_Terminator);\n \n    procedure Copy_Array\n-     (Source  : in Pointer;\n-      Target  : in Pointer;\n-      Length  : in ptrdiff_t);\n+     (Source  : Pointer;\n+      Target  : Pointer;\n+      Length  : ptrdiff_t);\n \n private\n    pragma Inline (\"+\");"}, {"sha": "26bde07c2ab67d9bb50e8a49779c70d323555b5a", "filename": "gcc/ada/i-cstrin.adb", "status": "modified", "additions": 27, "deletions": 24, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a6a52dcb9b0a1f64fcaee58936fc84d416c7651/gcc%2Fada%2Fi-cstrin.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a6a52dcb9b0a1f64fcaee58936fc84d416c7651/gcc%2Fada%2Fi-cstrin.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fi-cstrin.adb?ref=8a6a52dcb9b0a1f64fcaee58936fc84d416c7651", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2002 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2004 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -38,6 +38,12 @@ with Unchecked_Conversion;\n \n package body Interfaces.C.Strings is\n \n+   --  Note that the type chars_ptr has a pragma No_Strict_Aliasing in\n+   --  the spec, to prevent any assumptions about aliasing for values\n+   --  of this type, since arbitrary addresses can be converted, and it\n+   --  is quite likely that this type will in fact be used for aliasing\n+   --  values of other types.\n+\n    function To_chars_ptr is\n       new Unchecked_Conversion (Address, chars_ptr);\n \n@@ -99,7 +105,7 @@ package body Interfaces.C.Strings is\n    -- New_Char_Array --\n    --------------------\n \n-   function New_Char_Array (Chars : in char_array) return chars_ptr is\n+   function New_Char_Array (Chars : char_array) return chars_ptr is\n       Index   : size_t;\n       Pointer : chars_ptr;\n \n@@ -135,7 +141,7 @@ package body Interfaces.C.Strings is\n    -- New_String --\n    ----------------\n \n-   function New_String (Str : in String) return chars_ptr is\n+   function New_String (Str : String) return chars_ptr is\n    begin\n       return New_Char_Array (To_C (Str));\n    end New_String;\n@@ -177,7 +183,7 @@ package body Interfaces.C.Strings is\n    -- Strlen --\n    ------------\n \n-   function Strlen (Item : in chars_ptr) return size_t is\n+   function Strlen (Item : chars_ptr) return size_t is\n       Item_Index : size_t := 0;\n \n    begin\n@@ -199,9 +205,8 @@ package body Interfaces.C.Strings is\n    ------------------\n \n    function To_Chars_Ptr\n-     (Item      : in char_array_access;\n-      Nul_Check : in Boolean := False)\n-      return      chars_ptr\n+     (Item      : char_array_access;\n+      Nul_Check : Boolean := False) return chars_ptr\n    is\n    begin\n       if Item = null then\n@@ -212,7 +217,6 @@ package body Interfaces.C.Strings is\n          raise Terminator_Error;\n       else\n          return To_chars_ptr (Item (Item'First)'Address);\n-\n       end if;\n    end To_Chars_Ptr;\n \n@@ -221,9 +225,9 @@ package body Interfaces.C.Strings is\n    ------------\n \n    procedure Update\n-     (Item   : in chars_ptr;\n-      Offset : in size_t;\n-      Chars  : in char_array;\n+     (Item   : chars_ptr;\n+      Offset : size_t;\n+      Chars  : char_array;\n       Check  : Boolean := True)\n    is\n       Index : chars_ptr := Item + Offset;\n@@ -240,10 +244,10 @@ package body Interfaces.C.Strings is\n    end Update;\n \n    procedure Update\n-     (Item   : in chars_ptr;\n-      Offset : in size_t;\n-      Str    : in String;\n-      Check  : in Boolean := True)\n+     (Item   : chars_ptr;\n+      Offset : size_t;\n+      Str    : String;\n+      Check  : Boolean := True)\n    is\n    begin\n       Update (Item, Offset, To_C (Str), Check);\n@@ -253,7 +257,7 @@ package body Interfaces.C.Strings is\n    -- Value --\n    -----------\n \n-   function Value (Item : in chars_ptr) return char_array is\n+   function Value (Item : chars_ptr) return char_array is\n       Result : char_array (0 .. Strlen (Item));\n \n    begin\n@@ -271,9 +275,8 @@ package body Interfaces.C.Strings is\n    end Value;\n \n    function Value\n-     (Item   : in chars_ptr;\n-      Length : in size_t)\n-      return   char_array\n+     (Item   : chars_ptr;\n+      Length : size_t) return char_array\n    is\n    begin\n       if Item = Null_Ptr then\n@@ -304,18 +307,18 @@ package body Interfaces.C.Strings is\n       end;\n    end Value;\n \n-   function Value (Item : in chars_ptr) return String is\n+   function Value (Item : chars_ptr) return String is\n    begin\n       return To_Ada (Value (Item));\n    end Value;\n \n-   --  As per AI-00177, this is equivalent to\n-   --          To_Ada (Value (Item, Length) & nul);\n-\n-   function Value (Item : in chars_ptr; Length : in size_t) return String is\n+   function Value (Item : chars_ptr; Length : size_t) return String is\n       Result : char_array (0 .. Length);\n \n    begin\n+      --  As per AI-00177, this is equivalent to\n+      --          To_Ada (Value (Item, Length) & nul);\n+\n       if Item = Null_Ptr then\n          raise Dereference_Error;\n       end if;"}, {"sha": "e9d9abbe8e13c60d791e8937d3bbae2133ac7490", "filename": "gcc/ada/i-cstrin.ads", "status": "modified", "additions": 33, "deletions": 22, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a6a52dcb9b0a1f64fcaee58936fc84d416c7651/gcc%2Fada%2Fi-cstrin.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a6a52dcb9b0a1f64fcaee58936fc84d416c7651/gcc%2Fada%2Fi-cstrin.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fi-cstrin.ads?ref=8a6a52dcb9b0a1f64fcaee58936fc84d416c7651", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1993-2002 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1993-2004 Free Software Foundation, Inc.          --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -40,57 +40,68 @@ pragma Preelaborate (Strings);\n \n    type char_array_access is access all char_array;\n \n+   pragma Warnings (Off);\n+   pragma No_Strict_Aliasing (char_array_access);\n+   pragma Warnings (On);\n+   --  Since this type is used for external interfacing, with the pointer\n+   --  coming from who knows where, it seems a good idea to turn off any\n+   --  strict aliasing assumptions for this type. We turn off warnings for\n+   --  this pragma to deal with being compiled with an earlier GNAT version\n+   --  that does not recognize this pragma.\n+\n    type chars_ptr is private;\n \n    type chars_ptr_array is array (size_t range <>) of chars_ptr;\n \n    Null_Ptr : constant chars_ptr;\n \n    function To_Chars_Ptr\n-     (Item      : in char_array_access;\n-      Nul_Check : in Boolean := False)\n-      return      chars_ptr;\n+     (Item      : char_array_access;\n+      Nul_Check : Boolean := False) return chars_ptr;\n \n-   function New_Char_Array (Chars : in char_array) return chars_ptr;\n+   function New_Char_Array (Chars : char_array) return chars_ptr;\n \n-   function New_String (Str : in String) return chars_ptr;\n+   function New_String (Str : String) return chars_ptr;\n \n    procedure Free (Item : in out chars_ptr);\n \n    Dereference_Error : exception;\n \n-   function Value (Item : in chars_ptr) return char_array;\n+   function Value (Item : chars_ptr) return char_array;\n \n    function Value\n-     (Item   : in chars_ptr;\n-      Length : in size_t)\n-      return   char_array;\n+     (Item   : chars_ptr;\n+      Length : size_t) return char_array;\n \n-   function Value (Item : in chars_ptr) return String;\n+   function Value (Item : chars_ptr) return String;\n \n    function Value\n-     (Item   : in chars_ptr;\n-      Length : in size_t)\n-      return   String;\n+     (Item   : chars_ptr;\n+      Length : size_t) return String;\n \n-   function Strlen (Item : in chars_ptr) return size_t;\n+   function Strlen (Item : chars_ptr) return size_t;\n \n    procedure Update\n-     (Item   : in chars_ptr;\n-      Offset : in size_t;\n-      Chars  : in char_array;\n+     (Item   : chars_ptr;\n+      Offset : size_t;\n+      Chars  : char_array;\n       Check  : Boolean := True);\n \n    procedure Update\n-     (Item   : in chars_ptr;\n-      Offset : in size_t;\n-      Str    : in String;\n-      Check  : in Boolean := True);\n+     (Item   : chars_ptr;\n+      Offset : size_t;\n+      Str    : String;\n+      Check  : Boolean := True);\n \n    Update_Error : exception;\n \n private\n    type chars_ptr is access all Character;\n \n+   pragma No_Strict_Aliasing (chars_ptr);\n+   --  Since this type is used for external interfacing, with the pointer\n+   --  coming from who knows where, it seems a good idea to turn off any\n+   --  strict aliasing assumptions for this type.\n+\n    Null_Ptr : constant chars_ptr := null;\n end Interfaces.C.Strings;"}, {"sha": "9c0cd18985d485d11ce8d1f73ba5195c3ee692be", "filename": "gcc/ada/make.adb", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a6a52dcb9b0a1f64fcaee58936fc84d416c7651/gcc%2Fada%2Fmake.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a6a52dcb9b0a1f64fcaee58936fc84d416c7651/gcc%2Fada%2Fmake.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmake.adb?ref=8a6a52dcb9b0a1f64fcaee58936fc84d416c7651", "patch": "@@ -1000,9 +1000,9 @@ package body Make is\n       File_Name   : String;\n       Program     : Make_Program_Type)\n    is\n-      Switches      : Variable_Value;\n-      Switch_List   : String_List_Id;\n-      Element       : String_Element;\n+      Switches    : Variable_Value;\n+      Switch_List : String_List_Id;\n+      Element     : String_Element;\n \n    begin\n       if File_Name'Length > 0 then\n@@ -5095,8 +5095,8 @@ package body Make is\n \n                      if Run_Path_Option and Path_Option /= null then\n                         declare\n-                           Option : String_Access;\n-                           Length : Natural := Path_Option'Length;\n+                           Option  : String_Access;\n+                           Length  : Natural := Path_Option'Length;\n                            Current : Natural;\n \n                         begin"}, {"sha": "2c78b75b2a725e05ad3fc81c11e4ff19ca469c63", "filename": "gcc/ada/opt.ads", "status": "modified", "additions": 12, "deletions": 8, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a6a52dcb9b0a1f64fcaee58936fc84d416c7651/gcc%2Fada%2Fopt.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a6a52dcb9b0a1f64fcaee58936fc84d416c7651/gcc%2Fada%2Fopt.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fopt.ads?ref=8a6a52dcb9b0a1f64fcaee58936fc84d416c7651", "patch": "@@ -659,14 +659,6 @@ package Opt is\n    --  GNATMAKE\n    --  Set to True if minimal recompilation mode requested.\n \n-   No_Stdlib : Boolean := False;\n-   --  GNATMAKE, GNATBIND, GNATFIND, GNATXREF\n-   --  Set to True if no default library search dirs added to search list.\n-\n-   No_Stdinc : Boolean := False;\n-   --  GNAT, GNATBIND, GNATMAKE, GNATFIND, GNATXREF\n-   --  Set to True if no default source search dirs added to search list.\n-\n    No_Main_Subprogram : Boolean := False;\n    --  GNATMAKE, GNATBIND\n    --  Set to True if compilation/binding of a program without main\n@@ -677,6 +669,18 @@ package Opt is\n    --  This flag is set True if a No_Run_Time pragma is encountered. See\n    --  spec of Rtsfind for a full description of handling of this pragma.\n \n+   No_Stdinc : Boolean := False;\n+   --  GNAT, GNATBIND, GNATMAKE, GNATFIND, GNATXREF\n+   --  Set to True if no default source search dirs added to search list\n+\n+   No_Stdlib : Boolean := False;\n+   --  GNATMAKE, GNATBIND, GNATFIND, GNATXREF\n+   --  Set to True if no default library search dirs added to search list\n+\n+   No_Strict_Aliasing : Boolean := False;\n+   --  GNAT\n+   --  Set True if pragma No_Strict_Aliasing with no parameters encountered\n+\n    Normalize_Scalars : Boolean := False;\n    --  GNAT, GNATBIND\n    --  Set True if a pragma Normalize_Scalars applies to the current unit."}, {"sha": "93cdb12a0e166bc6648ba16d21b1683d496b26e9", "filename": "gcc/ada/osint.adb", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a6a52dcb9b0a1f64fcaee58936fc84d416c7651/gcc%2Fada%2Fosint.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a6a52dcb9b0a1f64fcaee58936fc84d416c7651/gcc%2Fada%2Fosint.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fosint.adb?ref=8a6a52dcb9b0a1f64fcaee58936fc84d416c7651", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2003 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2004 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -2157,9 +2157,14 @@ package body Osint is\n          declare\n             pragma Suppress (All_Checks);\n \n+            pragma Warnings (Off);\n+            --  This use of unchecked conversion is aliasing safe\n+\n             function To_Source_Buffer_Ptr is new\n               Unchecked_Conversion (Address, Source_Buffer_Ptr);\n \n+            pragma Warnings (On);\n+\n          begin\n             Src := To_Source_Buffer_Ptr (Actual_Ptr (0)'Address);\n          end;"}, {"sha": "475f0c3550903c0df7f5a227b98f2dcc3862ca7d", "filename": "gcc/ada/par-ch10.adb", "status": "modified", "additions": 36, "deletions": 2, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a6a52dcb9b0a1f64fcaee58936fc84d416c7651/gcc%2Fada%2Fpar-ch10.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a6a52dcb9b0a1f64fcaee58936fc84d416c7651/gcc%2Fada%2Fpar-ch10.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch10.adb?ref=8a6a52dcb9b0a1f64fcaee58936fc84d416c7651", "patch": "@@ -748,16 +748,20 @@ package body Ch10 is\n    --  CONTEXT_ITEM ::= WITH_CLAUSE | USE_CLAUSE | WITH_TYPE_CLAUSE\n \n    --  WITH_CLAUSE ::=\n-   --    with library_unit_NAME {,library_unit_NAME};\n+   --  [LIMITED] [PRIVATE]  with library_unit_NAME {,library_unit_NAME};\n+   --  Note: the two qualifiers are ADA0Y extensions.\n \n    --  WITH_TYPE_CLAUSE ::=\n    --    with type type_NAME is access; | with type type_NAME is tagged;\n+   --  Note: this form is obsolete (old GNAT extension).\n \n    --  Error recovery: Cannot raise Error_Resync\n \n    function P_Context_Clause return List_Id is\n       Item_List   : List_Id;\n       Has_Limited : Boolean := False;\n+      Has_Private : Boolean := False;\n+      Scan_State  : Saved_Scan_State;\n       With_Node   : Node_Id;\n       First_Flag  : Boolean;\n \n@@ -781,14 +785,21 @@ package body Ch10 is\n \n          --  Processing for WITH clause\n \n-         --  Ada0Y (AI-50217): First check for LIMITED WITH\n+         --  Ada0Y (AI-50217): First check for LIMITED WITH, PRIVATE WITH,\n+         --  or both.\n \n          if Token = Tok_Limited then\n             Has_Limited := True;\n+            Has_Private := False;\n             Scan; -- past LIMITED\n \n             --  In the context, LIMITED can only appear in a with_clause\n \n+            if Token = Tok_Private then\n+               Has_Private := True;\n+               Scan;  -- past PRIVATE\n+            end if;\n+\n             if Token /= Tok_With then\n                Error_Msg_SC (\"unexpected LIMITED ignored\");\n             end if;\n@@ -797,9 +808,31 @@ package body Ch10 is\n                Error_Msg_SP (\"`LIMITED WITH` is an Ada0X extension\");\n                Error_Msg_SP\n                  (\"\\unit must be compiled with -gnatX switch\");\n+\n             end if;\n+\n+         elsif Token = Tok_Private then\n+            Has_Limited := False;\n+            Has_Private := True;\n+            Save_Scan_State (Scan_State);\n+            Scan;  -- past PRIVATE\n+\n+            if Token /= Tok_With then\n+\n+               --  Keyword is beginning of private child unit.\n+\n+               Restore_Scan_State (Scan_State); -- to PRIVATE\n+               return Item_List;\n+\n+            elsif not Extensions_Allowed then\n+               Error_Msg_SP (\"`PRIVATE WITH` is an Ada0X extension\");\n+               Error_Msg_SP\n+                 (\"\\unit must be compiled with -gnatX switch\");\n+            end if;\n+\n          else\n             Has_Limited := False;\n+            Has_Private := False;\n          end if;\n \n          if Token = Tok_With then\n@@ -852,6 +885,7 @@ package body Ch10 is\n                   Set_Name (With_Node, P_Qualified_Simple_Name);\n                   Set_First_Name (With_Node, First_Flag);\n                   Set_Limited_Present (With_Node, Has_Limited);\n+                  Set_Private_Present (With_Node, Has_Private);\n                   First_Flag := False;\n                   exit when Token /= Tok_Comma;\n                   Scan; -- past comma"}, {"sha": "fef50e03f812c948e99a3b986e6ef7c8fd47ea5c", "filename": "gcc/ada/par-prag.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a6a52dcb9b0a1f64fcaee58936fc84d416c7651/gcc%2Fada%2Fpar-prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a6a52dcb9b0a1f64fcaee58936fc84d416c7651/gcc%2Fada%2Fpar-prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-prag.adb?ref=8a6a52dcb9b0a1f64fcaee58936fc84d416c7651", "patch": "@@ -940,6 +940,7 @@ begin\n            Pragma_No_Return                    |\n            Pragma_Obsolescent                  |\n            Pragma_No_Run_Time                  |\n+           Pragma_No_Strict_Aliasing           |\n            Pragma_Normalize_Scalars            |\n            Pragma_Optimize                     |\n            Pragma_Optional_Overriding          |"}, {"sha": "123ff290f6790a71292caacd940c07ed6a60549a", "filename": "gcc/ada/prj-com.ads", "status": "modified", "additions": 18, "deletions": 1, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a6a52dcb9b0a1f64fcaee58936fc84d416c7651/gcc%2Fada%2Fprj-com.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a6a52dcb9b0a1f64fcaee58936fc84d416c7651/gcc%2Fada%2Fprj-com.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-com.ads?ref=8a6a52dcb9b0a1f64fcaee58936fc84d416c7651", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2000-2003 Free Software Foundation, Inc.          --\n+--          Copyright (C) 2000-2004 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -98,5 +98,22 @@ package Prj.Com is\n       Key        => Name_Id,\n       Hash       => Hash,\n       Equal      => \"=\");\n+   --  Mapping of unit names to indexes in the Units table\n+\n+   type Unit_Project is record\n+      Unit    : Unit_Id    := No_Unit;\n+      Project : Project_Id := No_Project;\n+   end record;\n+\n+   No_Unit_Project : constant Unit_Project := (No_Unit, No_Project);\n+\n+   package Files_Htable is new GNAT.HTable.Simple_HTable\n+     (Header_Num => Header_Num,\n+      Element    => Unit_Project,\n+      No_Element => No_Unit_Project,\n+      Key        => Name_Id,\n+      Hash       => Hash,\n+      Equal      => \"=\");\n+   --  Mapping of file names to indexes in the Units table\n \n end Prj.Com;"}, {"sha": "aed4838cf628f34bf886892293c1292839761445", "filename": "gcc/ada/prj-nmsc.adb", "status": "modified", "additions": 32, "deletions": 15, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a6a52dcb9b0a1f64fcaee58936fc84d416c7651/gcc%2Fada%2Fprj-nmsc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a6a52dcb9b0a1f64fcaee58936fc84d416c7651/gcc%2Fada%2Fprj-nmsc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-nmsc.adb?ref=8a6a52dcb9b0a1f64fcaee58936fc84d416c7651", "patch": "@@ -222,7 +222,6 @@ package body Prj.Nmsc is\n       end if;\n    end Compute_Directory_Last;\n \n-\n    -------------------------------\n    -- Prepare_Naming_Exceptions --\n    -------------------------------\n@@ -1085,7 +1084,6 @@ package body Prj.Nmsc is\n                              (Name_Locally_Removed_Files,\n                               Data.Decl.Attributes);\n \n-\n             begin\n                pragma Assert\n                  (Sources.Kind = List,\n@@ -3662,6 +3660,8 @@ package body Prj.Nmsc is\n       Previous_Source : constant String_List_Id := Current_Source;\n       Except_Name     : Name_Id        := No_Name;\n \n+      Unit_Prj : Unit_Project;\n+\n    begin\n       Get_Name_String (File_Name);\n       Canonical_Case_File_Name (Name_Buffer (1 .. Name_Len));\n@@ -3814,19 +3814,36 @@ package body Prj.Nmsc is\n             --  It is a new unit, create a new record\n \n             else\n-               Units.Increment_Last;\n-               The_Unit := Units.Last;\n-               Units_Htable.Set (Unit_Name, The_Unit);\n-               The_Unit_Data.Name := Unit_Name;\n-               The_Unit_Data.File_Names (Unit_Kind) :=\n-                 (Name         => Canonical_File_Name,\n-                  Display_Name => File_Name,\n-                  Path         => Canonical_Path_Name,\n-                  Display_Path => Path_Name,\n-                  Project      => Project,\n-                  Needs_Pragma => Needs_Pragma);\n-               Units.Table (The_Unit) := The_Unit_Data;\n-               Source_Recorded := True;\n+               --  First, check if there is no other unit with this file name\n+               --  in another project. If it is, report an error.\n+\n+               Unit_Prj := Files_Htable.Get (Canonical_File_Name);\n+\n+               if Unit_Prj /= No_Unit_Project then\n+                  Error_Msg_Name_1 := File_Name;\n+                  Error_Msg_Name_2 := Projects.Table (Unit_Prj.Project).Name;\n+                  Error_Msg\n+                    (Project,\n+                     \"{ is already a source of project {\",\n+                     Location);\n+\n+               else\n+                  Units.Increment_Last;\n+                  The_Unit := Units.Last;\n+                  Units_Htable.Set (Unit_Name, The_Unit);\n+                  Unit_Prj := (Unit => The_Unit, Project => Project);\n+                  Files_Htable.Set (Canonical_File_Name, Unit_Prj);\n+                  The_Unit_Data.Name := Unit_Name;\n+                  The_Unit_Data.File_Names (Unit_Kind) :=\n+                    (Name         => Canonical_File_Name,\n+                     Display_Name => File_Name,\n+                     Path         => Canonical_Path_Name,\n+                     Display_Path => Path_Name,\n+                     Project      => Project,\n+                     Needs_Pragma => Needs_Pragma);\n+                  Units.Table (The_Unit) := The_Unit_Data;\n+                  Source_Recorded := True;\n+               end if;\n             end if;\n          end;\n       end if;"}, {"sha": "a6c00bfcd19586ccdd48ff16c084413755c56234", "filename": "gcc/ada/s-finimp.adb", "status": "modified", "additions": 8, "deletions": 11, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a6a52dcb9b0a1f64fcaee58936fc84d416c7651/gcc%2Fada%2Fs-finimp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a6a52dcb9b0a1f64fcaee58936fc84d416c7651/gcc%2Fada%2Fs-finimp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-finimp.adb?ref=8a6a52dcb9b0a1f64fcaee58936fc84d416c7651", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2002 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2004 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -33,10 +33,12 @@\n \n with Ada.Exceptions;\n with Ada.Tags;\n-with Ada.Unchecked_Conversion;\n+\n with System.Storage_Elements;\n with System.Soft_Links;\n \n+with Unchecked_Conversion;\n+\n package body System.Finalization_Implementation is\n \n    use Ada.Exceptions;\n@@ -51,16 +53,10 @@ package body System.Finalization_Implementation is\n    -- Local Subprograms --\n    -----------------------\n \n-   function To_Finalizable_Ptr is\n-     new Ada.Unchecked_Conversion (Address, Finalizable_Ptr);\n-\n-   function To_Addr is\n-     new Ada.Unchecked_Conversion (Finalizable_Ptr, Address);\n-\n    type RC_Ptr is access all Record_Controller;\n \n    function To_RC_Ptr is\n-     new Ada.Unchecked_Conversion (Address, RC_Ptr);\n+     new Unchecked_Conversion (Address, RC_Ptr);\n \n    procedure Raise_Exception_No_Defer\n      (E       : in Exception_Id;\n@@ -423,7 +419,7 @@ package body System.Finalization_Implementation is\n       --  raised.\n \n       function To_Ptr is new\n-         Ada.Unchecked_Conversion (Exception_Occurrence_Access, Ptr);\n+         Unchecked_Conversion (Exception_Occurrence_Access, Ptr);\n \n       X : constant Exception_Id :=\n             To_Ptr (System.Soft_Links.Get_Current_Excep.all).Id;\n@@ -513,9 +509,10 @@ package body System.Finalization_Implementation is\n                Parent : Parent_Type;\n                Controller : Faked_Record_Controller;\n             end record;\n+\n             type Obj_Ptr is access all Faked_Type_Of_Obj;\n             function To_Obj_Ptr is\n-              new Ada.Unchecked_Conversion (Address, Obj_Ptr);\n+              new Unchecked_Conversion (Address, Obj_Ptr);\n \n          begin\n             return To_RC_Ptr (To_Obj_Ptr (Obj).Controller'Address);"}, {"sha": "c4d35567d5f73908c69e58a601ec66f7a03deeb9", "filename": "gcc/ada/s-finroo.ads", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a6a52dcb9b0a1f64fcaee58936fc84d416c7651/gcc%2Fada%2Fs-finroo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a6a52dcb9b0a1f64fcaee58936fc84d416c7651/gcc%2Fada%2Fs-finroo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-finroo.ads?ref=8a6a52dcb9b0a1f64fcaee58936fc84d416c7651", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---            Copyright (C) 1992-2003 Free Software Foundation, Inc.        --\n+--            Copyright (C) 1992-2004 Free Software Foundation, Inc.        --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -31,14 +31,24 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n+--  This unit provides the basic support for controlled (finalizable) types\n+\n with Ada.Streams;\n+with Unchecked_Conversion;\n+\n package System.Finalization_Root is\n pragma Preelaborate (Finalization_Root);\n \n    type Root_Controlled;\n \n    type Finalizable_Ptr is access all Root_Controlled'Class;\n \n+   function To_Finalizable_Ptr is\n+     new Unchecked_Conversion (Address, Finalizable_Ptr);\n+\n+   function To_Addr is\n+     new Unchecked_Conversion (Finalizable_Ptr, Address);\n+\n    type Empty_Root_Controlled is abstract tagged null record;\n    --  Just for the sake of Controlled equality (see Ada.Finalization)\n "}, {"sha": "f6532f3cb389976e3a24efac77832497ddbcc6bd", "filename": "gcc/ada/s-restri.ads", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a6a52dcb9b0a1f64fcaee58936fc84d416c7651/gcc%2Fada%2Fs-restri.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a6a52dcb9b0a1f64fcaee58936fc84d416c7651/gcc%2Fada%2Fs-restri.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-restri.ads?ref=8a6a52dcb9b0a1f64fcaee58936fc84d416c7651", "patch": "@@ -19,6 +19,13 @@\n -- to  the Free Software Foundation,  59 Temple Place - Suite 330,  Boston, --\n -- MA 02111-1307, USA.                                                      --\n --                                                                          --\n+-- As a special exception,  if other files  instantiate  generics from this --\n+-- unit, or you link  this unit with other files  to produce an executable, --\n+-- this  unit  does not  by itself cause  the resulting  executable  to  be --\n+-- covered  by the  GNU  General  Public  License.  This exception does not --\n+-- however invalidate  any other reasons why  the executable file  might be --\n+-- covered by the  GNU Public License.                                      --\n+--                                                                          --\n -- GNAT was originally developed  by the GNAT team at  New York University. --\n -- Extensive contributions were provided by Ada Core Technologies Inc.      --\n --                                                                          --"}, {"sha": "eb87d302dbeee37000a4899354fad7d5bae1ec6f", "filename": "gcc/ada/s-tasini.adb", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a6a52dcb9b0a1f64fcaee58936fc84d416c7651/gcc%2Fada%2Fs-tasini.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a6a52dcb9b0a1f64fcaee58936fc84d416c7651/gcc%2Fada%2Fs-tasini.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-tasini.adb?ref=8a6a52dcb9b0a1f64fcaee58936fc84d416c7651", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  B o d y                                 --\n --                                                                          --\n---         Copyright (C) 1992-2003, Free Software Foundation, Inc.          --\n+--         Copyright (C) 1992-2004, Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -951,8 +951,7 @@ package body System.Tasking.Initialization is\n    end Get_Stack_Info;\n \n    procedure Set_Exc_Stack_Addr (Self_ID : Address; Addr : Address) is\n-      Me : Task_ID := To_Task_Id (Self_ID);\n-\n+      Me : Task_ID := To_Task_ID (Self_ID);\n    begin\n       if Me = Null_Task then\n          Me := STPO.Self;"}, {"sha": "3e4cf782747dde87f9f53e1f69cda688b140bc84", "filename": "gcc/ada/s-taskin.ads", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a6a52dcb9b0a1f64fcaee58936fc84d416c7651/gcc%2Fada%2Fs-taskin.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a6a52dcb9b0a1f64fcaee58936fc84d416c7651/gcc%2Fada%2Fs-taskin.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taskin.ads?ref=8a6a52dcb9b0a1f64fcaee58936fc84d416c7651", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  S p e c                                 --\n --                                                                          --\n---          Copyright (C) 1992-2003, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2004, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -125,7 +125,7 @@ package System.Tasking is\n    --  This is the compiler interface version of this function. Do not call\n    --  from the run-time system.\n \n-   function To_Task_Id is new Unchecked_Conversion (System.Address, Task_ID);\n+   function To_Task_ID is new Unchecked_Conversion (System.Address, Task_ID);\n    function To_Address is new Unchecked_Conversion (Task_ID, System.Address);\n \n    -----------------------\n@@ -728,6 +728,12 @@ package System.Tasking is\n    ------------------------------------\n \n    type Access_Address is access all System.Address;\n+   --  Comment on what this is used for ???\n+\n+   pragma No_Strict_Aliasing (Access_Address);\n+   --  This type is used in contexts where aliasing may be an issue (see\n+   --  for example s-tataat.adb), so we avoid any incorrect aliasing\n+   --  assumptions.\n \n    ----------------------------------------------\n    -- Ada_Task_Control_Block (ATCB) definition --"}, {"sha": "8d4c5e232471be33559cb168db0261340662f293", "filename": "gcc/ada/s-tasren.adb", "status": "modified", "additions": 13, "deletions": 14, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a6a52dcb9b0a1f64fcaee58936fc84d416c7651/gcc%2Fada%2Fs-tasren.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a6a52dcb9b0a1f64fcaee58936fc84d416c7651/gcc%2Fada%2Fs-tasren.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-tasren.adb?ref=8a6a52dcb9b0a1f64fcaee58936fc84d416c7651", "patch": "@@ -66,6 +66,7 @@ with System.Tasking.Utilities;\n --  used for Check_Exception\n --           Make_Passive\n --           Wakeup_Entry_Caller\n+--           Exit_One_ATC_Level\n \n with System.Tasking.Protected_Objects.Operations;\n --  used for PO_Do_Or_Queue\n@@ -452,7 +453,9 @@ package body System.Tasking.Rendezvous is\n       if not Task_Do_Or_Queue\n         (Self_Id, Entry_Call, With_Abort => True)\n       then\n-         Self_Id.ATC_Nesting_Level := Self_Id.ATC_Nesting_Level - 1;\n+         STPO.Write_Lock (Self_Id);\n+         Utilities.Exit_One_ATC_Level (Self_Id);\n+         STPO.Unlock (Self_Id);\n \n          if Single_Lock then\n             Unlock_RTS;\n@@ -463,9 +466,6 @@ package body System.Tasking.Rendezvous is\n          end if;\n \n          Initialization.Undefer_Abort (Self_Id);\n-         pragma Debug\n-           (Debug.Trace (Self_Id, \"CS: exited to ATC level: \" &\n-            ATC_Level'Image (Self_Id.ATC_Nesting_Level), 'A'));\n          raise Tasking_Error;\n       end if;\n \n@@ -808,7 +808,9 @@ package body System.Tasking.Rendezvous is\n          --  ??? In some cases abort is deferred more than once. Need to\n          --  figure out why this happens.\n \n-         Self_Id.Deferral_Level := 1;\n+         if Self_Id.Deferral_Level > 1 then\n+            Self_Id.Deferral_Level := 1;\n+         end if;\n \n          Initialization.Undefer_Abort (Self_Id);\n \n@@ -1347,10 +1349,9 @@ package body System.Tasking.Rendezvous is\n          if not Task_Do_Or_Queue\n            (Self_Id, Entry_Call, With_Abort => True)\n          then\n-            Self_Id.ATC_Nesting_Level := Self_Id.ATC_Nesting_Level - 1;\n-            pragma Debug\n-              (Debug.Trace (Self_Id, \"TEC: exited to ATC level: \" &\n-               ATC_Level'Image (Self_Id.ATC_Nesting_Level), 'A'));\n+            STPO.Write_Lock (Self_Id);\n+            Utilities.Exit_One_ATC_Level (Self_Id);\n+            STPO.Unlock (Self_Id);\n \n             if Single_Lock then\n                Unlock_RTS;\n@@ -1710,11 +1711,9 @@ package body System.Tasking.Rendezvous is\n       if not Task_Do_Or_Queue\n        (Self_Id, Entry_Call, With_Abort => True)\n       then\n-         Self_Id.ATC_Nesting_Level := Self_Id.ATC_Nesting_Level - 1;\n-\n-         pragma Debug\n-           (Debug.Trace (Self_Id, \"TTEC: exited to ATC level: \" &\n-            ATC_Level'Image (Self_Id.ATC_Nesting_Level), 'A'));\n+         STPO.Write_Lock (Self_Id);\n+         Utilities.Exit_One_ATC_Level (Self_Id);\n+         STPO.Unlock (Self_Id);\n \n          if Single_Lock then\n             Unlock_RTS;"}, {"sha": "cc946115a8ea246d362d4cd00075b94ea9cdb408", "filename": "gcc/ada/s-tassta.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a6a52dcb9b0a1f64fcaee58936fc84d416c7651/gcc%2Fada%2Fs-tassta.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a6a52dcb9b0a1f64fcaee58936fc84d416c7651/gcc%2Fada%2Fs-tassta.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-tassta.adb?ref=8a6a52dcb9b0a1f64fcaee58936fc84d416c7651", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  B o d y                                 --\n --                                                                          --\n---         Copyright (C) 1992-2003, Free Software Foundation, Inc.          --\n+--         Copyright (C) 1992-2004, Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -98,10 +98,10 @@ with System.Finalization_Implementation;\n --  Used for System.Finalization_Implementation.Finalize_Global_List\n \n with System.Secondary_Stack;\n---  used for SS_Init;\n+--  used for SS_Init\n \n with System.Storage_Elements;\n---  used for Storage_Array;\n+--  used for Storage_Array\n \n with System.Standard_Library;\n --  used for Exception_Trace"}, {"sha": "b3660f3b04c133904950ef61b9bcff80d2a58eaf", "filename": "gcc/ada/s-tataat.adb", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a6a52dcb9b0a1f64fcaee58936fc84d416c7651/gcc%2Fada%2Fs-tataat.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a6a52dcb9b0a1f64fcaee58936fc84d416c7651/gcc%2Fada%2Fs-tataat.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-tataat.adb?ref=8a6a52dcb9b0a1f64fcaee58936fc84d416c7651", "patch": "@@ -7,7 +7,7 @@\n --                                  B o d y                                 --\n --                                                                          --\n --             Copyright (C) 1991-1994, Florida State University            --\n---             Copyright (C) 1995-2003, Ada Core Technologies               --\n+--             Copyright (C) 1995-2004, Ada Core Technologies               --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -51,10 +51,6 @@ package body System.Tasking.Task_Attributes is\n    use Task_Primitives.Operations;\n    use Tasking.Initialization;\n \n-   function To_Access_Node is new Unchecked_Conversion\n-     (Access_Address, Access_Node);\n-   --  Tetch pointer to indirect attribute list\n-\n    function To_Access_Address is new Unchecked_Conversion\n      (Access_Node, Access_Address);\n    --  Store pointer to indirect attribute list"}, {"sha": "622e0ebee595842a14c0063e4628d63d40e9fb57", "filename": "gcc/ada/s-tataat.ads", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a6a52dcb9b0a1f64fcaee58936fc84d416c7651/gcc%2Fada%2Fs-tataat.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a6a52dcb9b0a1f64fcaee58936fc84d416c7651/gcc%2Fada%2Fs-tataat.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-tataat.ads?ref=8a6a52dcb9b0a1f64fcaee58936fc84d416c7651", "patch": "@@ -7,7 +7,7 @@\n --                                  S p e c                                 --\n --                                                                          --\n --             Copyright (C) 1991-1994, Florida State University            --\n---             Copyright (C) 1995-2003, Ada Core Technologies               --\n+--             Copyright (C) 1995-2004, Ada Core Technologies               --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -50,6 +50,11 @@ package System.Tasking.Task_Attributes is\n    type Access_Node is access all Node;\n    --  This needs comments ???\n \n+   function To_Access_Node is new Unchecked_Conversion\n+     (Access_Address, Access_Node);\n+   --  Used to fetch pointer to indirect attribute list. Declaration is\n+   --  in spec to avoid any problems with aliasing assumptions.\n+\n    type Dummy_Wrapper;\n    type Access_Dummy_Wrapper is access all Dummy_Wrapper;\n    for Access_Dummy_Wrapper'Storage_Size use 0;"}, {"sha": "5bbe18ebcca1919ae174ef35ef04b1100cef0021", "filename": "gcc/ada/s-tpobop.adb", "status": "modified", "additions": 34, "deletions": 19, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a6a52dcb9b0a1f64fcaee58936fc84d416c7651/gcc%2Fada%2Fs-tpobop.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a6a52dcb9b0a1f64fcaee58936fc84d416c7651/gcc%2Fada%2Fs-tpobop.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-tpobop.adb?ref=8a6a52dcb9b0a1f64fcaee58936fc84d416c7651", "patch": "@@ -80,6 +80,9 @@ with System.Tasking.Queuing;\n with System.Tasking.Rendezvous;\n --  used for Task_Do_Or_Queue\n \n+with System.Tasking.Utilities;\n+--  used for Exit_One_ATC_Level\n+\n with System.Tasking.Debug;\n --  used for Trace\n \n@@ -400,16 +403,16 @@ package body System.Tasking.Protected_Objects.Operations is\n                   Update_For_Queue_To_PO (Entry_Call, With_Abort);\n \n                else\n-                  --  ?????\n-                  --  Can we convert this recursion to a loop?\n+                  --  Can we convert this recursion to a loop???\n \n                   PO_Do_Or_Queue (Self_ID, New_Object, Entry_Call, With_Abort);\n                end if;\n             end if;\n          end if;\n \n-      elsif Entry_Call.Mode /= Conditional_Call or else\n-        not With_Abort then\n+      elsif Entry_Call.Mode /= Conditional_Call\n+        or else not With_Abort\n+      then\n          Queuing.Enqueue (Object.Entry_Queues (E), Entry_Call);\n          Update_For_Queue_To_PO (Entry_Call, With_Abort);\n \n@@ -729,17 +732,25 @@ package body System.Tasking.Protected_Objects.Operations is\n       Initially_Abortable := Entry_Call.State = Now_Abortable;\n       PO_Service_Entries (Self_ID, Object);\n \n-      --  Try to prevent waiting later (in Cancel_Protected_Entry_Call)\n+      --  Try to prevent waiting later (in Try_To_Cancel_Protected_Entry_Call)\n       --  for completed or cancelled calls.  (This is a heuristic, only.)\n \n       if Entry_Call.State >= Done then\n \n          --  Once State >= Done it will not change any more.\n \n-         Self_ID.ATC_Nesting_Level := Self_ID.ATC_Nesting_Level - 1;\n-         pragma Debug\n-           (Debug.Trace (Self_ID, \"PEC: exited to ATC level: \" &\n-            ATC_Level'Image (Self_ID.ATC_Nesting_Level), 'A'));\n+         if Single_Lock then\n+            STPO.Lock_RTS;\n+         end if;\n+\n+         STPO.Write_Lock (Self_ID);\n+         Utilities.Exit_One_ATC_Level (Self_ID);\n+         STPO.Unlock (Self_ID);\n+\n+         if Single_Lock then\n+            STPO.Unlock_RTS;\n+         end if;\n+\n          Block.Enqueued := False;\n          Block.Cancelled := Entry_Call.State = Cancelled;\n          Initialization.Undefer_Abort (Self_ID);\n@@ -986,25 +997,29 @@ package body System.Tasking.Protected_Objects.Operations is\n       PO_Do_Or_Queue (Self_Id, Object, Entry_Call, With_Abort => True);\n       PO_Service_Entries (Self_Id, Object);\n \n+      if Single_Lock then\n+         STPO.Lock_RTS;\n+      else\n+         STPO.Write_Lock (Self_Id);\n+      end if;\n+\n       --  Try to avoid waiting for completed or cancelled calls.\n \n       if Entry_Call.State >= Done then\n-         Self_Id.ATC_Nesting_Level := Self_Id.ATC_Nesting_Level - 1;\n-         pragma Debug\n-           (Debug.Trace (Self_Id, \"TPEC: exited to ATC level: \" &\n-            ATC_Level'Image (Self_Id.ATC_Nesting_Level), 'A'));\n+         Utilities.Exit_One_ATC_Level (Self_Id);\n+\n+         if Single_Lock then\n+            STPO.Unlock_RTS;\n+         else\n+            STPO.Unlock (Self_Id);\n+         end if;\n+\n          Entry_Call_Successful := Entry_Call.State = Done;\n          Initialization.Undefer_Abort (Self_Id);\n          Entry_Calls.Check_Exception (Self_Id, Entry_Call);\n          return;\n       end if;\n \n-      if Single_Lock then\n-         STPO.Lock_RTS;\n-      else\n-         STPO.Write_Lock (Self_Id);\n-      end if;\n-\n       Entry_Calls.Wait_For_Completion_With_Timeout\n         (Entry_Call, Timeout, Mode, Yielded);\n "}, {"sha": "f8d93f36b9a0c9836ab022239a26b7bc35103a50", "filename": "gcc/ada/sem_ch10.adb", "status": "modified", "additions": 53, "deletions": 12, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a6a52dcb9b0a1f64fcaee58936fc84d416c7651/gcc%2Fada%2Fsem_ch10.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a6a52dcb9b0a1f64fcaee58936fc84d416c7651/gcc%2Fada%2Fsem_ch10.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch10.adb?ref=8a6a52dcb9b0a1f64fcaee58936fc84d416c7651", "patch": "@@ -135,9 +135,15 @@ package body Sem_Ch10 is\n    --  Place shadow entities for a limited_with package in the visibility\n    --  structures for the current compilation. Implements Ada0Y (AI-50217).\n \n-   procedure Install_Withed_Unit (With_Clause : Node_Id);\n+   procedure Install_Withed_Unit\n+     (With_Clause     : Node_Id;\n+      Private_With_OK : Boolean := False);\n+\n    --  If the unit is not a child unit, make unit immediately visible.\n    --  The caller ensures that the unit is not already currently installed.\n+   --  The flag Private_With_OK is set true in Install_Private_With_Clauses,\n+   --  which is called when compiling the private part of a package, or\n+   --  installing the private declarations of a parent unit.\n \n    procedure Install_Parents (Lib_Unit : Node_Id; Is_Private : Boolean);\n    --  This procedure establishes the context for the compilation of a child\n@@ -2483,7 +2489,7 @@ package body Sem_Ch10 is\n       P_Name : constant Entity_Id  := Get_Parent_Entity (P_Unit);\n       Withn  : Node_Id;\n \n-      function Build_Ancestor_Name (P : Node_Id)  return Node_Id;\n+      function Build_Ancestor_Name (P : Node_Id) return Node_Id;\n       --  Build prefix of child unit name. Recurse if needed.\n \n       function Build_Unit_Name return Node_Id;\n@@ -2497,7 +2503,6 @@ package body Sem_Ch10 is\n       function Build_Ancestor_Name (P : Node_Id) return Node_Id is\n          P_Ref : constant Node_Id :=\n                    New_Reference_To (Defining_Entity (P), Loc);\n-\n       begin\n          if No (Parent_Spec (P)) then\n             return P_Ref;\n@@ -2515,7 +2520,6 @@ package body Sem_Ch10 is\n \n       function Build_Unit_Name return Node_Id is\n          Result : Node_Id;\n-\n       begin\n          if No (Parent_Spec (P_Unit)) then\n             return New_Reference_To (P_Name, Loc);\n@@ -2551,6 +2555,7 @@ package body Sem_Ch10 is\n       if Is_Child_Spec (P_Unit) then\n          Implicit_With_On_Parent (P_Unit, N);\n       end if;\n+\n       New_Nodes_OK := New_Nodes_OK - 1;\n    end Implicit_With_On_Parent;\n \n@@ -2777,6 +2782,7 @@ package body Sem_Ch10 is\n                   if not (Private_Present (Parent (Lib_Spec))) then\n                      P_Name := Defining_Entity (P);\n                      Install_Private_Declarations (P_Name);\n+                     Install_Private_With_Clauses (P_Name);\n                      Set_Use (Private_Declarations (Specification (P)));\n                   end if;\n \n@@ -3134,10 +3140,34 @@ package body Sem_Ch10 is\n         or else Private_Present (Parent (Lib_Unit))\n       then\n          Install_Private_Declarations (P_Name);\n+         Install_Private_With_Clauses (P_Name);\n          Set_Use (Private_Declarations (P_Spec));\n       end if;\n    end Install_Parents;\n \n+   ----------------------------------\n+   -- Install_Private_With_Clauses --\n+   ----------------------------------\n+\n+   procedure Install_Private_With_Clauses (P : Entity_Id) is\n+      Decl   : constant Node_Id := Unit_Declaration_Node (P);\n+      Clause : Node_Id;\n+\n+   begin\n+      if Nkind (Parent (Decl)) = N_Compilation_Unit then\n+         Clause := First (Context_Items (Parent (Decl)));\n+         while Present (Clause) loop\n+            if Nkind (Clause) = N_With_Clause\n+              and then Private_Present (Clause)\n+            then\n+               Install_Withed_Unit (Clause, Private_With_OK => True);\n+            end if;\n+\n+            Next (Clause);\n+         end loop;\n+      end if;\n+   end Install_Private_With_Clauses;\n+\n    ----------------------\n    -- Install_Siblings --\n    ----------------------\n@@ -3161,11 +3191,9 @@ package body Sem_Ch10 is\n \n       begin\n          Par := U_Name;\n-\n          while Present (Par)\n            and then Par /= Standard_Standard\n          loop\n-\n             if Par = E then\n                return True;\n             end if;\n@@ -3183,9 +3211,7 @@ package body Sem_Ch10 is\n       --  scope of each entity is an ancestor of the current unit.\n \n       Item := First (Context_Items (N));\n-\n       while Present (Item) loop\n-\n          if Nkind (Item) = N_With_Clause\n            and then not Implicit_With (Item)\n            and then not Limited_Present (Item)\n@@ -3235,7 +3261,6 @@ package body Sem_Ch10 is\n             then\n                Set_Is_Immediately_Visible (Scope (Id));\n             end if;\n-\n          end if;\n \n          Next (Item);\n@@ -3259,6 +3284,10 @@ package body Sem_Ch10 is\n       --  Check that the shadow entity is not already in the homonym\n       --  chain, for example through a limited_with clause in a parent unit.\n \n+      --------------\n+      -- In_Chain --\n+      --------------\n+\n       function In_Chain (E : Entity_Id) return Boolean is\n          H : Entity_Id := Current_Entity (E);\n \n@@ -3435,7 +3464,10 @@ package body Sem_Ch10 is\n    -- Install_Withed_Unit --\n    -------------------------\n \n-   procedure Install_Withed_Unit (With_Clause : Node_Id) is\n+   procedure Install_Withed_Unit\n+     (With_Clause     : Node_Id;\n+      Private_With_OK : Boolean := False)\n+   is\n       Uname : constant Entity_Id := Entity (Name (With_Clause));\n       P     : constant Entity_Id := Scope (Uname);\n \n@@ -3460,13 +3492,17 @@ package body Sem_Ch10 is\n       end if;\n \n       if P /= Standard_Standard then\n+         if Private_Present (With_Clause)\n+           and then not (Private_With_OK)\n+         then\n+            return;\n \n          --  If the unit is not analyzed after analysis of the with clause,\n          --  and it is an instantiation, then it awaits a body and is the main\n          --  unit. Its appearance in the context of some other unit indicates\n          --  a circular dependency (DEC suite perversity).\n \n-         if not Analyzed (Uname)\n+         elsif not Analyzed (Uname)\n            and then Nkind (Parent (Uname)) = N_Package_Instantiation\n          then\n             Error_Msg_N\n@@ -3498,7 +3534,12 @@ package body Sem_Ch10 is\n          end if;\n \n       elsif not Is_Immediately_Visible (Uname) then\n-         Set_Is_Immediately_Visible (Uname);\n+         if not Private_Present (With_Clause)\n+           or else Private_With_OK\n+         then\n+            Set_Is_Immediately_Visible (Uname);\n+         end if;\n+\n          Set_Context_Installed (With_Clause);\n       end if;\n "}, {"sha": "13afefce063df5ee279cf8ef513473487097ff7b", "filename": "gcc/ada/sem_ch10.ads", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a6a52dcb9b0a1f64fcaee58936fc84d416c7651/gcc%2Fada%2Fsem_ch10.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a6a52dcb9b0a1f64fcaee58936fc84d416c7651/gcc%2Fada%2Fsem_ch10.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch10.ads?ref=8a6a52dcb9b0a1f64fcaee58936fc84d416c7651", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2001 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2004 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -40,6 +40,11 @@ package Sem_Ch10 is\n    --  unit into the visibility chains. This is done before analyzing a unit.\n    --  For a child unit, install context of parents as well.\n \n+   procedure Install_Private_With_Clauses (P : Entity_Id);\n+   --  Install the private with_clauses of a compilation unit, when compiling\n+   --  its private part, compiling a private child unit, or compiling the\n+   --  private declarations of a public child unit.\n+\n    procedure Remove_Context (N : Node_Id);\n    --  Removes the entities from the context clause of the given compilation\n    --  unit from the visibility chains. This is done on exit from a unit as"}, {"sha": "2a48fb9450e4928ab25eca7fcfe1a7531a9778c4", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 24, "deletions": 9, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a6a52dcb9b0a1f64fcaee58936fc84d416c7651/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a6a52dcb9b0a1f64fcaee58936fc84d416c7651/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=8a6a52dcb9b0a1f64fcaee58936fc84d416c7651", "patch": "@@ -30,7 +30,6 @@ with Einfo;    use Einfo;\n with Errout;   use Errout;\n with Exp_Tss;  use Exp_Tss;\n with Exp_Util; use Exp_Util;\n-with Hostparm; use Hostparm;\n with Lib;      use Lib;\n with Nlists;   use Nlists;\n with Nmake;    use Nmake;\n@@ -3853,15 +3852,31 @@ package body Sem_Ch13 is\n          end if;\n       end if;\n \n-      --  Generate N_Validate_Unchecked_Conversion node for back end if\n-      --  the back end needs to perform special validation checks. At the\n-      --  current time, only the JVM version requires such checks.\n+      --  In GNAT mode, if target is an access type, access type must be\n+      --  declared in the same source unit as the unchecked conversion.\n \n-      if Java_VM then\n-         Vnode :=\n-           Make_Validate_Unchecked_Conversion (Sloc (N));\n-         Set_Source_Type (Vnode, Source);\n-         Set_Target_Type (Vnode, Target);\n+--      if GNAT_Mode and then Is_Access_Type (Target) then\n+--         if not In_Same_Source_Unit (Target, N) then\n+--            Error_Msg_NE\n+--              (\"unchecked conversion not in same unit as&\", N, Target);\n+--         end if;\n+--      end if;\n+\n+      --  Generate N_Validate_Unchecked_Conversion node for back end in\n+      --  case the back end needs to perform special validation checks.\n+\n+      --  Shouldn't this be in exp_ch13, since the check only gets done\n+      --  if we have full expansion and the back end is called ???\n+\n+      Vnode :=\n+        Make_Validate_Unchecked_Conversion (Sloc (N));\n+      Set_Source_Type (Vnode, Source);\n+      Set_Target_Type (Vnode, Target);\n+\n+      --  If the unchecked conversion node is in a list, just insert before\n+      --  it. If not we have some strange case, not worth bothering about.\n+\n+      if Is_List_Member (N) then\n          Insert_After (N, Vnode);\n       end if;\n    end Validate_Unchecked_Conversion;"}, {"sha": "fc3b12e70dd23c9ec5bbd84c7aeaba7aeab679d5", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 45, "deletions": 8, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a6a52dcb9b0a1f64fcaee58936fc84d416c7651/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a6a52dcb9b0a1f64fcaee58936fc84d416c7651/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=8a6a52dcb9b0a1f64fcaee58936fc84d416c7651", "patch": "@@ -959,9 +959,16 @@ package body Sem_Ch3 is\n       --  and thus unconstrained. Regular components must be constrained.\n \n       if Is_Indefinite_Subtype (T) and then Chars (Id) /= Name_uParent then\n-         Error_Msg_N\n-           (\"unconstrained subtype in component declaration\",\n-            Subtype_Indication (Component_Definition (N)));\n+         if Is_Class_Wide_Type (T) then\n+            Error_Msg_N\n+               (\"class-wide subtype with unknown discriminants\" &\n+                 \" in component declaration\",\n+                 Subtype_Indication (Component_Definition (N)));\n+         else\n+            Error_Msg_N\n+              (\"unconstrained subtype in component declaration\",\n+               Subtype_Indication (Component_Definition (N)));\n+         end if;\n \n       --  Components cannot be abstract, except for the special case of\n       --  the _Parent field (case of extending an abstract tagged type)\n@@ -2620,6 +2627,12 @@ package body Sem_Ch3 is\n                   Add_RACW_Features (Def_Id);\n                end if;\n \n+               --  Set no strict aliasing flag if config pragma seen\n+\n+               if Opt.No_Strict_Aliasing then\n+                  Set_No_Strict_Aliasing (Base_Type (Def_Id));\n+               end if;\n+\n             when N_Array_Type_Definition =>\n                Array_Type_Declaration (T, Def);\n \n@@ -4672,8 +4685,16 @@ package body Sem_Ch3 is\n       Indic := Subtype_Indication (Type_Def);\n       Constraint_Present := (Nkind (Indic) = N_Subtype_Indication);\n \n+      --  Check that the type has visible discriminants. The type may be\n+      --  a private type with unknown discriminants whose full view has\n+      --  discriminants which are invisible.\n+\n       if Constraint_Present then\n-         if not Has_Discriminants (Parent_Base) then\n+         if not Has_Discriminants (Parent_Base)\n+           or else\n+             (Has_Unknown_Discriminants (Parent_Base)\n+                and then Is_Private_Type (Parent_Base))\n+         then\n             Error_Msg_N\n               (\"invalid constraint: type has no discriminant\",\n                  Constraint (Indic));\n@@ -5002,9 +5023,17 @@ package body Sem_Ch3 is\n             Set_Has_Unknown_Discriminants\n               (Derived_Type, Has_Unknown_Discriminants (Parent_Type)\n                              or else Unknown_Discriminants_Present (N));\n-         else\n-            Set_Has_Unknown_Discriminants\n-              (Derived_Type, Has_Unknown_Discriminants (Parent_Type));\n+\n+         --  The partial view of the parent may have unknown discriminants,\n+         --  but if the full view has discriminants and the parent type is\n+         --  in scope they must be inherited.\n+\n+         elsif Has_Unknown_Discriminants (Parent_Type)\n+           and then\n+            (not Has_Discriminants (Parent_Type)\n+              or else not In_Open_Scopes (Scope (Parent_Type)))\n+         then\n+            Set_Has_Unknown_Discriminants (Derived_Type);\n          end if;\n \n          if not Has_Unknown_Discriminants (Derived_Type)\n@@ -7636,7 +7665,15 @@ package body Sem_Ch3 is\n          T := Designated_Type (T);\n       end if;\n \n-      if not Has_Discriminants (T) then\n+      --  Check that the type has visible discriminants. The type may be\n+      --  a private type with unknown discriminants whose full view has\n+      --  discriminants which are invisible.\n+\n+      if not Has_Discriminants (T)\n+        or else\n+          (Has_Unknown_Discriminants (T)\n+             and then Is_Private_Type (T))\n+      then\n          Error_Msg_N (\"invalid constraint: type has no discriminant\", C);\n          Fixup_Bad_Constraint;\n          return;"}, {"sha": "c83e2360fa701749a9cffb25c1fbf7c5e0f61cc5", "filename": "gcc/ada/sem_ch7.adb", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a6a52dcb9b0a1f64fcaee58936fc84d416c7651/gcc%2Fada%2Fsem_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a6a52dcb9b0a1f64fcaee58936fc84d416c7651/gcc%2Fada%2Fsem_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch7.adb?ref=8a6a52dcb9b0a1f64fcaee58936fc84d416c7651", "patch": "@@ -48,6 +48,7 @@ with Sem_Cat;  use Sem_Cat;\n with Sem_Ch3;  use Sem_Ch3;\n with Sem_Ch6;  use Sem_Ch6;\n with Sem_Ch8;  use Sem_Ch8;\n+with Sem_Ch10; use Sem_Ch10;\n with Sem_Ch12; use Sem_Ch12;\n with Sem_Util; use Sem_Util;\n with Sem_Warn; use Sem_Warn;\n@@ -299,6 +300,7 @@ package body Sem_Ch7 is\n \n       Install_Visible_Declarations (Spec_Id);\n       Install_Private_Declarations (Spec_Id);\n+      Install_Private_With_Clauses (Spec_Id);\n       Install_Composite_Operations (Spec_Id);\n \n       if Ekind (Spec_Id) = E_Generic_Package then\n@@ -856,12 +858,17 @@ package body Sem_Ch7 is\n                Public_Child := True;\n                Par := Scope (Par);\n                Install_Private_Declarations (Par);\n+               Install_Private_With_Clauses (Par);\n                Pack_Decl := Unit_Declaration_Node (Par);\n                Set_Use (Private_Declarations (Specification (Pack_Decl)));\n             end loop;\n          end;\n       end if;\n \n+      if Is_Compilation_Unit (Id) then\n+         Install_Private_With_Clauses (Id);\n+      end if;\n+\n       --  Analyze private part if present. The flag In_Private_Part is\n       --  reset in End_Package_Scope.\n \n@@ -1593,7 +1600,8 @@ package body Sem_Ch7 is\n             end if;\n \n             Set_First_Entity (Priv, First_Entity (Full));\n-            Set_Last_Entity (Priv, Last_Entity (Full));\n+            Set_Last_Entity  (Priv, Last_Entity (Full));\n+            Set_Has_Discriminants (Priv, Has_Discriminants (Full));\n          end if;\n       end Preserve_Full_Attributes;\n "}, {"sha": "f0aad749e98b6f295081a83684feb511450631f5", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 31, "deletions": 2, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a6a52dcb9b0a1f64fcaee58936fc84d416c7651/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a6a52dcb9b0a1f64fcaee58936fc84d416c7651/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=8a6a52dcb9b0a1f64fcaee58936fc84d416c7651", "patch": "@@ -2333,7 +2333,6 @@ package body Sem_Prag is\n                        and then Paren_Count (Arg_Parameter_Types) = 0\n                      then\n                         Ptype := First (Expressions (Arg_Parameter_Types));\n-\n                         while Present (Ptype) or else Present (Formal) loop\n                            if No (Ptype)\n                              or else No (Formal)\n@@ -3431,7 +3430,6 @@ package body Sem_Prag is\n          if not Is_Check_Name (Chars (Expression (Arg1))) then\n             Error_Pragma_Arg\n               (\"argument of pragma% is not valid check name\", Arg1);\n-\n          else\n             C := Get_Check_Id (Chars (Expression (Arg1)));\n          end if;\n@@ -7484,6 +7482,36 @@ package body Sem_Prag is\n             end if;\n          end No_Return;\n \n+         ------------------------\n+         -- No_Strict_Aliasing --\n+         ------------------------\n+\n+         when Pragma_No_Strict_Aliasing => No_Strict_Alias : declare\n+            E_Id : Entity_Id;\n+\n+         begin\n+            GNAT_Pragma;\n+            Check_At_Most_N_Arguments (1);\n+\n+            if Arg_Count = 0 then\n+               Check_Valid_Configuration_Pragma;\n+               Opt.No_Strict_Aliasing := True;\n+\n+            else\n+               Check_Optional_Identifier (Arg2, Name_Entity);\n+               Check_Arg_Is_Local_Name (Arg1);\n+               E_Id := Entity (Expression (Arg1));\n+\n+               if E_Id = Any_Type then\n+                  return;\n+               elsif No (E_Id) or else not Is_Access_Type (E_Id) then\n+                  Error_Pragma_Arg (\"pragma% requires access type\", Arg1);\n+               end if;\n+\n+               Set_No_Strict_Aliasing (Base_Type (E_Id));\n+            end if;\n+         end No_Strict_Alias;\n+\n          -----------------\n          -- Obsolescent --\n          -----------------\n@@ -9899,6 +9927,7 @@ package body Sem_Prag is\n       Pragma_Memory_Size                  => -1,\n       Pragma_No_Return                    =>  0,\n       Pragma_No_Run_Time                  => -1,\n+      Pragma_No_Strict_Aliasing           => -1,\n       Pragma_Normalize_Scalars            => -1,\n       Pragma_Obsolescent                  =>  0,\n       Pragma_Optimize                     => -1,"}, {"sha": "e090cb54148e21664af05c3ab68bb9a8cac3981f", "filename": "gcc/ada/sinfo.ads", "status": "modified", "additions": 10, "deletions": 9, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a6a52dcb9b0a1f64fcaee58936fc84d416c7651/gcc%2Fada%2Fsinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a6a52dcb9b0a1f64fcaee58936fc84d416c7651/gcc%2Fada%2Fsinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.ads?ref=8a6a52dcb9b0a1f64fcaee58936fc84d416c7651", "patch": "@@ -6356,19 +6356,20 @@ package Sinfo is\n       --  The front end also deals with specific cases that are not allowed\n       --  e.g. involving unconstrained array types.\n \n-      --  For the case of the standard gigi backend, this means that all\n-      --  checks are done in the front-end.\n+      --  However, some checks, e.g. the check for suspicious aliasing\n+      --  when converting to a pointer type, can more conveniently be\n+      --  performed in the back end where alias sets are known.\n \n-      --  However, in the case of specialized back-ends, notably the JVM\n-      --  backend for JGNAT, additional requirements and restrictions apply\n+      --  In addition, for specialized back ends, notably the JVM-based\n+      --  back end for JGNAT, additional requirements and restrictions apply\n       --  to unchecked conversion, and these are most conveniently performed\n       --  in the specialized back-end.\n \n-      --  To accommodate this requirement, for such back ends, the following\n-      --  special node is generated recording an unchecked conversion that\n-      --  needs to be validated. The back end should post an appropriate\n-      --  error message if the unchecked conversion is invalid or warrants\n-      --  a special warning message.\n+      --  To accommodate this requirement, the following special node is\n+      --  generated recording an unchecked conversion that needs to be\n+      --  validated. The back end should post an appropriate error message\n+      --  error message if the unchecked conversion is invalid or a warning\n+      --  message if a special warning is warranted.\n \n       --  Source_Type and Target_Type point to the entities for the two\n       --  types involved in the unchecked conversion instantiation that"}, {"sha": "370429a010991136c6fb6f08b19af769c4330e0f", "filename": "gcc/ada/sinput-c.adb", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a6a52dcb9b0a1f64fcaee58936fc84d416c7651/gcc%2Fada%2Fsinput-c.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a6a52dcb9b0a1f64fcaee58936fc84d416c7651/gcc%2Fada%2Fsinput-c.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinput-c.adb?ref=8a6a52dcb9b0a1f64fcaee58936fc84d416c7651", "patch": "@@ -2,11 +2,11 @@\n --                                                                          --\n --                         GNAT COMPILER COMPONENTS                         --\n --                                                                          --\n---                             S I N P U T . P                              --\n+--                             S I N P U T . C                              --\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2003 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2004 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -129,9 +129,15 @@ package body Sinput.C is\n          declare\n             pragma Suppress (All_Checks);\n \n+            pragma Warnings (Off);\n+            --  The following unchecked conversion is aliased safe, since it\n+            --  is not used to create improperly aliased pointer values.\n+\n             function To_Source_Buffer_Ptr is new\n               Ada.Unchecked_Conversion (Address, Source_Buffer_Ptr);\n \n+            pragma Warnings (On);\n+\n          begin\n             Src := To_Source_Buffer_Ptr (Actual_Ptr (0)'Address);\n          end;"}, {"sha": "68da3074d25d1ecdc9830fa9b8e45c81f94b8e17", "filename": "gcc/ada/sinput-l.adb", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a6a52dcb9b0a1f64fcaee58936fc84d416c7651/gcc%2Fada%2Fsinput-l.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a6a52dcb9b0a1f64fcaee58936fc84d416c7651/gcc%2Fada%2Fsinput-l.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinput-l.adb?ref=8a6a52dcb9b0a1f64fcaee58936fc84d416c7651", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2003 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2004 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -244,9 +244,15 @@ package body Sinput.L is\n       declare\n          pragma Suppress (All_Checks);\n \n+         pragma Warnings (Off);\n+         --  This unchecked conversion is aliasing safe, since it is never\n+         --  used to create improperly aliased pointer values.\n+\n          function To_Source_Buffer_Ptr is new\n            Unchecked_Conversion (Address, Source_Buffer_Ptr);\n \n+         pragma Warnings (On);\n+\n       begin\n          Source_File.Table (Xnew).Source_Text :=\n            To_Source_Buffer_Ptr\n@@ -539,9 +545,16 @@ package body Sinput.L is\n                      declare\n                         pragma Suppress (All_Checks);\n \n+                        pragma Warnings (Off);\n+                        --  This unchecked conversion is aliasing safe, since\n+                        --  it is never used to create improperly aliased\n+                        --  pointer values.\n+\n                         function To_Source_Buffer_Ptr is new\n                           Unchecked_Conversion (Address, Source_Buffer_Ptr);\n \n+                        pragma Warnings (On);\n+\n                      begin\n                         Src := To_Source_Buffer_Ptr (Actual_Ptr (0)'Address);\n "}, {"sha": "f7fb3ced3e100d29597877d72d18f23d972277fd", "filename": "gcc/ada/sinput.adb", "status": "modified", "additions": 25, "deletions": 1, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a6a52dcb9b0a1f64fcaee58936fc84d416c7651/gcc%2Fada%2Fsinput.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a6a52dcb9b0a1f64fcaee58936fc84d416c7651/gcc%2Fada%2Fsinput.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinput.adb?ref=8a6a52dcb9b0a1f64fcaee58936fc84d416c7651", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2003 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2004 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -56,6 +56,10 @@ package body Sinput is\n    --  Routines to support conversion between types Lines_Table_Ptr,\n    --  Logical_Lines_Table_Ptr and System.Address.\n \n+   pragma Warnings (Off);\n+   --  These unchecked conversions are aliasing safe, since they are never\n+   --  used to construct improperly aliased pointer values.\n+\n    function To_Address is\n      new Unchecked_Conversion (Lines_Table_Ptr, Address);\n \n@@ -68,6 +72,8 @@ package body Sinput is\n    function To_Pointer is\n      new Unchecked_Conversion (Address, Logical_Lines_Table_Ptr);\n \n+   pragma Warnings (On);\n+\n    ---------------------------\n    -- Add_Line_Tables_Entry --\n    ---------------------------\n@@ -760,9 +766,15 @@ package body Sinput is\n                procedure Free_Ptr is new Unchecked_Deallocation\n                  (Big_Source_Buffer, Source_Buffer_Ptr);\n \n+               pragma Warnings (Off);\n+               --  This unchecked conversion is aliasing safe, since it is not\n+               --  used to create improperly aliased pointer values.\n+\n                function To_Source_Buffer_Ptr is new\n                  Unchecked_Conversion (Address, Source_Buffer_Ptr);\n \n+               pragma Warnings (On);\n+\n                Tmp1 : Source_Buffer_Ptr;\n \n             begin\n@@ -841,9 +853,15 @@ package body Sinput is\n                   declare\n                      pragma Suppress (All_Checks);\n \n+                     pragma Warnings (Off);\n+                     --  This unchecked conversion is aliasing safe since it\n+                     --  not used to create improperly aliased pointer values.\n+\n                      function To_Source_Buffer_Ptr is new\n                        Unchecked_Conversion (Address, Source_Buffer_Ptr);\n \n+                     pragma Warnings (On);\n+\n                   begin\n                      S.Source_Text :=\n                        To_Source_Buffer_Ptr\n@@ -881,9 +899,15 @@ package body Sinput is\n \n                   pragma Suppress (All_Checks);\n \n+                  pragma Warnings (Off);\n+                  --  This unchecked conversion is aliasing safe, since it is\n+                  --  never used to create improperly aliased pointer values.\n+\n                   function To_Source_Buffer_Ptr is new\n                     Unchecked_Conversion (Address, Source_Buffer_Ptr);\n \n+                  pragma Warnings (On);\n+\n                begin\n                   T := new B;\n "}, {"sha": "70b9608a5387c66f9c2e03659fe6343e955d05fb", "filename": "gcc/ada/snames.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a6a52dcb9b0a1f64fcaee58936fc84d416c7651/gcc%2Fada%2Fsnames.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a6a52dcb9b0a1f64fcaee58936fc84d416c7651/gcc%2Fada%2Fsnames.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsnames.adb?ref=8a6a52dcb9b0a1f64fcaee58936fc84d416c7651", "patch": "@@ -169,6 +169,7 @@ package body Snames is\n      \"locking_policy#\" &\n      \"long_float#\" &\n      \"no_run_time#\" &\n+     \"no_strict_aliasing#\" &\n      \"normalize_scalars#\" &\n      \"polling#\" &\n      \"persistent_data#\" &"}, {"sha": "2985ddbfd227544474a410af6397810febee468c", "filename": "gcc/ada/snames.ads", "status": "modified", "additions": 504, "deletions": 502, "changes": 1006, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a6a52dcb9b0a1f64fcaee58936fc84d416c7651/gcc%2Fada%2Fsnames.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a6a52dcb9b0a1f64fcaee58936fc84d416c7651/gcc%2Fada%2Fsnames.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsnames.ads?ref=8a6a52dcb9b0a1f64fcaee58936fc84d416c7651", "patch": "@@ -315,115 +315,116 @@ package Snames is\n    Name_Locking_Policy                 : constant Name_Id := N + 109;\n    Name_Long_Float                     : constant Name_Id := N + 110; -- VMS\n    Name_No_Run_Time                    : constant Name_Id := N + 111; -- GNAT\n-   Name_Normalize_Scalars              : constant Name_Id := N + 112;\n-   Name_Polling                        : constant Name_Id := N + 113; -- GNAT\n-   Name_Persistent_Data                : constant Name_Id := N + 114; -- GNAT\n-   Name_Persistent_Object              : constant Name_Id := N + 115; -- GNAT\n-   Name_Profile                        : constant Name_Id := N + 116; -- Ada0Y\n-   Name_Propagate_Exceptions           : constant Name_Id := N + 117; -- GNAT\n-   Name_Queuing_Policy                 : constant Name_Id := N + 118;\n-   Name_Ravenscar                      : constant Name_Id := N + 119;\n-   Name_Restricted_Run_Time            : constant Name_Id := N + 120;\n-   Name_Restrictions                   : constant Name_Id := N + 121;\n-   Name_Restriction_Warnings           : constant Name_Id := N + 122; -- GNAT\n-   Name_Reviewable                     : constant Name_Id := N + 123;\n-   Name_Source_File_Name               : constant Name_Id := N + 124; -- GNAT\n-   Name_Source_File_Name_Project       : constant Name_Id := N + 125; -- GNAT\n-   Name_Style_Checks                   : constant Name_Id := N + 126; -- GNAT\n-   Name_Suppress                       : constant Name_Id := N + 127;\n-   Name_Suppress_Exception_Locations   : constant Name_Id := N + 128; -- GNAT\n-   Name_Task_Dispatching_Policy        : constant Name_Id := N + 129;\n-   Name_Universal_Data                 : constant Name_Id := N + 130; -- AAMP\n-   Name_Unsuppress                     : constant Name_Id := N + 131; -- GNAT\n-   Name_Use_VADS_Size                  : constant Name_Id := N + 132; -- GNAT\n-   Name_Validity_Checks                : constant Name_Id := N + 133; -- GNAT\n-   Name_Warnings                       : constant Name_Id := N + 134; -- GNAT\n-   Last_Configuration_Pragma_Name      : constant Name_Id := N + 134;\n+   Name_No_Strict_Aliasing             : constant Name_Id := N + 112; -- GNAT\n+   Name_Normalize_Scalars              : constant Name_Id := N + 113;\n+   Name_Polling                        : constant Name_Id := N + 114; -- GNAT\n+   Name_Persistent_Data                : constant Name_Id := N + 115; -- GNAT\n+   Name_Persistent_Object              : constant Name_Id := N + 116; -- GNAT\n+   Name_Profile                        : constant Name_Id := N + 117; -- Ada0Y\n+   Name_Propagate_Exceptions           : constant Name_Id := N + 118; -- GNAT\n+   Name_Queuing_Policy                 : constant Name_Id := N + 119;\n+   Name_Ravenscar                      : constant Name_Id := N + 120;\n+   Name_Restricted_Run_Time            : constant Name_Id := N + 121;\n+   Name_Restrictions                   : constant Name_Id := N + 122;\n+   Name_Restriction_Warnings           : constant Name_Id := N + 123; -- GNAT\n+   Name_Reviewable                     : constant Name_Id := N + 124;\n+   Name_Source_File_Name               : constant Name_Id := N + 125; -- GNAT\n+   Name_Source_File_Name_Project       : constant Name_Id := N + 126; -- GNAT\n+   Name_Style_Checks                   : constant Name_Id := N + 127; -- GNAT\n+   Name_Suppress                       : constant Name_Id := N + 128;\n+   Name_Suppress_Exception_Locations   : constant Name_Id := N + 129; -- GNAT\n+   Name_Task_Dispatching_Policy        : constant Name_Id := N + 130;\n+   Name_Universal_Data                 : constant Name_Id := N + 131; -- AAMP\n+   Name_Unsuppress                     : constant Name_Id := N + 132; -- GNAT\n+   Name_Use_VADS_Size                  : constant Name_Id := N + 133; -- GNAT\n+   Name_Validity_Checks                : constant Name_Id := N + 134; -- GNAT\n+   Name_Warnings                       : constant Name_Id := N + 135; -- GNAT\n+   Last_Configuration_Pragma_Name      : constant Name_Id := N + 135;\n \n    --  Remaining pragma names\n \n-   Name_Abort_Defer                    : constant Name_Id := N + 135; -- GNAT\n-   Name_All_Calls_Remote               : constant Name_Id := N + 136;\n-   Name_Annotate                       : constant Name_Id := N + 137; -- GNAT\n+   Name_Abort_Defer                    : constant Name_Id := N + 136; -- GNAT\n+   Name_All_Calls_Remote               : constant Name_Id := N + 137;\n+   Name_Annotate                       : constant Name_Id := N + 138; -- GNAT\n \n    --  Note: AST_Entry is not in this list because its name matches the\n    --  name of the corresponding attribute. However, it is included in the\n    --  definition of the type Attribute_Id, and the functions Get_Pragma_Id\n    --  and Check_Pragma_Id correctly recognize and process Name_AST_Entry.\n    --  AST_Entry is a VMS specific pragma.\n \n-   Name_Assert                         : constant Name_Id := N + 138; -- GNAT\n-   Name_Asynchronous                   : constant Name_Id := N + 139;\n-   Name_Atomic                         : constant Name_Id := N + 140;\n-   Name_Atomic_Components              : constant Name_Id := N + 141;\n-   Name_Attach_Handler                 : constant Name_Id := N + 142;\n-   Name_Comment                        : constant Name_Id := N + 143; -- GNAT\n-   Name_Common_Object                  : constant Name_Id := N + 144; -- GNAT\n-   Name_Complex_Representation         : constant Name_Id := N + 145; -- GNAT\n-   Name_Controlled                     : constant Name_Id := N + 146;\n-   Name_Convention                     : constant Name_Id := N + 147;\n-   Name_CPP_Class                      : constant Name_Id := N + 148; -- GNAT\n-   Name_CPP_Constructor                : constant Name_Id := N + 149; -- GNAT\n-   Name_CPP_Virtual                    : constant Name_Id := N + 150; -- GNAT\n-   Name_CPP_Vtable                     : constant Name_Id := N + 151; -- GNAT\n-   Name_Debug                          : constant Name_Id := N + 152; -- GNAT\n-   Name_Elaborate                      : constant Name_Id := N + 153; -- Ada 83\n-   Name_Elaborate_All                  : constant Name_Id := N + 154;\n-   Name_Elaborate_Body                 : constant Name_Id := N + 155;\n-   Name_Export                         : constant Name_Id := N + 156;\n-   Name_Export_Exception               : constant Name_Id := N + 157; -- VMS\n-   Name_Export_Function                : constant Name_Id := N + 158; -- GNAT\n-   Name_Export_Object                  : constant Name_Id := N + 159; -- GNAT\n-   Name_Export_Procedure               : constant Name_Id := N + 160; -- GNAT\n-   Name_Export_Value                   : constant Name_Id := N + 161; -- GNAT\n-   Name_Export_Valued_Procedure        : constant Name_Id := N + 162; -- GNAT\n-   Name_External                       : constant Name_Id := N + 163; -- GNAT\n-   Name_Finalize_Storage_Only          : constant Name_Id := N + 164; -- GNAT\n-   Name_Ident                          : constant Name_Id := N + 165; -- VMS\n-   Name_Import                         : constant Name_Id := N + 166;\n-   Name_Import_Exception               : constant Name_Id := N + 167; -- VMS\n-   Name_Import_Function                : constant Name_Id := N + 168; -- GNAT\n-   Name_Import_Object                  : constant Name_Id := N + 169; -- GNAT\n-   Name_Import_Procedure               : constant Name_Id := N + 170; -- GNAT\n-   Name_Import_Valued_Procedure        : constant Name_Id := N + 171; -- GNAT\n-   Name_Inline                         : constant Name_Id := N + 172;\n-   Name_Inline_Always                  : constant Name_Id := N + 173; -- GNAT\n-   Name_Inline_Generic                 : constant Name_Id := N + 174; -- GNAT\n-   Name_Inspection_Point               : constant Name_Id := N + 175;\n-   Name_Interface                      : constant Name_Id := N + 176; -- Ada 83\n-   Name_Interface_Name                 : constant Name_Id := N + 177; -- GNAT\n-   Name_Interrupt_Handler              : constant Name_Id := N + 178;\n-   Name_Interrupt_Priority             : constant Name_Id := N + 179;\n-   Name_Java_Constructor               : constant Name_Id := N + 180; -- GNAT\n-   Name_Java_Interface                 : constant Name_Id := N + 181; -- GNAT\n-   Name_Keep_Names                     : constant Name_Id := N + 182; -- GNAT\n-   Name_Link_With                      : constant Name_Id := N + 183; -- GNAT\n-   Name_Linker_Alias                   : constant Name_Id := N + 184; -- GNAT\n-   Name_Linker_Options                 : constant Name_Id := N + 185;\n-   Name_Linker_Section                 : constant Name_Id := N + 186; -- GNAT\n-   Name_List                           : constant Name_Id := N + 187;\n-   Name_Machine_Attribute              : constant Name_Id := N + 188; -- GNAT\n-   Name_Main                           : constant Name_Id := N + 189; -- GNAT\n-   Name_Main_Storage                   : constant Name_Id := N + 190; -- GNAT\n-   Name_Memory_Size                    : constant Name_Id := N + 191; -- Ada 83\n-   Name_No_Return                      : constant Name_Id := N + 192; -- GNAT\n-   Name_Obsolescent                    : constant Name_Id := N + 193; -- GNAT\n-   Name_Optimize                       : constant Name_Id := N + 194;\n-   Name_Optional_Overriding            : constant Name_Id := N + 195;\n-   Name_Overriding                     : constant Name_Id := N + 196;\n-   Name_Pack                           : constant Name_Id := N + 197;\n-   Name_Page                           : constant Name_Id := N + 198;\n-   Name_Passive                        : constant Name_Id := N + 199; -- GNAT\n-   Name_Preelaborate                   : constant Name_Id := N + 200;\n-   Name_Priority                       : constant Name_Id := N + 201;\n-   Name_Psect_Object                   : constant Name_Id := N + 202; -- VMS\n-   Name_Pure                           : constant Name_Id := N + 203;\n-   Name_Pure_Function                  : constant Name_Id := N + 204; -- GNAT\n-   Name_Remote_Call_Interface          : constant Name_Id := N + 205;\n-   Name_Remote_Types                   : constant Name_Id := N + 206;\n-   Name_Share_Generic                  : constant Name_Id := N + 207; -- GNAT\n-   Name_Shared                         : constant Name_Id := N + 208; -- Ada 83\n-   Name_Shared_Passive                 : constant Name_Id := N + 209;\n+   Name_Assert                         : constant Name_Id := N + 139; -- GNAT\n+   Name_Asynchronous                   : constant Name_Id := N + 140;\n+   Name_Atomic                         : constant Name_Id := N + 141;\n+   Name_Atomic_Components              : constant Name_Id := N + 142;\n+   Name_Attach_Handler                 : constant Name_Id := N + 143;\n+   Name_Comment                        : constant Name_Id := N + 144; -- GNAT\n+   Name_Common_Object                  : constant Name_Id := N + 145; -- GNAT\n+   Name_Complex_Representation         : constant Name_Id := N + 146; -- GNAT\n+   Name_Controlled                     : constant Name_Id := N + 147;\n+   Name_Convention                     : constant Name_Id := N + 148;\n+   Name_CPP_Class                      : constant Name_Id := N + 149; -- GNAT\n+   Name_CPP_Constructor                : constant Name_Id := N + 150; -- GNAT\n+   Name_CPP_Virtual                    : constant Name_Id := N + 151; -- GNAT\n+   Name_CPP_Vtable                     : constant Name_Id := N + 152; -- GNAT\n+   Name_Debug                          : constant Name_Id := N + 153; -- GNAT\n+   Name_Elaborate                      : constant Name_Id := N + 154; -- Ada 83\n+   Name_Elaborate_All                  : constant Name_Id := N + 155;\n+   Name_Elaborate_Body                 : constant Name_Id := N + 156;\n+   Name_Export                         : constant Name_Id := N + 157;\n+   Name_Export_Exception               : constant Name_Id := N + 158; -- VMS\n+   Name_Export_Function                : constant Name_Id := N + 159; -- GNAT\n+   Name_Export_Object                  : constant Name_Id := N + 160; -- GNAT\n+   Name_Export_Procedure               : constant Name_Id := N + 161; -- GNAT\n+   Name_Export_Value                   : constant Name_Id := N + 162; -- GNAT\n+   Name_Export_Valued_Procedure        : constant Name_Id := N + 163; -- GNAT\n+   Name_External                       : constant Name_Id := N + 164; -- GNAT\n+   Name_Finalize_Storage_Only          : constant Name_Id := N + 165; -- GNAT\n+   Name_Ident                          : constant Name_Id := N + 166; -- VMS\n+   Name_Import                         : constant Name_Id := N + 167;\n+   Name_Import_Exception               : constant Name_Id := N + 168; -- VMS\n+   Name_Import_Function                : constant Name_Id := N + 169; -- GNAT\n+   Name_Import_Object                  : constant Name_Id := N + 170; -- GNAT\n+   Name_Import_Procedure               : constant Name_Id := N + 171; -- GNAT\n+   Name_Import_Valued_Procedure        : constant Name_Id := N + 172; -- GNAT\n+   Name_Inline                         : constant Name_Id := N + 173;\n+   Name_Inline_Always                  : constant Name_Id := N + 174; -- GNAT\n+   Name_Inline_Generic                 : constant Name_Id := N + 175; -- GNAT\n+   Name_Inspection_Point               : constant Name_Id := N + 176;\n+   Name_Interface                      : constant Name_Id := N + 177; -- Ada 83\n+   Name_Interface_Name                 : constant Name_Id := N + 178; -- GNAT\n+   Name_Interrupt_Handler              : constant Name_Id := N + 179;\n+   Name_Interrupt_Priority             : constant Name_Id := N + 180;\n+   Name_Java_Constructor               : constant Name_Id := N + 181; -- GNAT\n+   Name_Java_Interface                 : constant Name_Id := N + 182; -- GNAT\n+   Name_Keep_Names                     : constant Name_Id := N + 183; -- GNAT\n+   Name_Link_With                      : constant Name_Id := N + 184; -- GNAT\n+   Name_Linker_Alias                   : constant Name_Id := N + 185; -- GNAT\n+   Name_Linker_Options                 : constant Name_Id := N + 186;\n+   Name_Linker_Section                 : constant Name_Id := N + 187; -- GNAT\n+   Name_List                           : constant Name_Id := N + 188;\n+   Name_Machine_Attribute              : constant Name_Id := N + 189; -- GNAT\n+   Name_Main                           : constant Name_Id := N + 190; -- GNAT\n+   Name_Main_Storage                   : constant Name_Id := N + 191; -- GNAT\n+   Name_Memory_Size                    : constant Name_Id := N + 192; -- Ada 83\n+   Name_No_Return                      : constant Name_Id := N + 193; -- GNAT\n+   Name_Obsolescent                    : constant Name_Id := N + 194; -- GNAT\n+   Name_Optimize                       : constant Name_Id := N + 195;\n+   Name_Optional_Overriding            : constant Name_Id := N + 196;\n+   Name_Overriding                     : constant Name_Id := N + 197;\n+   Name_Pack                           : constant Name_Id := N + 198;\n+   Name_Page                           : constant Name_Id := N + 199;\n+   Name_Passive                        : constant Name_Id := N + 200; -- GNAT\n+   Name_Preelaborate                   : constant Name_Id := N + 201;\n+   Name_Priority                       : constant Name_Id := N + 202;\n+   Name_Psect_Object                   : constant Name_Id := N + 203; -- VMS\n+   Name_Pure                           : constant Name_Id := N + 204;\n+   Name_Pure_Function                  : constant Name_Id := N + 205; -- GNAT\n+   Name_Remote_Call_Interface          : constant Name_Id := N + 206;\n+   Name_Remote_Types                   : constant Name_Id := N + 207;\n+   Name_Share_Generic                  : constant Name_Id := N + 208; -- GNAT\n+   Name_Shared                         : constant Name_Id := N + 209; -- Ada 83\n+   Name_Shared_Passive                 : constant Name_Id := N + 210;\n \n    --  Note: Storage_Size is not in this list because its name matches the\n    --  name of the corresponding attribute. However, it is included in the\n@@ -433,27 +434,27 @@ package Snames is\n    --  Note: Storage_Unit is also omitted from the list because of a clash\n    --  with an attribute name, and is treated similarly.\n \n-   Name_Source_Reference               : constant Name_Id := N + 210; -- GNAT\n-   Name_Stream_Convert                 : constant Name_Id := N + 211; -- GNAT\n-   Name_Subtitle                       : constant Name_Id := N + 212; -- GNAT\n-   Name_Suppress_All                   : constant Name_Id := N + 213; -- GNAT\n-   Name_Suppress_Debug_Info            : constant Name_Id := N + 214; -- GNAT\n-   Name_Suppress_Initialization        : constant Name_Id := N + 215; -- GNAT\n-   Name_System_Name                    : constant Name_Id := N + 216; -- Ada 83\n-   Name_Task_Info                      : constant Name_Id := N + 217; -- GNAT\n-   Name_Task_Name                      : constant Name_Id := N + 218; -- GNAT\n-   Name_Task_Storage                   : constant Name_Id := N + 219; -- VMS\n-   Name_Thread_Body                    : constant Name_Id := N + 220; -- GNAT\n-   Name_Time_Slice                     : constant Name_Id := N + 221; -- GNAT\n-   Name_Title                          : constant Name_Id := N + 222; -- GNAT\n-   Name_Unchecked_Union                : constant Name_Id := N + 223; -- GNAT\n-   Name_Unimplemented_Unit             : constant Name_Id := N + 224; -- GNAT\n-   Name_Unreferenced                   : constant Name_Id := N + 225; -- GNAT\n-   Name_Unreserve_All_Interrupts       : constant Name_Id := N + 226; -- GNAT\n-   Name_Volatile                       : constant Name_Id := N + 227;\n-   Name_Volatile_Components            : constant Name_Id := N + 228;\n-   Name_Weak_External                  : constant Name_Id := N + 229; -- GNAT\n-   Last_Pragma_Name                    : constant Name_Id := N + 229;\n+   Name_Source_Reference               : constant Name_Id := N + 211; -- GNAT\n+   Name_Stream_Convert                 : constant Name_Id := N + 212; -- GNAT\n+   Name_Subtitle                       : constant Name_Id := N + 213; -- GNAT\n+   Name_Suppress_All                   : constant Name_Id := N + 214; -- GNAT\n+   Name_Suppress_Debug_Info            : constant Name_Id := N + 215; -- GNAT\n+   Name_Suppress_Initialization        : constant Name_Id := N + 216; -- GNAT\n+   Name_System_Name                    : constant Name_Id := N + 217; -- Ada 83\n+   Name_Task_Info                      : constant Name_Id := N + 218; -- GNAT\n+   Name_Task_Name                      : constant Name_Id := N + 219; -- GNAT\n+   Name_Task_Storage                   : constant Name_Id := N + 220; -- VMS\n+   Name_Thread_Body                    : constant Name_Id := N + 221; -- GNAT\n+   Name_Time_Slice                     : constant Name_Id := N + 222; -- GNAT\n+   Name_Title                          : constant Name_Id := N + 223; -- GNAT\n+   Name_Unchecked_Union                : constant Name_Id := N + 224; -- GNAT\n+   Name_Unimplemented_Unit             : constant Name_Id := N + 225; -- GNAT\n+   Name_Unreferenced                   : constant Name_Id := N + 226; -- GNAT\n+   Name_Unreserve_All_Interrupts       : constant Name_Id := N + 227; -- GNAT\n+   Name_Volatile                       : constant Name_Id := N + 228;\n+   Name_Volatile_Components            : constant Name_Id := N + 229;\n+   Name_Weak_External                  : constant Name_Id := N + 230; -- GNAT\n+   Last_Pragma_Name                    : constant Name_Id := N + 230;\n \n    --  Language convention names for pragma Convention/Export/Import/Interface\n    --  Note that Name_C is not included in this list, since it was already\n@@ -464,98 +465,98 @@ package Snames is\n    --  Entry and Protected, this is because these conventions cannot be\n    --  specified by a pragma.\n \n-   First_Convention_Name               : constant Name_Id := N + 230;\n-   Name_Ada                            : constant Name_Id := N + 230;\n-   Name_Assembler                      : constant Name_Id := N + 231;\n-   Name_COBOL                          : constant Name_Id := N + 232;\n-   Name_CPP                            : constant Name_Id := N + 233;\n-   Name_Fortran                        : constant Name_Id := N + 234;\n-   Name_Intrinsic                      : constant Name_Id := N + 235;\n-   Name_Java                           : constant Name_Id := N + 236;\n-   Name_Stdcall                        : constant Name_Id := N + 237;\n-   Name_Stubbed                        : constant Name_Id := N + 238;\n-   Last_Convention_Name                : constant Name_Id := N + 238;\n+   First_Convention_Name               : constant Name_Id := N + 231;\n+   Name_Ada                            : constant Name_Id := N + 231;\n+   Name_Assembler                      : constant Name_Id := N + 232;\n+   Name_COBOL                          : constant Name_Id := N + 233;\n+   Name_CPP                            : constant Name_Id := N + 234;\n+   Name_Fortran                        : constant Name_Id := N + 235;\n+   Name_Intrinsic                      : constant Name_Id := N + 236;\n+   Name_Java                           : constant Name_Id := N + 237;\n+   Name_Stdcall                        : constant Name_Id := N + 238;\n+   Name_Stubbed                        : constant Name_Id := N + 239;\n+   Last_Convention_Name                : constant Name_Id := N + 239;\n \n    --  The following names are preset as synonyms for Assembler\n \n-   Name_Asm                            : constant Name_Id := N + 239;\n-   Name_Assembly                       : constant Name_Id := N + 240;\n+   Name_Asm                            : constant Name_Id := N + 240;\n+   Name_Assembly                       : constant Name_Id := N + 241;\n \n    --  The following names are preset as synonyms for C\n \n-   Name_Default                        : constant Name_Id := N + 241;\n+   Name_Default                        : constant Name_Id := N + 242;\n    --  Name_Exernal (previously defined as pragma)\n \n    --  The following names are present as synonyms for Stdcall\n \n-   Name_DLL                            : constant Name_Id := N + 242;\n-   Name_Win32                          : constant Name_Id := N + 243;\n+   Name_DLL                            : constant Name_Id := N + 243;\n+   Name_Win32                          : constant Name_Id := N + 244;\n \n    --  Other special names used in processing pragmas\n \n-   Name_As_Is                          : constant Name_Id := N + 244;\n-   Name_Body_File_Name                 : constant Name_Id := N + 245;\n-   Name_Casing                         : constant Name_Id := N + 246;\n-   Name_Code                           : constant Name_Id := N + 247;\n-   Name_Component                      : constant Name_Id := N + 248;\n-   Name_Component_Size_4               : constant Name_Id := N + 249;\n-   Name_Copy                           : constant Name_Id := N + 250;\n-   Name_D_Float                        : constant Name_Id := N + 251;\n-   Name_Descriptor                     : constant Name_Id := N + 252;\n-   Name_Dot_Replacement                : constant Name_Id := N + 253;\n-   Name_Dynamic                        : constant Name_Id := N + 254;\n-   Name_Entity                         : constant Name_Id := N + 255;\n-   Name_External_Name                  : constant Name_Id := N + 256;\n-   Name_First_Optional_Parameter       : constant Name_Id := N + 257;\n-   Name_Form                           : constant Name_Id := N + 258;\n-   Name_G_Float                        : constant Name_Id := N + 259;\n-   Name_Gcc                            : constant Name_Id := N + 260;\n-   Name_Gnat                           : constant Name_Id := N + 261;\n-   Name_GPL                            : constant Name_Id := N + 262;\n-   Name_IEEE_Float                     : constant Name_Id := N + 263;\n-   Name_Homonym_Number                 : constant Name_Id := N + 264;\n-   Name_Internal                       : constant Name_Id := N + 265;\n-   Name_Link_Name                      : constant Name_Id := N + 266;\n-   Name_Lowercase                      : constant Name_Id := N + 267;\n-   Name_Max_Size                       : constant Name_Id := N + 268;\n-   Name_Mechanism                      : constant Name_Id := N + 269;\n-   Name_Mixedcase                      : constant Name_Id := N + 270;\n-   Name_Modified_GPL                   : constant Name_Id := N + 271;\n-   Name_Name                           : constant Name_Id := N + 272;\n-   Name_NCA                            : constant Name_Id := N + 273;\n-   Name_No                             : constant Name_Id := N + 274;\n-   Name_On                             : constant Name_Id := N + 275;\n-   Name_Parameter_Types                : constant Name_Id := N + 276;\n-   Name_Reference                      : constant Name_Id := N + 277;\n-   Name_No_Requeue                     : constant Name_Id := N + 278;\n-   Name_No_Task_Attributes             : constant Name_Id := N + 279;\n-   Name_Restricted                     : constant Name_Id := N + 280;\n-   Name_Result_Mechanism               : constant Name_Id := N + 281;\n-   Name_Result_Type                    : constant Name_Id := N + 282;\n-   Name_Runtime                        : constant Name_Id := N + 283;\n-   Name_SB                             : constant Name_Id := N + 284;\n-   Name_Secondary_Stack_Size           : constant Name_Id := N + 285;\n-   Name_Section                        : constant Name_Id := N + 286;\n-   Name_Semaphore                      : constant Name_Id := N + 287;\n-   Name_Spec_File_Name                 : constant Name_Id := N + 288;\n-   Name_Static                         : constant Name_Id := N + 289;\n-   Name_Stack_Size                     : constant Name_Id := N + 290;\n-   Name_Subunit_File_Name              : constant Name_Id := N + 291;\n-   Name_Task_Stack_Size_Default        : constant Name_Id := N + 292;\n-   Name_Task_Type                      : constant Name_Id := N + 293;\n-   Name_Time_Slicing_Enabled           : constant Name_Id := N + 294;\n-   Name_Top_Guard                      : constant Name_Id := N + 295;\n-   Name_UBA                            : constant Name_Id := N + 296;\n-   Name_UBS                            : constant Name_Id := N + 297;\n-   Name_UBSB                           : constant Name_Id := N + 298;\n-   Name_Unit_Name                      : constant Name_Id := N + 299;\n-   Name_Unknown                        : constant Name_Id := N + 300;\n-   Name_Unrestricted                   : constant Name_Id := N + 301;\n-   Name_Uppercase                      : constant Name_Id := N + 302;\n-   Name_User                           : constant Name_Id := N + 303;\n-   Name_VAX_Float                      : constant Name_Id := N + 304;\n-   Name_VMS                            : constant Name_Id := N + 305;\n-   Name_Working_Storage                : constant Name_Id := N + 306;\n+   Name_As_Is                          : constant Name_Id := N + 245;\n+   Name_Body_File_Name                 : constant Name_Id := N + 246;\n+   Name_Casing                         : constant Name_Id := N + 247;\n+   Name_Code                           : constant Name_Id := N + 248;\n+   Name_Component                      : constant Name_Id := N + 249;\n+   Name_Component_Size_4               : constant Name_Id := N + 250;\n+   Name_Copy                           : constant Name_Id := N + 251;\n+   Name_D_Float                        : constant Name_Id := N + 252;\n+   Name_Descriptor                     : constant Name_Id := N + 253;\n+   Name_Dot_Replacement                : constant Name_Id := N + 254;\n+   Name_Dynamic                        : constant Name_Id := N + 255;\n+   Name_Entity                         : constant Name_Id := N + 256;\n+   Name_External_Name                  : constant Name_Id := N + 257;\n+   Name_First_Optional_Parameter       : constant Name_Id := N + 258;\n+   Name_Form                           : constant Name_Id := N + 259;\n+   Name_G_Float                        : constant Name_Id := N + 260;\n+   Name_Gcc                            : constant Name_Id := N + 261;\n+   Name_Gnat                           : constant Name_Id := N + 262;\n+   Name_GPL                            : constant Name_Id := N + 263;\n+   Name_IEEE_Float                     : constant Name_Id := N + 264;\n+   Name_Homonym_Number                 : constant Name_Id := N + 265;\n+   Name_Internal                       : constant Name_Id := N + 266;\n+   Name_Link_Name                      : constant Name_Id := N + 267;\n+   Name_Lowercase                      : constant Name_Id := N + 268;\n+   Name_Max_Size                       : constant Name_Id := N + 269;\n+   Name_Mechanism                      : constant Name_Id := N + 270;\n+   Name_Mixedcase                      : constant Name_Id := N + 271;\n+   Name_Modified_GPL                   : constant Name_Id := N + 272;\n+   Name_Name                           : constant Name_Id := N + 273;\n+   Name_NCA                            : constant Name_Id := N + 274;\n+   Name_No                             : constant Name_Id := N + 275;\n+   Name_On                             : constant Name_Id := N + 276;\n+   Name_Parameter_Types                : constant Name_Id := N + 277;\n+   Name_Reference                      : constant Name_Id := N + 278;\n+   Name_No_Requeue                     : constant Name_Id := N + 279;\n+   Name_No_Task_Attributes             : constant Name_Id := N + 280;\n+   Name_Restricted                     : constant Name_Id := N + 281;\n+   Name_Result_Mechanism               : constant Name_Id := N + 282;\n+   Name_Result_Type                    : constant Name_Id := N + 283;\n+   Name_Runtime                        : constant Name_Id := N + 284;\n+   Name_SB                             : constant Name_Id := N + 285;\n+   Name_Secondary_Stack_Size           : constant Name_Id := N + 286;\n+   Name_Section                        : constant Name_Id := N + 287;\n+   Name_Semaphore                      : constant Name_Id := N + 288;\n+   Name_Spec_File_Name                 : constant Name_Id := N + 289;\n+   Name_Static                         : constant Name_Id := N + 290;\n+   Name_Stack_Size                     : constant Name_Id := N + 291;\n+   Name_Subunit_File_Name              : constant Name_Id := N + 292;\n+   Name_Task_Stack_Size_Default        : constant Name_Id := N + 293;\n+   Name_Task_Type                      : constant Name_Id := N + 294;\n+   Name_Time_Slicing_Enabled           : constant Name_Id := N + 295;\n+   Name_Top_Guard                      : constant Name_Id := N + 296;\n+   Name_UBA                            : constant Name_Id := N + 297;\n+   Name_UBS                            : constant Name_Id := N + 298;\n+   Name_UBSB                           : constant Name_Id := N + 299;\n+   Name_Unit_Name                      : constant Name_Id := N + 300;\n+   Name_Unknown                        : constant Name_Id := N + 301;\n+   Name_Unrestricted                   : constant Name_Id := N + 302;\n+   Name_Uppercase                      : constant Name_Id := N + 303;\n+   Name_User                           : constant Name_Id := N + 304;\n+   Name_VAX_Float                      : constant Name_Id := N + 305;\n+   Name_VMS                            : constant Name_Id := N + 306;\n+   Name_Working_Storage                : constant Name_Id := N + 307;\n \n    --  Names of recognized attributes. The entries with the comment \"Ada 83\"\n    --  are attributes that are defined in Ada 83, but not in Ada 95. These\n@@ -569,374 +570,374 @@ package Snames is\n    --  The entries marked VMS are recognized only in OpenVMS implementations\n    --  of GNAT, and are treated as illegal in all other contexts.\n \n-   First_Attribute_Name                : constant Name_Id := N + 307;\n-   Name_Abort_Signal                   : constant Name_Id := N + 307;  -- GNAT\n-   Name_Access                         : constant Name_Id := N + 308;\n-   Name_Address                        : constant Name_Id := N + 309;\n-   Name_Address_Size                   : constant Name_Id := N + 310;  -- GNAT\n-   Name_Aft                            : constant Name_Id := N + 311;\n-   Name_Alignment                      : constant Name_Id := N + 312;\n-   Name_Asm_Input                      : constant Name_Id := N + 313;  -- GNAT\n-   Name_Asm_Output                     : constant Name_Id := N + 314;  -- GNAT\n-   Name_AST_Entry                      : constant Name_Id := N + 315;  -- VMS\n-   Name_Bit                            : constant Name_Id := N + 316;  -- GNAT\n-   Name_Bit_Order                      : constant Name_Id := N + 317;\n-   Name_Bit_Position                   : constant Name_Id := N + 318;  -- GNAT\n-   Name_Body_Version                   : constant Name_Id := N + 319;\n-   Name_Callable                       : constant Name_Id := N + 320;\n-   Name_Caller                         : constant Name_Id := N + 321;\n-   Name_Code_Address                   : constant Name_Id := N + 322;  -- GNAT\n-   Name_Component_Size                 : constant Name_Id := N + 323;\n-   Name_Compose                        : constant Name_Id := N + 324;\n-   Name_Constrained                    : constant Name_Id := N + 325;\n-   Name_Count                          : constant Name_Id := N + 326;\n-   Name_Default_Bit_Order              : constant Name_Id := N + 327; -- GNAT\n-   Name_Definite                       : constant Name_Id := N + 328;\n-   Name_Delta                          : constant Name_Id := N + 329;\n-   Name_Denorm                         : constant Name_Id := N + 330;\n-   Name_Digits                         : constant Name_Id := N + 331;\n-   Name_Elaborated                     : constant Name_Id := N + 332; -- GNAT\n-   Name_Emax                           : constant Name_Id := N + 333; -- Ada 83\n-   Name_Enum_Rep                       : constant Name_Id := N + 334; -- GNAT\n-   Name_Epsilon                        : constant Name_Id := N + 335; -- Ada 83\n-   Name_Exponent                       : constant Name_Id := N + 336;\n-   Name_External_Tag                   : constant Name_Id := N + 337;\n-   Name_First                          : constant Name_Id := N + 338;\n-   Name_First_Bit                      : constant Name_Id := N + 339;\n-   Name_Fixed_Value                    : constant Name_Id := N + 340; -- GNAT\n-   Name_Fore                           : constant Name_Id := N + 341;\n-   Name_Has_Discriminants              : constant Name_Id := N + 342; -- GNAT\n-   Name_Identity                       : constant Name_Id := N + 343;\n-   Name_Img                            : constant Name_Id := N + 344; -- GNAT\n-   Name_Integer_Value                  : constant Name_Id := N + 345; -- GNAT\n-   Name_Large                          : constant Name_Id := N + 346; -- Ada 83\n-   Name_Last                           : constant Name_Id := N + 347;\n-   Name_Last_Bit                       : constant Name_Id := N + 348;\n-   Name_Leading_Part                   : constant Name_Id := N + 349;\n-   Name_Length                         : constant Name_Id := N + 350;\n-   Name_Machine_Emax                   : constant Name_Id := N + 351;\n-   Name_Machine_Emin                   : constant Name_Id := N + 352;\n-   Name_Machine_Mantissa               : constant Name_Id := N + 353;\n-   Name_Machine_Overflows              : constant Name_Id := N + 354;\n-   Name_Machine_Radix                  : constant Name_Id := N + 355;\n-   Name_Machine_Rounds                 : constant Name_Id := N + 356;\n-   Name_Machine_Size                   : constant Name_Id := N + 357; -- GNAT\n-   Name_Mantissa                       : constant Name_Id := N + 358; -- Ada 83\n-   Name_Max_Size_In_Storage_Elements   : constant Name_Id := N + 359;\n-   Name_Maximum_Alignment              : constant Name_Id := N + 360; -- GNAT\n-   Name_Mechanism_Code                 : constant Name_Id := N + 361; -- GNAT\n-   Name_Model_Emin                     : constant Name_Id := N + 362;\n-   Name_Model_Epsilon                  : constant Name_Id := N + 363;\n-   Name_Model_Mantissa                 : constant Name_Id := N + 364;\n-   Name_Model_Small                    : constant Name_Id := N + 365;\n-   Name_Modulus                        : constant Name_Id := N + 366;\n-   Name_Null_Parameter                 : constant Name_Id := N + 367; -- GNAT\n-   Name_Object_Size                    : constant Name_Id := N + 368; -- GNAT\n-   Name_Partition_ID                   : constant Name_Id := N + 369;\n-   Name_Passed_By_Reference            : constant Name_Id := N + 370; -- GNAT\n-   Name_Pool_Address                   : constant Name_Id := N + 371;\n-   Name_Pos                            : constant Name_Id := N + 372;\n-   Name_Position                       : constant Name_Id := N + 373;\n-   Name_Range                          : constant Name_Id := N + 374;\n-   Name_Range_Length                   : constant Name_Id := N + 375; -- GNAT\n-   Name_Round                          : constant Name_Id := N + 376;\n-   Name_Safe_Emax                      : constant Name_Id := N + 377; -- Ada 83\n-   Name_Safe_First                     : constant Name_Id := N + 378;\n-   Name_Safe_Large                     : constant Name_Id := N + 379; -- Ada 83\n-   Name_Safe_Last                      : constant Name_Id := N + 380;\n-   Name_Safe_Small                     : constant Name_Id := N + 381; -- Ada 83\n-   Name_Scale                          : constant Name_Id := N + 382;\n-   Name_Scaling                        : constant Name_Id := N + 383;\n-   Name_Signed_Zeros                   : constant Name_Id := N + 384;\n-   Name_Size                           : constant Name_Id := N + 385;\n-   Name_Small                          : constant Name_Id := N + 386;\n-   Name_Storage_Size                   : constant Name_Id := N + 387;\n-   Name_Storage_Unit                   : constant Name_Id := N + 388; -- GNAT\n-   Name_Tag                            : constant Name_Id := N + 389;\n-   Name_Target_Name                    : constant Name_Id := N + 390; -- GNAT\n-   Name_Terminated                     : constant Name_Id := N + 391;\n-   Name_To_Address                     : constant Name_Id := N + 392; -- GNAT\n-   Name_Type_Class                     : constant Name_Id := N + 393; -- GNAT\n-   Name_UET_Address                    : constant Name_Id := N + 394; -- GNAT\n-   Name_Unbiased_Rounding              : constant Name_Id := N + 395;\n-   Name_Unchecked_Access               : constant Name_Id := N + 396;\n-   Name_Unconstrained_Array            : constant Name_Id := N + 397;\n-   Name_Universal_Literal_String       : constant Name_Id := N + 398; -- GNAT\n-   Name_Unrestricted_Access            : constant Name_Id := N + 399; -- GNAT\n-   Name_VADS_Size                      : constant Name_Id := N + 400; -- GNAT\n-   Name_Val                            : constant Name_Id := N + 401;\n-   Name_Valid                          : constant Name_Id := N + 402;\n-   Name_Value_Size                     : constant Name_Id := N + 403; -- GNAT\n-   Name_Version                        : constant Name_Id := N + 404;\n-   Name_Wchar_T_Size                   : constant Name_Id := N + 405; -- GNAT\n-   Name_Wide_Width                     : constant Name_Id := N + 406;\n-   Name_Width                          : constant Name_Id := N + 407;\n-   Name_Word_Size                      : constant Name_Id := N + 408; -- GNAT\n+   First_Attribute_Name                : constant Name_Id := N + 308;\n+   Name_Abort_Signal                   : constant Name_Id := N + 308;  -- GNAT\n+   Name_Access                         : constant Name_Id := N + 309;\n+   Name_Address                        : constant Name_Id := N + 310;\n+   Name_Address_Size                   : constant Name_Id := N + 311;  -- GNAT\n+   Name_Aft                            : constant Name_Id := N + 312;\n+   Name_Alignment                      : constant Name_Id := N + 313;\n+   Name_Asm_Input                      : constant Name_Id := N + 314;  -- GNAT\n+   Name_Asm_Output                     : constant Name_Id := N + 315;  -- GNAT\n+   Name_AST_Entry                      : constant Name_Id := N + 316;  -- VMS\n+   Name_Bit                            : constant Name_Id := N + 317;  -- GNAT\n+   Name_Bit_Order                      : constant Name_Id := N + 318;\n+   Name_Bit_Position                   : constant Name_Id := N + 319;  -- GNAT\n+   Name_Body_Version                   : constant Name_Id := N + 320;\n+   Name_Callable                       : constant Name_Id := N + 321;\n+   Name_Caller                         : constant Name_Id := N + 322;\n+   Name_Code_Address                   : constant Name_Id := N + 323;  -- GNAT\n+   Name_Component_Size                 : constant Name_Id := N + 324;\n+   Name_Compose                        : constant Name_Id := N + 325;\n+   Name_Constrained                    : constant Name_Id := N + 326;\n+   Name_Count                          : constant Name_Id := N + 327;\n+   Name_Default_Bit_Order              : constant Name_Id := N + 328; -- GNAT\n+   Name_Definite                       : constant Name_Id := N + 329;\n+   Name_Delta                          : constant Name_Id := N + 330;\n+   Name_Denorm                         : constant Name_Id := N + 331;\n+   Name_Digits                         : constant Name_Id := N + 332;\n+   Name_Elaborated                     : constant Name_Id := N + 333; -- GNAT\n+   Name_Emax                           : constant Name_Id := N + 334; -- Ada 83\n+   Name_Enum_Rep                       : constant Name_Id := N + 335; -- GNAT\n+   Name_Epsilon                        : constant Name_Id := N + 336; -- Ada 83\n+   Name_Exponent                       : constant Name_Id := N + 337;\n+   Name_External_Tag                   : constant Name_Id := N + 338;\n+   Name_First                          : constant Name_Id := N + 339;\n+   Name_First_Bit                      : constant Name_Id := N + 340;\n+   Name_Fixed_Value                    : constant Name_Id := N + 341; -- GNAT\n+   Name_Fore                           : constant Name_Id := N + 342;\n+   Name_Has_Discriminants              : constant Name_Id := N + 343; -- GNAT\n+   Name_Identity                       : constant Name_Id := N + 344;\n+   Name_Img                            : constant Name_Id := N + 345; -- GNAT\n+   Name_Integer_Value                  : constant Name_Id := N + 346; -- GNAT\n+   Name_Large                          : constant Name_Id := N + 347; -- Ada 83\n+   Name_Last                           : constant Name_Id := N + 348;\n+   Name_Last_Bit                       : constant Name_Id := N + 349;\n+   Name_Leading_Part                   : constant Name_Id := N + 350;\n+   Name_Length                         : constant Name_Id := N + 351;\n+   Name_Machine_Emax                   : constant Name_Id := N + 352;\n+   Name_Machine_Emin                   : constant Name_Id := N + 353;\n+   Name_Machine_Mantissa               : constant Name_Id := N + 354;\n+   Name_Machine_Overflows              : constant Name_Id := N + 355;\n+   Name_Machine_Radix                  : constant Name_Id := N + 356;\n+   Name_Machine_Rounds                 : constant Name_Id := N + 357;\n+   Name_Machine_Size                   : constant Name_Id := N + 358; -- GNAT\n+   Name_Mantissa                       : constant Name_Id := N + 359; -- Ada 83\n+   Name_Max_Size_In_Storage_Elements   : constant Name_Id := N + 360;\n+   Name_Maximum_Alignment              : constant Name_Id := N + 361; -- GNAT\n+   Name_Mechanism_Code                 : constant Name_Id := N + 362; -- GNAT\n+   Name_Model_Emin                     : constant Name_Id := N + 363;\n+   Name_Model_Epsilon                  : constant Name_Id := N + 364;\n+   Name_Model_Mantissa                 : constant Name_Id := N + 365;\n+   Name_Model_Small                    : constant Name_Id := N + 366;\n+   Name_Modulus                        : constant Name_Id := N + 367;\n+   Name_Null_Parameter                 : constant Name_Id := N + 368; -- GNAT\n+   Name_Object_Size                    : constant Name_Id := N + 369; -- GNAT\n+   Name_Partition_ID                   : constant Name_Id := N + 370;\n+   Name_Passed_By_Reference            : constant Name_Id := N + 371; -- GNAT\n+   Name_Pool_Address                   : constant Name_Id := N + 372;\n+   Name_Pos                            : constant Name_Id := N + 373;\n+   Name_Position                       : constant Name_Id := N + 374;\n+   Name_Range                          : constant Name_Id := N + 375;\n+   Name_Range_Length                   : constant Name_Id := N + 376; -- GNAT\n+   Name_Round                          : constant Name_Id := N + 377;\n+   Name_Safe_Emax                      : constant Name_Id := N + 378; -- Ada 83\n+   Name_Safe_First                     : constant Name_Id := N + 379;\n+   Name_Safe_Large                     : constant Name_Id := N + 380; -- Ada 83\n+   Name_Safe_Last                      : constant Name_Id := N + 381;\n+   Name_Safe_Small                     : constant Name_Id := N + 382; -- Ada 83\n+   Name_Scale                          : constant Name_Id := N + 383;\n+   Name_Scaling                        : constant Name_Id := N + 384;\n+   Name_Signed_Zeros                   : constant Name_Id := N + 385;\n+   Name_Size                           : constant Name_Id := N + 386;\n+   Name_Small                          : constant Name_Id := N + 387;\n+   Name_Storage_Size                   : constant Name_Id := N + 388;\n+   Name_Storage_Unit                   : constant Name_Id := N + 389; -- GNAT\n+   Name_Tag                            : constant Name_Id := N + 390;\n+   Name_Target_Name                    : constant Name_Id := N + 391; -- GNAT\n+   Name_Terminated                     : constant Name_Id := N + 392;\n+   Name_To_Address                     : constant Name_Id := N + 393; -- GNAT\n+   Name_Type_Class                     : constant Name_Id := N + 394; -- GNAT\n+   Name_UET_Address                    : constant Name_Id := N + 395; -- GNAT\n+   Name_Unbiased_Rounding              : constant Name_Id := N + 396;\n+   Name_Unchecked_Access               : constant Name_Id := N + 397;\n+   Name_Unconstrained_Array            : constant Name_Id := N + 398;\n+   Name_Universal_Literal_String       : constant Name_Id := N + 399; -- GNAT\n+   Name_Unrestricted_Access            : constant Name_Id := N + 400; -- GNAT\n+   Name_VADS_Size                      : constant Name_Id := N + 401; -- GNAT\n+   Name_Val                            : constant Name_Id := N + 402;\n+   Name_Valid                          : constant Name_Id := N + 403;\n+   Name_Value_Size                     : constant Name_Id := N + 404; -- GNAT\n+   Name_Version                        : constant Name_Id := N + 405;\n+   Name_Wchar_T_Size                   : constant Name_Id := N + 406; -- GNAT\n+   Name_Wide_Width                     : constant Name_Id := N + 407;\n+   Name_Width                          : constant Name_Id := N + 408;\n+   Name_Word_Size                      : constant Name_Id := N + 409; -- GNAT\n \n    --  Attributes that designate attributes returning renamable functions,\n    --  i.e. functions that return other than a universal value.\n \n-   First_Renamable_Function_Attribute  : constant Name_Id := N + 409;\n-   Name_Adjacent                       : constant Name_Id := N + 409;\n-   Name_Ceiling                        : constant Name_Id := N + 410;\n-   Name_Copy_Sign                      : constant Name_Id := N + 411;\n-   Name_Floor                          : constant Name_Id := N + 412;\n-   Name_Fraction                       : constant Name_Id := N + 413;\n-   Name_Image                          : constant Name_Id := N + 414;\n-   Name_Input                          : constant Name_Id := N + 415;\n-   Name_Machine                        : constant Name_Id := N + 416;\n-   Name_Max                            : constant Name_Id := N + 417;\n-   Name_Min                            : constant Name_Id := N + 418;\n-   Name_Model                          : constant Name_Id := N + 419;\n-   Name_Pred                           : constant Name_Id := N + 420;\n-   Name_Remainder                      : constant Name_Id := N + 421;\n-   Name_Rounding                       : constant Name_Id := N + 422;\n-   Name_Succ                           : constant Name_Id := N + 423;\n-   Name_Truncation                     : constant Name_Id := N + 424;\n-   Name_Value                          : constant Name_Id := N + 425;\n-   Name_Wide_Image                     : constant Name_Id := N + 426;\n-   Name_Wide_Value                     : constant Name_Id := N + 427;\n-   Last_Renamable_Function_Attribute   : constant Name_Id := N + 427;\n+   First_Renamable_Function_Attribute  : constant Name_Id := N + 410;\n+   Name_Adjacent                       : constant Name_Id := N + 410;\n+   Name_Ceiling                        : constant Name_Id := N + 411;\n+   Name_Copy_Sign                      : constant Name_Id := N + 412;\n+   Name_Floor                          : constant Name_Id := N + 413;\n+   Name_Fraction                       : constant Name_Id := N + 414;\n+   Name_Image                          : constant Name_Id := N + 415;\n+   Name_Input                          : constant Name_Id := N + 416;\n+   Name_Machine                        : constant Name_Id := N + 417;\n+   Name_Max                            : constant Name_Id := N + 418;\n+   Name_Min                            : constant Name_Id := N + 419;\n+   Name_Model                          : constant Name_Id := N + 420;\n+   Name_Pred                           : constant Name_Id := N + 421;\n+   Name_Remainder                      : constant Name_Id := N + 422;\n+   Name_Rounding                       : constant Name_Id := N + 423;\n+   Name_Succ                           : constant Name_Id := N + 424;\n+   Name_Truncation                     : constant Name_Id := N + 425;\n+   Name_Value                          : constant Name_Id := N + 426;\n+   Name_Wide_Image                     : constant Name_Id := N + 427;\n+   Name_Wide_Value                     : constant Name_Id := N + 428;\n+   Last_Renamable_Function_Attribute   : constant Name_Id := N + 428;\n \n    --  Attributes that designate procedures\n \n-   First_Procedure_Attribute           : constant Name_Id := N + 428;\n-   Name_Output                         : constant Name_Id := N + 428;\n-   Name_Read                           : constant Name_Id := N + 429;\n-   Name_Write                          : constant Name_Id := N + 430;\n-   Last_Procedure_Attribute            : constant Name_Id := N + 430;\n+   First_Procedure_Attribute           : constant Name_Id := N + 429;\n+   Name_Output                         : constant Name_Id := N + 429;\n+   Name_Read                           : constant Name_Id := N + 430;\n+   Name_Write                          : constant Name_Id := N + 431;\n+   Last_Procedure_Attribute            : constant Name_Id := N + 431;\n \n    --  Remaining attributes are ones that return entities\n \n-   First_Entity_Attribute_Name         : constant Name_Id := N + 431;\n-   Name_Elab_Body                      : constant Name_Id := N + 431; -- GNAT\n-   Name_Elab_Spec                      : constant Name_Id := N + 432; -- GNAT\n-   Name_Storage_Pool                   : constant Name_Id := N + 433;\n+   First_Entity_Attribute_Name         : constant Name_Id := N + 432;\n+   Name_Elab_Body                      : constant Name_Id := N + 432; -- GNAT\n+   Name_Elab_Spec                      : constant Name_Id := N + 433; -- GNAT\n+   Name_Storage_Pool                   : constant Name_Id := N + 434;\n \n    --  These attributes are the ones that return types\n \n-   First_Type_Attribute_Name           : constant Name_Id := N + 434;\n-   Name_Base                           : constant Name_Id := N + 434;\n-   Name_Class                          : constant Name_Id := N + 435;\n-   Last_Type_Attribute_Name            : constant Name_Id := N + 435;\n-   Last_Entity_Attribute_Name          : constant Name_Id := N + 435;\n-   Last_Attribute_Name                 : constant Name_Id := N + 435;\n+   First_Type_Attribute_Name           : constant Name_Id := N + 435;\n+   Name_Base                           : constant Name_Id := N + 435;\n+   Name_Class                          : constant Name_Id := N + 436;\n+   Last_Type_Attribute_Name            : constant Name_Id := N + 436;\n+   Last_Entity_Attribute_Name          : constant Name_Id := N + 436;\n+   Last_Attribute_Name                 : constant Name_Id := N + 436;\n \n    --  Names of recognized locking policy identifiers\n \n    --  Note: policies are identified by the first character of the\n    --  name (e.g. C for Ceiling_Locking). If new policy names are added,\n    --  the first character must be distinct.\n \n-   First_Locking_Policy_Name           : constant Name_Id := N + 436;\n-   Name_Ceiling_Locking                : constant Name_Id := N + 436;\n-   Name_Inheritance_Locking            : constant Name_Id := N + 437;\n-   Last_Locking_Policy_Name            : constant Name_Id := N + 437;\n+   First_Locking_Policy_Name           : constant Name_Id := N + 437;\n+   Name_Ceiling_Locking                : constant Name_Id := N + 437;\n+   Name_Inheritance_Locking            : constant Name_Id := N + 438;\n+   Last_Locking_Policy_Name            : constant Name_Id := N + 438;\n \n    --  Names of recognized queuing policy identifiers.\n \n    --  Note: policies are identified by the first character of the\n    --  name (e.g. F for FIFO_Queuing). If new policy names are added,\n    --  the first character must be distinct.\n \n-   First_Queuing_Policy_Name           : constant Name_Id := N + 438;\n-   Name_FIFO_Queuing                   : constant Name_Id := N + 438;\n-   Name_Priority_Queuing               : constant Name_Id := N + 439;\n-   Last_Queuing_Policy_Name            : constant Name_Id := N + 439;\n+   First_Queuing_Policy_Name           : constant Name_Id := N + 439;\n+   Name_FIFO_Queuing                   : constant Name_Id := N + 439;\n+   Name_Priority_Queuing               : constant Name_Id := N + 440;\n+   Last_Queuing_Policy_Name            : constant Name_Id := N + 440;\n \n    --  Names of recognized task dispatching policy identifiers\n \n    --  Note: policies are identified by the first character of the\n    --  name (e.g. F for FIFO_WIthinn_Priorities). If new policy names\n    --  are added, the first character must be distinct.\n \n-   First_Task_Dispatching_Policy_Name  : constant Name_Id := N + 440;\n-   Name_FIFO_Within_Priorities         : constant Name_Id := N + 440;\n-   Last_Task_Dispatching_Policy_Name   : constant Name_Id := N + 440;\n+   First_Task_Dispatching_Policy_Name  : constant Name_Id := N + 441;\n+   Name_FIFO_Within_Priorities         : constant Name_Id := N + 441;\n+   Last_Task_Dispatching_Policy_Name   : constant Name_Id := N + 441;\n \n    --  Names of recognized checks for pragma Suppress\n \n-   First_Check_Name                    : constant Name_Id := N + 441;\n-   Name_Access_Check                   : constant Name_Id := N + 441;\n-   Name_Accessibility_Check            : constant Name_Id := N + 442;\n-   Name_Discriminant_Check             : constant Name_Id := N + 443;\n-   Name_Division_Check                 : constant Name_Id := N + 444;\n-   Name_Elaboration_Check              : constant Name_Id := N + 445;\n-   Name_Index_Check                    : constant Name_Id := N + 446;\n-   Name_Length_Check                   : constant Name_Id := N + 447;\n-   Name_Overflow_Check                 : constant Name_Id := N + 448;\n-   Name_Range_Check                    : constant Name_Id := N + 449;\n-   Name_Storage_Check                  : constant Name_Id := N + 450;\n-   Name_Tag_Check                      : constant Name_Id := N + 451;\n-   Name_All_Checks                     : constant Name_Id := N + 452;\n-   Last_Check_Name                     : constant Name_Id := N + 452;\n+   First_Check_Name                    : constant Name_Id := N + 442;\n+   Name_Access_Check                   : constant Name_Id := N + 442;\n+   Name_Accessibility_Check            : constant Name_Id := N + 443;\n+   Name_Discriminant_Check             : constant Name_Id := N + 444;\n+   Name_Division_Check                 : constant Name_Id := N + 445;\n+   Name_Elaboration_Check              : constant Name_Id := N + 446;\n+   Name_Index_Check                    : constant Name_Id := N + 447;\n+   Name_Length_Check                   : constant Name_Id := N + 448;\n+   Name_Overflow_Check                 : constant Name_Id := N + 449;\n+   Name_Range_Check                    : constant Name_Id := N + 450;\n+   Name_Storage_Check                  : constant Name_Id := N + 451;\n+   Name_Tag_Check                      : constant Name_Id := N + 452;\n+   Name_All_Checks                     : constant Name_Id := N + 453;\n+   Last_Check_Name                     : constant Name_Id := N + 453;\n \n    --  Names corresponding to reserved keywords, excluding those already\n    --  declared in the attribute list (Access, Delta, Digits, Range).\n \n-   Name_Abort                          : constant Name_Id := N + 453;\n-   Name_Abs                            : constant Name_Id := N + 454;\n-   Name_Accept                         : constant Name_Id := N + 455;\n-   Name_And                            : constant Name_Id := N + 456;\n-   Name_All                            : constant Name_Id := N + 457;\n-   Name_Array                          : constant Name_Id := N + 458;\n-   Name_At                             : constant Name_Id := N + 459;\n-   Name_Begin                          : constant Name_Id := N + 460;\n-   Name_Body                           : constant Name_Id := N + 461;\n-   Name_Case                           : constant Name_Id := N + 462;\n-   Name_Constant                       : constant Name_Id := N + 463;\n-   Name_Declare                        : constant Name_Id := N + 464;\n-   Name_Delay                          : constant Name_Id := N + 465;\n-   Name_Do                             : constant Name_Id := N + 466;\n-   Name_Else                           : constant Name_Id := N + 467;\n-   Name_Elsif                          : constant Name_Id := N + 468;\n-   Name_End                            : constant Name_Id := N + 469;\n-   Name_Entry                          : constant Name_Id := N + 470;\n-   Name_Exception                      : constant Name_Id := N + 471;\n-   Name_Exit                           : constant Name_Id := N + 472;\n-   Name_For                            : constant Name_Id := N + 473;\n-   Name_Function                       : constant Name_Id := N + 474;\n-   Name_Generic                        : constant Name_Id := N + 475;\n-   Name_Goto                           : constant Name_Id := N + 476;\n-   Name_If                             : constant Name_Id := N + 477;\n-   Name_In                             : constant Name_Id := N + 478;\n-   Name_Is                             : constant Name_Id := N + 479;\n-   Name_Limited                        : constant Name_Id := N + 480;\n-   Name_Loop                           : constant Name_Id := N + 481;\n-   Name_Mod                            : constant Name_Id := N + 482;\n-   Name_New                            : constant Name_Id := N + 483;\n-   Name_Not                            : constant Name_Id := N + 484;\n-   Name_Null                           : constant Name_Id := N + 485;\n-   Name_Of                             : constant Name_Id := N + 486;\n-   Name_Or                             : constant Name_Id := N + 487;\n-   Name_Others                         : constant Name_Id := N + 488;\n-   Name_Out                            : constant Name_Id := N + 489;\n-   Name_Package                        : constant Name_Id := N + 490;\n-   Name_Pragma                         : constant Name_Id := N + 491;\n-   Name_Private                        : constant Name_Id := N + 492;\n-   Name_Procedure                      : constant Name_Id := N + 493;\n-   Name_Raise                          : constant Name_Id := N + 494;\n-   Name_Record                         : constant Name_Id := N + 495;\n-   Name_Rem                            : constant Name_Id := N + 496;\n-   Name_Renames                        : constant Name_Id := N + 497;\n-   Name_Return                         : constant Name_Id := N + 498;\n-   Name_Reverse                        : constant Name_Id := N + 499;\n-   Name_Select                         : constant Name_Id := N + 500;\n-   Name_Separate                       : constant Name_Id := N + 501;\n-   Name_Subtype                        : constant Name_Id := N + 502;\n-   Name_Task                           : constant Name_Id := N + 503;\n-   Name_Terminate                      : constant Name_Id := N + 504;\n-   Name_Then                           : constant Name_Id := N + 505;\n-   Name_Type                           : constant Name_Id := N + 506;\n-   Name_Use                            : constant Name_Id := N + 507;\n-   Name_When                           : constant Name_Id := N + 508;\n-   Name_While                          : constant Name_Id := N + 509;\n-   Name_With                           : constant Name_Id := N + 510;\n-   Name_Xor                            : constant Name_Id := N + 511;\n+   Name_Abort                          : constant Name_Id := N + 454;\n+   Name_Abs                            : constant Name_Id := N + 455;\n+   Name_Accept                         : constant Name_Id := N + 456;\n+   Name_And                            : constant Name_Id := N + 457;\n+   Name_All                            : constant Name_Id := N + 458;\n+   Name_Array                          : constant Name_Id := N + 459;\n+   Name_At                             : constant Name_Id := N + 460;\n+   Name_Begin                          : constant Name_Id := N + 461;\n+   Name_Body                           : constant Name_Id := N + 462;\n+   Name_Case                           : constant Name_Id := N + 463;\n+   Name_Constant                       : constant Name_Id := N + 464;\n+   Name_Declare                        : constant Name_Id := N + 465;\n+   Name_Delay                          : constant Name_Id := N + 466;\n+   Name_Do                             : constant Name_Id := N + 467;\n+   Name_Else                           : constant Name_Id := N + 468;\n+   Name_Elsif                          : constant Name_Id := N + 469;\n+   Name_End                            : constant Name_Id := N + 470;\n+   Name_Entry                          : constant Name_Id := N + 471;\n+   Name_Exception                      : constant Name_Id := N + 472;\n+   Name_Exit                           : constant Name_Id := N + 473;\n+   Name_For                            : constant Name_Id := N + 474;\n+   Name_Function                       : constant Name_Id := N + 475;\n+   Name_Generic                        : constant Name_Id := N + 476;\n+   Name_Goto                           : constant Name_Id := N + 477;\n+   Name_If                             : constant Name_Id := N + 478;\n+   Name_In                             : constant Name_Id := N + 479;\n+   Name_Is                             : constant Name_Id := N + 480;\n+   Name_Limited                        : constant Name_Id := N + 481;\n+   Name_Loop                           : constant Name_Id := N + 482;\n+   Name_Mod                            : constant Name_Id := N + 483;\n+   Name_New                            : constant Name_Id := N + 484;\n+   Name_Not                            : constant Name_Id := N + 485;\n+   Name_Null                           : constant Name_Id := N + 486;\n+   Name_Of                             : constant Name_Id := N + 487;\n+   Name_Or                             : constant Name_Id := N + 488;\n+   Name_Others                         : constant Name_Id := N + 489;\n+   Name_Out                            : constant Name_Id := N + 490;\n+   Name_Package                        : constant Name_Id := N + 491;\n+   Name_Pragma                         : constant Name_Id := N + 492;\n+   Name_Private                        : constant Name_Id := N + 493;\n+   Name_Procedure                      : constant Name_Id := N + 494;\n+   Name_Raise                          : constant Name_Id := N + 495;\n+   Name_Record                         : constant Name_Id := N + 496;\n+   Name_Rem                            : constant Name_Id := N + 497;\n+   Name_Renames                        : constant Name_Id := N + 498;\n+   Name_Return                         : constant Name_Id := N + 499;\n+   Name_Reverse                        : constant Name_Id := N + 500;\n+   Name_Select                         : constant Name_Id := N + 501;\n+   Name_Separate                       : constant Name_Id := N + 502;\n+   Name_Subtype                        : constant Name_Id := N + 503;\n+   Name_Task                           : constant Name_Id := N + 504;\n+   Name_Terminate                      : constant Name_Id := N + 505;\n+   Name_Then                           : constant Name_Id := N + 506;\n+   Name_Type                           : constant Name_Id := N + 507;\n+   Name_Use                            : constant Name_Id := N + 508;\n+   Name_When                           : constant Name_Id := N + 509;\n+   Name_While                          : constant Name_Id := N + 510;\n+   Name_With                           : constant Name_Id := N + 511;\n+   Name_Xor                            : constant Name_Id := N + 512;\n \n    --  Names of intrinsic subprograms\n \n    --  Note: Asm is missing from this list, since Asm is a legitimate\n    --  convention name. So is To_Adress, which is a GNAT attribute.\n \n-   First_Intrinsic_Name                : constant Name_Id := N + 512;\n-   Name_Divide                         : constant Name_Id := N + 512;\n-   Name_Enclosing_Entity               : constant Name_Id := N + 513;\n-   Name_Exception_Information          : constant Name_Id := N + 514;\n-   Name_Exception_Message              : constant Name_Id := N + 515;\n-   Name_Exception_Name                 : constant Name_Id := N + 516;\n-   Name_File                           : constant Name_Id := N + 517;\n-   Name_Import_Address                 : constant Name_Id := N + 518;\n-   Name_Import_Largest_Value           : constant Name_Id := N + 519;\n-   Name_Import_Value                   : constant Name_Id := N + 520;\n-   Name_Is_Negative                    : constant Name_Id := N + 521;\n-   Name_Line                           : constant Name_Id := N + 522;\n-   Name_Rotate_Left                    : constant Name_Id := N + 523;\n-   Name_Rotate_Right                   : constant Name_Id := N + 524;\n-   Name_Shift_Left                     : constant Name_Id := N + 525;\n-   Name_Shift_Right                    : constant Name_Id := N + 526;\n-   Name_Shift_Right_Arithmetic         : constant Name_Id := N + 527;\n-   Name_Source_Location                : constant Name_Id := N + 528;\n-   Name_Unchecked_Conversion           : constant Name_Id := N + 529;\n-   Name_Unchecked_Deallocation         : constant Name_Id := N + 530;\n-   Name_To_Pointer                     : constant Name_Id := N + 531;\n-   Last_Intrinsic_Name                 : constant Name_Id := N + 531;\n+   First_Intrinsic_Name                : constant Name_Id := N + 513;\n+   Name_Divide                         : constant Name_Id := N + 513;\n+   Name_Enclosing_Entity               : constant Name_Id := N + 514;\n+   Name_Exception_Information          : constant Name_Id := N + 515;\n+   Name_Exception_Message              : constant Name_Id := N + 516;\n+   Name_Exception_Name                 : constant Name_Id := N + 517;\n+   Name_File                           : constant Name_Id := N + 518;\n+   Name_Import_Address                 : constant Name_Id := N + 519;\n+   Name_Import_Largest_Value           : constant Name_Id := N + 520;\n+   Name_Import_Value                   : constant Name_Id := N + 521;\n+   Name_Is_Negative                    : constant Name_Id := N + 522;\n+   Name_Line                           : constant Name_Id := N + 523;\n+   Name_Rotate_Left                    : constant Name_Id := N + 524;\n+   Name_Rotate_Right                   : constant Name_Id := N + 525;\n+   Name_Shift_Left                     : constant Name_Id := N + 526;\n+   Name_Shift_Right                    : constant Name_Id := N + 527;\n+   Name_Shift_Right_Arithmetic         : constant Name_Id := N + 528;\n+   Name_Source_Location                : constant Name_Id := N + 529;\n+   Name_Unchecked_Conversion           : constant Name_Id := N + 530;\n+   Name_Unchecked_Deallocation         : constant Name_Id := N + 531;\n+   Name_To_Pointer                     : constant Name_Id := N + 532;\n+   Last_Intrinsic_Name                 : constant Name_Id := N + 532;\n \n    --  Reserved words used only in Ada 95\n \n-   First_95_Reserved_Word              : constant Name_Id := N + 532;\n-   Name_Abstract                       : constant Name_Id := N + 532;\n-   Name_Aliased                        : constant Name_Id := N + 533;\n-   Name_Protected                      : constant Name_Id := N + 534;\n-   Name_Until                          : constant Name_Id := N + 535;\n-   Name_Requeue                        : constant Name_Id := N + 536;\n-   Name_Tagged                         : constant Name_Id := N + 537;\n-   Last_95_Reserved_Word               : constant Name_Id := N + 537;\n+   First_95_Reserved_Word              : constant Name_Id := N + 533;\n+   Name_Abstract                       : constant Name_Id := N + 533;\n+   Name_Aliased                        : constant Name_Id := N + 534;\n+   Name_Protected                      : constant Name_Id := N + 535;\n+   Name_Until                          : constant Name_Id := N + 536;\n+   Name_Requeue                        : constant Name_Id := N + 537;\n+   Name_Tagged                         : constant Name_Id := N + 538;\n+   Last_95_Reserved_Word               : constant Name_Id := N + 538;\n \n    subtype Ada_95_Reserved_Words is\n      Name_Id range First_95_Reserved_Word .. Last_95_Reserved_Word;\n \n    --  Miscellaneous names used in semantic checking\n \n-   Name_Raise_Exception                : constant Name_Id := N + 538;\n+   Name_Raise_Exception                : constant Name_Id := N + 539;\n \n    --  Additional reserved words in GNAT Project Files\n    --  Note that Name_External is already previously declared\n \n-   Name_Binder                         : constant Name_Id := N + 539;\n-   Name_Body_Suffix                    : constant Name_Id := N + 540;\n-   Name_Builder                        : constant Name_Id := N + 541;\n-   Name_Compiler                       : constant Name_Id := N + 542;\n-   Name_Cross_Reference                : constant Name_Id := N + 543;\n-   Name_Default_Switches               : constant Name_Id := N + 544;\n-   Name_Exec_Dir                       : constant Name_Id := N + 545;\n-   Name_Executable                     : constant Name_Id := N + 546;\n-   Name_Executable_Suffix              : constant Name_Id := N + 547;\n-   Name_Extends                        : constant Name_Id := N + 548;\n-   Name_Finder                         : constant Name_Id := N + 549;\n-   Name_Global_Configuration_Pragmas   : constant Name_Id := N + 550;\n-   Name_Gnatls                         : constant Name_Id := N + 551;\n-   Name_Gnatstub                       : constant Name_Id := N + 552;\n-   Name_Implementation                 : constant Name_Id := N + 553;\n-   Name_Implementation_Exceptions      : constant Name_Id := N + 554;\n-   Name_Implementation_Suffix          : constant Name_Id := N + 555;\n-   Name_Languages                      : constant Name_Id := N + 556;\n-   Name_Library_Dir                    : constant Name_Id := N + 557;\n-   Name_Library_Auto_Init              : constant Name_Id := N + 558;\n-   Name_Library_GCC                    : constant Name_Id := N + 559;\n-   Name_Library_Interface              : constant Name_Id := N + 560;\n-   Name_Library_Kind                   : constant Name_Id := N + 561;\n-   Name_Library_Name                   : constant Name_Id := N + 562;\n-   Name_Library_Options                : constant Name_Id := N + 563;\n-   Name_Library_Reference_Symbol_File  : constant Name_Id := N + 564;\n-   Name_Library_Src_Dir                : constant Name_Id := N + 565;\n-   Name_Library_Symbol_File            : constant Name_Id := N + 566;\n-   Name_Library_Symbol_Policy          : constant Name_Id := N + 567;\n-   Name_Library_Version                : constant Name_Id := N + 568;\n-   Name_Linker                         : constant Name_Id := N + 569;\n-   Name_Local_Configuration_Pragmas    : constant Name_Id := N + 570;\n-   Name_Locally_Removed_Files          : constant Name_Id := N + 571;\n-   Name_Naming                         : constant Name_Id := N + 572;\n-   Name_Object_Dir                     : constant Name_Id := N + 573;\n-   Name_Pretty_Printer                 : constant Name_Id := N + 574;\n-   Name_Project                        : constant Name_Id := N + 575;\n-   Name_Separate_Suffix                : constant Name_Id := N + 576;\n-   Name_Source_Dirs                    : constant Name_Id := N + 577;\n-   Name_Source_Files                   : constant Name_Id := N + 578;\n-   Name_Source_List_File               : constant Name_Id := N + 579;\n-   Name_Spec                           : constant Name_Id := N + 580;\n-   Name_Spec_Suffix                    : constant Name_Id := N + 581;\n-   Name_Specification                  : constant Name_Id := N + 582;\n-   Name_Specification_Exceptions       : constant Name_Id := N + 583;\n-   Name_Specification_Suffix           : constant Name_Id := N + 584;\n-   Name_Switches                       : constant Name_Id := N + 585;\n+   Name_Binder                         : constant Name_Id := N + 540;\n+   Name_Body_Suffix                    : constant Name_Id := N + 541;\n+   Name_Builder                        : constant Name_Id := N + 542;\n+   Name_Compiler                       : constant Name_Id := N + 543;\n+   Name_Cross_Reference                : constant Name_Id := N + 544;\n+   Name_Default_Switches               : constant Name_Id := N + 545;\n+   Name_Exec_Dir                       : constant Name_Id := N + 546;\n+   Name_Executable                     : constant Name_Id := N + 547;\n+   Name_Executable_Suffix              : constant Name_Id := N + 548;\n+   Name_Extends                        : constant Name_Id := N + 549;\n+   Name_Finder                         : constant Name_Id := N + 550;\n+   Name_Global_Configuration_Pragmas   : constant Name_Id := N + 551;\n+   Name_Gnatls                         : constant Name_Id := N + 552;\n+   Name_Gnatstub                       : constant Name_Id := N + 553;\n+   Name_Implementation                 : constant Name_Id := N + 554;\n+   Name_Implementation_Exceptions      : constant Name_Id := N + 555;\n+   Name_Implementation_Suffix          : constant Name_Id := N + 556;\n+   Name_Languages                      : constant Name_Id := N + 557;\n+   Name_Library_Dir                    : constant Name_Id := N + 558;\n+   Name_Library_Auto_Init              : constant Name_Id := N + 559;\n+   Name_Library_GCC                    : constant Name_Id := N + 560;\n+   Name_Library_Interface              : constant Name_Id := N + 561;\n+   Name_Library_Kind                   : constant Name_Id := N + 562;\n+   Name_Library_Name                   : constant Name_Id := N + 563;\n+   Name_Library_Options                : constant Name_Id := N + 564;\n+   Name_Library_Reference_Symbol_File  : constant Name_Id := N + 565;\n+   Name_Library_Src_Dir                : constant Name_Id := N + 566;\n+   Name_Library_Symbol_File            : constant Name_Id := N + 567;\n+   Name_Library_Symbol_Policy          : constant Name_Id := N + 568;\n+   Name_Library_Version                : constant Name_Id := N + 569;\n+   Name_Linker                         : constant Name_Id := N + 570;\n+   Name_Local_Configuration_Pragmas    : constant Name_Id := N + 571;\n+   Name_Locally_Removed_Files          : constant Name_Id := N + 572;\n+   Name_Naming                         : constant Name_Id := N + 573;\n+   Name_Object_Dir                     : constant Name_Id := N + 574;\n+   Name_Pretty_Printer                 : constant Name_Id := N + 575;\n+   Name_Project                        : constant Name_Id := N + 576;\n+   Name_Separate_Suffix                : constant Name_Id := N + 577;\n+   Name_Source_Dirs                    : constant Name_Id := N + 578;\n+   Name_Source_Files                   : constant Name_Id := N + 579;\n+   Name_Source_List_File               : constant Name_Id := N + 580;\n+   Name_Spec                           : constant Name_Id := N + 581;\n+   Name_Spec_Suffix                    : constant Name_Id := N + 582;\n+   Name_Specification                  : constant Name_Id := N + 583;\n+   Name_Specification_Exceptions       : constant Name_Id := N + 584;\n+   Name_Specification_Suffix           : constant Name_Id := N + 585;\n+   Name_Switches                       : constant Name_Id := N + 586;\n    --  Other miscellaneous names used in front end\n \n-   Name_Unaligned_Valid                : constant Name_Id := N + 586;\n+   Name_Unaligned_Valid                : constant Name_Id := N + 587;\n \n    --  Mark last defined name for consistency check in Snames body\n \n-   Last_Predefined_Name                : constant Name_Id := N + 586;\n+   Last_Predefined_Name                : constant Name_Id := N + 587;\n \n    subtype Any_Operator_Name is Name_Id range\n      First_Operator_Name .. Last_Operator_Name;\n@@ -1159,6 +1160,7 @@ package Snames is\n       Pragma_Locking_Policy,\n       Pragma_Long_Float,\n       Pragma_No_Run_Time,\n+      Pragma_No_Strict_Aliasing,\n       Pragma_Normalize_Scalars,\n       Pragma_Polling,\n       Pragma_Persistent_Data,"}, {"sha": "58dc87f4fad70e27451f08998fe08ef1add5e0fc", "filename": "gcc/ada/snames.h", "status": "modified", "additions": 122, "deletions": 121, "changes": 243, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a6a52dcb9b0a1f64fcaee58936fc84d416c7651/gcc%2Fada%2Fsnames.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a6a52dcb9b0a1f64fcaee58936fc84d416c7651/gcc%2Fada%2Fsnames.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsnames.h?ref=8a6a52dcb9b0a1f64fcaee58936fc84d416c7651", "patch": "@@ -216,133 +216,134 @@ extern unsigned char Get_Pragma_Id (int);\n #define  Pragma_Locking_Policy               17\n #define  Pragma_Long_Float                   18\n #define  Pragma_No_Run_Time                  19\n-#define  Pragma_Normalize_Scalars            20\n-#define  Pragma_Polling                      21\n-#define  Pragma_Persistent_Data              22\n-#define  Pragma_Persistent_Object            23\n-#define  Pragma_Profile                      24\n-#define  Pragma_Propagate_Exceptions         25\n-#define  Pragma_Queuing_Policy               26\n-#define  Pragma_Ravenscar                    27\n-#define  Pragma_Restricted_Run_Time          28\n-#define  Pragma_Restrictions                 29\n-#define  Pragma_Restriction_Warnings         30\n-#define  Pragma_Reviewable                   31\n-#define  Pragma_Source_File_Name             32\n-#define  Pragma_Source_File_Name_Project     33\n-#define  Pragma_Style_Checks                 34\n-#define  Pragma_Suppress                     35\n-#define  Pragma_Suppress_Exception_Locations 36\n-#define  Pragma_Task_Dispatching_Policy      37\n-#define  Pragma_Universal_Data               38\n-#define  Pragma_Unsuppress                   39\n-#define  Pragma_Use_VADS_Size                40\n-#define  Pragma_Validity_Checks              41\n-#define  Pragma_Warnings                     42\n+#define  Pragma_No_Strict_Aliasing           20\n+#define  Pragma_Normalize_Scalars            21\n+#define  Pragma_Polling                      22\n+#define  Pragma_Persistent_Data              23\n+#define  Pragma_Persistent_Object            24\n+#define  Pragma_Profile                      25\n+#define  Pragma_Propagate_Exceptions         26\n+#define  Pragma_Queuing_Policy               27\n+#define  Pragma_Ravenscar                    28\n+#define  Pragma_Restricted_Run_Time          29\n+#define  Pragma_Restrictions                 30\n+#define  Pragma_Restriction_Warnings         31\n+#define  Pragma_Reviewable                   32\n+#define  Pragma_Source_File_Name             33\n+#define  Pragma_Source_File_Name_Project     34\n+#define  Pragma_Style_Checks                 35\n+#define  Pragma_Suppress                     36\n+#define  Pragma_Suppress_Exception_Locations 37\n+#define  Pragma_Task_Dispatching_Policy      38\n+#define  Pragma_Universal_Data               39\n+#define  Pragma_Unsuppress                   40\n+#define  Pragma_Use_VADS_Size                41\n+#define  Pragma_Validity_Checks              42\n+#define  Pragma_Warnings                     43\n \n /* Remaining pragmas */\n \n-#define  Pragma_Abort_Defer                  43\n-#define  Pragma_All_Calls_Remote             44\n-#define  Pragma_Annotate                     45\n-#define  Pragma_Assert                       46\n-#define  Pragma_Asynchronous                 47\n-#define  Pragma_Atomic                       48\n-#define  Pragma_Atomic_Components            49\n-#define  Pragma_Attach_Handler               50\n-#define  Pragma_Comment                      51\n-#define  Pragma_Common_Object                52\n-#define  Pragma_Complex_Representation       53\n-#define  Pragma_Controlled                   54\n-#define  Pragma_Convention                   55\n-#define  Pragma_CPP_Class                    56\n-#define  Pragma_CPP_Constructor              57\n-#define  Pragma_CPP_Virtual                  58\n-#define  Pragma_CPP_Vtable                   59\n-#define  Pragma_Debug                        60\n-#define  Pragma_Elaborate                    61\n-#define  Pragma_Elaborate_All                62\n-#define  Pragma_Elaborate_Body               63\n-#define  Pragma_Export                       64\n-#define  Pragma_Export_Exception             65\n-#define  Pragma_Export_Function              66\n-#define  Pragma_Export_Object                67\n-#define  Pragma_Export_Procedure             68\n-#define  Pragma_Export_Value                 69\n-#define  Pragma_Export_Valued_Procedure      70\n-#define  Pragma_External                     71\n-#define  Pragma_Finalize_Storage_Only        72\n-#define  Pragma_Ident                        73\n-#define  Pragma_Import                       74\n-#define  Pragma_Import_Exception             75\n-#define  Pragma_Import_Function              76\n-#define  Pragma_Import_Object                77\n-#define  Pragma_Import_Procedure             78\n-#define  Pragma_Import_Valued_Procedure      79\n-#define  Pragma_Inline                       80\n-#define  Pragma_Inline_Always                81\n-#define  Pragma_Inline_Generic               82\n-#define  Pragma_Inspection_Point             83\n-#define  Pragma_Interface                    84\n-#define  Pragma_Interface_Name               85\n-#define  Pragma_Interrupt_Handler            86\n-#define  Pragma_Interrupt_Priority           87\n-#define  Pragma_Java_Constructor             88\n-#define  Pragma_Java_Interface               89\n-#define  Pragma_Keep_Names                   90\n-#define  Pragma_Link_With                    91\n-#define  Pragma_Linker_Alias                 92\n-#define  Pragma_Linker_Options               93\n-#define  Pragma_Linker_Section               94\n-#define  Pragma_List                         95\n-#define  Pragma_Machine_Attribute            96\n-#define  Pragma_Main                         97\n-#define  Pragma_Main_Storage                 98\n-#define  Pragma_Memory_Size                  99\n-#define  Pragma_No_Return                   100\n-#define  Pragma_Obsolescent                 101\n-#define  Pragma_Optimize                    102\n-#define  Pragma_Optional_Overriding         103\n-#define  Pragma_Overriding                  104\n-#define  Pragma_Pack                        105\n-#define  Pragma_Page                        106\n-#define  Pragma_Passive                     107\n-#define  Pragma_Preelaborate                108\n-#define  Pragma_Priority                    109\n-#define  Pragma_Psect_Object                110\n-#define  Pragma_Pure                        111\n-#define  Pragma_Pure_Function               112\n-#define  Pragma_Remote_Call_Interface       113\n-#define  Pragma_Remote_Types                114\n-#define  Pragma_Share_Generic               115\n-#define  Pragma_Shared                      116\n-#define  Pragma_Shared_Passive              117\n-#define  Pragma_Source_Reference            118\n-#define  Pragma_Stream_Convert              119\n-#define  Pragma_Subtitle                    120\n-#define  Pragma_Suppress_All                121\n-#define  Pragma_Suppress_Debug_Info         122\n-#define  Pragma_Suppress_Initialization     123\n-#define  Pragma_System_Name                 124\n-#define  Pragma_Task_Info                   125\n-#define  Pragma_Task_Name                   126\n-#define  Pragma_Task_Storage                127\n-#define  Pragma_Thread_Body                 128\n-#define  Pragma_Time_Slice                  129\n-#define  Pragma_Title                       130\n-#define  Pragma_Unchecked_Union             131\n-#define  Pragma_Unimplemented_Unit          132\n-#define  Pragma_Unreferenced                133\n-#define  Pragma_Unreserve_All_Interrupts    134\n-#define  Pragma_Volatile                    135\n-#define  Pragma_Volatile_Components         136\n-#define  Pragma_Weak_External               137\n+#define  Pragma_Abort_Defer                  44\n+#define  Pragma_All_Calls_Remote             45\n+#define  Pragma_Annotate                     46\n+#define  Pragma_Assert                       47\n+#define  Pragma_Asynchronous                 48\n+#define  Pragma_Atomic                       49\n+#define  Pragma_Atomic_Components            50\n+#define  Pragma_Attach_Handler               51\n+#define  Pragma_Comment                      52\n+#define  Pragma_Common_Object                53\n+#define  Pragma_Complex_Representation       54\n+#define  Pragma_Controlled                   55\n+#define  Pragma_Convention                   56\n+#define  Pragma_CPP_Class                    57\n+#define  Pragma_CPP_Constructor              58\n+#define  Pragma_CPP_Virtual                  59\n+#define  Pragma_CPP_Vtable                   60\n+#define  Pragma_Debug                        61\n+#define  Pragma_Elaborate                    62\n+#define  Pragma_Elaborate_All                63\n+#define  Pragma_Elaborate_Body               64\n+#define  Pragma_Export                       65\n+#define  Pragma_Export_Exception             66\n+#define  Pragma_Export_Function              67\n+#define  Pragma_Export_Object                68\n+#define  Pragma_Export_Procedure             69\n+#define  Pragma_Export_Value                 70\n+#define  Pragma_Export_Valued_Procedure      71\n+#define  Pragma_External                     72\n+#define  Pragma_Finalize_Storage_Only        73\n+#define  Pragma_Ident                        74\n+#define  Pragma_Import                       75\n+#define  Pragma_Import_Exception             76\n+#define  Pragma_Import_Function              77\n+#define  Pragma_Import_Object                78\n+#define  Pragma_Import_Procedure             79\n+#define  Pragma_Import_Valued_Procedure      80\n+#define  Pragma_Inline                       81\n+#define  Pragma_Inline_Always                82\n+#define  Pragma_Inline_Generic               83\n+#define  Pragma_Inspection_Point             84\n+#define  Pragma_Interface                    85\n+#define  Pragma_Interface_Name               86\n+#define  Pragma_Interrupt_Handler            87\n+#define  Pragma_Interrupt_Priority           88\n+#define  Pragma_Java_Constructor             89\n+#define  Pragma_Java_Interface               90\n+#define  Pragma_Keep_Names                   91\n+#define  Pragma_Link_With                    92\n+#define  Pragma_Linker_Alias                 93\n+#define  Pragma_Linker_Options               94\n+#define  Pragma_Linker_Section               95\n+#define  Pragma_List                         96\n+#define  Pragma_Machine_Attribute            97\n+#define  Pragma_Main                         98\n+#define  Pragma_Main_Storage                 99\n+#define  Pragma_Memory_Size                 100\n+#define  Pragma_No_Return                   101\n+#define  Pragma_Obsolescent                 102\n+#define  Pragma_Optimize                    103\n+#define  Pragma_Optional_Overriding         104\n+#define  Pragma_Overriding                  105\n+#define  Pragma_Pack                        106\n+#define  Pragma_Page                        107\n+#define  Pragma_Passive                     108\n+#define  Pragma_Preelaborate                109\n+#define  Pragma_Priority                    110\n+#define  Pragma_Psect_Object                111\n+#define  Pragma_Pure                        112\n+#define  Pragma_Pure_Function               113\n+#define  Pragma_Remote_Call_Interface       114\n+#define  Pragma_Remote_Types                115\n+#define  Pragma_Share_Generic               116\n+#define  Pragma_Shared                      117\n+#define  Pragma_Shared_Passive              118\n+#define  Pragma_Source_Reference            119\n+#define  Pragma_Stream_Convert              120\n+#define  Pragma_Subtitle                    121\n+#define  Pragma_Suppress_All                122\n+#define  Pragma_Suppress_Debug_Info         123\n+#define  Pragma_Suppress_Initialization     124\n+#define  Pragma_System_Name                 125\n+#define  Pragma_Task_Info                   126\n+#define  Pragma_Task_Name                   127\n+#define  Pragma_Task_Storage                128\n+#define  Pragma_Thread_Body                 129\n+#define  Pragma_Time_Slice                  130\n+#define  Pragma_Title                       131\n+#define  Pragma_Unchecked_Union             132\n+#define  Pragma_Unimplemented_Unit          133\n+#define  Pragma_Unreferenced                134\n+#define  Pragma_Unreserve_All_Interrupts    135\n+#define  Pragma_Volatile                    136\n+#define  Pragma_Volatile_Components         137\n+#define  Pragma_Weak_External               138\n \n /* The following are deliberately out of alphabetical order, see Snames */\n \n-#define  Pragma_AST_Entry                   138\n-#define  Pragma_Storage_Size                139\n-#define  Pragma_Storage_Unit                140\n+#define  Pragma_AST_Entry                   139\n+#define  Pragma_Storage_Size                140\n+#define  Pragma_Storage_Unit                141\n \n /* Define the numeric values for the conventions.  */\n "}, {"sha": "3f547a330e132729884b34f211515dac07326113", "filename": "gcc/ada/table.adb", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a6a52dcb9b0a1f64fcaee58936fc84d416c7651/gcc%2Fada%2Ftable.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a6a52dcb9b0a1f64fcaee58936fc84d416c7651/gcc%2Fada%2Ftable.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftable.adb?ref=8a6a52dcb9b0a1f64fcaee58936fc84d416c7651", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2002 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2004 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -66,9 +66,16 @@ package body Table is\n       --  Return Null_Address if the table length is zero,\n       --  Table (First)'Address if not.\n \n+      pragma Warnings (Off);\n+      --  Turn off warnings. The following unchecked conversions are only used\n+      --  internally in this package, and cannot never result in any instances\n+      --  of improperly aliased pointers for the client of the package.\n+\n       function To_Address is new Unchecked_Conversion (Table_Ptr, Address);\n       function To_Pointer is new Unchecked_Conversion (Address, Table_Ptr);\n \n+      pragma Warnings (On);\n+\n       ------------\n       -- Append --\n       ------------"}, {"sha": "20d1fdc5a54b0ad6c68edc9020b6ab6d81471500", "filename": "gcc/ada/trans.c", "status": "modified", "additions": 29, "deletions": 3, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a6a52dcb9b0a1f64fcaee58936fc84d416c7651/gcc%2Fada%2Ftrans.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a6a52dcb9b0a1f64fcaee58936fc84d416c7651/gcc%2Fada%2Ftrans.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftrans.c?ref=8a6a52dcb9b0a1f64fcaee58936fc84d416c7651", "patch": "@@ -4027,9 +4027,35 @@ tree_transform (Node_Id gnat_node)\n \tgnu_result = build1 (NULL_EXPR, gnu_result_type, gnu_result);\n       break;\n \n-    /* Nothing to do, since front end does all validation using the\n-       values that Gigi back-annotates.  */\n     case N_Validate_Unchecked_Conversion:\n+      /* If the result is a pointer type, see if we are either converting\n+         from a non-pointer or from a pointer to a type with a different\n+ \t alias set and warn if so.  If the result defined in the same unit as\n+ \t this unchecked convertion, we can allow this because we can know to\n+ \t make that type have alias set 0.  */\n+      {\n+ \ttree gnu_source_type = gnat_to_gnu_type (Source_Type (gnat_node));\n+ \ttree gnu_target_type = gnat_to_gnu_type (Target_Type (gnat_node));\n+\n+ \tif (POINTER_TYPE_P (gnu_target_type)\n+ \t    && !In_Same_Source_Unit (Target_Type (gnat_node), gnat_node)\n+            && get_alias_set (TREE_TYPE (gnu_target_type)) != 0\n+            && !No_Strict_Aliasing (Underlying_Type (Target_Type (gnat_node)))\n+ \t    && (!POINTER_TYPE_P (gnu_source_type)\n+ \t\t|| (get_alias_set (TREE_TYPE (gnu_source_type))\n+ \t\t    != get_alias_set (TREE_TYPE (gnu_target_type)))))\n+ \t  {\n+            post_error_ne\n+              (\"?possible aliasing problem for type&\",\n+               gnat_node, Target_Type (gnat_node));\n+\t    post_error\n+              (\"\\\\?use -fno-strict-aliasing switch for references\",\n+               gnat_node);\n+\t    post_error_ne\n+              (\"\\\\?or use `pragma No_Strict_Aliasing (&);`\",\n+               gnat_node, Target_Type (gnat_node));\n+\t  }\n+      }\n       break;\n \n     case N_Raise_Statement:\n@@ -5396,7 +5422,7 @@ build_unit_elab (Entity_Id gnat_unit, int body_p, tree gnu_elab_list)\n \n   /* See if any non-NOTE insns were generated.  */\n   for (insn = NEXT_INSN (insn); insn; insn = NEXT_INSN (insn))\n-    if (GET_RTX_CLASS (GET_CODE (insn)) == 'i')\n+    if (GET_RTX_CLASS (GET_CODE (insn)) == RTX_INSN)\n       {\n \tresult = 0;\n \tbreak;"}, {"sha": "1bd4d6dced78ad78ea16480e74aa46167222af10", "filename": "gcc/ada/vms_conv.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a6a52dcb9b0a1f64fcaee58936fc84d416c7651/gcc%2Fada%2Fvms_conv.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a6a52dcb9b0a1f64fcaee58936fc84d416c7651/gcc%2Fada%2Fvms_conv.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fvms_conv.adb?ref=8a6a52dcb9b0a1f64fcaee58936fc84d416c7651", "patch": "@@ -337,7 +337,7 @@ package body VMS_Conv is\n             Unixcmd  => new S'(\"gnatpp\"),\n             Unixsws  => null,\n             Switches => Pretty_Switches'Access,\n-            Params   => new Parameter_Array'(1 => File),\n+            Params   => new Parameter_Array'(1 => Unlimited_Files),\n             Defext   => \"   \"),\n \n          Shared =>"}, {"sha": "232940d05a4e18729986d74a6fa1f1c57af55a26", "filename": "gcc/ada/vms_data.ads", "status": "modified", "additions": 31, "deletions": 4, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a6a52dcb9b0a1f64fcaee58936fc84d416c7651/gcc%2Fada%2Fvms_data.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a6a52dcb9b0a1f64fcaee58936fc84d416c7651/gcc%2Fada%2Fvms_data.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fvms_data.ads?ref=8a6a52dcb9b0a1f64fcaee58936fc84d416c7651", "patch": "@@ -1543,6 +1543,8 @@ package VMS_Data is\n                                                \"-O1,!-O0,!-O2,!-O3 \"       &\n                                             \"UNROLL_LOOPS \"                &\n                                                \"-funroll-loops \"           &\n+                                            \"NO_STRICT_ALIASING \"          &\n+                                               \"-fno-strict-aliasing \"     &\n                                             \"INLINING \"                    &\n                                                \"-O3,!-O0,!-O1,!-O2\";\n    --        /NOOPTIMIZE (D)\n@@ -1554,20 +1556,31 @@ package VMS_Data is\n    --      ALL (D)       Perform most optimizations, including those that\n    --                    may be expensive.\n    --\n-   --      NONE          Do not do any optimizations.  Same as /NOOPTIMIZE.\n+   --      NONE          Do not do any optimizations. Same as /NOOPTIMIZE.\n    --\n    --      SOME          Perform some optimizations, but omit ones that\n-   --                    are costly.\n+   --                    are costly in compilation time.\n    --\n    --      DEVELOPMENT   Same as SOME.\n    --\n    --      INLINING      Full optimization, and also attempt automatic inlining\n    --                    of small subprograms within a unit\n    --\n-   --      UNROLL_LOOPS  Try to unroll loops.  This keyword may be specified\n-   --                    with any keyword above other than NONE.  Loop\n+   --      UNROLL_LOOPS  Try to unroll loops. This keyword may be specified\n+   --                    with any keyword above other than NONE. Loop\n    --                    unrolling usually, but not always, improves the\n    --                    performance of programs.\n+   --\n+   --      NO_STRICT_ALIASING\n+   --                    Suppress aliasing analysis. When optimization is\n+   --                    enabled (ALL or SOME above), the compiler assumes\n+   --                    that pointers do in fact point to legitimate values\n+   --                    of the pointer type (allocated from the proper pool).\n+   --                    If this assumption is violated, e.g. by the use of\n+   --                    unchecked conversion, then it may be necessary to\n+   --                    suppress this assumption using this keyword (which\n+   --                    may be specified only in conjunction with any\n+   --                    keyword above, other than NONE).\n \n    S_GCC_OptX    : aliased constant S := \"/NOOPTIMIZE \"                    &\n                                             \"-O0,!-O1,!-O2,!-O3\";\n@@ -4460,6 +4473,12 @@ package VMS_Data is\n    --   source. This qualifier /NO_MISSED_LABELS suppresses this insertion,\n    --   so that the formatted source reflects the original.\n \n+   S_Pretty_Notabs    : aliased constant S := \"/NOTABS \"                   &\n+                                                 \"-notabs\";\n+   --        /NOTABS\n+   --\n+   --   Replace all tabulations in comments with spaces.\n+\n    S_Pretty_Output    : aliased constant S := \"/OUTPUT=@\"                  &\n                                               \"-o@\";\n    --        /OUTPUT=file\n@@ -4508,6 +4527,12 @@ package VMS_Data is\n    --   argument source into filename.NPP. If filename.NPP already exists,\n    --   report an error and exit.\n \n+   S_Pretty_RTS       : aliased constant S := \"/RUNTIME_SYSTEM=|\"          &\n+                                               \"--RTS=|\";\n+   --        /RUNTIME_SYSTEM=xxx\n+   --\n+   --    Compile against an alternate runtime system named xxx or RTS-xxx.\n+\n    S_Pretty_Search    : aliased constant S := \"/SEARCH=*\"                  &\n                                               \"-I*\";\n    --        /SEARCH=(directory[,...])\n@@ -4565,11 +4590,13 @@ package VMS_Data is\n       S_Pretty_Mess      'Access,\n       S_Pretty_Names     'Access,\n       S_Pretty_No_Labels 'Access,\n+      S_Pretty_Notabs    'Access,\n       S_Pretty_Output    'Access,\n       S_Pretty_Override  'Access,\n       S_Pretty_Pragma    'Access,\n       S_Pretty_Replace   'Access,\n       S_Pretty_Project   'Access,\n+      S_Pretty_RTS       'Access,\n       S_Pretty_Search    'Access,\n       S_Pretty_Specific  'Access,\n       S_Pretty_Standard  'Access,"}]}