{"sha": "cc712abf045f954314de6c463816ecfbde58ba71", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2M3MTJhYmYwNDVmOTU0MzE0ZGU2YzQ2MzgxNmVjZmJkZTU4YmE3MQ==", "commit": {"author": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2001-10-07T18:02:46Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2001-10-07T18:02:46Z"}, "message": "acinclude.m4: Fix spelling error of \"separate\" as \"seperate\".\n\nconfig:\n\t* acinclude.m4: Fix spelling error of \"separate\" as \"seperate\".\n\ngcc:\n\t* ChangeLog.2, c-decl.c, config/i386/i386.md, doc/gcc.texi, gcc.c,\n\tgenmultilib, toplev.c: Fix spelling errors of \"separate\" as\n\t\"seperate\", and corresponding spelling errors of related words.\n\ngcc/ada:\n\t* 5oosinte.adb: Fix spelling error of \"separate\" as \"seperate\".\n\ngcc/testsuite:\n\t* gcc.c-torture/unsorted/unsorted.exp, lib/file-format.exp: Fix\n\tspelling errors of \"separate\" as \"seperate\".\n\nlibffi:\n\t* src/x86/ffi.c: Fix spelling error of \"separate\" as \"seperate\".\n\nlibjava:\n\t* defineclass.cc, java/awt/image/ColorModel.java,\n\tjava/awt/image/SampleModel.java, java/lang/Package.java,\n\tjava/security/cert/X509Extension.java: Fix spelling errors of\n\t\"separate\" as \"seperate\", and corresponding spelling errors of\n\trelated words.\n\nlibstdc++-v3:\n\t* docs/html/22_locale/locale.html, docs/html/faq/index.html: Fix\n\tspelling errors of \"separate\" as \"seperate\", and corresponding\n\tspelling errors of related words.\n\t* docs/html/faq/index.txt: Regenerate.\n\nFrom-SVN: r46063", "tree": {"sha": "7b81b50de81c4c6d563b250ac84aaa92bc4cf21c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7b81b50de81c4c6d563b250ac84aaa92bc4cf21c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cc712abf045f954314de6c463816ecfbde58ba71", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc712abf045f954314de6c463816ecfbde58ba71", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cc712abf045f954314de6c463816ecfbde58ba71", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc712abf045f954314de6c463816ecfbde58ba71/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8b60264b0d7878d24c17067464cafc1d5c9ab33e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b60264b0d7878d24c17067464cafc1d5c9ab33e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8b60264b0d7878d24c17067464cafc1d5c9ab33e"}], "stats": {"total": 88, "additions": 63, "deletions": 25}, "files": [{"sha": "2ea1a1f09bed0a017366210ca3c7cca3c8098a48", "filename": "config/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc712abf045f954314de6c463816ecfbde58ba71/config%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc712abf045f954314de6c463816ecfbde58ba71/config%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2FChangeLog?ref=cc712abf045f954314de6c463816ecfbde58ba71", "patch": "@@ -1,3 +1,7 @@\n+2001-10-07  Joseph S. Myers  <jsm28@cam.ac.uk>\n+\n+\t* acinclude.m4: Fix spelling error of \"separate\" as \"seperate\".\n+\n 2001-05-22  Jason Merrill  <jason_merrill@redhat.com>\n \n \t* mt-linux (CXXFLAGS_FOR_TARGET): Lose -fvtable-thunks."}, {"sha": "6669ac2c09a6e5179ab726c86a14cc2f6821e300", "filename": "config/acinclude.m4", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc712abf045f954314de6c463816ecfbde58ba71/config%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc712abf045f954314de6c463816ecfbde58ba71/config%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2Facinclude.m4?ref=cc712abf045f954314de6c463816ecfbde58ba71", "patch": "@@ -1071,7 +1071,7 @@ AC_DEFUN(CYG_AC_PATH_TKH, [\n # Note the gross little conversion here of srcdir by cd'ing to the found\n # directory. This converts the path from a relative to an absolute, so\n # recursive cache variables for the path will work right. We check all\n-# the possible paths in one loop rather than many seperate loops to speed\n+# the possible paths in one loop rather than many separate loops to speed\n # things up.\n # the alternative search directory is involked by --with-tkinclude\n #"}, {"sha": "f7804a2a0bc5b3d12a05b8fc92c6def575c79864", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc712abf045f954314de6c463816ecfbde58ba71/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc712abf045f954314de6c463816ecfbde58ba71/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cc712abf045f954314de6c463816ecfbde58ba71", "patch": "@@ -1,3 +1,9 @@\n+2001-10-07  Joseph S. Myers  <jsm28@cam.ac.uk>\n+\n+\t* ChangeLog.2, c-decl.c, config/i386/i386.md, doc/gcc.texi, gcc.c,\n+\tgenmultilib, toplev.c: Fix spelling errors of \"separate\" as\n+\t\"seperate\", and corresponding spelling errors of related words.\n+\n 2001-10-07  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* builtins.c (expand_builtin_setjmp_receiver): Const-ify."}, {"sha": "af7a9f79bae944ad249770d4bd7f83a4a5e2c210", "filename": "gcc/ChangeLog.2", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc712abf045f954314de6c463816ecfbde58ba71/gcc%2FChangeLog.2", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc712abf045f954314de6c463816ecfbde58ba71/gcc%2FChangeLog.2", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog.2?ref=cc712abf045f954314de6c463816ecfbde58ba71", "patch": "@@ -3491,7 +3491,7 @@ Sun Oct 31 20:42:17 1999  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n Sun Oct 31 13:32:15 CET 1999  Marc Lehmann <pcg@goof.com>\n \n-\t* toplev.c (rest_of_compilation): Seperate the setjmp/vfork clobber\n+\t* toplev.c (rest_of_compilation): Separate the setjmp/vfork clobber\n \twarning from -Wuninitialized and put it under -W.\n \t* function.c (uninitialized_vars_warning): Warn only when the\n \tcorresponding flag is set."}, {"sha": "83bbeb31694743a4fefcf8bbee1175e22cbc25f2", "filename": "gcc/ada/5oosinte.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc712abf045f954314de6c463816ecfbde58ba71/gcc%2Fada%2F5oosinte.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc712abf045f954314de6c463816ecfbde58ba71/gcc%2Fada%2F5oosinte.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5oosinte.adb?ref=cc712abf045f954314de6c463816ecfbde58ba71", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  B o d y                                 --\n --                                                                          --\n---                             $Revision: 1.11 $\n+--                             $Revision: 1.1 $\n --                                                                          --\n --            Copyright (C) 1991-2000 Florida State University              --\n --                                                                          --\n@@ -62,7 +62,7 @@ package body System.OS_Interface is\n    --  So we use the standard Ada Duration type which is implemented using\n    --  microseconds.\n \n-   --  Shouldn't the timer be moved to a seperate package ???\n+   --  Shouldn't the timer be moved to a separate package ???\n \n    type Timer is record\n       Handle : aliased HTIMER := NULLHANDLE;"}, {"sha": "67c09bf4b7a5b0f5055e307b4b94a7f24c858385", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc712abf045f954314de6c463816ecfbde58ba71/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc712abf045f954314de6c463816ecfbde58ba71/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=cc712abf045f954314de6c463816ecfbde58ba71", "patch": "@@ -1,3 +1,7 @@\n+2001-10-07  Joseph S. Myers  <jsm28@cam.ac.uk>\n+\n+\t* 5oosinte.adb: Fix spelling error of \"separate\" as \"seperate\".\n+\n 2001-10-05  Geert Bosch  (bosch@gnat.com)\n \n \t* adaint.h: Small formatting fix."}, {"sha": "e35969464deb0918e9e9dbf54beab6eaf1ecff09", "filename": "gcc/c-decl.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc712abf045f954314de6c463816ecfbde58ba71/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc712abf045f954314de6c463816ecfbde58ba71/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=cc712abf045f954314de6c463816ecfbde58ba71", "patch": "@@ -5247,7 +5247,7 @@ parmlist_tags_warning ()\n \t\t IDENTIFIER_POINTER (TREE_PURPOSE (elt)));\n       else\n \t{\n-\t  /* For translation these need to be seperate warnings */\n+\t  /* For translation these need to be separate warnings */\n \t  if (code == RECORD_TYPE)\n \t    warning (\"anonymous struct declared inside parameter list\");\n \t  else if (code == UNION_TYPE)"}, {"sha": "fa18782102fc922e296ee608f7023268ce415f40", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc712abf045f954314de6c463816ecfbde58ba71/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc712abf045f954314de6c463816ecfbde58ba71/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=cc712abf045f954314de6c463816ecfbde58ba71", "patch": "@@ -840,7 +840,7 @@\n ;; it to the specialized integer (18 entry) and fp (36 entry) schedulers.\n ;;\n ;; The load/store queue unit is not attached to the schedulers but\n-;; communicates with all the execution units seperately instead.\n+;; communicates with all the execution units separately instead.\n \n (define_attr \"athlon_decode\" \"direct,vector\"\n   (cond [(eq_attr \"type\" \"call,imul,idiv,other,multi,fcmov,fpspc,str,pop,cld,fcmov\")"}, {"sha": "853e77539c4ee313c932ef2e9bca87e26c271ea5", "filename": "gcc/doc/gcc.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc712abf045f954314de6c463816ecfbde58ba71/gcc%2Fdoc%2Fgcc.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc712abf045f954314de6c463816ecfbde58ba71/gcc%2Fdoc%2Fgcc.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fgcc.texi?ref=cc712abf045f954314de6c463816ecfbde58ba71", "patch": "@@ -3244,7 +3244,7 @@ There are also header files @file{tree.h} and @file{tree.def}\n which define the format of the tree representation.\n \n C preprocessing, for language front ends, that want or require it, is\n-performed by cpplib, which is covered in seperate documentation.  In\n+performed by cpplib, which is covered in separate documentation.  In\n particular, the internals are covered in @xref{Top, ,Cpplib internals,\n cppinternals, Cpplib Internals}.\n "}, {"sha": "321ec1d0b214ff588129bab84d26001fe858b2ef", "filename": "gcc/gcc.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc712abf045f954314de6c463816ecfbde58ba71/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc712abf045f954314de6c463816ecfbde58ba71/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=cc712abf045f954314de6c463816ecfbde58ba71", "patch": "@@ -3445,7 +3445,7 @@ process_command (argc, argv)\n \t\tlen = strlen (value);\n \n \t\t/* Catch the case where the user has forgotten to append a\n-\t\t   directory seperator to the path.  Note, they may be using\n+\t\t   directory separator to the path.  Note, they may be using\n \t\t   -B to add an executable name prefix, eg \"i386-elf-\", in\n \t\t   order to distinguish between multiple installations of\n \t\t   GCC in the same directory.  Hence we must check to see"}, {"sha": "3cbfaa1ebab263d6a52b4212401ce14270c3166d", "filename": "gcc/genmultilib", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc712abf045f954314de6c463816ecfbde58ba71/gcc%2Fgenmultilib", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc712abf045f954314de6c463816ecfbde58ba71/gcc%2Fgenmultilib", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenmultilib?ref=cc712abf045f954314de6c463816ecfbde58ba71", "patch": "@@ -57,8 +57,8 @@\n # the compiler similar to exceptions. The difference being that exclusions\n # allow matching default options that genmultilib does not know about and\n # is done at runtime as opposed to being sorted out at compile time.\n-# Each element in the list is a seperate exclusion rule. Each rule is\n-# a list of options (sans preceding '-') seperated by a '/'. The options\n+# Each element in the list is a separate exclusion rule. Each rule is\n+# a list of options (sans preceding '-') separated by a '/'. The options\n # on the rule are grouped as an AND operation, and all options much match\n # for the rule to exclude a set. Options can be preceded with a '!' to\n # match a logical NOT."}, {"sha": "3fdd1e67ada6d041b539b93ac4038916c454cedd", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc712abf045f954314de6c463816ecfbde58ba71/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc712abf045f954314de6c463816ecfbde58ba71/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=cc712abf045f954314de6c463816ecfbde58ba71", "patch": "@@ -1,3 +1,8 @@\n+2001-10-07  Joseph S. Myers  <jsm28@cam.ac.uk>\n+\n+\t* gcc.c-torture/unsorted/unsorted.exp, lib/file-format.exp: Fix\n+\tspelling errors of \"separate\" as \"seperate\".\n+\n 2001-10-05  Alexandre Oliva  <aoliva@redhat.com>\n \n \t* gcc.c-torture/execute/20010122-1.c: Don't assume alloca() is"}, {"sha": "fa062fd693a592a64b500bf3e1e2b49fbcd986de", "filename": "gcc/testsuite/gcc.c-torture/unsorted/unsorted.exp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc712abf045f954314de6c463816ecfbde58ba71/gcc%2Ftestsuite%2Fgcc.c-torture%2Funsorted%2Funsorted.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc712abf045f954314de6c463816ecfbde58ba71/gcc%2Ftestsuite%2Fgcc.c-torture%2Funsorted%2Funsorted.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Funsorted%2Funsorted.exp?ref=cc712abf045f954314de6c463816ecfbde58ba71", "patch": "@@ -35,7 +35,7 @@ load_lib c-torture.exp\n # This loop will run c-torture on any *.c file found in this directory.\n # If a *.c has a corresponding *.exp file, then the test is skipped as\n # as the *.exp will drive the test itself.  It is done this way so that\n-# generic tests do not need a seperate .exp for it.  Only the tests that \n+# generic tests do not need a separate .exp for it.  Only the tests that \n # require unique options need their own .exp file.\n #\n "}, {"sha": "a4168b6d61499cd8a2a56da6e80042ae06ab5d53", "filename": "gcc/testsuite/lib/file-format.exp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc712abf045f954314de6c463816ecfbde58ba71/gcc%2Ftestsuite%2Flib%2Ffile-format.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc712abf045f954314de6c463816ecfbde58ba71/gcc%2Ftestsuite%2Flib%2Ffile-format.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ffile-format.exp?ref=cc712abf045f954314de6c463816ecfbde58ba71", "patch": "@@ -19,7 +19,7 @@\n \n # This file defines a proc for determining the file format in use by the\n # target.  This is useful for tests that are only supported by certain file\n-# formats.  This procedure is defined in a seperate file so that it can be\n+# formats.  This procedure is defined in a separate file so that it can be\n # included by other expect library files.\n \n proc gcc_target_object_format { } { "}, {"sha": "1b3487e90105c1b8f307d3cd55865e95569036c2", "filename": "gcc/toplev.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc712abf045f954314de6c463816ecfbde58ba71/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc712abf045f954314de6c463816ecfbde58ba71/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=cc712abf045f954314de6c463816ecfbde58ba71", "patch": "@@ -2728,7 +2728,7 @@ rest_of_compilation (decl)\n \tDECL_DEFER_OUTPUT (decl) = 1;\n \n       if (DECL_INLINE (decl))\n-\t/* DWARF wants seperate debugging info for abstract and\n+\t/* DWARF wants separate debugging info for abstract and\n \t   concrete instances of all inline functions, including those\n \t   declared inline but not inlined, and those inlined even\n \t   though they weren't declared inline.  Conveniently, that's"}, {"sha": "3d5c928c5b2768054f2810420652671663f9ebef", "filename": "libffi/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc712abf045f954314de6c463816ecfbde58ba71/libffi%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc712abf045f954314de6c463816ecfbde58ba71/libffi%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2FChangeLog?ref=cc712abf045f954314de6c463816ecfbde58ba71", "patch": "@@ -1,3 +1,7 @@\n+2001-10-07  Joseph S. Myers  <jsm28@cam.ac.uk>\n+\n+\t* src/x86/ffi.c: Fix spelling error of \"separate\" as \"seperate\".\n+\n 2001-07-16  Rainer Orth  <ro@TechFak.Uni-Bielefeld.DE>\n \n \t* src/x86/sysv.S: Avoid gas-only .balign directive."}, {"sha": "a6e73f711e36a34f951ff336dcdcaa35723acfe1", "filename": "libffi/src/x86/ffi.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc712abf045f954314de6c463816ecfbde58ba71/libffi%2Fsrc%2Fx86%2Fffi.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc712abf045f954314de6c463816ecfbde58ba71/libffi%2Fsrc%2Fx86%2Fffi.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fx86%2Fffi.c?ref=cc712abf045f954314de6c463816ecfbde58ba71", "patch": "@@ -426,7 +426,7 @@ ffi_prep_raw_closure (ffi_raw_closure* closure,\n   FFI_ASSERT (cif->abi == FFI_SYSV);\n \n   // we currently don't support certain kinds of arguments for raw\n-  // closures.  This should be implemented by a seperate assembly language\n+  // closures.  This should be implemented by a separate assembly language\n   // routine, since it would require argument processing, something we\n   // don't do now for performance.\n "}, {"sha": "cd9e847b4435d3e06acd76869e6447f6de02e7cb", "filename": "libjava/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc712abf045f954314de6c463816ecfbde58ba71/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc712abf045f954314de6c463816ecfbde58ba71/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=cc712abf045f954314de6c463816ecfbde58ba71", "patch": "@@ -1,3 +1,11 @@\n+2001-10-07  Joseph S. Myers  <jsm28@cam.ac.uk>\n+\n+\t* defineclass.cc, java/awt/image/ColorModel.java,\n+\tjava/awt/image/SampleModel.java, java/lang/Package.java,\n+\tjava/security/cert/X509Extension.java: Fix spelling errors of\n+\t\"separate\" as \"seperate\", and corresponding spelling errors of\n+\trelated words.\n+\n 2001-10-05  Tom Tromey  <tromey@redhat.com>\n \n \t* java/text/DecimalFormat.java (format): Use localized minus sign"}, {"sha": "e25b106b2d80d8d3e6fd9f10b4d791f567f446d1", "filename": "libjava/defineclass.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc712abf045f954314de6c463816ecfbde58ba71/libjava%2Fdefineclass.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc712abf045f954314de6c463816ecfbde58ba71/libjava%2Fdefineclass.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fdefineclass.cc?ref=cc712abf045f954314de6c463816ecfbde58ba71", "patch": "@@ -46,7 +46,7 @@ static _Jv_Utf8Const *clinit_name = _Jv_makeUtf8Const (\"<clinit>\", 8);\n static _Jv_Utf8Const *init_name = _Jv_makeUtf8Const (\"<init>\", 6);\n \n \n-// these go in some seperate functions, to avoid having _Jv_InitClass\n+// these go in some separate functions, to avoid having _Jv_InitClass\n // inserted all over the place.\n static void throw_internal_error (char *msg)\n \t__attribute__ ((__noreturn__));"}, {"sha": "8df1f3baee11655120e06ac51548620e207930cf", "filename": "libjava/java/awt/image/ColorModel.java", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc712abf045f954314de6c463816ecfbde58ba71/libjava%2Fjava%2Fawt%2Fimage%2FColorModel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc712abf045f954314de6c463816ecfbde58ba71/libjava%2Fjava%2Fawt%2Fimage%2FColorModel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fimage%2FColorModel.java?ref=cc712abf045f954314de6c463816ecfbde58ba71", "patch": "@@ -39,7 +39,7 @@\n  * <li>arrays of unnormalized component samples of single pixel: these\n  * samples are scaled and multiplied according to the color model, but\n  * is otherwise not packed or encoded. Each element of the array is one\n- * seperate component sample. The color model only operate on the\n+ * separate component sample. The color model only operate on the\n  * components from one pixel at a time, but using offsets, allows\n  * manipulation of arrays that contain the components of more than one\n  * pixel.</li>\n@@ -337,7 +337,7 @@ public Object getDataElements(int rgb, Object pixel)\n    * @return arrays of unnormalized component samples of single\n    * pixel.  The scale and multiplication state of the samples are\n    * according to the color model. Each component sample is stored\n-   * as a seperate element in the array.\n+   * as a separate element in the array.\n    */\n   public int[] getComponents(int pixel, int[] components, int offset) {\n     // FIXME: implement\n@@ -358,7 +358,7 @@ public int[] getComponents(int pixel, int[] components, int offset) {\n    * @return arrays of unnormalized component samples of single\n    * pixel.  The scale and multiplication state of the samples are\n    * according to the color model. Each component sample is stored\n-   * as a seperate element in the array.\n+   * as a separate element in the array.\n    */\n   public int[] getComponents(Object pixel, int[] components, int offset)\n   {\n@@ -429,7 +429,7 @@ public float[] getNormalizedComponents(int[] components,\n    * @param arrays of unnormalized component samples of single\n    * pixel.  The scale and multiplication state of the samples are\n    * according to the color model. Each component sample is stored\n-   * as a seperate element in the array.\n+   * as a separate element in the array.\n    *\n    * @return pixel value encoded according to the color model.\n    */"}, {"sha": "132257c0e2e7b12b65e6f55fef23f810bb733319", "filename": "libjava/java/awt/image/SampleModel.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc712abf045f954314de6c463816ecfbde58ba71/libjava%2Fjava%2Fawt%2Fimage%2FSampleModel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc712abf045f954314de6c463816ecfbde58ba71/libjava%2Fjava%2Fawt%2Fimage%2FSampleModel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fimage%2FSampleModel.java?ref=cc712abf045f954314de6c463816ecfbde58ba71", "patch": "@@ -80,7 +80,7 @@ public int[] getPixel(int x, int y, int[] iArray, DataBuffer data)\n    *\n    * This method is provided as a faster alternative to getPixel(),\n    * that can be used when there is no need to decode the pixel into\n-   * seperate sample values.\n+   * separate sample values.\n    *\n    * @param obj An array to return the pixel data in. If null, an\n    * array of the right type and size will be created."}, {"sha": "189d26e611ba6dad17b4347f31eccef90ccc4a82", "filename": "libjava/java/lang/Package.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc712abf045f954314de6c463816ecfbde58ba71/libjava%2Fjava%2Flang%2FPackage.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc712abf045f954314de6c463816ecfbde58ba71/libjava%2Fjava%2Flang%2FPackage.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FPackage.java?ref=cc712abf045f954314de6c463816ecfbde58ba71", "patch": "@@ -44,7 +44,7 @@\n  * specification as implemented by a package. A package is considered\n  * compatible with another version if the version of the specification is\n  * equal or higher then the requested version. Version numbers are represented\n- * as strings of positive numbers seperated by dots (e.g. \"1.2.0\").\n+ * as strings of positive numbers separated by dots (e.g. \"1.2.0\").\n  * The first number is called the major number, the second the minor,\n  * the third the micro, etc. A version is considered higher then another\n  * version if it has a bigger major number then the another version or when"}, {"sha": "a230d0c27cc5304414cd9dcb7fe76bc68b862b95", "filename": "libjava/java/security/cert/X509Extension.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc712abf045f954314de6c463816ecfbde58ba71/libjava%2Fjava%2Fsecurity%2Fcert%2FX509Extension.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc712abf045f954314de6c463816ecfbde58ba71/libjava%2Fjava%2Fsecurity%2Fcert%2FX509Extension.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fsecurity%2Fcert%2FX509Extension.java?ref=cc712abf045f954314de6c463816ecfbde58ba71", "patch": "@@ -95,7 +95,7 @@ This is used for X.509 v3 Certificates and CRL v2 (Certificate\n   /**\n      Returns the DER encoded OCTET string for the specified\n      extension value identified by a OID. The OID is a string\n-     of number seperated by periods. Ex: 12.23.45.67\n+     of number separated by periods. Ex: 12.23.45.67\n   */\n   public byte[] getExtensionValue(String oid);\n "}, {"sha": "a9cd3fc36060d7483a11c4e1cd2e894bf51c0b44", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc712abf045f954314de6c463816ecfbde58ba71/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc712abf045f954314de6c463816ecfbde58ba71/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=cc712abf045f954314de6c463816ecfbde58ba71", "patch": "@@ -1,3 +1,10 @@\n+2001-10-07  Joseph S. Myers  <jsm28@cam.ac.uk>\n+\n+\t* docs/html/22_locale/locale.html, docs/html/faq/index.html: Fix\n+\tspelling errors of \"separate\" as \"seperate\", and corresponding\n+\tspelling errors of related words.\n+\t* docs/html/faq/index.txt: Regenerate.\n+\n 2001-10-05  Phil Edwards  <pme@gcc.gnu.org>\n \n \t* config/cpu/alpha/bits/atomicity.h (__compare_and_swap):  Remove"}, {"sha": "859050f23fabf8914cd26f74cf3bca70b3832b2a", "filename": "libstdc++-v3/docs/html/22_locale/locale.html", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc712abf045f954314de6c463816ecfbde58ba71/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F22_locale%2Flocale.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc712abf045f954314de6c463816ecfbde58ba71/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F22_locale%2Flocale.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F22_locale%2Flocale.html?ref=cc712abf045f954314de6c463816ecfbde58ba71", "patch": "@@ -48,7 +48,7 @@ <h2>\n \n Facets actually implement locale functionality. For instance, a facet\n called numpunct is the data objects that can be used to query for the\n-thousands seperator is in the German locale.\n+thousands separator is in the German locale.\n \n Literally, a facet is strictly defined:\n  - containing "}, {"sha": "8fb5a4b0e27f26e64b2a9a76492700d4cfd402ec", "filename": "libstdc++-v3/docs/html/faq/index.html", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc712abf045f954314de6c463816ecfbde58ba71/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Ffaq%2Findex.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc712abf045f954314de6c463816ecfbde58ba71/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Ffaq%2Findex.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Ffaq%2Findex.html?ref=cc712abf045f954314de6c463816ecfbde58ba71", "patch": "@@ -381,7 +381,7 @@ <h1><a name=\"4_0\">4.0 Known Bugs and Non-Bugs</a></h1>\n    <p>Please read\n       <a href=\"http://gcc.gnu.org/install/configure.html\">the configuration\n       instructions for GCC</a>,\n-      specifically the part about configuring in a seperate build directory,\n+      specifically the part about configuring in a separate build directory,\n       and how strongly recommended it is.  Building in the source directory\n       is fragile, is rarely tested, and tends to break, as in this case.\n       Work has already gone into the source tree to make this less painful"}, {"sha": "66d15a2ce819c2d3391e5d07055003508ad8b723", "filename": "libstdc++-v3/docs/html/faq/index.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc712abf045f954314de6c463816ecfbde58ba71/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Ffaq%2Findex.txt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc712abf045f954314de6c463816ecfbde58ba71/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Ffaq%2Findex.txt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Ffaq%2Findex.txt?ref=cc712abf045f954314de6c463816ecfbde58ba71", "patch": "@@ -298,7 +298,7 @@\n    being found.\n \n    Please  read  [61]the configuration instructions for GCC, specifically\n-   the  part  about  configuring  in  a seperate build directory, and how\n+   the  part  about  configuring  in  a separate build directory, and how\n    strongly  recommended  it  is.  Building  in  the  source directory is\n    fragile,  is  rarely tested, and tends to break, as in this case. Work\n    has  already  gone  into the source tree to make this less painful for"}]}