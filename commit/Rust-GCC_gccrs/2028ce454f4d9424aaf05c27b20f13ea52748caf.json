{"sha": "2028ce454f4d9424aaf05c27b20f13ea52748caf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjAyOGNlNDU0ZjRkOTQyNGFhZjA1YzI3YjIwZjEzZWE1Mjc0OGNhZg==", "commit": {"author": {"name": "Steven G. Kargl", "email": "kargl@gcc.gnu.org", "date": "2019-11-01T16:59:06Z"}, "committer": {"name": "Steven G. Kargl", "email": "kargl@gcc.gnu.org", "date": "2019-11-01T16:59:06Z"}, "message": "decl.c (match_byte_typespec): New function.\n\n2019-11-01  Steven G. Kargl  <kargl@gcc.gnu.org>\n\n\t* decl.c (match_byte_typespec): New function.  Match BYTE type-spec.\n\t(gfc_match_decl_type_spec): Use it.\n\n2019-11-01  Steven G. Kargl  <kargl@gcc.gnu.org>\n\n\t* gfortran.dg/byte_3.f: New test.\n\t* gfortran.dg/byte_4.f90: Ditto.\n\nFrom-SVN: r277715", "tree": {"sha": "baa3c86f200d00f42e71b57b4c79964df4701693", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/baa3c86f200d00f42e71b57b4c79964df4701693"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2028ce454f4d9424aaf05c27b20f13ea52748caf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2028ce454f4d9424aaf05c27b20f13ea52748caf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2028ce454f4d9424aaf05c27b20f13ea52748caf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2028ce454f4d9424aaf05c27b20f13ea52748caf/comments", "author": null, "committer": null, "parents": [{"sha": "c7e3443332f8c97305d401e1a35cd65a15ada235", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7e3443332f8c97305d401e1a35cd65a15ada235", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c7e3443332f8c97305d401e1a35cd65a15ada235"}], "stats": {"total": 78, "additions": 62, "deletions": 16}, "files": [{"sha": "74211ced3fdf1815be7a10d5bc24326b1f607610", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2028ce454f4d9424aaf05c27b20f13ea52748caf/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2028ce454f4d9424aaf05c27b20f13ea52748caf/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=2028ce454f4d9424aaf05c27b20f13ea52748caf", "patch": "@@ -1,3 +1,8 @@\n+2019-11-01  Steven G. Kargl  <kargl@gcc.gnu.org>\n+\n+\t* decl.c (match_byte_typespec): New function.  Match BYTE type-spec.\n+\t(gfc_match_decl_type_spec): Use it.\n+\n 2019-11-01  Steven G. Kargl  <kargl@gcc.gnu.org>\n \n \tPR fortran/90988"}, {"sha": "7858973cc20b5958a6764e2c7b419fc5a75be2aa", "filename": "gcc/fortran/decl.c", "status": "modified", "additions": 36, "deletions": 16, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2028ce454f4d9424aaf05c27b20f13ea52748caf/gcc%2Ffortran%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2028ce454f4d9424aaf05c27b20f13ea52748caf/gcc%2Ffortran%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fdecl.c?ref=2028ce454f4d9424aaf05c27b20f13ea52748caf", "patch": "@@ -3980,6 +3980,38 @@ gfc_get_pdt_instance (gfc_actual_arglist *param_list, gfc_symbol **sym,\n }\n \n \n+/* Match a legacy nonstandard BYTE type-spec.  */\n+\n+static match\n+match_byte_typespec (gfc_typespec *ts)\n+{\n+  if (gfc_match (\" byte\") == MATCH_YES)\n+    {\n+      if (!gfc_notify_std (GFC_STD_GNU, \"BYTE type at %C\"))\n+\treturn MATCH_ERROR;\n+\n+      if (gfc_current_form == FORM_FREE)\n+\t{\n+\t  char c = gfc_peek_ascii_char ();\n+\t  if (!gfc_is_whitespace (c) && c != ',')\n+\t    return MATCH_NO;\n+\t}\n+\n+      if (gfc_validate_kind (BT_INTEGER, 1, true) < 0)\n+\t{\n+\t  gfc_error (\"BYTE type used at %C \"\n+\t\t     \"is not available on the target machine\");\n+\t  return MATCH_ERROR;\n+\t}\n+\n+      ts->type = BT_INTEGER;\n+      ts->kind = 1;\n+      return MATCH_YES;\n+    }\n+  return MATCH_NO;\n+}\n+\n+\n /* Matches a declaration-type-spec (F03:R502).  If successful, sets the ts\n    structure to the matched specification.  This is necessary for FUNCTION and\n    IMPLICIT statements.\n@@ -4012,22 +4044,10 @@ gfc_match_decl_type_spec (gfc_typespec *ts, int implicit_flag)\n   /* Clear the current binding label, in case one is given.  */\n   curr_binding_label = NULL;\n \n-  if (gfc_match (\" byte\") == MATCH_YES)\n-    {\n-      if (!gfc_notify_std (GFC_STD_GNU, \"BYTE type at %C\"))\n-\treturn MATCH_ERROR;\n-\n-      if (gfc_validate_kind (BT_INTEGER, 1, true) < 0)\n-\t{\n-\t  gfc_error (\"BYTE type used at %C \"\n-\t\t     \"is not available on the target machine\");\n-\t  return MATCH_ERROR;\n-\t}\n-\n-      ts->type = BT_INTEGER;\n-      ts->kind = 1;\n-      return MATCH_YES;\n-    }\n+  /* Match BYTE type-spec.  */\n+  m = match_byte_typespec (ts);\n+  if (m != MATCH_NO)\n+    return m;\n \n   m = gfc_match (\" type (\");\n   matched_type = (m == MATCH_YES);"}, {"sha": "8b03bd9913e5f3a8eff7a9032a49ac163f984c28", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2028ce454f4d9424aaf05c27b20f13ea52748caf/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2028ce454f4d9424aaf05c27b20f13ea52748caf/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2028ce454f4d9424aaf05c27b20f13ea52748caf", "patch": "@@ -1,3 +1,8 @@\n+2019-11-01  Steven G. Kargl  <kargl@gcc.gnu.org>\n+\n+\t* gfortran.dg/byte_3.f: New test.\n+\t* gfortran.dg/byte_4.f90: Ditto.\n+\n 2019-11-01  Steven G. Kargl  <kargl@gcc.gnu.org>\n \n \tPR fortran/90988"}, {"sha": "35ee82878fcc613c9e40157b4fb4d5c54e7dd7d5", "filename": "gcc/testsuite/gfortran.dg/byte_3.f", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2028ce454f4d9424aaf05c27b20f13ea52748caf/gcc%2Ftestsuite%2Fgfortran.dg%2Fbyte_3.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2028ce454f4d9424aaf05c27b20f13ea52748caf/gcc%2Ftestsuite%2Fgfortran.dg%2Fbyte_3.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fbyte_3.f?ref=2028ce454f4d9424aaf05c27b20f13ea52748caf", "patch": "@@ -0,0 +1,6 @@\n+c { dg-do run }\n+c { dg-options \"-std=legacy\" }\n+      bytea\n+      a = 1\n+      if (a /= 1 .and. kind(a) /= a) stop 1\n+      end"}, {"sha": "06873e5195ccfd5f54d1e18a768ea410014e38cd", "filename": "gcc/testsuite/gfortran.dg/byte_4.f90", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2028ce454f4d9424aaf05c27b20f13ea52748caf/gcc%2Ftestsuite%2Fgfortran.dg%2Fbyte_4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2028ce454f4d9424aaf05c27b20f13ea52748caf/gcc%2Ftestsuite%2Fgfortran.dg%2Fbyte_4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fbyte_4.f90?ref=2028ce454f4d9424aaf05c27b20f13ea52748caf", "patch": "@@ -0,0 +1,10 @@\n+! { dg-do compile }\n+! { dg-options \"-w\" }\n+      bytea          ! { dg-error \"Unclassifiable statement\" }\n+      byte b\n+      byte :: d\n+      a = 1\n+      b = 1\n+      d = 1\n+      print *, a, b * d\n+      end"}]}