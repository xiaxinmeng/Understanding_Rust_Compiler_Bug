{"sha": "41eba35b08a9bbd1f06b15e74942a94ea838d8cf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDFlYmEzNWIwOGE5YmJkMWYwNmIxNWU3NDk0MmE5NGVhODM4ZDhjZg==", "commit": {"author": {"name": "Geng Qi", "email": "gengqi@linux.alibaba.com", "date": "2021-05-26T03:29:19Z"}, "committer": {"name": "Xianmiao Qu", "email": "xianmiao_qu@c-sky.com", "date": "2021-05-26T06:36:39Z"}, "message": "C-SKY: Support fldrd/fstrd for fpuv2 and fldr.64/fstr.64 for fpuv3.\n\ngcc/ChangeLog:\n\n\t* config/csky/csky.c (ck810_legitimate_index_p): Support\n\t\"base + index\" with DF mode.\n\t* config/csky/constraints.md (\"Y\"): New constraint for memory operands\n\twithout index register.\n\t* config/csky/csky_insn_fpuv2.md (fpuv3_movdf): Use \"Y\" instead of \"m\"\n\twhen mov between memory and general registers, and lower their priority.\n\t* config/csky/csky_insn_fpuv3.md (fpuv2_movdf): Likewise.\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.target/csky/fldrd_fstrd.c: New.\n\t* gcc.target/csky/fpuv3/fldr64_fstr64.c: New.", "tree": {"sha": "7cd3fd1a5f1d348d3500dd9c818417a0b5131f78", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7cd3fd1a5f1d348d3500dd9c818417a0b5131f78"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/41eba35b08a9bbd1f06b15e74942a94ea838d8cf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41eba35b08a9bbd1f06b15e74942a94ea838d8cf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/41eba35b08a9bbd1f06b15e74942a94ea838d8cf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41eba35b08a9bbd1f06b15e74942a94ea838d8cf/comments", "author": {"login": "Geng-Qi-alibaba", "id": 74535016, "node_id": "MDQ6VXNlcjc0NTM1MDE2", "avatar_url": "https://avatars.githubusercontent.com/u/74535016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Geng-Qi-alibaba", "html_url": "https://github.com/Geng-Qi-alibaba", "followers_url": "https://api.github.com/users/Geng-Qi-alibaba/followers", "following_url": "https://api.github.com/users/Geng-Qi-alibaba/following{/other_user}", "gists_url": "https://api.github.com/users/Geng-Qi-alibaba/gists{/gist_id}", "starred_url": "https://api.github.com/users/Geng-Qi-alibaba/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Geng-Qi-alibaba/subscriptions", "organizations_url": "https://api.github.com/users/Geng-Qi-alibaba/orgs", "repos_url": "https://api.github.com/users/Geng-Qi-alibaba/repos", "events_url": "https://api.github.com/users/Geng-Qi-alibaba/events{/privacy}", "received_events_url": "https://api.github.com/users/Geng-Qi-alibaba/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4553b95516176d578aa6ce81499509f6ec099bdb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4553b95516176d578aa6ce81499509f6ec099bdb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4553b95516176d578aa6ce81499509f6ec099bdb"}], "stats": {"total": 62, "additions": 51, "deletions": 11}, "files": [{"sha": "2641ab3961bc53530280a3339c2dcef13f669a01", "filename": "gcc/config/csky/constraints.md", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41eba35b08a9bbd1f06b15e74942a94ea838d8cf/gcc%2Fconfig%2Fcsky%2Fconstraints.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41eba35b08a9bbd1f06b15e74942a94ea838d8cf/gcc%2Fconfig%2Fcsky%2Fconstraints.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fcsky%2Fconstraints.md?ref=41eba35b08a9bbd1f06b15e74942a94ea838d8cf", "patch": "@@ -38,6 +38,10 @@\n   \"Memory operands with base register, index register\"\n   (match_test \"csky_valid_mem_constraint_operand (op, \\\"W\\\")\"))\n \n+(define_memory_constraint \"Y\"\n+  \"Memory operands without index register\"\n+  (not (match_test \"csky_valid_mem_constraint_operand (op, \\\"W\\\")\")))\n+\n (define_constraint \"R\"\n   \"Memory operands whose address is a label_ref\"\n   (and (match_code \"mem\")"}, {"sha": "c0e42a260263e11a2fcafaef0e820616635c8851", "filename": "gcc/config/csky/csky.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41eba35b08a9bbd1f06b15e74942a94ea838d8cf/gcc%2Fconfig%2Fcsky%2Fcsky.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41eba35b08a9bbd1f06b15e74942a94ea838d8cf/gcc%2Fconfig%2Fcsky%2Fcsky.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fcsky%2Fcsky.c?ref=41eba35b08a9bbd1f06b15e74942a94ea838d8cf", "patch": "@@ -3152,7 +3152,8 @@ ck810_legitimate_index_p (machine_mode mode, rtx index, int strict_p)\n   /* The follow index is for ldr instruction, the ldr cannot\n      load dword data, so the mode size should not be larger than\n      4.  */\n-  else if (GET_MODE_SIZE (mode) <= 4)\n+  else if (GET_MODE_SIZE (mode) <= 4\n+\t   || (TARGET_HARD_FLOAT && CSKY_VREG_MODE_P (mode)))\n     {\n       if (is_csky_address_register_rtx_p (index, strict_p))\n \treturn 1;"}, {"sha": "7bab99ea6b3eab9a78926a3ea0729406eeaf1324", "filename": "gcc/config/csky/csky_insn_fpuv2.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41eba35b08a9bbd1f06b15e74942a94ea838d8cf/gcc%2Fconfig%2Fcsky%2Fcsky_insn_fpuv2.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41eba35b08a9bbd1f06b15e74942a94ea838d8cf/gcc%2Fconfig%2Fcsky%2Fcsky_insn_fpuv2.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fcsky%2Fcsky_insn_fpuv2.md?ref=41eba35b08a9bbd1f06b15e74942a94ea838d8cf", "patch": "@@ -480,8 +480,8 @@\n )\n \n (define_insn \"*fpuv2_movdf\"\n-  [(set (match_operand:DF 0 \"nonimmediate_operand\" \"=r,r, r,m, v,?r,Q,v,v,v\")\n-\t(match_operand:DF 1 \"general_operand\"      \" r,m,mF,r,?r, v,v,Q,v,m\"))]\n+  [(set (match_operand:DF 0 \"nonimmediate_operand\" \"=r, v,?r,Q,v,v,v,r, r,Y\")\n+\t(match_operand:DF 1 \"general_operand\"      \" r,?r, v,v,Q,v,m,Y,YF,r\"))]\n   \"CSKY_ISA_FEATURE (fpv2_df)\"\n   \"* return csky_output_movedouble(operands, DFmode);\"\n   [(set (attr \"length\")"}, {"sha": "7b9d4a7e0f417cc50d6ff7bd29f4dd5888cdae4b", "filename": "gcc/config/csky/csky_insn_fpuv3.md", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41eba35b08a9bbd1f06b15e74942a94ea838d8cf/gcc%2Fconfig%2Fcsky%2Fcsky_insn_fpuv3.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41eba35b08a9bbd1f06b15e74942a94ea838d8cf/gcc%2Fconfig%2Fcsky%2Fcsky_insn_fpuv3.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fcsky%2Fcsky_insn_fpuv3.md?ref=41eba35b08a9bbd1f06b15e74942a94ea838d8cf", "patch": "@@ -90,27 +90,27 @@\n )\n \n (define_insn \"*fpv3_movdf\"\n-  [(set (match_operand:DF 0 \"nonimmediate_operand\" \"=r,r, r,m,v,?r,Q,v,v,v, v\")\n-\t(match_operand:DF 1 \"general_operand\"      \" r,m,mF,r,?r,v,v,Q,v,m,Dv\"))]\n+  [(set (match_operand:DF 0 \"nonimmediate_operand\" \"=r, v,?r,Q,v,v,v, v,r, r,Y\")\n+\t(match_operand:DF 1 \"general_operand\"      \" r,?r, v,v,Q,v,m,Dv,Y,YF,r\"))]\n   \"CSKY_ISA_FEATURE(fpv3_df)\"\n   \"*\n   switch (which_alternative)\n     {\n-    case 4:\n+    case 1:\n       if (TARGET_BIG_ENDIAN)\n \treturn \\\"fmtvr.64\\\\t%0, %R1, %1\\\";\n       return \\\"fmtvr.64\\\\t%0, %1, %R1\\\";\n-    case 5:\n+    case 2:\n       if (TARGET_BIG_ENDIAN)\n \treturn \\\"fmfvr.64\\\\t%R0, %0, %1\\\";\n       return \\\"fmfvr.64\\\\t%0, %R0, %1\\\";\n+    case 3:\n+    case 4:\n     case 6:\n-    case 7:\n-    case 9:\n       return fpuv3_output_move(operands);\n-    case 8:\n+    case 5:\n       return \\\"fmov.64\\\\t%0, %1\\\";\n-    case 10:\n+    case 7:\n       return \\\"fmovi.64\\\\t%0, %1\\\";\n     default:\n       return csky_output_movedouble(operands, DFmode);"}, {"sha": "024de18f98c5fcc7bd32679f7538145ffd647a8c", "filename": "gcc/testsuite/gcc.target/csky/fldrd_fstrd.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41eba35b08a9bbd1f06b15e74942a94ea838d8cf/gcc%2Ftestsuite%2Fgcc.target%2Fcsky%2Ffldrd_fstrd.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41eba35b08a9bbd1f06b15e74942a94ea838d8cf/gcc%2Ftestsuite%2Fgcc.target%2Fcsky%2Ffldrd_fstrd.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fcsky%2Ffldrd_fstrd.c?ref=41eba35b08a9bbd1f06b15e74942a94ea838d8cf", "patch": "@@ -0,0 +1,17 @@\n+/* { dg-do compile } */\n+/* { dg-csky-options \"-mcpu=ck810f -O1 -mhard-float\" } */\n+\n+double fldrd (double *pd, int index)\n+{\n+  return pd[index];\n+}\n+\n+/* { dg-final { scan-assembler \"fldrd\" } } */\n+\n+void fstrd (double *pd, int index, double d)\n+{\n+  pd[index] = d;\n+}\n+\n+/* { dg-final { scan-assembler \"fstrd\" } } */\n+"}, {"sha": "cd367e5086502d2a51bd95ffcb03606e1b5fd7a7", "filename": "gcc/testsuite/gcc.target/csky/fpuv3/fldr64_fstr64.c", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41eba35b08a9bbd1f06b15e74942a94ea838d8cf/gcc%2Ftestsuite%2Fgcc.target%2Fcsky%2Ffpuv3%2Ffldr64_fstr64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41eba35b08a9bbd1f06b15e74942a94ea838d8cf/gcc%2Ftestsuite%2Fgcc.target%2Fcsky%2Ffpuv3%2Ffldr64_fstr64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fcsky%2Ffpuv3%2Ffldr64_fstr64.c?ref=41eba35b08a9bbd1f06b15e74942a94ea838d8cf", "patch": "@@ -0,0 +1,18 @@\n+/* { dg-do compile } */\n+/* { dg-skip-if  \"test is specific to ck860f\"  { csky-*-* }  { \"*\" }  { \"-mcpu=ck860*f* -mfloat-abi=hard\" \"-mcpu=ck860*f* -mhard-float\"  }  }  */\n+/* { dg-options \"-O1 -mfpu=fpv3\" } */\n+\n+double fldr64 (double *pd, int index)\n+{\n+  return pd[index];\n+}\n+\n+/* { dg-final { scan-assembler \"fldr.64\" } } */\n+\n+void fstr64 (double *pd, int index, double d)\n+{\n+  pd[index] = d;\n+}\n+\n+/* { dg-final { scan-assembler \"fstr.64\" } } */\n+"}]}