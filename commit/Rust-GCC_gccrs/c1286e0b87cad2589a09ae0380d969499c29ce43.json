{"sha": "c1286e0b87cad2589a09ae0380d969499c29ce43", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzEyODZlMGI4N2NhZDI1ODlhMDlhZTAzODBkOTY5NDk5YzI5Y2U0Mw==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2014-08-19T16:39:52Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@gcc.gnu.org", "date": "2014-08-19T16:39:52Z"}, "message": "BND_TO scaffolding\n\ngcc/\n2014-08-19  David Malcolm  <dmalcolm@redhat.com>\n\n\t* sel-sched-ir.h (BND_TO): insn_t will eventually be an\n\trtx_insn *.  To help with transition, for now, convert from an\n\taccess macro into a pair of functions: BND_TO, returning an\n\trtx_insn *, and...\n\t(SET_BND_TO): New function, for use where BND_TO is used as an\n\tlvalue.\n\n\t* sel-sched-ir.c (blist_add): Update lvalue usage of BND_TO to\n\tSET_BND_TO.\n\t(BND_TO): New function, adding a checked cast.\n\t(SET_BND_TO): New function.\n\n\t* sel-sched.c (move_cond_jump): Update lvalue usage of BND_TO to\n\tSET_BND_TO.\n\t(compute_av_set_on_boundaries): Likewise.\n\n/\n2014-08-19  David Malcolm  <dmalcolm@redhat.com>\n\n\t* rtx-classes-status.txt (TODO): Add SET_BND_TO\n\nFrom-SVN: r214170", "tree": {"sha": "94d0ac625bc92985cbc40fe4a70a2d42ba530966", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/94d0ac625bc92985cbc40fe4a70a2d42ba530966"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c1286e0b87cad2589a09ae0380d969499c29ce43", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1286e0b87cad2589a09ae0380d969499c29ce43", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c1286e0b87cad2589a09ae0380d969499c29ce43", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1286e0b87cad2589a09ae0380d969499c29ce43/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b4e8ceb98c4ec844b4886e61363a70e5a2c6b140", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4e8ceb98c4ec844b4886e61363a70e5a2c6b140", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b4e8ceb98c4ec844b4886e61363a70e5a2c6b140"}], "stats": {"total": 42, "additions": 38, "deletions": 4}, "files": [{"sha": "3265772827c637dfc86c72a3049b6d4e1e796cd8", "filename": "ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1286e0b87cad2589a09ae0380d969499c29ce43/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1286e0b87cad2589a09ae0380d969499c29ce43/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=c1286e0b87cad2589a09ae0380d969499c29ce43", "patch": "@@ -1,3 +1,7 @@\n+2014-08-19  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* rtx-classes-status.txt (TODO): Add SET_BND_TO\n+\n 2014-08-19  David Malcolm  <dmalcolm@redhat.com>\n \n \t* rtx-classes-status.txt (TODO): Add SET_BB_NOTE_LIST."}, {"sha": "f3aea7a0d44f27cfb8a6e6df890de71ce241fd08", "filename": "gcc/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1286e0b87cad2589a09ae0380d969499c29ce43/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1286e0b87cad2589a09ae0380d969499c29ce43/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c1286e0b87cad2589a09ae0380d969499c29ce43", "patch": "@@ -1,3 +1,21 @@\n+2014-08-19  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* sel-sched-ir.h (BND_TO): insn_t will eventually be an\n+\trtx_insn *.  To help with transition, for now, convert from an\n+\taccess macro into a pair of functions: BND_TO, returning an\n+\trtx_insn *, and...\n+\t(SET_BND_TO): New function, for use where BND_TO is used as an\n+\tlvalue.\n+\n+\t* sel-sched-ir.c (blist_add): Update lvalue usage of BND_TO to\n+\tSET_BND_TO.\n+\t(BND_TO): New function, adding a checked cast.\n+\t(SET_BND_TO): New function.\n+\n+\t* sel-sched.c (move_cond_jump): Update lvalue usage of BND_TO to\n+\tSET_BND_TO.\n+\t(compute_av_set_on_boundaries): Likewise.\n+\n 2014-08-19  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* config/i386/i386.md (*ctz<mode>2_falsedep_1): Don't clear"}, {"sha": "8e257c509a8b3306d6a83a668fdd1ce4f952cb94", "filename": "gcc/sel-sched-ir.c", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1286e0b87cad2589a09ae0380d969499c29ce43/gcc%2Fsel-sched-ir.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1286e0b87cad2589a09ae0380d969499c29ce43/gcc%2Fsel-sched-ir.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsel-sched-ir.c?ref=c1286e0b87cad2589a09ae0380d969499c29ce43", "patch": "@@ -207,7 +207,7 @@ blist_add (blist_t *lp, insn_t to, ilist_t ptr, deps_t dc)\n   _list_add (lp);\n   bnd = BLIST_BND (*lp);\n \n-  BND_TO (bnd) = to;\n+  SET_BND_TO (bnd) = to;\n   BND_PTR (bnd) = ptr;\n   BND_AV (bnd) = NULL;\n   BND_AV1 (bnd) = NULL;\n@@ -6463,4 +6463,14 @@ rtx& SET_BB_NOTE_LIST (basic_block bb)\n   return SEL_REGION_BB_INFO (bb)->note_list;\n }\n \n+rtx_insn *BND_TO (bnd_t bnd)\n+{\n+  return safe_as_a <rtx_insn *> (bnd->to);\n+}\n+\n+insn_t& SET_BND_TO (bnd_t bnd)\n+{\n+  return bnd->to;\n+}\n+\n #endif"}, {"sha": "ab1f42f3a6c36e5fb44c6b8ee6f23288e0c0bd9e", "filename": "gcc/sel-sched-ir.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1286e0b87cad2589a09ae0380d969499c29ce43/gcc%2Fsel-sched-ir.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1286e0b87cad2589a09ae0380d969499c29ce43/gcc%2Fsel-sched-ir.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsel-sched-ir.h?ref=c1286e0b87cad2589a09ae0380d969499c29ce43", "patch": "@@ -233,7 +233,8 @@ struct _bnd\n   deps_t dc;\n };\n typedef struct _bnd *bnd_t;\n-#define BND_TO(B) ((B)->to)\n+extern rtx_insn *BND_TO (bnd_t bnd);\n+extern insn_t& SET_BND_TO (bnd_t bnd);\n \n /* PTR stands not for pointer as you might think, but as a Path To Root of the\n    current instruction group from boundary B.  */"}, {"sha": "3248629e89d7be2f538b415ad7b775323c97e9ba", "filename": "gcc/sel-sched.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1286e0b87cad2589a09ae0380d969499c29ce43/gcc%2Fsel-sched.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1286e0b87cad2589a09ae0380d969499c29ce43/gcc%2Fsel-sched.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsel-sched.c?ref=c1286e0b87cad2589a09ae0380d969499c29ce43", "patch": "@@ -4954,7 +4954,7 @@ move_cond_jump (rtx insn, bnd_t bnd)\n \n   /* Jump is moved to the boundary.  */\n   next = PREV_INSN (insn);\n-  BND_TO (bnd) = insn;\n+  SET_BND_TO (bnd) = insn;\n \n   ft_edge = find_fallthru_edge_from (block_from);\n   block_next = ft_edge->dest;\n@@ -5095,7 +5095,7 @@ compute_av_set_on_boundaries (fence_t fence, blist_t bnds, av_set_t *av_vliw_p)\n \t{\n   \t  gcc_assert (FENCE_INSN (fence) == BND_TO (bnd));\n \t  FENCE_INSN (fence) = bnd_to;\n-\t  BND_TO (bnd) = bnd_to;\n+\t  SET_BND_TO (bnd) = bnd_to;\n \t}\n \n       av_set_clear (&BND_AV (bnd));"}, {"sha": "50daeaca148e9afd85ce255d386b94365bcebbc2", "filename": "rtx-classes-status.txt", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1286e0b87cad2589a09ae0380d969499c29ce43/rtx-classes-status.txt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1286e0b87cad2589a09ae0380d969499c29ce43/rtx-classes-status.txt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/rtx-classes-status.txt?ref=c1286e0b87cad2589a09ae0380d969499c29ce43", "patch": "@@ -17,6 +17,7 @@ TODO: \"Scaffolding\" to be removed\n * DF_REF_INSN\n * SET_BB_HEAD, SET_BB_END, SET_BB_HEADER, SET_BB_FOOTER\n * SET_BB_NOTE_LIST\n+* SET_BND_TO\n * SET_DEP_PRO, SET_DEP_CON\n * SET_NEXT_INSN, SET_PREV_INSN\n * SET_VINSN_INSN_RTX"}]}