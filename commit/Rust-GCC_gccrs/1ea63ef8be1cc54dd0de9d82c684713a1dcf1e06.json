{"sha": "1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWVhNjNlZjhiZTFjYzU0ZGQwZGU5ZDgyYzY4NDcxM2ExZGNmMWUwNg==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2005-09-23T21:31:04Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2005-09-23T21:31:04Z"}, "message": "Imported Classpath 0.18.\n\n\t* sources.am, Makefile.in: Updated.\n\t* Makefile.am (nat_source_files): Removed natProxy.cc.\n\t* java/lang/reflect/natProxy.cc: Removed.\n\t* gnu/classpath/jdwp/VMFrame.java,\n\tgnu/classpath/jdwp/VMIdManager.java,\n\tgnu/classpath/jdwp/VMVirtualMachine.java,\n\tjava/lang/reflect/VMProxy.java: New files.\n\n2005-09-23  Thomas Fitzsimmons  <fitzsim@redhat.com>\n\n\t* scripts/makemake.tcl (verbose): Add gnu/java/awt/peer/qt to BC\n\tlist.\n\n2005-09-23  Thomas Fitzsimmons  <fitzsim@redhat.com>\n\n\t* gnu/java/net/DefaultContentHandlerFactory.java (getContent):\n\tRemove ClasspathToolkit references.\n\n2005-09-23  Thomas Fitzsimmons  <fitzsim@redhat.com>\n\n\t* gnu/awt/xlib/XCanvasPeer.java: Add new peer methods.\n\t* gnu/awt/xlib/XFramePeer.java: Likewise.\n\t* gnu/awt/xlib/XGraphicsConfiguration.java: Likewise.\n\n2005-09-23  Thomas Fitzsimmons  <fitzsim@redhat.com>\n\n\t* Makefile.am (libgcjawt_la_SOURCES): Remove jawt.c.  Add\n\tclasspath/native/jawt/jawt.c.\n\t* Makefile.in: Regenerate.\n\t* jawt.c: Remove file.\n\t* include/Makefile.am (tool_include__HEADERS): Remove jawt.h and\n\tjawt_md.h.  Add ../classpath/include/jawt.h and\n\t../classpath/include/jawt_md.h.\n\t* include/Makefile.in: Regenerate.\n\t* include/jawt.h: Regenerate.\n\t* include/jawt_md.h: Regenerate.\n\nFrom-SVN: r104586", "tree": {"sha": "3ca4b2e68dc14c3128b9c781d23f1d0b1f2bee49", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3ca4b2e68dc14c3128b9c781d23f1d0b1f2bee49"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/comments", "author": null, "committer": null, "parents": [{"sha": "9b044d19517541c95681d35a92dbc81e6e21d94f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b044d19517541c95681d35a92dbc81e6e21d94f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b044d19517541c95681d35a92dbc81e6e21d94f"}], "stats": {"total": 52178, "additions": 36195, "deletions": 15983}, "files": [{"sha": "9b81eeb00d45ef8cba4ccffeb69f7a2ce01e778d", "filename": "libjava/ChangeLog", "status": "modified", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -1,3 +1,43 @@\n+2005-09-23  Tom Tromey  <tromey@redhat.com>\n+\n+\tImported Classpath 0.18.\n+\t* sources.am, Makefile.in: Updated.\n+\t* Makefile.am (nat_source_files): Removed natProxy.cc.\n+\t* java/lang/reflect/natProxy.cc: Removed.\n+\t* gnu/classpath/jdwp/VMFrame.java,\n+\tgnu/classpath/jdwp/VMIdManager.java,\n+\tgnu/classpath/jdwp/VMVirtualMachine.java,\n+\tjava/lang/reflect/VMProxy.java: New files.\n+\n+2005-09-23  Thomas Fitzsimmons  <fitzsim@redhat.com>\n+\n+\t* scripts/makemake.tcl (verbose): Add gnu/java/awt/peer/qt to BC\n+\tlist.\n+\n+2005-09-23  Thomas Fitzsimmons  <fitzsim@redhat.com>\n+\n+\t* gnu/java/net/DefaultContentHandlerFactory.java (getContent):\n+\tRemove ClasspathToolkit references.\n+\n+2005-09-23  Thomas Fitzsimmons  <fitzsim@redhat.com>\n+\n+\t* gnu/awt/xlib/XCanvasPeer.java: Add new peer methods.\n+\t* gnu/awt/xlib/XFramePeer.java: Likewise.\n+\t* gnu/awt/xlib/XGraphicsConfiguration.java: Likewise.\n+\n+2005-09-23  Thomas Fitzsimmons  <fitzsim@redhat.com>\n+\n+\t* Makefile.am (libgcjawt_la_SOURCES): Remove jawt.c.  Add\n+\tclasspath/native/jawt/jawt.c.\n+\t* Makefile.in: Regenerate.\n+\t* jawt.c: Remove file.\n+\t* include/Makefile.am (tool_include__HEADERS): Remove jawt.h and\n+\tjawt_md.h.  Add ../classpath/include/jawt.h and\n+\t../classpath/include/jawt_md.h.\n+\t* include/Makefile.in: Regenerate.\n+\t* include/jawt.h: Regenerate.\n+\t* include/jawt_md.h: Regenerate.\n+\n 2005-09-21  Bryce McKinlay  <mckinlay@redhat.com>\n \n \t* gnu/gcj/runtime/BootClassLoader.java (BootClassLoader): Pass"}, {"sha": "725e5d43ac126e896e275689b19ce7c1df641f9e", "filename": "libjava/Makefile.am", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.am?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -263,7 +263,7 @@ lib_gnu_java_awt_peer_gtk_la_LDFLAGS = \\\n         -version-info `grep -v '^\\#' $(srcdir)/libtool-version` $(LIBGCJ_LD_SYMBOLIC) $(X_LIBS) -lXtst\n lib_gnu_java_awt_peer_gtk_la_LINK = $(LIBLINK)\n \n-libgcjawt_la_SOURCES = jawt.c\n+libgcjawt_la_SOURCES = classpath/native/jawt/jawt.c\n libgcjawt_la_CFLAGS = -I$(srcdir)/classpath/native/jni/classpath \\\n \t$(PEDANTIC_CFLAGS) $(X_CFLAGS)\n ## See jv_convert_LDADD.\n@@ -809,7 +809,6 @@ java/lang/reflect/natArray.cc \\\n java/lang/reflect/natConstructor.cc \\\n java/lang/reflect/natField.cc \\\n java/lang/reflect/natMethod.cc \\\n-java/lang/reflect/natProxy.cc \\\n java/net/natVMNetworkInterface.cc \\\n java/net/natInetAddress.cc \\\n java/nio/channels/natChannels.cc \\"}, {"sha": "a1ef532c95ae45b52fe45430982979f02fafab9e", "filename": "libjava/Makefile.in", "status": "modified", "additions": 146, "deletions": 27, "changes": 173, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.in?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -194,13 +194,13 @@ am__DEPENDENCIES_2 = gnu/awt.lo gnu/awt/j2d.lo gnu/classpath.lo \\\n \tjavax/swing/colorchooser.lo javax/swing/event.lo \\\n \tjavax/swing/filechooser.lo javax/swing/plaf.lo \\\n \tjavax/swing/plaf/basic.lo javax/swing/plaf/metal.lo \\\n-\tjavax/swing/table.lo javax/swing/text.lo \\\n-\tjavax/swing/text/html.lo javax/swing/text/html/parser.lo \\\n-\tjavax/swing/text/rtf.lo javax/swing/tree.lo \\\n-\tjavax/swing/undo.lo javax/transaction.lo \\\n+\tjavax/swing/plaf/multi.lo javax/swing/table.lo \\\n+\tjavax/swing/text.lo javax/swing/text/html.lo \\\n+\tjavax/swing/text/html/parser.lo javax/swing/text/rtf.lo \\\n+\tjavax/swing/tree.lo javax/swing/undo.lo javax/transaction.lo \\\n \tjavax/transaction/xa.lo org/ietf/jgss.lo\n-am__DEPENDENCIES_3 = gnu-java-beans.lo gnu-xml.lo javax-imageio.lo \\\n-\tjavax-xml.lo org-w3c.lo org-xml.lo\n+am__DEPENDENCIES_3 = gnu-java-awt-peer-qt.lo gnu-java-beans.lo \\\n+\tgnu-xml.lo javax-imageio.lo javax-xml.lo org-w3c.lo org-xml.lo\n am__DEPENDENCIES_4 = $(patsubst classpath/resource/%,%,$(addsuffix \\\n \t.lo,$(property_files)))\n am__libgcj_la_SOURCES_DIST = prims.cc jni.cc exception.cc \\\n@@ -238,7 +238,6 @@ am__libgcj_la_SOURCES_DIST = prims.cc jni.cc exception.cc \\\n \tjava/lang/ref/natReference.cc java/lang/reflect/natArray.cc \\\n \tjava/lang/reflect/natConstructor.cc \\\n \tjava/lang/reflect/natField.cc java/lang/reflect/natMethod.cc \\\n-\tjava/lang/reflect/natProxy.cc \\\n \tjava/net/natVMNetworkInterface.cc java/net/natInetAddress.cc \\\n \tjava/nio/channels/natChannels.cc \\\n \tjava/nio/natDirectByteBufferImpl.cc java/text/natCollator.cc \\\n@@ -279,7 +278,6 @@ am__objects_2 = gnu/classpath/natSystemProperties.lo \\\n \tjava/lang/ref/natReference.lo java/lang/reflect/natArray.lo \\\n \tjava/lang/reflect/natConstructor.lo \\\n \tjava/lang/reflect/natField.lo java/lang/reflect/natMethod.lo \\\n-\tjava/lang/reflect/natProxy.lo \\\n \tjava/net/natVMNetworkInterface.lo java/net/natInetAddress.lo \\\n \tjava/nio/channels/natChannels.lo \\\n \tjava/nio/natDirectByteBufferImpl.lo java/text/natCollator.lo \\\n@@ -303,7 +301,7 @@ am_libgcj_la_OBJECTS = prims.lo jni.lo exception.lo stacktrace.lo \\\n \t$(am__objects_9) $(am__objects_10) $(am__objects_11)\n libgcj_la_OBJECTS = $(am_libgcj_la_OBJECTS)\n libgcjawt_la_DEPENDENCIES = lib-gnu-java-awt-peer-gtk.la\n-am_libgcjawt_la_OBJECTS = libgcjawt_la-jawt.lo\n+am_libgcjawt_la_OBJECTS = classpath/native/jawt/libgcjawt_la-jawt.lo\n libgcjawt_la_OBJECTS = $(am_libgcjawt_la_OBJECTS)\n @GTK_AWT_TRUE@am_libgcjawt_la_rpath = -rpath $(toolexeclibdir)\n am_libgij_la_OBJECTS = gij.lo\n@@ -740,7 +738,7 @@ lib_gnu_java_awt_peer_gtk_la_LDFLAGS = \\\n         -version-info `grep -v '^\\#' $(srcdir)/libtool-version` $(LIBGCJ_LD_SYMBOLIC) $(X_LIBS) -lXtst\n \n lib_gnu_java_awt_peer_gtk_la_LINK = $(LIBLINK)\n-libgcjawt_la_SOURCES = jawt.c\n+libgcjawt_la_SOURCES = classpath/native/jawt/jawt.c\n libgcjawt_la_CFLAGS = -I$(srcdir)/classpath/native/jni/classpath \\\n \t$(PEDANTIC_CFLAGS) $(X_CFLAGS)\n \n@@ -814,9 +812,9 @@ gnu/awt/xlib/XToolkit.java\n gnu_awt_xlib_header_files = $(patsubst %.java,%.h,$(gnu_awt_xlib_source_files))\n gnu_classpath_source_files = \\\n classpath/gnu/classpath/Configuration.java \\\n-classpath/gnu/classpath/RawData.java \\\n-classpath/gnu/classpath/RawData32.java \\\n-classpath/gnu/classpath/RawData64.java \\\n+classpath/gnu/classpath/Pointer.java \\\n+classpath/gnu/classpath/Pointer32.java \\\n+classpath/gnu/classpath/Pointer64.java \\\n classpath/gnu/classpath/ServiceFactory.java \\\n classpath/gnu/classpath/ServiceProviderLoadingAction.java \\\n gnu/classpath/SystemProperties.java\n@@ -971,6 +969,7 @@ classpath/gnu/java/awt/peer/gtk/GtkCheckboxMenuItemPeer.java \\\n classpath/gnu/java/awt/peer/gtk/GtkCheckboxPeer.java \\\n classpath/gnu/java/awt/peer/gtk/GtkChoicePeer.java \\\n classpath/gnu/java/awt/peer/gtk/GtkClipboard.java \\\n+classpath/gnu/java/awt/peer/gtk/GtkClipboardNotifier.java \\\n classpath/gnu/java/awt/peer/gtk/GtkComponentPeer.java \\\n classpath/gnu/java/awt/peer/gtk/GtkContainerPeer.java \\\n classpath/gnu/java/awt/peer/gtk/GtkDialogPeer.java \\\n@@ -991,12 +990,58 @@ classpath/gnu/java/awt/peer/gtk/GtkPanelPeer.java \\\n classpath/gnu/java/awt/peer/gtk/GtkPopupMenuPeer.java \\\n classpath/gnu/java/awt/peer/gtk/GtkScrollPanePeer.java \\\n classpath/gnu/java/awt/peer/gtk/GtkScrollbarPeer.java \\\n+classpath/gnu/java/awt/peer/gtk/GtkSelection.java \\\n classpath/gnu/java/awt/peer/gtk/GtkTextAreaPeer.java \\\n classpath/gnu/java/awt/peer/gtk/GtkTextFieldPeer.java \\\n classpath/gnu/java/awt/peer/gtk/GtkToolkit.java \\\n classpath/gnu/java/awt/peer/gtk/GtkVolatileImage.java \\\n classpath/gnu/java/awt/peer/gtk/GtkWindowPeer.java\n \n+gnu_java_awt_peer_qt_source_files = \\\n+classpath/gnu/java/awt/peer/qt/MainQtThread.java \\\n+classpath/gnu/java/awt/peer/qt/NativeWrapper.java \\\n+classpath/gnu/java/awt/peer/qt/QMatrix.java \\\n+classpath/gnu/java/awt/peer/qt/QPainterPath.java \\\n+classpath/gnu/java/awt/peer/qt/QPen.java \\\n+classpath/gnu/java/awt/peer/qt/QtAudioClip.java \\\n+classpath/gnu/java/awt/peer/qt/QtButtonPeer.java \\\n+classpath/gnu/java/awt/peer/qt/QtCanvasPeer.java \\\n+classpath/gnu/java/awt/peer/qt/QtCheckboxPeer.java \\\n+classpath/gnu/java/awt/peer/qt/QtChoicePeer.java \\\n+classpath/gnu/java/awt/peer/qt/QtComponentGraphics.java \\\n+classpath/gnu/java/awt/peer/qt/QtComponentPeer.java \\\n+classpath/gnu/java/awt/peer/qt/QtContainerPeer.java \\\n+classpath/gnu/java/awt/peer/qt/QtDialogPeer.java \\\n+classpath/gnu/java/awt/peer/qt/QtEmbeddedWindowPeer.java \\\n+classpath/gnu/java/awt/peer/qt/QtFileDialogPeer.java \\\n+classpath/gnu/java/awt/peer/qt/QtFontMetrics.java \\\n+classpath/gnu/java/awt/peer/qt/QtFontPeer.java \\\n+classpath/gnu/java/awt/peer/qt/QtFramePeer.java \\\n+classpath/gnu/java/awt/peer/qt/QtGraphics.java \\\n+classpath/gnu/java/awt/peer/qt/QtGraphicsEnvironment.java \\\n+classpath/gnu/java/awt/peer/qt/QtImage.java \\\n+classpath/gnu/java/awt/peer/qt/QtImageConsumer.java \\\n+classpath/gnu/java/awt/peer/qt/QtImageDirectGraphics.java \\\n+classpath/gnu/java/awt/peer/qt/QtImageGraphics.java \\\n+classpath/gnu/java/awt/peer/qt/QtLabelPeer.java \\\n+classpath/gnu/java/awt/peer/qt/QtListPeer.java \\\n+classpath/gnu/java/awt/peer/qt/QtMenuBarPeer.java \\\n+classpath/gnu/java/awt/peer/qt/QtMenuComponentPeer.java \\\n+classpath/gnu/java/awt/peer/qt/QtMenuItemPeer.java \\\n+classpath/gnu/java/awt/peer/qt/QtMenuPeer.java \\\n+classpath/gnu/java/awt/peer/qt/QtPanelPeer.java \\\n+classpath/gnu/java/awt/peer/qt/QtPopupMenuPeer.java \\\n+classpath/gnu/java/awt/peer/qt/QtRepaintThread.java \\\n+classpath/gnu/java/awt/peer/qt/QtScreenDevice.java \\\n+classpath/gnu/java/awt/peer/qt/QtScreenDeviceConfiguration.java \\\n+classpath/gnu/java/awt/peer/qt/QtScrollPanePeer.java \\\n+classpath/gnu/java/awt/peer/qt/QtScrollbarPeer.java \\\n+classpath/gnu/java/awt/peer/qt/QtTextAreaPeer.java \\\n+classpath/gnu/java/awt/peer/qt/QtTextFieldPeer.java \\\n+classpath/gnu/java/awt/peer/qt/QtToolkit.java \\\n+classpath/gnu/java/awt/peer/qt/QtVolatileImage.java \\\n+classpath/gnu/java/awt/peer/qt/QtWindowPeer.java\n+\n gnu_java_beans_source_files = \\\n classpath/gnu/java/beans/BeanInfoEmbryo.java \\\n classpath/gnu/java/beans/DummyAppletContext.java \\\n@@ -2017,6 +2062,8 @@ java_awt_datatransfer_source_files = \\\n classpath/java/awt/datatransfer/Clipboard.java \\\n classpath/java/awt/datatransfer/ClipboardOwner.java \\\n classpath/java/awt/datatransfer/DataFlavor.java \\\n+classpath/java/awt/datatransfer/FlavorEvent.java \\\n+classpath/java/awt/datatransfer/FlavorListener.java \\\n classpath/java/awt/datatransfer/FlavorMap.java \\\n classpath/java/awt/datatransfer/FlavorTable.java \\\n classpath/java/awt/datatransfer/MimeTypeParseException.java \\\n@@ -2522,6 +2569,7 @@ classpath/java/lang/reflect/Proxy.java \\\n classpath/java/lang/reflect/ReflectPermission.java \\\n classpath/java/lang/reflect/Type.java \\\n classpath/java/lang/reflect/UndeclaredThrowableException.java \\\n+java/lang/reflect/VMProxy.java \\\n classpath/java/lang/reflect/WildcardType.java\n \n java_lang_reflect_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(java_lang_reflect_source_files)))\n@@ -3905,6 +3953,7 @@ classpath/javax/swing/plaf/metal/MetalComboBoxIcon.java \\\n classpath/javax/swing/plaf/metal/MetalComboBoxUI.java \\\n classpath/javax/swing/plaf/metal/MetalDesktopIconUI.java \\\n classpath/javax/swing/plaf/metal/MetalIconFactory.java \\\n+classpath/javax/swing/plaf/metal/MetalInternalFrameTitlePane.java \\\n classpath/javax/swing/plaf/metal/MetalInternalFrameUI.java \\\n classpath/javax/swing/plaf/metal/MetalLabelUI.java \\\n classpath/javax/swing/plaf/metal/MetalLookAndFeel.java \\\n@@ -3928,6 +3977,40 @@ classpath/javax/swing/plaf/metal/MetalTreeUI.java \\\n classpath/javax/swing/plaf/metal/MetalUtils.java\n \n javax_swing_plaf_metal_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(javax_swing_plaf_metal_source_files)))\n+javax_swing_plaf_multi_source_files = \\\n+classpath/javax/swing/plaf/multi/MultiButtonUI.java \\\n+classpath/javax/swing/plaf/multi/MultiColorChooserUI.java \\\n+classpath/javax/swing/plaf/multi/MultiComboBoxUI.java \\\n+classpath/javax/swing/plaf/multi/MultiDesktopIconUI.java \\\n+classpath/javax/swing/plaf/multi/MultiDesktopPaneUI.java \\\n+classpath/javax/swing/plaf/multi/MultiFileChooserUI.java \\\n+classpath/javax/swing/plaf/multi/MultiInternalFrameUI.java \\\n+classpath/javax/swing/plaf/multi/MultiLabelUI.java \\\n+classpath/javax/swing/plaf/multi/MultiListUI.java \\\n+classpath/javax/swing/plaf/multi/MultiLookAndFeel.java \\\n+classpath/javax/swing/plaf/multi/MultiMenuBarUI.java \\\n+classpath/javax/swing/plaf/multi/MultiMenuItemUI.java \\\n+classpath/javax/swing/plaf/multi/MultiOptionPaneUI.java \\\n+classpath/javax/swing/plaf/multi/MultiPanelUI.java \\\n+classpath/javax/swing/plaf/multi/MultiPopupMenuUI.java \\\n+classpath/javax/swing/plaf/multi/MultiProgressBarUI.java \\\n+classpath/javax/swing/plaf/multi/MultiRootPaneUI.java \\\n+classpath/javax/swing/plaf/multi/MultiScrollBarUI.java \\\n+classpath/javax/swing/plaf/multi/MultiScrollPaneUI.java \\\n+classpath/javax/swing/plaf/multi/MultiSeparatorUI.java \\\n+classpath/javax/swing/plaf/multi/MultiSliderUI.java \\\n+classpath/javax/swing/plaf/multi/MultiSpinnerUI.java \\\n+classpath/javax/swing/plaf/multi/MultiSplitPaneUI.java \\\n+classpath/javax/swing/plaf/multi/MultiTabbedPaneUI.java \\\n+classpath/javax/swing/plaf/multi/MultiTableHeaderUI.java \\\n+classpath/javax/swing/plaf/multi/MultiTableUI.java \\\n+classpath/javax/swing/plaf/multi/MultiTextUI.java \\\n+classpath/javax/swing/plaf/multi/MultiToolBarUI.java \\\n+classpath/javax/swing/plaf/multi/MultiToolTipUI.java \\\n+classpath/javax/swing/plaf/multi/MultiTreeUI.java \\\n+classpath/javax/swing/plaf/multi/MultiViewportUI.java\n+\n+javax_swing_plaf_multi_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(javax_swing_plaf_multi_source_files)))\n javax_swing_table_source_files = \\\n classpath/javax/swing/table/AbstractTableModel.java \\\n classpath/javax/swing/table/DefaultTableCellRenderer.java \\\n@@ -3943,11 +4026,14 @@ classpath/javax/swing/table/TableModel.java\n javax_swing_table_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(javax_swing_table_source_files)))\n javax_swing_text_source_files = \\\n classpath/javax/swing/text/AbstractDocument.java \\\n+classpath/javax/swing/text/AbstractWriter.java \\\n classpath/javax/swing/text/AttributeSet.java \\\n classpath/javax/swing/text/BadLocationException.java \\\n+classpath/javax/swing/text/BoxView.java \\\n classpath/javax/swing/text/Caret.java \\\n classpath/javax/swing/text/ChangedCharSetException.java \\\n classpath/javax/swing/text/ComponentView.java \\\n+classpath/javax/swing/text/CompositeView.java \\\n classpath/javax/swing/text/DateFormatter.java \\\n classpath/javax/swing/text/DefaultCaret.java \\\n classpath/javax/swing/text/DefaultEditorKit.java \\\n@@ -3958,15 +4044,22 @@ classpath/javax/swing/text/Document.java \\\n classpath/javax/swing/text/DocumentFilter.java \\\n classpath/javax/swing/text/EditorKit.java \\\n classpath/javax/swing/text/Element.java \\\n+classpath/javax/swing/text/ElementIterator.java \\\n classpath/javax/swing/text/FieldView.java \\\n+classpath/javax/swing/text/FlowView.java \\\n classpath/javax/swing/text/GapContent.java \\\n+classpath/javax/swing/text/GlyphView.java \\\n classpath/javax/swing/text/Highlighter.java \\\n+classpath/javax/swing/text/IconView.java \\\n classpath/javax/swing/text/InternationalFormatter.java \\\n classpath/javax/swing/text/JTextComponent.java \\\n classpath/javax/swing/text/Keymap.java \\\n+classpath/javax/swing/text/LabelView.java \\\n classpath/javax/swing/text/LayeredHighlighter.java \\\n+classpath/javax/swing/text/LayoutQueue.java \\\n classpath/javax/swing/text/MutableAttributeSet.java \\\n classpath/javax/swing/text/NavigationFilter.java \\\n+classpath/javax/swing/text/ParagraphView.java \\\n classpath/javax/swing/text/PasswordView.java \\\n classpath/javax/swing/text/PlainDocument.java \\\n classpath/javax/swing/text/PlainView.java \\\n@@ -4453,6 +4546,7 @@ all_packages_source_files = \\\n   javax/swing/plaf.list \\\n   javax/swing/plaf/basic.list \\\n   javax/swing/plaf/metal.list \\\n+  javax/swing/plaf/multi.list \\\n   javax/swing/table.list \\\n   javax/swing/text.list \\\n   javax/swing/text/html.list \\\n@@ -4592,6 +4686,7 @@ ordinary_header_files = \\\n   $(javax_swing_plaf_header_files) \\\n   $(javax_swing_plaf_basic_header_files) \\\n   $(javax_swing_plaf_metal_header_files) \\\n+  $(javax_swing_plaf_multi_header_files) \\\n   $(javax_swing_table_header_files) \\\n   $(javax_swing_text_header_files) \\\n   $(javax_swing_text_html_header_files) \\\n@@ -4604,6 +4699,7 @@ ordinary_header_files = \\\n   $(org_ietf_jgss_header_files)\n \n bc_objects = \\\n+  gnu-java-awt-peer-qt.lo \\\n   gnu-java-beans.lo \\\n   gnu-xml.lo \\\n   javax-imageio.lo \\\n@@ -4734,7 +4830,6 @@ java/lang/reflect/natArray.cc \\\n java/lang/reflect/natConstructor.cc \\\n java/lang/reflect/natField.cc \\\n java/lang/reflect/natMethod.cc \\\n-java/lang/reflect/natProxy.cc \\\n java/net/natVMNetworkInterface.cc \\\n java/net/natInetAddress.cc \\\n java/nio/channels/natChannels.cc \\\n@@ -5161,8 +5256,6 @@ java/lang/reflect/natField.lo: java/lang/reflect/$(am__dirstamp) \\\n \tjava/lang/reflect/$(DEPDIR)/$(am__dirstamp)\n java/lang/reflect/natMethod.lo: java/lang/reflect/$(am__dirstamp) \\\n \tjava/lang/reflect/$(DEPDIR)/$(am__dirstamp)\n-java/lang/reflect/natProxy.lo: java/lang/reflect/$(am__dirstamp) \\\n-\tjava/lang/reflect/$(DEPDIR)/$(am__dirstamp)\n java/net/$(am__dirstamp):\n \t@$(mkdir_p) java/net\n \t@: > java/net/$(am__dirstamp)\n@@ -5235,6 +5328,15 @@ sysdep/dwarf2-backtrace.lo: sysdep/$(am__dirstamp) \\\n \tsysdep/$(DEPDIR)/$(am__dirstamp)\n libgcj.la: $(libgcj_la_OBJECTS) $(libgcj_la_DEPENDENCIES) \n \t$(libgcj_la_LINK) -rpath $(toolexeclibdir) $(libgcj_la_LDFLAGS) $(libgcj_la_OBJECTS) $(libgcj_la_LIBADD) $(LIBS)\n+classpath/native/jawt/$(am__dirstamp):\n+\t@$(mkdir_p) classpath/native/jawt\n+\t@: > classpath/native/jawt/$(am__dirstamp)\n+classpath/native/jawt/$(DEPDIR)/$(am__dirstamp):\n+\t@$(mkdir_p) classpath/native/jawt/$(DEPDIR)\n+\t@: > classpath/native/jawt/$(DEPDIR)/$(am__dirstamp)\n+classpath/native/jawt/libgcjawt_la-jawt.lo:  \\\n+\tclasspath/native/jawt/$(am__dirstamp) \\\n+\tclasspath/native/jawt/$(DEPDIR)/$(am__dirstamp)\n libgcjawt.la: $(libgcjawt_la_OBJECTS) $(libgcjawt_la_DEPENDENCIES) \n \t$(libgcjawt_la_LINK) $(am_libgcjawt_la_rpath) $(libgcjawt_la_LDFLAGS) $(libgcjawt_la_OBJECTS) $(libgcjawt_la_LIBADD) $(LIBS)\n libgij.la: $(libgij_la_OBJECTS) $(libgij_la_DEPENDENCIES) \n@@ -5331,6 +5433,8 @@ uninstall-binSCRIPTS:\n \n mostlyclean-compile:\n \t-rm -f *.$(OBJEXT)\n+\t-rm -f classpath/native/jawt/libgcjawt_la-jawt.$(OBJEXT)\n+\t-rm -f classpath/native/jawt/libgcjawt_la-jawt.lo\n \t-rm -f gnu/classpath/natSystemProperties.$(OBJEXT)\n \t-rm -f gnu/classpath/natSystemProperties.lo\n \t-rm -f gnu/gcj/convert/JIS0208_to_Unicode.$(OBJEXT)\n@@ -5477,8 +5581,6 @@ mostlyclean-compile:\n \t-rm -f java/lang/reflect/natField.lo\n \t-rm -f java/lang/reflect/natMethod.$(OBJEXT)\n \t-rm -f java/lang/reflect/natMethod.lo\n-\t-rm -f java/lang/reflect/natProxy.$(OBJEXT)\n-\t-rm -f java/lang/reflect/natProxy.lo\n \t-rm -f java/net/natInetAddress.$(OBJEXT)\n \t-rm -f java/net/natInetAddress.lo\n \t-rm -f java/net/natVMNetworkInterface.$(OBJEXT)\n@@ -5512,7 +5614,6 @@ distclean-compile:\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gij.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/interpret.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/jni.Plo@am__quote@\n-@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libgcjawt_la-jawt.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/link.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/no-threads.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/nogc.Plo@am__quote@\n@@ -5523,6 +5624,7 @@ distclean-compile:\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/verify.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/win32-threads.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/win32.Plo@am__quote@\n+@AMDEP_TRUE@@am__include@ @am__quote@classpath/native/jawt/$(DEPDIR)/libgcjawt_la-jawt.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@gnu/classpath/$(DEPDIR)/natSystemProperties.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@gnu/gcj/$(DEPDIR)/natCore.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@gnu/gcj/convert/$(DEPDIR)/JIS0208_to_Unicode.Plo@am__quote@\n@@ -5598,7 +5700,6 @@ distclean-compile:\n @AMDEP_TRUE@@am__include@ @am__quote@java/lang/reflect/$(DEPDIR)/natConstructor.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@java/lang/reflect/$(DEPDIR)/natField.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@java/lang/reflect/$(DEPDIR)/natMethod.Plo@am__quote@\n-@AMDEP_TRUE@@am__include@ @am__quote@java/lang/reflect/$(DEPDIR)/natProxy.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@java/net/$(DEPDIR)/natInetAddress.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@java/net/$(DEPDIR)/natVMNetworkInterface.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@java/nio/$(DEPDIR)/natDirectByteBufferImpl.Plo@am__quote@\n@@ -5635,12 +5736,12 @@ distclean-compile:\n @AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n @am__fastdepCC_FALSE@\t$(LTCOMPILE) -c -o $@ $<\n \n-libgcjawt_la-jawt.lo: jawt.c\n-@am__fastdepCC_TRUE@\tif $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgcjawt_la_CFLAGS) $(CFLAGS) -MT libgcjawt_la-jawt.lo -MD -MP -MF \"$(DEPDIR)/libgcjawt_la-jawt.Tpo\" -c -o libgcjawt_la-jawt.lo `test -f 'jawt.c' || echo '$(srcdir)/'`jawt.c; \\\n-@am__fastdepCC_TRUE@\tthen mv -f \"$(DEPDIR)/libgcjawt_la-jawt.Tpo\" \"$(DEPDIR)/libgcjawt_la-jawt.Plo\"; else rm -f \"$(DEPDIR)/libgcjawt_la-jawt.Tpo\"; exit 1; fi\n-@AMDEP_TRUE@@am__fastdepCC_FALSE@\tsource='jawt.c' object='libgcjawt_la-jawt.lo' libtool=yes @AMDEPBACKSLASH@\n+classpath/native/jawt/libgcjawt_la-jawt.lo: classpath/native/jawt/jawt.c\n+@am__fastdepCC_TRUE@\tif $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgcjawt_la_CFLAGS) $(CFLAGS) -MT classpath/native/jawt/libgcjawt_la-jawt.lo -MD -MP -MF \"classpath/native/jawt/$(DEPDIR)/libgcjawt_la-jawt.Tpo\" -c -o classpath/native/jawt/libgcjawt_la-jawt.lo `test -f 'classpath/native/jawt/jawt.c' || echo '$(srcdir)/'`classpath/native/jawt/jawt.c; \\\n+@am__fastdepCC_TRUE@\tthen mv -f \"classpath/native/jawt/$(DEPDIR)/libgcjawt_la-jawt.Tpo\" \"classpath/native/jawt/$(DEPDIR)/libgcjawt_la-jawt.Plo\"; else rm -f \"classpath/native/jawt/$(DEPDIR)/libgcjawt_la-jawt.Tpo\"; exit 1; fi\n+@AMDEP_TRUE@@am__fastdepCC_FALSE@\tsource='classpath/native/jawt/jawt.c' object='classpath/native/jawt/libgcjawt_la-jawt.lo' libtool=yes @AMDEPBACKSLASH@\n @AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n-@am__fastdepCC_FALSE@\t$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgcjawt_la_CFLAGS) $(CFLAGS) -c -o libgcjawt_la-jawt.lo `test -f 'jawt.c' || echo '$(srcdir)/'`jawt.c\n+@am__fastdepCC_FALSE@\t$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgcjawt_la_CFLAGS) $(CFLAGS) -c -o classpath/native/jawt/libgcjawt_la-jawt.lo `test -f 'classpath/native/jawt/jawt.c' || echo '$(srcdir)/'`classpath/native/jawt/jawt.c\n \n .cc.o:\n @am__fastdepCXX_TRUE@\tdepbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\\.o$$||'`; \\\n@@ -5835,6 +5936,7 @@ mostlyclean-libtool:\n \n clean-libtool:\n \t-rm -rf .libs _libs\n+\t-rm -rf classpath/native/jawt/.libs classpath/native/jawt/_libs\n \t-rm -rf gnu/classpath/.libs gnu/classpath/_libs\n \t-rm -rf gnu/gcj/.libs gnu/gcj/_libs\n \t-rm -rf gnu/gcj/convert/.libs gnu/gcj/convert/_libs\n@@ -6223,6 +6325,8 @@ clean-generic:\n \n distclean-generic:\n \t-test -z \"$(CONFIG_CLEAN_FILES)\" || rm -f $(CONFIG_CLEAN_FILES)\n+\t-rm -f classpath/native/jawt/$(DEPDIR)/$(am__dirstamp)\n+\t-rm -f classpath/native/jawt/$(am__dirstamp)\n \t-rm -f gnu/classpath/$(DEPDIR)/$(am__dirstamp)\n \t-rm -f gnu/classpath/$(am__dirstamp)\n \t-rm -f gnu/gcj/$(DEPDIR)/$(am__dirstamp)\n@@ -6286,7 +6390,7 @@ clean-am: clean-binPROGRAMS clean-generic clean-libtool \\\n \n distclean: distclean-recursive\n \t-rm -f $(am__CONFIG_DISTCLEAN_FILES)\n-\t-rm -rf ./$(DEPDIR) gnu/classpath/$(DEPDIR) gnu/gcj/$(DEPDIR) gnu/gcj/convert/$(DEPDIR) gnu/gcj/io/$(DEPDIR) gnu/gcj/runtime/$(DEPDIR) gnu/gcj/tools/gcj_dbtool/$(DEPDIR) gnu/gcj/util/$(DEPDIR) gnu/gcj/xlib/$(DEPDIR) gnu/java/lang/$(DEPDIR) gnu/java/net/$(DEPDIR) gnu/java/net/protocol/core/$(DEPDIR) gnu/java/nio/$(DEPDIR) gnu/java/nio/channels/$(DEPDIR) java/io/$(DEPDIR) java/lang/$(DEPDIR) java/lang/ref/$(DEPDIR) java/lang/reflect/$(DEPDIR) java/net/$(DEPDIR) java/nio/$(DEPDIR) java/nio/channels/$(DEPDIR) java/text/$(DEPDIR) java/util/$(DEPDIR) java/util/logging/$(DEPDIR) java/util/zip/$(DEPDIR) sysdep/$(DEPDIR)\n+\t-rm -rf ./$(DEPDIR) classpath/native/jawt/$(DEPDIR) gnu/classpath/$(DEPDIR) gnu/gcj/$(DEPDIR) gnu/gcj/convert/$(DEPDIR) gnu/gcj/io/$(DEPDIR) gnu/gcj/runtime/$(DEPDIR) gnu/gcj/tools/gcj_dbtool/$(DEPDIR) gnu/gcj/util/$(DEPDIR) gnu/gcj/xlib/$(DEPDIR) gnu/java/lang/$(DEPDIR) gnu/java/net/$(DEPDIR) gnu/java/net/protocol/core/$(DEPDIR) gnu/java/nio/$(DEPDIR) gnu/java/nio/channels/$(DEPDIR) java/io/$(DEPDIR) java/lang/$(DEPDIR) java/lang/ref/$(DEPDIR) java/lang/reflect/$(DEPDIR) java/net/$(DEPDIR) java/nio/$(DEPDIR) java/nio/channels/$(DEPDIR) java/text/$(DEPDIR) java/util/$(DEPDIR) java/util/logging/$(DEPDIR) java/util/zip/$(DEPDIR) sysdep/$(DEPDIR)\n \t-rm -f Makefile\n distclean-am: clean-am distclean-compile distclean-generic \\\n \tdistclean-libtool distclean-local distclean-tags\n@@ -6317,7 +6421,7 @@ installcheck-am:\n maintainer-clean: maintainer-clean-recursive\n \t-rm -f $(am__CONFIG_DISTCLEAN_FILES)\n \t-rm -rf $(top_srcdir)/autom4te.cache\n-\t-rm -rf ./$(DEPDIR) gnu/classpath/$(DEPDIR) gnu/gcj/$(DEPDIR) gnu/gcj/convert/$(DEPDIR) gnu/gcj/io/$(DEPDIR) gnu/gcj/runtime/$(DEPDIR) gnu/gcj/tools/gcj_dbtool/$(DEPDIR) gnu/gcj/util/$(DEPDIR) gnu/gcj/xlib/$(DEPDIR) gnu/java/lang/$(DEPDIR) gnu/java/net/$(DEPDIR) gnu/java/net/protocol/core/$(DEPDIR) gnu/java/nio/$(DEPDIR) gnu/java/nio/channels/$(DEPDIR) java/io/$(DEPDIR) java/lang/$(DEPDIR) java/lang/ref/$(DEPDIR) java/lang/reflect/$(DEPDIR) java/net/$(DEPDIR) java/nio/$(DEPDIR) java/nio/channels/$(DEPDIR) java/text/$(DEPDIR) java/util/$(DEPDIR) java/util/logging/$(DEPDIR) java/util/zip/$(DEPDIR) sysdep/$(DEPDIR)\n+\t-rm -rf ./$(DEPDIR) classpath/native/jawt/$(DEPDIR) gnu/classpath/$(DEPDIR) gnu/gcj/$(DEPDIR) gnu/gcj/convert/$(DEPDIR) gnu/gcj/io/$(DEPDIR) gnu/gcj/runtime/$(DEPDIR) gnu/gcj/tools/gcj_dbtool/$(DEPDIR) gnu/gcj/util/$(DEPDIR) gnu/gcj/xlib/$(DEPDIR) gnu/java/lang/$(DEPDIR) gnu/java/net/$(DEPDIR) gnu/java/net/protocol/core/$(DEPDIR) gnu/java/nio/$(DEPDIR) gnu/java/nio/channels/$(DEPDIR) java/io/$(DEPDIR) java/lang/$(DEPDIR) java/lang/ref/$(DEPDIR) java/lang/reflect/$(DEPDIR) java/net/$(DEPDIR) java/nio/$(DEPDIR) java/nio/channels/$(DEPDIR) java/text/$(DEPDIR) java/util/$(DEPDIR) java/util/logging/$(DEPDIR) java/util/zip/$(DEPDIR) sysdep/$(DEPDIR)\n \t-rm -f Makefile\n maintainer-clean-am: distclean-am maintainer-clean-generic\n \n@@ -6558,6 +6662,11 @@ gnu-java-awt-peer-gtk.lo: $(gnu_java_awt_peer_gtk_source_files)\n \t$(LTGCJCOMPILE) -fjni -findirect-dispatch -c -o gnu-java-awt-peer-gtk.lo @gnu-java-awt-peer-gtk.list\n \t@rm -f gnu-java-awt-peer-gtk.list\n \n+gnu-java-awt-peer-qt.lo: $(gnu_java_awt_peer_qt_source_files)\n+\t@find classpath/lib/gnu/java/awt/peer/qt -name '*.class' > gnu-java-awt-peer-qt.list\n+\t$(LTGCJCOMPILE) -fjni -findirect-dispatch -c -o gnu-java-awt-peer-qt.lo @gnu-java-awt-peer-qt.list\n+\t@rm -f gnu-java-awt-peer-qt.list\n+\n gnu-java-beans.lo: $(gnu_java_beans_source_files)\n \t@find classpath/lib/gnu/java/beans -name '*.class' > gnu-java-beans.list\n \t$(LTGCJCOMPILE) -fjni -findirect-dispatch -c -o gnu-java-beans.lo @gnu-java-beans.list\n@@ -7713,6 +7822,16 @@ javax/swing/plaf/metal.list: $(javax_swing_plaf_metal_source_files)\n \n -include javax/swing/plaf/metal.deps\n \n+javax/swing/plaf/multi.list: $(javax_swing_plaf_multi_source_files)\n+\t@$(mkinstalldirs) $(dir $@)\n+\t@for file in $(javax_swing_plaf_multi_source_files); do \\\n+\t  if test -f $(srcdir)/$$file; then \\\n+\t    echo $(srcdir)/$$file; \\\n+\t  else echo $$file; fi; \\\n+\tdone > javax/swing/plaf/multi.list\n+\n+-include javax/swing/plaf/multi.deps\n+\n javax/swing/table.list: $(javax_swing_table_source_files)\n \t@$(mkinstalldirs) $(dir $@)\n \t@for file in $(javax_swing_table_source_files); do \\"}, {"sha": "51315366e6cb3a05fc1a18cb2ecad8b380a36d43", "filename": "libjava/classpath/.classpath", "status": "modified", "additions": 7, "deletions": 21, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2F.classpath", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2F.classpath", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2F.classpath?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -1,24 +1,10 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <classpath>\n-\t<classpathentry excluding=\"compat/|examples/|external/|gnu/javax/swing/plaf/|test/|testsuite/|vm/reference/\" kind=\"src\" path=\"\">\n-\t\t<attributes>\n-\t\t</attributes>\n-\t</classpathentry>\n-\t<classpathentry kind=\"src\" path=\"vm/reference\">\n-\t\t<attributes>\n-\t\t</attributes>\n-\t</classpathentry>\n-\t<classpathentry kind=\"src\" path=\"external/sax\">\n-\t\t<attributes>\n-\t\t</attributes>\n-\t</classpathentry>\n-\t<classpathentry kind=\"src\" path=\"external/w3c_dom\">\n-\t\t<attributes>\n-\t\t</attributes>\n-\t</classpathentry>\n-\t<classpathentry kind=\"src\" path=\"examples\">\n-\t\t<attributes>\n-\t\t</attributes>\n-\t</classpathentry>\n-\t<classpathentry kind=\"output\" path=\"bin\"/>\n+\t<classpathentry excluding=\"compat/|examples/|external/|gnu/classpath/jdwp/|gnu/javax/swing/plaf/|test/|testsuite/|vm/reference/|resource/\" kind=\"src\" path=\"\"/>\n+\t<classpathentry kind=\"src\" path=\"resource\"/>\n+\t<classpathentry excluding=\"gnu/classpath/jdwp/\" kind=\"src\" path=\"vm/reference\"/>\n+\t<classpathentry kind=\"src\" path=\"external/sax\"/>\n+\t<classpathentry kind=\"src\" path=\"external/w3c_dom\"/>\n+\t<classpathentry kind=\"src\" path=\"examples\"/>\n+\t<classpathentry kind=\"output\" path=\"install/share/classpath\"/>\n </classpath>"}, {"sha": "83b1bb6920274983648c4c61f3884d5feeee41b2", "filename": "libjava/classpath/.cvsignore", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2F.cvsignore", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2F.cvsignore", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2F.cvsignore?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -9,3 +9,4 @@ Makefile\n stamp-h\n stamp-h.in\n autom4te*.cache\n+install"}, {"sha": "575eb7b2506d6e30e444b522575e15282bc85095", "filename": "libjava/classpath/.externalToolBuilders/Configure.launch", "status": "modified", "additions": 2, "deletions": 10, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2F.externalToolBuilders%2FConfigure.launch", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2F.externalToolBuilders%2FConfigure.launch", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2F.externalToolBuilders%2FConfigure.launch?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -1,10 +1,2 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<launchConfiguration type=\"org.eclipse.ui.externaltools.ProgramBuilderLaunchConfigurationType\">\n-<booleanAttribute key=\"org.eclipse.debug.ui.ATTR_LAUNCH_IN_BACKGROUND\" value=\"false\"/>\n-<stringAttribute key=\"org.eclipse.ui.externaltools.ATTR_RUN_BUILD_KINDS\" value=\"full,incremental,\"/>\n-<stringAttribute key=\"org.eclipse.debug.core.ATTR_REFRESH_SCOPE\" value=\"${project}\"/>\n-<stringAttribute key=\"org.eclipse.ui.externaltools.ATTR_WORKING_DIRECTORY\" value=\"${build_project}\"/>\n-<stringAttribute key=\"org.eclipse.ui.externaltools.ATTR_LOCATION\" value=\"${build_project}/configure\"/>\n-<booleanAttribute key=\"org.eclipse.ui.externaltools.ATTR_TRIGGERS_CONFIGURED\" value=\"true\"/>\n-<booleanAttribute key=\"org.eclipse.debug.core.appendEnvironmentVariables\" value=\"true\"/>\n-</launchConfiguration>\n+<?xml version='1.0'?>\n+<launchConfiguration type='org.eclipse.ui.externaltools.ProgramBuilderLaunchConfigurationType'><stringAttribute key='org.eclipse.debug.core.ATTR_REFRESH_SCOPE' value='${project}'/><stringAttribute key='org.eclipse.ui.externaltools.ATTR_RUN_BUILD_KINDS' value='full,incremental,'/><stringAttribute key='org.eclipse.ui.externaltools.ATTR_LOCATION' value='${build_project}/configure'/><stringAttribute key='org.eclipse.ui.externaltools.ATTR_WORKING_DIRECTORY' value='${build_project}'/><booleanAttribute key='org.eclipse.ui.externaltools.ATTR_TRIGGERS_CONFIGURED' value='true'/><stringAttribute key='org.eclipse.ui.externaltools.ATTR_TOOL_ARGUMENTS' value='--prefix=${build_project}/install'/><booleanAttribute key='org.eclipse.debug.ui.ATTR_LAUNCH_IN_BACKGROUND' value='false'/><booleanAttribute key='org.eclipse.debug.core.appendEnvironmentVariables' value='true'/></launchConfiguration>\n\\ No newline at end of file"}, {"sha": "f9372aa49350098ea687745001953c0aa5856998", "filename": "libjava/classpath/.project", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2F.project", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2F.project", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2F.project?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -25,6 +25,26 @@\n \t\t\t\t</dictionary>\n \t\t\t</arguments>\n \t\t</buildCommand>\n+\t\t<buildCommand>\n+\t\t\t<name>org.eclipse.ui.externaltools.ExternalToolBuilder</name>\n+\t\t\t<triggers>full,incremental,</triggers>\n+\t\t\t<arguments>\n+\t\t\t\t<dictionary>\n+\t\t\t\t\t<key>LaunchConfigHandle</key>\n+\t\t\t\t\t<value>&lt;project&gt;/.externalToolBuilders/CreateLocaleData.launch</value>\n+\t\t\t\t</dictionary>\n+\t\t\t</arguments>\n+\t\t</buildCommand>\n+\t\t<buildCommand>\n+\t\t\t<name>org.eclipse.ui.externaltools.ExternalToolBuilder</name>\n+\t\t\t<triggers>full,incremental,</triggers>\n+\t\t\t<arguments>\n+\t\t\t\t<dictionary>\n+\t\t\t\t\t<key>LaunchConfigHandle</key>\n+\t\t\t\t\t<value>&lt;project&gt;/.externalToolBuilders/CompileNative.launch</value>\n+\t\t\t\t</dictionary>\n+\t\t\t</arguments>\n+\t\t</buildCommand>\n \t\t<buildCommand>\n \t\t\t<name>org.eclipse.jdt.core.javabuilder</name>\n \t\t\t<arguments>"}, {"sha": "2f021ea04416431f901bda507dcc42a50d2ecd1c", "filename": "libjava/classpath/AUTHORS", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2FAUTHORS", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2FAUTHORS", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2FAUTHORS?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -20,6 +20,7 @@ Michael Koch (konqueror@gmx.de)\n John Keiser (jkeiser@iname.com)\n John Leuner (jewel@debian.org)\n Warren Levy (warrenl@cygnus.com)\n+Sven de Marothy (sven@physto.se)\n Bryce McKinlay (bryce@waitaki.otago.ac.nz)\n Audrius Meskauskas (audriusa@Bioinformatics.org)\n Aaron M. Renn (arenn@urbanophile.com)"}, {"sha": "6463f49c28d24eeff386e00933d4bcc1163bfb3a", "filename": "libjava/classpath/ChangeLog", "status": "modified", "additions": 5602, "deletions": 0, "changes": 5602, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2FChangeLog?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06"}, {"sha": "bc2bbb5adc45809c599e9b1a5e76c48ba960efa6", "filename": "libjava/classpath/ChangeLog.gcj", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2FChangeLog.gcj", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2FChangeLog.gcj", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2FChangeLog.gcj?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -1,3 +1,7 @@\n+2005-09-23  Tom Tromey  <tromey@redhat.com>\n+\n+\tImported Classpath 0.18.\n+\n 2005-08-23  Tom Tromey  <tromey@redhat.com>\n \n \t* configure: Rebuilt."}, {"sha": "91515076cd3da93cf948e00a5ae08eab8b95b3e2", "filename": "libjava/classpath/INSTALL", "status": "modified", "additions": 21, "deletions": 4, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2FINSTALL", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2FINSTALL", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2FINSTALL?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -1,4 +1,4 @@\n-Installing GNU Classpath - Last updated: January 6, 2005\n+Installing GNU Classpath - Last updated: August 31, 2005\n \n First, this is a development release only! Unless you are interested in\n active development and debugging, or just like running random alpha code,\n@@ -28,11 +28,12 @@ Suggested Software\n \n \tFor building the Java bytecode (.class files), one of these\n \tcompilers are required.  You can select which compiler using\n-\t--with-jikes, --with-gcj or --with-kjc as argument to\n+\t--with-jikes, --with-gcj, --with-ecj or --with-kjc as argument to\n \tconfigure; the present default is gcj.\n \n         - GCJ 3.3+ (part of the GNU GCC package).\n         - IBM jikes 1.19+.  \n+        - Eclipse Compiler for Java 3.1+\n         - The kjc compiler is supported with configure but we have\n           been unable to successfully compile with it.\n \n@@ -48,7 +49,18 @@ Suggested Software\n \tFor building the Cairo GdkGraphics2D backend you need at least\n \tCairo 0.5.0.\n \n-\tFor building the xmlj JAXP implementation (dsabled by default, use\n+\tFor building the Qt AWT peer JNI native libraries you have to\n+\tspecify --enable-qt-peer and need the following library:\n+\n+        - Qt 4.0.1\n+\n+\tPlease note that at the moment most operating systems do not\n+    ship Qt4 by default. We recommend using GNU Classpath' Qt4\n+    support only for its developers and bug reporters. See\n+    http://developer.classpath.org/mediation/ClasspathShowcase\n+    for details on how to get it to work.\n+\n+\tFor building the xmlj JAXP implementation (disabled by default, use\n \tconfigure --enable-xmlj) you need the following installed:\n \t- The XML C library for Gnome (libxml2)\n \t  http://www.xmlsoft.org/\n@@ -74,6 +86,11 @@ gives a complete list.\n   --enable-jni            compile JNI source default=yes\n   --enable-gtk-peer       compile GTK native peers default=yes\n   --enable-gtk-cairo      compile cairo based Graphics2D default=no\n+  --enable-qt-peer        compile Qt4 native peers default=no\n+  --enable-default-toolkit\n+                          fully qualified class name of default AWT toolkit\n+                          default=no\n+  --enable-xmlj           compile native libxml/xslt library default=no\n   --enable-load-library   enable to use JNI native methods default=yes\n   --with-jikes            to compile the class library using jikes\n                           the default is to use gcj\n@@ -83,7 +100,7 @@ gives a complete list.\n                           any compiler warning into a compilation failure\n                           default=no\n   --enable-xmlj           compile native libxml/xslt library default=no\n-  --with-gjdoc\t\t  generate documentation using gjdoc default=no\n+  --with-gjdoc\t\t      generate documentation using gjdoc default=no\n   --with-jay              Regenerate the parsers with jay must be given the\n                           path to the jay executable\n "}, {"sha": "24813e3087f8bffe79b7ca900b0856018b18db58", "filename": "libjava/classpath/Makefile.am", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2FMakefile.am?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -4,6 +4,7 @@\n SUBDIRS = lib doc external include native resource scripts $(EXAMPLESDIR)\n DIST_SUBDIRS = lib doc external include native resource scripts examples\n \n+## GCJ LOCAL: we need an extra -I here.\n ACLOCAL_AMFLAGS = -I m4 -I ../..\n \n native: lib"}, {"sha": "e62746e4cbffbf5b599ae8269f27f6f868afb4d3", "filename": "libjava/classpath/Makefile.in", "status": "modified", "additions": 19, "deletions": 20, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2FMakefile.in?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -1,8 +1,8 @@\n-# Makefile.in generated by automake 1.9.5 from Makefile.am.\n+# Makefile.in generated by automake 1.9.3 from Makefile.am.\n # @configure_input@\n \n # Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,\n-# 2003, 2004, 2005  Free Software Foundation, Inc.\n+# 2003, 2004  Free Software Foundation, Inc.\n # This Makefile.in is free software; the Free Software Foundation\n # gives unlimited permission to copy and/or distribute it,\n # with or without modifications, as long as this notice is preserved.\n@@ -107,8 +107,14 @@ CREATE_JNI_HEADERS_FALSE = @CREATE_JNI_HEADERS_FALSE@\n CREATE_JNI_HEADERS_TRUE = @CREATE_JNI_HEADERS_TRUE@\n CREATE_JNI_LIBRARIES_FALSE = @CREATE_JNI_LIBRARIES_FALSE@\n CREATE_JNI_LIBRARIES_TRUE = @CREATE_JNI_LIBRARIES_TRUE@\n+CREATE_QT_PEER_LIBRARIES_FALSE = @CREATE_QT_PEER_LIBRARIES_FALSE@\n+CREATE_QT_PEER_LIBRARIES_TRUE = @CREATE_QT_PEER_LIBRARIES_TRUE@\n CREATE_XMLJ_LIBRARY_FALSE = @CREATE_XMLJ_LIBRARY_FALSE@\n CREATE_XMLJ_LIBRARY_TRUE = @CREATE_XMLJ_LIBRARY_TRUE@\n+CXX = @CXX@\n+CXXCPP = @CXXCPP@\n+CXXDEPMODE = @CXXDEPMODE@\n+CXXFLAGS = @CXXFLAGS@\n CYGPATH_W = @CYGPATH_W@\n DATE = @DATE@\n DEFS = @DEFS@\n@@ -170,6 +176,7 @@ MAINTAINER_MODE_FALSE = @MAINTAINER_MODE_FALSE@\n MAINTAINER_MODE_TRUE = @MAINTAINER_MODE_TRUE@\n MAKEINFO = @MAKEINFO@\n MKDIR = @MKDIR@\n+MOC = @MOC@\n OBJEXT = @OBJEXT@\n PACKAGE = @PACKAGE@\n PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@\n@@ -181,12 +188,13 @@ PANGOFT2_CFLAGS = @PANGOFT2_CFLAGS@\n PANGOFT2_LIBS = @PANGOFT2_LIBS@\n PATH_SEPARATOR = @PATH_SEPARATOR@\n PKG_CONFIG = @PKG_CONFIG@\n+QT_CFLAGS = @QT_CFLAGS@\n+QT_LIBS = @QT_LIBS@\n RANLIB = @RANLIB@\n REGEN_PARSERS_FALSE = @REGEN_PARSERS_FALSE@\n REGEN_PARSERS_TRUE = @REGEN_PARSERS_TRUE@\n REMOVE = @REMOVE@\n SET_MAKE = @SET_MAKE@\n-SH = @SH@\n SHELL = @SHELL@\n STRICT_WARNING_CFLAGS = @STRICT_WARNING_CFLAGS@\n STRIP = @STRIP@\n@@ -208,10 +216,13 @@ X_LIBS = @X_LIBS@\n X_PRE_LIBS = @X_PRE_LIBS@\n ZIP = @ZIP@\n ac_ct_CC = @ac_ct_CC@\n+ac_ct_CXX = @ac_ct_CXX@\n ac_ct_RANLIB = @ac_ct_RANLIB@\n ac_ct_STRIP = @ac_ct_STRIP@\n am__fastdepCC_FALSE = @am__fastdepCC_FALSE@\n am__fastdepCC_TRUE = @am__fastdepCC_TRUE@\n+am__fastdepCXX_FALSE = @am__fastdepCXX_FALSE@\n+am__fastdepCXX_TRUE = @am__fastdepCXX_TRUE@\n am__include = @am__include@\n am__leading_dot = @am__leading_dot@\n am__quote = @am__quote@\n@@ -316,13 +327,7 @@ uninstall-info-am:\n #     (which will cause the Makefiles to be regenerated when you run `make');\n # (2) otherwise, pass the desired values on the `make' command line.\n $(RECURSIVE_TARGETS):\n-\t@failcom='exit 1'; \\\n-\tfor f in x $$MAKEFLAGS; do \\\n-\t  case $$f in \\\n-\t    *=* | --[!k]*);; \\\n-\t    *k*) failcom='fail=yes';; \\\n-\t  esac; \\\n-\tdone; \\\n+\t@set fnord $$MAKEFLAGS; amf=$$2; \\\n \tdot_seen=no; \\\n \ttarget=`echo $@ | sed s/-recursive//`; \\\n \tlist='$(SUBDIRS)'; for subdir in $$list; do \\\n@@ -334,21 +339,15 @@ $(RECURSIVE_TARGETS):\n \t    local_target=\"$$target\"; \\\n \t  fi; \\\n \t  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \\\n-\t  || eval $$failcom; \\\n+\t   || case \"$$amf\" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \\\n \tdone; \\\n \tif test \"$$dot_seen\" = \"no\"; then \\\n \t  $(MAKE) $(AM_MAKEFLAGS) \"$$target-am\" || exit 1; \\\n \tfi; test -z \"$$fail\"\n \n mostlyclean-recursive clean-recursive distclean-recursive \\\n maintainer-clean-recursive:\n-\t@failcom='exit 1'; \\\n-\tfor f in x $$MAKEFLAGS; do \\\n-\t  case $$f in \\\n-\t    *=* | --[!k]*);; \\\n-\t    *k*) failcom='fail=yes';; \\\n-\t  esac; \\\n-\tdone; \\\n+\t@set fnord $$MAKEFLAGS; amf=$$2; \\\n \tdot_seen=no; \\\n \tcase \"$@\" in \\\n \t  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \\\n@@ -369,7 +368,7 @@ maintainer-clean-recursive:\n \t    local_target=\"$$target\"; \\\n \t  fi; \\\n \t  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \\\n-\t  || eval $$failcom; \\\n+\t   || case \"$$amf\" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \\\n \tdone && test -z \"$$fail\"\n tags-recursive:\n \tlist='$(SUBDIRS)'; for subdir in $$list; do \\\n@@ -444,7 +443,7 @@ distclean-tags:\n distdir: $(DISTFILES)\n \t$(am__remove_distdir)\n \tmkdir $(distdir)\n-\t$(mkdir_p) $(distdir)/../.. $(distdir)/gnu/classpath $(distdir)/lib $(distdir)/m4 $(distdir)/scripts\n+\t$(mkdir_p) $(distdir)/../.. $(distdir)/examples $(distdir)/gnu/classpath $(distdir)/lib $(distdir)/m4 $(distdir)/scripts\n \t@srcdirstrip=`echo \"$(srcdir)\" | sed 's|.|.|g'`; \\\n \ttopsrcdirstrip=`echo \"$(top_srcdir)\" | sed 's|.|.|g'`; \\\n \tlist='$(DISTFILES)'; for file in $$list; do \\"}, {"sha": "4d91852596385454230316ebc4c162de893c8fce", "filename": "libjava/classpath/NEWS", "status": "modified", "additions": 83, "deletions": 0, "changes": 83, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2FNEWS", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2FNEWS", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2FNEWS?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -1,3 +1,86 @@\n+New in release 0.18 (Sep 6, 2005)\n+\n+* GNU JAWT implementation, the AWT Native Interface, which allows direct\n+  access to native screen resources from within a Canvas's paint method.\n+  GNU Classpath Examples comes with a Demo, see examples/README.\n+* awt.datatransfer updated to 1.5 with supports for FlavorEvents.\n+  The gtk+ awt peers now allow copy/paste of text, images, uris/files\n+  and serialized objects with other applications and tracking\n+  clipboard change events with gtk+ 2.6 (for gtk+ 2.4 only text and\n+  serialized objects are supported). A GNU Classpath Examples\n+  datatransfer Demo was added to show the new functionality.\n+* org.omg.PortableInterceptor and related functionality in other packages\n+  is now implemented:\n+    - The sever and client interceptors work as required since 1.4.\n+    - The IOR interceptor works as needed for 1.5. \n+* The org.omg.DynamicAny package is completed and passes the prepared tests.\n+* The Portable Object Adapter should now support the output of the\n+  recent IDL to java compilers. These compilers now generate servants and \n+  not CORBA objects as before, making the output depended on the existing \n+  POA implementation. Completing POA means that such code can already be \n+  tried to run on Classpath. Our POA is tested for the following usager\n+  scenarios:\n+    - POA converts servant to the CORBA object.\n+    - Servant provides to the CORBA object.\n+    - POA activates new CORBA object with the given Object Id (byte array) \n+      that is later accessible for the servant.\n+    - During the first call, the ServantActivator provides servant for this \n+      and all subsequent calls on the current object.\n+    - During each call, the ServantLocator provides servant for this call\n+      only.\n+    - ServantLocator or ServantActivator forwards call to another server.\n+    - POA has a single servant, responsible for all objects.\n+    - POA has a default servant, but some objects are explicitly connected \n+      to they specific servants.\n+  The POA is verified using tests from the former cost.omg.org.      \n+* The javax.swing.plaf.multi.* package is now implemented.\n+* Editing and several key actions for JTree and JTable were implemented.\n+* Lots of icons and look and feel improvements for Free Swing basic and\n+  metal themes were added.  Try running the GNU Classpath Swing Demo in\n+  examples (gnu.classpath.examples.swing.Demo) with:\n+  -Dswing.defaultlaf=javax.swing.plaf.basic.BasicLookAndFeel\n+  -Dswing.defaultlaf=javax.swing.plaf.metal.MetalLookAndFeel\n+* Start of styled text capabilites for java.swing.text.\n+* NIO FileChannel.map implementation, fast bulk put implementation for\n+  DirectByteBuffer (speeds up this method 10x).\n+* Split gtk+ awt peers event handling in two threads and improve gdk lock\n+  handling (solves several AWT lock ups).\n+* Speed up awt Image loading.\n+* Updated TimeZone data against Olson tzdata2005l.\n+* Make zip and jar UTF-8 \"clean\".\n+* \"native\" code  builds and compiles (warning free) on Darwin and Solaris.\n+\n+Runtime interface changes:\n+\n+* All native resource \"pointers\" in the VM interface classes are now exposed\n+  as gnu.classpath.Pointer objects. This might impact runtimes that\n+  optimize and support java.nio.DirectByteBuffers. Creating these classes\n+  and accessing the contents as void * pointers for the native reference JNI\n+  implementation is done through the JCL_NewRawDataObject and JCL_GetRawData\n+  functions.\n+* Simplified the Class/VMClass interface.\n+* Removed loadedClasses map from ClassLoader. It's now the VMs responsibility\n+  to manage the list of defined and loaded classes for each class loader.\n+* Moved native methods from java.lang.reflect.Proxy to VMProxy.\n+* Added hook to VMClassLoader to allow VM to do class caching.\n+\n+New Untested/Disabled Features:\n+\n+  The following new features are included, but not ready for production\n+  yet. They are explicitly disabled and not supported. But if you want\n+  to help with the development of these new features we are interested\n+  in feedback. You will have to explicitly enable them to try them out\n+  (and they will most likely contain bugs). If you are interested in any\n+  of these then please join the mailing-list and follow development in\n+  CVS.\n+\n+* QT4 AWT peers, enable by giving configure --enable-qt-peer.\n+* JDWP framework, enable by deleting the jdwp references from\n+  lib/standard.omit and vm/reference/standard.omit. No default\n+  implementation is provided. Work is being done on gcj/gij integration.\n+* StAX java.xml.stream, enable by deleting the gnu.xml.stream and\n+  java.xml.stream references in lib/standard.omit.\n+\n New in release 0.17 (Jul 15, 2005)\n \n * gnu.xml fix for nodes created outside a namespace context."}, {"sha": "27e22dcceb29f7a6ad5cf7aed6bc9bb93d4e0f6d", "filename": "libjava/classpath/README", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2FREADME", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2FREADME", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2FREADME?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -1,4 +1,4 @@\n-GNU Classpath README - Last updated: Jul 9, 2004\n+GNU Classpath README - Last updated: August 31, 2005\n \n GNU Classpath, Essential Libraries for Java is a project to create a\n free software implementation of the core class libraries for the java\n@@ -55,7 +55,8 @@ some of which synchronizes with the Classpath CVS head every couple of weeks:\n \t* IKVM.NET\t(http://www.ikvm.net/)\n \t* JC\t\t(http://jcvm.sourceforge.net/)\n \t* JNode\t\t(http://jnode.sourceforge.net/)\n-\t* SableVM       (http://www.sablevm.org)\n+\t* MysaifuVM\t(http://www2s.biglobe.ne.jp/~dat/java/project/jvm/)\n+\t* SableVM\t(http://www.sablevm.org)\n \n See for a more complete list of GNU Classpath based projects the\n GNU Classpath website: http://www.gnu.org/software/classpath/stories.html"}, {"sha": "87230943de0d0f0998b3f95271c5f7f8996c528e", "filename": "libjava/classpath/aclocal.m4", "status": "modified", "additions": 312, "deletions": 120, "changes": 432, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Faclocal.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Faclocal.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Faclocal.m4?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -1,7 +1,7 @@\n-# generated automatically by aclocal 1.9.5 -*- Autoconf -*-\n+# generated automatically by aclocal 1.9.3 -*- Autoconf -*-\n \n-# Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004,\n-# 2005  Free Software Foundation, Inc.\n+# Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004\n+# Free Software Foundation, Inc.\n # This file is free software; the Free Software Foundation\n # gives unlimited permission to copy and/or distribute it,\n # with or without modifications, as long as this notice is preserved.\n@@ -11,11 +11,23 @@\n # even the implied warranty of MERCHANTABILITY or FITNESS FOR A\n # PARTICULAR PURPOSE.\n \n-# Copyright (C) 2002, 2003, 2005  Free Software Foundation, Inc.\n-#\n-# This file is free software; the Free Software Foundation\n-# gives unlimited permission to copy and/or distribute it,\n-# with or without modifications, as long as this notice is preserved.\n+#                                                        -*- Autoconf -*-\n+# Copyright (C) 2002, 2003  Free Software Foundation, Inc.\n+# Generated from amversion.in; do not edit by hand.\n+\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 2, or (at your option)\n+# any later version.\n+\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+\n+# You should have received a copy of the GNU General Public License\n+# along with this program; if not, write to the Free Software\n+# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA\n \n # AM_AUTOMAKE_VERSION(VERSION)\n # ----------------------------\n@@ -28,15 +40,26 @@ AC_DEFUN([AM_AUTOMAKE_VERSION], [am__api_version=\"1.9\"])\n # Call AM_AUTOMAKE_VERSION so it can be traced.\n # This function is AC_REQUIREd by AC_INIT_AUTOMAKE.\n AC_DEFUN([AM_SET_CURRENT_AUTOMAKE_VERSION],\n-\t [AM_AUTOMAKE_VERSION([1.9.5])])\n+\t [AM_AUTOMAKE_VERSION([1.9.3])])\n \n-# AM_AUX_DIR_EXPAND                                         -*- Autoconf -*-\n+# AM_AUX_DIR_EXPAND\n \n-# Copyright (C) 2001, 2003, 2005  Free Software Foundation, Inc.\n-#\n-# This file is free software; the Free Software Foundation\n-# gives unlimited permission to copy and/or distribute it,\n-# with or without modifications, as long as this notice is preserved.\n+# Copyright (C) 2001, 2003 Free Software Foundation, Inc.\n+\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 2, or (at your option)\n+# any later version.\n+\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+\n+# You should have received a copy of the GNU General Public License\n+# along with this program; if not, write to the Free Software\n+# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA\n+# 02111-1307, USA.\n \n # For projects using AC_CONFIG_AUX_DIR([foo]), Autoconf sets\n # $ac_aux_dir to `$srcdir/foo'.  In other projects, it is set to\n@@ -83,16 +106,26 @@ AC_PREREQ([2.50])dnl\n am_aux_dir=`cd $ac_aux_dir && pwd`\n ])\n \n-# AM_CONDITIONAL                                            -*- Autoconf -*-\n+# AM_CONDITIONAL                                              -*- Autoconf -*-\n \n-# Copyright (C) 1997, 2000, 2001, 2003, 2004, 2005\n-# Free Software Foundation, Inc.\n-#\n-# This file is free software; the Free Software Foundation\n-# gives unlimited permission to copy and/or distribute it,\n-# with or without modifications, as long as this notice is preserved.\n+# Copyright (C) 1997, 2000, 2001, 2003, 2004 Free Software Foundation, Inc.\n+\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 2, or (at your option)\n+# any later version.\n+\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+\n+# You should have received a copy of the GNU General Public License\n+# along with this program; if not, write to the Free Software\n+# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA\n+# 02111-1307, USA.\n \n-# serial 7\n+# serial 6\n \n # AM_CONDITIONAL(NAME, SHELL-CONDITION)\n # -------------------------------------\n@@ -116,15 +149,26 @@ AC_CONFIG_COMMANDS_PRE(\n Usually this means the macro was only invoked conditionally.]])\n fi])])\n \n+# serial 7\t\t\t\t\t\t-*- Autoconf -*-\n \n-# Copyright (C) 1999, 2000, 2001, 2002, 2003, 2004, 2005\n+# Copyright (C) 1999, 2000, 2001, 2002, 2003, 2004\n # Free Software Foundation, Inc.\n-#\n-# This file is free software; the Free Software Foundation\n-# gives unlimited permission to copy and/or distribute it,\n-# with or without modifications, as long as this notice is preserved.\n \n-# serial 8\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 2, or (at your option)\n+# any later version.\n+\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+\n+# You should have received a copy of the GNU General Public License\n+# along with this program; if not, write to the Free Software\n+# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA\n+# 02111-1307, USA.\n+\n \n # There are a few dirty hacks below to avoid letting `AC_PROG_CC' be\n # written in clear, in which case automake, when reading aclocal.m4,\n@@ -133,6 +177,7 @@ fi])])\n # CC etc. in the Makefile, will ask for an AC_PROG_CC use...\n \n \n+\n # _AM_DEPENDENCIES(NAME)\n # ----------------------\n # See how the compiler implements dependency checking.\n@@ -272,16 +317,27 @@ AM_CONDITIONAL([AMDEP], [test \"x$enable_dependency_tracking\" != xno])\n AC_SUBST([AMDEPBACKSLASH])\n ])\n \n-# Generate code to set up dependency tracking.              -*- Autoconf -*-\n+# Generate code to set up dependency tracking.   -*- Autoconf -*-\n \n-# Copyright (C) 1999, 2000, 2001, 2002, 2003, 2004, 2005\n-# Free Software Foundation, Inc.\n-#\n-# This file is free software; the Free Software Foundation\n-# gives unlimited permission to copy and/or distribute it,\n-# with or without modifications, as long as this notice is preserved.\n+# Copyright (C) 1999, 2000, 2001, 2002, 2003, 2004\n+#   Free Software Foundation, Inc.\n+\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 2, or (at your option)\n+# any later version.\n+\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+\n+# You should have received a copy of the GNU General Public License\n+# along with this program; if not, write to the Free Software\n+# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA\n+# 02111-1307, USA.\n \n-#serial 3\n+#serial 2\n \n # _AM_OUTPUT_DEPENDENCY_COMMANDS\n # ------------------------------\n@@ -340,19 +396,30 @@ AC_DEFUN([AM_OUTPUT_DEPENDENCY_COMMANDS],\n      [AMDEP_TRUE=\"$AMDEP_TRUE\" ac_aux_dir=\"$ac_aux_dir\"])\n ])\n \n-# Do all the work for Automake.                             -*- Autoconf -*-\n+# Do all the work for Automake.                            -*- Autoconf -*-\n+\n+# This macro actually does too much some checks are only needed if\n+# your package does certain things.  But this isn't really a big deal.\n \n-# Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005\n+# Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004\n # Free Software Foundation, Inc.\n-#\n-# This file is free software; the Free Software Foundation\n-# gives unlimited permission to copy and/or distribute it,\n-# with or without modifications, as long as this notice is preserved.\n \n-# serial 12\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 2, or (at your option)\n+# any later version.\n \n-# This macro actually does too much.  Some checks are only needed if\n-# your package does certain things.  But this isn't really a big deal.\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+\n+# You should have received a copy of the GNU General Public License\n+# along with this program; if not, write to the Free Software\n+# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA\n+# 02111-1307, USA.\n+\n+# serial 11\n \n # AM_INIT_AUTOMAKE(PACKAGE, VERSION, [NO-DEFINE])\n # AM_INIT_AUTOMAKE([OPTIONS])\n@@ -454,27 +521,51 @@ for _am_header in $config_headers :; do\n done\n echo \"timestamp for $1\" >`AS_DIRNAME([$1])`/stamp-h[]$_am_stamp_count])\n \n-# Copyright (C) 2001, 2003, 2005  Free Software Foundation, Inc.\n-#\n-# This file is free software; the Free Software Foundation\n-# gives unlimited permission to copy and/or distribute it,\n-# with or without modifications, as long as this notice is preserved.\n-\n # AM_PROG_INSTALL_SH\n # ------------------\n # Define $install_sh.\n+\n+# Copyright (C) 2001, 2003 Free Software Foundation, Inc.\n+\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 2, or (at your option)\n+# any later version.\n+\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+\n+# You should have received a copy of the GNU General Public License\n+# along with this program; if not, write to the Free Software\n+# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA\n+# 02111-1307, USA.\n+\n AC_DEFUN([AM_PROG_INSTALL_SH],\n [AC_REQUIRE([AM_AUX_DIR_EXPAND])dnl\n install_sh=${install_sh-\"$am_aux_dir/install-sh\"}\n AC_SUBST(install_sh)])\n \n-# Copyright (C) 2003, 2005  Free Software Foundation, Inc.\n-#\n-# This file is free software; the Free Software Foundation\n-# gives unlimited permission to copy and/or distribute it,\n-# with or without modifications, as long as this notice is preserved.\n+#                                                          -*- Autoconf -*-\n+# Copyright (C) 2003  Free Software Foundation, Inc.\n \n-# serial 2\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 2, or (at your option)\n+# any later version.\n+\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+\n+# You should have received a copy of the GNU General Public License\n+# along with this program; if not, write to the Free Software\n+# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA\n+# 02111-1307, USA.\n+\n+# serial 1\n \n # Check whether the underlying file-system supports filenames\n # with a leading dot.  For instance MS-DOS doesn't.\n@@ -489,17 +580,28 @@ fi\n rmdir .tst 2>/dev/null\n AC_SUBST([am__leading_dot])])\n \n-# Add --enable-maintainer-mode option to configure.         -*- Autoconf -*-\n+# Add --enable-maintainer-mode option to configure.\n # From Jim Meyering\n \n-# Copyright (C) 1996, 1998, 2000, 2001, 2002, 2003, 2004, 2005\n+# Copyright (C) 1996, 1998, 2000, 2001, 2002, 2003, 2004\n # Free Software Foundation, Inc.\n-#\n-# This file is free software; the Free Software Foundation\n-# gives unlimited permission to copy and/or distribute it,\n-# with or without modifications, as long as this notice is preserved.\n \n-# serial 4\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 2, or (at your option)\n+# any later version.\n+\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+\n+# You should have received a copy of the GNU General Public License\n+# along with this program; if not, write to the Free Software\n+# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA\n+# 02111-1307, USA.\n+\n+# serial 3\n \n AC_DEFUN([AM_MAINTAINER_MODE],\n [AC_MSG_CHECKING([whether to enable maintainer-specific portions of Makefiles])\n@@ -518,15 +620,26 @@ AC_DEFUN([AM_MAINTAINER_MODE],\n \n AU_DEFUN([jm_MAINTAINER_MODE], [AM_MAINTAINER_MODE])\n \n-# Check to see how 'make' treats includes.\t            -*- Autoconf -*-\n+# Check to see how 'make' treats includes.\t-*- Autoconf -*-\n \n-# Copyright (C) 2001, 2002, 2003, 2005  Free Software Foundation, Inc.\n-#\n-# This file is free software; the Free Software Foundation\n-# gives unlimited permission to copy and/or distribute it,\n-# with or without modifications, as long as this notice is preserved.\n+# Copyright (C) 2001, 2002, 2003 Free Software Foundation, Inc.\n \n-# serial 3\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 2, or (at your option)\n+# any later version.\n+\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+\n+# You should have received a copy of the GNU General Public License\n+# along with this program; if not, write to the Free Software\n+# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA\n+# 02111-1307, USA.\n+\n+# serial 2\n \n # AM_MAKE_INCLUDE()\n # -----------------\n@@ -570,16 +683,27 @@ AC_MSG_RESULT([$_am_result])\n rm -f confinc confmf\n ])\n \n-# Fake the existence of programs that GNU maintainers use.  -*- Autoconf -*-\n+#  -*- Autoconf -*-\n \n-# Copyright (C) 1997, 1999, 2000, 2001, 2003, 2005\n-# Free Software Foundation, Inc.\n-#\n-# This file is free software; the Free Software Foundation\n-# gives unlimited permission to copy and/or distribute it,\n-# with or without modifications, as long as this notice is preserved.\n \n-# serial 4\n+# Copyright (C) 1997, 1999, 2000, 2001, 2003 Free Software Foundation, Inc.\n+\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 2, or (at your option)\n+# any later version.\n+\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+\n+# You should have received a copy of the GNU General Public License\n+# along with this program; if not, write to the Free Software\n+# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA\n+# 02111-1307, USA.\n+\n+# serial 3\n \n # AM_MISSING_PROG(NAME, PROGRAM)\n # ------------------------------\n@@ -605,16 +729,27 @@ else\n fi\n ])\n \n-# Copyright (C) 2003, 2004, 2005  Free Software Foundation, Inc.\n-#\n-# This file is free software; the Free Software Foundation\n-# gives unlimited permission to copy and/or distribute it,\n-# with or without modifications, as long as this notice is preserved.\n-\n # AM_PROG_MKDIR_P\n # ---------------\n # Check whether `mkdir -p' is supported, fallback to mkinstalldirs otherwise.\n-#\n+\n+# Copyright (C) 2003, 2004 Free Software Foundation, Inc.\n+\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 2, or (at your option)\n+# any later version.\n+\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+\n+# You should have received a copy of the GNU General Public License\n+# along with this program; if not, write to the Free Software\n+# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA\n+# 02111-1307, USA.\n+\n # Automake 1.8 used `mkdir -m 0755 -p --' to ensure that directories\n # created by `make install' are always world readable, even if the\n # installer happens to have an overly restrictive umask (e.g. 077).\n@@ -668,15 +803,26 @@ else\n fi\n AC_SUBST([mkdir_p])])\n \n-# Helper functions for option handling.                     -*- Autoconf -*-\n+# Helper functions for option handling.                    -*- Autoconf -*-\n \n-# Copyright (C) 2001, 2002, 2003, 2005  Free Software Foundation, Inc.\n-#\n-# This file is free software; the Free Software Foundation\n-# gives unlimited permission to copy and/or distribute it,\n-# with or without modifications, as long as this notice is preserved.\n+# Copyright (C) 2001, 2002, 2003  Free Software Foundation, Inc.\n \n-# serial 3\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 2, or (at your option)\n+# any later version.\n+\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+\n+# You should have received a copy of the GNU General Public License\n+# along with this program; if not, write to the Free Software\n+# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA\n+# 02111-1307, USA.\n+\n+# serial 2\n \n # _AM_MANGLE_OPTION(NAME)\n # -----------------------\n@@ -701,11 +847,22 @@ AC_DEFUN([_AM_SET_OPTIONS],\n AC_DEFUN([_AM_IF_OPTION],\n [m4_ifset(_AM_MANGLE_OPTION([$1]), [$2], [$3])])\n \n-# Copyright (C) 2001, 2003, 2005  Free Software Foundation, Inc.\n-#\n-# This file is free software; the Free Software Foundation\n-# gives unlimited permission to copy and/or distribute it,\n-# with or without modifications, as long as this notice is preserved.\n+# Copyright (C) 2001, 2003 Free Software Foundation, Inc.     -*- Autoconf -*-\n+\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 2, or (at your option)\n+# any later version.\n+\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+\n+# You should have received a copy of the GNU General Public License\n+# along with this program; if not, write to the Free Software\n+# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA\n+# 02111-1307, USA.\n \n # AM_RUN_LOG(COMMAND)\n # -------------------\n@@ -718,16 +875,28 @@ AC_DEFUN([AM_RUN_LOG],\n    echo \"$as_me:$LINENO: \\$? = $ac_status\" >&AS_MESSAGE_LOG_FD\n    (exit $ac_status); }])\n \n-# Check to make sure that the build environment is sane.    -*- Autoconf -*-\n-\n-# Copyright (C) 1996, 1997, 2000, 2001, 2003, 2005\n-# Free Software Foundation, Inc.\n #\n-# This file is free software; the Free Software Foundation\n-# gives unlimited permission to copy and/or distribute it,\n-# with or without modifications, as long as this notice is preserved.\n+# Check to make sure that the build environment is sane.\n+#\n+\n+# Copyright (C) 1996, 1997, 2000, 2001, 2003 Free Software Foundation, Inc.\n+\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 2, or (at your option)\n+# any later version.\n \n-# serial 4\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+\n+# You should have received a copy of the GNU General Public License\n+# along with this program; if not, write to the Free Software\n+# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA\n+# 02111-1307, USA.\n+\n+# serial 3\n \n # AM_SANITY_CHECK\n # ---------------\n@@ -770,14 +939,25 @@ Check your system clock])\n fi\n AC_MSG_RESULT(yes)])\n \n-# Copyright (C) 2001, 2003, 2005  Free Software Foundation, Inc.\n-#\n-# This file is free software; the Free Software Foundation\n-# gives unlimited permission to copy and/or distribute it,\n-# with or without modifications, as long as this notice is preserved.\n-\n # AM_PROG_INSTALL_STRIP\n-# ---------------------\n+\n+# Copyright (C) 2001, 2003 Free Software Foundation, Inc.\n+\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 2, or (at your option)\n+# any later version.\n+\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+\n+# You should have received a copy of the GNU General Public License\n+# along with this program; if not, write to the Free Software\n+# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA\n+# 02111-1307, USA.\n+\n # One issue with vendor `install' (even GNU) is that you can't\n # specify the program used to strip binaries.  This is especially\n # annoying in cross-compiling environments, where the build's strip\n@@ -800,13 +980,25 @@ AC_SUBST([INSTALL_STRIP_PROGRAM])])\n \n # Check how to create a tarball.                            -*- Autoconf -*-\n \n-# Copyright (C) 2004, 2005  Free Software Foundation, Inc.\n-#\n-# This file is free software; the Free Software Foundation\n-# gives unlimited permission to copy and/or distribute it,\n-# with or without modifications, as long as this notice is preserved.\n+# Copyright (C) 2004  Free Software Foundation, Inc.\n+\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 2, or (at your option)\n+# any later version.\n+\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+\n+# You should have received a copy of the GNU General Public License\n+# along with this program; if not, write to the Free Software\n+# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA\n+# 02111-1307, USA.\n+\n+# serial 1\n \n-# serial 2\n \n # _AM_PROG_TAR(FORMAT)\n # --------------------"}, {"sha": "e20cc38695a4515efc4085b1e37fc6420c4fcc43", "filename": "libjava/classpath/autogen.sh", "status": "modified", "additions": 6, "deletions": 10, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fautogen.sh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fautogen.sh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fautogen.sh?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -12,16 +12,9 @@ FILE=java/lang/Object.java\n \n DIE=0\n \n-case `uname -s` in\n-Darwin)\n-\tLIBTOOLIZE=glibtoolize\n-\t;;\n-*)\n-\tLIBTOOLIZE=libtoolize\n-\t;;\n-esac\n-\n-have_libtool=true\n+LIBTOOLIZE=libtoolize\n+\n+have_libtool=false\n if ${LIBTOOLIZE} --version < /dev/null > /dev/null 2>&1 ; then\n \tlibtool_version=`${LIBTOOLIZE} --version | sed 's/^[^0-9]*\\([0-9.][0-9.]*\\).*/\\1/'`\n \tcase $libtool_version in\n@@ -35,6 +28,9 @@ if $have_libtool ; then : ; else\n \techo \"You must have libtool 1.5 installed to compile $PROJECT.\"\n \techo \"Install the appropriate package for your distribution,\"\n \techo \"or get the source tarball at http://ftp.gnu.org/gnu/libtool/\"\n+\techo \"For Darwin you need the latest stable (1.5.18) to support\"\n+\techo \"Frameworks linking. Also, you have to point ACLOCAL_FLAGS\"\n+\techo \"to this libtool/share/aclocal.\"\n \tDIE=1\n fi\n "}, {"sha": "0760964c1fedbc67b4727d7becc8226118ceb9f2", "filename": "libjava/classpath/configure", "status": "modified", "additions": 2535, "deletions": 1654, "changes": 4189, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fconfigure?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06"}, {"sha": "96b425b23e8548a7bd3341a7b691a318388207fd", "filename": "libjava/classpath/configure.ac", "status": "modified", "additions": 51, "deletions": 7, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fconfigure.ac?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -6,7 +6,7 @@ dnl -----------------------------------------------------------\n dnl define([AC_CACHE_LOAD], )dnl\n dnl define([AC_CACHE_SAVE], )dnl\n \n-AC_INIT([GNU Classpath],[0.17+cvs],[classpath@gnu.org],[classpath])\n+AC_INIT([GNU Classpath],[0.18],[classpath@gnu.org],[classpath])\n AC_CONFIG_SRCDIR(java/lang/System.java)\n \n AC_CANONICAL_TARGET\n@@ -21,7 +21,16 @@ dnl We will not track/change lib version until we reach version 1.0\n dnl at which time we'll have to be more anal about such things\n dnl -----------------------------------------------------------\n AC_SUBST(LIBVERSION, \"0:0:0\")\n-CLASSPATH_MODULE=\"-module -version-info ${LIBVERSION} -no-undefined\"\n+case \"$host_os\" in\n+     darwin*)\n+\tcp_module=\"\"\n+\t;;\n+\t*)\n+\tcp_module=\"-module\"\n+\t;;\n+esac\n+\n+CLASSPATH_MODULE=\"${cp_module} -version-info ${LIBVERSION} -no-undefined\"\n AC_SUBST(CLASSPATH_MODULE)\n \n AC_PREREQ(2.59)\n@@ -128,6 +137,19 @@ if test \"x${GTK_CAIRO_ENABLED}\" = xtrue; then\n fi\n AM_CONDITIONAL(GTK_CAIRO, test \"x${GTK_CAIRO_ENABLED}\" = xtrue)\n \n+dnl -----------------------------------------------------------\n+dnl Qt native peer (disabled by default)\n+dnl -----------------------------------------------------------\n+AC_ARG_ENABLE([qt-peer],\n+              [AS_HELP_STRING(--enable-qt-peer,compile Qt4 native peers (disabled by --disable-jni) [default=no])],\n+              [case \"${enableval}\" in\n+                yes) COMPILE_QT_PEER=yes ;;\n+                no) COMPILE_QT_PEER=no ;;\n+                *) COMPILE_QT_PEER=yes ;;\n+              esac],\n+              [COMPILE_QT_PEER=no])\n+AM_CONDITIONAL(CREATE_QT_PEER_LIBRARIES, test \"x${COMPILE_QT_PEER}\" = xyes)\n+\n dnl -----------------------------------------------------------\n dnl Regenerate headers at build time (disabled by default)\n dnl -----------------------------------------------------------\n@@ -147,7 +169,7 @@ AC_PROG_INSTALL\n dnl -----------------------------------------------------------\n dnl Checks for programs.\n dnl -----------------------------------------------------------\n-dnl AC_PROG_CXX\n+AC_PROG_CXX\n dnl Initialize libtool\n AC_DISABLE_STATIC\n AC_PROG_LIBTOOL\n@@ -175,7 +197,8 @@ if test \"x${COMPILE_JNI}\" = xyes; then\n \t\t    sys/time.h \\\n \t\t    sys/select.h \\\n \t\t    crt_externs.h \\\n-                    fcntl.h])\n+                    fcntl.h \\\n+\t\t    sys/mman.h])\n \n   AC_EGREP_HEADER(uint32_t, stdint.h, AC_DEFINE(HAVE_INT32_DEFINED, 1, [Define to 1 if you have uint32_t]))\n   AC_EGREP_HEADER(uint32_t, inttypes.h, AC_DEFINE(HAVE_INT32_DEFINED, 1, [Define to 1 if you have uint32_t]))\n@@ -189,7 +212,8 @@ if test \"x${COMPILE_JNI}\" = xyes; then\n \t\t  recvfrom send sendto setsockopt getsockopt time mktime \\\n \t\t  localtime_r \\\n \t\t  strerror_r \\\n-                  fcntl])\n+                  fcntl \\\n+\t\t  mmap munmap mincore msync madvise getpagesize sysconf])\n \n   AC_HEADER_TIME\n   AC_STRUCT_TM\n@@ -271,6 +295,24 @@ if test \"x${COMPILE_JNI}\" = xyes; then\n      AC_SUBST(GTK_LIBS)\n   fi\n \n+  dnl Check for AWT related Qt4\n+  if test \"x${COMPILE_QT_PEER}\" = xyes; then\n+    PKG_CHECK_MODULES(QT, QtGui >= 4.0.1)\n+    dnl Check needed because in some cases the QtGui includedir\n+    dnl doesn't contain the subsystem dir.\n+    QT_INCLUDE_DIR=$($PKG_CONFIG --variable=includedir QtGui)\n+    EXTRA_QT_INCLUDE_DIR=\"$QT_INCLUDE_DIR/Qt\"\n+    AC_CHECK_FILE([$QT_INCLUDE_DIR/QWidget],\n+\t\t  AC_MSG_NOTICE([No extra QT_INCLUDE_DIR needed]),\n+\t\t  AC_CHECK_FILE([$EXTRA_QT_INCLUDE_DIR/QWidget],\n+\t\t  \tQT_CFLAGS=\"$QT_CFLAGS -I$EXTRA_QT_INCLUDE_DIR\",\n+\t\t\tAC_MSG_WARN([QWidget not found])))\n+    AC_MSG_NOTICE([Set QT_CFLAGS... $QT_CFLAGS])\n+    AC_CHECK_PROG(MOC, [moc], [moc])\n+    AC_SUBST(QT_CFLAGS)\n+    AC_SUBST(QT_LIBS)\n+  fi\n+\n   if test \"x${enable_gtk_cairo}\" = xyes; then\n     PKG_CHECK_MODULES(CAIRO, cairo >= 0.5.0)\n     PKG_CHECK_MODULES(PANGOFT2, pangoft2)\n@@ -380,7 +422,6 @@ AC_SUBST(REMOVE)\n dnl -----------------------------------------------------------\n dnl This is probably useless.\n dnl -----------------------------------------------------------\n-AC_PATH_PROG(SH, sh)\n AC_PATH_PROG(MKDIR, mkdir)\n AC_PATH_PROG(CP, cp)\n AC_PATH_PROG(DATE, date)\n@@ -437,6 +478,7 @@ gnu/classpath/Configuration.java\n include/Makefile\n native/Makefile\n native/fdlibm/Makefile\n+native/jawt/Makefile\n native/jni/Makefile\n native/jni/classpath/Makefile\n native/jni/java-io/Makefile\n@@ -445,6 +487,7 @@ native/jni/java-net/Makefile\n native/jni/java-nio/Makefile\n native/jni/java-util/Makefile\n native/jni/gtk-peer/Makefile\n+native/jni/qt-peer/Makefile\n native/jni/xmlj/Makefile\n native/target/Makefile\n native/target/Linux/Makefile\n@@ -454,6 +497,7 @@ scripts/Makefile\n scripts/classpath.spec\n lib/Makefile\n lib/gen-classlist.sh\n-examples/Makefile])\n+examples/Makefile\n+examples/Makefile.jawt])\n AC_CONFIG_COMMANDS([gen-classlist],[chmod 755 lib/gen-classlist.sh])\n AC_OUTPUT"}, {"sha": "7c96cf9b4d1a926bddad7e785d9b871774a11f8c", "filename": "libjava/classpath/doc/Makefile.in", "status": "modified", "additions": 18, "deletions": 19, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fdoc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fdoc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fdoc%2FMakefile.in?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -1,8 +1,8 @@\n-# Makefile.in generated by automake 1.9.5 from Makefile.am.\n+# Makefile.in generated by automake 1.9.3 from Makefile.am.\n # @configure_input@\n \n # Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,\n-# 2003, 2004, 2005  Free Software Foundation, Inc.\n+# 2003, 2004  Free Software Foundation, Inc.\n # This Makefile.in is free software; the Free Software Foundation\n # gives unlimited permission to copy and/or distribute it,\n # with or without modifications, as long as this notice is preserved.\n@@ -91,8 +91,14 @@ CREATE_JNI_HEADERS_FALSE = @CREATE_JNI_HEADERS_FALSE@\n CREATE_JNI_HEADERS_TRUE = @CREATE_JNI_HEADERS_TRUE@\n CREATE_JNI_LIBRARIES_FALSE = @CREATE_JNI_LIBRARIES_FALSE@\n CREATE_JNI_LIBRARIES_TRUE = @CREATE_JNI_LIBRARIES_TRUE@\n+CREATE_QT_PEER_LIBRARIES_FALSE = @CREATE_QT_PEER_LIBRARIES_FALSE@\n+CREATE_QT_PEER_LIBRARIES_TRUE = @CREATE_QT_PEER_LIBRARIES_TRUE@\n CREATE_XMLJ_LIBRARY_FALSE = @CREATE_XMLJ_LIBRARY_FALSE@\n CREATE_XMLJ_LIBRARY_TRUE = @CREATE_XMLJ_LIBRARY_TRUE@\n+CXX = @CXX@\n+CXXCPP = @CXXCPP@\n+CXXDEPMODE = @CXXDEPMODE@\n+CXXFLAGS = @CXXFLAGS@\n CYGPATH_W = @CYGPATH_W@\n DATE = @DATE@\n DEFS = @DEFS@\n@@ -154,6 +160,7 @@ MAINTAINER_MODE_FALSE = @MAINTAINER_MODE_FALSE@\n MAINTAINER_MODE_TRUE = @MAINTAINER_MODE_TRUE@\n MAKEINFO = @MAKEINFO@\n MKDIR = @MKDIR@\n+MOC = @MOC@\n OBJEXT = @OBJEXT@\n PACKAGE = @PACKAGE@\n PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@\n@@ -165,12 +172,13 @@ PANGOFT2_CFLAGS = @PANGOFT2_CFLAGS@\n PANGOFT2_LIBS = @PANGOFT2_LIBS@\n PATH_SEPARATOR = @PATH_SEPARATOR@\n PKG_CONFIG = @PKG_CONFIG@\n+QT_CFLAGS = @QT_CFLAGS@\n+QT_LIBS = @QT_LIBS@\n RANLIB = @RANLIB@\n REGEN_PARSERS_FALSE = @REGEN_PARSERS_FALSE@\n REGEN_PARSERS_TRUE = @REGEN_PARSERS_TRUE@\n REMOVE = @REMOVE@\n SET_MAKE = @SET_MAKE@\n-SH = @SH@\n SHELL = @SHELL@\n STRICT_WARNING_CFLAGS = @STRICT_WARNING_CFLAGS@\n STRIP = @STRIP@\n@@ -192,10 +200,13 @@ X_LIBS = @X_LIBS@\n X_PRE_LIBS = @X_PRE_LIBS@\n ZIP = @ZIP@\n ac_ct_CC = @ac_ct_CC@\n+ac_ct_CXX = @ac_ct_CXX@\n ac_ct_RANLIB = @ac_ct_RANLIB@\n ac_ct_STRIP = @ac_ct_STRIP@\n am__fastdepCC_FALSE = @am__fastdepCC_FALSE@\n am__fastdepCC_TRUE = @am__fastdepCC_TRUE@\n+am__fastdepCXX_FALSE = @am__fastdepCXX_FALSE@\n+am__fastdepCXX_TRUE = @am__fastdepCXX_TRUE@\n am__include = @am__include@\n am__leading_dot = @am__leading_dot@\n am__quote = @am__quote@\n@@ -287,13 +298,7 @@ uninstall-info-am:\n #     (which will cause the Makefiles to be regenerated when you run `make');\n # (2) otherwise, pass the desired values on the `make' command line.\n $(RECURSIVE_TARGETS):\n-\t@failcom='exit 1'; \\\n-\tfor f in x $$MAKEFLAGS; do \\\n-\t  case $$f in \\\n-\t    *=* | --[!k]*);; \\\n-\t    *k*) failcom='fail=yes';; \\\n-\t  esac; \\\n-\tdone; \\\n+\t@set fnord $$MAKEFLAGS; amf=$$2; \\\n \tdot_seen=no; \\\n \ttarget=`echo $@ | sed s/-recursive//`; \\\n \tlist='$(SUBDIRS)'; for subdir in $$list; do \\\n@@ -305,21 +310,15 @@ $(RECURSIVE_TARGETS):\n \t    local_target=\"$$target\"; \\\n \t  fi; \\\n \t  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \\\n-\t  || eval $$failcom; \\\n+\t   || case \"$$amf\" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \\\n \tdone; \\\n \tif test \"$$dot_seen\" = \"no\"; then \\\n \t  $(MAKE) $(AM_MAKEFLAGS) \"$$target-am\" || exit 1; \\\n \tfi; test -z \"$$fail\"\n \n mostlyclean-recursive clean-recursive distclean-recursive \\\n maintainer-clean-recursive:\n-\t@failcom='exit 1'; \\\n-\tfor f in x $$MAKEFLAGS; do \\\n-\t  case $$f in \\\n-\t    *=* | --[!k]*);; \\\n-\t    *k*) failcom='fail=yes';; \\\n-\t  esac; \\\n-\tdone; \\\n+\t@set fnord $$MAKEFLAGS; amf=$$2; \\\n \tdot_seen=no; \\\n \tcase \"$@\" in \\\n \t  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \\\n@@ -340,7 +339,7 @@ maintainer-clean-recursive:\n \t    local_target=\"$$target\"; \\\n \t  fi; \\\n \t  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \\\n-\t  || eval $$failcom; \\\n+\t   || case \"$$amf\" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \\\n \tdone && test -z \"$$fail\"\n tags-recursive:\n \tlist='$(SUBDIRS)'; for subdir in $$list; do \\"}, {"sha": "12fd052781540b3b8ce486cc71c322bb0e297796", "filename": "libjava/classpath/doc/README.jaxp", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fdoc%2FREADME.jaxp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fdoc%2FREADME.jaxp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fdoc%2FREADME.jaxp?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -17,6 +17,7 @@ PACKAGES\n . gnu.xml.xpath.* ... JAXP XPath implementation\n . gnu.xml.transform.* ... JAXP XSL transformer implementation\n . gnu.xml.pipeline.* ... SAX2 event pipeline support\n+. gnu.xml.stream.* ... StAX pull parser implementation\n . gnu.xml.util.* ... various XML utility classes\n . gnu.xml.libxmlj.dom.* ... libxmlj DOM Level 3 Core and XPath\n . gnu.xml.libxmlj.sax.* ... libxmlj SAX parser\n@@ -133,6 +134,11 @@ To enable the various GNU JAXP factories, set the following system properties\n   GNU XSL transformer:\n    -Djavax.xml.transform.TransformerFactory=gnu.xml.transform.TransformerFactoryImpl\n \n+  GNU StAX:\n+   -Djavax.xml.stream.XMLEventFactory=gnu.xml.stream.XMLEventFactoryImpl\n+   -Djavax.xml.stream.XMLInputFactory=gnu.xml.stream.XMLInputFactoryImpl\n+   -Djavax.xml.stream.XMLOutputFactory=gnu.xml.stream.XMLOutputFactoryImpl\n+\n   libxmlj SAX:\n    -Djavax.xml.parsers.SAXParserFactory=gnu.xml.libxmlj.sax.GnomeSAXParserFactory\n "}, {"sha": "9f7e808f2b2c8fdb640129193c3a992b2310e8eb", "filename": "libjava/classpath/doc/api/Makefile.am", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fdoc%2Fapi%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fdoc%2Fapi%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fdoc%2Fapi%2FMakefile.am?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -6,6 +6,7 @@ sourcepath = $(top_builddir):$(top_srcdir):$(top_srcdir)/vm/reference:$(top_srcd\n \n classpathbox = \"<span class='logo'><a href='http://www.gnu.org/software/classpath' target='_top'>GNU Classpath</a> ($(VERSION))\"\n \n+if CREATE_API_DOCS\n install-data-local:\n \t$(mkinstalldirs) $(DESTDIR)$(pkgdatadir)/api\n \t@list='$(htmllist)'; for p in $$list; do \\\n@@ -26,6 +27,7 @@ uninstall-local:\n \t    rm -f $(DESTDIR)$(pkgdatadir)/api/$$f; \\\n           fi; \\\n         done\n+endif\n \n html: create_html\n "}, {"sha": "303c008322dea67273538d1ce445559a94f57bc9", "filename": "libjava/classpath/doc/api/Makefile.in", "status": "modified", "additions": 36, "deletions": 23, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fdoc%2Fapi%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fdoc%2Fapi%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fdoc%2Fapi%2FMakefile.in?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -1,8 +1,8 @@\n-# Makefile.in generated by automake 1.9.5 from Makefile.am.\n+# Makefile.in generated by automake 1.9.3 from Makefile.am.\n # @configure_input@\n \n # Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,\n-# 2003, 2004, 2005  Free Software Foundation, Inc.\n+# 2003, 2004  Free Software Foundation, Inc.\n # This Makefile.in is free software; the Free Software Foundation\n # gives unlimited permission to copy and/or distribute it,\n # with or without modifications, as long as this notice is preserved.\n@@ -84,8 +84,14 @@ CREATE_JNI_HEADERS_FALSE = @CREATE_JNI_HEADERS_FALSE@\n CREATE_JNI_HEADERS_TRUE = @CREATE_JNI_HEADERS_TRUE@\n CREATE_JNI_LIBRARIES_FALSE = @CREATE_JNI_LIBRARIES_FALSE@\n CREATE_JNI_LIBRARIES_TRUE = @CREATE_JNI_LIBRARIES_TRUE@\n+CREATE_QT_PEER_LIBRARIES_FALSE = @CREATE_QT_PEER_LIBRARIES_FALSE@\n+CREATE_QT_PEER_LIBRARIES_TRUE = @CREATE_QT_PEER_LIBRARIES_TRUE@\n CREATE_XMLJ_LIBRARY_FALSE = @CREATE_XMLJ_LIBRARY_FALSE@\n CREATE_XMLJ_LIBRARY_TRUE = @CREATE_XMLJ_LIBRARY_TRUE@\n+CXX = @CXX@\n+CXXCPP = @CXXCPP@\n+CXXDEPMODE = @CXXDEPMODE@\n+CXXFLAGS = @CXXFLAGS@\n CYGPATH_W = @CYGPATH_W@\n DATE = @DATE@\n DEFS = @DEFS@\n@@ -147,6 +153,7 @@ MAINTAINER_MODE_FALSE = @MAINTAINER_MODE_FALSE@\n MAINTAINER_MODE_TRUE = @MAINTAINER_MODE_TRUE@\n MAKEINFO = @MAKEINFO@\n MKDIR = @MKDIR@\n+MOC = @MOC@\n OBJEXT = @OBJEXT@\n PACKAGE = @PACKAGE@\n PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@\n@@ -158,12 +165,13 @@ PANGOFT2_CFLAGS = @PANGOFT2_CFLAGS@\n PANGOFT2_LIBS = @PANGOFT2_LIBS@\n PATH_SEPARATOR = @PATH_SEPARATOR@\n PKG_CONFIG = @PKG_CONFIG@\n+QT_CFLAGS = @QT_CFLAGS@\n+QT_LIBS = @QT_LIBS@\n RANLIB = @RANLIB@\n REGEN_PARSERS_FALSE = @REGEN_PARSERS_FALSE@\n REGEN_PARSERS_TRUE = @REGEN_PARSERS_TRUE@\n REMOVE = @REMOVE@\n SET_MAKE = @SET_MAKE@\n-SH = @SH@\n SHELL = @SHELL@\n STRICT_WARNING_CFLAGS = @STRICT_WARNING_CFLAGS@\n STRIP = @STRIP@\n@@ -185,10 +193,13 @@ X_LIBS = @X_LIBS@\n X_PRE_LIBS = @X_PRE_LIBS@\n ZIP = @ZIP@\n ac_ct_CC = @ac_ct_CC@\n+ac_ct_CXX = @ac_ct_CXX@\n ac_ct_RANLIB = @ac_ct_RANLIB@\n ac_ct_STRIP = @ac_ct_STRIP@\n am__fastdepCC_FALSE = @am__fastdepCC_FALSE@\n am__fastdepCC_TRUE = @am__fastdepCC_TRUE@\n+am__fastdepCXX_FALSE = @am__fastdepCXX_FALSE@\n+am__fastdepCXX_TRUE = @am__fastdepCXX_TRUE@\n am__include = @am__include@\n am__leading_dot = @am__leading_dot@\n am__quote = @am__quote@\n@@ -335,6 +346,8 @@ distclean-generic:\n maintainer-clean-generic:\n \t@echo \"This command is intended for maintainers to use\"\n \t@echo \"it deletes files that may require special tools to rebuild.\"\n+@CREATE_API_DOCS_FALSE@uninstall-local:\n+@CREATE_API_DOCS_FALSE@install-data-local:\n clean: clean-am\n \n clean-am: clean-generic clean-libtool clean-local mostlyclean-am\n@@ -391,26 +404,26 @@ uninstall-am: uninstall-info-am uninstall-local\n \tuninstall-local\n \n \n-install-data-local:\n-\t$(mkinstalldirs) $(DESTDIR)$(pkgdatadir)/api\n-\t@list='$(htmllist)'; for p in $$list; do \\\n-\t  f=\"`echo $$p | sed -e 's|^.*/||'`\"; \\\n-\t  if test -f \"$$p\"; then \\\n-\t    echo \" $(INSTALL_DATA) $$p $(DESTDIR)$(pkgdatadir)/api/$$f\"; \\\n-\t    $(INSTALL_DATA) $$p $(DESTDIR)$(pkgdatadir)/api/$$f; \\\n-\t  elif test -d \"$$p\"; then \\\n-\t    $(mkinstalldirs) $(DESTDIR)$(pkgdatadir)/api/$$f; \\\n-          fi; \\\n-        done\n-\n-uninstall-local:\n-\t@list='$(htmllist)'; for p in $$list; do \\\n-\t  f=\"`echo $$p | sed -e 's|^.*/||'`\"; \\\n-\t  if test -f \"$$p\"; then \\\n-\t    echo \" rm -f $(DESTDIR)$(pkgdatadir)/api/$$f\"; \\\n-\t    rm -f $(DESTDIR)$(pkgdatadir)/api/$$f; \\\n-          fi; \\\n-        done\n+@CREATE_API_DOCS_TRUE@install-data-local:\n+@CREATE_API_DOCS_TRUE@\t$(mkinstalldirs) $(DESTDIR)$(pkgdatadir)/api\n+@CREATE_API_DOCS_TRUE@\t@list='$(htmllist)'; for p in $$list; do \\\n+@CREATE_API_DOCS_TRUE@\t  f=\"`echo $$p | sed -e 's|^.*/||'`\"; \\\n+@CREATE_API_DOCS_TRUE@\t  if test -f \"$$p\"; then \\\n+@CREATE_API_DOCS_TRUE@\t    echo \" $(INSTALL_DATA) $$p $(DESTDIR)$(pkgdatadir)/api/$$f\"; \\\n+@CREATE_API_DOCS_TRUE@\t    $(INSTALL_DATA) $$p $(DESTDIR)$(pkgdatadir)/api/$$f; \\\n+@CREATE_API_DOCS_TRUE@\t  elif test -d \"$$p\"; then \\\n+@CREATE_API_DOCS_TRUE@\t    $(mkinstalldirs) $(DESTDIR)$(pkgdatadir)/api/$$f; \\\n+@CREATE_API_DOCS_TRUE@          fi; \\\n+@CREATE_API_DOCS_TRUE@        done\n+\n+@CREATE_API_DOCS_TRUE@uninstall-local:\n+@CREATE_API_DOCS_TRUE@\t@list='$(htmllist)'; for p in $$list; do \\\n+@CREATE_API_DOCS_TRUE@\t  f=\"`echo $$p | sed -e 's|^.*/||'`\"; \\\n+@CREATE_API_DOCS_TRUE@\t  if test -f \"$$p\"; then \\\n+@CREATE_API_DOCS_TRUE@\t    echo \" rm -f $(DESTDIR)$(pkgdatadir)/api/$$f\"; \\\n+@CREATE_API_DOCS_TRUE@\t    rm -f $(DESTDIR)$(pkgdatadir)/api/$$f; \\\n+@CREATE_API_DOCS_TRUE@          fi; \\\n+@CREATE_API_DOCS_TRUE@        done\n \n html: create_html\n "}, {"sha": "873d4fae1d597b8e742ddcab4494d3cbc6b47c51", "filename": "libjava/classpath/doc/www.gnu.org/events/events.wml", "status": "modified", "additions": 45, "deletions": 3, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fdoc%2Fwww.gnu.org%2Fevents%2Fevents.wml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fdoc%2Fwww.gnu.org%2Fevents%2Fevents.wml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fdoc%2Fwww.gnu.org%2Fevents%2Fevents.wml?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -9,17 +9,59 @@\n <boxitem>\n <strong>Upcoming Events:</strong><br>\n <ul>\n-none\n+<li>[1-5 Aug 2005] <a href=\"http://conferences.oreillynet.com/os2005/\">OSCON</a>, Portland, Oregon - USA\n+<ul>\n+<li><a href=\"http://conferences.oreillynet.com/cs/os2005/view/e_sess/6730\">The State of Free JVMs</a>\n+Tom Tromey</li>\n+</ul>\n </ul>\n </boxitem>\n \n <boxitem>\n <strong>Past Events:</strong><br>\n <ul>\n-<li>[26+27 Feb. 2004] FOSDEM'05 in Brussels, Belgium. [<createlink name=\"Escape The Java Trap!\" url=\"events/escape_fosdem05.html\">]\n-<li>[14+15 Oct. 2003] Linux Kongress '03 in Saarbr&uuml;cken, Germany.\n+\n+<li>\n+[29-31 May 2005] <a href=\"http://2005.guadec.org/\">Guadec</a>, Stuttgart - Germany\n+<ul>\n+<li><a href=\"http://2005.guadec.org/schedule/gnometalks.html#eclipseyou\">The Eclipse IDE and you</a>\n+Ben Konrath and Andrew Overholt\n+(<a href=\"http://overholt.ca/eclipse/GUADEC2005-EclipseIDE.pdf\">slides</a>)</li>\n+<li><a href=\"http://2005.guadec.org/schedule/gnometalks.html#javagnome\">Eclipse, Java-GNOME, and GCJ</a>\n+Andrew Cowie and Ben Konrath</li>\n+</ul>\n+<p>\n+<li>\n+[1-4 Jun. 2005] <a href=\"http://fisl.softwarelivre.org/6.0/\">6th International Free Software Forum</a> (fisl), Porto Alegre/RS, Brazil\n+<ul>\n+<li><a href=\"http://fisl.softwarelivre.org/papers/pub/programacao/360\">Encontro Javali: Escape the Java Trap: GNU Classpath and Kaffe</a>\n+Dalibor Topic and Mark Wielaard\n+(<a href=\"http://www.klomp.org/mark/classpath/GNUClasspathKaffe/\">slides</a>)</li>\n+</ul>\n+<p>\n+<li>\n+[22-25 Jun 2005] <a href=\"http://www.linuxtag.org/\">LinuxTag</a>, Karlsruhe - Germany\n+<ul>\n+<li><a href=\"http://www.linuxtag.org/vcc/details.pl?id=162\">GNU Classpath</a>\n+Robert Schuster (in German)\n+(<a href=\"http://www.inf.fu-berlin.de/%7Erschuste/GNUClasspath-LinuxTag2005-English.pdf\">slides</a>)</li>\n+<li><a href=\"http://www.linuxtag.org/vcc/details.pl?id=166\">GCJ and Classpath: A Free Implementation of the Java programming language</a>\n+Andrew Haley (in English)\n+(<a href=\"http://people.redhat.com/~aph/linuxtag.tar.gz\">slides</a>)</li>\n+</ul>\n+<p>\n+<li>[26+27 Feb. 2005] FOSDEM'05 in Brussels, Belgium. [<createlink name=\"Escape The Java Trap!\" url=\"events/escape_fosdem05.html\">]\n+<p>\n <li>[21+22 Feb. 2004] FOSDEM'04 in Brussels, Belgium. [<createlink name=\"report\" url=\"events/fosdem04.html\">]\n+<p>\n <li>[14+15 Oct. 2003] Linux Kongress '03 in Saarbr&uuml;cken, Germany.\n+<ul>\n+<li>Hacking on the VM Interface: GNU Classpath workshop, Mark Wielaard\n+(<a href=\"http://www.klomp.org/mark/classpath/slides/gnu_classpath_workshop.html\">slides</a>).\n+<li>Agile2D: implementing Graphics2D over OpenGL, Jean-Daniel Fekete\n+(<a href=\"http://www.klomp.org/mark/classpath/Agile2D.pdf\">slides</a>).\n+</ul>\n+\n </ul>\n <br><br><br>\n </boxitem>"}, {"sha": "67ae91ff8bc0b489d8957fbeae85dfc428fa0ede", "filename": "libjava/classpath/doc/www.gnu.org/faq/faq.wml", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fdoc%2Fwww.gnu.org%2Ffaq%2Ffaq.wml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fdoc%2Fwww.gnu.org%2Ffaq%2Ffaq.wml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fdoc%2Fwww.gnu.org%2Ffaq%2Ffaq.wml?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -304,6 +304,28 @@ be a bit picky about getting signatures from all contributors. Please do\n not see this as a personal offence.\n \n <p>Giving the copyright to the FSF also gives us a clear paper trail where changes come from, which confirms our clean-room status.\n+</p>\n+\n+<p>\n+The assignment contract commits the foundation to setting distribution terms\n+that permit free redistribution.\n+</p>\n+\n+<p>\n+The assignment contract we normally use has a clause that permits you to\n+use your code in proprietary programs, on 30 days' notice.\n+(The 30 days' notice is there because, through a legal technicality,\n+it would improve our position in a suit against a hoarder.)\n+Although we believe that proprietary software is wrong, we include this\n+clause because it would serve no purpose to ask you to promise not to do\n+it. You're giving us a gift in the first place.\n+</p>\n+\n+<p>\n+You don't need to invoke this clause in order to distribute\n+copies as free software under the GNU GPL, since everyone is\n+allowed to do that.\n+</p>\n \n <p>See also <a href=\"http://www.gnu.org/licenses/why-assign.html\">http://www.gnu.org/licenses/why-assign.html</a>.\n </p>"}, {"sha": "a82849205cbdb4996770764b2b1adb90fac17d9a", "filename": "libjava/classpath/doc/www.gnu.org/include/layout.wml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fdoc%2Fwww.gnu.org%2Finclude%2Flayout.wml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fdoc%2Fwww.gnu.org%2Finclude%2Flayout.wml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fdoc%2Fwww.gnu.org%2Finclude%2Flayout.wml?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -105,7 +105,7 @@\n \n <menutitle>Savannah</menutitle>\n <menuitem><createlink name=\"Project Home\" url=\"http://savannah.gnu.org/projects/classpath/\"></menuitem>\n-<menuitem><createlink name=\"Bug Reports\" url=\"http://savannah.gnu.org/bugs/?group=classpath\"></menuitem>\n+<menuitem><createlink name=\"Bug Reports\" url=\"bugs.html\"></menuitem>\n <!--\n <menuitem><createlink name=\"Support\" url=\"http://savannah.gnu.org/support/?group=classpath\"></menuitem>\n <menuitem><createlink name=\"Patches\" url=\"http://savannah.gnu.org/patch/?group=classpath\"></menuitem>"}, {"sha": "b4976dffc43d95b7c8cab4b7c5a38b7a450b4b73", "filename": "libjava/classpath/doc/www.gnu.org/newsitems.txt", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fdoc%2Fwww.gnu.org%2Fnewsitems.txt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fdoc%2Fwww.gnu.org%2Fnewsitems.txt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fdoc%2Fwww.gnu.org%2Fnewsitems.txt?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -1,3 +1,13 @@\n+<newsitem date=\"03 Aug 2005\">\n+<createlink name=\"Generics Branch Merge Announcement\"\n+            url=\"http://lists.gnu.org/archive/html/classpath/2005-08/msg00002.html\">\n+</newsitem>\n+\n+<newsitem date=\"01 Aug 2005\">\n+<createlink name=\"Bugs moved to bugzilla\"\n+            url=\"bugs.html\">\n+</newsitem>\n+\n <newsitem date=\"15 Jul 2005\">\n <createlink name=\"GNU Classpath 0.17\"\n             url=\"announce/20050715.html\">"}, {"sha": "5563799166bede0d9e036cbcdff29947698b68b3", "filename": "libjava/classpath/examples/.cvsignore", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fexamples%2F.cvsignore", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fexamples%2F.cvsignore", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexamples%2F.cvsignore?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -1,2 +1,3 @@\n Makefile\n examples.zip\n+Makefile.jawt"}, {"sha": "b7eeacb63feb4a40195e67be437af357dd6e4812", "filename": "libjava/classpath/examples/Makefile.am", "status": "modified", "additions": 15, "deletions": 5, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fexamples%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fexamples%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexamples%2FMakefile.am?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -22,6 +22,9 @@ endif\n # All our example java source files\n EXAMPLE_JAVA_FILES = $(srcdir)/gnu/classpath/examples/*/*.java\n \n+# The example C source files\n+EXAMPLE_C_FILES = $(srcdir)/gnu/classpath/examples/*/*.c\n+\n # The zip files with classes we want to produce.\n EXAMPLE_ZIP = examples.zip\n \n@@ -31,6 +34,9 @@ BUILT_SOURCES = $(EXAMPLE_ZIP)\n # the png icons we use in some of the examples.\n EXAMPLE_ICONS = $(srcdir)/gnu/classpath/examples/icons/*.png\n \n+# All the files we find \"interesting\"\n+ALL_EXAMPLE_FILES = $(EXAMPLE_JAVA_FILES) $(EXAMPLE_C_FILES) $(EXAMPLE_ICONS)\n+\n # Some architecture independent data to be installed.\n example_DATA = $(EXAMPLE_ZIP) README\n \n@@ -41,7 +47,7 @@ exampledir = $(pkgdatadir)/examples\n # (Be careful to strip off the srcdir part of the path when installing.)\n install-data-local:\n \tsrcdir_cnt=`echo $(srcdir) | wc -c`; \\\n-\tfor file in $(EXAMPLE_JAVA_FILES) $(EXAMPLE_ICONS); do \\\n+\tfor file in $(ALL_EXAMPLE_FILES); do \\\n \t  f=`echo $$file | cut -c$$srcdir_cnt-`; \\\n \t  fdir=`dirname $$f`; \\\n \t  if test ! -d $(DESTDIR)/$(pkgdatadir)/examples/$$fdir; then \\\n@@ -51,20 +57,24 @@ install-data-local:\n \t  echo \"$(INSTALL_DATA) $$file $(DESTDIR)/$(pkgdatadir)/examples/$$f\"; \\\n \t  $(INSTALL_DATA) $$file $(DESTDIR)/$(pkgdatadir)/examples/$$f; \\\n \tdone\n+\techo \"$(INSTALL_DATA) Makefile.jawt $(DESTDIR)/$(pkgdatadir)/examples/\"\n+\t$(INSTALL_DATA) Makefile.jawt $(DESTDIR)/$(pkgdatadir)/examples/\n \n uninstall-local:\n \tsrcdir_cnt=`echo $(srcdir) | wc -c`; \\\n-\tfor file in $(EXAMPLE_JAVA_FILES) $(EXAMPLE_ICONS); do \\\n+\tfor file in $(ALL_EXAMPLE_FILES); do \\\n \t  f=`echo $$file | cut -c$$srcdir_cnt-`; \\\n \t  echo \"rm -f $(DESTDIR)/$(pkgdatadir)/examples/$$f\"; \\\n \t  rm -f $(DESTDIR)/$(pkgdatadir)/examples/$$f; \\\n \tdone\n+\techo \"rm -f $(DESTDIR)/$(pkgdatadir)/examples/Makefile.jawt\"\n+\trm -f $(DESTDIR)/$(pkgdatadir)/examples/Makefile.jawt\n \n # Make sure everything is included in the distribution.\n-EXTRA_DIST = README\n+EXTRA_DIST = README Makefile.jawt.in\n dist-hook:\n \tsrcdir_cnt=`echo $(srcdir) | wc -c`; \\\n-\tfor file in $(EXAMPLE_JAVA_FILES) $(EXAMPLE_ICONS); do \\\n+\tfor file in $(ALL_EXAMPLE_FILES); do \\\n \t  f=`echo $$file | cut -c$$srcdir_cnt-`; \\\n \t  fdir=`dirname $$f`; \\\n \t  if test ! -d $(distdir)/$$fdir; then \\\n@@ -87,4 +97,4 @@ $(EXAMPLE_ZIP): $(EXAMPLE_JAVA_FILES)\n \n # Zip file be gone! (and make sure the classes are gone too)\n clean-local:\n-\trm -f $(EXAMPLE_ZIP) classes\n+\trm -rf $(EXAMPLE_ZIP) classes"}, {"sha": "92c0858704b577336af4321117eec7cfb6dc51b9", "filename": "libjava/classpath/examples/Makefile.in", "status": "modified", "additions": 34, "deletions": 10, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fexamples%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fexamples%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexamples%2FMakefile.in?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -1,8 +1,8 @@\n-# Makefile.in generated by automake 1.9.5 from Makefile.am.\n+# Makefile.in generated by automake 1.9.3 from Makefile.am.\n # @configure_input@\n \n # Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,\n-# 2003, 2004, 2005  Free Software Foundation, Inc.\n+# 2003, 2004  Free Software Foundation, Inc.\n # This Makefile.in is free software; the Free Software Foundation\n # gives unlimited permission to copy and/or distribute it,\n # with or without modifications, as long as this notice is preserved.\n@@ -38,7 +38,8 @@ build_triplet = @build@\n host_triplet = @host@\n target_triplet = @target@\n subdir = examples\n-DIST_COMMON = README $(srcdir)/Makefile.am $(srcdir)/Makefile.in\n+DIST_COMMON = README $(srcdir)/Makefile.am $(srcdir)/Makefile.in \\\n+\t$(srcdir)/Makefile.jawt.in\n ACLOCAL_M4 = $(top_srcdir)/aclocal.m4\n am__aclocal_m4_deps = $(top_srcdir)/../../libtool.m4 \\\n \t$(top_srcdir)/m4/accross.m4 $(top_srcdir)/m4/acinclude.m4 \\\n@@ -49,7 +50,7 @@ am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\\n \t$(ACLOCAL_M4)\n mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs\n CONFIG_HEADER = $(top_builddir)/include/config.h\n-CONFIG_CLEAN_FILES =\n+CONFIG_CLEAN_FILES = Makefile.jawt\n SOURCES =\n DIST_SOURCES =\n am__vpath_adj_setup = srcdirstrip=`echo \"$(srcdir)\" | sed 's|.|.|g'`;\n@@ -92,8 +93,14 @@ CREATE_JNI_HEADERS_FALSE = @CREATE_JNI_HEADERS_FALSE@\n CREATE_JNI_HEADERS_TRUE = @CREATE_JNI_HEADERS_TRUE@\n CREATE_JNI_LIBRARIES_FALSE = @CREATE_JNI_LIBRARIES_FALSE@\n CREATE_JNI_LIBRARIES_TRUE = @CREATE_JNI_LIBRARIES_TRUE@\n+CREATE_QT_PEER_LIBRARIES_FALSE = @CREATE_QT_PEER_LIBRARIES_FALSE@\n+CREATE_QT_PEER_LIBRARIES_TRUE = @CREATE_QT_PEER_LIBRARIES_TRUE@\n CREATE_XMLJ_LIBRARY_FALSE = @CREATE_XMLJ_LIBRARY_FALSE@\n CREATE_XMLJ_LIBRARY_TRUE = @CREATE_XMLJ_LIBRARY_TRUE@\n+CXX = @CXX@\n+CXXCPP = @CXXCPP@\n+CXXDEPMODE = @CXXDEPMODE@\n+CXXFLAGS = @CXXFLAGS@\n CYGPATH_W = @CYGPATH_W@\n DATE = @DATE@\n DEFS = @DEFS@\n@@ -155,6 +162,7 @@ MAINTAINER_MODE_FALSE = @MAINTAINER_MODE_FALSE@\n MAINTAINER_MODE_TRUE = @MAINTAINER_MODE_TRUE@\n MAKEINFO = @MAKEINFO@\n MKDIR = @MKDIR@\n+MOC = @MOC@\n OBJEXT = @OBJEXT@\n PACKAGE = @PACKAGE@\n PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@\n@@ -166,12 +174,13 @@ PANGOFT2_CFLAGS = @PANGOFT2_CFLAGS@\n PANGOFT2_LIBS = @PANGOFT2_LIBS@\n PATH_SEPARATOR = @PATH_SEPARATOR@\n PKG_CONFIG = @PKG_CONFIG@\n+QT_CFLAGS = @QT_CFLAGS@\n+QT_LIBS = @QT_LIBS@\n RANLIB = @RANLIB@\n REGEN_PARSERS_FALSE = @REGEN_PARSERS_FALSE@\n REGEN_PARSERS_TRUE = @REGEN_PARSERS_TRUE@\n REMOVE = @REMOVE@\n SET_MAKE = @SET_MAKE@\n-SH = @SH@\n SHELL = @SHELL@\n STRICT_WARNING_CFLAGS = @STRICT_WARNING_CFLAGS@\n STRIP = @STRIP@\n@@ -193,10 +202,13 @@ X_LIBS = @X_LIBS@\n X_PRE_LIBS = @X_PRE_LIBS@\n ZIP = @ZIP@\n ac_ct_CC = @ac_ct_CC@\n+ac_ct_CXX = @ac_ct_CXX@\n ac_ct_RANLIB = @ac_ct_RANLIB@\n ac_ct_STRIP = @ac_ct_STRIP@\n am__fastdepCC_FALSE = @am__fastdepCC_FALSE@\n am__fastdepCC_TRUE = @am__fastdepCC_TRUE@\n+am__fastdepCXX_FALSE = @am__fastdepCXX_FALSE@\n+am__fastdepCXX_TRUE = @am__fastdepCXX_TRUE@\n am__include = @am__include@\n am__leading_dot = @am__leading_dot@\n am__quote = @am__quote@\n@@ -246,6 +258,9 @@ vm_classes = @vm_classes@\n # All our example java source files\n EXAMPLE_JAVA_FILES = $(srcdir)/gnu/classpath/examples/*/*.java\n \n+# The example C source files\n+EXAMPLE_C_FILES = $(srcdir)/gnu/classpath/examples/*/*.c\n+\n # The zip files with classes we want to produce.\n EXAMPLE_ZIP = examples.zip\n \n@@ -255,14 +270,17 @@ BUILT_SOURCES = $(EXAMPLE_ZIP)\n # the png icons we use in some of the examples.\n EXAMPLE_ICONS = $(srcdir)/gnu/classpath/examples/icons/*.png\n \n+# All the files we find \"interesting\"\n+ALL_EXAMPLE_FILES = $(EXAMPLE_JAVA_FILES) $(EXAMPLE_C_FILES) $(EXAMPLE_ICONS)\n+\n # Some architecture independent data to be installed.\n example_DATA = $(EXAMPLE_ZIP) README\n \n # Where we want these data files installed.\n exampledir = $(pkgdatadir)/examples\n \n # Make sure everything is included in the distribution.\n-EXTRA_DIST = README\n+EXTRA_DIST = README Makefile.jawt.in\n all: $(BUILT_SOURCES)\n \t$(MAKE) $(AM_MAKEFLAGS) all-am\n \n@@ -296,6 +314,8 @@ $(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)\n \tcd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh\n $(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)\n \tcd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh\n+Makefile.jawt: $(top_builddir)/config.status $(srcdir)/Makefile.jawt.in\n+\tcd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@\n \n mostlyclean-libtool:\n \t-rm -f *.lo\n@@ -458,7 +478,7 @@ uninstall-am: uninstall-exampleDATA uninstall-info-am uninstall-local\n # (Be careful to strip off the srcdir part of the path when installing.)\n install-data-local:\n \tsrcdir_cnt=`echo $(srcdir) | wc -c`; \\\n-\tfor file in $(EXAMPLE_JAVA_FILES) $(EXAMPLE_ICONS); do \\\n+\tfor file in $(ALL_EXAMPLE_FILES); do \\\n \t  f=`echo $$file | cut -c$$srcdir_cnt-`; \\\n \t  fdir=`dirname $$f`; \\\n \t  if test ! -d $(DESTDIR)/$(pkgdatadir)/examples/$$fdir; then \\\n@@ -468,17 +488,21 @@ install-data-local:\n \t  echo \"$(INSTALL_DATA) $$file $(DESTDIR)/$(pkgdatadir)/examples/$$f\"; \\\n \t  $(INSTALL_DATA) $$file $(DESTDIR)/$(pkgdatadir)/examples/$$f; \\\n \tdone\n+\techo \"$(INSTALL_DATA) Makefile.jawt $(DESTDIR)/$(pkgdatadir)/examples/\"\n+\t$(INSTALL_DATA) Makefile.jawt $(DESTDIR)/$(pkgdatadir)/examples/\n \n uninstall-local:\n \tsrcdir_cnt=`echo $(srcdir) | wc -c`; \\\n-\tfor file in $(EXAMPLE_JAVA_FILES) $(EXAMPLE_ICONS); do \\\n+\tfor file in $(ALL_EXAMPLE_FILES); do \\\n \t  f=`echo $$file | cut -c$$srcdir_cnt-`; \\\n \t  echo \"rm -f $(DESTDIR)/$(pkgdatadir)/examples/$$f\"; \\\n \t  rm -f $(DESTDIR)/$(pkgdatadir)/examples/$$f; \\\n \tdone\n+\techo \"rm -f $(DESTDIR)/$(pkgdatadir)/examples/Makefile.jawt\"\n+\trm -f $(DESTDIR)/$(pkgdatadir)/examples/Makefile.jawt\n dist-hook:\n \tsrcdir_cnt=`echo $(srcdir) | wc -c`; \\\n-\tfor file in $(EXAMPLE_JAVA_FILES) $(EXAMPLE_ICONS); do \\\n+\tfor file in $(ALL_EXAMPLE_FILES); do \\\n \t  f=`echo $$file | cut -c$$srcdir_cnt-`; \\\n \t  fdir=`dirname $$f`; \\\n \t  if test ! -d $(distdir)/$$fdir; then \\\n@@ -501,7 +525,7 @@ $(EXAMPLE_ZIP): $(EXAMPLE_JAVA_FILES)\n \n # Zip file be gone! (and make sure the classes are gone too)\n clean-local:\n-\trm -f $(EXAMPLE_ZIP) classes\n+\trm -rf $(EXAMPLE_ZIP) classes\n # Tell versions [3.59,3.63) of GNU make to not export all variables.\n # Otherwise a system limit (for SysV at least) may be exceeded.\n .NOEXPORT:"}, {"sha": "727677363c6c30f2dc7a5395de197cc02ee996ed", "filename": "libjava/classpath/examples/README", "status": "modified", "additions": 25, "deletions": 1, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fexamples%2FREADME", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fexamples%2FREADME", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexamples%2FREADME?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -7,7 +7,8 @@ class Demo which contains a main() method to run that particular example.\n The examples can be compiled and run with gcj as follows:\n \n   gcj -o swingdemo --main=gnu.classpath.examples.swing.Demo \\\n-      gnu/classpath/examples/swing/Demo.java\n+      gnu/classpath/examples/swing/Demo.java \\\n+      gnu/classpath/examples/swing/GNULookAndFeel.java\n   ./swingdemo\n \n Or with a traditional byte code interpreter like:\n@@ -22,6 +23,29 @@ run as follows:\n   kaffe -classpath examples.zip gnu.classpath.examples.awt.Demo\n   kaffe -classpath examples.zip gnu.classpath.examples.swing.Demo\n \n+The jawt Demo needs some extra support library that currently needs to be\n+build by hand.  The following assumes GNU Classpath was installed in\n+/usr/local/classpath, if you installed it somewhere else then adjust the\n+-I and -L paths accordingly. The included Makefile.jawt is setup this way.\n+\n+You can invoke it with:\n+\n+\tmake -f Makefile.jawt\n+\n+Or you can compile by hand as follows:\n+\n+  gcj -C gnu/classpath/examples/jawt/DemoJAWT.java\n+  gcjh -jni gnu.classpath.examples.jawt.DemoJAWT -o DemoJAWT.h\n+  gcc -g -O0 -Wall -I. -I/usr/X11R6/include -L. -L/usr/X11R6/lib \\\n+    -I/usr/local/classpath/include -L/usr/local/classpath/lib/classpath \\\n+    -lX11 -ljawtgnu -shared -o libDemoJAWT.so \\\n+    gnu/classpath/examples/jawt/DemoJAWT.c\n+\n+You can then run the example as follows:\n+\n+  export LD_LIBRARY_PATH=.:/usr/local/classpath/lib/classpath\n+  jamvm gnu.classpath.examples.jawt.DemoJAWT\n+\n All example code is distributed under the GNU General Public License (GPL).\n \n The example icons used in some of the examples come from gnome-icon-theme"}, {"sha": "e8c428b59631caab15846691c02c08f4983d181e", "filename": "libjava/classpath/examples/gnu/classpath/examples/swing/Demo.java", "status": "modified", "additions": 36, "deletions": 2, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fswing%2FDemo.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fswing%2FDemo.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fswing%2FDemo.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -141,6 +141,8 @@ public void actionPerformed(ActionEvent e)\n     preferences.add(new JCheckBoxMenuItem(\"Check Spelling\",\n \t\t    stockIcon(\"spell-check\")));\n     preferences.add(new JCheckBoxMenuItem(\"World Peace\"));\n+    preferences.add(new JSeparator());\n+    preferences.add(new JRadioButtonMenuItem(\"Radio Button\"));\n     edit.add(preferences);\n \n     JMenu examples = new JMenu(\"Examples\");\n@@ -493,6 +495,7 @@ private static JPanel mkTreeWorld()\n \n     final JTree tree = new JTree(root);\n     tree.setLargeModel(true);\n+    tree.setEditable(true);\n     DefaultTreeSelectionModel dtsm = new DefaultTreeSelectionModel();\n     dtsm.setSelectionMode(DefaultTreeSelectionModel.SINGLE_TREE_SELECTION);\n     tree.setSelectionModel(dtsm);\n@@ -501,7 +504,6 @@ private static JPanel mkTreeWorld()\n     JButton add = mkButton(\"add element\");\n     add.addActionListener(new ActionListener()\n       {\n-        int i = 0;\n         public void actionPerformed(ActionEvent e)\n         {\n            for (int i = 0; i < tree.getRowCount(); i++)\n@@ -641,6 +643,29 @@ public void actionPerformed(ActionEvent e)\n     return panel;\n   }\n \n+  static JPanel mkTabWorld() \n+  {\n+    JPanel panel = new JPanel(new GridLayout(2, 2));\n+    panel.setBorder(BorderFactory.createEmptyBorder(2, 2, 2, 2));\n+    JTabbedPane tabs1 = new JTabbedPane(SwingConstants.TOP);\n+    tabs1.add(\"Top Item 1\", new JButton(\"Button\"));\n+    tabs1.add(\"Top Item 2\", new JButton(\"Button\"));\n+    JTabbedPane tabs2 = new JTabbedPane(SwingConstants.LEFT);\n+    tabs2.add(\"Left Item 1\", new JButton(\"Button\"));\n+    tabs2.add(\"Left Item 2\", new JButton(\"Button\"));\n+    JTabbedPane tabs3 = new JTabbedPane(SwingConstants.BOTTOM);\n+    tabs3.add(\"Bottom Item 1\", new JButton(\"Button\"));\n+    tabs3.add(\"Bottom Item 2\", new JButton(\"Button\"));\n+    JTabbedPane tabs4 = new JTabbedPane(SwingConstants.RIGHT);\n+    tabs4.add(\"Right Item 1\", new JButton(\"Button\"));\n+    tabs4.add(\"Right Item 2\", new JButton(\"Button\"));\n+    panel.add(tabs1);\n+    panel.add(tabs2);\n+    panel.add(tabs3);\n+    panel.add(tabs4);\n+    return panel;        \n+  }\n+\n   static JTabbedPane mkTabbedPane()\n   {\n     JTabbedPane tabs = new JTabbedPane();\n@@ -649,6 +674,7 @@ static JTabbedPane mkTabbedPane()\n     tabs.add(\"List world!\", mkListWorld());\n     tabs.add(\"Desktop world!\", mkDesktopWorld());\n     tabs.add(\"Tree world!\", mkTreeWorld());\n+    tabs.add(\"Tab world!\", mkTabWorld());\n     return tabs;\n   }\n \n@@ -658,6 +684,8 @@ static JComponent mkSliders()\n     slider.setPaintTrack(true);\n     slider.setPaintTicks(true);\n     slider.setMajorTickSpacing(30);\n+    slider.setMinorTickSpacing(5);\n+    slider.setPaintLabels(true);\n     slider.setInverted(false);\n     JProgressBar progress = new JProgressBar();\n     BoundedRangeModel model = new DefaultBoundedRangeModel(10, 1, 0, 100);\n@@ -1063,7 +1091,13 @@ private JPanel mkButtonBar()\n     \n     JButton exitDisposer = mkDisposerButton(frame);\n     panel.add(exitDisposer);\n-\n+    exitDisposer.addActionListener(new ActionListener()\n+      {\n+\tpublic void actionPerformed(ActionEvent e)\n+\t{\n+\t  System.exit(1);\n+\t}\n+      });\n     return panel;\n   }\n "}, {"sha": "ed7986b8d32912840eaaf95f179d08384250fdee", "filename": "libjava/classpath/external/Makefile.in", "status": "modified", "additions": 18, "deletions": 19, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fexternal%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fexternal%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2FMakefile.in?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -1,8 +1,8 @@\n-# Makefile.in generated by automake 1.9.5 from Makefile.am.\n+# Makefile.in generated by automake 1.9.3 from Makefile.am.\n # @configure_input@\n \n # Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,\n-# 2003, 2004, 2005  Free Software Foundation, Inc.\n+# 2003, 2004  Free Software Foundation, Inc.\n # This Makefile.in is free software; the Free Software Foundation\n # gives unlimited permission to copy and/or distribute it,\n # with or without modifications, as long as this notice is preserved.\n@@ -91,8 +91,14 @@ CREATE_JNI_HEADERS_FALSE = @CREATE_JNI_HEADERS_FALSE@\n CREATE_JNI_HEADERS_TRUE = @CREATE_JNI_HEADERS_TRUE@\n CREATE_JNI_LIBRARIES_FALSE = @CREATE_JNI_LIBRARIES_FALSE@\n CREATE_JNI_LIBRARIES_TRUE = @CREATE_JNI_LIBRARIES_TRUE@\n+CREATE_QT_PEER_LIBRARIES_FALSE = @CREATE_QT_PEER_LIBRARIES_FALSE@\n+CREATE_QT_PEER_LIBRARIES_TRUE = @CREATE_QT_PEER_LIBRARIES_TRUE@\n CREATE_XMLJ_LIBRARY_FALSE = @CREATE_XMLJ_LIBRARY_FALSE@\n CREATE_XMLJ_LIBRARY_TRUE = @CREATE_XMLJ_LIBRARY_TRUE@\n+CXX = @CXX@\n+CXXCPP = @CXXCPP@\n+CXXDEPMODE = @CXXDEPMODE@\n+CXXFLAGS = @CXXFLAGS@\n CYGPATH_W = @CYGPATH_W@\n DATE = @DATE@\n DEFS = @DEFS@\n@@ -154,6 +160,7 @@ MAINTAINER_MODE_FALSE = @MAINTAINER_MODE_FALSE@\n MAINTAINER_MODE_TRUE = @MAINTAINER_MODE_TRUE@\n MAKEINFO = @MAKEINFO@\n MKDIR = @MKDIR@\n+MOC = @MOC@\n OBJEXT = @OBJEXT@\n PACKAGE = @PACKAGE@\n PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@\n@@ -165,12 +172,13 @@ PANGOFT2_CFLAGS = @PANGOFT2_CFLAGS@\n PANGOFT2_LIBS = @PANGOFT2_LIBS@\n PATH_SEPARATOR = @PATH_SEPARATOR@\n PKG_CONFIG = @PKG_CONFIG@\n+QT_CFLAGS = @QT_CFLAGS@\n+QT_LIBS = @QT_LIBS@\n RANLIB = @RANLIB@\n REGEN_PARSERS_FALSE = @REGEN_PARSERS_FALSE@\n REGEN_PARSERS_TRUE = @REGEN_PARSERS_TRUE@\n REMOVE = @REMOVE@\n SET_MAKE = @SET_MAKE@\n-SH = @SH@\n SHELL = @SHELL@\n STRICT_WARNING_CFLAGS = @STRICT_WARNING_CFLAGS@\n STRIP = @STRIP@\n@@ -192,10 +200,13 @@ X_LIBS = @X_LIBS@\n X_PRE_LIBS = @X_PRE_LIBS@\n ZIP = @ZIP@\n ac_ct_CC = @ac_ct_CC@\n+ac_ct_CXX = @ac_ct_CXX@\n ac_ct_RANLIB = @ac_ct_RANLIB@\n ac_ct_STRIP = @ac_ct_STRIP@\n am__fastdepCC_FALSE = @am__fastdepCC_FALSE@\n am__fastdepCC_TRUE = @am__fastdepCC_TRUE@\n+am__fastdepCXX_FALSE = @am__fastdepCXX_FALSE@\n+am__fastdepCXX_TRUE = @am__fastdepCXX_TRUE@\n am__include = @am__include@\n am__leading_dot = @am__leading_dot@\n am__quote = @am__quote@\n@@ -287,13 +298,7 @@ uninstall-info-am:\n #     (which will cause the Makefiles to be regenerated when you run `make');\n # (2) otherwise, pass the desired values on the `make' command line.\n $(RECURSIVE_TARGETS):\n-\t@failcom='exit 1'; \\\n-\tfor f in x $$MAKEFLAGS; do \\\n-\t  case $$f in \\\n-\t    *=* | --[!k]*);; \\\n-\t    *k*) failcom='fail=yes';; \\\n-\t  esac; \\\n-\tdone; \\\n+\t@set fnord $$MAKEFLAGS; amf=$$2; \\\n \tdot_seen=no; \\\n \ttarget=`echo $@ | sed s/-recursive//`; \\\n \tlist='$(SUBDIRS)'; for subdir in $$list; do \\\n@@ -305,21 +310,15 @@ $(RECURSIVE_TARGETS):\n \t    local_target=\"$$target\"; \\\n \t  fi; \\\n \t  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \\\n-\t  || eval $$failcom; \\\n+\t   || case \"$$amf\" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \\\n \tdone; \\\n \tif test \"$$dot_seen\" = \"no\"; then \\\n \t  $(MAKE) $(AM_MAKEFLAGS) \"$$target-am\" || exit 1; \\\n \tfi; test -z \"$$fail\"\n \n mostlyclean-recursive clean-recursive distclean-recursive \\\n maintainer-clean-recursive:\n-\t@failcom='exit 1'; \\\n-\tfor f in x $$MAKEFLAGS; do \\\n-\t  case $$f in \\\n-\t    *=* | --[!k]*);; \\\n-\t    *k*) failcom='fail=yes';; \\\n-\t  esac; \\\n-\tdone; \\\n+\t@set fnord $$MAKEFLAGS; amf=$$2; \\\n \tdot_seen=no; \\\n \tcase \"$@\" in \\\n \t  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \\\n@@ -340,7 +339,7 @@ maintainer-clean-recursive:\n \t    local_target=\"$$target\"; \\\n \t  fi; \\\n \t  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \\\n-\t  || eval $$failcom; \\\n+\t   || case \"$$amf\" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \\\n \tdone && test -z \"$$fail\"\n tags-recursive:\n \tlist='$(SUBDIRS)'; for subdir in $$list; do \\"}, {"sha": "e7634127a067f692f118a5ec852d6c2046e59ed5", "filename": "libjava/classpath/external/sax/Makefile.in", "status": "modified", "additions": 14, "deletions": 3, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fexternal%2Fsax%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fexternal%2Fsax%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fsax%2FMakefile.in?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -1,8 +1,8 @@\n-# Makefile.in generated by automake 1.9.5 from Makefile.am.\n+# Makefile.in generated by automake 1.9.3 from Makefile.am.\n # @configure_input@\n \n # Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,\n-# 2003, 2004, 2005  Free Software Foundation, Inc.\n+# 2003, 2004  Free Software Foundation, Inc.\n # This Makefile.in is free software; the Free Software Foundation\n # gives unlimited permission to copy and/or distribute it,\n # with or without modifications, as long as this notice is preserved.\n@@ -82,8 +82,14 @@ CREATE_JNI_HEADERS_FALSE = @CREATE_JNI_HEADERS_FALSE@\n CREATE_JNI_HEADERS_TRUE = @CREATE_JNI_HEADERS_TRUE@\n CREATE_JNI_LIBRARIES_FALSE = @CREATE_JNI_LIBRARIES_FALSE@\n CREATE_JNI_LIBRARIES_TRUE = @CREATE_JNI_LIBRARIES_TRUE@\n+CREATE_QT_PEER_LIBRARIES_FALSE = @CREATE_QT_PEER_LIBRARIES_FALSE@\n+CREATE_QT_PEER_LIBRARIES_TRUE = @CREATE_QT_PEER_LIBRARIES_TRUE@\n CREATE_XMLJ_LIBRARY_FALSE = @CREATE_XMLJ_LIBRARY_FALSE@\n CREATE_XMLJ_LIBRARY_TRUE = @CREATE_XMLJ_LIBRARY_TRUE@\n+CXX = @CXX@\n+CXXCPP = @CXXCPP@\n+CXXDEPMODE = @CXXDEPMODE@\n+CXXFLAGS = @CXXFLAGS@\n CYGPATH_W = @CYGPATH_W@\n DATE = @DATE@\n DEFS = @DEFS@\n@@ -145,6 +151,7 @@ MAINTAINER_MODE_FALSE = @MAINTAINER_MODE_FALSE@\n MAINTAINER_MODE_TRUE = @MAINTAINER_MODE_TRUE@\n MAKEINFO = @MAKEINFO@\n MKDIR = @MKDIR@\n+MOC = @MOC@\n OBJEXT = @OBJEXT@\n PACKAGE = @PACKAGE@\n PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@\n@@ -156,12 +163,13 @@ PANGOFT2_CFLAGS = @PANGOFT2_CFLAGS@\n PANGOFT2_LIBS = @PANGOFT2_LIBS@\n PATH_SEPARATOR = @PATH_SEPARATOR@\n PKG_CONFIG = @PKG_CONFIG@\n+QT_CFLAGS = @QT_CFLAGS@\n+QT_LIBS = @QT_LIBS@\n RANLIB = @RANLIB@\n REGEN_PARSERS_FALSE = @REGEN_PARSERS_FALSE@\n REGEN_PARSERS_TRUE = @REGEN_PARSERS_TRUE@\n REMOVE = @REMOVE@\n SET_MAKE = @SET_MAKE@\n-SH = @SH@\n SHELL = @SHELL@\n STRICT_WARNING_CFLAGS = @STRICT_WARNING_CFLAGS@\n STRIP = @STRIP@\n@@ -183,10 +191,13 @@ X_LIBS = @X_LIBS@\n X_PRE_LIBS = @X_PRE_LIBS@\n ZIP = @ZIP@\n ac_ct_CC = @ac_ct_CC@\n+ac_ct_CXX = @ac_ct_CXX@\n ac_ct_RANLIB = @ac_ct_RANLIB@\n ac_ct_STRIP = @ac_ct_STRIP@\n am__fastdepCC_FALSE = @am__fastdepCC_FALSE@\n am__fastdepCC_TRUE = @am__fastdepCC_TRUE@\n+am__fastdepCXX_FALSE = @am__fastdepCXX_FALSE@\n+am__fastdepCXX_TRUE = @am__fastdepCXX_TRUE@\n am__include = @am__include@\n am__leading_dot = @am__leading_dot@\n am__quote = @am__quote@"}, {"sha": "5392c64ede2caeaf0ec183e492b980272d76710c", "filename": "libjava/classpath/external/w3c_dom/Makefile.in", "status": "modified", "additions": 14, "deletions": 3, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fexternal%2Fw3c_dom%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fexternal%2Fw3c_dom%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fw3c_dom%2FMakefile.in?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -1,8 +1,8 @@\n-# Makefile.in generated by automake 1.9.5 from Makefile.am.\n+# Makefile.in generated by automake 1.9.3 from Makefile.am.\n # @configure_input@\n \n # Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,\n-# 2003, 2004, 2005  Free Software Foundation, Inc.\n+# 2003, 2004  Free Software Foundation, Inc.\n # This Makefile.in is free software; the Free Software Foundation\n # gives unlimited permission to copy and/or distribute it,\n # with or without modifications, as long as this notice is preserved.\n@@ -82,8 +82,14 @@ CREATE_JNI_HEADERS_FALSE = @CREATE_JNI_HEADERS_FALSE@\n CREATE_JNI_HEADERS_TRUE = @CREATE_JNI_HEADERS_TRUE@\n CREATE_JNI_LIBRARIES_FALSE = @CREATE_JNI_LIBRARIES_FALSE@\n CREATE_JNI_LIBRARIES_TRUE = @CREATE_JNI_LIBRARIES_TRUE@\n+CREATE_QT_PEER_LIBRARIES_FALSE = @CREATE_QT_PEER_LIBRARIES_FALSE@\n+CREATE_QT_PEER_LIBRARIES_TRUE = @CREATE_QT_PEER_LIBRARIES_TRUE@\n CREATE_XMLJ_LIBRARY_FALSE = @CREATE_XMLJ_LIBRARY_FALSE@\n CREATE_XMLJ_LIBRARY_TRUE = @CREATE_XMLJ_LIBRARY_TRUE@\n+CXX = @CXX@\n+CXXCPP = @CXXCPP@\n+CXXDEPMODE = @CXXDEPMODE@\n+CXXFLAGS = @CXXFLAGS@\n CYGPATH_W = @CYGPATH_W@\n DATE = @DATE@\n DEFS = @DEFS@\n@@ -145,6 +151,7 @@ MAINTAINER_MODE_FALSE = @MAINTAINER_MODE_FALSE@\n MAINTAINER_MODE_TRUE = @MAINTAINER_MODE_TRUE@\n MAKEINFO = @MAKEINFO@\n MKDIR = @MKDIR@\n+MOC = @MOC@\n OBJEXT = @OBJEXT@\n PACKAGE = @PACKAGE@\n PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@\n@@ -156,12 +163,13 @@ PANGOFT2_CFLAGS = @PANGOFT2_CFLAGS@\n PANGOFT2_LIBS = @PANGOFT2_LIBS@\n PATH_SEPARATOR = @PATH_SEPARATOR@\n PKG_CONFIG = @PKG_CONFIG@\n+QT_CFLAGS = @QT_CFLAGS@\n+QT_LIBS = @QT_LIBS@\n RANLIB = @RANLIB@\n REGEN_PARSERS_FALSE = @REGEN_PARSERS_FALSE@\n REGEN_PARSERS_TRUE = @REGEN_PARSERS_TRUE@\n REMOVE = @REMOVE@\n SET_MAKE = @SET_MAKE@\n-SH = @SH@\n SHELL = @SHELL@\n STRICT_WARNING_CFLAGS = @STRICT_WARNING_CFLAGS@\n STRIP = @STRIP@\n@@ -183,10 +191,13 @@ X_LIBS = @X_LIBS@\n X_PRE_LIBS = @X_PRE_LIBS@\n ZIP = @ZIP@\n ac_ct_CC = @ac_ct_CC@\n+ac_ct_CXX = @ac_ct_CXX@\n ac_ct_RANLIB = @ac_ct_RANLIB@\n ac_ct_STRIP = @ac_ct_STRIP@\n am__fastdepCC_FALSE = @am__fastdepCC_FALSE@\n am__fastdepCC_TRUE = @am__fastdepCC_TRUE@\n+am__fastdepCXX_FALSE = @am__fastdepCXX_FALSE@\n+am__fastdepCXX_TRUE = @am__fastdepCXX_TRUE@\n am__include = @am__include@\n am__leading_dot = @am__leading_dot@\n am__quote = @am__quote@"}, {"sha": "0a37132b26f3e9b25c7536ea657b9aea8740a8ff", "filename": "libjava/classpath/gnu/CORBA/CDR/Vio.java", "status": "modified", "additions": 152, "deletions": 34, "changes": 186, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2FCORBA%2FCDR%2FVio.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2FCORBA%2FCDR%2FVio.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FCDR%2FVio.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -46,6 +46,7 @@\n import org.omg.CORBA.MARSHAL;\n import org.omg.CORBA.NO_IMPLEMENT;\n import org.omg.CORBA.StringSeqHelper;\n+import org.omg.CORBA.portable.BoxedValueHelper;\n import org.omg.CORBA.portable.InputStream;\n import org.omg.CORBA.portable.OutputStream;\n import org.omg.CORBA.portable.Streamable;\n@@ -55,6 +56,8 @@\n import java.io.IOException;\n import java.io.Serializable;\n \n+import java.lang.reflect.Method;\n+\n /**\n  * A specialised class for reading and writing the value types.\n  *\n@@ -222,7 +225,7 @@ else if ((value_tag & vf_ID) != 0)\n           throw new MARSHAL(\"Unable to instantiate the value type\");\n         else\n           {\n-            read_instance(input, ox, value_tag);\n+            read_instance(input, ox, value_tag, null);\n             return (Serializable) ox;\n           }\n       }\n@@ -285,7 +288,7 @@ else if ((value_tag & vf_ID) != 0)\n               }\n           }\n \n-        read_instance(input, ox, value_tag);\n+        read_instance(input, ox, value_tag, null);\n         return (Serializable) ox;\n       }\n     catch (Exception ex)\n@@ -301,17 +304,22 @@ else if ((value_tag & vf_ID) != 0)\n    * an instance.\n    *\n    * @param input a stream to read from.\n-   * @param value_instance an instance of the value.\n+   *\n+   * @param value_instance an pre-created instance of the value. If the\n+   * helper is not null, this parameter is ignored an should be null.\n+   *\n+   * @param helper a helper to create an instance and read the object-\n+   * specific part of the record. If the value_instance is used instead,\n+   * this parameter should be null.\n    *\n    * @return the loaded value.\n    *\n    * @throws MARSHAL if the reading has failed due any reason.\n    */\n-  public static Serializable read(InputStream input, Serializable value_instance)\n+  public static Object read(InputStream input, Object value_instance,\n+    Object helper\n+  )\n   {\n-    // Explicitly prevent the stream from closing as we may need\n-    // to read the subsequent bytes as well. Stream may be auto-closed\n-    // in its finalizer.\n     try\n       {\n         int value_tag = input.read_long();\n@@ -345,28 +353,54 @@ else if ((value_tag & vf_ID) != 0)\n               }\n           }\n \n-        read_instance(input, value_instance, value_tag);\n-        return (Serializable) value_instance;\n+        value_instance =\n+          read_instance(input, value_instance, value_tag, helper);\n+        return value_instance;\n       }\n     catch (Exception ex)\n       {\n         throw new MARSHAL(ex + \":\" + ex.getMessage());\n       }\n   }\n \n+  /**\n+   * Read using provided boxed value helper. This method expects\n+   * the full value type header, followed by contents, that are\n+   * delegated to the provided helper. It handles null.\n+   *\n+   * @param input the stream to read from.\n+   * @param helper the helper that reads the type-specific part of\n+   * the content.\n+   *\n+   * @return the value, created by the helper, or null if the\n+   * header indicates that null was previously written.\n+   */\n+  public static Serializable read(InputStream input, Object helper)\n+  {\n+    return (Serializable) read(input, null, helper);\n+  }\n+\n   /**\n    * Fill in the instance fields by the data from the input stream.\n    * The method assumes that the value header, if any, is already\n    * behind. The information from the stream is stored into the\n    * passed ox parameter.\n    *\n    * @param input an input stream to read from.\n-   * @param value a value type object, must be either Streamable or\n-   * CustomMarshal.\n+   *\n+   * @param value a pre-instantiated value type object, must be either\n+   * Streamable or CustomMarshal. If the helper is used, this parameter\n+   * is ignored and should be null.\n+   *\n+   * @param value_tag the tag that must be read previously.\n+   * @param helper the helper for read object specific part; may be\n+   * null to read in using other methods.\n+   *\n+   * @return the value that was read.\n    */\n-  public static void read_instance(InputStream input, Object value,\n-                                   int value_tag\n-                                  )\n+  private static Object read_instance(InputStream input, Object value,\n+    int value_tag, Object helper\n+  )\n   {\n     try\n       {\n@@ -377,7 +411,7 @@ public static void read_instance(InputStream input, Object value,\n \n             // Read all chunks.\n             int chunk_size = input.read_long();\n-            if (chunk_size <= 0)\n+            if (chunk_size < 0)\n               throw new MARSHAL(\"Invalid first chunk size \" + chunk_size);\n \n             byte[] r = new byte[ chunk_size ];\n@@ -412,12 +446,29 @@ public static void read_instance(InputStream input, Object value,\n                 // More than one chunk was present.\n                 // Add the last chunk.\n                 bout.write(r, 0, n);\n-                input = new cdrBufInput(bout.toByteArray());\n+                input = new noHeaderInput(bout.toByteArray());\n               }\n             else\n               {\n                 // Only one chunk was present.\n-                input = new cdrBufInput(r);\n+                input = new noHeaderInput(r);\n+              }\n+          }\n+        else\n+          {\n+            if (input instanceof cdrBufInput)\n+              {\n+                // Highly probable case.\n+                input =\n+                  new noHeaderInput(((cdrBufInput) input).buffer.getBuffer());\n+              }\n+            else\n+              {\n+                cdrBufOutput bout = new cdrBufOutput();\n+                int c;\n+                while ((c = input.read()) >= 0)\n+                  bout.write((byte) c);\n+                input = new noHeaderInput(bout.buffer.toByteArray());\n               }\n           }\n       }\n@@ -447,12 +498,17 @@ public static void read_instance(InputStream input, Object value,\n       {\n         ((Streamable) value)._read(input);\n       }\n+    else if (helper instanceof BoxedValueHelper)\n+      value = ((BoxedValueHelper) helper).read_value(input);\n+    else if (helper instanceof ValueFactory)\n+      value =\n+        ((ValueFactory) helper).read_value((org.omg.CORBA_2_3.portable.InputStream) input);\n     else\n \n       // Stating the interfaces that the USER should use.\n       throw new MARSHAL(\"The \" + value.getClass().getName() +\n-                        \" must implement either StreamableValue or CustomValue.\"\n-                       );\n+        \" must implement either StreamableValue or CustomValue.\"\n+      );\n \n     // The negative end of state marker is expected from OMG standard.\n     // If the chunking is used, this marker is already extracted.\n@@ -462,6 +518,8 @@ public static void read_instance(InputStream input, Object value,\n         if (eor >= 0)\n           throw new MARSHAL(\"End of state marker has an invalid value \" + eor);\n       }\n+\n+    return value;\n   }\n \n   /**\n@@ -504,8 +562,8 @@ public static void write(OutputStream output, Serializable value)\n    * @throws MARSHAL if the writing failed due any reason.\n    */\n   public static void write(OutputStream output, Serializable value,\n-                           Class substitute\n-                          )\n+    Class substitute\n+  )\n   {\n     // Write null if this is a null value.\n     if (value == null)\n@@ -527,7 +585,35 @@ public static void write(OutputStream output, Serializable value, String id)\n     if (value == null)\n       output.write_long(vt_NULL);\n     else\n-      write_instance(output, value, id);\n+      write_instance(output, value, id, null);\n+  }\n+\n+  /**\n+   * Write standard value type header, followed by contents, produced\n+   * by the boxed value helper.\n+   *\n+   * @param output the stream to write to.\n+   * @param value the value to write, can be null.\n+   * @param helper the helper that writes the value content if it is\n+   * not null.\n+   */\n+  public static void write(OutputStream output, Serializable value,\n+    Object helper\n+  )\n+  {\n+    if (value == null)\n+      output.write_long(vt_NULL);\n+    else\n+      {\n+        String id;\n+\n+        if (helper instanceof BoxedValueHelper)\n+          id = ((BoxedValueHelper) helper).get_id();\n+        else\n+          id = \"\";\n+\n+        write_instance(output, value, id, helper);\n+      }\n   }\n \n   /**\n@@ -537,10 +623,12 @@ public static void write(OutputStream output, Serializable value, String id)\n    * @param output an output stream to write into.\n    * @param value a value to write.\n    * @param id a value repository id.\n+   * @param helper a helper, writing object - specifica part. Can be null\n+   * if the value should be written unsing other methods.\n    */\n   private static void write_instance(OutputStream output, Serializable value,\n-                                     String id\n-                                    )\n+    String id, Object helper\n+  )\n   {\n     // This implementation always writes a single repository id.\n     // It never writes multiple repository ids and currently does not use\n@@ -563,6 +651,11 @@ private static void write_instance(OutputStream output, Serializable value,\n     output.write_long(value_tag);\n     output.write_string(id);\n \n+    if (helper instanceof BoxedValueHelper)\n+      {\n+        ((BoxedValueHelper) helper).write_value(outObj, value);\n+      }\n+    else\n     // User defince write method is present.\n     if (value instanceof CustomMarshal)\n       {\n@@ -580,11 +673,36 @@ else if (value instanceof Streamable)\n         ((Streamable) value)._write(outObj);\n       }\n     else\n+      {\n+        // Try to find helper via class loader.\n+        boolean ok = false;\n+        try\n+          {\n+            Class helperClass = Class.forName(ObjectCreator.toHelperName(id));\n+\n+            // It will be the helper for the encapsulated boxed value, not the\n+            // for the global boxed value type itself.\n+            Method write =\n+              helperClass.getMethod(\"write\",\n+                new Class[]\n+                {\n+                  org.omg.CORBA.portable.OutputStream.class, value.getClass()\n+                }\n+              );\n+            write.invoke(null, new Object[] { outObj, value });\n+            ok = true;\n+          }\n+        catch (Exception ex)\n+          {\n+            ok = false;\n+          }\n \n-      // Stating the interfaces that the USER should use.\n-      throw new MARSHAL(\"The \" + value.getClass().getName() +\n-                        \" must implement either StreamableValue or CustomValue.\"\n-                       );\n+        // Stating the interfaces that the USER should use.\n+        if (!ok)\n+          throw new MARSHAL(\"The \" + value.getClass().getName() +\n+            \" must implement either StreamableValue\" + \" or CustomValue.\"\n+          );\n+      }\n \n     if (USE_CHUNKING)\n       {\n@@ -611,8 +729,7 @@ else if (value instanceof Streamable)\n    *\n    * @throws NO_IMPLEMENT, always.\n    */\n-  private static void incorrect_plug_in(Throwable ex)\n-                                 throws NO_IMPLEMENT\n+  static void incorrect_plug_in(Throwable ex) throws NO_IMPLEMENT\n   {\n     NO_IMPLEMENT no = new NO_IMPLEMENT(\"Incorrect CORBA plug-in\");\n     no.initCause(ex);\n@@ -629,10 +746,11 @@ private static void incorrect_plug_in(Throwable ex)\n   private static final void checkTag(int value_tag)\n   {\n     if ((value_tag < 0x7fffff00 || value_tag > 0x7fffffff) &&\n-        value_tag != vt_NULL && value_tag != vt_INDIRECTION\n-       )\n+      value_tag != vt_NULL &&\n+      value_tag != vt_INDIRECTION\n+    )\n       throw new MARSHAL(\"Invalid value record, unsupported header tag: \" +\n-                        value_tag\n-                       );\n+        value_tag\n+      );\n   }\n }\n\\ No newline at end of file"}, {"sha": "69f9c8c5837b6264bd75b349a31068ab841c35ec", "filename": "libjava/classpath/gnu/CORBA/CDR/cdrInput.java", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2FCORBA%2FCDR%2FcdrInput.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2FCORBA%2FCDR%2FcdrInput.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FCDR%2FcdrInput.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -1180,7 +1180,8 @@ else if (s [ 0 ] == 0xFFFE)\n           }\n \n         // Discard the null terminator and, if needed, the endian marker.\n-        return new String(s, p, n - nt - p);\n+        String r = new String(s, p, n - nt - p);\n+        return r;\n       }\n     catch (EOFException ex)\n       {"}, {"sha": "85f341c912d212232d4870fb6a5b0eebe8214608", "filename": "libjava/classpath/gnu/CORBA/CDR/cdrOutput.java", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2FCORBA%2FCDR%2FcdrOutput.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2FCORBA%2FCDR%2FcdrOutput.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FCDR%2FcdrOutput.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -41,6 +41,7 @@\n import gnu.CORBA.BigDecimalHelper;\n import gnu.CORBA.GIOP.CharSets_OSF;\n import gnu.CORBA.GIOP.cxCodeSet;\n+import gnu.CORBA.Poa.gnuServantObject;\n import gnu.CORBA.IOR;\n import gnu.CORBA.Simple_delegate;\n import gnu.CORBA.TypeCodeHelper;\n@@ -99,7 +100,7 @@\n   /**\n    * The GIOP version.\n    */\n-  protected Version giop = new Version(1, 0);\n+  protected Version giop = new Version(1, 2);\n \n   /**\n    * The code set information.\n@@ -327,6 +328,15 @@ public void write_Object(org.omg.CORBA.Object x)\n         IOR.write_null(this);\n         return;\n       }\n+    else if (x instanceof gnuServantObject)\n+      {\n+        // The ORB may be different if several ORBs coexist\n+        // in the same machine.\n+        gnuServantObject g = (gnuServantObject) x;\n+        IOR ior = g.orb.getLocalIor(x);\n+        ior._write_no_endian(this);\n+        return;\n+      }\n     else if (x instanceof ObjectImpl)\n       {\n         Delegate d = ((ObjectImpl) x)._get_delegate();"}, {"sha": "b7eefb133a2ebb9af5e0ae81ac284e487c063937", "filename": "libjava/classpath/gnu/CORBA/Connected_objects.java", "status": "modified", "additions": 44, "deletions": 19, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2FCORBA%2FConnected_objects.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2FCORBA%2FConnected_objects.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FConnected_objects.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -60,11 +60,14 @@\n     /**\n      * Create an initialised instance.\n      */\n-    cObject(org.omg.CORBA.Object _object, int _port, byte[] _key)\n+    cObject(org.omg.CORBA.Object _object, int _port, byte[] _key,\n+            java.lang.Object an_identity\n+           )\n     {\n       object = _object;\n       port = _port;\n       key = _key;\n+      identity = an_identity;\n     }\n \n     /**\n@@ -82,6 +85,12 @@\n      */\n     public final byte[] key;\n \n+    /**\n+     * The shared serving identity (usually POA) or null if no such\n+     * applicable.\n+     */\n+    public final java.lang.Object identity;\n+\n     public boolean equals(java.lang.Object other)\n     {\n       if (other instanceof cObject)\n@@ -118,17 +127,23 @@ public boolean equals(java.lang.Object other)\n    */\n   public cObject getKey(org.omg.CORBA.Object stored_object)\n   {\n-    Map.Entry item;\n-    Iterator iter = objects.entrySet().iterator();\n-    cObject ref;\n-\n-    while (iter.hasNext())\n+    synchronized (objects)\n       {\n-        item = (Map.Entry) iter.next();\n-        ref = (cObject) item.getValue();\n-        if (stored_object.equals(ref.object))\n-          return ref;\n+        Map.Entry item;\n+        Iterator iter = objects.entrySet().iterator();\n+        cObject ref;\n+\n+        while (iter.hasNext())\n+          {\n+            item = (Map.Entry) iter.next();\n+            ref = (cObject) item.getValue();\n+            if (stored_object.equals(ref.object) ||\n+                stored_object._is_equivalent(ref.object)\n+               )\n+              return ref;\n+          }\n       }\n+\n     return null;\n   }\n \n@@ -144,7 +159,7 @@ public cObject getKey(org.omg.CORBA.Object stored_object)\n    */\n   public cObject add(org.omg.CORBA.Object object, int port)\n   {\n-    return add(generateObjectKey(object), object, port);\n+    return add(generateObjectKey(object), object, port, null);\n   }\n \n   /**\n@@ -155,10 +170,15 @@ public cObject add(org.omg.CORBA.Object object, int port)\n    * @param port the port, on that the ORB will be listening on the\n    * remote invocations.\n    */\n-  public cObject add(byte[] key, org.omg.CORBA.Object object, int port)\n+  public cObject add(byte[] key, org.omg.CORBA.Object object, int port,\n+                     java.lang.Object identity\n+                    )\n   {\n-    cObject rec = new cObject(object, port, key);\n-    objects.put(key, rec);\n+    cObject rec = new cObject(object, port, key, identity);\n+    synchronized (objects)\n+      {\n+        objects.put(key, rec);\n+      }\n     return rec;\n   }\n \n@@ -171,12 +191,14 @@ public cObject add(byte[] key, org.omg.CORBA.Object object, int port)\n    */\n   public cObject get(byte[] key)\n   {\n-    return (cObject) objects.get(key);\n+    synchronized (objects)\n+      {\n+        return (cObject) objects.get(key);\n+      }\n   }\n \n   /**\n    * Get the map entry set.\n-   * @return\n    */\n   public Set entrySet()\n   {\n@@ -190,9 +212,12 @@ public Set entrySet()\n    */\n   public void remove(org.omg.CORBA.Object object)\n   {\n-    cObject ref = getKey(object);\n-    if (ref != null)\n-      objects.remove(ref.key);\n+    synchronized (objects)\n+      {\n+        cObject ref = getKey(object);\n+        if (ref != null)\n+          objects.remove(ref.key);\n+      }\n   }\n \n   /**"}, {"sha": "2558f5335aa06e26f1600f77d85f0861288c393c", "filename": "libjava/classpath/gnu/CORBA/DynAn/NameValuePairHolder.java", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2FCORBA%2FDynAn%2FNameValuePairHolder.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2FCORBA%2FDynAn%2FNameValuePairHolder.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FDynAn%2FNameValuePairHolder.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -46,9 +46,8 @@\n import org.omg.CORBA.portable.Streamable;\n \n /**\n- * The name-value pair holder. The {@link NameValuePair} has no standard\n- * holder defined, but it is needed to store the {@link NameValuePair} into\n- * {@link Any}.\n+ * The name-value pair holder. The {@link NameValuePair} has no standard holder\n+ * defined, but it is needed to store the {@link NameValuePair} into {@link Any}.\n  *\n  * @author Audrius Meskauskas, Lithuania (AudriusA@Bioinformatics.org)\n  */\n@@ -92,4 +91,4 @@ public void _write(OutputStream output)\n   {\n     NameValuePairHelper.write(output, value);\n   }\n-}\n+}\n\\ No newline at end of file"}, {"sha": "8b75205056b81bb24df0dbecebbe3a8a9999f7b9", "filename": "libjava/classpath/gnu/CORBA/ExceptionCreator.java", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2FCORBA%2FExceptionCreator.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2FCORBA%2FExceptionCreator.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FExceptionCreator.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -145,14 +145,11 @@ public static UserException readUserException(String idl, InputStream input)\n   {\n     try\n       {\n-        String holder = toHelperName(idl);\n-\n-        System.out.println(\"Helper \" + holder);\n-\n-        Class holderClass = Class.forName(holder);\n+        String helper = toHelperName(idl);\n+        Class helperClass = Class.forName(helper);\n \n         Method read =\n-          holderClass.getMethod(\"read\",\n+          helperClass.getMethod(\"read\",\n                                 new Class[]\n                                 {\n                                   org.omg.CORBA.portable.InputStream.class"}, {"sha": "1565b2cf14a6abac317aba1b1f2e5babc85e1dcc", "filename": "libjava/classpath/gnu/CORBA/Functional_ORB.java", "status": "modified", "additions": 499, "deletions": 310, "changes": 809, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2FCORBA%2FFunctional_ORB.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2FCORBA%2FFunctional_ORB.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FFunctional_ORB.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -1,4 +1,4 @@\n-/* FunctionalORB.java --\n+/* Functional_ORB.java --\n    Copyright (C) 2005 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n@@ -40,24 +40,28 @@\n \n import gnu.CORBA.CDR.cdrBufInput;\n import gnu.CORBA.CDR.cdrBufOutput;\n+import gnu.CORBA.GIOP.CloseMessage;\n import gnu.CORBA.GIOP.ErrorMessage;\n import gnu.CORBA.GIOP.MessageHeader;\n import gnu.CORBA.GIOP.ReplyHeader;\n import gnu.CORBA.GIOP.RequestHeader;\n-import gnu.CORBA.GIOP.CloseMessage;\n+import gnu.CORBA.NamingService.NameParser;\n import gnu.CORBA.NamingService.NamingServiceTransient;\n+import gnu.CORBA.Poa.gnuForwardRequest;\n \n-import org.omg.CORBA.BAD_INV_ORDER;\n import org.omg.CORBA.BAD_OPERATION;\n import org.omg.CORBA.BAD_PARAM;\n import org.omg.CORBA.CompletionStatus;\n+import org.omg.CORBA.DATA_CONVERSION;\n import org.omg.CORBA.MARSHAL;\n import org.omg.CORBA.NO_RESOURCES;\n import org.omg.CORBA.OBJECT_NOT_EXIST;\n+import org.omg.CORBA.Object;\n import org.omg.CORBA.ORBPackage.InvalidName;\n import org.omg.CORBA.Request;\n import org.omg.CORBA.SystemException;\n import org.omg.CORBA.UNKNOWN;\n+import org.omg.CORBA.WrongTransaction;\n import org.omg.CORBA.portable.Delegate;\n import org.omg.CORBA.portable.InvokeHandler;\n import org.omg.CORBA.portable.ObjectImpl;\n@@ -78,6 +82,7 @@\n \n import java.util.ArrayList;\n import java.util.Enumeration;\n+import java.util.Hashtable;\n import java.util.Iterator;\n import java.util.LinkedList;\n import java.util.Map;\n@@ -87,26 +92,25 @@\n \n /**\n  * The ORB implementation, capable to handle remote invocations on the\n- * registered object.\n+ * registered object. This class implements all features, required till the jdk\n+ * 1.3 inclusive, but does not support the POA that appears since 1.4. The POA\n+ * is supported by {@link gnu.CORBA.Poa.ORB_1_4}.\n  *\n  * @author Audrius Meskauskas (AudriusA@Bioinformatics.org)\n  */\n-public class Functional_ORB\n-  extends Restricted_ORB\n+public class Functional_ORB extends Restricted_ORB\n {\n   /**\n-   * A server, responsible for listening on requests on some\n-   * local port. The ORB may listen on multiple ports and process\n-   * the requests in separate threads. Normally the server takes\n-   * one port per object being served.\n+   * A server, responsible for listening on requests on some local port. The ORB\n+   * may listen on multiple ports and process the requests in separate threads.\n+   * Normally the server takes one port per object being served.\n    */\n-  class portServer\n-    extends Thread\n+  class portServer extends Thread\n   {\n     /**\n      * The number of the currently running parallel threads.\n      */\n-    private int running_threads;\n+    int running_threads;\n \n     /**\n      * The port on that this portServer is listening for requests.\n@@ -119,8 +123,7 @@\n     ServerSocket service;\n \n     /**\n-     * True if the serving node must shutdown due\n-     * call of the close_now().\n+     * True if the serving node must shutdown due call of the close_now().\n      */\n     boolean terminated;\n \n@@ -133,9 +136,8 @@\n     }\n \n     /**\n-     * Enter the serving loop (get request/process it).\n-     * All portServer normally terminate thy threads when\n-     * the Functional_ORB.running is set to false.\n+     * Enter the serving loop (get request/process it). All portServer normally\n+     * terminate thy threads when the Functional_ORB.running is set to false.\n      */\n     public void run()\n     {\n@@ -155,7 +157,7 @@ public void run()\n         {\n           try\n             {\n-              serve(this, service);\n+              tick();\n             }\n           catch (SocketException ex)\n             {\n@@ -179,6 +181,16 @@ public void run()\n         }\n     }\n \n+    /**\n+     * Perform a single serving step.\n+     *\n+     * @throws java.lang.Exception\n+     */\n+    void tick() throws Exception\n+    {\n+      serve(this, service);\n+    }\n+\n     /**\n      * Forcibly close the server socket and mark this port as free.\n      */\n@@ -206,14 +218,41 @@ protected void finalize()\n   }\n \n   /**\n-   * The default value where the first instance of this ORB will start\n-   * looking for a free port.\n+   * A server, responsible for listening on requests on some local port and\n+   * serving multiple requests (probably to the different objects) on the same\n+   * thread.\n+   */\n+  class sharedPortServer extends portServer\n+  {\n+    /**\n+     * Create a new portServer, serving on specific port.\n+     */\n+    sharedPortServer(int _port)\n+    {\n+      super(_port);\n+    }\n+\n+    /**\n+     * Perform a single serving step.\n+     *\n+     * @throws java.lang.Exception\n+     */\n+    void tick() throws Exception\n+    {\n+      Socket request = service.accept();\n+      serveStep(request, false);\n+    }\n+  }\n+\n+  /**\n+   * The default value where the first instance of this ORB will start looking\n+   * for a free port.\n    */\n   public static int DEFAULT_INITIAL_PORT = 1126;\n \n   /**\n-   * The property of port, on that this ORB is listening for requests from clients.\n-   * This class supports one port per ORB only.\n+   * The property of port, on that this ORB is listening for requests from\n+   * clients. This class supports one port per ORB only.\n    */\n   public static final String LISTEN_ON = \"gnu.classpath.CORBA.ListenOn\";\n \n@@ -223,12 +262,14 @@ protected void finalize()\n   public static final String REFERENCE = \"org.omg.CORBA.ORBInitRef\";\n \n   /**\n-   * The property, defining the port on that the default name service is running.\n+   * The property, defining the port on that the default name service is\n+   * running.\n    */\n   public static final String NS_PORT = \"org.omg.CORBA.ORBInitialPort\";\n \n   /**\n-   * The property, defining the host on that the default name service is running.\n+   * The property, defining the host on that the default name service is\n+   * running.\n    */\n   public static final String NS_HOST = \"org.omg.CORBA.ORBInitialHost\";\n \n@@ -238,24 +279,25 @@ protected void finalize()\n   public static final String NAME_SERVICE = \"NameService\";\n \n   /**\n-   * The if the client has once opened a socket, it should start sending\n-   * the message header in a given time. Otherwise the server will close the\n-   * socket. This prevents server hang when the client opens the socket,\n-   * but does not send any message, usually due crash on the client side.\n+   * The if the client has once opened a socket, it should start sending the\n+   * message header in a given time. Otherwise the server will close the socket.\n+   * This prevents server hang when the client opens the socket, but does not\n+   * send any message, usually due crash on the client side.\n    */\n   public static String START_READING_MESSAGE =\n     \"gnu.classpath.CORBA.TOUT_START_READING_MESSAGE\";\n \n   /**\n-   * If the client has started to send the request message, the socket time\n-   * out changes to the specified value.\n+   * If the client has started to send the request message, the socket time out\n+   * changes to the specified value.\n    */\n-  public static String WHILE_READING = \"gnu.classpath.CORBA.TOUT_WHILE_READING\";\n+  public static String WHILE_READING =\n+    \"gnu.classpath.CORBA.TOUT_WHILE_READING\";\n \n   /**\n-   * If the message body is received, the time out changes to the\n-   * specifice value. This must be longer, as includes time, required to\n-   * process the received task. We make it 40 minutes.\n+   * If the message body is received, the time out changes to the specifice\n+   * value. This must be longer, as includes time, required to process the\n+   * received task. We make it 40 minutes.\n    */\n   public static String AFTER_RECEIVING =\n     \"gnu.classpath.CORBA.TOUT_AFTER_RECEIVING\";\n@@ -266,60 +308,59 @@ protected void finalize()\n   public final String LOCAL_HOST;\n \n   /**\n-   * The if the client has once opened a socket, it should start sending\n-   * the message header in a given time. Otherwise the server will close the\n-   * socket. This prevents server hang when the client opens the socket,\n-   * but does not send any message, usually due crash on the client side.\n+   * The if the client has once opened a socket, it should start sending the\n+   * message header in a given time. Otherwise the server will close the socket.\n+   * This prevents server hang when the client opens the socket, but does not\n+   * send any message, usually due crash on the client side.\n    */\n   private int TOUT_START_READING_MESSAGE = 20 * 1000;\n \n   // (Here and below, we use * to make the meaning of the constant clearler).\n \n   /**\n-   * If the client has started to send the request message, the socket time\n-   * out changes to the specified value.\n+   * If the client has started to send the request message, the socket time out\n+   * changes to the specified value.\n    */\n   private int TOUT_WHILE_READING = 2 * 60 * 1000;\n \n   /**\n-   * If the message body is received, the time out changes to the\n-   * specifice value. This must be longer, as includes time, required to\n-   * process the received task. We make it 40 minutes.\n+   * If the message body is received, the time out changes to the specifice\n+   * value. This must be longer, as includes time, required to process the\n+   * received task. We make it 40 minutes.\n    */\n   private int TOUT_AFTER_RECEIVING = 40 * 60 * 1000;\n \n   /**\n-   * Some clients tend to submit multiple requests over the\n-   * same socket. The server waits for the next request on\n-   * the same socket for the duration, specified\n-   * below. In additions, the request of this implementation also\n-   * waits for the same duration before closing the socket.\n-   * The default time is seven seconds.\n+   * Some clients tend to submit multiple requests over the same socket. The\n+   * server waits for the next request on the same socket for the duration,\n+   * specified below. In additions, the request of this implementation also\n+   * waits for the same duration before closing the socket. The default time is\n+   * seven seconds.\n    */\n   public static int TANDEM_REQUESTS = 7000;\n \n   /**\n    * The map of the already conncted objects.\n    */\n-  protected final Connected_objects connected_objects = new Connected_objects();\n+  protected final Connected_objects connected_objects =\n+    new Connected_objects();\n \n   /**\n-   * The maximal CORBA version, supported by this ORB. The default value\n-   * 0 means that the ORB will not check the request version while trying\n-   * to respond.\n+   * The maximal CORBA version, supported by this ORB. The default value 0 means\n+   * that the ORB will not check the request version while trying to respond.\n    */\n   protected Version max_version;\n \n   /**\n-   * Setting this value to false causes the ORB to shutdown after the\n-   * latest serving operation is complete.\n+   * Setting this value to false causes the ORB to shutdown after the latest\n+   * serving operation is complete.\n    */\n   protected boolean running;\n \n   /**\n    * The map of the initial references.\n    */\n-  private Map initial_references = new TreeMap();\n+  protected Map initial_references = new TreeMap();\n \n   /**\n    * The currently active portServers.\n@@ -332,19 +373,24 @@ protected void finalize()\n   private String ns_host;\n \n   /**\n-   * Probably free port, under that the ORB will try listening for\n-   * remote requests first. When the new object is connected, this\n-   * port is used first, then it is incremented by 1, etc. If the given\n-   * port is not available, up to 20 subsequent values are tried and then\n-   * the parameterless server socket contructor is called. The constant is\n-   * shared between multiple instances of this ORB.\n+   * Probably free port, under that the ORB will try listening for remote\n+   * requests first. When the new object is connected, this port is used first,\n+   * then it is incremented by 1, etc. If the given port is not available, up to\n+   * 20 subsequent values are tried and then the parameterless server socket\n+   * contructor is called. The constant is shared between multiple instances of\n+   * this ORB.\n    */\n   private static int Port = DEFAULT_INITIAL_PORT;\n \n   /**\n    * The port, on that the name service is expected to be running.\n    */\n   private int ns_port = 900;\n+  \n+  /**\n+   * The name parser.\n+   */\n+  NameParser nameParser = new NameParser();\n \n   /**\n    * The instance, stored in this field, handles the asynchronous dynamic\n@@ -358,10 +404,14 @@ protected void finalize()\n   protected LinkedList freed_ports = new LinkedList();\n \n   /**\n-   * The maximal allowed number of the currently running parallel\n-   * threads per object. For security reasons, this is made private and\n-   * unchangeable. After exceeding this limit, the NO_RESOURCES\n-   * is thrown back to the client.\n+   * Maps a single-threaded POAs to they sharedPortServants.\n+   */\n+  protected Hashtable identities = new Hashtable();\n+\n+  /**\n+   * The maximal allowed number of the currently running parallel threads per\n+   * object. For security reasons, this is made private and unchangeable. After\n+   * exceeding this limit, the NO_RESOURCES is thrown back to the client.\n    */\n   private int MAX_RUNNING_THREADS = 256;\n \n@@ -385,38 +435,35 @@ public Functional_ORB()\n   }\n \n   /**\n-  * If the max version is assigned, the orb replies with the error\n-  * message if the request version is above the supported 1.2 version.\n-  * This behavior is recommended by OMG, but not all implementations\n-  * respond that error message by re-sending the request, encoded in the older\n-  * version.\n-  */\n+   * If the max version is assigned, the orb replies with the error message if\n+   * the request version is above the supported 1.2 version. This behavior is\n+   * recommended by OMG, but not all implementations respond that error message\n+   * by re-sending the request, encoded in the older version.\n+   */\n   public void setMaxVersion(Version max_supported)\n   {\n     max_version = max_supported;\n   }\n \n   /**\n-   * Get the maximal supported GIOP version or null if the version is\n-   * not checked.\n+   * Get the maximal supported GIOP version or null if the version is not\n+   * checked.\n    */\n   public Version getMaxVersion()\n   {\n     return max_version;\n   }\n \n   /**\n-   * Get the currently free port, starting from the initially set port\n-   * and going up max 20 steps, then trying to bind into any free\n-   * address.\n+   * Get the currently free port, starting from the initially set port and going\n+   * up max 20 steps, then trying to bind into any free address.\n    *\n    * @return the currently available free port.\n    *\n-   * @throws NO_RESOURCES if the server socked cannot be opened on the\n-   * local host.\n+   * @throws NO_RESOURCES if the server socked cannot be opened on the local\n+   * host.\n    */\n-  public int getFreePort()\n-                  throws BAD_OPERATION\n+  public int getFreePort() throws BAD_OPERATION\n   {\n     ServerSocket s;\n     int a_port;\n@@ -473,12 +520,11 @@ public int getFreePort()\n   }\n \n   /**\n-   * Set the port, on that the server is listening for the client requests.\n-   * If only one object is connected to the orb, the server will be\n-   * try listening on this port first. It the port is busy, or if more\n-   * objects are connected, the subsequent object will receive a larger\n-   * port values, skipping unavailable ports, if required. The change\n-   * applies globally.\n+   * Set the port, on that the server is listening for the client requests. If\n+   * only one object is connected to the orb, the server will be try listening\n+   * on this port first. It the port is busy, or if more objects are connected,\n+   * the subsequent object will receive a larger port values, skipping\n+   * unavailable ports, if required. The change applies globally.\n    *\n    * @param a_Port a port, on that the server is listening for requests.\n    */\n@@ -488,14 +534,13 @@ public static void setPort(int a_Port)\n   }\n \n   /**\n-   * Connect the given CORBA object to this ORB. After the object is\n-   * connected, it starts receiving remote invocations via this ORB.\n+   * Connect the given CORBA object to this ORB. After the object is connected,\n+   * it starts receiving remote invocations via this ORB.\n    *\n-   * The ORB tries to connect the object to the port, that has been\n-   * previously set by {@link setPort(int)}. On failure, it tries\n-   * 20 subsequent larger values and then calls the parameterless\n-   * server socked constructor to get any free local port.\n-   * If this fails, the {@link NO_RESOURCES} is thrown.\n+   * The ORB tries to connect the object to the port, that has been previously\n+   * set by {@link setPort(int)}. On failure, it tries 20 subsequent larger\n+   * values and then calls the parameterless server socked constructor to get\n+   * any free local port. If this fails, the {@link NO_RESOURCES} is thrown.\n    *\n    * @param object the object, must implement the {@link InvokeHandler})\n    * interface.\n@@ -515,19 +560,18 @@ public void connect(org.omg.CORBA.Object object)\n   }\n \n   /**\n-   * Connect the given CORBA object to this ORB, explicitly specifying\n-   * the object key.\n+   * Connect the given CORBA object to this ORB, explicitly specifying the\n+   * object key.\n    *\n-   * The ORB tries to connect the object to the port, that has been\n-   * previously set by {@link setPort(int)}. On failure, it tries\n-   * 20 subsequent larger values and then calls the parameterless\n-   * server socked constructor to get any free local port.\n-   * If this fails, the {@link NO_RESOURCES} is thrown.\n+   * The ORB tries to connect the object to the port, that has been previously\n+   * set by {@link setPort(int)}. On failure, it tries 20 subsequent larger\n+   * values and then calls the parameterless server socked constructor to get\n+   * any free local port. If this fails, the {@link NO_RESOURCES} is thrown.\n    *\n    * @param object the object, must implement the {@link InvokeHandler})\n    * interface.\n-   * @param key the object key, usually used to identify the object from\n-   * remote side.\n+   * @param key the object key, usually used to identify the object from remote\n+   * side.\n    *\n    * @throws BAD_PARAM if the object does not implement the\n    * {@link InvokeHandler}).\n@@ -536,19 +580,65 @@ public void connect(org.omg.CORBA.Object object, byte[] key)\n   {\n     int a_port = getFreePort();\n \n-    Connected_objects.cObject ref = connected_objects.add(key, object, a_port);\n+    Connected_objects.cObject ref =\n+      connected_objects.add(key, object, a_port, null);\n     IOR ior = createIOR(ref);\n     prepareObject(object, ior);\n     if (running)\n       startService(ior);\n   }\n \n+  /**\n+   * Connect the given CORBA object to this ORB, explicitly specifying the\n+   * object key and the identity of the thread (and port), where the object must\n+   * be served. The identity is normally the POA.\n+   *\n+   * The new port server will be started only if there is no one already running\n+   * for the same identity. Otherwise, the task of the existing port server will\n+   * be widened, including duty to serve the given object. All objects,\n+   * connected to a single identity by this method, will process they requests\n+   * subsequently in the same thread. The method is used when the expected\n+   * number of the objects is too large to have a single port and thread per\n+   * object. This method is used by POAs, having a single thread policy.\n+   *\n+   * @param object the object, must implement the {@link InvokeHandler})\n+   * interface.\n+   * @param key the object key, usually used to identify the object from remote\n+   * side.\n+   * @param port the port, where the object must be connected.\n+   *\n+   * @throws BAD_PARAM if the object does not implement the\n+   * {@link InvokeHandler}).\n+   */\n+  public void connect_1_thread(org.omg.CORBA.Object object, byte[] key,\n+    java.lang.Object identity\n+  )\n+  {\n+    sharedPortServer shared = (sharedPortServer) identities.get(identity);\n+    if (shared == null)\n+      {\n+        int a_port = getFreePort();\n+        shared = new sharedPortServer(a_port);\n+        identities.put(identity, shared);\n+        if (running)\n+          {\n+            portServers.add(shared);\n+            shared.start();\n+          }\n+      }\n+\n+    Connected_objects.cObject ref =\n+      connected_objects.add(key, object, shared.s_port, identity);\n+    IOR ior = createIOR(ref);\n+    prepareObject(object, ior);\n+  }\n+\n   /**\n    * Start the service on the given port of this IOR.\n    *\n    * @param ior the ior (only Internet.port is used).\n    */\n-  private void startService(IOR ior)\n+  public void startService(IOR ior)\n   {\n     portServer p = new portServer(ior.Internet.port);\n     portServers.add(p);\n@@ -560,23 +650,22 @@ private void startService(IOR ior)\n    */\n   public void destroy()\n   {\n-    super.destroy();\n-\n     portServer p;\n     for (int i = 0; i < portServers.size(); i++)\n       {\n         p = (portServer) portServers.get(i);\n         p.close_now();\n       }\n+    super.destroy();\n   }\n \n   /**\n-   * Disconnect the given CORBA object from this ORB. The object will be\n-   * no longer receiving the remote invocations. In response to the\n-   * remote invocation on this object, the ORB will send the\n-   * exception {@link OBJECT_NOT_EXIST}. The object, however, is not\n-   * destroyed and can receive the local invocations.\n-\n+   * Disconnect the given CORBA object from this ORB. The object will be no\n+   * longer receiving the remote invocations. In response to the remote\n+   * invocation on this object, the ORB will send the exception\n+   * {@link OBJECT_NOT_EXIST}. The object, however, is not destroyed and can\n+   * receive the local invocations.\n+   *\n    * @param object the object to disconnect.\n    */\n   public void disconnect(org.omg.CORBA.Object object)\n@@ -599,8 +688,6 @@ public void disconnect(org.omg.CORBA.Object object)\n     // object implementation.\n     if (rmKey == null)\n       rmKey = connected_objects.getKey(object);\n-\n-    // Disconnect the object on any success.\n     if (rmKey != null)\n       {\n         // Find and stop the corresponding portServer.\n@@ -609,7 +696,7 @@ public void disconnect(org.omg.CORBA.Object object)\n         for (int i = 0; i < portServers.size(); i++)\n           {\n             p = (portServer) portServers.get(i);\n-            if (p.s_port == rmKey.port)\n+            if (p.s_port == rmKey.port && !(p instanceof sharedPortServer))\n               {\n                 p.close_now();\n                 freed_ports.addFirst(new Integer(rmKey.port));\n@@ -620,13 +707,48 @@ public void disconnect(org.omg.CORBA.Object object)\n       }\n   }\n \n+  /**\n+   * Notifies ORB that the shared service indentity (usually POA) is destroyed.\n+   * The matching shared port server is terminated and the identity table entry\n+   * is deleted. If this identity is not known for this ORB, the method returns\n+   * without action.\n+   *\n+   * @param identity the identity that has been destroyed.\n+   */\n+  public void identityDestroyed(java.lang.Object identity)\n+  {\n+    if (identity == null)\n+      return;\n+\n+    sharedPortServer ise = (sharedPortServer) identities.get(identity);\n+    if (ise != null)\n+      {\n+        synchronized (connected_objects)\n+          {\n+            ise.close_now();\n+            identities.remove(identity);\n+\n+            Connected_objects.cObject obj;\n+            Map.Entry m;\n+            Iterator iter = connected_objects.entrySet().iterator();\n+            while (iter.hasNext())\n+              {\n+                m = (Map.Entry) iter.next();\n+                obj = (Connected_objects.cObject) m.getValue();\n+                if (obj.identity == identity)\n+                  iter.remove();\n+              }\n+          }\n+      }\n+  }\n+\n   /**\n    * Find the local object, connected to this ORB.\n    *\n    * @param ior the ior of the potentially local object.\n    *\n-   * @return the local object, represented by the given IOR,\n-   * or null if this is not a local connected object.\n+   * @return the local object, represented by the given IOR, or null if this is\n+   * not a local connected object.\n    */\n   public org.omg.CORBA.Object find_local_object(IOR ior)\n   {\n@@ -655,26 +777,26 @@ public String[] list_initial_services()\n \n     Iterator iter = initial_references.keySet().iterator();\n     while (iter.hasNext())\n-      refs [ p++ ] = (String) iter.next();\n-\n+      {\n+        refs [ p++ ] = (String) iter.next();\n+      }\n     return refs;\n   }\n \n   /**\n-   * Get the IOR reference string for the given object.\n-   * The string embeds information about the object\n-   * repository Id, its access key and the server internet\n-   * address and port. With this information, the object\n-   * can be found by another ORB, possibly located on remote\n-   * computer.\n+   * Get the IOR reference string for the given object. The string embeds\n+   * information about the object repository Id, its access key and the server\n+   * internet address and port. With this information, the object can be found\n+   * by another ORB, possibly located on remote computer.\n    *\n    * @param the CORBA object\n    * @return the object IOR representation.\n    *\n-   * @throws BAD_PARAM if the object has not been previously\n-   * connected to this ORB.\n-   * @throws BAD_OPERATION in the unlikely case if the local host\n-   * address cannot be resolved.\n+   * @throws BAD_PARAM if the object has not been previously connected to this\n+   * ORB.\n+   *\n+   * @throws BAD_OPERATION in the unlikely case if the local host address cannot\n+   * be resolved.\n    *\n    * @see string_to_object(String)\n    */\n@@ -693,26 +815,37 @@ public String object_to_string(org.omg.CORBA.Object forObject)\n \n     if (rec == null)\n       throw new BAD_PARAM(\"The object \" + forObject +\n-                          \" has not been previously connected to this ORB\"\n-                         );\n+        \" has not been previously connected to this ORB\"\n+      );\n \n     IOR ior = createIOR(rec);\n \n     return ior.toStringifiedReference();\n   }\n \n   /**\n-   * Find and return the easily accessible CORBA object, addressed\n-   * by name.\n+   * Get the local IOR for the given object, null if the object is not local.\n+   */\n+  public IOR getLocalIor(org.omg.CORBA.Object forObject)\n+  {\n+    Connected_objects.cObject rec = connected_objects.getKey(forObject);\n+    if (rec == null)\n+      return null;\n+    else\n+      return createIOR(rec);\n+  }\n+\n+  /**\n+   * Find and return the easily accessible CORBA object, addressed by name.\n    *\n    * @param name the object name.\n    * @return the object\n    *\n-   * @throws org.omg.CORBA.ORBPackage.InvalidName if the given name\n-   * is not associated with the known object.\n+   * @throws org.omg.CORBA.ORBPackage.InvalidName if the given name is not\n+   * associated with the known object.\n    */\n   public org.omg.CORBA.Object resolve_initial_references(String name)\n-                                                  throws InvalidName\n+    throws InvalidName\n   {\n     org.omg.CORBA.Object object = null;\n     try\n@@ -738,9 +871,8 @@ public org.omg.CORBA.Object resolve_initial_references(String name)\n   }\n \n   /**\n-   * Start the ORBs main working cycle\n-   * (receive invocation - invoke on the local object - send response -\n-   *  wait for another invocation).\n+   * Start the ORBs main working cycle (receive invocation - invoke on the local\n+   * object - send response - wait for another invocation).\n    *\n    * The method only returns after calling {@link #shutdown(boolean)}.\n    */\n@@ -758,27 +890,37 @@ public void run()\n         m = (Map.Entry) iter.next();\n         obj = (Connected_objects.cObject) m.getValue();\n \n-        portServer subserver = new portServer(obj.port);\n-        portServers.add(subserver);\n+        portServer subserver;\n \n-        // Reuse the current thread for the last portServer.\n-        if (!iter.hasNext())\n+        if (obj.identity == null)\n           {\n-            // Discard the iterator, eliminating lock checks.\n-            iter = null;\n-            subserver.run();\n-            return;\n+            subserver = new portServer(obj.port);\n+            portServers.add(subserver);\n           }\n         else\n-          subserver.start();\n+          subserver = (portServer) identities.get(obj.identity);\n+\n+        if (!subserver.isAlive())\n+          {\n+            // Reuse the current thread for the last portServer.\n+            if (!iter.hasNext())\n+              {\n+                // Discard the iterator, eliminating lock checks.\n+                iter = null;\n+                subserver.run();\n+                return;\n+              }\n+            else\n+              subserver.start();\n+          }\n       }\n   }\n \n   /**\n    * Shutdown the ORB server.\n    *\n-   * @param wait_for_completion if true, the current thread is\n-   * suspended until the shutdown process is complete.\n+   * @param wait_for_completion if true, the current thread is suspended until\n+   * the shutdown process is complete.\n    */\n   public void shutdown(boolean wait_for_completion)\n   {\n@@ -796,29 +938,34 @@ public void shutdown(boolean wait_for_completion)\n   }\n \n   /**\n-   * Find and return the CORBA object, addressed by the given\n-   * IOR string representation. The object can (an usually is)\n-   * located on a remote computer, possibly running a different\n-   * (not necessary java) CORBA implementation.\n-   *\n+   * Find and return the CORBA object, addressed by the given IOR string\n+   * representation. The object can (an usually is) located on a remote\n+   * computer, possibly running a different (not necessary java) CORBA\n+   * implementation.\n+   * \n    * @param ior the object IOR representation string.\n-   *\n+   * \n    * @return the found CORBA object.\n    * @see object_to_string(org.omg.CORBA.Object)\n    */\n   public org.omg.CORBA.Object string_to_object(String an_ior)\n   {\n-    IOR ior = IOR.parse(an_ior);\n+    return nameParser.corbaloc(an_ior, this);\n+  }\n+  \n+  /**\n+   * Convert ior reference to CORBA object.\n+   */\n+  public org.omg.CORBA.Object ior_to_object(IOR ior)\n+  {\n     org.omg.CORBA.Object object = find_local_object(ior);\n     if (object == null)\n       {\n         ObjectImpl impl = stubFinder.search(this, ior);\n         try\n           {\n             if (impl._get_delegate() == null)\n-              {\n-                impl._set_delegate(new IOR_Delegate(this, ior));\n-              }\n+              impl._set_delegate(new IOR_Delegate(this, ior));\n           }\n         catch (BAD_OPERATION ex)\n           {\n@@ -828,21 +975,19 @@ public org.omg.CORBA.Object string_to_object(String an_ior)\n           }\n \n         object = impl;\n-        connected_objects.add(ior.key, impl, ior.Internet.port);\n+        connected_objects.add(ior.key, impl, ior.Internet.port, null);\n       }\n     return object;\n   }\n \n   /**\n-   * Get the default naming service for the case when there no\n-   * NameService entries.\n+   * Get the default naming service for the case when there no NameService\n+   * entries.\n    */\n   protected org.omg.CORBA.Object getDefaultNameService()\n   {\n     if (initial_references.containsKey(NAME_SERVICE))\n-      {\n-        return (org.omg.CORBA.Object) initial_references.get(NAME_SERVICE);\n-      }\n+      return (org.omg.CORBA.Object) initial_references.get(NAME_SERVICE);\n \n     IOR ior = new IOR();\n     ior.Id = NamingContextExtHelper.id();\n@@ -857,8 +1002,8 @@ protected org.omg.CORBA.Object getDefaultNameService()\n   }\n \n   /**\n-   * Find and return the object, that must be previously connected\n-   * to this ORB. Return null if no such object is available.\n+   * Find and return the object, that must be previously connected to this ORB.\n+   * Return null if no such object is available.\n    *\n    * @param key the object key.\n    *\n@@ -877,8 +1022,7 @@ protected org.omg.CORBA.Object find_connected_object(byte[] key)\n    * @param app the current applet.\n    *\n    * @param props application specific properties, passed as the second\n-   * parameter in {@link #init(Applet, Properties)}.\n-   * Can be <code>null</code>.\n+   * parameter in {@link #init(Applet, Properties)}. Can be <code>null</code>.\n    */\n   protected void set_parameters(Applet app, Properties props)\n   {\n@@ -891,27 +1035,23 @@ protected void set_parameters(Applet app, Properties props)\n           {\n             if (para [ i ] [ 0 ].equals(LISTEN_ON))\n               Port = Integer.parseInt(para [ i ] [ 1 ]);\n-\n             if (para [ i ] [ 0 ].equals(REFERENCE))\n               {\n-                StringTokenizer st = new StringTokenizer(para [ i ] [ 1 ], \"=\");\n+                StringTokenizer st =\n+                  new StringTokenizer(para [ i ] [ 1 ], \"=\");\n                 initial_references.put(st.nextToken(),\n-                                       string_to_object(st.nextToken())\n-                                      );\n+                  string_to_object(st.nextToken())\n+                );\n               }\n \n             if (para [ i ] [ 0 ].equals(NS_HOST))\n               ns_host = para [ i ] [ 1 ];\n-\n             if (para [ i ] [ 0 ].equals(START_READING_MESSAGE))\n               TOUT_START_READING_MESSAGE = Integer.parseInt(para [ i ] [ 1 ]);\n-\n             if (para [ i ] [ 0 ].equals(WHILE_READING))\n               TOUT_WHILE_READING = Integer.parseInt(para [ i ] [ 1 ]);\n-\n             if (para [ i ] [ 0 ].equals(AFTER_RECEIVING))\n               TOUT_AFTER_RECEIVING = Integer.parseInt(para [ i ] [ 1 ]);\n-\n             try\n               {\n                 if (para [ i ] [ 0 ].equals(NS_PORT))\n@@ -921,9 +1061,9 @@ protected void set_parameters(Applet app, Properties props)\n               {\n                 BAD_PARAM bad =\n                   new BAD_PARAM(\"Invalid \" + NS_PORT +\n-                                \"property, unable to parse '\" +\n-                                props.getProperty(NS_PORT) + \"'\"\n-                               );\n+                    \"property, unable to parse '\" +\n+                    props.getProperty(NS_PORT) + \"'\"\n+                  );\n                 bad.initCause(ex);\n                 throw bad;\n               }\n@@ -935,52 +1075,54 @@ protected void set_parameters(Applet app, Properties props)\n    * Set the ORB parameters. This method is normally called from\n    * {@link #init(String[], Properties)}.\n    *\n-   * @param para the parameters, that were passed as the parameters\n-   * to the  <code>main(String[] args)</code> method of the current standalone\n+   * @param para the parameters, that were passed as the parameters to the\n+   * <code>main(String[] args)</code> method of the current standalone\n    * application.\n    *\n-   * @param props application specific properties that were passed\n-   * as a second parameter in {@link init(String[], Properties)}).\n-   * Can be <code>null</code>.\n+   * @param props application specific properties that were passed as a second\n+   * parameter in {@link init(String[], Properties)}). Can be <code>null</code>.\n    */\n   protected void set_parameters(String[] para, Properties props)\n   {\n     if (para.length > 1)\n-      for (int i = 0; i < para.length - 1; i++)\n-        {\n-          if (para [ i ].endsWith(\"ListenOn\"))\n-            Port = Integer.parseInt(para [ i + 1 ]);\n-\n-          if (para [ i ].endsWith(\"ORBInitRef\"))\n-            {\n-              StringTokenizer st = new StringTokenizer(para [ i + 1 ], \"=\");\n-              initial_references.put(st.nextToken(),\n-                                     string_to_object(st.nextToken())\n-                                    );\n-            }\n-\n-          if (para [ i ].endsWith(\"ORBInitialHost\"))\n-            ns_host = para [ i + 1 ];\n+      {\n+        for (int i = 0; i < para.length - 1; i++)\n+          {\n+            if (para [ i ].endsWith(\"ListenOn\"))\n+              Port = Integer.parseInt(para [ i + 1 ]);\n+            if (para [ i ].endsWith(\"ORBInitRef\"))\n+              {\n+                StringTokenizer st = new StringTokenizer(para [ i + 1 ], \"=\");\n+                initial_references.put(st.nextToken(),\n+                  string_to_object(st.nextToken())\n+                );\n+              }\n \n-          try\n-            {\n-              if (para [ i ].endsWith(\"ORBInitialPort\"))\n-                ns_port = Integer.parseInt(para [ i + 1 ]);\n-            }\n-          catch (NumberFormatException ex)\n-            {\n-              throw new BAD_PARAM(\"Invalid \" + para [ i ] +\n-                                  \"parameter, unable to parse '\" +\n-                                  props.getProperty(para [ i + 1 ]) + \"'\"\n-                                 );\n-            }\n-        }\n+            if (para [ i ].endsWith(\"ORBInitialHost\"))\n+              ns_host = para [ i + 1 ];\n+            try\n+              {\n+                if (para [ i ].endsWith(\"ORBInitialPort\"))\n+                  ns_port = Integer.parseInt(para [ i + 1 ]);\n+              }\n+            catch (NumberFormatException ex)\n+              {\n+                throw new BAD_PARAM(\"Invalid \" + para [ i ] +\n+                  \"parameter, unable to parse '\" +\n+                  props.getProperty(para [ i + 1 ]) + \"'\"\n+                );\n+              }\n+          }\n+      }\n \n     useProperties(props);\n   }\n \n-  private IOR createIOR(Connected_objects.cObject ref)\n-                 throws BAD_OPERATION\n+  /**\n+   * Create IOR for the given object references.\n+   */\n+  protected IOR createIOR(Connected_objects.cObject ref)\n+    throws BAD_OPERATION\n   {\n     IOR ior = new IOR();\n     ior.key = ref.key;\n@@ -994,7 +1136,6 @@ private IOR createIOR(Connected_objects.cObject ref)\n       }\n     if (ior.Id == null)\n       ior.Id = ref.object.getClass().getName();\n-\n     try\n       {\n         ior.Internet.host = InetAddress.getLocalHost().getHostAddress();\n@@ -1016,12 +1157,13 @@ private IOR createIOR(Connected_objects.cObject ref)\n    * {@link InvokeHandler}).\n    */\n   private void prepareObject(org.omg.CORBA.Object object, IOR ior)\n-                      throws BAD_PARAM\n+    throws BAD_PARAM\n   {\n-    if (!(object instanceof InvokeHandler))\n-      throw new BAD_PARAM(object.getClass().getName() +\n-                          \" does not implement InvokeHandler. \"\n-                         );\n+    /*\n+     * if (!(object instanceof InvokeHandler)) throw new\n+     * BAD_PARAM(object.getClass().getName() + \" does not implement\n+     * InvokeHandler. \" );\n+     */\n \n     // If no delegate is set, set the default delegate.\n     if (object instanceof ObjectImpl)\n@@ -1030,9 +1172,7 @@ private void prepareObject(org.omg.CORBA.Object object, IOR ior)\n         try\n           {\n             if (impl._get_delegate() == null)\n-              {\n-                impl._set_delegate(new Simple_delegate(this, ior));\n-              }\n+              impl._set_delegate(new Simple_delegate(this, ior));\n           }\n         catch (BAD_OPERATION ex)\n           {\n@@ -1048,20 +1188,17 @@ private void prepareObject(org.omg.CORBA.Object object, IOR ior)\n    * @param net_out the stream to write response into\n    * @param msh_request the request message header\n    * @param rh_request the request header\n-   * @param handler the invocation handler that has been used to\n-   * invoke the operation\n-   * @param sysEx the system exception, thrown during the invocation,\n-   * null if none.\n+   * @param handler the invocation handler that has been used to invoke the\n+   * operation\n+   * @param sysEx the system exception, thrown during the invocation, null if\n+   * none.\n    *\n    * @throws IOException\n    */\n   private void respond_to_client(OutputStream net_out,\n-                                 MessageHeader msh_request,\n-                                 RequestHeader rh_request,\n-                                 bufferedResponseHandler handler,\n-                                 SystemException sysEx\n-                                )\n-                          throws IOException\n+    MessageHeader msh_request, RequestHeader rh_request,\n+    bufferedResponseHandler handler, SystemException sysEx\n+  ) throws IOException\n   {\n     // Set the reply header properties.\n     ReplyHeader reply = handler.reply_header;\n@@ -1072,17 +1209,23 @@ else if (handler.isExceptionReply())\n       reply.reply_status = ReplyHeader.USER_EXCEPTION;\n     else\n       reply.reply_status = ReplyHeader.NO_EXCEPTION;\n-\n     reply.request_id = rh_request.request_id;\n \n-    cdrBufOutput out = new cdrBufOutput(50 + handler.getBuffer().buffer.size());\n+    cdrBufOutput out =\n+      new cdrBufOutput(50 + handler.getBuffer().buffer.size());\n     out.setOrb(this);\n \n     out.setOffset(msh_request.getHeaderSize());\n \n     reply.write(out);\n \n-    // Write the reply data from the handler.\n+    if (msh_request.version.since_inclusive(1, 2))\n+      {\n+        out.align(8);\n+\n+        // Write the reply data from the handler. The handler data already\n+        // include the necessary heading zeroes for alignment.\n+      }\n     handler.getBuffer().buffer.writeTo(out);\n \n     MessageHeader msh_reply = new MessageHeader();\n@@ -1097,20 +1240,54 @@ else if (handler.isExceptionReply())\n     net_out.flush();\n   }\n \n+  /**\n+   * Forward request to another target, as indicated by the passed exception.\n+   */\n+  private void forward_request(OutputStream net_out,\n+    MessageHeader msh_request, RequestHeader rh_request, gnuForwardRequest info\n+  ) throws IOException\n+  {\n+    MessageHeader msh_forward = new MessageHeader();\n+    msh_forward.version = msh_request.version;\n+\n+    ReplyHeader rh_forward = msh_forward.create_reply_header();\n+    msh_forward.message_type = MessageHeader.REPLY;\n+    rh_forward.reply_status = info.forwarding_code;\n+    rh_forward.request_id = rh_request.request_id;\n+\n+    // The forwarding code is either LOCATION_FORWARD or LOCATION_FORWARD_PERM.\n+    cdrBufOutput out = new cdrBufOutput();\n+    out.setOrb(this);\n+    out.setOffset(msh_forward.getHeaderSize());\n+\n+    rh_forward.write(out);\n+\n+    if (msh_forward.version.since_inclusive(1, 2))\n+      out.align(8);\n+    out.write_Object(info.forward_reference);\n+\n+    msh_forward.message_size = out.buffer.size();\n+\n+    // Write the forwarding instruction.\n+    msh_forward.write(net_out);\n+    out.buffer.writeTo(net_out);\n+    net_out.flush();\n+  }\n+\n   /**\n    * Contains a single servicing task.\n    *\n-   * Normally, each task matches a single remote invocation.\n-   * However under frequent tandem submissions the same\n-   * task may span over several invocations.\n+   * Normally, each task matches a single remote invocation. However under\n+   * frequent tandem submissions the same task may span over several\n+   * invocations.\n    *\n    * @param serverSocket the ORB server socket.\n    *\n    * @throws MARSHAL\n    * @throws IOException\n    */\n-  private void serve(final portServer p, ServerSocket serverSocket)\n-              throws MARSHAL, IOException\n+  void serve(final portServer p, ServerSocket serverSocket)\n+    throws MARSHAL, IOException\n   {\n     final Socket service;\n     service = serverSocket.accept();\n@@ -1148,15 +1325,15 @@ public void run()\n   /**\n    * A single servicing step, when the client socket is alrady open.\n    *\n-   * Normally, each task matches a single remote invocation.\n-   * However under frequent tandem submissions the same\n-   * task may span over several invocations.\n+   * Normally, each task matches a single remote invocation. However under\n+   * frequent tandem submissions the same task may span over several\n+   * invocations.\n    *\n    * @param service the opened client socket.\n-   * @param no_resources if true, the \"NO RESOURCES\" exception\n-   * is thrown to the client.\n+   * @param no_resources if true, the \"NO RESOURCES\" exception is thrown to the\n+   * client.\n    */\n-  private void serveStep(Socket service, boolean no_resources)\n+  void serveStep(Socket service, boolean no_resources)\n   {\n     try\n       {\n@@ -1179,15 +1356,17 @@ private void serveStep(Socket service, boolean no_resources)\n               }\n \n             if (max_version != null)\n-              if (!msh_request.version.until_inclusive(max_version.major,\n-                                                       max_version.minor\n-                                                      )\n-                 )\n-                {\n-                  OutputStream out = service.getOutputStream();\n-                  new ErrorMessage(max_version).write(out);\n-                  return;\n-                }\n+              {\n+                if (!msh_request.version.until_inclusive(max_version.major,\n+                    max_version.minor\n+                  )\n+                )\n+                  {\n+                    OutputStream out = service.getOutputStream();\n+                    new ErrorMessage(max_version).write(out);\n+                    return;\n+                  }\n+              }\n \n             byte[] r = new byte[ msh_request.message_size ];\n \n@@ -1221,9 +1400,12 @@ private void serveStep(Socket service, boolean no_resources)\n                 // in 1.2 and higher, align the current position at\n                 // 8 octet boundary.\n                 if (msh_request.version.since_inclusive(1, 2))\n-                  cin.align(8);\n+                  {\n+                    cin.align(8);\n+\n+                    // find the target object.\n+                  }\n \n-                // find the target object.\n                 InvokeHandler target =\n                   (InvokeHandler) find_connected_object(rh_request.object_key);\n \n@@ -1234,7 +1416,9 @@ private void serveStep(Socket service, boolean no_resources)\n \n                 // TODO log errors about not existing objects and methods.\n                 bufferedResponseHandler handler =\n-                  new bufferedResponseHandler(this, msh_request, rh_reply);\n+                  new bufferedResponseHandler(this, msh_request, rh_reply,\n+                    rh_request\n+                  );\n \n                 SystemException sysEx = null;\n \n@@ -1246,6 +1430,18 @@ private void serveStep(Socket service, boolean no_resources)\n                       throw new OBJECT_NOT_EXIST();\n                     target._invoke(rh_request.operation, cin, handler);\n                   }\n+                catch (gnuForwardRequest forwarded)\n+                  {\n+                    OutputStream sou = service.getOutputStream();\n+                    forward_request(sou, msh_request, rh_request, forwarded);\n+                    if (service != null && !service.isClosed())\n+                      {\n+                        // Wait for the subsequent invocations on the\n+                        // same socket for the TANDEM_REQUEST duration.\n+                        service.setSoTimeout(TANDEM_REQUESTS);\n+                        continue Serving;\n+                      }\n+                  }\n                 catch (SystemException ex)\n                   {\n                     sysEx = ex;\n@@ -1256,8 +1452,11 @@ private void serveStep(Socket service, boolean no_resources)\n                   }\n                 catch (Exception except)\n                   {\n+                    except.printStackTrace();\n                     sysEx =\n-                      new UNKNOWN(\"Unknown\", 2, CompletionStatus.COMPLETED_MAYBE);\n+                      new UNKNOWN(\"Unknown\", 2,\n+                        CompletionStatus.COMPLETED_MAYBE\n+                      );\n \n                     org.omg.CORBA.portable.OutputStream ech =\n                       handler.createExceptionReply();\n@@ -1270,28 +1469,26 @@ private void serveStep(Socket service, boolean no_resources)\n                   {\n                     OutputStream sou = service.getOutputStream();\n                     respond_to_client(sou, msh_request, rh_request, handler,\n-                                      sysEx\n-                                     );\n+                      sysEx\n+                    );\n                   }\n               }\n             else if (msh_request.message_type == MessageHeader.CLOSE_CONNECTION ||\n-                     msh_request.message_type == MessageHeader.MESSAGE_ERROR\n-                    )\n+              msh_request.message_type == MessageHeader.MESSAGE_ERROR\n+            )\n               {\n                 CloseMessage.close(service.getOutputStream());\n                 service.close();\n                 return;\n               }\n-            else\n-              ;\n+            ;\n \n             // TODO log error: \"Not a request message.\"\n             if (service != null && !service.isClosed())\n-              {\n-                // Wait for the subsequent invocations on the\n-                // same socket for the TANDEM_REQUEST duration.\n-                service.setSoTimeout(TANDEM_REQUESTS);\n-              }\n+\n+              // Wait for the subsequent invocations on the\n+              // same socket for the TANDEM_REQUEST duration.\n+              service.setSoTimeout(TANDEM_REQUESTS);\n             else\n               return;\n           }\n@@ -1315,33 +1512,28 @@ private void useProperties(Properties props)\n       {\n         if (props.containsKey(LISTEN_ON))\n           Port = Integer.parseInt(props.getProperty(LISTEN_ON));\n-\n         if (props.containsKey(NS_HOST))\n           ns_host = props.getProperty(NS_HOST);\n-\n         try\n           {\n             if (props.containsKey(NS_PORT))\n               ns_port = Integer.parseInt(props.getProperty(NS_PORT));\n-\n             if (props.containsKey(START_READING_MESSAGE))\n               TOUT_START_READING_MESSAGE =\n                 Integer.parseInt(props.getProperty(START_READING_MESSAGE));\n-\n             if (props.containsKey(WHILE_READING))\n               TOUT_WHILE_READING =\n                 Integer.parseInt(props.getProperty(WHILE_READING));\n-\n             if (props.containsKey(AFTER_RECEIVING))\n               TOUT_AFTER_RECEIVING =\n                 Integer.parseInt(props.getProperty(AFTER_RECEIVING));\n           }\n         catch (NumberFormatException ex)\n           {\n             throw new BAD_PARAM(\"Invalid \" + NS_PORT +\n-                                \"property, unable to parse '\" +\n-                                props.getProperty(NS_PORT) + \"'\"\n-                               );\n+              \"property, unable to parse '\" + props.getProperty(NS_PORT) +\n+              \"'\"\n+            );\n           }\n \n         Enumeration en = props.elements();\n@@ -1350,33 +1542,31 @@ private void useProperties(Properties props)\n             String item = (String) en.nextElement();\n             if (item.equals(REFERENCE))\n               initial_references.put(item,\n-                                     string_to_object(props.getProperty(item))\n-                                    );\n+                string_to_object(props.getProperty(item))\n+              );\n           }\n       }\n   }\n \n   /**\n-   * Get the next instance with a response being received. If all currently\n-   * sent responses not yet processed, this method pauses till at least one of\n-   * them is complete. If there are no requests currently sent, the method\n-   * pauses till some request is submitted and the response is received.\n-   * This strategy is identical to the one accepted by Suns 1.4 ORB\n-   * implementation.\n+   * Get the next instance with a response being received. If all currently sent\n+   * responses not yet processed, this method pauses till at least one of them\n+   * is complete. If there are no requests currently sent, the method pauses\n+   * till some request is submitted and the response is received. This strategy\n+   * is identical to the one accepted by Suns 1.4 ORB implementation.\n    *\n-   * The returned response is removed from the list of the currently\n-   * submitted responses and is never returned again.\n+   * The returned response is removed from the list of the currently submitted\n+   * responses and is never returned again.\n    *\n    * @return the previously sent request that now contains the received\n    * response.\n    *\n    * @throws WrongTransaction If the method was called from the transaction\n-   * scope different than the one, used to send the request. The exception\n-   * can be raised only if the request is implicitly associated with some\n-   * particular transaction.\n+   * scope different than the one, used to send the request. The exception can\n+   * be raised only if the request is implicitly associated with some particular\n+   * transaction.\n    */\n-  public Request get_next_response()\n-                            throws org.omg.CORBA.WrongTransaction\n+  public Request get_next_response() throws org.omg.CORBA.WrongTransaction\n   {\n     return asynchron.get_next_response();\n   }\n@@ -1385,21 +1575,21 @@ public Request get_next_response()\n    * Find if any of the requests that have been previously sent with\n    * {@link #send_multiple_requests_deferred}, have a response yet.\n    *\n-   * @return true if there is at least one response to the previously\n-   * sent request, false otherwise.\n+   * @return true if there is at least one response to the previously sent\n+   * request, false otherwise.\n    */\n   public boolean poll_next_response()\n   {\n     return asynchron.poll_next_response();\n   }\n \n   /**\n-   * Send multiple prepared requests expecting to get a reply. All requests\n-   * are send in parallel, each in its own separate thread. When the\n-   * reply arrives, it is stored in the agreed fields of the corresponing\n-   * request data structure. If this method is called repeatedly,\n-   * the new requests are added to the set of the currently sent requests,\n-   * but the old set is not discarded.\n+   * Send multiple prepared requests expecting to get a reply. All requests are\n+   * send in parallel, each in its own separate thread. When the reply arrives,\n+   * it is stored in the agreed fields of the corresponing request data\n+   * structure. If this method is called repeatedly, the new requests are added\n+   * to the set of the currently sent requests, but the old set is not\n+   * discarded.\n    *\n    * @param requests the prepared array of requests.\n    *\n@@ -1414,8 +1604,8 @@ public void send_multiple_requests_deferred(Request[] requests)\n \n   /**\n    * Send multiple prepared requests one way, do not caring about the answer.\n-   * The messages, containing requests, will be marked, indicating that\n-   * the sender is not expecting to get a reply.\n+   * The messages, containing requests, will be marked, indicating that the\n+   * sender is not expecting to get a reply.\n    *\n    * @param requests the prepared array of requests.\n    *\n@@ -1429,8 +1619,7 @@ public void send_multiple_requests_oneway(Request[] requests)\n   /**\n    * Set the flag, forcing all server threads to terminate.\n    */\n-  protected void finalize()\n-                   throws java.lang.Throwable\n+  protected void finalize() throws java.lang.Throwable\n   {\n     running = false;\n     super.finalize();"}, {"sha": "f0f409394e6b8723226d4fbe932fb04834fd5b19", "filename": "libjava/classpath/gnu/CORBA/GIOP/ReplyHeader.java", "status": "modified", "additions": 8, "deletions": 19, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2FCORBA%2FGIOP%2FReplyHeader.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2FCORBA%2FGIOP%2FReplyHeader.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FGIOP%2FReplyHeader.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -41,13 +41,13 @@\n import gnu.CORBA.CDR.cdrInput;\n import gnu.CORBA.CDR.cdrOutput;\n \n-\n /**\n  * The header of the standard reply.\n  *\n  * @author Audrius Meskauskas (AudriusA@Bioinformatics.org)\n  */\n public abstract class ReplyHeader\n+  extends contextSupportingHeader\n {\n   /**\n    * Reply status, if no exception occured.\n@@ -65,9 +65,8 @@\n   public static final int SYSTEM_EXCEPTION = 2;\n \n   /**\n-   * Reply status, if the client ORB must re - send\n-   * the request to another destination. The body\n-   * contains IOR.\n+   * Reply status, if the client ORB must re - send the request to another\n+   * destination. The body contains IOR.\n    */\n   public static final int LOCATION_FORWARD = 3;\n \n@@ -83,16 +82,6 @@\n    */\n   public static final int NEEDS_ADDRESSING_MODE = 5;\n \n-  /**\n-   * Empty array, indicating that no service context is available.\n-   */\n-  protected static final ServiceContext[] NO_CONTEXT = new ServiceContext[ 0 ];\n-\n-  /**\n-   * The ORB service data.\n-   */\n-  public ServiceContext[] service_context = NO_CONTEXT;\n-\n   /**\n    * The status of this reply, holds one of the reply status constants.\n    */\n@@ -110,19 +99,19 @@ public String getStatusString()\n   {\n     switch (reply_status)\n       {\n-        case NO_EXCEPTION :\n+        case NO_EXCEPTION:\n           return \"ok\";\n \n-        case USER_EXCEPTION :\n+        case USER_EXCEPTION:\n           return \"user exception\";\n \n-        case SYSTEM_EXCEPTION :\n+        case SYSTEM_EXCEPTION:\n           return \"system exception\";\n \n-        case LOCATION_FORWARD :\n+        case LOCATION_FORWARD:\n           return \"moved\";\n \n-        default :\n+        default:\n           return null;\n       }\n   }"}, {"sha": "17cccb8834adc7afebd146ff1a092fe39293da52", "filename": "libjava/classpath/gnu/CORBA/GIOP/RequestHeader.java", "status": "modified", "additions": 16, "deletions": 23, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2FCORBA%2FGIOP%2FRequestHeader.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2FCORBA%2FGIOP%2FRequestHeader.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FGIOP%2FRequestHeader.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -41,7 +41,6 @@\n import gnu.CORBA.CDR.cdrInput;\n import gnu.CORBA.CDR.cdrOutput;\n \n-\n import org.omg.CORBA.portable.IDLEntity;\n \n /**\n@@ -50,13 +49,13 @@\n  * @author Audrius Meskauskas (AudriusA@Bioinformatics.org)\n  */\n public abstract class RequestHeader\n+  extends contextSupportingHeader\n   implements IDLEntity\n {\n   /**\n-   * The currently free request id. This field is incremented\n-   * each time the new request header is constructed. To facilitate\n-   * error detection, the first free id is equal to 0x01234567\n-   * (19088743).\n+   * The currently free request id. This field is incremented each time the new\n+   * request header is constructed. To facilitate error detection, the first\n+   * free id is equal to 0x01234567 (19088743).\n    */\n   private static int freeId = 0x01234567;\n \n@@ -71,23 +70,17 @@\n   public byte[] object_key;\n \n   /**\n-   * A value identifying the requesting principal.\n-   * Initialised into a single zero byte.\n+   * A value identifying the requesting principal. Initialised into a single\n+   * zero byte.\n    *\n    * @deprecated by CORBA 2.2.\n    */\n   public byte[] requesting_principal;\n \n   /**\n-   * Contains the ORB service data being passed. Initialised as the\n-   * zero size array by default.\n-   */\n-  public ServiceContext[] service_context = new ServiceContext[ 0 ];\n-\n-  /**\n-   * This is used to associate the reply message with the\n-   * previous request message. Initialised each time by the\n-   * different value, increasing form 1 to Integer.MAX_VALUE.\n+   * This is used to associate the reply message with the previous request\n+   * message. Initialised each time by the different value, increasing form 1 to\n+   * Integer.MAX_VALUE.\n    */\n   public int request_id = getNextId();\n \n@@ -97,10 +90,9 @@\n   protected boolean response_expected = true;\n \n   /**\n-   * Get next free request id. The value of the free request\n-   * id starts from 0x02345678, it is incremented each time this\n-   * function is called and is reset to 1 after reaching\n-   * Integer.MAX_VALUE.\n+   * Get next free request id. The value of the free request id starts from\n+   * 0x02345678, it is incremented each time this function is called and is\n+   * reset to 1 after reaching Integer.MAX_VALUE.\n    *\n    * @return the next free request id.\n    */\n@@ -126,15 +118,15 @@ public static synchronized int getNextId()\n   public abstract boolean isResponseExpected();\n \n   /**\n-   * Converts an byte array into hexadecimal string values.\n-   * Used in various toString() methods.\n+   * Converts an byte array into hexadecimal string values. Used in various\n+   * toString() methods.\n    */\n   public String bytes(byte[] array)\n   {\n     StringBuffer b = new StringBuffer();\n     for (int i = 0; i < array.length; i++)\n       {\n-        b.append(Integer.toHexString(array [ i ] & 0xFF));\n+        b.append(Integer.toHexString(array[i] & 0xFF));\n         b.append(\" \");\n       }\n     return b.toString();\n@@ -158,4 +150,5 @@ public String bytes(byte[] array)\n    * @param out a stream to write into.\n    */\n   public abstract void write(cdrOutput out);\n+\n }"}, {"sha": "29a8ea8ac77a1eb3d26b779d41ba9aa87d73157a", "filename": "libjava/classpath/gnu/CORBA/GIOP/ServiceContext.java", "status": "modified", "additions": 128, "deletions": 10, "changes": 138, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2FCORBA%2FGIOP%2FServiceContext.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2FCORBA%2FGIOP%2FServiceContext.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FGIOP%2FServiceContext.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -41,7 +41,9 @@\n import gnu.CORBA.CDR.cdrInput;\n import gnu.CORBA.CDR.cdrOutput;\n \n-\n+import org.omg.CORBA.BAD_INV_ORDER;\n+import org.omg.CORBA.BAD_PARAM;\n+import org.omg.CORBA.CompletionStatus;\n import org.omg.CORBA.portable.IDLEntity;\n \n /**\n@@ -53,15 +55,39 @@\n   implements IDLEntity\n {\n   /**\n-   * The context data.\n+   * Use serialVersionUID for interoperability.\n    */\n-  public byte[] context_data;\n+  private static final long serialVersionUID = 1;\n \n   /**\n-   * The context id.\n+   * The context id (for instance, 0x1 for code sets context). At the moment of\n+   * writing, the OMG defines 16 standard values and provides rules to register\n+   * the vendor specific context ids. The range 0-4095 is reserved for the\n+   * future standard OMG contexts.\n    */\n   public int context_id;\n \n+  /**\n+   * The context_data.\n+   */\n+  public byte[] context_data;\n+\n+  /**\n+   * Crete unitialised instance.\n+   */\n+  public ServiceContext()\n+  {\n+  }\n+\n+  /**\n+   * Create from omg context.\n+   */\n+  public ServiceContext(org.omg.IOP.ServiceContext from)\n+  {\n+    context_id = from.context_id;\n+    context_data = from.context_data;\n+  }\n+\n   /**\n    * Read the context values from the stream.\n    *\n@@ -73,13 +99,13 @@ public static ServiceContext read(cdrInput istream)\n \n     switch (id)\n       {\n-        case cxCodeSet.ID :\n+        case cxCodeSet.ID:\n \n           cxCodeSet codeset = new cxCodeSet();\n           codeset.readContext(istream);\n           return codeset;\n \n-        default :\n+        default:\n \n           ServiceContext ctx = new ServiceContext();\n           ctx.context_id = id;\n@@ -94,9 +120,9 @@ public static ServiceContext read(cdrInput istream)\n   public static ServiceContext[] readSequence(cdrInput istream)\n   {\n     int size = istream.read_long();\n-    ServiceContext[] value = new gnu.CORBA.GIOP.ServiceContext[ size ];\n+    ServiceContext[] value = new gnu.CORBA.GIOP.ServiceContext[size];\n     for (int i = 0; i < value.length; i++)\n-      value [ i ] = read(istream);\n+      value[i] = read(istream);\n     return value;\n   }\n \n@@ -118,14 +144,106 @@ public static void writeSequence(cdrOutput ostream, ServiceContext[] value)\n   {\n     ostream.write_long(value.length);\n     for (int i = 0; i < value.length; i++)\n-      value [ i ].write(ostream);\n+      value[i].write(ostream);\n+  }\n+\n+  /**\n+   * Add context to the given array of contexts.\n+   */\n+  public static void add(org.omg.IOP.ServiceContext[] cx,\n+    org.omg.IOP.ServiceContext service_context, boolean replace)\n+  {\n+    int exists = -1;\n+\n+    for (int i = 0; i < cx.length; i++)\n+      if (cx[i].context_id == service_context.context_id)\n+        exists = i;\n+\n+    if (exists < 0)\n+      {\n+        // Add context.\n+        org.omg.IOP.ServiceContext[] n = new org.omg.IOP.ServiceContext[cx.length + 1];\n+        for (int i = 0; i < cx.length; i++)\n+          n[i] = cx[i];\n+        n[cx.length] = service_context;\n+      }\n+    else\n+      {\n+        // Replace context.\n+        if (!replace)\n+          throw new BAD_INV_ORDER(\"Repetetive setting of the context \"\n+                                  + service_context.context_id, 15,\n+            CompletionStatus.COMPLETED_NO);\n+        else\n+          cx[exists] = service_context;\n+      }\n+  }\n+\n+  /**\n+   * Add context to the given array of contexts.\n+   */\n+  public static ServiceContext[] add(ServiceContext[] cx,\n+    org.omg.IOP.ServiceContext service_context, boolean replace)\n+  {\n+    int exists = -1;\n+\n+    for (int i = 0; i < cx.length; i++)\n+      if (cx[i].context_id == service_context.context_id)\n+        exists = i;\n+\n+    if (exists < 0)\n+      {\n+        // Add context.\n+        ServiceContext[] n = new ServiceContext[cx.length + 1];\n+        for (int i = 0; i < cx.length; i++)\n+          n[i] = cx[i];\n+        n[cx.length] = new ServiceContext(service_context);\n+        return n;\n+      }\n+    else\n+      {\n+        // Replace context.\n+        if (!replace)\n+          throw new BAD_INV_ORDER(\"Repetetive setting of the context \"\n+                                  + service_context.context_id, 15,\n+            CompletionStatus.COMPLETED_NO);\n+        else\n+          cx[exists] = new ServiceContext(service_context);\n+        return cx;\n+      }\n+  }\n+\n+\n+  /**\n+   * Find context with the given name in the context array.\n+   */\n+  public static org.omg.IOP.ServiceContext findContext(int ctx_name,\n+    org.omg.IOP.ServiceContext[] cx)\n+  {\n+    for (int i = 0; i < cx.length; i++)\n+      if (cx[i].context_id == ctx_name)\n+        return cx[i];\n+    throw new BAD_PARAM(\"No context with id \" + ctx_name);\n+  }\n+\n+  /**\n+   * Find context with the given name in the context array,\n+   * converting into org.omg.IOP.ServiceContext.\n+   */\n+  public static org.omg.IOP.ServiceContext findContext(int ctx_name,\n+    ServiceContext[] cx)\n+  {\n+    for (int i = 0; i < cx.length; i++)\n+      if (cx[i].context_id == ctx_name)\n+        return new org.omg.IOP.ServiceContext(ctx_name, cx[i].context_data);\n+    throw new BAD_PARAM(\"No context with id \" + ctx_name);\n   }\n \n   /**\n    * Return a string representation.\n    */\n   public String toString()\n   {\n-    return \"ctx \"+context_id+\", size \"+context_data.length;\n+    return \"ctx \" + context_id + \", size \" + context_data.length;\n   }\n }"}, {"sha": "7ede4e5b926d762135e6db1c4d9310724ecc4605", "filename": "libjava/classpath/gnu/CORBA/GIOP/v1_0/RequestHeader.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2FCORBA%2FGIOP%2Fv1_0%2FRequestHeader.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2FCORBA%2FGIOP%2Fv1_0%2FRequestHeader.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FGIOP%2Fv1_0%2FRequestHeader.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -40,11 +40,11 @@\n \n import gnu.CORBA.CDR.cdrInput;\n import gnu.CORBA.CDR.cdrOutput;\n-\n-import org.omg.CORBA.portable.IDLEntity;\n import gnu.CORBA.GIOP.ServiceContext;\n import gnu.CORBA.GIOP.cxCodeSet;\n \n+import org.omg.CORBA.portable.IDLEntity;\n+\n /**\n  * The GIOP 1.0 request message.\n  *"}, {"sha": "02e94aa642602a6c074ce5ceecc690318dc269cb", "filename": "libjava/classpath/gnu/CORBA/IOR.java", "status": "modified", "additions": 253, "deletions": 98, "changes": 351, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2FCORBA%2FIOR.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2FCORBA%2FIOR.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FIOR.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -47,22 +47,29 @@\n \n import org.omg.CORBA.BAD_PARAM;\n import org.omg.CORBA.CompletionStatus;\n+import org.omg.CORBA.MARSHAL;\n import org.omg.CORBA.ULongSeqHelper;\n+import org.omg.IOP.TAG_INTERNET_IOP;\n+import org.omg.IOP.TAG_MULTIPLE_COMPONENTS;\n+import org.omg.IOP.TaggedComponent;\n+import org.omg.IOP.TaggedComponentHelper;\n+import org.omg.IOP.TaggedProfile;\n+import org.omg.IOP.TaggedProfileHelper;\n \n import java.io.ByteArrayOutputStream;\n import java.io.IOException;\n+import java.util.ArrayList;\n \n /**\n- * The implementaton of the Interoperable Object Reference (IOR).\n- * IOR can be compared with the Internet address for a web page,\n- * it provides means to locate the CORBA service on the web.\n- * IOR contains the host address, port number, the object identifier\n- * (key) inside the server, the communication protocol version,\n- * supported charsets and so on.\n+ * The implementaton of the Interoperable Object Reference (IOR). IOR can be\n+ * compared with the Internet address for a web page, it provides means to\n+ * locate the CORBA service on the web. IOR contains the host address, port\n+ * number, the object identifier (key) inside the server, the communication\n+ * protocol version, supported charsets and so on.\n  *\n- * Ths class provides method for encoding and\n- * decoding the IOR information from/to the stringified references,\n- * usually returned by {@link org.omg.CORBA.ORB#String object_to_string()}.\n+ * Ths class provides method for encoding and decoding the IOR information\n+ * from/to the stringified references, usually returned by\n+ * {@link org.omg.CORBA.ORB#String object_to_string()}.\n  *\n  * @author Audrius Meskauskas (AudriusA@Bioinformatics.org)\n  *\n@@ -72,10 +79,22 @@\n public class IOR\n {\n   /**\n-   * The code sets profile.\n+   * The code sets tagged component, normally part of the Internet profile. This\n+   * compone consists of the two componenets itself.\n    */\n   public static class CodeSets_profile\n   {\n+    public CodeSets_profile()\n+    {\n+      int[] supported = CharSets_OSF.getSupportedCharSets();\n+\n+      narrow.native_set = CharSets_OSF.NATIVE_CHARACTER;\n+      narrow.conversion = supported;\n+\n+      wide.native_set = CharSets_OSF.NATIVE_WIDE_CHARACTER;\n+      wide.conversion = supported;\n+    }\n+\n     /**\n      * The code set component.\n      */\n@@ -112,7 +131,7 @@ public String toString()\n             b.append(\" conversion \");\n             for (int i = 0; i < conversion.length; i++)\n               {\n-                b.append(name(conversion [ i ]));\n+                b.append(name(conversion[i]));\n                 b.append(' ');\n               }\n           }\n@@ -131,8 +150,8 @@ public void write(org.omg.CORBA.portable.OutputStream out)\n \n       private String name(int set)\n       {\n-        return \"0x\" + Integer.toHexString(set) + \" (\" +\n-               CharSets_OSF.getName(set) + \") \";\n+        return \"0x\" + Integer.toHexString(set) + \" (\"\n+               + CharSets_OSF.getName(set) + \") \";\n       }\n     }\n \n@@ -201,7 +220,7 @@ public void write(cdrOutput profile)\n   /**\n    * The internet profile.\n    */\n-  public static class Internet_profile\n+  public class Internet_profile\n   {\n     /**\n      * The agreed tag for the Internet profile.\n@@ -223,6 +242,18 @@ public void write(cdrOutput profile)\n      */\n     public int port;\n \n+    /**\n+     * The code sets component in the internet profile of this IOR. This is not\n+     * a separate profile.\n+     */\n+    public CodeSets_profile CodeSets = new CodeSets_profile();\n+\n+    /**\n+     * Reserved for all components of this profile, this array holds the\n+     * components other than code set components.\n+     */\n+    ArrayList components = new ArrayList();\n+\n     /**\n      * Return the human readable representation.\n      */\n@@ -235,21 +266,62 @@ public String toString()\n       b.append(\" (v\");\n       b.append(version);\n       b.append(\")\");\n+      if (components.size() > 0)\n+        b.append(\" \" + components.size() + \" extra components.\");\n       return b.toString();\n     }\n+\n+    /**\n+     * Write the internet profile (except the heading tag.\n+     */\n+    public void write(cdrOutput out)\n+    {\n+      try\n+        {\n+          // Need to write the Internet profile into the separate\n+          // stream as we must know the size in advance.\n+          cdrOutput b = out.createEncapsulation();\n+\n+          version.write(b);\n+          b.write_string(host);\n+\n+          b.write_ushort((short) (port & 0xFFFF));\n+\n+          // Write the object key.\n+          b.write_long(key.length);\n+          b.write(key);\n+\n+          // Number of the tagged components.\n+          b.write_long(1 + components.size());\n+\n+          b.write_long(CodeSets_profile.TAG_CODE_SETS);\n+          CodeSets.write(b);\n+\n+          TaggedComponent t;\n+\n+          for (int i = 0; i < components.size(); i++)\n+            {\n+              t = (TaggedComponent) components.get(i);\n+              TaggedComponentHelper.write(b, t);\n+            }\n+\n+          b.close();\n+        }\n+      catch (Exception e)\n+        {\n+          MARSHAL m = new MARSHAL(\"Unable to write Internet profile.\");\n+          m.initCause(e);\n+          throw m;\n+        }\n+    }\n   }\n \n   /**\n-   * The standard minor code, indicating that the string to object\n-   * converstio has failed due non specific reasons.\n+   * The standard minor code, indicating that the string to object converstio\n+   * has failed due non specific reasons.\n    */\n   public static final int FAILED = 10;\n \n-  /**\n-   * The code sets profile of this IOR.\n-   */\n-  public CodeSets_profile CodeSets = new CodeSets_profile();\n-\n   /**\n    * The internet profile of this IOR.\n    */\n@@ -261,45 +333,35 @@ public String toString()\n   public String Id;\n \n   /**\n-   * The additional tagged components, encapsulated in\n-   * the byte arrays. They are only supported by the\n-   * later versions, than currently implemented.\n+   * The object key.\n    */\n-  public byte[][] extra;\n+  public byte[] key;\n \n   /**\n-   * The object key.\n+   * All tagged profiles of this IOR, except the separately defined Internet\n+   * profile.\n    */\n-  public byte[] key;\n+  ArrayList profiles = new ArrayList();\n \n   /**\n-   * True if the profile was encoded using the Big Endian or\n-   * the encoding is not known.\n+   * True if the profile was encoded using the Big Endian or the encoding is not\n+   * known.\n    *\n    * false if it was encoded using the Little Endian.\n    */\n   public boolean Big_Endian = true;\n \n   /**\n-   * Create an empty instance, initialising the code sets to default\n-   * values.\n+   * Create an empty instance, initialising the code sets to default values.\n    */\n   public IOR()\n   {\n-    int[] supported = CharSets_OSF.getSupportedCharSets();\n-\n-    CodeSets.narrow.native_set = CharSets_OSF.NATIVE_CHARACTER;\n-    CodeSets.narrow.conversion = supported;\n-\n-    CodeSets.wide.native_set = CharSets_OSF.NATIVE_WIDE_CHARACTER;\n-    CodeSets.wide.conversion = supported;\n   }\n \n   /**\n    * Parse the provided stringifed reference.\n    *\n-   * @param stringified_reference, in the form of\n-   * IOR:nnnnnn.....\n+   * @param stringified_reference, in the form of IOR:nnnnnn.....\n    *\n    * @return the parsed IOR\n    *\n@@ -308,14 +370,13 @@ public IOR()\n    * TODO corballoc and other alternative formats.\n    */\n   public static IOR parse(String stringified_reference)\n-                   throws BAD_PARAM\n+    throws BAD_PARAM\n   {\n     try\n       {\n         if (!stringified_reference.startsWith(\"IOR:\"))\n           throw new BAD_PARAM(\"The string refernce must start with IOR:\",\n-                              FAILED, CompletionStatus.COMPLETED_NO\n-                             );\n+                              FAILED, CompletionStatus.COMPLETED_NO);\n \n         IOR r = new IOR();\n \n@@ -340,8 +401,7 @@ public static IOR parse(String stringified_reference)\n       {\n         ex.printStackTrace();\n         throw new BAD_PARAM(ex + \" while parsing \" + stringified_reference,\n-                            FAILED, CompletionStatus.COMPLETED_NO\n-                           );\n+                            FAILED, CompletionStatus.COMPLETED_NO);\n       }\n   }\n \n@@ -352,7 +412,7 @@ public static IOR parse(String stringified_reference)\n    * @throws IOException if the stream throws it.\n    */\n   public void _read(cdrInput c)\n-             throws IOException, BAD_PARAM\n+    throws IOException, BAD_PARAM\n   {\n     int endian;\n \n@@ -366,23 +426,21 @@ public void _read(cdrInput c)\n   }\n \n   /**\n-   * Read the IOR from the provided input stream, not reading\n-   * the endian data at the beginning of the stream. The IOR is\n-   * thansferred in this form in\n+   * Read the IOR from the provided input stream, not reading the endian data at\n+   * the beginning of the stream. The IOR is thansferred in this form in\n    * {@link write_Object(org.omg.CORBA.Object)}.\n    *\n    * If the stream contains a null value, the Id and Internet fields become\n-   * equal to null. Otherwise Id contains some string (possibly\n-   * empty).\n+   * equal to null. Otherwise Id contains some string (possibly empty).\n    *\n-   * Id is checked for null in cdrInput that then returns\n-   * null instead of object.\n+   * Id is checked for null in cdrInput that then returns null instead of\n+   * object.\n    *\n    * @param c a stream to read from.\n    * @throws IOException if the stream throws it.\n    */\n   public void _read_no_endian(cdrInput c)\n-                       throws IOException, BAD_PARAM\n+    throws IOException, BAD_PARAM\n   {\n     Id = c.read_string();\n \n@@ -407,9 +465,7 @@ public void _read_no_endian(cdrInput c)\n             Internet.host = profile.read_string();\n             Internet.port = profile.gnu_read_ushort();\n \n-            int lk = profile.read_long();\n-            key = new byte[ lk ];\n-            profile.read(key);\n+            key = profile.read_sequence();\n \n             // Read tagged components.\n             int n_components = 0;\n@@ -425,7 +481,16 @@ public void _read_no_endian(cdrInput c)\n \n                     if (ctag == CodeSets_profile.TAG_CODE_SETS)\n                       {\n-                        CodeSets.read(profile);\n+                        Internet.CodeSets.read(profile);\n+                      }\n+                    else\n+                      {\n+                        // Construct a generic component for codesets\n+                        // profile.\n+                        TaggedComponent pc = new TaggedComponent();\n+                        pc.tag = ctag;\n+                        pc.component_data = profile.read_sequence();\n+                        Internet.components.add(pc);\n                       }\n                   }\n               }\n@@ -434,12 +499,21 @@ public void _read_no_endian(cdrInput c)\n                 ex.printStackTrace();\n               }\n           }\n+        else\n+          {\n+            // Construct a generic profile.\n+            TaggedProfile p = new TaggedProfile();\n+            p.tag = tag;\n+            p.profile_data = profile.buffer.getBuffer();\n+\n+            profiles.add(p);\n+          }\n       }\n   }\n \n   /**\n-   * Write this IOR record to the provided CDR stream.\n-   * This procedure writes the zero (Big Endian) marker first.\n+   * Write this IOR record to the provided CDR stream. This procedure writes the\n+   * zero (Big Endian) marker first.\n    */\n   public void _write(cdrOutput out)\n   {\n@@ -451,8 +525,8 @@ public void _write(cdrOutput out)\n   /**\n    * Write a null value to the CDR output stream.\n    *\n-   * The null value is written as defined in OMG specification\n-   * (zero length string, followed by an empty set of profiles).\n+   * The null value is written as defined in OMG specification (zero length\n+   * string, followed by an empty set of profiles).\n    */\n   public static void write_null(cdrOutput out)\n   {\n@@ -464,47 +538,27 @@ public static void write_null(cdrOutput out)\n   }\n \n   /**\n-   * Write this IOR record to the provided CDR stream. The procedure\n-   * writed data in Big Endian, but does NOT add any endian marker\n-   * to the beginning.\n+   * Write this IOR record to the provided CDR stream. The procedure writed data\n+   * in Big Endian, but does NOT add any endian marker to the beginning.\n    */\n   public void _write_no_endian(cdrOutput out)\n   {\n-    try\n-      {\n-        // Write repository id.\n-        out.write_string(Id);\n-\n-        // Always one profile.\n-        out.write_long(1);\n-\n-        // It is the Internet profile.\n-        out.write_long(Internet_profile.TAG_INTERNET_IOP);\n+    // Write repository id.\n+    out.write_string(Id);\n \n-        // Need to write the Internet profile into the separate\n-        // stream as we must know the size in advance.\n-        cdrOutput b = out.createEncapsulation();\n+    out.write_long(1 + profiles.size());\n \n-        Internet.version.write(b);\n-        b.write_string(Internet.host);\n+    // Write the Internet profile.\n+    out.write_long(Internet_profile.TAG_INTERNET_IOP);\n+    Internet.write(out);\n \n-        b.write_ushort((short) (Internet.port & 0xFFFF));\n+    // Write other profiles.\n+    TaggedProfile tp;\n \n-        // Write the object key.\n-        b.write_long(key.length);\n-        b.write(key);\n-\n-        // One tagged component.\n-        b.write_long(1);\n-\n-        b.write_long(CodeSets_profile.TAG_CODE_SETS);\n-        CodeSets.write(b);\n-\n-        b.close();\n-      }\n-    catch (IOException ex)\n+    for (int i = 0; i < profiles.size(); i++)\n       {\n-        Unexpected.error(ex);\n+        tp = (TaggedProfile) profiles.get(i);\n+        TaggedProfileHelper.write(out, tp);\n       }\n   }\n \n@@ -525,11 +579,11 @@ public String toString()\n \n     for (int i = 0; i < key.length; i++)\n       {\n-        b.append(Integer.toHexString(key [ i ] & 0xFF));\n+        b.append(Integer.toHexString(key[i] & 0xFF));\n       }\n \n     b.append(\" \");\n-    b.append(CodeSets);\n+    b.append(Internet.CodeSets);\n \n     return b.toString();\n   }\n@@ -552,12 +606,113 @@ public String toStringifiedReference()\n \n     for (int i = 0; i < binary.length; i++)\n       {\n-        s = Integer.toHexString(binary [ i ] & 0xFF);\n+        s = Integer.toHexString(binary[i] & 0xFF);\n         if (s.length() == 1)\n           b.append('0');\n         b.append(s);\n       }\n \n     return b.toString();\n   }\n+\n+  /**\n+   * Adds a service-specific component to the IOR profile. The specified\n+   * component will be included in all profiles, present in the IOR.\n+   *\n+   * @param tagged_component a tagged component being added.\n+   */\n+  public void add_ior_component(TaggedComponent tagged_component)\n+  {\n+    // Add to the Internet profile.\n+    Internet.components.add(tagged_component);\n+\n+    // Add to others.\n+    for (int i = 0; i < profiles.size(); i++)\n+      {\n+        TaggedProfile profile = (TaggedProfile) profiles.get(i);\n+        addComponentTo(profile, tagged_component);\n+      }\n+  }\n+\n+  /**\n+   * Adds a service-specific component to the IOR profile.\n+   *\n+   * @param tagged_component a tagged component being added.\n+   *\n+   * @param profile_id the IOR profile to that the component must be added. The\n+   * 0 value ({@link org.omg.IOP.TAG_INTERNET_IOP#value}) adds to the Internet\n+   * profile where host and port are stored by default.\n+   */\n+  public void add_ior_component_to_profile(TaggedComponent tagged_component,\n+                                           int profile_id)\n+  {\n+    if (profile_id == TAG_INTERNET_IOP.value)\n+      // Add to the Internet profile\n+      Internet.components.add(tagged_component);\n+    else\n+      {\n+        // Add to others.\n+        for (int i = 0; i < profiles.size(); i++)\n+          {\n+            TaggedProfile profile = (TaggedProfile) profiles.get(i);\n+            if (profile.tag == profile_id)\n+              addComponentTo(profile, tagged_component);\n+          }\n+      }\n+  }\n+\n+  /**\n+   * Add given component to the given profile that is NOT an Internet profile.\n+   *\n+   * @param profile the profile, where the component should be added.\n+   * @param component the component to add.\n+   */\n+  private static void addComponentTo(TaggedProfile profile,\n+                                     TaggedComponent component)\n+  {\n+    if (profile.tag == TAG_MULTIPLE_COMPONENTS.value)\n+      {\n+        TaggedComponent[] present;\n+        if (profile.profile_data.length > 0)\n+          {\n+            cdrBufInput in = new cdrBufInput(profile.profile_data);\n+\n+            present = new TaggedComponent[in.read_long()];\n+\n+            for (int i = 0; i < present.length; i++)\n+              {\n+                present[i] = TaggedComponentHelper.read(in);\n+              }\n+          }\n+        else\n+          present = new TaggedComponent[0];\n+\n+        cdrBufOutput out = new cdrBufOutput(profile.profile_data.length\n+                                            + component.component_data.length\n+                                            + 8);\n+\n+        // Write new amount of components.\n+        out.write_long(present.length + 1);\n+\n+        // Write other components.\n+        for (int i = 0; i < present.length; i++)\n+          TaggedComponentHelper.write(out, present[i]);\n+\n+        // Write the passed component.\n+        TaggedComponentHelper.write(out, component);\n+\n+        try\n+          {\n+            out.close();\n+          }\n+        catch (IOException e)\n+          {\n+            throw new Unexpected(e);\n+          }\n+        profile.profile_data = out.buffer.toByteArray();\n+      }\n+    else\n+      // The future supported tagged profiles should be added here.\n+      throw new BAD_PARAM(\"Unsupported profile type \" + profile.tag);\n+  }\n }\n\\ No newline at end of file"}, {"sha": "3b64eb585c475a3d6639c3112c51239b5dd53761", "filename": "libjava/classpath/gnu/CORBA/IOR_Delegate.java", "status": "modified", "additions": 249, "deletions": 94, "changes": 343, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2FCORBA%2FIOR_Delegate.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2FCORBA%2FIOR_Delegate.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FIOR_Delegate.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -40,7 +40,9 @@\n \n import gnu.CORBA.CDR.cdrBufInput;\n import gnu.CORBA.GIOP.ReplyHeader;\n+import gnu.CORBA.Poa.activeObjectMap;\n \n+import org.omg.CORBA.CompletionStatus;\n import org.omg.CORBA.Context;\n import org.omg.CORBA.ContextList;\n import org.omg.CORBA.ExceptionList;\n@@ -53,6 +55,7 @@\n import org.omg.CORBA.portable.InputStream;\n import org.omg.CORBA.portable.OutputStream;\n import org.omg.CORBA.portable.RemarshalException;\n+import org.omg.PortableInterceptor.ForwardRequest;\n \n import java.io.IOException;\n \n@@ -67,9 +70,19 @@\n  *\n  * @author Audrius Meskauskas (AudriusA@Bioinformatics.org)\n  */\n-public class IOR_Delegate\n-  extends Simple_delegate\n+public class IOR_Delegate extends Simple_delegate\n {\n+  /**\n+   * True if the current IOR does not map into the local servant. If false, the\n+   * IOR is either local or should be checked.\n+   */\n+  boolean remote_ior;\n+\n+  /**\n+   * If not null, this field contains data about the local servant.\n+   */\n+  activeObjectMap.Obj local_ior;\n+\n   /**\n    * Contructs an instance of object using the given IOR.\n    */\n@@ -92,11 +105,10 @@ public IOR_Delegate(ORB an_orb, IOR an_ior)\n    * @return the created request.\n    */\n   public Request create_request(org.omg.CORBA.Object target, Context context,\n-                                String operation, NVList parameters,\n-                                NamedValue returns\n-                               )\n+    String operation, NVList parameters, NamedValue returns\n+  )\n   {\n-    gnuRequest request = new gnuRequest();\n+    gnuRequest request = getRequestInstance(target);\n \n     request.setIor(getIor());\n     request.set_target(target);\n@@ -122,12 +134,11 @@ public Request create_request(org.omg.CORBA.Object target, Context context,\n    * @return the created request.\n    */\n   public Request create_request(org.omg.CORBA.Object target, Context context,\n-                                String operation, NVList parameters,\n-                                NamedValue returns, ExceptionList exceptions,\n-                                ContextList ctx_list\n-                               )\n+    String operation, NVList parameters, NamedValue returns,\n+    ExceptionList exceptions, ContextList ctx_list\n+  )\n   {\n-    gnuRequest request = new gnuRequest();\n+    gnuRequest request = getRequestInstance(target);\n \n     request.setIor(ior);\n     request.set_target(target);\n@@ -144,99 +155,218 @@ public Request create_request(org.omg.CORBA.Object target, Context context,\n   }\n \n   /**\n-   * Invoke operation on the given object, writing parameters to the given\n-   * output stream.\n+   * Get the instance of request.\n+   */\n+  protected gnuRequest getRequestInstance(org.omg.CORBA.Object target)\n+  {\n+    return new gnuRequest();\n+  }\n+\n+  /**\n+   * Invoke operation on the given object, als handling temproray and permanent\n+   * redirections. The ReplyHeader.LOCATION_FORWARD will cause to resend the\n+   * request to the new direction. The ReplyHeader.LOCATION_FORWARD_PERM will\n+   * cause additionally to remember the new location by this delegate, so\n+   * subsequent calls will be immediately delivered to the new target.\n    *\n    * @param target the target object.\n    * @param output the output stream, previously returned by\n    * {@link #request(org.omg.CORBA.Object, String, boolean)}.\n    *\n-   * @return the input stream, to read the response from or null for a\n-   * one-way request.\n+   * @return the input stream, to read the response from or null for a one-way\n+   * request.\n    *\n    * @throws SystemException if the SystemException has been thrown on the\n-   * remote side (the exact type and the minor code matches the data of\n-   * the remote exception that has been thrown).\n+   * remote side (the exact type and the minor code matches the data of the\n+   * remote exception that has been thrown).\n    *\n    * @throws org.omg.CORBA.portable.ApplicationException as specified.\n    * @throws org.omg.CORBA.portable.RemarshalException as specified.\n    */\n   public InputStream invoke(org.omg.CORBA.Object target, OutputStream output)\n-                     throws ApplicationException, RemarshalException\n+    throws ApplicationException, RemarshalException\n   {\n     streamRequest request = (streamRequest) output;\n-    if (request.response_expected)\n+    Forwardings:\n+    while (true)\n       {\n-        binaryReply response = request.request.submit();\n-\n-        // Read reply header.\n-        ReplyHeader rh = response.header.create_reply_header();\n-        cdrBufInput input = response.getStream();\n-        input.setOrb(orb);\n-        rh.read(input);\n-\n-        boolean moved_permanently = false;\n-\n-        switch (rh.reply_status)\n+        try\n           {\n-            case ReplyHeader.NO_EXCEPTION :\n-              if (response.header.version.since_inclusive(1, 2))\n-                input.align(8);\n-              return input;\n-\n-            case ReplyHeader.SYSTEM_EXCEPTION :\n-              if (response.header.version.since_inclusive(1, 2))\n-                input.align(8);\n-              throw ObjectCreator.readSystemException(input);\n-\n-            case ReplyHeader.USER_EXCEPTION :\n-              if (response.header.version.since_inclusive(1, 2))\n-                input.align(8);\n-              input.mark(2000);\n-\n-              String uxId = input.read_string();\n-              input.reset();\n-\n-              throw new ApplicationException(uxId, input);\n-\n-            case ReplyHeader.LOCATION_FORWARD_PERM :\n-              moved_permanently = true;\n-\n-            case ReplyHeader.LOCATION_FORWARD :\n-              if (response.header.version.since_inclusive(1, 2))\n-                input.align(8);\n-\n-              IOR forwarded = new IOR();\n-              try\n-                {\n-                  forwarded._read_no_endian(input);\n-                }\n-              catch (IOException ex)\n-                {\n-                  MARSHAL t = new MARSHAL(\"Cant read forwarding info\");\n-                  t.initCause(ex);\n-                  throw t;\n-                }\n-\n-              request.request.setIor(forwarded);\n-\n-              // If the object has moved permanently, its IOR is replaced.\n-              if (moved_permanently)\n-                setIor(forwarded);\n-\n-              return invoke(target, request);\n-\n-            default :\n-              throw new MARSHAL(\"Unknow reply status: \" + rh.reply_status);\n+            if (request.response_expected)\n+              {\n+                binaryReply response = request.request.submit();\n+\n+                // Read reply header.\n+                ReplyHeader rh = response.header.create_reply_header();\n+                cdrBufInput input = response.getStream();\n+                input.setOrb(orb);\n+                rh.read(input);\n+                request.request.m_rph = rh;\n+\n+                boolean moved_permanently = false;\n+\n+                switch (rh.reply_status)\n+                  {\n+                    case ReplyHeader.NO_EXCEPTION :\n+                      if (request.request.m_interceptor != null)\n+                        request.request.m_interceptor.\n+                          receive_reply(request.request.m_info);\n+                      if (response.header.version.since_inclusive(1, 2))\n+                        input.align(8);\n+                      return input;\n+\n+                    case ReplyHeader.SYSTEM_EXCEPTION :\n+                      if (response.header.version.since_inclusive(1, 2))\n+                        input.align(8);\n+                      showException(request, input);\n+\n+                      throw ObjectCreator.readSystemException(input);\n+\n+                    case ReplyHeader.USER_EXCEPTION :\n+                      if (response.header.version.since_inclusive(1, 2))\n+                        input.align(8);\n+                      showException(request, input);\n+\n+                      throw new ApplicationException(request.\n+                        request.m_exception_id, input\n+                      );\n+\n+                    case ReplyHeader.LOCATION_FORWARD_PERM :\n+                      moved_permanently = true;\n+\n+                    case ReplyHeader.LOCATION_FORWARD :\n+                      if (response.header.version.since_inclusive(1, 2))\n+                        input.align(8);\n+\n+                      IOR forwarded = new IOR();\n+                      try\n+                        {\n+                          forwarded._read_no_endian(input);\n+                        }\n+                      catch (IOException ex)\n+                        {\n+                          MARSHAL t =\n+                            new MARSHAL(\"Cant read forwarding info\", 5102,\n+                              CompletionStatus.COMPLETED_NO\n+                            );\n+                          t.initCause(ex);\n+                          throw t;\n+                        }\n+\n+                      gnuRequest prev = request.request;\n+                      gnuRequest r = getRequestInstance(target);\n+\n+                      r.m_interceptor = prev.m_interceptor;\n+                      r.m_slots = prev.m_slots;\n+\n+                      r.m_args = prev.m_args;\n+                      r.m_context = prev.m_context;\n+                      r.m_context_list = prev.m_context_list;\n+                      r.m_environment = prev.m_environment;\n+                      r.m_exceptions = prev.m_exceptions;\n+                      r.m_operation = prev.m_operation;\n+                      r.m_parameter_buffer = prev.m_parameter_buffer;\n+                      r.m_parameter_buffer.request = r;\n+                      r.m_result = prev.m_result;\n+                      r.m_target = prev.m_target;\n+                      r.oneWay = prev.oneWay;\n+                      r.m_forward_ior = forwarded;\n+\n+                      if (r.m_interceptor != null)\n+                        r.m_interceptor.receive_other(r.m_info);\n+\n+                      r.setIor(forwarded);\n+\n+                      IOR_contructed_object it =\n+                        new IOR_contructed_object(orb, forwarded);\n+\n+                      r.m_target = it;\n+\n+                      request.request = r;\n+\n+                      IOR prev_ior = getIor();\n+\n+                      setIor(forwarded);\n+\n+                      try\n+                        {\n+                          return invoke(it, request);\n+                        }\n+                      finally\n+                        {\n+                          if (!moved_permanently)\n+                            setIor(prev_ior);\n+                        }\n+\n+                    default :\n+                      throw new MARSHAL(\"Unknow reply status: \" +\n+                        rh.reply_status, 8000 + rh.reply_status,\n+                        CompletionStatus.COMPLETED_NO\n+                      );\n+                  }\n+              }\n+            else\n+              {\n+                request.request.send_oneway();\n+                return null;\n+              }\n+          }\n+        catch (ForwardRequest forwarded)\n+          {\n+            ForwardRequest fw = forwarded;\n+            Forwarding2:\n+            while (true)\n+              {\n+                try\n+                  {\n+                    gnuRequest prev = request.request;\n+                    gnuRequest r = getRequestInstance(target);\n+\n+                    r.m_interceptor = prev.m_interceptor;\n+                    r.m_args = prev.m_args;\n+                    r.m_context = prev.m_context;\n+                    r.m_context_list = prev.m_context_list;\n+                    r.m_environment = prev.m_environment;\n+                    r.m_exceptions = prev.m_exceptions;\n+                    r.m_operation = prev.m_operation;\n+                    r.m_parameter_buffer = prev.m_parameter_buffer;\n+                    r.m_parameter_buffer.request = r;\n+                    r.m_result = prev.m_result;\n+                    r.m_target = prev.m_target;\n+                    r.oneWay = prev.oneWay;\n+\n+                    r.m_forwarding_target = fw.forward;\n+\n+                    if (r.m_interceptor != null)\n+                      r.m_interceptor.receive_other(r.m_info);\n+\n+                    r.m_target = fw.forward;\n+                    request.request = r;\n+                    break Forwarding2;\n+                  }\n+                catch (ForwardRequest e)\n+                  {\n+                    forwarded = e;\n+                  }\n+              }\n           }\n-      }\n-    else\n-      {\n-        request.request.send_oneway();\n-        return null;\n       }\n   }\n \n+  /**\n+   * Show exception to interceptor.\n+   */\n+  void showException(streamRequest request, cdrBufInput input)\n+    throws ForwardRequest\n+  {\n+    input.mark(2048);\n+    request.request.m_exception_id = input.read_string();\n+    input.reset();\n+\n+    if (request.request.m_interceptor != null)\n+      request.request.m_interceptor.receive_exception(request.request.m_info);\n+  }\n+\n   /**\n    * Create a request to invoke the method of this CORBA object.\n    *\n@@ -247,7 +377,7 @@ public InputStream invoke(org.omg.CORBA.Object target, OutputStream output)\n    */\n   public Request request(org.omg.CORBA.Object target, String operation)\n   {\n-    gnuRequest request = new gnuRequest();\n+    gnuRequest request = getRequestInstance(target);\n \n     request.setIor(ior);\n     request.set_target(target);\n@@ -269,27 +399,28 @@ public Request request(org.omg.CORBA.Object target, String operation)\n    * @return the stream where the method arguments should be written.\n    */\n   public OutputStream request(org.omg.CORBA.Object target, String operation,\n-                              boolean response_expected\n-                             )\n+    boolean response_expected\n+  )\n   {\n-    gnuRequest request = new gnuRequest();\n+    gnuRequest request = getRequestInstance(target);\n \n     request.setIor(ior);\n     request.set_target(target);\n     request.setOperation(operation);\n \n-    request.getParameterStream().response_expected = response_expected;\n+    streamRequest out = request.getParameterStream();\n+    out.response_expected = response_expected;\n     request.setORB(orb);\n \n-    return request.getParameterStream();\n+    return out;\n   }\n \n   /**\n-   * If there is an opened cache socket to access this object, close\n-   * that socket.\n+   * If there is an opened cache socket to access this object, close that\n+   * socket.\n    *\n-   * @param target The target is not used, this delegate requires a\n-   * single instance per object.\n+   * @param target The target is not used, this delegate requires a single\n+   * instance per object.\n    */\n   public void release(org.omg.CORBA.Object target)\n   {\n@@ -308,4 +439,28 @@ public void release(org.omg.CORBA.Object target)\n         // do nothing, then.\n       }\n   }\n+\n+  /**\n+   * Reset the remote_ior flag, forcing to check if the object is local on the\n+   * next getRequestInstance call.\n+   */\n+  public void setIor(IOR an_ior)\n+  {\n+    super.setIor(an_ior);\n+    remote_ior = false;\n+    local_ior = null;\n+  }\n+\n+  /**\n+   * Checks if the ior is local so far it is easy.\n+   */\n+  public boolean is_local(org.omg.CORBA.Object self)\n+  {\n+    if (remote_ior)\n+      return false;\n+    else if (local_ior != null)\n+      return true;\n+    else\n+      return super.is_local(self);\n+  }\n }\n\\ No newline at end of file"}, {"sha": "e46bed7f7a1c3165d77e7da321b5e9c5e5d13006", "filename": "libjava/classpath/gnu/CORBA/NamingService/NamingServiceTransient.java", "status": "modified", "additions": 43, "deletions": 39, "changes": 82, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2FCORBA%2FNamingService%2FNamingServiceTransient.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2FCORBA%2FNamingService%2FNamingServiceTransient.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FNamingService%2FNamingServiceTransient.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -39,6 +39,7 @@\n package gnu.CORBA.NamingService;\n \n import gnu.CORBA.Functional_ORB;\n+import gnu.CORBA.IOR;\n \n import org.omg.CosNaming.NamingContextExt;\n \n@@ -47,15 +48,14 @@\n import java.io.UnsupportedEncodingException;\n \n /**\n- * The server for the gnu classpath naming service. This is an executable\n- * class that must be started to launch the GNU Classpath CORBA\n- * transient naming service.\n- *\n+ * The server for the gnu classpath naming service. This is an executable class\n+ * that must be started to launch the GNU Classpath CORBA transient naming\n+ * service.\n+ * \n  * GNU Classpath currently works with this naming service and is also\n- * interoperable with the Sun Microsystems naming services from\n- * releases 1.3 and 1.4, both transient <i>tnameserv</i> and persistent\n- * <i>orbd</i>.\n- *\n+ * interoperable with the Sun Microsystems naming services from releases 1.3 and\n+ * 1.4, both transient <i>tnameserv</i> and persistent <i>orbd</i>.\n+ * \n  * @author Audrius Meskauskas, Lithuania (AudriusA@Bioinformatics.org)\n  */\n public class NamingServiceTransient\n@@ -67,9 +67,9 @@\n   public static final int PORT = 900;\n \n   /**\n-   * Get the object key for the naming service. The default\n-   * key is the string \"NameService\" in ASCII.\n-   *\n+   * Get the object key for the naming service. The default key is the string\n+   * \"NameService\" in ASCII.\n+   * \n    * @return the byte array.\n    */\n   public static byte[] getDefaultKey()\n@@ -85,15 +85,14 @@ public static byte[] getDefaultKey()\n   }\n \n   /**\n-   * Start the naming service on the current host at the given port.\n-   * The parameter  -org.omg.CORBA.ORBInitialPort NNN or\n-   *  -ORBInitialPort NNN, if present, specifies the port, on that\n-   * the service must be started. If this key is not specified,\n-   * the service starts at the port 900.\n-   *\n-   * The parameter -ior FILE_NAME, if present, forces to store the ior string\n-   * of this naming service to the specified file.\n-   *\n+   * Start the naming service on the current host at the given port. The\n+   * parameter -org.omg.CORBA.ORBInitialPort NNN or -ORBInitialPort NNN, if\n+   * present, specifies the port, on that the service must be started. If this\n+   * key is not specified, the service starts at the port 900.\n+   * \n+   * The parameter -ior FILE_NAME, if present, forces to store the ior string of\n+   * this naming service to the specified file.\n+   * \n    * @param args the parameter string.\n    */\n   public static void main(String[] args)\n@@ -108,21 +107,24 @@ public static void main(String[] args)\n         if (args.length > 1)\n           for (int i = 0; i < args.length - 1; i++)\n             {\n-              if (args [ i ].endsWith(\"ORBInitialPort\"))\n-                port = Integer.parseInt(args [ i + 1 ]);\n+              if (args[i].endsWith(\"ORBInitialPort\"))\n+                port = Integer.parseInt(args[i + 1]);\n \n-              if (args [ i ].equals(\"-ior\"))\n-                iorf = args [ i + 1 ];\n+              if (args[i].equals(\"-ior\"))\n+                iorf = args[i + 1];\n             }\n \n         Functional_ORB.setPort(port);\n \n         // Create the servant and register it with the ORB\n         NamingContextExt namer = new Ext(new TransientContext());\n-        orb.connect(namer, getDefaultKey());\n+\n+        // Case with the key \"NameService\".\n+        orb.connect(namer, \"NameService\".getBytes());\n \n         // Storing the IOR reference.\n         String ior = orb.object_to_string(namer);\n+        IOR iorr = IOR.parse(ior);\n         if (iorf != null)\n           {\n             FileOutputStream f = new FileOutputStream(iorf);\n@@ -131,30 +133,32 @@ public static void main(String[] args)\n             p.close();\n           }\n \n-        System.out.println(\"GNU Classpath, transient naming service. \" +\n-                           \"Copyright (C) 2005 Free Software Foundation\\n\" +\n-                           \"This tool comes with ABSOLUTELY NO WARRANTY. \" +\n-                           \"This is free software, and you are\\nwelcome to \" +\n-                           \"redistribute it under conditions, defined in \" +\n-                           \"GNU Classpath license.\\n\\n\" + ior\n-                          );\n+        System.out.println(\"GNU Classpath transient naming service \"\n+          + \"started at \" + iorr.Internet.host + \":\" + iorr.Internet.port\n+          + \" key 'NameService'.\\n\\n\"\n+          + \"Copyright (C) 2005 Free Software Foundation\\n\"\n+          + \"This tool comes with ABSOLUTELY NO WARRANTY. \"\n+          + \"This is free software, and you are\\nwelcome to \"\n+          + \"redistribute it under conditions, defined in \"\n+          + \"GNU Classpath license.\\n\\n\" + ior);\n \n         new Thread()\n+        {\n+          public void run()\n           {\n-            public void run()\n-            {\n-              // Wait for invocations from clients.\n-              orb.run();\n-            }\n-          }.start();\n+            // Wait for invocations from clients.\n+            orb.run();\n+          }\n+        }.start();\n       }\n     catch (Exception e)\n       {\n         System.err.println(\"ERROR: \" + e);\n         e.printStackTrace(System.out);\n       }\n \n-    // Restore the default value for allocating ports for the subsequent objects.\n+    // Restore the default value for allocating ports for the subsequent\n+    // objects.\n     Functional_ORB.setPort(Functional_ORB.DEFAULT_INITIAL_PORT);\n   }\n }"}, {"sha": "81c1d06e775798fc090bae9ea10c394ca8bc5e6a", "filename": "libjava/classpath/gnu/CORBA/ObjectCreator.java", "status": "modified", "additions": 147, "deletions": 48, "changes": 195, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2FCORBA%2FObjectCreator.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2FCORBA%2FObjectCreator.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FObjectCreator.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -1,4 +1,4 @@\n-/* ExceptionCreator.java --\n+/* ObjectCreator.java --\n    Copyright (C) 2005 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n@@ -38,10 +38,15 @@\n \n package gnu.CORBA;\n \n+import gnu.CORBA.CDR.cdrBufOutput;\n+\n+import org.omg.CORBA.Any;\n import org.omg.CORBA.CompletionStatus;\n import org.omg.CORBA.CompletionStatusHelper;\n import org.omg.CORBA.MARSHAL;\n+import org.omg.CORBA.StructMember;\n import org.omg.CORBA.SystemException;\n+import org.omg.CORBA.TCKind;\n import org.omg.CORBA.UNKNOWN;\n import org.omg.CORBA.UserException;\n import org.omg.CORBA.portable.InputStream;\n@@ -51,9 +56,8 @@\n import java.lang.reflect.Method;\n \n /**\n- * Creates java objects from the agreed IDL names for the simple\n- * case when the CORBA object is directly mapped into the locally\n- * defined java class.\n+ * Creates java objects from the agreed IDL names for the simple case when the\n+ * CORBA object is directly mapped into the locally defined java class.\n  *\n  * @author Audrius Meskauskas (AudriusA@Bioinformatics.org)\n  */\n@@ -70,20 +74,17 @@\n   public static final String JAVA_PREFIX = \"org.omg.\";\n \n   /**\n-   * The prefix for classes that are placed instide the\n-   * gnu.CORBA namespace.\n+   * The prefix for classes that are placed instide the gnu.CORBA namespace.\n    */\n   public static final String CLASSPATH_PREFIX = \"gnu.CORBA.\";\n \n   /**\n-   * Try to instantiate an object with the given IDL name.\n-   * The object must be mapped to the local java class.\n-   * The omg.org domain must be mapped into the object in either\n-   * org/omg or gnu/CORBA namespace.\n+   * Try to instantiate an object with the given IDL name. The object must be\n+   * mapped to the local java class. The omg.org domain must be mapped into the\n+   * object in either org/omg or gnu/CORBA namespace.\n    *\n    * @param IDL name\n-   * @return instantiated object instance or null if no such\n-   * available.\n+   * @return instantiated object instance or null if no such available.\n    */\n   public static java.lang.Object createObject(String idl, String suffix)\n   {\n@@ -109,16 +110,15 @@ public static java.lang.Object createObject(String idl, String suffix)\n   /**\n    * Create the system exception with the given idl name.\n    *\n-   * @param idl the exception IDL name, must match the syntax\n-   * \"IDL:<class/name>:1.0\".\n+   * @param idl the exception IDL name, must match the syntax \"IDL:<class/name>:1.0\".\n    * @param minor the exception minor code.\n    * @param completed the exception completion status.\n    *\n    * @return the created exception.\n    */\n   public static SystemException createSystemException(String idl, int minor,\n-                                                      CompletionStatus completed\n-                                                     )\n+    CompletionStatus completed\n+  )\n   {\n     try\n       {\n@@ -127,20 +127,18 @@ public static SystemException createSystemException(String idl, int minor,\n \n         Constructor constructor =\n           exClass.getConstructor(new Class[]\n-                                 {\n-                                   String.class, int.class,\n-                                   CompletionStatus.class\n-                                 }\n-                                );\n+            {\n+              String.class, int.class, CompletionStatus.class\n+            }\n+          );\n \n         Object exception =\n           constructor.newInstance(new Object[]\n-                                  {\n-                                    \" Remote exception \" + idl + \", minor \" +\n-                                    minor + \", \" + completed + \".\",\n-                                    new Integer(minor), completed\n-                                  }\n-                                 );\n+            {\n+              \" Remote exception \" + idl + \", minor \" + minor + \", \" +\n+              completed + \".\", new Integer(minor), completed\n+            }\n+          );\n \n         return (SystemException) exception;\n       }\n@@ -153,9 +151,10 @@ public static SystemException createSystemException(String idl, int minor,\n \n   /**\n    * Read the system exception from the given stream.\n+   *\n    * @param input the CDR stream to read from.\n-   * @return the exception that has been stored in the stream\n-   * (IDL name, minor code and completion status).\n+   * @return the exception that has been stored in the stream (IDL name, minor\n+   * code and completion status).\n    */\n   public static SystemException readSystemException(InputStream input)\n   {\n@@ -170,8 +169,8 @@ public static SystemException readSystemException(InputStream input)\n   }\n \n   /**\n-   * Reads the user exception, having the given Id, from the\n-   * input stream. The id is expected to be in the form like\n+   * Reads the user exception, having the given Id, from the input stream. The\n+   * id is expected to be in the form like\n    * 'IDL:test/org/omg/CORBA/ORB/communication/ourUserException:1.0'\n    *\n    * @param idl the exception idl name.\n@@ -189,11 +188,8 @@ public static UserException readUserException(String idl, InputStream input)\n \n         Method read =\n           helperClass.getMethod(\"read\",\n-                                new Class[]\n-                                {\n-                                  org.omg.CORBA.portable.InputStream.class\n-                                }\n-                               );\n+            new Class[] { org.omg.CORBA.portable.InputStream.class }\n+          );\n \n         return (UserException) read.invoke(null, new Object[] { input });\n       }\n@@ -236,8 +232,8 @@ public static String toHelperName(String IDL)\n    * @param ex an exception to write.\n    */\n   public static void writeSystemException(OutputStream output,\n-                                          SystemException ex\n-                                         )\n+    SystemException ex\n+  )\n   {\n     String exIDL = toIDL(ex.getClass().getName());\n     output.write_string(exIDL);\n@@ -266,14 +262,14 @@ protected static String toClassName(String prefix, String IDL)\n   }\n \n   /**\n-   * Converts the given IDL name to class name and tries to load the\n-   * matching class. The OMG prefix (omg.org) is replaced by\n-   * the java prefix org.omg. No other prefixes are added.\n+   * Converts the given IDL name to class name and tries to load the matching\n+   * class. The OMG prefix (omg.org) is replaced by the java prefix org.omg. No\n+   * other prefixes are added.\n    *\n    * @param IDL the idl name.\n    *\n-   * TODO Cache the returned classes, avoiding these string manipulations\n-   * each time the conversion is required.\n+   * TODO Cache the returned classes, avoiding these string manipulations each\n+   * time the conversion is required.\n    *\n    * @return the matching class or null if no such is available.\n    */\n@@ -301,10 +297,10 @@ public static Class Idl2class(String IDL)\n   }\n \n   /**\n-   * Converts the given IDL name to class name, tries to load the\n-   * matching class and create an object instance with parameterless\n-   * constructor. The OMG prefix (omg.org) is replaced by\n-   * the java prefix org.omg. No other prefixes are added.\n+   * Converts the given IDL name to class name, tries to load the matching class\n+   * and create an object instance with parameterless constructor. The OMG\n+   * prefix (omg.org) is replaced by the java prefix org.omg. No other prefixes\n+   * are added.\n    *\n    * @param IDL the idl name.\n    *\n@@ -341,8 +337,111 @@ public static String toIDL(String cn)\n       cn = OMG_PREFIX + cn.substring(JAVA_PREFIX.length()).replace('.', '/');\n     else if (cn.startsWith(CLASSPATH_PREFIX))\n       cn =\n-        OMG_PREFIX + cn.substring(CLASSPATH_PREFIX.length()).replace('.', '/');\n+        OMG_PREFIX +\n+        cn.substring(CLASSPATH_PREFIX.length()).replace('.', '/');\n \n     return \"IDL:\" + cn + \":1.0\";\n   }\n+\n+  /**\n+   * Insert the passed parameter into the given Any, assuming that the helper\n+   * class is available. The helper class must have the \"Helper\" suffix and be\n+   * in the same package as the class of the object being inserted.\n+   *\n+   * @param into the target to insert.\n+   *\n+   * @param object the object to insert. It can be any object as far as the\n+   * corresponding helper is provided.\n+   *\n+   * @return true on success, false otherwise.\n+   */\n+  public static boolean insertWithHelper(Any into, Object object)\n+  {\n+    try\n+      {\n+        String helperClassName = object.getClass().getName() + \"Helper\";\n+        Class helperClass = Class.forName(helperClassName);\n+\n+        Method insert =\n+          helperClass.getMethod(\"insert\",\n+            new Class[] { Any.class, object.getClass() }\n+          );\n+\n+        insert.invoke(null, new Object[] { into, object });\n+\n+        return true;\n+      }\n+    catch (Exception exc)\n+      {\n+        // Failed due some reason.\n+        return false;\n+      }\n+  }\n+\n+  /**\n+   * Insert the system exception into the given Any.\n+   */\n+  public static boolean insertSysException(Any into, SystemException exception)\n+  {\n+    try\n+      {\n+        cdrBufOutput output = new cdrBufOutput();\n+\n+        String m_exception_id = toIDL(exception.getClass().getName());\n+        output.write_string(m_exception_id);\n+        output.write_ulong(exception.minor);\n+        CompletionStatusHelper.write(output, exception.completed);\n+\n+        String name = getDefaultName(m_exception_id);\n+\n+        universalHolder h = new universalHolder(output);\n+\n+        into.insert_Streamable(h);\n+\n+        recordTypeCode r = new recordTypeCode(TCKind.tk_except);\n+        r.setId(m_exception_id);\n+        r.setName(name);\n+        into.type(r);\n+\n+        return true;\n+      }\n+    catch (Exception ex)\n+      {\n+        ex.printStackTrace();\n+        return false;\n+      }\n+  }\n+\n+  /**\n+   * Get the type name from the IDL string.\n+   */\n+  public static String getDefaultName(String idl)\n+  {\n+    int f1 = idl.lastIndexOf(\"/\");\n+    int p1 = (f1 < 0) ? 0 : f1;\n+    int p2 = idl.indexOf(\":\", p1);\n+    if (p2 < 0)\n+      p2 = idl.length();\n+\n+    String name = idl.substring(f1 + 1, p2);\n+    return name;\n+  }\n+\n+  /**\n+   * Insert this exception into the given Any. On failure, insert the UNKNOWN\n+   * exception.\n+   */\n+  public static void insertException(Any into, Throwable exception)\n+  {\n+    boolean ok = false;\n+    if (exception instanceof SystemException)\n+      ok = insertSysException(into, (SystemException) exception);\n+    else if (exception instanceof UserException)\n+      ok = insertWithHelper(into, exception);\n+\n+    if (!ok)\n+      ok = insertSysException(into, new UNKNOWN());\n+    if (!ok)\n+      throw new InternalError(\"Exception wrapping broken\");\n+  }\n }\n\\ No newline at end of file"}, {"sha": "247cd205ccb79b1313d5fd53415ecc452f0f749a", "filename": "libjava/classpath/gnu/CORBA/Restricted_ORB.java", "status": "modified", "additions": 98, "deletions": 37, "changes": 135, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2FCORBA%2FRestricted_ORB.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2FCORBA%2FRestricted_ORB.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FRestricted_ORB.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -58,6 +58,9 @@\n import org.omg.CORBA.UnionMember;\n import org.omg.CORBA.portable.OutputStream;\n import org.omg.CORBA.portable.ValueFactory;\n+import org.omg.PortableInterceptor.ClientRequestInterceptorOperations;\n+import org.omg.PortableInterceptor.IORInterceptorOperations;\n+import org.omg.PortableInterceptor.ServerRequestInterceptorOperations;\n \n import java.applet.Applet;\n \n@@ -66,36 +69,62 @@\n \n /**\n  * This class implements so-called Singleton ORB, a highly restricted version\n- * that cannot communicate over network. This ORB is provided\n- * for the potentially malicious applets with heavy security restrictions.\n- * It, however, supports some basic features that might be needed even\n- * when the network access is not granted.\n+ * that cannot communicate over network. This ORB is provided for the\n+ * potentially malicious applets with heavy security restrictions. It, however,\n+ * supports some basic features that might be needed even when the network\n+ * access is not granted.\n  *\n- * This ORB can only create typecodes,\n- * {@link Any}, {@link ContextList}, {@link NVList} and\n- * {@link org.omg.CORBA.portable.OutputStream} that writes to an\n- * internal buffer.\n+ * This ORB can only create typecodes, {@link Any}, {@link ContextList},\n+ * {@link NVList} and {@link org.omg.CORBA.portable.OutputStream} that writes to\n+ * an internal buffer.\n  *\n  * All other methods throw the {@link NO_IMPLEMENT} exception.\n  *\n  * @author Audrius Meskauskas (AudriusA@Bioinformatics.org)\n  */\n-public class Restricted_ORB\n-  extends org.omg.CORBA_2_3.ORB\n+public class Restricted_ORB extends org.omg.CORBA_2_3.ORB\n {\n   /**\n    * The singleton instance of this ORB.\n    */\n   public static final ORB Singleton = new Restricted_ORB();\n \n+  /**\n+   * The cumulated listener for all IOR interceptors. Interceptors are used by\n+   * {@link gnu.CORBA.Poa.ORB_1_4}.\n+   */\n+  public IORInterceptorOperations iIor;\n+\n+  /**\n+   * The cumulated listener for all server request interceptors. Interceptors\n+   * are used by {@link gnu.CORBA.Poa.ORB_1_4}.\n+   */\n+  public ServerRequestInterceptorOperations iServer;\n+\n+  /**\n+   * The cumulated listener for all client request interceptros. Interceptors\n+   * are used by {@link gnu.CORBA.Poa.ORB_1_4}.\n+   */\n+  public ClientRequestInterceptorOperations iClient;\n+\n+  /**\n+   * The required size of the interceptor slot array.\n+   */\n+  public int icSlotSize = 0;\n+\n   /**\n    * The value factories.\n    */\n   protected Hashtable factories = new Hashtable();\n \n   /**\n-   * Create a new instance of the RestrictedORB. This is used\n-   * in derived classes only.\n+   * The policy factories.\n+   */\n+  protected Hashtable policyFactories = new Hashtable();\n+\n+  /**\n+       * Create a new instance of the RestrictedORB. This is used in derived classes\n+   * only.\n    */\n   protected Restricted_ORB()\n   {\n@@ -159,8 +188,8 @@ public ExceptionList create_exception_list()\n \n   /** {@inheritDoc} */\n   public TypeCode create_exception_tc(String id, String name,\n-                                      StructMember[] members\n-                                     )\n+    StructMember[] members\n+  )\n   {\n     recordTypeCode r = new recordTypeCode(TCKind.tk_except);\n     r.setId(id);\n@@ -224,8 +253,8 @@ public TypeCode create_string_tc(int bound)\n \n   /** {@inheritDoc} */\n   public TypeCode create_struct_tc(String id, String name,\n-                                   StructMember[] members\n-                                  )\n+    StructMember[] members\n+  )\n   {\n     recordTypeCode r = new recordTypeCode(TCKind.tk_struct);\n     r.setId(id);\n@@ -240,13 +269,15 @@ public TypeCode create_struct_tc(String id, String name,\n   }\n \n   /** {@inheritDoc} */\n-  public TypeCode create_union_tc(String id, String name, TypeCode type,\n-                                  UnionMember[] members\n-                                 )\n+  public TypeCode create_union_tc(String id, String name,\n+    TypeCode discriminator_type, UnionMember[] members\n+  )\n   {\n     recordTypeCode r = new recordTypeCode(TCKind.tk_union);\n     r.setId(id);\n     r.setName(name);\n+    r.setDiscriminator_type(discriminator_type);\n+    r.setDefaultIndex(0);\n \n     for (int i = 0; i < members.length; i++)\n       {\n@@ -274,8 +305,8 @@ public TypeCode get_primitive_tc(TCKind tcKind)\n     catch (BadKind ex)\n       {\n         throw new BAD_PARAM(\"This is not a primitive type code: \" +\n-                            tcKind.value()\n-                           );\n+          tcKind.value()\n+        );\n       }\n   }\n \n@@ -304,13 +335,13 @@ public String object_to_string(org.omg.CORBA.Object forObject)\n   /**\n    * This method is not allowed for a RestrictedORB.\n    *\n-   * @throws InvalidName never in this class, but it is thrown\n-   * in the derived classes.\n+   * @throws InvalidName never in this class, but it is thrown in the derived\n+   * classes.\n    *\n    * @throws NO_IMPLEMENT, always.\n    */\n   public org.omg.CORBA.Object resolve_initial_references(String name)\n-                                                  throws InvalidName\n+    throws InvalidName\n   {\n     no();\n     throw new InternalError();\n@@ -366,8 +397,8 @@ protected void set_parameters(String[] args, Properties props)\n   }\n \n   /**\n-   * Throws an exception, stating that the given method is not supported\n-   * by the Restricted ORB.\n+   * Throws an exception, stating that the given method is not supported by the\n+   * Restricted ORB.\n    */\n   private final void no()\n   {\n@@ -381,8 +412,7 @@ private final void no()\n    *\n    * @throws NO_IMPLEMENT, always.\n    */\n-  public Request get_next_response()\n-                            throws org.omg.CORBA.WrongTransaction\n+  public Request get_next_response() throws org.omg.CORBA.WrongTransaction\n   {\n     no();\n     throw new InternalError();\n@@ -423,8 +453,8 @@ public void send_multiple_requests_oneway(Request[] requests)\n    * Register the value factory under the given repository id.\n    */\n   public ValueFactory register_value_factory(String repository_id,\n-                                             ValueFactory factory\n-                                            )\n+    ValueFactory factory\n+  )\n   {\n     factories.put(repository_id, factory);\n     return factory;\n@@ -440,9 +470,9 @@ public void unregister_value_factory(String id)\n \n   /**\n    * Look for the value factory for the value, having the given repository id.\n-   * The implementation checks for the registered value factories first.\n-   * If none found, it tries to load and instantiate the class, mathing the\n-   * given naming convention. If this faild, null is returned.\n+       * The implementation checks for the registered value factories first. If none\n+       * found, it tries to load and instantiate the class, mathing the given naming\n+   * convention. If this faild, null is returned.\n    *\n    * @param repository_id a repository id.\n    *\n@@ -452,12 +482,43 @@ public ValueFactory lookup_value_factory(String repository_id)\n   {\n     ValueFactory f = (ValueFactory) factories.get(repository_id);\n     if (f != null)\n-      return f;\n+      {\n+        return f;\n+      }\n \n-    f = (ValueFactory) ObjectCreator.createObject(repository_id, \"DefaultFactory\");\n+    f = (ValueFactory) ObjectCreator.createObject(repository_id,\n+        \"DefaultFactory\"\n+      );\n     if (f != null)\n-      factories.put(repository_id, f);\n-\n+      {\n+        factories.put(repository_id, f);\n+      }\n     return f;\n   }\n+\n+  /**\n+   * Destroy the interceptors, if they are present.\n+   */\n+  public void destroy()\n+  {\n+    if (iIor != null)\n+      {\n+        iIor.destroy();\n+        iIor = null;\n+      }\n+\n+    if (iServer != null)\n+      {\n+        iServer.destroy();\n+        iServer = null;\n+      }\n+\n+    if (iClient != null)\n+      {\n+        iClient.destroy();\n+        iClient = null;\n+      }\n+\n+    super.destroy();\n+  }\n }\n\\ No newline at end of file"}, {"sha": "7f40fc84d2dec21d246e56fda17822fdc1d9a811", "filename": "libjava/classpath/gnu/CORBA/ServiceRequestAdapter.java", "status": "modified", "additions": 23, "deletions": 14, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2FCORBA%2FServiceRequestAdapter.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2FCORBA%2FServiceRequestAdapter.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FServiceRequestAdapter.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -53,10 +53,11 @@\n import org.omg.CORBA.portable.Streamable;\n \n /**\n- * This class exists to handle obsolete invocation style using\n- * ServerRequest.\n- *\n- * @deprecated The method {@link ObjectImpl#_invoke} is much faster.\n+ * This class supports invocation using ServerRequest. When possible,\n+ * it is better to use  the {@link ObjectImpl#_invoke} rather than\n+ * working via ServerRequest. However since 1.4 the ServerRequest is\n+ * involved into POA machinery making this type of call is sometimes\n+ * inavoidable.\n  *\n  * @author Audrius Meskauskas, Lithuania (AudriusA@Bioinformatics.org)\n  */\n@@ -86,13 +87,13 @@ public OutputStream createReply()\n   }\n \n   /**\n-   * The old style invocation using the currently deprecated server\n-   * request class.\n+   * Make an invocation.\n    *\n    * @param request a server request, containg the invocation information.\n    * @param target the invocation target\n-   * @param result the result holder with the set suitable streamable to read\n-   * the result or null for void.\n+   * @param result the result holder with the set suitable streamable.\n+   * Using this parameter only increase the performance. It can be\n+   * null if the return type is void or unknown.\n    */\n   public static void invoke(ServerRequest request, InvokeHandler target,\n                             Streamable result\n@@ -133,12 +134,20 @@ public static void invoke(ServerRequest request, InvokeHandler target,\n         else\n           {\n             if (result != null)\n-            {\n-              result._read(in);\n-              gnuAny r = new gnuAny();\n-              r.insert_Streamable(result);\n-              request.set_result(r);\n-            };\n+              {\n+                // Use the holder for the return value, if provided.\n+                result._read(in);\n+\n+                gnuAny r = new gnuAny();\n+                r.insert_Streamable(result);\n+                request.set_result(r);\n+              }\n+            else\n+              {\n+                // Use the universal holder otherwise.\n+                gnuAny r = new gnuAny();\n+                r.insert_Streamable(new streamReadyHolder(in));\n+              }\n \n             // Unpack the arguments\n             for (int i = 0; i < args.count(); i++)"}, {"sha": "5eabc7da8a0264ea1cab8a3c2a691779a6381016", "filename": "libjava/classpath/gnu/CORBA/Simple_delegate.java", "status": "modified", "additions": 30, "deletions": 3, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2FCORBA%2FSimple_delegate.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2FCORBA%2FSimple_delegate.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FSimple_delegate.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -195,13 +195,40 @@ public boolean is_a(org.omg.CORBA.Object target, String repositoryIdentifer)\n   }\n \n   /**\n-   * Only returns true if the objects are equal ('==').\n+   * Returns true if the objects are the same of have\n+   * the same delegate set. All objects in this implementation\n+   * have a separate delegate.\n    */\n   public boolean is_equivalent(org.omg.CORBA.Object target,\n                                org.omg.CORBA.Object other\n                               )\n   {\n-    return target == other;\n+    if (target == other)\n+      return true;\n+    if ((target instanceof ObjectImpl) && other instanceof ObjectImpl)\n+      {\n+        try\n+          {\n+            org.omg.CORBA.portable.Delegate a =\n+              ((ObjectImpl) target)._get_delegate();\n+            org.omg.CORBA.portable.Delegate b =\n+              ((ObjectImpl) other)._get_delegate();\n+            if (a == b)\n+              {\n+                return true;\n+              }\n+            if (a != null && b != null)\n+              {\n+                return a.equals(b);\n+              }\n+          }\n+        catch (Exception ex)\n+          {\n+            // Unable to get one of the delegates.\n+            return false;\n+          }\n+      }\n+    return false;\n   }\n \n   /**\n@@ -246,4 +273,4 @@ public Request request(org.omg.CORBA.Object target, String operation)\n   {\n     throw new InternalError();\n   }\n-}\n+}\n\\ No newline at end of file"}, {"sha": "a6b99200a4801a130ee8ff2e0ee9cee25681f620", "filename": "libjava/classpath/gnu/CORBA/SocketRepository.java", "status": "modified", "additions": 17, "deletions": 5, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2FCORBA%2FSocketRepository.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2FCORBA%2FSocketRepository.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FSocketRepository.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -39,6 +39,7 @@\n package gnu.CORBA;\n \n import java.net.Socket;\n+import java.net.SocketException;\n \n import java.util.HashMap;\n \n@@ -70,23 +71,34 @@ public static void put_socket(Object key, Socket s)\n \n   /**\n    * Get a socket.\n-   *\n+   * \n    * @param key a socket key.\n-   *\n-   * @return an opened socket for reuse, null if no such\n-   * available or it is closed.\n+   * \n+   * @return an opened socket for reuse, null if no such available or it is\n+   * closed.\n    */\n   public static Socket get_socket(Object key)\n   {\n     Socket s = (Socket) sockets.get(key);\n-    if (s != null && s.isClosed())\n+    if (s == null)\n+      return null;\n+    else if (s.isClosed())\n       {\n         sockets.remove(key);\n         return null;\n       }\n     else\n       {\n         sockets.remove(key);\n+        try\n+          {\n+            // Set one minute time out that will be changed later.\n+            s.setSoTimeout(60*1000);\n+          }\n+        catch (SocketException e)\n+          {\n+            s = null;\n+          }\n         return s;\n       }\n   }"}, {"sha": "0fe945ca1f050f3dbf880fc61a729c992babe469", "filename": "libjava/classpath/gnu/CORBA/bufferedResponseHandler.java", "status": "modified", "additions": 45, "deletions": 43, "changes": 88, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2FCORBA%2FbufferedResponseHandler.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2FCORBA%2FbufferedResponseHandler.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FbufferedResponseHandler.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -41,38 +41,41 @@\n import gnu.CORBA.CDR.cdrBufOutput;\n import gnu.CORBA.GIOP.MessageHeader;\n import gnu.CORBA.GIOP.ReplyHeader;\n+import gnu.CORBA.GIOP.RequestHeader;\n import gnu.CORBA.GIOP.cxCodeSet;\n \n import org.omg.CORBA.ORB;\n import org.omg.CORBA.portable.OutputStream;\n import org.omg.CORBA.portable.ResponseHandler;\n \n /**\n- * Provides the CDR output streams for writing the response to the given\n- * buffer.\n+ * Provides the CDR output streams for writing the response to the given buffer.\n  *\n  * @author Audrius Meskauskas (AudriusA@Bioinformatics.org)\n  */\n-class bufferedResponseHandler\n+public class bufferedResponseHandler\n   implements ResponseHandler\n {\n   /**\n-   * The message header.\n-   * This field is used to compute the size and alignments.\n+   * The message header. This field is used to compute the size and alignments.\n    * It is, however, never directly written to the buffer stream.\n    */\n-  final MessageHeader message_header;\n+  public final MessageHeader message_header;\n \n   /**\n    * The associated orb.\n    */\n-  final ORB orb;\n+  public final ORB orb;\n \n   /**\n-   * The reply header. This field is used to compute the size and alignments.\n-   * It is, however, never directly written to the buffer stream.\n+   * The reply header.\n+   */\n+  public final ReplyHeader reply_header;\n+\n+  /**\n+   * The request header.\n    */\n-  final ReplyHeader reply_header;\n+  public final RequestHeader request_header;\n \n   /**\n    * True if the stream was obtained by invoking {@link #createExceptionReply()},\n@@ -86,28 +89,27 @@\n   private cdrBufOutput buffer;\n \n   /**\n-   * Create a new buffered response handler that uses the given message\n-   * headers. The headers are used to compute sizes and check the versions.\n-   * They are not written into a stream inside this class.\n+   * Create a new buffered response handler that uses the given message headers.\n+   * The headers are used to compute sizes and check the versions. They are not\n+   * written into a stream inside this class.\n    *\n    * @param m_header a message header.\n    * @param r_header a reply header.\n    */\n   bufferedResponseHandler(ORB an_orb, MessageHeader m_header,\n-                          ReplyHeader r_header\n-                         )\n+                          ReplyHeader r_header, RequestHeader rq_header)\n   {\n     message_header = m_header;\n     reply_header = r_header;\n+    request_header = rq_header;\n     orb = an_orb;\n     prepareStream();\n   }\n \n   /**\n-   * Get an output stream for providing details about the exception.\n-   * Before returning the stream, the handler automatically writes\n-   * the message header and the reply about exception header,\n-   * but not the message header.\n+   * Get an output stream for providing details about the exception. Before\n+   * returning the stream, the handler automatically writes the message header\n+   * and the reply about exception header, but not the message header.\n    *\n    * @return the stream to write exception details into.\n    */\n@@ -121,8 +123,8 @@ public OutputStream createExceptionReply()\n   /**\n    * Get an output stream for writing a regular reply (not an exception).\n    *\n-   * Before returning the stream, the handler automatically writes\n-   * the regular reply header, but not the message header.\n+   * Before returning the stream, the handler automatically writes the regular\n+   * reply header, but not the message header.\n    *\n    * @return the output stream for writing a regular reply.\n    */\n@@ -135,27 +137,26 @@ public OutputStream createReply()\n   }\n \n   /**\n-   * Get the buffer, normally containing the written reply.\n-   * The reply includes the reply header (or the exception header)\n-   * but does not include the message header.\n+   * Get the buffer, normally containing the written reply. The reply includes\n+   * the reply header (or the exception header) but does not include the message\n+   * header.\n    *\n-   * The stream buffer can also be empty if no data have been written\n-   * into streams, returned by {@link #createReply()} or\n+   * The stream buffer can also be empty if no data have been written into\n+   * streams, returned by {@link #createReply()} or\n    * {@link #createExceptionReply()}.\n    *\n    * @return the CDR output stream, containing the written output.\n    */\n-  cdrBufOutput getBuffer()\n+  public cdrBufOutput getBuffer()\n   {\n     return buffer;\n   }\n \n   /**\n-   * True if the stream was obtained by invoking\n-   * {@link #createExceptionReply()}, false otherwise\n-   * (usually no-exception reply).\n+   * True if the stream was obtained by invoking {@link #createExceptionReply()},\n+   * false otherwise (usually no-exception reply).\n    */\n-  boolean isExceptionReply()\n+  public boolean isExceptionReply()\n   {\n     return exceptionReply;\n   }\n@@ -167,21 +168,22 @@ private void prepareStream()\n   {\n     buffer = new cdrBufOutput();\n     buffer.setOrb(orb);\n-    buffer.setOffset(message_header.getHeaderSize());\n-\n-    // Get the position after the reply header would be written.\n-    reply_header.write(buffer);\n+    buffer.setVersion(message_header.version);\n+    buffer.setCodeSet(cxCodeSet.find(reply_header.service_context));\n \n-    int new_offset = message_header.getHeaderSize() + buffer.buffer.size();\n+    // Since 1.2, the data section is always aligned on the 8 byte boundary.\n+    // In older versions, it is necessary to set the offset correctly.\n+    if (message_header.version.until_inclusive(1, 1))\n+      {\n+        buffer.setOffset(message_header.getHeaderSize());\n \n-    buffer.buffer.reset();\n-    buffer.setOffset(new_offset);\n+        // Get the position after the reply header would be written.\n+        reply_header.write(buffer);\n \n-    if (message_header.version.since_inclusive(1, 2))\n-      buffer.align(8);\n+        int new_offset = message_header.getHeaderSize() + buffer.buffer.size();\n \n-    buffer.setVersion(message_header.version);\n-\n-    buffer.setCodeSet(cxCodeSet.find(reply_header.service_context));\n+        buffer.buffer.reset();\n+        buffer.setOffset(new_offset);\n+      }\n   }\n }"}, {"sha": "eb610417b297d43700cf1d09de3f590f74240197", "filename": "libjava/classpath/gnu/CORBA/fixedTypeCode.java", "status": "modified", "additions": 5, "deletions": 9, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2FCORBA%2FfixedTypeCode.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2FCORBA%2FfixedTypeCode.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FfixedTypeCode.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -109,16 +109,12 @@ public static int countDigits(BigDecimal number)\n     return number.unscaledValue().abs().toString().length();\n   }\n \n-  public boolean equals(Object other)\n+  /**\n+   * Compare with other type code for equality.\n+   */\n+  public boolean equal(TypeCode other)\n   {\n-    if (other == this)\n-      {\n-        return true;\n-      }\n-    if (!(other instanceof TypeCode))\n-      {\n-        return false;\n-      }\n+    if (other == this) return true;\n     try\n       {\n         TypeCode that = (TypeCode) other;"}, {"sha": "7e5ef33514929d07f05591081f7c3922d28376f1", "filename": "libjava/classpath/gnu/CORBA/gnuAny.java", "status": "modified", "additions": 74, "deletions": 20, "changes": 94, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2FCORBA%2FgnuAny.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2FCORBA%2FgnuAny.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FgnuAny.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -38,6 +38,7 @@\n \n package gnu.CORBA;\n \n+import gnu.CORBA.CDR.Vio;\n import gnu.CORBA.CDR.cdrBufInput;\n import gnu.CORBA.CDR.cdrBufOutput;\n \n@@ -63,6 +64,7 @@\n import org.omg.CORBA.TypeCodeHolder;\n import org.omg.CORBA.TypeCodePackage.BadKind;\n import org.omg.CORBA.ValueBaseHolder;\n+import org.omg.CORBA.portable.BoxedValueHelper;\n import org.omg.CORBA.portable.Streamable;\n \n import java.io.IOException;\n@@ -499,20 +501,33 @@ public void insert_TypeCode(TypeCode typecode)\n   }\n \n   /** {@inheritDoc} */\n-  public void insert_Value(Serializable x, TypeCode typecode)\n+  public void insert_Value(Serializable x, TypeCode c_typecode)\n   {\n-    type(typecode);\n-    insert_Value(x);\n+    if (typecode != null && typecode.kind() == TCKind.tk_value_box)\n+      {\n+        has = new gnuValueHolder(x, typecode);\n+      }\n+    else\n+      {\n+        type(typecode);\n+        insert_Value(x);\n+      }\n   }\n \n   /** {@inheritDoc} */\n   public void insert_Value(Serializable x)\n   {\n-    resetTypes();\n-    if (has instanceof ValueBaseHolder)\n-      ((ValueBaseHolder) has).value = x;\n+    if (typecode != null && typecode.kind() == TCKind.tk_value_box)\n+      {\n+        has = new gnuValueHolder(x, typecode);\n+      }\n     else\n-      has = new ValueBaseHolder(x);\n+      {\n+        if (has instanceof ValueBaseHolder)\n+          ((ValueBaseHolder) has).value = x;\n+        else\n+          has = new ValueBaseHolder(x);\n+      }\n   }\n \n   /**\n@@ -748,15 +763,38 @@ public void read_value(org.omg.CORBA.portable.InputStream input,\n               }\n           }\n         type(a_type);\n-        has._read(input);\n-      }\n-    catch (BadKind ex)\n-      {\n-        throw new MARSHAL(\"Bad kind: \" + ex.getMessage());\n+\n+        if (!(has instanceof universalHolder) &&\n+            (kind == TCKind._tk_value_box))\n+          {\n+            // The streamable only contains operations for\n+            // reading the value, not the value header.\n+            Field vField = has.getClass().getField(\"value\");\n+\n+            BoxedValueHelper helper;\n+\n+            try\n+              {\n+                Class helperClass =\n+                  Class.forName(ObjectCreator.toHelperName(a_type.id()));\n+                helper = (BoxedValueHelper) helperClass.newInstance();\n+              }\n+            catch (Exception ex)\n+              {\n+                helper = null;\n+              }\n+\n+            Object content = Vio.read(input, helper);\n+            vField.set(has, content);\n+          }\n+        else\n+          has._read(input);\n       }\n-    catch (IOException ex)\n+    catch (Exception ex)\n       {\n-        throw new MARSHAL(\"IO exception: \" + ex.getMessage());\n+        MARSHAL m = new MARSHAL();\n+        m.initCause(ex);\n+        throw m;\n       }\n   }\n \n@@ -790,6 +828,12 @@ public void write_value(org.omg.CORBA.portable.OutputStream output)\n   {\n     if (has != null)\n       has._write(output);\n+    else\n+    // These kinds support null.\n+    if (xKind == TCKind._tk_null || xKind == TCKind._tk_objref ||\n+        xKind == TCKind._tk_value || xKind == TCKind._tk_value_box\n+       )\n+      output.write_long(0);\n   }\n \n   /**\n@@ -806,16 +850,26 @@ protected void check(int kind)\n     if (xKind >= 0)\n       {\n         if (xKind != kind)\n-          throw new BAD_OPERATION(\"Extracting \" + typeNamer.nameIt(kind) +\n-                                  \" when stored \" + typeNamer.nameIt(xKind)\n-                                 );\n+          if (!(\n+                xKind == TCKind._tk_alias &&\n+                has._type().kind().value() == kind\n+              )\n+             )\n+            throw new BAD_OPERATION(\"Extracting \" + typeNamer.nameIt(kind) +\n+                                    \" when stored \" + typeNamer.nameIt(xKind)\n+                                   );\n       }\n     else\n       {\n         if (type().kind().value() != kind)\n-          throw new BAD_OPERATION(\"Extracting \" + typeNamer.nameIt(kind) +\n-                                  \" stored \" + typeNamer.nameIt(type())\n-                                 );\n+          if (!(\n+                type().kind().value() == TCKind._tk_alias &&\n+                has._type().kind().value() == kind\n+              )\n+             )\n+            throw new BAD_OPERATION(\"Extracting \" + typeNamer.nameIt(kind) +\n+                                    \" stored \" + typeNamer.nameIt(type())\n+                                   );\n       }\n   }\n "}, {"sha": "067de498c797be363c000876a1f5baf72c2f91dd", "filename": "libjava/classpath/gnu/CORBA/gnuCodecFactory.java", "status": "modified", "additions": 8, "deletions": 13, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2FCORBA%2FgnuCodecFactory.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2FCORBA%2FgnuCodecFactory.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FgnuCodecFactory.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -38,12 +38,12 @@\n \n package gnu.CORBA;\n \n-import org.omg.CORBA.*;\n import org.omg.CORBA.LocalObject;\n-import org.omg.IOP.*;\n+import org.omg.CORBA.ORB;\n import org.omg.IOP.Codec;\n import org.omg.IOP.CodecFactory;\n import org.omg.IOP.CodecFactoryPackage.UnknownEncoding;\n+import org.omg.IOP.ENCODING_CDR_ENCAPS;\n import org.omg.IOP.Encoding;\n \n /**\n@@ -52,9 +52,7 @@\n  *\n  * @author Audrius Meskauskas, Lithuania (AudriusA@Bioinformatics.org)\n  */\n-public class gnuCodecFactory\n-  extends LocalObject\n-  implements CodecFactory\n+public class gnuCodecFactory extends LocalObject implements CodecFactory\n {\n   /**\n    * The associated ORB.\n@@ -78,18 +76,15 @@ public gnuCodecFactory(ORB an_orb)\n    *\n    * @throws UnknownEncoding if the encoding is not a ENCODING_CDR_ENCAPS.\n    */\n-  public Codec create_codec(Encoding for_encoding)\n-                     throws UnknownEncoding\n+  public Codec create_codec(Encoding for_encoding) throws UnknownEncoding\n   {\n     if (for_encoding.format != ENCODING_CDR_ENCAPS.value)\n       throw new UnknownEncoding(\"Only ENCODING_CDR_ENCAPS is \" +\n-                                \"supported by this factory.\"\n-                               );\n+        \"supported by this factory.\"\n+      );\n \n     return new cdrEncapsCodec(orb,\n-                              new Version(for_encoding.major_version,\n-                                          for_encoding.minor_version\n-                                         )\n-                             );\n+      new Version(for_encoding.major_version, for_encoding.minor_version)\n+    );\n   }\n }\n\\ No newline at end of file"}, {"sha": "7d756eddba3b356b95abee397819f349e9bad339", "filename": "libjava/classpath/gnu/CORBA/gnuRequest.java", "status": "modified", "additions": 537, "deletions": 131, "changes": 668, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2FCORBA%2FgnuRequest.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2FCORBA%2FgnuRequest.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FgnuRequest.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -40,32 +40,47 @@\n \n import gnu.CORBA.CDR.cdrBufInput;\n import gnu.CORBA.CDR.cdrBufOutput;\n-import gnu.CORBA.GIOP.CloseMessage;\n import gnu.CORBA.GIOP.MessageHeader;\n import gnu.CORBA.GIOP.ReplyHeader;\n import gnu.CORBA.GIOP.RequestHeader;\n import gnu.CORBA.GIOP.cxCodeSet;\n+import gnu.CORBA.Interceptor.gnuClientRequestInfo;\n+import gnu.CORBA.Poa.ORB_1_4;\n \n import org.omg.CORBA.ARG_IN;\n import org.omg.CORBA.ARG_INOUT;\n import org.omg.CORBA.ARG_OUT;\n import org.omg.CORBA.Any;\n import org.omg.CORBA.BAD_INV_ORDER;\n+import org.omg.CORBA.BAD_PARAM;\n import org.omg.CORBA.Bounds;\n+import org.omg.CORBA.CompletionStatus;\n import org.omg.CORBA.Context;\n import org.omg.CORBA.ContextList;\n import org.omg.CORBA.Environment;\n import org.omg.CORBA.ExceptionList;\n+import org.omg.CORBA.INV_POLICY;\n import org.omg.CORBA.MARSHAL;\n+import org.omg.CORBA.NO_IMPLEMENT;\n import org.omg.CORBA.NO_RESOURCES;\n import org.omg.CORBA.NVList;\n import org.omg.CORBA.NamedValue;\n import org.omg.CORBA.ORB;\n+import org.omg.CORBA.Policy;\n import org.omg.CORBA.Request;\n import org.omg.CORBA.SystemException;\n import org.omg.CORBA.TypeCode;\n import org.omg.CORBA.UnknownUserException;\n-import org.omg.CORBA.UserException;\n+import org.omg.CORBA.portable.ObjectImpl;\n+import org.omg.IOP.ServiceContext;\n+import org.omg.IOP.TAG_CODE_SETS;\n+import org.omg.IOP.TAG_INTERNET_IOP;\n+import org.omg.IOP.TaggedComponent;\n+import org.omg.IOP.TaggedProfile;\n+import org.omg.PortableInterceptor.ClientRequestInfo;\n+import org.omg.PortableInterceptor.ClientRequestInterceptorOperations;\n+import org.omg.PortableInterceptor.ForwardRequest;\n+import org.omg.PortableInterceptor.InvalidSlot;\n \n import java.io.IOException;\n import java.io.InputStream;\n@@ -74,39 +89,48 @@\n import java.net.BindException;\n import java.net.Socket;\n \n+import java.util.ArrayList;\n+\n /**\n  * The implementation of the CORBA request.\n  *\n  * @author Audrius Meskauskas (AudriusA@Bioinformatics.org)\n  */\n-public class gnuRequest\n-  extends Request\n-  implements Cloneable\n+public class gnuRequest extends Request implements Cloneable\n {\n   /**\n    * The maximal supported GIOP version.\n    */\n   public static Version MAX_SUPPORTED = new Version(1, 2);\n \n   /**\n-   * The initial pause that the Request makes when\n-   * the required port is not available.\n+   * The initial pause that the Request makes when the required port is not\n+   * available.\n    */\n   public static int PAUSE_INITIAL = 50;\n \n   /**\n-   * The number of repretetive attempts to get a required\n-   * port, if it is not immediately available.\n+   * The number of repretetive attempts to get a required port, if it is not\n+   * immediately available.\n    */\n   public static int PAUSE_STEPS = 12;\n \n   /**\n-   * The maximal pausing interval between two repetetive attempts.\n-   * The interval doubles after each unsuccessful attempt, but\n-   * will not exceed this value.\n+   * The maximal pausing interval between two repetetive attempts. The interval\n+   * doubles after each unsuccessful attempt, but will not exceed this value.\n    */\n   public static int PAUSE_MAX = 1000;\n \n+  /**\n+   * The interceptor, listening the major request submission points.\n+   */\n+  ClientRequestInterceptorOperations m_interceptor;\n+\n+  /**\n+   * The request info, used by interceptor.\n+   */\n+  ClientRequestInfo m_info = new gnuClientRequestInfo(this);\n+\n   /**\n    * The empty byte array.\n    */\n@@ -124,14 +148,13 @@\n   protected ContextList m_context_list;\n \n   /**\n-   * The request environment for holding the exception\n-   * the has possibly been thrown by the method being invoked.\n+   * The request environment for holding the exception the has possibly been\n+   * thrown by the method being invoked.\n    */\n   protected Environment m_environment = new gnuEnvironment();\n \n   /**\n-   * The list of all exceptions that can be thrown by the\n-   * method being invoked.\n+   * The list of all exceptions that can be thrown by the method being invoked.\n    */\n   protected ExceptionList m_exceptions = new gnuExceptionList();\n \n@@ -140,6 +163,16 @@\n    */\n   protected NamedValue m_result = new gnuNamedValue();\n \n+  /**\n+   * The exception id, received from the server, null if none.\n+   */\n+  protected String m_exception_id;\n+\n+  /**\n+   * The thrown system exception.\n+   */\n+  protected SystemException m_sys_ex;\n+\n   /**\n    * The invocation target.\n    */\n@@ -151,20 +184,32 @@\n   protected String m_operation;\n \n   /**\n-   * The flag, indicating that the request has been sent\n-   * and the result is already received.\n+   * This field temporary remembers the value of the forwarded ior reference. If\n+   * it is not null, the request was forwarded and the effective target is not\n+   * the same as the default target.\n+   */\n+  public IOR m_forward_ior;\n+\n+  /**\n+   * Is set when object, and not IOR is directly available.\n+   */\n+  public org.omg.CORBA.Object m_forwarding_target;\n+\n+  /**\n+   * The flag, indicating that the request has been sent and the result is\n+   * already received.\n    */\n   protected boolean complete;\n \n   /**\n-   * The flag, indicating that the response to this request must be\n-   * ignored (used with {@link #send_oneway()}).\n+   * The flag, indicating that the response to this request must be ignored\n+   * (used with {@link #send_oneway()}).\n    */\n   protected boolean oneWay;\n \n   /**\n-   * The flag, indicating that the request has been sent\n-   * and no result is yet received.\n+   * The flag, indicating that the request has been sent and no result is yet\n+   * received.\n    */\n   protected boolean running;\n \n@@ -174,11 +219,26 @@\n   protected gnuNVList m_args = new gnuNVList();\n \n   /**\n-   * The request arguments in the case when they are directly written into\n-   * the parameter buffer.\n+   * The request arguments in the case when they are directly written into the\n+   * parameter buffer.\n    */\n   protected streamRequest m_parameter_buffer;\n \n+  /**\n+   * The array of slots.\n+   */\n+  protected Any[] m_slots;\n+\n+  /**\n+   * The request header currently in use.\n+   */\n+  protected RequestHeader m_rqh;\n+\n+  /**\n+   * The reply header currently in use.\n+   */\n+  protected ReplyHeader m_rph;\n+\n   /**\n    * The IOR of the target.\n    */\n@@ -192,17 +252,16 @@\n   /**\n    * The encoding, used to send the message.\n    *\n-   * The default encoding is inherited from the set IOR\n-   * (that string reference can be encoded in either Big or\n-   * Little endian). If the IOR encoding is not known\n-   * (for example, by obtaining the reference from the naming\n-   * service), the Big Endian is used.\n+   * The default encoding is inherited from the set IOR (that string reference\n+   * can be encoded in either Big or Little endian). If the IOR encoding is not\n+   * known (for example, by obtaining the reference from the naming service),\n+   * the Big Endian is used.\n    */\n   private boolean Big_endian = true;\n \n   /**\n-   * Set the IOR data, sufficient to find the invocation target.\n-   * This also sets default endian encoding for invocations.\n+   * Set the IOR data, sufficient to find the invocation target. This also sets\n+   * default endian encoding for invocations.\n    *\n    * @see IOR.parse(String)\n    */\n@@ -212,6 +271,11 @@ public void setIor(IOR an_ior)\n     setBigEndian(ior.Big_Endian);\n   }\n \n+  /**\n+   * Used when redirecting request to another target.\n+   */\n+  gnuRequest redirected;\n+\n   /**\n    * Get the IOR data, sufficient to find the invocation target.\n    *\n@@ -228,18 +292,26 @@ public IOR getIor()\n   public void setORB(ORB an_orb)\n   {\n     orb = an_orb;\n+\n+    // Take the interceptor from the ORB.\n+    if (orb instanceof Restricted_ORB)\n+      m_interceptor = ((Restricted_ORB) orb).iClient;\n+\n+    if (m_interceptor != null && orb instanceof ORB_1_4)\n+      {\n+        m_slots = ((ORB_1_4) orb).ic_current.clone_slots();\n+      }\n   }\n \n   /**\n-   * Set the encoding that will be used to send the message.\n-   * The default encoding is inherited from the set IOR\n-   * (that string reference can be encoded in either Big or\n-   * Little endian). If the IOR encoding is not known\n-   * (for example, by obtaining the reference from the naming\n-   * service), the Big Endian is used.\n+   * Set the encoding that will be used to send the message. The default\n+   * encoding is inherited from the set IOR (that string reference can be\n+   * encoded in either Big or Little endian). If the IOR encoding is not known\n+   * (for example, by obtaining the reference from the naming service), the Big\n+   * Endian is used.\n    *\n-   * @param use_big_endian true to use the Big Endian, false\n-   * to use the Little Endian encoding.\n+   * @param use_big_endian true to use the Big Endian, false to use the Little\n+   * Endian encoding.\n    */\n   public void setBigEndian(boolean use_big_endian)\n   {\n@@ -257,17 +329,32 @@ public void setOperation(String operation)\n   }\n \n   /**\n-   * Get the parameter stream, where the invocation arguments should\n-   * be written if they are written into the stream directly.\n+   * Get the parameter stream, where the invocation arguments should be written\n+   * if they are written into the stream directly.\n    */\n   public streamRequest getParameterStream()\n   {\n     m_parameter_buffer = new streamRequest();\n     m_parameter_buffer.request = this;\n     m_parameter_buffer.setVersion(ior.Internet.version);\n-    m_parameter_buffer.setCodeSet(cxCodeSet.negotiate(ior.CodeSets));\n+    m_parameter_buffer.setCodeSet(cxCodeSet.negotiate(ior.Internet.CodeSets));\n     m_parameter_buffer.setOrb(orb);\n     m_parameter_buffer.setBigEndian(Big_endian);\n+\n+    // For the old iiop versions, it is important to set the size\n+    // correctly.\n+    if (ior.Internet.version.until_inclusive(1, 1))\n+      {\n+        cdrBufOutput measure = new cdrBufOutput();\n+        measure.setOffset(12);\n+        if (m_rqh == null)\n+          m_rqh = new gnu.CORBA.GIOP.v1_0.RequestHeader();\n+        m_rqh.operation = m_operation;\n+        m_rqh.object_key = ior.key;\n+        m_rqh.write(measure);\n+        m_parameter_buffer.setOffset(12 + measure.buffer.size());\n+      }\n+\n     return m_parameter_buffer;\n   }\n \n@@ -380,33 +467,29 @@ public ExceptionList exceptions()\n   }\n \n   /** {@inheritDoc} */\n-  public void get_response()\n-                    throws org.omg.CORBA.WrongTransaction\n+  public void get_response() throws org.omg.CORBA.WrongTransaction\n   {\n     /**\n-     * The response is ready after it is received.\n-     * FIXME implement context checks and any other functionality,\n-     * if required.\n+     * The response is ready after it is received. FIXME implement context\n+     * checks and any other functionality, if required.\n      */\n   }\n \n   /**\n-   * Submit the request, suspending the current thread until the\n-   * answer is received.\n+   * Submit the request, suspending the current thread until the answer is\n+   * received.\n    *\n-   * This implementation requires to set the IOR property\n-   * ({@link #setIOR(IOR)} before calling this method.\n+   * This implementation requires to set the IOR property ({@link #setIOR(IOR)}\n+   * before calling this method.\n    *\n-   * @throws BAD_INV_ORDER, minor code 0, if the IOR has not been\n-   * previously set.\n+   * @throws BAD_INV_ORDER, minor code 0, if the IOR has not been previously\n+   * set.\n    *\n-   * @throws SystemException if this exception has been thrown on\n-   * remote side. The exact exception type and the minor code are\n-   * the same as they have been for the exception, thrown on remoted\n-   * side.\n+   * @throws SystemException if this exception has been thrown on remote side.\n+   * The exact exception type and the minor code are the same as they have been\n+   * for the exception, thrown on remoted side.\n    */\n-  public synchronized void invoke()\n-                           throws BAD_INV_ORDER\n+  public synchronized void invoke() throws BAD_INV_ORDER\n   {\n     waitWhileBusy();\n     complete = false;\n@@ -417,7 +500,32 @@ public synchronized void invoke()\n \n     try\n       {\n-        p_invoke();\n+        Forwardings:\n+        while (true)\n+          {\n+            try\n+              {\n+                p_invoke();\n+                break Forwardings;\n+              }\n+            catch (ForwardRequest e)\n+              {\n+                try\n+                  {\n+                    ObjectImpl impl = (ObjectImpl) e.forward;\n+                    Simple_delegate delegate =\n+                      (Simple_delegate) impl._get_delegate();\n+                    ior = delegate.getIor();\n+                  }\n+                catch (Exception ex)\n+                  {\n+                    BAD_PARAM bad =\n+                      new BAD_PARAM(\"Unsupported forwarding target\");\n+                    bad.initCause(ex);\n+                    throw bad;\n+                  }\n+              }\n+          }\n       }\n     finally\n       {\n@@ -452,7 +560,8 @@ public NamedValue result()\n     return m_result;\n   }\n \n-  /** {@inheritDoc}\n+  /**\n+   * {@inheritDoc}\n    *\n    */\n   public Any return_value()\n@@ -474,9 +583,8 @@ public void run()\n   }\n \n   /**\n-   * Send a request and forget about it, not waiting for a response.\n-   * This can be done also for methods that normally are expected\n-   * to return some values.\n+   * Send a request and forget about it, not waiting for a response. This can be\n+   * done also for methods that normally are expected to return some values.\n    *\n    * TODO It is generally recommended to reuse the threads. Reuse?\n    */\n@@ -495,9 +603,8 @@ public void run()\n   }\n \n   /**\n-   * Set the argument list.\n-   * This field is initialised as empty non null instance by default,\n-   * so the method is only used in cases when the direct replacement\n+   * Set the argument list. This field is initialised as empty non null instance\n+   * by default, so the method is only used in cases when the direct replacement\n    * is desired.\n    *\n    * @param a_args the argument list.\n@@ -525,8 +632,8 @@ public void set_args(NVList a_args)\n   }\n \n   /**\n-   * Set the context list that is later returned by the\n-   * method {@link #contexts()}.\n+   * Set the context list that is later returned by the method\n+   * {@link #contexts()}.\n    *\n    * @param a_context_list a new context list.\n    */\n@@ -536,10 +643,9 @@ public void set_context_list(ContextList a_context_list)\n   }\n \n   /**\n-   * Set the exception container.\n-   * This field is initialised as empty non null instance by default,\n-   * so the method is only used in cases when the direct replacement\n-   * is desired.\n+   * Set the exception container. This field is initialised as empty non null\n+   * instance by default, so the method is only used in cases when the direct\n+   * replacement is desired.\n    *\n    * @param a_environment the new exception container.\n    */\n@@ -549,10 +655,9 @@ public void set_environment(Environment a_environment)\n   }\n \n   /**\n-   * Set the list of exceptions.\n-   * This field is initialised as empty non null instance by default,\n-   * so the method is only used in cases when the direct replacement\n-   * is desired.\n+   * Set the list of exceptions. This field is initialised as empty non null\n+   * instance by default, so the method is only used in cases when the direct\n+   * replacement is desired.\n    *\n    * @param a_exceptions a list of exceptions.\n    */\n@@ -572,10 +677,9 @@ public void set_operation(String a_operation)\n   }\n \n   /**\n-   * Set the named value, returned as result.\n-   * This field is initialised as empty non null instance by default,\n-   * so the method is only used in cases when the direct replacement\n-   * is desired.\n+   * Set the named value, returned as result. This field is initialised as empty\n+   * non null instance by default, so the method is only used in cases when the\n+   * direct replacement is desired.\n    *\n    * @param a_result the result keeper.\n    */\n@@ -585,8 +689,8 @@ public void set_result(NamedValue a_result)\n   }\n \n   /**\n-   * Set the type of the named value, returned as a result.\n-   * Instantiates a new instance of the result value.\n+   * Set the type of the named value, returned as a result. Instantiates a new\n+   * instance of the result value.\n    */\n   public void set_return_type(TypeCode returns)\n   {\n@@ -608,17 +712,16 @@ public void set_target(org.omg.CORBA.Object a_target)\n   }\n \n   /**\n-   * Do the actual invocation.\n-   * This implementation requires to set the IOR property\n-   * ({@link #setIOR(IOR)} before calling this method.\n+   * Do the actual invocation. This implementation requires to set the IOR\n+   * property ({@link #setIOR(IOR)} before calling this method.\n    *\n-   * @throws BAD_INV_ORDER, minor code 0, if the IOR has not been\n-   * previously set or if the direct argument addition is mixed with\n-   * the direct argument writing into the output stream.\n+   * @throws BAD_INV_ORDER, minor code 0, if the IOR has not been previously set\n+   * or if the direct argument addition is mixed with the direct argument\n+   * writing into the output stream.\n    *\n    * @return the server response in binary form.\n    */\n-  public synchronized binaryReply submit()\n+  public synchronized binaryReply submit() throws ForwardRequest\n   {\n     gnu.CORBA.GIOP.MessageHeader header = new gnu.CORBA.GIOP.MessageHeader();\n \n@@ -629,32 +732,36 @@ public synchronized binaryReply submit()\n     header.version = useVersion(ior.Internet.version);\n \n     RequestHeader rh = header.create_request_header();\n-\n-    rh.object_key = ior.key;\n     rh.operation = m_operation;\n+    rh.object_key = ior.key;\n+\n+    // Update interceptor.\n+    m_rqh = rh;\n+\n+    if (m_interceptor != null)\n+      m_interceptor.send_request(m_info);\n \n     // Prepare the submission.\n     cdrBufOutput request_part = new cdrBufOutput();\n \n     request_part.setOffset(header.getHeaderSize());\n     request_part.setVersion(header.version);\n-    request_part.setCodeSet(cxCodeSet.negotiate(ior.CodeSets));\n+    request_part.setCodeSet(cxCodeSet.negotiate(ior.Internet.CodeSets));\n     request_part.setOrb(orb);\n     request_part.setBigEndian(header.isBigEndian());\n \n     // This also sets the stream encoding to the encoding, specified\n     // in the header.\n     rh.write(request_part);\n-\n+    \n     if (m_args != null && m_args.count() > 0)\n       {\n         write_parameters(header, request_part);\n \n         if (m_parameter_buffer != null)\n           throw new BAD_INV_ORDER(\"Please either add parameters or \" +\n-                                  \"write them into stream, but not both \" +\n-                                  \"at once.\"\n-                                 );\n+            \"write them into stream, but not both \" + \"at once.\"\n+          );\n       }\n \n     if (m_parameter_buffer != null)\n@@ -710,8 +817,8 @@ public synchronized binaryReply submit()\n \n         if (socket == null)\n           throw new NO_RESOURCES(ior.Internet.host + \":\" + ior.Internet.port +\n-                                 \" in use\"\n-                                );\n+            \" in use\"\n+          );\n         socket.setKeepAlive(true);\n \n         OutputStream socketOutput = socket.getOutputStream();\n@@ -745,8 +852,9 @@ public synchronized binaryReply submit()\n       {\n         MARSHAL m =\n           new MARSHAL(\"Unable to open a socket at \" + ior.Internet.host + \":\" +\n-                      ior.Internet.port\n-                     );\n+            ior.Internet.port, 10000 + ior.Internet.port,\n+            CompletionStatus.COMPLETED_NO\n+          );\n         m.initCause(io_ex);\n         throw m;\n       }\n@@ -776,9 +884,9 @@ public org.omg.CORBA.Object target()\n   }\n \n   /**\n-   * Get the used version. Normally, it is better to respond using the\n-   * same version as it is specified in IOR, but not above the maximal\n-   * supported version.\n+   * Get the used version. Normally, it is better to respond using the same\n+   * version as it is specified in IOR, but not above the maximal supported\n+   * version.\n    */\n   public Version useVersion(Version desired)\n   {\n@@ -790,12 +898,11 @@ public Version useVersion(Version desired)\n \n   /**\n    * Wait while the response to request, submitted using\n-   * {@link #send_deferred()} or {@link #invoke()} (from other thread)\n-   * is returned.\n+   * {@link #send_deferred()} or {@link #invoke()} (from other thread) is\n+   * returned.\n    *\n-   * FIXME It is possible to rewrite this using\n-   * Object.wait() and Object.notify(), but be sure to prepare the test\n-   * as well.\n+   * FIXME It is possible to rewrite this using Object.wait() and\n+   * Object.notify(), but be sure to prepare the test as well.\n    */\n   public synchronized void waitWhileBusy()\n   {\n@@ -819,26 +926,25 @@ public synchronized void waitWhileBusy()\n   }\n \n   /**\n-   * Do actual invocation. This method recursively calls itself if\n-   * the redirection is detected.\n+   * Do actual invocation. This method recursively calls itself if the\n+   * redirection is detected.\n    */\n-  private void p_invoke()\n-                 throws SystemException\n+  private void p_invoke() throws SystemException, ForwardRequest\n   {\n     binaryReply response = submit();\n \n-    ReplyHeader rh = response.header.create_reply_header();\n+    if (m_rph == null)\n+      m_rph = response.header.create_reply_header();\n+\n     cdrBufInput input = response.getStream();\n     input.setOrb(orb);\n \n-    rh.read(input);\n+    m_rph.read(input);\n \n     // The stream must be aligned sinve v1.2, but only once.\n     boolean align = response.header.version.since_inclusive(1, 2);\n \n-    boolean moved_permanently = false;\n-\n-    switch (rh.reply_status)\n+    switch (m_rph.reply_status)\n       {\n         case ReplyHeader.NO_EXCEPTION :\n \n@@ -881,6 +987,9 @@ private void p_invoke()\n                   }\n               }\n \n+          if (m_interceptor != null)\n+            m_interceptor.receive_reply(m_info);\n+\n           break;\n \n         case ReplyHeader.SYSTEM_EXCEPTION :\n@@ -889,28 +998,36 @@ private void p_invoke()\n               input.align(8);\n               align = false;\n             }\n+          readExceptionId(input);\n \n-          SystemException exception = ObjectCreator.readSystemException(input);\n+          m_sys_ex = ObjectCreator.readSystemException(input);\n+          m_environment.exception(m_sys_ex);\n \n-          m_environment.exception(exception);\n+          if (m_interceptor != null)\n+            m_interceptor.receive_exception(m_info);\n \n-          throw exception;\n+          throw m_sys_ex;\n \n         case ReplyHeader.USER_EXCEPTION :\n           if (align)\n             {\n               input.align(8);\n               align = false;\n             }\n+          readExceptionId(input);\n \n           // Prepare an Any that will hold the exception.\n           gnuAny exc = new gnuAny();\n+          exc.setOrb(orb);\n \n           exc.insert_Streamable(new streamReadyHolder(input));\n \n           UnknownUserException unuex = new UnknownUserException(exc);\n           m_environment.exception(unuex);\n \n+          if (m_interceptor != null)\n+            m_interceptor.receive_exception(m_info);\n+\n           break;\n \n         case ReplyHeader.LOCATION_FORWARD_PERM :\n@@ -925,20 +1042,39 @@ private void p_invoke()\n             }\n           catch (IOException ex)\n             {\n-              throw new MARSHAL(ex + \" while reading the forwarding info\");\n+              new MARSHAL(\"Cant read forwarding info\", 5103,\n+                CompletionStatus.COMPLETED_NO\n+              );\n             }\n \n           setIor(forwarded);\n \n+          m_forward_ior = forwarded;\n+\n+          if (m_interceptor != null)\n+            m_interceptor.receive_other(m_info);\n+\n           // Repeat with the forwarded information.\n           p_invoke();\n           return;\n \n         default :\n-          throw new MARSHAL(\"Unknow reply status: \" + rh.reply_status);\n+          throw new MARSHAL(\"Unknow reply status\", 8100 + m_rph.reply_status,\n+            CompletionStatus.COMPLETED_NO\n+          );\n       }\n   }\n \n+  /**\n+   * Read exception id without changing the stream pointer position.\n+   */\n+  void readExceptionId(cdrBufInput input)\n+  {\n+    input.mark(2048);\n+    m_exception_id = input.read_string();\n+    input.reset();\n+  }\n+\n   /**\n    * Write the operation parameters.\n    *\n@@ -947,10 +1083,9 @@ private void p_invoke()\n    *\n    * @throws MARSHAL if the attempt to write the parameters has failde.\n    */\n-  private void write_parameter_buffer(MessageHeader header,\n-                                      cdrBufOutput request_part\n-                                     )\n-                               throws MARSHAL\n+  protected void write_parameter_buffer(MessageHeader header,\n+    cdrBufOutput request_part\n+  ) throws MARSHAL\n   {\n     try\n       {\n@@ -974,8 +1109,9 @@ private void write_parameter_buffer(MessageHeader header,\n    *\n    * @throws MARSHAL if the attempt to write the parameters has failde.\n    */\n-  private void write_parameters(MessageHeader header, cdrBufOutput request_part)\n-                         throws MARSHAL\n+  protected void write_parameters(MessageHeader header,\n+    cdrBufOutput request_part\n+  ) throws MARSHAL\n   {\n     // Align after 1.2, but only once.\n     boolean align = header.version.since_inclusive(1, 2);\n@@ -988,7 +1124,7 @@ private void write_parameters(MessageHeader header, cdrBufOutput request_part)\n           {\n             para = m_args.item(i);\n \n-            //This bit is set both for ARG_IN and ARG_INOUT\n+            // This bit is set both for ARG_IN and ARG_INOUT\n             if ((para.flags() & ARG_IN.value) != 0)\n               {\n                 if (align)\n@@ -1002,7 +1138,277 @@ private void write_parameters(MessageHeader header, cdrBufOutput request_part)\n       }\n     catch (Bounds ex)\n       {\n-        throw new MARSHAL(\"Unable to write method arguments to CDR output.\");\n+        InternalError ierr = new InternalError();\n+        ierr.initCause(ex);\n+        throw ierr;\n       }\n   }\n+\n+  /* **************Implementation of the request info operations. ***** */\n+\n+  /**\n+   * Add context to request.\n+   */\n+  public void add_request_service_context(ServiceContext service_context,\n+    boolean replace\n+  )\n+  {\n+    m_rqh.addContext(service_context, replace);\n+  }\n+\n+  /**\n+   * Get the Internet profile as an effective profile.\n+   */\n+  public TaggedProfile effective_profile()\n+  {\n+    cdrBufOutput buf = new cdrBufOutput(512);\n+    buf.setOrb(orb);\n+    ior.Internet.write(buf);\n+\n+    TaggedProfile p = new TaggedProfile();\n+    p.tag = TAG_INTERNET_IOP.value;\n+    p.profile_data = buf.buffer.toByteArray();\n+    return p;\n+  }\n+\n+  /**\n+   * Return either target or forwarded targed.\n+   */\n+  public org.omg.CORBA.Object effective_target()\n+  {\n+    return new IOR_contructed_object(orb, ior);\n+  }\n+\n+  /**\n+   * Get effective component with the give id from the Internet profile.\n+   */\n+  public TaggedComponent get_effective_component(int id)\n+    throws BAD_PARAM\n+  {\n+    if (id == TAG_CODE_SETS.value)\n+      {\n+        // Codesets are encoded separately.\n+        cdrBufOutput buf = new cdrBufOutput(512);\n+        buf.setOrb(orb);\n+        ior.Internet.CodeSets.write(buf);\n+\n+        TaggedComponent t = new TaggedComponent();\n+        t.tag = TAG_CODE_SETS.value;\n+        t.component_data = buf.buffer.toByteArray();\n+        return t;\n+      }\n+    else\n+      {\n+        for (int i = 0; i < ior.Internet.components.size(); i++)\n+          {\n+            TaggedComponent c =\n+              (TaggedComponent) ior.Internet.components.get(i);\n+            if (c.tag == id)\n+              return c;\n+          }\n+      }\n+    throw new BAD_PARAM(\"No component \" + id + \" in the Internet profile\", 28,\n+      CompletionStatus.COMPLETED_MAYBE\n+    );\n+  }\n+\n+  /**\n+   * Get all components with the given id from the internet profile.\n+   */\n+  public TaggedComponent[] get_effective_components(int id)\n+    throws BAD_PARAM\n+  {\n+    if (id == TAG_CODE_SETS.value)\n+      return new TaggedComponent[] { get_effective_component(TAG_CODE_SETS.value) };\n+    else\n+      {\n+        ArrayList components = new ArrayList(ior.Internet.components.size());\n+        for (int i = 0; i < ior.Internet.components.size(); i++)\n+          {\n+            TaggedComponent c =\n+              (TaggedComponent) ior.Internet.components.get(i);\n+            if (c.tag == id)\n+              components.add(c);\n+          }\n+        if (components.size() == 0)\n+          throw new BAD_PARAM(\"No component \" + id +\n+            \" in the Internet profile\", 28, CompletionStatus.COMPLETED_MAYBE\n+          );\n+        else\n+          {\n+            TaggedComponent[] t = new TaggedComponent[ components.size() ];\n+            for (int i = 0; i < t.length; i++)\n+              t [ i ] = (TaggedComponent) components.get(i);\n+            return t;\n+          }\n+      }\n+  }\n+\n+  /**\n+   * This should be not implemented up till jdk 1.5 inclusive.\n+   */\n+  public Policy get_request_policy(int type) throws INV_POLICY\n+  {\n+    throw new NO_IMPLEMENT();\n+  }\n+\n+  /** @inheritDoc */\n+  public String received_exception_id()\n+  {\n+    return m_exception_id;\n+  }\n+\n+  /** @inheritDoc */\n+  public Any received_exception()\n+  {\n+    if (m_exception_id == null)\n+      return null;\n+\n+    if (m_sys_ex != null)\n+      {\n+        Any a = orb.create_any();\n+        ObjectCreator.insertSysException(a, m_sys_ex);\n+        return a;\n+      }\n+\n+    Exception mex = m_environment.exception();\n+\n+    UnknownUserException ex = (UnknownUserException) mex;\n+    if (ex == null)\n+      return null;\n+    else\n+      return ex.except;\n+  }\n+\n+  /**\n+   * Return the forwarded reference, null if none.\n+   */\n+  public org.omg.CORBA.Object forward_reference()\n+  {\n+    if (m_forwarding_target != null)\n+      return m_forwarding_target;\n+\n+    if (m_forward_ior != null)\n+      return new IOR_contructed_object(orb, m_forward_ior);\n+    else\n+      return null;\n+  }\n+\n+  /**\n+   * Get the slot from the slot array inside this request.\n+   */\n+  public Any get_slot(int id) throws InvalidSlot\n+  {\n+    try\n+      {\n+        return m_slots [ id ];\n+      }\n+    catch (Exception e)\n+      {\n+        throw new InvalidSlot(\"slot id \" + id + \":\" + e);\n+      }\n+  }\n+\n+  /**\n+   * Get the reply status.\n+   */\n+  public short reply_status()\n+  {\n+    if (m_rph == null)\n+      throw new BAD_INV_ORDER(\"Request not yet sent\", 14,\n+        CompletionStatus.COMPLETED_NO\n+      );\n+    return (short) m_rph.reply_status;\n+  }\n+\n+  /**\n+   * Get the request id.\n+   */\n+  public int request_id()\n+  {\n+    return m_rqh.request_id;\n+  }\n+\n+  /**\n+   * Return true if the response is expected.\n+   */\n+  public boolean response_expected()\n+  {\n+    return !oneWay;\n+  }\n+\n+  /**\n+   * Determines how far the request shall progress before control is returned to\n+   * the client. However up till JDK 1.5 inclusive this method always returns\n+   * SYNC_WITH_TRANSPORT.\n+   *\n+   * @return {@link org.omg.Messaging.SYNC_WITH_TRANSPORT.value (1), always.\n+   *\n+   * @specnote as defined in the Suns 1.5 JDK API.\n+   */\n+  public short sync_scope()\n+  {\n+    return org.omg.Messaging.SYNC_WITH_TRANSPORT.value;\n+  }\n+\n+  /** @inheritDoc */\n+  public ServiceContext get_request_service_context(int ctx_name)\n+    throws BAD_PARAM\n+  {\n+    return gnu.CORBA.GIOP.ServiceContext.findContext(ctx_name,\n+      m_rqh.service_context\n+    );\n+  }\n+\n+  /** @inheritDoc */\n+  public ServiceContext get_reply_service_context(int ctx_name)\n+    throws BAD_PARAM\n+  {\n+    if (m_rph == null)\n+      throw new BAD_INV_ORDER(\"Reply context not yet available\");\n+    return gnu.CORBA.GIOP.ServiceContext.findContext(ctx_name,\n+      m_rph.service_context\n+    );\n+  }\n+\n+  /** @inheritDoc */\n+  public String[] operation_context()\n+  {\n+    return ice_contexts();\n+  }\n+\n+  /**\n+   * Get contexts as required by interceptor.\n+   */\n+  public String[] ice_contexts()\n+  {\n+    if (m_context_list == null)\n+      return new String[ 0 ];\n+    else\n+      {\n+        try\n+          {\n+            String[] cn = new String[ m_context_list.count() ];\n+            for (int i = 0; i < cn.length; i++)\n+              cn [ i ] = m_context_list.item(i);\n+            return cn;\n+          }\n+        catch (Bounds e)\n+          {\n+            throw new Unexpected(e);\n+          }\n+      }\n+  }\n+\n+  /**\n+   * Check if the call is done via DII.\n+   */\n+  public void checkDii()\n+  {\n+    if (m_parameter_buffer != null)\n+      throw new NO_RESOURCES(\"The invocation method provides \" +\n+        \"no access to this resource. DII call required.\", 1,\n+        CompletionStatus.COMPLETED_MAYBE\n+      );\n+  }\n }\n\\ No newline at end of file"}, {"sha": "159d22332dc7051a61d6368f4da352a277d0114c", "filename": "libjava/classpath/gnu/CORBA/holderFactory.java", "status": "modified", "additions": 62, "deletions": 61, "changes": 123, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2FCORBA%2FholderFactory.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2FCORBA%2FholderFactory.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FholderFactory.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -68,74 +68,76 @@\n import org.omg.CORBA.WCharSeqHolder;\n import org.omg.CORBA.WStringSeqHolder;\n import org.omg.CORBA.portable.Streamable;\n+import org.omg.CORBA.ObjectHolder;\n \n /**\n- * Creates the suitable holder for storing the value of the given\n- * type.\n+ * Creates the suitable holder for storing the value of the given final_type.\n  *\n  * @author Audrius Meskauskas (AudriusA@Bioinformatics.org)\n  */\n public class holderFactory\n {\n   /**\n-   * The array, sufficiently large to use any {@link TCKind}._tk* constant\n-   * as an index.\n+   * The array, sufficiently large to use any {@link TCKind}._tk* constant as\n+   * an index.\n    */\n   private static final Class[] holders;\n+\n   private static final Class[] seqHolders;\n \n   static\n-  {\n-    holders = new Class[ 32 ];\n-    holders [ TCKind._tk_Principal ] = PrincipalHolder.class;\n-    holders [ TCKind._tk_TypeCode ] = TypeCodeHolder.class;\n-    holders [ TCKind._tk_any ] = AnyHolder.class;\n-    holders [ TCKind._tk_boolean ] = BooleanHolder.class;\n-    holders [ TCKind._tk_char ] = CharHolder.class;\n-    holders [ TCKind._tk_double ] = DoubleHolder.class;\n-    holders [ TCKind._tk_float ] = FloatHolder.class;\n-    holders [ TCKind._tk_fixed ] = FixedHolder.class;\n-    holders [ TCKind._tk_long ] = IntHolder.class;\n-    holders [ TCKind._tk_longdouble ] = DoubleHolder.class;\n-    holders [ TCKind._tk_longlong ] = LongHolder.class;\n-    holders [ TCKind._tk_octet ] = OctetHolder.class;\n-    holders [ TCKind._tk_short ] = ShortHolder.class;\n-    holders [ TCKind._tk_string ] = StringHolder.class;\n-    holders [ TCKind._tk_ulong ] = IntHolder.class;\n-    holders [ TCKind._tk_ulonglong ] = LongHolder.class;\n-    holders [ TCKind._tk_ushort ] = ShortHolder.class;\n-    holders [ TCKind._tk_wchar ] = WCharHolder.class;\n-    holders [ TCKind._tk_wstring ] = WStringHolder.class;\n-\n-    seqHolders = new Class[ 32 ];\n-\n-    seqHolders [ TCKind._tk_ulonglong ] = ULongLongSeqHolder.class;\n-    seqHolders [ TCKind._tk_short ] = ShortSeqHolder.class;\n-    seqHolders [ TCKind._tk_octet ] = OctetSeqHolder.class;\n-    seqHolders [ TCKind._tk_any ] = AnySeqHolder.class;\n-    seqHolders [ TCKind._tk_long ] = LongSeqHolder.class;\n-    seqHolders [ TCKind._tk_longlong ] = LongLongSeqHolder.class;\n-    seqHolders [ TCKind._tk_float ] = FloatSeqHolder.class;\n-    seqHolders [ TCKind._tk_double ] = DoubleSeqHolder.class;\n-    seqHolders [ TCKind._tk_char ] = CharSeqHolder.class;\n-    seqHolders [ TCKind._tk_boolean ] = BooleanSeqHolder.class;\n-    seqHolders [ TCKind._tk_wchar ] = WCharSeqHolder.class;\n-    seqHolders [ TCKind._tk_ushort ] = UShortSeqHolder.class;\n-    seqHolders [ TCKind._tk_ulong ] = ULongSeqHolder.class;\n-    seqHolders [ TCKind._tk_string ] = StringSeqHolder.class;\n-    seqHolders [ TCKind._tk_wstring ] = WStringSeqHolder.class;\n-  }\n+    {\n+      holders = new Class[32];\n+      holders[TCKind._tk_Principal] = PrincipalHolder.class;\n+      holders[TCKind._tk_TypeCode] = TypeCodeHolder.class;\n+      holders[TCKind._tk_any] = AnyHolder.class;\n+      holders[TCKind._tk_boolean] = BooleanHolder.class;\n+      holders[TCKind._tk_char] = CharHolder.class;\n+      holders[TCKind._tk_double] = DoubleHolder.class;\n+      holders[TCKind._tk_float] = FloatHolder.class;\n+      holders[TCKind._tk_fixed] = FixedHolder.class;\n+      holders[TCKind._tk_long] = IntHolder.class;\n+      holders[TCKind._tk_longdouble] = DoubleHolder.class;\n+      holders[TCKind._tk_longlong] = LongHolder.class;\n+      holders[TCKind._tk_octet] = OctetHolder.class;\n+      holders[TCKind._tk_short] = ShortHolder.class;\n+      holders[TCKind._tk_string] = StringHolder.class;\n+      holders[TCKind._tk_ulong] = IntHolder.class;\n+      holders[TCKind._tk_ulonglong] = LongHolder.class;\n+      holders[TCKind._tk_ushort] = ShortHolder.class;\n+      holders[TCKind._tk_wchar] = WCharHolder.class;\n+      holders[TCKind._tk_wstring] = WStringHolder.class;\n+      holders[TCKind._tk_objref] = ObjectHolder.class;\n+\n+      seqHolders = new Class[32];\n+\n+      seqHolders[TCKind._tk_ulonglong] = ULongLongSeqHolder.class;\n+      seqHolders[TCKind._tk_short] = ShortSeqHolder.class;\n+      seqHolders[TCKind._tk_octet] = OctetSeqHolder.class;\n+      seqHolders[TCKind._tk_any] = AnySeqHolder.class;\n+      seqHolders[TCKind._tk_long] = LongSeqHolder.class;\n+      seqHolders[TCKind._tk_longlong] = LongLongSeqHolder.class;\n+      seqHolders[TCKind._tk_float] = FloatSeqHolder.class;\n+      seqHolders[TCKind._tk_double] = DoubleSeqHolder.class;\n+      seqHolders[TCKind._tk_char] = CharSeqHolder.class;\n+      seqHolders[TCKind._tk_boolean] = BooleanSeqHolder.class;\n+      seqHolders[TCKind._tk_wchar] = WCharSeqHolder.class;\n+      seqHolders[TCKind._tk_ushort] = UShortSeqHolder.class;\n+      seqHolders[TCKind._tk_ulong] = ULongSeqHolder.class;\n+      seqHolders[TCKind._tk_string] = StringSeqHolder.class;\n+      seqHolders[TCKind._tk_wstring] = WStringSeqHolder.class;\n+    }\n \n   /**\n-   * Create a holder for storing the value of the given built-in type.\n-   * This function returns the defined holders for the built-in primitive\n-   * types and they sequences.\n+   * Create a holder for storing the value of the given built-in final_type. This\n+   * function returns the defined holders for the built-in primitive types and\n+   * they sequences.\n    *\n    * @param t the typecode\n    *\n-   * @return an instance of the corresponding built-in holder of null\n-   * if no such is defined for this type. The holder is created with a\n-   * parameterless constructor.\n+   * @return an instance of the corresponding built-in holder of null if no such\n+   * is defined for this final_type. The holder is created with a parameterless\n+   * constructor.\n    */\n   public static Streamable createHolder(TypeCode t)\n   {\n@@ -145,24 +147,23 @@ public static Streamable createHolder(TypeCode t)\n         int componentKind;\n \n         Streamable holder = null;\n-        Streamable component;\n \n-        if (kind < holders.length && holders [ kind ] != null)\n-          holder = (Streamable) holders [ kind ].newInstance();\n+        if (kind < holders.length && holders[kind] != null)\n+          holder = (Streamable) holders[kind].newInstance();\n \n         if (holder != null)\n           return holder;\n \n         switch (kind)\n           {\n-            case TCKind._tk_sequence :\n-              componentKind = t.content_type().kind().value();\n-              if (componentKind < seqHolders.length)\n-                return (Streamable) seqHolders [ componentKind ].newInstance();\n-              break;\n-\n-            default :\n-              break;\n+          case TCKind._tk_sequence:\n+            componentKind = t.content_type().kind().value();\n+            if (componentKind < seqHolders.length)\n+              return (Streamable) seqHolders[componentKind].newInstance();\n+            break;\n+\n+          default:\n+            break;\n           }\n       }\n     catch (Exception ex)"}, {"sha": "fc020bed788a494fb6eb0f239d51b59353ea7ded", "filename": "libjava/classpath/gnu/CORBA/primitiveArrayTypeCode.java", "status": "modified", "additions": 39, "deletions": 39, "changes": 78, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2FCORBA%2FprimitiveArrayTypeCode.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2FCORBA%2FprimitiveArrayTypeCode.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FprimitiveArrayTypeCode.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -1,39 +1,39 @@\n /* primitiveArrayTypeCode.java --\n-    Copyright (C) 2005 Free Software Foundation, Inc.\n-\n- This file is part of GNU Classpath.\n-\n- GNU Classpath is free software; you can redistribute it and/or modify\n- it under the terms of the GNU General Public License as published by\n- the Free Software Foundation; either version 2, or (at your option)\n- any later version.\n-\n- GNU Classpath is distributed in the hope that it will be useful, but\n- WITHOUT ANY WARRANTY; without even the implied warranty of\n- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n- General Public License for more details.\n-\n- You should have received a copy of the GNU General Public License\n- along with GNU Classpath; see the file COPYING.  If not, write to the\n- Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n- 02110-1301 USA.\n-\n- Linking this library statically or dynamically with other modules is\n- making a combined work based on this library.  Thus, the terms and\n- conditions of the GNU General Public License cover the whole\n- combination.\n-\n- As a special exception, the copyright holders of this library give you\n- permission to link this library with independent modules to produce an\n- executable, regardless of the license terms of these independent\n- modules, and to copy and distribute the resulting executable under\n- terms of your choice, provided that you also meet, for each linked\n- independent module, the terms and conditions of the license of that\n- module.  An independent module is a module which is not derived from\n- or based on this library.  If you modify this library, you may extend\n- this exception to your version of the library, but you are not\n- obligated to do so.  If you do not wish to do so, delete this\n- exception statement from your version. */\n+   Copyright (C) 2005 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n+02110-1301 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n \n \n package gnu.CORBA;\n@@ -61,10 +61,10 @@\n   private int length;\n \n   /**\n-   * Create a primitive array type code, defining the sequence \n-   * {@link TCKind.tk_sequence)} with \n+   * Create a primitive array type code, defining the sequence\n+   * {@link TCKind.tk_sequence)} with\n    * the given member type.\n-   * \n+   *\n    * @param array_of the sequence member type.\n    */\n   public primitiveArrayTypeCode(TCKind array_of)\n@@ -76,7 +76,7 @@ public primitiveArrayTypeCode(TCKind array_of)\n   /**\n    * Create a primitive array type code, defining the array, sequence\n    * or other type  with the given member type.\n-   * \n+   *\n    * @param this_type the type of this type (normally either\n    * sequence of array).\n    * @param array_of the sequence member type."}, {"sha": "4bf97d0230b7cfe30bf9535c0afd1a2bf35edd27", "filename": "libjava/classpath/gnu/CORBA/primitiveTypeCode.java", "status": "modified", "additions": 35, "deletions": 34, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2FCORBA%2FprimitiveTypeCode.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2FCORBA%2FprimitiveTypeCode.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FprimitiveTypeCode.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -1,40 +1,41 @@\n /* primitiveTypeCode.java --\n     Copyright (C) 2005 Free Software Foundation, Inc.\n \n- This file is part of GNU Classpath.\n-\n- GNU Classpath is free software; you can redistribute it and/or modify\n- it under the terms of the GNU General Public License as published by\n- the Free Software Foundation; either version 2, or (at your option)\n- any later version.\n-\n- GNU Classpath is distributed in the hope that it will be useful, but\n- WITHOUT ANY WARRANTY; without even the implied warranty of\n- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n- General Public License for more details.\n-\n- You should have received a copy of the GNU General Public License\n- along with GNU Classpath; see the file COPYING.  If not, write to the\n- Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n- 02110-1301 USA.\n-\n- Linking this library statically or dynamically with other modules is\n- making a combined work based on this library.  Thus, the terms and\n- conditions of the GNU General Public License cover the whole\n- combination.\n-\n- As a special exception, the copyright holders of this library give you\n- permission to link this library with independent modules to produce an\n- executable, regardless of the license terms of these independent\n- modules, and to copy and distribute the resulting executable under\n- terms of your choice, provided that you also meet, for each linked\n- independent module, the terms and conditions of the license of that\n- module.  An independent module is a module which is not derived from\n- or based on this library.  If you modify this library, you may extend\n- this exception to your version of the library, but you are not\n- obligated to do so.  If you do not wish to do so, delete this\n- exception statement from your version. */\n-\n+   Copyright (C) 2005 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n+02110-1301 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n \n package gnu.CORBA;\n "}, {"sha": "f790dc959702741d462c65037fa3c34cdf8e591d", "filename": "libjava/classpath/gnu/CORBA/typeNamer.java", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2FCORBA%2FtypeNamer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2FCORBA%2FtypeNamer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FtypeNamer.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -83,7 +83,7 @@\n       new primitiveTypeCode(TCKind.tk_any),\n       new primitiveTypeCode(TCKind.tk_TypeCode),\n       new primitiveTypeCode(TCKind.tk_Principal),\n-      new primitiveTypeCode(TCKind.tk_objref),\n+      new recordTypeCode(TCKind.tk_objref),\n       new primitiveTypeCode(TCKind.tk_struct),\n       new primitiveTypeCode(TCKind.tk_union),\n       new primitiveTypeCode(TCKind.tk_enum),\n@@ -104,6 +104,15 @@\n       new primitiveTypeCode(TCKind.tk_abstract_interface)\n     };\n \n+  static\n+  {\n+    // The Id of the \"abstract object\" is defined as empty string.\n+    recordTypeCode object =\n+      (recordTypeCode) primitveCodes [ TCKind._tk_objref ];\n+    object.setId(\"\");\n+    object.setName(\"Object\");\n+  }\n+\n   /**\n    * Get the primitive type code.\n    *\n@@ -168,4 +177,4 @@ else if (type.kind().value() == TCKind._tk_sequence)\n         return \"type of kind '\" + type.kind().value() + \"'\";\n       }\n   }\n-}\n+}\n\\ No newline at end of file"}, {"sha": "c20dac442ddc8c601dca69847584b889ca15d05c", "filename": "libjava/classpath/gnu/CORBA/universalHolder.java", "status": "modified", "additions": 20, "deletions": 3, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2FCORBA%2FuniversalHolder.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2FCORBA%2FuniversalHolder.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FuniversalHolder.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -60,7 +60,7 @@\n  *\n  * @author Audrius Meskauskas, Lithuania (AudriusA@Bioinformatics.org)\n  */\n-class universalHolder\n+public class universalHolder\n   implements Streamable\n {\n   /**\n@@ -71,7 +71,7 @@\n   /**\n    * Create the universal holder that uses the given buffer to store the data.\n    */\n-  universalHolder(cdrBufOutput buffer)\n+  public universalHolder(cdrBufOutput buffer)\n   {\n     value = buffer;\n   }\n@@ -154,4 +154,21 @@ InputStream getInputStream()\n   {\n     return value.create_input_stream();\n   }\n-}\n+\n+  /**\n+   * Clone.\n+   */\n+  public universalHolder Clone()\n+  {\n+    try\n+      {\n+        cdrBufOutput nb = new cdrBufOutput(value.buffer.size());\n+        value.buffer.writeTo(nb);\n+        return new universalHolder(nb);\n+      }\n+    catch (IOException ex)\n+      {\n+        throw new Unexpected(ex);\n+      }\n+  }\n+}\n\\ No newline at end of file"}, {"sha": "569ccf541ffa31e253d506a350db530f8298216b", "filename": "libjava/classpath/gnu/classpath/Configuration.java.in", "status": "modified", "additions": 0, "deletions": 27, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2Fclasspath%2FConfiguration.java.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2Fclasspath%2FConfiguration.java.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fclasspath%2FConfiguration.java.in?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -79,33 +79,6 @@ public interface Configuration\n    */\n   boolean INIT_LOAD_LIBRARY = @INIT_LOAD_LIBRARY@;\n \n-  /**\n-   * Set to true if the VM provides a native method to implement\n-   * Proxy.getProxyClass completely, including argument verification.\n-   * If this is true, HAVE_NATIVE_GET_PROXY_DATA and\n-   * HAVE_NATIVE_GENERATE_PROXY_CLASS should be false.\n-   * @see java.lang.reflect.Proxy\n-   */\n-  boolean HAVE_NATIVE_GET_PROXY_CLASS = false;\n-\n-  /**\n-   * Set to true if the VM provides a native method to implement\n-   * the first part of Proxy.getProxyClass: generation of the array\n-   * of methods to convert, and verification of the arguments.\n-   * If this is true, HAVE_NATIVE_GET_PROXY_CLASS should be false.\n-   * @see java.lang.reflect.Proxy\n-   */\n-  boolean HAVE_NATIVE_GET_PROXY_DATA = false;\n-\n-  /**\n-   * Set to true if the VM provides a native method to implement\n-   * the second part of Proxy.getProxyClass: conversion of an array of\n-   * methods into an actual proxy class.\n-   * If this is true, HAVE_NATIVE_GET_PROXY_CLASS should be false.\n-   * @see java.lang.reflect.Proxy\n-   */\n-  boolean HAVE_NATIVE_GENERATE_PROXY_CLASS = false;\n-\n   /**\n    * Name of default AWT peer library.\n    */"}, {"sha": "3ce97482c021b62c914abdcd10493d1ccf3fc1bb", "filename": "libjava/classpath/gnu/classpath/RawData.java", "status": "removed", "additions": 0, "deletions": 47, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b044d19517541c95681d35a92dbc81e6e21d94f/libjava%2Fclasspath%2Fgnu%2Fclasspath%2FRawData.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b044d19517541c95681d35a92dbc81e6e21d94f/libjava%2Fclasspath%2Fgnu%2Fclasspath%2FRawData.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fclasspath%2FRawData.java?ref=9b044d19517541c95681d35a92dbc81e6e21d94f", "patch": "@@ -1,47 +0,0 @@\n-/* RawData.java -- Pointer to VM specific data\n-   Copyright (C) 1999, 2000, 2004  Free Software Foundation\n-\n-This file is part of GNU Classpath.\n-\n-GNU Classpath is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU Classpath is distributed in the hope that it will be useful, but\n-WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n-General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU Classpath; see the file COPYING.  If not, write to the\n-Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n-02110-1301 USA.\n-\n-Linking this library statically or dynamically with other modules is\n-making a combined work based on this library.  Thus, the terms and\n-conditions of the GNU General Public License cover the whole\n-combination.\n-\n-As a special exception, the copyright holders of this library give you\n-permission to link this library with independent modules to produce an\n-executable, regardless of the license terms of these independent\n-modules, and to copy and distribute the resulting executable under\n-terms of your choice, provided that you also meet, for each linked\n-independent module, the terms and conditions of the license of that\n-module.  An independent module is a module which is not derived from\n-or based on this library.  If you modify this library, you may extend\n-this exception to your version of the library, but you are not\n-obligated to do so.  If you do not wish to do so, delete this\n-exception statement from your version. */\n-\n-/* This file is originally part of libgcj. */\n-\n-package gnu.classpath;\n-\n-/** A type used to indicate special data used by native code that should not \n-    be marked by the garbage collector. */\n-\n-public abstract class RawData\n-{\n-}"}, {"sha": "c77163152f23f4fe044b3062a817ff57a2e37522", "filename": "libjava/classpath/gnu/classpath/RawData32.java", "status": "removed", "additions": 0, "deletions": 52, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b044d19517541c95681d35a92dbc81e6e21d94f/libjava%2Fclasspath%2Fgnu%2Fclasspath%2FRawData32.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b044d19517541c95681d35a92dbc81e6e21d94f/libjava%2Fclasspath%2Fgnu%2Fclasspath%2FRawData32.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fclasspath%2FRawData32.java?ref=9b044d19517541c95681d35a92dbc81e6e21d94f", "patch": "@@ -1,52 +0,0 @@\n-/* RawData32.java -- 32 bit Pointer\n-   Copyright (C) 2004  Free Software Foundation\n-\n-This file is part of GNU Classpath.\n-\n-GNU Classpath is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU Classpath is distributed in the hope that it will be useful, but\n-WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n-General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU Classpath; see the file COPYING.  If not, write to the\n-Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n-02110-1301 USA.\n-\n-Linking this library statically or dynamically with other modules is\n-making a combined work based on this library.  Thus, the terms and\n-conditions of the GNU General Public License cover the whole\n-combination.\n-\n-As a special exception, the copyright holders of this library give you\n-permission to link this library with independent modules to produce an\n-executable, regardless of the license terms of these independent\n-modules, and to copy and distribute the resulting executable under\n-terms of your choice, provided that you also meet, for each linked\n-independent module, the terms and conditions of the license of that\n-module.  An independent module is a module which is not derived from\n-or based on this library.  If you modify this library, you may extend\n-this exception to your version of the library, but you are not\n-obligated to do so.  If you do not wish to do so, delete this\n-exception statement from your version. */\n-\n-package gnu.classpath;\n-\n-/**\n- * A type used to indicate special data used by native code that should not \n- * be marked by the garbage collector.\n- */\n-public final class RawData32 extends RawData\n-{\n-   final int data;\n-   \n-   public RawData32(int data)\n-   {\n-     this.data = data;\n-   }\n-}"}, {"sha": "e3b6a93e28e7bc53c41e87d43aa7a9aee3879f4d", "filename": "libjava/classpath/gnu/classpath/RawData64.java", "status": "removed", "additions": 0, "deletions": 52, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b044d19517541c95681d35a92dbc81e6e21d94f/libjava%2Fclasspath%2Fgnu%2Fclasspath%2FRawData64.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b044d19517541c95681d35a92dbc81e6e21d94f/libjava%2Fclasspath%2Fgnu%2Fclasspath%2FRawData64.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fclasspath%2FRawData64.java?ref=9b044d19517541c95681d35a92dbc81e6e21d94f", "patch": "@@ -1,52 +0,0 @@\n-/* RawData64.java -- 64 bit Pointer\n-   Copyright (C) 2004  Free Software Foundation\n-\n-This file is part of GNU Classpath.\n-\n-GNU Classpath is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU Classpath is distributed in the hope that it will be useful, but\n-WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n-General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU Classpath; see the file COPYING.  If not, write to the\n-Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n-02110-1301 USA.\n-\n-Linking this library statically or dynamically with other modules is\n-making a combined work based on this library.  Thus, the terms and\n-conditions of the GNU General Public License cover the whole\n-combination.\n-\n-As a special exception, the copyright holders of this library give you\n-permission to link this library with independent modules to produce an\n-executable, regardless of the license terms of these independent\n-modules, and to copy and distribute the resulting executable under\n-terms of your choice, provided that you also meet, for each linked\n-independent module, the terms and conditions of the license of that\n-module.  An independent module is a module which is not derived from\n-or based on this library.  If you modify this library, you may extend\n-this exception to your version of the library, but you are not\n-obligated to do so.  If you do not wish to do so, delete this\n-exception statement from your version. */\n-\n-package gnu.classpath;\n-\n-/**\n- * A type used to indicate special data used by native code that should not \n- * be marked by the garbage collector.\n- */\n-public final class RawData64 extends RawData\n-{\n-   final long data;\n-   \n-   public RawData64(long data)\n-   {\n-     this.data = data;\n-   }\n-}"}, {"sha": "242419ce4aea9a7a7c09176a1fc82d6b1ce70509", "filename": "libjava/classpath/gnu/classpath/debug/Component.java", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fdebug%2FComponent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fdebug%2FComponent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fdebug%2FComponent.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -110,6 +110,12 @@ public final class Component extends Level\n    */\n   public static final Component X509 = new Component (\"X.509\", 6);\n \n+  /**\n+   * Trace access control policies, including the parsing of\n+   * java.policy files.\n+   */\n+  public static final Component POLICY = new Component (\"POLICY\", 7);\n+\n   private final int startIndex;\n   private final int endIndex;\n "}, {"sha": "8b05e0446d2d04cc9b44a0497d6c978a3d0960b3", "filename": "libjava/classpath/gnu/classpath/jdwp/exception/InvalidThreadGroupException.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fexception%2FInvalidThreadGroupException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fexception%2FInvalidThreadGroupException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fexception%2FInvalidThreadGroupException.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -53,11 +53,11 @@\n   public InvalidThreadGroupException (long id)\n   {\n     super (JdwpConstants.Error.INVALID_THREAD_GROUP,\n-\t   \"invalid thread id (\" + id + \")\");\n+\t   \"invalid thread group id (\" + id + \")\");\n   }\n \n   public InvalidThreadGroupException (Throwable t)\n   {\n-    super (JdwpConstants.Error.INVALID_THREAD, t);\n+    super (JdwpConstants.Error.INVALID_THREAD_GROUP, t);\n   }\n }"}, {"sha": "3cf8592f47fef18c4d645afa951389afe1968469", "filename": "libjava/classpath/gnu/classpath/jdwp/exception/JdwpInternalErrorException.java", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fexception%2FJdwpInternalErrorException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fexception%2FJdwpInternalErrorException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fexception%2FJdwpInternalErrorException.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -50,8 +50,13 @@\n public class JdwpInternalErrorException\n   extends JdwpException\n {\n-  public JdwpInternalErrorException (Throwable cause)\n+  public JdwpInternalErrorException(Throwable cause)\n   {\n-    super (JdwpConstants.Error.INTERNAL, cause);\n+    super(JdwpConstants.Error.INTERNAL, cause);\n+  }\n+\n+  public JdwpInternalErrorException(String msg)\n+  {\n+    super(JdwpConstants.Error.INTERNAL, msg);\n   }\n }"}, {"sha": "37c4c365577cde7aa03a51c02b3eb79b19ff253c", "filename": "libjava/classpath/gnu/classpath/jdwp/id/ClassLoaderId.java", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fid%2FClassLoaderId.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fid%2FClassLoaderId.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fid%2FClassLoaderId.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -40,6 +40,7 @@\n package gnu.classpath.jdwp.id;\n \n import gnu.classpath.jdwp.JdwpConstants;\n+import gnu.classpath.jdwp.exception.InvalidClassLoaderException;\n \n /**\n  * A class which represents a JDWP thread id\n@@ -61,4 +62,21 @@ public ClassLoaderId ()\n   {\n     super (JdwpConstants.Tag.CLASS_LOADER);\n   }\n+\n+  /**\n+   * Gets the ClassLoader represented by this ID\n+   *\n+   * @throws InvalidClassLoaderException if ClassLoader is garbage collected,\n+   *           or otherwise invalid\n+   */\n+  public ClassLoader getClassLoader ()\n+    throws InvalidClassLoaderException\n+  {\n+    ClassLoader cl = (ClassLoader) _reference.get ();\n+\n+    if (cl == null)\n+      throw new InvalidClassLoaderException (getId ());\n+\n+    return cl;\n+  }\n }"}, {"sha": "3e164221281a5f91fb1d89d23ae7a3bced00b248", "filename": "libjava/classpath/gnu/classpath/jdwp/id/ClassObjectId.java", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fid%2FClassObjectId.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fid%2FClassObjectId.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fid%2FClassObjectId.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -40,6 +40,7 @@\n package gnu.classpath.jdwp.id;\n \n import gnu.classpath.jdwp.JdwpConstants;\n+import gnu.classpath.jdwp.exception.InvalidClassException;\n \n /**\n  * A class which represents a JDWP class object id\n@@ -61,4 +62,21 @@ public ClassObjectId ()\n   {\n     super (JdwpConstants.Tag.CLASS_OBJECT);\n   }\n+\n+  /**\n+   * Gets the Class object represented by this ID\n+   *\n+   * @throws InvalidClassException if Class is garbage collected,\n+   *           or otherwise invalid\n+   */\n+  public Class getClassObject ()\n+    throws InvalidClassException\n+  {\n+    Class cl = (Class) _reference.get ();\n+\n+    if (cl == null)\n+      throw new InvalidClassException (getId ());\n+\n+    return cl;\n+  }\n }"}, {"sha": "7f610e353a161047f834361d629ad4c13972b320", "filename": "libjava/classpath/gnu/classpath/jdwp/id/JdwpId.java", "status": "modified", "additions": 29, "deletions": 5, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fid%2FJdwpId.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fid%2FJdwpId.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fid%2FJdwpId.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -41,6 +41,7 @@\n \n import java.io.DataOutputStream;\n import java.io.IOException;\n+import java.lang.ref.SoftReference;\n \n /**\n  * A baseclass for all object types reported to the debugger\n@@ -61,6 +62,11 @@\n    */\n   private byte _tag;\n \n+  /**\n+   * The object/class represented by this Id\n+   */\n+  protected SoftReference _reference;\n+\n   /**\n    * Constructs an empty <code>JdwpId</code>\n    */\n@@ -72,7 +78,7 @@ public JdwpId (byte tag)\n   /**\n    * Sets the id for this object reference\n    */\n-  void setId (long id)\n+  public void setId (long id)\n   {\n     _id = id;\n   }\n@@ -85,16 +91,34 @@ public long getId ()\n     return _id;\n   }\n \n+  /**\n+   * Gets the object/class reference for this ID\n+   *\n+   * @returns a refernce to the object or class\n+   */\n+  public SoftReference getReference ()\n+  {\n+    return _reference;\n+  }\n+\n+  /**\n+   * Sets the object/class reference for this ID\n+   *\n+   * @param ref a refernce to the object or class\n+   */\n+  public void setReference (SoftReference ref)\n+  {\n+    _reference = ref;\n+  }\n+\n   /**\n    * Compares two object ids for equality. Two object ids\n    * are equal if they point to the same type and contain to\n-   * the same id number. (NOTE: This is a much stricter check\n-   * than is necessary: all <code>JdwpId</code>s have unique\n-   * ids.)\n+   * the same id number. \n    */\n   public boolean equals (JdwpId id)\n   {\n-    return ((id.getClass () == getClass ()) && (id.getId () == getId ()));\n+    return (id.getId () == getId ());\n   }\n \n   /**"}, {"sha": "06ec3c7681f9ab7708b92edb4a65b2088401e6c4", "filename": "libjava/classpath/gnu/classpath/jdwp/id/JdwpIdFactory.java", "status": "removed", "additions": 0, "deletions": 165, "changes": 165, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b044d19517541c95681d35a92dbc81e6e21d94f/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fid%2FJdwpIdFactory.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b044d19517541c95681d35a92dbc81e6e21d94f/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fid%2FJdwpIdFactory.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fid%2FJdwpIdFactory.java?ref=9b044d19517541c95681d35a92dbc81e6e21d94f", "patch": "@@ -1,165 +0,0 @@\n-/* JdwpIdFactory.java -- factory for generating type and object IDs\n-   Copyright (C) 2005 Free Software Foundation\n-\n-This file is part of GNU Classpath.\n-\n-GNU Classpath is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU Classpath is distributed in the hope that it will be useful, but\n-WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n-General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU Classpath; see the file COPYING.  If not, write to the\n-Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n-02110-1301 USA.\n-\n-Linking this library statically or dynamically with other modules is\n-making a combined work based on this library.  Thus, the terms and\n-conditions of the GNU General Public License cover the whole\n-combination.\n-\n-As a special exception, the copyright holders of this library give you\n-permission to link this library with independent modules to produce an\n-executable, regardless of the license terms of these independent\n-modules, and to copy and distribute the resulting executable under\n-terms of your choice, provided that you also meet, for each linked\n-terms of your choice, provided that you also meet, for each linked\n-independent module, the terms and conditions of the license of that\n-module.  An independent module is a module which is not derived from\n-or based on this library.  If you modify this library, you may extend\n-this exception to your version of the library, but you are not\n-obligated to do so.  If you do not wish to do so, delete this\n-exception statement from your version. */\n-\n-\n-package gnu.classpath.jdwp.id;\n-\n-import java.util.HashMap;\n-\n-/**\n- * This factory generates ids for objects and types that may\n- * be sent to a debugger.\n- *\n- * @author Keith Seitz  (keiths@redhat.com)\n- */\n-public class JdwpIdFactory\n-{\n-  // ID of last object / referencetype\n-  private static Object _idLock = new Object ();\n-  private static Object _ridLock = new Object ();\n-  private static long _lastId = 0;\n-  private static long _lastRid = 0;\n-\n-  // A list of all ID types\n-  private static HashMap _idList = new HashMap ();\n-\n-  // Initialize the id list with known types\n-  static\n-  {\n-    // ObjectId and ArrayId are special cases. See newId.\n-    _idList.put (ClassLoaderId.typeClass, ClassLoaderId.class);\n-    _idList.put (ClassObjectId.typeClass, ClassObjectId.class);\n-    //_idList.put (FieldId.typeClass, FieldId.class);\n-    //_idList.put (FrameId.typeClass, FrameId.class);\n-    //_idList.put (MethodId.typeClass, MethodId.class);\n-    _idList.put (StringId.typeClass, StringId.class);\n-    _idList.put (ThreadId.typeClass, ThreadId.class);\n-    _idList.put (ThreadGroupId.typeClass, ThreadGroupId.class);\n-  }\n-\n-  /**\n-   * Returns a new id for the given object\n-   *\n-   * @param object  the object for which an id is desired\n-   * @returns a suitable object id\n-   */\n-  public static JdwpId newId (Object object)\n-  {\n-    JdwpId id = null;\n-    \n-    // Special case: arrays\n-    if (object.getClass ().isArray ())\n-\tid = new ArrayId ();\n-    else\n-      {\n-\t// Loop through all classes until we hit baseclass\n-\tClass myClass;\n-\tfor (myClass = object.getClass (); myClass != null;\n-\t     myClass = myClass.getSuperclass ())\n-\t  {\n-\t    Class clz = (Class) _idList.get (myClass);\n-\t    if (clz != null)\n-\t      {\n-\t\ttry\n-\t\t  {\n-\t\t    id = (JdwpId) clz.newInstance ();\n-\t\t    synchronized (_idLock)\n-\t\t      {\n-\t\t\tid.setId (++_lastId);\n-\t\t      }\n-\t\t    return id;\n-\t\t  }\n-\t\tcatch (InstantiationException ie)\n-\t\t  {\n-\t\t    // This really should not happen\n-\t\t    throw new RuntimeException (\"cannot create new ID\", ie);\n-\t\t  }\n-\t\tcatch (IllegalAccessException iae)\n-\t\t  {\n-\t\t    // This really should not happen\n-\t\t    throw new RuntimeException (\"illegal access of ID\", iae);\n-\t\t  }\n-\t      }\n-\t  }\n-\n-\t/* getSuperclass returned null and no matching ID type found.\n-\t   So it must derive from Object. */\n-\tid = new ObjectId ();\n-      }\n-\n-    synchronized (_idLock)\n-      {\n-\tid.setId (++_lastId);\n-      }\n-\n-    return id;\n-  }\n-\n-  /**\n-   * Returns a new reference type id for the given class\n-   *\n-   * @param clazz  the <code>Class</code> for which an id is desired\n-   * @returns a suitable reference type id or <code>null</code>\n-   */\n-  public static ReferenceTypeId newReferenceTypeId (Class clazz)\n-  {\n-    ReferenceTypeId id = null;\n-    try\n-      {\n-\tif (clazz.isArray ())\n-\t  id = new ArrayReferenceTypeId ();\n-\telse if (clazz.isInterface ())\n-\t  id = new InterfaceReferenceTypeId ();\n-\telse\n-\t  id = new ClassReferenceTypeId ();\n-\tsynchronized (_ridLock)\n-\t  {\n-\t    id.setId (++_lastRid);\n-\t  }\n-\treturn id;\n-      }\n-    catch (InstantiationException ie)\n-      {\n-\treturn null;\n-      }\n-    catch (IllegalAccessException iae)\n-      {\n-\treturn null;\n-      }\n-  }\n-}"}, {"sha": "3e2abd4f630bf56d51a31742ca5fd86cdc7d49d8", "filename": "libjava/classpath/gnu/classpath/jdwp/id/ObjectId.java", "status": "modified", "additions": 41, "deletions": 1, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fid%2FObjectId.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fid%2FObjectId.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fid%2FObjectId.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -40,12 +40,15 @@\n package gnu.classpath.jdwp.id;\n \n import gnu.classpath.jdwp.JdwpConstants;\n+import gnu.classpath.jdwp.exception.InvalidObjectException;\n \n import java.io.DataOutputStream;\n import java.io.IOException;\n \n /**\n- * A class which represents a JDWP object id for an object\n+ * This is a base class for all ObjectID-like entities in JDWP,\n+ * inculding Objects, ClassObject, ClassLoader, Thread, ThreadGroup,\n+ * etc.\n  *\n  * @author Keith Seitz  <keiths@redhat.com>\n  */\n@@ -57,6 +60,9 @@\n    */\n   public static final Class typeClass = Object.class;\n \n+  // Handle to disable garbage collection\n+  private Object _handle;\n+\n   /**\n    * Constructs a new <code>ObjectId</code>\n    */\n@@ -84,6 +90,23 @@ public int size ()\n     return 8;\n   }\n \n+  /**\n+   * Returns the object referred to by this ID\n+   *\n+   * @returns the object\n+   * @throws InvalidObjectException if the object was garbage collected\n+   *           or is invalid\n+   */\n+  public Object getObject ()\n+    throws InvalidObjectException\n+  {\n+    Object obj = _reference.get ();\n+    if (obj == null)\n+      throw new InvalidObjectException (_id);\n+\n+    return obj;\n+  }\n+\n   /**\n    * Writes the id to the stream\n    *\n@@ -96,4 +119,21 @@ public void write (DataOutputStream outStream)\n     // All we need to do is write out our id as an 8-byte integer\n     outStream.writeLong (_id);\n   }\n+\n+  /**\n+   * Disable garbage collection on object\n+   */\n+  public void disableCollection ()\n+    throws InvalidObjectException\n+  {\n+    _handle = getObject ();\n+  }\n+\n+  /**\n+   * Enable garbage collection on object\n+   */\n+  public void enableCollection ()\n+  {\n+    _handle = null;\n+  }\n }"}, {"sha": "e7a5d2c3d835c87c6e905334476318fe45502b07", "filename": "libjava/classpath/gnu/classpath/jdwp/id/ReferenceTypeId.java", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fid%2FReferenceTypeId.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fid%2FReferenceTypeId.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fid%2FReferenceTypeId.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -39,6 +39,8 @@\n \n package gnu.classpath.jdwp.id;\n \n+import gnu.classpath.jdwp.exception.InvalidClassException;\n+\n import java.io.DataOutputStream;\n import java.io.IOException;\n \n@@ -67,6 +69,22 @@ public int size ()\n     return 8;\n   }\n \n+  /**\n+   * Gets the class associated with this ID\n+   *\n+   * @returns the class\n+   * @throws InvalidClassException if the class is not valid\n+   */\n+  public Class getType ()\n+    throws InvalidClassException\n+  {\n+    Class clazz = (Class) _reference.get ();\n+    if (clazz == null)\n+      throw new InvalidClassException (_id);\n+\n+    return clazz;\n+  }\n+\n   /**\n    * Outputs the reference type ID to the given output stream\n    *"}, {"sha": "1ba8f6d4d015fc00a76a0272a48db8918f49e7db", "filename": "libjava/classpath/gnu/classpath/jdwp/id/StringId.java", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fid%2FStringId.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fid%2FStringId.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fid%2FStringId.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -40,6 +40,7 @@\n package gnu.classpath.jdwp.id;\n \n import gnu.classpath.jdwp.JdwpConstants;\n+import gnu.classpath.jdwp.exception.InvalidStringException;\n \n /**\n  * A class which represents a JDWP string id\n@@ -61,4 +62,21 @@ public StringId ()\n   {\n     super (JdwpConstants.Tag.STRING);\n   }\n+\n+  /**\n+   * Gets the String represented by this ID\n+   *\n+   * @throws InvalidStringException if String is garbage collected,\n+   *           or otherwise invalid\n+   */\n+  public String getString ()\n+    throws InvalidStringException\n+  {\n+    String string = (String) _reference.get ();\n+\n+    if (string == null)\n+      throw new InvalidStringException (getId ());\n+\n+    return string;\n+  }\n }"}, {"sha": "f4d9d803d1efde03c9e6fd26698d5b7872c0e9af", "filename": "libjava/classpath/gnu/classpath/jdwp/id/ThreadGroupId.java", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fid%2FThreadGroupId.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fid%2FThreadGroupId.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fid%2FThreadGroupId.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -40,6 +40,7 @@\n package gnu.classpath.jdwp.id;\n \n import gnu.classpath.jdwp.JdwpConstants;\n+import gnu.classpath.jdwp.exception.InvalidThreadGroupException;\n \n /**\n  * A class which represents a JDWP thread group id\n@@ -61,4 +62,21 @@ public ThreadGroupId ()\n   {\n     super (JdwpConstants.Tag.THREAD_GROUP);\n   }\n+\n+  /**\n+   * Gets the thread group represented by this ID\n+   *\n+   * @throws InvalidThreadGroupException if the group is invalid\n+   *           or garbage collected\n+   */\n+  public ThreadGroup getThreadGroup ()\n+    throws InvalidThreadGroupException\n+  {\n+    ThreadGroup group = (ThreadGroup) _reference.get ();\n+\n+    if (group == null)\n+      throw new InvalidThreadGroupException (getId ());\n+\n+    return group;\n+  }\n }"}, {"sha": "207d6b0a1f161a14445b269bbc516e799aab935f", "filename": "libjava/classpath/gnu/classpath/jdwp/id/ThreadId.java", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fid%2FThreadId.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fid%2FThreadId.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fid%2FThreadId.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -40,6 +40,7 @@\n package gnu.classpath.jdwp.id;\n \n import gnu.classpath.jdwp.JdwpConstants;\n+import gnu.classpath.jdwp.exception.InvalidThreadException;\n \n /**\n  * A class which represents a JDWP thread id\n@@ -61,4 +62,24 @@ public ThreadId ()\n   {\n     super (JdwpConstants.Tag.THREAD);\n   }\n+\n+  /**\n+   * Gets the Thread represented by this ID\n+   *\n+   * @throws InvalidThreadException if thread is garbage collected,\n+   *           exited, or otherwise invalid\n+   */\n+  public Thread getThread ()\n+    throws InvalidThreadException\n+  {\n+    Thread thread = (Thread) _reference.get ();\n+\n+    /* Spec says if thread is null, not valid, or exited,\n+       throw invalid thread */\n+    // FIXME: not valid? exited? Is this check valid?\n+    if (thread == null || !thread.isAlive ())\n+      throw new InvalidThreadException (getId ());\n+\n+    return thread;\n+  }\n }"}, {"sha": "d3a27532b393f4de1aec2e0139547b18d39afe37", "filename": "libjava/classpath/gnu/classpath/jdwp/processor/CommandSet.java", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fprocessor%2FCommandSet.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fprocessor%2FCommandSet.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fprocessor%2FCommandSet.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -15,8 +15,8 @@\n \n You should have received a copy of the GNU General Public License\n along with GNU Classpath; see the file COPYING.  If not, write to the\n-Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n-02111-1307 USA.\n+Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n+02110-1301 USA.\n \n Linking this library statically or dynamically with other modules is\n making a combined work based on this library.  Thus, the terms and\n@@ -40,6 +40,7 @@\n package gnu.classpath.jdwp.processor;\n \n import gnu.classpath.jdwp.exception.JdwpException;\n+import gnu.classpath.jdwp.VMIdManager;\n \n import java.io.DataOutputStream;\n import java.nio.ByteBuffer;\n@@ -50,8 +51,13 @@\n  *\n  * @author Aaron Luchko <aluchko@redhat.com>\n  */\n-public interface CommandSet\n+public abstract class CommandSet\n {\n+  /**\n+   * The VM's ID manager\n+   */\n+  protected final VMIdManager idMan = VMIdManager.getDefault ();\n+\n   /**\n    * Runs the given command with the data in distr and writes the data for the\n    * reply packet to ostr.\n@@ -62,7 +68,7 @@\n    * @return true if the JDWP layer should shut down in response to this packet\n    * @throws JdwpException command wasn't carried out successfully\n    */\n-  public boolean runCommand(ByteBuffer bb, DataOutputStream os,\n-                            byte command) \n+  public abstract boolean runCommand(ByteBuffer bb, DataOutputStream os,\n+\t\t\t\t     byte command) \n     throws JdwpException;\n }"}, {"sha": "090770038ad396f47e7b0c5f3d548c1d01b1cd3e", "filename": "libjava/classpath/gnu/classpath/jdwp/processor/FieldCommandSet.java", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fprocessor%2FFieldCommandSet.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fprocessor%2FFieldCommandSet.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fprocessor%2FFieldCommandSet.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -49,7 +49,8 @@\n  * \n  * @author Aaron Luchko <aluchko@redhat.com>\n  */\n-public class FieldCommandSet implements CommandSet\n+public class FieldCommandSet\n+  extends CommandSet\n {\n   /**\n    * There are no commands for this CommandSet at this time so we just throw a"}, {"sha": "5b29182ecb686942b173f5fe8928153dbba081bb", "filename": "libjava/classpath/gnu/classpath/jdwp/processor/InterfaceTypeCommandSet.java", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fprocessor%2FInterfaceTypeCommandSet.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fprocessor%2FInterfaceTypeCommandSet.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fprocessor%2FInterfaceTypeCommandSet.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -50,7 +50,8 @@\n  * \n  * @author Aaron Luchko <aluchko@redhat.com>\n  */\n-public class InterfaceTypeCommandSet implements CommandSet\n+public class InterfaceTypeCommandSet\n+  extends CommandSet\n {\n   /**\n    * There are no commands for this CommandSet at this time so we just throw a"}, {"sha": "23a64c341e60558f5052b47808210f6c6f3e776d", "filename": "libjava/classpath/gnu/classpath/jdwp/processor/ObjectReferenceCommandSet.java", "status": "modified", "additions": 59, "deletions": 45, "changes": 104, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fprocessor%2FObjectReferenceCommandSet.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fprocessor%2FObjectReferenceCommandSet.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fprocessor%2FObjectReferenceCommandSet.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -1,4 +1,4 @@\n-/* ObjectReferenceCommandSet.java -- lass to implement the ObjectReference\n+/* ObjectReferenceCommandSet.java -- class to implement the ObjectReference\n    Command Set\n    Copyright (C) 2005 Free Software Foundation\n \n@@ -36,20 +36,19 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n+\n package gnu.classpath.jdwp.processor;\n \n-import gnu.classpath.jdwp.IVirtualMachine;\n-import gnu.classpath.jdwp.Jdwp;\n import gnu.classpath.jdwp.JdwpConstants;\n+import gnu.classpath.jdwp.VMVirtualMachine;\n import gnu.classpath.jdwp.exception.InvalidFieldException;\n import gnu.classpath.jdwp.exception.JdwpException;\n import gnu.classpath.jdwp.exception.JdwpInternalErrorException;\n import gnu.classpath.jdwp.exception.NotImplementedException;\n-import gnu.classpath.jdwp.id.IdManager;\n import gnu.classpath.jdwp.id.ObjectId;\n import gnu.classpath.jdwp.id.ReferenceTypeId;\n import gnu.classpath.jdwp.util.Value;\n-import gnu.classpath.jdwp.util.MethodInvoker;\n+import gnu.classpath.jdwp.util.MethodResult;\n \n import java.io.DataOutputStream;\n import java.io.IOException;\n@@ -62,14 +61,9 @@\n  * \n  * @author Aaron Luchko <aluchko@redhat.com>\n  */\n-public class ObjectReferenceCommandSet implements CommandSet\n+public class ObjectReferenceCommandSet\n+  extends CommandSet\n {\n-  // Our hook into the jvm\n-  private final IVirtualMachine vm = Jdwp.getIVirtualMachine();\n-\n-  // Manages all the different ids that are assigned by jdwp\n-  private final IdManager idMan = Jdwp.getIdManager();\n-\n   public boolean runCommand(ByteBuffer bb, DataOutputStream os, byte command)\n     throws JdwpException\n   {\n@@ -103,7 +97,7 @@ public boolean runCommand(ByteBuffer bb, DataOutputStream os, byte command)\n             break;\n           default:\n             throw new NotImplementedException(\"Command \" + command +\n-              \" not found in String Reference Command Set.\");\n+              \" not found in ObjectReference Command Set.\");\n           }\n       }\n     catch (IOException ex)\n@@ -118,7 +112,7 @@ public boolean runCommand(ByteBuffer bb, DataOutputStream os, byte command)\n   private void executeReferenceType(ByteBuffer bb, DataOutputStream os)\n     throws JdwpException, IOException\n   {\n-    ObjectId oid = idMan.readId(bb);\n+    ObjectId oid = idMan.readObjectId(bb);\n     Object obj = oid.getObject();\n     Class clazz = obj.getClass();\n     ReferenceTypeId refId = idMan.getReferenceTypeId(clazz);\n@@ -128,7 +122,7 @@ private void executeReferenceType(ByteBuffer bb, DataOutputStream os)\n   private void executeGetValues(ByteBuffer bb, DataOutputStream os)\n     throws JdwpException, IOException\n   {\n-    ObjectId oid = idMan.readId(bb);\n+    ObjectId oid = idMan.readObjectId(bb);\n     Object obj = oid.getObject();\n \n     int numFields = bb.getInt();\n@@ -137,25 +131,41 @@ private void executeGetValues(ByteBuffer bb, DataOutputStream os)\n \n     for (int i = 0; i < numFields; i++)\n       {\n-        Field field = (Field) idMan.readId(bb).getObject();\n-        Value.writeValueFromField(os, field, obj);\n+        Field field = (Field) idMan.readObjectId(bb).getObject();\n+        try\n+          {\n+            field.setAccessible(true); // Might be a private field\n+            Object value = field.get(obj);\n+            Value.writeTaggedValue(os, value);\n+          }\n+        catch (IllegalArgumentException ex)\n+          {\n+            // I suppose this would best qualify as an invalid field then\n+            throw new InvalidFieldException(ex);\n+          }\n+        catch (IllegalAccessException ex)\n+          {\n+            // Since we set it as accessible this really shouldn't happen\n+            throw new JdwpInternalErrorException(ex);\n+          }\n       }\n   }\n \n   private void executeSetValues(ByteBuffer bb, DataOutputStream os)\n     throws JdwpException, IOException\n   {\n-    ObjectId oid = idMan.readId(bb);\n+    ObjectId oid = idMan.readObjectId(bb);\n     Object obj = oid.getObject();\n \n     int numFields = bb.getInt();\n \n     for (int i = 0; i < numFields; i++)\n       {\n-        Field field = (Field) idMan.readId(bb).getObject();\n-        Object value = Value.getObj(bb, field);\n+        Field field = (Field) idMan.readObjectId(bb).getObject();\n+        Object value = Value.getUntaggedObj(bb, field.getType());\n         try\n           {\n+            field.setAccessible(true); // Might be a private field\n             field.set(obj, value);\n           }\n         catch (IllegalArgumentException ex)\n@@ -165,7 +175,7 @@ private void executeSetValues(ByteBuffer bb, DataOutputStream os)\n           }\n         catch (IllegalAccessException ex)\n           {\n-            // We should be able to access any field\n+            // Since we set it as accessible this really shouldn't happen\n             throw new JdwpInternalErrorException(ex);\n           }\n       }\n@@ -184,16 +194,16 @@ private void executeMonitorInfo(ByteBuffer bb, DataOutputStream os)\n   private void executeInvokeMethod(ByteBuffer bb, DataOutputStream os)\n     throws JdwpException, IOException\n   {\n-    ObjectId oid = idMan.readId(bb);\n+    ObjectId oid = idMan.readObjectId(bb);\n     Object obj = oid.getObject();\n \n-    ObjectId tid = idMan.readId(bb);\n+    ObjectId tid = idMan.readObjectId(bb);\n     Thread thread = (Thread) tid.getObject();\n \n     ReferenceTypeId rid = idMan.readReferenceTypeId(bb);\n     Class clazz = rid.getType();\n \n-    ObjectId mid = idMan.readId(bb);\n+    ObjectId mid = idMan.readObjectId(bb);\n     Method method = (Method) mid.getObject();\n \n     int args = bb.getInt();\n@@ -205,45 +215,49 @@ private void executeInvokeMethod(ByteBuffer bb, DataOutputStream os)\n       }\n \n     int invokeOptions = bb.getInt();\n-\n-    if ((invokeOptions & JdwpConstants.InvokeOptions.INVOKE_SINGLE_THREADED) != 0)\n-      { // We must suspend all other running threads first\n-        vm.suspendAllThreads();\n+    boolean suspend = ((invokeOptions\n+\t\t\t& JdwpConstants.InvokeOptions.INVOKE_SINGLE_THREADED)\n+\t\t       != 0);\n+    if (suspend)\n+      {\n+\t// We must suspend all other running threads first\n+        VMVirtualMachine.suspendAllThreads ();\n       }\n-    boolean nonVirtual;\n-    if ((invokeOptions & JdwpConstants.InvokeOptions.INVOKE_NONVIRTUAL) != 0)\n-      nonVirtual = true;\n-    else\n-      nonVirtual = false;\n-    MethodInvoker vmi = new MethodInvoker(vm);\n-\n-    vmi.executeMethod(obj, thread, clazz, method, values, nonVirtual);\n-    Object value = vmi.getReturnedValue();\n-    ObjectId exceptionId = vmi.getExceptionId();\n-    \n-    Value.writeValue(os, value);\n-    exceptionId.writeTagged(os);\n+\n+    boolean nonVirtual = ((invokeOptions\n+\t\t\t   & JdwpConstants.InvokeOptions.INVOKE_NONVIRTUAL)\n+\t\t\t  != 0);\n+\n+    MethodResult mr = VMVirtualMachine.executeMethod(obj, thread,\n+\t\t\t\t\t\t     clazz, method,\n+\t\t\t\t\t\t     values, nonVirtual);\n+    Object value = mr.getReturnedValue();\n+    Exception exception = mr.getThrownException();\n+\n+    ObjectId eId = idMan.getObjectId(exception);\n+    Value.writeTaggedValue(os, value);\n+    eId.writeTagged(os);\n   }\n \n   private void executeDisableCollection(ByteBuffer bb, DataOutputStream os)\n     throws JdwpException, IOException\n   {\n-    ObjectId oid = idMan.readId(bb);\n+    ObjectId oid = idMan.readObjectId(bb);\n     oid.disableCollection();\n   }\n \n   private void executeEnableCollection(ByteBuffer bb, DataOutputStream os)\n     throws JdwpException, IOException\n   {\n-    ObjectId oid = idMan.readId(bb);\n+    ObjectId oid = idMan.readObjectId(bb);\n     oid.enableCollection();\n   }\n \n   private void executeIsCollected(ByteBuffer bb, DataOutputStream os)\n     throws JdwpException, IOException\n   {\n-    ObjectId oid = idMan.readId(bb);\n-    boolean collected = oid.isCollected();\n+    ObjectId oid = idMan.readObjectId(bb);\n+    boolean collected = (oid.getReference().get () == null);\n     os.writeBoolean(collected);\n   }\n }"}, {"sha": "9e281f217f2976896c4ebd10fb02dd1a487d4ca3", "filename": "libjava/classpath/gnu/classpath/jdwp/processor/PacketProcessor.java", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fprocessor%2FPacketProcessor.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fprocessor%2FPacketProcessor.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fprocessor%2FPacketProcessor.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -52,6 +52,7 @@\n import java.io.DataOutputStream;\n import java.io.IOException;\n import java.nio.ByteBuffer;\n+import java.security.PrivilegedAction;\n \n /**\n  * This class is responsible for processing packets from the\n@@ -62,7 +63,7 @@\n  * @author Keith Seitz (keiths@redhat.com)\n  */\n public class PacketProcessor\n-  extends Thread\n+  implements PrivilegedAction\n {\n   // The connection to the debugger\n   private JdwpConnection _connection;\n@@ -134,7 +135,7 @@ public PacketProcessor (JdwpConnection con)\n    * Main run routine for this thread. Will loop getting packets\n    * from the connection and processing them.\n    */\n-  public void run ()\n+  public Object run ()\n   {\n     try\n       {\n@@ -149,6 +150,7 @@ public void run ()\n       }\n     // Time to shutdown, tell Jdwp to shutdown\n     Jdwp.getDefault().shutdown();\n+    return null;\n   }\n   \n   /**\n@@ -157,7 +159,6 @@ public void run ()\n   public void shutdown ()\n   {\n     _shutdown = true;\n-    interrupt ();\n   }\n   \n   // Helper function which actually does all the work of waiting"}, {"sha": "b9944f7d9a08eb6152b2a684450871df55d5ce8b", "filename": "libjava/classpath/gnu/classpath/jdwp/processor/ReferenceTypeCommandSet.java", "status": "modified", "additions": 31, "deletions": 20, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fprocessor%2FReferenceTypeCommandSet.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fprocessor%2FReferenceTypeCommandSet.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fprocessor%2FReferenceTypeCommandSet.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -1,4 +1,4 @@\n-/* ReferenceTypeCommandSet.java -- lass to implement the ReferenceType\n+/* ReferenceTypeCommandSet.java -- class to implement the ReferenceType\n    Command Set\n    Copyright (C) 2005 Free Software Foundation\n \n@@ -36,16 +36,15 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n+\n package gnu.classpath.jdwp.processor;\n \n-import gnu.classpath.jdwp.IVirtualMachine;\n-import gnu.classpath.jdwp.Jdwp;\n import gnu.classpath.jdwp.JdwpConstants;\n+import gnu.classpath.jdwp.VMVirtualMachine;\n import gnu.classpath.jdwp.exception.InvalidFieldException;\n import gnu.classpath.jdwp.exception.JdwpException;\n import gnu.classpath.jdwp.exception.JdwpInternalErrorException;\n import gnu.classpath.jdwp.exception.NotImplementedException;\n-import gnu.classpath.jdwp.id.IdManager;\n import gnu.classpath.jdwp.id.ObjectId;\n import gnu.classpath.jdwp.id.ReferenceTypeId;\n import gnu.classpath.jdwp.util.JdwpString;\n@@ -63,14 +62,9 @@\n  * \n  * @author Aaron Luchko <aluchko@redhat.com>\n  */\n-public class ReferenceTypeCommandSet implements CommandSet\n+public class ReferenceTypeCommandSet\n+  extends CommandSet\n {\n-  // Our hook into the jvm\n-  private final IVirtualMachine vm = Jdwp.getIVirtualMachine();\n-\n-  // Manages all the different ids that are assigned by jdwp\n-  private final IdManager idMan = Jdwp.getIdManager();\n-\n   public boolean runCommand(ByteBuffer bb, DataOutputStream os, byte command)\n     throws JdwpException\n   {\n@@ -125,7 +119,7 @@ public boolean runCommand(ByteBuffer bb, DataOutputStream os, byte command)\n             break;\n           default:\n             throw new NotImplementedException(\"Command \" + command +\n-              \" not found in String Reference Command Set.\");\n+              \" not found in ReferenceType Command Set.\");\n           }\n       }\n     catch (IOException ex)\n@@ -152,7 +146,7 @@ private void executeClassLoader(ByteBuffer bb, DataOutputStream os)\n \n     Class clazz = refId.getType();\n     ClassLoader loader = clazz.getClassLoader();\n-    ObjectId oid = idMan.getId(loader);\n+    ObjectId oid = idMan.getObjectId(loader);\n     oid.write(os);\n   }\n \n@@ -176,7 +170,7 @@ private void executeFields(ByteBuffer bb, DataOutputStream os)\n     for (int i = 0; i < fields.length; i++)\n       {\n         Field field = fields[i];\n-        idMan.getId(field).write(os);\n+        idMan.getObjectId(field).write(os);\n         JdwpString.writeString(os, field.getName());\n         JdwpString.writeString(os, Signature.computeFieldSignature(field));\n         os.writeInt(field.getModifiers());\n@@ -194,7 +188,7 @@ private void executeMethods(ByteBuffer bb, DataOutputStream os)\n     for (int i = 0; i < methods.length; i++)\n       {\n         Method method = methods[i];\n-        idMan.getId(method).write(os);\n+        idMan.getObjectId(method).write(os);\n         JdwpString.writeString(os, method.getName());\n         JdwpString.writeString(os, Signature.computeMethodSignature(method));\n         os.writeInt(method.getModifiers());\n@@ -211,14 +205,31 @@ private void executeGetValues(ByteBuffer bb, DataOutputStream os)\n     os.writeInt(numFields); // Looks pointless but this is the protocol\n     for (int i = 0; i < numFields; i++)\n       {\n-        ObjectId fieldId = idMan.readId(bb);\n+        ObjectId fieldId = idMan.readObjectId(bb);\n         Field field = (Field) (fieldId.getObject());\n         Class fieldClazz = field.getDeclaringClass();\n \n         // We don't actually need the clazz to get the field but we might as\n         // well check that the debugger got it right\n         if (fieldClazz.isAssignableFrom(clazz))\n-          Value.writeStaticValueFromField(os, field);\n+          {\n+            try\n+              {\n+                field.setAccessible(true); // Might be a private field\n+                Object value = field.get(null);\n+                Value.writeTaggedValue(os, value);\n+              }\n+            catch (IllegalArgumentException ex)\n+              {\n+                // I suppose this would best qualify as an invalid field then\n+                throw new InvalidFieldException(ex);\n+              }\n+            catch (IllegalAccessException ex)\n+              {\n+                // Since we set it as accessible this really shouldn't happen\n+                throw new JdwpInternalErrorException(ex);\n+              }\n+          }\n         else\n           throw new InvalidFieldException(fieldId.getId());\n       }\n@@ -231,7 +242,7 @@ private void executeSourceFile(ByteBuffer bb, DataOutputStream os)\n     Class clazz = refId.getType();\n \n     // We'll need to go into the jvm for this unless there's an easier way\n-    String sourceFileName = vm.getSourceFile(clazz);\n+    String sourceFileName = VMVirtualMachine.getSourceFile(clazz);\n     JdwpString.writeString(os, sourceFileName);\n     // clazz.getProtectionDomain().getCodeSource().getLocation();\n   }\n@@ -258,7 +269,7 @@ private void executeStatus(ByteBuffer bb, DataOutputStream os)\n     Class clazz = refId.getType();\n \n     // I don't think there's any other way to get this\n-    int status = vm.getStatus(clazz);\n+    int status = VMVirtualMachine.getClassStatus(clazz);\n     os.writeInt(status);\n   }\n \n@@ -282,7 +293,7 @@ private void executeClassObject(ByteBuffer bb, DataOutputStream os)\n   {\n     ReferenceTypeId refId = idMan.readReferenceTypeId(bb);\n     Class clazz = refId.getType();\n-    ObjectId clazzObjectId = idMan.getId(clazz);\n+    ObjectId clazzObjectId = idMan.getObjectId(clazz);\n     clazzObjectId.write(os);\n   }\n "}, {"sha": "8f5bc685cda4359de3a559f22670f590beb12c5b", "filename": "libjava/classpath/gnu/classpath/jdwp/processor/StringReferenceCommandSet.java", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fprocessor%2FStringReferenceCommandSet.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fprocessor%2FStringReferenceCommandSet.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fprocessor%2FStringReferenceCommandSet.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -16,8 +16,8 @@\n \n You should have received a copy of the GNU General Public License\n along with GNU Classpath; see the file COPYING.  If not, write to the\n-Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n-02111-1307 USA.\n+Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n+02110-1301 USA.\n \n Linking this library statically or dynamically with other modules is\n making a combined work based on this library.  Thus, the terms and\n@@ -40,7 +40,6 @@\n \n package gnu.classpath.jdwp.processor;\n \n-import gnu.classpath.jdwp.Jdwp;\n import gnu.classpath.jdwp.JdwpConstants;\n import gnu.classpath.jdwp.exception.JdwpException;\n import gnu.classpath.jdwp.exception.JdwpInternalErrorException;\n@@ -57,7 +56,8 @@\n  * \n  * @author Aaron Luchko <aluchko@redhat.com>\n  */\n-public class StringReferenceCommandSet implements CommandSet\n+public class StringReferenceCommandSet\n+  extends CommandSet\n {\n \n   public boolean runCommand(ByteBuffer bb, DataOutputStream os, byte command)\n@@ -90,7 +90,7 @@ public boolean runCommand(ByteBuffer bb, DataOutputStream os, byte command)\n   private void executeValue(ByteBuffer bb, DataOutputStream os)\n       throws JdwpException, IOException\n   {\n-    ObjectId oid = Jdwp.getIdManager().readId(bb);\n+    ObjectId oid = idMan.readObjectId(bb);\n \n     String str = (String) oid.getObject();\n     JdwpString.writeString(os, str);"}, {"sha": "b83406873e398ac1819b3be2387b3d9377f36d01", "filename": "libjava/classpath/gnu/classpath/jdwp/processor/VirtualMachineCommandSet.java", "status": "modified", "additions": 23, "deletions": 33, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fprocessor%2FVirtualMachineCommandSet.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fprocessor%2FVirtualMachineCommandSet.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fprocessor%2FVirtualMachineCommandSet.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -39,13 +39,11 @@\n \n package gnu.classpath.jdwp.processor;\n \n-import gnu.classpath.jdwp.IVirtualMachine;\n-import gnu.classpath.jdwp.Jdwp;\n import gnu.classpath.jdwp.JdwpConstants;\n+import gnu.classpath.jdwp.VMVirtualMachine;\n import gnu.classpath.jdwp.exception.JdwpException;\n import gnu.classpath.jdwp.exception.JdwpInternalErrorException;\n import gnu.classpath.jdwp.exception.NotImplementedException;\n-import gnu.classpath.jdwp.id.IdManager;\n import gnu.classpath.jdwp.id.ObjectId;\n import gnu.classpath.jdwp.id.ReferenceTypeId;\n import gnu.classpath.jdwp.util.JdwpString;\n@@ -63,17 +61,9 @@\n  * \n  * @author Aaron Luchko <aluchko@redhat.com>\n  */\n-public class VirtualMachineCommandSet implements CommandSet\n+public class VirtualMachineCommandSet\n+  extends CommandSet\n {\n-  // Our hook into the jvm\n-  private final IVirtualMachine vm = Jdwp.getIVirtualMachine();\n-\n-  // Manages all the different ids that are assigned by jdwp\n-  private final IdManager idMan = Jdwp.getIdManager();\n-\n-  // The Jdwp object\n-  private final Jdwp jdwp = Jdwp.getDefault();\n-\n   public boolean runCommand(ByteBuffer bb, DataOutputStream os, byte command)\n     throws JdwpException\n   {\n@@ -144,9 +134,9 @@ public boolean runCommand(ByteBuffer bb, DataOutputStream os, byte command)\n           case JdwpConstants.CommandSet.VirtualMachine.ALL_CLASSES_WITH_GENERIC:\n             executeAllClassesWithGeneric(bb, os);\n             break;\n-\n           default:\n-            break;\n+            throw new NotImplementedException(\"Command \" + command +\n+            \" not found in VirtualMachine Command Set.\");\n           }\n       }\n     catch (IOException ex)\n@@ -187,7 +177,7 @@ private void executeClassesBySignature(ByteBuffer bb, DataOutputStream os)\n     ArrayList allMatchingClasses = new ArrayList();\n \n     // This will be an Iterator over all loaded Classes\n-    Iterator iter = vm.getAllLoadedClasses();\n+    Iterator iter = VMVirtualMachine.getAllLoadedClasses();\n \n     while (iter.hasNext())\n       {\n@@ -203,7 +193,7 @@ private void executeClassesBySignature(ByteBuffer bb, DataOutputStream os)\n         Class clazz = (Class) allMatchingClasses.get(i);\n         ReferenceTypeId id = idMan.getReferenceTypeId(clazz);\n         id.writeTagged(os);\n-        int status = vm.getStatus(clazz);\n+        int status = VMVirtualMachine.getClassStatus(clazz);\n         os.writeInt(status);\n       }\n   }\n@@ -214,14 +204,14 @@ private void executeAllClasses(ByteBuffer bb, DataOutputStream os)\n     // Disable garbage collection while we're collecting the info on loaded\n     // classes so we some classes don't get collected between the time we get\n     // the count and the time we get the list\n-    vm.disableGarbageCollection();\n+    //VMVirtualMachine.disableGarbageCollection();\n \n-    int classCount = vm.getAllLoadedClassesCount();\n+    int classCount = VMVirtualMachine.getAllLoadedClassesCount();\n     os.writeInt(classCount);\n \n     // This will be an Iterator over all loaded Classes\n-    Iterator iter = vm.getAllLoadedClasses();\n-    vm.enableGarbageCollection();\n+    Iterator iter = VMVirtualMachine.getAllLoadedClasses();\n+    //VMVirtualMachine.enableGarbageCollection();\n     int count = 0;\n \n     // Note it's possible classes were created since out classCount so make\n@@ -233,7 +223,7 @@ private void executeAllClasses(ByteBuffer bb, DataOutputStream os)\n         id.writeTagged(os);\n         String sig = Signature.computeClassSignature(clazz);\n         JdwpString.writeString(os, sig);\n-        int status = vm.getStatus(clazz);\n+        int status = VMVirtualMachine.getClassStatus(clazz);\n         os.writeInt(status);\n       }\n   }\n@@ -246,7 +236,7 @@ private void executeAllThreads(ByteBuffer bb, DataOutputStream os)\n \n     int numThreads = root.activeCount();\n     Thread allThreads[] = new Thread[numThreads];\n-    root.enumerate(allThreads, true);\n+    root.enumerate(allThreads);\n \n     // We need to loop through for the true count since some threads may have\n     // been destroyed since we got\n@@ -270,18 +260,18 @@ private void executeAllThreads(ByteBuffer bb, DataOutputStream os)\n         if (thread == null)\n           break; // No threads after this point\n         if (!thread.getThreadGroup().equals(jdwpGroup))\n-          idMan.getId(thread).write(os);\n+          idMan.getObjectId(thread).write(os);\n       }\n   }\n \n   private void executeTopLevelThreadGroups(ByteBuffer bb, DataOutputStream os)\n     throws JdwpException, IOException\n   {\n-    ThreadGroup jdwpGroup = jdwp.getJdwpThreadGroup();\n+    ThreadGroup jdwpGroup = Thread.currentThread().getThreadGroup ();\n     ThreadGroup root = getRootThreadGroup(jdwpGroup);\n \n     os.writeInt(1); // Just one top level group allowed?\n-    idMan.getId(root);\n+    idMan.getObjectId(root);\n   }\n \n   private void executeDispose(ByteBuffer bb, DataOutputStream os)\n@@ -291,11 +281,11 @@ private void executeDispose(ByteBuffer bb, DataOutputStream os)\n     // suspended multiple times, we likely need a way to keep track of how many\n     // times a thread has been suspended or else a stronger resume method for\n     // this purpose\n-    // vm.resumeAllThreadsExcept(jdwp.getJdwpThreadGroup());\n+    // VMVirtualMachine.resumeAllThreads ();\n \n     // Simply shutting down the jdwp layer will take care of the rest of the\n     // shutdown other than disabling debugging in the VM\n-    // vm.disableDebugging();\n+    // VMVirtualMachine.disableDebugging();\n \n     // Don't implement this until we're sure how to remove all the debugging\n     // effects from the VM.\n@@ -318,27 +308,27 @@ private void executeIDsizes(ByteBuffer bb, DataOutputStream os)\n   private void executeSuspend(ByteBuffer bb, DataOutputStream os)\n     throws JdwpException\n   {\n-    vm.suspendAllThreadsExcept(jdwp.getJdwpThreadGroup());\n+    VMVirtualMachine.suspendAllThreads ();\n   }\n \n   private void executeResume(ByteBuffer bb, DataOutputStream os)\n     throws JdwpException\n   {\n-    vm.resumeAllThreadsExcept(jdwp.getJdwpThreadGroup());\n+    VMVirtualMachine.resumeAllThreads ();\n   }\n \n   private void executeExit(ByteBuffer bb, DataOutputStream os)\n     throws JdwpException, IOException\n   {\n     int exitCode = bb.getInt();\n-    jdwp.setExit(exitCode);\n+    System.exit (exitCode);\n   }\n \n   private void executeCreateString(ByteBuffer bb, DataOutputStream os)\n     throws JdwpException, IOException\n   {\n     String string = JdwpString.readString(bb);\n-    ObjectId stringId = Jdwp.getIdManager().getId(string);\n+    ObjectId stringId = idMan.getObjectId(string);\n     \n     // Since this string isn't referenced anywhere we'll disable garbage\n     // collection on it so it's still around when the debugger gets back to it.\n@@ -386,7 +376,7 @@ private void executeDisposeObjects(ByteBuffer bb, DataOutputStream os)\n   {\n     // Instead of going through the list of objects they give us it's probably\n     // better just to find the garbage collected objects ourselves\n-    idMan.update();\n+    //idMan.update();\n   }\n \n   private void executeHoldEvents(ByteBuffer bb, DataOutputStream os)"}, {"sha": "60f1bb00df99fa52ab481f112f2cd2e4ecd59587", "filename": "libjava/classpath/gnu/classpath/jdwp/transport/ITransport.java", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Ftransport%2FITransport.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Ftransport%2FITransport.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Ftransport%2FITransport.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -49,7 +49,7 @@\n  * A class representing a transport layer. This class serves as a generic\n  * interface for all transport types used in the JDWP back-end.\n  *\n- * @author Keith Seitz <keiths@redhat.com>\n+ * @author Keith Seitz (keiths@redhat.com)\n  */\n public interface ITransport\n {\n@@ -70,6 +70,11 @@ public void configure (HashMap properties)\n   public void initialize ()\n     throws TransportException;\n \n+  /**\n+   * Shutdown the transport\n+   */\n+  public void shutdown ();\n+\n   /**\n    * Get the input stream for the transport\n    */"}, {"sha": "f008bbd00caaf25f92fe8bdf3b76b2be2e4d3df0", "filename": "libjava/classpath/gnu/classpath/jdwp/transport/JdwpConnection.java", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Ftransport%2FJdwpConnection.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Ftransport%2FJdwpConnection.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Ftransport%2FJdwpConnection.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -96,8 +96,9 @@\n    *\n    * @param transport  the transport to use for communications\n    */\n-  public JdwpConnection (ITransport transport)\n+  public JdwpConnection (ThreadGroup group, ITransport transport)\n   {\n+    super (group, \"JDWP connection thread\");\n     _transport = transport;\n     _commandQueue = new ArrayList ();\n     _shutdown = false;\n@@ -177,7 +178,7 @@ public void run ()\n \t       2. Transport was shutdown\n \t       In either case, we make sure that all of the\n \t       back-end gets shutdown. */\n-\t    Jdwp.getInstance().shutdown ();\n+\t    Jdwp.getDefault().shutdown ();\n \t  }\n \tcatch (Throwable t)\n \t  {"}, {"sha": "49d9e1f3bf6faeec5b82b3b8cb979703c297e3b4", "filename": "libjava/classpath/gnu/classpath/jdwp/transport/SocketTransport.java", "status": "modified", "additions": 17, "deletions": 1, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Ftransport%2FSocketTransport.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Ftransport%2FSocketTransport.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Ftransport%2FSocketTransport.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -57,7 +57,7 @@\n  * configury string that looks like \"name=dt_socket,\n  * address=localhost:1234,server=y\".\n  *\n- * @author Keith Seitz <keiths@redhat.com>\n+ * @author Keith Seitz (keiths@redhat.com)\n  */\n class SocketTransport\n   implements ITransport\n@@ -145,6 +145,22 @@ public void initialize ()\n       }\n   }\n \n+  /**\n+   * Shutdown the socket. This could cause SocketExceptions\n+   * for anyone blocked on socket i/o\n+   */\n+  public void shutdown ()\n+  {\n+    try\n+      {\n+\t_socket.close ();\n+      }\n+    catch (Throwable t)\n+      {\n+\t// We don't really care about errors at this point\n+      }\n+  }\n+\n   /**\n    * Returns an <code>InputStream</code> for the transport\n    *"}, {"sha": "af1fc13ca50150b70420742e36bb5337dd356c9a", "filename": "libjava/classpath/gnu/java/awt/AWTUtilities.java", "status": "modified", "additions": 375, "deletions": 2, "changes": 377, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2FAWTUtilities.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2FAWTUtilities.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2FAWTUtilities.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -37,17 +37,28 @@\n \n package gnu.java.awt;\n \n+import java.applet.Applet;\n import java.awt.Component;\n import java.awt.Container;\n+import java.awt.Font;\n+import java.awt.FontMetrics;\n+import java.awt.Insets;\n+import java.awt.Point;\n+import java.awt.Rectangle;\n+import java.awt.Toolkit;\n+import java.awt.Window;\n+import java.awt.event.MouseEvent;\n import java.util.AbstractSequentialList;\n import java.util.List;\n import java.util.ListIterator;\n import java.util.NoSuchElementException;\n import java.util.WeakHashMap;\n+import java.lang.reflect.InvocationTargetException;\n \n /**\n- * This class provides utility methods that are commonly used in AWT\n- * (and Swing).\n+ * This class mirrors the javax.swing.SwingUtilities class. It \n+ * provides commonly needed functionalities for AWT classes without\n+ * the need to reference classes in the javax.swing package.\n  */\n public class AWTUtilities\n {\n@@ -318,4 +329,366 @@ public static List getVisibleChildren(Container c)\n \n     return visibleChildren;\n   }\n+\n+  /**\n+   * Calculates the portion of the base rectangle which is inside the\n+   * insets.\n+   *\n+   * @param base The rectangle to apply the insets to\n+   * @param insets The insets to apply to the base rectangle\n+   * @param ret A rectangle to use for storing the return value, or\n+   * <code>null</code>\n+   *\n+   * @return The calculated area inside the base rectangle and its insets,\n+   * either stored in ret or a new Rectangle if ret is <code>null</code>\n+   *\n+   * @see #calculateInnerArea\n+   */\n+  public static Rectangle calculateInsetArea(Rectangle base, Insets insets,\n+                                             Rectangle ret)\n+  {\n+    if (ret == null)\n+      ret = new Rectangle();\n+    ret.setBounds(base.x + insets.left, base.y + insets.top,\n+        base.width - (insets.left + insets.right),\n+        base.height - (insets.top + insets.bottom));\n+    return ret;\n+  }\n+\n+  /**\n+   * Calculates the bounds of a component in the component's own coordinate\n+   * space. The result has the same height and width as the component's\n+   * bounds, but its location is set to (0,0).\n+   *\n+   * @param aComponent The component to measure\n+   *\n+   * @return The component's bounds in its local coordinate space\n+   */\n+  public static Rectangle getLocalBounds(Component aComponent)\n+  {\n+    Rectangle bounds = aComponent.getBounds();\n+    return new Rectangle(0, 0, bounds.width, bounds.height);\n+  }\n+\n+  /**\n+   * Returns the font metrics object for a given font. The metrics can be\n+   * used to calculate crude bounding boxes and positioning information,\n+   * for laying out components with textual elements.\n+   *\n+   * @param font The font to get metrics for\n+   *\n+   * @return The font's metrics\n+   *\n+   * @see java.awt.font.GlyphMetrics\n+   */\n+  public static FontMetrics getFontMetrics(Font font)\n+  {\n+    return Toolkit.getDefaultToolkit().getFontMetrics(font);\n+  }\n+\n+  /**\n+   * Returns the least ancestor of <code>comp</code> which has the\n+   * specified name.\n+   *\n+   * @param name The name to search for\n+   * @param comp The component to search the ancestors of\n+   *\n+   * @return The nearest ancestor of <code>comp</code> with the given\n+   * name, or <code>null</code> if no such ancestor exists\n+   *\n+   * @see java.awt.Component#getName\n+   * @see #getAncestorOfClass\n+   */\n+  public static Container getAncestorNamed(String name, Component comp)\n+  {\n+    while (comp != null && (comp.getName() != name))\n+      comp = comp.getParent();\n+    return (Container) comp;\n+  }\n+\n+  /**\n+   * Returns the least ancestor of <code>comp</code> which is an instance\n+   * of the specified class.\n+   *\n+   * @param c The class to search for\n+   * @param comp The component to search the ancestors of\n+   *\n+   * @return The nearest ancestor of <code>comp</code> which is an instance\n+   * of the given class, or <code>null</code> if no such ancestor exists\n+   *\n+   * @see #getAncestorOfClass\n+   * @see #windowForComponent\n+   * @see \n+   * \n+   */\n+  public static Container getAncestorOfClass(Class c, Component comp)\n+  {\n+    while (comp != null && (! c.isInstance(comp)))\n+      comp = comp.getParent();\n+    return (Container) comp;\n+  }\n+\n+  /**\n+   * Equivalent to calling <code>getAncestorOfClass(Window, comp)</code>.\n+   *\n+   * @param comp The component to search for an ancestor window \n+   *\n+   * @return An ancestral window, or <code>null</code> if none exists\n+   */\n+  public static Window windowForComponent(Component comp)\n+  {\n+    return (Window) getAncestorOfClass(Window.class, comp);\n+  }\n+\n+  /**\n+   * Returns the \"root\" of the component tree containint <code>comp</code>\n+   * The root is defined as either the <em>least</em> ancestor of\n+   * <code>comp</code> which is a {@link Window}, or the <em>greatest</em>\n+   * ancestor of <code>comp</code> which is a {@link Applet} if no {@link\n+   * Window} ancestors are found.\n+   *\n+   * @param comp The component to search for a root\n+   *\n+   * @return The root of the component's tree, or <code>null</code>\n+   */\n+  public static Component getRoot(Component comp)\n+  {\n+    Applet app = null;\n+    Window win = null;\n+\n+    while (comp != null)\n+     {\n+      if (win == null && comp instanceof Window)\n+        win = (Window) comp;\n+      else if (comp instanceof Applet)\n+        app = (Applet) comp;\n+      comp = comp.getParent();\n+    }\n+\n+    if (win != null)\n+      return win;\n+    else\n+      return app;\n+  }\n+\n+  /**\n+   * Return true if a descends from b, in other words if b is an\n+   * ancestor of a.\n+   *\n+   * @param a The child to search the ancestry of\n+   * @param b The potential ancestor to search for\n+   *\n+   * @return true if a is a descendent of b, false otherwise\n+   */\n+  public static boolean isDescendingFrom(Component a, Component b)\n+  {\n+    while (true)\n+     {\n+      if (a == null || b == null)\n+        return false;\n+      if (a == b)\n+        return true;\n+      a = a.getParent();\n+    }\n+  }\n+\n+  /**\n+   * Returns the deepest descendent of parent which is both visible and\n+   * contains the point <code>(x,y)</code>. Returns parent when either\n+   * parent is not a container, or has no children which contain\n+   * <code>(x,y)</code>. Returns <code>null</code> when either\n+   * <code>(x,y)</code> is outside the bounds of parent, or parent is\n+   * <code>null</code>.\n+   * \n+   * @param parent The component to search the descendents of\n+   * @param x Horizontal coordinate to search for\n+   * @param y Vertical coordinate to search for\n+   *\n+   * @return A component containing <code>(x,y)</code>, or\n+   * <code>null</code>\n+   *\n+   * @see java.awt.Container#findComponentAt\n+   */\n+  public static Component getDeepestComponentAt(Component parent, int x, int y)\n+  {\n+    if (parent == null || (! parent.contains(x, y)))\n+      return null;\n+\n+    if (! (parent instanceof Container))\n+      return parent;\n+\n+    Container c = (Container) parent;\n+    return c.findComponentAt(x, y);\n+  }\n+\n+  /**\n+   * Converts a point from a component's local coordinate space to \"screen\"\n+   * coordinates (such as the coordinate space mouse events are delivered\n+   * in). This operation is equivalent to translating the point by the\n+   * location of the component (which is the origin of its coordinate\n+   * space).\n+   *\n+   * @param p The point to convert\n+   * @param c The component which the point is expressed in terms of\n+   *\n+   * @see convertPointFromScreen\n+   */\n+  public static void convertPointToScreen(Point p, Component c)\n+  {\n+    Point c0 = c.getLocationOnScreen();\n+    p.translate(c0.x, c0.y);\n+  }\n+\n+  /**\n+   * Converts a point from \"screen\" coordinates (such as the coordinate\n+   * space mouse events are delivered in) to a component's local coordinate\n+   * space. This operation is equivalent to translating the point by the\n+   * negation of the component's location (which is the origin of its\n+   * coordinate space).\n+   *\n+   * @param p The point to convert\n+   * @param c The component which the point should be expressed in terms of\n+   */\n+  public static void convertPointFromScreen(Point p, Component c)\n+  {\n+    Point c0 = c.getLocationOnScreen();\n+    p.translate(-c0.x, -c0.y);\n+  }\n+\n+  /**\n+   * Converts a point <code>(x,y)</code> from the coordinate space of one\n+   * component to another. This is equivalent to converting the point from\n+   * <code>source</code> space to screen space, then back from screen space\n+   * to <code>destination</code> space. If exactly one of the two\n+   * Components is <code>null</code>, it is taken to refer to the root\n+   * ancestor of the other component. If both are <code>null</code>, no\n+   * transformation is done.\n+   *\n+   * @param source The component which the point is expressed in terms of\n+   * @param x Horizontal coordinate of point to transform\n+   * @param y Vertical coordinate of point to transform\n+   * @param destination The component which the return value will be\n+   * expressed in terms of\n+   *\n+   * @return The point <code>(x,y)</code> converted from the coordinate\n+   *         space of the\n+   * source component to the coordinate space of the destination component\n+   *\n+   * @see #convertPointToScreen\n+   * @see #convertPointFromScreen\n+   * @see #convertRectangle\n+   * @see #getRoot\n+   */\n+  public static Point convertPoint(Component source, int x, int y,\n+                                   Component destination)\n+  {\n+    Point pt = new Point(x, y);\n+\n+    if (source == null && destination == null)\n+      return pt;\n+\n+    if (source == null)\n+      source = getRoot(destination);\n+\n+    if (destination == null)\n+      destination = getRoot(source);\n+\n+    convertPointToScreen(pt, source);\n+    convertPointFromScreen(pt, destination);\n+\n+    return pt;\n+  }\n+\n+  \n+  /**\n+   * Converts a rectangle from the coordinate space of one component to\n+   * another. This is equivalent to converting the rectangle from\n+   * <code>source</code> space to screen space, then back from screen space\n+   * to <code>destination</code> space. If exactly one of the two\n+   * Components is <code>null</code>, it is taken to refer to the root\n+   * ancestor of the other component. If both are <code>null</code>, no\n+   * transformation is done.\n+   *\n+   * @param source The component which the rectangle is expressed in terms of\n+   * @param rect The rectangle to convert\n+   * @param destination The component which the return value will be\n+   * expressed in terms of\n+   *\n+   * @return A new rectangle, equal in size to the input rectangle, but\n+   * with its position converted from the coordinate space of the source\n+   * component to the coordinate space of the destination component\n+   *\n+   * @see #convertPointToScreen\n+   * @see #convertPointFromScreen\n+   * @see #convertPoint\n+   * @see #getRoot\n+   */\n+  public static Rectangle convertRectangle(Component source, Rectangle rect,\n+                                           Component destination)\n+  {\n+    Point pt = convertPoint(source, rect.x, rect.y, destination);\n+    return new Rectangle(pt.x, pt.y, rect.width, rect.height);\n+  }\n+\n+  /**\n+   * Convert a mouse event which refrers to one component to another.  This\n+   * includes changing the mouse event's coordinate space, as well as the\n+   * source property of the event. If <code>source</code> is\n+   * <code>null</code>, it is taken to refer to <code>destination</code>'s\n+   * root component. If <code>destination</code> is <code>null</code>, the\n+   * new event will remain expressed in <code>source</code>'s coordinate\n+   * system.\n+   *\n+   * @param source The component the mouse event currently refers to\n+   * @param sourceEvent The mouse event to convert\n+   * @param destination The component the new mouse event should refer to\n+   *\n+   * @return A new mouse event expressed in terms of the destination\n+   * component's coordinate space, and with the destination component as\n+   * its source\n+   *\n+   * @see #convertPoint\n+   */\n+  public static MouseEvent convertMouseEvent(Component source,\n+                                             MouseEvent sourceEvent,\n+                                             Component destination)\n+  {\n+    Point newpt = convertPoint(source, sourceEvent.getX(), sourceEvent.getY(),\n+                               destination);\n+\n+    return new MouseEvent(destination, sourceEvent.getID(),\n+                          sourceEvent.getWhen(), sourceEvent.getModifiers(),\n+                          newpt.x, newpt.y, sourceEvent.getClickCount(),\n+                          sourceEvent.isPopupTrigger(),\n+                          sourceEvent.getButton());\n+  }\n+\n+\n+  /** \n+   * Calls {@link java.awt.EventQueue.invokeLater} with the\n+   * specified {@link Runnable}. \n+   */\n+  public static void invokeLater(Runnable doRun)\n+  {\n+    java.awt.EventQueue.invokeLater(doRun);\n+  }\n+\n+  /** \n+   * Calls {@link java.awt.EventQueue.invokeAndWait} with the\n+   * specified {@link Runnable}. \n+   */\n+  public static void invokeAndWait(Runnable doRun)\n+  throws InterruptedException,\n+  InvocationTargetException\n+  {\n+    java.awt.EventQueue.invokeAndWait(doRun);\n+  }\n+\n+  /** \n+   * Calls {@link java.awt.EventQueue.isEventDispatchThread}.\n+   */\n+  public static boolean isEventDispatchThread()\n+  {\n+    return java.awt.EventQueue.isDispatchThread();\n+  }\n }"}, {"sha": "1ec5664dc3ea2c75d4a4288c5317500eba45af1b", "filename": "libjava/classpath/gnu/java/awt/ClasspathToolkit.java", "status": "modified", "additions": 41, "deletions": 207, "changes": 248, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2FClasspathToolkit.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2FClasspathToolkit.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2FClasspathToolkit.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -1,5 +1,5 @@\n /* ClasspathToolkit.java -- Abstract superclass for Classpath toolkits.\n-   Copyright (C) 2003, 2004  Free Software Foundation, Inc.\n+   Copyright (C) 2003, 2004, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -42,11 +42,12 @@\n import gnu.java.awt.peer.ClasspathFontPeer;\n import gnu.java.awt.peer.EmbeddedWindowPeer;\n import gnu.java.awt.peer.ClasspathTextLayoutPeer;\n+import gnu.java.security.action.SetAccessibleAction;\n \n import java.awt.AWTException;\n+import java.awt.Component;\n import java.awt.Dimension;\n import java.awt.DisplayMode;\n-import java.awt.EventQueue;\n import java.awt.Font;\n import java.awt.FontMetrics;\n import java.awt.GraphicsDevice;\n@@ -59,11 +60,14 @@\n import java.awt.peer.RobotPeer;\n import java.io.File;\n import java.io.InputStream;\n+import java.lang.reflect.Constructor;\n+import java.lang.reflect.InvocationTargetException;\n import java.net.MalformedURLException;\n import java.net.URL;\n import java.text.AttributedString;\n import java.util.HashMap;\n import java.util.Map;\n+import java.security.AccessController;\n \n import javax.imageio.spi.IIORegistry;\n \n@@ -91,14 +95,6 @@\n public abstract class ClasspathToolkit\n   extends Toolkit\n {\n-  /**\n-   * A map from URLs to previously loaded images, used by {@link\n-   * #getImage(java.net.URL)}. For images that were loaded via a path\n-   * to an image file, the map contains a key with a file URL.\n-   */\n-  private HashMap imageCache;\n-\n-\n   /**\n    * Returns a shared instance of the local, platform-specific\n    * graphics environment.\n@@ -109,59 +105,6 @@\n    */\n   public abstract GraphicsEnvironment getLocalGraphicsEnvironment();\n \n-\n-  /**\n-   * Determines the current size of the default, primary screen.\n-   *\n-   * @throws HeadlessException if the local graphics environment is\n-   * headless, which means that no screen is attached and no user\n-   * interaction is allowed.\n-   */\n-  public Dimension getScreenSize()\n-  {\n-    DisplayMode mode;\n-\n-    // getDefaultScreenDevice throws HeadlessException if the\n-    // local graphics environment is headless.\n-    mode = GraphicsEnvironment.getLocalGraphicsEnvironment()\n-      .getDefaultScreenDevice().getDisplayMode();\n-\n-    return new Dimension(mode.getWidth(), mode.getHeight());\n-  }\n-\n-\n-  /**\n-   * Determines the current color model of the default, primary\n-   * screen.\n-   *\n-   * @see GraphicsEnvironment#getDefaultScreenDevice()\n-   * @see java.awt.GraphicsDevice#getDefaultConfiguration()\n-   * @see java.awt.GraphicsConfiguration#getColorModel()\n-   *\n-   * @throws HeadlessException if the local graphics environment is\n-   * headless, which means that no screen is attached and no user\n-   * interaction is allowed.\n-   */\n-  public ColorModel getColorModel()\n-  {\n-    // getDefaultScreenDevice throws HeadlessException if the\n-    // local graphics environment is headless.\n-    return GraphicsEnvironment.getLocalGraphicsEnvironment()\n-      .getDefaultScreenDevice().getDefaultConfiguration()\n-      .getColorModel();\n-  }\n-\n-  /**\n-   * Retrieves the metrics for rendering a font on the screen.\n-   *\n-   * @param font the font whose metrics are requested.\n-   */\n-  public FontMetrics getFontMetrics(Font font)\n-  {\n-    return ((ClasspathFontPeer) font.getPeer ()).getFontMetrics (font);\n-  }\n-\n-\n   /**\n    * Acquires an appropriate {@link ClasspathFontPeer}, for use in\n    * classpath's implementation of {@link java.awt.Font}.\n@@ -185,15 +128,42 @@ public FontMetrics getFontMetrics(Font font)\n    * Creates a {@link Font}, in a platform-specific manner.\n    * \n    * The default implementation simply constructs a {@link Font}, but some\n-   * toolkits may wish to override this, to return {@link Font} subclasses which\n-   * implement {@link java.awt.font.OpenType} or\n+   * toolkits may wish to override this, to return {@link Font} subclasses \n+   * which implement {@link java.awt.font.OpenType} or\n    * {@link java.awt.font.MultipleMaster}.\n    */\n   public Font getFont (String name, Map attrs) \n   {\n-    return new Font (name, attrs);\n-  }\n+    Font f = null;\n \n+    // Circumvent the package-privateness of the\n+    // java.awt.Font.Font(String,Map) constructor.\n+    try\n+      {\n+        Constructor fontConstructor = Font.class.getDeclaredConstructor\n+          (new Class[] { String.class, Map.class });\n+        AccessController.doPrivileged\n+          (new SetAccessibleAction(fontConstructor));\n+        f = (Font) fontConstructor.newInstance(new Object[] { name, attrs });\n+      }\n+    catch (IllegalAccessException e)\n+      {\n+        throw new AssertionError(e);\n+      }\n+    catch (NoSuchMethodException e)\n+      {\n+        throw new AssertionError(e);\n+      }\n+    catch (InstantiationException e)\n+      {\n+        throw new AssertionError(e);\n+      }\n+    catch (InvocationTargetException e)\n+      {\n+        throw new AssertionError(e);\n+      }\n+    return f;\n+  }\n \n   /**\n    * Creates a font, reading the glyph definitions from a stream.\n@@ -223,137 +193,6 @@ public Font getFont (String name, Map attrs)\n    */\n   public abstract Font createFont(int format, InputStream stream);\n \n-\n-  /**\n-   * Returns an image from the specified file, which must be in a\n-   * recognized format. The set of recognized image formats may vary\n-   * from toolkit to toolkit.\n-   *\n-   * <p>This method maintains a cache for images. If an image has been\n-   * loaded from the same path before, the cached copy will be\n-   * returned. The implementation may hold cached copies for an\n-   * indefinite time, which can consume substantial resources with\n-   * large images. Users are therefore advised to use {@link\n-   * #createImage(java.lang.String)} instead.\n-   *\n-   * <p>The default implementation creates a file URL for the\n-   * specified path and invokes {@link #getImage(URL)}.\n-   *\n-   * @param path A path to the image file.\n-   *\n-   * @return IllegalArgumentException if <code>path</code> does not\n-   * designate a valid path.\n-   */\n-  public Image getImage(String path)\n-  {\n-    try\n-    {\n-      return getImage(new File(path).toURL());\n-    }\n-    catch (MalformedURLException muex)\n-    {\n-      throw (IllegalArgumentException) new IllegalArgumentException(path)\n-        .initCause(muex);\n-    }\n-  }\n-\n-\n-  /**\n-   * Loads an image from the specified URL. The image data must be in\n-   * a recognized format. The set of recognized image formats may vary\n-   * from toolkit to toolkit.\n-   *\n-   * <p>This method maintains a cache for images. If an image has been\n-   * loaded from the same URL before, the cached copy will be\n-   * returned. The implementation may hold cached copies for an\n-   * indefinite time, which can consume substantial resources with\n-   * large images. Users are therefore advised to use {@link\n-   * #createImage(java.net.URL)} instead.\n-   *\n-   * @param url the URL from where the image is read.\n-   */\n-  public Image getImage(URL url)\n-  {\n-    Image result;\n-\n-    synchronized (this)\n-    {\n-      // Many applications never call getImage. Therefore, we lazily\n-      // create the image cache when it is actually needed.\n-      if (imageCache == null)\n-        imageCache = new HashMap();\n-      else\n-      {\n-        result = (Image) imageCache.get(url);\n-        if (result != null)\n-          return result;\n-      }\n-\n-      // The createImage(URL) method, which is specified by\n-      // java.awt.Toolkit, is not implemented by this abstract class\n-      // because it is platform-dependent. Once Classpath has support\n-      // for the javax.imageio package, it might be worth considering\n-      // that toolkits provide native stream readers. Then, the class\n-      // ClasspathToolkit could provide a general implementation that\n-      // delegates the image format parsing to javax.imageio.\n-      result = createImage(url);\n-\n-      // It is not clear whether it would be a good idea to use weak\n-      // references here. The advantage would be reduced memory\n-      // consumption, since loaded images would not be kept\n-      // forever. But on VMs that frequently perform garbage\n-      // collection (which includes VMs with a parallel or incremental\n-      // collector), the image might frequently need to be re-loaded,\n-      // possibly over a slow network connection.\n-      imageCache.put(url, result);\n-\n-      return result;\n-    }\n-  }\n-\n-\n-  /**\n-   * Returns an image from the specified file, which must be in a\n-   * recognized format.  The set of recognized image formats may vary\n-   * from toolkit to toolkit.\n-   *\n-   * <p>A new image is created every time this method gets called,\n-   * even if the same path has been passed before.\n-   *\n-   * <p>The default implementation creates a file URL for the\n-   * specified path and invokes {@link #createImage(URL)}.\n-   *\n-   * @param path A path to the file to be read in.\n-   */\n-  public Image createImage(String path)\n-  {\n-    try\n-    {\n-      // The abstract method createImage(URL) is defined by\n-      // java.awt.Toolkit, but intentionally not implemented by\n-      // ClasspathToolkit because it is platform specific.\n-      return createImage(new File(path).toURL());\n-    }\n-    catch (MalformedURLException muex)\n-    {\n-      throw (IllegalArgumentException) new IllegalArgumentException(path)\n-        .initCause(muex);\n-    }\n-  }\n-  \n-  /**\n-   * Creates an ImageProducer from the specified URL. The image is assumed\n-   * to be in a recognised format. If the toolkit does not implement the\n-   * image format or the image format is not recognised, null is returned.\n-   * This default implementation is overriden by the Toolkit implementations.\n-   *\n-   * @param url URL to read image data from.\n-   */\n-  public ImageProducer createImageProducer(URL url)\n-  {\n-    return null;\n-  }\n-\n   public abstract RobotPeer createRobot (GraphicsDevice screen)\n     throws AWTException;\n \n@@ -365,15 +204,10 @@ public abstract RobotPeer createRobot (GraphicsDevice screen)\n    */\n   public abstract EmbeddedWindowPeer createEmbeddedWindow (EmbeddedWindow w);\n \n-  /** \n+  /**\n    * Used to register ImageIO SPIs provided by the toolkit.\n    */\n-\n-  public void registerImageIOSpis(IIORegistry reg)\n-  {\n-  }\n-\n-  public abstract boolean nativeQueueEmpty();\n-  public abstract void wakeNativeQueue();  \n-  public abstract void iterateNativeQueue(EventQueue locked, boolean block);\n+   public void registerImageIOSpis(IIORegistry reg)\n+   {\n+   }\n }"}, {"sha": "08b2140f4437cbb6db5f7d68d85c9a47783316b6", "filename": "libjava/classpath/gnu/java/awt/EmbeddedWindow.java", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2FEmbeddedWindow.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2FEmbeddedWindow.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2FEmbeddedWindow.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -98,11 +98,13 @@ public void addNotify()\n       }\n     catch (IllegalAccessException e)\n       {\n-\t// This should never happen.\n+        throw new RuntimeException\n+          (\"couldn't set java.awt.Component.peer field\");\n       }\n     catch (NoSuchFieldException e)\n       {\n-\t// This should never happen.\n+        throw new RuntimeException\n+          (\"couldn't set java.awt.Component.peer field\");\n       }\n \n     super.addNotify();"}, {"sha": "5252e80f1e05a03a27947dd908c069d793d2a0ae", "filename": "libjava/classpath/gnu/java/awt/peer/GLightweightPeer.java", "status": "modified", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2FGLightweightPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2FGLightweightPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2FGLightweightPeer.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -52,6 +52,7 @@\n import java.awt.Image;\n import java.awt.Insets;\n import java.awt.Point;\n+import java.awt.Rectangle;\n import java.awt.Toolkit;\n import java.awt.event.PaintEvent;\n import java.awt.image.ColorModel;\n@@ -295,4 +296,44 @@ public Image getBackBuffer()\n   public void flip(BufferCapabilities.FlipContents contents) { }\n \n   public void destroyBuffers() { }\n+\n+  public boolean isRestackSupported()\n+  {\n+    return false;\n+  }\n+\n+  public void cancelPendingPaint(int x, int y, int width, int height)\n+  {\n+    \n+  }\n+\n+  public void restack()\n+  {\n+    \n+  }\n+\n+  public Rectangle getBounds()\n+  {\n+    return null;\n+  }\n+\n+  public void reparent(ContainerPeer parent)\n+  {\n+    \n+  }\n+\n+  public void setBounds(int x, int y, int z, int width, int height)\n+  {\n+    \n+  }\n+\n+  public boolean isReparentSupported()\n+  {\n+    return false;\n+  }\n+\n+  public void layout()\n+  {\n+    \n+  }\n }"}, {"sha": "160602b03bfd4d97586d5a8cf1e6007945d27a78", "filename": "libjava/classpath/gnu/java/awt/peer/gtk/GdkGraphics.java", "status": "modified", "additions": 30, "deletions": 2, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkGraphics.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkGraphics.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkGraphics.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -38,6 +38,8 @@\n \n package gnu.java.awt.peer.gtk;\n \n+import gnu.classpath.Configuration;\n+\n import java.awt.Color;\n import java.awt.Dimension;\n import java.awt.Font;\n@@ -52,7 +54,17 @@\n \n public class GdkGraphics extends Graphics\n {\n-  private final int native_state = GtkGenericPeer.getUniqueInteger();\n+  static \n+  {\n+    if (Configuration.INIT_LOAD_LIBRARY)\n+      {\n+        System.loadLibrary(\"gtkpeer\");\n+      }\n+    initStaticState ();\n+  }\n+  \n+  static native void initStaticState();\n+  private final int native_state = GtkGenericPeer.getUniqueInteger ();\n \n   Color color, xorColor;\n   GtkComponentPeer component;\n@@ -66,6 +78,7 @@ public class GdkGraphics extends Graphics\n   static final int GDK_COPY = 0, GDK_XOR = 2;\n \n   native void initState (GtkComponentPeer component);\n+  native void initStateUnlocked (GtkComponentPeer component);\n   native void initState (int width, int height);\n   native void initFromImage (GtkImage image);\n   native void copyState (GdkGraphics g);\n@@ -119,6 +132,15 @@ void initComponentGraphics ()\n     clip = new Rectangle (0, 0, d.width, d.height);\n   }\n \n+  // called back by native side: realize_cb\n+  void initComponentGraphicsUnlocked ()\n+  {\n+    initStateUnlocked (component);\n+    color = component.awtComponent.getForeground ();\n+    Dimension d = component.awtComponent.getSize ();\n+    clip = new Rectangle (0, 0, d.width, d.height);\n+  }\n+\n   native void connectSignals (GtkComponentPeer component);\n \n   public native void clearRect(int x, int y, int width, int height);\n@@ -327,7 +349,13 @@ public void setClip (Rectangle clip)\n \n   public void setClip (Shape clip)\n   {\n-    if (clip != null)\n+    if (clip == null)\n+      {\n+\t// Reset clipping.\n+\tDimension d = component.awtComponent.getSize();\n+\tsetClip(new Rectangle (0, 0, d.width, d.height));\n+      }\n+    else\n       setClip(clip.getBounds());\n   }\n "}, {"sha": "6d9aabf77d57ed3ccdd5c3e23a69e5e342880ddb", "filename": "libjava/classpath/gnu/java/awt/peer/gtk/GdkGraphics2D.java", "status": "modified", "additions": 177, "deletions": 3, "changes": 180, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkGraphics2D.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkGraphics2D.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkGraphics2D.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -45,6 +45,7 @@\n import java.awt.BasicStroke;\n import java.awt.Color;\n import java.awt.Composite;\n+import java.awt.Dimension;\n import java.awt.Font;\n import java.awt.FontMetrics;\n import java.awt.GradientPaint;\n@@ -106,8 +107,7 @@ public class GdkGraphics2D extends Graphics2D\n     if (Configuration.INIT_LOAD_LIBRARY)\n       System.loadLibrary(\"gtkpeer\");\n \n-    if (GtkToolkit.useGraphics2D())\n-      initStaticState();\n+    initStaticState();\n   }\n   \n   static native void initStaticState();\n@@ -132,12 +132,14 @@ public class GdkGraphics2D extends Graphics2D\n   Composite comp;\n   private Stack stateStack;\n \n+  private native void initStateUnlocked(GtkComponentPeer component);\n   private native void initState(GtkComponentPeer component);\n   private native void initState(int width, int height);\n   private native void initState(int[] pixes, int width, int height);\n   private native void copyState(GdkGraphics2D g);\n   public native void dispose();\n   private native void cairoSurfaceSetFilter(int filter);\n+  private native void cairoSurfaceSetFilterUnlocked(int filter);\n   native void connectSignals(GtkComponentPeer component);\n \n   public void finalize()\n@@ -236,6 +238,21 @@ void initComponentGraphics2D()\n     stateStack = new Stack();\n   }\n \n+  void initComponentGraphics2DUnlocked()\n+  {\n+    initStateUnlocked(component);\n+\n+    setColorUnlocked(component.awtComponent.getForeground());\n+    setBackgroundUnlocked(component.awtComponent.getBackground());\n+    setPaintUnlocked(getColorUnlocked());\n+    setTransformUnlocked(new AffineTransform());\n+    setStrokeUnlocked(new BasicStroke());\n+    setRenderingHintsUnlocked(getDefaultHints());\n+    setFontUnlocked(new Font(\"SansSerif\", Font.PLAIN, 12));\n+\n+    stateStack = new Stack();\n+  }\n+\n   GdkGraphics2D(BufferedImage bimage)\n   {\n     this.bimage = bimage;\n@@ -280,25 +297,37 @@ void initComponentGraphics2D()\n   // drawing utility methods\n   private native void drawPixels(int[] pixels, int w, int h, int stride,\n                                  double[] i2u);\n+  private native void setTexturePixelsUnlocked(int[] pixels, int w, int h, int stride);\n   private native void setTexturePixels(int[] pixels, int w, int h, int stride);\n   private native void setGradient(double x1, double y1, double x2, double y2,\n                                   int r1, int g1, int b1, int a1, int r2,\n                                   int g2, int b2, int a2, boolean cyclic);\n+  private native void setGradientUnlocked(double x1, double y1, double x2, double y2,\n+                                  int r1, int g1, int b1, int a1, int r2,\n+                                  int g2, int b2, int a2, boolean cyclic);\n \n   // simple passthroughs to cairo\n   private native void cairoSave();\n   private native void cairoRestore();\n   private native void cairoSetMatrix(double[] m);\n+  private native void cairoSetMatrixUnlocked(double[] m);\n   private native void cairoSetOperator(int cairoOperator);\n   private native void cairoSetRGBAColor(double red, double green,\n                                         double blue, double alpha);\n+  private native void cairoSetRGBAColorUnlocked(double red, double green,\n+                                        double blue, double alpha);\n   private native void cairoSetFillRule(int cairoFillRule);\n   private native void cairoSetLineWidth(double width);\n+  private native void cairoSetLineWidthUnlocked(double width);\n   private native void cairoSetLineCap(int cairoLineCap);\n+  private native void cairoSetLineCapUnlocked(int cairoLineCap);\n   private native void cairoSetLineJoin(int cairoLineJoin);\n+  private native void cairoSetLineJoinUnlocked(int cairoLineJoin);\n   private native void cairoSetDash(double[] dashes, int ndash, double offset);\n+  private native void cairoSetDashUnlocked(double[] dashes, int ndash, double offset);\n \n   private native void cairoSetMiterLimit(double limit);\n+  private native void cairoSetMiterLimitUnlocked(double limit);\n   private native void cairoNewPath();\n   private native void cairoMoveTo(double x, double y);\n   private native void cairoLineTo(double x, double y);\n@@ -689,6 +718,49 @@ else if (paint instanceof GradientPaint)\n       throw new java.lang.UnsupportedOperationException();\n   }\n \n+  public void setPaintUnlocked(Paint p)\n+  {\n+    if (paint == null)\n+      return;\n+\n+    paint = p;\n+    if (paint instanceof Color)\n+      {\n+        setColorUnlocked((Color) paint);\n+      }\n+    else if (paint instanceof TexturePaint)\n+      {\n+\tTexturePaint tp = (TexturePaint) paint;\n+\tBufferedImage img = tp.getImage();\n+\n+\t// map the image to the anchor rectangle  \n+\tint width = (int) tp.getAnchorRect().getWidth();\n+\tint height = (int) tp.getAnchorRect().getHeight();\n+\n+\tdouble scaleX = width / (double) img.getWidth();\n+\tdouble scaleY = width / (double) img.getHeight();\n+\n+\tAffineTransform at = new AffineTransform(scaleX, 0, 0, scaleY, 0, 0);\n+\tAffineTransformOp op = new AffineTransformOp(at, getRenderingHints());\n+\tBufferedImage texture = op.filter(img, null);\n+\tint[] pixels = texture.getRGB(0, 0, width, height, null, 0, width);\n+\tsetTexturePixelsUnlocked(pixels, width, height, width);\n+      }\n+    else if (paint instanceof GradientPaint)\n+      {\n+\tGradientPaint gp = (GradientPaint) paint;\n+\tPoint2D p1 = gp.getPoint1();\n+\tPoint2D p2 = gp.getPoint2();\n+\tColor c1 = gp.getColor1();\n+\tColor c2 = gp.getColor2();\n+\tsetGradientUnlocked(p1.getX(), p1.getY(), p2.getX(), p2.getY(), c1.getRed(),\n+\t            c1.getGreen(), c1.getBlue(), c1.getAlpha(), c2.getRed(),\n+\t            c2.getGreen(), c2.getBlue(), c2.getAlpha(), gp.isCyclic());\n+      }\n+    else\n+      throw new java.lang.UnsupportedOperationException();\n+  }\n+\n   public void setTransform(AffineTransform tx)\n   {\n     transform = tx;\n@@ -700,6 +772,17 @@ public void setTransform(AffineTransform tx)\n       }\n   }\n \n+  public void setTransformUnlocked(AffineTransform tx)\n+  {\n+    transform = tx;\n+    if (transform != null)\n+      {\n+\tdouble[] m = new double[6];\n+\ttransform.getMatrix(m);\n+\tcairoSetMatrixUnlocked(m);\n+      }\n+  }\n+\n   public void transform(AffineTransform tx)\n   {\n     if (transform == null)\n@@ -784,6 +867,32 @@ public void setStroke(Stroke st)\n \t    cairoSetDash(double_dashes, double_dashes.length,\n \t                 (double) bs.getDashPhase());\n \t  }\n+\telse\n+\t  cairoSetDash(new double[0], 0, 0.0);\n+      }\n+  }\n+\n+  public void setStrokeUnlocked(Stroke st)\n+  {\n+    stroke = st;\n+    if (stroke instanceof BasicStroke)\n+      {\n+\tBasicStroke bs = (BasicStroke) stroke;\n+\tcairoSetLineCapUnlocked(bs.getEndCap());\n+\tcairoSetLineWidthUnlocked(bs.getLineWidth());\n+\tcairoSetLineJoinUnlocked(bs.getLineJoin());\n+\tcairoSetMiterLimitUnlocked(bs.getMiterLimit());\n+\tfloat[] dashes = bs.getDashArray();\n+\tif (dashes != null)\n+\t  {\n+\t    double[] double_dashes = new double[dashes.length];\n+\t    for (int i = 0; i < dashes.length; i++)\n+\t      double_dashes[i] = dashes[i];\n+\t    cairoSetDashUnlocked(double_dashes, double_dashes.length,\n+                                 (double) bs.getDashPhase());\n+\t  }\n+\telse\n+\t  cairoSetDashUnlocked(new double[0], 0, 0.0);\n       }\n   }\n \n@@ -812,11 +921,27 @@ public void setColor(Color c)\n                       fg.getBlue() / 255.0, fg.getAlpha() / 255.0);\n   }\n \n+  public void setColorUnlocked(Color c)\n+  {\n+    if (c == null)\n+      c = Color.BLACK;\n+\n+    fg = c;\n+    paint = c;\n+    cairoSetRGBAColorUnlocked(fg.getRed() / 255.0, fg.getGreen() / 255.0,\n+                      fg.getBlue() / 255.0, fg.getAlpha() / 255.0);\n+  }\n+\n   public Color getColor()\n   {\n     return fg;\n   }\n \n+  public Color getColorUnlocked()\n+  {\n+    return getColor();\n+  }\n+\n   public void clipRect(int x, int y, int width, int height)\n   {\n     clip(new Rectangle(x, y, width, height));\n@@ -864,7 +989,13 @@ public void setClip(int x, int y, int width, int height)\n   public void setClip(Shape s)\n   {\n     clip = s;\n-    if (s != null)\n+    if (clip == null)\n+      {\n+\t// Reset clipping.\n+\tDimension d = component.awtComponent.getSize();\n+\tsetClip(0, 0, d.width, d.height);\n+      }\n+    else\n       {\n \tcairoNewPath();\n \tif (s instanceof Rectangle2D)\n@@ -929,6 +1060,11 @@ public void setBackground(Color c)\n     bg = c;\n   }\n \n+  public void setBackgroundUnlocked(Color c)\n+  {\n+    setBackground(c);\n+  }\n+\n   public Color getBackground()\n   {\n     return bg;\n@@ -1180,6 +1316,36 @@ else if (hints.containsValue(RenderingHints.VALUE_ALPHA_INTERPOLATION_DEFAULT))\n                      || hints.containsValue(RenderingHints.VALUE_STROKE_DEFAULT);\n   }\n \n+  public void setRenderingHintsUnlocked(Map hints)\n+  {\n+    this.hints = new RenderingHints(getDefaultHints());\n+    this.hints.add(new RenderingHints(hints));\n+\n+    if (hints.containsKey(RenderingHints.KEY_INTERPOLATION))\n+      {\n+\tif (hints.containsValue(RenderingHints.VALUE_INTERPOLATION_NEAREST_NEIGHBOR))\n+\t  cairoSurfaceSetFilterUnlocked(0);\n+\n+\telse if (hints.containsValue(RenderingHints.VALUE_INTERPOLATION_BILINEAR))\n+\t  cairoSurfaceSetFilterUnlocked(1);\n+      }\n+\n+    if (hints.containsKey(RenderingHints.KEY_ALPHA_INTERPOLATION))\n+      {\n+\tif (hints.containsValue(RenderingHints.VALUE_ALPHA_INTERPOLATION_SPEED))\n+\t  cairoSurfaceSetFilterUnlocked(2);\n+\n+\telse if (hints.containsValue(RenderingHints.VALUE_ALPHA_INTERPOLATION_QUALITY))\n+\t  cairoSurfaceSetFilterUnlocked(3);\n+\n+\telse if (hints.containsValue(RenderingHints.VALUE_ALPHA_INTERPOLATION_DEFAULT))\n+\t  cairoSurfaceSetFilterUnlocked(4);\n+      }\n+\n+    shiftDrawCalls = hints.containsValue(RenderingHints.VALUE_STROKE_NORMALIZE)\n+                     || hints.containsValue(RenderingHints.VALUE_STROKE_DEFAULT);\n+  }\n+\n   public void addRenderingHints(Map hints)\n   {\n     this.hints.add(new RenderingHints(hints));\n@@ -1344,6 +1510,9 @@ public void drawGdkTextLayout(GdkTextLayout gl, float x, float y)\n \n   public void drawString(String str, float x, float y)\n   {\n+    if (str == null || str.length() == 0)\n+      return;\n+\n     drawGlyphVector(getFont().createGlyphVector(null, str), x, y);\n     updateBufferedImage ();\n   }\n@@ -1443,6 +1612,11 @@ public void setFont(Font f)\n         .getFont(f.getName(), f.getAttributes());    \n   }\n \n+  public void setFontUnlocked(Font f)\n+  {\n+    setFont (f);\n+  }\n+\n   public String toString()\n   {\n     return  (getClass().getName()"}, {"sha": "6cf7310a550fee63f578d146517e3470603ee274", "filename": "libjava/classpath/gnu/java/awt/peer/gtk/GdkGraphicsConfiguration.java", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkGraphicsConfiguration.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkGraphicsConfiguration.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkGraphicsConfiguration.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -42,6 +42,7 @@\n import java.awt.GraphicsDevice;\n import java.awt.ImageCapabilities;\n import java.awt.Rectangle;\n+import java.awt.Toolkit;\n \n import java.awt.geom.AffineTransform;\n \n@@ -56,16 +57,11 @@ public class GdkGraphicsConfiguration\n   ColorModel cm;\n   Rectangle bounds;\n \n-  public GtkToolkit getToolkit()\n-  {\n-    return gdkScreenGraphicsDevice.getToolkit();\n-  }\n-\n   public GdkGraphicsConfiguration(GdkScreenGraphicsDevice dev)\n   {\n     this.gdkScreenGraphicsDevice = dev;\n     cm = new BufferedImage(1, 1, BufferedImage.TYPE_INT_ARGB).getColorModel();\n-    bounds = getToolkit().getBounds();\n+    bounds = ((GtkToolkit) Toolkit.getDefaultToolkit()).getBounds();\n   }\n \n   public GraphicsDevice getDevice()\n@@ -135,4 +131,10 @@ public ImageCapabilities getImageCapabilities()\n     return new ImageCapabilities(false);\n   }\n \n+  public VolatileImage createCompatibleVolatileImage(int width, int height, int transparency)\n+  {\n+      // FIXME: implement\n+    return null;\n+  }\n+\n }"}, {"sha": "4b0b5d30893dedf5aabe4efe553233022708c471", "filename": "libjava/classpath/gnu/java/awt/peer/gtk/GdkGraphicsEnvironment.java", "status": "modified", "additions": 2, "deletions": 10, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkGraphicsEnvironment.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkGraphicsEnvironment.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkGraphicsEnvironment.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -43,22 +43,14 @@\n import java.awt.GraphicsDevice;\n import java.awt.GraphicsEnvironment;\n import java.awt.HeadlessException;\n+import java.awt.Toolkit;\n import java.awt.image.BufferedImage;\n import java.util.Locale;\n \n public class GdkGraphicsEnvironment extends GraphicsEnvironment\n {\n-  GtkToolkit gtkToolkit;\n-\n-  public GtkToolkit getToolkit()\n-  {\n-    return gtkToolkit;\n-  }\n-\n-  public GdkGraphicsEnvironment (GtkToolkit tk)\n+  public GdkGraphicsEnvironment ()\n   {\n-    super();\n-    gtkToolkit = tk;\n   }\n \n   public GraphicsDevice[] getScreenDevices ()"}, {"sha": "85cb1e47a9e9e7083e205784b39716d054f36923", "filename": "libjava/classpath/gnu/java/awt/peer/gtk/GdkPixbufDecoder.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkPixbufDecoder.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkPixbufDecoder.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkPixbufDecoder.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -122,7 +122,7 @@ public GdkPixbufDecoder (byte[] imagedata, int imageoffset, int imagelength)\n     super (imagedata, imageoffset, imagelength);\n   }\n \n-  // called back by native side\n+  // called back by native side: area_prepared_cb\n   void areaPrepared (int width, int height)\n   {\n \n@@ -138,7 +138,7 @@ void areaPrepared (int width, int height)\n       }\n   }\n   \n-  // called back by native side\n+  // called back by native side: area_updated_cb\n   void areaUpdated (int x, int y, int width, int height, \n                     int pixels[], int scansize)\n   {\n@@ -306,7 +306,7 @@ static String[] getFormatMimeTypes(boolean writable)\n   static String findFormatName(Object ext, boolean needWritable)\n   {\n     if (ext == null)\n-      throw new IllegalArgumentException(\"extension is null\");\n+      return null;\n \n     if (!(ext instanceof String))\n       throw new IllegalArgumentException(\"extension is not a string\");"}, {"sha": "b5d1237a45d36d996bffec61f10fb5e1b0d3dff9", "filename": "libjava/classpath/gnu/java/awt/peer/gtk/GdkScreenGraphicsDevice.java", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkScreenGraphicsDevice.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkScreenGraphicsDevice.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkScreenGraphicsDevice.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -42,16 +42,12 @@\n import java.awt.DisplayMode;\n import java.awt.GraphicsConfiguration;\n import java.awt.GraphicsDevice;\n+import java.awt.Toolkit;\n \n public class GdkScreenGraphicsDevice extends GraphicsDevice\n {\n   GdkGraphicsEnvironment env;\n \n-  public GtkToolkit getToolkit()\n-  {\n-    return env.getToolkit();\n-  }\n-\n   public GdkScreenGraphicsDevice (GdkGraphicsEnvironment e)\n   {    \n     super ();\n@@ -94,7 +90,7 @@ public GraphicsConfiguration getDefaultConfiguration ()\n   public DisplayMode getDisplayMode()\n   {\n     // determine display mode\n-    Dimension dim = getToolkit().getScreenSize();\n+    Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();\n     DisplayMode mode = new DisplayMode(dim.width, dim.height, 0,\n \t\t\t\t       DisplayMode.REFRESH_RATE_UNKNOWN);\n     return mode;"}, {"sha": "054ead6d601d894879c73024e303646e1da8ca1e", "filename": "libjava/classpath/gnu/java/awt/peer/gtk/GtkButtonPeer.java", "status": "modified", "additions": 14, "deletions": 26, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkButtonPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkButtonPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkButtonPeer.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -42,10 +42,14 @@\n import java.awt.Button;\n import java.awt.Component;\n import java.awt.Point;\n+import java.awt.event.ActionEvent;\n import java.awt.event.KeyEvent;\n import java.awt.event.MouseEvent;\n import java.awt.peer.ButtonPeer;\n \n+// A composite widget.  GtkButtons have transparent backgrounds.  An\n+// AWT Button is opaque.  To compensate, a GtkButtonPeer is a\n+// GtkButton packed in a GtkEventBox.\n public class GtkButtonPeer extends GtkComponentPeer\n     implements ButtonPeer\n {\n@@ -61,6 +65,11 @@ public class GtkButtonPeer extends GtkComponentPeer\n   native void gtkWidgetRequestFocus ();\n   native void setNativeBounds (int x, int y, int width, int height);\n \n+  // Because this is a composite widget, we need to retrieve the\n+  // GtkButton's preferred dimensions, not the enclosing\n+  // GtkEventBox's.\n+  native void gtkWidgetGetPreferredDimensions (int[] dim);\n+\n   public GtkButtonPeer (Button b)\n   {\n     super (b);\n@@ -76,32 +85,11 @@ public void setLabel (String label)\n     gtkSetLabel(label);\n   }\n \n-  public void handleEvent (AWTEvent e)\n+  void postActionEvent (int mods)\n   {\n-    if (e.getID () == MouseEvent.MOUSE_RELEASED && isEnabled ())\n-      {\n-\tMouseEvent me = (MouseEvent) e;\n-\tPoint p = me.getPoint();\n-\tp.translate(((Component) me.getSource()).getX(),\n-\t            ((Component) me.getSource()).getY());\n-\tif (!me.isConsumed ()\n-\t    && (me.getModifiersEx () & MouseEvent.BUTTON1_DOWN_MASK) != 0\n-\t    && awtComponent.getBounds().contains(p))\n-          postActionEvent (((Button) awtComponent).getActionCommand (), \n-                           me.getModifiersEx ());\n-      }\n-\n-    if (e.getID () == KeyEvent.KEY_PRESSED)\n-      {\n-\tKeyEvent ke = (KeyEvent) e;\n-\tif (!ke.isConsumed () && ke.getKeyCode () == KeyEvent.VK_SPACE)\n-          {\n-            postActionEvent (((Button) awtComponent).getActionCommand (),\n-                             ke.getModifiersEx ());\n-            gtkActivate ();\n-          }\n-      }\n-\n-    super.handleEvent (e);\n+    q().postEvent (new ActionEvent (awtWidget,\n+\t\t\t\t    ActionEvent.ACTION_PERFORMED,\n+\t\t\t\t    ((Button) awtComponent).getActionCommand (),\n+\t\t\t\t    mods));\n   }\n }"}, {"sha": "3e05cf8ab077722c6261a2fc0da00afdb8b02b14", "filename": "libjava/classpath/gnu/java/awt/peer/gtk/GtkCheckboxPeer.java", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkCheckboxPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkCheckboxPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkCheckboxPeer.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -49,6 +49,7 @@ public class GtkCheckboxPeer extends GtkComponentPeer\n   public GtkCheckboxGroupPeer old_group;\n   // The current state of the GTK checkbox.\n   private boolean currentState;  \n+  private boolean changing = false;\n \n   public native void create (GtkCheckboxGroupPeer group);\n   public native void nativeSetCheckboxGroup (GtkCheckboxGroupPeer group);\n@@ -76,6 +77,15 @@ public void create ()\n \n   public void setState (boolean state)\n   {\n+    // prevent item_toggled_cb -> postItemEvent ->\n+    // awtComponent.setState -> this.setState ->\n+    // gtkToggleButtonSetActive self-deadlock on the GDK lock.\n+    if (changing && Thread.currentThread() == GtkToolkit.mainThread)\n+      {\n+        changing = false;\n+        return;\n+      }\n+\n     if (currentState != state)\n       gtkToggleButtonSetActive (state);\n   }\n@@ -100,6 +110,7 @@ public void setCheckboxGroup (CheckboxGroup group)\n \n   // Override the superclass postItemEvent so that the peer doesn't\n   // need information that we have.\n+  // called back by native side: item_toggled_cb\n   public void postItemEvent (Object item, int stateChange)\n   {\n     Checkbox currentCheckBox = ((Checkbox)awtComponent);\n@@ -113,6 +124,7 @@ public void postItemEvent (Object item, int stateChange)\n     {\n       super.postItemEvent (awtComponent, stateChange);\n       currentState = !currentCheckBox.getState();\n+      changing = true;\n       currentCheckBox.setState(currentState);\n     }\n   }"}, {"sha": "c140744397a41fc7f82e416e637d29a95c49a992", "filename": "libjava/classpath/gnu/java/awt/peer/gtk/GtkChoicePeer.java", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkChoicePeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkChoicePeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkChoicePeer.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -74,8 +74,17 @@ public GtkChoicePeer (Choice c)\n \n   native void connectSignals ();\n \n-  public native void select (int position);\n- \n+  native void selectNative (int position);\n+  native void selectNativeUnlocked (int position);\n+\n+  public void select (int position)\n+  {\n+    if (Thread.currentThread() == GtkToolkit.mainThread)\n+      selectNativeUnlocked (position);\n+    else\n+      selectNative (position);\n+  }\n+\n   public void add (String item, int index)\n   {\n     int before = nativeGetSelected();"}, {"sha": "a502e1fd6ef51f3e604e3369dfd3a96fbfd5f40e", "filename": "libjava/classpath/gnu/java/awt/peer/gtk/GtkClipboard.java", "status": "modified", "additions": 307, "deletions": 83, "changes": 390, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkClipboard.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkClipboard.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkClipboard.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -38,133 +38,357 @@\n \n package gnu.java.awt.peer.gtk;\n \n-import java.awt.datatransfer.Clipboard;\n-import java.awt.datatransfer.ClipboardOwner;\n-import java.awt.datatransfer.DataFlavor;\n-import java.awt.datatransfer.StringSelection;\n-import java.awt.datatransfer.Transferable;\n-import java.io.IOException;\n-import java.io.InputStream;\n-import java.io.InputStreamReader;\n+import java.awt.Image;\n+import java.awt.datatransfer.*;\n+\n+import java.io.*;\n+\n+import java.util.List;\n+import java.util.Iterator;\n \n public class GtkClipboard extends Clipboard\n {\n-  /* the number of milliseconds that we'll wait around for the\n-     owner of the GDK_SELECTION_PRIMARY selection to convert \n-     the requested data */\n-  static final int SELECTION_RECEIVED_TIMEOUT = 5000;\n \n-  /* We currently only support transferring of text between applications */\n-  static String selection;\n-  static Object selectionLock = new Object ();\n+  // Given to the native side so it can signal special targets that\n+  // can be converted to one of the special predefined DataFlavors.\n+  static final String stringMimeType;\n+  static final String imageMimeType;\n+  static final String filesMimeType;\n+\n+  // Indicates whether the results of the clipboard selection can be\n+  // cached by GtkSelection. True if\n+  // gdk_display_supports_selection_notification.\n+  static final boolean canCache;\n+\n+  static\n+  {\n+    stringMimeType = DataFlavor.stringFlavor.getMimeType();\n+    imageMimeType = DataFlavor.imageFlavor.getMimeType();\n+    filesMimeType = DataFlavor.javaFileListFlavor.getMimeType();\n+\n+    canCache = initNativeState(stringMimeType, imageMimeType, filesMimeType);\n+  }\n \n-  static boolean hasSelection = false;\n+  /**\n+   * The one and only gtk+ clipboard instance.\n+   */\n+  private static GtkClipboard instance = new GtkClipboard();\n \n-  protected GtkClipboard()\n+  /**\n+   * Creates the clipboard and sets the initial contents to the\n+   * current gtk+ selection.\n+   */\n+  private GtkClipboard()\n   {\n     super(\"System Clipboard\");\n-    initNativeState();\n+    setContents(new GtkSelection(), null);\n+  }\n+\n+  /**\n+   * Returns the one and only GtkClipboard instance.\n+   */\n+\n+  static GtkClipboard getInstance()\n+  {\n+    return instance;\n   }\n \n-  public Transferable getContents(Object requestor)\n+  /**\n+   * Sets the GtkSelection facade as new contents of the clipboard.\n+   * Called from gtk+ when another application grabs the clipboard and\n+   * we loose ownership.\n+   */\n+  private static void setSystemContents()\n   {\n-    synchronized (this)\n+    GtkClipboardNotifier.announce();\n+  }\n+\n+  /**\n+   * Sets the new contents and advertises the available flavors to the\n+   * gtk+ clipboard.\n+   */\n+  public synchronized void setContents(Transferable contents,\n+\t\t\t\t       ClipboardOwner owner)\n+  {\n+    super.setContents(contents, owner);\n+\n+    if (contents == null)\n       {\n-\tif (hasSelection)\n-\t  return contents;\n+\tadvertiseContent(null, false, false, false);\n+\treturn;\n       }\n \n-    /* Java doesn't own the selection, so we need to ask X11 */\n-    // XXX: Does this hold with Swing too ?\n-    synchronized (selectionLock)\n+    // We don't need to do anything for a GtkSelection facade.\n+    if (contents instanceof GtkSelection)\n+      return;\n+\n+    boolean text = false;\n+    boolean images = false;\n+    boolean files = false;\n+\n+    if (contents instanceof StringSelection\n+\t|| contents.isDataFlavorSupported(DataFlavor.stringFlavor)\n+\t|| contents.isDataFlavorSupported(DataFlavor.plainTextFlavor)\n+\t|| contents.isDataFlavorSupported(DataFlavor\n+\t\t\t\t\t  .getTextPlainUnicodeFlavor()))\n+      text = true;\n+\n+    DataFlavor[] flavors = contents.getTransferDataFlavors();\n+    String[] mimeTargets = new String[flavors.length];\n+    for (int i = 0; i < flavors.length; i++)\n       {\n-\trequestStringConversion();\n-\t\n-\ttry \n-\t  {\n-\t    selectionLock.wait(SELECTION_RECEIVED_TIMEOUT);\n-\t  } \n-\tcatch (InterruptedException e)\n+\tDataFlavor flavor = flavors[i];\n+\tString mimeType = flavor.getMimeType();\n+\tmimeTargets[i] = mimeType;\n+\n+\tif (! text)\n+\t  if (\"text\".equals(flavor.getPrimaryType())\n+\t      || flavor.isRepresentationClassReader())\n+\t    text = true;\n+\n+\t// XXX - We only support automatic image conversion for\n+\t// GtkImages at the moment. So explicitly check that we have\n+\t// one.\n+\tif (! images && flavors[i].equals(DataFlavor.imageFlavor))\n \t  {\n-\t    return null;\n+\t    try\n+\t      {\n+\t\tObject o = contents.getTransferData(DataFlavor.imageFlavor);\n+\t\tif (o instanceof GtkImage)\n+\t\t  images = true;\n+\t      }\n+\t    catch (UnsupportedFlavorException ufe)\n+\t      {\n+\t      }\n+\t    catch (IOException ioe)\n+\t      {\n+\t      }\n+\t    catch (ClassCastException cce)\n+\t      {\n+\t      }\n \t  }\n-\t\n-\treturn selection == null ? null : new StringSelection(selection);\n+\n+\tif (flavors[i].equals(DataFlavor.javaFileListFlavor))\n+\t  files = true;\n       }\n+\n+    advertiseContent(mimeTargets, text, images, files);\n   }\n \n-  void stringSelectionReceived(String newSelection)\n+  /**\n+   * Advertises new contents to the gtk+ clipboard given a string\n+   * array of (mime-type) targets. When the boolean flags text, images\n+   * and/or files are set then gtk+ is asked to also advertise the\n+   * availability of any text, image or uri/file content types it\n+   * supports. If targets is null (and all flags false) then the\n+   * selection has explicitly been erased.\n+   */\n+  private native void advertiseContent(String[] targets,\n+\t\t\t\t       boolean text,\n+\t\t\t\t       boolean images,\n+\t\t\t\t       boolean files);\n+  \n+  /**\n+   * Called by the gtk+ clipboard when an application has requested\n+   * text.  Return a string representing the current clipboard\n+   * contents or null when no text can be provided.\n+   */\n+  private String provideText()\n   {\n-    synchronized (selectionLock)\n+    Transferable contents = this.contents;\n+    if (contents == null || contents instanceof GtkSelection)\n+      return null;\n+\n+    // Handle StringSelection special since that is just pure text.\n+    if (contents instanceof StringSelection)\n       {\n-\tselection = newSelection;\n-\tselectionLock.notify();\n+        try\n+          {\n+            return (String) contents.getTransferData(DataFlavor.stringFlavor);\n+\t  }\n+        catch (UnsupportedFlavorException ufe)\n+          {\n+          }\n+        catch (IOException ioe)\n+          {\n+          }\n+        catch (ClassCastException cce)\n+          {\n+          }\n       }\n-  }\n-\n-  /* convert Java clipboard data into a String suitable for sending\n-     to another application */\n-  synchronized String stringSelectionHandler() throws IOException\n-  {\n-    String selection = null;\n \n+    // Try to get a plain text reader for the current contents and\n+    // turn the result into a string.\n     try\n       {\n-\tif (contents.isDataFlavorSupported(DataFlavor.stringFlavor))\n-\t  selection = (String)contents.getTransferData(DataFlavor.stringFlavor);\n-\telse if (contents.isDataFlavorSupported(DataFlavor.plainTextFlavor))\n+\tDataFlavor plainText = DataFlavor.getTextPlainUnicodeFlavor();\n+\tReader r = plainText.getReaderForText(contents);\n+\tif (r != null)\n \t  {\n-\t    StringBuffer sbuf = new StringBuffer();\n-\t    InputStreamReader reader;\n-\t    char readBuf[] = new char[512];\n-\t    int numChars;\n-\t  \n-\t    reader = new InputStreamReader \n-\t      ((InputStream) \n-\t       contents.getTransferData(DataFlavor.plainTextFlavor), \"UNICODE\");\n-\t  \n-\t    while (true)\n+\t    StringBuffer sb = new StringBuffer();\n+\t    char[] cs = new char[1024];\n+\t    int l = r.read(cs);\n+\t    while (l != -1)\n \t      {\n-\t\tnumChars = reader.read(readBuf);\n-\t\tif (numChars == -1)\n-\t\t  break;\n-\t\tsbuf.append(readBuf, 0, numChars);\n+\t\tsb.append(cs, 0, l);\n+\t\tl = r.read(cs);\n \t      }\n-\t  \n-\t    selection = new String(sbuf);\n+\t    return sb.toString();\n \t  }\n       }\n-    catch (Exception e)\n+    catch (IllegalArgumentException iae)\n+      {\n+      }\n+    catch (UnsupportedEncodingException iee)\n       {\n       }\n-    \n-    return selection;\n+    catch (UnsupportedFlavorException ufe)\n+      {\n+      }\n+    catch (IOException ioe)\n+      {\n+      }\n+\n+    return null;\n   }\n \n-  public synchronized void setContents(Transferable contents,\n-\t\t\t\t       ClipboardOwner owner)\n+  /**\n+   * Called by the gtk+ clipboard when an application has requested an\n+   * image.  Returns a GtkImage representing the current clipboard\n+   * contents or null when no image can be provided.\n+   */\n+  private GtkImage provideImage()\n+  {\n+    Transferable contents = this.contents;\n+    if (contents == null || contents instanceof GtkSelection)\n+      return null;\n+\n+    try\n+      {\n+\treturn (GtkImage) contents.getTransferData(DataFlavor.imageFlavor);\n+      }\n+    catch (UnsupportedFlavorException ufe)\n+      {\n+      }\n+    catch (IOException ioe)\n+      {\n+      }\n+    catch (ClassCastException cce)\n+      {\n+      }\n+\n+    return null;\n+  }\n+\n+  /**\n+   * Called by the gtk+ clipboard when an application has requested a\n+   * uri-list.  Return a string array containing the URIs representing\n+   * the current clipboard contents or null when no URIs can be\n+   * provided.\n+   */\n+  private String[] provideURIs()\n   {\n-    selectionGet();\n+    Transferable contents = this.contents;\n+    if (contents == null || contents instanceof GtkSelection)\n+      return null;\n \n-    this.contents = contents;\n-    this.owner = owner;\n+    try\n+      {\n+\tList list = (List) contents.getTransferData\n+\t  (DataFlavor.javaFileListFlavor);\n+\tString[] uris = new String[list.size()];\n+\tint u = 0;\n+\tIterator it = list.iterator();\n+\twhile (it.hasNext())\n+\t  uris[u++] = ((File) it.next()).toURI().toString();\n+\treturn uris;\n+      }\n+    catch (UnsupportedFlavorException ufe)\n+      {\n+      }\n+    catch (IOException ioe)\n+      {\n+      }\n+    catch (ClassCastException cce)\n+      {\n+      }\n \n-    hasSelection = true;\n+    return null;\n   }\n \n-  synchronized void selectionClear()\n+  /**\n+   * Called by gtk+ clipboard when an application requests the given\n+   * target mime-type. Returns a byte array containing the requested\n+   * data, or null when the contents cannot be provided in the\n+   * requested target mime-type. Only called after any explicit text,\n+   * image or file/uri requests have been handled earlier and failed.\n+   */\n+  private byte[] provideContent(String target)\n   {\n-    hasSelection = false;\n+    // Sanity check. The callback could be triggered just after we\n+    // changed the clipboard.\n+    Transferable contents = this.contents;\n+    if (contents == null || contents instanceof GtkSelection)\n+      return null;\n+\n+    // XXX - We are being called from a gtk+ callback. Which means we\n+    // should return as soon as possible and not call arbitrary code\n+    // that could deadlock or go bonkers. But we don't really know\n+    // what DataTransfer contents object we are dealing with. Same for\n+    // the other provideXXX() methods.\n+    try\n+      {\n+\tDataFlavor flavor = new DataFlavor(target);\n+\tObject o = contents.getTransferData(flavor);\n+\n+\tif (o instanceof byte[])\n+\t  return (byte[]) o;\n+\n+\tif (o instanceof InputStream)\n+\t  {\n+\t    InputStream is = (InputStream) o;\n+\t    ByteArrayOutputStream baos = new ByteArrayOutputStream();\n+\t    byte[] bs = new byte[1024];\n+\t    int l = is.read(bs);\n+\t    while (l != -1)\n+\t      {\n+\t\tbaos.write(bs, 0, l);\n+\t\tl = is.read(bs);\n+\t      }\n+\t    return baos.toByteArray();\n+\t  }\n \n-    if (owner != null)\n+\tif (o instanceof Serializable)\n+\t  {\n+\t    ByteArrayOutputStream baos = new ByteArrayOutputStream();\n+\t    ObjectOutputStream oos = new ObjectOutputStream(baos);\n+\t    oos.writeObject(o);\n+\t    oos.close();\n+\t    return baos.toByteArray();\n+\t  }\n+      }\n+    catch (ClassNotFoundException cnfe)\n+      {\n+      }\n+    catch (UnsupportedFlavorException ufe)\n       {\n-\towner.lostOwnership(this, contents);\n-\towner = null;\n-\tcontents = null;\n       }\n+    catch (IOException ioe)\n+      {\n+      }\n+    catch (ClassCastException cce)\n+      {\n+      }\n+\n+    return null;\n   }\n \n-  native void initNativeState();\n-  static native void requestStringConversion();\n-  static native void selectionGet();\n+  /**\n+   * Initializes the gtk+ clipboard and caches any native side\n+   * structures needed. Returns whether or not the contents of the\n+   * Clipboard can be cached (gdk_display_supports_selection_notification).\n+   */\n+  private static native boolean initNativeState(String stringTarget,\n+\t\t\t\t\t\tString imageTarget,\n+\t\t\t\t\t\tString filesTarget);\n }"}, {"sha": "60e8371277fc0bcee8e14a842582eb4e756e87f9", "filename": "libjava/classpath/gnu/java/awt/peer/gtk/GtkComponentPeer.java", "status": "modified", "additions": 106, "deletions": 18, "changes": 124, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkComponentPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkComponentPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkComponentPeer.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -70,6 +70,9 @@\n import java.awt.image.ImageProducer;\n import java.awt.image.VolatileImage;\n import java.awt.peer.ComponentPeer;\n+import java.awt.peer.ContainerPeer;\n+import java.util.Timer;\n+import java.util.TimerTask;\n \n public class GtkComponentPeer extends GtkGenericPeer\n   implements ComponentPeer\n@@ -83,6 +86,8 @@ public class GtkComponentPeer extends GtkGenericPeer\n \n   boolean isInRepaint;\n \n+  static final Timer repaintTimer = new Timer (true);\n+\n   /* this isEnabled differs from Component.isEnabled, in that it\n      knows if a parent is disabled.  In that case Component.isEnabled \n      may return true, but our isEnabled will always return false */\n@@ -95,6 +100,7 @@ public class GtkComponentPeer extends GtkGenericPeer\n   native void gtkWidgetGetPreferredDimensions (int[] dim);\n   native void gtkWidgetGetLocationOnScreen (int[] point);\n   native void gtkWidgetSetCursor (int type);\n+  native void gtkWidgetSetCursorUnlocked (int type);\n   native void gtkWidgetSetBackground (int red, int green, int blue);\n   native void gtkWidgetSetForeground (int red, int green, int blue);\n   native void gtkWidgetSetSensitive (boolean sensitive);\n@@ -372,8 +378,26 @@ public void repaint (long tm, int x, int y, int width, int height)\n     if (x == 0 && y == 0 && width == 0 && height == 0)\n       return;\n \n-    q().postEvent (new PaintEvent (awtComponent, PaintEvent.UPDATE,\n-                                 new Rectangle (x, y, width, height)));\n+    repaintTimer.schedule(new RepaintTimerTask(x, y, width, height), tm);\n+  }\n+\n+  private class RepaintTimerTask extends TimerTask\n+  {\n+    private int x, y, width, height;\n+\n+    RepaintTimerTask(int x, int y, int width, int height)\n+    {\n+      this.x = x;\n+      this.y = y;\n+      this.width = width;\n+      this.height = height;\n+    }\n+\n+    public void run()\n+    {\n+      q().postEvent (new PaintEvent (awtComponent, PaintEvent.UPDATE,\n+                                     new Rectangle (x, y, width, height)));\n+    }\n   }\n \n   public void requestFocus ()\n@@ -396,7 +420,11 @@ public void setBackground (Color c)\n \n   public void setBounds (int x, int y, int width, int height)\n   {\n+    int new_x = x;\n+    int new_y = y;\n+\n     Component parent = awtComponent.getParent ();\n+    Component next_parent;\n \n     // Heavyweight components that are children of one or more\n     // lightweight containers have to be handled specially.  Because\n@@ -414,30 +442,44 @@ public void setBounds (int x, int y, int width, int height)\n       {\n \tlightweightChild = true;\n \n+        next_parent = parent.getParent ();\n+\n \ti = ((Container) parent).getInsets ();\n \n-\tx += parent.getX () + i.left;\n-\ty += parent.getY () + i.top;\n+        if (next_parent instanceof Window)\n+          {\n+            new_x += i.left;\n+            new_y += i.top;\n+          }\n+        else\n+          {\n+            new_x += parent.getX () + i.left;\n+            new_y += parent.getY () + i.top;\n+          }\n \n-\tparent = parent.getParent ();\n+\tparent = next_parent;\n       }\n \n     // We only need to convert from Java to GTK coordinates if we're\n     // placing a heavyweight component in a Window.\n     if (parent instanceof Window && !lightweightChild)\n       {\n-\tInsets insets = ((Window) parent).getInsets ();\n         GtkWindowPeer peer = (GtkWindowPeer) parent.getPeer ();\n+        // important: we want the window peer's insets here, not the\n+        // window's, since user sub-classes of Window can override\n+        // getInset and we only want to correct for the frame borders,\n+        // not for any user-defined inset values\n+        Insets insets = peer.getInsets ();\n+\n         int menuBarHeight = 0;\n         if (peer instanceof GtkFramePeer)\n           menuBarHeight = ((GtkFramePeer) peer).getMenuBarHeight ();\n \n-        // Convert from Java coordinates to GTK coordinates.\n-        setNativeBounds (x - insets.left, y - insets.top + menuBarHeight,\n-                         width, height);\n+        new_x = x - insets.left;\n+        new_y = y - insets.top + menuBarHeight;\n       }\n-    else\n-      setNativeBounds (x, y, width, height);\n+\n+    setNativeBounds (new_x, new_y, width, height);\n   }\n \n   void setCursor ()\n@@ -447,7 +489,10 @@ void setCursor ()\n \n   public void setCursor (Cursor cursor) \n   {\n-    gtkWidgetSetCursor (cursor.getType ());\n+    if (Thread.currentThread() == GtkToolkit.mainThread)\n+      gtkWidgetSetCursorUnlocked (cursor.getType ());\n+    else\n+      gtkWidgetSetCursor (cursor.getType ());\n   }\n \n   public void setEnabled (boolean b)\n@@ -480,16 +525,26 @@ public Color getBackground ()\n     return new Color (rgb[0], rgb[1], rgb[2]);\n   }\n \n+  public native void setVisibleNative (boolean b);\n+  public native void setVisibleNativeUnlocked (boolean b);\n+\n   public void setVisible (boolean b)\n   {\n-    if (b)\n-      show ();\n+    if (Thread.currentThread() == GtkToolkit.mainThread)\n+      setVisibleNativeUnlocked (b);\n     else\n-      hide ();\n+      setVisibleNative (b);\n+  }\n+\n+  public void hide ()\n+  {\n+    setVisible (false);\n   }\n \n-  public native void hide ();\n-  public native void show ();\n+  public void show ()\n+  {\n+    setVisible (true);\n+  }\n \n   protected void postMouseEvent(int id, long when, int mods, int x, int y, \n \t\t\t\tint clickCount, boolean popupTrigger) \n@@ -586,7 +641,8 @@ public void coalescePaintEvent (PaintEvent e)\n \n   public void updateCursorImmediately ()\n   {\n-    \n+    if (awtComponent.getCursor() != null)\n+      setCursor(awtComponent.getCursor());\n   }\n \n   public boolean handlesWheelScrolling ()\n@@ -648,4 +704,36 @@ public void destroyBuffers ()\n   {\n     backBuffer.flush();\n   }\n+  \n+  public String toString ()\n+  {\n+    return \"peer of \" + awtComponent.toString();\n+  }\n+  public Rectangle getBounds()\n+  {\n+      // FIXME: implement\n+    return null;\n+  }\n+  public void reparent(ContainerPeer parent)\n+  {\n+    // FIXME: implement\n+  \n+  }\n+  public void setBounds(int x, int y, int width, int height, int z)\n+  {\n+    // FIXME: implement\n+      setBounds (x, y, width, height);\n+   \n+  }\n+  public boolean isReparentSupported()\n+  {\n+    // FIXME: implement\n+\n+    return false;\n+  }\n+  public void layout()\n+  {\n+    // FIXME: implement\n+ \n+  }\n }"}, {"sha": "b035a9814c73123d0748f092f8109c356e9633c6", "filename": "libjava/classpath/gnu/java/awt/peer/gtk/GtkContainerPeer.java", "status": "modified", "additions": 17, "deletions": 4, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkContainerPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkContainerPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkContainerPeer.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -52,7 +52,6 @@ public class GtkContainerPeer extends GtkComponentPeer\n   implements ContainerPeer\n {\n   Container c;\n-  boolean isValidating;\n \n   public GtkContainerPeer(Container c)\n   {\n@@ -62,7 +61,6 @@ public GtkContainerPeer(Container c)\n \n   public void beginValidate ()\n   {\n-    isValidating = true;\n   }\n \n   public void endValidate ()\n@@ -90,8 +88,6 @@ public void endValidate ()\n         if (!(awtComponent instanceof Window))\n           setParentAndBounds ();\n       }\n-\n-    isValidating = false;\n   }\n \n   public Insets getInsets() \n@@ -153,4 +149,21 @@ public void setBackground (Color c)\n           comp.getPeer().setBackground(c);\n       }\n   }\n+\n+  public boolean isRestackSupported()\n+  {\n+      // FIXME: implement\n+    return false;\n+  }\n+\n+  public void cancelPendingPaint(int x, int y, int width, int height)\n+  {\n+    // FIXME: implement\n+  }\n+\n+  public void restack()\n+  {\n+      //FIXME: implement\n+    \n+  }\n }"}, {"sha": "333407b247f31f15134a3ef9f9992d83e8be00a1", "filename": "libjava/classpath/gnu/java/awt/peer/gtk/GtkFileDialogPeer.java", "status": "modified", "additions": 18, "deletions": 10, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkFileDialogPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkFileDialogPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkFileDialogPeer.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -42,6 +42,7 @@\n import java.awt.FileDialog;\n import java.awt.Graphics;\n import java.awt.Window;\n+import java.awt.event.ComponentEvent;\n import java.awt.peer.FileDialogPeer;\n import java.io.File;\n import java.io.FilenameFilter;\n@@ -54,7 +55,7 @@ public class GtkFileDialogPeer extends GtkDialogPeer implements FileDialogPeer\n   private String currentDirectory = null;\n   private FilenameFilter filter;\n \n-  native void create (GtkContainerPeer parent);\n+  native void create (GtkContainerPeer parent, int mode);\n   native void connectSignals ();\n   native void nativeSetFile (String file);\n   public native String nativeGetDirectory();\n@@ -63,7 +64,8 @@ public class GtkFileDialogPeer extends GtkDialogPeer implements FileDialogPeer\n \n   public void create()\n   {\n-    create((GtkContainerPeer) awtComponent.getParent().getPeer());\n+    create((GtkContainerPeer) awtComponent.getParent().getPeer(),\n+           ((FileDialog) awtComponent).getMode());\n \n     FileDialog fd = (FileDialog) awtComponent;\n \n@@ -87,10 +89,10 @@ void setComponentBounds ()\n       {\n         int[] dims = new int[2];\n         gtkWidgetGetPreferredDimensions (dims);\n-        ((GtkFileDialogPeer) this).setBoundsCallback ((Window) awtComponent,\n-                                                      awtComponent.getX (),\n-                                                      awtComponent.getY (),\n-                                                      dims[0], dims[1]);\n+\n+        if (dims[0] != awtComponent.getWidth()\n+            || dims[1] != awtComponent.getHeight())\n+          awtComponent.setSize(dims[0], dims[1]);\n       }\n     super.setComponentBounds ();\n   }\n@@ -155,6 +157,7 @@ public void setFilenameFilter (FilenameFilter filter)\n      GtkFileFilterInfo object and send it to this method, which will\n      in turn call the filter's accept() method and give back the return\n      value. */\n+  // called back by native side: filename_filter_cb\n   boolean filenameFilterCallback (String fullname) {\n     String filename = fullname.substring(fullname.lastIndexOf(FS) + 1);\n     String dirname = fullname.substring(0, fullname.lastIndexOf(FS));\n@@ -167,20 +170,25 @@ public Graphics getGraphics ()\n     // GtkFileDialog will repaint by itself\n     return null;\n   }\n-  \n+\n+  // called back by native side: handle_response_cb\n+  // only called from the GTK thread\n   void gtkHideFileDialog () \n   {\n+    // hide calls back the peer's setVisible method, so locking is a\n+    // problem.\n     ((Dialog) awtComponent).hide();\n   }\n   \n+  // called back by native side: handle_response_cb\n   void gtkDisposeFileDialog () \n   {\n     ((Dialog) awtComponent).dispose();\n   }\n \n-  /* Callback to set the file and directory values when the user is finished\n-   * with the dialog.\n-   */\n+  // Callback to set the file and directory values when the user is finished\n+  // with the dialog.\n+  // called back by native side: handle_response_cb\n   void gtkSetFilename (String fileName)\n   {\n     FileDialog fd = (FileDialog) awtWidget;"}, {"sha": "6eb90ffa0bd17a7543f645dfd63dbf45fd641667", "filename": "libjava/classpath/gnu/java/awt/peer/gtk/GtkFramePeer.java", "status": "modified", "additions": 42, "deletions": 20, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkFramePeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkFramePeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkFramePeer.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -44,6 +44,7 @@\n import java.awt.MenuBar;\n import java.awt.Rectangle;\n import java.awt.Window;\n+import java.awt.event.ComponentEvent;\n import java.awt.event.PaintEvent;\n import java.awt.image.ColorModel;\n import java.awt.peer.FramePeer;\n@@ -55,6 +56,7 @@ public class GtkFramePeer extends GtkWindowPeer\n   private int menuBarHeight;\n   private MenuBarPeer menuBar;\n   native int getMenuBarHeight (MenuBarPeer bar);\n+  native void setMenuBarWidthUnlocked (MenuBarPeer bar, int width);\n   native void setMenuBarWidth (MenuBarPeer bar, int width);\n   native void setMenuBarPeer (MenuBarPeer bar);\n   native void removeMenuBarPeer ();\n@@ -117,6 +119,17 @@ else if (bar != null && menuBar != null)\n \n   public void setBounds (int x, int y, int width, int height)\n   {\n+    // prevent window_configure_cb -> awtComponent.setSize ->\n+    // peer.setBounds -> nativeSetBounds self-deadlock on GDK lock.\n+    if (Thread.currentThread() == GtkToolkit.mainThread)\n+      {\n+        int menuBarWidth = width - insets.left - insets.right;\n+        if (menuBar != null && menuBarWidth > 0)\n+          setMenuBarWidthUnlocked (menuBar, menuBarWidth);\n+\n+        return;\n+      }\n+\n     int menuBarWidth = width - insets.left - insets.right;\n     if (menuBar != null && menuBarWidth > 0)\n       setMenuBarWidth (menuBar, menuBarWidth);\n@@ -192,31 +205,25 @@ public Graphics getGraphics ()\n   \n   protected void postConfigureEvent (int x, int y, int width, int height)\n   {\n-    int frame_x = x - insets.left;\n-    // Since insets.top includes the MenuBar height, we need to add back\n-    // the MenuBar height to the frame's y position.\n-    // If no MenuBar exists in this frame, the MenuBar height will be 0.\n-    int frame_y = y - insets.top + menuBarHeight;\n     int frame_width = width + insets.left + insets.right;\n-    // Ditto as above. Since insets.top already includes the MenuBar's height,\n-    // we need to subtract the MenuBar's height from the top inset.\n+    // Since insets.top already includes the MenuBar's height, we need\n+    // to subtract the MenuBar's height from the top inset.\n     int frame_height = height + insets.top + insets.bottom - menuBarHeight;\n-    if (frame_x != awtComponent.getX()\n-        || frame_y != awtComponent.getY()\n-        || frame_width != awtComponent.getWidth()\n+\n+    if (frame_width != awtComponent.getWidth()\n         || frame_height != awtComponent.getHeight())\n-      {\n-        if (frame_width != awtComponent.getWidth() && menuBar != null\n-            && width > 0)\n-          setMenuBarWidth (menuBar, width);\n+      awtComponent.setSize(frame_width, frame_height);\n \n-        setBoundsCallback ((Window) awtComponent,\n-                           frame_x,\n-                           frame_y,\n-                           frame_width,\n-                           frame_height);\n+    int frame_x = x - insets.left;\n+    // Likewise, since insets.top includes the MenuBar height, we need\n+    // to add back the MenuBar height to the frame's y position.  If\n+    // no MenuBar exists in this frame, the MenuBar height will be 0.\n+    int frame_y = y - insets.top + menuBarHeight;\n \n-        awtComponent.validate();\n+    if (frame_x != awtComponent.getX()\n+        || frame_y != awtComponent.getY())\n+      {\n+        // awtComponent.setLocation(frame_x, frame_y);\n       }\n   }\n \n@@ -251,6 +258,21 @@ public void setMaximizedBounds (Rectangle r)\n   {\n \n   }\n+  public void setBoundsPrivate(int x, int y, int width, int height)\n+  {\n+    // TODO Auto-generated method stub\n+    \n+  }\n+  public void updateAlwaysOnTop()\n+  {\n+    // TODO Auto-generated method stub\n+    \n+  }\n+  public boolean requestWindowFocus()\n+  {\n+    // TODO Auto-generated method stub\n+    return false;\n+  }\n }\n \n "}, {"sha": "82a346304eaa358de0af642f40994e2fdcfe2d1e", "filename": "libjava/classpath/gnu/java/awt/peer/gtk/GtkImage.java", "status": "modified", "additions": 97, "deletions": 3, "changes": 100, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkImage.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkImage.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkImage.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -51,7 +51,10 @@\n import java.io.IOException;\n import java.util.Hashtable;\n import java.util.Vector;\n-import gnu.classpath.RawData;\n+import java.io.ByteArrayOutputStream;\n+import java.io.BufferedInputStream;\n+import java.net.URL;\n+import gnu.classpath.Pointer;\n \n /**\n  * GtkImage - wraps a GdkPixbuf or GdkPixmap.\n@@ -87,7 +90,7 @@ public class GtkImage extends Image\n   /**\n    * Pointer to the GdkPixbuf\n    */\n-  RawData pixmap;\n+  Pointer pixmap;\n \n   /**\n    * Observer queue.\n@@ -129,10 +132,15 @@ public class GtkImage extends Image\n   private native void setPixels(int[] pixels);\n \n   /**\n-   * Loads an image using gdk-pixbuf.\n+   * Loads an image using gdk-pixbuf from a file.\n    */\n   private native boolean loadPixbuf(String name);\n \n+  /**\n+   * Loads an image using gdk-pixbuf from data.\n+   */\n+  private native boolean loadImageFromData(byte[] data);\n+\n   /**\n    * Allocates a Gtk Pixbuf or pixmap\n    */\n@@ -186,6 +194,21 @@ public GtkImage (ImageProducer producer)\n     offScreen = false;\n   }\n \n+  /**\n+   * Constructs a blank GtkImage.  This is called when\n+   * GtkToolkit.createImage (String) is called with an empty string\n+   * argument (\"\").  A blank image is loaded immediately upon\n+   * construction and has width -1 and height -1.\n+   */\n+  public GtkImage ()\n+  {\n+    isLoaded = true;\n+    observers = null;\n+    offScreen = false;\n+    props = new Hashtable();\n+    errorLoading = false;\n+  }\n+\n   /**\n    * Constructs a GtkImage by loading a given file.\n    *\n@@ -210,6 +233,58 @@ public GtkImage (String filename)\n     props = new Hashtable();\n   }\n \n+  /**\n+   * Constructs a GtkImage from a byte array of an image file.\n+   *\n+   * @throws IllegalArgumentException if the image could not be\n+   * loaded.\n+   */\n+  public GtkImage (byte[] data)\n+  {\n+    if (loadImageFromData (data) != true)\n+      throw new IllegalArgumentException (\"Couldn't load image.\");\n+\n+    isLoaded = true;\n+    observers = null;\n+    offScreen = false;\n+    props = new Hashtable();\n+    errorLoading = false;\n+  }\n+\n+  /**\n+   * Constructs a GtkImage from a URL. May result in an error image.\n+   */\n+  public GtkImage (URL url)\n+  {\n+    isLoaded = false;\n+    observers = new Vector();\n+    errorLoading = false;\n+    if( url == null)\n+      return;\n+    ByteArrayOutputStream baos = new ByteArrayOutputStream (5000);\n+    try\n+      {\n+        BufferedInputStream bis = new BufferedInputStream (url.openStream());\n+\n+        byte[] buf = new byte[5000];\n+        int n = 0;\n+\n+        while ((n = bis.read(buf)) != -1)\n+\t  baos.write(buf, 0, n); \n+        bis.close();\n+      }\n+    catch(IOException e)\n+      {\n+\tthrow new IllegalArgumentException (\"Couldn't load image.\");\n+      }\n+    if (loadImageFromData (baos.toByteArray()) != true)\n+      throw new IllegalArgumentException (\"Couldn't load image.\");\n+\n+    isLoaded = true;\n+    observers = null;\n+    props = new Hashtable();\n+  }\n+\n   /**\n    * Constructs an empty GtkImage.\n    */\n@@ -240,6 +315,25 @@ private GtkImage (GtkImage src, int width, int height, int hints)\n     createScaledPixmap(src, hints);\n   }\n \n+  /**\n+   * Package private constructor to create a GtkImage from a given\n+   * PixBuf pointer.\n+   */\n+  GtkImage (Pointer pixbuf)\n+  {\n+    pixmap = pixbuf;\n+    createFromPixbuf();\n+    isLoaded = true;\n+    observers = null;\n+    offScreen = false;\n+    props = new Hashtable();\n+  }\n+\n+  /**\n+   * Native helper function for constructor that takes a pixbuf Pointer.\n+   */\n+  private native void createFromPixbuf();\n+\n   /**\n    * Callback from the image consumer.\n    */"}, {"sha": "299f01dcaa6bb7160d7fc63c5adf93c0194e9e52", "filename": "libjava/classpath/gnu/java/awt/peer/gtk/GtkImageConsumer.java", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkImageConsumer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkImageConsumer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkImageConsumer.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -45,6 +45,7 @@\n import java.awt.image.ImageConsumer;\n import java.awt.image.ImageObserver;\n import java.awt.image.ImageProducer;\n+import java.awt.image.MemoryImageSource;\n import java.util.Hashtable;\n import java.util.Vector;\n \n@@ -70,7 +71,10 @@ public GtkImageConsumer(GtkImage target, ImageProducer source)\n \n   public synchronized void imageComplete (int status)\n   {\n-    source.removeConsumer(this);\n+    // we need to reuse the pixel cache for memory image sources since\n+    // a memory image's backing array can be updated \"live\".\n+    if (!(source instanceof MemoryImageSource))\n+      source.removeConsumer(this);\n     target.setImage(width, height, pixelCache, properties);\n   }\n "}, {"sha": "3d099e9ca007e6c6ea2b408851e6419cab1ee8ee", "filename": "libjava/classpath/gnu/java/awt/peer/gtk/GtkLabelPeer.java", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkLabelPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkLabelPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkLabelPeer.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -41,6 +41,9 @@\n import java.awt.Label;\n import java.awt.peer.LabelPeer;\n \n+// A composite widget.  GtkLabels have transparent backgrounds.  An\n+// AWT Label is opaque.  To compensate, a GtkLabelPeer is a GtkLabel\n+// packed in a GtkEventBox.\n public class GtkLabelPeer extends GtkComponentPeer\n     implements LabelPeer\n {\n@@ -51,6 +54,10 @@ public class GtkLabelPeer extends GtkComponentPeer\n   public native void setText(String text);\n   native void setNativeBounds (int x, int y, int width, int height);\n \n+  // Because this is a composite widget, we need to retrieve the\n+  // GtkLabel's preferred dimensions, not the enclosing GtkEventBox's.\n+  native void gtkWidgetGetPreferredDimensions (int[] dim);\n+\n   void create ()\n   {\n     Label label = (Label) awtComponent;"}, {"sha": "a1a1cbd6d7c5bf675077e015763a1938d06891c7", "filename": "libjava/classpath/gnu/java/awt/peer/gtk/GtkMenuBarPeer.java", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkMenuBarPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkMenuBarPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkMenuBarPeer.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -77,4 +77,9 @@ public void addHelpMenu (Menu menu)\n   }\n \n   public native void delMenu(int index);\n+\n+  public void addMenu (Menu m)\n+  {\n+    // FIXME: implement\n+  }\n }"}, {"sha": "4c6335933a81c241c4e4112dab783abfd94faa55", "filename": "libjava/classpath/gnu/java/awt/peer/gtk/GtkMenuComponentPeer.java", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkMenuComponentPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkMenuComponentPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkMenuComponentPeer.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -38,6 +38,7 @@\n \n package gnu.java.awt.peer.gtk;\n \n+import java.awt.Font;\n import java.awt.peer.MenuComponentPeer;\n \n public class GtkMenuComponentPeer extends GtkGenericPeer\n@@ -60,4 +61,9 @@ public GtkMenuComponentPeer (Object awtWidget)\n   }\n \n   public native void dispose();\n+\n+  public void setFont(Font font)\n+  {\n+  // FIXME: implement  \n+  }\n }"}, {"sha": "fabcf1f090be56af5f6ea4fb028a6356053ca6f7", "filename": "libjava/classpath/gnu/java/awt/peer/gtk/GtkMenuPeer.java", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkMenuPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkMenuPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkMenuPeer.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -100,4 +100,9 @@ public void addItem (MenuItemPeer item, MenuShortcut ms)\n   }\n \n   public native void delItem(int index);\n+\n+  public void addSeparator()\n+  {\n+    // FIXME: implement\n+  }\n }"}, {"sha": "e6896c9136c34eedbffd4d8b8d95dff8e10d5853", "filename": "libjava/classpath/gnu/java/awt/peer/gtk/GtkTextAreaPeer.java", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkTextAreaPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkTextAreaPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkTextAreaPeer.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -43,6 +43,7 @@\n import java.awt.FontMetrics;\n import java.awt.Rectangle;\n import java.awt.TextArea;\n+import java.awt.im.InputMethodRequests;\n import java.awt.peer.TextAreaPeer;\n import java.awt.peer.TextComponentPeer;\n \n@@ -209,4 +210,10 @@ public void insertText (String str, int pos)\n   {\n     insert (str, pos);\n   }\n+\n+  public InputMethodRequests getInputMethodRequests()\n+  {\n+      // FIXME: implement\n+    return null;\n+  }\n }"}, {"sha": "4afdae82e5e24a6399a788fc21c9106562881d01", "filename": "libjava/classpath/gnu/java/awt/peer/gtk/GtkTextFieldPeer.java", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkTextFieldPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkTextFieldPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkTextFieldPeer.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -45,6 +45,7 @@\n import java.awt.Rectangle;\n import java.awt.TextField;\n import java.awt.event.KeyEvent;\n+import java.awt.im.InputMethodRequests;\n import java.awt.peer.TextFieldPeer;\n import java.awt.peer.TextComponentPeer;\n \n@@ -193,4 +194,9 @@ public void handleEvent (AWTEvent e)\n \n     super.handleEvent (e);\n   }\n+  public InputMethodRequests getInputMethodRequests()\n+  {\n+      // FIXME: implement\n+    return null;\n+  }\n }"}, {"sha": "0889d85f4bcd556aef1d5aeefe16084b59a1be03", "filename": "libjava/classpath/gnu/java/awt/peer/gtk/GtkToolkit.java", "status": "modified", "additions": 24, "deletions": 18, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkToolkit.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkToolkit.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkToolkit.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -88,9 +88,9 @@ public class GtkToolkit extends gnu.java.awt.ClasspathToolkit\n {\n   Hashtable containers = new Hashtable();\n   static EventQueue q;\n-  static Clipboard systemClipboard;\n   static boolean useGraphics2dSet;\n   static boolean useGraphics2d;\n+  static Thread mainThread;\n \n   public static boolean useGraphics2D()\n   {\n@@ -121,11 +121,19 @@ else if (Boolean.valueOf(portNatSyncProp).booleanValue())\n       portableNativeSync = 0;   // false\n \n     gtkInit(portableNativeSync);\n+\n+    mainThread = new Thread (\"GTK main thread\")\n+      {\n+        public void run ()\n+        {\n+          gtkMain ();\n+        }\n+      };\n+    mainThread.start ();\n   }\n \n   public GtkToolkit ()\n   {\n-    systemClipboard = new GtkClipboard ();\n   }\n \n   public native void beep();\n@@ -244,6 +252,9 @@ private Image bufferedImageOrError(BufferedImage b)\n \n   public Image createImage (String filename)\n   {\n+    if (filename.length() == 0)\n+      return new GtkImage ();\n+\n     if (useGraphics2D())\n       return bufferedImageOrError(GdkPixbufDecoder.createBufferedImage (filename));\n     else\n@@ -255,11 +266,7 @@ public Image createImage (URL url)\n     if (useGraphics2D())\n       return bufferedImageOrError(GdkPixbufDecoder.createBufferedImage (url));\n     else\n-      {\n-        GdkPixbufDecoder d = new GdkPixbufDecoder (url);\n-        GtkImage image = new GtkImage (d);\n-        return image;        \n-      }\n+      return new GtkImage (url);\n   }\n \n   public Image createImage (ImageProducer producer) \n@@ -279,11 +286,9 @@ public Image createImage (byte[] imagedata, int imageoffset,\n                                                                         imagelength));\n     else\n       {\n-        GdkPixbufDecoder d = new GdkPixbufDecoder (imagedata,\n-                                                   imageoffset, \n-                                                   imagelength);\n-        GtkImage image = new GtkImage (d);\n-        return image;        \n+        byte[] datacopy = new byte[imagelength];\n+        System.arraycopy (imagedata, imageoffset, datacopy, 0, imagelength);\n+        return new GtkImage (datacopy);\n       }\n   }\n   \n@@ -395,7 +400,11 @@ public Dimension getScreenSize ()\n \n   public Clipboard getSystemClipboard() \n   {\n-    return systemClipboard;\n+    SecurityManager secman = System.getSecurityManager();\n+    if (secman != null)\n+      secman.checkSystemClipboardAccess();\n+\n+    return GtkClipboard.getInstance();\n   }\n \n   /**\n@@ -628,7 +637,7 @@ public Rectangle getBounds()\n \n   public GraphicsEnvironment getLocalGraphicsEnvironment()\n   {\n-    return new GdkGraphicsEnvironment(this);\n+    return new GdkGraphicsEnvironment();\n   }\n \n   public Font createFont(int format, InputStream stream)\n@@ -646,8 +655,5 @@ public void registerImageIOSpis(IIORegistry reg)\n     GdkPixbufDecoder.registerSpis(reg);\n   }\n \n-  public native boolean nativeQueueEmpty();\n-  public native void wakeNativeQueue();  \n-  public native void iterateNativeQueue(EventQueue locked, boolean block);\n-\n+  public static native void gtkMain();\n } // class GtkToolkit"}, {"sha": "c84d51037e3a1aea560b078406428c01daadf4c6", "filename": "libjava/classpath/gnu/java/awt/peer/gtk/GtkWindowPeer.java", "status": "modified", "additions": 44, "deletions": 21, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkWindowPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkWindowPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkWindowPeer.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -41,6 +41,7 @@\n import java.awt.Component;\n import java.awt.Frame;\n import java.awt.Window;\n+import java.awt.event.ComponentEvent;\n import java.awt.event.WindowEvent;\n import java.awt.peer.WindowPeer;\n \n@@ -104,6 +105,9 @@ void setVisibleAndEnabled ()\n   {\n   }\n \n+  public native void setVisibleNative (boolean b);\n+  public native void setVisibleNativeUnlocked (boolean b);\n+\n   native void connectSignals ();\n \n   public GtkWindowPeer (Window window)\n@@ -115,14 +119,27 @@ public GtkWindowPeer (Window window)\n   public native void toFront();\n \n   native void nativeSetBounds (int x, int y, int width, int height);\n+  native void nativeSetBoundsUnlocked (int x, int y, int width, int height);\n \n   public void setBounds (int x, int y, int width, int height)\n   {\n+    // prevent window_configure_cb -> awtComponent.setSize ->\n+    // peer.setBounds -> nativeSetBounds self-deadlock on GDK lock.\n+    if (Thread.currentThread() == GtkToolkit.mainThread)\n+      return;\n+\n     nativeSetBounds (x, y,\n \t\t     width - insets.left - insets.right,\n \t\t     height - insets.top - insets.bottom);\n   }\n \n+  public void setBoundsUnlocked (int x, int y, int width, int height)\n+  {\n+    nativeSetBoundsUnlocked (x, y,\n+                             width - insets.left - insets.right,\n+                             height - insets.top - insets.bottom);\n+  }\n+\n   public void setTitle (String title)\n   {\n     gtkWindowSetTitle (title);\n@@ -140,10 +157,6 @@ public void setResizable (boolean resizable)\n     gtkWindowSetResizable (resizable);\n   }\n \n-  native void setBoundsCallback (Window window,\n-\t\t\t\t int x, int y,\n-\t\t\t\t int width, int height);\n-\n   protected void postInsetsChangedEvent (int top, int left,\n \t\t\t\t\t int bottom, int right)\n   {\n@@ -153,36 +166,36 @@ protected void postInsetsChangedEvent (int top, int left,\n     insets.right = right;\n   }\n \n+  // called back by native side: window_configure_cb\n+  // only called from GTK thread\n   protected void postConfigureEvent (int x, int y, int width, int height)\n   {\n-    int frame_x = x - insets.left;\n-    int frame_y = y - insets.top;\n     int frame_width = width + insets.left + insets.right;\n     int frame_height = height + insets.top + insets.bottom;\n \n-    if (frame_x != awtComponent.getX()\n-\t|| frame_y != awtComponent.getY()\n-\t|| frame_width != awtComponent.getWidth()\n+    if (frame_width != awtComponent.getWidth()\n \t|| frame_height != awtComponent.getHeight())\n-      {\n-        setBoundsCallback ((Window) awtComponent,\n-                           frame_x, frame_y, frame_width, frame_height);\n+      awtComponent.setSize(frame_width, frame_height);\n \n-        awtComponent.validate();\n+    int frame_x = x - insets.left;\n+    int frame_y = y - insets.top;\n+\n+    if (frame_x != awtComponent.getX()\n+\t|| frame_y != awtComponent.getY())\n+      {\n+        // awtComponent.setLocation(frame_x, frame_y);\n       }\n   }\n \n-  native void nativeSetVisible (boolean b);\n-  public void setVisible (boolean b)\n+  public void show ()\n   {\n     // Prevent the window manager from automatically placing this\n     // window when it is shown.\n-    if (b)\n-      setBounds (awtComponent.getX(),\n-\t\t awtComponent.getY(),\n-\t\t awtComponent.getWidth(),\n-\t\t awtComponent.getHeight());\n-    nativeSetVisible (b);\n+    setBounds (awtComponent.getX(),\n+\t       awtComponent.getY(),\n+\t       awtComponent.getWidth(),\n+\t       awtComponent.getHeight());\n+    setVisible (true);\n   }\n \n   void postWindowEvent (int id, Window opposite, int newState)\n@@ -209,4 +222,14 @@ else if (id == WindowEvent.WINDOW_STATE_CHANGED)\n     else\n       q().postEvent (new WindowEvent ((Window) awtComponent, id, opposite));\n   }\n+  public void updateAlwaysOnTop()\n+  {\n+    // TODO Auto-generated method stub\n+    \n+  }\n+  public boolean requestWindowFocus()\n+  {\n+    // TODO Auto-generated method stub\n+    return false;\n+  }\n }"}, {"sha": "673ca2522dfcba5aa364de0902f433b02eb0730f", "filename": "libjava/classpath/gnu/java/nio/FileLockImpl.java", "status": "modified", "additions": 32, "deletions": 10, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2FFileLockImpl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2FFileLockImpl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2FFileLockImpl.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -1,5 +1,5 @@\n-/* FileLockImpl.java -- \n-   Copyright (C) 2002, 2004 Free Software Foundation, Inc.\n+/* FileLockImpl.java -- FileLock associated with a FileChannelImpl.\n+   Copyright (C) 2002, 2004, 2005 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -44,20 +44,29 @@\n import java.nio.channels.FileLock;\n \n /**\n+ * A FileLock associated with a FileChannelImpl.\n+ *\n  * @author Michael Koch\n  * @since 1.4\n  */\n-public class FileLockImpl extends FileLock\n+public final class FileLockImpl extends FileLock\n {\n-  private FileChannelImpl ch;\n-  \n+  /**\n+   * Whether or not this lock is valid, false when channel is closed or\n+   * release has been explicitly called.\n+   */\n+  private boolean valid;\n+\n   public FileLockImpl (FileChannelImpl channel, long position,\n                        long size, boolean shared)\n   {\n     super (channel, position, size, shared);\n-    ch = channel;\n+    valid = true;\n   }\n \n+  /**\n+   * Releases this lock.\n+   */\n   protected void finalize()\n   {\n     try\n@@ -70,13 +79,26 @@ protected void finalize()\n       }\n   }\n   \n-  public boolean isValid ()\n+  /**\n+   * Whether or not this lock is valid, false when channel is closed or\n+   * release has been explicitly called.\n+   */\n+  public boolean isValid()\n   {\n-    return channel().isOpen();\n+    if (valid)\n+      valid = channel().isOpen();\n+    return valid;\n   }\n \n-  public synchronized void release () throws IOException\n+  /**\n+   * Releases the lock if it is still valid. Marks this lock as invalid.\n+   */\n+  public void release() throws IOException\n   {\n-    ch.unlock(position(), size());\n+    if (isValid())\n+      {\n+\tvalid = false;\n+\t((FileChannelImpl) channel()).unlock(position(), size());\n+      }\n   }\n }"}, {"sha": "0ee5d3fc28721310c5c060eee3b399a4cfb14755", "filename": "libjava/classpath/gnu/java/nio/channels/FileChannelImpl.java", "status": "modified", "additions": 59, "deletions": 31, "changes": 90, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fchannels%2FFileChannelImpl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fchannels%2FFileChannelImpl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fchannels%2FFileChannelImpl.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -73,6 +73,10 @@ public final class FileChannelImpl extends FileChannel\n   public static final int SYNC   = 16;\n   public static final int DSYNC  = 32;\n \n+  public static FileChannelImpl in;\n+  public static FileChannelImpl out;\n+  public static FileChannelImpl err;\n+\n   private static native void init();\n \n   static\n@@ -83,6 +87,10 @@ public final class FileChannelImpl extends FileChannel\n       }\n     \n     init();\n+\n+    in  = new FileChannelImpl(0, READ);\n+    out = new FileChannelImpl(1, WRITE);\n+    err = new FileChannelImpl(2, WRITE);\n   }\n \n   /**\n@@ -97,6 +105,8 @@ public final class FileChannelImpl extends FileChannel\n \n   private int mode;\n \n+  final String description;\n+\n   /* Open a file.  MODE is a combination of the above mode flags. */\n   /* This is a static factory method, so that VM implementors can decide\n    * substitute subclasses of FileChannelImpl. */\n@@ -109,7 +119,8 @@ public static FileChannelImpl create(File file, int mode)\n   private FileChannelImpl(File file, int mode)\n     throws FileNotFoundException\n   {\n-    final String path = file.getPath();\n+    String path = file.getPath();\n+    description = path;\n     fd = open (path, mode);\n     this.mode = mode;\n \n@@ -126,21 +137,26 @@ private FileChannelImpl(File file, int mode)\n \t      /* ignore it */\n \t  }\n \n-\tthrow new FileNotFoundException(path + \" is a directory\");\n+\tthrow new FileNotFoundException(description + \" is a directory\");\n       }\n   }\n \n-  /* Used by init() (native code) */\n+  /**\n+   * Constructor for default channels in, out and err.\n+   *\n+   * Used by init() (native code).\n+   *\n+   * @param fd the file descriptor (0, 1, 2 for stdin, stdout, stderr).\n+   *\n+   * @param mode READ or WRITE\n+   */\n   FileChannelImpl (int fd, int mode)\n   {\n     this.fd = fd;\n     this.mode = mode;\n+    this.description = \"descriptor(\" + fd + \")\";\n   }\n \n-  public static FileChannelImpl in;\n-  public static FileChannelImpl out;\n-  public static FileChannelImpl err;\n-\n   private native int open (String path, int mode) throws FileNotFoundException;\n \n   public native int available () throws IOException;\n@@ -179,7 +195,7 @@ public int read (ByteBuffer dst, long position)\n     throws IOException\n   {\n     if (position < 0)\n-      throw new IllegalArgumentException ();\n+      throw new IllegalArgumentException (\"position: \" + position);\n     long oldPosition = implPosition ();\n     position (position);\n     int result = read(dst);\n@@ -230,7 +246,7 @@ public int write (ByteBuffer src, long position)\n     throws IOException\n   {\n     if (position < 0)\n-      throw new IllegalArgumentException ();\n+      throw new IllegalArgumentException (\"position: \" + position);\n \n     if (!isOpen ())\n       throw new ClosedChannelException ();\n@@ -288,10 +304,11 @@ else if (mode == MapMode.READ_WRITE || mode == MapMode.PRIVATE)\n \t  throw new NonWritableChannelException();\n       }\n     else\n-      throw new IllegalArgumentException ();\n+      throw new IllegalArgumentException (\"mode: \" + mode);\n     \n     if (position < 0 || size < 0 || size > Integer.MAX_VALUE)\n-      throw new IllegalArgumentException ();\n+      throw new IllegalArgumentException (\"position: \" + position\n+\t\t\t\t\t  + \", size: \" + size);\n     return mapImpl(nmode, position, (int) size);\n   }\n \n@@ -336,7 +353,8 @@ public long transferTo (long position, long count,\n   {\n     if (position < 0\n         || count < 0)\n-      throw new IllegalArgumentException ();\n+      throw new IllegalArgumentException (\"position: \" + position\n+\t\t\t\t\t  + \", count: \" + count);\n \n     if (!isOpen ())\n       throw new ClosedChannelException ();\n@@ -399,7 +417,8 @@ public long transferFrom (ReadableByteChannel src, long position,\n   {\n     if (position < 0\n         || count < 0)\n-      throw new IllegalArgumentException ();\n+      throw new IllegalArgumentException (\"position: \" + position\n+\t\t\t\t\t  + \", count: \" + count);\n \n     if (!isOpen ())\n       throw new ClosedChannelException ();\n@@ -424,24 +443,31 @@ public long transferFrom (ReadableByteChannel src, long position,\n     return total;\n   }\n \n-  public FileLock tryLock (long position, long size, boolean shared)\n+  // Shared sanity checks between lock and tryLock methods.\n+  private void lockCheck(long position, long size, boolean shared)\n     throws IOException\n   {\n     if (position < 0\n         || size < 0)\n-      throw new IllegalArgumentException ();\n+      throw new IllegalArgumentException (\"position: \" + position\n+\t\t\t\t\t  + \", size: \" + size);\n \n     if (!isOpen ())\n-      throw new ClosedChannelException ();\n+      throw new ClosedChannelException();\n \n-    if (shared && (mode & READ) == 0)\n-      throw new NonReadableChannelException ();\n-\t\n-    if (!shared && (mode & WRITE) == 0)\n-      throw new NonWritableChannelException ();\n+    if (shared && ((mode & READ) == 0))\n+      throw new NonReadableChannelException();\n \t\n+    if (!shared && ((mode & WRITE) == 0))\n+      throw new NonWritableChannelException();\n+  }\n+\n+  public FileLock tryLock (long position, long size, boolean shared)\n+    throws IOException\n+  {\n+    lockCheck(position, size, shared);\n+\n     boolean completed = false;\n-    \n     try\n       {\n \tbegin();\n@@ -468,15 +494,9 @@ private native boolean lock(long position, long size,\n   public FileLock lock (long position, long size, boolean shared)\n     throws IOException\n   {\n-    if (position < 0\n-        || size < 0)\n-      throw new IllegalArgumentException ();\n-\n-    if (!isOpen ())\n-      throw new ClosedChannelException ();\n+    lockCheck(position, size, shared);\n \n     boolean completed = false;\n-\n     try\n       {\n \tboolean lockable = lock(position, size, shared, true);\n@@ -504,7 +524,7 @@ public FileChannel position (long newPosition)\n     throws IOException\n   {\n     if (newPosition < 0)\n-      throw new IllegalArgumentException ();\n+      throw new IllegalArgumentException (\"newPostition: \" + newPosition);\n \n     if (!isOpen ())\n       throw new ClosedChannelException ();\n@@ -519,7 +539,7 @@ public FileChannel truncate (long size)\n     throws IOException\n   {\n     if (size < 0)\n-      throw new IllegalArgumentException ();\n+      throw new IllegalArgumentException (\"size: \" + size);\n \n     if (!isOpen ())\n       throw new ClosedChannelException ();\n@@ -532,4 +552,12 @@ public FileChannel truncate (long size)\n \n     return this;\n   }\n+\n+  public String toString()\n+  {\n+    return (this.getClass()\n+\t    + \"[fd=\" + fd\n+\t    + \",mode=\" + mode + \",\"\n+\t    + description + \"]\");\n+  }\n }"}, {"sha": "e3927d994661e49fc9e175d2650e3830284dc846", "filename": "libjava/classpath/gnu/java/nio/charset/UTF_16Decoder.java", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FUTF_16Decoder.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FUTF_16Decoder.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FUTF_16Decoder.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -1,5 +1,5 @@\n /* UTF_16Decoder.java -- \n-   Copyright (C) 2002 Free Software Foundation, Inc.\n+   Copyright (C) 2002, 2005 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -105,8 +105,9 @@ else if (c == REVERSED_BYTE_ORDER_MARK)\n               }\n \n \t    // FIXME: Change so you only do a single comparison here.\n-            char c = byteOrder == BIG_ENDIAN ? (char) ((b1 << 8) | b2)\n-                                             : (char) ((b2 << 8) | b1);\n+            char c = (byteOrder == BIG_ENDIAN\n+\t\t      ? (char) (((b1 & 0xFF) << 8) | (b2 & 0xFF))\n+\t\t      : (char) (((b2 & 0xFF) << 8) | (b1 & 0xFF)));\n \n             if (0xD800 <= c && c <= 0xDFFF)\n               {\n@@ -119,8 +120,9 @@ else if (c == REVERSED_BYTE_ORDER_MARK)\n                   return CoderResult.UNDERFLOW;\n                 byte b3 = in.get ();\n                 byte b4 = in.get ();\n-                char d = byteOrder == BIG_ENDIAN ? (char) ((b3 << 8) | b4)\n-                                                 : (char) ((b4 << 8) | b3);\n+                char d = (byteOrder == BIG_ENDIAN\n+\t\t\t  ? (char) (((b3 & 0xFF) << 8) | (b4 & 0xFF))\n+\t\t\t  : (char) (((b4 & 0xFF) << 8) | (b3 & 0xFF)));\n                 // make sure d is a low surrogate\n                 if (d < 0xDC00 || d > 0xDFFF)\n                   return CoderResult.malformedForLength (2);"}, {"sha": "fa6f4970042057376b778106ee28532ad36d62bb", "filename": "libjava/classpath/gnu/java/nio/charset/iconv/IconvDecoder.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2Ficonv%2FIconvDecoder.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2Ficonv%2FIconvDecoder.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2Ficonv%2FIconvDecoder.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -38,7 +38,7 @@\n \n package gnu.java.nio.charset.iconv;\n \n-import gnu.classpath.RawData;\n+import gnu.classpath.Pointer;\n \n import java.nio.ByteBuffer;\n import java.nio.CharBuffer;\n@@ -55,7 +55,7 @@ final class IconvDecoder extends CharsetDecoder\n     openIconv(info.iconvName());\n   }\n \n-  private RawData data;\n+  private Pointer data;\n   private int inremaining;\n   private int outremaining;\n "}, {"sha": "d5cc8877f751a93e81dbdac5d36ece025a7cdaf5", "filename": "libjava/classpath/gnu/java/nio/charset/iconv/IconvEncoder.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2Ficonv%2FIconvEncoder.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2Ficonv%2FIconvEncoder.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2Ficonv%2FIconvEncoder.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -38,7 +38,7 @@\n \n package gnu.java.nio.charset.iconv;\n \n-import gnu.classpath.RawData;\n+import gnu.classpath.Pointer;\n \n import java.nio.ByteBuffer;\n import java.nio.CharBuffer;\n@@ -49,7 +49,7 @@\n \n final class IconvEncoder extends CharsetEncoder\n {\n-  private RawData data;\n+  private Pointer data;\n   private int inremaining;\n   private int outremaining;\n "}, {"sha": "473b6ba5a2926aa90f9f05af552fa308ec0ec9e7", "filename": "libjava/classpath/gnu/java/security/OID.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2FOID.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2FOID.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2FOID.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -1,5 +1,5 @@\n /* OID.java -- numeric representation of an object identifier\n-   Copyright (C) 2003, 2004  Free Software Foundation, Inc.\n+   Copyright (C) 2003, 2004, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -48,7 +48,7 @@\n /**\n  * This immutable class represents an object identifier, or OID.\n  *\n- * <p>OIDs are represented as a series of hierarcical tokens, each of\n+ * <p>OIDs are represented as a series of hierarchical tokens, each of\n  * which is usually represented as a single, unsigned integer. The\n  * hierarchy works so that later tokens are considered within the group\n  * of earlier tokens. Thus, the OID for the Serpent block cipher,"}, {"sha": "c6a3061ead2828e8dbf8de6c9a783cbabb4d87dc", "filename": "libjava/classpath/gnu/java/security/PolicyFile.java", "status": "modified", "additions": 55, "deletions": 38, "changes": 93, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2FPolicyFile.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2FPolicyFile.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2FPolicyFile.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -37,6 +37,10 @@\n \n package gnu.java.security;\n \n+import gnu.classpath.SystemProperties;\n+import gnu.classpath.debug.Component;\n+import gnu.classpath.debug.SystemLogger;\n+\n import java.io.File;\n import java.io.IOException;\n import java.io.InputStreamReader;\n@@ -66,6 +70,7 @@\n import java.util.List;\n import java.util.Map;\n import java.util.StringTokenizer;\n+import java.util.logging.Logger;\n \n /**\n  * An implementation of a {@link java.security.Policy} object whose\n@@ -143,24 +148,16 @@ public final class PolicyFile extends Policy\n   // Constants and fields.\n   // -------------------------------------------------------------------------\n \n-  private static final boolean DEBUG = true;\n-  // Package-private to avoid a trampoline.\n-  static void debug(String msg)\n-  {\n-    System.err.print(\">> PolicyFile: \");\n-    System.err.println(msg);\n-  }\n-\n-  private static void debug(Throwable t)\n-  {\n-    System.err.println(\">> PolicyFile\");\n-    t.printStackTrace(System.err);\n-  }\n+  private static final Logger logger = SystemLogger.SYSTEM;\n \n-  private static final String DEFAULT_POLICY = System.getProperty(\"java.home\")\n-    + System.getProperty(\"file.separator\") + \"lib\"\n-    + System.getProperty(\"file.separator\") + \"security\"\n-    + System.getProperty(\"file.separator\") + \"java.policy\";\n+  private static final String DEFAULT_POLICY =\n+    SystemProperties.getProperty(\"java.home\")\n+    + SystemProperties.getProperty(\"file.separator\") + \"lib\"\n+    + SystemProperties.getProperty(\"file.separator\") + \"security\"\n+    + SystemProperties.getProperty(\"file.separator\") + \"java.policy\";\n+  private static final String DEFAULT_USER_POLICY =\n+    SystemProperties.getProperty (\"user.home\") +\n+    SystemProperties.getProperty (\"file.separator\") + \".java.policy\";\n \n   private final Map cs2pc;\n \n@@ -185,58 +182,78 @@ public PermissionCollection getPermissions(CodeSource codeSource)\n         CodeSource cs = (CodeSource) e.getKey();\n         if (cs.implies(codeSource))\n           {\n-            if (DEBUG) debug(cs+\" -> \"+codeSource);\n+            logger.log (Component.POLICY, \"{0} -> {1}\", new Object[]\n+              { cs, codeSource });\n             PermissionCollection pc = (PermissionCollection) e.getValue();\n             for (Enumeration ee = pc.elements(); ee.hasMoreElements(); )\n               {\n                 perms.add((Permission) ee.nextElement());\n               }\n           }\n         else\n-          if (DEBUG) debug(cs+\" !-> \"+codeSource);\n+          logger.log (Component.POLICY, \"{0} !-> {1}\", new Object[]\n+            { cs, codeSource });\n       }\n-    if (DEBUG) debug (\"returning permissions \" + perms + \" for \" + codeSource);\n+    logger.log (Component.POLICY, \"returning permissions {0} for {1}\",\n+                new Object[] { perms, codeSource });\n     return perms;\n   }\n \n   public void refresh()\n   {\n     cs2pc.clear();\n-    List policyFiles = new LinkedList();\n+    final List policyFiles = new LinkedList();\n     try\n       {\n-        policyFiles.add(new File(DEFAULT_POLICY).toURL());\n-        if (DEBUG) debug (\"defualt policy is \" + DEFAULT_POLICY);\n-        policyFiles.addAll((List) AccessController.doPrivileged(\n+        policyFiles.add (new File (DEFAULT_POLICY).toURL());\n+        policyFiles.add (new File (DEFAULT_USER_POLICY).toURL ());\n+\n+        AccessController.doPrivileged(\n           new PrivilegedExceptionAction()\n           {\n             public Object run() throws Exception\n             {\n-              LinkedList l = new LinkedList();\n+              String allow = Security.getProperty (\"policy.allowSystemProperty\");\n+              if (allow == null || Boolean.getBoolean (allow))\n+                {\n+                  String s = SystemProperties.getProperty (\"java.security.policy\");\n+                  logger.log (Component.POLICY, \"java.security.policy={0}\", s);\n+                  if (s != null)\n+                    {\n+                      boolean only = s.startsWith (\"=\");\n+                      if (only)\n+                        s = s.substring (1);\n+                      policyFiles.clear ();\n+                      policyFiles.add (new URL (s));\n+                      if (only)\n+                        return null;\n+                    }\n+                }\n               for (int i = 1; ; i++)\n                 {\n-                  String s = Security.getProperty(\"policy.file.\"+i);\n-                  if (DEBUG) debug(\"policy.file.\"+i+\"=\"+s);\n+                  String pname = \"policy.url.\" + i;\n+                  String s = Security.getProperty (pname);\n+                  logger.log (Component.POLICY, \"{0}={1}\", new Object []\n+                    { pname, s });\n                   if (s == null)\n                     break;\n-                  l.add(new URL(s));\n+                  policyFiles.add (new URL (s));\n                 }\n-              String s = System.getProperty(\"java.security.policy\");\n-              if (DEBUG) debug(\"java.security.policy=\"+s);\n-              if (s != null)\n-                l.add(new URL(s));\n-              return l;\n+              return null;\n             }\n-          }));\n+          });\n       }\n     catch (PrivilegedActionException pae)\n       {\n-        if (DEBUG) debug(pae);\n+        logger.log (Component.POLICY, \"reading policy properties\", pae);\n       }\n     catch (MalformedURLException mue)\n       {\n-        if (DEBUG) debug(mue);\n+        logger.log (Component.POLICY, \"setting default policies\", mue);\n       }\n+\n+    logger.log (Component.POLICY, \"building policy from URLs {0}\",\n+                policyFiles);\n     for (Iterator it = policyFiles.iterator(); it.hasNext(); )\n       {\n         try\n@@ -246,7 +263,7 @@ public Object run() throws Exception\n           }\n         catch (IOException ioe)\n           {\n-            if (DEBUG) debug(ioe);\n+            logger.log (Component.POLICY, \"reading policy\", ioe);\n           }\n       }\n   }\n@@ -273,7 +290,7 @@ public String toString()\n    */\n   private void parse(final URL url) throws IOException\n   {\n-    if (DEBUG) debug (\"reading policy file from \" + url);\n+    logger.log (Component.POLICY, \"reading policy file from {0}\", url);\n     final StreamTokenizer in = new StreamTokenizer(new InputStreamReader(url.openStream()));\n     in.resetSyntax();\n     in.slashSlashComments(true);"}, {"sha": "ddd1800a717d2a8783c66785e037dd3abc67772a", "filename": "libjava/classpath/gnu/java/security/provider/DSAKeyPairGenerator.java", "status": "modified", "additions": 72, "deletions": 49, "changes": 121, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fprovider%2FDSAKeyPairGenerator.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fprovider%2FDSAKeyPairGenerator.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fprovider%2FDSAKeyPairGenerator.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -1,5 +1,5 @@\n /* GnuDSAKeyPairGenerator.java --- Gnu DSA Key Pair Generator\n-   Copyright (C) 1999 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -45,10 +45,12 @@\n import java.security.InvalidParameterException;\n import java.security.KeyPair;\n import java.security.KeyPairGeneratorSpi;\n+import java.security.NoSuchAlgorithmException;\n import java.security.SecureRandom;\n import java.security.interfaces.DSAParams;\n import java.security.spec.AlgorithmParameterSpec;\n import java.security.spec.DSAParameterSpec;\n+import java.security.spec.InvalidParameterSpecException;\n import java.util.Random;\n \n public class DSAKeyPairGenerator extends KeyPairGeneratorSpi \n@@ -60,18 +62,15 @@ public class DSAKeyPairGenerator extends KeyPairGeneratorSpi\n private BigInteger p = null; // the big prime\n private BigInteger g = null;\n \n-DSAKeyPairGenerator()\n+public DSAKeyPairGenerator()\n {\n \tkeysize = 1024;\n+        getDefaults ();\n }\n \n public void initialize(int keysize, SecureRandom random)\n {\n-\t//if( ((keysize % 64) != 0) || (keysize < 512) || (keysize > 1024) )\n-        //        throw new InvalidAlgorithmParameterException(\"Invalid key size\");\n-\n-\tthis.keysize = keysize;\n-\tthis.random = random;\n+        initialize (keysize, false, random);\n }\n \n public void initialize(AlgorithmParameterSpec params,\n@@ -81,65 +80,87 @@ public void initialize(AlgorithmParameterSpec params,\n \tif( !( params instanceof DSAParameterSpec ) )\n \t\tthrow new InvalidAlgorithmParameterException(\"Must be DSAParameterSpec\");\n \n+        try\n+        {\n+                initialize ((DSAParams) params, random);\n+        }\n+        catch (InvalidParameterException ipe)\n+        {\n+                InvalidAlgorithmParameterException iape =\n+                        new InvalidAlgorithmParameterException();\n+                iape.initCause (ipe);\n+                throw iape;\n+        }\n+}\n+\n+public void initialize (DSAParams params, SecureRandom random)\n+{\n \tDSAParameterSpec dsaparameterspec = (DSAParameterSpec)params;\n+        if (dsaparameterspec.getP() == null\n+            || dsaparameterspec.getQ() == null\n+            || dsaparameterspec.getG() == null)\n+        {\n+                throw new InvalidParameterException (\"none of p, q, or g may be null\");\n+        }\n \tp = dsaparameterspec.getP();\n \tq = dsaparameterspec.getQ();\n \tg = dsaparameterspec.getG();\n \tthis.random = random;\n }\n \n-public void initialize(DSAParams params, SecureRandom random) \n-\tthrows InvalidParameterException\n-{\n-\tif(params.getP() != null) \n-\t\tp = params.getP();\n-\telse\n-\t\tthrow new InvalidParameterException();\n-\n-\tif(params.getQ() != null) \n-\t\tq = params.getQ();\n-\telse\n-\t\tthrow new InvalidParameterException();\n-\t\n-\tif(params.getG() != null) \n-\t\tg = params.getG();\n-\telse\n-\t\tthrow new InvalidParameterException();\n-\t\n-\tthis.random = random;\n-}\n-\n public void initialize(int modlen, boolean genParams, SecureRandom random) \n \tthrows InvalidParameterException\n {\n \tif( ((modlen % 64) != 0) || (modlen < 512) || (modlen > 1024) )\n                 throw new InvalidParameterException();\n \n-\tif( (genParams == false) && (modlen != 512) && (modlen != 768) && (modlen != 1024)  )\n-\t\tthrow new InvalidParameterException();\n-\tthis.keysize = modlen;\n-\tthis.random = random;\n-\tp = null;\n-\tq = null;\n-\tg = null;\n+        this.keysize = modlen;\n+        this.random = random;\n+        if (this.random == null)\n+        {\n+                this.random = new SecureRandom ();\n+        }\n+\tif (genParams)\n+        {\n+                try\n+                {\n+                        AlgorithmParameterGenerator apgDSA = AlgorithmParameterGenerator.getInstance(\"DSA\");\n+                        apgDSA.init (modlen, random);\n+                        AlgorithmParameters apDSA = apgDSA.generateParameters();\n+                        DSAParameterSpec dsaparameterspec = (DSAParameterSpec)apDSA.getParameterSpec( DSAParameterSpec.class );\n+                        p = dsaparameterspec.getP();\n+                        q = dsaparameterspec.getQ();\n+                        g = dsaparameterspec.getG();\n+                }\n+                catch (NoSuchAlgorithmException nsae)\n+                {\n+                        InvalidParameterException ipe =\n+                                new InvalidParameterException (\"can't generate DSA parameters\");\n+                        ipe.initCause (nsae);\n+                        throw ipe;\n+                }\n+                catch (InvalidParameterSpecException ipse)\n+                {\n+                        InvalidParameterException ipe =\n+                                new InvalidParameterException (\"can't generate DSA parameters\");\n+                        ipe.initCause (ipse);\n+                        throw ipe;\n+                }\n+        }\n+        else if (!getDefaults ())\n+        {\n+                throw new InvalidParameterException (\"unsupported key size: \" + modlen);\n+        }\n }\n \n public KeyPair generateKeyPair()\n {\n-\tif( getDefaults() == false) {\n-\t\ttry {\n-\t\t\tAlgorithmParameterGenerator apgDSA = AlgorithmParameterGenerator.getInstance(\"DSA\");\n-\t\t\tAlgorithmParameters apDSA = apgDSA.generateParameters();\n-\t\t\tDSAParameterSpec dsaparameterspec = (DSAParameterSpec)apDSA.getParameterSpec( DSAParameterSpec.class );\n-\t\t\tp = dsaparameterspec.getP();\n-\t\t\tq = dsaparameterspec.getQ();\n-\t\t\tg = dsaparameterspec.getG();\n-\t\t} catch ( Exception e ) {\n-\t\t\treturn null;\n-\t\t}\n-\t}\n+        if (random == null)\n+                {\n+                        random = new SecureRandom ();\n+                }\n \n-\tBigInteger x = new BigInteger( 159, new Random() );\n+\tBigInteger x = new BigInteger( 159, random );\n \n \tBigInteger y = g.modPow( x, p );\n \n@@ -160,10 +181,12 @@ private boolean getDefaults()\n \t\tp = new BigInteger(\"e9e642599d355f37c97ffd3567120b8e25c9cd43e927b3a9670fbec5d890141922d2c3b3ad2480093799869d1e846aab49fab0ad26d2ce6a22219d470bce7d777d4a21fbe9c270b57f607002f3cef8393694cf45ee3688c11a8c56ab127a3daf\", 16);\n \t\tq = new BigInteger(\"9cdbd84c9f1ac2f38d0f80f42ab952e7338bf511\", 16);\n \t\tg = new BigInteger(\"30470ad5a005fb14ce2d9dcd87e38bc7d1b1c5facbaecbe95f190aa7a31d23c4dbbcbe06174544401a5b2c020965d8c2bd2171d3668445771f74ba084d2029d83c1c158547f3a9f1a2715be23d51ae4d3e5a1f6a7064f316933a346d3f529252\", 16);\n-\t} else if( keysize == 512) {\n+                return true;\n+\t} else if( keysize == 1024) {\n \t\tp = new BigInteger(\"fd7f53811d75122952df4a9c2eece4e7f611b7523cef4400c31e3f80b6512669455d402251fb593d8d58fabfc5f5ba30f6cb9b556cd7813b801d346ff26660b76b9950a5a49f9fe8047b1022c24fbba9d7feb7c61bf83b57e7c6a8a6150f04fb83f6d3c51ec3023554135a169132f675f3ae2b61d72aeff22203199dd14801c7\", 16);\n \t\tq = new BigInteger(\"9760508f15230bccb292b982a2eb840bf0581cf5\", 16);\n \t\tg = new BigInteger(\"f7e1a085d69b3ddecbbcab5c36b857b97994afbbfa3aea82f9574c0b3d0782675159578ebad4594fe67107108180b449167123e84c281613b7cf09328cc8a6e13c167a8b547c8d28e0a3ae1e2bb3a675916ea37f0bfa213562f1fb627a01243bcca4f1bea8519089a883dfe15ae59f06928b665e807b552564014c3bfecf492a\", 16);\n+                return true;\n \t}\n \treturn false;\n }"}, {"sha": "ab8943443ec3269399e901eb41b112955308c353", "filename": "libjava/classpath/gnu/java/security/provider/PKIXCertPathValidatorImpl.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fprovider%2FPKIXCertPathValidatorImpl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fprovider%2FPKIXCertPathValidatorImpl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fprovider%2FPKIXCertPathValidatorImpl.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -1,5 +1,5 @@\n /* PKIXCertPathValidatorImpl.java -- PKIX certificate path validator.\n-   Copyright (C) 2004  Free Software Foundation, Inc.\n+   Copyright (C) 2004, 2005  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -331,7 +331,7 @@ public CertPathValidatorResult engineValidate(CertPath path,\n           continue;\n         try\n           {\n-            if (anchorCert == null)\n+            if (anchorCert != null)\n               anchorCert.checkValidity(now);\n             p[p.length-1].verify(anchorKey);\n             if (anchorCert != null && anchorCert.getBasicConstraints() >= 0"}, {"sha": "0395af61bfbdea53f8e3cadf6f86205c1298a1e4", "filename": "libjava/classpath/gnu/javax/swing/plaf/gtk/GtkCheckBoxUI.java", "status": "removed", "additions": 0, "deletions": 69, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b044d19517541c95681d35a92dbc81e6e21d94f/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fswing%2Fplaf%2Fgtk%2FGtkCheckBoxUI.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b044d19517541c95681d35a92dbc81e6e21d94f/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fswing%2Fplaf%2Fgtk%2FGtkCheckBoxUI.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fswing%2Fplaf%2Fgtk%2FGtkCheckBoxUI.java?ref=9b044d19517541c95681d35a92dbc81e6e21d94f", "patch": "@@ -1,69 +0,0 @@\n-/* GtkCheckBoxUI.java\n-   Copyright (c) 1999 by Free Software Foundation, Inc.\n-\n-This file is part of GNU Classpath.\n-\n-GNU Classpath is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU Classpath is distributed in the hope that it will be useful, but\n-WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n-General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU Classpath; see the file COPYING.  If not, write to the\n-Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n-02110-1301 USA.\n-\n-Linking this library statically or dynamically with other modules is\n-making a combined work based on this library.  Thus, the terms and\n-conditions of the GNU General Public License cover the whole\n-combination.\n-\n-As a special exception, the copyright holders of this library give you\n-permission to link this library with independent modules to produce an\n-executable, regardless of the license terms of these independent\n-modules, and to copy and distribute the resulting executable under\n-terms of your choice, provided that you also meet, for each linked\n-independent module, the terms and conditions of the license of that\n-module.  An independent module is a module which is not derived from\n-or based on this library.  If you modify this library, you may extend\n-this exception to your version of the library, but you are not\n-obligated to do so.  If you do not wish to do so, delete this\n-exception statement from your version. */\n-\n-package gnu.javax.swing.plaf.gtk;\n-\n-import java.awt.*;\n-import javax.swing.*;\n-import javax.swing.plaf.*;\n-import javax.swing.plaf.basic.*;\n-\n-/**\n- *\n- * @author Brian Jones\n- * @see javax.swing.LookAndFeel\n- */\n-public class GtkCheckBoxUI extends GtkRadioButtonUI\n-{\n-    public GtkCheckBoxUI() \n-    {\n-\tsuper();\n-    }\n-\n-    public static ComponentUI createUI(JComponent c)\n-    {\n-\treturn new GtkCheckBoxUI();\n-    }\n-\n-    public String getPropertyPrefix()\n-    {\n-\t// FIXME\n-\tSystem.err.println(super.getPropertyPrefix());\n-\treturn super.getPropertyPrefix();\n-    }\n-}\n-"}, {"sha": "28fd36e897cc001beff242e45aa79748021aac17", "filename": "libjava/classpath/gnu/javax/swing/plaf/gtk/GtkIconFactory.java", "status": "removed", "additions": 0, "deletions": 99, "changes": 99, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b044d19517541c95681d35a92dbc81e6e21d94f/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fswing%2Fplaf%2Fgtk%2FGtkIconFactory.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b044d19517541c95681d35a92dbc81e6e21d94f/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fswing%2Fplaf%2Fgtk%2FGtkIconFactory.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fswing%2Fplaf%2Fgtk%2FGtkIconFactory.java?ref=9b044d19517541c95681d35a92dbc81e6e21d94f", "patch": "@@ -1,99 +0,0 @@\n-/* GtkIconFactory.java\n-   Copyright (c) 1999 by Free Software Foundation, Inc.\n-\n-This file is part of GNU Classpath.\n-\n-GNU Classpath is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU Classpath is distributed in the hope that it will be useful, but\n-WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n-General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU Classpath; see the file COPYING.  If not, write to the\n-Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n-02110-1301 USA.\n-\n-Linking this library statically or dynamically with other modules is\n-making a combined work based on this library.  Thus, the terms and\n-conditions of the GNU General Public License cover the whole\n-combination.\n-\n-As a special exception, the copyright holders of this library give you\n-permission to link this library with independent modules to produce an\n-executable, regardless of the license terms of these independent\n-modules, and to copy and distribute the resulting executable under\n-terms of your choice, provided that you also meet, for each linked\n-independent module, the terms and conditions of the license of that\n-module.  An independent module is a module which is not derived from\n-or based on this library.  If you modify this library, you may extend\n-this exception to your version of the library, but you are not\n-obligated to do so.  If you do not wish to do so, delete this\n-exception statement from your version. */\n-\n-package gnu.javax.swing.plaf.gtk;\n-import java.awt.*;\n-import javax.swing.*;\n-import javax.swing.plaf.*;\n-import java.io.Serializable;\n-\n-/**\n- *\n- * @author Brian Jones\n- * @see javax.swing.LookAndFeel\n- */\n-public class GtkIconFactory implements Serializable\n-{\n-    private static Icon radioButtonIcon;\n-    private static Icon checkBoxIcon;\n-\n-    public static Icon getRadioButtonIcon() \n-    {\n-\tif (radioButtonIcon == null)\n-\t    radioButtonIcon = new RadioButtonIcon();\n-\treturn radioButtonIcon;\n-    }\n-    \n-    private static class RadioButtonIcon \n-\timplements Icon, UIResource, Serializable\n-    {\n-\tprivate static final int size = 15;\n-\t\n-\tpublic int getIconWidth() { return size; }\n-\tpublic int getIconHeight() { return size; }\n-\n-\tpublic void paintIcon(Component c, Graphics g, int x, int y) \n-\t{\n-\t    System.out.println(\"radiobuttonicon: paintIcon()\");\n-\t    // get the button and model containing the state we are \n-\t    // supposed to show\n-\t    AbstractButton b = (AbstractButton)c;\n-\t    ButtonModel model = b.getModel();\n-\n-\t    // If the button is being pressed (& armed), change the \n-\t    // background color \n-\t    // Note: could also do something different if the button is \n-\t    // disabled\n-\t    \n-\t    if (model.isPressed() && model.isArmed())\n-\t\t{\n-\t\t    System.out.println(\"radiobuttonicon: pressed & armed\");\n-\t\t    g.setColor(UIManager.getColor(\"RadioButton.pressed\"));\n-\t\t    g.fillOval(x,y,size-1, size-1);\n-\t\t}\n-\t    // draw an outer circle\n-\t    g.setColor(UIManager.getColor(\"RadioButton.foreground\"));\n-\t    g.drawOval(x,y,size-1, size-1);\n-\t    \n-\t    // fill a small circle inside if the button is selected\n-\t    if (model.isSelected()) {\n-\t\tg.fillOval(x+4, y+4, size-8, size-8);\n-\t\tSystem.out.println(\"radiobuttonicon: is selected\");\n-\t    }\n-\t}\n-    }\n-}"}, {"sha": "ed99e6d216bb0156cc98574b78700cd168f5c9ca", "filename": "libjava/classpath/gnu/javax/swing/plaf/gtk/GtkLookAndFeel.java", "status": "removed", "additions": 0, "deletions": 241, "changes": 241, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b044d19517541c95681d35a92dbc81e6e21d94f/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fswing%2Fplaf%2Fgtk%2FGtkLookAndFeel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b044d19517541c95681d35a92dbc81e6e21d94f/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fswing%2Fplaf%2Fgtk%2FGtkLookAndFeel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fswing%2Fplaf%2Fgtk%2FGtkLookAndFeel.java?ref=9b044d19517541c95681d35a92dbc81e6e21d94f", "patch": "@@ -1,241 +0,0 @@\n-/* GtkLookAndFeel.java\n-   Copyright (c) 1999 by Free Software Foundation, Inc.\n-\n-This file is part of GNU Classpath.\n-\n-GNU Classpath is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU Classpath is distributed in the hope that it will be useful, but\n-WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n-General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU Classpath; see the file COPYING.  If not, write to the\n-Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n-02110-1301 USA.\n-\n-Linking this library statically or dynamically with other modules is\n-making a combined work based on this library.  Thus, the terms and\n-conditions of the GNU General Public License cover the whole\n-combination.\n-\n-As a special exception, the copyright holders of this library give you\n-permission to link this library with independent modules to produce an\n-executable, regardless of the license terms of these independent\n-modules, and to copy and distribute the resulting executable under\n-terms of your choice, provided that you also meet, for each linked\n-independent module, the terms and conditions of the license of that\n-module.  An independent module is a module which is not derived from\n-or based on this library.  If you modify this library, you may extend\n-this exception to your version of the library, but you are not\n-obligated to do so.  If you do not wish to do so, delete this\n-exception statement from your version. */\n-\n-package gnu.javax.swing.plaf.gtk;\n-import java.awt.*;\n-import javax.swing.*;\n-import javax.swing.border.*;\n-import javax.swing.plaf.*;\n-import javax.swing.plaf.basic.*;\n-\n-/**\n- *\n- * @author Brian Jones\n- * @see javax.swing.LookAndFeel\n- */\n-public class GtkLookAndFeel extends BasicLookAndFeel\n-{\n-    private UIDefaults uiDefaults;\n-\n-    /**\n-     */\n-    public GtkLookAndFeel()\n-    {\n-\tsuper();\n-    }\n-\n-    /**\n-     * A short string to identify this look and feel, for example in a \n-     * drop down list to choose between several look and feels.\n-     */\n-    public String getName() { return \"GIMP Toolkit\"; }\n-\n-    /**\n-     * A much longer description of the look and feel.\n-     */\n-    public String getDescription() \n-    { \n-\treturn new String(\"The GIMP Toolkit Look and Feel for Java, \" + \n-\t\t\t  \"written by Brian Jones (cbj@gnu.org), \" + \n-\t\t\t  \"(c) 1999 by Free Software Foundation, Inc.  \" +\n-\t\t\t  \"http://www.classpath.org\");\n-    }\n-\n-    /**\n-     * Return a unique string identifying this look and feel as different\n-     * from and not a subclass of any other look and feel.  Usually, a \n-     * subclass will return the same <code>String</code> here as the\n-     * original look and feel if only a few changes are being made rather \n-     * than something completely new and different.\n-     */\n-    public String getID()\n-    {\n-\treturn \"Gtk\";\n-    }\n-\n-    public boolean isNativeLookAndFeel()\n-    {\n-\treturn false;\n-    }\n-\n-    public boolean isSupportedLookAndFeel()\n-    {\n-\treturn true;\n-    }\n-\n-    protected void initClassDefaults(UIDefaults table)\n-    {\n-\tsuper.initClassDefaults(table);\n-\n-\tString gtkPkgName = \"gnu.javax.swing.plaf.gtk.\";\n-\n-\t\n-\tObject[] defaults = { \n-\t    \"SliderUI\", gtkPkgName + \"GtkSliderUI\"\n-\t};\n-\t/*\n-\t    \"CheckBoxUI\", gtkPkgName + \"GtkCheckBoxUI\",\n-\t    \"ButtonUI\", gtkPkgName + \"GtkButtonUI\"\n-\t\t\"ColorChooserUI\", \"MetalColorChooserUI\",\n-\t\t\"MenuBarUI\", \"MetalMenuBarUI\",\n-\t\t\"MenuUI\", \"MetalMenuUI\", \n-\t\t\"MenuItemUI\", \"MetalMenuItemUI\", \n-\t\t\"CheckBoxMenuItemUI\", \"MetalCheckBoxMenuItemUI\", \n-\t\t\"RadioButtonMenuItemUI\", \"MetalRadioButtonMenuItemUI\", \n-\t\t\"RadioButtonUI\", \"MetalRadioButtonUI\", \n-\t\t\"ToggleButtonUI\", \"MetalToggleButtonUI\",\n-\t\t\"PopupMenuUI\", \"MetalPopupMenuUI\",\n-\t\t\"ProgressBarUI\", \"MetalProgressBarUI\",\n-\t\t\"ScrollBarUI\", \"MetalScrollBarUI\",\n-\t\t\"ScrollPaneUI\", \"MetalScrollPaneUI\",\n-\t\t\"SplitPaneUI\", \"MetalSplitPaneUI\",\n-\t\t\"SeparatorUI\", \"MetalSeparatorUI\",\n-\t\t\"ToolBarSeparatorUI\", \"MetalToolBarSeparatorUI\",\n-\t\t\"PopupMenuSeparatorUI\", \"MetalPopupMenuSeparatorUI\", \n-\t\t\"TabbedPaneUI\", \"MetalTabbedPaneUI\",\n-\t\t\"TextAreaUI\", \"MetalTextAreaUI\",\n-\t\t\"TextFieldUI\", \"MetalTextFieldUI\",\n-\t\t\"PasswordFieldUI\", \"MetalPasswordFieldUI\",\n-\t\t\"TextPaneUI\", \"MetalTextPaneUI\",\n-\t\t\"EditorPaneUI\", \"MetalEditorPaneUI\",\n-\t\t\"TreeUI\", \"MetalTreeUI\",\n-\t\t\"LabelUI\", \"MetalLabelUI\",\n-\t\t\"ListUI\", \"MetalListUI\",\n-\t\t\"ToolBarUI\", \"MetalToolBarUI\",\n-\t\t\"ToolTipUI\", \"MetalToolTipUI\",\n-\t\t\"ComboBoxUI\", \"MetalComboBoxUI\",\n-\t\t\"TableUI\", \"MetalTableUI\",\n-\t\t\"TableHeaderUI\", \"MetalTableHeaderUI\",\n-\t\t\"InternalFrameUI\", \"GtkInternalFrameUI\",\n-\t\t\"StandardDialogUI\", \"GtkStandardDialogUI\",\n-\t\t\"DesktopPaneUI\", \"GtkDesktopPaneUI\",\n-\t\t\"DesktopIconUI\", \"GtkDesktopIconUI\",\n-\t\t\"DirectoryPaneUI\", \"GtkDirectoryPaneUI\",\n-\t\t\"FileChooserUI\", \"GtkFileChooserUI\",\n-\t\t\"OptionPaneUI\", \"GtkOptionPaneUI\" }\n-\t*/\n-\ttable.putDefaults(defaults);\n-\n-    }\n-\n-    protected void initSystemColorDefaults(UIDefaults table)\n-    {\n-\tString[] colors = {\n-\t    \"desktop\", \"#000000\",\n-\t    \"activeCaption\", \"#163555\",\n-\t    \"activeCaptionText\", \"#FFFFFF\",\n-\t    \"activeCaptionBorder\", \"#000000\",\n-\t    \"inactiveCaption\", \"#375676\",\n-\t    \"inactiveCaptionText\", \"#999999\",\n-\t    \"inactiveCaptionBorder\", \"#000000\",\n-\t    \"window\", \"#FFFFFF\",\n-\t    \"windowBorder\", \"#969696\",\n-\t    \"windowText\", \"#000000\",\n-\t    \"menu\", \"#d6d6d6\",\n-\t    \"menuText\", \"#000000\",\n-\t    \"text\", \"#FFFFFF\",\n-\t    \"textText\", \"#000000\",\n-\t    \"textHighlight\", \"#00009c\",\n-\t    \"textHighlightText\", \"#FFFFFF\",\n-\t    \"textInactiveText\", \"#999999\",\n-\t    \"control\", \"#d6d6d6\",\n-\t    \"controlText\", \"#000000\",\n-\t    \"controlHighlight\", \"#eaeaea\",\n-\t    \"controlLtHighlight\", \"#eaeaea\",\n-\t    \"controlShadow\", \"#c3c3c3\",\n-\t    \"controlDkShadow\", \"#888888\",\n-\t    \"scrollbar\", \"#c3c3c3\",\n-\t    \"info\", \"#d6d6d6\",\n-\t    \"infoText\", \"#000000\"\n-\t};\n-\n-\tloadSystemColors(table, colors, false);\n-    }\n-\n-    protected void initComponentDefaults(UIDefaults table)\n-    {\n-\tsuper.initComponentDefaults(table);\n-\n-\t// define common resources\n-\t// fonts\n-\tFontUIResource sansSerifPlain10 = \n-\t    new FontUIResource(\"SansSerif\", Font.PLAIN, 10);\n-\tFontUIResource serifPlain10 = \n-\t    new FontUIResource(\"Serif\", Font.PLAIN, 10);\n-\t// insets\n-\t// borders\n-\t// colors\n-\tColorUIResource controlDkShadow = new ColorUIResource(table.getColor(\"controlDkShadow\"));\n-\tColorUIResource controlShadow = new ColorUIResource(table.getColor(\"controlShadow\"));\n-\tColorUIResource control = new ColorUIResource(table.getColor(\"control\"));\n-\tColorUIResource scrollbar = new ColorUIResource(table.getColor(\"scrollbar\"));\n-\tColorUIResource controlHighlight = new ColorUIResource(table.getColor(\"controlHighlight\"));\n-\tif (scrollbar == null)\n-\t    System.out.println(\"scrollbar is null\");\n-\n-  \tColorUIResource white = new ColorUIResource(Color.white);\n-  \tColorUIResource black = new ColorUIResource(Color.black);\n-\tColorUIResource blue = new ColorUIResource(Color.blue);\n-\n-\t// icons\n-\tObject errorIcon = LookAndFeel.makeIcon(getClass(), \"icons/error.gif\");\n-\t// any other resources like dimensions and integer values\n-\n-\t// define defaults\n-\tObject[] defaults = \n-\t{ \n-\t    \"Button.font\", sansSerifPlain10,\n-\t    \"CheckBox.font\", sansSerifPlain10,\n-  \t    \"RadioButton.pressed\", black,\n-\t    \"Slider.focus\", blue,\n-  \t    \"Slider.foreground\", control,\n-  \t    \"Slider.highlight\", controlHighlight,\n-  \t    \"Slider.shadow\", controlShadow,\n-\t    \"Slider.background\", controlDkShadow\n-\t   \n-//  \t    \"Slider.background\", \"#888888\",\n-//  \t    \"Slider.focus\", \"#c3c3c3\",\n-//  \t    \"Slider.foreground\", \"#d6d6d6\",\n-//  \t    \"Slider.highlight\", \"#ffffff\",\n-//  \t    \"Slider.shadow\", \"#000000\"\n-\n-\n-\t};\n-\n-\ttable.putDefaults(defaults);\n-    }\n-}"}, {"sha": "19d533879106d0112d9f2fbc2908b051573310c5", "filename": "libjava/classpath/gnu/javax/swing/plaf/gtk/GtkRadioButtonUI.java", "status": "removed", "additions": 0, "deletions": 69, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b044d19517541c95681d35a92dbc81e6e21d94f/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fswing%2Fplaf%2Fgtk%2FGtkRadioButtonUI.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b044d19517541c95681d35a92dbc81e6e21d94f/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fswing%2Fplaf%2Fgtk%2FGtkRadioButtonUI.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fswing%2Fplaf%2Fgtk%2FGtkRadioButtonUI.java?ref=9b044d19517541c95681d35a92dbc81e6e21d94f", "patch": "@@ -1,69 +0,0 @@\n-/* GtkRadioButtonUI.java\n-   Copyright (c) 1999 by Free Software Foundation, Inc.\n-\n-This file is part of GNU Classpath.\n-\n-GNU Classpath is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU Classpath is distributed in the hope that it will be useful, but\n-WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n-General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU Classpath; see the file COPYING.  If not, write to the\n-Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n-02110-1301 USA.\n-\n-Linking this library statically or dynamically with other modules is\n-making a combined work based on this library.  Thus, the terms and\n-conditions of the GNU General Public License cover the whole\n-combination.\n-\n-As a special exception, the copyright holders of this library give you\n-permission to link this library with independent modules to produce an\n-executable, regardless of the license terms of these independent\n-modules, and to copy and distribute the resulting executable under\n-terms of your choice, provided that you also meet, for each linked\n-independent module, the terms and conditions of the license of that\n-module.  An independent module is a module which is not derived from\n-or based on this library.  If you modify this library, you may extend\n-this exception to your version of the library, but you are not\n-obligated to do so.  If you do not wish to do so, delete this\n-exception statement from your version. */\n-\n-package gnu.javax.swing.plaf.gtk;\n-\n-import java.awt.*;\n-import javax.swing.*;\n-import javax.swing.plaf.*;\n-import javax.swing.plaf.basic.*;\n-\n-/**\n- *\n- * @author Brian Jones\n- * @see javax.swing.LookAndFeel\n- */\n-public class GtkRadioButtonUI extends BasicRadioButtonUI\n-{\n-    public GtkRadioButtonUI() \n-    {\n-\tsuper();\n-    }\n-\n-    public static ComponentUI createUI(JComponent c)\n-    {\n-\treturn new GtkRadioButtonUI();\n-    }\n-\n-    public String getPropertyPrefix()\n-    {\n-\t// FIXME\n-\tSystem.err.println(super.getPropertyPrefix());\n-\treturn super.getPropertyPrefix();\n-    }\n-}\n-"}, {"sha": "c576b3d4b5044d5e451b1d154d730bf22de073e4", "filename": "libjava/classpath/gnu/javax/swing/plaf/gtk/GtkSliderUI.java", "status": "removed", "additions": 0, "deletions": 230, "changes": 230, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b044d19517541c95681d35a92dbc81e6e21d94f/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fswing%2Fplaf%2Fgtk%2FGtkSliderUI.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b044d19517541c95681d35a92dbc81e6e21d94f/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fswing%2Fplaf%2Fgtk%2FGtkSliderUI.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fswing%2Fplaf%2Fgtk%2FGtkSliderUI.java?ref=9b044d19517541c95681d35a92dbc81e6e21d94f", "patch": "@@ -1,230 +0,0 @@\n-/* GtkSliderUI.java\n-   Copyright (c) 1999 by Free Software Foundation, Inc.\n-\n-This file is part of GNU Classpath.\n-\n-GNU Classpath is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU Classpath is distributed in the hope that it will be useful, but\n-WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n-General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU Classpath; see the file COPYING.  If not, write to the\n-Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n-02110-1301 USA.\n-\n-Linking this library statically or dynamically with other modules is\n-making a combined work based on this library.  Thus, the terms and\n-conditions of the GNU General Public License cover the whole\n-combination.\n-\n-As a special exception, the copyright holders of this library give you\n-permission to link this library with independent modules to produce an\n-executable, regardless of the license terms of these independent\n-modules, and to copy and distribute the resulting executable under\n-terms of your choice, provided that you also meet, for each linked\n-independent module, the terms and conditions of the license of that\n-module.  An independent module is a module which is not derived from\n-or based on this library.  If you modify this library, you may extend\n-this exception to your version of the library, but you are not\n-obligated to do so.  If you do not wish to do so, delete this\n-exception statement from your version. */\n-\n-package gnu.javax.swing.plaf.gtk;\n-import java.awt.*;\n-import javax.swing.*;\n-import javax.swing.plaf.*;\n-import javax.swing.plaf.basic.*;\n-\n-/**\n- * Gtk-like slider\n- *\n- * @author Brian Jones\n- * @see javax.swing.LookAndFeel\n- */\n-public class GtkSliderUI extends BasicSliderUI\n-{\n-    private static Color thumbFgColor;\n-    private static Color thumbBgColor;\n-    private static Color thumbHighlight;\n-    private static Color thumbFocus;\n-\n-    private static Color bgColor;\n-    private static Color fgColor;\n-    private static Color focusColor;\n-    private static Color highlight;\n-    private static Color shadow;\n-\n-    private static final Dimension PREF_HORIZ = new Dimension(250, 15);\n-    private static final Dimension PREF_VERT = new Dimension(15, 250);\n-    private static final Dimension MIN_HORIZ = new Dimension(25, 15);\n-    private static final Dimension MIN_VERT = new Dimension(15, 25);\n-\n-    public GtkSliderUI() \n-    {\n-\tsuper(null);\n-\tbgColor = UIManager.getColor(\"Slider.background\");\n-\tfgColor = UIManager.getColor(\"Slider.foreground\");\n-\tfocusColor = UIManager.getColor(\"Slider.focus\");\n-\thighlight = UIManager.getColor(\"Slider.highlight\");\n-\tshadow = UIManager.getColor(\"Slider.shadow\");\n-\n-\tSystem.out.println(\"bgColor: \" + bgColor);\n-\tSystem.out.println(\"fgColor: \" + fgColor);\n-\tSystem.out.println(\"focusColor: \" + focusColor);\n-\tSystem.out.println(\"highlight: \" + highlight);\n-\tSystem.out.println(\"shadow: \" + shadow);\n-    }\n-\n-    public static ComponentUI createUI(JComponent c)\n-    {\n-\treturn new GtkSliderUI();\n-    }\n-\n-    // methods not overridden here, using Basic defaults\n-    // installUI()\n-    // uninstall()\n-\n-    public Dimension getPreferredHorizontalSize()\n-    {\n-\t/*\n-\tDimension thumbSize = getThumbSize();\n-\tDimenstion labelSize = getLabelSize();\n-\t// getTickLength()\n-\tint width = thumbSize.width + \n-\tgetWidthOfWidestLabel\n-\t*/\n-\treturn PREF_HORIZ;\n-    }\n-\n-    public Dimension getPreferredVerticalSize()\n-    {\n-\treturn PREF_VERT;\n-    }\n-\n-    public Dimension getMinimumHorizontalSize()\n-    {\n-\treturn MIN_HORIZ;\n-    }\n-\n-    public Dimension getMinimumVerticalSize()\n-    {\n-\treturn MIN_VERT;\n-    }\n-\n-    /** \n-     * Returns thumb size based on slider orientation\n-     */\n-    protected Dimension getThumbSize()\n-    {\n-\tDimension size = new Dimension();\n-\n-\tif (slider.getOrientation() == JSlider.VERTICAL) {\n-\t    size.width = 15;\n-\t    size.height = 33;\n-\t}\n-\telse {\n-\t    size.width = 33;\n-\t    size.height = 15;\n-\t}\n-\treturn size;\n-    }\n-\n-    /**\n-     * Reserved width or height for ticks, as appropriate to the slider\n-     * orientation.\n-     */\n-    protected int getTickLength()\n-    {\n-\treturn 10;\n-    }\n-\n-    public void paintFocus(Graphics g)\n-    {\n-\tsuper.paintFocus(g);\n-\tSystem.err.println(\"focus \" + focusRect);\n-    }\n-\n-    /**\n-     * Must account for Unicode when drawing text.\n-     */\n-    public void paintLabels(Graphics g)\n-    {\n-\tsuper.paintLabels(g);\n-\tSystem.err.println(\"label \" + labelRect);\n-    }\n-\n-    /**\n-     * A drawRect() generated slider has ghosting when moving left on \n-     * a horizontal slider and the bottom is not painted when moving \n-     * right.\n-     */\n-    public void paintThumb(Graphics g)\n-    {\n-\tint x = thumbRect.x;\n-\tint y = thumbRect.y;\n-\tint h = thumbRect.height;\n-\tint w = thumbRect.width;\n-\n-//  \t    \"Slider.background\", \"#888888\",\n-//  \t    \"Slider.focus\", \"#c3c3c3\",\n-//  \t    \"Slider.foreground\", \"#d6d6d6\",\n-//  \t    \"Slider.highlight\", \"#ffffff\",\n-//  \t    \"Slider.shadow\", \"#000000\"\n-\n-\tg.setColor(fgColor);\n-\tg.fillRect(x,y,w,h);\n-\tg.setColor(bgColor);\n-\t\n-\tif (slider.getOrientation() == JSlider.HORIZONTAL) {\n-\t    g.drawRect(x, y, w, h);\n-\t    g.setColor(highlight);\n-\t    g.drawLine(x+1, y+h-1, x+w, y+h-1);\n-\t    g.setColor(focusColor);\n-\t    g.drawLine(x+2, y+h-2, x+w, y+h-2);\n-\t    g.setColor(Color.black);\n-\t    g.drawLine(x+1, y+h-2, x+1, y+h-2);\n-\t    g.drawRect(x+1, y+1, w-1, 12);\t    \n-\t}\t\n-\telse \n-\t    g.drawRect(x, y, w, h);\n-\n-\tSystem.err.println(\"thumb \" + thumbRect);\n-    }\n-\n-    // public void paintTicks(Graphics g)\n-    \n-    public void paintTrack(Graphics g)\n-    {\n-//  \tsuper.paintTrack(g);\n-\tint x = trackRect.x;\n-\tint y = trackRect.y;\n-\tint h = trackRect.height;\n-\tint w = trackRect.width;\n-\n-\tSystem.err.println(\"track \" + trackRect);\n-\n-\tg.setColor(Color.black);\n-\tg.fillRect(x,y,w,h);\n-\n-//  \tif (slider.getOrientation() == JSlider.HORIZONTAL)\n-//  \t    g.drawLine(x, y+h-1, x+w-1, y+h-1);\n-//  \telse\n-//  \t    g.drawLine(x+w-1, y, x+w-1, y+h-1);\n-\n-//  \tSystem.err.println(\"track \" + trackRect);\n-//  \tSystem.err.println(\"content \" + contentRect);\n-    }\n-\n-    // the four methods below allow you to control tick painting without \n-    // worrying about what paintTicks does, look for in other UI delegates\n-    // protected void paintMajorTickForHorizSlider(Graphics g, Rectangle tickBounds, int x)\n-    // protected void paintMajorTickForVertSlider(Graphics g, Rectangle tickBounds, int y)\n-    // protected void paintMinorTickForHorizSlider(Graphics g, Rectangle tickBounds, int x)\n-    // protected void paintMinorTickForVertSlider(Graphics g, Rectangle tickBounds, int y)\n-}"}, {"sha": "2b3f001ddc2721bdf3112c6fbbd5bfaf448725d0", "filename": "libjava/classpath/gnu/javax/swing/plaf/gtk/README", "status": "removed", "additions": 0, "deletions": 37, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b044d19517541c95681d35a92dbc81e6e21d94f/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fswing%2Fplaf%2Fgtk%2FREADME", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b044d19517541c95681d35a92dbc81e6e21d94f/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fswing%2Fplaf%2Fgtk%2FREADME", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fswing%2Fplaf%2Fgtk%2FREADME?ref=9b044d19517541c95681d35a92dbc81e6e21d94f", "patch": "@@ -1,37 +0,0 @@\n-This is a start at a GTK look and feel for Java.\n-It is usable already, but it mainly just defaults back to Basic Look and\n-Feel for everything.\n-\n-Sliders are currently broken.  I haven't figured out why yet.\n-\n-A bunch of system colors defined in GtkLookandFeel though I have a feeling \n-I'll be defining more ColorUIResources shortly.\n-\n-Based on Gnome File Manager colors... or my Window Manager setup\n-\n-desktop\t\t\t#000000\t(gtk)\n-activeCaption\t\t#163555\t(window manager)\t\n-activeCaptionText\t#FFFFFF\t(window manager)\n-activeCaptionBorder\t#000000 (unsure of this)\n-inactiveCaption\t\t#375676 (window manager)\n-inactiveCaptionText\t#999999 (window manager)\n-inactiveCaptionBorder\t#000000 (unsure of this)\n-window\t\t\t#FFFFFF (gtk)\n-windowBorder\t\t#969696 (gtk)\n-windowText\t\t#000000 (gtk)\n-menu\t\t\t#d6d6d6 (gtk)\n-menuText\t\t#000000 (gtk)\n-text\t\t\t#FFFFFF (gtk)\n-textText\t\t#000000 (gtk)\n-textHighlight\t\t#00009c (gtk)\n-textHighlightText\t#FFFFFF (gtk)\n-textInactiveText\t#999999 (unsure of this)\n-control\t\t\t#d6d6d6 (gtk)\n-controlText\t\t#000000 (gtk)\n-controlHighlight\t#eaeaea (gtk)\n-controlLtHighlight\t#eaeaea (unsure of this)\n-controlShadow\t\t#c3c3c3 (gtk)\n-controlDkShadow\t\t#888888 (unsure of this)\n-scrollbar\t\t#c3c3c3 (gtk)\n-info\t\t\t#d6d6d6 (gtk)\n-infoText\t\t#000000 (gtk)"}, {"sha": "a838444924d9113cbf8bc1b97e1ae07add9c2554", "filename": "libjava/classpath/gnu/javax/swing/plaf/gtk/SliderTest.java", "status": "removed", "additions": 0, "deletions": 82, "changes": 82, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b044d19517541c95681d35a92dbc81e6e21d94f/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fswing%2Fplaf%2Fgtk%2FSliderTest.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b044d19517541c95681d35a92dbc81e6e21d94f/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fswing%2Fplaf%2Fgtk%2FSliderTest.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fswing%2Fplaf%2Fgtk%2FSliderTest.java?ref=9b044d19517541c95681d35a92dbc81e6e21d94f", "patch": "@@ -1,82 +0,0 @@\n-import javax.swing.*;\n-import javax.swing.event.*;\n-import java.awt.*;\n-import java.awt.event.*;\n-import gnu.javax.swing.plaf.gtk.*;\n-\n-public class SliderTest extends JFrame\n-{\n-    public SliderTest() \n-    { \n-\tsuper(\"JSlider Test\");\n-\tContainer c = getContentPane();\n-\tc.setLayout(new BorderLayout());\n-\tthis.addWindowListener(new WindowAdapter() {\n-\t    public void windowClosing(WindowEvent e) { System.exit(0); } \n-\t});\n-\n-\tJSlider s = new JSlider();\n-\ts.createStandardLabels(10);\n-\ts.setMinorTickSpacing(10);\n-\ts.setMajorTickSpacing(20);\n-\ts.setPaintTicks(true);\n-\ts.setPaintTrack(true);\n-\ts.setPaintLabels(true);\n-\ts.setRequestFocusEnabled(true);\n-\n-\t// turning off double buffering in repaint manager \n-\t// in order to use debug graphics\n-\tRepaintManager repaintManager = RepaintManager.currentManager(s);\n-\trepaintManager.setDoubleBufferingEnabled(false); \n-\n-\ts.setDebugGraphicsOptions(DebugGraphics.BUFFERED_OPTION | DebugGraphics.FLASH_OPTION);\n-\tDebugGraphics.setFlashColor(Color.red);  // color of flash\n-\tDebugGraphics.setFlashTime(4);  // time delay of drawing operation flashing\n-\tDebugGraphics.setFlashCount(3); // number of time to draw\n-\n-\tthis.setSize(250, 100);\n-\tc.add(new JLabel(\"Default Slider\"), \"North\");\n-\tc.add(s, \"Center\");\n-\n-\ttry {\n-\t    UIManager.setLookAndFeel(\"gnu.javax.swing.plaf.gtk.GtkLookAndFeel\");\n-\t    SwingUtilities.updateComponentTreeUI(this);\n-\t} catch (Exception e) {\n-\t    e.printStackTrace();\n-\t    System.exit(0);\n-\t}\n-\n-\tcenter();\n-    }\n-\n-    public void actionPerformed(ActionEvent e) { \n-\tSystem.exit(0);\n-    }\n-    \n-    public void center()\n-    {\n-\t// Centering the frame \n-\tToolkit t = this.getToolkit();\n-\tDimension framesize = this.getSize();\n-\tDimension screensize = t.getScreenSize();\n-\t\n-\t// Calculate point for frame (main)\n-\tPoint pframe = new Point();\n-\tpframe.x = (screensize.width - framesize.width) / 2;\n-\tpframe.y = (screensize.height - framesize.height) / 2;\n-\t\n-\t// Set the location of each to be centered\n-\tthis.setLocation(pframe);\n-    }\n-\n-    public static void main(String [] argv)\n-    {\n-\tSliderTest t = new SliderTest();\n-\tt.show();\n-    }\n-\n-}\n-\n-\n-\n-"}, {"sha": "cbc1ee0648bf4654ee1aafe5319fb0691ae023b1", "filename": "libjava/classpath/gnu/xml/xpath/ArithmeticExpr.java", "status": "modified", "additions": 21, "deletions": 7, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2Fxml%2Fxpath%2FArithmeticExpr.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2Fxml%2Fxpath%2FArithmeticExpr.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fxml%2Fxpath%2FArithmeticExpr.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -95,17 +95,31 @@ public Object evaluate(Node context, int pos, int len)\n       case DIVIDE:\n         if (rn == 0.0d || rn == -0.0d)\n           {\n-            return new Double(ln < 0.0d ?\n-                              Double.NEGATIVE_INFINITY :\n-                              Double.POSITIVE_INFINITY);\n+            if (ln == 0.0d || ln == -0.0d)\n+              {\n+                return new Double(Double.NaN);\n+              }\n+            else\n+              {\n+                return new Double(ln < 0.0d ?\n+                                  Double.NEGATIVE_INFINITY :\n+                                  Double.POSITIVE_INFINITY);\n+              }\n           }\n         return new Double(ln / rn);\n       case MODULO:\n-        if (rn == 0.0d || rn == -0.0d)\n+        if (rn == 0.0d || rn == 0.0d)\n           {\n-            return new Double(ln < 0.0d ?\n-                              Double.NEGATIVE_INFINITY :\n-                              Double.POSITIVE_INFINITY);\n+            if (ln == 0.0d || ln == -0.0d)\n+              {\n+                return new Double(Double.NaN);\n+              }\n+            else\n+              {\n+                return new Double(ln < 0.0d ?\n+                                  Double.NEGATIVE_INFINITY :\n+                                  Double.POSITIVE_INFINITY);\n+              }\n           }\n         return new Double(ln % rn);\n       default:"}, {"sha": "03066fbfc3620593a42bcbf56d3a47305b53d82a", "filename": "libjava/classpath/gnu/xml/xpath/XPathParser.java", "status": "modified", "additions": 37, "deletions": 37, "changes": 74, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2Fxml%2Fxpath%2FXPathParser.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2Fxml%2Fxpath%2FXPathParser.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fxml%2Fxpath%2FXPathParser.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -1,43 +1,43 @@\n // created by jay 0.8 (c) 1998 Axel.Schreiner@informatik.uni-osnabrueck.de\n \n \t\t\t\t\t// line 2 \"XPathParser.y\"\n-/*\n- * XPathParser.java\n- * Copyright (C) 2004 The Free Software Foundation\n- * \n- * This file is part of GNU JAXP, a library.\n- *\n- * GNU JAXP is free software; you can redistribute it and/or modify\n- * it under the terms of the GNU General Public License as published by\n- * the Free Software Foundation; either version 2 of the License, or\n- * (at your option) any later version.\n- * \n- * GNU JAXP is distributed in the hope that it will be useful,\n- * but WITHOUT ANY WARRANTY; without even the implied warranty of\n- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n- * GNU General Public License for more details.\n- * \n- * You should have received a copy of the GNU General Public License\n- * along with this program; if not, write to the Free Software\n- * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n- *\n- * Linking this library statically or dynamically with other modules is\n- * making a combined work based on this library.  Thus, the terms and\n- * conditions of the GNU General Public License cover the whole\n- * combination.\n- *\n- * As a special exception, the copyright holders of this library give you\n- * permission to link this library with independent modules to produce an\n- * executable, regardless of the license terms of these independent\n- * modules, and to copy and distribute the resulting executable under\n- * terms of your choice, provided that you also meet, for each linked\n- * independent module, the terms and conditions of the license of that\n- * module.  An independent module is a module which is not derived from\n- * or based on this library.  If you modify this library, you may extend\n- * this exception to your version of the library, but you are not\n- * obliged to do so.  If you do not wish to do so, delete this\n- * exception statement from your version. \n- */\n+/* XPathParser.y - An XPath 1.0 parser.\n+   Copyright (C) 2004 The Free Software Foundation\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n+02110-1301 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n \n package gnu.xml.xpath;\n "}, {"sha": "550151386558973a4f1b3b8a3808a33a46c2eeae", "filename": "libjava/classpath/gnu/xml/xpath/XPathParser.y", "status": "modified", "additions": 37, "deletions": 37, "changes": 74, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2Fxml%2Fxpath%2FXPathParser.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fgnu%2Fxml%2Fxpath%2FXPathParser.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fxml%2Fxpath%2FXPathParser.y?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -1,41 +1,41 @@\n %{\n-/*\n- * XPathParser.java\n- * Copyright (C) 2004 The Free Software Foundation\n- * \n- * This file is part of GNU JAXP, a library.\n- *\n- * GNU JAXP is free software; you can redistribute it and/or modify\n- * it under the terms of the GNU General Public License as published by\n- * the Free Software Foundation; either version 2 of the License, or\n- * (at your option) any later version.\n- * \n- * GNU JAXP is distributed in the hope that it will be useful,\n- * but WITHOUT ANY WARRANTY; without even the implied warranty of\n- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n- * GNU General Public License for more details.\n- * \n- * You should have received a copy of the GNU General Public License\n- * along with this program; if not, write to the Free Software\n- * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n- *\n- * Linking this library statically or dynamically with other modules is\n- * making a combined work based on this library.  Thus, the terms and\n- * conditions of the GNU General Public License cover the whole\n- * combination.\n- *\n- * As a special exception, the copyright holders of this library give you\n- * permission to link this library with independent modules to produce an\n- * executable, regardless of the license terms of these independent\n- * modules, and to copy and distribute the resulting executable under\n- * terms of your choice, provided that you also meet, for each linked\n- * independent module, the terms and conditions of the license of that\n- * module.  An independent module is a module which is not derived from\n- * or based on this library.  If you modify this library, you may extend\n- * this exception to your version of the library, but you are not\n- * obliged to do so.  If you do not wish to do so, delete this\n- * exception statement from your version. \n- */\n+/* XPathParser.y - An XPath 1.0 parser.\n+   Copyright (C) 2004 The Free Software Foundation\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n+02110-1301 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n \n package gnu.xml.xpath;\n "}, {"sha": "a65ac5e473fe219d1e59256fdc2bb6dd6141f963", "filename": "libjava/classpath/include/Makefile.am", "status": "modified", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Finclude%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Finclude%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Finclude%2FMakefile.am?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -1,3 +1,5 @@\n+include_HEADERS = jni.h jni_md.h jawt.h jawt_md.h\n+\n DISTCLEANFILES = jni_md.h\n \n ARG_JNI_JAVAH = -jni\n@@ -57,15 +59,55 @@ $(top_srcdir)/include/gnu_java_awt_peer_gtk_GtkPanelPeer.h \\\n $(top_srcdir)/include/gnu_java_awt_peer_gtk_GtkPopupMenuPeer.h \\\n $(top_srcdir)/include/gnu_java_awt_peer_gtk_GtkScrollPanePeer.h \\\n $(top_srcdir)/include/gnu_java_awt_peer_gtk_GtkScrollbarPeer.h \\\n+$(top_srcdir)/include/gnu_java_awt_peer_gtk_GtkSelection.h \\\n $(top_srcdir)/include/gnu_java_awt_peer_gtk_GtkTextAreaPeer.h \\\n $(top_srcdir)/include/gnu_java_awt_peer_gtk_GtkTextFieldPeer.h \\\n $(top_srcdir)/include/gnu_java_awt_peer_gtk_GtkToolkit.h \\\n $(top_srcdir)/include/gnu_java_awt_peer_gtk_GtkWindowPeer.h \\\n $(top_srcdir)/include/gnu_java_awt_peer_gtk_GThreadNativeMethodRunner.h\n \n+QTPEER_H_FILES = \\\n+$(top_srcdir)/include/gnu_java_awt_peer_qt_QtCheckboxPeer.h \\\n+$(top_srcdir)/include/gnu_java_awt_peer_qt_QtToolkit.h \\\n+$(top_srcdir)/include/gnu_java_awt_peer_qt_QtAudioClip.h \\\n+$(top_srcdir)/include/gnu_java_awt_peer_qt_QtScreenDevice.h \\\n+$(top_srcdir)/include/gnu_java_awt_peer_qt_QtTextFieldPeer.h \\\n+$(top_srcdir)/include/gnu_java_awt_peer_qt_QtMenuItemPeer.h \\\n+$(top_srcdir)/include/gnu_java_awt_peer_qt_QtButtonPeer.h \\\n+$(top_srcdir)/include/gnu_java_awt_peer_qt_QtWindowPeer.h \\\n+$(top_srcdir)/include/gnu_java_awt_peer_qt_QtDialogPeer.h \\\n+$(top_srcdir)/include/gnu_java_awt_peer_qt_QtImage.h \\\n+$(top_srcdir)/include/gnu_java_awt_peer_qt_QtMenuBarPeer.h \\\n+$(top_srcdir)/include/gnu_java_awt_peer_qt_QtVolatileImage.h \\\n+$(top_srcdir)/include/gnu_java_awt_peer_qt_QtFontPeer.h \\\n+$(top_srcdir)/include/gnu_java_awt_peer_qt_QtChoicePeer.h \\\n+$(top_srcdir)/include/gnu_java_awt_peer_qt_QtGraphics.h \\\n+$(top_srcdir)/include/gnu_java_awt_peer_qt_QtComponentPeer.h \\\n+$(top_srcdir)/include/gnu_java_awt_peer_qt_QtMenuPeer.h \\\n+$(top_srcdir)/include/gnu_java_awt_peer_qt_QtTextAreaPeer.h \\\n+$(top_srcdir)/include/gnu_java_awt_peer_qt_QPen.h \\\n+$(top_srcdir)/include/gnu_java_awt_peer_qt_QtPanelPeer.h \\\n+$(top_srcdir)/include/gnu_java_awt_peer_qt_QPainterPath.h \\\n+$(top_srcdir)/include/gnu_java_awt_peer_qt_QtFontMetrics.h \\\n+$(top_srcdir)/include/gnu_java_awt_peer_qt_QtScrollPanePeer.h \\\n+$(top_srcdir)/include/gnu_java_awt_peer_qt_QtGraphicsEnvironment.h \\\n+$(top_srcdir)/include/gnu_java_awt_peer_qt_QMatrix.h \\\n+$(top_srcdir)/include/gnu_java_awt_peer_qt_QtLabelPeer.h \\\n+$(top_srcdir)/include/gnu_java_awt_peer_qt_QtPopupMenuPeer.h \\\n+$(top_srcdir)/include/gnu_java_awt_peer_qt_QtFramePeer.h \\\n+$(top_srcdir)/include/gnu_java_awt_peer_qt_QtListPeer.h \\\n+$(top_srcdir)/include/gnu_java_awt_peer_qt_QtScrollbarPeer.h \\\n+$(top_srcdir)/include/gnu_java_awt_peer_qt_QtCanvasPeer.h \\\n+$(top_srcdir)/include/gnu_java_awt_peer_qt_QtMenuComponentPeer.h \\\n+$(top_srcdir)/include/gnu_java_awt_peer_qt_MainQtThread.h \\\n+$(top_srcdir)/include/gnu_java_awt_peer_qt_QtFileDialogPeer.h \\\n+$(top_srcdir)/include/gnu_java_awt_peer_qt_QtContainerPeer.h \\\n+$(top_srcdir)/include/gnu_java_awt_peer_qt_QtEmbeddedWindowPeer.h \n+\n H_FILES = \\\n $(XMLJ_H_FILES) \\\n $(GTKPEER_H_FILES) \\\n+$(QTPEER_H_FILES) \\\n $(top_srcdir)/include/gnu_java_net_PlainDatagramSocketImpl.h \\\n $(top_srcdir)/include/gnu_java_net_PlainSocketImpl.h \\\n $(top_srcdir)/include/gnu_java_nio_VMPipe.h \\\n@@ -104,6 +146,9 @@ $(top_srcdir)/include/gnu_xml_libxmlj_transform_%.h: $(top_builddir)/lib/gnu/xml\n $(top_srcdir)/include/gnu_java_awt_peer_gtk_%.h: $(top_builddir)/lib/gnu/java/awt/peer/gtk/%.class\n \t$(JAVAH) -o $@ gnu.java.awt.peer.gtk.$*\n \n+$(top_srcdir)/include/gnu_java_awt_peer_qt_%.h: $(top_builddir)/lib/gnu/java/awt/peer/qt/%.class\n+\t$(JAVAH) -o $@ gnu.java.awt.peer.qt.$*\n+\n $(top_srcdir)/include/gnu_java_net_PlainDatagramSocketImpl.h: $(top_srcdir)/gnu/java/net/PlainDatagramSocketImpl.java\n \t$(JAVAH) -o $@ gnu.java.net.PlainDatagramSocketImpl\n $(top_srcdir)/include/gnu_java_net_PlainSocketImpl.h: $(top_srcdir)/gnu/java/net/PlainSocketImpl.java"}, {"sha": "a6b7313edfbbcaaeb59ba8ea26b2f80cf3ea50fa", "filename": "libjava/classpath/include/Makefile.in", "status": "modified", "additions": 152, "deletions": 21, "changes": 173, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Finclude%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Finclude%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Finclude%2FMakefile.in?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -1,8 +1,8 @@\n-# Makefile.in generated by automake 1.9.5 from Makefile.am.\n+# Makefile.in generated by automake 1.9.3 from Makefile.am.\n # @configure_input@\n \n # Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,\n-# 2003, 2004, 2005  Free Software Foundation, Inc.\n+# 2003, 2004  Free Software Foundation, Inc.\n # This Makefile.in is free software; the Free Software Foundation\n # gives unlimited permission to copy and/or distribute it,\n # with or without modifications, as long as this notice is preserved.\n@@ -13,6 +13,7 @@\n # PARTICULAR PURPOSE.\n \n @SET_MAKE@\n+\n srcdir = @srcdir@\n top_srcdir = @top_srcdir@\n VPATH = @srcdir@\n@@ -37,8 +38,8 @@ build_triplet = @build@\n host_triplet = @host@\n target_triplet = @target@\n subdir = include\n-DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in \\\n-\t$(srcdir)/config.h.in\n+DIST_COMMON = $(include_HEADERS) $(srcdir)/Makefile.am \\\n+\t$(srcdir)/Makefile.in $(srcdir)/config.h.in\n ACLOCAL_M4 = $(top_srcdir)/aclocal.m4\n am__aclocal_m4_deps = $(top_srcdir)/../../libtool.m4 \\\n \t$(top_srcdir)/m4/accross.m4 $(top_srcdir)/m4/acinclude.m4 \\\n@@ -52,6 +53,17 @@ CONFIG_HEADER = config.h\n CONFIG_CLEAN_FILES =\n SOURCES =\n DIST_SOURCES =\n+am__vpath_adj_setup = srcdirstrip=`echo \"$(srcdir)\" | sed 's|.|.|g'`;\n+am__vpath_adj = case $$p in \\\n+    $(srcdir)/*) f=`echo \"$$p\" | sed \"s|^$$srcdirstrip/||\"`;; \\\n+    *) f=$$p;; \\\n+  esac;\n+am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;\n+am__installdirs = \"$(DESTDIR)$(includedir)\"\n+includeHEADERS_INSTALL = $(INSTALL_HEADER)\n+HEADERS = $(include_HEADERS)\n+ETAGS = etags\n+CTAGS = ctags\n DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)\n ACLOCAL = @ACLOCAL@\n AMDEP_FALSE = @AMDEP_FALSE@\n@@ -83,8 +95,14 @@ CREATE_JNI_HEADERS_FALSE = @CREATE_JNI_HEADERS_FALSE@\n CREATE_JNI_HEADERS_TRUE = @CREATE_JNI_HEADERS_TRUE@\n CREATE_JNI_LIBRARIES_FALSE = @CREATE_JNI_LIBRARIES_FALSE@\n CREATE_JNI_LIBRARIES_TRUE = @CREATE_JNI_LIBRARIES_TRUE@\n+CREATE_QT_PEER_LIBRARIES_FALSE = @CREATE_QT_PEER_LIBRARIES_FALSE@\n+CREATE_QT_PEER_LIBRARIES_TRUE = @CREATE_QT_PEER_LIBRARIES_TRUE@\n CREATE_XMLJ_LIBRARY_FALSE = @CREATE_XMLJ_LIBRARY_FALSE@\n CREATE_XMLJ_LIBRARY_TRUE = @CREATE_XMLJ_LIBRARY_TRUE@\n+CXX = @CXX@\n+CXXCPP = @CXXCPP@\n+CXXDEPMODE = @CXXDEPMODE@\n+CXXFLAGS = @CXXFLAGS@\n CYGPATH_W = @CYGPATH_W@\n DATE = @DATE@\n DEFS = @DEFS@\n@@ -146,6 +164,7 @@ MAINTAINER_MODE_FALSE = @MAINTAINER_MODE_FALSE@\n MAINTAINER_MODE_TRUE = @MAINTAINER_MODE_TRUE@\n MAKEINFO = @MAKEINFO@\n MKDIR = @MKDIR@\n+MOC = @MOC@\n OBJEXT = @OBJEXT@\n PACKAGE = @PACKAGE@\n PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@\n@@ -157,12 +176,13 @@ PANGOFT2_CFLAGS = @PANGOFT2_CFLAGS@\n PANGOFT2_LIBS = @PANGOFT2_LIBS@\n PATH_SEPARATOR = @PATH_SEPARATOR@\n PKG_CONFIG = @PKG_CONFIG@\n+QT_CFLAGS = @QT_CFLAGS@\n+QT_LIBS = @QT_LIBS@\n RANLIB = @RANLIB@\n REGEN_PARSERS_FALSE = @REGEN_PARSERS_FALSE@\n REGEN_PARSERS_TRUE = @REGEN_PARSERS_TRUE@\n REMOVE = @REMOVE@\n SET_MAKE = @SET_MAKE@\n-SH = @SH@\n SHELL = @SHELL@\n STRICT_WARNING_CFLAGS = @STRICT_WARNING_CFLAGS@\n STRIP = @STRIP@\n@@ -184,10 +204,13 @@ X_LIBS = @X_LIBS@\n X_PRE_LIBS = @X_PRE_LIBS@\n ZIP = @ZIP@\n ac_ct_CC = @ac_ct_CC@\n+ac_ct_CXX = @ac_ct_CXX@\n ac_ct_RANLIB = @ac_ct_RANLIB@\n ac_ct_STRIP = @ac_ct_STRIP@\n am__fastdepCC_FALSE = @am__fastdepCC_FALSE@\n am__fastdepCC_TRUE = @am__fastdepCC_TRUE@\n+am__fastdepCXX_FALSE = @am__fastdepCXX_FALSE@\n+am__fastdepCXX_TRUE = @am__fastdepCXX_TRUE@\n am__include = @am__include@\n am__leading_dot = @am__leading_dot@\n am__quote = @am__quote@\n@@ -227,6 +250,7 @@ target_cpu = @target_cpu@\n target_os = @target_os@\n target_vendor = @target_vendor@\n vm_classes = @vm_classes@\n+include_HEADERS = jni.h jni_md.h jawt.h jawt_md.h\n DISTCLEANFILES = jni_md.h\n ARG_JNI_JAVAH = -jni\n ARG_CLASSPATH_JAVAH = -bootclasspath\n@@ -284,15 +308,55 @@ $(top_srcdir)/include/gnu_java_awt_peer_gtk_GtkPanelPeer.h \\\n $(top_srcdir)/include/gnu_java_awt_peer_gtk_GtkPopupMenuPeer.h \\\n $(top_srcdir)/include/gnu_java_awt_peer_gtk_GtkScrollPanePeer.h \\\n $(top_srcdir)/include/gnu_java_awt_peer_gtk_GtkScrollbarPeer.h \\\n+$(top_srcdir)/include/gnu_java_awt_peer_gtk_GtkSelection.h \\\n $(top_srcdir)/include/gnu_java_awt_peer_gtk_GtkTextAreaPeer.h \\\n $(top_srcdir)/include/gnu_java_awt_peer_gtk_GtkTextFieldPeer.h \\\n $(top_srcdir)/include/gnu_java_awt_peer_gtk_GtkToolkit.h \\\n $(top_srcdir)/include/gnu_java_awt_peer_gtk_GtkWindowPeer.h \\\n $(top_srcdir)/include/gnu_java_awt_peer_gtk_GThreadNativeMethodRunner.h\n \n+QTPEER_H_FILES = \\\n+$(top_srcdir)/include/gnu_java_awt_peer_qt_QtCheckboxPeer.h \\\n+$(top_srcdir)/include/gnu_java_awt_peer_qt_QtToolkit.h \\\n+$(top_srcdir)/include/gnu_java_awt_peer_qt_QtAudioClip.h \\\n+$(top_srcdir)/include/gnu_java_awt_peer_qt_QtScreenDevice.h \\\n+$(top_srcdir)/include/gnu_java_awt_peer_qt_QtTextFieldPeer.h \\\n+$(top_srcdir)/include/gnu_java_awt_peer_qt_QtMenuItemPeer.h \\\n+$(top_srcdir)/include/gnu_java_awt_peer_qt_QtButtonPeer.h \\\n+$(top_srcdir)/include/gnu_java_awt_peer_qt_QtWindowPeer.h \\\n+$(top_srcdir)/include/gnu_java_awt_peer_qt_QtDialogPeer.h \\\n+$(top_srcdir)/include/gnu_java_awt_peer_qt_QtImage.h \\\n+$(top_srcdir)/include/gnu_java_awt_peer_qt_QtMenuBarPeer.h \\\n+$(top_srcdir)/include/gnu_java_awt_peer_qt_QtVolatileImage.h \\\n+$(top_srcdir)/include/gnu_java_awt_peer_qt_QtFontPeer.h \\\n+$(top_srcdir)/include/gnu_java_awt_peer_qt_QtChoicePeer.h \\\n+$(top_srcdir)/include/gnu_java_awt_peer_qt_QtGraphics.h \\\n+$(top_srcdir)/include/gnu_java_awt_peer_qt_QtComponentPeer.h \\\n+$(top_srcdir)/include/gnu_java_awt_peer_qt_QtMenuPeer.h \\\n+$(top_srcdir)/include/gnu_java_awt_peer_qt_QtTextAreaPeer.h \\\n+$(top_srcdir)/include/gnu_java_awt_peer_qt_QPen.h \\\n+$(top_srcdir)/include/gnu_java_awt_peer_qt_QtPanelPeer.h \\\n+$(top_srcdir)/include/gnu_java_awt_peer_qt_QPainterPath.h \\\n+$(top_srcdir)/include/gnu_java_awt_peer_qt_QtFontMetrics.h \\\n+$(top_srcdir)/include/gnu_java_awt_peer_qt_QtScrollPanePeer.h \\\n+$(top_srcdir)/include/gnu_java_awt_peer_qt_QtGraphicsEnvironment.h \\\n+$(top_srcdir)/include/gnu_java_awt_peer_qt_QMatrix.h \\\n+$(top_srcdir)/include/gnu_java_awt_peer_qt_QtLabelPeer.h \\\n+$(top_srcdir)/include/gnu_java_awt_peer_qt_QtPopupMenuPeer.h \\\n+$(top_srcdir)/include/gnu_java_awt_peer_qt_QtFramePeer.h \\\n+$(top_srcdir)/include/gnu_java_awt_peer_qt_QtListPeer.h \\\n+$(top_srcdir)/include/gnu_java_awt_peer_qt_QtScrollbarPeer.h \\\n+$(top_srcdir)/include/gnu_java_awt_peer_qt_QtCanvasPeer.h \\\n+$(top_srcdir)/include/gnu_java_awt_peer_qt_QtMenuComponentPeer.h \\\n+$(top_srcdir)/include/gnu_java_awt_peer_qt_MainQtThread.h \\\n+$(top_srcdir)/include/gnu_java_awt_peer_qt_QtFileDialogPeer.h \\\n+$(top_srcdir)/include/gnu_java_awt_peer_qt_QtContainerPeer.h \\\n+$(top_srcdir)/include/gnu_java_awt_peer_qt_QtEmbeddedWindowPeer.h \n+\n H_FILES = \\\n $(XMLJ_H_FILES) \\\n $(GTKPEER_H_FILES) \\\n+$(QTPEER_H_FILES) \\\n $(top_srcdir)/include/gnu_java_net_PlainDatagramSocketImpl.h \\\n $(top_srcdir)/include/gnu_java_net_PlainSocketImpl.h \\\n $(top_srcdir)/include/gnu_java_nio_VMPipe.h \\\n@@ -375,12 +439,71 @@ clean-libtool:\n distclean-libtool:\n \t-rm -f libtool\n uninstall-info-am:\n+install-includeHEADERS: $(include_HEADERS)\n+\t@$(NORMAL_INSTALL)\n+\ttest -z \"$(includedir)\" || $(mkdir_p) \"$(DESTDIR)$(includedir)\"\n+\t@list='$(include_HEADERS)'; for p in $$list; do \\\n+\t  if test -f \"$$p\"; then d=; else d=\"$(srcdir)/\"; fi; \\\n+\t  f=$(am__strip_dir) \\\n+\t  echo \" $(includeHEADERS_INSTALL) '$$d$$p' '$(DESTDIR)$(includedir)/$$f'\"; \\\n+\t  $(includeHEADERS_INSTALL) \"$$d$$p\" \"$(DESTDIR)$(includedir)/$$f\"; \\\n+\tdone\n+\n+uninstall-includeHEADERS:\n+\t@$(NORMAL_UNINSTALL)\n+\t@list='$(include_HEADERS)'; for p in $$list; do \\\n+\t  f=$(am__strip_dir) \\\n+\t  echo \" rm -f '$(DESTDIR)$(includedir)/$$f'\"; \\\n+\t  rm -f \"$(DESTDIR)$(includedir)/$$f\"; \\\n+\tdone\n+\n+ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)\n+\tlist='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \\\n+\tunique=`for i in $$list; do \\\n+\t    if test -f \"$$i\"; then echo $$i; else echo $(srcdir)/$$i; fi; \\\n+\t  done | \\\n+\t  $(AWK) '    { files[$$0] = 1; } \\\n+\t       END { for (i in files) print i; }'`; \\\n+\tmkid -fID $$unique\n tags: TAGS\n-TAGS:\n \n+TAGS:  $(HEADERS) $(SOURCES) config.h.in $(TAGS_DEPENDENCIES) \\\n+\t\t$(TAGS_FILES) $(LISP)\n+\ttags=; \\\n+\there=`pwd`; \\\n+\tlist='$(SOURCES) $(HEADERS) config.h.in $(LISP) $(TAGS_FILES)'; \\\n+\tunique=`for i in $$list; do \\\n+\t    if test -f \"$$i\"; then echo $$i; else echo $(srcdir)/$$i; fi; \\\n+\t  done | \\\n+\t  $(AWK) '    { files[$$0] = 1; } \\\n+\t       END { for (i in files) print i; }'`; \\\n+\tif test -z \"$(ETAGS_ARGS)$$tags$$unique\"; then :; else \\\n+\t  test -n \"$$unique\" || unique=$$empty_fix; \\\n+\t  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \\\n+\t    $$tags $$unique; \\\n+\tfi\n ctags: CTAGS\n-CTAGS:\n-\n+CTAGS:  $(HEADERS) $(SOURCES) config.h.in $(TAGS_DEPENDENCIES) \\\n+\t\t$(TAGS_FILES) $(LISP)\n+\ttags=; \\\n+\there=`pwd`; \\\n+\tlist='$(SOURCES) $(HEADERS) config.h.in $(LISP) $(TAGS_FILES)'; \\\n+\tunique=`for i in $$list; do \\\n+\t    if test -f \"$$i\"; then echo $$i; else echo $(srcdir)/$$i; fi; \\\n+\t  done | \\\n+\t  $(AWK) '    { files[$$0] = 1; } \\\n+\t       END { for (i in files) print i; }'`; \\\n+\ttest -z \"$(CTAGS_ARGS)$$tags$$unique\" \\\n+\t  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \\\n+\t     $$tags $$unique\n+\n+GTAGS:\n+\there=`$(am__cd) $(top_builddir) && pwd` \\\n+\t  && cd $(top_srcdir) \\\n+\t  && gtags -i $(GTAGS_ARGS) $$here\n+\n+distclean-tags:\n+\t-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags\n \n distdir: $(DISTFILES)\n \t@srcdirstrip=`echo \"$(srcdir)\" | sed 's|.|.|g'`; \\\n@@ -412,8 +535,11 @@ distdir: $(DISTFILES)\n check-am: all-am\n check: check-am\n @CREATE_JNI_HEADERS_FALSE@all-local:\n-all-am: Makefile config.h all-local\n+all-am: Makefile $(HEADERS) config.h all-local\n installdirs:\n+\tfor dir in \"$(DESTDIR)$(includedir)\"; do \\\n+\t  test -z \"$$dir\" || $(mkdir_p) \"$$dir\"; \\\n+\tdone\n install: install-am\n install-exec: install-exec-am\n install-data: install-data-am\n@@ -446,7 +572,7 @@ clean-am: clean-generic clean-libtool mostlyclean-am\n distclean: distclean-am\n \t-rm -f Makefile\n distclean-am: clean-am distclean-generic distclean-hdr \\\n-\tdistclean-libtool\n+\tdistclean-libtool distclean-tags\n \n dvi: dvi-am\n \n@@ -458,7 +584,7 @@ info: info-am\n \n info-am:\n \n-install-data-am:\n+install-data-am: install-includeHEADERS\n \n install-exec-am:\n \n@@ -484,17 +610,19 @@ ps: ps-am\n \n ps-am:\n \n-uninstall-am: uninstall-info-am\n+uninstall-am: uninstall-includeHEADERS uninstall-info-am\n \n-.PHONY: all all-am all-local check check-am clean clean-generic \\\n-\tclean-libtool distclean distclean-generic distclean-hdr \\\n-\tdistclean-libtool distdir dvi dvi-am html html-am info info-am \\\n-\tinstall install-am install-data install-data-am install-exec \\\n-\tinstall-exec-am install-info install-info-am install-man \\\n-\tinstall-strip installcheck installcheck-am installdirs \\\n-\tmaintainer-clean maintainer-clean-generic mostlyclean \\\n-\tmostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \\\n-\tuninstall uninstall-am uninstall-info-am\n+.PHONY: CTAGS GTAGS all all-am all-local check check-am clean \\\n+\tclean-generic clean-libtool ctags distclean distclean-generic \\\n+\tdistclean-hdr distclean-libtool distclean-tags distdir dvi \\\n+\tdvi-am html html-am info info-am install install-am \\\n+\tinstall-data install-data-am install-exec install-exec-am \\\n+\tinstall-includeHEADERS install-info install-info-am \\\n+\tinstall-man install-strip installcheck installcheck-am \\\n+\tinstalldirs maintainer-clean maintainer-clean-generic \\\n+\tmostlyclean mostlyclean-generic mostlyclean-libtool pdf pdf-am \\\n+\tps ps-am tags uninstall uninstall-am uninstall-includeHEADERS \\\n+\tuninstall-info-am\n \n \n @CREATE_JNI_HEADERS_TRUE@all-local: $(H_FILES)\n@@ -511,6 +639,9 @@ uninstall-am: uninstall-info-am\n @CREATE_JNI_HEADERS_TRUE@$(top_srcdir)/include/gnu_java_awt_peer_gtk_%.h: $(top_builddir)/lib/gnu/java/awt/peer/gtk/%.class\n @CREATE_JNI_HEADERS_TRUE@\t$(JAVAH) -o $@ gnu.java.awt.peer.gtk.$*\n \n+@CREATE_JNI_HEADERS_TRUE@$(top_srcdir)/include/gnu_java_awt_peer_qt_%.h: $(top_builddir)/lib/gnu/java/awt/peer/qt/%.class\n+@CREATE_JNI_HEADERS_TRUE@\t$(JAVAH) -o $@ gnu.java.awt.peer.qt.$*\n+\n @CREATE_JNI_HEADERS_TRUE@$(top_srcdir)/include/gnu_java_net_PlainDatagramSocketImpl.h: $(top_srcdir)/gnu/java/net/PlainDatagramSocketImpl.java\n @CREATE_JNI_HEADERS_TRUE@\t$(JAVAH) -o $@ gnu.java.net.PlainDatagramSocketImpl\n @CREATE_JNI_HEADERS_TRUE@$(top_srcdir)/include/gnu_java_net_PlainSocketImpl.h: $(top_srcdir)/gnu/java/net/PlainSocketImpl.java"}, {"sha": "ab5e10994f25e63ecc54f60c76764e1c9fc3d678", "filename": "libjava/classpath/include/config.h.in", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Finclude%2Fconfig.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Finclude%2Fconfig.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Finclude%2Fconfig.h.in?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -54,6 +54,9 @@\n /* Define to 1 if you have the `gethostname' function. */\n #undef HAVE_GETHOSTNAME\n \n+/* Define to 1 if you have the `getpagesize' function. */\n+#undef HAVE_GETPAGESIZE\n+\n /* Define to 1 if you have the `getpeername' function. */\n #undef HAVE_GETPEERNAME\n \n@@ -87,15 +90,30 @@\n /* Define to 1 if you have the `lseek' function. */\n #undef HAVE_LSEEK\n \n+/* Define to 1 if you have the `madvise' function. */\n+#undef HAVE_MADVISE\n+\n /* Define to 1 if you have the <memory.h> header file. */\n #undef HAVE_MEMORY_H\n \n /* Define to 1 if you have the `memset' function. */\n #undef HAVE_MEMSET\n \n+/* Define to 1 if you have the `mincore' function. */\n+#undef HAVE_MINCORE\n+\n /* Define to 1 if you have the `mktime' function. */\n #undef HAVE_MKTIME\n \n+/* Define to 1 if you have the `mmap' function. */\n+#undef HAVE_MMAP\n+\n+/* Define to 1 if you have the `msync' function. */\n+#undef HAVE_MSYNC\n+\n+/* Define to 1 if you have the `munmap' function. */\n+#undef HAVE_MUNMAP\n+\n /* Define to 1 if you have the `open' function. */\n #undef HAVE_OPEN\n \n@@ -144,6 +162,9 @@\n /* Define to 1 if `tm_zone' is member of `struct tm'. */\n #undef HAVE_STRUCT_TM_TM_ZONE\n \n+/* Define to 1 if you have the `sysconf' function. */\n+#undef HAVE_SYSCONF\n+\n /* Define to 1 if you have the <sys/config.h> header file. */\n #undef HAVE_SYS_CONFIG_H\n \n@@ -153,6 +174,9 @@\n /* Define to 1 if you have the <sys/ioctl.h> header file. */\n #undef HAVE_SYS_IOCTL_H\n \n+/* Define to 1 if you have the <sys/mman.h> header file. */\n+#undef HAVE_SYS_MMAN_H\n+\n /* Define to 1 if you have the <sys/select.h> header file. */\n #undef HAVE_SYS_SELECT_H\n "}, {"sha": "427f0916d1d16ff785b162d64683d6b73b837990", "filename": "libjava/classpath/include/gnu_java_awt_peer_gtk_GdkGraphics.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Finclude%2Fgnu_java_awt_peer_gtk_GdkGraphics.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Finclude%2Fgnu_java_awt_peer_gtk_GdkGraphics.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Finclude%2Fgnu_java_awt_peer_gtk_GdkGraphics.h?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -10,7 +10,9 @@ extern \"C\"\n {\n #endif\n \n+JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GdkGraphics_initStaticState (JNIEnv *env, jclass);\n JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GdkGraphics_initState__Lgnu_java_awt_peer_gtk_GtkComponentPeer_2 (JNIEnv *env, jobject, jobject);\n+JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GdkGraphics_initStateUnlocked (JNIEnv *env, jobject, jobject);\n JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GdkGraphics_initState__II (JNIEnv *env, jobject, jint, jint);\n JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GdkGraphics_initFromImage (JNIEnv *env, jobject, jobject);\n JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GdkGraphics_copyState (JNIEnv *env, jobject, jobject);"}, {"sha": "2d29cfc73711989bcced6cf254df294fdcba2755", "filename": "libjava/classpath/include/gnu_java_awt_peer_gtk_GdkGraphics2D.h", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Finclude%2Fgnu_java_awt_peer_gtk_GdkGraphics2D.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Finclude%2Fgnu_java_awt_peer_gtk_GdkGraphics2D.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Finclude%2Fgnu_java_awt_peer_gtk_GdkGraphics2D.h?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -11,28 +11,39 @@ extern \"C\"\n #endif\n \n JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GdkGraphics2D_initStaticState (JNIEnv *env, jclass);\n+JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GdkGraphics2D_initStateUnlocked (JNIEnv *env, jobject, jobject);\n JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GdkGraphics2D_initState__Lgnu_java_awt_peer_gtk_GtkComponentPeer_2 (JNIEnv *env, jobject, jobject);\n JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GdkGraphics2D_initState__II (JNIEnv *env, jobject, jint, jint);\n JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GdkGraphics2D_initState___3III (JNIEnv *env, jobject, jintArray, jint, jint);\n JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GdkGraphics2D_copyState (JNIEnv *env, jobject, jobject);\n JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GdkGraphics2D_dispose (JNIEnv *env, jobject);\n JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GdkGraphics2D_cairoSurfaceSetFilter (JNIEnv *env, jobject, jint);\n+JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GdkGraphics2D_cairoSurfaceSetFilterUnlocked (JNIEnv *env, jobject, jint);\n JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GdkGraphics2D_connectSignals (JNIEnv *env, jobject, jobject);\n JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GdkGraphics2D_gdkDrawDrawable (JNIEnv *env, jobject, jobject, jint, jint);\n JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GdkGraphics2D_drawPixels (JNIEnv *env, jobject, jintArray, jint, jint, jint, jdoubleArray);\n+JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GdkGraphics2D_setTexturePixelsUnlocked (JNIEnv *env, jobject, jintArray, jint, jint, jint);\n JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GdkGraphics2D_setTexturePixels (JNIEnv *env, jobject, jintArray, jint, jint, jint);\n JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GdkGraphics2D_setGradient (JNIEnv *env, jobject, jdouble, jdouble, jdouble, jdouble, jint, jint, jint, jint, jint, jint, jint, jint, jboolean);\n+JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GdkGraphics2D_setGradientUnlocked (JNIEnv *env, jobject, jdouble, jdouble, jdouble, jdouble, jint, jint, jint, jint, jint, jint, jint, jint, jboolean);\n JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GdkGraphics2D_cairoSave (JNIEnv *env, jobject);\n JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GdkGraphics2D_cairoRestore (JNIEnv *env, jobject);\n JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GdkGraphics2D_cairoSetMatrix (JNIEnv *env, jobject, jdoubleArray);\n+JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GdkGraphics2D_cairoSetMatrixUnlocked (JNIEnv *env, jobject, jdoubleArray);\n JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GdkGraphics2D_cairoSetOperator (JNIEnv *env, jobject, jint);\n JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GdkGraphics2D_cairoSetRGBAColor (JNIEnv *env, jobject, jdouble, jdouble, jdouble, jdouble);\n+JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GdkGraphics2D_cairoSetRGBAColorUnlocked (JNIEnv *env, jobject, jdouble, jdouble, jdouble, jdouble);\n JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GdkGraphics2D_cairoSetFillRule (JNIEnv *env, jobject, jint);\n JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GdkGraphics2D_cairoSetLineWidth (JNIEnv *env, jobject, jdouble);\n+JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GdkGraphics2D_cairoSetLineWidthUnlocked (JNIEnv *env, jobject, jdouble);\n JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GdkGraphics2D_cairoSetLineCap (JNIEnv *env, jobject, jint);\n+JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GdkGraphics2D_cairoSetLineCapUnlocked (JNIEnv *env, jobject, jint);\n JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GdkGraphics2D_cairoSetLineJoin (JNIEnv *env, jobject, jint);\n+JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GdkGraphics2D_cairoSetLineJoinUnlocked (JNIEnv *env, jobject, jint);\n JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GdkGraphics2D_cairoSetDash (JNIEnv *env, jobject, jdoubleArray, jint, jdouble);\n+JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GdkGraphics2D_cairoSetDashUnlocked (JNIEnv *env, jobject, jdoubleArray, jint, jdouble);\n JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GdkGraphics2D_cairoSetMiterLimit (JNIEnv *env, jobject, jdouble);\n+JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GdkGraphics2D_cairoSetMiterLimitUnlocked (JNIEnv *env, jobject, jdouble);\n JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GdkGraphics2D_cairoNewPath (JNIEnv *env, jobject);\n JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GdkGraphics2D_cairoMoveTo (JNIEnv *env, jobject, jdouble, jdouble);\n JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GdkGraphics2D_cairoLineTo (JNIEnv *env, jobject, jdouble, jdouble);"}, {"sha": "9601e83ae3f28d8e6a84ef2815e171b91a81a623", "filename": "libjava/classpath/include/gnu_java_awt_peer_gtk_GtkButtonPeer.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Finclude%2Fgnu_java_awt_peer_gtk_GtkButtonPeer.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Finclude%2Fgnu_java_awt_peer_gtk_GtkButtonPeer.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Finclude%2Fgnu_java_awt_peer_gtk_GtkButtonPeer.h?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -19,6 +19,7 @@ JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GtkButtonPeer_gtkWidgetSetBack\n JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GtkButtonPeer_gtkActivate (JNIEnv *env, jobject);\n JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GtkButtonPeer_gtkWidgetRequestFocus (JNIEnv *env, jobject);\n JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GtkButtonPeer_setNativeBounds (JNIEnv *env, jobject, jint, jint, jint, jint);\n+JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GtkButtonPeer_gtkWidgetGetPreferredDimensions (JNIEnv *env, jobject, jintArray);\n \n #ifdef __cplusplus\n }"}, {"sha": "1d92ed668c7437bed4572af9d9b05edd60fbdb00", "filename": "libjava/classpath/include/gnu_java_awt_peer_gtk_GtkChoicePeer.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Finclude%2Fgnu_java_awt_peer_gtk_GtkChoicePeer.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Finclude%2Fgnu_java_awt_peer_gtk_GtkChoicePeer.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Finclude%2Fgnu_java_awt_peer_gtk_GtkChoicePeer.h?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -17,7 +17,8 @@ JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GtkChoicePeer_nativeAdd (JNIEn\n JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GtkChoicePeer_nativeRemove (JNIEnv *env, jobject, jint);\n JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GtkChoicePeer_nativeRemoveAll (JNIEnv *env, jobject);\n JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GtkChoicePeer_connectSignals (JNIEnv *env, jobject);\n-JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GtkChoicePeer_select (JNIEnv *env, jobject, jint);\n+JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GtkChoicePeer_selectNative (JNIEnv *env, jobject, jint);\n+JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GtkChoicePeer_selectNativeUnlocked (JNIEnv *env, jobject, jint);\n \n #ifdef __cplusplus\n }"}, {"sha": "6c76ed8dd0692e1360d6afdbd7b0fdb1c78d7eea", "filename": "libjava/classpath/include/gnu_java_awt_peer_gtk_GtkClipboard.h", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Finclude%2Fgnu_java_awt_peer_gtk_GtkClipboard.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Finclude%2Fgnu_java_awt_peer_gtk_GtkClipboard.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Finclude%2Fgnu_java_awt_peer_gtk_GtkClipboard.h?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -10,11 +10,8 @@ extern \"C\"\n {\n #endif\n \n-JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GtkClipboard_initNativeState (JNIEnv *env, jobject);\n-JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GtkClipboard_requestStringConversion (JNIEnv *env, jclass);\n-JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GtkClipboard_selectionGet (JNIEnv *env, jclass);\n-#undef gnu_java_awt_peer_gtk_GtkClipboard_SELECTION_RECEIVED_TIMEOUT\n-#define gnu_java_awt_peer_gtk_GtkClipboard_SELECTION_RECEIVED_TIMEOUT 5000L\n+JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GtkClipboard_advertiseContent (JNIEnv *env, jobject, jobjectArray, jboolean, jboolean, jboolean);\n+JNIEXPORT jboolean JNICALL Java_gnu_java_awt_peer_gtk_GtkClipboard_initNativeState (JNIEnv *env, jclass, jstring, jstring, jstring);\n \n #ifdef __cplusplus\n }"}, {"sha": "2c32e3f6c73b9522f3653c1ab9d827afe60be701", "filename": "libjava/classpath/include/gnu_java_awt_peer_gtk_GtkComponentPeer.h", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Finclude%2Fgnu_java_awt_peer_gtk_GtkComponentPeer.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Finclude%2Fgnu_java_awt_peer_gtk_GtkComponentPeer.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Finclude%2Fgnu_java_awt_peer_gtk_GtkComponentPeer.h?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -18,6 +18,7 @@ JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GtkComponentPeer_gtkWidgetGetD\n JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GtkComponentPeer_gtkWidgetGetPreferredDimensions (JNIEnv *env, jobject, jintArray);\n JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GtkComponentPeer_gtkWidgetGetLocationOnScreen (JNIEnv *env, jobject, jintArray);\n JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GtkComponentPeer_gtkWidgetSetCursor (JNIEnv *env, jobject, jint);\n+JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GtkComponentPeer_gtkWidgetSetCursorUnlocked (JNIEnv *env, jobject, jint);\n JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GtkComponentPeer_gtkWidgetSetBackground (JNIEnv *env, jobject, jint, jint, jint);\n JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GtkComponentPeer_gtkWidgetSetForeground (JNIEnv *env, jobject, jint, jint, jint);\n JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GtkComponentPeer_gtkWidgetSetSensitive (JNIEnv *env, jobject, jboolean);\n@@ -28,8 +29,8 @@ JNIEXPORT jboolean JNICALL Java_gnu_java_awt_peer_gtk_GtkComponentPeer_isRealize\n JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GtkComponentPeer_setNativeEventMask (JNIEnv *env, jobject);\n JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GtkComponentPeer_connectSignals (JNIEnv *env, jobject);\n JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GtkComponentPeer_setNativeBounds (JNIEnv *env, jobject, jint, jint, jint, jint);\n-JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GtkComponentPeer_hide (JNIEnv *env, jobject);\n-JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GtkComponentPeer_show (JNIEnv *env, jobject);\n+JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GtkComponentPeer_setVisibleNative (JNIEnv *env, jobject, jboolean);\n+JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GtkComponentPeer_setVisibleNativeUnlocked (JNIEnv *env, jobject, jboolean);\n \n #ifdef __cplusplus\n }"}, {"sha": "340fcc3231ce2d85ba004241bf82391b746dcf2d", "filename": "libjava/classpath/include/gnu_java_awt_peer_gtk_GtkFileDialogPeer.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Finclude%2Fgnu_java_awt_peer_gtk_GtkFileDialogPeer.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Finclude%2Fgnu_java_awt_peer_gtk_GtkFileDialogPeer.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Finclude%2Fgnu_java_awt_peer_gtk_GtkFileDialogPeer.h?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -10,7 +10,7 @@ extern \"C\"\n {\n #endif\n \n-JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GtkFileDialogPeer_create (JNIEnv *env, jobject, jobject);\n+JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GtkFileDialogPeer_create (JNIEnv *env, jobject, jobject, jint);\n JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GtkFileDialogPeer_connectSignals (JNIEnv *env, jobject);\n JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GtkFileDialogPeer_nativeSetFile (JNIEnv *env, jobject, jstring);\n JNIEXPORT jstring JNICALL Java_gnu_java_awt_peer_gtk_GtkFileDialogPeer_nativeGetDirectory (JNIEnv *env, jobject);"}, {"sha": "2095d421c6f3a92621c367cce1aa97fce5d6cfdb", "filename": "libjava/classpath/include/gnu_java_awt_peer_gtk_GtkFramePeer.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Finclude%2Fgnu_java_awt_peer_gtk_GtkFramePeer.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Finclude%2Fgnu_java_awt_peer_gtk_GtkFramePeer.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Finclude%2Fgnu_java_awt_peer_gtk_GtkFramePeer.h?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -11,6 +11,7 @@ extern \"C\"\n #endif\n \n JNIEXPORT jint JNICALL Java_gnu_java_awt_peer_gtk_GtkFramePeer_getMenuBarHeight (JNIEnv *env, jobject, jobject);\n+JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GtkFramePeer_setMenuBarWidthUnlocked (JNIEnv *env, jobject, jobject, jint);\n JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GtkFramePeer_setMenuBarWidth (JNIEnv *env, jobject, jobject, jint);\n JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GtkFramePeer_setMenuBarPeer (JNIEnv *env, jobject, jobject);\n JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GtkFramePeer_removeMenuBarPeer (JNIEnv *env, jobject);"}, {"sha": "48940a1caf1ca4f27e6a0fe8e9f6667b18abd722", "filename": "libjava/classpath/include/gnu_java_awt_peer_gtk_GtkImage.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Finclude%2Fgnu_java_awt_peer_gtk_GtkImage.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Finclude%2Fgnu_java_awt_peer_gtk_GtkImage.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Finclude%2Fgnu_java_awt_peer_gtk_GtkImage.h?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -13,11 +13,13 @@ extern \"C\"\n JNIEXPORT jintArray JNICALL Java_gnu_java_awt_peer_gtk_GtkImage_getPixels (JNIEnv *env, jobject);\n JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GtkImage_setPixels (JNIEnv *env, jobject, jintArray);\n JNIEXPORT jboolean JNICALL Java_gnu_java_awt_peer_gtk_GtkImage_loadPixbuf (JNIEnv *env, jobject, jstring);\n+JNIEXPORT jboolean JNICALL Java_gnu_java_awt_peer_gtk_GtkImage_loadImageFromData (JNIEnv *env, jobject, jbyteArray);\n JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GtkImage_createPixmap (JNIEnv *env, jobject);\n JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GtkImage_freePixmap (JNIEnv *env, jobject);\n JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GtkImage_createScaledPixmap (JNIEnv *env, jobject, jobject, jint);\n JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GtkImage_drawPixelsScaled (JNIEnv *env, jobject, jobject, jint, jint, jint, jint, jint, jint, jint, jboolean);\n JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GtkImage_drawPixelsScaledFlipped (JNIEnv *env, jobject, jobject, jint, jint, jint, jboolean, jboolean, jint, jint, jint, jint, jint, jint, jint, jint, jboolean);\n+JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GtkImage_createFromPixbuf (JNIEnv *env, jobject);\n \n #ifdef __cplusplus\n }"}, {"sha": "485509075d83304a144ef84b52593729ef89331b", "filename": "libjava/classpath/include/gnu_java_awt_peer_gtk_GtkLabelPeer.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Finclude%2Fgnu_java_awt_peer_gtk_GtkLabelPeer.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Finclude%2Fgnu_java_awt_peer_gtk_GtkLabelPeer.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Finclude%2Fgnu_java_awt_peer_gtk_GtkLabelPeer.h?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -15,6 +15,7 @@ JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GtkLabelPeer_gtkWidgetModifyFo\n JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GtkLabelPeer_nativeSetAlignment (JNIEnv *env, jobject, jfloat);\n JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GtkLabelPeer_setText (JNIEnv *env, jobject, jstring);\n JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GtkLabelPeer_setNativeBounds (JNIEnv *env, jobject, jint, jint, jint, jint);\n+JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GtkLabelPeer_gtkWidgetGetPreferredDimensions (JNIEnv *env, jobject, jintArray);\n \n #ifdef __cplusplus\n }"}, {"sha": "ffeb399357537a8f9f39ccd891680fef5dfd5e3a", "filename": "libjava/classpath/include/gnu_java_awt_peer_gtk_GtkToolkit.h", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Finclude%2Fgnu_java_awt_peer_gtk_GtkToolkit.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Finclude%2Fgnu_java_awt_peer_gtk_GtkToolkit.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Finclude%2Fgnu_java_awt_peer_gtk_GtkToolkit.h?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -16,9 +16,7 @@ JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GtkToolkit_getScreenSizeDimens\n JNIEXPORT jint JNICALL Java_gnu_java_awt_peer_gtk_GtkToolkit_getScreenResolution (JNIEnv *env, jobject);\n JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GtkToolkit_sync (JNIEnv *env, jobject);\n JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GtkToolkit_loadSystemColors (JNIEnv *env, jobject, jintArray);\n-JNIEXPORT jboolean JNICALL Java_gnu_java_awt_peer_gtk_GtkToolkit_nativeQueueEmpty (JNIEnv *env, jobject);\n-JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GtkToolkit_wakeNativeQueue (JNIEnv *env, jobject);\n-JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GtkToolkit_iterateNativeQueue (JNIEnv *env, jobject, jobject, jboolean);\n+JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GtkToolkit_gtkMain (JNIEnv *env, jclass);\n \n #ifdef __cplusplus\n }"}, {"sha": "1d80f0a82abd798726f0ea35c82dad8683149dda", "filename": "libjava/classpath/include/gnu_java_awt_peer_gtk_GtkWindowPeer.h", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Finclude%2Fgnu_java_awt_peer_gtk_GtkWindowPeer.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Finclude%2Fgnu_java_awt_peer_gtk_GtkWindowPeer.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Finclude%2Fgnu_java_awt_peer_gtk_GtkWindowPeer.h?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -15,13 +15,14 @@ JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GtkWindowPeer_gtkWindowSetResi\n JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GtkWindowPeer_gtkWindowSetModal (JNIEnv *env, jobject, jboolean);\n JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GtkWindowPeer_realize (JNIEnv *env, jobject);\n JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GtkWindowPeer_create (JNIEnv *env, jobject, jint, jboolean, jobject);\n+JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GtkWindowPeer_setVisibleNative (JNIEnv *env, jobject, jboolean);\n+JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GtkWindowPeer_setVisibleNativeUnlocked (JNIEnv *env, jobject, jboolean);\n JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GtkWindowPeer_connectSignals (JNIEnv *env, jobject);\n JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GtkWindowPeer_toBack (JNIEnv *env, jobject);\n JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GtkWindowPeer_toFront (JNIEnv *env, jobject);\n JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GtkWindowPeer_nativeSetBounds (JNIEnv *env, jobject, jint, jint, jint, jint);\n+JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GtkWindowPeer_nativeSetBoundsUnlocked (JNIEnv *env, jobject, jint, jint, jint, jint);\n JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GtkWindowPeer_setSize (JNIEnv *env, jobject, jint, jint);\n-JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GtkWindowPeer_setBoundsCallback (JNIEnv *env, jobject, jobject, jint, jint, jint, jint);\n-JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GtkWindowPeer_nativeSetVisible (JNIEnv *env, jobject, jboolean);\n #undef gnu_java_awt_peer_gtk_GtkWindowPeer_GDK_WINDOW_TYPE_HINT_NORMAL\n #define gnu_java_awt_peer_gtk_GtkWindowPeer_GDK_WINDOW_TYPE_HINT_NORMAL 0L\n #undef gnu_java_awt_peer_gtk_GtkWindowPeer_GDK_WINDOW_TYPE_HINT_DIALOG"}, {"sha": "3214d38e3c0dbe748286de2f3fc87370c847415f", "filename": "libjava/classpath/include/java_nio_VMDirectByteBuffer.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Finclude%2Fjava_nio_VMDirectByteBuffer.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Finclude%2Fjava_nio_VMDirectByteBuffer.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Finclude%2Fjava_nio_VMDirectByteBuffer.h?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -10,12 +10,12 @@ extern \"C\"\n {\n #endif\n \n-JNIEXPORT void JNICALL Java_java_nio_VMDirectByteBuffer_init (JNIEnv *env, jclass);\n JNIEXPORT jobject JNICALL Java_java_nio_VMDirectByteBuffer_allocate (JNIEnv *env, jclass, jint);\n JNIEXPORT void JNICALL Java_java_nio_VMDirectByteBuffer_free (JNIEnv *env, jclass, jobject);\n-JNIEXPORT jbyte JNICALL Java_java_nio_VMDirectByteBuffer_get__Lgnu_classpath_RawData_2I (JNIEnv *env, jclass, jobject, jint);\n-JNIEXPORT void JNICALL Java_java_nio_VMDirectByteBuffer_get__Lgnu_classpath_RawData_2I_3BII (JNIEnv *env, jclass, jobject, jint, jbyteArray, jint, jint);\n-JNIEXPORT void JNICALL Java_java_nio_VMDirectByteBuffer_put (JNIEnv *env, jclass, jobject, jint, jbyte);\n+JNIEXPORT jbyte JNICALL Java_java_nio_VMDirectByteBuffer_get__Lgnu_classpath_Pointer_2I (JNIEnv *env, jclass, jobject, jint);\n+JNIEXPORT void JNICALL Java_java_nio_VMDirectByteBuffer_get__Lgnu_classpath_Pointer_2I_3BII (JNIEnv *env, jclass, jobject, jint, jbyteArray, jint, jint);\n+JNIEXPORT void JNICALL Java_java_nio_VMDirectByteBuffer_put__Lgnu_classpath_Pointer_2IB (JNIEnv *env, jclass, jobject, jint, jbyte);\n+JNIEXPORT void JNICALL Java_java_nio_VMDirectByteBuffer_put__Lgnu_classpath_Pointer_2I_3BII (JNIEnv *env, jclass, jobject, jint, jbyteArray, jint, jint);\n JNIEXPORT jobject JNICALL Java_java_nio_VMDirectByteBuffer_adjustAddress (JNIEnv *env, jclass, jobject, jint);\n JNIEXPORT void JNICALL Java_java_nio_VMDirectByteBuffer_shiftDown (JNIEnv *env, jclass, jobject, jint, jint, jint);\n "}, {"sha": "0e06225219f28226b874d18e6e7f9cf2d76abe00", "filename": "libjava/classpath/java/awt/AWTKeyStroke.java", "status": "modified", "additions": 16, "deletions": 4, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Fawt%2FAWTKeyStroke.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Fawt%2FAWTKeyStroke.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Fawt%2FAWTKeyStroke.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -412,13 +412,25 @@ public static AWTKeyStroke getAWTKeyStroke(String s)\n       {\n         token = t.nextToken();\n         if (\"shift\".equals(token))\n-          modifiers |= KeyEvent.SHIFT_DOWN_MASK;\n+\t  {\n+\t    modifiers |= KeyEvent.SHIFT_MASK;\n+\t    modifiers |= KeyEvent.SHIFT_DOWN_MASK;\n+\t  }\n         else if (\"ctrl\".equals(token) || \"control\".equals(token))\n-          modifiers |= KeyEvent.CTRL_DOWN_MASK;\n+\t  {\n+\t    modifiers |= KeyEvent.CTRL_MASK;\n+\t    modifiers |= KeyEvent.CTRL_DOWN_MASK;\n+\t  }\n         else if (\"meta\".equals(token))\n-          modifiers |= KeyEvent.META_DOWN_MASK;\n+\t  {\n+\t    modifiers |= KeyEvent.META_MASK;\n+\t    modifiers |= KeyEvent.META_DOWN_MASK;\n+\t  }\n         else if (\"alt\".equals(token))\n-          modifiers |= KeyEvent.ALT_DOWN_MASK;\n+\t  {\n+\t    modifiers |= KeyEvent.ALT_MASK;\n+\t    modifiers |= KeyEvent.ALT_DOWN_MASK;\n+\t  }\n         else if (\"button1\".equals(token))\n           modifiers |= KeyEvent.BUTTON1_DOWN_MASK;\n         else if (\"button2\".equals(token))"}, {"sha": "adf2ebf65f63d758fd7d90a978b73cd4c75bdbaf", "filename": "libjava/classpath/java/awt/BorderLayout.java", "status": "modified", "additions": 453, "deletions": 521, "changes": 974, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Fawt%2FBorderLayout.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Fawt%2FBorderLayout.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Fawt%2FBorderLayout.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -48,34 +48,30 @@\n public class BorderLayout implements LayoutManager2, java.io.Serializable\n {\n \n-/*\n- * Static Variables\n- */\n-\n-/**\n-  * Constant indicating the top of the container\n-  */\n-public static final String NORTH = \"North\";\n+  /**\n+   * Constant indicating the top of the container\n+   */\n+  public static final String NORTH = \"North\";\n \n-/**\n-  * Constant indicating the bottom of the container\n-  */\n-public static final String SOUTH = \"South\";\n+  /**\n+   * Constant indicating the bottom of the container\n+   */\n+  public static final String SOUTH = \"South\";\n \n-/**\n-  * Constant indicating the right side of the container\n-  */\n-public static final String EAST = \"East\";\n+  /**\n+   * Constant indicating the right side of the container\n+   */\n+  public static final String EAST = \"East\";\n \n-/**\n-  * Constant indicating the left side of the container\n-  */\n-public static final String WEST = \"West\";\n+  /**\n+   * Constant indicating the left side of the container\n+   */\n+  public static final String WEST = \"West\";\n \n-/**\n-  * Constant indicating the center of the container\n-  */\n-public static final String CENTER = \"Center\";\n+  /**\n+   * Constant indicating the center of the container\n+   */\n+  public static final String CENTER = \"Center\";\n \n \n   /**\n@@ -91,7 +87,6 @@ public class BorderLayout implements LayoutManager2, java.io.Serializable\n    */\n   public static final String BEFORE_FIRST_LINE = \"First\";\n \n-\n   /**\n    * The constant indicating the position after the last line of the\n    * layout.  The exact position depends on the writing system: For a\n@@ -105,7 +100,6 @@ public class BorderLayout implements LayoutManager2, java.io.Serializable\n    */\n   public static final String AFTER_LAST_LINE = \"Last\";\n \n-\n   /**\n    * The constant indicating the position before the first item of the\n    * layout.  The exact position depends on the writing system: For a\n@@ -119,7 +113,6 @@ public class BorderLayout implements LayoutManager2, java.io.Serializable\n    */\n   public static final String BEFORE_LINE_BEGINS = \"Before\";\n \n-\n   /**\n    * The constant indicating the position after the last item of the\n    * layout.  The exact position depends on the writing system: For a\n@@ -133,7 +126,6 @@ public class BorderLayout implements LayoutManager2, java.io.Serializable\n    */\n   public static final String AFTER_LINE_ENDS = \"After\";\n \n-\n   /**\n    * The constant indicating the position before the first line of the\n    * layout.  The exact position depends on the writing system: For a\n@@ -144,7 +136,6 @@ public class BorderLayout implements LayoutManager2, java.io.Serializable\n    */\n   public static final String PAGE_START = BEFORE_FIRST_LINE;\n \n-\n   /**\n    * The constant indicating the position after the last line of the\n    * layout.  The exact position depends on the writing system: For a\n@@ -155,7 +146,6 @@ public class BorderLayout implements LayoutManager2, java.io.Serializable\n    */\n   public static final String PAGE_END = AFTER_LAST_LINE;\n \n-\n   /**\n    * The constant indicating the position before the first item of the\n    * layout.  The exact position depends on the writing system: For a\n@@ -166,7 +156,6 @@ public class BorderLayout implements LayoutManager2, java.io.Serializable\n    */\n   public static final String LINE_START = BEFORE_LINE_BEGINS;\n \n-\n   /**\n    * The constant indicating the position after the last item of the\n    * layout.  The exact position depends on the writing system: For a\n@@ -178,398 +167,341 @@ public class BorderLayout implements LayoutManager2, java.io.Serializable\n   public static final String LINE_END = AFTER_LINE_ENDS;\n \n \n+  /**\n+   * Serialization constant.\n+   */\n+  private static final long serialVersionUID = -8658291919501921765L;\n \n-// Serialization constant\n-private static final long serialVersionUID = -8658291919501921765L;\n-\n-/*************************************************************************/\n-\n-/*\n- * Instance Variables\n- */\n-\n-/**\n-  * @serial\n-  */\n-private Component north;\n-\n-/**\n-  * @serial\n-  */\n-private Component south;\n-\n-/**\n-  * @serial\n-  */\n-private Component east;\n-\n-/**\n-  * @serial\n-  */\n-private Component west;\n-\n-/**\n-  * @serial\n-  */\n-private Component center;\n-\n-/**\n-  * @serial\n-  */\n-private Component firstLine;\n-\n-/**\n-  * @serial\n-  */\n-private Component lastLine;\n-\n-/**\n-  * @serial\n-  */\n-private Component firstItem;\n-\n-/**\n-  * @serial\n-  */\n-private Component lastItem;\n-\n-/**\n-  * @serial The horizontal gap between components\n-  */\n-private int hgap;\n-\n-/**\n-  * @serial The vertical gap between components\n-  */\n-private int vgap;\n-\n-/*************************************************************************/\n-\n-/*\n- * Constructors\n- */\n-\n-/**\n-  * Initializes a new instance of <code>BorderLayout</code> with no\n-  * horiztonal or vertical gaps between components.\n-  */\n-public\n-BorderLayout()\n-{\n-  this(0,0);\n-}\n \n-/*************************************************************************/\n+  /**\n+   * @serial\n+   */\n+  private Component north;\n \n-/**\n-  * Initializes a new instance of <code>BorderLayout</code> with the\n-  * specified horiztonal and vertical gaps between components.\n-  *\n-  * @param hgap The horizontal gap between components.\n-  * @param vgap The vertical gap between components.\n-  */\n-public\n-BorderLayout(int hgap, int vgap)\n-{\n-  this.hgap = hgap;\n-  this.vgap = vgap;\n-}\n+  /**\n+   * @serial\n+   */\n+  private Component south;\n \n-/*************************************************************************/\n+  /**\n+   * @serial\n+   */\n+  private Component east;\n \n-/*\n- * Instance Variables\n- */\n+  /**\n+   * @serial\n+   */\n+  private Component west;\n \n-/**\n-  * Returns the horitzontal gap value.\n-  *\n-  * @return The horitzontal gap value.\n+  /**\n+   * @serial\n   */\n-public int\n-getHgap()\n-{\n-  return(hgap);\n-}\n+  private Component center;\n \n-/*************************************************************************/\n-\n-/**\n-  * Sets the horizontal gap to the specified value.\n-  *\n-  * @param hgap The new horizontal gap.\n-  */\n-public void\n-setHgap(int hgap)\n-{\n-  this.hgap = hgap;\n-}\n-\n-/*************************************************************************/\n-\n-/**\n-  * Returns the vertical gap value.\n-  *\n-  * @return The vertical gap value.\n-  */\n-public int\n-getVgap()\n-{\n-  return(vgap);\n-}\n+  /**\n+   * @serial\n+   */\n+  private Component firstLine;\n \n-/*************************************************************************/\n+  /**\n+   * @serial\n+   */\n+  private Component lastLine;\n \n-/**\n-  * Sets the vertical gap to the specified value.\n-  *\n-  * @param vgap The new vertical gap value.\n-  */\n-public void\n-setVgap(int vgap)\n-{\n-  this.vgap = vgap;\n-}\n+  /**\n+   * @serial\n+   */\n+  private Component firstItem;\n \n-/*************************************************************************/\n+  /**\n+   * @serial\n+   */\n+  private Component lastItem;\n \n-/**\n-  * Adds a component to the layout in the specified constraint position, \n-  * which must be one of the string constants defined in this class.\n-  *\n-  * @param component The component to add.\n-  * @param constraints The constraint string.\n-  *\n-  * @exception IllegalArgumentException If the constraint object is not\n-  * a string, or is not one of the specified constants in this class.\n-  */\n-public void\n-addLayoutComponent(Component component, Object constraints)\n-{\n-  if (constraints != null && ! (constraints instanceof String))\n-    throw new IllegalArgumentException(\"Constraint must be a string\");\n+  /**\n+   * @serial The horizontal gap between components\n+   */\n+  private int hgap;\n \n-  addLayoutComponent((String) constraints, component);\n-}\n+  /**\n+   * @serial The vertical gap between components\n+   */\n+  private int vgap;\n \n-/*************************************************************************/\n \n-/**\n-  * Adds a component to the layout in the specified constraint position, \n-  * which must be one of the string constants defined in this class.\n-  *\n-  * @param constraints The constraint string.\n-  * @param component The component to add.\n-  *\n-  * @exception IllegalArgumentException If the constraint object is not\n-  * one of the specified constants in this class.\n-  *\n-  * @deprecated This method is deprecated in favor of\n-  * <code>addLayoutComponent(Component, Object)</code>.\n-  */\n-public void\n-addLayoutComponent(String constraints, Component component)\n-{\n-  String str = constraints;\n-\n-  if (str == null || str.equals(CENTER))\n-    center = component;\n-  else if (str.equals(NORTH))\n-    north = component;\n-  else if (str.equals(SOUTH))\n-    south = component;\n-  else if (str.equals(EAST))\n-    east = component;\n-  else if (str.equals(WEST))\n-    west = component;\n-  else if (str.equals(BEFORE_FIRST_LINE))\n-    firstLine = component;\n-  else if (str.equals(AFTER_LAST_LINE))\n-    lastLine = component;\n-  else if (str.equals(BEFORE_LINE_BEGINS))\n-    firstItem = component;\n-  else if (str.equals(AFTER_LINE_ENDS))\n-    lastItem = component;\n-  else\n-    throw new IllegalArgumentException(\"Constraint value not valid: \" + str);\n-}\n+  /**\n+   * Initializes a new instance of <code>BorderLayout</code> with no\n+   * horiztonal or vertical gaps between components.\n+   */\n+  public BorderLayout()\n+  {\n+    this(0,0);\n+  }\n \n-/*************************************************************************/\n+  /**\n+   * Initializes a new instance of <code>BorderLayout</code> with the\n+   * specified horiztonal and vertical gaps between components.\n+   *\n+   * @param hgap The horizontal gap between components.\n+   * @param vgap The vertical gap between components.\n+   */\n+  public BorderLayout(int hgap, int vgap)\n+  {\n+    this.hgap = hgap;\n+    this.vgap = vgap;\n+  }\n \n-/**\n-  * Removes the specified component from the layout.\n-  *\n-  * @param component The component to remove from the layout.\n-  */\n-public void\n-removeLayoutComponent(Component component)\n-{\n-  if (north == component)\n-    north = null;\n-  if (south == component)\n-    south = null;\n-  if (east == component)\n-    east = null;\n-  if (west == component)\n-    west = null;\n-  if (center == component)\n-    center = null;\n-  if (firstItem == component)\n-    firstItem = null;\n-  if (lastItem == component)\n-    lastItem = null;\n-  if (firstLine == component)\n-    firstLine = null;\n-  if (lastLine == component)\n-    lastLine = null;\n-}\n+  /**\n+   * Returns the horitzontal gap value.\n+   *\n+   * @return The horitzontal gap value.\n+   */\n+  public int getHgap()\n+  {\n+    return(hgap);\n+  }\n \n-/*************************************************************************/\n+  /**\n+   * Sets the horizontal gap to the specified value.\n+   *\n+   * @param hgap The new horizontal gap.\n+   */\n+  public void setHgap(int hgap)\n+  {\n+    this.hgap = hgap;\n+  }\n \n-/**\n-  * Returns the minimum size of the specified container using this layout.\n-  *\n-  * @param target The container to calculate the minimum size for.\n-  *\n-  * @return The minimum size of the container\n-  */\n-public Dimension \n-minimumLayoutSize(Container target)\n-{\n-  return calcSize(target, MIN);\n-}\n+  /**\n+   * Returns the vertical gap value.\n+   *\n+   * @return The vertical gap value.\n+   */\n+  public int getVgap()\n+  {\n+    return(vgap);\n+  }\n \n-/*************************************************************************/\n+  /**\n+   * Sets the vertical gap to the specified value.\n+   *\n+   * @param vgap The new vertical gap value.\n+   */\n+  public void setVgap(int vgap)\n+  {\n+    this.vgap = vgap;\n+  }\n \n-/**\n-  * Returns the preferred size of the specified container using this layout.\n-  *\n-  * @param target The container to calculate the preferred size for.\n-  *\n-  * @return The preferred size of the container\n-  */\n-public Dimension \n-preferredLayoutSize(Container target)\n-{\n-  return calcSize(target, PREF);\n-}\n+  /**\n+   * Adds a component to the layout in the specified constraint position, \n+   * which must be one of the string constants defined in this class.\n+   *\n+   * @param component The component to add.\n+   * @param constraints The constraint string.\n+   *\n+   * @exception IllegalArgumentException If the constraint object is not\n+   * a string, or is not one of the specified constants in this class.\n+   */\n+  public void addLayoutComponent(Component component, Object constraints)\n+  {\n+    if (constraints != null && ! (constraints instanceof String))\n+      throw new IllegalArgumentException(\"Constraint must be a string\");\n \n-/*************************************************************************/\n+    addLayoutComponent((String) constraints, component);\n+  }\n \n-/**\n-  * Returns the maximum size of the specified container using this layout.\n-  *\n-  * @param target The container to calculate the maximum size for.\n-  *\n-  * @return The maximum size of the container\n-  */\n-public Dimension \n-maximumLayoutSize(Container target)\n-{\n-  return calcSize(target, MAX);\n-}\n+  /**\n+   * Adds a component to the layout in the specified constraint position, \n+   * which must be one of the string constants defined in this class.\n+   *\n+   * @param constraints The constraint string.\n+   * @param component The component to add.\n+   *\n+   * @exception IllegalArgumentException If the constraint object is not\n+   *            one of the specified constants in this class.\n+   *\n+   * @deprecated This method is deprecated in favor of\n+   *             <code>addLayoutComponent(Component, Object)</code>.\n+   */\n+  public void addLayoutComponent(String constraints, Component component)\n+  {\n+    String str = constraints;\n+\n+    if (str == null || str.equals(CENTER))\n+      center = component;\n+    else if (str.equals(NORTH))\n+      north = component;\n+    else if (str.equals(SOUTH))\n+      south = component;\n+    else if (str.equals(EAST))\n+      east = component;\n+    else if (str.equals(WEST))\n+      west = component;\n+    else if (str.equals(BEFORE_FIRST_LINE))\n+      firstLine = component;\n+    else if (str.equals(AFTER_LAST_LINE))\n+      lastLine = component;\n+    else if (str.equals(BEFORE_LINE_BEGINS))\n+      firstItem = component;\n+    else if (str.equals(AFTER_LINE_ENDS))\n+      lastItem = component;\n+    else\n+      throw new IllegalArgumentException(\"Constraint value not valid: \" + str);\n+  }\n \n-/*************************************************************************/\n+  /**\n+   * Removes the specified component from the layout.\n+   *\n+   * @param component The component to remove from the layout.\n+   */\n+  public void removeLayoutComponent(Component component)\n+  {\n+    if (north == component)\n+      north = null;\n+    if (south == component)\n+      south = null;\n+    if (east == component)\n+      east = null;\n+    if (west == component)\n+      west = null;\n+    if (center == component)\n+      center = null;\n+    if (firstItem == component)\n+      firstItem = null;\n+    if (lastItem == component)\n+      lastItem = null;\n+    if (firstLine == component)\n+      firstLine = null;\n+    if (lastLine == component)\n+      lastLine = null;\n+  }\n \n-/**\n-  * Returns the X axis alignment, which is a <code>float</code> indicating\n-  * where along the X axis this container wishs to position its layout.\n-  * 0 indicates align to the left, 1 indicates align to the right, and 0.5\n-  * indicates align to the center.\n-  *\n-  * @param parent The parent container.\n-  *\n-  * @return The X alignment value.\n-  */\n-public float\n-getLayoutAlignmentX(Container parent)\n-{\n-  return(parent.getAlignmentX());\n-}\n+  /**\n+   * Returns the minimum size of the specified container using this layout.\n+   *\n+   * @param target The container to calculate the minimum size for.\n+   *\n+   * @return The minimum size of the container\n+   */\n+  public Dimension minimumLayoutSize(Container target)\n+  {\n+    return calcSize(target, MIN);\n+  }\n \n-/*************************************************************************/\n+  /**\n+   * Returns the preferred size of the specified container using this layout.\n+   *\n+   * @param target The container to calculate the preferred size for.\n+   *\n+   * @return The preferred size of the container\n+   */\n+  public Dimension preferredLayoutSize(Container target)\n+  {\n+    return calcSize(target, PREF);\n+  }\n \n-/**\n-  * Returns the Y axis alignment, which is a <code>float</code> indicating\n-  * where along the Y axis this container wishs to position its layout.\n-  * 0 indicates align to the top, 1 indicates align to the bottom, and 0.5\n-  * indicates align to the center.\n-  *\n-  * @param parent The parent container.\n-  *\n-  * @return The Y alignment value.\n-  */\n-public float\n-getLayoutAlignmentY(Container parent)\n-{\n-  return(parent.getAlignmentY());\n-}\n+  /**\n+   * Returns the maximum size of the specified container using this layout.\n+   *\n+   * @param target The container to calculate the maximum size for.\n+   *\n+   * @return The maximum size of the container\n+   */\n+  public Dimension maximumLayoutSize(Container target)\n+  {\n+    return calcSize(target, MAX);\n+  }\n \n-/*************************************************************************/\n+  /**\n+   * Returns the X axis alignment, which is a <code>float</code> indicating\n+   * where along the X axis this container wishs to position its layout.\n+   * 0 indicates align to the left, 1 indicates align to the right, and 0.5\n+   * indicates align to the center.\n+   *\n+   * @param parent The parent container.\n+   *\n+   * @return The X alignment value.\n+   */\n+  public float getLayoutAlignmentX(Container parent)\n+  {\n+    return(parent.getAlignmentX());\n+  }\n \n-/**\n-  * Instructs this object to discard any layout information it might\n-  * have cached.\n-  *\n-  * @param parent The parent container.\n-  */\n-public void\n-invalidateLayout(Container parent)\n-{\n-}\n+  /**\n+   * Returns the Y axis alignment, which is a <code>float</code> indicating\n+   * where along the Y axis this container wishs to position its layout.\n+   * 0 indicates align to the top, 1 indicates align to the bottom, and 0.5\n+   * indicates align to the center.\n+   *\n+   * @param parent The parent container.\n+   *\n+   * @return The Y alignment value.\n+   */\n+  public float getLayoutAlignmentY(Container parent)\n+  {\n+    return(parent.getAlignmentY());\n+  }\n \n-/*************************************************************************/\n+  /**\n+   * Instructs this object to discard any layout information it might\n+   * have cached.\n+   *\n+   * @param parent The parent container.\n+   */\n+  public void invalidateLayout(Container parent)\n+  {\n+    // FIXME: Implement this properly!\n+  }\n \n-/**\n-  * Lays out the specified container according to the constraints\n-  * in this object.\n-  *\n-  * @param target The container to lay out.\n-  */\n-public void\n-layoutContainer(Container target)\n-{\n-  synchronized (target.getTreeLock ())\n-    {\n-      Insets i = target.getInsets();\n-\n-      ComponentOrientation orient = target.getComponentOrientation ();\n-      boolean left_to_right = orient.isLeftToRight ();\n-\n-      Component my_north = north;\n-      Component my_east = east;\n-      Component my_south = south;\n-      Component my_west = west;\n-\n-      // Note that we currently don't handle vertical layouts.  Neither\n-      // does JDK 1.3.\n-      if (firstLine != null)\n-\tmy_north = firstLine;\n-      if (lastLine != null)\n-\tmy_south = lastLine;\n-      if (firstItem != null)\n-\t{\n-\t  if (left_to_right)\n-\t    my_west = firstItem;\n-\t  else\n-\t    my_east = firstItem;\n-\t}\n-      if (lastItem != null)\n-\t{\n-\t  if (left_to_right)\n-\t    my_east = lastItem;\n-\t  else\n-\t    my_west = lastItem;\n-\t}\n-\n-      Dimension c = calcCompSize(center, PREF);\n-      Dimension n = calcCompSize(my_north, PREF);\n-      Dimension s = calcCompSize(my_south, PREF);\n-      Dimension e = calcCompSize(my_east, PREF);\n-      Dimension w = calcCompSize(my_west, PREF);\n-      Dimension t = target.getSize();\n-\n-      /*\n+  /**\n+   * Lays out the specified container according to the constraints\n+   * in this object.\n+   *\n+   * @param target The container to lay out.\n+   */\n+  public void layoutContainer(Container target)\n+  {\n+    synchronized (target.getTreeLock ())\n+      {\n+        Insets i = target.getInsets();\n+\n+        ComponentOrientation orient = target.getComponentOrientation ();\n+        boolean left_to_right = orient.isLeftToRight ();\n+\n+        Component my_north = north;\n+        Component my_east = east;\n+        Component my_south = south;\n+        Component my_west = west;\n+\n+        // Note that we currently don't handle vertical layouts.  Neither\n+        // does JDK 1.3.\n+        if (firstLine != null)\n+          my_north = firstLine;\n+        if (lastLine != null)\n+          my_south = lastLine;\n+        if (firstItem != null)\n+          {\n+            if (left_to_right)\n+              my_west = firstItem;\n+            else\n+              my_east = firstItem;\n+          }\n+        if (lastItem != null)\n+          {\n+            if (left_to_right)\n+              my_east = lastItem;\n+            else\n+              my_west = lastItem;\n+          }\n+\n+        Dimension c = calcCompSize(center, PREF);\n+        Dimension n = calcCompSize(my_north, PREF);\n+        Dimension s = calcCompSize(my_south, PREF);\n+        Dimension e = calcCompSize(my_east, PREF);\n+        Dimension w = calcCompSize(my_west, PREF);\n+        int targetWidth = target.getWidth();\n+        int targetHeight = target.getHeight();\n+\n+        /*\n \t<-> hgap     <-> hgap\n \t+----------------------------+          }\n \t|t                           |          } i.top\n@@ -588,144 +520,144 @@ else if (str.equals(AFTER_LINE_ENDS))\n \t<---------------------->\n \t<-->         ww           <-->\n \ti.left                    i.right\n-      */\n-\n-      int x1 = i.left;\n-      int x2 = x1 + w.width + hgap;\n-      int x3;\n-      if (t.width <= i.right + e.width)\n-        x3 = x2 + w.width + hgap;\n-      else\n-        x3 = t.width - i.right - e.width;\n-      int ww = t.width - i.right - i.left;\n-\n-      int y1 = i.top;\n-      int y2 = y1 + n.height + vgap;\n-      int midh = Math.max(e.height, Math.max(w.height, c.height));\n-      int y3;\n-      if (t.height <= i.bottom + s.height)\n-        y3 = y2 + midh + vgap;\n-      else\n-        y3 = t.height - i.bottom - s.height;\n-      int hh = y3-y2-vgap;\n-\n-      setBounds(center, x2, y2, x3-x2-hgap, hh);\n-      setBounds(my_north, x1, y1, ww, n.height);\n-      setBounds(my_south, x1, y3, ww, s.height);\n-      setBounds(my_west, x1, y2, w.width, hh);\n-      setBounds(my_east, x3, y2, e.width, hh);\n-    }\n-}\n-\n-/*************************************************************************/\n+        */\n+\n+        int x1 = i.left;\n+        int x2 = x1 + w.width + (w.width == 0 ? 0 : hgap);\n+        int x3;\n+        if (targetWidth <= i.right + e.width)\n+          x3 = x2 + w.width + (w.width == 0 ? 0 : hgap);\n+        else\n+          x3 = targetWidth - i.right - e.width;\n+        int ww = targetWidth - i.right - i.left;\n+\n+        int y1 = i.top;\n+        int y2 = y1 + n.height + (n.height == 0 ? 0 : vgap);\n+        int midh = Math.max(e.height, Math.max(w.height, c.height));\n+        int y3;\n+        if (targetHeight <= i.bottom + s.height)\n+          y3 = y2 + midh + vgap;\n+        else\n+          y3 = targetHeight - i.bottom - s.height;\n+        int hh = y3-y2-(s.height == 0 ? 0 : vgap);\n+\n+        setBounds(center, x2, y2, x3-x2-(w.width == 0 ? 0 : hgap), hh);\n+        setBounds(my_north, x1, y1, ww, n.height);\n+        setBounds(my_south, x1, y3, ww, s.height);\n+        setBounds(my_west, x1, y2, w.width, hh);\n+        setBounds(my_east, x3, y2, e.width, hh);\n+      }\n+  }\n \n-/**\n-  * Returns a string representation of this layout manager.\n-  *\n-  * @return A string representation of this object.\n-  */\n-public String\n-toString()\n-{\n-  return getClass().getName() + \"[hgap=\" + hgap + \",vgap=\" + vgap + \"]\";\n-}\n-\n-private void\n-setBounds(Component comp, int x, int y, int w, int h)\n-{\n-  if (comp == null)\n-    return;\n-  comp.setBounds(x, y, w, h);\n-}\n-\n-// Some constants for use with calcSize().\n-private static final int MIN = 0;\n-private static final int MAX = 1;\n-private static final int PREF = 2;\n+  /**\n+   * Returns a string representation of this layout manager.\n+   *\n+   * @return A string representation of this object.\n+   */\n+  public String toString()\n+  {\n+    return getClass().getName() + \"[hgap=\" + hgap + \",vgap=\" + vgap + \"]\";\n+  }\n \n-private Dimension\n-calcCompSize(Component comp, int what)\n-{\n-  if (comp == null || !comp.isVisible())\n-    return new Dimension(0, 0);\n-  if (what == MIN)\n-    return comp.getMinimumSize();\n-  else if (what == MAX)\n-    return comp.getMaximumSize();\n-  return comp.getPreferredSize();\n-}\n+  /**\n+   * FIXME: Document me!\n+   */\n+  private void setBounds(Component comp, int x, int y, int w, int h)\n+  {\n+    if (comp == null)\n+      return;\n+    comp.setBounds(x, y, w, h);\n+  }\n+\n+  // FIXME: Maybe move to top of file.\n+  // Some constants for use with calcSize().\n+  private static final int MIN = 0;\n+  private static final int MAX = 1;\n+  private static final int PREF = 2;\n+\n+  private Dimension calcCompSize(Component comp, int what)\n+  {\n+    if (comp == null || !comp.isVisible())\n+      return new Dimension(0, 0);\n+    if (what == MIN)\n+      return comp.getMinimumSize();\n+    else if (what == MAX)\n+      return comp.getMaximumSize();\n+    return comp.getPreferredSize();\n+  }\n \n-// This is a helper function used to compute the various sizes for\n-// this layout.\n-private Dimension\n-calcSize(Container target, int what)\n-{\n-  synchronized (target.getTreeLock ())\n-    {\n-      Insets ins = target.getInsets();\n-\n-      ComponentOrientation orient = target.getComponentOrientation ();\n-      boolean left_to_right = orient.isLeftToRight ();\n-\n-      Component my_north = north;\n-      Component my_east = east;\n-      Component my_south = south;\n-      Component my_west = west;\n-\n-      // Note that we currently don't handle vertical layouts.  Neither\n-      // does JDK 1.3.\n-      if (firstLine != null)\n-\tmy_north = firstLine;\n-      if (lastLine != null)\n-\tmy_south = lastLine;\n-      if (firstItem != null)\n-\t{\n-\t  if (left_to_right)\n-\t    my_west = firstItem;\n-\t  else\n-\t    my_east = firstItem;\n-\t}\n-      if (lastItem != null)\n-\t{\n-\t  if (left_to_right)\n-\t    my_east = lastItem;\n-\t  else\n-\t    my_west = lastItem;\n-\t}\n-      \n-      Dimension ndim = calcCompSize(my_north, what);\n-      Dimension sdim = calcCompSize(my_south, what);\n-      Dimension edim = calcCompSize(my_east, what);\n-      Dimension wdim = calcCompSize(my_west, what);\n-      Dimension cdim = calcCompSize(center, what);\n-\n-      int width = edim.width + cdim.width + wdim.width + (hgap * 2);\n-      // check for overflow\n-      if (width < edim.width || width < cdim.width || width < cdim.width)\n+  /**\n+   * This is a helper function used to compute the various sizes for\n+   * this layout.\n+   */\n+  private Dimension calcSize(Container target, int what)\n+  {\n+    synchronized (target.getTreeLock ())\n+      {\n+        Insets ins = target.getInsets();\n+\n+        ComponentOrientation orient = target.getComponentOrientation ();\n+        boolean left_to_right = orient.isLeftToRight ();\n+\n+        Component my_north = north;\n+        Component my_east = east;\n+        Component my_south = south;\n+        Component my_west = west;\n+\n+        // Note that we currently don't handle vertical layouts.  Neither\n+        // does JDK 1.3.\n+        if (firstLine != null)\n+          my_north = firstLine;\n+        if (lastLine != null)\n+          my_south = lastLine;\n+        if (firstItem != null)\n+          {\n+            if (left_to_right)\n+              my_west = firstItem;\n+            else\n+              my_east = firstItem;\n+          }\n+        if (lastItem != null)\n+          {\n+            if (left_to_right)\n+              my_east = lastItem;\n+            else\n+              my_west = lastItem;\n+          }\n+\n+        Dimension ndim = calcCompSize(my_north, what);\n+        Dimension sdim = calcCompSize(my_south, what);\n+        Dimension edim = calcCompSize(my_east, what);\n+        Dimension wdim = calcCompSize(my_west, what);\n+        Dimension cdim = calcCompSize(center, what);\n+\n+        int width = edim.width + cdim.width + wdim.width + (hgap * 2);\n+        // Check for overflow.\n+        if (width < edim.width || width < cdim.width || width < cdim.width)\n           width = Integer.MAX_VALUE;\n \n-      if (ndim.width > width)\n-\twidth = ndim.width;\n-      if (sdim.width > width)\n-\twidth = sdim.width;\n+        if (ndim.width > width)\n+          width = ndim.width;\n+        if (sdim.width > width)\n+          width = sdim.width;\n \n-      width += (ins.left + ins.right);\n+        width += (ins.left + ins.right);\n \n-      int height = edim.height;\n-      if (cdim.height > height)\n-\theight = cdim.height;\n-      if (wdim.height > height)\n-\theight = wdim.height;\n+        int height = edim.height;\n+        if (cdim.height > height)\n+          height = cdim.height;\n+        if (wdim.height > height)\n+          height = wdim.height;\n \n-      int addedHeight = height + (ndim.height + sdim.height + (vgap * 2)\n-                                  + ins.top + ins.bottom);\n-      // check for overflow\n-      if (addedHeight < height)\n+        int addedHeight = height + (ndim.height + sdim.height + (vgap * 2)\n+                                    + ins.top + ins.bottom);\n+        // Check for overflow.\n+        if (addedHeight < height)\n           height = Integer.MAX_VALUE;\n-      else\n+        else\n           height = addedHeight;\n \n-      return(new Dimension(width, height));\n-    }\n+        return(new Dimension(width, height));\n+      }\n+  }\n }\n-} // class BorderLayout "}, {"sha": "0ae1ffa7d0b22592264341f4a23e781936f4b776", "filename": "libjava/classpath/java/awt/Component.java", "status": "modified", "additions": 122, "deletions": 57, "changes": 179, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Fawt%2FComponent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Fawt%2FComponent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Fawt%2FComponent.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -897,9 +897,21 @@ public void show()\n     if(!isVisible())\n       {\n         this.visible = true;\n-        if (peer != null)\n-          peer.setVisible(true);\n-        invalidate();\n+        // Avoid NullPointerExceptions by creating a local reference.\n+        ComponentPeer currentPeer=peer;\n+        if (currentPeer != null)\n+            currentPeer.setVisible(true);\n+\n+        // Invalidate the parent if we have one. The component itself must\n+        // not be invalidated. We also avoid NullPointerException with\n+        // a local reference here.\n+        Container currentParent = parent;\n+        if (currentParent != null)\n+          {\n+            currentParent.invalidate();\n+            currentParent.repaint();\n+          }\n+\n         ComponentEvent ce =\n           new ComponentEvent(this,ComponentEvent.COMPONENT_SHOWN);\n         getToolkit().getSystemEventQueue().postEvent(ce);\n@@ -930,10 +942,23 @@ public void hide()\n   {\n     if (isVisible())\n       {\n-        if (peer != null)\n-          peer.setVisible(false);\n+        // Avoid NullPointerExceptions by creating a local reference.\n+        ComponentPeer currentPeer=peer;\n+        if (currentPeer != null)\n+            currentPeer.setVisible(false);\n+        \n         this.visible = false;\n-        invalidate();\n+        \n+        // Invalidate the parent if we have one. The component itself must\n+        // not be invalidated. We also avoid NullPointerException with\n+        // a local reference here.\n+        Container currentParent = parent;\n+        if (currentParent != null)\n+          {\n+            currentParent.invalidate();\n+            currentParent.repaint();\n+          }\n+\n         ComponentEvent ce =\n           new ComponentEvent(this,ComponentEvent.COMPONENT_HIDDEN);\n         getToolkit().getSystemEventQueue().postEvent(ce);\n@@ -963,10 +988,12 @@ public Color getForeground()\n    */\n   public void setForeground(Color c)\n   {\n-    firePropertyChange(\"foreground\", foreground, c);\n     if (peer != null)\n       peer.setForeground(c);\n+    \n+    Color previous = foreground;\n     foreground = c;\n+    firePropertyChange(\"foreground\", previous, c);\n   }\n \n   /**\n@@ -992,7 +1019,7 @@ public Color getBackground()\n   {\n     if (background != null)\n       return background;\n-    return parent == null ? SystemColor.window : parent.getBackground();\n+    return parent == null ? null : parent.getBackground();\n   }\n \n   /**\n@@ -1006,16 +1033,18 @@ public Color getBackground()\n   public void setBackground(Color c)\n   {\n     // return if the background is already set to that color.\n-    if (background != null && c != null)\n-      if (background.equals(c))\n-\treturn;\n+    if ((c != null) && c.equals(background))\n+      return;\n+\n     // If c is null, inherit from closest ancestor whose bg is set.\n     if (c == null && parent != null)\n       c = parent.getBackground();\n-    firePropertyChange(\"background\", background, c);\n     if (peer != null && c != null)\n       peer.setBackground(c);\n+    \n+    Color previous = background;\n     background = c;\n+    firePropertyChange(\"background\", previous, c);\n   }\n \n   /**\n@@ -1039,13 +1068,15 @@ public boolean isBackgroundSet()\n    */\n   public Font getFont()\n   {\n-    if (font != null)\n-      return font;\n+    Font f = font;\n+    if (f != null)\n+      return f;\n \n-    if (parent != null)\n-      return parent.getFont ();\n+    Component p = parent;\n+    if (p != null)\n+      return p.getFont();\n     else\n-      return new Font (\"Dialog\", Font.PLAIN, 12);\n+      return new Font(\"Dialog\", Font.PLAIN, 12);\n   }\n \n   /**\n@@ -1058,15 +1089,16 @@ public Font getFont()\n    */\n   public void setFont(Font newFont)\n   {\n-    if (font == newFont)\n-      return;\n-    \n-    Font oldFont = font;\n-    font = newFont;\n-    if (peer != null)\n-      peer.setFont(font);\n-    firePropertyChange(\"font\", oldFont, newFont);\n-    invalidate();\n+    if((newFont != null && (font == null || !font.equals(newFont)))\n+       || newFont == null)\n+      {\n+        Font oldFont = font;\n+        font = newFont;\n+        if (peer != null)\n+          peer.setFont(font);\n+        firePropertyChange(\"font\", oldFont, newFont);\n+        invalidate();\n+      }\n   }\n \n   /**\n@@ -1372,9 +1404,6 @@ public void reshape(int x, int y, int width, int height)\n     // Erase old bounds and repaint new bounds for lightweights.\n     if (isLightweight() && isShowing ())\n       {\n-        boolean shouldRepaintParent = false;\n-        boolean shouldRepaintSelf = false;\n-\n         if (parent != null)\n           {\n             Rectangle parentBounds = parent.getBounds();\n@@ -1384,14 +1413,11 @@ public void reshape(int x, int y, int width, int height)\n             Rectangle newBounds = new Rectangle(parent.getX() + x,\n                                                 parent.getY() + y,\n                                                 width, height);\n-            shouldRepaintParent = parentBounds.intersects(oldBounds);\n-            shouldRepaintSelf = parentBounds.intersects(newBounds);\n+            Rectangle destroyed = oldBounds.union(newBounds);\n+            if (!destroyed.isEmpty())\n+              parent.repaint(0, destroyed.x, destroyed.y, destroyed.width,\n+                             destroyed.height);\n           }\n-\n-        if (shouldRepaintParent && parent != null)\n-          parent.repaint(oldx, oldy, oldwidth, oldheight);\n-        if (shouldRepaintSelf)\n-          repaint();\n       }\n \n     // Only post event if this component is visible and has changed size.\n@@ -1798,9 +1824,8 @@ public boolean isCursorSet()\n    */\n   public void paint(Graphics g)\n   {\n-    // Paint the heavyweight peer\n-    if (!isLightweight() && peer != null)\n-      peer.paint(g);\n+    // This is a callback method and is meant to be overridden by subclasses\n+    // that want to perform custom painting.\n   }\n \n   /**\n@@ -1816,18 +1841,27 @@ public void paint(Graphics g)\n    *\n    * @see #paint(Graphics)\n    * @see #repaint()\n+   *\n+   * @specnote In contrast to what the spec says, tests show that the exact\n+   *           behaviour is to clear the background on lightweight and\n+   *           top-level components only. Heavyweight components are not\n+   *           affected by this method and only call paint().\n    */\n   public void update(Graphics g)\n   {\n-    if (!isLightweight())\n+    // Tests show that the clearing of the background is only done in\n+    // two cases:\n+    // - If the component is lightweight (yes this is in contrast to the spec).\n+    // or\n+    // - If the component is a toplevel container.\n+    if (isLightweight() || getParent() == null)\n       {\n         Rectangle clip = g.getClipBounds();\n         if (clip == null)\n           g.clearRect(0, 0, width, height);\n         else\n           g.clearRect(clip.x, clip.y, clip.width, clip.height);\n       }\n-\n     paint(g);\n   }\n \n@@ -1854,7 +1888,14 @@ public void paintAll(Graphics g)\n    */\n   public void repaint()\n   {\n-    repaint(0, 0, 0, width, height);\n+    if(!isShowing())\n+      {\n+        Component p = parent;\n+        if (p != null)\n+          p.repaint(0, getX(), getY(), width, height);\n+      }\n+    else\n+      repaint(0, 0, 0, width, height);\n   }\n \n   /**\n@@ -1868,7 +1909,14 @@ public void repaint()\n    */\n   public void repaint(long tm)\n   {\n-    repaint(tm, 0, 0, width, height);\n+    if(!isShowing())\n+      {\n+        Component p = parent;\n+        if (p != null)\n+          p.repaint(tm, getX(), getY(), width, height);\n+      }\n+    else\n+      repaint(tm, 0, 0, width, height);\n   }\n \n   /**\n@@ -1885,7 +1933,14 @@ public void repaint(long tm)\n    */\n   public void repaint(int x, int y, int w, int h)\n   {\n-    repaint(0, x, y, w, h);\n+    if(!isShowing())\n+      {\n+        Component p = parent;\n+        if (p != null)\n+          p.repaint(0, x + getX(), y + getY(), width, height);\n+      }\n+    else\n+      repaint(0, x, y, w, h);\n   }\n \n   /**\n@@ -1903,14 +1958,18 @@ public void repaint(int x, int y, int w, int h)\n    */\n   public void repaint(long tm, int x, int y, int width, int height)\n   {\n-    // Handle lightweight repainting by forwarding to native parent\n-    if (isLightweight() && parent != null)\n+    if(!isShowing())\n       {\n-        if (parent != null)\n-          parent.repaint(tm, x + getX(), y + getY(), width, height);\n+        Component p = parent;\n+        if (p != null)\n+          p.repaint(tm, x + getX(), y + getY(), width, height);\n+      }\n+    else\n+      {\n+        ComponentPeer p = peer;\n+        if (p != null)\n+          p.repaint(tm, x, y, width, height);\n       }\n-    else if (peer != null)\n-      peer.repaint(tm, x, y, width, height);\n   }\n \n   /**\n@@ -1971,7 +2030,7 @@ public void printAll(Graphics g)\n   public boolean imageUpdate(Image img, int flags, int x, int y, int w, int h)\n   {\n     if ((flags & (FRAMEBITS | ALLBITS)) != 0)\n-      repaint ();\n+      repaint();\n     else if ((flags & SOMEBITS) != 0)\n       {\n \tif (incrementalDraw)\n@@ -1981,10 +2040,10 @@ else if ((flags & SOMEBITS) != 0)\n \t\tlong tm = redrawRate.longValue();\n \t\tif (tm < 0)\n \t\t  tm = 0;\n-\t\trepaint (tm);\n+                repaint(tm);\n \t      }\n \t    else\n-\t      repaint (100);\n+              repaint(100);\n \t  }\n       }\n     return (flags & (ALLBITS | ABORT | ERROR)) == 0;\n@@ -2282,8 +2341,6 @@ public final void dispatchEvent(AWTEvent e)\n     // Some subclasses in the AWT package need to override this behavior,\n     // hence the use of dispatchEventImpl().\n     dispatchEventImpl(e);\n-    if (peer != null && ! e.consumed)\n-      peer.handleEvent(e);\n   }\n \n   /**\n@@ -4183,6 +4240,10 @@ protected String paramString()\n       param.append(\",translucent\");\n     if (isDoubleBuffered())\n       param.append(\",doublebuffered\");\n+    if (parent == null)\n+      param.append(\",parent==null\");\n+    else\n+      param.append(\",parent==\").append(parent.getName());\n     return param.toString();\n   }\n \n@@ -4742,7 +4803,7 @@ else if (e instanceof ActionEvent)\n    * @param e the event to dispatch\n    */\n \n-  void dispatchEventImpl (AWTEvent e)\n+  void dispatchEventImpl(AWTEvent e)\n   {\n     Event oldEvent = translateEvent (e);\n \n@@ -4776,8 +4837,12 @@ void dispatchEventImpl (AWTEvent e)\n                 break;\n               }\n           }\n-        processEvent (e);\n+        if (e.id != PaintEvent.PAINT && e.id != PaintEvent.UPDATE)\n+          processEvent(e);\n       }\n+\n+    if (peer != null)\n+      peer.handleEvent(e);\n   }\n \n   /**"}, {"sha": "13d32f87f39dd753afac1f2aa9563a78511b0afa", "filename": "libjava/classpath/java/awt/Container.java", "status": "modified", "additions": 210, "deletions": 113, "changes": 323, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Fawt%2FContainer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Fawt%2FContainer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Fawt%2FContainer.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -42,6 +42,7 @@\n import java.awt.event.ContainerListener;\n import java.awt.event.KeyEvent;\n import java.awt.event.MouseEvent;\n+import java.awt.peer.ComponentPeer;\n import java.awt.peer.ContainerPeer;\n import java.awt.peer.LightweightPeer;\n import java.beans.PropertyChangeListener;\n@@ -59,7 +60,8 @@\n import java.util.Set;\n \n import javax.accessibility.Accessible;\n-import javax.swing.SwingUtilities;\n+\n+import gnu.java.awt.AWTUtilities;\n \n /**\n  * A generic window toolkit object that acts as a container for other objects.\n@@ -338,8 +340,12 @@ protected void addImpl(Component comp, Object constraints, int index)\n         if (comp.parent != null)\n           comp.parent.remove(comp);\n         comp.parent = this;\n+\n         if (peer != null)\n           {\n+\t    // Notify the component that it has a new parent.\n+\t    comp.addNotify();\n+\n             if (comp.isLightweight ())\n \t      {\n \t\tenableEvents (comp.eventMask);\n@@ -348,7 +354,8 @@ protected void addImpl(Component comp, Object constraints, int index)\n \t      }\n           }\n \n-        invalidate();\n+        // Invalidate the layout of the added component and its ancestors.\n+        comp.invalidate();\n \n         if (component == null)\n           component = new Component[4]; // FIXME, better initial size?\n@@ -394,6 +401,9 @@ else if (constraints instanceof String)\n                                                    ContainerEvent.COMPONENT_ADDED,\n                                                    comp);\n             getToolkit().getSystemEventQueue().postEvent(ce);\n+\n+            // Repaint this container.\n+            repaint();\n           }\n       }\n   }\n@@ -429,6 +439,9 @@ public void remove(int index)\n                                                    ContainerEvent.COMPONENT_REMOVED,\n                                                    r);\n             getToolkit().getSystemEventQueue().postEvent(ce);\n+\n+            // Repaint this container.\n+            repaint();\n           }\n       }\n   }\n@@ -513,6 +526,11 @@ public void layout()\n   public void invalidate()\n   {\n     super.invalidate();\n+    if (layoutMgr != null && layoutMgr instanceof LayoutManager2)\n+      {\n+        LayoutManager2 lm2 = (LayoutManager2) layoutMgr;\n+        lm2.invalidateLayout(this);\n+      }\n   }\n \n   /**\n@@ -534,13 +552,20 @@ public void validate()\n    */\n   void invalidateTree()\n   {\n+    super.invalidate();  // Clean cached layout state.\n     for (int i = 0; i < ncomponents; i++)\n       {\n         Component comp = component[i];\n         comp.invalidate();\n         if (comp instanceof Container)\n           ((Container) comp).invalidateTree();\n       }\n+\n+    if (layoutMgr != null && layoutMgr instanceof LayoutManager2)\n+      {\n+        LayoutManager2 lm2 = (LayoutManager2) layoutMgr;\n+        lm2.invalidateLayout(this);\n+      }\n   }\n \n   /**\n@@ -596,11 +621,15 @@ protected void validateTree()\n \n   public void setFont(Font f)\n   {\n-    super.setFont(f);\n-    // FIXME: Although it might make more sense to invalidate only\n-    // those children whose font == null, Sun invalidates all children.\n-    // So we'll do the same.\n-    invalidateTree();\n+    if( (f != null && (font == null || !font.equals(f)))\n+        || f == null)\n+      {\n+        super.setFont(f);\n+        // FIXME: Although it might make more sense to invalidate only\n+        // those children whose font == null, Sun invalidates all children.\n+        // So we'll do the same.\n+        invalidateTree();\n+      }\n   }\n \n   /**\n@@ -622,10 +651,21 @@ public Dimension getPreferredSize()\n    */\n   public Dimension preferredSize()\n   {\n-    if (layoutMgr != null)\n-      return layoutMgr.preferredLayoutSize (this);\n-    else\n-      return super.preferredSize ();\n+    synchronized(treeLock)\n+      {  \n+        if(valid && prefSize != null)\n+          return new Dimension(prefSize);\n+        LayoutManager layout = getLayout();\n+        if (layout != null)\n+          {\n+            Dimension layoutSize = layout.preferredLayoutSize(this);\n+            if(valid)\n+              prefSize = layoutSize;\n+            return new Dimension(layoutSize);\n+          }\n+        else\n+          return super.preferredSize ();\n+      }\n   }\n \n   /**\n@@ -647,8 +687,15 @@ public Dimension getMinimumSize()\n    */\n   public Dimension minimumSize()\n   {\n-    if (layoutMgr != null)\n-      return layoutMgr.minimumLayoutSize (this);\n+    if(valid && minSize != null)\n+      return new Dimension(minSize);\n+\n+    LayoutManager layout = getLayout();\n+    if (layout != null)\n+      {\n+        minSize = layout.minimumLayoutSize (this);\n+        return minSize;\n+      }    \n     else\n       return super.minimumSize ();\n   }\n@@ -660,10 +707,15 @@ public Dimension minimumSize()\n    */\n   public Dimension getMaximumSize()\n   {\n-    if (layoutMgr != null && layoutMgr instanceof LayoutManager2)\n+    if (valid && maxSize != null)\n+      return new Dimension(maxSize);\n+\n+    LayoutManager layout = getLayout();\n+    if (layout != null && layout instanceof LayoutManager2)\n       {\n-        LayoutManager2 lm2 = (LayoutManager2) layoutMgr;\n-        return lm2.maximumLayoutSize(this);\n+        LayoutManager2 lm2 = (LayoutManager2) layout;\n+        maxSize = lm2.maximumLayoutSize(this);\n+        return maxSize;\n       }\n     else\n       return super.getMaximumSize();\n@@ -678,13 +730,7 @@ public Dimension getMaximumSize()\n    */\n   public float getAlignmentX()\n   {\n-    if (layoutMgr instanceof LayoutManager2)\n-      {\n-        LayoutManager2 lm2 = (LayoutManager2) layoutMgr;\n-        return lm2.getLayoutAlignmentX(this);\n-      }\n-    else\n-      return super.getAlignmentX();\n+    return super.getAlignmentX();\n   }\n \n   /**\n@@ -696,13 +742,7 @@ public float getAlignmentX()\n    */\n   public float getAlignmentY()\n   {\n-    if (layoutMgr instanceof LayoutManager2)\n-      {\n-        LayoutManager2 lm2 = (LayoutManager2) layoutMgr;\n-        return lm2.getLayoutAlignmentY(this);\n-      }\n-    else\n-      return super.getAlignmentY();\n+    return super.getAlignmentY();\n   }\n \n   /**\n@@ -718,8 +758,7 @@ public void paint(Graphics g)\n   {\n     if (!isShowing())\n       return;\n-    // Paint self first.\n-    super.paint(g);\n+\n     // Visit heavyweights as well, in case they were\n     // erased when we cleared the background for this container.\n     visitChildren(g, GfxPaintVisitor.INSTANCE, false);\n@@ -733,10 +772,30 @@ public void paint(Graphics g)\n    * drawn.\n    *\n    * @param g The graphics context for this update.\n+   *\n+   * @specnote The specification suggests that this method forwards the\n+   *           update() call to all its lightweight children. Tests show\n+   *           that this is not done either in the JDK. The exact behaviour\n+   *           seems to be that the background is cleared in heavyweight\n+   *           Containers, and all other containers\n+   *           directly call paint(), causing the (lightweight) children to\n+   *           be painted.\n    */\n   public void update(Graphics g)\n   {\n-    super.update(g);\n+    // It seems that the JDK clears the background of containers like Panel\n+    // and Window (within this method) but not of 'plain' Containers or\n+    // JComponents. This could\n+    // lead to the assumption that it only clears heavyweight containers.\n+    // However that is not quite true. In a test with a custom Container\n+    // that overrides isLightweight() to return false, the background is\n+    // also not cleared. So we do a check on !(peer instanceof LightweightPeer)\n+    // instead.\n+    ComponentPeer p = peer;\n+    if (p != null && !(p instanceof LightweightPeer))\n+      g.clearRect(0, 0, getWidth(), getHeight());\n+\n+    paint(g);\n   }\n \n   /**\n@@ -1198,7 +1257,7 @@ public void setFocusTraversalKeys(int id, Set keystrokes)\n       }\n \n     if (focusTraversalKeys == null)\n-      focusTraversalKeys = new Set[3];\n+      focusTraversalKeys = new Set[4];\n \n     keystrokes = Collections.unmodifiableSet (new HashSet (keystrokes));\n     firePropertyChange (name, focusTraversalKeys[id], keystrokes);\n@@ -1465,12 +1524,8 @@ private void visitChildren(Graphics gfx, GfxVisitor visitor,\n         for (int i = ncomponents - 1; i >= 0; --i)\n           {\n             Component comp = component[i];\n-            // If we're visiting heavyweights as well,\n-            // don't recurse into Containers here. This avoids\n-            // painting the same nested child multiple times.\n             boolean applicable = comp.isVisible()\n-              && (comp.isLightweight()\n-                  || !lightweightOnly && ! (comp instanceof Container));\n+              && (comp.isLightweight() || !lightweightOnly);\n \n             if (applicable)\n               visitChild(gfx, visitor, comp);\n@@ -1525,11 +1580,9 @@ private void visitChild(Graphics gfx, GfxVisitor visitor,\n   void dispatchEventImpl(AWTEvent e)\n   {\n     // Give lightweight dispatcher a chance to handle it.\n-    if (eventTypeEnabled (e.id)\n-        && dispatcher != null \n-        && dispatcher.handleEvent (e))\n+    if (dispatcher != null && dispatcher.handleEvent (e))\n       return;\n-    \n+\n     if ((e.id <= ContainerEvent.CONTAINER_LAST\n              && e.id >= ContainerEvent.CONTAINER_FIRST)\n         && (containerListener != null\n@@ -1539,6 +1592,26 @@ void dispatchEventImpl(AWTEvent e)\n       super.dispatchEventImpl(e);\n   }\n \n+  /**\n+   * Tests if this container has an interest in the given event id.\n+   *\n+   * @param eventId The event id to check.\n+   *\n+   * @return <code>true</code> if a listener for the event id exists or\n+   *         if the eventMask is set for the event id.\n+   *\n+   * @see java.awt.Component#eventTypeEnabled(int)\n+   */\n+  boolean eventTypeEnabled(int eventId)\n+  {\n+    if(eventId <= ContainerEvent.CONTAINER_LAST \n+       && eventId >= ContainerEvent.CONTAINER_FIRST)\n+      return containerListener != null\n+        || (eventMask & AWTEvent.CONTAINER_EVENT_MASK) != 0;\n+      else \n+        return super.eventTypeEnabled(eventId);\n+  }\n+\n   // This is used to implement Component.transferFocus.\n   Component findNextFocusComponent(Component child)\n   {\n@@ -1603,12 +1676,11 @@ private void addNotifyContainerChildren()\n \n                 // If we're not lightweight, and we just got a lightweight\n                 // child, we need a lightweight dispatcher to feed it events.\n-                if (! this.isLightweight()) \n-                  {\n-                    if (dispatcher == null)\n-                      dispatcher = new LightweightDispatcher (this);\n-                  }\t\n-\t  \n+                if (!this.isLightweight() && dispatcher == null) \n+                  dispatcher = new LightweightDispatcher (this);\n+\n+                if (dispatcher != null)\n+                  dispatcher.enableEvents(component[i].eventMask);\n \n \t\tenableEvents(component[i].eventMask);\n \t\tif (peer != null && !isLightweight ())\n@@ -1862,44 +1934,47 @@ public void componentRemoved(ContainerEvent e)\n  * rather than mimic it exactly we write something which does \"roughly\n  * the same thing\".\n  */\n-\n class LightweightDispatcher implements Serializable\n {\n   private static final long serialVersionUID = 5184291520170872969L;\n   private Container nativeContainer;\n   private Cursor nativeCursor;\n   private long eventMask;\n   \n-  private transient Component mouseEventTarget;\n   private transient Component pressedComponent;\n   private transient Component lastComponentEntered;\n-  private transient Component tempComponent;\n   private transient int pressCount;\n   \n   LightweightDispatcher(Container c)\n   {\n     nativeContainer = c;\n   }\n \n-  void acquireComponentForMouseEvent(MouseEvent me)\n+  void enableEvents(long l)\n+  {\n+    eventMask |= l;\n+  }\n+\n+  Component acquireComponentForMouseEvent(MouseEvent me)\n   {\n     int x = me.getX ();\n     int y = me.getY ();\n \n+    Component mouseEventTarget = null;\n     // Find the candidate which should receive this event.\n     Component parent = nativeContainer;\n     Component candidate = null;\n     Point p = me.getPoint();\n     while (candidate == null && parent != null)\n       {\n         candidate =\n-          SwingUtilities.getDeepestComponentAt(parent, p.x, p.y);\n+          AWTUtilities.getDeepestComponentAt(parent, p.x, p.y);\n         if (candidate == null || (candidate.eventMask & me.getID()) == 0)\n-        {\n-          candidate = null;\n-          p = SwingUtilities.convertPoint(parent, p.x, p.y, parent.parent);\n-          parent = parent.parent;\n-        }\n+          {\n+            candidate = null;\n+            p = AWTUtilities.convertPoint(parent, p.x, p.y, parent.parent);\n+            parent = parent.parent;\n+          }\n       }\n \n     // If the only candidate we found was the native container itself,\n@@ -1915,25 +1990,24 @@ void acquireComponentForMouseEvent(MouseEvent me)\n       {\n         // Old candidate could have been removed from \n         // the nativeContainer so we check first.\n-        if (SwingUtilities.isDescendingFrom(lastComponentEntered, nativeContainer))\n-        {\n-          Point tp = \n-            SwingUtilities.convertPoint(nativeContainer, \n-                                        x, y, lastComponentEntered);\n-          MouseEvent exited = new MouseEvent (lastComponentEntered, \n-                                              MouseEvent.MOUSE_EXITED,\n-                                              me.getWhen (), \n-                                              me.getModifiersEx (), \n-                                              tp.x, tp.y,\n-                                              me.getClickCount (),\n-                                              me.isPopupTrigger (),\n-                                              me.getButton ());\n-          tempComponent = lastComponentEntered;\n-          lastComponentEntered = null;\n-          tempComponent.dispatchEvent(exited);\n-        }\n+        if (AWTUtilities.isDescendingFrom(lastComponentEntered,\n+                                          nativeContainer))\n+          {\n+            Point tp = AWTUtilities.convertPoint(nativeContainer, \n+                                                 x, y, lastComponentEntered);\n+            MouseEvent exited = new MouseEvent (lastComponentEntered, \n+                                                MouseEvent.MOUSE_EXITED,\n+                                                me.getWhen (), \n+                                                me.getModifiersEx (), \n+                                                tp.x, tp.y,\n+                                                me.getClickCount (),\n+                                                me.isPopupTrigger (),\n+                                                me.getButton ());\n+            lastComponentEntered.dispatchEvent (exited); \n+          }\n         lastComponentEntered = null;\n       }\n+\n     // If we have a candidate, maybe enter it.\n     if (candidate != null)\n       {\n@@ -1942,10 +2016,10 @@ void acquireComponentForMouseEvent(MouseEvent me)\n             && candidate.isShowing()\n             && candidate != nativeContainer\n             && candidate != lastComponentEntered)\n-\t  {\t\t\t\n+\t  {\n             lastComponentEntered = mouseEventTarget;\n-            Point cp = SwingUtilities.convertPoint(nativeContainer, \n-                                                   x, y, lastComponentEntered);\n+            Point cp = AWTUtilities.convertPoint(nativeContainer, \n+                                                 x, y, lastComponentEntered);\n             MouseEvent entered = new MouseEvent (lastComponentEntered, \n                                                  MouseEvent.MOUSE_ENTERED,\n                                                  me.getWhen (), \n@@ -1958,17 +2032,38 @@ void acquireComponentForMouseEvent(MouseEvent me)\n           }\n       }\n \n+    // Check which buttons where pressed except the last button that\n+    // changed state.\n+    int modifiers = me.getModifiersEx() & (MouseEvent.BUTTON1_DOWN_MASK\n+                                           | MouseEvent.BUTTON2_DOWN_MASK\n+                                           | MouseEvent.BUTTON3_DOWN_MASK);\n+    switch(me.getButton())\n+      {\n+      case MouseEvent.BUTTON1:\n+        modifiers &= ~MouseEvent.BUTTON1_DOWN_MASK;\n+        break;\n+      case MouseEvent.BUTTON2:\n+        modifiers &= ~MouseEvent.BUTTON2_DOWN_MASK;\n+        break;\n+      case MouseEvent.BUTTON3:\n+        modifiers &= ~MouseEvent.BUTTON3_DOWN_MASK;\n+        break;\n+      }\n+\n     if (me.getID() == MouseEvent.MOUSE_RELEASED\n-        || me.getID() == MouseEvent.MOUSE_PRESSED && pressCount > 0\n+        || me.getID() == MouseEvent.MOUSE_PRESSED && modifiers > 0\n         || me.getID() == MouseEvent.MOUSE_DRAGGED)\n-      // If any of the following events occur while a button is held down,\n-      // they should be dispatched to the same component to which the\n-      // original MOUSE_PRESSED event was dispatched:\n-      //   - MOUSE_RELEASED\n-      //   - MOUSE_PRESSED: another button pressed while the first is held down\n-      //   - MOUSE_DRAGGED\n-      if (SwingUtilities.isDescendingFrom(pressedComponent, nativeContainer))\n-        mouseEventTarget = pressedComponent;\n+      {\n+        // If any of the following events occur while a button is held down,\n+        // they should be dispatched to the same component to which the\n+        // original MOUSE_PRESSED event was dispatched:\n+        //   - MOUSE_RELEASED\n+        //   - MOUSE_PRESSED: another button pressed while the first is held\n+        //     down\n+        //   - MOUSE_DRAGGED\n+        if (AWTUtilities.isDescendingFrom(pressedComponent, nativeContainer))\n+          mouseEventTarget = pressedComponent;\n+      }\n     else if (me.getID() == MouseEvent.MOUSE_CLICKED)\n       {\n         // Don't dispatch CLICKED events whose target is not the same as the\n@@ -1978,6 +2073,7 @@ else if (me.getID() == MouseEvent.MOUSE_CLICKED)\n         else if (pressCount == 0)\n           pressedComponent = null;\n       }\n+    return mouseEventTarget;\n   }\n \n   boolean handleEvent(AWTEvent e)\n@@ -1986,41 +2082,42 @@ boolean handleEvent(AWTEvent e)\n       {\n         MouseEvent me = (MouseEvent) e;\n \n-        acquireComponentForMouseEvent(me);\n-\t\n+        // Make the LightWeightDispatcher reentrant. This is necessary when\n+        // a lightweight component does its own modal event queue.\n+        Component mouseEventTarget = acquireComponentForMouseEvent(me);\n+\n         // Avoid dispatching ENTERED and EXITED events twice.\n         if (mouseEventTarget != null\n             && mouseEventTarget.isShowing()\n             && e.getID() != MouseEvent.MOUSE_ENTERED\n             && e.getID() != MouseEvent.MOUSE_EXITED)\n           {\n-            MouseEvent newEvt = \n-              SwingUtilities.convertMouseEvent(nativeContainer, me, \n-                                               mouseEventTarget);\n-            mouseEventTarget.dispatchEvent(newEvt);\n-\n             switch (e.getID())\n               {\n-                case MouseEvent.MOUSE_PRESSED:\n-                  if (pressCount++ == 0)\n-                    pressedComponent = mouseEventTarget;\n-                  break;\n-\n-                case MouseEvent.MOUSE_RELEASED:\n-                  // Clear our memory of the original PRESSED event, only if\n-                  // we're not expecting a CLICKED event after this. If\n-                  // there is a CLICKED event after this, it will do clean up.\n-                  if (--pressCount == 0\n-                      && mouseEventTarget != pressedComponent)\n-                    pressedComponent = null;\n-                  break;\n+              case MouseEvent.MOUSE_PRESSED:\n+                if (pressCount++ == 0)\n+                  pressedComponent = mouseEventTarget;\n+                break;\n+              case MouseEvent.MOUSE_RELEASED:\n+                // Clear our memory of the original PRESSED event, only if\n+                // we're not expecting a CLICKED event after this. If\n+                // there is a CLICKED event after this, it will do clean up.\n+                if (--pressCount == 0\n+                    && mouseEventTarget != pressedComponent)\n+                  pressedComponent = null;\n+                break;\n               }\n-              if (newEvt.isConsumed())\n-                e.consume();\n+\n+            MouseEvent newEvt =\n+              AWTUtilities.convertMouseEvent(nativeContainer, me,\n+                                             mouseEventTarget);\n+            mouseEventTarget.dispatchEvent(newEvt);\n+\n+            if (newEvt.isConsumed())\n+              e.consume();\n           }\n       }\n-    \n+\n     return e.isConsumed();\n   }\n-\n-} // class LightweightDispatcher\n+}"}, {"sha": "15b6e1e7afd20cfea9c1ac38701ab487a30bc8f9", "filename": "libjava/classpath/java/awt/EventQueue.java", "status": "modified", "additions": 16, "deletions": 59, "changes": 75, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Fawt%2FEventQueue.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Fawt%2FEventQueue.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Fawt%2FEventQueue.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -38,8 +38,6 @@\n \n package java.awt;\n \n-import gnu.java.awt.ClasspathToolkit;\n-\n import java.awt.event.ActionEvent;\n import java.awt.event.InputEvent;\n import java.awt.event.InputMethodEvent;\n@@ -78,10 +76,7 @@\n   private EventDispatchThread dispatchThread = new EventDispatchThread(this);\n   private boolean shutdown = false;\n \n-  private long lastNativeQueueAccess = 0;\n-  private long humanLatencyThreshold = 100;\n-\n-  synchronized void setShutdown (boolean b) \n+  synchronized private void setShutdown (boolean b) \n   {\n     shutdown = b;\n   }\n@@ -94,8 +89,8 @@ synchronized boolean isShutdown ()\n     // This is the exact self-shutdown condition specified in J2SE:\n     // http://java.sun.com/j2se/1.4.2/docs/api/java/awt/doc-files/AWTThreadIssues.html\n     \n-    if (peekEvent() == null\n-        && ((ClasspathToolkit) Toolkit.getDefaultToolkit()).nativeQueueEmpty())\n+    // FIXME: check somewhere that the native queue is empty\n+    if (peekEvent() == null)\n       {\n         Frame[] frames = Frame.getFrames();\n         for (int i = 0; i < frames.length; ++i)\n@@ -127,50 +122,22 @@ public synchronized AWTEvent getNextEvent()\n   {\n     if (next != null)\n       return next.getNextEvent();\n-    \n-    ClasspathToolkit tk = ((ClasspathToolkit) Toolkit.getDefaultToolkit());\n-    long curr = System.currentTimeMillis();\n-\n-    if (! tk.nativeQueueEmpty() &&\n-        (curr - lastNativeQueueAccess > humanLatencyThreshold))\n-      {\n-        tk.iterateNativeQueue(this, false);\n-        lastNativeQueueAccess = curr;\n-      }\n \n     while (next_in == next_out)\n       {\n-        // Only the EventDispatchThread associated with the top of the stack is\n-        // allowed to get events from the native source; everyone else just\n-        // waits on the head of the queue.\n-\n-        if (isDispatchThread())\n-          {\n-            // We are not allowed to return null from this method, yet it\n-            // is possible that we actually have run out of native events\n-            // in the enclosing while() loop, and none of the native events\n-            // happened to cause AWT events. We therefore ought to check\n-            // the isShutdown() condition here, before risking a \"native\n-            // wait\". If we check it before entering this function we may\n-            // wait forever for events after the shutdown condition has\n-            // arisen.\n-\n-            if (isShutdown())\n-              throw new InterruptedException();\n-\n-            tk.iterateNativeQueue(this, true);\n-            lastNativeQueueAccess = System.currentTimeMillis();\n-          }\n-        else\n-          {\n-            try\n-              {\n-                wait();\n-              }\n-            catch (InterruptedException ie)\n-              {\n-              }\n-          }\n+        // We are not allowed to return null from this method, yet it\n+        // is possible that we actually have run out of native events\n+        // in the enclosing while() loop, and none of the native events\n+        // happened to cause AWT events. We therefore ought to check\n+        // the isShutdown() condition here, before risking a \"native\n+        // wait\". If we check it before entering this function we may\n+        // wait forever for events after the shutdown condition has\n+        // arisen.\n+\n+        if (isShutdown())\n+          throw new InterruptedException();\n+\n+        wait();\n       }\n \n     AWTEvent res = queue[next_out];\n@@ -298,15 +265,6 @@ public synchronized void postEvent(AWTEvent evt)\n         dispatchThread.start();\n       }\n \n-    // Window events might represent the closing of a window, which\n-    // might cause the end of the dispatch thread's life, so we'll wake\n-    // it up here to give it a chance to check for shutdown.\n-\n-    if (!isDispatchThread() \n-        || (evt.getID() == WindowEvent.WINDOW_CLOSED)\n-        || (evt.getID() == WindowEvent.WINDOW_CLOSING))\n-      ((ClasspathToolkit) Toolkit.getDefaultToolkit()).wakeNativeQueue();\n-\n     notify();\n   }\n \n@@ -478,7 +436,6 @@ protected void pop() throws EmptyStackException\n \t    next_in = 0;\n \t    next_out = 0;\n \n-            ((ClasspathToolkit) Toolkit.getDefaultToolkit()).wakeNativeQueue();\n             setShutdown(true);\n \t    dispatchThread = null;\n             this.notifyAll();"}, {"sha": "7d0771d915b8b7482af849e3eebbb4578ec83a54", "filename": "libjava/classpath/java/awt/FlowLayout.java", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Fawt%2FFlowLayout.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Fawt%2FFlowLayout.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Fawt%2FFlowLayout.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -205,12 +205,12 @@ public void layoutContainer (Container parent)\n \t    else if (align == TRAILING)\n \t      myalign = left_to_right ? RIGHT : LEFT;\n \n-\t    if (myalign == LEFT)\n-\t      x = ins.left + hgap;\n+\t    if (myalign == RIGHT)\n+\t      x = ins.left + (d.width - new_w) + hgap;\n \t    else if (myalign == CENTER)\n \t      x = ins.left + (d.width - new_w) / 2 + hgap;\n-\t    else\n-\t      x = ins.left + (d.width - new_w) + hgap;\n+\t    else // LEFT and all other values of align.\n+\t      x = ins.left + hgap;\n \n \t    for (int k = i; k < j; ++k)\n \t      {\n@@ -269,9 +269,9 @@ public void removeLayoutComponent (Component comp)\n    */\n   public void setAlignment (int align)\n   {\n-    if (align != LEFT && align != RIGHT && align != CENTER\n-\t&& align != LEADING && align != TRAILING)\n-      throw new IllegalArgumentException (\"invalid alignment: \" + align);\n+    // The JDK accepts invalid values and treats them as\n+    // LEFT during layout, so do we. The invalid value is even stored,\n+    // getAlignment() returns the same invalid value.\n     this.align = align;\n   }\n "}, {"sha": "5de94586e2c9f351b335efa1bf955a15b10dae6a", "filename": "libjava/classpath/java/awt/Font.java", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Fawt%2FFont.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Fawt%2FFont.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Fawt%2FFont.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -353,9 +353,11 @@ public Font (Map attrs)\n     this(null, attrs);\n   }\n \n-  /* This extra constructor is here to permit ClasspathToolkit and to build\n-     a font with a \"logical name\" as well as attrs.  */\n-  public Font (String name, Map attrs)\n+  /* This extra constructor is here to permit ClasspathToolkit and to\n+     build a font with a \"logical name\" as well as attrs.\n+     ClasspathToolkit.getFont(String,Map) uses reflection to call this\n+     package-private constructor. */\n+  Font (String name, Map attrs)\n   {\n     // If attrs is null, setting it to an empty HashMap will give this\n     // Font default attributes."}, {"sha": "6dd73ec2560063482f0fbb033f343aaf488b6d09", "filename": "libjava/classpath/java/awt/FontMetrics.java", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Fawt%2FFontMetrics.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Fawt%2FFontMetrics.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Fawt%2FFontMetrics.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -193,7 +193,8 @@ public int getMaxAdvance()\n    */\n   public int charWidth(int ch)\n   {\n-    return charWidth((char) ch);\n+    char[] chars = Character.toChars(ch);\n+    return charsWidth(chars, 0, chars.length);\n   }\n \n   /**\n@@ -235,7 +236,8 @@ public int stringWidth(String str)\n   public int charsWidth(char[] buf, int offset, int len)\n   {\n     int total_width = 0;\n-    for (int i = offset; i < len; i++)\n+    int endOffset = offset + len;\n+    for (int i = offset; i < endOffset; i++)\n       total_width += charWidth(buf[i]);\n     return total_width;\n   }"}, {"sha": "05c938496e0656f386e7cc652d938eed8c05d16f", "filename": "libjava/classpath/java/awt/Frame.java", "status": "modified", "additions": 0, "deletions": 25, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Fawt%2FFrame.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Fawt%2FFrame.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Fawt%2FFrame.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -401,20 +401,6 @@ public class Frame extends Window implements MenuContainer\n   menuBar.remove(menu);\n }\n \n-/**\n-  * Notifies this frame that it should create its native peer.\n-  */\n-private static void fireDummyEvent()\n-{\n-  EventQueue.invokeLater(new Runnable()\n-    {\n-      public void run()\n-      {\n-\t// Do nothing here.\n-      }\n-    });\n-}\n-\n public void\n addNotify()\n {\n@@ -423,11 +409,6 @@ public void run()\n   if (peer == null)\n     peer = getToolkit ().createFrame (this);\n \n-  // We now know there's a Frame (us) with a live peer, so we can start the\n-  // fundamental queue and dispatch thread, by inserting a dummy event.\n-  if (parent != null && parent.isDisplayable())\n-    fireDummyEvent();\n-  \n   super.addNotify();\n }\n \n@@ -436,12 +417,6 @@ public void removeNotify()\n   if (menuBar != null)\n     menuBar.removeNotify();\n   super.removeNotify();\n-\n-  // By now we've been disconnected from the peer, and the peer set to\n-  // null.  This is formally the same as saying \"we just became\n-  // un-displayable\", so we wake up the event queue with a dummy event to\n-  // see if it's time to shut down.\n-  fireDummyEvent();\n }\n \n   /**"}, {"sha": "069d7414b3d3b60825671eadbb177190833492f3", "filename": "libjava/classpath/java/awt/GraphicsConfiguration.java", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Fawt%2FGraphicsConfiguration.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Fawt%2FGraphicsConfiguration.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Fawt%2FGraphicsConfiguration.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -125,6 +125,22 @@ public VolatileImage createCompatibleVolatileImage(int w, int h,\n     throw new AWTException(\"not implemented\");\n   }\n \n+  /**\n+   * Returns a buffered volatile image optimized to this device, and\n+   * with the given transparency. Because the buffer is volatile, it\n+   * can be optimized by native graphics accelerators.\n+   *\n+   * @param w the width of the buffer\n+   * @param h the height of the buffer\n+   * @param transparency the transparency value for the buffer\n+   * @return the buffered image, or null if none is supported\n+   * @throws AWTException if the capabilities cannot be met\n+   * @since 1.5\n+   */\n+  public abstract VolatileImage createCompatibleVolatileImage(int width,\n+                                                              int height,\n+                                                              int transparency);\n+\n   /**\n    * Returns a buffered image optimized to this device, and with the specified\n    * transparency, so that blitting can be supported in the buffered image."}, {"sha": "7f9ab249b6d7fc077f5d75a9b7af175747e6a1b3", "filename": "libjava/classpath/java/awt/GridBagLayout.java", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Fawt%2FGridBagLayout.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Fawt%2FGridBagLayout.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Fawt%2FGridBagLayout.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -192,16 +192,12 @@ public void setConstraints (Component component,\n \n \tif (clone.gridwidth == 0)\n \t    clone.gridwidth = GridBagConstraints.REMAINDER;\n-\telse if (clone.gridwidth < 0\n-\t    && clone.gridwidth != GridBagConstraints.REMAINDER\n-\t    && clone.gridwidth != GridBagConstraints.RELATIVE)\n+\telse if (clone.gridwidth < 0)\n \t    clone.gridwidth = 1;\n     \n \tif (clone.gridheight == 0)\n \t    clone.gridheight = GridBagConstraints.REMAINDER;\n-\telse if (clone.gridheight < 0\n-\t    && clone.gridheight != GridBagConstraints.REMAINDER\n-\t    && clone.gridheight != GridBagConstraints.RELATIVE)\n+\telse if (clone.gridheight < 0)\n \t    clone.gridheight = 1;\n     \n \tcomptable.put (component, clone);\n@@ -913,7 +909,7 @@ private void distributeSizeAndWeight (int size, double weight,\n           sizes[start] = Math.max(sizes[start], size);\n           weights[start] = Math.max(weights[start], weight);\n         }\n-      else\n+      else if (span > 1)\n         {\n           int numOccupied = span;\n           int lastOccupied = -1;"}, {"sha": "d6db329106fa898677c76422fbc438e3624ef655", "filename": "libjava/classpath/java/awt/Label.java", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Fawt%2FLabel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Fawt%2FLabel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Fawt%2FLabel.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -215,12 +215,17 @@ public class Label extends Component implements Accessible\n public synchronized void\n setText(String text)\n {\n-  this.text = text;\n-\n-  if (peer != null)\n+  if ((this.text == null && text != null)\n+      || (this.text != null && ! this.text.equals(text)))\n     {\n-      LabelPeer lp = (LabelPeer) peer;\n-      lp.setText (text);\n+      this.text = text;\n+\n+      if (peer != null)\n+\t{\n+\t  LabelPeer lp = (LabelPeer) peer;\n+\t  lp.setText (text);\n+\t}\n+      invalidate();\n     }\n }\n "}, {"sha": "ab7d359633e11537a83dd3b56df9c795f492abd6", "filename": "libjava/classpath/java/awt/List.java", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Fawt%2FList.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Fawt%2FList.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Fawt%2FList.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -163,6 +163,7 @@ public class List extends Component\n {\n   this.rows = rows;\n   this.multipleMode = multipleMode;\n+  selected = new int[0];\n \n   if (GraphicsEnvironment.isHeadless())\n     throw new HeadlessException ();"}, {"sha": "58dcb6741462877a42c14ef0e3be4bb0656ad946", "filename": "libjava/classpath/java/awt/MenuItem.java", "status": "modified", "additions": 5, "deletions": 8, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Fawt%2FMenuItem.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Fawt%2FMenuItem.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Fawt%2FMenuItem.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -179,14 +179,11 @@ public Number getCurrentAccessibleValue()\n      */\n     public boolean setCurrentAccessibleValue(Number number)\n     {\n-      if (number.intValue() == 0)\n-\t{\n-\t  setEnabled(false);\n-\t  return false;\n-\t}\n-    \n-      setEnabled(true);\n-      return true;\n+      boolean result = (number.intValue() != 0);\n+      // this. is required by javac 1.3, otherwise it is confused with\n+      // MenuItem.this.setEnabled.\n+      this.setEnabled(result);\n+      return result; \n     }\n \n     /* (non-Javadoc)"}, {"sha": "60e72fcb5cb769db5d7997b10473f3d9cfc86856", "filename": "libjava/classpath/java/awt/TextComponent.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Fawt%2FTextComponent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Fawt%2FTextComponent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Fawt%2FTextComponent.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -475,7 +475,7 @@ public void textValueChanged(TextEvent event)\n   if (selectionEnd > text.length())\n     selectionEnd = text.length();\n \n-  if (selectionStart > getSelectionEnd())\n+  if (selectionStart > selectionEnd)\n     selectionStart = selectionEnd;\n \n   this.selectionStart = selectionStart;"}, {"sha": "2ca88b6f5986f9464f245b49d18c9fde124e65b8", "filename": "libjava/classpath/java/awt/Toolkit.java", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Fawt%2FToolkit.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Fawt%2FToolkit.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Fawt%2FToolkit.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -790,6 +790,9 @@ public Cursor createCustomCursor(Image cursor, Point hotSpot, String name)\n   {\n     // Presumably the only reason this isn't abstract is for backwards\n     // compatibility? FIXME?\n+    if (GraphicsEnvironment.isHeadless())\n+      throw new HeadlessException(\"No custom cursor in an headless graphics \"\n+                                  + \"environment.\");\n     return null;\n   }\n \n@@ -801,6 +804,9 @@ public Cursor createCustomCursor(Image cursor, Point hotSpot, String name)\n    */\n   public Dimension getBestCursorSize(int preferredWidth, int preferredHeight)\n   {\n+    if (GraphicsEnvironment.isHeadless())\n+      throw new HeadlessException(\"No best cursor size in an headless \"\n+                                  + \"graphics environment.\");\n     return new Dimension (0,0);\n   }\n "}, {"sha": "1689d03706b454773a68b06b72a10fbe10d89e1a", "filename": "libjava/classpath/java/awt/Window.java", "status": "modified", "additions": 24, "deletions": 39, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Fawt%2FWindow.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Fawt%2FWindow.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Fawt%2FWindow.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -155,6 +155,9 @@ public void windowGainedFocus (WindowEvent event)\n             }\n         }\n       });\n+    \n+    GraphicsEnvironment g = GraphicsEnvironment.getLocalGraphicsEnvironment();\n+    graphicsConfiguration = g.getDefaultScreenDevice().getDefaultConfiguration();\n   }\n \n   Window(GraphicsConfiguration gc)\n@@ -619,6 +622,8 @@ void dispatchEventImpl(AWTEvent e)\n \t    || windowStateListener != null\n \t    || (eventMask & AWTEvent.WINDOW_EVENT_MASK) != 0))\n       processEvent(e);\n+    else if (e.id == ComponentEvent.COMPONENT_RESIZED)\n+      validate ();\n     else\n       super.dispatchEventImpl(e);\n   }\n@@ -741,7 +746,25 @@ public Component getFocusOwner ()\n     if (activeWindow == this)\n       return manager.getFocusOwner ();\n     else\n-      return windowFocusOwner;\n+      return null;\n+  }\n+\n+  /**\n+   * Returns the child component of this window that would receive\n+   * focus if this window were to become focused.  If the window\n+   * already has the top-level focus, then this method returns the\n+   * same component as getFocusOwner.  If no child component has\n+   * requested focus within the window, then the initial focus owner\n+   * is returned.  If this is a non-focusable window, this method\n+   * returns null.\n+   *\n+   * @return the child component of this window that most recently had\n+   * the focus, or <code>null</code>\n+   * @since 1.4\n+   */\n+  public Component getMostRecentFocusOwner ()\n+  {\n+    return windowFocusOwner;\n   }\n \n   /**\n@@ -1070,44 +1093,6 @@ public void setFocusableWindowState (boolean focusableWindowState)\n     this.focusableWindowState = focusableWindowState;\n   }\n \n-  // setBoundsCallback is needed so that when a user moves a window,\n-  // the Window's location can be updated without calling the peer's\n-  // setBounds method.  When a user moves a window the peer window's\n-  // location is updated automatically and the windowing system sends\n-  // a message back to the application informing it of its updated\n-  // dimensions.  We must update the AWT Window class with these new\n-  // dimensions.  But we don't want to call the peer's setBounds\n-  // method, because the peer's dimensions have already been updated.\n-  // (Under X, having this method prevents Configure event loops when\n-  // moving windows: Component.setBounds -> peer.setBounds ->\n-  // postConfigureEvent -> Component.setBounds -> ...  In some cases\n-  // Configure event loops cause windows to jitter back and forth\n-  // continuously).\n-  void setBoundsCallback (int x, int y, int w, int h)\n-  {\n-    if (this.x == x && this.y == y && width == w && height == h)\n-      return;\n-    invalidate();\n-    boolean resized = width != w || height != h;\n-    boolean moved = this.x != x || this.y != y;\n-    this.x = x;\n-    this.y = y;\n-    width = w;\n-    height = h;\n-    if (resized && isShowing ())\n-      {\n-        ComponentEvent ce =\n-          new ComponentEvent(this, ComponentEvent.COMPONENT_RESIZED);\n-        getToolkit().getSystemEventQueue().postEvent(ce);\n-      }\n-    if (moved && isShowing ())\n-      {\n-        ComponentEvent ce =\n-          new ComponentEvent(this, ComponentEvent.COMPONENT_MOVED);\n-        getToolkit().getSystemEventQueue().postEvent(ce);\n-      }\n-  }\n-\n   /**\n    * Generate a unique name for this window.\n    *"}, {"sha": "5fa1d1ab1344d392324ff0577cc417aafc66379b", "filename": "libjava/classpath/java/awt/datatransfer/Clipboard.java", "status": "modified", "additions": 108, "deletions": 15, "changes": 123, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Fawt%2Fdatatransfer%2FClipboard.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Fawt%2Fdatatransfer%2FClipboard.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Fawt%2Fdatatransfer%2FClipboard.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -1,5 +1,5 @@\n /* Clipboard.java -- Class for transferring data via cut and paste.\n-   Copyright (C) 1999, 2001 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2001, 2005 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -38,16 +38,21 @@\n \n package java.awt.datatransfer;\n \n+import java.io.IOException;\n+import java.util.ArrayList;\n+\n /**\n  * This class allows data to be transferred using a cut and paste type\n  * mechanism.\n  *\n  * @author Aaron M. Renn (arenn@urbanophile.com)\n+ * @author Mark J. Wielaard (mark@klomp.org)\n  */\n public class Clipboard\n {\n   /**\n-   * The data being transferred.\n+   * The data currently on this clipboard.  For use by\n+   * subclasses. Also returned by the public method getContents().\n    */\n   protected Transferable contents;\n \n@@ -57,7 +62,10 @@\n   protected ClipboardOwner owner;\n \n   // The clipboard name\n-  private String name;\n+  private final String name;\n+\n+  // The flavor listeners (most likely small).\n+  private final ArrayList listeners = new ArrayList(3);\n \n   /**\n    * Initializes a new instance of <code>Clipboard</code> with the\n@@ -81,7 +89,8 @@ public String getName()\n   /**\n    * Returns the contents of the clipboard.\n    *\n-   * @param requestor The object requesting the contents.\n+   * @param requestor The object requesting the contents. This\n+   * implementation ignores this parameter.\n    *\n    * @exception IllegalStateException If the clipboard is currently unavailable\n    */\n@@ -91,24 +100,108 @@ public synchronized Transferable getContents(Object requestor)\n   }\n \n   /**\n-   * Sets the content and owner of this clipboard.\n-   * If the given owner is different from the current owner\n-   * then lostOwnership is called on the current owner.\n-   * XXX - is this called with the old or new contents.\n+   * Sets the content and owner of this clipboard.  If the given owner\n+   * is different from the current owner then <code>lostOwnership()</code>\n+   * is called on the current owner with the old contents of the given\n+   * clipboard.\n    *\n    * @param contents The new clipboard contents.\n    * @param owner The new clipboard owner\n    *\n    * @exception IllegalStateException If the clipboard is currently unavailable\n    */\n-  public synchronized void setContents(Transferable contents, ClipboardOwner owner)\n+  public synchronized void setContents(Transferable contents,\n+\t\t\t\t       ClipboardOwner owner)\n   {\n-    if (this.owner != owner)\n-      if (this.owner != null)\n-        this.owner.lostOwnership(this, contents);\n- \n-    this.owner = owner;\n+    Transferable oldContents = getContents(null);\n     this.contents = contents;\n+    if (this.owner != owner)\n+      {\n+\tClipboardOwner oldOwner = this.owner;\n+\tthis.owner = owner;\n+\tif (oldOwner != null)\n+\t  oldOwner.lostOwnership(this, oldContents);\n+      }\n+\n+    FlavorListener[] fs = getFlavorListeners();\n+    if (fs.length > 0)\n+      {\n+\t// We are a bit optimistic here. We assume DataFlavors will be\n+\t// given in the same order. If the number of flavors is\n+\t// different or the order of the DataFlavors in the list then\n+\t// fire a change event.\n+\tboolean newFlavors = ((contents != null && oldContents == null)\n+\t\t\t      || (contents == null && oldContents != null));\n+\tif (!newFlavors && contents != null && oldContents != null)\n+\t  {\n+\t    DataFlavor[] df1 = contents.getTransferDataFlavors();\n+\t    DataFlavor[] df2 = oldContents.getTransferDataFlavors();\n+\t    newFlavors = df1.length != df2.length;\n+\t    \n+\t    for (int i = 0; !newFlavors && i < df1.length; i++)\n+\t      newFlavors = !df1[i].equals(df2[i]);\n+\t  }\n+\n+\tif (newFlavors)\n+\t  {\n+\t    FlavorEvent e = new FlavorEvent(this);\n+\t    for (int i = 0; i < fs.length; i++)\n+\t      fs[i].flavorsChanged(e);\n+\t  }\n+      }\n+  }\n+\n+  public DataFlavor[] getAvailableDataFlavors()\n+  {\n+    Transferable c = getContents(null);\n+    if (c == null)\n+      return new DataFlavor[0];\n+    else\n+      return c.getTransferDataFlavors();\n+  }\n+\n+  public boolean isDataFlavorAvailable(DataFlavor flavor)\n+  {\n+    DataFlavor[] fs = getAvailableDataFlavors();\n+    for (int i = 0; i < fs.length; i++)\n+      if (flavor.equals(fs[i]))\n+\treturn true;\n+\n+    return false;\n   }\n-}\n \n+  public Object getData(DataFlavor flavor)\n+    throws UnsupportedFlavorException, IOException\n+  {\n+    Transferable c = getContents(null);\n+    if (c == null)\n+      throw new UnsupportedFlavorException(flavor);\n+    else\n+      return c.getTransferData(flavor);\n+  }\n+\n+  public void addFlavorListener(FlavorListener listener)\n+  {\n+    synchronized(listeners)\n+      {\n+\tlisteners.add(listener);\n+      }\n+  }\n+\n+  public void removeFlavorListener(FlavorListener listener)\n+  {\n+    synchronized(listeners)\n+      {\n+\tlisteners.remove(listener);\n+      }\n+  }\n+\n+  public FlavorListener[] getFlavorListeners()\n+  {\n+    synchronized(listeners)\n+      {\n+\treturn (FlavorListener[])\n+\t  listeners.toArray(new FlavorListener[listeners.size()]);\n+      }\n+  }\n+}"}, {"sha": "38f415b7526bc36ca86956849fd1420bc153e08b", "filename": "libjava/classpath/java/awt/datatransfer/DataFlavor.java", "status": "modified", "additions": 31, "deletions": 24, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Fawt%2Fdatatransfer%2FDataFlavor.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Fawt%2Fdatatransfer%2FDataFlavor.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Fawt%2Fdatatransfer%2FDataFlavor.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -49,6 +49,7 @@\n import java.io.UnsupportedEncodingException;\n import java.nio.ByteBuffer;\n import java.nio.CharBuffer;\n+import java.rmi.Remote;\n \n /**\n  * This class represents a particular data format used for transferring\n@@ -127,10 +128,9 @@ public class DataFlavor implements java.io.Externalizable, Cloneable\n \n   javaFileListFlavor\n       = new DataFlavor(java.util.List.class,\n+\t\t       \"application/x-java-file-list; class=java.util.List\",\n \t\t       \"Java File List\");\n \n-  // javaFileListFlavor.mimeType = \"application/x-java-file-list\";\n-\n   imageFlavor\n       = new DataFlavor(java.awt.Image.class,\n                        \"Java Image\");\n@@ -335,7 +335,8 @@ public class DataFlavor implements java.io.Externalizable, Cloneable\n public\n DataFlavor(String mimeType, String humanPresentableName)\n {\n-  this (getRepresentationClassFromMime (mimeType, null), humanPresentableName);\n+  this (getRepresentationClassFromMime (mimeType, null),\n+\tmimeType, humanPresentableName);\n }\n \n /*************************************************************************/\n@@ -426,17 +427,15 @@ public class DataFlavor implements java.io.Externalizable, Cloneable\n public String\n getSubType()\n {\n-  int idx = mimeType.indexOf(\"/\");\n-  if (idx == -1)\n-    return(\"\");\n-\n-  String subtype = mimeType.substring(idx + 1);\n+  int start = mimeType.indexOf(\"/\");\n+  if (start == -1)\n+    return \"\";\n \n-  idx = subtype.indexOf(\" \");\n-  if (idx == -1)\n-    return(subtype);\n+  int end = mimeType.indexOf(\";\", start + 1);\n+  if (end == -1)\n+    return mimeType.substring(start + 1);\n   else\n-    return(subtype.substring(0, idx));\n+    return mimeType.substring(start + 1, end);\n }\n \n /*************************************************************************/\n@@ -480,6 +479,9 @@ public class DataFlavor implements java.io.Externalizable, Cloneable\n public String\n getParameter(String paramName)\n {\n+  if (\"humanPresentableName\".equals(paramName))\n+    return getHumanPresentableName();\n+\n   return getParameter(paramName, mimeType);\n }\n \n@@ -500,21 +502,28 @@ public class DataFlavor implements java.io.Externalizable, Cloneable\n \n /**\n  * Tests the MIME type of this object for equality against the specified\n- * MIME type.\n+ * MIME type. Ignores parameters.\n  *\n  * @param mimeType The MIME type to test against.\n  *\n  * @return <code>true</code> if the MIME type is equal to this object's\n- * MIME type, <code>false</code> otherwise.\n+ * MIME type (ignoring parameters), <code>false</code> otherwise.\n  *\n  * @exception NullPointerException If mimeType is null.\n  */\n public boolean\n isMimeTypeEqual(String mimeType)\n {\n-  // FIXME: Need to handle default attributes and parameters\n+  String mime = getMimeType();\n+  int i = mime.indexOf(\";\");\n+  if (i != -1)\n+    mime = mime.substring(0, i);\n+\n+  i = mimeType.indexOf(\";\");\n+  if (i != -1)\n+    mimeType = mimeType.substring(0, i);\n \n-  return(this.mimeType.equals(mimeType));\n+  return mime.equals(mimeType);\n }\n \n /*************************************************************************/\n@@ -599,8 +608,7 @@ public class DataFlavor implements java.io.Externalizable, Cloneable\n public boolean\n isRepresentationClassRemote()\n {\n-  // FIXME: Implement\n-  throw new RuntimeException(\"Not implemented\");\n+  return Remote.class.isAssignableFrom (representationClass);\n }\n \n /*************************************************************************/\n@@ -852,12 +860,11 @@ public Object clone () throws CloneNotSupportedException\n public String\n toString()\n {\n-  return(\"DataFlavor[representationClass=\"\n-         + representationClass.getName()\n-         + \",mimeType=\"\n-         + mimeType\n-         + \"humanPresentableName=\"\n-         + humanPresentableName);\n+  return(getClass().getName()\n+\t + \"[representationClass=\" + getRepresentationClass().getName()\n+         + \",mimeType=\" + getMimeType()\n+         + \",humanPresentableName=\" + getHumanPresentableName()\n+\t + \"]\");\n }\n \n /*************************************************************************/"}, {"sha": "d1d22d218661900b88f5ab97d5cab0b36d869a27", "filename": "libjava/classpath/java/awt/event/MouseWheelEvent.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Fawt%2Fevent%2FMouseWheelEvent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Fawt%2Fevent%2FMouseWheelEvent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Fawt%2Fevent%2FMouseWheelEvent.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -49,7 +49,7 @@\n /**\n  * This event is generated for a mouse wheel rotation. The wheel (the middle\n  * mouse button on most modern mice) can be rotated towards or away from the\n- * user, and is ofteh used for scrolling.\n+ * user, and is often used for scrolling.\n  *\n  * <p>Because of the special use for scrolling components, MouseWheelEvents\n  * often affect a different component than the one located at the point of"}, {"sha": "194d483d9626a331720702bc42f894e17ed52c46", "filename": "libjava/classpath/java/awt/image/AreaAveragingScaleFilter.java", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Fawt%2Fimage%2FAreaAveragingScaleFilter.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Fawt%2Fimage%2FAreaAveragingScaleFilter.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Fawt%2Fimage%2FAreaAveragingScaleFilter.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -80,6 +80,7 @@ public AreaAveragingScaleFilter(int width, int height) {\n      */\n     public void setHints(int flags)\n     {\n+      if (consumer != null)\n \tconsumer.setHints(flags);\n     }\n \n@@ -100,6 +101,7 @@ public void setHints(int flags)\n     public void setPixels(int x, int y, int w, int h, \n \t   ColorModel model, byte[] pixels, int offset, int scansize)\n     {\n+      if (consumer != null)\n \tconsumer.setPixels(x, y, w, h, model, pixels, offset, scansize);\n     }\n \n@@ -120,6 +122,7 @@ public void setPixels(int x, int y, int w, int h,\n     public void setPixels(int x, int y, int w, int h, \n            ColorModel model, int[] pixels, int offset, int scansize)\n     {\n+      if (consumer != null)\n \tconsumer.setPixels(x, y, w, h, model, pixels, offset, scansize);\n     }\n "}, {"sha": "49ca2a6ea775cdd4ac978a3737a1428682f80e15", "filename": "libjava/classpath/java/awt/image/ConvolveOp.java", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Fawt%2Fimage%2FConvolveOp.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Fawt%2Fimage%2FConvolveOp.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Fawt%2Fimage%2FConvolveOp.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -1,5 +1,5 @@\n /* ConvolveOp.java --\n-   Copyright (C) 2004 Free Software Foundation -- ConvolveOp\n+   Copyright (C) 2004, 2005 Free Software Foundation -- ConvolveOp\n \n This file is part of GNU Classpath.\n \n@@ -177,20 +177,20 @@ public int getEdgeCondition()\n   }\n   \n   /**\n+   * Returns (a clone of) the convolution kernel.\n+   *\n    * @return The convolution kernel.\n    */\n   public Kernel getKernel()\n   {\n-    return kernel;\n+    return (Kernel) kernel.clone();\n   }\n \n   /* (non-Javadoc)\n    * @see java.awt.image.RasterOp#filter(java.awt.image.Raster,\n    * java.awt.image.WritableRaster)\n    */\n   public WritableRaster filter(Raster src, WritableRaster dest) {\n-    if (src.numBands != dest.numBands)\n-      throw new ImagingOpException(null);\n     if (src == dest)\n       throw new IllegalArgumentException();\n     if (src.getWidth() < kernel.getWidth() ||\n@@ -199,6 +199,8 @@ public WritableRaster filter(Raster src, WritableRaster dest) {\n     \n     if (dest == null)\n       dest = createCompatibleDestRaster(src);\n+    else if (src.numBands != dest.numBands)\n+      throw new ImagingOpException(null);\n \n     // Deal with bottom edge\n     if (edge == EDGE_ZERO_FILL)"}, {"sha": "4fcfdec4475a712834d0ab44eef4bd8c0acc3c64", "filename": "libjava/classpath/java/awt/image/CropImageFilter.java", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Fawt%2Fimage%2FCropImageFilter.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Fawt%2Fimage%2FCropImageFilter.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Fawt%2Fimage%2FCropImageFilter.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -79,6 +79,7 @@ public CropImageFilter(int x, int y, int width, int height) {\n      */\n     public void setDimensions(int width, int height)\n     {\n+      if (consumer != null)\n \tconsumer.setDimensions(this.width, this.height);\n     }\n \n@@ -93,7 +94,8 @@ public void setDimensions(int width, int height)\n     public void setProperties(Hashtable props)\n     {\n   \tprops.put(\"filters\", \"CropImageFilter\");\n-\tconsumer.setProperties(props);\n+\tif (consumer != null)\n+\t  consumer.setProperties(props);\n     }\n \n     /**\n@@ -130,9 +132,10 @@ public void setPixels(int x, int y, int w, int h,\n \t\t    cropped[i * bounds.width + j] = pixels[start + bounds.x + j];\n \t    }\n \t    \n-\t    consumer.setPixels(bounds.x, bounds.y,\n-\t                       bounds.width, bounds.height,\n-\t                       model, cropped, 0, bounds.width);\n+\t    if (consumer != null)\n+\t      consumer.setPixels(0, 0,\n+\t\t\t\t bounds.width, bounds.height,\n+\t\t\t\t model, cropped, 0, bounds.width);\n \t}\n     }\n \n@@ -170,9 +173,10 @@ public void setPixels(int x, int y, int w, int h,\n \t\t    cropped[i * bounds.width + j] = pixels[start + bounds.x + j];\n \t    }\n \t    \n-\t    consumer.setPixels(bounds.x, bounds.y,\n-\t                       bounds.width, bounds.height,\n-\t                       model, cropped, 0, bounds.width);\n+\t    if (consumer != null)\n+\t      consumer.setPixels(0, 0,\n+\t\t\t\t bounds.width, bounds.height,\n+\t\t\t\t model, cropped, 0, bounds.width);\n \t}\n     }\n "}, {"sha": "4f3715178181058abff7a89059cd1e043f52f09e", "filename": "libjava/classpath/java/awt/image/DirectColorModel.java", "status": "modified", "additions": 17, "deletions": 1, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Fawt%2Fimage%2FDirectColorModel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Fawt%2Fimage%2FDirectColorModel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Fawt%2Fimage%2FDirectColorModel.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -348,9 +348,24 @@ public final int[] getComponents(Object pixel, int[] components,\n   {\n     return getComponents(getPixelFromArray(pixel), components, offset);\n   }\n-  \n+\n+  /**\n+   * Creates a <code>WriteableRaster</code> that has a <code>SampleModel</code>\n+   * that is compatible with this <code>ColorModel</code>.\n+   *\n+   * @param w the width of the writeable raster to create\n+   * @param h the height of the writeable raster to create\n+   *\n+   * @throws IllegalArgumentException if <code>w</code> or <code>h</code>\n+   *         is less than or equal to zero\n+   */\n   public final WritableRaster createCompatibleWritableRaster(int w, int h)\n   {\n+    // Sun also makes this check here.\n+    if(w <= 0 || h <= 0)\n+      throw new IllegalArgumentException(\"width (=\" + w + \") and height (=\"\n+                                         + h + \") must be > 0\");\n+\n     SampleModel sm = createCompatibleSampleModel(w, h);\n     Point origin = new Point(0, 0);\n     return Raster.createWritableRaster(sm, origin);\t\n@@ -418,3 +433,4 @@ public String toString()\n     return super.toString();\n   }\n }\n+"}, {"sha": "c39c4a428f9bbfea2bfd82c9431bac2ccdba7754", "filename": "libjava/classpath/java/awt/image/ImageFilter.java", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Fawt%2Fimage%2FImageFilter.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Fawt%2Fimage%2FImageFilter.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Fawt%2Fimage%2FImageFilter.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -125,6 +125,7 @@ public ImageFilter getFilterInstance(ImageConsumer ic)\n      */\n     public void setDimensions(int width, int height)\n     {\n+      if (consumer != null)\n \tconsumer.setDimensions(width, height);\n     }\n \n@@ -137,7 +138,8 @@ public void setDimensions(int width, int height)\n     public void setProperties(Hashtable props)\n     {\n \tprops.put(\"filters\", \"ImageFilter\");\n-\tconsumer.setProperties(props);\n+\tif (consumer != null)\n+\t  consumer.setProperties(props);\n     }\n \n     /**\n@@ -149,6 +151,7 @@ public void setProperties(Hashtable props)\n      * @see ColorModel */\n     public void setColorModel(ColorModel model)\n     {\n+      if (consumer != null)\n \tconsumer.setColorModel(model);\n     }\n \n@@ -164,6 +167,7 @@ public void setColorModel(ColorModel model)\n      */\n     public void setHints(int flags)\n     {\n+      if (consumer != null)\n \tconsumer.setHints(flags);\n     }\n \n@@ -184,6 +188,7 @@ public void setHints(int flags)\n     public void setPixels(int x, int y, int w, int h, \n \t   ColorModel model, byte[] pixels, int offset, int scansize)\n     {\n+      if (consumer != null)\n \tconsumer.setPixels(x, y, w, h, model, pixels, offset, scansize);\n     }\n \n@@ -204,6 +209,7 @@ public void setPixels(int x, int y, int w, int h,\n     public void setPixels(int x, int y, int w, int h, \n            ColorModel model, int[] pixels, int offset, int scansize)\n     {\n+      if (consumer != null)\n \tconsumer.setPixels(x, y, w, h, model, pixels, offset, scansize);\n     }\n \n@@ -215,6 +221,7 @@ public void setPixels(int x, int y, int w, int h,\n      */\n     public void imageComplete(int status)\n     {\n+      if (consumer != null)\n \tconsumer.imageComplete(status);\n     }\n }"}, {"sha": "b8ca70c3379be8c2b048760fd754b3563fbd14c4", "filename": "libjava/classpath/java/awt/image/PixelGrabber.java", "status": "modified", "additions": 18, "deletions": 2, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Fawt%2Fimage%2FPixelGrabber.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Fawt%2Fimage%2FPixelGrabber.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Fawt%2Fimage%2FPixelGrabber.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -131,6 +131,9 @@ public PixelGrabber(Image img, int x, int y, int w, int h,\n   public PixelGrabber(ImageProducer ip, int x, int y, int w, int h,\n \t\t      int pix[], int off, int scansize)\n   {\n+    if (ip == null)\n+      throw new NullPointerException(\"The ImageProducer must not be null.\");\n+\n     this.ip = ip;\n     this.x = x;\n     this.y = y;\n@@ -179,6 +182,10 @@ public PixelGrabber(Image img,\n \t\t      boolean forceRGB)\n   {\n     this.ip = img.getSource();\n+\n+    if (this.ip == null)\n+      throw new NullPointerException(\"The ImageProducer must not be null.\");\n+\n     this.x = x;\n     this.y = y;\n     width = w;\n@@ -209,7 +216,15 @@ public synchronized void startGrabbing()\n \t  {\n \t    public void run ()\n \t    {\n-\t      ip.startProduction (PixelGrabber.this);\n+              try\n+                {\n+                  ip.startProduction (PixelGrabber.this);\n+                }\n+              catch (Exception ex)\n+                {\n+                  ex.printStackTrace();\n+                  imageComplete(ImageConsumer.IMAGEABORTED);\n+                }\n \t    }\n \t  };\n \tgrabberThread.start ();\n@@ -601,7 +616,8 @@ public synchronized void imageComplete(int status)\n     consumerStatus = status;\n     setObserverStatus ();\n     grabbing = false;\n-    ip.removeConsumer (this);\n+    if (ip != null)\n+      ip.removeConsumer (this);\n \n     notifyAll ();\n   }"}, {"sha": "ecfed0674f1669fa05bd2f88aeca46be42e065a6", "filename": "libjava/classpath/java/awt/image/RGBImageFilter.java", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Fawt%2Fimage%2FRGBImageFilter.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Fawt%2Fimage%2FRGBImageFilter.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Fawt%2Fimage%2FRGBImageFilter.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -79,10 +79,12 @@ public void setColorModel(ColorModel model)\n \n \tif( ( model instanceof IndexColorModel) && canFilterIndexColorModel  ) {\n \t\tnewmodel = filterIndexColorModel( (IndexColorModel) model );\n-\t\tconsumer.setColorModel(newmodel);\n+\t\tif (consumer != null)\n+\t\t  consumer.setColorModel(newmodel);\n \t    }\n \telse {\n-\t\tconsumer.setColorModel(ColorModel.getRGBdefault());\n+\t  if (consumer != null)\n+\t    consumer.setColorModel(ColorModel.getRGBdefault());\n \t}\n     }\n     \n@@ -178,14 +180,16 @@ public void setPixels(int x, int y, int w, int h,\n     {\n \tif(model == origmodel && (model instanceof IndexColorModel) && canFilterIndexColorModel)\n \t{\n+\t  if (consumer != null)\n \t    consumer.setPixels(x, y, w, h, newmodel, pixels, offset, scansize);\n \t}\n \telse\n \t{\n \t    int intPixels[] =\n \t\tconvertColorModelToDefault( x, y, w, h, model, pixels, offset, scansize );\n \t    filterRGBPixels( x, y, w, h, intPixels, offset, scansize );\n-\t    consumer.setPixels(x, y, w, h, ColorModel.getRGBdefault(), intPixels, offset, scansize);\n+\t    if (consumer != null)\n+\t      consumer.setPixels(x, y, w, h, ColorModel.getRGBdefault(), intPixels, offset, scansize);\n \t}\n     }\n \n@@ -209,14 +213,16 @@ public void setPixels(int x, int y, int w, int h,\n     {\n \tif(model == origmodel && (model instanceof IndexColorModel) && canFilterIndexColorModel)\n \t{\n+\t  if (consumer != null)\n \t    consumer.setPixels(x, y, w, h, newmodel, pixels, offset, scansize);\n \t}\n \telse\n \t{\n \t    //FIXME: Store the filtered pixels in a separate temporary buffer?\n \t  convertColorModelToDefault( x, y, w, h, model, pixels, offset, scansize );\n \t  filterRGBPixels( x, y, w, h, pixels, offset, scansize );\n-\t  consumer.setPixels(x, y, w, h, ColorModel.getRGBdefault(), pixels, offset, scansize);\n+\t  if (consumer != null)\n+\t    consumer.setPixels(x, y, w, h, ColorModel.getRGBdefault(), pixels, offset, scansize);\n \t}\n     }\n "}, {"sha": "d76f9db4b5ee255c0d149d2004f65cf096763c68", "filename": "libjava/classpath/java/awt/image/ReplicateScaleFilter.java", "status": "modified", "additions": 12, "deletions": 8, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Fawt%2Fimage%2FReplicateScaleFilter.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Fawt%2Fimage%2FReplicateScaleFilter.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Fawt%2Fimage%2FReplicateScaleFilter.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -124,7 +124,8 @@ else if (destHeight < 0)\n \t    destHeight = (int) (height * ((double) destWidth / srcWidth));\n \t}\n \n-\tconsumer.setDimensions(destWidth, destHeight);\n+\tif (consumer != null)\n+\t  consumer.setDimensions(destWidth, destHeight);\n     }\n \n     /**\n@@ -136,7 +137,8 @@ else if (destHeight < 0)\n     public void setProperties(Hashtable props)\n     {\n \tprops.put(\"filters\", \"ReplicateScaleFilter\");\n-\tconsumer.setProperties(props);\n+\tif (consumer != null)\n+\t  consumer.setProperties(props);\n     }\n \n     /**\n@@ -165,9 +167,10 @@ public void setPixels(int x, int y, int w, int h,\n                                            model, pixels, offset, scansize,\n \t                                   rx, ry, destScansize);\n \n-\tconsumer.setPixels((int) Math.floor(x/rx), (int) Math.floor(y/ry),\n-                           (int) Math.ceil(w/rx), (int) Math.ceil(h/ry),\n-                           model, destPixels, 0, destScansize);\n+\tif (consumer != null)\n+\t  consumer.setPixels((int) Math.floor(x/rx), (int) Math.floor(y/ry),\n+\t\t\t     (int) Math.ceil(w/rx), (int) Math.ceil(h/ry),\n+\t\t\t     model, destPixels, 0, destScansize);\n     }\n \n     /**\n@@ -196,9 +199,10 @@ public void setPixels(int x, int y, int w, int h,\n                                            model, pixels, offset, scansize,\n \t                                   rx, ry, destScansize);\n \n-\tconsumer.setPixels((int) Math.floor(x/rx), (int) Math.floor(y/ry),\n-                           (int) Math.ceil(w/rx), (int) Math.ceil(h/ry),\n-                           model, destPixels, 0, destScansize);\n+\tif (consumer != null)\n+\t  consumer.setPixels((int) Math.floor(x/rx), (int) Math.floor(y/ry),\n+\t\t\t     (int) Math.ceil(w/rx), (int) Math.ceil(h/ry),\n+\t\t\t     model, destPixels, 0, destScansize);\n     }\n \n     private byte[] replicatePixels(int srcx, int srcy, int srcw, int srch,"}, {"sha": "1ba1692322441e5fad34ba583b4d29579cc3f21a", "filename": "libjava/classpath/java/awt/peer/ComponentPeer.java", "status": "modified", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Fawt%2Fpeer%2FComponentPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Fawt%2Fpeer%2FComponentPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Fawt%2Fpeer%2FComponentPeer.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -51,6 +51,7 @@\n import java.awt.GraphicsConfiguration;\n import java.awt.Image;\n import java.awt.Point;\n+import java.awt.Rectangle;\n import java.awt.Toolkit;\n import java.awt.event.PaintEvent;\n import java.awt.image.ColorModel;\n@@ -184,4 +185,48 @@ void createBuffers(int numBuffers, BufferCapabilities caps)\n    * @since 1.2\n    */\n   void destroyBuffers();\n+  \n+  /**\n+   * Get the bounds of this component peer.\n+   * \n+   * @return component peer bounds\n+   * @since 1.5\n+   */\n+  Rectangle getBounds();\n+\n+  /**\n+   * Reparent this component under another container.\n+   * \n+   * @param parent\n+   * @since 1.5\n+   */\n+  void reparent(ContainerPeer parent);\n+  \n+  /**\n+   * Set the bounds of this component peer.\n+   * \n+   * @param x the new x co-ordinate\n+   * @param y the new y co-ordinate\n+   * @param width the new width\n+   * @param height the new height\n+   * @param z the new stacking level\n+   * @since 1.5\n+   */\n+  void setBounds (int x, int y, int width, int height, int z);\n+  \n+  /**\n+   * Check if this component supports being reparented.\n+   * \n+   * @return true if this component can be reparented,\n+   * false otherwise.\n+   * @since 1.5\n+   */\n+  boolean isReparentSupported();\n+\n+  /**\n+   * Layout this component peer.\n+   *\n+   * @since 1.5\n+   */\n+  void layout();\n }"}, {"sha": "76673a1dfec051abce7b38f2978969fab17240dd", "filename": "libjava/classpath/java/awt/peer/ContainerPeer.java", "status": "modified", "additions": 26, "deletions": 1, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Fawt%2Fpeer%2FContainerPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Fawt%2Fpeer%2FContainerPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Fawt%2Fpeer%2FContainerPeer.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -54,6 +54,31 @@ public interface ContainerPeer extends ComponentPeer\n   void endLayout();\n \n   boolean isPaintPending();\n-\n+  \n+  /**\n+   * Check if this container peer can be restacked.\n+   * \n+   * @return true if this container peer supports being restacked, false otherwise\n+   * @since 1.5\n+   */\n+  boolean isRestackSupported();\n+\n+  /**\n+   * Cancel a pending paint event on a region of this container.\n+   * \n+   * @param x the x co-ordinate of the region\n+   * @param y the y co-ordinate of the region\n+   * @param width the width of the region\n+   * @param height the height of the region\n+   * @since 1.5\n+   */\n+  void cancelPendingPaint(int x, int y, int width, int height);\n+  \n+  /**\n+   * Restack the component peers in this container peer.\n+   * \n+   * @since 1.5\n+   */\n+  void restack();\n } // interface ContainerPeer \n "}, {"sha": "13435f8e4c5a182fb971aaf85d9cc3f0a456fe52", "filename": "libjava/classpath/java/awt/peer/FramePeer.java", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Fawt%2Fpeer%2FFramePeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Fawt%2Fpeer%2FFramePeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Fawt%2Fpeer%2FFramePeer.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -51,5 +51,25 @@ public interface FramePeer extends WindowPeer\n   int getState();\n   void setState(int state);\n   void setMaximizedBounds(Rectangle r);\n+  \n+  /**\n+   * Check if this frame peer supports being restacked.\n+   * \n+   * @return true if this frame peer can be restacked,\n+   * false otherwise\n+   * @since 1.5\n+   */\n+  boolean isRestackSupported();\n+  \n+  /**\n+   * Sets the bounds of this frame peer.\n+   * \n+   * @param x the new x co-ordinate\n+   * @param y the new y co-ordinate\n+   * @param width the new width\n+   * @param height the new height\n+   * @since 1.5\n+   */\n+  void setBoundsPrivate(int x, int y, int width, int height);\n } // interface FramePeer\n "}, {"sha": "44e37e2d43b42e57e8712a4933a5b2b489e7414e", "filename": "libjava/classpath/java/awt/peer/MenuBarPeer.java", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Fawt%2Fpeer%2FMenuBarPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Fawt%2Fpeer%2FMenuBarPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Fawt%2Fpeer%2FMenuBarPeer.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -42,6 +42,7 @@\n \n public interface MenuBarPeer extends MenuComponentPeer\n {\n+  void addMenu(Menu m);\n   void addHelpMenu(Menu menu);\n   void delMenu(int index);\n } // interface MenuBarPeer "}, {"sha": "bfd3414ece0b3ce965731847391a7a14b417d026", "filename": "libjava/classpath/java/awt/peer/MenuComponentPeer.java", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Fawt%2Fpeer%2FMenuComponentPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Fawt%2Fpeer%2FMenuComponentPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Fawt%2Fpeer%2FMenuComponentPeer.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -38,8 +38,18 @@\n \n package java.awt.peer;\n \n+import java.awt.Font;\n+\n public interface MenuComponentPeer\n {\n   void dispose();\n+  \n+  /**\n+   * Set the font on this menu component peer.\n+   * \n+   * @param font the new font\n+   * @since 1.5\n+   */\n+  void setFont (Font font);\n } // interface MenuComponentPeer\n "}, {"sha": "91d0f0d117676138228142441d368af91678c4e9", "filename": "libjava/classpath/java/awt/peer/MenuPeer.java", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Fawt%2Fpeer%2FMenuPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Fawt%2Fpeer%2FMenuPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Fawt%2Fpeer%2FMenuPeer.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -43,6 +43,7 @@\n public interface MenuPeer extends MenuItemPeer\n {\n   void addItem (MenuItem item);\n+  void addSeparator ();\n   void delItem (int index);\n }\n "}, {"sha": "f807299746218672f46d8be22d98574ea6d4f48e", "filename": "libjava/classpath/java/awt/peer/TextComponentPeer.java", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Fawt%2Fpeer%2FTextComponentPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Fawt%2Fpeer%2FTextComponentPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Fawt%2Fpeer%2FTextComponentPeer.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -39,6 +39,7 @@\n package java.awt.peer;\n \n import java.awt.Rectangle;\n+import java.awt.im.InputMethodRequests;\n \n public interface TextComponentPeer extends ComponentPeer\n {\n@@ -53,5 +54,13 @@ public interface TextComponentPeer extends ComponentPeer\n   int getIndexAtPoint(int x, int y);\n   Rectangle getCharacterBounds(int pos);\n   long filterEvents(long filter);\n+  \n+  /**\n+   * Retrieve this text component peer's input method requests.\n+   * \n+   * @return the input method requests made by this text component peer\n+   * @since 1.5\n+   */\n+  InputMethodRequests getInputMethodRequests();\n } // interface TextComponentPeer \n "}, {"sha": "6c014de0b99d66a7d5b17aef2bdd06dd1b76e05a", "filename": "libjava/classpath/java/awt/peer/WindowPeer.java", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Fawt%2Fpeer%2FWindowPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Fawt%2Fpeer%2FWindowPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Fawt%2Fpeer%2FWindowPeer.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -42,5 +42,19 @@ public interface WindowPeer extends ContainerPeer\n {\n   void toBack();\n   void toFront();\n+  \n+  /**\n+   * FIXME: unknown.\n+   * @since 1.5\n+   */\n+  void updateAlwaysOnTop();\n+  \n+  /**\n+   * Request that this window peer be given the window focus.\n+   * \n+   * @return true if the window received focus, false otherwise\n+   * @since 1.5\n+   */\n+  boolean requestWindowFocus();\n } // interface WindowPeer \n "}, {"sha": "d92cb7284aabb077b7e448c6022c20e55bc64500", "filename": "libjava/classpath/java/beans/Expression.java", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Fbeans%2FExpression.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Fbeans%2FExpression.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Fbeans%2FExpression.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -1,5 +1,5 @@\n /* java.beans.Expression\n-   Copyright (C) 2004 Free Software Foundation, Inc.\n+   Copyright (C) 2004, 2005 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -51,7 +51,7 @@ public class Expression extends Statement\n {\n   // This is a placeholder to indicate that value hasn't been set\n   // yet;\n-  private static final Object unset = new Object();\n+  private static final Object UNSET = new Object();\n \n   // The value to return.  This is equal to unset until getValue is called.\n   private Object value;\n@@ -89,7 +89,7 @@ public Expression(Object value, Object target, String methodName,\n   public Expression(Object target, String methodName, Object[] arguments)\n   {\n     super(target, methodName, arguments);\n-    this.value = unset;\n+    this.value = UNSET;\n   }\n \n   /**\n@@ -105,7 +105,7 @@ public Expression(Object target, String methodName, Object[] arguments)\n    */\n   public Object getValue() throws Exception\n   {\n-    if (value == unset)\n+    if (value == UNSET)\n       value = doExecute();\n     return value;\n   }\n@@ -126,7 +126,7 @@ public void setValue(Object value)\n   public String toString()\n   {\n     String result = super.toString();\n-    if (value != unset)\n+    if (value != UNSET)\n       return value.getClass().getName() + \" \" + result;\n     return result;\n   }"}, {"sha": "8e916a286bee3f8da7419874b517fe234f7d8155", "filename": "libjava/classpath/java/beans/Statement.java", "status": "modified", "additions": 65, "deletions": 18, "changes": 83, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Fbeans%2FStatement.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Fbeans%2FStatement.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Fbeans%2FStatement.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -1,5 +1,5 @@\n /* java.beans.Statement\n-   Copyright (C) 2004 Free Software Foundation, Inc.\n+   Copyright (C) 2004, 2005 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -42,6 +42,9 @@\n import java.lang.reflect.Constructor;\n import java.lang.reflect.Method;\n \n+import java.util.HashMap;\n+import java.util.WeakHashMap;\n+\n /**\n  * class Statement\n  *\n@@ -54,6 +57,11 @@\n  */\n public class Statement\n {\n+  /** Nested map for the relation between a class, its instances and their\n+    * names.\n+    */\n+  private static HashMap classMaps = new HashMap();\n+\n   private Object target;\n   private String methodName;\n   private Object[] arguments;\n@@ -64,8 +72,11 @@\n   private transient Constructor ctor;\n \n   /**\n-   * Constructs a statement representing the invocation of\n-   * object.methodName(arg[0], arg[1], ...);\n+   * <p>Constructs a statement representing the invocation of\n+   * object.methodName(arg[0], arg[1], ...);</p>\n+   *\n+   * <p>If the argument array is null it is replaced with an\n+   * array of zero length.</p>\n    *\n    * @param target The object to invoke the method on.\n    * @param methodName The object method to invoke.\n@@ -75,7 +86,41 @@ public Statement(Object target, String methodName, Object[] arguments)\n   {\n     this.target = target;\n     this.methodName = methodName;\n-    this.arguments = arguments;\n+    this.arguments = (arguments != null) ? arguments : new Object[0];\n+    storeTargetName(target);\n+  }\n+\n+  /** Creates a name for the target instance or does nothing if the object's\n+   * name is already known. This makes sure that there *is* a name for every\n+   * target instance.\n+   */\n+  private static synchronized void storeTargetName(Object obj)\n+  {\n+    Class klass = obj.getClass();\n+    WeakHashMap names = (WeakHashMap) classMaps.get(klass);\n+\n+    if ( names == null )\n+    {\n+      names = new WeakHashMap();\n+\n+      names.put(obj,\n+        ( klass == String.class ? (\"\\\"\" + obj + \"\\\"\") :\n+        (klass.getName() + names.size()) ));\n+\n+      classMaps.put(klass, names);\n+\n+      return;\n+    }\n+\n+    String targetName = (String) names.get(obj);\n+    if ( targetName == null )\n+    {\n+      names.put(obj,\n+        ( klass == String.class ? (\"\\\"\" + obj + \"\\\"\") :\n+        (klass.getName() + names.size()) ));\n+    }\n+\n+    // Nothing to do. The given object was already stored.\n   }\n \n   /**\n@@ -234,15 +279,7 @@ else if (ctor != null)\n \t  {\n \t    // Skip methods with wrong number of args.\n \t    Class ptypes[] = ctors[i].getParameterTypes();\n-\t    System.out.println(\"ptypeslen = \" + ptypes.length);\n-\t    System.out.println(\"ptypes = \" + ptypes);\n-\t    System.out.println(\"ctor = \" + ctors[i].getName());\n-\t    for (int j=0; j < ptypes.length; j++) {\n-\t      System.out.println(\"param = \" + ptypes[i].getName());\n-     \n-\t    }\n-\t      \n-\t    \n+\n \t    if (ptypes.length != args.length)\n \t      continue;\n \n@@ -313,14 +350,24 @@ else if (ctor != null)\n   /** Return a string representation. */\n   public String toString()\n   {\n-    String result = target.getClass().getName() + \".\" + methodName + \"(\";\n+    StringBuffer result = new StringBuffer(); \n+\n+    Class klass = target.getClass();\n+\n+    result.append( ((WeakHashMap) classMaps.get(klass)).get(target));\n+    result.append(\".\");\n+    result.append(methodName);\n+    result.append(\"(\");\n+\n     String sep = \"\";\n     for (int i = 0; i < arguments.length; i++)\n       {\n-\tresult = result + sep + arguments[i].getClass().getName();\n-\tsep = \", \";\n+        result.append(sep);\n+        result.append(arguments[i].getClass().getName());\n+        sep = \", \";\n       }\n-    result = result + \")\";\n-    return result;\n+    result.append(\")\");\n+\n+    return result.toString();\n   }\n }"}, {"sha": "54d5eeafaddd7f61526313428c62506f880221b4", "filename": "libjava/classpath/java/io/ObjectInputStream.java", "status": "modified", "additions": 44, "deletions": 62, "changes": 106, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Fio%2FObjectInputStream.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Fio%2FObjectInputStream.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Fio%2FObjectInputStream.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -501,8 +501,7 @@ protected ObjectStreamClass readClassDescriptor()\n \t\t\t\t\t\t  flags, fields);\n     assignNewHandle(osc);\n \n-    if (callersClassLoader == null)\n-      callersClassLoader = currentLoader();\n+    ClassLoader callersClassLoader = currentLoader();\n \t      \n     for (int i = 0; i < field_count; i++)\n       {\n@@ -528,36 +527,7 @@ protected ObjectStreamClass readClassDescriptor()\n \t      \n     /* Now that fields have been read we may resolve the class\n      * (and read annotation if needed). */\n-    Class clazz;\n-    try\n-      {\n-\tclazz = resolveClass(osc);\n-      }\n-    catch (ClassNotFoundException cnfe)\n-      {\n-\t// Maybe it was an primitive class?\n-\tif (name.equals(\"void\"))\n-\t  clazz = Void.TYPE;\n-\telse if (name.equals(\"boolean\"))\n-\t  clazz = Boolean.TYPE;\n-\telse if (name.equals(\"byte\"))\n-\t  clazz = Byte.TYPE;\n-\telse if (name.equals(\"short\"))\n-\t  clazz = Short.TYPE;\n-\telse if (name.equals(\"char\"))\n-\t  clazz = Character.TYPE;\n-\telse if (name.equals(\"int\"))\n-\t  clazz = Integer.TYPE;\n-\telse if (name.equals(\"long\"))\n-\t  clazz = Long.TYPE;\n-\telse if (name.equals(\"float\"))\n-\t  clazz = Float.TYPE;\n-\telse if (name.equals(\"double\"))\n-\t  clazz = Double.TYPE;\n-\telse\n-\t  throw cnfe;\n-      }\n-\n+    Class clazz = resolveClass(osc);\n     boolean oldmode = setBlockDataMode(true);\n     osc.setClass(clazz, lookupClass(clazz.getSuperclass()));\n     classLookupTable.put(clazz, osc);\n@@ -770,16 +740,34 @@ public void registerValidation(ObjectInputValidation validator,\n   protected Class resolveClass(ObjectStreamClass osc)\n     throws ClassNotFoundException, IOException\n   {\n-    if (callersClassLoader == null)\n+    String name = osc.getName();\n+    try\n       {\n-\tcallersClassLoader = currentLoader ();\n-\tif (DEBUG && dump)\n-\t  {\n-\t    dumpElementln (\"CallersClassLoader = \" + callersClassLoader);\n-\t  }\n+        return Class.forName(name, true, currentLoader());\n+      }\n+    catch(ClassNotFoundException x)\n+      {\n+        if (name.equals(\"void\"))\n+          return Void.TYPE;\n+        else if (name.equals(\"boolean\"))\n+          return Boolean.TYPE;\n+        else if (name.equals(\"byte\"))\n+          return Byte.TYPE;\n+        else if (name.equals(\"char\"))\n+          return Character.TYPE;\n+        else if (name.equals(\"short\"))\n+          return Short.TYPE;\n+        else if (name.equals(\"int\"))\n+          return Integer.TYPE;\n+        else if (name.equals(\"long\"))\n+          return Long.TYPE;\n+        else if (name.equals(\"float\"))\n+          return Float.TYPE;\n+        else if (name.equals(\"double\"))\n+          return Double.TYPE;\n+        else\n+          throw x;\n       }\n-\n-    return Class.forName(osc.getName(), true, callersClassLoader);\n   }\n \n   /**\n@@ -957,19 +945,13 @@ public int read(byte[] data, int offset, int length) throws IOException\n   {\n     if (this.readDataFromBlock)\n       {\n-\tif (this.blockDataPosition + length > this.blockDataBytes)\n-\t  {\n-\t    int remain = this.blockDataBytes - this.blockDataPosition;\n-\t    if (remain != 0)\n-\t      {\n-\t\tSystem.arraycopy(this.blockData, this.blockDataPosition,\n-\t\t\t\t data, offset, remain);\n-\t\toffset += remain;\n-\t\tlength -= remain;\n-\t      }\n-\t    readNextBlock ();\n-\t  }\n-\n+        int remain = this.blockDataBytes - this.blockDataPosition;\n+        if (remain == 0)\n+          {\n+            readNextBlock();\n+            remain = this.blockDataBytes - this.blockDataPosition;\n+          }\n+        length = Math.min(length, remain);\n \tSystem.arraycopy(this.blockData, this.blockDataPosition,\n \t\t\t data, offset, length);\n \tthis.blockDataPosition += length;\n@@ -1281,7 +1263,7 @@ public boolean defaulted(String name)\n \t    }\n \t  catch (NoSuchFieldException e)\n \t    {\n-\t      throw new IllegalArgumentException(e.getMessage());\n+\t      throw new IllegalArgumentException(e);\n \t    }\n \t}\n \n@@ -1426,6 +1408,7 @@ private ObjectStreamField getField(String name, Class type)\n \t  ObjectStreamField field = clazz.getField(name);\n \t  boolean illegal = false;\n \n+          // XXX This code is horrible and needs to be rewritten!\n \t  try\n \t    {\n \t      try\n@@ -1485,7 +1468,7 @@ private ObjectStreamField getField(String name, Class type)\n \t      catch (NoSuchFieldException e)\n \t\t{\n \t\t  if (field == null)\n-\t\t    throw new IllegalArgumentException(e.getMessage());\n+\t\t    throw new IllegalArgumentException(e);\n \t\t}\n \t       \n \t    }\n@@ -1829,8 +1812,8 @@ private Object newObject (Class real_class, Constructor constructor)\n       }\n     catch (InstantiationException e)\n       {\n-        throw new ClassNotFoundException\n-\t\t(\"Instance of \" + real_class + \" could not be created\");\n+        throw (ClassNotFoundException) new ClassNotFoundException\n+          (\"Instance of \" + real_class + \" could not be created\").initCause(e);\n       }\n   }\n \n@@ -1871,13 +1854,13 @@ private void callReadMethod (Method readObject, Class klass, Object obj)\n         if (exception instanceof ClassNotFoundException)\n           throw (ClassNotFoundException) exception;\n \n-\tthrow new IOException(\"Exception thrown from readObject() on \" +\n-\t\t\t       klass + \": \" + exception.getClass().getName());\n+\tthrow (IOException) new IOException(\n+\t  \"Exception thrown from readObject() on \" + klass).initCause(x);\n       }\n     catch (Exception x)\n       {\n-\tthrow new IOException(\"Failure invoking readObject() on \" +\n-\t\t\t       klass + \": \" + x.getClass().getName());\n+\tthrow (IOException) new IOException(\n+\t  \"Failure invoking readObject() on \" + klass).initCause(x);\n       }\n \n     // Invalidate fields which has been read through readFields.\n@@ -1905,7 +1888,6 @@ private void callReadMethod (Method readObject, Class klass, Object obj)\n   private Hashtable classLookupTable;\n   private GetField prereadFields;\n \n-  private ClassLoader callersClassLoader;\n   private static boolean dump;\n \n   // The nesting depth for debugging output"}, {"sha": "1e4f219a15f1a7fe56829f766b688864b423f06c", "filename": "libjava/classpath/java/lang/Character.java", "status": "modified", "additions": 165, "deletions": 0, "changes": 165, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Flang%2FCharacter.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Flang%2FCharacter.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Flang%2FCharacter.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -1456,6 +1456,57 @@ else if (ch > b.end)\n    */\n   private static final int MIRROR_MASK = 0x40;\n \n+  /**\n+   * Min value for supplementary code point.\n+   *\n+   * @since 1.5\n+   */\n+  public static final int MIN_SUPPLEMENTARY_CODE_POINT = 0x10000;\n+\n+  /**\n+   * Min value for code point.\n+   *\n+   * @since 1.5\n+   */\n+  public static final int MIN_CODE_POINT = 0; \n+ \n+ \n+  /**\n+   * Max value for code point.\n+   *\n+   * @since 1.5\n+   */\n+  public static final int MAX_CODE_POINT = 0x010ffff;\n+\n+\n+  /**\n+   * Minimum high surrrogate code in UTF-16 encoding.\n+   *\n+   * @since 1.5\n+   */\n+  public static final char MIN_HIGH_SURROGATE = '\\ud800';\n+\n+  /**\n+   * Maximum high surrrogate code in UTF-16 encoding.\n+   *\n+   * @since 1.5\n+   */\n+  public static final char MAX_HIGH_SURROGATE = '\\udbff';\n+ \n+  /**\n+   * Minimum low surrrogate code in UTF-16 encoding.\n+   *\n+   * @since 1.5\n+   */\n+  public static final char MIN_LOW_SURROGATE = '\\udc00';\n+\n+  /**\n+   * Maximum low surrrogate code in UTF-16 encoding.\n+   *\n+   * @since 1.5\n+   */\n+  public static final char MAX_LOW_SURROGATE = '\\udfff';\n+\n   /**\n    * Grabs an attribute offset from the Unicode attribute database. The lower\n    * 5 bits are the character type, the next 2 bits are flags, and the top\n@@ -2250,4 +2301,118 @@ public int compareTo(Object o)\n   {\n     return compareTo((Character) o);\n   }\n+\n+  /**\n+   * Converts a unicode code point to a UTF-16 representation of that\n+   * code point.\n+   * \n+   * @param codePoint the unicode code point\n+   *\n+   * @return the UTF-16 representation of that code point\n+   *\n+   * @throws IllegalArgumentException if the code point is not a valid\n+   *         unicode code point\n+   *\n+   * @since 1.5\n+   */\n+  public static char[] toChars(int codePoint)\n+  {\n+    char[] result = new char[charCount(codePoint)];\n+    int ignore = toChars(codePoint, result, 0);\n+    return result;\n+  }\n+\n+  /**\n+   * Converts a unicode code point to its UTF-16 representation.\n+   *\n+   * @param codePoint the unicode code point\n+   * @param dst the target char array\n+   * @param dstIndex the start index for the target\n+   *\n+   * @return number of characters written to <code>dst</code>\n+   *\n+   * @throws IllegalArgumentException if <code>codePoint</code> is not a\n+   *         valid unicode code point\n+   * @throws NullPointerException if <code>dst</code> is <code>null</code>\n+   * @throws IndexOutOfBoundsException if <code>dstIndex</code> is not valid\n+   *         in <code>dst</code> or if the UTF-16 representation does not\n+   *         fit into <code>dst</code>\n+   *\n+   * @since 1.5\n+   */\n+  public static int toChars(int codePoint, char[] dst, int dstIndex)\n+  {\n+    if (!isValidCodePoint(codePoint))\n+      {\n+        throw new IllegalArgumentException(\"not a valid code point: \"\n+                                           + codePoint);\n+      }\n+\n+    int result;\n+    if (isSupplementaryCodePoint(codePoint))\n+      {\n+        // Write second char first to cause IndexOutOfBoundsException\n+        // immediately.\n+        dst[dstIndex + 1] = (char) ((codePoint & 0x3ff)\n+                                    + (int) MIN_LOW_SURROGATE );\n+        dst[dstIndex] = (char) ((codePoint >> 10) + (int) MIN_HIGH_SURROGATE);\n+        result = 2;\n+    }\n+    else\n+      {\n+        dst[dstIndex] = (char) codePoint;\n+        result = 1; \n+      }\n+    return result;\n+  }\n+\n+  /**\n+   * Return number of 16-bit characters required to represent the given\n+   * code point.\n+   *\n+   * @param codePoint a uncode code point\n+   *\n+   * @return 2 if codePoint >= 0x10000, 1 otherwise.\n+   *\n+   * @since 1.5\n+   */\n+  public static int charCount(int codePoint)\n+  {\n+    return \n+      (codePoint >= MIN_SUPPLEMENTARY_CODE_POINT) \n+      ? 2 \n+      : 1;\n+  }\n+\n+  /**\n+   * Determines whether the specified code point is\n+   * in the range 0x10000 .. 0x10FFFF, i.e. the character is within the Unicode\n+   * supplementary character range.\n+   *\n+   * @param codePoint a Unicode code point\n+   *\n+   * @return <code>true</code> if code point is in supplementary range\n+   *\n+   * @since 1.5\n+   */\n+  public static boolean isSupplementaryCodePoint(int codePoint)\n+  {\n+    return codePoint >= MIN_SUPPLEMENTARY_CODE_POINT\n+      && codePoint <= MAX_CODE_POINT;\n+  }\n+\n+  /**\n+   * Determines whether the specified code point is\n+   * in the range 0x0000 .. 0x10FFFF, i.e. it is a valid Unicode code point.\n+   *\n+   * @param codePoint a Unicode code point\n+   *\n+   * @return <code>true</code> if code point is valid\n+   *\n+   * @since 1.5\n+   */\n+  public static boolean isValidCodePoint(int codePoint)\n+  {\n+    return codePoint >= MIN_CODE_POINT && codePoint <= MAX_CODE_POINT;\n+  }\n } // class Character"}, {"sha": "22f148e9136e3d438cc411622661162f60f72cdd", "filename": "libjava/classpath/java/lang/Class.java", "status": "modified", "additions": 2, "deletions": 22, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Flang%2FClass.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Flang%2FClass.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Flang%2FClass.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -156,11 +156,7 @@ public final class Class implements Serializable\n    */\n   public static Class forName(String name) throws ClassNotFoundException\n   {\n-    Class result = VMClass.forName (name);\n-    if (result == null)\n-      result = Class.forName(name, true,\n-\tVMStackWalker.getCallingClassLoader());\n-    return result;\n+    return VMClass.forName(name, true, VMStackWalker.getCallingClassLoader());\n   }\n \n   /**\n@@ -205,24 +201,8 @@ public static Class forName(String name, boolean initialize,\n             if (cl != null)\n               sm.checkPermission(new RuntimePermission(\"getClassLoader\"));\n           }\n-\tif (name.startsWith(\"[\"))\n-\t  return VMClass.loadArrayClass(name, null);\n-\tClass c = VMClassLoader.loadClass(name, true);\n-\tif (c != null)\n-\t  {\n-\t    if (initialize)\n-\t      VMClass.initialize(c);\n-\t    return c;\n-\t  }\n-        throw new ClassNotFoundException(name);\n       }\n-    if (name.startsWith(\"[\"))\n-      return VMClass.loadArrayClass(name, classloader);\n-    Class c = classloader.loadClass(name);\n-    classloader.resolveClass(c);\n-    if (initialize)\n-      VMClass.initialize(c);\n-    return c;\n+    return VMClass.forName(name, initialize, classloader);\n   }\n   \n   /**"}, {"sha": "0d50a6e005d735fe38c367111ebb5484f20ffb57", "filename": "libjava/classpath/java/lang/ClassLoader.java", "status": "modified", "additions": 19, "deletions": 17, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Flang%2FClassLoader.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Flang%2FClassLoader.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Flang%2FClassLoader.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -123,14 +123,6 @@\n  */\n public abstract class ClassLoader\n {\n-  /**\n-   * All classes loaded by this classloader. VM's may choose to implement\n-   * this cache natively; but it is here available for use if necessary. It\n-   * is not private in order to allow native code (and trusted subclasses)\n-   * access to this field.\n-   */\n-  final HashMap loadedClasses = new HashMap();\n-\n   /**\n    * All packages defined by this classloader. It is not private in order to\n    * allow native code (and trusted subclasses) access to this field.\n@@ -472,15 +464,11 @@ protected final synchronized Class defineClass(String name, byte[] data,\n \t\t\t\t\t\t ProtectionDomain domain)\n     throws ClassFormatError\n   {\n+    checkInitialized();\n     if (domain == null)\n       domain = StaticData.defaultProtectionDomain;\n-    if (! initialized)\n-      throw new SecurityException(\"attempt to define class from uninitialized class loader\");\n     \n-    Class retval = VMClassLoader.defineClass(this, name, data,\n-\t\t\t\t\t     offset, len, domain);\n-    loadedClasses.put(retval.getName(), retval);\n-    return retval;\n+    return VMClassLoader.defineClass(this, name, data, offset, len, domain);\n   }\n \n   /**\n@@ -493,6 +481,7 @@ protected final synchronized Class defineClass(String name, byte[] data,\n    */\n   protected final void resolveClass(Class c)\n   {\n+    checkInitialized();\n     VMClassLoader.resolveClass(c);\n   }\n \n@@ -508,6 +497,7 @@ protected final void resolveClass(Class c)\n   protected final Class findSystemClass(String name)\n     throws ClassNotFoundException\n   {\n+    checkInitialized();\n     return Class.forName(name, false, StaticData.systemClassLoader);\n   }\n \n@@ -544,6 +534,7 @@ public final ClassLoader getParent()\n    */\n   protected final void setSigners(Class c, Object[] signers)\n   {\n+    checkInitialized();\n     c.setSigners(signers);\n   }\n \n@@ -556,9 +547,8 @@ protected final void setSigners(Class c, Object[] signers)\n    */\n   protected final synchronized Class findLoadedClass(String name)\n   {\n-    // NOTE: If the VM is keeping its own cache, it may make sense to have\n-    // this method be native.\n-    return (Class) loadedClasses.get(name);\n+    checkInitialized();\n+    return VMClassLoader.findLoadedClass(this, name);\n   }\n \n   /**\n@@ -1113,4 +1103,16 @@ static ClassLoader createAuxiliarySystemClassLoader(ClassLoader parent)\n \t\t.initCause(e);\n       }\n   }\n+\n+  /**\n+   * Before doing anything \"dangerous\" please call this method to make sure\n+   * this class loader instance was properly constructed (and not obtained\n+   * by exploiting the finalizer attack)\n+   * @see #initialized\n+   */\n+  private void checkInitialized()\n+  {\n+    if (! initialized)\n+      throw new SecurityException(\"attempt to use uninitialized class loader\");\n+  }\n }"}, {"sha": "75a0b8bfe38c0346d64347fa33df88d26bbf6639", "filename": "libjava/classpath/java/lang/IllegalArgumentException.java", "status": "modified", "additions": 55, "deletions": 1, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Flang%2FIllegalArgumentException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Flang%2FIllegalArgumentException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Flang%2FIllegalArgumentException.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -47,7 +47,8 @@\n  *\n  * @author Brian Jones\n  * @author Warren Levy (warrenl@cygnus.com)\n- * @status updated to 1.4\n+ * @author Andrew John Hughes (gnu_andrew@member.fsf.org)\n+ * @status updated to 1.5\n  */\n public class IllegalArgumentException extends RuntimeException\n {\n@@ -72,4 +73,57 @@ public IllegalArgumentException(String s)\n   {\n     super(s);\n   }\n+\n+  /**\n+   * <p>\n+   * Constructs a <code>IllegalArgumentException</code> using\n+   * the specified error message, which should give further details\n+   * as to the reason for this exception.  The specified cause\n+   * <code>Throwable</code> may be used to provide additional history,\n+   * with regards to the root of the problem.  It is perfectly valid\n+   * for this to be null, if the cause of the problem is unknown.\n+   * </p>\n+   * <p>\n+   * <strong>Note</strong>: the detail message from the cause is not\n+   * automatically incorporated into the resulting detail message of\n+   * this exception.\n+   * </p>\n+   * \n+   * @param message the detail message, which should give the reason for\n+   *                this exception being thrown.\n+   * @param cause the cause of this exception, or null if the cause\n+   *              is unknown.\n+   * @since 1.5\n+   */\n+  public IllegalArgumentException(String message, Throwable cause)\n+  {\n+    super(message, cause);\n+  }\n+\n+  /**\n+   * <p>\n+   * Constructs a <code>IllegalArgumentException</code> using\n+   * the specified cause <code>Throwable</code>, which may be used\n+   * to provide additional history, with regards to the root of the\n+   * problem.  It is perfectly valid for this to be null, if the\n+   * cause of the problem is unknown.\n+   * </p>\n+   * <p>\n+   * The detail message is automatically constructed from the detail\n+   * message of the supplied causal exception.  If the cause is null,\n+   * then the detail message will also be null.  Otherwise, the detail\n+   * message of this exception will be that of the causal exception.\n+   * This makes this constructor very useful for simply wrapping another\n+   * exception.\n+   * </p>\n+   * \n+   * @param cause the cause of this exception, or null if the cause\n+   *              is unknown.\n+   * @since 1.5\n+   */\n+  public IllegalArgumentException(Throwable cause)\n+  {\n+    super(cause);\n+  }\n+\n }"}, {"sha": "6b4e5f8428aaf4401969f3f0a28dd152933a7e46", "filename": "libjava/classpath/java/lang/IllegalStateException.java", "status": "modified", "additions": 56, "deletions": 1, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Flang%2FIllegalStateException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Flang%2FIllegalStateException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Flang%2FIllegalStateException.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -51,8 +51,9 @@\n  *\n  * @author Brian Jones\n  * @author Warren Levy (warrenl@cygnus.com)\n+ * @author Andrew John Hughes (gnu_andrew@member.fsf.org)\n  * @since 1.1\n- * @status updated to 1.4\n+ * @status updated to 1.5\n  */\n public class IllegalStateException extends RuntimeException\n {\n@@ -77,4 +78,58 @@ public IllegalStateException(String s)\n   {\n     super(s);\n   }\n+\n+  /**\n+   * <p>\n+   * Constructs a <code>IllegalStateException</code> using\n+   * the specified error message, which should give further details\n+   * as to the reason for this exception.  The specified cause\n+   * <code>Throwable</code> may be used to provide additional history,\n+   * with regards to the root of the problem.  It is perfectly valid\n+   * for this to be null, if the cause of the problem is unknown.\n+   * </p>\n+   * <p>\n+   * <strong>Note</strong>: the detail message from the cause is not\n+   * automatically incorporated into the resulting detail message of\n+   * this exception.\n+   * </p>\n+   * \n+   * @param message the detail message, which should give the reason for\n+   *                this exception being thrown.\n+   * @param cause the cause of this exception, or null if the cause\n+   *              is unknown.\n+   * @since 1.5\n+   */\n+  public IllegalStateException(String message, Throwable cause)\n+  {\n+    super(message, cause);\n+  }\n+\n+  /**\n+   * <p>\n+   * Constructs a <code>IllegalStateException</code> using\n+   * the specified cause <code>Throwable</code>, which may be used\n+   * to provide additional history, with regards to the root of the\n+   * problem.  It is perfectly valid for this to be null, if the\n+   * cause of the problem is unknown.\n+   * </p>\n+   * <p>\n+   * The detail message is automatically constructed from the detail\n+   * message of the supplied causal exception.  If the cause is null,\n+   * then the detail message will also be null.  Otherwise, the detail\n+   * message of this exception will be that of the causal exception.\n+   * This makes this constructor very useful for simply wrapping another\n+   * exception.\n+   * </p>\n+   * \n+   * @param cause the cause of this exception, or null if the cause\n+   *              is unknown.\n+   * @since 1.5\n+   */\n+  public IllegalStateException(Throwable cause)\n+  {\n+    super(cause);\n+  }\n+\n }\n+"}, {"sha": "53de9ab966796e23804c1f252f81e5a23dcc7a0e", "filename": "libjava/classpath/java/lang/Integer.java", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Flang%2FInteger.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Flang%2FInteger.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Flang%2FInteger.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -718,12 +718,12 @@ static int parseInt(String str, int radix, boolean decode)\n     int len = str.length();\n     boolean isNeg = false;\n     if (len == 0)\n-      throw new NumberFormatException();\n+      throw new NumberFormatException(\"string length is null\");\n     int ch = str.charAt(index);\n     if (ch == '-')\n       {\n         if (len == 1)\n-          throw new NumberFormatException();\n+          throw new NumberFormatException(\"pure '-'\");\n         isNeg = true;\n         ch = str.charAt(++index);\n       }\n@@ -748,7 +748,7 @@ else if (ch == '#')\n           }\n       }\n     if (index == len)\n-      throw new NumberFormatException();\n+      throw new NumberFormatException(\"non terminated number: \" + str);\n \n     int max = MAX_VALUE / radix;\n     // We can't directly write `max = (MAX_VALUE + 1) / radix'.\n@@ -760,12 +760,12 @@ else if (ch == '#')\n     while (index < len)\n       {\n \tif (val < 0 || val > max)\n-\t  throw new NumberFormatException();\n+\t  throw new NumberFormatException(\"number overflow (pos=\" + index + \") : \" + str);\n \n         ch = Character.digit(str.charAt(index++), radix);\n         val = val * radix + ch;\n         if (ch < 0 || (val < 0 && (! isNeg || val != MIN_VALUE)))\n-          throw new NumberFormatException();\n+          throw new NumberFormatException(\"invalid character at position \" + index + \" in \" + str);\n       }\n     return isNeg ? -val : val;\n   }"}, {"sha": "84be33ce0269a1b2e55604809ab8507835d0eb47", "filename": "libjava/classpath/java/lang/SecurityException.java", "status": "modified", "additions": 55, "deletions": 1, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Flang%2FSecurityException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Flang%2FSecurityException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Flang%2FSecurityException.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -45,8 +45,9 @@\n  *\n  * @author Brian Jones\n  * @author Warren Levy (warrenl@cygnus.com)\n+ * @author Andrew John Hughes (gnu_andrew@member.fsf.org)\n  * @see SecurityManager\n- * @status updated to 1.4\n+ * @status updated to 1.5\n  */\n public class SecurityException extends RuntimeException\n {\n@@ -71,4 +72,57 @@ public SecurityException(String s)\n   {\n     super(s);\n   }\n+\n+  /**\n+   * <p>\n+   * Constructs a <code>SecurityException</code> using\n+   * the specified error message, which should give further details\n+   * as to the reason for this exception.  The specified cause\n+   * <code>Throwable</code> may be used to provide additional history,\n+   * with regards to the root of the problem.  It is perfectly valid\n+   * for this to be null, if the cause of the problem is unknown.\n+   * </p>\n+   * <p>\n+   * <strong>Note</strong>: the detail message from the cause is not\n+   * automatically incorporated into the resulting detail message of\n+   * this exception.\n+   * </p>\n+   * \n+   * @param message the detail message, which should give the reason for\n+   *                this exception being thrown.\n+   * @param cause the cause of this exception, or null if the cause\n+   *              is unknown.\n+   * @since 1.5\n+   */\n+  public SecurityException(String message, Throwable cause)\n+  {\n+    super(message, cause);\n+  }\n+\n+  /**\n+   * <p>\n+   * Constructs a <code>SecurityException</code> using\n+   * the specified cause <code>Throwable</code>, which may be used\n+   * to provide additional history, with regards to the root of the\n+   * problem.  It is perfectly valid for this to be null, if the\n+   * cause of the problem is unknown.\n+   * </p>\n+   * <p>\n+   * The detail message is automatically constructed from the detail\n+   * message of the supplied causal exception.  If the cause is null,\n+   * then the detail message will also be null.  Otherwise, the detail\n+   * message of this exception will be that of the causal exception.\n+   * This makes this constructor very useful for simply wrapping another\n+   * exception.\n+   * </p>\n+   * \n+   * @param cause the cause of this exception, or null if the cause\n+   *              is unknown.\n+   * @since 1.5\n+   */\n+  public SecurityException(Throwable cause)\n+  {\n+    super(cause);\n+  }\n+\n }"}, {"sha": "e691cc7c9ecea0cd978ac9609c83eafdc5692b54", "filename": "libjava/classpath/java/lang/UnsupportedOperationException.java", "status": "modified", "additions": 55, "deletions": 1, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Flang%2FUnsupportedOperationException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Flang%2FUnsupportedOperationException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Flang%2FUnsupportedOperationException.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -44,8 +44,9 @@\n  * requested of it that it does not support.\n  *\n  * @author Warren Levy (warrenl@cygnus.com)\n+ * @author Andrew John Hughes (gnu_andrew@member.fsf.org)\n  * @since 1.2\n- * @status updated to 1.4\n+ * @status updated to 1.5\n  */\n public class UnsupportedOperationException extends RuntimeException\n {\n@@ -70,4 +71,57 @@ public UnsupportedOperationException(String s)\n   {\n     super(s);\n   }\n+\n+  /**\n+   * <p>\n+   * Constructs a <code>UnsupportedOperationException</code> using\n+   * the specified error message, which should give further details\n+   * as to the reason for this exception.  The specified cause\n+   * <code>Throwable</code> may be used to provide additional history,\n+   * with regards to the root of the problem.  It is perfectly valid\n+   * for this to be null, if the cause of the problem is unknown.\n+   * </p>\n+   * <p>\n+   * <strong>Note</strong>: the detail message from the cause is not\n+   * automatically incorporated into the resulting detail message of\n+   * this exception.\n+   * </p>\n+   * \n+   * @param message the detail message, which should give the reason for\n+   *                this exception being thrown.\n+   * @param cause the cause of this exception, or null if the cause\n+   *              is unknown.\n+   * @since 1.5\n+   */\n+  public UnsupportedOperationException(String message, Throwable cause)\n+  {\n+    super(message, cause);\n+  }\n+\n+  /**\n+   * <p>\n+   * Constructs a <code>UnsupportedOperationException</code> using\n+   * the specified cause <code>Throwable</code>, which may be used\n+   * to provide additional history, with regards to the root of the\n+   * problem.  It is perfectly valid for this to be null, if the\n+   * cause of the problem is unknown.\n+   * </p>\n+   * <p>\n+   * The detail message is automatically constructed from the detail\n+   * message of the supplied causal exception.  If the cause is null,\n+   * then the detail message will also be null.  Otherwise, the detail\n+   * message of this exception will be that of the causal exception.\n+   * This makes this constructor very useful for simply wrapping another\n+   * exception.\n+   * </p>\n+   * \n+   * @param cause the cause of this exception, or null if the cause\n+   *              is unknown.\n+   * @since 1.5\n+   */\n+  public UnsupportedOperationException(Throwable cause)\n+  {\n+    super(cause);\n+  }\n+\n }"}, {"sha": "7a5fd30de1687c5c528add15776a82bd2ca15b88", "filename": "libjava/classpath/java/lang/reflect/Proxy.java", "status": "modified", "additions": 11, "deletions": 122, "changes": 133, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Flang%2Freflect%2FProxy.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Flang%2Freflect%2FProxy.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Flang%2Freflect%2FProxy.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -38,7 +38,6 @@\n \n package java.lang.reflect;\n \n-import gnu.classpath.Configuration;\n import gnu.java.lang.reflect.TypeSignature;\n \n import java.io.Serializable;\n@@ -263,16 +262,16 @@ public static synchronized Class getProxyClass(ClassLoader loader,\n     Class clazz = (Class) proxyClasses.get(pt);\n     if (clazz == null)\n       {\n-        if (Configuration.HAVE_NATIVE_GET_PROXY_CLASS)\n-          clazz = getProxyClass0(loader, interfaces);\n+        if (VMProxy.HAVE_NATIVE_GET_PROXY_CLASS)\n+          clazz = VMProxy.getProxyClass(loader, interfaces);\n         else\n           {\n-            ProxyData data = (Configuration.HAVE_NATIVE_GET_PROXY_DATA\n-                              ? getProxyData0(loader, interfaces)\n+            ProxyData data = (VMProxy.HAVE_NATIVE_GET_PROXY_DATA\n+                              ? VMProxy.getProxyData(loader, interfaces)\n                               : ProxyData.getProxyData(pt));\n \n-            clazz = (Configuration.HAVE_NATIVE_GENERATE_PROXY_CLASS\n-\t\t     ? generateProxyClass0(loader, data)\n+            clazz = (VMProxy.HAVE_NATIVE_GENERATE_PROXY_CLASS\n+\t\t     ? VMProxy.generateProxyClass(loader, data)\n                      : new ClassFactory(data).generate(loader));\n           }\n \n@@ -387,74 +386,6 @@ public static InvocationHandler getInvocationHandler(Object proxy)\n     return ((Proxy) proxy).h;\n   }\n \n-  /**\n-   * Optional native method to replace (and speed up) the pure Java\n-   * implementation of getProxyClass.  Only needed if\n-   * Configuration.HAVE_NATIVE_GET_PROXY_CLASS is true, this does the\n-   * work of both getProxyData0 and generateProxyClass0 with no\n-   * intermediate form in Java. The native code may safely assume that\n-   * this class must be created, and does not already exist.\n-   *\n-   * @param loader the class loader to define the proxy class in; null\n-   *        implies the bootstrap class loader\n-   * @param interfaces the interfaces the class will extend\n-   * @return the generated proxy class\n-   * @throws IllegalArgumentException if the constraints for getProxyClass\n-   *         were violated, except for problems with null\n-   * @throws NullPointerException if `interfaces' is null or contains\n-   *         a null entry, or if handler is null\n-   * @see Configuration#HAVE_NATIVE_GET_PROXY_CLASS\n-   * @see #getProxyClass(ClassLoader, Class[])\n-   * @see #getProxyData0(ClassLoader, Class[])\n-   * @see #generateProxyClass0(ProxyData)\n-   */\n-  private static native Class getProxyClass0(ClassLoader loader,\n-                                             Class[] interfaces);\n-\n-  /**\n-   * Optional native method to replace (and speed up) the pure Java\n-   * implementation of getProxyData.  Only needed if\n-   * Configuration.HAVE_NATIVE_GET_PROXY_DATA is true. The native code\n-   * may safely assume that a new ProxyData object must be created which\n-   * does not duplicate any existing ones.\n-   *\n-   * @param loader the class loader to define the proxy class in; null\n-   *        implies the bootstrap class loader\n-   * @param interfaces the interfaces the class will extend\n-   * @return all data that is required to make this proxy class\n-   * @throws IllegalArgumentException if the constraints for getProxyClass\n-   *         were violated, except for problems with null\n-   * @throws NullPointerException if `interfaces' is null or contains\n-   *         a null entry, or if handler is null\n-   * @see Configuration.HAVE_NATIVE_GET_PROXY_DATA\n-   * @see #getProxyClass(ClassLoader, Class[])\n-   * @see #getProxyClass0(ClassLoader, Class[])\n-   * @see ProxyType#getProxyData()\n-   */\n-  private static native ProxyData getProxyData0(ClassLoader loader,\n-                                                Class[] interfaces);\n-\n-  /**\n-   * Optional native method to replace (and speed up) the pure Java\n-   * implementation of generateProxyClass.  Only needed if\n-   * Configuration.HAVE_NATIVE_GENERATE_PROXY_CLASS is true. The native\n-   * code may safely assume that a new Class must be created, and that\n-   * the ProxyData object does not describe any existing class.\n-   *\n-   * @param loader the class loader to define the proxy class in; null\n-   *        implies the bootstrap class loader\n-   * @param data the struct of information to convert to a Class. This\n-   *        has already been verified for all problems except exceeding\n-   *        VM limitations\n-   * @return the newly generated class\n-   * @throws IllegalArgumentException if VM limitations are exceeded\n-   * @see #getProxyClass(ClassLoader, Class[])\n-   * @see #getProxyClass0(ClassLoader, Class[])\n-   * @see ProxyData#generateProxyClass(ClassLoader)\n-   */\n-  private static native Class generateProxyClass0(ClassLoader loader,\n-                                                  ProxyData data);\n-\n   /**\n    * Helper class for mapping unique ClassLoader and interface combinations\n    * to proxy classes.\n@@ -502,49 +433,6 @@ public int hashCode()\n       return hash;\n     }\n \n-    // A more comprehensive comparison of two arrays,\n-    //   ignore array element order, and\n-    //   ignore redundant elements\n-    private static boolean sameTypes(Class arr1[], Class arr2[]) {\n-      if (arr1.length == 1 && arr2.length == 1) {\n-        return arr1[0] == arr2[0];\n-      }\n-        \n-      // total occurrance of elements of arr1 in arr2\n-      int total_occ_of_arr1_in_arr2 = 0;\n-    each_type:\n-      for (int i = arr1.length; --i >= 0; ) \n-      {\n-        Class t = arr1[i];\n-        for (int j = i; --j >= 0; ) \n-        {\n-          if (t == arr1[j]) \n-          { //found duplicate type\n-            continue each_type;  \n-          }\n-        }\n-            \n-        // count c(a unique element of arr1)'s \n-        //   occurrences in arr2\n-        int occ_in_arr2 = 0;\n-        for (int j = arr2.length; --j >= 0; ) \n-        {\n-          if (t == arr2[j]) \n-          {\n-            ++occ_in_arr2;\n-          }\n-        }\n-        if (occ_in_arr2 == 0) \n-        { // t does not occur in arr2\n-          return false;\n-        }\n-        \n-        total_occ_of_arr1_in_arr2 += occ_in_arr2;\n-      }\n-      // now, each element of arr2 must have been visited\n-      return total_occ_of_arr1_in_arr2 == arr2.length;\n-    }\n-\n     /**\n      * Calculates equality.\n      *\n@@ -556,7 +444,10 @@ public boolean equals(Object other)\n       ProxyType pt = (ProxyType) other;\n       if (loader != pt.loader || interfaces.length != pt.interfaces.length)\n         return false;\n-\t  return sameTypes(interfaces, pt.interfaces);\n+      for (int i = 0; i < interfaces.length; i++)\n+        if (interfaces[i] != pt.interfaces[i])\n+          return false;\n+      return true;\n     }\n   } // class ProxyType\n \n@@ -720,7 +611,7 @@ public boolean equals(Object other)\n    *\n    * @author Eric Blake (ebb9@email.byu.edu)\n    */\n-  private static final class ProxyData\n+  static final class ProxyData\n   {\n     /**\n      * The package this class is in <b>including the trailing dot</b>\n@@ -876,7 +767,6 @@ static ProxyData getProxyData(ProxyType pt)\n   private static final class ClassFactory\n   {\n     /** Constants for assisting the compilation */\n-    private static final byte POOL = 0;\n     private static final byte FIELD = 1;\n     private static final byte METHOD = 2;\n     private static final byte INTERFACE = 3;\n@@ -909,7 +799,6 @@ static ProxyData getProxyData(ProxyType pt)\n     private static final char GETFIELD = 180;\n     private static final char INVOKEVIRTUAL = 182;\n     private static final char INVOKESPECIAL = 183;\n-    private static final char INVOKESTATIC = 184;\n     private static final char INVOKEINTERFACE = 185;\n     private static final char NEW = 187;\n     private static final char ANEWARRAY = 189;"}, {"sha": "875ddc778e9fbf0d697060506817cfc9537a9ffa", "filename": "libjava/classpath/java/net/DatagramSocket.java", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Fnet%2FDatagramSocket.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Fnet%2FDatagramSocket.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Fnet%2FDatagramSocket.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -1,5 +1,5 @@\n /* DatagramSocket.java -- A class to model UDP sockets\n-   Copyright (C) 1998, 1999, 2000, 2002, 2003, 2004\n+   Copyright (C) 1998, 1999, 2000, 2002, 2003, 2004, 2005\n    Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n@@ -38,6 +38,8 @@\n \n package java.net;\n \n+import gnu.classpath.SystemProperties;\n+\n import gnu.java.net.PlainDatagramSocketImpl;\n import gnu.java.nio.DatagramChannelImpl;\n \n@@ -172,7 +174,7 @@ public DatagramSocket(int port, InetAddress addr) throws SocketException\n    */\n   public DatagramSocket(SocketAddress address) throws SocketException\n   {\n-    String propVal = System.getProperty(\"impl.prefix\");\n+    String propVal = SystemProperties.getProperty(\"impl.prefix\");\n     if (propVal == null || propVal.equals(\"\"))\n       impl = new PlainDatagramSocketImpl();\n     else"}, {"sha": "74ce6efb8280ad52701986689439a447c0163ba2", "filename": "libjava/classpath/java/net/Inet4Address.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Fnet%2FInet4Address.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Fnet%2FInet4Address.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Fnet%2FInet4Address.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -142,7 +142,7 @@ public boolean isMCGlobal()\n    */\n   public boolean isMCNodeLocal()\n   {\n-    return isMCNodeLocal();\n+    return super.isMCNodeLocal();\n   }\n \n   /**\n@@ -172,7 +172,7 @@ public boolean isMCSiteLocal()\n    */\n   public boolean isMCOrgLocal()\n   {\n-    return isMCOrgLocal();\n+    return super.isMCOrgLocal();\n   }\n \n   /**"}, {"sha": "0ffd1afacb7223063fe4879a1e2ca33e75c0f382", "filename": "libjava/classpath/java/net/JarURLConnection.java", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Fnet%2FJarURLConnection.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Fnet%2FJarURLConnection.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Fnet%2FJarURLConnection.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -1,5 +1,5 @@\n /* JarURLConnection.java -- Class for manipulating remote jar files\n-   Copyright (C) 1998, 2002, 2003 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 2002, 2003, 2005 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -151,8 +151,9 @@ public String getEntryName()\n    */\n   public JarEntry getJarEntry() throws IOException\n   {\n+    if (entryName == null)\n+      return null;\n     JarFile jarFile = getJarFile();\n-\n     return jarFile != null ? jarFile.getJarEntry(entryName) : null;\n   }\n "}, {"sha": "47b1c67cae7812234099902229f201c502c23ce7", "filename": "libjava/classpath/java/net/NetworkInterface.java", "status": "modified", "additions": 45, "deletions": 7, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Fnet%2FNetworkInterface.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Fnet%2FNetworkInterface.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Fnet%2FNetworkInterface.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06", "patch": "@@ -38,7 +38,12 @@\n \n package java.net;\n \n+import java.util.Collection;\n+import java.util.Collections;\n import java.util.Enumeration;\n+import java.util.HashMap;\n+import java.util.Iterator;\n+import java.util.Map;\n import java.util.Vector;\n \n /**\n@@ -143,9 +148,7 @@ public String getDisplayName()\n   public static NetworkInterface getByName(String name)\n     throws SocketException\n   {\n-    Vector networkInterfaces = VMNetworkInterface.getInterfaces();\n-\n-    for (Enumeration e = networkInterfaces.elements(); e.hasMoreElements();)\n+    for (Enumeration e = getNetworkInterfaces(); e.hasMoreElements();)\n       {\n \tNetworkInterface tmp = (NetworkInterface) e.nextElement();\n \n@@ -170,9 +173,7 @@ public static NetworkInterface getByName(String name)\n   public static NetworkInterface getByInetAddress(InetAddress addr)\n     throws SocketException\n   {\n-    Vector networkInterfaces = VMNetworkInterface.getInterfaces();\n-\n-    for (Enumeration interfaces = networkInterfaces.elements();\n+    for (Enumeration interfaces = getNetworkInterfaces();\n          interfaces.hasMoreElements();)\n       {\n \tNetworkInterface tmp = (NetworkInterface) interfaces.nextElement();\n@@ -188,6 +189,41 @@ public static NetworkInterface getByInetAddress(InetAddress addr)\n     throw new SocketException(\"no network interface is bound to such an IP address\");\n   }\n \n+  static private Collection condense(Collection interfaces) \n+  {\n+    final Map condensed = new HashMap();\n+\n+    final Iterator interfs = interfaces.iterator();\n+    while (interfs.hasNext()) {\n+\n+      final NetworkInterface face = (NetworkInterface) interfs.next();\n+      final String name = face.getName();\n+      \n+      if (condensed.containsKey(name))\n+\t{\n+\t  final NetworkInterface conface = (NetworkInterface) condensed.get(name);\n+\t  if (!conface.inetAddresses.containsAll(face.inetAddresses))\n+\t    {\n+\t      final Iterator faceAddresses = face.inetAddresses.iterator();\n+\t      while (faceAddresses.hasNext())\n+\t\t{\n+\t\t  final InetAddress faceAddress = (InetAddress) faceAddresses.next();\n+\t\t  if (!conface.inetAddresses.contains(faceAddress))\n+\t\t    {\n+\t\t      conface.inetAddresses.add(faceAddress);\n+\t\t    }\n+\t\t}\n+\t    }\n+\t}\n+      else\n+\t{\n+\t  condensed.put(name, face);\n+\t}\n+    }\n+\n+    return condensed.values();\n+  }\n+\n   /**\n    * Return an <code>Enumeration</code> of all available network interfaces\n    *\n@@ -202,7 +238,9 @@ public static Enumeration getNetworkInterfaces() throws SocketException\n     if (networkInterfaces.isEmpty())\n       return null;\n \n-    return networkInterfaces.elements();\n+    Collection condensed = condense(networkInterfaces);\n+\n+    return Collections.enumeration(condensed);\n   }\n \n   /**"}, {"sha": "85b3857816917f61388769ef5570dd69f0687aea", "filename": "libjava/classpath/java/net/URLClassLoader.java", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Fnet%2FURLClassLoader.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Fnet%2FURLClassLoader.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Fnet%2FURLClassLoader.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06"}, {"sha": "2c7e00dcb6e4005e753a29dd929e3db0168a8a78", "filename": "libjava/classpath/java/nio/Buffer.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Fnio%2FBuffer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Fnio%2FBuffer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Fnio%2FBuffer.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06"}, {"sha": "53bb668aacf4c060c8b13b6bea4791dabc894573", "filename": "libjava/classpath/java/nio/DirectByteBufferImpl.java", "status": "modified", "additions": 53, "deletions": 41, "changes": 94, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Fnio%2FDirectByteBufferImpl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Fnio%2FDirectByteBufferImpl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Fnio%2FDirectByteBufferImpl.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06"}, {"sha": "a53040f576c3f32f41af25aea4157d5d96d20a05", "filename": "libjava/classpath/java/nio/MappedByteBufferImpl.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Fnio%2FMappedByteBufferImpl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Fnio%2FMappedByteBufferImpl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Fnio%2FMappedByteBufferImpl.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06"}, {"sha": "c46695837a7cc8acd7e212b933a98568e84c2a3b", "filename": "libjava/classpath/java/nio/channels/FileLock.java", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Fnio%2Fchannels%2FFileLock.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Fnio%2Fchannels%2FFileLock.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Fnio%2Fchannels%2FFileLock.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06"}, {"sha": "0476b0daa2c9d6bde3e9b15790f441143a562447", "filename": "libjava/classpath/java/nio/charset/Charset.java", "status": "modified", "additions": 20, "deletions": 10, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Fnio%2Fcharset%2FCharset.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Fnio%2Fcharset%2FCharset.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Fnio%2Fcharset%2FCharset.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06"}, {"sha": "a7a7cb84a58613ff9d7afe4cc40cf227f84eaeaf", "filename": "libjava/classpath/java/rmi/server/RMIClassLoader.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Frmi%2Fserver%2FRMIClassLoader.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Frmi%2Fserver%2FRMIClassLoader.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Frmi%2Fserver%2FRMIClassLoader.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06"}, {"sha": "a6e010be2bc88c34b4fbcfe2d7a5a2d6226ad9f0", "filename": "libjava/classpath/java/security/KeyPairGenerator.java", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Fsecurity%2FKeyPairGenerator.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Fsecurity%2FKeyPairGenerator.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Fsecurity%2FKeyPairGenerator.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06"}, {"sha": "e3b8c0eb2ca3f5e35c2938ff8352e47de8d86838", "filename": "libjava/classpath/java/security/cert/X509CertSelector.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Fsecurity%2Fcert%2FX509CertSelector.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Fsecurity%2Fcert%2FX509CertSelector.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Fsecurity%2Fcert%2FX509CertSelector.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06"}, {"sha": "d429cc8267d772ec62de04ba424ae98ac4513220", "filename": "libjava/classpath/java/sql/Date.java", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Fsql%2FDate.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Fsql%2FDate.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Fsql%2FDate.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06"}, {"sha": "57551528b4390d879185c34e2988677af149c64b", "filename": "libjava/classpath/java/sql/Time.java", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Fsql%2FTime.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Fsql%2FTime.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Fsql%2FTime.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06"}, {"sha": "8413c2031306582174b52e47ce0b94965fb90468", "filename": "libjava/classpath/java/text/AttributedCharacterIterator.java", "status": "modified", "additions": 32, "deletions": 26, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Ftext%2FAttributedCharacterIterator.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Ftext%2FAttributedCharacterIterator.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Ftext%2FAttributedCharacterIterator.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06"}, {"sha": "9f0d5af1c49d800755e60937b95f13ee74167ae4", "filename": "libjava/classpath/java/text/AttributedString.java", "status": "modified", "additions": 317, "deletions": 370, "changes": 687, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Ftext%2FAttributedString.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Ftext%2FAttributedString.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Ftext%2FAttributedString.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06"}, {"sha": "7fba5d63c3ae048449107a28fa1a53c28f8f925d", "filename": "libjava/classpath/java/text/AttributedStringIterator.java", "status": "modified", "additions": 232, "deletions": 269, "changes": 501, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Ftext%2FAttributedStringIterator.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Ftext%2FAttributedStringIterator.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Ftext%2FAttributedStringIterator.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06"}, {"sha": "7ba116870de177b470a6d3d74c2cbde5c0f6e98f", "filename": "libjava/classpath/java/text/BreakIterator.java", "status": "modified", "additions": 15, "deletions": 16, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Ftext%2FBreakIterator.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Ftext%2FBreakIterator.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Ftext%2FBreakIterator.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06"}, {"sha": "58d6ddc395119b9f3802c84218d7bf0edae45dda", "filename": "libjava/classpath/java/text/CharacterIterator.java", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Ftext%2FCharacterIterator.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Ftext%2FCharacterIterator.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Ftext%2FCharacterIterator.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06"}, {"sha": "94c13a2ca0c68652f34fa1dd706cff65c2d0689d", "filename": "libjava/classpath/java/text/ChoiceFormat.java", "status": "modified", "additions": 10, "deletions": 9, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Ftext%2FChoiceFormat.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Ftext%2FChoiceFormat.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Ftext%2FChoiceFormat.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06"}, {"sha": "45c79142cc79fbab0103b30002a063d7a3c8f41b", "filename": "libjava/classpath/java/text/CollationElementIterator.java", "status": "modified", "additions": 13, "deletions": 7, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Ftext%2FCollationElementIterator.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Ftext%2FCollationElementIterator.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Ftext%2FCollationElementIterator.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06"}, {"sha": "a467869b881b579988c7a1b7134f889645b7f6aa", "filename": "libjava/classpath/java/text/CollationKey.java", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Ftext%2FCollationKey.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Ftext%2FCollationKey.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Ftext%2FCollationKey.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06"}, {"sha": "7dea83f0a5a4a984d3f7d9c00948992276567d17", "filename": "libjava/classpath/java/text/Collator.java", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Ftext%2FCollator.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Ftext%2FCollator.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Ftext%2FCollator.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06"}, {"sha": "5d412aada52909913eff9908b45ad2239a92426f", "filename": "libjava/classpath/java/text/DateFormat.java", "status": "modified", "additions": 39, "deletions": 13, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Ftext%2FDateFormat.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Ftext%2FDateFormat.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Ftext%2FDateFormat.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06"}, {"sha": "6a20b4c2a36fee1e6f176488268e7a6e1b762bb1", "filename": "libjava/classpath/java/text/DateFormatSymbols.java", "status": "modified", "additions": 23, "deletions": 24, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Ftext%2FDateFormatSymbols.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Ftext%2FDateFormatSymbols.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Ftext%2FDateFormatSymbols.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06"}, {"sha": "a8735d36171e4077b13f8fcf4947ae8ad2d2183b", "filename": "libjava/classpath/java/text/DecimalFormatSymbols.java", "status": "modified", "additions": 7, "deletions": 8, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Ftext%2FDecimalFormatSymbols.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Ftext%2FDecimalFormatSymbols.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Ftext%2FDecimalFormatSymbols.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06"}, {"sha": "f59cfd5ca3e4c24c696bc631272dd2c5cd014de3", "filename": "libjava/classpath/java/text/MessageFormat.java", "status": "modified", "additions": 8, "deletions": 9, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Ftext%2FMessageFormat.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Ftext%2FMessageFormat.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Ftext%2FMessageFormat.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06"}, {"sha": "5fede9ee37a729137374d71c3610579e9e15ae34", "filename": "libjava/classpath/java/text/NumberFormat.java", "status": "modified", "additions": 25, "deletions": 25, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Ftext%2FNumberFormat.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Ftext%2FNumberFormat.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Ftext%2FNumberFormat.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06"}, {"sha": "4c7ad81e7dee706608a54f06fa1dbf54b1ed797a", "filename": "libjava/classpath/java/text/ParseException.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Ftext%2FParseException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Ftext%2FParseException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Ftext%2FParseException.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06"}, {"sha": "c0c4cf68ceabc6b29778818e531c84d6afe58dcb", "filename": "libjava/classpath/java/text/SimpleDateFormat.java", "status": "modified", "additions": 73, "deletions": 44, "changes": 117, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Ftext%2FSimpleDateFormat.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Ftext%2FSimpleDateFormat.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Ftext%2FSimpleDateFormat.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06"}, {"sha": "e267488133339a8b49f208c37c8f6efdfa748674", "filename": "libjava/classpath/java/text/StringCharacterIterator.java", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Ftext%2FStringCharacterIterator.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Ftext%2FStringCharacterIterator.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Ftext%2FStringCharacterIterator.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06"}, {"sha": "916abe4ac53f27e0b648c8262e8ef0da3bb03783", "filename": "libjava/classpath/java/util/Observable.java", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Futil%2FObservable.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Futil%2FObservable.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Futil%2FObservable.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06"}, {"sha": "f00615ba0bfa8341ab1c62921938f33579415eec", "filename": "libjava/classpath/java/util/Properties.java", "status": "modified", "additions": 20, "deletions": 13, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Futil%2FProperties.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Futil%2FProperties.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Futil%2FProperties.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06"}, {"sha": "95117afe4a2dbee0253c959aba5e4ab35f4f3408", "filename": "libjava/classpath/java/util/TimeZone.java", "status": "modified", "additions": 142, "deletions": 118, "changes": 260, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Futil%2FTimeZone.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Futil%2FTimeZone.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Futil%2FTimeZone.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06"}, {"sha": "67549f0c47d9125b0d632d00dde597edb6fc9cb8", "filename": "libjava/classpath/java/util/Vector.java", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Futil%2FVector.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Futil%2FVector.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Futil%2FVector.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06"}, {"sha": "7ccbc60af87bf1eaef1ecbb1c84728b8cd655ba7", "filename": "libjava/classpath/java/util/jar/JarFile.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Futil%2Fjar%2FJarFile.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Futil%2Fjar%2FJarFile.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Futil%2Fjar%2FJarFile.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06"}, {"sha": "367faad9707767a293f746ee02ce0e28fbd0f492", "filename": "libjava/classpath/java/util/logging/Logger.java", "status": "modified", "additions": 29, "deletions": 19, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Futil%2Flogging%2FLogger.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Futil%2Flogging%2FLogger.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Futil%2Flogging%2FLogger.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06"}, {"sha": "32c10b6de8088d9c91ded99c49b785968bd9d6a6", "filename": "libjava/classpath/java/util/zip/DeflaterHuffman.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Futil%2Fzip%2FDeflaterHuffman.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Futil%2Fzip%2FDeflaterHuffman.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Futil%2Fzip%2FDeflaterHuffman.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06"}, {"sha": "4321c0f2cae3132dc609f293b2b656dad939f885", "filename": "libjava/classpath/java/util/zip/DeflaterOutputStream.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Futil%2Fzip%2FDeflaterOutputStream.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Futil%2Fzip%2FDeflaterOutputStream.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Futil%2Fzip%2FDeflaterOutputStream.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06"}, {"sha": "9b7afa00045e50ddb5b4d510ea9980ac43ec3150", "filename": "libjava/classpath/java/util/zip/ZipEntry.java", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Futil%2Fzip%2FZipEntry.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Futil%2Fzip%2FZipEntry.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Futil%2Fzip%2FZipEntry.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06"}, {"sha": "0243abed1f853c5dc52c47e05b55dd8b74e72236", "filename": "libjava/classpath/java/util/zip/ZipFile.java", "status": "modified", "additions": 22, "deletions": 2, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Futil%2Fzip%2FZipFile.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Futil%2Fzip%2FZipFile.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Futil%2Fzip%2FZipFile.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06"}, {"sha": "4539828c2b0cc99593f77f9702508eb5d293fa6f", "filename": "libjava/classpath/java/util/zip/ZipInputStream.java", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Futil%2Fzip%2FZipInputStream.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Futil%2Fzip%2FZipInputStream.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Futil%2Fzip%2FZipInputStream.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06"}, {"sha": "5c593b2c45a7da0b38bbeec598eb51fd211b69f1", "filename": "libjava/classpath/java/util/zip/ZipOutputStream.java", "status": "modified", "additions": 38, "deletions": 7, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Futil%2Fzip%2FZipOutputStream.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjava%2Futil%2Fzip%2FZipOutputStream.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Futil%2Fzip%2FZipOutputStream.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06"}, {"sha": "3e9b2c289cbf976b1fa43c17f0022c865d3c958f", "filename": "libjava/classpath/javax/imageio/spi/IIORegistry.java", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjavax%2Fimageio%2Fspi%2FIIORegistry.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjavax%2Fimageio%2Fspi%2FIIORegistry.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjavax%2Fimageio%2Fspi%2FIIORegistry.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06"}, {"sha": "a2af6c3e2a1802e55aa606b5f3be562f9856a40a", "filename": "libjava/classpath/javax/imageio/stream/ImageInputStream.java", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjavax%2Fimageio%2Fstream%2FImageInputStream.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjavax%2Fimageio%2Fstream%2FImageInputStream.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjavax%2Fimageio%2Fstream%2FImageInputStream.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06"}, {"sha": "78c35ade157a449aa8daf15c6eb5917f73ab9a26", "filename": "libjava/classpath/javax/security/auth/x500/X500Principal.java", "status": "modified", "additions": 13, "deletions": 5, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjavax%2Fsecurity%2Fauth%2Fx500%2FX500Principal.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjavax%2Fsecurity%2Fauth%2Fx500%2FX500Principal.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjavax%2Fsecurity%2Fauth%2Fx500%2FX500Principal.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06"}, {"sha": "058e4f6e1b6635927b79f9c40f1f58f57a4a5d6d", "filename": "libjava/classpath/javax/security/sasl/Sasl.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjavax%2Fsecurity%2Fsasl%2FSasl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjavax%2Fsecurity%2Fsasl%2FSasl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjavax%2Fsecurity%2Fsasl%2FSasl.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06"}, {"sha": "da65bdd1d323f189b45fda5c525c22779c71fd92", "filename": "libjava/classpath/javax/swing/AbstractAction.java", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjavax%2Fswing%2FAbstractAction.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjavax%2Fswing%2FAbstractAction.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjavax%2Fswing%2FAbstractAction.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06"}, {"sha": "21c4fc0a26cad8258d0598a18404b5f609829aca", "filename": "libjava/classpath/javax/swing/AbstractButton.java", "status": "modified", "additions": 28, "deletions": 30, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjavax%2Fswing%2FAbstractButton.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjavax%2Fswing%2FAbstractButton.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjavax%2Fswing%2FAbstractButton.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06"}, {"sha": "4ed15809a83336286a20eec3b5cfc5b44228fe12", "filename": "libjava/classpath/javax/swing/AbstractCellEditor.java", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjavax%2Fswing%2FAbstractCellEditor.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjavax%2Fswing%2FAbstractCellEditor.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjavax%2Fswing%2FAbstractCellEditor.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06"}, {"sha": "8973e5292322d191a6b8b2e52fabdee65a2bac44", "filename": "libjava/classpath/javax/swing/AbstractListModel.java", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjavax%2Fswing%2FAbstractListModel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjavax%2Fswing%2FAbstractListModel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjavax%2Fswing%2FAbstractListModel.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06"}, {"sha": "d61113b0827f2896b720f09b68dcf538e71f0750", "filename": "libjava/classpath/javax/swing/AbstractSpinnerModel.java", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjavax%2Fswing%2FAbstractSpinnerModel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjavax%2Fswing%2FAbstractSpinnerModel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjavax%2Fswing%2FAbstractSpinnerModel.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06"}, {"sha": "3dd63539ddc268a5d6382377e9bb0a408dbbc741", "filename": "libjava/classpath/javax/swing/Action.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjavax%2Fswing%2FAction.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjavax%2Fswing%2FAction.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjavax%2Fswing%2FAction.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06"}, {"sha": "c14bafdb4be3111f987d161f40f01a7c8dc56524", "filename": "libjava/classpath/javax/swing/ActionMap.java", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjavax%2Fswing%2FActionMap.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjavax%2Fswing%2FActionMap.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjavax%2Fswing%2FActionMap.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06"}, {"sha": "45cf3bbe07432e59dc5f76bec77253dda74de04a", "filename": "libjava/classpath/javax/swing/BorderFactory.java", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjavax%2Fswing%2FBorderFactory.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjavax%2Fswing%2FBorderFactory.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjavax%2Fswing%2FBorderFactory.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06"}, {"sha": "5ca5a7e043ee6f50a6e8da4ebf17577433780114", "filename": "libjava/classpath/javax/swing/BoundedRangeModel.java", "status": "modified", "additions": 40, "deletions": 18, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjavax%2Fswing%2FBoundedRangeModel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjavax%2Fswing%2FBoundedRangeModel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjavax%2Fswing%2FBoundedRangeModel.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06"}, {"sha": "b2cb44aceb5fa0fae00326abd56bcc5d4b8cea09", "filename": "libjava/classpath/javax/swing/Box.java", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjavax%2Fswing%2FBox.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjavax%2Fswing%2FBox.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjavax%2Fswing%2FBox.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06"}, {"sha": "28bb53928ef56d47f40c4054763d5ad85787b59e", "filename": "libjava/classpath/javax/swing/BoxLayout.java", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjavax%2Fswing%2FBoxLayout.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjavax%2Fswing%2FBoxLayout.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjavax%2Fswing%2FBoxLayout.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06"}, {"sha": "3de1d4b9f16e3b9ecfd24228892c462606bd06c8", "filename": "libjava/classpath/javax/swing/ButtonGroup.java", "status": "modified", "additions": 19, "deletions": 1, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjavax%2Fswing%2FButtonGroup.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjavax%2Fswing%2FButtonGroup.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjavax%2Fswing%2FButtonGroup.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06"}, {"sha": "886d5c5f2a8ed683580313a21444b56c1e85d1cb", "filename": "libjava/classpath/javax/swing/CellRendererPane.java", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjavax%2Fswing%2FCellRendererPane.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjavax%2Fswing%2FCellRendererPane.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjavax%2Fswing%2FCellRendererPane.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06"}, {"sha": "f95c3104535c4aac2af642c4588ae3707ff2de78", "filename": "libjava/classpath/javax/swing/ComponentInputMap.java", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjavax%2Fswing%2FComponentInputMap.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjavax%2Fswing%2FComponentInputMap.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjavax%2Fswing%2FComponentInputMap.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06"}, {"sha": "137b82337af7559508efcc92693ec52478cec4de", "filename": "libjava/classpath/javax/swing/DebugGraphics.java", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjavax%2Fswing%2FDebugGraphics.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjavax%2Fswing%2FDebugGraphics.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjavax%2Fswing%2FDebugGraphics.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06"}, {"sha": "10de4b948379e02b0161604d7f72a06702911993", "filename": "libjava/classpath/javax/swing/DefaultBoundedRangeModel.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjavax%2Fswing%2FDefaultBoundedRangeModel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjavax%2Fswing%2FDefaultBoundedRangeModel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjavax%2Fswing%2FDefaultBoundedRangeModel.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06"}, {"sha": "f7d09d5780dcd5cfa9c79a43e710951a077f92e1", "filename": "libjava/classpath/javax/swing/DefaultButtonModel.java", "status": "modified", "additions": 11, "deletions": 9, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjavax%2Fswing%2FDefaultButtonModel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjavax%2Fswing%2FDefaultButtonModel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjavax%2Fswing%2FDefaultButtonModel.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06"}, {"sha": "00e00864432e4c96803a91845610e7d4069dbd9a", "filename": "libjava/classpath/javax/swing/DefaultCellEditor.java", "status": "modified", "additions": 117, "deletions": 37, "changes": 154, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjavax%2Fswing%2FDefaultCellEditor.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjavax%2Fswing%2FDefaultCellEditor.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjavax%2Fswing%2FDefaultCellEditor.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06"}, {"sha": "b48b968d6974e1c2a12733c278754bc992db1873", "filename": "libjava/classpath/javax/swing/DefaultComboBoxModel.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjavax%2Fswing%2FDefaultComboBoxModel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjavax%2Fswing%2FDefaultComboBoxModel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjavax%2Fswing%2FDefaultComboBoxModel.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06"}, {"sha": "2b8977e9d6d11adb1c3260b58f1540629f5d38e1", "filename": "libjava/classpath/javax/swing/DefaultDesktopManager.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjavax%2Fswing%2FDefaultDesktopManager.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjavax%2Fswing%2FDefaultDesktopManager.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjavax%2Fswing%2FDefaultDesktopManager.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06"}, {"sha": "08db651680a8fba04976df5dac6f8ac54a8980c9", "filename": "libjava/classpath/javax/swing/DefaultFocusManager.java", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjavax%2Fswing%2FDefaultFocusManager.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjavax%2Fswing%2FDefaultFocusManager.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjavax%2Fswing%2FDefaultFocusManager.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06"}, {"sha": "5a34ba7aa18b7e8d549dd890880d0501f1edefb2", "filename": "libjava/classpath/javax/swing/DefaultListCellRenderer.java", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjavax%2Fswing%2FDefaultListCellRenderer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjavax%2Fswing%2FDefaultListCellRenderer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjavax%2Fswing%2FDefaultListCellRenderer.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06"}, {"sha": "fdbbb562c90973170b59189a73e35743e766ba92", "filename": "libjava/classpath/javax/swing/DefaultListModel.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjavax%2Fswing%2FDefaultListModel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjavax%2Fswing%2FDefaultListModel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjavax%2Fswing%2FDefaultListModel.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06"}, {"sha": "f8d544d9b20eb18f082aad941bfa586168e532fb", "filename": "libjava/classpath/javax/swing/DefaultListSelectionModel.java", "status": "modified", "additions": 17, "deletions": 17, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjavax%2Fswing%2FDefaultListSelectionModel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjavax%2Fswing%2FDefaultListSelectionModel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjavax%2Fswing%2FDefaultListSelectionModel.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06"}, {"sha": "8f4d405f9d4baa6361038183535f93faa598bfae", "filename": "libjava/classpath/javax/swing/DefaultSingleSelectionModel.java", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjavax%2Fswing%2FDefaultSingleSelectionModel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjavax%2Fswing%2FDefaultSingleSelectionModel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjavax%2Fswing%2FDefaultSingleSelectionModel.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06"}, {"sha": "179fa6f82d26c72b45411811e46a2d010c53c9b2", "filename": "libjava/classpath/javax/swing/FocusManager.java", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjavax%2Fswing%2FFocusManager.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjavax%2Fswing%2FFocusManager.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjavax%2Fswing%2FFocusManager.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06"}, {"sha": "b920b088a1756fd21b84e75d9743e989516868cc", "filename": "libjava/classpath/javax/swing/GrayFilter.java", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjavax%2Fswing%2FGrayFilter.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjavax%2Fswing%2FGrayFilter.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjavax%2Fswing%2FGrayFilter.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06"}, {"sha": "c73ad2d4049258807dab0762bf804ac11fe2abb1", "filename": "libjava/classpath/javax/swing/Icon.java", "status": "modified", "additions": 22, "deletions": 1, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjavax%2Fswing%2FIcon.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjavax%2Fswing%2FIcon.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjavax%2Fswing%2FIcon.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06"}, {"sha": "b650cd81f23530bfd615bc5076f558f9d4e37785", "filename": "libjava/classpath/javax/swing/ImageIcon.java", "status": "modified", "additions": 101, "deletions": 9, "changes": 110, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjavax%2Fswing%2FImageIcon.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjavax%2Fswing%2FImageIcon.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjavax%2Fswing%2FImageIcon.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06"}, {"sha": "a7ec38c41178a98a559c09359322b36dbc5b8272", "filename": "libjava/classpath/javax/swing/InputMap.java", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjavax%2Fswing%2FInputMap.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjavax%2Fswing%2FInputMap.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjavax%2Fswing%2FInputMap.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06"}, {"sha": "8e02ab813a34ca511dff8831fbdf10306caa2d80", "filename": "libjava/classpath/javax/swing/InputVerifier.java", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjavax%2Fswing%2FInputVerifier.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjavax%2Fswing%2FInputVerifier.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjavax%2Fswing%2FInputVerifier.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06"}, {"sha": "4780a67c521d01cc05028801fc8fa1c24f8ced6a", "filename": "libjava/classpath/javax/swing/InternalFrameFocusTraversalPolicy.java", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjavax%2Fswing%2FInternalFrameFocusTraversalPolicy.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjavax%2Fswing%2FInternalFrameFocusTraversalPolicy.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjavax%2Fswing%2FInternalFrameFocusTraversalPolicy.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06"}, {"sha": "cafb2dabbb8d64bc3069481dd5967e5f9ac7a987", "filename": "libjava/classpath/javax/swing/JApplet.java", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjavax%2Fswing%2FJApplet.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjavax%2Fswing%2FJApplet.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjavax%2Fswing%2FJApplet.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06"}, {"sha": "5653fbf42f173420cc0cb09690a4422dcc184efb", "filename": "libjava/classpath/javax/swing/JButton.java", "status": "modified", "additions": 28, "deletions": 3, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjavax%2Fswing%2FJButton.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjavax%2Fswing%2FJButton.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjavax%2Fswing%2FJButton.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06"}, {"sha": "a743308dcca9dc9c81753e0f6fc30919bdcf2bb5", "filename": "libjava/classpath/javax/swing/JCheckBox.java", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjavax%2Fswing%2FJCheckBox.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjavax%2Fswing%2FJCheckBox.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjavax%2Fswing%2FJCheckBox.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06"}, {"sha": "f9dd56500fe2965d2fca4035f98e7f7596dc8b07", "filename": "libjava/classpath/javax/swing/JCheckBoxMenuItem.java", "status": "modified", "additions": 12, "deletions": 5, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjavax%2Fswing%2FJCheckBoxMenuItem.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjavax%2Fswing%2FJCheckBoxMenuItem.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjavax%2Fswing%2FJCheckBoxMenuItem.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06"}, {"sha": "4016b82f3fd9fae8d8e7c9b4a922ffd8014889cc", "filename": "libjava/classpath/javax/swing/JColorChooser.java", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjavax%2Fswing%2FJColorChooser.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjavax%2Fswing%2FJColorChooser.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjavax%2Fswing%2FJColorChooser.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06"}, {"sha": "47d18323a25a4a5990abce5367e5375f76434907", "filename": "libjava/classpath/javax/swing/JComboBox.java", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjavax%2Fswing%2FJComboBox.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjavax%2Fswing%2FJComboBox.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjavax%2Fswing%2FJComboBox.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06"}, {"sha": "dc7689b0930bac8a2c54ebbc133d5715fdd5f79e", "filename": "libjava/classpath/javax/swing/JComponent.java", "status": "modified", "additions": 138, "deletions": 80, "changes": 218, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjavax%2Fswing%2FJComponent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjavax%2Fswing%2FJComponent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjavax%2Fswing%2FJComponent.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06"}, {"sha": "f4c80eca7d6f04e36b217ba8c641b2d0e36e8c59", "filename": "libjava/classpath/javax/swing/JDesktopPane.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjavax%2Fswing%2FJDesktopPane.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjavax%2Fswing%2FJDesktopPane.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjavax%2Fswing%2FJDesktopPane.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06"}, {"sha": "0f528ab1b45fcc3d8fe2fe6de6c46f4acd6f3b60", "filename": "libjava/classpath/javax/swing/JDialog.java", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjavax%2Fswing%2FJDialog.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjavax%2Fswing%2FJDialog.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjavax%2Fswing%2FJDialog.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06"}, {"sha": "e2f1319a2a7dac4d1c894b29f53a9d1709ed62b9", "filename": "libjava/classpath/javax/swing/JEditorPane.java", "status": "modified", "additions": 23, "deletions": 2, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjavax%2Fswing%2FJEditorPane.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjavax%2Fswing%2FJEditorPane.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjavax%2Fswing%2FJEditorPane.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06"}, {"sha": "7569061ab2ee604bc9af3aa77bd2a97f4a575bf6", "filename": "libjava/classpath/javax/swing/JFileChooser.java", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjavax%2Fswing%2FJFileChooser.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjavax%2Fswing%2FJFileChooser.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjavax%2Fswing%2FJFileChooser.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06"}, {"sha": "9890df2008773054f6f173d25868464c8178c185", "filename": "libjava/classpath/javax/swing/JFormattedTextField.java", "status": "modified", "additions": 21, "deletions": 1, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjavax%2Fswing%2FJFormattedTextField.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjavax%2Fswing%2FJFormattedTextField.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjavax%2Fswing%2FJFormattedTextField.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06"}, {"sha": "7081f5980e43ae6011a6d0575a542137f94f9639", "filename": "libjava/classpath/javax/swing/JFrame.java", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjavax%2Fswing%2FJFrame.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjavax%2Fswing%2FJFrame.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjavax%2Fswing%2FJFrame.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06"}, {"sha": "2e7ad98ddaee09908b72dc4c6e4043c7008b4444", "filename": "libjava/classpath/javax/swing/JLabel.java", "status": "modified", "additions": 248, "deletions": 3, "changes": 251, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjavax%2Fswing%2FJLabel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjavax%2Fswing%2FJLabel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjavax%2Fswing%2FJLabel.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06"}, {"sha": "1ea39dc50076a2c30526beb86e19edb3256b69a2", "filename": "libjava/classpath/javax/swing/JLayeredPane.java", "status": "modified", "additions": 37, "deletions": 14, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjavax%2Fswing%2FJLayeredPane.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjavax%2Fswing%2FJLayeredPane.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjavax%2Fswing%2FJLayeredPane.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06"}, {"sha": "92fe1ccfa6715089bebc762ce5d4a48d97f99a02", "filename": "libjava/classpath/javax/swing/JList.java", "status": "modified", "additions": 41, "deletions": 18, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjavax%2Fswing%2FJList.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjavax%2Fswing%2FJList.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjavax%2Fswing%2FJList.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06"}, {"sha": "eebb1a050bec9eb7b75825bd2c4a0d82cc5dabe4", "filename": "libjava/classpath/javax/swing/JMenuBar.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjavax%2Fswing%2FJMenuBar.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjavax%2Fswing%2FJMenuBar.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjavax%2Fswing%2FJMenuBar.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06"}, {"sha": "ad0772ab8d3c014a095dfaea9362a4e0e80041d8", "filename": "libjava/classpath/javax/swing/JOptionPane.java", "status": "modified", "additions": 35, "deletions": 25, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjavax%2Fswing%2FJOptionPane.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06/libjava%2Fclasspath%2Fjavax%2Fswing%2FJOptionPane.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjavax%2Fswing%2FJOptionPane.java?ref=1ea63ef8be1cc54dd0de9d82c684713a1dcf1e06"}]}