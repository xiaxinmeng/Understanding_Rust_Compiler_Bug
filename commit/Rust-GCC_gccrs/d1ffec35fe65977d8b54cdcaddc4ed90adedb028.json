{"sha": "d1ffec35fe65977d8b54cdcaddc4ed90adedb028", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDFmZmVjMzVmZTY1OTc3ZDhiNTRjZGNhZGRjNGVkOTBhZGVkYjAyOA==", "commit": {"author": {"name": "John David Anglin", "email": "dave.anglin@nrc-cnrc.gc.ca", "date": "2004-12-25T17:01:52Z"}, "committer": {"name": "John David Anglin", "email": "danglin@gcc.gnu.org", "date": "2004-12-25T17:01:52Z"}, "message": "pr17055-1.c (dg-options): Add -fno-common to options on hppa*-*-hpux*.\n\n\t* gcc.dg/pr17055-1.c (dg-options): Add -fno-common to options on\n\thppa*-*-hpux*.\n\t* gcc.dg/pr17957.c (dg-options): Likewise.\n\t* gcc.dg/struct-ret-1.c: Add prototype for abort.\n\t* gcc.dg/tree-ssa/asm-2.c, gcc.dg/tree-ssa/asm-3.c: Use register 1\n\tinstead of 0 on __hppa__.\n\t* gcc.dg/tree-ssa/loop-1.c (dg-final): Check for five instances of\n\t\"foo,%r\" on hppa*-*-*.\n\nFrom-SVN: r92606", "tree": {"sha": "a64e30527c29f21469aff0ce3a8a8e8bd8b4a08f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a64e30527c29f21469aff0ce3a8a8e8bd8b4a08f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d1ffec35fe65977d8b54cdcaddc4ed90adedb028", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d1ffec35fe65977d8b54cdcaddc4ed90adedb028", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d1ffec35fe65977d8b54cdcaddc4ed90adedb028", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d1ffec35fe65977d8b54cdcaddc4ed90adedb028/comments", "author": null, "committer": null, "parents": [{"sha": "310995eac7c36515e481be1aec9a32863203318f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/310995eac7c36515e481be1aec9a32863203318f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/310995eac7c36515e481be1aec9a32863203318f"}], "stats": {"total": 26, "additions": 24, "deletions": 2}, "files": [{"sha": "8b83f54c54854219a1d9135d0ff1b7b23a9e7979", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1ffec35fe65977d8b54cdcaddc4ed90adedb028/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1ffec35fe65977d8b54cdcaddc4ed90adedb028/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d1ffec35fe65977d8b54cdcaddc4ed90adedb028", "patch": "@@ -1,3 +1,14 @@\n+2004-12-25  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n+\n+\t* gcc.dg/pr17055-1.c (dg-options): Add -fno-common to options on\n+\thppa*-*-hpux*.\n+\t* gcc.dg/pr17957.c (dg-options): Likewise.\n+\t* gcc.dg/struct-ret-1.c: Add prototype for abort.\n+\t* gcc.dg/tree-ssa/asm-2.c, gcc.dg/tree-ssa/asm-3.c: Use register 1\n+\tinstead of 0 on __hppa__.\n+\t* gcc.dg/tree-ssa/loop-1.c (dg-final): Check for five instances of\n+\t\"foo,%r\" on hppa*-*-*.\n+\n 2004-12-23  Bud Davis  <bdavis9659@comcast.net>\n \n \tPR fortran/19071"}, {"sha": "faac48bc3310f1f8aaf0650e458f7a1c17ca9eb4", "filename": "gcc/testsuite/gcc.dg/pr17055-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1ffec35fe65977d8b54cdcaddc4ed90adedb028/gcc%2Ftestsuite%2Fgcc.dg%2Fpr17055-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1ffec35fe65977d8b54cdcaddc4ed90adedb028/gcc%2Ftestsuite%2Fgcc.dg%2Fpr17055-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr17055-1.c?ref=d1ffec35fe65977d8b54cdcaddc4ed90adedb028", "patch": "@@ -1,6 +1,7 @@\n /* PR middle-end/17055.  */\n /* { dg-do compile } */\n /* { dg-options \"-O2 -ffast-math\" } */\n+/* { dg-options \"-O2 -ffast-math -fno-common\" { target hppa*-*-hpux* } } */\n \n /* This test used to abort, beacuse we do an \"integer\" fold to zero, i.e.\n    x - x = (T)0 where T is the type of x.  Unfortunately, fold_convert"}, {"sha": "ea18ea80610a3f25cea6f8aaa2f1a2d6bec9b0d6", "filename": "gcc/testsuite/gcc.dg/pr17957.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1ffec35fe65977d8b54cdcaddc4ed90adedb028/gcc%2Ftestsuite%2Fgcc.dg%2Fpr17957.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1ffec35fe65977d8b54cdcaddc4ed90adedb028/gcc%2Ftestsuite%2Fgcc.dg%2Fpr17957.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr17957.c?ref=d1ffec35fe65977d8b54cdcaddc4ed90adedb028", "patch": "@@ -1,5 +1,6 @@\n /* { dg-do compile } */\n /* { dg-options \"--param ggc-min-expand=0 --param ggc-min-heapsize=0\" } */\n+/* { dg-options \"-fno-common --param ggc-min-expand=0 --param ggc-min-heapsize=0\" { target hppa*-*-hpux* } } */\n __attribute__ ((vector_size (64))) unsigned char v1, v2, v3;\n void\n vadd (void)"}, {"sha": "23c9e98130bb115751b7203f7dcb43ebd26981dc", "filename": "gcc/testsuite/gcc.dg/struct-ret-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1ffec35fe65977d8b54cdcaddc4ed90adedb028/gcc%2Ftestsuite%2Fgcc.dg%2Fstruct-ret-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1ffec35fe65977d8b54cdcaddc4ed90adedb028/gcc%2Ftestsuite%2Fgcc.dg%2Fstruct-ret-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fstruct-ret-1.c?ref=d1ffec35fe65977d8b54cdcaddc4ed90adedb028", "patch": "@@ -1,5 +1,6 @@\n /* { dg-do run { target hppa*-*-* } } */\n /* { dg-options { -O2 } { target hppa*-*-* } } */\n+extern void abort (void);\n extern void exit (int);\n typedef struct {\n         int             x;"}, {"sha": "afe83be47510bfa101e6e2e8ebf4fe938dd1e27d", "filename": "gcc/testsuite/gcc.dg/tree-ssa/asm-2.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1ffec35fe65977d8b54cdcaddc4ed90adedb028/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fasm-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1ffec35fe65977d8b54cdcaddc4ed90adedb028/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fasm-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fasm-2.c?ref=d1ffec35fe65977d8b54cdcaddc4ed90adedb028", "patch": "@@ -1,7 +1,11 @@\n /* { dg-do compile } */\n /* { dg-options \"-O2 -fdump-tree-optimized\" } */\n \n+#ifdef __hppa__\n+#define REGISTER \"1\"\n+#else\n #define REGISTER \"0\"\n+#endif\n \n void baz(void)\n {"}, {"sha": "9fbfc701511a712793b21dbc35cb1b3f0afa431c", "filename": "gcc/testsuite/gcc.dg/tree-ssa/asm-3.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1ffec35fe65977d8b54cdcaddc4ed90adedb028/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fasm-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1ffec35fe65977d8b54cdcaddc4ed90adedb028/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fasm-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fasm-3.c?ref=d1ffec35fe65977d8b54cdcaddc4ed90adedb028", "patch": "@@ -2,8 +2,12 @@\n /* { dg-do compile } */\n /* { dg-options \"-O2 -fdump-tree-optimized\" } */\n \n+#ifdef __hppa__\n+#define REGISTER \"1\"\n+#else\n #define REGISTER \"0\"\n-                                                                                \n+#endif\n+\n static inline int source(void)\n {\n   register int hardreg __asm__(REGISTER);"}, {"sha": "fa9670fa7f72ee946416deb0c1a03b772b5f640b", "filename": "gcc/testsuite/gcc.dg/tree-ssa/loop-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1ffec35fe65977d8b54cdcaddc4ed90adedb028/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floop-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1ffec35fe65977d8b54cdcaddc4ed90adedb028/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floop-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floop-1.c?ref=d1ffec35fe65977d8b54cdcaddc4ed90adedb028", "patch": "@@ -24,6 +24,6 @@ void xxx(void)\n /* { dg-final { scan-tree-dump-times \"Added canonical iv to loop 1, 4 iterations\" 1 \"ivcanon\"} } */\n /* { dg-final { scan-tree-dump-times \"Unrolled loop 1 completely\" 1 \"cunroll\"} } */\n /* { dg-final { scan-tree-dump-times \"foo\" 5 \"vars\"} } */\n-/* { dg-final { scan-assembler-times \"foo\" 5} } */\n+/* { dg-final { if [ istarget hppa*-*-* ] { scan-assembler-times \"foo,%r\" 5} else { scan-assembler-times \"foo\" 5} } }  */\n \n "}]}