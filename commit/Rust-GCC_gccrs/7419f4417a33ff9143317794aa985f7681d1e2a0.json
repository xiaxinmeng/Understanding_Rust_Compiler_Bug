{"sha": "7419f4417a33ff9143317794aa985f7681d1e2a0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzQxOWY0NDE3YTMzZmY5MTQzMzE3Nzk0YWE5ODVmNzY4MWQxZTJhMA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2016-07-20T14:01:30Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2016-07-20T14:01:30Z"}, "message": "re PR c++/71909 (g++ accepts an unreachable function catch block that lacks a corresponding try)\n\n\tPR c++/71909\n\t* parser.c (cp_parser_save_member_function_body): Consume\n\t__transaction_relaxed or __transaction_atomic with optional\n\tattribute.  Only skip catch with block if try keyword is seen.\n\n\t* g++.dg/parse/pr71909.C: New test.\n\t* g++.dg/tm/pr71909.C: New test.\n\nFrom-SVN: r238521", "tree": {"sha": "1d243343f1193d9977b24d69c9e1935d177ad3d1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1d243343f1193d9977b24d69c9e1935d177ad3d1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7419f4417a33ff9143317794aa985f7681d1e2a0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7419f4417a33ff9143317794aa985f7681d1e2a0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7419f4417a33ff9143317794aa985f7681d1e2a0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7419f4417a33ff9143317794aa985f7681d1e2a0/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "109d2197c31b766daf9c7b138bc7eeaab12985df", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/109d2197c31b766daf9c7b138bc7eeaab12985df", "html_url": "https://github.com/Rust-GCC/gccrs/commit/109d2197c31b766daf9c7b138bc7eeaab12985df"}], "stats": {"total": 91, "additions": 88, "deletions": 3}, "files": [{"sha": "cc5df6e11989c9884c4a6f63a2c6d6b10bedd928", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7419f4417a33ff9143317794aa985f7681d1e2a0/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7419f4417a33ff9143317794aa985f7681d1e2a0/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=7419f4417a33ff9143317794aa985f7681d1e2a0", "patch": "@@ -1,5 +1,10 @@\n 2016-07-20  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR c++/71909\n+\t* parser.c (cp_parser_save_member_function_body): Consume\n+\t__transaction_relaxed or __transaction_atomic with optional\n+\tattribute.  Only skip catch with block if try keyword is seen.\n+\n \tPR c++/50060\n \t* constexpr.c (cxx_eval_builtin_function_call): Pass false as lval\n \twhen evaluating call arguments.  Use fold_builtin_call_array instead"}, {"sha": "84dad48f21225ea4584e1456166569160eeffded", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 39, "deletions": 3, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7419f4417a33ff9143317794aa985f7681d1e2a0/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7419f4417a33ff9143317794aa985f7681d1e2a0/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=7419f4417a33ff9143317794aa985f7681d1e2a0", "patch": "@@ -26044,6 +26044,7 @@ cp_parser_save_member_function_body (cp_parser* parser,\n   cp_token *first;\n   cp_token *last;\n   tree fn;\n+  bool function_try_block = false;\n \n   /* Create the FUNCTION_DECL.  */\n   fn = grokmethod (decl_specifiers, declarator, attributes);\n@@ -26065,9 +26066,43 @@ cp_parser_save_member_function_body (cp_parser* parser,\n   /* Save away the tokens that make up the body of the\n      function.  */\n   first = parser->lexer->next_token;\n+\n+  if (cp_lexer_next_token_is_keyword (parser->lexer, RID_TRANSACTION_RELAXED))\n+    cp_lexer_consume_token (parser->lexer);\n+  else if (cp_lexer_next_token_is_keyword (parser->lexer,\n+\t\t\t\t\t   RID_TRANSACTION_ATOMIC))\n+    {\n+      cp_lexer_consume_token (parser->lexer);\n+      /* Match cp_parser_txn_attribute_opt [[ identifier ]].  */\n+      if (cp_lexer_next_token_is (parser->lexer, CPP_OPEN_SQUARE)\n+\t  && cp_lexer_nth_token_is (parser->lexer, 2, CPP_OPEN_SQUARE)\n+\t  && (cp_lexer_nth_token_is (parser->lexer, 3, CPP_NAME)\n+\t      || cp_lexer_nth_token_is (parser->lexer, 3, CPP_KEYWORD))\n+\t  && cp_lexer_nth_token_is (parser->lexer, 4, CPP_CLOSE_SQUARE)\n+\t  && cp_lexer_nth_token_is (parser->lexer, 5, CPP_CLOSE_SQUARE))\n+\t{\n+\t  cp_lexer_consume_token (parser->lexer);\n+\t  cp_lexer_consume_token (parser->lexer);\n+\t  cp_lexer_consume_token (parser->lexer);\n+\t  cp_lexer_consume_token (parser->lexer);\n+\t  cp_lexer_consume_token (parser->lexer);\n+\t}\n+      else\n+\twhile (cp_next_tokens_can_be_gnu_attribute_p (parser)\n+\t       && cp_lexer_nth_token_is (parser->lexer, 2, CPP_OPEN_PAREN))\n+\t  {\n+\t    cp_lexer_consume_token (parser->lexer);\n+\t    if (cp_parser_cache_group (parser, CPP_CLOSE_PAREN, /*depth=*/0))\n+\t      break;\n+\t  }\n+    }\n+\n   /* Handle function try blocks.  */\n   if (cp_lexer_next_token_is_keyword (parser->lexer, RID_TRY))\n-    cp_lexer_consume_token (parser->lexer);\n+    {\n+      cp_lexer_consume_token (parser->lexer);\n+      function_try_block = true;\n+    }\n   /* We can have braced-init-list mem-initializers before the fn body.  */\n   if (cp_lexer_next_token_is (parser->lexer, CPP_COLON))\n     {\n@@ -26085,8 +26120,9 @@ cp_parser_save_member_function_body (cp_parser* parser,\n     }\n   cp_parser_cache_group (parser, CPP_CLOSE_BRACE, /*depth=*/0);\n   /* Handle function try blocks.  */\n-  while (cp_lexer_next_token_is_keyword (parser->lexer, RID_CATCH))\n-    cp_parser_cache_group (parser, CPP_CLOSE_BRACE, /*depth=*/0);\n+  if (function_try_block)\n+    while (cp_lexer_next_token_is_keyword (parser->lexer, RID_CATCH))\n+      cp_parser_cache_group (parser, CPP_CLOSE_BRACE, /*depth=*/0);\n   last = parser->lexer->next_token;\n \n   /* Save away the inline definition; we will process it when the"}, {"sha": "5ea90bf95b93bc53f58ca5ff47c76ce2e0f3dc48", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7419f4417a33ff9143317794aa985f7681d1e2a0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7419f4417a33ff9143317794aa985f7681d1e2a0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7419f4417a33ff9143317794aa985f7681d1e2a0", "patch": "@@ -1,5 +1,9 @@\n 2016-07-20  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR c++/71909\n+\t* g++.dg/parse/pr71909.C: New test.\n+\t* g++.dg/tm/pr71909.C: New test.\n+\n \tPR c++/50060\n \t* g++.dg/cpp0x/constexpr-50060.C: New test.\n \t* g++.dg/cpp1y/constexpr-50060.C: New test."}, {"sha": "ee592bf8e2b263f86afc52a1fa595b5a4d3743af", "filename": "gcc/testsuite/g++.dg/parse/pr71909.C", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7419f4417a33ff9143317794aa985f7681d1e2a0/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fpr71909.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7419f4417a33ff9143317794aa985f7681d1e2a0/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fpr71909.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fpr71909.C?ref=7419f4417a33ff9143317794aa985f7681d1e2a0", "patch": "@@ -0,0 +1,22 @@\n+// PR c++/71909\n+// { dg-do compile }\n+\n+struct S\n+{\n+  S () try : m (0) {}\n+  catch (...) {}\n+  void foo () try {}\n+  catch (int) {}\n+  catch (...) {}\n+  int m;\n+};\n+\n+struct T\n+{\n+  T () : m (0) {}\n+  catch (...) {}\t// { dg-error \"expected unqualified-id before\" }\n+  void foo () {}\n+  catch (int) {}\t// { dg-error \"expected unqualified-id before\" }\n+  catch (...) {}\t// { dg-error \"expected unqualified-id before\" }\n+  int m;\n+};"}, {"sha": "941f23151701a1ffdd45033394718bbe231cd40b", "filename": "gcc/testsuite/g++.dg/tm/pr71909.C", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7419f4417a33ff9143317794aa985f7681d1e2a0/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftm%2Fpr71909.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7419f4417a33ff9143317794aa985f7681d1e2a0/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftm%2Fpr71909.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftm%2Fpr71909.C?ref=7419f4417a33ff9143317794aa985f7681d1e2a0", "patch": "@@ -0,0 +1,18 @@\n+// PR c++/71909\n+// { dg-do compile { target c++11 } }\n+// { dg-options \"-fgnu-tm\" }\n+\n+struct S\n+{\n+  S () __transaction_atomic [[outer]] try : m {0} {} catch (int) {} catch (...) {}\n+  int m;\n+};\n+\n+struct T\n+{\n+  T () __transaction_atomic __attribute__((outer)) try : m {0} {} catch (int) {} catch (...) {}\n+  int m;\n+};\n+\n+void foo () __transaction_atomic [[outer]] try {} catch (int) {} catch (...) {}\n+void bar () __transaction_atomic __attribute__((outer)) try {} catch (int) {} catch (...) {}"}]}