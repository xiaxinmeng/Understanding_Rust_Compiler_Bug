{"sha": "b9dc9ef63fc7bf742f97e1b9618d5818f3383c73", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjlkYzllZjYzZmM3YmY3NDJmOTdlMWI5NjE4ZDU4MThmMzM4M2M3Mw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2016-08-04T16:06:22Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2016-08-04T16:06:22Z"}, "message": "PR c++/72415 - member template with fold-expression constraint\n\n\t* pt.c (tsubst_pack_expansion): Pull a single pack expansion out\n\tof the TREE_VEC.\n\nFrom-SVN: r239138", "tree": {"sha": "ca5567929a6a7043464182096b33a9b9d4069a6f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ca5567929a6a7043464182096b33a9b9d4069a6f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b9dc9ef63fc7bf742f97e1b9618d5818f3383c73", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9dc9ef63fc7bf742f97e1b9618d5818f3383c73", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b9dc9ef63fc7bf742f97e1b9618d5818f3383c73", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9dc9ef63fc7bf742f97e1b9618d5818f3383c73/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6a7b92036be210a11657ce97a936a8548c425341", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a7b92036be210a11657ce97a936a8548c425341", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a7b92036be210a11657ce97a936a8548c425341"}], "stats": {"total": 31, "additions": 31, "deletions": 0}, "files": [{"sha": "573ece8bbad7fdbee6fdaa0b15cd600ab6d1980d", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9dc9ef63fc7bf742f97e1b9618d5818f3383c73/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9dc9ef63fc7bf742f97e1b9618d5818f3383c73/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=b9dc9ef63fc7bf742f97e1b9618d5818f3383c73", "patch": "@@ -1,5 +1,9 @@\n 2016-08-04  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/72415\n+\t* pt.c (tsubst_pack_expansion): Pull a single pack expansion out\n+\tof the TREE_VEC.\n+\n \t* cp-tree.h (TYPE_UNNAMED_P): Rename from TYPE_ANONYMOUS_P.\n \t(TYPE_WAS_UNNAMED): Rename from TYPE_WAS_ANONYMOUS.\n \t* class.c, decl.c, decl2.c, error.c, lambda.c, mangle.c,"}, {"sha": "60c87e001c05c8a7e2438994e6d32568b1de83ab", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9dc9ef63fc7bf742f97e1b9618d5818f3383c73/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9dc9ef63fc7bf742f97e1b9618d5818f3383c73/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=b9dc9ef63fc7bf742f97e1b9618d5818f3383c73", "patch": "@@ -11160,6 +11160,12 @@ tsubst_pack_expansion (tree t, tree args, tsubst_flags_t complain,\n       local_specializations = saved_local_specializations;\n     }\n   \n+  /* If the dependent pack arguments were such that we end up with only a\n+     single pack expansion again, there's no need to keep it in a TREE_VEC.  */\n+  if (len == 1 && TREE_CODE (result) == TREE_VEC\n+      && PACK_EXPANSION_P (TREE_VEC_ELT (result, 0)))\n+    return TREE_VEC_ELT (result, 0);\n+\n   return result;\n }\n "}, {"sha": "c186a1837625d85df3eb1bb1610edaea9d14420a", "filename": "gcc/testsuite/g++.dg/concepts/memfun2.C", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9dc9ef63fc7bf742f97e1b9618d5818f3383c73/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fmemfun2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9dc9ef63fc7bf742f97e1b9618d5818f3383c73/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fmemfun2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fmemfun2.C?ref=b9dc9ef63fc7bf742f97e1b9618d5818f3383c73", "patch": "@@ -0,0 +1,21 @@\n+// PR c++/72415\n+// { dg-options \"-std=c++1z -fconcepts\" }\n+\n+template<int... Indices>\n+struct indices {};\n+\n+template<typename Dummy>\n+struct foo_type {\n+    template<int... Indices>\n+    static void impl(indices<Indices...>)\n+        requires (... && (Indices, true));\n+\n+    static auto caller()\n+    { return impl(indices<0, 1, 2> {}); }\n+};\n+\n+int main()\n+{\n+    // internal compiler error: in satisfy_predicate_constraint, at cp/constraint.cc:2013\n+    foo_type<void>::caller();\n+}"}]}