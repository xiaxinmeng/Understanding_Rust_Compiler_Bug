{"sha": "24fe22c9d4de9a37e5d295b357aee47b2c725def", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjRmZTIyYzlkNGRlOWEzN2U1ZDI5NWIzNTdhZWU0N2IyYzcyNWRlZg==", "commit": {"author": {"name": "Ulrich Weigand", "email": "uweigand@de.ibm.com", "date": "2003-10-15T17:10:20Z"}, "committer": {"name": "Ulrich Weigand", "email": "uweigand@gcc.gnu.org", "date": "2003-10-15T17:10:20Z"}, "message": "config.gcc (s390x-ibm-tpf*): New target.\n\n\t* config.gcc (s390x-ibm-tpf*): New target.\n\t* doc/invoke.texi: Document it.\n\t* config/s390/t-tpf: New file.\n\t* config/s390/tpf.h: New file.\n\nFrom-SVN: r72529", "tree": {"sha": "f8fe5d530777f658b1282c1fa8183ba0aac2e171", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f8fe5d530777f658b1282c1fa8183ba0aac2e171"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/24fe22c9d4de9a37e5d295b357aee47b2c725def", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/24fe22c9d4de9a37e5d295b357aee47b2c725def", "html_url": "https://github.com/Rust-GCC/gccrs/commit/24fe22c9d4de9a37e5d295b357aee47b2c725def", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/24fe22c9d4de9a37e5d295b357aee47b2c725def/comments", "author": null, "committer": null, "parents": [{"sha": "55741da6e2ddfa04214997566181248606b3bc65", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55741da6e2ddfa04214997566181248606b3bc65", "html_url": "https://github.com/Rust-GCC/gccrs/commit/55741da6e2ddfa04214997566181248606b3bc65"}], "stats": {"total": 140, "additions": 140, "deletions": 0}, "files": [{"sha": "20934123eed9b4dcd05e9db97f55041680befdbf", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24fe22c9d4de9a37e5d295b357aee47b2c725def/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24fe22c9d4de9a37e5d295b357aee47b2c725def/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=24fe22c9d4de9a37e5d295b357aee47b2c725def", "patch": "@@ -1,3 +1,10 @@\n+2003-10-15  Ulrich Weigand  <uweigand@de.ibm.com>\n+\n+\t* config.gcc (s390x-ibm-tpf*): New target.\n+\t* doc/invoke.texi: Document it.\n+\t* config/s390/t-tpf: New file.\n+\t* config/s390/tpf.h: New file.\n+\n 2003-10-15  Hans-Peter Nilsson  <hp@axis.com>\n \n \tPR target/12598"}, {"sha": "907d4802dda40441e68590b66b1a1e61d894abe1", "filename": "gcc/config.gcc", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24fe22c9d4de9a37e5d295b357aee47b2c725def/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24fe22c9d4de9a37e5d295b357aee47b2c725def/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=24fe22c9d4de9a37e5d295b357aee47b2c725def", "patch": "@@ -1761,6 +1761,14 @@ s390x-*-linux*)\n \tout_file=s390/s390.c\n \ttmake_file=\"t-slibgcc-elf-ver t-linux s390/t-crtstuff s390/t-linux64\"\n \t;;\n+s390x-ibm-tpf*)\n+\ttm_file=\"s390/s390x.h s390/s390.h dbxelf.h elfos.h svr4.h s390/tpf.h\"\n+\ttm_p_file=s390/s390-protos.h\n+\tmd_file=s390/s390.md\n+\textra_modes=s390/s390-modes.def\n+\tout_file=s390/s390.c\n+\ttmake_file=\"t-slibgcc-elf-ver s390/t-crtstuff s390/t-tpf\"\n+\t;;\n sh-*-elf* | sh[2346l]*-*-elf* | sh*-*-kaos*)\n \ttmake_file=\"sh/t-sh sh/t-elf\"\n \tcase ${target} in"}, {"sha": "c04d5622d6c97293e1f1b689b3664d2bb8e9061e", "filename": "gcc/config/s390/t-tpf", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24fe22c9d4de9a37e5d295b357aee47b2c725def/gcc%2Fconfig%2Fs390%2Ft-tpf", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24fe22c9d4de9a37e5d295b357aee47b2c725def/gcc%2Fconfig%2Fs390%2Ft-tpf", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Ft-tpf?ref=24fe22c9d4de9a37e5d295b357aee47b2c725def", "patch": "@@ -0,0 +1,13 @@\n+# Compile crtbeginS.o and crtendS.o with pic.\n+CRTSTUFF_T_CFLAGS_S = $(CRTSTUFF_T_CFLAGS) -fPIC\n+# Compile libgcc2.a with pic.\n+TARGET_LIBGCC2_CFLAGS = -fPIC\n+\n+# Override t-slibgcc-elf-ver to export some libgcc symbols with\n+# the symbol versions that glibc used.\n+SHLIB_MAPFILES += $(srcdir)/config/s390/libgcc-glibc.ver\n+\n+# Use unwind-dw2-fde-glibc\n+LIB2ADDEH = $(srcdir)/unwind-dw2.c $(srcdir)/unwind-dw2-fde-glibc.c \\\n+  $(srcdir)/unwind-sjlj.c $(srcdir)/gthr-gnat.c $(srcdir)/unwind-c.c\n+LIB2ADDEHDEP = unwind.inc unwind-dw2-fde.h unwind-dw2-fde.c gthr-gnat.c"}, {"sha": "ce984e64003a7e4b9057071ae9394acc58c2bc89", "filename": "gcc/config/s390/tpf.h", "status": "added", "additions": 112, "deletions": 0, "changes": 112, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24fe22c9d4de9a37e5d295b357aee47b2c725def/gcc%2Fconfig%2Fs390%2Ftpf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24fe22c9d4de9a37e5d295b357aee47b2c725def/gcc%2Fconfig%2Fs390%2Ftpf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Ftpf.h?ref=24fe22c9d4de9a37e5d295b357aee47b2c725def", "patch": "@@ -0,0 +1,112 @@\n+/* Definitions for target OS TPF for GNU compiler, for IBM S/390 hardware\n+   Copyright (C) 2003 Free Software Foundation, Inc.\n+   Contributed by P.J. Darcy (darcypj@us.ibm.com),\n+                  Hartmut Penner (hpenner@de.ibm.com), and\n+                  Ulrich Weigand (uweigand@de.ibm.com).\n+\n+This file is part of GCC.\n+\n+GCC is free software; you can redistribute it and/or modify it under\n+the terms of the GNU General Public License as published by the Free\n+Software Foundation; either version 2, or (at your option) any later\n+version.\n+\n+GCC is distributed in the hope that it will be useful, but WITHOUT ANY\n+WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GCC; see the file COPYING.  If not, write to the Free\n+Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n+02111-1307, USA.  */\n+\n+#ifndef _TPF_H\n+#define _TPF_H\n+\n+/* TPF wants the following macros defined/undefined as follows.  */\n+#undef ASM_APP_ON\n+#define ASM_APP_ON \"#APP\\n\"\n+#undef ASM_APP_OFF\n+#define ASM_APP_OFF \"#NO_APP\\n\"\n+#define NO_IMPLICIT_EXTERN_C\n+#define TARGET_HAS_F_SETLKW\n+#undef MD_EXEC_PREFIX\n+#undef MD_STARTFILE_PREFIX\n+\n+#undef  SIZE_TYPE\n+#define SIZE_TYPE (\"long unsigned int\")\n+#undef  PTRDIFF_TYPE\n+#define PTRDIFF_TYPE (\"long int\")\n+#undef  WCHAR_TYPE\n+#define WCHAR_TYPE \"int\"\n+#undef  WCHAR_TYPE_SIZE\n+#define WCHAR_TYPE_SIZE 32\n+\n+\n+/* Basic record keeping for the TPF OS name.  */\n+#undef  TARGET_VERSION\n+#define TARGET_VERSION fprintf (stderr, \" (TPF: zSeries)\");\n+\n+/* TPF OS specific stack-pointer offset.  */\n+#undef STACK_POINTER_OFFSET\n+#define STACK_POINTER_OFFSET \t\t280\n+\n+/* When building for TPF, set a generic default target that is 64 bits.  */\n+#undef TARGET_DEFAULT\n+#define TARGET_DEFAULT             0x33\n+\n+/* TPF OS specific compiler settings.  */\n+#undef TARGET_OS_CPP_BUILTINS\n+#define TARGET_OS_CPP_BUILTINS()                \\\n+  do                                            \\\n+    {                                           \\\n+      builtin_define_std (\"tpf\");               \\\n+      builtin_assert (\"system=tpf\");            \\\n+      builtin_define (\"__ELF__\");               \\\n+      if (flag_pic)                             \\\n+        {                                       \\\n+          builtin_define (\"__PIC__\");           \\\n+          builtin_define (\"__pic__\");           \\\n+        }                                       \\\n+    }                                           \\\n+  while (0)\n+\n+\n+/* Make TPF specific spec file settings here.  */\n+\n+#undef  STARTFILE_SPEC\n+#define STARTFILE_SPEC \\\n+  \"%{!shared: \\\n+     %{pg:gcrt1.o%s} %{!pg:%{p:gcrt1.o%s} \\\n+                       %{!p:%{profile:gcrt1.o%s} \\\n+                         %{!profile:crt1.o%s}}}} \\\n+   crti.o%s %{static:crtbeginT.o%s} \\\n+   %{!static:%{!shared:crtbegin.o%s} %{shared:crtbeginS.o%s}}\"\n+\n+#undef  ENDFILE_SPEC\n+#define ENDFILE_SPEC \\\n+  \"%{!shared:crtend.o%s} %{shared:crtendS.o%s} crtn.o%s\"\n+\n+/* The GNU C++ standard library requires that these macros be defined.  */\n+#undef CPLUSPLUS_CPP_SPEC\n+#define CPLUSPLUS_CPP_SPEC \"-D_GNU_SOURCE %(cpp)\"\n+\n+#undef  LIB_SPEC\n+#define LIB_SPEC \"%{pthread:-lpthread} -lc\"\n+\n+#undef TARGET_C99_FUNCTIONS\n+#define TARGET_C99_FUNCTIONS 1\n+\n+#undef LINK_SPEC\n+#define LINK_SPEC \\\n+  \"-m elf64_s390 \\\n+   %{shared:-shared} \\\n+   %{!shared: \\\n+      %{static:-static} \\\n+      %{!static: \\\n+        %{rdynamic:-export-dynamic} \\\n+        %{!dynamic-linker:-dynamic-linker /lib/ld64.so}}}\"\n+\n+#endif /* ! _TPF_H */\n+"}]}