{"sha": "6ad05bcc3e3c5f80fac077423dd222cf850f9096", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmFkMDViY2MzZTNjNWY4MGZhYzA3NzQyM2RkMjIyY2Y4NTBmOTA5Ng==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2018-02-07T10:48:39Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2018-02-07T10:48:39Z"}, "message": "i386: Mask out the CF_SET bit for -fcf-protection check\n\nSince ix86_option_override_internal sets the CF_SET bit in\nflag_cf_protection and it can be called more than once via pragma,\nwe need to mask out the CF_SET bit when checking flag_cf_protection.\n\n\tPR target/84248\n\t* config/i386/i386.c (ix86_option_override_internal): Mask out\n\tthe CF_SET bit when checking -fcf-protection.\n\nFrom-SVN: r257444", "tree": {"sha": "fb65b769279b39cfaf9eea29fe3a481f48e027b5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fb65b769279b39cfaf9eea29fe3a481f48e027b5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6ad05bcc3e3c5f80fac077423dd222cf850f9096", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ad05bcc3e3c5f80fac077423dd222cf850f9096", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6ad05bcc3e3c5f80fac077423dd222cf850f9096", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ad05bcc3e3c5f80fac077423dd222cf850f9096/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c31bc4ac378f56593caae12bba086a98d002bb64", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c31bc4ac378f56593caae12bba086a98d002bb64", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c31bc4ac378f56593caae12bba086a98d002bb64"}], "stats": {"total": 17, "additions": 11, "deletions": 6}, "files": [{"sha": "51c45c0532000d903cf1cabbe45212e8b29b3b91", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ad05bcc3e3c5f80fac077423dd222cf850f9096/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ad05bcc3e3c5f80fac077423dd222cf850f9096/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6ad05bcc3e3c5f80fac077423dd222cf850f9096", "patch": "@@ -1,3 +1,9 @@\n+2018-02-07  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/84248\n+\t* config/i386/i386.c (ix86_option_override_internal): Mask out\n+\tthe CF_SET bit when checking -fcf-protection.\n+\n 2018-02-07  Tom de Vries  <tom@codesourcery.com>\n \n \tPR libgomp/84217\n@@ -165,7 +171,6 @@\n \t%1, %0<mask_scalar_operand4>|%0<mask_scalar_operand4>, %1,\n \t%2<round_saeonly_scalar_mask_op4>, %3}\"): ... this.\n \n->>>>>>> .r257416\n 2018-02-02  Andrew Jenner  <andrew@codesourcery.com>\n \n \t* config/powerpcspe/powerpcspe.opt: Add Undocumented to irrelevant"}, {"sha": "fc3d6f0aebcaec46408726bd668e98a351456bf8", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ad05bcc3e3c5f80fac077423dd222cf850f9096/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ad05bcc3e3c5f80fac077423dd222cf850f9096/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=6ad05bcc3e3c5f80fac077423dd222cf850f9096", "patch": "@@ -4909,12 +4909,12 @@ ix86_option_override_internal (bool main_args_p,\n       = build_target_option_node (opts);\n \n   /* Do not support control flow instrumentation if CET is not enabled.  */\n-  if (opts->x_flag_cf_protection != CF_NONE)\n+  cf_protection_level cf_protection\n+    = (cf_protection_level) (opts->x_flag_cf_protection & ~CF_SET);\n+  if (cf_protection != CF_NONE)\n     {\n-      switch (flag_cf_protection)\n+      switch (cf_protection)\n \t{\n-\tcase CF_NONE:\n-\t  break;\n \tcase CF_BRANCH:\n \t  if (! TARGET_IBT_P (opts->x_ix86_isa_flags2))\n \t    {\n@@ -4949,7 +4949,7 @@ ix86_option_override_internal (bool main_args_p,\n \t}\n \n       opts->x_flag_cf_protection =\n-\t(cf_protection_level) (opts->x_flag_cf_protection | CF_SET);\n+\t(cf_protection_level) (cf_protection | CF_SET);\n     }\n \n   if (ix86_tune_features [X86_TUNE_AVOID_128FMA_CHAINS])"}]}