{"sha": "4e510a0a2baa41a22a7acef872cd309ea78ef737", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGU1MTBhMGEyYmFhNDFhMjJhN2FjZWY4NzJjZDMwOWVhNzhlZjczNw==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2020-02-28T19:26:02Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-06-09T08:09:05Z"}, "message": "[Ada] Ada2020 AI12-0282: Shared variable control aspects in generics\n\n2020-06-09  Ed Schonberg  <schonberg@adacore.com>\n\ngcc/ada/\n\n\t* sem_ch12.adb (Check_Shared_Variable_Control_Aspects): Require\n\texact match between formal and actual for aspects Atomic and\n\tVolatile only for formal derived types.", "tree": {"sha": "a0ba3a8fec8810c2f6bfc19409db228f37214dd5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a0ba3a8fec8810c2f6bfc19409db228f37214dd5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4e510a0a2baa41a22a7acef872cd309ea78ef737", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e510a0a2baa41a22a7acef872cd309ea78ef737", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4e510a0a2baa41a22a7acef872cd309ea78ef737", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e510a0a2baa41a22a7acef872cd309ea78ef737/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c4609e75ef41546d7b7373cc3d6d0ba9fa15dfcd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4609e75ef41546d7b7373cc3d6d0ba9fa15dfcd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c4609e75ef41546d7b7373cc3d6d0ba9fa15dfcd"}], "stats": {"total": 23, "additions": 21, "deletions": 2}, "files": [{"sha": "caf423a09e5f962a3b00701a7404773afd1a90a1", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 21, "deletions": 2, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e510a0a2baa41a22a7acef872cd309ea78ef737/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e510a0a2baa41a22a7acef872cd309ea78ef737/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=4e510a0a2baa41a22a7acef872cd309ea78ef737", "patch": "@@ -12394,19 +12394,38 @@ package body Sem_Ch12 is\n \n       --  Ada 2020: Verify that shared variable control aspects (RM C.6)\n       --  that may be specified for the formal are obeyed by the actual.\n+      --  If the fornal is a derived type the aspect specifications must match.\n+      --  NOTE: AI12-0282 implies that matching of aspects is required between\n+      --  formal and actual in all cases, but this is too restrictive.\n+      --  In particular it violates a language design rule: a limited private\n+      --  indefinite formal can be matched by any actual. The current code\n+      --  reflects an older and more permissve version of RM C.6 (12/5).\n \n       procedure Check_Shared_Variable_Control_Aspects is\n       begin\n          if Ada_Version >= Ada_2020 then\n-            if Is_Atomic (A_Gen_T) /= Is_Atomic (Act_T) then\n+            if Is_Atomic (A_Gen_T) and then not Is_Atomic (Act_T) then\n+               Error_Msg_NE\n+                  (\"actual for& must have Atomic aspect\", Actual, A_Gen_T);\n+\n+            elsif Is_Derived_Type (A_Gen_T)\n+              and then Is_Atomic (A_Gen_T) /= Is_Atomic (Act_T)\n+            then\n                Error_Msg_NE\n                   (\"actual for& has different Atomic aspect\", Actual, A_Gen_T);\n             end if;\n \n-            if Is_Volatile (A_Gen_T) /= Is_Volatile (Act_T) then\n+            if Is_Volatile (A_Gen_T) and then not Is_Volatile (Act_T) then\n                Error_Msg_NE\n                   (\"actual for& has different Volatile aspect\",\n                     Actual, A_Gen_T);\n+\n+            elsif Is_Derived_Type (A_Gen_T)\n+              and then Is_Volatile (A_Gen_T) /= Is_Volatile (Act_T)\n+            then\n+               Error_Msg_NE\n+                  (\"actual for& has different Volatile aspect\",\n+                     Actual, A_Gen_T);\n             end if;\n \n             --  We assume that an array type whose atomic component type"}]}