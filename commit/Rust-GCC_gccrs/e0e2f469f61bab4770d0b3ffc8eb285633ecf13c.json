{"sha": "e0e2f469f61bab4770d0b3ffc8eb285633ecf13c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTBlMmY0NjlmNjFiYWI0NzcwZDBiM2ZmYzhlYjI4NTYzM2VjZjEzYw==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1993-03-16T20:11:12Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1993-03-16T20:11:12Z"}, "message": "(grokdeclarator, ARRARY_REF): If exern, then end\ntemporary allocation before building type.\n\nFrom-SVN: r3760", "tree": {"sha": "2263434996701a9d793e6898bb87f594ca267880", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2263434996701a9d793e6898bb87f594ca267880"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e0e2f469f61bab4770d0b3ffc8eb285633ecf13c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0e2f469f61bab4770d0b3ffc8eb285633ecf13c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e0e2f469f61bab4770d0b3ffc8eb285633ecf13c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0e2f469f61bab4770d0b3ffc8eb285633ecf13c/comments", "author": null, "committer": null, "parents": [{"sha": "fe1f7f2437901f1aed2d959ffcda437fd95fa758", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe1f7f2437901f1aed2d959ffcda437fd95fa758", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fe1f7f2437901f1aed2d959ffcda437fd95fa758"}], "stats": {"total": 8, "additions": 8, "deletions": 0}, "files": [{"sha": "22056c9a7e01bcd8bbb3f9a7649bf183e06acc49", "filename": "gcc/c-decl.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0e2f469f61bab4770d0b3ffc8eb285633ecf13c/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0e2f469f61bab4770d0b3ffc8eb285633ecf13c/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=e0e2f469f61bab4770d0b3ffc8eb285633ecf13c", "patch": "@@ -4033,6 +4033,8 @@ grokdeclarator (declarator, declspecs, decl_context, initialized)\n \t{\n \t  register tree itype = NULL_TREE;\n \t  register tree size = TREE_OPERAND (declarator, 1);\n+\t  /* An uninitialized decl with `extern' is a reference.  */\n+\t  int extern_ref = !initialized && (specbits & (1 << (int) RID_EXTERN));\n \n \t  declarator = TREE_OPERAND (declarator, 0);\n \n@@ -4056,6 +4058,12 @@ grokdeclarator (declarator, declspecs, decl_context, initialized)\n \t  if (type == error_mark_node)\n \t    continue;\n \n+\t  /* If this is a block level extern, it must live past the end\n+\t     of the function so that we can check it against other extern\n+\t     declarations (IDENTIFIER_LIMBO_VALUE).  */\n+\t  if (extern_ref && allocation_temporary_p ())\n+\t    end_temporary_allocation ();\n+\n \t  /* If size was specified, set ITYPE to a range-type for that size.\n \t     Otherwise, ITYPE remains null.  finish_decl may figure it out\n \t     from an initial value.  */"}]}