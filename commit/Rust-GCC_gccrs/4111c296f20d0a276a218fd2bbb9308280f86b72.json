{"sha": "4111c296f20d0a276a218fd2bbb9308280f86b72", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDExMWMyOTZmMjBkMGEyNzZhMjE4ZmQyYmJiOTMwODI4MGY4NmI3Mg==", "commit": {"author": {"name": "Oleg Endo", "email": "olegendo@gcc.gnu.org", "date": "2012-07-16T21:16:52Z"}, "committer": {"name": "Oleg Endo", "email": "olegendo@gcc.gnu.org", "date": "2012-07-16T21:16:52Z"}, "message": "sh.h (CONST_OK_FOR_I06): Delete.\n\n\t* config/sh/sh.h (CONST_OK_FOR_I06): Delete.\n\t(CONST_OK_FOR_I10): Move macro to ...\n\t* config/sh/sh.c: ... here.\n\t(sh_legitimate_index_p): Use satisfies_constraint_I06 instead of\n\tCONST_OK_FOR_I06.\n\nFrom-SVN: r189551", "tree": {"sha": "25e826d36279ac2dd1fcdec8a51a7e5085f314c1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/25e826d36279ac2dd1fcdec8a51a7e5085f314c1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4111c296f20d0a276a218fd2bbb9308280f86b72", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4111c296f20d0a276a218fd2bbb9308280f86b72", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4111c296f20d0a276a218fd2bbb9308280f86b72", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4111c296f20d0a276a218fd2bbb9308280f86b72/comments", "author": null, "committer": null, "parents": [{"sha": "7bd3f65f01bbacf522d7e437be4b521fe0f3fb46", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7bd3f65f01bbacf522d7e437be4b521fe0f3fb46", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7bd3f65f01bbacf522d7e437be4b521fe0f3fb46"}], "stats": {"total": 17, "additions": 12, "deletions": 5}, "files": [{"sha": "f9fd72364bbdfe512e0fc2ef24c34aadeced3928", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4111c296f20d0a276a218fd2bbb9308280f86b72/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4111c296f20d0a276a218fd2bbb9308280f86b72/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4111c296f20d0a276a218fd2bbb9308280f86b72", "patch": "@@ -1,3 +1,11 @@\n+2012-07-16  Oleg Endo  <olegendo@gcc.gnu.org>\n+\n+\t* config/sh/sh.h (CONST_OK_FOR_I06): Delete.\n+\t(CONST_OK_FOR_I10): Move macro to ...\n+\t* config/sh/sh.c: ... here.\n+\t(sh_legitimate_index_p): Use satisfies_constraint_I06 instead of\n+\tCONST_OK_FOR_I06.\n+\n 2012-07-16  Oleg Endo  <olegendo@gcc.gnu.org>\n \n \t* config/sh/sh.md: Delete mov related define_peephole patterns."}, {"sha": "72043a06f8decb685f122daf37c63ec781830052", "filename": "gcc/config/sh/sh.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4111c296f20d0a276a218fd2bbb9308280f86b72/gcc%2Fconfig%2Fsh%2Fsh.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4111c296f20d0a276a218fd2bbb9308280f86b72/gcc%2Fconfig%2Fsh%2Fsh.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.c?ref=4111c296f20d0a276a218fd2bbb9308280f86b72", "patch": "@@ -63,6 +63,9 @@ int code_for_indirect_jump_scratch = CODE_FOR_indirect_jump_scratch;\n #define LSW (TARGET_LITTLE_ENDIAN ? 0 : 1)\n \n /* These are some macros to abstract register modes.  */\n+#define CONST_OK_FOR_I10(VALUE) (((HOST_WIDE_INT)(VALUE)) >= -512 \\\n+\t\t\t\t && ((HOST_WIDE_INT)(VALUE)) <= 511)\n+\n #define CONST_OK_FOR_ADD(size) \\\n   (TARGET_SHMEDIA ? CONST_OK_FOR_I10 (size) : CONST_OK_FOR_I08 (size))\n #define GEN_MOV (*(TARGET_SHMEDIA64 ? gen_movdi : gen_movsi))\n@@ -9776,7 +9779,7 @@ sh_legitimate_index_p (enum machine_mode mode, rtx op, bool consider_sh2a,\n \n       /* Check if this is the address of an unaligned load / store.  */\n       if (mode == VOIDmode)\n-\treturn CONST_OK_FOR_I06 (INTVAL (op));\n+\treturn satisfies_constraint_I06 (op);\n \n       size = GET_MODE_SIZE (mode);\n       return (!(INTVAL (op) & (size - 1))"}, {"sha": "3187f35581a4392da9228928b7cee60ef5562390", "filename": "gcc/config/sh/sh.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4111c296f20d0a276a218fd2bbb9308280f86b72/gcc%2Fconfig%2Fsh%2Fsh.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4111c296f20d0a276a218fd2bbb9308280f86b72/gcc%2Fconfig%2Fsh%2Fsh.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.h?ref=4111c296f20d0a276a218fd2bbb9308280f86b72", "patch": "@@ -1213,12 +1213,8 @@ extern enum reg_class regno_reg_class[FIRST_PSEUDO_REGISTER];\n \f\n /* Defines for sh.md and constraints.md.  */\n \n-#define CONST_OK_FOR_I06(VALUE) (((HOST_WIDE_INT)(VALUE)) >= -32 \\\n-\t\t\t\t && ((HOST_WIDE_INT)(VALUE)) <= 31)\n #define CONST_OK_FOR_I08(VALUE) (((HOST_WIDE_INT)(VALUE))>= -128 \\\n \t\t\t\t && ((HOST_WIDE_INT)(VALUE)) <= 127)\n-#define CONST_OK_FOR_I10(VALUE) (((HOST_WIDE_INT)(VALUE)) >= -512 \\\n-\t\t\t\t && ((HOST_WIDE_INT)(VALUE)) <= 511)\n #define CONST_OK_FOR_I16(VALUE) (((HOST_WIDE_INT)(VALUE)) >= -32768 \\\n \t\t\t\t && ((HOST_WIDE_INT)(VALUE)) <= 32767)\n "}]}