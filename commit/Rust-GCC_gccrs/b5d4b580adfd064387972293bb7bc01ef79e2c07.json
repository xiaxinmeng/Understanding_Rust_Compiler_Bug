{"sha": "b5d4b580adfd064387972293bb7bc01ef79e2c07", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjVkNGI1ODBhZGZkMDY0Mzg3OTcyMjkzYmI3YmMwMWVmNzllMmMwNw==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2011-01-17T09:14:41Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2011-01-17T09:14:41Z"}, "message": "re PR fortran/46817 (Missing copyright header in libquadmath/*.[hc])\n\n2011-01-17  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/46817\n        * quadmath-imp.h: Refer to libquadmath not ot libiberty,\n        bump copyright year and use /**/ instead of // comments.\n        * quadmath.h: Ditto.\n        * quadmath-weak.h: Ditto.\n        * quadmath_io.c: Ditto.\n\nFrom-SVN: r168892", "tree": {"sha": "d6023e3067bbff709ecb4a6249eb6dc101af6ad3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d6023e3067bbff709ecb4a6249eb6dc101af6ad3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b5d4b580adfd064387972293bb7bc01ef79e2c07", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5d4b580adfd064387972293bb7bc01ef79e2c07", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b5d4b580adfd064387972293bb7bc01ef79e2c07", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5d4b580adfd064387972293bb7bc01ef79e2c07/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b7ae9eb502d944efe771cbff38560ba8e6e3a68f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b7ae9eb502d944efe771cbff38560ba8e6e3a68f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b7ae9eb502d944efe771cbff38560ba8e6e3a68f"}], "stats": {"total": 71, "additions": 40, "deletions": 31}, "files": [{"sha": "f5308db895c1d39bf8d9d5b01e6b675fc759339e", "filename": "libquadmath/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5d4b580adfd064387972293bb7bc01ef79e2c07/libquadmath%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5d4b580adfd064387972293bb7bc01ef79e2c07/libquadmath%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libquadmath%2FChangeLog?ref=b5d4b580adfd064387972293bb7bc01ef79e2c07", "patch": "@@ -1,3 +1,12 @@\n+2011-01-17  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/46817\n+\t* quadmath-imp.h: Refer to libquadmath not ot libiberty,\n+\tbump copyright year and use /**/ instead of // comments.\n+\t* quadmath.h: Ditto.\n+\t* quadmath-weak.h: Ditto.\n+\t* quadmath_io.c: Ditto.\n+\n 2011-01-16  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR libfortran/47322"}, {"sha": "db34a92f08f39a00131978114e1d7829f8aecc18", "filename": "libquadmath/quadmath-imp.h", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5d4b580adfd064387972293bb7bc01ef79e2c07/libquadmath%2Fquadmath-imp.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5d4b580adfd064387972293bb7bc01ef79e2c07/libquadmath%2Fquadmath-imp.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libquadmath%2Fquadmath-imp.h?ref=b5d4b580adfd064387972293bb7bc01ef79e2c07", "patch": "@@ -1,20 +1,20 @@\n /* GCC Quad-Precision Math Library\n-   Copyright (C) 2010 Free Software Foundation, Inc.\n+   Copyright (C) 2010, 2011 Free Software Foundation, Inc.\n    Written by Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n \n-This file is part of the libiberty library.\n-Libiberty is free software; you can redistribute it and/or\n+This file is part of the libquadmath library.\n+Libquadmath is free software; you can redistribute it and/or\n modify it under the terms of the GNU Library General Public\n License as published by the Free Software Foundation; either\n version 2 of the License, or (at your option) any later version.\n \n-Libiberty is distributed in the hope that it will be useful,\n+Libquadmath is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n Library General Public License for more details.\n \n You should have received a copy of the GNU Library General Public\n-License along with libiberty; see the file COPYING.LIB.  If\n+License along with libquadmath; see the file COPYING.LIB.  If\n not, write to the Free Software Foundation, Inc., 51 Franklin Street - Fifth Floor,\n Boston, MA 02110-1301, USA.  */\n \n@@ -27,7 +27,7 @@ Boston, MA 02110-1301, USA.  */\n #include \"config.h\"\n \n \n-// Prototypes for internal functions\n+/* Prototypes for internal functions.  */\n extern int32_t __quadmath_rem_pio2q (__float128, __float128 *);\n extern void __quadmath_kernel_sincosq (__float128, __float128, __float128 *,\n \t\t\t\t       __float128 *, int);\n@@ -36,13 +36,13 @@ extern __float128 __quadmath_kernel_cosq (__float128, __float128);\n \n \n \n-// Frankly, if you have __float128, you have 64-bit integers, right?\n+/* Frankly, if you have __float128, you have 64-bit integers, right?  */\n #ifndef UINT64_C\n # error \"No way!\"\n #endif\n \n \n-// Main union type we use to manipulate the floating-point type\n+/* Main union type we use to manipulate the floating-point type.  */\n typedef union\n {\n   __float128 value;"}, {"sha": "10a33efdc96243dc59403679c2aa445c22d7fad7", "filename": "libquadmath/quadmath.h", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5d4b580adfd064387972293bb7bc01ef79e2c07/libquadmath%2Fquadmath.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5d4b580adfd064387972293bb7bc01ef79e2c07/libquadmath%2Fquadmath.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libquadmath%2Fquadmath.h?ref=b5d4b580adfd064387972293bb7bc01ef79e2c07", "patch": "@@ -1,20 +1,20 @@\n /* GCC Quad-Precision Math Library\n-   Copyright (C) 2010 Free Software Foundation, Inc.\n+   Copyright (C) 2010, 2011 Free Software Foundation, Inc.\n    Written by Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n \n-This file is part of the libiberty library.\n-Libiberty is free software; you can redistribute it and/or\n+This file is part of the libquadmath library.\n+Libquadmath is free software; you can redistribute it and/or\n modify it under the terms of the GNU Library General Public\n License as published by the Free Software Foundation; either\n version 2 of the License, or (at your option) any later version.\n \n-Libiberty is distributed in the hope that it will be useful,\n+Libquadmath is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n Library General Public License for more details.\n \n You should have received a copy of the GNU Library General Public\n-License along with libiberty; see the file COPYING.LIB.  If\n+License along with libquadmath; see the file COPYING.LIB.  If\n not, write to the Free Software Foundation, Inc., 51 Franklin Street - Fifth Floor,\n Boston, MA 02110-1301, USA.  */\n "}, {"sha": "ccd023c3c5a78eb2570e522f377bf1a75ed3c170", "filename": "libquadmath/quadmath_io.c", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5d4b580adfd064387972293bb7bc01ef79e2c07/libquadmath%2Fquadmath_io.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5d4b580adfd064387972293bb7bc01ef79e2c07/libquadmath%2Fquadmath_io.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libquadmath%2Fquadmath_io.c?ref=b5d4b580adfd064387972293bb7bc01ef79e2c07", "patch": "@@ -1,20 +1,20 @@\n /* GCC Quad-Precision Math Library\n-   Copyright (C) 2010 Free Software Foundation, Inc.\n+   Copyright (C) 2010, 2011 Free Software Foundation, Inc.\n    Written by Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n \n-This file is part of the libiberty library.\n-Libiberty is free software; you can redistribute it and/or\n+This file is part of the libquadmath library.\n+Libquadmath is free software; you can redistribute it and/or\n modify it under the terms of the GNU Library General Public\n License as published by the Free Software Foundation; either\n version 2 of the License, or (at your option) any later version.\n \n-Libiberty is distributed in the hope that it will be useful,\n+Libquadmath is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n Library General Public License for more details.\n \n You should have received a copy of the GNU Library General Public\n-License along with libiberty; see the file COPYING.LIB.  If\n+License along with libquadmath; see the file COPYING.LIB.  If\n not, write to the Free Software Foundation, Inc., 51 Franklin Street - Fifth Floor,\n Boston, MA 02110-1301, USA.  */\n \n@@ -37,19 +37,19 @@ format (char * res, const __float128 x, size_t n)\n   g_Qfmt (buffer, &x, n + 1, sizeof(buffer) - 3);\n   p = buffer + (*buffer == '-' ? 1 : 0);\n \n-  // The sign is the easiest part\n+  /* The sign is the easiest part.  */\n   res[0] = (signbitq (x) ? '-' : '+');\n \n   if (*p == '.')\n   {\n-    // We have a number smaller than 1, without exponent\n+    /* We have a number smaller than 1, without exponent.  */\n     int exp = 0;\n     char *c;\n \n     for (c = p+1; *c == '0'; c++)\n       exp++;\n \n-    // We move the string \"exp\" characters left\n+    /* We move the string \"exp\" characters left.  */\n     size_t l = strlen (p+1+exp);\n     memcpy (res + 2, p + 1 + exp, l);\n     memset (res + 2 + l, '0', n - l + 1);\n@@ -61,7 +61,7 @@ format (char * res, const __float128 x, size_t n)\n     return;\n   }\n \n-  // Now, do we already have an exponent\n+  /* Now, do we already have an exponent.  */\n   char *c;\n   for (c = p; *c && *c != 'e'; c++)\n     ;\n@@ -81,7 +81,7 @@ format (char * res, const __float128 x, size_t n)\n   }\n   else\n   {\n-    // If we have no exponent, normalize and add the exponent\n+    /* If we have no exponent, normalize and add the exponent.  */\n     for (c = p; *c && *c != '.'; c++)\n       ;\n "}, {"sha": "f83f566b880435a8fbb59b77b8431a8ceb8e18f0", "filename": "libquadmath/quadmath_weak.h", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5d4b580adfd064387972293bb7bc01ef79e2c07/libquadmath%2Fquadmath_weak.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5d4b580adfd064387972293bb7bc01ef79e2c07/libquadmath%2Fquadmath_weak.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libquadmath%2Fquadmath_weak.h?ref=b5d4b580adfd064387972293bb7bc01ef79e2c07", "patch": "@@ -1,20 +1,20 @@\n /* GCC Quad-Precision Math Library\n-   Copyright (C) 2010 Free Software Foundation, Inc.\n+   Copyright (C) 2010, 2011 Free Software Foundation, Inc.\n    Written by Tobias Burnus  <burnus@net-b.de>\n \n-This file is part of the libiberty library.\n-Libiberty is free software; you can redistribute it and/or\n+This file is part of the libquadmath library.\n+Libquadmath is free software; you can redistribute it and/or\n modify it under the terms of the GNU Library General Public\n License as published by the Free Software Foundation; either\n version 2 of the License, or (at your option) any later version.\n \n-Libiberty is distributed in the hope that it will be useful,\n+Libquadmath is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n Library General Public License for more details.\n \n You should have received a copy of the GNU Library General Public\n-License along with libiberty; see the file COPYING.LIB.  If\n+License along with libquadmath; see the file COPYING.LIB.  If\n not, write to the Free Software Foundation, Inc., 51 Franklin Street - Fifth Floor,\n Boston, MA 02110-1301, USA.  */\n \n@@ -35,7 +35,7 @@ Boston, MA 02110-1301, USA.  */\n /* __qmath_foo is a weak reference to symbol foo.  */\n #define __qmath3(name) __qmath2(__qmath_ ## name,name,name)\n \n-// Prototypes for real functions\n+/* Prototypes for real functions.  */\n __qmath3 (acosq)\n __qmath3 (acoshq)\n __qmath3 (asinq)\n@@ -103,7 +103,7 @@ __qmath3 (y1q)\n __qmath3 (ynq)\n \n \n-// Prototypes for complex functions\n+/* Prototypes for complex functions.  */\n __qmath3 (cabsq)\n __qmath3 (cargq)\n __qmath3 (cimagq)\n@@ -130,7 +130,7 @@ __qmath3 (ctanq)\n __qmath3 (ctanhq)\n \n \n-// Prototypes for string <-> flt128 conversion functions\n+/* Prototypes for string <-> flt128 conversion functions.  */\n __qmath3 (strtoflt128)\n __qmath3 (quadmath_flt128tostr)\n "}]}