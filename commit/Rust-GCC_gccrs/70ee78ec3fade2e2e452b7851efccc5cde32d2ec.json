{"sha": "70ee78ec3fade2e2e452b7851efccc5cde32d2ec", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzBlZTc4ZWMzZmFkZTJlMmU0NTJiNzg1MWVmY2NjNWNkZTMyZDJlYw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1997-07-02T10:45:21Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1997-07-02T10:45:21Z"}, "message": "(divsi3, modsi3, udivsi3): Comment out.\n\n(extendsfsd2_no_tp): Add alternative with output in MEM, input in REG.\n\nFrom-SVN: r14373", "tree": {"sha": "9cee36a2cfc8bd0144416c61ad8f712fde765933", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9cee36a2cfc8bd0144416c61ad8f712fde765933"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/70ee78ec3fade2e2e452b7851efccc5cde32d2ec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70ee78ec3fade2e2e452b7851efccc5cde32d2ec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/70ee78ec3fade2e2e452b7851efccc5cde32d2ec", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70ee78ec3fade2e2e452b7851efccc5cde32d2ec/comments", "author": null, "committer": null, "parents": [{"sha": "844dadc757819c07ab2a44e8ef3932145c573fdf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/844dadc757819c07ab2a44e8ef3932145c573fdf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/844dadc757819c07ab2a44e8ef3932145c573fdf"}], "stats": {"total": 135, "additions": 70, "deletions": 65}, "files": [{"sha": "2a5a78ddd3bd8f2888d2d7ffe3455499ff722258", "filename": "gcc/config/alpha/alpha.md", "status": "modified", "additions": 70, "deletions": 65, "changes": 135, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70ee78ec3fade2e2e452b7851efccc5cde32d2ec/gcc%2Fconfig%2Falpha%2Falpha.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70ee78ec3fade2e2e452b7851efccc5cde32d2ec/gcc%2Fconfig%2Falpha%2Falpha.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.md?ref=70ee78ec3fade2e2e452b7851efccc5cde32d2ec", "patch": "@@ -623,57 +623,61 @@\n ;; The divide and remainder operations always take their inputs from\n ;; r24 and r25, put their output in r27, and clobber r23 and r28.\n \n-(define_expand \"divsi3\"\n-  [(set (reg:SI 24) (match_operand:SI 1 \"input_operand\" \"\"))\n-   (set (reg:SI 25) (match_operand:SI 2 \"input_operand\" \"\"))\n-   (parallel [(set (reg:SI 27)\n-\t\t   (div:SI (reg:SI 24)\n-\t\t\t   (reg:SI 25)))\n-\t      (clobber (reg:DI 23))\n-\t      (clobber (reg:DI 28))])\n-   (set (match_operand:SI 0 \"general_operand\" \"\")\n-\t(reg:SI 27))]\n-  \"!TARGET_OPEN_VMS\"\n-  \"\")\n-\n-(define_expand \"udivsi3\"\n-  [(set (reg:SI 24) (match_operand:SI 1 \"input_operand\" \"\"))\n-   (set (reg:SI 25) (match_operand:SI 2 \"input_operand\" \"\"))\n-   (parallel [(set (reg:SI 27)\n-\t\t   (udiv:SI (reg:SI 24)\n-\t\t\t    (reg:SI 25)))\n-\t      (clobber (reg:DI 23))\n-\t      (clobber (reg:DI 28))])\n-   (set (match_operand:SI 0 \"general_operand\" \"\")\n-\t(reg:SI 27))]\n-  \"!TARGET_OPEN_VMS\"\n-  \"\")\n-\n-(define_expand \"modsi3\"\n-  [(set (reg:SI 24) (match_operand:SI 1 \"input_operand\" \"\"))\n-   (set (reg:SI 25) (match_operand:SI 2 \"input_operand\" \"\"))\n-   (parallel [(set (reg:SI 27)\n-\t\t   (mod:SI (reg:SI 24)\n-\t\t\t   (reg:SI 25)))\n-\t      (clobber (reg:DI 23))\n-\t      (clobber (reg:DI 28))])\n-   (set (match_operand:SI 0 \"general_operand\" \"\")\n-\t(reg:SI 27))]\n-  \"!TARGET_OPEN_VMS\"\n-  \"\")\n-\n-(define_expand \"umodsi3\"\n-  [(set (reg:SI 24) (match_operand:SI 1 \"input_operand\" \"\"))\n-   (set (reg:SI 25) (match_operand:SI 2 \"input_operand\" \"\"))\n-   (parallel [(set (reg:SI 27)\n-\t\t   (umod:SI (reg:SI 24)\n-\t\t\t    (reg:SI 25)))\n-\t      (clobber (reg:DI 23))\n-\t      (clobber (reg:DI 28))])\n-   (set (match_operand:SI 0 \"general_operand\" \"\")\n-\t(reg:SI 27))]\n-  \"!TARGET_OPEN_VMS\"\n-  \"\")\n+;; ??? comment out the divsi routines since the library functions\n+;; don't seem to do the right thing with the high 32-bits of a\n+;; register nonzero.\n+\n+;(define_expand \"divsi3\"\n+;  [(set (reg:SI 24) (match_operand:SI 1 \"input_operand\" \"\"))\n+;   (set (reg:SI 25) (match_operand:SI 2 \"input_operand\" \"\"))\n+;   (parallel [(set (reg:SI 27)\n+;\t\t   (div:SI (reg:SI 24)\n+;\t\t\t   (reg:SI 25)))\n+;\t      (clobber (reg:DI 23))\n+;\t      (clobber (reg:DI 28))])\n+;   (set (match_operand:SI 0 \"general_operand\" \"\")\n+;\t(reg:SI 27))]\n+;  \"!TARGET_OPEN_VMS\"\n+;  \"\")\n+\n+;(define_expand \"udivsi3\"\n+;  [(set (reg:SI 24) (match_operand:SI 1 \"input_operand\" \"\"))\n+;   (set (reg:SI 25) (match_operand:SI 2 \"input_operand\" \"\"))\n+;   (parallel [(set (reg:SI 27)\n+;\t\t   (udiv:SI (reg:SI 24)\n+;\t\t\t    (reg:SI 25)))\n+;\t      (clobber (reg:DI 23))\n+;\t      (clobber (reg:DI 28))])\n+;   (set (match_operand:SI 0 \"general_operand\" \"\")\n+;\t(reg:SI 27))]\n+;  \"!TARGET_OPEN_VMS\"\n+;  \"\")\n+\n+;(define_expand \"modsi3\"\n+;  [(set (reg:SI 24) (match_operand:SI 1 \"input_operand\" \"\"))\n+;   (set (reg:SI 25) (match_operand:SI 2 \"input_operand\" \"\"))\n+;   (parallel [(set (reg:SI 27)\n+;\t\t   (mod:SI (reg:SI 24)\n+;\t\t\t   (reg:SI 25)))\n+;\t      (clobber (reg:DI 23))\n+;\t      (clobber (reg:DI 28))])\n+;   (set (match_operand:SI 0 \"general_operand\" \"\")\n+;\t(reg:SI 27))]\n+;  \"!TARGET_OPEN_VMS\"\n+;  \"\")\n+\n+;(define_expand \"umodsi3\"\n+;  [(set (reg:SI 24) (match_operand:SI 1 \"input_operand\" \"\"))\n+;   (set (reg:SI 25) (match_operand:SI 2 \"input_operand\" \"\"))\n+;   (parallel [(set (reg:SI 27)\n+;\t\t   (umod:SI (reg:SI 24)\n+;\t\t\t    (reg:SI 25)))\n+;\t      (clobber (reg:DI 23))\n+;\t      (clobber (reg:DI 28))])\n+;   (set (match_operand:SI 0 \"general_operand\" \"\")\n+;\t(reg:SI 27))]\n+;  \"!TARGET_OPEN_VMS\"\n+;  \"\")\n \n (define_expand \"divdi3\"\n   [(set (reg:DI 24) (match_operand:DI 1 \"input_operand\" \"\"))\n@@ -727,15 +731,15 @@\n   \"!TARGET_OPEN_VMS\"\n   \"\")\n \n-(define_insn \"\"\n-  [(set (reg:SI 27)\n-\t(match_operator:SI 1 \"divmod_operator\"\n-\t\t\t[(reg:SI 24) (reg:SI 25)]))\n-   (clobber (reg:DI 23))\n-   (clobber (reg:DI 28))]\n-  \"!TARGET_OPEN_VMS\"\n-  \"%E1 $24,$25,$27\"\n-  [(set_attr \"type\" \"isubr\")])\n+;(define_insn \"\"\n+;  [(set (reg:SI 27)\n+;\t(match_operator:SI 1 \"divmod_operator\"\n+;\t\t\t[(reg:SI 24) (reg:SI 25)]))\n+;   (clobber (reg:DI 23))\n+;   (clobber (reg:DI 28))]\n+;  \"!TARGET_OPEN_VMS\"\n+;  \"%E1 $24,$25,$27\"\n+;  [(set_attr \"type\" \"isubr\")])\n \n (define_insn \"\"\n   [(set (reg:DI 27)\n@@ -1509,13 +1513,14 @@\n    (set_attr \"trap\" \"yes\")])\n \n (define_insn \"extendsfdf2_no_tp\"\n-  [(set (match_operand:DF 0 \"register_operand\" \"=f,f\")\n-\t(float_extend:DF (match_operand:SF 1 \"nonimmediate_operand\" \"f,m\")))]\n+  [(set (match_operand:DF 0 \"register_operand\" \"=f,f,m\")\n+\t(float_extend:DF (match_operand:SF 1 \"nonimmediate_operand\" \"f,m,f\")))]\n   \"TARGET_FP && alpha_tp != ALPHA_TP_INSN\"\n   \"@\n-   add%-%)%& $f31,%1,%0\n-   ld%, %0,%1\"\n-  [(set_attr \"type\" \"fadd,ld\")\n+   cpys %1,%1,%0\n+   ld%, %0,%1\n+   st%- %1,%0\"\n+  [(set_attr \"type\" \"fcpys,ld,st\")\n    (set_attr \"trap\" \"yes\")])\n \n (define_insn \"\""}]}