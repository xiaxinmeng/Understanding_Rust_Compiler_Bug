{"sha": "be0c7ff4050a473ce2d989b7ab7ac85fc640490c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmUwYzdmZjQwNTBhNDczY2UyZDk4OWI3YWI3YWM4NWZjNjQwNDkwYw==", "commit": {"author": {"name": "Per Bothner", "email": "per@bothner.com", "date": "2001-08-31T04:14:44Z"}, "committer": {"name": "Per Bothner", "email": "bothner@gcc.gnu.org", "date": "2001-08-31T04:14:44Z"}, "message": "jcf-write.c (generate_classfile): Check that field is primitive or string before emitting ConstantValue attribute.\n\n\n\t* jcf-write.c (generate_classfile):  Check that field is primitive\n\tor string before emitting ConstantValue attribute.\n\nFrom-SVN: r45306", "tree": {"sha": "171237c0c04c33e34c982639ef722505236101e0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/171237c0c04c33e34c982639ef722505236101e0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/be0c7ff4050a473ce2d989b7ab7ac85fc640490c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be0c7ff4050a473ce2d989b7ab7ac85fc640490c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/be0c7ff4050a473ce2d989b7ab7ac85fc640490c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be0c7ff4050a473ce2d989b7ab7ac85fc640490c/comments", "author": {"login": "PerBothner", "id": 10293361, "node_id": "MDQ6VXNlcjEwMjkzMzYx", "avatar_url": "https://avatars.githubusercontent.com/u/10293361?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PerBothner", "html_url": "https://github.com/PerBothner", "followers_url": "https://api.github.com/users/PerBothner/followers", "following_url": "https://api.github.com/users/PerBothner/following{/other_user}", "gists_url": "https://api.github.com/users/PerBothner/gists{/gist_id}", "starred_url": "https://api.github.com/users/PerBothner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PerBothner/subscriptions", "organizations_url": "https://api.github.com/users/PerBothner/orgs", "repos_url": "https://api.github.com/users/PerBothner/repos", "events_url": "https://api.github.com/users/PerBothner/events{/privacy}", "received_events_url": "https://api.github.com/users/PerBothner/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f0cdee96aa2a739a34f820638c98814b139e3bd5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f0cdee96aa2a739a34f820638c98814b139e3bd5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f0cdee96aa2a739a34f820638c98814b139e3bd5"}], "stats": {"total": 9, "additions": 8, "deletions": 1}, "files": [{"sha": "b06dd57aa469b51c0e90440ff8691953e374bc76", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be0c7ff4050a473ce2d989b7ab7ac85fc640490c/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be0c7ff4050a473ce2d989b7ab7ac85fc640490c/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=be0c7ff4050a473ce2d989b7ab7ac85fc640490c", "patch": "@@ -1,3 +1,8 @@\n+2001-08-30  Per Bothner  <per@bothner.com>\n+\n+\t* jcf-write.c (generate_classfile):  Check that field is primitive\n+\tor string before emitting ConstantValue attribute.\n+\t\n 2001-08-30  Per Bothner  <per@bothner.com>\n \n \t* parse.y (resolve_qualified_expression_name):  If creating a"}, {"sha": "026ceb5d068bf3f49a0770192dd3dd6f746120da", "filename": "gcc/java/jcf-write.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be0c7ff4050a473ce2d989b7ab7ac85fc640490c/gcc%2Fjava%2Fjcf-write.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be0c7ff4050a473ce2d989b7ab7ac85fc640490c/gcc%2Fjava%2Fjcf-write.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjcf-write.c?ref=be0c7ff4050a473ce2d989b7ab7ac85fc640490c", "patch": "@@ -2885,7 +2885,9 @@ generate_classfile (clas, state)\n       PUT2(i);\n       have_value = DECL_INITIAL (part) != NULL_TREE \n \t&& FIELD_STATIC (part) && CONSTANT_VALUE_P (DECL_INITIAL (part))\n-\t&& FIELD_FINAL (part);\n+\t&& FIELD_FINAL (part)\n+\t&& (JPRIMITIVE_TYPE_P (TREE_TYPE (part))\n+\t    || TREE_TYPE (part) == string_ptr_type_node);\n       if (have_value)\n \tattr_count++;\n "}]}