{"sha": "b6e5a1ec2c33cd98e0f3ca4818993a3a00ef05eb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjZlNWExZWMyYzMzY2Q5OGUwZjNjYTQ4MTg5OTNhM2EwMGVmMDVlYg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-01-07T10:01:36Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-01-07T10:01:36Z"}, "message": "[multiple changes]\n\n2015-01-07  Vincent Celier  <celier@adacore.com>\n\n\t* clean.adb (Gnatclean): Warn that 'gnatclean -P' is obsolete.\n\t* make.adb (Initialize): Warn that 'gnatmake -P' is obsolete.\n\n2015-01-07  Vincent Celier  <celier@adacore.com>\n\n\t* prj-conf.adb (Parse_Project_And_Apply_Config): Always finalize\n\terrors/warnings in the first parsing of the project files,\n\tto display the warnings when there is no errors.\n\n2015-01-07  Tristan Gingold  <gingold@adacore.com>\n\n\t* i-cpoint.adb (Copy_Terminated_Array): Nicely handle null target.\n\n2015-01-07  Doug Rupp  <rupp@adacore.com>\n\n\t* s-taprop-vxworks.adb (Stop_All_Tasks): Pass return\n\tvalue from Int_Lock as parameter to Int_Unlock.\n\t* s-osinte-vxworks.ads (Int_Unlock): Add parameter.\n\t* s-vxwext.ads (Int_Unlock): Likewise.\n\t* s-vxwext-kernel.adb (intUnlock, Int_Unlock): Likewise.\n\t* s-vxwext-kernel.ads (Int_Unlock): Likewise.\n\t* s-vxwext-rtp.adb (Int_Unlock): Likewise.\n\t* s-vxwext-rtp.ads (Int_Unlock): Likewise.\n\n2015-01-07  Pierre-Marie de Rodat  <derodat@adacore.com>\n\n\t* exp_pakd.adb: Add a comment in exp_pakd.adb to explain why we\n\tkeep ___XP suffixes\n\nFrom-SVN: r219288", "tree": {"sha": "4eb124c0f545fe0c324ad5c3c3a45721286d025c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4eb124c0f545fe0c324ad5c3c3a45721286d025c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b6e5a1ec2c33cd98e0f3ca4818993a3a00ef05eb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6e5a1ec2c33cd98e0f3ca4818993a3a00ef05eb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b6e5a1ec2c33cd98e0f3ca4818993a3a00ef05eb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6e5a1ec2c33cd98e0f3ca4818993a3a00ef05eb/comments", "author": null, "committer": null, "parents": [{"sha": "c3831524bc0bf8d15bc95e26832a2a5e0752f9cc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3831524bc0bf8d15bc95e26832a2a5e0752f9cc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c3831524bc0bf8d15bc95e26832a2a5e0752f9cc"}], "stats": {"total": 95, "additions": 78, "deletions": 17}, "files": [{"sha": "c0e8fc2fc2b90a6e05cc79d3615830041124f8e3", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6e5a1ec2c33cd98e0f3ca4818993a3a00ef05eb/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6e5a1ec2c33cd98e0f3ca4818993a3a00ef05eb/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=b6e5a1ec2c33cd98e0f3ca4818993a3a00ef05eb", "patch": "@@ -1,3 +1,34 @@\n+2015-01-07  Vincent Celier  <celier@adacore.com>\n+\n+\t* clean.adb (Gnatclean): Warn that 'gnatclean -P' is obsolete.\n+\t* make.adb (Initialize): Warn that 'gnatmake -P' is obsolete.\n+\n+2015-01-07  Vincent Celier  <celier@adacore.com>\n+\n+\t* prj-conf.adb (Parse_Project_And_Apply_Config): Always finalize\n+\terrors/warnings in the first parsing of the project files,\n+\tto display the warnings when there is no errors.\n+\n+2015-01-07  Tristan Gingold  <gingold@adacore.com>\n+\n+\t* i-cpoint.adb (Copy_Terminated_Array): Nicely handle null target.\n+\n+2015-01-07  Doug Rupp  <rupp@adacore.com>\n+\n+\t* s-taprop-vxworks.adb (Stop_All_Tasks): Pass return\n+\tvalue from Int_Lock as parameter to Int_Unlock.\n+\t* s-osinte-vxworks.ads (Int_Unlock): Add parameter.\n+\t* s-vxwext.ads (Int_Unlock): Likewise.\n+\t* s-vxwext-kernel.adb (intUnlock, Int_Unlock): Likewise.\n+\t* s-vxwext-kernel.ads (Int_Unlock): Likewise.\n+\t* s-vxwext-rtp.adb (Int_Unlock): Likewise.\n+\t* s-vxwext-rtp.ads (Int_Unlock): Likewise.\n+\n+2015-01-07  Pierre-Marie de Rodat  <derodat@adacore.com>\n+\n+\t* exp_pakd.adb: Add a comment in exp_pakd.adb to explain why we\n+\tkeep ___XP suffixes\n+\n 2015-01-07  Tristan Gingold  <gingold@adacore.com>\n \n \t* i-cpoint.adb (Copy_Terminated_Array): Use Copy_Array to"}, {"sha": "5d892e32d7341f38539bb1dea9738af41c15d0f4", "filename": "gcc/ada/clean.adb", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6e5a1ec2c33cd98e0f3ca4818993a3a00ef05eb/gcc%2Fada%2Fclean.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6e5a1ec2c33cd98e0f3ca4818993a3a00ef05eb/gcc%2Fada%2Fclean.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fclean.adb?ref=b6e5a1ec2c33cd98e0f3ca4818993a3a00ef05eb", "patch": "@@ -1383,6 +1383,14 @@ package body Clean is\n \n       if Project_File_Name /= null then\n \n+         --  Warn about 'gnatclean -P'\n+\n+         if Project_File_Name /= null then\n+            Put_Line\n+              (\"warning: gnatclean -P is obsolete and will not be available \" &\n+               \"in the next release. Use gprclean instead.\");\n+         end if;\n+\n          --  A project file was specified by a -P switch\n \n          if Opt.Verbose_Mode then"}, {"sha": "cd592dc35290de45f75089b372391d7450227136", "filename": "gcc/ada/exp_pakd.adb", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6e5a1ec2c33cd98e0f3ca4818993a3a00ef05eb/gcc%2Fada%2Fexp_pakd.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6e5a1ec2c33cd98e0f3ca4818993a3a00ef05eb/gcc%2Fada%2Fexp_pakd.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_pakd.adb?ref=b6e5a1ec2c33cd98e0f3ca4818993a3a00ef05eb", "patch": "@@ -763,6 +763,12 @@ package body Exp_Pakd is\n       --  a subtype that is equivalent to use Packed_Bytes{1,2,4} as needed.\n \n       elsif not Is_Constrained (Typ) then\n+\n+         --  When generating standard DWARF, the ___XP suffix will be stripped\n+         --  by the back-end, but generate it anyway to ease compiler\n+         --  debugging: this will help to distinguish implementation types from\n+         --  original packed arrays.\n+\n          PAT :=\n            Make_Defining_Identifier (Loc,\n              Chars => Make_Packed_Array_Impl_Type_Name (Typ, Csize));"}, {"sha": "39c7bef72a2fbb8f85a70e374a7d0f208d1f6678", "filename": "gcc/ada/i-cpoint.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6e5a1ec2c33cd98e0f3ca4818993a3a00ef05eb/gcc%2Fada%2Fi-cpoint.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6e5a1ec2c33cd98e0f3ca4818993a3a00ef05eb/gcc%2Fada%2Fi-cpoint.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fi-cpoint.adb?ref=b6e5a1ec2c33cd98e0f3ca4818993a3a00ef05eb", "patch": "@@ -146,7 +146,7 @@ package body Interfaces.C.Pointers is\n       L : ptrdiff_t;\n       S : Pointer := Source;\n    begin\n-      if Source = null then\n+      if Source = null or Target = null then\n          raise Dereference_Error;\n       end if;\n "}, {"sha": "8bbe0949955f8c2548ef591ef30ea751f2cb8e5e", "filename": "gcc/ada/make.adb", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6e5a1ec2c33cd98e0f3ca4818993a3a00ef05eb/gcc%2Fada%2Fmake.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6e5a1ec2c33cd98e0f3ca4818993a3a00ef05eb/gcc%2Fada%2Fmake.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmake.adb?ref=b6e5a1ec2c33cd98e0f3ca4818993a3a00ef05eb", "patch": "@@ -6486,6 +6486,14 @@ package body Make is\n          Make_Failed (\"-i and -D cannot be used simultaneously\");\n       end if;\n \n+      --  Warn about 'gnatmake -P'\n+\n+      if Project_File_Name /= null then\n+         Write_Line\n+           (\"warning: gnatmake -P is obsolete and will not be available \" &\n+            \"in the next release. Use gprbuild instead.\");\n+      end if;\n+\n       --  If --subdirs= is specified, but not -P, this is equivalent to -D,\n       --  except that the directory is created if it does not exist.\n "}, {"sha": "9c83902d3e1cdde2eb7172656f56c1a05b9c3ee9", "filename": "gcc/ada/prj-conf.adb", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6e5a1ec2c33cd98e0f3ca4818993a3a00ef05eb/gcc%2Fada%2Fprj-conf.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6e5a1ec2c33cd98e0f3ca4818993a3a00ef05eb/gcc%2Fada%2Fprj-conf.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-conf.adb?ref=b6e5a1ec2c33cd98e0f3ca4818993a3a00ef05eb", "patch": "@@ -1604,6 +1604,8 @@ package body Prj.Conf is\n       Target_Try_Again : Boolean := True;\n       Config_Try_Again : Boolean;\n \n+      Finalization : Prj.Part.Errout_Mode := Prj.Part.Always_Finalize;\n+\n       S : State := No_State;\n \n       Conf_File_Name : String_Access := new String'(Config_File_Name);\n@@ -1663,13 +1665,15 @@ package body Prj.Conf is\n         (In_Tree           => Project_Node_Tree,\n          Project           => User_Project_Node,\n          Project_File_Name => Project_File_Name,\n-         Errout_Handling   => Prj.Part.Finalize_If_Error,\n+         Errout_Handling   => Finalization,\n          Packages_To_Check => Packages_To_Check,\n          Current_Directory => Current_Directory,\n          Is_Config_File    => False,\n          Env               => Env,\n          Implicit_Project  => Implicit_Project);\n \n+      Finalization := Prj.Part.Finalize_If_Error;\n+\n       if User_Project_Node = Empty_Node then\n          return;\n       end if;"}, {"sha": "777c381f5a807c5f2adc73dd95b75310835d3273", "filename": "gcc/ada/s-osinte-vxworks.ads", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6e5a1ec2c33cd98e0f3ca4818993a3a00ef05eb/gcc%2Fada%2Fs-osinte-vxworks.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6e5a1ec2c33cd98e0f3ca4818993a3a00ef05eb/gcc%2Fada%2Fs-osinte-vxworks.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osinte-vxworks.ads?ref=b6e5a1ec2c33cd98e0f3ca4818993a3a00ef05eb", "patch": "@@ -227,9 +227,11 @@ package System.OS_Interface is\n    --  If we are in the kernel space, lock interrupts. It typically maps to\n    --  intLock.\n \n-   function Int_Unlock return int renames System.VxWorks.Ext.Int_Unlock;\n+   function Int_Unlock (Old : int) return int\n+     renames System.VxWorks.Ext.Int_Unlock;\n    --  If we are in the kernel space, unlock interrupts. It typically maps to\n-   --  intUnlock.\n+   --  intUnlock. The parameter Old is only used on PowerPC where it contains\n+   --  the returned value from Int_Lock (the old MPSR).\n \n    ----------\n    -- Time --"}, {"sha": "7aff4a66d6e4daf38069960882629e738e06fc84", "filename": "gcc/ada/s-taprop-vxworks.adb", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6e5a1ec2c33cd98e0f3ca4818993a3a00ef05eb/gcc%2Fada%2Fs-taprop-vxworks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6e5a1ec2c33cd98e0f3ca4818993a3a00ef05eb/gcc%2Fada%2Fs-taprop-vxworks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taprop-vxworks.adb?ref=b6e5a1ec2c33cd98e0f3ca4818993a3a00ef05eb", "patch": "@@ -1299,9 +1299,10 @@ package body System.Task_Primitives.Operations is\n       C           : Task_Id;\n \n       Dummy : int;\n+      Old   : int;\n \n    begin\n-      Dummy := Int_Lock;\n+      Old := Int_Lock;\n \n       C := All_Tasks_List;\n       while C /= null loop\n@@ -1314,7 +1315,7 @@ package body System.Task_Primitives.Operations is\n          C := C.Common.All_Tasks_Link;\n       end loop;\n \n-      Dummy := Int_Unlock;\n+      Dummy := Int_Unlock (Old);\n    end Stop_All_Tasks;\n \n    ---------------"}, {"sha": "584de4f7323b0d12ef9ce7ba7391ddaaeafd40d0", "filename": "gcc/ada/s-vxwext-kernel.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6e5a1ec2c33cd98e0f3ca4818993a3a00ef05eb/gcc%2Fada%2Fs-vxwext-kernel.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6e5a1ec2c33cd98e0f3ca4818993a3a00ef05eb/gcc%2Fada%2Fs-vxwext-kernel.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-vxwext-kernel.adb?ref=b6e5a1ec2c33cd98e0f3ca4818993a3a00ef05eb", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                   B o d y                                --\n --                                                                          --\n---            Copyright (C) 2008-2011, Free Software Foundation, Inc.       --\n+--            Copyright (C) 2008-2014, Free Software Foundation, Inc.       --\n --                                                                          --\n -- GNARL is free software;  you can redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -49,10 +49,10 @@ package body System.VxWorks.Ext is\n    -- Int_Unlock --\n    ----------------\n \n-   function intUnlock return int;\n+   function intUnlock (Old : int) return int;\n    pragma Import (C, intUnlock, \"intUnlock\");\n \n-   function Int_Unlock return int renames intUnlock;\n+   function Int_Unlock (Old : int) return int renames intUnlock;\n \n    ---------------\n    -- semDelete --"}, {"sha": "c8cba655cecf97d580fc01d7f0cbdd2a842010ab", "filename": "gcc/ada/s-vxwext-kernel.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6e5a1ec2c33cd98e0f3ca4818993a3a00ef05eb/gcc%2Fada%2Fs-vxwext-kernel.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6e5a1ec2c33cd98e0f3ca4818993a3a00ef05eb/gcc%2Fada%2Fs-vxwext-kernel.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-vxwext-kernel.ads?ref=b6e5a1ec2c33cd98e0f3ca4818993a3a00ef05eb", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                   S p e c                                --\n --                                                                          --\n---            Copyright (C) 2008-2011, Free Software Foundation, Inc.       --\n+--            Copyright (C) 2008-2014, Free Software Foundation, Inc.       --\n --                                                                          --\n -- GNARL is free software;  you can redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -53,7 +53,7 @@ package System.VxWorks.Ext is\n    function Int_Lock return int;\n    pragma Convention (C, Int_Lock);\n \n-   function Int_Unlock return int;\n+   function Int_Unlock (Old : int) return int;\n    pragma Convention (C, Int_Unlock);\n \n    function Interrupt_Connect"}, {"sha": "4dd7ab46c955136231499991d96c6f5d39c06a4b", "filename": "gcc/ada/s-vxwext-rtp.adb", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6e5a1ec2c33cd98e0f3ca4818993a3a00ef05eb/gcc%2Fada%2Fs-vxwext-rtp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6e5a1ec2c33cd98e0f3ca4818993a3a00ef05eb/gcc%2Fada%2Fs-vxwext-rtp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-vxwext-rtp.adb?ref=b6e5a1ec2c33cd98e0f3ca4818993a3a00ef05eb", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                   B o d y                                --\n --                                                                          --\n---            Copyright (C) 2008-2011, Free Software Foundation, Inc.       --\n+--            Copyright (C) 2008-2014, Free Software Foundation, Inc.       --\n --                                                                          --\n -- GNARL is free software;  you can redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -48,7 +48,8 @@ package body System.VxWorks.Ext is\n    -- Int_Unlock --\n    ----------------\n \n-   function Int_Unlock return int is\n+   function Int_Unlock (Old : int) return int is\n+      pragma Unreferenced (Old);\n    begin\n       return ERROR;\n    end Int_Unlock;"}, {"sha": "4b658f694342b92256cb05a985f6bb4a737f1e57", "filename": "gcc/ada/s-vxwext-rtp.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6e5a1ec2c33cd98e0f3ca4818993a3a00ef05eb/gcc%2Fada%2Fs-vxwext-rtp.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6e5a1ec2c33cd98e0f3ca4818993a3a00ef05eb/gcc%2Fada%2Fs-vxwext-rtp.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-vxwext-rtp.ads?ref=b6e5a1ec2c33cd98e0f3ca4818993a3a00ef05eb", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                   S p e c                                --\n --                                                                          --\n---            Copyright (C) 2008-2011, Free Software Foundation, Inc.       --\n+--            Copyright (C) 2008-2014, Free Software Foundation, Inc.       --\n --                                                                          --\n -- GNARL is free software;  you can redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -53,7 +53,7 @@ package System.VxWorks.Ext is\n    function Int_Lock return int;\n    pragma Inline (Int_Lock);\n \n-   function Int_Unlock return int;\n+   function Int_Unlock (Old : int) return int;\n    pragma Inline (Int_Unlock);\n \n    function Interrupt_Connect"}, {"sha": "1aea52739e3d7bbbb4672ad1707c2e6495f20448", "filename": "gcc/ada/s-vxwext.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6e5a1ec2c33cd98e0f3ca4818993a3a00ef05eb/gcc%2Fada%2Fs-vxwext.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6e5a1ec2c33cd98e0f3ca4818993a3a00ef05eb/gcc%2Fada%2Fs-vxwext.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-vxwext.ads?ref=b6e5a1ec2c33cd98e0f3ca4818993a3a00ef05eb", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                   S p e c                                --\n --                                                                          --\n---            Copyright (C) 2008-2011, Free Software Foundation, Inc.       --\n+--            Copyright (C) 2008-2014, Free Software Foundation, Inc.       --\n --                                                                          --\n -- GNARL is free software;  you can redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -54,7 +54,7 @@ package System.VxWorks.Ext is\n    function Int_Lock return int;\n    pragma Import (C, Int_Lock, \"intLock\");\n \n-   function Int_Unlock return int;\n+   function Int_Unlock (Old : int) return int;\n    pragma Import (C, Int_Unlock, \"intUnlock\");\n \n    function Interrupt_Connect"}]}