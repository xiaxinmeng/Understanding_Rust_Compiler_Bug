{"sha": "507e429b2fe28c21889d166817a35496777d19ba", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTA3ZTQyOWIyZmUyOGMyMTg4OWQxNjY4MTdhMzU0OTY3NzdkMTliYQ==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2017-05-08T17:59:03Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2017-05-08T17:59:03Z"}, "message": "decl.c (builtin_function_1): Set DCL_ANTICIPATED before pushing.\n\n\t* decl.c (builtin_function_1): Set DCL_ANTICIPATED before pushing.\n\t(start_preparsed_function): Do decl pushing before setting\n\tcurrent_funciton_decl and announcing it.\n\nFrom-SVN: r247754", "tree": {"sha": "822d1cdf7fcb09926107675fb74b8ff360356bee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/822d1cdf7fcb09926107675fb74b8ff360356bee"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/507e429b2fe28c21889d166817a35496777d19ba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/507e429b2fe28c21889d166817a35496777d19ba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/507e429b2fe28c21889d166817a35496777d19ba", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/507e429b2fe28c21889d166817a35496777d19ba/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "fd9910392bc2854ecc5c91fd6f089fa4e66edb44", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd9910392bc2854ecc5c91fd6f089fa4e66edb44", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fd9910392bc2854ecc5c91fd6f089fa4e66edb44"}], "stats": {"total": 35, "additions": 18, "deletions": 17}, "files": [{"sha": "369a885e68b5b374f3b3fb6ba2a10bec3af9d6f7", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/507e429b2fe28c21889d166817a35496777d19ba/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/507e429b2fe28c21889d166817a35496777d19ba/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=507e429b2fe28c21889d166817a35496777d19ba", "patch": "@@ -1,5 +1,9 @@\n 2017-05-08  Nathan Sidwell  <nathan@acm.org>\n \n+\t* decl.c (builtin_function_1): Set DCL_ANTICIPATED before pushing.\n+\t(start_preparsed_function): Do decl pushing before setting\n+\tcurrent_funciton_decl and announcing it.\n+\n \t* name-lookup.h (pushdecl_with_scope): Replace with ...\n \t(pushdecl_outermost_localscope): ... this.\n \t* name-lookup.c (pushdecl_with_scope): Replace with ..."}, {"sha": "4023c699e1fc381e89d1ae84491d354b8f82ba02", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 14, "deletions": 17, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/507e429b2fe28c21889d166817a35496777d19ba/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/507e429b2fe28c21889d166817a35496777d19ba/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=507e429b2fe28c21889d166817a35496777d19ba", "patch": "@@ -4375,11 +4375,6 @@ builtin_function_1 (tree decl, tree context, bool is_global)\n \n   DECL_CONTEXT (decl) = context;\n \n-  if (is_global)\n-    pushdecl_top_level (decl);\n-  else\n-    pushdecl (decl);\n-\n   /* A function in the user's namespace should have an explicit\n      declaration before it is used.  Mark the built-in function as\n      anticipated but not actually declared.  */\n@@ -4397,6 +4392,11 @@ builtin_function_1 (tree decl, tree context, bool is_global)\n \tDECL_ANTICIPATED (decl) = 1;\n     }\n \n+  if (is_global)\n+    pushdecl_top_level (decl);\n+  else\n+    pushdecl (decl);\n+\n   return decl;\n }\n \n@@ -14821,17 +14821,10 @@ start_preparsed_function (tree decl1, tree attrs, int flags)\n       decl1 = newdecl1;\n     }\n \n-  /* We are now in the scope of the function being defined.  */\n-  current_function_decl = decl1;\n-\n-  /* Save the parm names or decls from this function's declarator\n-     where store_parm_decls will find them.  */\n-  current_function_parms = DECL_ARGUMENTS (decl1);\n-\n   /* Make sure the parameter and return types are reasonable.  When\n      you declare a function, these types can be incomplete, but they\n      must be complete when you define the function.  */\n-  check_function_type (decl1, current_function_parms);\n+  check_function_type (decl1, DECL_ARGUMENTS (decl1));\n \n   /* Build the return declaration for the function.  */\n   restype = TREE_TYPE (fntype);\n@@ -14848,9 +14841,6 @@ start_preparsed_function (tree decl1, tree attrs, int flags)\n       cp_apply_type_quals_to_decl (cp_type_quals (restype), resdecl);\n     }\n \n-  /* Let the user know we're compiling this function.  */\n-  announce_function (decl1);\n-\n   /* Record the decl so that the function name is defined.\n      If we already have a decl for this name, and it is a FUNCTION_DECL,\n      use the old decl.  */\n@@ -14922,9 +14912,16 @@ start_preparsed_function (tree decl1, tree attrs, int flags)\n \tmaybe_apply_pragma_weak (decl1);\n     }\n \n-  /* Reset this in case the call to pushdecl changed it.  */\n+  /* We are now in the scope of the function being defined.  */\n   current_function_decl = decl1;\n \n+  /* Save the parm names or decls from this function's declarator\n+     where store_parm_decls will find them.  */\n+  current_function_parms = DECL_ARGUMENTS (decl1);\n+\n+  /* Let the user know we're compiling this function.  */\n+  announce_function (decl1);\n+\n   gcc_assert (DECL_INITIAL (decl1));\n \n   /* This function may already have been parsed, in which case just"}]}