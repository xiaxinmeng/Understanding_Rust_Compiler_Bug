{"sha": "87c4dace919a404c10521061af2bad6e4752810e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODdjNGRhY2U5MTlhNDA0YzEwNTIxMDYxYWYyYmFkNmU0NzUyODEwZQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2018-01-08T13:24:38Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2018-01-08T13:24:38Z"}, "message": "re PR c++/83713 (ICE in do_narrow at gcc/convert.c:474)\n\n2018-01-08  Richard Biener  <rguenther@suse.de>\n\n\tPR middle-end/83713\n\t* convert.c (do_narrow): Properly guard TYPE_OVERFLOW_WRAPS checks.\n\n\t* g++.dg/torture/pr83713.C: New testcase.\n\nFrom-SVN: r256341", "tree": {"sha": "9f644b50c5c3d94c6015b5c4b2e9240ecda601b9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9f644b50c5c3d94c6015b5c4b2e9240ecda601b9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/87c4dace919a404c10521061af2bad6e4752810e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/87c4dace919a404c10521061af2bad6e4752810e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/87c4dace919a404c10521061af2bad6e4752810e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/87c4dace919a404c10521061af2bad6e4752810e/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "960c02b84e5b03f774d3f07dcceb85c24416ac8f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/960c02b84e5b03f774d3f07dcceb85c24416ac8f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/960c02b84e5b03f774d3f07dcceb85c24416ac8f"}], "stats": {"total": 28, "additions": 26, "deletions": 2}, "files": [{"sha": "b91925a712892bca6514b777cff6d758f4e2b52f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87c4dace919a404c10521061af2bad6e4752810e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87c4dace919a404c10521061af2bad6e4752810e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=87c4dace919a404c10521061af2bad6e4752810e", "patch": "@@ -1,3 +1,8 @@\n+2018-01-08  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/83713\n+\t* convert.c (do_narrow): Properly guard TYPE_OVERFLOW_WRAPS checks.\n+\n 2018-01-08  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/83685"}, {"sha": "8c8931f40ed284d80d69eb3c4a23a76f18678073", "filename": "gcc/convert.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87c4dace919a404c10521061af2bad6e4752810e/gcc%2Fconvert.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87c4dace919a404c10521061af2bad6e4752810e/gcc%2Fconvert.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconvert.c?ref=87c4dace919a404c10521061af2bad6e4752810e", "patch": "@@ -471,8 +471,10 @@ do_narrow (location_t loc,\n \t     type in case the operation in outprec precision\n \t     could overflow.  Otherwise, we would introduce\n \t     signed-overflow undefinedness.  */\n-\t  || ((!TYPE_OVERFLOW_WRAPS (TREE_TYPE (arg0))\n-\t       || !TYPE_OVERFLOW_WRAPS (TREE_TYPE (arg1)))\n+\t  || ((!(INTEGRAL_TYPE_P (TREE_TYPE (arg0))\n+\t\t && TYPE_OVERFLOW_WRAPS (TREE_TYPE (arg0)))\n+\t       || !(INTEGRAL_TYPE_P (TREE_TYPE (arg1))\n+\t\t    && TYPE_OVERFLOW_WRAPS (TREE_TYPE (arg1))))\n \t      && ((TYPE_PRECISION (TREE_TYPE (arg0)) * 2u\n \t\t   > outprec)\n \t\t  || (TYPE_PRECISION (TREE_TYPE (arg1)) * 2u"}, {"sha": "d5fd96d05c1c4662a130628a4245ac13ee637780", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87c4dace919a404c10521061af2bad6e4752810e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87c4dace919a404c10521061af2bad6e4752810e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=87c4dace919a404c10521061af2bad6e4752810e", "patch": "@@ -1,3 +1,8 @@\n+2018-01-08  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/83713\n+\t* g++.dg/torture/pr83713.C: New testcase.\n+\n 2018-01-08  Tom de Vries  <tom@codesourcery.com>\n \n \t* gcc.dg/tree-ssa/ssa-dom-cse-2.c: Xfail scan for nvptx."}, {"sha": "ca6af04406d99f8cb60fa1342bda8c01c9a563f9", "filename": "gcc/testsuite/g++.dg/torture/pr83713.C", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87c4dace919a404c10521061af2bad6e4752810e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr83713.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87c4dace919a404c10521061af2bad6e4752810e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr83713.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr83713.C?ref=87c4dace919a404c10521061af2bad6e4752810e", "patch": "@@ -0,0 +1,12 @@\n+// { dg-do compile }\n+\n+class a\n+{\n+  char b;\n+  void c ();\n+};\n+void\n+a::c ()\n+{\n+  &b + ((long long) &b & 0);\n+}"}]}