{"sha": "aafdcfcd2b344819258179c366a15cc943b9ef31", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWFmZGNmY2QyYjM0NDgxOTI1ODE3OWMzNjZhMTVjYzk0M2I5ZWYzMQ==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@codesourcery.com", "date": "2001-07-05T09:39:35Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2001-07-05T09:39:35Z"}, "message": "dwarf2out.c (output_loc_list): Use an all ones mask for .text asm output and don't rely on long long literals.\n\n\t* dwarf2out.c (output_loc_list): Use an all ones mask for\n\t.text asm output and don't rely on long long\n\tliterals. Reformat some long lines.\n\nFrom-SVN: r43777", "tree": {"sha": "11cbdd1ac52bcaa85f4cc8ab9961a7fa5a826412", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/11cbdd1ac52bcaa85f4cc8ab9961a7fa5a826412"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aafdcfcd2b344819258179c366a15cc943b9ef31", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aafdcfcd2b344819258179c366a15cc943b9ef31", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aafdcfcd2b344819258179c366a15cc943b9ef31", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aafdcfcd2b344819258179c366a15cc943b9ef31/comments", "author": null, "committer": null, "parents": [{"sha": "ce0e8f03d906dbe53177a8c54662e5cc965b5c49", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce0e8f03d906dbe53177a8c54662e5cc965b5c49", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce0e8f03d906dbe53177a8c54662e5cc965b5c49"}], "stats": {"total": 37, "additions": 25, "deletions": 12}, "files": [{"sha": "cfa550820c89dd50194367770cadbb53ada92d19", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aafdcfcd2b344819258179c366a15cc943b9ef31/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aafdcfcd2b344819258179c366a15cc943b9ef31/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=aafdcfcd2b344819258179c366a15cc943b9ef31", "patch": "@@ -1,3 +1,9 @@\n+2001-07-05  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* dwarf2out.c (output_loc_list): Use an all ones mask for\n+\t.text asm output and don't rely on long long\n+\tliterals. Reformat some long lines.\n+\n 2001-07-05  Andreas Jaeger  <aj@suse.de>\n \n \t* doc/gcc.texi (GNU/Linux): Remove accidental re-add of GPL"}, {"sha": "a47dbfc81fa2a21038a6de55523b3aa7ceae715d", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 19, "deletions": 12, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aafdcfcd2b344819258179c366a15cc943b9ef31/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aafdcfcd2b344819258179c366a15cc943b9ef31/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=aafdcfcd2b344819258179c366a15cc943b9ef31", "patch": "@@ -5946,28 +5946,35 @@ output_loc_list (list_head)\n   ASM_OUTPUT_LABEL (asm_out_file, list_head->ll_symbol);\n   if (strcmp (curr->section, \".text\") == 0)\n     {\n-      if (DWARF2_ADDR_SIZE == 4)\n-\tdw2_asm_output_data (DWARF2_ADDR_SIZE, 0xffffffff, \"Location list base address specifier fake entry\");\n-      else if (DWARF2_ADDR_SIZE == 8)\n-\tdw2_asm_output_data (DWARF2_ADDR_SIZE, 0xffffffffffffffffLL, \"Location list base address specifier fake entry\");\n-      else\n-\tabort();\n-      dw2_asm_output_offset (DWARF2_ADDR_SIZE, curr->section, \"Location list base address specifier base\");\n+      /* dw2_asm_output_data will mask off any extra bits in the ~0.  */\n+      dw2_asm_output_data (DWARF2_ADDR_SIZE, ~(unsigned HOST_WIDE_INT)0,\n+\t\t\t   \"Location list base address specifier fake entry\");\n+      dw2_asm_output_offset (DWARF2_ADDR_SIZE, curr->section,\n+\t\t\t     \"Location list base address specifier base\");\n     }\n   for (curr = list_head; curr != NULL; curr=curr->dw_loc_next)\n     {\n       int size;\n-      dw2_asm_output_delta (DWARF2_ADDR_SIZE, curr->begin, curr->section, \"Location list begin address (%s)\", list_head->ll_symbol);\n-      dw2_asm_output_delta (DWARF2_ADDR_SIZE, curr->end, curr->section, \"Location list end address (%s)\", list_head->ll_symbol);\n+      dw2_asm_output_delta (DWARF2_ADDR_SIZE, curr->begin, curr->section,\n+\t\t\t    \"Location list begin address (%s)\",\n+\t\t\t    list_head->ll_symbol);\n+      dw2_asm_output_delta (DWARF2_ADDR_SIZE, curr->end, curr->section,\n+\t\t\t    \"Location list end address (%s)\",\n+\t\t\t    list_head->ll_symbol);\n       size = size_of_locs (curr->expr);\n       \n       /* Output the block length for this list of location operations.  */\n-      dw2_asm_output_data (constant_size (size), size, \"%s\", \"Location expression size\");\n+      dw2_asm_output_data (constant_size (size), size, \"%s\",\n+\t\t\t   \"Location expression size\");\n       \n       output_loc_sequence (curr->expr);\n     }\n-  dw2_asm_output_data (DWARF_OFFSET_SIZE, 0, \"Location list terminator begin (%s)\", list_head->ll_symbol);\n-  dw2_asm_output_data (DWARF_OFFSET_SIZE, 0, \"Location list terminator end (%s)\", list_head->ll_symbol);\n+  dw2_asm_output_data (DWARF_OFFSET_SIZE, 0,\n+\t\t       \"Location list terminator begin (%s)\",\n+\t\t       list_head->ll_symbol);\n+  dw2_asm_output_data (DWARF_OFFSET_SIZE, 0,\n+\t\t       \"Location list terminator end (%s)\",\n+\t\t       list_head->ll_symbol);\n }\n /* Output the DIE and its attributes.  Called recursively to generate\n    the definitions of each child DIE.  */"}]}