{"sha": "af47810aed761b3795572e0ae46b8c28fd09b5ee", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWY0NzgxMGFlZDc2MWIzNzk1NTcyZTBhZTQ2YjhjMjhmZDA5YjVlZQ==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2005-05-16T23:14:02Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2005-05-16T23:14:02Z"}, "message": "re PR tree-optimization/21399 (libstdc++ 12077.cc ICE)\n\n        PR tree-opt/21399\n        * tree-eh.c (maybe_clean_or_replace_eh_stmt): Rename from\n        maybe_clean_eh_stmt; take old stmt parameter.  Update EH\n        region data structure to match replacement.\n        * tree-flow.h: Update to match.\n        * tree-ssa-ccp.c (execute_fold_all_builtins): Likewise.\n        * tree-ssa-dom.c (optimize_stmt): Likewise.\n        * tree-ssa-pre.c (eliminate): Likewise.\n        * tree-ssa-propagate.c (substitute_and_fold): Likewise.\n\nCo-Authored-By: Steven Bosscher <stevenb@suse.de>\n\nFrom-SVN: r99801", "tree": {"sha": "33124791d9f4d0376ee20ed1b477125f15b3b1d3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/33124791d9f4d0376ee20ed1b477125f15b3b1d3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/af47810aed761b3795572e0ae46b8c28fd09b5ee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af47810aed761b3795572e0ae46b8c28fd09b5ee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/af47810aed761b3795572e0ae46b8c28fd09b5ee", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af47810aed761b3795572e0ae46b8c28fd09b5ee/comments", "author": null, "committer": null, "parents": [{"sha": "f59d2aade3edd34329cc69762bc7d155284b6c62", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f59d2aade3edd34329cc69762bc7d155284b6c62", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f59d2aade3edd34329cc69762bc7d155284b6c62"}], "stats": {"total": 61, "additions": 48, "deletions": 13}, "files": [{"sha": "e3843ed999702ffec94e018d8c3ada74381722e5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af47810aed761b3795572e0ae46b8c28fd09b5ee/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af47810aed761b3795572e0ae46b8c28fd09b5ee/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=af47810aed761b3795572e0ae46b8c28fd09b5ee", "patch": "@@ -1,3 +1,16 @@\n+2005-05-16  Richard Henderson  <rth@redhat.com>\n+\t    Steven Bosscher <stevenb@suse.de>\n+\n+\tPR tree-opt/21399\n+\t* tree-eh.c (maybe_clean_or_replace_eh_stmt): Rename from \n+\tmaybe_clean_eh_stmt; take old stmt parameter.  Update EH\n+\tregion data structure to match replacement.\n+\t* tree-flow.h: Update to match.\n+\t* tree-ssa-ccp.c (execute_fold_all_builtins): Likewise.\n+\t* tree-ssa-dom.c (optimize_stmt): Likewise.\n+\t* tree-ssa-pre.c (eliminate): Likewise.\n+\t* tree-ssa-propagate.c (substitute_and_fold): Likewise.\n+\n 2005-05-16  Caroline Tice  <ctice@apple.com>\n \n \t* bb-reorder.c (verify_hot_cold_block_grouping):  Replace"}, {"sha": "9f641e186d20fa517cfa147cdeb92ea8532ecb72", "filename": "gcc/tree-eh.c", "status": "modified", "additions": 26, "deletions": 6, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af47810aed761b3795572e0ae46b8c28fd09b5ee/gcc%2Ftree-eh.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af47810aed761b3795572e0ae46b8c28fd09b5ee/gcc%2Ftree-eh.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-eh.c?ref=af47810aed761b3795572e0ae46b8c28fd09b5ee", "patch": "@@ -2034,12 +2034,32 @@ tree_can_throw_external (tree stmt)\n     return can_throw_external_1 (region_nr);\n }\n \n-bool\n-maybe_clean_eh_stmt (tree stmt)\n+/* Given a statement OLD_STMT and a new statement NEW_STMT that has replaced\n+   OLD_STMT in the function, remove OLD_STMT from the EH table and put NEW_STMT\n+   in the table if it should be in there.  Return TRUE if a replacement was\n+   done that my require an EH edge purge.  */\n+\n+bool \n+maybe_clean_or_replace_eh_stmt (tree old_stmt, tree new_stmt) \n {\n-  if (!tree_could_throw_p (stmt))\n-    if (remove_stmt_from_eh_region (stmt))\n-      return true;\n+  int region_nr = lookup_stmt_eh_region (old_stmt);\n+\n+  if (region_nr >= 0)\n+    {\n+      bool new_stmt_could_throw = tree_could_throw_p (new_stmt);\n+\n+      if (new_stmt == old_stmt && new_stmt_could_throw)\n+\treturn false;\n+\n+      remove_stmt_from_eh_region (old_stmt);\n+      if (new_stmt_could_throw)\n+\t{\n+\t  add_stmt_to_eh_region (new_stmt, region_nr);\n+\t  return false;\n+\t}\n+      else\n+\treturn true;\n+    }\n+\n   return false;\n }\n-"}, {"sha": "6a6e3488312d9bf5bc38dbcbdd15b87a42e7f180", "filename": "gcc/tree-flow.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af47810aed761b3795572e0ae46b8c28fd09b5ee/gcc%2Ftree-flow.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af47810aed761b3795572e0ae46b8c28fd09b5ee/gcc%2Ftree-flow.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-flow.h?ref=af47810aed761b3795572e0ae46b8c28fd09b5ee", "patch": "@@ -751,7 +751,7 @@ extern bool tree_can_throw_external (tree);\n extern int lookup_stmt_eh_region (tree);\n extern void add_stmt_to_eh_region (tree, int);\n extern bool remove_stmt_from_eh_region (tree);\n-extern bool maybe_clean_eh_stmt (tree);\n+extern bool maybe_clean_or_replace_eh_stmt (tree, tree);\n \n /* In tree-ssa-pre.c  */\n void add_to_value (tree, tree);"}, {"sha": "85753bdd764d31044b65d35ddb38c08d4117841e", "filename": "gcc/tree-ssa-ccp.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af47810aed761b3795572e0ae46b8c28fd09b5ee/gcc%2Ftree-ssa-ccp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af47810aed761b3795572e0ae46b8c28fd09b5ee/gcc%2Ftree-ssa-ccp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-ccp.c?ref=af47810aed761b3795572e0ae46b8c28fd09b5ee", "patch": "@@ -2355,6 +2355,7 @@ execute_fold_all_builtins (void)\n       for (i = bsi_start (bb); !bsi_end_p (i); bsi_next (&i))\n \t{\n \t  tree *stmtp = bsi_stmt_ptr (i);\n+\t  tree old_stmt = *stmtp;\n \t  tree call = get_rhs (*stmtp);\n \t  tree callee, result;\n \n@@ -2396,7 +2397,7 @@ execute_fold_all_builtins (void)\n \t\t}\n \t    }\n \t  update_stmt (*stmtp);\n-\t  if (maybe_clean_eh_stmt (*stmtp)\n+\t  if (maybe_clean_or_replace_eh_stmt (old_stmt, *stmtp)\n \t      && tree_purge_dead_eh_edges (bb))\n \t    cfg_changed = true;\n "}, {"sha": "b827494b7dc1236105d1099cfdbf4c1e232218c0", "filename": "gcc/tree-ssa-dom.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af47810aed761b3795572e0ae46b8c28fd09b5ee/gcc%2Ftree-ssa-dom.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af47810aed761b3795572e0ae46b8c28fd09b5ee/gcc%2Ftree-ssa-dom.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-dom.c?ref=af47810aed761b3795572e0ae46b8c28fd09b5ee", "patch": "@@ -2946,11 +2946,11 @@ optimize_stmt (struct dom_walk_data *walk_data, basic_block bb,\n \t       block_stmt_iterator si)\n {\n   stmt_ann_t ann;\n-  tree stmt;\n+  tree stmt, old_stmt;\n   bool may_optimize_p;\n   bool may_have_exposed_new_symbols = false;\n \n-  stmt = bsi_stmt (si);\n+  old_stmt = stmt = bsi_stmt (si);\n \n   update_stmt_if_modified (stmt);\n   ann = stmt_ann (stmt);\n@@ -3055,7 +3055,7 @@ optimize_stmt (struct dom_walk_data *walk_data, basic_block bb,\n \n       /* If we simplified a statement in such a way as to be shown that it\n \t cannot trap, update the eh information and the cfg to match.  */\n-      if (maybe_clean_eh_stmt (stmt))\n+      if (maybe_clean_or_replace_eh_stmt (old_stmt, stmt))\n \t{\n \t  bitmap_set_bit (need_eh_cleanup, bb->index);\n \t  if (dump_file && (dump_flags & TDF_DETAILS))"}, {"sha": "54cbf639b77c9b08de48a19ef6abe826e7cee5ac", "filename": "gcc/tree-ssa-pre.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af47810aed761b3795572e0ae46b8c28fd09b5ee/gcc%2Ftree-ssa-pre.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af47810aed761b3795572e0ae46b8c28fd09b5ee/gcc%2Ftree-ssa-pre.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-pre.c?ref=af47810aed761b3795572e0ae46b8c28fd09b5ee", "patch": "@@ -2321,7 +2321,7 @@ eliminate (void)\n \n \t\t  /* If we removed EH side effects from the statement, clean\n \t\t     its EH information.  */\n-\t\t  if (maybe_clean_eh_stmt (stmt))\n+\t\t  if (maybe_clean_or_replace_eh_stmt (stmt, stmt))\n \t\t    {\n \t\t      bitmap_set_bit (need_eh_cleanup,\n \t\t\t\t      bb_for_stmt (stmt)->index);"}, {"sha": "ee8b1652627846d98fbfe015f9d0e2346a7f89cb", "filename": "gcc/tree-ssa-propagate.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af47810aed761b3795572e0ae46b8c28fd09b5ee/gcc%2Ftree-ssa-propagate.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af47810aed761b3795572e0ae46b8c28fd09b5ee/gcc%2Ftree-ssa-propagate.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-propagate.c?ref=af47810aed761b3795572e0ae46b8c28fd09b5ee", "patch": "@@ -1051,6 +1051,7 @@ substitute_and_fold (prop_value_t *prop_value)\n \t  did_replace |= replace_vuses_in (stmt, &replaced_address, prop_value);\n \t  if (did_replace)\n \t    {\n+\t      tree old_stmt = stmt;\n \t      fold_stmt (bsi_stmt_ptr (i));\n \t      stmt = bsi_stmt(i);\n \n@@ -1060,7 +1061,7 @@ substitute_and_fold (prop_value_t *prop_value)\n \n               /* If we cleaned up EH information from the statement,\n                  remove EH edges.  */\n-\t      if (maybe_clean_eh_stmt (stmt))\n+\t      if (maybe_clean_or_replace_eh_stmt (old_stmt, stmt))\n \t\ttree_purge_dead_eh_edges (bb);\n \t    }\n "}]}