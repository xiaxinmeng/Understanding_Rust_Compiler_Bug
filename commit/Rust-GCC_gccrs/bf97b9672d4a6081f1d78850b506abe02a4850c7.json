{"sha": "bf97b9672d4a6081f1d78850b506abe02a4850c7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmY5N2I5NjcyZDRhNjA4MWYxZDc4ODUwYjUwNmFiZTAyYTQ4NTBjNw==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1993-08-28T19:04:13Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1993-08-28T19:04:13Z"}, "message": "(call+1...\n\n(call+1, call+2, call_value+1, untyped_call+1): Split\ninto two patterns, one using address_operand and 'p', the other\nimmediate_operand and 'i'.\n\nFrom-SVN: r5223", "tree": {"sha": "08a8b86f5a7c38d2b2c95fa73238ab182b05ac26", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/08a8b86f5a7c38d2b2c95fa73238ab182b05ac26"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bf97b9672d4a6081f1d78850b506abe02a4850c7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf97b9672d4a6081f1d78850b506abe02a4850c7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bf97b9672d4a6081f1d78850b506abe02a4850c7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf97b9672d4a6081f1d78850b506abe02a4850c7/comments", "author": null, "committer": null, "parents": [{"sha": "e228410eeb2c812c49d0b4534c4d7dd56352391e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e228410eeb2c812c49d0b4534c4d7dd56352391e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e228410eeb2c812c49d0b4534c4d7dd56352391e"}], "stats": {"total": 71, "additions": 65, "deletions": 6}, "files": [{"sha": "9c48d2fd07216bda3d858adc5483516ef49a170a", "filename": "gcc/config/sparc/sparc.md", "status": "modified", "additions": 65, "deletions": 6, "changes": 71, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf97b9672d4a6081f1d78850b506abe02a4850c7/gcc%2Fconfig%2Fsparc%2Fsparc.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf97b9672d4a6081f1d78850b506abe02a4850c7/gcc%2Fconfig%2Fsparc%2Fsparc.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.md?ref=bf97b9672d4a6081f1d78850b506abe02a4850c7", "patch": "@@ -2675,8 +2675,23 @@\n   DONE;\n }\")\n \n+;; We can't use the same pattern for these two insns, because then registers\n+;; in the address may not be properly reloaded.\n+\n+(define_insn \"\"\n+  [(call (mem:SI (match_operand:SI 0 \"address_operand\" \"p\"))\n+\t (match_operand 1 \"\" \"\"))\n+   (clobber (reg:SI 15))]\n+  ;;- Do not use operand 1 for most machines.\n+  \"\"\n+  \"*\n+{\n+  return \\\"call %a0,%1%#\\\";\n+}\"\n+  [(set_attr \"type\" \"call\")])\n+\n (define_insn \"\"\n-  [(call (mem:SI (match_operand:SI 0 \"call_operand_address\" \"S,r\"))\n+  [(call (mem:SI (match_operand:SI 0 \"immediate_operand\" \"i\"))\n \t (match_operand 1 \"\" \"\"))\n    (clobber (reg:SI 15))]\n   ;;- Do not use operand 1 for most machines.\n@@ -2689,7 +2704,21 @@\n \n ;; This is a call that wants a structure value.\n (define_insn \"\"\n-  [(call (mem:SI (match_operand:SI 0 \"call_operand_address\" \"S,r\"))\n+  [(call (mem:SI (match_operand:SI 0 \"address_operand\" \"p\"))\n+\t (match_operand 1 \"\" \"\"))\n+   (match_operand 2 \"immediate_operand\" \"\")\n+   (clobber (reg:SI 15))]\n+  ;;- Do not use operand 1 for most machines.\n+  \"GET_CODE (operands[2]) == CONST_INT && INTVAL (operands[2]) > 0\"\n+  \"*\n+{\n+  return \\\"call %a0,%1\\;nop\\;unimp %2\\\";\n+}\"\n+  [(set_attr \"type\" \"call_no_delay_slot\")])\n+\n+;; This is a call that wants a structure value.\n+(define_insn \"\"\n+  [(call (mem:SI (match_operand:SI 0 \"immediate_operand\" \"i\"))\n \t (match_operand 1 \"\" \"\"))\n    (match_operand 2 \"immediate_operand\" \"\")\n    (clobber (reg:SI 15))]\n@@ -2735,7 +2764,20 @@\n \n (define_insn \"\"\n   [(set (match_operand 0 \"\" \"=rf\")\n-\t(call (mem:SI (match_operand:SI 1 \"call_operand_address\" \"rS\"))\n+\t(call (mem:SI (match_operand:SI 1 \"address_operand\" \"p\"))\n+\t      (match_operand 2 \"\" \"\")))\n+   (clobber (reg:SI 15))]\n+  ;;- Do not use operand 2 for most machines.\n+  \"\"\n+  \"*\n+{\n+  return \\\"call %a1,%2%#\\\";\n+}\"\n+  [(set_attr \"type\" \"call\")])\n+\n+(define_insn \"\"\n+  [(set (match_operand 0 \"\" \"=rf\")\n+\t(call (mem:SI (match_operand:SI 1 \"immediate_operand\" \"i\"))\n \t      (match_operand 2 \"\" \"\")))\n    (clobber (reg:SI 15))]\n   ;;- Do not use operand 2 for most machines.\n@@ -2762,7 +2804,24 @@\n ;; returns a structure value and expects to skip an unimp instruction.\n \n (define_insn \"\"\n-  [(call (mem:SI (match_operand:SI 0 \"call_operand_address\" \"rS\"))\n+  [(call (mem:SI (match_operand:SI 0 \"address_operand\" \"p\"))\n+\t (const_int 0))\n+   (match_operand:DI 1 \"memory_operand\" \"o\")\n+   (match_operand 2 \"\" \"\")\n+   (clobber (reg:SI 15))]\n+  \"\"\n+  \"*\n+{\n+  operands[2] = adj_offsettable_operand (operands[1], 8);\n+  return \\\"call %a0,0\\;nop\\;nop\\;std %%o0,%1\\;st %%f0,%2\\\";\n+}\"\n+  [(set_attr \"type\" \"multi\")])\n+\n+;; Make a call followed by two nops in case the function being called\n+;; returns a structure value and expects to skip an unimp instruction.\n+\n+(define_insn \"\"\n+  [(call (mem:SI (match_operand:SI 0 \"immediate_operand\" \"i\"))\n \t (const_int 0))\n    (match_operand:DI 1 \"memory_operand\" \"o\")\n    (match_operand 2 \"\" \"\")\n@@ -3376,7 +3435,7 @@\n \n (define_peephole\n   [(parallel [(set (match_operand 0 \"\" \"\")\n-\t\t   (call (mem:SI (match_operand:SI 1 \"call_operand_address\" \"S,r\"))\n+\t\t   (call (mem:SI (match_operand:SI 1 \"call_operand_address\" \"pi\"))\n \t\t\t (match_operand 2 \"\" \"\")))\n \t      (clobber (reg:SI 15))])\n    (set (pc) (label_ref (match_operand 3 \"\" \"\")))]\n@@ -3387,7 +3446,7 @@\n }\")\n \n (define_peephole\n-  [(parallel [(call (mem:SI (match_operand:SI 0 \"call_operand_address\" \"S,r\"))\n+  [(parallel [(call (mem:SI (match_operand:SI 0 \"call_operand_address\" \"pi\"))\n \t\t    (match_operand 1 \"\" \"\"))\n \t      (clobber (reg:SI 15))])\n    (set (pc) (label_ref (match_operand 2 \"\" \"\")))]"}]}