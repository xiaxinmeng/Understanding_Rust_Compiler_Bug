{"sha": "6db566c308dd9ecf9e82938d7bec32884a596e74", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmRiNTY2YzMwOGRkOWVjZjllODI5MzhkN2JlYzMyODg0YTU5NmU3NA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-10-29T11:41:01Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-10-29T11:41:01Z"}, "message": "[multiple changes]\n\n2012-10-29  Robert Dewar  <dewar@adacore.com>\n\n\t* gnat_rm.texi: Document that pragma Optimize_Alignment (Space) is\n\tignored with a warning for packed variable length records.\n\n2012-10-29  Thomas Quinot  <quinot@adacore.com>\n\n\t* socket.c, g-socthi-dummy.adb, g-socthi-dummy.ads, g-socthi-vms.adb,\n\tg-socthi-vms.ads, g-socthi-vxworks.adb, g-socthi-vxworks.ads,\n\ts-oscons-tmplt.c, g-socthi-mingw.adb, g-socthi-mingw.ads, g-socthi.adb,\n\tg-socthi.ads, xoscons.adb, g-socket.adb, g-sothco.ads: Introduce an\n\tappropriate subtype for IOCTL requests, since these may be signed or\n\tunsigned.\n\nFrom-SVN: r192939", "tree": {"sha": "3beb37af116d2dcf9f705e6d213741c7822895b3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3beb37af116d2dcf9f705e6d213741c7822895b3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6db566c308dd9ecf9e82938d7bec32884a596e74", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6db566c308dd9ecf9e82938d7bec32884a596e74", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6db566c308dd9ecf9e82938d7bec32884a596e74", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6db566c308dd9ecf9e82938d7bec32884a596e74/comments", "author": null, "committer": null, "parents": [{"sha": "43254605cb483d1f7fd5f8df8390d29e4442ba4e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43254605cb483d1f7fd5f8df8390d29e4442ba4e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/43254605cb483d1f7fd5f8df8390d29e4442ba4e"}], "stats": {"total": 230, "additions": 145, "deletions": 85}, "files": [{"sha": "1154f3f6d16fb92c92037cdd3568baa8bdfdb96e", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6db566c308dd9ecf9e82938d7bec32884a596e74/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6db566c308dd9ecf9e82938d7bec32884a596e74/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=6db566c308dd9ecf9e82938d7bec32884a596e74", "patch": "@@ -1,3 +1,17 @@\n+2012-10-29  Robert Dewar  <dewar@adacore.com>\n+\n+\t* gnat_rm.texi: Document that pragma Optimize_Alignment (Space) is\n+\tignored with a warning for packed variable length records.\n+\n+2012-10-29  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* socket.c, g-socthi-dummy.adb, g-socthi-dummy.ads, g-socthi-vms.adb,\n+\tg-socthi-vms.ads, g-socthi-vxworks.adb, g-socthi-vxworks.ads,\n+\ts-oscons-tmplt.c, g-socthi-mingw.adb, g-socthi-mingw.ads, g-socthi.adb,\n+\tg-socthi.ads, xoscons.adb, g-socket.adb, g-sothco.ads: Introduce an\n+\tappropriate subtype for IOCTL requests, since these may be signed or\n+\tunsigned.\n+\n 2012-10-29  Gary Dismukes  <dismukes@adacore.com>\n \n \t* exp_alfa.adb: Minor reformatting."}, {"sha": "c7b71208ff0566ad4ddf2d627fe838ca2087025d", "filename": "gcc/ada/g-socket.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6db566c308dd9ecf9e82938d7bec32884a596e74/gcc%2Fada%2Fg-socket.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6db566c308dd9ecf9e82938d7bec32884a596e74/gcc%2Fada%2Fg-socket.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socket.adb?ref=6db566c308dd9ecf9e82938d7bec32884a596e74", "patch": "@@ -80,7 +80,7 @@ package body GNAT.Sockets is\n                   Shut_Write      => SOSC.SHUT_WR,\n                   Shut_Read_Write => SOSC.SHUT_RDWR);\n \n-   Requests : constant array (Request_Name) of C.int :=\n+   Requests : constant array (Request_Name) of SOSC.IOCTL_Req_T :=\n                 (Non_Blocking_IO => SOSC.FIONBIO,\n                  N_Bytes_To_Read => SOSC.FIONREAD);\n "}, {"sha": "b5ed8e26e15234c7e4aacf6799016d2cc772c5b6", "filename": "gcc/ada/g-socthi-dummy.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6db566c308dd9ecf9e82938d7bec32884a596e74/gcc%2Fada%2Fg-socthi-dummy.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6db566c308dd9ecf9e82938d7bec32884a596e74/gcc%2Fada%2Fg-socthi-dummy.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socthi-dummy.adb?ref=6db566c308dd9ecf9e82938d7bec32884a596e74", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                     Copyright (C) 2001-2010, AdaCore                     --\n+--                     Copyright (C) 2001-2012, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "d7fc9824fc214b7acbc993a135be249aa09eb764", "filename": "gcc/ada/g-socthi-dummy.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6db566c308dd9ecf9e82938d7bec32884a596e74/gcc%2Fada%2Fg-socthi-dummy.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6db566c308dd9ecf9e82938d7bec32884a596e74/gcc%2Fada%2Fg-socthi-dummy.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socthi-dummy.ads?ref=6db566c308dd9ecf9e82938d7bec32884a596e74", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---                     Copyright (C) 2001-2010, AdaCore                     --\n+--                     Copyright (C) 2001-2012, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "ad82c167d67bd999b638901e55ed8c1f7837fac3", "filename": "gcc/ada/g-socthi-mingw.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6db566c308dd9ecf9e82938d7bec32884a596e74/gcc%2Fada%2Fg-socthi-mingw.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6db566c308dd9ecf9e82938d7bec32884a596e74/gcc%2Fada%2Fg-socthi-mingw.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socthi-mingw.adb?ref=6db566c308dd9ecf9e82938d7bec32884a596e74", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                    Copyright (C) 2001-2011, AdaCore                      --\n+--                    Copyright (C) 2001-2012, AdaCore                      --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -256,7 +256,7 @@ package body GNAT.Sockets.Thin is\n \n    function Socket_Ioctl\n      (S   : C.int;\n-      Req : C.int;\n+      Req : SOSC.IOCTL_Req_T;\n       Arg : access C.int) return C.int\n    is\n    begin"}, {"sha": "b1493a7cfed53e9c06874f459d9e8d31029b9f29", "filename": "gcc/ada/g-socthi-mingw.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6db566c308dd9ecf9e82938d7bec32884a596e74/gcc%2Fada%2Fg-socthi-mingw.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6db566c308dd9ecf9e82938d7bec32884a596e74/gcc%2Fada%2Fg-socthi-mingw.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socthi-mingw.ads?ref=6db566c308dd9ecf9e82938d7bec32884a596e74", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---                     Copyright (C) 2001-2010, AdaCore                     --\n+--                     Copyright (C) 2001-2012, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -118,7 +118,7 @@ package GNAT.Sockets.Thin is\n \n    function Socket_Ioctl\n      (S   : C.int;\n-      Req : C.int;\n+      Req : SOSC.IOCTL_Req_T;\n       Arg : access C.int) return C.int;\n \n    function C_Listen"}, {"sha": "8a49dc5b0d541e0e98b53a66a3f2c8b6e605442a", "filename": "gcc/ada/g-socthi-vms.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6db566c308dd9ecf9e82938d7bec32884a596e74/gcc%2Fada%2Fg-socthi-vms.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6db566c308dd9ecf9e82938d7bec32884a596e74/gcc%2Fada%2Fg-socthi-vms.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socthi-vms.adb?ref=6db566c308dd9ecf9e82938d7bec32884a596e74", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                     Copyright (C) 2001-2011, AdaCore                     --\n+--                     Copyright (C) 2001-2012, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -227,7 +227,7 @@ package body GNAT.Sockets.Thin is\n \n    function Socket_Ioctl\n      (S   : C.int;\n-      Req : C.int;\n+      Req : SOSC.IOCTL_Req_T;\n       Arg : access C.int) return C.int\n    is\n    begin"}, {"sha": "3aea7d227785d179ebcc92b3362898e090ac1f4c", "filename": "gcc/ada/g-socthi-vms.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6db566c308dd9ecf9e82938d7bec32884a596e74/gcc%2Fada%2Fg-socthi-vms.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6db566c308dd9ecf9e82938d7bec32884a596e74/gcc%2Fada%2Fg-socthi-vms.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socthi-vms.ads?ref=6db566c308dd9ecf9e82938d7bec32884a596e74", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---                     Copyright (C) 2002-2010, AdaCore                     --\n+--                     Copyright (C) 2002-2012, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -121,7 +121,7 @@ package GNAT.Sockets.Thin is\n \n    function Socket_Ioctl\n      (S   : C.int;\n-      Req : C.int;\n+      Req : SOSC.IOCTL_Req_T;\n       Arg : access C.int) return C.int;\n \n    function C_Listen"}, {"sha": "87549edb6c6ad8369f1b444b12d3836798cdbca7", "filename": "gcc/ada/g-socthi-vxworks.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6db566c308dd9ecf9e82938d7bec32884a596e74/gcc%2Fada%2Fg-socthi-vxworks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6db566c308dd9ecf9e82938d7bec32884a596e74/gcc%2Fada%2Fg-socthi-vxworks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socthi-vxworks.adb?ref=6db566c308dd9ecf9e82938d7bec32884a596e74", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                     Copyright (C) 2002-2010, AdaCore                     --\n+--                     Copyright (C) 2002-2012, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -235,7 +235,7 @@ package body GNAT.Sockets.Thin is\n \n    function Socket_Ioctl\n      (S   : C.int;\n-      Req : C.int;\n+      Req : SOSC.IOCTL_Req_T;\n       Arg : access C.int) return C.int\n    is\n    begin"}, {"sha": "793258baa969f493aa3c7b3f86b2c9ecc76cb111", "filename": "gcc/ada/g-socthi-vxworks.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6db566c308dd9ecf9e82938d7bec32884a596e74/gcc%2Fada%2Fg-socthi-vxworks.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6db566c308dd9ecf9e82938d7bec32884a596e74/gcc%2Fada%2Fg-socthi-vxworks.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socthi-vxworks.ads?ref=6db566c308dd9ecf9e82938d7bec32884a596e74", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---                     Copyright (C) 2002-2010, AdaCore                     --\n+--                     Copyright (C) 2002-2012, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -119,7 +119,7 @@ package GNAT.Sockets.Thin is\n \n    function Socket_Ioctl\n      (S   : C.int;\n-      Req : C.int;\n+      Req : SOSC.IOCTL_Req_T;\n       Arg : access C.int) return C.int;\n \n    function C_Listen"}, {"sha": "801936f9ba5c61afe72be8ab3f0c38c281d721a0", "filename": "gcc/ada/g-socthi.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6db566c308dd9ecf9e82938d7bec32884a596e74/gcc%2Fada%2Fg-socthi.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6db566c308dd9ecf9e82938d7bec32884a596e74/gcc%2Fada%2Fg-socthi.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socthi.adb?ref=6db566c308dd9ecf9e82938d7bec32884a596e74", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                     Copyright (C) 2001-2010, AdaCore                     --\n+--                     Copyright (C) 2001-2012, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -233,7 +233,7 @@ package body GNAT.Sockets.Thin is\n \n    function Socket_Ioctl\n      (S   : C.int;\n-      Req : C.int;\n+      Req : SOSC.IOCTL_Req_T;\n       Arg : access C.int) return C.int\n    is\n    begin"}, {"sha": "b034e258538374e97350daa389ba3248cc88c396", "filename": "gcc/ada/g-socthi.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6db566c308dd9ecf9e82938d7bec32884a596e74/gcc%2Fada%2Fg-socthi.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6db566c308dd9ecf9e82938d7bec32884a596e74/gcc%2Fada%2Fg-socthi.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socthi.ads?ref=6db566c308dd9ecf9e82938d7bec32884a596e74", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---                     Copyright (C) 2001-2010, AdaCore                     --\n+--                     Copyright (C) 2001-2012, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -120,7 +120,7 @@ package GNAT.Sockets.Thin is\n \n    function Socket_Ioctl\n      (S   : C.int;\n-      Req : C.int;\n+      Req : SOSC.IOCTL_Req_T;\n       Arg : access C.int) return C.int;\n \n    function C_Listen"}, {"sha": "b957f225e80d699fa4129f8da9049fa4f6eaffa3", "filename": "gcc/ada/g-sothco.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6db566c308dd9ecf9e82938d7bec32884a596e74/gcc%2Fada%2Fg-sothco.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6db566c308dd9ecf9e82938d7bec32884a596e74/gcc%2Fada%2Fg-sothco.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-sothco.ads?ref=6db566c308dd9ecf9e82938d7bec32884a596e74", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---                     Copyright (C) 2008-2010, AdaCore                     --\n+--                     Copyright (C) 2008-2012, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -385,7 +385,7 @@ package GNAT.Sockets.Thin_Common is\n \n    function C_Ioctl\n      (Fd  : C.int;\n-      Req : C.int;\n+      Req : SOSC.IOCTL_Req_T;\n       Arg : access C.int) return C.int;\n \n private"}, {"sha": "ef57af5217f45b7ef3a1477725ee449b397b9535", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6db566c308dd9ecf9e82938d7bec32884a596e74/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6db566c308dd9ecf9e82938d7bec32884a596e74/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=6db566c308dd9ecf9e82938d7bec32884a596e74", "patch": "@@ -4032,6 +4032,12 @@ allowed to be bigger than the size of the type, but it can waste space if for\n example fields of type R appear in an enclosing record. If the above type is\n compiled in @code{Optimize_Alignment (Space)} mode, the alignment is set to 1.\n \n+However, there is one case in which SPACE is ignored. If a variable length\n+record (that is a discriminated record with a component which is an array\n+whose length depends on a discriminant), has a pragam pack, then it is not\n+in general possible to set the alignment of such a record to one, so the\n+pragma is ignored in this case (with a warning).\n+\n Specifying TIME causes larger default alignments to be chosen in the case of\n small types with sizes that are not a power of 2. For example, consider:\n "}, {"sha": "c386a1f0b0bf4ebfab486de5a6ea3096b1ee380a", "filename": "gcc/ada/s-oscons-tmplt.c", "status": "modified", "additions": 24, "deletions": 11, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6db566c308dd9ecf9e82938d7bec32884a596e74/gcc%2Fada%2Fs-oscons-tmplt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6db566c308dd9ecf9e82938d7bec32884a596e74/gcc%2Fada%2Fs-oscons-tmplt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-oscons-tmplt.c?ref=6db566c308dd9ecf9e82938d7bec32884a596e74", "patch": "@@ -182,6 +182,9 @@ int counter = 0;\n #define C(sname,type,value,comment)\\\n   printf (\"\\n->C:$%d:\" sname \":\" #type \":\" value \":\" comment, __LINE__);\n \n+#define SUB(sname)\\\n+  printf (\"\\n->SUB:$%d:\" #sname \":\" sname, __LINE__);\n+\n #define TXT(text) \\\n   printf (\"\\n->TXT:$%d:\" text, __LINE__);\n \n@@ -209,6 +212,11 @@ int counter = 0;\n   : : \"i\" (__LINE__));\n /* Typed constant */\n \n+#define SUB(sname) \\\n+  asm volatile(\"\\n->SUB:%0:\" #sname \":\" sname \\\n+  : : \"i\" (__LINE__));\n+/* Subtype */\n+\n #define TXT(text) \\\n   asm volatile(\"\\n->TXT:%0:\" text \\\n   : : \"i\" (__LINE__));\n@@ -217,14 +225,7 @@ int counter = 0;\n #endif /* NATIVE */\n \n #define CST(name,comment) C(#name,String,name,comment)\n-\n-/* ioctl(2) requests are \"int\" in UNIX, but \"unsigned long\" on FreeBSD */\n-\n-#ifdef __FreeBSD__\n-# define CNI CNU\n-#else\n-# define CNI CND\n-#endif\n+/* String constant */\n \n #define STR(x) STR1(x)\n #define STR1(x) #x\n@@ -378,6 +379,18 @@ CND(FNDELAY, \"Nonblocking\")\n \n */\n \n+/* ioctl(2) requests are \"int\" in UNIX, but \"unsigned long\" on FreeBSD */\n+\n+#ifdef __FreeBSD__\n+# define CNI CNU\n+# define IOCTL_Req_T \"unsigned\"\n+#else\n+# define CNI CND\n+# define IOCTL_Req_T \"int\"\n+#endif\n+\n+SUB(IOCTL_Req_T)\n+\n #ifndef FIONBIO\n # define FIONBIO -1\n #endif\n@@ -1333,12 +1346,12 @@ CND(SIZEOF_sigset, \"sigset\");\n */\n \n #if defined (__sun__) || defined (__hpux__)\n-# define msg_iovlen_t \"int\"\n+# define Msg_Iovlen_T \"int\"\n #else\n-# define msg_iovlen_t \"size_t\"\n+# define Msg_Iovlen_T \"size_t\"\n #endif\n \n-TXT(\"   subtype Msg_Iovlen_T is Interfaces.C.\" msg_iovlen_t \";\")\n+SUB(Msg_Iovlen_T)\n \n /*\n "}, {"sha": "18999b394ea5504b46a926b1fe9fed733ee04736", "filename": "gcc/ada/socket.c", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6db566c308dd9ecf9e82938d7bec32884a596e74/gcc%2Fada%2Fsocket.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6db566c308dd9ecf9e82938d7bec32884a596e74/gcc%2Fada%2Fsocket.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsocket.c?ref=6db566c308dd9ecf9e82938d7bec32884a596e74", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                          C Implementation File                           *\n  *                                                                          *\n- *          Copyright (C) 2003-2010, Free Software Foundation, Inc.         *\n+ *          Copyright (C) 2003-2012, Free Software Foundation, Inc.         *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *\n@@ -33,7 +33,7 @@\n \n #include \"gsocket.h\"\n \n-#ifdef VMS\n+#if defined(VMS)\n /*\n  * For VMS, gsocket.h can't include sockets-related DEC C header files\n  * when building the runtime (because these files are in a DEC C text library\n@@ -65,6 +65,10 @@ struct servent {\n   int                  s_port;\n   __netdb_char_ptr     s_proto;\n };\n+#elif defined(__FreeBSD__)\n+typedef unsigned int IOCTL_Req_T;\n+#else\n+typedef int IOCTL_Req_T;\n #endif\n \n #if defined(HAVE_SOCKETS)\n@@ -98,7 +102,7 @@ extern fd_set *__gnat_new_socket_set (fd_set *);\n extern void __gnat_remove_socket_from_set (fd_set *, int);\n extern void __gnat_reset_socket_set (fd_set *);\n extern int  __gnat_get_h_errno (void);\n-extern int  __gnat_socket_ioctl (int, int, int *);\n+extern int  __gnat_socket_ioctl (int, IOCTL_Req_T, int *);\n \n extern char * __gnat_servent_s_name (struct servent *);\n extern char * __gnat_servent_s_alias (struct servent *, int index);\n@@ -526,7 +530,7 @@ __gnat_get_h_errno (void) {\n /* Wrapper for ioctl(2), which is a variadic function */\n \n int\n-__gnat_socket_ioctl (int fd, int req, int *arg) {\n+__gnat_socket_ioctl (int fd, IOCTL_Req_T req, int *arg) {\n #if defined (_WIN32)\n   return ioctlsocket (fd, req, arg);\n #elif defined (__APPLE__)"}, {"sha": "4c58ebaedd2dd0a9d82aa32b24cc23146066ec15", "filename": "gcc/ada/xoscons.adb", "status": "modified", "additions": 72, "deletions": 49, "changes": 121, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6db566c308dd9ecf9e82938d7bec32884a596e74/gcc%2Fada%2Fxoscons.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6db566c308dd9ecf9e82938d7bec32884a596e74/gcc%2Fada%2Fxoscons.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fxoscons.adb?ref=6db566c308dd9ecf9e82938d7bec32884a596e74", "patch": "@@ -76,6 +76,7 @@ procedure XOSCons is\n       CNU,     --  Named number (decimal, unsigned)\n       CNS,     --  Named number (freeform text)\n       C,       --  Constant object\n+      SUB,     --  Subtype\n       TXT);    --  Literal text\n    --  Recognized markers found in assembly file. These markers are produced by\n    --  the same-named macros from the C template.\n@@ -181,65 +182,84 @@ procedure XOSCons is\n    --  Start of processing for Output_Info\n \n    begin\n-      --  Case of non-TXT case (TXT case handled by common code below)\n+      case Info.Kind is\n+         when TXT =>\n \n-      if Info.Kind /= TXT then\n-         case Lang is\n-            when Lang_Ada =>\n-               Put (\"   \" & Info.Constant_Name.all);\n-               Put (Spaces (Max_Constant_Name_Len\n-                              - Info.Constant_Name'Length));\n+            --  Handled in the common code for comments below\n \n-               if Info.Kind in Named_Number then\n-                  Put (\" : constant := \");\n-               else\n-                  Put (\" : constant \" & Info.Constant_Type.all);\n-                  Put (Spaces (Max_Constant_Type_Len\n-                                 - Info.Constant_Type'Length));\n-                  Put (\" := \");\n-               end if;\n+            null;\n \n-            when Lang_C =>\n-               Put (\"#define \" & Info.Constant_Name.all & \" \");\n-               Put (Spaces (Max_Constant_Name_Len\n-                              - Info.Constant_Name'Length));\n-         end case;\n+         when SUB =>\n+            case Lang is\n+               when Lang_Ada =>\n+                  Put (\"   subtype \" & Info.Constant_Name.all\n+                       & \" is Interfaces.C.\"\n+                       & Info.Text_Value.all & \";\");\n+               when Lang_C =>\n+                  Put (\"#define \" & Info.Constant_Name.all & \" \"\n+                       & Info.Text_Value.all);\n+            end case;\n \n-         if Info.Kind in Asm_Int_Kind then\n-            if not Info.Int_Value.Positive then\n-               Put (\"-\");\n-            end if;\n+         when others =>\n \n-            Put (Trim (Info.Int_Value.Abs_Value'Img, Side => Left));\n+            --  All named number cases\n+\n+            case Lang is\n+               when Lang_Ada =>\n+                  Put (\"   \" & Info.Constant_Name.all);\n+                  Put (Spaces (Max_Constant_Name_Len\n+                                 - Info.Constant_Name'Length));\n+\n+                  if Info.Kind in Named_Number then\n+                     Put (\" : constant := \");\n+                  else\n+                     Put (\" : constant \" & Info.Constant_Type.all);\n+                     Put (Spaces (Max_Constant_Type_Len\n+                                    - Info.Constant_Type'Length));\n+                     Put (\" := \");\n+                  end if;\n \n-         else\n-            declare\n-               Is_String : constant Boolean :=\n-                             Info.Kind = C\n-                               and then Info.Constant_Type.all = \"String\";\n-\n-            begin\n-               if Is_String then\n-                  Put (\"\"\"\");\n+               when Lang_C =>\n+                  Put (\"#define \" & Info.Constant_Name.all & \" \");\n+                  Put (Spaces (Max_Constant_Name_Len\n+                                 - Info.Constant_Name'Length));\n+            end case;\n+\n+            if Info.Kind in Asm_Int_Kind then\n+               if not Info.Int_Value.Positive then\n+                  Put (\"-\");\n                end if;\n \n-               Put (Info.Text_Value.all);\n+               Put (Trim (Info.Int_Value.Abs_Value'Img, Side => Left));\n \n-               if Is_String then\n-                  Put (\"\"\"\");\n-               end if;\n-            end;\n-         end if;\n+            else\n+               declare\n+                  Is_String : constant Boolean :=\n+                                Info.Kind = C\n+                                  and then Info.Constant_Type.all = \"String\";\n+\n+               begin\n+                  if Is_String then\n+                     Put (\"\"\"\");\n+                  end if;\n \n-         if Lang = Lang_Ada then\n-            Put (\";\");\n+                  Put (Info.Text_Value.all);\n \n-            if Info.Comment'Length > 0 then\n-               Put (Spaces (Max_Constant_Value_Len - Info.Value_Len));\n-               Put (\" --  \");\n+                  if Is_String then\n+                     Put (\"\"\"\");\n+                  end if;\n+               end;\n             end if;\n-         end if;\n-      end if;\n+\n+            if Lang = Lang_Ada then\n+               Put (\";\");\n+\n+               if Info.Comment'Length > 0 then\n+                  Put (Spaces (Max_Constant_Value_Len - Info.Value_Len));\n+                  Put (\" --  \");\n+               end if;\n+            end if;\n+      end case;\n \n       if Lang = Lang_Ada then\n          Put (Info.Comment.all);\n@@ -349,13 +369,16 @@ procedure XOSCons is\n            Integer (Parse_Int (Line (Index1 .. Index2 - 1), CNU).Abs_Value);\n \n          case Info.Kind is\n-            when CND | CNU | CNS | C =>\n+            when CND | CNU | CNS | C | SUB =>\n                Index1 := Index2 + 1;\n                Find_Colon (Index2);\n \n                Info.Constant_Name := Field_Alloc;\n \n-               if Info.Constant_Name'Length > Max_Constant_Name_Len then\n+               if Info.Kind /= SUB\n+                    and then\n+                  Info.Constant_Name'Length > Max_Constant_Name_Len\n+               then\n                   Max_Constant_Name_Len := Info.Constant_Name'Length;\n                end if;\n "}]}