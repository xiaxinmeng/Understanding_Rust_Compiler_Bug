{"sha": "937b190d7556fce8670decf9a06aeee5d111c144", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTM3YjE5MGQ3NTU2ZmNlODY3MGRlY2Y5YTA2YWVlZTVkMTExYzE0NA==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely.gcc@gmail.com", "date": "2012-10-28T13:20:31Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2012-10-28T13:20:31Z"}, "message": "re PR libstdc++/55041 (prettyprinting/shared_ptr & cxx11 fails on some platforms)\n\n\tPR libstdc++/55041\n\t* python/libstdcxx/v6/printers.py (Tr1UnorderedMapPrinter): Update\n\tto handle hashtable as member of unordered_map not base class.\n\t(Tr1UnorderedSetPrinter): Likewise.\n\nFrom-SVN: r192894", "tree": {"sha": "07aa5871475d9ac99e00cee5af64f9a5ac9ed086", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/07aa5871475d9ac99e00cee5af64f9a5ac9ed086"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/937b190d7556fce8670decf9a06aeee5d111c144", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/937b190d7556fce8670decf9a06aeee5d111c144", "html_url": "https://github.com/Rust-GCC/gccrs/commit/937b190d7556fce8670decf9a06aeee5d111c144", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/937b190d7556fce8670decf9a06aeee5d111c144/comments", "author": null, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bf3f651054fdf0fdd672ffe344b0886e74f20098", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf3f651054fdf0fdd672ffe344b0886e74f20098", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bf3f651054fdf0fdd672ffe344b0886e74f20098"}], "stats": {"total": 25, "additions": 21, "deletions": 4}, "files": [{"sha": "d60078a6c9e1516385caa4b40da24f943647b66c", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/937b190d7556fce8670decf9a06aeee5d111c144/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/937b190d7556fce8670decf9a06aeee5d111c144/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=937b190d7556fce8670decf9a06aeee5d111c144", "patch": "@@ -1,3 +1,10 @@\n+2012-10-28  Jonathan Wakely  <jwakely.gcc@gmail.com>\n+\n+\tPR libstdc++/55041\n+\t* python/libstdcxx/v6/printers.py (Tr1UnorderedMapPrinter): Update\n+\tto handle hashtable as member of unordered_map not base class.\n+\t(Tr1UnorderedSetPrinter): Likewise.\n+\n 2012-10-27  Fran\u00e7ois Dumont  <fdumont@gcc.gnu.org>\n \n \t* include/bits/unordered_map.h (unordered_map<>): Prefer"}, {"sha": "07a5ee62f355f43bc41c24e9b3250122d0dc9888", "filename": "libstdc++-v3/python/libstdcxx/v6/printers.py", "status": "modified", "additions": 14, "deletions": 4, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/937b190d7556fce8670decf9a06aeee5d111c144/libstdc%2B%2B-v3%2Fpython%2Flibstdcxx%2Fv6%2Fprinters.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/937b190d7556fce8670decf9a06aeee5d111c144/libstdc%2B%2B-v3%2Fpython%2Flibstdcxx%2Fv6%2Fprinters.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fpython%2Flibstdcxx%2Fv6%2Fprinters.py?ref=937b190d7556fce8670decf9a06aeee5d111c144", "patch": "@@ -633,16 +633,21 @@ def __init__ (self, typename, val):\n         self.typename = typename\n         self.val = val\n \n+    def hashtable (self):\n+        if self.typename.startswith('std::tr1'):\n+            return self.val\n+        return self.val['_M_h']\n+\n     def to_string (self):\n-        return '%s with %d elements' % (self.typename, self.val['_M_element_count'])\n+        return '%s with %d elements' % (self.typename, self.hashtable()['_M_element_count'])\n \n     @staticmethod\n     def format_count (i):\n         return '[%d]' % i\n \n     def children (self):\n         counter = itertools.imap (self.format_count, itertools.count())\n-        return itertools.izip (counter, Tr1HashtableIterator (self.val))\n+        return itertools.izip (counter, Tr1HashtableIterator (self.hashtable()))\n \n class Tr1UnorderedMapPrinter:\n     \"Print a tr1::unordered_map\"\n@@ -651,8 +656,13 @@ def __init__ (self, typename, val):\n         self.typename = typename\n         self.val = val\n \n+    def hashtable (self):\n+        if self.typename.startswith('std::tr1'):\n+            return self.val\n+        return self.val['_M_h']\n+\n     def to_string (self):\n-        return '%s with %d elements' % (self.typename, self.val['_M_element_count'])\n+        return '%s with %d elements' % (self.typename, self.hashtable()['_M_element_count'])\n \n     @staticmethod\n     def flatten (list):\n@@ -671,7 +681,7 @@ def format_count (i):\n     def children (self):\n         counter = itertools.imap (self.format_count, itertools.count())\n         # Map over the hash table and flatten the result.\n-        data = self.flatten (itertools.imap (self.format_one, Tr1HashtableIterator (self.val)))\n+        data = self.flatten (itertools.imap (self.format_one, Tr1HashtableIterator (self.hashtable())))\n         # Zip the two iterators together.\n         return itertools.izip (counter, data)\n "}]}