{"sha": "c94f2d84e51b39f4f90c3cb3bf3c0d056080bc57", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yzk0ZjJkODRlNTFiMzlmNGY5MGMzY2IzYmYzYzBkMDU2MDgwYmM1Nw==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2017-09-21T12:12:33Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2017-09-21T12:12:33Z"}, "message": "re PR tree-optimization/82276 (-O2: ICE: SSA corruption during RTL pass: expand; at tree-ssa-coalesce.c:1010)\n\n2017-09-21  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/82276\n\tPR tree-optimization/82244\n\t* tree-vrp.c (build_assert_expr_for): Set\n\tSSA_NAME_OCCURS_IN_ABNORMAL_PHI if the variable we assert on\n\thas it set.\n\t(remove_range_assertions): Revert earlier change.\n\n\t* gcc.dg/torture/pr82276.c: New testcase.\n\nFrom-SVN: r253062", "tree": {"sha": "eb449792b6cc53791f82ab644d4f35d2a588e077", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eb449792b6cc53791f82ab644d4f35d2a588e077"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c94f2d84e51b39f4f90c3cb3bf3c0d056080bc57", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c94f2d84e51b39f4f90c3cb3bf3c0d056080bc57", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c94f2d84e51b39f4f90c3cb3bf3c0d056080bc57", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c94f2d84e51b39f4f90c3cb3bf3c0d056080bc57/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "817221cc87b78034dd750f6dc94ab336d7e802be", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/817221cc87b78034dd750f6dc94ab336d7e802be", "html_url": "https://github.com/Rust-GCC/gccrs/commit/817221cc87b78034dd750f6dc94ab336d7e802be"}], "stats": {"total": 62, "additions": 53, "deletions": 9}, "files": [{"sha": "736cc7f29f4d7e5374dec5bee3255c5f2ef2c4ea", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c94f2d84e51b39f4f90c3cb3bf3c0d056080bc57/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c94f2d84e51b39f4f90c3cb3bf3c0d056080bc57/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c94f2d84e51b39f4f90c3cb3bf3c0d056080bc57", "patch": "@@ -1,3 +1,12 @@\n+2017-09-21  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/82276\n+\tPR tree-optimization/82244\n+\t* tree-vrp.c (build_assert_expr_for): Set\n+\tSSA_NAME_OCCURS_IN_ABNORMAL_PHI if the variable we assert on\n+\thas it set.\n+\t(remove_range_assertions): Revert earlier change.\n+\n 2017-09-21  Wilco Dijkstra  <wdijkstr@arm.com>\n \n \tPR target/71951"}, {"sha": "3db0548a8389da996838cb57363fe5b48808a97a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c94f2d84e51b39f4f90c3cb3bf3c0d056080bc57/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c94f2d84e51b39f4f90c3cb3bf3c0d056080bc57/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c94f2d84e51b39f4f90c3cb3bf3c0d056080bc57", "patch": "@@ -1,3 +1,9 @@\n+2017-09-21  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/82276\n+\tPR tree-optimization/82244\n+\t* gcc.dg/torture/pr82276.c: New testcase.\n+\n 2017-09-21  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/71351"}, {"sha": "2f9efc8b914186fd43df64ca7638b559e21068e6", "filename": "gcc/testsuite/gcc.dg/torture/pr82276.c", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c94f2d84e51b39f4f90c3cb3bf3c0d056080bc57/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr82276.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c94f2d84e51b39f4f90c3cb3bf3c0d056080bc57/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr82276.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr82276.c?ref=c94f2d84e51b39f4f90c3cb3bf3c0d056080bc57", "patch": "@@ -0,0 +1,32 @@\n+/* { dg-do compile } */\n+\n+typedef struct a {\n+  struct a *b;\n+} a;\n+\n+extern int d(void);\n+extern int g(void);\n+extern int h(void);\n+extern int _setjmp();\n+extern int i(void);\n+\n+void c(void) {\n+    1 ? d() : 0;\n+    a *e;\n+    while (e) {\n+\te = (e == (a *) c) ? 0 : e->b;\n+\twhile (e) {\n+\t    unsigned int f = 0;\n+\t    g();\n+\t    _setjmp(f);\n+\t    if (f & 6) {\n+\t\t;\n+\t    } else if (f & 2) {\n+\t\t;\n+\t    } else {\n+\t\th();\n+\t    }\n+\t    i();\n+\t}\n+    }\n+}"}, {"sha": "aef20f4e8a5a71336c39d5186848904dff9c8623", "filename": "gcc/tree-vrp.c", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c94f2d84e51b39f4f90c3cb3bf3c0d056080bc57/gcc%2Ftree-vrp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c94f2d84e51b39f4f90c3cb3bf3c0d056080bc57/gcc%2Ftree-vrp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vrp.c?ref=c94f2d84e51b39f4f90c3cb3bf3c0d056080bc57", "patch": "@@ -4520,7 +4520,12 @@ build_assert_expr_for (tree cond, tree v)\n      operand of the ASSERT_EXPR.  Create it so the new name and the old one\n      are registered in the replacement table so that we can fix the SSA web\n      after adding all the ASSERT_EXPRs.  */\n-  create_new_def_for (v, assertion, NULL);\n+  tree new_def = create_new_def_for (v, assertion, NULL);\n+  /* Make sure we preserve abnormalness throughout an ASSERT_EXPR chain\n+     given we have to be able to fully propagate those out to re-create\n+     valid SSA when removing the asserts.  */\n+  if (SSA_NAME_OCCURS_IN_ABNORMAL_PHI (v))\n+    SSA_NAME_OCCURS_IN_ABNORMAL_PHI (new_def) = 1;\n \n   return assertion;\n }\n@@ -7041,14 +7046,6 @@ remove_range_assertions (void)\n \t\t  FOR_EACH_IMM_USE_ON_STMT (use_p, iter)\n \t\t    SET_USE (use_p, var);\n \t      }\n-\t    /* But do not propagate constants as that is invalid.  */\n-\t    else if (SSA_NAME_OCCURS_IN_ABNORMAL_PHI (lhs))\n-\t      {\n-\t\tgassign *ass = gimple_build_assign (lhs, var);\n-\t\tgsi_replace (&si, ass, true);\n-\t\tgsi_next (&si);\n-\t\tcontinue;\n-\t      }\n \t    else\n \t      replace_uses_by (lhs, var);\n "}]}