{"sha": "f166beaf427b75a84ea6bd2c848633bdafc49fd5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjE2NmJlYWY0MjdiNzVhODRlYTZiZDJjODQ4NjMzYmRhZmM0OWZkNQ==", "commit": {"author": {"name": "Tom de Vries", "email": "tom@codesourcery.com", "date": "2017-04-28T07:26:32Z"}, "committer": {"name": "Tom de Vries", "email": "vries@gcc.gnu.org", "date": "2017-04-28T07:26:32Z"}, "message": "Remove superfluous '{ target *-*-* }' in dg-(error|warning|message|bogus)\n\nfind $(find -type d -name testsuite) -type f \\\n     | xargs sed -ri \\\n       's#(dg-(error|warning|message|bogus).*) \\{ target \\*-\\*-\\* \\} \\}#\\1 }#'\n\n2017-04-28  Tom de Vries  <tom@codesourcery.com>\n\n\t* g++.dg/parse/error2.C: Remove superfluous '{ target *-*-* }' in\n\tdg-(error|warning|message|bogus).\n\t* g++.dg/parse/parameter-declaration-1.C: Same.\n\t* g++.dg/warn/Wstrict-aliasing-float-ref-int-obj.C: Same.\n\t* gcc.dg/Wpointer-sign-Wall.c: Same.\n\t* gcc.dg/Wpointer-sign-pedantic.c: Same.\n\t* gcc.dg/cpp/19990413-1.c: Same.\n\t* gcc.dg/dg-test-1.c: Same.\n\t* gcc.dg/empty-source-2.c: Same.\n\t* gcc.dg/empty-source-3.c: Same.\n\t* gcc.dg/format/c99-printf-1.c: Same.\n\t* gcc.dg/format/c99-scanf-1.c: Same.\n\t* gcc.dg/label-decl-2.c: Same.\n\t* gcc.dg/m-un-2.c: Same.\n\t* gcc.dg/uninit-pr20644-O0.c: Same.\n\t* gfortran.dg/pr70006.f90: Same.\n\t* obj-c++.dg/fsf-package-0.m: Same.\n\n\t* testsuite/17_intro/headers/c++1998/stdc++_assert_neg.cc: Remove\n\tsuperfluous '{ target *-*-* }' in dg-(error|warning|message|bogus).\n\nFrom-SVN: r247364", "tree": {"sha": "a4bc882ffb7247515f02e5f25a922307657343b2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a4bc882ffb7247515f02e5f25a922307657343b2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f166beaf427b75a84ea6bd2c848633bdafc49fd5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f166beaf427b75a84ea6bd2c848633bdafc49fd5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f166beaf427b75a84ea6bd2c848633bdafc49fd5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f166beaf427b75a84ea6bd2c848633bdafc49fd5/comments", "author": null, "committer": null, "parents": [{"sha": "c3125b18e2d864bb9983befe70afc4fd0fdd1130", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3125b18e2d864bb9983befe70afc4fd0fdd1130", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c3125b18e2d864bb9983befe70afc4fd0fdd1130"}], "stats": {"total": 69, "additions": 47, "deletions": 22}, "files": [{"sha": "a33c19a5b76655a8a18a7f8e8df7309081e48620", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f166beaf427b75a84ea6bd2c848633bdafc49fd5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f166beaf427b75a84ea6bd2c848633bdafc49fd5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f166beaf427b75a84ea6bd2c848633bdafc49fd5", "patch": "@@ -1,3 +1,23 @@\n+2017-04-28  Tom de Vries  <tom@codesourcery.com>\n+\n+\t* g++.dg/parse/error2.C: Remove superfluous '{ target *-*-* }' in\n+\tdg-(error|warning|message|bogus).\n+\t* g++.dg/parse/parameter-declaration-1.C: Same.\n+\t* g++.dg/warn/Wstrict-aliasing-float-ref-int-obj.C: Same.\n+\t* gcc.dg/Wpointer-sign-Wall.c: Same.\n+\t* gcc.dg/Wpointer-sign-pedantic.c: Same.\n+\t* gcc.dg/cpp/19990413-1.c: Same.\n+\t* gcc.dg/dg-test-1.c: Same.\n+\t* gcc.dg/empty-source-2.c: Same.\n+\t* gcc.dg/empty-source-3.c: Same.\n+\t* gcc.dg/format/c99-printf-1.c: Same.\n+\t* gcc.dg/format/c99-scanf-1.c: Same.\n+\t* gcc.dg/label-decl-2.c: Same.\n+\t* gcc.dg/m-un-2.c: Same.\n+\t* gcc.dg/uninit-pr20644-O0.c: Same.\n+\t* gfortran.dg/pr70006.f90: Same.\n+\t* obj-c++.dg/fsf-package-0.m: Same.\n+\n 2017-04-28  Tom de Vries  <tom@codesourcery.com>\n \n \t* c-c++-common/Wimplicit-fallthrough-6.c: Remove superfluous ' . ' in"}, {"sha": "1cca27cdd57db0e5a300fe73080e85f3ceac36eb", "filename": "gcc/testsuite/g++.dg/parse/error2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f166beaf427b75a84ea6bd2c848633bdafc49fd5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f166beaf427b75a84ea6bd2c848633bdafc49fd5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror2.C?ref=f166beaf427b75a84ea6bd2c848633bdafc49fd5", "patch": "@@ -8,7 +8,7 @@ int func(double);\n template <int>\n struct Foo {};\n \n-Foo<func(g)> f; // { dg-error \"5:'int func.double.' cannot appear in a constant-expression\" \"func double\" { target *-*-* } }\n+Foo<func(g)> f; // { dg-error \"5:'int func.double.' cannot appear in a constant-expression\" \"func double\" }\n // { dg-error \"10:'g' cannot appear in a constant-expression\" \"g\" { target *-*-* } .-1 }\n // { dg-error \"11:a function call cannot appear in a constant-expression\" \"call\" { target *-*-* } .-2 }\n // { dg-error \"12:template argument 1 is invalid\" \"invalid template argument\" { target *-*-* } .-3 }"}, {"sha": "1eaa00ee28e36bfe9676bbf0668883a13a3f2e48", "filename": "gcc/testsuite/g++.dg/parse/parameter-declaration-1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f166beaf427b75a84ea6bd2c848633bdafc49fd5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fparameter-declaration-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f166beaf427b75a84ea6bd2c848633bdafc49fd5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fparameter-declaration-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fparameter-declaration-1.C?ref=f166beaf427b75a84ea6bd2c848633bdafc49fd5", "patch": "@@ -3,4 +3,4 @@\n // { dg-do compile }\n \n struct {\n-   a(void = 0; a(0), a(0)\t// { dg-error \"\" \"\" { target *-*-* } }\n+   a(void = 0; a(0), a(0)\t// { dg-error \"\" \"\" }"}, {"sha": "d298555f5f16386758d2da78641cbab5966b878d", "filename": "gcc/testsuite/g++.dg/warn/Wstrict-aliasing-float-ref-int-obj.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f166beaf427b75a84ea6bd2c848633bdafc49fd5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWstrict-aliasing-float-ref-int-obj.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f166beaf427b75a84ea6bd2c848633bdafc49fd5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWstrict-aliasing-float-ref-int-obj.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWstrict-aliasing-float-ref-int-obj.C?ref=f166beaf427b75a84ea6bd2c848633bdafc49fd5", "patch": "@@ -4,7 +4,7 @@\n \n int foo() {\n   int x;\n-  float& q = reinterpret_cast<float&> (x);  /* { dg-message \"dereferencing type-punned\" \"deref\" { target *-*-* } } */\n+  float& q = reinterpret_cast<float&> (x);  /* { dg-message \"dereferencing type-punned\" \"deref\" } */\n   q = 1.0; /* { dg-warning \"does break strict-aliasing\" \"strict-aliasing\" { xfail *-*-* } } */\n   return x;\n }"}, {"sha": "843885fe2760bd1fcd33149b09878847728cef73", "filename": "gcc/testsuite/gcc.dg/Wpointer-sign-Wall.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f166beaf427b75a84ea6bd2c848633bdafc49fd5/gcc%2Ftestsuite%2Fgcc.dg%2FWpointer-sign-Wall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f166beaf427b75a84ea6bd2c848633bdafc49fd5/gcc%2Ftestsuite%2Fgcc.dg%2FWpointer-sign-Wall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2FWpointer-sign-Wall.c?ref=f166beaf427b75a84ea6bd2c848633bdafc49fd5", "patch": "@@ -2,7 +2,7 @@\n \n /* { dg-options \"-Wall\" } */\n \n-void foo(unsigned long* ulp); /* { dg-message \"note: expected '\\[^\\n'\\]*' but argument is of type '\\[^\\n'\\]*'\" \"note: expected\" { target *-*-* } } */\n+void foo(unsigned long* ulp); /* { dg-message \"note: expected '\\[^\\n'\\]*' but argument is of type '\\[^\\n'\\]*'\" \"note: expected\" } */\n \n \n void bar(long* lp) {"}, {"sha": "ab1130d66fe13abcfb892f751d6c879902d79c10", "filename": "gcc/testsuite/gcc.dg/Wpointer-sign-pedantic.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f166beaf427b75a84ea6bd2c848633bdafc49fd5/gcc%2Ftestsuite%2Fgcc.dg%2FWpointer-sign-pedantic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f166beaf427b75a84ea6bd2c848633bdafc49fd5/gcc%2Ftestsuite%2Fgcc.dg%2FWpointer-sign-pedantic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2FWpointer-sign-pedantic.c?ref=f166beaf427b75a84ea6bd2c848633bdafc49fd5", "patch": "@@ -2,7 +2,7 @@\n \n /* { dg-options \"-pedantic\" } */\n \n-void foo(unsigned long* ulp);/* { dg-message \"note: expected '\\[^'\\n\\]*' but argument is of type '\\[^'\\n\\]*'\" \"note: expected\" { target *-*-* } } */\n+void foo(unsigned long* ulp);/* { dg-message \"note: expected '\\[^'\\n\\]*' but argument is of type '\\[^'\\n\\]*'\" \"note: expected\" } */\n \n void bar(long* lp) {\n   foo(lp); /* { dg-warning \"differ in signedness\" } */"}, {"sha": "00f62c84501618075eace9a5ca11779f6d00bd53", "filename": "gcc/testsuite/gcc.dg/cpp/19990413-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f166beaf427b75a84ea6bd2c848633bdafc49fd5/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2F19990413-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f166beaf427b75a84ea6bd2c848633bdafc49fd5/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2F19990413-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2F19990413-1.c?ref=f166beaf427b75a84ea6bd2c848633bdafc49fd5", "patch": "@@ -9,5 +9,5 @@ func(void)\n {\n   FOO(i\n       = 4)\n-  else;  /* { dg-error \"'else' without a previous 'if'\" \"error on this line\" { target *-*-* } } */ \n+  else;  /* { dg-error \"'else' without a previous 'if'\" \"error on this line\" } */ \n }"}, {"sha": "c0e672aaeeb03dececd8055ccc003f9241616b7e", "filename": "gcc/testsuite/gcc.dg/dg-test-1.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f166beaf427b75a84ea6bd2c848633bdafc49fd5/gcc%2Ftestsuite%2Fgcc.dg%2Fdg-test-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f166beaf427b75a84ea6bd2c848633bdafc49fd5/gcc%2Ftestsuite%2Fgcc.dg%2Fdg-test-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdg-test-1.c?ref=f166beaf427b75a84ea6bd2c848633bdafc49fd5", "patch": "@@ -5,15 +5,15 @@\n void\n foo (void)\n {\t\t\t/* { dg-error \"'a' undeclared\" \"err1\" { target *-*-* } .+1 } */\n-  int z = a + b + c + d;/* { dg-error \"'b' undeclared\" \"err2\" { target *-*-* } } */\n+  int z = a + b + c + d;/* { dg-error \"'b' undeclared\" \"err2\" } */\n }\t\t\t/* { dg-error \"'c' undeclared\" \"err3\" { target *-*-* } .-1 } */\n \n \n /* { dg-error \"'d' undeclared\" \"err4\" { target *-*-* } .-4 } */\n /* { dg-warning \"unused parameter 'e'\" \"warn1\" { target *-*-* } .+3 } */\n \n void\t\t\t\t/* { dg-warning \"unused parameter 'f'\" \"warn2\" { target *-*-* } .+1 } */\n-bar (int e, int f, int g, int h)/* { dg-warning \"unused parameter 'g'\" \"warn3\" { target *-*-* } } */\n+bar (int e, int f, int g, int h)/* { dg-warning \"unused parameter 'g'\" \"warn3\" } */\n {\t\t\t\t/* { dg-warning \"unused parameter 'h'\" \"warn4\" { target *-*-* } .-1 } */\n }\n "}, {"sha": "ae36159b5afa874d531579437c27f78cdd99c77b", "filename": "gcc/testsuite/gcc.dg/empty-source-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f166beaf427b75a84ea6bd2c848633bdafc49fd5/gcc%2Ftestsuite%2Fgcc.dg%2Fempty-source-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f166beaf427b75a84ea6bd2c848633bdafc49fd5/gcc%2Ftestsuite%2Fgcc.dg%2Fempty-source-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fempty-source-2.c?ref=f166beaf427b75a84ea6bd2c848633bdafc49fd5", "patch": "@@ -3,4 +3,4 @@\n /* { dg-do compile } */\n /* { dg-options \"-pedantic\" } */\n \n-/* { dg-warning \"ISO C forbids an empty translation unit\" \"empty\" { target *-*-* } } */\n+/* { dg-warning \"ISO C forbids an empty translation unit\" \"empty\" } */"}, {"sha": "bcd76ac290537ac6f08d9de00d223314d6628a2b", "filename": "gcc/testsuite/gcc.dg/empty-source-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f166beaf427b75a84ea6bd2c848633bdafc49fd5/gcc%2Ftestsuite%2Fgcc.dg%2Fempty-source-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f166beaf427b75a84ea6bd2c848633bdafc49fd5/gcc%2Ftestsuite%2Fgcc.dg%2Fempty-source-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fempty-source-3.c?ref=f166beaf427b75a84ea6bd2c848633bdafc49fd5", "patch": "@@ -4,4 +4,4 @@\n /* { dg-do compile } */\n /* { dg-options \"-pedantic-errors\" } */\n \n-/* { dg-error \"ISO C forbids an empty translation unit\" \"empty\" { target *-*-* } } */\n+/* { dg-error \"ISO C forbids an empty translation unit\" \"empty\" } */"}, {"sha": "408ad49a680d3bbb39e8cc6836c102354d8a31a0", "filename": "gcc/testsuite/gcc.dg/format/c99-printf-1.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f166beaf427b75a84ea6bd2c848633bdafc49fd5/gcc%2Ftestsuite%2Fgcc.dg%2Fformat%2Fc99-printf-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f166beaf427b75a84ea6bd2c848633bdafc49fd5/gcc%2Ftestsuite%2Fgcc.dg%2Fformat%2Fc99-printf-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fformat%2Fc99-printf-1.c?ref=f166beaf427b75a84ea6bd2c848633bdafc49fd5", "patch": "@@ -62,8 +62,8 @@ foo (int i, unsigned int u, double d, char *s, void *p, int *n,\n   printf (\"%llc\", i); /* { dg-warning \"length\" \"bad use of %ll\" } */\n   printf (\"%lls\", s); /* { dg-warning \"length\" \"bad use of %ll\" } */\n   printf (\"%llp\", p); /* { dg-warning \"length\" \"bad use of %ll\" } */\n-  printf (\"%jd%ji%jo%ju%jx%jX\", j, j, uj, uj, uj, uj); /* { dg-bogus \"length\" \"bogus %j warning\" { target *-*-* } } */\n-  printf (\"%jn\", jn); /* { dg-bogus \"length\" \"bogus %j warning\" { target *-*-* } } */\n+  printf (\"%jd%ji%jo%ju%jx%jX\", j, j, uj, uj, uj, uj); /* { dg-bogus \"length\" \"bogus %j warning\" } */\n+  printf (\"%jn\", jn); /* { dg-bogus \"length\" \"bogus %j warning\" } */\n   printf (\"%jf\", d); /* { dg-warning \"length\" \"bad use of %j\" } */\n   printf (\"%jF\", d); /* { dg-warning \"length\" \"bad use of %j\" } */\n   printf (\"%je\", d); /* { dg-warning \"length\" \"bad use of %j\" } */"}, {"sha": "521ef1d3c53bc8f7bf6972ee955cf281d5bb2f95", "filename": "gcc/testsuite/gcc.dg/format/c99-scanf-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f166beaf427b75a84ea6bd2c848633bdafc49fd5/gcc%2Ftestsuite%2Fgcc.dg%2Fformat%2Fc99-scanf-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f166beaf427b75a84ea6bd2c848633bdafc49fd5/gcc%2Ftestsuite%2Fgcc.dg%2Fformat%2Fc99-scanf-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fformat%2Fc99-scanf-1.c?ref=f166beaf427b75a84ea6bd2c848633bdafc49fd5", "patch": "@@ -82,7 +82,7 @@ foo (int *ip, unsigned int *uip, short int *hp, unsigned short int *uhp,\n   scanf (\"%ll[ac]\", s); /* { dg-warning \"length\" \"bad use of %ll\" } */\n   scanf (\"%llc\", s); /* { dg-warning \"length\" \"bad use of %ll\" } */\n   scanf (\"%llp\", pp); /* { dg-warning \"length\" \"bad use of %ll\" } */\n-  scanf (\"%jd%ji%jo%ju%jx%jX%jn\", jp, jp, ujp, ujp, ujp, ujp, jn); /* { dg-bogus \"length\" \"bogus %j warning\" { target *-*-* } } */\n+  scanf (\"%jd%ji%jo%ju%jx%jX%jn\", jp, jp, ujp, ujp, ujp, ujp, jn); /* { dg-bogus \"length\" \"bogus %j warning\" } */\n   scanf (\"%ja\", fp); /* { dg-warning \"length\" \"bad use of %j\" } */\n   scanf (\"%jA\", fp); /* { dg-warning \"length\" \"bad use of %j\" } */\n   scanf (\"%je\", fp); /* { dg-warning \"length\" \"bad use of %j\" } */"}, {"sha": "3ebe290a2709507aa9afc01eb1bbd931256d81be", "filename": "gcc/testsuite/gcc.dg/label-decl-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f166beaf427b75a84ea6bd2c848633bdafc49fd5/gcc%2Ftestsuite%2Fgcc.dg%2Flabel-decl-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f166beaf427b75a84ea6bd2c848633bdafc49fd5/gcc%2Ftestsuite%2Fgcc.dg%2Flabel-decl-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flabel-decl-2.c?ref=f166beaf427b75a84ea6bd2c848633bdafc49fd5", "patch": "@@ -8,7 +8,7 @@ typedef int b;\n void\n f (void)\n {\n-  __label__ a, b, c, d; /* { dg-warning \"ISO C forbids label declarations\" \"label decls\" { target *-*-* } } */\n+  __label__ a, b, c, d; /* { dg-warning \"ISO C forbids label declarations\" \"label decls\" } */\n   __extension__ (void)&&d; /* { dg-error \"label 'd' used but not defined\" } */\n   goto c; /* { dg-error \"label 'c' used but not defined\" } */\n  a: (void)0;"}, {"sha": "b12c7cb5ec9e6217059496f2644e90512db6051f", "filename": "gcc/testsuite/gcc.dg/m-un-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f166beaf427b75a84ea6bd2c848633bdafc49fd5/gcc%2Ftestsuite%2Fgcc.dg%2Fm-un-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f166beaf427b75a84ea6bd2c848633bdafc49fd5/gcc%2Ftestsuite%2Fgcc.dg%2Fm-un-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fm-un-2.c?ref=f166beaf427b75a84ea6bd2c848633bdafc49fd5", "patch": "@@ -15,7 +15,7 @@ struct vtable {\n struct vtable mtable = {\n   malloc,\n   free\n-}; /* { dg-warning \"missing initializer\" \"warning regression\" { target *-*-* } } */\n+}; /* { dg-warning \"missing initializer\" \"warning regression\" } */\n    /* { dg-message \"declared here\" \"warning regression 2\" { target *-*-* } 12 } */\n \n /* With designated initializers, we assume you meant to leave out the"}, {"sha": "8ae697abcdfcbaa2f79b1d40642c4465e3b43a62", "filename": "gcc/testsuite/gcc.dg/uninit-pr20644-O0.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f166beaf427b75a84ea6bd2c848633bdafc49fd5/gcc%2Ftestsuite%2Fgcc.dg%2Funinit-pr20644-O0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f166beaf427b75a84ea6bd2c848633bdafc49fd5/gcc%2Ftestsuite%2Fgcc.dg%2Funinit-pr20644-O0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Funinit-pr20644-O0.c?ref=f166beaf427b75a84ea6bd2c848633bdafc49fd5", "patch": "@@ -18,7 +18,7 @@ int bar ()\n   int j; \n \n   if (1 == i)\n-    return j; /* { dg-warning \"uninitialized\" \"uninitialized\" { target *-*-* } } */\n+    return j; /* { dg-warning \"uninitialized\" \"uninitialized\" } */\n \n   return 0;\n }"}, {"sha": "97b41709769cb357b20b79b0eb8fdbcf1790fb46", "filename": "gcc/testsuite/gfortran.dg/pr70006.f90", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f166beaf427b75a84ea6bd2c848633bdafc49fd5/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr70006.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f166beaf427b75a84ea6bd2c848633bdafc49fd5/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr70006.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr70006.f90?ref=f166beaf427b75a84ea6bd2c848633bdafc49fd5", "patch": "@@ -1,9 +1,9 @@\n ! { dg-do compile }\n program test\n-   print 1, 'string 1' ! { dg-error \"FORMAT label 1\" \" \" { target *-*-* } }\n-   print 1, 'string 2' ! { dg-error \"FORMAT label 1\" \" \" { target *-*-* } }\n+   print 1, 'string 1' ! { dg-error \"FORMAT label 1\" \" \" }\n+   print 1, 'string 2' ! { dg-error \"FORMAT label 1\" \" \" }\n !1 format(a)\n-   goto 2 ! { dg-error \"Label 2 referenced\" \" \" { target *-*-* } }\n-   goto 2 ! { dg-error \"Label 2 referenced\" \" \" { target *-*-* } }\n+   goto 2 ! { dg-error \"Label 2 referenced\" \" \" }\n+   goto 2 ! { dg-error \"Label 2 referenced\" \" \" }\n !2 continue\n end program"}, {"sha": "942c1f4ab87a9fc7afbc0f6ec8b70df873dae727", "filename": "gcc/testsuite/obj-c++.dg/fsf-package-0.m", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f166beaf427b75a84ea6bd2c848633bdafc49fd5/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Ffsf-package-0.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f166beaf427b75a84ea6bd2c848633bdafc49fd5/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Ffsf-package-0.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Ffsf-package-0.m?ref=f166beaf427b75a84ea6bd2c848633bdafc49fd5", "patch": "@@ -32,5 +32,5 @@ void foo (void)\n   a->v2 = 1;\n   a->v3 = [a value] - a->v2;\t/* { dg-warning \".v3. is @protected\" } */\n   a->v4 = a->v3 - 1;\t\t/* { dg-warning \".v4. is @private\" } */\n-  \t\t\t\t/* { dg-warning \".v3. is @protected\" \"\" { target *-*-* } } */\n+  \t\t\t\t/* { dg-warning \".v3. is @protected\" \"\" } */\n }"}, {"sha": "ebe939b4363481f476b25ce3e1afab9fdb81ebed", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f166beaf427b75a84ea6bd2c848633bdafc49fd5/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f166beaf427b75a84ea6bd2c848633bdafc49fd5/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=f166beaf427b75a84ea6bd2c848633bdafc49fd5", "patch": "@@ -1,3 +1,8 @@\n+2017-04-28  Tom de Vries  <tom@codesourcery.com>\n+\n+\t* testsuite/17_intro/headers/c++1998/stdc++_assert_neg.cc: Remove\n+\tsuperfluous '{ target *-*-* }' in dg-(error|warning|message|bogus).\n+\n 2017-04-27  Jonathan Wakely  <jwakely@redhat.com>\n \n \t* include/ext/pb_ds/detail/list_update_map_/iterators_fn_imps.hpp"}, {"sha": "c16ac6f4ea54308f09eaf1755d6a959a5adb9e0d", "filename": "libstdc++-v3/testsuite/17_intro/headers/c++1998/stdc++_assert_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f166beaf427b75a84ea6bd2c848633bdafc49fd5/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fheaders%2Fc%2B%2B1998%2Fstdc%2B%2B_assert_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f166beaf427b75a84ea6bd2c848633bdafc49fd5/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fheaders%2Fc%2B%2B1998%2Fstdc%2B%2B_assert_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fheaders%2Fc%2B%2B1998%2Fstdc%2B%2B_assert_neg.cc?ref=f166beaf427b75a84ea6bd2c848633bdafc49fd5", "patch": "@@ -31,5 +31,5 @@\n \n void foo()\n {\n- assert(true);  // { dg-error \"not declared\" \"\" { target *-*-* } } \n+ assert(true);  // { dg-error \"not declared\" \"\" } \n }"}]}