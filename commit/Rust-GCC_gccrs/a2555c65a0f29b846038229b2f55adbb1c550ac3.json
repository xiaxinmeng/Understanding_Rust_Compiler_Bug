{"sha": "a2555c65a0f29b846038229b2f55adbb1c550ac3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTI1NTVjNjVhMGYyOWI4NDYwMzgyMjliMmY1NWFkYmIxYzU1MGFjMw==", "commit": {"author": {"name": "Rainer Orth", "email": "ro@CeBiTec.Uni-Bielefeld.DE", "date": "2014-05-15T09:52:37Z"}, "committer": {"name": "Rainer Orth", "email": "ro@gcc.gnu.org", "date": "2014-05-15T09:52:37Z"}, "message": "Check for -static-libgcc before use (PR lto/60981)\n\n\tPR lto/60981\n\t* configure.ac: Check for -static-libgcc.\n\t* configure: Regenerate.\n\nFrom-SVN: r210465", "tree": {"sha": "ea0beae0da2a6e8d4a4227bc5aeea890d1d26bb9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ea0beae0da2a6e8d4a4227bc5aeea890d1d26bb9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a2555c65a0f29b846038229b2f55adbb1c550ac3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2555c65a0f29b846038229b2f55adbb1c550ac3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a2555c65a0f29b846038229b2f55adbb1c550ac3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2555c65a0f29b846038229b2f55adbb1c550ac3/comments", "author": {"login": "rorth", "id": 3930951, "node_id": "MDQ6VXNlcjM5MzA5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/3930951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rorth", "html_url": "https://github.com/rorth", "followers_url": "https://api.github.com/users/rorth/followers", "following_url": "https://api.github.com/users/rorth/following{/other_user}", "gists_url": "https://api.github.com/users/rorth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rorth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rorth/subscriptions", "organizations_url": "https://api.github.com/users/rorth/orgs", "repos_url": "https://api.github.com/users/rorth/repos", "events_url": "https://api.github.com/users/rorth/events{/privacy}", "received_events_url": "https://api.github.com/users/rorth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c4622c2bed1f740f996ca7f2ed5300a4d14da143", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4622c2bed1f740f996ca7f2ed5300a4d14da143", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c4622c2bed1f740f996ca7f2ed5300a4d14da143"}], "stats": {"total": 50, "additions": 46, "deletions": 4}, "files": [{"sha": "332067ea48e91eaa487acef64db2922d0f6b7c05", "filename": "lto-plugin/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2555c65a0f29b846038229b2f55adbb1c550ac3/lto-plugin%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2555c65a0f29b846038229b2f55adbb1c550ac3/lto-plugin%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/lto-plugin%2FChangeLog?ref=a2555c65a0f29b846038229b2f55adbb1c550ac3", "patch": "@@ -1,3 +1,9 @@\n+2014-05-15  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\tPR lto/60981\n+\t* configure.ac: Check for -static-libgcc.\n+\t* configure: Regenerate.\n+\n 2014-04-17  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR sanitizer/56781"}, {"sha": "a579b99f4048a13516861ee6abdfa0dad40d588d", "filename": "lto-plugin/configure", "status": "modified", "additions": 27, "deletions": 3, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2555c65a0f29b846038229b2f55adbb1c550ac3/lto-plugin%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2555c65a0f29b846038229b2f55adbb1c550ac3/lto-plugin%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/lto-plugin%2Fconfigure?ref=a2555c65a0f29b846038229b2f55adbb1c550ac3", "patch": "@@ -4087,8 +4087,32 @@ fi\n   done\n CFLAGS=\"$save_CFLAGS\"\n \n+\n+# Check whether -static-libgcc is supported.\n+saved_LDFLAGS=\"$LDFLAGS\"\n+LDFLAGS=\"$LDFLAGS -static-libgcc\"\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for -static-libgcc\" >&5\n+$as_echo_n \"checking for -static-libgcc... \" >&6; }\n+cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+  int main() {}\n+_ACEOF\n+if ac_fn_c_try_link \"$LINENO\"; then :\n+  have_static_libgcc=yes\n+else\n+  have_static_libgcc=no\n+fi\n+rm -f core conftest.err conftest.$ac_objext \\\n+    conftest$ac_exeext conftest.$ac_ext\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $have_static_libgcc\" >&5\n+$as_echo \"$have_static_libgcc\" >&6; };\n+LDFLAGS=\"$saved_LDFLAGS\"\n # Need -Wc to get it through libtool.\n-if test \"x$GCC\" = xyes; then ac_lto_plugin_ldflags=\"-Wc,-static-libgcc\"; fi\n+if test \"x$have_static_libgcc\" = xyes; then\n+   ac_lto_plugin_ldflags=\"-Wc,-static-libgcc\"\n+fi\n+\n \n case `pwd` in\n   *\\ * | *\\\t*)\n@@ -10562,7 +10586,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10565 \"configure\"\n+#line 10589 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -10668,7 +10692,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10671 \"configure\"\n+#line 10695 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H"}, {"sha": "a5f1774dff4c3c04ddbd45c680281cd53d835f42", "filename": "lto-plugin/configure.ac", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2555c65a0f29b846038229b2f55adbb1c550ac3/lto-plugin%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2555c65a0f29b846038229b2f55adbb1c550ac3/lto-plugin%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/lto-plugin%2Fconfigure.ac?ref=a2555c65a0f29b846038229b2f55adbb1c550ac3", "patch": "@@ -7,9 +7,21 @@ AM_MAINTAINER_MODE\n AC_PROG_CC\n AC_SYS_LARGEFILE\n ACX_PROG_CC_WARNING_OPTS([-Wall], [ac_lto_plugin_warn_cflags])\n+\n+# Check whether -static-libgcc is supported.\n+saved_LDFLAGS=\"$LDFLAGS\"\n+LDFLAGS=\"$LDFLAGS -static-libgcc\"\n+AC_MSG_CHECKING([for -static-libgcc])\n+AC_LINK_IFELSE([\n+  int main() {}], [have_static_libgcc=yes], [have_static_libgcc=no])\n+AC_MSG_RESULT($have_static_libgcc); \n+LDFLAGS=\"$saved_LDFLAGS\"\n # Need -Wc to get it through libtool.\n-if test \"x$GCC\" = xyes; then ac_lto_plugin_ldflags=\"-Wc,-static-libgcc\"; fi\n+if test \"x$have_static_libgcc\" = xyes; then\n+   ac_lto_plugin_ldflags=\"-Wc,-static-libgcc\"\n+fi\n AC_SUBST(ac_lto_plugin_ldflags)\n+\n AM_PROG_LIBTOOL\n ACX_LT_HOST_FLAGS\n AC_SUBST(target_noncanonical)"}]}