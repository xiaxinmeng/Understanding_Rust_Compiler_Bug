{"sha": "dc3b8d27d4b98cb35404713f6dcb9017f583c2c8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGMzYjhkMjdkNGI5OGNiMzU0MDQ3MTNmNmRjYjkwMTdmNTgzYzJjOA==", "commit": {"author": {"name": "Alexander Ivchenko", "email": "alexander.ivchenko@intel.com", "date": "2014-08-28T06:28:56Z"}, "committer": {"name": "Kirill Yukhin", "email": "kyukhin@gcc.gnu.org", "date": "2014-08-28T06:28:56Z"}, "message": "AVX-512. Add vcvtps2[u]qq patterns.\n\ngcc/\n\t* config/i386/sse.md\n\t(define_mode_iterator VI8_256_512): New.\n\t(define_insn \"<mask_codefor>avx512dq_cvtps2qq<mode><mask_name><round_name>\"):\n\tDitto.\n\t(define_insn \"<mask_codefor>avx512dq_cvtps2qqv2di<mask_name>\"): Ditto.\n\t(define_insn \"<mask_codefor>avx512dq_cvtps2uqq<mode><mask_name><round_name>\"):\n\tDitto.\n\t(define_insn \"<mask_codefor>avx512dq_cvtps2uqqv2di<mask_name>\"): Ditto.\n\n\nCo-Authored-By: Andrey Turetskiy <andrey.turetskiy@intel.com>\nCo-Authored-By: Anna Tikhonova <anna.tikhonova@intel.com>\nCo-Authored-By: Ilya Tocar <ilya.tocar@intel.com>\nCo-Authored-By: Ilya Verbin <ilya.verbin@intel.com>\nCo-Authored-By: Kirill Yukhin <kirill.yukhin@intel.com>\nCo-Authored-By: Maxim Kuznetsov <maxim.kuznetsov@intel.com>\nCo-Authored-By: Michael Zolotukhin <michael.v.zolotukhin@intel.com>\n\nFrom-SVN: r214668", "tree": {"sha": "43b858ee7a12bbfcbe18dd89d0c1e2db2e214426", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/43b858ee7a12bbfcbe18dd89d0c1e2db2e214426"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dc3b8d27d4b98cb35404713f6dcb9017f583c2c8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc3b8d27d4b98cb35404713f6dcb9017f583c2c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dc3b8d27d4b98cb35404713f6dcb9017f583c2c8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc3b8d27d4b98cb35404713f6dcb9017f583c2c8/comments", "author": null, "committer": null, "parents": [{"sha": "82cfcdb63298a08a5eff485750128577e21786f0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82cfcdb63298a08a5eff485750128577e21786f0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/82cfcdb63298a08a5eff485750128577e21786f0"}], "stats": {"total": 67, "additions": 67, "deletions": 0}, "files": [{"sha": "a758ff40bf1f0320069d221099816ab397d30c3b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc3b8d27d4b98cb35404713f6dcb9017f583c2c8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc3b8d27d4b98cb35404713f6dcb9017f583c2c8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=dc3b8d27d4b98cb35404713f6dcb9017f583c2c8", "patch": "@@ -1,3 +1,21 @@\n+2014-08-28  Alexander Ivchenko  <alexander.ivchenko@intel.com>\n+\t    Maxim Kuznetsov  <maxim.kuznetsov@intel.com>\n+\t    Anna Tikhonova  <anna.tikhonova@intel.com>\n+\t    Ilya Tocar  <ilya.tocar@intel.com>\n+\t    Andrey Turetskiy  <andrey.turetskiy@intel.com>\n+\t    Ilya Verbin  <ilya.verbin@intel.com>\n+\t    Kirill Yukhin  <kirill.yukhin@intel.com>\n+\t    Michael Zolotukhin  <michael.v.zolotukhin@intel.com>\n+\n+\t* config/i386/sse.md\n+\t(define_mode_iterator VI8_256_512): New.\n+\t(define_insn \"<mask_codefor>avx512dq_cvtps2qq<mode><mask_name><round_name>\"):\n+\tDitto.\n+\t(define_insn \"<mask_codefor>avx512dq_cvtps2qqv2di<mask_name>\"): Ditto.\n+\t(define_insn \"<mask_codefor>avx512dq_cvtps2uqq<mode><mask_name><round_name>\"):\n+\tDitto.\n+\t(define_insn \"<mask_codefor>avx512dq_cvtps2uqqv2di<mask_name>\"): Ditto.\n+\n 2014-08-28  Richard Sandiford  <rdsandiford@googlemail.com>\n \n \t* varasm.c (compute_reloc_for_rtx_1): Take a const_rtx.  Remove the"}, {"sha": "5904450d453e9863f2ef2fe48595236269034835", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc3b8d27d4b98cb35404713f6dcb9017f583c2c8/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc3b8d27d4b98cb35404713f6dcb9017f583c2c8/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=dc3b8d27d4b98cb35404713f6dcb9017f583c2c8", "patch": "@@ -278,6 +278,9 @@\n (define_mode_iterator VI8_AVX512VL\n   [V8DI (V4DI \"TARGET_AVX512VL\") (V2DI \"TARGET_AVX512VL\")])\n \n+(define_mode_iterator VI8_256_512\n+  [V8DI (V4DI \"TARGET_AVX512VL\")])\n+\n (define_mode_iterator VI1_AVX2\n   [(V32QI \"TARGET_AVX2\") V16QI])\n \n@@ -3911,6 +3914,52 @@\n    (set_attr \"prefix\" \"evex\")\n    (set_attr \"mode\" \"<sseinsnmode>\")])\n \n+(define_insn \"<mask_codefor>avx512dq_cvtps2qq<mode><mask_name><round_name>\"\n+  [(set (match_operand:VI8_256_512 0 \"register_operand\" \"=v\")\n+\t(unspec:VI8_256_512 [(match_operand:<ssePSmode2> 1 \"nonimmediate_operand\" \"<round_constraint>\")]\n+\t\t     UNSPEC_FIX_NOTRUNC))]\n+  \"TARGET_AVX512DQ && <round_mode512bit_condition>\"\n+  \"vcvtps2qq\\t{<round_mask_op2>%1, %0<mask_operand2>|%0<mask_operand2>, %1<round_mask_op2>}\"\n+  [(set_attr \"type\" \"ssecvt\")\n+   (set_attr \"prefix\" \"evex\")\n+   (set_attr \"mode\" \"<sseinsnmode>\")])\n+\n+(define_insn \"<mask_codefor>avx512dq_cvtps2qqv2di<mask_name>\"\n+  [(set (match_operand:V2DI 0 \"register_operand\" \"=v\")\n+\t(unspec:V2DI\n+\t  [(vec_select:V2SF\n+\t     (match_operand:V4SF 1 \"nonimmediate_operand\" \"vm\")\n+\t     (parallel [(const_int 0) (const_int 1)]))]\n+\t  UNSPEC_FIX_NOTRUNC))]\n+  \"TARGET_AVX512DQ && TARGET_AVX512VL\"\n+  \"vcvtps2qq\\t{%1, %0<mask_operand2>|%0<mask_operand2>, %1}\"\n+  [(set_attr \"type\" \"ssecvt\")\n+   (set_attr \"prefix\" \"evex\")\n+   (set_attr \"mode\" \"TI\")])\n+\n+(define_insn \"<mask_codefor>avx512dq_cvtps2uqq<mode><mask_name><round_name>\"\n+  [(set (match_operand:VI8_256_512 0 \"register_operand\" \"=v\")\n+\t(unspec:VI8_256_512 [(match_operand:<ssePSmode2> 1 \"nonimmediate_operand\" \"<round_constraint>\")]\n+\t\t     UNSPEC_UNSIGNED_FIX_NOTRUNC))]\n+  \"TARGET_AVX512DQ && <round_mode512bit_condition>\"\n+  \"vcvtps2uqq\\t{<round_mask_op2>%1, %0<mask_operand2>|%0<mask_operand2>, %1<round_mask_op2>}\"\n+  [(set_attr \"type\" \"ssecvt\")\n+   (set_attr \"prefix\" \"evex\")\n+   (set_attr \"mode\" \"<sseinsnmode>\")])\n+\n+(define_insn \"<mask_codefor>avx512dq_cvtps2uqqv2di<mask_name>\"\n+  [(set (match_operand:V2DI 0 \"register_operand\" \"=v\")\n+\t(unspec:V2DI\n+\t  [(vec_select:V2SF\n+\t     (match_operand:V4SF 1 \"nonimmediate_operand\" \"vm\")\n+\t     (parallel [(const_int 0) (const_int 1)]))]\n+\t  UNSPEC_UNSIGNED_FIX_NOTRUNC))]\n+  \"TARGET_AVX512DQ && TARGET_AVX512VL\"\n+  \"vcvtps2uqq\\t{%1, %0<mask_operand2>|%0<mask_operand2>, %1}\"\n+  [(set_attr \"type\" \"ssecvt\")\n+   (set_attr \"prefix\" \"evex\")\n+   (set_attr \"mode\" \"TI\")])\n+\n (define_insn \"<fixsuffix>fix_truncv16sfv16si2<mask_name><round_saeonly_name>\"\n   [(set (match_operand:V16SI 0 \"register_operand\" \"=v\")\n \t(any_fix:V16SI"}]}