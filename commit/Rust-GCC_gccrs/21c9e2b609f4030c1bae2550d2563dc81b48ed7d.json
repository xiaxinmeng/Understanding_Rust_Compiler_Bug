{"sha": "21c9e2b609f4030c1bae2550d2563dc81b48ed7d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjFjOWUyYjYwOWY0MDMwYzFiYWUyNTUwZDI1NjNkYzgxYjQ4ZWQ3ZA==", "commit": {"author": {"name": "Howard Hinnant", "email": "hhinnant@apple.com", "date": "2006-09-26T00:59:37Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2006-09-26T00:59:37Z"}, "message": "re PR libstdc++/29224 (-Wshadow causing warning in <tr1/functional>)\n\n2006-09-26  Howard Hinnant  <hhinnant@apple.com>\n\n\tPR libstdc++/29224\n\t* include/tr1/functional_iterate.h: Avoid -Wshadow warnings.\n\nFrom-SVN: r117222", "tree": {"sha": "376513a7bee9970f6e6e919367106c636d537d40", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/376513a7bee9970f6e6e919367106c636d537d40"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/21c9e2b609f4030c1bae2550d2563dc81b48ed7d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21c9e2b609f4030c1bae2550d2563dc81b48ed7d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/21c9e2b609f4030c1bae2550d2563dc81b48ed7d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21c9e2b609f4030c1bae2550d2563dc81b48ed7d/comments", "author": null, "committer": null, "parents": [{"sha": "79c0cc65b3b96153d3b9670c08a4572d18a07c31", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/79c0cc65b3b96153d3b9670c08a4572d18a07c31", "html_url": "https://github.com/Rust-GCC/gccrs/commit/79c0cc65b3b96153d3b9670c08a4572d18a07c31"}], "stats": {"total": 15, "additions": 10, "deletions": 5}, "files": [{"sha": "839ad0a730456a4061f101d8c1a53b53c2d5ec73", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21c9e2b609f4030c1bae2550d2563dc81b48ed7d/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21c9e2b609f4030c1bae2550d2563dc81b48ed7d/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=21c9e2b609f4030c1bae2550d2563dc81b48ed7d", "patch": "@@ -1,3 +1,8 @@\n+2006-09-26  Howard Hinnant  <hhinnant@apple.com>\n+\n+\tPR libstdc++/29224\n+\t* include/tr1/functional_iterate.h: Avoid -Wshadow warnings.\n+\n 2006-09-25  Paolo Carlini  <pcarlini@suse.de>\n \n \tPR libstdc++/29179"}, {"sha": "4a74f83efec9f343571f907720fcf11b0c50e90d", "filename": "libstdc++-v3/include/tr1/functional_iterate.h", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21c9e2b609f4030c1bae2550d2563dc81b48ed7d/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Ffunctional_iterate.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21c9e2b609f4030c1bae2550d2563dc81b48ed7d/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Ffunctional_iterate.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Ffunctional_iterate.h?ref=21c9e2b609f4030c1bae2550d2563dc81b48ed7d", "patch": "@@ -1,6 +1,6 @@\n // TR1 functional -*- C++ -*-\n \n-// Copyright (C) 2005 Free Software Foundation, Inc.\n+// Copyright (C) 2005, 2006 Free Software Foundation, Inc.\n // Written by Douglas Gregor <doug.gregor -at- gmail.com>\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -195,7 +195,7 @@ template<typename _Res, typename _Class _GLIBCXX_COMMA_SHIFTED\n   public:\n     typedef _Res result_type;\n \n-    explicit _Mem_fn(_Functor __pmf) : __pmf(__pmf) { }\n+    explicit _Mem_fn(_Functor __pf) : __pmf(__pf) { }\n \n     // Handle objects\n     _Res\n@@ -249,7 +249,7 @@ template<typename _Res, typename _Class _GLIBCXX_COMMA_SHIFTED\n   public:\n     typedef _Res result_type;\n \n-    explicit _Mem_fn(_Functor __pmf) : __pmf(__pmf) { }\n+    explicit _Mem_fn(_Functor __pf) : __pmf(__pf) { }\n \n     // Handle objects\n     _Res\n@@ -303,7 +303,7 @@ template<typename _Res, typename _Class _GLIBCXX_COMMA_SHIFTED\n   public:\n     typedef _Res result_type;\n \n-    explicit _Mem_fn(_Functor __pmf) : __pmf(__pmf) { }\n+    explicit _Mem_fn(_Functor __pf) : __pmf(__pf) { }\n \n     // Handle objects\n     _Res\n@@ -357,7 +357,7 @@ template<typename _Res, typename _Class _GLIBCXX_COMMA_SHIFTED\n   public:\n     typedef _Res result_type;\n \n-    explicit _Mem_fn(_Functor __pmf) : __pmf(__pmf) { }\n+    explicit _Mem_fn(_Functor __pf) : __pmf(__pf) { }\n \n     // Handle objects\n     _Res"}]}