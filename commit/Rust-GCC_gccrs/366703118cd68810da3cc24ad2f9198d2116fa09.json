{"sha": "366703118cd68810da3cc24ad2f9198d2116fa09", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzY2NzAzMTE4Y2Q2ODgxMGRhM2NjMjRhZDJmOTE5OGQyMTE2ZmEwOQ==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2015-09-23T11:25:59Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2015-09-23T11:25:59Z"}, "message": "Fix filesystem::create_directories() function\n\n\t* src/filesystem/ops.cc (is_dot, is_dotdot): Define new helpers.\n\t(create_directories): Fix error handling.\n\t* testsuite/experimental/filesystem/operations/create_directories.cc:\n\tNew.\n\nFrom-SVN: r228041", "tree": {"sha": "ff4e5a9a81d0efe649b23b6dbc61d1123497d1ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ff4e5a9a81d0efe649b23b6dbc61d1123497d1ec"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/366703118cd68810da3cc24ad2f9198d2116fa09", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/366703118cd68810da3cc24ad2f9198d2116fa09", "html_url": "https://github.com/Rust-GCC/gccrs/commit/366703118cd68810da3cc24ad2f9198d2116fa09", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/366703118cd68810da3cc24ad2f9198d2116fa09/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "be6e26f995d137d8608d6c93c65316b6c3d2617d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be6e26f995d137d8608d6c93c65316b6c3d2617d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/be6e26f995d137d8608d6c93c65316b6c3d2617d"}], "stats": {"total": 129, "additions": 123, "deletions": 6}, "files": [{"sha": "a8dc5eba381b4b6f91b4930b3f4ef4b23ef5aa37", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/366703118cd68810da3cc24ad2f9198d2116fa09/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/366703118cd68810da3cc24ad2f9198d2116fa09/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=366703118cd68810da3cc24ad2f9198d2116fa09", "patch": "@@ -1,3 +1,10 @@\n+2015-09-23  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* src/filesystem/ops.cc (is_dot, is_dotdot): Define new helpers.\n+\t(create_directories): Fix error handling.\n+\t* testsuite/experimental/filesystem/operations/create_directories.cc:\n+\tNew.\n+\n 2015-09-21  Jonathan Wakely  <jwakely@redhat.com>\n \n \tPR libstdc++/67647"}, {"sha": "5ff8120f6076d61dca814754bab18775c65a1f02", "filename": "libstdc++-v3/src/filesystem/ops.cc", "status": "modified", "additions": 41, "deletions": 6, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/366703118cd68810da3cc24ad2f9198d2116fa09/libstdc%2B%2B-v3%2Fsrc%2Ffilesystem%2Fops.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/366703118cd68810da3cc24ad2f9198d2116fa09/libstdc%2B%2B-v3%2Fsrc%2Ffilesystem%2Fops.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Ffilesystem%2Fops.cc?ref=366703118cd68810da3cc24ad2f9198d2116fa09", "patch": "@@ -85,6 +85,24 @@ fs::absolute(const path& p, const path& base)\n \n namespace\n {\n+#ifdef _GLIBCXX_FILESYSTEM_IS_WINDOWS\n+  inline bool is_dot(wchar_t c) { return c == L'.'; }\n+#else\n+  inline bool is_dot(char c) { return c == '.'; }\n+#endif\n+\n+  inline bool is_dot(const fs::path& path)\n+  {\n+    const auto& filename = path.native();\n+    return filename.size() == 1 && is_dot(filename[0]);\n+  }\n+\n+  inline bool is_dotdot(const fs::path& path)\n+  {\n+    const auto& filename = path.native();\n+    return filename.size() == 2 && is_dot(filename[0]) && is_dot(filename[1]);\n+  }\n+\n   struct free_as_in_malloc\n   {\n     void operator()(void* p) const { ::free(p); }\n@@ -576,19 +594,36 @@ fs::create_directories(const path& p)\n bool\n fs::create_directories(const path& p, error_code& ec) noexcept\n {\n+  if (p.empty())\n+    {\n+      ec = std::make_error_code(errc::invalid_argument);\n+      return false;\n+    }\n   std::stack<path> missing;\n   path pp = p;\n-  ec.clear();\n-  while (!p.empty() && !exists(pp, ec) && !ec.value())\n+\n+  while (!pp.empty() && status(pp, ec).type() == file_type::not_found)\n     {\n-      missing.push(pp);\n-      pp = pp.parent_path();\n+      ec.clear();\n+      const auto& filename = pp.filename();\n+      if (!is_dot(filename) && !is_dotdot(filename))\n+\tmissing.push(pp);\n+      pp.remove_filename();\n     }\n-  while (!missing.empty() && !ec.value())\n+\n+  if (ec || missing.empty())\n+    return false;\n+\n+  do\n     {\n-      create_directory(missing.top(), ec);\n+      const path& top = missing.top();\n+      create_directory(top, ec);\n+      if (ec && is_directory(top))\n+\tec.clear();\n       missing.pop();\n     }\n+  while (!missing.empty() && !ec);\n+\n   return missing.empty();\n }\n "}, {"sha": "b84d966ad7448583f34d4438400a499e3c649c09", "filename": "libstdc++-v3/testsuite/experimental/filesystem/operations/create_directories.cc", "status": "added", "additions": 75, "deletions": 0, "changes": 75, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/366703118cd68810da3cc24ad2f9198d2116fa09/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffilesystem%2Foperations%2Fcreate_directories.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/366703118cd68810da3cc24ad2f9198d2116fa09/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffilesystem%2Foperations%2Fcreate_directories.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffilesystem%2Foperations%2Fcreate_directories.cc?ref=366703118cd68810da3cc24ad2f9198d2116fa09", "patch": "@@ -0,0 +1,75 @@\n+// Copyright (C) 2015 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-options \"-std=gnu++11 -lstdc++fs\" }\n+// { dg-require-filesystem-ts \"\" }\n+\n+#include <experimental/filesystem>\n+#include <testsuite_hooks.h>\n+#include <testsuite_fs.h>\n+\n+namespace fs = std::experimental::filesystem;\n+\n+void\n+test01()\n+{\n+  bool test __attribute__((unused)) = false;\n+  std::error_code ec;\n+\n+  // Test empty path.\n+  bool b = fs::create_directories( \"\", ec );\n+  VERIFY( ec );\n+  VERIFY( !b );\n+\n+  // Test existing path.\n+  b = fs::create_directories( fs::current_path(), ec );\n+  VERIFY( !ec );\n+  VERIFY( !b );\n+\n+  // Test non-existent path.\n+  const auto p = __gnu_test::nonexistent_path();\n+  b = fs::create_directories( p, ec );\n+  VERIFY( !ec );\n+  VERIFY( b );\n+  VERIFY( is_directory(p) );\n+\n+  b = fs::create_directories( p/\".\", ec );\n+  VERIFY( !ec );\n+  VERIFY( !b );\n+\n+  b = fs::create_directories( p/\"..\", ec );\n+  VERIFY( !ec );\n+  VERIFY( !b );\n+\n+  b = fs::create_directories( p/\"d1/d2/d3\", ec );\n+  VERIFY( !ec );\n+  VERIFY( b );\n+  VERIFY( is_directory(p/\"d1/d2/d3\") );\n+\n+  b = fs::create_directories( p/\"./d4/../d5\", ec );\n+  VERIFY( !ec );\n+  VERIFY( b );\n+  VERIFY( is_directory(p/\"./d4/../d5\") );\n+\n+  remove_all(p, ec);\n+}\n+\n+int\n+main()\n+{\n+  test01();\n+}"}]}