{"sha": "6684c4438611d08f60b540509e4bd05ae1efbcb8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjY4NGM0NDM4NjExZDA4ZjYwYjU0MDUwOWU0YmQwNWFlMWVmYmNiOA==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2010-11-08T16:18:10Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2010-11-08T16:18:10Z"}, "message": "complex (operator==, !=): Mark constexpr.\n\n2010-11-08  Benjamin Kosnik  <bkoz@redhat.com>\n\n        * include/std/complex (operator==, !=): Mark constexpr.\n        * testsuite/26_numerics/complex/comparison_operators/constexpr.cc: New.\n\nFrom-SVN: r166439", "tree": {"sha": "8f4a0116510d057322578ffcdd4eefb5000c4a50", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8f4a0116510d057322578ffcdd4eefb5000c4a50"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6684c4438611d08f60b540509e4bd05ae1efbcb8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6684c4438611d08f60b540509e4bd05ae1efbcb8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6684c4438611d08f60b540509e4bd05ae1efbcb8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6684c4438611d08f60b540509e4bd05ae1efbcb8/comments", "author": null, "committer": null, "parents": [{"sha": "7606bd1197e8b097d175639bc0be68833e1ef1df", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7606bd1197e8b097d175639bc0be68833e1ef1df", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7606bd1197e8b097d175639bc0be68833e1ef1df"}], "stats": {"total": 56, "additions": 50, "deletions": 6}, "files": [{"sha": "4a5d6305f44b4ac2cce3016d21920146b28c3cdd", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6684c4438611d08f60b540509e4bd05ae1efbcb8/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6684c4438611d08f60b540509e4bd05ae1efbcb8/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=6684c4438611d08f60b540509e4bd05ae1efbcb8", "patch": "@@ -1,3 +1,8 @@\n+2010-11-08  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+        * include/std/complex (operator==, !=): Mark constexpr.\n+        * testsuite/26_numerics/complex/comparison_operators/constexpr.cc: New.\n+\n 2010-11-08  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* include/bits/stl_tree.h (_Rb_tree<>::_M_erase_aux): Add."}, {"sha": "ffdadc3757e4a3f70267465bbce8f690cace6d70", "filename": "libstdc++-v3/include/std/complex", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6684c4438611d08f60b540509e4bd05ae1efbcb8/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcomplex", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6684c4438611d08f60b540509e4bd05ae1efbcb8/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcomplex", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcomplex?ref=6684c4438611d08f60b540509e4bd05ae1efbcb8", "patch": "@@ -447,35 +447,35 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n   //@{\n   ///  Return true if @a x is equal to @a y.\n   template<typename _Tp>\n-    inline bool\n+    inline _GLIBCXX_CONSTEXPR bool\n     operator==(const complex<_Tp>& __x, const complex<_Tp>& __y)\n     { return __x.real() == __y.real() && __x.imag() == __y.imag(); }\n \n   template<typename _Tp>\n-    inline bool\n+    inline _GLIBCXX_CONSTEXPR bool\n     operator==(const complex<_Tp>& __x, const _Tp& __y)\n     { return __x.real() == __y && __x.imag() == _Tp(); }\n \n   template<typename _Tp>\n-    inline bool\n+    inline _GLIBCXX_CONSTEXPR bool\n     operator==(const _Tp& __x, const complex<_Tp>& __y)\n     { return __x == __y.real() && _Tp() == __y.imag(); }\n   //@}\n \n   //@{\n   ///  Return false if @a x is equal to @a y.\n   template<typename _Tp>\n-    inline bool\n+    inline _GLIBCXX_CONSTEXPR bool\n     operator!=(const complex<_Tp>& __x, const complex<_Tp>& __y)\n     { return __x.real() != __y.real() || __x.imag() != __y.imag(); }\n \n   template<typename _Tp>\n-    inline bool\n+    inline _GLIBCXX_CONSTEXPR bool\n     operator!=(const complex<_Tp>& __x, const _Tp& __y)\n     { return __x.real() != __y || __x.imag() != _Tp(); }\n \n   template<typename _Tp>\n-    inline bool\n+    inline _GLIBCXX_CONSTEXPR bool\n     operator!=(const _Tp& __x, const complex<_Tp>& __y)\n     { return __x != __y.real() || _Tp() != __y.imag(); }\n   //@}"}, {"sha": "85c3ab7b4aa69fff05c5604b2774063af99e2c87", "filename": "libstdc++-v3/testsuite/26_numerics/complex/comparison_operators/constexpr.cc", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6684c4438611d08f60b540509e4bd05ae1efbcb8/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fcomplex%2Fcomparison_operators%2Fconstexpr.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6684c4438611d08f60b540509e4bd05ae1efbcb8/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fcomplex%2Fcomparison_operators%2Fconstexpr.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fcomplex%2Fcomparison_operators%2Fconstexpr.cc?ref=6684c4438611d08f60b540509e4bd05ae1efbcb8", "patch": "@@ -0,0 +1,39 @@\n+// { dg-do compile }\n+// { dg-options \"-std=gnu++0x\" }\n+\n+// Copyright (C) 2010 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <complex>\n+#include <testsuite_common_types.h>\n+\n+int main()\n+{\n+  __gnu_test::constexpr_comparison_eq_ne test;\n+  test.operator()<std::complex<float>>();\n+  test.operator()<std::complex<float>, float>();\n+  test.operator()<float,std::complex<float>>();\n+\n+  test.operator()<std::complex<double>>();\n+  test.operator()<std::complex<double>, double>();\n+  test.operator()<double,std::complex<double>>();\n+\n+  test.operator()<std::complex<long double>>();\n+  test.operator()<std::complex<long double>, long double>();\n+  test.operator()<long double,std::complex<long double>>();\n+  return 0;\n+}"}]}