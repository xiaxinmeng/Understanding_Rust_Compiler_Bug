{"sha": "b91b26c962cc51f3f1058aceb4de20b31f100c8c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjkxYjI2Yzk2MmNjNTFmM2YxMDU4YWNlYjRkZTIwYjMxZjEwMGM4Yw==", "commit": {"author": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1997-02-03T20:51:21Z"}, "committer": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1997-02-03T20:51:21Z"}, "message": "sol2.h (ASM_SHORT,ASM_LONG): Set to .uahalf/.uaword.\n\n\t* sparc/sol2.h (ASM_SHORT,ASM_LONG): Set to .uahalf/.uaword.\n\t* sparc/sysv4.h (ASM_LONG): Define.\n\t(ASM_OUTPUT_{FLOAT,DOUBLE,LONG_DOUBLE}): Use ASM_LONG.\n\nFrom-SVN: r13602", "tree": {"sha": "c266a8ecf22bcd9fc5cdbf1a0f48ee5bf4910607", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c266a8ecf22bcd9fc5cdbf1a0f48ee5bf4910607"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b91b26c962cc51f3f1058aceb4de20b31f100c8c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b91b26c962cc51f3f1058aceb4de20b31f100c8c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b91b26c962cc51f3f1058aceb4de20b31f100c8c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b91b26c962cc51f3f1058aceb4de20b31f100c8c/comments", "author": null, "committer": null, "parents": [{"sha": "4ed4cb9a0360080746a2d2fad2d2a875f122230c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ed4cb9a0360080746a2d2fad2d2a875f122230c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4ed4cb9a0360080746a2d2fad2d2a875f122230c"}], "stats": {"total": 25, "additions": 18, "deletions": 7}, "files": [{"sha": "fca28be7b11bbcf29bf0a2c599eb8ddda73d42e0", "filename": "gcc/config/sparc/sol2.h", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b91b26c962cc51f3f1058aceb4de20b31f100c8c/gcc%2Fconfig%2Fsparc%2Fsol2.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b91b26c962cc51f3f1058aceb4de20b31f100c8c/gcc%2Fconfig%2Fsparc%2Fsol2.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsol2.h?ref=b91b26c962cc51f3f1058aceb4de20b31f100c8c", "patch": "@@ -74,6 +74,13 @@ Boston, MA 02111-1307, USA.  */\n #define ASM_OUTPUT_SKIP(FILE,SIZE)  \\\n   fprintf (FILE, \"\\t.skip %u\\n\", (SIZE))\n \n+/* Use .uahalf/.uaword so packed structure members don't generate\n+   assembler errors when using the native assembler.  */\n+#undef ASM_SHORT\n+#define ASM_SHORT \".uahalf\"\n+#undef ASM_LONG\n+#define ASM_LONG \".uaword\"\n+\n /* This is how to output a definition of an internal numbered label where\n    PREFIX is the class of label and NUM is the number within the class.  */\n "}, {"sha": "4dfde2af3d021a483b2941510b680f683a2050d6", "filename": "gcc/config/sparc/sysv4.h", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b91b26c962cc51f3f1058aceb4de20b31f100c8c/gcc%2Fconfig%2Fsparc%2Fsysv4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b91b26c962cc51f3f1058aceb4de20b31f100c8c/gcc%2Fconfig%2Fsparc%2Fsysv4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsysv4.h?ref=b91b26c962cc51f3f1058aceb4de20b31f100c8c", "patch": "@@ -96,6 +96,10 @@ Boston, MA 02111-1307, USA.  */\n #define PUSHSECTION_ASM_OP\t\".pushsection\"\n #define POPSECTION_ASM_OP\t\".popsection\"\n \n+/* This is defined in sparc.h but is not used by svr4.h.  */\n+#undef ASM_LONG\n+#define ASM_LONG \".long\"\n+\n /* This is the format used to print the second operand of a .type pseudo-op\n    for the Sparc/svr4 assembler.  */\n \n@@ -202,7 +206,7 @@ do {\t\t\t\t\t\t\t\t\t\\\n #define ASM_OUTPUT_FLOAT(FILE,VALUE)\t\t\t\t\t\\\n do { long value;\t\t\t\t\t\t\t\\\n      REAL_VALUE_TO_TARGET_SINGLE ((VALUE), value);\t\t\t\\\n-     fprintf((FILE), \"\\t.long\\t0x%x\\n\", value);\t\t\t\t\\\n+     fprintf((FILE), \"\\t%s\\t0x%x\\n\", ASM_LONG, value);\t\t\t\\\n    } while (0)\n \n /* This is how to output assembly code to define a `double' constant.\n@@ -214,8 +218,8 @@ do { long value;\t\t\t\t\t\t\t\\\n #define ASM_OUTPUT_DOUBLE(FILE,VALUE)\t\t\t\t\t\\\n do { long value[2];\t\t\t\t\t\t\t\\\n      REAL_VALUE_TO_TARGET_DOUBLE ((VALUE), value);\t\t\t\\\n-     fprintf((FILE), \"\\t.long\\t0x%x\\n\", value[0]);\t\t\t\\\n-     fprintf((FILE), \"\\t.long\\t0x%x\\n\", value[1]);\t\t\t\\\n+     fprintf((FILE), \"\\t%s\\t0x%x\\n\", ASM_LONG, value[0]);\t\t\\\n+     fprintf((FILE), \"\\t%s\\t0x%x\\n\", ASM_LONG, value[1]);\t\t\\\n    } while (0)\n \n /* This is how to output an assembler line defining a `long double'\n@@ -225,10 +229,10 @@ do { long value[2];\t\t\t\t\t\t\t\\\n #define ASM_OUTPUT_LONG_DOUBLE(FILE,VALUE)\t\t\t\t\\\n do { long value[4];\t\t\t\t\t\t\t\\\n      REAL_VALUE_TO_TARGET_LONG_DOUBLE ((VALUE), value);\t\t\t\\\n-     fprintf((FILE), \"\\t.long\\t0x%x\\n\", value[0]);\t\t\t\\\n-     fprintf((FILE), \"\\t.long\\t0x%x\\n\", value[1]);\t\t\t\\\n-     fprintf((FILE), \"\\t.long\\t0x%x\\n\", value[2]);\t\t\t\\\n-     fprintf((FILE), \"\\t.long\\t0x%x\\n\", value[3]);\t\t\t\\\n+     fprintf((FILE), \"\\t%s\\t0x%x\\n\", ASM_LONG, value[0]);\t\t\\\n+     fprintf((FILE), \"\\t%s\\t0x%x\\n\", ASM_LONG, value[1]);\t\t\\\n+     fprintf((FILE), \"\\t%s\\t0x%x\\n\", ASM_LONG, value[2]);\t\t\\\n+     fprintf((FILE), \"\\t%s\\t0x%x\\n\", ASM_LONG, value[3]);\t\t\\\n    } while (0)\n \f\n /* Output assembler code to FILE to initialize this source file's"}]}