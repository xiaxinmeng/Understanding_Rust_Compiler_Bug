{"sha": "addd5f0e61f73659c29f47a02e93bfc5e534dbf6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWRkZDVmMGU2MWY3MzY1OWMyOWY0N2EwMmU5M2JmYzVlNTM0ZGJmNg==", "commit": {"author": {"name": "Matthias Kretz", "email": "m.kretz@gsi.de", "date": "2021-06-24T13:20:15Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-06-24T13:33:21Z"}, "message": "libstdc++: Fix internal names: add missing underscores\n\nSigned-off-by: Matthias Kretz <m.kretz@gsi.de>\n\nlibstdc++-v3/ChangeLog:\n\n\t* include/experimental/bits/simd_math.h\n\t(_GLIBCXX_SIMD_MATH_CALL2_): Rename arg2_ to __arg2.\n\t(_GLIBCXX_SIMD_MATH_CALL3_): Rename arg2_ to __arg2 and arg3_ to\n\t__arg3.", "tree": {"sha": "f9721a14771cae32d7b054aef1ae02147272f256", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f9721a14771cae32d7b054aef1ae02147272f256"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/addd5f0e61f73659c29f47a02e93bfc5e534dbf6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/addd5f0e61f73659c29f47a02e93bfc5e534dbf6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/addd5f0e61f73659c29f47a02e93bfc5e534dbf6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/addd5f0e61f73659c29f47a02e93bfc5e534dbf6/comments", "author": {"login": "mattkretz", "id": 3306474, "node_id": "MDQ6VXNlcjMzMDY0NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3306474?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattkretz", "html_url": "https://github.com/mattkretz", "followers_url": "https://api.github.com/users/mattkretz/followers", "following_url": "https://api.github.com/users/mattkretz/following{/other_user}", "gists_url": "https://api.github.com/users/mattkretz/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattkretz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattkretz/subscriptions", "organizations_url": "https://api.github.com/users/mattkretz/orgs", "repos_url": "https://api.github.com/users/mattkretz/repos", "events_url": "https://api.github.com/users/mattkretz/events{/privacy}", "received_events_url": "https://api.github.com/users/mattkretz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8888795ad16fc5ebf112b5bac091dc1ebb6c45d1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8888795ad16fc5ebf112b5bac091dc1ebb6c45d1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8888795ad16fc5ebf112b5bac091dc1ebb6c45d1"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "dd9aaa35967bc5247390d9891796707436e8fa67", "filename": "libstdc++-v3/include/experimental/bits/simd_math.h", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/addd5f0e61f73659c29f47a02e93bfc5e534dbf6/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fbits%2Fsimd_math.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/addd5f0e61f73659c29f47a02e93bfc5e534dbf6/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fbits%2Fsimd_math.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fbits%2Fsimd_math.h?ref=addd5f0e61f73659c29f47a02e93bfc5e534dbf6", "patch": "@@ -119,10 +119,10 @@ template <typename _Up, typename _Tp, typename _Abi>\n \n //}}}\n // _GLIBCXX_SIMD_MATH_CALL2_ {{{\n-#define _GLIBCXX_SIMD_MATH_CALL2_(__name, arg2_)                               \\\n+#define _GLIBCXX_SIMD_MATH_CALL2_(__name, __arg2)                              \\\n template <                                                                     \\\n   typename _Tp, typename _Abi, typename...,                                    \\\n-  typename _Arg2 = _Extra_argument_type<arg2_, _Tp, _Abi>,                     \\\n+  typename _Arg2 = _Extra_argument_type<__arg2, _Tp, _Abi>,                    \\\n   typename _R = _Math_return_type_t<                                           \\\n     decltype(std::__name(declval<double>(), _Arg2::declval())), _Tp, _Abi>>    \\\n   enable_if_t<is_floating_point_v<_Tp>, _R>                                    \\\n@@ -137,7 +137,7 @@ template <typename _Up, typename _Tp, typename _Abi>                           \\\n       declval<double>(),                                                       \\\n       declval<enable_if_t<                                                     \\\n \tconjunction_v<                                                         \\\n-\t  is_same<arg2_, _Tp>,                                                 \\\n+\t  is_same<__arg2, _Tp>,                                                \\\n \t  negation<is_same<__remove_cvref_t<_Up>, simd<_Tp, _Abi>>>,           \\\n \t  is_convertible<_Up, simd<_Tp, _Abi>>, is_floating_point<_Tp>>,       \\\n \tdouble>>())),                                                          \\\n@@ -147,10 +147,10 @@ template <typename _Up, typename _Tp, typename _Abi>                           \\\n \n // }}}\n // _GLIBCXX_SIMD_MATH_CALL3_ {{{\n-#define _GLIBCXX_SIMD_MATH_CALL3_(__name, arg2_, arg3_)                        \\\n+#define _GLIBCXX_SIMD_MATH_CALL3_(__name, __arg2, __arg3)                      \\\n template <typename _Tp, typename _Abi, typename...,                            \\\n-\t  typename _Arg2 = _Extra_argument_type<arg2_, _Tp, _Abi>,             \\\n-\t  typename _Arg3 = _Extra_argument_type<arg3_, _Tp, _Abi>,             \\\n+\t  typename _Arg2 = _Extra_argument_type<__arg2, _Tp, _Abi>,            \\\n+\t  typename _Arg3 = _Extra_argument_type<__arg3, _Tp, _Abi>,            \\\n \t  typename _R = _Math_return_type_t<                                   \\\n \t    decltype(std::__name(declval<double>(), _Arg2::declval(),          \\\n \t\t\t\t _Arg3::declval())),                           \\"}]}