{"sha": "6ff382305327c639508f9fe6b24996e42da6cc64", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmZmMzgyMzA1MzI3YzYzOTUwOGY5ZmU2YjI0OTk2ZTQyZGE2Y2M2NA==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2011-01-17T14:48:35Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2011-01-17T14:48:35Z"}, "message": "re PR middle-end/47313 (ICE: PHI argument is not a GIMPLE value)\n\n2011-01-17  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/47313\n\t* tree-inline.c (tree_function_versioning): Move DECL_RESULT\n\thandling before copying the body.  Properly deal with\n\tby-reference result in SSA form.\n\n\t* g++.dg/torture/pr47313.C: New testcase.\n\nFrom-SVN: r168907", "tree": {"sha": "90224228b70b15261f8541e74e1bbc229d63cda5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/90224228b70b15261f8541e74e1bbc229d63cda5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6ff382305327c639508f9fe6b24996e42da6cc64", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ff382305327c639508f9fe6b24996e42da6cc64", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6ff382305327c639508f9fe6b24996e42da6cc64", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ff382305327c639508f9fe6b24996e42da6cc64/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bf5cd92b160ff9f805411025546c17769c1977bd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf5cd92b160ff9f805411025546c17769c1977bd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bf5cd92b160ff9f805411025546c17769c1977bd"}], "stats": {"total": 87, "additions": 81, "deletions": 6}, "files": [{"sha": "b5c8fa144419c2ab9558b07af1017c38147c5050", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ff382305327c639508f9fe6b24996e42da6cc64/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ff382305327c639508f9fe6b24996e42da6cc64/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6ff382305327c639508f9fe6b24996e42da6cc64", "patch": "@@ -1,3 +1,10 @@\n+2011-01-17  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/47313\n+\t* tree-inline.c (tree_function_versioning): Move DECL_RESULT\n+\thandling before copying the body.  Properly deal with\n+\tby-reference result in SSA form.\n+\n 2011-01-17  Ian Lance Taylor  <iant@google.com>\n \n \tPR target/47219"}, {"sha": "2ab6f5383e26160c6ba9c8a4b3cea8c60891ff52", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ff382305327c639508f9fe6b24996e42da6cc64/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ff382305327c639508f9fe6b24996e42da6cc64/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6ff382305327c639508f9fe6b24996e42da6cc64", "patch": "@@ -1,3 +1,8 @@\n+2011-01-17  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/47313\n+\t* g++.dg/torture/pr47313.C: New testcase.\n+\n 2011-01-17  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR target/47318"}, {"sha": "c10f558a3eb6d58d7a4a02cb221b9c70341f0d3b", "filename": "gcc/testsuite/g++.dg/torture/pr47313.C", "status": "added", "additions": 53, "deletions": 0, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ff382305327c639508f9fe6b24996e42da6cc64/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr47313.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ff382305327c639508f9fe6b24996e42da6cc64/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr47313.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr47313.C?ref=6ff382305327c639508f9fe6b24996e42da6cc64", "patch": "@@ -0,0 +1,53 @@\n+// { dg-do compile }\n+\n+namespace internal {\n+    template < class DSC, bool Const >   struct CC_iterator   {\n+\ttypedef CC_iterator iterator;\n+\ttypedef typename DSC::value_type value_type;\n+\ttypedef const value_type* pointer;\n+\tCC_iterator ()     ;\n+\tCC_iterator (const iterator &it)     {\n+\t}\n+\tpointer p;\n+\tpointer operator->() const ;\n+    };\n+}\n+template < class T > struct Compact_container {\n+    typedef Compact_container <T> Self;\n+    typedef T value_type;\n+    typedef internal::CC_iterator<Self, false> iterator;\n+};\n+template < typename TDS = void > struct Periodic_3_triangulation_ds_cell_base_3 {\n+    typedef typename TDS::Vertex_handle Vertex_handle;\n+    const Vertex_handle& vertex(int i) const   {\n+    }\n+};\n+struct Triangulation_data_structure_3    {\n+    typedef Triangulation_data_structure_3 Tds;\n+    typedef Periodic_3_triangulation_ds_cell_base_3<Tds> Cell;\n+    typedef Compact_container<Cell> Cell_range;\n+    typedef Compact_container<int> Vertex_range;\n+    typedef typename Cell_range::iterator Cell_handle;\n+    typedef typename Vertex_range::iterator Vertex_handle;\n+};\n+typedef Triangulation_data_structure_3 TDS1;\n+template <  class > struct Periodic_3_Delaunay_triangulation_3 {\n+    typedef TDS1::Vertex_handle Vertex_handle;\n+    typedef TDS1::Cell_handle Cell_handle;\n+    int compare_distance() const {\n+    }\n+    Vertex_handle nearest_vertex() const;\n+};\n+template < class Tds > typename Periodic_3_Delaunay_triangulation_3<Tds>::Vertex_handle Periodic_3_Delaunay_triangulation_3<Tds>::nearest_vertex() const {\n+    Cell_handle c ;\n+    Vertex_handle nearest = c->vertex(0);\n+    nearest = (compare_distance() == -1) ?       nearest : c->vertex(0);\n+    return nearest;\n+}\n+typedef Periodic_3_Delaunay_triangulation_3<TDS1> PDT1;\n+struct Periodic_3_triangulation_hierarchy_3   : PDT1 {\n+    Vertex_handle   nearest_vertex() const;\n+};\n+Periodic_3_triangulation_hierarchy_3::Vertex_handle Periodic_3_triangulation_hierarchy_3:: nearest_vertex() const {\n+    return PDT1::nearest_vertex();\n+}"}, {"sha": "c5ab4ca75ed034abd1fa31625df78645e02f1a81", "filename": "gcc/tree-inline.c", "status": "modified", "additions": 16, "deletions": 6, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ff382305327c639508f9fe6b24996e42da6cc64/gcc%2Ftree-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ff382305327c639508f9fe6b24996e42da6cc64/gcc%2Ftree-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-inline.c?ref=6ff382305327c639508f9fe6b24996e42da6cc64", "patch": "@@ -5173,17 +5173,27 @@ tree_function_versioning (tree old_decl, tree new_decl,\n     /* Add local vars.  */\n     add_local_variables (DECL_STRUCT_FUNCTION (old_decl), cfun, &id, false);\n \n-  /* Copy the Function's body.  */\n-  copy_body (&id, old_entry_block->count, REG_BR_PROB_BASE,\n-\t     ENTRY_BLOCK_PTR, EXIT_BLOCK_PTR, blocks_to_copy, new_entry);\n-\n   if (DECL_RESULT (old_decl) != NULL_TREE)\n     {\n-      tree *res_decl = &DECL_RESULT (old_decl);\n-      DECL_RESULT (new_decl) = remap_decl (*res_decl, &id);\n+      tree old_name;\n+      DECL_RESULT (new_decl) = remap_decl (DECL_RESULT (old_decl), &id);\n       lang_hooks.dup_lang_specific_decl (DECL_RESULT (new_decl));\n+      if (gimple_in_ssa_p (id.src_cfun)\n+\t  && DECL_BY_REFERENCE (DECL_RESULT (old_decl))\n+\t  && (old_name\n+\t      = gimple_default_def (id.src_cfun, DECL_RESULT (old_decl))))\n+\t{\n+\t  tree new_name = make_ssa_name (DECL_RESULT (new_decl), NULL);\n+\t  insert_decl_map (&id, old_name, new_name);\n+\t  SSA_NAME_DEF_STMT (new_name) = gimple_build_nop ();\n+\t  set_default_def (DECL_RESULT (new_decl), new_name);\n+\t}\n     }\n \n+  /* Copy the Function's body.  */\n+  copy_body (&id, old_entry_block->count, REG_BR_PROB_BASE,\n+\t     ENTRY_BLOCK_PTR, EXIT_BLOCK_PTR, blocks_to_copy, new_entry);\n+\n   /* Renumber the lexical scoping (non-code) blocks consecutively.  */\n   number_blocks (new_decl);\n "}]}