{"sha": "dbbe64450e86716dd63319ce855844c6fa82eda7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGJiZTY0NDUwZTg2NzE2ZGQ2MzMxOWNlODU1ODQ0YzZmYTgyZWRhNw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-04-28T18:56:43Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-04-28T18:56:43Z"}, "message": "(simplify_binary_operation, case SMAX): Cast to unsiged HOST_WIDE_INT\ninstead of unsigned int.\n\nFrom-SVN: r4259", "tree": {"sha": "35db6dd5ec51370e4da0030390e2d4529b00f4ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/35db6dd5ec51370e4da0030390e2d4529b00f4ef"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dbbe64450e86716dd63319ce855844c6fa82eda7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dbbe64450e86716dd63319ce855844c6fa82eda7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dbbe64450e86716dd63319ce855844c6fa82eda7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dbbe64450e86716dd63319ce855844c6fa82eda7/comments", "author": null, "committer": null, "parents": [{"sha": "adb7a1cbf237864296f6d1d3dbb6a6f36ab4a3e7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/adb7a1cbf237864296f6d1d3dbb6a6f36ab4a3e7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/adb7a1cbf237864296f6d1d3dbb6a6f36ab4a3e7"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "b444ae09157546c595f53220d953798fd5f1fede", "filename": "gcc/cse.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbe64450e86716dd63319ce855844c6fa82eda7/gcc%2Fcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbe64450e86716dd63319ce855844c6fa82eda7/gcc%2Fcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcse.c?ref=dbbe64450e86716dd63319ce855844c6fa82eda7", "patch": "@@ -3716,7 +3716,8 @@ simplify_binary_operation (code, mode, op0, op1)\n \t   \n \tcase SMAX:\n \t  if (width <= HOST_BITS_PER_WIDE_INT && GET_CODE (op1) == CONST_INT\n-\t      && INTVAL (op1) == (unsigned) GET_MODE_MASK (mode) >> 1\n+\t      && (INTVAL (op1)\n+\t\t  == (unsigned HOST_WIDE_INT) GET_MODE_MASK (mode) >> 1)\n \t      && ! side_effects_p (op0))\n \t    return op1;\n \t  else if (rtx_equal_p (op0, op1) && ! side_effects_p (op0))"}]}