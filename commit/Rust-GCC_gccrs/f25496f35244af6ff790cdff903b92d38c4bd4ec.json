{"sha": "f25496f35244af6ff790cdff903b92d38c4bd4ec", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjI1NDk2ZjM1MjQ0YWY2ZmY3OTBjZGZmOTAzYjkyZDM4YzRiZDRlYw==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2010-08-06T12:58:04Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2010-08-06T12:58:04Z"}, "message": "decl.c (gnat_to_gnu_entity): Do not build an allocator for large imported objects.\n\n\t* gcc-interface/decl.c (gnat_to_gnu_entity) <object>: Do not build an\n\tallocator for large imported objects.\n\nFrom-SVN: r162947", "tree": {"sha": "eda1b15fc8cf61d3b3705c70f9ad431905c56023", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eda1b15fc8cf61d3b3705c70f9ad431905c56023"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f25496f35244af6ff790cdff903b92d38c4bd4ec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f25496f35244af6ff790cdff903b92d38c4bd4ec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f25496f35244af6ff790cdff903b92d38c4bd4ec", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f25496f35244af6ff790cdff903b92d38c4bd4ec/comments", "author": null, "committer": null, "parents": [{"sha": "49f6cd1f259bb6060bcd6f912781f1edd96a8dff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49f6cd1f259bb6060bcd6f912781f1edd96a8dff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/49f6cd1f259bb6060bcd6f912781f1edd96a8dff"}], "stats": {"total": 12, "additions": 8, "deletions": 4}, "files": [{"sha": "2079538a75e45568446bf2021322115ffc8d4eca", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f25496f35244af6ff790cdff903b92d38c4bd4ec/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f25496f35244af6ff790cdff903b92d38c4bd4ec/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=f25496f35244af6ff790cdff903b92d38c4bd4ec", "patch": "@@ -1,3 +1,8 @@\n+2010-08-06  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc-interface/decl.c (gnat_to_gnu_entity) <object>: Do not build an\n+\tallocator for large imported objects.\n+\n 2010-08-05  Robert Dewar  <dewar@adacore.com>\n \n \t* gnat1drv.adb: Minor reformatting."}, {"sha": "ff821cf4660f0f9a4dbb12e7275a3897d3bdf911", "filename": "gcc/ada/gcc-interface/decl.c", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f25496f35244af6ff790cdff903b92d38c4bd4ec/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f25496f35244af6ff790cdff903b92d38c4bd4ec/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Fdecl.c?ref=f25496f35244af6ff790cdff903b92d38c4bd4ec", "patch": "@@ -1180,7 +1180,6 @@ gnat_to_gnu_entity (Entity_Id gnat_entity, tree gnu_expr, int definition)\n \t    gnu_type = build_reference_type (gnu_type);\n \t    gnu_size = NULL_TREE;\n \t    used_by_ref = true;\n-\t    const_flag = true;\n \n \t    /* In case this was a aliased object whose nominal subtype is\n \t       unconstrained, the pointer above will be a thin pointer and\n@@ -1194,7 +1193,7 @@ gnat_to_gnu_entity (Entity_Id gnat_entity, tree gnu_expr, int definition)\n \t       If we are elaborating a mutable object, tell build_allocator to\n \t       ignore a possibly simpler size from the initializer, if any, as\n \t       we must allocate the maximum possible size in this case.  */\n-\t    if (definition)\n+\t    if (definition && !imported_p)\n \t      {\n \t\ttree gnu_alloc_type = TREE_TYPE (gnu_type);\n \n@@ -1217,14 +1216,14 @@ gnat_to_gnu_entity (Entity_Id gnat_entity, tree gnu_expr, int definition)\n \t\t  }\n \n \t\tif (TREE_CODE (TYPE_SIZE_UNIT (gnu_alloc_type)) == INTEGER_CST\n-\t\t    && TREE_OVERFLOW (TYPE_SIZE_UNIT (gnu_alloc_type))\n-\t\t    && !Is_Imported (gnat_entity))\n+\t\t    && TREE_OVERFLOW (TYPE_SIZE_UNIT (gnu_alloc_type)))\n \t\t  post_error (\"?`Storage_Error` will be raised at run time!\",\n \t\t\t      gnat_entity);\n \n \t\tgnu_expr\n \t\t  = build_allocator (gnu_alloc_type, gnu_expr, gnu_type,\n \t\t\t\t     Empty, Empty, gnat_entity, mutable_p);\n+\t\tconst_flag = true;\n \t      }\n \t    else\n \t      {"}]}