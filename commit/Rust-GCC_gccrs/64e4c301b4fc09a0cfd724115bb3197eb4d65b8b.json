{"sha": "64e4c301b4fc09a0cfd724115bb3197eb4d65b8b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjRlNGMzMDFiNGZjMDlhMGNmZDcyNDExNWJiMzE5N2ViNGQ2NWI4Yg==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2009-01-06T15:11:04Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2009-01-06T15:11:04Z"}, "message": "i386.md (*msabi_syvabi): Add SSE regs clobbers.\n\n\n\t* i386.md (*msabi_syvabi): Add SSE regs clobbers.\n\t* i386.c (ix86_expand_call): Add clobbers.\n\nCo-Authored-By: Kai Tietz <kai.tietz@onevision.com>\n\nFrom-SVN: r143120", "tree": {"sha": "7e089f6dd4641861da784a2790701baa0942039b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7e089f6dd4641861da784a2790701baa0942039b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/64e4c301b4fc09a0cfd724115bb3197eb4d65b8b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/64e4c301b4fc09a0cfd724115bb3197eb4d65b8b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/64e4c301b4fc09a0cfd724115bb3197eb4d65b8b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/64e4c301b4fc09a0cfd724115bb3197eb4d65b8b/comments", "author": null, "committer": null, "parents": [{"sha": "7650b83e78f13f3e7a7ffd4b1d7d0fdd48bc2592", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7650b83e78f13f3e7a7ffd4b1d7d0fdd48bc2592", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7650b83e78f13f3e7a7ffd4b1d7d0fdd48bc2592"}], "stats": {"total": 59, "additions": 54, "deletions": 5}, "files": [{"sha": "1f7d286492c4a134c48bf34eeb2292a239de2fdf", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64e4c301b4fc09a0cfd724115bb3197eb4d65b8b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64e4c301b4fc09a0cfd724115bb3197eb4d65b8b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=64e4c301b4fc09a0cfd724115bb3197eb4d65b8b", "patch": "@@ -1,3 +1,9 @@\n+2009-01-06  Jan Hubicka  <jh@suse.cz>\n+\t    Kai Tietz <kai.tietz@onevision.com>\n+\n+\t* i386.md (*msabi_syvabi): Add SSE regs clobbers.\n+\t* i386.c (ix86_expand_call): Add clobbers.\n+\n 2009-01-06  Jan Hubicka  <jh@suse.cz>\n \t    Kai Tietz <kai.tietz@onevision.com>\n "}, {"sha": "91af83a87b7db4578b56daad2a445ca99d1aebf6", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 18, "deletions": 5, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64e4c301b4fc09a0cfd724115bb3197eb4d65b8b/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64e4c301b4fc09a0cfd724115bb3197eb4d65b8b/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=64e4c301b4fc09a0cfd724115bb3197eb4d65b8b", "patch": "@@ -18501,16 +18501,29 @@ ix86_expand_call (rtx retval, rtx fnaddr, rtx callarg1,\n       call = gen_rtx_PARALLEL (VOIDmode, gen_rtvec (2, call, pop));\n       gcc_assert (ix86_cfun_abi () != MS_ABI || function_call_abi != SYSV_ABI);\n     }\n-  /* We need to represent that SI and DI registers are clobbered by SYSV calls.\n-     */\n+  /* We need to represent that SI and DI registers are clobbered\n+     by SYSV calls.  */\n   if (ix86_cfun_abi () == MS_ABI && function_call_abi == SYSV_ABI)\n     {\n-      rtx clobber1 = gen_rtx_CLOBBER (DImode, gen_rtx_REG (DImode, SI_REG));\n-      rtx clobber2 = gen_rtx_CLOBBER (DImode, gen_rtx_REG (DImode, DI_REG));\n+      static int clobbered_registers[] ={27, 28, 45, 46, 47, 48, 49, 50, 51, 52, SI_REG, DI_REG};\n+      static const int nclobbered_registers = sizeof (clobbered_registers) / sizeof (int);\n+      int i;\n+      rtx vec[nclobbered_registers + 2];\n       rtx unspec = gen_rtx_UNSPEC (VOIDmode, gen_rtvec (1, const0_rtx),\n       \t\t\t\t   UNSPEC_MS_TO_SYSV_CALL);\n+\n+      vec[0] = call;\n+      vec[1] = unspec;\n+      for (i = 0; i < nclobbered_registers; i++)\n+        vec[i + 2] = gen_rtx_CLOBBER (SSE_REGNO_P (clobbered_registers[i])\n+\t\t\t\t      ? TImode : DImode,\n+\t\t\t\t      gen_rtx_REG\n+\t\t\t\t        (SSE_REGNO_P (clobbered_registers[i])\n+\t\t\t\t\t\t      ? TImode : DImode,\n+\t\t\t\t\t clobbered_registers[i]));\n+\n       call = gen_rtx_PARALLEL (VOIDmode,\n-      \t\t\t       gen_rtvec (4, call, unspec, clobber1, clobber2));\n+      \t\t\t       gen_rtvec_v (nclobbered_registers + 2, vec));\n     }\n \n   call = emit_call_insn (call);"}, {"sha": "0569f0413a84a7e61f0b0ae5fab8b4fec9c36cc4", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64e4c301b4fc09a0cfd724115bb3197eb4d65b8b/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64e4c301b4fc09a0cfd724115bb3197eb4d65b8b/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=64e4c301b4fc09a0cfd724115bb3197eb4d65b8b", "patch": "@@ -15043,6 +15043,16 @@\n   [(call (mem:QI (match_operand:DI 0 \"call_insn_operand\" \"rsm\"))\n \t (match_operand 1 \"\" \"\"))\n    (unspec [(const_int 0)] UNSPEC_MS_TO_SYSV_CALL)\n+   (clobber (reg:TI 27))\n+   (clobber (reg:TI 28))\n+   (clobber (reg:TI 45))\n+   (clobber (reg:TI 46))\n+   (clobber (reg:TI 47))\n+   (clobber (reg:TI 48))\n+   (clobber (reg:TI 49))\n+   (clobber (reg:TI 50))\n+   (clobber (reg:TI 51))\n+   (clobber (reg:TI 52))\n    (clobber (reg:DI SI_REG))\n    (clobber (reg:DI DI_REG))]\n   \"!SIBLING_CALL_P (insn) && TARGET_64BIT\"\n@@ -21380,6 +21390,16 @@\n \t(call (mem:QI (match_operand:DI 1 \"constant_call_address_operand\" \"\"))\n \t      (match_operand:DI 2 \"const_int_operand\" \"\")))\n    (unspec [(const_int 0)] UNSPEC_MS_TO_SYSV_CALL)\n+   (clobber (reg:TI 27))\n+   (clobber (reg:TI 28))\n+   (clobber (reg:TI 45))\n+   (clobber (reg:TI 46))\n+   (clobber (reg:TI 47))\n+   (clobber (reg:TI 48))\n+   (clobber (reg:TI 49))\n+   (clobber (reg:TI 50))\n+   (clobber (reg:TI 51))\n+   (clobber (reg:TI 52))\n    (clobber (reg:DI SI_REG))\n    (clobber (reg:DI DI_REG))]\n   \"!SIBLING_CALL_P (insn) && TARGET_64BIT\"\n@@ -21433,6 +21453,16 @@\n \t(call (mem:QI (match_operand:DI 1 \"call_insn_operand\" \"rsm\"))\n \t      (match_operand:DI 2 \"\" \"\")))\n    (unspec [(const_int 0)] UNSPEC_MS_TO_SYSV_CALL)\n+   (clobber (reg:TI 27))\n+   (clobber (reg:TI 28))\n+   (clobber (reg:TI 45))\n+   (clobber (reg:TI 46))\n+   (clobber (reg:TI 47))\n+   (clobber (reg:TI 48))\n+   (clobber (reg:TI 49))\n+   (clobber (reg:TI 50))\n+   (clobber (reg:TI 51))\n+   (clobber (reg:TI 52))\n    (clobber (reg:DI SI_REG))\n    (clobber (reg:DI DI_REG))]\n   \"!SIBLING_CALL_P (insn) && TARGET_64BIT\""}]}