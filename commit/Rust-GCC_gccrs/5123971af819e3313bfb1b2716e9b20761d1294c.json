{"sha": "5123971af819e3313bfb1b2716e9b20761d1294c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTEyMzk3MWFmODE5ZTMzMTNiZmIxYjI3MTZlOWIyMDc2MWQxMjk0Yw==", "commit": {"author": {"name": "Michael Koch", "email": "konqueror@gmx.de", "date": "2004-09-10T07:20:09Z"}, "committer": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2004-09-10T07:20:09Z"}, "message": "2004-09-10  Michael Koch  <konqueror@gmx.de>\n\n\t* gnu/java/net/protocol/file/Connection.java\n\t(lineSeparator): Made non-final.\n\t(static): Removed.\n\t(connect): Initialize lineSeparator lazily. Use ByteArrayInputStream\n\tinstead of StringBufferInputStream.\n\n2004-09-10  Michael Koch  <konqueror@gmx.de>\n\n\t* gnu/java/net/protocol/file/Connection.java\n\t(connect): Handle file is a directory case.\n\nFrom-SVN: r87279", "tree": {"sha": "2dc2c92bfb5a29c5540665d078ae4133504aab06", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2dc2c92bfb5a29c5540665d078ae4133504aab06"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5123971af819e3313bfb1b2716e9b20761d1294c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5123971af819e3313bfb1b2716e9b20761d1294c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5123971af819e3313bfb1b2716e9b20761d1294c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5123971af819e3313bfb1b2716e9b20761d1294c/comments", "author": null, "committer": null, "parents": [{"sha": "456d47b390e757c7eaed61f69a88f836d8896edc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/456d47b390e757c7eaed61f69a88f836d8896edc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/456d47b390e757c7eaed61f69a88f836d8896edc"}], "stats": {"total": 59, "additions": 53, "deletions": 6}, "files": [{"sha": "2ad07335bd2a0091d247d38bf274cf6755939b09", "filename": "libjava/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5123971af819e3313bfb1b2716e9b20761d1294c/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5123971af819e3313bfb1b2716e9b20761d1294c/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=5123971af819e3313bfb1b2716e9b20761d1294c", "patch": "@@ -1,3 +1,16 @@\n+2004-09-10  Michael Koch  <konqueror@gmx.de>\n+\n+\t* gnu/java/net/protocol/file/Connection.java\n+\t(lineSeparator): Made non-final.\n+\t(static): Removed.\n+\t(connect): Initialize lineSeparator lazily. Use ByteArrayInputStream\n+\tinstead of StringBufferInputStream.\n+\n+2004-09-10  Michael Koch  <konqueror@gmx.de>\n+\n+\t* gnu/java/net/protocol/file/Connection.java\n+\t(connect): Handle file is a directory case.\n+\n 2004-09-10  Michael Koch  <konqueror@gmx.de>\n \n \t* Makefile.am"}, {"sha": "3927130101b84752843c809537f12c12a0795ec4", "filename": "libjava/gnu/java/net/protocol/file/Connection.java", "status": "modified", "additions": 40, "deletions": 6, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5123971af819e3313bfb1b2716e9b20761d1294c/libjava%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Ffile%2FConnection.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5123971af819e3313bfb1b2716e9b20761d1294c/libjava%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Ffile%2FConnection.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Ffile%2FConnection.java?ref=5123971af819e3313bfb1b2716e9b20761d1294c", "patch": "@@ -37,8 +37,11 @@\n \n package gnu.java.net.protocol.file;\n \n+import gnu.java.security.action.GetPropertyAction;\n+\n import java.io.BufferedInputStream;\n import java.io.BufferedOutputStream;\n+import java.io.ByteArrayInputStream;\n import java.io.File;\n import java.io.FileInputStream;\n import java.io.FileOutputStream;\n@@ -50,6 +53,7 @@\n import java.net.URL;\n import java.net.URLConnection;\n import java.security.Permission;\n+import java.security.AccessController;\n import java.text.SimpleDateFormat;\n import java.util.Date;\n import java.util.Locale;\n@@ -71,6 +75,8 @@ public class Connection extends URLConnection\n     = new SimpleDateFormat(\"EEE, dd MMM yyyy hh:mm:ss 'GMT'\",\n                            new Locale (\"En\", \"Us\", \"Unix\"));\n \n+  private static String lineSeparator;\n+  \n   /**\n    * This is a File object for this connection\n    */\n@@ -105,11 +111,38 @@ public void connect() throws IOException\n     \n     // If not connected, then file needs to be openned.\n     file = new File (getURL().getFile());\n-    if (doInput)\n-      inputStream = new BufferedInputStream(new FileInputStream(file));\n+\n+    if (! file.isDirectory())\n+      {\n+\tif (doInput)\n+\t  inputStream = new BufferedInputStream(new FileInputStream(file));\n     \n-    if (doOutput)\n-      outputStream = new BufferedOutputStream(new FileOutputStream(file));\n+\tif (doOutput)\n+\t  outputStream = new BufferedOutputStream(new FileOutputStream(file));\n+      }\n+    else\n+      {\n+\tif (doInput)\n+\t  {\n+\t    if (lineSeparator == null)\n+\t      {\n+\t\tGetPropertyAction getProperty = new GetPropertyAction(\"line.separator\");\n+\t\tlineSeparator = (String) AccessController.doPrivileged(getProperty);\n+\t      }\n+\t    \n+\t    StringBuffer sb = new StringBuffer();\n+\t    String[] files = file.list();\n+\n+\t    for (int index = 0; index < files.length; ++index)\n+\t       sb.append(files[index]).append(lineSeparator);\n+\n+\t    inputStream = new ByteArrayInputStream(sb.toString().getBytes());\n+\t  }\n+\n+\tif (doOutput)\n+\t  throw new ProtocolException\n+\t    (\"file: protocol does not support output on directories\");\n+      }\n     \n     connected = true;\n   }\n@@ -184,6 +217,7 @@ else if (field.equals(\"last-modified\"))\n \n   /**\n    * Get the length of content.\n+   *\n    * @return the length of the content.\n    */\n   public int getContentLength()\n@@ -212,15 +246,15 @@ public long getLastModified()\n       {\n \tif (!connected)\n \t  connect();\n-\n+        \n \treturn file.lastModified();\n       }\n     catch (IOException e)\n       {\n \treturn -1;\n       }\n   }\n-\n+  \n   /**\n    * This method returns a <code>Permission</code> object representing the\n    * permissions required to access this URL.  This method returns a"}]}