{"sha": "dcb957d9dc7d26f686aefc1345e6318284da7a8a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGNiOTU3ZDlkYzdkMjZmNjg2YWVmYzEzNDVlNjMxODI4NGRhN2E4YQ==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2007-06-30T22:01:30Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2007-06-30T22:01:30Z"}, "message": "configure.ac: Check for .gnu_attribute on MIPS.\n\n\t* configure.ac: Check for .gnu_attribute on MIPS.\n\t* configure, config.in: Regenerate.\n\t* config/mips/mips.c (mips_file_start): If supported, output\n\tattribute for floating-point ABI.\n\nFrom-SVN: r126157", "tree": {"sha": "5793a0fcb7aa717563d22023f4f092e73a1c855d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5793a0fcb7aa717563d22023f4f092e73a1c855d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dcb957d9dc7d26f686aefc1345e6318284da7a8a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dcb957d9dc7d26f686aefc1345e6318284da7a8a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dcb957d9dc7d26f686aefc1345e6318284da7a8a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dcb957d9dc7d26f686aefc1345e6318284da7a8a/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "81c3e25a406b4a132c67ed93b8bbbc0ecf9caca5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/81c3e25a406b4a132c67ed93b8bbbc0ecf9caca5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/81c3e25a406b4a132c67ed93b8bbbc0ecf9caca5"}], "stats": {"total": 61, "additions": 61, "deletions": 0}, "files": [{"sha": "c8f71eeb1a64516bcb8fb01d1da3965f14c23d00", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dcb957d9dc7d26f686aefc1345e6318284da7a8a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dcb957d9dc7d26f686aefc1345e6318284da7a8a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=dcb957d9dc7d26f686aefc1345e6318284da7a8a", "patch": "@@ -1,3 +1,10 @@\n+2007-06-30  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* configure.ac: Check for .gnu_attribute on MIPS.\n+\t* configure, config.in: Regenerate.\n+\t* config/mips/mips.c (mips_file_start): If supported, output\n+\tattribute for floating-point ABI.\n+\n 2007-06-30  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR target/32433"}, {"sha": "e5faa7a51889dd267d3025ef866bad01c75d01b5", "filename": "gcc/config.in", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dcb957d9dc7d26f686aefc1345e6318284da7a8a/gcc%2Fconfig.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dcb957d9dc7d26f686aefc1345e6318284da7a8a/gcc%2Fconfig.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.in?ref=dcb957d9dc7d26f686aefc1345e6318284da7a8a", "patch": "@@ -210,6 +210,12 @@\n #endif\n \n \n+/* Define if your assembler supports .gnu_attribute. */\n+#ifndef USED_FOR_TARGET\n+#undef HAVE_AS_GNU_ATTRIBUTE\n+#endif\n+\n+\n /* Define true if the assembler supports '.long foo@GOTOFF'. */\n #ifndef USED_FOR_TARGET\n #undef HAVE_AS_GOTOFF_IN_DATA"}, {"sha": "a675499596ceeddba1ac84dcd2a76f5be7673f06", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dcb957d9dc7d26f686aefc1345e6318284da7a8a/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dcb957d9dc7d26f686aefc1345e6318284da7a8a/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=dcb957d9dc7d26f686aefc1345e6318284da7a8a", "patch": "@@ -6010,6 +6010,11 @@ mips_file_start (void)\n \n   if (!TARGET_IRIX)\n     {\n+#ifdef HAVE_AS_GNU_ATTRIBUTE\n+      fprintf (asm_out_file, \"\\t.gnu_attribute 4, %d\\n\",\n+\t       TARGET_HARD_FLOAT_ABI ? (TARGET_DOUBLE_FLOAT ? 1 : 2) : 3);\n+#endif\n+\n       /* Generate a special section to describe the ABI switches used to\n \t produce the resultant binary.  This used to be done by the assembler\n \t setting bits in the ELF header's flags field, but we have run out of"}, {"sha": "68f8ed6e425c1a4ddf83fd0834675aef789ce880", "filename": "gcc/configure", "status": "modified", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dcb957d9dc7d26f686aefc1345e6318284da7a8a/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dcb957d9dc7d26f686aefc1345e6318284da7a8a/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=dcb957d9dc7d26f686aefc1345e6318284da7a8a", "patch": "@@ -15832,6 +15832,43 @@ cat >>confdefs.h <<\\_ACEOF\n #define HAVE_AS_NO_SHARED 1\n _ACEOF\n \n+fi\n+\n+    echo \"$as_me:$LINENO: checking assembler for .gnu_attribute support\" >&5\n+echo $ECHO_N \"checking assembler for .gnu_attribute support... $ECHO_C\" >&6\n+if test \"${gcc_cv_as_mips_gnu_attribute+set}\" = set; then\n+  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n+else\n+  gcc_cv_as_mips_gnu_attribute=no\n+    if test $in_tree_gas = yes; then\n+    if test $gcc_cv_gas_vers -ge `expr \\( \\( 2 \\* 1000 \\) + 18 \\) \\* 1000 + 0`\n+  then gcc_cv_as_mips_gnu_attribute=yes\n+fi\n+  elif test x$gcc_cv_as != x; then\n+    echo '.gnu_attribute 4,1' > conftest.s\n+    if { ac_try='$gcc_cv_as  -o conftest.o conftest.s >&5'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; }\n+    then\n+\tgcc_cv_as_mips_gnu_attribute=yes\n+    else\n+      echo \"configure: failed program was\" >&5\n+      cat conftest.s >&5\n+    fi\n+    rm -f conftest.o conftest.s\n+  fi\n+fi\n+echo \"$as_me:$LINENO: result: $gcc_cv_as_mips_gnu_attribute\" >&5\n+echo \"${ECHO_T}$gcc_cv_as_mips_gnu_attribute\" >&6\n+if test $gcc_cv_as_mips_gnu_attribute = yes; then\n+\n+cat >>confdefs.h <<\\_ACEOF\n+#define HAVE_AS_GNU_ATTRIBUTE 1\n+_ACEOF\n+\n fi\n     ;;\n esac"}, {"sha": "3e0f53adbec0821163c0afe2634d2d5c089dda0e", "filename": "gcc/configure.ac", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dcb957d9dc7d26f686aefc1345e6318284da7a8a/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dcb957d9dc7d26f686aefc1345e6318284da7a8a/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=dcb957d9dc7d26f686aefc1345e6318284da7a8a", "patch": "@@ -2943,6 +2943,12 @@ LCF0:\n       gcc_cv_as_mips_no_shared, [2,16,0], [-mno-shared], [nop],,\n       [AC_DEFINE(HAVE_AS_NO_SHARED, 1,\n \t\t [Define if the assembler understands -mno-shared.])])\n+\n+    gcc_GAS_CHECK_FEATURE([.gnu_attribute support],\n+      gcc_cv_as_mips_gnu_attribute, [2,18,0],,\n+      [.gnu_attribute 4,1],,\n+      [AC_DEFINE(HAVE_AS_GNU_ATTRIBUTE, 1,\n+\t  [Define if your assembler supports .gnu_attribute.])])\n     ;;\n esac\n "}]}