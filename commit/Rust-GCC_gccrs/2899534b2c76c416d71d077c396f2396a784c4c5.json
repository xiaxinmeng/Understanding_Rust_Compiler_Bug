{"sha": "2899534b2c76c416d71d077c396f2396a784c4c5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mjg5OTUzNGIyYzc2YzQxNmQ3MWQwNzdjMzk2ZjIzOTZhNzg0YzRjNQ==", "commit": {"author": {"name": "Nicola Pero", "email": "nicola.pero@meta-innovation.com", "date": "2010-12-19T13:40:16Z"}, "committer": {"name": "Nicola Pero", "email": "nicola@gcc.gnu.org", "date": "2010-12-19T13:40:16Z"}, "message": "In libobjc/: 2010-12-19 Nicola Pero <nicola.pero@meta-innovation.com>\n\nIn libobjc/:\n2010-12-19  Nicola Pero  <nicola.pero@meta-innovation.com>\n\n\t* objc/encoding.h: Updated comments.\n\t* objc/runtime.h: Updated comments.\n\t(objc_setGetUnknownClassHandler): Mark with objc_EXPORT.\n\t(objc_sizeof_type): Same.\n\t(objc_alignof_type): Same.\n\t(objc_aligned_size): Same.\n\t(objc_promoted_size): Same.\n\t(objc_skip_type_qualifiers): Same.\n\t(objc_skip_typespec): Same.\n\t(objc_skip_offset): Same.\n\t(objc_skip_argspec): Same.\n\t(objc_get_type_qualifiers): Same.\n\t(objc_layout_structure): Same.\n\t(objc_layout_structure_next_member): Same.\n\t(objc_layout_finish_structure): Same.\n\t(objc_layout_structure_get_info): Same.\n\nFrom-SVN: r168051", "tree": {"sha": "cd479bee4a6e5fdacbb1bc51fc317ee5038c41ca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cd479bee4a6e5fdacbb1bc51fc317ee5038c41ca"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2899534b2c76c416d71d077c396f2396a784c4c5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2899534b2c76c416d71d077c396f2396a784c4c5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2899534b2c76c416d71d077c396f2396a784c4c5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2899534b2c76c416d71d077c396f2396a784c4c5/comments", "author": {"login": "Nico-31415", "id": 94470564, "node_id": "U_kgDOBaGBpA", "avatar_url": "https://avatars.githubusercontent.com/u/94470564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nico-31415", "html_url": "https://github.com/Nico-31415", "followers_url": "https://api.github.com/users/Nico-31415/followers", "following_url": "https://api.github.com/users/Nico-31415/following{/other_user}", "gists_url": "https://api.github.com/users/Nico-31415/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nico-31415/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nico-31415/subscriptions", "organizations_url": "https://api.github.com/users/Nico-31415/orgs", "repos_url": "https://api.github.com/users/Nico-31415/repos", "events_url": "https://api.github.com/users/Nico-31415/events{/privacy}", "received_events_url": "https://api.github.com/users/Nico-31415/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a6fed83ffa62aa01d7add21c9d2b36ba12efb731", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6fed83ffa62aa01d7add21c9d2b36ba12efb731", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a6fed83ffa62aa01d7add21c9d2b36ba12efb731"}], "stats": {"total": 74, "additions": 48, "deletions": 26}, "files": [{"sha": "1bb60816b79293c07008353b58a2cf6650eb8bc1", "filename": "libobjc/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2899534b2c76c416d71d077c396f2396a784c4c5/libobjc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2899534b2c76c416d71d077c396f2396a784c4c5/libobjc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2FChangeLog?ref=2899534b2c76c416d71d077c396f2396a784c4c5", "patch": "@@ -1,3 +1,22 @@\n+2010-12-19  Nicola Pero  <nicola.pero@meta-innovation.com>\n+\n+\t* objc/encoding.h: Updated comments.\n+\t* objc/runtime.h: Updated comments.\n+\t(objc_setGetUnknownClassHandler): Mark with objc_EXPORT.\n+\t(objc_sizeof_type): Same.\n+\t(objc_alignof_type): Same.\n+\t(objc_aligned_size): Same.\n+\t(objc_promoted_size): Same.\n+\t(objc_skip_type_qualifiers): Same.\n+\t(objc_skip_typespec): Same.\n+\t(objc_skip_offset): Same.\n+\t(objc_skip_argspec): Same.\n+\t(objc_get_type_qualifiers): Same.\n+\t(objc_layout_structure): Same.\n+\t(objc_layout_structure_next_member): Same.\n+\t(objc_layout_finish_structure): Same.\n+\t(objc_layout_structure_get_info): Same.\n+\t\n 2010-12-19  Nicola Pero  <nicola.pero@meta-innovation.com>\n \n \t* init.c: Updated comments."}, {"sha": "6d98a390aa3838190d9ec59563e6b09a15db8d4f", "filename": "libobjc/objc/encoding.h", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2899534b2c76c416d71d077c396f2396a784c4c5/libobjc%2Fobjc%2Fencoding.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2899534b2c76c416d71d077c396f2396a784c4c5/libobjc%2Fobjc%2Fencoding.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2Fobjc%2Fencoding.h?ref=2899534b2c76c416d71d077c396f2396a784c4c5", "patch": "@@ -31,8 +31,7 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n /* This file is to be used with the \"traditional\" GNU Objective-C\n    Runtime API (the one declared in objc/objc-api.h).  If you are\n    using the \"modern\" GNU Objective-C Runtime API, then the useful\n-   functions from this file are declared in objc/runtime.h.\n-*/\n+   functions from this file are declared in objc/runtime.h.  */\n \n #include \"objc-api.h\"\n #include <ctype.h>\n@@ -71,9 +70,15 @@ const char *objc_skip_type_qualifiers (const char *type);\n const char *objc_skip_typespec (const char *type);\n const char *objc_skip_offset (const char *type);\n const char *objc_skip_argspec (const char *type);\n+unsigned objc_get_type_qualifiers (const char *type);\n+\n+/* The following functions are replaced, in the modern API, by\n+   method_getNumberOfArguments(), method_getArgumentType().  */\n int method_get_number_of_arguments (struct objc_method *);\n int method_get_sizeof_arguments (struct objc_method *);\n \n+/* The following functions are deprecated and they use arglist_t which\n+   is deprecated.  */\n char *method_get_first_argument (struct objc_method *,\n \t\t\t\t arglist_t argframe, \n \t\t\t\t const char **type);\n@@ -84,10 +89,7 @@ char *method_get_nth_argument (struct objc_method *m,\n \t\t\t       int arg, \n \t\t\t       const char **type);\n \n-unsigned objc_get_type_qualifiers (const char *type);\n-\n-\n-struct objc_struct_layout \n+struct objc_struct_layout\n {\n   const char *original_type;\n   const char *type;"}, {"sha": "5f0274e109a83633745453e0877d471c595e2ff6", "filename": "libobjc/objc/runtime.h", "status": "modified", "additions": 21, "deletions": 20, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2899534b2c76c416d71d077c396f2396a784c4c5/libobjc%2Fobjc%2Fruntime.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2899534b2c76c416d71d077c396f2396a784c4c5/libobjc%2Fobjc%2Fruntime.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2Fobjc%2Fruntime.h?ref=2899534b2c76c416d71d077c396f2396a784c4c5", "patch": "@@ -410,6 +410,7 @@ typedef Class (*objc_get_unknown_class_handler)(const char *class_name);\n    This function is not safe to call in a multi-threaded environment\n    because other threads may be trying to use the get unknown class\n    handler while you change it!  */\n+objc_EXPORT \n objc_get_unknown_class_handler\n objc_setGetUnknownClassHandler (objc_get_unknown_class_handler new_handler);\n \n@@ -971,21 +972,21 @@ objc_EXPORT void objc_free(void *mem);\n \n /* Return the size of a variable which has the specified 'type'\n    encoding.  */\n-int objc_sizeof_type (const char *type);\n+objc_EXPORT int objc_sizeof_type (const char *type);\n \n /* Return the align of a variable which has the specified 'type'\n    encoding.  */\n-int objc_alignof_type (const char *type);\n+objc_EXPORT int objc_alignof_type (const char *type);\n \n /* Return the aligned size of a variable which has the specified\n    'type' encoding.  The aligned size is the size rounded up to the\n    nearest alignment.  */\n-int objc_aligned_size (const char *type);\n+objc_EXPORT int objc_aligned_size (const char *type);\n \n /* Return the promoted size of a variable which has the specified\n    'type' encoding.  This is the size rounded up to the nearest\n    integral of the wordsize, taken to be the size of a void *.  */\n-int objc_promoted_size (const char *type);\n+objc_EXPORT int objc_promoted_size (const char *type);\n \n \n /* The following functions are used when parsing the type encoding of\n@@ -998,30 +999,30 @@ int objc_promoted_size (const char *type);\n /* Skip some type qualifiers (_C_CONST, _C_IN, etc).  These may\n   eventually precede typespecs occurring in method prototype\n   encodings.  */\n-const char *objc_skip_type_qualifiers (const char *type);\n+objc_EXPORT const char *objc_skip_type_qualifiers (const char *type);\n \n /* Skip one typespec element (_C_CLASS, _C_SEL, etc).  If the typespec\n   is prepended by type qualifiers, these are skipped as well.  */\n-const char *objc_skip_typespec (const char *type);\n+objc_EXPORT const char *objc_skip_typespec (const char *type);\n \n /* Skip an offset.  */\n-const char *objc_skip_offset (const char *type);\n+objc_EXPORT const char *objc_skip_offset (const char *type);\n \n /* Skip an argument specification (ie, skipping a typespec, which may\n    include qualifiers, and an offset too).  */\n-const char *objc_skip_argspec (const char *type);\n+objc_EXPORT const char *objc_skip_argspec (const char *type);\n \n /* Read type qualifiers (_C_CONST, _C_IN, etc) from string 'type'\n    (stopping at the first non-type qualifier found) and return an\n    unsigned int which is the logical OR of all the corresponding flags\n    (_F_CONST, _F_IN etc).  */\n-unsigned objc_get_type_qualifiers (const char *type);\n+objc_EXPORT unsigned objc_get_type_qualifiers (const char *type);\n \n \n /* Note that the following functions work for very simple structures,\n    but get easily confused by more complicated ones (for example,\n-   containing vectors).  A better solution is required.\n-*/\n+   containing vectors).  A better solution is required.  These\n+   functions are likely to change in the next GCC release.  */\n \n /* The following three functions can be used to determine how a\n    structure is laid out by the compiler. For example:\n@@ -1054,16 +1055,16 @@ struct objc_struct_layout\n   unsigned int record_align;\n };\n \n-void objc_layout_structure (const char *type,\n+objc_EXPORT void objc_layout_structure (const char *type,\n                             struct objc_struct_layout *layout);\n-BOOL  objc_layout_structure_next_member (struct objc_struct_layout *layout);\n-void objc_layout_finish_structure (struct objc_struct_layout *layout,\n-                                   unsigned int *size,\n-                                   unsigned int *align);\n-void objc_layout_structure_get_info (struct objc_struct_layout *layout,\n-                                     unsigned int *offset,\n-                                     unsigned int *align,\n-                                     const char **type);\n+objc_EXPORT BOOL  objc_layout_structure_next_member (struct objc_struct_layout *layout);\n+objc_EXPORT void objc_layout_finish_structure (struct objc_struct_layout *layout,\n+\t\t\t\t\t       unsigned int *size,\n+\t\t\t\t\t       unsigned int *align);\n+objc_EXPORT void objc_layout_structure_get_info (struct objc_struct_layout *layout,\n+\t\t\t\t\t\t unsigned int *offset,\n+\t\t\t\t\t\t unsigned int *align,\n+\t\t\t\t\t\t const char **type);\n \n #ifdef __cplusplus\n }"}]}