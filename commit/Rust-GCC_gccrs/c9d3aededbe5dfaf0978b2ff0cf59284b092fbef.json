{"sha": "c9d3aededbe5dfaf0978b2ff0cf59284b092fbef", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzlkM2FlZGVkYmU1ZGZhZjA5NzhiMmZmMGNmNTkyODRiMDkyZmJlZg==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@kss-loka.si", "date": "2005-04-05T05:23:14Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2005-04-05T05:23:14Z"}, "message": "re PR target/20421 (387 mode switching clobbers flags)\n\n\tPR target/20421\n\t* config/i386/i386.md (frndintxf2_floor, frndintxf2_ceil)\n\t(frndintxf2_trunc, frndintxf2_mask_pm): Add FLAGS_REG clobber.\n\tAllocate local stack slots here.  Set ix86_optimize_mode_switching.\n\tflag here. Implement using define_insn_and_split.\n\t(frndintxf2_floor_i387, frndintxf2_ceil_i387, frndintxf2_trunc_i387)\n\t(frndintxf2_mask_pm_i387): New insn patterns.\n\t(floorsf2, floordf2, floorxf2): Remove local stack slot allocations.\n\tDo not set ix86_optimize_mode_switching flag.\n\t(ceilsf2, ceildf2, ceilxf2): Same.\n\t(btruncsf2, btruncdf2, btruncxf2): Same.\n\t(nearbyintsf2, nearbyintdf2, nearbyintxf2): Same.\n\nFrom-SVN: r97604", "tree": {"sha": "b6538ba455f8b329a4f7b2840d60e0bdf7914ba5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b6538ba455f8b329a4f7b2840d60e0bdf7914ba5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c9d3aededbe5dfaf0978b2ff0cf59284b092fbef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9d3aededbe5dfaf0978b2ff0cf59284b092fbef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c9d3aededbe5dfaf0978b2ff0cf59284b092fbef", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9d3aededbe5dfaf0978b2ff0cf59284b092fbef/comments", "author": null, "committer": null, "parents": [{"sha": "3ce9c82463e3066170e8d8d4177f785e83537966", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ce9c82463e3066170e8d8d4177f785e83537966", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3ce9c82463e3066170e8d8d4177f785e83537966"}], "stats": {"total": 241, "additions": 154, "deletions": 87}, "files": [{"sha": "9f3a372f713331a073f0408e7d690573c2a542b3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9d3aededbe5dfaf0978b2ff0cf59284b092fbef/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9d3aededbe5dfaf0978b2ff0cf59284b092fbef/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c9d3aededbe5dfaf0978b2ff0cf59284b092fbef", "patch": "@@ -1,3 +1,18 @@\n+2005-04-05 Uros Bizjak <uros@kss-loka.si>\n+\n+\tPR target/20421\n+\t* config/i386/i386.md (frndintxf2_floor, frndintxf2_ceil)\n+\t(frndintxf2_trunc, frndintxf2_mask_pm): Add FLAGS_REG clobber.\n+\tAllocate local stack slots here.  Set ix86_optimize_mode_switching.\n+\tflag here. Implement using define_insn_and_split.  \n+\t(frndintxf2_floor_i387, frndintxf2_ceil_i387, frndintxf2_trunc_i387)\n+\t(frndintxf2_mask_pm_i387): New insn patterns.\n+\t(floorsf2, floordf2, floorxf2): Remove local stack slot allocations.\n+\tDo not set ix86_optimize_mode_switching flag.\n+\t(ceilsf2, ceildf2, ceilxf2): Same.\n+\t(btruncsf2, btruncdf2, btruncxf2): Same.\n+\t(nearbyintsf2, nearbyintdf2, nearbyintxf2): Same.\n+\n 2005-04-05  Ian Lance Taylor  <ian@airs.com>\n \n \tPR debug/9963"}, {"sha": "6c5962bdec4c45064055a2216379f46f913b8c63", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 139, "deletions": 87, "changes": 226, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9d3aededbe5dfaf0978b2ff0cf59284b092fbef/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9d3aededbe5dfaf0978b2ff0cf59284b092fbef/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=c9d3aededbe5dfaf0978b2ff0cf59284b092fbef", "patch": "@@ -16367,7 +16367,33 @@\n   DONE;\n })\n \n-(define_insn \"frndintxf2_floor\"\n+;; Rounding mode control word calculation could clobber FLAGS_REG.\n+(define_insn_and_split \"frndintxf2_floor\"\n+  [(set (match_operand:XF 0 \"register_operand\" \"=f\")\n+\t(unspec:XF [(match_operand:XF 1 \"register_operand\" \"0\")]\n+\t UNSPEC_FRNDINT_FLOOR))\n+   (clobber (reg:CC FLAGS_REG))]\n+  \"TARGET_USE_FANCY_MATH_387\n+   && flag_unsafe_math_optimizations\n+   && !(reload_completed || reload_in_progress)\"\n+  \"#\"\n+  \"&& 1\"\n+  [(const_int 0)]\n+{\n+  ix86_optimize_mode_switching = 1;\n+\n+  operands[2] = assign_386_stack_local (HImode, 1);\n+  operands[3] = assign_386_stack_local (HImode, 2);\n+\n+  emit_insn (gen_frndintxf2_floor_i387 (operands[0], operands[1],\n+\t\t\t\t\toperands[2], operands[3]));\n+  DONE;\n+}\n+  [(set_attr \"type\" \"frndint\")\n+   (set_attr \"i387_cw\" \"floor\")\n+   (set_attr \"mode\" \"XF\")])\n+\n+(define_insn \"frndintxf2_floor_i387\"\n   [(set (match_operand:XF 0 \"register_operand\" \"=f\")\n \t(unspec:XF [(match_operand:XF 1 \"register_operand\" \"0\")]\n \t UNSPEC_FRNDINT_FLOOR))\n@@ -16380,6 +16406,16 @@\n    (set_attr \"i387_cw\" \"floor\")\n    (set_attr \"mode\" \"XF\")])\n \n+(define_expand \"floorxf2\"\n+  [(use (match_operand:XF 0 \"register_operand\" \"\"))\n+   (use (match_operand:XF 1 \"register_operand\" \"\"))]\n+  \"TARGET_USE_FANCY_MATH_387\n+   && flag_unsafe_math_optimizations\"\n+{\n+  emit_insn (gen_frndintxf2_floor (operands[0], operands[1]));\n+  DONE;\n+})\n+\n (define_expand \"floordf2\"\n   [(use (match_operand:DF 0 \"register_operand\" \"\"))\n    (use (match_operand:DF 1 \"register_operand\" \"\"))]\n@@ -16389,13 +16425,9 @@\n {\n   rtx op0 = gen_reg_rtx (XFmode);\n   rtx op1 = gen_reg_rtx (XFmode);\n-  rtx op2 = assign_386_stack_local (HImode, 1);\n-  rtx op3 = assign_386_stack_local (HImode, 2);\n-\t\n-  ix86_optimize_mode_switching = 1;\n \n   emit_insn (gen_extenddfxf2 (op1, operands[1]));\n-  emit_insn (gen_frndintxf2_floor (op0, op1, op2, op3));\n+  emit_insn (gen_frndintxf2_floor (op0, op1));\n \n   emit_insn (gen_truncxfdf2_i387_noop (operands[0], op0));\n   DONE;\n@@ -16410,34 +16442,41 @@\n {\n   rtx op0 = gen_reg_rtx (XFmode);\n   rtx op1 = gen_reg_rtx (XFmode);\n-  rtx op2 = assign_386_stack_local (HImode, 1);\n-  rtx op3 = assign_386_stack_local (HImode, 2);\n-\t\n-  ix86_optimize_mode_switching = 1;\n \n   emit_insn (gen_extendsfxf2 (op1, operands[1]));\n-  emit_insn (gen_frndintxf2_floor (op0, op1, op2, op3));\n+  emit_insn (gen_frndintxf2_floor (op0, op1));\n \n   emit_insn (gen_truncxfsf2_i387_noop (operands[0], op0));\n   DONE;\n })\n \n-(define_expand \"floorxf2\"\n-  [(use (match_operand:XF 0 \"register_operand\" \"\"))\n-   (use (match_operand:XF 1 \"register_operand\" \"\"))]\n+;; Rounding mode control word calculation could clobber FLAGS_REG.\n+(define_insn_and_split \"frndintxf2_ceil\"\n+  [(set (match_operand:XF 0 \"register_operand\" \"=f\")\n+\t(unspec:XF [(match_operand:XF 1 \"register_operand\" \"0\")]\n+\t UNSPEC_FRNDINT_CEIL))\n+   (clobber (reg:CC FLAGS_REG))]\n   \"TARGET_USE_FANCY_MATH_387\n-   && flag_unsafe_math_optimizations\"\n+   && flag_unsafe_math_optimizations\n+   && !(reload_completed || reload_in_progress)\"\n+  \"#\"\n+  \"&& 1\"\n+  [(const_int 0)]\n {\n-  rtx op2 = assign_386_stack_local (HImode, 1);\n-  rtx op3 = assign_386_stack_local (HImode, 2);\n-\t\n   ix86_optimize_mode_switching = 1;\n \n-  emit_insn (gen_frndintxf2_floor (operands[0], operands[1], op2, op3));\n+  operands[2] = assign_386_stack_local (HImode, 1);\n+  operands[3] = assign_386_stack_local (HImode, 2);\n+\n+  emit_insn (gen_frndintxf2_ceil_i387 (operands[0], operands[1],\n+\t\t\t\t       operands[2], operands[3]));\n   DONE;\n-})\n+}\n+  [(set_attr \"type\" \"frndint\")\n+   (set_attr \"i387_cw\" \"ceil\")\n+   (set_attr \"mode\" \"XF\")])\n \n-(define_insn \"frndintxf2_ceil\"\n+(define_insn \"frndintxf2_ceil_i387\"\n   [(set (match_operand:XF 0 \"register_operand\" \"=f\")\n \t(unspec:XF [(match_operand:XF 1 \"register_operand\" \"0\")]\n \t UNSPEC_FRNDINT_CEIL))\n@@ -16450,6 +16489,16 @@\n    (set_attr \"i387_cw\" \"ceil\")\n    (set_attr \"mode\" \"XF\")])\n \n+(define_expand \"ceilxf2\"\n+  [(use (match_operand:XF 0 \"register_operand\" \"\"))\n+   (use (match_operand:XF 1 \"register_operand\" \"\"))]\n+  \"TARGET_USE_FANCY_MATH_387\n+   && flag_unsafe_math_optimizations\"\n+{\n+  emit_insn (gen_frndintxf2_ceil (operands[0], operands[1]));\n+  DONE;\n+})\n+\n (define_expand \"ceildf2\"\n   [(use (match_operand:DF 0 \"register_operand\" \"\"))\n    (use (match_operand:DF 1 \"register_operand\" \"\"))]\n@@ -16459,13 +16508,9 @@\n {\n   rtx op0 = gen_reg_rtx (XFmode);\n   rtx op1 = gen_reg_rtx (XFmode);\n-  rtx op2 = assign_386_stack_local (HImode, 1);\n-  rtx op3 = assign_386_stack_local (HImode, 2);\n-\t\n-  ix86_optimize_mode_switching = 1;\n \n   emit_insn (gen_extenddfxf2 (op1, operands[1]));\n-  emit_insn (gen_frndintxf2_ceil (op0, op1, op2, op3));\n+  emit_insn (gen_frndintxf2_ceil (op0, op1));\n \n   emit_insn (gen_truncxfdf2_i387_noop (operands[0], op0));\n   DONE;\n@@ -16480,34 +16525,41 @@\n {\n   rtx op0 = gen_reg_rtx (XFmode);\n   rtx op1 = gen_reg_rtx (XFmode);\n-  rtx op2 = assign_386_stack_local (HImode, 1);\n-  rtx op3 = assign_386_stack_local (HImode, 2);\n-\t\n-  ix86_optimize_mode_switching = 1;\n \n   emit_insn (gen_extendsfxf2 (op1, operands[1]));\n-  emit_insn (gen_frndintxf2_ceil (op0, op1, op2, op3));\n+  emit_insn (gen_frndintxf2_ceil (op0, op1));\n \n   emit_insn (gen_truncxfsf2_i387_noop (operands[0], op0));\n   DONE;\n })\n \n-(define_expand \"ceilxf2\"\n-  [(use (match_operand:XF 0 \"register_operand\" \"\"))\n-   (use (match_operand:XF 1 \"register_operand\" \"\"))]\n+;; Rounding mode control word calculation could clobber FLAGS_REG.\n+(define_insn_and_split \"frndintxf2_trunc\"\n+  [(set (match_operand:XF 0 \"register_operand\" \"=f\")\n+\t(unspec:XF [(match_operand:XF 1 \"register_operand\" \"0\")]\n+\t UNSPEC_FRNDINT_TRUNC))\n+   (clobber (reg:CC FLAGS_REG))]\n   \"TARGET_USE_FANCY_MATH_387\n-   && flag_unsafe_math_optimizations\"\n+   && flag_unsafe_math_optimizations\n+   && !(reload_completed || reload_in_progress)\"\n+  \"#\"\n+  \"&& 1\"\n+  [(const_int 0)]\n {\n-  rtx op2 = assign_386_stack_local (HImode, 1);\n-  rtx op3 = assign_386_stack_local (HImode, 2);\n-\t\n   ix86_optimize_mode_switching = 1;\n \n-  emit_insn (gen_frndintxf2_ceil (operands[0], operands[1], op2, op3));\n+  operands[2] = assign_386_stack_local (HImode, 1);\n+  operands[3] = assign_386_stack_local (HImode, 2);\n+\n+  emit_insn (gen_frndintxf2_trunc_i387 (operands[0], operands[1],\n+\t\t\t\t\toperands[2], operands[3]));\n   DONE;\n-})\n+}\n+  [(set_attr \"type\" \"frndint\")\n+   (set_attr \"i387_cw\" \"trunc\")\n+   (set_attr \"mode\" \"XF\")])\n \n-(define_insn \"frndintxf2_trunc\"\n+(define_insn \"frndintxf2_trunc_i387\"\n   [(set (match_operand:XF 0 \"register_operand\" \"=f\")\n \t(unspec:XF [(match_operand:XF 1 \"register_operand\" \"0\")]\n \t UNSPEC_FRNDINT_TRUNC))\n@@ -16520,6 +16572,16 @@\n    (set_attr \"i387_cw\" \"trunc\")\n    (set_attr \"mode\" \"XF\")])\n \n+(define_expand \"btruncxf2\"\n+  [(use (match_operand:XF 0 \"register_operand\" \"\"))\n+   (use (match_operand:XF 1 \"register_operand\" \"\"))]\n+  \"TARGET_USE_FANCY_MATH_387\n+   && flag_unsafe_math_optimizations\"\n+{\n+  emit_insn (gen_frndintxf2_trunc (operands[0], operands[1]));\n+  DONE;\n+})\n+\n (define_expand \"btruncdf2\"\n   [(use (match_operand:DF 0 \"register_operand\" \"\"))\n    (use (match_operand:DF 1 \"register_operand\" \"\"))]\n@@ -16529,13 +16591,9 @@\n {\n   rtx op0 = gen_reg_rtx (XFmode);\n   rtx op1 = gen_reg_rtx (XFmode);\n-  rtx op2 = assign_386_stack_local (HImode, 1);\n-  rtx op3 = assign_386_stack_local (HImode, 2);\n-\t\n-  ix86_optimize_mode_switching = 1;\n \n   emit_insn (gen_extenddfxf2 (op1, operands[1]));\n-  emit_insn (gen_frndintxf2_trunc (op0, op1, op2, op3));\n+  emit_insn (gen_frndintxf2_trunc (op0, op1));\n \n   emit_insn (gen_truncxfdf2_i387_noop (operands[0], op0));\n   DONE;\n@@ -16550,34 +16608,41 @@\n {\n   rtx op0 = gen_reg_rtx (XFmode);\n   rtx op1 = gen_reg_rtx (XFmode);\n-  rtx op2 = assign_386_stack_local (HImode, 1);\n-  rtx op3 = assign_386_stack_local (HImode, 2);\n-\t\n-  ix86_optimize_mode_switching = 1;\n \n   emit_insn (gen_extendsfxf2 (op1, operands[1]));\n-  emit_insn (gen_frndintxf2_trunc (op0, op1, op2, op3));\n+  emit_insn (gen_frndintxf2_trunc (op0, op1));\n \n   emit_insn (gen_truncxfsf2_i387_noop (operands[0], op0));\n   DONE;\n })\n \n-(define_expand \"btruncxf2\"\n-  [(use (match_operand:XF 0 \"register_operand\" \"\"))\n-   (use (match_operand:XF 1 \"register_operand\" \"\"))]\n+;; Rounding mode control word calculation could clobber FLAGS_REG.\n+(define_insn_and_split \"frndintxf2_mask_pm\"\n+  [(set (match_operand:XF 0 \"register_operand\" \"=f\")\n+\t(unspec:XF [(match_operand:XF 1 \"register_operand\" \"0\")]\n+\t UNSPEC_FRNDINT_MASK_PM))\n+   (clobber (reg:CC FLAGS_REG))]\n   \"TARGET_USE_FANCY_MATH_387\n-   && flag_unsafe_math_optimizations\"\n+   && flag_unsafe_math_optimizations\n+   && !(reload_completed || reload_in_progress)\"\n+  \"#\"\n+  \"&& 1\"\n+  [(const_int 0)]\n {\n-  rtx op2 = assign_386_stack_local (HImode, 1);\n-  rtx op3 = assign_386_stack_local (HImode, 2);\n-\t\n   ix86_optimize_mode_switching = 1;\n \n-  emit_insn (gen_frndintxf2_trunc (operands[0], operands[1], op2, op3));\n+  operands[2] = assign_386_stack_local (HImode, 1);\n+  operands[3] = assign_386_stack_local (HImode, 2);\n+\n+  emit_insn (gen_frndintxf2_mask_pm_i387 (operands[0], operands[1],\n+\t\t\t\t\t  operands[2], operands[3]));\n   DONE;\n-})\n+}\n+  [(set_attr \"type\" \"frndint\")\n+   (set_attr \"i387_cw\" \"mask_pm\")\n+   (set_attr \"mode\" \"XF\")])\n \n-(define_insn \"frndintxf2_mask_pm\"\n+(define_insn \"frndintxf2_mask_pm_i387\"\n   [(set (match_operand:XF 0 \"register_operand\" \"=f\")\n \t(unspec:XF [(match_operand:XF 1 \"register_operand\" \"0\")]\n \t UNSPEC_FRNDINT_MASK_PM))\n@@ -16590,6 +16655,17 @@\n    (set_attr \"i387_cw\" \"mask_pm\")\n    (set_attr \"mode\" \"XF\")])\n \n+(define_expand \"nearbyintxf2\"\n+  [(use (match_operand:XF 0 \"register_operand\" \"\"))\n+   (use (match_operand:XF 1 \"register_operand\" \"\"))]\n+  \"TARGET_USE_FANCY_MATH_387\n+   && flag_unsafe_math_optimizations\"\n+{\n+  emit_insn (gen_frndintxf2_mask_pm (operands[0], operands[1]));\n+\n+  DONE;\n+})\n+\n (define_expand \"nearbyintdf2\"\n   [(use (match_operand:DF 0 \"register_operand\" \"\"))\n    (use (match_operand:DF 1 \"register_operand\" \"\"))]\n@@ -16599,13 +16675,9 @@\n {\n   rtx op0 = gen_reg_rtx (XFmode);\n   rtx op1 = gen_reg_rtx (XFmode);\n-  rtx op2 = assign_386_stack_local (HImode, 1);\n-  rtx op3 = assign_386_stack_local (HImode, 2);\n-\t\n-  ix86_optimize_mode_switching = 1;\n \n   emit_insn (gen_extenddfxf2 (op1, operands[1]));\n-  emit_insn (gen_frndintxf2_mask_pm (op0, op1, op2, op3));\n+  emit_insn (gen_frndintxf2_mask_pm (op0, op1));\n \n   emit_insn (gen_truncxfdf2_i387_noop (operands[0], op0));\n   DONE;\n@@ -16620,34 +16692,14 @@\n {\n   rtx op0 = gen_reg_rtx (XFmode);\n   rtx op1 = gen_reg_rtx (XFmode);\n-  rtx op2 = assign_386_stack_local (HImode, 1);\n-  rtx op3 = assign_386_stack_local (HImode, 2);\n-\t\n-  ix86_optimize_mode_switching = 1;\n \n   emit_insn (gen_extendsfxf2 (op1, operands[1]));\n-  emit_insn (gen_frndintxf2_mask_pm (op0, op1, op2, op3));\n+  emit_insn (gen_frndintxf2_mask_pm (op0, op1));\n \n   emit_insn (gen_truncxfsf2_i387_noop (operands[0], op0));\n   DONE;\n })\n \n-(define_expand \"nearbyintxf2\"\n-  [(use (match_operand:XF 0 \"register_operand\" \"\"))\n-   (use (match_operand:XF 1 \"register_operand\" \"\"))]\n-  \"TARGET_USE_FANCY_MATH_387\n-   && flag_unsafe_math_optimizations\"\n-{\n-  rtx op2 = assign_386_stack_local (HImode, 1);\n-  rtx op3 = assign_386_stack_local (HImode, 2);\n-\t\n-  ix86_optimize_mode_switching = 1;\n-\n-  emit_insn (gen_frndintxf2_mask_pm (operands[0], operands[1],\n-\t\t\t\t     op2, op3));\n-  DONE;\n-})\n-\n \f\n ;; Block operation instructions\n "}]}