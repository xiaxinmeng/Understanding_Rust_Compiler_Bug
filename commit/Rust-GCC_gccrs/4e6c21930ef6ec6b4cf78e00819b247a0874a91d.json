{"sha": "4e6c21930ef6ec6b4cf78e00819b247a0874a91d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGU2YzIxOTMwZWY2ZWM2YjRjZjc4ZTAwODE5YjI0N2EwODc0YTkxZA==", "commit": {"author": {"name": "Bob Wilson", "email": "bob.wilson@acm.org", "date": "2007-11-02T16:06:41Z"}, "committer": {"name": "Bob Wilson", "email": "bwilson@gcc.gnu.org", "date": "2007-11-02T16:06:41Z"}, "message": "xtensa.c (xtensa_expand_prologue): Put a REG_FRAME_RELATED_EXPR note on the last insn that sets up the stack...\n\n\t* config/xtensa/xtensa.c (xtensa_expand_prologue): Put a\n\tREG_FRAME_RELATED_EXPR note on the last insn that sets up the stack\n\tpointer or frame pointer.\n\t* config/xtensa/xtensa.h (DWARF_UNWIND_INFO): Delete.\n\t(MUST_USE_SJLJ_EXCEPTIONS): Define.\n\t(DWARF2_UNWIND_INFO): Define.\n\t(INCOMING_RETURN_ADDR_RTX): Define.\n\t(DWARF_FRAME_RETURN_COLUMN): Define.\n\nFrom-SVN: r129854", "tree": {"sha": "70c6de663bedfa2a4a0e47b53e1e83fb3b6810cf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/70c6de663bedfa2a4a0e47b53e1e83fb3b6810cf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4e6c21930ef6ec6b4cf78e00819b247a0874a91d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e6c21930ef6ec6b4cf78e00819b247a0874a91d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4e6c21930ef6ec6b4cf78e00819b247a0874a91d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e6c21930ef6ec6b4cf78e00819b247a0874a91d/comments", "author": null, "committer": null, "parents": [{"sha": "f6547b681842afcc1096d804f161cb83806178c2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6547b681842afcc1096d804f161cb83806178c2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f6547b681842afcc1096d804f161cb83806178c2"}], "stats": {"total": 42, "additions": 35, "deletions": 7}, "files": [{"sha": "550e124bbed7deabce1f50dda3b275531fcd5728", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e6c21930ef6ec6b4cf78e00819b247a0874a91d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e6c21930ef6ec6b4cf78e00819b247a0874a91d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4e6c21930ef6ec6b4cf78e00819b247a0874a91d", "patch": "@@ -1,3 +1,14 @@\n+2007-11-02  Bob Wilson  <bob.wilson@acm.org>\n+\n+\t* config/xtensa/xtensa.c (xtensa_expand_prologue): Put a\n+\tREG_FRAME_RELATED_EXPR note on the last insn that sets up the stack\n+\tpointer or frame pointer.\n+\t* config/xtensa/xtensa.h (DWARF_UNWIND_INFO): Delete.\n+\t(MUST_USE_SJLJ_EXCEPTIONS): Define.\n+\t(DWARF2_UNWIND_INFO): Define.\n+\t(INCOMING_RETURN_ADDR_RTX): Define.\n+\t(DWARF_FRAME_RETURN_COLUMN): Define.\n+\n 2007-11-02  Tom Tromey  <tromey@redhat.com>\n \n \t* varpool.c (dump_varpool): Use 'next', not 'next_needed' when"}, {"sha": "77a96f28e2682547fe57af5e02b0bffe52b6f052", "filename": "gcc/config/xtensa/xtensa.c", "status": "modified", "additions": 18, "deletions": 5, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e6c21930ef6ec6b4cf78e00819b247a0874a91d/gcc%2Fconfig%2Fxtensa%2Fxtensa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e6c21930ef6ec6b4cf78e00819b247a0874a91d/gcc%2Fconfig%2Fxtensa%2Fxtensa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fxtensa%2Fxtensa.c?ref=4e6c21930ef6ec6b4cf78e00819b247a0874a91d", "patch": "@@ -2305,27 +2305,28 @@ xtensa_expand_prologue (void)\n {\n   HOST_WIDE_INT total_size;\n   rtx size_rtx;\n+  rtx insn, note_rtx;\n \n   total_size = compute_frame_size (get_frame_size ());\n   size_rtx = GEN_INT (total_size);\n \n   if (total_size < (1 << (12+3)))\n-    emit_insn (gen_entry (size_rtx, size_rtx));\n+    insn = emit_insn (gen_entry (size_rtx, size_rtx));\n   else\n     {\n       /* Use a8 as a temporary since a0-a7 may be live.  */\n       rtx tmp_reg = gen_rtx_REG (Pmode, A8_REG);\n       emit_insn (gen_entry (size_rtx, GEN_INT (MIN_FRAME_SIZE)));\n       emit_move_insn (tmp_reg, GEN_INT (total_size - MIN_FRAME_SIZE));\n       emit_insn (gen_subsi3 (tmp_reg, stack_pointer_rtx, tmp_reg));\n-      emit_move_insn (stack_pointer_rtx, tmp_reg);\n+      insn = emit_insn (gen_movsi (stack_pointer_rtx, tmp_reg));\n     }\n \n   if (frame_pointer_needed)\n     {\n       if (cfun->machine->set_frame_ptr_insn)\n \t{\n-\t  rtx first, insn;\n+\t  rtx first;\n \n \t  push_topmost_sequence ();\n \t  first = get_insns ();\n@@ -2347,8 +2348,20 @@ xtensa_expand_prologue (void)\n \t    }\n \t}\n       else\n-\temit_move_insn (hard_frame_pointer_rtx, stack_pointer_rtx);\n-    }\n+\tinsn = emit_insn (gen_movsi (hard_frame_pointer_rtx,\n+\t\t\t\t     stack_pointer_rtx));\n+    }\n+\n+  /* Create a note to describe the CFA.  Because this is only used to set\n+     DW_AT_frame_base for debug info, don't bother tracking changes through\n+     each instruction in the prologue.  It just takes up space.  */\n+  note_rtx = gen_rtx_SET (VOIDmode, (frame_pointer_needed\n+\t\t\t\t     ? hard_frame_pointer_rtx\n+\t\t\t\t     : stack_pointer_rtx),\n+\t\t\t  plus_constant (stack_pointer_rtx, -total_size));\n+  RTX_FRAME_RELATED_P (insn) = 1;\n+  REG_NOTES (insn) = gen_rtx_EXPR_LIST (REG_FRAME_RELATED_EXPR,\n+\t\t\t\t\tnote_rtx, REG_NOTES (insn));\n }\n \n "}, {"sha": "4b9e58335dec2de311481e4b733dff0e6a54600d", "filename": "gcc/config/xtensa/xtensa.h", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e6c21930ef6ec6b4cf78e00819b247a0874a91d/gcc%2Fconfig%2Fxtensa%2Fxtensa.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e6c21930ef6ec6b4cf78e00819b247a0874a91d/gcc%2Fconfig%2Fxtensa%2Fxtensa.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fxtensa%2Fxtensa.h?ref=4e6c21930ef6ec6b4cf78e00819b247a0874a91d", "patch": "@@ -1062,8 +1062,12 @@ typedef struct xtensa_args\n /* How to start an assembler comment.  */\n #define ASM_COMMENT_START \"#\"\n \n-/* Exception handling TODO!! */\n-#define DWARF_UNWIND_INFO 0\n+/* Generate DWARF2 unwind info to get the DW_AT_frame_base set correctly,\n+   even though we don't yet use it for unwinding.  */\n+#define MUST_USE_SJLJ_EXCEPTIONS 1\n+#define DWARF2_UNWIND_INFO 1\n+#define INCOMING_RETURN_ADDR_RTX gen_rtx_REG (Pmode, 0)\n+#define DWARF_FRAME_RETURN_COLUMN DWARF_FRAME_REGNUM (0)\n \n /* Xtensa constant pool breaks the devices in crtstuff.c to control\n    section in where code resides.  We have to write it as asm code.  Use"}]}