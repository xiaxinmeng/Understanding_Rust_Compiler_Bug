{"sha": "62c0f0a637378ce3e08280855c78e07f52455d38", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjJjMGYwYTYzNzM3OGNlM2UwODI4MDg1NWM3OGUwN2Y1MjQ1NWQzOA==", "commit": {"author": {"name": "Alan Modra", "email": "amodra@gmail.com", "date": "2015-11-09T04:23:25Z"}, "committer": {"name": "Alan Modra", "email": "amodra@gcc.gnu.org", "date": "2015-11-09T04:23:25Z"}, "message": "Update libsanitizer obstack interceptors\n\nNew obstack uses sensible types, size_t instead of int for length\nparams.  Since libsanitizer does not use prototypes from obstack.h to\ncall the real functions, it's necessary to update the libsanitizer\nfunction declarations emitted by the INTERCEPTOR macro.\n\n\t* sanitizer_common/sanitizer_common_interceptors.inc: Update size\n\tparams for _obstack_begin_1, _obstack_begin, _obstack_newchunk\n\tinterceptors.\n\t* configure.ac: Substitute OBSTACK_DEFS.\n\t* asan/Makefile.am: Add OBSTACK_DEFS to DEFS.\n\t* tsan/Makefile.am: Likewise.\n\t* configure: Regenerate.\n\t* Makefile.in: Regenerate.\n\t* asan/Makefile.in: Regenerate.\n\t* interception/Makefile.in: Regenerate.\n\t* libbacktrace/Makefile.in: Regenerate.\n\t* lsan/Makefile.in: Regenerate.\n\t* sanitizer_common/Makefile.in: Regenerate.\n\t* tsan/Makefile.in: Regenerate.\n\t* ubsan/Makefile.in: Regenerate.\n\nFrom-SVN: r229986", "tree": {"sha": "0212f54a80b4b66513331116aad8fd4206c3c101", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0212f54a80b4b66513331116aad8fd4206c3c101"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/62c0f0a637378ce3e08280855c78e07f52455d38", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62c0f0a637378ce3e08280855c78e07f52455d38", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62c0f0a637378ce3e08280855c78e07f52455d38", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62c0f0a637378ce3e08280855c78e07f52455d38/comments", "author": {"login": "amodra", "id": 6006325, "node_id": "MDQ6VXNlcjYwMDYzMjU=", "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amodra", "html_url": "https://github.com/amodra", "followers_url": "https://api.github.com/users/amodra/followers", "following_url": "https://api.github.com/users/amodra/following{/other_user}", "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}", "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amodra/subscriptions", "organizations_url": "https://api.github.com/users/amodra/orgs", "repos_url": "https://api.github.com/users/amodra/repos", "events_url": "https://api.github.com/users/amodra/events{/privacy}", "received_events_url": "https://api.github.com/users/amodra/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "37697711e72258415e3e68f4fce1e405e7832d04", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37697711e72258415e3e68f4fce1e405e7832d04", "html_url": "https://github.com/Rust-GCC/gccrs/commit/37697711e72258415e3e68f4fce1e405e7832d04"}], "stats": {"total": 110, "additions": 99, "deletions": 11}, "files": [{"sha": "7de18c88eaf1e7a1e2e36ef52ed891f0840fc09c", "filename": "libsanitizer/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62c0f0a637378ce3e08280855c78e07f52455d38/libsanitizer%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62c0f0a637378ce3e08280855c78e07f52455d38/libsanitizer%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2FChangeLog?ref=62c0f0a637378ce3e08280855c78e07f52455d38", "patch": "@@ -1,3 +1,21 @@\n+2015-11-09  Alan Modra  <amodra@gmail.com>\n+\n+\t* sanitizer_common/sanitizer_common_interceptors.inc: Update size\n+\tparams for _obstack_begin_1, _obstack_begin, _obstack_newchunk\n+\tinterceptors.\n+\t* configure.ac: Substitute OBSTACK_DEFS.\n+\t* asan/Makefile.am: Add OBSTACK_DEFS to DEFS.\n+\t* tsan/Makefile.am: Likewise.\n+\t* configure: Regenerate.\n+\t* Makefile.in: Regenerate.\n+\t* asan/Makefile.in: Regenerate.\n+\t* interception/Makefile.in: Regenerate.\n+\t* libbacktrace/Makefile.in: Regenerate.\n+\t* lsan/Makefile.in: Regenerate.\n+\t* sanitizer_common/Makefile.in: Regenerate.\n+\t* tsan/Makefile.in: Regenerate.\n+\t* ubsan/Makefile.in: Regenerate.\n+\n 2015-10-22  Maxim Ostapenko  <m.ostapenko@partner.samsung.com>\n \n \tPR bootstrap/68041"}, {"sha": "b362a897fd101d27e71016cfaf39f601207eca97", "filename": "libsanitizer/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62c0f0a637378ce3e08280855c78e07f52455d38/libsanitizer%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62c0f0a637378ce3e08280855c78e07f52455d38/libsanitizer%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2FMakefile.in?ref=62c0f0a637378ce3e08280855c78e07f52455d38", "patch": "@@ -198,6 +198,7 @@ NM = @NM@\n NMEDIT = @NMEDIT@\n OBJDUMP = @OBJDUMP@\n OBJEXT = @OBJEXT@\n+OBSTACK_DEFS = @OBSTACK_DEFS@\n OTOOL = @OTOOL@\n OTOOL64 = @OTOOL64@\n PACKAGE = @PACKAGE@"}, {"sha": "4500e2130da7685aa62b606211ded946fa252e54", "filename": "libsanitizer/asan/Makefile.am", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62c0f0a637378ce3e08280855c78e07f52455d38/libsanitizer%2Fasan%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62c0f0a637378ce3e08280855c78e07f52455d38/libsanitizer%2Fasan%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Fasan%2FMakefile.am?ref=62c0f0a637378ce3e08280855c78e07f52455d38", "patch": "@@ -3,7 +3,7 @@ AM_CPPFLAGS = -I $(top_srcdir)/include -I $(top_srcdir)\n # May be used by toolexeclibdir.\n gcc_version := $(shell cat $(top_srcdir)/../gcc/BASE-VER)\n \n-DEFS = -D_GNU_SOURCE -D_DEBUG -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -DASAN_HAS_EXCEPTIONS=1 -DASAN_NEEDS_SEGV=1 -DCAN_SANITIZE_UB=0\n+DEFS = -D_GNU_SOURCE -D_DEBUG -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -DASAN_HAS_EXCEPTIONS=1 -DASAN_NEEDS_SEGV=1 -DCAN_SANITIZE_UB=0 @OBSTACK_DEFS@\n if USING_MAC_INTERPOSE\n DEFS += -DMAC_INTERPOSE_FUNCTIONS -DMISSING_BLOCKS_SUPPORT\n endif"}, {"sha": "881d1d394d5be0ff93626b4b3a9ba6ed2ff0054a", "filename": "libsanitizer/asan/Makefile.in", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62c0f0a637378ce3e08280855c78e07f52455d38/libsanitizer%2Fasan%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62c0f0a637378ce3e08280855c78e07f52455d38/libsanitizer%2Fasan%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Fasan%2FMakefile.in?ref=62c0f0a637378ce3e08280855c78e07f52455d38", "patch": "@@ -173,7 +173,7 @@ CYGPATH_W = @CYGPATH_W@\n DEFS = -D_GNU_SOURCE -D_DEBUG -D__STDC_CONSTANT_MACROS \\\n \t-D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS \\\n \t-DASAN_HAS_EXCEPTIONS=1 -DASAN_NEEDS_SEGV=1 \\\n-\t-DCAN_SANITIZE_UB=0 $(am__append_1)\n+\t-DCAN_SANITIZE_UB=0 @OBSTACK_DEFS@ $(am__append_1)\n DEPDIR = @DEPDIR@\n DSYMUTIL = @DSYMUTIL@\n DUMPBIN = @DUMPBIN@\n@@ -207,6 +207,7 @@ NM = @NM@\n NMEDIT = @NMEDIT@\n OBJDUMP = @OBJDUMP@\n OBJEXT = @OBJEXT@\n+OBSTACK_DEFS = @OBSTACK_DEFS@\n OTOOL = @OTOOL@\n OTOOL64 = @OTOOL64@\n PACKAGE = @PACKAGE@"}, {"sha": "a0fc860bfce86f99c147135c7d3f2355d311cce7", "filename": "libsanitizer/configure", "status": "modified", "additions": 36, "deletions": 2, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62c0f0a637378ce3e08280855c78e07f52455d38/libsanitizer%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62c0f0a637378ce3e08280855c78e07f52455d38/libsanitizer%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Fconfigure?ref=62c0f0a637378ce3e08280855c78e07f52455d38", "patch": "@@ -607,6 +607,7 @@ LIBOBJS\n TSAN_TARGET_DEPENDENT_OBJECTS\n LIBBACKTRACE_SUPPORTED_FALSE\n LIBBACKTRACE_SUPPORTED_TRUE\n+OBSTACK_DEFS\n RPC_DEFS\n BACKTRACE_SUPPORTS_THREADS\n BACKTRACE_USES_MALLOC\n@@ -12027,7 +12028,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12030 \"configure\"\n+#line 12031 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -12133,7 +12134,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12136 \"configure\"\n+#line 12137 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -16431,6 +16432,39 @@ fi\n RPC_DEFS=$rpc_defs\n \n \n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking obstack params\" >&5\n+$as_echo_n \"checking obstack params... \" >&6; }\n+if test \"${libsanitizer_cv_sys_obstack+set}\" = set; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  save_cppflags=$CPPFLAGS\n+CPPFLAGS=\"-I${srcdir}/../include -o conftest.iii $CPPFLAGS\"\n+cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+#include \"obstack.h\"\n+#ifdef _OBSTACK_SIZE_T\n+_OBSTACK_SIZE_T\n+#else\n+int\n+#endif\n+\n+_ACEOF\n+if ac_fn_c_try_cpp \"$LINENO\"; then :\n+  libsanitizer_cv_sys_obstack=`sed -e '/^#/d;/^[\t ]*$/d' conftest.iii | sed -e '$!d;s/size_t/SIZE_T/'`\n+else\n+  libsanitizer_cv_sys_obstack=int\n+fi\n+rm -f conftest.err conftest.$ac_ext\n+CPPFLAGS=$save_cppflags\n+rm -f conftest.iii\n+\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $libsanitizer_cv_sys_obstack\" >&5\n+$as_echo \"$libsanitizer_cv_sys_obstack\" >&6; }\n+OBSTACK_DEFS=-D_OBSTACK_SIZE_T=\\\"$libsanitizer_cv_sys_obstack\\\"\n+\n+\n  if test \"x${BACKTRACE_SUPPORTED}x${BACKTRACE_USES_MALLOC}\" = \"x1x0\"; then\n   LIBBACKTRACE_SUPPORTED_TRUE=\n   LIBBACKTRACE_SUPPORTED_FALSE='#'"}, {"sha": "72b13a10367137d500cbfe25f0b4f4557db36c7a", "filename": "libsanitizer/configure.ac", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62c0f0a637378ce3e08280855c78e07f52455d38/libsanitizer%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62c0f0a637378ce3e08280855c78e07f52455d38/libsanitizer%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Fconfigure.ac?ref=62c0f0a637378ce3e08280855c78e07f52455d38", "patch": "@@ -335,6 +335,30 @@ fi\n \n AC_SUBST([RPC_DEFS], [$rpc_defs])\n \n+dnl If this file is processed by autoconf-2.67 or later then the CPPFLAGS\n+dnl \"-o conftest.iii\" can disappear, conftest.iii be replaced with\n+dnl conftest.i in the sed command line, and the rm deleted.\n+dnl Not all cpp's accept -o, and gcc -E does not accept a second file\n+dnl argument as the output file.\n+AC_CACHE_CHECK([obstack params],\n+[libsanitizer_cv_sys_obstack],\n+[save_cppflags=$CPPFLAGS\n+CPPFLAGS=\"-I${srcdir}/../include -o conftest.iii $CPPFLAGS\"\n+AC_PREPROC_IFELSE([AC_LANG_SOURCE([\n+#include \"obstack.h\"\n+#ifdef _OBSTACK_SIZE_T\n+_OBSTACK_SIZE_T\n+#else\n+int\n+#endif\n+])],\n+[libsanitizer_cv_sys_obstack=`sed -e '/^#/d;/^[\t ]*$/d' conftest.iii | sed -e '$!d;s/size_t/SIZE_T/'`],\n+[libsanitizer_cv_sys_obstack=int])\n+CPPFLAGS=$save_cppflags\n+rm -f conftest.iii\n+])\n+AC_SUBST([OBSTACK_DEFS], [-D_OBSTACK_SIZE_T=\\\"$libsanitizer_cv_sys_obstack\\\"])\n+\n AM_CONDITIONAL(LIBBACKTRACE_SUPPORTED,\n \t       [test \"x${BACKTRACE_SUPPORTED}x${BACKTRACE_USES_MALLOC}\" = \"x1x0\"])\n "}, {"sha": "c7ccb51a177fa55aa76b932201f9add145ab8ddb", "filename": "libsanitizer/interception/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62c0f0a637378ce3e08280855c78e07f52455d38/libsanitizer%2Finterception%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62c0f0a637378ce3e08280855c78e07f52455d38/libsanitizer%2Finterception%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Finterception%2FMakefile.in?ref=62c0f0a637378ce3e08280855c78e07f52455d38", "patch": "@@ -157,6 +157,7 @@ NM = @NM@\n NMEDIT = @NMEDIT@\n OBJDUMP = @OBJDUMP@\n OBJEXT = @OBJEXT@\n+OBSTACK_DEFS = @OBSTACK_DEFS@\n OTOOL = @OTOOL@\n OTOOL64 = @OTOOL64@\n PACKAGE = @PACKAGE@"}, {"sha": "57eaaf0f3cf287a4999844c37305f2ae7e3bbb36", "filename": "libsanitizer/libbacktrace/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62c0f0a637378ce3e08280855c78e07f52455d38/libsanitizer%2Flibbacktrace%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62c0f0a637378ce3e08280855c78e07f52455d38/libsanitizer%2Flibbacktrace%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Flibbacktrace%2FMakefile.in?ref=62c0f0a637378ce3e08280855c78e07f52455d38", "patch": "@@ -199,6 +199,7 @@ NM = @NM@\n NMEDIT = @NMEDIT@\n OBJDUMP = @OBJDUMP@\n OBJEXT = @OBJEXT@\n+OBSTACK_DEFS = @OBSTACK_DEFS@\n OTOOL = @OTOOL@\n OTOOL64 = @OTOOL64@\n PACKAGE = @PACKAGE@"}, {"sha": "4802ed43971ba4f3fafcad172439b5885c6693cd", "filename": "libsanitizer/lsan/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62c0f0a637378ce3e08280855c78e07f52455d38/libsanitizer%2Flsan%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62c0f0a637378ce3e08280855c78e07f52455d38/libsanitizer%2Flsan%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Flsan%2FMakefile.in?ref=62c0f0a637378ce3e08280855c78e07f52455d38", "patch": "@@ -198,6 +198,7 @@ NM = @NM@\n NMEDIT = @NMEDIT@\n OBJDUMP = @OBJDUMP@\n OBJEXT = @OBJEXT@\n+OBSTACK_DEFS = @OBSTACK_DEFS@\n OTOOL = @OTOOL@\n OTOOL64 = @OTOOL64@\n PACKAGE = @PACKAGE@"}, {"sha": "765efd186d38aeceb448b028bbdaac1983f52214", "filename": "libsanitizer/sanitizer_common/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62c0f0a637378ce3e08280855c78e07f52455d38/libsanitizer%2Fsanitizer_common%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62c0f0a637378ce3e08280855c78e07f52455d38/libsanitizer%2Fsanitizer_common%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Fsanitizer_common%2FMakefile.in?ref=62c0f0a637378ce3e08280855c78e07f52455d38", "patch": "@@ -186,6 +186,7 @@ NM = @NM@\n NMEDIT = @NMEDIT@\n OBJDUMP = @OBJDUMP@\n OBJEXT = @OBJEXT@\n+OBSTACK_DEFS = @OBSTACK_DEFS@\n OTOOL = @OTOOL@\n OTOOL64 = @OTOOL64@\n PACKAGE = @PACKAGE@"}, {"sha": "92b90278d2dfadb9b601194cebcfb7693286f9f2", "filename": "libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62c0f0a637378ce3e08280855c78e07f52455d38/libsanitizer%2Fsanitizer_common%2Fsanitizer_common_interceptors.inc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62c0f0a637378ce3e08280855c78e07f52455d38/libsanitizer%2Fsanitizer_common%2Fsanitizer_common_interceptors.inc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Fsanitizer_common%2Fsanitizer_common_interceptors.inc?ref=62c0f0a637378ce3e08280855c78e07f52455d38", "patch": "@@ -4874,8 +4874,9 @@ static void initialize_obstack(__sanitizer_obstack *obstack) {\n                                         sizeof(*obstack->chunk));\n }\n \n-INTERCEPTOR(int, _obstack_begin_1, __sanitizer_obstack *obstack, int sz,\n-            int align, void *(*alloc_fn)(uptr arg, uptr sz),\n+INTERCEPTOR(int, _obstack_begin_1, __sanitizer_obstack *obstack,\n+            _OBSTACK_SIZE_T sz, _OBSTACK_SIZE_T align,\n+            void *(*alloc_fn)(uptr arg, SIZE_T sz),\n             void (*free_fn)(uptr arg, void *p)) {\n   void *ctx;\n   COMMON_INTERCEPTOR_ENTER(ctx, _obstack_begin_1, obstack, sz, align, alloc_fn,\n@@ -4884,16 +4885,19 @@ INTERCEPTOR(int, _obstack_begin_1, __sanitizer_obstack *obstack, int sz,\n   if (res) initialize_obstack(obstack);\n   return res;\n }\n-INTERCEPTOR(int, _obstack_begin, __sanitizer_obstack *obstack, int sz,\n-            int align, void *(*alloc_fn)(uptr sz), void (*free_fn)(void *p)) {\n+INTERCEPTOR(int, _obstack_begin, __sanitizer_obstack *obstack,\n+            _OBSTACK_SIZE_T sz, _OBSTACK_SIZE_T align,\n+            void *(*alloc_fn)(SIZE_T sz),\n+            void (*free_fn)(void *p)) {\n   void *ctx;\n   COMMON_INTERCEPTOR_ENTER(ctx, _obstack_begin, obstack, sz, align, alloc_fn,\n                            free_fn);\n   int res = REAL(_obstack_begin)(obstack, sz, align, alloc_fn, free_fn);\n   if (res) initialize_obstack(obstack);\n   return res;\n }\n-INTERCEPTOR(void, _obstack_newchunk, __sanitizer_obstack *obstack, int length) {\n+INTERCEPTOR(void, _obstack_newchunk, __sanitizer_obstack *obstack,\n+            _OBSTACK_SIZE_T length) {\n   void *ctx;\n   COMMON_INTERCEPTOR_ENTER(ctx, _obstack_newchunk, obstack, length);\n   REAL(_obstack_newchunk)(obstack, length);"}, {"sha": "dc22db5d44602ca1475553592b96f5c83b3f2e0f", "filename": "libsanitizer/tsan/Makefile.am", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62c0f0a637378ce3e08280855c78e07f52455d38/libsanitizer%2Ftsan%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62c0f0a637378ce3e08280855c78e07f52455d38/libsanitizer%2Ftsan%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Ftsan%2FMakefile.am?ref=62c0f0a637378ce3e08280855c78e07f52455d38", "patch": "@@ -3,7 +3,7 @@ AM_CPPFLAGS = -I $(top_srcdir) -I $(top_srcdir)/include\n # May be used by toolexeclibdir.\n gcc_version := $(shell cat $(top_srcdir)/../gcc/BASE-VER)\n \n-DEFS = -D_GNU_SOURCE -D_DEBUG -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -DCAN_SANITIZE_UB=0\n+DEFS = -D_GNU_SOURCE -D_DEBUG -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -DCAN_SANITIZE_UB=0 @OBSTACK_DEFS@\n AM_CXXFLAGS = -Wall -W -Wno-unused-parameter -Wwrite-strings -pedantic -Wno-long-long  -fPIC -fno-builtin -fno-exceptions -fno-rtti -fomit-frame-pointer -funwind-tables -fvisibility=hidden -Wno-variadic-macros\n AM_CXXFLAGS += $(LIBSTDCXX_RAW_CXX_CXXFLAGS)\n AM_CXXFLAGS += -std=gnu++11"}, {"sha": "6d5d2efbf577aaaec6e622fc54b72506e1a40747", "filename": "libsanitizer/tsan/Makefile.in", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62c0f0a637378ce3e08280855c78e07f52455d38/libsanitizer%2Ftsan%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62c0f0a637378ce3e08280855c78e07f52455d38/libsanitizer%2Ftsan%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Ftsan%2FMakefile.in?ref=62c0f0a637378ce3e08280855c78e07f52455d38", "patch": "@@ -177,7 +177,7 @@ CXXCPP = @CXXCPP@\n CXXDEPMODE = @CXXDEPMODE@\n CXXFLAGS = @CXXFLAGS@\n CYGPATH_W = @CYGPATH_W@\n-DEFS = -D_GNU_SOURCE -D_DEBUG -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -DCAN_SANITIZE_UB=0\n+DEFS = -D_GNU_SOURCE -D_DEBUG -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -DCAN_SANITIZE_UB=0 @OBSTACK_DEFS@\n DEPDIR = @DEPDIR@\n DSYMUTIL = @DSYMUTIL@\n DUMPBIN = @DUMPBIN@\n@@ -211,6 +211,7 @@ NM = @NM@\n NMEDIT = @NMEDIT@\n OBJDUMP = @OBJDUMP@\n OBJEXT = @OBJEXT@\n+OBSTACK_DEFS = @OBSTACK_DEFS@\n OTOOL = @OTOOL@\n OTOOL64 = @OTOOL64@\n PACKAGE = @PACKAGE@"}, {"sha": "f5b06d06d41b9ab804005eeadda513c1275a9c86", "filename": "libsanitizer/ubsan/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62c0f0a637378ce3e08280855c78e07f52455d38/libsanitizer%2Fubsan%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62c0f0a637378ce3e08280855c78e07f52455d38/libsanitizer%2Fubsan%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Fubsan%2FMakefile.in?ref=62c0f0a637378ce3e08280855c78e07f52455d38", "patch": "@@ -196,6 +196,7 @@ NM = @NM@\n NMEDIT = @NMEDIT@\n OBJDUMP = @OBJDUMP@\n OBJEXT = @OBJEXT@\n+OBSTACK_DEFS = @OBSTACK_DEFS@\n OTOOL = @OTOOL@\n OTOOL64 = @OTOOL64@\n PACKAGE = @PACKAGE@"}]}