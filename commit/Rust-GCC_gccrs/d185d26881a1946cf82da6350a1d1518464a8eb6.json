{"sha": "d185d26881a1946cf82da6350a1d1518464a8eb6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDE4NWQyNjg4MWExOTQ2Y2Y4MmRhNjM1MGExZDE1MTg0NjRhOGViNg==", "commit": {"author": {"name": "Neil Booth", "email": "neil@daikokuya.co.uk", "date": "2003-06-15T08:30:02Z"}, "committer": {"name": "Neil Booth", "email": "neil@gcc.gnu.org", "date": "2003-06-15T08:30:02Z"}, "message": "c-pch.c (asm_file_name): Remove.\n\n\t* c-pch.c (asm_file_name): Remove.\n\t* common.opt: Add more switches.\n\t* flags.h (g_switch_set): Boolify.\n\t* opts.c (g_switch_value, g_switch_set, exit_after_options,\n\tversion_flag): Move from toplev.c.\n\t(common_handle_option): Handle more switches from toplev.c.\n\t* toplev.c (display_help, display_target_options, decode_d_option,\n\tprint_version): Make non-static, remove prototypes.\n\t(aux_base_name, asm_file_name, aux_info_file_name): Constify.\n\t(version_flag, g_switch_value, g_switch_set, exit_after_options):\n\tRemove.\n\t(independent_decode_option): Move some handlers to opts.c.\n\t* toplev.h (aux_info_file_name, aux_base_name, asm_file_name,\n\texit_after_options, version_flag, display_help, display_target_options,\n\tprint_version, decode_d_option): New.\njava:\n\t* lang.c (version_flag): Rename to v_flag to avoid clash w/ toplev.h.\n\nFrom-SVN: r67971", "tree": {"sha": "fb5a3a4fc913d05084620e60c670ecc9dde2dd16", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fb5a3a4fc913d05084620e60c670ecc9dde2dd16"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d185d26881a1946cf82da6350a1d1518464a8eb6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d185d26881a1946cf82da6350a1d1518464a8eb6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d185d26881a1946cf82da6350a1d1518464a8eb6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d185d26881a1946cf82da6350a1d1518464a8eb6/comments", "author": {"login": "neilb-xx", "id": 160762, "node_id": "MDQ6VXNlcjE2MDc2Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/160762?v=4", "gravatar_id": "", "url": "https://api.github.com/users/neilb-xx", "html_url": "https://github.com/neilb-xx", "followers_url": "https://api.github.com/users/neilb-xx/followers", "following_url": "https://api.github.com/users/neilb-xx/following{/other_user}", "gists_url": "https://api.github.com/users/neilb-xx/gists{/gist_id}", "starred_url": "https://api.github.com/users/neilb-xx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/neilb-xx/subscriptions", "organizations_url": "https://api.github.com/users/neilb-xx/orgs", "repos_url": "https://api.github.com/users/neilb-xx/repos", "events_url": "https://api.github.com/users/neilb-xx/events{/privacy}", "received_events_url": "https://api.github.com/users/neilb-xx/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "72ac76be3abe9ed981037fe35da0c15bec5611ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/72ac76be3abe9ed981037fe35da0c15bec5611ef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/72ac76be3abe9ed981037fe35da0c15bec5611ef"}], "stats": {"total": 352, "additions": 178, "deletions": 174}, "files": [{"sha": "a3c9063d7f9f6595a6b1f6e41f57deac6ea8dd8d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d185d26881a1946cf82da6350a1d1518464a8eb6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d185d26881a1946cf82da6350a1d1518464a8eb6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d185d26881a1946cf82da6350a1d1518464a8eb6", "patch": "@@ -1,3 +1,21 @@\n+2003-06-15  Neil Booth  <neil@daikokuya.co.uk>\n+\n+\t* c-pch.c (asm_file_name): Remove.\n+\t* common.opt: Add more switches.\n+\t* flags.h (g_switch_set): Boolify.\n+\t* opts.c (g_switch_value, g_switch_set, exit_after_options,\n+\tversion_flag): Move from toplev.c.\n+\t(common_handle_option): Handle more switches from toplev.c.\n+\t* toplev.c (display_help, display_target_options, decode_d_option,\n+\tprint_version): Make non-static, remove prototypes.\n+\t(aux_base_name, asm_file_name, aux_info_file_name): Constify.\n+\t(version_flag, g_switch_value, g_switch_set, exit_after_options):\n+\tRemove.\n+\t(independent_decode_option): Move some handlers to opts.c.\n+\t* toplev.h (aux_info_file_name, aux_base_name, asm_file_name,\n+\texit_after_options, version_flag, display_help, display_target_options,\n+\tprint_version, decode_d_option): New.\n+\n 2003-06-15  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* config/alpha/alpha.md: Follow spelling conventions."}, {"sha": "6a2131404c9c1ff8540a5304cb70dcb61f6c64dc", "filename": "gcc/c-pch.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d185d26881a1946cf82da6350a1d1518464a8eb6/gcc%2Fc-pch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d185d26881a1946cf82da6350a1d1518464a8eb6/gcc%2Fc-pch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-pch.c?ref=d185d26881a1946cf82da6350a1d1518464a8eb6", "patch": "@@ -46,7 +46,6 @@ struct c_pch_header\n \n static FILE *pch_outfile;\n \n-extern char *asm_file_name;\n static long asm_file_startpos;\n \n static const char * get_ident PARAMS((void));"}, {"sha": "6c936210ae52f66148c737e3b8324124ab59502e", "filename": "gcc/common.opt", "status": "modified", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d185d26881a1946cf82da6350a1d1518464a8eb6/gcc%2Fcommon.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d185d26881a1946cf82da6350a1d1518464a8eb6/gcc%2Fcommon.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon.opt?ref=d185d26881a1946cf82da6350a1d1518464a8eb6", "patch": "@@ -41,7 +41,55 @@\n \n ; Please try to keep this file in ASCII collating order.\n \n+-help\n+Common\n+\n+-target-help\n+Common\n+\n+-version\n+Common\n+\n+G\n+Common Joined Separate\n+\n+aux-info\n+Common Separate\n+\n+aux-info=\n+Common Joined\n+\n+auxbase\n+Common Separate\n+\n+auxbase-strip\n+Common Separate\n+\n+d\n+Common Joined\n+\n+dumpbase\n+Common Separate\n+\n+o\n+Common Joined Separate\n+\n+p\n+Common\n+\n+pedantic\n+Common\n+\n+pedantic-errors\n+Common\n+\n quiet\n Common\n \n+version\n+Common\n+\n+w\n+Common\n+\n ; This comment is to ensure we retain the blank line above."}, {"sha": "511312420f47dd0cf80ff2dafb81880390986a16", "filename": "gcc/flags.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d185d26881a1946cf82da6350a1d1518464a8eb6/gcc%2Fflags.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d185d26881a1946cf82da6350a1d1518464a8eb6/gcc%2Fflags.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fflags.h?ref=d185d26881a1946cf82da6350a1d1518464a8eb6", "patch": "@@ -600,7 +600,7 @@ extern int flag_wrapv;\n \n /* Value of the -G xx switch, and whether it was passed or not.  */\n extern unsigned HOST_WIDE_INT g_switch_value;\n-extern int g_switch_set;\n+extern bool g_switch_set;\n \n /* Values of the -falign-* flags: how much to align labels in code. \n    0 means `use default', 1 means `don't align'.  "}, {"sha": "37dacc531a2013c08017125a7fbb2666d9685ddd", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d185d26881a1946cf82da6350a1d1518464a8eb6/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d185d26881a1946cf82da6350a1d1518464a8eb6/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=d185d26881a1946cf82da6350a1d1518464a8eb6", "patch": "@@ -1,3 +1,7 @@\n+2003-06-15  Neil Booth  <neil@daikokuya.co.uk>\n+\n+\t* lang.c (version_flag): Rename to v_flag to avoid clash w/ toplev.h.\n+\n 2003-06-14  Neil Booth  <neil@daikokuya.co.uk>\n \n \t* lang-specs.h: Rewrite -MD and -MMD to append an underscore."}, {"sha": "3ac6fd2e883f81f9efac9071fa7b4bc5aabedd5c", "filename": "gcc/java/lang.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d185d26881a1946cf82da6350a1d1518464a8eb6/gcc%2Fjava%2Flang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d185d26881a1946cf82da6350a1d1518464a8eb6/gcc%2Fjava%2Flang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Flang.c?ref=d185d26881a1946cf82da6350a1d1518464a8eb6", "patch": "@@ -181,7 +181,7 @@ int flag_indirect_dispatch = 0;\n int flag_store_check = 1;\n \n /* When nonzero, print extra version information.  */\n-static int version_flag = 0;\n+static int v_flag = 0;\n \n /* Set nonzero if the user specified -finline-functions on the command\n    line.  */\n@@ -448,7 +448,7 @@ java_handle_option (size_t scode, const char *arg, int value)\n       break;\n \n     case OPT_version:\n-      version_flag = 1;\n+      v_flag = 1;\n       break;\n     }\n \n@@ -476,7 +476,7 @@ java_init (void)\n       && force_align_functions_log < 1)\n     force_align_functions_log = 1;\n \n-  jcf_path_seal (version_flag);\n+  jcf_path_seal (v_flag);\n \n   java_init_decl_processing ();\n "}, {"sha": "204cc0d0db38fe154ea4b1cec8898a2031ae142a", "filename": "gcc/opts.c", "status": "modified", "additions": 83, "deletions": 0, "changes": 83, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d185d26881a1946cf82da6350a1d1518464a8eb6/gcc%2Fopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d185d26881a1946cf82da6350a1d1518464a8eb6/gcc%2Fopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts.c?ref=d185d26881a1946cf82da6350a1d1518464a8eb6", "patch": "@@ -30,6 +30,16 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n #include \"flags.h\"\n #include \"toplev.h\"\n \n+/* Value of the -G xx switch, and whether it was passed or not.  */\n+unsigned HOST_WIDE_INT g_switch_value;\n+bool g_switch_set;\n+\n+/* True if we should exit after parsing options.  */\n+bool exit_after_options;\n+\n+/* If -version.  */\n+bool version_flag;\n+\n static size_t find_opt (const char *, int);\n static int common_handle_option (size_t scode, const char *arg, int value);\n \n@@ -236,9 +246,82 @@ common_handle_option (size_t scode, const char *arg,\n     default:\n       abort ();\n \n+    case OPT__help:\n+      display_help ();\n+      exit_after_options = true;\n+      break;\n+\n+    case OPT__target_help:\n+      display_target_options ();\n+      exit_after_options = true;\n+      break;\n+\n+    case OPT__version:\n+      print_version (stderr, \"\");\n+      exit_after_options = true;\n+      break;\n+\n+    case OPT_G:\n+      g_switch_value = read_integral_parameter (arg, 0, -1);\n+      if (g_switch_value == (unsigned HOST_WIDE_INT) -1)\n+\treturn 0;\n+      g_switch_set = true;\n+      break;\n+\n+    case OPT_aux_info:\n+    case OPT_aux_info_:\n+      aux_info_file_name = arg;\n+      flag_gen_aux_info = 1;\n+      break;\n+\n+    case OPT_auxbase:\n+      aux_base_name = arg;\n+      break;\n+\n+    case OPT_auxbase_strip:\n+      {\n+\tchar *tmp = xstrdup (arg);\n+\tstrip_off_ending (tmp, strlen (tmp));\n+\tif (tmp[0])\n+\t  aux_base_name = tmp;\n+      }\n+      break;\n+\n+    case OPT_d:\n+      decode_d_option (arg);\n+      break;\n+\n+    case OPT_dumpbase:\n+      dump_base_name = arg;\n+      break;\n+\n+    case OPT_o:\n+      asm_file_name = arg;\n+      break;\n+\n+    case OPT_p:\n+      profile_flag = 1;\n+      break;\n+\n+    case OPT_pedantic:\n+      pedantic = 1;\n+      break;\n+\n+    case OPT_pedantic_errors:\n+      flag_pedantic_errors = pedantic = 1;\n+      break;\n+\n     case OPT_quiet:\n       quiet_flag = 1;\n       break;\n+\n+    case OPT_version:\n+      version_flag = 1;\n+      break;\n+\n+    case OPT_w:\n+      inhibit_warnings = 1;\n+      break;      \n     }\n \n   return 1;"}, {"sha": "dc939250f18499333e31d0cb2055a9ed75f97794", "filename": "gcc/toplev.c", "status": "modified", "additions": 9, "deletions": 169, "changes": 178, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d185d26881a1946cf82da6350a1d1518464a8eb6/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d185d26881a1946cf82da6350a1d1518464a8eb6/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=d185d26881a1946cf82da6350a1d1518464a8eb6", "patch": "@@ -117,17 +117,14 @@ static void set_target_switch (const char *);\n static void crash_signal (int) ATTRIBUTE_NORETURN;\n static void setup_core_dumping (void);\n static void compile_file (void);\n-static void display_help (void);\n-static void display_target_options (void);\n \n-static void decode_d_option (const char *);\n+void decode_d_option (const char *);\n static int decode_f_option (const char *);\n static int decode_W_option (const char *);\n static int decode_g_option (const char *);\n static unsigned int independent_decode_option (int, char **);\n static void set_Wextra (int);\n \n-static void print_version (FILE *, const char *);\n static int print_single_switch (FILE *, int, int, const char *,\n \t\t\t\tconst char *, const char *,\n \t\t\t\tconst char *, const char *);\n@@ -214,7 +211,7 @@ const char *dump_base_name;\n \n /* Name to use as a base for auxiliary output files.  */\n \n-static const char *aux_base_name;\n+const char *aux_base_name;\n \n /* Format to use to print dumpfile index value */\n #ifndef DUMPFILE_FORMAT\n@@ -358,16 +355,11 @@ static void close_dump_file (enum dump_file_index,\n \n int rtl_dump_and_exit;\n int flag_print_asm_name;\n-static int version_flag;\n enum graph_dump_types graph_dump_format;\n \n /* Name for output file of assembly code, specified with -o.  */\n \n-char *asm_file_name;\n-\n-/* Value of the -G xx switch, and whether it was passed or not.  */\n-unsigned HOST_WIDE_INT g_switch_value;\n-int g_switch_set;\n+const char *asm_file_name;\n \n /* Type(s) of debugging information we are producing (if any).\n    See flags.h for the definitions of the different possible\n@@ -400,9 +392,6 @@ int optimize = 0;\n \n int optimize_size = 0;\n \n-/* Nonzero if we should exit after parsing options.  */\n-static int exit_after_options = 0;\n-\n /* The FUNCTION_DECL for the function currently being compiled,\n    or 0 if between functions.  */\n tree current_function_decl;\n@@ -743,7 +732,7 @@ int flag_gen_aux_info = 0;\n \n /* Specified name of aux-info file.  */\n \n-static char *aux_info_file_name;\n+const char *aux_info_file_name;\n \n /* Nonzero means make the text shared if supported.  */\n \n@@ -4011,7 +4000,7 @@ rest_of_compilation (tree decl)\n }\n \n /* Display help for generic options.  */\n-static void\n+void\n display_help (void)\n {\n   int undoc;\n@@ -4145,7 +4134,7 @@ display_help (void)\n }\n \n /* Display help for target options.  */\n-static void\n+void \n display_target_options (void)\n {\n   int undoc, i;\n@@ -4154,6 +4143,7 @@ display_target_options (void)\n   /* Avoid double printing for --help --target-help.  */\n   if (displayed)\n     return;\n+\n   displayed = true;\n \n   if (ARRAY_SIZE (target_switches) > 1\n@@ -4217,7 +4207,7 @@ display_target_options (void)\n \n /* Parse a -d... command line switch.  */\n \n-static void\n+void\n decode_d_option (const char *arg)\n {\n   int i, c, matched;\n@@ -4597,27 +4587,6 @@ independent_decode_option (int argc, char **argv)\n \n   arg++;\n \n-  if (!strcmp (arg, \"-help\"))\n-    {\n-      display_help ();\n-      exit_after_options = 1;\n-      return 1;\n-    }\n-\n-  if (!strcmp (arg, \"-target-help\"))\n-    {\n-      display_target_options ();\n-      exit_after_options = 1;\n-      return 1;\n-    }\n-\n-  if (!strcmp (arg, \"-version\"))\n-    {\n-      print_version (stderr, \"\");\n-      exit_after_options = 1;\n-      return 1;\n-    }\n-\n   /* Handle '--param <name>=<value>'.  */\n   if (strcmp (arg, \"-param\") == 0)\n     {\n@@ -4671,142 +4640,13 @@ independent_decode_option (int argc, char **argv)\n     case 'g':\n       return decode_g_option (arg + 1);\n \n-    case 'd':\n-      if (!strcmp (arg, \"dumpbase\"))\n-\t{\n-\t  if (argc == 1)\n-\t    return 0;\n-\n-\t  if (argv[1][0])\n-\t    dump_base_name = argv[1];\n-\n-\t  return 2;\n-\t}\n-      else\n-\tdecode_d_option (arg + 1);\n-      break;\n-\n-    case 'p':\n-      if (!strcmp (arg, \"pedantic\"))\n-\tpedantic = 1;\n-      else if (!strcmp (arg, \"pedantic-errors\"))\n-\tflag_pedantic_errors = pedantic = 1;\n-      else if (arg[1] == 0)\n-\tprofile_flag = 1;\n-      else\n-\treturn 0;\n-      break;\n-\n-    case 'v':\n-      if (!strcmp (arg, \"version\"))\n-\tversion_flag = 1;\n-      else\n-\treturn 0;\n-      break;\n-\n-    case 'w':\n-      if (arg[1] == 0)\n-\tinhibit_warnings = 1;\n-      else\n-\treturn 0;\n-      break;\n-\n     case 'W':\n       /* For backward compatibility, -W is the same as -Wextra.  */\n       if (arg[1] == 0)\n \tset_Wextra (1);\n       else\n \treturn decode_W_option (arg + 1);\n       break;\n-\n-    case 'a':\n-      if (!strncmp (arg, \"aux-info\", 8))\n-\t{\n-\t  if (arg[8] == '\\0')\n-\t    {\n-\t      if (argc == 1)\n-\t\treturn 0;\n-\n-\t      aux_info_file_name = argv[1];\n-\t      flag_gen_aux_info = 1;\n-\t      return 2;\n-\t    }\n-\t  else if (arg[8] == '=')\n-\t    {\n-\t      aux_info_file_name = arg + 9;\n-\t      flag_gen_aux_info = 1;\n-\t    }\n-\t  else\n-\t    return 0;\n-\t}\n-      else if (!strcmp (arg, \"auxbase\"))\n-\t{\n-\t  if (argc == 1)\n-\t    return 0;\n-\n-\t  if (argv[1][0])\n-\t    aux_base_name = argv[1];\n-\n-\t  return 2;\n-\t}\n-      else if (!strcmp (arg, \"auxbase-strip\"))\n-\t{\n-\t  if (argc == 1)\n-\t    return 0;\n-\n-\t  if (argv[1][0])\n-\t    {\n-\t      strip_off_ending (argv[1], strlen (argv[1]));\n-\t      if (argv[1][0])\n-\t\taux_base_name = argv[1];\n-\t    }\n-\n-\t  return 2;\n-\t}\n-      else\n-\treturn 0;\n-      break;\n-\n-    case 'o':\n-      if (arg[1] == 0)\n-\t{\n-\t  if (argc == 1)\n-\t    return 0;\n-\n-\t  asm_file_name = argv[1];\n-\t  return 2;\n-\t}\n-      return 0;\n-\n-    case 'G':\n-      {\n-\tint g_switch_val;\n-\tint return_val;\n-\n-\tif (arg[1] == 0)\n-\t  {\n-\t    if (argc == 1)\n-\t      return 0;\n-\n-\t    g_switch_val = read_integral_parameter (argv[1], 0, -1);\n-\t    return_val = 2;\n-\t  }\n-\telse\n-\t  {\n-\t    g_switch_val = read_integral_parameter (arg + 1, 0, -1);\n-\t    return_val = 1;\n-\t  }\n-\n-\tif (g_switch_val == -1)\n-\t  return_val = 0;\n-\telse\n-\t  {\n-\t    g_switch_set = TRUE;\n-\t    g_switch_value = g_switch_val;\n-\t  }\n-\n-\treturn return_val;\n-      }\n     }\n \n   return 1;\n@@ -4870,7 +4710,7 @@ set_target_switch (const char *name)\n    Each line begins with INDENT (for the case where FILE is the\n    assembler output file).  */\n \n-static void\n+void\n print_version (FILE *file, const char *indent)\n {\n #ifndef __VERSION__"}, {"sha": "61bed8b3e857ecaa3e06ada9732e72db80686fef", "filename": "gcc/toplev.h", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d185d26881a1946cf82da6350a1d1518464a8eb6/gcc%2Ftoplev.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d185d26881a1946cf82da6350a1d1518464a8eb6/gcc%2Ftoplev.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.h?ref=d185d26881a1946cf82da6350a1d1518464a8eb6", "patch": "@@ -97,9 +97,18 @@ extern void check_global_declarations   (union tree_node **, int);\n \n extern const char *progname;\n extern const char *dump_base_name;\n+extern const char *aux_base_name;\n+extern const char *aux_info_file_name;\n+extern const char *asm_file_name;\n+extern bool exit_after_options;\n+extern bool version_flag;\n \n extern int target_flags_explicit;\n \n+extern void display_help (void);\n+extern void display_target_options (void);\n+extern void print_version (FILE *, const char *);\n+\n /* The hashtable, so that the C front ends can pass it to cpplib.  */\n extern struct ht *ident_hash;\n \n@@ -108,6 +117,9 @@ extern struct ht *ident_hash;\n \n extern void set_fast_math_flags         (int);\n \n+/* Handle -d switch.  */\n+extern void decode_d_option\t\t(const char *);\n+\n /* Return true iff flags are set as if -ffast-math.  */\n extern bool fast_math_flags_set_p\t(void);\n "}]}