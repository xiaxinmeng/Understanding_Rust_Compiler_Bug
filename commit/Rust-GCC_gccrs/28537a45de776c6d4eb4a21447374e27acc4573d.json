{"sha": "28537a45de776c6d4eb4a21447374e27acc4573d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mjg1MzdhNDVkZTc3NmM2ZDRlYjRhMjE0NDczNzRlMjdhY2M0NTczZA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2015-07-23T07:23:23Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2015-07-23T07:23:23Z"}, "message": "re PR middle-end/66945 (ICE in generic_simplify (generic-match.c:24790))\n\n2015-07-23  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/66945\n\t* tree-ssa-propagate.c (substitute_and_fold_dom_walker\n\t::before_dom_children): Force the propagators idea of\n\tnon-executable edges to materialize, not what the folder\n\tchooses.\n\n\t* gcc.dg/torture/pr66945.c: New testcase.\n\nFrom-SVN: r226088", "tree": {"sha": "0b53234d12f8b5bc5dfcbdc0f99a0ae83f98d561", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0b53234d12f8b5bc5dfcbdc0f99a0ae83f98d561"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/28537a45de776c6d4eb4a21447374e27acc4573d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/28537a45de776c6d4eb4a21447374e27acc4573d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/28537a45de776c6d4eb4a21447374e27acc4573d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/28537a45de776c6d4eb4a21447374e27acc4573d/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bde7d04b62f9fbc95131c4246ff2da7d063bda31", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bde7d04b62f9fbc95131c4246ff2da7d063bda31", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bde7d04b62f9fbc95131c4246ff2da7d063bda31"}], "stats": {"total": 51, "additions": 48, "deletions": 3}, "files": [{"sha": "e89f685cb8cb5e06077df90bd75036874f8c2425", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28537a45de776c6d4eb4a21447374e27acc4573d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28537a45de776c6d4eb4a21447374e27acc4573d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=28537a45de776c6d4eb4a21447374e27acc4573d", "patch": "@@ -1,3 +1,11 @@\n+2015-07-23  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/66945\n+\t* tree-ssa-propagate.c (substitute_and_fold_dom_walker\n+\t::before_dom_children): Force the propagators idea of\n+\tnon-executable edges to materialize, not what the folder\n+\tchooses.\n+\n 2015-07-23  Richard Biener  <rguenther@suse.de>\n \n \t* gimple.h (gimple_cond_make_false): Use 0 != 0."}, {"sha": "20fad268d2dfdca34b48e2e6b7726a55d51888ce", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28537a45de776c6d4eb4a21447374e27acc4573d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28537a45de776c6d4eb4a21447374e27acc4573d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=28537a45de776c6d4eb4a21447374e27acc4573d", "patch": "@@ -1,3 +1,8 @@\n+2015-07-23  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/66945\n+\t* gcc.dg/torture/pr66945.c: New testcase.\n+\n 2015-07-22  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR target/66954"}, {"sha": "53ac2302657711c423b62aa004fc2abf97d38d14", "filename": "gcc/testsuite/gcc.dg/torture/pr66945.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28537a45de776c6d4eb4a21447374e27acc4573d/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr66945.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28537a45de776c6d4eb4a21447374e27acc4573d/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr66945.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr66945.c?ref=28537a45de776c6d4eb4a21447374e27acc4573d", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+\n+unsigned b;\n+void f()\n+{\n+  for(;;)\n+    if(!b?:(b=0))\n+      ;\n+    else if(b%0<b?:b) /* { dg-warning \"division by zero\" } */\n+      for(;;)\n+\t;\n+}"}, {"sha": "b7684e07905ce24f6bd21ff3817a6ed16b63053a", "filename": "gcc/tree-ssa-propagate.c", "status": "modified", "additions": 23, "deletions": 3, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28537a45de776c6d4eb4a21447374e27acc4573d/gcc%2Ftree-ssa-propagate.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28537a45de776c6d4eb4a21447374e27acc4573d/gcc%2Ftree-ssa-propagate.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-propagate.c?ref=28537a45de776c6d4eb4a21447374e27acc4573d", "patch": "@@ -1236,13 +1236,33 @@ substitute_and_fold_dom_walker::before_dom_children (basic_block bb)\n \n       /* If we made a replacement, fold the statement.  */\n       if (did_replace)\n-\tfold_stmt (&i, follow_single_use_edges);\n+\t{\n+\t  fold_stmt (&i, follow_single_use_edges);\n+\t  stmt = gsi_stmt (i);\n+\t}\n+\n+      /* If this is a control statement the propagator left edges\n+         unexecuted on force the condition in a way consistent with\n+\t that.  See PR66945 for cases where the propagator can end\n+\t up with a different idea of a taken edge than folding\n+\t (once undefined behavior is involved).  */\n+      if (gimple_code (stmt) == GIMPLE_COND)\n+\t{\n+\t  if ((EDGE_SUCC (bb, 0)->flags & EDGE_EXECUTABLE)\n+\t      ^ (EDGE_SUCC (bb, 1)->flags & EDGE_EXECUTABLE))\n+\t    {\n+\t      if (((EDGE_SUCC (bb, 0)->flags & EDGE_TRUE_VALUE) != 0)\n+\t\t  == ((EDGE_SUCC (bb, 0)->flags & EDGE_EXECUTABLE) != 0))\n+\t\tgimple_cond_make_true (as_a <gcond *> (stmt));\n+\t      else\n+\t\tgimple_cond_make_false (as_a <gcond *> (stmt));\n+\t      did_replace = true;\n+\t    }\n+\t}\n \n       /* Now cleanup.  */\n       if (did_replace)\n \t{\n-\t  stmt = gsi_stmt (i);\n-\n \t  /* If we cleaned up EH information from the statement,\n \t     remove EH edges.  */\n \t  if (maybe_clean_or_replace_eh_stmt (old_stmt, stmt))"}]}