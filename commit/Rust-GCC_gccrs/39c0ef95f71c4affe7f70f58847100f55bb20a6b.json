{"sha": "39c0ef95f71c4affe7f70f58847100f55bb20a6b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzljMGVmOTVmNzFjNGFmZmU3ZjcwZjU4ODQ3MTAwZjU1YmIyMGE2Yg==", "commit": {"author": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1995-03-10T19:08:50Z"}, "committer": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1995-03-10T19:08:50Z"}, "message": "arm.md (all fp patterns): Conditionalize on TARGET_HARD_FLOAT.\n\n\t* arm/arm.md (all fp patterns): Conditionalize on TARGET_HARD_FLOAT.\n\t(*movsf_soft_insn, *movdf_soft_insn): New patterns.\n\nFrom-SVN: r9162", "tree": {"sha": "0243f1d3fc32dd054ad7e11a808fbfe268fdf63a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0243f1d3fc32dd054ad7e11a808fbfe268fdf63a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/39c0ef95f71c4affe7f70f58847100f55bb20a6b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39c0ef95f71c4affe7f70f58847100f55bb20a6b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/39c0ef95f71c4affe7f70f58847100f55bb20a6b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39c0ef95f71c4affe7f70f58847100f55bb20a6b/comments", "author": null, "committer": null, "parents": [{"sha": "3ada8e173aee2b9ef57627bdcd47a7b95b0a36ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ada8e173aee2b9ef57627bdcd47a7b95b0a36ec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3ada8e173aee2b9ef57627bdcd47a7b95b0a36ec"}], "stats": {"total": 217, "additions": 137, "deletions": 80}, "files": [{"sha": "f77a01a34014780a1574bf23cc2f3c58f446e3c4", "filename": "gcc/config/arm/arm.md", "status": "modified", "additions": 137, "deletions": 80, "changes": 217, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39c0ef95f71c4affe7f70f58847100f55bb20a6b/gcc%2Fconfig%2Farm%2Farm.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39c0ef95f71c4affe7f70f58847100f55bb20a6b/gcc%2Fconfig%2Farm%2Farm.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.md?ref=39c0ef95f71c4affe7f70f58847100f55bb20a6b", "patch": "@@ -355,7 +355,7 @@\n   [(set (match_operand:SF 0 \"s_register_operand\" \"=f,f\")\n \t(plus:SF (match_operand:SF 1 \"s_register_operand\" \"f,f\")\n \t\t (match_operand:SF 2 \"fpu_add_operand\" \"fG,H\")))]\n-  \"\"\n+  \"TARGET_HARD_FLOAT\"\n   \"@\n    adf%?s\\\\t%0, %1, %2\n    suf%?s\\\\t%0, %1, #%N2\"\n@@ -365,7 +365,7 @@\n   [(set (match_operand:DF 0 \"s_register_operand\" \"=f,f\")\n \t(plus:DF (match_operand:DF 1 \"s_register_operand\" \"f,f\")\n \t\t (match_operand:DF 2 \"fpu_add_operand\" \"fG,H\")))]\n-  \"\"\n+  \"TARGET_HARD_FLOAT\"\n   \"@\n    adf%?d\\\\t%0, %1, %2\n    suf%?d\\\\t%0, %1, #%N2\"\n@@ -376,7 +376,7 @@\n \t(plus:DF (float_extend:DF\n \t\t  (match_operand:SF 1 \"s_register_operand\" \"f,f\"))\n \t\t (match_operand:DF 2 \"fpu_add_operand\" \"fG,H\")))]\n-  \"\"\n+  \"TARGET_HARD_FLOAT\"\n   \"@\n    adf%?d\\\\t%0, %1, %2\n    suf%?d\\\\t%0, %1, #%N2\"\n@@ -387,7 +387,7 @@\n \t(plus:DF (match_operand:DF 1 \"s_register_operand\" \"f\")\n \t\t (float_extend:DF\n \t\t  (match_operand:SF 2 \"s_register_operand\" \"f\"))))]\n-  \"\"\n+  \"TARGET_HARD_FLOAT\"\n   \"adf%?d\\\\t%0, %1, %2\"\n [(set_attr \"type\" \"farith\")])\n \n@@ -397,15 +397,15 @@\n \t\t  (match_operand:SF 1 \"s_register_operand\" \"f\"))\n \t\t (float_extend:DF\n \t\t  (match_operand:SF 2 \"s_register_operand\" \"f\"))))]\n-  \"\"\n+  \"TARGET_HARD_FLOAT\"\n   \"adf%?d\\\\t%0, %1, %2\"\n [(set_attr \"type\" \"farith\")])\n \n (define_insn \"addxf3\"\n   [(set (match_operand:XF 0 \"s_register_operand\" \"=f,f\")\n \t(plus:XF (match_operand:XF 1 \"s_register_operand\" \"f,f\")\n \t\t (match_operand:XF 2 \"fpu_add_operand\" \"fG,H\")))]\n-  \"ENABLE_XF_PATTERNS\"\n+  \"ENABLE_XF_PATTERNS && TARGET_HARD_FLOAT\"\n   \"@\n    adf%?e\\\\t%0, %1, %2\n    suf%?e\\\\t%0, %1, #%N2\"\n@@ -544,7 +544,7 @@\n   [(set (match_operand:SF 0 \"s_register_operand\" \"=f,f\")\n \t(minus:SF (match_operand:SF 1 \"fpu_rhs_operand\" \"f,G\")\n \t\t  (match_operand:SF 2 \"fpu_rhs_operand\" \"fG,f\")))]\n-  \"\"\n+  \"TARGET_HARD_FLOAT\"\n   \"@\n    suf%?s\\\\t%0, %1, %2\n    rsf%?s\\\\t%0, %2, %1\"\n@@ -554,7 +554,7 @@\n   [(set (match_operand:DF 0 \"s_register_operand\" \"=f,f\")\n \t(minus:DF (match_operand:DF 1 \"fpu_rhs_operand\" \"f,G\")\n \t\t  (match_operand:DF 2 \"fpu_rhs_operand\" \"fG,f\")))]\n-  \"\"\n+  \"TARGET_HARD_FLOAT\"\n   \"@\n    suf%?d\\\\t%0, %1, %2\n    rsf%?d\\\\t%0, %2, %1\"\n@@ -565,7 +565,7 @@\n \t(minus:DF (float_extend:DF\n \t\t   (match_operand:SF 1 \"s_register_operand\" \"f\"))\n \t\t  (match_operand:DF 2 \"fpu_rhs_operand\" \"fG\")))]\n-  \"\"\n+  \"TARGET_HARD_FLOAT\"\n   \"suf%?d\\\\t%0, %1, %2\"\n [(set_attr \"type\" \"farith\")])\n \n@@ -574,7 +574,7 @@\n \t(minus:DF (match_operand:DF 1 \"fpu_rhs_operand\" \"f,G\")\n \t\t  (float_extend:DF\n \t\t   (match_operand:SF 2 \"s_register_operand\" \"f,f\"))))]\n-  \"\"\n+  \"TARGET_HARD_FLOAT\"\n   \"@\n    suf%?d\\\\t%0, %1, %2\n    rsf%?d\\\\t%0, %2, %1\"\n@@ -586,15 +586,15 @@\n \t\t   (match_operand:SF 1 \"s_register_operand\" \"f\"))\n \t\t  (float_extend:DF\n \t\t   (match_operand:SF 2 \"s_register_operand\" \"f\"))))]\n-  \"\"\n+  \"TARGET_HARD_FLOAT\"\n   \"suf%?d\\\\t%0, %1, %2\"\n [(set_attr \"type\" \"farith\")])\n \n (define_insn \"subxf3\"\n   [(set (match_operand:XF 0 \"s_register_operand\" \"=f,f\")\n \t(minus:XF (match_operand:XF 1 \"fpu_rhs_operand\" \"f,G\")\n \t\t  (match_operand:XF 2 \"fpu_rhs_operand\" \"fG,f\")))]\n-  \"ENABLE_XF_PATTERNS\"\n+  \"ENABLE_XF_PATTERNS && TARGET_HARD_FLOAT\"\n   \"@\n    suf%?e\\\\t%0, %1, %2\n    rsf%?e\\\\t%0, %2, %1\"\n@@ -676,15 +676,15 @@\n   [(set (match_operand:SF 0 \"s_register_operand\" \"=f\")\n \t(mult:SF (match_operand:SF 1 \"s_register_operand\" \"f\")\n \t\t (match_operand:SF 2 \"fpu_rhs_operand\" \"fG\")))]\n-  \"\"\n+  \"TARGET_HARD_FLOAT\"\n   \"fml%?s\\\\t%0, %1, %2\"\n [(set_attr \"type\" \"ffmul\")])\n \n (define_insn \"muldf3\"\n   [(set (match_operand:DF 0 \"s_register_operand\" \"=f\")\n \t(mult:DF (match_operand:DF 1 \"s_register_operand\" \"f\")\n \t\t (match_operand:DF 2 \"fpu_rhs_operand\" \"fG\")))]\n-  \"\"\n+  \"TARGET_HARD_FLOAT\"\n   \"muf%?d\\\\t%0, %1, %2\"\n [(set_attr \"type\" \"fmul\")])\n \n@@ -693,7 +693,7 @@\n \t(mult:DF (float_extend:DF\n \t\t  (match_operand:SF 1 \"s_register_operand\" \"f\"))\n \t\t (match_operand:DF 2 \"fpu_rhs_operand\" \"fG\")))]\n-  \"\"\n+  \"TARGET_HARD_FLOAT\"\n   \"muf%?d\\\\t%0, %1, %2\"\n [(set_attr \"type\" \"fmul\")])\n \n@@ -702,7 +702,7 @@\n \t(mult:DF (match_operand:DF 1 \"s_register_operand\" \"f\")\n \t\t (float_extend:DF\n \t\t  (match_operand:SF 2 \"s_register_operand\" \"f\"))))]\n-  \"\"\n+  \"TARGET_HARD_FLOAT\"\n   \"muf%?d\\\\t%0, %1, %2\"\n [(set_attr \"type\" \"fmul\")])\n \n@@ -712,15 +712,15 @@\n \t\t  (match_operand:SF 1 \"s_register_operand\" \"f\"))\n \t\t (float_extend:DF\n \t\t  (match_operand:SF 2 \"s_register_operand\" \"f\"))))]\n-  \"\"\n+  \"TARGET_HARD_FLOAT\"\n   \"muf%?d\\\\t%0, %1, %2\"\n [(set_attr \"type\" \"fmul\")])\n \n (define_insn \"mulxf3\"\n   [(set (match_operand:XF 0 \"s_register_operand\" \"=f\")\n \t(mult:XF (match_operand:XF 1 \"s_register_operand\" \"f\")\n \t\t (match_operand:XF 2 \"fpu_rhs_operand\" \"fG\")))]\n-  \"ENABLE_XF_PATTERNS\"\n+  \"ENABLE_XF_PATTERNS && TARGET_HARD_FLOAT\"\n   \"muf%?e\\\\t%0, %1, %2\"\n [(set_attr \"type\" \"fmul\")])\n \f\n@@ -730,7 +730,7 @@\n   [(set (match_operand:SF 0 \"s_register_operand\" \"=f,f\")\n \t(div:SF (match_operand:SF 1 \"fpu_rhs_operand\" \"f,G\")\n \t\t(match_operand:SF 2 \"fpu_rhs_operand\" \"fG,f\")))]\n-  \"\"\n+  \"TARGET_HARD_FLOAT\"\n   \"@\n    fdv%?s\\\\t%0, %1, %2\n    frd%?s\\\\t%0, %2, %1\"\n@@ -740,7 +740,7 @@\n   [(set (match_operand:DF 0 \"s_register_operand\" \"=f,f\")\n \t(div:DF (match_operand:DF 1 \"fpu_rhs_operand\" \"f,G\")\n \t\t(match_operand:DF 2 \"fpu_rhs_operand\" \"fG,f\")))]\n-  \"\"\n+  \"TARGET_HARD_FLOAT\"\n   \"@\n    dvf%?d\\\\t%0, %1, %2\n    rdf%?d\\\\t%0, %2, %1\"\n@@ -751,7 +751,7 @@\n \t(div:DF (float_extend:DF\n \t\t (match_operand:SF 1 \"s_register_operand\" \"f\"))\n \t\t(match_operand:DF 2 \"fpu_rhs_operand\" \"fG\")))]\n-  \"\"\n+  \"TARGET_HARD_FLOAT\"\n   \"dvf%?d\\\\t%0, %1, %2\"\n [(set_attr \"type\" \"fdivd\")])\n \n@@ -760,7 +760,7 @@\n \t(div:DF (match_operand:DF 1 \"fpu_rhs_operand\" \"fG\")\n \t\t(float_extend:DF\n \t\t (match_operand:SF 2 \"s_register_operand\" \"f\"))))]\n-  \"\"\n+  \"TARGET_HARD_FLOAT\"\n   \"rdf%?d\\\\t%0, %2, %1\"\n [(set_attr \"type\" \"fdivd\")])\n \n@@ -770,15 +770,15 @@\n \t\t (match_operand:SF 1 \"s_register_operand\" \"f\"))\n \t\t(float_extend:DF\n \t\t (match_operand:SF 2 \"s_register_operand\" \"f\"))))]\n-  \"\"\n+  \"TARGET_HARD_FLOAT\"\n   \"dvf%?d\\\\t%0, %1, %2\"\n [(set_attr \"type\" \"fdivd\")])\n \n (define_insn \"divxf3\"\n   [(set (match_operand:XF 0 \"s_register_operand\" \"=f,f\")\n \t(div:XF (match_operand:XF 1 \"fpu_rhs_operand\" \"f,G\")\n \t\t(match_operand:XF 2 \"fpu_rhs_operand\" \"fG,f\")))]\n-  \"ENABLE_XF_PATTERNS\"\n+  \"ENABLE_XF_PATTERNS && TARGET_HARD_FLOAT\"\n   \"@\n    dvf%?e\\\\t%0, %1, %2\n    rdf%?e\\\\t%0, %2, %1\"\n@@ -790,15 +790,15 @@\n   [(set (match_operand:SF 0 \"s_register_operand\" \"=f\")\n \t(mod:SF (match_operand:SF 1 \"s_register_operand\" \"f\")\n \t\t(match_operand:SF 2 \"fpu_rhs_operand\" \"fG\")))]\n-  \"\"\n+  \"TARGET_HARD_FLOAT\"\n   \"rmf%?s\\\\t%0, %1, %2\"\n [(set_attr \"type\" \"fdivs\")])\n \n (define_insn \"moddf3\"\n   [(set (match_operand:DF 0 \"s_register_operand\" \"=f\")\n \t(mod:DF (match_operand:DF 1 \"s_register_operand\" \"f\")\n \t\t(match_operand:DF 2 \"fpu_rhs_operand\" \"fG\")))]\n-  \"\"\n+  \"TARGET_HARD_FLOAT\"\n   \"rmf%?d\\\\t%0, %1, %2\"\n [(set_attr \"type\" \"fdivd\")])\n \n@@ -807,7 +807,7 @@\n \t(mod:DF (float_extend:DF\n \t\t (match_operand:SF 1 \"s_register_operand\" \"f\"))\n \t\t(match_operand:DF 2 \"fpu_rhs_operand\" \"fG\")))]\n-  \"\"\n+  \"TARGET_HARD_FLOAT\"\n   \"rmf%?d\\\\t%0, %1, %2\"\n [(set_attr \"type\" \"fdivd\")])\n \n@@ -816,7 +816,7 @@\n \t(mod:DF (match_operand:DF 1 \"s_register_operand\" \"f\")\n \t\t(float_extend:DF\n \t\t (match_operand:SF 2 \"s_register_operand\" \"f\"))))]\n-  \"\"\n+  \"TARGET_HARD_FLOAT\"\n   \"rmf%?d\\\\t%0, %1, %2\"\n [(set_attr \"type\" \"fdivd\")])\n \n@@ -826,15 +826,15 @@\n \t\t (match_operand:SF 1 \"s_register_operand\" \"f\"))\n \t\t(float_extend:DF\n \t\t (match_operand:SF 2 \"s_register_operand\" \"f\"))))]\n-  \"\"\n+  \"TARGET_HARD_FLOAT\"\n   \"rmf%?d\\\\t%0, %1, %2\"\n [(set_attr \"type\" \"fdivd\")])\n \n (define_insn \"modxf3\"\n   [(set (match_operand:XF 0 \"s_register_operand\" \"=f\")\n \t(mod:XF (match_operand:XF 1 \"s_register_operand\" \"f\")\n \t\t(match_operand:XF 2 \"fpu_rhs_operand\" \"fG\")))]\n-  \"ENABLE_XF_PATTERNS\"\n+  \"ENABLE_XF_PATTERNS && TARGET_HARD_FLOAT\"\n   \"rmf%?e\\\\t%0, %1, %2\"\n [(set_attr \"type\" \"fdivx\")])\n \f\n@@ -1463,29 +1463,29 @@\n (define_insn \"negsf2\"\n   [(set (match_operand:SF 0 \"s_register_operand\" \"=f\")\n \t(neg:SF (match_operand:SF 1 \"s_register_operand\" \"f\")))]\n-  \"\"\n+  \"TARGET_HARD_FLOAT\"\n   \"mnf%?s\\\\t%0, %1\"\n [(set_attr \"type\" \"ffarith\")])\n \n (define_insn \"negdf2\"\n   [(set (match_operand:DF 0 \"s_register_operand\" \"=f\")\n \t(neg:DF (match_operand:DF 1 \"s_register_operand\" \"f\")))]\n-  \"\"\n+  \"TARGET_HARD_FLOAT\"\n   \"mnf%?d\\\\t%0, %1\"\n [(set_attr \"type\" \"ffarith\")])\n \n (define_insn \"\"\n   [(set (match_operand:DF 0 \"s_register_operand\" \"=f\")\n \t(neg:DF (float_extend:DF\n \t\t (match_operand:SF 1 \"s_register_operand\" \"f\"))))]\n-  \"\"\n+  \"TARGET_HARD_FLOAT\"\n   \"mnf%?d\\\\t%0, %1\"\n [(set_attr \"type\" \"ffarith\")])\n \n (define_insn \"negxf2\"\n   [(set (match_operand:XF 0 \"s_register_operand\" \"=f\")\n \t(neg:XF (match_operand:XF 1 \"s_register_operand\" \"f\")))]\n-  \"ENABLE_XF_PATTERNS\"\n+  \"ENABLE_XF_PATTERNS && TARGET_HARD_FLOAT\"\n   \"mnf%?e\\\\t%0, %1\"\n [(set_attr \"type\" \"ffarith\")])\n \n@@ -1519,116 +1519,116 @@\n (define_insn \"abssf2\"\n   [(set (match_operand:SF 0 \"s_register_operand\" \"=f\")\n \t (abs:SF (match_operand:SF 1 \"s_register_operand\" \"f\")))]\n-  \"\"\n+  \"TARGET_HARD_FLOAT\"\n   \"abs%?s\\\\t%0, %1\"\n [(set_attr \"type\" \"ffarith\")])\n \n (define_insn \"absdf2\"\n   [(set (match_operand:DF 0 \"s_register_operand\" \"=f\")\n \t(abs:DF (match_operand:DF 1 \"s_register_operand\" \"f\")))]\n-  \"\"\n+  \"TARGET_HARD_FLOAT\"\n   \"abs%?d\\\\t%0, %1\"\n [(set_attr \"type\" \"ffarith\")])\n \n (define_insn \"\"\n   [(set (match_operand:DF 0 \"s_register_operand\" \"=f\")\n \t(abs:DF (float_extend:DF\n \t\t (match_operand:SF 1 \"s_register_operand\" \"f\"))))]\n-  \"\"\n+  \"TARGET_HARD_FLOAT\"\n   \"abs%?d\\\\t%0, %1\"\n [(set_attr \"type\" \"ffarith\")])\n \n (define_insn \"absxf2\"\n   [(set (match_operand:XF 0 \"s_register_operand\" \"=f\")\n \t(abs:XF (match_operand:XF 1 \"s_register_operand\" \"f\")))]\n-  \"ENABLE_XF_PATTERNS\"\n+  \"ENABLE_XF_PATTERNS && TARGET_HARD_FLOAT\"\n   \"abs%?e\\\\t%0, %1\"\n [(set_attr \"type\" \"ffarith\")])\n \n (define_insn \"sqrtsf2\"\n   [(set (match_operand:SF 0 \"s_register_operand\" \"=f\")\n \t(sqrt:SF (match_operand:SF 1 \"s_register_operand\" \"f\")))]\n-  \"\"\n+  \"TARGET_HARD_FLOAT\"\n   \"sqt%?s\\\\t%0, %1\"\n [(set_attr \"type\" \"float_em\")])\n \n (define_insn \"sqrtdf2\"\n   [(set (match_operand:DF 0 \"s_register_operand\" \"=f\")\n \t(sqrt:DF (match_operand:DF 1 \"s_register_operand\" \"f\")))]\n-  \"\"\n+  \"TARGET_HARD_FLOAT\"\n   \"sqt%?d\\\\t%0, %1\"\n [(set_attr \"type\" \"float_em\")])\n \n (define_insn \"\"\n   [(set (match_operand:DF 0 \"s_register_operand\" \"=f\")\n \t(sqrt:DF (float_extend:DF\n \t\t  (match_operand:SF 1 \"s_register_operand\" \"f\"))))]\n-  \"\"\n+  \"TARGET_HARD_FLOAT\"\n   \"sqt%?d\\\\t%0, %1\"\n [(set_attr \"type\" \"float_em\")])\n \n (define_insn \"sqrtxf2\"\n   [(set (match_operand:XF 0 \"s_register_operand\" \"=f\")\n \t(sqrt:XF (match_operand:XF 1 \"s_register_operand\" \"f\")))]\n-  \"ENABLE_XF_PATTERNS\"\n+  \"ENABLE_XF_PATTERNS && TARGET_HARD_FLOAT\"\n   \"sqt%?e\\\\t%0, %1\"\n [(set_attr \"type\" \"float_em\")])\n \n (define_insn \"sinsf2\"\n   [(set (match_operand:SF 0 \"s_register_operand\" \"=f\")\n \t(unspec:SF [(match_operand:SF 1 \"s_register_operand\" \"f\")] 0))]\n-  \"\"\n+  \"TARGET_HARD_FLOAT\"\n   \"sin%?s\\\\t%0, %1\"\n [(set_attr \"type\" \"float_em\")])\n \n (define_insn \"sindf2\"\n   [(set (match_operand:DF 0 \"s_register_operand\" \"=f\")\n \t(unspec:DF [(match_operand:DF 1 \"s_register_operand\" \"f\")] 0))]\n-  \"\"\n+  \"TARGET_HARD_FLOAT\"\n   \"sin%?d\\\\t%0, %1\"\n [(set_attr \"type\" \"float_em\")])\n \n (define_insn \"\"\n   [(set (match_operand:DF 0 \"s_register_operand\" \"=f\")\n \t(unspec:DF [(float_extend:DF\n \t\t     (match_operand:SF 1 \"s_register_operand\" \"f\"))] 0))]\n-  \"\"\n+  \"TARGET_HARD_FLOAT\"\n   \"sin%?d\\\\t%0, %1\"\n [(set_attr \"type\" \"float_em\")])\n \n (define_insn \"sinxf2\"\n   [(set (match_operand:XF 0 \"s_register_operand\" \"=f\")\n \t(unspec:XF [(match_operand:XF 1 \"s_register_operand\" \"f\")] 0))]\n-  \"ENABLE_XF_PATTERNS\"\n+  \"ENABLE_XF_PATTERNS && TARGET_HARD_FLOAT\"\n   \"sin%?e\\\\t%0, %1\"\n [(set_attr \"type\" \"float_em\")])\n \n (define_insn \"cossf2\"\n   [(set (match_operand:SF 0 \"s_register_operand\" \"=f\")\n \t(unspec:SF [(match_operand:SF 1 \"s_register_operand\" \"f\")] 1))]\n-  \"\"\n+  \"TARGET_HARD_FLOAT\"\n   \"cos%?s\\\\t%0, %1\"\n [(set_attr \"type\" \"float_em\")])\n \n (define_insn \"cosdf2\"\n   [(set (match_operand:DF 0 \"s_register_operand\" \"=f\")\n \t(unspec:DF [(match_operand:DF 1 \"s_register_operand\" \"f\")] 1))]\n-  \"\"\n+  \"TARGET_HARD_FLOAT\"\n   \"cos%?d\\\\t%0, %1\"\n [(set_attr \"type\" \"float_em\")])\n \n (define_insn \"\"\n   [(set (match_operand:DF 0 \"s_register_operand\" \"=f\")\n \t(unspec:DF [(float_extend:DF\n \t\t     (match_operand:SF 1 \"s_register_operand\" \"f\"))] 1))]\n-  \"\"\n+  \"TARGET_HARD_FLOAT\"\n   \"cos%?d\\\\t%0, %1\"\n [(set_attr \"type\" \"float_em\")])\n \n (define_insn \"cosxf2\"\n   [(set (match_operand:XF 0 \"s_register_operand\" \"=f\")\n \t(unspec:XF [(match_operand:XF 1 \"s_register_operand\" \"f\")] 1))]\n-  \"ENABLE_XF_PATTERNS\"\n+  \"ENABLE_XF_PATTERNS && TARGET_HARD_FLOAT\"\n   \"cos%?e\\\\t%0, %1\"\n [(set_attr \"type\" \"float_em\")])\n \n@@ -1669,42 +1669,42 @@\n (define_insn \"floatsisf2\"\n   [(set (match_operand:SF 0 \"s_register_operand\" \"=f\")\n \t(float:SF (match_operand:SI 1 \"s_register_operand\" \"r\")))]\n-  \"\"\n+  \"TARGET_HARD_FLOAT\"\n   \"flt%?s\\\\t%0, %1\"\n [(set_attr \"type\" \"r_2_f\")])\n \n (define_insn \"floatsidf2\"\n   [(set (match_operand:DF 0 \"s_register_operand\" \"=f\")\n \t(float:DF (match_operand:SI 1 \"s_register_operand\" \"r\")))]\n-  \"\"\n+  \"TARGET_HARD_FLOAT\"\n   \"flt%?d\\\\t%0, %1\"\n [(set_attr \"type\" \"r_2_f\")])\n \n (define_insn \"floatsixf2\"\n   [(set (match_operand:XF 0 \"s_register_operand\" \"=f\")\n \t(float:XF (match_operand:SI 1 \"s_register_operand\" \"r\")))]\n-  \"ENABLE_XF_PATTERNS\"\n+  \"ENABLE_XF_PATTERNS && TARGET_HARD_FLOAT\"\n   \"flt%?e\\\\t%0, %1\"\n [(set_attr \"type\" \"r_2_f\")])\n \n (define_insn \"fix_truncsfsi2\"\n   [(set (match_operand:SI 0 \"s_register_operand\" \"=r\")\n \t(fix:SI (match_operand:SF 1 \"s_register_operand\" \"f\")))]\n-  \"\"\n+  \"TARGET_HARD_FLOAT\"\n   \"fix%?z\\\\t%0, %1\"\n [(set_attr \"type\" \"f_2_r\")])\n \n (define_insn \"fix_truncdfsi2\"\n   [(set (match_operand:SI 0 \"s_register_operand\" \"=r\")\n \t(fix:SI (match_operand:DF 1 \"s_register_operand\" \"f\")))]\n-  \"\"\n+  \"TARGET_HARD_FLOAT\"\n   \"fix%?z\\\\t%0, %1\"\n [(set_attr \"type\" \"f_2_r\")])\n \n (define_insn \"fix_truncxfsi2\"\n   [(set (match_operand:SI 0 \"s_register_operand\" \"=r\")\n \t(fix:SI (match_operand:XF 1 \"s_register_operand\" \"f\")))]\n-  \"ENABLE_XF_PATTERNS\"\n+  \"ENABLE_XF_PATTERNS && TARGET_HARD_FLOAT\"\n   \"fix%?z\\\\t%0, %1\"\n [(set_attr \"type\" \"f_2_r\")])\n \n@@ -1714,23 +1714,23 @@\n   [(set (match_operand:SF 0 \"s_register_operand\" \"=f\")\n \t(float_truncate:SF\n \t (match_operand:DF 1 \"s_register_operand\" \"f\")))]\n-  \"\"\n+  \"TARGET_HARD_FLOAT\"\n   \"mvf%?s\\\\t%0, %1\"\n [(set_attr \"type\" \"ffarith\")])\n \n (define_insn \"truncxfsf2\"\n   [(set (match_operand:SF 0 \"s_register_operand\" \"=f\")\n \t(float_truncate:SF\n \t (match_operand:XF 1 \"s_register_operand\" \"f\")))]\n-  \"ENABLE_XF_PATTERNS\"\n+  \"ENABLE_XF_PATTERNS && TARGET_HARD_FLOAT\"\n   \"mvf%?s\\\\t%0, %1\"\n [(set_attr \"type\" \"ffarith\")])\n \n (define_insn \"truncxfdf2\"\n   [(set (match_operand:DF 0 \"s_register_operand\" \"=f\")\n \t(float_truncate:DF\n \t (match_operand:XF 1 \"s_register_operand\" \"f\")))]\n-  \"ENABLE_XF_PATTERNS\"\n+  \"ENABLE_XF_PATTERNS && TARGET_HARD_FLOAT\"\n   \"mvf%?d\\\\t%0, %1\"\n [(set_attr \"type\" \"ffarith\")])\n \f\n@@ -1901,21 +1901,21 @@\n (define_insn \"extendsfdf2\"\n   [(set (match_operand:DF 0 \"s_register_operand\" \"=f\")\n \t(float_extend:DF (match_operand:SF 1 \"s_register_operand\" \"f\")))]\n-  \"\"\n+  \"TARGET_HARD_FLOAT\"\n   \"mvf%?d\\\\t%0, %1\"\n [(set_attr \"type\" \"ffarith\")])\n \n (define_insn \"extendsfxf2\"\n   [(set (match_operand:XF 0 \"s_register_operand\" \"=f\")\n \t(float_extend:XF (match_operand:SF 1 \"s_register_operand\" \"f\")))]\n-  \"ENABLE_XF_PATTERNS\"\n+  \"ENABLE_XF_PATTERNS && TARGET_HARD_FLOAT\"\n   \"mvf%?e\\\\t%0, %1\"\n [(set_attr \"type\" \"ffarith\")])\n \n (define_insn \"extenddfxf2\"\n   [(set (match_operand:XF 0 \"s_register_operand\" \"=f\")\n \t(float_extend:XF (match_operand:DF 1 \"s_register_operand\" \"f\")))]\n-  \"ENABLE_XF_PATTERNS\"\n+  \"ENABLE_XF_PATTERNS && TARGET_HARD_FLOAT\"\n   \"mvf%?e\\\\t%0, %1\"\n [(set_attr \"type\" \"ffarith\")])\n \n@@ -2071,7 +2071,7 @@\n              (ior (eq_attr \"alternative\" \"5\")\n \t\t  (eq_attr \"alternative\" \"6\")) (const_int 16)]\n             (const_int 4)))\n- (set_attr \"type\" \"load,load,*,*,store1,*,*\")])\n+ (set_attr \"type\" \"load,load,*,*,store1,*,*,*\")])\n \n (define_split\n   [(set (match_operand:SI 0 \"s_register_operand\" \"\")\n@@ -2438,7 +2438,8 @@\n (define_insn \"\"\n   [(set (match_operand:SF 0 \"general_operand\" \"=f,f,f,m,f,r,r,r,m\")\n \t(match_operand:SF 1 \"general_operand\" \"fG,H,m,f,r,f,r,m,r\"))]\n-  \"GET_CODE (operands[0]) != MEM || register_operand (operands[1], SFmode)\"\n+  \"TARGET_HARD_FLOAT\n+   && (GET_CODE (operands[0]) != MEM || register_operand (operands[1], SFmode))\"\n   \"@\n    mvf%?s\\\\t%0, %1\n    mnf%?s\\\\t%0, #%N1\n@@ -2453,6 +2454,22 @@\n  (set_attr \"type\"\n \t \"ffarith,ffarith,f_load,f_store,r_mem_f,f_mem_r,*,load,store1\")])\n \n+;; Exactly the same as above, except that all `f' cases are deleted.\n+;; This is necessary to prevent reload from ever trying to use a `f' reg\n+;; when -msoft-float.\n+\n+(define_insn \"*movsf_soft_insn\"\n+  [(set (match_operand:SF 0 \"general_operand\" \"=r,r,m\")\n+\t(match_operand:SF 1 \"general_operand\" \"r,m,r\"))]\n+  \"TARGET_SOFT_FLOAT\n+   && (GET_CODE (operands[0]) != MEM || register_operand (operands[1], SFmode))\"\n+  \"@\n+   mov%?\\\\t%0, %1\n+   ldr%?\\\\t%0, %1\\\\t%@ float\n+   str%?\\\\t%1, %0\\\\t%@ float\"\n+[(set_attr \"length\" \"4,4,4\")\n+ (set_attr \"type\" \"*,load,store1\")])\n+\n (define_expand \"movdf\"\n   [(set (match_operand:DF 0 \"general_operand\" \"\")\n \t(match_operand:DF 1 \"general_operand\" \"\"))]\n@@ -2507,7 +2524,8 @@\n   [(set (match_operand:DF 0 \"general_operand\" \"=r,Q#m,r,f,f,f,f,m,!f,!r,r\")\n \t(match_operand:DF 1 \"general_operand\" \n \t \t\"Q,r,?o,?f,!G,!H,m,f,r,f,??r\"))]\n-  \"GET_CODE (operands[0]) != MEM || register_operand (operands[1], DFmode)\"\n+  \"TARGET_HARD_FLOAT\n+   && (GET_CODE (operands[0]) != MEM || register_operand (operands[1], DFmode))\"\n   \"*\n {\n   rtx ops[3];\n@@ -2547,10 +2565,49 @@\n  (set_attr \"type\" \n \"load,store2,load,ffarith,ffarith,ffarith,f_load,f_store,r_mem_f,f_mem_r,*\")])\n \n+;; Exactly the same as above, except that all `f' cases are deleted.\n+;; This is necessary to prevent reload from ever trying to use a `f' reg\n+;; when -msoft-float.\n+\n+(define_insn \"*movdf_soft_insn\"\n+  [(set (match_operand:DF 0 \"general_operand\" \"=r,Q#m,r,r\")\n+\t(match_operand:DF 1 \"general_operand\" \n+\t \t\"Q,r,?o,??r\"))]\n+  \"TARGET_SOFT_FLOAT\n+   && (GET_CODE (operands[0]) != MEM || register_operand (operands[1], DFmode))\"\n+  \"*\n+{\n+  rtx ops[3];\n+\n+  switch (which_alternative)\n+    {\n+    case 0:\n+      return \\\"ldm%?ia\\\\t%m1, {%0, %R0}\\\\t%@ double\\\";\n+\n+    case 1:\n+      return \\\"stm%?ia\\\\t%m0, {%1, %R1}\\\\t%@ double\\\";\n+\n+    case 2:\n+      ops[0] = operands[0];\n+      ops[1] = XEXP (XEXP (operands[1], 0), 0);\n+      ops[2] = XEXP (XEXP (operands[1], 0), 1);\n+      if (!INTVAL (ops[2]) || const_ok_for_arm (INTVAL (ops[2])))\n+\toutput_asm_insn (\\\"add%?\\\\t%0, %1, %2\\\", ops);\n+      else\n+\toutput_asm_insn (\\\"sub%?\\\\t%0, %1, #%n2\\\", ops);\n+      return \\\"ldm%?ia\\\\t%0, {%0, %R0}\\\\t%@ double\\\";\n+\n+    case 3: return output_move_double (operands);\n+    }\n+}\n+\"\n+[(set_attr \"length\" \"4,4,8,8\")\n+ (set_attr \"type\" \"load,store2,load,*\")])\n+\n (define_expand \"movxf\"\n   [(set (match_operand:XF 0 \"general_operand\" \"\")\n \t(match_operand:XF 1 \"general_operand\" \"\"))]\n-  \"ENABLE_XF_PATTERNS\"\n+  \"ENABLE_XF_PATTERNS && TARGET_HARD_FLOAT\"\n   \"\")\n \n ;; Even when the XFmode patterns aren't enabled, we enable this after\n@@ -2559,7 +2616,7 @@\n (define_insn \"\"\n   [(set (match_operand:XF 0 \"general_operand\" \"=f,f,f,m,f,r,r\")\n \t(match_operand:XF 1 \"general_operand\" \"fG,H,m,f,r,f,r\"))]\n-  \"ENABLE_XF_PATTERNS || reload_completed\"\n+  \"TARGET_HARD_FLOAT && (ENABLE_XF_PATTERNS || reload_completed)\"\n   \"*\n   switch (which_alternative)\n     {\n@@ -2765,7 +2822,7 @@\n   [(set (reg:CC 24)\n \t(compare:CC (match_operand:SF 0 \"s_register_operand\" \"\")\n \t\t    (match_operand:SF 1 \"fpu_rhs_operand\" \"\")))]\n-  \"\"\n+  \"TARGET_HARD_FLOAT\"\n   \"\n {\n   arm_compare_op0 = operands[0];\n@@ -2779,7 +2836,7 @@\n   [(set (reg:CC 24)\n \t(compare:CC (match_operand:DF 0 \"s_register_operand\" \"\")\n \t\t    (match_operand:DF 1 \"fpu_rhs_operand\" \"\")))]\n-  \"\"\n+  \"TARGET_HARD_FLOAT\"\n   \"\n {\n   arm_compare_op0 = operands[0];\n@@ -2793,7 +2850,7 @@\n   [(set (reg:CC 24)\n \t(compare:CC (match_operand:XF 0 \"s_register_operand\" \"\")\n \t\t    (match_operand:XF 1 \"fpu_rhs_operand\" \"\")))]\n-  \"ENABLE_XF_PATTERNS\"\n+  \"ENABLE_XF_PATTERNS && TARGET_HARD_FLOAT\"\n   \"\n {\n   arm_compare_op0 = operands[0];\n@@ -2845,7 +2902,7 @@\n   [(set (reg:CCFP 24)\n \t(compare:CCFP (match_operand:SF 0 \"s_register_operand\" \"f,f\")\n \t\t      (match_operand:SF 1 \"fpu_add_operand\" \"fG,H\")))]\n-  \"\"\n+  \"TARGET_HARD_FLOAT\"\n   \"@\n    cmf%?\\\\t%0, %1\n    cnf%?\\\\t%0, #%N1\"\n@@ -2856,7 +2913,7 @@\n   [(set (reg:CCFP 24)\n \t(compare:CCFP (match_operand:DF 0 \"s_register_operand\" \"f,f\")\n \t\t      (match_operand:DF 1 \"fpu_add_operand\" \"fG,H\")))]\n-  \"\"\n+  \"TARGET_HARD_FLOAT\"\n   \"@\n    cmf%?\\\\t%0, %1\n    cnf%?\\\\t%0, #%N1\"\n@@ -2868,7 +2925,7 @@\n \t(compare:CCFP (float_extend:DF\n \t\t       (match_operand:SF 0 \"s_register_operand\" \"f,f\"))\n \t\t      (match_operand:DF 1 \"fpu_add_operand\" \"fG,H\")))]\n-  \"\"\n+  \"TARGET_HARD_FLOAT\"\n   \"@\n    cmf%?\\\\t%0, %1\n    cnf%?\\\\t%0, #%N1\"\n@@ -2880,7 +2937,7 @@\n \t(compare:CCFP (match_operand:DF 0 \"s_register_operand\" \"f\")\n \t\t      (float_extend:DF\n \t\t       (match_operand:SF 1 \"s_register_operand\" \"f\"))))]\n-  \"\"\n+  \"TARGET_HARD_FLOAT\"\n   \"cmf%?\\\\t%0, %1\"\n [(set_attr \"conds\" \"set\")\n  (set_attr \"type\" \"f_2_r\")])\n@@ -2889,7 +2946,7 @@\n   [(set (reg:CCFP 24)\n \t(compare:CCFP (match_operand:XF 0 \"s_register_operand\" \"f,f\")\n \t\t      (match_operand:XF 1 \"fpu_add_operand\" \"fG,H\")))]\n-  \"ENABLE_XF_PATTERNS\"\n+  \"ENABLE_XF_PATTERNS && TARGET_HARD_FLOAT\"\n   \"@\n    cmf%?\\\\t%0, %1\n    cnf%?\\\\t%0, #%N1\"\n@@ -2900,7 +2957,7 @@\n   [(set (reg:CCFPE 24)\n \t(compare:CCFPE (match_operand:SF 0 \"s_register_operand\" \"f,f\")\n \t\t       (match_operand:SF 1 \"fpu_add_operand\" \"fG,H\")))]\n-  \"\"\n+  \"TARGET_HARD_FLOAT\"\n   \"@\n    cmf%?e\\\\t%0, %1\n    cnf%?e\\\\t%0, #%N1\"\n@@ -2911,7 +2968,7 @@\n   [(set (reg:CCFPE 24)\n \t(compare:CCFPE (match_operand:DF 0 \"s_register_operand\" \"f,f\")\n \t\t       (match_operand:DF 1 \"fpu_add_operand\" \"fG,H\")))]\n-  \"\"\n+  \"TARGET_HARD_FLOAT\"\n   \"@\n    cmf%?e\\\\t%0, %1\n    cnf%?e\\\\t%0, #%N1\"\n@@ -2923,7 +2980,7 @@\n \t(compare:CCFPE (float_extend:DF\n \t\t\t(match_operand:SF 0 \"s_register_operand\" \"f,f\"))\n \t\t       (match_operand:DF 1 \"fpu_add_operand\" \"fG,H\")))]\n-  \"\"\n+  \"TARGET_HARD_FLOAT\"\n   \"@\n    cmf%?e\\\\t%0, %1\n    cnf%?e\\\\t%0, #%N1\"\n@@ -2935,7 +2992,7 @@\n \t(compare:CCFPE (match_operand:DF 0 \"s_register_operand\" \"f\")\n \t\t       (float_extend:DF\n \t\t\t(match_operand:SF 1 \"s_register_operand\" \"f\"))))]\n-  \"\"\n+  \"TARGET_HARD_FLOAT\"\n   \"cmf%?e\\\\t%0, %1\"\n [(set_attr \"conds\" \"set\")\n  (set_attr \"type\" \"f_2_r\")])\n@@ -2944,7 +3001,7 @@\n   [(set (reg:CCFPE 24)\n \t(compare:CCFPE (match_operand:XF 0 \"s_register_operand\" \"f,f\")\n \t\t       (match_operand:XF 1 \"fpu_add_operand\" \"fG,H\")))]\n-  \"ENABLE_XF_PATTERNS\"\n+  \"ENABLE_XF_PATTERNS && TARGET_HARD_FLOAT\"\n   \"@\n    cmf%?e\\\\t%0, %1\n    cnf%?e\\\\t%0, #%N1\""}]}