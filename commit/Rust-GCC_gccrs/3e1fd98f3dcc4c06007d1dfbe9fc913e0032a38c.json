{"sha": "3e1fd98f3dcc4c06007d1dfbe9fc913e0032a38c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2UxZmQ5OGYzZGNjNGMwNjAwN2QxZGZiZTlmYzkxM2UwMDMyYTM4Yw==", "commit": {"author": {"name": "Thomas Quinot", "email": "quinot@adacore.com", "date": "2005-11-15T13:50:37Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2005-11-15T13:50:37Z"}, "message": "g-soccon.ads: Minor reformatting.\n\n2005-11-14  Thomas Quinot  <quinot@adacore.com>\n\n\t* g-soccon.ads: Minor reformatting. Update comments.\n\n\t* gsocket.h: Include <sys/times.h> in the VxWorks case, in order to\n\tgain visibility on the declaration of struct timeval.\n\n\t* g-soccon-freebsd.ads,\n\tg-soccon-darwin.ads,\n\tg-soccon-tru64.ads,\n\tg-soccon-aix.ads,\n\tg-soccon-irix.ads,\n\tg-soccon-hpux.ads,\n\tg-soccon-solaris.ads,\n\tg-soccon-vms.ads,\n\tg-soccon-mingw.ads,\n\tg-soccon-vxworks.ads (SIZEOF_tv_sec, SIZEOF_tv_usec): New constants.\n\n\t* g-soccon-hpux-ia64.ads, g-soccon-linux-ppc.ads,\n\tg-soccon-solaris-64.ads, g-soccon-linux-64.ads,\n\tg-soccon-linux-x86.ads: New files.\n\n\t* g-socthi-mingw.adb: \n\t(Socket_Error_Message): Remove redundant use of GNAT.Sockets.Constants\n\n\t* g-socthi-vxworks.ads, g-socthi-vms.ads, g-socthi-mingw.ads\n\t(time_t, suseconds_t): New types constructed to match the tv_sec\n\tand tv_usec fields of C struct timeval.\n\t(Timeval): Construct structure in terms of the new types.\n\t(Host_Errno): New function (imported from socket.c), returns last hosts\n\tdatabase error.\n\n\t* g-socthi-vxworks.adb:  Add error handling circuitry.\n\n\t* g-socket.ads, g-socket.adb (To_Timeval): Reflect change of type for\n\tcomponents of struct timeval.\n\t(Get_Host_By_Name, Get_Host_By_Address): Fix error reporting circuitry.\n\t(Check_Selector): In error conditions, clear internal socket sets to\n\tavoid a memory leak.\n\t(Get_Socket_Option, Set_Socket_Option): Support for Multicast_If,\n\tSend_Timeout, Receive_Timeout.\n\n\t* g-socthi.ads (time_t, suseconds_t): New types constructed to match\n\tthe tv_sec and tv_usec fields of C struct timeval.\n\t(Timeval): Construct structure in terms of the new types.\n\t(Host_Errno): New function (imported from socket.c), returns last hosts\n\tdatabase error.\n\n\t* socket.c (__gnat_get_h_errno): New function to retrieve h_errno, the\n\thosts database last error code.\n\n\t* gen-soccon.c: Complete value expansion should not be performed on\n\tTARGET, as it has the form of a math expression, and some components\n\tmay be platform-defined macros.\n\tFor VxWorks, generate the OK and ERROR values.\n\tNew constants giving the sizes of the components of C struct timeval.\n\nFrom-SVN: r106949", "tree": {"sha": "d1576a6497bfbada92fc3b0b451f8c360df4d37d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d1576a6497bfbada92fc3b0b451f8c360df4d37d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3e1fd98f3dcc4c06007d1dfbe9fc913e0032a38c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e1fd98f3dcc4c06007d1dfbe9fc913e0032a38c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3e1fd98f3dcc4c06007d1dfbe9fc913e0032a38c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e1fd98f3dcc4c06007d1dfbe9fc913e0032a38c/comments", "author": null, "committer": null, "parents": [{"sha": "b4f32d07aa53d6831a12a7aabb1c74ee4e7ba269", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4f32d07aa53d6831a12a7aabb1c74ee4e7ba269", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b4f32d07aa53d6831a12a7aabb1c74ee4e7ba269"}], "stats": {"total": 1806, "additions": 1489, "deletions": 317}, "files": [{"sha": "06773f24c08e2428fe0459be47266c233defdb1f", "filename": "gcc/ada/g-soccon-aix.ads", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e1fd98f3dcc4c06007d1dfbe9fc913e0032a38c/gcc%2Fada%2Fg-soccon-aix.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e1fd98f3dcc4c06007d1dfbe9fc913e0032a38c/gcc%2Fada%2Fg-soccon-aix.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-soccon-aix.ads?ref=3e1fd98f3dcc4c06007d1dfbe9fc913e0032a38c", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2000-2005 Free Software Foundation, Inc.          --\n+--          Copyright (C) 2000-2005, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -35,7 +35,7 @@\n --  by the GNAT.Sockets package (g-socket.ads). This package should not be\n --  directly with'ed by an applications program.\n \n---  This is the version for powerpc-ibm-aix5.1.0.0\n+--  This is the version for powerpc-ibm-aix5.3.0.0\n --  This file is generated automatically, do not modify it by hand! Instead,\n --  make changes to gen-soccon.c and re-run it on each target.\n \n@@ -169,4 +169,13 @@ package GNAT.Sockets.Constants is\n \n    IOV_MAX            : constant :=          16; --  Maximum writev iovcnt\n \n+   ----------------------\n+   -- Type definitions --\n+   ----------------------\n+\n+   --  Sizes (in bytes) of the components of struct timeval\n+\n+   SIZEOF_tv_sec      : constant :=           4; --  tv_sec\n+   SIZEOF_tv_usec     : constant :=           4; --  tv_usec\n+\n end GNAT.Sockets.Constants;"}, {"sha": "4ae827d35741cfd581a1f36de00252eda8994831", "filename": "gcc/ada/g-soccon-darwin.ads", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e1fd98f3dcc4c06007d1dfbe9fc913e0032a38c/gcc%2Fada%2Fg-soccon-darwin.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e1fd98f3dcc4c06007d1dfbe9fc913e0032a38c/gcc%2Fada%2Fg-soccon-darwin.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-soccon-darwin.ads?ref=3e1fd98f3dcc4c06007d1dfbe9fc913e0032a38c", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2000-2005 Free Software Foundation, Inc.          --\n+--          Copyright (C) 2000-2005, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -169,4 +169,13 @@ package GNAT.Sockets.Constants is\n \n    IOV_MAX            : constant :=  2147483647; --  Maximum writev iovcnt\n \n+   ----------------------\n+   -- Type definitions --\n+   ----------------------\n+\n+   --  Sizes (in bytes) of the components of struct timeval\n+\n+   SIZEOF_tv_sec      : constant :=           4; --  tv_sec\n+   SIZEOF_tv_usec     : constant :=           4; --  tv_usec\n+\n end GNAT.Sockets.Constants;"}, {"sha": "964e75bc83be608b7024b32d52c5bea60bd520ea", "filename": "gcc/ada/g-soccon-freebsd.ads", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e1fd98f3dcc4c06007d1dfbe9fc913e0032a38c/gcc%2Fada%2Fg-soccon-freebsd.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e1fd98f3dcc4c06007d1dfbe9fc913e0032a38c/gcc%2Fada%2Fg-soccon-freebsd.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-soccon-freebsd.ads?ref=3e1fd98f3dcc4c06007d1dfbe9fc913e0032a38c", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2000-2005 Free Software Foundation, Inc.          --\n+--          Copyright (C) 2000-2005, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -169,4 +169,13 @@ package GNAT.Sockets.Constants is\n \n    IOV_MAX            : constant :=        1024; --  Maximum writev iovcnt\n \n+   ----------------------\n+   -- Type definitions --\n+   ----------------------\n+\n+   --  Sizes (in bytes) of the components of struct timeval\n+\n+   SIZEOF_tv_sec      : constant :=           4; --  tv_sec\n+   SIZEOF_tv_usec     : constant :=           4; --  tv_usec\n+\n end GNAT.Sockets.Constants;"}, {"sha": "ea7a63d21fa0f729023fa20f01f064b45cde9c77", "filename": "gcc/ada/g-soccon-hpux-ia64.ads", "status": "added", "additions": 181, "deletions": 0, "changes": 181, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e1fd98f3dcc4c06007d1dfbe9fc913e0032a38c/gcc%2Fada%2Fg-soccon-hpux-ia64.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e1fd98f3dcc4c06007d1dfbe9fc913e0032a38c/gcc%2Fada%2Fg-soccon-hpux-ia64.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-soccon-hpux-ia64.ads?ref=3e1fd98f3dcc4c06007d1dfbe9fc913e0032a38c", "patch": "@@ -0,0 +1,181 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                         GNAT COMPILER COMPONENTS                         --\n+--                                                                          --\n+--               G N A T . S O C K E T S . C O N S T A N T S                --\n+--                                                                          --\n+--                                 S p e c                                  --\n+--                                                                          --\n+--          Copyright (C) 2000-2005, Free Software Foundation, Inc.         --\n+--                                                                          --\n+-- GNAT is free software;  you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 2,  or (at your option) any later ver- --\n+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n+-- for  more details.  You should have  received  a copy of the GNU General --\n+-- Public License  distributed with GNAT;  see file COPYING.  If not, write --\n+-- to  the  Free Software Foundation,  51  Franklin  Street,  Fifth  Floor, --\n+-- Boston, MA 02110-1301, USA.                                              --\n+--                                                                          --\n+-- As a special exception,  if other files  instantiate  generics from this --\n+-- unit, or you link  this unit with other files  to produce an executable, --\n+-- this  unit  does not  by itself cause  the resulting  executable  to  be --\n+-- covered  by the  GNU  General  Public  License.  This exception does not --\n+-- however invalidate  any other reasons why  the executable file  might be --\n+-- covered by the  GNU Public License.                                      --\n+--                                                                          --\n+-- GNAT was originally developed  by the GNAT team at  New York University. --\n+-- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+--  This package provides target dependent definitions of constant for use\n+--  by the GNAT.Sockets package (g-socket.ads). This package should not be\n+--  directly with'ed by an applications program.\n+\n+--  This is the version for ia64-hp-hpux11.23\n+--  This file is generated automatically, do not modify it by hand! Instead,\n+--  make changes to gen-soccon.c and re-run it on each target.\n+\n+package GNAT.Sockets.Constants is\n+\n+   --------------\n+   -- Families --\n+   --------------\n+\n+   AF_INET            : constant :=           2; --  IPv4 address family\n+   AF_INET6           : constant :=          22; --  IPv6 address family\n+\n+   -----------\n+   -- Modes --\n+   -----------\n+\n+   SOCK_STREAM        : constant :=           1; --  Stream socket\n+   SOCK_DGRAM         : constant :=           2; --  Datagram socket\n+\n+   -------------------\n+   -- Socket errors --\n+   -------------------\n+\n+   EACCES             : constant :=          13; --  Permission denied\n+   EADDRINUSE         : constant :=         226; --  Address already in use\n+   EADDRNOTAVAIL      : constant :=         227; --  Cannot assign address\n+   EAFNOSUPPORT       : constant :=         225; --  Addr family not supported\n+   EALREADY           : constant :=         244; --  Operation in progress\n+   EBADF              : constant :=           9; --  Bad file descriptor\n+   ECONNABORTED       : constant :=         231; --  Connection aborted\n+   ECONNREFUSED       : constant :=         239; --  Connection refused\n+   ECONNRESET         : constant :=         232; --  Connection reset by peer\n+   EDESTADDRREQ       : constant :=         217; --  Destination addr required\n+   EFAULT             : constant :=          14; --  Bad address\n+   EHOSTDOWN          : constant :=         241; --  Host is down\n+   EHOSTUNREACH       : constant :=         242; --  No route to host\n+   EINPROGRESS        : constant :=         245; --  Operation now in progress\n+   EINTR              : constant :=           4; --  Interrupted system call\n+   EINVAL             : constant :=          22; --  Invalid argument\n+   EIO                : constant :=           5; --  Input output error\n+   EISCONN            : constant :=         234; --  Socket already connected\n+   ELOOP              : constant :=         249; --  Too many symbolic lynks\n+   EMFILE             : constant :=          24; --  Too many open files\n+   EMSGSIZE           : constant :=         218; --  Message too long\n+   ENAMETOOLONG       : constant :=         248; --  Name too long\n+   ENETDOWN           : constant :=         228; --  Network is down\n+   ENETRESET          : constant :=         230; --  Disconn. on network reset\n+   ENETUNREACH        : constant :=         229; --  Network is unreachable\n+   ENOBUFS            : constant :=         233; --  No buffer space available\n+   ENOPROTOOPT        : constant :=         220; --  Protocol not available\n+   ENOTCONN           : constant :=         235; --  Socket not connected\n+   ENOTSOCK           : constant :=         216; --  Operation on non socket\n+   EOPNOTSUPP         : constant :=         223; --  Operation not supported\n+   EPFNOSUPPORT       : constant :=         224; --  Unknown protocol family\n+   EPROTONOSUPPORT    : constant :=         221; --  Unknown protocol\n+   EPROTOTYPE         : constant :=         219; --  Unknown protocol type\n+   ESHUTDOWN          : constant :=         236; --  Cannot send once shutdown\n+   ESOCKTNOSUPPORT    : constant :=         222; --  Socket type not supported\n+   ETIMEDOUT          : constant :=         238; --  Connection timed out\n+   ETOOMANYREFS       : constant :=         237; --  Too many references\n+   EWOULDBLOCK        : constant :=         246; --  Operation would block\n+\n+   -----------------\n+   -- Host errors --\n+   -----------------\n+\n+   HOST_NOT_FOUND     : constant :=           1; --  Unknown host\n+   TRY_AGAIN          : constant :=           2; --  Host name lookup failure\n+   NO_DATA            : constant :=           4; --  No data record for name\n+   NO_RECOVERY        : constant :=           3; --  Non recoverable errors\n+\n+   -------------------\n+   -- Control flags --\n+   -------------------\n+\n+   FIONBIO            : constant := -2147195266; --  Set/clear non-blocking io\n+   FIONREAD           : constant :=  1074030207; --  How many bytes to read\n+\n+   --------------------\n+   -- Shutdown modes --\n+   --------------------\n+\n+   SHUT_RD            : constant :=           0; --  No more recv\n+   SHUT_WR            : constant :=           1; --  No more send\n+   SHUT_RDWR          : constant :=           2; --  No more recv/send\n+\n+   ---------------------\n+   -- Protocol levels --\n+   ---------------------\n+\n+   SOL_SOCKET         : constant :=       65535; --  Options for socket level\n+   IPPROTO_IP         : constant :=           0; --  Dummy protocol for IP\n+   IPPROTO_UDP        : constant :=          17; --  UDP\n+   IPPROTO_TCP        : constant :=           6; --  TCP\n+\n+   -------------------\n+   -- Request flags --\n+   -------------------\n+\n+   MSG_OOB            : constant :=           1; --  Process out-of-band data\n+   MSG_PEEK           : constant :=           2; --  Peek at incoming data\n+   MSG_EOR            : constant :=           8; --  Send end of record\n+   MSG_WAITALL        : constant :=          64; --  Wait for full reception\n+   MSG_NOSIGNAL       : constant :=          -1; --  No SIGPIPE on send\n+   MSG_Forced_Flags   : constant :=           0;\n+   --  Flags set on all send(2) calls\n+\n+   --------------------\n+   -- Socket options --\n+   --------------------\n+\n+   TCP_NODELAY        : constant :=           1; --  Do not coalesce packets\n+   SO_REUSEADDR       : constant :=           4; --  Bind reuse local address\n+   SO_KEEPALIVE       : constant :=           8; --  Enable keep-alive msgs\n+   SO_LINGER          : constant :=         128; --  Defer close to flush data\n+   SO_BROADCAST       : constant :=          32; --  Can send broadcast msgs\n+   SO_SNDBUF          : constant :=        4097; --  Set/get send buffer size\n+   SO_RCVBUF          : constant :=        4098; --  Set/get recv buffer size\n+   SO_SNDTIMEO        : constant :=        4101; --  Emission timeout\n+   SO_RCVTIMEO        : constant :=        4102; --  Reception timeout\n+   SO_ERROR           : constant :=        4103; --  Get/clear error status\n+   IP_MULTICAST_IF    : constant :=           2; --  Set/get mcast interface\n+   IP_MULTICAST_TTL   : constant :=           3; --  Set/get multicast TTL\n+   IP_MULTICAST_LOOP  : constant :=           4; --  Set/get mcast loopback\n+   IP_ADD_MEMBERSHIP  : constant :=           5; --  Join a multicast group\n+   IP_DROP_MEMBERSHIP : constant :=           6; --  Leave a multicast group\n+\n+   -------------------\n+   -- System limits --\n+   -------------------\n+\n+   IOV_MAX            : constant :=          16; --  Maximum writev iovcnt\n+\n+   ----------------------\n+   -- Type definitions --\n+   ----------------------\n+\n+   --  Sizes (in bytes) of the components of struct timeval\n+\n+   SIZEOF_tv_sec      : constant :=           8; --  tv_sec\n+   SIZEOF_tv_usec     : constant :=           8; --  tv_usec\n+\n+end GNAT.Sockets.Constants;"}, {"sha": "0b6012e0ee606fcc6221d26096b966eb9bec00b8", "filename": "gcc/ada/g-soccon-hpux.ads", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e1fd98f3dcc4c06007d1dfbe9fc913e0032a38c/gcc%2Fada%2Fg-soccon-hpux.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e1fd98f3dcc4c06007d1dfbe9fc913e0032a38c/gcc%2Fada%2Fg-soccon-hpux.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-soccon-hpux.ads?ref=3e1fd98f3dcc4c06007d1dfbe9fc913e0032a38c", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2000-2005 Free Software Foundation, Inc.          --\n+--          Copyright (C) 2000-2005, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -169,4 +169,13 @@ package GNAT.Sockets.Constants is\n \n    IOV_MAX            : constant :=          16; --  Maximum writev iovcnt\n \n+   ----------------------\n+   -- Type definitions --\n+   ----------------------\n+\n+   --  Sizes (in bytes) of the components of struct timeval\n+\n+   SIZEOF_tv_sec      : constant :=           4; --  tv_sec\n+   SIZEOF_tv_usec     : constant :=           4; --  tv_usec\n+\n end GNAT.Sockets.Constants;"}, {"sha": "3fd365c3470bce1858d662a25420531dd6572d03", "filename": "gcc/ada/g-soccon-irix.ads", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e1fd98f3dcc4c06007d1dfbe9fc913e0032a38c/gcc%2Fada%2Fg-soccon-irix.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e1fd98f3dcc4c06007d1dfbe9fc913e0032a38c/gcc%2Fada%2Fg-soccon-irix.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-soccon-irix.ads?ref=3e1fd98f3dcc4c06007d1dfbe9fc913e0032a38c", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2000-2005 Free Software Foundation, Inc.          --\n+--          Copyright (C) 2000-2005, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -169,4 +169,13 @@ package GNAT.Sockets.Constants is\n \n    IOV_MAX            : constant :=  2147483647; --  Maximum writev iovcnt\n \n+   ----------------------\n+   -- Type definitions --\n+   ----------------------\n+\n+   --  Sizes (in bytes) of the components of struct timeval\n+\n+   SIZEOF_tv_sec      : constant :=           4; --  tv_sec\n+   SIZEOF_tv_usec     : constant :=           4; --  tv_usec\n+\n end GNAT.Sockets.Constants;"}, {"sha": "fc8c507b3a7159867082b06c6d91918b73ec4227", "filename": "gcc/ada/g-soccon-linux-64.ads", "status": "added", "additions": 181, "deletions": 0, "changes": 181, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e1fd98f3dcc4c06007d1dfbe9fc913e0032a38c/gcc%2Fada%2Fg-soccon-linux-64.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e1fd98f3dcc4c06007d1dfbe9fc913e0032a38c/gcc%2Fada%2Fg-soccon-linux-64.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-soccon-linux-64.ads?ref=3e1fd98f3dcc4c06007d1dfbe9fc913e0032a38c", "patch": "@@ -0,0 +1,181 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                         GNAT COMPILER COMPONENTS                         --\n+--                                                                          --\n+--               G N A T . S O C K E T S . C O N S T A N T S                --\n+--                                                                          --\n+--                                 S p e c                                  --\n+--                                                                          --\n+--          Copyright (C) 2000-2005, Free Software Foundation, Inc.         --\n+--                                                                          --\n+-- GNAT is free software;  you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 2,  or (at your option) any later ver- --\n+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n+-- for  more details.  You should have  received  a copy of the GNU General --\n+-- Public License  distributed with GNAT;  see file COPYING.  If not, write --\n+-- to  the  Free Software Foundation,  51  Franklin  Street,  Fifth  Floor, --\n+-- Boston, MA 02110-1301, USA.                                              --\n+--                                                                          --\n+-- As a special exception,  if other files  instantiate  generics from this --\n+-- unit, or you link  this unit with other files  to produce an executable, --\n+-- this  unit  does not  by itself cause  the resulting  executable  to  be --\n+-- covered  by the  GNU  General  Public  License.  This exception does not --\n+-- however invalidate  any other reasons why  the executable file  might be --\n+-- covered by the  GNU Public License.                                      --\n+--                                                                          --\n+-- GNAT was originally developed  by the GNAT team at  New York University. --\n+-- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+--  This package provides target dependent definitions of constant for use\n+--  by the GNAT.Sockets package (g-socket.ads). This package should not be\n+--  directly with'ed by an applications program.\n+\n+--  This is the version for ia64-hp-linux-gnu\n+--  This file is generated automatically, do not modify it by hand! Instead,\n+--  make changes to gen-soccon.c and re-run it on each target.\n+\n+package GNAT.Sockets.Constants is\n+\n+   --------------\n+   -- Families --\n+   --------------\n+\n+   AF_INET            : constant :=            2; --  IPv4 address family\n+   AF_INET6           : constant :=           10; --  IPv6 address family\n+\n+   -----------\n+   -- Modes --\n+   -----------\n+\n+   SOCK_STREAM        : constant :=            1; --  Stream socket\n+   SOCK_DGRAM         : constant :=            2; --  Datagram socket\n+\n+   -------------------\n+   -- Socket errors --\n+   -------------------\n+\n+   EACCES             : constant :=           13; --  Permission denied\n+   EADDRINUSE         : constant :=           98; --  Address already in use\n+   EADDRNOTAVAIL      : constant :=           99; --  Cannot assign address\n+   EAFNOSUPPORT       : constant :=           97; --  Addr family not supported\n+   EALREADY           : constant :=          114; --  Operation in progress\n+   EBADF              : constant :=            9; --  Bad file descriptor\n+   ECONNABORTED       : constant :=          103; --  Connection aborted\n+   ECONNREFUSED       : constant :=          111; --  Connection refused\n+   ECONNRESET         : constant :=          104; --  Connection reset by peer\n+   EDESTADDRREQ       : constant :=           89; --  Destination addr required\n+   EFAULT             : constant :=           14; --  Bad address\n+   EHOSTDOWN          : constant :=          112; --  Host is down\n+   EHOSTUNREACH       : constant :=          113; --  No route to host\n+   EINPROGRESS        : constant :=          115; --  Operation now in progress\n+   EINTR              : constant :=            4; --  Interrupted system call\n+   EINVAL             : constant :=           22; --  Invalid argument\n+   EIO                : constant :=            5; --  Input output error\n+   EISCONN            : constant :=          106; --  Socket already connected\n+   ELOOP              : constant :=           40; --  Too many symbolic lynks\n+   EMFILE             : constant :=           24; --  Too many open files\n+   EMSGSIZE           : constant :=           90; --  Message too long\n+   ENAMETOOLONG       : constant :=           36; --  Name too long\n+   ENETDOWN           : constant :=          100; --  Network is down\n+   ENETRESET          : constant :=          102; --  Disconn. on network reset\n+   ENETUNREACH        : constant :=          101; --  Network is unreachable\n+   ENOBUFS            : constant :=          105; --  No buffer space available\n+   ENOPROTOOPT        : constant :=           92; --  Protocol not available\n+   ENOTCONN           : constant :=          107; --  Socket not connected\n+   ENOTSOCK           : constant :=           88; --  Operation on non socket\n+   EOPNOTSUPP         : constant :=           95; --  Operation not supported\n+   EPFNOSUPPORT       : constant :=           96; --  Unknown protocol family\n+   EPROTONOSUPPORT    : constant :=           93; --  Unknown protocol\n+   EPROTOTYPE         : constant :=           91; --  Unknown protocol type\n+   ESHUTDOWN          : constant :=          108; --  Cannot send once shutdown\n+   ESOCKTNOSUPPORT    : constant :=           94; --  Socket type not supported\n+   ETIMEDOUT          : constant :=          110; --  Connection timed out\n+   ETOOMANYREFS       : constant :=          109; --  Too many references\n+   EWOULDBLOCK        : constant :=           11; --  Operation would block\n+\n+   -----------------\n+   -- Host errors --\n+   -----------------\n+\n+   HOST_NOT_FOUND     : constant :=            1; --  Unknown host\n+   TRY_AGAIN          : constant :=            2; --  Host name lookup failure\n+   NO_DATA            : constant :=            4; --  No data record for name\n+   NO_RECOVERY        : constant :=            3; --  Non recoverable errors\n+\n+   -------------------\n+   -- Control flags --\n+   -------------------\n+\n+   FIONBIO            : constant :=        21537; --  Set/clear non-blocking io\n+   FIONREAD           : constant :=        21531; --  How many bytes to read\n+\n+   --------------------\n+   -- Shutdown modes --\n+   --------------------\n+\n+   SHUT_RD            : constant :=            0; --  No more recv\n+   SHUT_WR            : constant :=            1; --  No more send\n+   SHUT_RDWR          : constant :=            2; --  No more recv/send\n+\n+   ---------------------\n+   -- Protocol levels --\n+   ---------------------\n+\n+   SOL_SOCKET         : constant :=            1; --  Options for socket level\n+   IPPROTO_IP         : constant :=            0; --  Dummy protocol for IP\n+   IPPROTO_UDP        : constant :=           17; --  UDP\n+   IPPROTO_TCP        : constant :=            6; --  TCP\n+\n+   -------------------\n+   -- Request flags --\n+   -------------------\n+\n+   MSG_OOB            : constant :=            1; --  Process out-of-band data\n+   MSG_PEEK           : constant :=            2; --  Peek at incoming data\n+   MSG_EOR            : constant :=          128; --  Send end of record\n+   MSG_WAITALL        : constant :=          256; --  Wait for full reception\n+   MSG_NOSIGNAL       : constant :=        16384; --  No SIGPIPE on send\n+   MSG_Forced_Flags   : constant := MSG_NOSIGNAL;\n+   --  Flags set on all send(2) calls\n+\n+   --------------------\n+   -- Socket options --\n+   --------------------\n+\n+   TCP_NODELAY        : constant :=            1; --  Do not coalesce packets\n+   SO_REUSEADDR       : constant :=            2; --  Bind reuse local address\n+   SO_KEEPALIVE       : constant :=            9; --  Enable keep-alive msgs\n+   SO_LINGER          : constant :=           13; --  Defer close to flush data\n+   SO_BROADCAST       : constant :=            6; --  Can send broadcast msgs\n+   SO_SNDBUF          : constant :=            7; --  Set/get send buffer size\n+   SO_RCVBUF          : constant :=            8; --  Set/get recv buffer size\n+   SO_SNDTIMEO        : constant :=           21; --  Emission timeout\n+   SO_RCVTIMEO        : constant :=           20; --  Reception timeout\n+   SO_ERROR           : constant :=            4; --  Get/clear error status\n+   IP_MULTICAST_IF    : constant :=           32; --  Set/get mcast interface\n+   IP_MULTICAST_TTL   : constant :=           33; --  Set/get multicast TTL\n+   IP_MULTICAST_LOOP  : constant :=           34; --  Set/get mcast loopback\n+   IP_ADD_MEMBERSHIP  : constant :=           35; --  Join a multicast group\n+   IP_DROP_MEMBERSHIP : constant :=           36; --  Leave a multicast group\n+\n+   -------------------\n+   -- System limits --\n+   -------------------\n+\n+   IOV_MAX            : constant :=   2147483647; --  Maximum writev iovcnt\n+\n+   ----------------------\n+   -- Type definitions --\n+   ----------------------\n+\n+   --  Sizes (in bytes) of the components of struct timeval\n+\n+   SIZEOF_tv_sec      : constant :=            8; --  tv_sec\n+   SIZEOF_tv_usec     : constant :=            8; --  tv_usec\n+\n+end GNAT.Sockets.Constants;"}, {"sha": "185a8da4d248b83758b7996829fe13a0158c6891", "filename": "gcc/ada/g-soccon-linux-ppc.ads", "status": "added", "additions": 181, "deletions": 0, "changes": 181, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e1fd98f3dcc4c06007d1dfbe9fc913e0032a38c/gcc%2Fada%2Fg-soccon-linux-ppc.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e1fd98f3dcc4c06007d1dfbe9fc913e0032a38c/gcc%2Fada%2Fg-soccon-linux-ppc.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-soccon-linux-ppc.ads?ref=3e1fd98f3dcc4c06007d1dfbe9fc913e0032a38c", "patch": "@@ -0,0 +1,181 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                         GNAT COMPILER COMPONENTS                         --\n+--                                                                          --\n+--               G N A T . S O C K E T S . C O N S T A N T S                --\n+--                                                                          --\n+--                                 S p e c                                  --\n+--                                                                          --\n+--          Copyright (C) 2000-2005, Free Software Foundation, Inc.         --\n+--                                                                          --\n+-- GNAT is free software;  you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 2,  or (at your option) any later ver- --\n+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n+-- for  more details.  You should have  received  a copy of the GNU General --\n+-- Public License  distributed with GNAT;  see file COPYING.  If not, write --\n+-- to  the  Free Software Foundation,  51  Franklin  Street,  Fifth  Floor, --\n+-- Boston, MA 02110-1301, USA.                                              --\n+--                                                                          --\n+-- As a special exception,  if other files  instantiate  generics from this --\n+-- unit, or you link  this unit with other files  to produce an executable, --\n+-- this  unit  does not  by itself cause  the resulting  executable  to  be --\n+-- covered  by the  GNU  General  Public  License.  This exception does not --\n+-- however invalidate  any other reasons why  the executable file  might be --\n+-- covered by the  GNU Public License.                                      --\n+--                                                                          --\n+-- GNAT was originally developed  by the GNAT team at  New York University. --\n+-- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+--  This package provides target dependent definitions of constant for use\n+--  by the GNAT.Sockets package (g-socket.ads). This package should not be\n+--  directly with'ed by an applications program.\n+\n+--  This is the version for powerpc-linux\n+--  This file is generated automatically, do not modify it by hand! Instead,\n+--  make changes to gen-soccon.c and re-run it on each target.\n+\n+package GNAT.Sockets.Constants is\n+\n+   --------------\n+   -- Families --\n+   --------------\n+\n+   AF_INET            : constant :=            2; --  IPv4 address family\n+   AF_INET6           : constant :=           10; --  IPv6 address family\n+\n+   -----------\n+   -- Modes --\n+   -----------\n+\n+   SOCK_STREAM        : constant :=            1; --  Stream socket\n+   SOCK_DGRAM         : constant :=            2; --  Datagram socket\n+\n+   -------------------\n+   -- Socket errors --\n+   -------------------\n+\n+   EACCES             : constant :=           13; --  Permission denied\n+   EADDRINUSE         : constant :=           98; --  Address already in use\n+   EADDRNOTAVAIL      : constant :=           99; --  Cannot assign address\n+   EAFNOSUPPORT       : constant :=           97; --  Addr family not supported\n+   EALREADY           : constant :=          114; --  Operation in progress\n+   EBADF              : constant :=            9; --  Bad file descriptor\n+   ECONNABORTED       : constant :=          103; --  Connection aborted\n+   ECONNREFUSED       : constant :=          111; --  Connection refused\n+   ECONNRESET         : constant :=          104; --  Connection reset by peer\n+   EDESTADDRREQ       : constant :=           89; --  Destination addr required\n+   EFAULT             : constant :=           14; --  Bad address\n+   EHOSTDOWN          : constant :=          112; --  Host is down\n+   EHOSTUNREACH       : constant :=          113; --  No route to host\n+   EINPROGRESS        : constant :=          115; --  Operation now in progress\n+   EINTR              : constant :=            4; --  Interrupted system call\n+   EINVAL             : constant :=           22; --  Invalid argument\n+   EIO                : constant :=            5; --  Input output error\n+   EISCONN            : constant :=          106; --  Socket already connected\n+   ELOOP              : constant :=           40; --  Too many symbolic lynks\n+   EMFILE             : constant :=           24; --  Too many open files\n+   EMSGSIZE           : constant :=           90; --  Message too long\n+   ENAMETOOLONG       : constant :=           36; --  Name too long\n+   ENETDOWN           : constant :=          100; --  Network is down\n+   ENETRESET          : constant :=          102; --  Disconn. on network reset\n+   ENETUNREACH        : constant :=          101; --  Network is unreachable\n+   ENOBUFS            : constant :=          105; --  No buffer space available\n+   ENOPROTOOPT        : constant :=           92; --  Protocol not available\n+   ENOTCONN           : constant :=          107; --  Socket not connected\n+   ENOTSOCK           : constant :=           88; --  Operation on non socket\n+   EOPNOTSUPP         : constant :=           95; --  Operation not supported\n+   EPFNOSUPPORT       : constant :=           96; --  Unknown protocol family\n+   EPROTONOSUPPORT    : constant :=           93; --  Unknown protocol\n+   EPROTOTYPE         : constant :=           91; --  Unknown protocol type\n+   ESHUTDOWN          : constant :=          108; --  Cannot send once shutdown\n+   ESOCKTNOSUPPORT    : constant :=           94; --  Socket type not supported\n+   ETIMEDOUT          : constant :=          110; --  Connection timed out\n+   ETOOMANYREFS       : constant :=          109; --  Too many references\n+   EWOULDBLOCK        : constant :=           11; --  Operation would block\n+\n+   -----------------\n+   -- Host errors --\n+   -----------------\n+\n+   HOST_NOT_FOUND     : constant :=            1; --  Unknown host\n+   TRY_AGAIN          : constant :=            2; --  Host name lookup failure\n+   NO_DATA            : constant :=            4; --  No data record for name\n+   NO_RECOVERY        : constant :=            3; --  Non recoverable errors\n+\n+   -------------------\n+   -- Control flags --\n+   -------------------\n+\n+   FIONBIO            : constant :=  -2147195266; --  Set/clear non-blocking io\n+   FIONREAD           : constant :=   1074030207; --  How many bytes to read\n+\n+   --------------------\n+   -- Shutdown modes --\n+   --------------------\n+\n+   SHUT_RD            : constant :=            0; --  No more recv\n+   SHUT_WR            : constant :=            1; --  No more send\n+   SHUT_RDWR          : constant :=            2; --  No more recv/send\n+\n+   ---------------------\n+   -- Protocol levels --\n+   ---------------------\n+\n+   SOL_SOCKET         : constant :=            1; --  Options for socket level\n+   IPPROTO_IP         : constant :=            0; --  Dummy protocol for IP\n+   IPPROTO_UDP        : constant :=           17; --  UDP\n+   IPPROTO_TCP        : constant :=            6; --  TCP\n+\n+   -------------------\n+   -- Request flags --\n+   -------------------\n+\n+   MSG_OOB            : constant :=            1; --  Process out-of-band data\n+   MSG_PEEK           : constant :=            2; --  Peek at incoming data\n+   MSG_EOR            : constant :=          128; --  Send end of record\n+   MSG_WAITALL        : constant :=          256; --  Wait for full reception\n+   MSG_NOSIGNAL       : constant :=        16384; --  No SIGPIPE on send\n+   MSG_Forced_Flags   : constant := MSG_NOSIGNAL;\n+   --  Flags set on all send(2) calls\n+\n+   --------------------\n+   -- Socket options --\n+   --------------------\n+\n+   TCP_NODELAY        : constant :=            1; --  Do not coalesce packets\n+   SO_REUSEADDR       : constant :=            2; --  Bind reuse local address\n+   SO_KEEPALIVE       : constant :=            9; --  Enable keep-alive msgs\n+   SO_LINGER          : constant :=           13; --  Defer close to flush data\n+   SO_BROADCAST       : constant :=            6; --  Can send broadcast msgs\n+   SO_SNDBUF          : constant :=            7; --  Set/get send buffer size\n+   SO_RCVBUF          : constant :=            8; --  Set/get recv buffer size\n+   SO_SNDTIMEO        : constant :=           19; --  Emission timeout\n+   SO_RCVTIMEO        : constant :=           18; --  Reception timeout\n+   SO_ERROR           : constant :=            4; --  Get/clear error status\n+   IP_MULTICAST_IF    : constant :=           32; --  Set/get mcast interface\n+   IP_MULTICAST_TTL   : constant :=           33; --  Set/get multicast TTL\n+   IP_MULTICAST_LOOP  : constant :=           34; --  Set/get mcast loopback\n+   IP_ADD_MEMBERSHIP  : constant :=           35; --  Join a multicast group\n+   IP_DROP_MEMBERSHIP : constant :=           36; --  Leave a multicast group\n+\n+   -------------------\n+   -- System limits --\n+   -------------------\n+\n+   IOV_MAX            : constant :=   2147483647; --  Maximum writev iovcnt\n+\n+   ----------------------\n+   -- Type definitions --\n+   ----------------------\n+\n+   --  Sizes (in bytes) of the components of struct timeval\n+\n+   SIZEOF_tv_sec      : constant :=            4; --  tv_sec\n+   SIZEOF_tv_usec     : constant :=            4; --  tv_usec\n+\n+end GNAT.Sockets.Constants;"}, {"sha": "6b0521fcc0421f4fcce3e4f1893d1ccf041dc440", "filename": "gcc/ada/g-soccon-linux-x86.ads", "status": "added", "additions": 181, "deletions": 0, "changes": 181, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e1fd98f3dcc4c06007d1dfbe9fc913e0032a38c/gcc%2Fada%2Fg-soccon-linux-x86.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e1fd98f3dcc4c06007d1dfbe9fc913e0032a38c/gcc%2Fada%2Fg-soccon-linux-x86.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-soccon-linux-x86.ads?ref=3e1fd98f3dcc4c06007d1dfbe9fc913e0032a38c", "patch": "@@ -0,0 +1,181 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                         GNAT COMPILER COMPONENTS                         --\n+--                                                                          --\n+--               G N A T . S O C K E T S . C O N S T A N T S                --\n+--                                                                          --\n+--                                 S p e c                                  --\n+--                                                                          --\n+--          Copyright (C) 2000-2005, Free Software Foundation, Inc.         --\n+--                                                                          --\n+-- GNAT is free software;  you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 2,  or (at your option) any later ver- --\n+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n+-- for  more details.  You should have  received  a copy of the GNU General --\n+-- Public License  distributed with GNAT;  see file COPYING.  If not, write --\n+-- to  the  Free Software Foundation,  51  Franklin  Street,  Fifth  Floor, --\n+-- Boston, MA 02110-1301, USA.                                              --\n+--                                                                          --\n+-- As a special exception,  if other files  instantiate  generics from this --\n+-- unit, or you link  this unit with other files  to produce an executable, --\n+-- this  unit  does not  by itself cause  the resulting  executable  to  be --\n+-- covered  by the  GNU  General  Public  License.  This exception does not --\n+-- however invalidate  any other reasons why  the executable file  might be --\n+-- covered by the  GNU Public License.                                      --\n+--                                                                          --\n+-- GNAT was originally developed  by the GNAT team at  New York University. --\n+-- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+--  This package provides target dependent definitions of constant for use\n+--  by the GNAT.Sockets package (g-socket.ads). This package should not be\n+--  directly with'ed by an applications program.\n+\n+--  This is the version for i686-pc-linux-gnu\n+--  This file is generated automatically, do not modify it by hand! Instead,\n+--  make changes to gen-soccon.c and re-run it on each target.\n+\n+package GNAT.Sockets.Constants is\n+\n+   --------------\n+   -- Families --\n+   --------------\n+\n+   AF_INET            : constant :=            2; --  IPv4 address family\n+   AF_INET6           : constant :=           10; --  IPv6 address family\n+\n+   -----------\n+   -- Modes --\n+   -----------\n+\n+   SOCK_STREAM        : constant :=            1; --  Stream socket\n+   SOCK_DGRAM         : constant :=            2; --  Datagram socket\n+\n+   -------------------\n+   -- Socket errors --\n+   -------------------\n+\n+   EACCES             : constant :=           13; --  Permission denied\n+   EADDRINUSE         : constant :=           98; --  Address already in use\n+   EADDRNOTAVAIL      : constant :=           99; --  Cannot assign address\n+   EAFNOSUPPORT       : constant :=           97; --  Addr family not supported\n+   EALREADY           : constant :=          114; --  Operation in progress\n+   EBADF              : constant :=            9; --  Bad file descriptor\n+   ECONNABORTED       : constant :=          103; --  Connection aborted\n+   ECONNREFUSED       : constant :=          111; --  Connection refused\n+   ECONNRESET         : constant :=          104; --  Connection reset by peer\n+   EDESTADDRREQ       : constant :=           89; --  Destination addr required\n+   EFAULT             : constant :=           14; --  Bad address\n+   EHOSTDOWN          : constant :=          112; --  Host is down\n+   EHOSTUNREACH       : constant :=          113; --  No route to host\n+   EINPROGRESS        : constant :=          115; --  Operation now in progress\n+   EINTR              : constant :=            4; --  Interrupted system call\n+   EINVAL             : constant :=           22; --  Invalid argument\n+   EIO                : constant :=            5; --  Input output error\n+   EISCONN            : constant :=          106; --  Socket already connected\n+   ELOOP              : constant :=           40; --  Too many symbolic lynks\n+   EMFILE             : constant :=           24; --  Too many open files\n+   EMSGSIZE           : constant :=           90; --  Message too long\n+   ENAMETOOLONG       : constant :=           36; --  Name too long\n+   ENETDOWN           : constant :=          100; --  Network is down\n+   ENETRESET          : constant :=          102; --  Disconn. on network reset\n+   ENETUNREACH        : constant :=          101; --  Network is unreachable\n+   ENOBUFS            : constant :=          105; --  No buffer space available\n+   ENOPROTOOPT        : constant :=           92; --  Protocol not available\n+   ENOTCONN           : constant :=          107; --  Socket not connected\n+   ENOTSOCK           : constant :=           88; --  Operation on non socket\n+   EOPNOTSUPP         : constant :=           95; --  Operation not supported\n+   EPFNOSUPPORT       : constant :=           96; --  Unknown protocol family\n+   EPROTONOSUPPORT    : constant :=           93; --  Unknown protocol\n+   EPROTOTYPE         : constant :=           91; --  Unknown protocol type\n+   ESHUTDOWN          : constant :=          108; --  Cannot send once shutdown\n+   ESOCKTNOSUPPORT    : constant :=           94; --  Socket type not supported\n+   ETIMEDOUT          : constant :=          110; --  Connection timed out\n+   ETOOMANYREFS       : constant :=          109; --  Too many references\n+   EWOULDBLOCK        : constant :=           11; --  Operation would block\n+\n+   -----------------\n+   -- Host errors --\n+   -----------------\n+\n+   HOST_NOT_FOUND     : constant :=            1; --  Unknown host\n+   TRY_AGAIN          : constant :=            2; --  Host name lookup failure\n+   NO_DATA            : constant :=            4; --  No data record for name\n+   NO_RECOVERY        : constant :=            3; --  Non recoverable errors\n+\n+   -------------------\n+   -- Control flags --\n+   -------------------\n+\n+   FIONBIO            : constant :=        21537; --  Set/clear non-blocking io\n+   FIONREAD           : constant :=        21531; --  How many bytes to read\n+\n+   --------------------\n+   -- Shutdown modes --\n+   --------------------\n+\n+   SHUT_RD            : constant :=            0; --  No more recv\n+   SHUT_WR            : constant :=            1; --  No more send\n+   SHUT_RDWR          : constant :=            2; --  No more recv/send\n+\n+   ---------------------\n+   -- Protocol levels --\n+   ---------------------\n+\n+   SOL_SOCKET         : constant :=            1; --  Options for socket level\n+   IPPROTO_IP         : constant :=            0; --  Dummy protocol for IP\n+   IPPROTO_UDP        : constant :=           17; --  UDP\n+   IPPROTO_TCP        : constant :=            6; --  TCP\n+\n+   -------------------\n+   -- Request flags --\n+   -------------------\n+\n+   MSG_OOB            : constant :=            1; --  Process out-of-band data\n+   MSG_PEEK           : constant :=            2; --  Peek at incoming data\n+   MSG_EOR            : constant :=          128; --  Send end of record\n+   MSG_WAITALL        : constant :=          256; --  Wait for full reception\n+   MSG_NOSIGNAL       : constant :=        16384; --  No SIGPIPE on send\n+   MSG_Forced_Flags   : constant := MSG_NOSIGNAL;\n+   --  Flags set on all send(2) calls\n+\n+   --------------------\n+   -- Socket options --\n+   --------------------\n+\n+   TCP_NODELAY        : constant :=            1; --  Do not coalesce packets\n+   SO_REUSEADDR       : constant :=            2; --  Bind reuse local address\n+   SO_KEEPALIVE       : constant :=            9; --  Enable keep-alive msgs\n+   SO_LINGER          : constant :=           13; --  Defer close to flush data\n+   SO_BROADCAST       : constant :=            6; --  Can send broadcast msgs\n+   SO_SNDBUF          : constant :=            7; --  Set/get send buffer size\n+   SO_RCVBUF          : constant :=            8; --  Set/get recv buffer size\n+   SO_SNDTIMEO        : constant :=           21; --  Emission timeout\n+   SO_RCVTIMEO        : constant :=           20; --  Reception timeout\n+   SO_ERROR           : constant :=            4; --  Get/clear error status\n+   IP_MULTICAST_IF    : constant :=           32; --  Set/get mcast interface\n+   IP_MULTICAST_TTL   : constant :=           33; --  Set/get multicast TTL\n+   IP_MULTICAST_LOOP  : constant :=           34; --  Set/get mcast loopback\n+   IP_ADD_MEMBERSHIP  : constant :=           35; --  Join a multicast group\n+   IP_DROP_MEMBERSHIP : constant :=           36; --  Leave a multicast group\n+\n+   -------------------\n+   -- System limits --\n+   -------------------\n+\n+   IOV_MAX            : constant :=   2147483647; --  Maximum writev iovcnt\n+\n+   ----------------------\n+   -- Type definitions --\n+   ----------------------\n+\n+   --  Sizes (in bytes) of the components of struct timeval\n+\n+   SIZEOF_tv_sec      : constant :=            4; --  tv_sec\n+   SIZEOF_tv_usec     : constant :=            4; --  tv_usec\n+\n+end GNAT.Sockets.Constants;"}, {"sha": "f0c25c392b599f86ecf36b3b500b39302e0b482e", "filename": "gcc/ada/g-soccon-mingw.ads", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e1fd98f3dcc4c06007d1dfbe9fc913e0032a38c/gcc%2Fada%2Fg-soccon-mingw.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e1fd98f3dcc4c06007d1dfbe9fc913e0032a38c/gcc%2Fada%2Fg-soccon-mingw.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-soccon-mingw.ads?ref=3e1fd98f3dcc4c06007d1dfbe9fc913e0032a38c", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2000-2005 Free Software Foundation, Inc.          --\n+--          Copyright (C) 2000-2005, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -169,4 +169,13 @@ package GNAT.Sockets.Constants is\n \n    IOV_MAX            : constant :=  2147483647; --  Maximum writev iovcnt\n \n+   ----------------------\n+   -- Type definitions --\n+   ----------------------\n+\n+   --  Sizes (in bytes) of the components of struct timeval\n+\n+   SIZEOF_tv_sec      : constant :=           4; --  tv_sec\n+   SIZEOF_tv_usec     : constant :=           4; --  tv_usec\n+\n end GNAT.Sockets.Constants;"}, {"sha": "be1fc4ffea31ce52cbc5f2dbe9fb7819d17216d7", "filename": "gcc/ada/g-soccon-solaris-64.ads", "status": "added", "additions": 181, "deletions": 0, "changes": 181, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e1fd98f3dcc4c06007d1dfbe9fc913e0032a38c/gcc%2Fada%2Fg-soccon-solaris-64.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e1fd98f3dcc4c06007d1dfbe9fc913e0032a38c/gcc%2Fada%2Fg-soccon-solaris-64.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-soccon-solaris-64.ads?ref=3e1fd98f3dcc4c06007d1dfbe9fc913e0032a38c", "patch": "@@ -0,0 +1,181 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                         GNAT COMPILER COMPONENTS                         --\n+--                                                                          --\n+--               G N A T . S O C K E T S . C O N S T A N T S                --\n+--                                                                          --\n+--                                 S p e c                                  --\n+--                                                                          --\n+--          Copyright (C) 2000-2005, Free Software Foundation, Inc.         --\n+--                                                                          --\n+-- GNAT is free software;  you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 2,  or (at your option) any later ver- --\n+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n+-- for  more details.  You should have  received  a copy of the GNU General --\n+-- Public License  distributed with GNAT;  see file COPYING.  If not, write --\n+-- to  the  Free Software Foundation,  51  Franklin  Street,  Fifth  Floor, --\n+-- Boston, MA 02110-1301, USA.                                              --\n+--                                                                          --\n+-- As a special exception,  if other files  instantiate  generics from this --\n+-- unit, or you link  this unit with other files  to produce an executable, --\n+-- this  unit  does not  by itself cause  the resulting  executable  to  be --\n+-- covered  by the  GNU  General  Public  License.  This exception does not --\n+-- however invalidate  any other reasons why  the executable file  might be --\n+-- covered by the  GNU Public License.                                      --\n+--                                                                          --\n+-- GNAT was originally developed  by the GNAT team at  New York University. --\n+-- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+--  This package provides target dependent definitions of constant for use\n+--  by the GNAT.Sockets package (g-socket.ads). This package should not be\n+--  directly with'ed by an applications program.\n+\n+--  This is the version for sparc-sun-solaris2.8/64\n+--  This file is generated automatically, do not modify it by hand! Instead,\n+--  make changes to gen-soccon.c and re-run it on each target.\n+\n+package GNAT.Sockets.Constants is\n+\n+   --------------\n+   -- Families --\n+   --------------\n+\n+   AF_INET            : constant :=           2; --  IPv4 address family\n+   AF_INET6           : constant :=          26; --  IPv6 address family\n+\n+   -----------\n+   -- Modes --\n+   -----------\n+\n+   SOCK_STREAM        : constant :=           2; --  Stream socket\n+   SOCK_DGRAM         : constant :=           1; --  Datagram socket\n+\n+   -------------------\n+   -- Socket errors --\n+   -------------------\n+\n+   EACCES             : constant :=          13; --  Permission denied\n+   EADDRINUSE         : constant :=         125; --  Address already in use\n+   EADDRNOTAVAIL      : constant :=         126; --  Cannot assign address\n+   EAFNOSUPPORT       : constant :=         124; --  Addr family not supported\n+   EALREADY           : constant :=         149; --  Operation in progress\n+   EBADF              : constant :=           9; --  Bad file descriptor\n+   ECONNABORTED       : constant :=         130; --  Connection aborted\n+   ECONNREFUSED       : constant :=         146; --  Connection refused\n+   ECONNRESET         : constant :=         131; --  Connection reset by peer\n+   EDESTADDRREQ       : constant :=          96; --  Destination addr required\n+   EFAULT             : constant :=          14; --  Bad address\n+   EHOSTDOWN          : constant :=         147; --  Host is down\n+   EHOSTUNREACH       : constant :=         148; --  No route to host\n+   EINPROGRESS        : constant :=         150; --  Operation now in progress\n+   EINTR              : constant :=           4; --  Interrupted system call\n+   EINVAL             : constant :=          22; --  Invalid argument\n+   EIO                : constant :=           5; --  Input output error\n+   EISCONN            : constant :=         133; --  Socket already connected\n+   ELOOP              : constant :=          90; --  Too many symbolic lynks\n+   EMFILE             : constant :=          24; --  Too many open files\n+   EMSGSIZE           : constant :=          97; --  Message too long\n+   ENAMETOOLONG       : constant :=          78; --  Name too long\n+   ENETDOWN           : constant :=         127; --  Network is down\n+   ENETRESET          : constant :=         129; --  Disconn. on network reset\n+   ENETUNREACH        : constant :=         128; --  Network is unreachable\n+   ENOBUFS            : constant :=         132; --  No buffer space available\n+   ENOPROTOOPT        : constant :=          99; --  Protocol not available\n+   ENOTCONN           : constant :=         134; --  Socket not connected\n+   ENOTSOCK           : constant :=          95; --  Operation on non socket\n+   EOPNOTSUPP         : constant :=         122; --  Operation not supported\n+   EPFNOSUPPORT       : constant :=         123; --  Unknown protocol family\n+   EPROTONOSUPPORT    : constant :=         120; --  Unknown protocol\n+   EPROTOTYPE         : constant :=          98; --  Unknown protocol type\n+   ESHUTDOWN          : constant :=         143; --  Cannot send once shutdown\n+   ESOCKTNOSUPPORT    : constant :=         121; --  Socket type not supported\n+   ETIMEDOUT          : constant :=         145; --  Connection timed out\n+   ETOOMANYREFS       : constant :=         144; --  Too many references\n+   EWOULDBLOCK        : constant :=          11; --  Operation would block\n+\n+   -----------------\n+   -- Host errors --\n+   -----------------\n+\n+   HOST_NOT_FOUND     : constant :=           1; --  Unknown host\n+   TRY_AGAIN          : constant :=           2; --  Host name lookup failure\n+   NO_DATA            : constant :=           4; --  No data record for name\n+   NO_RECOVERY        : constant :=           3; --  Non recoverable errors\n+\n+   -------------------\n+   -- Control flags --\n+   -------------------\n+\n+   FIONBIO            : constant := -2147195266; --  Set/clear non-blocking io\n+   FIONREAD           : constant :=  1074030207; --  How many bytes to read\n+\n+   --------------------\n+   -- Shutdown modes --\n+   --------------------\n+\n+   SHUT_RD            : constant :=           0; --  No more recv\n+   SHUT_WR            : constant :=           1; --  No more send\n+   SHUT_RDWR          : constant :=           2; --  No more recv/send\n+\n+   ---------------------\n+   -- Protocol levels --\n+   ---------------------\n+\n+   SOL_SOCKET         : constant :=       65535; --  Options for socket level\n+   IPPROTO_IP         : constant :=           0; --  Dummy protocol for IP\n+   IPPROTO_UDP        : constant :=          17; --  UDP\n+   IPPROTO_TCP        : constant :=           6; --  TCP\n+\n+   -------------------\n+   -- Request flags --\n+   -------------------\n+\n+   MSG_OOB            : constant :=           1; --  Process out-of-band data\n+   MSG_PEEK           : constant :=           2; --  Peek at incoming data\n+   MSG_EOR            : constant :=           8; --  Send end of record\n+   MSG_WAITALL        : constant :=          64; --  Wait for full reception\n+   MSG_NOSIGNAL       : constant :=          -1; --  No SIGPIPE on send\n+   MSG_Forced_Flags   : constant :=           0;\n+   --  Flags set on all send(2) calls\n+\n+   --------------------\n+   -- Socket options --\n+   --------------------\n+\n+   TCP_NODELAY        : constant :=           1; --  Do not coalesce packets\n+   SO_REUSEADDR       : constant :=           4; --  Bind reuse local address\n+   SO_KEEPALIVE       : constant :=           8; --  Enable keep-alive msgs\n+   SO_LINGER          : constant :=         128; --  Defer close to flush data\n+   SO_BROADCAST       : constant :=          32; --  Can send broadcast msgs\n+   SO_SNDBUF          : constant :=        4097; --  Set/get send buffer size\n+   SO_RCVBUF          : constant :=        4098; --  Set/get recv buffer size\n+   SO_SNDTIMEO        : constant :=        4101; --  Emission timeout\n+   SO_RCVTIMEO        : constant :=        4102; --  Reception timeout\n+   SO_ERROR           : constant :=        4103; --  Get/clear error status\n+   IP_MULTICAST_IF    : constant :=          16; --  Set/get mcast interface\n+   IP_MULTICAST_TTL   : constant :=          17; --  Set/get multicast TTL\n+   IP_MULTICAST_LOOP  : constant :=          18; --  Set/get mcast loopback\n+   IP_ADD_MEMBERSHIP  : constant :=          19; --  Join a multicast group\n+   IP_DROP_MEMBERSHIP : constant :=          20; --  Leave a multicast group\n+\n+   -------------------\n+   -- System limits --\n+   -------------------\n+\n+   IOV_MAX            : constant :=          16; --  Maximum writev iovcnt\n+\n+   ----------------------\n+   -- Type definitions --\n+   ----------------------\n+\n+   --  Sizes (in bytes) of the components of struct timeval\n+\n+   SIZEOF_tv_sec      : constant :=           8; --  tv_sec\n+   SIZEOF_tv_usec     : constant :=           8; --  tv_usec\n+\n+end GNAT.Sockets.Constants;"}, {"sha": "7204e975c510f89f7761966b58ac0e5eb7c4be88", "filename": "gcc/ada/g-soccon-solaris.ads", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e1fd98f3dcc4c06007d1dfbe9fc913e0032a38c/gcc%2Fada%2Fg-soccon-solaris.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e1fd98f3dcc4c06007d1dfbe9fc913e0032a38c/gcc%2Fada%2Fg-soccon-solaris.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-soccon-solaris.ads?ref=3e1fd98f3dcc4c06007d1dfbe9fc913e0032a38c", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2000-2005 Free Software Foundation, Inc.          --\n+--          Copyright (C) 2000-2005, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -169,4 +169,13 @@ package GNAT.Sockets.Constants is\n \n    IOV_MAX            : constant :=          16; --  Maximum writev iovcnt\n \n+   ----------------------\n+   -- Type definitions --\n+   ----------------------\n+\n+   --  Sizes (in bytes) of the components of struct timeval\n+\n+   SIZEOF_tv_sec      : constant :=           4; --  tv_sec\n+   SIZEOF_tv_usec     : constant :=           4; --  tv_usec\n+\n end GNAT.Sockets.Constants;"}, {"sha": "b6d6836452d4cd3719dc62630bbfc50cc6936452", "filename": "gcc/ada/g-soccon-tru64.ads", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e1fd98f3dcc4c06007d1dfbe9fc913e0032a38c/gcc%2Fada%2Fg-soccon-tru64.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e1fd98f3dcc4c06007d1dfbe9fc913e0032a38c/gcc%2Fada%2Fg-soccon-tru64.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-soccon-tru64.ads?ref=3e1fd98f3dcc4c06007d1dfbe9fc913e0032a38c", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2000-2005 Free Software Foundation, Inc.          --\n+--          Copyright (C) 2000-2005, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -169,4 +169,13 @@ package GNAT.Sockets.Constants is\n \n    IOV_MAX            : constant :=        1024; --  Maximum writev iovcnt\n \n+   ----------------------\n+   -- Type definitions --\n+   ----------------------\n+\n+   --  Sizes (in bytes) of the components of struct timeval\n+\n+   SIZEOF_tv_sec      : constant :=           4; --  tv_sec\n+   SIZEOF_tv_usec     : constant :=           4; --  tv_usec\n+\n end GNAT.Sockets.Constants;"}, {"sha": "85996efa3cd488d831b48b731301395b58aa4a1c", "filename": "gcc/ada/g-soccon-vms.ads", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e1fd98f3dcc4c06007d1dfbe9fc913e0032a38c/gcc%2Fada%2Fg-soccon-vms.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e1fd98f3dcc4c06007d1dfbe9fc913e0032a38c/gcc%2Fada%2Fg-soccon-vms.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-soccon-vms.ads?ref=3e1fd98f3dcc4c06007d1dfbe9fc913e0032a38c", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2000-2005 Free Software Foundation, Inc.          --\n+--          Copyright (C) 2000-2005, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -169,4 +169,13 @@ package GNAT.Sockets.Constants is\n \n    IOV_MAX            : constant :=        1024; --  Maximum writev iovcnt\n \n+   ----------------------\n+   -- Type definitions --\n+   ----------------------\n+\n+   --  Sizes (in bytes) of the components of struct timeval\n+\n+   SIZEOF_tv_sec      : constant :=           4; --  tv_sec\n+   SIZEOF_tv_usec     : constant :=           4; --  tv_usec\n+\n end GNAT.Sockets.Constants;"}, {"sha": "1accc7cc812795e401419fe45a6b5f97f9d6cdb2", "filename": "gcc/ada/g-soccon-vxworks.ads", "status": "modified", "additions": 20, "deletions": 1, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e1fd98f3dcc4c06007d1dfbe9fc913e0032a38c/gcc%2Fada%2Fg-soccon-vxworks.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e1fd98f3dcc4c06007d1dfbe9fc913e0032a38c/gcc%2Fada%2Fg-soccon-vxworks.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-soccon-vxworks.ads?ref=3e1fd98f3dcc4c06007d1dfbe9fc913e0032a38c", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2000-2005 Free Software Foundation, Inc.          --\n+--          Copyright (C) 2000-2005, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -169,4 +169,23 @@ package GNAT.Sockets.Constants is\n \n    IOV_MAX            : constant := 2147483647; --  Maximum writev iovcnt\n \n+   ----------------------\n+   -- Type definitions --\n+   ----------------------\n+\n+   --  Sizes (in bytes) of the components of struct timeval\n+\n+   SIZEOF_tv_sec      : constant :=          4; --  tv_sec\n+   SIZEOF_tv_usec     : constant :=          4; --  tv_usec\n+\n+   --------------------------------\n+   -- VxWorks-specific constants --\n+   --------------------------------\n+\n+   --  These constants may be used only within the VxWorks version of\n+   --  GNAT.Sockets.Thin.\n+\n+   OK                 : constant :=          0; --  VxWorks generic success\n+   ERROR              : constant :=         -1; --  VxWorks generic error\n+\n end GNAT.Sockets.Constants;"}, {"sha": "5fa72f5f27f42f2bceb6c30c160574474821774d", "filename": "gcc/ada/g-soccon.ads", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e1fd98f3dcc4c06007d1dfbe9fc913e0032a38c/gcc%2Fada%2Fg-soccon.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e1fd98f3dcc4c06007d1dfbe9fc913e0032a38c/gcc%2Fada%2Fg-soccon.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-soccon.ads?ref=3e1fd98f3dcc4c06007d1dfbe9fc913e0032a38c", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2000-2005 Free Software Foundation, Inc.          --\n+--          Copyright (C) 2000-2005, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -36,6 +36,9 @@\n --  directly with'ed by an applications program.\n \n --  This is the version for i686-pc-linux-gnu\n+--  WARNING! This file is a default version that must be replaced for\n+--  each platform.\n+\n --  This file is generated automatically, do not modify it by hand! Instead,\n --  make changes to gen-soccon.c and re-run it on each target.\n \n@@ -169,4 +172,13 @@ package GNAT.Sockets.Constants is\n \n    IOV_MAX            : constant :=   2147483647; --  Maximum writev iovcnt\n \n+   ----------------------\n+   -- Type definitions --\n+   ----------------------\n+\n+   --  Sizes (in bytes) of the components of struct timeval\n+\n+   SIZEOF_tv_sec      : constant :=            4; --  tv_sec\n+   SIZEOF_tv_usec     : constant :=            4; --  tv_usec\n+\n end GNAT.Sockets.Constants;"}, {"sha": "163dd2d0710efb700273eb4b734575b33034c6f1", "filename": "gcc/ada/g-socket.adb", "status": "modified", "additions": 176, "deletions": 113, "changes": 289, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e1fd98f3dcc4c06007d1dfbe9fc913e0032a38c/gcc%2Fada%2Fg-socket.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e1fd98f3dcc4c06007d1dfbe9fc913e0032a38c/gcc%2Fada%2Fg-socket.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socket.adb?ref=3e1fd98f3dcc4c06007d1dfbe9fc913e0032a38c", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---           Copyright (C) 2001-2005 Ada Core Technologies, Inc.            --\n+--                     Copyright (C) 2001-2005, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -92,8 +92,11 @@ package body GNAT.Sockets is\n       No_Delay        => Constants.TCP_NODELAY,\n       Add_Membership  => Constants.IP_ADD_MEMBERSHIP,\n       Drop_Membership => Constants.IP_DROP_MEMBERSHIP,\n+      Multicast_If    => Constants.IP_MULTICAST_IF,\n       Multicast_TTL   => Constants.IP_MULTICAST_TTL,\n-      Multicast_Loop  => Constants.IP_MULTICAST_LOOP);\n+      Multicast_Loop  => Constants.IP_MULTICAST_LOOP,\n+      Send_Timeout    => Constants.SO_SNDTIMEO,\n+      Receive_Timeout => Constants.SO_RCVTIMEO);\n \n    Flags : constant array (0 .. 3) of C.int :=\n             (0 => Constants.MSG_OOB,     --  Process_Out_Of_Band_Data\n@@ -110,6 +113,9 @@ package body GNAT.Sockets is\n    function To_In_Addr is new Ada.Unchecked_Conversion (C.int, In_Addr);\n    function To_Int     is new Ada.Unchecked_Conversion (In_Addr, C.int);\n \n+   function Err_Code_Image (E : Integer) return String;\n+   --  Return the value of E surrounded with brackets\n+\n    -----------------------\n    -- Local subprograms --\n    -----------------------\n@@ -160,15 +166,20 @@ package body GNAT.Sockets is\n    function To_Service_Entry (E : Servent) return Service_Entry_Type;\n    --  Conversion function\n \n-   function To_Timeval (Val : Selector_Duration) return Timeval;\n+   function To_Timeval (Val : Timeval_Duration) return Timeval;\n    --  Separate Val in seconds and microseconds\n \n+   function To_Duration (Val : Timeval) return Timeval_Duration;\n+   --  Reconstruct a Duration value from a Timeval record (seconds and\n+   --  microseconds).\n+\n    procedure Raise_Socket_Error (Error : Integer);\n    --  Raise Socket_Error with an exception message describing the error code\n+   --  from errno.\n \n-   procedure Raise_Host_Error (Error : Integer);\n+   procedure Raise_Host_Error (H_Error : Integer);\n    --  Raise Host_Error exception with message describing error code (note\n-   --  hstrerror seems to be obsolete).\n+   --  hstrerror seems to be obsolete) from h_errno.\n \n    procedure Narrow (Item : in out Socket_Set_Type);\n    --  Update Last as it may be greater than the real last socket\n@@ -384,109 +395,124 @@ package body GNAT.Sockets is\n    is\n       Res  : C.int;\n       Last : C.int;\n+      RSig : Socket_Type renames Selector.R_Sig_Socket;\n       RSet : Socket_Set_Type;\n       WSet : Socket_Set_Type;\n       ESet : Socket_Set_Type;\n       TVal : aliased Timeval;\n       TPtr : Timeval_Access;\n \n    begin\n-      Status := Completed;\n+      begin\n+         Status := Completed;\n \n-      --  No timeout or Forever is indicated by a null timeval pointer\n+         --  No timeout or Forever is indicated by a null timeval pointer\n \n-      if Timeout = Forever then\n-         TPtr := null;\n-      else\n-         TVal := To_Timeval (Timeout);\n-         TPtr := TVal'Unchecked_Access;\n-      end if;\n+         if Timeout = Forever then\n+            TPtr := null;\n+         else\n+            TVal := To_Timeval (Timeout);\n+            TPtr := TVal'Unchecked_Access;\n+         end if;\n \n-      --  Copy R_Socket_Set in RSet and add read signalling socket\n+         --  Copy R_Socket_Set in RSet and add read signalling socket\n \n-      RSet := (Set  => New_Socket_Set (R_Socket_Set.Set),\n-               Last => R_Socket_Set.Last);\n-      Set (RSet, Selector.R_Sig_Socket);\n+         RSet := (Set  => New_Socket_Set (R_Socket_Set.Set),\n+                  Last => R_Socket_Set.Last);\n+         Set (RSet, RSig);\n \n-      --  Copy W_Socket_Set in WSet\n+         --  Copy W_Socket_Set in WSet\n \n-      WSet := (Set  => New_Socket_Set (W_Socket_Set.Set),\n-               Last => W_Socket_Set.Last);\n+         WSet := (Set  => New_Socket_Set (W_Socket_Set.Set),\n+                  Last => W_Socket_Set.Last);\n \n-      --  Copy E_Socket_Set in ESet\n+         --  Copy E_Socket_Set in ESet\n \n-      ESet := (Set  => New_Socket_Set (E_Socket_Set.Set),\n-               Last => E_Socket_Set.Last);\n+         ESet := (Set  => New_Socket_Set (E_Socket_Set.Set),\n+                  Last => E_Socket_Set.Last);\n \n-      Last := C.int'Max (C.int'Max (C.int (RSet.Last),\n-                                    C.int (WSet.Last)),\n-                                    C.int (ESet.Last));\n+         Last := C.int'Max (C.int'Max (C.int (RSet.Last),\n+                                       C.int (WSet.Last)),\n+                                       C.int (ESet.Last));\n \n-      Res :=\n-        C_Select\n-         (Last + 1,\n-          RSet.Set,\n-          WSet.Set,\n-          ESet.Set,\n-          TPtr);\n+         Res :=\n+           C_Select\n+            (Last + 1,\n+             RSet.Set,\n+             WSet.Set,\n+             ESet.Set,\n+             TPtr);\n \n-      if Res = Failure then\n-         Raise_Socket_Error (Socket_Errno);\n-      end if;\n+         if Res = Failure then\n+            Raise_Socket_Error (Socket_Errno);\n+         end if;\n \n-      --  If Select was resumed because of read signalling socket, read this\n-      --  data and remove socket from set.\n+         --  If Select was resumed because of read signalling socket, read this\n+         --  data and remove socket from set.\n \n-      if Is_Set (RSet, Selector.R_Sig_Socket) then\n-         Clear (RSet, Selector.R_Sig_Socket);\n+         if Is_Set (RSet, RSig) then\n+            Clear (RSet, RSig);\n \n-         declare\n-            Buf : Character;\n+            declare\n+               Buf : Character;\n \n-         begin\n-            Res := C_Recv (C.int (Selector.R_Sig_Socket), Buf'Address, 1, 0);\n+            begin\n+               Res := C_Recv (C.int (RSig), Buf'Address, 1, 0);\n \n-            if Res = Failure then\n-               Raise_Socket_Error (Socket_Errno);\n-            end if;\n-         end;\n+               if Res = Failure then\n+                  Raise_Socket_Error (Socket_Errno);\n+               end if;\n+            end;\n \n-         Status := Aborted;\n+            Status := Aborted;\n \n-      elsif Res = 0 then\n-         Status := Expired;\n-      end if;\n+         elsif Res = 0 then\n+            Status := Expired;\n+         end if;\n \n-      --  Update RSet, WSet and ESet in regard to their new socket sets\n+         --  Update RSet, WSet and ESet in regard to their new socket sets\n \n-      Narrow (RSet);\n-      Narrow (WSet);\n-      Narrow (ESet);\n+         Narrow (RSet);\n+         Narrow (WSet);\n+         Narrow (ESet);\n \n-      --  Reset RSet as it should be if R_Sig_Socket was not added\n+         --  Reset RSet as it should be if R_Sig_Socket was not added\n \n-      if Is_Empty (RSet) then\n-         Empty (RSet);\n-      end if;\n+         if Is_Empty (RSet) then\n+            Empty (RSet);\n+         end if;\n \n-      if Is_Empty (WSet) then\n-         Empty (WSet);\n-      end if;\n+         if Is_Empty (WSet) then\n+            Empty (WSet);\n+         end if;\n \n-      if Is_Empty (ESet) then\n-         Empty (ESet);\n-      end if;\n+         if Is_Empty (ESet) then\n+            Empty (ESet);\n+         end if;\n \n-      --  Deliver RSet, WSet and ESet\n+         --  Deliver RSet, WSet and ESet\n \n-      Empty (R_Socket_Set);\n-      R_Socket_Set := RSet;\n+         Empty (R_Socket_Set);\n+         R_Socket_Set := RSet;\n \n-      Empty (W_Socket_Set);\n-      W_Socket_Set := WSet;\n+         Empty (W_Socket_Set);\n+         W_Socket_Set := WSet;\n \n-      Empty (E_Socket_Set);\n-      E_Socket_Set := ESet;\n+         Empty (E_Socket_Set);\n+         E_Socket_Set := ESet;\n+\n+      exception\n+\n+         when Socket_Error =>\n+\n+            --  The local socket sets must be emptied before propagating\n+            --  Socket_Error so the associated storage is freed.\n+\n+            Empty (RSet);\n+            Empty (WSet);\n+            Empty (ESet);\n+            raise;\n+      end;\n    end Check_Selector;\n \n    -----------\n@@ -510,11 +536,16 @@ package body GNAT.Sockets is\n    -- Close_Selector --\n    --------------------\n \n-   --  Comments needed below ???\n-   --  Why are exceptions ignored ???\n-\n    procedure Close_Selector (Selector : in out Selector_Type) is\n    begin\n+\n+      --  Close the signalling sockets used internally for the implementation\n+      --  of Abort_Selector. Exceptions are ignored because these sockets\n+      --  are implementation artefacts of no interest to the user, and\n+      --  there is little that can be done if either Close_Socket call fails\n+      --  (which theoretically should not happen anyway). We also want to try\n+      --  to perform the second Close_Socket even if the first one failed.\n+\n       begin\n          Close_Socket (Selector.R_Sig_Socket);\n       exception\n@@ -772,6 +803,17 @@ package body GNAT.Sockets is\n       Item.Last := No_Socket;\n    end Empty;\n \n+   --------------------\n+   -- Err_Code_Image --\n+   --------------------\n+\n+   function Err_Code_Image (E : Integer) return String is\n+      Msg : String := E'Img & \"] \";\n+   begin\n+      Msg (Msg'First) := '[';\n+      return Msg;\n+   end Err_Code_Image;\n+\n    --------------\n    -- Finalize --\n    --------------\n@@ -845,7 +887,7 @@ package body GNAT.Sockets is\n       Res := C_Gethostbyaddr (HA'Address, HA'Size / 8, Constants.AF_INET);\n \n       if Res = null then\n-         Err := Socket_Errno;\n+         Err := Host_Errno;\n          Task_Lock.Unlock;\n          Raise_Host_Error (Err);\n       end if;\n@@ -884,7 +926,7 @@ package body GNAT.Sockets is\n       Res := C_Gethostbyname (HN);\n \n       if Res = null then\n-         Err := Socket_Errno;\n+         Err := Host_Errno;\n          Task_Lock.Unlock;\n          Raise_Host_Error (Err);\n       end if;\n@@ -1027,6 +1069,7 @@ package body GNAT.Sockets is\n       V8  : aliased Two_Int;\n       V4  : aliased C.int;\n       V1  : aliased C.unsigned_char;\n+      VT  : aliased Timeval;\n       Len : aliased C.int;\n       Add : System.Address;\n       Res : C.int;\n@@ -1045,10 +1088,16 @@ package body GNAT.Sockets is\n               No_Delay        |\n               Send_Buffer     |\n               Receive_Buffer  |\n+              Multicast_If    |\n               Error           =>\n             Len := V4'Size / 8;\n             Add := V4'Address;\n \n+         when Send_Timeout    |\n+              Receive_Timeout =>\n+            Len := VT'Size / 8;\n+            Add := VT'Address;\n+\n          when Linger          |\n               Add_Membership  |\n               Drop_Membership =>\n@@ -1091,12 +1140,19 @@ package body GNAT.Sockets is\n             To_Inet_Addr (To_In_Addr (V8 (V8'First)), Opt.Multicast_Address);\n             To_Inet_Addr (To_In_Addr (V8 (V8'Last)), Opt.Local_Interface);\n \n+         when Multicast_If    =>\n+            To_Inet_Addr (To_In_Addr (V4), Opt.Outgoing_If);\n+\n          when Multicast_TTL   =>\n             Opt.Time_To_Live := Integer (V1);\n \n          when Multicast_Loop  =>\n             Opt.Enabled := (V1 /= 0);\n \n+         when Send_Timeout    |\n+              Receive_Timeout =>\n+            Opt.Timeout := To_Duration (VT);\n+\n       end case;\n \n       return Opt;\n@@ -1379,20 +1435,19 @@ package body GNAT.Sockets is\n    -- Raise_Host_Error --\n    ----------------------\n \n-   procedure Raise_Host_Error (Error : Integer) is\n+   procedure Raise_Host_Error (H_Error : Integer) is\n \n       function Host_Error_Message return String;\n-      --  We do not use a C function like strerror because hstrerror\n-      --  that would correspond seems to be obsolete. Return\n-      --  appropriate string for error value.\n+      --  We do not use a C function like strerror because hstrerror that would\n+      --  correspond is obsolete. Return appropriate string for error value.\n \n       ------------------------\n       -- Host_Error_Message --\n       ------------------------\n \n       function Host_Error_Message return String is\n       begin\n-         case Error is\n+         case H_Error is\n             when Constants.HOST_NOT_FOUND => return \"Host not found\";\n             when Constants.TRY_AGAIN      => return \"Try again\";\n             when Constants.NO_RECOVERY    => return \"No recovery\";\n@@ -1404,7 +1459,9 @@ package body GNAT.Sockets is\n    --  Start of processing for Raise_Host_Error\n \n    begin\n-      Ada.Exceptions.Raise_Exception (Host_Error'Identity, Host_Error_Message);\n+      Ada.Exceptions.Raise_Exception (Host_Error'Identity,\n+        Err_Code_Image (H_Error)\n+        & Host_Error_Message);\n    end Raise_Host_Error;\n \n    ------------------------\n@@ -1413,26 +1470,10 @@ package body GNAT.Sockets is\n \n    procedure Raise_Socket_Error (Error : Integer) is\n       use type C.Strings.chars_ptr;\n-\n-      function Image (E : Integer) return String;\n-\n-      -----------\n-      -- Image --\n-      -----------\n-\n-      function Image (E : Integer) return String is\n-         Msg : String := E'Img & \"] \";\n-      begin\n-         Msg (Msg'First) := '[';\n-         return Msg;\n-      end Image;\n-\n-   --  Start of processing for Raise_Socket_Error\n-\n    begin\n-      Ada.Exceptions.Raise_Exception\n-        (Socket_Error'Identity,\n-         Image (Error) & C.Strings.Value (Socket_Error_Message (Error)));\n+      Ada.Exceptions.Raise_Exception (Socket_Error'Identity,\n+        Err_Code_Image (Error)\n+        & C.Strings.Value (Socket_Error_Message (Error)));\n    end Raise_Socket_Error;\n \n    ----------\n@@ -1639,11 +1680,12 @@ package body GNAT.Sockets is\n    is\n       Id    : constant Exception_Id := Exception_Identity (Occurrence);\n       Msg   : constant String       := Exception_Message (Occurrence);\n-      First : Natural               := Msg'First;\n+      First : Natural;\n       Last  : Natural;\n       Val   : Integer;\n \n    begin\n+      First := Msg'First;\n       while First <= Msg'Last\n         and then Msg (First) not in '0' .. '9'\n       loop\n@@ -1655,7 +1697,6 @@ package body GNAT.Sockets is\n       end if;\n \n       Last := First;\n-\n       while Last < Msg'Last\n         and then Msg (Last + 1) in '0' .. '9'\n       loop\n@@ -1854,7 +1895,8 @@ package body GNAT.Sockets is\n       V8  : aliased Two_Int;\n       V4  : aliased C.int;\n       V1  : aliased C.unsigned_char;\n-      Len : aliased C.int;\n+      VT  : aliased Timeval;\n+      Len : C.int;\n       Add : System.Address := Null_Address;\n       Res : C.int;\n \n@@ -1892,6 +1934,11 @@ package body GNAT.Sockets is\n             Len := V8'Size / 8;\n             Add := V8'Address;\n \n+         when Multicast_If    =>\n+            V4  := To_Int (To_In_Addr (Option.Outgoing_If));\n+            Len := V4'Size / 8;\n+            Add := V4'Address;\n+\n          when Multicast_TTL   =>\n             V1  := C.unsigned_char (Option.Time_To_Live);\n             Len := V1'Size / 8;\n@@ -1902,6 +1949,12 @@ package body GNAT.Sockets is\n             Len := V1'Size / 8;\n             Add := V1'Address;\n \n+         when Send_Timeout    |\n+              Receive_Timeout =>\n+            VT  := To_Timeval (Option.Timeout);\n+            Len := VT'Size / 8;\n+            Add := VT'Address;\n+\n       end case;\n \n       Res := C_Setsockopt\n@@ -1999,6 +2052,15 @@ package body GNAT.Sockets is\n       return Integer (Socket);\n    end To_C;\n \n+   -----------------\n+   -- To_Duration --\n+   -----------------\n+\n+   function To_Duration (Val : Timeval) return Timeval_Duration is\n+   begin\n+      return Natural (Val.Tv_Sec) * 1.0 + Natural (Val.Tv_Usec) * 1.0E-6;\n+   end To_Duration;\n+\n    -------------------\n    -- To_Host_Entry --\n    -------------------\n@@ -2100,6 +2162,7 @@ package body GNAT.Sockets is\n             if Flags (J) = -1 then\n                Raise_Socket_Error (Constants.EOPNOTSUPP);\n             end if;\n+\n             Result := Result + Flags (J);\n          end if;\n \n@@ -2176,25 +2239,25 @@ package body GNAT.Sockets is\n    -- To_Timeval --\n    ----------------\n \n-   function To_Timeval (Val : Selector_Duration) return Timeval is\n-      S  : Timeval_Unit;\n-      MS : Timeval_Unit;\n+   function To_Timeval (Val : Timeval_Duration) return Timeval is\n+      S  : time_t;\n+      uS : suseconds_t;\n \n    begin\n       --  If zero, set result as zero (otherwise it gets rounded down to -1)\n \n       if Val = 0.0 then\n          S  := 0;\n-         MS := 0;\n+         uS := 0;\n \n       --  Normal case where we do round down\n \n       else\n-         S  := Timeval_Unit (Val - 0.5);\n-         MS := Timeval_Unit (1_000_000 * (Val - Selector_Duration (S)));\n+         S  := time_t (Val - 0.5);\n+         uS := suseconds_t (1_000_000 * (Val - Selector_Duration (S)));\n       end if;\n \n-      return (S, MS);\n+      return (S, uS);\n    end To_Timeval;\n \n    -----------"}, {"sha": "6268545a5fa867fedb12c4324464d7acc61a3a5b", "filename": "gcc/ada/g-socket.ads", "status": "modified", "additions": 35, "deletions": 23, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e1fd98f3dcc4c06007d1dfbe9fc913e0032a38c/gcc%2Fada%2Fg-socket.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e1fd98f3dcc4c06007d1dfbe9fc913e0032a38c/gcc%2Fada%2Fg-socket.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socket.ads?ref=3e1fd98f3dcc4c06007d1dfbe9fc913e0032a38c", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---              Copyright (C) 2001-2005 Ada Core Technologies, Inc.         --\n+--                     Copyright (C) 2001-2005, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -489,7 +489,7 @@ package GNAT.Sockets is\n    Host_Error : exception;\n    --  Exception raised by the two following procedures. Once raised, its\n    --  message contains a string describing the error code. This exception is\n-   --  raised when an host entry can not be retrieved.\n+   --  raised when an host entry cannot be retrieved.\n \n    function Get_Host_By_Address\n      (Address : Inet_Addr_Type;\n@@ -595,6 +595,16 @@ package GNAT.Sockets is\n       Unknown_Server_Error,\n       Cannot_Resolve_Error);\n \n+   --  Timeval_Duration is a subtype of Standard.Duration because the full\n+   --  range of Standard.Duration cannot be represented in the equivalent C\n+   --  structure. Moreover, negative values are not allowed to avoid system\n+   --  incompatibilities.\n+\n+   Immediate : constant := 0.0;\n+   Forever   : constant := Duration (Integer'Last) * 1.0;\n+\n+   subtype Timeval_Duration is Duration range Immediate .. Forever;\n+\n    --  Get_Socket_Options and Set_Socket_Options manipulate options associated\n    --  with a socket. Options may exist at multiple protocol levels in the\n    --  communication stack. Socket_Level is the uppermost socket level.\n@@ -610,18 +620,21 @@ package GNAT.Sockets is\n    --  a boolean to enable or disable this option.\n \n    type Option_Name is (\n-     Keep_Alive,      -- Enable sending of keep-alive messages\n-     Reuse_Address,   -- Allow bind to reuse local address\n-     Broadcast,       -- Enable datagram sockets to recv/send broadcast packets\n-     Send_Buffer,     -- Set/get the maximum socket send buffer in bytes\n-     Receive_Buffer,  -- Set/get the maximum socket recv buffer in bytes\n-     Linger,          -- Shutdown wait for msg to be sent or timeout occur\n-     Error,           -- Get and clear the pending socket error\n-     No_Delay,        -- Do not delay send to coalesce packets (TCP_NODELAY)\n-     Add_Membership,  -- Join a multicast group\n-     Drop_Membership, -- Leave a multicast group\n-     Multicast_TTL,   -- Indicate the time-to-live of sent multicast packets\n-     Multicast_Loop); -- Sent multicast packets are looped to the local socket\n+     Keep_Alive,       -- Enable sending of keep-alive messages\n+     Reuse_Address,    -- Allow bind to reuse local address\n+     Broadcast,        -- Enable datagram sockets to recv/send broadcasts\n+     Send_Buffer,      -- Set/get the maximum socket send buffer in bytes\n+     Receive_Buffer,   -- Set/get the maximum socket recv buffer in bytes\n+     Linger,           -- Shutdown wait for msg to be sent or timeout occur\n+     Error,            -- Get and clear the pending socket error\n+     No_Delay,         -- Do not delay send to coalesce packets (TCP_NODELAY)\n+     Add_Membership,   -- Join a multicast group\n+     Drop_Membership,  -- Leave a multicast group\n+     Multicast_If,     -- Set default outgoing interface for multicast packets\n+     Multicast_TTL,    -- Indicate the time-to-live of sent multicast packets\n+     Multicast_Loop,   -- Sent multicast packets are looped to local socket\n+     Send_Timeout,     -- Set timeout value for output\n+     Receive_Timeout); -- Set timeout value for input\n \n    type Option_Type (Name : Option_Name := Keep_Alive) is record\n       case Name is\n@@ -652,9 +665,16 @@ package GNAT.Sockets is\n             Multicast_Address : Inet_Addr_Type;\n             Local_Interface   : Inet_Addr_Type;\n \n+         when Multicast_If    =>\n+            Outgoing_If : Inet_Addr_Type;\n+\n          when Multicast_TTL   =>\n             Time_To_Live : Natural;\n \n+         when Send_Timeout |\n+              Receive_Timeout =>\n+            Timeout : Timeval_Duration;\n+\n       end case;\n    end record;\n \n@@ -935,15 +955,7 @@ package GNAT.Sockets is\n    type Selector_Type is limited private;\n    type Selector_Access is access all Selector_Type;\n \n-   --  Selector_Duration is a subtype of Standard.Duration because the full\n-   --  range of Standard.Duration cannot be represented in the equivalent C\n-   --  structure. Moreover, negative values are not allowed to avoid system\n-   --  incompatibilities.\n-\n-   Immediate : constant := 0.0;\n-   Forever   : constant := Duration (Integer'Last) * 1.0;\n-\n-   subtype Selector_Duration is Duration range Immediate .. Forever;\n+   subtype Selector_Duration is Timeval_Duration;\n \n    procedure Create_Selector (Selector : out Selector_Type);\n    --  Create a new selector"}, {"sha": "862305dbd2ef99814ac2a482d4a90325faf376a7", "filename": "gcc/ada/g-socthi-mingw.adb", "status": "modified", "additions": 8, "deletions": 17, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e1fd98f3dcc4c06007d1dfbe9fc913e0032a38c/gcc%2Fada%2Fg-socthi-mingw.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e1fd98f3dcc4c06007d1dfbe9fc913e0032a38c/gcc%2Fada%2Fg-socthi-mingw.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socthi-mingw.adb?ref=3e1fd98f3dcc4c06007d1dfbe9fc913e0032a38c", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                     Copyright (C) 2001-2005 AdaCore                      --\n+--                     Copyright (C) 2001-2005, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -59,17 +59,15 @@ package body GNAT.Sockets.Thin is\n    function Standard_Connect\n      (S       : C.int;\n       Name    : System.Address;\n-      Namelen : C.int)\n-      return    C.int;\n+      Namelen : C.int) return C.int;\n    pragma Import (Stdcall, Standard_Connect, \"connect\");\n \n    function Standard_Select\n      (Nfds      : C.int;\n       Readfds   : Fd_Set_Access;\n       Writefds  : Fd_Set_Access;\n       Exceptfds : Fd_Set_Access;\n-      Timeout   : Timeval_Access)\n-      return      C.int;\n+      Timeout   : Timeval_Access) return C.int;\n    pragma Import (Stdcall, Standard_Select, \"select\");\n \n    type Error_Type is\n@@ -239,8 +237,7 @@ package body GNAT.Sockets.Thin is\n    function C_Connect\n      (S       : C.int;\n       Name    : System.Address;\n-      Namelen : C.int)\n-      return    C.int\n+      Namelen : C.int) return C.int\n    is\n       Res : C.int;\n \n@@ -263,8 +260,7 @@ package body GNAT.Sockets.Thin is\n    function C_Readv\n      (Socket : C.int;\n       Iov    : System.Address;\n-      Iovcnt : C.int)\n-      return  C.int\n+      Iovcnt : C.int) return C.int\n    is\n       Res : C.int;\n       Count : C.int := 0;\n@@ -299,8 +295,7 @@ package body GNAT.Sockets.Thin is\n       Readfds   : Fd_Set_Access;\n       Writefds  : Fd_Set_Access;\n       Exceptfds : Fd_Set_Access;\n-      Timeout   : Timeval_Access)\n-      return      C.int\n+      Timeout   : Timeval_Access) return C.int\n    is\n       pragma Warnings (Off, Exceptfds);\n \n@@ -441,8 +436,7 @@ package body GNAT.Sockets.Thin is\n    function C_Writev\n      (Socket : C.int;\n       Iov    : System.Address;\n-      Iovcnt : C.int)\n-      return   C.int\n+      Iovcnt : C.int) return C.int\n    is\n       Res : C.int;\n       Count : C.int := 0;\n@@ -553,11 +547,8 @@ package body GNAT.Sockets.Thin is\n    --------------------------\n \n    function Socket_Error_Message\n-     (Errno : Integer)\n-     return  C.Strings.chars_ptr\n+     (Errno : Integer) return C.Strings.chars_ptr\n    is\n-      use GNAT.Sockets.Constants;\n-\n    begin\n       case Errno is\n          when EINTR =>           return Error_Messages (N_EINTR);"}, {"sha": "11509c095ea165b45debbec4ce5a4e494005810c", "filename": "gcc/ada/g-socthi-mingw.ads", "status": "modified", "additions": 19, "deletions": 7, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e1fd98f3dcc4c06007d1dfbe9fc913e0032a38c/gcc%2Fada%2Fg-socthi-mingw.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e1fd98f3dcc4c06007d1dfbe9fc913e0032a38c/gcc%2Fada%2Fg-socthi-mingw.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socthi-mingw.ads?ref=3e1fd98f3dcc4c06007d1dfbe9fc913e0032a38c", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---                     Copyright (C) 2001-2005 AdaCore                      --\n+--                     Copyright (C) 2001-2005, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -61,20 +61,32 @@ package GNAT.Sockets.Thin is\n    --  Set last socket error number\n \n    function Socket_Error_Message\n-     (Errno : Integer)\n-      return  C.Strings.chars_ptr;\n+     (Errno : Integer) return C.Strings.chars_ptr;\n    --  Returns the error message string for the error number Errno. If\n    --  Errno is not known it returns \"Unknown system error\".\n \n+   function Host_Errno return Integer;\n+   pragma Import (C, Host_Errno, \"__gnat_get_h_errno\");\n+   --  Returns last host error number\n+\n    subtype Fd_Set_Access is System.Address;\n    No_Fd_Set : constant Fd_Set_Access := System.Null_Address;\n \n-   type Timeval_Unit is new C.long;\n-   pragma Convention (C, Timeval_Unit);\n+   type time_t is\n+     range -(2 ** (8 * Constants.SIZEOF_tv_sec - 1))\n+          .. 2 ** (8 * Constants.SIZEOF_tv_sec - 1) - 1;\n+   for time_t'Size use 8 * Constants.SIZEOF_tv_sec;\n+   pragma Convention (C, time_t);\n+\n+   type suseconds_t is\n+     range -(2 ** (8 * Constants.SIZEOF_tv_usec - 1))\n+          .. 2 ** (8 * Constants.SIZEOF_tv_usec - 1) - 1;\n+   for suseconds_t'Size use 8 * Constants.SIZEOF_tv_usec;\n+   pragma Convention (C, suseconds_t);\n \n    type Timeval is record\n-      Tv_Sec  : Timeval_Unit;\n-      Tv_Usec : Timeval_Unit;\n+      Tv_Sec  : time_t;\n+      Tv_Usec : suseconds_t;\n    end record;\n    pragma Convention (C, Timeval);\n "}, {"sha": "1b05e4719bc19ca78f1dd87ca2c2bd08348ed9b8", "filename": "gcc/ada/g-socthi-vms.ads", "status": "modified", "additions": 46, "deletions": 60, "changes": 106, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e1fd98f3dcc4c06007d1dfbe9fc913e0032a38c/gcc%2Fada%2Fg-socthi-vms.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e1fd98f3dcc4c06007d1dfbe9fc913e0032a38c/gcc%2Fada%2Fg-socthi-vms.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socthi-vms.ads?ref=3e1fd98f3dcc4c06007d1dfbe9fc913e0032a38c", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---            Copyright (C) 2002-2005 Ada Core Technologies, Inc.           --\n+--                     Copyright (C) 2002-2005, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -64,15 +64,28 @@ package GNAT.Sockets.Thin is\n    --  Returns the error message string for the error number Errno. If\n    --  Errno is not known it returns \"Unknown system error\".\n \n+   function Host_Errno return Integer;\n+   pragma Import (C, Host_Errno, \"__gnat_get_h_errno\");\n+   --  Returns last host error number\n+\n    subtype Fd_Set_Access is System.Address;\n    No_Fd_Set : constant Fd_Set_Access := System.Null_Address;\n \n-   type Timeval_Unit is new C.int;\n-   pragma Convention (C, Timeval_Unit);\n+   type time_t is\n+     range -2 ** (8 * Constants.SIZEOF_tv_sec - 1)\n+         .. 2 ** (8 * Constants.SIZEOF_tv_sec - 1) - 1;\n+   for time_t'Size use 8 * Constants.SIZEOF_tv_sec;\n+   pragma Convention (C, time_t);\n+\n+   type suseconds_t is\n+     range -2 ** (8 * Constants.SIZEOF_tv_usec - 1)\n+         .. 2 ** (8 * Constants.SIZEOF_tv_usec - 1) - 1;\n+   for suseconds_t'Size use 8 * Constants.SIZEOF_tv_usec;\n+   pragma Convention (C, suseconds_t);\n \n    type Timeval is record\n-      Tv_Sec  : Timeval_Unit;\n-      Tv_Usec : Timeval_Unit;\n+      Tv_Sec  : time_t;\n+      Tv_Usec : suseconds_t;\n    end record;\n    pragma Convention (C, Timeval);\n \n@@ -197,163 +210,137 @@ package GNAT.Sockets.Thin is\n    function C_Accept\n      (S       : C.int;\n       Addr    : System.Address;\n-      Addrlen : access C.int)\n-      return    C.int;\n+      Addrlen : access C.int) return C.int;\n \n    function C_Bind\n      (S       : C.int;\n       Name    : System.Address;\n-      Namelen : C.int)\n-      return    C.int;\n+      Namelen : C.int) return C.int;\n \n    function C_Close\n-     (Fd   : C.int)\n-      return C.int;\n+     (Fd : C.int) return C.int;\n \n    function C_Connect\n      (S       : C.int;\n       Name    : System.Address;\n-      Namelen : C.int)\n-      return    C.int;\n+      Namelen : C.int) return C.int;\n \n    function C_Gethostbyaddr\n      (Addr : System.Address;\n       Len  : C.int;\n-      Typ  : C.int)\n-      return Hostent_Access;\n+      Typ  : C.int) return Hostent_Access;\n \n    function C_Gethostbyname\n-     (Name : C.char_array)\n-      return Hostent_Access;\n+     (Name : C.char_array) return Hostent_Access;\n \n    function C_Gethostname\n      (Name    : System.Address;\n-      Namelen : C.int)\n-      return    C.int;\n+      Namelen : C.int) return C.int;\n \n    function C_Getpeername\n      (S       : C.int;\n       Name    : System.Address;\n-      Namelen : access C.int)\n-      return    C.int;\n+      Namelen : access C.int) return C.int;\n \n    function C_Getservbyname\n      (Name  : C.char_array;\n-      Proto : C.char_array)\n-      return Servent_Access;\n+      Proto : C.char_array) return Servent_Access;\n \n    function C_Getservbyport\n      (Port  : C.int;\n-      Proto : C.char_array)\n-      return Servent_Access;\n+      Proto : C.char_array) return Servent_Access;\n \n    function C_Getsockname\n      (S       : C.int;\n       Name    : System.Address;\n-      Namelen : access C.int)\n-      return    C.int;\n+      Namelen : access C.int) return C.int;\n \n    function C_Getsockopt\n      (S       : C.int;\n       Level   : C.int;\n       Optname : C.int;\n       Optval  : System.Address;\n-      Optlen  : access C.int)\n-      return    C.int;\n+      Optlen  : access C.int) return C.int;\n \n    function C_Inet_Addr\n-     (Cp   : C.Strings.chars_ptr)\n-      return C.int;\n+     (Cp   : C.Strings.chars_ptr) return C.int;\n \n    function C_Ioctl\n      (S    : C.int;\n       Req  : C.int;\n-      Arg  : Int_Access)\n-      return C.int;\n+      Arg  : Int_Access) return C.int;\n \n    function C_Listen (S, Backlog : C.int) return C.int;\n \n    function C_Readv\n      (Fd     : C.int;\n       Iov    : System.Address;\n-      Iovcnt : C.int)\n-      return   C.int;\n+      Iovcnt : C.int) return C.int;\n \n    function C_Recv\n      (S     : C.int;\n       Msg   : System.Address;\n       Len   : C.int;\n-      Flags : C.int)\n-      return  C.int;\n+      Flags : C.int) return C.int;\n \n    function C_Recvfrom\n      (S       : C.int;\n       Msg     : System.Address;\n       Len     : C.int;\n       Flags   : C.int;\n       From    : Sockaddr_In_Access;\n-      Fromlen : access C.int)\n-      return    C.int;\n+      Fromlen : access C.int) return C.int;\n \n    function C_Select\n      (Nfds      : C.int;\n       Readfds   : Fd_Set_Access;\n       Writefds  : Fd_Set_Access;\n       Exceptfds : Fd_Set_Access;\n-      Timeout   : Timeval_Access)\n-      return      C.int;\n+      Timeout   : Timeval_Access) return C.int;\n \n    function C_Send\n      (S     : C.int;\n       Msg   : System.Address;\n       Len   : C.int;\n-      Flags : C.int)\n-      return  C.int;\n+      Flags : C.int) return C.int;\n \n    function C_Sendto\n      (S     : C.int;\n       Msg   : System.Address;\n       Len   : C.int;\n       Flags : C.int;\n       To    : Sockaddr_In_Access;\n-      Tolen : C.int)\n-      return  C.int;\n+      Tolen : C.int) return C.int;\n \n    function C_Setsockopt\n      (S       : C.int;\n       Level   : C.int;\n       Optname : C.int;\n       Optval  : System.Address;\n-      Optlen  : C.int)\n-      return    C.int;\n+      Optlen  : C.int) return C.int;\n \n    function C_Shutdown\n      (S    : C.int;\n-      How  : C.int)\n-      return C.int;\n+      How  : C.int) return C.int;\n \n    function C_Socket\n      (Domain   : C.int;\n       Typ      : C.int;\n-      Protocol : C.int)\n-      return     C.int;\n+      Protocol : C.int) return C.int;\n \n    function C_Strerror\n-     (Errnum : C.int)\n-      return   C.Strings.chars_ptr;\n+     (Errnum : C.int) return C.Strings.chars_ptr;\n \n    function C_System\n-     (Command : System.Address)\n-      return    C.int;\n+     (Command : System.Address) return C.int;\n \n    function C_Writev\n      (Fd     : C.int;\n       Iov    : System.Address;\n-      Iovcnt : C.int)\n-      return   C.int;\n+      Iovcnt : C.int) return C.int;\n \n    procedure Free_Socket_Set\n-     (Set    : Fd_Set_Access);\n+     (Set : Fd_Set_Access);\n    --  Free system-dependent socket set\n \n    procedure Get_Socket_From_Set\n@@ -387,8 +374,7 @@ package GNAT.Sockets.Thin is\n    --  set back to the real largest socket in the socket set.\n \n    function  New_Socket_Set\n-     (Set    : Fd_Set_Access)\n-     return   Fd_Set_Access;\n+     (Set : Fd_Set_Access) return Fd_Set_Access;\n    --  Allocate a new socket set which is a system-dependent structure\n    --  and initialize by copying Set if it is non-null, by making it\n    --  empty otherwise."}, {"sha": "02a0df3fe33facfb0e0fb263502d0857f433ce72", "filename": "gcc/ada/g-socthi-vxworks.adb", "status": "modified", "additions": 17, "deletions": 10, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e1fd98f3dcc4c06007d1dfbe9fc913e0032a38c/gcc%2Fada%2Fg-socthi-vxworks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e1fd98f3dcc4c06007d1dfbe9fc913e0032a38c/gcc%2Fada%2Fg-socthi-vxworks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socthi-vxworks.adb?ref=3e1fd98f3dcc4c06007d1dfbe9fc913e0032a38c", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---            Copyright (C) 2002-2004 Ada Core Technologies, Inc.           --\n+--                     Copyright (C) 2002-2005, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -267,14 +267,19 @@ package body GNAT.Sockets.Thin is\n       function To_Pointer is\n         new Unchecked_Conversion (System.Address, int_Access);\n \n-      procedure VxWorks_Gethostbyaddr\n-        (Addr : C.int; Buf : out C.char_array);\n-      pragma Import (C, VxWorks_Gethostbyaddr, \"hostGetByAddr\");\n+      function VxWorks_hostGetByAddr\n+        (Addr : C.int; Buf : System.Address) return C.int;\n+      pragma Import (C, VxWorks_hostGetByAddr, \"hostGetByAddr\");\n \n-      Host_Name : C.char_array (1 .. Max_Name_Length);\n+      Host_Name : aliased C.char_array (1 .. Max_Name_Length);\n \n    begin\n-      VxWorks_Gethostbyaddr (To_Pointer (Addr).all, Host_Name);\n+      if VxWorks_hostGetByAddr (To_Pointer (Addr).all,\n+                                Host_Name (Host_Name'First)'Address)\n+           /= Constants.OK\n+      then\n+         return null;\n+      end if;\n \n       In_Addr_Access_Ptr.all.all := To_In_Addr (To_Pointer (Addr).all);\n       Local_Hostent.all.H_Name := C.Strings.New_Char_Array (Host_Name);\n@@ -289,14 +294,17 @@ package body GNAT.Sockets.Thin is\n    function C_Gethostbyname\n      (Name : C.char_array) return Hostent_Access\n    is\n-      function VxWorks_Gethostbyname\n+      function VxWorks_hostGetByName\n         (Name : C.char_array) return C.int;\n-      pragma Import (C, VxWorks_Gethostbyname, \"hostGetByName\");\n+      pragma Import (C, VxWorks_hostGetByName, \"hostGetByName\");\n \n       Addr : C.int;\n \n    begin\n-      Addr := VxWorks_Gethostbyname (Name);\n+      Addr := VxWorks_hostGetByName (Name);\n+      if Addr /= Constants.OK then\n+         return null;\n+      end if;\n \n       In_Addr_Access_Ptr.all.all := To_In_Addr (Addr);\n       Local_Hostent.all.H_Name := C.Strings.New_Char_Array (To_C (Host_Name));\n@@ -515,7 +523,6 @@ package body GNAT.Sockets.Thin is\n \n    function Non_Blocking_Socket (S : C.int) return Boolean is\n       R : Boolean;\n-\n    begin\n       Task_Lock.Lock;\n       R := (Is_Socket_In_Set (Non_Blocking_Sockets, S) /= 0);"}, {"sha": "6aee25d4ef4640a1aa6d2efce263e5611b15e5f7", "filename": "gcc/ada/g-socthi-vxworks.ads", "status": "modified", "additions": 49, "deletions": 63, "changes": 112, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e1fd98f3dcc4c06007d1dfbe9fc913e0032a38c/gcc%2Fada%2Fg-socthi-vxworks.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e1fd98f3dcc4c06007d1dfbe9fc913e0032a38c/gcc%2Fada%2Fg-socthi-vxworks.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socthi-vxworks.ads?ref=3e1fd98f3dcc4c06007d1dfbe9fc913e0032a38c", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---            Copyright (C) 2002-2005 Ada Core Technologies, Inc.           --\n+--                     Copyright (C) 2002-2005, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -63,15 +63,28 @@ package GNAT.Sockets.Thin is\n    --  Returns the error message string for the error number Errno. If Errno is\n    --  not known it returns \"Unknown system error\".\n \n+   function Host_Errno return Integer;\n+   pragma Import (C, Host_Errno, \"__gnat_get_h_errno\");\n+   --  Returns last host error number\n+\n    subtype Fd_Set_Access is System.Address;\n    No_Fd_Set : constant Fd_Set_Access := System.Null_Address;\n \n-   type Timeval_Unit is new C.int;\n-   pragma Convention (C, Timeval_Unit);\n+   type time_t is\n+     range -2 ** (8 * Constants.SIZEOF_tv_sec - 1)\n+         .. 2 ** (8 * Constants.SIZEOF_tv_sec - 1) - 1;\n+   for time_t'Size use 8 * Constants.SIZEOF_tv_sec;\n+   pragma Convention (C, time_t);\n+\n+   type suseconds_t is\n+     range -2 ** (8 * Constants.SIZEOF_tv_usec - 1)\n+         .. 2 ** (8 * Constants.SIZEOF_tv_usec - 1) - 1;\n+   for suseconds_t'Size use 8 * Constants.SIZEOF_tv_usec;\n+   pragma Convention (C, suseconds_t);\n \n    type Timeval is record\n-      Tv_Sec  : Timeval_Unit;\n-      Tv_Usec : Timeval_Unit;\n+      Tv_Sec  : time_t;\n+      Tv_Usec : suseconds_t;\n    end record;\n    pragma Convention (C, Timeval);\n \n@@ -199,163 +212,137 @@ package GNAT.Sockets.Thin is\n    function C_Accept\n      (S       : C.int;\n       Addr    : System.Address;\n-      Addrlen : access C.int)\n-      return    C.int;\n+      Addrlen : access C.int) return C.int;\n \n    function C_Bind\n      (S       : C.int;\n       Name    : System.Address;\n-      Namelen : C.int)\n-      return    C.int;\n+      Namelen : C.int) return C.int;\n \n    function C_Close\n-     (Fd   : C.int)\n-      return C.int;\n+     (Fd : C.int) return C.int;\n \n    function C_Connect\n      (S       : C.int;\n       Name    : System.Address;\n-      Namelen : C.int)\n-      return    C.int;\n+      Namelen : C.int) return C.int;\n \n    function C_Gethostbyaddr\n      (Addr : System.Address;\n       Len  : C.int;\n-      Typ  : C.int)\n-      return Hostent_Access;\n+      Typ  : C.int) return Hostent_Access;\n \n    function C_Gethostbyname\n-     (Name : C.char_array)\n-      return Hostent_Access;\n+     (Name : C.char_array) return Hostent_Access;\n \n    function C_Gethostname\n      (Name    : System.Address;\n-      Namelen : C.int)\n-      return    C.int;\n+      Namelen : C.int) return C.int;\n \n    function C_Getpeername\n      (S       : C.int;\n       Name    : System.Address;\n-      Namelen : access C.int)\n-      return    C.int;\n+      Namelen : access C.int) return C.int;\n \n    function C_Getservbyname\n      (Name  : C.char_array;\n-      Proto : C.char_array)\n-      return Servent_Access;\n+      Proto : C.char_array) return Servent_Access;\n \n    function C_Getservbyport\n      (Port  : C.int;\n-      Proto : C.char_array)\n-      return Servent_Access;\n+      Proto : C.char_array) return Servent_Access;\n \n    function C_Getsockname\n      (S       : C.int;\n       Name    : System.Address;\n-      Namelen : access C.int)\n-      return    C.int;\n+      Namelen : access C.int) return C.int;\n \n    function C_Getsockopt\n      (S       : C.int;\n       Level   : C.int;\n       Optname : C.int;\n       Optval  : System.Address;\n-      Optlen  : access C.int)\n-      return    C.int;\n+      Optlen  : access C.int) return C.int;\n \n    function C_Inet_Addr\n-     (Cp   : C.Strings.chars_ptr)\n-      return C.int;\n+     (Cp : C.Strings.chars_ptr) return C.int;\n \n    function C_Ioctl\n-     (S    : C.int;\n-      Req  : C.int;\n-      Arg  : Int_Access)\n-      return C.int;\n+     (S   : C.int;\n+      Req : C.int;\n+      Arg : Int_Access) return C.int;\n \n    function C_Listen (S, Backlog : C.int) return C.int;\n \n    function C_Readv\n      (Fd     : C.int;\n       Iov    : System.Address;\n-      Iovcnt : C.int)\n-      return   C.int;\n+      Iovcnt : C.int) return C.int;\n \n    function C_Recv\n      (S     : C.int;\n       Msg   : System.Address;\n       Len   : C.int;\n-      Flags : C.int)\n-      return  C.int;\n+      Flags : C.int) return C.int;\n \n    function C_Recvfrom\n      (S       : C.int;\n       Msg     : System.Address;\n       Len     : C.int;\n       Flags   : C.int;\n       From    : Sockaddr_In_Access;\n-      Fromlen : access C.int)\n-      return    C.int;\n+      Fromlen : access C.int) return C.int;\n \n    function C_Select\n      (Nfds      : C.int;\n       Readfds   : Fd_Set_Access;\n       Writefds  : Fd_Set_Access;\n       Exceptfds : Fd_Set_Access;\n-      Timeout   : Timeval_Access)\n-      return      C.int;\n+      Timeout   : Timeval_Access) return C.int;\n \n    function C_Send\n      (S     : C.int;\n       Msg   : System.Address;\n       Len   : C.int;\n-      Flags : C.int)\n-      return  C.int;\n+      Flags : C.int) return C.int;\n \n    function C_Sendto\n      (S     : C.int;\n       Msg   : System.Address;\n       Len   : C.int;\n       Flags : C.int;\n       To    : Sockaddr_In_Access;\n-      Tolen : C.int)\n-      return  C.int;\n+      Tolen : C.int) return C.int;\n \n    function C_Setsockopt\n      (S       : C.int;\n       Level   : C.int;\n       Optname : C.int;\n       Optval  : System.Address;\n-      Optlen  : C.int)\n-      return    C.int;\n+      Optlen  : C.int) return C.int;\n \n    function C_Shutdown\n-     (S    : C.int;\n-      How  : C.int)\n-      return C.int;\n+     (S   : C.int;\n+      How : C.int) return C.int;\n \n    function C_Socket\n      (Domain   : C.int;\n       Typ      : C.int;\n-      Protocol : C.int)\n-      return     C.int;\n+      Protocol : C.int) return C.int;\n \n    function C_Strerror\n-     (Errnum : C.int)\n-      return   C.Strings.chars_ptr;\n+     (Errnum : C.int) return C.Strings.chars_ptr;\n \n    function C_System\n-     (Command : System.Address)\n-      return    C.int;\n+     (Command : System.Address) return C.int;\n \n    function C_Writev\n      (Fd     : C.int;\n       Iov    : System.Address;\n-      Iovcnt : C.int)\n-      return   C.int;\n+      Iovcnt : C.int) return C.int;\n \n    procedure Free_Socket_Set\n-     (Set    : Fd_Set_Access);\n+     (Set : Fd_Set_Access);\n    --  Free system-dependent socket set\n \n    procedure Get_Socket_From_Set\n@@ -389,8 +376,7 @@ package GNAT.Sockets.Thin is\n    --  set back to the real largest socket in the socket set.\n \n    function  New_Socket_Set\n-     (Set    : Fd_Set_Access)\n-     return   Fd_Set_Access;\n+     (Set : Fd_Set_Access) return Fd_Set_Access;\n    --  Allocate a new socket set which is a system-dependent structure\n    --  and initialize by copying Set if it is non-null, by making it\n    --  empty otherwise."}, {"sha": "5d06d99bcae09e9ed31355c297988a4f1f6018fe", "filename": "gcc/ada/g-socthi.ads", "status": "modified", "additions": 18, "deletions": 5, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e1fd98f3dcc4c06007d1dfbe9fc913e0032a38c/gcc%2Fada%2Fg-socthi.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e1fd98f3dcc4c06007d1dfbe9fc913e0032a38c/gcc%2Fada%2Fg-socthi.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socthi.ads?ref=3e1fd98f3dcc4c06007d1dfbe9fc913e0032a38c", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---              Copyright (C) 2001-2005 Ada Core Technologies, Inc.         --\n+--                     Copyright (C) 2001-2005, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -65,15 +65,28 @@ package GNAT.Sockets.Thin is\n    --  Returns the error message string for the error number Errno. If Errno is\n    --  not known it returns \"Unknown system error\".\n \n+   function Host_Errno return Integer;\n+   pragma Import (C, Host_Errno, \"__gnat_get_h_errno\");\n+   --  Returns last host error number\n+\n    subtype Fd_Set_Access is System.Address;\n    No_Fd_Set : constant Fd_Set_Access := System.Null_Address;\n \n-   type Timeval_Unit is new C.int;\n-   pragma Convention (C, Timeval_Unit);\n+   type time_t is\n+     range -2 ** (8 * Constants.SIZEOF_tv_sec - 1)\n+         .. 2 ** (8 * Constants.SIZEOF_tv_sec - 1) - 1;\n+   for time_t'Size use 8 * Constants.SIZEOF_tv_sec;\n+   pragma Convention (C, time_t);\n+\n+   type suseconds_t is\n+     range -2 ** (8 * Constants.SIZEOF_tv_usec - 1)\n+         .. 2 ** (8 * Constants.SIZEOF_tv_usec - 1) - 1;\n+   for suseconds_t'Size use 8 * Constants.SIZEOF_tv_usec;\n+   pragma Convention (C, suseconds_t);\n \n    type Timeval is record\n-      Tv_Sec  : Timeval_Unit;\n-      Tv_Usec : Timeval_Unit;\n+      Tv_Sec  : time_t;\n+      Tv_Usec : suseconds_t;\n    end record;\n    pragma Convention (C, Timeval);\n "}, {"sha": "e8284335bcf2519d7120f9559c13c7c85523299b", "filename": "gcc/ada/gen-soccon.c", "status": "modified", "additions": 46, "deletions": 6, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e1fd98f3dcc4c06007d1dfbe9fc913e0032a38c/gcc%2Fada%2Fgen-soccon.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e1fd98f3dcc4c06007d1dfbe9fc913e0032a38c/gcc%2Fada%2Fgen-soccon.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgen-soccon.c?ref=3e1fd98f3dcc4c06007d1dfbe9fc913e0032a38c", "patch": "@@ -4,7 +4,7 @@\n  *                                                                          *\n  *                           G E N - S O C C O N                            *\n  *                                                                          *\n- *            Copyright (C) 2004-2005 Free Software Foundation, Inc.        *\n+ *          Copyright (C) 2004-2005, Free Software Foundation, Inc.         *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *\n@@ -25,7 +25,7 @@\n /* This program generates g-soccon.ads */\n \n /* To build using DEC C:\n-  CC/DEFINE=\"TARGET=OpenVMS\" gen-soccon\n+  CC/DEFINE=\"TARGET=\"\"OpenVMS\"\"\" gen-soccon\n   LINK gen-soccon\n   RUN gen-soccon\n */\n@@ -37,6 +37,11 @@\n #include <stdlib.h>\n #include <stdio.h>\n #include <string.h>\n+#include <limits.h>\n+\n+#ifdef __MINGW32__\n+#include <fcntl.h>\n+#endif\n \n #include \"gsocket.h\"\n \n@@ -55,8 +60,8 @@ struct line *first = NULL, *last = NULL;\n #define _NL TXT(\"\")\n /* Empty line */\n \n-#define itoad(n) f_itoa (\"%d\", n)\n-#define itoax(n) f_itoa (\"16#%08x#\", n)\n+#define itoad(n) f_itoa (\"%d\", (n))\n+#define itoax(n) f_itoa (\"16#%08x#\", (n))\n \n #define CND(name,comment) add_line(#name, itoad (name), comment);\n /* Constant (decimal) */\n@@ -78,6 +83,10 @@ char *f_itoa (char *, int);\n \n void add_line (char *, char*, char*);\n \n+#ifdef __MINGW32__\n+unsigned int _CRT_fmode = _O_BINARY;\n+#endif\n+\n int\n main (void) {\n \n@@ -89,7 +98,7 @@ TXT(\"--               G N A T . S O C K E T S . C O N S T A N T S\n TXT(\"--                                                                          --\")\n TXT(\"--                                 S p e c                                  --\")\n TXT(\"--                                                                          --\")\n-TXT(\"--          Copyright (C) 2000-2005 Free Software Foundation, Inc.          --\")\n+TXT(\"--          Copyright (C) 2000-2005, Free Software Foundation, Inc.         --\")\n TXT(\"--                                                                          --\")\n TXT(\"-- GNAT is free software;  you can  redistribute it  and/or modify it under --\")\n TXT(\"-- terms of the  GNU General Public License as published  by the Free Soft- --\")\n@@ -118,7 +127,7 @@ TXT(\"--  This package provides target dependent definitions of constant for use\"\n TXT(\"--  by the GNAT.Sockets package (g-socket.ads). This package should not be\")\n TXT(\"--  directly with'ed by an applications program.\")\n _NL\n-TXT(\"--  This is the version for \" STR (TARGET))\n+TXT(\"--  This is the version for \" TARGET)\n TXT(\"--  This file is generated automatically, do not modify it by hand! Instead,\")\n TXT(\"--  make changes to gen-soccon.c and re-run it on each target.\")\n _NL\n@@ -564,6 +573,36 @@ _NL\n #endif\n CND(IOV_MAX, \"Maximum writev iovcnt\")\n \n+_NL\n+TXT(\"   ----------------------\")\n+TXT(\"   -- Type definitions --\")\n+TXT(\"   ----------------------\")\n+_NL\n+\n+{\n+  struct timeval tv;\n+TXT(\"   --  Sizes (in bytes) of the components of struct timeval\")\n+_NL\n+#define SIZEOF_tv_sec (sizeof tv.tv_sec)\n+CND(SIZEOF_tv_sec, \"tv_sec\")\n+#define SIZEOF_tv_usec (sizeof tv.tv_usec)\n+CND(SIZEOF_tv_usec, \"tv_usec\")\n+}\n+\n+#ifdef __vxworks\n+_NL\n+TXT(\"   --------------------------------\")\n+TXT(\"   -- VxWorks-specific constants --\")\n+TXT(\"   --------------------------------\")\n+_NL\n+TXT(\"   --  These constants may be used only within the VxWorks version of\")\n+TXT(\"   --  GNAT.Sockets.Thin.\")\n+_NL\n+\n+CND(OK,    \"VxWorks generic success\")\n+CND(ERROR, \"VxWorks generic error\")\n+#endif\n+\n _NL\n TXT(\"end GNAT.Sockets.Constants;\")\n \n@@ -614,6 +653,7 @@ f_itoa (char *fmt, int n) {\n void\n add_line (char *_text, char *_value, char *_comment) {\n   struct line *l = (struct line *) malloc (sizeof (struct line));\n+\n   l->text = _text;\n   l->value = _value;\n   l->comment = _comment;"}, {"sha": "a380788995a305149e316fa15eff1b9de896317a", "filename": "gcc/ada/gsocket.h", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e1fd98f3dcc4c06007d1dfbe9fc913e0032a38c/gcc%2Fada%2Fgsocket.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e1fd98f3dcc4c06007d1dfbe9fc913e0032a38c/gcc%2Fada%2Fgsocket.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgsocket.h?ref=3e1fd98f3dcc4c06007d1dfbe9fc913e0032a38c", "patch": "@@ -55,6 +55,8 @@\n #if defined(__vxworks)\n #include <vxWorks.h>\n #include <ioLib.h>\n+#include <hostLib.h>\n+#include <resolvLib.h>\n #define SHUT_RD\t\t0\n #define SHUT_WR\t\t1\n #define SHUT_RDWR\t2\n@@ -131,7 +133,9 @@\n #include <errno.h>\n #endif\n \n-#ifndef __vxworks\n+#ifdef __vxworks\n+#include <sys/times.h>\n+#else\n #include <sys/time.h>\n #endif\n "}, {"sha": "d02763a9548ca04b4fa4896f2a32ffc085ff5039", "filename": "gcc/ada/socket.c", "status": "modified", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e1fd98f3dcc4c06007d1dfbe9fc913e0032a38c/gcc%2Fada%2Fsocket.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e1fd98f3dcc4c06007d1dfbe9fc913e0032a38c/gcc%2Fada%2Fsocket.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsocket.c?ref=3e1fd98f3dcc4c06007d1dfbe9fc913e0032a38c", "patch": "@@ -40,6 +40,7 @@\n /* Required for __gnat_malloc() */\n \n #include <string.h>\n+/* Required for memcpy() */\n \n extern void __gnat_disable_sigpipe (int fd);\n extern void __gnat_free_socket_set (fd_set *);\n@@ -49,8 +50,10 @@ extern void __gnat_insert_socket_in_set (fd_set *, int);\n extern int __gnat_is_socket_in_set (fd_set *, int);\n extern fd_set *__gnat_new_socket_set (fd_set *);\n extern void __gnat_remove_socket_from_set (fd_set *, int);\n+extern int __gnat_get_h_errno (void);\n \f\n /* Disable the sending of SIGPIPE for writes on a broken stream */\n+\n void\n __gnat_disable_sigpipe (int fd)\n {\n@@ -152,3 +155,41 @@ __gnat_remove_socket_from_set (fd_set *set, int socket)\n {\n   FD_CLR (socket, set);\n }\n+\n+/* Get the value of the last host error */\n+\n+int\n+__gnat_get_h_errno (void) {\n+#ifdef __vxworks\n+  int vxw_errno = errno;\n+\n+  switch (vxw_errno) {\n+    case 0:\n+      return 0;\n+\n+    case S_resolvLib_HOST_NOT_FOUND:\n+    case S_hostLib_UNKNOWN_HOST:\n+      return HOST_NOT_FOUND;\n+\n+    case S_resolvLib_TRY_AGAIN:\n+      return TRY_AGAIN;\n+\n+    case S_resolvLib_NO_RECOVERY:\n+    case S_resolvLib_BUFFER_2_SMALL:\n+    case S_resolvLib_INVALID_PARAMETER:\n+    case S_resolvLib_INVALID_ADDRESS:\n+    case S_hostLib_INVALID_PARAMETER:\n+      return NO_RECOVERY;\n+\n+    case S_resolvLib_NO_DATA:\n+      return NO_DATA;\n+\n+    default:\n+      return -1;\n+  }\n+#elif defined(VMS)\n+  return errno;\n+#else\n+  return h_errno;\n+#endif\n+}"}]}