{"sha": "33d7a5215db14185db24d6c21708d00468de8c38", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzNkN2E1MjE1ZGIxNDE4NWRiMjRkNmMyMTcwOGQwMDQ2OGRlOGMzOA==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@cygnus.com", "date": "1998-06-08T18:13:34Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1998-06-08T18:13:34Z"}, "message": "Fix mips64vr4100-elf build failure.\n\n\t* mips.c (mips_secondary_reload_class): Use gp_reg_p instead of\n\tGP_REG_P.  Use gr_regs instead of GR_REGS.\n\nFrom-SVN: r20350", "tree": {"sha": "2067b762f6bb055f65e85796bd0f7c38d3d71f8b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2067b762f6bb055f65e85796bd0f7c38d3d71f8b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/33d7a5215db14185db24d6c21708d00468de8c38", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33d7a5215db14185db24d6c21708d00468de8c38", "html_url": "https://github.com/Rust-GCC/gccrs/commit/33d7a5215db14185db24d6c21708d00468de8c38", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33d7a5215db14185db24d6c21708d00468de8c38/comments", "author": null, "committer": null, "parents": [{"sha": "bcb807294777294109ee3c653f8ee5ab515a25f4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bcb807294777294109ee3c653f8ee5ab515a25f4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bcb807294777294109ee3c653f8ee5ab515a25f4"}], "stats": {"total": 17, "additions": 11, "deletions": 6}, "files": [{"sha": "d9452835dac7a5824b883225d2efb3e0cac7fd65", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33d7a5215db14185db24d6c21708d00468de8c38/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33d7a5215db14185db24d6c21708d00468de8c38/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=33d7a5215db14185db24d6c21708d00468de8c38", "patch": "@@ -1,3 +1,8 @@\n+Mon Jun  8 18:12:06 1998  Jim Wilson  <wilson@cygnus.com>\n+\n+\t* mips.c (mips_secondary_reload_class): Use gp_reg_p instead of\n+\tGP_REG_P.  Use gr_regs instead of GR_REGS.\n+\n Mon Jun  8 16:54:12 1998  Ken Raeburn   <raeburn@cygnus.com>\n                           Jeff Law      <law@cygnus.com>\n "}, {"sha": "56f5210363396d1a8c3b023aa80f2ba474f046d4", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33d7a5215db14185db24d6c21708d00468de8c38/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33d7a5215db14185db24d6c21708d00468de8c38/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=33d7a5215db14185db24d6c21708d00468de8c38", "patch": "@@ -7086,14 +7086,14 @@ mips_secondary_reload_class (class, mode, x, in_p)\n      to a general register, or when copying from register 0.  */\n   if (class == HILO_REG && regno != GP_REG_FIRST + 0)\n     return ((! in_p\n-\t     && GP_REG_P (regno)\n+\t     && gp_reg_p\n \t     && GET_MODE_SIZE (mode) <= GET_MODE_SIZE (SImode))\n-\t    ? NO_REGS : GR_REGS);\n+\t    ? NO_REGS : gr_regs);\n   else if (regno == HILO_REGNUM)\n     return ((in_p\n-\t     && class == GR_REGS\n+\t     && class == gr_regs\n \t     && GET_MODE_SIZE (mode) <= GET_MODE_SIZE (SImode))\n-\t    ? NO_REGS : GR_REGS);\n+\t    ? NO_REGS : gr_regs);\n \n   /* Copying from HI or LO to anywhere other than a general register\n      requires a general register.  */\n@@ -7104,7 +7104,7 @@ mips_secondary_reload_class (class, mode, x, in_p)\n \t  /* We can't really copy to HI or LO at all in mips16 mode.  */\n \t  return M16_REGS;\n \t}\n-      return gp_reg_p ? NO_REGS : GR_REGS;\n+      return gp_reg_p ? NO_REGS : gr_regs;\n     }\n   if (MD_REG_P (regno))\n     {\n@@ -7113,7 +7113,7 @@ mips_secondary_reload_class (class, mode, x, in_p)\n \t  /* We can't really copy to HI or LO at all in mips16 mode.  */\n \t  return M16_REGS;\n \t}\n-      return class == gr_regs ? NO_REGS : GR_REGS;\n+      return class == gr_regs ? NO_REGS : gr_regs;\n     }\n \n   /* We can only copy a value to a condition code register from a"}]}