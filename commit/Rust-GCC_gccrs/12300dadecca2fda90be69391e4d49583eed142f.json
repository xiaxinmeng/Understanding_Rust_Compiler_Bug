{"sha": "12300dadecca2fda90be69391e4d49583eed142f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTIzMDBkYWRlY2NhMmZkYTkwYmU2OTM5MWU0ZDQ5NTgzZWVkMTQyZg==", "commit": {"author": {"name": "Douglas B Rupp", "email": "rupp@gnat.com", "date": "2002-01-11T12:41:16Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "2002-01-11T12:41:16Z"}, "message": "vms.h: (MD_FALLBACK_FRAME_STATE_FOR): Fix errors.\n\n\t* config/alpha/vms.h: (MD_FALLBACK_FRAME_STATE_FOR): Fix errors.\n\tProtect with IN_LIBGCC.\n\t(LINK_EH_SPEC): Add required trailing space.\n\nFrom-SVN: r48773", "tree": {"sha": "048bfc8969fb5f8920e1214a6e438bbc779bdea6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/048bfc8969fb5f8920e1214a6e438bbc779bdea6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/12300dadecca2fda90be69391e4d49583eed142f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12300dadecca2fda90be69391e4d49583eed142f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/12300dadecca2fda90be69391e4d49583eed142f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12300dadecca2fda90be69391e4d49583eed142f/comments", "author": null, "committer": null, "parents": [{"sha": "27511a9a29431330f009ed9fadae06680fa0de97", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27511a9a29431330f009ed9fadae06680fa0de97", "html_url": "https://github.com/Rust-GCC/gccrs/commit/27511a9a29431330f009ed9fadae06680fa0de97"}], "stats": {"total": 18, "additions": 12, "deletions": 6}, "files": [{"sha": "c2de8ae14da5ad776977b7a15cc5c630dfc83182", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12300dadecca2fda90be69391e4d49583eed142f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12300dadecca2fda90be69391e4d49583eed142f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=12300dadecca2fda90be69391e4d49583eed142f", "patch": "@@ -1,3 +1,9 @@\n+Fri Jan 11 07:35:12 2002  Douglas B Rupp  <rupp@gnat.com>\n+\n+\t* config/alpha/vms.h: (MD_FALLBACK_FRAME_STATE_FOR): Fix errors.\n+\tProtect with IN_LIBGCC.\n+\t(LINK_EH_SPEC): Add required trailing space.\n+\n Fri Jan 11 09:25:05 2002  Nicola Pero  <n.pero@mi.flashnet.it>\n \n \t* c-tree.h: Move function declarations so that they are listed "}, {"sha": "2d1d7d6431443fac5101f10a24a9ac6c1515a8df", "filename": "gcc/config/alpha/vms.h", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12300dadecca2fda90be69391e4d49583eed142f/gcc%2Fconfig%2Falpha%2Fvms.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12300dadecca2fda90be69391e4d49583eed142f/gcc%2Fconfig%2Falpha%2Fvms.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Fvms.h?ref=12300dadecca2fda90be69391e4d49583eed142f", "patch": "@@ -382,23 +382,22 @@ do {\t\t\t\t\t\t\t\t\t\\\n #define EH_RETURN_HANDLER_RTX \\\n   gen_rtx_MEM (Pmode, plus_constant (stack_pointer_rtx, 8))\n \n-#define LINK_EH_SPEC \"vms-dwarf2eh.o%s\"\n+#define LINK_EH_SPEC \"vms-dwarf2eh.o%s \"\n \n #ifdef IN_LIBGCC2\n #include <libicb.h>\n #include <pdscdef.h>\n-#endif\n \n #define MD_FALLBACK_FRAME_STATE_FOR(CONTEXT, FS, SUCCESS)\t\t\\\n  do {\t\t\t\t\t\t\t\t\t\\\n   unsigned long handle;\t\t\t\t\t\t\t\\\n   PDSCDEF *pv;\t\t\t\t\t\t\t\t\\\n   INVO_CONTEXT_BLK invo;\t\t\t\t\t\t\\\n \t\t\t\t\t\t\t\t\t\\\n-  memset (&invo, 0, sizeof INVO_CONTEXT_BLK);\t\t\t\t\\\n+  memset (&invo, 0, sizeof (INVO_CONTEXT_BLK));\t\t\t\t\\\n \t\t\t\t\t\t\t\t\t\\\n   invo.libicb$q_ireg [29] = *((long long *) (CONTEXT)->reg [29]);\t\\\n-  invo.libicb$q_ireg [30] = (long long) (CONTEXT)->cfa\t\t\t\\\n+  invo.libicb$q_ireg [30] = (long long) (CONTEXT)->cfa;\t\t\t\\\n   handle = LIB$GET_INVO_HANDLE (&invo);\t\t\t\t\t\\\n   LIB$GET_INVO_CONTEXT (handle, &invo);\t\t\t\t\t\\\n   pv = (PDSCDEF *) invo.libicb$ph_procedure_descriptor;\t\t\t\\\n@@ -408,13 +407,13 @@ do {\t\t\t\t\t\t\t\t\t\\\n       int i, j;\t\t\t\t\t\t\t\t\\\n \t\t\t\t\t\t\t\t\t\\\n       (FS)->cfa_offset = pv->pdsc$l_size;\t\t\t\t\\\n-      (FS)->cfg_reg = pv->pdsc$w_flags & PDSC$M_BASE_REG_IS_FP ? 29 : 30; \\\n+      (FS)->cfa_reg = pv->pdsc$w_flags & PDSC$M_BASE_REG_IS_FP ? 29 : 30; \\\n       (FS)->retaddr_column = 26;\t\t\t\t\t\\\n       (FS)->cfa_how = CFA_REG_OFFSET;\t\t\t\t\t\\\n       (FS)->regs.reg[27].loc.offset = -pv->pdsc$l_size;\t\t\t\\\n       (FS)->regs.reg[27].how = REG_SAVED_OFFSET;\t\t\t\\\n       (FS)->regs.reg[26].loc.offset\t\t\t\t\t\\\n-\t = pv->pdsc$w_rsa_offset - pv->pdsc$l_size);\t\t\t\\\n+\t = pv->pdsc$w_rsa_offset - pv->pdsc$l_size;\t\t\t\\\n       (FS)->regs.reg[26].how = REG_SAVED_OFFSET;\t\t\t\\\n \t\t\t\t\t\t\t\t\t\\\n       for (i = 0, j = 0; i < 32; i++)\t\t\t\t\t\\\n@@ -428,6 +427,7 @@ do {\t\t\t\t\t\t\t\t\t\\\n       goto SUCCESS;\t\t\t\t\t\t\t\\\n     }\t\t\t\t\t\t\t\t\t\\\n } while (0)\n+#endif\n \n /* This is how to output an assembler line\n    that says to advance the location counter"}]}