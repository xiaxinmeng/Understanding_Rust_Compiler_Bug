{"sha": "d8158369c690bbfc758415098c8af499dfebdad7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDgxNTgzNjljNjkwYmJmYzc1ODQxNTA5OGM4YWY0OTlkZmViZGFkNw==", "commit": {"author": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2007-06-14T13:04:05Z"}, "committer": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2007-06-14T13:04:05Z"}, "message": "re PR fortran/32302 (Incorrect result with -O2)\n\n2007-06-14  Paul Thomas  <pault@gcc.gnu.org>\n\n\tPR fortran/32302\n\t* trans-common.c (build_common_decl): If resizing of common\n\tdecl is needed, update the TREE_TYPE.\n\n2007-06-14  Paul Thomas  <pault@gcc.gnu.org>\n\n\tPR fortran/32302\n\t* gfortran.dg/common_resize_1.f90: New test.\n\nFrom-SVN: r125708", "tree": {"sha": "5643e580c551f0ac4b115d191271062314f56bdc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5643e580c551f0ac4b115d191271062314f56bdc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d8158369c690bbfc758415098c8af499dfebdad7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8158369c690bbfc758415098c8af499dfebdad7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d8158369c690bbfc758415098c8af499dfebdad7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8158369c690bbfc758415098c8af499dfebdad7/comments", "author": null, "committer": null, "parents": [{"sha": "77a1416d57d6518ba1cc81630625dfdc97053367", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77a1416d57d6518ba1cc81630625dfdc97053367", "html_url": "https://github.com/Rust-GCC/gccrs/commit/77a1416d57d6518ba1cc81630625dfdc97053367"}], "stats": {"total": 200, "additions": 194, "deletions": 6}, "files": [{"sha": "c2c8dd4a919e7921b2506cc074df235d60dcc6f4", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8158369c690bbfc758415098c8af499dfebdad7/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8158369c690bbfc758415098c8af499dfebdad7/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=d8158369c690bbfc758415098c8af499dfebdad7", "patch": "@@ -1,3 +1,9 @@\n+2007-06-14  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/32302\n+\t* trans-common.c (build_common_decl): If resizing of common\n+\tdecl is needed, update the TREE_TYPE.\n+\n 2007-06-13  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/32323"}, {"sha": "78cb7be3e8ef867cd58ff18ecc9619789f1f9639", "filename": "gcc/fortran/trans-common.c", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8158369c690bbfc758415098c8af499dfebdad7/gcc%2Ffortran%2Ftrans-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8158369c690bbfc758415098c8af499dfebdad7/gcc%2Ffortran%2Ftrans-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-common.c?ref=d8158369c690bbfc758415098c8af499dfebdad7", "patch": "@@ -360,14 +360,15 @@ build_common_decl (gfc_common_head *com, tree union_type, bool is_init)\n       tree size = TYPE_SIZE_UNIT (union_type);\n       if (tree_int_cst_lt (DECL_SIZE_UNIT (decl), size))\n         {\n-          /* Named common blocks of the same name shall be of the same size\n-             in all scoping units of a program in which they appear, but\n-             blank common blocks may be of different sizes.  */\n-          if (strcmp (com->name, BLANK_COMMON_NAME))\n+\t  /* Named common blocks of the same name shall be of the same size\n+\t     in all scoping units of a program in which they appear, but\n+\t     blank common blocks may be of different sizes.  */\n+\t  if (strcmp (com->name, BLANK_COMMON_NAME))\n \t    gfc_warning (\"Named COMMON block '%s' at %L shall be of the \"\n \t\t\t \"same size\", com->name, &com->where);\n-          DECL_SIZE_UNIT (decl) = size;\n-        }\n+\t  DECL_SIZE_UNIT (decl) = size;\n+\t  TREE_TYPE (decl) = union_type;\n+\t}\n      }\n \n   /* If this common block has been declared in a previous program unit,"}, {"sha": "930493b01ebf8297468315a0a305ae96643c0f38", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8158369c690bbfc758415098c8af499dfebdad7/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8158369c690bbfc758415098c8af499dfebdad7/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d8158369c690bbfc758415098c8af499dfebdad7", "patch": "@@ -1,3 +1,8 @@\n+2007-06-14  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/32302\n+\t* gfortran.dg/common_resize_1.f90: New test.\n+\n 2007-06-14  Dorit Nuzman  <dorit@il.ibm.com>\n \n \tPR target/32274"}, {"sha": "7d4baaacea6a057c60d1530045a9e2106e863d95", "filename": "gcc/testsuite/gfortran.dg/common_resize_1.f", "status": "added", "additions": 176, "deletions": 0, "changes": 176, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8158369c690bbfc758415098c8af499dfebdad7/gcc%2Ftestsuite%2Fgfortran.dg%2Fcommon_resize_1.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8158369c690bbfc758415098c8af499dfebdad7/gcc%2Ftestsuite%2Fgfortran.dg%2Fcommon_resize_1.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fcommon_resize_1.f?ref=d8158369c690bbfc758415098c8af499dfebdad7", "patch": "@@ -0,0 +1,176 @@\n+c { dg-do run }\n+c { dg-options \"-std=legacy\" }\n+c\n+c Tests the fix for PR32302, in which the resizing of 'aux32' would cause\n+c misalignment for double precision types and a wrong result would be obtained\r\n+c at any level of optimization except none.\n+c\n+c Contributed by Dale Ranta <dir@lanl.gov> \n+c\n+      subroutine unpki(ixp,nwcon,nmel)\r\n+      parameter(lnv=32)\r\n+      implicit double precision (a-h,o-z)                                    dp\r\n+c\r\n+c     unpack connection data\r\n+c\r\n+      common/aux32/kka(lnv),kkb(lnv),kkc(lnv),\r\n+     1 kk1(lnv),kk2(lnv),kk3(lnv),dxy(lnv),\r\n+     2 dyx(lnv),dyz(lnv),dzy(lnv),dzx(lnv),\r\n+     3 dxz(lnv),vx17(lnv),vx28(lnv),vx35(lnv),\r\n+     4 vx46(lnv),vy17(lnv),vy28(lnv),\r\n+     5 vy35(lnv),vy46(lnv),vz17(lnv),vz28(lnv),vz35(lnv),vz46(lnv)\r\n+      common/aux33/ix1(lnv),ix2(lnv),ix3(lnv),ix4(lnv),ix5(lnv),\r\n+     1             ix6(lnv),ix7(lnv),ix8(lnv),mxt(lnv)\r\n+      dimension ixp(nwcon,*)\r\n+c\r\n+      return\r\n+      end\r\n+      subroutine prtal\r\n+      parameter(lnv=32)\r\n+      implicit double precision (a-h,o-z)                                    dp\r\n+      common/aux8/\r\n+     & x1(lnv),x2(lnv),x3(lnv),x4(lnv),\r\n+     & x5(lnv),x6(lnv),x7(lnv),x8(lnv),\r\n+     & y1(lnv),y2(lnv),y3(lnv),y4(lnv),\r\n+     & y5(lnv),y6(lnv),y7(lnv),y8(lnv),\r\n+     & z1(lnv),z2(lnv),z3(lnv),z4(lnv),\r\n+     & z5(lnv),z6(lnv),z7(lnv),z8(lnv)\r\n+      common/aux9/vlrho(lnv),det(lnv)\r\n+      common/aux10/\r\n+     1 px1(lnv),px2(lnv),px3(lnv),px4(lnv),\r\n+     & px5(lnv),px6(lnv),px7(lnv),px8(lnv),\r\n+     2 py1(lnv),py2(lnv),py3(lnv),py4(lnv),\r\n+     & py5(lnv),py6(lnv),py7(lnv),py8(lnv),\r\n+     3 pz1(lnv),pz2(lnv),pz3(lnv),pz4(lnv),\r\n+     & pz5(lnv),pz6(lnv),pz7(lnv),pz8(lnv),\r\n+     4 vx1(lnv),vx2(lnv),vx3(lnv),vx4(lnv),\r\n+     5 vx5(lnv),vx6(lnv),vx7(lnv),vx8(lnv),\r\n+     6 vy1(lnv),vy2(lnv),vy3(lnv),vy4(lnv),\r\n+     7 vy5(lnv),vy6(lnv),vy7(lnv),vy8(lnv),\r\n+     8 vz1(lnv),vz2(lnv),vz3(lnv),vz4(lnv),\r\n+     9 vz5(lnv),vz6(lnv),vz7(lnv),vz8(lnv)\r\n+      common/aux32/    ! { dg-warning \"shall be of the same size\" }\r\n+     a a17(lnv),a28(lnv),dett(lnv),\r\n+     1 aj1(lnv),aj2(lnv),aj3(lnv),aj4(lnv),\r\n+     2 aj5(lnv),aj6(lnv),aj7(lnv),aj8(lnv),\r\n+     3 aj9(lnv),x17(lnv),x28(lnv),x35(lnv),\r\n+     4 x46(lnv),y17(lnv),y28(lnv),y35(lnv),\r\n+     5 y46(lnv),z17(lnv),z28(lnv),z35(lnv),z46(lnv)\r\n+      common/aux33/    ! { dg-warning \"shall be of the same size\" }\r\n+     a ix1(lnv),ix2(lnv),ix3(lnv),ix4(lnv),ix5(lnv),\r\n+     1             ix6(lnv),ix7(lnv),ix8(lnv),mxt(lnv),nmel\r\n+      common/aux36/lft,llt\r\n+      common/failu/sieu(lnv),failu(lnv)\r\n+      common/sand1/ihf,ibemf,ishlf,itshf\r\n+      dimension aj5968(lnv),aj6749(lnv),aj4857(lnv),aji1(lnv),aji2(lnv),\r\n+     1          aji3(lnv),aji4(lnv),aji5(lnv),\r\n+     1          aji6(lnv),aji7(lnv),aji8(lnv),aji9(lnv),aj12(lnv),\r\n+     2          aj45(lnv),aj78(lnv),b17(lnv),b28(lnv),c17(lnv),c28(lnv)\r\n+c\r\n+      equivalence (x17,aj5968),(x28,aj6749),(x35,aj4857),(x46,aji1),\r\n+     1 (y17,aji2),(y28,aji3),(y35,aji4),(y46,aji5),(z17,aji6),\r\n+     2 (z28,aji7),(z35,aji8),(z46,aji9),(aj1,aj12),(aj2,aj45),\r\n+     3 (aj3,aj78),(px1,b17),(px2,b28),(px3,c17),(px4,c28)\r\n+      data o64th/0.0156250/\r\n+c\r\n+c     jacobian matrix\r\n+c\r\n+      do 10 i=lft,llt\r\n+      x17(i)=x7(i)-x1(i)\r\n+      x28(i)=x8(i)-x2(i)\r\n+      x35(i)=x5(i)-x3(i)\r\n+      x46(i)=x6(i)-x4(i)\r\n+      y17(i)=y7(i)-y1(i)\r\n+      y28(i)=y8(i)-y2(i)\r\n+      y35(i)=y5(i)-y3(i)\r\n+      y46(i)=y6(i)-y4(i)\r\n+      z17(i)=z7(i)-z1(i)\r\n+      z28(i)=z8(i)-z2(i)\r\n+      z35(i)=z5(i)-z3(i)\r\n+   10 z46(i)=z6(i)-z4(i)\r\n+      do 20 i=lft,llt\r\n+      aj1(i)=x17(i)+x28(i)-x35(i)-x46(i)\r\n+      aj2(i)=y17(i)+y28(i)-y35(i)-y46(i)\r\n+      aj3(i)=z17(i)+z28(i)-z35(i)-z46(i)\r\n+      a17(i)=x17(i)+x46(i)\r\n+      a28(i)=x28(i)+x35(i)\r\n+      b17(i)=y17(i)+y46(i)\r\n+      b28(i)=y28(i)+y35(i)\r\n+      c17(i)=z17(i)+z46(i)\r\n+   20 c28(i)=z28(i)+z35(i)\r\n+      do 30 i=lft,llt\r\n+      aj4(i)=a17(i)+a28(i)\r\n+      aj5(i)=b17(i)+b28(i)\r\n+      aj6(i)=c17(i)+c28(i)\r\n+      aj7(i)=a17(i)-a28(i)\r\n+      aj8(i)=b17(i)-b28(i)\r\n+   30 aj9(i)=c17(i)-c28(i)\r\n+c\r\n+c     jacobian\r\n+c\r\n+      do 40 i=lft,llt\r\n+      aj5968(i)=aj5(i)*aj9(i)-aj6(i)*aj8(i)\r\n+      aj6749(i)=aj6(i)*aj7(i)-aj4(i)*aj9(i)\r\n+   40 aj4857(i)=aj4(i)*aj8(i)-aj5(i)*aj7(i)\r\n+      if (ihf.ne.1) then\r\n+      do 50 i=lft,llt\r\n+   50 det(i)=o64th*(aj1(i)*aj5968(i)+aj2(i)*aj6749(i)+aj3(i)*aj4857(i))\r\n+      else\r\n+      do 55 i=lft,llt\r\n+      det(i)=o64th*(aj1(i)*aj5968(i)+aj2(i)*aj6749(i)+aj3(i)*aj4857(i))\r\n+     1       *failu(i) + (1. - failu(i))\r\n+   55 continue\r\n+      endif\r\n+      do 60 i=lft,llt\r\n+   60 dett(i)=o64th/det(i)\r\n+\r\n+      if (det(lft) .ne. 1d0) call abort ()\n+      if (det(llt) .ne. 1d0) call abort ()\r\n+\r\n+      return\r\n+c\r\n+      end\r\n+      program main\r\n+      parameter(lnv=32)\r\n+      implicit double precision (a-h,o-z)                                    dp\r\n+      common/aux8/\r\n+     & x1(lnv),x2(lnv),x3(lnv),x4(lnv),\r\n+     & x5(lnv),x6(lnv),x7(lnv),x8(lnv),\r\n+     & y1(lnv),y2(lnv),y3(lnv),y4(lnv),\r\n+     & y5(lnv),y6(lnv),y7(lnv),y8(lnv),\r\n+     & z1(lnv),z2(lnv),z3(lnv),z4(lnv),\r\n+     & z5(lnv),z6(lnv),z7(lnv),z8(lnv)\r\n+      common/aux36/lft,llt\r\n+      common/sand1/ihf,ibemf,ishlf,itshf\r\n+      lft=1\r\n+      llt=1\r\n+      x1(1)=0\r\n+      x2(1)=1\r\n+      x3(1)=1\r\n+      x4(1)=0\r\n+      x5(1)=0\r\n+      x6(1)=1\r\n+      x7(1)=1\r\n+      x8(1)=0\r\n+\r\n+      y1(1)=0\r\n+      y2(1)=0\r\n+      y3(1)=1\r\n+      y4(1)=1\r\n+      y5(1)=0\r\n+      y6(1)=0\r\n+      y7(1)=1\r\n+      y8(1)=1\r\n+\r\n+      z1(1)=0\r\n+      z2(1)=0\r\n+      z3(1)=0\r\n+      z4(1)=0\r\n+      z5(1)=1\r\n+      z6(1)=1\r\n+      z7(1)=1\r\n+      z8(1)=1\r\n+      call prtal\r\n+      stop\r\n+      end\r\n+\r"}]}