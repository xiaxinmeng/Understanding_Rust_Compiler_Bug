{"sha": "0c4ae4ff46b1d7633f1e06f57d348b5817b8f640", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGM0YWU0ZmY0NmIxZDc2MzNmMWUwNmY1N2QzNDhiNTgxN2I4ZjY0MA==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-07-20T11:35:37Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-07-20T11:54:30Z"}, "message": "libstdc++: Add more tests for filesystem::create_directory [PR101510]\n\nSigned-off-by: Jonathan Wakely <jwakely@redhat.com>\n\nlibstdc++-v3/ChangeLog:\n\n\tPR libstdc++/101510\n\t* src/c++17/fs_ops.cc (create_dir): Adjust whitespace.\n\t* testsuite/27_io/filesystem/operations/create_directory.cc:\n\tTest creating directory with name of existing symlink to\n\tdirectory.\n\t* testsuite/experimental/filesystem/operations/create_directory.cc:\n\tLikewise.", "tree": {"sha": "efc4a9ff11d05f47b7a229130ab057b723994166", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/efc4a9ff11d05f47b7a229130ab057b723994166"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0c4ae4ff46b1d7633f1e06f57d348b5817b8f640", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c4ae4ff46b1d7633f1e06f57d348b5817b8f640", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0c4ae4ff46b1d7633f1e06f57d348b5817b8f640", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c4ae4ff46b1d7633f1e06f57d348b5817b8f640/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7cc2df084b7977653a9b59cbc34a9ad500ae619c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7cc2df084b7977653a9b59cbc34a9ad500ae619c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7cc2df084b7977653a9b59cbc34a9ad500ae619c"}], "stats": {"total": 58, "additions": 56, "deletions": 2}, "files": [{"sha": "cec76446f06376971bf6f9a2340d9592dde5ba63", "filename": "libstdc++-v3/src/c++17/fs_ops.cc", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c4ae4ff46b1d7633f1e06f57d348b5817b8f640/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B17%2Ffs_ops.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c4ae4ff46b1d7633f1e06f57d348b5817b8f640/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B17%2Ffs_ops.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B17%2Ffs_ops.cc?ref=0c4ae4ff46b1d7633f1e06f57d348b5817b8f640", "patch": "@@ -577,8 +577,7 @@ namespace\n   {\n     bool created = false;\n #ifdef _GLIBCXX_HAVE_SYS_STAT_H\n-    posix::mode_t mode\n-      = static_cast<std::underlying_type_t<fs::perms>>(perm);\n+    posix::mode_t mode = static_cast<std::underlying_type_t<fs::perms>>(perm);\n     if (posix::mkdir(p.c_str(), mode))\n       {\n \tconst int err = errno;"}, {"sha": "256621481d728e2e954c1339b2ef3caaf761cfb8", "filename": "libstdc++-v3/testsuite/27_io/filesystem/operations/create_directory.cc", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c4ae4ff46b1d7633f1e06f57d348b5817b8f640/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilesystem%2Foperations%2Fcreate_directory.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c4ae4ff46b1d7633f1e06f57d348b5817b8f640/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilesystem%2Foperations%2Fcreate_directory.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilesystem%2Foperations%2Fcreate_directory.cc?ref=0c4ae4ff46b1d7633f1e06f57d348b5817b8f640", "patch": "@@ -54,6 +54,33 @@ test01()\n   b = create_directory(p);\n   VERIFY( !b );\n \n+  auto f = p/\"file\";\n+  std::ofstream{f} << \"create file\";\n+  b = create_directory(f, ec);\n+  VERIFY( ec == std::errc::file_exists );\n+  VERIFY( !b );\n+  try\n+  {\n+    create_directory(f);\n+    VERIFY( false );\n+  }\n+  catch (const fs::filesystem_error& e)\n+  {\n+    VERIFY( e.code() == std::errc::file_exists );\n+    VERIFY( e.path1() == f );\n+  }\n+\n+  // PR libstdc++/101510 create_directory on an existing symlink to a directory\n+  fs::create_directory(p/\"dir\");\n+  auto link = p/\"link\";\n+  fs::create_directory_symlink(\"dir\", link);\n+  ec = bad_ec;\n+  b = fs::create_directory(link, ec);\n+  VERIFY( !b );\n+  VERIFY( !ec );\n+  b = fs::create_directory(link);\n+  VERIFY( !b );\n+\n   remove_all(p, ec);\n }\n "}, {"sha": "39f95b61a451f9dfbe1a9098ce2dbf928b54bcef", "filename": "libstdc++-v3/testsuite/experimental/filesystem/operations/create_directory.cc", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c4ae4ff46b1d7633f1e06f57d348b5817b8f640/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffilesystem%2Foperations%2Fcreate_directory.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c4ae4ff46b1d7633f1e06f57d348b5817b8f640/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffilesystem%2Foperations%2Fcreate_directory.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffilesystem%2Foperations%2Fcreate_directory.cc?ref=0c4ae4ff46b1d7633f1e06f57d348b5817b8f640", "patch": "@@ -46,12 +46,40 @@ test01()\n   VERIFY( exists(p) );\n \n   // Test existing path (libstdc++/71036).\n+  ec = make_error_code(std::errc::invalid_argument);\n   b = create_directory(p, ec);\n   VERIFY( !ec );\n   VERIFY( !b );\n   b = create_directory(p);\n   VERIFY( !b );\n \n+  auto f = p/\"file\";\n+  std::ofstream{f} << \"create file\";\n+  b = create_directory(f, ec);\n+  VERIFY( ec == std::errc::file_exists );\n+  VERIFY( !b );\n+  try\n+  {\n+    create_directory(f);\n+    VERIFY( false );\n+  }\n+  catch (const fs::filesystem_error& e)\n+  {\n+    VERIFY( e.code() == std::errc::file_exists );\n+    VERIFY( e.path1() == f );\n+  }\n+\n+  // PR libstdc++/101510 create_directory on an existing symlink to a directory\n+  fs::create_directory(p/\"dir\");\n+  auto link = p/\"link\";\n+  fs::create_directory_symlink(\"dir\", link);\n+  ec = make_error_code(std::errc::invalid_argument);\n+  b = fs::create_directory(link, ec);\n+  VERIFY( !b );\n+  VERIFY( !ec );\n+  b = fs::create_directory(link);\n+  VERIFY( !b );\n+\n   remove_all(p, ec);\n }\n "}]}