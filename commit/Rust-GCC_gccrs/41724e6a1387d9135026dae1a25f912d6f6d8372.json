{"sha": "41724e6a1387d9135026dae1a25f912d6f6d8372", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDE3MjRlNmExMzg3ZDkxMzUwMjZkYWUxYTI1ZjkxMmQ2ZjZkODM3Mg==", "commit": {"author": {"name": "Aaron W. LaFramboise", "email": "aaronavay62@aaronwl.com", "date": "2004-10-30T16:23:23Z"}, "committer": {"name": "Paul Brook", "email": "pbrook@gcc.gnu.org", "date": "2004-10-30T16:23:23Z"}, "message": "config.h.in: Regenerate.\n\n2004-10-30  Aaron W. LaFramboise <aaronavay62@aaronwl.com>\n\n\t* config.h.in: Regenerate.\n\t* configure: Regenerate.\n\t* configure.ac (AC_CHECK_FUNCS): Add mkstemp.\n\t* io/unix.c (S_IRGRP): Define if undefined.\n\t(S_IWGRP): Same.\n\t(S_IROTH): Same.\n\t(S_IWOTH): Same.\n\t(tempfile): Use mktemp if mkstemp missing, fix typos.\n\nFrom-SVN: r89893", "tree": {"sha": "24b152304828e4f1535ef2adecf1093feef88872", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/24b152304828e4f1535ef2adecf1093feef88872"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/41724e6a1387d9135026dae1a25f912d6f6d8372", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41724e6a1387d9135026dae1a25f912d6f6d8372", "html_url": "https://github.com/Rust-GCC/gccrs/commit/41724e6a1387d9135026dae1a25f912d6f6d8372", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41724e6a1387d9135026dae1a25f912d6f6d8372/comments", "author": null, "committer": null, "parents": [{"sha": "47289a4e33c86f8462ed2143259a045b594e6e4f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47289a4e33c86f8462ed2143259a045b594e6e4f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/47289a4e33c86f8462ed2143259a045b594e6e4f"}], "stats": {"total": 58, "additions": 52, "deletions": 6}, "files": [{"sha": "d584434ff9f0f797e2d54d9444e131dfee98c7fa", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41724e6a1387d9135026dae1a25f912d6f6d8372/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41724e6a1387d9135026dae1a25f912d6f6d8372/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=41724e6a1387d9135026dae1a25f912d6f6d8372", "patch": "@@ -1,3 +1,14 @@\n+2004-10-30  Aaron W. LaFramboise <aaronavay62@aaronwl.com>\n+\n+\t* config.h.in: Regenerate.\n+\t* configure: Regenerate.\n+\t* configure.ac (AC_CHECK_FUNCS): Add mkstemp.\n+\t* io/unix.c (S_IRGRP): Define if undefined.\n+\t(S_IWGRP): Same.\n+\t(S_IROTH): Same.\n+\t(S_IWOTH): Same.\n+\t(tempfile): Use mktemp if mkstemp missing, fix typos.\n+\n 2004-10-30  Aaron W. LaFramboise <aaronavay62@aaronwl.com>\n \n \t*  intrinsics/system.c (\"libgfortran.h\"): Move after system headers."}, {"sha": "ecb9a6c896f9287742edef1c29090fa9c85db7d8", "filename": "libgfortran/config.h.in", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41724e6a1387d9135026dae1a25f912d6f6d8372/libgfortran%2Fconfig.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41724e6a1387d9135026dae1a25f912d6f6d8372/libgfortran%2Fconfig.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fconfig.h.in?ref=41724e6a1387d9135026dae1a25f912d6f6d8372", "patch": "@@ -105,6 +105,9 @@\n /* Define to 1 if you have the <memory.h> header file. */\n #undef HAVE_MEMORY_H\n \n+/* Define to 1 if you have the `mkstemp' function. */\n+#undef HAVE_MKSTEMP\n+\n /* Define to 1 if you have a working `mmap' system call. */\n #undef HAVE_MMAP\n \n@@ -115,7 +118,7 @@\n #undef HAVE_NEXTAFTERF\n \n /* libm includes powf */\n-# undef HAVE_POWF\n+#undef HAVE_POWF\n \n /* libm includes round */\n #undef HAVE_ROUND"}, {"sha": "c13ccdcf6251ee2787c47326cd3651a84c14fb7c", "filename": "libgfortran/configure", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41724e6a1387d9135026dae1a25f912d6f6d8372/libgfortran%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41724e6a1387d9135026dae1a25f912d6f6d8372/libgfortran%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fconfigure?ref=41724e6a1387d9135026dae1a25f912d6f6d8372", "patch": "@@ -6753,7 +6753,8 @@ fi\n # Check for library functions.\n \n \n-for ac_func in getrusage times\n+\n+for ac_func in getrusage times mkstemp\n do\n as_ac_var=`echo \"ac_cv_func_$ac_func\" | $as_tr_sh`\n echo \"$as_me:$LINENO: checking for $ac_func\" >&5"}, {"sha": "598070d1ec36e4fe2b662933deef5c527b16fd8c", "filename": "libgfortran/configure.ac", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41724e6a1387d9135026dae1a25f912d6f6d8372/libgfortran%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41724e6a1387d9135026dae1a25f912d6f6d8372/libgfortran%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fconfigure.ac?ref=41724e6a1387d9135026dae1a25f912d6f6d8372", "patch": "@@ -159,7 +159,7 @@ AC_CHECK_HEADER([complex.h],[AC_DEFINE([HAVE_COMPLEX_H], [1], [complex.h exists]\n AC_CHECK_LIB([m],[csin],[need_math=\"no\"],[need_math=\"yes\"])\n \n # Check for library functions.\n-AC_CHECK_FUNCS(getrusage times)\n+AC_CHECK_FUNCS(getrusage times mkstemp)\n \n # Check libc for getgid, getpid, getuid\n AC_CHECK_LIB([c],[getgid],[AC_DEFINE([HAVE_GETGID],[1],[libc includes getgid])])"}, {"sha": "45d8cfd633f84a21375e80bfefbff68e632c3eba", "filename": "libgfortran/io/unix.c", "status": "modified", "additions": 34, "deletions": 3, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41724e6a1387d9135026dae1a25f912d6f6d8372/libgfortran%2Fio%2Funix.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41724e6a1387d9135026dae1a25f912d6f6d8372/libgfortran%2Fio%2Funix.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Funix.c?ref=41724e6a1387d9135026dae1a25f912d6f6d8372", "patch": "@@ -54,6 +54,24 @@ Boston, MA 02111-1307, USA.  */\n #define PROT_WRITE 2\n #endif\n \n+/* These flags aren't defined on all targets (mingw32), so provide them\n+   here.  */\n+#ifndef S_IRGRP\n+#define S_IRGRP 0\n+#endif\n+\n+#ifndef S_IWGRP\n+#define S_IWGRP 0\n+#endif\n+\n+#ifndef S_IROTH\n+#define S_IROTH 0\n+#endif\n+\n+#ifndef S_IWOTH\n+#define S_IWOTH 0\n+#endif\n+\n /* This implementation of stream I/O is based on the paper:\n  *\n  *  \"Exploiting the advantages of mapped files for stream I/O\",\n@@ -921,8 +939,8 @@ unpack_filename (char *cstring, const char *fstring, int len)\n /* tempfile()-- Generate a temporary filename for a scratch file and\n  * open it.  mkstemp() opens the file for reading and writing, but the\n  * library mode prevents anything that is not allowed.  The descriptor\n- * is returns, which is less than zero on error.  The template is\n- * pointed to by ioparm.file, which is copied into the unit structure\n+ * is returned, which is -1 on error.  The template is pointed to by \n+ * ioparm.file, which is copied into the unit structure\n  * and freed later. */\n \n static int\n@@ -940,10 +958,23 @@ tempfile (void)\n \n   template = get_mem (strlen (tempdir) + 20);\n \n-  st_sprintf (template, \"%s/gfortantmpXXXXXX\", tempdir);\n+  st_sprintf (template, \"%s/gfortrantmpXXXXXX\", tempdir);\n+\n+#ifdef HAVE_MKSTEMP\n \n   fd = mkstemp (template);\n \n+#else /* HAVE_MKSTEMP */\n+\n+  if (mktemp (template))\n+    do\n+      fd = open (template, O_CREAT | O_EXCL, S_IREAD | S_IWRITE);\n+    while (!(fd == -1 && errno == EEXIST) && mktemp (template));\n+  else\n+    fd = -1;\n+\n+#endif /* HAVE_MKSTEMP */\n+\n   if (fd < 0)\n     free_mem (template);\n   else"}]}