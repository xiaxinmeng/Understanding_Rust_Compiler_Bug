{"sha": "f47f687a97260b1a1305cbf2d7ee3d74b2916a74", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjQ3ZjY4N2E5NzI2MGIxYTEzMDVjYmYyZDdlZTNkNzRiMjkxNmE3NA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2019-04-25T17:58:56Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2019-04-25T17:58:56Z"}, "message": "re PR middle-end/89765 (Multiple problems with vec-insert implementation on PowerPC)\n\n\tPR middle-end/89765\n\t* gimplify.c (gimplify_expr): Avoid turning a lvalue\n\tVIEW_CONVERT_EXPR into one operating on an rvalue.\n\nFrom-SVN: r270579", "tree": {"sha": "2f310f73025785c6f8395a5f5ab77342dd269fec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2f310f73025785c6f8395a5f5ab77342dd269fec"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f47f687a97260b1a1305cbf2d7ee3d74b2916a74", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f47f687a97260b1a1305cbf2d7ee3d74b2916a74", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f47f687a97260b1a1305cbf2d7ee3d74b2916a74", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f47f687a97260b1a1305cbf2d7ee3d74b2916a74/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "604ab090adf9c3acf9387627a477dd6b9f07a640", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/604ab090adf9c3acf9387627a477dd6b9f07a640", "html_url": "https://github.com/Rust-GCC/gccrs/commit/604ab090adf9c3acf9387627a477dd6b9f07a640"}], "stats": {"total": 9, "additions": 8, "deletions": 1}, "files": [{"sha": "0682a44cd4abfb6375967b517a84911f85562e46", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f47f687a97260b1a1305cbf2d7ee3d74b2916a74/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f47f687a97260b1a1305cbf2d7ee3d74b2916a74/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f47f687a97260b1a1305cbf2d7ee3d74b2916a74", "patch": "@@ -1,3 +1,9 @@\n+2019-04-25  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/89765\n+\t* gimplify.c (gimplify_expr): Avoid turning a lvalue\n+\tVIEW_CONVERT_EXPR into one operating on an rvalue.\n+\n 2019-04-25  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR target/89929"}, {"sha": "e59f38261c3699d88199568c68a4a9ecf0de266e", "filename": "gcc/gimplify.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f47f687a97260b1a1305cbf2d7ee3d74b2916a74/gcc%2Fgimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f47f687a97260b1a1305cbf2d7ee3d74b2916a74/gcc%2Fgimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.c?ref=f47f687a97260b1a1305cbf2d7ee3d74b2916a74", "patch": "@@ -12397,7 +12397,8 @@ gimplify_expr (tree *expr_p, gimple_seq *pre_p, gimple_seq *post_p,\n \t  break;\n \n \tcase VIEW_CONVERT_EXPR:\n-\t  if (is_gimple_reg_type (TREE_TYPE (*expr_p))\n+\t  if ((fallback & fb_rvalue)\n+\t      && is_gimple_reg_type (TREE_TYPE (*expr_p))\n \t      && is_gimple_reg_type (TREE_TYPE (TREE_OPERAND (*expr_p, 0))))\n \t    {\n \t      ret = gimplify_expr (&TREE_OPERAND (*expr_p, 0), pre_p,"}]}