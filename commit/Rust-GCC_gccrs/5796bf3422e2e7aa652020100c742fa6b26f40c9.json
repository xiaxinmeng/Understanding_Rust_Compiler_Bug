{"sha": "5796bf3422e2e7aa652020100c742fa6b26f40c9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTc5NmJmMzQyMmUyZTdhYTY1MjAyMDEwMGM3NDJmYTZiMjZmNDBjOQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2014-06-30T20:20:55Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2014-06-30T20:20:55Z"}, "message": "re PR ipa/61659 (Extra undefined symbol because of devirtualization)\n\n\tPR c++/61659\n\tPR lto/53808\ngcc/cp\n\t* decl2.c (maybe_emit_vtables): Mark all vtable entries if\n\tdevirtualizing.\n\t* init.c (build_vtbl_address): Don't mark destructor.\n\t* class.c (finish_struct_1): Add all classes to keyed_classes\n\tif devirtualizing.\nlibstdc++-v3/\n\t* libsupc++/cxxabi.h (class __pbase_type_info): __pointer_catch\n\tis pure, not inline.\n\nFrom-SVN: r212174", "tree": {"sha": "f9fcc7a5e7a3e1bb84179bde977d34c49ec5c243", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f9fcc7a5e7a3e1bb84179bde977d34c49ec5c243"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5796bf3422e2e7aa652020100c742fa6b26f40c9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5796bf3422e2e7aa652020100c742fa6b26f40c9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5796bf3422e2e7aa652020100c742fa6b26f40c9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5796bf3422e2e7aa652020100c742fa6b26f40c9/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "fc56f9d2843266a0d38f52b44ca5343604fccc2f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc56f9d2843266a0d38f52b44ca5343604fccc2f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fc56f9d2843266a0d38f52b44ca5343604fccc2f"}], "stats": {"total": 53, "additions": 43, "deletions": 10}, "files": [{"sha": "cc9883331083feaad0d9184b46afd8c5d0878999", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5796bf3422e2e7aa652020100c742fa6b26f40c9/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5796bf3422e2e7aa652020100c742fa6b26f40c9/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=5796bf3422e2e7aa652020100c742fa6b26f40c9", "patch": "@@ -1,5 +1,13 @@\n 2014-06-30  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/61659\n+\tPR lto/53808\n+\t* decl2.c (maybe_emit_vtables): Mark all vtable entries if\n+\tdevirtualizing.\n+\t* init.c (build_vtbl_address): Don't mark destructor.\n+\t* class.c (finish_struct_1): Add all classes to keyed_classes\n+\tif devirtualizing.\n+\n \tPR c++/61647\n \t* pt.c (type_dependent_expression_p): Check BASELINK_OPTYPE.\n "}, {"sha": "1c28dd6fe98660a95cbe472b57da4d67cc1301ab", "filename": "gcc/cp/class.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5796bf3422e2e7aa652020100c742fa6b26f40c9/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5796bf3422e2e7aa652020100c742fa6b26f40c9/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=5796bf3422e2e7aa652020100c742fa6b26f40c9", "patch": "@@ -6405,8 +6405,10 @@ finish_struct_1 (tree t)\n \tdetermine_key_method (t);\n \n       /* If a polymorphic class has no key method, we may emit the vtable\n-\t in every translation unit where the class definition appears.  */\n-      if (CLASSTYPE_KEY_METHOD (t) == NULL_TREE)\n+\t in every translation unit where the class definition appears.  If\n+\t we're devirtualizing, we can look into the vtable even if we\n+\t aren't emitting it.  */\n+      if (CLASSTYPE_KEY_METHOD (t) == NULL_TREE || flag_devirtualize)\n \tkeyed_classes = tree_cons (NULL_TREE, t, keyed_classes);\n     }\n "}, {"sha": "98897f4fb9258e4c1dd61d15e5d33c3641dd89e8", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5796bf3422e2e7aa652020100c742fa6b26f40c9/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5796bf3422e2e7aa652020100c742fa6b26f40c9/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=5796bf3422e2e7aa652020100c742fa6b26f40c9", "patch": "@@ -2009,6 +2009,11 @@ maybe_emit_vtables (tree ctype)\n       if (DECL_COMDAT (primary_vtbl)\n \t  && CLASSTYPE_DEBUG_REQUESTED (ctype))\n \tnote_debug_info_needed (ctype);\n+      if (flag_devirtualize)\n+\t/* Make sure virtual functions get instantiated/synthesized so that\n+\t   they can be inlined after devirtualization even if the vtable is\n+\t   never emitted.  */\n+\tmark_vtable_entries (primary_vtbl);\n       return false;\n     }\n "}, {"sha": "f8cae283383dc49e75265afd2bb46f37d8d483ea", "filename": "gcc/cp/init.c", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5796bf3422e2e7aa652020100c742fa6b26f40c9/gcc%2Fcp%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5796bf3422e2e7aa652020100c742fa6b26f40c9/gcc%2Fcp%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Finit.c?ref=5796bf3422e2e7aa652020100c742fa6b26f40c9", "patch": "@@ -1155,12 +1155,6 @@ build_vtbl_address (tree binfo)\n   /* Figure out what vtable BINFO's vtable is based on, and mark it as\n      used.  */\n   vtbl = get_vtbl_decl_for_binfo (binfo_for);\n-  if (tree dtor = CLASSTYPE_DESTRUCTORS (DECL_CONTEXT (vtbl)))\n-    if (!TREE_USED (vtbl) && DECL_VIRTUAL_P (dtor) && DECL_DEFAULTED_FN (dtor))\n-      /* Make sure the destructor gets synthesized so that it can be\n-\t inlined after devirtualization even if the vtable is never\n-\t emitted.  */\n-      note_vague_linkage_fn (dtor);\n   TREE_USED (vtbl) = true;\n \n   /* Now compute the address to use when initializing the vptr.  */"}, {"sha": "f839cbeae2062832820ffbe6eea9a98c028e82b4", "filename": "gcc/testsuite/g++.dg/opt/devirt5.C", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5796bf3422e2e7aa652020100c742fa6b26f40c9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fdevirt5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5796bf3422e2e7aa652020100c742fa6b26f40c9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fdevirt5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fdevirt5.C?ref=5796bf3422e2e7aa652020100c742fa6b26f40c9", "patch": "@@ -0,0 +1,19 @@\n+// PR c++/61659\n+// { dg-options \"-O3\" }\n+// { dg-final { scan-assembler-not \"_ZN6parserIiE9getOptionEv\" } }\n+\n+struct generic_parser_base {\n+  virtual void getOption();\n+  void getExtraOptionNames() { getOption(); }\n+};\n+template <class DataType> struct parser : public generic_parser_base {\n+  virtual void getOption() {}\n+};\n+struct PassNameParser : public parser<int> {\n+  PassNameParser();\n+};\n+struct list {\n+  PassNameParser Parser;\n+  virtual void getExtraOptionNames() { return Parser.getExtraOptionNames(); }\n+};\n+list PassList;"}, {"sha": "1d6cf7a5bd8c29ca889f0b97f595e41bf6092b5e", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5796bf3422e2e7aa652020100c742fa6b26f40c9/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5796bf3422e2e7aa652020100c742fa6b26f40c9/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=5796bf3422e2e7aa652020100c742fa6b26f40c9", "patch": "@@ -1,3 +1,8 @@\n+2014-06-30  Jason Merrill  <jason@redhat.com>\n+\n+\t* libsupc++/cxxabi.h (class __pbase_type_info): __pointer_catch\n+\tis pure, not inline.\n+\n 2014-06-28  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tRevert:"}, {"sha": "5b77aee9e6c5eab0c824fd5554928e411a09b393", "filename": "libstdc++-v3/libsupc++/cxxabi.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5796bf3422e2e7aa652020100c742fa6b26f40c9/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fcxxabi.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5796bf3422e2e7aa652020100c742fa6b26f40c9/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fcxxabi.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fcxxabi.h?ref=5796bf3422e2e7aa652020100c742fa6b26f40c9", "patch": "@@ -298,9 +298,9 @@ namespace __cxxabiv1\n     __do_catch(const std::type_info* __thr_type, void** __thr_obj,\n \t       unsigned int __outer) const;\n \n-    inline virtual bool\n+    virtual bool\n     __pointer_catch(const __pbase_type_info* __thr_type, void** __thr_obj,\n-\t\t    unsigned __outer) const;\n+\t\t    unsigned __outer) const = 0;\n   };\n \n   // Type information for simple pointers."}]}