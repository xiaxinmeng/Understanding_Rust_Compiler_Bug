{"sha": "65196e37241baacee5ec6e4915d4b333fcfbb35b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjUxOTZlMzcyNDFiYWFjZWU1ZWM2ZTQ5MTVkNGIzMzNmY2ZiYjM1Yg==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2004-03-09T10:08:40Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2004-03-09T10:08:40Z"}, "message": "re PR c++/14230 (ICE in cp_expr_size)\n\n\tPR c++/14230\n\t* call.c (initialize_reference): Handle initializers that are\n\tclass-member access expressions applies to rvalues.\n\n\tPR c++/14230\n\t* g++.dg/init/ref11.C: New test.\n\nFrom-SVN: r79165", "tree": {"sha": "3dfa650db0b5dd6499bcd5eb04a226890b87cac6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3dfa650db0b5dd6499bcd5eb04a226890b87cac6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/65196e37241baacee5ec6e4915d4b333fcfbb35b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/65196e37241baacee5ec6e4915d4b333fcfbb35b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/65196e37241baacee5ec6e4915d4b333fcfbb35b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/65196e37241baacee5ec6e4915d4b333fcfbb35b/comments", "author": null, "committer": null, "parents": [{"sha": "fab459303ffbda687b43cc4e1e21f522e59c4e42", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fab459303ffbda687b43cc4e1e21f522e59c4e42", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fab459303ffbda687b43cc4e1e21f522e59c4e42"}], "stats": {"total": 34, "additions": 34, "deletions": 0}, "files": [{"sha": "608a23ce7634657a1ffe48a467fbc9a337760d2e", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65196e37241baacee5ec6e4915d4b333fcfbb35b/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65196e37241baacee5ec6e4915d4b333fcfbb35b/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=65196e37241baacee5ec6e4915d4b333fcfbb35b", "patch": "@@ -1,3 +1,9 @@\n+2004-03-09  Mark Mitchell  <mark@codesourcery.com>\n+\n+\tPR c++/14230\n+\t* call.c (initialize_reference): Handle initializers that are\n+\tclass-member access expressions applies to rvalues.\n+\n 2004-03-09  Mark Mitchell  <mark@codesourcery.com>\n \n \tPR c++/14432"}, {"sha": "e371d305abe75b80d3f97248abdd5b146897e58a", "filename": "gcc/cp/call.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65196e37241baacee5ec6e4915d4b333fcfbb35b/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65196e37241baacee5ec6e4915d4b333fcfbb35b/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=65196e37241baacee5ec6e4915d4b333fcfbb35b", "patch": "@@ -6463,6 +6463,16 @@ initialize_reference (tree type, tree expr, tree decl, tree *cleanup)\n \t  type = TREE_TYPE (expr);\n \t  var = make_temporary_var_for_ref_to_temp (decl, type);\n \t  layout_decl (var, 0);\n+\t  /* If the rvalue is the result of a function call it will be\n+\t     a TARGET_EXPR.  If it is some other construct (such as a\n+\t     member access expression where the underlying object is\n+\t     itself the result of a function call), turn it into a\n+\t     TARGET_EXPR here.  It is important that EXPR be a\n+\t     TARGET_EXPR below since otherwise the INIT_EXPR will\n+\t     attempt to make a bitwise copy of EXPR to intialize\n+\t     VAR. */\n+\t  if (TREE_CODE (init) != TARGET_EXPR)\n+\t    expr = get_target_expr (expr);\n \t  /* Create the INIT_EXPR that will initialize the temporary\n \t     variable.  */\n \t  init = build (INIT_EXPR, type, var, expr);"}, {"sha": "624bf21def4aded535af85cf7f60a6cd3e5742d5", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65196e37241baacee5ec6e4915d4b333fcfbb35b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65196e37241baacee5ec6e4915d4b333fcfbb35b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=65196e37241baacee5ec6e4915d4b333fcfbb35b", "patch": "@@ -1,3 +1,8 @@\n+2004-03-09  Mark Mitchell  <mark@codesourcery.com>\n+\n+\tPR c++/14230\n+\t* g++.dg/init/ref11.C: New test.\n+\n 2004-03-09  Mark Mitchell  <mark@codesourcery.com>\n \n \tPR c++/14432"}, {"sha": "b283e3a69be63c9d27ae1611bd494254c5e98a4a", "filename": "gcc/testsuite/g++.dg/init/ref11.C", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65196e37241baacee5ec6e4915d4b333fcfbb35b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fref11.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65196e37241baacee5ec6e4915d4b333fcfbb35b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fref11.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fref11.C?ref=65196e37241baacee5ec6e4915d4b333fcfbb35b", "patch": "@@ -0,0 +1,13 @@\n+// PR c++/14230\n+\n+struct A {\n+  A ();\n+  A (const A&);\n+  A& operator= (const A&);\n+};\n+\n+struct D {\n+  A a;\n+};\n+\n+const A& z = D().a;"}]}