{"sha": "8af9d17f0208b6d654176bf2606df39bed4e25f9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGFmOWQxN2YwMjA4YjZkNjU0MTc2YmYyNjA2ZGYzOWJlZDRlMjVmOQ==", "commit": {"author": {"name": "Adam Nemet", "email": "nemet@gcc.gnu.org", "date": "2009-10-25T07:03:53Z"}, "committer": {"name": "Adam Nemet", "email": "nemet@gcc.gnu.org", "date": "2009-10-25T07:03:53Z"}, "message": "predicates.md (hilo_operand): New predicate.\n\n\t* config/mips/predicates.md (hilo_operand): New predicate.\n\t* config/mips/mips.md (<u>mulsidi3_64bit): Change it to a\n\tdefine_insn.  Correct !ISA_HAS_EXT_INS length from 24 to 28.  Move\n\tsplitter part from here ...:\n\t(<u>mulsidi3_64bit splitter for !ISA_HAS_EXT_INS): ... to here.  Swap\n\top0 and op4 to match the DINS case.\n\t(<u>mulsidi3_64bit splitter for ISA_HAS_EXT_INS): New splitter.\n\ntestsuite/\n\t* gcc.target/mips/mult-1.c: New test.\n\nFrom-SVN: r153538", "tree": {"sha": "e9d64003b1533629750a5d82277293effe956612", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e9d64003b1533629750a5d82277293effe956612"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8af9d17f0208b6d654176bf2606df39bed4e25f9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8af9d17f0208b6d654176bf2606df39bed4e25f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8af9d17f0208b6d654176bf2606df39bed4e25f9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8af9d17f0208b6d654176bf2606df39bed4e25f9/comments", "author": null, "committer": null, "parents": [{"sha": "aa2b4598fea1c9a79739dc2d26738530dc74e381", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa2b4598fea1c9a79739dc2d26738530dc74e381", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aa2b4598fea1c9a79739dc2d26738530dc74e381"}], "stats": {"total": 94, "additions": 78, "deletions": 16}, "files": [{"sha": "bda1da3d09b29cfac79a9bf0ef94884ce927ee35", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8af9d17f0208b6d654176bf2606df39bed4e25f9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8af9d17f0208b6d654176bf2606df39bed4e25f9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8af9d17f0208b6d654176bf2606df39bed4e25f9", "patch": "@@ -1,4 +1,14 @@\n-\t2009-09-27  Andy Hutchinson  <hutchinsonandy@gcc.gnu.org>\n+2009-10-24  Adam Nemet  <anemet@caviumnetworks.com>\n+\n+\t* config/mips/predicates.md (hilo_operand): New predicate.\n+\t* config/mips/mips.md (<u>mulsidi3_64bit): Change it to a\n+\tdefine_insn.  Correct !ISA_HAS_EXT_INS length from 24 to 28.  Move\n+\tsplitter part from here ...:\n+\t(<u>mulsidi3_64bit splitter for !ISA_HAS_EXT_INS): ... to here.  Swap\n+\top0 and op4 to match the DINS case.\n+\t(<u>mulsidi3_64bit splitter for ISA_HAS_EXT_INS): New splitter.\n+\n+2009-10-24  Andy Hutchinson  <hutchinsonandy@gcc.gnu.org>\n \n \tPR middle-end/19154\n \t* avr.md (QIDI): Add new mode iterator."}, {"sha": "5005bf7f0fb4da16f4d3ef1db09223561827cf6c", "filename": "gcc/config/mips/mips.md", "status": "modified", "additions": 45, "deletions": 15, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8af9d17f0208b6d654176bf2606df39bed4e25f9/gcc%2Fconfig%2Fmips%2Fmips.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8af9d17f0208b6d654176bf2606df39bed4e25f9/gcc%2Fconfig%2Fmips%2Fmips.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.md?ref=8af9d17f0208b6d654176bf2606df39bed4e25f9", "patch": "@@ -1879,45 +1879,75 @@\n    (set_attr \"mode\" \"SI\")\n    (set_attr \"length\" \"12\")])\n \n-(define_insn_and_split \"<u>mulsidi3_64bit\"\n+(define_insn \"<u>mulsidi3_64bit\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=d\")\n \t(mult:DI (any_extend:DI (match_operand:SI 1 \"register_operand\" \"d\"))\n \t\t (any_extend:DI (match_operand:SI 2 \"register_operand\" \"d\"))))\n    (clobber (match_scratch:TI 3 \"=x\"))\n    (clobber (match_scratch:DI 4 \"=d\"))]\n   \"TARGET_64BIT && !TARGET_FIX_R4000\"\n   \"#\"\n-  \"&& reload_completed\"\n+  [(set_attr \"type\" \"imul\")\n+   (set_attr \"mode\" \"SI\")\n+   (set (attr \"length\")\n+\t(if_then_else (ne (symbol_ref \"ISA_HAS_EXT_INS\") (const_int 0))\n+\t\t      (const_int 16)\n+\t\t      (const_int 28)))])\n+\n+(define_split\n+  [(set (match_operand:DI 0 \"d_operand\")\n+\t(mult:DI (any_extend:DI (match_operand:SI 1 \"d_operand\"))\n+\t\t (any_extend:DI (match_operand:SI 2 \"d_operand\"))))\n+   (clobber (match_operand:TI 3 \"hilo_operand\"))\n+   (clobber (match_operand:DI 4 \"d_operand\"))]\n+  \"TARGET_64BIT && !TARGET_FIX_R4000 && ISA_HAS_EXT_INS && reload_completed\"\n+  [(set (match_dup 3)\n+\t(unspec:TI [(mult:DI (any_extend:DI (match_dup 1))\n+\t\t\t     (any_extend:DI (match_dup 2)))]\n+\t\t   UNSPEC_SET_HILO))\n+\n+   ;; OP0 <- LO, OP4 <- HI\n+   (set (match_dup 0) (match_dup 5))\n+   (set (match_dup 4) (unspec:DI [(match_dup 3)] UNSPEC_MFHI))\n+\n+   (set (zero_extract:DI (match_dup 0) (const_int 32) (const_int 32))\n+\t(match_dup 4))]\n+  { operands[5] = gen_rtx_REG (DImode, LO_REGNUM); })\n+\n+(define_split\n+  [(set (match_operand:DI 0 \"d_operand\")\n+\t(mult:DI (any_extend:DI (match_operand:SI 1 \"d_operand\"))\n+\t\t (any_extend:DI (match_operand:SI 2 \"d_operand\"))))\n+   (clobber (match_operand:TI 3 \"hilo_operand\"))\n+   (clobber (match_operand:DI 4 \"d_operand\"))]\n+  \"TARGET_64BIT && !TARGET_FIX_R4000 && !ISA_HAS_EXT_INS && reload_completed\"\n   [(set (match_dup 3)\n \t(unspec:TI [(mult:DI (any_extend:DI (match_dup 1))\n \t\t\t     (any_extend:DI (match_dup 2)))]\n \t\t   UNSPEC_SET_HILO))\n \n-   ;; OP4 <- LO, OP0 <- HI\n-   (set (match_dup 4) (match_dup 5))\n-   (set (match_dup 0) (unspec:DI [(match_dup 3)] UNSPEC_MFHI))\n+   ;; OP0 <- LO, OP4 <- HI\n+   (set (match_dup 0) (match_dup 5))\n+   (set (match_dup 4) (unspec:DI [(match_dup 3)] UNSPEC_MFHI))\n \n    ;; Zero-extend OP4.\n-   (set (match_dup 4)\n-\t(ashift:DI (match_dup 4)\n+   (set (match_dup 0)\n+\t(ashift:DI (match_dup 0)\n \t\t   (const_int 32)))\n-   (set (match_dup 4)\n-\t(lshiftrt:DI (match_dup 4)\n+   (set (match_dup 0)\n+\t(lshiftrt:DI (match_dup 0)\n \t\t     (const_int 32)))\n \n    ;; Shift OP0 into place.\n-   (set (match_dup 0)\n-\t(ashift:DI (match_dup 0)\n+   (set (match_dup 4)\n+\t(ashift:DI (match_dup 4)\n \t\t   (const_int 32)))\n \n    ;; OR the two halves together\n    (set (match_dup 0)\n \t(ior:DI (match_dup 0)\n \t\t(match_dup 4)))]\n-  { operands[5] = gen_rtx_REG (DImode, LO_REGNUM); }\n-  [(set_attr \"type\" \"imul\")\n-   (set_attr \"mode\" \"SI\")\n-   (set_attr \"length\" \"24\")])\n+  { operands[5] = gen_rtx_REG (DImode, LO_REGNUM); })\n \n (define_insn \"<u>mulsidi3_64bit_hilo\"\n   [(set (match_operand:TI 0 \"register_operand\" \"=x\")"}, {"sha": "7430dd32b7883f8d48f75ec89bfb577cbe0adc31", "filename": "gcc/config/mips/predicates.md", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8af9d17f0208b6d654176bf2606df39bed4e25f9/gcc%2Fconfig%2Fmips%2Fpredicates.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8af9d17f0208b6d654176bf2606df39bed4e25f9/gcc%2Fconfig%2Fmips%2Fpredicates.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fpredicates.md?ref=8af9d17f0208b6d654176bf2606df39bed4e25f9", "patch": "@@ -119,6 +119,10 @@\n   (and (match_code \"reg\")\n        (match_test \"REGNO (op) == LO_REGNUM\")))\n \n+(define_predicate \"hilo_operand\"\n+  (and (match_code \"reg\")\n+       (match_test \"MD_REG_P (REGNO (op))\")))\n+\n (define_predicate \"fcc_reload_operand\"\n   (and (match_code \"reg,subreg\")\n        (match_test \"ST_REG_P (true_regnum (op))\")))"}, {"sha": "e497e3d9fce96c15842c4750bbc65a108d1d98eb", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8af9d17f0208b6d654176bf2606df39bed4e25f9/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8af9d17f0208b6d654176bf2606df39bed4e25f9/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8af9d17f0208b6d654176bf2606df39bed4e25f9", "patch": "@@ -1,3 +1,7 @@\n+2009-10-24  Adam Nemet  <anemet@caviumnetworks.com>\n+\n+\t* gcc.target/mips/mult-1.c: New test.\n+\n 2009-10-24  Janus Weil  <janus@gcc.gnu.org>\n \n \tPR fortran/41784"}, {"sha": "d82a47782636bd6d4719e5175492f51d8ec5dcb7", "filename": "gcc/testsuite/gcc.target/mips/mult-1.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8af9d17f0208b6d654176bf2606df39bed4e25f9/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmult-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8af9d17f0208b6d654176bf2606df39bed4e25f9/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmult-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmult-1.c?ref=8af9d17f0208b6d654176bf2606df39bed4e25f9", "patch": "@@ -0,0 +1,14 @@\n+/* For SI->DI widening multiplication we should use DINS to combine the two\n+   halves.  */\n+/* { dg-options \"-O -mgp64 isa_rev>=2\" } */\n+/* { dg-final { scan-assembler \"\\tdins\\t\" } } */\n+/* { dg-final { scan-assembler-not \"\\tdsll\\t\" } } */\n+/* { dg-final { scan-assembler-not \"\\tdsrl\\t\" } } */\n+/* { dg-final { scan-assembler-not \"\\tor\\t\" } } */\n+\n+NOMIPS16 unsigned long long\n+f (unsigned int i, unsigned int j)\n+{\n+  i++;\n+  return (unsigned long long) i * j;\n+}"}]}