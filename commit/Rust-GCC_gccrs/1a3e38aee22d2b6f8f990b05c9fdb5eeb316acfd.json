{"sha": "1a3e38aee22d2b6f8f990b05c9fdb5eeb316acfd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWEzZTM4YWVlMjJkMmI2ZjhmOTkwYjA1YzlmZGI1ZWViMzE2YWNmZA==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2019-06-25T08:17:39Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2019-06-25T08:17:39Z"}, "message": "Properly sum costs in tree-vect-loop.c (PR tree-optimization/90973).\n\n2019-06-25  Martin Liska  <mliska@suse.cz>\n\n\tPR tree-optimization/90973\n\t* tree-vect-loop.c (vect_get_known_peeling_cost): Sum retval\n\tof prologue and epilogue.\n\nFrom-SVN: r272638", "tree": {"sha": "0c65ebc96b3b24c663076a58007208d5623b9b39", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0c65ebc96b3b24c663076a58007208d5623b9b39"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1a3e38aee22d2b6f8f990b05c9fdb5eeb316acfd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a3e38aee22d2b6f8f990b05c9fdb5eeb316acfd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1a3e38aee22d2b6f8f990b05c9fdb5eeb316acfd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a3e38aee22d2b6f8f990b05c9fdb5eeb316acfd/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c23524153d2b7b683526969a0d9b85efdc8c2767", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c23524153d2b7b683526969a0d9b85efdc8c2767", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c23524153d2b7b683526969a0d9b85efdc8c2767"}], "stats": {"total": 10, "additions": 8, "deletions": 2}, "files": [{"sha": "c5b729c63aa6a80ec3b520c408a5aa09779bc35b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a3e38aee22d2b6f8f990b05c9fdb5eeb316acfd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a3e38aee22d2b6f8f990b05c9fdb5eeb316acfd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1a3e38aee22d2b6f8f990b05c9fdb5eeb316acfd", "patch": "@@ -1,3 +1,9 @@\n+2019-06-25  Martin Liska  <mliska@suse.cz>\n+\n+\tPR tree-optimization/90973\n+\t* tree-vect-loop.c (vect_get_known_peeling_cost): Sum retval\n+\tof prologue and epilogue.\n+\n 2019-06-24  Jan Hubicka  <jh@suse.cz>\n \n \t* ipa-utils.h (type_with_linkage_p): Verify that type is"}, {"sha": "489bee65397a9335a72c18d8c769460e9ca8c6d7", "filename": "gcc/tree-vect-loop.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a3e38aee22d2b6f8f990b05c9fdb5eeb316acfd/gcc%2Ftree-vect-loop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a3e38aee22d2b6f8f990b05c9fdb5eeb316acfd/gcc%2Ftree-vect-loop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-loop.c?ref=1a3e38aee22d2b6f8f990b05c9fdb5eeb316acfd", "patch": "@@ -3405,8 +3405,8 @@ vect_get_known_peeling_cost (loop_vec_info loop_vinfo, int peel_iters_prologue,\n          iterations are unknown, count a taken branch per peeled loop.  */\n       retval = record_stmt_cost (prologue_cost_vec, 1, cond_branch_taken,\n \t\t\t\t NULL, 0, vect_prologue);\n-      retval = record_stmt_cost (prologue_cost_vec, 1, cond_branch_taken,\n-\t\t\t\t NULL, 0, vect_epilogue);\n+      retval += record_stmt_cost (prologue_cost_vec, 1, cond_branch_taken,\n+\t\t\t\t  NULL, 0, vect_epilogue);\n     }\n   else\n     {"}]}