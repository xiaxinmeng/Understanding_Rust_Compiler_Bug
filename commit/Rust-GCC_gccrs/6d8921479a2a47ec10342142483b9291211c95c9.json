{"sha": "6d8921479a2a47ec10342142483b9291211c95c9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmQ4OTIxNDc5YTJhNDdlYzEwMzQyMTQyNDgzYjkyOTEyMTFjOTVjOQ==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2010-02-11T17:01:21Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2010-02-11T17:01:21Z"}, "message": "re PR tree-optimization/42998 (ICE: error: verify_stmts failed)\n\n2010-02-11  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/42998\n\t* tree-ssa-pre.c (create_expression_by_pieces): Treat\n\tPOINTER_PLUS_EXPR properly.\n\n\t* gcc.c-torture/compile/pr42998.c: New testcase.\n\nFrom-SVN: r156704", "tree": {"sha": "d94d461c1c28df146266dba369b42748d807ee32", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d94d461c1c28df146266dba369b42748d807ee32"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6d8921479a2a47ec10342142483b9291211c95c9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d8921479a2a47ec10342142483b9291211c95c9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6d8921479a2a47ec10342142483b9291211c95c9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d8921479a2a47ec10342142483b9291211c95c9/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "04eadb13265b69db0282da8803f13e357a129079", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04eadb13265b69db0282da8803f13e357a129079", "html_url": "https://github.com/Rust-GCC/gccrs/commit/04eadb13265b69db0282da8803f13e357a129079"}], "stats": {"total": 38, "additions": 34, "deletions": 4}, "files": [{"sha": "e95703f1e7f74827e1ddda9e92c0fb47cb7cc11c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d8921479a2a47ec10342142483b9291211c95c9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d8921479a2a47ec10342142483b9291211c95c9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6d8921479a2a47ec10342142483b9291211c95c9", "patch": "@@ -1,3 +1,9 @@\n+2010-02-11  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/42998\n+\t* tree-ssa-pre.c (create_expression_by_pieces): Treat\n+\tPOINTER_PLUS_EXPR properly.\n+\n 2010-02-11  Sebastian Pop  <sebastian.pop@amd.com>\n \t    Changpeng Fang  <changpeng.fang@amd.com>\n "}, {"sha": "718b97d0f940ef554a58d8e0f6a4e2cacde04725", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d8921479a2a47ec10342142483b9291211c95c9/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d8921479a2a47ec10342142483b9291211c95c9/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6d8921479a2a47ec10342142483b9291211c95c9", "patch": "@@ -1,3 +1,8 @@\n+2010-02-11  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/42998\n+\t* gcc.c-torture/compile/pr42998.c: New testcase.\n+\n 2010-02-10  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/41896"}, {"sha": "7506d15812939c65d71ca1d67ab3bb2fe468df5a", "filename": "gcc/testsuite/gcc.c-torture/compile/pr42998.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d8921479a2a47ec10342142483b9291211c95c9/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr42998.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d8921479a2a47ec10342142483b9291211c95c9/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr42998.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr42998.c?ref=6d8921479a2a47ec10342142483b9291211c95c9", "patch": "@@ -0,0 +1,15 @@\n+void foo(void *);\n+void bar(void *);\n+void ndisc_fill_addr_option(unsigned char *opt, int data_len,\n+\t\t\t    unsigned short addr_type) \n+{\n+  int pad;\n+  if (addr_type == 32)\n+    pad = 2;\n+  else\n+    pad = 0;\n+  __builtin_memset(opt + 2, 0, pad);\n+  opt += pad;\n+  __builtin_constant_p(data_len) ? foo (opt+2) : bar (opt+2);\n+}\n+"}, {"sha": "639adcefb23590ecf33265d290cd51c295105a0d", "filename": "gcc/tree-ssa-pre.c", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d8921479a2a47ec10342142483b9291211c95c9/gcc%2Ftree-ssa-pre.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d8921479a2a47ec10342142483b9291211c95c9/gcc%2Ftree-ssa-pre.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-pre.c?ref=6d8921479a2a47ec10342142483b9291211c95c9", "patch": "@@ -3013,14 +3013,18 @@ create_expression_by_pieces (basic_block block, pre_expr expr,\n \t\t\t\t\t\t\t stmts, domstmt);\n \t      if (!genop1 || !genop2)\n \t\treturn NULL_TREE;\n-\t      genop1 = fold_convert (TREE_TYPE (nary->op[0]),\n-\t\t\t\t     genop1);\n \t      /* Ensure op2 is a sizetype for POINTER_PLUS_EXPR.  It\n \t\t may be a constant with the wrong type.  */\n \t      if (nary->opcode == POINTER_PLUS_EXPR)\n-\t\tgenop2 = fold_convert (sizetype, genop2);\n+\t\t{\n+\t\t  genop1 = fold_convert (nary->type, genop1);\n+\t\t  genop2 = fold_convert (sizetype, genop2);\n+\t\t}\n \t      else\n-\t\tgenop2 = fold_convert (TREE_TYPE (nary->op[1]), genop2);\n+\t\t{\n+\t\t  genop1 = fold_convert (TREE_TYPE (nary->op[0]), genop1);\n+\t\t  genop2 = fold_convert (TREE_TYPE (nary->op[1]), genop2);\n+\t\t}\n \n \t      folded = fold_build2 (nary->opcode, nary->type,\n \t\t\t\t    genop1, genop2);"}]}