{"sha": "343881fd9eb2b7e8f90ac10cd17688b3dcce3186", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzQzODgxZmQ5ZWIyYjdlOGY5MGFjMTBjZDE3Njg4YjNkY2NlMzE4Ng==", "commit": {"author": {"name": "Maxim Kuvyrkov", "email": "maxim@kugelworks.com", "date": "2013-04-09T09:47:33Z"}, "committer": {"name": "Maxim Kuvyrkov", "email": "mkuvyrkov@gcc.gnu.org", "date": "2013-04-09T09:47:33Z"}, "message": "tree.c (type_hash_lookup, [...]): Make static.\n\n\t* tree.c (type_hash_lookup, type_hash_add): Make static.\n\t* tree.h (type_hash_lookup, type_hash_add): Remove global declarations.\n\nFrom-SVN: r197623", "tree": {"sha": "c1a9eb28c1fee19e440a43c754dd195d1a95380f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c1a9eb28c1fee19e440a43c754dd195d1a95380f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/343881fd9eb2b7e8f90ac10cd17688b3dcce3186", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/343881fd9eb2b7e8f90ac10cd17688b3dcce3186", "html_url": "https://github.com/Rust-GCC/gccrs/commit/343881fd9eb2b7e8f90ac10cd17688b3dcce3186", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/343881fd9eb2b7e8f90ac10cd17688b3dcce3186/comments", "author": null, "committer": null, "parents": [{"sha": "3922658a2b5ccb2ca2ee19b4d757358bc7ae193b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3922658a2b5ccb2ca2ee19b4d757358bc7ae193b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3922658a2b5ccb2ca2ee19b4d757358bc7ae193b"}], "stats": {"total": 11, "additions": 7, "deletions": 4}, "files": [{"sha": "d25241f42691ae4e7bd1ec02ba600dd7018782ee", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/343881fd9eb2b7e8f90ac10cd17688b3dcce3186/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/343881fd9eb2b7e8f90ac10cd17688b3dcce3186/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=343881fd9eb2b7e8f90ac10cd17688b3dcce3186", "patch": "@@ -1,3 +1,8 @@\n+2013-04-09  Maxim Kuvyrkov  <maxim@kugelworks.com>\n+\n+\t* tree.c (type_hash_lookup, type_hash_add): Make static.\n+\t* tree.h (type_hash_lookup, type_hash_add): Remove global declarations.\n+\n 2013-04-09  Richard Biener  <rguenther@suse.de>\n \n \t* tree.h (unsave_expr_now): Remove."}, {"sha": "078caae9b9e48d5fa60756eee1a89fe7c36bf89d", "filename": "gcc/tree.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/343881fd9eb2b7e8f90ac10cd17688b3dcce3186/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/343881fd9eb2b7e8f90ac10cd17688b3dcce3186/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=343881fd9eb2b7e8f90ac10cd17688b3dcce3186", "patch": "@@ -6293,7 +6293,7 @@ type_hash_hash (const void *item)\n /* Look in the type hash table for a type isomorphic to TYPE.\n    If one is found, return it.  Otherwise return 0.  */\n \n-tree\n+static tree\n type_hash_lookup (hashval_t hashcode, tree type)\n {\n   struct type_hash *h, in;\n@@ -6315,7 +6315,7 @@ type_hash_lookup (hashval_t hashcode, tree type)\n /* Add an entry to the type-hash-table\n    for a type TYPE whose hash code is HASHCODE.  */\n \n-void\n+static void\n type_hash_add (hashval_t hashcode, tree type)\n {\n   struct type_hash *h;"}, {"sha": "aa424c0e5444118eb367db34cefcac2eb18caa10", "filename": "gcc/tree.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/343881fd9eb2b7e8f90ac10cd17688b3dcce3186/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/343881fd9eb2b7e8f90ac10cd17688b3dcce3186/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=343881fd9eb2b7e8f90ac10cd17688b3dcce3186", "patch": "@@ -5928,8 +5928,6 @@ extern hashval_t iterative_hash_host_wide_int (HOST_WIDE_INT, hashval_t);\n extern int compare_tree_int (const_tree, unsigned HOST_WIDE_INT);\n extern int type_list_equal (const_tree, const_tree);\n extern int chain_member (const_tree, const_tree);\n-extern tree type_hash_lookup (unsigned int, tree);\n-extern void type_hash_add (unsigned int, tree);\n extern int simple_cst_list_equal (const_tree, const_tree);\n extern void dump_tree_statistics (void);\n extern void recompute_tree_invariant_for_addr_expr (tree);"}]}