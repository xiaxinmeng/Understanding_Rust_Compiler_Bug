{"sha": "12b4d3382209eb2c5248d8ce32b94d798acb0d0a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTJiNGQzMzgyMjA5ZWIyYzUyNDhkOGNlMzJiOTRkNzk4YWNiMGQwYQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-10-24T09:51:42Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-10-24T09:51:42Z"}, "message": "[multiple changes]\n\n2011-10-24  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch12.adb (Earlier): make available globally. If both\n\tnodes have the same sloc, the freeze node that does not come\n\tfrom source is the later one.\n\t(True_Parent): Make available globally.\n\t(Previous_Instance): Subsidiary of\n\tInsert_Freeze_Node_For_Instance, to check whether the generic\n\tparent of the current instance is declared within a previous\n\tinstance in the same unit or declarative  part, in which case the\n\tfreeze nodes of both instances must appear in order to prevent\n\telaboration problems in gigi.\n\t* sem_ch12.adb (Insert_Freeze_Node_For_Instance): A stub is a\n\tfreeze point, and the freeze node of a preceding instantiation\n\tmust be inserted before it.\n\n2011-10-24  Robert Dewar  <dewar@adacore.com>\n\n\t* checks.ads, checks.adb: Add handling of Synchronization_Check\n\t* debug.adb: Add doc for -gnatd.d and -gnatd.e (disable/enable\n\tatomic sync).\n\t* exp_ch2.adb (Expand_Entity_Reference): Set Atomic_Sync_Required\n\tflag Minor code reorganization.\n\t* opt.ads (Warn_On_Atomic_Synchronization): New switch.\n\t* par-prag.adb: Add dummy entries for pragma\n\tDisable/Enable_Atomic_Synchronization.\n\t* sem_prag.adb (Process_Suppress_Unsuppress): Handle\n\tcase of Atomic_Synchronization specially (not suppressed\n\tby All_Checks, cannot be set from Source).\n\t(Pragma Disable/Enable_Atomic_Synchronization): Add processing.\n\t* sinfo.ads, sinfo.adb: Add Atomic_Sync_Required flag\n\t* snames.ads-tmpl: Add entry for Atomic_Synchronization Add\n\tentry for pragma Disable/Enable_Atomic_Synchronization\n\t* switch-c.adb: The -gnatp switch does not disable\n\tAtomic_Synchronization Add -gnatep switch to disable\n\tAtomic_Synchronization.\n\t* types.ads: Add entry for Synchronization_Check\n\t* usage.adb: Add line for -gnated switch\n\t* warnsw.adb: Settings for Warn_On_Atomic_Synchronization\n\nFrom-SVN: r180373", "tree": {"sha": "8e1fb052842b78ff9e44ea4d0eb445b8ea8d15ee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8e1fb052842b78ff9e44ea4d0eb445b8ea8d15ee"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/12b4d3382209eb2c5248d8ce32b94d798acb0d0a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12b4d3382209eb2c5248d8ce32b94d798acb0d0a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/12b4d3382209eb2c5248d8ce32b94d798acb0d0a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12b4d3382209eb2c5248d8ce32b94d798acb0d0a/comments", "author": null, "committer": null, "parents": [{"sha": "08ce7bb81da9e4a7c4d7669b1d080a046d5b171b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08ce7bb81da9e4a7c4d7669b1d080a046d5b171b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/08ce7bb81da9e4a7c4d7669b1d080a046d5b171b"}], "stats": {"total": 1357, "additions": 842, "deletions": 515}, "files": [{"sha": "93e4e3e9807c1853918203a9d80aabaf3d5de770", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12b4d3382209eb2c5248d8ce32b94d798acb0d0a/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12b4d3382209eb2c5248d8ce32b94d798acb0d0a/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=12b4d3382209eb2c5248d8ce32b94d798acb0d0a", "patch": "@@ -1,3 +1,43 @@\n+2011-10-24  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch12.adb (Earlier): make available globally. If both\n+\tnodes have the same sloc, the freeze node that does not come\n+\tfrom source is the later one.\n+\t(True_Parent): Make available globally.\n+\t(Previous_Instance): Subsidiary of\n+\tInsert_Freeze_Node_For_Instance, to check whether the generic\n+\tparent of the current instance is declared within a previous\n+\tinstance in the same unit or declarative  part, in which case the\n+\tfreeze nodes of both instances must appear in order to prevent\n+\telaboration problems in gigi.\n+\t* sem_ch12.adb (Insert_Freeze_Node_For_Instance): A stub is a\n+\tfreeze point, and the freeze node of a preceding instantiation\n+\tmust be inserted before it.\n+\n+2011-10-24  Robert Dewar  <dewar@adacore.com>\n+\n+\t* checks.ads, checks.adb: Add handling of Synchronization_Check\n+\t* debug.adb: Add doc for -gnatd.d and -gnatd.e (disable/enable\n+\tatomic sync).\n+\t* exp_ch2.adb (Expand_Entity_Reference): Set Atomic_Sync_Required\n+\tflag Minor code reorganization.\n+\t* opt.ads (Warn_On_Atomic_Synchronization): New switch.\n+\t* par-prag.adb: Add dummy entries for pragma\n+\tDisable/Enable_Atomic_Synchronization.\n+\t* sem_prag.adb (Process_Suppress_Unsuppress): Handle\n+\tcase of Atomic_Synchronization specially (not suppressed\n+\tby All_Checks, cannot be set from Source).\n+\t(Pragma Disable/Enable_Atomic_Synchronization): Add processing.\n+\t* sinfo.ads, sinfo.adb: Add Atomic_Sync_Required flag\n+\t* snames.ads-tmpl: Add entry for Atomic_Synchronization Add\n+\tentry for pragma Disable/Enable_Atomic_Synchronization\n+\t* switch-c.adb: The -gnatp switch does not disable\n+\tAtomic_Synchronization Add -gnatep switch to disable\n+\tAtomic_Synchronization.\n+\t* types.ads: Add entry for Synchronization_Check\n+\t* usage.adb: Add line for -gnated switch\n+\t* warnsw.adb: Settings for Warn_On_Atomic_Synchronization\n+\n 2011-10-24  Geert Bosch  <bosch@adacore.com>\n \n \t* s-gearop.adb (Back_Substitute): Avoid overflow if matrix"}, {"sha": "f3234865dbd59a4622fb17298a964fdc1650c435", "filename": "gcc/ada/checks.adb", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12b4d3382209eb2c5248d8ce32b94d798acb0d0a/gcc%2Fada%2Fchecks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12b4d3382209eb2c5248d8ce32b94d798acb0d0a/gcc%2Fada%2Fchecks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fchecks.adb?ref=12b4d3382209eb2c5248d8ce32b94d798acb0d0a", "patch": "@@ -2555,6 +2555,23 @@ package body Checks is\n       end if;\n    end Apply_Universal_Integer_Attribute_Checks;\n \n+   -------------------------------------\n+   -- Atomic_Synchronization_Disabled --\n+   -------------------------------------\n+\n+   --  Note: internally Disable/Enable_Atomic_Synchronization is implemented\n+   --  using a bogus check called Atomic_Synchronization. This is to make it\n+   --  more convenient to get exactly the same semantics as [Un]Suppress.\n+\n+   function Atomic_Synchronization_Disabled (E : Entity_Id) return Boolean is\n+   begin\n+      if Present (E) and then Checks_May_Be_Suppressed (E) then\n+         return Is_Check_Suppressed (E, Atomic_Synchronization);\n+      else\n+         return Scope_Suppress (Atomic_Synchronization);\n+      end if;\n+   end Atomic_Synchronization_Disabled;\n+\n    -------------------------------\n    -- Build_Discriminant_Checks --\n    -------------------------------"}, {"sha": "83a67dcb814f0e39e23fbc394e17840dc68d0b52", "filename": "gcc/ada/checks.ads", "status": "modified", "additions": 15, "deletions": 14, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12b4d3382209eb2c5248d8ce32b94d798acb0d0a/gcc%2Fada%2Fchecks.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12b4d3382209eb2c5248d8ce32b94d798acb0d0a/gcc%2Fada%2Fchecks.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fchecks.ads?ref=12b4d3382209eb2c5248d8ce32b94d798acb0d0a", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -46,19 +46,20 @@ package Checks is\n    --  Called for each new main source program, to initialize internal\n    --  variables used in the package body of the Checks unit.\n \n-   function Access_Checks_Suppressed        (E : Entity_Id) return Boolean;\n-   function Accessibility_Checks_Suppressed (E : Entity_Id) return Boolean;\n-   function Alignment_Checks_Suppressed     (E : Entity_Id) return Boolean;\n-   function Discriminant_Checks_Suppressed  (E : Entity_Id) return Boolean;\n-   function Division_Checks_Suppressed      (E : Entity_Id) return Boolean;\n-   function Elaboration_Checks_Suppressed   (E : Entity_Id) return Boolean;\n-   function Index_Checks_Suppressed         (E : Entity_Id) return Boolean;\n-   function Length_Checks_Suppressed        (E : Entity_Id) return Boolean;\n-   function Overflow_Checks_Suppressed      (E : Entity_Id) return Boolean;\n-   function Range_Checks_Suppressed         (E : Entity_Id) return Boolean;\n-   function Storage_Checks_Suppressed       (E : Entity_Id) return Boolean;\n-   function Tag_Checks_Suppressed           (E : Entity_Id) return Boolean;\n-   function Validity_Checks_Suppressed      (E : Entity_Id) return Boolean;\n+   function Access_Checks_Suppressed          (E : Entity_Id) return Boolean;\n+   function Accessibility_Checks_Suppressed   (E : Entity_Id) return Boolean;\n+   function Alignment_Checks_Suppressed       (E : Entity_Id) return Boolean;\n+   function Atomic_Synchronization_Disabled   (E : Entity_Id) return Boolean;\n+   function Discriminant_Checks_Suppressed    (E : Entity_Id) return Boolean;\n+   function Division_Checks_Suppressed        (E : Entity_Id) return Boolean;\n+   function Elaboration_Checks_Suppressed     (E : Entity_Id) return Boolean;\n+   function Index_Checks_Suppressed           (E : Entity_Id) return Boolean;\n+   function Length_Checks_Suppressed          (E : Entity_Id) return Boolean;\n+   function Overflow_Checks_Suppressed        (E : Entity_Id) return Boolean;\n+   function Range_Checks_Suppressed           (E : Entity_Id) return Boolean;\n+   function Storage_Checks_Suppressed         (E : Entity_Id) return Boolean;\n+   function Tag_Checks_Suppressed             (E : Entity_Id) return Boolean;\n+   function Validity_Checks_Suppressed        (E : Entity_Id) return Boolean;\n    --  These functions check to see if the named check is suppressed, either\n    --  by an active scope suppress setting, or because the check has been\n    --  specifically suppressed for the given entity. If no entity is relevant"}, {"sha": "99ba3d5585ddc186e1fa19684aba0e80b594f9e6", "filename": "gcc/ada/debug.adb", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12b4d3382209eb2c5248d8ce32b94d798acb0d0a/gcc%2Fada%2Fdebug.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12b4d3382209eb2c5248d8ce32b94d798acb0d0a/gcc%2Fada%2Fdebug.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdebug.adb?ref=12b4d3382209eb2c5248d8ce32b94d798acb0d0a", "patch": "@@ -94,8 +94,8 @@ package body Debug is\n    --  d.a  Force Target_Strict_Alignment mode to True\n    --  d.b  Dump backend types\n    --  d.c  Generate inline concatenation, do not call procedure\n-   --  d.d\n-   --  d.e\n+   --  d.d  Disable atomic synchronization\n+   --  d.e  Enable atomic synchronization\n    --  d.f  Inhibit folding of static expressions\n    --  d.g  Enable conversion of raise into goto\n    --  d.h\n@@ -513,6 +513,13 @@ package body Debug is\n    --       System.Concat_n.Str_Concat_n routines in cases where the latter\n    --       routines would normally be called.\n \n+   --  d.d  Disable atomic synchronization for all atomic variable references.\n+   --       Pragma Enable_Atomic_Synchronization is ignored.\n+\n+   --  d.e  Enable atomic synchronization for all atomic variable references.\n+   --       Pragma Disable_Atomic_Synchronization is ignored, and also the\n+   --       compiler switch -gnated is ignored.\n+\n    --  d.f  Suppress folding of static expressions. This of course results\n    --       in seriously non-conforming behavior, but is useful sometimes\n    --       when tracking down handling of complex expressions."}, {"sha": "a71ce69602e2d947fc67015a53603eac7331d4c5", "filename": "gcc/ada/exp_ch2.adb", "status": "modified", "additions": 49, "deletions": 2, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12b4d3382209eb2c5248d8ce32b94d798acb0d0a/gcc%2Fada%2Fexp_ch2.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12b4d3382209eb2c5248d8ce32b94d798acb0d0a/gcc%2Fada%2Fexp_ch2.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch2.adb?ref=12b4d3382209eb2c5248d8ce32b94d798acb0d0a", "patch": "@@ -24,6 +24,7 @@\n ------------------------------------------------------------------------------\n \n with Atree;    use Atree;\n+with Checks;   use Checks;\n with Debug;    use Debug;\n with Einfo;    use Einfo;\n with Elists;   use Elists;\n@@ -354,10 +355,10 @@ package body Exp_Ch2 is\n       elsif Is_Protected_Component (E) then\n          if No_Run_Time_Mode then\n             return;\n+         else\n+            Expand_Protected_Component (N);\n          end if;\n \n-         Expand_Protected_Component (N);\n-\n       elsif Ekind (E) = E_Entry_Index_Parameter then\n          Expand_Entry_Index_Parameter (N);\n \n@@ -398,6 +399,52 @@ package body Exp_Ch2 is\n          Write_Eol;\n       end if;\n \n+      --  Set Atomic_Sync_Required if necessary for atomic variable\n+\n+      if Is_Atomic (E) then\n+         declare\n+            Set  : Boolean;\n+            MLoc : Node_Id;\n+\n+         begin\n+            --  Always set if debug flag d.e is set\n+\n+            if Debug_Flag_Dot_E then\n+               Set := True;\n+\n+            --  Never set if debug flag d.d is set\n+\n+            elsif Debug_Flag_Dot_D then\n+               Set := False;\n+\n+            --  Otherwise setting comes from Atomic_Synchronization state\n+\n+            else\n+               Set := not Atomic_Synchronization_Disabled (E);\n+            end if;\n+\n+            --  Set flag if required\n+\n+            if Set then\n+\n+               --  Generate info message if requested\n+\n+               if Warn_On_Atomic_Synchronization then\n+                  if Nkind (N) = N_Identifier then\n+                     MLoc := N;\n+                  else\n+                     MLoc := Selector_Name (N);\n+                  end if;\n+\n+                  Error_Msg_N\n+                    (\"?info: atomic synchronization set for &\", MLoc);\n+               end if;\n+\n+               Set_Atomic_Sync_Required (N);\n+            end if;\n+         end;\n+      end if;\n+\n       --  Interpret possible Current_Value for variable case\n \n       if Is_Assignable (E)"}, {"sha": "e6a42815e8216cc1e66a396211367de694818220", "filename": "gcc/ada/opt.ads", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12b4d3382209eb2c5248d8ce32b94d798acb0d0a/gcc%2Fada%2Fopt.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12b4d3382209eb2c5248d8ce32b94d798acb0d0a/gcc%2Fada%2Fopt.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fopt.ads?ref=12b4d3382209eb2c5248d8ce32b94d798acb0d0a", "patch": "@@ -1448,6 +1448,11 @@ package Opt is\n    --  with literals or S'Length, presumably assuming a lower bound of one. Set\n    --  False by -gnatwW.\n \n+   Warn_On_Atomic_Synchronization : Boolean := False;\n+   --  GNAT\n+   --  Set to True to generate information messages for atomic synchronization.\n+   --  Set True by use of -gnatw.n.\n+\n    Warn_On_Bad_Fixed_Value : Boolean := False;\n    --  GNAT\n    --  Set to True to generate warnings for static fixed-point expression"}, {"sha": "224b992274e45ebe6b1ab42368d33cee37366ad3", "filename": "gcc/ada/par-prag.adb", "status": "modified", "additions": 172, "deletions": 170, "changes": 342, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12b4d3382209eb2c5248d8ce32b94d798acb0d0a/gcc%2Fada%2Fpar-prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12b4d3382209eb2c5248d8ce32b94d798acb0d0a/gcc%2Fada%2Fpar-prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-prag.adb?ref=12b4d3382209eb2c5248d8ce32b94d798acb0d0a", "patch": "@@ -61,8 +61,8 @@ function Prag (Pragma_Node : Node_Id; Semi : Source_Ptr) return Node_Id is\n    --  that is the only case in which a non-present argument can be referenced.\n \n    procedure Check_Arg_Count (Required : Int);\n-   --  Check argument count for pragma = Required.\n-   --  If not give error and raise Error_Resync.\n+   --  Check argument count for pragma = Required. If not give error and raise\n+   --  Error_Resync.\n \n    procedure Check_Arg_Is_String_Literal (Arg : Node_Id);\n    --  Check the expression of the specified argument to make sure that it\n@@ -1091,174 +1091,176 @@ begin\n       --  For all other pragmas, checking and processing is handled\n       --  entirely in Sem_Prag, and no further checking is done by Par.\n \n-      when Pragma_Abort_Defer                   |\n-           Pragma_Assertion_Policy              |\n-           Pragma_Assume_No_Invalid_Values      |\n-           Pragma_AST_Entry                     |\n-           Pragma_All_Calls_Remote              |\n-           Pragma_Annotate                      |\n-           Pragma_Assert                        |\n-           Pragma_Asynchronous                  |\n-           Pragma_Atomic                        |\n-           Pragma_Atomic_Components             |\n-           Pragma_Attach_Handler                |\n-           Pragma_Check                         |\n-           Pragma_Check_Name                    |\n-           Pragma_Check_Policy                  |\n-           Pragma_CIL_Constructor               |\n-           Pragma_Compile_Time_Error            |\n-           Pragma_Compile_Time_Warning          |\n-           Pragma_Compiler_Unit                 |\n-           Pragma_Convention_Identifier         |\n-           Pragma_CPP_Class                     |\n-           Pragma_CPP_Constructor               |\n-           Pragma_CPP_Virtual                   |\n-           Pragma_CPP_Vtable                    |\n-           Pragma_CPU                           |\n-           Pragma_C_Pass_By_Copy                |\n-           Pragma_Comment                       |\n-           Pragma_Common_Object                 |\n-           Pragma_Complete_Representation       |\n-           Pragma_Complex_Representation        |\n-           Pragma_Component_Alignment           |\n-           Pragma_Controlled                    |\n-           Pragma_Convention                    |\n-           Pragma_Debug_Policy                  |\n-           Pragma_Detect_Blocking               |\n-           Pragma_Default_Storage_Pool          |\n-           Pragma_Dimension                     |\n-           Pragma_Discard_Names                 |\n-           Pragma_Dispatching_Domain            |\n-           Pragma_Eliminate                     |\n-           Pragma_Elaborate                     |\n-           Pragma_Elaborate_All                 |\n-           Pragma_Elaborate_Body                |\n-           Pragma_Elaboration_Checks            |\n-           Pragma_Export                        |\n-           Pragma_Export_Exception              |\n-           Pragma_Export_Function               |\n-           Pragma_Export_Object                 |\n-           Pragma_Export_Procedure              |\n-           Pragma_Export_Value                  |\n-           Pragma_Export_Valued_Procedure       |\n-           Pragma_Extend_System                 |\n-           Pragma_External                      |\n-           Pragma_External_Name_Casing          |\n-           Pragma_Favor_Top_Level               |\n-           Pragma_Fast_Math                     |\n-           Pragma_Finalize_Storage_Only         |\n-           Pragma_Float_Representation          |\n-           Pragma_Ident                         |\n-           Pragma_Implementation_Defined        |\n-           Pragma_Implemented                   |\n-           Pragma_Implicit_Packing              |\n-           Pragma_Import                        |\n-           Pragma_Import_Exception              |\n-           Pragma_Import_Function               |\n-           Pragma_Import_Object                 |\n-           Pragma_Import_Procedure              |\n-           Pragma_Import_Valued_Procedure       |\n-           Pragma_Independent                   |\n-           Pragma_Independent_Components        |\n-           Pragma_Initialize_Scalars            |\n-           Pragma_Inline                        |\n-           Pragma_Inline_Always                 |\n-           Pragma_Inline_Generic                |\n-           Pragma_Inspection_Point              |\n-           Pragma_Interface                     |\n-           Pragma_Interface_Name                |\n-           Pragma_Interrupt_Handler             |\n-           Pragma_Interrupt_State               |\n-           Pragma_Interrupt_Priority            |\n-           Pragma_Invariant                     |\n-           Pragma_Java_Constructor              |\n-           Pragma_Java_Interface                |\n-           Pragma_Keep_Names                    |\n-           Pragma_License                       |\n-           Pragma_Link_With                     |\n-           Pragma_Linker_Alias                  |\n-           Pragma_Linker_Constructor            |\n-           Pragma_Linker_Destructor             |\n-           Pragma_Linker_Options                |\n-           Pragma_Linker_Section                |\n-           Pragma_Locking_Policy                |\n-           Pragma_Long_Float                    |\n-           Pragma_Machine_Attribute             |\n-           Pragma_Main                          |\n-           Pragma_Main_Storage                  |\n-           Pragma_Memory_Size                   |\n-           Pragma_No_Body                       |\n-           Pragma_No_Return                     |\n-           Pragma_No_Run_Time                   |\n-           Pragma_No_Strict_Aliasing            |\n-           Pragma_Normalize_Scalars             |\n-           Pragma_Obsolescent                   |\n-           Pragma_Ordered                       |\n-           Pragma_Optimize                      |\n-           Pragma_Optimize_Alignment            |\n-           Pragma_Pack                          |\n-           Pragma_Passive                       |\n-           Pragma_Preelaborable_Initialization  |\n-           Pragma_Polling                       |\n-           Pragma_Persistent_BSS                |\n-           Pragma_Postcondition                 |\n-           Pragma_Precondition                  |\n-           Pragma_Predicate                     |\n-           Pragma_Preelaborate                  |\n-           Pragma_Preelaborate_05               |\n-           Pragma_Priority                      |\n-           Pragma_Priority_Specific_Dispatching |\n-           Pragma_Profile                       |\n-           Pragma_Profile_Warnings              |\n-           Pragma_Propagate_Exceptions          |\n-           Pragma_Psect_Object                  |\n-           Pragma_Pure                          |\n-           Pragma_Pure_05                       |\n-           Pragma_Pure_Function                 |\n-           Pragma_Queuing_Policy                |\n-           Pragma_Relative_Deadline             |\n-           Pragma_Remote_Call_Interface         |\n-           Pragma_Remote_Types                  |\n-           Pragma_Restricted_Run_Time           |\n-           Pragma_Ravenscar                     |\n-           Pragma_Reviewable                    |\n-           Pragma_Share_Generic                 |\n-           Pragma_Shared                        |\n-           Pragma_Shared_Passive                |\n-           Pragma_Short_Circuit_And_Or          |\n-           Pragma_Short_Descriptors             |\n-           Pragma_Storage_Size                  |\n-           Pragma_Storage_Unit                  |\n-           Pragma_Static_Elaboration_Desired    |\n-           Pragma_Stream_Convert                |\n-           Pragma_Subtitle                      |\n-           Pragma_Suppress                      |\n-           Pragma_Suppress_Debug_Info           |\n-           Pragma_Suppress_Exception_Locations  |\n-           Pragma_Suppress_Initialization       |\n-           Pragma_System_Name                   |\n-           Pragma_Task_Dispatching_Policy       |\n-           Pragma_Task_Info                     |\n-           Pragma_Task_Name                     |\n-           Pragma_Task_Storage                  |\n-           Pragma_Test_Case                     |\n-           Pragma_Thread_Local_Storage          |\n-           Pragma_Time_Slice                    |\n-           Pragma_Title                         |\n-           Pragma_Unchecked_Union               |\n-           Pragma_Unimplemented_Unit            |\n-           Pragma_Universal_Aliasing            |\n-           Pragma_Universal_Data                |\n-           Pragma_Unmodified                    |\n-           Pragma_Unreferenced                  |\n-           Pragma_Unreferenced_Objects          |\n-           Pragma_Unreserve_All_Interrupts      |\n-           Pragma_Unsuppress                    |\n-           Pragma_Use_VADS_Size                 |\n-           Pragma_Volatile                      |\n-           Pragma_Volatile_Components           |\n-           Pragma_Weak_External                 |\n-           Pragma_Validity_Checks               =>\n+      when Pragma_Abort_Defer                    |\n+           Pragma_Assertion_Policy               |\n+           Pragma_Assume_No_Invalid_Values       |\n+           Pragma_AST_Entry                      |\n+           Pragma_All_Calls_Remote               |\n+           Pragma_Annotate                       |\n+           Pragma_Assert                         |\n+           Pragma_Asynchronous                   |\n+           Pragma_Atomic                         |\n+           Pragma_Atomic_Components              |\n+           Pragma_Attach_Handler                 |\n+           Pragma_Check                          |\n+           Pragma_Check_Name                     |\n+           Pragma_Check_Policy                   |\n+           Pragma_CIL_Constructor                |\n+           Pragma_Compile_Time_Error             |\n+           Pragma_Compile_Time_Warning           |\n+           Pragma_Compiler_Unit                  |\n+           Pragma_Convention_Identifier          |\n+           Pragma_CPP_Class                      |\n+           Pragma_CPP_Constructor                |\n+           Pragma_CPP_Virtual                    |\n+           Pragma_CPP_Vtable                     |\n+           Pragma_CPU                            |\n+           Pragma_C_Pass_By_Copy                 |\n+           Pragma_Comment                        |\n+           Pragma_Common_Object                  |\n+           Pragma_Complete_Representation        |\n+           Pragma_Complex_Representation         |\n+           Pragma_Component_Alignment            |\n+           Pragma_Controlled                     |\n+           Pragma_Convention                     |\n+           Pragma_Debug_Policy                   |\n+           Pragma_Detect_Blocking                |\n+           Pragma_Default_Storage_Pool           |\n+           Pragma_Dimension                      |\n+           Pragma_Disable_Atomic_Synchronization |\n+           Pragma_Discard_Names                  |\n+           Pragma_Dispatching_Domain             |\n+           Pragma_Eliminate                      |\n+           Pragma_Elaborate                      |\n+           Pragma_Elaborate_All                  |\n+           Pragma_Elaborate_Body                 |\n+           Pragma_Elaboration_Checks             |\n+           Pragma_Enable_Atomic_Synchronization  |\n+           Pragma_Export                         |\n+           Pragma_Export_Exception               |\n+           Pragma_Export_Function                |\n+           Pragma_Export_Object                  |\n+           Pragma_Export_Procedure               |\n+           Pragma_Export_Value                   |\n+           Pragma_Export_Valued_Procedure        |\n+           Pragma_Extend_System                  |\n+           Pragma_External                       |\n+           Pragma_External_Name_Casing           |\n+           Pragma_Favor_Top_Level                |\n+           Pragma_Fast_Math                      |\n+           Pragma_Finalize_Storage_Only          |\n+           Pragma_Float_Representation           |\n+           Pragma_Ident                          |\n+           Pragma_Implementation_Defined         |\n+           Pragma_Implemented                    |\n+           Pragma_Implicit_Packing               |\n+           Pragma_Import                         |\n+           Pragma_Import_Exception               |\n+           Pragma_Import_Function                |\n+           Pragma_Import_Object                  |\n+           Pragma_Import_Procedure               |\n+           Pragma_Import_Valued_Procedure        |\n+           Pragma_Independent                    |\n+           Pragma_Independent_Components         |\n+           Pragma_Initialize_Scalars             |\n+           Pragma_Inline                         |\n+           Pragma_Inline_Always                  |\n+           Pragma_Inline_Generic                 |\n+           Pragma_Inspection_Point               |\n+           Pragma_Interface                      |\n+           Pragma_Interface_Name                 |\n+           Pragma_Interrupt_Handler              |\n+           Pragma_Interrupt_State                |\n+           Pragma_Interrupt_Priority             |\n+           Pragma_Invariant                      |\n+           Pragma_Java_Constructor               |\n+           Pragma_Java_Interface                 |\n+           Pragma_Keep_Names                     |\n+           Pragma_License                        |\n+           Pragma_Link_With                      |\n+           Pragma_Linker_Alias                   |\n+           Pragma_Linker_Constructor             |\n+           Pragma_Linker_Destructor              |\n+           Pragma_Linker_Options                 |\n+           Pragma_Linker_Section                 |\n+           Pragma_Locking_Policy                 |\n+           Pragma_Long_Float                     |\n+           Pragma_Machine_Attribute              |\n+           Pragma_Main                           |\n+           Pragma_Main_Storage                   |\n+           Pragma_Memory_Size                    |\n+           Pragma_No_Body                        |\n+           Pragma_No_Return                      |\n+           Pragma_No_Run_Time                    |\n+           Pragma_No_Strict_Aliasing             |\n+           Pragma_Normalize_Scalars              |\n+           Pragma_Obsolescent                    |\n+           Pragma_Ordered                        |\n+           Pragma_Optimize                       |\n+           Pragma_Optimize_Alignment             |\n+           Pragma_Pack                           |\n+           Pragma_Passive                        |\n+           Pragma_Preelaborable_Initialization   |\n+           Pragma_Polling                        |\n+           Pragma_Persistent_BSS                 |\n+           Pragma_Postcondition                  |\n+           Pragma_Precondition                   |\n+           Pragma_Predicate                      |\n+           Pragma_Preelaborate                   |\n+           Pragma_Preelaborate_05                |\n+           Pragma_Priority                       |\n+           Pragma_Priority_Specific_Dispatching  |\n+           Pragma_Profile                        |\n+           Pragma_Profile_Warnings               |\n+           Pragma_Propagate_Exceptions           |\n+           Pragma_Psect_Object                   |\n+           Pragma_Pure                           |\n+           Pragma_Pure_05                        |\n+           Pragma_Pure_Function                  |\n+           Pragma_Queuing_Policy                 |\n+           Pragma_Relative_Deadline              |\n+           Pragma_Remote_Call_Interface          |\n+           Pragma_Remote_Types                   |\n+           Pragma_Restricted_Run_Time            |\n+           Pragma_Ravenscar                      |\n+           Pragma_Reviewable                     |\n+           Pragma_Share_Generic                  |\n+           Pragma_Shared                         |\n+           Pragma_Shared_Passive                 |\n+           Pragma_Short_Circuit_And_Or           |\n+           Pragma_Short_Descriptors              |\n+           Pragma_Storage_Size                   |\n+           Pragma_Storage_Unit                   |\n+           Pragma_Static_Elaboration_Desired     |\n+           Pragma_Stream_Convert                 |\n+           Pragma_Subtitle                       |\n+           Pragma_Suppress                       |\n+           Pragma_Suppress_Debug_Info            |\n+           Pragma_Suppress_Exception_Locations   |\n+           Pragma_Suppress_Initialization        |\n+           Pragma_System_Name                    |\n+           Pragma_Task_Dispatching_Policy        |\n+           Pragma_Task_Info                      |\n+           Pragma_Task_Name                      |\n+           Pragma_Task_Storage                   |\n+           Pragma_Test_Case                      |\n+           Pragma_Thread_Local_Storage           |\n+           Pragma_Time_Slice                     |\n+           Pragma_Title                          |\n+           Pragma_Unchecked_Union                |\n+           Pragma_Unimplemented_Unit             |\n+           Pragma_Universal_Aliasing             |\n+           Pragma_Universal_Data                 |\n+           Pragma_Unmodified                     |\n+           Pragma_Unreferenced                   |\n+           Pragma_Unreferenced_Objects           |\n+           Pragma_Unreserve_All_Interrupts       |\n+           Pragma_Unsuppress                     |\n+           Pragma_Use_VADS_Size                  |\n+           Pragma_Volatile                       |\n+           Pragma_Volatile_Components            |\n+           Pragma_Weak_External                  |\n+           Pragma_Validity_Checks                =>\n          null;\n \n       --------------------"}, {"sha": "f88c900852371d28e27cbd09f04c0339b6a234cb", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 178, "deletions": 110, "changes": 288, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12b4d3382209eb2c5248d8ce32b94d798acb0d0a/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12b4d3382209eb2c5248d8ce32b94d798acb0d0a/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=12b4d3382209eb2c5248d8ce32b94d798acb0d0a", "patch": "@@ -451,6 +451,12 @@ package body Sem_Ch12 is\n    --  an instantiation in the source, or the internal instantiation that\n    --  corresponds to the actual for a formal package.\n \n+   function Earlier (N1, N2 : Node_Id) return Boolean;\n+   --  Yields True if N1 and N2 appear in the same compilation unit,\n+   --  ignoring subunits, and if N1 is to the left of N2 in a left-to-right\n+   --  traversal of the tree for the unit. Used to determine the placement\n+   --  of freeze nodes for instance bodies that may depend on other instances.\n+\n    function Find_Actual_Type\n      (Typ       : Entity_Id;\n       Gen_Type  : Entity_Id) return Entity_Id;\n@@ -473,9 +479,11 @@ package body Sem_Ch12 is\n       Inst   : Node_Id) return Boolean;\n    --  True if the instantiation Inst and the given freeze_node F_Node appear\n    --  within the same declarative part, ignoring subunits, but with no inter-\n-   --  vening subprograms or concurrent units. If true, the freeze node\n-   --  of the instance can be placed after the freeze node of the parent,\n-   --  which it itself an instance.\n+   --  vening subprograms or concurrent units. Used to find the proper plave\n+   --  for the freeze node of an instance, when the generic is declared in a\n+   --  previous instance. If predicate is true, the freeze node of the instance\n+   --  can be placed after the freeze node of the previous instance, Otherwise\n+   --  it has to be placed at the end of the current declarative part.\n \n    function In_Main_Context (E : Entity_Id) return Boolean;\n    --  Check whether an instantiation is in the context of the main unit.\n@@ -729,6 +737,9 @@ package body Sem_Ch12 is\n    --  before installing parents of generics, that are not visible for the\n    --  actuals themselves.\n \n+   function True_Parent (N : Node_Id) return Node_Id;\n+   --  For a subunit, return parent of corresponding stub\n+\n    procedure Valid_Default_Attribute (Nam : Entity_Id; Def : Node_Id);\n    --  Verify that an attribute that appears as the default for a formal\n    --  subprogram is a function or procedure with the correct profile.\n@@ -6762,6 +6773,103 @@ package body Sem_Ch12 is\n       Expander_Mode_Restore;\n    end End_Generic;\n \n+   -------------\n+   -- Earlier --\n+   -------------\n+\n+   function Earlier (N1, N2 : Node_Id) return Boolean is\n+      D1 : Integer := 0;\n+      D2 : Integer := 0;\n+      P1 : Node_Id := N1;\n+      P2 : Node_Id := N2;\n+\n+      procedure Find_Depth (P : in out Node_Id; D : in out Integer);\n+      --  Find distance from given node to enclosing compilation unit\n+\n+      ----------------\n+      -- Find_Depth --\n+      ----------------\n+\n+      procedure Find_Depth (P : in out Node_Id; D : in out Integer) is\n+      begin\n+         while Present (P)\n+           and then Nkind (P) /= N_Compilation_Unit\n+         loop\n+            P := True_Parent (P);\n+            D := D + 1;\n+         end loop;\n+      end Find_Depth;\n+\n+   --  Start of processing for Earlier\n+\n+   begin\n+      Find_Depth (P1, D1);\n+      Find_Depth (P2, D2);\n+\n+      if P1 /= P2 then\n+         return False;\n+      else\n+         P1 := N1;\n+         P2 := N2;\n+      end if;\n+\n+      while D1 > D2 loop\n+         P1 := True_Parent (P1);\n+         D1 := D1 - 1;\n+      end loop;\n+\n+      while D2 > D1 loop\n+         P2 := True_Parent (P2);\n+         D2 := D2 - 1;\n+      end loop;\n+\n+      --  At this point P1 and P2 are at the same distance from the root.\n+      --  We examine their parents until we find a common declarative list,\n+      --  at which point we can establish their relative placement by\n+      --  comparing their ultimate slocs. If we reach the root, N1 and N2\n+      --  do not descend from the same declarative list (e.g. one is nested\n+      --  in the declarative part and the other is in a block in the\n+      --  statement part) and the earlier one is already frozen.\n+\n+      while not Is_List_Member (P1)\n+        or else not Is_List_Member (P2)\n+        or else List_Containing (P1) /= List_Containing (P2)\n+      loop\n+         P1 := True_Parent (P1);\n+         P2 := True_Parent (P2);\n+\n+         if Nkind (Parent (P1)) = N_Subunit then\n+            P1 := Corresponding_Stub (Parent (P1));\n+         end if;\n+\n+         if Nkind (Parent (P2)) = N_Subunit then\n+            P2 := Corresponding_Stub (Parent (P2));\n+         end if;\n+\n+         if P1 = P2 then\n+            return False;\n+         end if;\n+      end loop;\n+\n+      --  If the sloc positions are different the result is unambiguous. If\n+      --  the slocs are identical, one of them must not come from source, which\n+      --  is the case for freeze nodes, whose sloc is unrelated to the point\n+      --  point at which they are inserted in the tree. The source node is the\n+      --  earlier one in the tree.\n+\n+      if Top_Level_Location (Sloc (P1)) < Top_Level_Location (Sloc (P2)) then\n+         return True;\n+\n+      elsif\n+        Top_Level_Location (Sloc (P1)) > Top_Level_Location (Sloc (P2))\n+      then\n+         return False;\n+\n+      else\n+         return Comes_From_Source (P1);\n+      end if;\n+   end Earlier;\n+\n    ----------------------\n    -- Find_Actual_Type --\n    ----------------------\n@@ -6828,11 +6936,6 @@ package body Sem_Ch12 is\n       Enc_I    : Node_Id;\n       F_Node   : Node_Id;\n \n-      function Earlier (N1, N2 : Node_Id) return Boolean;\n-      --  Yields True if N1 and N2 appear in the same compilation unit,\n-      --  ignoring subunits, and if N1 is to the left of N2 in a left-to-right\n-      --  traversal of the tree for the unit.\n-\n       function Enclosing_Body (N : Node_Id) return Node_Id;\n       --  Find innermost package body that encloses the given node, and which\n       --  is not a compilation unit. Freeze nodes for the instance, or for its\n@@ -6843,91 +6946,6 @@ package body Sem_Ch12 is\n       --  Find entity for given package body, and locate or create a freeze\n       --  node for it.\n \n-      function True_Parent (N : Node_Id) return Node_Id;\n-      --  For a subunit, return parent of corresponding stub\n-\n-      -------------\n-      -- Earlier --\n-      -------------\n-\n-      function Earlier (N1, N2 : Node_Id) return Boolean is\n-         D1 : Integer := 0;\n-         D2 : Integer := 0;\n-         P1 : Node_Id := N1;\n-         P2 : Node_Id := N2;\n-\n-         procedure Find_Depth (P : in out Node_Id; D : in out Integer);\n-         --  Find distance from given node to enclosing compilation unit\n-\n-         ----------------\n-         -- Find_Depth --\n-         ----------------\n-\n-         procedure Find_Depth (P : in out Node_Id; D : in out Integer) is\n-         begin\n-            while Present (P)\n-              and then Nkind (P) /= N_Compilation_Unit\n-            loop\n-               P := True_Parent (P);\n-               D := D + 1;\n-            end loop;\n-         end Find_Depth;\n-\n-      --  Start of processing for Earlier\n-\n-      begin\n-         Find_Depth (P1, D1);\n-         Find_Depth (P2, D2);\n-\n-         if P1 /= P2 then\n-            return False;\n-         else\n-            P1 := N1;\n-            P2 := N2;\n-         end if;\n-\n-         while D1 > D2 loop\n-            P1 := True_Parent (P1);\n-            D1 := D1 - 1;\n-         end loop;\n-\n-         while D2 > D1 loop\n-            P2 := True_Parent (P2);\n-            D2 := D2 - 1;\n-         end loop;\n-\n-         --  At this point P1 and P2 are at the same distance from the root.\n-         --  We examine their parents until we find a common declarative list,\n-         --  at which point we can establish their relative placement by\n-         --  comparing their ultimate slocs. If we reach the root, N1 and N2\n-         --  do not descend from the same declarative list (e.g. one is nested\n-         --  in the declarative part and the other is in a block in the\n-         --  statement part) and the earlier one is already frozen.\n-\n-         while not Is_List_Member (P1)\n-           or else not Is_List_Member (P2)\n-           or else List_Containing (P1) /= List_Containing (P2)\n-         loop\n-            P1 := True_Parent (P1);\n-            P2 := True_Parent (P2);\n-\n-            if Nkind (Parent (P1)) = N_Subunit then\n-               P1 := Corresponding_Stub (Parent (P1));\n-            end if;\n-\n-            if Nkind (Parent (P2)) = N_Subunit then\n-               P2 := Corresponding_Stub (Parent (P2));\n-            end if;\n-\n-            if P1 = P2 then\n-               return False;\n-            end if;\n-         end loop;\n-\n-         return\n-           Top_Level_Location (Sloc (P1)) < Top_Level_Location (Sloc (P2));\n-      end Earlier;\n-\n       --------------------\n       -- Enclosing_Body --\n       --------------------\n@@ -6973,19 +6991,6 @@ package body Sem_Ch12 is\n          return Freeze_Node (Id);\n       end Package_Freeze_Node;\n \n-      -----------------\n-      -- True_Parent --\n-      -----------------\n-\n-      function True_Parent (N : Node_Id) return Node_Id is\n-      begin\n-         if Nkind (Parent (N)) = N_Subunit then\n-            return Parent (Corresponding_Stub (Parent (N)));\n-         else\n-            return Parent (N);\n-         end if;\n-      end True_Parent;\n-\n    --  Start of processing of Freeze_Subprogram_Body\n \n    begin\n@@ -7336,6 +7341,7 @@ package body Sem_Ch12 is\n \n          elsif Nkind_In (Nod, N_Subprogram_Body,\n                               N_Package_Body,\n+                              N_Package_Declaration,\n                               N_Task_Body,\n                               N_Protected_Body,\n                               N_Block_Statement)\n@@ -7478,12 +7484,58 @@ package body Sem_Ch12 is\n       Decls : List_Id;\n       Par_N : Node_Id;\n \n+      function Previous_Instance (Gen : Entity_Id) return Entity_Id;\n+      --  Find the local instance, if any, that declares the generic that is\n+      --  being instantiated. If present, the freeze node for this instance\n+      --  must follow the freeze node for the previous instance.\n+\n+      -----------------------\n+      -- Previous_Instance --\n+      -----------------------\n+\n+      function Previous_Instance (Gen : Entity_Id) return Entity_Id is\n+         S : Entity_Id;\n+      begin\n+         S := Scope (Gen);\n+         while Present (S)\n+           and then S /= Standard_Standard\n+         loop\n+            if Is_Generic_Instance (S)\n+              and then In_Same_Source_Unit (S, N)\n+            then\n+               return S;\n+            end if;\n+            S := Scope (S);\n+         end loop;\n+         return Empty;\n+      end Previous_Instance;\n+\n    begin\n       if not Is_List_Member (F_Node) then\n          Decls := List_Containing (N);\n          Par_N := Parent (Decls);\n          Decl  := N;\n \n+         --  If this is a package instance, check whether the generic is\n+         --  declared in a previous instance.\n+\n+         if Present (Generic_Parent (Parent (Inst)))\n+           and then Is_In_Main_Unit (N)\n+         then\n+            declare\n+               Par_I : constant Entity_Id :=\n+                 Previous_Instance (Generic_Parent (Parent (Inst)));\n+\n+            begin\n+               if Present (Par_I)\n+                 and then Earlier (N, Freeze_Node (Par_I))\n+               then\n+                  Insert_After (Freeze_Node (Par_I), F_Node);\n+                  return;\n+               end if;\n+            end;\n+         end if;\n+\n          --  When the instantiation occurs in a package declaration, append the\n          --  freeze node to the private declarations (if any).\n \n@@ -7500,9 +7552,9 @@ package body Sem_Ch12 is\n          --  adhere to the general rule of a package or subprogram body causing\n          --  freezing of anything before it in the same declarative region. In\n          --  this case, the proper freeze point of a package instantiation is\n-         --  before the first source body which follows. This ensures that\n-         --  entities coming from the instance are already frozen and usable\n-         --  in source bodies.\n+         --  before the first source body which follows, or before a stub.\n+         --  This ensures that entities coming from the instance are already\n+         --  frozen and usable in source bodies.\n \n          if Nkind (Par_N) /= N_Package_Declaration\n            and then Ekind (Inst) = E_Package\n@@ -7511,7 +7563,9 @@ package body Sem_Ch12 is\n              not In_Same_Source_Unit (Generic_Parent (Parent (Inst)), Inst)\n          then\n             while Present (Decl) loop\n-               if Nkind_In (Decl, N_Package_Body, N_Subprogram_Body)\n+               if (Nkind (Decl) in N_Unit_Body\n+                     or else\n+                   Nkind (Decl) in N_Body_Stub)\n                  and then Comes_From_Source (Decl)\n                then\n                   Insert_Before (Decl, F_Node);\n@@ -7525,6 +7579,7 @@ package body Sem_Ch12 is\n          --  In a package declaration, or if no previous body, insert at end\n          --  of list.\n \n+         Set_Sloc (F_Node, Sloc (Last (Decls)));\n          Insert_After (Last (Decls), F_Node);\n       end if;\n    end Insert_Freeze_Node_For_Instance;\n@@ -13177,6 +13232,19 @@ package body Sem_Ch12 is\n       end loop;\n    end Switch_View;\n \n+   -----------------\n+   -- True_Parent --\n+   -----------------\n+\n+   function True_Parent (N : Node_Id) return Node_Id is\n+   begin\n+      if Nkind (Parent (N)) = N_Subunit then\n+         return Parent (Corresponding_Stub (Parent (N)));\n+      else\n+         return Parent (N);\n+      end if;\n+   end True_Parent;\n+\n    -----------------------------\n    -- Valid_Default_Attribute --\n    -----------------------------"}, {"sha": "a143deaeb10f855ee5b408bc12a33e46ba497def", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 271, "deletions": 198, "changes": 469, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12b4d3382209eb2c5248d8ce32b94d798acb0d0a/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12b4d3382209eb2c5248d8ce32b94d798acb0d0a/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=12b4d3382209eb2c5248d8ce32b94d798acb0d0a", "patch": "@@ -750,6 +750,10 @@ package body Sem_Prag is\n       --  convention value in the specified entity or entities. On return\n       --  C is the convention, Ent is the referenced entity.\n \n+      procedure Process_Disable_Enable_Atomic_Sync (Nam : Name_Id);\n+      --  Common processing for Disable/Enable_Atomic_Synchronization. Nam is\n+      --  Name_Suppress for Disable and Name_Unsuppress for Enable.\n+\n       procedure Process_Extended_Import_Export_Exception_Pragma\n         (Arg_Internal : Node_Id;\n          Arg_External : Node_Id;\n@@ -3566,6 +3570,35 @@ package body Sem_Prag is\n          end if;\n       end Process_Convention;\n \n+      ----------------------------------------\n+      -- Process_Disable_Enable_Atomic_Sync --\n+      ----------------------------------------\n+\n+      procedure Process_Disable_Enable_Atomic_Sync (Nam : Name_Id) is\n+      begin\n+         GNAT_Pragma;\n+         Check_No_Identifiers;\n+         Check_At_Most_N_Arguments (1);\n+\n+         --  Modeled internally as\n+         --    pragma Unsuppress (Atomic_Synchronization [,Entity])\n+\n+         Rewrite (N,\n+           Make_Pragma (Loc,\n+             Pragma_Identifier            =>\n+               Make_Identifier (Loc, Nam),\n+             Pragma_Argument_Associations => New_List (\n+               Make_Pragma_Argument_Association (Loc,\n+                 Expression =>\n+                   Make_Identifier (Loc, Name_Atomic_Synchronization)))));\n+\n+         if Present (Arg1) then\n+            Append_To (Pragma_Argument_Associations (N), New_Copy (Arg1));\n+         end if;\n+\n+         Analyze (N);\n+      end Process_Disable_Enable_Atomic_Sync;\n+\n       -----------------------------------------------------\n       -- Process_Extended_Import_Export_Exception_Pragma --\n       -----------------------------------------------------\n@@ -5305,8 +5338,15 @@ package body Sem_Prag is\n                --  H.4(12). Restriction_Warnings never affects generated code\n                --  so this is done only in the real restriction case.\n \n+               --  Atomic_Synchronization is not a real check, so it is not\n+               --  affected by this processing).\n+\n                if R_Id = No_Exceptions and then not Warn then\n-                  Scope_Suppress := (others => True);\n+                  for J in Scope_Suppress'Range loop\n+                     if J /= Atomic_Synchronization then\n+                        Scope_Suppress (J) := True;\n+                     end if;\n+                  end loop;\n                end if;\n \n             --  Case of No_Dependence => unit-name. Note that the parser\n@@ -5418,14 +5458,24 @@ package body Sem_Prag is\n \n          procedure Suppress_Unsuppress_Echeck (E : Entity_Id; C : Check_Id) is\n          begin\n+            --  Check for error of trying to set atomic synchronization for\n+            --  a non-atomic variable.\n+\n+            if C = Atomic_Synchronization\n+              and then not Is_Atomic (E)\n+            then\n+               Error_Msg_N\n+                 (\"pragma & requires atomic variable\",\n+                  Pragma_Identifier (Original_Node (N)));\n+            end if;\n+\n             Set_Checks_May_Be_Suppressed (E);\n \n             if In_Package_Spec then\n                Push_Global_Suppress_Stack_Entry\n                  (Entity   => E,\n                   Check    => C,\n                   Suppress => Suppress_Case);\n-\n             else\n                Push_Local_Suppress_Stack_Entry\n                  (Entity   => E,\n@@ -5493,18 +5543,26 @@ package body Sem_Prag is\n                --  the exception of Elaboration_Check, which is handled\n                --  specially because of not wanting All_Checks to have the\n                --  effect of deactivating static elaboration order processing.\n+               --  Atomic_Synchronization is also not affected, since this is\n+               --  not a real check.\n \n                for J in Scope_Suppress'Range loop\n-                  if J /= Elaboration_Check then\n+                  if J /= Elaboration_Check\n+                    and then J /= Atomic_Synchronization\n+                  then\n                      Scope_Suppress (J) := Suppress_Case;\n                   end if;\n                end loop;\n \n             --  If not All_Checks, and predefined check, then set appropriate\n             --  scope entry. Note that we will set Elaboration_Check if this\n-            --  is explicitly specified.\n+            --  is explicitly specified. Atomic_Synchronization is allowed\n+            --  only if internally generated and entity is atomic.\n \n-            elsif C in Predefined_Check_Id then\n+            elsif C in Predefined_Check_Id\n+              and then (not Comes_From_Source (N)\n+                         or else C /= Atomic_Synchronization)\n+            then\n                Scope_Suppress (C) := Suppress_Case;\n             end if;\n \n@@ -6918,7 +6976,6 @@ package body Sem_Prag is\n                Error_Pragma_Arg (\"inappropriate entity for pragma%\", Arg1);\n             end if;\n          end Atomic_Components;\n-\n          --------------------\n          -- Attach_Handler --\n          --------------------\n@@ -7942,6 +7999,15 @@ package body Sem_Prag is\n             Check_Arg_Is_Static_Expression (Arg3, Standard_Integer);\n             Check_Arg_Is_Static_Expression (Arg4, Standard_Integer);\n \n+         ------------------------------------\n+         -- Disable_Atomic_Synchronization --\n+         ------------------------------------\n+\n+         --  pragma Disable_Atomic_Synchronization [(Entity)];\n+\n+         when Pragma_Disable_Atomic_Synchronization =>\n+            Process_Disable_Enable_Atomic_Sync (Name_Suppress);\n+\n          -------------------\n          -- Discard_Names --\n          -------------------\n@@ -8364,6 +8430,15 @@ package body Sem_Prag is\n                Source_Location);\n          end Eliminate;\n \n+         -----------------------------------\n+         -- Enable_Atomic_Synchronization --\n+         -----------------------------------\n+\n+         --  pragma Enable_Atomic_Synchronization [(Entity)];\n+\n+         when Pragma_Enable_Atomic_Synchronization =>\n+            Process_Disable_Enable_Atomic_Sync (Name_Unsuppress);\n+\n          ------------\n          -- Export --\n          ------------\n@@ -14152,16 +14227,12 @@ package body Sem_Prag is\n                end;\n \n             elsif Nkind (A) = N_Identifier then\n-\n                if Chars (A) = Name_All_Checks then\n                   Set_Validity_Check_Options (\"a\");\n-\n                elsif Chars (A) = Name_On then\n                   Validity_Checks_On := True;\n-\n                elsif Chars (A) = Name_Off then\n                   Validity_Checks_On := False;\n-\n                end if;\n             end if;\n          end Validity_Checks;\n@@ -14678,194 +14749,196 @@ package body Sem_Prag is\n    --  99  special processing required (e.g. for pragma Check)\n \n    Sig_Flags : constant array (Pragma_Id) of Int :=\n-     (Pragma_AST_Entry                     => -1,\n-      Pragma_Abort_Defer                   => -1,\n-      Pragma_Ada_83                        => -1,\n-      Pragma_Ada_95                        => -1,\n-      Pragma_Ada_05                        => -1,\n-      Pragma_Ada_2005                      => -1,\n-      Pragma_Ada_12                        => -1,\n-      Pragma_Ada_2012                      => -1,\n-      Pragma_All_Calls_Remote              => -1,\n-      Pragma_Annotate                      => -1,\n-      Pragma_Assert                        => -1,\n-      Pragma_Assertion_Policy              =>  0,\n-      Pragma_Assume_No_Invalid_Values      =>  0,\n-      Pragma_Asynchronous                  => -1,\n-      Pragma_Atomic                        =>  0,\n-      Pragma_Atomic_Components             =>  0,\n-      Pragma_Attach_Handler                => -1,\n-      Pragma_Check                         => 99,\n-      Pragma_Check_Name                    =>  0,\n-      Pragma_Check_Policy                  =>  0,\n-      Pragma_CIL_Constructor               => -1,\n-      Pragma_CPP_Class                     =>  0,\n-      Pragma_CPP_Constructor               =>  0,\n-      Pragma_CPP_Virtual                   =>  0,\n-      Pragma_CPP_Vtable                    =>  0,\n-      Pragma_CPU                           => -1,\n-      Pragma_C_Pass_By_Copy                =>  0,\n-      Pragma_Comment                       =>  0,\n-      Pragma_Common_Object                 => -1,\n-      Pragma_Compile_Time_Error            => -1,\n-      Pragma_Compile_Time_Warning          => -1,\n-      Pragma_Compiler_Unit                 =>  0,\n-      Pragma_Complete_Representation       =>  0,\n-      Pragma_Complex_Representation        =>  0,\n-      Pragma_Component_Alignment           => -1,\n-      Pragma_Controlled                    =>  0,\n-      Pragma_Convention                    =>  0,\n-      Pragma_Convention_Identifier         =>  0,\n-      Pragma_Debug                         => -1,\n-      Pragma_Debug_Policy                  =>  0,\n-      Pragma_Detect_Blocking               => -1,\n-      Pragma_Default_Storage_Pool          => -1,\n-      Pragma_Dimension                     => -1,\n-      Pragma_Discard_Names                 =>  0,\n-      Pragma_Dispatching_Domain            => -1,\n-      Pragma_Elaborate                     => -1,\n-      Pragma_Elaborate_All                 => -1,\n-      Pragma_Elaborate_Body                => -1,\n-      Pragma_Elaboration_Checks            => -1,\n-      Pragma_Eliminate                     => -1,\n-      Pragma_Export                        => -1,\n-      Pragma_Export_Exception              => -1,\n-      Pragma_Export_Function               => -1,\n-      Pragma_Export_Object                 => -1,\n-      Pragma_Export_Procedure              => -1,\n-      Pragma_Export_Value                  => -1,\n-      Pragma_Export_Valued_Procedure       => -1,\n-      Pragma_Extend_System                 => -1,\n-      Pragma_Extensions_Allowed            => -1,\n-      Pragma_External                      => -1,\n-      Pragma_Favor_Top_Level               => -1,\n-      Pragma_External_Name_Casing          => -1,\n-      Pragma_Fast_Math                     => -1,\n-      Pragma_Finalize_Storage_Only         =>  0,\n-      Pragma_Float_Representation          =>  0,\n-      Pragma_Ident                         => -1,\n-      Pragma_Implementation_Defined        => -1,\n-      Pragma_Implemented                   => -1,\n-      Pragma_Implicit_Packing              =>  0,\n-      Pragma_Import                        => +2,\n-      Pragma_Import_Exception              =>  0,\n-      Pragma_Import_Function               =>  0,\n-      Pragma_Import_Object                 =>  0,\n-      Pragma_Import_Procedure              =>  0,\n-      Pragma_Import_Valued_Procedure       =>  0,\n-      Pragma_Independent                   =>  0,\n-      Pragma_Independent_Components        =>  0,\n-      Pragma_Initialize_Scalars            => -1,\n-      Pragma_Inline                        =>  0,\n-      Pragma_Inline_Always                 =>  0,\n-      Pragma_Inline_Generic                =>  0,\n-      Pragma_Inspection_Point              => -1,\n-      Pragma_Interface                     => +2,\n-      Pragma_Interface_Name                => +2,\n-      Pragma_Interrupt_Handler             => -1,\n-      Pragma_Interrupt_Priority            => -1,\n-      Pragma_Interrupt_State               => -1,\n-      Pragma_Invariant                     => -1,\n-      Pragma_Java_Constructor              => -1,\n-      Pragma_Java_Interface                => -1,\n-      Pragma_Keep_Names                    =>  0,\n-      Pragma_License                       => -1,\n-      Pragma_Link_With                     => -1,\n-      Pragma_Linker_Alias                  => -1,\n-      Pragma_Linker_Constructor            => -1,\n-      Pragma_Linker_Destructor             => -1,\n-      Pragma_Linker_Options                => -1,\n-      Pragma_Linker_Section                => -1,\n-      Pragma_List                          => -1,\n-      Pragma_Locking_Policy                => -1,\n-      Pragma_Long_Float                    => -1,\n-      Pragma_Machine_Attribute             => -1,\n-      Pragma_Main                          => -1,\n-      Pragma_Main_Storage                  => -1,\n-      Pragma_Memory_Size                   => -1,\n-      Pragma_No_Return                     =>  0,\n-      Pragma_No_Body                       =>  0,\n-      Pragma_No_Run_Time                   => -1,\n-      Pragma_No_Strict_Aliasing            => -1,\n-      Pragma_Normalize_Scalars             => -1,\n-      Pragma_Obsolescent                   =>  0,\n-      Pragma_Optimize                      => -1,\n-      Pragma_Optimize_Alignment            => -1,\n-      Pragma_Ordered                       =>  0,\n-      Pragma_Pack                          =>  0,\n-      Pragma_Page                          => -1,\n-      Pragma_Passive                       => -1,\n-      Pragma_Preelaborable_Initialization  => -1,\n-      Pragma_Polling                       => -1,\n-      Pragma_Persistent_BSS                =>  0,\n-      Pragma_Postcondition                 => -1,\n-      Pragma_Precondition                  => -1,\n-      Pragma_Predicate                     => -1,\n-      Pragma_Preelaborate                  => -1,\n-      Pragma_Preelaborate_05               => -1,\n-      Pragma_Priority                      => -1,\n-      Pragma_Priority_Specific_Dispatching => -1,\n-      Pragma_Profile                       =>  0,\n-      Pragma_Profile_Warnings              =>  0,\n-      Pragma_Propagate_Exceptions          => -1,\n-      Pragma_Psect_Object                  => -1,\n-      Pragma_Pure                          => -1,\n-      Pragma_Pure_05                       => -1,\n-      Pragma_Pure_Function                 => -1,\n-      Pragma_Queuing_Policy                => -1,\n-      Pragma_Ravenscar                     => -1,\n-      Pragma_Relative_Deadline             => -1,\n-      Pragma_Remote_Call_Interface         => -1,\n-      Pragma_Remote_Types                  => -1,\n-      Pragma_Restricted_Run_Time           => -1,\n-      Pragma_Restriction_Warnings          => -1,\n-      Pragma_Restrictions                  => -1,\n-      Pragma_Reviewable                    => -1,\n-      Pragma_Short_Circuit_And_Or          => -1,\n-      Pragma_Share_Generic                 => -1,\n-      Pragma_Shared                        => -1,\n-      Pragma_Shared_Passive                => -1,\n-      Pragma_Short_Descriptors             =>  0,\n-      Pragma_Source_File_Name              => -1,\n-      Pragma_Source_File_Name_Project      => -1,\n-      Pragma_Source_Reference              => -1,\n-      Pragma_Storage_Size                  => -1,\n-      Pragma_Storage_Unit                  => -1,\n-      Pragma_Static_Elaboration_Desired    => -1,\n-      Pragma_Stream_Convert                => -1,\n-      Pragma_Style_Checks                  => -1,\n-      Pragma_Subtitle                      => -1,\n-      Pragma_Suppress                      =>  0,\n-      Pragma_Suppress_Exception_Locations  =>  0,\n-      Pragma_Suppress_All                  => -1,\n-      Pragma_Suppress_Debug_Info           =>  0,\n-      Pragma_Suppress_Initialization       =>  0,\n-      Pragma_System_Name                   => -1,\n-      Pragma_Task_Dispatching_Policy       => -1,\n-      Pragma_Task_Info                     => -1,\n-      Pragma_Task_Name                     => -1,\n-      Pragma_Task_Storage                  =>  0,\n-      Pragma_Test_Case                     => -1,\n-      Pragma_Thread_Local_Storage          =>  0,\n-      Pragma_Time_Slice                    => -1,\n-      Pragma_Title                         => -1,\n-      Pragma_Unchecked_Union               =>  0,\n-      Pragma_Unimplemented_Unit            => -1,\n-      Pragma_Universal_Aliasing            => -1,\n-      Pragma_Universal_Data                => -1,\n-      Pragma_Unmodified                    => -1,\n-      Pragma_Unreferenced                  => -1,\n-      Pragma_Unreferenced_Objects          => -1,\n-      Pragma_Unreserve_All_Interrupts      => -1,\n-      Pragma_Unsuppress                    =>  0,\n-      Pragma_Use_VADS_Size                 => -1,\n-      Pragma_Validity_Checks               => -1,\n-      Pragma_Volatile                      =>  0,\n-      Pragma_Volatile_Components           =>  0,\n-      Pragma_Warnings                      => -1,\n-      Pragma_Weak_External                 => -1,\n-      Pragma_Wide_Character_Encoding       =>  0,\n-      Unknown_Pragma                       =>  0);\n+     (Pragma_AST_Entry                      => -1,\n+      Pragma_Abort_Defer                    => -1,\n+      Pragma_Ada_83                         => -1,\n+      Pragma_Ada_95                         => -1,\n+      Pragma_Ada_05                         => -1,\n+      Pragma_Ada_2005                       => -1,\n+      Pragma_Ada_12                         => -1,\n+      Pragma_Ada_2012                       => -1,\n+      Pragma_All_Calls_Remote               => -1,\n+      Pragma_Annotate                       => -1,\n+      Pragma_Assert                         => -1,\n+      Pragma_Assertion_Policy               =>  0,\n+      Pragma_Assume_No_Invalid_Values       =>  0,\n+      Pragma_Asynchronous                   => -1,\n+      Pragma_Atomic                         =>  0,\n+      Pragma_Atomic_Components              =>  0,\n+      Pragma_Attach_Handler                 => -1,\n+      Pragma_Check                          => 99,\n+      Pragma_Check_Name                     =>  0,\n+      Pragma_Check_Policy                   =>  0,\n+      Pragma_CIL_Constructor                => -1,\n+      Pragma_CPP_Class                      =>  0,\n+      Pragma_CPP_Constructor                =>  0,\n+      Pragma_CPP_Virtual                    =>  0,\n+      Pragma_CPP_Vtable                     =>  0,\n+      Pragma_CPU                            => -1,\n+      Pragma_C_Pass_By_Copy                 =>  0,\n+      Pragma_Comment                        =>  0,\n+      Pragma_Common_Object                  => -1,\n+      Pragma_Compile_Time_Error             => -1,\n+      Pragma_Compile_Time_Warning           => -1,\n+      Pragma_Compiler_Unit                  =>  0,\n+      Pragma_Complete_Representation        =>  0,\n+      Pragma_Complex_Representation         =>  0,\n+      Pragma_Component_Alignment            => -1,\n+      Pragma_Controlled                     =>  0,\n+      Pragma_Convention                     =>  0,\n+      Pragma_Convention_Identifier          =>  0,\n+      Pragma_Debug                          => -1,\n+      Pragma_Debug_Policy                   =>  0,\n+      Pragma_Detect_Blocking                => -1,\n+      Pragma_Default_Storage_Pool           => -1,\n+      Pragma_Dimension                      => -1,\n+      Pragma_Disable_Atomic_Synchronization => -1,\n+      Pragma_Discard_Names                  =>  0,\n+      Pragma_Dispatching_Domain             => -1,\n+      Pragma_Elaborate                      => -1,\n+      Pragma_Elaborate_All                  => -1,\n+      Pragma_Elaborate_Body                 => -1,\n+      Pragma_Elaboration_Checks             => -1,\n+      Pragma_Eliminate                      => -1,\n+      Pragma_Enable_Atomic_Synchronization  => -1,\n+      Pragma_Export                         => -1,\n+      Pragma_Export_Exception               => -1,\n+      Pragma_Export_Function                => -1,\n+      Pragma_Export_Object                  => -1,\n+      Pragma_Export_Procedure               => -1,\n+      Pragma_Export_Value                   => -1,\n+      Pragma_Export_Valued_Procedure        => -1,\n+      Pragma_Extend_System                  => -1,\n+      Pragma_Extensions_Allowed             => -1,\n+      Pragma_External                       => -1,\n+      Pragma_Favor_Top_Level                => -1,\n+      Pragma_External_Name_Casing           => -1,\n+      Pragma_Fast_Math                      => -1,\n+      Pragma_Finalize_Storage_Only          =>  0,\n+      Pragma_Float_Representation           =>  0,\n+      Pragma_Ident                          => -1,\n+      Pragma_Implementation_Defined         => -1,\n+      Pragma_Implemented                    => -1,\n+      Pragma_Implicit_Packing               =>  0,\n+      Pragma_Import                         => +2,\n+      Pragma_Import_Exception               =>  0,\n+      Pragma_Import_Function                =>  0,\n+      Pragma_Import_Object                  =>  0,\n+      Pragma_Import_Procedure               =>  0,\n+      Pragma_Import_Valued_Procedure        =>  0,\n+      Pragma_Independent                    =>  0,\n+      Pragma_Independent_Components         =>  0,\n+      Pragma_Initialize_Scalars             => -1,\n+      Pragma_Inline                         =>  0,\n+      Pragma_Inline_Always                  =>  0,\n+      Pragma_Inline_Generic                 =>  0,\n+      Pragma_Inspection_Point               => -1,\n+      Pragma_Interface                      => +2,\n+      Pragma_Interface_Name                 => +2,\n+      Pragma_Interrupt_Handler              => -1,\n+      Pragma_Interrupt_Priority             => -1,\n+      Pragma_Interrupt_State                => -1,\n+      Pragma_Invariant                      => -1,\n+      Pragma_Java_Constructor               => -1,\n+      Pragma_Java_Interface                 => -1,\n+      Pragma_Keep_Names                     =>  0,\n+      Pragma_License                        => -1,\n+      Pragma_Link_With                      => -1,\n+      Pragma_Linker_Alias                   => -1,\n+      Pragma_Linker_Constructor             => -1,\n+      Pragma_Linker_Destructor              => -1,\n+      Pragma_Linker_Options                 => -1,\n+      Pragma_Linker_Section                 => -1,\n+      Pragma_List                           => -1,\n+      Pragma_Locking_Policy                 => -1,\n+      Pragma_Long_Float                     => -1,\n+      Pragma_Machine_Attribute              => -1,\n+      Pragma_Main                           => -1,\n+      Pragma_Main_Storage                   => -1,\n+      Pragma_Memory_Size                    => -1,\n+      Pragma_No_Return                      =>  0,\n+      Pragma_No_Body                        =>  0,\n+      Pragma_No_Run_Time                    => -1,\n+      Pragma_No_Strict_Aliasing             => -1,\n+      Pragma_Normalize_Scalars              => -1,\n+      Pragma_Obsolescent                    =>  0,\n+      Pragma_Optimize                       => -1,\n+      Pragma_Optimize_Alignment             => -1,\n+      Pragma_Ordered                        =>  0,\n+      Pragma_Pack                           =>  0,\n+      Pragma_Page                           => -1,\n+      Pragma_Passive                        => -1,\n+      Pragma_Preelaborable_Initialization   => -1,\n+      Pragma_Polling                        => -1,\n+      Pragma_Persistent_BSS                 =>  0,\n+      Pragma_Postcondition                  => -1,\n+      Pragma_Precondition                   => -1,\n+      Pragma_Predicate                      => -1,\n+      Pragma_Preelaborate                   => -1,\n+      Pragma_Preelaborate_05                => -1,\n+      Pragma_Priority                       => -1,\n+      Pragma_Priority_Specific_Dispatching  => -1,\n+      Pragma_Profile                        =>  0,\n+      Pragma_Profile_Warnings               =>  0,\n+      Pragma_Propagate_Exceptions           => -1,\n+      Pragma_Psect_Object                   => -1,\n+      Pragma_Pure                           => -1,\n+      Pragma_Pure_05                        => -1,\n+      Pragma_Pure_Function                  => -1,\n+      Pragma_Queuing_Policy                 => -1,\n+      Pragma_Ravenscar                      => -1,\n+      Pragma_Relative_Deadline              => -1,\n+      Pragma_Remote_Call_Interface          => -1,\n+      Pragma_Remote_Types                   => -1,\n+      Pragma_Restricted_Run_Time            => -1,\n+      Pragma_Restriction_Warnings           => -1,\n+      Pragma_Restrictions                   => -1,\n+      Pragma_Reviewable                     => -1,\n+      Pragma_Short_Circuit_And_Or           => -1,\n+      Pragma_Share_Generic                  => -1,\n+      Pragma_Shared                         => -1,\n+      Pragma_Shared_Passive                 => -1,\n+      Pragma_Short_Descriptors              =>  0,\n+      Pragma_Source_File_Name               => -1,\n+      Pragma_Source_File_Name_Project       => -1,\n+      Pragma_Source_Reference               => -1,\n+      Pragma_Storage_Size                   => -1,\n+      Pragma_Storage_Unit                   => -1,\n+      Pragma_Static_Elaboration_Desired     => -1,\n+      Pragma_Stream_Convert                 => -1,\n+      Pragma_Style_Checks                   => -1,\n+      Pragma_Subtitle                       => -1,\n+      Pragma_Suppress                       =>  0,\n+      Pragma_Suppress_Exception_Locations   =>  0,\n+      Pragma_Suppress_All                   => -1,\n+      Pragma_Suppress_Debug_Info            =>  0,\n+      Pragma_Suppress_Initialization        =>  0,\n+      Pragma_System_Name                    => -1,\n+      Pragma_Task_Dispatching_Policy        => -1,\n+      Pragma_Task_Info                      => -1,\n+      Pragma_Task_Name                      => -1,\n+      Pragma_Task_Storage                   =>  0,\n+      Pragma_Test_Case                      => -1,\n+      Pragma_Thread_Local_Storage           =>  0,\n+      Pragma_Time_Slice                     => -1,\n+      Pragma_Title                          => -1,\n+      Pragma_Unchecked_Union                =>  0,\n+      Pragma_Unimplemented_Unit             => -1,\n+      Pragma_Universal_Aliasing             => -1,\n+      Pragma_Universal_Data                 => -1,\n+      Pragma_Unmodified                     => -1,\n+      Pragma_Unreferenced                   => -1,\n+      Pragma_Unreferenced_Objects           => -1,\n+      Pragma_Unreserve_All_Interrupts       => -1,\n+      Pragma_Unsuppress                     =>  0,\n+      Pragma_Use_VADS_Size                  => -1,\n+      Pragma_Validity_Checks                => -1,\n+      Pragma_Volatile                       =>  0,\n+      Pragma_Volatile_Components            =>  0,\n+      Pragma_Warnings                       => -1,\n+      Pragma_Weak_External                  => -1,\n+      Pragma_Wide_Character_Encoding        =>  0,\n+      Unknown_Pragma                        =>  0);\n \n    function Is_Non_Significant_Pragma_Reference (N : Node_Id) return Boolean is\n       Id : Pragma_Id;"}, {"sha": "916e0ae58437810b35d7ff97ad4f6cde9346a345", "filename": "gcc/ada/sinfo.adb", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12b4d3382209eb2c5248d8ce32b94d798acb0d0a/gcc%2Fada%2Fsinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12b4d3382209eb2c5248d8ce32b94d798acb0d0a/gcc%2Fada%2Fsinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.adb?ref=12b4d3382209eb2c5248d8ce32b94d798acb0d0a", "patch": "@@ -249,6 +249,15 @@ package body Sinfo is\n       return Node3 (N);\n    end Ancestor_Part;\n \n+   function Atomic_Sync_Required\n+      (N : Node_Id) return Boolean is\n+   begin\n+      pragma Assert (False\n+        or else NT (N).Nkind = N_Expanded_Name\n+        or else NT (N).Nkind = N_Identifier);\n+      return Flag14 (N);\n+   end Atomic_Sync_Required;\n+\n    function Array_Aggregate\n       (N : Node_Id) return Node_Id is\n    begin\n@@ -3309,6 +3318,15 @@ package body Sinfo is\n       Set_Node3_With_Parent (N, Val);\n    end Set_Ancestor_Part;\n \n+   procedure Set_Atomic_Sync_Required\n+      (N : Node_Id; Val : Boolean := True) is\n+   begin\n+      pragma Assert (False\n+        or else NT (N).Nkind = N_Expanded_Name\n+        or else NT (N).Nkind = N_Identifier);\n+      Set_Flag14 (N, Val);\n+   end Set_Atomic_Sync_Required;\n+\n    procedure Set_Array_Aggregate\n       (N : Node_Id; Val : Node_Id) is\n    begin"}, {"sha": "0b5a52f5dc7f111d34bdf4735d9f8f9b0d327da1", "filename": "gcc/ada/sinfo.ads", "status": "modified", "additions": 17, "deletions": 1, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12b4d3382209eb2c5248d8ce32b94d798acb0d0a/gcc%2Fada%2Fsinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12b4d3382209eb2c5248d8ce32b94d798acb0d0a/gcc%2Fada%2Fsinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.ads?ref=12b4d3382209eb2c5248d8ce32b94d798acb0d0a", "patch": "@@ -605,6 +605,12 @@ package Sinfo is\n    --    Since the back end is expected to ignore generic templates, this is\n    --    harmless.\n \n+   --  Atomic_Sync_Required (Flag14-Sem)\n+   --    This flag is set in an identifier or expanded name node if the\n+   --    corresponding reference (or assignment when on the left side of\n+   --    an assignment) requires atomic synchronization, as a result of\n+   --    Atomic_Synchronization being enabled for the corresponding entity.\n+\n    --  At_End_Proc (Node1)\n    --    This field is present in an N_Handled_Sequence_Of_Statements node.\n    --    It contains an identifier reference for the cleanup procedure to be\n@@ -1917,6 +1923,7 @@ package Sinfo is\n       --  Associated_Node (Node4-Sem)\n       --  Original_Discriminant (Node2-Sem)\n       --  Redundant_Use (Flag13-Sem)\n+      --  Atomic_Sync_Required (Flag14-Sem)\n       --  Has_Private_View (Flag11-Sem) (set in generic units)\n       --  plus fields for expression\n \n@@ -6982,8 +6989,9 @@ package Sinfo is\n       --  Selector_Name (Node2)\n       --  Entity (Node4-Sem)\n       --  Associated_Node (Node4-Sem)\n-      --  Redundant_Use (Flag13-Sem)\n       --  Has_Private_View (Flag11-Sem) set in generic units.\n+      --  Redundant_Use (Flag13-Sem)\n+      --  Atomic_Sync_Required (Flag14-Sem)\n       --  plus fields for expression\n \n       -----------------------------\n@@ -8121,6 +8129,9 @@ package Sinfo is\n    function Ancestor_Part\n      (N : Node_Id) return Node_Id;    -- Node3\n \n+   function Atomic_Sync_Required\n+     (N : Node_Id) return Boolean;    -- Flag14\n+\n    function Array_Aggregate\n      (N : Node_Id) return Node_Id;    -- Node3\n \n@@ -9096,6 +9107,9 @@ package Sinfo is\n    procedure Set_Ancestor_Part\n      (N : Node_Id; Val : Node_Id);            -- Node3\n \n+   procedure Set_Atomic_Sync_Required\n+     (N : Node_Id; Val : Boolean := True);    -- Flag14\n+\n    procedure Set_Array_Aggregate\n      (N : Node_Id; Val : Node_Id);            -- Node3\n \n@@ -11764,6 +11778,7 @@ package Sinfo is\n    pragma Inline (All_Present);\n    pragma Inline (Alternatives);\n    pragma Inline (Ancestor_Part);\n+   pragma Inline (Atomic_Sync_Required);\n    pragma Inline (Array_Aggregate);\n    pragma Inline (Aspect_Rep_Item);\n    pragma Inline (Assignment_OK);\n@@ -12086,6 +12101,7 @@ package Sinfo is\n    pragma Inline (Set_All_Present);\n    pragma Inline (Set_Alternatives);\n    pragma Inline (Set_Ancestor_Part);\n+   pragma Inline (Set_Atomic_Sync_Required);\n    pragma Inline (Set_Array_Aggregate);\n    pragma Inline (Set_Aspect_Rep_Item);\n    pragma Inline (Set_Assignment_OK);"}, {"sha": "3ed2a668e00d759fbee6715a47dcac8fc2010d42", "filename": "gcc/ada/snames.ads-tmpl", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12b4d3382209eb2c5248d8ce32b94d798acb0d0a/gcc%2Fada%2Fsnames.ads-tmpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12b4d3382209eb2c5248d8ce32b94d798acb0d0a/gcc%2Fada%2Fsnames.ads-tmpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsnames.ads-tmpl?ref=12b4d3382209eb2c5248d8ce32b94d798acb0d0a", "patch": "@@ -361,10 +361,12 @@ package Snames is\n    Name_Debug_Policy                   : constant Name_Id := N + $; -- GNAT\n    Name_Detect_Blocking                : constant Name_Id := N + $; -- Ada 05\n    Name_Default_Storage_Pool           : constant Name_Id := N + $; -- Ada 12\n+   Name_Disable_Atomic_Synchronization : constant Name_Id := N + $; -- GNAT\n    Name_Discard_Names                  : constant Name_Id := N + $;\n    Name_Dispatching_Domain             : constant Name_Id := N + $; -- Ada 12\n    Name_Elaboration_Checks             : constant Name_Id := N + $; -- GNAT\n    Name_Eliminate                      : constant Name_Id := N + $; -- GNAT\n+   Name_Enable_Atomic_Synchronization  : constant Name_Id := N + $; -- GNAT\n    Name_Extend_System                  : constant Name_Id := N + $; -- GNAT\n    Name_Extensions_Allowed             : constant Name_Id := N + $; -- GNAT\n    Name_External_Name_Casing           : constant Name_Id := N + $; -- GNAT\n@@ -941,10 +943,14 @@ package Snames is\n \n    --  Names of recognized checks for pragma Suppress\n \n+   --  Note: the name Atomic_Synchronization can only be specified internally\n+   --  as a result of using pragma Enable/Disable_Atomic_Synchronization.\n+\n    First_Check_Name                    : constant Name_Id := N + $;\n    Name_Access_Check                   : constant Name_Id := N + $;\n    Name_Accessibility_Check            : constant Name_Id := N + $;\n    Name_Alignment_Check                : constant Name_Id := N + $; -- GNAT\n+   Name_Atomic_Synchronization         : constant Name_Id := N + $; -- GNAT\n    Name_Discriminant_Check             : constant Name_Id := N + $;\n    Name_Division_Check                 : constant Name_Id := N + $;\n    Name_Elaboration_Check              : constant Name_Id := N + $;\n@@ -1532,10 +1538,12 @@ package Snames is\n       Pragma_Debug_Policy,\n       Pragma_Detect_Blocking,\n       Pragma_Default_Storage_Pool,\n+      Pragma_Disable_Atomic_Synchronization,\n       Pragma_Discard_Names,\n       Pragma_Dispatching_Domain,\n       Pragma_Elaboration_Checks,\n       Pragma_Eliminate,\n+      Pragma_Enable_Atomic_Synchronization,\n       Pragma_Extend_System,\n       Pragma_Extensions_Allowed,\n       Pragma_External_Name_Casing,"}, {"sha": "e900faa4bd26ca91e62477b26ef34339a8822d05", "filename": "gcc/ada/switch-c.adb", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12b4d3382209eb2c5248d8ce32b94d798acb0d0a/gcc%2Fada%2Fswitch-c.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12b4d3382209eb2c5248d8ce32b94d798acb0d0a/gcc%2Fada%2Fswitch-c.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fswitch-c.adb?ref=12b4d3382209eb2c5248d8ce32b94d798acb0d0a", "patch": "@@ -440,6 +440,11 @@ package body Switch.C is\n                   --     Ptr := Ptr + 1;\n                   --     Generate_SCIL := True;\n \n+                  --  -gnated switch (disable atomic synchronization)\n+\n+                  when 'd' =>\n+                     Suppress_Options (Atomic_Synchronization) := True;\n+\n                   --  -gnateD switch (preprocessing symbol definition)\n \n                   when 'D' =>\n@@ -743,10 +748,14 @@ package body Switch.C is\n                   --  Set all specific options as well as All_Checks in the\n                   --  Suppress_Options array, excluding Elaboration_Check,\n                   --  since this is treated specially because we do not want\n-                  --  -gnatp to disable static elaboration processing.\n+                  --  -gnatp to disable static elaboration processing. Also\n+                  --  exclude Atomic_Synchronization, since this is not a real\n+                  --  check.\n \n                   for J in Suppress_Options'Range loop\n-                     if J /= Elaboration_Check then\n+                     if J /= Elaboration_Check\n+                       and then J /= Atomic_Synchronization\n+                     then\n                         Suppress_Options (J) := True;\n                      end if;\n                   end loop;"}, {"sha": "05d3dbe1b9d8079716efaf812ca7349ef83755a3", "filename": "gcc/ada/types.ads", "status": "modified", "additions": 19, "deletions": 16, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12b4d3382209eb2c5248d8ce32b94d798acb0d0a/gcc%2Fada%2Ftypes.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12b4d3382209eb2c5248d8ce32b94d798acb0d0a/gcc%2Fada%2Ftypes.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftypes.ads?ref=12b4d3382209eb2c5248d8ce32b94d798acb0d0a", "patch": "@@ -660,22 +660,25 @@ package Types is\n    No_Check_Id         : constant := 0;\n    --  Check_Id value used to indicate no check\n \n-   Access_Check        : constant :=  1;\n-   Accessibility_Check : constant :=  2;\n-   Alignment_Check     : constant :=  3;\n-   Discriminant_Check  : constant :=  4;\n-   Division_Check      : constant :=  5;\n-   Elaboration_Check   : constant :=  6;\n-   Index_Check         : constant :=  7;\n-   Length_Check        : constant :=  8;\n-   Overflow_Check      : constant :=  9;\n-   Range_Check         : constant := 10;\n-   Storage_Check       : constant := 11;\n-   Tag_Check           : constant := 12;\n-   Validity_Check      : constant := 13;\n-   --  Values used to represent individual predefined checks\n-\n-   All_Checks          : constant := 14;\n+   Access_Check           : constant :=  1;\n+   Accessibility_Check    : constant :=  2;\n+   Alignment_Check        : constant :=  3;\n+   Atomic_Synchronization : constant :=  4;\n+   Discriminant_Check     : constant :=  5;\n+   Division_Check         : constant :=  6;\n+   Elaboration_Check      : constant :=  7;\n+   Index_Check            : constant :=  8;\n+   Length_Check           : constant :=  9;\n+   Overflow_Check         : constant := 10;\n+   Range_Check            : constant := 11;\n+   Storage_Check          : constant := 12;\n+   Tag_Check              : constant := 13;\n+   Validity_Check         : constant := 14;\n+   --  Values used to represent individual predefined checks (including the\n+   --  setting of Atomic_Synchronization, which is implemented internally using\n+   --  a \"check\" whose name is Atomic_Synchronization.\n+\n+   All_Checks : constant := 15;\n    --  Value used to represent All_Checks value\n \n    subtype Predefined_Check_Id is Check_Id range 1 .. All_Checks;"}, {"sha": "2c20136af7ec885e046d352f8f1639a8bac67be8", "filename": "gcc/ada/usage.adb", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12b4d3382209eb2c5248d8ce32b94d798acb0d0a/gcc%2Fada%2Fusage.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12b4d3382209eb2c5248d8ce32b94d798acb0d0a/gcc%2Fada%2Fusage.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fusage.adb?ref=12b4d3382209eb2c5248d8ce32b94d798acb0d0a", "patch": "@@ -172,6 +172,11 @@ begin\n    Write_Switch_Char (\"ec=?\");\n    Write_Line (\"Specify configuration pragmas file, e.g. -gnatec=/x/f.adc\");\n \n+   --  Line for -gnated switch\n+\n+   Write_Switch_Char (\"ed\");\n+   Write_Line (\"Disable synchronization of atomic variables\");\n+\n    --  Line for -gnateD switch\n \n    Write_Switch_Char (\"eD?\");"}, {"sha": "703ce0c257edb49842425b8a6b2ecca095bcbf16", "filename": "gcc/ada/warnsw.adb", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12b4d3382209eb2c5248d8ce32b94d798acb0d0a/gcc%2Fada%2Fwarnsw.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12b4d3382209eb2c5248d8ce32b94d798acb0d0a/gcc%2Fada%2Fwarnsw.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fwarnsw.adb?ref=12b4d3382209eb2c5248d8ce32b94d798acb0d0a", "patch": "@@ -67,6 +67,7 @@ package body Warnsw is\n             Warn_On_All_Unread_Out_Parameters   := True;\n             Warn_On_Assertion_Failure           := True;\n             Warn_On_Assumed_Low_Bound           := True;\n+            Warn_On_Atomic_Synchronization      := True;\n             Warn_On_Bad_Fixed_Value             := True;\n             Warn_On_Biased_Representation       := True;\n             Warn_On_Constant                    := True;\n@@ -120,6 +121,12 @@ package body Warnsw is\n          when 'M' =>\n             Warn_On_Suspicious_Modulus_Value    := False;\n \n+         when 'n' =>\n+            Warn_On_Atomic_Synchronization      := True;\n+\n+         when 'N' =>\n+            Warn_On_Atomic_Synchronization      := False;\n+\n          when 'o' =>\n             Warn_On_All_Unread_Out_Parameters   := True;\n \n@@ -202,6 +209,7 @@ package body Warnsw is\n       Warn_On_All_Unread_Out_Parameters   := False;\n       Warn_On_Assertion_Failure           := True;\n       Warn_On_Assumed_Low_Bound           := True;\n+      Warn_On_Atomic_Synchronization      := False;\n       Warn_On_Bad_Fixed_Value             := True;\n       Warn_On_Biased_Representation       := True;\n       Warn_On_Constant                    := True;"}]}