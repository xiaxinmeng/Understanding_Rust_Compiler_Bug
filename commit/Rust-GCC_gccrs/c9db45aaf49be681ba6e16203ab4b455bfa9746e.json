{"sha": "c9db45aaf49be681ba6e16203ab4b455bfa9746e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzlkYjQ1YWFmNDliZTY4MWJhNmUxNjIwM2FiNGI0NTViZmE5NzQ2ZQ==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2014-12-11T08:20:24Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2014-12-11T08:20:24Z"}, "message": "diagnostic.c (get_terminal_width): Renamed from\n\n2014-12-11  Tobias Burnus  <burnus@net-b.de>\n            Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n\ngcc/\n        * diagnostic.c (get_terminal_width): Renamed from\n        * getenv_columns,\n        removed static, and additionally use ioctl to get width.\n        (diagnostic_set_caret_max_width): Update call.\n        * diagnostic.h (get_terminal_width): Add prototype.\n        * opts.c (print_specific_help): Use it for x_help_columns.\n        * doc/invoke.texi (fdiagnostics-show-caret): Document how the\n        width is set.\n\ngcc/fortran/\n        * error.c (gfc_get_terminal_width): Renamed from\n        get_terminal_width and use same-named common function.\n        (gfc_error_init_1): Update call.\n\n\nCo-Authored-By: Manuel L\u00f3pez-Ib\u00e1\u00f1ez <manu@gcc.gnu.org>\n\nFrom-SVN: r218619", "tree": {"sha": "e31e886ed230649c1e858eb51f469565c87e1754", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e31e886ed230649c1e858eb51f469565c87e1754"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c9db45aaf49be681ba6e16203ab4b455bfa9746e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9db45aaf49be681ba6e16203ab4b455bfa9746e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c9db45aaf49be681ba6e16203ab4b455bfa9746e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9db45aaf49be681ba6e16203ab4b455bfa9746e/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "01ca36af914385acfc864adfae6923768581888a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01ca36af914385acfc864adfae6923768581888a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/01ca36af914385acfc864adfae6923768581888a"}], "stats": {"total": 102, "additions": 50, "deletions": 52}, "files": [{"sha": "fae08cb7ace2669606c30f73a44a5931ed1228d4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9db45aaf49be681ba6e16203ab4b455bfa9746e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9db45aaf49be681ba6e16203ab4b455bfa9746e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c9db45aaf49be681ba6e16203ab4b455bfa9746e", "patch": "@@ -1,3 +1,10 @@\n+2014-12-11  Tobias Burnus  <burnus@net-b.de>\n+\t    Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n+\n+\t* error.c (gfc_get_terminal_width): Renamed from\n+\tget_terminal_width and use same-named common function.\n+\t(gfc_error_init_1): Update call.\n+\n 2014-12-10  Ulrich Drepper  <drepper@gmail.com>\n \n \tMinor interface cleanups of libgccjit"}, {"sha": "2c2477f2488575429a98c285a3fcb69d98953905", "filename": "gcc/diagnostic.c", "status": "modified", "additions": 21, "deletions": 4, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9db45aaf49be681ba6e16203ab4b455bfa9746e/gcc%2Fdiagnostic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9db45aaf49be681ba6e16203ab4b455bfa9746e/gcc%2Fdiagnostic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdiagnostic.c?ref=c9db45aaf49be681ba6e16203ab4b455bfa9746e", "patch": "@@ -33,6 +33,14 @@ along with GCC; see the file COPYING3.  If not see\n #include \"diagnostic.h\"\n #include \"diagnostic-color.h\"\n \n+#ifdef HAVE_TERMIOS_H\n+# include <termios.h>\n+#endif\n+\n+#ifdef GWINSZ_IN_SYS_IOCTL\n+# include <sys/ioctl.h>\n+#endif\n+\n #include <new>                     // For placement new.\n \n #define pedantic_warning_kind(DC)\t\t\t\\\n@@ -83,16 +91,25 @@ file_name_as_prefix (diagnostic_context *context, const char *f)\n \n \f\n /* Return the value of the getenv(\"COLUMNS\") as an integer. If the\n-   value is not set to a positive integer, then return INT_MAX.  */\n-static int\n-getenv_columns (void)\n+   value is not set to a positive integer, use ioctl to get the\n+   terminal width. If it fails, return INT_MAX.  */\n+int\n+get_terminal_width (void)\n {\n   const char * s = getenv (\"COLUMNS\");\n   if (s != NULL) {\n     int n = atoi (s);\n     if (n > 0)\n       return n;\n   }\n+\n+#ifdef TIOCGWINSZ\n+  struct winsize w;\n+  w.ws_col = 0;\n+  if (ioctl (0, TIOCGWINSZ, &w) == 0 && w.ws_col > 0)\n+    return w.ws_col;\n+#endif\n+\n   return INT_MAX;\n }\n \n@@ -103,7 +120,7 @@ diagnostic_set_caret_max_width (diagnostic_context *context, int value)\n   /* One minus to account for the leading empty space.  */\n   value = value ? value - 1 \n     : (isatty (fileno (pp_buffer (context->printer)->stream))\n-       ? getenv_columns () - 1: INT_MAX);\n+       ? get_terminal_width () - 1: INT_MAX);\n   \n   if (value <= 0) \n     value = INT_MAX;"}, {"sha": "0c65deb947f81ecc6cae2ddc081f6cbcf185391a", "filename": "gcc/diagnostic.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9db45aaf49be681ba6e16203ab4b455bfa9746e/gcc%2Fdiagnostic.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9db45aaf49be681ba6e16203ab4b455bfa9746e/gcc%2Fdiagnostic.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdiagnostic.h?ref=c9db45aaf49be681ba6e16203ab4b455bfa9746e", "patch": "@@ -297,6 +297,8 @@ void diagnostic_set_caret_max_width (diagnostic_context *context, int value);\n \n void diagnostic_file_cache_fini (void);\n \n+int get_terminal_width (void);\n+\n /* Expand the location of this diagnostic. Use this function for consistency. */\n \n static inline expanded_location"}, {"sha": "eb9a64dc9baaaa3cc1554f89766dbc76305a15bd", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9db45aaf49be681ba6e16203ab4b455bfa9746e/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9db45aaf49be681ba6e16203ab4b455bfa9746e/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=c9db45aaf49be681ba6e16203ab4b455bfa9746e", "patch": "@@ -3188,7 +3188,10 @@ option is known to the diagnostic machinery).  Specifying the\n @opindex fdiagnostics-show-caret\n By default, each diagnostic emitted includes the original source line\n and a caret '^' indicating the column.  This option suppresses this\n-information.\n+information.  The source line is truncated to @var{n} characters, if\n+the @option{-fmessage-length=n} is given.  When the output is done\n+to the terminal, the width is limited to the width given by the\n+@env{COLUMNS} environment variable or, if not set, to the terminal width.\n \n @end table\n "}, {"sha": "8534a453ab1122f29d4f96a7345bea6522659371", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9db45aaf49be681ba6e16203ab4b455bfa9746e/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9db45aaf49be681ba6e16203ab4b455bfa9746e/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=c9db45aaf49be681ba6e16203ab4b455bfa9746e", "patch": "@@ -1,3 +1,14 @@\n+2014-12-11  Tobias Burnus  <burnus@net-b.de>\n+\t    Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n+\n+\t* diagnostic.c (get_terminal_width): Renamed from getenv_columns,\n+\tremoved static, and additionally use ioctl to get width.\n+\t(diagnostic_set_caret_max_width): Update call.\n+\t* diagnostic.h (get_terminal_width): Add prototype.\n+\t* opts.c (print_specific_help): Use it for x_help_columns.\n+\t* doc/invoke.texi (fdiagnostics-show-caret): Document how the\n+\twidth is set.\n+\n 2014-12-10  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n \n \tPR fortran/60718"}, {"sha": "851ba90ab107a7b9de90843cf26ed3e69bf3546e", "filename": "gcc/fortran/error.c", "status": "modified", "additions": 3, "deletions": 35, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9db45aaf49be681ba6e16203ab4b455bfa9746e/gcc%2Ffortran%2Ferror.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9db45aaf49be681ba6e16203ab4b455bfa9746e/gcc%2Ffortran%2Ferror.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ferror.c?ref=c9db45aaf49be681ba6e16203ab4b455bfa9746e", "patch": "@@ -30,14 +30,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"flags.h\"\n #include \"gfortran.h\"\n \n-#ifdef HAVE_TERMIOS_H\n-# include <termios.h>\n-#endif\n-\n-#ifdef GWINSZ_IN_SYS_IOCTL\n-# include <sys/ioctl.h>\n-#endif\n-\n #include \"diagnostic.h\"\n #include \"diagnostic-color.h\"\n #include \"tree-diagnostic.h\" /* tree_diagnostics_defaults */\n@@ -83,33 +75,9 @@ gfc_pop_suppress_errors (void)\n /* Determine terminal width (for trimming source lines in output).  */\n \n static int\n-get_terminal_width (void)\n+gfc_get_terminal_width (void)\n {\n-  /* Only limit the width if we're outputting to a terminal.  */\n-#ifdef HAVE_UNISTD_H\n-  if (!isatty (STDERR_FILENO))\n-    return INT_MAX;\n-#endif\n-  \n-  /* Method #1: Use ioctl (not available on all systems).  */\n-#ifdef TIOCGWINSZ\n-  struct winsize w;\n-  w.ws_col = 0;\n-  if (ioctl (0, TIOCGWINSZ, &w) == 0 && w.ws_col > 0)\n-    return w.ws_col;\n-#endif\n-\n-  /* Method #2: Query environment variable $COLUMNS.  */\n-  const char *p = getenv (\"COLUMNS\");\n-  if (p)\n-    {\n-      int value = atoi (p);\n-      if (value > 0)\n-\treturn value;\n-    }\n-\n-  /* If both fail, use reasonable default.  */\n-  return 80;\n+  return isatty (STDERR_FILENO) ? get_terminal_width () : INT_MAX;\n }\n \n \n@@ -118,7 +86,7 @@ get_terminal_width (void)\n void\n gfc_error_init_1 (void)\n {\n-  terminal_width = get_terminal_width ();\n+  terminal_width = gfc_get_terminal_width ();\n   errors = 0;\n   warnings = 0;\n   gfc_buffer_error (false);"}, {"sha": "34a42a57dddf4286ea6664724618093f8b3a3b59", "filename": "gcc/opts.c", "status": "modified", "additions": 2, "deletions": 12, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9db45aaf49be681ba6e16203ab4b455bfa9746e/gcc%2Fopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9db45aaf49be681ba6e16203ab4b455bfa9746e/gcc%2Fopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts.c?ref=c9db45aaf49be681ba6e16203ab4b455bfa9746e", "patch": "@@ -1231,18 +1231,8 @@ print_specific_help (unsigned int include_flags,\n      the desired maximum width of the output.  */\n   if (opts->x_help_columns == 0)\n     {\n-      const char *p;\n-\n-      p = getenv (\"COLUMNS\");\n-      if (p != NULL)\n-\t{\n-\t  int value = atoi (p);\n-\n-\t  if (value > 0)\n-\t    opts->x_help_columns = value;\n-\t}\n-\n-      if (opts->x_help_columns == 0)\n+      opts->x_help_columns = get_terminal_width ();\n+      if (opts->x_help_columns == INT_MAX)\n \t/* Use a reasonable default.  */\n \topts->x_help_columns = 80;\n     }"}]}