{"sha": "6ab94513d51351c9aff8542a1ac8b40fe273fe41", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmFiOTQ1MTNkNTEzNTFjOWFmZjg1NDJhMWFjOGI0MGZlMjczZmU0MQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2010-01-01T11:27:50Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2010-01-01T11:27:50Z"}, "message": "2010-01-01  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tRevert last change, reinstantiate basic_string and vstring tests.\n\nFrom-SVN: r155547", "tree": {"sha": "31210af145c0db938b5bbc5470149bec98bd5283", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/31210af145c0db938b5bbc5470149bec98bd5283"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6ab94513d51351c9aff8542a1ac8b40fe273fe41", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ab94513d51351c9aff8542a1ac8b40fe273fe41", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6ab94513d51351c9aff8542a1ac8b40fe273fe41", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ab94513d51351c9aff8542a1ac8b40fe273fe41/comments", "author": null, "committer": null, "parents": [{"sha": "c2744d090c494a09ee44df504f6e4f1d2a8915bf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c2744d090c494a09ee44df504f6e4f1d2a8915bf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c2744d090c494a09ee44df504f6e4f1d2a8915bf"}], "stats": {"total": 303, "additions": 303, "deletions": 0}, "files": [{"sha": "289cf74deac63f09850855418c47741c2a2b4706", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ab94513d51351c9aff8542a1ac8b40fe273fe41/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ab94513d51351c9aff8542a1ac8b40fe273fe41/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=6ab94513d51351c9aff8542a1ac8b40fe273fe41", "patch": "@@ -1,3 +1,7 @@\n+2010-01-01  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tRevert last change, reinstantiate basic_string and vstring tests.\n+\n 2010-01-01  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* testsuite/21_strings/basic_string/requirements/exception/"}, {"sha": "1f6b970d2bfcc44beec5a85a493bb3d1fecd72e2", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/requirements/exception/basic.cc", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ab94513d51351c9aff8542a1ac8b40fe273fe41/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Frequirements%2Fexception%2Fbasic.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ab94513d51351c9aff8542a1ac8b40fe273fe41/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Frequirements%2Fexception%2Fbasic.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Frequirements%2Fexception%2Fbasic.cc?ref=6ab94513d51351c9aff8542a1ac8b40fe273fe41", "patch": "@@ -0,0 +1,41 @@\n+// { dg-options \"-std=gnu++0x\" }\n+// { dg-require-cstdint \"\" }\n+\n+// 2009-11-10  Benjamin Kosnik  <benjamin@redhat.com>\n+\n+// Copyright (C) 2009 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <string>\n+#include <exception/safety.h>\n+\n+void\n+value()\n+{\n+  typedef __gnu_cxx::throw_value_limit value_type;\n+  typedef __gnu_cxx::throw_allocator_limit<value_type> allocator_type;\n+  typedef std::char_traits<value_type> traits_type;\n+  typedef std::basic_string<value_type, traits_type, allocator_type> test_type;\n+  __gnu_test::basic_safety<test_type> test;\n+}\n+\n+// Container requirement testing, exceptional behavior\n+int main()\n+{\n+  value();\n+  return 0;\n+}"}, {"sha": "211d7c21d89ede630472cd990d23e0f2d6b5d8b5", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/requirements/exception/generation_prohibited.cc", "status": "added", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ab94513d51351c9aff8542a1ac8b40fe273fe41/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Frequirements%2Fexception%2Fgeneration_prohibited.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ab94513d51351c9aff8542a1ac8b40fe273fe41/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Frequirements%2Fexception%2Fgeneration_prohibited.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Frequirements%2Fexception%2Fgeneration_prohibited.cc?ref=6ab94513d51351c9aff8542a1ac8b40fe273fe41", "patch": "@@ -0,0 +1,54 @@\n+// { dg-options \"-std=gnu++0x\" }\n+// { dg-require-cstdint \"\" }\n+\n+// 2009-09-14  Benjamin Kosnik  <benjamin@redhat.com>\n+\n+// Copyright (C) 2009 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <string>\n+#include <exception/safety.h>\n+\n+void\n+char_allocator()\n+{\n+  typedef char value_type;\n+  typedef __gnu_cxx::throw_allocator_random<value_type> allocator_type;\n+  typedef std::char_traits<value_type> traits_type;\n+  typedef std::basic_string<value_type, traits_type, allocator_type> test_type;\n+  __gnu_test::generation_prohibited<test_type> test;\n+}\n+\n+void\n+wchar_allocator()\n+{\n+  typedef wchar_t value_type;\n+  typedef __gnu_cxx::throw_allocator_random<value_type> allocator_type;\n+  typedef std::char_traits<value_type> traits_type;\n+  typedef std::basic_string<value_type, traits_type, allocator_type> test_type;\n+  __gnu_test::generation_prohibited<test_type> test;\n+}\n+\n+// Container requirement testing, exceptional behavior\n+int main()\n+{\n+  // throw_allocator\n+  char_allocator();\n+  wchar_allocator();\n+\n+  return 0;\n+}"}, {"sha": "8e27a919ce136d513a6e86a7df1af5bf769c8207", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/requirements/exception/propagation_consistent.cc", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ab94513d51351c9aff8542a1ac8b40fe273fe41/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Frequirements%2Fexception%2Fpropagation_consistent.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ab94513d51351c9aff8542a1ac8b40fe273fe41/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Frequirements%2Fexception%2Fpropagation_consistent.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Frequirements%2Fexception%2Fpropagation_consistent.cc?ref=6ab94513d51351c9aff8542a1ac8b40fe273fe41", "patch": "@@ -0,0 +1,42 @@\n+// { dg-options \"-std=gnu++0x\" }\n+// { dg-require-cstdint \"\" }\n+// { dg-do run { xfail *-*-* } }\n+\n+// 2009-09-14  Benjamin Kosnik  <benjamin@redhat.com>\n+\n+// Copyright (C) 2009 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <string>\n+#include <exception/safety.h>\n+\n+void\n+value()\n+{\n+  typedef __gnu_cxx::throw_value_limit value_type;\n+  typedef __gnu_cxx::throw_allocator_limit<value_type> allocator_type;\n+  typedef std::char_traits<value_type> traits_type;\n+  typedef std::basic_string<value_type, traits_type, allocator_type> test_type;\n+  __gnu_test::propagation_consistent<test_type> test;\n+}\n+\n+// Container requirement testing, exceptional behavior\n+int main()\n+{\n+  value();\n+  return 0;\n+}"}, {"sha": "a0042d488265e34ce828349fb630c45231000c69", "filename": "libstdc++-v3/testsuite/ext/vstring/requirements/exception/basic.cc", "status": "added", "additions": 55, "deletions": 0, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ab94513d51351c9aff8542a1ac8b40fe273fe41/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fvstring%2Frequirements%2Fexception%2Fbasic.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ab94513d51351c9aff8542a1ac8b40fe273fe41/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fvstring%2Frequirements%2Fexception%2Fbasic.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fvstring%2Frequirements%2Fexception%2Fbasic.cc?ref=6ab94513d51351c9aff8542a1ac8b40fe273fe41", "patch": "@@ -0,0 +1,55 @@\n+// { dg-options \"-std=gnu++0x\" }\n+// { dg-require-cstdint \"\" }\n+\n+// 2009-11-10  Benjamin Kosnik  <benjamin@redhat.com>\n+\n+// Copyright (C) 2009 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <ext/vstring.h>\n+#include <exception/safety.h>\n+\n+void\n+value()\n+{\n+#if 1\n+  typedef char value_type;\n+#else\n+  // XXX\n+  // __gnu_cxx::__rc_string_base<>::_Rep::_M_align\u2019 with constructor\n+  // not allowed in union\n+  // typedef __gnu_cxx::throw_value_limit value_type;\n+#endif\n+  typedef __gnu_cxx::throw_allocator_limit<value_type> allocator_type;\n+  typedef std::char_traits<value_type> traits_type;\n+\n+  typedef __gnu_cxx::__versa_string<value_type, traits_type,\n+    allocator_type, __gnu_cxx::__rc_string_base> test_type_rc;\n+\n+  typedef __gnu_cxx::__versa_string<value_type, traits_type,\n+    allocator_type, __gnu_cxx::__sso_string_base> test_type_sso;\n+\n+  __gnu_test::basic_safety<test_type_rc> test_rc;\n+  __gnu_test::basic_safety<test_type_sso> test_sso;\n+}\n+\n+// Container requirement testing, exceptional behavior\n+int main()\n+{\n+  value();\n+  return 0;\n+}"}, {"sha": "4ffe0df3bc4a32b8809934f6a0167aa4d33f9cd7", "filename": "libstdc++-v3/testsuite/ext/vstring/requirements/exception/generation_prohibited.cc", "status": "added", "additions": 52, "deletions": 0, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ab94513d51351c9aff8542a1ac8b40fe273fe41/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fvstring%2Frequirements%2Fexception%2Fgeneration_prohibited.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ab94513d51351c9aff8542a1ac8b40fe273fe41/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fvstring%2Frequirements%2Fexception%2Fgeneration_prohibited.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fvstring%2Frequirements%2Fexception%2Fgeneration_prohibited.cc?ref=6ab94513d51351c9aff8542a1ac8b40fe273fe41", "patch": "@@ -0,0 +1,52 @@\n+// { dg-options \"-std=gnu++0x\" }\n+// { dg-require-cstdint \"\" }\n+\n+// 2009-09-14  Benjamin Kosnik  <benjamin@redhat.com>\n+\n+// Copyright (C) 2009 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <ext/vstring.h>\n+#include <exception/safety.h>\n+\n+void\n+char_instance()\n+{\n+  typedef char value_type;\n+  typedef __gnu_cxx::throw_allocator_random<value_type> allocator_type;\n+  typedef std::char_traits<value_type> traits_type;\n+  typedef __gnu_cxx::__versa_string<value_type, traits_type, allocator_type> test_type;\n+  __gnu_test::generation_prohibited<test_type> test;\n+}\n+\n+void\n+wchar_instance()\n+{\n+  typedef wchar_t value_type;\n+  typedef __gnu_cxx::throw_allocator_random<value_type> allocator_type;\n+  typedef std::char_traits<value_type> traits_type;\n+  typedef __gnu_cxx::__versa_string<value_type, traits_type, allocator_type> test_type;\n+  __gnu_test::generation_prohibited<test_type> test;\n+}\n+\n+// Container requirement testing, exceptional behavior\n+int main()\n+{\n+  char_instance();\n+  wchar_instance();\n+  return 0;\n+}"}, {"sha": "09d8618ab80cc291baa924779cb1a3805871fad4", "filename": "libstdc++-v3/testsuite/ext/vstring/requirements/exception/propagation_consistent.cc", "status": "added", "additions": 55, "deletions": 0, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ab94513d51351c9aff8542a1ac8b40fe273fe41/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fvstring%2Frequirements%2Fexception%2Fpropagation_consistent.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ab94513d51351c9aff8542a1ac8b40fe273fe41/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fvstring%2Frequirements%2Fexception%2Fpropagation_consistent.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fvstring%2Frequirements%2Fexception%2Fpropagation_consistent.cc?ref=6ab94513d51351c9aff8542a1ac8b40fe273fe41", "patch": "@@ -0,0 +1,55 @@\n+// { dg-options \"-std=gnu++0x\" }\n+// { dg-require-cstdint \"\" }\n+\n+// 2009-09-14  Benjamin Kosnik  <benjamin@redhat.com>\n+\n+// Copyright (C) 2009 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <ext/vstring.h>\n+#include <exception/safety.h>\n+\n+void\n+value()\n+{\n+#if 1\n+  typedef char value_type;\n+#else\n+  // XXX\n+  // __gnu_cxx::__rc_string_base<>::_Rep::_M_align\u2019 with constructor\n+  // not allowed in union\n+  // typedef __gnu_cxx::throw_value_limit value_type;\n+#endif\n+  typedef __gnu_cxx::throw_allocator_limit<value_type> allocator_type;\n+  typedef std::char_traits<value_type> traits_type;\n+\n+  typedef __gnu_cxx::__versa_string<value_type, traits_type,\n+    allocator_type, __gnu_cxx::__rc_string_base> test_type_rc;\n+\n+  typedef __gnu_cxx::__versa_string<value_type, traits_type,\n+    allocator_type, __gnu_cxx::__sso_string_base> test_type_sso;\n+\n+  __gnu_test::propagation_consistent<test_type_rc> test_rc;\n+  __gnu_test::propagation_consistent<test_type_sso> test_sso;\n+}\n+\n+// Container requirement testing, exceptional behavior\n+int main()\n+{\n+  value();\n+  return 0;\n+}"}]}