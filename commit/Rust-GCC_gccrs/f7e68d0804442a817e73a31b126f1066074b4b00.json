{"sha": "f7e68d0804442a817e73a31b126f1066074b4b00", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjdlNjhkMDgwNDQ0MmE4MTdlNzNhMzFiMTI2ZjEwNjYwNzRiNGIwMA==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2014-03-18T16:31:38Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2014-03-18T16:31:38Z"}, "message": "re PR libstdc++/60564 ([C++11] The std::packaged_task constructor taking a reference to a functor does not copy its argument.)\n\n\tPR libstdc++/60564\n\t* include/std/future (__future_base::_Task_state<>): Change\n\tconstructors to template functions using perfect forwarding.\n\t(__create_task_state): Use decayed type as stored task.\n\t(packaged_task::packaged_task(_Fn&&)): Forward instead of moving.\n\t* testsuite/30_threads/packaged_task/60564.cc: New.\n\nFrom-SVN: r208656", "tree": {"sha": "1502ae58f7fe7b92cca55605094fc4b370ec2b03", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1502ae58f7fe7b92cca55605094fc4b370ec2b03"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f7e68d0804442a817e73a31b126f1066074b4b00", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f7e68d0804442a817e73a31b126f1066074b4b00", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f7e68d0804442a817e73a31b126f1066074b4b00", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f7e68d0804442a817e73a31b126f1066074b4b00/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eb14a79f3588e22985d793cfd1eaf13eea1f955f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb14a79f3588e22985d793cfd1eaf13eea1f955f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eb14a79f3588e22985d793cfd1eaf13eea1f955f"}], "stats": {"total": 91, "additions": 78, "deletions": 13}, "files": [{"sha": "da45f5c368adc973b3d9fb9ab0ea31e198e56427", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7e68d0804442a817e73a31b126f1066074b4b00/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7e68d0804442a817e73a31b126f1066074b4b00/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=f7e68d0804442a817e73a31b126f1066074b4b00", "patch": "@@ -1,3 +1,12 @@\n+2014-03-18  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/60564\n+\t* include/std/future (__future_base::_Task_state<>): Change\n+\tconstructors to template functions using perfect forwarding.\n+\t(__create_task_state): Use decayed type as stored task.\n+\t(packaged_task::packaged_task(_Fn&&)): Forward instead of moving.\n+\t* testsuite/30_threads/packaged_task/60564.cc: New.\n+\n 2014-03-16  Fran\u00e7ois Dumont  <fdumont@gcc.gnu.org>\n \n \t* scripts/create_testsuite_files: Add testsuite/experimental in"}, {"sha": "717ce7105df0ad0d8eb115637fb93e692fbcb161", "filename": "libstdc++-v3/include/std/future", "status": "modified", "additions": 18, "deletions": 13, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7e68d0804442a817e73a31b126f1066074b4b00/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ffuture", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7e68d0804442a817e73a31b126f1066074b4b00/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ffuture", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ffuture?ref=f7e68d0804442a817e73a31b126f1066074b4b00", "patch": "@@ -1285,9 +1285,11 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     struct __future_base::_Task_state<_Fn, _Alloc, _Res(_Args...)> final\n     : __future_base::_Task_state_base<_Res(_Args...)>\n     {\n-      _Task_state(_Fn&& __fn, const _Alloc& __a)\n-      : _Task_state_base<_Res(_Args...)>(__a), _M_impl(std::move(__fn), __a)\n-      { }\n+      template<typename _Fn2>\n+\t_Task_state(_Fn2&& __fn, const _Alloc& __a)\n+\t: _Task_state_base<_Res(_Args...)>(__a),\n+\t  _M_impl(std::forward<_Fn2>(__fn), __a)\n+\t{ }\n \n     private:\n       virtual void\n@@ -1316,19 +1318,21 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       struct _Impl : _Alloc\n       {\n-\t_Impl(_Fn&& __fn, const _Alloc& __a)\n-\t  : _Alloc(__a), _M_fn(std::move(__fn)) { }\n+\ttemplate<typename _Fn2>\n+\t  _Impl(_Fn2&& __fn, const _Alloc& __a)\n+\t  : _Alloc(__a), _M_fn(std::forward<_Fn2>(__fn)) { }\n \t_Fn _M_fn;\n       } _M_impl;\n     };\n \n-    template<typename _Signature, typename _Fn, typename _Alloc>\n-      static shared_ptr<__future_base::_Task_state_base<_Signature>>\n-      __create_task_state(_Fn&& __fn, const _Alloc& __a)\n-      {\n-\ttypedef __future_base::_Task_state<_Fn, _Alloc, _Signature> _State;\n-\treturn std::allocate_shared<_State>(__a, std::move(__fn), __a);\n-      }\n+  template<typename _Signature, typename _Fn, typename _Alloc>\n+    static shared_ptr<__future_base::_Task_state_base<_Signature>>\n+    __create_task_state(_Fn&& __fn, const _Alloc& __a)\n+    {\n+      typedef typename decay<_Fn>::type _Fn2;\n+      typedef __future_base::_Task_state<_Fn2, _Alloc, _Signature> _State;\n+      return std::allocate_shared<_State>(__a, std::forward<_Fn>(__fn), __a);\n+    }\n \n   template<typename _Fn, typename _Alloc, typename _Res, typename... _Args>\n     shared_ptr<__future_base::_Task_state_base<_Res(_Args...)>>\n@@ -1368,7 +1372,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t       __constrain_pkgdtask<packaged_task, _Fn>::__type>\n \texplicit\n \tpackaged_task(_Fn&& __fn)\n-\t: packaged_task(allocator_arg, std::allocator<int>(), std::move(__fn))\n+\t: packaged_task(allocator_arg, std::allocator<int>(),\n+\t\t\tstd::forward<_Fn>(__fn))\n \t{ }\n \n       // _GLIBCXX_RESOLVE_LIB_DEFECTS"}, {"sha": "956d506d7568b459a53568f675a3b802f9d10b5b", "filename": "libstdc++-v3/testsuite/30_threads/packaged_task/60564.cc", "status": "added", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7e68d0804442a817e73a31b126f1066074b4b00/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fpackaged_task%2F60564.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7e68d0804442a817e73a31b126f1066074b4b00/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fpackaged_task%2F60564.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fpackaged_task%2F60564.cc?ref=f7e68d0804442a817e73a31b126f1066074b4b00", "patch": "@@ -0,0 +1,51 @@\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-gnu* *-*-solaris* *-*-cygwin *-*-darwin* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++11 -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-gnu* powerpc-ibm-aix* } }\n+// { dg-options \" -std=gnu++11 -pthreads\" { target *-*-solaris* } }\n+// { dg-options \" -std=gnu++11 \" { target *-*-cygwin *-*-darwin* } }\n+// { dg-require-cstdint \"\" }\n+// { dg-require-gthreads \"\" }\n+// { dg-require-atomic-builtins \"\" }\n+\n+// Copyright (C) 2014 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+\n+#include <future>\n+#include <testsuite_hooks.h>\n+\n+struct X\n+{\n+  X() = default;\n+  X(const X&) = default;\n+  X(X&& x) { x.moved = true; }\n+\n+  void operator()() const { }\n+\n+  bool moved = false;\n+};\n+\n+void test01()\n+{\n+  X x;\n+  std::packaged_task<void()> p(x);\n+  VERIFY( !x.moved );\n+}\n+\n+int main()\n+{\n+  test01();\n+}"}]}