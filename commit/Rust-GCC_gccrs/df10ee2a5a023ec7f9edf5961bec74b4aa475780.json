{"sha": "df10ee2a5a023ec7f9edf5961bec74b4aa475780", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGYxMGVlMmE1YTAyM2VjN2Y5ZWRmNTk2MWJlYzc0YjRhYTQ3NTc4MA==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2007-02-19T19:11:37Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2007-02-19T19:11:37Z"}, "message": "gimplify.c (gimplify_init_ctor_preeval_1): Detect potential overlap due to calls to functions taking pointers as parameters.\n\n\t* gimplify.c (gimplify_init_ctor_preeval_1): Detect potential overlap\n\tdue to calls to functions taking pointers as parameters.\n\nFrom-SVN: r122133", "tree": {"sha": "aa25bc1935ed24eb30636d7e63fddb62f545bd69", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aa25bc1935ed24eb30636d7e63fddb62f545bd69"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/df10ee2a5a023ec7f9edf5961bec74b4aa475780", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df10ee2a5a023ec7f9edf5961bec74b4aa475780", "html_url": "https://github.com/Rust-GCC/gccrs/commit/df10ee2a5a023ec7f9edf5961bec74b4aa475780", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df10ee2a5a023ec7f9edf5961bec74b4aa475780/comments", "author": null, "committer": null, "parents": [{"sha": "9f8c673960975867c320f03a153f448568408f9a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f8c673960975867c320f03a153f448568408f9a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9f8c673960975867c320f03a153f448568408f9a"}], "stats": {"total": 54, "additions": 54, "deletions": 0}, "files": [{"sha": "0f834e47b0e27d7818aad62fef6c6f41c9cc7643", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df10ee2a5a023ec7f9edf5961bec74b4aa475780/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df10ee2a5a023ec7f9edf5961bec74b4aa475780/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=df10ee2a5a023ec7f9edf5961bec74b4aa475780", "patch": "@@ -1,3 +1,8 @@\n+2007-02-19  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gimplify.c (gimplify_init_ctor_preeval_1): Detect potential overlap\n+\tdue to calls to functions taking pointers as parameters.\n+\n 2007-02-19  Richard Henderson  <rth@redhat.com>\n \n         PR debug/29558"}, {"sha": "02eed6aa9ad4f80de8745ec5956993b198c84c1e", "filename": "gcc/gimplify.c", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df10ee2a5a023ec7f9edf5961bec74b4aa475780/gcc%2Fgimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df10ee2a5a023ec7f9edf5961bec74b4aa475780/gcc%2Fgimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.c?ref=df10ee2a5a023ec7f9edf5961bec74b4aa475780", "patch": "@@ -2628,6 +2628,21 @@ gimplify_init_ctor_preeval_1 (tree *tp, int *walk_subtrees, void *xdata)\n       && alias_sets_conflict_p (data->lhs_alias_set, get_alias_set (t)))\n     return t;\n \n+  /* If the constructor component is a call, determine if it can hide a\n+     potential overlap with the lhs through an INDIRECT_REF like above.  */\n+  if (TREE_CODE (t) == CALL_EXPR)\n+    {\n+      tree type, fntype = TREE_TYPE (TREE_TYPE (CALL_EXPR_FN (t)));\n+\n+      for (type = TYPE_ARG_TYPES (fntype); type; type = TREE_CHAIN (type))\n+\tif (POINTER_TYPE_P (TREE_VALUE (type))\n+\t    && (!data->lhs_base_decl || TREE_ADDRESSABLE (data->lhs_base_decl))\n+\t    && alias_sets_conflict_p (data->lhs_alias_set,\n+\t\t\t\t      get_alias_set\n+\t\t\t\t        (TREE_TYPE (TREE_VALUE (type)))))\n+\t  return t;\n+    }\n+\n   if (IS_TYPE_OR_DECL_P (t))\n     *walk_subtrees = 0;\n   return NULL;"}, {"sha": "2101ceed194fd63072585dd90287d5722524518b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df10ee2a5a023ec7f9edf5961bec74b4aa475780/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df10ee2a5a023ec7f9edf5961bec74b4aa475780/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=df10ee2a5a023ec7f9edf5961bec74b4aa475780", "patch": "@@ -1,3 +1,7 @@\n+2007-02-19  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gnat.dg/self_aggregate_with_call.adb: New test.\n+\n 2007-02-18  Dorit Nuzman  <dorit@il.ibm.com>\n \n \tPR tree-optimization/30975"}, {"sha": "4979bd4fc0220119a8e53e85caaa22e63018857d", "filename": "gcc/testsuite/gnat.dg/self_aggregate_with_call.adb", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df10ee2a5a023ec7f9edf5961bec74b4aa475780/gcc%2Ftestsuite%2Fgnat.dg%2Fself_aggregate_with_call.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df10ee2a5a023ec7f9edf5961bec74b4aa475780/gcc%2Ftestsuite%2Fgnat.dg%2Fself_aggregate_with_call.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fself_aggregate_with_call.adb?ref=df10ee2a5a023ec7f9edf5961bec74b4aa475780", "patch": "@@ -0,0 +1,30 @@\n+-- { dg-do run }\n+-- { dg-options \"-O2\" }\n+\n+procedure self_aggregate_with_call is\n+\n+   type Values is array (1 .. 8) of Natural;\n+\n+   type Vector is record\n+      Components : Values;\n+   end record;\n+\n+   function Clone (Components: Values) return Values is\n+   begin\n+      return Components;\n+   end;\n+\n+   procedure Process (V : in out Vector) is\n+   begin\n+      V.Components (Values'First) := 1;\n+      V := (Components => Clone (V.Components));\n+\n+      if V.Components (Values'First) /= 1 then\n+         raise Program_Error;\n+      end if;\n+   end;\n+\n+   V : Vector;\n+begin\n+   Process (V);\n+end;"}]}