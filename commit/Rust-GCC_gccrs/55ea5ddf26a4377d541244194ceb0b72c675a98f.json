{"sha": "55ea5ddf26a4377d541244194ceb0b72c675a98f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTVlYTVkZGYyNmE0Mzc3ZDU0MTI0NDE5NGNlYjBiNzJjNjc1YTk4Zg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2013-10-16T21:58:35Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2013-10-16T21:58:35Z"}, "message": "pt.c (apply_late_template_attributes): Use attribute_takes_identifier_p.\n\n\t* pt.c (apply_late_template_attributes): Use\n\tattribute_takes_identifier_p.\n\nFrom-SVN: r203727", "tree": {"sha": "942d41086fc0b8f60204d96ade1f8de1a6706578", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/942d41086fc0b8f60204d96ade1f8de1a6706578"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/55ea5ddf26a4377d541244194ceb0b72c675a98f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55ea5ddf26a4377d541244194ceb0b72c675a98f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/55ea5ddf26a4377d541244194ceb0b72c675a98f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55ea5ddf26a4377d541244194ceb0b72c675a98f/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1a1f2bc5139648b2559404328e0e31966ebb8732", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a1f2bc5139648b2559404328e0e31966ebb8732", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1a1f2bc5139648b2559404328e0e31966ebb8732"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "9b15f5556873237c9ac996061ad63a254ec9c777", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55ea5ddf26a4377d541244194ceb0b72c675a98f/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55ea5ddf26a4377d541244194ceb0b72c675a98f/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=55ea5ddf26a4377d541244194ceb0b72c675a98f", "patch": "@@ -1,5 +1,8 @@\n 2013-10-16  Jason Merrill  <jason@redhat.com>\n \n+\t* pt.c (apply_late_template_attributes): Use\n+\tattribute_takes_identifier_p.\n+\n \t* error.c (dump_exception_spec): Print \"noexcept\" rather than\n \t\"noexcept (true)\".\n "}, {"sha": "e9c3ce2ab99e2b10467dc53e8970d52281c45a42", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55ea5ddf26a4377d541244194ceb0b72c675a98f/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55ea5ddf26a4377d541244194ceb0b72c675a98f/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=55ea5ddf26a4377d541244194ceb0b72c675a98f", "patch": "@@ -8610,10 +8610,7 @@ apply_late_template_attributes (tree *decl_p, tree attributes, int attr_flags,\n \t\t pass it through tsubst.  Attributes like mode, format,\n \t\t cleanup and several target specific attributes expect it\n \t\t unmodified.  */\n-\t      else if (TREE_VALUE (t)\n-\t\t       && TREE_CODE (TREE_VALUE (t)) == TREE_LIST\n-\t\t       && TREE_VALUE (TREE_VALUE (t))\n-\t\t       && identifier_p (TREE_VALUE (TREE_VALUE (t))))\n+\t      else if (attribute_takes_identifier_p (TREE_PURPOSE (t)))\n \t\t{\n \t\t  tree chain\n \t\t    = tsubst_expr (TREE_CHAIN (TREE_VALUE (t)), args, complain,"}]}