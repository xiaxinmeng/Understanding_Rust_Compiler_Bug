{"sha": "c1cad89ed591f45f71045c7fb9747bbc7e25f193", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzFjYWQ4OWVkNTkxZjQ1ZjcxMDQ1YzdmYjk3NDdiYmM3ZTI1ZjE5Mw==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2007-03-03T17:41:54Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2007-03-03T17:41:54Z"}, "message": "c_by_val.c: Use int64_t instead of long to be more compatible with integer(kind=8).\n\n2007-03-03  Tobias Burnus  <burnus@net-b.de>\n\n       * gfortran.dg/c_by_val.c: Use int64_t instead of long\n       to be more compatible with integer(kind=8).\n\nFrom-SVN: r122510", "tree": {"sha": "fc906b854ae8ce0ffff73f2eadc60aaafdb36318", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fc906b854ae8ce0ffff73f2eadc60aaafdb36318"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c1cad89ed591f45f71045c7fb9747bbc7e25f193", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1cad89ed591f45f71045c7fb9747bbc7e25f193", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c1cad89ed591f45f71045c7fb9747bbc7e25f193", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1cad89ed591f45f71045c7fb9747bbc7e25f193/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a50639323b1cb8d55de55e4fc5a9ddcc3f3ae743", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a50639323b1cb8d55de55e4fc5a9ddcc3f3ae743", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a50639323b1cb8d55de55e4fc5a9ddcc3f3ae743"}], "stats": {"total": 11, "additions": 9, "deletions": 2}, "files": [{"sha": "04834734b95232b80b5ba6f3c387ec108587db6f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1cad89ed591f45f71045c7fb9747bbc7e25f193/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1cad89ed591f45f71045c7fb9747bbc7e25f193/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c1cad89ed591f45f71045c7fb9747bbc7e25f193", "patch": "@@ -1,3 +1,8 @@\n+2007-03-03  Tobias Burnus  <burnus@net-b.de>\n+\n+\t* gfortran.dg/c_by_val.c: Use int64_t instead of long\n+\tto be more compatible with integer(kind=8).\n+\n 2007-03-03  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n \n \tPR libfortran/31001"}, {"sha": "78bf0ef04afb79f3db5782924bf94afebebd1938", "filename": "gcc/testsuite/gfortran.dg/c_by_val.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1cad89ed591f45f71045c7fb9747bbc7e25f193/gcc%2Ftestsuite%2Fgfortran.dg%2Fc_by_val.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1cad89ed591f45f71045c7fb9747bbc7e25f193/gcc%2Ftestsuite%2Fgfortran.dg%2Fc_by_val.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fc_by_val.c?ref=c1cad89ed591f45f71045c7fb9747bbc7e25f193", "patch": "@@ -1,11 +1,13 @@\n /*  Passing from fortran to C by value, using %VAL.  */\n \n+#include <inttypes.h>\n+\n typedef struct { float r, i; } complex;\n typedef struct { double r, i; } complex8;\n extern void f_to_f__ (float*, float, float*, float**);\n extern void f_to_f8__ (double*, double, double*, double**);\n extern void i_to_i__ (int*, int, int*, int**);\n-extern void i_to_i8__ (long*, long, long*, long**);\n+extern void i_to_i8__ (int64_t*, int64_t, int64_t*, int64_t**);\n extern void c_to_c__ (complex*, complex, complex*, complex**);\n extern void c_to_c8__ (complex8*, complex8, complex8*, complex8**);\n extern void abort (void);\n@@ -41,7 +43,7 @@ i_to_i__(int *retval, int i1, int *i2, int **i3)\n }\n \n void\n-i_to_i8__(long *retval, long i1, long *i2, long **i3)\n+i_to_i8__(int64_t *retval, int64_t i1, int64_t *i2, int64_t **i3)\n {\n   if ( i1 != *i2 ) abort();\n   if ( i1 != **i3 ) abort();"}]}