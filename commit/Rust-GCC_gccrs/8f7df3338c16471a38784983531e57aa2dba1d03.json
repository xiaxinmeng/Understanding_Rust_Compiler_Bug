{"sha": "8f7df3338c16471a38784983531e57aa2dba1d03", "node_id": "C_kwDOANBUbNoAKDhmN2RmMzMzOGMxNjQ3MWEzODc4NDk4MzUzMWU1N2FhMmRiYTFkMDM", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-10-19T09:22:53Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-10-19T09:22:53Z"}, "message": "i386: Fix up __bf16 handling on ia32\n\nLast night's testing of the libstdc++ changes revealed a problem\nin the __bf16 backend registration (while _Float16 seems ok).\nThe problem is that for both BFmode and HFmode we require TARGET_SSE2,\nthe generic code creates {,b}float16_type_node only if that is true\nat the start of the TU and the builtins for the type are only\ncreated in that case (many __builtin_*f16 for HFmode and __builtin_nansf16b\nfor BFmode).  Now, for _Float16 I've kept what the code did previously,\nif float16_type_node from generic code is NULL, create ix86_float16_type_node\nand register _Float16 for it, but for __bf16 I've changed it so that\nif bfloat16_type_node from generic code is NULL,\nix86_register_bf16_builtin_type makes bfloat16_type_node non-NULL.\nThis has an unfortunate consequence though, __STDCPP_BFLOAT16_T__ is\npredefined for C++23, __BFLT16_*__ macros are predefined as well, but\nthe type doesn't really work (errors whenever it is used) and the builtin\nisn't defined.\n\nThe following patch fixes that by going with what we do for HFmode,\nbfloat16_type_node stays as initialized by generic code and we have a local\ntype for backend use.  On the other side, nothing used ix86_bf16_ptr_type_node\nso that is now dropped.\n\n2022-10-19  Jakub Jelinek  <jakub@redhat.com>\n\n\t* config/i386/i386-builtins.cc (ix86_bf16_ptr_type_node): Remove.\n\t(ix86_bf16_type_node): New variable.\n\t(ix86_register_bf16_builtin_type): If bfloat16_type_node is NULL\n\tfrom generic code, set only ix86_bf16_type_node to a new REAL_TYPE\n\trather than bfloat16_type_node, otherwise set ix86_bf16_type_node\n\tto bfloat16_type_node.  Register __bf16 on ix86_bf16_type_node\n\trather than bfloat16_type_node.  Don't initialize unused\n\tix86_bf16_ptr_type_node.\n\t* config/i386/i386-builtin-types.def (BFLOAT16): Use\n\tix86_bf16_type_node rather than bfloat16_type_node.", "tree": {"sha": "043463332380c54d652d5697ccf8c7d1746f46b5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/043463332380c54d652d5697ccf8c7d1746f46b5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8f7df3338c16471a38784983531e57aa2dba1d03", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f7df3338c16471a38784983531e57aa2dba1d03", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8f7df3338c16471a38784983531e57aa2dba1d03", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f7df3338c16471a38784983531e57aa2dba1d03/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "32ab9238d86dfa6d74d3592bec570f4f257d0413", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/32ab9238d86dfa6d74d3592bec570f4f257d0413", "html_url": "https://github.com/Rust-GCC/gccrs/commit/32ab9238d86dfa6d74d3592bec570f4f257d0413"}], "stats": {"total": 19, "additions": 9, "deletions": 10}, "files": [{"sha": "63a360b0f8b99a3b35932692fb7b2a90410e74a7", "filename": "gcc/config/i386/i386-builtin-types.def", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f7df3338c16471a38784983531e57aa2dba1d03/gcc%2Fconfig%2Fi386%2Fi386-builtin-types.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f7df3338c16471a38784983531e57aa2dba1d03/gcc%2Fconfig%2Fi386%2Fi386-builtin-types.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-builtin-types.def?ref=8f7df3338c16471a38784983531e57aa2dba1d03", "patch": "@@ -69,7 +69,7 @@ DEF_PRIMITIVE_TYPE (UINT16, short_unsigned_type_node)\n DEF_PRIMITIVE_TYPE (INT64, long_long_integer_type_node)\n DEF_PRIMITIVE_TYPE (UINT64, long_long_unsigned_type_node)\n DEF_PRIMITIVE_TYPE (FLOAT16, ix86_float16_type_node)\n-DEF_PRIMITIVE_TYPE (BFLOAT16, bfloat16_type_node)\n+DEF_PRIMITIVE_TYPE (BFLOAT16, ix86_bf16_type_node)\n DEF_PRIMITIVE_TYPE (FLOAT, float_type_node)\n DEF_PRIMITIVE_TYPE (DOUBLE, double_type_node)\n DEF_PRIMITIVE_TYPE (FLOAT80, float80_type_node)"}, {"sha": "76668ccf4c1bb11f98d21c8168711c250357b88a", "filename": "gcc/config/i386/i386-builtins.cc", "status": "modified", "additions": 8, "deletions": 9, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f7df3338c16471a38784983531e57aa2dba1d03/gcc%2Fconfig%2Fi386%2Fi386-builtins.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f7df3338c16471a38784983531e57aa2dba1d03/gcc%2Fconfig%2Fi386%2Fi386-builtins.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-builtins.cc?ref=8f7df3338c16471a38784983531e57aa2dba1d03", "patch": "@@ -126,7 +126,7 @@ BDESC_VERIFYS (IX86_BUILTIN_MAX,\n static GTY(()) tree ix86_builtin_type_tab[(int) IX86_BT_LAST_CPTR + 1];\n \n tree ix86_float16_type_node = NULL_TREE;\n-tree ix86_bf16_ptr_type_node = NULL_TREE;\n+tree ix86_bf16_type_node = NULL_TREE;\n \n /* Retrieve an element from the above table, building some of\n    the types lazily.  */\n@@ -1373,17 +1373,16 @@ ix86_register_bf16_builtin_type (void)\n {\n   if (bfloat16_type_node == NULL_TREE)\n     {\n-      bfloat16_type_node = make_node (REAL_TYPE);\n-      TYPE_PRECISION (bfloat16_type_node) = 16;\n-      SET_TYPE_MODE (bfloat16_type_node, BFmode);\n-      layout_type (bfloat16_type_node);\n+      ix86_bf16_type_node = make_node (REAL_TYPE);\n+      TYPE_PRECISION (ix86_bf16_type_node) = 16;\n+      SET_TYPE_MODE (ix86_bf16_type_node, BFmode);\n+      layout_type (ix86_bf16_type_node);\n     }\n+  else\n+    ix86_bf16_type_node = bfloat16_type_node;\n \n   if (!maybe_get_identifier (\"__bf16\") && TARGET_SSE2)\n-    {\n-      lang_hooks.types.register_builtin_type (bfloat16_type_node, \"__bf16\");\n-      ix86_bf16_ptr_type_node = build_pointer_type (bfloat16_type_node);\n-    }\n+    lang_hooks.types.register_builtin_type (ix86_bf16_type_node, \"__bf16\");\n }\n \n static void"}]}