{"sha": "c97fd4b8566bde57af1a3ed0619c11d4ca00c26d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yzk3ZmQ0Yjg1NjZiZGU1N2FmMWEzZWQwNjE5YzExZDRjYTAwYzI2ZA==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2013-08-12T17:23:43Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2013-08-12T17:23:43Z"}, "message": "[multiple changes]\n\n2013-08-12  Uros Bizjak  <ubizjak@gmail.com>\n\n\t* config/i386/i386.md (floatunssi<mode>2 expand): Use MODEF mode\n\titerator instead of X87MODEF.\n\n2013-08-12  Perez Read  <netfirewall@gmail.com>\n\n\tPR target/58132\n\t* config/i386/i386.md (*movabs<mode>_1):  Add <ptrsize> PTR before\n\toperand 0 for intel asm alternative.\n\t(*movabs<mode>_2): Ditto for operand 1.\n\ntestsuite/ChangeLog:\n\n2013-08-12  Perez Read  <netfirewall@gmail.com>\n\n         PR target/58132\n         * gcc.target/i386/movabs-1.c: New test.\n\nFrom-SVN: r201668", "tree": {"sha": "60e1b5e98e720ecae7c775a3e0be75a77d96a330", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/60e1b5e98e720ecae7c775a3e0be75a77d96a330"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c97fd4b8566bde57af1a3ed0619c11d4ca00c26d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c97fd4b8566bde57af1a3ed0619c11d4ca00c26d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c97fd4b8566bde57af1a3ed0619c11d4ca00c26d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c97fd4b8566bde57af1a3ed0619c11d4ca00c26d/comments", "author": null, "committer": null, "parents": [{"sha": "f4f4204c8957750366143c93a1fd3e49191a20ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4f4204c8957750366143c93a1fd3e49191a20ef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f4f4204c8957750366143c93a1fd3e49191a20ef"}], "stats": {"total": 65, "additions": 44, "deletions": 21}, "files": [{"sha": "85d0527fef9a6f4db7335df37b9c41404cd0eb0c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 22, "deletions": 14, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c97fd4b8566bde57af1a3ed0619c11d4ca00c26d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c97fd4b8566bde57af1a3ed0619c11d4ca00c26d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c97fd4b8566bde57af1a3ed0619c11d4ca00c26d", "patch": "@@ -1,3 +1,15 @@\n+2013-08-12  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/i386.md (floatunssi<mode>2 expand): Use MODEF mode\n+\titerator instead of X87MODEF.\n+\n+2013-08-12  Perez Read  <netfirewall@gmail.com>\n+\n+\tPR target/58132\n+\t* config/i386/i386.md (*movabs<mode>_1):  Add <ptrsize> PTR before\n+\toperand 0 for intel asm alternative.\n+\t(*movabs<mode>_2): Ditto for operand 1.\n+\n 2013-08-12  James Greenhalgh  <james.greenhalgh@arm.com>\n \n \t* config/aarch64/arm_none.h\n@@ -43,14 +55,13 @@\n \t* config/i386/i386-opts.h: Include stringopt.def.\n \t* config/i386/i386.opt: Include stringopt.opt.\n \t* config/i386/i386.c (ix86_option_override_internal):\n-\tOverride default size based stringop inline strategies\n-\twith options.\n+\tOverride default size based stringop inline strategies with options.\n \t* config/i386/i386.c (ix86_parse_stringop_strategy_string):\n \tNew function.\n \n 2013-08-09  Jan Hubicka  <jh@suse.cz>\n \n-\t * ipa-ref.c (ipa_clear_stmts_in_references): Clear lto_stmt_uid, too.\n+\t* ipa-ref.c (ipa_clear_stmts_in_references): Clear lto_stmt_uid, too.\n \n 2013-08-09  Jan Hubicka  <jh@suse.cz>\n \n@@ -73,8 +84,7 @@\n \n \t* cgraph.h (cgraph_node): Add profile_id.\n \t* value-prof.c (cgraph_node_map): Turn into pointer_map.\n-\t(init_node_map): Rewrite to handle hashes increas of incremental\n-\tIDs.\n+\t(init_node_map): Rewrite to handle hashes increas of incremental IDs.\n \t(del_node_map): Update.\n \t(find_func_by_funcdef_no): Replace by ...\n \t(find_func_by_profile_id): ... this one.\n@@ -96,8 +106,8 @@\n \n 2013-08-09  Jan Hubicka  <jh@suse.cz>\n \n-\t* cgraphbuild.c (cgraph_rebuild_references): Rebuild only non-speculative\n-\trefs.\n+\t* cgraphbuild.c (cgraph_rebuild_references): Rebuild only\n+\tnon-speculative refs.\n \t* cgraph.c (cgraph_update_edge_in_call_site_hash): New function.\n \t(cgraph_add_edge_to_call_site_hash): Deal with speculative calls.\n \t(cgraph_set_call_stmt): Likewise.\n@@ -107,8 +117,7 @@\n \t(cgraph_turn_edge_to_speculative): New function.\n \t(cgraph_speculative_call_info): New function.\n \t(cgraph_make_edge_direct): Return direct edge; handle speculation.\n-\t(cgraph_redirect_edge_call_stmt_to_callee): Expand speculative\n-\tedges.\n+\t(cgraph_redirect_edge_call_stmt_to_callee): Expand speculative edges.\n \t(dump_cgraph_node): Dump speculation.\n \t(verify_edge_count_and_frequency): Accept speculative edges.\n \t(verify_edge_corresponds_to_fndecl): Handle partitioned cgraph.\n@@ -151,10 +160,8 @@\n \t(propagate_controlled_uses): Liekwise.\n \t* tree-inline.c (copy_bb): Copy speculative edges.\n \t(redirect_all_calls): New function.\n-\t(copy_cfg_body): Do redirection after loop info\n-\tis updated.\n-\t(delete_unreachable_blocks_update_callgraph): Updadte\n-\tspeculation.\n+\t(copy_cfg_body): Do redirection after loop info is updated.\n+\t(delete_unreachable_blocks_update_callgraph): Updadte speculation.\n \n 2013-08-09  Jan Hubicka  <jh@suse.cz>\n \n@@ -250,7 +257,8 @@\n \t* cgraph.c (verify_cgraph_node): Add basic ipa-ref verifier.\n \t* ipa-inline-transform.c (inline_transform): Remove all references\n \tafter inlining.\n-\t* cgraphunit.c (expand_function): Remove all references after expansion.\n+\t* cgraphunit.c (expand_function): Remove all references after\n+\texpansion.\n \t* ipa-ref.c (ipa_ref_has_aliases_p): Fix formatting.\n \t(ipa_find_reference): Rewrite to iterator.\n \t(remove_stmt_references): Likewise."}, {"sha": "35bb09c602788fe1b050c60eeeb643090be0fbad", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c97fd4b8566bde57af1a3ed0619c11d4ca00c26d/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c97fd4b8566bde57af1a3ed0619c11d4ca00c26d/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=c97fd4b8566bde57af1a3ed0619c11d4ca00c26d", "patch": "@@ -2255,7 +2255,7 @@\n   \"TARGET_LP64 && ix86_check_movabs (insn, 0)\"\n   \"@\n    movabs{<imodesuffix>}\\t{%1, %P0|[%P0], %1}\n-   mov{<imodesuffix>}\\t{%1, %a0|%a0, %1}\"\n+   mov{<imodesuffix>}\\t{%1, %a0|<iptrsize> PTR %a0, %1}\"\n   [(set_attr \"type\" \"imov\")\n    (set_attr \"modrm\" \"0,*\")\n    (set_attr \"length_address\" \"8,0\")\n@@ -2269,7 +2269,7 @@\n   \"TARGET_LP64 && ix86_check_movabs (insn, 1)\"\n   \"@\n    movabs{<imodesuffix>}\\t{%P1, %0|%0, [%P1]}\n-   mov{<imodesuffix>}\\t{%a1, %0|%0, %a1}\"\n+   mov{<imodesuffix>}\\t{%a1, %0|%0, <iptrsize> PTR %a1}\"\n   [(set_attr \"type\" \"imov\")\n    (set_attr \"modrm\" \"0,*\")\n    (set_attr \"length_address\" \"8,0\")\n@@ -5037,15 +5037,15 @@\n    && reload_completed\"\n   [(set (match_dup 0) (float:X87MODEF (match_dup 1)))])\n \n-(define_expand \"floatuns<SWI12:mode><X87MODEF:mode>2\"\n-  [(set (match_operand:X87MODEF 0 \"register_operand\")\n-\t(unsigned_float:X87MODEF\n+(define_expand \"floatuns<SWI12:mode><MODEF:mode>2\"\n+  [(set (match_operand:MODEF 0 \"register_operand\")\n+\t(unsigned_float:MODEF\n \t  (match_operand:SWI12 1 \"nonimmediate_operand\")))]\n   \"!TARGET_64BIT\n-   && SSE_FLOAT_MODE_P (<X87MODEF:MODE>mode) && TARGET_SSE_MATH\"\n+   && SSE_FLOAT_MODE_P (<MODEF:MODE>mode) && TARGET_SSE_MATH\"\n {\n   operands[1] = convert_to_mode (SImode, operands[1], 1);\n-  emit_insn (gen_floatsi<X87MODEF:mode>2 (operands[0], operands[1]));\n+  emit_insn (gen_floatsi<MODEF:mode>2 (operands[0], operands[1]));\n   DONE;\n })\n "}, {"sha": "da7f54f1cd9e2650534ec050f43f3ab7338d94d6", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c97fd4b8566bde57af1a3ed0619c11d4ca00c26d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c97fd4b8566bde57af1a3ed0619c11d4ca00c26d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c97fd4b8566bde57af1a3ed0619c11d4ca00c26d", "patch": "@@ -1,3 +1,8 @@\n+2013-08-12  Perez Read  <netfirewall@gmail.com>\n+\n+         PR target/58132\n+         * gcc.target/i386/movabs-1.c: New test.\n+\n 2013-08-12  Marek Polacek  <polacek@redhat.com>\n \n \tPR tree-optimization/57980"}, {"sha": "75ef8d2a6cbf4e044f08e6eb0b31914abd8f6c2a", "filename": "gcc/testsuite/gcc.target/i386/movabs-1.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c97fd4b8566bde57af1a3ed0619c11d4ca00c26d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmovabs-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c97fd4b8566bde57af1a3ed0619c11d4ca00c26d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmovabs-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmovabs-1.c?ref=c97fd4b8566bde57af1a3ed0619c11d4ca00c26d", "patch": "@@ -0,0 +1,10 @@\n+/* { dg-do assemble } */\n+/* { dg-options \"-O2 -masm=intel\" } */\n+/* { dg-require-effective-target lp64 } */\n+/* { dg-require-effective-target masm_intel } */\n+\n+void\n+foo (void)\n+{\n+  *(volatile long*)0xFFFF800000000000 = -1;\n+}"}]}