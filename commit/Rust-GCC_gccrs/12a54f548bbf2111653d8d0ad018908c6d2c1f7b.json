{"sha": "12a54f548bbf2111653d8d0ad018908c6d2c1f7b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTJhNTRmNTQ4YmJmMjExMTY1M2Q4ZDBhZDAxODkwOGM2ZDJjMWY3Yg==", "commit": {"author": {"name": "Nick Clifton", "email": "nickc@redhat.com", "date": "2010-02-24T09:39:57Z"}, "committer": {"name": "Nick Clifton", "email": "nickc@gcc.gnu.org", "date": "2010-02-24T09:39:57Z"}, "message": "mep.c: Include gimple.h.\n\n        * config/mep/mep.c: Include gimple.h.\n        (mep_function_uses_sp): Delete unused function.\n        (mep_gimplify_va_arg_expr): Change types of pre_p and post_p\n        parameters.  Use unsigned integers to count args.  Return a\n        NULL_RTX instead of an error_mark_node.  Toidy up formatting.\n\nFrom-SVN: r157031", "tree": {"sha": "c8a69a7e6f0db1c9db2e4500c3209f3ca58a3ead", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c8a69a7e6f0db1c9db2e4500c3209f3ca58a3ead"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/12a54f548bbf2111653d8d0ad018908c6d2c1f7b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12a54f548bbf2111653d8d0ad018908c6d2c1f7b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/12a54f548bbf2111653d8d0ad018908c6d2c1f7b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12a54f548bbf2111653d8d0ad018908c6d2c1f7b/comments", "author": {"login": "nickclifton", "id": 31441682, "node_id": "MDQ6VXNlcjMxNDQxNjgy", "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nickclifton", "html_url": "https://github.com/nickclifton", "followers_url": "https://api.github.com/users/nickclifton/followers", "following_url": "https://api.github.com/users/nickclifton/following{/other_user}", "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}", "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions", "organizations_url": "https://api.github.com/users/nickclifton/orgs", "repos_url": "https://api.github.com/users/nickclifton/repos", "events_url": "https://api.github.com/users/nickclifton/events{/privacy}", "received_events_url": "https://api.github.com/users/nickclifton/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "505a36f95b00543a758ab4b56c1f4bf89df4a992", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/505a36f95b00543a758ab4b56c1f4bf89df4a992", "html_url": "https://github.com/Rust-GCC/gccrs/commit/505a36f95b00543a758ab4b56c1f4bf89df4a992"}], "stats": {"total": 60, "additions": 24, "deletions": 36}, "files": [{"sha": "b5f7c1a10b7d927e71f839cf594e5d0743e29ed8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12a54f548bbf2111653d8d0ad018908c6d2c1f7b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12a54f548bbf2111653d8d0ad018908c6d2c1f7b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=12a54f548bbf2111653d8d0ad018908c6d2c1f7b", "patch": "@@ -1,3 +1,11 @@\n+2010-02-24  Nick Clifton  <nickc@redhat.com>\n+\n+\t* config/mep/mep.c: Include gimple.h.\n+\t(mep_function_uses_sp): Delete unused function.\n+\t(mep_gimplify_va_arg_expr): Change types of pre_p and post_p\n+\tparameters.  Use unsigned integers to count args.  Return a\n+\tNULL_RTX instead of an error_mark_node.  Toidy up formatting.\n+\n 2010-02-23  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/43107"}, {"sha": "e0fce28c084a20af6f9b61ead110a3de99d20be9", "filename": "gcc/config/mep/mep.c", "status": "modified", "additions": 16, "deletions": 36, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12a54f548bbf2111653d8d0ad018908c6d2c1f7b/gcc%2Fconfig%2Fmep%2Fmep.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12a54f548bbf2111653d8d0ad018908c6d2c1f7b/gcc%2Fconfig%2Fmep%2Fmep.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmep%2Fmep.c?ref=12a54f548bbf2111653d8d0ad018908c6d2c1f7b", "patch": "@@ -50,6 +50,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"target-def.h\"\n #include \"langhooks.h\"\n #include \"df.h\"\n+#include \"gimple.h\"\n \n /* Structure of this file:\n \n@@ -160,7 +161,6 @@ static bool mep_interrupt_saved_reg (int);\n static bool mep_call_saves_register (int);\n static rtx F (rtx);\n static void add_constant (int, int, int, int);\n-static bool mep_function_uses_sp (void);\n static rtx maybe_dead_move (rtx, rtx, bool);\n static void mep_reload_pointer (int, const char *);\n static void mep_start_function (FILE *, HOST_WIDE_INT);\n@@ -227,7 +227,7 @@ static bool mep_narrow_volatile_bitfield (void);\n static rtx mep_expand_builtin_saveregs (void);\n static tree mep_build_builtin_va_list (void);\n static void mep_expand_va_start (tree, rtx);\n-static tree mep_gimplify_va_arg_expr (tree, tree, tree *, tree *);\n+static tree mep_gimplify_va_arg_expr (tree, tree, gimple_seq *, gimple_seq *);\n static bool mep_can_eliminate (const int, const int);\n static void mep_trampoline_init (rtx, tree, rtx);\n \f\n@@ -2757,27 +2757,6 @@ add_constant (int dest, int src, int value, int mark_frame)\n     }\n }\n \n-static bool\n-mep_function_uses_sp (void)\n-{\n-  rtx insn;\n-  struct sequence_stack *seq;\n-  rtx sp = gen_rtx_REG (SImode, SP_REGNO);\n-\n-  insn = get_insns ();\n-  for (seq = crtl->emit.sequence_stack;\n-       seq;\n-       insn = seq->first, seq = seq->next);\n-\n-  while (insn)\n-    {\n-      if (mep_mentioned_p (insn, sp, 0))\n-\treturn true;\n-      insn = NEXT_INSN (insn);\n-    }\n-  return false;\n-}\n-\n /* Move SRC to DEST.  Mark the move as being potentially dead if\n    MAYBE_DEAD_P.  */\n \n@@ -3699,7 +3678,8 @@ mep_expand_va_start (tree valist, rtx nextarg)\n \n static tree\n mep_gimplify_va_arg_expr (tree valist, tree type,\n-\t\t\t  tree *pre_p, tree *post_p ATTRIBUTE_UNUSED)\n+\t\t\t  gimple_seq *pre_p,\n+\t\t\t  gimple_seq *post_p ATTRIBUTE_UNUSED)\n {\n   HOST_WIDE_INT size, rsize;\n   bool by_reference, ivc2_vec;\n@@ -6355,9 +6335,9 @@ mep_expand_builtin (tree exp, rtx target ATTRIBUTE_UNUSED,\n   tree fnname;\n   const struct cgen_insn *cgen_insn;\n   const struct insn_data *idata;\n-  int first_arg = 0;\n-  int return_type = void_type_node;\n-  int builtin_n_args;\n+  unsigned int first_arg = 0;\n+  tree return_type = void_type_node;\n+  unsigned int builtin_n_args;\n \n   fndecl = TREE_OPERAND (CALL_EXPR_FN (exp), 0);\n   fnname = DECL_NAME (fndecl);\n@@ -6367,7 +6347,7 @@ mep_expand_builtin (tree exp, rtx target ATTRIBUTE_UNUSED,\n   if (!mep_get_intrinsic_insn (DECL_FUNCTION_CODE (fndecl), &cgen_insn))\n     {\n       mep_intrinsic_unavailable (DECL_FUNCTION_CODE (fndecl));\n-      return error_mark_node;\n+      return NULL_RTX;\n     }\n   idata = &insn_data[cgen_insn->icode];\n \n@@ -6388,19 +6368,19 @@ mep_expand_builtin (tree exp, rtx target ATTRIBUTE_UNUSED,\n   if (n_args < builtin_n_args)\n     {\n       error (\"too few arguments to %qE\", fnname);\n-      return error_mark_node;\n+      return NULL_RTX;\n     }\n   if (n_args > builtin_n_args)\n     {\n       error (\"too many arguments to %qE\", fnname);\n-      return error_mark_node;\n+      return NULL_RTX;\n     }\n \n-  for (a = first_arg; a < builtin_n_args+first_arg; a++)\n+  for (a = first_arg; a < builtin_n_args + first_arg; a++)\n     {\n       tree value;\n \n-      args = CALL_EXPR_ARG (exp, a-first_arg);\n+      args = CALL_EXPR_ARG (exp, a - first_arg);\n \n       value = args;\n \n@@ -6411,7 +6391,7 @@ mep_expand_builtin (tree exp, rtx target ATTRIBUTE_UNUSED,\n \t    {\n \t      debug_tree(value);\n \t      error (\"argument %d of %qE must be an address\", a+1, fnname);\n-\t      return error_mark_node;\n+\t      return NULL_RTX;\n \t    }\n \t  value = TREE_OPERAND (value, 0);\n \t}\n@@ -6450,11 +6430,11 @@ mep_expand_builtin (tree exp, rtx target ATTRIBUTE_UNUSED,\n \t{\n \t  error (\"argument %d of %qE must be in the range %d...%d\",\n \t\t a + 1, fnname, 0, cgen_insn->regnums[a].count - 1);\n-\t  return error_mark_node;\n+\t  return NULL_RTX;\n \t}\n     }\n \n-  for (a=0; a<first_arg; a++)\n+  for (a = 0; a < first_arg; a++)\n     {\n       if (a == 0 && target && GET_MODE (target) == idata->operand[0].mode)\n \targ[a] = target;\n@@ -6473,7 +6453,7 @@ mep_expand_builtin (tree exp, rtx target ATTRIBUTE_UNUSED,\n \t{\n \t  mep_incompatible_arg (&idata->operand[opindex],\n \t\t\t\targ[a], a + 1 - first_arg, fnname);\n-\t  return error_mark_node;\n+\t  return NULL_RTX;\n \t}\n     }\n "}]}