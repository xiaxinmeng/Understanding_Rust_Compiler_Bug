{"sha": "5b0c589655c47d528012f3feb6ca62005568aaae", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWIwYzU4OTY1NWM0N2Q1MjgwMTJmM2ZlYjZjYTYyMDA1NTY4YWFhZQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2001-11-26T13:11:15Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2001-11-26T13:11:15Z"}, "message": "* call.c (joust): Remove COND_EXPR hack.\n\nFrom-SVN: r47346", "tree": {"sha": "5f19d8bc1040233c72b574828da44f25afee64be", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5f19d8bc1040233c72b574828da44f25afee64be"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5b0c589655c47d528012f3feb6ca62005568aaae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b0c589655c47d528012f3feb6ca62005568aaae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5b0c589655c47d528012f3feb6ca62005568aaae", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b0c589655c47d528012f3feb6ca62005568aaae/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5bc72aebcb66d8596e9084183c843b64b4fd599e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5bc72aebcb66d8596e9084183c843b64b4fd599e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5bc72aebcb66d8596e9084183c843b64b4fd599e"}], "stats": {"total": 26, "additions": 5, "deletions": 21}, "files": [{"sha": "68ae9e1cfc6e041d24eeb1b0513ac2d5cede7ea3", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b0c589655c47d528012f3feb6ca62005568aaae/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b0c589655c47d528012f3feb6ca62005568aaae/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=5b0c589655c47d528012f3feb6ca62005568aaae", "patch": "@@ -1,3 +1,7 @@\n+2001-11-26  Jason Merrill  <jason@redhat.com>\n+\n+\t* call.c (joust): Remove COND_EXPR hack.\n+\n 2001-11-25  Aldy Hernandez  <aldyh@redhat.com>\n \n \t* cp/search.c (lookup_base_r): Declare bk in variable declaration"}, {"sha": "eea7f7e845438176accb43e4f70b1176a1fe3d14", "filename": "gcc/cp/call.c", "status": "modified", "additions": 1, "deletions": 21, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b0c589655c47d528012f3feb6ca62005568aaae/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b0c589655c47d528012f3feb6ca62005568aaae/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=5b0c589655c47d528012f3feb6ca62005568aaae", "patch": "@@ -1933,7 +1933,7 @@ add_builtin_candidate (candidates, code, code2, fnname, type1, type2,\n       break;\n \n     case COND_EXPR:\n-      /* [over.builtin]\n+      /* [over.built]\n \n \t For every pair of promoted arithmetic types L and R, there\n \t exist candidate operator functions of the form \n@@ -5413,26 +5413,6 @@ joust (cand1, cand2, warn)\n \t    /* cand2 is built-in; prefer cand1.  */\n \t    return 1;\n \t}\n-\n-      /* Kludge around broken overloading rules whereby\n-\t Integer a, b; test ? a : b; is ambiguous, since there's a builtin\n-\t that takes references and another that takes values.  */\n-      if (cand1->fn == cand2->fn\n-\t  && cand1->fn == ansi_opname (COND_EXPR))\n-\t{\n-\t  tree c1 = TREE_VEC_ELT (cand1->convs, 1);\n-\t  tree c2 = TREE_VEC_ELT (cand2->convs, 1);\n-\t  tree t1 = strip_top_quals (non_reference (TREE_TYPE (c1)));\n-\t  tree t2 = strip_top_quals (non_reference (TREE_TYPE (c2)));\n-\n-\t  if (same_type_p (t1, t2))\n-\t    {\n-\t      if (TREE_CODE (c1) == REF_BIND && TREE_CODE (c2) != REF_BIND)\n-\t\treturn 1;\n-\t      if (TREE_CODE (c1) != REF_BIND && TREE_CODE (c2) == REF_BIND)\n-\t\treturn -1;\n-\t    }\n-\t}\n     }\n \n   /* If the two functions are the same (this can happen with declarations"}]}