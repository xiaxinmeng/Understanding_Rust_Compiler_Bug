{"sha": "bfd08c89025e9b3f2d09ddf6a4555160cedb294f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmZkMDhjODkwMjVlOWIzZjJkMDlkZGY2YTQ1NTUxNjBjZWRiMjk0Zg==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2011-11-07T21:27:01Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2011-11-07T21:27:01Z"}, "message": "i386.c (ix86_builtin_vectorized_function): Handle BUILT_IN_IRINT, BUILT_IN_IRINTF, BUILT_IN_LLRINT and BUILT_IN_LLRINTF.\n\n\t* config/i386/i386.c (ix86_builtin_vectorized_function): Handle\n\tBUILT_IN_IRINT, BUILT_IN_IRINTF, BUILT_IN_LLRINT and BUILT_IN_LLRINTF.\n\nFrom-SVN: r181116", "tree": {"sha": "699cb6c0fb76816a171e13cd72cf8a2830ceee16", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/699cb6c0fb76816a171e13cd72cf8a2830ceee16"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bfd08c89025e9b3f2d09ddf6a4555160cedb294f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bfd08c89025e9b3f2d09ddf6a4555160cedb294f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bfd08c89025e9b3f2d09ddf6a4555160cedb294f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bfd08c89025e9b3f2d09ddf6a4555160cedb294f/comments", "author": null, "committer": null, "parents": [{"sha": "805eaf4ab3c76caaf717a0630e84dc75b1c33bd3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/805eaf4ab3c76caaf717a0630e84dc75b1c33bd3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/805eaf4ab3c76caaf717a0630e84dc75b1c33bd3"}], "stats": {"total": 17, "additions": 13, "deletions": 4}, "files": [{"sha": "16e14dd53d230270209ce9feb62e8552e7461f86", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfd08c89025e9b3f2d09ddf6a4555160cedb294f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfd08c89025e9b3f2d09ddf6a4555160cedb294f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bfd08c89025e9b3f2d09ddf6a4555160cedb294f", "patch": "@@ -1,8 +1,13 @@\n+2011-11-07  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/i386.c (ix86_builtin_vectorized_function): Handle\n+\tBUILT_IN_IRINT, BUILT_IN_IRINTF, BUILT_IN_LLRINT and BUILT_IN_LLRINTF.\n+\n 2011-11-07  Andrew MacLeod  <amacleod@redhat.com>\n \n \t* optabs.c (get_atomic_op_for_code): Fill in optab table at runtime so\n \tSWITCHABLE_TARGET can change the values during compilation.\n-\t(expand_atomic_fetch_op): Handle parameter change ripples for \n+\t(expand_atomic_fetch_op): Handle parameter change ripples for\n \tget_atomic_op_for_code call.\n \n 2011-11-07  Andrew MacLeod  <amacleod@redhat.com>\n@@ -19,7 +24,7 @@\n \tcall originated from here.\n \t(expand_builtin_atomic_exchange): Add origination flag.\n \t(expand_builtin_atomic_store): Add origination flag.\n-\t* expr.h (expand_atomic_exchange, expand_atomic_store): Add boolean \n+\t* expr.h (expand_atomic_exchange, expand_atomic_store): Add boolean\n \tparameters to indicate implementation fall back options.\n \n 2011-11-07  Georg-Johann Lay  <avr@gjlay.de>"}, {"sha": "4c2c800056cc922f6c1243066081237844f32406", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfd08c89025e9b3f2d09ddf6a4555160cedb294f/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfd08c89025e9b3f2d09ddf6a4555160cedb294f/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=bfd08c89025e9b3f2d09ddf6a4555160cedb294f", "patch": "@@ -29268,13 +29268,17 @@ ix86_builtin_vectorized_function (tree fndecl, tree type_out,\n \t}\n       break;\n \n+    case BUILT_IN_IRINT:\n     case BUILT_IN_LRINT:\n+    case BUILT_IN_LLRINT:\n       if (out_mode == SImode && out_n == 4\n \t  && in_mode == DFmode && in_n == 2)\n \treturn ix86_builtins[IX86_BUILTIN_VEC_PACK_SFIX];\n       break;\n \n+    case BUILT_IN_IRINTF:\n     case BUILT_IN_LRINTF:\n+    case BUILT_IN_LLRINTF:\n       if (out_mode == SImode && in_mode == SFmode)\n \t{\n \t  if (out_n == 4 && in_n == 4)"}, {"sha": "35273d95683ede4c02419edafb7aa2bed4778df0", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfd08c89025e9b3f2d09ddf6a4555160cedb294f/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfd08c89025e9b3f2d09ddf6a4555160cedb294f/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=bfd08c89025e9b3f2d09ddf6a4555160cedb294f", "patch": "@@ -2053,7 +2053,7 @@\n \treturn \"mov{l}\\t{%k1, %k0|%k0, %k1}\";\n       else if (which_alternative == 2)\n \treturn \"movabs{q}\\t{%1, %0|%0, %1}\";\n-      else if (ix86_use_lea_for_mov(insn, operands))\n+      else if (ix86_use_lea_for_mov (insn, operands))\n \treturn \"lea{q}\\t{%a1, %0|%0, %a1}\";\n       else\n \treturn \"mov{q}\\t{%1, %0|%0, %1}\";\n@@ -2290,7 +2290,7 @@\n \n     default:\n       gcc_assert (!flag_pic || LEGITIMATE_PIC_OPERAND_P (operands[1]));\n-      if (ix86_use_lea_for_mov(insn, operands))\n+      if (ix86_use_lea_for_mov (insn, operands))\n \treturn \"lea{l}\\t{%a1, %0|%0, %a1}\";\n       else\n \treturn \"mov{l}\\t{%1, %0|%0, %1}\";"}]}