{"sha": "62db841a08b9e833bd30e5fe7d8de00d5a250b74", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjJkYjg0MWEwOGI5ZTgzM2JkMzBlNWZlN2Q4ZGUwMGQ1YTI1MGI3NA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-03-07T14:41:01Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-03-07T14:41:01Z"}, "message": "[multiple changes]\n\n2012-03-07  Ed Schonberg  <schonberg@adacore.com>\n\n\t* checks.adb (Apply_Predicate_Check): Do not generate a predicate\n\tcheck is the context is an internally generated type-specific\n\tfunction.\n\t* sem_ch6.adb (Process_PPCs); the formals of internally generated\n\ttype-specific functions do not get assertion checks.\n\n2012-03-07  Yannick Moy  <moy@adacore.com>\n\n\t* gnat_rm.texi: Minor renaming of title.\n\t* gnat_ugn.texi: Minor correction.\n\n2012-03-07  Vincent Pucci  <pucci@adacore.com>\n\n\t* exp_ch4.adb (Expand_N_Quantified_Expression): Minor\n\treformating.\n\t* sem_ch4.adb (Analyze_Quantified_Expression): Creation and\n\tanalysis of the iteration scheme added in all cases.\n\t* sem_ch5.adb (Analyze_Iteration_Scheme): Minor reformating.\n\t(Analyze_Iterator_Specification): Minor reformating.\n\t* sem_res.adb (Resolve_Quantified_Expression): Resolution of\n\tthe condition added in all cases.\n\nFrom-SVN: r185050", "tree": {"sha": "895895858110ae4ed50073328eea01ef10829257", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/895895858110ae4ed50073328eea01ef10829257"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/62db841a08b9e833bd30e5fe7d8de00d5a250b74", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62db841a08b9e833bd30e5fe7d8de00d5a250b74", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62db841a08b9e833bd30e5fe7d8de00d5a250b74", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62db841a08b9e833bd30e5fe7d8de00d5a250b74/comments", "author": null, "committer": null, "parents": [{"sha": "de94a7e7ff8664d90954bd93f60b5fa2a1b20422", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de94a7e7ff8664d90954bd93f60b5fa2a1b20422", "html_url": "https://github.com/Rust-GCC/gccrs/commit/de94a7e7ff8664d90954bd93f60b5fa2a1b20422"}], "stats": {"total": 136, "additions": 86, "deletions": 50}, "files": [{"sha": "c5b2dbd17bcbbe11854978bbf8883074c8941993", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62db841a08b9e833bd30e5fe7d8de00d5a250b74/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62db841a08b9e833bd30e5fe7d8de00d5a250b74/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=62db841a08b9e833bd30e5fe7d8de00d5a250b74", "patch": "@@ -1,3 +1,27 @@\n+2012-03-07  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* checks.adb (Apply_Predicate_Check): Do not generate a predicate\n+\tcheck is the context is an internally generated type-specific\n+\tfunction.\n+\t* sem_ch6.adb (Process_PPCs); the formals of internally generated\n+\ttype-specific functions do not get assertion checks.\n+\n+2012-03-07  Yannick Moy  <moy@adacore.com>\n+\n+\t* gnat_rm.texi: Minor renaming of title.\n+\t* gnat_ugn.texi: Minor correction.\n+\n+2012-03-07  Vincent Pucci  <pucci@adacore.com>\n+\n+\t* exp_ch4.adb (Expand_N_Quantified_Expression): Minor\n+\treformating.\n+\t* sem_ch4.adb (Analyze_Quantified_Expression): Creation and\n+\tanalysis of the iteration scheme added in all cases.\n+\t* sem_ch5.adb (Analyze_Iteration_Scheme): Minor reformating.\n+\t(Analyze_Iterator_Specification): Minor reformating.\n+\t* sem_res.adb (Resolve_Quantified_Expression): Resolution of\n+\tthe condition added in all cases.\n+\n 2012-03-07  Thomas Quinot  <quinot@adacore.com>\n \n \t* einfo.adb, einfo.ads: Add flag Reverse_Storage_Order."}, {"sha": "ab628b30f8bf64d3edf6f3bc7545730be0b20231", "filename": "gcc/ada/checks.adb", "status": "modified", "additions": 23, "deletions": 3, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62db841a08b9e833bd30e5fe7d8de00d5a250b74/gcc%2Fada%2Fchecks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62db841a08b9e833bd30e5fe7d8de00d5a250b74/gcc%2Fada%2Fchecks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fchecks.adb?ref=62db841a08b9e833bd30e5fe7d8de00d5a250b74", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2012, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -31,6 +31,7 @@ with Exp_Ch2;  use Exp_Ch2;\n with Exp_Ch4;  use Exp_Ch4;\n with Exp_Ch11; use Exp_Ch11;\n with Exp_Pakd; use Exp_Pakd;\n+with Exp_Tss;  use Exp_Tss;\n with Exp_Util; use Exp_Util;\n with Elists;   use Elists;\n with Eval_Fat; use Eval_Fat;\n@@ -1778,10 +1779,29 @@ package body Checks is\n    ---------------------------\n \n    procedure Apply_Predicate_Check (N : Node_Id; Typ : Entity_Id) is\n+      S : Entity_Id;\n    begin\n       if Present (Predicate_Function (Typ)) then\n-         Insert_Action (N,\n-           Make_Predicate_Check (Typ, Duplicate_Subexpr (N)));\n+\n+         --  A predicate check does not apply within internally generated\n+         --  subprograms, such as TSS functions.\n+\n+         S := Current_Scope;\n+         while Present (S)\n+           and then not Is_Subprogram (S)\n+         loop\n+            S := Scope (S);\n+         end loop;\n+\n+         if Present (S)\n+           and then Get_TSS_Name (S) /= TSS_Null\n+         then\n+            return;\n+\n+         else\n+            Insert_Action (N,\n+              Make_Predicate_Check (Typ, Duplicate_Subexpr (N)));\n+         end if;\n       end if;\n    end Apply_Predicate_Check;\n "}, {"sha": "416dd98e1c59c13f4bea4ab608096231f3e061c3", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62db841a08b9e833bd30e5fe7d8de00d5a250b74/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62db841a08b9e833bd30e5fe7d8de00d5a250b74/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=62db841a08b9e833bd30e5fe7d8de00d5a250b74", "patch": "@@ -7916,14 +7916,9 @@ package body Exp_Ch4 is\n             Make_Exit_Statement (Loc)));\n \n       if Present (Loop_Parameter_Specification (N)) then\n-         I_Scheme :=\n-           Make_Iteration_Scheme (Loc,\n-              Loop_Parameter_Specification =>\n-                Loop_Parameter_Specification (N));\n+         I_Scheme := Relocate_Node (Parent (Loop_Parameter_Specification (N)));\n       else\n-         I_Scheme :=\n-           Make_Iteration_Scheme (Loc,\n-             Iterator_Specification => Iterator_Specification (N));\n+         I_Scheme := Relocate_Node (Parent (Iterator_Specification (N)));\n       end if;\n \n       Append_To (Actions,"}, {"sha": "4fccee30085fd25bad4b4e00d8a2a23a425cd2f2", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62db841a08b9e833bd30e5fe7d8de00d5a250b74/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62db841a08b9e833bd30e5fe7d8de00d5a250b74/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=62db841a08b9e833bd30e5fe7d8de00d5a250b74", "patch": "@@ -71,7 +71,7 @@ AdaCore\n * About This Guide::\n * Implementation Defined Pragmas::\n * Implementation Defined Attributes::\n-* Implementation Defined Restrictions::\n+* Standard and Implementation Defined Restrictions::\n * Implementation Advice::\n * Implementation Defined Characteristics::\n * Intrinsic Subprograms::\n@@ -289,7 +289,7 @@ Implementation Defined Attributes\n * Wchar_T_Size::\n * Word_Size::\n \n-Implementation Defined Restrictions\n+Standard and Implementation Defined Restrictions\n \n * Partition-Wide Restrictions::\n * Program Unit Level Restrictions::\n@@ -650,7 +650,7 @@ implementation-dependent attributes, which can be used to extend and\n enhance the functionality of the compiler.\n \n @item\n-@ref{Implementation Defined Restrictions}, lists GNAT\n+@ref{Standard and Implementation Defined Restrictions}, lists GNAT\n implementation-dependent restrictions, which can be used to extend and\n enhance the functionality of the compiler.\n \n@@ -6919,8 +6919,8 @@ package @code{Interfaces.C}.\n @code{Standard'Word_Size} (@code{Standard} is the only permissible\n prefix) provides the value @code{System.Word_Size}.\n \n-@node Implementation Defined Restrictions\n-@chapter Implementation Defined Restrictions\n+@node Standard and Implementation Defined Restrictions\n+@chapter Standard and Implementation Defined Restrictions\n \n @noindent\n All RM defined Restriction identifiers are implemented:\n@@ -9935,7 +9935,7 @@ See documentation in the sources of the run time mentioned in paragraph\n @code{Restrictions}.  See 13.12(7).\n @end cartouche\n @noindent\n-@xref{Implementation Defined Restrictions}.\n+@xref{Standard and Implementation Defined Restrictions}.\n \n @sp 1\n @cartouche"}, {"sha": "4bd7bba9570c03be94dc5c8786041fe795967424", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62db841a08b9e833bd30e5fe7d8de00d5a250b74/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62db841a08b9e833bd30e5fe7d8de00d5a250b74/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=62db841a08b9e833bd30e5fe7d8de00d5a250b74", "patch": "@@ -5953,6 +5953,7 @@ When no switch @option{^-gnatw^/WARNINGS^} is used, this is equivalent to:\n \n @table @option\n @c !sort!\n+@item -gnatw.a\n @item -gnatwB\n @item -gnatw.b\n @item -gnatwC"}, {"sha": "357053354b37508d43c52529c2a4238c1559088d", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 2, "deletions": 11, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62db841a08b9e833bd30e5fe7d8de00d5a250b74/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62db841a08b9e833bd30e5fe7d8de00d5a250b74/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=62db841a08b9e833bd30e5fe7d8de00d5a250b74", "patch": "@@ -3398,22 +3398,12 @@ package body Sem_Ch4 is\n       Iterator : Node_Id;\n \n    begin\n-      Set_Etype  (Ent,  Standard_Void_Type);\n+      Set_Etype  (Ent, Standard_Void_Type);\n       Set_Scope  (Ent, Current_Scope);\n       Set_Parent (Ent, N);\n \n       Check_SPARK_Restriction (\"quantified expression is not allowed\", N);\n \n-      --  If expansion is enabled (and not in Alfa mode), the condition is\n-      --  analyzed after rewritten as a loop. So we only need to set the type.\n-\n-      if Operating_Mode /= Check_Semantics\n-        and then not Alfa_Mode\n-      then\n-         Set_Etype (N, Standard_Boolean);\n-         return;\n-      end if;\n-\n       if Present (Loop_Parameter_Specification (N)) then\n          Iterator :=\n            Make_Iteration_Scheme (Loc,\n@@ -3438,6 +3428,7 @@ package body Sem_Ch4 is\n          Set_Iterator_Specification\n            (N, Iterator_Specification (Iterator));\n          Set_Loop_Parameter_Specification (N, Empty);\n+         Set_Parent (Iterator_Specification (Iterator), Iterator);\n       end if;\n \n       Analyze (Condition (N));"}, {"sha": "fadfd6d292a46e499328ee72ea4cb8d17e81ba93", "filename": "gcc/ada/sem_ch5.adb", "status": "modified", "additions": 21, "deletions": 16, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62db841a08b9e833bd30e5fe7d8de00d5a250b74/gcc%2Fada%2Fsem_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62db841a08b9e833bd30e5fe7d8de00d5a250b74/gcc%2Fada%2Fsem_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch5.adb?ref=62db841a08b9e833bd30e5fe7d8de00d5a250b74", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2012, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -2102,7 +2102,14 @@ package body Sem_Ch5 is\n                --  because the second one may be created in a different scope,\n                --  e.g. a precondition procedure, leading to a crash in GIGI.\n \n-               if No (Etype (Id)) or else Etype (Id) = Any_Type then\n+               --  Note that if the parent node is a quantified expression,\n+               --  this preservation is delayed until the expansion of the\n+               --  quantified expression where the node is rewritten as an\n+               --  expression with actions.\n+\n+               if (No (Etype (Id)) or else Etype (Id) = Any_Type)\n+                 and then Nkind (Parent (N)) /= N_Quantified_Expression\n+               then\n                   Set_Etype (Id, Etype (DS));\n                end if;\n \n@@ -2214,9 +2221,9 @@ package body Sem_Ch5 is\n       end;\n    end Analyze_Iteration_Scheme;\n \n-   -------------------------------------\n-   --  Analyze_Iterator_Specification --\n-   -------------------------------------\n+   ------------------------------------\n+   -- Analyze_Iterator_Specification --\n+   ------------------------------------\n \n    procedure Analyze_Iterator_Specification (N : Node_Id) is\n       Loc       : constant Source_Ptr := Sloc (N);\n@@ -2228,15 +2235,7 @@ package body Sem_Ch5 is\n       Typ : Entity_Id;\n \n    begin\n-      --  In semantics/Alfa modes, we won't be further expanding the loop, so\n-      --  introduce loop variable so that loop body can be properly analyzed.\n-      --  Otherwise this happens after expansion.\n-\n-      if Operating_Mode = Check_Semantics\n-        or else Alfa_Mode\n-      then\n-         Enter_Name (Def_Id);\n-      end if;\n+      Enter_Name (Def_Id);\n \n       Set_Ekind (Def_Id, E_Variable);\n \n@@ -2249,7 +2248,13 @@ package body Sem_Ch5 is\n       --  The declaration must be a renaming because the body of the loop may\n       --  assign to elements.\n \n-      if not Is_Entity_Name (Iter_Name) then\n+      --  Note that if the parent node is a quantified expression, this\n+      --  declaration is created during the expansion of the quantified\n+      --  expression where the node is rewritten as an expression with actions.\n+\n+      if not Is_Entity_Name (Iter_Name)\n+        and then Nkind (Parent (Parent (N))) /= N_Quantified_Expression\n+      then\n          declare\n             Id   : constant Entity_Id := Make_Temporary (Loc, 'R', Iter_Name);\n             Decl : Node_Id;\n@@ -2281,7 +2286,7 @@ package body Sem_Ch5 is\n       --  Iterate is not a reserved name. What matter is that the return type\n       --  of the function is an iterator type.\n \n-      else\n+      elsif Is_Entity_Name (Iter_Name) then\n          Analyze (Iter_Name);\n \n          if Nkind (Iter_Name) = N_Function_Call then"}, {"sha": "1e4ed0b8ecb18e20034d3c8b20b2882516010af9", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62db841a08b9e833bd30e5fe7d8de00d5a250b74/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62db841a08b9e833bd30e5fe7d8de00d5a250b74/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=62db841a08b9e833bd30e5fe7d8de00d5a250b74", "patch": "@@ -9892,6 +9892,13 @@ package body Sem_Ch6 is\n          Designator := Body_Id;\n       end if;\n \n+      --  Internally generated subprograms, such as type-specific functions,\n+      --  don't get assertions checks.\n+\n+      if Get_TSS_Name (Designator) /= TSS_Null then\n+         return;\n+      end if;\n+\n       --  Grab preconditions from spec\n \n       if Present (Spec_Id) then"}, {"sha": "4615bca794d2d16451d334bb0fd2d275ba444691", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62db841a08b9e833bd30e5fe7d8de00d5a250b74/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62db841a08b9e833bd30e5fe7d8de00d5a250b74/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=62db841a08b9e833bd30e5fe7d8de00d5a250b74", "patch": "@@ -8278,13 +8278,6 @@ package body Sem_Res is\n    begin\n       if not Alfa_Mode then\n \n-         --  If expansion is enabled, analysis is delayed until the expresssion\n-         --  is rewritten as a loop.\n-\n-         if Operating_Mode /= Check_Semantics then\n-            return;\n-         end if;\n-\n          --  The loop structure is already resolved during its analysis, only\n          --  the resolution of the condition needs to be done. Expansion is\n          --  disabled so that checks and other generated code are inserted in"}]}