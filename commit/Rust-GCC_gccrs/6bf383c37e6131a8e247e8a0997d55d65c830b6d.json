{"sha": "6bf383c37e6131a8e247e8a0997d55d65c830b6d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmJmMzgzYzM3ZTYxMzFhOGUyNDdlOGEwOTk3ZDU1ZDY1YzgzMGI2ZA==", "commit": {"author": {"name": "Xi Ruoyao", "email": "xry111@mengyan1223.wang", "date": "2021-06-28T05:54:58Z"}, "committer": {"name": "Xi Ruoyao", "email": "xry111@mengyan1223.wang", "date": "2021-06-30T02:43:20Z"}, "message": "fixinc: don't \"fix\" machine names in __has_include(...) [PR91085]\n\nfixincludes/\n\n\tPR other/91085\n\t* fixfixes.c (check_has_inc): New static function.\n\t  (machine_name_fix): Don't replace header names in\n\t  __has_include(...).\n\t* inclhack.def (machine_name): Adjust test.\n\t* tests/base/testing.h: Update.", "tree": {"sha": "490acc40b9a3bddc68906ea347bff939b3798e3c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/490acc40b9a3bddc68906ea347bff939b3798e3c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6bf383c37e6131a8e247e8a0997d55d65c830b6d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEEunTLnZqV9wGnXaw2V5HFsy7NNwFAmDb2oUACgkQ2V5HFsy7\nNNx9jBAAxy2YGmKohhu9VpVtQ10y5XWpGn6cnepwXNwGdopls/fR91HdiS15zo/P\nuFl4s74JnU3olbx/7K3s+pvDKN9Ky93vluffQGiQua2CKdO/BZLL/1ScD5Tf5KaC\nY2cUZZh7uig1Vmj0qWm9WgYcg0UckHwPJuCQWN23tW3jxyDi3SQJcH9ELKBuRoS8\nw3nEKm5q/3hSMK0IxihxdYtoBHekAClZu0QPp5co3ilU87YkRGnCQ1HTpKEzFRO3\n3nqH70vho6NlJrM+gKDhbq6i9IHgiMCo6GvTltpxiIFfoMp57tpZ03uyq5Pc/Ds4\ngJT511svlFyDKUXf5bR8U6AxNltSvtmplvcuJHQIpIPsjAX2fXzqpBIZoMM6sv8N\nmdOM2ODILZ6l3OjkAsZhhp8SXRV+loE9gs2zE8i5uGsayzm8umZNk/9UNdV/+vfL\nw+jZYqLsTrATDLBy/bonJAFmM0Ogy1MQ5I8lTdBL5pFHLlclovyTNASiDeFZZANo\nTWh+a642r0IcjxM6tuvSkJXc7phb5s+MTlHM0OyJg3WT7mkwd+vjTHqiA8A4Fzn0\nGa2MMqTipwOfvP/r+sG+vZwXDpeW8hX05UjOzxXwsqPalBnWG2TNfU1do80WINIY\nefnQV6gTuOUkwmNQKeJLQo5ZeuAOxDnikhrPQ+5E9/qnxzZWun0=\n=n1u0\n-----END PGP SIGNATURE-----", "payload": "tree 490acc40b9a3bddc68906ea347bff939b3798e3c\nparent ed392e9db434898eccec81edd85323d21d555fe9\nauthor Xi Ruoyao <xry111@mengyan1223.wang> 1624859698 +0800\ncommitter Xi Ruoyao <xry111@mengyan1223.wang> 1625021000 +0800\n\nfixinc: don't \"fix\" machine names in __has_include(...) [PR91085]\n\nfixincludes/\n\n\tPR other/91085\n\t* fixfixes.c (check_has_inc): New static function.\n\t  (machine_name_fix): Don't replace header names in\n\t  __has_include(...).\n\t* inclhack.def (machine_name): Adjust test.\n\t* tests/base/testing.h: Update.\n"}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6bf383c37e6131a8e247e8a0997d55d65c830b6d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6bf383c37e6131a8e247e8a0997d55d65c830b6d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6bf383c37e6131a8e247e8a0997d55d65c830b6d/comments", "author": {"login": "xry111", "id": 8733039, "node_id": "MDQ6VXNlcjg3MzMwMzk=", "avatar_url": "https://avatars.githubusercontent.com/u/8733039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xry111", "html_url": "https://github.com/xry111", "followers_url": "https://api.github.com/users/xry111/followers", "following_url": "https://api.github.com/users/xry111/following{/other_user}", "gists_url": "https://api.github.com/users/xry111/gists{/gist_id}", "starred_url": "https://api.github.com/users/xry111/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xry111/subscriptions", "organizations_url": "https://api.github.com/users/xry111/orgs", "repos_url": "https://api.github.com/users/xry111/repos", "events_url": "https://api.github.com/users/xry111/events{/privacy}", "received_events_url": "https://api.github.com/users/xry111/received_events", "type": "User", "site_admin": false}, "committer": {"login": "xry111", "id": 8733039, "node_id": "MDQ6VXNlcjg3MzMwMzk=", "avatar_url": "https://avatars.githubusercontent.com/u/8733039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xry111", "html_url": "https://github.com/xry111", "followers_url": "https://api.github.com/users/xry111/followers", "following_url": "https://api.github.com/users/xry111/following{/other_user}", "gists_url": "https://api.github.com/users/xry111/gists{/gist_id}", "starred_url": "https://api.github.com/users/xry111/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xry111/subscriptions", "organizations_url": "https://api.github.com/users/xry111/orgs", "repos_url": "https://api.github.com/users/xry111/repos", "events_url": "https://api.github.com/users/xry111/events{/privacy}", "received_events_url": "https://api.github.com/users/xry111/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ed392e9db434898eccec81edd85323d21d555fe9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed392e9db434898eccec81edd85323d21d555fe9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ed392e9db434898eccec81edd85323d21d555fe9"}], "stats": {"total": 50, "additions": 46, "deletions": 4}, "files": [{"sha": "404b420f302c7dd42de63ec524822dbe4a3226e8", "filename": "fixincludes/fixfixes.c", "status": "modified", "additions": 43, "deletions": 2, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bf383c37e6131a8e247e8a0997d55d65c830b6d/fixincludes%2Ffixfixes.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bf383c37e6131a8e247e8a0997d55d65c830b6d/fixincludes%2Ffixfixes.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ffixfixes.c?ref=6bf383c37e6131a8e247e8a0997d55d65c830b6d", "patch": "@@ -477,6 +477,39 @@ FIX_PROC_HEAD( char_macro_def_fix )\n   fputs (text, stdout);\n }\n \n+/* Check if the pattern at pos is actually in a \"__has_include(...)\"\n+   directive.  Return the pointer to the ')' of this\n+   \"__has_include(...)\" if it is, NULL otherwise.  */\n+static const char *\n+check_has_inc (const char *begin, const char *pos, const char *end)\n+{\n+  static const char has_inc[] = \"__has_include\";\n+  const size_t has_inc_len = sizeof (has_inc) - 1;\n+  const char *p;\n+\n+  for (p = memmem (begin, pos - begin, has_inc, has_inc_len);\n+       p != NULL;\n+       p = memmem (p, pos - p, has_inc, has_inc_len))\n+    {\n+      p += has_inc_len;\n+      while (p < end && ISSPACE (*p))\n+        p++;\n+\n+      /* \"__has_include\" may appear as \"defined(__has_include)\",\n+         search for the next appearance then.  */\n+      if (*p != '(')\n+        continue;\n+\n+      /* To avoid too much complexity, just hope there is never a\n+         ')' in a header name.  */\n+      p = memchr (p, ')', end - p);\n+      if (p == NULL || p > pos)\n+        return p;\n+    }\n+\n+  return NULL;\n+}\n+\n /* Fix for machine name #ifdefs that are not in the namespace reserved\n    by the C standard.  They won't be defined if compiling with -ansi,\n    and the headers will break.  We go to some trouble to only change\n@@ -524,7 +557,7 @@ FIX_PROC_HEAD( machine_name_fix )\n       /* If the 'name_pat' matches in between base and limit, we have\n          a bogon.  It is not worth the hassle of excluding comments\n          because comments on #if/#ifdef lines are rare, and strings on\n-         such lines are illegal.\n+         such lines are only legal in a \"__has_include\" directive.\n \n          REG_NOTBOL means 'base' is not at the beginning of a line, which\n          shouldn't matter since the name_re has no ^ anchor, but let's\n@@ -544,8 +577,16 @@ FIX_PROC_HEAD( machine_name_fix )\n             break;\n \n           p = base + match[0].rm_so;\n-          base += match[0].rm_eo;\n \n+          /* Check if the match is in __has_include(...) (PR 91085). */\n+          q = check_has_inc (base, p, limit);\n+          if (q) \n+            {\n+              base = q + 1;\n+              goto again;\n+            }\n+\n+          base += match[0].rm_eo;\n           /* One more test: if on the same line we have the same string\n              with the appropriate underscores, then leave it alone.\n              We want exactly two leading and trailing underscores.  */"}, {"sha": "4db311713ef2ff01cb7f060970264cd65e1f4b89", "filename": "fixincludes/inclhack.def", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bf383c37e6131a8e247e8a0997d55d65c830b6d/fixincludes%2Finclhack.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bf383c37e6131a8e247e8a0997d55d65c830b6d/fixincludes%2Finclhack.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Finclhack.def?ref=6bf383c37e6131a8e247e8a0997d55d65c830b6d", "patch": "@@ -3151,7 +3151,8 @@ fix = {\n     c_fix     = machine_name;\n \n     test_text = \"/* MACH_DIFF: */\\n\"\n-    \"#if defined( i386 ) || defined( sparc ) || defined( vax )\"\n+    \"#if defined( i386 ) || defined( sparc ) || defined( vax ) || \"\n+    \"defined( linux ) || __has_include ( <linux.h> )\"\n     \"\\n/* no uniform test, so be careful  :-) */\";\n };\n "}, {"sha": "8b3accaf04ecb5c1c0ea711419fe5e9f98b70451", "filename": "fixincludes/tests/base/testing.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bf383c37e6131a8e247e8a0997d55d65c830b6d/fixincludes%2Ftests%2Fbase%2Ftesting.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bf383c37e6131a8e247e8a0997d55d65c830b6d/fixincludes%2Ftests%2Fbase%2Ftesting.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ftests%2Fbase%2Ftesting.h?ref=6bf383c37e6131a8e247e8a0997d55d65c830b6d", "patch": "@@ -64,7 +64,7 @@ BSD43__IOWR('T', 1) /* Some are multi-line */\n \n #if defined( MACHINE_NAME_CHECK )\n /* MACH_DIFF: */\n-#if defined( i386 ) || defined( sparc ) || defined( vax )\n+#if defined( i386 ) || defined( sparc ) || defined( vax ) || defined( linux ) || __has_include ( <linux.h> )\n /* no uniform test, so be careful  :-) */\n #endif  /* MACHINE_NAME_CHECK */\n "}]}