{"sha": "8dfb08abc35ba292ba73a0d19a8cb4f573604ab7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGRmYjA4YWJjMzViYTI5MmJhNzNhMGQxOWE4Y2I0ZjU3MzYwNGFiNw==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely.gcc@gmail.com", "date": "2012-01-08T12:34:00Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2012-01-08T12:34:00Z"}, "message": "printers.py (StdForwardListPrinter): Add.\n\n\t* python/libstdcxx/v6/printers.py (StdForwardListPrinter): Add.\n\t* testsuite/libstdc++-prettyprinters/cxx11.cc: New.\n\nFrom-SVN: r182989", "tree": {"sha": "e0cc1633b49e1a0648f3dbf0903811828f655fcd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e0cc1633b49e1a0648f3dbf0903811828f655fcd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8dfb08abc35ba292ba73a0d19a8cb4f573604ab7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8dfb08abc35ba292ba73a0d19a8cb4f573604ab7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8dfb08abc35ba292ba73a0d19a8cb4f573604ab7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8dfb08abc35ba292ba73a0d19a8cb4f573604ab7/comments", "author": null, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "facdaed3a25abedf5186e42dbbe2fa9dee2cffb5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/facdaed3a25abedf5186e42dbbe2fa9dee2cffb5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/facdaed3a25abedf5186e42dbbe2fa9dee2cffb5"}], "stats": {"total": 133, "additions": 133, "deletions": 0}, "files": [{"sha": "a2d2107a05ae8d4b621112634b105c22ce41579b", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8dfb08abc35ba292ba73a0d19a8cb4f573604ab7/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8dfb08abc35ba292ba73a0d19a8cb4f573604ab7/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=8dfb08abc35ba292ba73a0d19a8cb4f573604ab7", "patch": "@@ -1,3 +1,8 @@\n+2012-01-08  Jonathan Wakely  <jwakely.gcc@gmail.com>\n+\n+\t* python/libstdcxx/v6/printers.py (StdForwardListPrinter): Add.\n+\t* testsuite/libstdc++-prettyprinters/cxx11.cc: New.\n+\n 2012-01-06  Jason Merrill  <jason@redhat.com>\n \n \t* testsuite/abi/demangle/regression/cw-16.cc (main): Adjust"}, {"sha": "81c33c733e68a083a8559bdb367433408e2b96e6", "filename": "libstdc++-v3/python/libstdcxx/v6/printers.py", "status": "modified", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8dfb08abc35ba292ba73a0d19a8cb4f573604ab7/libstdc%2B%2B-v3%2Fpython%2Flibstdcxx%2Fv6%2Fprinters.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8dfb08abc35ba292ba73a0d19a8cb4f573604ab7/libstdc%2B%2B-v3%2Fpython%2Flibstdcxx%2Fv6%2Fprinters.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fpython%2Flibstdcxx%2Fv6%2Fprinters.py?ref=8dfb08abc35ba292ba73a0d19a8cb4f573604ab7", "patch": "@@ -687,6 +687,49 @@ def children (self):\n     def display_hint (self):\n         return 'map'\n \n+class StdForwardListPrinter:\n+    \"Print a std::forward_list\"\n+\n+    class _iterator:\n+        def __init__(self, nodetype, head):\n+            self.nodetype = nodetype\n+            self.base = head['_M_next']\n+            self.count = 0\n+\n+        def __iter__(self):\n+            return self\n+\n+        def next(self):\n+            if self.base == 0:\n+                raise StopIteration\n+            elt = self.base.cast(self.nodetype).dereference()\n+            self.base = elt['_M_next']\n+            count = self.count\n+            self.count = self.count + 1\n+            return ('[%d]' % count, elt['_M_value'])\n+\n+    def __init__(self, typename, val):\n+        self.val = val\n+        self.typename = typename\n+\n+    def children(self):\n+        itype = self.val.type.template_argument(0)\n+        # If the inferior program is compiled with -D_GLIBCXX_DEBUG\n+        # some of the internal implementation details change.\n+        if self.typename == \"std::forward_list\":\n+            nodetype = gdb.lookup_type('std::_Fwd_list_node<%s>' % itype).pointer()\n+        elif self.typename == \"std::__debug::list\":\n+            nodetype = gdb.lookup_type('std::__norm::_Fwd_list_node<%s>' % itype).pointer()\n+        else:\n+            raise ValueError, \"Cannot cast forward_list node for forward_list printer.\"\n+        return self._iterator(nodetype, self.val['_M_impl']['_M_head'])\n+\n+    def to_string(self):\n+        if self.val['_M_impl']['_M_head']['_M_next'] == 0:\n+            return 'empty %s' % (self.typename)\n+        return '%s' % (self.typename)\n+\n+\n # A \"regular expression\" printer which conforms to the\n # \"SubPrettyPrinter\" protocol from gdb.printing.\n class RxPrinter(object):\n@@ -812,6 +855,7 @@ def build_libstdcxx_dictionary ():\n     libstdcxx_printer.add('std::unordered_set', Tr1UnorderedSetPrinter)\n     libstdcxx_printer.add('std::unordered_multimap', Tr1UnorderedMapPrinter)\n     libstdcxx_printer.add('std::unordered_multiset', Tr1UnorderedSetPrinter)\n+    libstdcxx_printer.add('std::forward_list', StdForwardListPrinter)\n \n     libstdcxx_printer.add('std::tr1::shared_ptr', StdPointerPrinter)\n     libstdcxx_printer.add('std::tr1::weak_ptr', StdPointerPrinter)\n@@ -833,6 +877,8 @@ def build_libstdcxx_dictionary ():\n                           Tr1UnorderedMapPrinter)\n     libstdcxx_printer.add('std::__debug::unordered_multiset',\n                           Tr1UnorderedSetPrinter)\n+    libstdcxx_printer.add('std::__debug::forward_list',\n+                          StdForwardListPrinter)\n \n \n     # Extensions."}, {"sha": "6915526d90b0861fcb7506e6483e50b44219c9bf", "filename": "libstdc++-v3/testsuite/libstdc++-prettyprinters/cxx11.cc", "status": "added", "additions": 82, "deletions": 0, "changes": 82, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8dfb08abc35ba292ba73a0d19a8cb4f573604ab7/libstdc%2B%2B-v3%2Ftestsuite%2Flibstdc%2B%2B-prettyprinters%2Fcxx11.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8dfb08abc35ba292ba73a0d19a8cb4f573604ab7/libstdc%2B%2B-v3%2Ftestsuite%2Flibstdc%2B%2B-prettyprinters%2Fcxx11.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Flibstdc%2B%2B-prettyprinters%2Fcxx11.cc?ref=8dfb08abc35ba292ba73a0d19a8cb4f573604ab7", "patch": "@@ -0,0 +1,82 @@\n+// { dg-do run }\n+// { dg-options \"-std=gnu++11 -g\" }\n+\n+// Copyright (C) 2011 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <forward_list>\n+#include <unordered_map>\n+#include <unordered_set>\n+#include <string>\n+#include <iostream>\n+\n+template<class T>\n+void\n+placeholder(const T &s)\n+{\n+  std::cout << s;\n+}\n+\n+template<class T, class S>\n+void\n+placeholder(const std::pair<T,S> &s)\n+{\n+  std::cout << s.first;\n+}\n+\n+template<class T>\n+void\n+use(const T &container)\n+{\n+  for (typename T::const_iterator i = container.begin();\n+       i != container.end();\n+       ++i)\n+    placeholder(*i);\n+}\n+\n+int\n+main()\n+{\n+  std::forward_list<int> efl;\n+// { dg-final { note-test efl \"empty std::forward_list\" } }\n+\n+  std::forward_list<int> fl;\n+  fl.push_front(2);\n+  fl.push_front(1);\n+// { dg-final { note-test fl {std::forward_list = {[0] = 1, [1] = 2}} } }\n+\n+  std::unordered_map<int, std::string> eum;\n+// { dg-final { note-test eum \"std::unordered_map with 0 elements\" } }\n+  std::unordered_multimap<int, std::string> eumm;\n+// { dg-final { note-test eumm \"std::unordered_multimap with 0 elements\" } }\n+  std::unordered_set<int> eus;\n+// { dg-final { note-test eus \"std::unordered_set with 0 elements\" } }\n+  std::unordered_multiset<int> eums;\n+// { dg-final { note-test eums \"std::unordered_multiset with 0 elements\" } }\n+\n+  placeholder(\"\"); // Mark SPOT\n+  use(efl);\n+  use(fl);\n+  use(eum);\n+  use(eumm);\n+  use(eus);\n+  use(eums);\n+\n+  return 0;\n+}\n+\n+// { dg-final { gdb-test SPOT } }"}]}