{"sha": "fde5868f3667b2ec0fb43c1b6f8c737be549fcce", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmRlNTg2OGYzNjY3YjJlYzBmYjQzYzFiNmY4YzczN2JlNTQ5ZmNjZQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@adacore.com", "date": "2021-01-29T15:57:39Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2021-05-07T09:28:58Z"}, "message": "[Ada] Computation of Shift_Left and large signed values\n\ngcc/ada/\n\n\t* sem_eval.adb (Fold_Shift): Fix computation of Shift_Left\n\tresulting in negative signed values.", "tree": {"sha": "4ac9b362df9ce57c8e54f770fd7bbe0a65c47b7f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4ac9b362df9ce57c8e54f770fd7bbe0a65c47b7f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fde5868f3667b2ec0fb43c1b6f8c737be549fcce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fde5868f3667b2ec0fb43c1b6f8c737be549fcce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fde5868f3667b2ec0fb43c1b6f8c737be549fcce", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fde5868f3667b2ec0fb43c1b6f8c737be549fcce/comments", "author": {"login": "ArnaudCharlet", "id": 30291825, "node_id": "MDQ6VXNlcjMwMjkxODI1", "avatar_url": "https://avatars.githubusercontent.com/u/30291825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArnaudCharlet", "html_url": "https://github.com/ArnaudCharlet", "followers_url": "https://api.github.com/users/ArnaudCharlet/followers", "following_url": "https://api.github.com/users/ArnaudCharlet/following{/other_user}", "gists_url": "https://api.github.com/users/ArnaudCharlet/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArnaudCharlet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArnaudCharlet/subscriptions", "organizations_url": "https://api.github.com/users/ArnaudCharlet/orgs", "repos_url": "https://api.github.com/users/ArnaudCharlet/repos", "events_url": "https://api.github.com/users/ArnaudCharlet/events{/privacy}", "received_events_url": "https://api.github.com/users/ArnaudCharlet/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f3a8f939ba0473156f6c932f1acba2428e640011", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f3a8f939ba0473156f6c932f1acba2428e640011", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f3a8f939ba0473156f6c932f1acba2428e640011"}], "stats": {"total": 36, "additions": 19, "deletions": 17}, "files": [{"sha": "2f1acc7ce121cd8a568fa3f9fb0b8b1cc8987a01", "filename": "gcc/ada/sem_eval.adb", "status": "modified", "additions": 19, "deletions": 17, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fde5868f3667b2ec0fb43c1b6f8c737be549fcce/gcc%2Fada%2Fsem_eval.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fde5868f3667b2ec0fb43c1b6f8c737be549fcce/gcc%2Fada%2Fsem_eval.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_eval.adb?ref=fde5868f3667b2ec0fb43c1b6f8c737be549fcce", "patch": "@@ -4983,7 +4983,7 @@ package body Sem_Eval is\n          end if;\n       end Check_Elab_Call;\n \n-      Modulus : Uint;\n+      Modulus, Val : Uint;\n \n    begin\n       if Compile_Time_Known_Value (Left)\n@@ -4994,23 +4994,25 @@ package body Sem_Eval is\n          if Op = N_Op_Shift_Left then\n             Check_Elab_Call;\n \n-            declare\n-               Modulus : Uint;\n-            begin\n-               if Is_Modular_Integer_Type (Typ) then\n-                  Modulus := Einfo.Modulus (Typ);\n-               else\n-                  Modulus := Uint_2 ** RM_Size (Typ);\n-               end if;\n+            if Is_Modular_Integer_Type (Typ) then\n+               Modulus := Einfo.Modulus (Typ);\n+            else\n+               Modulus := Uint_2 ** RM_Size (Typ);\n+            end if;\n \n-               --  Fold Shift_Left (X, Y) by computing (X * 2**Y) rem modulus\n+            --  Fold Shift_Left (X, Y) by computing\n+            --  (X * 2**Y) rem modulus [- Modulus]\n \n-               Fold_Uint\n-                 (N,\n-                  (Expr_Value (Left) * (Uint_2 ** Expr_Value (Right)))\n-                    rem Modulus,\n-                  Static => Static);\n-            end;\n+            Val := (Expr_Value (Left) * (Uint_2 ** Expr_Value (Right)))\n+                     rem Modulus;\n+\n+            if Is_Modular_Integer_Type (Typ)\n+              or else Val < Modulus / Uint_2\n+            then\n+               Fold_Uint (N, Val, Static => Static);\n+            else\n+               Fold_Uint (N, Val - Modulus, Static => Static);\n+            end if;\n \n          elsif Op = N_Op_Shift_Right then\n             Check_Elab_Call;\n@@ -5042,7 +5044,7 @@ package body Sem_Eval is\n             Check_Elab_Call;\n \n             declare\n-               Two_Y   : constant Uint := Uint_2 ** Expr_Value (Right);\n+               Two_Y : constant Uint := Uint_2 ** Expr_Value (Right);\n             begin\n                if Is_Modular_Integer_Type (Typ) then\n                   Modulus := Einfo.Modulus (Typ);"}]}