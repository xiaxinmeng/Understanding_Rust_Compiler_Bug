{"sha": "1ee488391c01524d409dfe02f6c9d4b53d6f451f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWVlNDg4MzkxYzAxNTI0ZDQwOWRmZTAyZjZjOWQ0YjUzZDZmNDUxZg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2011-10-27T19:53:28Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2011-10-27T19:53:28Z"}, "message": "sse.md (avx_cvtpd2dq256_2, [...]): New expanders.\n\n\t* config/i386/sse.md (avx_cvtpd2dq256_2, avx_cvttpd2dq256_2,\n\tvec_pack_sfix_trunc_v4df, vec_pack_sfix_v4df): New expanders.\n\t(*avx_cvtpd2dq256_2, *avx_cvttpd2dq256_2): New insns.\n\n\t* gcc.target/i386/sse2-cvt-1.c: New test.\n\t* gcc.target/i386/sse2-cvt-2.c: New test.\n\t* gcc.target/i386/avx-cvt-1.c: New test.\n\t* gcc.target/i386/avx-cvt-2.c: New test.\n\t* gcc.target/i386/avx2-cvt-1.c: New test.\n\t* gcc.target/i386/avx2-cvt-2.c: New test.\n\nFrom-SVN: r180580", "tree": {"sha": "c4008a998b13882fe0c78e0dbd68e2480c18384a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c4008a998b13882fe0c78e0dbd68e2480c18384a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1ee488391c01524d409dfe02f6c9d4b53d6f451f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ee488391c01524d409dfe02f6c9d4b53d6f451f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1ee488391c01524d409dfe02f6c9d4b53d6f451f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ee488391c01524d409dfe02f6c9d4b53d6f451f/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "32cac6f1ae656a45a32dbc3de0d8362c4b9703ca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/32cac6f1ae656a45a32dbc3de0d8362c4b9703ca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/32cac6f1ae656a45a32dbc3de0d8362c4b9703ca"}], "stats": {"total": 263, "additions": 263, "deletions": 0}, "files": [{"sha": "403fb604d2839825c5301e5ac0b224b8f2c4d0fb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ee488391c01524d409dfe02f6c9d4b53d6f451f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ee488391c01524d409dfe02f6c9d4b53d6f451f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1ee488391c01524d409dfe02f6c9d4b53d6f451f", "patch": "@@ -1,5 +1,9 @@\n 2011-10-27  Jakub Jelinek  <jakub@redhat.com>\n \n+\t* config/i386/sse.md (avx_cvtpd2dq256_2, avx_cvttpd2dq256_2,\n+\tvec_pack_sfix_trunc_v4df, vec_pack_sfix_v4df): New expanders.\n+\t(*avx_cvtpd2dq256_2, *avx_cvttpd2dq256_2): New insns.\n+\n \t* config/i386/i386.c (ix86_print_operand): Handle 'q' and 'x'\n \toverrides for -masm=intel memory.\n \t* config/i386/sse.md (sse2_cvtdq2pd, sse2_cvtps2pd,"}, {"sha": "638be46131213be5d5841f5e2506907b3abeca09", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 74, "deletions": 0, "changes": 74, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ee488391c01524d409dfe02f6c9d4b53d6f451f/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ee488391c01524d409dfe02f6c9d4b53d6f451f/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=1ee488391c01524d409dfe02f6c9d4b53d6f451f", "patch": "@@ -2544,6 +2544,27 @@\n    (set_attr \"prefix\" \"vex\")\n    (set_attr \"mode\" \"OI\")])\n \n+(define_expand \"avx_cvtpd2dq256_2\"\n+  [(set (match_operand:V8SI 0 \"register_operand\" \"\")\n+\t(vec_concat:V8SI\n+\t  (unspec:V4SI [(match_operand:V4DF 1 \"nonimmediate_operand\" \"\")]\n+\t\t       UNSPEC_FIX_NOTRUNC)\n+\t  (match_dup 2)))]\n+  \"TARGET_AVX\"\n+  \"operands[2] = CONST0_RTX (V4SImode);\")\n+\n+(define_insn \"*avx_cvtpd2dq256_2\"\n+  [(set (match_operand:V8SI 0 \"register_operand\" \"=x\")\n+\t(vec_concat:V8SI\n+\t  (unspec:V4SI [(match_operand:V4DF 1 \"nonimmediate_operand\" \"xm\")]\n+\t\t       UNSPEC_FIX_NOTRUNC)\n+\t  (match_operand:V4SI 2 \"const0_operand\" \"\")))]\n+  \"TARGET_AVX\"\n+  \"vcvtpd2dq{y}\\t{%1, %x0|%x0, %1}\"\n+  [(set_attr \"type\" \"ssecvt\")\n+   (set_attr \"prefix\" \"vex\")\n+   (set_attr \"mode\" \"OI\")])\n+\n (define_expand \"sse2_cvtpd2dq\"\n   [(set (match_operand:V4SI 0 \"register_operand\" \"\")\n \t(vec_concat:V4SI\n@@ -2584,6 +2605,25 @@\n    (set_attr \"prefix\" \"vex\")\n    (set_attr \"mode\" \"OI\")])\n \n+(define_expand \"avx_cvttpd2dq256_2\"\n+  [(set (match_operand:V8SI 0 \"register_operand\" \"\")\n+\t(vec_concat:V8SI\n+\t  (fix:V4SI (match_operand:V4DF 1 \"nonimmediate_operand\" \"\"))\n+\t  (match_dup 2)))]\n+  \"TARGET_AVX\"\n+  \"operands[2] = CONST0_RTX (V4SImode);\")\n+\n+(define_insn \"*avx_cvttpd2dq256_2\"\n+  [(set (match_operand:V8SI 0 \"register_operand\" \"=x\")\n+\t(vec_concat:V8SI\n+\t  (fix:V4SI (match_operand:V4DF 1 \"nonimmediate_operand\" \"xm\"))\n+\t  (match_operand:V4SI 2 \"const0_operand\" \"\")))]\n+  \"TARGET_AVX\"\n+  \"vcvttpd2dq{y}\\t{%1, %x0|%x0, %1}\"\n+  [(set_attr \"type\" \"ssecvt\")\n+   (set_attr \"prefix\" \"vex\")\n+   (set_attr \"mode\" \"OI\")])\n+\n (define_expand \"sse2_cvttpd2dq\"\n   [(set (match_operand:V4SI 0 \"register_operand\" \"\")\n \t(vec_concat:V4SI\n@@ -3027,6 +3067,23 @@\n   DONE;\n })\n \n+(define_expand \"vec_pack_sfix_trunc_v4df\"\n+  [(match_operand:V8SI 0 \"register_operand\" \"\")\n+   (match_operand:V4DF 1 \"nonimmediate_operand\" \"\")\n+   (match_operand:V4DF 2 \"nonimmediate_operand\" \"\")]\n+  \"TARGET_AVX\"\n+{\n+  rtx r1, r2;\n+\n+  r1 = gen_reg_rtx (V8SImode);\n+  r2 = gen_reg_rtx (V8SImode);\n+\n+  emit_insn (gen_avx_cvttpd2dq256_2 (r1, operands[1]));\n+  emit_insn (gen_avx_cvttpd2dq256_2 (r2, operands[2]));\n+  emit_insn (gen_avx_vperm2f128v8si3 (operands[0], r1, r2, GEN_INT (0x20)));\n+  DONE;\n+})\n+\n (define_expand \"vec_pack_sfix_trunc_v2df\"\n   [(match_operand:V4SI 0 \"register_operand\" \"\")\n    (match_operand:V2DF 1 \"nonimmediate_operand\" \"\")\n@@ -3046,6 +3103,23 @@\n   DONE;\n })\n \n+(define_expand \"vec_pack_sfix_v4df\"\n+  [(match_operand:V8SI 0 \"register_operand\" \"\")\n+   (match_operand:V4DF 1 \"nonimmediate_operand\" \"\")\n+   (match_operand:V4DF 2 \"nonimmediate_operand\" \"\")]\n+  \"TARGET_AVX\"\n+{\n+  rtx r1, r2;\n+\n+  r1 = gen_reg_rtx (V8SImode);\n+  r2 = gen_reg_rtx (V8SImode);\n+\n+  emit_insn (gen_avx_cvtpd2dq256_2 (r1, operands[1]));\n+  emit_insn (gen_avx_cvtpd2dq256_2 (r2, operands[2]));\n+  emit_insn (gen_avx_vperm2f128v8si3 (operands[0], r1, r2, GEN_INT (0x20)));\n+  DONE;\n+})\n+\n (define_expand \"vec_pack_sfix_v2df\"\n   [(match_operand:V4SI 0 \"register_operand\" \"\")\n    (match_operand:V2DF 1 \"nonimmediate_operand\" \"\")"}, {"sha": "1f6f0277163c4ae769453566279768360180c751", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ee488391c01524d409dfe02f6c9d4b53d6f451f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ee488391c01524d409dfe02f6c9d4b53d6f451f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1ee488391c01524d409dfe02f6c9d4b53d6f451f", "patch": "@@ -1,3 +1,12 @@\n+2011-10-27  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* gcc.target/i386/sse2-cvt-1.c: New test.\n+\t* gcc.target/i386/sse2-cvt-2.c: New test.\n+\t* gcc.target/i386/avx-cvt-1.c: New test.\n+\t* gcc.target/i386/avx-cvt-2.c: New test.\n+\t* gcc.target/i386/avx2-cvt-1.c: New test.\n+\t* gcc.target/i386/avx2-cvt-2.c: New test.\n+\n 2011-10-27  Martin Jambor  <mjambor@suse.cz>\n \n \t* g++.dg/tree-ssa/pr45605.C: Scan fre1 dump and unxfail."}, {"sha": "ce651649d64eb84fbfab71b1a213b419bafd631b", "filename": "gcc/testsuite/gcc.target/i386/avx-cvt-1.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ee488391c01524d409dfe02f6c9d4b53d6f451f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-cvt-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ee488391c01524d409dfe02f6c9d4b53d6f451f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-cvt-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-cvt-1.c?ref=1ee488391c01524d409dfe02f6c9d4b53d6f451f", "patch": "@@ -0,0 +1,13 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O3 -mavx -mno-avx2\" } */\n+/* { dg-require-effective-target avx_runtime } */\n+\n+#ifndef CHECK_H\n+#define CHECK_H \"avx-check.h\"\n+#endif\n+\n+#ifndef TEST\n+#define TEST avx_test\n+#endif\n+\n+#include \"sse2-cvt-1.c\""}, {"sha": "78c6398f341071e15f69d5e397d5260c5a010346", "filename": "gcc/testsuite/gcc.target/i386/avx-cvt-2.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ee488391c01524d409dfe02f6c9d4b53d6f451f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-cvt-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ee488391c01524d409dfe02f6c9d4b53d6f451f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-cvt-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-cvt-2.c?ref=1ee488391c01524d409dfe02f6c9d4b53d6f451f", "patch": "@@ -0,0 +1,13 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -mavx -mno-avx2 -fdump-tree-vect-details\" } */\n+\n+#include \"avx-cvt-1.c\"\n+\n+/* { dg-final { scan-tree-dump-times \"note: vectorized 1 loops in function\" 6 \"vect\" } } */\n+/* { dg-final { scan-assembler \"vcvttpd2dq(y\\[^\\n\\r\\]*%xmm|\\[^\\n\\r\\]*xmm\\[^\\n\\r\\]*YMMWORD PTR)\" } } */\n+/* { dg-final { scan-assembler \"vcvtdq2ps\\[^\\n\\r\\]*xmm\" } } */\n+/* { dg-final { scan-assembler \"vcvtps2pd\\[^\\n\\r\\]*(%xmm\\[^\\n\\r\\]*%ymm|ymm\\[^\\n\\r\\]*xmm)\" } } */\n+/* { dg-final { scan-assembler \"vcvttps2dq\\[^\\n\\r\\]*ymm\" } } */\n+/* { dg-final { scan-assembler \"vcvtdq2pd\\[^\\n\\r\\]*xmm\\[^\\n\\r\\]*xmm\" } } */\n+/* { dg-final { scan-assembler \"vcvtpd2ps(y\\[^\\n\\r\\]*%xmm|\\[^\\n\\r\\]*xmm\\[^\\n\\r\\]*YMMWORD PTR)\" } } */\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "9626a0666d1e49430148b3b35cd5f5e5cccba5b2", "filename": "gcc/testsuite/gcc.target/i386/avx2-cvt-1.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ee488391c01524d409dfe02f6c9d4b53d6f451f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx2-cvt-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ee488391c01524d409dfe02f6c9d4b53d6f451f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx2-cvt-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx2-cvt-1.c?ref=1ee488391c01524d409dfe02f6c9d4b53d6f451f", "patch": "@@ -0,0 +1,13 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O3 -mavx2\" } */\n+/* { dg-require-effective-target avx2 } */\n+\n+#ifndef CHECK_H\n+#define CHECK_H \"avx2-check.h\"\n+#endif\n+\n+#ifndef TEST\n+#define TEST avx2_test\n+#endif\n+\n+#include \"sse2-cvt-1.c\""}, {"sha": "288e5601a462213d7e83177e3518a85c51c47a1f", "filename": "gcc/testsuite/gcc.target/i386/avx2-cvt-2.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ee488391c01524d409dfe02f6c9d4b53d6f451f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx2-cvt-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ee488391c01524d409dfe02f6c9d4b53d6f451f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx2-cvt-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx2-cvt-2.c?ref=1ee488391c01524d409dfe02f6c9d4b53d6f451f", "patch": "@@ -0,0 +1,13 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -mavx2 -fdump-tree-vect-details\" } */\n+\n+#include \"avx2-cvt-1.c\"\n+\n+/* { dg-final { scan-tree-dump-times \"note: vectorized 1 loops in function\" 6 \"vect\" } } */\n+/* { dg-final { scan-assembler \"vcvttpd2dq(y\\[^\\n\\r\\]*%xmm|\\[^\\n\\r\\]*xmm\\[^\\n\\r\\]*YMMWORD PTR)\" } } */\n+/* { dg-final { scan-assembler \"vcvtdq2ps\\[^\\n\\r\\]*ymm\" } } */\n+/* { dg-final { scan-assembler \"vcvtps2pd\\[^\\n\\r\\]*(%xmm\\[^\\n\\r\\]*%ymm|ymm\\[^\\n\\r\\]*xmm)\" } } */\n+/* { dg-final { scan-assembler \"vcvttps2dq\\[^\\n\\r\\]*ymm\" } } */\n+/* { dg-final { scan-assembler \"vcvtdq2pd\\[^\\n\\r\\]*(%xmm\\[^\\n\\r\\]*%ymm|ymm\\[^\\n\\r\\]*xmm)\" } } */\n+/* { dg-final { scan-assembler \"vcvtpd2ps(y\\[^\\n\\r\\]*%xmm|\\[^\\n\\r\\]*xmm\\[^\\n\\r\\]*YMMWORD PTR)\" } } */\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "4d5683108dc06c3e5a5fabe0cbdbc9f2b963859a", "filename": "gcc/testsuite/gcc.target/i386/sse2-cvt-1.c", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ee488391c01524d409dfe02f6c9d4b53d6f451f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse2-cvt-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ee488391c01524d409dfe02f6c9d4b53d6f451f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse2-cvt-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse2-cvt-1.c?ref=1ee488391c01524d409dfe02f6c9d4b53d6f451f", "patch": "@@ -0,0 +1,111 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O3 -msse2 -mno-avx\" } */\n+/* { dg-require-effective-target sse2 } */\n+\n+#ifndef CHECK_H\n+#define CHECK_H \"sse2-check.h\"\n+#endif\n+\n+#ifndef TEST\n+#define TEST sse2_test\n+#endif\n+\n+#include CHECK_H\n+\n+#define N 16\n+float f[N];\n+double d[N];\n+int n[N];\n+\n+__attribute__((noinline)) void\n+f1 (void)\n+{\n+  int i;\n+  for (i = 0; i < N; i++)\n+    n[i] = d[i];\n+}\n+\n+__attribute__((noinline)) void\n+f2 (void)\n+{\n+  int i;\n+  for (i = 0; i < N; i++)\n+    f[i] = n[i];\n+}\n+\n+__attribute__((noinline)) void\n+f3 (void)\n+{\n+  int i;\n+  for (i = 0; i < N; i++)\n+    d[i] = f[i];\n+}\n+\n+__attribute__((noinline)) void\n+f4 (void)\n+{\n+  int i;\n+  for (i = 0; i < N; i++)\n+    n[i] = f[i];\n+}\n+\n+__attribute__((noinline)) void\n+f5 (void)\n+{\n+  int i;\n+  for (i = 0; i < N; i++)\n+    d[i] = n[i];\n+}\n+\n+__attribute__((noinline)) void\n+f6 (void)\n+{\n+  int i;\n+  for (i = 0; i < N; i++)\n+    f[i] = d[i];\n+}\n+\n+static void\n+TEST ()\n+{\n+  int i;\n+  for (i = 0; i < N; i++)\n+    {\n+      asm (\"\");\n+      d[i] = i + 2.5;\n+    }\n+  f1 ();\n+  for (i = 0; i < N; i++)\n+    if (n[i] != i + 2)\n+      abort ();\n+    else\n+      n[i] = i + 7;\n+  f2 ();\n+  for (i = 0; i < N; i++)\n+    if (f[i] != i + 7)\n+      abort ();\n+    else\n+      f[i] = i - 2.25f;\n+  f3 ();\n+  for (i = 0; i < N; i++)\n+    if (d[i] != i - 2.25)\n+      abort ();\n+    else\n+      f[i] = i + 3.5;\n+  f4 ();\n+  for (i = 0; i < N; i++)\n+    if (n[i] != i + 3)\n+      abort ();\n+    else\n+      n[i] = i + 9;\n+  f5 ();\n+  for (i = 0; i < N; i++)\n+    if (d[i] != i + 9)\n+      abort ();\n+    else\n+      d[i] = i - 7.25;\n+  f6 ();\n+  for (i = 0; i < N; i++)\n+    if (f[i] != i - 7.25)\n+      abort ();\n+}"}, {"sha": "9c4519544ca5b91545180d9ee4fe4d2e5ad2920f", "filename": "gcc/testsuite/gcc.target/i386/sse2-cvt-2.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ee488391c01524d409dfe02f6c9d4b53d6f451f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse2-cvt-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ee488391c01524d409dfe02f6c9d4b53d6f451f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse2-cvt-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse2-cvt-2.c?ref=1ee488391c01524d409dfe02f6c9d4b53d6f451f", "patch": "@@ -0,0 +1,13 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -msse2 -mno-sse3 -fdump-tree-vect-details\" } */\n+\n+#include \"sse2-cvt-1.c\"\n+\n+/* { dg-final { scan-tree-dump-times \"note: vectorized 1 loops in function\" 6 \"vect\" } } */\n+/* { dg-final { scan-assembler \"cvttpd2dq\" } } */\n+/* { dg-final { scan-assembler \"cvtdq2ps\" } } */\n+/* { dg-final { scan-assembler \"cvtps2pd\" } } */\n+/* { dg-final { scan-assembler \"cvttps2dq\" } } */\n+/* { dg-final { scan-assembler \"cvtdq2pd\" } } */\n+/* { dg-final { scan-assembler \"cvtpd2ps\" } } */\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}]}