{"sha": "f0d61983a5fe28616abf24c5029dfa70b7b6930c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjBkNjE5ODNhNWZlMjg2MTZhYmYyNGM1MDI5ZGZhNzBiN2I2OTMwYw==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2010-01-04T00:52:50Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2010-01-04T00:52:50Z"}, "message": "Pass -m* and -v to -plugin-opt\n\ngcc/\n\n2010-01-03  H.J. Lu  <hongjiu.lu@intel.com>\n\n\tPR lto/42520\n\t* gcc.c (LINK_COMMAND_SPEC): Pass -m* and -v to -plugin-opt.\n\nlto-plugin/\n\n2010-01-03  H.J. Lu  <hongjiu.lu@intel.com>\n\n\tPR lto/42520\n\t* lto-plugin.c (exec_lto_wrapper): Output lto-wrapper command\n\tif -v is passed.\n\nFrom-SVN: r155601", "tree": {"sha": "7c32ff53348a86163c82ed7b2373dd5c80fd34ab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7c32ff53348a86163c82ed7b2373dd5c80fd34ab"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f0d61983a5fe28616abf24c5029dfa70b7b6930c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f0d61983a5fe28616abf24c5029dfa70b7b6930c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f0d61983a5fe28616abf24c5029dfa70b7b6930c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f0d61983a5fe28616abf24c5029dfa70b7b6930c/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5ceab7f10030eb3f002fcff3b8f904a849a075da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ceab7f10030eb3f002fcff3b8f904a849a075da", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5ceab7f10030eb3f002fcff3b8f904a849a075da"}], "stats": {"total": 28, "additions": 26, "deletions": 2}, "files": [{"sha": "6922745d681e52ec8b5259355d3eba2796212696", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0d61983a5fe28616abf24c5029dfa70b7b6930c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0d61983a5fe28616abf24c5029dfa70b7b6930c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f0d61983a5fe28616abf24c5029dfa70b7b6930c", "patch": "@@ -1,3 +1,8 @@\n+2010-01-03  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR lto/42520\n+\t* gcc.c (LINK_COMMAND_SPEC): Pass -m* and -v to -plugin-opt.\n+\n 2009-01-03  Steven Bosscher  <steven@gcc.gnu.org>\n \n \tPR rtl-optimization/41862"}, {"sha": "a9a10fe7ef00187c20a407575669bd5ca224b9ff", "filename": "gcc/gcc.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0d61983a5fe28616abf24c5029dfa70b7b6930c/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0d61983a5fe28616abf24c5029dfa70b7b6930c/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=f0d61983a5fe28616abf24c5029dfa70b7b6930c", "patch": "@@ -786,6 +786,8 @@ proper position among the other output files.  */\n     %{O*:-plugin-opt=-O%*} \\\n     %{w:-plugin-opt=-w} \\\n     %{f*:-plugin-opt=-f%*} \\\n+    %{m*:-plugin-opt=-m%*} \\\n+    %{v:-plugin-opt=-v} \\\n     } \\\n     %{flto} %{fwhopr} %l \" LINK_PIE_SPEC \\\n    \"%X %{o*} %{A} %{d} %{e*} %{m} %{N} %{n} %{r}\\"}, {"sha": "4848e279397bbd22443582051376fe9e9b58b0bd", "filename": "lto-plugin/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0d61983a5fe28616abf24c5029dfa70b7b6930c/lto-plugin%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0d61983a5fe28616abf24c5029dfa70b7b6930c/lto-plugin%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/lto-plugin%2FChangeLog?ref=f0d61983a5fe28616abf24c5029dfa70b7b6930c", "patch": "@@ -1,3 +1,9 @@\n+2010-01-03  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR lto/42520\n+\t* lto-plugin.c (exec_lto_wrapper): Output lto-wrapper command\n+\tif -v is passed.\n+\n 2009-12-05  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR bootstrap/42306"}, {"sha": "2fb4f2a778261c47a6fe3b3171d6f94d2c84f0c9", "filename": "lto-plugin/lto-plugin.c", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0d61983a5fe28616abf24c5029dfa70b7b6930c/lto-plugin%2Flto-plugin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0d61983a5fe28616abf24c5029dfa70b7b6930c/lto-plugin%2Flto-plugin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/lto-plugin%2Flto-plugin.c?ref=f0d61983a5fe28616abf24c5029dfa70b7b6930c", "patch": "@@ -369,7 +369,7 @@ add_output_files (FILE *f)\n static void\n exec_lto_wrapper (char *argv[])\n {\n-  int t;\n+  int t, i;\n   int status;\n   char *at_args;\n   FILE *args;\n@@ -394,13 +394,24 @@ exec_lto_wrapper (char *argv[])\n   at_args = concat (\"@\", arguments_file_name, NULL);\n   check (at_args, LDPL_FATAL, \"could not allocate\");\n \n+  for (i = 1; argv[i]; i++)\n+    {\n+      char *a = argv[i];\n+      if (a[0] == '-' && a[1] == 'v' && a[2] == '\\0')\n+\t{\n+\t  for (i = 0; argv[i]; i++)\n+\t    fprintf (stderr, \"%s \", argv[i]);\n+\t  fprintf (stderr, \"\\n\");\n+\t  break;\n+\t}\n+    }\n+\n   new_argv[0] = argv[0];\n   new_argv[1] = at_args;\n   new_argv[2] = NULL;\n \n   if (debug)\n     {\n-      int i;\n       for (i = 0; new_argv[i]; i++)\n \tfprintf (stderr, \"%s \", new_argv[i]);\n       fprintf (stderr, \"\\n\");"}]}