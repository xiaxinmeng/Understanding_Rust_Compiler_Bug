{"sha": "3e7a892cc5bdeb5518888f2ca176d96cc720ec5f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2U3YTg5MmNjNWJkZWI1NTE4ODg4ZjJjYTE3NmQ5NmNjNzIwZWM1Zg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2019-12-11T16:48:22Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2019-12-11T16:48:22Z"}, "message": "PR c++/92446 - deduction of class NTTP.\n\nAnother place we need to look through the VIEW_CONVERT_EXPR we add to make a\nuse of a class NTTP have const type.\n\n\t* pt.c (deducible_expression): Look through VIEW_CONVERT_EXPR.\n\nFrom-SVN: r279228", "tree": {"sha": "d0cd4fff424ab21c127b182c3a10fdf35968c0f9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d0cd4fff424ab21c127b182c3a10fdf35968c0f9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3e7a892cc5bdeb5518888f2ca176d96cc720ec5f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e7a892cc5bdeb5518888f2ca176d96cc720ec5f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3e7a892cc5bdeb5518888f2ca176d96cc720ec5f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e7a892cc5bdeb5518888f2ca176d96cc720ec5f/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0a22f996399c968efe9bfec96bd9f87ee537be12", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a22f996399c968efe9bfec96bd9f87ee537be12", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0a22f996399c968efe9bfec96bd9f87ee537be12"}], "stats": {"total": 20, "additions": 19, "deletions": 1}, "files": [{"sha": "ad08ff00e383fe0e9a0eb7b3768cd69a266c4eaa", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e7a892cc5bdeb5518888f2ca176d96cc720ec5f/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e7a892cc5bdeb5518888f2ca176d96cc720ec5f/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=3e7a892cc5bdeb5518888f2ca176d96cc720ec5f", "patch": "@@ -1,3 +1,8 @@\n+2019-12-11  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/92446 - deduction of class NTTP.\n+\t* pt.c (deducible_expression): Look through VIEW_CONVERT_EXPR.\n+\n 2019-12-10  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/92847 - C++20 comparison ambiguity with class template."}, {"sha": "6f658de28ed1cc6363a10be8678c4c6bbd28d130", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e7a892cc5bdeb5518888f2ca176d96cc720ec5f/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e7a892cc5bdeb5518888f2ca176d96cc720ec5f/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=3e7a892cc5bdeb5518888f2ca176d96cc720ec5f", "patch": "@@ -21183,7 +21183,7 @@ static bool\n deducible_expression (tree expr)\n {\n   /* Strip implicit conversions.  */\n-  while (CONVERT_EXPR_P (expr))\n+  while (CONVERT_EXPR_P (expr) || TREE_CODE (expr) == VIEW_CONVERT_EXPR)\n     expr = TREE_OPERAND (expr, 0);\n   return (TREE_CODE (expr) == TEMPLATE_PARM_INDEX);\n }"}, {"sha": "315e0ac23098676c461e9944e73568ce3b3249b0", "filename": "gcc/testsuite/g++.dg/cpp2a/nontype-class26.C", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e7a892cc5bdeb5518888f2ca176d96cc720ec5f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fnontype-class26.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e7a892cc5bdeb5518888f2ca176d96cc720ec5f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fnontype-class26.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fnontype-class26.C?ref=3e7a892cc5bdeb5518888f2ca176d96cc720ec5f", "patch": "@@ -0,0 +1,13 @@\n+// { dg-do compile { target c++2a } }\n+\n+struct p { unsigned p_ {}; };\n+\n+template <p i> struct pp {};\n+struct qq : public pp <p {}> {};\n+\n+template <p i> int f (pp <i> const &);\n+\n+int main ()\n+{\n+  return f (qq {});\n+}"}]}