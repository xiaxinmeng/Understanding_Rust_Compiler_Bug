{"sha": "bd2777de1f2361995befcbe52577fce6067c4e49", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmQyNzc3ZGUxZjIzNjE5OTViZWZjYmU1MjU3N2ZjZTYwNjdjNGU0OQ==", "commit": {"author": {"name": "Bernd Schmidt", "email": "bernds@codesourcery.com", "date": "2011-09-08T16:29:17Z"}, "committer": {"name": "Bernd Schmidt", "email": "bernds@gcc.gnu.org", "date": "2011-09-08T16:29:17Z"}, "message": "arm.md (push_multi): Emit predicates.\n\n\t* config/arm/arm.md (push_multi): Emit predicates.\n\t(push_fp_multi): Likewise.\n\t* config/arm/arm.c (vfp_output_fstmd): Likewise.\n\nFrom-SVN: r178700", "tree": {"sha": "61819e63bb121aa7fe3926d1d26f212b03662e2c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/61819e63bb121aa7fe3926d1d26f212b03662e2c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bd2777de1f2361995befcbe52577fce6067c4e49", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd2777de1f2361995befcbe52577fce6067c4e49", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bd2777de1f2361995befcbe52577fce6067c4e49", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd2777de1f2361995befcbe52577fce6067c4e49/comments", "author": null, "committer": null, "parents": [{"sha": "e97b61c26e4870f5b761a9dd4cc3cdb2c00609a8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e97b61c26e4870f5b761a9dd4cc3cdb2c00609a8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e97b61c26e4870f5b761a9dd4cc3cdb2c00609a8"}], "stats": {"total": 16, "additions": 12, "deletions": 4}, "files": [{"sha": "349c15c53b3b5924fa8aca2ed35792cf50056a91", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd2777de1f2361995befcbe52577fce6067c4e49/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd2777de1f2361995befcbe52577fce6067c4e49/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bd2777de1f2361995befcbe52577fce6067c4e49", "patch": "@@ -1,3 +1,9 @@\n+2011-09-08  Bernd Schmidt  <bernds@codesourcery.com>\n+\n+\t* config/arm/arm.md (push_multi): Emit predicates.\n+\t(push_fp_multi): Likewise.\n+\t* config/arm/arm.c (vfp_output_fstmd): Likewise.\n+\n 2011-09-08  Dodji Seketeli  <dodji@redhat.com>\n \n \tPR c++/33255 - Support -Wunused-local-typedefs warning"}, {"sha": "aaee3f40385a282b43423f5d829a3b28c3c041a4", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd2777de1f2361995befcbe52577fce6067c4e49/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd2777de1f2361995befcbe52577fce6067c4e49/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=bd2777de1f2361995befcbe52577fce6067c4e49", "patch": "@@ -13084,7 +13084,7 @@ vfp_output_fstmd (rtx * operands)\n   int base;\n   int i;\n \n-  strcpy (pattern, \"fstmfdd\\t%m0!, {%P1\");\n+  strcpy (pattern, \"fstmfdd%?\\t%m0!, {%P1\");\n   p = strlen (pattern);\n \n   gcc_assert (GET_CODE (operands[1]) == REG);"}, {"sha": "43c7608aad48fdf09daf062396526b9a75a3148b", "filename": "gcc/config/arm/arm.md", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd2777de1f2361995befcbe52577fce6067c4e49/gcc%2Fconfig%2Farm%2Farm.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd2777de1f2361995befcbe52577fce6067c4e49/gcc%2Fconfig%2Farm%2Farm.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.md?ref=bd2777de1f2361995befcbe52577fce6067c4e49", "patch": "@@ -10581,14 +10581,16 @@\n        In Thumb mode always use push, and the assembler will pick\n        something appropriate.  */\n     if (num_saves == 1 && TARGET_ARM)\n-      output_asm_insn (\\\"str\\\\t%1, [%m0, #-4]!\\\", operands);\n+      output_asm_insn (\\\"str%?\\\\t%1, [%m0, #-4]!\\\", operands);\n     else\n       {\n \tint i;\n \tchar pattern[100];\n \n \tif (TARGET_ARM)\n-\t    strcpy (pattern, \\\"stmfd\\\\t%m0!, {%1\\\");\n+\t    strcpy (pattern, \\\"stm%(fd%)\\\\t%m0!, {%1\\\");\n+\telse if (TARGET_THUMB2)\n+\t    strcpy (pattern, \\\"push%?\\\\t{%1\\\");\n \telse\n \t    strcpy (pattern, \\\"push\\\\t{%1\\\");\n \n@@ -10631,7 +10633,7 @@\n   {\n     char pattern[100];\n \n-    sprintf (pattern, \\\"sfmfd\\\\t%%1, %d, [%%m0]!\\\", XVECLEN (operands[2], 0));\n+    sprintf (pattern, \\\"sfm%(fd%)\\\\t%%1, %d, [%%m0]!\\\", XVECLEN (operands[2], 0));\n     output_asm_insn (pattern, operands);\n     return \\\"\\\";\n   }\""}]}