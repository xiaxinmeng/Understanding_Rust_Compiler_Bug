{"sha": "b6458e8551d3753332c6e0e3942010953f0aa51d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjY0NThlODU1MWQzNzUzMzMyYzZlMGUzOTQyMDEwOTUzZjBhYTUxZA==", "commit": {"author": {"name": "David O'Brien", "email": "obrien@gcc.gnu.org", "date": "2001-11-21T02:06:45Z"}, "committer": {"name": "David O'Brien", "email": "obrien@gcc.gnu.org", "date": "2001-11-21T02:06:45Z"}, "message": "config.gcc: Add FreeBSD/PowerPC target.\n\n2001-11-20  David O'Brien  <obrien@FreeBSD.org>\n\t* config.gcc: Add FreeBSD/PowerPC target.\n\t(powerpc64-*-linux*, powerpc-*-sysv*, powerpc-*-netbsd*,\n\tpowerpc-*-chorusos*, powerpc-*-eabiaix*, powerpc-*-eabisim*,\n\tpowerpc-*-elf*, powerpc-*-eabi*, powerpc-*-rtems*,\n\tpowerpc-*-linux*libc1, powerpc-*-linux*, powerpc-wrs-vxworks*,\n\tpowerpcle-wrs-vxworks*, powerpcle-*-sysv*, powerpcle-*-elf*,\n\tpowerpcle-*-eabisim*, powerpcle-*-eabi*, powerpcle-*-solaris2*): Add\n\tfreebsd-spec.h to tm_file.\n\t(rs6000-*-lynxos*): Add lynx.h to tm_file.\n\t* config/freebsd.h: Tidy up.\n\t(USING_CONFIG_FREEBSD): Define.\n\t(FBSD_SWITCH_TAKES_ARG, FBSD_WORD_SWITCH_TAKES_ARG,\n\tFBSD_CPP_PREDEFINES, FBSD_CPP_SPEC, FBSD_STARTFILE_SPEC,\n\tFBSD_ENDFILE_SPEC, FBSD_LIB_SPEC): Remove (moved to freebsd-spec.h).\n\t(TARGET_HAS_F_SETLKW): Define.\n\t(ASM_OUTPUT_IDENT): Delete, the elfos.h definition is fine.\n\t* config/freebsd-spec.h: New file.\n\t* config/rs6000/freebsd.h: New file.\n\t* config/rs6000/rs6000.h (TARGET_VERSION): Do not define.\n\t* config/rs6000/rs6000.c: Test for USING_ELFOS_H rather than\n\tUSING_SVR4_H to know when to turn on ELF support.\n\t* config/rs6000/sysv4.h (TARGET_VERSION, CPP_PREDEFINES): Don't undef,\n\tdefine only if not already defined.\n\tAdd FreeBSD support.\n\t* config/rs6000/aix.h (TARGET_VERSION): Define.\n\t* config/rs6000/beos.h: Likewise.\n\t* config/rs6000/darwin.h: Likewise.\n\t* config/rs6000/mach.h: Likewise.\n\t* config/rs6000/lynx.h (TARGET_VERSION): Likewise.\n\tDon't include lynx.h directly.\n\nApproved by:  Geoff Keating <geoffk@geoffk.org>\n              Message-Id: <200111192053.MAA11977@geoffk.org>\n\t\t\t  Stan Shebs <shebs@apple.com>  (Darwin bits)\n              Message-ID: <3BF95F29.794BC924@apple.com>\n\nFrom-SVN: r47229", "tree": {"sha": "9fae26105cfbd44378b37935780d2c97a9636422", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9fae26105cfbd44378b37935780d2c97a9636422"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b6458e8551d3753332c6e0e3942010953f0aa51d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6458e8551d3753332c6e0e3942010953f0aa51d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b6458e8551d3753332c6e0e3942010953f0aa51d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6458e8551d3753332c6e0e3942010953f0aa51d/comments", "author": null, "committer": null, "parents": [{"sha": "00b960c7ada70affc18fe7f4ad170a40c684c208", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/00b960c7ada70affc18fe7f4ad170a40c684c208", "html_url": "https://github.com/Rust-GCC/gccrs/commit/00b960c7ada70affc18fe7f4ad170a40c684c208"}], "stats": {"total": 149, "additions": 149, "deletions": 0}, "files": [{"sha": "8b01536273bb3b07eea905f62fe1f9fefa1f68fb", "filename": "gcc/config/freebsd-spec.h", "status": "added", "additions": 149, "deletions": 0, "changes": 149, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6458e8551d3753332c6e0e3942010953f0aa51d/gcc%2Fconfig%2Ffreebsd-spec.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6458e8551d3753332c6e0e3942010953f0aa51d/gcc%2Fconfig%2Ffreebsd-spec.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ffreebsd-spec.h?ref=b6458e8551d3753332c6e0e3942010953f0aa51d", "patch": "@@ -0,0 +1,149 @@\n+/* Base configuration file for all FreeBSD targets.\n+   Copyright (C) 1999, 2000, 2001 Free Software Foundation, Inc.\n+\n+This file is part of GNU CC.\n+\n+GNU CC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU CC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU CC; see the file COPYING.  If not, write to\n+the Free Software Foundation, 59 Temple Place - Suite 330,\n+Boston, MA 02111-1307, USA.  */\n+\n+/* Common FreeBSD configuration. \n+   All FreeBSD architectures should include this file, which will specify\n+   their commonalities.\n+   Adapted from gcc/config/freebsd.h by \n+   David O'Brien <obrien@FreeBSD.org>\n+   Loren J. Rittle <ljrittle@acm.org>.  */\n+\n+\n+/* In case we need to know.  */\n+#define USING_CONFIG_FREEBSD_SPEC 1\n+\n+/* This defines which switch letters take arguments.  On FreeBSD, most of\n+   the normal cases (defined in gcc.c) apply, and we also have -h* and\n+   -z* options (for the linker) (coming from SVR4).\n+   We also have -R (alias --rpath), no -z, --soname (-h), --assert etc.  */\n+\n+#define FBSD_SWITCH_TAKES_ARG(CHAR)\t\t\t\t\t\\\n+  (DEFAULT_SWITCH_TAKES_ARG (CHAR)\t\t\t\t\t\\\n+    || (CHAR) == 'h'\t\t\t\t\t\t\t\\\n+    || (CHAR) == 'z' /* ignored by ld */\t\t\t\t\\\n+    || (CHAR) == 'R')\n+\n+/* This defines which multi-letter switches take arguments.  */\n+\n+#define FBSD_WORD_SWITCH_TAKES_ARG(STR)\t\t\t\t\t\\\n+  (DEFAULT_WORD_SWITCH_TAKES_ARG (STR)\t\t\t\t\t\\\n+   || !strcmp ((STR), \"rpath\") || !strcmp ((STR), \"rpath-link\")\t\t\\\n+   || !strcmp ((STR), \"soname\") || !strcmp ((STR), \"defsym\") \t\t\\\n+   || !strcmp ((STR), \"assert\") || !strcmp ((STR), \"dynamic-linker\"))\n+\n+#if FBSD_MAJOR == 6\n+#define FBSD_CPP_PREDEFINES \\\n+  \"-D__FreeBSD__=6 -Dunix -D__ELF__ -D__KPRINTF_ATTRIBUTE__ -Asystem=unix -Asystem=bsd -Asystem=FreeBSD\"\n+#endif\n+\n+#if FBSD_MAJOR == 5\n+#define FBSD_CPP_PREDEFINES \\\n+  \"-D__FreeBSD__=5 -Dunix -D__ELF__ -D__KPRINTF_ATTRIBUTE__ -Asystem=unix -Asystem=bsd -Asystem=FreeBSD\"\n+#endif\n+\n+#if FBSD_MAJOR == 4\n+#define FBSD_CPP_PREDEFINES \\\n+  \"-D__FreeBSD__=4 -Dunix -D__ELF__ -D__KPRINTF_ATTRIBUTE__ -Asystem=unix -Asystem=bsd -Asystem=FreeBSD\"\n+#endif\n+\n+#if FBSD_MAJOR == 3\n+#define FBSD_CPP_PREDEFINES \\\n+  \"-D__FreeBSD__=3 -Dunix -D__ELF__ -D__KPRINTF_ATTRIBUTE__ -Asystem=unix -Asystem=bsd -Asystem=FreeBSD\"\n+#endif\n+\n+#ifndef FBSD_CPP_PREDEFINES\n+#define FBSD_CPP_PREDEFINES \\\n+  \"-D__FreeBSD__   -Dunix -D__ELF__ -D__KPRINTF_ATTRIBUTE__ -Asystem=unix -Asystem=bsd -Asystem=FreeBSD\"\n+#endif\n+\n+/* Provide a CPP_SPEC appropriate for FreeBSD.  We just deal with the GCC \n+   option `-posix', and PIC issues.  */\n+\n+#define FBSD_CPP_SPEC \"\t\t\t\t\t\t\t\\\n+  %(cpp_cpu)\t\t\t\t\t\t\t\t\\\n+  %{fPIC:-D__PIC__ -D__pic__} %{fpic:-D__PIC__ -D__pic__}\t\t\\\n+  %{posix:-D_POSIX_SOURCE}\"\n+\n+/* Provide a STARTFILE_SPEC appropriate for FreeBSD.  Here we add\n+   the magical crtbegin.o file (see crtstuff.c) which provides part \n+\tof the support for getting C++ file-scope static object constructed \n+\tbefore entering `main'. */\n+   \n+#define FBSD_STARTFILE_SPEC \\\n+  \"%{!shared: \\\n+     %{pg:gcrt1.o%s} %{!pg:%{p:gcrt1.o%s} \\\n+\t\t       %{!p:%{profile:gcrt1.o%s} \\\n+\t\t\t %{!profile:crt1.o%s}}}} \\\n+   crti.o%s %{!shared:crtbegin.o%s} %{shared:crtbeginS.o%s}\"\n+\n+/* Provide a ENDFILE_SPEC appropriate for FreeBSD.  Here we tack on\n+   the magical crtend.o file (see crtstuff.c) which provides part of \n+\tthe support for getting C++ file-scope static object constructed \n+\tbefore entering `main', followed by a normal \"finalizer\" file, \n+\t`crtn.o'.  */\n+\n+#define FBSD_ENDFILE_SPEC \\\n+  \"%{!shared:crtend.o%s} %{shared:crtendS.o%s} crtn.o%s\"\n+\n+/* Provide a LIB_SPEC appropriate for FreeBSD as configured and as\n+   required by the user-land thread model.  Before __FreeBSD_version\n+   500016, select the appropriate libc, depending on whether we're\n+   doing profiling or need threads support.  At __FreeBSD_version\n+   500016 and later, when threads support is requested include both\n+   -lc and -lc_r instead of only -lc_r.  To make matters interesting,\n+   we can't actually use __FreeBSD_version provided by <osreldate.h>\n+   directly since it breaks cross-compiling.  As a final twist, make\n+   it a hard error if -pthread is provided on the command line and gcc\n+   was configured with --disable-threads (this will help avoid bug\n+   reports from users complaining about threading when they\n+   misconfigured the gcc bootstrap but are later consulting FreeBSD\n+   manual pages that refer to the mythical -pthread option).  */\n+\n+/* Provide a LIB_SPEC appropriate for FreeBSD.  Just select the appropriate\n+   libc, depending on whether we're doing profiling or need threads support.\n+   (simular to the default, except no -lg, and no -p).  */\n+\n+#ifdef FBSD_NO_THREADS\n+#define FBSD_LIB_SPEC \"\t\t\t\t\t\t\t\\\n+  %{pthread: %eThe -pthread option is only supported on FreeBSD when gcc \\\n+is built with the --enable-threads configure-time option.}\t\t\\\n+  %{!shared:\t\t\t\t\t\t\t\t\\\n+    %{!pg: -lc}\t\t\t\t\t\t\t\t\\\n+    %{pg:  -lc_p}\t\t\t\t\t\t\t\\\n+  }\"\n+#else\n+#if FBSD_MAJOR >= 5\n+#define FBSD_LIB_SPEC \"\t\t\t\t\t\t\t\\\n+  %{!shared:\t\t\t\t\t\t\t\t\\\n+    %{!pg: %{pthread:-lc_r} -lc}\t\t\t\t\t\\\n+    %{pg:  %{pthread:-lc_r_p} -lc_p}\t\t\t\t\t\\\n+  }\"\n+#else\n+#define FBSD_LIB_SPEC \"\t\t\t\t\t\t\t\\\n+  %{!shared:\t\t\t\t\t\t\t\t\\\n+    %{!pg:\t\t\t\t\t\t\t\t\\\n+      %{!pthread:-lc}\t\t\t\t\t\t\t\\\n+      %{pthread:-lc_r}}\t\t\t\t\t\t\t\\\n+    %{pg:\t\t\t\t\t\t\t\t\\\n+      %{!pthread:-lc_p}\t\t\t\t\t\t\t\\\n+      %{pthread:-lc_r_p}}\t\t\t\t\t\t\\\n+  }\"\n+#endif\n+#endif"}]}