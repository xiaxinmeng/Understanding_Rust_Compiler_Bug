{"sha": "8294b6fe4d3311b335dfddc90eeeee2ebd1ddb12", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODI5NGI2ZmU0ZDMzMTFiMzM1ZGZkZGM5MGVlZWVlMmViZDFkZGIxMg==", "commit": {"author": {"name": "Olivier Hainque", "email": "hainque@adacore.com", "date": "2012-05-16T13:37:14Z"}, "committer": {"name": "Olivier Hainque", "email": "hainque@gcc.gnu.org", "date": "2012-05-16T13:37:14Z"}, "message": "Makefile.tpl (gcc-no-fixedincludes): Rename into ...\n\n\ttoplevel/\n\t* Makefile.tpl (gcc-no-fixedincludes): Rename into ...\n\t(gcc-install-no-fixedincludes): Now forwarder to local target in gcc/\n\t(install-no-fixedincludes): Adjust accordingly.\n\t* Makefile.in: Regenerate.\n\n\tgcc/\n\t* Makefile.in (install-no-fixedincludes): New target, former toplevel\n\tgcc-no-fixedincludes. Stash \"include-fixed\" in addition to \"include\".\n\tAdd comments and improve stamp preservation across the whole sequence.\n\t(stmp-int-hdrs): Use move-if-change + cp -p to setup fix_dir/limits.h.\n\nFrom-SVN: r187594", "tree": {"sha": "be711dac68bf3af2ce970b6947498365e1f8376a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/be711dac68bf3af2ce970b6947498365e1f8376a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8294b6fe4d3311b335dfddc90eeeee2ebd1ddb12", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8294b6fe4d3311b335dfddc90eeeee2ebd1ddb12", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8294b6fe4d3311b335dfddc90eeeee2ebd1ddb12", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8294b6fe4d3311b335dfddc90eeeee2ebd1ddb12/comments", "author": {"login": "hainque", "id": 18735142, "node_id": "MDQ6VXNlcjE4NzM1MTQy", "avatar_url": "https://avatars.githubusercontent.com/u/18735142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hainque", "html_url": "https://github.com/hainque", "followers_url": "https://api.github.com/users/hainque/followers", "following_url": "https://api.github.com/users/hainque/following{/other_user}", "gists_url": "https://api.github.com/users/hainque/gists{/gist_id}", "starred_url": "https://api.github.com/users/hainque/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hainque/subscriptions", "organizations_url": "https://api.github.com/users/hainque/orgs", "repos_url": "https://api.github.com/users/hainque/repos", "events_url": "https://api.github.com/users/hainque/events{/privacy}", "received_events_url": "https://api.github.com/users/hainque/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6b18b1a37a763b2830f1448e5a17cd3225f78eb3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b18b1a37a763b2830f1448e5a17cd3225f78eb3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6b18b1a37a763b2830f1448e5a17cd3225f78eb3"}], "stats": {"total": 120, "additions": 81, "deletions": 39}, "files": [{"sha": "e29515044c9a8de7890e22e6277118f50c7af247", "filename": "ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8294b6fe4d3311b335dfddc90eeeee2ebd1ddb12/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8294b6fe4d3311b335dfddc90eeeee2ebd1ddb12/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=8294b6fe4d3311b335dfddc90eeeee2ebd1ddb12", "patch": "@@ -1,3 +1,10 @@\n+2012-05-16  Olivier Hainque  <hainque@adacore.com>\n+\n+\t* Makefile.tpl (gcc-no-fixedincludes): Rename into ...\n+\t(gcc-install-no-fixedincludes): Now forwarder to local target in gcc/\n+\t(install-no-fixedincludes): Adjust accordingly.\n+\t* Makefile.in: Regenerate.\n+\n 2012-05-15  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tMerge upstream change"}, {"sha": "def860e386d173d87b7352411591dc1d11f41b04", "filename": "Makefile.in", "status": "modified", "additions": 11, "deletions": 19, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8294b6fe4d3311b335dfddc90eeeee2ebd1ddb12/Makefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8294b6fe4d3311b335dfddc90eeeee2ebd1ddb12/Makefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/Makefile.in?ref=8294b6fe4d3311b335dfddc90eeeee2ebd1ddb12", "patch": "@@ -2447,11 +2447,12 @@ install.all: install-no-fixedincludes\n \t\ttrue ; \\\n \tfi\n \n-# install-no-fixedincludes is used because Cygnus can not distribute\n-# the fixed header files.\n+# install-no-fixedincludes is used to allow the elaboration of binary packages\n+# suitable for distribution, where we cannot include the fixed system header\n+# files.\n .PHONY: install-no-fixedincludes\n install-no-fixedincludes: installdirs install-host-nogcc \\\n-\tinstall-target gcc-no-fixedincludes\n+\tinstall-target gcc-install-no-fixedincludes\n \n .PHONY: install-strip\n install-strip:\n@@ -41200,25 +41201,16 @@ check-gcc-go:\n check-go: check-gcc-go check-target-libgo\n \n \n-# Install the gcc headers files, but not the fixed include files,\n-# which Cygnus is not allowed to distribute.  This rule is very\n-# dependent on the workings of the gcc Makefile.in.\n-.PHONY: gcc-no-fixedincludes\n-gcc-no-fixedincludes:\n+# The gcc part of install-no-fixedincludes, which relies on an intimate\n+# knowledge of how a number of gcc internal targets (inter)operate.  Delegate.\n+.PHONY: gcc-install-no-fixedincludes\n+gcc-install-no-fixedincludes:\n \t@if [ -f ./gcc/Makefile ]; then \\\n-\t  rm -rf gcc/tmp-include; \\\n-\t  mv gcc/include gcc/tmp-include 2>/dev/null; \\\n-\t  mkdir gcc/include; \\\n-\t  cp $(srcdir)/gcc/gsyslimits.h gcc/include/syslimits.h; \\\n-\t  touch gcc/stmp-fixinc gcc/include/fixed; \\\n-\t  rm -f gcc/stmp-headers gcc/stmp-int-hdrs; \\\n \t  r=`${PWD_COMMAND}`; export r; \\\n-\t  s=`cd $(srcdir); ${PWD_COMMAND}` ; export s; \\\n+\t  s=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t  $(HOST_EXPORTS) \\\n-\t  (cd ./gcc && \\\n-\t   $(MAKE) $(GCC_FLAGS_TO_PASS) install); \\\n-\t  rm -rf gcc/include; \\\n-\t  mv gcc/tmp-include gcc/include 2>/dev/null; \\\n+\t  (cd ./gcc \\\n+\t   && $(MAKE) $(GCC_FLAGS_TO_PASS) install-no-fixedincludes); \\\n \telse true; fi\n @endif gcc\n "}, {"sha": "371c3b6f7db65aa32b7ec74efe15e42dcd58b7a7", "filename": "Makefile.tpl", "status": "modified", "additions": 11, "deletions": 19, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8294b6fe4d3311b335dfddc90eeeee2ebd1ddb12/Makefile.tpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8294b6fe4d3311b335dfddc90eeeee2ebd1ddb12/Makefile.tpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/Makefile.tpl?ref=8294b6fe4d3311b335dfddc90eeeee2ebd1ddb12", "patch": "@@ -906,11 +906,12 @@ install.all: install-no-fixedincludes\n \t\ttrue ; \\\n \tfi\n \n-# install-no-fixedincludes is used because Cygnus can not distribute\n-# the fixed header files.\n+# install-no-fixedincludes is used to allow the elaboration of binary packages\n+# suitable for distribution, where we cannot include the fixed system header\n+# files.\n .PHONY: install-no-fixedincludes\n install-no-fixedincludes: installdirs install-host-nogcc \\\n-\tinstall-target gcc-no-fixedincludes\n+\tinstall-target gcc-install-no-fixedincludes\n \n .PHONY: install-strip\n install-strip:\n@@ -1443,25 +1444,16 @@ check-gcc-[+language+]:\n check-[+language+]: check-gcc-[+language+][+ FOR lib-check-target +] [+ lib-check-target +][+ ENDFOR lib-check-target +]\n [+ ENDFOR languages +]\n \n-# Install the gcc headers files, but not the fixed include files,\n-# which Cygnus is not allowed to distribute.  This rule is very\n-# dependent on the workings of the gcc Makefile.in.\n-.PHONY: gcc-no-fixedincludes\n-gcc-no-fixedincludes:\n+# The gcc part of install-no-fixedincludes, which relies on an intimate\n+# knowledge of how a number of gcc internal targets (inter)operate.  Delegate.\n+.PHONY: gcc-install-no-fixedincludes\n+gcc-install-no-fixedincludes:\n \t@if [ -f ./gcc/Makefile ]; then \\\n-\t  rm -rf gcc/tmp-include; \\\n-\t  mv gcc/include gcc/tmp-include 2>/dev/null; \\\n-\t  mkdir gcc/include; \\\n-\t  cp $(srcdir)/gcc/gsyslimits.h gcc/include/syslimits.h; \\\n-\t  touch gcc/stmp-fixinc gcc/include/fixed; \\\n-\t  rm -f gcc/stmp-headers gcc/stmp-int-hdrs; \\\n \t  r=`${PWD_COMMAND}`; export r; \\\n-\t  s=`cd $(srcdir); ${PWD_COMMAND}` ; export s; \\\n+\t  s=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t  $(HOST_EXPORTS) \\\n-\t  (cd ./gcc && \\\n-\t   $(MAKE) $(GCC_FLAGS_TO_PASS) install); \\\n-\t  rm -rf gcc/include; \\\n-\t  mv gcc/tmp-include gcc/include 2>/dev/null; \\\n+\t  (cd ./gcc \\\n+\t   && $(MAKE) $(GCC_FLAGS_TO_PASS) install-no-fixedincludes); \\\n \telse true; fi\n @endif gcc\n "}, {"sha": "546ec91185b72b39b73e72c064f0d959d70cb09e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8294b6fe4d3311b335dfddc90eeeee2ebd1ddb12/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8294b6fe4d3311b335dfddc90eeeee2ebd1ddb12/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8294b6fe4d3311b335dfddc90eeeee2ebd1ddb12", "patch": "@@ -1,3 +1,10 @@\n+2012-05-16  Olivier Hainque  <hainque@adacore.com>\n+\n+\t* Makefile.in (install-no-fixedincludes): New target, former toplevel\n+\tgcc-no-fixedincludes. Stash \"include-fixed\" in addition to \"include\".\n+\tAdd comments and improve stamp preservation across the whole sequence.\n+\t(stmp-int-hdrs): Use move-if-change + cp -p to setup fix_dir/limits.h.\n+\n 2012-05-16  Richard Guenther  <rguenther@suse.de>\n \n \t* tree-inline.c (insert_init_stmt): Do not call"}, {"sha": "4853eb904523cbb7d7afe1fcb418e974eeea3870", "filename": "gcc/Makefile.in", "status": "modified", "additions": 45, "deletions": 1, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8294b6fe4d3311b335dfddc90eeeee2ebd1ddb12/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8294b6fe4d3311b335dfddc90eeeee2ebd1ddb12/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=8294b6fe4d3311b335dfddc90eeeee2ebd1ddb12", "patch": "@@ -4053,10 +4053,16 @@ gcov-dump$(exeext): $(GCOV_DUMP_OBJS) $(LIBDEPS)\n # Build the include directories.\n stmp-int-hdrs: $(STMP_FIXINC) $(USER_H) fixinc_list\n # Copy in the headers provided with gcc.\n+#\n # The sed command gets just the last file name component;\n # this is necessary because VPATH could add a dirname.\n # Using basename would be simpler, but some systems don't have it.\n+#\n # The touch command is here to workaround an AIX/Linux NFS bug.\n+#\n+# The move-if-change + cp -p twists for limits.h are intended to preserve\n+# the time stamp when we regenerate, to prevent pointless rebuilds during\n+# e.g. install-no-fixedincludes.\n \t-if [ -d include ] ; then true; else mkdir include; chmod a+rx include; fi\n \t-if [ -d include-fixed ] ; then true; else mkdir include-fixed; chmod a+rx include-fixed; fi\n \tfor file in .. $(USER_H); do \\\n@@ -4105,8 +4111,10 @@ stmp-int-hdrs: $(STMP_FIXINC) $(USER_H) fixinc_list\n \t  fi; \\\n \t  $(mkinstalldirs) $${fix_dir}; \\\n \t  chmod a+rx $${fix_dir} || true; \\\n+\t  $(SHELL) $(srcdir)/../move-if-change \\\n+\t    tmp-xlimits.h  tmp-limits.h; \\\n \t  rm -f $${fix_dir}/limits.h; \\\n-\t  mv tmp-xlimits.h $${fix_dir}/limits.h; \\\n+\t  cp -p tmp-limits.h $${fix_dir}/limits.h; \\\n \t  chmod a+r $${fix_dir}/limits.h; \\\n \tdone\n # Install the README\n@@ -4208,6 +4216,42 @@ stmp-fixinc: gsyslimits.h macro_list fixinc_list \\\n \tfi\n \t$(STAMP) stmp-fixinc\n #\f\n+\n+# Install with the gcc headers files, not the fixed include files, which we\n+# are typically not allowed to distribute.  The general idea is to:\n+#  - Get to \"install\" with a bare set of internal headers, not the\n+#    fixed system ones,\n+#  - Prevent rebuilds of what normally depends on the headers, which is\n+#    useless for installation purposes and would rely on improper headers.\n+#  - Restore as much of the original state as possible.\n+\n+.PHONY: install-no-fixedincludes\n+\n+install-no-fixedincludes:\n+\t# Stash the current set of headers away, save stamps we're going to\n+\t# alter explicitly, and arrange for fixincludes not to run next time\n+\t# we trigger a headers rebuild.\n+\t-rm -rf tmp-include\n+\t-mv include tmp-include 2>/dev/null\n+\t-mv include-fixed tmp-include-fixed 2>/dev/null\n+\t-mv stmp-int-hdrs tmp-stmp-int-hdrs 2>/dev/null\n+\t-mv stmp-fixinc tmp-stmp-fixinc 2>/dev/null\n+\t-mkdir include\n+\t-cp -p $(srcdir)/gsyslimits.h include/syslimits.h\n+\t-touch stmp-fixinc\n+\n+\t# Rebuild our internal headers, restore the original stamps so that\n+\t# \"install\" doesn't trigger pointless rebuilds because of that update,\n+\t# then do install\n+\t$(MAKE) $(FLAGS_TO_PASS) stmp-int-hdrs\n+\t-mv tmp-stmp-int-hdrs stmp-int-hdrs 2>/dev/null\n+\t-mv tmp-stmp-fixinc stmp-fixinc 2>/dev/null\n+\t$(MAKE) $(FLAGS_TO_PASS) install\n+\n+\t# Restore the original set of maybe-fixed headers\n+\t-rm -rf include; mv tmp-include include 2>/dev/null\n+\t-rm -rf include-fixed; mv tmp-include-fixed include-fixed 2>/dev/null\n+\n # Remake the info files.\n \n doc: $(BUILD_INFO) $(GENERATED_MANPAGES)"}]}