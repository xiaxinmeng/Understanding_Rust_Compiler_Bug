{"sha": "0a56537c161e85a9f1410f657c6be20ab0b3f750", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGE1NjUzN2MxNjFlODVhOWYxNDEwZjY1N2M2YmUyMGFiMGIzZjc1MA==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@redhat.com", "date": "2003-06-08T19:00:02Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2003-06-08T19:00:02Z"}, "message": "For PR libgcj/11085:\n\n\t* java/text/SimpleDateFormat.java (parse(String,ParsePosition)):\n\tLimit number of characters in numeric field when required.\n\t* java/text/DecimalFormat.java (parse(String,ParsePosition)):\n\tRespect maximumIntegerDigits.\n\nFrom-SVN: r67633", "tree": {"sha": "026cb63867f77b3c8c89feae341d8dc461663425", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/026cb63867f77b3c8c89feae341d8dc461663425"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0a56537c161e85a9f1410f657c6be20ab0b3f750", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a56537c161e85a9f1410f657c6be20ab0b3f750", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0a56537c161e85a9f1410f657c6be20ab0b3f750", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a56537c161e85a9f1410f657c6be20ab0b3f750/comments", "author": null, "committer": null, "parents": [{"sha": "5f158b4400a84d31b7180fbc96b1419264843328", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f158b4400a84d31b7180fbc96b1419264843328", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f158b4400a84d31b7180fbc96b1419264843328"}], "stats": {"total": 31, "additions": 26, "deletions": 5}, "files": [{"sha": "2d0597b2eec0d619f0f3b6fe74963475da85d0d5", "filename": "libjava/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a56537c161e85a9f1410f657c6be20ab0b3f750/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a56537c161e85a9f1410f657c6be20ab0b3f750/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=0a56537c161e85a9f1410f657c6be20ab0b3f750", "patch": "@@ -1,3 +1,11 @@\n+2003-06-07  Tom Tromey  <tromey@redhat.com>\n+\n+\tFor PR libgcj/11085:\n+\t* java/text/SimpleDateFormat.java (parse(String,ParsePosition)):\n+\tLimit number of characters in numeric field when required.\n+\t* java/text/DecimalFormat.java (parse(String,ParsePosition)):\n+\tRespect maximumIntegerDigits.\n+\n 2003-06-08  Michael Koch  <konqueror@gmx.de>\n \n \t* java/net/Socket.java"}, {"sha": "7f946173fee9f16f1e6cdd560e96f94330ed431c", "filename": "libjava/java/text/DecimalFormat.java", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a56537c161e85a9f1410f657c6be20ab0b3f750/libjava%2Fjava%2Ftext%2FDecimalFormat.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a56537c161e85a9f1410f657c6be20ab0b3f750/libjava%2Fjava%2Ftext%2FDecimalFormat.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Ftext%2FDecimalFormat.java?ref=0a56537c161e85a9f1410f657c6be20ab0b3f750", "patch": "@@ -1,5 +1,5 @@\n /* DecimalFormat.java -- Formats and parses numbers\n-   Copyright (C) 1999, 2000, 2001 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2000, 2001, 2003 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -693,8 +693,8 @@ public Number parse (String str, ParsePosition pos)\n     int index = pos.getIndex();\n     StringBuffer buf = new StringBuffer ();\n \n-      // We have to check both prefixes, because one might be empty.\n-      // We want to pick the longest prefix that matches.\n+    // We have to check both prefixes, because one might be empty.  We\n+    // want to pick the longest prefix that matches.\n     boolean got_pos = str.startsWith(positivePrefix, index);\n     String np = (negativePrefix != null\n \t\t ? negativePrefix\n@@ -729,11 +729,14 @@ else if (got_pos)\n \n     // FIXME: handle Inf and NaN.\n \n-      // FIXME: do we have to respect minimum/maxmimum digit stuff?\n-      // What about leading zeros?  What about multiplier?\n+    // FIXME: do we have to respect minimum digits?\n+    // What about leading zeros?  What about multiplier?\n \n     int start_index = index;\n     int max = str.length();\n+    int last = index + maximumIntegerDigits;\n+    if (last > 0 && max > last)\n+      max = last;\n     char zero = symbols.getZeroDigit();\n     int last_group = -1;\n     boolean int_part = true;"}, {"sha": "7b282f3c62f4533618e3d3d85671f7366eb6e567", "filename": "libjava/java/text/SimpleDateFormat.java", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a56537c161e85a9f1410f657c6be20ab0b3f750/libjava%2Fjava%2Ftext%2FSimpleDateFormat.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a56537c161e85a9f1410f657c6be20ab0b3f750/libjava%2Fjava%2Ftext%2FSimpleDateFormat.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Ftext%2FSimpleDateFormat.java?ref=0a56537c161e85a9f1410f657c6be20ab0b3f750", "patch": "@@ -570,6 +570,14 @@ public Date parse (String dateStr, ParsePosition pos)\n \twhile (++fmt_index < fmt_max && pattern.charAt(fmt_index) == ch)\n \t  ;\n \tint fmt_count = fmt_index - first;\n+\n+\t// We might need to limit the number of digits to parse in\n+\t// some cases.  We look to the next pattern character to\n+\t// decide.\n+\tboolean limit_digits = false;\n+\tif (fmt_index < fmt_max\n+\t    && standardChars.indexOf(pattern.charAt(fmt_index)) >= 0)\n+\t  limit_digits = true;\n \t--fmt_index;\n \n \t// We can handle most fields automatically: most either are\n@@ -702,6 +710,8 @@ public Date parse (String dateStr, ParsePosition pos)\n \tif (is_numeric)\n \t  {\n \t    numberFormat.setMinimumIntegerDigits(fmt_count);\n+\t    if (limit_digits)\n+\t      numberFormat.setMaximumIntegerDigits(fmt_count);\n \t    if (maybe2DigitYear)\n \t      index = pos.getIndex();\n \t    Number n = numberFormat.parse(dateStr, pos);"}]}