{"sha": "354172c5708888d5c6dfec10a0b334775fe9f1fe", "node_id": "C_kwDOANBUbNoAKDM1NDE3MmM1NzA4ODg4ZDVjNmRmZWMxMGEwYjMzNDc3NWZlOWYxZmU", "commit": {"author": {"name": "Andrea Corallo", "email": "andrea.corallo@arm.com", "date": "2022-11-16T13:43:45Z"}, "committer": {"name": "Andrea Corallo", "email": "andrea.corallo@arm.com", "date": "2022-11-28T09:09:22Z"}, "message": "arm: improve tests for vqrdmlashq_m*\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.target/arm/mve/intrinsics/vqrdmlashq_m_n_s16.c:\n\t* gcc.target/arm/mve/intrinsics/vqrdmlashq_m_n_s32.c:\n\t* gcc.target/arm/mve/intrinsics/vqrdmlashq_m_n_s8.c:", "tree": {"sha": "118cece73cc92c32865ab037ccbe88f7877f0d89", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/118cece73cc92c32865ab037ccbe88f7877f0d89"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/354172c5708888d5c6dfec10a0b334775fe9f1fe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/354172c5708888d5c6dfec10a0b334775fe9f1fe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/354172c5708888d5c6dfec10a0b334775fe9f1fe", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/354172c5708888d5c6dfec10a0b334775fe9f1fe/comments", "author": {"login": "AndreaCorallo", "id": 6765576, "node_id": "MDQ6VXNlcjY3NjU1NzY=", "avatar_url": "https://avatars.githubusercontent.com/u/6765576?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AndreaCorallo", "html_url": "https://github.com/AndreaCorallo", "followers_url": "https://api.github.com/users/AndreaCorallo/followers", "following_url": "https://api.github.com/users/AndreaCorallo/following{/other_user}", "gists_url": "https://api.github.com/users/AndreaCorallo/gists{/gist_id}", "starred_url": "https://api.github.com/users/AndreaCorallo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AndreaCorallo/subscriptions", "organizations_url": "https://api.github.com/users/AndreaCorallo/orgs", "repos_url": "https://api.github.com/users/AndreaCorallo/repos", "events_url": "https://api.github.com/users/AndreaCorallo/events{/privacy}", "received_events_url": "https://api.github.com/users/AndreaCorallo/received_events", "type": "User", "site_admin": false}, "committer": {"login": "AndreaCorallo", "id": 6765576, "node_id": "MDQ6VXNlcjY3NjU1NzY=", "avatar_url": "https://avatars.githubusercontent.com/u/6765576?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AndreaCorallo", "html_url": "https://github.com/AndreaCorallo", "followers_url": "https://api.github.com/users/AndreaCorallo/followers", "following_url": "https://api.github.com/users/AndreaCorallo/following{/other_user}", "gists_url": "https://api.github.com/users/AndreaCorallo/gists{/gist_id}", "starred_url": "https://api.github.com/users/AndreaCorallo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AndreaCorallo/subscriptions", "organizations_url": "https://api.github.com/users/AndreaCorallo/orgs", "repos_url": "https://api.github.com/users/AndreaCorallo/repos", "events_url": "https://api.github.com/users/AndreaCorallo/events{/privacy}", "received_events_url": "https://api.github.com/users/AndreaCorallo/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5ea0ea55cd062b1a043ba6e30ee2c2e30f8dc2fc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ea0ea55cd062b1a043ba6e30ee2c2e30f8dc2fc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5ea0ea55cd062b1a043ba6e30ee2c2e30f8dc2fc"}], "stats": {"total": 102, "additions": 78, "deletions": 24}, "files": [{"sha": "da4d724bb46bf5fc79f29f0fb3ea2ab013ebff7d", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vqrdmlashq_m_n_s16.c", "status": "modified", "additions": 26, "deletions": 8, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/354172c5708888d5c6dfec10a0b334775fe9f1fe/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqrdmlashq_m_n_s16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/354172c5708888d5c6dfec10a0b334775fe9f1fe/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqrdmlashq_m_n_s16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqrdmlashq_m_n_s16.c?ref=354172c5708888d5c6dfec10a0b334775fe9f1fe", "patch": "@@ -1,23 +1,41 @@\n /* { dg-require-effective-target arm_v8_1m_mve_ok } */\n /* { dg-add-options arm_v8_1m_mve } */\n /* { dg-additional-options \"-O2\" } */\n+/* { dg-final { check-function-bodies \"**\" \"\" } } */\n \n #include \"arm_mve.h\"\n \n+/*\n+**foo:\n+**\t...\n+**\tvmsr\tp0, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+**\tvpst(?:\t@.*|)\n+**\t...\n+**\tvqrdmlasht.s16\tq[0-9]+, q[0-9]+, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+*/\n int16x8_t\n-foo (int16x8_t a, int16x8_t b, int16_t c, mve_pred16_t p)\n+foo (int16x8_t m1, int16x8_t m2, int16_t add, mve_pred16_t p)\n {\n-  return vqrdmlashq_m_n_s16 (a, b, c, p);\n+  return vqrdmlashq_m_n_s16 (m1, m2, add, p);\n }\n \n-/* { dg-final { scan-assembler \"vpst\" } } */\n-/* { dg-final { scan-assembler \"vqrdmlasht.s16\"  }  } */\n \n+/*\n+**foo1:\n+**\t...\n+**\tvmsr\tp0, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+**\tvpst(?:\t@.*|)\n+**\t...\n+**\tvqrdmlasht.s16\tq[0-9]+, q[0-9]+, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+*/\n int16x8_t\n-foo1 (int16x8_t a, int16x8_t b, int16_t c, mve_pred16_t p)\n+foo1 (int16x8_t m1, int16x8_t m2, int16_t add, mve_pred16_t p)\n {\n-  return vqrdmlashq_m (a, b, c, p);\n+  return vqrdmlashq_m (m1, m2, add, p);\n }\n \n-/* { dg-final { scan-assembler \"vpst\" } } */\n-/* { dg-final { scan-assembler \"vqrdmlasht.s16\"  }  } */\n+/* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "2430f1cb102685d5e007a16440be2248268fbe33", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vqrdmlashq_m_n_s32.c", "status": "modified", "additions": 26, "deletions": 8, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/354172c5708888d5c6dfec10a0b334775fe9f1fe/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqrdmlashq_m_n_s32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/354172c5708888d5c6dfec10a0b334775fe9f1fe/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqrdmlashq_m_n_s32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqrdmlashq_m_n_s32.c?ref=354172c5708888d5c6dfec10a0b334775fe9f1fe", "patch": "@@ -1,23 +1,41 @@\n /* { dg-require-effective-target arm_v8_1m_mve_ok } */\n /* { dg-add-options arm_v8_1m_mve } */\n /* { dg-additional-options \"-O2\" } */\n+/* { dg-final { check-function-bodies \"**\" \"\" } } */\n \n #include \"arm_mve.h\"\n \n+/*\n+**foo:\n+**\t...\n+**\tvmsr\tp0, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+**\tvpst(?:\t@.*|)\n+**\t...\n+**\tvqrdmlasht.s32\tq[0-9]+, q[0-9]+, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+*/\n int32x4_t\n-foo (int32x4_t a, int32x4_t b, int32_t c, mve_pred16_t p)\n+foo (int32x4_t m1, int32x4_t m2, int32_t add, mve_pred16_t p)\n {\n-  return vqrdmlashq_m_n_s32 (a, b, c, p);\n+  return vqrdmlashq_m_n_s32 (m1, m2, add, p);\n }\n \n-/* { dg-final { scan-assembler \"vpst\" } } */\n-/* { dg-final { scan-assembler \"vqrdmlasht.s32\"  }  } */\n \n+/*\n+**foo1:\n+**\t...\n+**\tvmsr\tp0, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+**\tvpst(?:\t@.*|)\n+**\t...\n+**\tvqrdmlasht.s32\tq[0-9]+, q[0-9]+, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+*/\n int32x4_t\n-foo1 (int32x4_t a, int32x4_t b, int32_t c, mve_pred16_t p)\n+foo1 (int32x4_t m1, int32x4_t m2, int32_t add, mve_pred16_t p)\n {\n-  return vqrdmlashq_m (a, b, c, p);\n+  return vqrdmlashq_m (m1, m2, add, p);\n }\n \n-/* { dg-final { scan-assembler \"vpst\" } } */\n-/* { dg-final { scan-assembler \"vqrdmlasht.s32\"  }  } */\n+/* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "30915b24e5e1beea10285634d43fc593e96b8b32", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vqrdmlashq_m_n_s8.c", "status": "modified", "additions": 26, "deletions": 8, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/354172c5708888d5c6dfec10a0b334775fe9f1fe/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqrdmlashq_m_n_s8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/354172c5708888d5c6dfec10a0b334775fe9f1fe/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqrdmlashq_m_n_s8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqrdmlashq_m_n_s8.c?ref=354172c5708888d5c6dfec10a0b334775fe9f1fe", "patch": "@@ -1,23 +1,41 @@\n /* { dg-require-effective-target arm_v8_1m_mve_ok } */\n /* { dg-add-options arm_v8_1m_mve } */\n /* { dg-additional-options \"-O2\" } */\n+/* { dg-final { check-function-bodies \"**\" \"\" } } */\n \n #include \"arm_mve.h\"\n \n+/*\n+**foo:\n+**\t...\n+**\tvmsr\tp0, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+**\tvpst(?:\t@.*|)\n+**\t...\n+**\tvqrdmlasht.s8\tq[0-9]+, q[0-9]+, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+*/\n int8x16_t\n-foo (int8x16_t a, int8x16_t b, int8_t c, mve_pred16_t p)\n+foo (int8x16_t m1, int8x16_t m2, int8_t add, mve_pred16_t p)\n {\n-  return vqrdmlashq_m_n_s8 (a, b, c, p);\n+  return vqrdmlashq_m_n_s8 (m1, m2, add, p);\n }\n \n-/* { dg-final { scan-assembler \"vpst\" } } */\n-/* { dg-final { scan-assembler \"vqrdmlasht.s8\"  }  } */\n \n+/*\n+**foo1:\n+**\t...\n+**\tvmsr\tp0, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+**\tvpst(?:\t@.*|)\n+**\t...\n+**\tvqrdmlasht.s8\tq[0-9]+, q[0-9]+, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+*/\n int8x16_t\n-foo1 (int8x16_t a, int8x16_t b, int8_t c, mve_pred16_t p)\n+foo1 (int8x16_t m1, int8x16_t m2, int8_t add, mve_pred16_t p)\n {\n-  return vqrdmlashq_m (a, b, c, p);\n+  return vqrdmlashq_m (m1, m2, add, p);\n }\n \n-/* { dg-final { scan-assembler \"vpst\" } } */\n-/* { dg-final { scan-assembler \"vqrdmlasht.s8\"  }  } */\n+/* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}]}