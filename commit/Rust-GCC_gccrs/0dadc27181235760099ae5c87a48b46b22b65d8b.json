{"sha": "0dadc27181235760099ae5c87a48b46b22b65d8b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGRhZGMyNzE4MTIzNTc2MDA5OWFlNWM4N2E0OGI0NmIyMmI2NWQ4Yg==", "commit": {"author": {"name": "Diego Novillo", "email": "dnovillo@google.com", "date": "2012-09-12T13:51:52Z"}, "committer": {"name": "Diego Novillo", "email": "dnovillo@gcc.gnu.org", "date": "2012-09-12T13:51:52Z"}, "message": "vec.h: Remove compatibility notes for previous distinction between vectors of objects...\n\n2012-09-12  Diego Novillo  <dnovillo@google.com>\n\n\t* vec.h: Remove compatibility notes for previous distinction\n\tbetween vectors of objects and vectors of pointers.\n\nFrom-SVN: r191223", "tree": {"sha": "7a7ee0df3be2b54b1b3d6eaf5e6caf07ef5e1b11", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7a7ee0df3be2b54b1b3d6eaf5e6caf07ef5e1b11"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0dadc27181235760099ae5c87a48b46b22b65d8b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0dadc27181235760099ae5c87a48b46b22b65d8b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0dadc27181235760099ae5c87a48b46b22b65d8b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0dadc27181235760099ae5c87a48b46b22b65d8b/comments", "author": {"login": "dnovillo", "id": 7295335, "node_id": "MDQ6VXNlcjcyOTUzMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/7295335?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dnovillo", "html_url": "https://github.com/dnovillo", "followers_url": "https://api.github.com/users/dnovillo/followers", "following_url": "https://api.github.com/users/dnovillo/following{/other_user}", "gists_url": "https://api.github.com/users/dnovillo/gists{/gist_id}", "starred_url": "https://api.github.com/users/dnovillo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dnovillo/subscriptions", "organizations_url": "https://api.github.com/users/dnovillo/orgs", "repos_url": "https://api.github.com/users/dnovillo/repos", "events_url": "https://api.github.com/users/dnovillo/events{/privacy}", "received_events_url": "https://api.github.com/users/dnovillo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3fd42a6481086a4cdd7c9a95aa1d81ee971d489b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3fd42a6481086a4cdd7c9a95aa1d81ee971d489b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3fd42a6481086a4cdd7c9a95aa1d81ee971d489b"}], "stats": {"total": 23, "additions": 5, "deletions": 18}, "files": [{"sha": "7aa2e4f6072c0911b996cb85515f4a77c292d088", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0dadc27181235760099ae5c87a48b46b22b65d8b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0dadc27181235760099ae5c87a48b46b22b65d8b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0dadc27181235760099ae5c87a48b46b22b65d8b", "patch": "@@ -1,3 +1,8 @@\n+2012-09-12  Diego Novillo  <dnovillo@google.com>\n+\n+\t* vec.h: Remove compatibility notes for previous distinction\n+\tbetween vectors of objects and vectors of pointers.\n+\n 2012-09-12  Christian Bruel  <christian.bruel@st.com>\n \n \t* config/sh/newlib.h (NO_IMPLICIT_EXTERN_C): Define."}, {"sha": "8858f6afea14b0a61f4cddb8a0c47f9a7555aa84", "filename": "gcc/vec.h", "status": "modified", "additions": 0, "deletions": 18, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0dadc27181235760099ae5c87a48b46b22b65d8b/gcc%2Fvec.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0dadc27181235760099ae5c87a48b46b22b65d8b/gcc%2Fvec.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvec.h?ref=0dadc27181235760099ae5c87a48b46b22b65d8b", "patch": "@@ -31,23 +31,6 @@ along with GCC; see the file COPYING3.  If not see\n    sometimes backed by out-of-line generic functions.  The vectors are\n    designed to interoperate with the GTY machinery.\n \n-   FIXME - Remove the following compatibility notes after a handler\n-   class for vec_t is implemented.\n-\n-   To preserve compatibility with the existing API, some functions\n-   that manipulate vector elements implement two overloads: one taking\n-   a pointer to the element and others that take a pointer to a\n-   pointer to the element.\n-\n-   This used to be implemented with three different families of macros\n-   and structures: structure objects, scalar objects and of pointers.\n-   Both the structure object and pointer variants passed pointers to\n-   objects around -- in the former case the pointers were stored into\n-   the vector and in the latter case the pointers were dereferenced and\n-   the objects copied into the vector.  The scalar object variant was\n-   suitable for int-like objects, and the vector elements were returned\n-   by value.\n-\n    There are both 'index' and 'iterate' accessors.  The index accessor\n    is implemented by operator[].  The iterator returns a boolean\n    iteration condition and updates the iteration variable passed by\n@@ -124,7 +107,6 @@ along with GCC; see the file COPYING3.  If not see\n    VEC_safe_push(tree,gc,s->v,decl); // append some decl onto the end\n    for (ix = 0; VEC_iterate(tree,s->v,ix,elt); ix++)\n      { do something with elt }\n-\n */\n \n #if ENABLE_CHECKING"}]}