{"sha": "4e1ffb63c7db2b9e0a623528405cca46ea34fd28", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGUxZmZiNjNjN2RiMmI5ZTBhNjIzNTI4NDA1Y2NhNDZlYTM0ZmQyOA==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2012-08-10T02:12:56Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2012-08-10T02:12:56Z"}, "message": "s390: Rearrange temporary moves for use of CRJ\n\n\t* config/s390/s390.c (s390_expand_cs_hqi): Copy val to a temp before\n\tperforming the compare for the restart loop.\n\nFrom-SVN: r190280", "tree": {"sha": "fe94d0e62ecab05dc8dbd941eb245f83dc850bcc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fe94d0e62ecab05dc8dbd941eb245f83dc850bcc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4e1ffb63c7db2b9e0a623528405cca46ea34fd28", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e1ffb63c7db2b9e0a623528405cca46ea34fd28", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4e1ffb63c7db2b9e0a623528405cca46ea34fd28", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e1ffb63c7db2b9e0a623528405cca46ea34fd28/comments", "author": null, "committer": null, "parents": [{"sha": "1c6b1021266dc25184a1bcb381a255debe57dd68", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c6b1021266dc25184a1bcb381a255debe57dd68", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1c6b1021266dc25184a1bcb381a255debe57dd68"}], "stats": {"total": 21, "additions": 15, "deletions": 6}, "files": [{"sha": "9e4e8720dc478218409ec6b2304f1ea2b5369129", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e1ffb63c7db2b9e0a623528405cca46ea34fd28/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e1ffb63c7db2b9e0a623528405cca46ea34fd28/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4e1ffb63c7db2b9e0a623528405cca46ea34fd28", "patch": "@@ -1,3 +1,8 @@\n+2012-08-09  Richard Henderson  <rth@redhat.com>\n+\n+\t* config/s390/s390.c (s390_expand_cs_hqi): Copy val to a temp before\n+\tperforming the compare for the restart loop.\n+\n 2012-08-09  DJ Delorie  <dj@redhat.com>\n \n \t* config/rl78/rl78.c (rl78_alloc_physical_registers): Check for"}, {"sha": "0ae77a29c0c40d8ca4d81f9ce3d67edd97e52931", "filename": "gcc/config/s390/s390.c", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e1ffb63c7db2b9e0a623528405cca46ea34fd28/gcc%2Fconfig%2Fs390%2Fs390.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e1ffb63c7db2b9e0a623528405cca46ea34fd28/gcc%2Fconfig%2Fs390%2Fs390.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.c?ref=4e1ffb63c7db2b9e0a623528405cca46ea34fd28", "patch": "@@ -4821,7 +4821,7 @@ s390_expand_cs_hqi (enum machine_mode mode, rtx btarget, rtx vtarget, rtx mem,\n \t\t    rtx cmp, rtx new_rtx, bool is_weak)\n {\n   struct alignment_context ac;\n-  rtx cmpv, newv, val, resv, cc, seq0, seq1, seq2, seq3;\n+  rtx cmpv, newv, val, cc, seq0, seq1, seq2, seq3;\n   rtx res = gen_reg_rtx (SImode);\n   rtx csloop = NULL, csend = NULL;\n \n@@ -4868,14 +4868,18 @@ s390_expand_cs_hqi (enum machine_mode mode, rtx btarget, rtx vtarget, rtx mem,\n     emit_insn (gen_cstorecc4 (btarget, cc, XEXP (cc, 0), XEXP (cc, 1)));\n   else\n     {\n+      rtx tmp;\n+\n       /* Jump to end if we're done (likely?).  */\n       s390_emit_jump (csend, cc);\n \n-      /* Check for changes outside mode, and loop internal if so.  */\n-      resv = expand_simple_binop (SImode, AND, res, ac.modemaski,\n-\t\t\t          NULL_RTX, 1, OPTAB_DIRECT);\n-      cc = s390_emit_compare (NE, resv, val);\n-      emit_move_insn (val, resv);\n+      /* Check for changes outside mode, and loop internal if so.\n+\t Arrange the moves so that the compare is adjacent to the\n+\t branch so that we can generate CRJ.  */\n+      tmp = copy_to_reg (val);\n+      force_expand_binop (SImode, and_optab, res, ac.modemaski, val,\n+\t\t\t  1, OPTAB_DIRECT);\n+      cc = s390_emit_compare (NE, val, tmp);\n       s390_emit_jump (csloop, cc);\n \n       /* Failed.  */"}]}