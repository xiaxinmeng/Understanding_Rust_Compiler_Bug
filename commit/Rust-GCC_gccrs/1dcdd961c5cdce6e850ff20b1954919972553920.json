{"sha": "1dcdd961c5cdce6e850ff20b1954919972553920", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWRjZGQ5NjFjNWNkY2U2ZTg1MGZmMjBiMTk1NDkxOTk3MjU1MzkyMA==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2019-12-16T10:34:47Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2019-12-16T10:34:47Z"}, "message": "[Ada] Remove new strict-alignment check added by AI12-0001\n\n2019-12-16  Eric Botcazou  <ebotcazou@adacore.com>\n\ngcc/ada/\n\n\t* freeze.adb (Check_Strict_Alignment): Remove new check on\n\tHas_Aliased_Components for array types.\n\nFrom-SVN: r279433", "tree": {"sha": "9b56814f8542a8ee0d5a33de55d7997f550d97e9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9b56814f8542a8ee0d5a33de55d7997f550d97e9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1dcdd961c5cdce6e850ff20b1954919972553920", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1dcdd961c5cdce6e850ff20b1954919972553920", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1dcdd961c5cdce6e850ff20b1954919972553920", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1dcdd961c5cdce6e850ff20b1954919972553920/comments", "author": null, "committer": null, "parents": [{"sha": "c85dda723615051018ea8e19e5f0431e5ffdae55", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c85dda723615051018ea8e19e5f0431e5ffdae55", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c85dda723615051018ea8e19e5f0431e5ffdae55"}], "stats": {"total": 35, "additions": 19, "deletions": 16}, "files": [{"sha": "8f5c089bf87a85c948d6a6eb9d3fbd76822fcd93", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1dcdd961c5cdce6e850ff20b1954919972553920/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1dcdd961c5cdce6e850ff20b1954919972553920/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=1dcdd961c5cdce6e850ff20b1954919972553920", "patch": "@@ -1,3 +1,8 @@\n+2019-12-16  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* freeze.adb (Check_Strict_Alignment): Remove new check on\n+\tHas_Aliased_Components for array types.\n+\n 2019-12-16  Ed Schonberg  <schonberg@adacore.com>\n \n \t* sem_ch4.adb (Try_Container_Indexing): In the case of a derived"}, {"sha": "0312ca704aa78704233dd53fcfb28f60bf236653", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 14, "deletions": 16, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1dcdd961c5cdce6e850ff20b1954919972553920/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1dcdd961c5cdce6e850ff20b1954919972553920/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=1dcdd961c5cdce6e850ff20b1954919972553920", "patch": "@@ -1614,24 +1614,22 @@ package body Freeze is\n          Set_Strict_Alignment (E);\n \n       elsif Is_Array_Type (E) then\n-         if Has_Aliased_Components (E)\n-           or else Strict_Alignment (Component_Type (E))\n-         then\n-            Set_Strict_Alignment (E);\n-         end if;\n+         Set_Strict_Alignment (E, Strict_Alignment (Component_Type (E)));\n \n-      elsif Is_Record_Type (E) then\n-         --  ??? If the type has convention C_Pass_By_Copy, we consider\n-         --  that it may be packed even if it contains aliased parts.\n-         --  Such types are very unlikely to be misaligned in practice\n-         --  and this makes the compiler accept dubious representation\n-         --  clauses used in Florist on types containing arrays with\n-         --  aliased components.\n-\n-         if C_Pass_By_Copy (E) then\n-            return;\n-         end if;\n+         --  ??? AI12-001: Any component of a packed type that contains an\n+         --  aliased part must be aligned according to the alignment of its\n+         --  subtype (RM 13.2(7)). This means that the following test:\n+\n+         --    if Has_Aliased_Components (E) then\n+         --      Set_Strict_Alignment (E);\n+         --    end if;\n \n+         --  should be implemented here. Unfortunately it would break Florist,\n+         --  which has the bad habit of overaligning all the types it declares\n+         --  on 32-bit platforms. Other legacy codebases could also be affected\n+         --  because this check has historically been missing in GNAT.\n+\n+      elsif Is_Record_Type (E) then\n          Comp := First_Component (E);\n          while Present (Comp) loop\n             if not Is_Type (Comp)"}]}