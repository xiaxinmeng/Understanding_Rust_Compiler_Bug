{"sha": "5f5c25d99db0cfb53d9686fbca496f255907b791", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWY1YzI1ZDk5ZGIwY2ZiNTNkOTY4NmZiY2E0OTZmMjU1OTA3Yjc5MQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2005-12-24T10:01:45Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2005-12-24T10:01:45Z"}, "message": "stl_algobase.h (fill(const _Deque_iterator&, const _Deque_iterator&, const _Tp&)): Deal, correctly, only with iterators (leave const_iterators alone).\n\n2005-12-24  Paolo Carlini  <pcarlini@suse.de>\n\n\t* include/bits/stl_algobase.h (fill(const _Deque_iterator&,\n\tconst _Deque_iterator&, const _Tp&)): Deal, correctly, only\n\twith iterators (leave const_iterators alone).\n\n2005-12-24  Paolo Carlini  <pcarlini@suse.de>\n\n\t* include/bits/stl_algobase.h (fill(const _Deque_iterator<>&,\n\tconst _Deque_iterator<>&, const _Tp&)): Add.\n\n\t* testsuite/23_containers/deque/cons/assign/1.cc: New.\n\nFrom-SVN: r109038", "tree": {"sha": "e44e8954f064d44f3469757c00c73bc1132796a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e44e8954f064d44f3469757c00c73bc1132796a6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5f5c25d99db0cfb53d9686fbca496f255907b791", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f5c25d99db0cfb53d9686fbca496f255907b791", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f5c25d99db0cfb53d9686fbca496f255907b791", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f5c25d99db0cfb53d9686fbca496f255907b791/comments", "author": null, "committer": null, "parents": [{"sha": "125f2a50c9e0c994dc2642c41dc597e03618c3cc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/125f2a50c9e0c994dc2642c41dc597e03618c3cc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/125f2a50c9e0c994dc2642c41dc597e03618c3cc"}], "stats": {"total": 90, "additions": 90, "deletions": 0}, "files": [{"sha": "157695246384d8eb7a38d4eafcb7af6c98dbc123", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f5c25d99db0cfb53d9686fbca496f255907b791/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f5c25d99db0cfb53d9686fbca496f255907b791/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=5f5c25d99db0cfb53d9686fbca496f255907b791", "patch": "@@ -1,3 +1,16 @@\n+2005-12-24  Paolo Carlini  <pcarlini@suse.de>\n+\n+\t* include/bits/stl_algobase.h (fill(const _Deque_iterator&,\n+\tconst _Deque_iterator&, const _Tp&)): Deal, correctly, only\n+\twith iterators (leave const_iterators alone).\n+\n+2005-12-24  Paolo Carlini  <pcarlini@suse.de>\n+\n+\t* include/bits/stl_algobase.h (fill(const _Deque_iterator<>&,\n+\tconst _Deque_iterator<>&, const _Tp&)): Add.\n+\n+\t* testsuite/23_containers/deque/cons/assign/1.cc: New.\n+\n 2005-12-19  Paolo Carlini  <pcarlini@suse.de>\n \n \t* include/bits/stl_deque.h (deque<>::resize, _M_fill_assign):"}, {"sha": "9a2e7af16c40b1c1ea31780598dd30d4cda1a3e2", "filename": "libstdc++-v3/include/bits/stl_algobase.h", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f5c25d99db0cfb53d9686fbca496f255907b791/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_algobase.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f5c25d99db0cfb53d9686fbca496f255907b791/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_algobase.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_algobase.h?ref=5f5c25d99db0cfb53d9686fbca496f255907b791", "patch": "@@ -594,6 +594,32 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n     std::memset(__first, static_cast<unsigned char>(__tmp), __last - __first);\n   }\n \n+  template<typename _Tp, typename _Ref, typename _Ptr>\n+    struct _Deque_iterator;\n+\n+  // Overload for deque::iterators, exploiting the \"segmented-iterator\n+  // optimization\".  NB: leave const_iterators alone!\n+  template<typename _Tp>\n+    void\n+    fill(const _Deque_iterator<_Tp, _Tp&, _Tp*>& __first,\n+\t const _Deque_iterator<_Tp, _Tp&, _Tp*>& __last, const _Tp& __value)\n+    {\n+      typedef typename _Deque_iterator<_Tp, _Tp&, _Tp*>::_Self _Self;\n+\n+      for (typename _Self::_Map_pointer __node = __first._M_node + 1;\n+           __node < __last._M_node; ++__node)\n+\tstd::fill(*__node, *__node + _Self::_S_buffer_size(), __value);\n+\n+      if (__first._M_node != __last._M_node)\n+\t{\n+\t  std::fill(__first._M_cur, __first._M_last, __value);\n+\t  std::fill(__last._M_first, __last._M_cur, __value);\n+\t}\n+      else\n+\tstd::fill(__first._M_cur, __last._M_cur, __value);\n+    }\n+\n+\n   template<bool>\n     struct __fill_n\n     {"}, {"sha": "6b8a92c15432c4132e795236a7778c1a24044ff4", "filename": "libstdc++-v3/testsuite/23_containers/deque/cons/assign/1.cc", "status": "added", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f5c25d99db0cfb53d9686fbca496f255907b791/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fcons%2Fassign%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f5c25d99db0cfb53d9686fbca496f255907b791/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fcons%2Fassign%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fcons%2Fassign%2F1.cc?ref=5f5c25d99db0cfb53d9686fbca496f255907b791", "patch": "@@ -0,0 +1,51 @@\n+// 2005-12-12  Paolo Carlini  <pcarlini@suse.de>\n+//\n+// Copyright (C) 2005 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// 23.2.1.1 deque constructors, copy, and assignment\n+\n+#include <deque>\n+#include <testsuite_hooks.h>\n+\n+void test01()\n+{\n+  bool test __attribute__((unused)) = true;\n+  using namespace std;\n+\n+  int data3[10000];\n+  fill(data3, data3 + 10000, 3);\n+\n+  int data5[10000];\n+  fill(data5, data5 + 10000, 5);\n+\n+  for (deque<int>::size_type i = 0; i < 10000; ++i)\n+    {\n+      deque<int> d(rand() % 5000, 1);\n+      d.assign(i, i % 2 ? 3 : 5);\n+\n+      VERIFY( d.size() == i );\n+      VERIFY( equal(d.begin(), d.end(), i % 2 ? data3 : data5) );\n+    }\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}]}