{"sha": "d5df9a20dbe9eade3bae0b12d042b4958416c3d8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDVkZjlhMjBkYmU5ZWFkZTNiYWUwYjEyZDA0MmI0OTU4NDE2YzNkOA==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2009-04-22T16:32:24Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2009-04-22T16:32:24Z"}, "message": "* cpplib.pot: Regenerate.\n\nFrom-SVN: r146599", "tree": {"sha": "e1feeac2d470c4f6db671261fc7d7fff43e1dca8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e1feeac2d470c4f6db671261fc7d7fff43e1dca8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d5df9a20dbe9eade3bae0b12d042b4958416c3d8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5df9a20dbe9eade3bae0b12d042b4958416c3d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d5df9a20dbe9eade3bae0b12d042b4958416c3d8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5df9a20dbe9eade3bae0b12d042b4958416c3d8/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f9d93b7d6cec9b18406f0c140a370529331d29fc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9d93b7d6cec9b18406f0c140a370529331d29fc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f9d93b7d6cec9b18406f0c140a370529331d29fc"}], "stats": {"total": 362, "additions": 173, "deletions": 189}, "files": [{"sha": "e0c8a0844ff62d5b0b23e1e109a39387e60ed1b0", "filename": "libcpp/po/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5df9a20dbe9eade3bae0b12d042b4958416c3d8/libcpp%2Fpo%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5df9a20dbe9eade3bae0b12d042b4958416c3d8/libcpp%2Fpo%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fpo%2FChangeLog?ref=d5df9a20dbe9eade3bae0b12d042b4958416c3d8", "patch": "@@ -1,3 +1,7 @@\n+2009-04-22  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* cpplib.pot: Regenerate.\n+\n 2009-03-28  Joseph Myers  <joseph@codesourcery.com>\n \n \t* cpplib.pot: Regenerate."}, {"sha": "94adf5d08f5fcc457b4e712c964620478277b620", "filename": "libcpp/po/cpplib.pot", "status": "modified", "additions": 169, "deletions": 189, "changes": 358, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5df9a20dbe9eade3bae0b12d042b4958416c3d8/libcpp%2Fpo%2Fcpplib.pot", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5df9a20dbe9eade3bae0b12d042b4958416c3d8/libcpp%2Fpo%2Fcpplib.pot", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fpo%2Fcpplib.pot?ref=d5df9a20dbe9eade3bae0b12d042b4958416c3d8", "patch": "@@ -8,7 +8,7 @@ msgid \"\"\n msgstr \"\"\n \"Project-Id-Version: PACKAGE VERSION\\n\"\n \"Report-Msgid-Bugs-To: http://gcc.gnu.org/bugs.html\\n\"\n-\"POT-Creation-Date: 2009-03-28 06:55+0000\\n\"\n+\"POT-Creation-Date: 2009-04-22 16:24+0000\\n\"\n \"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\\n\"\n \"Last-Translator: FULL NAME <EMAIL@ADDRESS>\\n\"\n \"Language-Team: LANGUAGE <LL@li.org>\\n\"\n@@ -74,7 +74,7 @@ msgid \"%.*s is not a valid universal character\"\n msgstr \"\"\n \n #: charset.c:1039\n-#: lex.c:485\n+#: lex.c:486\n msgid \"'$' in identifier or number\"\n msgstr \"\"\n \n@@ -154,485 +154,477 @@ msgstr \"\"\n msgid \"failure to convert %s to %s\"\n msgstr \"\"\n \n-#: directives.c:216\n-#: directives.c:242\n+#: directives.c:219\n+#: directives.c:245\n #, c-format\n msgid \"extra tokens at end of #%s directive\"\n msgstr \"\"\n \n-#: directives.c:348\n+#: directives.c:351\n #, c-format\n msgid \"#%s is a GCC extension\"\n msgstr \"\"\n \n-#: directives.c:352\n+#: directives.c:355\n #, c-format\n msgid \"#%s is a deprecated GCC extension\"\n msgstr \"\"\n \n-#: directives.c:366\n+#: directives.c:369\n msgid \"suggest not using #elif in traditional C\"\n msgstr \"\"\n \n-#: directives.c:369\n+#: directives.c:372\n #, c-format\n msgid \"traditional C ignores #%s with the # indented\"\n msgstr \"\"\n \n-#: directives.c:373\n+#: directives.c:376\n #, c-format\n msgid \"suggest hiding #%s from traditional C with an indented #\"\n msgstr \"\"\n \n-#: directives.c:399\n+#: directives.c:402\n msgid \"embedding a directive within macro arguments is not portable\"\n msgstr \"\"\n \n-#: directives.c:419\n+#: directives.c:422\n msgid \"style of line directive is a GCC extension\"\n msgstr \"\"\n \n-#: directives.c:474\n+#: directives.c:477\n #, c-format\n msgid \"invalid preprocessing directive #%s\"\n msgstr \"\"\n \n-#: directives.c:542\n+#: directives.c:545\n msgid \"\\\"defined\\\" cannot be used as a macro name\"\n msgstr \"\"\n \n-#: directives.c:548\n+#: directives.c:551\n #, c-format\n msgid \"\\\"%s\\\" cannot be used as a macro name as it is an operator in C++\"\n msgstr \"\"\n \n-#: directives.c:551\n+#: directives.c:554\n #, c-format\n msgid \"no macro name given in #%s directive\"\n msgstr \"\"\n \n-#: directives.c:554\n+#: directives.c:557\n msgid \"macro names must be identifiers\"\n msgstr \"\"\n \n-#: directives.c:603\n+#: directives.c:606\n #, c-format\n msgid \"undefining \\\"%s\\\"\"\n msgstr \"\"\n \n-#: directives.c:658\n+#: directives.c:661\n msgid \"missing terminating > character\"\n msgstr \"\"\n \n-#: directives.c:713\n+#: directives.c:716\n #, c-format\n msgid \"#%s expects \\\"FILENAME\\\" or <FILENAME>\"\n msgstr \"\"\n \n-#: directives.c:757\n+#: directives.c:760\n #, c-format\n msgid \"empty filename in #%s\"\n msgstr \"\"\n \n-#: directives.c:767\n+#: directives.c:770\n msgid \"#include nested too deeply\"\n msgstr \"\"\n \n-#: directives.c:808\n+#: directives.c:811\n msgid \"#include_next in primary source file\"\n msgstr \"\"\n \n-#: directives.c:834\n+#: directives.c:837\n #, c-format\n msgid \"invalid flag \\\"%s\\\" in line directive\"\n msgstr \"\"\n \n-#: directives.c:894\n+#: directives.c:897\n msgid \"unexpected end of file after #line\"\n msgstr \"\"\n \n-#: directives.c:897\n+#: directives.c:900\n #, c-format\n msgid \"\\\"%s\\\" after #line is not a positive integer\"\n msgstr \"\"\n \n-#: directives.c:903\n-#: directives.c:905\n+#: directives.c:906\n+#: directives.c:908\n msgid \"line number out of range\"\n msgstr \"\"\n \n-#: directives.c:918\n-#: directives.c:998\n+#: directives.c:921\n+#: directives.c:1001\n #, c-format\n msgid \"\\\"%s\\\" is not a valid filename\"\n msgstr \"\"\n \n-#: directives.c:958\n+#: directives.c:961\n #, c-format\n msgid \"\\\"%s\\\" after # is not a positive integer\"\n msgstr \"\"\n \n-#: directives.c:1042\n+#: directives.c:1045\n #, c-format\n msgid \"%s\"\n msgstr \"\"\n \n-#: directives.c:1066\n+#: directives.c:1069\n #, c-format\n msgid \"invalid #%s directive\"\n msgstr \"\"\n \n-#: directives.c:1129\n+#: directives.c:1132\n #, c-format\n msgid \"registering pragmas in namespace \\\"%s\\\" with mismatched name expansion\"\n msgstr \"\"\n \n-#: directives.c:1138\n+#: directives.c:1141\n #, c-format\n msgid \"registering pragma \\\"%s\\\" with name expansion and no namespace\"\n msgstr \"\"\n \n-#: directives.c:1156\n+#: directives.c:1159\n #, c-format\n msgid \"registering \\\"%s\\\" as both a pragma and a pragma namespace\"\n msgstr \"\"\n \n-#: directives.c:1159\n+#: directives.c:1162\n #, c-format\n msgid \"#pragma %s %s is already registered\"\n msgstr \"\"\n \n-#: directives.c:1162\n+#: directives.c:1165\n #, c-format\n msgid \"#pragma %s is already registered\"\n msgstr \"\"\n \n-#: directives.c:1192\n+#: directives.c:1195\n msgid \"registering pragma with NULL handler\"\n msgstr \"\"\n \n-#: directives.c:1402\n+#: directives.c:1405\n msgid \"#pragma once in main file\"\n msgstr \"\"\n \n-#: directives.c:1425\n+#: directives.c:1428\n msgid \"invalid #pragma GCC poison directive\"\n msgstr \"\"\n \n-#: directives.c:1434\n+#: directives.c:1437\n #, c-format\n msgid \"poisoning existing macro \\\"%s\\\"\"\n msgstr \"\"\n \n-#: directives.c:1453\n+#: directives.c:1456\n msgid \"#pragma system_header ignored outside include file\"\n msgstr \"\"\n \n-#: directives.c:1477\n+#: directives.c:1480\n #, c-format\n msgid \"cannot find source file %s\"\n msgstr \"\"\n \n-#: directives.c:1481\n+#: directives.c:1484\n #, c-format\n msgid \"current file is older than %s\"\n msgstr \"\"\n \n-#: directives.c:1665\n+#: directives.c:1668\n msgid \"_Pragma takes a parenthesized string literal\"\n msgstr \"\"\n \n-#: directives.c:1766\n+#: directives.c:1769\n msgid \"#else without #if\"\n msgstr \"\"\n \n-#: directives.c:1771\n+#: directives.c:1774\n msgid \"#else after #else\"\n msgstr \"\"\n \n-#: directives.c:1773\n-#: directives.c:1806\n+#: directives.c:1776\n+#: directives.c:1809\n msgid \"the conditional began here\"\n msgstr \"\"\n \n-#: directives.c:1799\n+#: directives.c:1802\n msgid \"#elif without #if\"\n msgstr \"\"\n \n-#: directives.c:1804\n+#: directives.c:1807\n msgid \"#elif after #else\"\n msgstr \"\"\n \n-#: directives.c:1842\n+#: directives.c:1845\n msgid \"#endif without #if\"\n msgstr \"\"\n \n-#: directives.c:1919\n+#: directives.c:1922\n msgid \"missing '(' after predicate\"\n msgstr \"\"\n \n-#: directives.c:1934\n+#: directives.c:1937\n msgid \"missing ')' to complete answer\"\n msgstr \"\"\n \n-#: directives.c:1954\n+#: directives.c:1957\n msgid \"predicate's answer is empty\"\n msgstr \"\"\n \n-#: directives.c:1981\n+#: directives.c:1984\n msgid \"assertion without predicate\"\n msgstr \"\"\n \n-#: directives.c:1983\n+#: directives.c:1986\n msgid \"predicate must be an identifier\"\n msgstr \"\"\n \n-#: directives.c:2069\n+#: directives.c:2072\n #, c-format\n msgid \"\\\"%s\\\" re-asserted\"\n msgstr \"\"\n \n-#: directives.c:2375\n+#: directives.c:2371\n #, c-format\n msgid \"unterminated #%s\"\n msgstr \"\"\n \n #: directives-only.c:222\n-#: lex.c:1148\n-#: traditional.c:162\n+#: lex.c:1149\n+#: traditional.c:163\n msgid \"unterminated comment\"\n msgstr \"\"\n \n-#: errors.c:118\n-msgid \"warning: \"\n-msgstr \"\"\n-\n-#: errors.c:120\n-msgid \"internal error: \"\n-msgstr \"\"\n-\n-#: errors.c:122\n-msgid \"error: \"\n-msgstr \"\"\n-\n-#: errors.c:195\n+#: errors.c:93\n msgid \"stdout\"\n msgstr \"\"\n \n-#: errors.c:197\n+#: errors.c:95\n #, c-format\n msgid \"%s: %s\"\n msgstr \"\"\n \n-#: expr.c:262\n+#: expr.c:278\n msgid \"too many decimal points in number\"\n msgstr \"\"\n \n-#: expr.c:291\n-#: expr.c:366\n+#: expr.c:307\n+#: expr.c:389\n msgid \"fixed-point constants are a GCC extension\"\n msgstr \"\"\n \n-#: expr.c:304\n+#: expr.c:320\n #, c-format\n msgid \"invalid digit \\\"%c\\\" in binary constant\"\n msgstr \"\"\n \n-#: expr.c:306\n+#: expr.c:322\n #, c-format\n msgid \"invalid digit \\\"%c\\\" in octal constant\"\n msgstr \"\"\n \n-#: expr.c:314\n+#: expr.c:330\n msgid \"invalid prefix \\\"0b\\\" for floating constant\"\n msgstr \"\"\n \n-#: expr.c:320\n+#: expr.c:336\n msgid \"use of C99 hexadecimal floating constant\"\n msgstr \"\"\n \n-#: expr.c:329\n+#: expr.c:345\n msgid \"exponent has no digits\"\n msgstr \"\"\n \n-#: expr.c:336\n+#: expr.c:352\n msgid \"hexadecimal floating constants require an exponent\"\n msgstr \"\"\n \n-#: expr.c:342\n+#: expr.c:358\n #, c-format\n msgid \"invalid suffix \\\"%.*s\\\" on floating constant\"\n msgstr \"\"\n \n-#: expr.c:352\n-#: expr.c:394\n+#: expr.c:368\n+#: expr.c:417\n #, c-format\n msgid \"traditional C rejects the \\\"%.*s\\\" suffix\"\n msgstr \"\"\n \n-#: expr.c:359\n+#: expr.c:376\n+msgid \"suffix for double constant is a GCC extension\"\n+msgstr \"\"\n+\n+#: expr.c:382\n #, c-format\n msgid \"invalid suffix \\\"%.*s\\\" with hexadecimal floating constant\"\n msgstr \"\"\n \n-#: expr.c:370\n+#: expr.c:393\n msgid \"decimal float constants are a GCC extension\"\n msgstr \"\"\n \n-#: expr.c:380\n+#: expr.c:403\n #, c-format\n msgid \"invalid suffix \\\"%.*s\\\" on integer constant\"\n msgstr \"\"\n \n-#: expr.c:402\n-msgid \"use of C99 long long integer constant\"\n+#: expr.c:426\n+msgid \"use of C++0x long long integer constant\"\n msgstr \"\"\n \n-#: expr.c:410\n+#: expr.c:435\n msgid \"imaginary constants are a GCC extension\"\n msgstr \"\"\n \n-#: expr.c:413\n+#: expr.c:438\n msgid \"binary constants are a GCC extension\"\n msgstr \"\"\n \n-#: expr.c:506\n+#: expr.c:531\n msgid \"integer constant is too large for its type\"\n msgstr \"\"\n \n-#: expr.c:518\n+#: expr.c:543\n msgid \"integer constant is so large that it is unsigned\"\n msgstr \"\"\n \n-#: expr.c:613\n+#: expr.c:638\n msgid \"missing ')' after \\\"defined\\\"\"\n msgstr \"\"\n \n-#: expr.c:620\n+#: expr.c:645\n msgid \"operator \\\"defined\\\" requires an identifier\"\n msgstr \"\"\n \n-#: expr.c:628\n+#: expr.c:653\n #, c-format\n msgid \"(\\\"%s\\\" is an alternative token for \\\"%s\\\" in C++)\"\n msgstr \"\"\n \n-#: expr.c:638\n+#: expr.c:663\n msgid \"this use of \\\"defined\\\" may not be portable\"\n msgstr \"\"\n \n-#: expr.c:691\n+#: expr.c:716\n msgid \"floating constant in preprocessor expression\"\n msgstr \"\"\n \n-#: expr.c:697\n+#: expr.c:722\n msgid \"imaginary number in preprocessor expression\"\n msgstr \"\"\n \n-#: expr.c:744\n+#: expr.c:769\n #, c-format\n msgid \"\\\"%s\\\" is not defined\"\n msgstr \"\"\n \n-#: expr.c:756\n+#: expr.c:781\n msgid \"assertions are a GCC extension\"\n msgstr \"\"\n \n-#: expr.c:759\n+#: expr.c:784\n msgid \"assertions are a deprecated extension\"\n msgstr \"\"\n \n-#: expr.c:892\n-#: expr.c:921\n+#: expr.c:917\n+#: expr.c:946\n #, c-format\n msgid \"missing binary operator before token \\\"%s\\\"\"\n msgstr \"\"\n \n-#: expr.c:912\n+#: expr.c:937\n #, c-format\n msgid \"token \\\"%s\\\" is not valid in preprocessor expressions\"\n msgstr \"\"\n \n-#: expr.c:929\n+#: expr.c:954\n msgid \"missing expression between '(' and ')'\"\n msgstr \"\"\n \n-#: expr.c:932\n+#: expr.c:957\n #, c-format\n msgid \"%s with no expression\"\n msgstr \"\"\n \n-#: expr.c:935\n+#: expr.c:960\n #, c-format\n msgid \"operator '%s' has no right operand\"\n msgstr \"\"\n \n-#: expr.c:940\n+#: expr.c:965\n #, c-format\n msgid \"operator '%s' has no left operand\"\n msgstr \"\"\n \n-#: expr.c:966\n+#: expr.c:991\n msgid \" ':' without preceding '?'\"\n msgstr \"\"\n \n-#: expr.c:994\n+#: expr.c:1019\n #, c-format\n msgid \"unbalanced stack in %s\"\n msgstr \"\"\n \n-#: expr.c:1014\n+#: expr.c:1039\n #, c-format\n msgid \"impossible operator '%u'\"\n msgstr \"\"\n \n-#: expr.c:1115\n+#: expr.c:1140\n msgid \"missing ')' in expression\"\n msgstr \"\"\n \n-#: expr.c:1144\n+#: expr.c:1169\n msgid \"'?' without following ':'\"\n msgstr \"\"\n \n-#: expr.c:1154\n+#: expr.c:1179\n msgid \"integer overflow in preprocessor expression\"\n msgstr \"\"\n \n-#: expr.c:1159\n+#: expr.c:1184\n msgid \"missing '(' in expression\"\n msgstr \"\"\n \n-#: expr.c:1191\n+#: expr.c:1216\n #, c-format\n msgid \"the left operand of \\\"%s\\\" changes sign when promoted\"\n msgstr \"\"\n \n-#: expr.c:1196\n+#: expr.c:1221\n #, c-format\n msgid \"the right operand of \\\"%s\\\" changes sign when promoted\"\n msgstr \"\"\n \n-#: expr.c:1455\n+#: expr.c:1480\n msgid \"traditional C rejects the unary plus operator\"\n msgstr \"\"\n \n-#: expr.c:1538\n+#: expr.c:1563\n msgid \"comma operator in operand of #if\"\n msgstr \"\"\n \n-#: expr.c:1670\n+#: expr.c:1695\n msgid \"division by zero in #if\"\n msgstr \"\"\n \n #: files.c:457\n msgid \"NULL directory in find_file\"\n msgstr \"\"\n \n-#: files.c:495\n+#: files.c:494\n msgid \"one or more PCH files were found, but they were invalid\"\n msgstr \"\"\n \n-#: files.c:498\n+#: files.c:497\n msgid \"use -Winvalid-pch for more information\"\n msgstr \"\"\n \n@@ -660,132 +652,120 @@ msgstr \"\"\n msgid \"Multiple include guards may be useful for:\\n\"\n msgstr \"\"\n \n-#: init.c:451\n+#: init.c:470\n msgid \"cppchar_t must be an unsigned type\"\n msgstr \"\"\n \n-#: init.c:455\n+#: init.c:474\n #, c-format\n msgid \"\"\n \"preprocessor arithmetic has maximum precision of %lu bits; target requires %\"\n \"lu bits\"\n msgstr \"\"\n \n-#: init.c:462\n+#: init.c:481\n msgid \"CPP arithmetic must be at least as precise as a target int\"\n msgstr \"\"\n \n-#: init.c:465\n+#: init.c:484\n msgid \"target char is less than 8 bits wide\"\n msgstr \"\"\n \n-#: init.c:469\n+#: init.c:488\n msgid \"target wchar_t is narrower than target char\"\n msgstr \"\"\n \n-#: init.c:473\n+#: init.c:492\n msgid \"target int is narrower than target char\"\n msgstr \"\"\n \n-#: init.c:478\n+#: init.c:497\n msgid \"CPP half-integer narrower than CPP character\"\n msgstr \"\"\n \n-#: init.c:482\n+#: init.c:501\n #, c-format\n msgid \"\"\n \"CPP on this host cannot handle wide character constants over %lu bits, but \"\n \"the target requires %lu bits\"\n msgstr \"\"\n \n-#: lex.c:284\n+#: lex.c:285\n msgid \"backslash and newline separated by space\"\n msgstr \"\"\n \n-#: lex.c:289\n+#: lex.c:290\n msgid \"backslash-newline at end of file\"\n msgstr \"\"\n \n-#: lex.c:304\n+#: lex.c:305\n #, c-format\n msgid \"trigraph ??%c converted to %c\"\n msgstr \"\"\n \n-#: lex.c:311\n+#: lex.c:312\n #, c-format\n msgid \"trigraph ??%c ignored, use -trigraphs to enable\"\n msgstr \"\"\n \n-#: lex.c:357\n+#: lex.c:358\n msgid \"\\\"/*\\\" within comment\"\n msgstr \"\"\n \n-#: lex.c:415\n+#: lex.c:416\n #, c-format\n msgid \"%s in preprocessing directive\"\n msgstr \"\"\n \n-#: lex.c:424\n+#: lex.c:425\n msgid \"null character(s) ignored\"\n msgstr \"\"\n \n-#: lex.c:461\n+#: lex.c:462\n #, c-format\n msgid \"`%.*s' is not in NFKC\"\n msgstr \"\"\n \n-#: lex.c:464\n+#: lex.c:465\n #, c-format\n msgid \"`%.*s' is not in NFC\"\n msgstr \"\"\n \n-#: lex.c:552\n+#: lex.c:553\n #, c-format\n msgid \"attempt to use poisoned \\\"%s\\\"\"\n msgstr \"\"\n \n-#: lex.c:560\n+#: lex.c:561\n msgid \"__VA_ARGS__ can only appear in the expansion of a C99 variadic macro\"\n msgstr \"\"\n \n-#: lex.c:674\n+#: lex.c:675\n msgid \"null character(s) preserved in literal\"\n msgstr \"\"\n \n-#: lex.c:677\n+#: lex.c:678\n #, c-format\n msgid \"missing terminating %c character\"\n msgstr \"\"\n \n-#: lex.c:1159\n+#: lex.c:1160\n msgid \"C++ style comments are not allowed in ISO C90\"\n msgstr \"\"\n \n-#: lex.c:1161\n+#: lex.c:1162\n msgid \"(this will be reported only once per input file)\"\n msgstr \"\"\n \n-#: lex.c:1166\n+#: lex.c:1167\n msgid \"multi-line comment\"\n msgstr \"\"\n \n-#: lex.c:1480\n+#: lex.c:1487\n #, c-format\n msgid \"unspellable token %s\"\n msgstr \"\"\n \n-#: line-map.c:319\n-#, c-format\n-msgid \"In file included from %s:%u\"\n-msgstr \"\"\n-\n-#: line-map.c:337\n-#, c-format\n-msgid \"\"\n-\",\\n\"\n-\"                 from %s:%u\"\n-msgstr \"\"\n-\n #: macro.c:87\n #, c-format\n msgid \"macro \\\"%s\\\" is not used\"\n@@ -809,108 +789,108 @@ msgstr \"\"\n msgid \"__COUNTER__ expanded inside directive with -fdirectives-only\"\n msgstr \"\"\n \n-#: macro.c:427\n+#: macro.c:429\n msgid \"invalid string literal, ignoring final '\\\\'\"\n msgstr \"\"\n \n-#: macro.c:487\n+#: macro.c:489\n #, c-format\n msgid \"pasting \\\"%s\\\" and \\\"%s\\\" does not give a valid preprocessing token\"\n msgstr \"\"\n \n-#: macro.c:562\n+#: macro.c:564\n msgid \"ISO C99 requires rest arguments to be used\"\n msgstr \"\"\n \n-#: macro.c:567\n+#: macro.c:569\n #, c-format\n msgid \"macro \\\"%s\\\" requires %u arguments, but only %u given\"\n msgstr \"\"\n \n-#: macro.c:572\n+#: macro.c:574\n #, c-format\n msgid \"macro \\\"%s\\\" passed %u arguments, but takes just %u\"\n msgstr \"\"\n \n-#: macro.c:731\n-#: traditional.c:680\n+#: macro.c:733\n+#: traditional.c:681\n #, c-format\n msgid \"unterminated argument list invoking macro \\\"%s\\\"\"\n msgstr \"\"\n \n-#: macro.c:848\n+#: macro.c:863\n #, c-format\n msgid \"function-like macro \\\"%s\\\" must be used with arguments in traditional C\"\n msgstr \"\"\n \n-#: macro.c:1016\n+#: macro.c:1034\n #, c-format\n msgid \"\"\n \"invoking macro %s argument %d: empty macro arguments are undefined in ISO \"\n \"C90 and ISO C++98\"\n msgstr \"\"\n \n-#: macro.c:1453\n+#: macro.c:1497\n #, c-format\n msgid \"duplicate macro parameter \\\"%s\\\"\"\n msgstr \"\"\n \n-#: macro.c:1499\n+#: macro.c:1543\n #, c-format\n msgid \"\\\"%s\\\" may not appear in macro parameter list\"\n msgstr \"\"\n \n-#: macro.c:1507\n+#: macro.c:1551\n msgid \"macro parameters must be comma-separated\"\n msgstr \"\"\n \n-#: macro.c:1524\n+#: macro.c:1568\n msgid \"parameter name missing\"\n msgstr \"\"\n \n-#: macro.c:1541\n+#: macro.c:1585\n msgid \"anonymous variadic macros were introduced in C99\"\n msgstr \"\"\n \n-#: macro.c:1546\n+#: macro.c:1590\n msgid \"ISO C does not permit named variadic macros\"\n msgstr \"\"\n \n-#: macro.c:1555\n+#: macro.c:1599\n msgid \"missing ')' in macro parameter list\"\n msgstr \"\"\n \n-#: macro.c:1604\n+#: macro.c:1648\n msgid \"'##' cannot appear at either end of a macro expansion\"\n msgstr \"\"\n \n-#: macro.c:1638\n+#: macro.c:1683\n msgid \"ISO C99 requires whitespace after the macro name\"\n msgstr \"\"\n \n-#: macro.c:1662\n+#: macro.c:1707\n msgid \"missing whitespace after the macro name\"\n msgstr \"\"\n \n-#: macro.c:1692\n+#: macro.c:1741\n msgid \"'#' is not followed by a macro parameter\"\n msgstr \"\"\n \n-#: macro.c:1811\n+#: macro.c:1896\n #, c-format\n msgid \"\\\"%s\\\" redefined\"\n msgstr \"\"\n \n-#: macro.c:1816\n+#: macro.c:1901\n msgid \"this is the location of the previous definition\"\n msgstr \"\"\n \n-#: macro.c:1877\n+#: macro.c:1962\n #, c-format\n msgid \"macro argument \\\"%s\\\" would be stringified in traditional C\"\n msgstr \"\"\n \n-#: macro.c:1900\n+#: macro.c:1985\n #, c-format\n msgid \"invalid hash type %d in cpp_macro_definition\"\n msgstr \"\"\n@@ -954,11 +934,11 @@ msgstr \"\"\n msgid \"while reading precompiled header\"\n msgstr \"\"\n \n-#: traditional.c:750\n+#: traditional.c:751\n #, c-format\n msgid \"detected recursion whilst expanding macro \\\"%s\\\"\"\n msgstr \"\"\n \n-#: traditional.c:968\n+#: traditional.c:969\n msgid \"syntax error in macro parameter list\"\n msgstr \"\""}]}