{"sha": "b16ffa33326b35865432c6c08c4d951bfd9e1411", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjE2ZmZhMzMzMjZiMzU4NjU0MzJjNmMwOGM0ZDk1MWJmZDllMTQxMQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-07-17T06:56:06Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-07-17T06:56:06Z"}, "message": "[multiple changes]\n\n2014-07-17  Robert Dewar  <dewar@adacore.com>\n\n\t* sprint.adb (Write_Itype): Print proper header for string\n\tliteral subtype.\n\n2014-07-17  Steve Baird  <baird@adacore.com>\n\n\t* sinfo.ads, sem_scil.ads: Improve comments, minor reformatting.\n\nFrom-SVN: r212731", "tree": {"sha": "6451be0d7983ed9f3a5aaa02d5f6ea3ee283cdd9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6451be0d7983ed9f3a5aaa02d5f6ea3ee283cdd9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b16ffa33326b35865432c6c08c4d951bfd9e1411", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b16ffa33326b35865432c6c08c4d951bfd9e1411", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b16ffa33326b35865432c6c08c4d951bfd9e1411", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b16ffa33326b35865432c6c08c4d951bfd9e1411/comments", "author": null, "committer": null, "parents": [{"sha": "7b966a95465c9af78959a53c93fff608c9158748", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b966a95465c9af78959a53c93fff608c9158748", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7b966a95465c9af78959a53c93fff608c9158748"}], "stats": {"total": 69, "additions": 51, "deletions": 18}, "files": [{"sha": "0dfddec828b1fe4c056d6303023e2cde284af1ce", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b16ffa33326b35865432c6c08c4d951bfd9e1411/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b16ffa33326b35865432c6c08c4d951bfd9e1411/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=b16ffa33326b35865432c6c08c4d951bfd9e1411", "patch": "@@ -1,3 +1,12 @@\n+2014-07-17  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sprint.adb (Write_Itype): Print proper header for string\n+\tliteral subtype.\n+\n+2014-07-17  Steve Baird  <baird@adacore.com>\n+\n+\t* sinfo.ads, sem_scil.ads: Improve comments, minor reformatting.\n+\n 2014-07-17  Vincent Celier  <celier@adacore.com>\n \n \t* gnatbind.adb: Change in message \"try ... for more information\"."}, {"sha": "3eb02375f590d09d1140f9518cc9c00fb9b4c037", "filename": "gcc/ada/sem_scil.ads", "status": "modified", "additions": 15, "deletions": 2, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b16ffa33326b35865432c6c08c4d951bfd9e1411/gcc%2Fada%2Fsem_scil.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b16ffa33326b35865432c6c08c4d951bfd9e1411/gcc%2Fada%2Fsem_scil.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_scil.ads?ref=b16ffa33326b35865432c6c08c4d951bfd9e1411", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2009-2010, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2009-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -31,7 +31,20 @@ with Types; use Types;\n \n package Sem_SCIL is\n \n-   --  Here would be a good place to document what SCIL is all about ???\n+   --  SCIL (Statically Checkable Intermediate Language) is produced by the\n+   --  CodePeer back end (aka gnat2scil). For some constructs (tagged type\n+   --  declarations, dispatching calls, classwide membership tests), the\n+   --  CodePeer back end needs to locate certain nodes in the tree. To allow\n+   --  CodePeer to do this without introducing unwanted dependencies on the\n+   --  details of the FE's expansion strategies, SCIL_Nodes are generated.\n+\n+   --  For example, a dispatching call in the Ada source will, if CodePeer mode\n+   --  is enabled, result in the FE's generation of an N_Scil_Dispatching_Call\n+   --  node decorated with semantic attributes which identify the call itself,\n+   --  the primitive operation being called, the tagged type to which the\n+   --  operation belongs, and the controlling tag value of the call. If the FE\n+   --  implements some new expansion strategy for dispatching calls but this\n+   --  interface is preserved, the CodePeer back end should be unaffected.\n \n    function Check_SCIL_Node (N : Node_Id) return Traverse_Result;\n    --  Process a single node during the tree traversal. Done to verify that"}, {"sha": "d61164848057d43c029987b7d7293c8c7e5ecc2c", "filename": "gcc/ada/sinfo.ads", "status": "modified", "additions": 26, "deletions": 16, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b16ffa33326b35865432c6c08c4d951bfd9e1411/gcc%2Fada%2Fsinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b16ffa33326b35865432c6c08c4d951bfd9e1411/gcc%2Fada%2Fsinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.ads?ref=b16ffa33326b35865432c6c08c4d951bfd9e1411", "patch": "@@ -1959,20 +1959,27 @@ package Sinfo is\n    --    and multiplication operations.\n \n    --  SCIL_Entity (Node4-Sem)\n-   --    Present in SCIL nodes. Used to reference the tagged type associated\n-   --    with the SCIL node.\n+   --    Present in SCIL nodes. References the specific tagged type associated\n+   --    with the SCIL node (for an N_SCIL_Dispatching_Call node, this is\n+   --    the controlling type of the call; for an N_SCIL_Membership_Test node\n+   --    generated as part of testing membership in T'Class, this is T; for an\n+   --    N_SCIL_Dispatch_Table_Tag_Init node, this is the type being declared).\n \n    --  SCIL_Controlling_Tag (Node5-Sem)\n-   --    Present in N_SCIL_Dispatching_Call nodes. Used to reference the\n-   --    controlling tag of a dispatching call.\n+   --    Present in N_SCIL_Dispatching_Call nodes. References the\n+   --    controlling tag of a dispatching call. This is usually an\n+   --    N_Selected_Component node (for a _tag component), but may\n+   --    be an N_Object_Declaration or N_Parameter_Specification node\n+   --    in some cases (e.g., for a call to a classwide streaming operation\n+   --    or to an instance of Ada.Tags.Generic_Dispatching_Constructor).\n \n    --  SCIL_Tag_Value (Node5-Sem)\n    --    Present in N_SCIL_Membership_Test nodes. Used to reference the tag\n-   --    value that is being tested.\n+   --    of the value that is being tested.\n \n    --  SCIL_Target_Prim (Node2-Sem)\n-   --    Present in N_SCIL_Dispatching_Call nodes. Used to reference the tagged\n-   --    type primitive associated with the SCIL node.\n+   --    Present in N_SCIL_Dispatching_Call nodes. References the primitive\n+   --    operation named (statically) in a dispatching call.\n \n    --  Scope (Node3-Sem)\n    --    Present in defining identifiers, defining character literals and\n@@ -7834,16 +7841,19 @@ package Sinfo is\n       --  Note: in the case where a debug source file is generated, the Sloc\n       --  for this node points to the quote in the Sprint file output.\n \n-      -----------------\n-      --  SCIL Nodes --\n-      -----------------\n+      ----------------\n+      -- SCIL Nodes --\n+      ----------------\n+\n+      --  SCIL nodes are special nodes added to the tree when the CodePeer mode\n+      --  is active. They are only generated if SCIL generation is enabled.\n+      --  A standard tree-walk will not encounter these nodes even if they\n+      --  are present; these nodes are only accessible via the function\n+      --  SCIL_LL.Get_SCIL_Node. These nodes have no associated dynamic\n+      --  semantics.\n \n-      --  SCIL nodes are special nodes added to the tree when the CodePeer\n-      --  mode is active. They help the CodePeer backend to locate nodes that\n-      --  require special processing. They are only generated if SCIL\n-      --  generation is enabled. A standard tree-walk will not encounter\n-      --  these nodes even if they are present; these nodes are only\n-      --  accessible via the function SCIL_LL.Get_SCIL_Node.\n+      --  Sprint syntax: [ <node kind> ]\n+      --  No semantic field values are displayed.\n \n       --  N_SCIL_Dispatch_Table_Tag_Init\n       --  Sloc references a node for a tag initialization"}, {"sha": "f6980abeb860e04949eb2c64e5811c2c3f4a56f3", "filename": "gcc/ada/sprint.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b16ffa33326b35865432c6c08c4d951bfd9e1411/gcc%2Fada%2Fsprint.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b16ffa33326b35865432c6c08c4d951bfd9e1411/gcc%2Fada%2Fsprint.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsprint.adb?ref=b16ffa33326b35865432c6c08c4d951bfd9e1411", "patch": "@@ -4322,6 +4322,7 @@ package body Sprint is\n                         Len : constant Uint :=\n                                 String_Literal_Length (Typ);\n                      begin\n+                        Write_Header (False);\n                         Write_Str (\"String (\");\n                         Write_Int (UI_To_Int (LB));\n                         Write_Str (\" .. \");"}]}