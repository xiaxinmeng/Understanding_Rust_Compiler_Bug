{"sha": "25095d1ef8dd24c646fd337a607fb94a06e73f6c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjUwOTVkMWVmOGRkMjRjNjQ2ZmQzMzdhNjA3ZmI5NGEwNmU3M2Y2Yw==", "commit": {"author": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2020-10-08T14:44:46Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2020-10-13T13:41:27Z"}, "message": "AArch64: Add Neoverse N2 tuning model\n\nThis patch adds a tuning structure for Neoverse N2 to allow for further\ntuning.\nFor now it's just a deduplication of the Neoverse N1 struct that it was\nreusing but with the SVE width set to 128.\n\nBootstrapped and tested on aarch64-none-linux-gnu.\n\ngcc/\n\t* config/aarch64/aarch64.c (neoversen2_tunings): Define.\n\t* config/aarch64/aarch64-cores.def (neoverse-n2): Use it.", "tree": {"sha": "94965979ecca1c84a3e8796eded26a60bd15781e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/94965979ecca1c84a3e8796eded26a60bd15781e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/25095d1ef8dd24c646fd337a607fb94a06e73f6c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/25095d1ef8dd24c646fd337a607fb94a06e73f6c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/25095d1ef8dd24c646fd337a607fb94a06e73f6c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/25095d1ef8dd24c646fd337a607fb94a06e73f6c/comments", "author": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7287cf184e3aef6e55da717c7acc86cf02500e79", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7287cf184e3aef6e55da717c7acc86cf02500e79", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7287cf184e3aef6e55da717c7acc86cf02500e79"}], "stats": {"total": 28, "additions": 27, "deletions": 1}, "files": [{"sha": "3aa13f68d2fe97d82be89ce0bc4243fcc238f37a", "filename": "gcc/config/aarch64/aarch64-cores.def", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25095d1ef8dd24c646fd337a607fb94a06e73f6c/gcc%2Fconfig%2Faarch64%2Faarch64-cores.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25095d1ef8dd24c646fd337a607fb94a06e73f6c/gcc%2Fconfig%2Faarch64%2Faarch64-cores.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-cores.def?ref=25095d1ef8dd24c646fd337a607fb94a06e73f6c", "patch": "@@ -143,7 +143,7 @@ AARCH64_CORE(\"neoverse-v1\", neoversev1, cortexa57, 8_4A,  AARCH64_FL_FOR_ARCH8_4\n AARCH64_CORE(\"saphira\",     saphira,    saphira,    8_4A,  AARCH64_FL_FOR_ARCH8_4 | AARCH64_FL_CRYPTO | AARCH64_FL_RCPC, saphira,   0x51, 0xC01, -1)\n \n /* Armv8.5-A Architecture Processors.  */\n-AARCH64_CORE(\"neoverse-n2\", neoversen2, cortexa57, 8_5A, AARCH64_FL_FOR_ARCH8_5 | AARCH64_FL_I8MM | AARCH64_FL_BF16 | AARCH64_FL_F16 | AARCH64_FL_SVE | AARCH64_FL_SVE2 | AARCH64_FL_SVE2_BITPERM | AARCH64_FL_RNG | AARCH64_FL_MEMTAG, neoversen1, 0x41, 0xd49, -1)\n+AARCH64_CORE(\"neoverse-n2\", neoversen2, cortexa57, 8_5A, AARCH64_FL_FOR_ARCH8_5 | AARCH64_FL_I8MM | AARCH64_FL_BF16 | AARCH64_FL_F16 | AARCH64_FL_SVE | AARCH64_FL_SVE2 | AARCH64_FL_SVE2_BITPERM | AARCH64_FL_RNG | AARCH64_FL_MEMTAG, neoversen2, 0x41, 0xd49, -1)\n \n /* ARMv8-A big.LITTLE implementations.  */\n "}, {"sha": "a8cc545c37044345c3f1d3bf09151c8a9578a032", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25095d1ef8dd24c646fd337a607fb94a06e73f6c/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25095d1ef8dd24c646fd337a607fb94a06e73f6c/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=25095d1ef8dd24c646fd337a607fb94a06e73f6c", "patch": "@@ -1362,6 +1362,32 @@ static const struct tune_params neoversev1_tunings =\n   &generic_prefetch_tune\n };\n \n+static const struct tune_params neoversen2_tunings =\n+{\n+  &cortexa57_extra_costs,\n+  &generic_addrcost_table,\n+  &generic_regmove_cost,\n+  &cortexa57_vector_cost,\n+  &generic_branch_cost,\n+  &generic_approx_modes,\n+  SVE_128, /* sve_width  */\n+  4, /* memmov_cost  */\n+  3, /* issue_rate  */\n+  (AARCH64_FUSE_AES_AESMC | AARCH64_FUSE_CMP_BRANCH), /* fusible_ops  */\n+  \"32:16\",\t/* function_align.  */\n+  \"4\",\t\t/* jump_align.  */\n+  \"32:16\",\t/* loop_align.  */\n+  2,\t/* int_reassoc_width.  */\n+  4,\t/* fp_reassoc_width.  */\n+  2,\t/* vec_reassoc_width.  */\n+  2,\t/* min_div_recip_mul_sf.  */\n+  2,\t/* min_div_recip_mul_df.  */\n+  0,\t/* max_case_values.  */\n+  tune_params::AUTOPREFETCHER_WEAK,\t/* autoprefetcher_model.  */\n+  (AARCH64_EXTRA_TUNE_NONE),\t/* tune_flags.  */\n+  &generic_prefetch_tune\n+};\n+\n static const struct tune_params a64fx_tunings =\n {\n   &generic_extra_costs,"}]}