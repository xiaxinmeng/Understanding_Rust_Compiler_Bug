{"sha": "e499b5eef4a54a30664ea9b711e5c4c074c027ee", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTQ5OWI1ZWVmNGE1NGEzMDY2NGVhOWI3MTFlNWM0YzA3NGMwMjdlZQ==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2011-02-01T20:15:13Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2011-02-01T20:15:13Z"}, "message": "Add __sync_bool_compare_and_swap_4 for targets which don't have it.\n\nFrom-SVN: r169502", "tree": {"sha": "1f437e24f32ccff17d1227b1dbf809a86570b655", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1f437e24f32ccff17d1227b1dbf809a86570b655"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e499b5eef4a54a30664ea9b711e5c4c074c027ee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e499b5eef4a54a30664ea9b711e5c4c074c027ee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e499b5eef4a54a30664ea9b711e5c4c074c027ee", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e499b5eef4a54a30664ea9b711e5c4c074c027ee/comments", "author": null, "committer": null, "parents": [{"sha": "22843acd311d3efc611d145b72e1e02e24db6c44", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22843acd311d3efc611d145b72e1e02e24db6c44", "html_url": "https://github.com/Rust-GCC/gccrs/commit/22843acd311d3efc611d145b72e1e02e24db6c44"}], "stats": {"total": 36, "additions": 36, "deletions": 0}, "files": [{"sha": "3f1c8d52e73354da51ffe90353e9ff3b7b2759f9", "filename": "libgo/runtime/thread.c", "status": "modified", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e499b5eef4a54a30664ea9b711e5c4c074c027ee/libgo%2Fruntime%2Fthread.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e499b5eef4a54a30664ea9b711e5c4c074c027ee/libgo%2Fruntime%2Fthread.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fruntime%2Fthread.c?ref=e499b5eef4a54a30664ea9b711e5c4c074c027ee", "patch": "@@ -3,6 +3,7 @@\n // license that can be found in the LICENSE file.\n \n #include \"runtime.h\"\n+#include \"go-assert.h\"\n \n void\n runtime_initlock(Lock *l)\n@@ -75,3 +76,38 @@ runtime_destroylock(Lock *l)\n {\n \tsem_destroy(&l->sem);\n }\n+\n+#ifndef __GCC_HAVE_SYNC_COMPARE_AND_SWAP_4\n+\n+// For targets which don't have the required sync support.  Really\n+// this should be provided by gcc itself.  FIXME.\n+\n+static pthread_mutex_t sync_lock = PTHREAD_MUTEX_INITIALIZER;\n+\n+_Bool\n+__sync_bool_compare_and_swap_4(uint32*, uint32, uint32)\n+  __attribute__((visibility(\"hidden\")));\n+\n+_Bool\n+__sync_bool_compare_and_swap_4(uint32* ptr, uint32 old, uint32 new)\n+{\n+  int i;\n+  _Bool ret;\n+\n+  i = pthread_mutex_lock(&sync_lock);\n+  __go_assert(i == 0);\n+\n+  if(*ptr != old) {\n+    ret = 0;\n+  } else {\n+    *ptr = new;\n+    ret = 1;\n+  }\n+\n+  i = pthread_mutex_unlock(&sync_lock);\n+  __go_assert(i == 0);\n+\n+  return ret;\n+}\n+\n+#endif"}]}