{"sha": "a60c51fe4803ad63d909c819642490630d893152", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTYwYzUxZmU0ODAzYWQ2M2Q5MDljODE5NjQyNDkwNjMwZDg5MzE1Mg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2015-05-19T13:54:32Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2015-05-19T13:54:32Z"}, "message": "re PR rtl-optimization/66187 (wrong code at -O1, -O2 and -O3 on x86_64-linux-gnu)\n\n\tPR tree-optimization/66187\n\t* match.pd ((bit_and (plus/minus (convert @0) (convert @1)) mask)):\n\tPass TYPE_SIGN to tree_int_cst_min_precision.  If\n\t!TYPE_OVERFLOW_WRAPS, ensure @4 is non-negative.\n\n\t* gcc.c-torture/execute/pr66187.c: New test.\n\t* gcc.dg/pr66187-1.c: New test.\n\t* gcc.dg/pr66187-2.c: New test.\n\nFrom-SVN: r223366", "tree": {"sha": "10eb4f7411e8dc56c8e74c0a8a4e98363bae7752", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/10eb4f7411e8dc56c8e74c0a8a4e98363bae7752"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a60c51fe4803ad63d909c819642490630d893152", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a60c51fe4803ad63d909c819642490630d893152", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a60c51fe4803ad63d909c819642490630d893152", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a60c51fe4803ad63d909c819642490630d893152/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0e50b62468123005202598f2a88b59f9ca695eb8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e50b62468123005202598f2a88b59f9ca695eb8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0e50b62468123005202598f2a88b59f9ca695eb8"}], "stats": {"total": 228, "additions": 227, "deletions": 1}, "files": [{"sha": "bd1886731ac2d5e4455ed9977cf8c5fe321e8811", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a60c51fe4803ad63d909c819642490630d893152/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a60c51fe4803ad63d909c819642490630d893152/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a60c51fe4803ad63d909c819642490630d893152", "patch": "@@ -1,3 +1,10 @@\n+2015-05-19  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/66187\n+\t* match.pd ((bit_and (plus/minus (convert @0) (convert @1)) mask)):\n+\tPass TYPE_SIGN to tree_int_cst_min_precision.  If\n+\t!TYPE_OVERFLOW_WRAPS, ensure @4 is non-negative.\n+\n 2015-05-19  David Malcolm  <dmalcolm@redhat.com>\n \n \t* diagnostic.c (diagnostic_report_current_module): Strengthen"}, {"sha": "54500d9191685c6c0bc5e757d875225f6da786ff", "filename": "gcc/match.pd", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a60c51fe4803ad63d909c819642490630d893152/gcc%2Fmatch.pd", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a60c51fe4803ad63d909c819642490630d893152/gcc%2Fmatch.pd", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmatch.pd?ref=a60c51fe4803ad63d909c819642490630d893152", "patch": "@@ -1115,8 +1115,10 @@ along with GCC; see the file COPYING3.  If not see\n \t /* The inner conversion must be a widening conversion.  */\n \t && TYPE_PRECISION (TREE_TYPE (@2)) > TYPE_PRECISION (TREE_TYPE (@0))\n \t && types_match (@0, @1)\n-\t && (tree_int_cst_min_precision (@4, UNSIGNED)\n+\t && (tree_int_cst_min_precision (@4, TYPE_SIGN (TREE_TYPE (@0)))\n \t     <= TYPE_PRECISION (TREE_TYPE (@0)))\n+\t && (TYPE_OVERFLOW_WRAPS (TREE_TYPE (@0))\n+\t     || tree_int_cst_sgn (@4) >= 0)\n \t && single_use (@5))\n       (if (TYPE_OVERFLOW_WRAPS (TREE_TYPE (@0)))\n \t(with { tree ntype = TREE_TYPE (@0); }"}, {"sha": "4933fee3a7c061f633795056e092d08ca12155f1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a60c51fe4803ad63d909c819642490630d893152/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a60c51fe4803ad63d909c819642490630d893152/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a60c51fe4803ad63d909c819642490630d893152", "patch": "@@ -1,3 +1,10 @@\n+2015-05-19  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/66187\n+\t* gcc.c-torture/execute/pr66187.c: New test.\n+\t* gcc.dg/pr66187-1.c: New test.\n+\t* gcc.dg/pr66187-2.c: New test.\n+\n 2015-05-19  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \t* gcc.dg/vect/bb-slp-35.c: Adjust."}, {"sha": "1677e8601d61656baa41064e6cf1edacd9ad49bb", "filename": "gcc/testsuite/gcc.c-torture/execute/pr66187.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a60c51fe4803ad63d909c819642490630d893152/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr66187.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a60c51fe4803ad63d909c819642490630d893152/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr66187.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr66187.c?ref=a60c51fe4803ad63d909c819642490630d893152", "patch": "@@ -0,0 +1,16 @@\n+/* PR tree-optimization/66187 */\n+\n+int a = 1, e = -1;\n+short b, f;\n+\n+int\n+main ()\n+{\n+  f = e;\n+  int g = b < 0 ? 0 : f + b;\n+  if ((g & -4) < 0)\n+    a = 0;\n+  if (a)\n+    __builtin_abort ();\n+  return 0;\n+}"}, {"sha": "62aea6978d97d35611e91484be344acc67a94660", "filename": "gcc/testsuite/gcc.dg/pr66187-1.c", "status": "added", "additions": 97, "deletions": 0, "changes": 97, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a60c51fe4803ad63d909c819642490630d893152/gcc%2Ftestsuite%2Fgcc.dg%2Fpr66187-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a60c51fe4803ad63d909c819642490630d893152/gcc%2Ftestsuite%2Fgcc.dg%2Fpr66187-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr66187-1.c?ref=a60c51fe4803ad63d909c819642490630d893152", "patch": "@@ -0,0 +1,97 @@\n+/* PR tree-optimization/66187 */\n+/* { dg-do run } */\n+/* { dg-options \"-O2 -fno-wrapv\" } */\n+\n+__attribute__((noinline, noclone)) int\n+f0 (unsigned char x, unsigned char y)\n+{\n+  return (x + y) & 0x2ff;\n+}\n+\n+__attribute__((noinline, noclone)) int\n+f1 (unsigned char x, unsigned char y)\n+{\n+  return (x - y) & 0x2ff;\n+}\n+\n+__attribute__((noinline, noclone)) int\n+f2 (signed char x, signed char y)\n+{\n+  return (x + y) & -4;\n+}\n+\n+__attribute__((noinline, noclone)) int\n+f3 (signed char x, signed char y)\n+{\n+  return (x + y) & 0xf8;\n+}\n+\n+__attribute__((noinline, noclone)) int\n+f4 (signed char x, signed char y)\n+{\n+  return (x + y) & 0x78;\n+}\n+\n+__attribute__((noinline, noclone)) int\n+f5 (unsigned char x, unsigned char y)\n+{\n+  int a = x;\n+  int b = y;\n+  int c = a + b;\n+  return c & 0x2ff;\n+}\n+\n+__attribute__((noinline, noclone)) int\n+f6 (unsigned char x, unsigned char y)\n+{\n+  int a = x;\n+  int b = y;\n+  int c = a - b;\n+  return c & 0x2ff;\n+}\n+\n+__attribute__((noinline, noclone)) int\n+f7 (signed char x, signed char y)\n+{\n+  int a = x;\n+  int b = y;\n+  int c = a + b;\n+  return c & -4;\n+}\n+\n+__attribute__((noinline, noclone)) int\n+f8 (signed char x, signed char y)\n+{\n+  int a = x;\n+  int b = y;\n+  int c = a + b;\n+  return c & 0xf8;\n+}\n+\n+__attribute__((noinline, noclone)) int\n+f9 (signed char x, signed char y)\n+{\n+  int a = x;\n+  int b = y;\n+  int c = a + b;\n+  return c & 0x78;\n+}\n+\n+int\n+main ()\n+{\n+  if (__SCHAR_MAX__ != 127 || sizeof (int) != 4)\n+    return 0;\n+  if (f0 (0xff, 0xff) != 0xfe\n+      || f1 (0, 1) != 0x2ff\n+      || f2 (-2, 1) != -4\n+      || f3 (-2, 1) != 0xf8\n+      || f4 (-2, 1) != 0x78\n+      || f5 (0xff, 0xff) != 0xfe\n+      || f6 (0, 1) != 0x2ff\n+      || f7 (-2, 1) != -4\n+      || f8 (-2, 1) != 0xf8\n+      || f9 (-2, 1) != 0x78)\n+    __builtin_abort ();\n+  return 0;\n+}"}, {"sha": "580b23328839452be9d312ecd70e5554d4328cba", "filename": "gcc/testsuite/gcc.dg/pr66187-2.c", "status": "added", "additions": 97, "deletions": 0, "changes": 97, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a60c51fe4803ad63d909c819642490630d893152/gcc%2Ftestsuite%2Fgcc.dg%2Fpr66187-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a60c51fe4803ad63d909c819642490630d893152/gcc%2Ftestsuite%2Fgcc.dg%2Fpr66187-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr66187-2.c?ref=a60c51fe4803ad63d909c819642490630d893152", "patch": "@@ -0,0 +1,97 @@\n+/* PR tree-optimization/66187 */\n+/* { dg-do run } */\n+/* { dg-options \"-O2 -fwrapv\" } */\n+\n+__attribute__((noinline, noclone)) int\n+f0 (unsigned char x, unsigned char y)\n+{\n+  return (x + y) & 0x2ff;\n+}\n+\n+__attribute__((noinline, noclone)) int\n+f1 (unsigned char x, unsigned char y)\n+{\n+  return (x - y) & 0x2ff;\n+}\n+\n+__attribute__((noinline, noclone)) int\n+f2 (signed char x, signed char y)\n+{\n+  return (x + y) & -4;\n+}\n+\n+__attribute__((noinline, noclone)) int\n+f3 (signed char x, signed char y)\n+{\n+  return (x + y) & 0xf8;\n+}\n+\n+__attribute__((noinline, noclone)) int\n+f4 (signed char x, signed char y)\n+{\n+  return (x + y) & 0x78;\n+}\n+\n+__attribute__((noinline, noclone)) int\n+f5 (unsigned char x, unsigned char y)\n+{\n+  int a = x;\n+  int b = y;\n+  int c = a + b;\n+  return c & 0x2ff;\n+}\n+\n+__attribute__((noinline, noclone)) int\n+f6 (unsigned char x, unsigned char y)\n+{\n+  int a = x;\n+  int b = y;\n+  int c = a - b;\n+  return c & 0x2ff;\n+}\n+\n+__attribute__((noinline, noclone)) int\n+f7 (signed char x, signed char y)\n+{\n+  int a = x;\n+  int b = y;\n+  int c = a + b;\n+  return c & -4;\n+}\n+\n+__attribute__((noinline, noclone)) int\n+f8 (signed char x, signed char y)\n+{\n+  int a = x;\n+  int b = y;\n+  int c = a + b;\n+  return c & 0xf8;\n+}\n+\n+__attribute__((noinline, noclone)) int\n+f9 (signed char x, signed char y)\n+{\n+  int a = x;\n+  int b = y;\n+  int c = a + b;\n+  return c & 0x78;\n+}\n+\n+int\n+main ()\n+{\n+  if (__SCHAR_MAX__ != 127 || sizeof (int) != 4)\n+    return 0;\n+  if (f0 (0xff, 0xff) != 0xfe\n+      || f1 (0, 1) != 0x2ff\n+      || f2 (-2, 1) != -4\n+      || f3 (-2, 1) != 0xf8\n+      || f4 (-2, 1) != 0x78\n+      || f5 (0xff, 0xff) != 0xfe\n+      || f6 (0, 1) != 0x2ff\n+      || f7 (-2, 1) != -4\n+      || f8 (-2, 1) != 0xf8\n+      || f9 (-2, 1) != 0x78)\n+    __builtin_abort ();\n+  return 0;\n+}"}]}