{"sha": "0aec205c3ba181eb52a98a0e93de628161efea82", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGFlYzIwNWMzYmExODFlYjUyYTk4YTBlOTNkZTYyODE2MWVmZWE4Mg==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2008-04-29T04:40:08Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2008-04-29T04:40:08Z"}, "message": "re PR libstdc++/35887 (stl parallel includes installed for --disable-libgomp)\n\n2008-04-28  Benjamin Kosnik  <bkoz@redhat.com>\n\n\tPR libstdc++/35887\n\t* acinclude.m4 (GLIBCXX_ENABLE_PARALLEL): Revert back to just\n\tchecking for omp.h.\n\t* configure: Regenerate.\n\nFrom-SVN: r134776", "tree": {"sha": "73203368afc274c6a3519de1f9c2a9e00c144d58", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/73203368afc274c6a3519de1f9c2a9e00c144d58"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0aec205c3ba181eb52a98a0e93de628161efea82", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0aec205c3ba181eb52a98a0e93de628161efea82", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0aec205c3ba181eb52a98a0e93de628161efea82", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0aec205c3ba181eb52a98a0e93de628161efea82/comments", "author": null, "committer": null, "parents": [{"sha": "268688b39c1724b6e8dd92c61c4f9b8256c844dc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/268688b39c1724b6e8dd92c61c4f9b8256c844dc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/268688b39c1724b6e8dd92c61c4f9b8256c844dc"}], "stats": {"total": 110, "additions": 44, "deletions": 66}, "files": [{"sha": "18d308df60fd8f93075beec976d10b8a78fe7790", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0aec205c3ba181eb52a98a0e93de628161efea82/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0aec205c3ba181eb52a98a0e93de628161efea82/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=0aec205c3ba181eb52a98a0e93de628161efea82", "patch": "@@ -1,3 +1,10 @@\n+2008-04-28  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\tPR libstdc++/35887\n+\t* acinclude.m4 (GLIBCXX_ENABLE_PARALLEL): Revert back to just\n+\tchecking for omp.h.\n+\t* configure: Regenerate.\n+\n 2008-04-25  Benjamin Kosnik  <bkoz@redhat.com>\n \n \tPR libstdc++/35922\n@@ -11,7 +18,7 @@\n \t* testsuite/23_containers/unordered_set/requirements/\n \tdebug_container.cc: ...here.\n \t* testsuite/23_containers/unordered_set/requirements/debug_mode.cc: New.\n-\t\n+\n 2008-04-25  Benjamin Kosnik  <bkoz@redhat.com>\n \n \tPR libstdc++/35887"}, {"sha": "022548b07db6f329dcfcaec443dd8e79aecac717", "filename": "libstdc++-v3/acinclude.m4", "status": "modified", "additions": 6, "deletions": 13, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0aec205c3ba181eb52a98a0e93de628161efea82/libstdc%2B%2B-v3%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0aec205c3ba181eb52a98a0e93de628161efea82/libstdc%2B%2B-v3%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Facinclude.m4?ref=0aec205c3ba181eb52a98a0e93de628161efea82", "patch": "@@ -1748,19 +1748,12 @@ AC_DEFUN([GLIBCXX_ENABLE_PARALLEL], [\n \n   enable_parallel=no;\n \n-  # Check to see if threads are disabled.\n-  # Requires GLIBCXX_ENABLE_THREADS.\n-  if test x$enable_thread = xyes; then\n-\n-    # Check to see if OpenMP is disabled.\n-    AC_MSG_CHECKING([for libgomp support])\n-    GLIBCXX_ENABLE(libgomp,$1,,[enable code depending on libgomp],\n-                   [permit yes|no])\n-    AC_MSG_RESULT([$enable_libgomp])\n-    if test x$enable_libgomp = xyes; then\n-      enable_parallel=yes\n-    fi\n-\n+  # See if configured libgomp/omp.h exists. (libgomp may be in\n+  # noconfigdirs but not explicitly disabled.)\n+  if test -f $glibcxx_builddir/../libgomp/omp.h; then\n+    enable_parallel=yes;\n+  else\n+    AC_MSG_NOTICE([$glibcxx_builddir/../libgomp/omp.h not found])\n   fi\n \n   AC_MSG_CHECKING([for parallel mode support])"}, {"sha": "5aedae16c7df4a30b26eb8b5426d26a825334807", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 30, "deletions": 52, "changes": 82, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0aec205c3ba181eb52a98a0e93de628161efea82/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0aec205c3ba181eb52a98a0e93de628161efea82/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=0aec205c3ba181eb52a98a0e93de628161efea82", "patch": "@@ -1045,7 +1045,6 @@ Optional Features:\n                           [default=\"-g3 -O0\"]\n   --enable-libstdcxx-debug\n                           build extra debug library [default=no]\n-  --enable-libgomp        enable code depending on libgomp [default=yes]\n   --enable-cxx-flags=FLAGS\n                           pass compiler FLAGS when building library\n                           [default=]\n@@ -4667,13 +4666,13 @@ if test \"${lt_cv_nm_interface+set}\" = set; then\n else\n   lt_cv_nm_interface=\"BSD nm\"\n   echo \"int some_variable = 0;\" > conftest.$ac_ext\n-  (eval echo \"\\\"\\$as_me:4670: $ac_compile\\\"\" >&5)\n+  (eval echo \"\\\"\\$as_me:4669: $ac_compile\\\"\" >&5)\n   (eval \"$ac_compile\" 2>conftest.err)\n   cat conftest.err >&5\n-  (eval echo \"\\\"\\$as_me:4673: $NM \\\\\\\"conftest.$ac_objext\\\\\\\"\\\"\" >&5)\n+  (eval echo \"\\\"\\$as_me:4672: $NM \\\\\\\"conftest.$ac_objext\\\\\\\"\\\"\" >&5)\n   (eval \"$NM \\\"conftest.$ac_objext\\\"\" 2>conftest.err > conftest.out)\n   cat conftest.err >&5\n-  (eval echo \"\\\"\\$as_me:4676: output\\\"\" >&5)\n+  (eval echo \"\\\"\\$as_me:4675: output\\\"\" >&5)\n   cat conftest.out >&5\n   if $GREP 'External.*some_variable' conftest.out > /dev/null; then\n     lt_cv_nm_interface=\"MS dumpbin\"\n@@ -5717,7 +5716,7 @@ ia64-*-hpux*)\n   ;;\n *-*-irix6*)\n   # Find out which ABI we are using.\n-  echo '#line 5720 \"configure\"' > conftest.$ac_ext\n+  echo '#line 5719 \"configure\"' > conftest.$ac_ext\n   if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n   (eval $ac_compile) 2>&5\n   ac_status=$?\n@@ -7179,11 +7178,11 @@ else\n    -e 's:.*FLAGS}\\{0,1\\} :&$lt_compiler_flag :; t' \\\n    -e 's: [^ ]*conftest\\.: $lt_compiler_flag&:; t' \\\n    -e 's:$: $lt_compiler_flag:'`\n-   (eval echo \"\\\"\\$as_me:7182: $lt_compile\\\"\" >&5)\n+   (eval echo \"\\\"\\$as_me:7181: $lt_compile\\\"\" >&5)\n    (eval \"$lt_compile\" 2>conftest.err)\n    ac_status=$?\n    cat conftest.err >&5\n-   echo \"$as_me:7186: \\$? = $ac_status\" >&5\n+   echo \"$as_me:7185: \\$? = $ac_status\" >&5\n    if (exit $ac_status) && test -s \"$ac_outfile\"; then\n      # The compiler can only warn and ignore the option if not recognized\n      # So say no if there are warnings other than the usual output.\n@@ -7501,11 +7500,11 @@ else\n    -e 's:.*FLAGS}\\{0,1\\} :&$lt_compiler_flag :; t' \\\n    -e 's: [^ ]*conftest\\.: $lt_compiler_flag&:; t' \\\n    -e 's:$: $lt_compiler_flag:'`\n-   (eval echo \"\\\"\\$as_me:7504: $lt_compile\\\"\" >&5)\n+   (eval echo \"\\\"\\$as_me:7503: $lt_compile\\\"\" >&5)\n    (eval \"$lt_compile\" 2>conftest.err)\n    ac_status=$?\n    cat conftest.err >&5\n-   echo \"$as_me:7508: \\$? = $ac_status\" >&5\n+   echo \"$as_me:7507: \\$? = $ac_status\" >&5\n    if (exit $ac_status) && test -s \"$ac_outfile\"; then\n      # The compiler can only warn and ignore the option if not recognized\n      # So say no if there are warnings other than the usual output.\n@@ -7606,11 +7605,11 @@ else\n    -e 's:.*FLAGS}\\{0,1\\} :&$lt_compiler_flag :; t' \\\n    -e 's: [^ ]*conftest\\.: $lt_compiler_flag&:; t' \\\n    -e 's:$: $lt_compiler_flag:'`\n-   (eval echo \"\\\"\\$as_me:7609: $lt_compile\\\"\" >&5)\n+   (eval echo \"\\\"\\$as_me:7608: $lt_compile\\\"\" >&5)\n    (eval \"$lt_compile\" 2>out/conftest.err)\n    ac_status=$?\n    cat out/conftest.err >&5\n-   echo \"$as_me:7613: \\$? = $ac_status\" >&5\n+   echo \"$as_me:7612: \\$? = $ac_status\" >&5\n    if (exit $ac_status) && test -s out/conftest2.$ac_objext\n    then\n      # The compiler can only warn and ignore the option if not recognized\n@@ -7661,11 +7660,11 @@ else\n    -e 's:.*FLAGS}\\{0,1\\} :&$lt_compiler_flag :; t' \\\n    -e 's: [^ ]*conftest\\.: $lt_compiler_flag&:; t' \\\n    -e 's:$: $lt_compiler_flag:'`\n-   (eval echo \"\\\"\\$as_me:7664: $lt_compile\\\"\" >&5)\n+   (eval echo \"\\\"\\$as_me:7663: $lt_compile\\\"\" >&5)\n    (eval \"$lt_compile\" 2>out/conftest.err)\n    ac_status=$?\n    cat out/conftest.err >&5\n-   echo \"$as_me:7668: \\$? = $ac_status\" >&5\n+   echo \"$as_me:7667: \\$? = $ac_status\" >&5\n    if (exit $ac_status) && test -s out/conftest2.$ac_objext\n    then\n      # The compiler can only warn and ignore the option if not recognized\n@@ -10513,7 +10512,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10516 \"configure\"\n+#line 10515 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -10613,7 +10612,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10616 \"configure\"\n+#line 10615 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -12651,11 +12650,11 @@ else\n    -e 's:.*FLAGS}\\{0,1\\} :&$lt_compiler_flag :; t' \\\n    -e 's: [^ ]*conftest\\.: $lt_compiler_flag&:; t' \\\n    -e 's:$: $lt_compiler_flag:'`\n-   (eval echo \"\\\"\\$as_me:12654: $lt_compile\\\"\" >&5)\n+   (eval echo \"\\\"\\$as_me:12653: $lt_compile\\\"\" >&5)\n    (eval \"$lt_compile\" 2>conftest.err)\n    ac_status=$?\n    cat conftest.err >&5\n-   echo \"$as_me:12658: \\$? = $ac_status\" >&5\n+   echo \"$as_me:12657: \\$? = $ac_status\" >&5\n    if (exit $ac_status) && test -s \"$ac_outfile\"; then\n      # The compiler can only warn and ignore the option if not recognized\n      # So say no if there are warnings other than the usual output.\n@@ -12750,11 +12749,11 @@ else\n    -e 's:.*FLAGS}\\{0,1\\} :&$lt_compiler_flag :; t' \\\n    -e 's: [^ ]*conftest\\.: $lt_compiler_flag&:; t' \\\n    -e 's:$: $lt_compiler_flag:'`\n-   (eval echo \"\\\"\\$as_me:12753: $lt_compile\\\"\" >&5)\n+   (eval echo \"\\\"\\$as_me:12752: $lt_compile\\\"\" >&5)\n    (eval \"$lt_compile\" 2>out/conftest.err)\n    ac_status=$?\n    cat out/conftest.err >&5\n-   echo \"$as_me:12757: \\$? = $ac_status\" >&5\n+   echo \"$as_me:12756: \\$? = $ac_status\" >&5\n    if (exit $ac_status) && test -s out/conftest2.$ac_objext\n    then\n      # The compiler can only warn and ignore the option if not recognized\n@@ -12802,11 +12801,11 @@ else\n    -e 's:.*FLAGS}\\{0,1\\} :&$lt_compiler_flag :; t' \\\n    -e 's: [^ ]*conftest\\.: $lt_compiler_flag&:; t' \\\n    -e 's:$: $lt_compiler_flag:'`\n-   (eval echo \"\\\"\\$as_me:12805: $lt_compile\\\"\" >&5)\n+   (eval echo \"\\\"\\$as_me:12804: $lt_compile\\\"\" >&5)\n    (eval \"$lt_compile\" 2>out/conftest.err)\n    ac_status=$?\n    cat out/conftest.err >&5\n-   echo \"$as_me:12809: \\$? = $ac_status\" >&5\n+   echo \"$as_me:12808: \\$? = $ac_status\" >&5\n    if (exit $ac_status) && test -s out/conftest2.$ac_objext\n    then\n      # The compiler can only warn and ignore the option if not recognized\n@@ -13851,7 +13850,7 @@ fi;\n     #\n     # Fake what AC_TRY_COMPILE does.  XXX Look at redoing this new-style.\n     cat > conftest.$ac_ext << EOF\n-#line 13854 \"configure\"\n+#line 13853 \"configure\"\n struct S { ~S(); };\n void bar();\n void foo()\n@@ -13997,7 +13996,7 @@ ac_compiler_gnu=$ac_cv_cxx_compiler_gnu\n   # unnecessary for a builtins test.\n \n     cat > conftest.$ac_ext << EOF\n-#line 14000 \"configure\"\n+#line 13999 \"configure\"\n int main()\n {\n   // NB: _Atomic_word not necessarily int.\n@@ -14037,7 +14036,7 @@ echo \"${ECHO_T}$enable_atomic_builtinsi\" >&6\n     rm -f conftest*\n \n     cat > conftest.$ac_ext << EOF\n-#line 14040 \"configure\"\n+#line 14039 \"configure\"\n int main()\n {\n   typedef bool atomic_type;\n@@ -17257,34 +17256,13 @@ echo \"${ECHO_T}$enable_libstdcxx_debug\" >&6\n \n   enable_parallel=no;\n \n-  # Check to see if threads are disabled.\n-  # Requires GLIBCXX_ENABLE_THREADS.\n-  if test x$enable_thread = xyes; then\n-\n-    # Check to see if OpenMP is disabled.\n-    echo \"$as_me:$LINENO: checking for libgomp support\" >&5\n-echo $ECHO_N \"checking for libgomp support... $ECHO_C\" >&6\n-     # Check whether --enable-libgomp or --disable-libgomp was given.\n-if test \"${enable_libgomp+set}\" = set; then\n-  enableval=\"$enable_libgomp\"\n-\n-      case \"$enableval\" in\n-       yes|no) ;;\n-       *) { { echo \"$as_me:$LINENO: error: Unknown argument to enable/disable libgomp\" >&5\n-echo \"$as_me: error: Unknown argument to enable/disable libgomp\" >&2;}\n-   { (exit 1); exit 1; }; } ;;\n-                          esac\n-\n-else\n-  enable_libgomp=yes\n-fi;\n-\n-    echo \"$as_me:$LINENO: result: $enable_libgomp\" >&5\n-echo \"${ECHO_T}$enable_libgomp\" >&6\n-    if test x$enable_libgomp = xyes; then\n-      enable_parallel=yes\n-    fi\n-\n+  # See if configured libgomp/omp.h exists. (libgomp may be in\n+  # noconfigdirs but not explicitly disabled.)\n+  if test -f $glibcxx_builddir/../libgomp/omp.h; then\n+    enable_parallel=yes;\n+  else\n+    { echo \"$as_me:$LINENO: $glibcxx_builddir/../libgomp/omp.h not found\" >&5\n+echo \"$as_me: $glibcxx_builddir/../libgomp/omp.h not found\" >&6;}\n   fi\n \n   echo \"$as_me:$LINENO: checking for parallel mode support\" >&5"}]}