{"sha": "1c3c479a04317df136f439a90ab5c47e21bfd7f8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWMzYzQ3OWEwNDMxN2RmMTM2ZjQzOWE5MGFiNWM0N2UyMWJmZDdmOA==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2018-05-10T20:59:18Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2018-05-10T20:59:18Z"}, "message": "i386.c (ix86_expand_builtin): Generate SImode target register for null target.\n\n\t* config/i386/i386.c (ix86_expand_builtin) <case IX86_BUILTIN_RDPID>:\n\tGenerate SImode target register for null target.\n\t<case IX86_BUILTIN_XGETBV>: Ditto.\n\t<case IX86_BUILTIN_XSETBV>: Optimize LSHIFTRT generation.\n\t* config/i386/xsaveintrin.h (_xgetbv): Add missing return.\n\ntestsuite/ChangeLog:\n\n\t* gcc.target/i386/xgetsetbv.c: Check also variable arguments.\n\nFrom-SVN: r260135", "tree": {"sha": "2e21b265c8d2ad9ec5674593d3051b55f1753951", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2e21b265c8d2ad9ec5674593d3051b55f1753951"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1c3c479a04317df136f439a90ab5c47e21bfd7f8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c3c479a04317df136f439a90ab5c47e21bfd7f8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1c3c479a04317df136f439a90ab5c47e21bfd7f8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c3c479a04317df136f439a90ab5c47e21bfd7f8/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "267eee04fe4a0f18189f0ab620303656ba316ea7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/267eee04fe4a0f18189f0ab620303656ba316ea7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/267eee04fe4a0f18189f0ab620303656ba316ea7"}], "stats": {"total": 75, "additions": 46, "deletions": 29}, "files": [{"sha": "821655a3145f291c809a72e015f045c06c155ca8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c3c479a04317df136f439a90ab5c47e21bfd7f8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c3c479a04317df136f439a90ab5c47e21bfd7f8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1c3c479a04317df136f439a90ab5c47e21bfd7f8", "patch": "@@ -1,3 +1,11 @@\n+2018-05-10  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/i386.c (ix86_expand_builtin) <case IX86_BUILTIN_RDPID>:\n+\tGenerate SImode target register for null target.\n+\t<case IX86_BUILTIN_XGETBV>: Ditto.\n+\t<case IX86_BUILTIN_XSETBV>: Optimize LSHIFTRT generation.\n+\t* config/i386/xsaveintrin.h (_xgetbv): Add missing return.\n+\n 2018-05-10  Carl Love  <cel@us.ibm.com>\n \n \t* config/rs6000/rs6000.md (prefetch): Generate ISA 2.06 instructions"}, {"sha": "526e7d162c6e93732e7414ac282f7fbfbdc64638", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 15, "deletions": 24, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c3c479a04317df136f439a90ab5c47e21bfd7f8/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c3c479a04317df136f439a90ab5c47e21bfd7f8/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=1c3c479a04317df136f439a90ab5c47e21bfd7f8", "patch": "@@ -37085,7 +37085,7 @@ ix86_expand_builtin (tree exp, rtx target, rtx subtarget,\n \n     case IX86_BUILTIN_RDPID:\n \n-      op0 = gen_reg_rtx (TARGET_64BIT ? DImode : SImode);\n+      op0 = gen_reg_rtx (word_mode);\n \n       if (TARGET_64BIT)\n \t{\n@@ -37094,18 +37094,16 @@ ix86_expand_builtin (tree exp, rtx target, rtx subtarget,\n \t}\n       else\n \tinsn = gen_rdpid (op0);\n+\n       emit_insn (insn);\n \n-      if (target == 0)\n-\t{\n-\t  /* mode is VOIDmode if __builtin_rdpid has been called\n-\t     without lhs.  */\n-\t  if (mode == VOIDmode)\n-\t    return target;\n-\t  target = gen_reg_rtx (mode);\n-\t}\n+      if (target == 0\n+\t  || !register_operand (target, SImode))\n+\ttarget = gen_reg_rtx (SImode);\n+\n       emit_move_insn (target, op0);\n       return target;\n+\n     case IX86_BUILTIN_RDPMC:\n     case IX86_BUILTIN_RDTSC:\n     case IX86_BUILTIN_RDTSCP:\n@@ -37164,14 +37162,9 @@ ix86_expand_builtin (tree exp, rtx target, rtx subtarget,\n \t  emit_move_insn (gen_rtx_MEM (SImode, op4), op2);\n \t}\n \n-      if (target == 0)\n-\t{\n-\t  /* mode is VOIDmode if __builtin_rd* has been called\n-\t     without lhs.  */\n-\t  if (mode == VOIDmode)\n-\t    return target;\n-\t  target = gen_reg_rtx (mode);\n-\t}\n+      if (target == 0\n+\t  || !register_operand (target, DImode))\n+        target = gen_reg_rtx (DImode);\n \n       if (TARGET_64BIT)\n \t{\n@@ -37260,25 +37253,23 @@ ix86_expand_builtin (tree exp, rtx target, rtx subtarget,\n       if (!REG_P (op0))\n \top0 = copy_to_mode_reg (SImode, op0);\n \n+      op1 = force_reg (DImode, op1);\n+\n       if (TARGET_64BIT)\n \t{\n \t  op2 = expand_simple_binop (DImode, LSHIFTRT, op1, GEN_INT (32),\n \t\t\t\t     NULL, 1, OPTAB_DIRECT);\n \n+\t  icode = CODE_FOR_xsetbv_rex64;\n+\n \t  op2 = gen_lowpart (SImode, op2);\n \t  op1 = gen_lowpart (SImode, op1);\n-\t  if (!REG_P (op1))\n-\t    op1 = copy_to_mode_reg (SImode, op1);\n-\t  if (!REG_P (op2))\n-\t    op2 = copy_to_mode_reg (SImode, op2);\n-\t  icode = CODE_FOR_xsetbv_rex64;\n \t  pat = GEN_FCN (icode) (op0, op1, op2);\n \t}\n       else\n \t{\n-\t  if (!REG_P (op1))\n-\t    op1 = copy_to_mode_reg (DImode, op1);\n \t  icode = CODE_FOR_xsetbv;\n+\n \t  pat = GEN_FCN (icode) (op0, op1);\n \t}\n       if (pat)"}, {"sha": "3f6c80b9ba1089051217b14f12446b6c968e51ea", "filename": "gcc/config/i386/xsaveintrin.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c3c479a04317df136f439a90ab5c47e21bfd7f8/gcc%2Fconfig%2Fi386%2Fxsaveintrin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c3c479a04317df136f439a90ab5c47e21bfd7f8/gcc%2Fconfig%2Fi386%2Fxsaveintrin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fxsaveintrin.h?ref=1c3c479a04317df136f439a90ab5c47e21bfd7f8", "patch": "@@ -59,7 +59,7 @@ extern __inline long long\n __attribute__((__gnu_inline__, __always_inline__, __artificial__))\n _xgetbv (unsigned int __A)\n {\n-  __builtin_ia32_xgetbv (__A);\n+  return __builtin_ia32_xgetbv (__A);\n }\n \n #ifdef __x86_64__"}, {"sha": "6d906667a217b01f35410e24c04568ae11f9b624", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c3c479a04317df136f439a90ab5c47e21bfd7f8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c3c479a04317df136f439a90ab5c47e21bfd7f8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1c3c479a04317df136f439a90ab5c47e21bfd7f8", "patch": "@@ -1,3 +1,7 @@\n+2018-05-10  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* gcc.target/i386/xgetsetbv.c: Check also variable arguments.\n+\n 2018-05-10  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/85662"}, {"sha": "9ef487caf62e9f0e9e0baa34068a36e255d0b7dc", "filename": "gcc/testsuite/gcc.target/i386/xgetsetbv.c", "status": "modified", "additions": 18, "deletions": 4, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c3c479a04317df136f439a90ab5c47e21bfd7f8/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fxgetsetbv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c3c479a04317df136f439a90ab5c47e21bfd7f8/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fxgetsetbv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fxgetsetbv.c?ref=1c3c479a04317df136f439a90ab5c47e21bfd7f8", "patch": "@@ -1,12 +1,26 @@\n /* { dg-do compile } */\n /* { dg-options \"-O2 -mxsave\" } */\n-/* { dg-final { scan-assembler \"xgetbv\" } } */\n-/* { dg-final { scan-assembler \"xsetbv\" } } */\n+/* { dg-final { scan-assembler-times \"xgetbv\" 3 } } */\n+/* { dg-final { scan-assembler-times \"xsetbv\" 3 } } */\n \n #include <x86intrin.h>\n \n-unsigned int\n-xgetsetbv (void)\n+unsigned long long\n+foo (unsigned x, unsigned y)\n+{\n+ _xsetbv (x, y);\n+  return _xgetbv (x);\n+}\n+\n+unsigned long long\n+bar (unsigned x, unsigned long long y)\n+{\n+ _xsetbv (x, y);\n+  return _xgetbv (x);\n+}\n+\n+unsigned long long\n+baz (void)\n {\n  _xsetbv (0, 0);\n   return _xgetbv (0);"}]}