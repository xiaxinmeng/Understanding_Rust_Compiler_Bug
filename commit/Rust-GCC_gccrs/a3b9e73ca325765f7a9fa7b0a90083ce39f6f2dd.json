{"sha": "a3b9e73ca325765f7a9fa7b0a90083ce39f6f2dd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTNiOWU3M2NhMzI1NzY1ZjdhOWZhN2IwYTkwMDgzY2UzOWY2ZjJkZA==", "commit": {"author": {"name": "Sebastian Pop", "email": "sebastian.pop@amd.com", "date": "2010-04-06T19:20:47Z"}, "committer": {"name": "Sebastian Pop", "email": "spop@gcc.gnu.org", "date": "2010-04-06T19:20:47Z"}, "message": "Avoid calling verify_ssa twice in verify_loop_closed_ssa.\n\n2010-04-06  Sebastian Pop  <sebastian.pop@amd.com>\n\n\t* graphite-clast-to-gimple.c (graphite_verify): Remove redundant\n\tcall to verify_ssa.  Invoke verify_loop_closed_ssa with an extra\n\targument.\n\t* graphite-scop-detection.c (canonicalize_loop_closed_ssa_form): Same.\n\t* graphite-sese-to-poly.c (rewrite_reductions_out_of_ssa): Same.\n\t(rewrite_commutative_reductions_out_of_ssa): Same.\n\t* passes.c (execute_function_todo): Call verify_ssa for every pass\n\tin the LNO.  Invoke verify_loop_closed_ssa with an extra argument.\n\t* tree-flow.h (verify_loop_closed_ssa): Update declaration.\n\t* tree-parloops.c (parallelize_loops): Invoke verify_loop_closed_ssa\n\twith an extra argument.\n\t* tree-ssa-loop-manip.c (check_loop_closed_ssa_stmt): Same.  Call\n\tverify_ssa only when the extra argument is true.\n\t(gimple_duplicate_loop_to_header_edge): Invoke verify_loop_closed_ssa\n\twith an extra argument.\n\t(tree_transform_and_unroll_loop): Same.\n\nFrom-SVN: r158021", "tree": {"sha": "af5aaa660a0bf216deaa0abaff2ff41c36952f16", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/af5aaa660a0bf216deaa0abaff2ff41c36952f16"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a3b9e73ca325765f7a9fa7b0a90083ce39f6f2dd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a3b9e73ca325765f7a9fa7b0a90083ce39f6f2dd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a3b9e73ca325765f7a9fa7b0a90083ce39f6f2dd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a3b9e73ca325765f7a9fa7b0a90083ce39f6f2dd/comments", "author": null, "committer": {"login": "sebpop", "id": 568397, "node_id": "MDQ6VXNlcjU2ODM5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/568397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebpop", "html_url": "https://github.com/sebpop", "followers_url": "https://api.github.com/users/sebpop/followers", "following_url": "https://api.github.com/users/sebpop/following{/other_user}", "gists_url": "https://api.github.com/users/sebpop/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebpop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebpop/subscriptions", "organizations_url": "https://api.github.com/users/sebpop/orgs", "repos_url": "https://api.github.com/users/sebpop/repos", "events_url": "https://api.github.com/users/sebpop/events{/privacy}", "received_events_url": "https://api.github.com/users/sebpop/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "98b6e9dda551b9e488bda94f53326ab4425891d6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98b6e9dda551b9e488bda94f53326ab4425891d6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/98b6e9dda551b9e488bda94f53326ab4425891d6"}], "stats": {"total": 56, "additions": 37, "deletions": 19}, "files": [{"sha": "419895f4191cbc51d6a4ac62314600f2db2015a8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3b9e73ca325765f7a9fa7b0a90083ce39f6f2dd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3b9e73ca325765f7a9fa7b0a90083ce39f6f2dd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a3b9e73ca325765f7a9fa7b0a90083ce39f6f2dd", "patch": "@@ -1,3 +1,22 @@\n+2010-04-06  Sebastian Pop  <sebastian.pop@amd.com>\n+\n+\t* graphite-clast-to-gimple.c (graphite_verify): Remove redundant\n+\tcall to verify_ssa.  Invoke verify_loop_closed_ssa with an extra\n+\targument.\n+\t* graphite-scop-detection.c (canonicalize_loop_closed_ssa_form): Same.\n+\t* graphite-sese-to-poly.c (rewrite_reductions_out_of_ssa): Same.\n+\t(rewrite_commutative_reductions_out_of_ssa): Same.\n+\t* passes.c (execute_function_todo): Call verify_ssa for every pass\n+\tin the LNO.  Invoke verify_loop_closed_ssa with an extra argument.\n+\t* tree-flow.h (verify_loop_closed_ssa): Update declaration.\n+\t* tree-parloops.c (parallelize_loops): Invoke verify_loop_closed_ssa\n+\twith an extra argument.\n+\t* tree-ssa-loop-manip.c (check_loop_closed_ssa_stmt): Same.  Call\n+\tverify_ssa only when the extra argument is true.\n+\t(gimple_duplicate_loop_to_header_edge): Invoke verify_loop_closed_ssa\n+\twith an extra argument.\n+\t(tree_transform_and_unroll_loop): Same.\n+\n 2010-04-06  Sebastian Pop  <sebastian.pop@amd.com>\n \n \t* passes.c (execute_function_todo): Call verify_loop_closed_ssa"}, {"sha": "819b924753372af53ad3f424a68f2467d039d6d9", "filename": "gcc/graphite-clast-to-gimple.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3b9e73ca325765f7a9fa7b0a90083ce39f6f2dd/gcc%2Fgraphite-clast-to-gimple.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3b9e73ca325765f7a9fa7b0a90083ce39f6f2dd/gcc%2Fgraphite-clast-to-gimple.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-clast-to-gimple.c?ref=a3b9e73ca325765f7a9fa7b0a90083ce39f6f2dd", "patch": "@@ -65,8 +65,7 @@ graphite_verify (void)\n   verify_loop_structure ();\n   verify_dominators (CDI_DOMINATORS);\n   verify_dominators (CDI_POST_DOMINATORS);\n-  verify_ssa (false);\n-  verify_loop_closed_ssa ();\n+  verify_loop_closed_ssa (true);\n #endif\n }\n "}, {"sha": "36a521578cb779afd36430fbb16cb3e2f7437df3", "filename": "gcc/graphite-scop-detection.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3b9e73ca325765f7a9fa7b0a90083ce39f6f2dd/gcc%2Fgraphite-scop-detection.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3b9e73ca325765f7a9fa7b0a90083ce39f6f2dd/gcc%2Fgraphite-scop-detection.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-scop-detection.c?ref=a3b9e73ca325765f7a9fa7b0a90083ce39f6f2dd", "patch": "@@ -1303,7 +1303,7 @@ canonicalize_loop_closed_ssa_form (void)\n   loop_p loop;\n \n #ifdef ENABLE_CHECKING\n-  verify_loop_closed_ssa ();\n+  verify_loop_closed_ssa (true);\n #endif\n \n   FOR_EACH_LOOP (li, loop, 0)\n@@ -1313,7 +1313,7 @@ canonicalize_loop_closed_ssa_form (void)\n   update_ssa (TODO_update_ssa);\n \n #ifdef ENABLE_CHECKING\n-  verify_loop_closed_ssa ();\n+  verify_loop_closed_ssa (true);\n #endif\n }\n "}, {"sha": "17fb5a2d6b4acee0a0f40dbe01fb9a1c1b30d762", "filename": "gcc/graphite-sese-to-poly.c", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3b9e73ca325765f7a9fa7b0a90083ce39f6f2dd/gcc%2Fgraphite-sese-to-poly.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3b9e73ca325765f7a9fa7b0a90083ce39f6f2dd/gcc%2Fgraphite-sese-to-poly.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-sese-to-poly.c?ref=a3b9e73ca325765f7a9fa7b0a90083ce39f6f2dd", "patch": "@@ -2402,8 +2402,7 @@ rewrite_reductions_out_of_ssa (scop_p scop)\n \n   update_ssa (TODO_update_ssa);\n #ifdef ENABLE_CHECKING\n-  verify_ssa (false);\n-  verify_loop_closed_ssa ();\n+  verify_loop_closed_ssa (true);\n #endif\n \n   FOR_EACH_BB (bb)\n@@ -2413,8 +2412,7 @@ rewrite_reductions_out_of_ssa (scop_p scop)\n \n   update_ssa (TODO_update_ssa);\n #ifdef ENABLE_CHECKING\n-  verify_ssa (false);\n-  verify_loop_closed_ssa ();\n+  verify_loop_closed_ssa (true);\n #endif\n }\n \n@@ -2868,8 +2866,7 @@ rewrite_commutative_reductions_out_of_ssa (sese region, sbitmap reductions)\n   gsi_commit_edge_inserts ();\n   update_ssa (TODO_update_ssa);\n #ifdef ENABLE_CHECKING\n-  verify_ssa (false);\n-  verify_loop_closed_ssa ();\n+  verify_loop_closed_ssa (true);\n #endif\n }\n "}, {"sha": "cbd605fb4307f09a7e0bd73a648dd5546d56304e", "filename": "gcc/passes.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3b9e73ca325765f7a9fa7b0a90083ce39f6f2dd/gcc%2Fpasses.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3b9e73ca325765f7a9fa7b0a90083ce39f6f2dd/gcc%2Fpasses.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpasses.c?ref=a3b9e73ca325765f7a9fa7b0a90083ce39f6f2dd", "patch": "@@ -1256,14 +1256,15 @@ execute_function_todo (void *data)\n     }\n \n #if defined ENABLE_CHECKING\n-  if (flags & TODO_verify_ssa)\n+  if (flags & TODO_verify_ssa\n+      || (current_loops && loops_state_satisfies_p (LOOP_CLOSED_SSA)))\n     verify_ssa (true);\n   if (flags & TODO_verify_flow)\n     verify_flow_info ();\n   if (flags & TODO_verify_stmts)\n     verify_stmts ();\n   if (current_loops && loops_state_satisfies_p (LOOP_CLOSED_SSA))\n-    verify_loop_closed_ssa ();\n+    verify_loop_closed_ssa (false);\n   if (flags & TODO_verify_rtl_sharing)\n     verify_rtl_sharing ();\n #endif"}, {"sha": "6cd47e131809f213a7fda530a9a90bafbd8392a0", "filename": "gcc/tree-flow.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3b9e73ca325765f7a9fa7b0a90083ce39f6f2dd/gcc%2Ftree-flow.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3b9e73ca325765f7a9fa7b0a90083ce39f6f2dd/gcc%2Ftree-flow.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-flow.h?ref=a3b9e73ca325765f7a9fa7b0a90083ce39f6f2dd", "patch": "@@ -715,7 +715,7 @@ enum ev_direction scev_direction (const_tree);\n void free_numbers_of_iterations_estimates (void);\n void free_numbers_of_iterations_estimates_loop (struct loop *);\n void rewrite_into_loop_closed_ssa (bitmap, unsigned);\n-void verify_loop_closed_ssa (void);\n+void verify_loop_closed_ssa (bool);\n bool for_each_index (tree *, bool (*) (tree, tree *, void *), void *);\n void create_iv (tree, tree, tree, struct loop *, gimple_stmt_iterator *, bool,\n \t\ttree *, tree *);"}, {"sha": "b8a883fb93958d3584195f55d8ad18c1d728a67b", "filename": "gcc/tree-parloops.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3b9e73ca325765f7a9fa7b0a90083ce39f6f2dd/gcc%2Ftree-parloops.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3b9e73ca325765f7a9fa7b0a90083ce39f6f2dd/gcc%2Ftree-parloops.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-parloops.c?ref=a3b9e73ca325765f7a9fa7b0a90083ce39f6f2dd", "patch": "@@ -1970,7 +1970,7 @@ parallelize_loops (void)\n       verify_flow_info ();\n       verify_dominators (CDI_DOMINATORS);\n       verify_loop_structure ();\n-      verify_loop_closed_ssa ();\n+      verify_loop_closed_ssa (true);\n     }\n \n   free_stmt_vec_info_vec ();"}, {"sha": "94caad0db560b75ec172e55a99d82baa11517ab0", "filename": "gcc/tree-ssa-loop-manip.c", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3b9e73ca325765f7a9fa7b0a90083ce39f6f2dd/gcc%2Ftree-ssa-loop-manip.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3b9e73ca325765f7a9fa7b0a90083ce39f6f2dd/gcc%2Ftree-ssa-loop-manip.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-manip.c?ref=a3b9e73ca325765f7a9fa7b0a90083ce39f6f2dd", "patch": "@@ -440,10 +440,11 @@ check_loop_closed_ssa_stmt (basic_block bb, gimple stmt)\n     check_loop_closed_ssa_use (bb, var);\n }\n \n-/* Checks that invariants of the loop closed ssa form are preserved.  */\n+/* Checks that invariants of the loop closed ssa form are preserved.\n+   Call verify_ssa when VERIFY_SSA_P is true.  */\n \n void\n-verify_loop_closed_ssa (void)\n+verify_loop_closed_ssa (bool verify_ssa_p)\n {\n   basic_block bb;\n   gimple_stmt_iterator bsi;\n@@ -454,7 +455,8 @@ verify_loop_closed_ssa (void)\n   if (number_of_loops () <= 1)\n     return;\n \n-  verify_ssa (false);\n+  if (verify_ssa_p)\n+    verify_ssa (false);\n \n   FOR_EACH_BB (bb)\n     {\n@@ -616,7 +618,7 @@ gimple_duplicate_loop_to_header_edge (struct loop *loop, edge e,\n \n #ifdef ENABLE_CHECKING\n   if (loops_state_satisfies_p (LOOP_CLOSED_SSA))\n-    verify_loop_closed_ssa ();\n+    verify_loop_closed_ssa (true);\n #endif\n \n   first_new_block = last_basic_block;\n@@ -1095,7 +1097,7 @@ tree_transform_and_unroll_loop (struct loop *loop, unsigned factor,\n   verify_flow_info ();\n   verify_dominators (CDI_DOMINATORS);\n   verify_loop_structure ();\n-  verify_loop_closed_ssa ();\n+  verify_loop_closed_ssa (true);\n #endif\n }\n "}]}