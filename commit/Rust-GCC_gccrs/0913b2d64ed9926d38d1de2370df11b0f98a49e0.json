{"sha": "0913b2d64ed9926d38d1de2370df11b0f98a49e0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDkxM2IyZDY0ZWQ5OTI2ZDM4ZDFkZTIzNzBkZjExYjBmOThhNDllMA==", "commit": {"author": {"name": "David S. Miller", "email": "davem@davemloft.net", "date": "2011-09-05T15:58:57Z"}, "committer": {"name": "David S. Miller", "email": "davem@gcc.gnu.org", "date": "2011-09-05T15:58:57Z"}, "message": "config.host: Add driver-sparc.o and sparc/x-sparc on native sparc*-*-linux* builds.\n\n\t* config.host: Add driver-sparc.o and sparc/x-sparc on\n\tnative sparc*-*-linux* builds.\n\t* config/sparc/driver-sparc.c: Correct Linux strings.\n\t* config/sparc/linux.h: Add DRIVER_SELF_SPECS.\n\t* config/sparc/linux64.h: Likewise.\n\t* doc/invoke.texi: Document that Linux also supports\n\t-mcpu=native and -mtune=native on sparc.\n\nFrom-SVN: r178553", "tree": {"sha": "28e0f89376e70e9138d02dc51fd4b9cc290119b0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/28e0f89376e70e9138d02dc51fd4b9cc290119b0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0913b2d64ed9926d38d1de2370df11b0f98a49e0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0913b2d64ed9926d38d1de2370df11b0f98a49e0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0913b2d64ed9926d38d1de2370df11b0f98a49e0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0913b2d64ed9926d38d1de2370df11b0f98a49e0/comments", "author": {"login": "davem330", "id": 1053866, "node_id": "MDQ6VXNlcjEwNTM4NjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1053866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davem330", "html_url": "https://github.com/davem330", "followers_url": "https://api.github.com/users/davem330/followers", "following_url": "https://api.github.com/users/davem330/following{/other_user}", "gists_url": "https://api.github.com/users/davem330/gists{/gist_id}", "starred_url": "https://api.github.com/users/davem330/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davem330/subscriptions", "organizations_url": "https://api.github.com/users/davem330/orgs", "repos_url": "https://api.github.com/users/davem330/repos", "events_url": "https://api.github.com/users/davem330/events{/privacy}", "received_events_url": "https://api.github.com/users/davem330/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e42bcfa38cc3f3315d10f448675807eee860ae3c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e42bcfa38cc3f3315d10f448675807eee860ae3c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e42bcfa38cc3f3315d10f448675807eee860ae3c"}], "stats": {"total": 76, "additions": 70, "deletions": 6}, "files": [{"sha": "e605ce2f518c4397b2c9227edae23080bccd41f1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0913b2d64ed9926d38d1de2370df11b0f98a49e0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0913b2d64ed9926d38d1de2370df11b0f98a49e0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0913b2d64ed9926d38d1de2370df11b0f98a49e0", "patch": "@@ -1,3 +1,13 @@\n+2011-09-05  David S. Miller  <davem@davemloft.net>\n+\n+\t* config.host: Add driver-sparc.o and sparc/x-sparc on\n+\tnative sparc*-*-linux* builds.\n+\t* config/sparc/driver-sparc.c: Correct Linux strings.\n+\t* config/sparc/linux.h: Add DRIVER_SELF_SPECS.\n+\t* config/sparc/linux64.h: Likewise.\n+\t* doc/invoke.texi: Document that Linux also supports\n+\t-mcpu=native and -mtune=native on sparc.\n+\n 2011-09-05  Georg-Johann Lay  <avr@gjlay.de>\n \n \tPR target/50289\n@@ -14,7 +24,7 @@\n \tcalculations.\n \n 2011-09-05  Georg-Johann Lay  <avr@gjlay.de>\n-\t\n+\n \t* config/avr/avr.h (progmem_section): Remove Declaration.\n \t* config/avr/avr.c (progmem_section): Make static and rename to\n \tprogmem_swtable_section."}, {"sha": "df8ba8fa8011d8ff73aff29faed3f03ca11c5de3", "filename": "gcc/config.host", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0913b2d64ed9926d38d1de2370df11b0f98a49e0/gcc%2Fconfig.host", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0913b2d64ed9926d38d1de2370df11b0f98a49e0/gcc%2Fconfig.host", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.host?ref=0913b2d64ed9926d38d1de2370df11b0f98a49e0", "patch": "@@ -165,6 +165,14 @@ case ${host} in\n \t;;\n     esac\n     ;;\n+  sparc*-*-linux*)\n+    case ${target} in\n+      sparc*-*-linux*)\n+\thost_extra_gcc_objs=\"driver-sparc.o\"\n+\thost_xmake_file=\"${host_xmake_file} sparc/x-sparc\"\n+\t;;\n+    esac\n+    ;;\n esac\n \n # Machine-specific settings."}, {"sha": "f6a4e7c9922dba607b31cc086b12f8870713e55b", "filename": "gcc/config/sparc/driver-sparc.c", "status": "modified", "additions": 16, "deletions": 2, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0913b2d64ed9926d38d1de2370df11b0f98a49e0/gcc%2Fconfig%2Fsparc%2Fdriver-sparc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0913b2d64ed9926d38d1de2370df11b0f98a49e0/gcc%2Fconfig%2Fsparc%2Fdriver-sparc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fdriver-sparc.c?ref=0913b2d64ed9926d38d1de2370df11b0f98a49e0", "patch": "@@ -58,7 +58,21 @@ static const struct cpu_names {\n   { \"SPARC-T3\",\t\t\"niagara2\" },\n   { \"SPARC-T4\",\t\t\"niagara2\" },\n #else\n-  /* FIXME: Provide Linux/SPARC values.  */\n+  { \"SuperSPARC\",\t\"supersparc\" },\n+  { \"HyperSparc\",\t\"hypersparc\" },\n+  { \"SpitFire\",\t\t\"ultrasparc\" },\n+  { \"BlackBird\",\t\"ultrasparc\" },\n+  { \"Sabre\",\t\t\"ultrasparc\" },\n+  { \"Hummingbird\",\t\"ultrasparc\" },\n+  { \"Cheetah\",\t\t\"ultrasparc3\" },\n+  { \"Jalapeno\",\t\t\"ultrasparc3\" },\n+  { \"Jaguar\",\t\t\"ultrasparc3\" },\n+  { \"Panther\",\t\t\"ultrasparc3\" },\n+  { \"Serrano\",\t\t\"ultrasparc3\" },\n+  { \"UltraSparc T1\",\t\"niagara\" },\n+  { \"UltraSparc T2\",\t\"niagara2\" },\n+  { \"UltraSparc T3\",\t\"niagara2\" },\n+  { \"UltraSparc T4\",\t\"niagara2\" },\n #endif\n   { NULL,\tNULL }\n   };\n@@ -137,7 +151,7 @@ host_detect_local_cpu (int argc, const char **argv)\n     return NULL;\n \n   while (fgets (buf, sizeof (buf), f) != NULL)\n-    if (strncmp (buf, \"cpu model\", sizeof (\"cpu model\") - 1) == 0)\n+    if (strncmp (buf, \"cpu\\t\\t:\", sizeof (\"cpu\\t\\t:\") - 1) == 0)\n       {\n         for (i = 0; cpu_names [i].name; i++)\n           if (strstr (buf, cpu_names [i].name) != NULL)"}, {"sha": "0ad4b3482f127ba40de18c6e0bf40ba398c99496", "filename": "gcc/config/sparc/linux.h", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0913b2d64ed9926d38d1de2370df11b0f98a49e0/gcc%2Fconfig%2Fsparc%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0913b2d64ed9926d38d1de2370df11b0f98a49e0/gcc%2Fconfig%2Fsparc%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Flinux.h?ref=0913b2d64ed9926d38d1de2370df11b0f98a49e0", "patch": "@@ -39,6 +39,22 @@ along with GCC; see the file COPYING3.  If not see\n   \"%{shared|pie:crtendS.o%s;:crtend.o%s} crtn.o%s\\\n    %{Ofast|ffast-math|funsafe-math-optimizations:crtfastmath.o%s}\"\n \n+/* -mcpu=native handling only makes sense with compiler running on\n+   a SPARC chip.  */\n+#if defined(__sparc__)\n+extern const char *host_detect_local_cpu (int argc, const char **argv);\n+# define EXTRA_SPEC_FUNCTIONS\t\t\t\t\t\t\\\n+  { \"local_cpu_detect\", host_detect_local_cpu },\n+\n+# define MCPU_MTUNE_NATIVE_SPECS\t\t\t\t\t\\\n+   \" %{mcpu=native:%<mcpu=native %:local_cpu_detect(cpu)}\"\t\t\\\n+   \" %{mtune=native:%<mtune=native %:local_cpu_detect(tune)}\"\n+#else\n+# define MCPU_MTUNE_NATIVE_SPECS \"\"\n+#endif\n+\n+#define DRIVER_SELF_SPECS MCPU_MTUNE_NATIVE_SPECS\n+\n /* This is for -profile to use -lc_p instead of -lc.  */\n #undef\tCC1_SPEC\n #define\tCC1_SPEC \"%{profile:-p} \\"}, {"sha": "0ad1a5234a12cb6aa64f61cb6c571ba5289f2bf7", "filename": "gcc/config/sparc/linux64.h", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0913b2d64ed9926d38d1de2370df11b0f98a49e0/gcc%2Fconfig%2Fsparc%2Flinux64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0913b2d64ed9926d38d1de2370df11b0f98a49e0/gcc%2Fconfig%2Fsparc%2Flinux64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Flinux64.h?ref=0913b2d64ed9926d38d1de2370df11b0f98a49e0", "patch": "@@ -142,6 +142,22 @@ along with GCC; see the file COPYING3.  If not see\n %{!mno-relax:%{!r:-relax}} \\\n \"\n \n+/* -mcpu=native handling only makes sense with compiler running on\n+   a SPARC chip.  */\n+#if defined(__sparc__)\n+extern const char *host_detect_local_cpu (int argc, const char **argv);\n+# define EXTRA_SPEC_FUNCTIONS\t\t\t\t\t\t\\\n+  { \"local_cpu_detect\", host_detect_local_cpu },\n+\n+# define MCPU_MTUNE_NATIVE_SPECS\t\t\t\t\t\\\n+   \" %{mcpu=native:%<mcpu=native %:local_cpu_detect(cpu)}\"\t\t\\\n+   \" %{mtune=native:%<mtune=native %:local_cpu_detect(tune)}\"\n+#else\n+# define MCPU_MTUNE_NATIVE_SPECS \"\"\n+#endif\n+\n+#define DRIVER_SELF_SPECS MCPU_MTUNE_NATIVE_SPECS\n+\n #undef\tCC1_SPEC\n #if DEFAULT_ARCH32_P\n #define CC1_SPEC \"%{profile:-p} \\"}, {"sha": "66d9fc5e29ba6286059f5da1224f5a5d37a0fa9f", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0913b2d64ed9926d38d1de2370df11b0f98a49e0/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0913b2d64ed9926d38d1de2370df11b0f98a49e0/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=0913b2d64ed9926d38d1de2370df11b0f98a49e0", "patch": "@@ -17285,7 +17285,7 @@ for machine type @var{cpu_type}.  Supported values for @var{cpu_type} are\n @samp{sparclet}, @samp{tsc701}, @samp{v9}, @samp{ultrasparc},\n @samp{ultrasparc3}, @samp{niagara} and @samp{niagara2}.\n \n-Native Solaris toolchains also support the value @samp{native},\n+Native Solaris and Linux toolchains also support the value @samp{native},\n which selects the best architecture option for the host processor.\n @option{-mcpu=native} has no effect if GCC does not recognize\n the processor.\n@@ -17354,8 +17354,8 @@ The same values for @option{-mcpu=@var{cpu_type}} can be used for\n that select a particular CPU implementation.  Those are @samp{cypress},\n @samp{supersparc}, @samp{hypersparc}, @samp{leon}, @samp{f930}, @samp{f934},\n @samp{sparclite86x}, @samp{tsc701}, @samp{ultrasparc}, @samp{ultrasparc3},\n-@samp{niagara}, and @samp{niagara2}.  With native Solaris toolchains,\n-@samp{native} can also be used.\n+@samp{niagara}, and @samp{niagara2}.  With native Solaris and Linux\n+toolchains, @samp{native} can also be used.\n \n @item -mv8plus\n @itemx -mno-v8plus"}]}