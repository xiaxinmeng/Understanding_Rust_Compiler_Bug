{"sha": "e7c2087cea5f1d1b45e9abfe4660dd1be52bb42d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTdjMjA4N2NlYTVmMWQxYjQ1ZTlhYmZlNDY2MGRkMWJlNTJiYjQyZA==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-10-30T22:11:45Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-10-30T22:11:45Z"}, "message": "(output_move_double): Extend the special case\nfor *--sp = sp[N] to handle 12 bytes as well as 8 bytes.\n\nFrom-SVN: r5951", "tree": {"sha": "0ab2767e411525d8696038f59bd376c5f87ea764", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0ab2767e411525d8696038f59bd376c5f87ea764"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e7c2087cea5f1d1b45e9abfe4660dd1be52bb42d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7c2087cea5f1d1b45e9abfe4660dd1be52bb42d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e7c2087cea5f1d1b45e9abfe4660dd1be52bb42d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7c2087cea5f1d1b45e9abfe4660dd1be52bb42d/comments", "author": null, "committer": null, "parents": [{"sha": "f55ef7b071aa128ebde81c03494d9a4f3b90d7ab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f55ef7b071aa128ebde81c03494d9a4f3b90d7ab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f55ef7b071aa128ebde81c03494d9a4f3b90d7ab"}], "stats": {"total": 8, "additions": 5, "deletions": 3}, "files": [{"sha": "384cfb076945a2b51aedfea64e4bea39b8b7cf4e", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7c2087cea5f1d1b45e9abfe4660dd1be52bb42d/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7c2087cea5f1d1b45e9abfe4660dd1be52bb42d/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=e7c2087cea5f1d1b45e9abfe4660dd1be52bb42d", "patch": "@@ -444,12 +444,14 @@ output_move_double (operands)\n     }\n \n   /* If insn is effectively movd N (sp),-(sp) then we will do the\n-     high word first.  We should use the adjusted operand 1 (which is N+4 (sp))\n-     for the low word as well, to compensate for the first decrement of sp.  */\n+     high word first.  We should use the adjusted operand 1\n+     (which is N+4 (sp) or N+8 (sp))\n+     for the low word and middle word as well,\n+     to compensate for the first decrement of sp.  */\n   if (optype0 == PUSHOP\n       && REGNO (XEXP (XEXP (operands[0], 0), 0)) == STACK_POINTER_REGNUM\n       && reg_overlap_mentioned_p (stack_pointer_rtx, operands[1]))\n-    operands[1] = latehalf[1];\n+    middlehalf[1] = operands[1] = latehalf[1];\n \n   /* For (set (reg:DI N) (mem:DI ... (reg:SI N) ...)),\n      if the upper part of reg N does not appear in the MEM, arrange to"}]}