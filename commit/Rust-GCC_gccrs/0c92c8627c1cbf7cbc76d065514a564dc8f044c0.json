{"sha": "0c92c8627c1cbf7cbc76d065514a564dc8f044c0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGM5MmM4NjI3YzFjYmY3Y2JjNzZkMDY1NTE0YTU2NGRjOGYwNDRjMA==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2019-11-06T17:53:38Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2019-11-06T17:53:38Z"}, "message": "libstdc++: Add compare_three_way and install <compare> header\n\n\t* include/Makefile.in: Regenerate.\n\t* libsupc++/Makefile.in: Regenerate.\n\t* libsupc++/compare (__3way_builtin_ptr_cmp): Define helper.\n\t(compare_three_way): Add missing implementation.\n\nFrom-SVN: r277889", "tree": {"sha": "9d839f6dc9f42382290e742a242648ea986e2400", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9d839f6dc9f42382290e742a242648ea986e2400"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0c92c8627c1cbf7cbc76d065514a564dc8f044c0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c92c8627c1cbf7cbc76d065514a564dc8f044c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0c92c8627c1cbf7cbc76d065514a564dc8f044c0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c92c8627c1cbf7cbc76d065514a564dc8f044c0/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d37303d15af7ff6f89989a70605a8225be0ffa6d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d37303d15af7ff6f89989a70605a8225be0ffa6d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d37303d15af7ff6f89989a70605a8225be0ffa6d"}], "stats": {"total": 52, "additions": 41, "deletions": 11}, "files": [{"sha": "3eb20181139e70fe445b2a597b29924f2f59b4f7", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c92c8627c1cbf7cbc76d065514a564dc8f044c0/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c92c8627c1cbf7cbc76d065514a564dc8f044c0/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=0c92c8627c1cbf7cbc76d065514a564dc8f044c0", "patch": "@@ -1,5 +1,10 @@\n 2019-11-06  Jonathan Wakely  <jwakely@redhat.com>\n \n+\t* include/Makefile.in: Regenerate.\n+\t* libsupc++/Makefile.in: Regenerate.\n+\t* libsupc++/compare (__3way_builtin_ptr_cmp): Define helper.\n+\t(compare_three_way): Add missing implementation.\n+\n \t* include/bits/iterator_concepts.h (unreachable_sentinel_t): Remove\n \tredundant equality operators.\n \t* testsuite/util/testsuite_iterators.h (test_range::sentinel):"}, {"sha": "acc4fe5f4c969ac2e50d534636ab92e420fc0ed7", "filename": "libstdc++-v3/include/Makefile.in", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c92c8627c1cbf7cbc76d065514a564dc8f044c0/libstdc%2B%2B-v3%2Finclude%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c92c8627c1cbf7cbc76d065514a564dc8f044c0/libstdc%2B%2B-v3%2Finclude%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2FMakefile.in?ref=0c92c8627c1cbf7cbc76d065514a564dc8f044c0", "patch": "@@ -1859,8 +1859,9 @@ ${pch3_output}: ${pch3_source} ${pch2_output}\n # <new>, <typeinfo>, <exception>, <initializer_list>, <cstdalign>, <cstdarg>,\n # <concepts>, <cstdbool>, <type_traits>, <bit>, <atomic>,\n # and any files which they include (and which we provide).\n-# <new>, <typeinfo>, <exception>, and <initializer_list> are installed by\n-# libsupc++, so only the others and the sub-includes are copied here.\n+# <new>, <typeinfo>, <exception>, <initializer_list> and <compare>\n+# are installed by libsupc++, so only the others and the sub-includes\n+# are copied here.\n install-freestanding-headers:\n \t$(mkinstalldirs) $(DESTDIR)${gxx_include_dir}/bits\n \tfor file in c++0x_warning.h atomic_base.h concept_check.h move.h; do \\"}, {"sha": "38e34cbb516427df33185d4f430e67ecab586e7f", "filename": "libstdc++-v3/libsupc++/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c92c8627c1cbf7cbc76d065514a564dc8f044c0/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c92c8627c1cbf7cbc76d065514a564dc8f044c0/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.in?ref=0c92c8627c1cbf7cbc76d065514a564dc8f044c0", "patch": "@@ -483,7 +483,7 @@ toolexeclib_LTLIBRARIES = libsupc++.la\n # 2) integrated libsupc++convenience.la that is to be a part of libstdc++.a\n noinst_LTLIBRARIES = libsupc++convenience.la\n std_HEADERS = \\\n-\tcxxabi.h exception initializer_list new typeinfo\n+\tcompare cxxabi.h exception initializer_list new typeinfo\n \n bits_HEADERS = \\\n \tatomic_lockfree_defines.h cxxabi_forced.h \\"}, {"sha": "2e518ccbffde70493dca489d508deb37c2f79aa9", "filename": "libstdc++-v3/libsupc++/compare", "status": "modified", "additions": 32, "deletions": 8, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c92c8627c1cbf7cbc76d065514a564dc8f044c0/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fcompare", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c92c8627c1cbf7cbc76d065514a564dc8f044c0/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fcompare", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fcompare?ref=0c92c8627c1cbf7cbc76d065514a564dc8f044c0", "patch": "@@ -519,15 +519,16 @@ namespace std\n \n   // [cmp.common], common comparison category type\n   template<typename... _Ts>\n-    struct common_comparison_category {\n+    struct common_comparison_category\n+    {\n       // using type = TODO\n     };\n \n   template<typename... _Ts>\n     using common_comparison_category_t\n       = typename common_comparison_category<_Ts...>::type;\n \n-#if __cpp_concepts\n+#if __cpp_lib_concepts\n   namespace __detail\n   {\n     template<typename _Tp, typename _Cat>\n@@ -604,20 +605,42 @@ namespace std\n     using compare_three_way_result_t\n       = typename compare_three_way_result<_Tp, _Up>::__type;\n \n+#if __cpp_lib_concepts\n+  namespace __detail\n+  {\n+    // BUILTIN-PTR-THREE-WAY(T, U)\n+    template<typename _Tp, typename _Up>\n+      concept __3way_builtin_ptr_cmp\n+\t= convertible_to<_Tp, const volatile void*>\n+\t  && convertible_to<_Up, const volatile void*>\n+\t  && ! requires(_Tp&& __t, _Up&& __u)\n+\t     { operator<=>(static_cast<_Tp&&>(__t), static_cast<_Up&&>(__u)); }\n+\t  && ! requires(_Tp&& __t, _Up&& __u)\n+\t     { static_cast<_Tp&&>(__t).operator<=>(static_cast<_Up&&>(__u)); };\n+  } // namespace __detail\n+\n   // [cmp.object], typename compare_three_way\n   struct compare_three_way\n   {\n-    // TODO\n-#if 0\n     template<typename _Tp, typename _Up>\n       requires (three_way_comparable_with<_Tp, _Up>\n-\t  || BUILTIN-PTR-THREE-WAY(_Tp, _Up))\n+\t  || __detail::__3way_builtin_ptr_cmp<_Tp, _Up>)\n     constexpr auto\n     operator()(_Tp&& __t, _Up&& __u) const noexcept\n     {\n-      // TODO\n+      if constexpr (__detail::__3way_builtin_ptr_cmp<_Tp, _Up>)\n+\t{\n+\t  auto __pt = static_cast<const volatile void*>(__t);\n+\t  auto __pu = static_cast<const volatile void*>(__u);\n+\t  if (__builtin_is_constant_evaluated())\n+\t    return __pt <=> __pu;\n+\t  auto __it = reinterpret_cast<__UINTPTR_TYPE__>(__pt);\n+\t  auto __iu = reinterpret_cast<__UINTPTR_TYPE__>(__pu);\n+\t  return __it <=> __iu;\n+\t}\n+      else\n+\treturn static_cast<_Tp&&>(__t) <=> static_cast<_Up&&>(__u);\n     }\n-#endif\n \n     using is_transparent = void;\n   };\n@@ -635,7 +658,8 @@ namespace std\n     inline constexpr unspecified compare_partial_order_fallback = unspecified;\n #endif\n   }\n-}\n+#endif\n+} // namespace std\n \n #pragma GCC visibility pop\n "}]}