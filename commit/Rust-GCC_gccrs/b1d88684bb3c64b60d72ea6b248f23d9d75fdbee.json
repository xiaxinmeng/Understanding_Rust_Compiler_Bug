{"sha": "b1d88684bb3c64b60d72ea6b248f23d9d75fdbee", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjFkODg2ODRiYjNjNjRiNjBkNzJlYTZiMjQ4ZjIzZDlkNzVmZGJlZQ==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2018-10-01T22:25:52Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2018-10-01T22:25:52Z"}, "message": "compiler: use the underlying type to build placeholder type for alias\n    \n    When asking for a placeholder type of an alias type, build a\n    placeholder for the underlying type, instead of treating the\n    alias as a named type and calling get_backend. The latter may\n    fail as we may not be ready to build a complete backend type. We\n    have already used a unified backend type for alias type and its\n    underlying type. Do the same for placeholders as well.\n    \n    Reviewed-on: https://go-review.googlesource.com/138635\n\nFrom-SVN: r264773", "tree": {"sha": "132eb9ea3cc5a9e9e7d876aacfc78e9cc7c0e895", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/132eb9ea3cc5a9e9e7d876aacfc78e9cc7c0e895"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b1d88684bb3c64b60d72ea6b248f23d9d75fdbee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1d88684bb3c64b60d72ea6b248f23d9d75fdbee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b1d88684bb3c64b60d72ea6b248f23d9d75fdbee", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1d88684bb3c64b60d72ea6b248f23d9d75fdbee/comments", "author": null, "committer": null, "parents": [{"sha": "44ef03008c75059368245eb3dcd6054bed3f7643", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44ef03008c75059368245eb3dcd6054bed3f7643", "html_url": "https://github.com/Rust-GCC/gccrs/commit/44ef03008c75059368245eb3dcd6054bed3f7643"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "ad3253f4b85b4003dc20d648e8c0ffbad4bef573", "filename": "gcc/go/gofrontend/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1d88684bb3c64b60d72ea6b248f23d9d75fdbee/gcc%2Fgo%2Fgofrontend%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1d88684bb3c64b60d72ea6b248f23d9d75fdbee/gcc%2Fgo%2Fgofrontend%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2FMERGE?ref=b1d88684bb3c64b60d72ea6b248f23d9d75fdbee", "patch": "@@ -1,4 +1,4 @@\n-2f56d51c6b3104242613c74b02fa6c63a2fe16c5\n+53d0d7ca278a5612fcdb5fb098e7bf950a0178ef\n \n The first line of this file holds the git revision number of the last\n merge done from the gofrontend repository."}, {"sha": "3768719a03ac3599de0743c34ce05bfa97e782ca", "filename": "gcc/go/gofrontend/types.cc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1d88684bb3c64b60d72ea6b248f23d9d75fdbee/gcc%2Fgo%2Fgofrontend%2Ftypes.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1d88684bb3c64b60d72ea6b248f23d9d75fdbee/gcc%2Fgo%2Fgofrontend%2Ftypes.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Ftypes.cc?ref=b1d88684bb3c64b60d72ea6b248f23d9d75fdbee", "patch": "@@ -1125,6 +1125,8 @@ Type::get_backend_placeholder(Gogo* gogo)\n     case TYPE_FORWARD:\n       // Named types keep track of their own dependencies and manage\n       // their own placeholders.\n+      if (this->named_type() != NULL && this->named_type()->is_alias())\n+        return this->unalias()->get_backend_placeholder(gogo);\n       return this->get_backend(gogo);\n \n     case TYPE_INTERFACE:"}]}