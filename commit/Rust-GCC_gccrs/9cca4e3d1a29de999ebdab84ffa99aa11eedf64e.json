{"sha": "9cca4e3d1a29de999ebdab84ffa99aa11eedf64e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWNjYTRlM2QxYTI5ZGU5OTllYmRhYjg0ZmZhOTlhYTExZWVkZjY0ZQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2014-01-28T04:30:26Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2014-01-28T04:30:26Z"}, "message": "re PR c++/58837 ([c++11] ICE using invalid condition in static_assert)\n\n\tPR c++/58837\n\t* typeck.c (cp_truthvalue_conversion): Use explicit comparison for\n\tFUNCTION_DECL.\n\nFrom-SVN: r207162", "tree": {"sha": "94279b7c6b142c9afdd09f878a2116c4b7861e95", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/94279b7c6b142c9afdd09f878a2116c4b7861e95"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9cca4e3d1a29de999ebdab84ffa99aa11eedf64e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9cca4e3d1a29de999ebdab84ffa99aa11eedf64e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9cca4e3d1a29de999ebdab84ffa99aa11eedf64e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9cca4e3d1a29de999ebdab84ffa99aa11eedf64e/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "64d34897909d2aafbe461490bd82951727fda20a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/64d34897909d2aafbe461490bd82951727fda20a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/64d34897909d2aafbe461490bd82951727fda20a"}], "stats": {"total": 15, "additions": 14, "deletions": 1}, "files": [{"sha": "42adc480f183bd557499c2804d902ba4ced3bf83", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cca4e3d1a29de999ebdab84ffa99aa11eedf64e/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cca4e3d1a29de999ebdab84ffa99aa11eedf64e/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=9cca4e3d1a29de999ebdab84ffa99aa11eedf64e", "patch": "@@ -1,5 +1,9 @@\n 2014-01-27  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/58837\n+\t* typeck.c (cp_truthvalue_conversion): Use explicit comparison for\n+\tFUNCTION_DECL.\n+\n \tPR c++/59097\n \t* decl.c (compute_array_index_type): Don't call\n \tmaybe_constant_value for a non-integral expression."}, {"sha": "b7ece1bf771704be4d6ebedda684f3b87eeb1d07", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cca4e3d1a29de999ebdab84ffa99aa11eedf64e/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cca4e3d1a29de999ebdab84ffa99aa11eedf64e/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=9cca4e3d1a29de999ebdab84ffa99aa11eedf64e", "patch": "@@ -5182,7 +5182,9 @@ tree\n cp_truthvalue_conversion (tree expr)\n {\n   tree type = TREE_TYPE (expr);\n-  if (TYPE_PTRDATAMEM_P (type))\n+  if (TYPE_PTRDATAMEM_P (type)\n+      /* Avoid ICE on invalid use of non-static member function.  */\n+      || TREE_CODE (expr) == FUNCTION_DECL)\n     return build_binary_op (EXPR_LOCATION (expr),\n \t\t\t    NE_EXPR, expr, nullptr_node, 1);\n   else if (TYPE_PTR_P (type) || TYPE_PTRMEMFUNC_P (type))"}, {"sha": "fccaa449c170afc22b1547f6c210b0538f4e5d7c", "filename": "gcc/testsuite/g++.dg/cpp0x/static_assert9.C", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cca4e3d1a29de999ebdab84ffa99aa11eedf64e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fstatic_assert9.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cca4e3d1a29de999ebdab84ffa99aa11eedf64e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fstatic_assert9.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fstatic_assert9.C?ref=9cca4e3d1a29de999ebdab84ffa99aa11eedf64e", "patch": "@@ -0,0 +1,7 @@\n+// PR c++/58837\n+// { dg-require-effective-target c++11 }\n+\n+void f();\n+static_assert(f, \"\");\n+struct A {};\n+static_assert(A::~A, \"\");      // { dg-error \"non-static member function\" }"}]}