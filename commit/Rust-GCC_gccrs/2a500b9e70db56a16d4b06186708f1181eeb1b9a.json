{"sha": "2a500b9e70db56a16d4b06186708f1181eeb1b9a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmE1MDBiOWU3MGRiNTZhMTZkNGIwNjE4NjcwOGYxMTgxZWViMWI5YQ==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2002-07-16T22:20:10Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2002-07-16T22:20:10Z"}, "message": "i386.h (MACHINE_DEPENDENT_REORG): New macro.\n\n\n\t* i386.h (MACHINE_DEPENDENT_REORG): New macro.\n\t* i386.c (x86_machine_dependent_reorg): New function.\n\t* i386-protos.h (x86_machine_dependent_reorg): Declare.\n\nFrom-SVN: r55498", "tree": {"sha": "7596767db4af978309d5cec69c5f8f9eacdb5129", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7596767db4af978309d5cec69c5f8f9eacdb5129"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2a500b9e70db56a16d4b06186708f1181eeb1b9a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a500b9e70db56a16d4b06186708f1181eeb1b9a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2a500b9e70db56a16d4b06186708f1181eeb1b9a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a500b9e70db56a16d4b06186708f1181eeb1b9a/comments", "author": null, "committer": null, "parents": [{"sha": "554b81110446a7af56af9417bd30437024443564", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/554b81110446a7af56af9417bd30437024443564", "html_url": "https://github.com/Rust-GCC/gccrs/commit/554b81110446a7af56af9417bd30437024443564"}], "stats": {"total": 51, "additions": 51, "deletions": 0}, "files": [{"sha": "3939b6117c8b0d8bed94fa1891da9eb920ed42c1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a500b9e70db56a16d4b06186708f1181eeb1b9a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a500b9e70db56a16d4b06186708f1181eeb1b9a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2a500b9e70db56a16d4b06186708f1181eeb1b9a", "patch": "@@ -1,3 +1,9 @@\n+Wed Jul 17 00:19:20 CEST 2002  Jan Hubicka  <jh@suse.cz>\n+\n+\t* i386.h (MACHINE_DEPENDENT_REORG): New macro.\n+\t* i386.c (x86_machine_dependent_reorg): New function.\n+\t* i386-protos.h (x86_machine_dependent_reorg): Declare.\n+\n 2002-07-16  Zack Weinberg  <zack@codesourcery.com>\n \n \t* builtins.c (std_expand_builtin_va_start): Remove unused"}, {"sha": "a81e0f537b2c009f3ff68153ac8294ee01c625a9", "filename": "gcc/config/i386/i386-protos.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a500b9e70db56a16d4b06186708f1181eeb1b9a/gcc%2Fconfig%2Fi386%2Fi386-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a500b9e70db56a16d4b06186708f1181eeb1b9a/gcc%2Fconfig%2Fi386%2Fi386-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-protos.h?ref=2a500b9e70db56a16d4b06186708f1181eeb1b9a", "patch": "@@ -209,6 +209,7 @@ extern int x86_field_alignment PARAMS ((tree, int));\n #endif\n \n extern rtx ix86_tls_get_addr PARAMS ((void));\n+extern void x86_machine_dependent_reorg PARAMS ((rtx));\n \n /* In winnt.c  */\n extern void i386_pe_encode_section_info PARAMS ((tree, int));"}, {"sha": "6e19b5cd887ef0c1638210dcb2161a0e3cb9550b", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a500b9e70db56a16d4b06186708f1181eeb1b9a/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a500b9e70db56a16d4b06186708f1181eeb1b9a/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=2a500b9e70db56a16d4b06186708f1181eeb1b9a", "patch": "@@ -13677,4 +13677,47 @@ x86_field_alignment (field, computed)\n   return computed;\n }\n \n+/* Implement machine specific optimizations.  \n+   At the moment we implement single transformation: AMD Athlon works faster\n+   when RET is not destination of conditional jump or directly preceeded\n+   by other jump instruction.  We avoid the penalty by inserting NOP just\n+   before the RET instructions in such cases.  */\n+void\n+x86_machine_dependent_reorg (first)\n+     rtx first ATTRIBUTE_UNUSED;\n+{\n+  edge e;\n+\n+  if (!TARGET_ATHLON || !optimize || optimize_size)\n+    return;\n+  for (e = EXIT_BLOCK_PTR->pred; e; e = e->pred_next)\n+  {\n+    basic_block bb = e->src;\n+    rtx ret = bb->end;\n+    rtx prev;\n+    bool insert = false;\n+\n+    if (!returnjump_p (ret) || !maybe_hot_bb_p (bb))\n+      continue;\n+    prev = prev_nonnote_insn (ret);\n+    if (prev && GET_CODE (prev) == CODE_LABEL)\n+      {\n+\tedge e;\n+\tfor (e = bb->pred; e; e = e->pred_next)\n+\t  if (EDGE_FREQUENCY (e) && e->src->index > 0\n+\t      && !(e->flags & EDGE_FALLTHRU))\n+\t    insert = 1;\n+      }\n+    if (!insert)\n+      {\n+\tprev = prev_real_insn (ret);\n+\tif (prev && GET_CODE (prev) == JUMP_INSN\n+\t    && any_condjump_p (prev))\n+\t  insert = 1;\n+      }\n+    if (insert)\n+      emit_insn_before (gen_nop (), ret);\n+  }\n+}\n+\n #include \"gt-i386.h\""}, {"sha": "7cf972194fed40bfac1400b47fdf8c7bc466a3f7", "filename": "gcc/config/i386/i386.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a500b9e70db56a16d4b06186708f1181eeb1b9a/gcc%2Fconfig%2Fi386%2Fi386.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a500b9e70db56a16d4b06186708f1181eeb1b9a/gcc%2Fconfig%2Fi386%2Fi386.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.h?ref=2a500b9e70db56a16d4b06186708f1181eeb1b9a", "patch": "@@ -3354,6 +3354,7 @@ enum fp_cw_mode {FP_CW_STORED, FP_CW_UNINITIALIZED, FP_CW_ANY};\n    ((SRC) < FIRST_STACK_REG || (SRC) > LAST_STACK_REG)\n \n \f\n+#define MACHINE_DEPENDENT_REORG(X) x86_machine_dependent_reorg(X)\n /*\n Local variables:\n version-control: t"}]}