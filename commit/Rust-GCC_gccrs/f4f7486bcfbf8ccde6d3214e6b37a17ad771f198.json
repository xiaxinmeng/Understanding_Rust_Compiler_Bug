{"sha": "f4f7486bcfbf8ccde6d3214e6b37a17ad771f198", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjRmNzQ4NmJjZmJmOGNjZGU2ZDMyMTRlNmIzN2ExN2FkNzcxZjE5OA==", "commit": {"author": {"name": "Andreas Tobler", "email": "a.tobler@schweiz.org", "date": "2006-12-14T07:34:45Z"}, "committer": {"name": "Andreas Tobler", "email": "andreast@gcc.gnu.org", "date": "2006-12-14T07:34:45Z"}, "message": "configure.ac: Add TARGET for x86_64-*-darwin*.\n\n2006-12-14  Andreas Tobler  <a.tobler@schweiz.org>\n\n\t* configure.ac: Add TARGET for x86_64-*-darwin*.\n\t* Makefile.am (nodist_libffi_la_SOURCES): Add rules for 64-bit sources\n\tfor X86_DARWIN.\n\t* src/x86/ffitarget.h: Set trampoline size for x86_64-*-darwin*.\n\t* src/x86/darwin64.S: New file for x86_64-*-darwin* support.\n\t* configure: Regenerate.\n\t* Makefile.in: Regenerate.\n\t* include/Makefile.in: Regenerate.\n\t* testsuite/Makefile.in: Regenerate.\n\t* testsuite/libffi.special/unwindtest_ffi_call.cc: New test case for\n\tffi_call only.\n\nFrom-SVN: r119856", "tree": {"sha": "bb61ea6e1c000380bb73ee301d3bb695593be353", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bb61ea6e1c000380bb73ee301d3bb695593be353"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f4f7486bcfbf8ccde6d3214e6b37a17ad771f198", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4f7486bcfbf8ccde6d3214e6b37a17ad771f198", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f4f7486bcfbf8ccde6d3214e6b37a17ad771f198", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4f7486bcfbf8ccde6d3214e6b37a17ad771f198/comments", "author": null, "committer": null, "parents": [{"sha": "2a67bec24f6c82008acbe9138515a541edc10f7e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a67bec24f6c82008acbe9138515a541edc10f7e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2a67bec24f6c82008acbe9138515a541edc10f7e"}], "stats": {"total": 586, "additions": 509, "deletions": 77}, "files": [{"sha": "f8fa5743bbeb5984bba8478d261d11c50f59e7d0", "filename": "libffi/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4f7486bcfbf8ccde6d3214e6b37a17ad771f198/libffi%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4f7486bcfbf8ccde6d3214e6b37a17ad771f198/libffi%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2FChangeLog?ref=f4f7486bcfbf8ccde6d3214e6b37a17ad771f198", "patch": "@@ -1,3 +1,17 @@\n+2006-12-14  Andreas Tobler  <a.tobler@schweiz.org>\n+\n+\t* configure.ac: Add TARGET for x86_64-*-darwin*.\n+\t* Makefile.am (nodist_libffi_la_SOURCES): Add rules for 64-bit sources\n+\tfor X86_DARWIN.\n+\t* src/x86/ffitarget.h: Set trampoline size for x86_64-*-darwin*.\n+\t* src/x86/darwin64.S: New file for x86_64-*-darwin* support.\n+\t* configure: Regenerate.\n+\t* Makefile.in: Regenerate.\n+\t* include/Makefile.in: Regenerate.\n+\t* testsuite/Makefile.in: Regenerate.\n+\t* testsuite/libffi.special/unwindtest_ffi_call.cc: New test case for\n+\tffi_call only.\n+\n 2006-12-13  Andreas Tobler <a.tobler@schweiz.org>\n \n \t* aclocal.m4: Regenerate with aclocal -I .. as written in the"}, {"sha": "38b4bd00b869dbf007689c0b7b6bba733ef97e97", "filename": "libffi/Makefile.am", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4f7486bcfbf8ccde6d3214e6b37a17ad771f198/libffi%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4f7486bcfbf8ccde6d3214e6b37a17ad771f198/libffi%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2FMakefile.am?ref=f4f7486bcfbf8ccde6d3214e6b37a17ad771f198", "patch": "@@ -95,7 +95,7 @@ if X86_WIN32\n nodist_libffi_la_SOURCES += src/x86/ffi.c src/x86/win32.S\n endif\n if X86_DARWIN\n-nodist_libffi_la_SOURCES += src/x86/ffi.c src/x86/darwin.S\n+nodist_libffi_la_SOURCES += src/x86/ffi.c src/x86/darwin.S src/x86/ffi64.c src/x86/darwin64.S\n endif\n if SPARC\n nodist_libffi_la_SOURCES += src/sparc/ffi.c src/sparc/v8.S src/sparc/v9.S"}, {"sha": "57f0dd2b4cba50fbbafeedb732d76ebe20518893", "filename": "libffi/Makefile.in", "status": "modified", "additions": 15, "deletions": 29, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4f7486bcfbf8ccde6d3214e6b37a17ad771f198/libffi%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4f7486bcfbf8ccde6d3214e6b37a17ad771f198/libffi%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2FMakefile.in?ref=f4f7486bcfbf8ccde6d3214e6b37a17ad771f198", "patch": "@@ -41,7 +41,7 @@ target_triplet = @target@\n @MIPS_LINUX_TRUE@am__append_2 = src/mips/ffi.c src/mips/o32.S\n @X86_TRUE@am__append_3 = src/x86/ffi.c src/x86/sysv.S\n @X86_WIN32_TRUE@am__append_4 = src/x86/ffi.c src/x86/win32.S\n-@X86_DARWIN_TRUE@am__append_5 = src/x86/ffi.c src/x86/darwin.S\n+@X86_DARWIN_TRUE@am__append_5 = src/x86/ffi.c src/x86/darwin.S src/x86/ffi64.c src/x86/darwin64.S\n @SPARC_TRUE@am__append_6 = src/sparc/ffi.c src/sparc/v8.S src/sparc/v9.S\n @ALPHA_TRUE@am__append_7 = src/alpha/ffi.c src/alpha/osf.S\n @IA64_TRUE@am__append_8 = src/ia64/ffi.c src/ia64/unix.S\n@@ -69,8 +69,8 @@ DIST_COMMON = README $(am__configure_deps) $(srcdir)/../compile \\\n \t$(top_srcdir)/configure ChangeLog\n subdir = .\n ACLOCAL_M4 = $(top_srcdir)/aclocal.m4\n-am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \\\n-\t$(top_srcdir)/configure.ac\n+am__aclocal_m4_deps = $(top_srcdir)/../libtool.m4 \\\n+\t$(top_srcdir)/acinclude.m4 $(top_srcdir)/configure.ac\n am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\\n \t$(ACLOCAL_M4)\n am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \\\n@@ -96,7 +96,8 @@ am_libffi_la_OBJECTS = src/debug.lo src/prep_cif.lo src/types.lo \\\n @MIPS_LINUX_TRUE@am__objects_2 = src/mips/ffi.lo src/mips/o32.lo\n @X86_TRUE@am__objects_3 = src/x86/ffi.lo src/x86/sysv.lo\n @X86_WIN32_TRUE@am__objects_4 = src/x86/ffi.lo src/x86/win32.lo\n-@X86_DARWIN_TRUE@am__objects_5 = src/x86/ffi.lo src/x86/darwin.lo\n+@X86_DARWIN_TRUE@am__objects_5 = src/x86/ffi.lo src/x86/darwin.lo \\\n+@X86_DARWIN_TRUE@\tsrc/x86/ffi64.lo src/x86/darwin64.lo\n @SPARC_TRUE@am__objects_6 = src/sparc/ffi.lo src/sparc/v8.lo \\\n @SPARC_TRUE@\tsrc/sparc/v9.lo\n @ALPHA_TRUE@am__objects_7 = src/alpha/ffi.lo src/alpha/osf.lo\n@@ -159,11 +160,11 @@ LTCCASCOMPILE = $(LIBTOOL) --mode=compile $(CCAS) $(AM_CCASFLAGS) \\\n \t$(CCASFLAGS)\n COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \\\n \t$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)\n-LTCOMPILE = $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) \\\n+LTCOMPILE = $(LIBTOOL) --mode=compile $(CC) $(DEFS) \\\n \t$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \\\n \t$(AM_CFLAGS) $(CFLAGS)\n CCLD = $(CC)\n-LINK = $(LIBTOOL) --tag=CC --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \\\n+LINK = $(LIBTOOL) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \\\n \t$(AM_LDFLAGS) $(LDFLAGS) -o $@\n SOURCES = $(libffi_la_SOURCES) $(nodist_libffi_la_SOURCES) \\\n \t$(libffi_convenience_la_SOURCES) \\\n@@ -203,7 +204,6 @@ AMDEP_FALSE = @AMDEP_FALSE@\n AMDEP_TRUE = @AMDEP_TRUE@\n AMTAR = @AMTAR@\n AM_RUNTESTFLAGS = @AM_RUNTESTFLAGS@\n-AR = @AR@\n ARM_FALSE = @ARM_FALSE@\n ARM_TRUE = @ARM_TRUE@\n AUTOCONF = @AUTOCONF@\n@@ -217,32 +217,23 @@ CCDEPMODE = @CCDEPMODE@\n CFLAGS = @CFLAGS@\n CPP = @CPP@\n CPPFLAGS = @CPPFLAGS@\n-CXX = @CXX@\n-CXXCPP = @CXXCPP@\n-CXXDEPMODE = @CXXDEPMODE@\n-CXXFLAGS = @CXXFLAGS@\n CYGPATH_W = @CYGPATH_W@\n DEFS = @DEFS@\n DEPDIR = @DEPDIR@\n-ECHO = @ECHO@\n ECHO_C = @ECHO_C@\n ECHO_N = @ECHO_N@\n ECHO_T = @ECHO_T@\n EGREP = @EGREP@\n EXEEXT = @EXEEXT@\n-F77 = @F77@\n-FFLAGS = @FFLAGS@\n FRV_FALSE = @FRV_FALSE@\n FRV_TRUE = @FRV_TRUE@\n-GREP = @GREP@\n HAVE_LONG_DOUBLE = @HAVE_LONG_DOUBLE@\n IA64_FALSE = @IA64_FALSE@\n IA64_TRUE = @IA64_TRUE@\n INSTALL_DATA = @INSTALL_DATA@\n INSTALL_PROGRAM = @INSTALL_PROGRAM@\n INSTALL_SCRIPT = @INSTALL_SCRIPT@\n INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@\n-LDFLAGS = @LDFLAGS@\n LIBFFI_CRIS_FALSE = @LIBFFI_CRIS_FALSE@\n LIBFFI_CRIS_TRUE = @LIBFFI_CRIS_TRUE@\n LIBOBJS = @LIBOBJS@\n@@ -310,12 +301,10 @@ X86_TRUE = @X86_TRUE@\n X86_WIN32_FALSE = @X86_WIN32_FALSE@\n X86_WIN32_TRUE = @X86_WIN32_TRUE@\n ac_ct_CC = @ac_ct_CC@\n-ac_ct_CXX = @ac_ct_CXX@\n-ac_ct_F77 = @ac_ct_F77@\n+ac_ct_RANLIB = @ac_ct_RANLIB@\n+ac_ct_STRIP = @ac_ct_STRIP@\n am__fastdepCC_FALSE = @am__fastdepCC_FALSE@\n am__fastdepCC_TRUE = @am__fastdepCC_TRUE@\n-am__fastdepCXX_FALSE = @am__fastdepCXX_FALSE@\n-am__fastdepCXX_TRUE = @am__fastdepCXX_TRUE@\n am__include = @am__include@\n am__leading_dot = @am__leading_dot@\n am__quote = @am__quote@\n@@ -328,31 +317,24 @@ build_cpu = @build_cpu@\n build_os = @build_os@\n build_vendor = @build_vendor@\n datadir = @datadir@\n-datarootdir = @datarootdir@\n-docdir = @docdir@\n-dvidir = @dvidir@\n exec_prefix = @exec_prefix@\n host = @host@\n host_alias = @host_alias@\n host_cpu = @host_cpu@\n host_os = @host_os@\n host_vendor = @host_vendor@\n-htmldir = @htmldir@\n includedir = @includedir@\n infodir = @infodir@\n install_sh = @install_sh@\n libdir = @libdir@\n libexecdir = @libexecdir@\n-localedir = @localedir@\n localstatedir = @localstatedir@\n mandir = @mandir@\n mkdir_p = @mkdir_p@\n multi_basedir = @multi_basedir@\n oldincludedir = @oldincludedir@\n-pdfdir = @pdfdir@\n prefix = @prefix@\n program_transform_name = @program_transform_name@\n-psdir = @psdir@\n sbindir = @sbindir@\n sharedstatedir = @sharedstatedir@\n sysconfdir = @sysconfdir@\n@@ -576,6 +558,10 @@ src/x86/win32.lo: src/x86/$(am__dirstamp) \\\n \tsrc/x86/$(DEPDIR)/$(am__dirstamp)\n src/x86/darwin.lo: src/x86/$(am__dirstamp) \\\n \tsrc/x86/$(DEPDIR)/$(am__dirstamp)\n+src/x86/ffi64.lo: src/x86/$(am__dirstamp) \\\n+\tsrc/x86/$(DEPDIR)/$(am__dirstamp)\n+src/x86/darwin64.lo: src/x86/$(am__dirstamp) \\\n+\tsrc/x86/$(DEPDIR)/$(am__dirstamp)\n src/sparc/$(am__dirstamp):\n \t@$(mkdir_p) src/sparc\n \t@: > src/sparc/$(am__dirstamp)\n@@ -694,8 +680,6 @@ src/s390/sysv.lo: src/s390/$(am__dirstamp) \\\n \tsrc/s390/$(DEPDIR)/$(am__dirstamp)\n src/s390/ffi.lo: src/s390/$(am__dirstamp) \\\n \tsrc/s390/$(DEPDIR)/$(am__dirstamp)\n-src/x86/ffi64.lo: src/x86/$(am__dirstamp) \\\n-\tsrc/x86/$(DEPDIR)/$(am__dirstamp)\n src/x86/unix64.lo: src/x86/$(am__dirstamp) \\\n \tsrc/x86/$(DEPDIR)/$(am__dirstamp)\n src/sh/$(am__dirstamp):\n@@ -825,6 +809,8 @@ mostlyclean-compile:\n \t-rm -f src/types.lo\n \t-rm -f src/x86/darwin.$(OBJEXT)\n \t-rm -f src/x86/darwin.lo\n+\t-rm -f src/x86/darwin64.$(OBJEXT)\n+\t-rm -f src/x86/darwin64.lo\n \t-rm -f src/x86/ffi.$(OBJEXT)\n \t-rm -f src/x86/ffi.lo\n \t-rm -f src/x86/ffi64.$(OBJEXT)"}, {"sha": "68404e4ba0565d8ddb26808d4e48f4779338f6f5", "filename": "libffi/configure", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4f7486bcfbf8ccde6d3214e6b37a17ad771f198/libffi%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4f7486bcfbf8ccde6d3214e6b37a17ad771f198/libffi%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fconfigure?ref=f4f7486bcfbf8ccde6d3214e6b37a17ad771f198", "patch": "@@ -5415,6 +5415,7 @@ cris-*-*) TARGET=LIBFFI_CRIS; TARGETDIR=cris;;\n s390-*-linux-*) TARGET=S390; TARGETDIR=s390;;\n s390x-*-linux-*) TARGET=S390; TARGETDIR=s390;;\n x86_64-*-linux* | x86_64-*-freebsd* | x86_64-*-kfreebsd*-gnu) TARGET=X86_64; TARGETDIR=x86;;\n+x86_64-*-darwin*) TARGET=X86_DARWIN; TARGETDIR=x86;;\n sh-*-linux* | sh[34]*-*-linux*) TARGET=SH; TARGETDIR=sh;;\n sh-*-rtems*) TARGET=SH; TARGETDIR=sh;;\n sh64-*-linux* | sh5*-*-linux*) TARGET=SH64; TARGETDIR=sh64;;"}, {"sha": "46c4ee3214f5580e93f751601ebcaf69e16a39ac", "filename": "libffi/configure.ac", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4f7486bcfbf8ccde6d3214e6b37a17ad771f198/libffi%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4f7486bcfbf8ccde6d3214e6b37a17ad771f198/libffi%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fconfigure.ac?ref=f4f7486bcfbf8ccde6d3214e6b37a17ad771f198", "patch": "@@ -80,6 +80,7 @@ cris-*-*) TARGET=LIBFFI_CRIS; TARGETDIR=cris;;\n s390-*-linux-*) TARGET=S390; TARGETDIR=s390;;\n s390x-*-linux-*) TARGET=S390; TARGETDIR=s390;;\n x86_64-*-linux* | x86_64-*-freebsd* | x86_64-*-kfreebsd*-gnu) TARGET=X86_64; TARGETDIR=x86;;\n+x86_64-*-darwin*) TARGET=X86_DARWIN; TARGETDIR=x86;;\n sh-*-linux* | sh[[34]]*-*-linux*) TARGET=SH; TARGETDIR=sh;;\n sh-*-rtems*) TARGET=SH; TARGETDIR=sh;;\n sh64-*-linux* | sh5*-*-linux*) TARGET=SH64; TARGETDIR=sh64;;"}, {"sha": "448376866022c7433c407152d79fc124ba57b7d6", "filename": "libffi/include/Makefile.in", "status": "modified", "additions": 4, "deletions": 23, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4f7486bcfbf8ccde6d3214e6b37a17ad771f198/libffi%2Finclude%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4f7486bcfbf8ccde6d3214e6b37a17ad771f198/libffi%2Finclude%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Finclude%2FMakefile.in?ref=f4f7486bcfbf8ccde6d3214e6b37a17ad771f198", "patch": "@@ -41,8 +41,8 @@ subdir = include\n DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in \\\n \t$(srcdir)/ffi.h.in $(toollibffi_HEADERS)\n ACLOCAL_M4 = $(top_srcdir)/aclocal.m4\n-am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \\\n-\t$(top_srcdir)/configure.ac\n+am__aclocal_m4_deps = $(top_srcdir)/../libtool.m4 \\\n+\t$(top_srcdir)/acinclude.m4 $(top_srcdir)/configure.ac\n am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\\n \t$(ACLOCAL_M4)\n mkinstalldirs = $(SHELL) $(top_srcdir)/../mkinstalldirs\n@@ -70,7 +70,6 @@ AMDEP_FALSE = @AMDEP_FALSE@\n AMDEP_TRUE = @AMDEP_TRUE@\n AMTAR = @AMTAR@\n AM_RUNTESTFLAGS = @AM_RUNTESTFLAGS@\n-AR = @AR@\n ARM_FALSE = @ARM_FALSE@\n ARM_TRUE = @ARM_TRUE@\n AUTOCONF = @AUTOCONF@\n@@ -84,32 +83,23 @@ CCDEPMODE = @CCDEPMODE@\n CFLAGS = @CFLAGS@\n CPP = @CPP@\n CPPFLAGS = @CPPFLAGS@\n-CXX = @CXX@\n-CXXCPP = @CXXCPP@\n-CXXDEPMODE = @CXXDEPMODE@\n-CXXFLAGS = @CXXFLAGS@\n CYGPATH_W = @CYGPATH_W@\n DEFS = @DEFS@\n DEPDIR = @DEPDIR@\n-ECHO = @ECHO@\n ECHO_C = @ECHO_C@\n ECHO_N = @ECHO_N@\n ECHO_T = @ECHO_T@\n EGREP = @EGREP@\n EXEEXT = @EXEEXT@\n-F77 = @F77@\n-FFLAGS = @FFLAGS@\n FRV_FALSE = @FRV_FALSE@\n FRV_TRUE = @FRV_TRUE@\n-GREP = @GREP@\n HAVE_LONG_DOUBLE = @HAVE_LONG_DOUBLE@\n IA64_FALSE = @IA64_FALSE@\n IA64_TRUE = @IA64_TRUE@\n INSTALL_DATA = @INSTALL_DATA@\n INSTALL_PROGRAM = @INSTALL_PROGRAM@\n INSTALL_SCRIPT = @INSTALL_SCRIPT@\n INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@\n-LDFLAGS = @LDFLAGS@\n LIBFFI_CRIS_FALSE = @LIBFFI_CRIS_FALSE@\n LIBFFI_CRIS_TRUE = @LIBFFI_CRIS_TRUE@\n LIBOBJS = @LIBOBJS@\n@@ -177,12 +167,10 @@ X86_TRUE = @X86_TRUE@\n X86_WIN32_FALSE = @X86_WIN32_FALSE@\n X86_WIN32_TRUE = @X86_WIN32_TRUE@\n ac_ct_CC = @ac_ct_CC@\n-ac_ct_CXX = @ac_ct_CXX@\n-ac_ct_F77 = @ac_ct_F77@\n+ac_ct_RANLIB = @ac_ct_RANLIB@\n+ac_ct_STRIP = @ac_ct_STRIP@\n am__fastdepCC_FALSE = @am__fastdepCC_FALSE@\n am__fastdepCC_TRUE = @am__fastdepCC_TRUE@\n-am__fastdepCXX_FALSE = @am__fastdepCXX_FALSE@\n-am__fastdepCXX_TRUE = @am__fastdepCXX_TRUE@\n am__include = @am__include@\n am__leading_dot = @am__leading_dot@\n am__quote = @am__quote@\n@@ -195,31 +183,24 @@ build_cpu = @build_cpu@\n build_os = @build_os@\n build_vendor = @build_vendor@\n datadir = @datadir@\n-datarootdir = @datarootdir@\n-docdir = @docdir@\n-dvidir = @dvidir@\n exec_prefix = @exec_prefix@\n host = @host@\n host_alias = @host_alias@\n host_cpu = @host_cpu@\n host_os = @host_os@\n host_vendor = @host_vendor@\n-htmldir = @htmldir@\n includedir = @includedir@\n infodir = @infodir@\n install_sh = @install_sh@\n libdir = @libdir@\n libexecdir = @libexecdir@\n-localedir = @localedir@\n localstatedir = @localstatedir@\n mandir = @mandir@\n mkdir_p = @mkdir_p@\n multi_basedir = @multi_basedir@\n oldincludedir = @oldincludedir@\n-pdfdir = @pdfdir@\n prefix = @prefix@\n program_transform_name = @program_transform_name@\n-psdir = @psdir@\n sbindir = @sbindir@\n sharedstatedir = @sharedstatedir@\n sysconfdir = @sysconfdir@"}, {"sha": "5ba0a5f8492dd47c8e26a83092b2200e8c2f06fc", "filename": "libffi/src/x86/darwin64.S", "status": "added", "additions": 415, "deletions": 0, "changes": 415, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4f7486bcfbf8ccde6d3214e6b37a17ad771f198/libffi%2Fsrc%2Fx86%2Fdarwin64.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4f7486bcfbf8ccde6d3214e6b37a17ad771f198/libffi%2Fsrc%2Fx86%2Fdarwin64.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fx86%2Fdarwin64.S?ref=f4f7486bcfbf8ccde6d3214e6b37a17ad771f198", "patch": "@@ -0,0 +1,415 @@\n+/* -----------------------------------------------------------------------\n+   darwin64.S - Copyright (c) 2006 Free Software Foundation, Inc.\n+   derived from unix64.S\n+\n+   x86-64 Foreign Function Interface for Darwin.\n+\n+   Permission is hereby granted, free of charge, to any person obtaining\n+   a copy of this software and associated documentation files (the\n+   ``Software''), to deal in the Software without restriction, including\n+   without limitation the rights to use, copy, modify, merge, publish,\n+   distribute, sublicense, and/or sell copies of the Software, and to\n+   permit persons to whom the Software is furnished to do so, subject to\n+   the following conditions:\n+\n+   The above copyright notice and this permission notice shall be included\n+   in all copies or substantial portions of the Software.\n+\n+   THE SOFTWARE IS PROVIDED ``AS IS'', WITHOUT WARRANTY OF ANY KIND, EXPRESS\n+   OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n+   MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n+   IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY CLAIM, DAMAGES OR\n+   OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,\n+   ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n+   OTHER DEALINGS IN THE SOFTWARE.\n+   ----------------------------------------------------------------------- */\n+\n+#ifdef __x86_64__\n+#define LIBFFI_ASM\n+#include <fficonfig.h>\n+#include <ffi.h>\n+\n+\t.file \"darwin64.S\"\n+.text\n+\n+/* ffi_call_unix64 (void *args, unsigned long bytes, unsigned flags,\n+\t\t    void *raddr, void (*fnaddr)());\n+\n+   Bit o trickiness here -- ARGS+BYTES is the base of the stack frame\n+   for this function.  This has been allocated by ffi_call.  We also\n+   deallocate some of the stack that has been alloca'd.  */\n+\n+\t.align\t3\n+\t.globl\t_ffi_call_unix64\n+\n+_ffi_call_unix64:\n+LUW0:\n+\tmovq\t(%rsp), %r10\t\t/* Load return address.  */\n+\tleaq\t(%rdi, %rsi), %rax\t/* Find local stack base.  */\n+\tmovq\t%rdx, (%rax)\t\t/* Save flags.  */\n+\tmovq\t%rcx, 8(%rax)\t\t/* Save raddr.  */\n+\tmovq\t%rbp, 16(%rax)\t\t/* Save old frame pointer.  */\n+\tmovq\t%r10, 24(%rax)\t\t/* Relocate return address.  */\n+\tmovq\t%rax, %rbp\t\t/* Finalize local stack frame.  */\n+LUW1:\n+\tmovq\t%rdi, %r10\t\t/* Save a copy of the register area. */\n+\tmovq\t%r8, %r11\t\t/* Save a copy of the target fn.  */\n+\tmovl\t%r9d, %eax\t\t/* Set number of SSE registers.  */\n+\n+\t/* Load up all argument registers.  */\n+\tmovq\t(%r10), %rdi\n+\tmovq\t8(%r10), %rsi\n+\tmovq\t16(%r10), %rdx\n+\tmovq\t24(%r10), %rcx\n+\tmovq\t32(%r10), %r8\n+\tmovq\t40(%r10), %r9\n+\ttestl\t%eax, %eax\n+\tjnz\tLload_sse\n+Lret_from_load_sse:\n+\n+\t/* Deallocate the reg arg area.  */\n+\tleaq\t176(%r10), %rsp\n+\n+\t/* Call the user function.  */\n+\tcall\t*%r11\n+\n+\t/* Deallocate stack arg area; local stack frame in redzone.  */\n+\tleaq\t24(%rbp), %rsp\n+\n+\tmovq\t0(%rbp), %rcx\t\t/* Reload flags.  */\n+\tmovq\t8(%rbp), %rdi\t\t/* Reload raddr.  */\n+\tmovq\t16(%rbp), %rbp\t\t/* Reload old frame pointer.  */\n+LUW2:\n+\n+\t/* The first byte of the flags contains the FFI_TYPE.  */\n+\tmovzbl\t%cl, %r10d\n+\tleaq\tLstore_table(%rip), %r11\n+\tmovslq\t(%r11, %r10, 4), %r10\n+\taddq\t%r11, %r10\n+\tjmp\t*%r10\n+\n+Lstore_table:\n+\t.long\tLst_void-Lstore_table\t\t/* FFI_TYPE_VOID */\n+\t.long\tLst_sint32-Lstore_table\t\t/* FFI_TYPE_INT */\n+\t.long\tLst_float-Lstore_table\t\t/* FFI_TYPE_FLOAT */\n+\t.long\tLst_double-Lstore_table\t\t/* FFI_TYPE_DOUBLE */\n+\t.long\tLst_ldouble-Lstore_table\t/* FFI_TYPE_LONGDOUBLE */\n+\t.long\tLst_uint8-Lstore_table\t\t/* FFI_TYPE_UINT8 */\n+\t.long\tLst_sint8-Lstore_table\t\t/* FFI_TYPE_SINT8 */\n+\t.long\tLst_uint16-Lstore_table\t\t/* FFI_TYPE_UINT16 */\n+\t.long\tLst_sint16-Lstore_table\t\t/* FFI_TYPE_SINT16 */\n+\t.long\tLst_uint32-Lstore_table\t\t/* FFI_TYPE_UINT32 */\n+\t.long\tLst_sint32-Lstore_table\t\t/* FFI_TYPE_SINT32 */\n+\t.long\tLst_int64-Lstore_table\t\t/* FFI_TYPE_UINT64 */\n+\t.long\tLst_int64-Lstore_table\t\t/* FFI_TYPE_SINT64 */\n+\t.long\tLst_struct-Lstore_table\t\t/* FFI_TYPE_STRUCT */\n+\t.long\tLst_int64-Lstore_table\t\t/* FFI_TYPE_POINTER */\n+\n+\t.text\n+\t.align\t3\n+Lst_void:\n+\tret\n+\t.align\t3\n+Lst_uint8:\n+\tmovzbq\t%al, %rax\n+\tmovq\t%rax, (%rdi)\n+\tret\n+\t.align\t3\n+Lst_sint8:\n+\tmovsbq\t%al, %rax\n+\tmovq\t%rax, (%rdi)\n+\tret\n+\t.align\t3\n+Lst_uint16:\n+\tmovzwq\t%ax, %rax\n+\tmovq\t%rax, (%rdi)\n+\t.align\t3\n+Lst_sint16:\n+\tmovswq\t%ax, %rax\n+\tmovq\t%rax, (%rdi)\n+\tret\n+\t.align\t3\n+Lst_uint32:\n+\tmovl\t%eax, %eax\n+\tmovq\t%rax, (%rdi)\n+\t.align\t3\n+Lst_sint32:\n+\tcltq\n+\tmovq\t%rax, (%rdi)\n+\tret\n+\t.align\t3\n+Lst_int64:\n+\tmovq\t%rax, (%rdi)\n+\tret\n+\t.align\t3\n+Lst_float:\n+\tmovss\t%xmm0, (%rdi)\n+\tret\n+\t.align\t3\n+Lst_double:\n+\tmovsd\t%xmm0, (%rdi)\n+\tret\n+Lst_ldouble:\n+\tfstpt\t(%rdi)\n+\tret\n+\t.align\t3\n+Lst_struct:\n+\tleaq\t-20(%rsp), %rsi\t\t/* Scratch area in redzone.  */\n+\n+\t/* We have to locate the values now, and since we don't want to\n+\t   write too much data into the user's return value, we spill the\n+\t   value to a 16 byte scratch area first.  Bits 8, 9, and 10\n+\t   control where the values are located.  Only one of the three\n+\t   bits will be set; see ffi_prep_cif_machdep for the pattern.  */\n+\tmovd\t%xmm0, %r10\n+\tmovd\t%xmm1, %r11\n+\ttestl\t$0x100, %ecx\n+\tcmovnz\t%rax, %rdx\n+\tcmovnz\t%r10, %rax\n+\ttestl\t$0x200, %ecx\n+\tcmovnz\t%r10, %rdx\n+\ttestl\t$0x400, %ecx\n+\tcmovnz\t%r10, %rax\n+\tcmovnz\t%r11, %rdx\n+\tmovq\t%rax, (%rsi)\n+\tmovq\t%rdx, 8(%rsi)\n+\n+\t/* Bits 12-31 contain the true size of the structure.  Copy from\n+\t   the scratch area to the true destination.  */\n+\tshrl\t$12, %ecx\n+\trep movsb\n+\tret\n+\n+\t/* Many times we can avoid loading any SSE registers at all.\n+\t   It's not worth an indirect jump to load the exact set of\n+\t   SSE registers needed; zero or all is a good compromise.  */\n+\t.align\t3\n+LUW3:\n+Lload_sse:\n+\tmovdqa\t48(%r10), %xmm0\n+\tmovdqa\t64(%r10), %xmm1\n+\tmovdqa\t80(%r10), %xmm2\n+\tmovdqa\t96(%r10), %xmm3\n+\tmovdqa\t112(%r10), %xmm4\n+\tmovdqa\t128(%r10), %xmm5\n+\tmovdqa\t144(%r10), %xmm6\n+\tmovdqa\t160(%r10), %xmm7\n+\tjmp\tLret_from_load_sse\n+\n+LUW4:\n+\t.align\t3\n+\t.globl\t_ffi_closure_unix64\n+\n+_ffi_closure_unix64:\n+LUW5:\n+\t/* The carry flag is set by the trampoline iff SSE registers\n+\t   are used.  Don't clobber it before the branch instruction.  */\n+\tleaq    -200(%rsp), %rsp\n+LUW6:\n+\tmovq\t%rdi, (%rsp)\n+\tmovq    %rsi, 8(%rsp)\n+\tmovq    %rdx, 16(%rsp)\n+\tmovq    %rcx, 24(%rsp)\n+\tmovq    %r8, 32(%rsp)\n+\tmovq    %r9, 40(%rsp)\n+\tjc      Lsave_sse\n+Lret_from_save_sse:\n+\n+\tmovq\t%r10, %rdi\n+\tleaq\t176(%rsp), %rsi\n+\tmovq\t%rsp, %rdx\n+\tleaq\t208(%rsp), %rcx\n+\tcall\t_ffi_closure_unix64_inner\n+\n+\t/* Deallocate stack frame early; return value is now in redzone.  */\n+\taddq\t$200, %rsp\n+LUW7:\n+\n+\t/* The first byte of the return value contains the FFI_TYPE.  */\n+\tmovzbl\t%al, %r10d\n+\tleaq\tLload_table(%rip), %r11\n+\tmovslq\t(%r11, %r10, 4), %r10\n+\taddq\t%r11, %r10\n+\tjmp\t*%r10\n+\n+Lload_table:\n+\t.long\tLld_void-Lload_table\t\t/* FFI_TYPE_VOID */\n+\t.long\tLld_int32-Lload_table\t\t/* FFI_TYPE_INT */\n+\t.long\tLld_float-Lload_table\t\t/* FFI_TYPE_FLOAT */\n+\t.long\tLld_double-Lload_table\t\t/* FFI_TYPE_DOUBLE */\n+\t.long\tLld_ldouble-Lload_table\t\t/* FFI_TYPE_LONGDOUBLE */\n+\t.long\tLld_int8-Lload_table\t\t/* FFI_TYPE_UINT8 */\n+\t.long\tLld_int8-Lload_table\t\t/* FFI_TYPE_SINT8 */\n+\t.long\tLld_int16-Lload_table\t\t/* FFI_TYPE_UINT16 */\n+\t.long\tLld_int16-Lload_table\t\t/* FFI_TYPE_SINT16 */\n+\t.long\tLld_int32-Lload_table\t\t/* FFI_TYPE_UINT32 */\n+\t.long\tLld_int32-Lload_table\t\t/* FFI_TYPE_SINT32 */\n+\t.long\tLld_int64-Lload_table\t\t/* FFI_TYPE_UINT64 */\n+\t.long\tLld_int64-Lload_table\t\t/* FFI_TYPE_SINT64 */\n+\t.long\tLld_struct-Lload_table\t\t/* FFI_TYPE_STRUCT */\n+\t.long\tLld_int64-Lload_table\t\t/* FFI_TYPE_POINTER */\n+\n+\t.text\n+\t.align\t3\n+Lld_void:\n+\tret\n+\t.align\t3\n+Lld_int8:\n+\tmovzbl\t-24(%rsp), %eax\n+\tret\n+\t.align\t3\n+Lld_int16:\n+\tmovzwl\t-24(%rsp), %eax\n+\tret\n+\t.align\t3\n+Lld_int32:\n+\tmovl\t-24(%rsp), %eax\n+\tret\n+\t.align\t3\n+Lld_int64:\n+\tmovq\t-24(%rsp), %rax\n+\tret\n+\t.align\t3\n+Lld_float:\n+\tmovss\t-24(%rsp), %xmm0\n+\tret\n+\t.align\t3\n+Lld_double:\n+\tmovsd\t-24(%rsp), %xmm0\n+\tret\n+\t.align\t3\n+Lld_ldouble:\n+\tfldt\t-24(%rsp)\n+\tret\n+\t.align\t3\n+Lld_struct:\n+\t/* There are four possibilities here, %rax/%rdx, %xmm0/%rax,\n+\t   %rax/%xmm0, %xmm0/%xmm1.  We collapse two by always loading\n+\t   both rdx and xmm1 with the second word.  For the remaining,\n+\t   bit 8 set means xmm0 gets the second word, and bit 9 means\n+\t   that rax gets the second word.  */\n+\tmovq\t-24(%rsp), %rcx\n+\tmovq\t-16(%rsp), %rdx\n+\tmovq\t-16(%rsp), %xmm1\n+\ttestl\t$0x100, %eax\n+\tcmovnz\t%rdx, %rcx\n+\tmovd\t%rcx, %xmm0\n+\ttestl\t$0x200, %eax\n+\tmovq\t-24(%rsp), %rax\n+\tcmovnz\t%rdx, %rax\n+\tret\n+\n+\t/* See the comment above Lload_sse; the same logic applies here.  */\n+\t.align\t3\n+LUW8:\n+Lsave_sse:\n+\tmovdqa\t%xmm0, 48(%rsp)\n+\tmovdqa\t%xmm1, 64(%rsp)\n+\tmovdqa\t%xmm2, 80(%rsp)\n+\tmovdqa\t%xmm3, 96(%rsp)\n+\tmovdqa\t%xmm4, 112(%rsp)\n+\tmovdqa\t%xmm5, 128(%rsp)\n+\tmovdqa\t%xmm6, 144(%rsp)\n+\tmovdqa\t%xmm7, 160(%rsp)\n+\tjmp\tLret_from_save_sse\n+\n+LUW9:\n+.section __TEXT,__eh_frame,coalesced,no_toc+strip_static_syms+live_support\n+EH_frame1:\n+\t.set\tL$set$0,LECIE1-LSCIE1\t\t/* CIE Length */\n+\t.long\tL$set$0\n+LSCIE1:\n+\t.long\t0x0\t\t/* CIE Identifier Tag */\n+\t.byte\t0x1\t\t/* CIE Version */\n+\t.ascii\t\"zR\\0\"\t\t/* CIE Augmentation */\n+\t.byte\t0x1\t\t/* uleb128 0x1; CIE Code Alignment Factor */\n+\t.byte\t0x78\t\t/* sleb128 -8; CIE Data Alignment Factor */\n+\t.byte\t0x10\t\t/* CIE RA Column */\n+\t.byte\t0x1\t\t/* uleb128 0x1; Augmentation size */\n+\t.byte\t0x10\t\t/* FDE Encoding (pcrel sdata4) */\n+\t.byte\t0xc\t\t/* DW_CFA_def_cfa, %rsp offset 8 */\n+\t.byte\t0x7\t\t/* uleb128 0x7 */\n+\t.byte\t0x8\t\t/* uleb128 0x8 */\n+\t.byte\t0x90\t\t/* DW_CFA_offset, column 0x10 */\n+\t.byte\t0x1\n+\t.align\t3\n+LECIE1:\n+\t.globl _ffi_call_unix64.eh\n+_ffi_call_unix64.eh:\n+LSFDE1:\n+\t.set\tL$set$1,LEFDE1-LASFDE1\t/* FDE Length */\n+\t.long\tL$set$1\n+LASFDE1:\n+\t.long\tLASFDE1-EH_frame1\t/* FDE CIE offset */\n+\t.quad\tLUW0-.\t\t\t/* FDE initial location */\n+\t.set\tL$set$2,LUW4-LUW0\t/* FDE address range */\n+\t.quad\tL$set$2\n+\t.byte\t0x0\t\t\t/* Augmentation size */\n+\t.byte\t0x4\t\t\t/* DW_CFA_advance_loc4 */\n+\t.set\tL$set$3,LUW1-LUW0\n+\t.long\tL$set$3\n+\n+\t/* New stack frame based off rbp.  This is a itty bit of unwind\n+\t   trickery in that the CFA *has* changed.  There is no easy way\n+\t   to describe it correctly on entry to the function.  Fortunately,\n+\t   it doesn't matter too much since at all points we can correctly\n+\t   unwind back to ffi_call.  Note that the location to which we\n+\t   moved the return address is (the new) CFA-8, so from the\n+\t   perspective of the unwind info, it hasn't moved.  */\n+\t.byte\t0xc\t\t\t/* DW_CFA_def_cfa, %rbp offset 32 */\n+\t.byte\t0x6\n+\t.byte\t0x20\n+\t.byte\t0x80+6\t\t\t/* DW_CFA_offset, %rbp offset 2*-8 */\n+\t.byte\t0x2\n+\t.byte\t0xa\t\t\t/* DW_CFA_remember_state */\n+\n+\t.byte\t0x4\t\t\t/* DW_CFA_advance_loc4 */\n+\t.set\tL$set$4,LUW2-LUW1\n+\t.long\tL$set$4\n+\t.byte\t0xc\t\t\t/* DW_CFA_def_cfa, %rsp offset 8 */\n+\t.byte\t0x7\n+\t.byte\t0x8\n+\t.byte\t0xc0+6\t\t\t/* DW_CFA_restore, %rbp */\n+\n+\t.byte\t0x4\t\t\t/* DW_CFA_advance_loc4 */\n+\t.set\tL$set$5,LUW3-LUW2\n+\t.long\tL$set$5\n+\t.byte\t0xb\t\t\t/* DW_CFA_restore_state */\n+\n+\t.align\t3\n+LEFDE1:\n+\t.globl _ffi_closure_unix64.eh\n+_ffi_closure_unix64.eh:\n+LSFDE3:\n+\t.set\tL$set$6,LEFDE3-LASFDE3\t/* FDE Length */\n+\t.long\tL$set$6\n+LASFDE3:\n+\t.long\tLASFDE3-EH_frame1\t/* FDE CIE offset */\n+\t.quad\tLUW5-.\t\t\t/* FDE initial location */\n+\t.set\tL$set$7,LUW9-LUW5\t/* FDE address range */\n+\t.quad\tL$set$7\n+\t.byte\t0x0\t\t\t/* Augmentation size */\n+\n+\t.byte\t0x4\t\t\t/* DW_CFA_advance_loc4 */\n+\t.set\tL$set$8,LUW6-LUW5\n+\t.long\tL$set$8\n+\t.byte\t0xe\t\t\t/* DW_CFA_def_cfa_offset */\n+\t.byte\t208,1\t\t\t/* uleb128 208 */\n+\t.byte\t0xa\t\t\t/* DW_CFA_remember_state */\n+\n+\t.byte\t0x4\t\t\t/* DW_CFA_advance_loc4 */\n+\t.set\tL$set$9,LUW7-LUW6\n+\t.long\tL$set$9\n+\t.byte\t0xe\t\t\t/* DW_CFA_def_cfa_offset */\n+\t.byte\t0x8\n+\n+\t.byte\t0x4\t\t\t/* DW_CFA_advance_loc4 */\n+\t.set\tL$set$10,LUW8-LUW7\n+\t.long\tL$set$10\n+\t.byte\t0xb\t\t\t/* DW_CFA_restore_state */\n+\n+\t.align\t3\n+LEFDE3:\n+\t.subsections_via_symbols\n+\n+#endif /* __x86_64__ */"}, {"sha": "c44490f505426f208e5590aaa324f7f71a8bcec8", "filename": "libffi/src/x86/ffitarget.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4f7486bcfbf8ccde6d3214e6b37a17ad771f198/libffi%2Fsrc%2Fx86%2Fffitarget.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4f7486bcfbf8ccde6d3214e6b37a17ad771f198/libffi%2Fsrc%2Fx86%2Fffitarget.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fx86%2Fffitarget.h?ref=f4f7486bcfbf8ccde6d3214e6b37a17ad771f198", "patch": "@@ -69,7 +69,7 @@ typedef enum ffi_abi {\n \n #define FFI_CLOSURES 1\n \n-#ifdef X86_64\n+#if defined (X86_64) || (defined (__x86_64__) && defined (X86_DARWIN))\n #define FFI_TRAMPOLINE_SIZE 24\n #define FFI_NATIVE_RAW_API 0\n #else"}, {"sha": "84736d8035be2e62bab48b6f59214d775260bc4d", "filename": "libffi/testsuite/Makefile.in", "status": "modified", "additions": 4, "deletions": 23, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4f7486bcfbf8ccde6d3214e6b37a17ad771f198/libffi%2Ftestsuite%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4f7486bcfbf8ccde6d3214e6b37a17ad771f198/libffi%2Ftestsuite%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2FMakefile.in?ref=f4f7486bcfbf8ccde6d3214e6b37a17ad771f198", "patch": "@@ -39,8 +39,8 @@ target_triplet = @target@\n subdir = testsuite\n DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in\n ACLOCAL_M4 = $(top_srcdir)/aclocal.m4\n-am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \\\n-\t$(top_srcdir)/configure.ac\n+am__aclocal_m4_deps = $(top_srcdir)/../libtool.m4 \\\n+\t$(top_srcdir)/acinclude.m4 $(top_srcdir)/configure.ac\n am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\\n \t$(ACLOCAL_M4)\n mkinstalldirs = $(SHELL) $(top_srcdir)/../mkinstalldirs\n@@ -59,7 +59,6 @@ AMDEP_FALSE = @AMDEP_FALSE@\n AMDEP_TRUE = @AMDEP_TRUE@\n AMTAR = @AMTAR@\n AM_RUNTESTFLAGS = \n-AR = @AR@\n ARM_FALSE = @ARM_FALSE@\n ARM_TRUE = @ARM_TRUE@\n AUTOCONF = @AUTOCONF@\n@@ -73,32 +72,23 @@ CCDEPMODE = @CCDEPMODE@\n CFLAGS = @CFLAGS@\n CPP = @CPP@\n CPPFLAGS = @CPPFLAGS@\n-CXX = @CXX@\n-CXXCPP = @CXXCPP@\n-CXXDEPMODE = @CXXDEPMODE@\n-CXXFLAGS = @CXXFLAGS@\n CYGPATH_W = @CYGPATH_W@\n DEFS = @DEFS@\n DEPDIR = @DEPDIR@\n-ECHO = @ECHO@\n ECHO_C = @ECHO_C@\n ECHO_N = @ECHO_N@\n ECHO_T = @ECHO_T@\n EGREP = @EGREP@\n EXEEXT = @EXEEXT@\n-F77 = @F77@\n-FFLAGS = @FFLAGS@\n FRV_FALSE = @FRV_FALSE@\n FRV_TRUE = @FRV_TRUE@\n-GREP = @GREP@\n HAVE_LONG_DOUBLE = @HAVE_LONG_DOUBLE@\n IA64_FALSE = @IA64_FALSE@\n IA64_TRUE = @IA64_TRUE@\n INSTALL_DATA = @INSTALL_DATA@\n INSTALL_PROGRAM = @INSTALL_PROGRAM@\n INSTALL_SCRIPT = @INSTALL_SCRIPT@\n INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@\n-LDFLAGS = @LDFLAGS@\n LIBFFI_CRIS_FALSE = @LIBFFI_CRIS_FALSE@\n LIBFFI_CRIS_TRUE = @LIBFFI_CRIS_TRUE@\n LIBOBJS = @LIBOBJS@\n@@ -166,12 +156,10 @@ X86_TRUE = @X86_TRUE@\n X86_WIN32_FALSE = @X86_WIN32_FALSE@\n X86_WIN32_TRUE = @X86_WIN32_TRUE@\n ac_ct_CC = @ac_ct_CC@\n-ac_ct_CXX = @ac_ct_CXX@\n-ac_ct_F77 = @ac_ct_F77@\n+ac_ct_RANLIB = @ac_ct_RANLIB@\n+ac_ct_STRIP = @ac_ct_STRIP@\n am__fastdepCC_FALSE = @am__fastdepCC_FALSE@\n am__fastdepCC_TRUE = @am__fastdepCC_TRUE@\n-am__fastdepCXX_FALSE = @am__fastdepCXX_FALSE@\n-am__fastdepCXX_TRUE = @am__fastdepCXX_TRUE@\n am__include = @am__include@\n am__leading_dot = @am__leading_dot@\n am__quote = @am__quote@\n@@ -184,31 +172,24 @@ build_cpu = @build_cpu@\n build_os = @build_os@\n build_vendor = @build_vendor@\n datadir = @datadir@\n-datarootdir = @datarootdir@\n-docdir = @docdir@\n-dvidir = @dvidir@\n exec_prefix = @exec_prefix@\n host = @host@\n host_alias = @host_alias@\n host_cpu = @host_cpu@\n host_os = @host_os@\n host_vendor = @host_vendor@\n-htmldir = @htmldir@\n includedir = @includedir@\n infodir = @infodir@\n install_sh = @install_sh@\n libdir = @libdir@\n libexecdir = @libexecdir@\n-localedir = @localedir@\n localstatedir = @localstatedir@\n mandir = @mandir@\n mkdir_p = @mkdir_p@\n multi_basedir = @multi_basedir@\n oldincludedir = @oldincludedir@\n-pdfdir = @pdfdir@\n prefix = @prefix@\n program_transform_name = @program_transform_name@\n-psdir = @psdir@\n sbindir = @sbindir@\n sharedstatedir = @sharedstatedir@\n sysconfdir = @sysconfdir@"}, {"sha": "0911e0e1d9442786e8b19fe0829df21826b2180d", "filename": "libffi/testsuite/libffi.special/unwindtest_ffi_call.cc", "status": "added", "additions": 53, "deletions": 0, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4f7486bcfbf8ccde6d3214e6b37a17ad771f198/libffi%2Ftestsuite%2Flibffi.special%2Funwindtest_ffi_call.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4f7486bcfbf8ccde6d3214e6b37a17ad771f198/libffi%2Ftestsuite%2Flibffi.special%2Funwindtest_ffi_call.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flibffi.special%2Funwindtest_ffi_call.cc?ref=f4f7486bcfbf8ccde6d3214e6b37a17ad771f198", "patch": "@@ -0,0 +1,53 @@\n+/* Area:\tffi_call, unwind info\n+   Purpose:\tCheck if the unwind information is passed correctly.\n+   Limitations:\tnone.\n+   PR:\t\tnone.\n+   Originator:\tAndreas Tobler <andreast@gcc.gnu.org> 20061213  */\n+\n+/* { dg-do run { xfail mips64*-*-* arm*-*-* strongarm*-*-* xscale*-*-* } } */\n+#include \"ffitestcxx.h\"\n+\n+static int checking(int a __UNUSED__, short b __UNUSED__,\n+\t\t    signed char c __UNUSED__)\n+{\n+  throw 9;\n+}\n+\n+int main (void)\n+{\n+  ffi_cif cif;\n+  ffi_type *args[MAX_ARGS];\n+  void *values[MAX_ARGS];\n+  ffi_arg rint;\n+\n+  signed int si;\n+  signed short ss;\n+  signed char sc;\n+\n+  args[0] = &ffi_type_sint;\n+  values[0] = &si;\n+  args[1] = &ffi_type_sshort;\n+  values[1] = &ss;\n+  args[2] = &ffi_type_schar;\n+  values[2] = &sc;\n+\n+  /* Initialize the cif */\n+  CHECK(ffi_prep_cif(&cif, FFI_DEFAULT_ABI, 3,\n+\t\t     &ffi_type_sint, args) == FFI_OK);\n+\n+  si = -6;\n+  ss = -12;\n+  sc = -1;\n+  {\n+    try\n+      {\n+\tffi_call(&cif, FFI_FN(checking), &rint, values);\n+      } catch (int exception_code)\n+      {\n+\tCHECK(exception_code == 9);\n+      }\n+    printf(\"part one OK\\n\");\n+    /* { dg-output \"part one OK\" } */\n+  }\n+  exit(0);\n+}"}]}