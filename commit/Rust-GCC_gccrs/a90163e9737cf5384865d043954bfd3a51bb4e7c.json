{"sha": "a90163e9737cf5384865d043954bfd3a51bb4e7c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTkwMTYzZTk3MzdjZjUzODQ4NjVkMDQzOTU0YmZkM2E1MWJiNGU3Yw==", "commit": {"author": {"name": "Andi Kleen", "email": "ak@linux.intel.com", "date": "2010-10-04T17:09:45Z"}, "committer": {"name": "Andi Kleen", "email": "ak@gcc.gnu.org", "date": "2010-10-04T17:09:45Z"}, "message": "Mark linker Makefile rules for job server build\n\n-fwhopr=jobserver requires telling GNU make that the linker (= lto)\nrules support job server, so that the necessary jobserver\ninformation is passed through.\n\nAdd + to all the executable targets that run LTO for this purpose.\n\nThis improves build performance with a -fwhopr=jobserver\nbootstrap (or BUILD_CONFIG=bootstrap-lto) significantly.\n\nI didn't change Ada because that apparently doesn't support LTO.\n\nPasses bootstrap and test suite. Ok to commit?\n\ngcc/\n\n2010-10-04  Andi Kleen <ak@linux.intel.com>\n\n\t* Makefile.in (xgcc, cpp, cc1, collect2, lto-wrapper, gcov,\n        gcov-dump, cc1-dummy, genprog, build/gcov-iov):\n        Add + to build rule.\n\ngcc/cp/\n\n2010-10-04  Andi Kleen <ak@linux.intel.com>\n\n\t* Make-lang.in (g++, cc1plus): Add + to build rule.\n\ngcc/fortran/\n\n2010-10-04  Andi Kleen <ak@linux.intel.com>\n\n\t* Make-lang.in (gfortran, f951): Add + to build rule.\n\ngcc/java/\n\n2010-10-04  Andi Kleen <ak@linux.intel.com>\n\n\t* Make-lang.in (xgcj, jc1, jcf-dump, jvgenmain):\n        Add + to build rule.\n\ngcc/lto/\n\n2010-10-04  Andi Kleen <ak@linux.intel.com>\n\n\t* Make-lang.in (lto1): Add + to build rule.\n\ngcc/objc/\n\n2010-10-04  Andi Kleen <ak@linux.intel.com>\n\n\t* Make-lang.in (cc1obj-dummy, cc1obj): Add + to build rule.\n\ngcc/objcp/\n\n2010-10-04  Andi Kleen <ak@linux.intel.com>\n\n\t* Make-lang.in (cc1objplus-dummy, cc1objplus): Add + to build rule.\n\nMore plus fixes\n\nFrom-SVN: r164949", "tree": {"sha": "6f9745118813849aad4eef33f61c1496adfe68d5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6f9745118813849aad4eef33f61c1496adfe68d5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a90163e9737cf5384865d043954bfd3a51bb4e7c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a90163e9737cf5384865d043954bfd3a51bb4e7c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a90163e9737cf5384865d043954bfd3a51bb4e7c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a90163e9737cf5384865d043954bfd3a51bb4e7c/comments", "author": null, "committer": null, "parents": [{"sha": "6fda54ac811711b69895fde176881d26ec229d32", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6fda54ac811711b69895fde176881d26ec229d32", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6fda54ac811711b69895fde176881d26ec229d32"}], "stats": {"total": 77, "additions": 54, "deletions": 23}, "files": [{"sha": "adf2d843e203da89c0f68eb4d5f500c703701909", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a90163e9737cf5384865d043954bfd3a51bb4e7c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a90163e9737cf5384865d043954bfd3a51bb4e7c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a90163e9737cf5384865d043954bfd3a51bb4e7c", "patch": "@@ -1,3 +1,9 @@\n+2010-10-04  Andi Kleen <ak@linux.intel.com>\n+\n+\t* Makefile.in (xgcc, cpp, cc1, collect2, lto-wrapper, gcov,\n+        gcov-dump, cc1-dummy, genprog, build/gcov-iov):\n+        Add + to build rule.\n+\n 2010-10-04  Matthias Klose  <doko@ubuntu.com>\n \n \t* config/sparc/t-linux64 (MULTILIB_OSDIRNAMES): Use ../lib32 as the"}, {"sha": "c25afb5fa1b967e91d450164d29b55e78a1488ae", "filename": "gcc/Makefile.in", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a90163e9737cf5384865d043954bfd3a51bb4e7c/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a90163e9737cf5384865d043954bfd3a51bb4e7c/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=a90163e9737cf5384865d043954bfd3a51bb4e7c", "patch": "@@ -1810,15 +1810,15 @@ libbackend.a: $(OBJS)\n # and CC is `gcc'.  It is renamed to `gcc' when it is installed.\n xgcc$(exeext): $(GCC_OBJS) gccspec.o version.o intl.o prefix.o \\\n    version.o $(LIBDEPS) $(EXTRA_GCC_OBJS)\n-\t$(LINKER) $(ALL_LINKERFLAGS) $(LDFLAGS) -o $@ $(GCC_OBJS) \\\n+\t+$(LINKER) $(ALL_LINKERFLAGS) $(LDFLAGS) -o $@ $(GCC_OBJS) \\\n \t  gccspec.o intl.o prefix.o version.o $(EXTRA_GCC_OBJS) $(LIBS)\n \n # cpp is to cpp0 as gcc is to cc1.\n # The only difference from xgcc is that it's linked with cppspec.o\n # instead of gccspec.o.\n cpp$(exeext): $(GCC_OBJS) cppspec.o version.o intl.o prefix.o \\\n    version.o $(LIBDEPS) $(EXTRA_GCC_OBJS)\n-\t$(LINKER) $(ALL_LINKERFLAGS) $(LDFLAGS) -o $@ $(GCC_OBJS) \\\n+\t+$(LINKER) $(ALL_LINKERFLAGS) $(LDFLAGS) -o $@ $(GCC_OBJS) \\\n \t  cppspec.o intl.o prefix.o version.o $(EXTRA_GCC_OBJS) $(LIBS)\n \n # Dump a specs file to make -B./ read these specs over installed ones.\n@@ -1835,7 +1835,7 @@ gcc-cross$(exeext): xgcc$(exeext)\n dummy-checksum.o : dummy-checksum.c $(CONFIG_H) $(SYSTEM_H)\n \n cc1-dummy$(exeext): $(C_OBJS) dummy-checksum.o $(BACKEND) $(LIBDEPS)\n-\t$(LINKER) $(ALL_LINKERFLAGS) $(LDFLAGS) -o $@ $(C_OBJS) \\\n+\t+$(LINKER) $(ALL_LINKERFLAGS) $(LDFLAGS) -o $@ $(C_OBJS) \\\n \t  dummy-checksum.o $(BACKEND) $(LIBS) $(BACKENDLIBS)\n \n cc1-checksum.c : cc1-dummy$(exeext) build/genchecksum$(build_exeext)\n@@ -1844,7 +1844,7 @@ cc1-checksum.c : cc1-dummy$(exeext) build/genchecksum$(build_exeext)\n cc1-checksum.o : cc1-checksum.c $(CONFIG_H) $(SYSTEM_H)\n \n cc1$(exeext): $(C_OBJS) cc1-checksum.o $(BACKEND) $(LIBDEPS)\n-\t$(LINKER) $(ALL_LINKERFLAGS) $(LDFLAGS) -o $@ $(C_OBJS) \\\n+\t+$(LINKER) $(ALL_LINKERFLAGS) $(LDFLAGS) -o $@ $(C_OBJS) \\\n \t  cc1-checksum.o $(BACKEND) $(LIBS) $(BACKENDLIBS)\n \n #\f\n@@ -2056,7 +2056,7 @@ COLLECT2_OBJS = collect2.o collect2-aix.o tlink.o intl.o version.o\n COLLECT2_LIBS = @COLLECT2_LIBS@\n collect2$(exeext): $(COLLECT2_OBJS) $(LIBDEPS)\n # Don't try modifying collect2 (aka ld) in place--it might be linking this.\n-\t$(LINKER) $(ALL_LINKERFLAGS) $(LDFLAGS) -o T$@ \\\n+\t+$(LINKER) $(ALL_LINKERFLAGS) $(LDFLAGS) -o T$@ \\\n \t\t$(COLLECT2_OBJS) $(LIBS) $(COLLECT2_LIBS)\n \tmv -f T$@ $@\n \n@@ -2073,7 +2073,7 @@ tlink.o: tlink.c $(DEMANGLE_H) $(HASHTAB_H) $(CONFIG_H) $(SYSTEM_H) coretypes.h\n     $(OBSTACK_H) collect2.h intl.h\n \n lto-wrapper$(exeext): lto-wrapper.o intl.o $(LIBDEPS)\n-\t$(COMPILER) $(ALL_COMPILERFLAGS) $(LDFLAGS) -o T$@ lto-wrapper.o intl.o $(LIBS)\n+\t+$(COMPILER) $(ALL_COMPILERFLAGS) $(LDFLAGS) -o T$@ lto-wrapper.o intl.o $(LIBS)\n \tmv -f T$@ $@\n \n lto-wrapper.o: lto-wrapper.c $(CONFIG_H) $(SYSTEM_H) coretypes.h intl.h \\\n@@ -3935,7 +3935,7 @@ build/gengtype$(build_exeext) : build/gengtype-lex.o build/gengtype-parse.o\n \n # Rule for the generator programs:\n $(genprog:%=build/gen%$(build_exeext)): build/gen%$(build_exeext): build/gen%.o $(BUILD_LIBDEPS)\n-\t$(LINKER_FOR_BUILD) $(BUILD_LINKERFLAGS) $(BUILD_LDFLAGS) -o $@ \\\n+\t+$(LINKER_FOR_BUILD) $(BUILD_LINKERFLAGS) $(BUILD_LDFLAGS) -o $@ \\\n \t    $(filter-out $(BUILD_LIBDEPS), $^) $(BUILD_LIBS)\n \n # Generated source files for gengtype.\n@@ -3985,7 +3985,7 @@ build/gcov-iov.o: gcov-iov.c $(BCONFIG_H) coretypes.h $(GTM_H) \\\n   $(SYSTEM_H) coretypes.h $(TM_H)\n \n build/gcov-iov$(build_exeext): build/gcov-iov.o\n-\t$(LINKER_FOR_BUILD) $(BUILD_LINKERFLAGS) $(BUILD_LDFLAGS) \\\n+\t+$(LINKER_FOR_BUILD) $(BUILD_LINKERFLAGS) $(BUILD_LDFLAGS) \\\n \t\tbuild/gcov-iov.o -o $@\n \n gcov-iov.h: s-iov\n@@ -4002,10 +4002,10 @@ gcov-dump.o: gcov-dump.c gcov-io.c $(GCOV_IO_H) $(SYSTEM_H) coretypes.h \\\n \n GCOV_OBJS = gcov.o intl.o version.o errors.o\n gcov$(exeext): $(GCOV_OBJS) $(LIBDEPS)\n-\t$(LINKER) $(ALL_LINKERFLAGS) $(LDFLAGS) $(GCOV_OBJS) $(LIBS) -o $@\n+\t+$(LINKER) $(ALL_LINKERFLAGS) $(LDFLAGS) $(GCOV_OBJS) $(LIBS) -o $@\n GCOV_DUMP_OBJS = gcov-dump.o version.o errors.o\n gcov-dump$(exeext): $(GCOV_DUMP_OBJS) $(LIBDEPS)\n-\t$(LINKER) $(ALL_LINKERFLAGS) $(LDFLAGS) $(GCOV_DUMP_OBJS) \\\n+\t+$(LINKER) $(ALL_LINKERFLAGS) $(LDFLAGS) $(GCOV_DUMP_OBJS) \\\n \t\t$(LIBS) -o $@\n #\f\n # Build the include directories.  The stamp files are stmp-* rather than"}, {"sha": "cd9d533e1fd5e85ddc2dfb9b0bbfff2f6d216fdd", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a90163e9737cf5384865d043954bfd3a51bb4e7c/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a90163e9737cf5384865d043954bfd3a51bb4e7c/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=a90163e9737cf5384865d043954bfd3a51bb4e7c", "patch": "@@ -1,3 +1,7 @@\n+2010-10-04  Andi Kleen <ak@linux.intel.com>\n+\n+\t* Make-lang.in (g++, cc1plus): Add + to build rule.\n+\n 2010-10-04  Jason Merrill  <jason@redhat.com>\n \n \t* tree.c (decl_storage_duration): New."}, {"sha": "4be40b54f74296dd196be8f705c28848d71f6e5f", "filename": "gcc/cp/Make-lang.in", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a90163e9737cf5384865d043954bfd3a51bb4e7c/gcc%2Fcp%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a90163e9737cf5384865d043954bfd3a51bb4e7c/gcc%2Fcp%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FMake-lang.in?ref=a90163e9737cf5384865d043954bfd3a51bb4e7c", "patch": "@@ -62,7 +62,7 @@ g++spec.o: $(srcdir)/cp/g++spec.c $(SYSTEM_H) coretypes.h $(TM_H) $(GCC_H) \\\n # Create the compiler driver for g++.\n GXX_OBJS = $(GCC_OBJS) g++spec.o intl.o prefix.o version.o\n g++$(exeext): $(GXX_OBJS) $(EXTRA_GCC_OBJS) $(LIBDEPS)\n-\t$(LINKER) $(ALL_LINKERFLAGS) $(LDFLAGS) -o $@ \\\n+\t+$(LINKER) $(ALL_LINKERFLAGS) $(LDFLAGS) -o $@ \\\n \t  $(GXX_OBJS) $(EXTRA_GCC_OBJS) $(LIBS)\n \n # Create a version of the g++ driver which calls the cross-compiler.\n@@ -101,7 +101,7 @@ cc1plus-checksum.c : cc1plus-dummy$(exeext) build/genchecksum$(build_exeext)\n cc1plus-checksum.o : cc1plus-checksum.c $(CONFIG_H) $(SYSTEM_H)\n \n cc1plus$(exeext): $(CXX_OBJS) cc1plus-checksum.o $(BACKEND) $(LIBDEPS)\n-\t$(LINKER) $(ALL_LINKERFLAGS) $(LDFLAGS) -o $@ \\\n+\t+$(LINKER) $(ALL_LINKERFLAGS) $(LDFLAGS) -o $@ \\\n \t      $(CXX_OBJS) cc1plus-checksum.o $(BACKEND) $(LIBS) $(BACKENDLIBS)\n \n # Special build rules."}, {"sha": "97045116edfb331099950d93516020f6ece6c1ab", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a90163e9737cf5384865d043954bfd3a51bb4e7c/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a90163e9737cf5384865d043954bfd3a51bb4e7c/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=a90163e9737cf5384865d043954bfd3a51bb4e7c", "patch": "@@ -1,3 +1,7 @@\n+2010-10-04  Andi Kleen <ak@linux.intel.com>\n+\n+\t* Make-lang.in (gfortran, f951): Add + to build rule.\n+\n 2010-10-04  Richard Guenther  <rguenther@suse.de>\n \n \t* f95-lang.c (current_translation_unit): New global variable."}, {"sha": "c92c5da11602d4a48a2756ae5a141be27585d618", "filename": "gcc/fortran/Make-lang.in", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a90163e9737cf5384865d043954bfd3a51bb4e7c/gcc%2Ffortran%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a90163e9737cf5384865d043954bfd3a51bb4e7c/gcc%2Ffortran%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FMake-lang.in?ref=a90163e9737cf5384865d043954bfd3a51bb4e7c", "patch": "@@ -86,7 +86,7 @@ gfortranspec.o: $(srcdir)/fortran/gfortranspec.c $(SYSTEM_H) $(TM_H) $(GCC_H) \\\n # Create the compiler driver gfortran.\n GFORTRAN_D_OBJS = $(GCC_OBJS) gfortranspec.o version.o prefix.o intl.o\n gfortran$(exeext): $(GFORTRAN_D_OBJS) $(EXTRA_GCC_OBJS) $(LIBDEPS)\n-\t$(LINKER) $(ALL_LINKERFLAGS) $(LDFLAGS) -o $@ \\\n+\t+$(LINKER) $(ALL_LINKERFLAGS) $(LDFLAGS) -o $@ \\\n \t  $(GFORTRAN_D_OBJS) $(EXTRA_GCC_OBJS) $(LIBS)\n \n # Create a version of the gfortran driver which calls the cross-compiler.\n@@ -97,7 +97,7 @@ gfortran-cross$(exeext): gfortran$(exeext)\n # The compiler itself is called f951.\n f951$(exeext): $(F95_OBJS) \\\n \t\t$(BACKEND) $(LIBDEPS) attribs.o\n-\t$(LINKER) $(ALL_LINKERFLAGS) $(LDFLAGS) -o $@ \\\n+\t+$(LINKER) $(ALL_LINKERFLAGS) $(LDFLAGS) -o $@ \\\n \t\t$(F95_OBJS) $(BACKEND) $(LIBS) attribs.o $(BACKENDLIBS)\n \n gt-fortran-trans.h    : s-gtype; @true"}, {"sha": "0d155a8b1c5226583fcafa835d36e9982147c393", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a90163e9737cf5384865d043954bfd3a51bb4e7c/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a90163e9737cf5384865d043954bfd3a51bb4e7c/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=a90163e9737cf5384865d043954bfd3a51bb4e7c", "patch": "@@ -1,3 +1,8 @@\n+2010-10-04  Andi Kleen <ak@linux.intel.com>\n+\n+\t* Make-lang.in (xgcj, jc1, jcf-dump, jvgenmain):\n+        Add + to build rule.\n+\n 2010-09-29  Joseph Myers  <joseph@codesourcery.com>\n \n \t* lang.opt: Don't use VarExists."}, {"sha": "d0d17cbbe855a27958e506606660f8095e27011b", "filename": "gcc/java/Make-lang.in", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a90163e9737cf5384865d043954bfd3a51bb4e7c/gcc%2Fjava%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a90163e9737cf5384865d043954bfd3a51bb4e7c/gcc%2Fjava%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FMake-lang.in?ref=a90163e9737cf5384865d043954bfd3a51bb4e7c", "patch": "@@ -65,7 +65,7 @@ jvspec.o: $(srcdir)/java/jvspec.c $(SYSTEM_H) coretypes.h $(TM_H) \\\n # Create the compiler driver for $(XGCJ).\n $(XGCJ)$(exeext): $(GCC_OBJS) jvspec.o java/jcf-path.o version.o \\\n \t   prefix.o intl.o $(LIBDEPS) $(EXTRA_GCC_OBJS)\n-\t$(LINKER) $(ALL_LINKERFLAGS) $(LDFLAGS) -o $@ $(GCC_OBJS) \\\n+\t+$(LINKER) $(ALL_LINKERFLAGS) $(LDFLAGS) -o $@ $(GCC_OBJS) \\\n \t  jvspec.o java/jcf-path.o prefix.o intl.o \\\n \t  version.o $(EXTRA_GCC_OBJS) $(LIBS)\n \n@@ -100,17 +100,17 @@ jvspec.o-warn = -Wno-error\n \n jc1$(exeext): $(JAVA_OBJS) $(BACKEND) $(LIBDEPS) attribs.o\n \trm -f $@\n-\t$(LINKER) $(ALL_LINKERFLAGS) $(LDFLAGS) -o $@ \\\n+\t+$(LINKER) $(ALL_LINKERFLAGS) $(LDFLAGS) -o $@ \\\n \t\t$(JAVA_OBJS) $(BACKEND) $(ZLIB) $(LIBICONV) $(LIBS) attribs.o $(BACKENDLIBS)\n \n jcf-dump$(exeext): $(JCFDUMP_OBJS) $(LIBDEPS)\n \trm -f $@\n-\t$(LINKER) $(ALL_LINKERFLAGS) $(LDFLAGS) -o $@ $(JCFDUMP_OBJS) \\\n+\t+$(LINKER) $(ALL_LINKERFLAGS) $(LDFLAGS) -o $@ $(JCFDUMP_OBJS) \\\n \t\t$(CPPLIBS) $(ZLIB) $(LDEXP_LIB) $(LIBS)\n \n jvgenmain$(exeext): $(JVGENMAIN_OBJS) $(LIBDEPS)\n \trm -f $@\n-\t$(LINKER) $(ALL_LINKERFLAGS) $(LDFLAGS) -o $@ $(JVGENMAIN_OBJS) \\\n+\t+$(LINKER) $(ALL_LINKERFLAGS) $(LDFLAGS) -o $@ $(JVGENMAIN_OBJS) \\\n \t\t$(LIBS)\n \n #\f"}, {"sha": "49e2d75c8806a3137222a53a0a253833155be9bf", "filename": "gcc/lto/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a90163e9737cf5384865d043954bfd3a51bb4e7c/gcc%2Flto%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a90163e9737cf5384865d043954bfd3a51bb4e7c/gcc%2Flto%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2FChangeLog?ref=a90163e9737cf5384865d043954bfd3a51bb4e7c", "patch": "@@ -1,3 +1,7 @@\n+2010-10-04  Andi Kleen <ak@linux.intel.com>\n+\n+\t* Make-lang.in (lto1): Add + to build rule.\n+\n 2010-10-03  Andi Kleen <ak@linux.intel.com>\n \n     \t* lto.c (lto_file_finalize): Replace gcc_assert for missing section"}, {"sha": "9391405c07736de101f3d629684bf4e6c7c32eb1", "filename": "gcc/lto/Make-lang.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a90163e9737cf5384865d043954bfd3a51bb4e7c/gcc%2Flto%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a90163e9737cf5384865d043954bfd3a51bb4e7c/gcc%2Flto%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2FMake-lang.in?ref=a90163e9737cf5384865d043954bfd3a51bb4e7c", "patch": "@@ -72,7 +72,7 @@ lto.stagefeedback:\n lto-warn = $(STRICT_WARN)\n \n $(LTO_EXE): $(LTO_OBJS) $(BACKEND) $(LIBDEPS)\n-\t$(LINKER) $(ALL_LINKERFLAGS) $(LDFLAGS) -o $@ \\\n+\t+$(LINKER) $(ALL_LINKERFLAGS) $(LDFLAGS) -o $@ \\\n \t\t$(LTO_OBJS) $(BACKEND) $(BACKENDLIBS) $(LIBS) $(LTO_USE_LIBELF)\n \n # Dependencies"}, {"sha": "135d503ef995cb26f2474818862c98042ae7c44f", "filename": "gcc/objc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a90163e9737cf5384865d043954bfd3a51bb4e7c/gcc%2Fobjc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a90163e9737cf5384865d043954bfd3a51bb4e7c/gcc%2Fobjc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2FChangeLog?ref=a90163e9737cf5384865d043954bfd3a51bb4e7c", "patch": "@@ -1,3 +1,7 @@\n+2010-10-04  Andi Kleen <ak@linux.intel.com>\n+\n+\t* Make-lang.in (cc1obj-dummy, cc1obj): Add + to build rule.\n+\n 2010-09-30  Iain Sandoe  <iains@gcc.gnu.org>\n \n \tmerge from FSF 'apple/trunk' branch."}, {"sha": "08189ef95c519cf8f79688823362c040a5d2e843", "filename": "gcc/objc/Make-lang.in", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a90163e9737cf5384865d043954bfd3a51bb4e7c/gcc%2Fobjc%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a90163e9737cf5384865d043954bfd3a51bb4e7c/gcc%2Fobjc%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2FMake-lang.in?ref=a90163e9737cf5384865d043954bfd3a51bb4e7c", "patch": "@@ -52,7 +52,7 @@ OBJC_OBJS = objc/objc-lang.o objc/objc-act.o\n objc_OBJS = $(OBJC_OBJS) cc1obj-checksum.o\n \n cc1obj-dummy$(exeext): $(OBJC_OBJS) $(C_AND_OBJC_OBJS) dummy-checksum.o $(BACKEND) $(LIBDEPS)\n-\t$(LINKER) $(ALL_LINKERFLAGS) $(LDFLAGS) -o $@ \\\n+\t+$(LINKER) $(ALL_LINKERFLAGS) $(LDFLAGS) -o $@ \\\n \t      $(OBJC_OBJS) $(C_AND_OBJC_OBJS) dummy-checksum.o \\\n \t      $(BACKEND) $(LIBS) $(BACKENDLIBS)\n \n@@ -62,7 +62,7 @@ cc1obj-checksum.c : cc1obj-dummy$(exeext) build/genchecksum$(build_exeext)\n cc1obj-checksum.o : cc1obj-checksum.c $(CONFIG_H) $(SYSTEM_H)\n \n cc1obj$(exeext): $(OBJC_OBJS) $(C_AND_OBJC_OBJS) cc1obj-checksum.o $(BACKEND) $(LIBDEPS)\n-\t$(LINKER) $(ALL_LINKERFLAGS) $(LDFLAGS) -o $@ \\\n+\t+$(LINKER) $(ALL_LINKERFLAGS) $(LDFLAGS) -o $@ \\\n \t      $(OBJC_OBJS) $(C_AND_OBJC_OBJS) cc1obj-checksum.o \\\n \t      $(BACKEND) $(LIBS) $(BACKENDLIBS)\n "}, {"sha": "b43c412049ebbb33f2f748c16fd2825e1a7a3d04", "filename": "gcc/objcp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a90163e9737cf5384865d043954bfd3a51bb4e7c/gcc%2Fobjcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a90163e9737cf5384865d043954bfd3a51bb4e7c/gcc%2Fobjcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjcp%2FChangeLog?ref=a90163e9737cf5384865d043954bfd3a51bb4e7c", "patch": "@@ -1,3 +1,7 @@\n+2010-10-04  Andi Kleen <ak@linux.intel.com>\n+\n+\t* Make-lang.in (cc1objplus-dummy, cc1objplus): Add + to build rule.\n+\n 2010-09-28  Richard Henderson  <rth@redhat.com>\n \n \t* objcp-lang.c: Include \"target.h\"."}, {"sha": "f9adeac96d3cb463ef74ca451b5953d373ac835e", "filename": "gcc/objcp/Make-lang.in", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a90163e9737cf5384865d043954bfd3a51bb4e7c/gcc%2Fobjcp%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a90163e9737cf5384865d043954bfd3a51bb4e7c/gcc%2Fobjcp%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjcp%2FMake-lang.in?ref=a90163e9737cf5384865d043954bfd3a51bb4e7c", "patch": "@@ -56,7 +56,7 @@ obj-c++_OBJS = $(OBJCXX_OBJS) cc1objplus-checksum.o\n \n cc1objplus-dummy$(exeext): $(OBJCXX_OBJS) dummy-checksum.o $(BACKEND) \\\n \t\t$(LIBDEPS)\n-\t$(LINKER) $(ALL_LINKERFLAGS) $(LDFLAGS) -o $@ \\\n+\t+$(LINKER) $(ALL_LINKERFLAGS) $(LDFLAGS) -o $@ \\\n \t\t$(OBJCXX_OBJS) dummy-checksum.o $(BACKEND) $(LIBS) $(BACKENDLIBS)\n \n cc1objplus-checksum.c : cc1objplus-dummy$(exeext) build/genchecksum$(build_exeext)\n@@ -65,7 +65,7 @@ cc1objplus-checksum.c : cc1objplus-dummy$(exeext) build/genchecksum$(build_exeex\n cc1objplus-checksum.o : cc1objplus-checksum.c $(CONFIG_H) $(SYSTEM_H)\n \n cc1objplus$(exeext): $(OBJCXX_OBJS) cc1objplus-checksum.o $(BACKEND) $(LIBDEPS)\n-\t$(LINKER) $(ALL_LINKERFLAGS) $(LDFLAGS) -o $@ \\\n+\t+$(LINKER) $(ALL_LINKERFLAGS) $(LDFLAGS) -o $@ \\\n \t\t$(OBJCXX_OBJS) cc1objplus-checksum.o $(BACKEND) $(LIBS) $(BACKENDLIBS)\n \n # Objective C++ language specific files."}]}