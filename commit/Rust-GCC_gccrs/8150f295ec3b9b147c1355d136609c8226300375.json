{"sha": "8150f295ec3b9b147c1355d136609c8226300375", "node_id": "C_kwDOANBUbNoAKDgxNTBmMjk1ZWMzYjliMTQ3YzEzNTVkMTM2NjA5YzgyMjYzMDAzNzU", "commit": {"author": {"name": "Alexandre Oliva", "email": "oliva@adacore.com", "date": "2022-02-23T15:57:15Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2022-05-13T08:04:44Z"}, "message": "[Ada] Extend hardcfr testing (documentation)\n\nHaving realized that noreturn calls of __builtin_return are special,\nand other noreturn calls don't get edges to the exit block, I've\nrealized the consequences of the logic to insert checking before\nnoreturn and tail calls were not quite what I'd expected before.\n\nSpecifically, noreturn calls other than __builtin_return don't get any\nchecking whatsoever.  Moreover, optional tail calls are only detected\nlong after hardcfr; the logic should work for must-tail calls, but\nthere doesn't seem to be a way to test it.\n\nDocumentation has been simplified so as to remove mention of these\npossibilities, that can't really be relied on.\n\ngcc/ada/\n\n\t* doc/gnat_rm/security_hardening_features.rst (Control Flow\n\tRedundancy): Drop mentions of noreturn and tail calls.\n\t* gnat_rm.texi: Regenerate.", "tree": {"sha": "2fe060f1c7fb80e2ad90fe10dc948579fe0ab8b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2fe060f1c7fb80e2ad90fe10dc948579fe0ab8b7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8150f295ec3b9b147c1355d136609c8226300375", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8150f295ec3b9b147c1355d136609c8226300375", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8150f295ec3b9b147c1355d136609c8226300375", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8150f295ec3b9b147c1355d136609c8226300375/comments", "author": null, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a2cff9e9af15b179ff7a2c7e147e88ec8ce52936", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2cff9e9af15b179ff7a2c7e147e88ec8ce52936", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a2cff9e9af15b179ff7a2c7e147e88ec8ce52936"}], "stats": {"total": 46, "additions": 14, "deletions": 32}, "files": [{"sha": "8c4c1f64a4ea2ad0f275b2c8c8bcc0566af865c4", "filename": "gcc/ada/doc/gnat_rm/security_hardening_features.rst", "status": "modified", "additions": 7, "deletions": 16, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8150f295ec3b9b147c1355d136609c8226300375/gcc%2Fada%2Fdoc%2Fgnat_rm%2Fsecurity_hardening_features.rst", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8150f295ec3b9b147c1355d136609c8226300375/gcc%2Fada%2Fdoc%2Fgnat_rm%2Fsecurity_hardening_features.rst", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdoc%2Fgnat_rm%2Fsecurity_hardening_features.rst?ref=8150f295ec3b9b147c1355d136609c8226300375", "patch": "@@ -232,22 +232,13 @@ instrumentation.\n \n For each block that is marked as visited, the mechanism checks that at\n least one of its predecessors, and at least one of its successors, are\n-also marked as visited.  Verification is normally performed just\n-before return, but when a nonreturning call or a tail-call opportunity\n-is detected, verification is moved before that (presumed) final call.\n-\n-If an exception from a nonreturning call is handled by its caller,\n-verification at the caller may run again if another verification point\n-is reached.  The additional verifications are desirable and benign.\n-\n-Conversely, since no verification is inserted before calls that are\n-expected to return, if they never do, the caller's own\n-verification-and-return points are never reached.\n-\n-Subprogram executions that complete by raising or propagating an\n-exception also bypass verification-and-return points.  A subprogram\n-that can only complete by raising or propagating an exception may have\n-instrumentation disabled altogether.\n+also marked as visited.\n+\n+Verification is performed just before returning.  Subprogram\n+executions that complete by raising or propagating an exception bypass\n+verification-and-return points.  A subprogram that can only complete\n+by raising or propagating an exception may have instrumentation\n+disabled altogether.\n \n The instrumentation for hardening with control flow redundancy can be\n observed in dump files generated by the command-line option"}, {"sha": "c5a87793494b8d87e7f20ce520a161901e2e16cd", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 7, "deletions": 16, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8150f295ec3b9b147c1355d136609c8226300375/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8150f295ec3b9b147c1355d136609c8226300375/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=8150f295ec3b9b147c1355d136609c8226300375", "patch": "@@ -29084,22 +29084,13 @@ instrumentation.\n \n For each block that is marked as visited, the mechanism checks that at\n least one of its predecessors, and at least one of its successors, are\n-also marked as visited.  Verification is normally performed just\n-before return, but when a nonreturning call or a tail-call opportunity\n-is detected, verification is moved before that (presumed) final call.\n-\n-If an exception from a nonreturning call is handled by its caller,\n-verification at the caller may run again if another verification point\n-is reached.  The additional verifications are desirable and benign.\n-\n-Conversely, since no verification is inserted before calls that are\n-expected to return, if they never do, the caller\u2019s own\n-verification-and-return points are never reached.\n-\n-Subprogram executions that complete by raising or propagating an\n-exception also bypass verification-and-return points.  A subprogram\n-that can only complete by raising or propagating an exception may have\n-instrumentation disabled altogether.\n+also marked as visited.\n+\n+Verification is performed just before returning.  Subprogram\n+executions that complete by raising or propagating an exception bypass\n+verification-and-return points.  A subprogram that can only complete\n+by raising or propagating an exception may have instrumentation\n+disabled altogether.\n \n The instrumentation for hardening with control flow redundancy can be\n observed in dump files generated by the command-line option"}]}