{"sha": "8997ef1850cee602e321210e23c85af6b85bccc0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODk5N2VmMTg1MGNlZTYwMmUzMjEyMTBlMjNjODVhZjZiODViY2NjMA==", "commit": {"author": {"name": "Jiong Wang", "email": "jiong.wang@arm.com", "date": "2015-07-01T08:51:49Z"}, "committer": {"name": "Jiong Wang", "email": "jiwang@gcc.gnu.org", "date": "2015-07-01T08:51:49Z"}, "message": "[AArch64] Restrict pic-small.c by new test directive\n\n2015-07-01  Jiong Wang  <jiong.wang@arm.com>\n\n      gcc/\n\t* doc/sourcebuild.texi (AArch64-specific attributes): New subsection.\n\tDocument \"aarch64_small_fpic\".\n\n      gcc/testsuite/\n\t* lib/target-supports.exp (check_effective_target_aarch64_small_fpic): New function.\n\t* gcc.target/aarch64/pic-small.c: Restrict this test under\n\tcheck_effective_target_aarch64_small_fpic.\n\nFrom-SVN: r225232", "tree": {"sha": "15e878c59cfd624060a284bd135d86a89437280b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/15e878c59cfd624060a284bd135d86a89437280b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8997ef1850cee602e321210e23c85af6b85bccc0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8997ef1850cee602e321210e23c85af6b85bccc0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8997ef1850cee602e321210e23c85af6b85bccc0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8997ef1850cee602e321210e23c85af6b85bccc0/comments", "author": null, "committer": null, "parents": [{"sha": "34ecdb0f20498d3cdde1a5be9614c2820cc4688f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/34ecdb0f20498d3cdde1a5be9614c2820cc4688f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/34ecdb0f20498d3cdde1a5be9614c2820cc4688f"}], "stats": {"total": 41, "additions": 41, "deletions": 0}, "files": [{"sha": "6df579b0f96f14537e826f7dd69c6f45f6b3cb74", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8997ef1850cee602e321210e23c85af6b85bccc0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8997ef1850cee602e321210e23c85af6b85bccc0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8997ef1850cee602e321210e23c85af6b85bccc0", "patch": "@@ -1,3 +1,8 @@\n+2015-07-01  Jiong Wang  <jiong.wang@arm.com>\n+\n+\t* doc/sourcebuild.texi (AArch64-specific attributes): New subsection.\n+\tDocument \"aarch64_small_fpic\".\n+\n 2015-07-01  Jiong Wang  <jiong.wang@arm.com>\n \n \t* configure.ac: Add check for aarch64 assembler -fpic relocation"}, {"sha": "52a4aa48be14eb12db5963f242649d609a3d5d3f", "filename": "gcc/doc/sourcebuild.texi", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8997ef1850cee602e321210e23c85af6b85bccc0/gcc%2Fdoc%2Fsourcebuild.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8997ef1850cee602e321210e23c85af6b85bccc0/gcc%2Fdoc%2Fsourcebuild.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fsourcebuild.texi?ref=8997ef1850cee602e321210e23c85af6b85bccc0", "patch": "@@ -1580,6 +1580,15 @@ ARM target prefers @code{LDRD} and @code{STRD} instructions over\n \n @end table\n \n+@subsubsection AArch64-specific attributes\n+\n+@table @code\n+@item aarch64_small_fpic\n+Binutils installed on test system supports relocation types required by -fpic\n+for AArch64 small memory model.\n+\n+@end table\n+\n @subsubsection MIPS-specific attributes\n \n @table @code"}, {"sha": "8f768136eabd71d255fe02d1d856db803a646867", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8997ef1850cee602e321210e23c85af6b85bccc0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8997ef1850cee602e321210e23c85af6b85bccc0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8997ef1850cee602e321210e23c85af6b85bccc0", "patch": "@@ -1,3 +1,9 @@\n+2015-07-01  Jiong Wang  <jiong.wang@arm.com>\n+\n+\t* lib/target-supports.exp (check_effective_target_aarch64_small_fpic): New function.\n+\t* gcc.target/aarch64/pic-small.c: Restrict this test under\n+\tcheck_effective_target_aarch64_small_fpic.\n+\n 2015-07-01  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gfortran.dg/gomp/pr66633.f90: New test."}, {"sha": "282e4d073c0e6fd3d10d397e186f81c4a2c55310", "filename": "gcc/testsuite/gcc.target/aarch64/pic-small.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8997ef1850cee602e321210e23c85af6b85bccc0/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fpic-small.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8997ef1850cee602e321210e23c85af6b85bccc0/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fpic-small.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fpic-small.c?ref=8997ef1850cee602e321210e23c85af6b85bccc0", "patch": "@@ -1,4 +1,5 @@\n /* { dg-do compile } */\n+/* { dg-require-effective-target aarch64_small_fpic } */\n /* { dg-options \"-O2 -fpic -fno-inline --save-temps\" } */\n \n void abort ();"}, {"sha": "fc05e84cbed752a18d06052ddf2a1db3fb66e7ab", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8997ef1850cee602e321210e23c85af6b85bccc0/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8997ef1850cee602e321210e23c85af6b85bccc0/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=8997ef1850cee602e321210e23c85af6b85bccc0", "patch": "@@ -937,6 +937,26 @@ proc check_effective_target_fpic { } {\n     return 0\n }\n \n+# On AArch64, if -fpic is not supported, then we will fall back to -fPIC\n+# silently.  So, we can't rely on above \"check_effective_target_fpic\" as it\n+# assumes compiler will give warning if -fpic not supported.  Here we check\n+# whether binutils supports those new -fpic relocation modifiers, and assume\n+# -fpic is supported if there is binutils support.  GCC configuration will\n+# enable -fpic for AArch64 in this case.\n+#\n+# \"check_effective_target_aarch64_small_fpic\" is dedicated for checking small\n+# memory model -fpic relocation types.\n+\n+proc check_effective_target_aarch64_small_fpic { } {\n+    if { [istarget aarch64*-*-*] } {\n+\treturn [check_no_compiler_messages aarch64_small_fpic object {\n+\t    void foo (void) { asm (\"ldr\tx0, [x2, #:gotpage_lo15:globalsym]\"); }\n+\t}]\n+    } else {\n+\treturn 0\n+    }\n+}\n+\n # Return 1 if -shared is supported, as in no warnings or errors\n # emitted, 0 otherwise.\n "}]}