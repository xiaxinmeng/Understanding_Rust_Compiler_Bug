{"sha": "5aad4daaba1a304a06dacb53793f71138b6bdcd7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWFhZDRkYWFiYTFhMzA0YTA2ZGFjYjUzNzkzZjcxMTM4YjZiZGNkNw==", "commit": {"author": {"name": "Stan Shebs", "email": "shebs@apple.com", "date": "2002-11-11T05:15:36Z"}, "committer": {"name": "Stan Shebs", "email": "shebs@gcc.gnu.org", "date": "2002-11-11T05:15:36Z"}, "message": "Retire common MPW configury bits.\n\n        * mpw-mh-mpw: Remove.\n        * mpw: Remove directory along with all of its files.\n\nFrom-SVN: r59004", "tree": {"sha": "853c552b810905e552100834d8482309f7f03f9a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/853c552b810905e552100834d8482309f7f03f9a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5aad4daaba1a304a06dacb53793f71138b6bdcd7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5aad4daaba1a304a06dacb53793f71138b6bdcd7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5aad4daaba1a304a06dacb53793f71138b6bdcd7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5aad4daaba1a304a06dacb53793f71138b6bdcd7/comments", "author": null, "committer": null, "parents": [{"sha": "2da4124d3d36aaaae81378d635968cd55730e3e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2da4124d3d36aaaae81378d635968cd55730e3e4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2da4124d3d36aaaae81378d635968cd55730e3e4"}], "stats": {"total": 577, "additions": 6, "deletions": 571}, "files": [{"sha": "3f985d32a070871504b072f7ca8c044c50c17389", "filename": "config/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5aad4daaba1a304a06dacb53793f71138b6bdcd7/config%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5aad4daaba1a304a06dacb53793f71138b6bdcd7/config%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2FChangeLog?ref=5aad4daaba1a304a06dacb53793f71138b6bdcd7", "patch": "@@ -1,3 +1,9 @@\n+2002-11-10  Stan Shebs  <shebs@apple.com>\n+\n+\tRetire common MPW configury bits.\n+\t* mpw-mh-mpw: Remove.\n+\t* mpw: Remove directory along with all of its files.\n+\n 2002-05-16  Rainer Orth  <ro@TechFak.Uni-Bielefeld.DE>\n \n \t* acinclude.m4: Allow for PWDCMD to override hardcoded pwd."}, {"sha": "543ef4fb2a125bae70170f09aef9732e8fcfb6ba", "filename": "config/mpw-mh-mpw", "status": "removed", "additions": 0, "deletions": 157, "changes": 157, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2da4124d3d36aaaae81378d635968cd55730e3e4/config%2Fmpw-mh-mpw", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2da4124d3d36aaaae81378d635968cd55730e3e4/config%2Fmpw-mh-mpw", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2Fmpw-mh-mpw?ref=2da4124d3d36aaaae81378d635968cd55730e3e4", "patch": "@@ -1,157 +0,0 @@\n-# This is an MPW makefile fragment.\n-\n-# Since there are a multiplicity of Mac compilers and two different\n-# processors, this file is primarily a library of options for each\n-# compiler.  Somebody else (such as a configure or build script) will\n-# make the actual choice.\n-\n-# Compiler to use for compiling.\n-\n-CC_MPW_C = C -d MPW_C -d ALMOST_STDC -d ANSI_PROTOTYPES -d MPW -mc68020 -model far -b -w\n-\n-CC_SC = SC -d ALMOST_STDC -d ANSI_PROTOTYPES -d MPW -mc68020 -model far -b -i '' -i :\n-\n-CC_MWC68K = MWC68K -d MPW -enum int -mpw_chars -sym on -w off -mc68020 -model far\n-\n-CC_PPCC = PPCC -d powerc=1 -d pascal= -d ALMOST_STDC -d ANSI_PROTOTYPES -d MPW -w\n-\n-CC_MRC = MrC -d powerc=1 -d pascal= -d ALMOST_STDC -d ANSI_PROTOTYPES -d MPW -i '' -i : -jm\n-\n-CC_SMrC = SMrC -d MPW\n-\n-# \"-mpw_chars\" is necessary because GNU sources often mix signed and\n-# unsigned casually.\n-# \"-w off\" is not a great idea, but CW7 is complaining about enum\n-# assignments.\n-# \"-opt global,peep,l4,speed\" is sometimes good, and sometimes bad.\n-# We must use {CIncludes} so that MPW tools will work; {MWCIncludes}\n-# defines stdout, islower, etc, in ways that are incompatible with MPW's\n-# runtime.  However, this cannot be done via  -i \"{CIncludes}\", since\n-# that does not affect how <>-type includes happen; instead, the variable\n-# MWCIncludes must be set to point at {CIncludes}.\n-\n-CC_MWCPPC = MWCPPC -d MPW -enum int -mpw_chars -sym on -w off\n-\n-# Note that GCC does *not* wire in a definition of \"pascal\", so that\n-# it can be handled in another way if desired.\n-\n-CC_68K_GCC = gC -Dpascal= -DANSI_PROTOTYPES -DMPW\n-\n-CC_PPC_GCC = gC -Dpowerc=1 -Dpascal= -DANSI_PROTOTYPES -DMPW\n-\n-# Nothing for the default CFLAGS.\n-\n-CFLAGS = \n-\n-# Tool to use for making libraries/archives.\n-\n-AR_LIB = Lib\n-\n-AR_MWLINK68K = MWLink68K -xm library\n-\n-AR_PPCLINK = PPCLink -xm library\n-\n-AR_MWLINKPPC = MWLinkPPC -xm library\n-\n-AR_AR = ar\n-\n-AR_FLAGS = -o\n-\n-RANLIB_NULL = null-command\n-\n-RANLIB_RANLIB = ranlib\n-\n-# Compiler and/or linker to use for linking.\n-\n-CC_LD_LINK = Link -w -d -model far {CC_LD_TOOL_FLAGS}\n-\n-CC_LD_MWLINK68K = MWLink68K -w {CC_LD_TOOL_FLAGS} -sym on -model far\n-\n-CC_LD_PPCLINK = PPCLink -main __start -outputformat xcoff\n-\n-CC_LD_MWLINKPPC = MWLinkPPC -w {CC_LD_TOOL_FLAGS} -sym on\n-\n-CC_LD_GLD = gC\n-\n-# Extension for linker output.\n-\n-PROG_EXT_68K =\n-\n-PROG_EXT_XCOFF = .xcoff\n-\n-# Nothing for the default LDFLAGS.\n-\n-LDFLAGS = -w\n-\n-CC_LD_TOOL_FLAGS = -c 'MPS ' -t MPST\n-\n-# Libraries to link against.\n-\n-# It would appear that the math libraries are not\n-# needed except to provide a definition for scalb,\n-# which is called from ldexp, which is referenced\n-# in the m68k opcodes library.\n-\n-EXTRALIBS_C = \\Option-d\n-\t\"{CLibraries}\"StdClib.o \\Option-d\n-\t\"{CLibraries}\"Math.o \\Option-d\n-\t\"{CLibraries}\"CSANELib.o \\Option-d\n-\t\"{Libraries}\"Stubs.o \\Option-d\n-\t\"{Libraries}\"Runtime.o \\Option-d\n-\t\"{Libraries}\"Interface.o \\Option-d\n-\t\"{Libraries}\"ToolLibs.o\n-\n-EXTRALIBS_MWC68K = \\Option-d\n-\t\"{CLibraries}\"StdClib.o \\Option-d\n-\t\"{CLibraries}\"Math.o \\Option-d\n-\t\"{CLibraries}\"CSANELib.o \\Option-d\n-\t\"{Libraries}\"Stubs.o \\Option-d\n-\t\"{Libraries}\"Runtime.o \\Option-d\n-\t\"{Libraries}\"Interface.o \\Option-d\n-\t\"{Libraries}\"ToolLibs.o \\Option-d\n-\t\"{MW68KLibraries}MPW ANSI (4i) C.68K.Lib\"\n-\n-EXTRALIBS_PPC_XCOFF = \\Option-d\n-\t\"{PPCLibraries}\"StdCRuntime.o \\Option-d\n-\t\"{PPCLibraries}\"InterfaceLib.xcoff \\Option-d\n-\t\"{PPCLibraries}\"MathLib.xcoff \\Option-d\n-\t\"{PPCLibraries}\"StdCLib.xcoff \\Option-d\n-\t\"{PPCLibraries}\"PPCToolLibs.o \\Option-d\n-\t\"{PPCLibraries}\"PPCCRuntime.o \\Option-d\n-\t\"{GCCPPCLibraries}\"libgcc.xcoff\n-\n-EXTRALIBS_PPC = \\Option-d\n-\t\"{PPCLibraries}\"StdCRuntime.o \\Option-d\n-\t\"{SharedLibraries}\"InterfaceLib \\Option-d\n-\t\"{SharedLibraries}\"MathLib \\Option-d\n-\t\"{SharedLibraries}\"StdCLib \\Option-d\n-\t\"{PPCLibraries}\"PPCToolLibs.o \\Option-d\n-\t\"{PPCLibraries}\"PPCCRuntime.o \\Option-d\n-\t\"{GCCPPCLibraries}\"libgcc.xcoff\n-\n-EXTRALIBS_MWCPPC = \\Option-d\n-\t\"{MWPPCLibraries}\"MWStdCRuntime.Lib \\Option-d\n-\t\"{MWPPCLibraries}\"InterfaceLib \\Option-d\n-\t\"{MWPPCLibraries}\"StdCLib \\Option-d\n-\t\"{MWPPCLibraries}\"MathLib \\Option-d\n-\t\"{MWPPCLibraries}\"PPCToolLibs.o\n-\n-# Tool to make PEF with, if needed.\n-\n-MAKEPEF_NULL = null-command\n-\n-MAKEPEF_PPC = MakePEF\n-\n-MAKEPEF_FLAGS = \\Option-d\n-\t-l InterfaceLib.xcoff=InterfaceLib \\Option-d\n-\t-l MathLib.xcoff=MathLib \\Option-d\n-\t-l StdCLib.xcoff=StdCLib\n-\n-MAKEPEF_TOOL_FLAGS = -ft MPST -fc 'MPS '\n-\n-# Resource compiler to use.\n-\n-REZ_68K = Rez\n-\n-REZ_PPC = Rez -d WANT_CFRG\n-"}, {"sha": "3cdefbf7a7509dd9fba8e3318aeabf16cb4b163a", "filename": "config/mpw/ChangeLog", "status": "removed", "additions": 0, "deletions": 53, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2da4124d3d36aaaae81378d635968cd55730e3e4/config%2Fmpw%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2da4124d3d36aaaae81378d635968cd55730e3e4/config%2Fmpw%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2Fmpw%2FChangeLog?ref=2da4124d3d36aaaae81378d635968cd55730e3e4", "patch": "@@ -1,53 +0,0 @@\n-Tue Nov 26 12:34:12 1996  Stan Shebs  <shebs@andros.cygnus.com>\n-\n-\t* g-mpw-make.sed: Fix some comments.\n-\n-Mon Sep 16 14:42:52 1996  Stan Shebs  <shebs@andros.cygnus.com>\n-\n-\t* g-mpw-make.sed (HLDENV): Edit out all references.\n-\n-Thu Aug 15 19:49:23 1996  Stan Shebs  <shebs@andros.cygnus.com>\n-\n-\t* true: New script, identical to mpw-true.\n-\t* g-mpw-make.sed: Add @DASH_C_FLAG@ and @SEGMENT_FLAG()@\n-\tto the editors for compile commands.\n-\n-Thu Aug  1 15:01:42 1996  Stan Shebs  <shebs@andros.cygnus.com>\n-\n-\t* mpw-true, mpw-touch, null-command: New scripts.\n-\t* README: Describe usage in more detail.\n-\n-Tue Dec 12 14:51:51 1995  Stan Shebs  <shebs@andros.cygnus.com>\n-\n-\t* g-mpw-make.sed: Don't edit out \"version=\" occurrences.\n-\n-Fri Dec  1 11:46:18 1995  Stan Shebs  <shebs@andros.cygnus.com>\n-\n-\t* g-mpw-make.sed (bindir, libdir): Edit the positions of\n-\tpathname separators to work with other pathnames better.\n-\n-Tue Nov  7 15:08:07 1995  Stan Shebs  <shebs@andros.cygnus.com>\n-\n-\t* g-mpw-make.sed: Add comment about Duplicate vs Catenate,\n-\tadd additional pattern for editing link-compile commands.\n-\n-Tue Oct 24 14:28:51 1995  Stan Shebs  <shebs@andros.cygnus.com>\n-\n-\t* g-mpw-make.sed: Add handling for *.tab.[hc] files.\n-\t(CHILL_FOR_TARGET, CHILL_LIB): Edit out tricky definitions\n-\tof these.\n-\n-Thu Sep 28 21:05:10 1995  Stan Shebs  <shebs@andros.cygnus.com>\n-\n-\t* g-mpw-make.sed: New file, generic sed commands to translate\n-\tUnix makefiles into MPW makefile syntax.\n-\n-Fri Mar 17 11:51:20 1995  Stan Shebs  <shebs@andros.cygnus.com>\n-\n-\t* README: Clarify instructions.\n-\t* fi: Remove.\n-\n-Wed Dec 21 15:45:53 1994  Stan Shebs  <shebs@andros.cygnus.com>\n-\n-\t* MoveIfChange, README, fi, forward-include, open-brace,\n-        tr-7to8-src: New files."}, {"sha": "0dbc12582f5fac99038b406557ca7a761d007109", "filename": "config/mpw/MoveIfChange", "status": "removed", "additions": 0, "deletions": 19, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2da4124d3d36aaaae81378d635968cd55730e3e4/config%2Fmpw%2FMoveIfChange", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2da4124d3d36aaaae81378d635968cd55730e3e4/config%2Fmpw%2FMoveIfChange", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2Fmpw%2FMoveIfChange?ref=2da4124d3d36aaaae81378d635968cd55730e3e4", "patch": "@@ -1,19 +0,0 @@\n-# Rename a file only if it is different from a previously existing\n-# file of the same name.  This is useful for keeping make from doing\n-# too much work if the contents of a file haven't changed.\n-\n-# This is an MPW translation of the standard GNU sh script move-if-change.\n-\n-Set exit 0\n-\n-If \"`exists -f \"{2}\"`\"\n-  Compare \"{1}\" \"{2}\" >dev:null\n-  If {status} != 0\n-    Rename -y \"{1}\" \"{2}\"\n-  Else\n-    Echo \"{2}\" is unchanged\n-    Delete -i -y \"{1}\"\n-  End\n-Else\n-  Rename -y \"{1}\" \"{2}\"\n-End"}, {"sha": "554700adc810bfa7c26b56a83aebd91704a5cd73", "filename": "config/mpw/README", "status": "removed", "additions": 0, "deletions": 23, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2da4124d3d36aaaae81378d635968cd55730e3e4/config%2Fmpw%2FREADME", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2da4124d3d36aaaae81378d635968cd55730e3e4/config%2Fmpw%2FREADME", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2Fmpw%2FREADME?ref=2da4124d3d36aaaae81378d635968cd55730e3e4", "patch": "@@ -1,23 +0,0 @@\n-This directory contains MPW scripts and related files that are needed to\n-build Cygnus GNU tools for MPW.  The scripts should be somewhere on the\n-command path; our usual practice has been to have a separate directory\n-for the scripts, and put the tools (byacc, flex, and sed at least) there\n-also; then it's easier to drag the support bits around as a group, or to\n-upgrade MPW versions.  The complete package of scripts and tool binaries\n-is usually available as pub/mac/buildtools.cpt.hqx on ftp.cygnus.com.\n-\n-\"tr-7to8-src\" is actually the source to an MPW script that transforms\n-sequences like \"\\Option-d\" into the actual 8-bit chars that MPW needs.\n-It's only the source because it can't itself include any 8-bit chars.\n-It *can* be processed into a genuine \"tr-7to8\" by using itself:\n-\n-\ttr-7to8 tr-7to8-src | sed -e 's/Src//' >new-tr-7to8\n-\n-Use this to verify:\n-\n-\tcompare tr-7to8 new-tr-7to8\n-\n-If you don't have a working tr-7to8, then you will have to manually\n-replace all occurrences of \"\\Option-d\" with real Option-d (which looks\n-like a delta), then do similarly with all the other \"\\Option-...\"\n-strings, and then change \"\\SrcOption-d\" into the string \"\\Option-d\"."}, {"sha": "ddd6bd711058164d89861f2fb4dc64d5a3d856ef", "filename": "config/mpw/forward-include", "status": "removed", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2da4124d3d36aaaae81378d635968cd55730e3e4/config%2Fmpw%2Fforward-include", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2da4124d3d36aaaae81378d635968cd55730e3e4/config%2Fmpw%2Fforward-include", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2Fmpw%2Fforward-include?ref=2da4124d3d36aaaae81378d635968cd55730e3e4", "patch": "@@ -1,3 +0,0 @@\n-Echo '#include' \ufffd\"\"{1}\"\ufffd\" >\"{2}\".tem\n-MoveIfChange \"{2}\".tem \"{2}\"\n-"}, {"sha": "e7d3c770736223c6237cc6356912932ecc19ce33", "filename": "config/mpw/g-mpw-make.sed", "status": "removed", "additions": 0, "deletions": 293, "changes": 293, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2da4124d3d36aaaae81378d635968cd55730e3e4/config%2Fmpw%2Fg-mpw-make.sed", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2da4124d3d36aaaae81378d635968cd55730e3e4/config%2Fmpw%2Fg-mpw-make.sed", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2Fmpw%2Fg-mpw-make.sed?ref=2da4124d3d36aaaae81378d635968cd55730e3e4", "patch": "@@ -1,293 +0,0 @@\n-# Sed commands to translate Unix makefiles into MPW makefiles.\n-# These are nominally generic, but work best on the makefiles used\n-# for GNU programs.\n-\n-# Whack out any commented-out lines that are probably commands;\n-# they can only cause trouble later on.\n-/^#\t/d\n-\n-# Change dependency char.\n-/:$/s/:/ \\\\Option-f/g\n-/^[^ \t:#][^:]*:/s/\\([ \t]*\\):\\([ \t]*\\)/ \\\\Option-f /g\n-\n-# Change syntax of Makefile vars.\n-/\\$/s/\\${\\([a-zA-Z0-9_-]*\\)}/{\\1}/g\n-/\\$/s/\\$(\\([a-zA-Z0-9_-]*\\))/{\\1}/g\n-/ $@/s/ $@/ {Targ}/\n-\n-# Double-$ are literals to Unix but not to MPW make.\n-/\\$\\$/s/\\$\\$/$/g\n-\n-# Change pathname syntax.\n-/\\//s,\\.\\./\\/\\.\\./,:::,g\n-/\\//s,\\.\\./,::,g\n-/\\.\\//s,\\./,:,g\n-/\\//s,/,:,g\n-# Undo excess changes.\n-/and/s,and:or$,and/or,\n-/and/s,and:or ,and/or ,\n-/want/s,want:need,want/need,\n-# Fixing up sed commands.\n-/-e/s_\":\\([^:]*\\):d\"_\"/\\1/d\"_g\n-/-e/s_\":\\([^:]*\\):,:\\([^:]*\\):d\"_\"/\\1/,/\\2/d\"_g\n-\n-/=/s/ = \\.$/ = :/\n-\n-# Make these go away so that later edits not confused.\n-/HLDENV/s/{HLDENV}//\n-\n-# Comment out any explicit srcdir setting.\n-/srcdir/s/^srcdir/# srcdir/\n-\n-/BASEDIR/s/^BASEDIR =.*$/BASEDIR = \"{srcroot}\"/\n-/{BASEDIR}:/s/{BASEDIR}:/{BASEDIR}/g\n-/{srcdir}:/s/{srcdir}:/\"{srcdir}\"/g\n-/\"{srcdir}\":/s/\"{srcdir}\":/\"{srcdir}\"/g\n-\n-# Tweak some conventions that are backwards for the Mac.\n-/bindir/s/{exec_prefix}:bin/{exec_prefix}bin:/\n-/libdir/s/{exec_prefix}:lib/{exec_prefix}lib:/\n-\n-# Comment out settings of anything set by mpw host config.\n-/CC/s/^CC *=/#CC =/\n-/CFLAGS/s/^CFLAGS *=/#CFLAGS =/\n-/AR/s/^AR *=/#AR =/\n-/AR_FLAGS/s/^AR_FLAGS *=/#AR_FLAGS =/\n-/RANLIB/s/^RANLIB *=/#RANLIB =/\n-/CC_LD/s/^CC_LD *=/#CC_LD =/\n-/LDFLAGS/s/^LDFLAGS *=/#LDFLAGS =/\n-\n-# Change -I usages.\n-/-I/s/-I\\./-i :/g\n-/-I/s/-I::bfd/-i ::bfd:/g\n-/-I/s/-I::include/-i ::include:/g\n-/-I/s/-I/-i /g\n-\n-# Change -D usage.\n-/-D/s/\\([ =]\\)-D\\([^ ]*\\)/\\1-d \\2/g\n-\n-# Change continuation char.\n-/\\\\$/s/\\\\$/\\\\Option-d/\n-\n-# Change wildcard char.\n-/\\*/s/\\*/\\\\Option-x/g\n-\n-# Change path of various types of source files.  This rule does not allow\n-# for file names with multiple dots in the name.\n-/\\.[chly]/s/\\([ \t><=]\\)\\([-a-zA-Z0-9_${}:\"]*\\)\\.\\([chly]\\)/\\1\"{s}\"\\2.\\3/g\n-/\\.[chly]/s/^\\([-a-zA-Z0-9_${}:\"]*\\)\\.\\([chly]\\)/\"{s}\"\\1.\\2/\n-# Allow files named *.tab.[ch] as a special case.\n-/\\.tab\\.[ch]/s/\\([ \t><=]\\)\\([-a-zA-Z0-9_${}:\"]*\\.tab\\)\\.\\([ch]\\)/\\1\"{s}\"\\2.\\3/g\n-/\\.tab\\.[ch]/s/^\\([-a-zA-Z0-9_${}:\"]*\\.tab\\)\\.\\([ch]\\)/\"{s}\"\\1.\\2/\n-# Fix some overenthusiasms.\n-/{s}/s/\"{s}\"\"{srcdir}\"/\"{srcdir}\"/g\n-/{s}/s/\"{s}\"{\\([a-zA-Z0-9_]*\\)dir}/\"{\\1dir}\"/g\n-/{s}/s/\"{s}\"{\\([a-zA-Z0-9_]*\\)DIR}/\"{\\1DIR}\"/g\n-/{s}/s/\"{s}\"\"{\\([a-zA-Z0-9_]*\\)dir}\"/\"{\\1dir}\"/g\n-/{s}/s/\"{s}\"\"{\\([a-zA-Z0-9_]*\\)DIR}\"/\"{\\1DIR}\"/g\n-/{s}/s/\"{s}\":/:/g\n-/{s}/s/^\"{s}\"//g\n-/{s}/s/\"{s}\"\"{s}\"/\"{s}\"/g\n-/{s}/s/\"{s}\"\"{srcdir}\"/\"{s}\"/g\n-/{s}/s/\"{srcdir}\"\"{s}\"/\"{s}\"/g\n-\n-# The .def files are also typically source files.\n-/\\.def/s/\\([ \t><]\\)\\([-a-zA-Z0-9_${}:\"]*\\)\\.def/\\1\"{s}\"\\2.def/g\n-/\\.def/s/^\\([-a-zA-Z0-9_${}:\"]*\\)\\.def/\"{s}\"\\1.def/g\n-\n-# Change extension and path of objects.\n-/\\.o/s/\\([ \t=]\\)\\([-a-zA-Z0-9_${}:\"]*\\)\\.o/\\1\"{o}\"\\2.c.o/g\n-/\\.o/s/^\\([-a-zA-Z0-9_${}:\"]*\\)\\.o/\"{o}\"\\1.c.o/\n-# Allow *.tab.o files as a special case of a 2-dot-name file.\n-/\\.o/s/\\([ \t=]\\)\\([-a-zA-Z0-9_${}:\"]*\\)\\.tab\\.o/\\1\"{o}\"\\2.tab.c.o/g\n-/\\.o/s/^\\([-a-zA-Z0-9_${}:\"]*\\)\\.tab\\.o/\"{o}\"\\1.tab.c.o/\n-# Clean up.\n-/\"{o}\"/s/\"{o}\"\"{o}\"/\"{o}\"/g\n-/\"{o}\"/s/^\"{o}\"\\([a-zA-Z0-9_]*\\)=/\\1=/\n-\n-# Change extension of libs.\n-/\\.a/s/lib\\([a-z]*\\)\\.a/lib\\1.o/g\n-\n-# Remove non-fail option.\n-/-/s/^\\([ \t]*\\)-/\\1/\n-# Fix overeagernesses - assumes no one-letter commands.\n-/^[ \t]*[a-z] /s/^\\([ \t]*\\)\\([a-z]\\) /\\1-\\2 /\n-\n-# Remove non-echo option. (watch out for autoconf things)\n-/@/s/^\\([ \t]*\\)@/\\1/\n-\n-# Change cp to Duplicate.\n-# Catenate is perhaps more accurate, but the pattern would have to\n-# identify the output file and add a '>' redirection into it.\n-/cp/s/^\\([ \t]*\\)cp /\\1Duplicate -d -y /\n-# Change mv to Rename.\n-/mv/s/^\\([ \t]*\\)mv /\\1Rename -y /\n-/Rename/s/^\\([ \t]*\\)Rename -y -f/\\1Rename -y/\n-# Change rm to Delete.\n-/rm -rf/s/^\\([ \t]*\\)rm -rf /\\1Delete -i -y /\n-/rm -f/s/^\\([ \t]*\\)rm -f /\\1Delete -i -y /\n-/rm/s/^\\([ \t]*\\)rm /\\1Delete -i -y /\n-# Note that we don't mess with ln - directory-specific scripts\n-# must decide what to do with symlinks.\n-# Change cat to Catenate.\n-/cat/s/^\\([ \t]*\\)cat /\\1Catenate /\n-# Change touch to mpw-touch.\n-/touch/s/^\\([ \t]*\\)touch /\\1mpw-touch /\n-# Change mkdir to NewFolder.\n-/mkdir/s/^\\([ \t]*\\)mkdir /\\1NewFolder /\n-# Change var setting to Set.\n-/=/s/^\\([ \t]*\\)\\([-a-zA-Z0-9_]*\\)=\\([^;]*\\); \\\\Option-d/\\1Set \\2 \\3/\n-\n-# Change tests.\n-/if /s/if \\[ *-f \\([^ ]*\\) ] *; *\\\\Option-d/If \"`Exists \"\\1\"`\" != \"\"/\n-/if /s/if \\[ *-f \\([^ ]*\\) ] *; *then *\\\\Option-d/If \"`Exists \"\\1\"`\" != \"\"/\n-/if /s/if \\[ ! *-f \\([^ ]*\\) ] *; *\\\\Option-d/If \"`Exists \"\\1\"`\" == \"\"/\n-/if /s/if \\[ ! *-f \\([^ ]*\\) ] *; *then \\\\Option-d/If \"`Exists \"\\1\"`\" == \"\"/\n-\n-/if /s/if \\[ *-d \\([^ ]*\\) ] *; *\\\\Option-d/If \"`Exists \"\\1\"`\" != \"\"/\n-/if /s/if \\[ *-d \\([^ ]*\\) ] *; *then *\\\\Option-d/If \"`Exists \"\\1\"`\" != \"\"/\n-/if /s/if \\[ ! *-d \\([^ ]*\\) ] *; *\\\\Option-d/If \"`Exists \"\\1\"`\" == \"\"/\n-/if /s/if \\[ ! *-d \\([^ ]*\\) ] *; *then *\\\\Option-d/If \"`Exists \"\\1\"`\" == \"\"/\n-\n-/if /s/if \\[ -d \\([^ ]*\\) ] *; then true *; else mkdir \\([^ ;]*\\) *; fi/If \"`Exists \"\\1\"`\" != \"\" NewFolder \\2 End If/\n-\n-/if /s/if \\[ \\([^ ]*\\) = \\([^ ]*\\) ] *; *\\\\Option-d/If \"\\1\" == \"\\2\"/\n-/if /s/if \\[ \\([^ ]*\\) = \\([^ ]*\\) ] *; *then *\\\\Option-d/If \"\\1\" == \"\\2\"/\n-\n-/if /s/if \\[ \\([^ ]*\\) != \\([^ ]*\\) ] *; *\\\\Option-d/If \"\\1\" != \"\\2\"/\n-/if /s/if \\[ \\([^ ]*\\) != \\([^ ]*\\) ] *; *then *\\\\Option-d/If \"\\1\" != \"\\2\"/\n-\n-/if /s/if \\[ \\([^ ]*\\) -eq \\([^ ]*\\) ] *; *\\\\Option-d/If \"\\1\" != \"\\2\"/\n-/if /s/if \\[ \\([^ ]*\\) -eq \\([^ ]*\\) ] *; *then *\\\\Option-d/If \"\\1\" != \"\\2\"/\n-\n-/^[ \t]*else true$/c\\\n-\tElse\\\n-\t\tmpw-true\\\n-\n-\n-/else/s/^\\([ \t]*\\)else[ \t]*$/\\1Else/\n-/else/s/^\\([ \t]*\\)else[; \t]*\\\\Option-d$/\\1Else/\n-\n-/^[ \t]*else[ \t]*true[ \t]*$/c\\\n-\tElse\\\n-\t\tmpw-true\n-\n-/^[ \t]*else[ \t]*true[; \t]*fi$/c\\\n-\tElse\\\n-\t\tmpw-true\\\n-\tEnd If\n-\n-/fi/s/^\\([ \t]*\\)fi *$/\\1End/\n-/fi/s/^\\([ \t]*\\)fi *; *\\\\Option-d/\\1End/\n-\n-# Change looping.\n-/for/s/^\\([ \t]*\\)for \\([-a-zA-Z0-9_]*\\) in \\([^;]*\\); *do *\\\\Option-d/\\1For \\2 In \\3/\n-/^\\([ \t]*\\)do *\\\\Option-d/d\n-/done/s/^\\([ \t]*\\)done *; *\\\\Option-d/\\1End/\n-/done/s/^\\([ \t]*\\)done$/\\1End/\n-\n-# Trailing semicolons and continued lines are unneeded sh syntax.\n-/; \\\\Option-d/s/; \\\\Option-d//\n-\n-# Change move-if-change to MoveIfChange.\n-/move-if-change/s/\\([^ \t]*\\)move-if-change/MoveIfChange/g\n-\n-# Change $(SHELL) to the script name by itself.\n-/SHELL/s/^\\([ \t]*\\){SHELL} /\\1/\n-\n-# Change syntax of default rule dependency.\n-/^\\.c\\.o/s/^\\.c\\.o \\\\Option-f$/.c.o \\\\Option-f .c/\n-\n-# Change default rule's action.\n-/{CC} -c/s/{CC} -c \\(.*\\) \\$<$/{CC} @DASH_C_FLAG@ {DepDir}{Default}.c \\1 @SEGMENT_FLAG({Default})@ -o {TargDir}{Default}.c.o/\n-\n-# This is pretty disgusting, but I can't seem to detect empty rules.\n-/Option-f$/s/Option-f$/Option-f _oldest/g\n-\n-# Remove -c from explicit compiler calls. (but should not if GCC)\n-# Handle the case of a source file that is \"{xxx}\"file.c.\n-/ -c /s/{\\([A-Z_]*\\)CC}\\(.*\\) -c \\(.*\\)\"\\([^\"]*\\)\"\\([-a-z_]*\\)\\.c/{\\1CC}\\2 @DASH_C_FLAG@ \\3\"\\4\"\\5.c -o \"{o}\"\\5.c.o/\n-# Handle the case of a source file that is \"{xxx}\"dir:file.c.\n-/ -c /s/{\\([A-Z_]*\\)CC}\\(.*\\) -c \\(.*\\)\"\\([^\"]*\\)\"\\([-a-z_]*\\):\\([-a-z_]*\\)\\.c/{\\1CC}\\2 @DASH_C_FLAG@ \\3\"\\4\"\\5:\\6.c -o \"{o}\"\\6.c.o/\n-\n-# Change linking cc to linking sequence.\n-/-o/s/^\\([ \t]*\\){CC} \\(.*\\){\\([A-Z_]*\\)CFLAGS} \\(.*\\){LDFLAGS} \\(.*\\)-o \\([^ ]*\\) \\(.*\\)$/\\1{CC_LD} \\2 {\\3CFLAGS} \\4 {LDFLAGS} \\5 -o \\6{PROG_EXT} \\7\\\n-\\1{MAKEPEF} \\6{PROG_EXT} -o \\6 {MAKEPEF_TOOL_FLAGS} {MAKEPEF_FLAGS}\\\n-\\1{REZ} \"{s}\"\\6.r -o \\6 -append -d PROG_NAME='\"'\\6'\"' -d VERSION_STRING='\"'{version}'\"'/\n-/-o/s/^\\([ \t]*\\){CC} \\(.*\\){\\([A-Z_]*\\)CFLAGS} \\(.*\\)-o \\([^ ]*\\) \\(.*\\){LDFLAGS} \\(.*\\)$/\\1{CC_LD} \\2 {\\3CFLAGS} \\4 {LDFLAGS} \\6 -o \\5{PROG_EXT} \\7\\\n-\\1{MAKEPEF} \\5{PROG_EXT} -o \\5 {MAKEPEF_TOOL_FLAGS} {MAKEPEF_FLAGS}\\\n-\\1{REZ} \"{s}\"\\5.r -o \\5 -append -d PROG_NAME='\"'\\5'\"' -d VERSION_STRING='\"'{version}'\"'/\n-/-o/s/^\\([ \t]*\\){HOST_CC} \\(.*\\)-o \\([^ ]*\\) \\(.*\\)$/\\1{HOST_CC_LD} \\2 -o \\3{PROG_EXT} \\4\\\n-\\1{MAKEPEF} \\3{PROG_EXT} -o \\3 {MAKEPEF_TOOL_FLAGS} {MAKEPEF_FLAGS}\\\n-\\1{REZ} \"{s}\"\\3.r -o \\3 -append -d PROG_NAME='\"'\\3'\"' -d VERSION_STRING='\"'{version}'\"'/\n-\n-# Comment out .NOEXPORT rules.\n-/\\.NOEXPORT/s/^\\.NOEXPORT/#\\.NOEXPORT/\n-# Comment out .PHONY rules.\n-/\\.PHONY/s/^\\.PHONY/#\\.PHONY/\n-# Comment out .PRECIOUS rules.\n-/\\.PRECIOUS/s/^\\.PRECIOUS/#\\.PRECIOUS/\n-# Comment out .SUFFIXES rules.\n-/\\.SUFFIXES/s/^\\.SUFFIXES/#\\.SUFFIXES/\n-\n-# Set the install program appropriately.\n-/INSTALL/s/^INSTALL *= *`.*`:install.sh -c/INSTALL = Duplicate -y/\n-\n-# Don't try to decide whether to use the tree's own tools.\n-/bison/s/`.*bison:bison.*`/bison -y/\n-/byacc/s/`.*byacc:byacc.*`/byacc/\n-/flex/s/`.*flex:flex.*`/flex/\n-\n-# Turn transformed C comments in echo commands back into comments.\n-/echo/s,echo '\\(.*\\):\\\\Option-x\\(.*\\)\\\\Option-x:\\(.*\\)',echo '\\1/*\\2*/\\3',\n-\n-# Whack out various clever expressions that search for tools, since\n-# the clever code is too /bin/sh specific.\n-\n-/^AR_FOR_TARGET = `/,/`$/c\\\n-AR_FOR_TARGET = ::binutils:ar\\\n-\n-\n-/^RANLIB_FOR_TARGET = `/,/`$/c\\\n-RANLIB_FOR_TARGET = ::binutils:ranlib\\\n-\n-\n-/^RANLIB_TEST_FOR_TARGET = /,/ranlib ] )$/c\\\n-RANLIB_TEST_FOR_TARGET = \\\n-\n-\n-/^EXPECT = `/,/`$/c\\\n-EXPECT = \\\n-\n-\n-/^RUNTEST = `/,/`$/c\\\n-RUNTEST = \\\n-\n-\n-/^CC_FOR_TARGET = `/,/`$/c\\\n-CC_FOR_TARGET = \\\n-\n-\n-/^CXX_FOR_TARGET = `/,/`$/c\\\n-CXX_FOR_TARGET = \\\n-\n-\n-/^CHILL_FOR_TARGET = `/,/`$/c\\\n-CHILL_FOR_TARGET = \\\n-\n-\n-/^CHILL_LIB = `/,/`$/c\\\n-CHILL_LIB = \\\n-\n-/sanit/s/{start-sanit...-[a-z0-9]*}//\n-/sanit/s/{end-sanit...-[a-z0-9]*}//\n-\n-# Add standard defines and default rules.\n-/^# srcdir/a\\\n-\\\n-s = \"{srcdir}\"\\\n-\\\n-o = :\\\n-\\\n-\"{o}\" \\\\Option-f : \"{s}\"\n-"}, {"sha": "c743a5122b51ab928f2b5f0265da2b485f6e1bb0", "filename": "config/mpw/mpw-touch", "status": "removed", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2da4124d3d36aaaae81378d635968cd55730e3e4/config%2Fmpw%2Fmpw-touch", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2da4124d3d36aaaae81378d635968cd55730e3e4/config%2Fmpw%2Fmpw-touch", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2Fmpw%2Fmpw-touch?ref=2da4124d3d36aaaae81378d635968cd55730e3e4", "patch": "@@ -1,7 +0,0 @@\n-# \"Touch\" command.\n-\n-If \"`Exists \"{1}\"`\" != \"\"\n-\tSetFile -m . \"{1}\"\n-Else\n-\tEcho ' ' > \"{1}\"\n-End If"}, {"sha": "0506530d3c6dec4777f627ec7c1fb166e6a6c323", "filename": "config/mpw/mpw-true", "status": "removed", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2da4124d3d36aaaae81378d635968cd55730e3e4/config%2Fmpw%2Fmpw-true", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2da4124d3d36aaaae81378d635968cd55730e3e4/config%2Fmpw%2Fmpw-true", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2Fmpw%2Fmpw-true?ref=2da4124d3d36aaaae81378d635968cd55730e3e4", "patch": "@@ -1 +0,0 @@\n-Exit 0"}, {"sha": "4844c8ec5532487b0b0c5fb00782d502b2e0ce61", "filename": "config/mpw/null-command", "status": "removed", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2da4124d3d36aaaae81378d635968cd55730e3e4/config%2Fmpw%2Fnull-command", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2da4124d3d36aaaae81378d635968cd55730e3e4/config%2Fmpw%2Fnull-command", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2Fmpw%2Fnull-command?ref=2da4124d3d36aaaae81378d635968cd55730e3e4", "patch": "@@ -1 +0,0 @@\n-# This command does nothing."}, {"sha": "58465dcc18c4d42c3fbe3b852aec45ba2798bc0f", "filename": "config/mpw/open-brace", "status": "removed", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2da4124d3d36aaaae81378d635968cd55730e3e4/config%2Fmpw%2Fopen-brace", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2da4124d3d36aaaae81378d635968cd55730e3e4/config%2Fmpw%2Fopen-brace", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2Fmpw%2Fopen-brace?ref=2da4124d3d36aaaae81378d635968cd55730e3e4", "patch": "@@ -1,4 +0,0 @@\n-# MPW makefiles seem not to have any way to get a literal open\n-# brace into a rule anywhere, so this does the job.\n-\n-Echo '{'"}, {"sha": "b20b649c895328eac5c893f8d70986f017799615", "filename": "config/mpw/tr-7to8-src", "status": "removed", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2da4124d3d36aaaae81378d635968cd55730e3e4/config%2Fmpw%2Ftr-7to8-src", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2da4124d3d36aaaae81378d635968cd55730e3e4/config%2Fmpw%2Ftr-7to8-src", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2Fmpw%2Ftr-7to8-src?ref=2da4124d3d36aaaae81378d635968cd55730e3e4", "patch": "@@ -1,9 +0,0 @@\n-StreamEdit -e \\Option-d\n-  '/\\Option-x/ \\Option-d\n-    Replace /\\Option-d\\SrcOption-d/ \"\\Option-d\\Option-d\" -c \\Option-5 ; \\Option-d\n-    Replace /\\Option-d\\SrcOption-f/ \"\\Option-d\\Option-f\" -c \\Option-5 ; \\Option-d\n-\tReplace /\\Option-d\\SrcOption-8/ \"\\Option-d\\Option-8\" -c \\Option-5 ; \\Option-d\n-\tReplace /\\Option-d\\SrcOption-5/ \"\\Option-d\\Option-5\" -c \\Option-5 ; \\Option-d\n-\tReplace /\\Option-d\\SrcOption-x/ \"\\Option-d\\Option-x\" -c \\Option-5 ; \\Option-d\n-\tReplace /\\Option-d\\SrcOption-r/ \"\\Option-d\\Option-r\" -c \\Option-5'  \\Option-d\n-  \"{1}\""}, {"sha": "0506530d3c6dec4777f627ec7c1fb166e6a6c323", "filename": "config/mpw/true", "status": "removed", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2da4124d3d36aaaae81378d635968cd55730e3e4/config%2Fmpw%2Ftrue", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2da4124d3d36aaaae81378d635968cd55730e3e4/config%2Fmpw%2Ftrue", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2Fmpw%2Ftrue?ref=2da4124d3d36aaaae81378d635968cd55730e3e4", "patch": "@@ -1 +0,0 @@\n-Exit 0"}]}