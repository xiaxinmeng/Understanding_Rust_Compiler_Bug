{"sha": "f4ddadddf99edb3fd2ec0585c7463278d2f0e70c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjRkZGFkZGRmOTllZGIzZmQyZWMwNTg1Yzc0NjMyNzhkMmYwZTcwYw==", "commit": {"author": {"name": "Hans-Peter Nilsson", "email": "hp@axis.com", "date": "2005-02-12T01:08:33Z"}, "committer": {"name": "Hans-Peter Nilsson", "email": "hp@gcc.gnu.org", "date": "2005-02-12T01:08:33Z"}, "message": "re PR regression/19898 (cris-elf testsuite failure: gcc.c-torture/execute/strlen-1.c execution, -O2 and higher)\n\n\tPR regression/19898.\n\t* config/cris/cris.c (cris_notice_update_cc): When testing if insn\n\tchanges cc_status, use apply modified_in_p to part of cc_status\n\tand insn, not cris_reg_overlap_mentioned_p on SET_DEST of insn\n\tbody.\n\nFrom-SVN: r94914", "tree": {"sha": "7a87f8b19e23ea4b3626c8884af1c2249355ac3d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7a87f8b19e23ea4b3626c8884af1c2249355ac3d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f4ddadddf99edb3fd2ec0585c7463278d2f0e70c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4ddadddf99edb3fd2ec0585c7463278d2f0e70c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f4ddadddf99edb3fd2ec0585c7463278d2f0e70c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4ddadddf99edb3fd2ec0585c7463278d2f0e70c/comments", "author": {"login": "hpataxisdotcom", "id": 80339731, "node_id": "MDQ6VXNlcjgwMzM5NzMx", "avatar_url": "https://avatars.githubusercontent.com/u/80339731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hpataxisdotcom", "html_url": "https://github.com/hpataxisdotcom", "followers_url": "https://api.github.com/users/hpataxisdotcom/followers", "following_url": "https://api.github.com/users/hpataxisdotcom/following{/other_user}", "gists_url": "https://api.github.com/users/hpataxisdotcom/gists{/gist_id}", "starred_url": "https://api.github.com/users/hpataxisdotcom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hpataxisdotcom/subscriptions", "organizations_url": "https://api.github.com/users/hpataxisdotcom/orgs", "repos_url": "https://api.github.com/users/hpataxisdotcom/repos", "events_url": "https://api.github.com/users/hpataxisdotcom/events{/privacy}", "received_events_url": "https://api.github.com/users/hpataxisdotcom/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7e7e470f9bf455553ee08e9be90943fa3631a07b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e7e470f9bf455553ee08e9be90943fa3631a07b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7e7e470f9bf455553ee08e9be90943fa3631a07b"}], "stats": {"total": 58, "additions": 20, "deletions": 38}, "files": [{"sha": "e70eb8bb461cb63cb08243d6ff0684ff9b8f3e75", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4ddadddf99edb3fd2ec0585c7463278d2f0e70c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4ddadddf99edb3fd2ec0585c7463278d2f0e70c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f4ddadddf99edb3fd2ec0585c7463278d2f0e70c", "patch": "@@ -1,3 +1,11 @@\n+2005-02-12  Hans-Peter Nilsson  <hp@axis.com>\n+\n+\tPR regression/19898.\n+\t* config/cris/cris.c (cris_notice_update_cc): When testing if insn\n+\tchanges cc_status, use apply modified_in_p to part of cc_status\n+\tand insn, not cris_reg_overlap_mentioned_p on SET_DEST of insn\n+\tbody.\n+\n 2005-02-11  Richard Henderson  <rth@redhat.com>\n \n \t* tree-complex.c (expand_complex_libcall): New."}, {"sha": "a01fe1ec4d2a8e5eeeb34ae656ee44c0dc441943", "filename": "gcc/config/cris/cris.c", "status": "modified", "additions": 12, "deletions": 38, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4ddadddf99edb3fd2ec0585c7463278d2f0e70c/gcc%2Fconfig%2Fcris%2Fcris.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4ddadddf99edb3fd2ec0585c7463278d2f0e70c/gcc%2Fconfig%2Fcris%2Fcris.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fcris%2Fcris.c?ref=f4ddadddf99edb3fd2ec0585c7463278d2f0e70c", "patch": "@@ -1834,13 +1834,11 @@ cris_notice_update_cc (rtx exp, rtx insn)\n       if (GET_CODE (exp) == SET)\n \t{\n \t  if (cc_status.value1\n-\t      && cris_reg_overlap_mentioned_p (SET_DEST (exp),\n-\t\t\t\t\t     cc_status.value1))\n+\t      && modified_in_p (cc_status.value1, insn))\n \t    cc_status.value1 = 0;\n \n \t  if (cc_status.value2\n-\t      && cris_reg_overlap_mentioned_p (SET_DEST (exp),\n-\t\t\t\t\t     cc_status.value2))\n+\t      && modified_in_p (cc_status.value2, insn))\n \t    cc_status.value2 = 0;\n \t}\n       return;\n@@ -1970,14 +1968,12 @@ cris_notice_update_cc (rtx exp, rtx insn)\n \t\t{\n \t\t  /* There's no CC0 change when clearing a register or\n \t\t     memory.  Just check for overlap.  */\n-\t\t  if ((cc_status.value1\n-\t\t       && cris_reg_overlap_mentioned_p (SET_DEST (exp),\n-\t\t\t\t\t\t\tcc_status.value1)))\n+\t\t  if (cc_status.value1\n+\t\t      && modified_in_p (cc_status.value1, insn))\n \t\t    cc_status.value1 = 0;\n \n-\t\t  if ((cc_status.value2\n-\t\t       && cris_reg_overlap_mentioned_p (SET_DEST (exp),\n-\t\t\t\t\t\t\tcc_status.value2)))\n+\t\t  if (cc_status.value2\n+\t\t      && modified_in_p (cc_status.value2, insn))\n \t\t    cc_status.value2 = 0;\n \n \t\t  return;\n@@ -2009,14 +2005,12 @@ cris_notice_update_cc (rtx exp, rtx insn)\n \t    {\n \t      /* When SET to MEM, then CC is not changed (except for\n \t\t overlap).  */\n-\t      if ((cc_status.value1\n-\t\t   && cris_reg_overlap_mentioned_p (SET_DEST (exp),\n-\t\t\t\t\t\t    cc_status.value1)))\n+\t      if (cc_status.value1\n+\t\t  && modified_in_p (cc_status.value1, insn))\n \t\tcc_status.value1 = 0;\n \n-\t      if ((cc_status.value2\n-\t\t   && cris_reg_overlap_mentioned_p (SET_DEST (exp),\n-\t\t\t\t\t\t    cc_status.value2)))\n+\t      if (cc_status.value2\n+\t\t  && modified_in_p (cc_status.value2, insn))\n \t\tcc_status.value2 = 0;\n \n \t      return;\n@@ -2053,31 +2047,11 @@ cris_notice_update_cc (rtx exp, rtx insn)\n \t\t  /* For \"move.S rz,[rx=ry+o]\" and \"clear.S [rx=ry+o]\",\n \t\t     say flags are not changed, except for overlap.  */\n \t\t  if (cc_status.value1\n-\t\t      && cris_reg_overlap_mentioned_p (XEXP\n-\t\t\t\t\t\t       (XVECEXP\n-\t\t\t\t\t\t\t(exp, 0, 0), 0),\n-\t\t\t\t\t\t       cc_status.value1))\n-\t\t    cc_status.value1 = 0;\n-\n-\t\t  if (cc_status.value1\n-\t\t      && cris_reg_overlap_mentioned_p (XEXP\n-\t\t\t\t\t\t       (XVECEXP\n-\t\t\t\t\t\t\t(exp, 0, 1), 0),\n-\t\t\t\t\t\t       cc_status.value1))\n+\t\t      && modified_in_p (cc_status.value1, insn))\n \t\t    cc_status.value1 = 0;\n \n \t\t  if (cc_status.value2\n-\t\t      && cris_reg_overlap_mentioned_p (XEXP\n-\t\t\t\t\t\t       (XVECEXP\n-\t\t\t\t\t\t\t(exp, 0, 0), 0),\n-\t\t\t\t\t\t       cc_status.value2))\n-\t\t    cc_status.value2 = 0;\n-\n-\t\t  if (cc_status.value2\n-\t\t      && cris_reg_overlap_mentioned_p (XEXP\n-\t\t\t\t\t\t       (XVECEXP\n-\t\t\t\t\t\t\t(exp, 0, 1), 0),\n-\t\t\t\t\t\t       cc_status.value2))\n+\t\t      && modified_in_p (cc_status.value2, insn))\n \t\t    cc_status.value2 = 0;\n \n \t\t  return;"}]}