{"sha": "ea1637e9e59bc8aadbe3636d710aba3d12a43b75", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWExNjM3ZTllNTliYzhhYWRiZTM2MzZkNzEwYWJhM2QxMmE0M2I3NQ==", "commit": {"author": {"name": "J\"orn Rennecke", "email": "amylaar@cygnus.co.uk", "date": "1999-08-12T22:53:28Z"}, "committer": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "1999-08-12T22:53:28Z"}, "message": "global.c (prune_preferences): Move some invariants out of the inner loop.\n\n\t* global.c (prune_preferences): Move some invariants out of the\n\tinner loop.\n\nFrom-SVN: r28691", "tree": {"sha": "9432ee4f81d55c74224a4b1836bfe3599d7542d3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9432ee4f81d55c74224a4b1836bfe3599d7542d3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ea1637e9e59bc8aadbe3636d710aba3d12a43b75", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea1637e9e59bc8aadbe3636d710aba3d12a43b75", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ea1637e9e59bc8aadbe3636d710aba3d12a43b75", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea1637e9e59bc8aadbe3636d710aba3d12a43b75/comments", "author": null, "committer": null, "parents": [{"sha": "7bc699731b0ff2556016ae3f819199ae995a516e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7bc699731b0ff2556016ae3f819199ae995a516e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7bc699731b0ff2556016ae3f819199ae995a516e"}], "stats": {"total": 25, "additions": 16, "deletions": 9}, "files": [{"sha": "bdf2b891d5cf59ad090ca4d1d67579c165c34702", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea1637e9e59bc8aadbe3636d710aba3d12a43b75/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea1637e9e59bc8aadbe3636d710aba3d12a43b75/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ea1637e9e59bc8aadbe3636d710aba3d12a43b75", "patch": "@@ -1,3 +1,8 @@\n+Thu Aug 12 23:51:04 1999  J\"orn Rennecke <amylaar@cygnus.co.uk>\n+\n+\t* global.c (prune_preferences): Move some invariants out of the\n+\tinner loop.\n+\n Thu Aug 12 15:30:29 1999  Jesse Perry  (jap@unx.dec.com)\n \n \t* configure.in (alpha*-dec-osf*): Add osf5."}, {"sha": "1ac0f24c3f293996565430a2c138551aedf84059", "filename": "gcc/global.c", "status": "modified", "additions": 11, "deletions": 9, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea1637e9e59bc8aadbe3636d710aba3d12a43b75/gcc%2Fglobal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea1637e9e59bc8aadbe3636d710aba3d12a43b75/gcc%2Fglobal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fglobal.c?ref=ea1637e9e59bc8aadbe3636d710aba3d12a43b75", "patch": "@@ -864,7 +864,7 @@ prune_preferences ()\n \n   for (i = max_allocno - 1; i >= 0; i--)\n     {\n-      HARD_REG_SET temp;\n+      HARD_REG_SET temp, temp2;\n \n       allocno = allocno_order[i];\n       COPY_HARD_REG_SET (temp, hard_reg_conflicts[allocno]);\n@@ -882,25 +882,27 @@ prune_preferences ()\n       AND_COMPL_HARD_REG_SET (hard_reg_copy_preferences[allocno], temp);\n       AND_COMPL_HARD_REG_SET (hard_reg_full_preferences[allocno], temp);\n \n-      CLEAR_HARD_REG_SET (regs_someone_prefers[allocno]);\n-\n       /* Merge in the preferences of lower-priority registers (they have\n \t already been pruned).  If we also prefer some of those registers,\n \t don't exclude them unless we are of a smaller size (in which case\n \t we want to give the lower-priority allocno the first chance for\n \t these registers).  */\n+      CLEAR_HARD_REG_SET (temp);\n+      CLEAR_HARD_REG_SET (temp2);\n       for (j = i + 1; j < max_allocno; j++)\n \tif (CONFLICTP (allocno, allocno_order[j])\n \t    || CONFLICTP (allocno_order[j], allocno))\n \t  {\n-\t    COPY_HARD_REG_SET (temp,\n-\t\t\t       hard_reg_full_preferences[allocno_order[j]]);\n \t    if (allocno_size[allocno_order[j]] <= allocno_size[allocno])\n-\t      AND_COMPL_HARD_REG_SET (temp,\n-\t\t\t\t      hard_reg_full_preferences[allocno]);\n-\t\t\t       \n-\t    IOR_HARD_REG_SET (regs_someone_prefers[allocno], temp);\n+\t      IOR_HARD_REG_SET (temp,\n+\t\t\t\thard_reg_full_preferences[allocno_order[j]]);\n+\t    else\n+\t      IOR_HARD_REG_SET (temp2,\n+\t\t\t\thard_reg_full_preferences[allocno_order[j]]);\n \t  }\n+      AND_COMPL_HARD_REG_SET (temp, hard_reg_full_preferences[allocno]);\n+      IOR_HARD_REG_SET (temp, temp2);\n+      COPY_HARD_REG_SET (regs_someone_prefers[allocno], temp);\n     }\n }\n \f"}]}