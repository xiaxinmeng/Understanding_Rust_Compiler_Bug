{"sha": "a247af8371ad9ad4e244cf664ed33ca7d945b768", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTI0N2FmODM3MWFkOWFkNGUyNDRjZjY2NGVkMzNjYTdkOTQ1Yjc2OA==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2012-06-27T03:20:08Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2012-06-27T03:20:08Z"}, "message": "i386: Correct costs on CONST_DOUBLE and CONST_VECTOR\n\nWe were always falling through to the memory default.\nAlso use standard_sse_constant_p on CONST_VECTOR.\n\n        * config/i386/i386.c (ix86_rtx_costs): Use standard_sse_constant_p\n        and don't fall thru from standard_80387_constant_p to the memory\n        fallback,\n\nFrom-SVN: r189007", "tree": {"sha": "a9c63a4b7197e02e38966e6ba619cc7ec2083e7c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a9c63a4b7197e02e38966e6ba619cc7ec2083e7c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a247af8371ad9ad4e244cf664ed33ca7d945b768", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a247af8371ad9ad4e244cf664ed33ca7d945b768", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a247af8371ad9ad4e244cf664ed33ca7d945b768", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a247af8371ad9ad4e244cf664ed33ca7d945b768/comments", "author": null, "committer": null, "parents": [{"sha": "87b78516208e45cacb666e5ce824417438456911", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/87b78516208e45cacb666e5ce824417438456911", "html_url": "https://github.com/Rust-GCC/gccrs/commit/87b78516208e45cacb666e5ce824417438456911"}], "stats": {"total": 54, "additions": 37, "deletions": 17}, "files": [{"sha": "1d98b79c720c2b9230cbd44c2fdd6200e3d54af8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a247af8371ad9ad4e244cf664ed33ca7d945b768/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a247af8371ad9ad4e244cf664ed33ca7d945b768/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a247af8371ad9ad4e244cf664ed33ca7d945b768", "patch": "@@ -1,3 +1,9 @@\n+2012-06-26  Richard Henderson  <rth@redhat.com>\n+\n+\t* config/i386/i386.c (ix86_rtx_costs): Use standard_sse_constant_p\n+\tand don't fall thru from standard_80387_constant_p to the memory\n+\tfallback,\n+\n 2012-06-26  Richard Henderson  <rth@redhat.com>\n \n \t* config/i386/i386.c (bdesc_args): Update.  Change"}, {"sha": "edfc6498d73e3b01863839d24af6c64c782d3113", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 31, "deletions": 17, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a247af8371ad9ad4e244cf664ed33ca7d945b768/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a247af8371ad9ad4e244cf664ed33ca7d945b768/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=a247af8371ad9ad4e244cf664ed33ca7d945b768", "patch": "@@ -32102,24 +32102,38 @@ ix86_rtx_costs (rtx x, int code_i, int outer_code_i, int opno, int *total,\n \n     case CONST_DOUBLE:\n       if (mode == VOIDmode)\n-\t*total = 0;\n-      else\n-\tswitch (standard_80387_constant_p (x))\n-\t  {\n-\t  case 1: /* 0.0 */\n-\t    *total = 1;\n-\t    break;\n-\t  default: /* Other constants */\n-\t    *total = 2;\n-\t    break;\n-\t  case 0:\n-\t  case -1:\n-\t    break;\n-\t  }\n-      /* FALLTHRU */\n-\n+\t{\n+\t  *total = 0;\n+\t  return true;\n+\t}\n+      switch (standard_80387_constant_p (x))\n+\t{\n+\tcase 1: /* 0.0 */\n+\t  *total = 1;\n+\t  return true;\n+\tdefault: /* Other constants */\n+\t  *total = 2;\n+\t  return true;\n+\tcase 0:\n+\tcase -1:\n+\t  break;\n+\t}\n+      if (SSE_FLOAT_MODE_P (mode))\n+\t{\n     case CONST_VECTOR:\n-      /* Start with (MEM (SYMBOL_REF)), since that's where\n+\t  switch (standard_sse_constant_p (x))\n+\t    {\n+\t    case 0:\n+\t      break;\n+\t    case 1:  /* 0: xor eliminates false dependency */\n+\t      *total = 0;\n+\t      return true;\n+\t    default: /* -1: cmp contains false dependency */\n+\t      *total = 1;\n+\t      return true;\n+\t    }\n+\t}\n+      /* Fall back to (MEM (SYMBOL_REF)), since that's where\n \t it'll probably end up.  Add a penalty for size.  */\n       *total = (COSTS_N_INSNS (1)\n \t\t+ (flag_pic != 0 && !TARGET_64BIT)"}]}