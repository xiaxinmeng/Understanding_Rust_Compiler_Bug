{"sha": "7d5de349d21479d7ec61dd0153e6f0958ad7384f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2Q1ZGUzNDlkMjE0NzlkN2VjNjFkZDAxNTNlNmYwOTU4YWQ3Mzg0Zg==", "commit": {"author": {"name": "liuhongt", "email": "hongtao.liu@intel.com", "date": "2020-08-12T02:48:17Z"}, "committer": {"name": "liuhongt", "email": "hongtao.liu@intel.com", "date": "2020-08-18T06:19:40Z"}, "message": "Don't use pinsr/pextr for struct initialization/extraction.\n\ngcc/\n\tPR target/96562\n\tPR target/93897\n\t* config/i386/i386-expand.c (ix86_expand_pinsr): Don't use\n\tpinsr for TImode.\n\t(ix86_expand_pextr): Don't use pextr for TImode.\n\ngcc/testsuite/\n\t* gcc.target/i386/pr96562-1.c: New test.", "tree": {"sha": "a3f1827015012f2fb02787c2d1f15f091cabc408", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a3f1827015012f2fb02787c2d1f15f091cabc408"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7d5de349d21479d7ec61dd0153e6f0958ad7384f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d5de349d21479d7ec61dd0153e6f0958ad7384f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7d5de349d21479d7ec61dd0153e6f0958ad7384f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d5de349d21479d7ec61dd0153e6f0958ad7384f/comments", "author": {"login": "algebra84", "id": 22926165, "node_id": "MDQ6VXNlcjIyOTI2MTY1", "avatar_url": "https://avatars.githubusercontent.com/u/22926165?v=4", "gravatar_id": "", "url": "https://api.github.com/users/algebra84", "html_url": "https://github.com/algebra84", "followers_url": "https://api.github.com/users/algebra84/followers", "following_url": "https://api.github.com/users/algebra84/following{/other_user}", "gists_url": "https://api.github.com/users/algebra84/gists{/gist_id}", "starred_url": "https://api.github.com/users/algebra84/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/algebra84/subscriptions", "organizations_url": "https://api.github.com/users/algebra84/orgs", "repos_url": "https://api.github.com/users/algebra84/repos", "events_url": "https://api.github.com/users/algebra84/events{/privacy}", "received_events_url": "https://api.github.com/users/algebra84/received_events", "type": "User", "site_admin": false}, "committer": {"login": "algebra84", "id": 22926165, "node_id": "MDQ6VXNlcjIyOTI2MTY1", "avatar_url": "https://avatars.githubusercontent.com/u/22926165?v=4", "gravatar_id": "", "url": "https://api.github.com/users/algebra84", "html_url": "https://github.com/algebra84", "followers_url": "https://api.github.com/users/algebra84/followers", "following_url": "https://api.github.com/users/algebra84/following{/other_user}", "gists_url": "https://api.github.com/users/algebra84/gists{/gist_id}", "starred_url": "https://api.github.com/users/algebra84/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/algebra84/subscriptions", "organizations_url": "https://api.github.com/users/algebra84/orgs", "repos_url": "https://api.github.com/users/algebra84/repos", "events_url": "https://api.github.com/users/algebra84/events{/privacy}", "received_events_url": "https://api.github.com/users/algebra84/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6d42cbe5ad7a7b46437f2576c9920e44dc14b386", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d42cbe5ad7a7b46437f2576c9920e44dc14b386", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6d42cbe5ad7a7b46437f2576c9920e44dc14b386"}], "stats": {"total": 83, "additions": 81, "deletions": 2}, "files": [{"sha": "68fbe8385b31b82df8abd45f61bd61d658463bb5", "filename": "gcc/config/i386/i386-expand.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d5de349d21479d7ec61dd0153e6f0958ad7384f/gcc%2Fconfig%2Fi386%2Fi386-expand.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d5de349d21479d7ec61dd0153e6f0958ad7384f/gcc%2Fconfig%2Fi386%2Fi386-expand.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-expand.c?ref=7d5de349d21479d7ec61dd0153e6f0958ad7384f", "patch": "@@ -20302,7 +20302,6 @@ ix86_expand_pextr (rtx *operands)\n     case E_V4SImode:\n     case E_V2DImode:\n     case E_V1TImode:\n-    case E_TImode:\n       {\n \tmachine_mode srcmode, dstmode;\n \trtx d, pat;\n@@ -20398,7 +20397,6 @@ ix86_expand_pinsr (rtx *operands)\n     case E_V4SImode:\n     case E_V2DImode:\n     case E_V1TImode:\n-    case E_TImode:\n       {\n \tmachine_mode srcmode, dstmode;\n \trtx (*pinsr)(rtx, rtx, rtx, rtx);"}, {"sha": "6ebeeb1fb1728ba39383125462d26c06880bcd23", "filename": "gcc/testsuite/gcc.target/i386/pr96562-1.c", "status": "added", "additions": 81, "deletions": 0, "changes": 81, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d5de349d21479d7ec61dd0153e6f0958ad7384f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr96562-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d5de349d21479d7ec61dd0153e6f0958ad7384f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr96562-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr96562-1.c?ref=7d5de349d21479d7ec61dd0153e6f0958ad7384f", "patch": "@@ -0,0 +1,81 @@\n+/* { dg-do compile} */\n+/* { dg-options \"-msse4.1 -O2\" } */\n+/* { dg-final { scan-assembler-not \"pinsr\" } } */\n+\n+typedef struct\n+{\n+  long long a;\n+  int b;\n+} st1;\n+\n+typedef struct\n+{\n+  long long a;\n+  int b;\n+  short c;\n+} st2;\n+\n+typedef struct\n+{\n+  long long a;\n+  int b;\n+  short c;\n+  char d;\n+} st3;\n+\n+typedef struct\n+{\n+  int b;\n+  long long a;\n+} st4;\n+\n+typedef struct\n+{\n+  short c;\n+  int b;\n+  long long a;\n+} st5;\n+\n+typedef struct\n+{\n+  char d;\n+  short c;\n+  int b;\n+  long long a;\n+} st6;\n+\n+st1\n+foo1 (long long a, int b)\n+{\n+  return (st1){a, b};\n+}\n+\n+st2\n+foo2 (long long a, int b, short c)\n+{\n+  return (st2){a, b, c};\n+}\n+\n+st3\n+foo3 (long long a, int b, short c, char d)\n+{\n+  return (st3){a, b, c, d};\n+}\n+\n+st4\n+foo4 (long long a, int b)\n+{\n+  return (st4){b, a};\n+}\n+\n+st5\n+foo5 (long long a, int b, short c)\n+{\n+  return (st5){c, b, a};\n+}\n+\n+st6\n+foo6 (long long a, int b, short c, char d)\n+{\n+  return (st6){d, c, b, a};\n+}"}]}