{"sha": "e4cdf6a8c506f03903c614ec14cc8152d52d6a4e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTRjZGY2YThjNTA2ZjAzOTAzYzYxNGVjMTRjYzgxNTJkNTJkNmE0ZQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2015-08-25T10:29:09Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2015-08-25T10:29:09Z"}, "message": "re PR tree-optimization/67306 (Patterns ICEs when moved using \"simplify and match\")\n\n2015-08-25  Richard Biener  <rguenther@suse.de>\n\n\tPR middle-end/67306\n\t* genmatch.c (expr::gen_transform): Verify the result of\n\tbuiltin_decl_implicit.\n\t(dt_simplify::gen_1): Likewise.\n\nFrom-SVN: r227163", "tree": {"sha": "2dd439cd002ec24938140110f94b6c6e54dcfec3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2dd439cd002ec24938140110f94b6c6e54dcfec3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e4cdf6a8c506f03903c614ec14cc8152d52d6a4e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e4cdf6a8c506f03903c614ec14cc8152d52d6a4e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e4cdf6a8c506f03903c614ec14cc8152d52d6a4e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e4cdf6a8c506f03903c614ec14cc8152d52d6a4e/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e36dbdfe551a89808e0a3d4c5bd6df7e79401eb6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e36dbdfe551a89808e0a3d4c5bd6df7e79401eb6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e36dbdfe551a89808e0a3d4c5bd6df7e79401eb6"}], "stats": {"total": 38, "additions": 32, "deletions": 6}, "files": [{"sha": "517d1a4c55f7e96150b42fac768fd597d19c720d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4cdf6a8c506f03903c614ec14cc8152d52d6a4e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4cdf6a8c506f03903c614ec14cc8152d52d6a4e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e4cdf6a8c506f03903c614ec14cc8152d52d6a4e", "patch": "@@ -1,3 +1,10 @@\n+2015-08-25  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/67306\n+\t* genmatch.c (expr::gen_transform): Verify the result of\n+\tbuiltin_decl_implicit.\n+\t(dt_simplify::gen_1): Likewise.\n+\n 2015-08-25  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n \n \t* config/arm/constraints.md: Also list Cs and US ARM-specific"}, {"sha": "d92d8080dd011111a5b4dd5902781d72e7f945e6", "filename": "gcc/genmatch.c", "status": "modified", "additions": 25, "deletions": 6, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4cdf6a8c506f03903c614ec14cc8152d52d6a4e/gcc%2Fgenmatch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4cdf6a8c506f03903c614ec14cc8152d52d6a4e/gcc%2Fgenmatch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenmatch.c?ref=e4cdf6a8c506f03903c614ec14cc8152d52d6a4e", "patch": "@@ -2177,11 +2177,19 @@ expr::gen_transform (FILE *f, int indent, const char *dest, bool gimple,\n \tfprintf_indent (f, indent, \"res = fold_build%d_loc (loc, %s, %s\",\n \t\t\tops.length(), opr_name, type);\n       else\n-\tfprintf_indent (f, indent, \"res = build_call_expr_loc (loc, \"\n-\t\t\t\"builtin_decl_implicit (%s), %d\", opr_name, ops.length());\n+\t{\n+\t  fprintf_indent (f, indent, \"{\\n\");\n+\t  fprintf_indent (f, indent, \"  tree decl = builtin_decl_implicit (%s);\\n\",\n+\t\t\t  opr_name);\n+\t  fprintf_indent (f, indent, \"  if (!decl) return NULL_TREE;\\n\");\n+\t  fprintf_indent (f, indent, \"  res = build_call_expr_loc (loc, \"\n+\t\t\t  \"decl, %d\", ops.length());\n+\t}\n       for (unsigned i = 0; i < ops.length (); ++i)\n \tfprintf (f, \", ops%d[%u]\", depth, i);\n       fprintf (f, \");\\n\");\n+      if (opr->kind != id_base::CODE)\n+\tfprintf_indent (f, indent, \"}\\n\");\n       if (*opr == CONVERT_EXPR)\n \t{\n \t  indent -= 2;\n@@ -3069,13 +3077,24 @@ dt_simplify::gen_1 (FILE *f, int indent, bool gimple, operand *result)\n \t\t\t\t    *e->operation == CONVERT_EXPR\n \t\t\t\t    ? \"NOP_EXPR\" : e->operation->id);\n \t\t  else\n-\t\t    fprintf_indent (f, indent,\n-\t\t\t\t    \"res = build_call_expr_loc \"\n-\t\t\t\t    \"(loc, builtin_decl_implicit (%s), %d\",\n-\t\t\t\t    e->operation->id, e->ops.length());\n+\t\t    {\n+\t\t      fprintf_indent (f, indent,\n+\t\t\t\t      \"{\\n\");\n+\t\t      fprintf_indent (f, indent,\n+\t\t\t\t      \"  tree decl = builtin_decl_implicit (%s);\\n\",\n+\t\t\t\t      e->operation->id);\n+\t\t      fprintf_indent (f, indent,\n+\t\t\t\t      \"  if (!decl) return NULL_TREE;\\n\");\n+\t\t      fprintf_indent (f, indent,\n+\t\t\t\t      \"  res = build_call_expr_loc \"\n+\t\t\t\t      \"(loc, decl, %d\",\n+\t\t\t\t      e->ops.length());\n+\t\t    }\n \t\t  for (unsigned j = 0; j < e->ops.length (); ++j)\n \t\t    fprintf (f, \", res_op%d\", j);\n \t\t  fprintf (f, \");\\n\");\n+\t\t  if (!is_a <operator_id *> (opr))\n+\t\t    fprintf_indent (f, indent, \"}\\n\");\n \t\t}\n \t    }\n \t}"}]}