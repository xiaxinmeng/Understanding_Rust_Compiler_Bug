{"sha": "f1c141a7da0daee15591401fa0a24cf71cc4734c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjFjMTQxYTdkYTBkYWVlMTU1OTE0MDFmYTBhMjRjZjcxY2M0NzM0Yw==", "commit": {"author": {"name": "David S. Miller", "email": "davem@davemloft.net", "date": "2011-10-13T21:15:44Z"}, "committer": {"name": "David S. Miller", "email": "davem@gcc.gnu.org", "date": "2011-10-13T21:15:44Z"}, "message": "Fix the RTL of some sparc VIS patterns.\n\n\t* config/sparc/sparc.md (UNSPEC_FPMERGE): Delete.\n\t(UNSPEC_MUL16AU, UNSPEC_MUL8, UNSPEC_MUL8SU, UNSPEC_MULDSU): New\n\tunspecs.\n\t(fpmerge_vis): Remove inaccurate comment, represent using vec_select\n\tof a vec_concat.\n\t(vec_interleave_lowv8qi, vec_interleave_highv8qi): New insns.\n\t(fmul8x16_vis, fmul8x16au_vis, fmul8sux16_vis, fmuld8sux16_vis):\n\tReimplement as unspecs and remove inaccurate comments.\n\t(vis3_shift_patname): New code attr.\n\t(<vis3_shift_insn><vbits>_vis): Rename to \"v<vis3_shift_patname><mode>3\".\n\t(vis3_addsub_ss_patname): New code attr.\n\t(<vis3_addsub_ss_insn><vbits>_vis): Rename to\n\t\"<vis3_addsub_ss_patname><mode>3\".\n\t* config/sparc/sparc.c (sparc_vis_init_builtins): Update to\n\taccommodate pattern name changes.\n\nFrom-SVN: r179943", "tree": {"sha": "320e89380c3ec10d569ed5ec5dd93df47a8df133", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/320e89380c3ec10d569ed5ec5dd93df47a8df133"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f1c141a7da0daee15591401fa0a24cf71cc4734c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1c141a7da0daee15591401fa0a24cf71cc4734c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f1c141a7da0daee15591401fa0a24cf71cc4734c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1c141a7da0daee15591401fa0a24cf71cc4734c/comments", "author": {"login": "davem330", "id": 1053866, "node_id": "MDQ6VXNlcjEwNTM4NjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1053866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davem330", "html_url": "https://github.com/davem330", "followers_url": "https://api.github.com/users/davem330/followers", "following_url": "https://api.github.com/users/davem330/following{/other_user}", "gists_url": "https://api.github.com/users/davem330/gists{/gist_id}", "starred_url": "https://api.github.com/users/davem330/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davem330/subscriptions", "organizations_url": "https://api.github.com/users/davem330/orgs", "repos_url": "https://api.github.com/users/davem330/repos", "events_url": "https://api.github.com/users/davem330/events{/privacy}", "received_events_url": "https://api.github.com/users/davem330/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ce5046bd7184be1aad54e2d8874e136b758c365d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce5046bd7184be1aad54e2d8874e136b758c365d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce5046bd7184be1aad54e2d8874e136b758c365d"}], "stats": {"total": 127, "additions": 89, "deletions": 38}, "files": [{"sha": "6a514e8b0ab043e7d8c520ed945f60a3320ecd29", "filename": "gcc/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1c141a7da0daee15591401fa0a24cf71cc4734c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1c141a7da0daee15591401fa0a24cf71cc4734c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f1c141a7da0daee15591401fa0a24cf71cc4734c", "patch": "@@ -64,6 +64,22 @@\n \n 2011-10-12  David S. Miller  <davem@davemloft.net>\n \n+\t* config/sparc/sparc.md (UNSPEC_FPMERGE): Delete.\n+\t(UNSPEC_MUL16AU, UNSPEC_MUL8, UNSPEC_MUL8SU, UNSPEC_MULDSU): New\n+\tunspecs.\n+\t(fpmerge_vis): Remove inaccurate comment, represent using vec_select\n+\tof a vec_concat.\n+\t(vec_interleave_lowv8qi, vec_interleave_highv8qi): New insns.\n+\t(fmul8x16_vis, fmul8x16au_vis, fmul8sux16_vis, fmuld8sux16_vis):\n+\tReimplement as unspecs and remove inaccurate comments.\n+\t(vis3_shift_patname): New code attr.\n+\t(<vis3_shift_insn><vbits>_vis): Rename to \"v<vis3_shift_patname><mode>3\".\n+\t(vis3_addsub_ss_patname): New code attr.\n+\t(<vis3_addsub_ss_insn><vbits>_vis): Rename to\n+\t\"<vis3_addsub_ss_patname><mode>3\".\n+\t* config/sparc/sparc.c (sparc_vis_init_builtins): Update to\n+\taccommodate pattern name changes.\n+\n \t* config/sparc/sparc.h: Do not force TARGET_VIS3 and TARGET_FMAF\n \tto zero when assembler lacks support for such instructions.\n \t* config/sparc/sparc.c (sparc_option_override): Clear MASK_VIS3"}, {"sha": "fc448ccf37ae84bbcc24f1d65536351caa1d18bc", "filename": "gcc/config/sparc/sparc.c", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1c141a7da0daee15591401fa0a24cf71cc4734c/gcc%2Fconfig%2Fsparc%2Fsparc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1c141a7da0daee15591401fa0a24cf71cc4734c/gcc%2Fconfig%2Fsparc%2Fsparc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.c?ref=f1c141a7da0daee15591401fa0a24cf71cc4734c", "patch": "@@ -9496,21 +9496,21 @@ sparc_vis_init_builtins (void)\n       def_builtin_const (\"__builtin_vis_fchksm16\", CODE_FOR_fchksm16_vis,\n \t\t\t v4hi_ftype_v4hi_v4hi);\n \n-      def_builtin_const (\"__builtin_vis_fsll16\", CODE_FOR_fsll16_vis,\n+      def_builtin_const (\"__builtin_vis_fsll16\", CODE_FOR_vashlv4hi3,\n \t\t\t v4hi_ftype_v4hi_v4hi);\n-      def_builtin_const (\"__builtin_vis_fslas16\", CODE_FOR_fslas16_vis,\n+      def_builtin_const (\"__builtin_vis_fslas16\", CODE_FOR_vssashlv4hi3,\n \t\t\t v4hi_ftype_v4hi_v4hi);\n-      def_builtin_const (\"__builtin_vis_fsrl16\", CODE_FOR_fsrl16_vis,\n+      def_builtin_const (\"__builtin_vis_fsrl16\", CODE_FOR_vlshrv4hi3,\n \t\t\t v4hi_ftype_v4hi_v4hi);\n-      def_builtin_const (\"__builtin_vis_fsra16\", CODE_FOR_fsra16_vis,\n+      def_builtin_const (\"__builtin_vis_fsra16\", CODE_FOR_vashrv4hi3,\n \t\t\t v4hi_ftype_v4hi_v4hi);\n-      def_builtin_const (\"__builtin_vis_fsll32\", CODE_FOR_fsll32_vis,\n+      def_builtin_const (\"__builtin_vis_fsll32\", CODE_FOR_vashlv2si3,\n \t\t\t v2si_ftype_v2si_v2si);\n-      def_builtin_const (\"__builtin_vis_fslas32\", CODE_FOR_fslas32_vis,\n+      def_builtin_const (\"__builtin_vis_fslas32\", CODE_FOR_vssashlv2si3,\n \t\t\t v2si_ftype_v2si_v2si);\n-      def_builtin_const (\"__builtin_vis_fsrl32\", CODE_FOR_fsrl32_vis,\n+      def_builtin_const (\"__builtin_vis_fsrl32\", CODE_FOR_vlshrv2si3,\n \t\t\t v2si_ftype_v2si_v2si);\n-      def_builtin_const (\"__builtin_vis_fsra32\", CODE_FOR_fsra32_vis,\n+      def_builtin_const (\"__builtin_vis_fsra32\", CODE_FOR_vashrv2si3,\n \t\t\t v2si_ftype_v2si_v2si);\n \n       if (TARGET_ARCH64)\n@@ -9527,21 +9527,21 @@ sparc_vis_init_builtins (void)\n       def_builtin_const (\"__builtin_vis_fpsub64\", CODE_FOR_fpsub64_vis,\n \t\t\t di_ftype_di_di);\n \n-      def_builtin_const (\"__builtin_vis_fpadds16\", CODE_FOR_fpadds16_vis,\n+      def_builtin_const (\"__builtin_vis_fpadds16\", CODE_FOR_ssaddv4hi3,\n \t\t\t v4hi_ftype_v4hi_v4hi);\n-      def_builtin_const (\"__builtin_vis_fpadds16s\", CODE_FOR_fpadds16s_vis,\n+      def_builtin_const (\"__builtin_vis_fpadds16s\", CODE_FOR_ssaddv2hi3,\n \t\t\t v2hi_ftype_v2hi_v2hi);\n-      def_builtin_const (\"__builtin_vis_fpsubs16\", CODE_FOR_fpsubs16_vis,\n+      def_builtin_const (\"__builtin_vis_fpsubs16\", CODE_FOR_sssubv4hi3,\n \t\t\t v4hi_ftype_v4hi_v4hi);\n-      def_builtin_const (\"__builtin_vis_fpsubs16s\", CODE_FOR_fpsubs16s_vis,\n+      def_builtin_const (\"__builtin_vis_fpsubs16s\", CODE_FOR_sssubv2hi3,\n \t\t\t v2hi_ftype_v2hi_v2hi);\n-      def_builtin_const (\"__builtin_vis_fpadds32\", CODE_FOR_fpadds32_vis,\n+      def_builtin_const (\"__builtin_vis_fpadds32\", CODE_FOR_ssaddv2si3,\n \t\t\t v2si_ftype_v2si_v2si);\n-      def_builtin_const (\"__builtin_vis_fpadds32s\", CODE_FOR_fpadds32s_vis,\n+      def_builtin_const (\"__builtin_vis_fpadds32s\", CODE_FOR_ssaddsi3,\n \t\t\t v1si_ftype_v1si_v1si);\n-      def_builtin_const (\"__builtin_vis_fpsubs32\", CODE_FOR_fpsubs32_vis,\n+      def_builtin_const (\"__builtin_vis_fpsubs32\", CODE_FOR_sssubv2si3,\n \t\t\t v2si_ftype_v2si_v2si);\n-      def_builtin_const (\"__builtin_vis_fpsubs32s\", CODE_FOR_fpsubs32s_vis,\n+      def_builtin_const (\"__builtin_vis_fpsubs32s\", CODE_FOR_sssubsi3,\n \t\t\t v1si_ftype_v1si_v1si);\n \n       if (TARGET_ARCH64)"}, {"sha": "c41e2597b33dfb941a8f48e5d1f53bdca4a8394e", "filename": "gcc/config/sparc/sparc.md", "status": "modified", "additions": 57, "deletions": 22, "changes": 79, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1c141a7da0daee15591401fa0a24cf71cc4734c/gcc%2Fconfig%2Fsparc%2Fsparc.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1c141a7da0daee15591401fa0a24cf71cc4734c/gcc%2Fconfig%2Fsparc%2Fsparc.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.md?ref=f1c141a7da0daee15591401fa0a24cf71cc4734c", "patch": "@@ -53,7 +53,7 @@\n    (UNSPEC_FPACK32\t\t41)\n    (UNSPEC_FPACKFIX\t\t42)\n    (UNSPEC_FEXPAND\t\t43)\n-   (UNSPEC_FPMERGE\t\t44)\n+   (UNSPEC_MUL16AU\t\t44)\n    (UNSPEC_MUL16AL\t\t45)\n    (UNSPEC_MUL8UL\t\t46)\n    (UNSPEC_MULDUL\t\t47)\n@@ -89,6 +89,9 @@\n    (UNSPEC_FHADD\t\t83)\n    (UNSPEC_FHSUB\t\t84)\n    (UNSPEC_XMUL\t\t\t85)\n+   (UNSPEC_MUL8\t\t\t86)\n+   (UNSPEC_MUL8SU\t\t87)\n+   (UNSPEC_MULDSU\t\t88)\n   ])\n \n (define_constants\n@@ -8004,36 +8007,64 @@\n  [(set_attr \"type\" \"fga\")\n   (set_attr \"fptype\" \"double\")])\n \n-;; It may be possible to describe this operation as (1 indexed):\n-;; (vec_select (vec_duplicate (vec_duplicate (vec_concat 1 2)))\n-;;  1,5,10,14,19,23,28,32)\n-;; Note that (vec_merge:V8QI [(V4QI) (V4QI)] (10101010 = 170) doesn't work\n-;; because vec_merge expects all the operands to be of the same type.\n (define_insn \"fpmerge_vis\"\n   [(set (match_operand:V8QI 0 \"register_operand\" \"=e\")\n-        (unspec:V8QI [(match_operand:V4QI 1 \"register_operand\" \"f\")\n-                      (match_operand:V4QI 2 \"register_operand\" \"f\")]\n-         UNSPEC_FPMERGE))]\n+        (vec_select:V8QI\n+          (vec_concat:V8QI (match_operand:V4QI 1 \"register_operand\" \"f\")\n+                           (match_operand:V4QI 2 \"register_operand\" \"f\"))\n+          (parallel [(const_int 0) (const_int 4)\n+                     (const_int 1) (const_int 5)\n+                     (const_int 2) (const_int 6)\n+\t\t     (const_int 3) (const_int 7)])))]\n  \"TARGET_VIS\"\n  \"fpmerge\\t%1, %2, %0\"\n  [(set_attr \"type\" \"fga\")\n   (set_attr \"fptype\" \"double\")])\n \n+(define_insn \"vec_interleave_lowv8qi\"\n+  [(set (match_operand:V8QI 0 \"register_operand\" \"=e\")\n+        (vec_select:V8QI\n+          (vec_concat:V16QI (match_operand:V8QI 1 \"register_operand\" \"f\")\n+                            (match_operand:V8QI 2 \"register_operand\" \"f\"))\n+          (parallel [(const_int 0) (const_int 8)\n+                     (const_int 1) (const_int 9)\n+                     (const_int 2) (const_int 10)\n+\t\t     (const_int 3) (const_int 11)])))]\n+ \"TARGET_VIS\"\n+ \"fpmerge\\t%L1, %L2, %0\"\n+ [(set_attr \"type\" \"fga\")\n+  (set_attr \"fptype\" \"double\")])\n+\n+(define_insn \"vec_interleave_highv8qi\"\n+  [(set (match_operand:V8QI 0 \"register_operand\" \"=e\")\n+        (vec_select:V8QI\n+          (vec_concat:V16QI (match_operand:V8QI 1 \"register_operand\" \"f\")\n+                            (match_operand:V8QI 2 \"register_operand\" \"f\"))\n+          (parallel [(const_int 4) (const_int 12)\n+                     (const_int 5) (const_int 13)\n+                     (const_int 6) (const_int 14)\n+\t\t     (const_int 7) (const_int 15)])))]\n+ \"TARGET_VIS\"\n+ \"fpmerge\\t%H1, %H2, %0\"\n+ [(set_attr \"type\" \"fga\")\n+  (set_attr \"fptype\" \"double\")])\n+\n ;; Partitioned multiply instructions\n (define_insn \"fmul8x16_vis\"\n   [(set (match_operand:V4HI 0 \"register_operand\" \"=e\")\n-        (mult:V4HI (match_operand:V4QI 1 \"register_operand\" \"f\")\n-                   (match_operand:V4HI 2 \"register_operand\" \"e\")))]\n+        (unspec:V4HI [(match_operand:V4QI 1 \"register_operand\" \"f\")\n+                      (match_operand:V4HI 2 \"register_operand\" \"e\")]\n+         UNSPEC_MUL8))]\n   \"TARGET_VIS\"\n   \"fmul8x16\\t%1, %2, %0\"\n   [(set_attr \"type\" \"fpmul\")\n    (set_attr \"fptype\" \"double\")])\n \n-;; Only one of the following two insns can be a multiply.\n (define_insn \"fmul8x16au_vis\"\n   [(set (match_operand:V4HI 0 \"register_operand\" \"=e\")\n-        (mult:V4HI (match_operand:V4QI 1 \"register_operand\" \"f\")\n-                   (match_operand:V2HI 2 \"register_operand\" \"f\")))]\n+        (unspec:V4HI [(match_operand:V4QI 1 \"register_operand\" \"f\")\n+                      (match_operand:V2HI 2 \"register_operand\" \"f\")]\n+         UNSPEC_MUL16AU))]\n   \"TARGET_VIS\"\n   \"fmul8x16au\\t%1, %2, %0\"\n   [(set_attr \"type\" \"fpmul\")\n@@ -8049,11 +8080,11 @@\n   [(set_attr \"type\" \"fpmul\")\n    (set_attr \"fptype\" \"double\")])\n \n-;; Only one of the following two insns can be a multiply.\n (define_insn \"fmul8sux16_vis\"\n   [(set (match_operand:V4HI 0 \"register_operand\" \"=e\")\n-        (mult:V4HI (match_operand:V8QI 1 \"register_operand\" \"e\")\n-                   (match_operand:V4HI 2 \"register_operand\" \"e\")))]\n+        (unspec:V4HI [(match_operand:V8QI 1 \"register_operand\" \"e\")\n+                      (match_operand:V4HI 2 \"register_operand\" \"e\")]\n+         UNSPEC_MUL8SU))]\n   \"TARGET_VIS\"\n   \"fmul8sux16\\t%1, %2, %0\"\n   [(set_attr \"type\" \"fpmul\")\n@@ -8069,11 +8100,11 @@\n   [(set_attr \"type\" \"fpmul\")\n    (set_attr \"fptype\" \"double\")])\n \n-;; Only one of the following two insns can be a multiply.\n (define_insn \"fmuld8sux16_vis\"\n   [(set (match_operand:V2SI 0 \"register_operand\" \"=e\")\n-        (mult:V2SI (match_operand:V4QI 1 \"register_operand\" \"f\")\n-                   (match_operand:V2HI 2 \"register_operand\" \"f\")))]\n+        (unspec:V2SI [(match_operand:V4QI 1 \"register_operand\" \"f\")\n+                      (match_operand:V2HI 2 \"register_operand\" \"f\")]\n+         UNSPEC_MULDSU))]\n   \"TARGET_VIS\"\n   \"fmuld8sux16\\t%1, %2, %0\"\n   [(set_attr \"type\" \"fpmul\")\n@@ -8440,8 +8471,10 @@\n (define_code_iterator vis3_shift [ashift ss_ashift lshiftrt ashiftrt])\n (define_code_attr vis3_shift_insn\n   [(ashift \"fsll\") (ss_ashift \"fslas\") (lshiftrt \"fsrl\") (ashiftrt \"fsra\")])\n+(define_code_attr vis3_shift_patname\n+  [(ashift \"ashl\") (ss_ashift \"ssashl\") (lshiftrt \"lshr\") (ashiftrt \"ashr\")])\n    \n-(define_insn \"<vis3_shift_insn><vbits>_vis\"\n+(define_insn \"v<vis3_shift_patname><mode>3\"\n   [(set (match_operand:V64N8 0 \"register_operand\" \"=<vconstr>\")\n         (vis3_shift:V64N8 (match_operand:V64N8 1 \"register_operand\" \"<vconstr>\")\n                           (match_operand:V64N8 2 \"register_operand\" \"<vconstr>\")))]\n@@ -8490,8 +8523,10 @@\n (define_code_iterator vis3_addsub_ss [ss_plus ss_minus])\n (define_code_attr vis3_addsub_ss_insn\n   [(ss_plus \"fpadds\") (ss_minus \"fpsubs\")])\n+(define_code_attr vis3_addsub_ss_patname\n+  [(ss_plus \"ssadd\") (ss_minus \"sssub\")])\n \n-(define_insn \"<vis3_addsub_ss_insn><vbits>_vis\"\n+(define_insn \"<vis3_addsub_ss_patname><mode>3\"\n   [(set (match_operand:VASS 0 \"register_operand\" \"=<vconstr>\")\n         (vis3_addsub_ss:VASS (match_operand:VASS 1 \"register_operand\" \"<vconstr>\")\n                              (match_operand:VASS 2 \"register_operand\" \"<vconstr>\")))]"}]}