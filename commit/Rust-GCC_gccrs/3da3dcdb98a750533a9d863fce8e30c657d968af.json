{"sha": "3da3dcdb98a750533a9d863fce8e30c657d968af", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2RhM2RjZGI5OGE3NTA1MzNhOWQ4NjNmY2U4ZTMwYzY1N2Q5NjhhZg==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2017-07-12T17:29:11Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2017-07-12T17:29:11Z"}, "message": "cp-tree.h (DECL_CONSTRUCTOR_P, [...]): Look at identifier flags.\n\n\t* cp-tree.h (DECL_CONSTRUCTOR_P, DECL_MAYBE_IN_CHARGE_CONSTRUCTOR,\n\tDECL_DESTRUCTOR_P, DECL_MAYBE_IN_CHARGE_DESTRCTOR): Look at\n\tidentifier flags.\n\t* decl.c (grokfndecl): Set DECL_CXX_CONSTRUCTOR and\n\tDECL_CXX_DESTRUCTOR explicitly.\n\t* decl2.c (grokclassfn): Likewise.\n\t* friend.c (do_friend): Likewise.\n\t* method.c (make_thunk, make_alias_for,\n\timplicitly_declare_fn): Likewise.\n\nFrom-SVN: r250158", "tree": {"sha": "11091ea35eb14182aedb23929933dacdba16067c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/11091ea35eb14182aedb23929933dacdba16067c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3da3dcdb98a750533a9d863fce8e30c657d968af", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3da3dcdb98a750533a9d863fce8e30c657d968af", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3da3dcdb98a750533a9d863fce8e30c657d968af", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3da3dcdb98a750533a9d863fce8e30c657d968af/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1bde114aaceb7f423aaafbc62df6e5ba51a15b27", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1bde114aaceb7f423aaafbc62df6e5ba51a15b27", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1bde114aaceb7f423aaafbc62df6e5ba51a15b27"}], "stats": {"total": 42, "additions": 26, "deletions": 16}, "files": [{"sha": "178b26260988c4358db4d387216bce5b91a8ece8", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3da3dcdb98a750533a9d863fce8e30c657d968af/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3da3dcdb98a750533a9d863fce8e30c657d968af/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=3da3dcdb98a750533a9d863fce8e30c657d968af", "patch": "@@ -1,3 +1,15 @@\n+2017-07-12  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* cp-tree.h (DECL_CONSTRUCTOR_P, DECL_MAYBE_IN_CHARGE_CONSTRUCTOR,\n+\tDECL_DESTRUCTOR_P, DECL_MAYBE_IN_CHARGE_DESTRCTOR): Look at\n+\tidentifier flags.\n+\t* decl.c (grokfndecl): Set DECL_CXX_CONSTRUCTOR and\n+\tDECL_CXX_DESTRUCTOR explicitly.\n+\t* decl2.c (grokclassfn): Likewise.\n+\t* friend.c (do_friend): Likewise.\n+\t* method.c (make_thunk, make_alias_for,\n+\timplicitly_declare_fn): Likewise.\n+\n 2017-07-11  Jason Merrill  <jason@redhat.com>\n \n \tCore DR 393"}, {"sha": "665ec034d0cba22c1b40feeb42900b0ff90524d5", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3da3dcdb98a750533a9d863fce8e30c657d968af/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3da3dcdb98a750533a9d863fce8e30c657d968af/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=3da3dcdb98a750533a9d863fce8e30c657d968af", "patch": "@@ -2706,7 +2706,7 @@ struct GTY(()) lang_decl {\n /* For FUNCTION_DECLs and TEMPLATE_DECLs: nonzero means that this function\n    is a constructor.  */\n #define DECL_CONSTRUCTOR_P(NODE) \\\n-  DECL_CXX_CONSTRUCTOR_P (STRIP_TEMPLATE (NODE))\n+  IDENTIFIER_CTOR_P (DECL_NAME (NODE))\n \n /* Nonzero if NODE (a FUNCTION_DECL) is a constructor for a complete\n    object.  */\n@@ -2722,8 +2722,7 @@ struct GTY(()) lang_decl {\n    specialized in-charge constructor or the specialized not-in-charge\n    constructor.  */\n #define DECL_MAYBE_IN_CHARGE_CONSTRUCTOR_P(NODE)\t\t\\\n-  (DECL_DECLARES_FUNCTION_P (NODE) && DECL_CONSTRUCTOR_P (NODE) \\\n-   && !DECL_CLONED_FUNCTION_P (NODE))\n+  (DECL_NAME (NODE) == ctor_identifier)\n \n /* Nonzero if NODE (a FUNCTION_DECL) is a copy constructor.  */\n #define DECL_COPY_CONSTRUCTOR_P(NODE) \\\n@@ -2736,14 +2735,13 @@ struct GTY(()) lang_decl {\n /* Nonzero if NODE (a FUNCTION_DECL or TEMPLATE_DECL)\n    is a destructor.  */\n #define DECL_DESTRUCTOR_P(NODE)\t\t\t\t\\\n-  DECL_CXX_DESTRUCTOR_P (STRIP_TEMPLATE (NODE))\n+  IDENTIFIER_DTOR_P (DECL_NAME (NODE))\n \n /* Nonzero if NODE (a FUNCTION_DECL) is a destructor, but not the\n    specialized in-charge constructor, in-charge deleting constructor,\n    or the base destructor.  */\n #define DECL_MAYBE_IN_CHARGE_DESTRUCTOR_P(NODE)\t\t\t\\\n-  (DECL_DECLARES_FUNCTION_P (NODE) && DECL_DESTRUCTOR_P (NODE)\t\\\n-   && !DECL_CLONED_FUNCTION_P (NODE))\n+  (DECL_NAME (NODE) == dtor_identifier)\n \n /* Nonzero if NODE (a FUNCTION_DECL) is a destructor for a complete\n    object.  */"}, {"sha": "5b8e6a22b01ce00cac5e3a79829b3aa66d457e02", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3da3dcdb98a750533a9d863fce8e30c657d968af/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3da3dcdb98a750533a9d863fce8e30c657d968af/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=3da3dcdb98a750533a9d863fce8e30c657d968af", "patch": "@@ -8513,11 +8513,11 @@ grokfndecl (tree ctype,\n     case sfk_constructor:\n     case sfk_copy_constructor:\n     case sfk_move_constructor:\n-      DECL_CONSTRUCTOR_P (decl) = 1;\n+      DECL_CXX_CONSTRUCTOR_P (decl) = 1;\n       DECL_NAME (decl) = ctor_identifier;\n       break;\n     case sfk_destructor:\n-      DECL_DESTRUCTOR_P (decl) = 1;\n+      DECL_CXX_DESTRUCTOR_P (decl) = 1;\n       DECL_NAME (decl) = dtor_identifier;\n       break;\n     default:"}, {"sha": "4fa4ad9740f89206840dd5af58bb133677d3293e", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3da3dcdb98a750533a9d863fce8e30c657d968af/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3da3dcdb98a750533a9d863fce8e30c657d968af/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=3da3dcdb98a750533a9d863fce8e30c657d968af", "patch": "@@ -342,7 +342,7 @@ grokclassfn (tree ctype, tree function, enum overload_flags flags)\n   DECL_CONTEXT (function) = ctype;\n \n   if (flags == DTOR_FLAG)\n-    DECL_DESTRUCTOR_P (function) = 1;\n+    DECL_CXX_DESTRUCTOR_P (function) = 1;\n \n   if (flags == DTOR_FLAG || DECL_CONSTRUCTOR_P (function))\n     maybe_retrofit_in_chrg (function);"}, {"sha": "ef93bfe39ec452c1cc6530a632d3c5514c04ef06", "filename": "gcc/cp/friend.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3da3dcdb98a750533a9d863fce8e30c657d968af/gcc%2Fcp%2Ffriend.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3da3dcdb98a750533a9d863fce8e30c657d968af/gcc%2Fcp%2Ffriend.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ffriend.c?ref=3da3dcdb98a750533a9d863fce8e30c657d968af", "patch": "@@ -529,7 +529,7 @@ do_friend (tree ctype, tree declarator, tree decl,\n \n       /* A method friend.  */\n       if (flags == NO_SPECIAL && declarator == cname)\n-\tDECL_CONSTRUCTOR_P (decl) = 1;\n+\tDECL_CXX_CONSTRUCTOR_P (decl) = 1;\n \n       grokclassfn (ctype, decl, flags);\n "}, {"sha": "0a4a9540622ba1ef87141f450934f43098b4f804", "filename": "gcc/cp/method.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3da3dcdb98a750533a9d863fce8e30c657d968af/gcc%2Fcp%2Fmethod.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3da3dcdb98a750533a9d863fce8e30c657d968af/gcc%2Fcp%2Fmethod.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fmethod.c?ref=3da3dcdb98a750533a9d863fce8e30c657d968af", "patch": "@@ -137,8 +137,8 @@ make_thunk (tree function, bool this_adjusting,\n   DECL_SAVED_FUNCTION_DATA (thunk) = NULL;\n   /* The thunk itself is not a constructor or destructor, even if\n      the thing it is thunking to is.  */\n-  DECL_DESTRUCTOR_P (thunk) = 0;\n-  DECL_CONSTRUCTOR_P (thunk) = 0;\n+  DECL_CXX_DESTRUCTOR_P (thunk) = 0;\n+  DECL_CXX_CONSTRUCTOR_P (thunk) = 0;\n   DECL_EXTERNAL (thunk) = 1;\n   DECL_ARTIFICIAL (thunk) = 1;\n   /* The THUNK is not a pending inline, even if the FUNCTION is.  */\n@@ -223,8 +223,8 @@ make_alias_for (tree target, tree newid)\n   if (TREE_CODE (alias) == FUNCTION_DECL)\n     {\n       DECL_SAVED_FUNCTION_DATA (alias) = NULL;\n-      DECL_DESTRUCTOR_P (alias) = 0;\n-      DECL_CONSTRUCTOR_P (alias) = 0;\n+      DECL_CXX_DESTRUCTOR_P (alias) = 0;\n+      DECL_CXX_CONSTRUCTOR_P (alias) = 0;\n       DECL_PENDING_INLINE_P (alias) = 0;\n       DECL_DECLARED_INLINE_P (alias) = 0;\n       DECL_INITIAL (alias) = error_mark_node;\n@@ -2058,9 +2058,9 @@ implicitly_declare_fn (special_function_kind kind, tree type,\n     /* Assignment operator.  */\n     SET_OVERLOADED_OPERATOR_CODE (fn, NOP_EXPR);\n   else if (IDENTIFIER_CTOR_P (name))\n-    DECL_CONSTRUCTOR_P (fn) = true;\n+    DECL_CXX_CONSTRUCTOR_P (fn) = true;\n   else\n-    DECL_DESTRUCTOR_P (fn) = true;\n+    DECL_CXX_DESTRUCTOR_P (fn) = true;\n \n   SET_DECL_ALIGN (fn, MINIMUM_METHOD_BOUNDARY);\n "}]}