{"sha": "5c13b77cb041e4f56b71448b6ce94b7c98a29812", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWMxM2I3N2NiMDQxZTRmNTZiNzE0NDhiNmNlOTRiN2M5OGEyOTgxMg==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2007-09-27T18:06:10Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2007-09-27T18:06:10Z"}, "message": "testsuite_hooks.cc (set_memory_limits): Adjust x86_64 virtual memory setting for libgomp.\n\n2007-09-27  Benjamin Kosnik  <bkoz@redhat.com>\n\n\t* testsuite/util/testsuite_hooks.cc (set_memory_limits): Adjust\n\tx86_64 virtual memory setting for libgomp.\n\nFrom-SVN: r128842", "tree": {"sha": "a7ab8a8d110e1a9b8ec7564b5e9a1de1f944f7d5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a7ab8a8d110e1a9b8ec7564b5e9a1de1f944f7d5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5c13b77cb041e4f56b71448b6ce94b7c98a29812", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c13b77cb041e4f56b71448b6ce94b7c98a29812", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5c13b77cb041e4f56b71448b6ce94b7c98a29812", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c13b77cb041e4f56b71448b6ce94b7c98a29812/comments", "author": null, "committer": null, "parents": [{"sha": "b2a00c8984668b802b3331db38cd7f530f886842", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b2a00c8984668b802b3331db38cd7f530f886842", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b2a00c8984668b802b3331db38cd7f530f886842"}], "stats": {"total": 23, "additions": 14, "deletions": 9}, "files": [{"sha": "88f7d858f54aa9c5edc45f61e42645e493632b1b", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c13b77cb041e4f56b71448b6ce94b7c98a29812/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c13b77cb041e4f56b71448b6ce94b7c98a29812/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=5c13b77cb041e4f56b71448b6ce94b7c98a29812", "patch": "@@ -1,3 +1,8 @@\n+2007-09-27  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\t* testsuite/util/testsuite_hooks.cc (set_memory_limits): Adjust\n+\tx86_64 virtual memory setting for libgomp.\n+\t\n 2007-09-26  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* include/bits/stl_algo.h: Add return type information to comments."}, {"sha": "632e2625c422dc205d6c35a2df27a30460ac98c1", "filename": "libstdc++-v3/testsuite/util/testsuite_hooks.cc", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c13b77cb041e4f56b71448b6ce94b7c98a29812/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Ftestsuite_hooks.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c13b77cb041e4f56b71448b6ce94b7c98a29812/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Ftestsuite_hooks.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Ftestsuite_hooks.cc?ref=5c13b77cb041e4f56b71448b6ce94b7c98a29812", "patch": "@@ -92,17 +92,17 @@ namespace __gnu_test\n     setrlimit(RLIMIT_VMEM, &r);\n #endif\n \n-    // Virtual memory.\n-    // On x86_64-linux, the default is -z max-page-size=0x200000\n-    // which means up to 2MB of address space are accounted for\n-    // PROT_NONE mappings between text and data segments of\n-    // each shared library.  There are 4 shared libs involved\n-    // in addition to the dynamic linker.  Use at least 16MB address space\n-    // limit.\n+    // Virtual memory.  On x86_64-linux, the default is -z\n+    // max-page-size=0x200000 which means up to 2MB of address space\n+    // are accounted for PROT_NONE mappings between text and data\n+    // segments of each shared library.  There are 4 shared libs\n+    // involved in addition to the dynamic linker, maybe 5 if libgomp\n+    // is being used as well.  Use at least 20MB address space limit.\n #if defined(__x86_64__) && defined(__linux__)\n-    if (limit < 16777216)\n-      limit = 16777216;\n+    if (limit < 20971520)\n+      limit = 20971520;\n #endif\n+\n     // On HP-UX 11.23, a trivial C++ program that sets RLIMIT_AS to\n     // anything less than 128MB cannot \"malloc\" even 1K of memory.\n     // Therefore, we skip RLIMIT_AS on HP-UX."}]}