{"sha": "08a8c6b65b22e0c125c1bd8fcc5428f72b262ca0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDhhOGM2YjY1YjIyZTBjMTI1YzFiZDhmY2M1NDI4ZjcyYjI2MmNhMA==", "commit": {"author": {"name": "Jan Beulich", "email": "jbeulich@novell.com", "date": "2004-07-08T06:26:08Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2004-07-08T06:26:08Z"}, "message": "varasm.c (assemble_variable): Use assemble_zeros for zero-initialized variables.\n\n        * varasm.c (assemble_variable): Use assemble_zeros for\n        zero-initialized variables.\n        (categorize_decl_for_section): Honor flag_zero_initialized_in_bss\n        for SECCAT_BSS and SECCAT_TBSS.\n\nCo-Authored-By: Richard Henderson <rth@redhat.com>\n\nFrom-SVN: r84271", "tree": {"sha": "7e47b63aa99ca958a19cf2db7272dd7e69da0513", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7e47b63aa99ca958a19cf2db7272dd7e69da0513"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/08a8c6b65b22e0c125c1bd8fcc5428f72b262ca0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08a8c6b65b22e0c125c1bd8fcc5428f72b262ca0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/08a8c6b65b22e0c125c1bd8fcc5428f72b262ca0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08a8c6b65b22e0c125c1bd8fcc5428f72b262ca0/comments", "author": null, "committer": null, "parents": [{"sha": "78a47b1d2e0d7fc33dad3866446e5ddc2097e567", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78a47b1d2e0d7fc33dad3866446e5ddc2097e567", "html_url": "https://github.com/Rust-GCC/gccrs/commit/78a47b1d2e0d7fc33dad3866446e5ddc2097e567"}], "stats": {"total": 32, "additions": 25, "deletions": 7}, "files": [{"sha": "66b707546d79dbbbcac077763f9480c3b4f498b8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08a8c6b65b22e0c125c1bd8fcc5428f72b262ca0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08a8c6b65b22e0c125c1bd8fcc5428f72b262ca0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=08a8c6b65b22e0c125c1bd8fcc5428f72b262ca0", "patch": "@@ -1,9 +1,17 @@\n-2004-07-06 Jan Beulich <jbeulich@novell.com>\n+2004-07-07  Jan Beulich  <jbeulich@novell.com>\n+\t    Richard Henderson  <rth@redhat.com>\n+\n+\t* varasm.c (assemble_variable): Use assemble_zeros for\n+\tzero-initialized variables.\n+\t(categorize_decl_for_section): Honor flag_zero_initialized_in_bss\n+\tfor SECCAT_BSS and SECCAT_TBSS.\n+\n+2004-07-07  Jan Beulich  <jbeulich@novell.com>\n \n \t* varasm.c (asm_output_bss): Don't declare unless BSS_SECTION_ASM_OP.\n-                                                                                \n-        * expmed.c (emit_store_flag): Also special-case double-word\n-        (in-)equality comparison against -1.\n+\n+\t* expmed.c (emit_store_flag): Also special-case double-word\n+\t(in-)equality comparison against -1.\n \n \t* config/i386/i386.c (ix86_gimplify_va_arg): Don't need temporary for\n \tpassing arguments the containers for which are registers."}, {"sha": "37a7a7cce1c955e9bca7e14da1076dbdc76152e8", "filename": "gcc/varasm.c", "status": "modified", "additions": 13, "deletions": 3, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08a8c6b65b22e0c125c1bd8fcc5428f72b262ca0/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08a8c6b65b22e0c125c1bd8fcc5428f72b262ca0/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=08a8c6b65b22e0c125c1bd8fcc5428f72b262ca0", "patch": "@@ -1563,7 +1563,9 @@ assemble_variable (tree decl, int top_level ATTRIBUTE_UNUSED,\n \n   if (!dont_output_data)\n     {\n-      if (DECL_INITIAL (decl) && DECL_INITIAL (decl) != error_mark_node)\n+      if (DECL_INITIAL (decl)\n+\t  && DECL_INITIAL (decl) != error_mark_node\n+\t  && !initializer_zerop (DECL_INITIAL (decl)))\n \t/* Output the actual data.  */\n \toutput_constant (DECL_INITIAL (decl),\n \t\t\t tree_low_cst (DECL_SIZE_UNIT (decl), 1),\n@@ -4611,7 +4613,11 @@ categorize_decl_for_section (tree decl, int reloc, int shlib)\n   else if (TREE_CODE (decl) == VAR_DECL)\n     {\n       if (DECL_INITIAL (decl) == NULL\n-\t  || DECL_INITIAL (decl) == error_mark_node)\n+\t  || DECL_INITIAL (decl) == error_mark_node\n+\t  || (flag_zero_initialized_in_bss\n+\t      /* Leave constant zeroes in .rodata so they can be shared.  */\n+\t      && !TREE_READONLY (decl)\n+\t      && initializer_zerop (DECL_INITIAL (decl))))\n \tret = SECCAT_BSS;\n       else if (! TREE_READONLY (decl)\n \t       || TREE_SIDE_EFFECTS (decl)\n@@ -4653,7 +4659,11 @@ categorize_decl_for_section (tree decl, int reloc, int shlib)\n   /* There are no read-only thread-local sections.  */\n   if (TREE_CODE (decl) == VAR_DECL && DECL_THREAD_LOCAL (decl))\n     {\n-      if (ret == SECCAT_BSS)\n+      /* Note that this would be *just* SECCAT_BSS, except that there's\n+\t no concept of a read-only thread-local-data section.  */\n+      if (ret == SECCAT_BSS\n+\t  || (flag_zero_initialized_in_bss\n+\t      && initializer_zerop (DECL_INITIAL (decl))))\n \tret = SECCAT_TBSS;\n       else\n \tret = SECCAT_TDATA;"}]}