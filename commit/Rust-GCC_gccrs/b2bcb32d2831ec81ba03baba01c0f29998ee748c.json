{"sha": "b2bcb32d2831ec81ba03baba01c0f29998ee748c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjJiY2IzMmQyODMxZWM4MWJhMDNiYWJhMDFjMGYyOTk5OGVlNzQ4Yw==", "commit": {"author": {"name": "H.J. Lu", "email": "hjl@gnu.org", "date": "2001-08-08T15:40:57Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2001-08-08T15:40:57Z"}, "message": "mips.c (mips_unique_section): New.\n\n2001-08-08  H.J. Lu <hjl@gnu.org>\n\n\t* config/mips/mips.c (mips_unique_section): New. Copied from\n\tconfig/mips/elf.h.\n\n\t* config/mips/mips-protos.h (mips_unique_section): New\n\tprototype.\n\n\t* config/mips/elf.h (UNIQUE_SECTION): Use mips_unique_section.\n\n\t* config/mips/little.h: New. Generic little endian mips\n\ttargets. Only mips*-*-linux* is converted to use it so far.\n\n\t* config/mips/linux.h: Include \"gofast.h\" and \"mips/mips.h\".\n\t(WCHAR_TYPE): Defined\n\t(WCHAR_TYPE_SIZE): Likewise.\n\t(INIT_SUBTARGET_OPTABS): Likewise.\n\t(BSS_SECTION_ASM_OP): Likewise.\n\t(SBSS_SECTION_ASM_OP): Likewise.\n\t(ASM_OUTPUT_ALIGNED_BSS): Likewise.\n\t(ASM_DECLARE_OBJECT_NAME): Likewise.\n\t(UNIQUE_SECTION): Likewise.\n\t(EXTRA_SECTIONS): Likewise.\n\t(ASM_OUTPUT_CONSTRUCTOR): Likewise.\n\t(ASM_OUTPUT_DESTRUCTOR): Likewise.\n\t(ASM_OUTPUT_DEF): Likewise.\n\t(HANDLE_SYSV_PRAGMA): Removed.\n\t(NO_IMPLICIT_EXTERN_C): Likewise.\n\t(TARGET_MEM_FUNCTIONS): Likewise.\n\t(STARTFILE_SPEC): Likewise.\n\t(ENDFILE_SPEC): Likewise.\n\t(LIB_SPEC): Likewise.\n\t(INVOKE__main): Likewise.\n\t(CTOR_LIST_BEGIN): Likewise.\n\t(CTOR_LIST_END): Likewise.\n\t(DTOR_LIST_BEGIN): Likewise.\n\t(DTOR_LIST_END): Likewise.\n\t(SET_ASM_OP): Likewise.\n\t(ASM_OUTPUT_SOURCE_LINE): Likewise.\n\t(ASM_OUTPUT_DEF): Likewise.\n\t(ASM_OUTPUT_IDENT): Likewise.\n\n\t* config/mips/mips.h (ASM_SPEC): Undefine before define.\n\t(CPLUSPLUS_CPP_SPEC): Likewise.\n\t(ASM_APP_ON) Redefine only if not defined.\n\t(ASM_APP_OFF): Likewise.\n\t(ASM_OUTPUT_SOURCE_LINE): Likewise.\n\t(ASM_OUTPUT_IDENT): Likewise.\n\n\t* config.gcc: Update tm_file for Linux/mips.\n\nFrom-SVN: r44718", "tree": {"sha": "90c84bf177629043c2093e12abfc569d7a8d4003", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/90c84bf177629043c2093e12abfc569d7a8d4003"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b2bcb32d2831ec81ba03baba01c0f29998ee748c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b2bcb32d2831ec81ba03baba01c0f29998ee748c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b2bcb32d2831ec81ba03baba01c0f29998ee748c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b2bcb32d2831ec81ba03baba01c0f29998ee748c/comments", "author": null, "committer": null, "parents": [{"sha": "917004442036172e64e70b1d0a4a7392069af9cd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/917004442036172e64e70b1d0a4a7392069af9cd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/917004442036172e64e70b1d0a4a7392069af9cd"}], "stats": {"total": 427, "additions": 286, "deletions": 141}, "files": [{"sha": "3e9cb99cdaaffb5d3106ff4104ac51e376e6901f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2bcb32d2831ec81ba03baba01c0f29998ee748c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2bcb32d2831ec81ba03baba01c0f29998ee748c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b2bcb32d2831ec81ba03baba01c0f29998ee748c", "patch": "@@ -1,3 +1,54 @@\n+2001-08-08  H.J. Lu <hjl@gnu.org>\n+\n+\t* config/mips/mips.c (mips_unique_section): New. Copied from\n+\tconfig/mips/elf.h.\n+\n+\t* config/mips/mips-protos.h (mips_unique_section): New\n+\tprototype.\n+\n+\t* config/mips/elf.h (UNIQUE_SECTION): Use mips_unique_section.\n+\n+\t* config/mips/little.h: New. Generic little endian mips\n+\ttargets. Only mips*-*-linux* is converted to use it so far.\n+\n+\t* config/mips/linux.h: Include \"gofast.h\" and \"mips/mips.h\".\n+\t(WCHAR_TYPE): Defined\n+\t(WCHAR_TYPE_SIZE): Likewise.\n+\t(INIT_SUBTARGET_OPTABS): Likewise.\n+\t(BSS_SECTION_ASM_OP): Likewise.\n+\t(SBSS_SECTION_ASM_OP): Likewise.\n+\t(ASM_OUTPUT_ALIGNED_BSS): Likewise.\n+\t(ASM_DECLARE_OBJECT_NAME): Likewise.\n+\t(UNIQUE_SECTION): Likewise.\n+\t(EXTRA_SECTIONS): Likewise.\n+\t(ASM_OUTPUT_CONSTRUCTOR): Likewise.\n+\t(ASM_OUTPUT_DESTRUCTOR): Likewise.\n+\t(ASM_OUTPUT_DEF): Likewise.\n+\t(HANDLE_SYSV_PRAGMA): Removed.\n+\t(NO_IMPLICIT_EXTERN_C): Likewise.\n+\t(TARGET_MEM_FUNCTIONS): Likewise.\n+\t(STARTFILE_SPEC): Likewise.\n+\t(ENDFILE_SPEC): Likewise.\n+\t(LIB_SPEC): Likewise.\n+\t(INVOKE__main): Likewise.\n+\t(CTOR_LIST_BEGIN): Likewise.\n+\t(CTOR_LIST_END): Likewise.\n+\t(DTOR_LIST_BEGIN): Likewise.\n+\t(DTOR_LIST_END): Likewise.\n+\t(SET_ASM_OP): Likewise.\n+\t(ASM_OUTPUT_SOURCE_LINE): Likewise.\n+\t(ASM_OUTPUT_DEF): Likewise.\n+\t(ASM_OUTPUT_IDENT): Likewise.\n+\n+\t* config/mips/mips.h (ASM_SPEC): Undefine before define.\n+\t(CPLUSPLUS_CPP_SPEC): Likewise.\n+\t(ASM_APP_ON) Redefine only if not defined.\n+\t(ASM_APP_OFF): Likewise.\n+\t(ASM_OUTPUT_SOURCE_LINE): Likewise.\n+\t(ASM_OUTPUT_IDENT): Likewise.\n+\n+\t* config.gcc: Update tm_file for Linux/mips.\n+\n 2001-08-08  Bernd Schmidt  <bernds@redhat.com>\n \n \t* cselib.c (cselib_record_sets): If insn is predicated, turn"}, {"sha": "087101dc865cee7ddf4698c4be8a559be3dcf16e", "filename": "gcc/config.gcc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2bcb32d2831ec81ba03baba01c0f29998ee748c/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2bcb32d2831ec81ba03baba01c0f29998ee748c/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=b2bcb32d2831ec81ba03baba01c0f29998ee748c", "patch": "@@ -2200,9 +2200,9 @@ mipsel-*-netbsd* | mips-dec-netbsd*)    # Decstation running NetBSD\n \t;;\n mips*-*-linux*)\t\t\t\t# Linux MIPS, either endian.\n \txmake_file=x-linux\n+\ttm_file=\"linux.h mips/linux.h\"\n \tcase $machine in\n-\t       mips*el-*)  tm_file=\"elfos.h mips/elfl.h mips/linux.h\" ;;\n-\t       *)\t  tm_file=\"elfos.h mips/elf.h mips/linux.h\" ;;\n+\t       mips*el-*)  tm_file=\"mips/little.h $tm_file\" ;;\n \tesac\n \ttmake_file=\"t-slibgcc-elf-ver t-linux\"\n \textra_parts=\"crtbegin.o crtbeginS.o crtend.o crtendS.o\""}, {"sha": "4b88363e1ddf1a34468d380280045116652684cc", "filename": "gcc/config/mips/elf.h", "status": "modified", "additions": 2, "deletions": 64, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2bcb32d2831ec81ba03baba01c0f29998ee748c/gcc%2Fconfig%2Fmips%2Felf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2bcb32d2831ec81ba03baba01c0f29998ee748c/gcc%2Fconfig%2Fmips%2Felf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Felf.h?ref=b2bcb32d2831ec81ba03baba01c0f29998ee748c", "patch": "@@ -197,70 +197,8 @@ do {\t\t\t\t\t\t\t\t\t \\\n \n #define MAKE_DECL_ONE_ONLY(DECL) (DECL_WEAK (DECL) = 1)\n #undef UNIQUE_SECTION\n-#define UNIQUE_SECTION(DECL,RELOC)\t\t\t\t\t   \\\n-do {\t\t\t\t\t\t\t\t\t   \\\n-  int len, size, sec;\t\t\t\t\t\t\t   \\\n-  char *name, *string, *prefix;\t\t\t\t\t\t   \\\n-  static char *prefixes[4][2] = {\t\t\t\t\t   \\\n-    { \".text.\", \".gnu.linkonce.t.\" },\t\t\t\t\t   \\\n-    { \".rodata.\", \".gnu.linkonce.r.\" },\t\t\t\t\t   \\\n-    { \".data.\", \".gnu.linkonce.d.\" },\t\t\t\t\t   \\\n-    { \".sdata.\", \".gnu.linkonce.s.\" }\t\t\t\t\t   \\\n-  };\t\t\t\t\t\t\t\t\t   \\\n-\t\t\t\t\t\t\t\t\t   \\\n-  name = IDENTIFIER_POINTER (DECL_ASSEMBLER_NAME (DECL));\t\t   \\\n-  size = int_size_in_bytes (TREE_TYPE (decl));\t\t\t\t   \\\n-\t\t\t\t\t\t\t\t\t   \\\n-  /* Determine the base section we are interested in:\t\t\t   \\\n-     0=text, 1=rodata, 2=data, 3=sdata, [4=bss].  */\t\t\t   \\\n-  if (TREE_CODE (DECL) == FUNCTION_DECL)\t\t\t\t   \\\n-    sec = 0;\t\t\t\t\t\t\t\t   \\\n-  else if (DECL_INITIAL (DECL) == 0\t\t\t\t\t   \\\n-           || DECL_INITIAL (DECL) == error_mark_node)\t\t\t   \\\n-    sec = 2;\t\t\t\t\t\t\t\t   \\\n-  else if ((TARGET_EMBEDDED_PIC || TARGET_MIPS16)\t\t\t   \\\n-      && TREE_CODE (decl) == STRING_CST\t\t\t\t\t   \\\n-      && !flag_writable_strings)\t\t\t\t\t   \\\n-    {\t\t\t\t\t\t\t\t\t   \\\n-      /* For embedded position independent code, put constant strings\t   \\\n-\t in the text section, because the data section is limited to\t   \\\n-\t 64K in size.  For mips16 code, put strings in the text\t\t   \\\n-\t section so that a PC relative load instruction can be used to\t   \\\n-\t get their address.  */\t\t\t\t\t\t   \\\n-      sec = 0;\t\t\t\t\t\t\t\t   \\\n-    }\t\t\t\t\t\t\t\t\t   \\\n-  else if (TARGET_EMBEDDED_DATA)\t\t\t\t\t   \\\n-    {\t\t\t\t\t\t\t\t\t   \\\n-      /* For embedded applications, always put an object in read-only data \\\n-\t if possible, in order to reduce RAM usage.  */\t\t\t   \\\n-\t\t\t\t\t\t\t\t\t   \\\n-      if (DECL_READONLY_SECTION (DECL, RELOC))\t\t\t\t   \\\n-\tsec = 1;\t\t\t\t\t\t\t   \\\n-      else if (size > 0 && size <= mips_section_threshold)\t\t   \\\n-\tsec = 3;\t\t\t\t\t\t\t   \\\n-      else\t\t\t\t\t\t\t\t   \\\n-\tsec = 2;\t\t\t\t\t\t\t   \\\n-    }\t\t\t\t\t\t\t\t\t   \\\n-  else\t\t\t\t\t\t\t\t\t   \\\n-    {\t\t\t\t\t\t\t\t\t   \\\n-      /* For hosted applications, always put an object in small data if\t   \\\n-\t possible, as this gives the best performance.  */\t\t   \\\n-\t\t\t\t\t\t\t\t\t   \\\n-      if (size > 0 && size <= mips_section_threshold)\t\t\t   \\\n-\tsec = 3;\t\t\t\t\t\t\t   \\\n-      else if (DECL_READONLY_SECTION (DECL, RELOC))\t\t\t   \\\n-\tsec = 1;\t\t\t\t\t\t\t   \\\n-      else\t\t\t\t\t\t\t\t   \\\n-\tsec = 2;\t\t\t\t\t\t\t   \\\n-    }\t\t\t\t\t\t\t\t\t   \\\n-\t\t\t\t\t\t\t\t\t   \\\n-  prefix = prefixes[sec][DECL_ONE_ONLY (DECL)];\t\t\t\t   \\\n-  len = strlen (name) + strlen (prefix);\t\t\t\t   \\\n-  string = alloca (len + 1);\t\t\t\t\t\t   \\\n-  sprintf (string, \"%s%s\", prefix, name);\t\t\t\t   \\\n-\t\t\t\t\t\t\t\t\t   \\\n-  DECL_SECTION_NAME (DECL) = build_string (len, string);\t\t   \\\n-} while (0)\n+#define UNIQUE_SECTION(DECL,RELOC) \\\n+  mips_unique_section ((DECL), (RELOC))\n \n /* Support the ctors/dtors and other sections.  */\n  "}, {"sha": "497e4465f62205c26a03f08d7021f416932f1a4c", "filename": "gcc/config/mips/linux.h", "status": "modified", "additions": 126, "deletions": 73, "changes": 199, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2bcb32d2831ec81ba03baba01c0f29998ee748c/gcc%2Fconfig%2Fmips%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2bcb32d2831ec81ba03baba01c0f29998ee748c/gcc%2Fconfig%2Fmips%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Flinux.h?ref=b2bcb32d2831ec81ba03baba01c0f29998ee748c", "patch": "@@ -18,6 +18,128 @@ along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n+#include \"gofast.h\"\n+\n+/* US Software GOFAST library support.  */\n+#define INIT_SUBTARGET_OPTABS INIT_GOFAST_OPTABS\n+\n+#include \"mips/mips.h\"\n+\n+#undef WCHAR_TYPE\n+#define WCHAR_TYPE \"int\"\n+\n+#undef WCHAR_TYPE_SIZE\n+#define WCHAR_TYPE_SIZE 32\n+\n+/* If defined, a C expression whose value is a string containing the\n+   assembler operation to identify the following data as\n+   uninitialized global data.  If not defined, and neither\n+   `ASM_OUTPUT_BSS' nor `ASM_OUTPUT_ALIGNED_BSS' are defined,\n+   uninitialized global data will be output in the data section if\n+   `-fno-common' is passed, otherwise `ASM_OUTPUT_COMMON' will be\n+   used.  */\n+#define BSS_SECTION_ASM_OP\t\"\\t.section\\t.bss\"\n+\n+#define SBSS_SECTION_ASM_OP\t\"\\t.section .sbss\"\n+\n+/* Like `ASM_OUTPUT_BSS' except takes the required alignment as a\n+   separate, explicit argument.  If you define this macro, it is used\n+   in place of `ASM_OUTPUT_BSS', and gives you more flexibility in\n+   handling the required alignment of the variable.  The alignment is\n+   specified as the number of bits.\n+\n+   Try to use function `asm_output_aligned_bss' defined in file\n+   `varasm.c' when defining this macro. */\n+#define ASM_OUTPUT_ALIGNED_BSS(FILE, DECL, NAME, SIZE, ALIGN)\t\\\n+do {\t\t\t\t\t\t\t\t\\\n+  ASM_GLOBALIZE_LABEL (FILE, NAME);\t\t\t\t\\\n+  if (SIZE > 0 && SIZE <= mips_section_threshold)\t\t\\\n+    sbss_section ();\t\t\t\t\t\t\\\n+  else\t\t\t\t\t\t\t\t\\\n+    bss_section ();\t\t\t\t\t\t\\\n+  ASM_OUTPUT_ALIGN (FILE, floor_log2 (ALIGN / BITS_PER_UNIT));\t\\\n+  last_assemble_variable_decl = DECL;\t\t\t\t\\\n+  ASM_DECLARE_OBJECT_NAME (FILE, NAME, DECL);\t\t\t\\\n+  ASM_OUTPUT_SKIP (FILE, SIZE ? SIZE : 1);\t\t\t\\\n+} while (0)\n+\n+/* These macros generate the special .type and .size directives which\n+   are used to set the corresponding fields of the linker symbol table\n+   entries in an ELF object file under SVR4.  These macros also output\n+   the starting labels for the relevant functions/objects.  */\n+\n+/* Write the extra assembler code needed to declare an object properly.  */\n+\n+#undef ASM_DECLARE_OBJECT_NAME\n+#define ASM_DECLARE_OBJECT_NAME(FILE, NAME, DECL)\t\t\\\n+  do {\t\t\t\t\t\t\t\t\\\n+    fprintf (FILE, \"%s\", TYPE_ASM_OP);\t\t\t\t\\\n+    assemble_name (FILE, NAME);\t\t\t\t\t\\\n+    putc (',', FILE);\t\t\t\t\t\t\\\n+    fprintf (FILE, TYPE_OPERAND_FMT, \"object\");\t\t\t\\\n+    putc ('\\n', FILE);\t\t\t\t\t\t\\\n+    size_directive_output = 0;\t\t\t\t\t\\\n+    if (!flag_inhibit_size_directive && DECL_SIZE (DECL))\t\\\n+      {\t\t\t\t\t\t\t\t\\\n+\tsize_directive_output = 1;\t\t\t\t\\\n+\tfprintf (FILE, \"%s\", SIZE_ASM_OP);\t\t\t\\\n+\tassemble_name (FILE, NAME);\t\t\t\t\\\n+\tfprintf (FILE, \",%d\\n\",\t\t\t\t\t\\\n+\t\t int_size_in_bytes (TREE_TYPE (DECL)));\t\t\\\n+      }\t\t\t\t\t\t\t\t\\\n+    mips_declare_object (FILE, NAME, \"\", \":\\n\", 0);\t\t\\\n+  } while (0)\n+\n+#undef UNIQUE_SECTION\n+#define UNIQUE_SECTION(DECL,RELOC) \\\n+  mips_unique_section ((DECL), (RELOC))\n+\n+/* A list of other sections which the compiler might be \"in\" at any\n+   given time.  */\n+#undef EXTRA_SECTIONS\n+#define EXTRA_SECTIONS in_sdata, in_sbss, in_rdata, in_ctors, in_dtors\n+ \n+#undef EXTRA_SECTION_FUNCTIONS\n+#define EXTRA_SECTION_FUNCTIONS                                         \\\n+  SECTION_FUNCTION_TEMPLATE(sdata_section, in_sdata, SDATA_SECTION_ASM_OP) \\\n+  SECTION_FUNCTION_TEMPLATE(sbss_section, in_sbss, SBSS_SECTION_ASM_OP) \\\n+  SECTION_FUNCTION_TEMPLATE(rdata_section, in_rdata, RDATA_SECTION_ASM_OP) \\\n+  SECTION_FUNCTION_TEMPLATE(ctors_section, in_ctors, CTORS_SECTION_ASM_OP) \\\n+  SECTION_FUNCTION_TEMPLATE(dtors_section, in_dtors, DTORS_SECTION_ASM_OP)\n+\n+#define SECTION_FUNCTION_TEMPLATE(FN, ENUM, OP)\t\t\t\\\n+void FN ()\t\t\t\t\t\t\t\\\n+{\t\t\t\t\t\t\t\t\\\n+  if (in_section != ENUM)\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\t\\\n+      fprintf (asm_out_file, \"%s\\n\", OP);\t\t\t\\\n+      in_section = ENUM;\t\t\t\t\t\\\n+    }\t\t\t\t\t\t\t\t\\\n+}\n+\n+/* A C statement (sans semicolon) to output an element in the table of\n+   global constructors.  */\n+#undef ASM_OUTPUT_CONSTRUCTOR\n+#define ASM_OUTPUT_CONSTRUCTOR(FILE,NAME)\t\t\t  \\\n+  do {\t\t\t\t\t\t\t\t  \\\n+    ctors_section ();\t\t\t\t\t\t  \\\n+    fprintf (FILE, \"\\t%s\\t\", TARGET_LONG64 ? \".dword\" : \".word\"); \\\n+    assemble_name (FILE, NAME);\t\t\t\t\t  \\\n+    fprintf (FILE, \"\\n\");\t\t\t\t\t  \\\n+  } while (0)\n+\n+\n+/* A C statement (sans semicolon) to output an element in the table of\n+   global destructors.  */\n+#undef ASM_OUTPUT_DESTRUCTOR\n+#define ASM_OUTPUT_DESTRUCTOR(FILE,NAME)\t\t\t  \\\n+  do {\t\t\t\t\t\t\t\t  \\\n+    dtors_section ();\t\t\t\t\t\t  \\\n+    fprintf (FILE, \"\\t%s\\t\", TARGET_LONG64 ? \".dword\" : \".word\"); \\\n+    assemble_name (FILE, NAME);\t\t\t\t\t  \\\n+    fprintf (FILE, \"\\n\");\t\t\t\t\t  \\\n+  } while (0)\n+\n #undef TARGET_VERSION\n #if TARGET_ENDIAN_DEFAULT == 0\n #define TARGET_VERSION fprintf (stderr, \" (MIPSel GNU/Linux with ELF)\");\n@@ -35,17 +157,6 @@ Boston, MA 02111-1307, USA.  */\n #undef TARGET_DEFAULT\n #define TARGET_DEFAULT (MASK_ABICALLS|MASK_GAS)\n \n-\n-/* Handle #pragma weak and #pragma pack.  */\n-#undef HANDLE_SYSV_PRAGMA\n-#define HANDLE_SYSV_PRAGMA 1\n-\n-/* Don't assume anything about the header files.  */\n-#define NO_IMPLICIT_EXTERN_C\n-\n-/* Generate calls to memcpy, etc., not bcopy, etc.  */\n-#define TARGET_MEM_FUNCTIONS\n-\n /* Specify predefined symbols in preprocessor.  */\n #undef CPP_PREDEFINES\n #if TARGET_ENDIAN_DEFAULT == 0\n@@ -112,40 +223,12 @@ Boston, MA 02111-1307, USA.  */\n -D_GNU_SOURCE %(cpp) \\\n \"\n \n-/* Provide a STARTFILE_SPEC appropriate for GNU/Linux.  Here we add\n-   the GNU/Linux magical crtbegin.o file (see crtstuff.c) which\n-   provides part of the support for getting C++ file-scope static\n-   object constructed before entering `main'. */\n-\n-#undef  STARTFILE_SPEC\n-#define STARTFILE_SPEC \\\n-  \"%{!shared: \\\n-     %{pg:gcrt1.o%s} %{!pg:%{p:gcrt1.o%s} %{!p:crt1.o%s}}}\\\n-   crti.o%s %{!shared:crtbegin.o%s} %{shared:crtbeginS.o%s}\"\n-\n-/* Provide a ENDFILE_SPEC appropriate for GNU/Linux.  Here we tack on\n-   the GNU/Linux magical crtend.o file (see crtstuff.c) which\n-   provides part of the support for getting C++ file-scope static\n-   object constructed before entering `main', followed by a normal\n-   GNU/Linux \"finalizer\" file, `crtn.o'.  */\n-\n-#undef  ENDFILE_SPEC\n-#define ENDFILE_SPEC \\\n-  \"%{!shared:crtend.o%s} %{shared:crtendS.o%s} crtn.o%s\"\n-\n /* From iris5.h */\n /* -G is incompatible with -KPIC which is the default, so only allow objects\n    in the small data section if the user explicitly asks for it.  */\n #undef MIPS_DEFAULT_GVALUE\n #define MIPS_DEFAULT_GVALUE 0\n \n-#undef LIB_SPEC\n-/* Taken from sparc/linux.h.  */\n-#define LIB_SPEC \\\n-  \"%{shared: -lc} \\\n-   %{!shared: %{mieee-fp:-lieee} %{pthread:-lpthread} \\\n-     %{profile:-lc_p} %{!profile: -lc}}\"\n-\n /* Borrowed from sparc/linux.h */\n #undef LINK_SPEC\n #define LINK_SPEC \\\n@@ -165,44 +248,19 @@ Boston, MA 02111-1307, USA.  */\n %{!fno-PIC:%{!fno-pic:-KPIC}} \\\n %{fno-PIC:-non_shared} %{fno-pic:-non_shared}\"\n \n-/* We don't need those nonsenses.  */\n-#undef INVOKE__main\n-#undef CTOR_LIST_BEGIN\n-#undef CTOR_LIST_END\n-#undef DTOR_LIST_BEGIN\n-#undef DTOR_LIST_END\n-\n /* The MIPS assembler has different syntax for .set. We set it to\n    .dummy to trap any errors.  */\n #undef SET_ASM_OP\n #define SET_ASM_OP \"\\t.dummy\\t\"\n \n-#undef  ASM_OUTPUT_SOURCE_LINE\n-#define ASM_OUTPUT_SOURCE_LINE(FILE, LINE)\t\t\t\t\\\n-do\t\t\t\t\t\t\t\t\t\\\n-  {\t\t\t\t\t\t\t\t\t\\\n-    static int sym_lineno = 1;\t\t\t\t\t\t\\\n-    fprintf (FILE, \"%sLM%d:\\n\\t%s 68,0,%d,%sLM%d\",\t\t\t\\\n-\t     LOCAL_LABEL_PREFIX, sym_lineno, ASM_STABN_OP,\t\t\\\n-\t     LINE, LOCAL_LABEL_PREFIX, sym_lineno);\t\t\t\\\n-    putc ('-', FILE);\t\t\t\t\t\t\t\\\n-    assemble_name (FILE,\t\t\t\t\t\t\\\n-\t\t   XSTR (XEXP (DECL_RTL (current_function_decl), 0), 0));\\\n-    putc ('\\n', FILE);\t\t\t\t\t\t\t\\\n-    sym_lineno++;\t\t\t\t\t\t\t\\\n-  }\t\t\t\t\t\t\t\t\t\\\n-while (0)\n-\n-/* This is how we tell the assembler that two symbols have the\n-   same value.  */\n #undef ASM_OUTPUT_DEF\n #define ASM_OUTPUT_DEF(FILE,LABEL1,LABEL2)\t\t\t\t\\\n-  do {\t\t\t\t\t\t\t\t\t\\\n-\tfprintf ((FILE), \"\\t\");\t\t\t\t\t\t\\\n+ do {\t\t\t\t\t\t\t\t\t\\\n+\tfputc ( '\\t', FILE);\t\t\t\t\t\t\\\n \tassemble_name (FILE, LABEL1);\t\t\t\t\t\\\n-\tfprintf (FILE, \"=\");\t\t\t\t\t\t\\\n+\tfputs ( \" = \", FILE);\t\t\t\t\t\t\\\n \tassemble_name (FILE, LABEL2);\t\t\t\t\t\\\n-\tfprintf (FILE, \"\\n\");\t\t\t\t\t\t\\\n+\tfputc ( '\\n', FILE);\t\t\t\t\t\t\\\n  } while (0)\n \n #undef ASM_OUTPUT_DEFINE_LABEL_DIFFERENCE_SYMBOL\n@@ -248,8 +306,3 @@ while (0)\n /* Tell function_prologue in mips.c that we have already output the .ent/.end\n    pseudo-ops.  */\n #define FUNCTION_NAME_ALREADY_DECLARED\n-\n-/* Output #ident as a .ident.  */\n-#undef ASM_OUTPUT_IDENT\n-#define ASM_OUTPUT_IDENT(FILE, NAME) \\\n-  fprintf (FILE, \"\\t%s\\t\\\"%s\\\"\\n\", IDENT_ASM_OP, NAME);"}, {"sha": "bbbabf48e27122613ce92931e0cd5c50587d48ea", "filename": "gcc/config/mips/little.h", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2bcb32d2831ec81ba03baba01c0f29998ee748c/gcc%2Fconfig%2Fmips%2Flittle.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2bcb32d2831ec81ba03baba01c0f29998ee748c/gcc%2Fconfig%2Fmips%2Flittle.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Flittle.h?ref=b2bcb32d2831ec81ba03baba01c0f29998ee748c", "patch": "@@ -0,0 +1,22 @@\n+/* Definition of little endian mips machine for GNU compiler.\n+\n+   Copyright (C) 2001 Free Software Foundation, Inc.\n+\n+This file is part of GNU CC.\n+\n+GNU CC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU CC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU CC; see the file COPYING.  If not, write to\n+the Free Software Foundation, 59 Temple Place - Suite 330,\n+Boston, MA 02111-1307, USA.  */\n+\n+#define TARGET_ENDIAN_DEFAULT 0"}, {"sha": "6a83b0260b3818833430b5e399c9d1f5698e52b1", "filename": "gcc/config/mips/mips-protos.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2bcb32d2831ec81ba03baba01c0f29998ee748c/gcc%2Fconfig%2Fmips%2Fmips-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2bcb32d2831ec81ba03baba01c0f29998ee748c/gcc%2Fconfig%2Fmips%2Fmips-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips-protos.h?ref=b2bcb32d2831ec81ba03baba01c0f29998ee748c", "patch": "@@ -60,6 +60,7 @@ extern void\t\tmips_va_start PARAMS ((int, tree, rtx));\n #endif /* RTX_CODE */\n extern struct rtx_def  *mips_va_arg PARAMS ((tree, tree));\n extern void\t\tmips_select_section PARAMS ((tree, int));\n+extern void\t\tmips_unique_section PARAMS ((tree, int));\n #endif /* TREE_CODE */\n \n #ifdef RTX_CODE"}, {"sha": "7a2d962f070323d4b0968502acea734da5405104", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 72, "deletions": 0, "changes": 72, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2bcb32d2831ec81ba03baba01c0f29998ee748c/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2bcb32d2831ec81ba03baba01c0f29998ee748c/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=b2bcb32d2831ec81ba03baba01c0f29998ee748c", "patch": "@@ -9848,3 +9848,75 @@ iris6_asm_named_section (name, flags, align)\n   fprintf (asm_out_file, \"\\t.section %s,%u,%u,%u,%u\\n\",\n \t   name, sh_type, sh_flags, sh_entsize, align);\n }\n+\n+/* Cover function for UNIQUE_SECTION.  */\n+\n+void\n+mips_unique_section (decl, reloc)\n+     tree decl;\n+     int reloc;\n+{\n+  int len, size, sec;\n+  char *name, *string, *prefix;\n+  static char *prefixes[4][2] = {\n+    { \".text.\", \".gnu.linkonce.t.\" },\n+    { \".rodata.\", \".gnu.linkonce.r.\" },\n+    { \".data.\", \".gnu.linkonce.d.\" },\n+    { \".sdata.\", \".gnu.linkonce.s.\" }\n+  };\n+\n+  name = IDENTIFIER_POINTER (DECL_ASSEMBLER_NAME (decl));\n+  size = int_size_in_bytes (TREE_TYPE (decl));\n+\n+  /* Determine the base section we are interested in:\n+     0=text, 1=rodata, 2=data, 3=sdata, [4=bss].  */\n+  if (TREE_CODE (decl) == FUNCTION_DECL)\n+    sec = 0;\n+  else if (DECL_INITIAL (decl) == 0\n+           || DECL_INITIAL (decl) == error_mark_node)\n+    sec = 2;\n+  else if ((TARGET_EMBEDDED_PIC || TARGET_MIPS16)\n+      && TREE_CODE (decl) == STRING_CST\n+      && !flag_writable_strings)\n+    {\n+      /* For embedded position independent code, put constant\n+\t strings in the text section, because the data section\n+\t is limited to 64K in size.  For mips16 code, put\n+\t strings in the text section so that a PC relative load\n+\t instruction can be used to get their address.  */\n+      sec = 0;\n+    }\n+  else if (TARGET_EMBEDDED_DATA)\n+    {\n+      /* For embedded applications, always put an object in\n+\t read-only data if possible, in order to reduce RAM\n+\t usage.  */\n+\n+      if (DECL_READONLY_SECTION (decl, reloc))\n+\tsec = 1;\n+      else if (size > 0 && size <= mips_section_threshold)\n+\tsec = 3;\n+      else\n+\tsec = 2;\n+    }\n+  else\n+    {\n+      /* For hosted applications, always put an object in\n+\t small data if possible, as this gives the best\n+\t performance.  */\n+\n+      if (size > 0 && size <= mips_section_threshold)\n+\tsec = 3;\n+      else if (DECL_READONLY_SECTION (decl, reloc))\n+\tsec = 1;\n+      else\n+\tsec = 2;\n+    }\n+\n+  prefix = prefixes[sec][DECL_ONE_ONLY (decl)];\n+  len = strlen (name) + strlen (prefix);\n+  string = alloca (len + 1);\n+  sprintf (string, \"%s%s\", prefix, name);\n+\n+  DECL_SECTION_NAME (decl) = build_string (len, string);\n+}"}, {"sha": "b917a782ad44c73b534a49710a4a71dafb627baf", "filename": "gcc/config/mips/mips.h", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2bcb32d2831ec81ba03baba01c0f29998ee748c/gcc%2Fconfig%2Fmips%2Fmips.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2bcb32d2831ec81ba03baba01c0f29998ee748c/gcc%2Fconfig%2Fmips%2Fmips.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.h?ref=b2bcb32d2831ec81ba03baba01c0f29998ee748c", "patch": "@@ -862,6 +862,7 @@ while (0)\n \n /* ASM_SPEC is the set of arguments to pass to the assembler.  */\n \n+#undef ASM_SPEC\n #define ASM_SPEC \"\\\n %{!membedded-pic:%{G*}} %(endian_spec) %{mips1} %{mips2} %{mips3} %{mips4} \\\n %{mips16:%{!mno-mips16:-mips16}} %{mno-mips16:-no-mips16} \\\n@@ -991,6 +992,7 @@ while (0)\n \n /* For C++ we need to ensure that _LANGUAGE_C_PLUS_PLUS is defined independent\n    of the source file extension.  */\n+#undef CPLUSPLUS_CPP_SPEC\n #define CPLUSPLUS_CPP_SPEC \"\\\n -D__LANGUAGE_C_PLUS_PLUS -D_LANGUAGE_C_PLUS_PLUS \\\n %(cpp) \\\n@@ -3818,12 +3820,16 @@ while (0)\n /* Output to assembler file text saying following lines\n    may contain character constants, extra white space, comments, etc.  */\n \n+#ifndef ASM_APP_ON\n #define ASM_APP_ON \" #APP\\n\"\n+#endif\n \n /* Output to assembler file text saying following lines\n    no longer contain unusual constructs.  */\n \n+#ifndef ASM_APP_OFF\n #define ASM_APP_OFF \" #NO_APP\\n\"\n+#endif\n \n /* How to refer to registers in assembler output.\n    This sequence is indexed by compiler's hard-register-number (see above).\n@@ -4115,9 +4121,10 @@ while (0)\n #define LABEL_AFTER_LOC(STREAM)\n #endif\n \n-#undef ASM_OUTPUT_SOURCE_LINE\n+#ifndef ASM_OUTPUT_SOURCE_LINE\n #define ASM_OUTPUT_SOURCE_LINE(STREAM, LINE)\t\t\t\t\\\n   mips_output_lineno (STREAM, LINE)\n+#endif\n \n /* The MIPS implementation uses some labels for its own purpose.  The\n    following lists what labels are created, and are all formed by the\n@@ -4406,15 +4413,16 @@ do {\t\t\t\t\t\t\t\t\t\\\n /* Handle certain cpp directives used in header files on sysV.  */\n #define SCCS_DIRECTIVE\n \n+#ifndef ASM_OUTPUT_IDENT\n /* Output #ident as a in the read-only data section.  */\n-#undef ASM_OUTPUT_IDENT\n #define ASM_OUTPUT_IDENT(FILE, STRING)\t\t\t\t\t\\\n {\t\t\t\t\t\t\t\t\t\\\n   const char *p = STRING;\t\t\t\t\t\t\\\n   int size = strlen (p) + 1;\t\t\t\t\t\t\\\n   rdata_section ();\t\t\t\t\t\t\t\\\n   assemble_string (p, size);\t\t\t\t\t\t\\\n }\n+#endif\n \f\n /* Default to -G 8 */\n #ifndef MIPS_DEFAULT_GVALUE"}]}