{"sha": "b36a1c964f99758de1f3b169628965d3c3af812b", "node_id": "C_kwDOANBUbNoAKGIzNmExYzk2NGY5OTc1OGRlMWYzYjE2OTYyODk2NWQzYzNhZjgxMmI", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-06-24T11:37:22Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-06-24T12:50:05Z"}, "message": "middle-end/106070 - bogus cond-expr folding\n\nThe following fixes up r13-469-g9a53101caadae1b5 by properly\nimplementing what operand_equal_for_comparison_p did.\n\n2022-06-24  Richard Biener  <rguenther@suse.de>\n\n\tPR middle-end/106070\n\t* match.pd (a != b ? a : b): Fix translation of\n\toperand_equal_for_comparison_p.\n\n\t* gcc.dg/torture/pr106070.c: New testcase.", "tree": {"sha": "16002b04d83ab2c47affc181a23be9cd5dfd4769", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/16002b04d83ab2c47affc181a23be9cd5dfd4769"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b36a1c964f99758de1f3b169628965d3c3af812b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b36a1c964f99758de1f3b169628965d3c3af812b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b36a1c964f99758de1f3b169628965d3c3af812b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b36a1c964f99758de1f3b169628965d3c3af812b/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fa4e97907fc979f550c3f02cde03d9c35f99df9b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa4e97907fc979f550c3f02cde03d9c35f99df9b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fa4e97907fc979f550c3f02cde03d9c35f99df9b"}], "stats": {"total": 31, "additions": 27, "deletions": 4}, "files": [{"sha": "e486b4be282cbbbe9881f130bb9ecc67cd55a4b8", "filename": "gcc/match.pd", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b36a1c964f99758de1f3b169628965d3c3af812b/gcc%2Fmatch.pd", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b36a1c964f99758de1f3b169628965d3c3af812b/gcc%2Fmatch.pd", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmatch.pd?ref=b36a1c964f99758de1f3b169628965d3c3af812b", "patch": "@@ -4574,12 +4574,15 @@ DEFINE_INT_AND_FLOAT_ROUND_FN (RINT)\n   (cond (cmp:c (nop_convert1?@c0 @0) (nop_convert2?@c1 @1))\n         (convert3? @0) (convert4? @1))\n   (if (!HONOR_SIGNED_ZEROS (type)\n-       && ((INTEGRAL_TYPE_P (type)\n-\t    /* Allow widening conversions of the data.  */\n+       && (/* Allow widening conversions of the compare operands as data.  */\n+\t   (INTEGRAL_TYPE_P (type)\n+\t    && types_match (TREE_TYPE (@c0), TREE_TYPE (@0))\n+\t    && types_match (TREE_TYPE (@c1), TREE_TYPE (@1))\n \t    && TYPE_PRECISION (TREE_TYPE (@0)) <= TYPE_PRECISION (type)\n \t    && TYPE_PRECISION (TREE_TYPE (@1)) <= TYPE_PRECISION (type))\n-\t   || (tree_nop_conversion_p (type, TREE_TYPE (@0))\n-\t       && tree_nop_conversion_p (type, TREE_TYPE (@1)))))\n+\t   /* Or sign conversions for the comparison.  */\n+\t   || (types_match (type, TREE_TYPE (@0))\n+\t       && types_match (type, TREE_TYPE (@1)))))\n    (switch\n     (if (cmp == EQ_EXPR)\n      (if (VECTOR_TYPE_P (type))"}, {"sha": "c36534f8a504bf7e5005d0a89d682e30f5f00741", "filename": "gcc/testsuite/gcc.dg/torture/pr106070.c", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b36a1c964f99758de1f3b169628965d3c3af812b/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr106070.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b36a1c964f99758de1f3b169628965d3c3af812b/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr106070.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr106070.c?ref=b36a1c964f99758de1f3b169628965d3c3af812b", "patch": "@@ -0,0 +1,20 @@\n+/* { dg-do run } */\n+\n+unsigned int var_2 = 1;\n+int var_4 = -1;\n+int var_10 = 4;\n+unsigned long arr_252;\n+void __attribute__((noipa)) test() {\n+  for (int a = 0; a < var_10; a += 2)\n+    arr_252 = var_2 != (int)var_4 ? (unsigned long)var_4 : (unsigned long)var_2;\n+}\n+\n+void test();\n+\n+int main()\n+{\n+  test();\n+  if (arr_252 != 0xffffffffffffffff)\n+    __builtin_abort();\n+  return 0;\n+}"}]}