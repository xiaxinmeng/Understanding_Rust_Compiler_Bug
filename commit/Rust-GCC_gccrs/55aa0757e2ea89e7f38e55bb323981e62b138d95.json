{"sha": "55aa0757e2ea89e7f38e55bb323981e62b138d95", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTVhYTA3NTdlMmVhODllN2YzOGU1NWJiMzIzOTgxZTYyYjEzOGQ5NQ==", "commit": {"author": {"name": "David Edelsohn", "email": "edelsohn@gnu.org", "date": "2004-12-28T00:39:18Z"}, "committer": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2004-12-28T00:39:18Z"}, "message": "rs6000.c (rs6000_eliminate_indexed_memrefs): Do not break apart constant pool addresses.\n\n        * config/rs6000/rs6000.c (rs6000_eliminate_indexed_memrefs):\n        Do not break apart constant pool addresses.\n        (rs6000_emit_move): Only force source into REG if target is MEM.\n\nFrom-SVN: r92657", "tree": {"sha": "5f6f00fcf7d237ff93d0d7877fa20ef1a4d46aa7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5f6f00fcf7d237ff93d0d7877fa20ef1a4d46aa7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/55aa0757e2ea89e7f38e55bb323981e62b138d95", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55aa0757e2ea89e7f38e55bb323981e62b138d95", "html_url": "https://github.com/Rust-GCC/gccrs/commit/55aa0757e2ea89e7f38e55bb323981e62b138d95", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55aa0757e2ea89e7f38e55bb323981e62b138d95/comments", "author": null, "committer": null, "parents": [{"sha": "460fdb4efa038372db8670b4d95f84aec75007c4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/460fdb4efa038372db8670b4d95f84aec75007c4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/460fdb4efa038372db8670b4d95f84aec75007c4"}], "stats": {"total": 10, "additions": 9, "deletions": 1}, "files": [{"sha": "66264fb33a8a83d39921656feca8472890d59471", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55aa0757e2ea89e7f38e55bb323981e62b138d95/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55aa0757e2ea89e7f38e55bb323981e62b138d95/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=55aa0757e2ea89e7f38e55bb323981e62b138d95", "patch": "@@ -1,3 +1,9 @@\n+2004-12-27  David Edelsohn  <edelsohn@gnu.org>\n+\n+\t* config/rs6000/rs6000.c (rs6000_eliminate_indexed_memrefs):\n+\tDo not break apart constant pool addresses.\n+\t(rs6000_emit_move): Only force source into REG if target is MEM.\n+\n 2004-12-27  Mark Mitchell  <mark@codesourcery.com>\n \n \tPR c++/19148"}, {"sha": "cf7c8eec816bb4523132c12f264724ad20c4170b", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55aa0757e2ea89e7f38e55bb323981e62b138d95/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55aa0757e2ea89e7f38e55bb323981e62b138d95/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=55aa0757e2ea89e7f38e55bb323981e62b138d95", "patch": "@@ -4233,13 +4233,15 @@ rs6000_eliminate_indexed_memrefs (rtx operands[2])\n {\n   if (GET_CODE (operands[0]) == MEM\n       && GET_CODE (XEXP (operands[0], 0)) != REG\n+      && ! legitimate_constant_pool_address_p (XEXP (operands[0], 0))\n       && ! reload_in_progress)\n     operands[0]\n       = replace_equiv_address (operands[0],\n \t\t\t       copy_addr_to_reg (XEXP (operands[0], 0)));\n \n   if (GET_CODE (operands[1]) == MEM\n       && GET_CODE (XEXP (operands[1], 0)) != REG\n+      && ! legitimate_constant_pool_address_p (XEXP (operands[1], 0))\n       && ! reload_in_progress)\n     operands[1]\n       = replace_equiv_address (operands[1],\n@@ -4294,7 +4296,7 @@ rs6000_emit_move (rtx dest, rtx source, enum machine_mode mode)\n       return;\n     }\n \n-  if (!no_new_pseudos && GET_CODE (operands[0]) != REG\n+  if (!no_new_pseudos && GET_CODE (operands[0]) == MEM\n       && !gpc_reg_operand (operands[1], mode))\n     operands[1] = force_reg (mode, operands[1]);\n "}]}