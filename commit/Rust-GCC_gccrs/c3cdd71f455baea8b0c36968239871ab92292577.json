{"sha": "c3cdd71f455baea8b0c36968239871ab92292577", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzNjZGQ3MWY0NTViYWVhOGIwYzM2OTY4MjM5ODcxYWI5MjI5MjU3Nw==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2014-01-22T19:46:44Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2014-01-22T19:46:44Z"}, "message": "re PR libstdc++/58764 ([lwg/2193] error: converting to \u2018const std::vector<std::basic_string<char> >\u2019 from initializer list would use explicit constructor)\n\n\tPR libstdc++/58764\n\t* include/bits/stl_deque.h (deque::deque(const allocator_type&):\n\tSplit into separate default constructor and constructor taking\n\tallocator.\n\t* include/bits/stl_list.h (list::list(const allocator_type&): Likewise.\n\t* include/bits/stl_vector.h (vector::vector(const allocator_type&):\n\tLikewise.\n\t* include/debug/deque (deque::deque(const allocator_type&)): Likewise.\n\t* include/debug/list (list::list(const _Allocator&)): Likewise.\n\t* include/debug/map.h (map::map(const _Compare&, const _Allocator&)):\n\tLikewise.\n\t* include/debug/multimap.h\n\t(multimap::multimap(const _Compare&, const _Allocator&)): Likewise.\n\t* include/debug/set.h (set::set(const _Compare&, const _Allocator&)):\n\tLikewise.\n\t* include/debug/multiset.h\n\t(multiset::multiset(const _Compare&, const _Allocator&)): Likewise.\n\t* include/debug/vector (vector::vector(const allocator_type&)):\n\tLikewise.\n\t* include/profile/deque (deque::deque(const _Allocator&)): Likewise.\n\t* include/profile/list (list::list(const _Allocator&)): Likewise.\n\t* include/profile/map.h\n\t(map::map(const _Compare&, const _Allocator&)): Likewise.\n\t* include/profile/multimap.h\n\t(multimap::multimap(const _Compare&, const _Allocator&)): Likewise.\n\t* include/profile/set.h\n\t(set::set(const _Compare&, const _Allocator&)): Likewise.\n\t* include/profile/multiset.h\n\t(multiset::multiset(const _Compare&, const _Allocator&)): Likewise.\n\t* include/profile/vector (vector::vector(const _Allocator&)):\n\tLikewise.\n\t* testsuite/23_containers/deque/58764.cc: New.\n\t* testsuite/23_containers/list/58764.cc: New.\n\t* testsuite/23_containers/map/58764.cc: New.\n\t* testsuite/23_containers/multimap/58764.cc: New.\n\t* testsuite/23_containers/set/58764.cc: New.\n\t* testsuite/23_containers/multiset/58764.cc: New.\n\t* testsuite/23_containers/vector/58764.cc: New.\n\t* testsuite/23_containers/deque/requirements/dr438/assign_neg.cc:\n\tAdjust dg-error line number.\n\t* testsuite/23_containers/deque/requirements/dr438/\n\tconstructor_1_neg.cc: Likewise.\n\t* testsuite/23_containers/deque/requirements/dr438/\n\tconstructor_2_neg.cc: Likewise.\n\t* testsuite/23_containers/deque/requirements/dr438/insert_neg.cc:\n\tLikewise.\n\t* testsuite/23_containers/list/requirements/dr438/assign_neg.cc:\n\tLikewise.\n\t* testsuite/23_containers/list/requirements/dr438/constructor_1_neg.cc:\n\tLikewise.\n\t* testsuite/23_containers/list/requirements/dr438/constructor_2_neg.cc:\n\tLikewise.\n\t* testsuite/23_containers/list/requirements/dr438/insert_neg.cc:\n\tLikewise.\n\t* testsuite/23_containers/vector/requirements/dr438/assign_neg.cc:\n\tLikewise.\n\t* testsuite/23_containers/vector/requirements/dr438/\n\tconstructor_1_neg.cc: Likewise.\n\t* testsuite/23_containers/vector/requirements/dr438/\n\tconstructor_2_neg.cc: Likewise.\n\t* testsuite/23_containers/vector/requirements/dr438/insert_neg.cc:\n\tLikewise.\n\nFrom-SVN: r206939", "tree": {"sha": "e6daca75487c56849b09325310551bbdf4bb92ea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e6daca75487c56849b09325310551bbdf4bb92ea"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c3cdd71f455baea8b0c36968239871ab92292577", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3cdd71f455baea8b0c36968239871ab92292577", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c3cdd71f455baea8b0c36968239871ab92292577", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3cdd71f455baea8b0c36968239871ab92292577/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "df2980beb3ddfd359fa00b04f97c904344988b30", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df2980beb3ddfd359fa00b04f97c904344988b30", "html_url": "https://github.com/Rust-GCC/gccrs/commit/df2980beb3ddfd359fa00b04f97c904344988b30"}], "stats": {"total": 397, "additions": 368, "deletions": 29}, "files": [{"sha": "7b8e7b644c47f3f6a8165ef6df081500fc04eb73", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 63, "deletions": 0, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3cdd71f455baea8b0c36968239871ab92292577/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3cdd71f455baea8b0c36968239871ab92292577/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=c3cdd71f455baea8b0c36968239871ab92292577", "patch": "@@ -2,6 +2,69 @@\n \n \t* include/bits/stl_deque.h (_Deque_impl): Move comment.\n \n+\tPR libstdc++/58764\n+\t* include/bits/stl_deque.h (deque::deque(const allocator_type&):\n+\tSplit into separate default constructor and constructor taking\n+\tallocator.\n+\t* include/bits/stl_list.h (list::list(const allocator_type&): Likewise.\n+\t* include/bits/stl_vector.h (vector::vector(const allocator_type&):\n+\tLikewise.\n+\t* include/debug/deque (deque::deque(const allocator_type&)): Likewise.\n+\t* include/debug/list (list::list(const _Allocator&)): Likewise.\n+\t* include/debug/map.h (map::map(const _Compare&, const _Allocator&)):\n+\tLikewise.\n+\t* include/debug/multimap.h\n+\t(multimap::multimap(const _Compare&, const _Allocator&)): Likewise.\n+\t* include/debug/set.h (set::set(const _Compare&, const _Allocator&)):\n+\tLikewise.\n+\t* include/debug/multiset.h\n+\t(multiset::multiset(const _Compare&, const _Allocator&)): Likewise.\n+\t* include/debug/vector (vector::vector(const allocator_type&)):\n+\tLikewise.\n+\t* include/profile/deque (deque::deque(const _Allocator&)): Likewise.\n+\t* include/profile/list (list::list(const _Allocator&)): Likewise.\n+\t* include/profile/map.h\n+\t(map::map(const _Compare&, const _Allocator&)): Likewise.\n+\t* include/profile/multimap.h\n+\t(multimap::multimap(const _Compare&, const _Allocator&)): Likewise.\n+\t* include/profile/set.h\n+\t(set::set(const _Compare&, const _Allocator&)): Likewise.\n+\t* include/profile/multiset.h\n+\t(multiset::multiset(const _Compare&, const _Allocator&)): Likewise.\n+\t* include/profile/vector (vector::vector(const _Allocator&)):\n+\tLikewise.\n+\t* testsuite/23_containers/deque/58764.cc: New.\n+\t* testsuite/23_containers/list/58764.cc: New.\n+\t* testsuite/23_containers/map/58764.cc: New.\n+\t* testsuite/23_containers/multimap/58764.cc: New.\n+\t* testsuite/23_containers/set/58764.cc: New.\n+\t* testsuite/23_containers/multiset/58764.cc: New.\n+\t* testsuite/23_containers/vector/58764.cc: New.\n+\t* testsuite/23_containers/deque/requirements/dr438/assign_neg.cc:\n+\tAdjust dg-error line number.\n+\t* testsuite/23_containers/deque/requirements/dr438/\n+\tconstructor_1_neg.cc: Likewise.\n+\t* testsuite/23_containers/deque/requirements/dr438/\n+\tconstructor_2_neg.cc: Likewise.\n+\t* testsuite/23_containers/deque/requirements/dr438/insert_neg.cc:\n+\tLikewise.\n+\t* testsuite/23_containers/list/requirements/dr438/assign_neg.cc:\n+\tLikewise.\n+\t* testsuite/23_containers/list/requirements/dr438/constructor_1_neg.cc:\n+\tLikewise.\n+\t* testsuite/23_containers/list/requirements/dr438/constructor_2_neg.cc:\n+\tLikewise.\n+\t* testsuite/23_containers/list/requirements/dr438/insert_neg.cc:\n+\tLikewise.\n+\t* testsuite/23_containers/vector/requirements/dr438/assign_neg.cc:\n+\tLikewise.\n+\t* testsuite/23_containers/vector/requirements/dr438/\n+\tconstructor_1_neg.cc: Likewise.\n+\t* testsuite/23_containers/vector/requirements/dr438/\n+\tconstructor_2_neg.cc: Likewise.\n+\t* testsuite/23_containers/vector/requirements/dr438/insert_neg.cc:\n+\tLikewise.\n+\n 2014-01-21  Tim Shen  <timshen91@gmail.com>\n \n \t* include/bits/regex.tcc: Remove incorrect `nosubs` handling."}, {"sha": "0f4d0e9b8a79778c9ebe0225d18202e623819354", "filename": "libstdc++-v3/include/bits/stl_deque.h", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3cdd71f455baea8b0c36968239871ab92292577/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_deque.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3cdd71f455baea8b0c36968239871ab92292577/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_deque.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_deque.h?ref=c3cdd71f455baea8b0c36968239871ab92292577", "patch": "@@ -781,12 +781,18 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n     public:\n       // [23.2.1.1] construct/copy/destroy\n       // (assign() and get_allocator() are also listed in this section)\n+\n+      /**\n+       *  @brief  Creates a %deque with no elements.\n+       */\n+      deque() : _Base() { }\n+\n       /**\n        *  @brief  Creates a %deque with no elements.\n        *  @param  __a  An allocator object.\n        */\n       explicit\n-      deque(const allocator_type& __a = allocator_type())\n+      deque(const allocator_type& __a)\n       : _Base(__a) { }\n \n #if __cplusplus >= 201103L"}, {"sha": "19bb18934e62fb6a0a59cb1c3d2f554a7cf40b32", "filename": "libstdc++-v3/include/bits/stl_list.h", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3cdd71f455baea8b0c36968239871ab92292577/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_list.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3cdd71f455baea8b0c36968239871ab92292577/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_list.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_list.h?ref=c3cdd71f455baea8b0c36968239871ab92292577", "patch": "@@ -526,12 +526,19 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n     public:\n       // [23.2.2.1] construct/copy/destroy\n       // (assign() and get_allocator() are also listed in this section)\n+\n+      /**\n+       *  @brief  Creates a %list with no elements.\n+       */\n+      list() _GLIBCXX_NOEXCEPT\n+      : _Base() { }\n+\n       /**\n        *  @brief  Creates a %list with no elements.\n        *  @param  __a  An allocator object.\n        */\n       explicit\n-      list(const allocator_type& __a = allocator_type()) _GLIBCXX_NOEXCEPT\n+      list(const allocator_type& __a) _GLIBCXX_NOEXCEPT\n       : _Base(_Node_alloc_type(__a)) { }\n \n #if __cplusplus >= 201103L"}, {"sha": "14284aad8add088ec9ac7db62ad58b3f16489a66", "filename": "libstdc++-v3/include/bits/stl_vector.h", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3cdd71f455baea8b0c36968239871ab92292577/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_vector.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3cdd71f455baea8b0c36968239871ab92292577/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_vector.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_vector.h?ref=c3cdd71f455baea8b0c36968239871ab92292577", "patch": "@@ -242,12 +242,18 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n     public:\n       // [23.2.4.1] construct/copy/destroy\n       // (assign() and get_allocator() are also listed in this section)\n+\n+      /**\n+       *  @brief  Creates a %vector with no elements.\n+       */\n+      vector() _GLIBCXX_NOEXCEPT : _Base() { }\n+\n       /**\n        *  @brief  Creates a %vector with no elements.\n        *  @param  __a  An allocator object.\n        */\n       explicit\n-      vector(const allocator_type& __a = allocator_type()) _GLIBCXX_NOEXCEPT\n+      vector(const allocator_type& __a) _GLIBCXX_NOEXCEPT\n       : _Base(__a) { }\n \n #if __cplusplus >= 201103L"}, {"sha": "225d06c92d17e0d9e2df1a2b7ca3197c7787788f", "filename": "libstdc++-v3/include/debug/deque", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3cdd71f455baea8b0c36968239871ab92292577/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fdeque", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3cdd71f455baea8b0c36968239871ab92292577/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fdeque", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fdeque?ref=c3cdd71f455baea8b0c36968239871ab92292577", "patch": "@@ -68,8 +68,11 @@ namespace __debug\n       typedef std::reverse_iterator<const_iterator> const_reverse_iterator;\n \n       // 23.2.1.1 construct/copy/destroy:\n+\n+      deque() : _Base() { }\n+\n       explicit\n-      deque(const _Allocator& __a = _Allocator())\n+      deque(const _Allocator& __a)\n       : _Base(__a) { }\n \n #if __cplusplus >= 201103L"}, {"sha": "9918bc5d8088a0580cfb74d919da8a6fbb685f81", "filename": "libstdc++-v3/include/debug/list", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3cdd71f455baea8b0c36968239871ab92292577/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Flist", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3cdd71f455baea8b0c36968239871ab92292577/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Flist", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Flist?ref=c3cdd71f455baea8b0c36968239871ab92292577", "patch": "@@ -69,8 +69,12 @@ namespace __debug\n       typedef std::reverse_iterator<const_iterator> const_reverse_iterator;\n \n       // 23.2.2.1 construct/copy/destroy:\n+\n+      list() _GLIBCXX_NOEXCEPT\n+      : _Base() { }\n+\n       explicit\n-      list(const _Allocator& __a = _Allocator()) _GLIBCXX_NOEXCEPT\n+      list(const _Allocator& __a) _GLIBCXX_NOEXCEPT\n       : _Base(__a) { }\n \n #if __cplusplus >= 201103L"}, {"sha": "bd68c996d0d2875479976567a653e97fc9440ce2", "filename": "libstdc++-v3/include/debug/map.h", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3cdd71f455baea8b0c36968239871ab92292577/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fmap.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3cdd71f455baea8b0c36968239871ab92292577/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fmap.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fmap.h?ref=c3cdd71f455baea8b0c36968239871ab92292577", "patch": "@@ -77,7 +77,10 @@ namespace __debug\n       typedef std::reverse_iterator<const_iterator> const_reverse_iterator;\n \n       // 23.3.1.1 construct/copy/destroy:\n-      explicit map(const _Compare& __comp = _Compare(),\n+\n+      map() : _Base() { }\n+\n+      explicit map(const _Compare& __comp,\n \t\t   const _Allocator& __a = _Allocator())\n       : _Base(__comp, __a) { }\n "}, {"sha": "fad80cc8ebe175c36295fb31467bc1bfa4c572c8", "filename": "libstdc++-v3/include/debug/multimap.h", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3cdd71f455baea8b0c36968239871ab92292577/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fmultimap.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3cdd71f455baea8b0c36968239871ab92292577/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fmultimap.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fmultimap.h?ref=c3cdd71f455baea8b0c36968239871ab92292577", "patch": "@@ -78,7 +78,10 @@ namespace __debug\n       typedef std::reverse_iterator<const_iterator>  const_reverse_iterator;\n \n       // 23.3.1.1 construct/copy/destroy:\n-      explicit multimap(const _Compare& __comp = _Compare(),\n+\n+      multimap() : _Base() { }\n+\n+      explicit multimap(const _Compare& __comp,\n \t\t\tconst _Allocator& __a = _Allocator())\n       : _Base(__comp, __a) { }\n "}, {"sha": "bd555b3c2906eb49a2467163d730ff8fb87c8c22", "filename": "libstdc++-v3/include/debug/multiset.h", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3cdd71f455baea8b0c36968239871ab92292577/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fmultiset.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3cdd71f455baea8b0c36968239871ab92292577/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fmultiset.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fmultiset.h?ref=c3cdd71f455baea8b0c36968239871ab92292577", "patch": "@@ -77,7 +77,10 @@ namespace __debug\n       typedef std::reverse_iterator<const_iterator>  const_reverse_iterator;\n \n       // 23.3.3.1 construct/copy/destroy:\n-      explicit multiset(const _Compare& __comp = _Compare(),\n+\n+      multiset() : _Base() { }\n+\n+      explicit multiset(const _Compare& __comp,\n \t\t\tconst _Allocator& __a = _Allocator())\n       : _Base(__comp, __a) { }\n "}, {"sha": "f40ecec818f71f75ace63795e237534e96d51681", "filename": "libstdc++-v3/include/debug/set.h", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3cdd71f455baea8b0c36968239871ab92292577/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fset.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3cdd71f455baea8b0c36968239871ab92292577/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fset.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fset.h?ref=c3cdd71f455baea8b0c36968239871ab92292577", "patch": "@@ -76,7 +76,10 @@ namespace __debug\n       typedef std::reverse_iterator<const_iterator> const_reverse_iterator;\n \n       // 23.3.3.1 construct/copy/destroy:\n-      explicit set(const _Compare& __comp = _Compare(),\n+\n+      set() : _Base() { }\n+\n+      explicit set(const _Compare& __comp,\n \t\t   const _Allocator& __a = _Allocator())\n       : _Base(__comp, __a) { }\n "}, {"sha": "58d98ef5de51f7cbc12bacb9f50c0a2598db8ffb", "filename": "libstdc++-v3/include/debug/vector", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3cdd71f455baea8b0c36968239871ab92292577/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fvector", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3cdd71f455baea8b0c36968239871ab92292577/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fvector", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fvector?ref=c3cdd71f455baea8b0c36968239871ab92292577", "patch": "@@ -76,8 +76,12 @@ namespace __debug\n       typedef std::reverse_iterator<const_iterator> const_reverse_iterator;\n \n       // 23.2.4.1 construct/copy/destroy:\n+\n+      vector() _GLIBCXX_NOEXCEPT\n+      : _Base(), _M_guaranteed_capacity(0) { }\n+\n       explicit\n-      vector(const _Allocator& __a = _Allocator()) _GLIBCXX_NOEXCEPT\n+      vector(const _Allocator& __a) _GLIBCXX_NOEXCEPT\n       : _Base(__a), _M_guaranteed_capacity(0) { }\n \n #if __cplusplus >= 201103L"}, {"sha": "2c4f9cbd0199a6a9e2e91502d707811164679eab", "filename": "libstdc++-v3/include/profile/deque", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3cdd71f455baea8b0c36968239871ab92292577/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fdeque", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3cdd71f455baea8b0c36968239871ab92292577/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fdeque", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fdeque?ref=c3cdd71f455baea8b0c36968239871ab92292577", "patch": "@@ -60,8 +60,12 @@ namespace __profile\n       typedef typename _Base::const_pointer         const_pointer;\n \n       // 23.2.1.1 construct/copy/destroy:\n+\n+      deque()\n+      : _Base() { }\n+\n       explicit\n-      deque(const _Allocator& __a = _Allocator())\n+      deque(const _Allocator& __a)\n       : _Base(__a) { }\n \n #if __cplusplus >= 201103L"}, {"sha": "87d99a0b93d81d805df52385995aff28496617f4", "filename": "libstdc++-v3/include/profile/list", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3cdd71f455baea8b0c36968239871ab92292577/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Flist", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3cdd71f455baea8b0c36968239871ab92292577/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Flist", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Flist?ref=c3cdd71f455baea8b0c36968239871ab92292577", "patch": "@@ -64,8 +64,16 @@ template<typename _Tp, typename _Allocator = std::allocator<_Tp> >\n       typedef std::reverse_iterator<const_iterator> const_reverse_iterator;\n \n       // 23.2.2.1 construct/copy/destroy:\n+\n+      list() _GLIBCXX_NOEXCEPT\n+      : _Base()\n+      {\n+        __profcxx_list_construct(this); \t// list2slist\n+        __profcxx_list_construct2(this); \t// list2vector\n+      }\n+\n       explicit\n-      list(const _Allocator& __a = _Allocator()) _GLIBCXX_NOEXCEPT\n+      list(const _Allocator& __a) _GLIBCXX_NOEXCEPT\n       : _Base(__a) \n       {\n         __profcxx_list_construct(this); \t// list2slist"}, {"sha": "6a3160b8e6beb2304e4bb35eef3a36f87abbf54d", "filename": "libstdc++-v3/include/profile/map.h", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3cdd71f455baea8b0c36968239871ab92292577/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fmap.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3cdd71f455baea8b0c36968239871ab92292577/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fmap.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fmap.h?ref=c3cdd71f455baea8b0c36968239871ab92292577", "patch": "@@ -67,8 +67,13 @@ namespace __profile\n       typedef std::reverse_iterator<const_iterator> const_reverse_iterator;\n \n       // 23.3.1.1 construct/copy/destroy:\n+\n+      map()\n+      : _Base()\n+      { __profcxx_map_to_unordered_map_construct(this); }\n+\n       explicit\n-      map(const _Compare& __comp = _Compare(),\n+      map(const _Compare& __comp,\n \t  const _Allocator& __a = _Allocator())\n       : _Base(__comp, __a)\n       { __profcxx_map_to_unordered_map_construct(this); }"}, {"sha": "5ba5355ec55344b037a0f8f93a7c724629ffa49e", "filename": "libstdc++-v3/include/profile/multimap.h", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3cdd71f455baea8b0c36968239871ab92292577/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fmultimap.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3cdd71f455baea8b0c36968239871ab92292577/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fmultimap.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fmultimap.h?ref=c3cdd71f455baea8b0c36968239871ab92292577", "patch": "@@ -68,7 +68,11 @@ namespace __profile\n       typedef typename _Base::const_pointer          const_pointer;\n \n       // 23.3.1.1 construct/copy/destroy:\n-      explicit multimap(const _Compare& __comp = _Compare(),\n+\n+      multimap()\n+      : _Base() { }\n+\n+      explicit multimap(const _Compare& __comp,\n \t\t\tconst _Allocator& __a = _Allocator())\n       : _Base(__comp, __a) { }\n "}, {"sha": "8ef6e6b0de72c6eb3b3b19f352b38b4949b93428", "filename": "libstdc++-v3/include/profile/multiset.h", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3cdd71f455baea8b0c36968239871ab92292577/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fmultiset.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3cdd71f455baea8b0c36968239871ab92292577/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fmultiset.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fmultiset.h?ref=c3cdd71f455baea8b0c36968239871ab92292577", "patch": "@@ -68,7 +68,11 @@ namespace __profile\n       typedef typename _Base::const_pointer          const_pointer;\n \n       // 23.3.3.1 construct/copy/destroy:\n-      explicit multiset(const _Compare& __comp = _Compare(),\n+\n+      multiset()\n+      : _Base() { }\n+\n+      explicit multiset(const _Compare& __comp,\n \t\t\tconst _Allocator& __a = _Allocator())\n       : _Base(__comp, __a) { }\n "}, {"sha": "05fbeb9f6b1d89cd4b7cbd82dad1e2bc9658f73c", "filename": "libstdc++-v3/include/profile/set.h", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3cdd71f455baea8b0c36968239871ab92292577/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fset.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3cdd71f455baea8b0c36968239871ab92292577/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fset.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fset.h?ref=c3cdd71f455baea8b0c36968239871ab92292577", "patch": "@@ -68,7 +68,11 @@ namespace __profile\n       typedef typename _Base::const_pointer         const_pointer;\n \n       // 23.3.3.1 construct/copy/destroy:\n-      explicit set(const _Compare& __comp = _Compare(),\n+\n+      set()\n+      : _Base() { }\n+\n+      explicit set(const _Compare& __comp,\n \t\t   const _Allocator& __a = _Allocator())\n       : _Base(__comp, __a) { }\n "}, {"sha": "5c2c6219029e77a83eddf57418cb01275a3344c1", "filename": "libstdc++-v3/include/profile/vector", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3cdd71f455baea8b0c36968239871ab92292577/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fvector", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3cdd71f455baea8b0c36968239871ab92292577/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fvector", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fvector?ref=c3cdd71f455baea8b0c36968239871ab92292577", "patch": "@@ -77,8 +77,16 @@ namespace __profile\n       _M_base() const _GLIBCXX_NOEXCEPT { return *this; }\n \n       // 23.2.4.1 construct/copy/destroy:\n+\n+      vector() _GLIBCXX_NOEXCEPT\n+      : _Base()\n+      {\n+        __profcxx_vector_construct(this, this->capacity());\n+        __profcxx_vector_construct2(this);\n+      }\n+\n       explicit\n-      vector(const _Allocator& __a = _Allocator()) _GLIBCXX_NOEXCEPT\n+      vector(const _Allocator& __a) _GLIBCXX_NOEXCEPT\n       : _Base(__a)\n       {\n         __profcxx_vector_construct(this, this->capacity());"}, {"sha": "a1056aa710d45651d41fd43ca8a8c43e6e5f5374", "filename": "libstdc++-v3/testsuite/23_containers/deque/58764.cc", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3cdd71f455baea8b0c36968239871ab92292577/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2F58764.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3cdd71f455baea8b0c36968239871ab92292577/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2F58764.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2F58764.cc?ref=c3cdd71f455baea8b0c36968239871ab92292577", "patch": "@@ -0,0 +1,28 @@\n+// Copyright (C) 2014 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-do compile }\n+// { dg-options \"-std=gnu++11\" }\n+\n+// libstdc++/58764\n+\n+#include <deque>\n+\n+void test01()\n+{\n+  std::deque<int> a = {};\n+}"}, {"sha": "4de8f2d0fb9d72fa9a23f90b650f1701a9aa57e7", "filename": "libstdc++-v3/testsuite/23_containers/deque/requirements/dr438/assign_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3cdd71f455baea8b0c36968239871ab92292577/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Frequirements%2Fdr438%2Fassign_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3cdd71f455baea8b0c36968239871ab92292577/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Frequirements%2Fdr438%2Fassign_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Frequirements%2Fdr438%2Fassign_neg.cc?ref=c3cdd71f455baea8b0c36968239871ab92292577", "patch": "@@ -18,7 +18,7 @@\n // <http://www.gnu.org/licenses/>.\n \n // { dg-do compile }\n-// { dg-error \"no matching\" \"\" { target *-*-* } 1758 }\n+// { dg-error \"no matching\" \"\" { target *-*-* } 1764 }\n \n #include <deque>\n "}, {"sha": "41f29056198c712c4b9779e6aa8e726aeca278d7", "filename": "libstdc++-v3/testsuite/23_containers/deque/requirements/dr438/constructor_1_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3cdd71f455baea8b0c36968239871ab92292577/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Frequirements%2Fdr438%2Fconstructor_1_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3cdd71f455baea8b0c36968239871ab92292577/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Frequirements%2Fdr438%2Fconstructor_1_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Frequirements%2Fdr438%2Fconstructor_1_neg.cc?ref=c3cdd71f455baea8b0c36968239871ab92292577", "patch": "@@ -18,7 +18,7 @@\n // <http://www.gnu.org/licenses/>.\n \n // { dg-do compile }\n-// { dg-error \"no matching\" \"\" { target *-*-* } 1691 }\n+// { dg-error \"no matching\" \"\" { target *-*-* } 1697 }\n \n #include <deque>\n "}, {"sha": "f77b1267890fcf1280f6f828e47e9a5ee1fad8e3", "filename": "libstdc++-v3/testsuite/23_containers/deque/requirements/dr438/constructor_2_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3cdd71f455baea8b0c36968239871ab92292577/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Frequirements%2Fdr438%2Fconstructor_2_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3cdd71f455baea8b0c36968239871ab92292577/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Frequirements%2Fdr438%2Fconstructor_2_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Frequirements%2Fdr438%2Fconstructor_2_neg.cc?ref=c3cdd71f455baea8b0c36968239871ab92292577", "patch": "@@ -18,7 +18,7 @@\n // <http://www.gnu.org/licenses/>.\n \n // { dg-do compile }\n-// { dg-error \"no matching\" \"\" { target *-*-* } 1691 }\n+// { dg-error \"no matching\" \"\" { target *-*-* } 1697 }\n \n #include <deque>\n #include <utility>"}, {"sha": "e7d5b1ee654b12d08cd614e0152bcd3ccfb41c7a", "filename": "libstdc++-v3/testsuite/23_containers/deque/requirements/dr438/insert_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3cdd71f455baea8b0c36968239871ab92292577/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Frequirements%2Fdr438%2Finsert_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3cdd71f455baea8b0c36968239871ab92292577/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Frequirements%2Fdr438%2Finsert_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Frequirements%2Fdr438%2Finsert_neg.cc?ref=c3cdd71f455baea8b0c36968239871ab92292577", "patch": "@@ -18,7 +18,7 @@\n // <http://www.gnu.org/licenses/>.\n \n // { dg-do compile }\n-// { dg-error \"no matching\" \"\" { target *-*-* } 1842 }\n+// { dg-error \"no matching\" \"\" { target *-*-* } 1848 }\n \n #include <deque>\n "}, {"sha": "c523e0276ad49100e16789b787b98a858714512c", "filename": "libstdc++-v3/testsuite/23_containers/list/58764.cc", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3cdd71f455baea8b0c36968239871ab92292577/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2F58764.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3cdd71f455baea8b0c36968239871ab92292577/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2F58764.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2F58764.cc?ref=c3cdd71f455baea8b0c36968239871ab92292577", "patch": "@@ -0,0 +1,28 @@\n+// Copyright (C) 2014 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-do compile }\n+// { dg-options \"-std=gnu++11\" }\n+\n+// libstdc++/58764\n+\n+#include <list>\n+\n+void test01()\n+{\n+  std::list<int> a = {};\n+}"}, {"sha": "fed7829193666aae81c43fe057abdf83ab4d44d5", "filename": "libstdc++-v3/testsuite/23_containers/list/requirements/dr438/assign_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3cdd71f455baea8b0c36968239871ab92292577/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Frequirements%2Fdr438%2Fassign_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3cdd71f455baea8b0c36968239871ab92292577/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Frequirements%2Fdr438%2Fassign_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Frequirements%2Fdr438%2Fassign_neg.cc?ref=c3cdd71f455baea8b0c36968239871ab92292577", "patch": "@@ -18,7 +18,7 @@\n // <http://www.gnu.org/licenses/>.\n \n // { dg-do compile }\n-// { dg-error \"no matching\" \"\" { target *-*-* } 1646 }\n+// { dg-error \"no matching\" \"\" { target *-*-* } 1653 }\n \n #include <list>\n "}, {"sha": "f5eae4fec95c9cfd0689f0ab283ee0119c5c2e2b", "filename": "libstdc++-v3/testsuite/23_containers/list/requirements/dr438/constructor_1_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3cdd71f455baea8b0c36968239871ab92292577/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Frequirements%2Fdr438%2Fconstructor_1_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3cdd71f455baea8b0c36968239871ab92292577/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Frequirements%2Fdr438%2Fconstructor_1_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Frequirements%2Fdr438%2Fconstructor_1_neg.cc?ref=c3cdd71f455baea8b0c36968239871ab92292577", "patch": "@@ -18,7 +18,7 @@\n // <http://www.gnu.org/licenses/>.\n \n // { dg-do compile }\n-// { dg-error \"no matching\" \"\" { target *-*-* } 1598 }\n+// { dg-error \"no matching\" \"\" { target *-*-* } 1605 }\n \n #include <list>\n "}, {"sha": "e0fbe975377a833c2ecb6636c0ab1d09982cdd2a", "filename": "libstdc++-v3/testsuite/23_containers/list/requirements/dr438/constructor_2_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3cdd71f455baea8b0c36968239871ab92292577/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Frequirements%2Fdr438%2Fconstructor_2_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3cdd71f455baea8b0c36968239871ab92292577/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Frequirements%2Fdr438%2Fconstructor_2_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Frequirements%2Fdr438%2Fconstructor_2_neg.cc?ref=c3cdd71f455baea8b0c36968239871ab92292577", "patch": "@@ -18,7 +18,7 @@\n // <http://www.gnu.org/licenses/>.\n \n // { dg-do compile }\n-// { dg-error \"no matching\" \"\" { target *-*-* } 1598 }\n+// { dg-error \"no matching\" \"\" { target *-*-* } 1605 }\n \n #include <list>\n #include <utility>"}, {"sha": "3904624a07e4b9978b3b482a2262987d49e8bef5", "filename": "libstdc++-v3/testsuite/23_containers/list/requirements/dr438/insert_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3cdd71f455baea8b0c36968239871ab92292577/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Frequirements%2Fdr438%2Finsert_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3cdd71f455baea8b0c36968239871ab92292577/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Frequirements%2Fdr438%2Finsert_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Frequirements%2Fdr438%2Finsert_neg.cc?ref=c3cdd71f455baea8b0c36968239871ab92292577", "patch": "@@ -18,7 +18,7 @@\n // <http://www.gnu.org/licenses/>.\n \n // { dg-do compile }\n-// { dg-error \"no matching\" \"\" { target *-*-* } 1598 }\n+// { dg-error \"no matching\" \"\" { target *-*-* } 1605 }\n \n #include <list>\n "}, {"sha": "31e09665bc63bcf441bd13aedcd6643db5ff57f5", "filename": "libstdc++-v3/testsuite/23_containers/map/58764.cc", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3cdd71f455baea8b0c36968239871ab92292577/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2F58764.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3cdd71f455baea8b0c36968239871ab92292577/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2F58764.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2F58764.cc?ref=c3cdd71f455baea8b0c36968239871ab92292577", "patch": "@@ -0,0 +1,28 @@\n+// Copyright (C) 2014 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-do compile }\n+// { dg-options \"-std=gnu++11\" }\n+\n+// libstdc++/58764\n+\n+#include <map>\n+\n+void test01()\n+{\n+  std::map<int, int> a = {};\n+}"}, {"sha": "4e85116727be80ccaee0dacc73a7740251c00f62", "filename": "libstdc++-v3/testsuite/23_containers/multimap/58764.cc", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3cdd71f455baea8b0c36968239871ab92292577/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2F58764.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3cdd71f455baea8b0c36968239871ab92292577/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2F58764.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2F58764.cc?ref=c3cdd71f455baea8b0c36968239871ab92292577", "patch": "@@ -0,0 +1,28 @@\n+// Copyright (C) 2014 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-do compile }\n+// { dg-options \"-std=gnu++11\" }\n+\n+// libstdc++/58764\n+\n+#include <map>\n+\n+void test01()\n+{\n+  std::multimap<int, int> a = {};\n+}"}, {"sha": "f827923012e2fa1d1b4081cb805685a7f0c76405", "filename": "libstdc++-v3/testsuite/23_containers/multiset/58764.cc", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3cdd71f455baea8b0c36968239871ab92292577/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2F58764.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3cdd71f455baea8b0c36968239871ab92292577/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2F58764.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2F58764.cc?ref=c3cdd71f455baea8b0c36968239871ab92292577", "patch": "@@ -0,0 +1,28 @@\n+// Copyright (C) 2014 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-do compile }\n+// { dg-options \"-std=gnu++11\" }\n+\n+// libstdc++/58764\n+\n+#include <set>\n+\n+void test01()\n+{\n+  std::multiset<int> a = {};\n+}"}, {"sha": "9a2ae3ac79ac943137e29bfdbda69f8c3717adf1", "filename": "libstdc++-v3/testsuite/23_containers/set/58764.cc", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3cdd71f455baea8b0c36968239871ab92292577/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2F58764.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3cdd71f455baea8b0c36968239871ab92292577/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2F58764.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2F58764.cc?ref=c3cdd71f455baea8b0c36968239871ab92292577", "patch": "@@ -0,0 +1,28 @@\n+// Copyright (C) 2014 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-do compile }\n+// { dg-options \"-std=gnu++11\" }\n+\n+// libstdc++/58764\n+\n+#include <set>\n+\n+void test01()\n+{\n+  std::set<int> a = {};\n+}"}, {"sha": "6a9823c710af3f7d4ba17d45e94bf53d6218b2d3", "filename": "libstdc++-v3/testsuite/23_containers/vector/58764.cc", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3cdd71f455baea8b0c36968239871ab92292577/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2F58764.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3cdd71f455baea8b0c36968239871ab92292577/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2F58764.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2F58764.cc?ref=c3cdd71f455baea8b0c36968239871ab92292577", "patch": "@@ -0,0 +1,29 @@\n+// Copyright (C) 2014 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-do compile }\n+// { dg-options \"-std=gnu++11\" }\n+\n+// libstdc++/58764\n+\n+#include <vector>\n+\n+void test01()\n+{\n+  std::vector<int> a = {};\n+  std::vector<bool> b = {};\n+}"}, {"sha": "cfbe734360106c24c24d4c6ed587956b0c8c3b97", "filename": "libstdc++-v3/testsuite/23_containers/vector/requirements/dr438/assign_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3cdd71f455baea8b0c36968239871ab92292577/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Frequirements%2Fdr438%2Fassign_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3cdd71f455baea8b0c36968239871ab92292577/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Frequirements%2Fdr438%2Fassign_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Frequirements%2Fdr438%2Fassign_neg.cc?ref=c3cdd71f455baea8b0c36968239871ab92292577", "patch": "@@ -18,7 +18,7 @@\n // <http://www.gnu.org/licenses/>.\n \n // { dg-do compile }\n-// { dg-error \"no matching\" \"\" { target *-*-* } 1306 }\n+// { dg-error \"no matching\" \"\" { target *-*-* } 1312 }\n \n #include <vector>\n "}, {"sha": "88b6e0e2d59270d92ce84aa8e8b47a69e3c647e6", "filename": "libstdc++-v3/testsuite/23_containers/vector/requirements/dr438/constructor_1_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3cdd71f455baea8b0c36968239871ab92292577/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Frequirements%2Fdr438%2Fconstructor_1_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3cdd71f455baea8b0c36968239871ab92292577/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Frequirements%2Fdr438%2Fconstructor_1_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Frequirements%2Fdr438%2Fconstructor_1_neg.cc?ref=c3cdd71f455baea8b0c36968239871ab92292577", "patch": "@@ -18,7 +18,7 @@\n // <http://www.gnu.org/licenses/>.\n \n // { dg-do compile }\n-// { dg-error \"no matching\" \"\" { target *-*-* } 1232 }\n+// { dg-error \"no matching\" \"\" { target *-*-* } 1238 }\n \n #include <vector>\n "}, {"sha": "94cc4ba52115ea892509ab488b75ad46431809e7", "filename": "libstdc++-v3/testsuite/23_containers/vector/requirements/dr438/constructor_2_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3cdd71f455baea8b0c36968239871ab92292577/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Frequirements%2Fdr438%2Fconstructor_2_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3cdd71f455baea8b0c36968239871ab92292577/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Frequirements%2Fdr438%2Fconstructor_2_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Frequirements%2Fdr438%2Fconstructor_2_neg.cc?ref=c3cdd71f455baea8b0c36968239871ab92292577", "patch": "@@ -18,7 +18,7 @@\n // <http://www.gnu.org/licenses/>.\n \n // { dg-do compile }\n-// { dg-error \"no matching\" \"\" { target *-*-* } 1232 }\n+// { dg-error \"no matching\" \"\" { target *-*-* } 1238 }\n \n #include <vector>\n #include <utility>"}, {"sha": "de61175bcfede961c88ae556178ebfa83c879947", "filename": "libstdc++-v3/testsuite/23_containers/vector/requirements/dr438/insert_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3cdd71f455baea8b0c36968239871ab92292577/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Frequirements%2Fdr438%2Finsert_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3cdd71f455baea8b0c36968239871ab92292577/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Frequirements%2Fdr438%2Finsert_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Frequirements%2Fdr438%2Finsert_neg.cc?ref=c3cdd71f455baea8b0c36968239871ab92292577", "patch": "@@ -18,7 +18,7 @@\n // <http://www.gnu.org/licenses/>.\n \n // { dg-do compile }\n-// { dg-error \"no matching\" \"\" { target *-*-* } 1347 }\n+// { dg-error \"no matching\" \"\" { target *-*-* } 1353 }\n \n #include <vector>\n "}]}