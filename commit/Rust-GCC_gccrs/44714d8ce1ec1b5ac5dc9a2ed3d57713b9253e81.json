{"sha": "44714d8ce1ec1b5ac5dc9a2ed3d57713b9253e81", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDQ3MTRkOGNlMWVjMWI1YWM1ZGM5YTJlZDNkNTc3MTNiOTI1M2U4MQ==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2016-02-08T17:33:45Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@gcc.gnu.org", "date": "2016-02-08T17:33:45Z"}, "message": "PR preprocessor/69664: fix rich_location::override_column\n\ngcc/testsuite/ChangeLog:\n\tPR preprocessor/69664\n\t* gcc.dg/cpp/trad/comment-2.c: Add expected column number.\n\t* gcc.dg/cpp/warn-comments.c: Likewise.\n\nlibcpp/ChangeLog:\n\tPR preprocessor/69664\n\t* errors.c (cpp_diagnostic_with_line): Only call\n\trich_location::override_column if the column is non-zero.\n\t* line-map.c (rich_location::override_column): Update columns\n\twithin m_ranges[0].  Add assertions to verify that doing so is\n\tsane.\n\nFrom-SVN: r233223", "tree": {"sha": "9fcd123fd85a32e3a218356b240e6888a8a295fa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9fcd123fd85a32e3a218356b240e6888a8a295fa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/44714d8ce1ec1b5ac5dc9a2ed3d57713b9253e81", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44714d8ce1ec1b5ac5dc9a2ed3d57713b9253e81", "html_url": "https://github.com/Rust-GCC/gccrs/commit/44714d8ce1ec1b5ac5dc9a2ed3d57713b9253e81", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44714d8ce1ec1b5ac5dc9a2ed3d57713b9253e81/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f258ad62e3ede7069fa9d3926d6377c111f9c6e5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f258ad62e3ede7069fa9d3926d6377c111f9c6e5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f258ad62e3ede7069fa9d3926d6377c111f9c6e5"}], "stats": {"total": 35, "additions": 30, "deletions": 5}, "files": [{"sha": "82521ec2935c5bf94a4a5e084168f866d7658315", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44714d8ce1ec1b5ac5dc9a2ed3d57713b9253e81/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44714d8ce1ec1b5ac5dc9a2ed3d57713b9253e81/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=44714d8ce1ec1b5ac5dc9a2ed3d57713b9253e81", "patch": "@@ -1,3 +1,9 @@\n+2016-02-08  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR preprocessor/69664\n+\t* gcc.dg/cpp/trad/comment-2.c: Add expected column number.\n+\t* gcc.dg/cpp/warn-comments.c: Likewise.\n+\n 2016-02-08  Marek Polacek  <polacek@redhat.com>\n \n \tPR c++/69688"}, {"sha": "310f569427681800a84c7a1984f8226fa4c94f88", "filename": "gcc/testsuite/gcc.dg/cpp/trad/comment-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44714d8ce1ec1b5ac5dc9a2ed3d57713b9253e81/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Ftrad%2Fcomment-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44714d8ce1ec1b5ac5dc9a2ed3d57713b9253e81/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Ftrad%2Fcomment-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Ftrad%2Fcomment-2.c?ref=44714d8ce1ec1b5ac5dc9a2ed3d57713b9253e81", "patch": "@@ -8,4 +8,4 @@\n \n /*\n \n- /* { dg-warning \"within comment\" } */\n+ /* { dg-warning \"2: within comment\" } */"}, {"sha": "bbe28215894e887161b3e171f3daa1e03de8c526", "filename": "gcc/testsuite/gcc.dg/cpp/warn-comments.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44714d8ce1ec1b5ac5dc9a2ed3d57713b9253e81/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fwarn-comments.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44714d8ce1ec1b5ac5dc9a2ed3d57713b9253e81/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fwarn-comments.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fwarn-comments.c?ref=44714d8ce1ec1b5ac5dc9a2ed3d57713b9253e81", "patch": "@@ -1,7 +1,7 @@\n // { dg-do preprocess }\n // { dg-options \"-std=gnu99 -fdiagnostics-show-option -Wcomments\" }\n \n-/* /* */  // { dg-warning \"\\\"\\.\\*\\\" within comment .-Wcomment.\" }\n+/* /* */  // { dg-warning \"4: \\\"\\.\\*\\\" within comment .-Wcomment.\" }\n \n // \\\n-          // { dg-warning \"multi-line comment .-Wcomment.\" \"multi-line\" { target *-*-* } 6 }\n+          // { dg-warning \"1: multi-line comment .-Wcomment.\" \"multi-line\" { target *-*-* } 6 }"}, {"sha": "a5cef17df458a4735ee1c6d959ebac4be8ab83fc", "filename": "libcpp/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44714d8ce1ec1b5ac5dc9a2ed3d57713b9253e81/libcpp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44714d8ce1ec1b5ac5dc9a2ed3d57713b9253e81/libcpp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2FChangeLog?ref=44714d8ce1ec1b5ac5dc9a2ed3d57713b9253e81", "patch": "@@ -1,3 +1,12 @@\n+2016-02-08  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR preprocessor/69664\n+\t* errors.c (cpp_diagnostic_with_line): Only call\n+\trich_location::override_column if the column is non-zero.\n+\t* line-map.c (rich_location::override_column): Update columns\n+\twithin m_ranges[0].  Add assertions to verify that doing so is\n+\tsane.\n+\n 2016-02-05  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/69628"}, {"sha": "984737877be5e7827f0e515380b7f6298ff2e85f", "filename": "libcpp/errors.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44714d8ce1ec1b5ac5dc9a2ed3d57713b9253e81/libcpp%2Ferrors.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44714d8ce1ec1b5ac5dc9a2ed3d57713b9253e81/libcpp%2Ferrors.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Ferrors.c?ref=44714d8ce1ec1b5ac5dc9a2ed3d57713b9253e81", "patch": "@@ -141,7 +141,8 @@ cpp_diagnostic_with_line (cpp_reader * pfile, int level, int reason,\n   if (!pfile->cb.error)\n     abort ();\n   rich_location richloc (pfile->line_table, src_loc);\n-  richloc.override_column (column);\n+  if (column)\n+    richloc.override_column (column);\n   ret = pfile->cb.error (pfile, level, reason, &richloc, _(msgid), ap);\n \n   return ret;"}, {"sha": "e9175dfa307017c81307ec46b365878677fc2e21", "filename": "libcpp/line-map.c", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44714d8ce1ec1b5ac5dc9a2ed3d57713b9253e81/libcpp%2Fline-map.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44714d8ce1ec1b5ac5dc9a2ed3d57713b9253e81/libcpp%2Fline-map.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fline-map.c?ref=44714d8ce1ec1b5ac5dc9a2ed3d57713b9253e81", "patch": "@@ -2036,13 +2036,22 @@ rich_location::lazily_expand_location ()\n   return m_expanded_location;\n }\n \n-/* Set the column of the primary location.  */\n+/* Set the column of the primary location.  This can only be called for\n+   rich_location instances for which the primary location has\n+   caret==start==finish.  */\n \n void\n rich_location::override_column (int column)\n {\n   lazily_expand_location ();\n+  gcc_assert (m_ranges[0].m_show_caret_p);\n+  gcc_assert (m_ranges[0].m_caret.column == m_expanded_location.column);\n+  gcc_assert (m_ranges[0].m_start.column == m_expanded_location.column);\n+  gcc_assert (m_ranges[0].m_finish.column == m_expanded_location.column);\n   m_expanded_location.column = column;\n+  m_ranges[0].m_caret.column = column;\n+  m_ranges[0].m_start.column = column;\n+  m_ranges[0].m_finish.column = column;\n }\n \n /* Add the given range.  */"}]}