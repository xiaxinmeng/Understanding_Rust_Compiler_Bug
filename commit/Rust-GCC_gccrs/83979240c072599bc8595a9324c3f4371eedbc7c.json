{"sha": "83979240c072599bc8595a9324c3f4371eedbc7c", "node_id": "C_kwDOANBUbNoAKDgzOTc5MjQwYzA3MjU5OWJjODU5NWE5MzI0YzNmNDM3MWVlZGJjN2M", "commit": {"author": {"name": "Iain Sandoe", "email": "iain@sandoe.co.uk", "date": "2023-01-26T13:49:11Z"}, "committer": {"name": "Iain Sandoe", "email": "iain@sandoe.co.uk", "date": "2023-01-27T08:48:20Z"}, "message": "Modula-2: Add claimed command line options to lang.opt [PR108555].\n\nThis is a partial reversion of the changes in r13-5373-g80cf2c5e8f496b.\n\nAs observed in the PR, handling the C and Driver options in the Modula-2\nlang-specific code could be difficult to emulate; This reverts to adding\nthe required options to the language-specific .opt file.\n\nSigned-off-by: Iain Sandoe <iain@sandoe.co.uk>\n\n\tPR modula2/108555\n\tPR modula2/108182\n\tPR modula2/102343\n\ngcc/m2/ChangeLog:\n\n\t* gm2-lang.cc (gm2_langhook_option_lang_mask): Do not claim CL_C\n\tor CL_DRIVER.\n\t(gm2_langhook_init_options): Handle options that we want to pass\n\tto the preprocessor.\n\t* lang-specs.h: Pass -B and -save-temps to regular compile lines.\n\t* lang.opt: Add C and Driver options that Modula-2 intercepts for\n\tinternal use. Reorder options into two sections and to collate.", "tree": {"sha": "9cac130fe9bf70cc1e92ef9556e5e370ebac0bc3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9cac130fe9bf70cc1e92ef9556e5e370ebac0bc3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/83979240c072599bc8595a9324c3f4371eedbc7c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/83979240c072599bc8595a9324c3f4371eedbc7c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/83979240c072599bc8595a9324c3f4371eedbc7c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/83979240c072599bc8595a9324c3f4371eedbc7c/comments", "author": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "committer": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d1e0575fdc9216f96c4f88f9f41a25b854300c0b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d1e0575fdc9216f96c4f88f9f41a25b854300c0b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d1e0575fdc9216f96c4f88f9f41a25b854300c0b"}], "stats": {"total": 243, "additions": 177, "deletions": 66}, "files": [{"sha": "999c57c1cfa0d4fc40fff0447c795b2aa5d63ec1", "filename": "gcc/m2/gm2-lang.cc", "status": "modified", "additions": 27, "deletions": 26, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83979240c072599bc8595a9324c3f4371eedbc7c/gcc%2Fm2%2Fgm2-lang.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83979240c072599bc8595a9324c3f4371eedbc7c/gcc%2Fm2%2Fgm2-lang.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-lang.cc?ref=83979240c072599bc8595a9324c3f4371eedbc7c", "patch": "@@ -137,9 +137,7 @@ gm2_langhook_init (void)\n static unsigned int\n gm2_langhook_option_lang_mask (void)\n {\n-  /* We need to process some driver options and pass through some C\n-     ones to build our preprocessing lines.  */\n-  return CL_ModulaX2 | CL_C | CL_DRIVER;\n+  return CL_ModulaX2;\n }\n \n /* Initialize the options structure.  */\n@@ -262,21 +260,22 @@ gm2_langhook_init_options (unsigned int decoded_options_count,\n \t     For now skip all plugins to avoid fails with the m2 one.  */\n \t  break;\n \n-\t/* Preprocessor arguments with a following filename.  */\n+\t/* Preprocessor arguments with a following filename, we add these\n+\t   back to the main file preprocess line, but not to dependents\n+\t   TODO Handle MF.  */\n \tcase OPT_MD:\n+\t  M2Options_SetMD (arg);\n+\t  break;\n \tcase OPT_MMD:\n-\t  /* Save the filename associated with the MD/MMD which will also\n-\t     mark the option as used.  FIXME: maybe we should diagnose a\n-\t     missing filename here, rather than assert.  */\n-\t  gcc_checking_assert (i+1 < decoded_options_count);\n-\t  gcc_checking_assert (decoded_options[i+1].opt_index\n-\t\t\t       == OPT_SPECIAL_input_file);\n-\t  /* Pick up the following filename.  */\n-\t  arg = decoded_options[i+1].arg;\n-\t  if (code == OPT_MD)\n-\t    M2Options_SetMD (arg);\n-\t  else\n-\t    M2Options_SetMMD (arg);\n+\t  M2Options_SetMMD (arg);\n+\t  break;\n+\n+\t/* Modula 2 claimed options we pass to the preprocessor.  */\n+\tcase OPT_ansi:\n+\tcase OPT_traditional_cpp:\n+\t  if (building_cpp_command)\n+\t    M2Options_CppArg (opt, arg, (option->flags & CL_JOINED)\n+\t\t\t      && !(option->flags & CL_SEPARATE));\n \t  break;\n \n \t/* Options we act on and also pass to the preprocessor.  */\n@@ -286,6 +285,12 @@ gm2_langhook_init_options (unsigned int decoded_options_count,\n \t    M2Options_CppArg (opt, arg, (option->flags & CL_JOINED)\n \t\t\t      && !(option->flags & CL_SEPARATE));\n \t  break;\n+\tcase OPT_quiet:\n+\t  M2Options_SetQuiet (value);\n+\t  if (building_cpp_command)\n+\t    M2Options_CppArg (opt, arg, (option->flags & CL_JOINED)\n+\t\t\t      && !(option->flags & CL_SEPARATE));\n+\t  break;\n \tcase OPT_v:\n \t  M2Options_SetVerbose (value);\n \t  /* FALLTHROUGH */\n@@ -533,9 +538,6 @@ gm2_langhook_handle_option (\n       /* Otherwise, ignored, at least for now. */\n       return 1;\n       break;\n-    case OPT_quiet:\n-      M2Options_SetQuiet (value);\n-      return 1;\n     case OPT_fm2_whole_program:\n       M2Options_SetWholeProgram (value);\n       return 1;\n@@ -557,20 +559,19 @@ gm2_langhook_handle_option (\n         }\n       else\n         return 0;\n-    case OPT_o:\n-      /* Options we ignore, always.  */\n-      return 1;\n     default:\n       if (insideCppArgs)\n-\t/* Already handled.  */\n+\t/* Handled in gm2_langhook_init_options ().  */\n \treturn 1;\n       else if (option->flags & CL_DRIVER)\n-\t/* Ignore driver options we do not specifically use.  */\n+\t/* Driver options (unless specifically claimed above) should be handled\n+\t   in gm2_langhook_init_options ().  */\n \treturn 1;\n       else if (option->flags & CL_C)\n-\t/* Ignore C options we do not specifically use.  */\n+\t/* C options (unless specifically claimed above) should be handled\n+\t   in gm2_langhook_init_options ().  */\n \treturn 1;\n-      return 0;\n+      break;\n     }\n   return 0;\n }"}, {"sha": "65004e1cabd83a014f305c306f9c7e95b0b6a6a4", "filename": "gcc/m2/lang-specs.h", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83979240c072599bc8595a9324c3f4371eedbc7c/gcc%2Fm2%2Flang-specs.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83979240c072599bc8595a9324c3f4371eedbc7c/gcc%2Fm2%2Flang-specs.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Flang-specs.h?ref=83979240c072599bc8595a9324c3f4371eedbc7c", "patch": "@@ -26,7 +26,7 @@ along with GCC; see the file COPYING3.  If not see\n   \"%{E|M|MM|fcpp: %{E} -fcpp-begin \" \\\n   \"      %{!E:-E} %(cpp_unique_options) -traditional-cpp -ansi \" \\\n   \"      -fcpp-end %{B*} %{save-temps*} ; \\\n-     : %{v} %I } \"\n+     : %{v} %I %{B*} %{save-temps*} } \"\n \n /* We have three modes:\n    1. When the preprocessing step is explict and there is no following\n@@ -44,7 +44,8 @@ along with GCC; see the file COPYING3.  If not see\n       cc1gm2 \" M2CPP \" %{!fcpp:-fcpp;:%{fcpp}} %{I*} %i } \\\n     %{!E:%{!M:%{!MM:\\\n       cc1gm2 \" M2CPP \" %(cc1_options) %{I*} %i %{c} \\\n-      %{MF*:%eto generate dependencies you must specify either '-M' or '-MM'} \\\n+      %{!fcpp:%{MD|MMD|MF*: \\\n+\t\t%eto generate dependencies you must specify '-fcpp' }} \\\n       %{!fsyntax-only:%(invoke_as)} \\\n     }}}\", 0, 0, 0},\n   {\".m2i\", \"@modula-2-cpp-output\", 0, 0, 0},"}, {"sha": "ab4ea5547eb145a600d46e86603c5a0e8f69b60b", "filename": "gcc/m2/lang.opt", "status": "modified", "additions": 147, "deletions": 38, "changes": 185, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83979240c072599bc8595a9324c3f4371eedbc7c/gcc%2Fm2%2Flang.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83979240c072599bc8595a9324c3f4371eedbc7c/gcc%2Fm2%2Flang.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Flang.opt?ref=83979240c072599bc8595a9324c3f4371eedbc7c", "patch": "@@ -21,19 +21,15 @@\n \n ; See the GCC internals manual for a description of this file's format.\n \n+; There are two sections:\n+;  1. Options specific to Modula-2\n+;  2. Options shared with C or the Driver.\n+; Please keep any new additions for either case in the relevant section.\n ; Please try to keep this file in ASCII collating order.\n \n Language\n Modula-2\n \n-Wall\n-Modula-2\n-; Documented in c.opt\n-\n-Wpedantic\n-Modula-2\n-; Documented in common.opt\n-\n Wpedantic-param-names\n Modula-2\n compiler checks to force definition module procedure parameter names with their implementation module counterpart\n@@ -50,18 +46,6 @@ Wstyle\n Modula-2\n extra compile time semantic checking, typically tries to catch poor programming style\n \n-Wunused-variable\n-Modula-2\n-; Documented in c.opt\n-\n-Wunused-parameter\n-Modula-2\n-; Documented in c.opt\n-\n-c\n-Modula-2\n-; Documented in c.opt\n-\n fauto-init\n Modula-2\n automatically initializes all pointers to NIL\n@@ -74,10 +58,6 @@ fcase\n Modula-2\n turns on runtime checking to check whether a CASE statement requires an ELSE clause when on was not specified\n \n-fobjc-std=objc1\n-Modula-2\n-; Documented in c.opt\n-\n fcpp\n Modula-2\n use cpp to preprocess the module\n@@ -118,10 +98,6 @@ fdump-system-exports\n Modula-2\n display all inbuilt system items\n \n-fexceptions\n-Modula-2\n-; Documented in common.opt\n-\n fextended-opaque\n Modula-2\n allows opaque types to be implemented as any type (a GNU Modula-2 extension)\n@@ -202,10 +178,6 @@ fpositive-mod-floor-div\n Modula-2\n force positive result from MOD and DIV result floor\n \n-fpreprocessed\n-Modula-2\n-; Documented in c.opt\n-\n fpthread\n Modula-2\n link against the pthread library (default on)\n@@ -282,16 +254,153 @@ fwholevalue\n Modula-2\n turns on runtime checking to check whether a whole number is about to exceed range\n \n-;fworking-directory\n-;Modula-2\n+static-libgm2\n+Driver\n+Link the standard Modula-2 libraries statically in the compilation.\n+\n+; Here are C options that we also recognise, either within the compiler\n+; or to build the preprocessor command lines.\n+\n+Wall\n+Modula-2\n ; Documented in c.opt\n \n-lang-asm\n+Wpedantic\n+Modula-2\n+; Documented in common.opt\n+\n+Wunused-variable\n Modula-2\n ; Documented in c.opt\n \n-static-libgm2\n-Driver\n-Link the standard Modula-2 libraries statically in the compilation.\n+Wunused-parameter\n+Modula-2\n+; Documented in c.opt\n+\n+B\n+Modula-2\n+; Documented in c.opt\n+\n+D\n+Modula-2\n+; Documented in c.opt\n+\n+E\n+Modula-2\n+; Documented in c.opt\n+\n+I\n+Modula-2 Joined Separate\n+; Documented in c.opt\n+\n+L\n+Modula-2 Joined Separate\n+; Not documented\n+\n+M\n+Modula-2\n+; Documented in c.opt\n+\n+MD\n+Modula-2\n+; Documented in c.opt\n+\n+MF\n+Modula-2\n+; Documented in c.opt\n+\n+MG\n+Modula-2\n+; Documented in c.opt\n+\n+MM\n+Modula-2\n+; Documented in c.opt\n+\n+MMD\n+Modula-2\n+; Documented in c.opt\n+\n+Mmodules\n+Modula-2\n+; Documented in c.opt\n+\n+Mno-modules\n+Modula-2\n+; Documented in c.opt\n+\n+MP\n+Modula-2\n+; Documented in c.opt\n+\n+MQ\n+Modula-2\n+; Documented in c.opt\n+\n+MT\n+Modula-2\n+; Documented in c.opt\n+\n+P\n+Modula-2\n+; Documented in c.opt\n+\n+ansi\n+Modula-2\n+; Documented in c.opt\n+\n+c\n+Modula-2\n+; Documented in c.opt\n+\n+fexceptions\n+Modula-2\n+; Documented in common.opt\n+\n+fobjc-std=objc1\n+Modula-2\n+; Documented in c.opt\n+\n+fpreprocessed\n+Modula-2\n+; Documented in c.opt\n+\n+fworking-directory\n+Modula-2\n+; Documented in c.opt\n+\n+iprefix\n+Modula-2\n+; Documented in c.opt\n+\n+iquote\n+Modula-2\n+; Documented in c.opt\n+\n+isystem\n+Modula-2\n+; Documented in c.opt\n+\n+idirafter\n+Modula-2\n+; Documented in c.opt\n+\n+imultilib\n+Modula-2\n+\n+-save-temps\n+Modula-2 Alias(save-temps)\n+\n+save-temps\n+Modula-2\n+save temporary preprocessed files\n+\n+save-temps=\n+Modula-2 Joined\n+save temporary preprocessed files\n+\n+traditional-cpp\n+Modula-2\n+; Documented in c.opt\n \n ; This comment is to ensure we retain the blank line above."}]}