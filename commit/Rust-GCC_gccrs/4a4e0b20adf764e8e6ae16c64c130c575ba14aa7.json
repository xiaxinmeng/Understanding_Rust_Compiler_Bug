{"sha": "4a4e0b20adf764e8e6ae16c64c130c575ba14aa7", "node_id": "C_kwDOANBUbNoAKDRhNGUwYjIwYWRmNzY0ZThlNmFlMTZjNjRjMTMwYzU3NWJhMTRhYTc", "commit": {"author": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2023-02-21T20:13:49Z"}, "committer": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2023-02-21T20:13:49Z"}, "message": "Merge commit 'ecc863e85efe259c799515de0c38c2297b0e3bd7' into HEAD", "tree": {"sha": "9f67265e7d4a5499877759c6e1fdc78d772722eb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9f67265e7d4a5499877759c6e1fdc78d772722eb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4a4e0b20adf764e8e6ae16c64c130c575ba14aa7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a4e0b20adf764e8e6ae16c64c130c575ba14aa7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4a4e0b20adf764e8e6ae16c64c130c575ba14aa7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a4e0b20adf764e8e6ae16c64c130c575ba14aa7/comments", "author": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "017e88785acdaf209e7e00e6ed524fb0e2fdc38a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/017e88785acdaf209e7e00e6ed524fb0e2fdc38a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/017e88785acdaf209e7e00e6ed524fb0e2fdc38a"}, {"sha": "ecc863e85efe259c799515de0c38c2297b0e3bd7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ecc863e85efe259c799515de0c38c2297b0e3bd7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ecc863e85efe259c799515de0c38c2297b0e3bd7"}], "stats": {"total": 572, "additions": 494, "deletions": 78}, "files": [{"sha": "3ab2938388aac2b661f14ced456b65bafd9c9fc2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a4e0b20adf764e8e6ae16c64c130c575ba14aa7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a4e0b20adf764e8e6ae16c64c130c575ba14aa7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4a4e0b20adf764e8e6ae16c64c130c575ba14aa7", "patch": "@@ -1,3 +1,49 @@\n+2023-02-20  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/predicates.md\n+\t(general_x64constmem_operand): New predicate.\n+\t* config/i386/i386.md (*cmpqi_ext<mode>_1):\n+\tUse nonimm_x64constmem_operand.\n+\t(*cmpqi_ext<mode>_3): Use general_x64constmem_operand.\n+\t(*addqi_ext<mode>_1): Ditto.\n+\t(*testqi_ext<mode>_1): Ditto.\n+\t(*andqi_ext<mode>_1): Ditto.\n+\t(*andqi_ext<mode>_1_cc): Ditto.\n+\t(*<any_or:code>qi_ext<mode>_1): Ditto.\n+\t(*xorqi_ext<mode>_1_cc): Ditto.\n+\n+2023-02-20  Jakub Jelinek  <jakub2redhat.com>\n+\n+\tPR target/108862\n+\t* config/rs6000/rs6000.md (umaddditi4): Swap gen_maddlddi4 with\n+\tgen_umadddi4_highpart{,_le}.\n+\n+2023-02-20  Kito Cheng  <kito.cheng@sifive.com>\n+\n+\t* config/riscv/riscv.md (prefetch): Use r instead of p for the\n+\taddress operand.\n+\t(riscv_prefetchi_<mode>): Ditto.\n+\n+2023-02-20  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/108816\n+\t* tree-vect-loop-manip.cc (vect_loop_versioning): Adjust\n+\tversioning condition split prerequesite, assert required\n+\tinvariant.\n+\n+2023-02-20  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/108825\n+\t* tree-ssa-loop-manip.cc (verify_loop_closed_ssa): For\n+\tloop-local verfication only verify there's no pending SSA\n+\tupdate.\n+\n+2023-02-20  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/108819\n+\t* tree-ssa-loop-niter.cc (number_of_iterations_cltz): Check\n+\twe have an SSA name as iv_2 as expected.\n+\n 2023-02-18  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/108819"}, {"sha": "6d7db2787dbbecadf4167e2789df149c81519d07", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a4e0b20adf764e8e6ae16c64c130c575ba14aa7/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a4e0b20adf764e8e6ae16c64c130c575ba14aa7/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=4a4e0b20adf764e8e6ae16c64c130c575ba14aa7", "patch": "@@ -1 +1 @@\n-20230220\n+20230221"}, {"sha": "4d7f6c3d2912c9dcb150d8d219dce07d99ada0a6", "filename": "gcc/calls.cc", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a4e0b20adf764e8e6ae16c64c130c575ba14aa7/gcc%2Fcalls.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a4e0b20adf764e8e6ae16c64c130c575ba14aa7/gcc%2Fcalls.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcalls.cc?ref=4a4e0b20adf764e8e6ae16c64c130c575ba14aa7", "patch": "@@ -506,11 +506,11 @@ emit_call_1 (rtx funexp, tree fntree ATTRIBUTE_UNUSED, tree fndecl ATTRIBUTE_UNU\n   if (ecf_flags & ECF_NORETURN)\n     add_reg_note (call_insn, REG_NORETURN, const0_rtx);\n \n-  if (ecf_flags & ECF_RETURNS_TWICE\n-      /* We rely on GIMPLE setting this flag and here use it to\n-\t catch formerly indirect and not control-altering calls.  */\n-      && cfun->calls_setjmp)\n-    add_reg_note (call_insn, REG_SETJMP, const0_rtx);\n+  if (ecf_flags & ECF_RETURNS_TWICE)\n+    {\n+      add_reg_note (call_insn, REG_SETJMP, const0_rtx);\n+      cfun->calls_setjmp = 1;\n+    }\n \n   SIBLING_CALL_P (call_insn) = ((ecf_flags & ECF_SIBCALL) != 0);\n "}, {"sha": "25b1558dcb941ea491a19aeeb2cd8f4d2dbdf7c6", "filename": "gcc/cfgexpand.cc", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a4e0b20adf764e8e6ae16c64c130c575ba14aa7/gcc%2Fcfgexpand.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a4e0b20adf764e8e6ae16c64c130c575ba14aa7/gcc%2Fcfgexpand.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgexpand.cc?ref=4a4e0b20adf764e8e6ae16c64c130c575ba14aa7", "patch": "@@ -2808,11 +2808,6 @@ expand_call_stmt (gcall *stmt)\n   /* Must come after copying location.  */\n   copy_warning (exp, stmt);\n \n-  /* For calls that do not alter control flow avoid REG_SETJMP notes.  */\n-  bool saved_calls_setjmp = cfun->calls_setjmp;\n-  if (!gimple_call_ctrl_altering_p (stmt))\n-    cfun->calls_setjmp = false;\n-\n   /* Ensure RTL is created for debug args.  */\n   if (decl && DECL_HAS_DEBUG_ARGS_P (decl))\n     {\n@@ -2851,8 +2846,6 @@ expand_call_stmt (gcall *stmt)\n     }\n \n   mark_transaction_restart_calls (stmt);\n-\n-  cfun->calls_setjmp = saved_calls_setjmp;\n }\n \n "}, {"sha": "8ebb12be2c90752a4af01bb3d94be14bec60a7eb", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a4e0b20adf764e8e6ae16c64c130c575ba14aa7/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a4e0b20adf764e8e6ae16c64c130c575ba14aa7/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=4a4e0b20adf764e8e6ae16c64c130c575ba14aa7", "patch": "@@ -1456,7 +1456,7 @@\n (define_insn \"*cmpqi_ext<mode>_1\"\n   [(set (reg FLAGS_REG)\n \t(compare\n-\t  (match_operand:QI 0 \"nonimmediate_operand\" \"QBc,m\")\n+\t  (match_operand:QI 0 \"nonimm_x64constmem_operand\" \"QBc,m\")\n \t  (subreg:QI\n \t    (zero_extract:SWI248\n \t      (match_operand 1 \"int248_register_operand\" \"Q,Q\")\n@@ -1501,7 +1501,7 @@\n \t      (match_operand 0 \"int248_register_operand\" \"Q,Q\")\n \t      (const_int 8)\n \t      (const_int 8)) 0)\n-\t  (match_operand:QI 1 \"general_operand\" \"QnBc,m\")))]\n+\t  (match_operand:QI 1 \"general_x64constmem_operand\" \"QnBc,m\")))]\n   \"ix86_match_ccmode (insn, CCmode)\"\n   \"cmp{b}\\t{%1, %h0|%h0, %1}\"\n   [(set_attr \"isa\" \"*,nox64\")\n@@ -6683,7 +6683,7 @@\n \t        (match_operand 1 \"int248_register_operand\" \"0,0\")\n \t\t(const_int 8)\n \t\t(const_int 8)) 0)\n-\t    (match_operand:QI 2 \"general_operand\" \"QnBc,m\")) 0))\n+\t    (match_operand:QI 2 \"general_x64constmem_operand\" \"QnBc,m\")) 0))\n    (clobber (reg:CC FLAGS_REG))]\n   \"/* FIXME: without this LRA can't reload this pattern, see PR82524.  */\n    rtx_equal_p (operands[0], operands[1])\"\n@@ -9901,7 +9901,7 @@\n \t        (match_operand 0 \"int248_register_operand\" \"Q,Q\")\n \t\t(const_int 8)\n \t\t(const_int 8)) 0)\n-\t    (match_operand:QI 1 \"general_operand\" \"QnBc,m\"))\n+\t    (match_operand:QI 1 \"general_x64constmem_operand\" \"QnBc,m\"))\n \t  (const_int 0)))]\n   \"ix86_match_ccmode (insn, CCNOmode)\"\n   \"test{b}\\t{%1, %h0|%h0, %1}\"\n@@ -10602,7 +10602,7 @@\n \t        (match_operand 1 \"int248_register_operand\" \"0,0\")\n \t\t(const_int 8)\n \t\t(const_int 8)) 0)\n-\t    (match_operand:QI 2 \"general_operand\" \"QnBc,m\")) 0))\n+\t    (match_operand:QI 2 \"general_x64constmem_operand\" \"QnBc,m\")) 0))\n    (clobber (reg:CC FLAGS_REG))]\n   \"/* FIXME: without this LRA can't reload this pattern, see PR82524.  */\n    rtx_equal_p (operands[0], operands[1])\"\n@@ -10622,7 +10622,7 @@\n \t        (match_operand 1 \"int248_register_operand\" \"0,0\")\n \t\t(const_int 8)\n \t\t(const_int 8)) 0)\n-\t    (match_operand:QI 2 \"general_operand\" \"QnBc,m\"))\n+\t    (match_operand:QI 2 \"general_x64constmem_operand\" \"QnBc,m\"))\n \t  (const_int 0)))\n    (set (zero_extract:SWI248\n \t  (match_operand 0 \"int248_register_operand\" \"+Q,Q\")\n@@ -11345,7 +11345,7 @@\n \t        (match_operand 1 \"int248_register_operand\" \"0,0\")\n \t\t(const_int 8)\n \t\t(const_int 8)) 0)\n-\t    (match_operand:QI 2 \"general_operand\" \"QnBc,m\")) 0))\n+\t    (match_operand:QI 2 \"general_x64constmem_operand\" \"QnBc,m\")) 0))\n    (clobber (reg:CC FLAGS_REG))]\n   \"(!TARGET_PARTIAL_REG_STALL || optimize_function_for_size_p (cfun))\n    /* FIXME: without this LRA can't reload this pattern, see PR82524.  */\n@@ -11473,7 +11473,7 @@\n \t        (match_operand 1 \"int248_register_operand\" \"0,0\")\n \t\t(const_int 8)\n \t\t(const_int 8)) 0)\n-\t    (match_operand:QI 2 \"general_operand\" \"QnBc,m\"))\n+\t    (match_operand:QI 2 \"general_x64constmem_operand\" \"QnBc,m\"))\n \t  (const_int 0)))\n    (set (zero_extract:SWI248\n \t  (match_operand 0 \"int248_register_operand\" \"+Q,Q\")"}, {"sha": "b4d9ab40ab93c4a92de796dd805263efca4a5c73", "filename": "gcc/config/i386/predicates.md", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a4e0b20adf764e8e6ae16c64c130c575ba14aa7/gcc%2Fconfig%2Fi386%2Fpredicates.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a4e0b20adf764e8e6ae16c64c130c575ba14aa7/gcc%2Fconfig%2Fi386%2Fpredicates.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fpredicates.md?ref=4a4e0b20adf764e8e6ae16c64c130c575ba14aa7", "patch": "@@ -116,6 +116,13 @@\n \t    (ior (not (match_test \"TARGET_64BIT\"))\n \t\t (match_test \"constant_address_p (XEXP (op, 0))\")))))\n \n+;; Match general operand, but exclude non-constant addresses for x86_64.\n+(define_predicate \"general_x64constmem_operand\"\n+  (ior (match_operand 0 \"nonmemory_operand\")\n+       (and (match_operand 0 \"memory_operand\")\n+\t    (ior (not (match_test \"TARGET_64BIT\"))\n+\t\t (match_test \"constant_address_p (XEXP (op, 0))\")))))\n+\n ;; Match register operands, but include memory operands for TARGET_SSE_MATH.\n (define_predicate \"register_ssemem_operand\"\n   (if_then_else"}, {"sha": "a5507fadc2d9fc2e63694265ad38d839ecd0acfb", "filename": "gcc/config/riscv/riscv.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a4e0b20adf764e8e6ae16c64c130c575ba14aa7/gcc%2Fconfig%2Friscv%2Friscv.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a4e0b20adf764e8e6ae16c64c130c575ba14aa7/gcc%2Fconfig%2Friscv%2Friscv.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Friscv%2Friscv.md?ref=4a4e0b20adf764e8e6ae16c64c130c575ba14aa7", "patch": "@@ -3066,7 +3066,7 @@\n )\n \n (define_insn \"prefetch\"\n-  [(prefetch (match_operand 0 \"address_operand\" \"p\")\n+  [(prefetch (match_operand 0 \"address_operand\" \"r\")\n              (match_operand 1 \"imm5_operand\" \"i\")\n              (match_operand 2 \"const_int_operand\" \"n\"))]\n   \"TARGET_ZICBOP\"\n@@ -3080,7 +3080,7 @@\n })\n \n (define_insn \"riscv_prefetchi_<mode>\"\n-  [(unspec_volatile:X [(match_operand:X 0 \"address_operand\" \"p\")\n+  [(unspec_volatile:X [(match_operand:X 0 \"address_operand\" \"r\")\n               (match_operand:X 1 \"imm5_operand\" \"i\")]\n               UNSPECV_PREI)]\n   \"TARGET_ZICBOP\""}, {"sha": "81bffb04ceb0c237feec10176acc972a444c7a38", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a4e0b20adf764e8e6ae16c64c130c575ba14aa7/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a4e0b20adf764e8e6ae16c64c130c575ba14aa7/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=4a4e0b20adf764e8e6ae16c64c130c575ba14aa7", "patch": "@@ -3249,15 +3249,15 @@\n   rtx op3_hi = gen_rtx_SUBREG (DImode, operands[3], BYTES_BIG_ENDIAN ? 0 : 8);\n   rtx hi_temp = gen_reg_rtx (DImode);\n \n-  emit_insn (gen_maddlddi4 (op0_lo, operands[1], operands[2], op3_lo));\n-\n   if (BYTES_BIG_ENDIAN)\n     emit_insn (gen_umadddi4_highpart (hi_temp, operands[1], operands[2],\n \t\t\t\t      op3_lo));\n   else\n     emit_insn (gen_umadddi4_highpart_le (hi_temp, operands[1], operands[2],\n \t\t\t\t\t op3_lo));\n \n+  emit_insn (gen_maddlddi4 (op0_lo, operands[1], operands[2], op3_lo));\n+\n   emit_insn (gen_adddi3 (op0_hi, hi_temp, op3_hi));\n \n   DONE;"}, {"sha": "d0320efe21d488912a597ac728712b7b2693b9a6", "filename": "gcc/config/xtensa/xtensa.cc", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a4e0b20adf764e8e6ae16c64c130c575ba14aa7/gcc%2Fconfig%2Fxtensa%2Fxtensa.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a4e0b20adf764e8e6ae16c64c130c575ba14aa7/gcc%2Fconfig%2Fxtensa%2Fxtensa.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fxtensa%2Fxtensa.cc?ref=4a4e0b20adf764e8e6ae16c64c130c575ba14aa7", "patch": "@@ -3223,8 +3223,11 @@ xtensa_call_save_reg (int regno)\n     return false;\n \n   if (regno == A0_REG)\n-    return crtl->profile || !crtl->is_leaf || crtl->calls_eh_return ||\n-      df_regs_ever_live_p (regno);\n+    /* Ensure the return address to be saved to the stack slot in order\n+       to assist stack dump analysis when -Og is specified.  */\n+    return optimize_debug\n+\t   || crtl->profile || !crtl->is_leaf || crtl->calls_eh_return\n+\t   || df_regs_ever_live_p (regno);\n \n   if (crtl->calls_eh_return && IN_RANGE (regno, 2, 3))\n     return true;"}, {"sha": "302e06665b92c6dbd641a7ac9081919ef60c8280", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a4e0b20adf764e8e6ae16c64c130c575ba14aa7/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a4e0b20adf764e8e6ae16c64c130c575ba14aa7/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=4a4e0b20adf764e8e6ae16c64c130c575ba14aa7", "patch": "@@ -1,3 +1,16 @@\n+2023-02-20  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/101073\n+\t* constexpr.cc (cxx_eval_call_expression): Replace shortcutting trivial\n+\tconstructor/op= with a checking assert.\n+\n+2023-02-20  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/108829\n+\t* pt.cc (prepend_one_capture): Set LAMBDA_CAPTURE_EXPLICIT_P.\n+\t(tsubst_lambda_expr): Pass LAMBDA_CAPTURE_EXPLICIT_P to\n+\tprepend_one_capture.\n+\n 2023-02-18  Jason Merrill  <jason@redhat.com>\n \n \tDR 2518"}, {"sha": "b4d3e95bbd59d2b5920f270a22d57e1b426a8835", "filename": "gcc/cp/constexpr.cc", "status": "modified", "additions": 3, "deletions": 22, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a4e0b20adf764e8e6ae16c64c130c575ba14aa7/gcc%2Fcp%2Fconstexpr.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a4e0b20adf764e8e6ae16c64c130c575ba14aa7/gcc%2Fcp%2Fconstexpr.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fconstexpr.cc?ref=4a4e0b20adf764e8e6ae16c64c130c575ba14aa7", "patch": "@@ -2866,28 +2866,9 @@ cxx_eval_call_expression (const constexpr_ctx *ctx, tree t,\n       ctx = &new_ctx;\n     }\n \n-  /* Shortcut trivial constructor/op=.  */\n-  if (trivial_fn_p (fun))\n-    {\n-      tree init = NULL_TREE;\n-      if (call_expr_nargs (t) == 2)\n-\tinit = convert_from_reference (get_nth_callarg (t, 1));\n-      else if (TREE_CODE (t) == AGGR_INIT_EXPR\n-\t       && AGGR_INIT_ZERO_FIRST (t))\n-\tinit = build_zero_init (DECL_CONTEXT (fun), NULL_TREE, false);\n-      if (init)\n-\t{\n-\t  tree op = get_nth_callarg (t, 0);\n-\t  if (is_dummy_object (op))\n-\t    op = ctx->object;\n-\t  else\n-\t    op = build1 (INDIRECT_REF, TREE_TYPE (TREE_TYPE (op)), op);\n-\t  tree set = build2 (MODIFY_EXPR, TREE_TYPE (op), op, init);\n-\t  new_ctx.call = &new_call;\n-\t  return cxx_eval_constant_expression (&new_ctx, set, lval,\n-\t\t\t\t\t       non_constant_p, overflow_p);\n-\t}\n-    }\n+  /* We used to shortcut trivial constructor/op= here, but nowadays\n+     we can only get a trivial function here with -fno-elide-constructors.  */\n+  gcc_checking_assert (!trivial_fn_p (fun) || !flag_elide_constructors);\n \n   bool non_constant_args = false;\n   new_call.bindings"}, {"sha": "1a071e95004dcf818fe7372e5771cdc06144cf29", "filename": "gcc/cp/pt.cc", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a4e0b20adf764e8e6ae16c64c130c575ba14aa7/gcc%2Fcp%2Fpt.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a4e0b20adf764e8e6ae16c64c130c575ba14aa7/gcc%2Fcp%2Fpt.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.cc?ref=4a4e0b20adf764e8e6ae16c64c130c575ba14aa7", "patch": "@@ -19870,10 +19870,11 @@ tsubst_non_call_postfix_expression (tree t, tree args,\n \n /* Subroutine of tsubst_lambda_expr: add the FIELD/INIT capture pair to the\n    LAMBDA_EXPR_CAPTURE_LIST passed in LIST.  Do deduction for a previously\n-   dependent init-capture.  */\n+   dependent init-capture.  EXPLICIT_P is true if the original list had\n+   explicit captures.  */\n \n static void\n-prepend_one_capture (tree field, tree init, tree &list,\n+prepend_one_capture (tree field, tree init, tree &list, bool explicit_p,\n \t\t     tsubst_flags_t complain)\n {\n   if (tree auto_node = type_uses_auto (TREE_TYPE (field)))\n@@ -19893,6 +19894,7 @@ prepend_one_capture (tree field, tree init, tree &list,\n       cp_apply_type_quals_to_decl (cp_type_quals (type), field);\n     }\n   list = tree_cons (field, init, list);\n+  LAMBDA_CAPTURE_EXPLICIT_P (list) = explicit_p;\n }\n \n /* T is a LAMBDA_EXPR.  Generate a new LAMBDA_EXPR for the current\n@@ -19982,12 +19984,13 @@ tsubst_lambda_expr (tree t, tree args, tsubst_flags_t complain, tree in_decl)\n \t    prepend_one_capture (TREE_VEC_ELT (field, i),\n \t\t\t\t TREE_VEC_ELT (init, i),\n \t\t\t\t LAMBDA_EXPR_CAPTURE_LIST (r),\n+\t\t\t\t LAMBDA_CAPTURE_EXPLICIT_P (cap),\n \t\t\t\t complain);\n \t}\n       else\n \t{\n \t  prepend_one_capture (field, init, LAMBDA_EXPR_CAPTURE_LIST (r),\n-\t\t\t       complain);\n+\t\t\t       LAMBDA_CAPTURE_EXPLICIT_P (cap), complain);\n \n \t  if (id_equal (DECL_NAME (field), \"__this\"))\n \t    LAMBDA_EXPR_THIS_CAPTURE (r) = field;"}, {"sha": "0f4aad549d55281d918f2f311cbc8d79fe0aedfb", "filename": "gcc/rust/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a4e0b20adf764e8e6ae16c64c130c575ba14aa7/gcc%2Frust%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a4e0b20adf764e8e6ae16c64c130c575ba14aa7/gcc%2Frust%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2FChangeLog?ref=4a4e0b20adf764e8e6ae16c64c130c575ba14aa7", "patch": "@@ -1,3 +1,7 @@\n+2023-02-20  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* backend/rust-tree.cc: Include memmodel.h.\n+\n 2023-02-17  Thomas Schwinge  <thomas@codesourcery.com>\n \n \t* backend/rust-tree.cc: '#include \"tm_p.h\"'."}, {"sha": "f4f7ec2bafdd7b4d8b9fda0a2bee5f91c06d38c0", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a4e0b20adf764e8e6ae16c64c130c575ba14aa7/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a4e0b20adf764e8e6ae16c64c130c575ba14aa7/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4a4e0b20adf764e8e6ae16c64c130c575ba14aa7", "patch": "@@ -1,3 +1,31 @@\n+2023-02-20  Jakub Jelinek  <jakub2redhat.com>\n+\n+\tPR target/108862\n+\t* gcc.dg/pr108862.c: New test.\n+\t* gcc.target/powerpc/pr108862.c: New test.\n+\n+2023-02-20  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/101073\n+\t* g++.dg/cpp0x/constexpr-nsdmi3.C: New test.\n+\t* g++.dg/cpp1y/constexpr-nsdmi10.C: New test.\n+\n+2023-02-20  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/108829\n+\t* g++.dg/cpp0x/lambda/lambda-108829-2.C: New test.\n+\t* g++.dg/cpp0x/lambda/lambda-108829.C: New test.\n+\n+2023-02-20  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/108816\n+\t* gcc.dg/torture/pr108816.c: New testcase.\n+\n+2023-02-20  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/108825\n+\t* gcc.dg/torture/pr108825.c: New testcase.\n+\n 2023-02-18  Jason Merrill  <jason@redhat.com>\n \n \tDR 2518"}, {"sha": "ec1c4e533877ee42b33e7639c0e626952b05bd66", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-nsdmi3.C", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a4e0b20adf764e8e6ae16c64c130c575ba14aa7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-nsdmi3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a4e0b20adf764e8e6ae16c64c130c575ba14aa7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-nsdmi3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-nsdmi3.C?ref=4a4e0b20adf764e8e6ae16c64c130c575ba14aa7", "patch": "@@ -0,0 +1,17 @@\n+// PR c++/101073\n+// { dg-do compile { target c++11 } }\n+// { dg-additional-options \"-fno-elide-constructors\" }\n+\n+struct Y\n+{\n+  int a;\n+};\n+\n+struct X\n+{\n+  Y b = Y{1};\n+  Y c = this->b;\n+};\n+\n+constexpr X o = { };\n+static_assert(o.b.a == 1 && o.c.a == 1, \"\");"}, {"sha": "4e24470514d0aa33116a25256b4f274997b7951b", "filename": "gcc/testsuite/g++.dg/cpp0x/lambda/lambda-108829-2.C", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a4e0b20adf764e8e6ae16c64c130c575ba14aa7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-108829-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a4e0b20adf764e8e6ae16c64c130c575ba14aa7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-108829-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-108829-2.C?ref=4a4e0b20adf764e8e6ae16c64c130c575ba14aa7", "patch": "@@ -0,0 +1,11 @@\n+// PR c++/108829\n+// { dg-do compile { target c++11 } }\n+\n+template<int, class... Ts>\n+void f(Ts... ts) {\n+  constexpr int IDX_PAGE_SIZE = 4096;\n+  int abyPage = [=, ts...] { return IDX_PAGE_SIZE; }();  // { dg-error \"redundant\" }\n+}\n+void h() {\n+  f<1>(0, 1);\n+}"}, {"sha": "e621a0d14d06a79604e24faa4e0e105ec95be32e", "filename": "gcc/testsuite/g++.dg/cpp0x/lambda/lambda-108829.C", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a4e0b20adf764e8e6ae16c64c130c575ba14aa7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-108829.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a4e0b20adf764e8e6ae16c64c130c575ba14aa7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-108829.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-108829.C?ref=4a4e0b20adf764e8e6ae16c64c130c575ba14aa7", "patch": "@@ -0,0 +1,11 @@\n+// PR c++/108829\n+// { dg-do compile { target c++11 } }\n+\n+template <int>\n+void f(void) {\n+  constexpr int IDX_PAGE_SIZE = 4096;\n+  int abyPage = [=, abyPage] { return IDX_PAGE_SIZE; }(); // { dg-error \"redundant\" }\n+}\n+void h() {\n+  f<1>();\n+}"}, {"sha": "35cb8acc15b5e44bd22472a81361d73eaf1dba5f", "filename": "gcc/testsuite/g++.dg/cpp1y/constexpr-nsdmi10.C", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a4e0b20adf764e8e6ae16c64c130c575ba14aa7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fconstexpr-nsdmi10.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a4e0b20adf764e8e6ae16c64c130c575ba14aa7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fconstexpr-nsdmi10.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fconstexpr-nsdmi10.C?ref=4a4e0b20adf764e8e6ae16c64c130c575ba14aa7", "patch": "@@ -0,0 +1,18 @@\n+// PR c++/101073\n+// { dg-do compile { target c++14 } }\n+// { dg-additional-options \"-fno-elide-constructors\" }\n+// A copy of constexpr-nsdmi9.C.\n+\n+struct Y\n+{\n+  int a;\n+};\n+\n+struct X\n+{\n+  Y b = (c={5});\n+  Y c = (b={1});\n+};\n+\n+constexpr X o = { };\n+static_assert(o.b.a == 1 && o.c.a == 1, \"\");"}, {"sha": "e412df10f22c2c196aa65ed6d8ec199a18a9d645", "filename": "gcc/testsuite/gcc.dg/pr108691.c", "status": "removed", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/017e88785acdaf209e7e00e6ed524fb0e2fdc38a/gcc%2Ftestsuite%2Fgcc.dg%2Fpr108691.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/017e88785acdaf209e7e00e6ed524fb0e2fdc38a/gcc%2Ftestsuite%2Fgcc.dg%2Fpr108691.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr108691.c?ref=017e88785acdaf209e7e00e6ed524fb0e2fdc38a", "patch": "@@ -1,9 +0,0 @@\n-/* { dg-do compile } */\n-/* { dg-options \"-O2\" } */\n-\n-extern int __attribute__((returns_twice)) setjmp(void*);\n-\n-void bbb(void) {\n-  int (*fnptr)(void*) = setjmp;\n-  fnptr(0);\n-}"}, {"sha": "f79638f692fc051d085e5b0a7a1484e525a915fe", "filename": "gcc/testsuite/gcc.dg/pr108855.c", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a4e0b20adf764e8e6ae16c64c130c575ba14aa7/gcc%2Ftestsuite%2Fgcc.dg%2Fpr108855.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a4e0b20adf764e8e6ae16c64c130c575ba14aa7/gcc%2Ftestsuite%2Fgcc.dg%2Fpr108855.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr108855.c?ref=4a4e0b20adf764e8e6ae16c64c130c575ba14aa7", "patch": "@@ -0,0 +1,23 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O1\" } */\n+\n+int m;\n+\n+int\n+undefined (int);\n+\n+__attribute__ ((pure, returns_twice)) int\n+bar (void)\n+{\n+  m = 1;\n+  while (m)\n+    m = 2;\n+\n+  return m;\n+}\n+\n+int\n+foo (void)\n+{\n+  return undefined (bar ());\n+}"}, {"sha": "065099e4d078f40d39783862bb70ea85a4415ddb", "filename": "gcc/testsuite/gcc.dg/pr108862.c", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a4e0b20adf764e8e6ae16c64c130c575ba14aa7/gcc%2Ftestsuite%2Fgcc.dg%2Fpr108862.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a4e0b20adf764e8e6ae16c64c130c575ba14aa7/gcc%2Ftestsuite%2Fgcc.dg%2Fpr108862.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr108862.c?ref=4a4e0b20adf764e8e6ae16c64c130c575ba14aa7", "patch": "@@ -0,0 +1,27 @@\n+/* PR target/108862 */\n+/* { dg-do run { target int128 } } */\n+/* { dg-options \"-O2\" } */\n+\n+unsigned long long a[2] = { 0x04a13945d898c296ULL, 0x0000100000000fffULL };\n+unsigned long long b[4] = { 0x04a13945d898c296ULL, 0, 0, 0x0000100000000fffULL };\n+\n+__attribute__((noipa)) unsigned __int128\n+foo (int x, unsigned long long *y, unsigned long long *z)\n+{\n+  unsigned __int128 w = 0;\n+  for (int i = 0; i < x; i++)\n+    w += (unsigned __int128)*y++ * (unsigned __int128)*z--;\n+  return w;\n+}\n+\n+int\n+main ()\n+{\n+  unsigned __int128 x = foo (1, &a[0], &a[1]);\n+  unsigned __int128 y = foo (2, &b[0], &b[3]);\n+  if ((unsigned long long) (x >> 64) != 0x0000004a13945dd3ULL\n+      || (unsigned long long) x != 0x9b1c8443b3909d6aULL\n+      || x != y)\n+    __builtin_abort ();\n+  return 0;\n+}"}, {"sha": "b6f1a79dedf15429637a176a0b0dcc4a48a3960e", "filename": "gcc/testsuite/gcc.dg/pr108868.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a4e0b20adf764e8e6ae16c64c130c575ba14aa7/gcc%2Ftestsuite%2Fgcc.dg%2Fpr108868.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a4e0b20adf764e8e6ae16c64c130c575ba14aa7/gcc%2Ftestsuite%2Fgcc.dg%2Fpr108868.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr108868.c?ref=4a4e0b20adf764e8e6ae16c64c130c575ba14aa7", "patch": "@@ -0,0 +1,17 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fdump-tree-optimized\" } */\n+\n+int x;\n+int vfork (void) __attribute__((__leaf__, __returns_twice__));\n+int fork (void);\n+void bar (int, int, int *);\n+\n+void\n+foo (void)\n+{\n+  int b = 0;\n+  int r = x ? vfork () : fork ();\n+  bar (r, x, &b);\n+}\n+\n+/* { dg-final { scan-tree-dump \"ABNORMAL_DISPATCHER\" \"optimized\" } } */"}, {"sha": "4c24d5584c18130e8278bec0e17d3294edf7bd68", "filename": "gcc/testsuite/gcc.dg/torture/pr108816.c", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a4e0b20adf764e8e6ae16c64c130c575ba14aa7/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr108816.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a4e0b20adf764e8e6ae16c64c130c575ba14aa7/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr108816.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr108816.c?ref=4a4e0b20adf764e8e6ae16c64c130c575ba14aa7", "patch": "@@ -0,0 +1,18 @@\n+/* { dg-do compile } */\n+/* { dg-additional-options \"-fvect-cost-model=dynamic\" } */\n+\n+int m;\n+\n+void\n+foo (int p[][16], unsigned int x)\n+{\n+  while (x < 4)\n+    {\n+      int j;\n+\n+      for (j = x * 4; j < (x + 1) * 4 - 2; j++)\n+        p[0][j] = p[m][j];\n+\n+      ++x;\n+    }\n+}"}, {"sha": "89bbb0806a36e74f5307ef7a3f62e7f66e4c1fb9", "filename": "gcc/testsuite/gcc.target/powerpc/pr108862.c", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a4e0b20adf764e8e6ae16c64c130c575ba14aa7/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr108862.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a4e0b20adf764e8e6ae16c64c130c575ba14aa7/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr108862.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr108862.c?ref=4a4e0b20adf764e8e6ae16c64c130c575ba14aa7", "patch": "@@ -0,0 +1,6 @@\n+/* PR target/108862 */\n+/* { dg-do run { target int128 } } */\n+/* { dg-require-effective-target p9vector_hw } */\n+/* { dg-options \"-O2 -mdejagnu-cpu=power9\" } */\n+\n+#include \"../../gcc.dg/pr108862.c\""}, {"sha": "a9fcc7fd050f871437ef336ecfb8d6cc81280ee0", "filename": "gcc/tree-cfg.cc", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a4e0b20adf764e8e6ae16c64c130c575ba14aa7/gcc%2Ftree-cfg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a4e0b20adf764e8e6ae16c64c130c575ba14aa7/gcc%2Ftree-cfg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfg.cc?ref=4a4e0b20adf764e8e6ae16c64c130c575ba14aa7", "patch": "@@ -2280,9 +2280,7 @@ notice_special_calls (gcall *call)\n \n   if (flags & ECF_MAY_BE_ALLOCA)\n     cfun->calls_alloca = true;\n-  if (flags & ECF_RETURNS_TWICE\n-      && (!(cfun->curr_properties & PROP_cfg)\n-\t  || gimple_call_ctrl_altering_p (call)))\n+  if (flags & ECF_RETURNS_TWICE)\n     cfun->calls_setjmp = true;\n }\n "}, {"sha": "6aa3d2ed0bf87a61815e06c3168bfb0561630b33", "filename": "gcc/tree-vect-loop-manip.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a4e0b20adf764e8e6ae16c64c130c575ba14aa7/gcc%2Ftree-vect-loop-manip.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a4e0b20adf764e8e6ae16c64c130c575ba14aa7/gcc%2Ftree-vect-loop-manip.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-loop-manip.cc?ref=4a4e0b20adf764e8e6ae16c64c130c575ba14aa7", "patch": "@@ -3477,7 +3477,7 @@ vect_loop_versioning (loop_vec_info loop_vinfo,\n   tree cost_name = NULL_TREE;\n   profile_probability prob2 = profile_probability::uninitialized ();\n   if (cond_expr\n-      && !integer_truep (cond_expr)\n+      && EXPR_P (cond_expr)\n       && (version_niter\n \t  || version_align\n \t  || version_alias\n@@ -3711,6 +3711,7 @@ vect_loop_versioning (loop_vec_info loop_vinfo,\n   if (cost_name && TREE_CODE (cost_name) == SSA_NAME)\n     {\n       gimple *def = SSA_NAME_DEF_STMT (cost_name);\n+      gcc_assert (gimple_bb (def) == condition_bb);\n       /* All uses of the cost check are 'true' after the check we\n \t are going to insert.  */\n       replace_uses_by (cost_name, boolean_true_node);"}, {"sha": "03837e0431d8d8f562950abe2bc30430a9694a61", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a4e0b20adf764e8e6ae16c64c130c575ba14aa7/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a4e0b20adf764e8e6ae16c64c130c575ba14aa7/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=4a4e0b20adf764e8e6ae16c64c130c575ba14aa7", "patch": "@@ -1,3 +1,16 @@\n+2023-02-20  Andreas Schwab  <schwab@linux-m68k.org>\n+\n+\t* config/abi/post/m68k-linux-gnu/baseline_symbols.txt: Update.\n+\n+2023-02-20  Matthias Kretz  <m.kretz@gsi.de>\n+\n+\t* include/experimental/bits/simd.h (__extract_part, split):\n+\tUse reserved name for template parameter.\n+\n+2023-02-20  Andreas Schwab  <schwab@suse.de>\n+\n+\t* config/abi/post/riscv64-linux-gnu/baseline_symbols.txt: Update.\n+\n 2023-02-18  Gerald Pfeifer  <gerald@pfeifer.com>\n \n \t* doc/xml/faq.xml: Switch two links to www.open-std.org to https."}, {"sha": "be21567821ca8316752fb0f95a6196e7516c7d11", "filename": "libstdc++-v3/config/abi/post/m68k-linux-gnu/baseline_symbols.txt", "status": "modified", "additions": 92, "deletions": 1, "changes": 93, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a4e0b20adf764e8e6ae16c64c130c575ba14aa7/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpost%2Fm68k-linux-gnu%2Fbaseline_symbols.txt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a4e0b20adf764e8e6ae16c64c130c575ba14aa7/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpost%2Fm68k-linux-gnu%2Fbaseline_symbols.txt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpost%2Fm68k-linux-gnu%2Fbaseline_symbols.txt?ref=4a4e0b20adf764e8e6ae16c64c130c575ba14aa7", "patch": "@@ -475,6 +475,7 @@ FUNC:_ZNKSt10moneypunctIwLb1EE8groupingEv@@GLIBCXX_3.4\n FUNC:_ZNKSt10ostrstream5rdbufEv@@GLIBCXX_3.4\n FUNC:_ZNKSt10ostrstream6pcountEv@@GLIBCXX_3.4\n FUNC:_ZNKSt11__timepunctIcE15_M_am_pm_formatEPKc@@GLIBCXX_3.4\n+FUNC:_ZNKSt11__timepunctIcE15_M_am_pm_formatEPPKc@@GLIBCXX_3.4.30\n FUNC:_ZNKSt11__timepunctIcE15_M_date_formatsEPPKc@@GLIBCXX_3.4\n FUNC:_ZNKSt11__timepunctIcE15_M_time_formatsEPPKc@@GLIBCXX_3.4\n FUNC:_ZNKSt11__timepunctIcE19_M_days_abbreviatedEPPKc@@GLIBCXX_3.4\n@@ -485,6 +486,7 @@ FUNC:_ZNKSt11__timepunctIcE7_M_daysEPPKc@@GLIBCXX_3.4\n FUNC:_ZNKSt11__timepunctIcE8_M_am_pmEPPKc@@GLIBCXX_3.4\n FUNC:_ZNKSt11__timepunctIcE9_M_monthsEPPKc@@GLIBCXX_3.4\n FUNC:_ZNKSt11__timepunctIwE15_M_am_pm_formatEPKw@@GLIBCXX_3.4\n+FUNC:_ZNKSt11__timepunctIwE15_M_am_pm_formatEPPKw@@GLIBCXX_3.4.30\n FUNC:_ZNKSt11__timepunctIwE15_M_date_formatsEPPKw@@GLIBCXX_3.4\n FUNC:_ZNKSt11__timepunctIwE15_M_time_formatsEPPKw@@GLIBCXX_3.4\n FUNC:_ZNKSt11__timepunctIwE19_M_days_abbreviatedEPPKw@@GLIBCXX_3.4\n@@ -496,6 +498,10 @@ FUNC:_ZNKSt11__timepunctIwE8_M_am_pmEPPKw@@GLIBCXX_3.4\n FUNC:_ZNKSt11__timepunctIwE9_M_monthsEPPKw@@GLIBCXX_3.4\n FUNC:_ZNKSt11logic_error4whatEv@@GLIBCXX_3.4\n FUNC:_ZNKSt12__basic_fileIcE7is_openEv@@GLIBCXX_3.4\n+FUNC:_ZNKSt12__shared_ptrINSt10filesystem28recursive_directory_iterator10_Dir_stackELN9__gnu_cxx12_Lock_policyE2EEcvbEv@@GLIBCXX_3.4.31\n+FUNC:_ZNKSt12__shared_ptrINSt10filesystem4_DirELN9__gnu_cxx12_Lock_policyE2EEcvbEv@@GLIBCXX_3.4.31\n+FUNC:_ZNKSt12__shared_ptrINSt10filesystem7__cxx1128recursive_directory_iterator10_Dir_stackELN9__gnu_cxx12_Lock_policyE2EEcvbEv@@GLIBCXX_3.4.31\n+FUNC:_ZNKSt12__shared_ptrINSt10filesystem7__cxx114_DirELN9__gnu_cxx12_Lock_policyE2EEcvbEv@@GLIBCXX_3.4.31\n FUNC:_ZNKSt12bad_weak_ptr4whatEv@@GLIBCXX_3.4.15\n FUNC:_ZNKSt12future_error4whatEv@@GLIBCXX_3.4.14\n FUNC:_ZNKSt12strstreambuf6pcountEv@@GLIBCXX_3.4\n@@ -666,6 +672,13 @@ FUNC:_ZNKSt5ctypeIwE8do_widenEPKcS2_Pw@@GLIBCXX_3.4\n FUNC:_ZNKSt5ctypeIwE8do_widenEc@@GLIBCXX_3.4\n FUNC:_ZNKSt5ctypeIwE9do_narrowEPKwS2_cPc@@GLIBCXX_3.4\n FUNC:_ZNKSt5ctypeIwE9do_narrowEwc@@GLIBCXX_3.4\n+FUNC:_ZNKSt6chrono4tzdb11locate_zoneESt17basic_string_viewIcSt11char_traitsIcEE@@GLIBCXX_3.4.31\n+FUNC:_ZNKSt6chrono4tzdb12current_zoneEv@@GLIBCXX_3.4.31\n+FUNC:_ZNKSt6chrono9time_zone15_M_get_sys_infoENS_10time_pointINS_3_V212system_clockENS_8durationIxSt5ratioILx1ELx1EEEEEE@@GLIBCXX_3.4.31\n+FUNC:_ZNKSt6chrono9time_zone17_M_get_local_infoENS_10time_pointINS_7local_tENS_8durationIxSt5ratioILx1ELx1EEEEEE@@GLIBCXX_3.4.31\n+FUNC:_ZNKSt6chrono9tzdb_list14const_iteratordeEv@@GLIBCXX_3.4.31\n+FUNC:_ZNKSt6chrono9tzdb_list5beginEv@@GLIBCXX_3.4.31\n+FUNC:_ZNKSt6chrono9tzdb_list5frontEv@@GLIBCXX_3.4.31\n FUNC:_ZNKSt6locale2id5_M_idEv@@GLIBCXX_3.4\n FUNC:_ZNKSt6locale4nameB5cxx11Ev@@GLIBCXX_3.4.21\n FUNC:_ZNKSt6locale4nameEv@@GLIBCXX_3.4\n@@ -954,6 +967,7 @@ FUNC:_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14do_\n FUNC:_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE15_M_extract_nameES4_S4_RiPPKcjRSt8ios_baseRSt12_Ios_Iostate@@GLIBCXX_3.4.21\n FUNC:_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE16do_get_monthnameES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tm@@GLIBCXX_3.4.21\n FUNC:_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE21_M_extract_via_formatES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmPKc@@GLIBCXX_3.4.21\n+FUNC:_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE21_M_extract_via_formatES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmPKcRSt16__time_get_state@@GLIBCXX_3.4.30\n FUNC:_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE24_M_extract_wday_or_monthES4_S4_RiPPKcjRSt8ios_baseRSt12_Ios_Iostate@@GLIBCXX_3.4.21\n FUNC:_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE3getES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmPKcSD_@@GLIBCXX_3.4.21\n FUNC:_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE3getES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmcc@@GLIBCXX_3.4.21\n@@ -973,6 +987,7 @@ FUNC:_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14do_\n FUNC:_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE15_M_extract_nameES4_S4_RiPPKwjRSt8ios_baseRSt12_Ios_Iostate@@GLIBCXX_3.4.21\n FUNC:_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE16do_get_monthnameES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tm@@GLIBCXX_3.4.21\n FUNC:_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE21_M_extract_via_formatES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmPKw@@GLIBCXX_3.4.21\n+FUNC:_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE21_M_extract_via_formatES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmPKwRSt16__time_get_state@@GLIBCXX_3.4.30\n FUNC:_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE24_M_extract_wday_or_monthES4_S4_RiPPKwjRSt8ios_baseRSt12_Ios_Iostate@@GLIBCXX_3.4.21\n FUNC:_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE3getES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmPKwSD_@@GLIBCXX_3.4.21\n FUNC:_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE3getES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmcc@@GLIBCXX_3.4.21\n@@ -1225,6 +1240,7 @@ FUNC:_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14do_get_week\n FUNC:_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE15_M_extract_nameES3_S3_RiPPKcjRSt8ios_baseRSt12_Ios_Iostate@@GLIBCXX_3.4\n FUNC:_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE16do_get_monthnameES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tm@@GLIBCXX_3.4\n FUNC:_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE21_M_extract_via_formatES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tmPKc@@GLIBCXX_3.4\n+FUNC:_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE21_M_extract_via_formatES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tmPKcRSt16__time_get_state@@GLIBCXX_3.4.30\n FUNC:_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE24_M_extract_wday_or_monthES3_S3_RiPPKcjRSt8ios_baseRSt12_Ios_Iostate@@GLIBCXX_3.4.14\n FUNC:_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE3getES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tmPKcSC_@@GLIBCXX_3.4.21\n FUNC:_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE3getES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tmcc@@GLIBCXX_3.4.26\n@@ -1244,6 +1260,7 @@ FUNC:_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14do_get_week\n FUNC:_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE15_M_extract_nameES3_S3_RiPPKwjRSt8ios_baseRSt12_Ios_Iostate@@GLIBCXX_3.4\n FUNC:_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE16do_get_monthnameES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tm@@GLIBCXX_3.4\n FUNC:_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE21_M_extract_via_formatES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tmPKw@@GLIBCXX_3.4\n+FUNC:_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE21_M_extract_via_formatES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tmPKwRSt16__time_get_state@@GLIBCXX_3.4.30\n FUNC:_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE24_M_extract_wday_or_monthES3_S3_RiPPKwjRSt8ios_baseRSt12_Ios_Iostate@@GLIBCXX_3.4.14\n FUNC:_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE3getES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tmPKwSC_@@GLIBCXX_3.4.21\n FUNC:_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE3getES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tmcc@@GLIBCXX_3.4.26\n@@ -2818,6 +2835,7 @@ FUNC:_ZNSt16__numpunct_cacheIwEC2Ej@@GLIBCXX_3.4\n FUNC:_ZNSt16__numpunct_cacheIwED0Ev@@GLIBCXX_3.4\n FUNC:_ZNSt16__numpunct_cacheIwED1Ev@@GLIBCXX_3.4\n FUNC:_ZNSt16__numpunct_cacheIwED2Ev@@GLIBCXX_3.4\n+FUNC:_ZNSt16__time_get_state17_M_finalize_stateEP2tm@@GLIBCXX_3.4.30\n FUNC:_ZNSt16bad_array_lengthD0Ev@@CXXABI_1.3.8\n FUNC:_ZNSt16bad_array_lengthD1Ev@@CXXABI_1.3.8\n FUNC:_ZNSt16bad_array_lengthD2Ev@@CXXABI_1.3.8\n@@ -2928,7 +2946,8 @@ FUNC:_ZNSt18basic_stringstreamIwSt11char_traitsIwESaIwEED2Ev@@GLIBCXX_3.4\n FUNC:_ZNSt18basic_stringstreamIwSt11char_traitsIwESaIwEEaSEOS3_@@GLIBCXX_3.4.21\n FUNC:_ZNSt18condition_variable10notify_allEv@@GLIBCXX_3.4.11\n FUNC:_ZNSt18condition_variable10notify_oneEv@@GLIBCXX_3.4.11\n-FUNC:_ZNSt18condition_variable4waitERSt11unique_lockISt5mutexE@@GLIBCXX_3.4.11\n+FUNC:_ZNSt18condition_variable4waitERSt11unique_lockISt5mutexE@@GLIBCXX_3.4.30\n+FUNC:_ZNSt18condition_variable4waitERSt11unique_lockISt5mutexE@GLIBCXX_3.4.11\n FUNC:_ZNSt18condition_variableC1Ev@@GLIBCXX_3.4.11\n FUNC:_ZNSt18condition_variableC2Ev@@GLIBCXX_3.4.11\n FUNC:_ZNSt18condition_variableD1Ev@@GLIBCXX_3.4.11\n@@ -3087,9 +3106,18 @@ FUNC:_ZNSt6__norm15_List_node_base7_M_hookEPS0_@@GLIBCXX_3.4.14\n FUNC:_ZNSt6__norm15_List_node_base7reverseEv@@GLIBCXX_3.4.9\n FUNC:_ZNSt6__norm15_List_node_base8transferEPS0_S1_@@GLIBCXX_3.4.9\n FUNC:_ZNSt6__norm15_List_node_base9_M_unhookEv@@GLIBCXX_3.4.14\n+FUNC:_ZNSt6chrono11locate_zoneESt17basic_string_viewIcSt11char_traitsIcEE@@GLIBCXX_3.4.31\n+FUNC:_ZNSt6chrono11reload_tzdbEv@@GLIBCXX_3.4.31\n+FUNC:_ZNSt6chrono12current_zoneEv@@GLIBCXX_3.4.31\n FUNC:_ZNSt6chrono12system_clock3nowEv@@GLIBCXX_3.4.11\n+FUNC:_ZNSt6chrono13get_tzdb_listEv@@GLIBCXX_3.4.31\n+FUNC:_ZNSt6chrono14remote_versionB5cxx11Ev@@GLIBCXX_3.4.31\n FUNC:_ZNSt6chrono3_V212steady_clock3nowEv@@GLIBCXX_3.4.19\n FUNC:_ZNSt6chrono3_V212system_clock3nowEv@@GLIBCXX_3.4.19\n+FUNC:_ZNSt6chrono8get_tzdbEv@@GLIBCXX_3.4.31\n+FUNC:_ZNSt6chrono9tzdb_list11erase_afterENS0_14const_iteratorE@@GLIBCXX_3.4.31\n+FUNC:_ZNSt6chrono9tzdb_list14const_iteratorppEi@@GLIBCXX_3.4.31\n+FUNC:_ZNSt6chrono9tzdb_list14const_iteratorppEv@@GLIBCXX_3.4.31\n FUNC:_ZNSt6gslice8_IndexerC1EjRKSt8valarrayIjES4_@@GLIBCXX_3.4\n FUNC:_ZNSt6gslice8_IndexerC2EjRKSt8valarrayIjES4_@@GLIBCXX_3.4\n FUNC:_ZNSt6locale11_M_coalesceERKS_S1_i@@GLIBCXX_3.4\n@@ -3205,6 +3233,7 @@ FUNC:_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS\n FUNC:_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcS5_S5_@@GLIBCXX_3.4.21\n FUNC:_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13shrink_to_fitEv@@GLIBCXX_3.4.21\n FUNC:_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEjjjc@@GLIBCXX_3.4.21\n+FUNC:_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_replace_coldEPcjPKcjj@@GLIBCXX_3.4.31\n FUNC:_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_get_allocatorEv@@GLIBCXX_3.4.21\n FUNC:_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE17_S_to_string_viewESt17basic_string_viewIcS2_E@@GLIBCXX_3.4.26\n FUNC:_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE18_M_construct_aux_2Ejc@@GLIBCXX_3.4.21\n@@ -3356,6 +3385,7 @@ FUNC:_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE13_S_copy_charsEPwPKwS\n FUNC:_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE13_S_copy_charsEPwS5_S5_@@GLIBCXX_3.4.21\n FUNC:_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE13shrink_to_fitEv@@GLIBCXX_3.4.21\n FUNC:_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE14_M_replace_auxEjjjw@@GLIBCXX_3.4.21\n+FUNC:_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE15_M_replace_coldEPwjPKwjj@@GLIBCXX_3.4.31\n FUNC:_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE16_M_get_allocatorEv@@GLIBCXX_3.4.21\n FUNC:_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE17_S_to_string_viewESt17basic_string_viewIwS2_E@@GLIBCXX_3.4.26\n FUNC:_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE18_M_construct_aux_2Ejw@@GLIBCXX_3.4.21\n@@ -4113,6 +4143,50 @@ FUNC:_ZSt14__convert_to_vIfEvPKcRT_RSt12_Ios_IostateRKP15__locale_struct@@GLIBCX\n FUNC:_ZSt14get_unexpectedv@@GLIBCXX_3.4.20\n FUNC:_ZSt14set_unexpectedPFvvE@@GLIBCXX_3.4\n FUNC:_ZSt15_Fnv_hash_bytesPKvjj@@CXXABI_1.3.5\n+FUNC:_ZSt15__try_use_facetINSt7__cxx1110moneypunctIcLb0EEEEPKT_RKSt6locale@@GLIBCXX_3.4.31\n+FUNC:_ZSt15__try_use_facetINSt7__cxx1110moneypunctIcLb1EEEEPKT_RKSt6locale@@GLIBCXX_3.4.31\n+FUNC:_ZSt15__try_use_facetINSt7__cxx1110moneypunctIwLb0EEEEPKT_RKSt6locale@@GLIBCXX_3.4.31\n+FUNC:_ZSt15__try_use_facetINSt7__cxx1110moneypunctIwLb1EEEEPKT_RKSt6locale@@GLIBCXX_3.4.31\n+FUNC:_ZSt15__try_use_facetINSt7__cxx117collateIcEEEPKT_RKSt6locale@@GLIBCXX_3.4.31\n+FUNC:_ZSt15__try_use_facetINSt7__cxx117collateIwEEEPKT_RKSt6locale@@GLIBCXX_3.4.31\n+FUNC:_ZSt15__try_use_facetINSt7__cxx118messagesIcEEEPKT_RKSt6locale@@GLIBCXX_3.4.31\n+FUNC:_ZSt15__try_use_facetINSt7__cxx118messagesIwEEEPKT_RKSt6locale@@GLIBCXX_3.4.31\n+FUNC:_ZSt15__try_use_facetINSt7__cxx118numpunctIcEEEPKT_RKSt6locale@@GLIBCXX_3.4.31\n+FUNC:_ZSt15__try_use_facetINSt7__cxx118numpunctIwEEEPKT_RKSt6locale@@GLIBCXX_3.4.31\n+FUNC:_ZSt15__try_use_facetINSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEEEEPKT_RKSt6locale@@GLIBCXX_3.4.31\n+FUNC:_ZSt15__try_use_facetINSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEEEEPKT_RKSt6locale@@GLIBCXX_3.4.31\n+FUNC:_ZSt15__try_use_facetINSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEEEEPKT_RKSt6locale@@GLIBCXX_3.4.31\n+FUNC:_ZSt15__try_use_facetINSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEEEEPKT_RKSt6locale@@GLIBCXX_3.4.31\n+FUNC:_ZSt15__try_use_facetINSt7__cxx119money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEEEEPKT_RKSt6locale@@GLIBCXX_3.4.31\n+FUNC:_ZSt15__try_use_facetINSt7__cxx119money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEEEEPKT_RKSt6locale@@GLIBCXX_3.4.31\n+FUNC:_ZSt15__try_use_facetISt10moneypunctIcLb0EEEPKT_RKSt6locale@@GLIBCXX_3.4.31\n+FUNC:_ZSt15__try_use_facetISt10moneypunctIcLb1EEEPKT_RKSt6locale@@GLIBCXX_3.4.31\n+FUNC:_ZSt15__try_use_facetISt10moneypunctIwLb0EEEPKT_RKSt6locale@@GLIBCXX_3.4.31\n+FUNC:_ZSt15__try_use_facetISt10moneypunctIwLb1EEEPKT_RKSt6locale@@GLIBCXX_3.4.31\n+FUNC:_ZSt15__try_use_facetISt11__timepunctIcEEPKT_RKSt6locale@@GLIBCXX_3.4.31\n+FUNC:_ZSt15__try_use_facetISt11__timepunctIwEEPKT_RKSt6locale@@GLIBCXX_3.4.31\n+FUNC:_ZSt15__try_use_facetISt5ctypeIcEEPKT_RKSt6locale@@GLIBCXX_3.4.31\n+FUNC:_ZSt15__try_use_facetISt5ctypeIwEEPKT_RKSt6locale@@GLIBCXX_3.4.31\n+FUNC:_ZSt15__try_use_facetISt7codecvtIcc11__mbstate_tEEPKT_RKSt6locale@@GLIBCXX_3.4.31\n+FUNC:_ZSt15__try_use_facetISt7codecvtIwc11__mbstate_tEEPKT_RKSt6locale@@GLIBCXX_3.4.31\n+FUNC:_ZSt15__try_use_facetISt7collateIcEEPKT_RKSt6locale@@GLIBCXX_3.4.31\n+FUNC:_ZSt15__try_use_facetISt7collateIwEEPKT_RKSt6locale@@GLIBCXX_3.4.31\n+FUNC:_ZSt15__try_use_facetISt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEEEPKT_RKSt6locale@@GLIBCXX_3.4.31\n+FUNC:_ZSt15__try_use_facetISt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEEEPKT_RKSt6locale@@GLIBCXX_3.4.31\n+FUNC:_ZSt15__try_use_facetISt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEEEPKT_RKSt6locale@@GLIBCXX_3.4.31\n+FUNC:_ZSt15__try_use_facetISt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEEEPKT_RKSt6locale@@GLIBCXX_3.4.31\n+FUNC:_ZSt15__try_use_facetISt8messagesIcEEPKT_RKSt6locale@@GLIBCXX_3.4.31\n+FUNC:_ZSt15__try_use_facetISt8messagesIwEEPKT_RKSt6locale@@GLIBCXX_3.4.31\n+FUNC:_ZSt15__try_use_facetISt8numpunctIcEEPKT_RKSt6locale@@GLIBCXX_3.4.31\n+FUNC:_ZSt15__try_use_facetISt8numpunctIwEEPKT_RKSt6locale@@GLIBCXX_3.4.31\n+FUNC:_ZSt15__try_use_facetISt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEEEPKT_RKSt6locale@@GLIBCXX_3.4.31\n+FUNC:_ZSt15__try_use_facetISt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEEEPKT_RKSt6locale@@GLIBCXX_3.4.31\n+FUNC:_ZSt15__try_use_facetISt8time_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEEEPKT_RKSt6locale@@GLIBCXX_3.4.31\n+FUNC:_ZSt15__try_use_facetISt8time_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEEEPKT_RKSt6locale@@GLIBCXX_3.4.31\n+FUNC:_ZSt15__try_use_facetISt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEEEPKT_RKSt6locale@@GLIBCXX_3.4.31\n+FUNC:_ZSt15__try_use_facetISt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEEEPKT_RKSt6locale@@GLIBCXX_3.4.31\n+FUNC:_ZSt15__try_use_facetISt9money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEEEPKT_RKSt6locale@@GLIBCXX_3.4.31\n+FUNC:_ZSt15__try_use_facetISt9money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEEEPKT_RKSt6locale@@GLIBCXX_3.4.31\n FUNC:_ZSt15future_categoryv@@GLIBCXX_3.4.15\n FUNC:_ZSt15get_new_handlerv@@GLIBCXX_3.4.20\n FUNC:_ZSt15set_new_handlerPFvvE@@GLIBCXX_3.4\n@@ -4150,12 +4224,17 @@ FUNC:_ZSt20__throw_future_errori@@GLIBCXX_3.4.14\n FUNC:_ZSt20__throw_length_errorPKc@@GLIBCXX_3.4\n FUNC:_ZSt20__throw_out_of_rangePKc@@GLIBCXX_3.4\n FUNC:_ZSt20__throw_system_errori@@GLIBCXX_3.4.11\n+FUNC:_ZSt20__to_chars_float16_tPcS_fSt12chars_format@@GLIBCXX_3.4.31\n FUNC:_ZSt21_Rb_tree_rotate_rightPSt18_Rb_tree_node_baseRS0_@@GLIBCXX_3.4\n FUNC:_ZSt21__copy_streambufs_eofIcSt11char_traitsIcEEiPSt15basic_streambufIT_T0_ES6_Rb@@GLIBCXX_3.4.9\n FUNC:_ZSt21__copy_streambufs_eofIwSt11char_traitsIwEEiPSt15basic_streambufIT_T0_ES6_Rb@@GLIBCXX_3.4.9\n+FUNC:_ZSt21__glibcxx_assert_failPKciS0_S0_@@GLIBCXX_3.4.30\n FUNC:_ZSt21__throw_bad_exceptionv@@GLIBCXX_3.4\n FUNC:_ZSt21__throw_runtime_errorPKc@@GLIBCXX_3.4\n+FUNC:_ZSt21__to_chars_bfloat16_tPcS_fSt12chars_format@@GLIBCXX_3.4.31\n+FUNC:_ZSt22__from_chars_float16_tPKcS0_RfSt12chars_format@@GLIBCXX_3.4.31\n FUNC:_ZSt22__throw_overflow_errorPKc@@GLIBCXX_3.4\n+FUNC:_ZSt23__from_chars_bfloat16_tPKcS0_RfSt12chars_format@@GLIBCXX_3.4.31\n FUNC:_ZSt23__throw_underflow_errorPKc@@GLIBCXX_3.4\n FUNC:_ZSt24__throw_invalid_argumentPKc@@GLIBCXX_3.4\n FUNC:_ZSt24__throw_out_of_range_fmtPKcz@@GLIBCXX_3.4.20\n@@ -4489,6 +4568,7 @@ OBJECT:0:CXXABI_1.3.10\n OBJECT:0:CXXABI_1.3.11\n OBJECT:0:CXXABI_1.3.12\n OBJECT:0:CXXABI_1.3.13\n+OBJECT:0:CXXABI_1.3.14\n OBJECT:0:CXXABI_1.3.2\n OBJECT:0:CXXABI_1.3.3\n OBJECT:0:CXXABI_1.3.4\n@@ -4522,6 +4602,8 @@ OBJECT:0:GLIBCXX_3.4.27\n OBJECT:0:GLIBCXX_3.4.28\n OBJECT:0:GLIBCXX_3.4.29\n OBJECT:0:GLIBCXX_3.4.3\n+OBJECT:0:GLIBCXX_3.4.30\n+OBJECT:0:GLIBCXX_3.4.31\n OBJECT:0:GLIBCXX_3.4.4\n OBJECT:0:GLIBCXX_3.4.5\n OBJECT:0:GLIBCXX_3.4.6\n@@ -4704,13 +4786,19 @@ OBJECT:15:_ZTSSt8numpunctIcE@@GLIBCXX_3.4\n OBJECT:15:_ZTSSt8numpunctIwE@@GLIBCXX_3.4\n OBJECT:16:_ZNSbIwSt11char_traitsIwESaIwEE4_Rep20_S_empty_rep_storageE@@GLIBCXX_3.4\n OBJECT:16:_ZNSs4_Rep20_S_empty_rep_storageE@@GLIBCXX_3.4\n+OBJECT:16:_ZTIPDF32_@@CXXABI_1.3.14\n+OBJECT:16:_ZTIPDF32x@@CXXABI_1.3.14\n+OBJECT:16:_ZTIPDF64_@@CXXABI_1.3.14\n OBJECT:16:_ZTIPDd@@CXXABI_1.3.4\n OBJECT:16:_ZTIPDe@@CXXABI_1.3.4\n OBJECT:16:_ZTIPDf@@CXXABI_1.3.4\n OBJECT:16:_ZTIPDi@@CXXABI_1.3.3\n OBJECT:16:_ZTIPDn@@CXXABI_1.3.5\n OBJECT:16:_ZTIPDs@@CXXABI_1.3.3\n OBJECT:16:_ZTIPDu@@CXXABI_1.3.12\n+OBJECT:16:_ZTIPKDF32_@@CXXABI_1.3.14\n+OBJECT:16:_ZTIPKDF32x@@CXXABI_1.3.14\n+OBJECT:16:_ZTIPKDF64_@@CXXABI_1.3.14\n OBJECT:16:_ZTIPKDd@@CXXABI_1.3.4\n OBJECT:16:_ZTIPKDe@@CXXABI_1.3.4\n OBJECT:16:_ZTIPKDf@@CXXABI_1.3.4\n@@ -5854,6 +5942,9 @@ OBJECT:8:_ZGVNSt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE2idE@@G\n OBJECT:8:_ZGVNSt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE2idE@@GLIBCXX_3.4\n OBJECT:8:_ZGVNSt9money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE2idE@@GLIBCXX_3.4\n OBJECT:8:_ZGVNSt9money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE2idE@@GLIBCXX_3.4\n+OBJECT:8:_ZTIDF32_@@CXXABI_1.3.14\n+OBJECT:8:_ZTIDF32x@@CXXABI_1.3.14\n+OBJECT:8:_ZTIDF64_@@CXXABI_1.3.14\n OBJECT:8:_ZTIDd@@CXXABI_1.3.4\n OBJECT:8:_ZTIDe@@CXXABI_1.3.4\n OBJECT:8:_ZTIDf@@CXXABI_1.3.4"}, {"sha": "876565bfa541d63b7ce45f6088f9d0d409f66f3f", "filename": "libstdc++-v3/config/abi/post/riscv64-linux-gnu/baseline_symbols.txt", "status": "modified", "additions": 97, "deletions": 1, "changes": 98, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a4e0b20adf764e8e6ae16c64c130c575ba14aa7/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpost%2Friscv64-linux-gnu%2Fbaseline_symbols.txt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a4e0b20adf764e8e6ae16c64c130c575ba14aa7/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpost%2Friscv64-linux-gnu%2Fbaseline_symbols.txt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpost%2Friscv64-linux-gnu%2Fbaseline_symbols.txt?ref=4a4e0b20adf764e8e6ae16c64c130c575ba14aa7", "patch": "@@ -475,6 +475,7 @@ FUNC:_ZNKSt10moneypunctIwLb1EE8groupingEv@@GLIBCXX_3.4\n FUNC:_ZNKSt10ostrstream5rdbufEv@@GLIBCXX_3.4\n FUNC:_ZNKSt10ostrstream6pcountEv@@GLIBCXX_3.4\n FUNC:_ZNKSt11__timepunctIcE15_M_am_pm_formatEPKc@@GLIBCXX_3.4\n+FUNC:_ZNKSt11__timepunctIcE15_M_am_pm_formatEPPKc@@GLIBCXX_3.4.30\n FUNC:_ZNKSt11__timepunctIcE15_M_date_formatsEPPKc@@GLIBCXX_3.4\n FUNC:_ZNKSt11__timepunctIcE15_M_time_formatsEPPKc@@GLIBCXX_3.4\n FUNC:_ZNKSt11__timepunctIcE19_M_days_abbreviatedEPPKc@@GLIBCXX_3.4\n@@ -485,6 +486,7 @@ FUNC:_ZNKSt11__timepunctIcE7_M_daysEPPKc@@GLIBCXX_3.4\n FUNC:_ZNKSt11__timepunctIcE8_M_am_pmEPPKc@@GLIBCXX_3.4\n FUNC:_ZNKSt11__timepunctIcE9_M_monthsEPPKc@@GLIBCXX_3.4\n FUNC:_ZNKSt11__timepunctIwE15_M_am_pm_formatEPKw@@GLIBCXX_3.4\n+FUNC:_ZNKSt11__timepunctIwE15_M_am_pm_formatEPPKw@@GLIBCXX_3.4.30\n FUNC:_ZNKSt11__timepunctIwE15_M_date_formatsEPPKw@@GLIBCXX_3.4\n FUNC:_ZNKSt11__timepunctIwE15_M_time_formatsEPPKw@@GLIBCXX_3.4\n FUNC:_ZNKSt11__timepunctIwE19_M_days_abbreviatedEPPKw@@GLIBCXX_3.4\n@@ -666,6 +668,13 @@ FUNC:_ZNKSt5ctypeIwE8do_widenEPKcS2_Pw@@GLIBCXX_3.4\n FUNC:_ZNKSt5ctypeIwE8do_widenEc@@GLIBCXX_3.4\n FUNC:_ZNKSt5ctypeIwE9do_narrowEPKwS2_cPc@@GLIBCXX_3.4\n FUNC:_ZNKSt5ctypeIwE9do_narrowEwc@@GLIBCXX_3.4\n+FUNC:_ZNKSt6chrono4tzdb11locate_zoneESt17basic_string_viewIcSt11char_traitsIcEE@@GLIBCXX_3.4.31\n+FUNC:_ZNKSt6chrono4tzdb12current_zoneEv@@GLIBCXX_3.4.31\n+FUNC:_ZNKSt6chrono9time_zone15_M_get_sys_infoENS_10time_pointINS_3_V212system_clockENS_8durationIlSt5ratioILl1ELl1EEEEEE@@GLIBCXX_3.4.31\n+FUNC:_ZNKSt6chrono9time_zone17_M_get_local_infoENS_10time_pointINS_7local_tENS_8durationIlSt5ratioILl1ELl1EEEEEE@@GLIBCXX_3.4.31\n+FUNC:_ZNKSt6chrono9tzdb_list14const_iteratordeEv@@GLIBCXX_3.4.31\n+FUNC:_ZNKSt6chrono9tzdb_list5beginEv@@GLIBCXX_3.4.31\n+FUNC:_ZNKSt6chrono9tzdb_list5frontEv@@GLIBCXX_3.4.31\n FUNC:_ZNKSt6locale2id5_M_idEv@@GLIBCXX_3.4\n FUNC:_ZNKSt6locale4nameB5cxx11Ev@@GLIBCXX_3.4.21\n FUNC:_ZNKSt6locale4nameEv@@GLIBCXX_3.4\n@@ -954,6 +963,7 @@ FUNC:_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14do_\n FUNC:_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE15_M_extract_nameES4_S4_RiPPKcmRSt8ios_baseRSt12_Ios_Iostate@@GLIBCXX_3.4.21\n FUNC:_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE16do_get_monthnameES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tm@@GLIBCXX_3.4.21\n FUNC:_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE21_M_extract_via_formatES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmPKc@@GLIBCXX_3.4.21\n+FUNC:_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE21_M_extract_via_formatES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmPKcRSt16__time_get_state@@GLIBCXX_3.4.30\n FUNC:_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE24_M_extract_wday_or_monthES4_S4_RiPPKcmRSt8ios_baseRSt12_Ios_Iostate@@GLIBCXX_3.4.21\n FUNC:_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE3getES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmPKcSD_@@GLIBCXX_3.4.21\n FUNC:_ZNKSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE3getES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmcc@@GLIBCXX_3.4.21\n@@ -973,6 +983,7 @@ FUNC:_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14do_\n FUNC:_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE15_M_extract_nameES4_S4_RiPPKwmRSt8ios_baseRSt12_Ios_Iostate@@GLIBCXX_3.4.21\n FUNC:_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE16do_get_monthnameES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tm@@GLIBCXX_3.4.21\n FUNC:_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE21_M_extract_via_formatES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmPKw@@GLIBCXX_3.4.21\n+FUNC:_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE21_M_extract_via_formatES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmPKwRSt16__time_get_state@@GLIBCXX_3.4.30\n FUNC:_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE24_M_extract_wday_or_monthES4_S4_RiPPKwmRSt8ios_baseRSt12_Ios_Iostate@@GLIBCXX_3.4.21\n FUNC:_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE3getES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmPKwSD_@@GLIBCXX_3.4.21\n FUNC:_ZNKSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE3getES4_S4_RSt8ios_baseRSt12_Ios_IostateP2tmcc@@GLIBCXX_3.4.21\n@@ -1225,6 +1236,7 @@ FUNC:_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE14do_get_week\n FUNC:_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE15_M_extract_nameES3_S3_RiPPKcmRSt8ios_baseRSt12_Ios_Iostate@@GLIBCXX_3.4\n FUNC:_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE16do_get_monthnameES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tm@@GLIBCXX_3.4\n FUNC:_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE21_M_extract_via_formatES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tmPKc@@GLIBCXX_3.4\n+FUNC:_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE21_M_extract_via_formatES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tmPKcRSt16__time_get_state@@GLIBCXX_3.4.30\n FUNC:_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE24_M_extract_wday_or_monthES3_S3_RiPPKcmRSt8ios_baseRSt12_Ios_Iostate@@GLIBCXX_3.4.14\n FUNC:_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE3getES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tmPKcSC_@@GLIBCXX_3.4.21\n FUNC:_ZNKSt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE3getES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tmcc@@GLIBCXX_3.4.26\n@@ -1244,6 +1256,7 @@ FUNC:_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE14do_get_week\n FUNC:_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE15_M_extract_nameES3_S3_RiPPKwmRSt8ios_baseRSt12_Ios_Iostate@@GLIBCXX_3.4\n FUNC:_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE16do_get_monthnameES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tm@@GLIBCXX_3.4\n FUNC:_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE21_M_extract_via_formatES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tmPKw@@GLIBCXX_3.4\n+FUNC:_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE21_M_extract_via_formatES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tmPKwRSt16__time_get_state@@GLIBCXX_3.4.30\n FUNC:_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE24_M_extract_wday_or_monthES3_S3_RiPPKwmRSt8ios_baseRSt12_Ios_Iostate@@GLIBCXX_3.4.14\n FUNC:_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE3getES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tmPKwSC_@@GLIBCXX_3.4.21\n FUNC:_ZNKSt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE3getES3_S3_RSt8ios_baseRSt12_Ios_IostateP2tmcc@@GLIBCXX_3.4.26\n@@ -2818,6 +2831,7 @@ FUNC:_ZNSt16__numpunct_cacheIwEC2Em@@GLIBCXX_3.4\n FUNC:_ZNSt16__numpunct_cacheIwED0Ev@@GLIBCXX_3.4\n FUNC:_ZNSt16__numpunct_cacheIwED1Ev@@GLIBCXX_3.4\n FUNC:_ZNSt16__numpunct_cacheIwED2Ev@@GLIBCXX_3.4\n+FUNC:_ZNSt16__time_get_state17_M_finalize_stateEP2tm@@GLIBCXX_3.4.30\n FUNC:_ZNSt16bad_array_lengthD0Ev@@CXXABI_1.3.8\n FUNC:_ZNSt16bad_array_lengthD1Ev@@CXXABI_1.3.8\n FUNC:_ZNSt16bad_array_lengthD2Ev@@CXXABI_1.3.8\n@@ -2928,7 +2942,8 @@ FUNC:_ZNSt18basic_stringstreamIwSt11char_traitsIwESaIwEED2Ev@@GLIBCXX_3.4\n FUNC:_ZNSt18basic_stringstreamIwSt11char_traitsIwESaIwEEaSEOS3_@@GLIBCXX_3.4.21\n FUNC:_ZNSt18condition_variable10notify_allEv@@GLIBCXX_3.4.11\n FUNC:_ZNSt18condition_variable10notify_oneEv@@GLIBCXX_3.4.11\n-FUNC:_ZNSt18condition_variable4waitERSt11unique_lockISt5mutexE@@GLIBCXX_3.4.11\n+FUNC:_ZNSt18condition_variable4waitERSt11unique_lockISt5mutexE@@GLIBCXX_3.4.30\n+FUNC:_ZNSt18condition_variable4waitERSt11unique_lockISt5mutexE@GLIBCXX_3.4.11\n FUNC:_ZNSt18condition_variableC1Ev@@GLIBCXX_3.4.11\n FUNC:_ZNSt18condition_variableC2Ev@@GLIBCXX_3.4.11\n FUNC:_ZNSt18condition_variableD1Ev@@GLIBCXX_3.4.11\n@@ -3087,9 +3102,18 @@ FUNC:_ZNSt6__norm15_List_node_base7_M_hookEPS0_@@GLIBCXX_3.4.14\n FUNC:_ZNSt6__norm15_List_node_base7reverseEv@@GLIBCXX_3.4.9\n FUNC:_ZNSt6__norm15_List_node_base8transferEPS0_S1_@@GLIBCXX_3.4.9\n FUNC:_ZNSt6__norm15_List_node_base9_M_unhookEv@@GLIBCXX_3.4.14\n+FUNC:_ZNSt6chrono11locate_zoneESt17basic_string_viewIcSt11char_traitsIcEE@@GLIBCXX_3.4.31\n+FUNC:_ZNSt6chrono11reload_tzdbEv@@GLIBCXX_3.4.31\n+FUNC:_ZNSt6chrono12current_zoneEv@@GLIBCXX_3.4.31\n FUNC:_ZNSt6chrono12system_clock3nowEv@@GLIBCXX_3.4.11\n+FUNC:_ZNSt6chrono13get_tzdb_listEv@@GLIBCXX_3.4.31\n+FUNC:_ZNSt6chrono14remote_versionB5cxx11Ev@@GLIBCXX_3.4.31\n FUNC:_ZNSt6chrono3_V212steady_clock3nowEv@@GLIBCXX_3.4.19\n FUNC:_ZNSt6chrono3_V212system_clock3nowEv@@GLIBCXX_3.4.19\n+FUNC:_ZNSt6chrono8get_tzdbEv@@GLIBCXX_3.4.31\n+FUNC:_ZNSt6chrono9tzdb_list11erase_afterENS0_14const_iteratorE@@GLIBCXX_3.4.31\n+FUNC:_ZNSt6chrono9tzdb_list14const_iteratorppEi@@GLIBCXX_3.4.31\n+FUNC:_ZNSt6chrono9tzdb_list14const_iteratorppEv@@GLIBCXX_3.4.31\n FUNC:_ZNSt6gslice8_IndexerC1EmRKSt8valarrayImES4_@@GLIBCXX_3.4\n FUNC:_ZNSt6gslice8_IndexerC2EmRKSt8valarrayImES4_@@GLIBCXX_3.4\n FUNC:_ZNSt6locale11_M_coalesceERKS_S1_i@@GLIBCXX_3.4\n@@ -3205,6 +3229,7 @@ FUNC:_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS\n FUNC:_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcS5_S5_@@GLIBCXX_3.4.21\n FUNC:_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13shrink_to_fitEv@@GLIBCXX_3.4.21\n FUNC:_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc@@GLIBCXX_3.4.21\n+FUNC:_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_replace_coldEPcmPKcmm@@GLIBCXX_3.4.31\n FUNC:_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_get_allocatorEv@@GLIBCXX_3.4.21\n FUNC:_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE17_S_to_string_viewESt17basic_string_viewIcS2_E@@GLIBCXX_3.4.26\n FUNC:_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE18_M_construct_aux_2Emc@@GLIBCXX_3.4.21\n@@ -3356,6 +3381,7 @@ FUNC:_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE13_S_copy_charsEPwPKwS\n FUNC:_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE13_S_copy_charsEPwS5_S5_@@GLIBCXX_3.4.21\n FUNC:_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE13shrink_to_fitEv@@GLIBCXX_3.4.21\n FUNC:_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE14_M_replace_auxEmmmw@@GLIBCXX_3.4.21\n+FUNC:_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE15_M_replace_coldEPwmPKwmm@@GLIBCXX_3.4.31\n FUNC:_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE16_M_get_allocatorEv@@GLIBCXX_3.4.21\n FUNC:_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE17_S_to_string_viewESt17basic_string_viewIwS2_E@@GLIBCXX_3.4.26\n FUNC:_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE18_M_construct_aux_2Emw@@GLIBCXX_3.4.21\n@@ -4113,6 +4139,50 @@ FUNC:_ZSt14__convert_to_vIfEvPKcRT_RSt12_Ios_IostateRKP15__locale_struct@@GLIBCX\n FUNC:_ZSt14get_unexpectedv@@GLIBCXX_3.4.20\n FUNC:_ZSt14set_unexpectedPFvvE@@GLIBCXX_3.4\n FUNC:_ZSt15_Fnv_hash_bytesPKvmm@@CXXABI_1.3.5\n+FUNC:_ZSt15__try_use_facetINSt7__cxx1110moneypunctIcLb0EEEEPKT_RKSt6locale@@GLIBCXX_3.4.31\n+FUNC:_ZSt15__try_use_facetINSt7__cxx1110moneypunctIcLb1EEEEPKT_RKSt6locale@@GLIBCXX_3.4.31\n+FUNC:_ZSt15__try_use_facetINSt7__cxx1110moneypunctIwLb0EEEEPKT_RKSt6locale@@GLIBCXX_3.4.31\n+FUNC:_ZSt15__try_use_facetINSt7__cxx1110moneypunctIwLb1EEEEPKT_RKSt6locale@@GLIBCXX_3.4.31\n+FUNC:_ZSt15__try_use_facetINSt7__cxx117collateIcEEEPKT_RKSt6locale@@GLIBCXX_3.4.31\n+FUNC:_ZSt15__try_use_facetINSt7__cxx117collateIwEEEPKT_RKSt6locale@@GLIBCXX_3.4.31\n+FUNC:_ZSt15__try_use_facetINSt7__cxx118messagesIcEEEPKT_RKSt6locale@@GLIBCXX_3.4.31\n+FUNC:_ZSt15__try_use_facetINSt7__cxx118messagesIwEEEPKT_RKSt6locale@@GLIBCXX_3.4.31\n+FUNC:_ZSt15__try_use_facetINSt7__cxx118numpunctIcEEEPKT_RKSt6locale@@GLIBCXX_3.4.31\n+FUNC:_ZSt15__try_use_facetINSt7__cxx118numpunctIwEEEPKT_RKSt6locale@@GLIBCXX_3.4.31\n+FUNC:_ZSt15__try_use_facetINSt7__cxx118time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEEEEPKT_RKSt6locale@@GLIBCXX_3.4.31\n+FUNC:_ZSt15__try_use_facetINSt7__cxx118time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEEEEPKT_RKSt6locale@@GLIBCXX_3.4.31\n+FUNC:_ZSt15__try_use_facetINSt7__cxx119money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEEEEPKT_RKSt6locale@@GLIBCXX_3.4.31\n+FUNC:_ZSt15__try_use_facetINSt7__cxx119money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEEEEPKT_RKSt6locale@@GLIBCXX_3.4.31\n+FUNC:_ZSt15__try_use_facetINSt7__cxx119money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEEEEPKT_RKSt6locale@@GLIBCXX_3.4.31\n+FUNC:_ZSt15__try_use_facetINSt7__cxx119money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEEEEPKT_RKSt6locale@@GLIBCXX_3.4.31\n+FUNC:_ZSt15__try_use_facetISt10moneypunctIcLb0EEEPKT_RKSt6locale@@GLIBCXX_3.4.31\n+FUNC:_ZSt15__try_use_facetISt10moneypunctIcLb1EEEPKT_RKSt6locale@@GLIBCXX_3.4.31\n+FUNC:_ZSt15__try_use_facetISt10moneypunctIwLb0EEEPKT_RKSt6locale@@GLIBCXX_3.4.31\n+FUNC:_ZSt15__try_use_facetISt10moneypunctIwLb1EEEPKT_RKSt6locale@@GLIBCXX_3.4.31\n+FUNC:_ZSt15__try_use_facetISt11__timepunctIcEEPKT_RKSt6locale@@GLIBCXX_3.4.31\n+FUNC:_ZSt15__try_use_facetISt11__timepunctIwEEPKT_RKSt6locale@@GLIBCXX_3.4.31\n+FUNC:_ZSt15__try_use_facetISt5ctypeIcEEPKT_RKSt6locale@@GLIBCXX_3.4.31\n+FUNC:_ZSt15__try_use_facetISt5ctypeIwEEPKT_RKSt6locale@@GLIBCXX_3.4.31\n+FUNC:_ZSt15__try_use_facetISt7codecvtIcc11__mbstate_tEEPKT_RKSt6locale@@GLIBCXX_3.4.31\n+FUNC:_ZSt15__try_use_facetISt7codecvtIwc11__mbstate_tEEPKT_RKSt6locale@@GLIBCXX_3.4.31\n+FUNC:_ZSt15__try_use_facetISt7collateIcEEPKT_RKSt6locale@@GLIBCXX_3.4.31\n+FUNC:_ZSt15__try_use_facetISt7collateIwEEPKT_RKSt6locale@@GLIBCXX_3.4.31\n+FUNC:_ZSt15__try_use_facetISt7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEEEPKT_RKSt6locale@@GLIBCXX_3.4.31\n+FUNC:_ZSt15__try_use_facetISt7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEEEPKT_RKSt6locale@@GLIBCXX_3.4.31\n+FUNC:_ZSt15__try_use_facetISt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEEEPKT_RKSt6locale@@GLIBCXX_3.4.31\n+FUNC:_ZSt15__try_use_facetISt7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEEEPKT_RKSt6locale@@GLIBCXX_3.4.31\n+FUNC:_ZSt15__try_use_facetISt8messagesIcEEPKT_RKSt6locale@@GLIBCXX_3.4.31\n+FUNC:_ZSt15__try_use_facetISt8messagesIwEEPKT_RKSt6locale@@GLIBCXX_3.4.31\n+FUNC:_ZSt15__try_use_facetISt8numpunctIcEEPKT_RKSt6locale@@GLIBCXX_3.4.31\n+FUNC:_ZSt15__try_use_facetISt8numpunctIwEEPKT_RKSt6locale@@GLIBCXX_3.4.31\n+FUNC:_ZSt15__try_use_facetISt8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEEEPKT_RKSt6locale@@GLIBCXX_3.4.31\n+FUNC:_ZSt15__try_use_facetISt8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEEEPKT_RKSt6locale@@GLIBCXX_3.4.31\n+FUNC:_ZSt15__try_use_facetISt8time_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEEEPKT_RKSt6locale@@GLIBCXX_3.4.31\n+FUNC:_ZSt15__try_use_facetISt8time_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEEEPKT_RKSt6locale@@GLIBCXX_3.4.31\n+FUNC:_ZSt15__try_use_facetISt9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEEEPKT_RKSt6locale@@GLIBCXX_3.4.31\n+FUNC:_ZSt15__try_use_facetISt9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEEEPKT_RKSt6locale@@GLIBCXX_3.4.31\n+FUNC:_ZSt15__try_use_facetISt9money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEEEPKT_RKSt6locale@@GLIBCXX_3.4.31\n+FUNC:_ZSt15__try_use_facetISt9money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEEEPKT_RKSt6locale@@GLIBCXX_3.4.31\n FUNC:_ZSt15future_categoryv@@GLIBCXX_3.4.15\n FUNC:_ZSt15get_new_handlerv@@GLIBCXX_3.4.20\n FUNC:_ZSt15set_new_handlerPFvvE@@GLIBCXX_3.4\n@@ -4150,12 +4220,17 @@ FUNC:_ZSt20__throw_future_errori@@GLIBCXX_3.4.14\n FUNC:_ZSt20__throw_length_errorPKc@@GLIBCXX_3.4\n FUNC:_ZSt20__throw_out_of_rangePKc@@GLIBCXX_3.4\n FUNC:_ZSt20__throw_system_errori@@GLIBCXX_3.4.11\n+FUNC:_ZSt20__to_chars_float16_tPcS_fSt12chars_format@@GLIBCXX_3.4.31\n FUNC:_ZSt21_Rb_tree_rotate_rightPSt18_Rb_tree_node_baseRS0_@@GLIBCXX_3.4\n FUNC:_ZSt21__copy_streambufs_eofIcSt11char_traitsIcEElPSt15basic_streambufIT_T0_ES6_Rb@@GLIBCXX_3.4.9\n FUNC:_ZSt21__copy_streambufs_eofIwSt11char_traitsIwEElPSt15basic_streambufIT_T0_ES6_Rb@@GLIBCXX_3.4.9\n+FUNC:_ZSt21__glibcxx_assert_failPKciS0_S0_@@GLIBCXX_3.4.30\n FUNC:_ZSt21__throw_bad_exceptionv@@GLIBCXX_3.4\n FUNC:_ZSt21__throw_runtime_errorPKc@@GLIBCXX_3.4\n+FUNC:_ZSt21__to_chars_bfloat16_tPcS_fSt12chars_format@@GLIBCXX_3.4.31\n+FUNC:_ZSt22__from_chars_float16_tPKcS0_RfSt12chars_format@@GLIBCXX_3.4.31\n FUNC:_ZSt22__throw_overflow_errorPKc@@GLIBCXX_3.4\n+FUNC:_ZSt23__from_chars_bfloat16_tPKcS0_RfSt12chars_format@@GLIBCXX_3.4.31\n FUNC:_ZSt23__throw_underflow_errorPKc@@GLIBCXX_3.4\n FUNC:_ZSt24__throw_invalid_argumentPKc@@GLIBCXX_3.4\n FUNC:_ZSt24__throw_out_of_range_fmtPKcz@@GLIBCXX_3.4.20\n@@ -4489,6 +4564,7 @@ OBJECT:0:CXXABI_1.3.10\n OBJECT:0:CXXABI_1.3.11\n OBJECT:0:CXXABI_1.3.12\n OBJECT:0:CXXABI_1.3.13\n+OBJECT:0:CXXABI_1.3.14\n OBJECT:0:CXXABI_1.3.2\n OBJECT:0:CXXABI_1.3.3\n OBJECT:0:CXXABI_1.3.4\n@@ -4522,6 +4598,8 @@ OBJECT:0:GLIBCXX_3.4.27\n OBJECT:0:GLIBCXX_3.4.28\n OBJECT:0:GLIBCXX_3.4.29\n OBJECT:0:GLIBCXX_3.4.3\n+OBJECT:0:GLIBCXX_3.4.30\n+OBJECT:0:GLIBCXX_3.4.31\n OBJECT:0:GLIBCXX_3.4.4\n OBJECT:0:GLIBCXX_3.4.5\n OBJECT:0:GLIBCXX_3.4.6\n@@ -4593,6 +4671,12 @@ OBJECT:15:_ZTSSt8messagesIcE@@GLIBCXX_3.4\n OBJECT:15:_ZTSSt8messagesIwE@@GLIBCXX_3.4\n OBJECT:15:_ZTSSt8numpunctIcE@@GLIBCXX_3.4\n OBJECT:15:_ZTSSt8numpunctIwE@@GLIBCXX_3.4\n+OBJECT:16:_ZTIDF128_@@CXXABI_1.3.14\n+OBJECT:16:_ZTIDF16_@@CXXABI_1.3.14\n+OBJECT:16:_ZTIDF32_@@CXXABI_1.3.14\n+OBJECT:16:_ZTIDF32x@@CXXABI_1.3.14\n+OBJECT:16:_ZTIDF64_@@CXXABI_1.3.14\n+OBJECT:16:_ZTIDF64x@@CXXABI_1.3.14\n OBJECT:16:_ZTIDd@@CXXABI_1.3.4\n OBJECT:16:_ZTIDe@@CXXABI_1.3.4\n OBJECT:16:_ZTIDf@@CXXABI_1.3.4\n@@ -5229,13 +5313,25 @@ OBJECT:30:_ZTSSt7codecvtIDiDu11__mbstate_tE@@GLIBCXX_3.4.26\n OBJECT:30:_ZTSSt7codecvtIDsDu11__mbstate_tE@@GLIBCXX_3.4.26\n OBJECT:32:_ZNSbIwSt11char_traitsIwESaIwEE4_Rep20_S_empty_rep_storageE@@GLIBCXX_3.4\n OBJECT:32:_ZNSs4_Rep20_S_empty_rep_storageE@@GLIBCXX_3.4\n+OBJECT:32:_ZTIPDF128_@@CXXABI_1.3.14\n+OBJECT:32:_ZTIPDF16_@@CXXABI_1.3.14\n+OBJECT:32:_ZTIPDF32_@@CXXABI_1.3.14\n+OBJECT:32:_ZTIPDF32x@@CXXABI_1.3.14\n+OBJECT:32:_ZTIPDF64_@@CXXABI_1.3.14\n+OBJECT:32:_ZTIPDF64x@@CXXABI_1.3.14\n OBJECT:32:_ZTIPDd@@CXXABI_1.3.4\n OBJECT:32:_ZTIPDe@@CXXABI_1.3.4\n OBJECT:32:_ZTIPDf@@CXXABI_1.3.4\n OBJECT:32:_ZTIPDi@@CXXABI_1.3.3\n OBJECT:32:_ZTIPDn@@CXXABI_1.3.5\n OBJECT:32:_ZTIPDs@@CXXABI_1.3.3\n OBJECT:32:_ZTIPDu@@CXXABI_1.3.12\n+OBJECT:32:_ZTIPKDF128_@@CXXABI_1.3.14\n+OBJECT:32:_ZTIPKDF16_@@CXXABI_1.3.14\n+OBJECT:32:_ZTIPKDF32_@@CXXABI_1.3.14\n+OBJECT:32:_ZTIPKDF32x@@CXXABI_1.3.14\n+OBJECT:32:_ZTIPKDF64_@@CXXABI_1.3.14\n+OBJECT:32:_ZTIPKDF64x@@CXXABI_1.3.14\n OBJECT:32:_ZTIPKDd@@CXXABI_1.3.4\n OBJECT:32:_ZTIPKDe@@CXXABI_1.3.4\n OBJECT:32:_ZTIPKDf@@CXXABI_1.3.4"}, {"sha": "2f615d13b73becf495e67abc211cdecc8b052fd6", "filename": "libstdc++-v3/include/experimental/bits/simd.h", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a4e0b20adf764e8e6ae16c64c130c575ba14aa7/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fbits%2Fsimd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a4e0b20adf764e8e6ae16c64c130c575ba14aa7/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fbits%2Fsimd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fbits%2Fsimd.h?ref=4a4e0b20adf764e8e6ae16c64c130c575ba14aa7", "patch": "@@ -3783,7 +3783,7 @@ template <int _Index, int _Total, int _Combine = 1, typename _Tp, size_t _Np>\n   _SimdWrapper<_Tp, _Np / _Total * _Combine>\n   __extract_part(const _SimdWrapper<_Tp, _Np> __x);\n \n-template <int Index, int Parts, int _Combine = 1, typename _Tp, typename _A0,\n+template <int _Index, int _Parts, int _Combine = 1, typename _Tp, typename _A0,\n \t  typename... _As>\n   _GLIBCXX_SIMD_INTRINSIC auto\n   __extract_part(const _SimdTuple<_Tp, _A0, _As...>& __x);\n@@ -3896,19 +3896,19 @@ template <size_t... _Sizes, typename _Tp, typename... _As>\n \n // split<simd>(simd) {{{\n template <typename _V, typename _Ap,\n-\t  size_t Parts = simd_size_v<typename _V::value_type, _Ap> / _V::size()>\n-  enable_if_t<simd_size_v<typename _V::value_type, _Ap> == Parts * _V::size()\n-\t      && is_simd_v<_V>, array<_V, Parts>>\n+\t  size_t _Parts = simd_size_v<typename _V::value_type, _Ap> / _V::size()>\n+  enable_if_t<simd_size_v<typename _V::value_type, _Ap> == _Parts * _V::size()\n+\t\t&& is_simd_v<_V>, array<_V, _Parts>>\n   split(const simd<typename _V::value_type, _Ap>& __x)\n   {\n     using _Tp = typename _V::value_type;\n-    if constexpr (Parts == 1)\n+    if constexpr (_Parts == 1)\n       {\n \treturn {simd_cast<_V>(__x)};\n       }\n     else if (__x._M_is_constprop())\n       {\n-\treturn __generate_from_n_evaluations<Parts, array<_V, Parts>>(\n+\treturn __generate_from_n_evaluations<_Parts, array<_V, _Parts>>(\n \t\t [&](auto __i) constexpr _GLIBCXX_SIMD_ALWAYS_INLINE_LAMBDA {\n \t\t   return _V([&](auto __j) constexpr _GLIBCXX_SIMD_ALWAYS_INLINE_LAMBDA\n \t\t\t     { return __x[__i * _V::size() + __j]; });\n@@ -3925,12 +3925,12 @@ template <typename _V, typename _Ap,\n #ifdef _GLIBCXX_SIMD_USE_ALIASING_LOADS\n       const __may_alias<_Tp>* const __element_ptr\n \t= reinterpret_cast<const __may_alias<_Tp>*>(&__data(__x));\n-      return __generate_from_n_evaluations<Parts, array<_V, Parts>>(\n+      return __generate_from_n_evaluations<_Parts, array<_V, _Parts>>(\n \t       [&](auto __i) constexpr _GLIBCXX_SIMD_ALWAYS_INLINE_LAMBDA\n \t       { return _V(__element_ptr + __i * _V::size(), vector_aligned); });\n #else\n       const auto& __xx = __data(__x);\n-      return __generate_from_n_evaluations<Parts, array<_V, Parts>>(\n+      return __generate_from_n_evaluations<_Parts, array<_V, _Parts>>(\n \t       [&](auto __i) constexpr _GLIBCXX_SIMD_ALWAYS_INLINE_LAMBDA {\n \t\t [[maybe_unused]] constexpr size_t __offset\n \t\t   = decltype(__i)::value * _V::size();\n@@ -3944,20 +3944,20 @@ template <typename _V, typename _Ap,\n   else if constexpr (is_same_v<typename _V::abi_type, simd_abi::scalar>)\n     {\n       // normally memcpy should work here as well\n-      return __generate_from_n_evaluations<Parts, array<_V, Parts>>(\n+      return __generate_from_n_evaluations<_Parts, array<_V, _Parts>>(\n \t       [&](auto __i) constexpr _GLIBCXX_SIMD_ALWAYS_INLINE_LAMBDA { return __x[__i]; });\n     }\n   else\n     {\n-      return __generate_from_n_evaluations<Parts, array<_V, Parts>>(\n+      return __generate_from_n_evaluations<_Parts, array<_V, _Parts>>(\n \t       [&](auto __i) constexpr _GLIBCXX_SIMD_ALWAYS_INLINE_LAMBDA {\n \t\t if constexpr (__is_fixed_size_abi_v<typename _V::abi_type>)\n \t\t   return _V([&](auto __j) constexpr _GLIBCXX_SIMD_ALWAYS_INLINE_LAMBDA {\n \t\t\t    return __x[__i * _V::size() + __j];\n \t\t\t  });\n \t\t else\n \t\t   return _V(__private_init,\n-\t\t\t     __extract_part<decltype(__i)::value, Parts>(__data(__x)));\n+\t\t\t     __extract_part<decltype(__i)::value, _Parts>(__data(__x)));\n \t       });\n     }\n   }"}]}