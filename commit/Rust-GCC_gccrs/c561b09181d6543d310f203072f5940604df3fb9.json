{"sha": "c561b09181d6543d310f203072f5940604df3fb9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzU2MWIwOTE4MWQ2NTQzZDMxMGYyMDMwNzJmNTk0MDYwNGRmM2ZiOQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2016-06-17T20:01:46Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2016-06-17T20:01:46Z"}, "message": "decl.c (validate_constexpr_redeclaration): Change pair of errors to error + inform.\n\n/cp\n2016-06-17  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* decl.c (validate_constexpr_redeclaration): Change pair of errors\n\tto error + inform.\n\t* error.c (dump_function_decl): Save the constexpr specifier too.\n\n/testsuite\n2016-06-17  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* g++.dg/cpp0x/constexpr-specialization.C: Adjust for dg-message\n\tvs dg-error; test constexpr specifier too.\n\nFrom-SVN: r237564", "tree": {"sha": "81fe3c5382f90ca9d828af92253a0a05f55ef1c9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/81fe3c5382f90ca9d828af92253a0a05f55ef1c9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c561b09181d6543d310f203072f5940604df3fb9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c561b09181d6543d310f203072f5940604df3fb9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c561b09181d6543d310f203072f5940604df3fb9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c561b09181d6543d310f203072f5940604df3fb9/comments", "author": null, "committer": null, "parents": [{"sha": "ce20977799be679bf8769522e94b72d32b781fde", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce20977799be679bf8769522e94b72d32b781fde", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce20977799be679bf8769522e94b72d32b781fde"}], "stats": {"total": 32, "additions": 25, "deletions": 7}, "files": [{"sha": "8ff9630e866b3c9eea29c22b48147dda0132e77c", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c561b09181d6543d310f203072f5940604df3fb9/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c561b09181d6543d310f203072f5940604df3fb9/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=c561b09181d6543d310f203072f5940604df3fb9", "patch": "@@ -1,3 +1,9 @@\n+2016-06-17  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* decl.c (validate_constexpr_redeclaration): Change pair of errors\n+\tto error + inform.\n+\t* error.c (dump_function_decl): Save the constexpr specifier too.\n+\n 2016-06-17  Jakub Jelinek  <jakub@redhat.com>\n \n \t* tree.c (builtin_valid_in_constant_expr_p): Test for"}, {"sha": "c86a131d4894ba040d65e6c35b7c454a93473e6f", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c561b09181d6543d310f203072f5940604df3fb9/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c561b09181d6543d310f203072f5940604df3fb9/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=c561b09181d6543d310f203072f5940604df3fb9", "patch": "@@ -1281,8 +1281,11 @@ validate_constexpr_redeclaration (tree old_decl, tree new_decl)\n \t  && DECL_TEMPLATE_SPECIALIZATION (new_decl))\n \treturn true;\n \n-      error (\"redeclaration %q+D differs in %<constexpr%>\", new_decl);\n-      error (\"from previous declaration %q+D\", old_decl);\n+      error_at (DECL_SOURCE_LOCATION (new_decl),\n+\t\t\"redeclaration %qD differs in %<constexpr%> \"\n+\t\t\"from previous declaration\", new_decl);\n+      inform (DECL_SOURCE_LOCATION (old_decl),\n+\t      \"previous declaration %qD\", old_decl);\n       return false;\n     }\n   return true;"}, {"sha": "d5a7d0f9efdc877d2cdd0b6acf80123f319ebbdc", "filename": "gcc/cp/error.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c561b09181d6543d310f203072f5940604df3fb9/gcc%2Fcp%2Ferror.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c561b09181d6543d310f203072f5940604df3fb9/gcc%2Fcp%2Ferror.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ferror.c?ref=c561b09181d6543d310f203072f5940604df3fb9", "patch": "@@ -1486,6 +1486,7 @@ dump_function_decl (cxx_pretty_printer *pp, tree t, int flags)\n   int show_return = flags & TFF_RETURN_TYPE || flags & TFF_DECL_SPECIFIERS;\n   int do_outer_scope = ! (flags & TFF_UNQUALIFIED_NAME);\n   tree exceptions;\n+  bool constexpr_p;\n \n   flags &= ~(TFF_UNQUALIFIED_NAME | TFF_TEMPLATE_NAME);\n   if (TREE_CODE (t) == TEMPLATE_DECL)\n@@ -1495,6 +1496,9 @@ dump_function_decl (cxx_pretty_printer *pp, tree t, int flags)\n      emitting an error about incompatible specifications.  */\n   exceptions = TYPE_RAISES_EXCEPTIONS (TREE_TYPE (t));\n \n+  /* Likewise for the constexpr specifier, in case t is a specialization.  */\n+  constexpr_p = DECL_DECLARED_CONSTEXPR_P (t);\n+\n   /* Pretty print template instantiations only.  */\n   if (DECL_USE_TEMPLATE (t) && DECL_TEMPLATE_INFO (t)\n       && flag_pretty_templates)\n@@ -1529,7 +1533,7 @@ dump_function_decl (cxx_pretty_printer *pp, tree t, int flags)\n       else if (DECL_VIRTUAL_P (t))\n \tpp_cxx_ws_string (pp, \"virtual\");\n \n-      if (DECL_DECLARED_CONSTEXPR_P (t))\n+      if (constexpr_p)\n \tpp_cxx_ws_string (pp, \"constexpr\");\n     }\n "}, {"sha": "e717ea0851befaa08cda110dfea18762c0d273bb", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c561b09181d6543d310f203072f5940604df3fb9/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c561b09181d6543d310f203072f5940604df3fb9/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c561b09181d6543d310f203072f5940604df3fb9", "patch": "@@ -1,3 +1,8 @@\n+2016-06-17  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* g++.dg/cpp0x/constexpr-specialization.C: Adjust for dg-message\n+\tvs dg-error; test constexpr specifier too.\n+\n 2016-06-17  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* g++.dg/cpp0x/defaulted31.C: Adjust for dg-message vs dg-error."}, {"sha": "64d8f4ec2666d1e5cbe86897940d7ae02128c440", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-specialization.C", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c561b09181d6543d310f203072f5940604df3fb9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-specialization.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c561b09181d6543d310f203072f5940604df3fb9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-specialization.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-specialization.C?ref=c561b09181d6543d310f203072f5940604df3fb9", "patch": "@@ -3,10 +3,10 @@\n \n template<typename T> constexpr int foo(T);\n template<> int foo(int);\n-template<> int foo(int);            // { dg-error \"previous\" }\n-template<> constexpr int foo(int);  // { dg-error \"redeclaration\" }\n+template<> int foo(int);            // { dg-message \"previous declaration 'int foo\" }\n+template<> constexpr int foo(int);  // { dg-error \"redeclaration 'constexpr int foo\" }\n \n template<typename T> int bar(T);\n template<> constexpr int bar(int);\n-template<> constexpr int bar(int);  // { dg-error \"previous\" }\n-template<> int bar(int);            // { dg-error \"redeclaration\" }\n+template<> constexpr int bar(int);  // { dg-message \"previous declaration 'constexpr int bar\" }\n+template<> int bar(int);            // { dg-error \"redeclaration 'int bar\" }"}]}