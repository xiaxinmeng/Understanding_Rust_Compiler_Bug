{"sha": "08678f511c3439e279f1d66978a12d324cfbcca1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDg2NzhmNTExYzM0MzllMjc5ZjFkNjY5NzhhMTJkMzI0Y2ZiY2NhMQ==", "commit": {"author": {"name": "Hans-Peter Nilsson", "email": "hp@axis.com", "date": "2006-02-01T21:15:54Z"}, "committer": {"name": "Hans-Peter Nilsson", "email": "hp@gcc.gnu.org", "date": "2006-02-01T21:15:54Z"}, "message": "cse.c (fold_rtx): When arg1 has a constant equivalent...\n\n\t* cse.c (fold_rtx) <case RTX_COMM_COMPARE, RTX_COMPARE>: When arg1\n\thas a constant equivalent, iterate over equivalents for arg0,\n\tcalling simplify_relational_operation and if there's a result\n\tcheaper than X, apply fold_rtx and return the result.\n\nFrom-SVN: r110481", "tree": {"sha": "e70ddc7be04aa34ecfa022123c32a5a39296a2c3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e70ddc7be04aa34ecfa022123c32a5a39296a2c3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/08678f511c3439e279f1d66978a12d324cfbcca1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08678f511c3439e279f1d66978a12d324cfbcca1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/08678f511c3439e279f1d66978a12d324cfbcca1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08678f511c3439e279f1d66978a12d324cfbcca1/comments", "author": {"login": "hpataxisdotcom", "id": 80339731, "node_id": "MDQ6VXNlcjgwMzM5NzMx", "avatar_url": "https://avatars.githubusercontent.com/u/80339731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hpataxisdotcom", "html_url": "https://github.com/hpataxisdotcom", "followers_url": "https://api.github.com/users/hpataxisdotcom/followers", "following_url": "https://api.github.com/users/hpataxisdotcom/following{/other_user}", "gists_url": "https://api.github.com/users/hpataxisdotcom/gists{/gist_id}", "starred_url": "https://api.github.com/users/hpataxisdotcom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hpataxisdotcom/subscriptions", "organizations_url": "https://api.github.com/users/hpataxisdotcom/orgs", "repos_url": "https://api.github.com/users/hpataxisdotcom/repos", "events_url": "https://api.github.com/users/hpataxisdotcom/events{/privacy}", "received_events_url": "https://api.github.com/users/hpataxisdotcom/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "46fd0f8c241a0afd36adf9c63b56839ace3a0210", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46fd0f8c241a0afd36adf9c63b56839ace3a0210", "html_url": "https://github.com/Rust-GCC/gccrs/commit/46fd0f8c241a0afd36adf9c63b56839ace3a0210"}], "stats": {"total": 58, "additions": 58, "deletions": 0}, "files": [{"sha": "fb24b92b16e371091242f7a8e4d8bda908018327", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08678f511c3439e279f1d66978a12d324cfbcca1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08678f511c3439e279f1d66978a12d324cfbcca1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=08678f511c3439e279f1d66978a12d324cfbcca1", "patch": "@@ -1,3 +1,10 @@\n+2006-02-01  Hans-Peter Nilsson  <hp@axis.com>\n+\n+\t* cse.c (fold_rtx) <case RTX_COMM_COMPARE, RTX_COMPARE>: When arg1\n+\thas a constant equivalent, iterate over equivalents for arg0,\n+\tcalling simplify_relational_operation and if there's a result\n+\tcheaper than X, apply fold_rtx and return the result.\n+\n 2006-02-01  Jan Hubicka  <jh@suse.cz>\n \n \t* opts.c (no_unit_at_a_time_default): New global variable."}, {"sha": "8163c6445ac305997db41b978ae93a8735bfd2e9", "filename": "gcc/cse.c", "status": "modified", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08678f511c3439e279f1d66978a12d324cfbcca1/gcc%2Fcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08678f511c3439e279f1d66978a12d324cfbcca1/gcc%2Fcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcse.c?ref=08678f511c3439e279f1d66978a12d324cfbcca1", "patch": "@@ -3981,6 +3981,57 @@ fold_rtx (rtx x, rtx insn)\n \t     comparison.  */\n \t  if (const_arg0 == 0 || const_arg1 == 0)\n \t    {\n+\t      if (const_arg1 != NULL)\n+\t\t{\n+\t\t  rtx cheapest_simplification;\n+\t\t  int cheapest_cost;\n+\t\t  rtx simp_result;\n+\t\t  struct table_elt *p;\n+\n+\t\t  /* See if we can find an equivalent of folded_arg0\n+\t\t     that gets us a cheaper expression, possibly a\n+\t\t     constant through simplifications.  */\n+\t\t  p = lookup (folded_arg0, SAFE_HASH (folded_arg0, mode_arg0),\n+\t\t\t      mode_arg0);\n+\t\t  \n+\t\t  if (p != NULL)\n+\t\t    {\n+\t\t      cheapest_simplification = x;\n+\t\t      cheapest_cost = COST (x);\n+\n+\t\t      for (p = p->first_same_value; p != NULL; p = p->next_same_value)\n+\t\t\t{\n+\t\t\t  int cost;\n+\n+\t\t\t  /* If the entry isn't valid, skip it.  */\n+\t\t\t  if (! exp_equiv_p (p->exp, p->exp, 1, false))\n+\t\t\t    continue;\n+\n+\t\t\t  /* Try to simplify using this equivalence.  */\n+\t\t\t  simp_result\n+\t\t\t    = simplify_relational_operation (code, mode,\n+\t\t\t\t\t\t\t     mode_arg0,\n+\t\t\t\t\t\t\t     p->exp,\n+\t\t\t\t\t\t\t     const_arg1);\n+\n+\t\t\t  if (simp_result == NULL)\n+\t\t\t    continue;\n+\n+\t\t\t  cost = COST (simp_result);\n+\t\t\t  if (cost < cheapest_cost)\n+\t\t\t    {\n+\t\t\t      cheapest_cost = cost;\n+\t\t\t      cheapest_simplification = simp_result;\n+\t\t\t    }\n+\t\t\t}\n+\n+\t\t      /* If we have a cheaper expression now, use that\n+\t\t\t and try folding it further, from the top.  */\n+\t\t      if (cheapest_simplification != x)\n+\t\t\treturn fold_rtx (cheapest_simplification, insn);\n+\t\t    }\n+\t\t}\n+\n \t      /* Some addresses are known to be nonzero.  We don't know\n \t\t their sign, but equality comparisons are known.  */\n \t      if (const_arg1 == const0_rtx"}]}