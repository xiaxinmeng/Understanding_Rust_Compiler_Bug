{"sha": "b4d4a7d4b09fe843af40348786bdaae7dac4281e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjRkNGE3ZDRiMDlmZTg0M2FmNDAzNDg3ODZiZGFhZTdkYWM0MjgxZQ==", "commit": {"author": {"name": "Mark Shinwell", "email": "shinwell@codesourcery.com", "date": "2007-10-08T15:28:56Z"}, "committer": {"name": "Mark Shinwell", "email": "shinwell@gcc.gnu.org", "date": "2007-10-08T15:28:56Z"}, "message": "combine.c (setup_incoming_promotions): Ensure that arguments that have not undergone mode promotions do not...\n\n\tgcc/\n\t* combine.c (setup_incoming_promotions): Ensure that\n\targuments that have not undergone mode promotions do not\n\tincorrectly get marked as being sign- or zero-extended.\n\nFrom-SVN: r129131", "tree": {"sha": "241c0b28f58afd35e1c47290cd6bc1891754036a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/241c0b28f58afd35e1c47290cd6bc1891754036a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b4d4a7d4b09fe843af40348786bdaae7dac4281e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4d4a7d4b09fe843af40348786bdaae7dac4281e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b4d4a7d4b09fe843af40348786bdaae7dac4281e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4d4a7d4b09fe843af40348786bdaae7dac4281e/comments", "author": null, "committer": null, "parents": [{"sha": "bd113227bf7da8dfe45b9f5db511dadc9b22cb00", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd113227bf7da8dfe45b9f5db511dadc9b22cb00", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bd113227bf7da8dfe45b9f5db511dadc9b22cb00"}], "stats": {"total": 16, "additions": 12, "deletions": 4}, "files": [{"sha": "1cbfa8cc1cc26e3994f06b76252e7addbf7cb0fc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4d4a7d4b09fe843af40348786bdaae7dac4281e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4d4a7d4b09fe843af40348786bdaae7dac4281e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b4d4a7d4b09fe843af40348786bdaae7dac4281e", "patch": "@@ -1,3 +1,9 @@\n+2007-10-08  Mark Shinwell  <shinwell@codesourcery.com>\n+\n+\t* combine.c (setup_incoming_promotions): Ensure that\n+\targuments that have not undergone mode promotions do not\n+\tincorrectly get marked as being sign- or zero-extended.\n+\n 2007-10-08  Richard Guenther  <rguenther@suse.de>\n \n \tPR middle-end/33693"}, {"sha": "ca378bd1c897bb7263b7c422f4908a1f7201b2d7", "filename": "gcc/combine.c", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4d4a7d4b09fe843af40348786bdaae7dac4281e/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4d4a7d4b09fe843af40348786bdaae7dac4281e/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=b4d4a7d4b09fe843af40348786bdaae7dac4281e", "patch": "@@ -1363,15 +1363,17 @@ setup_incoming_promotions (rtx first)\n \n       /* Eliminate sign extensions in the callee when possible.  Only\n          do this when:\n-\t (a) the mode of the register is the same as the mode of\n+\t (a) a mode promotion has occurred;\n+\t (b) the mode of the register is the same as the mode of\n \t     the argument as it is passed; and\n-\t (b) the signedness does not change across any of the promotions; and\n-\t (c) when no language-level promotions (which we cannot guarantee\n+\t (c) the signedness does not change across any of the promotions; and\n+\t (d) when no language-level promotions (which we cannot guarantee\n \t     will have been done by an external caller) are necessary,\n \t     unless we know that this function is only ever called from\n \t     the current compilation unit -- all of whose call sites will\n \t     do the mode1 --> mode2 promotion.  */\n-      if (mode3 == mode4\n+      if (mode1 != mode3\n+          && mode3 == mode4\n           && uns1 == uns3\n \t  && (mode1 == mode2 || strictly_local))\n         {"}]}