{"sha": "793e86a71bb5d4cca448a04a1d519898436bef66", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzkzZTg2YTcxYmI1ZDRjY2E0NDhhMDRhMWQ1MTk4OTg0MzZiZWY2Ng==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2009-12-02T22:49:43Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2009-12-02T22:49:43Z"}, "message": "fold-const.c (div_if_zero_remainder): Honor that sizetypes are sign-extending.\n\n2009-12-02  Richard Guenther  <rguenther@suse.de>\n\n\t* fold-const.c (div_if_zero_remainder): Honor that sizetypes\n\tare sign-extending.  Simplify.\n\nFrom-SVN: r154926", "tree": {"sha": "85e3f36ee7d7554d956c324f46cf85fc7b5e00f3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/85e3f36ee7d7554d956c324f46cf85fc7b5e00f3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/793e86a71bb5d4cca448a04a1d519898436bef66", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/793e86a71bb5d4cca448a04a1d519898436bef66", "html_url": "https://github.com/Rust-GCC/gccrs/commit/793e86a71bb5d4cca448a04a1d519898436bef66", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/793e86a71bb5d4cca448a04a1d519898436bef66/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "fc81a3692de25d1c1279844095513b033f9cfef8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc81a3692de25d1c1279844095513b033f9cfef8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fc81a3692de25d1c1279844095513b033f9cfef8"}], "stats": {"total": 29, "additions": 15, "deletions": 14}, "files": [{"sha": "53ea0d2fe25ca1f6e758d0e5c4ad7eff1bf91ef5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/793e86a71bb5d4cca448a04a1d519898436bef66/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/793e86a71bb5d4cca448a04a1d519898436bef66/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=793e86a71bb5d4cca448a04a1d519898436bef66", "patch": "@@ -1,3 +1,8 @@\n+2009-12-02  Richard Guenther  <rguenther@suse.de>\n+\n+\t* fold-const.c (div_if_zero_remainder): Honor that sizetypes\n+\tare sign-extending.  Simplify.\n+\n 2009-12-02  Richard Henderson  <rth@redhat.com>\n \n \tPR tree-opt/42215"}, {"sha": "cbdaf86b22c8093e5f8e92ebfe68e35686b24f9f", "filename": "gcc/fold-const.c", "status": "modified", "additions": 10, "deletions": 14, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/793e86a71bb5d4cca448a04a1d519898436bef66/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/793e86a71bb5d4cca448a04a1d519898436bef66/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=793e86a71bb5d4cca448a04a1d519898436bef66", "patch": "@@ -881,22 +881,18 @@ div_if_zero_remainder (enum tree_code code, const_tree arg1, const_tree arg2)\n   HOST_WIDE_INT int1h, int2h;\n   unsigned HOST_WIDE_INT quol, reml;\n   HOST_WIDE_INT quoh, remh;\n-  tree type = TREE_TYPE (arg1);\n-  int uns = TYPE_UNSIGNED (type);\n+  int uns;\n+\n+  /* The sign of the division is according to operand two, that\n+     does the correct thing for POINTER_PLUS_EXPR where we want\n+     a signed division.  */\n+  uns = TYPE_UNSIGNED (TREE_TYPE (arg2));\n+  if (TREE_CODE (TREE_TYPE (arg2)) == INTEGER_TYPE\n+      && TYPE_IS_SIZETYPE (TREE_TYPE (arg2)))\n+    uns = false;\n \n   int1l = TREE_INT_CST_LOW (arg1);\n   int1h = TREE_INT_CST_HIGH (arg1);\n-  /* &obj[0] + -128 really should be compiled as &obj[-8] rather than\n-     &obj[some_exotic_number].  */\n-  if (POINTER_TYPE_P (type))\n-    {\n-      uns = false;\n-      type = signed_type_for (type);\n-      fit_double_type (int1l, int1h, &int1l, &int1h,\n-\t\t       type);\n-    }\n-  else\n-    fit_double_type (int1l, int1h, &int1l, &int1h, type);\n   int2l = TREE_INT_CST_LOW (arg2);\n   int2h = TREE_INT_CST_HIGH (arg2);\n \n@@ -905,7 +901,7 @@ div_if_zero_remainder (enum tree_code code, const_tree arg1, const_tree arg2)\n   if (remh != 0 || reml != 0)\n     return NULL_TREE;\n \n-  return build_int_cst_wide (type, quol, quoh);\n+  return build_int_cst_wide (TREE_TYPE (arg1), quol, quoh);\n }\n \f\n /* This is nonzero if we should defer warnings about undefined"}]}