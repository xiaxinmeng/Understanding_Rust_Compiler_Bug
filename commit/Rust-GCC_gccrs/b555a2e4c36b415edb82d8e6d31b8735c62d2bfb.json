{"sha": "b555a2e4c36b415edb82d8e6d31b8735c62d2bfb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjU1NWEyZTRjMzZiNDE1ZWRiODJkOGU2ZDMxYjg3MzVjNjJkMmJmYg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2016-01-18T14:25:56Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2016-01-18T14:25:56Z"}, "message": "re PR tree-optimization/69297 (Performance regression after r230020)\n\n2016-01-18  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/69297\n\t* tree-vect-slp.c (vect_bb_slp_scalar_cost): Count each scalar\n\tstmt at most once.\n\t(vect_bb_vectorization_profitable_p): Clear visited flag again.\n\n\t* gcc.dg/vect/costmodel/x86_64/costmodel-pr69297.c: New testcase.\n\nFrom-SVN: r232519", "tree": {"sha": "3865217f6caa55bd7700da18c5f76c5d1d7935ba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3865217f6caa55bd7700da18c5f76c5d1d7935ba"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b555a2e4c36b415edb82d8e6d31b8735c62d2bfb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b555a2e4c36b415edb82d8e6d31b8735c62d2bfb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b555a2e4c36b415edb82d8e6d31b8735c62d2bfb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b555a2e4c36b415edb82d8e6d31b8735c62d2bfb/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "305708cedd962831b648783936cb6991dfdeb87d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/305708cedd962831b648783936cb6991dfdeb87d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/305708cedd962831b648783936cb6991dfdeb87d"}], "stats": {"total": 105, "additions": 105, "deletions": 0}, "files": [{"sha": "10ad8352397e565806ed2e4110d8fa7b6923f412", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b555a2e4c36b415edb82d8e6d31b8735c62d2bfb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b555a2e4c36b415edb82d8e6d31b8735c62d2bfb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b555a2e4c36b415edb82d8e6d31b8735c62d2bfb", "patch": "@@ -1,3 +1,10 @@\n+2016-01-18  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/69297\n+\t* tree-vect-slp.c (vect_bb_slp_scalar_cost): Count each scalar\n+\tstmt at most once.\n+\t(vect_bb_vectorization_profitable_p): Clear visited flag again.\n+\n 2016-01-18  Yuri Rumyantsev  <ysrumyan@gmail.com>\n \n \tPR middle-end/68542"}, {"sha": "cfc6ce23dd7159b09bf794456a657a4b4863a324", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b555a2e4c36b415edb82d8e6d31b8735c62d2bfb/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b555a2e4c36b415edb82d8e6d31b8735c62d2bfb/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b555a2e4c36b415edb82d8e6d31b8735c62d2bfb", "patch": "@@ -1,3 +1,8 @@\n+2016-01-18  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/69297\n+\t* gcc.dg/vect/costmodel/x86_64/costmodel-pr69297.c: New testcase.\n+\n 2016-01-18  Joseph Myers  <joseph@codesourcery.com>\n \n \t* gcc.target/mips/mips-3d-1.c: Use forbid_cpu=octeon.* in"}, {"sha": "e65a30c06d6e7e8c6795907b4245e4b079fbfa62", "filename": "gcc/testsuite/gcc.dg/vect/costmodel/x86_64/costmodel-pr69297.c", "status": "added", "additions": 83, "deletions": 0, "changes": 83, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b555a2e4c36b415edb82d8e6d31b8735c62d2bfb/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcostmodel%2Fx86_64%2Fcostmodel-pr69297.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b555a2e4c36b415edb82d8e6d31b8735c62d2bfb/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcostmodel%2Fx86_64%2Fcostmodel-pr69297.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcostmodel%2Fx86_64%2Fcostmodel-pr69297.c?ref=b555a2e4c36b415edb82d8e6d31b8735c62d2bfb", "patch": "@@ -0,0 +1,83 @@\n+/* { dg-do compile } */\n+/* { dg-additional-options \"-march=core-avx2 -fdump-tree-slp-details\" } */\n+\n+#define abs(x) (x) < 0 ? -(x) : (x)\n+int\n+foo (int* diff)\n+{\n+  int k, satd = 0, m[16], d[16];\n+  \n+    m[ 0] = diff[ 0] + diff[12];\n+    m[ 4] = diff[ 4] + diff[ 8];\n+    m[ 8] = diff[ 4] - diff[ 8];\n+    m[12] = diff[ 0] - diff[12];\n+    m[ 1] = diff[ 1] + diff[13];\n+    m[ 5] = diff[ 5] + diff[ 9];\n+    m[ 9] = diff[ 5] - diff[ 9];\n+    m[13] = diff[ 1] - diff[13];\n+    m[ 2] = diff[ 2] + diff[14];\n+    m[ 6] = diff[ 6] + diff[10];\n+    m[10] = diff[ 6] - diff[10];\n+    m[14] = diff[ 2] - diff[14];\n+    m[ 3] = diff[ 3] + diff[15];\n+    m[ 7] = diff[ 7] + diff[11];\n+    m[11] = diff[ 7] - diff[11];\n+    m[15] = diff[ 3] - diff[15];\n+    \n+    d[ 0] = m[ 0] + m[ 4];\n+    d[ 8] = m[ 0] - m[ 4];\n+    d[ 4] = m[ 8] + m[12];\n+    d[12] = m[12] - m[ 8];\n+    d[ 1] = m[ 1] + m[ 5];\n+    d[ 9] = m[ 1] - m[ 5];\n+    d[ 5] = m[ 9] + m[13];\n+    d[13] = m[13] - m[ 9];\n+    d[ 2] = m[ 2] + m[ 6];\n+    d[10] = m[ 2] - m[ 6];\n+    d[ 6] = m[10] + m[14];\n+    d[14] = m[14] - m[10];\n+    d[ 3] = m[ 3] + m[ 7];\n+    d[11] = m[ 3] - m[ 7];\n+    d[ 7] = m[11] + m[15];\n+    d[15] = m[15] - m[11];\n+    \n+    m[ 0] = d[ 0] + d[ 3];\n+    m[ 1] = d[ 1] + d[ 2];\n+    m[ 2] = d[ 1] - d[ 2];\n+    m[ 3] = d[ 0] - d[ 3];\n+    m[ 4] = d[ 4] + d[ 7];\n+    m[ 5] = d[ 5] + d[ 6];\n+    m[ 6] = d[ 5] - d[ 6];\n+    m[ 7] = d[ 4] - d[ 7];\n+    m[ 8] = d[ 8] + d[11];\n+    m[ 9] = d[ 9] + d[10];\n+    m[10] = d[ 9] - d[10];\n+    m[11] = d[ 8] - d[11];\n+    m[12] = d[12] + d[15];\n+    m[13] = d[13] + d[14];\n+    m[14] = d[13] - d[14];\n+    m[15] = d[12] - d[15];\n+    \n+    d[ 0] = m[ 0] + m[ 1];\n+    d[ 1] = m[ 0] - m[ 1];\n+    d[ 2] = m[ 2] + m[ 3];\n+    d[ 3] = m[ 3] - m[ 2];\n+    d[ 4] = m[ 4] + m[ 5];\n+    d[ 5] = m[ 4] - m[ 5];\n+    d[ 6] = m[ 6] + m[ 7];\n+    d[ 7] = m[ 7] - m[ 6];\n+    d[ 8] = m[ 8] + m[ 9];\n+    d[ 9] = m[ 8] - m[ 9];\n+    d[10] = m[10] + m[11];\n+    d[11] = m[11] - m[10];\n+    d[12] = m[12] + m[13];\n+    d[13] = m[12] - m[13];\n+    d[14] = m[14] + m[15];\n+    d[15] = m[15] - m[14];\n+    for (k=0; k<16; k++)\n+      satd += abs(d[k]);\n+  return satd;\n+}\n+\n+/* { dg-final { scan-tree-dump \"vectorization is not profitable\" \"slp1\" } } */\n+/* { dg-final { scan-tree-dump-not \"basic block vectorized\" \"slp1\" } } */"}, {"sha": "30e8c153fe62ec6f06803c5de1415a5b0705aa5c", "filename": "gcc/tree-vect-slp.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b555a2e4c36b415edb82d8e6d31b8735c62d2bfb/gcc%2Ftree-vect-slp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b555a2e4c36b415edb82d8e6d31b8735c62d2bfb/gcc%2Ftree-vect-slp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-slp.c?ref=b555a2e4c36b415edb82d8e6d31b8735c62d2bfb", "patch": "@@ -2409,6 +2409,11 @@ vect_bb_slp_scalar_cost (basic_block bb,\n       if ((*life)[i])\n \tcontinue;\n \n+      /* Count scalar stmts only once.  */\n+      if (gimple_visited_p (stmt))\n+\tcontinue;\n+      gimple_set_visited (stmt, true);\n+\n       stmt_info = vinfo_for_stmt (stmt);\n       if (STMT_VINFO_DATA_REF (stmt_info))\n         {\n@@ -2451,6 +2456,11 @@ vect_bb_vectorization_profitable_p (bb_vec_info bb_vinfo)\n \t\t\t\t\t      &life);\n     }\n \n+  /* Unset visited flag.  */\n+  for (gimple_stmt_iterator gsi = bb_vinfo->region_begin;\n+       gsi_stmt (gsi) != gsi_stmt (bb_vinfo->region_end); gsi_next (&gsi))\n+    gimple_set_visited  (gsi_stmt (gsi), false);\n+\n   /* Complete the target-specific cost calculation.  */\n   finish_cost (BB_VINFO_TARGET_COST_DATA (bb_vinfo), &vec_prologue_cost,\n \t       &vec_inside_cost, &vec_epilogue_cost);"}]}