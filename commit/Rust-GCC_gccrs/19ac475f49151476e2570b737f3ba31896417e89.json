{"sha": "19ac475f49151476e2570b737f3ba31896417e89", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTlhYzQ3NWY0OTE1MTQ3NmUyNTcwYjczN2YzYmEzMTg5NjQxN2U4OQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2015-01-22T20:44:25Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2015-01-22T20:44:25Z"}, "message": "* tsan/tsan_rtl.h: Cherry pick upstream r226829.\n\nFrom-SVN: r220013", "tree": {"sha": "5dd4922f6d93c5d0ca6c24bb3b1496e858656c85", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5dd4922f6d93c5d0ca6c24bb3b1496e858656c85"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/19ac475f49151476e2570b737f3ba31896417e89", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/19ac475f49151476e2570b737f3ba31896417e89", "html_url": "https://github.com/Rust-GCC/gccrs/commit/19ac475f49151476e2570b737f3ba31896417e89", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/19ac475f49151476e2570b737f3ba31896417e89/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a0d8720ab2a234f2a1cf65e17954944125ac0e02", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0d8720ab2a234f2a1cf65e17954944125ac0e02", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a0d8720ab2a234f2a1cf65e17954944125ac0e02"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "e3aa1ed68d2b8c9766ed9d0a3cfa6ba7c8532bc2", "filename": "libsanitizer/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19ac475f49151476e2570b737f3ba31896417e89/libsanitizer%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19ac475f49151476e2570b737f3ba31896417e89/libsanitizer%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2FChangeLog?ref=19ac475f49151476e2570b737f3ba31896417e89", "patch": "@@ -1,3 +1,7 @@\n+2015-01-22  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* tsan/tsan_rtl.h: Cherry pick upstream r226829.\n+\n 2015-01-21  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR sanitizer/64435"}, {"sha": "a5b88e0c358bd965d7c24531a13fcd89a30f6320", "filename": "libsanitizer/tsan/tsan_rtl.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19ac475f49151476e2570b737f3ba31896417e89/libsanitizer%2Ftsan%2Ftsan_rtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19ac475f49151476e2570b737f3ba31896417e89/libsanitizer%2Ftsan%2Ftsan_rtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Ftsan%2Ftsan_rtl.h?ref=19ac475f49151476e2570b737f3ba31896417e89", "patch": "@@ -679,7 +679,7 @@ void AcquireReleaseImpl(ThreadState *thr, uptr pc, SyncClock *c);\n // The trick is that the call preserves all registers and the compiler\n // does not treat it as a call.\n // If it does not work for you, use normal call.\n-#if TSAN_DEBUG == 0\n+#if TSAN_DEBUG == 0 && defined(__x86_64__)\n // The caller may not create the stack frame for itself at all,\n // so we create a reserve stack frame for it (1024b must be enough).\n #define HACKY_CALL(f) \\"}]}