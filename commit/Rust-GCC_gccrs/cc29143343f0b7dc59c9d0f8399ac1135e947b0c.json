{"sha": "cc29143343f0b7dc59c9d0f8399ac1135e947b0c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2MyOTE0MzM0M2YwYjdkYzU5YzlkMGY4Mzk5YWMxMTM1ZTk0N2IwYw==", "commit": {"author": {"name": "Finn Hakansson", "email": "finn@axis.com", "date": "1999-03-25T16:31:16Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1999-03-25T16:31:16Z"}, "message": "* loop.c (strength_reduce): Correct a comment.\n\nFrom-SVN: r25983", "tree": {"sha": "7eacfd507f08a29cd534e0fb8eb8d689122115e8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7eacfd507f08a29cd534e0fb8eb8d689122115e8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cc29143343f0b7dc59c9d0f8399ac1135e947b0c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc29143343f0b7dc59c9d0f8399ac1135e947b0c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cc29143343f0b7dc59c9d0f8399ac1135e947b0c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc29143343f0b7dc59c9d0f8399ac1135e947b0c/comments", "author": null, "committer": null, "parents": [{"sha": "cf38f48a33db6760662fb12716f87b3e3a9ac732", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf38f48a33db6760662fb12716f87b3e3a9ac732", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cf38f48a33db6760662fb12716f87b3e3a9ac732"}], "stats": {"total": 6, "additions": 4, "deletions": 2}, "files": [{"sha": "839469c9d04feed0f2d82bc26964b0eff924bd95", "filename": "gcc/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc29143343f0b7dc59c9d0f8399ac1135e947b0c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc29143343f0b7dc59c9d0f8399ac1135e947b0c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cc29143343f0b7dc59c9d0f8399ac1135e947b0c", "patch": "@@ -40,6 +40,8 @@ Thu Mar 25 10:05:56 1999  Richard Henderson  <rth@cygnus.com>\n \n Thu Mar 25 02:12:42 1999  Finn Hakansson  <finn@axis.com>\n \n+\t* loop.c (strength_reduce): Correct a comment.\n+\n         * rtl.h (MEM_COPY_ATTRIBUTES): Remove unnecessary ending backslash.\n \n Thu Mar 25 02:02:13 1999  Axel Thimm <Axel.Thimm@physik.fu-berlin.de>"}, {"sha": "7f3b51d03fe6e50ab54fcff44a4d833d974e35df", "filename": "gcc/loop.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc29143343f0b7dc59c9d0f8399ac1135e947b0c/gcc%2Floop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc29143343f0b7dc59c9d0f8399ac1135e947b0c/gcc%2Floop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop.c?ref=cc29143343f0b7dc59c9d0f8399ac1135e947b0c", "patch": "@@ -4149,10 +4149,10 @@ strength_reduce (scan_start, end, loop_top, insn_count,\n \t     this can't succeed if we already know that there is a jump\n \t     between v->insn and next->insn, yet next->always_executed is\n \t     set and next->maybe_multiple is cleared.  Such a combination\n-\t     implies that the jump destination is outseide the loop.\n+\t     implies that the jump destination is outside the loop.\n \t     If we want to make this check more sophisticated, we should\n \t     check each branch between v->insn and next->insn individually\n-\t     to see if it the biv is dead at its destination.  */\n+\t     to see if the biv is dead at its destination.  */\n \n \t  if (uid_luid[REGNO_LAST_UID (bl->regno)] < INSN_LUID (loop_end)\n \t      && bl->init_insn"}]}