{"sha": "3d5c883bbf7334aa4a9edd8ab7b0057a02f11f4b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2Q1Yzg4M2JiZjczMzRhYTRhOWVkZDhhYjdiMDA1N2EwMmYxMWY0Yg==", "commit": {"author": {"name": "Stan Cox", "email": "coxs@gnu.org", "date": "1996-08-09T20:51:08Z"}, "committer": {"name": "Stan Cox", "email": "coxs@gnu.org", "date": "1996-08-09T20:51:08Z"}, "message": "(gen_stdcall_suffix): Round parameter size up to\n\tPARM_BOUNDARY.\n\nFrom-SVN: r12608", "tree": {"sha": "f922a50eb0ca1c382a20ff1a3a2cd66a42a22130", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f922a50eb0ca1c382a20ff1a3a2cd66a42a22130"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3d5c883bbf7334aa4a9edd8ab7b0057a02f11f4b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d5c883bbf7334aa4a9edd8ab7b0057a02f11f4b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3d5c883bbf7334aa4a9edd8ab7b0057a02f11f4b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d5c883bbf7334aa4a9edd8ab7b0057a02f11f4b/comments", "author": null, "committer": null, "parents": [{"sha": "a1a478c5fec79ed87ecbb84463a0163c2eecd28c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1a478c5fec79ed87ecbb84463a0163c2eecd28c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a1a478c5fec79ed87ecbb84463a0163c2eecd28c"}], "stats": {"total": 18, "additions": 12, "deletions": 6}, "files": [{"sha": "9920b8d4f8da7967f7c49cf97babef48999e6bb0", "filename": "gcc/config/i386/winnt.c", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d5c883bbf7334aa4a9edd8ab7b0057a02f11f4b/gcc%2Fconfig%2Fi386%2Fwinnt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d5c883bbf7334aa4a9edd8ab7b0057a02f11f4b/gcc%2Fconfig%2Fi386%2Fwinnt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fwinnt.c?ref=3d5c883bbf7334aa4a9edd8ab7b0057a02f11f4b", "patch": "@@ -44,13 +44,19 @@ gen_stdcall_suffix (decl)\n     if (TREE_VALUE (tree_last (TYPE_ARG_TYPES (TREE_TYPE (decl)))) \n         == void_type_node)\n       {\n-        tree formal_type = TYPE_ARG_TYPES (TREE_TYPE (decl));\n+\ttree formal_type = TYPE_ARG_TYPES (TREE_TYPE (decl));\n \n-        while (TREE_VALUE (formal_type) != void_type_node)\n-          {\n-            total += TREE_INT_CST_LOW (TYPE_SIZE (TREE_VALUE (formal_type)));\n-            formal_type = TREE_CHAIN (formal_type);\n-          }\n+\twhile (TREE_VALUE (formal_type) != void_type_node)\n+\t  {\n+\t    int parm_size\n+\t      = TREE_INT_CST_LOW (TYPE_SIZE (TREE_VALUE (formal_type)));\n+\t    /* Must round up to include padding.  This is done the same\n+\t       way as in store_one_arg.  */\n+\t    parm_size = ((parm_size + PARM_BOUNDARY - 1)\n+\t\t\t / PARM_BOUNDARY * PARM_BOUNDARY);\n+\t    total += parm_size;\n+\t    formal_type = TREE_CHAIN (formal_type);\n+\t  }\n       }\n \n   newsym = xmalloc (strlen (asmname) + 10);"}]}