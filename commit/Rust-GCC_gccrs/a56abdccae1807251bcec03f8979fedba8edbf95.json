{"sha": "a56abdccae1807251bcec03f8979fedba8edbf95", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTU2YWJkY2NhZTE4MDcyNTFiY2VjMDNmODk3OWZlZGJhOGVkYmY5NQ==", "commit": {"author": {"name": "Manuel L\u00f3pez-Ib\u00e1\u00f1ez", "email": "manu@gcc.gnu.org", "date": "2014-10-28T21:56:24Z"}, "committer": {"name": "Manuel L\u00f3pez-Ib\u00e1\u00f1ez", "email": "manu@gcc.gnu.org", "date": "2014-10-28T21:56:24Z"}, "message": "re PR fortran/44054 (Handle -Werror, -Werror=, -fdiagnostics-show-option, !GCC$ diagnostic (pragmas) and color)\n\n2014-10-28  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n\n\tPR fortran/44054\n\t* gfortran.h (gfc_warning_cmdline): Rename as gfc_warning_now_2.\n\t(gfc_error_cmdline): Rename as gfc_error_now_2.\n\t* error.c (gfc_diagnostic_build_locus_prefix): Remove trailing space.\n\t(gfc_diagnostic_starter): Add space between locus and prefix.\n\t(gfc_warning_now_2): Renamed from gfc_warning_cmdline.\n\t(gfc_error_now_2): Renamed from gfc_error_cmdline.\n\t* scanner.c (add_path_to_list): Use gfc_warning_now_2.\n\t(load_line): Likewise.\n\t(load_file): Likewise.\n\t* options.c (gfc_post_options): Update all renamed functions.\n\nFrom-SVN: r216812", "tree": {"sha": "ac382e936a957c83179b3ff8865871b3b99a5790", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ac382e936a957c83179b3ff8865871b3b99a5790"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a56abdccae1807251bcec03f8979fedba8edbf95", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a56abdccae1807251bcec03f8979fedba8edbf95", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a56abdccae1807251bcec03f8979fedba8edbf95", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a56abdccae1807251bcec03f8979fedba8edbf95/comments", "author": null, "committer": null, "parents": [{"sha": "99630555c2224e544a11928dcbc89e4a3f5ff1e7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99630555c2224e544a11928dcbc89e4a3f5ff1e7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/99630555c2224e544a11928dcbc89e4a3f5ff1e7"}], "stats": {"total": 95, "additions": 54, "deletions": 41}, "files": [{"sha": "20de711b4b45f01f4485e692c7ef0618635c30de", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a56abdccae1807251bcec03f8979fedba8edbf95/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a56abdccae1807251bcec03f8979fedba8edbf95/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=a56abdccae1807251bcec03f8979fedba8edbf95", "patch": "@@ -1,3 +1,17 @@\n+2014-10-28  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n+\n+\tPR fortran/44054\n+\t* gfortran.h (gfc_warning_cmdline): Rename as gfc_warning_now_2.\n+\t(gfc_error_cmdline): Rename as gfc_error_now_2.\n+\t* error.c (gfc_diagnostic_build_locus_prefix): Remove trailing space.\n+\t(gfc_diagnostic_starter): Add space between locus and prefix.\n+\t(gfc_warning_now_2): Renamed from gfc_warning_cmdline.\n+\t(gfc_error_now_2): Renamed from gfc_error_cmdline.\n+\t* scanner.c (add_path_to_list): Use gfc_warning_now_2.\n+\t(load_line): Likewise.\n+\t(load_file): Likewise.\n+\t* options.c (gfc_post_options): Update all renamed functions.\n+\n 2014-10-28  Andrew MacLeod  <amacleod@redhat.com>\n \n \t* f95-lang.c: Adjust include files."}, {"sha": "2116f56ba472167ba5737f2ce8ac34e331e8a5d9", "filename": "gcc/fortran/error.c", "status": "modified", "additions": 11, "deletions": 12, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a56abdccae1807251bcec03f8979fedba8edbf95/gcc%2Ffortran%2Ferror.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a56abdccae1807251bcec03f8979fedba8edbf95/gcc%2Ffortran%2Ferror.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ferror.c?ref=a56abdccae1807251bcec03f8979fedba8edbf95", "patch": "@@ -1004,13 +1004,13 @@ gfc_diagnostic_build_locus_prefix (diagnostic_context *context,\n     s.column = diagnostic->override_column;\n \n   return (s.file == NULL\n-\t  ? build_message_string (\"%s%s:%s \", locus_cs, progname, locus_ce )\n+\t  ? build_message_string (\"%s%s:%s\", locus_cs, progname, locus_ce )\n \t  : !strcmp (s.file, N_(\"<built-in>\"))\n-\t  ? build_message_string (\"%s%s:%s \", locus_cs, s.file, locus_ce)\n+\t  ? build_message_string (\"%s%s:%s\", locus_cs, s.file, locus_ce)\n \t  : context->show_column\n-\t  ? build_message_string (\"%s%s:%d:%d:%s \", locus_cs, s.file, s.line,\n+\t  ? build_message_string (\"%s%s:%d:%d:%s\", locus_cs, s.file, s.line,\n \t\t\t\t  s.column, locus_ce)\n-\t  : build_message_string (\"%s%s:%d:%s \", locus_cs, s.file, s.line, locus_ce));\n+\t  : build_message_string (\"%s%s:%d:%s\", locus_cs, s.file, s.line, locus_ce));\n }\n \n static void\n@@ -1038,7 +1038,7 @@ gfc_diagnostic_starter (diagnostic_context *context,\n     {\n       /* Otherwise, start again.  */\n       pp_clear_output_area(context->printer);\n-      pp_set_prefix (context->printer, concat (locus_prefix, prefix, NULL));\n+      pp_set_prefix (context->printer, concat (locus_prefix, \" \", prefix, NULL));\n       free (prefix);\n     }\n   free (locus_prefix);\n@@ -1052,10 +1052,10 @@ gfc_diagnostic_finalizer (diagnostic_context *context,\n   pp_newline_and_flush (context->printer);\n }\n \n-/* Give a warning about the command-line.  */\n+/* Immediate warning (i.e. do not buffer the warning).  */\n \n bool\n-gfc_warning_cmdline (int opt, const char *gmsgid, ...)\n+gfc_warning_now_2 (int opt, const char *gmsgid, ...)\n {\n   va_list argp;\n   diagnostic_info diagnostic;\n@@ -1070,11 +1070,10 @@ gfc_warning_cmdline (int opt, const char *gmsgid, ...)\n   return ret;\n }\n \n-\n-/* Give a warning about the command-line.  */\n+/* Immediate warning (i.e. do not buffer the warning).  */\n \n bool\n-gfc_warning_cmdline (const char *gmsgid, ...)\n+gfc_warning_now_2 (const char *gmsgid, ...)\n {\n   va_list argp;\n   diagnostic_info diagnostic;\n@@ -1089,10 +1088,10 @@ gfc_warning_cmdline (const char *gmsgid, ...)\n }\n \n \n-/* Give an error about the command-line.  */\n+/* Immediate error (i.e. do not buffer).  */\n \n void\n-gfc_error_cmdline (const char *gmsgid, ...)\n+gfc_error_now_2 (const char *gmsgid, ...)\n {\n   va_list argp;\n   diagnostic_info diagnostic;"}, {"sha": "00bc8400e5a5f6232c6b306ec4b37568a930a68b", "filename": "gcc/fortran/gfortran.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a56abdccae1807251bcec03f8979fedba8edbf95/gcc%2Ffortran%2Fgfortran.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a56abdccae1807251bcec03f8979fedba8edbf95/gcc%2Ffortran%2Fgfortran.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fgfortran.h?ref=a56abdccae1807251bcec03f8979fedba8edbf95", "patch": "@@ -2698,15 +2698,15 @@ const char *gfc_print_wide_char (gfc_char_t);\n \n void gfc_warning (const char *, ...) ATTRIBUTE_GCC_GFC(1,2);\n void gfc_warning_now (const char *, ...) ATTRIBUTE_GCC_GFC(1,2);\n-bool gfc_warning_cmdline (const char *gmsgid, ...) ATTRIBUTE_GCC_GFC(1,2);\n-bool gfc_warning_cmdline (int opt, const char *gmsgid, ...) ATTRIBUTE_GCC_GFC(2,3);\n+bool gfc_warning_now_2 (const char *gmsgid, ...) ATTRIBUTE_GCC_GFC(1,2);\n+bool gfc_warning_now_2 (int opt, const char *gmsgid, ...) ATTRIBUTE_GCC_GFC(2,3);\n \n void gfc_clear_warning (void);\n void gfc_warning_check (void);\n \n void gfc_error (const char *, ...) ATTRIBUTE_GCC_GFC(1,2);\n-void gfc_error_cmdline (const char *gmsgid, ...) ATTRIBUTE_GCC_GFC(1,2);\n void gfc_error_now (const char *, ...) ATTRIBUTE_GCC_GFC(1,2);\n+void gfc_error_now_2 (const char *gmsgid, ...) ATTRIBUTE_GCC_GFC(1,2);\n void gfc_fatal_error (const char *, ...) ATTRIBUTE_NORETURN ATTRIBUTE_GCC_GFC(1,2);\n void gfc_internal_error (const char *, ...) ATTRIBUTE_NORETURN ATTRIBUTE_GCC_GFC(1,2);\n void gfc_clear_error (void);"}, {"sha": "8bc8f94a59d786f050e6d7988a67cde2dcfa0ad2", "filename": "gcc/fortran/options.c", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a56abdccae1807251bcec03f8979fedba8edbf95/gcc%2Ffortran%2Foptions.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a56abdccae1807251bcec03f8979fedba8edbf95/gcc%2Ffortran%2Foptions.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Foptions.c?ref=a56abdccae1807251bcec03f8979fedba8edbf95", "patch": "@@ -362,8 +362,8 @@ gfc_post_options (const char **pfilename)\n       if (gfc_current_form == FORM_UNKNOWN)\n \t{\n \t  gfc_current_form = FORM_FREE;\n-\t  gfc_warning_cmdline (\"Reading file %qs as free form\", \n-\t\t\t       (filename[0] == '\\0') ? \"<stdin>\" : filename);\n+\t  gfc_warning_now_2 (\"Reading file %qs as free form\", \n+\t\t\t     (filename[0] == '\\0') ? \"<stdin>\" : filename);\n \t}\n     }\n \n@@ -372,10 +372,10 @@ gfc_post_options (const char **pfilename)\n   if (gfc_current_form == FORM_FREE)\n     {\n       if (gfc_option.flag_d_lines == 0)\n-\tgfc_warning_cmdline (\"%<-fd-lines-as-comments%> has no effect \"\n-\t\t\t     \"in free form\");\n+\tgfc_warning_now_2 (\"%<-fd-lines-as-comments%> has no effect \"\n+\t\t\t   \"in free form\");\n       else if (gfc_option.flag_d_lines == 1)\n-\tgfc_warning_cmdline (\"%<-fd-lines-as-code%> has no effect in free form\");\n+\tgfc_warning_now_2 (\"%<-fd-lines-as-code%> has no effect in free form\");\n     }\n \n   /* If -pedantic, warn about the use of GNU extensions.  */\n@@ -393,21 +393,21 @@ gfc_post_options (const char **pfilename)\n \n   if (!gfc_option.flag_automatic && gfc_option.flag_max_stack_var_size != -2\n       && gfc_option.flag_max_stack_var_size != 0)\n-    gfc_warning_cmdline (\"Flag %<-fno-automatic%> overwrites %<-fmax-stack-var-size=%d%>\",\n-\t\t\t gfc_option.flag_max_stack_var_size);\n+    gfc_warning_now_2 (\"Flag %<-fno-automatic%> overwrites %<-fmax-stack-var-size=%d%>\",\n+\t\t       gfc_option.flag_max_stack_var_size);\n   else if (!gfc_option.flag_automatic && gfc_option.flag_recursive)\n-    gfc_warning_cmdline (\"Flag %<-fno-automatic%> overwrites %<-frecursive%>\");\n+    gfc_warning_now_2 (\"Flag %<-fno-automatic%> overwrites %<-frecursive%>\");\n   else if (!gfc_option.flag_automatic && gfc_option.gfc_flag_openmp)\n-    gfc_warning_cmdline (\"Flag %<-fno-automatic%> overwrites %<-frecursive%> implied by \"\n-\t\t\t \"%<-fopenmp%>\");\n+    gfc_warning_now_2 (\"Flag %<-fno-automatic%> overwrites %<-frecursive%> implied by \"\n+\t\t       \"%<-fopenmp%>\");\n   else if (gfc_option.flag_max_stack_var_size != -2\n \t   && gfc_option.flag_recursive)\n-    gfc_warning_cmdline (\"Flag %<-frecursive%> overwrites %<-fmax-stack-var-size=%d%>\",\n-\t\t\t gfc_option.flag_max_stack_var_size);\n+    gfc_warning_now_2 (\"Flag %<-frecursive%> overwrites %<-fmax-stack-var-size=%d%>\",\n+\t\t       gfc_option.flag_max_stack_var_size);\n   else if (gfc_option.flag_max_stack_var_size != -2\n \t   && gfc_option.gfc_flag_openmp)\n-    gfc_warning_cmdline (\"Flag %<-fmax-stack-var-size=%d%> overwrites %<-frecursive%> \"\n-\t\t\t \"implied by %<-fopenmp%>\", \n+    gfc_warning_now_2 (\"Flag %<-fmax-stack-var-size=%d%> overwrites %<-frecursive%> \"\n+\t\t       \"implied by %<-fopenmp%>\", \n \t\t     gfc_option.flag_max_stack_var_size);\n \n   /* Implement -frecursive as -fmax-stack-var-size=-1.  */"}, {"sha": "2c0d4c3cf2108302fdd767254f2dc5b3f24e9ac5", "filename": "gcc/fortran/scanner.c", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a56abdccae1807251bcec03f8979fedba8edbf95/gcc%2Ffortran%2Fscanner.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a56abdccae1807251bcec03f8979fedba8edbf95/gcc%2Ffortran%2Fscanner.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fscanner.c?ref=a56abdccae1807251bcec03f8979fedba8edbf95", "patch": "@@ -324,16 +324,16 @@ add_path_to_list (gfc_directorylist **list, const char *path,\n   if (stat (q, &st))\n     {\n       if (errno != ENOENT)\n-\tgfc_warning_cmdline (\"Include directory %qs: %s\", path,\n-\t\t\t     xstrerror(errno));\n+\tgfc_warning_now_2 (\"Include directory %qs: %s\", path,\n+\t\t\t   xstrerror(errno));\n       else if (warn)\n-\tgfc_warning_cmdline (OPT_Wmissing_include_dirs,\n-\t\t\t     \"Nonexistent include directory %qs\", path);\n+\tgfc_warning_now_2 (OPT_Wmissing_include_dirs,\n+\t\t\t   \"Nonexistent include directory %qs\", path);\n       return;\n     }\n   else if (!S_ISDIR (st.st_mode))\n     {\n-      gfc_warning_cmdline (\"%qs is not a directory\", path);\n+      gfc_warning_now_2 (\"%qs is not a directory\", path);\n       return;\n     }\n \n@@ -1476,11 +1476,11 @@ load_line (FILE *input, gfc_char_t **pbuf, int *pbuflen, const int *first_char)\n \t      && !seen_printable && seen_ampersand)\n \t    {\n \t      if (pedantic)\n-\t\tgfc_error_now (\"'&' not allowed by itself in line %d\",\n-\t\t\t       current_line);\n+\t\tgfc_error_now_2 (\"%<&%> not allowed by itself in line %d\",\n+\t\t\t\t   current_line);\n \t      else\n-\t\tgfc_warning_now (\"'&' not allowed by itself in line %d\",\n-\t\t\t\t current_line);\n+\t\tgfc_warning_now_2 (\"%<&%> not allowed by itself in line %d\",\n+\t\t\t\t     current_line);\n \t    }\n \t  break;\n \t}\n@@ -1538,8 +1538,8 @@ load_line (FILE *input, gfc_char_t **pbuf, int *pbuflen, const int *first_char)\n \t      && current_line != linenum)\n \t    {\n \t      linenum = current_line;\n-\t      gfc_warning_now (\"Nonconforming tab character in column %d \"\n-\t\t\t       \"of line %d\", i+1, linenum);\n+\t      gfc_warning_now_2 (\"Nonconforming tab character in column %d \"\n+\t\t\t\t   \"of line %d\", i+1, linenum);\n \t    }\n \n \t  while (i < 6)\n@@ -1922,7 +1922,7 @@ load_file (const char *realfilename, const char *displayedname, bool initial)\n \tinput = gfc_open_file (realfilename);\n       if (input == NULL)\n \t{\n-\t  gfc_error_cmdline (\"Can't open file %qs\", filename);\n+\t  gfc_error_now_2 (\"Can't open file %qs\", filename);\n \t  return false;\n \t}\n     }"}]}