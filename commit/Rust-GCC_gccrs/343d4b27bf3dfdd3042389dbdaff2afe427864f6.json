{"sha": "343d4b27bf3dfdd3042389dbdaff2afe427864f6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzQzZDRiMjdiZjNkZmRkMzA0MjM4OWRiZGFmZjJhZmU0Mjc4NjRmNg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2006-08-17T11:52:26Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2006-08-17T11:52:26Z"}, "message": "re PR c/28744 (externally_visible attribute not effective with prior declaration of symbol.)\n\n\tPR c/28744\n\t* cgraph.h (struct cgraph_node): Remove externally_visible\n\tbitfield.\n\t* cgraphunit.c (process_function_and_variable_attributes): Set\n\tlocal.externally_visible rather than externally_visible.\n\n\tPR c/28744\n\t* c-common.c (handle_externally_visible_attribute): First look\n\tat TREE_CODE and only if it is function or var decl, check for\n\tnon-public objects.  Don't warn for DECL_EXTERNAL.\n\t* cgraphunit.c (process_function_and_variable_attributes): Warn\n\tif externally_visible attribute is used on non-public object.\n\n\t* gcc.dg/attr-externally-visible-1.c: New test.\n\t* gcc.dg/attr-externally-visible-2.c: New test.\n\t* g++.dg/parse/attr-externally-visible-1.C: New test.\n\t* g++.dg/parse/attr-externally-visible-2.C: New test.\n\nFrom-SVN: r116222", "tree": {"sha": "1079f5fa46aa27a5d4a1d75e9246bdc01981cd50", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1079f5fa46aa27a5d4a1d75e9246bdc01981cd50"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/343d4b27bf3dfdd3042389dbdaff2afe427864f6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/343d4b27bf3dfdd3042389dbdaff2afe427864f6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/343d4b27bf3dfdd3042389dbdaff2afe427864f6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/343d4b27bf3dfdd3042389dbdaff2afe427864f6/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7ffaaddcdaf19adac105e8481e83ef32c059b641", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ffaaddcdaf19adac105e8481e83ef32c059b641", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7ffaaddcdaf19adac105e8481e83ef32c059b641"}], "stats": {"total": 234, "additions": 218, "deletions": 16}, "files": [{"sha": "61d5fe0d7e88d7319d07d5d88204dec5f67ccab3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/343d4b27bf3dfdd3042389dbdaff2afe427864f6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/343d4b27bf3dfdd3042389dbdaff2afe427864f6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=343d4b27bf3dfdd3042389dbdaff2afe427864f6", "patch": "@@ -1,3 +1,18 @@\n+2006-08-17  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c/28744\n+\t* cgraph.h (struct cgraph_node): Remove externally_visible\n+\tbitfield.\n+\t* cgraphunit.c (process_function_and_variable_attributes): Set\n+\tlocal.externally_visible rather than externally_visible.\n+\n+\tPR c/28744\n+\t* c-common.c (handle_externally_visible_attribute): First look\n+\tat TREE_CODE and only if it is function or var decl, check for\n+\tnon-public objects.  Don't warn for DECL_EXTERNAL.\n+\t* cgraphunit.c (process_function_and_variable_attributes): Warn\n+\tif externally_visible attribute is used on non-public object.\n+\n 2006-08-17  Jan Hubicka  <jh@suse.cz>\n \n \tPR tree-optimization/27865"}, {"sha": "a6b329997b4d4aa23aac4d258b139f3c88275432", "filename": "gcc/c-common.c", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/343d4b27bf3dfdd3042389dbdaff2afe427864f6/gcc%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/343d4b27bf3dfdd3042389dbdaff2afe427864f6/gcc%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.c?ref=343d4b27bf3dfdd3042389dbdaff2afe427864f6", "patch": "@@ -4301,16 +4301,16 @@ handle_externally_visible_attribute (tree *pnode, tree name,\n {\n   tree node = *pnode;\n \n-  if ((!TREE_STATIC (node) && TREE_CODE (node) != FUNCTION_DECL)\n-      || !TREE_PUBLIC (node))\n+  if (TREE_CODE (node) == FUNCTION_DECL || TREE_CODE (node) == VAR_DECL)\n     {\n-      warning (OPT_Wattributes,\n-\t       \"%qE attribute have effect only on public objects\", name);\n-      *no_add_attrs = true;\n+      if ((!TREE_STATIC (node) && TREE_CODE (node) != FUNCTION_DECL\n+\t   && !DECL_EXTERNAL (node)) || !TREE_PUBLIC (node))\n+\t{\n+\t  warning (OPT_Wattributes,\n+\t\t   \"%qE attribute have effect only on public objects\", name);\n+\t  *no_add_attrs = true;\n+\t}\n     }\n-  else if (TREE_CODE (node) == FUNCTION_DECL\n-\t   || TREE_CODE (node) == VAR_DECL)\n-    ;\n   else\n     {\n       warning (OPT_Wattributes, \"%qE attribute ignored\", name);"}, {"sha": "7b69611ddcd00e94eb9b6f32f7eb82a78b62f4f4", "filename": "gcc/cgraph.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/343d4b27bf3dfdd3042389dbdaff2afe427864f6/gcc%2Fcgraph.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/343d4b27bf3dfdd3042389dbdaff2afe427864f6/gcc%2Fcgraph.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraph.h?ref=343d4b27bf3dfdd3042389dbdaff2afe427864f6", "patch": "@@ -160,8 +160,6 @@ struct cgraph_node GTY((chain_next (\"%h.next\"), chain_prev (\"%h.previous\")))\n   unsigned analyzed : 1;\n   /* Set when function is scheduled to be assembled.  */\n   unsigned output : 1;\n-  /* Set when function is visible by other units.  */\n-  unsigned externally_visible : 1;\n   /* Set for aliases once they got through assemble_alias.  */\n   unsigned alias : 1;\n "}, {"sha": "64b3891df7bcd16aa3489a5b386136cc4e51fd56", "filename": "gcc/cgraphunit.c", "status": "modified", "additions": 20, "deletions": 6, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/343d4b27bf3dfdd3042389dbdaff2afe427864f6/gcc%2Fcgraphunit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/343d4b27bf3dfdd3042389dbdaff2afe427864f6/gcc%2Fcgraphunit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraphunit.c?ref=343d4b27bf3dfdd3042389dbdaff2afe427864f6", "patch": "@@ -985,9 +985,16 @@ process_function_and_variable_attributes (struct cgraph_node *first,\n \t}\n       if (lookup_attribute (\"externally_visible\", DECL_ATTRIBUTES (decl)))\n \t{\n-\t  if (node->local.finalized)\n-\t    cgraph_mark_needed_node (node);\n-\t  node->externally_visible = true;\n+\t  if (! TREE_PUBLIC (node->decl))\n+\t    warning (OPT_Wattributes,\n+\t\t     \"%J%<externally_visible%> attribute have effect only on public objects\",\n+\t\t     node->decl);\n+\t  else\n+\t    {\n+\t      if (node->local.finalized)\n+\t\tcgraph_mark_needed_node (node);\n+\t      node->local.externally_visible = true;\n+\t    }\n \t}\n     }\n   for (vnode = cgraph_varpool_nodes; vnode != first_var; vnode = vnode->next)\n@@ -1001,9 +1008,16 @@ process_function_and_variable_attributes (struct cgraph_node *first,\n \t}\n       if (lookup_attribute (\"externally_visible\", DECL_ATTRIBUTES (decl)))\n \t{\n-\t  if (vnode->finalized)\n-\t    cgraph_varpool_mark_needed_node (vnode);\n-\t  vnode->externally_visible = true;\n+\t  if (! TREE_PUBLIC (vnode->decl))\n+\t    warning (OPT_Wattributes,\n+\t\t     \"%J%<externally_visible%> attribute have effect only on public objects\",\n+\t\t     vnode->decl);\n+\t  else\n+\t    {\n+\t      if (vnode->finalized)\n+\t\tcgraph_varpool_mark_needed_node (vnode);\n+\t      vnode->externally_visible = true;\n+\t    }\n \t}\n     }\n }"}, {"sha": "3c65908443f98963d00aa7a3c30c8efd62b30360", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/343d4b27bf3dfdd3042389dbdaff2afe427864f6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/343d4b27bf3dfdd3042389dbdaff2afe427864f6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=343d4b27bf3dfdd3042389dbdaff2afe427864f6", "patch": "@@ -1,3 +1,11 @@\n+2006-08-17  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c/28744\n+\t* gcc.dg/attr-externally-visible-1.c: New test.\n+\t* gcc.dg/attr-externally-visible-2.c: New test.\n+\t* g++.dg/parse/attr-externally-visible-1.C: New test.\n+\t* g++.dg/parse/attr-externally-visible-2.C: New test.\n+\n 2006-08-17  Volker Reichelt  <reichelt@igpm.rwth-aachen.de>\n \n \tPR c++/28606"}, {"sha": "9016bc4225afe0b7da2d8f21329da51578857528", "filename": "gcc/testsuite/g++.dg/parse/attr-externally-visible-1.C", "status": "added", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/343d4b27bf3dfdd3042389dbdaff2afe427864f6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fattr-externally-visible-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/343d4b27bf3dfdd3042389dbdaff2afe427864f6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fattr-externally-visible-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fattr-externally-visible-1.C?ref=343d4b27bf3dfdd3042389dbdaff2afe427864f6", "patch": "@@ -0,0 +1,48 @@\n+// { dg-do compile }\n+// { dg-options \"-O3 -fwhole-program\" }\n+// { dg-final { scan-assembler \"foo1\" } }\n+// { dg-final { scan-assembler \"foo2\" } }\n+// { dg-final { scan-assembler \"foo3\" } }\n+// { dg-final { scan-assembler \"foo4\" } }\n+// { dg-final { scan-assembler \"foo5\" } }\n+// { dg-final { scan-assembler-not \"foo6\" } }\n+// { dg-final { scan-assembler \"bar1\" } }\n+// { dg-final { scan-assembler \"bar2\" } }\n+// { dg-final { scan-assembler \"bar3\" } }\n+// { dg-final { scan-assembler \"bar4\" } }\n+// { dg-final { scan-assembler \"bar5\" } }\n+// { dg-final { scan-assembler-not \"bar6\" } }\n+\n+extern void foo1 (void) __attribute__((externally_visible));\n+void foo1 (void) { }\n+\n+extern void foo2 (void) __attribute__((externally_visible));\n+__attribute__((externally_visible)) void foo2 (void) { }\n+\n+extern void foo3 (void);\n+__attribute__((externally_visible)) void foo3 (void) { }\n+\n+__attribute__((externally_visible)) void foo4 (void) { }\n+\n+void foo5 (void) { }\n+extern void foo5 (void) __attribute__((externally_visible));\n+\n+void foo6 (void) { }\n+\n+extern char *bar1 __attribute__((externally_visible));\n+char *bar1;\n+\n+extern char *bar2 __attribute__((externally_visible));\n+char *bar2 __attribute__((externally_visible));\n+\n+extern char *bar3;\n+char *bar3 __attribute__((externally_visible));\n+\n+char *bar4 __attribute__((externally_visible));\n+\n+char *bar5;\n+extern char *bar5 __attribute__((externally_visible));\n+\n+char *bar6;\n+\n+int main (void) { }"}, {"sha": "d7feaabb2d11274fffdab963cfea0e9cd8877383", "filename": "gcc/testsuite/g++.dg/parse/attr-externally-visible-2.C", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/343d4b27bf3dfdd3042389dbdaff2afe427864f6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fattr-externally-visible-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/343d4b27bf3dfdd3042389dbdaff2afe427864f6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fattr-externally-visible-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fattr-externally-visible-2.C?ref=343d4b27bf3dfdd3042389dbdaff2afe427864f6", "patch": "@@ -0,0 +1,38 @@\n+// { dg-do compile }\n+// { dg-options \"-O -fwhole-program\" }\n+\n+static void foo1 (void) { }\t\t\t\t\t// { dg-warning \"have effect only on public\" }\n+extern void foo1 (void) __attribute__((externally_visible));\n+\n+struct C\n+{\n+  __attribute__((externally_visible)) void foo3 (void) { }\n+};\n+\n+__attribute__((externally_visible)) static void foo3 (void) { }\t// { dg-warning \"have effect only on public\" }\n+\n+static int bar1;\n+extern int bar1 __attribute__((externally_visible));\t\t// { dg-warning \"have effect only on public\" }\n+\n+static int bar2 __attribute__((externally_visible));\t\t// { dg-warning \"have effect only on public\" }\n+\n+void fn1 (void)\n+{\n+  static int bar3 __attribute__((externally_visible));\t\t// { dg-warning \"have effect only on public\" }\n+}\n+\n+void fn2 (void)\n+{\n+  int bar4 __attribute__((externally_visible));\t\t\t// { dg-warning \"have effect only on public\" }\n+}\n+\n+struct A\n+{\n+} __attribute__((externally_visible));\t\t\t\t// { dg-warning \"does not apply to types\" }\n+\n+typedef int B __attribute__((externally_visible));\t\t// { dg-warning \"attribute ignored\" }\n+\n+struct D\n+{\n+  static int d __attribute__((externally_visible));\n+};"}, {"sha": "e1db6923a4843456bd2aca489e0790dacb570e41", "filename": "gcc/testsuite/gcc.dg/attr-externally-visible-1.c", "status": "added", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/343d4b27bf3dfdd3042389dbdaff2afe427864f6/gcc%2Ftestsuite%2Fgcc.dg%2Fattr-externally-visible-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/343d4b27bf3dfdd3042389dbdaff2afe427864f6/gcc%2Ftestsuite%2Fgcc.dg%2Fattr-externally-visible-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fattr-externally-visible-1.c?ref=343d4b27bf3dfdd3042389dbdaff2afe427864f6", "patch": "@@ -0,0 +1,48 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -fwhole-program\" } */\n+/* { dg-final { scan-assembler \"foo1\" } } */\n+/* { dg-final { scan-assembler \"foo2\" } } */\n+/* { dg-final { scan-assembler \"foo3\" } } */\n+/* { dg-final { scan-assembler \"foo4\" } } */\n+/* { dg-final { scan-assembler \"foo5\" } } */\n+/* { dg-final { scan-assembler-not \"foo6\" } } */\n+/* { dg-final { scan-assembler \"bar1\" } } */\n+/* { dg-final { scan-assembler \"bar2\" } } */\n+/* { dg-final { scan-assembler \"bar3\" } } */\n+/* { dg-final { scan-assembler \"bar4\" } } */\n+/* { dg-final { scan-assembler \"bar5\" } } */\n+/* { dg-final { scan-assembler-not \"bar6\" } } */\n+\n+extern void foo1 (void) __attribute__((externally_visible));\n+void foo1 (void) { }\n+\n+extern void foo2 (void) __attribute__((externally_visible));\n+__attribute__((externally_visible)) void foo2 (void) { }\n+\n+extern void foo3 (void);\n+__attribute__((externally_visible)) void foo3 (void) { }\n+\n+__attribute__((externally_visible)) void foo4 (void) { }\n+\n+void foo5 (void) { }\n+extern void foo5 (void) __attribute__((externally_visible));\n+\n+void foo6 (void) { }\n+\n+extern char *bar1 __attribute__((externally_visible));\n+char *bar1;\n+\n+extern char *bar2 __attribute__((externally_visible));\n+char *bar2 __attribute__((externally_visible));\n+\n+extern char *bar3;\n+char *bar3 __attribute__((externally_visible));\n+\n+char *bar4 __attribute__((externally_visible));\n+\n+char *bar5;\n+extern char *bar5 __attribute__((externally_visible));\n+\n+char *bar6;\n+\n+int main (void) { }"}, {"sha": "0a925bab3d94ec59d8b7154a32c9174a75cbd1c8", "filename": "gcc/testsuite/gcc.dg/attr-externally-visible-2.c", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/343d4b27bf3dfdd3042389dbdaff2afe427864f6/gcc%2Ftestsuite%2Fgcc.dg%2Fattr-externally-visible-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/343d4b27bf3dfdd3042389dbdaff2afe427864f6/gcc%2Ftestsuite%2Fgcc.dg%2Fattr-externally-visible-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fattr-externally-visible-2.c?ref=343d4b27bf3dfdd3042389dbdaff2afe427864f6", "patch": "@@ -0,0 +1,33 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O -fwhole-program\" } */\n+\n+static void foo1 (void) { }\t\t\t\t\t/* { dg-warning \"have effect only on public\" } */\n+extern void foo1 (void) __attribute__((externally_visible));\n+\n+void foo2 (void)\n+{\n+  __attribute__((externally_visible)) void foo3 (void) { }\t/* { dg-warning \"have effect only on public\" } */\n+}\n+\n+__attribute__((externally_visible)) static void foo3 (void) { }\t/* { dg-warning \"have effect only on public\" } */\n+\n+static int bar1;\n+extern int bar1 __attribute__((externally_visible));\t\t/* { dg-warning \"have effect only on public\" } */\n+\n+static int bar2 __attribute__((externally_visible));\t\t/* { dg-warning \"have effect only on public\" } */\n+\n+void fn1 (void)\n+{\n+  static int bar3 __attribute__((externally_visible));\t\t/* { dg-warning \"have effect only on public\" } */\n+}\n+\n+void fn2 (void)\n+{\n+  int bar4 __attribute__((externally_visible));\t\t\t/* { dg-warning \"have effect only on public\" } */\n+}\n+\n+struct A\n+{\n+} __attribute__((externally_visible));\t\t\t\t/* { dg-warning \"does not apply to types\" } */\n+\n+typedef int B __attribute__((externally_visible));\t\t/* { dg-warning \"attribute ignored\" } */"}]}