{"sha": "b12e4c429258129df86a23dbc1143f0e48f6ba53", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjEyZTRjNDI5MjU4MTI5ZGY4NmEyM2RiYzExNDNmMGU0OGY2YmE1Mw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2011-11-07T17:51:16Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2011-11-07T17:51:16Z"}, "message": "decl.c (cp_finish_decl): Only make_tree_vector if we're calling check_initializer.\n\n\t* decl.c (cp_finish_decl): Only make_tree_vector if we're calling\n\tcheck_initializer.\n\nFrom-SVN: r181099", "tree": {"sha": "0a913208222d0d411ef29b8b2eb99725d0b35cf2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0a913208222d0d411ef29b8b2eb99725d0b35cf2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b12e4c429258129df86a23dbc1143f0e48f6ba53", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b12e4c429258129df86a23dbc1143f0e48f6ba53", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b12e4c429258129df86a23dbc1143f0e48f6ba53", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b12e4c429258129df86a23dbc1143f0e48f6ba53/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "200feb074bdd154bb04c3da339224b37997a8f6c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/200feb074bdd154bb04c3da339224b37997a8f6c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/200feb074bdd154bb04c3da339224b37997a8f6c"}], "stats": {"total": 12, "additions": 11, "deletions": 1}, "files": [{"sha": "66b4e5194f9b12b990cbeaf52ce0275ca6914166", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b12e4c429258129df86a23dbc1143f0e48f6ba53/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b12e4c429258129df86a23dbc1143f0e48f6ba53/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=b12e4c429258129df86a23dbc1143f0e48f6ba53", "patch": "@@ -1,3 +1,8 @@\n+2011-11-07  Jason Merrill  <jason@redhat.com>\n+\n+\t* decl.c (cp_finish_decl): Only make_tree_vector if we're calling\n+\tcheck_initializer.\n+\n 2011-11-06  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/35688"}, {"sha": "3b283d83d2686016d419304e57889d0b1b7bf637", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b12e4c429258129df86a23dbc1143f0e48f6ba53/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b12e4c429258129df86a23dbc1143f0e48f6ba53/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=b12e4c429258129df86a23dbc1143f0e48f6ba53", "patch": "@@ -6049,9 +6049,12 @@ cp_finish_decl (tree decl, tree init, bool init_const_expr_p,\n \t  /* This variable seems to be a non-dependent constant, so process\n \t     its initializer.  If check_initializer returns non-null the\n \t     initialization wasn't constant after all.  */\n-\t  tree init_code = check_initializer (decl, init, flags, &cleanups);\n+\t  tree init_code;\n+\t  cleanups = make_tree_vector ();\n+\t  init_code = check_initializer (decl, init, flags, &cleanups);\n \t  if (init_code == NULL_TREE)\n \t    init = NULL_TREE;\n+\t  release_tree_vector (cleanups);\n \t}\n       else if (!DECL_PRETTY_FUNCTION_P (decl))\n \t/* Deduce array size even if the initializer is dependent.  */\n@@ -6150,6 +6153,7 @@ cp_finish_decl (tree decl, tree init, bool init_const_expr_p,\n \t\terror (\"Java object %qD not allocated with %<new%>\", decl);\n \t      init = NULL_TREE;\n \t    }\n+\t  cleanups = make_tree_vector ();\n \t  init = check_initializer (decl, init, flags, &cleanups);\n \t  /* Thread-local storage cannot be dynamically initialized.  */\n \t  if (DECL_THREAD_LOCAL_P (decl) && init)\n@@ -6320,6 +6324,7 @@ cp_finish_decl (tree decl, tree init, bool init_const_expr_p,\n       unsigned i; tree t;\n       FOR_EACH_VEC_ELT (tree, cleanups, i, t)\n \tpush_cleanup (decl, t, false);\n+      release_tree_vector (cleanups);\n     }\n \n   if (was_readonly)"}]}