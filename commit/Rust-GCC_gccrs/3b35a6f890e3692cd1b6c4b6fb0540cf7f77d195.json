{"sha": "3b35a6f890e3692cd1b6c4b6fb0540cf7f77d195", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2IzNWE2Zjg5MGUzNjkyY2QxYjZjNGI2ZmIwNTQwY2Y3Zjc3ZDE5NQ==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2008-09-10T21:07:29Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2008-09-10T21:07:29Z"}, "message": "expr.c (find_array_element): Reformat.\n\n2008-09-10  H.J. Lu  <hongjiu.lu@intel.com>\n\n\t* expr.c (find_array_element): Reformat.\n\nFrom-SVN: r140248", "tree": {"sha": "f453f180c67bd5557cb1247536fbed10a0da4954", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f453f180c67bd5557cb1247536fbed10a0da4954"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3b35a6f890e3692cd1b6c4b6fb0540cf7f77d195", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b35a6f890e3692cd1b6c4b6fb0540cf7f77d195", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3b35a6f890e3692cd1b6c4b6fb0540cf7f77d195", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b35a6f890e3692cd1b6c4b6fb0540cf7f77d195/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a76ddc7bda84d17ddc6577c60daf95897a2de515", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a76ddc7bda84d17ddc6577c60daf95897a2de515", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a76ddc7bda84d17ddc6577c60daf95897a2de515"}], "stats": {"total": 42, "additions": 22, "deletions": 20}, "files": [{"sha": "9e5888f054e9246ad3437bac0a887bcfce59bcfb", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b35a6f890e3692cd1b6c4b6fb0540cf7f77d195/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b35a6f890e3692cd1b6c4b6fb0540cf7f77d195/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=3b35a6f890e3692cd1b6c4b6fb0540cf7f77d195", "patch": "@@ -1,3 +1,7 @@\n+2008-09-10  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* expr.c (find_array_element): Reformat.\n+\n 2008-09-10  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/37420"}, {"sha": "6f5aff8c6c0914f7b790217792c26268782e5b5a", "filename": "gcc/fortran/expr.c", "status": "modified", "additions": 18, "deletions": 20, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b35a6f890e3692cd1b6c4b6fb0540cf7f77d195/gcc%2Ffortran%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b35a6f890e3692cd1b6c4b6fb0540cf7f77d195/gcc%2Ffortran%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fexpr.c?ref=3b35a6f890e3692cd1b6c4b6fb0540cf7f77d195", "patch": "@@ -1036,13 +1036,12 @@ find_array_element (gfc_constructor *cons, gfc_array_ref *ar,\n \t}\n         /* Check the bounds.  */\n       if ((ar->as->upper[i]\n-\t     && ar->as->upper[i]->expr_type == EXPR_CONSTANT\n-\t     && mpz_cmp (e->value.integer,\n-\t\t\t ar->as->upper[i]->value.integer) > 0)\n-\t\t||\n-\t  (ar->as->lower[i]->expr_type == EXPR_CONSTANT\n-\t     && mpz_cmp (e->value.integer,\n-\t\t\t ar->as->lower[i]->value.integer) < 0))\n+\t   && ar->as->upper[i]->expr_type == EXPR_CONSTANT\n+\t   && mpz_cmp (e->value.integer,\n+\t\t       ar->as->upper[i]->value.integer) > 0)\n+\t  || (ar->as->lower[i]->expr_type == EXPR_CONSTANT\n+\t      && mpz_cmp (e->value.integer,\n+\t\t\t  ar->as->lower[i]->value.integer) < 0))\n \t{\n \t  gfc_error (\"Index in dimension %d is out of bounds \"\n \t\t     \"at %L\", i + 1, &ar->c_where[i]);\n@@ -1061,19 +1060,18 @@ find_array_element (gfc_constructor *cons, gfc_array_ref *ar,\n       mpz_mul (span, span, tmp);\n     }\n \n-    for (nelemen = mpz_get_ui (offset); nelemen > 0; nelemen--)\n-      {\n-        if (cons)\n-\t  {\n-\t    if (cons->iterator)\n-\t      {\n-\t        cons = NULL;\n-\t      \n-\t        goto depart;\n-\t      }\n-\t    cons = cons->next;\n-\t  }\n-      }\n+  for (nelemen = mpz_get_ui (offset); nelemen > 0; nelemen--)\n+    {\n+      if (cons)\n+\t{\n+\t  if (cons->iterator)\n+\t    {\n+\t      cons = NULL;\n+\t      goto depart;\n+\t    }\n+\t  cons = cons->next;\n+\t}\n+    }\n \n depart:\n   mpz_clear (delta);"}]}