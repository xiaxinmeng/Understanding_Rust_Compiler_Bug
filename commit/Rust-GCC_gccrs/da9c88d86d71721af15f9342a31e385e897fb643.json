{"sha": "da9c88d86d71721af15f9342a31e385e897fb643", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGE5Yzg4ZDg2ZDcxNzIxYWYxNWY5MzQyYTMxZTM4NWU4OTdmYjY0Mw==", "commit": {"author": {"name": "Renlin Li", "email": "renlin.li@arm.com", "date": "2014-11-19T16:34:38Z"}, "committer": {"name": "Renlin Li", "email": "renlin@gcc.gnu.org", "date": "2014-11-19T16:34:38Z"}, "message": "[AArch64] Implement <su><maxmin>v2di3 pattern\n\ngcc/:\n        PR target/63424\n        * config/aarch64/aarch64-simd.md (<su><maxmin>v2di3): New.\n\ngcc/testsuite/:\n        PR target/63424\n        * gcc.target/aarch64/pr63424.c: New test.\n\nFrom-SVN: r217786", "tree": {"sha": "4422715207584d6ff08d4b395a1aa1b9dea359f4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4422715207584d6ff08d4b395a1aa1b9dea359f4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/da9c88d86d71721af15f9342a31e385e897fb643", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da9c88d86d71721af15f9342a31e385e897fb643", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da9c88d86d71721af15f9342a31e385e897fb643", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da9c88d86d71721af15f9342a31e385e897fb643/comments", "author": null, "committer": null, "parents": [{"sha": "2d302f47a023715afb272eb119b72a36d3233388", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d302f47a023715afb272eb119b72a36d3233388", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2d302f47a023715afb272eb119b72a36d3233388"}], "stats": {"total": 81, "additions": 81, "deletions": 0}, "files": [{"sha": "d7a687a1eedaf6071881a41756e1b871849739dc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da9c88d86d71721af15f9342a31e385e897fb643/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da9c88d86d71721af15f9342a31e385e897fb643/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=da9c88d86d71721af15f9342a31e385e897fb643", "patch": "@@ -3,6 +3,11 @@\n \t* config/rs6000/constraints.md: Avoid signed integer overflows.\n \t* config/rs6000/predicates.md: Likewise.\n \n+2014-11-19  Renlin Li  <Renlin.Li@arm.com>\n+\n+    PR target/63424\n+\t* config/aarch64/aarch64-simd.md (<su><maxmin>v2di3): New.\n+\n 2014-11-19  Renlin Li  <Renlin.Li@arm.com>\n \n     PR middle-end/63762"}, {"sha": "2e71cb957d721b31608ba4bf1f5c1e19487d5f08", "filename": "gcc/config/aarch64/aarch64-simd.md", "status": "modified", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da9c88d86d71721af15f9342a31e385e897fb643/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da9c88d86d71721af15f9342a31e385e897fb643/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md?ref=da9c88d86d71721af15f9342a31e385e897fb643", "patch": "@@ -953,6 +953,39 @@\n   [(set_attr \"type\" \"neon_minmax<q>\")]\n )\n \n+(define_expand \"<su><maxmin>v2di3\"\n+ [(set (match_operand:V2DI 0 \"register_operand\" \"\")\n+       (MAXMIN:V2DI (match_operand:V2DI 1 \"register_operand\" \"\")\n+                    (match_operand:V2DI 2 \"register_operand\" \"\")))]\n+ \"TARGET_SIMD\"\n+{\n+  enum rtx_code cmp_operator;\n+  rtx cmp_fmt;\n+\n+  switch (<CODE>)\n+    {\n+    case UMIN:\n+      cmp_operator = LTU;\n+      break;\n+    case SMIN:\n+      cmp_operator = LT;\n+      break;\n+    case UMAX:\n+      cmp_operator = GTU;\n+      break;\n+    case SMAX:\n+      cmp_operator = GT;\n+      break;\n+    default:\n+      gcc_unreachable ();\n+    }\n+\n+  cmp_fmt = gen_rtx_fmt_ee (cmp_operator, V2DImode, operands[1], operands[2]);\n+  emit_insn (gen_aarch64_vcond_internalv2div2di (operands[0], operands[1],\n+              operands[2], cmp_fmt, operands[1], operands[2]));\n+  DONE;\n+})\n+\n ;; vec_concat gives a new vector with the low elements from operand 1, and\n ;; the high elements from operand 2.  That is to say, given op1 = { a, b }\n ;; op2 = { c, d }, vec_concat (op1, op2) = { a, b, c, d }."}, {"sha": "840a1c14d140b8e57191f3156ff92c8214f79497", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da9c88d86d71721af15f9342a31e385e897fb643/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da9c88d86d71721af15f9342a31e385e897fb643/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=da9c88d86d71721af15f9342a31e385e897fb643", "patch": "@@ -1,3 +1,7 @@\n+2014-11-19  Renlin Li  <Renlin.Li@arm.com>\n+    PR target/63424\n+\t* gcc.target/aarch64/pr63424.c: New test.\n+\n 2014-11-19  Renlin Li  <Renlin.Li@arm.com>\n \n     PR middle-end/63762"}, {"sha": "c6bd7626f822c2b3507a836eb72808084466d644", "filename": "gcc/testsuite/gcc.target/aarch64/pr63424.c", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da9c88d86d71721af15f9342a31e385e897fb643/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fpr63424.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da9c88d86d71721af15f9342a31e385e897fb643/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fpr63424.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fpr63424.c?ref=da9c88d86d71721af15f9342a31e385e897fb643", "patch": "@@ -0,0 +1,39 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3\" } */\n+\n+#include <stdint.h>\n+\n+uint32_t\n+truncate_int (const unsigned long long value)\n+{\n+  if ( value < 0 )\n+    {\n+      return 0;\n+    }\n+  else if ( value > UINT32_MAX )\n+    {\n+      return UINT32_MAX;\n+    }\n+  else\n+    return (uint32_t)value;\n+}\n+\n+uint32_t\n+mul (const unsigned long long x, const unsigned long long y)\n+{\n+  uint32_t value = truncate_int (x * y);\n+  return value;\n+}\n+\n+uint32_t *\n+test(unsigned size, uint32_t *a, uint32_t s)\n+{\n+  unsigned i;\n+\n+  for (i = 0; i < size; i++)\n+    {\n+      a[i] = mul (a[i], s);\n+    }\n+\n+  return a;\n+}"}]}