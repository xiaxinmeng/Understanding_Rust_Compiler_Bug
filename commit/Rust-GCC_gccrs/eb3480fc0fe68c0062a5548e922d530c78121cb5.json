{"sha": "eb3480fc0fe68c0062a5548e922d530c78121cb5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWIzNDgwZmMwZmU2OGMwMDYyYTU1NDhlOTIyZDUzMGM3ODEyMWNiNQ==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2020-06-02T14:57:35Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2020-06-03T06:12:50Z"}, "message": "gcov: Fix build on AIX\n\nWe must guard used atomic builtins with GCOV_SUPPORTS_ATOMIC.\nThe patch is tested on AIX and I'm going to push it.\n\nlibgcc/ChangeLog:\n\n\tPR gcov-profile/95480\n\t* libgcov-profiler.c (GCOV_SUPPORTS_ATOMIC): Move to...\n\t* libgcov.h (GCOV_SUPPORTS_ATOMIC): ...here.\n\t(gcov_counter_add): Use GCOV_SUPPORTS_ATOMIC guard.\n\t(gcov_counter_set_if_null): Likewise.", "tree": {"sha": "1e3619f4c6d57ebb711c11cb15b3311501a8d76b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1e3619f4c6d57ebb711c11cb15b3311501a8d76b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eb3480fc0fe68c0062a5548e922d530c78121cb5", "comment_count": 0, "verification": {"verified": false, "reason": "unknown_key", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCAAdFiEE6I4wzqqylQBfXaRhTcGC3A+nN4UFAl7XP2IACgkQTcGC3A+n\nN4WAvAf/TW0cQdOAfZD0JrHsBVgj4+YCqveM/dkJbgEvJREyFuX8qvEE2vtNEzzV\nEe6bDAK/AsTce3T4IlYbI6YkPVEMdwbPNMr/RY3p/Kqg/mt0SazuDcDfpSXv980/\nmUPVKMUbjpG6/OsDKDsEC2RVuA47SyWhDkxJegLDgKlXBbqjkVzqv0NmM/L8G14K\nbV5nHTWaJgSQ0wu1L9HvurSJHXhMnz417EjFSXMseJWKnjQEwzBtjSiwN4Ib1Efo\n6fR8wW0TZZwmfIFcxarj/rfBRGk5mF0UPt/M391/0MxTL1uvrWlZ4vbCyKiO3VkA\nEsW8BsVJ56+enjs8yk7sH1SoKEVrgw==\n=EKqk\n-----END PGP SIGNATURE-----", "payload": "tree 1e3619f4c6d57ebb711c11cb15b3311501a8d76b\nparent a9312a7926079ddb78b5f93681a9f6823422f5e1\nauthor Martin Liska <mliska@suse.cz> 1591109855 +0200\ncommitter Martin Liska <mliska@suse.cz> 1591164770 +0200\n\ngcov: Fix build on AIX\n\nWe must guard used atomic builtins with GCOV_SUPPORTS_ATOMIC.\nThe patch is tested on AIX and I'm going to push it.\n\nlibgcc/ChangeLog:\n\n\tPR gcov-profile/95480\n\t* libgcov-profiler.c (GCOV_SUPPORTS_ATOMIC): Move to...\n\t* libgcov.h (GCOV_SUPPORTS_ATOMIC): ...here.\n\t(gcov_counter_add): Use GCOV_SUPPORTS_ATOMIC guard.\n\t(gcov_counter_set_if_null): Likewise.\n"}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb3480fc0fe68c0062a5548e922d530c78121cb5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eb3480fc0fe68c0062a5548e922d530c78121cb5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb3480fc0fe68c0062a5548e922d530c78121cb5/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a9312a7926079ddb78b5f93681a9f6823422f5e1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a9312a7926079ddb78b5f93681a9f6823422f5e1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a9312a7926079ddb78b5f93681a9f6823422f5e1"}], "stats": {"total": 33, "additions": 20, "deletions": 13}, "files": [{"sha": "45ab93c977695b25cae07a2746cd3c06658decf8", "filename": "libgcc/libgcov-profiler.c", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb3480fc0fe68c0062a5548e922d530c78121cb5/libgcc%2Flibgcov-profiler.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb3480fc0fe68c0062a5548e922d530c78121cb5/libgcc%2Flibgcov-profiler.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Flibgcov-profiler.c?ref=eb3480fc0fe68c0062a5548e922d530c78121cb5", "patch": "@@ -26,17 +26,6 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #include \"libgcov.h\"\n #if !defined(inhibit_libc)\n \n-/* Detect whether target can support atomic update of profilers.  */\n-#if __SIZEOF_LONG_LONG__ == 4 && __GCC_HAVE_SYNC_COMPARE_AND_SWAP_4\n-#define GCOV_SUPPORTS_ATOMIC 1\n-#else\n-#if __SIZEOF_LONG_LONG__ == 8 && __GCC_HAVE_SYNC_COMPARE_AND_SWAP_8\n-#define GCOV_SUPPORTS_ATOMIC 1\n-#else\n-#define GCOV_SUPPORTS_ATOMIC 0\n-#endif\n-#endif\n-\n #ifdef L_gcov_interval_profiler\n /* If VALUE is in interval <START, START + STEPS - 1>, then increases the\n    corresponding counter in COUNTERS.  If the VALUE is above or below"}, {"sha": "1456100815da0beb1e55f25be3aa9a0132c5a519", "filename": "libgcc/libgcov.h", "status": "modified", "additions": 20, "deletions": 2, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb3480fc0fe68c0062a5548e922d530c78121cb5/libgcc%2Flibgcov.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb3480fc0fe68c0062a5548e922d530c78121cb5/libgcc%2Flibgcov.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Flibgcov.h?ref=eb3480fc0fe68c0062a5548e922d530c78121cb5", "patch": "@@ -85,6 +85,19 @@ typedef unsigned gcov_type_unsigned __attribute__ ((mode (QI)));\n #define GCOV_LOCKED 0\n #endif\n \n+#ifndef GCOV_SUPPORTS_ATOMIC\n+/* Detect whether target can support atomic update of profilers.  */\n+#if __SIZEOF_LONG_LONG__ == 4 && __GCC_HAVE_SYNC_COMPARE_AND_SWAP_4\n+#define GCOV_SUPPORTS_ATOMIC 1\n+#else\n+#if __SIZEOF_LONG_LONG__ == 8 && __GCC_HAVE_SYNC_COMPARE_AND_SWAP_8\n+#define GCOV_SUPPORTS_ATOMIC 1\n+#else\n+#define GCOV_SUPPORTS_ATOMIC 0\n+#endif\n+#endif\n+#endif\n+\n /* In libgcov we need these functions to be extern, so prefix them with\n    __gcov.  In libgcov they must also be hidden so that the instance in\n    the executable is not also used in a DSO.  */\n@@ -377,11 +390,14 @@ gcov_get_counter_target (void)\n    if USE_ATOMIC is true.  */\n \n static inline void\n-gcov_counter_add (gcov_type *counter, gcov_type value, int use_atomic)\n+gcov_counter_add (gcov_type *counter, gcov_type value,\n+\t\t  int use_atomic ATTRIBUTE_UNUSED)\n {\n+#if GCOV_SUPPORTS_ATOMIC\n   if (use_atomic)\n     __atomic_fetch_add (counter, value, __ATOMIC_RELAXED);\n   else\n+#endif\n     *counter += value;\n }\n \n@@ -390,11 +406,13 @@ gcov_counter_add (gcov_type *counter, gcov_type value, int use_atomic)\n \n static inline int\n gcov_counter_set_if_null (gcov_type *counter, struct gcov_kvp *node,\n-\t\t\t  int use_atomic)\n+\t\t\t  int use_atomic ATTRIBUTE_UNUSED)\n {\n+#if GCOV_SUPPORTS_ATOMIC\n   if (use_atomic)\n     return !__sync_val_compare_and_swap (counter, NULL, (intptr_t)node);\n   else\n+#endif\n     {\n       *counter = (intptr_t)node;\n       return 1;"}]}