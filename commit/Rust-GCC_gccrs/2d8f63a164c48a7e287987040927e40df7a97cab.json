{"sha": "2d8f63a164c48a7e287987040927e40df7a97cab", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmQ4ZjYzYTE2NGM0OGE3ZTI4Nzk4NzA0MDkyN2U0MGRmN2E5N2NhYg==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2011-05-11T19:39:21Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2011-05-11T19:39:21Z"}, "message": "Don't crash ranging over call to builtin function.\n\nFrom-SVN: r173671", "tree": {"sha": "31a227cd909da29937b261dd6535c837d3549a83", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/31a227cd909da29937b261dd6535c837d3549a83"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2d8f63a164c48a7e287987040927e40df7a97cab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d8f63a164c48a7e287987040927e40df7a97cab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2d8f63a164c48a7e287987040927e40df7a97cab", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d8f63a164c48a7e287987040927e40df7a97cab/comments", "author": null, "committer": null, "parents": [{"sha": "cfca3f726741cbba6e6906afeac9ddc4c466fb3f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cfca3f726741cbba6e6906afeac9ddc4c466fb3f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cfca3f726741cbba6e6906afeac9ddc4c466fb3f"}], "stats": {"total": 13, "additions": 7, "deletions": 6}, "files": [{"sha": "005173b90c8f15d4d2306b564389d5be9724ddf7", "filename": "gcc/go/gofrontend/expressions.cc", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d8f63a164c48a7e287987040927e40df7a97cab/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d8f63a164c48a7e287987040927e40df7a97cab/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc?ref=2d8f63a164c48a7e287987040927e40df7a97cab", "patch": "@@ -8527,9 +8527,9 @@ Call_expression::lower_varargs(Gogo* gogo, Named_object* function,\n     new_args->push_back(Expression::make_nil(loc));\n \n   // We can't return a new call expression here, because this one may\n-  // be referenced by Call_result expressions.  FIXME.\n-  if (old_args != NULL)\n-    delete old_args;\n+  // be referenced by Call_result expressions.  FIXME.  We can't\n+  // delete OLD_ARGS because we may have both a Call_expression and a\n+  // Builtin_call_expression which refer to them.  FIXME.\n   this->args_ = new_args;\n   this->varargs_are_lowered_ = true;\n \n@@ -9250,8 +9250,8 @@ Index_expression::do_lower(Gogo*, Named_object*, int)\n \t  error_at(location, \"invalid slice of map\");\n \t  return Expression::make_error(location);\n \t}\n-      Map_index_expression* ret= Expression::make_map_index(left, start,\n-\t\t\t\t\t\t\t    location);\n+      Map_index_expression* ret = Expression::make_map_index(left, start,\n+\t\t\t\t\t\t\t     location);\n       if (this->is_lvalue_)\n \tret->set_is_lvalue();\n       return ret;"}, {"sha": "4d335bb45076db7f56d301d9742a487580534454", "filename": "gcc/go/gofrontend/statements.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d8f63a164c48a7e287987040927e40df7a97cab/gcc%2Fgo%2Fgofrontend%2Fstatements.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d8f63a164c48a7e287987040927e40df7a97cab/gcc%2Fgo%2Fgofrontend%2Fstatements.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fstatements.cc?ref=2d8f63a164c48a7e287987040927e40df7a97cab", "patch": "@@ -4536,7 +4536,7 @@ For_range_statement::do_lower(Gogo* gogo, Named_object*, Block* enclosing)\n   else\n     {\n       this->report_error(_(\"range clause must have \"\n-\t\t\t   \"array, slice, setring, map, or channel type\"));\n+\t\t\t   \"array, slice, string, map, or channel type\"));\n       return Statement::make_error_statement(this->location());\n     }\n \n@@ -4552,6 +4552,7 @@ For_range_statement::do_lower(Gogo* gogo, Named_object*, Block* enclosing)\n     {\n       range_temp = Statement::make_temporary(NULL, this->range_, loc);\n       temp_block->add_statement(range_temp);\n+      this->range_ = NULL;\n     }\n \n   Temporary_statement* index_temp = Statement::make_temporary(index_type,"}]}