{"sha": "d20d6e550c0c0e88b1bfcccce6ef4d4d392149ea", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDIwZDZlNTUwYzBjMGU4OGIxYmZjY2NjZTZlZjRkNGQzOTIxNDllYQ==", "commit": {"author": {"name": "Will Schmidt", "email": "will_schmidt@vnet.ibm.com", "date": "2018-08-13T19:23:38Z"}, "committer": {"name": "Will Schmidt", "email": "willschm@gcc.gnu.org", "date": "2018-08-13T19:23:38Z"}, "message": "rs6000.c (rs6000_gimple_fold_builtin): Add support for folding vec_perm.\n\n[gcc]\n\n2018-07-06  Will Schmidt  <will_schmidt@vnet.ibm.com>\n\n\t* gcc/config/rs6000/rs6000.c (rs6000_gimple_fold_builtin): Add support\n\tfor folding vec_perm.\n\nFrom-SVN: r263520", "tree": {"sha": "ff967ca6d12a5300aba054abff5da371bfe26e09", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ff967ca6d12a5300aba054abff5da371bfe26e09"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d20d6e550c0c0e88b1bfcccce6ef4d4d392149ea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d20d6e550c0c0e88b1bfcccce6ef4d4d392149ea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d20d6e550c0c0e88b1bfcccce6ef4d4d392149ea", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d20d6e550c0c0e88b1bfcccce6ef4d4d392149ea/comments", "author": {"login": "willschm", "id": 44359, "node_id": "MDQ6VXNlcjQ0MzU5", "avatar_url": "https://avatars.githubusercontent.com/u/44359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/willschm", "html_url": "https://github.com/willschm", "followers_url": "https://api.github.com/users/willschm/followers", "following_url": "https://api.github.com/users/willschm/following{/other_user}", "gists_url": "https://api.github.com/users/willschm/gists{/gist_id}", "starred_url": "https://api.github.com/users/willschm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/willschm/subscriptions", "organizations_url": "https://api.github.com/users/willschm/orgs", "repos_url": "https://api.github.com/users/willschm/repos", "events_url": "https://api.github.com/users/willschm/events{/privacy}", "received_events_url": "https://api.github.com/users/willschm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "67bfa03ad15f3d104f162454c7f88fdf0d9a0749", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67bfa03ad15f3d104f162454c7f88fdf0d9a0749", "html_url": "https://github.com/Rust-GCC/gccrs/commit/67bfa03ad15f3d104f162454c7f88fdf0d9a0749"}], "stats": {"total": 36, "additions": 36, "deletions": 0}, "files": [{"sha": "f0a30b9c6374904bb8262e834b1a9dd23d87aeda", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d20d6e550c0c0e88b1bfcccce6ef4d4d392149ea/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d20d6e550c0c0e88b1bfcccce6ef4d4d392149ea/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d20d6e550c0c0e88b1bfcccce6ef4d4d392149ea", "patch": "@@ -1,3 +1,8 @@\n+2018-08-13  Will Schmidt  <will_schmidt@vnet.ibm.com>\n+\n+\t* gcc/config/rs6000/rs6000.c (rs6000_gimple_fold_builtin): Add support\n+\tfor folding vec_perm.\n+\n 2018-08-13 Will Schmidt  <will_schmidt@vnet.ibm.com>\n \n \t* config/rs6000/rs6000.c (rs6000_gimple_fold_builtin):"}, {"sha": "aa707b2555e608f3dbe61c23d3be2235f58e84be", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d20d6e550c0c0e88b1bfcccce6ef4d4d392149ea/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d20d6e550c0c0e88b1bfcccce6ef4d4d392149ea/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=d20d6e550c0c0e88b1bfcccce6ef4d4d392149ea", "patch": "@@ -15823,6 +15823,37 @@ rs6000_gimple_fold_builtin (gimple_stmt_iterator *gsi)\n     case ALTIVEC_BUILTIN_VUPKLPX:\n       return false;\n \n+    /* vec_perm.  */\n+    case ALTIVEC_BUILTIN_VPERM_16QI:\n+    case ALTIVEC_BUILTIN_VPERM_8HI:\n+    case ALTIVEC_BUILTIN_VPERM_4SI:\n+    case ALTIVEC_BUILTIN_VPERM_2DI:\n+    case ALTIVEC_BUILTIN_VPERM_4SF:\n+    case ALTIVEC_BUILTIN_VPERM_2DF:\n+      {\n+\targ0 = gimple_call_arg (stmt, 0);\n+\targ1 = gimple_call_arg (stmt, 1);\n+\ttree permute = gimple_call_arg (stmt, 2);\n+\tlhs = gimple_call_lhs (stmt);\n+\tlocation_t loc = gimple_location (stmt);\n+\tgimple_seq stmts = NULL;\n+\t// convert arg0 and arg1 to match the type of the permute\n+\t// for the VEC_PERM_EXPR operation.\n+\ttree permute_type = (TREE_TYPE (permute));\n+\ttree arg0_ptype = gimple_convert (&stmts, loc, permute_type, arg0);\n+\ttree arg1_ptype = gimple_convert (&stmts, loc, permute_type, arg1);\n+\ttree lhs_ptype = gimple_build (&stmts, loc, VEC_PERM_EXPR,\n+\t\t\t\t      permute_type, arg0_ptype, arg1_ptype,\n+\t\t\t\t      permute);\n+\t// Convert the result back to the desired lhs type upon completion.\n+\ttree temp = gimple_convert (&stmts, loc, TREE_TYPE (lhs), lhs_ptype);\n+\tgsi_insert_seq_before (gsi, stmts, GSI_SAME_STMT);\n+\tg = gimple_build_assign (lhs, temp);\n+\tgimple_set_location (g, loc);\n+\tgsi_replace (gsi, g, true);\n+\treturn true;\n+      }\n+\n     default:\n       if (TARGET_DEBUG_BUILTIN)\n \tfprintf (stderr, \"gimple builtin intrinsic not matched:%d %s %s\\n\","}]}