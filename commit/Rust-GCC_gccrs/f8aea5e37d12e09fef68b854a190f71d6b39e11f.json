{"sha": "f8aea5e37d12e09fef68b854a190f71d6b39e11f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjhhZWE1ZTM3ZDEyZTA5ZmVmNjhiODU0YTE5MGY3MWQ2YjM5ZTExZg==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2019-11-15T01:33:37Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2019-11-15T01:33:37Z"}, "message": "Improve checks on C2x fallthrough attribute.\n\nWhen adding C2x attribute support, some [[fallthrough]] support\nappeared as a side-effect because of code for that attribute going\nthrough separate paths from the normal attribute handling.\n\nHowever, going through those paths without the normal attribute\nhandlers meant that certain checks, such as for the invalid usage\n[[fallthrough()]], did not operate.  This patch improves checks by\nadding this attribute to the standard attribute table, so that the\nparser knows it expects no arguments, along with adding an explicit\ncheck for \"[[fallthrough]];\" attribute-declarations at top level.  As\nwith other attributes, there are still cases where warnings should be\npedwarns because C2x constraints are violated, but this patch improves\nthe attribute handling.\n\nBootstrapped with no regressions on x86_64-pc-linux-gnu.\n\ngcc/c:\n\t* c-decl.c (std_attribute_table): Add fallthrough.\n\t* c-parser.c (c_parser_declaration_or_fndef): Diagnose fallthrough\n\tattribute at top level.\n\ngcc/c-family:\n\t* c-attribs.c (handle_fallthrough_attribute): Remove static.\n\t* c-common.h (handle_fallthrough_attribute): Declare.\n\ngcc/testsuite:\n\t* gcc.dg/c2x-attr-fallthrough-2.c,\n\tgcc.dg/c2x-attr-fallthrough-3.c: New tests.\n\nFrom-SVN: r278273", "tree": {"sha": "af29d11914c8522b85aaac821765cf424cea24f3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/af29d11914c8522b85aaac821765cf424cea24f3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f8aea5e37d12e09fef68b854a190f71d6b39e11f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8aea5e37d12e09fef68b854a190f71d6b39e11f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f8aea5e37d12e09fef68b854a190f71d6b39e11f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8aea5e37d12e09fef68b854a190f71d6b39e11f/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d3cb8f004a3c1ea3de3d948d80f5faabadd1f0b0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3cb8f004a3c1ea3de3d948d80f5faabadd1f0b0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d3cb8f004a3c1ea3de3d948d80f5faabadd1f0b0"}], "stats": {"total": 87, "additions": 82, "deletions": 5}, "files": [{"sha": "c7420f647d808ca48ea27a703a5017cd73607730", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8aea5e37d12e09fef68b854a190f71d6b39e11f/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8aea5e37d12e09fef68b854a190f71d6b39e11f/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=f8aea5e37d12e09fef68b854a190f71d6b39e11f", "patch": "@@ -1,3 +1,8 @@\n+2019-11-15  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* c-attribs.c (handle_fallthrough_attribute): Remove static.\n+\t* c-common.h (handle_fallthrough_attribute): Declare.\n+\n 2019-11-15  Joseph Myers  <joseph@codesourcery.com>\n \n \t* c-attribs.c (handle_deprecated_attribute): Remove static."}, {"sha": "4a59cdff8361057a94884365cdf4052c866fbac0", "filename": "gcc/c-family/c-attribs.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8aea5e37d12e09fef68b854a190f71d6b39e11f/gcc%2Fc-family%2Fc-attribs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8aea5e37d12e09fef68b854a190f71d6b39e11f/gcc%2Fc-family%2Fc-attribs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-attribs.c?ref=f8aea5e37d12e09fef68b854a190f71d6b39e11f", "patch": "@@ -144,7 +144,6 @@ static tree handle_simd_attribute (tree *, tree, tree, int, bool *);\n static tree handle_omp_declare_target_attribute (tree *, tree, tree, int,\n \t\t\t\t\t\t bool *);\n static tree handle_designated_init_attribute (tree *, tree, tree, int, bool *);\n-static tree handle_fallthrough_attribute (tree *, tree, tree, int, bool *);\n static tree handle_patchable_function_entry_attribute (tree *, tree, tree,\n \t\t\t\t\t\t       int, bool *);\n static tree handle_copy_attribute (tree *, tree, tree, int, bool *);\n@@ -4114,7 +4113,7 @@ handle_designated_init_attribute (tree *node, tree name, tree, int,\n /* Handle a \"fallthrough\" attribute; arguments as in struct\n    attribute_spec.handler.  */\n \n-static tree\n+tree\n handle_fallthrough_attribute (tree *, tree name, tree, int,\n \t\t\t      bool *no_add_attrs)\n {"}, {"sha": "f3478d39bebac901d634a6c2240d83e84c9b3359", "filename": "gcc/c-family/c-common.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8aea5e37d12e09fef68b854a190f71d6b39e11f/gcc%2Fc-family%2Fc-common.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8aea5e37d12e09fef68b854a190f71d6b39e11f/gcc%2Fc-family%2Fc-common.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-common.h?ref=f8aea5e37d12e09fef68b854a190f71d6b39e11f", "patch": "@@ -1359,6 +1359,7 @@ extern void warn_for_multistatement_macros (location_t, location_t,\n extern bool attribute_takes_identifier_p (const_tree);\n extern tree handle_deprecated_attribute (tree *, tree, tree, int, bool *);\n extern tree handle_unused_attribute (tree *, tree, tree, int, bool *);\n+extern tree handle_fallthrough_attribute (tree *, tree, tree, int, bool *);\n extern int parse_tm_stmt_attr (tree, int);\n extern int tm_attr_to_mask (tree);\n extern tree tm_mask_to_attr (int);"}, {"sha": "c2cab579838b9718192fe074b0473ce94e7db2a9", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8aea5e37d12e09fef68b854a190f71d6b39e11f/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8aea5e37d12e09fef68b854a190f71d6b39e11f/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=f8aea5e37d12e09fef68b854a190f71d6b39e11f", "patch": "@@ -1,3 +1,9 @@\n+2019-11-15  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* c-decl.c (std_attribute_table): Add fallthrough.\n+\t* c-parser.c (c_parser_declaration_or_fndef): Diagnose fallthrough\n+\tattribute at top level.\n+\n 2019-11-15  Joseph Myers  <joseph@codesourcery.com>\n \n \t* c-decl.c (std_attribute_table): New."}, {"sha": "98b71ea620bcbd5bda58505c019ff6cb47c9d91b", "filename": "gcc/c/c-decl.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8aea5e37d12e09fef68b854a190f71d6b39e11f/gcc%2Fc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8aea5e37d12e09fef68b854a190f71d6b39e11f/gcc%2Fc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-decl.c?ref=f8aea5e37d12e09fef68b854a190f71d6b39e11f", "patch": "@@ -4343,6 +4343,8 @@ const struct attribute_spec std_attribute_table[] =\n        affects_type_identity, handler, exclude } */\n   { \"deprecated\", 0, 1, false, false, false, false,\n     handle_deprecated_attribute, NULL },\n+  { \"fallthrough\", 0, 0, false, false, false, false,\n+    handle_fallthrough_attribute, NULL },\n   { NULL, 0, 0, false, false, false, false, NULL, NULL }\n };\n "}, {"sha": "5b290bf7567cdb8b9eaae619c6c57b1cbcfeda2b", "filename": "gcc/c/c-parser.c", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8aea5e37d12e09fef68b854a190f71d6b39e11f/gcc%2Fc%2Fc-parser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8aea5e37d12e09fef68b854a190f71d6b39e11f/gcc%2Fc%2Fc-parser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-parser.c?ref=f8aea5e37d12e09fef68b854a190f71d6b39e11f", "patch": "@@ -1927,9 +1927,15 @@ c_parser_declaration_or_fndef (c_parser *parser, bool fndef_ok,\n \t{\n \t  if (fallthru_attr_p != NULL)\n \t    *fallthru_attr_p = true;\n-\t  tree fn = build_call_expr_internal_loc (here, IFN_FALLTHROUGH,\n-\t\t\t\t\t\t  void_type_node, 0);\n-\t  add_stmt (fn);\n+\t  if (nested)\n+\t    {\n+\t      tree fn = build_call_expr_internal_loc (here, IFN_FALLTHROUGH,\n+\t\t\t\t\t\t      void_type_node, 0);\n+\t      add_stmt (fn);\n+\t    }\n+\t  else\n+\t    pedwarn (here, OPT_Wattributes,\n+\t\t     \"%<fallthrough%> attribute at top level\");\n \t}\n       else if (empty_ok && !(have_attrs\n \t\t\t     && specs->non_std_attrs_seen_p))"}, {"sha": "8c6f891480426d29be6a140d763d80da1cea40b7", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8aea5e37d12e09fef68b854a190f71d6b39e11f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8aea5e37d12e09fef68b854a190f71d6b39e11f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f8aea5e37d12e09fef68b854a190f71d6b39e11f", "patch": "@@ -1,3 +1,8 @@\n+2019-11-15  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* gcc.dg/c2x-attr-fallthrough-2.c,\n+\tgcc.dg/c2x-attr-fallthrough-3.c: New tests.\n+\n 2019-11-15  Joseph Myers  <joseph@codesourcery.com>\n \n \t* gcc.dg/c2x-attr-deprecated-1.c, gcc.dg/c2x-attr-deprecated-2.c,"}, {"sha": "e396a60ea0c77c8432b8e0eec6431415fe5582bc", "filename": "gcc/testsuite/gcc.dg/c2x-attr-fallthrough-2.c", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8aea5e37d12e09fef68b854a190f71d6b39e11f/gcc%2Ftestsuite%2Fgcc.dg%2Fc2x-attr-fallthrough-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8aea5e37d12e09fef68b854a190f71d6b39e11f/gcc%2Ftestsuite%2Fgcc.dg%2Fc2x-attr-fallthrough-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fc2x-attr-fallthrough-2.c?ref=f8aea5e37d12e09fef68b854a190f71d6b39e11f", "patch": "@@ -0,0 +1,35 @@\n+/* Test C2x attribute syntax.  Invalid use of fallthrough attribute.  */\n+/* { dg-do compile } */\n+/* { dg-options \"-std=c2x -pedantic-errors -Wextra\" } */\n+\n+[[fallthrough]]; /* { dg-error \"'fallthrough' attribute at top level\" } */\n+\n+int [[fallthrough]] x; /* { dg-warning \"ignored\" } */\n+/* { dg-message \"that appertains to a type-specifier\" \"appertains\" { target *-*-* } .-1 } */\n+\n+int g () [[fallthrough]]; /* { dg-warning \"ignored\" } */\n+/* { dg-message \"that appertains to a type-specifier\" \"appertains\" { target *-*-* } .-1 } */\n+\n+int\n+f (int a)\n+{\n+  [[fallthrough]] int b = 2; /* { dg-warning \"not followed by|ignored\" } */\n+  switch (a)\n+    {\n+    case 1:\n+      b = 1; /* { dg-warning \"may fall through\" } */\n+    case 2:\n+      b = 2; /* { dg-warning \"may fall through\" } */\n+      [[fallthrough()]]; /* { dg-error \"does not take any arguments\" } */\n+    case 3:\n+      b += 7;\n+      break;\n+    case 4:\n+      b = 4; /* { dg-warning \"may fall through\" } */\n+      [[fallthrough(1)]]; /* { dg-error \"does not take any arguments|expected\" } */\n+    case 5:\n+      b += 5;\n+      break;\n+    }\n+  [[fallthrough]] return b; /* { dg-warning \"ignored\" } */\n+}"}, {"sha": "66fe820c315273e97a46553e14cfd6f54530fcc5", "filename": "gcc/testsuite/gcc.dg/c2x-attr-fallthrough-3.c", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8aea5e37d12e09fef68b854a190f71d6b39e11f/gcc%2Ftestsuite%2Fgcc.dg%2Fc2x-attr-fallthrough-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8aea5e37d12e09fef68b854a190f71d6b39e11f/gcc%2Ftestsuite%2Fgcc.dg%2Fc2x-attr-fallthrough-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fc2x-attr-fallthrough-3.c?ref=f8aea5e37d12e09fef68b854a190f71d6b39e11f", "patch": "@@ -0,0 +1,18 @@\n+/* Test C2x attribute syntax.  Invalid use of fallthrough attribute\n+   outside switch or in bad context inside switch.  */\n+/* { dg-do compile } */\n+/* { dg-options \"-std=c2x -pedantic-errors -Wextra\" } */\n+\n+int\n+f (int a)\n+{\n+  [[fallthrough]]; /* { dg-error \"invalid use of attribute 'fallthrough'\" } */\n+  switch (a)\n+    {\n+    case 1:\n+      a++;\n+      [[fallthrough]]; /* { dg-warning \"attribute 'fallthrough' not preceding a case label or default label\" } */\n+      a++;\n+    }\n+  return a;\n+}"}]}