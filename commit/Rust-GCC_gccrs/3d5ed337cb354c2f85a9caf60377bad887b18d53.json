{"sha": "3d5ed337cb354c2f85a9caf60377bad887b18d53", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2Q1ZWQzMzdjYjM1NGMyZjg1YTljYWY2MDM3N2JhZDg4N2IxOGQ1Mw==", "commit": {"author": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2020-08-25T15:46:13Z"}, "committer": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2020-08-25T15:46:41Z"}, "message": "OpenMP: Improve map-clause error message for array function parameter (PR96678)\n\ngcc/c/ChangeLog:\n\n\tPR c/96678\n\t* c-typeck.c (handle_omp_array_sections_1): Talk about\n\tarray function parameter in the error message.\n\ngcc/cp/ChangeLog:\n\n\tPR c/96678\n\t* semantics.c (handle_omp_array_sections_1): Talk about\n\tarray function parameter in the error message.\n\ngcc/testsuite/ChangeLog:\n\n\tPR c/96678\n\t* c-c++-common/gomp/map-4.c: New test.\n\t* c-c++-common/gomp/depend-1.c: Update dg-error.\n\t* c-c++-common/gomp/map-1.c: Likewise.\n\t* c-c++-common/gomp/reduction-1.c: Likewise.\n\t* g++.dg/gomp/depend-1.C: Likewise.\n\t* g++.dg/gomp/depend-2.C: Likewise.", "tree": {"sha": "1f1fbb20cd42c8e5c8e77d63f3116ae91a23f4cb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1f1fbb20cd42c8e5c8e77d63f3116ae91a23f4cb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3d5ed337cb354c2f85a9caf60377bad887b18d53", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d5ed337cb354c2f85a9caf60377bad887b18d53", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3d5ed337cb354c2f85a9caf60377bad887b18d53", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d5ed337cb354c2f85a9caf60377bad887b18d53/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "24f2764521d8f27760f03f626a4f20f4c82b7c73", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/24f2764521d8f27760f03f626a4f20f4c82b7c73", "html_url": "https://github.com/Rust-GCC/gccrs/commit/24f2764521d8f27760f03f626a4f20f4c82b7c73"}], "stats": {"total": 57, "additions": 48, "deletions": 9}, "files": [{"sha": "e158d236501df9a0f6360ec64d1179f3676c91f5", "filename": "gcc/c/c-typeck.c", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d5ed337cb354c2f85a9caf60377bad887b18d53/gcc%2Fc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d5ed337cb354c2f85a9caf60377bad887b18d53/gcc%2Fc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-typeck.c?ref=3d5ed337cb354c2f85a9caf60377bad887b18d53", "patch": "@@ -13298,8 +13298,13 @@ handle_omp_array_sections_1 (tree c, tree t, vec<tree> &types,\n     {\n       if (length == NULL_TREE)\n \t{\n-\t  error_at (OMP_CLAUSE_LOCATION (c),\n-\t\t    \"for pointer type length expression must be specified\");\n+\t  if (C_ARRAY_PARAMETER (ret))\n+\t    error_at (OMP_CLAUSE_LOCATION (c),\n+\t\t      \"for array function parameter length expression \"\n+\t\t      \"must be specified\");\n+\t  else\n+\t    error_at (OMP_CLAUSE_LOCATION (c),\n+\t\t      \"for pointer type length expression must be specified\");\n \t  return error_mark_node;\n \t}\n       if (length != NULL_TREE"}, {"sha": "7f861fde7d6a45b815a260c1f55023a83b06f992", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d5ed337cb354c2f85a9caf60377bad887b18d53/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d5ed337cb354c2f85a9caf60377bad887b18d53/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=3d5ed337cb354c2f85a9caf60377bad887b18d53", "patch": "@@ -5083,8 +5083,13 @@ handle_omp_array_sections_1 (tree c, tree t, vec<tree> &types,\n     {\n       if (length == NULL_TREE)\n \t{\n-\t  error_at (OMP_CLAUSE_LOCATION (c),\n-\t\t    \"for pointer type length expression must be specified\");\n+\t  if (DECL_ARRAY_PARAMETER_P (ret))\n+\t    error_at (OMP_CLAUSE_LOCATION (c),\n+\t\t      \"for array function parameter length expression \"\n+\t\t      \"must be specified\");\n+\t  else\n+\t    error_at (OMP_CLAUSE_LOCATION (c),\n+\t\t      \"for pointer type length expression must be specified\");\n \t  return error_mark_node;\n \t}\n       if (length != NULL_TREE"}, {"sha": "599031f2d900264e236f3702ade0bdb7a6dc8567", "filename": "gcc/testsuite/c-c++-common/gomp/depend-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d5ed337cb354c2f85a9caf60377bad887b18d53/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Fdepend-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d5ed337cb354c2f85a9caf60377bad887b18d53/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Fdepend-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Fdepend-1.c?ref=3d5ed337cb354c2f85a9caf60377bad887b18d53", "patch": "@@ -40,7 +40,7 @@ foo (int g[3][10], int h[4][8], int i[2][10], int j[][9],\n     ;\n   #pragma omp task depend(out: f[1:10]) /* { dg-error \"high bound \\[^\\n\\r]* above array section size\" } */\n     ;\n-  #pragma omp task depend(in: g[:][2:4]) /* { dg-error \"for pointer type length expression must be specified\" } */\n+  #pragma omp task depend(in: g[:][2:4]) /* { dg-error \"for array function parameter length expression must be specified\" } */\n     ;\n   #pragma omp task depend(in: h[2:2][-1:]) /* { dg-error \"negative low bound in array section\" } */\n     ;"}, {"sha": "508dc8d6b011abb0dd8eaa84cc94bea9ca47deb9", "filename": "gcc/testsuite/c-c++-common/gomp/map-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d5ed337cb354c2f85a9caf60377bad887b18d53/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Fmap-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d5ed337cb354c2f85a9caf60377bad887b18d53/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Fmap-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Fmap-1.c?ref=3d5ed337cb354c2f85a9caf60377bad887b18d53", "patch": "@@ -50,7 +50,7 @@ foo (int g[3][10], int h[4][8], int i[2][10], int j[][9],\n     bar (e);\n   #pragma omp target map(to: f[1:10]) /* { dg-error \"high bound \\[^\\n\\r]* above array section size\" } */\n     bar (f);\n-  #pragma omp target map(from: g[:][0:10]) /* { dg-error \"for pointer type length expression must be specified\" } */\n+  #pragma omp target map(from: g[:][0:10]) /* { dg-error \"for array function parameter length expression must be specified\" } */\n     bar (&g[0][0]);\n   #pragma omp target map(from: h[2:1][-1:]) /* { dg-error \"negative low bound in array section\" } */\n     bar (&h[0][0]);"}, {"sha": "6c486365bf0056579bd4081b7977c3c1da272eea", "filename": "gcc/testsuite/c-c++-common/gomp/map-4.c", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d5ed337cb354c2f85a9caf60377bad887b18d53/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Fmap-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d5ed337cb354c2f85a9caf60377bad887b18d53/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Fmap-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Fmap-4.c?ref=3d5ed337cb354c2f85a9caf60377bad887b18d53", "patch": "@@ -0,0 +1,29 @@\n+/* PR c/96678.  */\n+\n+#define SIZE   (100)\n+typedef double Grid[SIZE];\n+\n+void test (Grid src1)\n+{\n+  #pragma omp target map(alloc:src1[:])  /* { dg-error \"for array function parameter length expression must be specified\" }  */\n+  {\n+    src1[0] = 5;\n+  }\n+}\n+\n+void test2 (double src2[])\n+{\n+  #pragma omp target map(alloc:src2[:])  /* { dg-error \"for array function parameter length expression must be specified\" }  */\n+  {\n+    src2[0] = 5;\n+  }\n+}\n+\n+void test3 (double *src3)\n+{\n+  #pragma omp target map(alloc:src3[:])  /* { dg-error \"for pointer type length expression must be specified\" }  */\n+  {\n+    src3[0] = 5;\n+  }\n+}\n+"}, {"sha": "897ed68e1a342f665d8a9c26eb75698eaf918421", "filename": "gcc/testsuite/c-c++-common/gomp/reduction-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d5ed337cb354c2f85a9caf60377bad887b18d53/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Freduction-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d5ed337cb354c2f85a9caf60377bad887b18d53/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Freduction-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Freduction-1.c?ref=3d5ed337cb354c2f85a9caf60377bad887b18d53", "patch": "@@ -44,7 +44,7 @@ foo (int a[10][10][10], int **b, int x)\n     bar (a);\n   #pragma omp parallel reduction(+: f[:][0:2])\t\t/* { dg-error \"for unknown bound array type length expression must be specified\" } */\n     bar (a);\n-  #pragma omp parallel reduction(+: a[:][0:10])\t\t/* { dg-error \"for pointer type length expression must be specified\" } */\n+  #pragma omp parallel reduction(+: a[:][0:10])\t\t/* { dg-error \"for array function parameter length expression must be specified\" } */\n     bar (a);\n   #pragma omp parallel reduction(+: a[:10][0:12])\t/* { dg-error \"above array section size\" } */\n     bar (a);"}, {"sha": "81ae27f3ce2769fa2768e5a554ebc2380be792c0", "filename": "gcc/testsuite/g++.dg/gomp/depend-1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d5ed337cb354c2f85a9caf60377bad887b18d53/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fdepend-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d5ed337cb354c2f85a9caf60377bad887b18d53/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fdepend-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fdepend-1.C?ref=3d5ed337cb354c2f85a9caf60377bad887b18d53", "patch": "@@ -35,7 +35,7 @@ foo (int g[3][10], int h[4][8], int i[2][10], int j[][9],\n     ;\n   #pragma omp task depend(out: f[1:10]) // { dg-error \"high bound \\[^\\n\\r]* above array section size\" }\n     ;\n-  #pragma omp task depend(in: g[:][2:4]) // { dg-error \"for pointer type length expression must be specified\" }\n+  #pragma omp task depend(in: g[:][2:4]) // { dg-error \"for array function parameter length expression must be specified\" }\n     ;\n   #pragma omp task depend(out: i[:1][11:]) // { dg-error \"low bound \\[^\\n\\r]* above array section size\" }\n     ;"}, {"sha": "f0f9f60056bed7c4e5b483b565638678197ea9ee", "filename": "gcc/testsuite/g++.dg/gomp/depend-2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d5ed337cb354c2f85a9caf60377bad887b18d53/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fdepend-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d5ed337cb354c2f85a9caf60377bad887b18d53/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fdepend-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fdepend-2.C?ref=3d5ed337cb354c2f85a9caf60377bad887b18d53", "patch": "@@ -41,7 +41,7 @@ foo (int g[3][10], int h[4][8], int i[2][10], int j[][9],\n     ;\n   #pragma omp task depend(out: f[1:10]) // { dg-error \"high bound \\[^\\n\\r]* above array section size\" }\n     ;\n-  #pragma omp task depend(in: g[:][2:4]) // { dg-error \"for pointer type length expression must be specified\" }\n+  #pragma omp task depend(in: g[:][2:4]) // { dg-error \"for array function parameter length expression must be specified\" }\n     ;\n   #pragma omp task depend(in: h[2:2][-1:]) // { dg-error \"negative low bound in array section\" }\n     ;"}]}