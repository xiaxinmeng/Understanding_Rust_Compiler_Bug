{"sha": "844f5ccfbb1871ca4540de222210d364c5ce304b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODQ0ZjVjY2ZiYjE4NzFjYTQ1NDBkZTIyMjIxMGQzNjRjNWNlMzA0Yg==", "commit": {"author": {"name": "Paul Brook", "email": "paul@codesourcery.com", "date": "2004-06-15T15:25:52Z"}, "committer": {"name": "Paul Brook", "email": "pbrook@gcc.gnu.org", "date": "2004-06-15T15:25:52Z"}, "message": "* gcc.dg/arm-mmx-1.c: Use asm to clobber registers.\n\nFrom-SVN: r83189", "tree": {"sha": "af7f6caa39437160225245645251ad44f1a2e18a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/af7f6caa39437160225245645251ad44f1a2e18a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/844f5ccfbb1871ca4540de222210d364c5ce304b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/844f5ccfbb1871ca4540de222210d364c5ce304b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/844f5ccfbb1871ca4540de222210d364c5ce304b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/844f5ccfbb1871ca4540de222210d364c5ce304b/comments", "author": null, "committer": null, "parents": [{"sha": "0792ab197b3956a2631a7b46f773ba11045357bc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0792ab197b3956a2631a7b46f773ba11045357bc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0792ab197b3956a2631a7b46f773ba11045357bc"}], "stats": {"total": 23, "additions": 10, "deletions": 13}, "files": [{"sha": "dc1100d2e3bcf9f7e2d7c131fd868663d9bf37b2", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/844f5ccfbb1871ca4540de222210d364c5ce304b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/844f5ccfbb1871ca4540de222210d364c5ce304b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=844f5ccfbb1871ca4540de222210d364c5ce304b", "patch": "@@ -1,3 +1,7 @@\n+2004-06-15  Paul Brook  <paul@codesourcery.com>\n+\n+\t* gcc.dg/arm-mmx-1.c: Use asm to clobber registers.\n+\n 2004-06-14  Giovanni Bajo  <giovannibajo@gcc.gnu.org>\n \n \tPR c++/15967"}, {"sha": "f93b9a35b7121c018c4a35c7a9afe3bdd8e511c6", "filename": "gcc/testsuite/gcc.dg/arm-mmx-1.c", "status": "modified", "additions": 6, "deletions": 13, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/844f5ccfbb1871ca4540de222210d364c5ce304b/gcc%2Ftestsuite%2Fgcc.dg%2Farm-mmx-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/844f5ccfbb1871ca4540de222210d364c5ce304b/gcc%2Ftestsuite%2Fgcc.dg%2Farm-mmx-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Farm-mmx-1.c?ref=844f5ccfbb1871ca4540de222210d364c5ce304b", "patch": "@@ -5,22 +5,15 @@\n /* { dg-final { global compiler_flags; if ![string match \"*-mthumb *\" $compiler_flags] { scan-assembler \"ldmfd\\[ \t]sp!.*ip,\\[ ]*pc\" } } } */\n \n /* This function uses all the call-saved registers, namely r4, r5, r6,\n-   r7, r8, r9, sl, fp.  Since we also save pc, that leaves an odd\n+   r7, r8, r9, sl, fp.  Since we also save lr, that leaves an odd\n    number of registers, and the compiler will push ip to align the\n    stack.  Make sure that we restore ip into ip, not into sp as is\n    done when using a frame pointer.  The -mno-apcs-frame option\n    permits the frame pointer to be used as an ordinary register.  */\n-int\n-foo(int *a, int *b, int *c, int *d, int *tot)\n-{\n-  int i, j, k, l, m, n, o;\n \n-  *tot = 0;\n-  for (i = *a; i < *b; i += *c)\n-    for (j = *a; j < *b; j += *d)\n-      for (k = *a; k < *c; k += *d)\n-\tfor (l = *b; k < *c; k += *d)\n-\t  for (m = *d; k < *c; k += *b)\n-\t    *tot += i + j + k + l + m;\n-  return *tot;\n+void\n+foo(void)\n+{\n+  __asm volatile (\"\" : : :\n+\t\t  \"r4\", \"r5\", \"r6\", \"r7\", \"r8\", \"r9\", \"sl\", \"fp\", \"lr\");\n }"}]}