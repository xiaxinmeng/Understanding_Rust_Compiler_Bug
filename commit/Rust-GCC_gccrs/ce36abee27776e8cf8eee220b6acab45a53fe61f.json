{"sha": "ce36abee27776e8cf8eee220b6acab45a53fe61f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2UzNmFiZWUyNzc3NmU4Y2Y4ZWVlMjIwYjZhY2FiNDVhNTNmZTYxZg==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2020-06-23T16:06:42Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2020-06-23T16:35:47Z"}, "message": "Minor tweak to elaborate_expression_1\n\ngcc/ada/ChangeLog:\n\t* gcc-interface/decl.c (elaborate_expression_1): When GNAT encodings\n\tare not used, do not create a variable for debug info purposes if\n\tthe expression is itself a user-declared variable.", "tree": {"sha": "d8a5f2dced28df424c93895fabe3db3ecd9eb557", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d8a5f2dced28df424c93895fabe3db3ecd9eb557"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ce36abee27776e8cf8eee220b6acab45a53fe61f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce36abee27776e8cf8eee220b6acab45a53fe61f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce36abee27776e8cf8eee220b6acab45a53fe61f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce36abee27776e8cf8eee220b6acab45a53fe61f/comments", "author": null, "committer": null, "parents": [{"sha": "5bdd063b9d8082cb8c8ede2721f1f425d3b952f0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5bdd063b9d8082cb8c8ede2721f1f425d3b952f0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5bdd063b9d8082cb8c8ede2721f1f425d3b952f0"}], "stats": {"total": 17, "additions": 13, "deletions": 4}, "files": [{"sha": "cad06a4dd0665e8c9e44aadba3d2877ad0fd2544", "filename": "gcc/ada/gcc-interface/decl.c", "status": "modified", "additions": 13, "deletions": 4, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce36abee27776e8cf8eee220b6acab45a53fe61f/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce36abee27776e8cf8eee220b6acab45a53fe61f/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Fdecl.c?ref=ce36abee27776e8cf8eee220b6acab45a53fe61f", "patch": "@@ -6823,6 +6823,18 @@ elaborate_expression_1 (tree gnu_expr, Entity_Id gnat_entity, const char *s,\n \t\t\t && Nkind (Associated_Node_For_Itype (gnat_entity))\n \t\t\t    == N_Loop_Parameter_Specification));\n \n+  /* If the GNAT encodings are not used, we don't need a variable for debug\n+     info purposes if the expression is a constant or another variable, but\n+     we need to be careful because we do not generate debug info for external\n+     variables so DECL_IGNORED_P is not stable across units.  */\n+  if (need_debug\n+      && gnat_encodings == DWARF_GNAT_ENCODINGS_MINIMAL\n+      && (TREE_CONSTANT (gnu_expr)\n+\t  || (!expr_public_p\n+\t      && DECL_P (gnu_expr)\n+\t      && !DECL_IGNORED_P (gnu_expr))))\n+    need_debug = false;\n+\n   /* Now create it, possibly only for debugging purposes.  */\n   if (use_variable || need_debug)\n     {\n@@ -6843,10 +6855,7 @@ elaborate_expression_1 (tree gnu_expr, Entity_Id gnat_entity, const char *s,\n \t variable only if the variable is used by the generated code.\n \t Returning the variable ensures the caller will use it in generated\n \t code.  Note that there is no need for a location if the debug info\n-\t contains an integer constant.\n-\t TODO: when the encoding-based debug scheme is dropped, move this\n-\t condition to the top-level IF block: we will not need to create a\n-\t variable anymore in such cases, then.  */\n+\t contains an integer constant.  */\n       if (use_variable || (need_debug && !TREE_CONSTANT (gnu_expr)))\n \treturn gnu_decl;\n     }"}]}