{"sha": "ad91feff1a8f5dc95317326da2d0197f4975b9f2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWQ5MWZlZmYxYThmNWRjOTUzMTczMjZkYTJkMDE5N2Y0OTc1YjlmMg==", "commit": {"author": {"name": "Michael Koch", "email": "konqueror@gmx.de", "date": "2003-11-27T09:04:01Z"}, "committer": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2003-11-27T09:04:01Z"}, "message": "UIDefaults.java: Reformated to match classpath's version.\n\n2003-11-27  Michael Koch  <konqueror@gmx.de>\n\n\t* javax/swing/UIDefaults.java:\n\tReformated to match classpath's version.\n\nFrom-SVN: r73981", "tree": {"sha": "a76a1e8c5687237c2639b3b1d9cec1bd1265218c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a76a1e8c5687237c2639b3b1d9cec1bd1265218c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ad91feff1a8f5dc95317326da2d0197f4975b9f2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad91feff1a8f5dc95317326da2d0197f4975b9f2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ad91feff1a8f5dc95317326da2d0197f4975b9f2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad91feff1a8f5dc95317326da2d0197f4975b9f2/comments", "author": null, "committer": null, "parents": [{"sha": "9121d16b4e80c7609efaec52f30fb1e9b4eac09b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9121d16b4e80c7609efaec52f30fb1e9b4eac09b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9121d16b4e80c7609efaec52f30fb1e9b4eac09b"}], "stats": {"total": 81, "additions": 43, "deletions": 38}, "files": [{"sha": "df380c1dcfbebc7d56e4bd1884dff2cd3ac20337", "filename": "libjava/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad91feff1a8f5dc95317326da2d0197f4975b9f2/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad91feff1a8f5dc95317326da2d0197f4975b9f2/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=ad91feff1a8f5dc95317326da2d0197f4975b9f2", "patch": "@@ -1,3 +1,8 @@\n+2003-11-27  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/UIDefaults.java:\n+\tReformated to match classpath's version.\n+\n 2003-11-27  Sascha Brawer  <brawer@dandelis.ch>\n \n \t* javax/swing/UIManager.java (getDefaults, getDimension,"}, {"sha": "9b91d10f55bf0778bc3294f41a53eacddc166d9b", "filename": "libjava/javax/swing/UIDefaults.java", "status": "modified", "additions": 38, "deletions": 38, "changes": 76, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad91feff1a8f5dc95317326da2d0197f4975b9f2/libjava%2Fjavax%2Fswing%2FUIDefaults.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad91feff1a8f5dc95317326da2d0197f4975b9f2/libjava%2Fjavax%2Fswing%2FUIDefaults.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FUIDefaults.java?ref=ad91feff1a8f5dc95317326da2d0197f4975b9f2", "patch": "@@ -80,11 +80,11 @@ public class UIDefaults extends Hashtable\n   public static class LazyInputMap implements LazyValue\n   {\n     Object[] bind;\n-    public LazyInputMap (Object[] bindings)\n+    public LazyInputMap(Object[] bindings)\n     {\n       bind = bindings;\n     }\n-    public Object createValue (UIDefaults table)\n+    public Object createValue(UIDefaults table)\n     {\n       InputMap im = new InputMap ();\n       for (int i = 0; 2*i+1 < bind.length; ++i)\n@@ -104,7 +104,7 @@ public Object createValue (UIDefaults table)\n   public static class ProxyLazyValue implements LazyValue\n   {\n     LazyValue inner;\n-    public ProxyLazyValue (String s)\n+    public ProxyLazyValue(String s)\n     {\n       final String className = s;\n       inner = new LazyValue ()\n@@ -126,7 +126,7 @@ public Object createValue (UIDefaults table)\n         };\n     }\n \n-    public ProxyLazyValue (String c, String m)\n+    public ProxyLazyValue(String c, String m)\n     {\n       final String className = c;\n       final String methodName = m;\n@@ -168,9 +168,9 @@ public Object createValue (UIDefaults table)\n                   .forName (className)\n                   .getConstructor (clss)\n                   .newInstance (objs);\n-              }\n+    }\n             catch (Exception e)\n-              {\n+    {\n                 return null;\n               }\n           }\n@@ -184,13 +184,13 @@ public ProxyLazyValue (String c, String m, Object[] os)\n       final Object[] objs = os;\n       final Class[] clss = new Class[objs.length];\n       for (int i = 0; i < objs.length; ++i)\n-        {\n+    {\n           clss[i] = objs[i].getClass ();\n-        }      \n+    }\n       inner = new LazyValue ()\n         { \n-          public Object createValue (UIDefaults table) \n-          {            \n+    public Object createValue(UIDefaults table)\n+    {\n             try \n               {\n                 return Class\n@@ -214,14 +214,14 @@ public Object createValue (UIDefaults table)\n \n   private static final long serialVersionUID = 7341222528856548117L;\n \n-  public UIDefaults ()\n+  public UIDefaults()\n   {\n     bundles = new LinkedList ();\n     listeners = new HashSet ();\n     defaultLocale = Locale.getDefault ();\n   }\n \n-  public UIDefaults (Object[] entries)\n+  public UIDefaults(Object[] entries)\n   {\n     bundles = new LinkedList ();\n     listeners = new HashSet ();\n@@ -233,7 +233,7 @@ public UIDefaults (Object[] entries)\n       }\n   }\n \n-  public Object get (Object key)\n+  public Object get(Object key)\n   {\n     return this.get (key, getDefaultLocale ());\n   }\n@@ -251,7 +251,7 @@ else if (key instanceof String)\n         String keyString = (String) key;\n         ListIterator i = bundles.listIterator (0);\n         while (i.hasNext ())\n-          {\n+  {\n             String bundle_name = (String) i.next ();\n             ResourceBundle res =\n               ResourceBundle.getBundle (bundle_name, loc);\n@@ -303,87 +303,87 @@ public Object put(Object key, Object value)\n   public void putDefaults(Object[] entries)\n   {\n     for (int i = 0; (2*i+1) < entries.length; ++i)\n-      {\n+  {\n         super.put (entries[2*i], entries[2*i+1]);\n       }\n     firePropertyChange (\"UIDefaults\", null, null);\n   }\n \n   public Font getFont(Object key)\n   {\n-    Object o = get (key);\n+    Object o = get(key);\n     return o instanceof Font ? (Font) o : null;\n   }\n \n   public Font getFont(Object key, Locale l)\n   {\n-    Object o = get (key, l);\n+    Object o = get(key, l);\n     return o instanceof Font ? (Font) o : null;\n   }\n \n   public Color getColor(Object key)\n   {\n-    Object o = get (key);\n+    Object o = get(key);\n     return o instanceof Color ? (Color) o : null;\n   }\n \n   public Color getColor(Object key, Locale l)\n   {\n-    Object o = get (key, l);\n+    Object o = get(key, l);\n     return o instanceof Color ? (Color) o : null;\n   }\n \n   public Icon getIcon(Object key)\n   {\n-    Object o = get (key);\n+    Object o = get(key);\n     return o instanceof Icon ? (Icon) o : null;\n   }\n \n   public Icon getIcon(Object key, Locale l)\n   {\n-    Object o = get (key, l);\n+    Object o = get(key, l);\n     return o instanceof Icon ? (Icon) o : null;\n   }\n \n   public Border getBorder(Object key)\n   {\n-    Object o = get (key);\n+    Object o = get(key);\n     return o instanceof Border ? (Border) o : null;\n   }\n \n   public Border getBorder(Object key, Locale l)\n   {\n-    Object o = get (key, l);\n+    Object o = get(key, l);\n     return o instanceof Border ? (Border) o : null;\n   }\n \n   public String getString(Object key)\n   {\n-    Object o = get (key);\n+    Object o = get(key);\n     return o instanceof String ? (String) o : null;\n   }\n \n   public String getString(Object key, Locale l)\n   {\n-    Object o = get (key, l);\n+    Object o = get(key, l);\n     return o instanceof String ? (String) o : null;\n   }\n \n   int getInt(Object key)\n   {\n-    Object o = get (key);\n+    Object o = get(key);\n     return o instanceof Integer ? ((Integer) o).intValue() : 0;\n   }\n \n   int getInt(Object key, Locale l)\n   {\n-    Object o = get (key, l);\n+    Object o = get(key, l);\n     return o instanceof Integer ? ((Integer) o).intValue() : 0;\n   }\n \n   public boolean getBoolean(Object key)\n   {\n-    return Boolean.TRUE.equals (get (key));\n+    return Boolean.TRUE.equals(get(key));\n   }\n \n   public boolean getBoolean(Object key, Locale l)\n@@ -393,25 +393,25 @@ public boolean getBoolean(Object key, Locale l)\n \n   public Insets getInsets(Object key) \n   {\n-    Object o = get (key);\n+    Object o = get(key);\n     return o instanceof Insets ? (Insets) o : null;\n   }\n \n   public Insets getInsets(Object key, Locale l) \n   {\n-    Object o = get (key, l);\n+    Object o = get(key, l);\n     return o instanceof Insets ? (Insets) o : null;\n   }\n \n   public Dimension getDimension(Object key) \n   {\n-    Object o = get (key);\n+    Object o = get(key);\n     return o instanceof Dimension ? (Dimension) o : null;\n   }\n \n   public Dimension getDimension(Object key, Locale l) \n   {\n-    Object o = get (key, l);\n+    Object o = get(key, l);\n     return o instanceof Dimension ? (Dimension) o : null;\n   }\n \n@@ -436,7 +436,7 @@ public Class getUIClass(String id)\n   {\n     return getUIClass (id, null);\n   }\n-  \n+\n   protected void getUIError(String msg)\n   {\n     System.err.println (\"UIDefaults.getUIError: \" + msg);\n@@ -462,21 +462,21 @@ public ComponentUI getUI(JComponent target)\n       {\n         getUIError (\"failed to locate createUI method on \" + cls.toString ());\n         return null;\n-      }\n+  }\n \n     try\n-      {\n+  {\n         return (ComponentUI) factory.invoke (null, new Object[] { target });\n-      }\n+  }\n     catch (java.lang.reflect.InvocationTargetException ite)\n \t{\n         getUIError (\"InvocationTargetException (\"+ ite.getTargetException() \n \t\t    +\") calling createUI(...) on \" + cls.toString ());\n         return null;        \n-\t    \n+\n \t}\n     catch (Exception e)\n-      {\n+  {\n         getUIError (\"exception calling createUI(...) on \" + cls.toString ());\n         return null;        \n       }"}]}