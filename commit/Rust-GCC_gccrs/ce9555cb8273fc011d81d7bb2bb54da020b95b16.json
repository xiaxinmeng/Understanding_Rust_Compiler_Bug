{"sha": "ce9555cb8273fc011d81d7bb2bb54da020b95b16", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2U5NTU1Y2I4MjczZmMwMTFkODFkN2JiMmJiNTRkYTAyMGI5NWIxNg==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2010-10-12T18:38:42Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2010-10-12T18:38:42Z"}, "message": "random.h (discrete_distribution<>::param_type): Disable move operations.\n\n2010-10-12  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* include/bits/random.h (discrete_distribution<>::param_type):\n\tDisable move operations.\n\t(piecewise_constant_distribution<>::param_type): Likewise.\n\t(piecewise_linear_distribution<>::param_type): Likewise.\n\n\t* include/bits/random.h (discrete_distribution<>::param_type::\n\tparam_type()): Simplify, don't use _M_initialize.\n\t(piecewise_constant_distribution<>::param_type::param_type()):\n\tLikewise.\n\t(piecewise_linear_distribution<>::param_type::param_type()):\n\tLikewise.\n\nFrom-SVN: r165391", "tree": {"sha": "22b090235ce54e9a74938d246cc20dcd24eed722", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/22b090235ce54e9a74938d246cc20dcd24eed722"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ce9555cb8273fc011d81d7bb2bb54da020b95b16", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce9555cb8273fc011d81d7bb2bb54da020b95b16", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce9555cb8273fc011d81d7bb2bb54da020b95b16", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce9555cb8273fc011d81d7bb2bb54da020b95b16/comments", "author": null, "committer": null, "parents": [{"sha": "0c86e0dd926d3f688bdaeead1241a98851774ba9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c86e0dd926d3f688bdaeead1241a98851774ba9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0c86e0dd926d3f688bdaeead1241a98851774ba9"}], "stats": {"total": 38, "additions": 32, "deletions": 6}, "files": [{"sha": "29413e7712551995e0672ee3e35d5499afc24b9b", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce9555cb8273fc011d81d7bb2bb54da020b95b16/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce9555cb8273fc011d81d7bb2bb54da020b95b16/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=ce9555cb8273fc011d81d7bb2bb54da020b95b16", "patch": "@@ -1,3 +1,17 @@\n+2010-10-12  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* include/bits/random.h (discrete_distribution<>::param_type):\n+\tDisable move operations.\n+\t(piecewise_constant_distribution<>::param_type): Likewise.\n+\t(piecewise_linear_distribution<>::param_type): Likewise.\n+\n+\t* include/bits/random.h (discrete_distribution<>::param_type::\n+\tparam_type()): Simplify, don't use _M_initialize.\n+\t(piecewise_constant_distribution<>::param_type::param_type()):\n+\tLikewise.\n+\t(piecewise_linear_distribution<>::param_type::param_type()):\n+\tLikewise.\n+\n 2010-10-12  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* include/bits/random.tcc (piecewise_linear_distribution<>::"}, {"sha": "2477d57a9e14a8ce017213db0aec7e9b1ff6b40a", "filename": "libstdc++-v3/include/bits/random.h", "status": "modified", "additions": 18, "deletions": 6, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce9555cb8273fc011d81d7bb2bb54da020b95b16/libstdc%2B%2B-v3%2Finclude%2Fbits%2Frandom.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce9555cb8273fc011d81d7bb2bb54da020b95b16/libstdc%2B%2B-v3%2Finclude%2Fbits%2Frandom.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Frandom.h?ref=ce9555cb8273fc011d81d7bb2bb54da020b95b16", "patch": "@@ -4697,8 +4697,8 @@ namespace std\n \tfriend class discrete_distribution<_IntType>;\n \n \tparam_type()\n-\t: _M_prob(), _M_cp()\n-\t{ _M_initialize(); }\n+\t: _M_prob(1, 1.0), _M_cp()\n+\t{ }\n \n \ttemplate<typename _InputIterator>\n \t  param_type(_InputIterator __wbegin,\n@@ -4714,6 +4714,10 @@ namespace std\n \t  param_type(size_t __nw, double __xmin, double __xmax,\n \t\t     _Func __fw);\n \n+\t// See: http://cpp-next.com/archive/2010/10/implicit-move-must-go/\n+\tparam_type(const param_type&) = default;\n+\tparam_type& operator=(const param_type&) = default;\n+\n \tstd::vector<double>\n \tprobabilities() const\n \t{ return _M_prob; }\n@@ -4889,8 +4893,8 @@ namespace std\n \tfriend class piecewise_constant_distribution<_RealType>;\n \n \tparam_type()\n-\t: _M_int(), _M_den(), _M_cp()\n-\t{ _M_initialize(); }\n+\t: _M_int(2), _M_den(1, 1.0), _M_cp()\n+\t{ _M_int[1] = _RealType(1); }\n \n \ttemplate<typename _InputIteratorB, typename _InputIteratorW>\n \t  param_type(_InputIteratorB __bfirst,\n@@ -4904,6 +4908,10 @@ namespace std\n \t  param_type(size_t __nw, _RealType __xmin, _RealType __xmax,\n \t\t     _Func __fw);\n \n+\t// See: http://cpp-next.com/archive/2010/10/implicit-move-must-go/\n+\tparam_type(const param_type&) = default;\n+\tparam_type& operator=(const param_type&) = default;\n+\n \tstd::vector<_RealType>\n \tintervals() const\n \t{ return _M_int; }\n@@ -5097,8 +5105,8 @@ namespace std\n \tfriend class piecewise_linear_distribution<_RealType>;\n \n \tparam_type()\n-\t: _M_int(), _M_den(), _M_cp(), _M_m()\n-\t{ _M_initialize(); }\n+\t: _M_int(2), _M_den(2, 1.0), _M_cp(), _M_m()\n+\t{ _M_int[1] = _RealType(1); }\n \n \ttemplate<typename _InputIteratorB, typename _InputIteratorW>\n \t  param_type(_InputIteratorB __bfirst,\n@@ -5112,6 +5120,10 @@ namespace std\n \t  param_type(size_t __nw, _RealType __xmin, _RealType __xmax,\n \t\t     _Func __fw);\n \n+\t// See: http://cpp-next.com/archive/2010/10/implicit-move-must-go/\n+\tparam_type(const param_type&) = default;\n+\tparam_type& operator=(const param_type&) = default;\n+\n \tstd::vector<_RealType>\n \tintervals() const\n \t{ return _M_int; }"}]}