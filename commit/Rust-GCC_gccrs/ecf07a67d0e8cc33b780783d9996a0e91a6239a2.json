{"sha": "ecf07a67d0e8cc33b780783d9996a0e91a6239a2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWNmMDdhNjdkMGU4Y2MzM2I3ODA3ODNkOTk5NmEwZTkxYTYyMzlhMg==", "commit": {"author": {"name": "Fran\u00e7ois Dumont", "email": "fdumont@gcc.gnu.org", "date": "2012-11-08T20:16:04Z"}, "committer": {"name": "Fran\u00e7ois Dumont", "email": "fdumont@gcc.gnu.org", "date": "2012-11-08T20:16:04Z"}, "message": "re PR libstdc++/54075 ([4.7.1] unordered_map insert still slower than 4.6.2)\n\n2012-11-08  Fran\u00e7ois Dumont  <fdumont@gcc.gnu.org>\n\n\tPR libstdc++/54075\n\t* include/bits/hashtable.h (_Hashtable<>::rehash): Reset hash\n\tpolicy state if no rehash.\n\t* testsuite/23_containers/unordered_set/modifiers/reserve.cc\n\t(test02): New.\n\nFrom-SVN: r193339", "tree": {"sha": "1a19c993748ad806a6a8754863138e86283b4eca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1a19c993748ad806a6a8754863138e86283b4eca"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ecf07a67d0e8cc33b780783d9996a0e91a6239a2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ecf07a67d0e8cc33b780783d9996a0e91a6239a2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ecf07a67d0e8cc33b780783d9996a0e91a6239a2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ecf07a67d0e8cc33b780783d9996a0e91a6239a2/comments", "author": null, "committer": null, "parents": [{"sha": "68a559809331d754474191b2272cc7e4a960b65c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68a559809331d754474191b2272cc7e4a960b65c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/68a559809331d754474191b2272cc7e4a960b65c"}], "stats": {"total": 31, "additions": 31, "deletions": 0}, "files": [{"sha": "a6567999839424443e3943406a12ce2fd7f6b0e9", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecf07a67d0e8cc33b780783d9996a0e91a6239a2/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecf07a67d0e8cc33b780783d9996a0e91a6239a2/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=ecf07a67d0e8cc33b780783d9996a0e91a6239a2", "patch": "@@ -1,3 +1,11 @@\n+2012-11-08  Fran\u00e7ois Dumont  <fdumont@gcc.gnu.org>\n+\n+\tPR libstdc++/54075\n+\t* include/bits/hashtable.h (_Hashtable<>::rehash): Reset hash\n+\tpolicy state if no rehash.\n+\t* testsuite/23_containers/unordered_set/modifiers/reserve.cc\n+\t(test02): New.\n+\n 2012-11-08  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* testsuite/23_containers/unordered_multimap/insert/55028-debug.cc:"}, {"sha": "9b2677b098ad19929fed2e048a9f501abee960b6", "filename": "libstdc++-v3/include/bits/hashtable.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecf07a67d0e8cc33b780783d9996a0e91a6239a2/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fhashtable.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecf07a67d0e8cc33b780783d9996a0e91a6239a2/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fhashtable.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fhashtable.h?ref=ecf07a67d0e8cc33b780783d9996a0e91a6239a2", "patch": "@@ -1654,6 +1654,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t  // level.\n \t  _M_rehash_policy._M_prev_resize = 0;\n \t}\n+      else\n+\t// No rehash, restore previous state to keep a consistent state.\n+\t_M_rehash_policy._M_reset(__saved_state);\n     }\n \n   template<typename _Key, typename _Value,"}, {"sha": "41f428a51db1bcd92824a798a741a438212049e3", "filename": "libstdc++-v3/testsuite/23_containers/unordered_set/modifiers/reserve.cc", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecf07a67d0e8cc33b780783d9996a0e91a6239a2/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_set%2Fmodifiers%2Freserve.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecf07a67d0e8cc33b780783d9996a0e91a6239a2/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_set%2Fmodifiers%2Freserve.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_set%2Fmodifiers%2Freserve.cc?ref=ecf07a67d0e8cc33b780783d9996a0e91a6239a2", "patch": "@@ -40,8 +40,28 @@ void test01()\n     }\n }\n \n+void test02()\n+{\n+  const int N = 1000;\n+\n+  typedef std::unordered_set<int> Set;\n+  Set s;\n+  s.reserve(N);\n+  s.reserve(N);\n+\n+  std::size_t bkts = s.bucket_count();\n+  for (int i = 0; i != N; ++i)\n+    {\n+      s.insert(i);\n+      // As long as we insert less than the reserved number of elements we\n+      // shouldn't experiment any rehash.\n+      VERIFY( s.bucket_count() == bkts );\n+    }\n+}\n+\n int main()\n {\n   test01();\n+  test02();\n   return 0;\n }"}]}