{"sha": "aeb10f8d2a6e1267c981a62dc8163af3b7607797", "node_id": "C_kwDOANBUbNoAKGFlYjEwZjhkMmE2ZTEyNjdjOTgxYTYyZGM4MTYzYWYzYjc2MDc3OTc", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2021-10-27T16:22:16Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2021-10-27T18:15:00Z"}, "message": "Kill known equivalences before a new assignment in the path solver.\n\nEvery time we have a killing statement, we must also kill the relations\nseen so far.  This is similar to what we did for the equivs inherent in\nPHIs along a path.\n\nTested on x86-64 and ppc64le Linux.\n\ngcc/ChangeLog:\n\n\t* gimple-range-path.cc\n\t(path_range_query::range_defined_in_block): Call killing_def.", "tree": {"sha": "00fcd3989eab2d835a6c1ae900994f804df50332", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/00fcd3989eab2d835a6c1ae900994f804df50332"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aeb10f8d2a6e1267c981a62dc8163af3b7607797", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aeb10f8d2a6e1267c981a62dc8163af3b7607797", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aeb10f8d2a6e1267c981a62dc8163af3b7607797", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aeb10f8d2a6e1267c981a62dc8163af3b7607797/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2f0b6a971a051f6e687a15dd2fa4bf431381e551", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f0b6a971a051f6e687a15dd2fa4bf431381e551", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2f0b6a971a051f6e687a15dd2fa4bf431381e551"}], "stats": {"total": 10, "additions": 8, "deletions": 2}, "files": [{"sha": "d8c2a9b6a86308f0091ca92c2c6f007c118d14b9", "filename": "gcc/gimple-range-path.cc", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aeb10f8d2a6e1267c981a62dc8163af3b7607797/gcc%2Fgimple-range-path.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aeb10f8d2a6e1267c981a62dc8163af3b7607797/gcc%2Fgimple-range-path.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-range-path.cc?ref=aeb10f8d2a6e1267c981a62dc8163af3b7607797", "patch": "@@ -288,8 +288,14 @@ path_range_query::range_defined_in_block (irange &r, tree name, basic_block bb)\n \n   if (gimple_code (def_stmt) == GIMPLE_PHI)\n     ssa_range_in_phi (r, as_a<gphi *> (def_stmt));\n-  else if (!range_of_stmt (r, def_stmt, name))\n-    r.set_varying (TREE_TYPE (name));\n+  else\n+    {\n+      if (name)\n+\tget_path_oracle ()->killing_def (name);\n+\n+      if (!range_of_stmt (r, def_stmt, name))\n+\tr.set_varying (TREE_TYPE (name));\n+    }\n \n   if (bb)\n     m_non_null.adjust_range (r, name, bb);"}]}