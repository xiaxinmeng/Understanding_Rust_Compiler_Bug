{"sha": "1207ac677d44f3d8480cb764a2cf6bc60debd850", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTIwN2FjNjc3ZDQ0ZjNkODQ4MGNiNzY0YTJjZjZiYzYwZGViZDg1MA==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@codesourcery.com", "date": "2007-07-28T23:46:26Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2007-07-28T23:46:26Z"}, "message": "gfortran.h, [...]: Fix comment typos.\n\n\t* gfortran.h, interface.c, resolve.c, symbol.c: Fix comment\n\ttypos.\n\t* intrinsic.texi, invoke.texi: Fix typos.\n\nFrom-SVN: r127029", "tree": {"sha": "2115dade0b2742dcbb00cb45718ae324eb28bb55", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2115dade0b2742dcbb00cb45718ae324eb28bb55"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1207ac677d44f3d8480cb764a2cf6bc60debd850", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1207ac677d44f3d8480cb764a2cf6bc60debd850", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1207ac677d44f3d8480cb764a2cf6bc60debd850", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1207ac677d44f3d8480cb764a2cf6bc60debd850/comments", "author": null, "committer": null, "parents": [{"sha": "e417e594f101bd10bca2cf33f3b7572a98e19a8f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e417e594f101bd10bca2cf33f3b7572a98e19a8f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e417e594f101bd10bca2cf33f3b7572a98e19a8f"}], "stats": {"total": 18, "additions": 12, "deletions": 6}, "files": [{"sha": "8563b1df525cfe1c4e37fa5de9442091c82b6e82", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1207ac677d44f3d8480cb764a2cf6bc60debd850/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1207ac677d44f3d8480cb764a2cf6bc60debd850/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=1207ac677d44f3d8480cb764a2cf6bc60debd850", "patch": "@@ -1,3 +1,9 @@\n+2007-07-28  Kazu Hirata  <kazu@codesourcery.com>\n+\n+\t* gfortran.h, interface.c, resolve.c, symbol.c: Fix comment\n+\ttypos.\n+\t* intrinsic.texi, invoke.texi: Fix typos.\n+\n 2007-07-28  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n \tPR fortran/31609"}, {"sha": "0be73851021ea2a9c81071aad003a6ce71e6631a", "filename": "gcc/fortran/gfortran.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1207ac677d44f3d8480cb764a2cf6bc60debd850/gcc%2Ffortran%2Fgfortran.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1207ac677d44f3d8480cb764a2cf6bc60debd850/gcc%2Ffortran%2Fgfortran.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fgfortran.h?ref=1207ac677d44f3d8480cb764a2cf6bc60debd850", "patch": "@@ -157,7 +157,7 @@ typedef enum\n { FORM_FREE, FORM_FIXED, FORM_UNKNOWN }\n gfc_source_form;\n \n-/* Basic types.  BT_VOID is used by ISO C BInding so funcs like c_f_pointer\n+/* Basic types.  BT_VOID is used by ISO C Binding so funcs like c_f_pointer\n    can take any arg with the pointer attribute as a param.  */\n typedef enum\n { BT_UNKNOWN = 1, BT_INTEGER, BT_REAL, BT_COMPLEX,"}, {"sha": "4160fd6a5e4c509cc195f6f1033caaff209bcb37", "filename": "gcc/fortran/interface.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1207ac677d44f3d8480cb764a2cf6bc60debd850/gcc%2Ffortran%2Finterface.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1207ac677d44f3d8480cb764a2cf6bc60debd850/gcc%2Ffortran%2Finterface.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Finterface.c?ref=1207ac677d44f3d8480cb764a2cf6bc60debd850", "patch": "@@ -1400,7 +1400,7 @@ get_sym_storage_size (gfc_symbol *sym)\n \n /* Returns the storage size of an expression (actual argument) or\n    zero if it cannot be determined. For an array element, it returns\n-   the remaing size as the element sequence consists of all storage\n+   the remaining size as the element sequence consists of all storage\n    units of the actual argument up to the end of the array.  */\n \n static unsigned long"}, {"sha": "42b5e3f7fbc028a8c730646283aa4fc4f0f0278b", "filename": "gcc/fortran/intrinsic.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1207ac677d44f3d8480cb764a2cf6bc60debd850/gcc%2Ffortran%2Fintrinsic.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1207ac677d44f3d8480cb764a2cf6bc60debd850/gcc%2Ffortran%2Fintrinsic.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fintrinsic.texi?ref=1207ac677d44f3d8480cb764a2cf6bc60debd850", "patch": "@@ -2082,7 +2082,7 @@ Inquiry function\n \n @item @emph{Arguments}:\n @multitable @columnfractions .15 .70\n-@item @var{x} @tab Associated scalar pointer or interoperatable scalar\n+@item @var{x} @tab Associated scalar pointer or interoperable scalar\n \t\t   or allocated allocatable variable with @code{TARGET}\n \t\t   attribute.\n @end multitable"}, {"sha": "0ec9a9a53a71cf4aa63c0a1ab250e5dc56e89c69", "filename": "gcc/fortran/invoke.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1207ac677d44f3d8480cb764a2cf6bc60debd850/gcc%2Ffortran%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1207ac677d44f3d8480cb764a2cf6bc60debd850/gcc%2Ffortran%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Finvoke.texi?ref=1207ac677d44f3d8480cb764a2cf6bc60debd850", "patch": "@@ -450,7 +450,7 @@ check that the declared interfaces are consistent across program units.\n \n @item -Wnonstd-intrinsics\n @opindex @code{Wnonstd-intrinsics}\n-@cindex warnings, non-stdandard intrinsics\n+@cindex warnings, non-standard intrinsics\n Warn if the user tries to use an intrinsic that does not belong to the \n standard the user has chosen via the @option{-std} option.\n "}, {"sha": "afa1ed831193272e034b7f8784417685ab141364", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1207ac677d44f3d8480cb764a2cf6bc60debd850/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1207ac677d44f3d8480cb764a2cf6bc60debd850/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=1207ac677d44f3d8480cb764a2cf6bc60debd850", "patch": "@@ -2394,7 +2394,7 @@ gfc_iso_c_sub_interface (gfc_code *c, gfc_symbol *sym)\n     }\n   else if (sym->intmod_sym_id == ISOCBINDING_ASSOCIATED)\n     {\n-      /* TODO: Figure out if this is even reacable; this part of the\n+      /* TODO: Figure out if this is even reachable; this part of the\n          conditional may not be necessary.  */\n       int num_args = 0;\n       if (c->ext.actual->next == NULL)"}, {"sha": "bee66ede0a4ce177653a56534ada39f0271ecfc1", "filename": "gcc/fortran/symbol.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1207ac677d44f3d8480cb764a2cf6bc60debd850/gcc%2Ffortran%2Fsymbol.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1207ac677d44f3d8480cb764a2cf6bc60debd850/gcc%2Ffortran%2Fsymbol.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fsymbol.c?ref=1207ac677d44f3d8480cb764a2cf6bc60debd850", "patch": "@@ -3454,7 +3454,7 @@ gen_shape_param (gfc_formal_arglist **head,\n      of BT_INTEGER type.  */\n   param_sym->ts.type = BT_VOID;\n \n-  /* Initialize the kind to default integer.  However, it will be overriden\n+  /* Initialize the kind to default integer.  However, it will be overridden\n      during resolution to match the kind of the SHAPE parameter given as\n      the actual argument (to allow for any valid integer kind).  */\n   param_sym->ts.kind = gfc_default_integer_kind;   "}]}