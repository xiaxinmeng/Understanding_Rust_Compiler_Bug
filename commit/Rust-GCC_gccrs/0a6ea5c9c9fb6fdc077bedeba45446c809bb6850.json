{"sha": "0a6ea5c9c9fb6fdc077bedeba45446c809bb6850", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGE2ZWE1YzljOWZiNmZkYzA3N2JlZGViYTQ1NDQ2YzgwOWJiNjg1MA==", "commit": {"author": {"name": "Meador Inge", "email": "meadori@codesourcery.com", "date": "2013-08-30T16:36:46Z"}, "committer": {"name": "Meador Inge", "email": "meadori@gcc.gnu.org", "date": "2013-08-30T16:36:46Z"}, "message": "tree-vrp.c (check_array_ref): Bail out on zero-length arrays.\n\ngcc/\n\n2013-08-30  Meador Inge  <meadori@codesourcery.com>\n\n\t* tree-vrp.c (check_array_ref): Bail out on zero-length arrays.\n\ngcc/testsuite/\n\n2013-08-30  Meador Inge  <meadori@codesourcery.com>\n\n\t* gcc.dg/Warray-bounds-11.c: New testcase.\n\nFrom-SVN: r202115", "tree": {"sha": "e4bdf9b8eefe7d0700bc6cb490ad32d9a3766dae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e4bdf9b8eefe7d0700bc6cb490ad32d9a3766dae"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0a6ea5c9c9fb6fdc077bedeba45446c809bb6850", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a6ea5c9c9fb6fdc077bedeba45446c809bb6850", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0a6ea5c9c9fb6fdc077bedeba45446c809bb6850", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a6ea5c9c9fb6fdc077bedeba45446c809bb6850/comments", "author": {"login": "meadori", "id": 296965, "node_id": "MDQ6VXNlcjI5Njk2NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/296965?v=4", "gravatar_id": "", "url": "https://api.github.com/users/meadori", "html_url": "https://github.com/meadori", "followers_url": "https://api.github.com/users/meadori/followers", "following_url": "https://api.github.com/users/meadori/following{/other_user}", "gists_url": "https://api.github.com/users/meadori/gists{/gist_id}", "starred_url": "https://api.github.com/users/meadori/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/meadori/subscriptions", "organizations_url": "https://api.github.com/users/meadori/orgs", "repos_url": "https://api.github.com/users/meadori/repos", "events_url": "https://api.github.com/users/meadori/events{/privacy}", "received_events_url": "https://api.github.com/users/meadori/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "de5a5fa1395db2cb5da4d0593fef40ec22378576", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de5a5fa1395db2cb5da4d0593fef40ec22378576", "html_url": "https://github.com/Rust-GCC/gccrs/commit/de5a5fa1395db2cb5da4d0593fef40ec22378576"}], "stats": {"total": 25, "additions": 23, "deletions": 2}, "files": [{"sha": "cbc6f8bd54f86d03d95d6a5456ad2ad635cc250e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a6ea5c9c9fb6fdc077bedeba45446c809bb6850/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a6ea5c9c9fb6fdc077bedeba45446c809bb6850/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0a6ea5c9c9fb6fdc077bedeba45446c809bb6850", "patch": "@@ -1,3 +1,7 @@\n+2013-08-30  Meador Inge  <meadori@codesourcery.com>\n+\n+\t* tree-vrp.c (check_array_ref): Bail out on zero-length arrays.\n+\n 2013-08-30  Marek Polacek  <polacek@redhat.com>\n \n \t* Makefile.in (ubsan.o): Add."}, {"sha": "144a6e60833b666595c46441de260718086941f0", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a6ea5c9c9fb6fdc077bedeba45446c809bb6850/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a6ea5c9c9fb6fdc077bedeba45446c809bb6850/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0a6ea5c9c9fb6fdc077bedeba45446c809bb6850", "patch": "@@ -1,3 +1,7 @@\n+2013-08-30  Meador Inge  <meadori@codesourcery.com>\n+\n+\t* gcc.dg/Warray-bounds-11.c: New testcase.\n+\n 2013-08-30  Marek Polacek  <polacek@redhat.com>\n \n \t* g++.dg/ubsan/div-by-zero-1.C: New test."}, {"sha": "130175d745f56fbb15db10d0c4763b870f76ef7a", "filename": "gcc/testsuite/gcc.dg/Warray-bounds-11.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a6ea5c9c9fb6fdc077bedeba45446c809bb6850/gcc%2Ftestsuite%2Fgcc.dg%2FWarray-bounds-11.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a6ea5c9c9fb6fdc077bedeba45446c809bb6850/gcc%2Ftestsuite%2Fgcc.dg%2FWarray-bounds-11.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2FWarray-bounds-11.c?ref=0a6ea5c9c9fb6fdc077bedeba45446c809bb6850", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -Warray-bounds -std=gnu99\" } */\n+/* Test zero-length arrays for GNU C.  */\n+\n+unsigned int a[] = { };\n+unsigned int size_a;\n+\n+int test(void)\n+{\n+  /* This should not warn.  */\n+  return size_a ? a[0] : 0;\n+}"}, {"sha": "062e03c5c4351af3b067541ef4485e6d93e26261", "filename": "gcc/tree-vrp.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a6ea5c9c9fb6fdc077bedeba45446c809bb6850/gcc%2Ftree-vrp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a6ea5c9c9fb6fdc077bedeba45446c809bb6850/gcc%2Ftree-vrp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vrp.c?ref=0a6ea5c9c9fb6fdc077bedeba45446c809bb6850", "patch": "@@ -6137,9 +6137,10 @@ check_array_ref (location_t location, tree ref, bool ignore_off_by_one)\n   low_sub = up_sub = TREE_OPERAND (ref, 1);\n   up_bound = array_ref_up_bound (ref);\n \n-  /* Can not check flexible arrays.  */\n+  /* Can not check flexible arrays or zero-length arrays.  */\n   if (!up_bound\n-      || TREE_CODE (up_bound) != INTEGER_CST)\n+      || TREE_CODE (up_bound) != INTEGER_CST\n+      || tree_int_cst_equal (up_bound, integer_minus_one_node))\n     return;\n \n   /* Accesses to trailing arrays via pointers may access storage"}]}