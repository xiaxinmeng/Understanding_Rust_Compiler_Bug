{"sha": "5bbe2d409cd4003330ff6ba3c767c484ad98d6df", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWJiZTJkNDA5Y2Q0MDAzMzMwZmY2YmEzYzc2N2M0ODRhZDk4ZDZkZg==", "commit": {"author": {"name": "Richard Earnshaw", "email": "erich@gnu.org", "date": "1994-07-12T13:31:10Z"}, "committer": {"name": "Richard Earnshaw", "email": "erich@gnu.org", "date": "1994-07-12T13:31:10Z"}, "message": "(reversible_cc_register): New function.\n\n(final_prescan_insn): Don't try to conditionalize jumps with JUMP_CLOB\nattribute.\n\nFrom-SVN: r7739", "tree": {"sha": "cd0a15672ad0e2348983298c3b4656248ee6acfe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cd0a15672ad0e2348983298c3b4656248ee6acfe"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5bbe2d409cd4003330ff6ba3c767c484ad98d6df", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5bbe2d409cd4003330ff6ba3c767c484ad98d6df", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5bbe2d409cd4003330ff6ba3c767c484ad98d6df", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5bbe2d409cd4003330ff6ba3c767c484ad98d6df/comments", "author": null, "committer": null, "parents": [{"sha": "5244db056ba9d864cb79d780e4be2b579068dfd5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5244db056ba9d864cb79d780e4be2b579068dfd5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5244db056ba9d864cb79d780e4be2b579068dfd5"}], "stats": {"total": 35, "additions": 33, "deletions": 2}, "files": [{"sha": "5ddb7c244356d092c1f79c31f480e9ee95a2c81d", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 33, "deletions": 2, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5bbe2d409cd4003330ff6ba3c767c484ad98d6df/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5bbe2d409cd4003330ff6ba3c767c484ad98d6df/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=5bbe2d409cd4003330ff6ba3c767c484ad98d6df", "patch": "@@ -1253,7 +1253,32 @@ cc_register (x, mode)\n \n   return FALSE;\n }\n-       \n+\n+/* Return TRUE if this is the condition code register, if we aren't given\n+   a mode, accept any mode in class CC_MODE that is reversible */\n+\n+int\n+reversible_cc_register (x, mode)\n+     rtx x;\n+     enum machine_mode mode;\n+{\n+  if (mode == VOIDmode)\n+    {\n+      mode = GET_MODE (x);\n+      if (GET_MODE_CLASS (mode) != MODE_CC\n+\t  && GET_CODE (x) == REG && REGNO (x) == 24)\n+\tabort ();\n+      if (GET_MODE_CLASS (mode) != MODE_CC\n+\t  || (! flag_fast_math && ! REVERSIBLE_CC_MODE (mode)))\n+\treturn FALSE;\n+    }\n+\n+  if (mode == GET_MODE (x) && GET_CODE (x) == REG && REGNO (x) == 24)\n+    return TRUE;\n+\n+  return FALSE;\n+}\n+\n enum rtx_code\n minmax_code (x)\n      rtx x;\n@@ -3460,7 +3485,13 @@ final_prescan_insn (insn, opvec, noperands)\n       rtx this_insn = start_insn, label = 0;\n \n       if (get_attr_conds (insn) == CONDS_JUMP_CLOB)\n-\tjump_clobbers = 1;\n+\t{\n+\t  /* The code below is wrong for these, and I haven't time to\n+\t     fix it now.  So we just do the safe thing and return.  This\n+\t     whole function needs re-writing anyway.  */\n+\t  jump_clobbers = 1;\n+\t  return;\n+\t}\n       \n       /* Register the insn jumped to.  */\n       if (reverse)"}]}