{"sha": "9e81cc8bdec038bfed40030f487580437d2d6f66", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWU4MWNjOGJkZWMwMzhiZmVkNDAwMzBmNDg3NTgwNDM3ZDJkNmY2Ng==", "commit": {"author": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2012-11-14T16:41:21Z"}, "committer": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2012-11-14T16:41:21Z"}, "message": "configure.ac (HAVE_LD_LARGE_TOC): Add AIX test.\n\n        * configure.ac (HAVE_LD_LARGE_TOC): Add AIX test.\n        * configure: Regenerated.\n        * config/rs6000/aix61.h (SUBTARGET_OVERRIDE_OPTIONS): Warn if\n        other toc options used with cmodel. Disable TARGET_NO_FP_IN_TOC\n        and TARGET_NO_SUM_IN_TOC if not CMODEL_SMALL. CMODEL_MEDIUM means\n        CMODEL_LARGE on AIX.\n        (ASM_SPEC): -mvsx implies -mpwr6. Add -many.\n        (ASM_DEFAULT_SPEC): Use -mpwr4.\n        (TARGET_CMODEL): Define.\n        (SET_CMODEL): Define.\n        * config/rs6000/rs6000.md (largetoc_high_aix<mode>): New.\n        (largetoc_high_plus_aix<mode>): New.\n        (largetoc_low<mode>): Change to mode iterator. Test TARGET_TOC\n        instead of TARGET_ELF.\n        (tocref): Remove TARGET_ELF test.\n        * config/rs6000/rs6000.c (output_toc): Use [TE] for large TOC\n        symbols on AIX.\n        * config/rs6000/aix64.opt (mcmodel): New.\n\nFrom-SVN: r193502", "tree": {"sha": "c71692baa6ca664efa39787ea6398cc4fcbb3ed8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c71692baa6ca664efa39787ea6398cc4fcbb3ed8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9e81cc8bdec038bfed40030f487580437d2d6f66", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e81cc8bdec038bfed40030f487580437d2d6f66", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e81cc8bdec038bfed40030f487580437d2d6f66", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e81cc8bdec038bfed40030f487580437d2d6f66/comments", "author": null, "committer": null, "parents": [{"sha": "4a3d0b10a2b64ff78a6448240afe89c2b8d68076", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a3d0b10a2b64ff78a6448240afe89c2b8d68076", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4a3d0b10a2b64ff78a6448240afe89c2b8d68076"}], "stats": {"total": 255, "additions": 205, "deletions": 50}, "files": [{"sha": "ebebb1d56ea4c5144ca378d1c7e1fb2161de3a58", "filename": "gcc/ChangeLog", "status": "modified", "additions": 62, "deletions": 41, "changes": 103, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e81cc8bdec038bfed40030f487580437d2d6f66/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e81cc8bdec038bfed40030f487580437d2d6f66/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9e81cc8bdec038bfed40030f487580437d2d6f66", "patch": "@@ -1,3 +1,24 @@\n+2012-11-14  David Edelsohn  <dje.gcc@gmail.com>\n+\n+\t* configure.ac (HAVE_LD_LARGE_TOC): Add AIX test.\n+\t* configure: Regenerated.\n+\t* config/rs6000/aix61.h (SUBTARGET_OVERRIDE_OPTIONS): Warn if\n+\tother toc options used with cmodel. Disable TARGET_NO_FP_IN_TOC\n+\tand TARGET_NO_SUM_IN_TOC if not CMODEL_SMALL. CMODEL_MEDIUM means\n+\tCMODEL_LARGE on AIX.\n+\t(ASM_SPEC): -mvsx implies -mpwr6. Add -many.\n+\t(ASM_DEFAULT_SPEC): Use -mpwr4.\n+\t(TARGET_CMODEL): Define.\n+\t(SET_CMODEL): Define.\n+\t* config/rs6000/rs6000.md (largetoc_high_aix<mode>): New.\n+\t(largetoc_high_plus_aix<mode>): New.\n+\t(largetoc_low<mode>): Change to mode iterator. Test TARGET_TOC\n+\tinstead of TARGET_ELF.\n+\t(tocref): Remove TARGET_ELF test.\n+\t* config/rs6000/rs6000.c (output_toc): Use [TE] for large TOC\n+\tsymbols on AIX.\n+\t* config/rs6000/aix64.opt (mcmodel): New.\n+\n 2012-11-14  Andreas Tobler  <andreast@fgznet.ch>\n \n \t* config/i386/i386.c (ix86_get_function_versions_dispatcher): Guard\n@@ -640,17 +661,17 @@\n \t* config/i386/i386.c (ix86_function_ok_for_sibcall): Put back exception\n \tto make a sibcall if one of the functions has void return type.\n \n-2012-11-07  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n+2012-11-07  Manuel L\u00c3\u00b3pez-Ib\u00c3\u00a1\u00c3\u00b1ez  <manu@gcc.gnu.org>\n \n \tPR c/53063\n \t* doc/invoke.texi (Wformat): Update.\n \n-2012-11-07  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n+2012-11-07  Manuel L\u00c3\u00b3pez-Ib\u00c3\u00a1\u00c3\u00b1ez  <manu@gcc.gnu.org>\n \n \t* optc-gen.awk: Factor code out to...\n \t* opt-functions.awk (lang_enabled_by): ... this new function.\n \n-2012-11-07  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n+2012-11-07  Manuel L\u00c3\u00b3pez-Ib\u00c3\u00a1\u00c3\u00b1ez  <manu@gcc.gnu.org>\n \n \tPR c/53063\n \t* common.opt (Wswitch,Wswitch-default,Wswitch-enum): Move to c.opt.\n@@ -1778,7 +1799,7 @@\n \n \t* expmed.c (store_bit_field_1): Remove test for BLKmode values.\n \n-2012-10-31  Ralf Cors\u00e9pius  <ralf.corsepius@rtems.org>,\n+2012-10-31  Ralf Cors\u00c3\u00a9pius  <ralf.corsepius@rtems.org>,\n \t    Joel Sherrill  <joel.sherrill@oarcorp.com>\n \n \t* config/sparc/t-rtems: New (Custom multilibs).\n@@ -1991,7 +2012,7 @@\n \t* lra-spills.c: Likewise.\n \t* lra.c: Likewise.\n \n-2012-10-29  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n+2012-10-29  Manuel L\u00c3\u00b3pez-Ib\u00c3\u00a1\u00c3\u00b1ez  <manu@gcc.gnu.org>\n \n \tPR c/53066\n \t* tree.h (FUNCTION_POINTER_TYPE_P): New.\n@@ -2302,7 +2323,7 @@\n \t* config/i386/x86intrin.h: Include\n \txsaveintrin.h, fxsrintrin.h, xsaveoptintrin.h.\n \n-2012-10-26  Ralf Cors\u00e9pius  <ralf.corsepius@rtems.org>\n+2012-10-26  Ralf Cors\u00c3\u00a9pius  <ralf.corsepius@rtems.org>\n \n \t* config/avr/t-rtems: Revert previous commit.\n \n@@ -2358,7 +2379,7 @@\n \t* lra-constraints.c (check_and_process_move): Remove #if\n \tENABLE_ASSERT_CHECKING.\n \n-2012-10-26  Ralf Cors\u00e9pius  <ralf.corsepius@rtems.org>\n+2012-10-26  Ralf Cors\u00c3\u00a9pius  <ralf.corsepius@rtems.org>\n \n \t* config/avr/rtems.h (TARGET_OS_CPP_BUILTINS): Remove\n \t__USE_INIT_FINI__.\n@@ -2413,7 +2434,7 @@\n \t* lra-assigns.c (assign_by_spills): Add non-reload pseudos\n \tassigned to hard register to changed_pseudo_bitmap.\n \n-2012-10-25  Ralf Cors\u00e9pius  <ralf.corsepius@rtems.org>\n+2012-10-25  Ralf Cors\u00c3\u00a9pius  <ralf.corsepius@rtems.org>\n \n \t* config.gcc (microblaze*-*-rtems*): New target.\n \t* config/microblaze/rtems.h: New.\n@@ -2467,7 +2488,7 @@\n \t* config/rs6000/rs6000.c (rs6000_density_test): Use dump_enabled_p\n \tinstead of dump_kind_p.\n \n-2012-10-24  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n+2012-10-24  Manuel L\u00c3\u00b3pez-Ib\u00c3\u00a1\u00c3\u00b1ez  <manu@gcc.gnu.org>\n \n \tPR c++/54928\n \t* tree-diagnostic.c (maybe_unwind_expanded_macro_loc):\n@@ -3128,7 +3149,7 @@\n \t* loop-iv.c (iv_number_of_iterations): Record the upper bound\n \tonly if there are no further conditions on it.\n \n-2012-10-20  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n+2012-10-20  Manuel L\u00c3\u00b3pez-Ib\u00c3\u00a1\u00c3\u00b1ez  <manu@gcc.gnu.org>\n \n \tPR c/53063\n \tPR c/40989\n@@ -3765,7 +3786,7 @@\n \tout of ...\n \t(forwarder_block_p): ... here.\n \n-2012-10-16  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n+2012-10-16  Manuel L\u00c3\u00b3pez-Ib\u00c3\u00a1\u00c3\u00b1ez  <manu@gcc.gnu.org>\n \n \tPR c/53063\n \tPR c/40989\n@@ -3776,7 +3797,7 @@\n \t* opts.c (finish_options): Do not handle them explicitly.\n \t* opt-functions.awk (search_var_name): New.\n \n-2012-10-16  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n+2012-10-16  Manuel L\u00c3\u00b3pez-Ib\u00c3\u00a1\u00c3\u00b1ez  <manu@gcc.gnu.org>\n \n \tPR c/53063\n \tPR c/40989\n@@ -7180,7 +7201,7 @@\n \tand -meb.\n \n 2012-09-13  Paolo Carlini  <paolo.carlini@oracle.com>\n-\t    Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n+\t    Manuel L\u00c3\u00b3pez-Ib\u00c3\u00a1\u00c3\u00b1ez  <manu@gcc.gnu.org>\n \n \tPR c++/53210\n \t* doc/invoke.texi ([Winit-self]): Document as enabled by -Wall in C++.\n@@ -8685,7 +8706,7 @@\n \tPR rtl-optimization/54088\n \t* jump.c (delete_related_insns): Robustify latest change.\n \n-2012-08-25  Ricardo Catalinas Jim\u00e9nez  <jimenezrick@gmail.com>\n+2012-08-25  Ricardo Catalinas Jim\u00c3\u00a9nez  <jimenezrick@gmail.com>\n \n \t* doc/extend.texi (__atomic Builtins): Remove space before comma.\n \n@@ -14438,7 +14459,7 @@\n \t(ASM_SPEC): Pass mcu options to the assembler.\n \t* doc/invoke.texi (MIPS Options): Document -mmcu and -mno-mcu.\n \n-2012-07-18  Ralf Cors\u00e9pius  <ralf.corsepius@rtems.org>\n+2012-07-18  Ralf Cors\u00c3\u00a9pius  <ralf.corsepius@rtems.org>\n \n \t* config.gcc (v850-*-rtems*): New target.\n \t* config/v850/rtems.h: New.\n@@ -17184,7 +17205,7 @@\n \t* tree-inline.c (estimate_num_insns): Estimate call cost for\n \ttailcalls properly.\n \n-2012-06-20  R\u00fcdiger Sonderfeld  <ruediger@c-plusplus.de>\n+2012-06-20  R\u00c3\u00bcdiger Sonderfeld  <ruediger@c-plusplus.de>\n \n \t* tree.h (DECL_SOURCE_COLUMN): New accessor.\n \n@@ -18924,7 +18945,7 @@\n \t(generate_code_for_partition): Generate code according\n \tto partition classification.\n \n-2012-06-01  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n+2012-06-01  Manuel L\u00c3\u00b3pez-Ib\u00c3\u00a1\u00c3\u00b1ez  <manu@gcc.gnu.org>\n \t    Jonathan Wakely  <jwakely.gcc@gmail.com>\n \n \tPR c++/50134\n@@ -20430,7 +20451,7 @@\n \t(decide_is_variable_needed): Handle externals.\n \t(varpool_remove_unreferenced_decls): Likewise.\n \n-2012-05-17  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n+2012-05-17  Manuel L\u00c3\u00b3pez-Ib\u00c3\u00a1\u00c3\u00b1ez  <manu@gcc.gnu.org>\n \n \t* opts.c (common_handle_option): -pedantic-errors enables -Wpedantic.\n \t(enable_warning_as_error): Do not special case Wuninitialized.\n@@ -20758,7 +20779,7 @@\n \tstrided loads.\n \t* tree-vect-stmts.c (vect_model_load_cost): Handle strided loads.\n \n-2012-05-14  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n+2012-05-14  Manuel L\u00c3\u00b3pez-Ib\u00c3\u00a1\u00c3\u00b1ez  <manu@gcc.gnu.org>\n \n \tPR 53063\n \t* doc/options.texi: (LangEnabledBy): Document it.\n@@ -20832,7 +20853,7 @@\n \n \t* config/pa/pa.md: Use define_c_enum for \"unspec\" and \"unspecv\".\n \n-2012-05-13  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n+2012-05-13  Manuel L\u00c3\u00b3pez-Ib\u00c3\u00a1\u00c3\u00b1ez  <manu@gcc.gnu.org>\n \n \t* common.opt (Wtype-limits): Use EnabledBy.\n \n@@ -20866,7 +20887,7 @@\n \t(*<code><mode>3): Ditto.\n \t(<code>tf3): Ditto.\n \n-2012-05-13  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n+2012-05-13  Manuel L\u00c3\u00b3pez-Ib\u00c3\u00a1\u00c3\u00b1ez  <manu@gcc.gnu.org>\n \n \t* optc-gen.awk: Error instead of warning for conflicting help.\n \n@@ -20913,7 +20934,7 @@\n \t(delete_tree_ssa): Do not call fini_phinodes.\n \t* tree-flow.h (init_phinodes, fini_phinodes): Remove.\n \n-2012-05-11  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n+2012-05-11  Manuel L\u00c3\u00b3pez-Ib\u00c3\u00a1\u00c3\u00b1ez  <manu@gcc.gnu.org>\n \n \tPR 53063\n \t* doc/options.texi (EnabledBy): Document\n@@ -21113,14 +21134,14 @@\n \t(xop_mulv2div2di3_low): Remove insn_and_split pattern.\n \t(xop_mulv2div2di3_high): Ditto.\n \n-2012-05-09  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n+2012-05-09  Manuel L\u00c3\u00b3pez-Ib\u00c3\u00a1\u00c3\u00b1ez  <manu@gcc.gnu.org>\n \n \tPR c++/53289\n \t* diagnostic.h (diagnostic_context): Add last_location.\n \t* diagnostic.c (diagnostic_initialize): Initialize it.\n \t(diagnostic_show_locus): Use it.\n \n-2012-05-09  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n+2012-05-09  Manuel L\u00c3\u00b3pez-Ib\u00c3\u00a1\u00c3\u00b1ez  <manu@gcc.gnu.org>\n \n \t* doc/extend.texi (Function Attributes): Point xref to section\n \tabout Pragmas.\n@@ -21934,13 +21955,13 @@\n \tSame stands for reloads with type RELOAD_FOR_OUTPUT_ADDRESS and\n \tRELOAD_FOR_OUTADDR_ADDRESS.\n \n-2012-05-04  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n+2012-05-04  Manuel L\u00c3\u00b3pez-Ib\u00c3\u00a1\u00c3\u00b1ez  <manu@gcc.gnu.org>\n \n \tPR c++/24985\n \t* tree-diagnostic.c (maybe_unwind_expanded_macro_loc): Show caret\n \tfor macro expansion.\n \n-2012-05-03  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n+2012-05-03  Manuel L\u00c3\u00b3pez-Ib\u00c3\u00a1\u00c3\u00b1ez  <manu@gcc.gnu.org>\n \n \t* flags.h (flag_permissive): Do not declare.\n \t* diagnostic.c (diagnostic_report_diagnostic): Handle fpermissive\n@@ -22870,15 +22891,15 @@\n \t* config/i386/i386.c (ix86_handle_struct_attribute): Use the proper\n \tpredicate to discriminate types.\n \n-2012-04-30  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n+2012-04-30  Manuel L\u00c3\u00b3pez-Ib\u00c3\u00a1\u00c3\u00b1ez  <manu@gcc.gnu.org>\n \n \t* doc/invoke.texi (Wmissing-format-attribute): Document as an\n \talias of Wsuggest-attribute=format.\n \t* c-typeck.c (convert_for_assignment): Replace\n \tWmissing-format-attribute with Wsuggest-attribute=format.\n \t(digest_init): Likewise.\n \n-2012-04-29  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n+2012-04-29  Manuel L\u00c3\u00b3pez-Ib\u00c3\u00a1\u00c3\u00b1ez  <manu@gcc.gnu.org>\n \n \t* opts.c (finish_options): Do not handle -Wmissing-noreturn here.\n \t* common.opt (Wmissing-noreturn): Alias of\n@@ -22966,7 +22987,7 @@\n \tPR middle-end/27139\n \t* tree-ssa-forwprop.c (combine_conversions): Handle INT->FP->INT.\n \n-2012-04-25  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n+2012-04-25  Manuel L\u00c3\u00b3pez-Ib\u00c3\u00a1\u00c3\u00b1ez  <manu@gcc.gnu.org>\n \n \tPR c/53130\n \t* c-typeck.c (pop_init_level): Use %qD instead of %qT.\n@@ -23128,7 +23149,7 @@\n \t* reload.c (find_reloads): Change the loop nesting when trying an\n \talternative with swapped operands.\n \n-2012-04-26  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n+2012-04-26  Manuel L\u00c3\u00b3pez-Ib\u00c3\u00a1\u00c3\u00b1ez  <manu@gcc.gnu.org>\n \n \t* tree-diagnostic.c (maybe_unwind_expanded_macro_loc): Fix\n \tcomment. Delete unused parameter first_exp_point_map.\n@@ -23262,7 +23283,7 @@\n \tset_nonincremental_init_from_string): Pass true instead of false\n \tas IMPLICIT to add_pending_init.\n \n-2012-04-25  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n+2012-04-25  Manuel L\u00c3\u00b3pez-Ib\u00c3\u00a1\u00c3\u00b1ez  <manu@gcc.gnu.org>\n \n \t* c-typeck.c (pop_init_level): Improve diagnostics.\n \n@@ -23379,7 +23400,7 @@\n \t* config/vxworks.c (vxworks_override_options): Default to strict-dwarf\n \tand dwarf_version 2.\n \n-2012-04-24  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n+2012-04-24  Manuel L\u00c3\u00b3pez-Ib\u00c3\u00a1\u00c3\u00b1ez  <manu@gcc.gnu.org>\n \n \t* tree-pretty-print.h (default_tree_printer): Do not declare.\n \t* tree-diagnostic.c: Include tree-pretty-print.h, tree-pass.h and\n@@ -23663,7 +23684,7 @@\n \tLikewise.\n \t* tree-switch-conversion.c (build_one_array): Likewise.\n \n-2012-04-22  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n+2012-04-22  Manuel L\u00c3\u00b3pez-Ib\u00c3\u00a1\u00c3\u00b1ez  <manu@gcc.gnu.org>\n \n \tPR c/44774\n \t* doc/invoke.texi (pedantic): Rename to Wpedantic.\n@@ -23751,7 +23772,7 @@\n \n \t* fold-const.c (fold_checksum_tree): Fix VECTOR_CST case.\n \n-2012-04-21  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n+2012-04-21  Manuel L\u00c3\u00b3pez-Ib\u00c3\u00a1\u00c3\u00b1ez  <manu@gcc.gnu.org>\n \n \tPR 35441\n \t* c-typeck.c (inform_declaration): New.\n@@ -23938,7 +23959,7 @@\n \n \t* config/arm/sync.md (sync_optab): Change ior attribute to \"or\".\n \n-2012-04-19  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n+2012-04-19  Manuel L\u00c3\u00b3pez-Ib\u00c3\u00a1\u00c3\u00b1ez  <manu@gcc.gnu.org>\n \n \tPR c/52283/37985\n \t* stmt.c (warn_if_unused_value): Skip NOP_EXPR.\n@@ -24168,7 +24189,7 @@\n \t* varpoo.c (varpool_node_name): Remove.\n \t(dump_varpool_node): Use dump_symtab_base; reformat.\n \n-2012-04-18  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n+2012-04-18  Manuel L\u00c3\u00b3pez-Ib\u00c3\u00a1\u00c3\u00b1ez  <manu@gcc.gnu.org>\n \n \t* doc/invoke.texi (Language Independent Options): @item should be\n \tbefore @opindex.\n@@ -25036,7 +25057,7 @@\n \n \t* doc/extend.texi (Type Attributes): Move paragraph.\n \n-2012-04-11  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n+2012-04-11  Manuel L\u00c3\u00b3pez-Ib\u00c3\u00a1\u00c3\u00b1ez  <manu@gcc.gnu.org>\n \n \tPR 24985\n \t* diagnostic.h (show_caret): Declare.\n@@ -25071,7 +25092,7 @@\n \tmanipulation code we are threading through a loop header\n \tto an exit destination.\n \n-2012-04-10  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n+2012-04-10  Manuel L\u00c3\u00b3pez-Ib\u00c3\u00a1\u00c3\u00b1ez  <manu@gcc.gnu.org>\n \n \t* tree.h (warn_if_unused_value): Move declaration from here.\n \t* stmt.c (warn_if_unused_value): Move definition from here.\n@@ -25211,7 +25232,7 @@\n \tcomment block.\n \t(Sr0): Remove unused memory constraint.\n \n-2012-04-08  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n+2012-04-08  Manuel L\u00c3\u00b3pez-Ib\u00c3\u00a1\u00c3\u00b1ez  <manu@gcc.gnu.org>\n \n \t* tree-pretty-print.h: Update comment.\n \n@@ -26738,7 +26759,7 @@\n \t* tree-data-ref.c (subscript_dependence_tester_1): Check\n \tall dimensions for non-conflicting access functions.\n \n-2012-03-15  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n+2012-03-15  Manuel L\u00c3\u00b3pez-Ib\u00c3\u00a1\u00c3\u00b1ez  <manu@gcc.gnu.org>\n \n \tPR c++/44783\n \t* doc/invoke.texi [C++ Language Options]: Document\n@@ -27697,7 +27718,7 @@\n \tin new variable 'empty'.  Increase issue_rate only for\n \tnon-empty insns.\n \n-2012-03-07  Ralf Cors\u00e9pius  <ralf.corsepius@rtems.org>\n+2012-03-07  Ralf Cors\u00c3\u00a9pius  <ralf.corsepius@rtems.org>\n \n \tPR target/51417\n \t* Makefile.in: Let install-gcc-ar depend on installdirs,"}, {"sha": "063cb26e86dd6dbf824f376d821a0b19ab19d23f", "filename": "gcc/config/rs6000/aix61.h", "status": "modified", "additions": 30, "deletions": 2, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e81cc8bdec038bfed40030f487580437d2d6f66/gcc%2Fconfig%2Frs6000%2Faix61.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e81cc8bdec038bfed40030f487580437d2d6f66/gcc%2Fconfig%2Frs6000%2Faix61.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Faix61.h?ref=9e81cc8bdec038bfed40030f487580437d2d6f66", "patch": "@@ -39,6 +39,23 @@ do {\t\t\t\t\t\t\t\t\t\\\n     {\t\t\t\t\t\t\t\t\t\\\n       error (\"-maix64 required: 64-bit computation with 32-bit addressing not yet supported\"); \\\n     }\t\t\t\t\t\t\t\t\t\\\n+  if ((rs6000_isa_flags_explicit\t\t\t\t\t\\\n+       & OPTION_MASK_MINIMAL_TOC) != 0)\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\t\t\\\n+      if (global_options_set.x_rs6000_current_cmodel\t\t\t\\\n+\t  && rs6000_current_cmodel != CMODEL_SMALL)\t\t\t\\\n+\terror (\"-mcmodel incompatible with other toc options\"); \t\\\n+      SET_CMODEL (CMODEL_SMALL);\t\t\t\t\t\\\n+    }\t\t\t\t\t\t\t\t\t\\\n+  if (rs6000_current_cmodel != CMODEL_SMALL)\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\t\t\\\n+      TARGET_NO_FP_IN_TOC = 0;\t\t\t\t\t\t\\\n+      TARGET_NO_SUM_IN_TOC = 0;\t\t\t\t\t\t\\\n+    }\t\t\t\t\t\t\t\t\t\\\n+  if (rs6000_current_cmodel == CMODEL_MEDIUM)\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\t\t\\\n+      rs6000_current_cmodel = CMODEL_LARGE;\t\t\t\t\\\n+    }\t\t\t\t\t\t\t\t\t\\\n } while (0);\n \n #undef ASM_SPEC\n@@ -72,10 +89,12 @@ do {\t\t\t\t\t\t\t\t\t\\\n %{mcpu=620: -m620} \\\n %{mcpu=630: -m620} \\\n %{mcpu=970: -m970} \\\n-%{mcpu=G5: -m970}\"\n+%{mcpu=G5: -m970} \\\n+%{mvsx: %{!mcpu*: -mpwr6}} \\\n+-many\"\n \n #undef\tASM_DEFAULT_SPEC\n-#define ASM_DEFAULT_SPEC \"-mppc\"\n+#define ASM_DEFAULT_SPEC \"-mpwr4\"\n \n #undef TARGET_OS_CPP_BUILTINS\n #define TARGET_OS_CPP_BUILTINS()     \\\n@@ -177,6 +196,15 @@ extern long long int    atoll(const char *);\n /* This target uses the aix64.opt file.  */\n #define TARGET_USES_AIX64_OPT 1\n \n+/* Large TOC Support */\n+#ifdef HAVE_LD_LARGE_TOC\n+#undef TARGET_CMODEL\n+#define TARGET_CMODEL rs6000_current_cmodel\n+#define SET_CMODEL(opt) rs6000_current_cmodel = opt\n+#else\n+#define SET_CMODEL(opt) do {} while (0)\n+#endif\n+\n /* This target defines SUPPORTS_WEAK and TARGET_ASM_NAMED_SECTION,\n    but does not have crtbegin/end.  */\n "}, {"sha": "8acc05beaa53a657b9cf51b1a32efe1f770ff849", "filename": "gcc/config/rs6000/aix64.opt", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e81cc8bdec038bfed40030f487580437d2d6f66/gcc%2Fconfig%2Frs6000%2Faix64.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e81cc8bdec038bfed40030f487580437d2d6f66/gcc%2Fconfig%2Frs6000%2Faix64.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Faix64.opt?ref=9e81cc8bdec038bfed40030f487580437d2d6f66", "patch": "@@ -27,6 +27,23 @@ maix32\n Target Report RejectNegative Negative(maix64) InverseMask(64BIT) Var(rs6000_isa_flags)\n Compile for 32-bit pointers\n \n+mcmodel=\n+Target RejectNegative Joined Enum(rs6000_cmodel) Var(rs6000_current_cmodel)\n+Select code model\n+\n+Enum\n+Name(rs6000_cmodel) Type(enum rs6000_cmodel)\n+Known code models (for use with the -mcmodel= option):\n+\n+EnumValue\n+Enum(rs6000_cmodel) String(small) Value(CMODEL_SMALL)\n+\n+EnumValue\n+Enum(rs6000_cmodel) String(medium) Value(CMODEL_MEDIUM)\n+\n+EnumValue\n+Enum(rs6000_cmodel) String(large) Value(CMODEL_LARGE)\n+\n mpe\n Target Report RejectNegative Var(internal_nothing_1) Save\n Support message passing with the Parallel Environment"}, {"sha": "b37bca935a80b3626e5afe3f20cfd3d57d19ca77", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e81cc8bdec038bfed40030f487580437d2d6f66/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e81cc8bdec038bfed40030f487580437d2d6f66/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=9e81cc8bdec038bfed40030f487580437d2d6f66", "patch": "@@ -22183,7 +22183,11 @@ output_toc (FILE *file, rtx x, int labelno, enum machine_mode mode)\n       else if (offset)\n \tfprintf (file, \".P\" HOST_WIDE_INT_PRINT_UNSIGNED, offset);\n \n-      fputs (\"[TC],\", file);\n+      /* Mark large TOC symbols on AIX with [TE] so they are mapped\n+\t after other TOC symbols, reducing overflow of small TOC access\n+\t to [TC] symbols.  */\n+      fputs (TARGET_XCOFF && TARGET_CMODEL != CMODEL_SMALL\n+\t     ? \"[TE],\" : \"[TC],\", file);\n     }\n \n   /* Currently C++ toc references to vtables can be emitted before it"}, {"sha": "daa16a4fbad13f2a0f2aa5fd6224b7b473882f5d", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 26, "deletions": 6, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e81cc8bdec038bfed40030f487580437d2d6f66/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e81cc8bdec038bfed40030f487580437d2d6f66/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=9e81cc8bdec038bfed40030f487580437d2d6f66", "patch": "@@ -10339,6 +10339,15 @@\n    \"TARGET_ELF && TARGET_CMODEL != CMODEL_SMALL\"\n    \"addis %0,%2,%1@toc@ha\")\n \n+(define_insn \"*largetoc_high_aix<mode>\"\n+  [(set (match_operand:P 0 \"gpc_reg_operand\" \"=b*r\")\n+        (high:P\n+\t  (unspec [(match_operand:P 1 \"\" \"\")\n+\t\t   (match_operand:P 2 \"gpc_reg_operand\" \"b\")]\n+\t\t  UNSPEC_TOCREL)))]\n+   \"TARGET_XCOFF && TARGET_CMODEL != CMODEL_SMALL\"\n+   \"addis %0,%1@u(%2)\")\n+\n (define_insn \"*largetoc_high_plus\"\n   [(set (match_operand:DI 0 \"gpc_reg_operand\" \"=b*r\")\n         (high:DI\n@@ -10350,11 +10359,22 @@\n    \"TARGET_ELF && TARGET_CMODEL != CMODEL_SMALL\"\n    \"addis %0,%2,%1+%3@toc@ha\")\n \n-(define_insn \"*largetoc_low\"\n-  [(set (match_operand:DI 0 \"gpc_reg_operand\" \"=r,r\")\n-        (lo_sum:DI (match_operand:DI 1 \"gpc_reg_operand\" \"b,!*r\")\n-\t           (match_operand:DI 2 \"\" \"\")))]\n-   \"TARGET_ELF && TARGET_CMODEL != CMODEL_SMALL\"\n+(define_insn \"*largetoc_high_plus_aix<mode>\"\n+  [(set (match_operand:P 0 \"gpc_reg_operand\" \"=b*r\")\n+        (high:P\n+\t  (plus:P\n+\t    (unspec [(match_operand:P 1 \"\" \"\")\n+\t\t     (match_operand:P 2 \"gpc_reg_operand\" \"b\")]\n+\t\t    UNSPEC_TOCREL)\n+\t    (match_operand 3 \"const_int_operand\" \"n\"))))]\n+   \"TARGET_XCOFF && TARGET_CMODEL != CMODEL_SMALL\"\n+   \"addis %0,%1+%3@u(%2)\")\n+\n+(define_insn \"*largetoc_low<mode>\"\n+  [(set (match_operand:P 0 \"gpc_reg_operand\" \"=r,r\")\n+        (lo_sum:P (match_operand:P 1 \"gpc_reg_operand\" \"b,!*r\")\n+\t           (match_operand:P 2 \"\" \"\")))]\n+   \"TARGET_TOC && TARGET_CMODEL != CMODEL_SMALL\"\n    \"@\n     addi %0,%1,%2@l\n     addic %0,%1,%2@l\")\n@@ -10364,7 +10384,7 @@\n \t(match_operand:P 1 \"small_toc_ref\" \"R\"))]\n    \"TARGET_TOC\"\n    \"la %0,%a1\"\n-   \"&& TARGET_ELF && TARGET_CMODEL != CMODEL_SMALL && reload_completed\"\n+   \"&& TARGET_CMODEL != CMODEL_SMALL && reload_completed\"\n   [(set (match_dup 0) (high:P (match_dup 1)))\n    (set (match_dup 0) (lo_sum:P (match_dup 0) (match_dup 1)))])\n "}, {"sha": "3f1ca7411c05207b47d10d0a4c344046b7941975", "filename": "gcc/configure", "status": "modified", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e81cc8bdec038bfed40030f487580437d2d6f66/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e81cc8bdec038bfed40030f487580437d2d6f66/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=9e81cc8bdec038bfed40030f487580437d2d6f66", "patch": "@@ -26413,6 +26413,42 @@ $as_echo \"#define HAVE_LD_LARGE_TOC 1\" >>confdefs.h\n     ;;\n esac\n \n+case \"$target\" in\n+  *-*-aix*)\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking linker large toc support\" >&5\n+$as_echo_n \"checking linker large toc support... \" >&6; }\n+if test \"${gcc_cv_ld_large_toc+set}\" = set; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  gcc_cv_ld_large_toc=no\n+    if test x$gcc_cv_as != x ; then\n+      cat > conftest.s <<EOF\n+\t.toc\n+LC..1:\n+\t.tc a[TC],a[RW]\n+\t.extern a[RW]\n+\t.csect .text[PR]\n+.largetoctest:\n+\taddis 9,LC..1@u(2)\n+\tld 3,LC..1@l(9)\n+EOF\n+      if $gcc_cv_as -a64 -o conftest.o conftest.s > /dev/null 2>&1; then\n+        gcc_cv_ld_large_toc=yes\n+      fi\n+      rm -f conftest conftest.o conftest.s\n+    fi\n+\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $gcc_cv_ld_large_toc\" >&5\n+$as_echo \"$gcc_cv_ld_large_toc\" >&6; }\n+    if test x\"$gcc_cv_ld_large_toc\" = xyes; then\n+\n+$as_echo \"#define HAVE_LD_LARGE_TOC 1\" >>confdefs.h\n+\n+    fi\n+    ;;\n+esac\n+\n { $as_echo \"$as_me:${as_lineno-$LINENO}: checking linker --build-id support\" >&5\n $as_echo_n \"checking linker --build-id support... \" >&6; }\n if test \"${gcc_cv_ld_buildid+set}\" = set; then :"}, {"sha": "efddb7a46b31a7d02ddda8c764f7f891b6a27557", "filename": "gcc/configure.ac", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e81cc8bdec038bfed40030f487580437d2d6f66/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e81cc8bdec038bfed40030f487580437d2d6f66/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=9e81cc8bdec038bfed40030f487580437d2d6f66", "patch": "@@ -4496,6 +4496,35 @@ EOF\n     ;;\n esac\n \n+case \"$target\" in\n+  *-*-aix*)\n+    AC_CACHE_CHECK(linker large toc support,\n+    gcc_cv_ld_large_toc,\n+    [gcc_cv_ld_large_toc=no\n+    if test x$gcc_cv_as != x ; then\n+      cat > conftest.s <<EOF\n+\t.toc\n+LC..1:\n+\t.tc a[[TC]],a[[RW]]\n+\t.extern a[[RW]]\n+\t.csect .text[[PR]]\n+.largetoctest:\n+\taddis 9,LC..1@u(2)\n+\tld 3,LC..1@l(9)\n+EOF\n+      if $gcc_cv_as -a64 -o conftest.o conftest.s > /dev/null 2>&1; then\n+        gcc_cv_ld_large_toc=yes\n+      fi\n+      rm -f conftest conftest.o conftest.s\n+    fi\n+    ])\n+    if test x\"$gcc_cv_ld_large_toc\" = xyes; then\n+      AC_DEFINE(HAVE_LD_LARGE_TOC, 1,\n+    [Define if your AIX linker supports a large TOC.])\n+    fi\n+    ;;\n+esac\n+\n AC_CACHE_CHECK(linker --build-id support,\n   gcc_cv_ld_buildid,\n   [gcc_cv_ld_buildid=no"}]}