{"sha": "5ec5b8c17167a5d831310bc80f42ae717998769a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWVjNWI4YzE3MTY3YTVkODMxMzEwYmM4MGY0MmFlNzE3OTk4NzY5YQ==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2005-09-05T07:55:30Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2005-09-05T07:55:30Z"}, "message": "lib-xref.adb (Output_Overridden_Op): Display information on overridden operation.\n\n2005-09-01  Ed Schonberg  <schonberg@adacore.com>\n\t    Emmanuel Briot  <briot@adacore.com>\n\n\t* lib-xref.adb (Output_Overridden_Op): Display information on\n\toverridden operation.\n\n\t* lib-xref.ads: Add documentation on overridden operations.\n\n\t* ali.ads (Xref_Entity_Record): Add support for storing the overriding\n\tinformation.\n\n\t* ali.adb (Get_Typeref): New subprogram. Adds support for parsing the\n\toverriding entity information.\n\nFrom-SVN: r103871", "tree": {"sha": "c874b7e54802e0374f0a07dfecdfa31566aa0ffe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c874b7e54802e0374f0a07dfecdfa31566aa0ffe"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5ec5b8c17167a5d831310bc80f42ae717998769a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ec5b8c17167a5d831310bc80f42ae717998769a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5ec5b8c17167a5d831310bc80f42ae717998769a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ec5b8c17167a5d831310bc80f42ae717998769a/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8e4fe95d949971f4a1afc5072da5a80f4b28b2f0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e4fe95d949971f4a1afc5072da5a80f4b28b2f0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8e4fe95d949971f4a1afc5072da5a80f4b28b2f0"}], "stats": {"total": 258, "additions": 184, "deletions": 74}, "files": [{"sha": "c1ea6c46930870f166279b013c816f7938f25acb", "filename": "gcc/ada/ali.adb", "status": "modified", "additions": 119, "deletions": 71, "changes": 190, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ec5b8c17167a5d831310bc80f42ae717998769a/gcc%2Fada%2Fali.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ec5b8c17167a5d831310bc80f42ae717998769a/gcc%2Fada%2Fali.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fali.adb?ref=5ec5b8c17167a5d831310bc80f42ae717998769a", "patch": "@@ -208,6 +208,16 @@ package body ALI is\n       function Nextc return Character;\n       --  Return current character without modifying pointer P\n \n+      procedure Get_Typeref\n+        (Current_File_Num : Sdep_Id;\n+         Ref             : out Tref_Kind;\n+         File_Num        : out Sdep_Id;\n+         Line            : out Nat;\n+         Ref_Type        : out Character;\n+         Col             : out Nat;\n+         Standard_Entity : out Name_Id);\n+      --  Parse the definition of a typeref (<...>, {...} or (...))\n+\n       procedure Skip_Eol;\n       --  Skip past spaces, then skip past end of line (fatal error if not\n       --  at end of line). Also skips past any following blank lines.\n@@ -537,6 +547,94 @@ package body ALI is\n          return T (P);\n       end Nextc;\n \n+      -----------------\n+      -- Get_Typeref --\n+      -----------------\n+\n+      procedure Get_Typeref\n+        (Current_File_Num : Sdep_Id;\n+         Ref              : out Tref_Kind;\n+         File_Num         : out Sdep_Id;\n+         Line             : out Nat;\n+         Ref_Type         : out Character;\n+         Col              : out Nat;\n+         Standard_Entity  : out Name_Id)\n+      is\n+         N : Nat;\n+      begin\n+         case Nextc is\n+            when '<'    => Ref := Tref_Derived;\n+            when '('    => Ref := Tref_Access;\n+            when '{'    => Ref := Tref_Type;\n+            when others => Ref := Tref_None;\n+         end case;\n+\n+         --  Case of typeref field present\n+\n+         if Ref /= Tref_None then\n+            P := P + 1; -- skip opening bracket\n+\n+            if Nextc in 'a' .. 'z' then\n+               File_Num        := No_Sdep_Id;\n+               Line            := 0;\n+               Ref_Type        := ' ';\n+               Col             := 0;\n+               Standard_Entity := Get_Name (Ignore_Spaces => True);\n+            else\n+               N := Get_Nat;\n+\n+               if Nextc = '|' then\n+                  File_Num := Sdep_Id (N + Nat (First_Sdep_Entry) - 1);\n+                  P := P + 1;\n+                  N := Get_Nat;\n+               else\n+                  File_Num := Current_File_Num;\n+               end if;\n+\n+               Line            := N;\n+               Ref_Type        := Getc;\n+               Col             := Get_Nat;\n+               Standard_Entity := No_Name;\n+            end if;\n+\n+            --  ??? Temporary workaround for nested generics case:\n+            --     4i4 Directories{1|4I9[4|6[3|3]]}\n+            --  See C918-002\n+\n+            declare\n+               Nested_Brackets : Natural := 0;\n+\n+            begin\n+               loop\n+                  case Nextc is\n+                     when '['   =>\n+                        Nested_Brackets := Nested_Brackets + 1;\n+                     when ']' =>\n+                        Nested_Brackets := Nested_Brackets - 1;\n+                     when others =>\n+                        if Nested_Brackets = 0 then\n+                           exit;\n+                        end if;\n+                  end case;\n+\n+                  Skipc;\n+               end loop;\n+            end;\n+\n+            P := P + 1; -- skip closing bracket\n+            Skip_Space;\n+\n+         --  No typeref entry present\n+\n+         else\n+            File_Num        := No_Sdep_Id;\n+            Line            := 0;\n+            Ref_Type        := ' ';\n+            Col             := 0;\n+            Standard_Entity := No_Name;\n+         end if;\n+      end Get_Typeref;\n+\n       --------------\n       -- Skip_Eol --\n       --------------\n@@ -1937,80 +2035,30 @@ package body ALI is\n \n                   --  See if type reference present\n \n-                  case Nextc is\n-                     when '<'    => XE.Tref := Tref_Derived;\n-                     when '('    => XE.Tref := Tref_Access;\n-                     when '{'    => XE.Tref := Tref_Type;\n-                     when others => XE.Tref := Tref_None;\n-                  end case;\n-\n-                  --  Case of typeref field present\n-\n-                  if XE.Tref /= Tref_None then\n-                     P := P + 1; -- skip opening bracket\n-\n-                     if Nextc in 'a' .. 'z' then\n-                        XE.Tref_File_Num        := No_Sdep_Id;\n-                        XE.Tref_Line            := 0;\n-                        XE.Tref_Type            := ' ';\n-                        XE.Tref_Col             := 0;\n-                        XE.Tref_Standard_Entity :=\n-                          Get_Name (Ignore_Spaces => True);\n-\n-                     else\n-                        N := Get_Nat;\n-\n-                        if Nextc = '|' then\n-                           XE.Tref_File_Num :=\n-                             Sdep_Id (N + Nat (First_Sdep_Entry) - 1);\n-                           P := P + 1;\n-                           N := Get_Nat;\n-\n-                        else\n-                           XE.Tref_File_Num := Current_File_Num;\n-                        end if;\n-\n-                        XE.Tref_Line            := N;\n-                        XE.Tref_Type            := Getc;\n-                        XE.Tref_Col             := Get_Nat;\n-                        XE.Tref_Standard_Entity := No_Name;\n-                     end if;\n-\n-                     --  ??? Temporary workaround for nested generics case:\n-                     --     4i4 Directories{1|4I9[4|6[3|3]]}\n-                     --  See C918-002\n-\n+                  Get_Typeref\n+                    (Current_File_Num, XE.Tref, XE.Tref_File_Num, XE.Tref_Line,\n+                     XE.Tref_Type, XE.Tref_Col, XE.Tref_Standard_Entity);\n+\n+                  --  Do we have an overriding procedure, instead ?\n+                  if XE.Tref_Type = 'p' then\n+                     XE.Oref_File_Num := XE.Tref_File_Num;\n+                     XE.Oref_Line     := XE.Tref_Line;\n+                     XE.Oref_Col      := XE.Tref_Col;\n+                     XE.Tref_File_Num := No_Sdep_Id;\n+                     XE.Tref          := Tref_None;\n+                  else\n+                     --  We might have additional information about the\n+                     --  overloaded subprograms\n                      declare\n-                        Nested_Brackets : Natural := 0;\n-\n+                        Ref : Tref_Kind;\n+                        Typ : Character;\n+                        Standard_Entity : Name_Id;\n                      begin\n-                        loop\n-                           case Nextc is\n-                              when '['   =>\n-                                 Nested_Brackets := Nested_Brackets + 1;\n-                              when ']' =>\n-                                 Nested_Brackets := Nested_Brackets - 1;\n-                              when others =>\n-                                 if Nested_Brackets = 0 then\n-                                    exit;\n-                                 end if;\n-                           end case;\n-\n-                           Skipc;\n-                        end loop;\n+                        Get_Typeref\n+                          (Current_File_Num,\n+                           Ref, XE.Oref_File_Num,\n+                           XE.Oref_Line, Typ, XE.Oref_Col, Standard_Entity);\n                      end;\n-\n-                     P := P + 1; -- skip closing bracket\n-                     Skip_Space;\n-\n-                  --  No typeref entry present\n-\n-                  else\n-                     XE.Tref_File_Num        := No_Sdep_Id;\n-                     XE.Tref_Line            := 0;\n-                     XE.Tref_Type            := ' ';\n-                     XE.Tref_Col             := 0;\n-                     XE.Tref_Standard_Entity := No_Name;\n                   end if;\n \n                   XE.First_Xref := Xref.Last + 1;"}, {"sha": "6582a1a19bcbce9ec0cc9b80186d6f6fbed36cad", "filename": "gcc/ada/ali.ads", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ec5b8c17167a5d831310bc80f42ae717998769a/gcc%2Fada%2Fali.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ec5b8c17167a5d831310bc80f42ae717998769a/gcc%2Fada%2Fali.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fali.ads?ref=5ec5b8c17167a5d831310bc80f42ae717998769a", "patch": "@@ -590,7 +590,7 @@ package ALI is\n \n    type No_Dep_Record is record\n       ALI_File : ALI_Id;\n-      --  ALI File containing tne entry\n+      --  ALI File containing the entry\n \n       No_Dep_Unit : Name_Id;\n       --  Id for names table entry including entire name, including periods\n@@ -782,6 +782,16 @@ package ALI is\n       --  entity in package Standard, then this field is a Name_Id\n       --  reference for the entity name.\n \n+      Oref_File_Num : Sdep_Id;\n+      --  This field is set to No_Sdep_Id is the entity doesn't override any\n+      --  other entity, or to the dependency reference for the overriden\n+      --  entity.\n+\n+      Oref_Line : Nat;\n+      Oref_Col  : Nat;\n+      --  These two fields are set to the line and column of the overriden\n+      --  entity.\n+\n       First_Xref : Nat;\n       --  Index into Xref table of first cross-reference\n "}, {"sha": "7260b0cdcc4d4955116321bda5e642b92853e5b5", "filename": "gcc/ada/lib-xref.adb", "status": "modified", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ec5b8c17167a5d831310bc80f42ae717998769a/gcc%2Fada%2Flib-xref.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ec5b8c17167a5d831310bc80f42ae717998769a/gcc%2Fada%2Flib-xref.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-xref.adb?ref=5ec5b8c17167a5d831310bc80f42ae717998769a", "patch": "@@ -1172,6 +1172,10 @@ package body Lib.Xref is\n                --  the given source ptr in [file|line[...]] form. No output\n                --  if the given location is not a generic template reference.\n \n+               procedure Output_Overridden_Op (Old_E : Entity_Id);\n+               --  For a subprogram that is overriding, display information\n+               --  about the inherited operation that it overrides.\n+\n                -------------------------------\n                -- Output_Instantiation_Refs --\n                -------------------------------\n@@ -1212,6 +1216,35 @@ package body Lib.Xref is\n                   return;\n                end Output_Instantiation_Refs;\n \n+               --------------------------\n+               -- Output_Overridden_Op --\n+               --------------------------\n+\n+               procedure Output_Overridden_Op (Old_E : Entity_Id) is\n+               begin\n+                  if Present (Old_E)\n+                    and then Sloc (Old_E) /= Standard_Location\n+                  then\n+                     declare\n+                        Loc      : constant Source_Ptr := Sloc (Old_E);\n+                        Par_Unit : constant Unit_Number_Type :=\n+                                     Get_Source_Unit (Loc);\n+                     begin\n+                        Write_Info_Char ('<');\n+\n+                        if Par_Unit /= Curxu then\n+                           Write_Info_Nat (Dependency_Num (Par_Unit));\n+                           Write_Info_Char ('|');\n+                        end if;\n+\n+                        Write_Info_Nat (Int (Get_Logical_Line_Number (Loc)));\n+                        Write_Info_Char ('p');\n+                        Write_Info_Nat (Int (Get_Column_Number (Loc)));\n+                        Write_Info_Char ('>');\n+                     end;\n+                  end if;\n+               end Output_Overridden_Op;\n+\n             --  Start of processing for Output_One_Ref\n \n             begin\n@@ -1661,6 +1694,15 @@ package body Lib.Xref is\n                         end if;\n                      end if;\n \n+                     --  If the entity is an overriding operation, write\n+                     --  info on operation that was overridden.\n+\n+                     if Is_Subprogram (XE.Ent)\n+                       and then Is_Overriding_Operation (XE.Ent)\n+                     then\n+                        Output_Overridden_Op (Overridden_Operation (XE.Ent));\n+                     end if;\n+\n                      --  End of processing for entity output\n \n                      Crloc := No_Location;"}, {"sha": "154d88e5a2eb90d05086db9f2b4ba2ae71ed683c", "filename": "gcc/ada/lib-xref.ads", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ec5b8c17167a5d831310bc80f42ae717998769a/gcc%2Fada%2Flib-xref.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ec5b8c17167a5d831310bc80f42ae717998769a/gcc%2Fada%2Flib-xref.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-xref.ads?ref=5ec5b8c17167a5d831310bc80f42ae717998769a", "patch": "@@ -28,7 +28,6 @@\n --  information.\n \n with Einfo; use Einfo;\n-with Types; use Types;\n \n package Lib.Xref is\n \n@@ -54,7 +53,7 @@ package Lib.Xref is\n \n    --  The lines following the header look like\n \n-   --     line type col level entity renameref instref typeref ref  ref  ref\n+   --  line type col level entity renameref instref typeref overref ref  ref\n \n    --        line is the line number of the referenced entity. The name of\n    --        the entity starts in column col. Columns are numbered from one,\n@@ -130,6 +129,17 @@ package Lib.Xref is\n    --          referenced file. For the standard entity form, the name between\n    --          the brackets is the normal name of the entity in lower case.\n \n+   --        overref is present for overriding operations (procedures and\n+   --        functions), and provides information on the operation that it\n+   --        overrides. This information has the format:\n+\n+   --        '<' file | line 'o' col '>'\n+\n+   --           file is the dependency number of the file containing the\n+   --           declaration of the overridden operation. It and the following\n+   --           vertical bar are omitted if the file is the same as that of\n+   --           the overriding operation.\n+\n    --     There may be zero or more ref entries on each line\n \n    --        file | line type col [...]"}]}