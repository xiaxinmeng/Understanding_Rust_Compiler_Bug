{"sha": "789c34e3c7bb5e5c7c2cadd8de7c395654bf99cf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Nzg5YzM0ZTNjN2JiNWU1YzdjMmNhZGQ4ZGU3YzM5NTY1NGJmOTljZg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2013-03-18T08:50:35Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2013-03-18T08:50:35Z"}, "message": "tree-ssa-loop-manip.c (find_uses_to_rename): Do not scan the whole function when there is nothing to do.\n\n2013-03-18  Richard Biener  <rguenther@suse.de>\n\n\t* tree-ssa-loop-manip.c (find_uses_to_rename): Do not scan the\n\twhole function when there is nothing to do.\n\t* tree-ssa-loop.c (pass_vectorize): Remove TODO_update_ssa.\n\t* tree-vectorizer.c (vectorize_loops): Update virtual and\n\tloop-closed SSA once.\n\t* tree-vect-loop.c (vect_transform_loop): Do not update SSA here.\n\nFrom-SVN: r196770", "tree": {"sha": "fd3c04f48ff5f735f369b2139b77be033bcb4b05", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fd3c04f48ff5f735f369b2139b77be033bcb4b05"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/789c34e3c7bb5e5c7c2cadd8de7c395654bf99cf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/789c34e3c7bb5e5c7c2cadd8de7c395654bf99cf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/789c34e3c7bb5e5c7c2cadd8de7c395654bf99cf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/789c34e3c7bb5e5c7c2cadd8de7c395654bf99cf/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "076b460557487a225815e3870405e67a3f149a0c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/076b460557487a225815e3870405e67a3f149a0c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/076b460557487a225815e3870405e67a3f149a0c"}], "stats": {"total": 47, "additions": 25, "deletions": 22}, "files": [{"sha": "f5d00c65abe3dca3469f3d2a680b831a53d8b6db", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/789c34e3c7bb5e5c7c2cadd8de7c395654bf99cf/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/789c34e3c7bb5e5c7c2cadd8de7c395654bf99cf/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=789c34e3c7bb5e5c7c2cadd8de7c395654bf99cf", "patch": "@@ -1,3 +1,12 @@\n+2013-03-18  Richard Biener  <rguenther@suse.de>\n+\n+\t* tree-ssa-loop-manip.c (find_uses_to_rename): Do not scan the\n+\twhole function when there is nothing to do.\n+\t* tree-ssa-loop.c (pass_vectorize): Remove TODO_update_ssa.\n+\t* tree-vectorizer.c (vectorize_loops): Update virtual and\n+\tloop-closed SSA once.\n+\t* tree-vect-loop.c (vect_transform_loop): Do not update SSA here.\n+\n 2013-03-18  Richard Biener  <rguenther@suse.de>\n \n \tPR middle-end/56113"}, {"sha": "a0516c45c4a5b7b33709c404047d208ad13e8fb6", "filename": "gcc/tree-ssa-loop-manip.c", "status": "modified", "additions": 5, "deletions": 14, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/789c34e3c7bb5e5c7c2cadd8de7c395654bf99cf/gcc%2Ftree-ssa-loop-manip.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/789c34e3c7bb5e5c7c2cadd8de7c395654bf99cf/gcc%2Ftree-ssa-loop-manip.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-manip.c?ref=789c34e3c7bb5e5c7c2cadd8de7c395654bf99cf", "patch": "@@ -443,21 +443,12 @@ find_uses_to_rename (bitmap changed_bbs, bitmap *use_blocks, bitmap need_phis)\n   unsigned index;\n   bitmap_iterator bi;\n \n-  /* ??? If CHANGED_BBS is empty we rewrite the whole function -- why?  */\n-  if (changed_bbs && !bitmap_empty_p (changed_bbs))\n-    {\n-      EXECUTE_IF_SET_IN_BITMAP (changed_bbs, 0, index, bi)\n-\t{\n-\t  find_uses_to_rename_bb (BASIC_BLOCK (index), use_blocks, need_phis);\n-\t}\n-    }\n+  if (changed_bbs)\n+    EXECUTE_IF_SET_IN_BITMAP (changed_bbs, 0, index, bi)\n+      find_uses_to_rename_bb (BASIC_BLOCK (index), use_blocks, need_phis);\n   else\n-    {\n-      FOR_EACH_BB (bb)\n-\t{\n-\t  find_uses_to_rename_bb (bb, use_blocks, need_phis);\n-\t}\n-    }\n+    FOR_EACH_BB (bb)\n+      find_uses_to_rename_bb (bb, use_blocks, need_phis);\n }\n \n /* Rewrites the program into a loop closed ssa form -- i.e. inserts extra"}, {"sha": "fdfb9e7126241348519faaf7852d144fd2c420e7", "filename": "gcc/tree-ssa-loop.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/789c34e3c7bb5e5c7c2cadd8de7c395654bf99cf/gcc%2Ftree-ssa-loop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/789c34e3c7bb5e5c7c2cadd8de7c395654bf99cf/gcc%2Ftree-ssa-loop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop.c?ref=789c34e3c7bb5e5c7c2cadd8de7c395654bf99cf", "patch": "@@ -245,8 +245,7 @@ struct gimple_opt_pass pass_vectorize =\n   0,                                    /* properties_provided */\n   0,                                    /* properties_destroyed */\n   0,\t\t\t\t\t/* todo_flags_start */\n-  TODO_update_ssa\n-    | TODO_ggc_collect\t\t\t/* todo_flags_finish */\n+  TODO_ggc_collect\t\t\t/* todo_flags_finish */\n  }\n };\n "}, {"sha": "b7c55214169e58bb6151b6df6b2840746954b24b", "filename": "gcc/tree-vect-loop.c", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/789c34e3c7bb5e5c7c2cadd8de7c395654bf99cf/gcc%2Ftree-vect-loop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/789c34e3c7bb5e5c7c2cadd8de7c395654bf99cf/gcc%2Ftree-vect-loop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-loop.c?ref=789c34e3c7bb5e5c7c2cadd8de7c395654bf99cf", "patch": "@@ -5773,11 +5773,6 @@ vect_transform_loop (loop_vec_info loop_vinfo)\n \t loop->nb_iterations_estimate = loop->nb_iterations_estimate - double_int_one;\n     }\n \n-  /* The memory tags and pointers in vectorized statements need to\n-     have their SSA forms updated.  FIXME, why can't this be delayed\n-     until all the loops have been transformed?  */\n-  update_ssa (TODO_update_ssa);\n-\n   if (dump_enabled_p ())\n     dump_printf_loc (MSG_OPTIMIZED_LOCATIONS, vect_location, \"LOOP VECTORIZED.\");\n   if (loop->inner && dump_enabled_p ())"}, {"sha": "9d461997516cbf0736f87a98c27e2398dcf12c46", "filename": "gcc/tree-vectorizer.c", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/789c34e3c7bb5e5c7c2cadd8de7c395654bf99cf/gcc%2Ftree-vectorizer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/789c34e3c7bb5e5c7c2cadd8de7c395654bf99cf/gcc%2Ftree-vectorizer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vectorizer.c?ref=789c34e3c7bb5e5c7c2cadd8de7c395654bf99cf", "patch": "@@ -149,7 +149,16 @@ vectorize_loops (void)\n \n   free_stmt_vec_info_vec ();\n \n-  return num_vectorized_loops > 0 ? TODO_cleanup_cfg : 0;\n+  if (num_vectorized_loops > 0)\n+    {\n+      /* If we vectorized any loop only virtual SSA form needs to be updated.\n+\t ???  Also while we try hard to update loop-closed SSA form we fail\n+\t to properly do this in some corner-cases (see PR56286).  */\n+      rewrite_into_loop_closed_ssa (NULL, TODO_update_ssa_only_virtuals);\n+      return TODO_cleanup_cfg;\n+    }\n+\n+  return 0;\n }\n \n "}]}