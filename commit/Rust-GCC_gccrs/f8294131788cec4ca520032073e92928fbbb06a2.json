{"sha": "f8294131788cec4ca520032073e92928fbbb06a2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjgyOTQxMzE3ODhjZWM0Y2E1MjAwMzIwNzNlOTI5MjhmYmJiMDZhMg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2016-11-17T08:39:33Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2016-11-17T08:39:33Z"}, "message": "re PR tree-optimization/78305 (Wrong constant folding)\n\n2016-11-17  Richard Biener  <rguenther@suse.de>\n\n\tPR middle-end/78305\n\t* fold-const.c (negate_expr_p): Fix multiplication case.\n\n\t* gcc.dg/torture/pr78305.c: New testcase.\n\nFrom-SVN: r242536", "tree": {"sha": "51735ece6cbb2b9b1ce2bad7559b4555a93ffb61", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/51735ece6cbb2b9b1ce2bad7559b4555a93ffb61"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f8294131788cec4ca520032073e92928fbbb06a2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8294131788cec4ca520032073e92928fbbb06a2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f8294131788cec4ca520032073e92928fbbb06a2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8294131788cec4ca520032073e92928fbbb06a2/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "04f1c83099aab49f530f492b9d8119cf9d5ffcdd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04f1c83099aab49f530f492b9d8119cf9d5ffcdd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/04f1c83099aab49f530f492b9d8119cf9d5ffcdd"}], "stats": {"total": 30, "additions": 27, "deletions": 3}, "files": [{"sha": "b8e527aa59a269f58000db0dffff125d096cc0b6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8294131788cec4ca520032073e92928fbbb06a2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8294131788cec4ca520032073e92928fbbb06a2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f8294131788cec4ca520032073e92928fbbb06a2", "patch": "@@ -1,3 +1,8 @@\n+2016-11-17  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/78305\n+\t* fold-const.c (negate_expr_p): Fix multiplication case.\n+\n 2016-11-17  Chung-Lin Tang  <cltang@codesourcery.com>\n \n \tPR target/78357"}, {"sha": "f4b2cfa743ef0cccf7f71821e9e714bc469a2dc8", "filename": "gcc/fold-const.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8294131788cec4ca520032073e92928fbbb06a2/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8294131788cec4ca520032073e92928fbbb06a2/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=f8294131788cec4ca520032073e92928fbbb06a2", "patch": "@@ -450,13 +450,13 @@ negate_expr_p (tree t)\n       if (TYPE_UNSIGNED (type))\n \tbreak;\n       /* INT_MIN/n * n doesn't overflow while negating one operand it does\n-         if n is a power of two.  */\n+         if n is a (negative) power of two.  */\n       if (INTEGRAL_TYPE_P (TREE_TYPE (t))\n \t  && ! TYPE_OVERFLOW_WRAPS (TREE_TYPE (t))\n \t  && ! ((TREE_CODE (TREE_OPERAND (t, 0)) == INTEGER_CST\n-\t\t && ! integer_pow2p (TREE_OPERAND (t, 0)))\n+\t\t && wi::popcount (wi::abs (TREE_OPERAND (t, 0))) != 1)\n \t\t|| (TREE_CODE (TREE_OPERAND (t, 1)) == INTEGER_CST\n-\t\t    && ! integer_pow2p (TREE_OPERAND (t, 1)))))\n+\t\t    && wi::popcount (wi::abs (TREE_OPERAND (t, 1))) != 1)))\n \tbreak;\n \n       /* Fall through.  */"}, {"sha": "c142b4b013dde77fcfe458c428124f3c7a892cf1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8294131788cec4ca520032073e92928fbbb06a2/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8294131788cec4ca520032073e92928fbbb06a2/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f8294131788cec4ca520032073e92928fbbb06a2", "patch": "@@ -1,3 +1,8 @@\n+2016-11-17  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/78305\n+\t* gcc.dg/torture/pr78305.c: New testcase.\n+\n 2016-11-17  Janus Weil  <janus@gcc.gnu.org>\n \n \tPR fortran/66227"}, {"sha": "ccb8c6faa78e24e68645fafb37b17ecf739c1ea3", "filename": "gcc/testsuite/gcc.dg/torture/pr78305.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8294131788cec4ca520032073e92928fbbb06a2/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr78305.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8294131788cec4ca520032073e92928fbbb06a2/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr78305.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr78305.c?ref=f8294131788cec4ca520032073e92928fbbb06a2", "patch": "@@ -0,0 +1,14 @@\n+/* { dg-require-effective-target int32plus } */\n+/* { dg-do run } */\n+\n+int main ()\n+{\n+  int a = 2;\n+  int b = 1;\n+\n+  int t = -1 * ( -0x40000000 * a / ( -0x20000000 + b ) )  / -1;\n+\n+  if (t != 4) __builtin_abort();\n+\n+  return 0;\n+}"}]}