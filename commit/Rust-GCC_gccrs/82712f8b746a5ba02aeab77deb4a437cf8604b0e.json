{"sha": "82712f8b746a5ba02aeab77deb4a437cf8604b0e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODI3MTJmOGI3NDZhNWJhMDJhZWFiNzdkZWI0YTQzN2NmODYwNGIwZQ==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2001-12-21T19:15:36Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2001-12-21T19:15:36Z"}, "message": "For PR java/4509:\n\n\t* parse.y (java_complete_lhs) [COMPOUND_EXPR]: Correctly compute\n\tCAN_COMPLETE_NORMALLY for the node.\n\t* jcf-write.c (generate_bytecode_insns) [COMPOUND_EXPR]: Don't\n\tgenerate code for second branch if first branch can't complete\n\tnormally.\n\t(generate_bytecode_insns) [LOOP_EXPR]: Don't generate `goto' to\n\tthe loop head if the loop body can't complete normally.\n\nFrom-SVN: r48249", "tree": {"sha": "b3d0be987747d095e465e772a05f7e4f8a491155", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b3d0be987747d095e465e772a05f7e4f8a491155"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/82712f8b746a5ba02aeab77deb4a437cf8604b0e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82712f8b746a5ba02aeab77deb4a437cf8604b0e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/82712f8b746a5ba02aeab77deb4a437cf8604b0e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82712f8b746a5ba02aeab77deb4a437cf8604b0e/comments", "author": null, "committer": null, "parents": [{"sha": "0ba28a6d484b7aab09c57af8d36e3b789a443c3f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ba28a6d484b7aab09c57af8d36e3b789a443c3f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ba28a6d484b7aab09c57af8d36e3b789a443c3f"}], "stats": {"total": 15, "additions": 12, "deletions": 3}, "files": [{"sha": "b3f383c01f010477bfff87a19678bd04943082e8", "filename": "gcc/java/parse.y", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82712f8b746a5ba02aeab77deb4a437cf8604b0e/gcc%2Fjava%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82712f8b746a5ba02aeab77deb4a437cf8604b0e/gcc%2Fjava%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.y?ref=82712f8b746a5ba02aeab77deb4a437cf8604b0e", "patch": "@@ -5232,14 +5232,23 @@ check_inner_circular_reference (source, target)\n \n   if (!basetype_vec)\n     return NULL_TREE;\n-  \n+\n   for (i = 0; i < TREE_VEC_LENGTH (basetype_vec); i++)\n     {\n-      tree su = BINFO_TYPE (TREE_VEC_ELT (basetype_vec, i));\n+      tree su;\n+\n+      /* We can end up with a NULL_TREE or an incomplete type here if\n+\t we are compiling multiple files at once.  It's safe to simply\n+\t ignore these cases.  */\n+      if (TREE_VEC_ELT (basetype_vec, i) == NULL_TREE)\n+\tcontinue;\n+      su = BINFO_TYPE (TREE_VEC_ELT (basetype_vec, i));\n+      if (INCOMPLETE_TYPE_P (su))\n+\tcontinue;\n \n       if (inherits_from_p (su, target))\n \treturn lookup_cl (TYPE_NAME (su));\n-      \n+\n       for (ctx = DECL_CONTEXT (TYPE_NAME (su)); ctx; ctx = DECL_CONTEXT (ctx))\n \t{\n \t  /* An enclosing context shouldn't be TARGET */"}]}