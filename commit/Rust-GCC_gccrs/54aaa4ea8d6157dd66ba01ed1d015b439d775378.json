{"sha": "54aaa4ea8d6157dd66ba01ed1d015b439d775378", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTRhYWE0ZWE4ZDYxNTdkZDY2YmEwMWVkMWQwMTViNDM5ZDc3NTM3OA==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2001-08-03T08:23:54Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2001-08-03T08:23:54Z"}, "message": "alpha.md (force_movdi): New insn.\n\n        * config/alpha/alpha.md (force_movdi): New insn.\n        * config/alpha/alpha.c (alpha_expand_prologue): Use it.\n        Tweek FRP marking of VMS prologue insns.\n        * config/alpha/vms.h (EPILOGUE_USES): New.\n\nFrom-SVN: r44594", "tree": {"sha": "e34b46a6d6ce98394a32472b24524db01b5f0993", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e34b46a6d6ce98394a32472b24524db01b5f0993"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/54aaa4ea8d6157dd66ba01ed1d015b439d775378", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54aaa4ea8d6157dd66ba01ed1d015b439d775378", "html_url": "https://github.com/Rust-GCC/gccrs/commit/54aaa4ea8d6157dd66ba01ed1d015b439d775378", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54aaa4ea8d6157dd66ba01ed1d015b439d775378/comments", "author": null, "committer": null, "parents": [{"sha": "62dcadeb4af2ffda086f75a8bfd387f6ca8f2c24", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62dcadeb4af2ffda086f75a8bfd387f6ca8f2c24", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62dcadeb4af2ffda086f75a8bfd387f6ca8f2c24"}], "stats": {"total": 35, "additions": 30, "deletions": 5}, "files": [{"sha": "b20204dd16bb85726965130ca11ba7fb127c6bcc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54aaa4ea8d6157dd66ba01ed1d015b439d775378/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54aaa4ea8d6157dd66ba01ed1d015b439d775378/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=54aaa4ea8d6157dd66ba01ed1d015b439d775378", "patch": "@@ -1,3 +1,10 @@\n+2001-08-03  Richard Henderson  <rth@redhat.com>\n+\n+\t* config/alpha/alpha.md (force_movdi): New insn.\n+\t* config/alpha/alpha.c (alpha_expand_prologue): Use it.\n+\tTweek FRP marking of VMS prologue insns.\n+\t* config/alpha/vms.h (EPILOGUE_USES): New.\n+\n 2001-08-02  Richard Henderson  <rth@redhat.com>\n \n \t* Makefile.in, mklibgcc.in: Revert mkinstalldirs change."}, {"sha": "2456e995977beec1ca1e88d834006455d7b00925", "filename": "gcc/config/alpha/alpha.c", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54aaa4ea8d6157dd66ba01ed1d015b439d775378/gcc%2Fconfig%2Falpha%2Falpha.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54aaa4ea8d6157dd66ba01ed1d015b439d775378/gcc%2Fconfig%2Falpha%2Falpha.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.c?ref=54aaa4ea8d6157dd66ba01ed1d015b439d775378", "patch": "@@ -4855,13 +4855,14 @@ alpha_expand_prologue ()\n   if (TARGET_ABI_OPEN_VMS)\n     {\n       if (!vms_is_stack_procedure)\n-\t/* Register frame procedures fave the fp.  */\n-\tFRP (emit_move_insn (gen_rtx_REG (DImode, vms_save_fp_regno),\n-\t\t\t     hard_frame_pointer_rtx));\n+\t/* Register frame procedures save the fp.  */\n+\t/* ??? Ought to have a dwarf2 save for this.  */\n+\temit_move_insn (gen_rtx_REG (DImode, vms_save_fp_regno),\n+\t\t\thard_frame_pointer_rtx);\n \n       if (vms_base_regno != REG_PV)\n-\tFRP (emit_move_insn (gen_rtx_REG (DImode, vms_base_regno),\n-\t\t\t     gen_rtx_REG (DImode, REG_PV)));\n+\temit_insn (gen_force_movdi (gen_rtx_REG (DImode, vms_base_regno),\n+\t\t\t\t    gen_rtx_REG (DImode, REG_PV)));\n \n       if (vms_unwind_regno == HARD_FRAME_POINTER_REGNUM)\n \tFRP (emit_move_insn (hard_frame_pointer_rtx, stack_pointer_rtx));"}, {"sha": "3e7d4f52dc3cb5087baa1a7cb1a7cdfe62c0e2b8", "filename": "gcc/config/alpha/alpha.md", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54aaa4ea8d6157dd66ba01ed1d015b439d775378/gcc%2Fconfig%2Falpha%2Falpha.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54aaa4ea8d6157dd66ba01ed1d015b439d775378/gcc%2Fconfig%2Falpha%2Falpha.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.md?ref=54aaa4ea8d6157dd66ba01ed1d015b439d775378", "patch": "@@ -47,6 +47,7 @@\n    (UNSPECV_MCOUNT\t8)\n    (UNSPECV_LDGP1\t9)\n    (UNSPECV_LDGP2\t10)\n+   (UNSPECV_FORCE_MOV\t11)\n   ])\n \f\n ;; Processor type -- this attribute must exactly match the processor_type\n@@ -4880,6 +4881,18 @@ fadd,fmul,fcpys,fdiv,fsqrt,misc,mvi,ftoi,itof,multi\"\n    itoft %1,%0\"\n   [(set_attr \"type\" \"ilog,iadd,iadd,ldsym,ild,ist,fcpys,fld,fst,ftoi,itof\")])\n \n+;; VMS needs to set up \"vms_base_regno\" for unwinding.  This move\n+;; often appears dead to the life analysis code, at which point we\n+;; abort for emitting dead prologue instructions.  Force this live.\n+\n+(define_insn \"force_movdi\"\n+  [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n+\t(unspec_volatile:DI [(match_operand:DI 1 \"register_operand\" \"r\")]\n+\t\t\t    UNSPECV_FORCE_MOV))]\n+  \"\"\n+  \"mov %1,%0\"\n+  [(set_attr \"type\" \"ilog\")])\n+\n ;; We do three major things here: handle mem->mem, put 64-bit constants in\n ;; memory, and construct long 32-bit constants.\n "}, {"sha": "d10a19df396ffc1e86127f470f7fa2bd35436869", "filename": "gcc/config/alpha/vms.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54aaa4ea8d6157dd66ba01ed1d015b439d775378/gcc%2Fconfig%2Falpha%2Fvms.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54aaa4ea8d6157dd66ba01ed1d015b439d775378/gcc%2Fconfig%2Falpha%2Fvms.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Fvms.h?ref=54aaa4ea8d6157dd66ba01ed1d015b439d775378", "patch": "@@ -111,6 +111,10 @@ Boston, MA 02111-1307, USA.  */\n #undef HARD_FRAME_POINTER_REGNUM\n #define HARD_FRAME_POINTER_REGNUM 29\n \n+/* Define registers used by the epilogue and return instruction.  */\n+#undef EPILOGUE_USES\n+#define EPILOGUE_USES(REGNO)    ((REGNO) == 26 || (REGNO) == 29)\n+\n #undef CAN_ELIMINATE\n #define CAN_ELIMINATE(FROM, TO)  \\\n ((TO) != STACK_POINTER_REGNUM || ! alpha_using_fp ())"}]}