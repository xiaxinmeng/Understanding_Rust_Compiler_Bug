{"sha": "926cd61f45f9c722fe2b606fc14b8cfa4b9d1e41", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTI2Y2Q2MWY0NWY5YzcyMmZlMmI2MDZmYzE0YjhjZmE0YjlkMWU0MQ==", "commit": {"author": {"name": "Vladimir Makarov", "email": "vmakarov@redhat.com", "date": "2012-10-25T02:31:31Z"}, "committer": {"name": "Vladimir Makarov", "email": "vmakarov@gcc.gnu.org", "date": "2012-10-25T02:31:31Z"}, "message": "re PR bootstrap/55067 (AIX bootstrap failure due to lra.c loc_t)\n\n2012-10-24  Vladimir Makarov  <vmakarov@redhat.com>\n\n\tPR bootstrap/55067\n\t* lra.c: Rename loc to sloc and loc_t to sloc_t.\n\nFrom-SVN: r192794", "tree": {"sha": "bf33e0ab3a86b64390bdee52be696fdb1fb7ab63", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bf33e0ab3a86b64390bdee52be696fdb1fb7ab63"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/926cd61f45f9c722fe2b606fc14b8cfa4b9d1e41", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/926cd61f45f9c722fe2b606fc14b8cfa4b9d1e41", "html_url": "https://github.com/Rust-GCC/gccrs/commit/926cd61f45f9c722fe2b606fc14b8cfa4b9d1e41", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/926cd61f45f9c722fe2b606fc14b8cfa4b9d1e41/comments", "author": {"login": "vnmakarov", "id": 9855671, "node_id": "MDQ6VXNlcjk4NTU2NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/9855671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vnmakarov", "html_url": "https://github.com/vnmakarov", "followers_url": "https://api.github.com/users/vnmakarov/followers", "following_url": "https://api.github.com/users/vnmakarov/following{/other_user}", "gists_url": "https://api.github.com/users/vnmakarov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vnmakarov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vnmakarov/subscriptions", "organizations_url": "https://api.github.com/users/vnmakarov/orgs", "repos_url": "https://api.github.com/users/vnmakarov/repos", "events_url": "https://api.github.com/users/vnmakarov/events{/privacy}", "received_events_url": "https://api.github.com/users/vnmakarov/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4ede4ee462c136dd2c627b3c43351aeb8de8981f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ede4ee462c136dd2c627b3c43351aeb8de8981f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4ede4ee462c136dd2c627b3c43351aeb8de8981f"}], "stats": {"total": 31, "additions": 18, "deletions": 13}, "files": [{"sha": "48ccc22fe0952ba0492e6181cc269588fde689f2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/926cd61f45f9c722fe2b606fc14b8cfa4b9d1e41/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/926cd61f45f9c722fe2b606fc14b8cfa4b9d1e41/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=926cd61f45f9c722fe2b606fc14b8cfa4b9d1e41", "patch": "@@ -1,3 +1,8 @@\n+2012-10-24  Vladimir Makarov  <vmakarov@redhat.com>\n+\n+\tPR bootstrap/55067\n+\t* lra.c: Rename loc to sloc and loc_t to sloc_t.\n+\n 2012-10-24  Sharad Singhai  <singhai@google.com>\n \n \t* config/rs6000/rs6000.c (rs6000_density_test): Use dump_enabled_p"}, {"sha": "a56da78380b56e224a095b7d9909d869bac67181", "filename": "gcc/lra.c", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/926cd61f45f9c722fe2b606fc14b8cfa4b9d1e41/gcc%2Flra.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/926cd61f45f9c722fe2b606fc14b8cfa4b9d1e41/gcc%2Flra.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flra.c?ref=926cd61f45f9c722fe2b606fc14b8cfa4b9d1e41", "patch": "@@ -1859,19 +1859,19 @@ lra_process_new_insns (rtx insn, rtx before, rtx after, const char *title)\n    scratches at the end of LRA.\t */\n \n /* Description of location of a former scratch operand.\t */\n-struct loc\n+struct sloc\n {\n   rtx insn; /* Insn where the scratch was.  */\n   int nop;  /* Number of the operand which was a scratch.  */\n };\n \n-typedef struct loc *loc_t;\n+typedef struct sloc *sloc_t;\n \n-DEF_VEC_P(loc_t);\n-DEF_VEC_ALLOC_P(loc_t, heap);\n+DEF_VEC_P(sloc_t);\n+DEF_VEC_ALLOC_P(sloc_t, heap);\n \n /* Locations of the former scratches.  */\n-static VEC (loc_t, heap) *scratches;\n+static VEC (sloc_t, heap) *scratches;\n \n /* Bitmap of scratch regnos.  */\n static bitmap_head scratch_bitmap;\n@@ -1902,11 +1902,11 @@ remove_scratches (void)\n   bool insn_changed_p;\n   basic_block bb;\n   rtx insn, reg;\n-  loc_t loc;\n+  sloc_t loc;\n   lra_insn_recog_data_t id;\n   struct lra_static_insn_data *static_id;\n \n-  scratches = VEC_alloc (loc_t, heap, get_max_uid ());\n+  scratches = VEC_alloc (sloc_t, heap, get_max_uid ());\n   bitmap_initialize (&scratch_bitmap, &reg_obstack);\n   bitmap_initialize (&scratch_operand_bitmap, &reg_obstack);\n   FOR_EACH_BB (bb)\n@@ -1926,10 +1926,10 @@ remove_scratches (void)\n \t\t\t\t      *id->operand_loc[i], ALL_REGS, NULL);\n \t      add_reg_note (insn, REG_UNUSED, reg);\n \t      lra_update_dup (id, i);\n-\t      loc = XNEW (struct loc);\n+\t      loc = XNEW (struct sloc);\n \t      loc->insn = insn;\n \t      loc->nop = i;\n-\t      VEC_safe_push (loc_t, heap, scratches, loc);\n+\t      VEC_safe_push (sloc_t, heap, scratches, loc);\n \t      bitmap_set_bit (&scratch_bitmap, REGNO (*id->operand_loc[i]));\n \t      bitmap_set_bit (&scratch_operand_bitmap,\n \t\t\t      INSN_UID (insn) * MAX_RECOG_OPERANDS + i);\n@@ -1950,11 +1950,11 @@ static void\n restore_scratches (void)\n {\n   int i, regno;\n-  loc_t loc;\n+  sloc_t loc;\n   rtx last = NULL_RTX;\n   lra_insn_recog_data_t id = NULL;\n \n-  for (i = 0; VEC_iterate (loc_t, scratches, i, loc); i++)\n+  for (i = 0; VEC_iterate (sloc_t, scratches, i, loc); i++)\n     {\n       if (last != loc->insn)\n \t{\n@@ -1977,9 +1977,9 @@ restore_scratches (void)\n \t\t     INSN_UID (loc->insn), loc->nop);\n \t}\n     }\n-  for (i = 0; VEC_iterate (loc_t, scratches, i, loc); i++)\n+  for (i = 0; VEC_iterate (sloc_t, scratches, i, loc); i++)\n     free (loc);\n-  VEC_free (loc_t, heap, scratches);\n+  VEC_free (sloc_t, heap, scratches);\n   bitmap_clear (&scratch_bitmap);\n   bitmap_clear (&scratch_operand_bitmap);\n }"}]}