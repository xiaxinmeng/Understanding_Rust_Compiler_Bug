{"sha": "56af751e21b1397bfc1ba7aba8dfa18aebc4c209", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTZhZjc1MWUyMWIxMzk3YmZjMWJhN2FiYThkZmExOGFlYmM0YzIwOQ==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2017-05-25T10:08:02Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2017-05-25T10:08:02Z"}, "message": "Add -fdump*-folding suboption.\n\n2017-05-25  Martin Liska  <mliska@suse.cz>\n\n\t* dumpfile.c: Add TDF_FOLDING.\n\t* dumpfile.h (enum dump_kind): Likewise.\n\t* genmatch.c (dt_simplify::gen_1): Use it.\n\nFrom-SVN: r248452", "tree": {"sha": "b1a939271deb5cbc463ff375077f63df666a437c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b1a939271deb5cbc463ff375077f63df666a437c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/56af751e21b1397bfc1ba7aba8dfa18aebc4c209", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56af751e21b1397bfc1ba7aba8dfa18aebc4c209", "html_url": "https://github.com/Rust-GCC/gccrs/commit/56af751e21b1397bfc1ba7aba8dfa18aebc4c209", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56af751e21b1397bfc1ba7aba8dfa18aebc4c209/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "18c1e9e024fe76f61424d5b0a24ce7b502a1f4b5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18c1e9e024fe76f61424d5b0a24ce7b502a1f4b5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/18c1e9e024fe76f61424d5b0a24ce7b502a1f4b5"}], "stats": {"total": 10, "additions": 9, "deletions": 1}, "files": [{"sha": "aea7ef53f382abd5bd4f26627e9db9ee234ef085", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56af751e21b1397bfc1ba7aba8dfa18aebc4c209/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56af751e21b1397bfc1ba7aba8dfa18aebc4c209/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=56af751e21b1397bfc1ba7aba8dfa18aebc4c209", "patch": "@@ -1,3 +1,9 @@\n+2017-05-25  Martin Liska  <mliska@suse.cz>\n+\n+\t* dumpfile.c: Add TDF_FOLDING.\n+\t* dumpfile.h (enum dump_kind): Likewise.\n+\t* genmatch.c (dt_simplify::gen_1): Use it.\n+\n 2017-05-25  Marc Glisse  <marc.glisse@inria.fr>\n \n \t* match.pd (view_convert (convert@0 @1)): Handle zero-extension."}, {"sha": "903d879e78483823d0a5a97c55d232b8dd30da87", "filename": "gcc/dumpfile.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56af751e21b1397bfc1ba7aba8dfa18aebc4c209/gcc%2Fdumpfile.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56af751e21b1397bfc1ba7aba8dfa18aebc4c209/gcc%2Fdumpfile.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdumpfile.c?ref=56af751e21b1397bfc1ba7aba8dfa18aebc4c209", "patch": "@@ -118,6 +118,7 @@ static const struct dump_option_value_info dump_options[] =\n   {\"enumerate_locals\", TDF_ENUMERATE_LOCALS},\n   {\"scev\", TDF_SCEV},\n   {\"gimple\", TDF_GIMPLE},\n+  {\"folding\", TDF_FOLDING},\n   {\"optimized\", MSG_OPTIMIZED_LOCATIONS},\n   {\"missed\", MSG_MISSED_OPTIMIZATION},\n   {\"note\", MSG_NOTE},"}, {"sha": "abb4d93a93bd4ddc5e75913821a7ae30dfe0aff3", "filename": "gcc/dumpfile.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56af751e21b1397bfc1ba7aba8dfa18aebc4c209/gcc%2Fdumpfile.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56af751e21b1397bfc1ba7aba8dfa18aebc4c209/gcc%2Fdumpfile.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdumpfile.h?ref=56af751e21b1397bfc1ba7aba8dfa18aebc4c209", "patch": "@@ -92,6 +92,7 @@ enum dump_kind\n #define TDF_SCEV\t(1 << 24)\t/* Dump SCEV details.  */\n #define TDF_COMMENT\t(1 << 25)\t/* Dump lines with prefix \";;\"  */\n #define TDF_GIMPLE\t(1 << 26)\t/* Dump in GIMPLE FE syntax  */\n+#define TDF_FOLDING\t(1 << 27)\t/* Dump folding details.  */\n #define MSG_OPTIMIZED_LOCATIONS\t (1 << 27)  /* -fopt-info optimized sources */\n #define MSG_MISSED_OPTIMIZATION\t (1 << 28)  /* missed opportunities */\n #define MSG_NOTE\t\t (1 << 29)  /* general optimization info */"}, {"sha": "f20e39f91587c9a391abb821403fd6c21d09811c", "filename": "gcc/genmatch.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56af751e21b1397bfc1ba7aba8dfa18aebc4c209/gcc%2Fgenmatch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56af751e21b1397bfc1ba7aba8dfa18aebc4c209/gcc%2Fgenmatch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenmatch.c?ref=56af751e21b1397bfc1ba7aba8dfa18aebc4c209", "patch": "@@ -3191,7 +3191,7 @@ dt_simplify::gen_1 (FILE *f, int indent, bool gimple, operand *result)\n \t}\n     }\n \n-  fprintf_indent (f, indent, \"if (dump_file && (dump_flags & TDF_DETAILS)) \"\n+  fprintf_indent (f, indent, \"if (dump_file && (dump_flags & TDF_FOLDING)) \"\n \t   \"fprintf (dump_file, \\\"Applying pattern \");\n   output_line_directive (f,\n \t\t\t result ? result->location : s->match->location, true);"}]}