{"sha": "0df3cf7f04835666392eb1f8a99d9f4464ad6630", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGRmM2NmN2YwNDgzNTY2NjM5MmViMWY4YTk5ZDlmNDQ2NGFkNjYzMA==", "commit": {"author": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2005-09-14T05:12:04Z"}, "committer": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2005-09-14T05:12:04Z"}, "message": "re PR fortran/19358 ([gfortran] Segfault with missing upper bound)\n\n2005-09-13  Paul Thomas  <pault@gcc.gnu.org>\n\n\tPR fortran/19358\n\t* trans-array.c (gfc_trans_dummy_array_bias): correct the typo\n\twhich uses dim[i].upper for lbound, rather than dim[i].lower.\n\n2005-09-13  Paul Thomas  <pault@gcc.gnu.org>\n\n\tPR fortran/19358\n\t* gfortran.fortran-torture/assumed_dummy_1.f90: New test.\n\nFrom-SVN: r104259", "tree": {"sha": "3bb7dfd2e701c6bc526ce1a16f27a4b0dcdea0f3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3bb7dfd2e701c6bc526ce1a16f27a4b0dcdea0f3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0df3cf7f04835666392eb1f8a99d9f4464ad6630", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0df3cf7f04835666392eb1f8a99d9f4464ad6630", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0df3cf7f04835666392eb1f8a99d9f4464ad6630", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0df3cf7f04835666392eb1f8a99d9f4464ad6630/comments", "author": null, "committer": null, "parents": [{"sha": "0120daacbe6fb2d92ab3d3ad654f0e0ec51d86e1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0120daacbe6fb2d92ab3d3ad654f0e0ec51d86e1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0120daacbe6fb2d92ab3d3ad654f0e0ec51d86e1"}], "stats": {"total": 59, "additions": 58, "deletions": 1}, "files": [{"sha": "eb93719c29ef05918b070a83792d8a51e3c48269", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0df3cf7f04835666392eb1f8a99d9f4464ad6630/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0df3cf7f04835666392eb1f8a99d9f4464ad6630/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=0df3cf7f04835666392eb1f8a99d9f4464ad6630", "patch": "@@ -1,3 +1,9 @@\n+2005-09-14  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/19358\n+\t* trans-array.c (gfc_trans_dummy_array_bias): correct the typo\n+\twhich uses dim[i].upper for lbound, rather than dim[i].lower.\n+\n 2005-09-13  Erik Edelmann  <erik.edelmann@iki.fi>\n \n \tPR fortran/17740"}, {"sha": "c284dca54657c038402cfe89010ad4bae334c3df", "filename": "gcc/fortran/trans-array.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0df3cf7f04835666392eb1f8a99d9f4464ad6630/gcc%2Ffortran%2Ftrans-array.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0df3cf7f04835666392eb1f8a99d9f4464ad6630/gcc%2Ffortran%2Ftrans-array.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-array.c?ref=0df3cf7f04835666392eb1f8a99d9f4464ad6630", "patch": "@@ -3477,7 +3477,7 @@ gfc_trans_dummy_array_bias (gfc_symbol * sym, tree tmpdesc, tree body)\n       if (!INTEGER_CST_P (lbound))\n         {\n           gfc_init_se (&se, NULL);\n-          gfc_conv_expr_type (&se, sym->as->upper[n],\n+          gfc_conv_expr_type (&se, sym->as->lower[n],\n                               gfc_array_index_type);\n           gfc_add_block_to_block (&block, &se.pre);\n           gfc_add_modify_expr (&block, lbound, se.expr);"}, {"sha": "fda2fb3293c9997ccbf804e57e317f884c0d304f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0df3cf7f04835666392eb1f8a99d9f4464ad6630/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0df3cf7f04835666392eb1f8a99d9f4464ad6630/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0df3cf7f04835666392eb1f8a99d9f4464ad6630", "patch": "@@ -1,3 +1,8 @@\n+2005-09-13  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/19358\n+\t* gfortran.fortran-torture/assumed_dummy_1.f90: New test.\n+\n 2005-09-13 Josh Conner <jconner@apple.com>\n \n \tPR c++/23180"}, {"sha": "a160a884b2a66e46328295b84b1c3d49b5a713e0", "filename": "gcc/testsuite/gfortran.dg/assumed_dummy_1.f90", "status": "added", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0df3cf7f04835666392eb1f8a99d9f4464ad6630/gcc%2Ftestsuite%2Fgfortran.dg%2Fassumed_dummy_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0df3cf7f04835666392eb1f8a99d9f4464ad6630/gcc%2Ftestsuite%2Fgfortran.dg%2Fassumed_dummy_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fassumed_dummy_1.f90?ref=0df3cf7f04835666392eb1f8a99d9f4464ad6630", "patch": "@@ -0,0 +1,46 @@\n+! { dg do-run}\n+! Tests the fix for PRs 19358, 19477, 21211 and 21622.\n+!\n+! Note that this tests only the valid cases with explicit interfaces.\n+!\n+! Contributed by Paul Thomas  <pault@gcc.gnu.org>\n+!\n+module global\n+contains\n+  SUBROUTINE goo (x, i)\n+    REAL, DIMENSION(i:)     :: x\n+    integer                 :: i\n+    x (3) = 99.0\n+  END SUBROUTINE goo\n+end module global\n+\n+SUBROUTINE foo (x, i)\n+  REAL, DIMENSION(i:)       :: x\n+  integer                   :: i\n+  x (4) = 42.0\n+END SUBROUTINE foo\n+\n+program test\n+  use global\n+  real, dimension(3)        :: y = 0\n+  integer                   :: j = 2\n+\n+interface\n+  SUBROUTINE foo (x, i)\n+    REAL, DIMENSION(i:)     :: x\n+    integer                 :: i\n+  END SUBROUTINE foo\n+end interface\n+  call foo (y, j)\n+  call goo (y, j)\n+  call roo (y, j)\n+  if (any(y.ne.(/21.0, 99.0, 42.0/))) call abort ()\n+contains\n+  SUBROUTINE roo (x, i)\n+    REAL, DIMENSION(i:)     :: x\n+    integer                 :: i\n+    x (2) = 21.0\n+  END SUBROUTINE roo\n+end program test\n+\n+"}]}