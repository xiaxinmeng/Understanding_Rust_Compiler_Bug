{"sha": "cde99631613bb609d8880e98ebac2057b10c09b6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2RlOTk2MzE2MTNiYjYwOWQ4ODgwZTk4ZWJhYzIwNTdiMTBjMDliNg==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2010-11-06T03:35:46Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2010-11-06T03:35:46Z"}, "message": "user.cfg.in: Add typeindex.\n\n\n2010-11-05  Benjamin Kosnik  <bkoz@redhat.com>\n\n\t* doc/doxygen/user.cfg.in: Add typeindex.\n\n\t* testsuite/util/testsuite_common_types.h (constexpr_comparison_eq_ne,\n\tconstexpr_comparison_operators): New.\n\t* testsuite/20_util/duration/comparisons: Move...\n\t* testsuite/20_util/duration/comparison_operators: ...here.\n\t* testsuite/20_util/duration/comparison_operators/constexpr.cc: New.\n\t* testsuite/20_util/time_point/comparison_operators/constexpr.cc: Add.\n\n\t* testsuite/29_atomics/atomic_integral/cons/assign_neg.cc: Adjust line\n\tnumbers.\n\t* testsuite/29_atomics/atomic_integral/cons/copy_neg.cc: Same.\n\t* testsuite/29_atomics/atomic/cons/assign_neg.cc: Same.\n\t* testsuite/29_atomics/atomic/cons/copy_neg.cc: Same.\n\nFrom-SVN: r166392", "tree": {"sha": "f8596fda8df8c1d5d1c10f99072f04158f5e7d1e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f8596fda8df8c1d5d1c10f99072f04158f5e7d1e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cde99631613bb609d8880e98ebac2057b10c09b6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cde99631613bb609d8880e98ebac2057b10c09b6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cde99631613bb609d8880e98ebac2057b10c09b6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cde99631613bb609d8880e98ebac2057b10c09b6/comments", "author": null, "committer": null, "parents": [{"sha": "e52a5db606c4225c41e77dcfb6e18ebb17b67cac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e52a5db606c4225c41e77dcfb6e18ebb17b67cac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e52a5db606c4225c41e77dcfb6e18ebb17b67cac"}], "stats": {"total": 114, "additions": 109, "deletions": 5}, "files": [{"sha": "262a74a6c3c9250f115346a7c87de02339294024", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cde99631613bb609d8880e98ebac2057b10c09b6/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cde99631613bb609d8880e98ebac2057b10c09b6/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=cde99631613bb609d8880e98ebac2057b10c09b6", "patch": "@@ -1,3 +1,20 @@\n+2010-11-05  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\t* doc/doxygen/user.cfg.in: Add typeindex.\n+\n+\t* testsuite/util/testsuite_common_types.h (constexpr_comparison_eq_ne,\n+\tconstexpr_comparison_operators): New.\n+\t* testsuite/20_util/duration/comparisons: Move...\n+\t* testsuite/20_util/duration/comparison_operators: ...here.\n+\t* testsuite/20_util/duration/comparison_operators/constexpr.cc: New.\n+\t* testsuite/20_util/time_point/comparison_operators/constexpr.cc: Add.\n+\n+\t* testsuite/29_atomics/atomic_integral/cons/assign_neg.cc: Adjust line\n+\tnumbers.\n+\t* testsuite/29_atomics/atomic_integral/cons/copy_neg.cc: Same.\n+\t* testsuite/29_atomics/atomic/cons/assign_neg.cc: Same.\n+\t* testsuite/29_atomics/atomic/cons/copy_neg.cc: Same.\n+\n 2010-11-05  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* include/bits/shared_ptr.h (shared_ptr<>::__shared_ptr(),"}, {"sha": "32ea7481fb94fd6bfc9567ceff6a2112047638c2", "filename": "libstdc++-v3/doc/doxygen/user.cfg.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cde99631613bb609d8880e98ebac2057b10c09b6/libstdc%2B%2B-v3%2Fdoc%2Fdoxygen%2Fuser.cfg.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cde99631613bb609d8880e98ebac2057b10c09b6/libstdc%2B%2B-v3%2Fdoc%2Fdoxygen%2Fuser.cfg.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fdoxygen%2Fuser.cfg.in?ref=cde99631613bb609d8880e98ebac2057b10c09b6", "patch": "@@ -631,6 +631,7 @@ INPUT                  = @srcdir@/doc/doxygen/doxygroups.cc \\\n                          include/system_error \\\n                          include/thread \\\n                          include/tuple \\\n+                         include/typeindex \\\n                          include/type_traits \\\n                          include/unordered_map \\\n                          include/unordered_set \\"}, {"sha": "35151f2ad54e437e166ada66faf8cb138f30d86e", "filename": "libstdc++-v3/testsuite/20_util/duration/comparison_operators/1.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cde99631613bb609d8880e98ebac2057b10c09b6/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fduration%2Fcomparison_operators%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cde99631613bb609d8880e98ebac2057b10c09b6/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fduration%2Fcomparison_operators%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fduration%2Fcomparison_operators%2F1.cc?ref=cde99631613bb609d8880e98ebac2057b10c09b6", "previous_filename": "libstdc++-v3/testsuite/20_util/duration/comparisons/1.cc"}, {"sha": "94338cee316ce901c767b7e1d68d0d96249dcba3", "filename": "libstdc++-v3/testsuite/20_util/duration/comparison_operators/constexpr.cc", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cde99631613bb609d8880e98ebac2057b10c09b6/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fduration%2Fcomparison_operators%2Fconstexpr.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cde99631613bb609d8880e98ebac2057b10c09b6/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fduration%2Fcomparison_operators%2Fconstexpr.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fduration%2Fcomparison_operators%2Fconstexpr.cc?ref=cde99631613bb609d8880e98ebac2057b10c09b6", "patch": "@@ -0,0 +1,29 @@\n+// { dg-do compile }\n+// { dg-options \"-std=gnu++0x\" }\n+\n+// Copyright (C) 2010 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <chrono>\n+#include <testsuite_common_types.h>\n+\n+int main()\n+{\n+  __gnu_test::constexpr_comparison_operators test;\n+  test.operator()<std::chrono::nanoseconds>();\n+  return 0;\n+}"}, {"sha": "427c5137021d928bb7af0c426d6558a4bb27b928", "filename": "libstdc++-v3/testsuite/20_util/time_point/comparison_operators/constexpr.cc", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cde99631613bb609d8880e98ebac2057b10c09b6/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftime_point%2Fcomparison_operators%2Fconstexpr.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cde99631613bb609d8880e98ebac2057b10c09b6/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftime_point%2Fcomparison_operators%2Fconstexpr.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftime_point%2Fcomparison_operators%2Fconstexpr.cc?ref=cde99631613bb609d8880e98ebac2057b10c09b6", "patch": "@@ -0,0 +1,30 @@\n+// { dg-do compile }\n+// { dg-options \"-std=gnu++0x\" }\n+\n+// Copyright (C) 2010 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <chrono>\n+#include <testsuite_common_types.h>\n+\n+int main()\n+{\n+  using namespace std::chrono;\n+  __gnu_test::constexpr_comparison_operators test;\n+  test.operator()<time_point<system_clock>>();\n+  return 0;\n+}"}, {"sha": "6b04cf81db0a16f66f850809505232f7efe19ad9", "filename": "libstdc++-v3/testsuite/29_atomics/atomic/cons/assign_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cde99631613bb609d8880e98ebac2057b10c09b6/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic%2Fcons%2Fassign_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cde99631613bb609d8880e98ebac2057b10c09b6/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic%2Fcons%2Fassign_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic%2Fcons%2Fassign_neg.cc?ref=cde99631613bb609d8880e98ebac2057b10c09b6", "patch": "@@ -28,5 +28,5 @@ int main()\n   return 0;\n }\n \n-// { dg-error \"deleted\" \"\" { target *-*-* } 544 }\n+// { dg-error \"deleted\" \"\" { target *-*-* } 571 }\n // { dg-prune-output \"include\" }"}, {"sha": "cdd95fd1b49f1e2db1fe76b67c4b7a02a385ac7a", "filename": "libstdc++-v3/testsuite/29_atomics/atomic/cons/copy_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cde99631613bb609d8880e98ebac2057b10c09b6/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic%2Fcons%2Fcopy_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cde99631613bb609d8880e98ebac2057b10c09b6/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic%2Fcons%2Fcopy_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic%2Fcons%2Fcopy_neg.cc?ref=cde99631613bb609d8880e98ebac2057b10c09b6", "patch": "@@ -28,5 +28,5 @@ int main()\n   return 0;\n }\n \n-// { dg-error \"deleted\" \"\" { target *-*-* } 583 }\n+// { dg-error \"deleted\" \"\" { target *-*-* } 610 }\n // { dg-prune-output \"include\" }"}, {"sha": "265878d39df26165470887b8211fbc210b493a7b", "filename": "libstdc++-v3/testsuite/29_atomics/atomic_integral/cons/assign_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cde99631613bb609d8880e98ebac2057b10c09b6/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic_integral%2Fcons%2Fassign_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cde99631613bb609d8880e98ebac2057b10c09b6/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic_integral%2Fcons%2Fassign_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic_integral%2Fcons%2Fassign_neg.cc?ref=cde99631613bb609d8880e98ebac2057b10c09b6", "patch": "@@ -29,5 +29,5 @@ int main()\n   return 0;\n }\n \n-// { dg-error \"deleted\" \"\" { target *-*-* } 544 }\n+// { dg-error \"deleted\" \"\" { target *-*-* } 571 }\n // { dg-prune-output \"include\" }"}, {"sha": "acb8006ac46c652a5a5134517e6a7b2d48857b2f", "filename": "libstdc++-v3/testsuite/29_atomics/atomic_integral/cons/copy_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cde99631613bb609d8880e98ebac2057b10c09b6/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic_integral%2Fcons%2Fcopy_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cde99631613bb609d8880e98ebac2057b10c09b6/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic_integral%2Fcons%2Fcopy_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic_integral%2Fcons%2Fcopy_neg.cc?ref=cde99631613bb609d8880e98ebac2057b10c09b6", "patch": "@@ -29,5 +29,5 @@ int main()\n   return 0;\n }\n \n-// { dg-error \"deleted\" \"\" { target *-*-* } 583 }\n+// { dg-error \"deleted\" \"\" { target *-*-* } 610 }\n // { dg-prune-output \"include\" }"}, {"sha": "c78f9450417928ad36c8f5b68fa6dc5a31a54528", "filename": "libstdc++-v3/testsuite/util/testsuite_common_types.h", "status": "modified", "additions": 28, "deletions": 1, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cde99631613bb609d8880e98ebac2057b10c09b6/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Ftestsuite_common_types.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cde99631613bb609d8880e98ebac2057b10c09b6/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Ftestsuite_common_types.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Ftestsuite_common_types.h?ref=cde99631613bb609d8880e98ebac2057b10c09b6", "patch": "@@ -462,8 +462,35 @@ namespace __gnu_test\n       }\n   };\n \n-  // Generator to test standard layout\n #ifdef __GXX_EXPERIMENTAL_CXX0X__\n+\n+  struct constexpr_comparison_eq_ne\n+  {\n+    template<typename _Tp1, typename _Tp2 = _Tp1>\n+      void \n+      operator()()\n+      {\n+\tstatic_assert(_Tp1() == _Tp2(), \"eq\");\n+\tstatic_assert(!(_Tp1() != _Tp2()), \"ne\");\n+      }\n+  };\n+\n+  struct constexpr_comparison_operators\n+  {\n+    template<typename _Tp>\n+      void \n+      operator()()\n+      {\n+\tstatic_assert(!(_Tp() < _Tp()), \"less\");\n+\tstatic_assert(_Tp() <= _Tp(), \"leq\");\n+\tstatic_assert(!(_Tp() > _Tp()), \"more\");\n+\tstatic_assert(_Tp() >= _Tp(), \"meq\");\n+\tstatic_assert(_Tp() == _Tp(), \"eq\");\n+\tstatic_assert(!(_Tp() != _Tp()), \"ne\");\n+      }\n+  };\n+\n+  // Generator to test standard layout\n   struct has_trivial_cons_dtor\n   {\n     template<typename _Tp>"}]}