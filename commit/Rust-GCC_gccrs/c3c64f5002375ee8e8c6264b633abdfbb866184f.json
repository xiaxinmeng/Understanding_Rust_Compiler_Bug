{"sha": "c3c64f5002375ee8e8c6264b633abdfbb866184f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzNjNjRmNTAwMjM3NWVlOGU4YzYyNjRiNjMzYWJkZmJiODY2MTg0Zg==", "commit": {"author": {"name": "Paolo Bonzini", "email": "bonzini@gnu.org", "date": "2009-04-07T12:39:37Z"}, "committer": {"name": "Paolo Bonzini", "email": "bonzini@gcc.gnu.org", "date": "2009-04-07T12:39:37Z"}, "message": "optabs.c (can_compare_p): Test the predicate of a cbranch and cstore pattern.\n\n2009-04-07  Paolo Bonzini  <bonzini@gnu.org>\n\n        * optabs.c (can_compare_p): Test the predicate of a\n        cbranch and cstore pattern.\n\nFrom-SVN: r145667", "tree": {"sha": "ddb1a455292b8f52dd722c3a8f9f3746a1f9c3d9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ddb1a455292b8f52dd722c3a8f9f3746a1f9c3d9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c3c64f5002375ee8e8c6264b633abdfbb866184f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3c64f5002375ee8e8c6264b633abdfbb866184f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c3c64f5002375ee8e8c6264b633abdfbb866184f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3c64f5002375ee8e8c6264b633abdfbb866184f/comments", "author": {"login": "bonzini", "id": 42082, "node_id": "MDQ6VXNlcjQyMDgy", "avatar_url": "https://avatars.githubusercontent.com/u/42082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bonzini", "html_url": "https://github.com/bonzini", "followers_url": "https://api.github.com/users/bonzini/followers", "following_url": "https://api.github.com/users/bonzini/following{/other_user}", "gists_url": "https://api.github.com/users/bonzini/gists{/gist_id}", "starred_url": "https://api.github.com/users/bonzini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bonzini/subscriptions", "organizations_url": "https://api.github.com/users/bonzini/orgs", "repos_url": "https://api.github.com/users/bonzini/repos", "events_url": "https://api.github.com/users/bonzini/events{/privacy}", "received_events_url": "https://api.github.com/users/bonzini/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9a53bc17c486a122b5eb3570f2e1b374b5c35460", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a53bc17c486a122b5eb3570f2e1b374b5c35460", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9a53bc17c486a122b5eb3570f2e1b374b5c35460"}], "stats": {"total": 23, "additions": 18, "deletions": 5}, "files": [{"sha": "120dfc1b03b67d977d05b22c1a072c43a39a0113", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3c64f5002375ee8e8c6264b633abdfbb866184f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3c64f5002375ee8e8c6264b633abdfbb866184f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c3c64f5002375ee8e8c6264b633abdfbb866184f", "patch": "@@ -1,3 +1,8 @@\n+2009-04-07  Paolo Bonzini  <bonzini@gnu.org>\n+\n+        * optabs.c (can_compare_p): Test the predicate of a\n+        cbranch and cstore pattern.\n+\n 2009-04-07  Paolo Bonzini  <bonzini@gnu.org>\n \n         * expr.c (convert_move): Use emit_store_flag instead of"}, {"sha": "7057d9ffa31336153135991123bfca9cadb8b85a", "filename": "gcc/optabs.c", "status": "modified", "additions": 13, "deletions": 5, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3c64f5002375ee8e8c6264b633abdfbb866184f/gcc%2Foptabs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3c64f5002375ee8e8c6264b633abdfbb866184f/gcc%2Foptabs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foptabs.c?ref=c3c64f5002375ee8e8c6264b633abdfbb866184f", "patch": "@@ -3980,8 +3980,12 @@ int\n can_compare_p (enum rtx_code code, enum machine_mode mode,\n \t       enum can_compare_purpose purpose)\n {\n+  rtx test;\n+  test = gen_rtx_fmt_ee (code, mode, const0_rtx, const0_rtx);\n   do\n     {\n+      int icode;\n+\n       if (optab_handler (cmp_optab, mode)->insn_code != CODE_FOR_nothing)\n \t{\n \t  if (purpose == ccp_jump)\n@@ -3993,15 +3997,19 @@ can_compare_p (enum rtx_code code, enum machine_mode mode,\n \t    return 1;\n \t}\n       if (purpose == ccp_jump\n-\t  && optab_handler (cbranch_optab, mode)->insn_code != CODE_FOR_nothing)\n-\treturn 1;\n+          && (icode = optab_handler (cbranch_optab, mode)->insn_code) != CODE_FOR_nothing\n+          && insn_data[icode].operand[0].predicate (test, mode))\n+        return 1;\n+      if (purpose == ccp_store_flag\n+          && (icode = optab_handler (cstore_optab, mode)->insn_code) != CODE_FOR_nothing\n+          && insn_data[icode].operand[1].predicate (test, mode))\n+        return 1;\n       if (purpose == ccp_cmov\n \t  && optab_handler (cmov_optab, mode)->insn_code != CODE_FOR_nothing)\n \treturn 1;\n-      if (purpose == ccp_store_flag\n-\t  && optab_handler (cstore_optab, mode)->insn_code != CODE_FOR_nothing)\n-\treturn 1;\n+\n       mode = GET_MODE_WIDER_MODE (mode);\n+      PUT_MODE (test, mode);\n     }\n   while (mode != VOIDmode);\n "}]}