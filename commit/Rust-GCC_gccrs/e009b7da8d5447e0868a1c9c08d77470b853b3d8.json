{"sha": "e009b7da8d5447e0868a1c9c08d77470b853b3d8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTAwOWI3ZGE4ZDU0NDdlMDg2OGExYzljMDhkNzc0NzBiODUzYjNkOA==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2013-12-15T11:20:53Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2013-12-15T11:20:53Z"}, "message": "pr43662.c (dg-options): Add -maccumulate-outgoing-args.\n\n\t* gcc.target/i386/pr43662.c (dg-options):\n\tAdd -maccumulate-outgoing-args.\n\t* gcc.target/i386/pr43869.c (dg-options): Ditto.\n\t* gcc.target/i386/pr57003.c (dg-options): Ditto.\n\t* gcc.target/i386/avx-vzeroupper-16.c (dg-options):\n\tRemove -mtune=generic and add -maccumulate-outgoing-args instead.\n\t* gcc.target/i386/avx-vzeroupper-17.c (dg-options): Ditto.\n\t* gcc.target/i386/avx-vzeroupper-18.c (dg-options): Ditto.\n\t* gcc.target/x86_64/abi/callabi/func-1.c (dg-options):\n\tAdd -maccumulate-outgoing-args.\n\t* gcc.target/x86_64/abi/callabi/func-2a.c (dg-options): Ditto.\n\t* gcc.target/x86_64/abi/callabi/func-2b.c (dg-options): Ditto.\n\t* gcc.target/x86_64/abi/callabi/func-indirect.c (dg-options): Ditto.\n\t* gcc.target/x86_64/abi/callabi/func-indirect-2a.c (dg-options): Ditto.\n\t* gcc.target/x86_64/abi/callabi/func-indirect-2b.c (dg-options): Ditto.\n\t* gcc.target/x86_64/abi/callabi/leaf-1.c (dg-options): Ditto.\n\t* gcc.target/x86_64/abi/callabi/leaf-2.c (dg-options): Ditto.\n\t* gcc.target/x86_64/abi/callabi/pr38891.c (dg-options): Ditto.\n\t* gcc.target/x86_64/abi/callabi/vaarg-1.c (dg-options): Ditto.\n\t* gcc.target/x86_64/abi/callabi/vaarg-2.c (dg-options): Ditto.\n\t* gcc.target/x86_64/abi/callabi/vaarg-3.c (dg-options): Ditto.\n\t* gcc.target/x86_64/abi/callabi/vaarg-4a.c (dg-options): Ditto.\n\t* gcc.target/x86_64/abi/callabi/vaarg-4b.c (dg-options): Ditto.\n\t* gcc.target/x86_64/abi/callabi/vaarg-5a.c (dg-options): Ditto.\n\t* gcc.target/x86_64/abi/callabi/vaarg-5b.c (dg-options): Ditto.\n\nFrom-SVN: r205998", "tree": {"sha": "1981ecce757176434bf3d5fa3cdf7652266f87d4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1981ecce757176434bf3d5fa3cdf7652266f87d4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e009b7da8d5447e0868a1c9c08d77470b853b3d8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e009b7da8d5447e0868a1c9c08d77470b853b3d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e009b7da8d5447e0868a1c9c08d77470b853b3d8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e009b7da8d5447e0868a1c9c08d77470b853b3d8/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "013a961bacc2aacc34f27b786a5f191fbfe094c4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/013a961bacc2aacc34f27b786a5f191fbfe094c4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/013a961bacc2aacc34f27b786a5f191fbfe094c4"}], "stats": {"total": 71, "additions": 50, "deletions": 21}, "files": [{"sha": "03acadd506261adf79d2e77087c4c03efa90bf9a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e009b7da8d5447e0868a1c9c08d77470b853b3d8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e009b7da8d5447e0868a1c9c08d77470b853b3d8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e009b7da8d5447e0868a1c9c08d77470b853b3d8", "patch": "@@ -1,3 +1,31 @@\n+2013-12-15  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* gcc.target/i386/pr43662.c (dg-options):\n+\tAdd -maccumulate-outgoing-args.\n+\t* gcc.target/i386/pr43869.c (dg-options): Ditto.\n+\t* gcc.target/i386/pr57003.c (dg-options): Ditto.\n+\t* gcc.target/i386/avx-vzeroupper-16.c (dg-options):\n+\tRemove -mtune=generic and add -maccumulate-outgoing-args instead.\n+\t* gcc.target/i386/avx-vzeroupper-17.c (dg-options): Ditto.\n+\t* gcc.target/i386/avx-vzeroupper-18.c (dg-options): Ditto.\n+\t* gcc.target/x86_64/abi/callabi/func-1.c (dg-options):\n+\tAdd -maccumulate-outgoing-args.\n+\t* gcc.target/x86_64/abi/callabi/func-2a.c (dg-options): Ditto.\n+\t* gcc.target/x86_64/abi/callabi/func-2b.c (dg-options): Ditto.\n+\t* gcc.target/x86_64/abi/callabi/func-indirect.c (dg-options): Ditto.\n+\t* gcc.target/x86_64/abi/callabi/func-indirect-2a.c (dg-options): Ditto.\n+\t* gcc.target/x86_64/abi/callabi/func-indirect-2b.c (dg-options): Ditto.\n+\t* gcc.target/x86_64/abi/callabi/leaf-1.c (dg-options): Ditto.\n+\t* gcc.target/x86_64/abi/callabi/leaf-2.c (dg-options): Ditto.\n+\t* gcc.target/x86_64/abi/callabi/pr38891.c (dg-options): Ditto.\n+\t* gcc.target/x86_64/abi/callabi/vaarg-1.c (dg-options): Ditto.\n+\t* gcc.target/x86_64/abi/callabi/vaarg-2.c (dg-options): Ditto.\n+\t* gcc.target/x86_64/abi/callabi/vaarg-3.c (dg-options): Ditto.\n+\t* gcc.target/x86_64/abi/callabi/vaarg-4a.c (dg-options): Ditto.\n+\t* gcc.target/x86_64/abi/callabi/vaarg-4b.c (dg-options): Ditto.\n+\t* gcc.target/x86_64/abi/callabi/vaarg-5a.c (dg-options): Ditto.\n+\t* gcc.target/x86_64/abi/callabi/vaarg-5b.c (dg-options): Ditto.\n+\n 2013-12-15  Janus Weil  <janus@gcc.gnu.org>\n \n \tPR fortran/59493"}, {"sha": "b64add14e6bf453ddde9e3707391f48387491e79", "filename": "gcc/testsuite/gcc.target/i386/avx-vzeroupper-16.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e009b7da8d5447e0868a1c9c08d77470b853b3d8/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-vzeroupper-16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e009b7da8d5447e0868a1c9c08d77470b853b3d8/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-vzeroupper-16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-vzeroupper-16.c?ref=e009b7da8d5447e0868a1c9c08d77470b853b3d8", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile { target lp64 } } */\n-/* { dg-options \"-O2 -mavx -mabi=ms -mtune=generic -dp\" } */\n+/* { dg-options \"-O2 -mavx -mabi=ms -maccumulate-outgoing-args -dp\" } */\n \n typedef float __m256 __attribute__ ((__vector_size__ (32), __may_alias__));\n "}, {"sha": "16d29958c7ebf2870a6f478cc93beaa25126bf5f", "filename": "gcc/testsuite/gcc.target/i386/avx-vzeroupper-17.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e009b7da8d5447e0868a1c9c08d77470b853b3d8/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-vzeroupper-17.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e009b7da8d5447e0868a1c9c08d77470b853b3d8/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-vzeroupper-17.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-vzeroupper-17.c?ref=e009b7da8d5447e0868a1c9c08d77470b853b3d8", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile { target lp64 } } */\n-/* { dg-options \"-O2 -mavx -mabi=ms -mtune=generic -dp\" } */\n+/* { dg-options \"-O2 -mavx -mabi=ms -maccumulate-outgoing-args -dp\" } */\n \n typedef float __m256 __attribute__ ((__vector_size__ (32), __may_alias__));\n "}, {"sha": "4dcb00f6f114cb66ac850f7ccbf0ddc7fc78b656", "filename": "gcc/testsuite/gcc.target/i386/avx-vzeroupper-18.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e009b7da8d5447e0868a1c9c08d77470b853b3d8/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-vzeroupper-18.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e009b7da8d5447e0868a1c9c08d77470b853b3d8/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-vzeroupper-18.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-vzeroupper-18.c?ref=e009b7da8d5447e0868a1c9c08d77470b853b3d8", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile { target lp64 } } */\n-/* { dg-options \"-O0 -mavx -mabi=ms -mtune=generic -dp\" } */\n+/* { dg-options \"-O0 -mavx -mabi=ms -maccumulate-outgoing-args -dp\" } */\n \n typedef float __m256 __attribute__ ((__vector_size__ (32), __may_alias__));\n "}, {"sha": "2d87ddfb5d967b942ad3ad7564f28d1d801c667d", "filename": "gcc/testsuite/gcc.target/i386/pr43662.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e009b7da8d5447e0868a1c9c08d77470b853b3d8/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr43662.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e009b7da8d5447e0868a1c9c08d77470b853b3d8/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr43662.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr43662.c?ref=e009b7da8d5447e0868a1c9c08d77470b853b3d8", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile { target lp64 } } */\n-/* { dg-options \"-O2\" } */\n+/* { dg-options \"-O2 -maccumulate-outgoing-args\" } */\n \n void __attribute__ ((ms_abi)) foo (void)\n {"}, {"sha": "fbcd4d97ad9806e1a6d37ad7747a0bf5fe2c4205", "filename": "gcc/testsuite/gcc.target/i386/pr43869.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e009b7da8d5447e0868a1c9c08d77470b853b3d8/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr43869.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e009b7da8d5447e0868a1c9c08d77470b853b3d8/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr43869.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr43869.c?ref=e009b7da8d5447e0868a1c9c08d77470b853b3d8", "patch": "@@ -1,4 +1,5 @@\n /* { dg-do compile { target lp64 } } */\n+/* { dg-options \"-maccumulate-outgoing-args\" } */\n \n int __attribute__((__noinline__))\n bugged(float f1, float f2, float f3, float f4,"}, {"sha": "91b4f5402e66a22c3956f8b6674f74afc30de64f", "filename": "gcc/testsuite/gcc.target/i386/pr57003.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e009b7da8d5447e0868a1c9c08d77470b853b3d8/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr57003.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e009b7da8d5447e0868a1c9c08d77470b853b3d8/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr57003.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr57003.c?ref=e009b7da8d5447e0868a1c9c08d77470b853b3d8", "patch": "@@ -1,6 +1,6 @@\n /* PR rtl-optimization/57003 */\n /* { dg-do run } */\n-/* { dg-options \"-O2\" } */\n+/* { dg-options \"-O2 -maccumulate-outgoing-args\" } */\n \n #define N 2001\n unsigned short *b, *c, *d;"}, {"sha": "36645bdc3316157b61898e512e57d0328346d35a", "filename": "gcc/testsuite/gcc.target/x86_64/abi/callabi/func-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e009b7da8d5447e0868a1c9c08d77470b853b3d8/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Fcallabi%2Ffunc-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e009b7da8d5447e0868a1c9c08d77470b853b3d8/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Fcallabi%2Ffunc-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Fcallabi%2Ffunc-1.c?ref=e009b7da8d5447e0868a1c9c08d77470b853b3d8", "patch": "@@ -2,7 +2,7 @@\n */\n /* Origin: Kai Tietz <kai.tietz@onevision.com> */\n /* { dg-do run } */\n-/* { dg-options \"-std=gnu99 -ffast-math\" } */\n+/* { dg-options \"-std=gnu99 -ffast-math -maccumulate-outgoing-args\" } */\n #include \"callabi.h\"\n \n extern void abort (void);"}, {"sha": "3b26da6312c1a95d13a08f4c72058940ed012bb9", "filename": "gcc/testsuite/gcc.target/x86_64/abi/callabi/func-2a.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e009b7da8d5447e0868a1c9c08d77470b853b3d8/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Fcallabi%2Ffunc-2a.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e009b7da8d5447e0868a1c9c08d77470b853b3d8/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Fcallabi%2Ffunc-2a.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Fcallabi%2Ffunc-2a.c?ref=e009b7da8d5447e0868a1c9c08d77470b853b3d8", "patch": "@@ -1,6 +1,6 @@\n /* Test for cross x86_64<->w64 abi standard calls.  */\n /* { dg-do run { target i?86-*-linux* x86_64-*-linux* } } */\n-/* { dg-options \"-O2 -mabi=ms -std=gnu99 -ffast-math -fno-builtin\" } */\n+/* { dg-options \"-O2 -mabi=ms -std=gnu99 -ffast-math -fno-builtin -maccumulate-outgoing-args\" } */\n /* { dg-additional-sources \"func-2b.c\" } */\n \n extern void __attribute__ ((sysv_abi)) abort (void);"}, {"sha": "0665665e44a92d5022a72b83798be81a0ed7e3ac", "filename": "gcc/testsuite/gcc.target/x86_64/abi/callabi/func-2b.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e009b7da8d5447e0868a1c9c08d77470b853b3d8/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Fcallabi%2Ffunc-2b.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e009b7da8d5447e0868a1c9c08d77470b853b3d8/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Fcallabi%2Ffunc-2b.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Fcallabi%2Ffunc-2b.c?ref=e009b7da8d5447e0868a1c9c08d77470b853b3d8", "patch": "@@ -1,5 +1,5 @@\n /* Test for cross x86_64<->w64 abi standard calls.  */\n-/* { dg-options \"-mabi=ms -std=gnu99 -ffast-math -fno-builtin\" } */\n+/* { dg-options \"-mabi=ms -std=gnu99 -ffast-math -fno-builtin -maccumulate-outgoing-args\" } */\n \n long double func_cross (long double a, double b, float c, long d, int e,\n \t\t\tchar f)"}, {"sha": "ab124660518f7da427595689614908de421c2c7c", "filename": "gcc/testsuite/gcc.target/x86_64/abi/callabi/func-indirect-2a.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e009b7da8d5447e0868a1c9c08d77470b853b3d8/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Fcallabi%2Ffunc-indirect-2a.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e009b7da8d5447e0868a1c9c08d77470b853b3d8/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Fcallabi%2Ffunc-indirect-2a.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Fcallabi%2Ffunc-indirect-2a.c?ref=e009b7da8d5447e0868a1c9c08d77470b853b3d8", "patch": "@@ -1,6 +1,6 @@\n /* Test for cross x86_64<->w64 abi standard calls via variable.  */\n /* { dg-do run { target i?86-*-linux* x86_64-*-linux* } } */\n-/* { dg-options \"-O2 -mabi=ms -std=gnu99 -ffast-math -fno-builtin\" } */\n+/* { dg-options \"-O2 -mabi=ms -std=gnu99 -ffast-math -fno-builtin -maccumulate-outgoing-args\" } */\n /* { dg-additional-sources \"func-indirect-2b.c\" } */\n \n extern void __attribute__ ((sysv_abi)) abort (void);"}, {"sha": "6d154364a7735d232d85d271bc9a3d833da74b20", "filename": "gcc/testsuite/gcc.target/x86_64/abi/callabi/func-indirect-2b.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e009b7da8d5447e0868a1c9c08d77470b853b3d8/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Fcallabi%2Ffunc-indirect-2b.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e009b7da8d5447e0868a1c9c08d77470b853b3d8/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Fcallabi%2Ffunc-indirect-2b.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Fcallabi%2Ffunc-indirect-2b.c?ref=e009b7da8d5447e0868a1c9c08d77470b853b3d8", "patch": "@@ -1,5 +1,5 @@\n /* Test for cross x86_64<->w64 abi standard calls via variable.  */\n-/* { dg-options \"-O2 -mabi=ms -std=gnu99 -ffast-math -fno-builtin\" } */\n+/* { dg-options \"-O2 -mabi=ms -std=gnu99 -ffast-math -fno-builtin -maccumulate-outgoing-args\" } */\n \n typedef int (*func)(void *, char *, char *, short, long long);\n "}, {"sha": "1b77a00db6729d76ab2ea8613d1ea94031841bbd", "filename": "gcc/testsuite/gcc.target/x86_64/abi/callabi/func-indirect.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e009b7da8d5447e0868a1c9c08d77470b853b3d8/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Fcallabi%2Ffunc-indirect.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e009b7da8d5447e0868a1c9c08d77470b853b3d8/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Fcallabi%2Ffunc-indirect.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Fcallabi%2Ffunc-indirect.c?ref=e009b7da8d5447e0868a1c9c08d77470b853b3d8", "patch": "@@ -2,7 +2,7 @@\n */\n /* Origin: Kai Tietz <kai.tietz@onevision.com> */\n /* { dg-do run } */\n-/* { dg-options \"-std=gnu99 -ffast-math\" } */\n+/* { dg-options \"-std=gnu99 -ffast-math -maccumulate-outgoing-args\" } */\n #include \"callabi.h\"\n \n extern void abort (void);"}, {"sha": "027134f6c5b57a7813e69496ce171de7cf2a8c37", "filename": "gcc/testsuite/gcc.target/x86_64/abi/callabi/leaf-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e009b7da8d5447e0868a1c9c08d77470b853b3d8/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Fcallabi%2Fleaf-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e009b7da8d5447e0868a1c9c08d77470b853b3d8/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Fcallabi%2Fleaf-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Fcallabi%2Fleaf-1.c?ref=e009b7da8d5447e0868a1c9c08d77470b853b3d8", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -mabi=sysv\" } */\n+/* { dg-options \"-O2 -mabi=sysv -maccumulate-outgoing-args\" } */\n \n __attribute__ ((ms_abi))\n int foo (void)"}, {"sha": "93b1f64d65ab70d68ddd956cc16872ecf9575922", "filename": "gcc/testsuite/gcc.target/x86_64/abi/callabi/leaf-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e009b7da8d5447e0868a1c9c08d77470b853b3d8/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Fcallabi%2Fleaf-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e009b7da8d5447e0868a1c9c08d77470b853b3d8/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Fcallabi%2Fleaf-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Fcallabi%2Fleaf-2.c?ref=e009b7da8d5447e0868a1c9c08d77470b853b3d8", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -mabi=sysv\" } */\n+/* { dg-options \"-O2 -mabi=sysv -maccumulate-outgoing-args\" } */\n \n extern int glb1, gbl2, gbl3;\n "}, {"sha": "e3503d3582ac19c2797c07f36ddf7fd9b9f194ec", "filename": "gcc/testsuite/gcc.target/x86_64/abi/callabi/pr38891.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e009b7da8d5447e0868a1c9c08d77470b853b3d8/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Fcallabi%2Fpr38891.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e009b7da8d5447e0868a1c9c08d77470b853b3d8/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Fcallabi%2Fpr38891.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Fcallabi%2Fpr38891.c?ref=e009b7da8d5447e0868a1c9c08d77470b853b3d8", "patch": "@@ -1,7 +1,7 @@\n /* Test for cross x86_64<->w64 abi standard calls.\n */\n /* { dg-do compile } */\n-/* { dg-options \"-mno-sse\" } */\n+/* { dg-options \"-mno-sse -maccumulate-outgoing-args\" } */\n #include \"callabi.h\"\n \n long double"}, {"sha": "2be8a9900906a41eca8a2483b52ebeadf91f8da7", "filename": "gcc/testsuite/gcc.target/x86_64/abi/callabi/vaarg-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e009b7da8d5447e0868a1c9c08d77470b853b3d8/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Fcallabi%2Fvaarg-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e009b7da8d5447e0868a1c9c08d77470b853b3d8/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Fcallabi%2Fvaarg-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Fcallabi%2Fvaarg-1.c?ref=e009b7da8d5447e0868a1c9c08d77470b853b3d8", "patch": "@@ -2,7 +2,7 @@\n */\n /* Origin: Kai Tietz <kai.tietz@onevision.com> */\n /* { dg-do run } */\n-/* { dg-options \"-std=gnu99\" } */\n+/* { dg-options \"-std=gnu99 -maccumulate-outgoing-args\" } */\n #include \"callabi.h\"\n \n extern __SIZE_TYPE__ strlen (const char *);"}, {"sha": "c6399457918f80f61e7e295024c2f63eb60b7c3b", "filename": "gcc/testsuite/gcc.target/x86_64/abi/callabi/vaarg-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e009b7da8d5447e0868a1c9c08d77470b853b3d8/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Fcallabi%2Fvaarg-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e009b7da8d5447e0868a1c9c08d77470b853b3d8/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Fcallabi%2Fvaarg-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Fcallabi%2Fvaarg-2.c?ref=e009b7da8d5447e0868a1c9c08d77470b853b3d8", "patch": "@@ -2,7 +2,7 @@\n */\n /* Origin: Kai Tietz <kai.tietz@onevision.com> */\n /* { dg-do run } */\n-/* { dg-options \"-std=gnu99\" } */\n+/* { dg-options \"-std=gnu99 -maccumulate-outgoing-args\" } */\n #include \"callabi.h\"\n \n extern void abort (void);"}, {"sha": "366d696cf326dd7511b20d4acece021940e39ed3", "filename": "gcc/testsuite/gcc.target/x86_64/abi/callabi/vaarg-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e009b7da8d5447e0868a1c9c08d77470b853b3d8/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Fcallabi%2Fvaarg-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e009b7da8d5447e0868a1c9c08d77470b853b3d8/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Fcallabi%2Fvaarg-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Fcallabi%2Fvaarg-3.c?ref=e009b7da8d5447e0868a1c9c08d77470b853b3d8", "patch": "@@ -2,7 +2,7 @@\n */\n /* Origin: Kai Tietz <kai.tietz@onevision.com> */\n /* { dg-do run } */\n-/* { dg-options \"-std=gnu99\" } */\n+/* { dg-options \"-std=gnu99 -maccumulate-outgoing-args\" } */\n #include \"callabi.h\"\n \n extern void abort (void);"}, {"sha": "ec63d5acfe31bc25f5595bbfed046e4938f1f6ef", "filename": "gcc/testsuite/gcc.target/x86_64/abi/callabi/vaarg-4a.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e009b7da8d5447e0868a1c9c08d77470b853b3d8/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Fcallabi%2Fvaarg-4a.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e009b7da8d5447e0868a1c9c08d77470b853b3d8/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Fcallabi%2Fvaarg-4a.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Fcallabi%2Fvaarg-4a.c?ref=e009b7da8d5447e0868a1c9c08d77470b853b3d8", "patch": "@@ -1,6 +1,6 @@\n /* Test for cross x86_64<->w64 abi va_list calls.  */\n /* { dg-do run { target i?86-*-linux* x86_64-*-linux* } } */\n-/* { dg-options \"-O2 -mabi=ms -std=gnu99 -fno-builtin\" } */\n+/* { dg-options \"-O2 -mabi=ms -std=gnu99 -fno-builtin -maccumulate-outgoing-args\" } */\n /* { dg-additional-sources \"vaarg-4b.c\" } */\n \n extern __SIZE_TYPE__ __attribute__ ((sysv_abi)) strlen (const char *);"}, {"sha": "444d19039ccd5b4d74bb4630146cf9444ca2eaa1", "filename": "gcc/testsuite/gcc.target/x86_64/abi/callabi/vaarg-4b.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e009b7da8d5447e0868a1c9c08d77470b853b3d8/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Fcallabi%2Fvaarg-4b.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e009b7da8d5447e0868a1c9c08d77470b853b3d8/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Fcallabi%2Fvaarg-4b.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Fcallabi%2Fvaarg-4b.c?ref=e009b7da8d5447e0868a1c9c08d77470b853b3d8", "patch": "@@ -1,5 +1,5 @@\n /* Test for cross x86_64<->w64 abi va_list calls.  */\n-/* { dg-options \"-O2 -mabi=ms -std=gnu99 -fno-builtin\" } */\n+/* { dg-options \"-O2 -mabi=ms -std=gnu99 -fno-builtin -maccumulate-outgoing-args\" } */\n \n #include <stdarg.h>\n "}, {"sha": "7e56e5d6bab142484a647f92f0edf0f92dc618a9", "filename": "gcc/testsuite/gcc.target/x86_64/abi/callabi/vaarg-5a.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e009b7da8d5447e0868a1c9c08d77470b853b3d8/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Fcallabi%2Fvaarg-5a.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e009b7da8d5447e0868a1c9c08d77470b853b3d8/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Fcallabi%2Fvaarg-5a.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Fcallabi%2Fvaarg-5a.c?ref=e009b7da8d5447e0868a1c9c08d77470b853b3d8", "patch": "@@ -1,6 +1,6 @@\n /* Test for cross x86_64<->w64 abi va_list calls.  */\n /* { dg-do run { target i?86-*-linux* x86_64-*-linux* } } */\n-/* { dg-options \"-O2 -mabi=ms -std=gnu99 -fno-builtin\" } */\n+/* { dg-options \"-O2 -mabi=ms -std=gnu99 -fno-builtin -maccumulate-outgoing-args\" } */\n /* { dg-additional-sources \"vaarg-5b.c\" } */\n \n extern void __attribute__ ((sysv_abi)) abort (void);"}, {"sha": "c3de7143d448e15772241eaca174547884a62a5e", "filename": "gcc/testsuite/gcc.target/x86_64/abi/callabi/vaarg-5b.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e009b7da8d5447e0868a1c9c08d77470b853b3d8/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Fcallabi%2Fvaarg-5b.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e009b7da8d5447e0868a1c9c08d77470b853b3d8/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Fcallabi%2Fvaarg-5b.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fx86_64%2Fabi%2Fcallabi%2Fvaarg-5b.c?ref=e009b7da8d5447e0868a1c9c08d77470b853b3d8", "patch": "@@ -1,5 +1,5 @@\n /* Test for cross x86_64<->w64 abi va_list calls.  */\n-/* { dg-options \"-O2 -mabi=ms -std=gnu99 -fno-builtin\" } */\n+/* { dg-options \"-O2 -mabi=ms -std=gnu99 -fno-builtin -maccumulate-outgoing-args\" } */\n \n #include <stdarg.h>\n "}]}