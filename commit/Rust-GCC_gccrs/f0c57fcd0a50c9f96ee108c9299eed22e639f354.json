{"sha": "f0c57fcd0a50c9f96ee108c9299eed22e639f354", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjBjNTdmY2QwYTUwYzlmOTZlZTEwOGM5Mjk5ZWVkMjJlNjM5ZjM1NA==", "commit": {"author": {"name": "Ghjuvan Lacambre", "email": "lacambre@adacore.com", "date": "2020-08-25T10:16:24Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-10-22T12:11:27Z"}, "message": "[Ada] CUDA: discover runtime types instead of hard-coding\n\ngcc/ada/\n\n\t* exp_prag.adb (Get_Launch_Kernel_Arg_Type): New function.\n\t(Build_Shared_Memory_Declaration): Use\n\tGet_Launch_Kernel_Arg_Type.\n\t(Build_Stream_Declaration): Use Get_Launch_Kernel_Arg_Type.\n\t* rtsfind.ads: Remove RO_IC_Unsigned_Long_Long.", "tree": {"sha": "7b0eb6e6ea48856f2fe66d1703d6d47c601e72ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7b0eb6e6ea48856f2fe66d1703d6d47c601e72ec"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f0c57fcd0a50c9f96ee108c9299eed22e639f354", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f0c57fcd0a50c9f96ee108c9299eed22e639f354", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f0c57fcd0a50c9f96ee108c9299eed22e639f354", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f0c57fcd0a50c9f96ee108c9299eed22e639f354/comments", "author": {"login": "glacambre", "id": 11534587, "node_id": "MDQ6VXNlcjExNTM0NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/11534587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/glacambre", "html_url": "https://github.com/glacambre", "followers_url": "https://api.github.com/users/glacambre/followers", "following_url": "https://api.github.com/users/glacambre/following{/other_user}", "gists_url": "https://api.github.com/users/glacambre/gists{/gist_id}", "starred_url": "https://api.github.com/users/glacambre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/glacambre/subscriptions", "organizations_url": "https://api.github.com/users/glacambre/orgs", "repos_url": "https://api.github.com/users/glacambre/repos", "events_url": "https://api.github.com/users/glacambre/events{/privacy}", "received_events_url": "https://api.github.com/users/glacambre/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d4194d74faee24c9bded05ba1b523e52f8b40bf0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4194d74faee24c9bded05ba1b523e52f8b40bf0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d4194d74faee24c9bded05ba1b523e52f8b40bf0"}], "stats": {"total": 25, "additions": 21, "deletions": 4}, "files": [{"sha": "1367884cef6f34b1f900e5fd20d080cf3b1823cf", "filename": "gcc/ada/exp_prag.adb", "status": "modified", "additions": 21, "deletions": 2, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0c57fcd0a50c9f96ee108c9299eed22e639f354/gcc%2Fada%2Fexp_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0c57fcd0a50c9f96ee108c9299eed22e639f354/gcc%2Fada%2Fexp_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_prag.adb?ref=f0c57fcd0a50c9f96ee108c9299eed22e639f354", "patch": "@@ -748,6 +748,10 @@ package body Exp_Prag is\n       --  type of which is Integer, the value of which is Init_Val if present\n       --  and 0 otherwise.\n \n+      function Get_Launch_Kernel_Arg_Type (N : Positive) return Entity_Id;\n+      --  Returns the type of the Nth argument of the Launch_Kernel CUDA\n+      --  runtime function.\n+\n       function To_Addresses (Elmts : Elist_Id) return List_Id;\n       --  Returns a new list containing each element of Elmts wrapped in an\n       --  'address attribute reference. When passed No_Elist, returns an empty\n@@ -910,7 +914,7 @@ package body Exp_Prag is\n            (Decl_Id     => Decl_Id,\n             Init_Val    => Init_Val,\n             Typ         =>\n-              New_Occurrence_Of (RTE (RO_IC_Unsigned_Long_Long), Loc),\n+              New_Occurrence_Of (Get_Launch_Kernel_Arg_Type (5), Loc),\n             Default_Val => Make_Integer_Literal (Loc, 0));\n       end Build_Shared_Memory_Declaration;\n \n@@ -948,10 +952,25 @@ package body Exp_Prag is\n          return Build_Simple_Declaration_With_Default\n            (Decl_Id     => Decl_Id,\n             Init_Val    => Init_Val,\n-            Typ         => New_Occurrence_Of (RTE (RE_Stream_T), Loc),\n+            Typ         =>\n+              New_Occurrence_Of (Get_Launch_Kernel_Arg_Type (6), Loc),\n             Default_Val => Make_Null (Loc));\n       end Build_Stream_Declaration;\n \n+      --------------------------------\n+      -- Get_Launch_Kernel_Arg_Type --\n+      --------------------------------\n+\n+      function Get_Launch_Kernel_Arg_Type (N : Positive) return Entity_Id is\n+         Argument : Entity_Id := First_Entity (RTE (RE_Launch_Kernel));\n+      begin\n+         for J in 2 .. N loop\n+            Argument := Next_Entity (Argument);\n+         end loop;\n+\n+         return Etype (Argument);\n+      end Get_Launch_Kernel_Arg_Type;\n+\n       ------------------\n       -- To_Addresses --\n       ------------------"}, {"sha": "cbcf52bdc8e1eb42908d81a0d20efca69e41cae7", "filename": "gcc/ada/rtsfind.ads", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0c57fcd0a50c9f96ee108c9299eed22e639f354/gcc%2Fada%2Frtsfind.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0c57fcd0a50c9f96ee108c9299eed22e639f354/gcc%2Fada%2Frtsfind.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frtsfind.ads?ref=f0c57fcd0a50c9f96ee108c9299eed22e639f354", "patch": "@@ -731,7 +731,6 @@ package Rtsfind is\n      RE_Unsigned_128,                    -- Interfaces\n \n      RO_IC_Unsigned,                     -- Interfaces.C\n-     RO_IC_Unsigned_Long_Long,           -- Interfaces.C\n \n      RE_Chars_Ptr,                       -- Interfaces.C.Strings\n      RE_New_Char_Array,                  -- Interfaces.C.Strings\n@@ -2380,7 +2379,6 @@ package Rtsfind is\n      RE_Unsigned_128                     => Interfaces,\n \n      RO_IC_Unsigned                      => Interfaces_C,\n-     RO_IC_Unsigned_Long_Long            => Interfaces_C,\n \n      RE_Chars_Ptr                        => Interfaces_C_Strings,\n      RE_New_Char_Array                   => Interfaces_C_Strings,"}]}