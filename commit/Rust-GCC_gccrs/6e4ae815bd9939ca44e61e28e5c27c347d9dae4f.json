{"sha": "6e4ae815bd9939ca44e61e28e5c27c347d9dae4f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmU0YWU4MTViZDk5MzljYTQ0ZTYxZTI4ZTVjMjdjMzQ3ZDlkYWU0Zg==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2002-03-15T20:08:39Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2002-03-15T20:08:39Z"}, "message": "c-common.c (statement_code_p): Handle CLEANUP_STMT.\n\n\t* c-common.c (statement_code_p): Handle CLEANUP_STMT.\n\t* c-common.def (CLEANUP_STMT): New tree node.\n\t* c-common.h (CLEANUP_DECL): New macro.\n\t(CLEANUP_EXPR): Likewise.\n\t* c-semantics.c (expand_stmt): Handle CLEANUP_STMT.\n\t* tree-dump.c (dequeue_and_dump): Handle CLEANUP_STMT.\n\t* tree-inline.c (initialize_inlined_parameters): Clean up\n\tnew local variables.\n\n\t* cp-tree.h (CLEANUP_DECL): Remove.\n\t(CLEANUP_EXPR): Likewise.\n\t* decl.c (destroy_local_var): Simplify.\n\t(maybe_build_cleanup): Tidy.\n\t* dump.c (cp_dump_tree): Remove handling of CLEANUP_STMT.\n\t* semantics.c (cp_expand_stmt): Likewise.\n\t* cp/tree.c (cp_statement_code_p): Likewise.\n\n\t* g++.dg/opt/dtor1.C: New test.\n\nFrom-SVN: r50830", "tree": {"sha": "db4a627f532c42df854f6b4b67e6005e3d470c92", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/db4a627f532c42df854f6b4b67e6005e3d470c92"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6e4ae815bd9939ca44e61e28e5c27c347d9dae4f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e4ae815bd9939ca44e61e28e5c27c347d9dae4f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6e4ae815bd9939ca44e61e28e5c27c347d9dae4f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e4ae815bd9939ca44e61e28e5c27c347d9dae4f/comments", "author": null, "committer": null, "parents": [{"sha": "08bcc159d9e63cd48eb12895f027e5d84d2ccd65", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08bcc159d9e63cd48eb12895f027e5d84d2ccd65", "html_url": "https://github.com/Rust-GCC/gccrs/commit/08bcc159d9e63cd48eb12895f027e5d84d2ccd65"}], "stats": {"total": 121, "additions": 95, "deletions": 26}, "files": [{"sha": "2f3e025caf7b60593aa4eeaa78209226da2c187b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e4ae815bd9939ca44e61e28e5c27c347d9dae4f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e4ae815bd9939ca44e61e28e5c27c347d9dae4f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6e4ae815bd9939ca44e61e28e5c27c347d9dae4f", "patch": "@@ -1,3 +1,15 @@\n+2002-03-15  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* c-common.c (statement_code_p): Handle CLEANUP_STMT.\n+\t* c-common.def (CLEANUP_STMT): New tree node.\n+\t* c-common.h (CLEANUP_DECL): New macro.\n+\t(CLEANUP_EXPR): Likewise.\n+\t* c-semantics.c (expand_stmt): Handle CLEANUP_STMT.\n+\t* expr.c (expand_expr): Tidy.\n+\t* tree-dump.c (dequeue_and_dump): Handle CLEANUP_STMT.\n+\t* tree-inline.c (initialize_inlined_parameters): Clean up\n+\tnew local variables.\n+\n 2002-03-15  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR bootstrap/4128"}, {"sha": "4b2350e8cc42e1ea006a8f9646bb13266d74a8d8", "filename": "gcc/c-common.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e4ae815bd9939ca44e61e28e5c27c347d9dae4f/gcc%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e4ae815bd9939ca44e61e28e5c27c347d9dae4f/gcc%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.c?ref=6e4ae815bd9939ca44e61e28e5c27c347d9dae4f", "patch": "@@ -3213,6 +3213,7 @@ statement_code_p (code)\n {\n   switch (code)\n     {\n+    case CLEANUP_STMT:\n     case EXPR_STMT:\n     case COMPOUND_STMT:\n     case DECL_STMT:"}, {"sha": "7ad9e385229a93c37a1705b4bf8b41f7104c74e4", "filename": "gcc/c-common.def", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e4ae815bd9939ca44e61e28e5c27c347d9dae4f/gcc%2Fc-common.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e4ae815bd9939ca44e61e28e5c27c347d9dae4f/gcc%2Fc-common.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.def?ref=6e4ae815bd9939ca44e61e28e5c27c347d9dae4f", "patch": "@@ -113,6 +113,11 @@ DEFTREECODE (STMT_EXPR, \"stmt_expr\", 'e', 1)\n    the compound literal.  */\n DEFTREECODE (COMPOUND_LITERAL_EXPR, \"compound_literal_expr\", 'e', 1)\n \n+/* A CLEANUP_STMT marks the point at which a declaration is fully\n+   constructed.  If, after this point, the CLEANUP_DECL goes out of\n+   scope, the CLEANUP_EXPR must be run.  */\n+DEFTREECODE (CLEANUP_STMT, \"cleanup_stmt\", 'e', 2)\n+\n /*\n Local variables:\n mode:c"}, {"sha": "280c5b0d2d2ac86368de2cfee5bedab311c82323", "filename": "gcc/c-common.h", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e4ae815bd9939ca44e61e28e5c27c347d9dae4f/gcc%2Fc-common.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e4ae815bd9939ca44e61e28e5c27c347d9dae4f/gcc%2Fc-common.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.h?ref=6e4ae815bd9939ca44e61e28e5c27c347d9dae4f", "patch": "@@ -693,6 +693,13 @@ extern tree strip_array_types                   PARAMS ((tree));\n #define ASM_VOLATILE_P(NODE)\t\t\t\\\n   (ASM_CV_QUAL (ASM_STMT_CHECK (NODE)) != NULL_TREE)\n \n+/* The VAR_DECL to clean up in a CLEANUP_STMT.  */\n+#define CLEANUP_DECL(NODE) \\\n+  TREE_OPERAND (CLEANUP_STMT_CHECK (NODE), 0)\n+/* The cleanup to run in a CLEANUP_STMT.  */\n+#define CLEANUP_EXPR(NODE) \\\n+  TREE_OPERAND (CLEANUP_STMT_CHECK (NODE), 1)\n+\n /* The filename we are changing to as of this FILE_STMT.  */\n #define FILE_STMT_FILENAME_NODE(NODE) \\\n   (TREE_OPERAND (FILE_STMT_CHECK (NODE), 0))"}, {"sha": "3d8759d8584cdf4237a6d297bae0b3300b9a53ed", "filename": "gcc/c-semantics.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e4ae815bd9939ca44e61e28e5c27c347d9dae4f/gcc%2Fc-semantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e4ae815bd9939ca44e61e28e5c27c347d9dae4f/gcc%2Fc-semantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-semantics.c?ref=6e4ae815bd9939ca44e61e28e5c27c347d9dae4f", "patch": "@@ -847,6 +847,10 @@ expand_stmt (t)\n \t  genrtl_scope_stmt (t);\n \t  break;\n \n+\tcase CLEANUP_STMT:\n+\t  genrtl_decl_cleanup (CLEANUP_DECL (t), CLEANUP_EXPR (t));\n+\t  break;\n+\n \tdefault:\n \t  if (lang_expand_stmt)\n \t    (*lang_expand_stmt) (t);"}, {"sha": "90ac3c60d8eb484148b757644d8c80b2711baa2a", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e4ae815bd9939ca44e61e28e5c27c347d9dae4f/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e4ae815bd9939ca44e61e28e5c27c347d9dae4f/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=6e4ae815bd9939ca44e61e28e5c27c347d9dae4f", "patch": "@@ -1,3 +1,13 @@\n+2002-03-15  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* cp-tree.h (CLEANUP_DECL): Remove.\n+\t(CLEANUP_EXPR): Likewise.\n+\t* decl.c (destroy_local_var): Simplify.\n+\t(maybe_build_cleanup): Tidy.\n+\t* dump.c (cp_dump_tree): Remove handling of CLEANUP_STMT.\n+\t* semantics.c (cp_expand_stmt): Likewise.\n+\t* cp/tree.c (cp_statement_code_p): Likewise.\n+\n 2002-03-15  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/5857"}, {"sha": "3854525611413c4764ab482bdbc65f2a732027fc", "filename": "gcc/cp/cp-tree.def", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e4ae815bd9939ca44e61e28e5c27c347d9dae4f/gcc%2Fcp%2Fcp-tree.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e4ae815bd9939ca44e61e28e5c27c347d9dae4f/gcc%2Fcp%2Fcp-tree.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.def?ref=6e4ae815bd9939ca44e61e28e5c27c347d9dae4f", "patch": "@@ -230,10 +230,6 @@ DEFTREECODE (SUBOBJECT, \"subobject\", 'e', 1)\n    the cleanups associated with any SUBOBJECT_CLEANUPS need no longer\n    be run.  */\n DEFTREECODE (CTOR_STMT, \"ctor_stmt\", 'e', 0)\n-/* A CLEANUP_STMT marks the point at which a declaration is fully\n-   constructed.  If, after this point, the CLEANUP_DECL goes out of\n-   scope, the CLEANUP_EXPR must be run.  */\n-DEFTREECODE (CLEANUP_STMT, \"cleanup_stmt\", 'e', 2)\n /* CTOR_INITIALIZER is a placeholder in template code for a call to\n    setup_vtbl_pointer (and appears in all functions, not just ctors).  */\n DEFTREECODE (CTOR_INITIALIZER, \"ctor_initializer\", 'e', 2)"}, {"sha": "68a141c5b5673a4578c8073080a98f86bc4b3b1b", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e4ae815bd9939ca44e61e28e5c27c347d9dae4f/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e4ae815bd9939ca44e61e28e5c27c347d9dae4f/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=6e4ae815bd9939ca44e61e28e5c27c347d9dae4f", "patch": "@@ -322,8 +322,6 @@ typedef struct ptrmem_cst\n   set_namespace_binding ((NODE), current_namespace, (VAL))\n \n #define CLEANUP_P(NODE)         TREE_LANG_FLAG_0 (TRY_BLOCK_CHECK (NODE))\n-#define CLEANUP_DECL(NODE)      TREE_OPERAND (CLEANUP_STMT_CHECK (NODE), 0)\n-#define CLEANUP_EXPR(NODE)      TREE_OPERAND (CLEANUP_STMT_CHECK (NODE), 1)\n \n /* Returns nonzero iff TYPE1 and TYPE2 are the same type, in the usual\n    sense of `same'.  */"}, {"sha": "30351c90d44c581b1b1a1fcd68b347076f52b63b", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e4ae815bd9939ca44e61e28e5c27c347d9dae4f/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e4ae815bd9939ca44e61e28e5c27c347d9dae4f/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=6e4ae815bd9939ca44e61e28e5c27c347d9dae4f", "patch": "@@ -8035,8 +8035,7 @@ destroy_local_var (decl)\n   cleanup = maybe_build_cleanup (decl);\n \n   /* Record the cleanup required for this declaration.  */\n-  if (DECL_SIZE (decl) && TREE_TYPE (decl) != error_mark_node\n-      && cleanup)\n+  if (DECL_SIZE (decl) && cleanup)\n     finish_decl_cleanup (decl, cleanup);\n }\n \n@@ -14512,7 +14511,7 @@ maybe_build_cleanup (decl)\n \n       return rval;\n     }\n-  return 0;\n+  return NULL_TREE;\n }\n \f\n /* When a stmt has been parsed, this function is called.  */"}, {"sha": "6dd60baf73be26581b34c727ff32677a2a5c042d", "filename": "gcc/cp/dump.c", "status": "modified", "additions": 1, "deletions": 8, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e4ae815bd9939ca44e61e28e5c27c347d9dae4f/gcc%2Fcp%2Fdump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e4ae815bd9939ca44e61e28e5c27c347d9dae4f/gcc%2Fcp%2Fdump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdump.c?ref=6e4ae815bd9939ca44e61e28e5c27c347d9dae4f", "patch": "@@ -1,5 +1,5 @@\n /* Tree-dumping functionality for intermediate representation.\n-   Copyright (C) 1999, 2000, 2001 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2000, 2001, 2002 Free Software Foundation, Inc.\n    Written by Mark Mitchell <mark@codesourcery.com>\n \n This file is part of GNU CC.\n@@ -390,13 +390,6 @@ cp_dump_tree (dump_info, t)\n       dump_child (\"decl\", TREE_OPERAND (t, 2));\n       break;\n       \n-    case CLEANUP_STMT:\n-      dump_stmt (di, t);\n-      dump_child (\"decl\", CLEANUP_DECL (t));\n-      dump_child (\"expr\", CLEANUP_EXPR (t));\n-      dump_next_stmt (di, t);\n-      break;\n-\n     case CTOR_STMT:\n       dump_stmt (di, t);\n       if (CTOR_BEGIN_P (t))"}, {"sha": "14ecf05f9b5c14d36348b0f55b4702f85696ccfd", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e4ae815bd9939ca44e61e28e5c27c347d9dae4f/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e4ae815bd9939ca44e61e28e5c27c347d9dae4f/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=6e4ae815bd9939ca44e61e28e5c27c347d9dae4f", "patch": "@@ -2125,10 +2125,6 @@ cp_expand_stmt (t)\n {\n   switch (TREE_CODE (t))\n     {\n-    case CLEANUP_STMT:\n-      genrtl_decl_cleanup (CLEANUP_DECL (t), CLEANUP_EXPR (t));\n-      break;\n-\n     case CTOR_STMT:\n       genrtl_ctor_stmt (t);\n       break;"}, {"sha": "acd6fbf3f1db3ef407445d7da968baf80262d8e5", "filename": "gcc/cp/tree.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e4ae815bd9939ca44e61e28e5c27c347d9dae4f/gcc%2Fcp%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e4ae815bd9939ca44e61e28e5c27c347d9dae4f/gcc%2Fcp%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftree.c?ref=6e4ae815bd9939ca44e61e28e5c27c347d9dae4f", "patch": "@@ -1031,7 +1031,6 @@ cp_statement_code_p (code)\n   switch (code)\n     {\n     case SUBOBJECT:\n-    case CLEANUP_STMT:\n     case CTOR_STMT:\n     case CTOR_INITIALIZER:\n     case RETURN_INIT:"}, {"sha": "531289ff99e3b37d9c30f1d757fbfd97fe0f00d3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e4ae815bd9939ca44e61e28e5c27c347d9dae4f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e4ae815bd9939ca44e61e28e5c27c347d9dae4f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6e4ae815bd9939ca44e61e28e5c27c347d9dae4f", "patch": "@@ -1,3 +1,7 @@\n+2002-03-15  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* g++.dg/opt/dtor1.C: New test.\n+\n 2002-03-15  Jakub Jelinek  <jakub@redhat.com>\n \n \t* gcc.c-torture/compile/20020315-1.c: New test."}, {"sha": "0352676c5f7325aeca98ac49d70cfa5e20ec83cc", "filename": "gcc/testsuite/g++.dg/opt/dtor1.C", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e4ae815bd9939ca44e61e28e5c27c347d9dae4f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fdtor1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e4ae815bd9939ca44e61e28e5c27c347d9dae4f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fdtor1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fdtor1.C?ref=6e4ae815bd9939ca44e61e28e5c27c347d9dae4f", "patch": "@@ -0,0 +1,27 @@\n+// { dg-do run }\n+// { dg-options \"-O2\" }\n+\n+int i;\n+\n+struct S {\n+  S ();\n+  S (const S&);\n+  ~S ();\n+};\n+\n+S::S () { ++i; }\n+S::S (const S&) { ++i; }\n+S::~S () { --i; }\n+\n+inline void f (S) {\n+}\n+\n+int main () {\n+  {\n+    S s;\n+    f (s);\n+  }\n+\n+  return i;\n+}\n+"}, {"sha": "d8d8e23ea5f1fc3921348d1a14ff87a221bf79fe", "filename": "gcc/tree-dump.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e4ae815bd9939ca44e61e28e5c27c347d9dae4f/gcc%2Ftree-dump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e4ae815bd9939ca44e61e28e5c27c347d9dae4f/gcc%2Ftree-dump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-dump.c?ref=6e4ae815bd9939ca44e61e28e5c27c347d9dae4f", "patch": "@@ -548,6 +548,13 @@ dequeue_and_dump (di)\n       dump_next_stmt (di, t);\n       break;\n \n+    case CLEANUP_STMT:\n+      dump_stmt (di, t);\n+      dump_child (\"decl\", CLEANUP_DECL (t));\n+      dump_child (\"expr\", CLEANUP_EXPR (t));\n+      dump_next_stmt (di, t);\n+      break;\n+\n     case COMPOUND_STMT:\n       dump_stmt (di, t);\n       dump_child (\"body\", COMPOUND_BODY (t));"}, {"sha": "ce548849d2d14bb2b37f526e371f1bab6885748f", "filename": "gcc/tree-inline.c", "status": "modified", "additions": 15, "deletions": 4, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e4ae815bd9939ca44e61e28e5c27c347d9dae4f/gcc%2Ftree-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e4ae815bd9939ca44e61e28e5c27c347d9dae4f/gcc%2Ftree-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-inline.c?ref=6e4ae815bd9939ca44e61e28e5c27c347d9dae4f", "patch": "@@ -480,6 +480,7 @@ initialize_inlined_parameters (id, args, fn)\n       tree init_stmt;\n       tree var;\n       tree value;\n+      tree cleanup;\n \n       /* Find the initializer.  */\n       value = a ? TREE_VALUE (a) : NULL_TREE;\n@@ -558,16 +559,26 @@ initialize_inlined_parameters (id, args, fn)\n \t  TREE_CHAIN (init_stmt) = init_stmts;\n \t  init_stmts = init_stmt;\n \t}\n+\n+      /* See if we need to clean up the declaration.  */\n+      cleanup = maybe_build_cleanup (var);\n+      if (cleanup) \n+\t{\n+\t  tree cleanup_stmt;\n+\t  /* Build the cleanup statement.  */\n+\t  cleanup_stmt = build_stmt (CLEANUP_STMT, var, cleanup);\n+\t  /* Add it to the *front* of the list; the list will be\n+\t     reversed below.  */\n+\t  TREE_CHAIN (cleanup_stmt) = init_stmts;\n+\t  init_stmts = cleanup_stmt;\n+\t}\n     }\n \n   /* Evaluate trailing arguments.  */\n   for (; a; a = TREE_CHAIN (a))\n     {\n       tree init_stmt;\n-      tree value;\n-\n-      /* Find the initializer.  */\n-      value = a ? TREE_VALUE (a) : NULL_TREE;\n+      tree value = TREE_VALUE (a);\n \n       if (! value || ! TREE_SIDE_EFFECTS (value))\n \tcontinue;"}]}