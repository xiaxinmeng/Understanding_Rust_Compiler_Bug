{"sha": "626a4b315aba6ee84b7978ddc277dd4c49c91a21", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjI2YTRiMzE1YWJhNmVlODRiNzk3OGRkYzI3N2RkNGM0OWM5MWEyMQ==", "commit": {"author": {"name": "Nathan Froyd", "email": "froydnj@codesourcery.com", "date": "2010-08-30T16:03:44Z"}, "committer": {"name": "Nathan Froyd", "email": "froydnj@gcc.gnu.org", "date": "2010-08-30T16:03:44Z"}, "message": "xtensa-protos.h (function_arg_advance): Delete.\n\n\t* config/xtensa/xtensa-protos.h (function_arg_advance): Delete.\n\t(function_arg): Delete.\n\t* config/xtensa/xtensa.h (FUNCTION_ARG, FUNCTION_ARG_ADVANCE): Delete.\n\t(FUNCTION_INCOMING_ARG): Delete.\n\t* config/xtensa/xtensa.c (function_arg_advance): Rename to...\n\t(xtensa_function_arg_advance): ...this.  Make static.  Take a const_tree\n\tand a bool.\n\t(function_arg): Rename to...\n\t(xtensa_function_arg_1): ...this.  Make static.  Take a const_tree and\n\ta bool.\n\t(xtensa_function_arg, xtensa_function_incoming_arg): Nex functions.\n\t(TARGET_FUNCTION_ARG, TARGET_FUNCTION_ARG_ADVANCE): Define.\n\t(TARGET_FUNCTION_INCOMING_ARG): Define.\n\nFrom-SVN: r163649", "tree": {"sha": "9b7965e819512c57228da621827b5d93aa80ebc0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9b7965e819512c57228da621827b5d93aa80ebc0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/626a4b315aba6ee84b7978ddc277dd4c49c91a21", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/626a4b315aba6ee84b7978ddc277dd4c49c91a21", "html_url": "https://github.com/Rust-GCC/gccrs/commit/626a4b315aba6ee84b7978ddc277dd4c49c91a21", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/626a4b315aba6ee84b7978ddc277dd4c49c91a21/comments", "author": null, "committer": null, "parents": [{"sha": "ae4235508ed13b83b8ffdba19829119e937205fe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae4235508ed13b83b8ffdba19829119e937205fe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae4235508ed13b83b8ffdba19829119e937205fe"}], "stats": {"total": 71, "additions": 51, "deletions": 20}, "files": [{"sha": "39eb13c91574cfab51917558dbac590a84d9d6ae", "filename": "gcc/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/626a4b315aba6ee84b7978ddc277dd4c49c91a21/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/626a4b315aba6ee84b7978ddc277dd4c49c91a21/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=626a4b315aba6ee84b7978ddc277dd4c49c91a21", "patch": "@@ -1,3 +1,19 @@\n+2010-08-30  Nathan Froyd  <froydnj@codesourcery.com>\n+\n+\t* config/xtensa/xtensa-protos.h (function_arg_advance): Delete.\n+\t(function_arg): Delete.\n+\t* config/xtensa/xtensa.h (FUNCTION_ARG, FUNCTION_ARG_ADVANCE): Delete.\n+\t(FUNCTION_INCOMING_ARG): Delete.\n+\t* config/xtensa/xtensa.c (function_arg_advance): Rename to...\n+\t(xtensa_function_arg_advance): ...this.  Make static.  Take a const_tree\n+\tand a bool.\n+\t(function_arg): Rename to...\n+\t(xtensa_function_arg_1): ...this.  Make static.  Take a const_tree and\n+\ta bool.\n+\t(xtensa_function_arg, xtensa_function_incoming_arg): Nex functions.\n+\t(TARGET_FUNCTION_ARG, TARGET_FUNCTION_ARG_ADVANCE): Define.\n+\t(TARGET_FUNCTION_INCOMING_ARG): Define.\n+\n 2010-08-30  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/21602"}, {"sha": "18c08d7136ddbac0644b73565b9bece9100cd1ca", "filename": "gcc/config/xtensa/xtensa-protos.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/626a4b315aba6ee84b7978ddc277dd4c49c91a21/gcc%2Fconfig%2Fxtensa%2Fxtensa-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/626a4b315aba6ee84b7978ddc277dd4c49c91a21/gcc%2Fconfig%2Fxtensa%2Fxtensa-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fxtensa%2Fxtensa-protos.h?ref=626a4b315aba6ee84b7978ddc277dd4c49c91a21", "patch": "@@ -73,9 +73,6 @@ extern reg_class_t xtensa_secondary_reload (bool, rtx, reg_class_t,\n #endif /* RTX_CODE */\n \n #ifdef TREE_CODE\n-extern void function_arg_advance (CUMULATIVE_ARGS *, enum machine_mode, tree);\n-extern struct rtx_def *function_arg (CUMULATIVE_ARGS *, enum machine_mode,\n-\t\t\t\t     tree, int);\n extern int function_arg_boundary (enum machine_mode, tree);\n #endif /* TREE_CODE */\n "}, {"sha": "f81452a80a4b2689794a3963f9ea4fb655acac2b", "filename": "gcc/config/xtensa/xtensa.c", "status": "modified", "additions": 35, "deletions": 5, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/626a4b315aba6ee84b7978ddc277dd4c49c91a21/gcc%2Fconfig%2Fxtensa%2Fxtensa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/626a4b315aba6ee84b7978ddc277dd4c49c91a21/gcc%2Fconfig%2Fxtensa%2Fxtensa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fxtensa%2Fxtensa.c?ref=626a4b315aba6ee84b7978ddc277dd4c49c91a21", "patch": "@@ -140,6 +140,12 @@ static tree xtensa_build_builtin_va_list (void);\n static bool xtensa_return_in_memory (const_tree, const_tree);\n static tree xtensa_gimplify_va_arg_expr (tree, tree, gimple_seq *,\n \t\t\t\t\t gimple_seq *);\n+static void xtensa_function_arg_advance (CUMULATIVE_ARGS *, enum machine_mode,\n+\t\t\t\t\t const_tree, bool);\n+static rtx xtensa_function_arg (CUMULATIVE_ARGS *, enum machine_mode,\n+\t\t\t\tconst_tree, bool);\n+static rtx xtensa_function_incoming_arg (CUMULATIVE_ARGS *,\n+\t\t\t\t\t enum machine_mode, const_tree, bool);\n static rtx xtensa_function_value (const_tree, const_tree, bool);\n static void xtensa_init_builtins (void);\n static tree xtensa_fold_builtin (tree, int, tree *, bool);\n@@ -201,6 +207,12 @@ static const int reg_nonleaf_alloc_order[FIRST_PSEUDO_REGISTER] =\n #define TARGET_SPLIT_COMPLEX_ARG hook_bool_const_tree_true\n #undef TARGET_MUST_PASS_IN_STACK\n #define TARGET_MUST_PASS_IN_STACK must_pass_in_stack_var_size\n+#undef TARGET_FUNCTION_ARG_ADVANCE\n+#define TARGET_FUNCTION_ARG_ADVANCE xtensa_function_arg_advance\n+#undef TARGET_FUNCTION_ARG\n+#define TARGET_FUNCTION_ARG xtensa_function_arg\n+#undef TARGET_FUNCTION_INCOMING_ARG\n+#define TARGET_FUNCTION_INCOMING_ARG xtensa_function_incoming_arg\n \n #undef TARGET_EXPAND_BUILTIN_SAVEREGS\n #define TARGET_EXPAND_BUILTIN_SAVEREGS xtensa_builtin_saveregs\n@@ -1983,8 +1995,9 @@ init_cumulative_args (CUMULATIVE_ARGS *cum, int incoming)\n \n /* Advance the argument to the next argument position.  */\n \n-void\n-function_arg_advance (CUMULATIVE_ARGS *cum, enum machine_mode mode, tree type)\n+static void\n+xtensa_function_arg_advance (CUMULATIVE_ARGS *cum, enum machine_mode mode,\n+\t\t\t     const_tree type, bool named ATTRIBUTE_UNUSED)\n {\n   int words, max;\n   int *arg_words;\n@@ -2009,9 +2022,9 @@ function_arg_advance (CUMULATIVE_ARGS *cum, enum machine_mode mode, tree type)\n    or 0 if the argument is to be passed on the stack.  INCOMING_P is nonzero\n    if this is an incoming argument to the current function.  */\n \n-rtx\n-function_arg (CUMULATIVE_ARGS *cum, enum machine_mode mode, tree type,\n-\t      int incoming_p)\n+static rtx\n+xtensa_function_arg_1 (const CUMULATIVE_ARGS *cum, enum machine_mode mode,\n+\t\t       const_tree type, bool incoming_p)\n {\n   int regbase, words, max;\n   int *arg_words;\n@@ -2042,6 +2055,23 @@ function_arg (CUMULATIVE_ARGS *cum, enum machine_mode mode, tree type,\n   return gen_rtx_REG (mode, regno);\n }\n \n+/* Implement TARGET_FUNCTION_ARG.  */\n+\n+static rtx\n+xtensa_function_arg (CUMULATIVE_ARGS *cum, enum machine_mode mode,\n+\t\t     const_tree type, bool named ATTRIBUTE_UNUSED)\n+{\n+  return xtensa_function_arg_1 (cum, mode, type, false);\n+}\n+\n+/* Implement TARGET_FUNCTION_INCOMING_ARG.  */\n+\n+static rtx\n+xtensa_function_incoming_arg (CUMULATIVE_ARGS *cum, enum machine_mode mode,\n+\t\t\t      const_tree type, bool named ATTRIBUTE_UNUSED)\n+{\n+  return xtensa_function_arg_1 (cum, mode, type, true);\n+}\n \n int\n function_arg_boundary (enum machine_mode mode, tree type)"}, {"sha": "153242a3c58467b5c7310cdcebf27b3d2b20d672", "filename": "gcc/config/xtensa/xtensa.h", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/626a4b315aba6ee84b7978ddc277dd4c49c91a21/gcc%2Fconfig%2Fxtensa%2Fxtensa.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/626a4b315aba6ee84b7978ddc277dd4c49c91a21/gcc%2Fconfig%2Fxtensa%2Fxtensa.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fxtensa%2Fxtensa.h?ref=626a4b315aba6ee84b7978ddc277dd4c49c91a21", "patch": "@@ -618,18 +618,6 @@ typedef struct xtensa_args\n #define INIT_CUMULATIVE_INCOMING_ARGS(CUM, FNTYPE, LIBNAME)\t\t\\\n   init_cumulative_args (&CUM, 1)\n \n-/* Update the data in CUM to advance over an argument\n-   of mode MODE and data type TYPE.\n-   (TYPE is null for libcalls where that information may not be available.)  */\n-#define FUNCTION_ARG_ADVANCE(CUM, MODE, TYPE, NAMED)\t\t\t\\\n-  function_arg_advance (&CUM, MODE, TYPE)\n-\n-#define FUNCTION_ARG(CUM, MODE, TYPE, NAMED) \\\n-  function_arg (&CUM, MODE, TYPE, FALSE)\n-\n-#define FUNCTION_INCOMING_ARG(CUM, MODE, TYPE, NAMED) \\\n-  function_arg (&CUM, MODE, TYPE, TRUE)\n-\n #define FUNCTION_ARG_BOUNDARY function_arg_boundary\n \n /* Profiling Xtensa code is typically done with the built-in profiling"}]}