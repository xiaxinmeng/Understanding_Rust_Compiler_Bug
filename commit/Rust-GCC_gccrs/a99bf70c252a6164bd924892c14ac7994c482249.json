{"sha": "a99bf70c252a6164bd924892c14ac7994c482249", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTk5YmY3MGMyNTJhNjE2NGJkOTI0ODkyYzE0YWM3OTk0YzQ4MjI0OQ==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1992-12-31T21:05:40Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1992-12-31T21:05:40Z"}, "message": "(input_from_pipe): New variable.\n\n(do_spec): Set/clear input_from_pipe as appropriate.  Translate %|\nto \"-\" if input_from_pipe is true.\n\nFrom-SVN: r3018", "tree": {"sha": "fdb63418d8ee9e7e929f78df377a7eb771deab78", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fdb63418d8ee9e7e929f78df377a7eb771deab78"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a99bf70c252a6164bd924892c14ac7994c482249", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a99bf70c252a6164bd924892c14ac7994c482249", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a99bf70c252a6164bd924892c14ac7994c482249", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a99bf70c252a6164bd924892c14ac7994c482249/comments", "author": null, "committer": null, "parents": [{"sha": "cf8a904b921aa116f2842d281c4f191590a3dae9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf8a904b921aa116f2842d281c4f191590a3dae9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cf8a904b921aa116f2842d281c4f191590a3dae9"}], "stats": {"total": 12, "additions": 12, "deletions": 0}, "files": [{"sha": "050521d3d5a61b83ca5596d175eff4f837ea8678", "filename": "gcc/gcc.c", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a99bf70c252a6164bd924892c14ac7994c482249/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a99bf70c252a6164bd924892c14ac7994c482249/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=a99bf70c252a6164bd924892c14ac7994c482249", "patch": "@@ -251,6 +251,7 @@ or with constant text in a single argument.\n  %C     process CPP_SPEC as a spec.  A capital C is actually used here.\n  %1\tprocess CC1_SPEC as a spec.\n  %2\tprocess CC1PLUS_SPEC as a spec.\n+ %|\toutput \"-\" if the input for the current command is coming from a pipe.\n  %*\tsubstitute the variable part of a matched option.  (See below.)\n \tNote that each comma in the substituted string is replaced by\n \ta single space.\n@@ -2306,6 +2307,9 @@ static int this_is_output_file;\n    search dirs for it.  */\n static int this_is_library_file;\n \n+/* Nonzero means that the input of this command is coming from a pipe.  */\n+static int input_from_pipe;\n+\n /* Process the spec SPEC and run the commands specified therein.\n    Returns 0 if the spec is successfully processed; -1 if failed.  */\n \n@@ -2320,6 +2324,7 @@ do_spec (spec)\n   delete_this_arg = 0;\n   this_is_output_file = 0;\n   this_is_library_file = 0;\n+  input_from_pipe = 0;\n \n   value = do_spec_1 (spec, 0, NULL_PTR);\n \n@@ -2392,6 +2397,7 @@ do_spec_1 (spec, inswitch, soft_matched_part)\n \t       Otherwise, execute now and don't pass the `|' as an arg.  */\n \t    if (i < n_switches)\n \t      {\n+\t\tinput_from_pipe = 1;\n \t\tswitches[i].valid = 1;\n \t\tbreak;\n \t      }\n@@ -2411,6 +2417,7 @@ do_spec_1 (spec, inswitch, soft_matched_part)\n \tdelete_this_arg = 0;\n \tthis_is_output_file = 0;\n \tthis_is_library_file = 0;\n+\tinput_from_pipe = 0;\n \tbreak;\n \n       case '|':\n@@ -2984,6 +2991,11 @@ do_spec_1 (spec, inswitch, soft_matched_part)\n \t    }\n \t    break;\n \n+\t  case '|':\n+\t    if (input_from_pipe)\n+\t      do_spec_1 (\"-\", 0, NULL_PTR);\n+\t    break;\n+\n \t  default:\n \t    abort ();\n \t  }"}]}