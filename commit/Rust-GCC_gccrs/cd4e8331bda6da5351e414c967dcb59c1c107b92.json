{"sha": "cd4e8331bda6da5351e414c967dcb59c1c107b92", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2Q0ZTgzMzFiZGE2ZGE1MzUxZTQxNGM5NjdkY2I1OWMxYzEwN2I5Mg==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2002-03-27T19:16:36Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2002-03-27T19:16:36Z"}, "message": "re PR c++/4884 (g++ 3.0.2 problem with -fvolatile)\n\n\t* g++.dg/init/new2.C: New test.\n\n\tPR c++/4884\n\t* call.c (build_op_delete_call): Allow for the fact the placement\n\tmay be a COMPOUND_EXPR.\n\nFrom-SVN: r51466", "tree": {"sha": "cd6f6b7ee260d38dfdad006c1ae405e4579dbfc7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cd6f6b7ee260d38dfdad006c1ae405e4579dbfc7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cd4e8331bda6da5351e414c967dcb59c1c107b92", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd4e8331bda6da5351e414c967dcb59c1c107b92", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd4e8331bda6da5351e414c967dcb59c1c107b92", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd4e8331bda6da5351e414c967dcb59c1c107b92/comments", "author": null, "committer": null, "parents": [{"sha": "c9d892a83fc5ef512d01237b12c8b6c7dc3acdae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9d892a83fc5ef512d01237b12c8b6c7dc3acdae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c9d892a83fc5ef512d01237b12c8b6c7dc3acdae"}], "stats": {"total": 47, "additions": 41, "deletions": 6}, "files": [{"sha": "7bd5c22137cbbd3087a4ecc30f3ec9e5ac263dba", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd4e8331bda6da5351e414c967dcb59c1c107b92/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd4e8331bda6da5351e414c967dcb59c1c107b92/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=cd4e8331bda6da5351e414c967dcb59c1c107b92", "patch": "@@ -1,3 +1,9 @@\n+2002-03-27  Mark Mitchell  <mark@codesourcery.com>\n+\n+\tPR c++/4884\n+\t* call.c (build_op_delete_call): Allow for the fact the placement\n+\tmay be a COMPOUND_EXPR.\n+\t\n 2002-03-27  Neil Booth  <neil@daikokuya.demon.co.uk>\n \n \t* cp-lang.c (LANG_HOOKS_EXPAND_EXPR): Redefine."}, {"sha": "8804a61f61e77561ffaf9764f975a5c31a639353", "filename": "gcc/cp/call.c", "status": "modified", "additions": 13, "deletions": 6, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd4e8331bda6da5351e414c967dcb59c1c107b92/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd4e8331bda6da5351e414c967dcb59c1c107b92/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=cd4e8331bda6da5351e414c967dcb59c1c107b92", "patch": "@@ -3611,15 +3611,22 @@ build_op_delete_call (code, addr, size, flags, placement)\n \n   if (placement)\n     {\n-      /* placement is a CALL_EXPR around an ADDR_EXPR around a function.  */\n-\n+      tree alloc_fn;\n+      tree call_expr;\n+\n+      /* Find the allocation function that is being called. */\n+      call_expr = placement;\n+      /* Sometimes we have a COMPOUND_EXPR, rather than a simple\n+\t CALL_EXPR. */\n+      while (TREE_CODE (call_expr) == COMPOUND_EXPR)\n+\tcall_expr = TREE_OPERAND (call_expr, 1);\n       /* Extract the function.  */\n-      argtypes = TREE_OPERAND (TREE_OPERAND (placement, 0), 0);\n+      alloc_fn = get_callee_fndecl (call_expr);\n+      my_friendly_assert (alloc_fn != NULL_TREE, 20020327);\n       /* Then the second parm type.  */\n-      argtypes = TREE_CHAIN (TYPE_ARG_TYPES (TREE_TYPE (argtypes)));\n-\n+      argtypes = TREE_CHAIN (TYPE_ARG_TYPES (TREE_TYPE (alloc_fn)));\n       /* Also the second argument.  */\n-      args = TREE_CHAIN (TREE_OPERAND (placement, 1));\n+      args = TREE_CHAIN (TREE_OPERAND (call_expr, 1));\n     }\n   else\n     {"}, {"sha": "f660231720583137d44d8d90579ab0382d69ade6", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd4e8331bda6da5351e414c967dcb59c1c107b92/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd4e8331bda6da5351e414c967dcb59c1c107b92/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=cd4e8331bda6da5351e414c967dcb59c1c107b92", "patch": "@@ -1,3 +1,7 @@\n+2002-03-27  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* g++.dg/init/new2.C: New test.\n+\t\n 2002-03-26  Richard Henderson  <rth@redhat.com>\n \n \t* gcc.dg/pragma-re-2.c: Avoid empty source file warning."}, {"sha": "572cb284f39167f6c029b4872c678593a0c5e836", "filename": "gcc/testsuite/g++.dg/init/new2.C", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd4e8331bda6da5351e414c967dcb59c1c107b92/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fnew2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd4e8331bda6da5351e414c967dcb59c1c107b92/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fnew2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fnew2.C?ref=cd4e8331bda6da5351e414c967dcb59c1c107b92", "patch": "@@ -0,0 +1,18 @@\n+// Origin: asharji@uwaterloo.ca\n+\n+// { dg-do compile }\n+// { dg-options \"-fvolatile\" }\n+\n+class bar {\n+  public :\n+    bar() { }\n+    void * operator new ( __SIZE_TYPE__ , void * storage ) \n+     { return (void *)1;}\n+};\n+\n+class foo {\n+  public:\n+    void mem ( ) {\n+        new ( 0 ) bar;\n+    }\n+};"}]}