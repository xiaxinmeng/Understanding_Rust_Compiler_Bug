{"sha": "43dfd40c1d5934d5850dcfd2c9a1b9e856bf32a7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDNkZmQ0MGMxZDU5MzRkNTg1MGRjZmQyYzlhMWI5ZTg1NmJmMzJhNw==", "commit": {"author": {"name": "Steven G. Kargl", "email": "kargl@gcc.gnu.org", "date": "2009-09-10T21:22:08Z"}, "committer": {"name": "Steven G. Kargl", "email": "kargl@gcc.gnu.org", "date": "2009-09-10T21:22:08Z"}, "message": "re PR fortran/31292 (ICE with module procedure interface in a procedure body)\n\n2009-09-10  Steven G. Kargl  <kargl@gcc.gnu.org>\n\n\tPR fortran/31292\n\t* fortran/decl.c(gfc_match_modproc): Check that module procedures\n\tfrom a module can USEd in module procedure statements in other\n\tprogram units.  Update locus for better error message display.\n\tDetect intrinsic procedures in module procedure statements.\n\n2009-09-10  Steven G. Kargl  <kargl@gcc.gnu.org>\n\n\tPR fortran/31292\n\t* gfortran.dg/module_procedure_1.f90: New test.\n\t* gfortran.dg/module_procedure_2.f90: Ditto.\n\t* gfortran.dg/generic_14.f90: Move dg-error to new location.\n\nFrom-SVN: r151616", "tree": {"sha": "4b5e73eaa50717049042d4e38225bf9f848a766b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4b5e73eaa50717049042d4e38225bf9f848a766b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/43dfd40c1d5934d5850dcfd2c9a1b9e856bf32a7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43dfd40c1d5934d5850dcfd2c9a1b9e856bf32a7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/43dfd40c1d5934d5850dcfd2c9a1b9e856bf32a7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43dfd40c1d5934d5850dcfd2c9a1b9e856bf32a7/comments", "author": null, "committer": null, "parents": [{"sha": "1382ae05e3d1f105433b8244e937aa7c395c6904", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1382ae05e3d1f105433b8244e937aa7c395c6904", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1382ae05e3d1f105433b8244e937aa7c395c6904"}], "stats": {"total": 98, "additions": 93, "deletions": 5}, "files": [{"sha": "d134e2cadcfe3a9391a96cc1b9e9a15794f1e5a4", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43dfd40c1d5934d5850dcfd2c9a1b9e856bf32a7/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43dfd40c1d5934d5850dcfd2c9a1b9e856bf32a7/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=43dfd40c1d5934d5850dcfd2c9a1b9e856bf32a7", "patch": "@@ -1,3 +1,11 @@\n+2009-09-10  Steven G. Kargl  <kargl@gcc.gnu.org>\n+\n+\tPR fortran/31292\n+\t* fortran/decl.c(gfc_match_modproc): Check that module procedures\n+\tfrom a module can USEd in module procedure statements in other\n+\tprogram units.  Update locus for better error message display.\n+\tDetect intrinsic procedures in module procedure statements.\n+\n 2009-09-09  Richard Guenther  <rguenther@suse.de>\n \n \tPR fortran/41297"}, {"sha": "3ce7fd4a33753ccff0217138b68a7d565bbcc361", "filename": "gcc/fortran/decl.c", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43dfd40c1d5934d5850dcfd2c9a1b9e856bf32a7/gcc%2Ffortran%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43dfd40c1d5934d5850dcfd2c9a1b9e856bf32a7/gcc%2Ffortran%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fdecl.c?ref=43dfd40c1d5934d5850dcfd2c9a1b9e856bf32a7", "patch": "@@ -6485,7 +6485,10 @@ gfc_match_modproc (void)\n \n   module_ns = gfc_current_ns->parent;\n   for (; module_ns; module_ns = module_ns->parent)\n-    if (module_ns->proc_name->attr.flavor == FL_MODULE)\n+    if (module_ns->proc_name->attr.flavor == FL_MODULE\n+\t|| module_ns->proc_name->attr.flavor == FL_PROGRAM\n+\t|| (module_ns->proc_name->attr.flavor == FL_PROCEDURE\n+\t    && !module_ns->proc_name->attr.contained))\n       break;\n \n   if (module_ns == NULL)\n@@ -6497,6 +6500,7 @@ gfc_match_modproc (void)\n \n   for (;;)\n     {\n+      locus old_locus = gfc_current_locus;\n       bool last = false;\n \n       m = gfc_match_name (name);\n@@ -6517,6 +6521,13 @@ gfc_match_modproc (void)\n       if (gfc_get_symbol (name, module_ns, &sym))\n \treturn MATCH_ERROR;\n \n+      if (sym->attr.intrinsic)\n+\t{\n+\t  gfc_error (\"Intrinsic procedure at %L cannot be a MODULE \"\n+\t\t     \"PROCEDURE\", &old_locus);\n+\t  return MATCH_ERROR;\n+\t}\n+\n       if (sym->attr.proc != PROC_MODULE\n \t  && gfc_add_procedure (&sym->attr, PROC_MODULE,\n \t\t\t\tsym->name, NULL) == FAILURE)\n@@ -6526,6 +6537,7 @@ gfc_match_modproc (void)\n \treturn MATCH_ERROR;\n \n       sym->attr.mod_proc = 1;\n+      sym->declared_at = old_locus;\n \n       if (last)\n \tbreak;"}, {"sha": "7b23648297d5d59b4da18ea41ec711e0759df4a7", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43dfd40c1d5934d5850dcfd2c9a1b9e856bf32a7/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43dfd40c1d5934d5850dcfd2c9a1b9e856bf32a7/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=43dfd40c1d5934d5850dcfd2c9a1b9e856bf32a7", "patch": "@@ -1,3 +1,10 @@\n+2009-09-10  Steven G. Kargl  <kargl@gcc.gnu.org>\n+\n+\tPR fortran/31292\n+\t* gfortran.dg/module_procedure_1.f90: New test.\n+\t* gfortran.dg/module_procedure_2.f90: Ditto.\n+\t* gfortran.dg/generic_14.f90: Move dg-error to new location.\n+\n 2009-09-10  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \t    James A. Morrison  <phython@gcc.gnu.org>\n "}, {"sha": "e95f6f2edebcfbb6c11a1aad7338f426162c889a", "filename": "gcc/testsuite/gfortran.dg/generic_14.f90", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43dfd40c1d5934d5850dcfd2c9a1b9e856bf32a7/gcc%2Ftestsuite%2Fgfortran.dg%2Fgeneric_14.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43dfd40c1d5934d5850dcfd2c9a1b9e856bf32a7/gcc%2Ftestsuite%2Fgfortran.dg%2Fgeneric_14.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgeneric_14.f90?ref=43dfd40c1d5934d5850dcfd2c9a1b9e856bf32a7", "patch": "@@ -85,18 +85,18 @@ end module f\n \n module g\n   implicit none\n-  external wrong_b            ! { dg-error \"has no explicit interface\" }\n+  external wrong_b\n   interface gen_wrong_5\n-    module procedure wrong_b  ! wrong, see above\n+    module procedure wrong_b  ! { dg-error \"has no explicit interface\" }\n   end interface gen_wrong_5\n end module g\n \n module h\n   implicit none\n-  external wrong_c            ! { dg-error \"has no explicit interface\" }\n+  external wrong_c\n   real wrong_c\n   interface gen_wrong_6\n-    module procedure wrong_c  ! wrong, see above\n+    module procedure wrong_c  ! { dg-error \"has no explicit interface\" }\n   end interface gen_wrong_6\n end module h\n "}, {"sha": "5e1fa15c729fcffb32f8ce241a0e05c5e4484ac9", "filename": "gcc/testsuite/gfortran.dg/module_procedure_1.f90", "status": "added", "additions": 53, "deletions": 0, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43dfd40c1d5934d5850dcfd2c9a1b9e856bf32a7/gcc%2Ftestsuite%2Fgfortran.dg%2Fmodule_procedure_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43dfd40c1d5934d5850dcfd2c9a1b9e856bf32a7/gcc%2Ftestsuite%2Fgfortran.dg%2Fmodule_procedure_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fmodule_procedure_1.f90?ref=43dfd40c1d5934d5850dcfd2c9a1b9e856bf32a7", "patch": "@@ -0,0 +1,53 @@\n+! { dg-do run }\n+! Modified program from http://groups.google.com/group/\\\n+! comp.lang.fortran/browse_frm/thread/423e4392dc965ab7#\n+!\n+module myoperator\n+   contains\n+      function dadd(arg1,arg2)\n+         integer ::dadd(2)\n+         integer, intent(in) :: arg1(2), arg2(2)\n+         dadd(1)=arg1(1)+arg2(1)\n+         dadd(2)=arg1(2)+arg2(2)\n+      end function dadd\n+end module myoperator\n+\n+program test_interface\n+\n+   use myoperator\n+\n+   implicit none\n+\n+   interface operator (.myadd.)\n+      module procedure dadd\n+   end interface\n+\n+   integer input1(2), input2(2), mysum(2)\n+\n+   input1 = (/0,1/)\n+   input2 = (/3,3/)\n+   mysum = input1 .myadd. input2\n+   if (mysum(1) /= 3 .and. mysum(2) /= 4) call abort \n+\n+   call test_sub(input1, input2)\n+\n+end program test_interface \n+\n+subroutine test_sub(input1, input2)\n+\n+   use myoperator\n+\n+   implicit none\n+\n+   interface operator (.myadd.)\n+      module procedure dadd\n+   end interface\n+\n+   integer, intent(in) :: input1(2), input2(2)\n+   integer mysum(2)\n+\n+   mysum = input1 .myadd. input2\n+   if (mysum(1) /= 3 .and. mysum(2) /= 4) call abort \n+\n+end subroutine test_sub \n+! { dg-final { cleanup-modules \"myoperator\" } }"}, {"sha": "8f6db25fb13d6434c536376c834644475adadeea", "filename": "gcc/testsuite/gfortran.dg/module_procedure_2.f90", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43dfd40c1d5934d5850dcfd2c9a1b9e856bf32a7/gcc%2Ftestsuite%2Fgfortran.dg%2Fmodule_procedure_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43dfd40c1d5934d5850dcfd2c9a1b9e856bf32a7/gcc%2Ftestsuite%2Fgfortran.dg%2Fmodule_procedure_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fmodule_procedure_2.f90?ref=43dfd40c1d5934d5850dcfd2c9a1b9e856bf32a7", "patch": "@@ -0,0 +1,8 @@\n+! { dg-do compile }\n+program test\n+   implicit none\n+   intrinsic sin\n+   interface gen2\n+      module procedure sin  ! { dg-error \"cannot be a MODULE PROCEDURE\" }\n+   end interface gen2\n+end program test"}]}