{"sha": "fa77b2518acb7ae2f5a82ac599e04d9744aba088", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmE3N2IyNTE4YWNiN2FlMmY1YTgyYWM1OTllMDRkOTc0NGFiYTA4OA==", "commit": {"author": {"name": "Adrian Straetling", "email": "straetling@de.ibm.com", "date": "2005-05-09T17:11:23Z"}, "committer": {"name": "Ulrich Weigand", "email": "uweigand@gcc.gnu.org", "date": "2005-05-09T17:11:23Z"}, "message": "s390.md: (\"COMPARE\"): New mode macro.\n\n2005-05-09  Adrian Straetling  <straetling@de.ibm.com>\n\n\t* config/s390/s390.md: (\"COMPARE\"): New mode macro.\n\t(\"beq\", \"bne\", \"bgt\", \"bgtu\", \"blt\", \"bltu\", \"bge\", \"bgeu\",\n\t\"ble\", \"bleu\", \"bunordered\", \"bordered\", \"buneq\", \"bunlt\",\n\t\"bungt\", \"bunle\", \"bunge\", \"bltgt\"): Merge.\n\nFrom-SVN: r99452", "tree": {"sha": "6895ff910c476e4f5b92b7098c8c7f4d51ca1a12", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6895ff910c476e4f5b92b7098c8c7f4d51ca1a12"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fa77b2518acb7ae2f5a82ac599e04d9744aba088", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa77b2518acb7ae2f5a82ac599e04d9744aba088", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fa77b2518acb7ae2f5a82ac599e04d9744aba088", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa77b2518acb7ae2f5a82ac599e04d9744aba088/comments", "author": null, "committer": null, "parents": [{"sha": "342cf42be3342e39e4e7c9bcee6f2865674f552d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/342cf42be3342e39e4e7c9bcee6f2865674f552d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/342cf42be3342e39e4e7c9bcee6f2865674f552d"}], "stats": {"total": 123, "additions": 18, "deletions": 105}, "files": [{"sha": "00a9f522485cf6ad7175e2bdecec695bdb689739", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa77b2518acb7ae2f5a82ac599e04d9744aba088/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa77b2518acb7ae2f5a82ac599e04d9744aba088/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fa77b2518acb7ae2f5a82ac599e04d9744aba088", "patch": "@@ -1,3 +1,10 @@\n+2005-05-09  Adrian Straetling  <straetling@de.ibm.com>\n+\n+\t* config/s390/s390.md: (\"COMPARE\"): New mode macro.\n+\t(\"beq\", \"bne\", \"bgt\", \"bgtu\", \"blt\", \"bltu\", \"bge\", \"bgeu\",\n+\t\"ble\", \"bleu\", \"bunordered\", \"bordered\", \"buneq\", \"bunlt\",\n+\t\"bungt\", \"bunle\", \"bunge\", \"bltgt\"): Merge.\n+\n 2005-05-09  Adrian Straetling  <straetling@de.ibm.com>\n \n \t* config/s390/s390.md: (\"INT\"): New mode macro."}, {"sha": "f502990234646b3c3e1cf5b74110e00bf00212b1", "filename": "gcc/config/s390/s390.md", "status": "modified", "additions": 11, "deletions": 105, "changes": 116, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa77b2518acb7ae2f5a82ac599e04d9744aba088/gcc%2Fconfig%2Fs390%2Fs390.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa77b2518acb7ae2f5a82ac599e04d9744aba088/gcc%2Fconfig%2Fs390%2Fs390.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.md?ref=fa77b2518acb7ae2f5a82ac599e04d9744aba088", "patch": "@@ -251,6 +251,10 @@\n ;; same template.\n (define_mode_macro INT [(DI \"TARGET_64BIT\") SI HI QI])\n \n+;; This macro allows to unify all 'bCOND' expander patterns.\n+(define_code_macro COMPARE [eq ne gt gtu lt ltu ge geu le leu unordered \n+\t\t            ordered uneq unlt ungt unle unge ltgt])\n+\n \n ;; ICM mask required to load MODE value into the highest subreg\n ;; of a SImode register.\n@@ -6846,113 +6850,15 @@\n ;; Branch instruction patterns.\n ;;\n \n-(define_expand \"beq\"\n-  [(match_operand 0 \"\" \"\")]\n-  \"\"\n-  \"s390_emit_jump (operands[0],\n-    s390_emit_compare (EQ, s390_compare_op0, s390_compare_op1)); DONE;\")\n-\n-(define_expand \"bne\"\n-  [(match_operand 0 \"\" \"\")]\n-  \"\"\n-  \"s390_emit_jump (operands[0],\n-    s390_emit_compare (NE, s390_compare_op0, s390_compare_op1)); DONE;\")\n-\n-(define_expand \"bgt\"\n-  [(match_operand 0 \"\" \"\")]\n-  \"\"\n-  \"s390_emit_jump (operands[0],\n-    s390_emit_compare (GT, s390_compare_op0, s390_compare_op1)); DONE;\")\n-\n-(define_expand \"bgtu\"\n-  [(match_operand 0 \"\" \"\")]\n-  \"\"\n-  \"s390_emit_jump (operands[0],\n-    s390_emit_compare (GTU, s390_compare_op0, s390_compare_op1)); DONE;\")\n-\n-(define_expand \"blt\"\n-  [(match_operand 0 \"\" \"\")]\n-  \"\"\n-  \"s390_emit_jump (operands[0],\n-    s390_emit_compare (LT, s390_compare_op0, s390_compare_op1)); DONE;\")\n-\n-(define_expand \"bltu\"\n-  [(match_operand 0 \"\" \"\")]\n-  \"\"\n-  \"s390_emit_jump (operands[0],\n-    s390_emit_compare (LTU, s390_compare_op0, s390_compare_op1)); DONE;\")\n-\n-(define_expand \"bge\"\n-  [(match_operand 0 \"\" \"\")]\n-  \"\"\n-  \"s390_emit_jump (operands[0],\n-    s390_emit_compare (GE, s390_compare_op0, s390_compare_op1)); DONE;\")\n-\n-(define_expand \"bgeu\"\n-  [(match_operand 0 \"\" \"\")]\n-  \"\"\n-  \"s390_emit_jump (operands[0],\n-    s390_emit_compare (GEU, s390_compare_op0, s390_compare_op1)); DONE;\")\n-\n-(define_expand \"ble\"\n-  [(match_operand 0 \"\" \"\")]\n-  \"\"\n-  \"s390_emit_jump (operands[0],\n-    s390_emit_compare (LE, s390_compare_op0, s390_compare_op1)); DONE;\")\n-\n-(define_expand \"bleu\"\n-  [(match_operand 0 \"\" \"\")]\n-  \"\"\n-  \"s390_emit_jump (operands[0],\n-    s390_emit_compare (LEU, s390_compare_op0, s390_compare_op1)); DONE;\")\n-\n-(define_expand \"bunordered\"\n-  [(match_operand 0 \"\" \"\")]\n-  \"\"\n-  \"s390_emit_jump (operands[0],\n-    s390_emit_compare (UNORDERED, s390_compare_op0, s390_compare_op1)); DONE;\")\n-\n-(define_expand \"bordered\"\n-  [(match_operand 0 \"\" \"\")]\n-  \"\"\n-  \"s390_emit_jump (operands[0],\n-    s390_emit_compare (ORDERED, s390_compare_op0, s390_compare_op1)); DONE;\")\n-\n-(define_expand \"buneq\"\n-  [(match_operand 0 \"\" \"\")]\n-  \"\"\n-  \"s390_emit_jump (operands[0],\n-    s390_emit_compare (UNEQ, s390_compare_op0, s390_compare_op1)); DONE;\")\n-\n-(define_expand \"bunlt\"\n-  [(match_operand 0 \"\" \"\")]\n-  \"\"\n-  \"s390_emit_jump (operands[0],\n-    s390_emit_compare (UNLT, s390_compare_op0, s390_compare_op1)); DONE;\")\n-\n-(define_expand \"bungt\"\n-  [(match_operand 0 \"\" \"\")]\n-  \"\"\n-  \"s390_emit_jump (operands[0],\n-    s390_emit_compare (UNGT, s390_compare_op0, s390_compare_op1)); DONE;\")\n-\n-(define_expand \"bunle\"\n-  [(match_operand 0 \"\" \"\")]\n-  \"\"\n-  \"s390_emit_jump (operands[0],\n-    s390_emit_compare (UNLE, s390_compare_op0, s390_compare_op1)); DONE;\")\n-\n-(define_expand \"bunge\"\n-  [(match_operand 0 \"\" \"\")]\n-  \"\"\n-  \"s390_emit_jump (operands[0],\n-    s390_emit_compare (UNGE, s390_compare_op0, s390_compare_op1)); DONE;\")\n-\n-(define_expand \"bltgt\"\n-  [(match_operand 0 \"\" \"\")]\n+(define_expand \"b<code>\"\n+  [(set (pc)\n+        (if_then_else (COMPARE (match_operand 0 \"\" \"\")\n+                               (const_int 0))\n+                      (match_dup 0)\n+                      (pc)))]\n   \"\"\n   \"s390_emit_jump (operands[0],\n-    s390_emit_compare (LTGT, s390_compare_op0, s390_compare_op1)); DONE;\")\n+    s390_emit_compare (<CODE>, s390_compare_op0, s390_compare_op1)); DONE;\")\n \n \n ;;"}]}