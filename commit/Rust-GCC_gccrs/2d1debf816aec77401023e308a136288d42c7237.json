{"sha": "2d1debf816aec77401023e308a136288d42c7237", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmQxZGViZjgxNmFlYzc3NDAxMDIzZTMwOGExMzYyODhkNDJjNzIzNw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-12-22T11:52:00Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-12-22T11:52:00Z"}, "message": "[multiple changes]\n\n2011-12-22  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* exp_ch7.adb (Build_Adjust_Or_Finalize_Statements): Create the objects\n\tassociated with exception handling unconditionally.\n\t(Build_Adjust_Statements): Create the objects associated with\n\texception handling unconditionally.\n\t(Build_Components): Create the objects associated with exception\n\thandling unconditionally.\n\t(Build_Finalize_Statements): Create the objects associated with\n\texception handling unconditionally.\n\t(Build_Initialize_Statements): Create the objects associated with\n\texception handling unconditionally.\n\t(Build_Object_Declarations): Set the proper location of the data\n\trecord when exception propagation is forbidden.\n\n2011-12-22  Gary Dismukes  <dismukes@adacore.com>\n\n\t* a-tienio.adb (Put): Test validity of Item parameters before\n\tapplying Image, and raise Constraint_Error for invalid values.\n\n2011-12-22  Bob Duff  <duff@adacore.com>\n\n\t* a-stwima.ads (Initialize,Adjust,Finalize): Add overriding indicators.\n\t* a-ststio.ads (AFCB_Allocate,AFCB_Close,AFCB_Free,Read,Write): Add\n\toverriding indicators.\n\nFrom-SVN: r182619", "tree": {"sha": "58edd15b694cd45e2029a659f769a709e715e4c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/58edd15b694cd45e2029a659f769a709e715e4c0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2d1debf816aec77401023e308a136288d42c7237", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d1debf816aec77401023e308a136288d42c7237", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2d1debf816aec77401023e308a136288d42c7237", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d1debf816aec77401023e308a136288d42c7237/comments", "author": null, "committer": null, "parents": [{"sha": "c7288f61d1ad0392612bccf607727481a0096803", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7288f61d1ad0392612bccf607727481a0096803", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c7288f61d1ad0392612bccf607727481a0096803"}], "stats": {"total": 132, "additions": 88, "deletions": 44}, "files": [{"sha": "0137afe54b68af2e06bf54ed5257d0d26c6aaa76", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d1debf816aec77401023e308a136288d42c7237/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d1debf816aec77401023e308a136288d42c7237/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=2d1debf816aec77401023e308a136288d42c7237", "patch": "@@ -1,3 +1,29 @@\n+2011-12-22  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* exp_ch7.adb (Build_Adjust_Or_Finalize_Statements): Create the objects\n+\tassociated with exception handling unconditionally.\n+\t(Build_Adjust_Statements): Create the objects associated with\n+\texception handling unconditionally.\n+\t(Build_Components): Create the objects associated with exception\n+\thandling unconditionally.\n+\t(Build_Finalize_Statements): Create the objects associated with\n+\texception handling unconditionally.\n+\t(Build_Initialize_Statements): Create the objects associated with\n+\texception handling unconditionally.\n+\t(Build_Object_Declarations): Set the proper location of the data\n+\trecord when exception propagation is forbidden.\n+\n+2011-12-22  Gary Dismukes  <dismukes@adacore.com>\n+\n+\t* a-tienio.adb (Put): Test validity of Item parameters before\n+\tapplying Image, and raise Constraint_Error for invalid values.\n+\n+2011-12-22  Bob Duff  <duff@adacore.com>\n+\n+\t* a-stwima.ads (Initialize,Adjust,Finalize): Add overriding indicators.\n+\t* a-ststio.ads (AFCB_Allocate,AFCB_Close,AFCB_Free,Read,Write): Add\n+\toverriding indicators.\n+\n 2011-12-22  Arnaud Charlet  <charlet@adacore.com>\n \n \t* s-osinte-hpux-dce.ads: Update header to GPLv3"}, {"sha": "d14dd3e23809b4a187f6dd4560b286405c1bd9f6", "filename": "gcc/ada/a-ststio.ads", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d1debf816aec77401023e308a136288d42c7237/gcc%2Fada%2Fa-ststio.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d1debf816aec77401023e308a136288d42c7237/gcc%2Fada%2Fa-ststio.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-ststio.ads?ref=2d1debf816aec77401023e308a136288d42c7237", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -202,18 +202,19 @@ private\n \n    type File_Type is access all Stream_AFCB;\n \n-   function AFCB_Allocate (Control_Block : Stream_AFCB) return FCB.AFCB_Ptr;\n+   overriding function AFCB_Allocate\n+     (Control_Block : Stream_AFCB) return FCB.AFCB_Ptr;\n \n-   procedure AFCB_Close (File : not null access Stream_AFCB);\n-   procedure AFCB_Free  (File : not null access Stream_AFCB);\n+   overriding procedure AFCB_Close (File : not null access Stream_AFCB);\n+   overriding procedure AFCB_Free  (File : not null access Stream_AFCB);\n \n-   procedure Read\n+   overriding procedure Read\n      (File : in out Stream_AFCB;\n       Item : out Ada.Streams.Stream_Element_Array;\n       Last : out Ada.Streams.Stream_Element_Offset);\n    --  Read operation used when Stream_IO file is treated directly as Stream\n \n-   procedure Write\n+   overriding procedure Write\n      (File : in out Stream_AFCB;\n       Item : Ada.Streams.Stream_Element_Array);\n    --  Write operation used when Stream_IO file is treated directly as Stream"}, {"sha": "8863a442b7a00b3aa01aae12707783d3acfe7f0d", "filename": "gcc/ada/a-stwima.ads", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d1debf816aec77401023e308a136288d42c7237/gcc%2Fada%2Fa-stwima.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d1debf816aec77401023e308a136288d42c7237/gcc%2Fada%2Fa-stwima.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-stwima.ads?ref=2d1debf816aec77401023e308a136288d42c7237", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -177,9 +177,9 @@ private\n    --  incorrect attempts to finalize constants that are statically\n    --  declared here and in Ada.Strings.Wide_Maps, which is incorrect.\n \n-   procedure Initialize (Object : in out Wide_Character_Set);\n-   procedure Adjust     (Object : in out Wide_Character_Set);\n-   procedure Finalize   (Object : in out Wide_Character_Set);\n+   overriding procedure Initialize (Object : in out Wide_Character_Set);\n+   overriding procedure Adjust     (Object : in out Wide_Character_Set);\n+   overriding procedure Finalize   (Object : in out Wide_Character_Set);\n \n    Null_Range : aliased constant Wide_Character_Ranges :=\n                   (1 .. 0 => (Low => ' ', High => ' '));\n@@ -224,9 +224,9 @@ private\n    --  incorrect attempts to finalize constants that are statically\n    --  declared here and in Ada.Strings.Wide_Maps, which is incorrect.\n \n-   procedure Initialize (Object : in out Wide_Character_Mapping);\n-   procedure Adjust     (Object : in out Wide_Character_Mapping);\n-   procedure Finalize   (Object : in out Wide_Character_Mapping);\n+   overriding procedure Initialize (Object : in out Wide_Character_Mapping);\n+   overriding procedure Adjust     (Object : in out Wide_Character_Mapping);\n+   overriding procedure Finalize   (Object : in out Wide_Character_Mapping);\n \n    Null_Map : aliased constant Wide_Character_Mapping_Values :=\n                  (Length => 0,"}, {"sha": "a643f87b3b1472d63d9c984fdffe3e14c2fa1d71", "filename": "gcc/ada/a-tienio.adb", "status": "modified", "additions": 29, "deletions": 5, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d1debf816aec77401023e308a136288d42c7237/gcc%2Fada%2Fa-tienio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d1debf816aec77401023e308a136288d42c7237/gcc%2Fada%2Fa-tienio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-tienio.adb?ref=2d1debf816aec77401023e308a136288d42c7237", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -94,9 +94,21 @@ package body Ada.Text_IO.Enumeration_IO is\n       Width : Field := Default_Width;\n       Set   : Type_Set := Default_Setting)\n    is\n-      Image : constant String := Enum'Image (Item);\n    begin\n-      Aux.Put (File, Image, Width, Set);\n+      --  Ensure that Item is valid before attempting to retrieve the Image, to\n+      --  prevent the possibility of out-of-bounds addressing of index or image\n+      --  tables. Units in  the run-time library are normally compiled with\n+      --  checks suppressed, which includes instantiated generics.\n+\n+      if not Item'Valid then\n+         raise Constraint_Error;\n+      end if;\n+\n+      declare\n+         Image : constant String := Enum'Image (Item);\n+      begin\n+         Aux.Put (File, Image, Width, Set);\n+      end;\n    end Put;\n \n    procedure Put\n@@ -113,9 +125,21 @@ package body Ada.Text_IO.Enumeration_IO is\n       Item : Enum;\n       Set  : Type_Set := Default_Setting)\n    is\n-      Image : constant String := Enum'Image (Item);\n    begin\n-      Aux.Puts (To, Image, Set);\n+      --  Ensure that Item is valid before attempting to retrieve the Image, to\n+      --  prevent the possibility of out-of-bounds addressing of index or image\n+      --  tables. Units in the run-time library are normally compiled with\n+      --  checks suppressed, which includes instantiated generics.\n+\n+      if not Item'Valid then\n+         raise Constraint_Error;\n+      end if;\n+\n+      declare\n+         Image : constant String := Enum'Image (Item);\n+      begin\n+         Aux.Puts (To, Image, Set);\n+      end;\n    end Put;\n \n end Ada.Text_IO.Enumeration_IO;"}, {"sha": "3ff4b9e3a34ba0c9a5dd59c1ed81a7ce92a50f29", "filename": "gcc/ada/exp_ch7.adb", "status": "modified", "additions": 19, "deletions": 26, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d1debf816aec77401023e308a136288d42c7237/gcc%2Fada%2Fexp_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d1debf816aec77401023e308a136288d42c7237/gcc%2Fada%2Fexp_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch7.adb?ref=2d1debf816aec77401023e308a136288d42c7237", "patch": "@@ -1210,10 +1210,8 @@ package body Exp_Ch7 is\n \n             Finalizer_Decls := New_List;\n \n-            if Exceptions_OK then\n-               Build_Object_Declarations\n-                 (Finalizer_Data, Finalizer_Decls, Loc, For_Package);\n-            end if;\n+            Build_Object_Declarations\n+              (Finalizer_Data, Finalizer_Decls, Loc, For_Package);\n \n             --  Since the total number of controlled objects is always known,\n             --  build a subtype of Natural with precise bounds. This allows\n@@ -2943,17 +2941,21 @@ package body Exp_Ch7 is\n    begin\n       pragma Assert (Decls /= No_List);\n \n+      --  Always set the proper location as it may be needed even when\n+      --  exception propagation is forbidden.\n+\n+      Data.Loc := Loc;\n+\n       if Restriction_Active (No_Exception_Propagation) then\n-         Data.Abort_Id := Empty;\n-         Data.E_Id := Empty;\n+         Data.Abort_Id  := Empty;\n+         Data.E_Id      := Empty;\n          Data.Raised_Id := Empty;\n          return;\n       end if;\n \n       Data.Abort_Id  := Make_Temporary (Loc, 'A');\n       Data.E_Id      := Make_Temporary (Loc, 'E');\n       Data.Raised_Id := Make_Temporary (Loc, 'R');\n-      Data.Loc       := Loc;\n \n       --  In certain scenarios, finalization can be triggered by an abort. If\n       --  the finalization itself fails and raises an exception, the resulting\n@@ -4893,12 +4895,10 @@ package body Exp_Ch7 is\n       --  Start of processing for Build_Adjust_Or_Finalize_Statements\n \n       begin\n-         Build_Indices;\n+         Finalizer_Decls := New_List;\n \n-         if Exceptions_OK then\n-            Finalizer_Decls := New_List;\n-            Build_Object_Declarations (Finalizer_Data, Finalizer_Decls, Loc);\n-         end if;\n+         Build_Indices;\n+         Build_Object_Declarations (Finalizer_Data, Finalizer_Decls, Loc);\n \n          Comp_Ref :=\n            Make_Indexed_Component (Loc,\n@@ -5168,14 +5168,11 @@ package body Exp_Ch7 is\n       --  Start of processing for Build_Initialize_Statements\n \n       begin\n-         Build_Indices;\n-\n          Counter_Id := Make_Temporary (Loc, 'C');\n+         Finalizer_Decls := New_List;\n \n-         if Exceptions_OK then\n-            Finalizer_Decls := New_List;\n-            Build_Object_Declarations (Finalizer_Data, Finalizer_Decls, Loc);\n-         end if;\n+         Build_Indices;\n+         Build_Object_Declarations (Finalizer_Data, Finalizer_Decls, Loc);\n \n          --  Generate the block which houses the finalization call, the index\n          --  guard and the handler which triggers Program_Error later on.\n@@ -5881,10 +5878,8 @@ package body Exp_Ch7 is\n       --  Start of processing for Build_Adjust_Statements\n \n       begin\n-         if Exceptions_OK then\n-            Finalizer_Decls := New_List;\n-            Build_Object_Declarations (Finalizer_Data, Finalizer_Decls, Loc);\n-         end if;\n+         Finalizer_Decls := New_List;\n+         Build_Object_Declarations (Finalizer_Data, Finalizer_Decls, Loc);\n \n          if Nkind (Typ_Def) = N_Derived_Type_Definition then\n             Rec_Def := Record_Extension_Part (Typ_Def);\n@@ -6458,10 +6453,8 @@ package body Exp_Ch7 is\n       --  Start of processing for Build_Finalize_Statements\n \n       begin\n-         if Exceptions_OK then\n-            Finalizer_Decls := New_List;\n-            Build_Object_Declarations (Finalizer_Data, Finalizer_Decls, Loc);\n-         end if;\n+         Finalizer_Decls := New_List;\n+         Build_Object_Declarations (Finalizer_Data, Finalizer_Decls, Loc);\n \n          if Nkind (Typ_Def) = N_Derived_Type_Definition then\n             Rec_Def := Record_Extension_Part (Typ_Def);"}]}