{"sha": "a638b034245e39678a9f24b823df0bba0f1453d0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTYzOGIwMzQyNDVlMzk2NzhhOWYyNGI4MjNkZjBiYmEwZjE0NTNkMA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2009-11-03T18:42:59Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2009-11-03T18:42:59Z"}, "message": "re PR c++/41815 ([C++0x] GCC wrongly treats rvalues of non-class type cv-qualified)\n\n\tPR c++/41815\n\t* call.c (build_call_a): Strip cv-quals from rvalue result.\n\nFrom-SVN: r153862", "tree": {"sha": "716e3fa3e262779057f0f5ce8957916220dfc69f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/716e3fa3e262779057f0f5ce8957916220dfc69f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a638b034245e39678a9f24b823df0bba0f1453d0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a638b034245e39678a9f24b823df0bba0f1453d0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a638b034245e39678a9f24b823df0bba0f1453d0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a638b034245e39678a9f24b823df0bba0f1453d0/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6e924e079b7f329afe359e91aa4db7856a387bc9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e924e079b7f329afe359e91aa4db7856a387bc9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6e924e079b7f329afe359e91aa4db7856a387bc9"}], "stats": {"total": 30, "additions": 29, "deletions": 1}, "files": [{"sha": "a04b6e74d496beb7a08fab9eb6c57ee81d1b3e3b", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a638b034245e39678a9f24b823df0bba0f1453d0/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a638b034245e39678a9f24b823df0bba0f1453d0/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=a638b034245e39678a9f24b823df0bba0f1453d0", "patch": "@@ -1,5 +1,8 @@\n 2009-11-03  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/41815\n+\t* call.c (build_call_a): Strip cv-quals from rvalue result.\n+\n \tPR c++/40944\n \t* call.c (initialize_reference): Add complain parm.\n \t* typeck.c (convert_for_initialization): Pass it."}, {"sha": "0979f3ab0ffe4c83b5e2919c36b50ecde851d81b", "filename": "gcc/cp/call.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a638b034245e39678a9f24b823df0bba0f1453d0/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a638b034245e39678a9f24b823df0bba0f1453d0/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=a638b034245e39678a9f24b823df0bba0f1453d0", "patch": "@@ -313,6 +313,9 @@ build_call_a (tree function, int n, tree *argarray)\n   gcc_assert (TREE_CODE (fntype) == FUNCTION_TYPE\n \t      || TREE_CODE (fntype) == METHOD_TYPE);\n   result_type = TREE_TYPE (fntype);\n+  /* An rvalue has no cv-qualifiers.  */\n+  if (SCALAR_TYPE_P (result_type) || VOID_TYPE_P (result_type))\n+    result_type = cv_unqualified (result_type);\n \n   if (TREE_CODE (function) == ADDR_EXPR\n       && TREE_CODE (TREE_OPERAND (function, 0)) == FUNCTION_DECL)"}, {"sha": "0371d4a27fc83e9dcb967e4863d62e8a5a2c4fe7", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a638b034245e39678a9f24b823df0bba0f1453d0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a638b034245e39678a9f24b823df0bba0f1453d0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a638b034245e39678a9f24b823df0bba0f1453d0", "patch": "@@ -1,5 +1,9 @@\n 2009-11-03  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/41815\n+\t* g++.dg/cpp0x/rv-return.C: New.\n+\t* g++.dg/cpp0x/deduce.C: Adjust.\n+\n \tPR c++/40944\n \t* g++.dg/template/sfinae15.C: New.\n "}, {"sha": "635228cca08f4677cc392c695a01dde3a7388da1", "filename": "gcc/testsuite/g++.dg/cpp0x/deduce.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a638b034245e39678a9f24b823df0bba0f1453d0/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdeduce.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a638b034245e39678a9f24b823df0bba0f1453d0/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdeduce.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdeduce.C?ref=a638b034245e39678a9f24b823df0bba0f1453d0", "patch": "@@ -5,7 +5,7 @@ template<typename T> struct same_type<T, T> {};\n int lval_int;\n int rval_int();\n int const lval_const_int=0;\n-int const rval_const_int();\n+int const&& rval_const_int();\n \n template <typename T> void deduce_lval_int(T && t)\n {"}, {"sha": "e52101feae1c627cfd96e40f660e540343631fd4", "filename": "gcc/testsuite/g++.dg/cpp0x/rv-return.C", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a638b034245e39678a9f24b823df0bba0f1453d0/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv-return.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a638b034245e39678a9f24b823df0bba0f1453d0/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv-return.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv-return.C?ref=a638b034245e39678a9f24b823df0bba0f1453d0", "patch": "@@ -0,0 +1,18 @@\n+// PR c++/41815\n+// { dg-options -std=c++0x }\n+\n+template<typename T, typename U> struct same_type;\n+template<typename T> struct same_type<T, T> {};\n+\n+int const f() { return 0; }\n+\n+int &&r = f(); // binding \"int&&\" to \"int\" should succeed\n+same_type<decltype(f()), int const> s1;\n+same_type<decltype(0,f()), int> s2;\n+\n+template <class T>\n+T const g() { return 0; }\n+\n+int &&r2 = g<int>();\n+same_type<decltype(g<int>()), int const> s3;\n+same_type<decltype(0,g<int>()), int> s4;"}]}