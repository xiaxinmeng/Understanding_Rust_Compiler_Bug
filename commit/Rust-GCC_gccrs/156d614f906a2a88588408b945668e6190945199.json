{"sha": "156d614f906a2a88588408b945668e6190945199", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTU2ZDYxNGY5MDZhMmE4ODU4ODQwOGI5NDU2NjhlNjE5MDk0NTE5OQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2008-02-13T04:06:03Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2008-02-13T04:06:03Z"}, "message": "re PR c++/34824 (ICE with explicit copy constructor)\n\n        PR c++/34824\n        * call.c (convert_like_real): Pass LOOKUP_ONLYCONVERTING to build_temp\n        if we're doing conversions to call a user-defined conversion function.\n\nFrom-SVN: r132282", "tree": {"sha": "9467d9f7fb0d91dccb3d88c71a3a1f1047e02651", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9467d9f7fb0d91dccb3d88c71a3a1f1047e02651"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/156d614f906a2a88588408b945668e6190945199", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/156d614f906a2a88588408b945668e6190945199", "html_url": "https://github.com/Rust-GCC/gccrs/commit/156d614f906a2a88588408b945668e6190945199", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/156d614f906a2a88588408b945668e6190945199/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7f7682fe3dd7d4515f83d2ba93cfb604c57b8446", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f7682fe3dd7d4515f83d2ba93cfb604c57b8446", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7f7682fe3dd7d4515f83d2ba93cfb604c57b8446"}], "stats": {"total": 41, "additions": 39, "deletions": 2}, "files": [{"sha": "9a832de80067bd69aa635366b677c1a07968211d", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/156d614f906a2a88588408b945668e6190945199/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/156d614f906a2a88588408b945668e6190945199/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=156d614f906a2a88588408b945668e6190945199", "patch": "@@ -1,3 +1,9 @@\n+2008-02-12  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/34824\n+\t* call.c (convert_like_real): Pass LOOKUP_ONLYCONVERTING to build_temp\n+\tif we're doing conversions to call a user-defined conversion function.\n+\n 2008-02-12  Steven Bosscher  <steven@gcc.gnu.org>\n \n \tPR c++/29048"}, {"sha": "71ac85973d98ee9bd8847d5f0e6eb115bc61cdfa", "filename": "gcc/cp/call.c", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/156d614f906a2a88588408b945668e6190945199/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/156d614f906a2a88588408b945668e6190945199/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=156d614f906a2a88588408b945668e6190945199", "patch": "@@ -4319,6 +4319,7 @@ convert_like_real (conversion *convs, tree expr, tree fn, int argnum,\n {\n   tree totype = convs->type;\n   diagnostic_fn_t diagnostic_fn;\n+  int flags;\n \n   if (convs->bad_p\n       && convs->kind != ck_user\n@@ -4357,6 +4358,12 @@ convert_like_real (conversion *convs, tree expr, tree fn, int argnum,\n       {\n \tstruct z_candidate *cand = convs->cand;\n \ttree convfn = cand->fn;\n+\tunsigned i;\n+\n+\t/* Set user_conv_p on the argument conversions, so rvalue/base\n+\t   handling knows not to allow any more UDCs.  */\n+\tfor (i = 0; i < cand->num_convs; ++i)\n+\t  cand->convs[i]->user_conv_p = true;\n \n \texpr = build_over_call (cand, LOOKUP_NORMAL);\n \n@@ -4454,8 +4461,12 @@ convert_like_real (conversion *convs, tree expr, tree fn, int argnum,\n       /* Copy-initialization where the cv-unqualified version of the source\n \t type is the same class as, or a derived class of, the class of the\n \t destination [is treated as direct-initialization].  [dcl.init] */\n-      expr = build_temp (expr, totype, LOOKUP_NORMAL|LOOKUP_ONLYCONVERTING,\n-\t\t\t &diagnostic_fn);\n+      flags = LOOKUP_NORMAL|LOOKUP_ONLYCONVERTING;\n+      if (convs->user_conv_p)\n+\t/* This conversion is being done in the context of a user-defined\n+\t   conversion, so don't allow any more.  */\n+\tflags |= LOOKUP_NO_CONVERSION;\n+      expr = build_temp (expr, totype, flags, &diagnostic_fn);\n       if (diagnostic_fn && fn)\n \tdiagnostic_fn (\"  initializing argument %P of %qD\", argnum, fn);\n       return build_cplus_new (totype, expr);"}, {"sha": "87f8317acbe84c10db216aa07111ed9c53642588", "filename": "gcc/testsuite/g++.dg/overload/copy1.C", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/156d614f906a2a88588408b945668e6190945199/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Foverload%2Fcopy1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/156d614f906a2a88588408b945668e6190945199/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Foverload%2Fcopy1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Foverload%2Fcopy1.C?ref=156d614f906a2a88588408b945668e6190945199", "patch": "@@ -0,0 +1,20 @@\n+// PR c++/34824\n+\n+struct A;\n+\n+struct B\n+{\n+  B (A const &);\t\t// { dg-warning \"note\" }\n+  B (B &);\t\t\t// { dg-warning \"note\" }\n+};\n+\n+struct A\n+{\n+  A (B);\n+};\n+\n+B\n+f (B const& b)\n+{\n+  return b;\t\t\t// { dg-error \"\" }\n+}"}]}