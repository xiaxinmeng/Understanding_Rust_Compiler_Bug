{"sha": "a1c138325c69c051fa9eb04d350ca2967a6480f7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTFjMTM4MzI1YzY5YzA1MWZhOWViMDRkMzUwY2EyOTY3YTY0ODBmNw==", "commit": {"author": {"name": "Alan Modra", "email": "amodra@gmail.com", "date": "2016-08-08T12:05:11Z"}, "committer": {"name": "Alan Modra", "email": "amodra@gcc.gnu.org", "date": "2016-08-08T12:05:11Z"}, "message": "[RS6000] TOC refs generated during reload\n\nThe generic reload fix for pr72771 exposed a problem with recognizing\n-mcmodel=medium/large TOC references generated during reload.\n\n\tPR target/72771\n\t* config/rs6000/rs6000.c (toc_relative_expr_p): Allow (lo_sum (high))\n\ttoc refs created during reload.  Update function comment.\n\nFrom-SVN: r239240", "tree": {"sha": "4559853e5b109a7d8873235049434af8305d6208", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4559853e5b109a7d8873235049434af8305d6208"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a1c138325c69c051fa9eb04d350ca2967a6480f7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1c138325c69c051fa9eb04d350ca2967a6480f7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a1c138325c69c051fa9eb04d350ca2967a6480f7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1c138325c69c051fa9eb04d350ca2967a6480f7/comments", "author": {"login": "amodra", "id": 6006325, "node_id": "MDQ6VXNlcjYwMDYzMjU=", "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amodra", "html_url": "https://github.com/amodra", "followers_url": "https://api.github.com/users/amodra/followers", "following_url": "https://api.github.com/users/amodra/following{/other_user}", "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}", "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amodra/subscriptions", "organizations_url": "https://api.github.com/users/amodra/orgs", "repos_url": "https://api.github.com/users/amodra/repos", "events_url": "https://api.github.com/users/amodra/events{/privacy}", "received_events_url": "https://api.github.com/users/amodra/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7090cac9f7c9aabd4ad252e6d49b42bdcac85f67", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7090cac9f7c9aabd4ad252e6d49b42bdcac85f67", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7090cac9f7c9aabd4ad252e6d49b42bdcac85f67"}], "stats": {"total": 26, "additions": 18, "deletions": 8}, "files": [{"sha": "66e4049915b584dc38fda72cb4b99c9f607a64ec", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1c138325c69c051fa9eb04d350ca2967a6480f7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1c138325c69c051fa9eb04d350ca2967a6480f7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a1c138325c69c051fa9eb04d350ca2967a6480f7", "patch": "@@ -1,3 +1,9 @@\n+2016-08-08  Alan Modra  <amodra@gmail.com>\n+\n+\tPR target/72771\n+\t* config/rs6000/rs6000.c (toc_relative_expr_p): Allow (lo_sum (high))\n+\ttoc refs created during reload.  Update function comment.\n+\n 2016-08-08  Alan Modra  <amodra@gmail.com>\n \n \tPR target/72802"}, {"sha": "5aa056cb4c8c2fe90750de3d417ac6ac8928049c", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 12, "deletions": 8, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1c138325c69c051fa9eb04d350ca2967a6480f7/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1c138325c69c051fa9eb04d350ca2967a6480f7/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=a1c138325c69c051fa9eb04d350ca2967a6480f7", "patch": "@@ -7937,8 +7937,8 @@ constant_pool_expr_p (rtx op)\n static const_rtx tocrel_base, tocrel_offset;\n \n /* Return true if OP is a toc pointer relative address (the output\n-   of create_TOC_reference).  If STRICT, do not match high part or\n-   non-split -mcmodel=large/medium toc pointer relative addresses.  */\n+   of create_TOC_reference).  If STRICT, do not match non-split\n+   -mcmodel=large/medium toc pointer relative addresses.  */\n \n bool\n toc_relative_expr_p (const_rtx op, bool strict)\n@@ -7948,13 +7948,17 @@ toc_relative_expr_p (const_rtx op, bool strict)\n \n   if (TARGET_CMODEL != CMODEL_SMALL)\n     {\n-      /* Only match the low part.  */\n-      if (GET_CODE (op) == LO_SUM\n-\t  && REG_P (XEXP (op, 0))\n-\t  && INT_REG_OK_FOR_BASE_P (XEXP (op, 0), strict))\n-\top = XEXP (op, 1);\n-      else if (strict)\n+      /* When strict ensure we have everything tidy.  */\n+      if (strict\n+\t  && !(GET_CODE (op) == LO_SUM\n+\t       && REG_P (XEXP (op, 0))\n+\t       && INT_REG_OK_FOR_BASE_P (XEXP (op, 0), strict)))\n \treturn false;\n+\n+      /* When not strict, allow non-split TOC addresses and also allow\n+\t (lo_sum (high ..)) TOC addresses created during reload.  */\n+      if (GET_CODE (op) == LO_SUM)\n+\top = XEXP (op, 1);\n     }\n \n   tocrel_base = op;"}]}