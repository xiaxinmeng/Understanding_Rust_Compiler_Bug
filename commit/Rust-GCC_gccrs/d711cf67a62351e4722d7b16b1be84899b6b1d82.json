{"sha": "d711cf67a62351e4722d7b16b1be84899b6b1d82", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDcxMWNmNjdhNjIzNTFlNDcyMmQ3YjE2YjFiZTg0ODk5YjZiMWQ4Mg==", "commit": {"author": {"name": "John David Anglin", "email": "dave.anglin@nrc-cnrc.gc.ca", "date": "2004-08-25T17:49:58Z"}, "committer": {"name": "John David Anglin", "email": "danglin@gcc.gnu.org", "date": "2004-08-25T17:49:58Z"}, "message": "PR libstdc++/17005 (fix for HP-UX 11.11)\n\n\tPR libstdc++/17005 (fix for HP-UX 11.11)\n\t* config.gcc (hppa*-*-*): Move MASK_BIG_SWITCH to target_cpu_default2.\n\t(hppa*-*-hpux*): Consolidate hppa1.0-*-* code.  Rework handling of\n\ttm_file including pa-hpux1010.h or pa-hpux1111.h when appropriate.\n\t* config/pa/pa-hpux1010.h, config/pa/pa-hpux1111.h: New files.\n\t* config/pa/pa-hpux.h (TARGET_HPUX): Define.\n\t(LINK_SPEC): Handle march=1.0 option.\n\t* config/pa/pa-hpux10.h (TARGET_OS_CPP_BUILTINS): Predefine _XOPEN_UNIX\n\tand _XOPEN_SOURCE_EXTENDED for UNIX 95.\n\t(SUBTARGET_OPTIONS): New define.\n\t(LINK_SPEC): Handle march=1.0 option.\n\t(STARTFILE_SPEC): New define.\n\t* config/pa/pa-hpux11.h (TARGET_OS_CPP_BUILTINS): Predefine _XOPEN_UNIX\n\tand _XOPEN_SOURCE_EXTENDED for UNIX 95.  Additionally, predefine\n\t_INCLUDE__STDC_A1_SOURCE and _INCLUDE_XOPEN_SOURCE_500 for UNIX 98.\n\t(SUBTARGET_OPTIONS): New define.\n\t(LINK_SPEC): Handle march=1.0 option.\n\t(STARTFILE_SPEC): New define.\n\t* config/pa/pa.c (override_options): Add code to process -munix= option.\n\t* config/pa/pa.h (pa_unix_string, flag_pa_unix): Declare.\n\t(TARGET_HPUX, TARGET_HPUX_10_10, TARGET_HPUX_11_11): Provide default\n\tdefines.\n\t(TARGET_OPTIONS): Add SUBTARGET_OPTIONS to option list.\n\t(SUBTARGET_OPTIONS): Provide default define.\n\t* config/pa/pa64-hpux.h (STANDARD_STARTFILE_PREFIX_1,\n\tSTANDARD_STARTFILE_PREFIX_2): New defines.\n\t(STARTFILE_SPEC): Provide unix95.o or unix98.o startfiles as necessary.\n\t(ENDFILE_SPEC): Use %O.\n\t* doc/install.texi (hppa*-*-hpux*): Reword paragraph on -g and gas.\n\tMention issue caused by changing namespace and runtime to UNIX 95/98.\n\t* doc/invoke.texi (HPPA options): Move misplaced text to FRV options.\n\tDocument -munix=std option.\n\nFrom-SVN: r86561", "tree": {"sha": "14e2d8cb7e94d6cdc20449b7a5fb62b316d503f6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/14e2d8cb7e94d6cdc20449b7a5fb62b316d503f6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d711cf67a62351e4722d7b16b1be84899b6b1d82", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d711cf67a62351e4722d7b16b1be84899b6b1d82", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d711cf67a62351e4722d7b16b1be84899b6b1d82", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d711cf67a62351e4722d7b16b1be84899b6b1d82/comments", "author": null, "committer": null, "parents": [{"sha": "2b8fe4a03fe73c160c642733de68868f1d8c3772", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b8fe4a03fe73c160c642733de68868f1d8c3772", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2b8fe4a03fe73c160c642733de68868f1d8c3772"}], "stats": {"total": 672, "additions": 458, "deletions": 214}, "files": [{"sha": "1bff6fd98e7f25c0687bb9841669d2c0fee64838", "filename": "gcc/ChangeLog", "status": "modified", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d711cf67a62351e4722d7b16b1be84899b6b1d82/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d711cf67a62351e4722d7b16b1be84899b6b1d82/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d711cf67a62351e4722d7b16b1be84899b6b1d82", "patch": "@@ -1,3 +1,38 @@\n+2004-08-25  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n+\n+\tPR libstdc++/17005 (fix for HP-UX 11.11)\n+\t* config.gcc (hppa*-*-*): Move MASK_BIG_SWITCH to target_cpu_default2.\n+\t(hppa*-*-hpux*): Consolidate hppa1.0-*-* code.  Rework handling of\n+\ttm_file including pa-hpux1010.h or pa-hpux1111.h when appropriate.  \n+\t* config/pa/pa-hpux1010.h, config/pa/pa-hpux1111.h: New files.\n+\t* config/pa/pa-hpux.h (TARGET_HPUX): Define.\n+\t(LINK_SPEC): Handle march=1.0 option.\n+\t* config/pa/pa-hpux10.h (TARGET_OS_CPP_BUILTINS): Predefine _XOPEN_UNIX\n+\tand _XOPEN_SOURCE_EXTENDED for UNIX 95.\n+\t(SUBTARGET_OPTIONS): New define.\n+\t(LINK_SPEC): Handle march=1.0 option.\n+\t(STARTFILE_SPEC): New define.\n+\t* config/pa/pa-hpux11.h (TARGET_OS_CPP_BUILTINS): Predefine _XOPEN_UNIX\n+\tand _XOPEN_SOURCE_EXTENDED for UNIX 95.  Additionally, predefine\n+\t_INCLUDE__STDC_A1_SOURCE and _INCLUDE_XOPEN_SOURCE_500 for UNIX 98.\n+\t(SUBTARGET_OPTIONS): New define.\n+\t(LINK_SPEC): Handle march=1.0 option.\n+\t(STARTFILE_SPEC): New define.\n+\t* config/pa/pa.c (override_options): Add code to process -munix= option.\n+\t* config/pa/pa.h (pa_unix_string, flag_pa_unix): Declare.\n+\t(TARGET_HPUX, TARGET_HPUX_10_10, TARGET_HPUX_11_11): Provide default\n+\tdefines.\n+\t(TARGET_OPTIONS): Add SUBTARGET_OPTIONS to option list.\n+\t(SUBTARGET_OPTIONS): Provide default define.\n+\t* config/pa/pa64-hpux.h (STANDARD_STARTFILE_PREFIX_1,\n+\tSTANDARD_STARTFILE_PREFIX_2): New defines.\n+\t(STARTFILE_SPEC): Provide unix95.o or unix98.o startfiles as necessary.\n+\t(ENDFILE_SPEC): Use %O.\n+\t* doc/install.texi (hppa*-*-hpux*): Reword paragraph on -g and gas.\n+\tMention issue caused by changing namespace and runtime to UNIX 95/98.\n+\t* doc/invoke.texi (HPPA options): Move misplaced text to FRV options.\n+\tDocument -munix=std option.\n+\n 2004-08-25  Steven Bosscher  <stevenb@suse.de>\n \n \t* cse.c (cse_around_loop, cse_check_loop_start,"}, {"sha": "6d9abd464c70287a553671e123d682b6b1996077", "filename": "gcc/config.gcc", "status": "modified", "additions": 49, "deletions": 47, "changes": 96, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d711cf67a62351e4722d7b16b1be84899b6b1d82/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d711cf67a62351e4722d7b16b1be84899b6b1d82/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=d711cf67a62351e4722d7b16b1be84899b6b1d82", "patch": "@@ -749,15 +749,15 @@ h8300-*-*)\n \tuse_fixproto=yes\n \t;;\n hppa*64*-*-linux* | parisc*64*-*-linux*)\n-\ttarget_cpu_default=\"(MASK_PA_11 | MASK_PA_20 | MASK_BIG_SWITCH)\"\n+\ttarget_cpu_default=\"MASK_PA_11|MASK_PA_20\"\n \ttm_file=\"pa/pa64-start.h ${tm_file} dbxelf.h elfos.h svr4.h linux.h \\\n \t\t pa/pa-linux.h pa/pa64-regs.h pa/pa-64.h pa/pa64-linux.h\"\n \ttmake_file=\"${tmake_file} pa/t-linux64\"\n \tgas=yes gnu_ld=yes\n \tneed_64bit_hwint=yes\n \t;;\n hppa*-*-linux* | parisc*-*-linux*)\n-\ttarget_cpu_default=\"(MASK_PA_11 | MASK_NO_SPACE_REGS | MASK_BIG_SWITCH)\"\n+\ttarget_cpu_default=\"MASK_PA_11|MASK_NO_SPACE_REGS\"\n \ttm_file=\"${tm_file} dbxelf.h elfos.h svr4.h linux.h pa/pa-linux.h \\\n \t\t pa/pa32-regs.h pa/pa32-linux.h\"\n \ttmake_file=\"${tmake_file} pa/t-linux\"\n@@ -769,49 +769,45 @@ hppa*-*-linux* | parisc*-*-linux*)\n \t;;\n # port not yet contributed.\n #hppa*-*-openbsd*)\n-#\ttarget_cpu_default=\"(MASK_PA_11 | MASK_BIG_SWITCH)\"\n+#\ttarget_cpu_default=\"MASK_PA_11\"\n #\t;;\n hppa1.1-*-pro*)\n-\ttarget_cpu_default=\"(MASK_JUMP_IN_DELAY | MASK_PORTABLE_RUNTIME | MASK_GAS | MASK_NO_SPACE_REGS | MASK_SOFT_FLOAT | MASK_BIG_SWITCH)\"\n-\ttm_file=\"${tm_file} pa/pa32-regs.h dbxelf.h elfos.h pa/elf.h pa/pa-pro-end.h libgloss.h\"\n+\ttarget_cpu_default=\"MASK_PORTABLE_RUNTIME|MASK_NO_SPACE_REGS|MASK_SOFT_FLOAT\"\n+\ttm_file=\"${tm_file} pa/pa32-regs.h dbxelf.h elfos.h pa/elf.h \\\n+\t\t pa/pa-pro-end.h libgloss.h\"\n \ttmake_file=\"pa/t-pro\"\n \t;;\n hppa1.1-*-osf*)\n-\ttarget_cpu_default=\"(MASK_PA_11 | MASK_BIG_SWITCH)\"\n+\ttarget_cpu_default=\"MASK_PA_11\"\n \ttm_file=\"${tm_file} pa/pa32-regs.h dbxelf.h pa/som.h pa/pa-osf.h\"\n \ttmake_file=\"pa/t-pa\"\n \tuse_collect2=yes\n \t;;\n hppa1.1-*-rtems*)\n-\ttarget_cpu_default=\"(MASK_JUMP_IN_DELAY | MASK_PORTABLE_RUNTIME | MASK_GAS | MASK_NO_SPACE_REGS | MASK_SOFT_FLOAT | MASK_BIG_SWITCH)\"\n-\ttm_file=\"${tm_file} pa/pa32-regs.h dbxelf.h elfos.h pa/elf.h pa/pa-pro-end.h libgloss.h pa/rtems.h rtems.h\"\n+\ttarget_cpu_default=\"MASK_PORTABLE_RUNTIME|MASK_NO_SPACE_REGS|MASK_SOFT_FLOAT\"\n+\ttm_file=\"${tm_file} pa/pa32-regs.h dbxelf.h elfos.h pa/elf.h \\\n+\t\t pa/pa-pro-end.h libgloss.h pa/rtems.h rtems.h\"\n \ttmake_file=\"pa/t-pro t-rtems\"\n \t;;\n hppa1.1-*-bsd*)\n-\ttarget_cpu_default=\"(MASK_PA_11 | MASK_BIG_SWITCH)\"\n+\ttarget_cpu_default=\"MASK_PA_11\"\n \ttm_file=\"${tm_file} pa/pa32-regs.h dbxelf.h pa/som.h\"\n \ttmake_file=\"pa/t-pa\"\n \tuse_collect2=yes\n \t;;\n-hppa1.1-*-hpux10* | hppa2*-*-hpux10*)\n-\ttarget_cpu_default=\"(MASK_PA_11 | MASK_BIG_SWITCH)\"\n-\ttm_file=\"${tm_file} pa/pa32-regs.h dbxelf.h pa/som.h pa/pa-hpux.h pa/pa-hpux10.h\"\n-\ttmake_file=\"pa/t-pa pa/t-pa-hpux pa/t-hpux-shlib\"\n-\tcase ${enable_threads} in\n-\t  \"\")\n-\t    if test x$have_pthread_h = xyes ; then\n-\t      tmake_file=\"${tmake_file} pa/t-dce-thr\"\n-\t    fi\n-\t    ;;\n-\t  yes | dce)\n-\t    tmake_file=\"${tmake_file} pa/t-dce-thr\"\n-\t    ;;\n+hppa[12]*-*-hpux10*)\n+\tcase ${target} in\n+\thppa1.1-*-* | hppa2*-*-*)\n+\t\ttarget_cpu_default=\"MASK_PA_11\"\n+\t\t;;\n+\tesac\n+\ttm_file=\"${tm_file} pa/pa32-regs.h dbxelf.h pa/som.h \\\n+\t\t pa/pa-hpux.h pa/pa-hpux10.h\"\n+\tcase ${target} in\n+\t*-*-hpux10.[1-9]*)\n+\t\ttm_file=\"${tm_file} pa/pa-hpux1010.h\"\n+\t\t;;\n \tesac\n-\tuse_collect2=yes\n-\tuse_fixproto=yes\n-\t;;\n-hppa1.0-*-hpux10*)\n-\ttm_file=\"${tm_file} pa/pa32-regs.h dbxelf.h pa/som.h pa/pa-hpux.h pa/pa-hpux10.h\"\n \ttmake_file=\"pa/t-pa pa/t-pa-hpux pa/t-hpux-shlib\"\n \tcase ${enable_threads} in\n \t  \"\")\n@@ -827,22 +823,27 @@ hppa1.0-*-hpux10*)\n \tuse_fixproto=yes\n \t;;\n hppa*64*-*-hpux11*)\n+\ttarget_cpu_default=\"MASK_PA_11|MASK_PA_20\"\n \tif test x$gnu_ld = xyes\n \tthen\n-\t\ttarget_cpu_default=\"(MASK_PA_11 | MASK_PA_20 | MASK_GAS | MASK_GNU_LD | MASK_BIG_SWITCH)\"\n-\telse\n-\t\ttarget_cpu_default=\"(MASK_PA_11 | MASK_PA_20 | MASK_GAS | MASK_BIG_SWITCH)\"\n+\t\ttarget_cpu_default=\"${target_cpu_default}|MASK_GNU_LD\"\n \tfi\n \tif test x$gas = xyes\n \tthen\n-\t\ttm_file=\"pa/pa64-start.h ${tm_file} dbxelf.h elfos.h  \\\n-\t\t\t pa/pa64-regs.h pa/pa-hpux.h \\\n-\t\t\t pa/pa-hpux11.h pa/pa-64.h pa/pa64-hpux.h\"\n+\t\ttm_file=\"pa/pa64-start.h ${tm_file} dbxelf.h elfos.h \\\n+\t\t\t pa/pa64-regs.h pa/pa-hpux.h pa/pa-hpux11.h\"\n \telse\n \t\ttm_file=\"pa/pa64-start.h ${tm_file} dbxelf.h pa/elf.h \\\n-\t\t\t pa/pa64-regs.h pa/pa-hpux.h \\\n-\t\t\t pa/pa-hpux11.h pa/pa-64.h pa/pa64-hpux.h\"\n+\t\t\t pa/pa64-regs.h pa/pa-hpux.h pa/pa-hpux11.h\"\n \tfi\n+\tcase ${target} in\n+\t*-*-hpux11.11)\n+\t\ttm_file=\"${tm_file} pa/pa-hpux1111.h pa/pa-64.h pa/pa64-hpux.h\"\n+\t\t;;\n+\t*)\n+\t\ttm_file=\"${tm_file} pa/pa-64.h pa/pa64-hpux.h\"\n+\t\t;;\n+\tesac\n \tneed_64bit_hwint=yes\n \ttmake_file=\"pa/t-pa64 pa/t-pa-hpux\"\n \textra_parts=\"crtbegin.o crtend.o crtbeginS.o crtendS.o crtbeginT.o\"\n@@ -852,19 +853,19 @@ hppa*64*-*-hpux11*)\n \t\t;;\n \tesac\n \t;;\n-hppa1.1-*-hpux11* | hppa2*-*-hpux11*)\n-\ttarget_cpu_default=\"(MASK_PA_11 | MASK_BIG_SWITCH)\"\n-\ttm_file=\"${tm_file} pa/pa32-regs.h dbxelf.h pa/som.h pa/pa-hpux.h pa/pa-hpux11.h\"\n-\ttmake_file=\"pa/t-pa pa/t-pa-hpux pa/t-hpux-shlib\"\n-\tcase x${enable_threads} in\n-\txyes | xposix )\n-\t\tthread_file=posix \n+hppa[12]*-*-hpux11*)\n+\tcase ${target} in\n+\thppa1.1-*-* | hppa2*-*-*)\n+\t\ttarget_cpu_default=\"MASK_PA_11\"\n+\t\t;;\n+\tesac\n+\ttm_file=\"${tm_file} pa/pa32-regs.h dbxelf.h pa/som.h \\\n+\t\t pa/pa-hpux.h pa/pa-hpux11.h\"\n+\tcase ${target} in\n+\t*-*-hpux11.[1-9]*)\n+\t\ttm_file=\"${tm_file} pa/pa-hpux1111.h\"\n \t\t;;\n \tesac\n-\tuse_collect2=yes\n-\t;;\n-hppa1.0-*-hpux11*)\n-\ttm_file=\"${tm_file} pa/pa32-regs.h dbxelf.h pa/som.h pa/pa-hpux.h pa/pa-hpux11.h\"\n \ttmake_file=\"pa/t-pa pa/t-pa-hpux pa/t-hpux-shlib\"\n \tcase x${enable_threads} in\n \txyes | xposix )\n@@ -2589,9 +2590,10 @@ fi\n \t\t;;\n \n \thppa*-*-* | parisc*-*-*)\n+\t\ttarget_cpu_default2=\"MASK_BIG_SWITCH\"\n \t\tif test x$gas = xyes\n \t\tthen\n-\t\t\ttarget_cpu_default2=\"MASK_GAS|MASK_JUMP_IN_DELAY\"\n+\t\t\ttarget_cpu_default2=\"${target_cpu_default2}|MASK_GAS|MASK_JUMP_IN_DELAY\"\n \t\tfi\n \t\t;;\n "}, {"sha": "b8ef0c170995b54c12d17ce10aec804070f45416", "filename": "gcc/config/pa/pa-hpux.h", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d711cf67a62351e4722d7b16b1be84899b6b1d82/gcc%2Fconfig%2Fpa%2Fpa-hpux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d711cf67a62351e4722d7b16b1be84899b6b1d82/gcc%2Fconfig%2Fpa%2Fpa-hpux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa-hpux.h?ref=d711cf67a62351e4722d7b16b1be84899b6b1d82", "patch": "@@ -19,6 +19,10 @@ along with GCC; see the file COPYING.  If not, write to\n the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n+/* HP-UX UNIX features.  */\n+#undef TARGET_HPUX\n+#define TARGET_HPUX 1\n+\n #undef TARGET_DEFAULT\n #define TARGET_DEFAULT MASK_BIG_SWITCH\n \n@@ -99,7 +103,7 @@ Boston, MA 02111-1307, USA.  */\n #undef LINK_SPEC\n #if ((TARGET_DEFAULT | TARGET_CPU_DEFAULT) & MASK_PA_11)\n #define LINK_SPEC \\\n-  \"%{!mpa-risc-1-0:%{!shared:-L/lib/pa1.1 -L/usr/lib/pa1.1 }}%{mlinker-opt:-O} %{!shared:-u main} %{static:-a archive} %{g*:-a archive} %{shared:-b}\"\n+  \"%{!mpa-risc-1-0:%{!march=1.0:%{!shared:-L/lib/pa1.1 -L/usr/lib/pa1.1 }}}%{mlinker-opt:-O} %{!shared:-u main} %{static:-a archive} %{g*:-a archive} %{shared:-b}\"\n #else\n #define LINK_SPEC \\\n   \"%{mlinker-opt:-O} %{!shared:-u main} %{static:-a archive} %{g*:-a archive} %{shared:-b}\""}, {"sha": "d2d66eec0dba3e61b8df1b58b745d66650d54805", "filename": "gcc/config/pa/pa-hpux10.h", "status": "modified", "additions": 55, "deletions": 44, "changes": 99, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d711cf67a62351e4722d7b16b1be84899b6b1d82/gcc%2Fconfig%2Fpa%2Fpa-hpux10.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d711cf67a62351e4722d7b16b1be84899b6b1d82/gcc%2Fconfig%2Fpa%2Fpa-hpux10.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa-hpux10.h?ref=d711cf67a62351e4722d7b16b1be84899b6b1d82", "patch": "@@ -28,59 +28,70 @@ Boston, MA 02111-1307, USA.  */\n    support).  We define __STDCPP__ to get certain system headers\n    (notably assert.h) to assume standard preprocessor behavior in C++.  */\n #undef TARGET_OS_CPP_BUILTINS\n-#define TARGET_OS_CPP_BUILTINS()\t\t\t\t\\\n-  do\t\t\t\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\\\n-\tbuiltin_assert (\"system=hpux\");\t\t\t\t\\\n-\tbuiltin_assert (\"system=unix\");\t\t\t\t\\\n-\tbuiltin_define (\"__hp9000s800\");\t\t\t\\\n-\tbuiltin_define (\"__hp9000s800__\");\t\t\t\\\n-\tbuiltin_define (\"__hpux\");\t\t\t\t\\\n-\tbuiltin_define (\"__hpux__\");\t\t\t\t\\\n-\tbuiltin_define (\"__unix\");\t\t\t\t\\\n-\tbuiltin_define (\"__unix__\");\t\t\t\t\\\n-\tif (c_dialect_cxx ())\t\t\t\t\t\\\n-\t  {\t\t\t\t\t\t\t\\\n-\t    builtin_define (\"_HPUX_SOURCE\");\t\t\t\\\n-\t    builtin_define (\"_INCLUDE_LONGLONG\");\t\t\\\n-\t    builtin_define (\"__STDC_EXT__\");\t\t\t\\\n-\t    builtin_define (\"__STDCPP__\");\t\t\t\\\n-\t  }\t\t\t\t\t\t\t\\\n-\telse if (!flag_iso)\t\t\t\t\t\\\n-\t  {\t\t\t\t\t\t\t\\\n-\t    builtin_define (\"_HPUX_SOURCE\");\t\t\t\\\n-\t    if (preprocessing_trad_p ())\t\t\t\\\n-\t      {\t\t\t\t\t\t\t\\\n-\t\tbuiltin_define (\"hp9000s800\");\t\t\t\\\n-\t\tbuiltin_define (\"hppa\");\t\t\t\\\n-\t\tbuiltin_define (\"hpux\");\t\t\t\\\n-\t\tbuiltin_define (\"unix\");\t\t\t\\\n-\t\tbuiltin_define (\"__CLASSIC_C__\");\t\t\\\n-\t\tbuiltin_define (\"_PWB\");\t\t\t\\\n-\t\tbuiltin_define (\"PWB\");\t\t\t\t\\\n-\t      }\t\t\t\t\t\t\t\\\n-\t    else\t\t\t\t\t\t\\\n-\t      builtin_define (\"__STDC_EXT__\");\t\t\t\\\n-\t  }\t\t\t\t\t\t\t\\\n-\tif (TARGET_SIO)\t\t\t\t\t\t\\\n-\t  builtin_define (\"_SIO\");\t\t\t\t\\\n-\telse\t\t\t\t\t\t\t\\\n-\t  {\t\t\t\t\t\t\t\\\n-\t    builtin_define (\"__hp9000s700\");\t\t\t\\\n-\t    builtin_define (\"__hp9000s700__\");\t\t\t\\\n-\t    builtin_define (\"_WSIO\");\t\t\t\t\\\n-\t  }\t\t\t\t\t\t\t\\\n-    }\t\t\t\t\t\t\t\t\\\n+#define TARGET_OS_CPP_BUILTINS()\t\t\t\t\t\\\n+  do\t\t\t\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\t\t\\\n+\tbuiltin_assert (\"system=hpux\");\t\t\t\t\t\\\n+\tbuiltin_assert (\"system=unix\");\t\t\t\t\t\\\n+\tbuiltin_define (\"__hp9000s800\");\t\t\t\t\\\n+\tbuiltin_define (\"__hp9000s800__\");\t\t\t\t\\\n+\tbuiltin_define (\"__hpux\");\t\t\t\t\t\\\n+\tbuiltin_define (\"__hpux__\");\t\t\t\t\t\\\n+\tbuiltin_define (\"__unix\");\t\t\t\t\t\\\n+\tbuiltin_define (\"__unix__\");\t\t\t\t\t\\\n+\tif (c_dialect_cxx ())\t\t\t\t\t\t\\\n+\t  {\t\t\t\t\t\t\t\t\\\n+\t    builtin_define (\"_HPUX_SOURCE\");\t\t\t\t\\\n+\t    builtin_define (\"_INCLUDE_LONGLONG\");\t\t\t\\\n+\t    builtin_define (\"__STDC_EXT__\");\t\t\t\t\\\n+\t    builtin_define (\"__STDCPP__\");\t\t\t\t\\\n+\t  }\t\t\t\t\t\t\t\t\\\n+\telse if (!flag_iso)\t\t\t\t\t\t\\\n+\t  {\t\t\t\t\t\t\t\t\\\n+\t    builtin_define (\"_HPUX_SOURCE\");\t\t\t\t\\\n+\t    if (preprocessing_trad_p ())\t\t\t\t\\\n+\t      {\t\t\t\t\t\t\t\t\\\n+\t\tbuiltin_define (\"hp9000s800\");\t\t\t\t\\\n+\t\tbuiltin_define (\"hppa\");\t\t\t\t\\\n+\t\tbuiltin_define (\"hpux\");\t\t\t\t\\\n+\t\tbuiltin_define (\"unix\");\t\t\t\t\\\n+\t\tbuiltin_define (\"__CLASSIC_C__\");\t\t\t\\\n+\t\tbuiltin_define (\"_PWB\");\t\t\t\t\\\n+\t\tbuiltin_define (\"PWB\");\t\t\t\t\t\\\n+\t      }\t\t\t\t\t\t\t\t\\\n+\t    else\t\t\t\t\t\t\t\\\n+\t      builtin_define (\"__STDC_EXT__\");\t\t\t\t\\\n+\t  }\t\t\t\t\t\t\t\t\\\n+\tif (flag_pa_unix >= 1995)\t\t\t\t\t\\\n+\t  {\t\t\t\t\t\t\t\t\\\n+\t    builtin_define (\"_XOPEN_UNIX\");\t\t\t\t\\\n+\t    builtin_define (\"_XOPEN_SOURCE_EXTENDED\");\t\t\t\\\n+\t  }\t\t\t\t\t\t\t\t\\\n+\tif (TARGET_SIO)\t\t\t\t\t\t\t\\\n+\t  builtin_define (\"_SIO\");\t\t\t\t\t\\\n+\telse\t\t\t\t\t\t\t\t\\\n+\t  {\t\t\t\t\t\t\t\t\\\n+\t    builtin_define (\"__hp9000s700\");\t\t\t\t\\\n+\t    builtin_define (\"__hp9000s700__\");\t\t\t\t\\\n+\t    builtin_define (\"_WSIO\");\t\t\t\t\t\\\n+\t  }\t\t\t\t\t\t\t\t\\\n+    }\t\t\t\t\t\t\t\t\t\\\n   while (0)\n \n+#undef SUBTARGET_OPTIONS\n+#define SUBTARGET_OPTIONS                                               \\\n+  { \"unix=\",                    &pa_unix_string,                        \\\n+    N_(\"Specify UNIX standard for predefines and linking.\\n\"            \\\n+       \"Supported value is 93.\"), 0}\n+\n #define CPP_SPEC \"%{threads: -D_REENTRANT -D_DCE_THREADS}\"\n \n /* We can debug dynamically linked executables on hpux9; we also want\n    dereferencing of a NULL pointer to cause a SEGV.  */\n #undef LINK_SPEC\n #if ((TARGET_DEFAULT | TARGET_CPU_DEFAULT) & MASK_PA_11)\n #define LINK_SPEC \\\n-  \"%{!mpa-risc-1-0:%{!shared:-L/lib/pa1.1 -L/usr/lib/pa1.1 }}\\\n+  \"%{!mpa-risc-1-0:%{!march=1.0:%{!shared:-L/lib/pa1.1 -L/usr/lib/pa1.1 }}}\\\n    %{!shared:%{p:-L/lib/libp %{!static:\\\n      %nWarning: consider linking with `-static' as system libraries with\\n\\\n      %n  profiling support are only provided in archive format}}}\\"}, {"sha": "a6bf9b9ddffb0410f21a4f8e32f8b247c5f506d1", "filename": "gcc/config/pa/pa-hpux1010.h", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d711cf67a62351e4722d7b16b1be84899b6b1d82/gcc%2Fconfig%2Fpa%2Fpa-hpux1010.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d711cf67a62351e4722d7b16b1be84899b6b1d82/gcc%2Fconfig%2Fpa%2Fpa-hpux1010.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa-hpux1010.h?ref=d711cf67a62351e4722d7b16b1be84899b6b1d82", "patch": "@@ -0,0 +1,34 @@\n+/* Definitions of target machine for GNU compiler, for HP PA-RISC\n+   Copyright (C) 2004 Free Software Foundation, Inc.\n+\n+This file is part of GCC.\n+\n+GCC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GCC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GCC; see the file COPYING.  If not, write to\n+the Free Software Foundation, 59 Temple Place - Suite 330,\n+Boston, MA 02111-1307, USA.  */\n+\n+/* HP-UX 10.10 UNIX 95 features.  */\n+#undef TARGET_HPUX_10_10\n+#define TARGET_HPUX_10_10 1\n+\n+#undef SUBTARGET_OPTIONS\n+#define SUBTARGET_OPTIONS\t\t\t\t\t\t\\\n+  { \"unix=\",\t\t\t&pa_unix_string,\t\t\t\\\n+    N_(\"Specify UNIX standard for predefines and linking.\\n\"\t\t\\\n+       \"Supported values are 93 and 95.\"), 0}\n+\n+#undef STARTFILE_SPEC\n+#define STARTFILE_SPEC \\\n+  \"%{!shared:%{pg:gcrt0%O%s}%{!pg:%{p:mcrt0%O%s}%{!p:crt0%O%s}} \\\n+     %{!munix=93:unix95%O%s}}\""}, {"sha": "9df9044fccb2e5bc377424ff2c81cfc27e4ab98c", "filename": "gcc/config/pa/pa-hpux11.h", "status": "modified", "additions": 77, "deletions": 61, "changes": 138, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d711cf67a62351e4722d7b16b1be84899b6b1d82/gcc%2Fconfig%2Fpa%2Fpa-hpux11.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d711cf67a62351e4722d7b16b1be84899b6b1d82/gcc%2Fconfig%2Fpa%2Fpa-hpux11.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa-hpux11.h?ref=d711cf67a62351e4722d7b16b1be84899b6b1d82", "patch": "@@ -24,69 +24,80 @@ Boston, MA 02111-1307, USA.  */\n    the definition of __cplusplus.  We define _INCLUDE_LONGLONG\n    to prevent nlist.h from defining __STDC_32_MODE__ (no longlong\n    support).  We define __STDCPP__ to get certain system headers\n-   (notably assert.h) to assume standard preprocessor behavior in C++.\n-\n-   The C99 support is incomplete.  We define _INCLUDE__STDC_A1_SOURCE\n-   to provide the extended multibyte and wide-character utilities available\n-   under HP-UX 11i.  Defining _HPUX_SOURCE would give us some more\n-   features but it also adds stuff that isn't in C99.  */\n+   (notably assert.h) to assume standard preprocessor behavior in C++.  */\n #undef TARGET_OS_CPP_BUILTINS\n-#define TARGET_OS_CPP_BUILTINS()\t\t\t\t\\\n-  do\t\t\t\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\\\n-\tbuiltin_assert (\"system=hpux\");\t\t\t\t\\\n-\tbuiltin_assert (\"system=unix\");\t\t\t\t\\\n-\tbuiltin_define (\"__hp9000s800\");\t\t\t\\\n-\tbuiltin_define (\"__hp9000s800__\");\t\t\t\\\n-\tbuiltin_define (\"__hpux\");\t\t\t\t\\\n-\tbuiltin_define (\"__hpux__\");\t\t\t\t\\\n-\tbuiltin_define (\"__unix\");\t\t\t\t\\\n-\tbuiltin_define (\"__unix__\");\t\t\t\t\\\n-\tif (c_dialect_cxx ())\t\t\t\t\t\\\n-\t  {\t\t\t\t\t\t\t\\\n-\t    builtin_define (\"_HPUX_SOURCE\");\t\t\t\\\n-\t    builtin_define (\"_INCLUDE_LONGLONG\");\t\t\\\n-\t    builtin_define (\"_INCLUDE__STDC_A1_SOURCE\");\t\\\n-\t    builtin_define (\"__STDC_EXT__\");\t\t\t\\\n-\t    builtin_define (\"__STDCPP__\");\t\t\t\\\n-\t  }\t\t\t\t\t\t\t\\\n-\telse\t\t\t\t\t\t\t\\\n-\t  {\t\t\t\t\t\t\t\\\n-\t    if (!flag_iso)\t\t\t\t\t\\\n-\t      {\t\t\t\t\t\t\t\\\n-\t\tbuiltin_define (\"_HPUX_SOURCE\");\t\t\\\n-\t\tbuiltin_define (\"_INCLUDE__STDC_A1_SOURCE\");\t\\\n-\t\tif (preprocessing_trad_p ())\t\t\t\\\n-\t\t  {\t\t\t\t\t\t\\\n-\t\t    builtin_define (\"hp9000s800\");\t\t\\\n-\t\t    builtin_define (\"hppa\");\t\t\t\\\n-\t\t    builtin_define (\"hpux\");\t\t\t\\\n-\t\t    builtin_define (\"unix\");\t\t\t\\\n-\t\t    builtin_define (\"__CLASSIC_C__\");\t\t\\\n-\t\t    builtin_define (\"_PWB\");\t\t\t\\\n-\t\t    builtin_define (\"PWB\");\t\t\t\\\n-\t\t  }\t\t\t\t\t\t\\\n-\t\telse\t\t\t\t\t\t\\\n-\t\t  builtin_define (\"__STDC_EXT__\");\t\t\\\n-\t      }\t\t\t\t\t\t\t\\\n-\t    else if (flag_isoc99)\t\t\t\t\\\n-\t      {\t\t\t\t\t\t\t\\\n-\t\tbuiltin_define (\"_INCLUDE__STDC_A1_SOURCE\");\t\\\n-\t      }\t\t\t\t\t\t\t\\\n-\t    if (!TARGET_64BIT)\t\t\t\t\t\\\n-\t      builtin_define (\"_ILP32\");\t\t\t\\\n-\t  }\t\t\t\t\t\t\t\\\n-\tif (TARGET_SIO)\t\t\t\t\t\t\\\n-\t  builtin_define (\"_SIO\");\t\t\t\t\\\n-\telse\t\t\t\t\t\t\t\\\n-\t  {\t\t\t\t\t\t\t\\\n-\t    builtin_define (\"__hp9000s700\");\t\t\t\\\n-\t    builtin_define (\"__hp9000s700__\");\t\t\t\\\n-\t    builtin_define (\"_WSIO\");\t\t\t\t\\\n-\t  }\t\t\t\t\t\t\t\\\n-    }\t\t\t\t\t\t\t\t\\\n+#define TARGET_OS_CPP_BUILTINS()\t\t\t\t\t\\\n+  do\t\t\t\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\t\t\\\n+\tbuiltin_assert (\"system=hpux\");\t\t\t\t\t\\\n+\tbuiltin_assert (\"system=unix\");\t\t\t\t\t\\\n+\tbuiltin_define (\"__hp9000s800\");\t\t\t\t\\\n+\tbuiltin_define (\"__hp9000s800__\");\t\t\t\t\\\n+\tbuiltin_define (\"__hpux\");\t\t\t\t\t\\\n+\tbuiltin_define (\"__hpux__\");\t\t\t\t\t\\\n+\tbuiltin_define (\"__unix\");\t\t\t\t\t\\\n+\tbuiltin_define (\"__unix__\");\t\t\t\t\t\\\n+\tif (c_dialect_cxx ())\t\t\t\t\t\t\\\n+\t  {\t\t\t\t\t\t\t\t\\\n+\t    builtin_define (\"_HPUX_SOURCE\");\t\t\t\t\\\n+\t    builtin_define (\"_INCLUDE_LONGLONG\");\t\t\t\\\n+\t    builtin_define (\"__STDC_EXT__\");\t\t\t\t\\\n+\t    builtin_define (\"__STDCPP__\");\t\t\t\t\\\n+\t  }\t\t\t\t\t\t\t\t\\\n+\telse\t\t\t\t\t\t\t\t\\\n+\t  {\t\t\t\t\t\t\t\t\\\n+\t    if (!flag_iso)\t\t\t\t\t\t\\\n+\t      {\t\t\t\t\t\t\t\t\\\n+\t\tbuiltin_define (\"_HPUX_SOURCE\");\t\t\t\\\n+\t\tif (preprocessing_trad_p ())\t\t\t\t\\\n+\t\t  {\t\t\t\t\t\t\t\\\n+\t\t    builtin_define (\"hp9000s800\");\t\t\t\\\n+\t\t    builtin_define (\"hppa\");\t\t\t\t\\\n+\t\t    builtin_define (\"hpux\");\t\t\t\t\\\n+\t\t    builtin_define (\"unix\");\t\t\t\t\\\n+\t\t    builtin_define (\"__CLASSIC_C__\");\t\t\t\\\n+\t\t    builtin_define (\"_PWB\");\t\t\t\t\\\n+\t\t    builtin_define (\"PWB\");\t\t\t\t\\\n+\t\t  }\t\t\t\t\t\t\t\\\n+\t\telse\t\t\t\t\t\t\t\\\n+\t\t  builtin_define (\"__STDC_EXT__\");\t\t\t\\\n+\t      }\t\t\t\t\t\t\t\t\\\n+\t  }\t\t\t\t\t\t\t\t\\\n+\tif (!TARGET_64BIT)\t\t\t\t\t\t\\\n+\t  builtin_define (\"_ILP32\");\t\t\t\t\t\\\n+\tif (flag_pa_unix >= 1995)\t\t\t\t\t\\\n+\t  {\t\t\t\t\t\t\t\t\\\n+\t    builtin_define (\"_XOPEN_UNIX\");\t\t\t\t\\\n+\t    builtin_define (\"_XOPEN_SOURCE_EXTENDED\");\t\t\t\\\n+\t  }\t\t\t\t\t\t\t\t\\\n+\tif (TARGET_HPUX_11_11)\t\t\t\t\t\t\\\n+\t  {\t\t\t\t\t\t\t\t\\\n+\t    if (flag_pa_unix >= 1998)\t\t\t\t\t\\\n+\t      {\t\t\t\t\t\t\t\t\\\n+\t\tbuiltin_define (\"_INCLUDE__STDC_A1_SOURCE\");\t\t\\\n+\t\tbuiltin_define (\"_INCLUDE_XOPEN_SOURCE_500\");\t\t\\\n+\t      }\t\t\t\t\t\t\t\t\\\n+\t    else if (flag_isoc94 || flag_isoc99 || c_dialect_cxx ())\t\\\n+\t      warning (\"-munix=98 option required for C89 \"\t\t\\\n+\t\t       \"Amendment 1 features.\\n\");\t\t\t\\\n+\t  }\t\t\t\t\t\t\t\t\\\n+\tif (TARGET_SIO)\t\t\t\t\t\t\t\\\n+\t  builtin_define (\"_SIO\");\t\t\t\t\t\\\n+\telse\t\t\t\t\t\t\t\t\\\n+\t  {\t\t\t\t\t\t\t\t\\\n+\t    builtin_define (\"__hp9000s700\");\t\t\t\t\\\n+\t    builtin_define (\"__hp9000s700__\");\t\t\t\t\\\n+\t    builtin_define (\"_WSIO\");\t\t\t\t\t\\\n+\t  }\t\t\t\t\t\t\t\t\\\n+    }\t\t\t\t\t\t\t\t\t\\\n   while (0)\n \n+#undef SUBTARGET_OPTIONS\n+#define SUBTARGET_OPTIONS\t\t\t\t\t\t\\\n+  { \"unix=\",\t\t\t&pa_unix_string,\t\t\t\\\n+    N_(\"Specify UNIX standard for predefines and linking.\\n\"\t\t\\\n+       \"Supported values are 93 and 95.\"), 0}\n+\n #undef CPP_SPEC\n #define CPP_SPEC \\\n   \"%{mt|pthread:-D_REENTRANT -D_THREAD_SAFE -D_POSIX_C_SOURCE=199506L}\"\n@@ -99,7 +110,7 @@ Boston, MA 02111-1307, USA.  */\n #undef LINK_SPEC\n #if ((TARGET_DEFAULT | TARGET_CPU_DEFAULT) & MASK_PA_11)\n #define LINK_SPEC \\\n-  \"%{!mpa-risc-1-0:%{!shared:-L/lib/pa1.1 -L/usr/lib/pa1.1 }}\\\n+  \"%{!mpa-risc-1-0:%{!march=1.0:%{!shared:-L/lib/pa1.1 -L/usr/lib/pa1.1 }}}\\\n    %{!shared:%{p:-L/lib/libp -L/usr/lib/libp %{!static:\\\n      %nWarning: consider linking with `-static' as system libraries with\\n\\\n      %n  profiling support are only provided in archive format}}}\\\n@@ -127,6 +138,11 @@ Boston, MA 02111-1307, USA.  */\n      %{mt|pthread:-lpthread} -lc \\\n      %{static:%{!nolibdld:-a shared -ldld -a archive -lc}}}\"\n \n+#undef STARTFILE_SPEC\n+#define STARTFILE_SPEC \\\n+  \"%{!shared:%{pg:gcrt0%O%s}%{!pg:%{p:mcrt0%O%s}%{!p:crt0%O%s}} \\\n+     %{!munix=93:unix95%O%s}}\"\n+\n /* Under hpux11, the normal location of the `ld' and `as' programs is the\n    /usr/ccs/bin directory.  */\n "}, {"sha": "487807835775d165152b350123b3c87cade4f3da", "filename": "gcc/config/pa/pa-hpux1111.h", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d711cf67a62351e4722d7b16b1be84899b6b1d82/gcc%2Fconfig%2Fpa%2Fpa-hpux1111.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d711cf67a62351e4722d7b16b1be84899b6b1d82/gcc%2Fconfig%2Fpa%2Fpa-hpux1111.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa-hpux1111.h?ref=d711cf67a62351e4722d7b16b1be84899b6b1d82", "patch": "@@ -0,0 +1,34 @@\n+/* Definitions of target machine for GNU compiler, for HP PA-RISC\n+   Copyright (C) 2004 Free Software Foundation, Inc.\n+\n+This file is part of GCC.\n+\n+GCC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GCC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GCC; see the file COPYING.  If not, write to\n+the Free Software Foundation, 59 Temple Place - Suite 330,\n+Boston, MA 02111-1307, USA.  */\n+\n+/* HP-UX 11i multibyte and UNIX 98 extensions.  */\n+#undef TARGET_HPUX_11_11\n+#define TARGET_HPUX_11_11 1\n+\n+#undef SUBTARGET_OPTIONS\n+#define SUBTARGET_OPTIONS\t\t\t\t\t\t\\\n+  { \"unix=\",\t\t\t&pa_unix_string,\t\t\t\\\n+    N_(\"Specify UNIX standard for predefines and linking.\\n\"\t\t\\\n+       \"Supported values are 93, 95 and 98.\"), 0}\n+\n+#undef STARTFILE_SPEC\n+#define STARTFILE_SPEC \\\n+  \"%{!shared:%{pg:gcrt0%O%s}%{!pg:%{p:mcrt0%O%s}%{!p:crt0%O%s}} \\\n+     %{munix=95:unix95%O%s}%{!munix=93:%{!munix=95:unix98%O%s}}}\""}, {"sha": "401c642481efc293774d6f82c32d66824918e242", "filename": "gcc/config/pa/pa.c", "status": "modified", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d711cf67a62351e4722d7b16b1be84899b6b1d82/gcc%2Fconfig%2Fpa%2Fpa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d711cf67a62351e4722d7b16b1be84899b6b1d82/gcc%2Fconfig%2Fpa%2Fpa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.c?ref=d711cf67a62351e4722d7b16b1be84899b6b1d82", "patch": "@@ -166,6 +166,12 @@ enum processor_type pa_cpu;\n /* String to hold which cpu we are scheduling for.  */\n const char *pa_cpu_string;\n \n+/* String used with the -munix= option.  */\n+const char *pa_unix_string;\n+\n+/* The UNIX standard to use for predefines and linking.  */\n+int flag_pa_unix;\n+\n /* Counts for the number of callee-saved general and floating point\n    registers which were saved by the current function's prologue.  */\n static int gr_saved, fr_saved;\n@@ -421,6 +427,36 @@ override_options (void)\n       warning (\"unknown -march= option (%s).\\nValid options are 1.0, 1.1, and 2.0\\n\", pa_arch_string);\n     }\n \n+  if (TARGET_HPUX)\n+    {\n+      /* Set the default UNIX standard for HP-UX.  This affects the\n+\t predefines and startfiles used for the target.  */\n+      if (pa_unix_string == NULL)\n+\tpa_unix_string\n+\t  = TARGET_HPUX_11_11 ? \"98\" : (TARGET_HPUX_10_10 ? \"95\" : \"93\");\n+\n+      if (!strcmp (pa_unix_string, \"93\"))\n+\tflag_pa_unix = 1993;\n+      else if (!strcmp (pa_unix_string, \"95\"))\n+\tflag_pa_unix = 1995;\n+      else if (TARGET_HPUX_11_11)\n+\t{\n+\t  if (!strcmp (pa_unix_string, \"98\"))\n+\t    flag_pa_unix = 1998;\n+\t  else\n+\t    warning (\"unknown -munix= option (%s).\\n\"\n+\t\t     \"Valid options are 93, 95 and 98.\\n\",\n+\t\t     pa_unix_string);\n+\t}\n+      else if (TARGET_HPUX_10_10)\n+\twarning (\"unknown -munix= option (%s).\"\n+\t\t \"\\nValid options are 93 and 95.\\n\",\n+\t\t pa_unix_string);\n+      else\n+\twarning (\"unknown -munix= option (%s).\\nValid option is 93.\\n\",\n+\t\t pa_unix_string);\n+    }\n+\n   if (pa_fixed_range_string)\n     fix_range (pa_fixed_range_string);\n "}, {"sha": "4a6f78cbc62772350ae9106632445ab32f0b13b0", "filename": "gcc/config/pa/pa.h", "status": "modified", "additions": 27, "deletions": 3, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d711cf67a62351e4722d7b16b1be84899b6b1d82/gcc%2Fconfig%2Fpa%2Fpa.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d711cf67a62351e4722d7b16b1be84899b6b1d82/gcc%2Fconfig%2Fpa%2Fpa.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.h?ref=d711cf67a62351e4722d7b16b1be84899b6b1d82", "patch": "@@ -67,6 +67,10 @@ extern const char *pa_fixed_range_string;\n extern const char *pa_cpu_string;\n extern enum processor_type pa_cpu;\n \n+/* For -munix= option.  */\n+extern const char *pa_unix_string;\n+extern int flag_pa_unix;\n+\n #define pa_cpu_attr ((enum attr_cpu)pa_cpu)\n \n /* Print subsidiary information on the compiler version in use.  */\n@@ -188,6 +192,21 @@ extern int target_flags;\n #define TARGET_SOM 0\n #endif\n \n+/* HP-UX UNIX features.  */\n+#ifndef TARGET_HPUX\n+#define TARGET_HPUX 0\n+#endif\n+\n+/* HP-UX 10.10 UNIX 95 features.  */\n+#ifndef TARGET_HPUX_10_10\n+#define TARGET_HPUX_10_10 0\n+#endif\n+\n+/* HP-UX 11i multibyte and UNIX 98 extensions.  */\n+#ifndef TARGET_HPUX_11_11\n+#define TARGET_HPUX_11_11 0\n+#endif\n+\n /* The following three defines are potential target switches.  The current\n    defines are optimal given the current capabilities of GAS and GNU ld.  */\n \n@@ -310,14 +329,19 @@ extern int target_flags;\n #define TARGET_OPTIONS\t\t\t\t\t\t\t\\\n {\t\t\t\t\t\t\t\t\t\\\n   { \"arch=\",\t\t\t&pa_arch_string,\t\t\t\\\n-    N_(\"Specify PA-RISC architecture for code generation.  \"\t\t\\\n+    N_(\"Specify PA-RISC architecture for code generation.\\n\"\t\t\\\n        \"Values are 1.0, 1.1 and 2.0.\"), 0},\t\t\t\t\\\n   { \"fixed-range=\",\t\t&pa_fixed_range_string,\t\t\t\\\n-    N_(\"Specify range of registers to make fixed\"), 0},\t\t\t\\\n+    N_(\"Specify range of registers to make fixed.\"), 0},\t\t\\\n   { \"schedule=\",\t\t&pa_cpu_string,\t\t\t\t\\\n-    N_(\"Specify CPU for scheduling purposes\"), 0}\t\t\t\\\n+    N_(\"Specify CPU for scheduling purposes.\"), 0},\t\t\t\\\n+  SUBTARGET_OPTIONS\t\t\t\t\t\t\t\\\n }\n \n+#ifndef SUBTARGET_OPTIONS\n+#define SUBTARGET_OPTIONS\n+#endif\n+\n /* Support for a compile-time default CPU, et cetera.  The rules are:\n    --with-schedule is ignored if -mschedule is specified.\n    --with-arch is ignored if -march is specified.  */"}, {"sha": "ba725e5887c31ac18ac00cbacf504f05b04eff4b", "filename": "gcc/config/pa/pa64-hpux.h", "status": "modified", "additions": 19, "deletions": 3, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d711cf67a62351e4722d7b16b1be84899b6b1d82/gcc%2Fconfig%2Fpa%2Fpa64-hpux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d711cf67a62351e4722d7b16b1be84899b6b1d82/gcc%2Fconfig%2Fpa%2Fpa64-hpux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa64-hpux.h?ref=d711cf67a62351e4722d7b16b1be84899b6b1d82", "patch": "@@ -95,6 +95,14 @@ Boston, MA 02111-1307, USA.  */\n #define MD_EXEC_PREFIX \"/usr/ccs/bin\"\n #endif\n \n+/* Default prefixes.  */\n+\n+#undef STANDARD_STARTFILE_PREFIX_1\n+#define STANDARD_STARTFILE_PREFIX_1 \"/lib/pa20_64/\"\n+\n+#undef STANDARD_STARTFILE_PREFIX_2\n+#define STANDARD_STARTFILE_PREFIX_2 \"/usr/lib/pa20_64/\"\n+\n /* Under hpux11 the normal location of the various pa20_64 *crt*.o files\n    is the /usr/ccs/lib/pa20_64 directory.  Some files may also be in the\n    /opt/langtools/lib/pa20_64 directory.  */\n@@ -265,11 +273,19 @@ do {\t\t\t\t\t\t\t\t\\\n /* The following STARTFILE_SPEC and ENDFILE_SPEC defines provide the\n    magic needed to run initializers and finalizers.  */\n #undef STARTFILE_SPEC\n+#if TARGET_HPUX_11_11\n #define STARTFILE_SPEC \\\n-  \"%{!shared: %{!symbolic: crt0.o%s}} %{static:crtbeginT.o%s} \\\n-   %{!static:%{!shared:crtbegin.o%s} %{shared:crtbeginS.o%s}}\"\n+  \"%{!shared: %{!symbolic: crt0%O%s} %{munix=95:unix95.o%s} \\\n+     %{!munix=93:%{!munix=95:unix98%O%s}}} %{static:crtbeginT%Oos} \\\n+   %{!static:%{!shared:crtbegin%O%s} %{shared:crtbeginS%O%s}}\"\n+#else\n+#define STARTFILE_SPEC \\\n+  \"%{!shared: %{!symbolic: crt0%O%s} %{munix=95:unix95%O%s}} \\\n+   %{static:crtbeginT%O%s} %{!static:%{!shared:crtbegin%O%s} \\\n+   %{shared:crtbeginS%O%s}}\"\n+#endif\n #undef ENDFILE_SPEC\n-#define ENDFILE_SPEC \"%{!shared:crtend.o%s} %{shared:crtendS.o%s}\"\n+#define ENDFILE_SPEC \"%{!shared:crtend%O%s} %{shared:crtendS%O%s}\"\n \n /* Since HP uses the .init and .fini sections for array initializers\n    and finalizers, we need different defines for INIT_SECTION_ASM_OP"}, {"sha": "93e009002e48afd9dab482d78d07838c3c642cba", "filename": "gcc/doc/install.texi", "status": "modified", "additions": 13, "deletions": 3, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d711cf67a62351e4722d7b16b1be84899b6b1d82/gcc%2Fdoc%2Finstall.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d711cf67a62351e4722d7b16b1be84899b6b1d82/gcc%2Fdoc%2Finstall.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finstall.texi?ref=d711cf67a62351e4722d7b16b1be84899b6b1d82", "patch": "@@ -2608,10 +2608,10 @@ We @emph{highly} recommend using gas/binutils on all hppa platforms;\n you may encounter a variety of problems when using the HP assembler.\n \n Specifically, @option{-g} does not work on HP-UX (since that system\n-uses a peculiar debugging format which GCC does not know about), unless you\n-use GAS and GDB and configure GCC with the\n+uses a peculiar debugging format which GCC does not know about), unless\n+you use GAS and GDB.  It may be helpful to configure GCC with the\n @uref{./configure.html#with-gnu-as,,@option{--with-gnu-as}} and\n-@option{--with-as=@dots{}} options.\n+@option{--with-as=@dots{}} options to ensure that GCC can find GAS.\n \n If you wish to use the pa-risc 2.0 architecture support with a 32-bit\n runtime, you must use either the HP assembler, or gas/binutils 2.11\n@@ -2629,6 +2629,16 @@ configuring if you want a model other than PROCESSOR_8000.  The macro\n TARGET_SCHED_DEFAULT can be defined in BOOT_CFLAGS if a different\n default scheduling model is desired.\n \n+As of GCC 3.5, GCC uses the UNIX 95 namespace for HP-UX 10.10\n+through 11.00, and the UNIX 98 namespace for HP-UX 11.11 and later.\n+This namespace change might cause problems when bootstrapping with\n+an earlier version of GCC or the HP compiler as essentially the same\n+namespace is required for an entire build.  This problem can be avoided\n+in a number of ways.  With HP cc, @env{UNIX_STD} can be set to @samp{95}\n+or @samp{98}.  Another way is to add an appropriate set of predefines\n+to @env{CC}.  The description for the @option{munix=} option contains\n+a list of the predefines used with each standard.\n+\n More specific information to @samp{hppa*-hp-hpux*} targets follows.\n \n @html"}, {"sha": "4437699ae8d72d32f0ebfed8b6f965eec4cc4ffc", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 74, "deletions": 52, "changes": 126, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d711cf67a62351e4722d7b16b1be84899b6b1d82/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d711cf67a62351e4722d7b16b1be84899b6b1d82/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=d711cf67a62351e4722d7b16b1be84899b6b1d82", "patch": "@@ -475,7 +475,7 @@ Objective-C and Objective-C++ Dialects}.\n -mno-space-regs  -msoft-float  -mpa-risc-1-0 @gol\n -mpa-risc-1-1  -mpa-risc-2-0  -mportable-runtime @gol\n -mschedule=@var{cpu-type}  -mspace-regs  -msio  -mwsio @gol\n--nolibdld  -static  -threads}\n+-munix=@var{unix-std}  -nolibdld  -static  -threads}\n \n @emph{i386 and x86-64 Options}\n @gccoptlist{-mtune=@var{cpu-type}  -march=@var{cpu-type} @gol\n@@ -7600,6 +7600,53 @@ Use multiply and add/subtract instructions.\n \n Do not use multiply and add/subtract instructions.\n \n+@item -mfdpic\n+@opindex mfdpic\n+\n+Select the FDPIC ABI, that uses function descriptors to represent\n+pointers to functions.  Without any PIC/PIE-related options, it\n+implies @option{-fPIE}.  With @option{-fpic} or @option{-fpie}, it\n+assumes GOT entries and small data are within a 12-bit range from the\n+GOT base address; with @option{-fPIC} or @option{-fPIE}, GOT offsets\n+are computed with 32 bits.\n+\n+@item -minline-plt\n+@opindex minline-plt\n+\n+Enable inlining of PLT entries in function calls to functions that are\n+not known to bind locally.  It has no effect without @option{-mfdpic}.\n+It's enabled by default if optimizing for speed and compiling for\n+shared libraries (i.e., @option{-fPIC} or @option{-fpic}), or when an\n+optimization option such as @option{-O3} or above is present in the\n+command line.\n+\n+@item -mgprel-ro\n+@opindex mgprel-ro\n+\n+Enable the use of @code{GPREL} relocations in the FDPIC ABI for data\n+that is known to be in read-only sections.  It's enabled by default,\n+except for @option{-fpic} or @option{-fpie}: even though it may help\n+make the global offset table smaller, it trades 1 instruction for 4.\n+With @option{-fPIC} or @option{-fPIE}, it trades 3 instructions for 4,\n+one of which may be shared by multiple symbols, and it avoids the need\n+for a GOT entry for the referenced symbol, so it's more likely to be a\n+win.  If it is not, @option{-mno-gprel-ro} can be used to disable it.\n+\n+@item -multilib-library-pic\n+@opindex multilib-library-pic\n+\n+Link with the (library, not FD) pic libraries.  It's implied by\n+@option{-mlibrary-pic}, as well as by @option{-fPIC} and\n+@option{-fpic} without @option{-mfdpic}.  You should never have to use\n+it explicitly.\n+\n+@item -mlinked-fp\n+@opindex mlinked-fp\n+\n+Follow the EABI requirement of always creating a frame pointer whenever\n+a stack frame is allocated.  This option is enabled by default and can\n+be disabled with @option{-mno-linked-fp}.\n+\n @item -mlibrary-pic\n @opindex mlibrary-pic\n \n@@ -7800,10 +7847,6 @@ architecture option for your machine.  Code compiled for lower numbered\n architectures will run on higher numbered architectures, but not the\n other way around.\n \n-PA 2.0 support currently requires gas snapshot 19990413 or later.  The\n-next release of binutils (current is 2.9.1) will probably contain PA 2.0\n-support.\n-\n @item -mpa-risc-1-0\n @itemx -mpa-risc-1-1\n @itemx -mpa-risc-2-0\n@@ -7934,53 +7977,6 @@ configure option, GCC's program search path, and finally by the user's\n @env{PATH}.  The linker used by GCC can be printed using @samp{which\n `gcc -print-prog-name=ld`}.\n \n-@item -mfdpic\n-@opindex mfdpic\n-\n-Select the FDPIC ABI, that uses function descriptors to represent\n-pointers to functions.  Without any PIC/PIE-related options, it\n-implies @option{-fPIE}.  With @option{-fpic} or @option{-fpie}, it\n-assumes GOT entries and small data are within a 12-bit range from the\n-GOT base address; with @option{-fPIC} or @option{-fPIE}, GOT offsets\n-are computed with 32 bits.\n-\n-@item -minline-plt\n-@opindex minline-plt\n-\n-Enable inlining of PLT entries in function calls to functions that are\n-not known to bind locally.  It has no effect without @option{-mfdpic}.\n-It's enabled by default if optimizing for speed and compiling for\n-shared libraries (i.e., @option{-fPIC} or @option{-fpic}), or when an\n-optimization option such as @option{-O3} or above is present in the\n-command line.\n-\n-@item -mgprel-ro\n-@opindex mgprel-ro\n-\n-Enable the use of @code{GPREL} relocations in the FDPIC ABI for data\n-that is known to be in read-only sections.  It's enabled by default,\n-except for @option{-fpic} or @option{-fpie}: even though it may help\n-make the global offset table smaller, it trades 1 instruction for 4.\n-With @option{-fPIC} or @option{-fPIE}, it trades 3 instructions for 4,\n-one of which may be shared by multiple symbols, and it avoids the need\n-for a GOT entry for the referenced symbol, so it's more likely to be a\n-win.  If it is not, @option{-mno-gprel-ro} can be used to disable it.\n-\n-@item -multilib-library-pic\n-@opindex multilib-library-pic\n-\n-Link with the (library, not FD) pic libraries.  It's implied by\n-@option{-mlibrary-pic}, as well as by @option{-fPIC} and\n-@option{-fpic} without @option{-mfdpic}.  You should never have to use\n-it explicitly.\n-\n-@item -mlinked-fp\n-@opindex mlinked-fp\n-\n-Follow the EABI requirement of always creating a frame pointer whenever\n-a stack frame is allocated.  This option is enabled by default and can\n-be disabled with @option{-mno-linked-fp}.\n-\n @item -mlong-calls\n @opindex mno-long-calls\n Generate code that uses long call sequences.  This ensures that a call\n@@ -8008,6 +8004,32 @@ symbol-difference or pc-relative calls should be relatively small.\n However, an indirect call is used on 32-bit ELF systems in pic code\n and it is quite long.\n \n+@item -munix=@var{unix-std}\n+@opindex march\n+Generate compiler predefines and select a startfile for the specified\n+UNIX standard.  The choices for @var{unix-std} are @samp{93}, @samp{95}\n+and @samp{98}.  @samp{93} is supported on all HP-UX versions.  @samp{95}\n+is available on HP-UX 10.10 and later.  @samp{98} is available on HP-UX\n+11.11 and later.  The default values are @samp{93} for HP-UX 10.00,\n+@samp{95} for HP-UX 10.10 though to 11.00, and @samp{98} for HP-UX 11.11\n+and later.\n+\n+@option{-munix=93} provides the same predefines as GCC 3.3 and 3.4.\n+@option{-munix=95} provides additional predefines for @code{XOPEN_UNIX}\n+and @code{_XOPEN_SOURCE_EXTENDED}, and the startfile @file{unix95.o}.\n+@option{-munix=98} provides additional predefines for @code{_XOPEN_UNIX},\n+@code{_XOPEN_SOURCE_EXTENDED}, @code{_INCLUDE__STDC_A1_SOURCE} and\n+@code{_INCLUDE_XOPEN_SOURCE_500}, and the startfile @file{unix98.o}.\n+\n+It is @emph{important} to note that this option changes the interfaces\n+for various library routines.  It also affects the operational behavior\n+of the C library.  Thus, @emph{extreme} care is needed in using this\n+option.\n+\n+Library code that is intended to operate with more than one UNIX\n+standard must test, set and restore the variable @var{__xpg4_extended_mask}\n+as appropriate.  Most GNU software doesn't provide this capability.\n+\n @item -nolibdld\n @opindex nolibdld\n Suppress the generation of link options to search libdld.sl when the"}]}