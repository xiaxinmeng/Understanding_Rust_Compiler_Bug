{"sha": "d579fabd9e9ee326dd532c990f59eed385a74dbf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDU3OWZhYmQ5ZTllZTMyNmRkNTMyYzk5MGY1OWVlZDM4NWE3NGRiZg==", "commit": {"author": {"name": "Pascal Obry", "email": "obry@adacore.com", "date": "2007-06-06T10:51:56Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2007-06-06T10:51:56Z"}, "message": "makegpr.adb (Add_Archive_Path): Use untouched object and library dirs and library name.\n\n2007-04-20  Pascal Obry  <obry@adacore.com>\n\t    Vincent Celier  <celier@adacore.com>\n\n\t* makegpr.adb (Add_Archive_Path): Use untouched object and library\n\tdirs and library name.\n\t(Build_Global_Archive): Idem. Minor code clean-up. Removes duplicate\n\tcomments.\n\t(Build_Library): Idem.\n\t(Compile_Individual_Sources): Idem.\n\t(Compile_Link_With_Gnatmake): Idem.\n\t(Compile_Sources): Idem.\n\t(Get_Imported_Directories): Idem.\n\t(Link_Executables): Idem. Same change for the executable dir.\n\t(Check_Compilation_Needed): C_Source_Path new variable containing\n\tthe canonical form of Source_Path to check against the source names\n\tin the dependency file.\n\t(Build_Global_Archive, Compile_Individual_Sources, Compile_Sources): In\n\tverbose mode, display the name of the object directory we're changing\n\tto.\n\t(Saved_Switches): New name of table X_Switches\n\t(Scan_Arg): Recognize new switch -aP and save in table Saved_Switches\n\t(Usage): New line for switch -aP\n\t(Get_Imported_Directories.Add): Make sure that Add_Arg is True before\n\ttesting if a directory should be added to the search path.\n\nFrom-SVN: r125476", "tree": {"sha": "58da13929915675aab75fdf26b778ea16e2bd89b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/58da13929915675aab75fdf26b778ea16e2bd89b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d579fabd9e9ee326dd532c990f59eed385a74dbf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d579fabd9e9ee326dd532c990f59eed385a74dbf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d579fabd9e9ee326dd532c990f59eed385a74dbf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d579fabd9e9ee326dd532c990f59eed385a74dbf/comments", "author": {"login": "TurboGit", "id": 467069, "node_id": "MDQ6VXNlcjQ2NzA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/467069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TurboGit", "html_url": "https://github.com/TurboGit", "followers_url": "https://api.github.com/users/TurboGit/followers", "following_url": "https://api.github.com/users/TurboGit/following{/other_user}", "gists_url": "https://api.github.com/users/TurboGit/gists{/gist_id}", "starred_url": "https://api.github.com/users/TurboGit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TurboGit/subscriptions", "organizations_url": "https://api.github.com/users/TurboGit/orgs", "repos_url": "https://api.github.com/users/TurboGit/repos", "events_url": "https://api.github.com/users/TurboGit/events{/privacy}", "received_events_url": "https://api.github.com/users/TurboGit/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e08b38f55529d03241009f7ec4227af1b08e2e7b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e08b38f55529d03241009f7ec4227af1b08e2e7b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e08b38f55529d03241009f7ec4227af1b08e2e7b"}], "stats": {"total": 290, "additions": 171, "deletions": 119}, "files": [{"sha": "87dfd8675eed3b654e4f4febdd437535e15cbb6c", "filename": "gcc/ada/makegpr.adb", "status": "modified", "additions": 171, "deletions": 119, "changes": 290, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d579fabd9e9ee326dd532c990f59eed385a74dbf/gcc%2Fada%2Fmakegpr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d579fabd9e9ee326dd532c990f59eed385a74dbf/gcc%2Fada%2Fmakegpr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmakegpr.adb?ref=d579fabd9e9ee326dd532c990f59eed385a74dbf", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2004-2006, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -24,36 +24,37 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n-with Ada.Command_Line;  use Ada.Command_Line;\n-with Ada.Strings.Fixed; use Ada.Strings.Fixed;\n-with Ada.Text_IO;       use Ada.Text_IO;\n-with Ada.Unchecked_Deallocation;\n-\n with Csets;\n with Gnatvsn;\n with Hostparm; use Hostparm;\n+with Makeutl;  use Makeutl;\n+with MLib.Tgt; use MLib.Tgt;\n+with Namet;    use Namet;\n+with Output;   use Output;\n+with Opt;      use Opt;\n+with Osint;    use Osint;\n+with Prj;      use Prj;\n+with Prj.Ext;  use Prj.Ext;\n+with Prj.Pars;\n+with Prj.Util; use Prj.Util;\n+with Snames;   use Snames;\n+with Table;\n+with Types;    use Types;\n+\n+with Ada.Command_Line;           use Ada.Command_Line;\n+with Ada.Strings.Fixed;          use Ada.Strings.Fixed;\n+with Ada.Text_IO;                use Ada.Text_IO;\n+with Ada.Unchecked_Deallocation;\n \n-with GNAT.Directory_Operations; use GNAT.Directory_Operations;\n+with GNAT.Directory_Operations;  use GNAT.Directory_Operations;\n with GNAT.Dynamic_Tables;\n-with GNAT.Expect;               use GNAT.Expect;\n+with GNAT.Expect;                use GNAT.Expect;\n with GNAT.HTable;\n-with GNAT.OS_Lib;               use GNAT.OS_Lib;\n-with GNAT.Regpat;               use GNAT.Regpat;\n-\n-with Makeutl;          use Makeutl;\n-with MLib.Tgt;         use MLib.Tgt;\n-with Namet;            use Namet;\n-with Output;           use Output;\n-with Opt;              use Opt;\n-with Osint;            use Osint;\n-with Prj;              use Prj;\n-with Prj.Pars;\n-with Prj.Util;         use Prj.Util;\n-with Snames;           use Snames;\n+with GNAT.OS_Lib;                use GNAT.OS_Lib;\n+with GNAT.Regpat;                use GNAT.Regpat;\n+\n with System;\n-with System.Case_Util; use System.Case_Util;\n-with Table;\n-with Types;            use Types;\n+with System.Case_Util;           use System.Case_Util;\n \n package body Makegpr is\n \n@@ -231,18 +232,18 @@ package body Makegpr is\n      (Header_Num => Header_Num,\n       Element    => Boolean,\n       No_Element => False,\n-      Key        => Name_Id,\n+      Key        => File_Name_Type,\n       Hash       => Hash,\n       Equal      => \"=\");\n \n-   package X_Switches is new Table.Table\n+   package Saved_Switches is new Table.Table\n      (Table_Component_Type => String_Access,\n       Table_Index_Type     => Integer,\n       Table_Low_Bound      => 1,\n       Table_Initial        => 10,\n       Table_Increment      => 100,\n-      Table_Name           => \"Makegpr.X_Switches\");\n-   --  Table to store the -X switches to be passed to gnatmake\n+      Table_Name           => \"Makegpr.Saved_Switches\");\n+   --  Table to store the switches to be passed to gnatmake\n \n    Initial_Argument_Count : constant Positive := 20;\n    type Boolean_Array is array (Positive range <>) of Boolean;\n@@ -346,6 +347,11 @@ package body Makegpr is\n    Path_Option : String_Access;\n    --  The path option switch, when supported\n \n+   Project_Of_Current_Object_Directory : Project_Id := No_Project;\n+   --  The object directory of the project for the last compilation. Avoid\n+   --  calling Change_Dir if the current working directory is already this\n+   --  directory.\n+\n    package Lib_Path is new Table.Table\n      (Table_Component_Type => Character,\n       Table_Index_Type     => Integer,\n@@ -385,7 +391,7 @@ package body Makegpr is\n      (Data      : Project_Data;\n       Proc      : Processor;\n       Language  : Language_Index;\n-      File_Name : Name_Id);\n+      File_Name : File_Name_Type);\n    --  Add to Arguments the switches, if any, for a source (attribute Switches)\n    --  or language (attribute Default_Switches), coming from package Compiler\n    --  or Linker (depending on Proc) of a specified project file.\n@@ -474,7 +480,7 @@ package body Makegpr is\n    --  arguments.\n \n    function Is_Included_In_Global_Archive\n-     (Object_Name : Name_Id;\n+     (Object_Name : File_Name_Type;\n       Project     : Project_Id) return Boolean;\n    --  Return True if the object Object_Name is not overridden by a source\n    --  in a project extending project Project.\n@@ -544,7 +550,7 @@ package body Makegpr is\n                if not For_Gnatmake then\n                   if Data.Library_Kind = Static then\n                      Add_Argument\n-                       (Get_Name_String (Data.Library_Dir) &\n+                       (Get_Name_String (Data.Display_Library_Dir) &\n                         Directory_Separator &\n                         \"lib\" & Get_Name_String (Data.Library_Name) &\n                         '.' & Archive_Ext,\n@@ -558,7 +564,7 @@ package body Makegpr is\n                        (\"-l\" & Get_Name_String (Data.Library_Name),\n                         Verbose_Mode);\n \n-                     Get_Name_String (Data.Library_Dir);\n+                     Get_Name_String (Data.Display_Library_Dir);\n \n                      Add_Argument\n                        (\"-L\" & Name_Buffer (1 .. Name_Len),\n@@ -610,10 +616,10 @@ package body Makegpr is\n \n             elsif Project = Main_Project and then Global_Archive_Exists then\n                Add_Argument\n-                 (Get_Name_String (Data.Object_Directory) &\n+                 (Get_Name_String (Data.Display_Object_Dir) &\n                   Directory_Separator &\n-                  \"lib\" & Get_Name_String (Data.Name) &\n-                  '.' & Archive_Ext,\n+                  \"lib\" & Get_Name_String (Data.Display_Name)\n+                  & '.' & Archive_Ext,\n                   Verbose_Mode);\n             end if;\n          end Add_Archive_Path;\n@@ -929,7 +935,7 @@ package body Makegpr is\n      (Data      : Project_Data;\n       Proc      : Processor;\n       Language  : Language_Index;\n-      File_Name : Name_Id)\n+      File_Name : File_Name_Type)\n    is\n       Switches       : Variable_Value;\n       --  The switches, if any, for the file/language\n@@ -961,6 +967,7 @@ package body Makegpr is\n       end case;\n \n       if Pkg /= No_Package then\n+\n          --  Get the Switches (\"file name\"), if they exist\n \n          Switches_Array := Prj.Util.Value_Of\n@@ -971,7 +978,7 @@ package body Makegpr is\n \n          Switches :=\n            Prj.Util.Value_Of\n-             (Index     => File_Name,\n+             (Index     => Name_Id (File_Name),\n               Src_Index => 0,\n               In_Array  => Switches_Array,\n               In_Tree   => Project_Tree);\n@@ -1025,38 +1032,50 @@ package body Makegpr is\n    --------------------------\n \n    procedure Build_Global_Archive is\n-      Data      : Project_Data :=\n-                    Project_Tree.Projects.Table (Main_Project);\n+      Data      : Project_Data := Project_Tree.Projects.Table (Main_Project);\n       Source_Id : Other_Source_Id;\n       S_Id      : Other_Source_Id;\n       Source    : Other_Source;\n       Success   : Boolean;\n \n       Archive_Name : constant String :=\n-        \"lib\" & Get_Name_String (Data.Name) & '.' & Archive_Ext;\n+                       \"lib\"\n+                         & Get_Name_String (Data.Display_Name)\n+                         & '.'\n+                         & Archive_Ext;\n       --  The name of the archive file for this project\n \n       Archive_Dep_Name : constant String :=\n-        \"lib\" & Get_Name_String (Data.Name) & \".deps\";\n+                           \"lib\"\n+                             & Get_Name_String (Data.Display_Name)\n+                             & \".deps\";\n       --  The name of the archive dependency file for this project\n \n       Need_To_Rebuild : Boolean := Need_To_Rebuild_Global_Archive;\n       --  When True, archive will be rebuilt\n \n-      File : Prj.Util.Text_File;\n-\n-      Object_Path  : Name_Id;\n-      Time_Stamp   : Time_Stamp_Type;\n-\n+      File                : Prj.Util.Text_File;\n+      Object_Path         : Path_Name_Type;\n+      Time_Stamp          : Time_Stamp_Type;\n       Saved_Last_Argument : Natural;\n       First_Object        : Natural;\n-\n-      Discard : Boolean;\n+      Discard             : Boolean;\n \n    begin\n       Check_Archive_Builder;\n \n-      Change_Dir (Get_Name_String (Data.Object_Directory));\n+      if Project_Of_Current_Object_Directory /= Main_Project then\n+         Project_Of_Current_Object_Directory := Main_Project;\n+         Change_Dir (Get_Name_String (Data.Object_Directory));\n+\n+         if Verbose_Mode then\n+            Write_Str  (\"Changing to object directory of \"\"\");\n+            Write_Name (Data.Display_Name);\n+            Write_Str  (\"\"\": \"\"\");\n+            Write_Name (Data.Display_Object_Dir);\n+            Write_Line (\"\"\"\");\n+         end if;\n+      end if;\n \n       if not Need_To_Rebuild then\n          if Verbose_Mode then\n@@ -1309,9 +1328,8 @@ package body Makegpr is\n                   Arguments (1 .. Last_Argument),\n                   Success);\n \n-               exit when not Success;\n-\n-               exit when Last_Argument = Saved_Last_Argument;\n+               exit when not Success\n+                 or else Last_Argument = Saved_Last_Argument;\n \n                Arguments (1) := r;\n                Arguments (3 .. Saved_Last_Argument - Last_Argument + 2) :=\n@@ -1324,9 +1342,6 @@ package body Makegpr is\n \n             if Success then\n \n-               --  If the archive was built, run the archive indexer (ranlib),\n-               --  if there is one.\n-\n                if Archive_Indexer_Path /= null then\n                   Last_Argument := 0;\n                   Add_Argument (Archive_Name, True);\n@@ -1349,7 +1364,7 @@ package body Makegpr is\n \n                      Report_Error\n                        (\"running\" & Archive_Indexer & \" for project \"\"\",\n-                        Get_Name_String (Data.Name),\n+                        Get_Name_String (Data.Display_Name),\n                         \"\"\" failed\");\n                      return;\n                   end if;\n@@ -1371,7 +1386,7 @@ package body Makegpr is\n \n                Report_Error\n                  (\"building archive for project \"\"\",\n-                  Get_Name_String (Data.Name),\n+                  Get_Name_String (Data.Display_Name),\n                   \"\"\" failed\");\n             end if;\n          end if;\n@@ -1389,23 +1404,26 @@ package body Makegpr is\n       Source    : Other_Source;\n \n       Archive_Name : constant String :=\n-                       \"lib\" & Get_Name_String (Data.Name) & '.' & Archive_Ext;\n+                       \"lib\" & Get_Name_String (Data.Display_Name)\n+                       & '.' & Archive_Ext;\n       --  The name of the archive file for this project\n \n       Archive_Dep_Name : constant String :=\n-                           \"lib\" & Get_Name_String (Data.Name) & \".deps\";\n+                           \"lib\" & Get_Name_String (Data.Display_Name)\n+                           & \".deps\";\n       --  The name of the archive dependency file for this project\n \n       Need_To_Rebuild : Boolean := Unconditionally;\n       --  When True, archive will be rebuilt\n \n       File : Prj.Util.Text_File;\n \n-      Object_Name : Name_Id;\n+      Object_Name : File_Name_Type;\n       Time_Stamp  : Time_Stamp_Type;\n       Driver_Name : Name_Id := No_Name;\n \n-      Lib_Opts : Argument_List_Access := No_Argument'Access;\n+      Lib_Opts    : Argument_List_Access := No_Argument'Access;\n+\n    begin\n       Check_Archive_Builder;\n \n@@ -1621,7 +1639,7 @@ package body Makegpr is\n                  (Ofiles      => Arguments (1 .. Last_Argument),\n                   Afiles      => No_Argument,\n                   Output_File => Get_Name_String (Data.Library_Name),\n-                  Output_Dir  => Get_Name_String (Data.Library_Dir));\n+                  Output_Dir  => Get_Name_String (Data.Display_Library_Dir));\n \n             else\n                --  Link with g++ if C++ is one of the languages, otherwise\n@@ -1796,10 +1814,11 @@ package body Makegpr is\n      (Source          : Other_Source;\n       Need_To_Compile : out Boolean)\n    is\n-      Source_Name : constant String := Get_Name_String (Source.File_Name);\n-      Source_Path : constant String := Get_Name_String (Source.Path_Name);\n-      Object_Name : constant String := Get_Name_String (Source.Object_Name);\n-      Dep_Name    : constant String := Get_Name_String (Source.Dep_Name);\n+      Source_Name   : constant String := Get_Name_String (Source.File_Name);\n+      Source_Path   : constant String := Get_Name_String (Source.Path_Name);\n+      Object_Name   : constant String := Get_Name_String (Source.Object_Name);\n+      Dep_Name      : constant String := Get_Name_String (Source.Dep_Name);\n+      C_Source_Path : String := Source_Path;\n \n       Source_In_Dependencies : Boolean := False;\n       --  Set True if source was found in dependency file of its object file\n@@ -1812,6 +1831,8 @@ package body Makegpr is\n       --  Set to True at the end of the first Big_Loop\n \n    begin\n+      Canonical_Case_File_Name (C_Source_Path);\n+\n       --  Assume the worst, so that statement \"return;\" may be used if there\n       --  is any problem.\n \n@@ -2002,9 +2023,9 @@ package body Makegpr is\n                            --  line, the next character is part of the path\n                            --  name, even if it is a space.\n \n-                           if On_Windows and then\n-                             Line (Finish + 1) /= '\\' and then\n-                             Line (Finish + 1) /= ' '\n+                           if On_Windows\n+                             and then Line (Finish + 1) /= '\\'\n+                             and then Line (Finish + 1) /= ' '\n                            then\n                               Finish := Finish + 1;\n \n@@ -2039,13 +2060,13 @@ package body Makegpr is\n                         --  If it is original source, set\n                         --  Source_In_Dependencies.\n \n-                        if Src_Name = Source_Path then\n+                        if Src_Name = C_Source_Path then\n                            Source_In_Dependencies := True;\n                         end if;\n \n                         Name_Len := 0;\n                         Add_Str_To_Name_Buffer (Src_Name);\n-                        Src_TS := File_Stamp (Name_Find);\n+                        Src_TS := File_Stamp (File_Name_Type'(Name_Find));\n \n                         --  If the source does not exist, we need to recompile\n \n@@ -2246,14 +2267,14 @@ package body Makegpr is\n                Delete_File (Get_Name_String (Source.Dep_Name), Success);\n \n             exception\n-            when Process_Died =>\n+               when Process_Died =>\n \n                   --  This is the normal outcome. Just close the file\n \n                   Close (FD, Status);\n                   Close (Dep_File);\n \n-            when others =>\n+               when others =>\n \n                   --  Something wrong happened. It is safer to delete the\n                   --  dependency file, otherwise the dependencies may be wrong.\n@@ -2404,7 +2425,7 @@ package body Makegpr is\n                        Project_Tree.Projects.Table (Main_Project);\n       Source_Id    : Other_Source_Id;\n       Source       : Other_Source;\n-      Source_Name  : Name_Id;\n+      Source_Name  : File_Name_Type;\n       Project_Name : String := Get_Name_String (Data.Name);\n       Dummy        : Boolean := False;\n \n@@ -2421,7 +2442,18 @@ package body Makegpr is\n \n       --  Compilation will occur in the object directory\n \n-      Change_Dir (Get_Name_String (Data.Object_Directory));\n+      if Project_Of_Current_Object_Directory /= Main_Project then\n+         Project_Of_Current_Object_Directory := Main_Project;\n+         Change_Dir (Get_Name_String (Data.Object_Directory));\n+\n+         if Verbose_Mode then\n+            Write_Str  (\"Changing to object directory of \"\"\");\n+            Write_Name (Data.Name);\n+            Write_Str  (\"\"\": \"\"\");\n+            Write_Name (Data.Display_Object_Dir);\n+            Write_Line (\"\"\"\");\n+         end if;\n+      end if;\n \n       if not Data.Other_Sources_Present then\n          if Ada_Is_A_Language then\n@@ -2438,8 +2470,7 @@ package body Makegpr is\n             end loop;\n \n          else\n-            Osint.Fail\n-              (\"project \", Project_Name, \" contains no source\");\n+            Osint.Fail (\"project \", Project_Name, \" contains no source\");\n          end if;\n \n       else\n@@ -2520,12 +2551,12 @@ package body Makegpr is\n       --  Specify the project file\n \n       Add_Argument (Dash_P, True);\n-      Add_Argument (Get_Name_String (Data.Path_Name), True);\n+      Add_Argument (Get_Name_String (Data.Display_Path_Name), True);\n \n-      --  Add the -X switches, if any\n+      --  Add the saved switches, if any\n \n-      for Index in 1 .. X_Switches.Last loop\n-         Add_Argument (X_Switches.Table (Index), True);\n+      for Index in 1 .. Saved_Switches.Last loop\n+         Add_Argument (Saved_Switches.Table (Index), True);\n       end loop;\n \n       --  If Mains_Specified is True, find the mains in package Mains\n@@ -2652,7 +2683,6 @@ package body Makegpr is\n             Compiler_Names (Ada_Language_Index).all,\n             \" failed\");\n       end if;\n-\n    end Compile_Link_With_Gnatmake;\n \n    ---------------------\n@@ -2720,7 +2750,18 @@ package body Makegpr is\n \n             --  Compilation will occur in the object directory\n \n-            Change_Dir (Get_Name_String (Data.Object_Directory));\n+            if Project_Of_Current_Object_Directory /= Project then\n+               Project_Of_Current_Object_Directory := Project;\n+               Change_Dir (Get_Name_String (Data.Object_Directory));\n+\n+               if Verbose_Mode then\n+                  Write_Str  (\"Changing to object directory of \"\"\");\n+                  Write_Name (Data.Display_Name);\n+                  Write_Str  (\"\"\": \"\"\");\n+                  Write_Name (Data.Display_Object_Dir);\n+                  Write_Line (\"\"\"\");\n+               end if;\n+            end if;\n \n             --  Process each source one by one\n \n@@ -2795,7 +2836,9 @@ package body Makegpr is\n          Write_Eol;\n          Write_Str (\"GPRMAKE \");\n          Write_Str (Gnatvsn.Gnat_Version_String);\n-         Write_Str (\" Copyright 2004 Free Software Foundation, Inc.\");\n+         Write_Str (\" Copyright 2004-\");\n+         Write_Str (Gnatvsn.Current_Year);\n+         Write_Str (\" Free Software Foundation, Inc.\");\n          Write_Eol;\n       end if;\n    end Copyright;\n@@ -3059,7 +3102,7 @@ package body Makegpr is\n             Element := Project_Tree.String_Elements.Table (Element_Id);\n \n             if Element.Value /= No_Name then\n-               Get_Name_String (Element.Value);\n+               Get_Name_String (Element.Display_Value);\n \n                if Name_Len > 0 then\n \n@@ -3079,6 +3122,8 @@ package body Makegpr is\n                      --  Check if directory is already in the list. If it is,\n                      --  no need to put it there again.\n \n+                     Add_Arg := True;\n+\n                      for Index in 1 .. Last_Argument loop\n                         if Arguments (Index).all = Arg then\n                            Add_Arg := False;\n@@ -3139,8 +3184,7 @@ package body Makegpr is\n                Imported := Data.Imported_Projects;\n                while Imported /= Empty_Project_List loop\n                   Recursive_Get_Dirs\n-                    (Project_Tree.Project_Lists.Table\n-                       (Imported).Project);\n+                    (Project_Tree.Project_Lists.Table (Imported).Project);\n                   Imported :=\n                     Project_Tree.Project_Lists.Table (Imported).Next;\n                end loop;\n@@ -3211,7 +3255,7 @@ package body Makegpr is\n \n       if Verbose_Mode then\n          Write_Eol;\n-         Write_Str (\"Parsing Project File \"\"\");\n+         Write_Str (\"Parsing project file \"\"\");\n          Write_Str (Project_File_Name.all);\n          Write_Str (\"\"\".\");\n          Write_Eol;\n@@ -3233,7 +3277,7 @@ package body Makegpr is\n \n       if Verbose_Mode then\n          Write_Eol;\n-         Write_Str (\"Parsing of Project File \"\"\");\n+         Write_Str (\"Parsing of project file \"\"\");\n          Write_Str (Project_File_Name.all);\n          Write_Str (\"\"\" is finished.\");\n          Write_Eol;\n@@ -3285,7 +3329,7 @@ package body Makegpr is\n \n             if not Compile_Only\n               and then not Data.Library\n-              and then Data.Object_Directory /= No_Name\n+              and then Data.Object_Directory /= No_Path\n             then\n                Build_Global_Archive;\n                Link_Executables;\n@@ -3368,9 +3412,9 @@ package body Makegpr is\n       Add_Str_To_Name_Buffer (\"compiler_command\");\n       Name_Compiler_Command := Name_Find;\n \n-      --  Make sure the -X switch table is empty\n+      --  Make sure the Saved_Switches table is empty\n \n-      X_Switches.Set_Last (0);\n+      Saved_Switches.Set_Last (0);\n \n       --  Get the command line arguments\n \n@@ -3407,7 +3451,7 @@ package body Makegpr is\n    -----------------------------------\n \n    function Is_Included_In_Global_Archive\n-     (Object_Name : Name_Id;\n+     (Object_Name : File_Name_Type;\n       Project     : Project_Id) return Boolean\n    is\n       Data   : Project_Data := Project_Tree.Projects.Table (Project);\n@@ -3444,7 +3488,8 @@ package body Makegpr is\n       Mains_Specified : constant Boolean := Mains.Number_Of_Mains /= 0;\n       --  True if main sources were specified on the command line\n \n-      Object_Dir : constant String := Get_Name_String (Data.Object_Directory);\n+      Object_Dir : constant String :=\n+                     Get_Name_String (Data.Display_Object_Dir);\n       --  Path of the object directory of the main project\n \n       Source_Id : Other_Source_Id;\n@@ -3472,7 +3517,7 @@ package body Makegpr is\n \n       procedure Link_Foreign\n         (Main    : String;\n-         Main_Id : Name_Id;\n+         Main_Id : File_Name_Type;\n          Source  : Other_Source);\n       --  Link a non-Ada main, when there is no Ada code\n \n@@ -3506,19 +3551,15 @@ package body Makegpr is\n \n             if Data.Other_Sources_Present then\n                declare\n-                  Archive_Path : constant String :=\n-                                   Get_Name_String\n-                                     (Prj_Data.Object_Directory) &\n-                  Directory_Separator &\n-                  \"lib\" &\n-                  Get_Name_String (Prj_Data.Name) &\n-                    '.' & Archive_Ext;\n+                  Archive_Path : constant String := Get_Name_String\n+                    (Prj_Data.Display_Object_Dir) & Directory_Separator\n+                    & \"lib\" & Get_Name_String (Prj_Data.Display_Name)\n+                    & '.' & Archive_Ext;\n                   Archive_TS   : Time_Stamp_Type;\n                begin\n                   Name_Len := 0;\n-                  Add_Str_To_Name_Buffer\n-                    (Archive_Path);\n-                  Archive_TS := File_Stamp (Name_Find);\n+                  Add_Str_To_Name_Buffer (Archive_Path);\n+                  Archive_TS := File_Stamp (File_Name_Type'(Name_Find));\n \n                   --  If the archive is later than the\n                   --  executable, we need to relink.\n@@ -3561,7 +3602,7 @@ package body Makegpr is\n \n       procedure Link_Foreign\n         (Main    : String;\n-         Main_Id : Name_Id;\n+         Main_Id : File_Name_Type;\n          Source  : Other_Source)\n       is\n          Executable_Name : constant String :=\n@@ -3576,9 +3617,8 @@ package body Makegpr is\n \n          Executable_Path : constant String :=\n                              Get_Name_String\n-                               (Data.Exec_Directory) &\n-                                Directory_Separator &\n-                                Executable_Name;\n+                               (Data.Display_Exec_Dir) &\n+                                Directory_Separator & Executable_Name;\n          --  Path name of the executable\n \n          Exec_Time_Stamp : Time_Stamp_Type;\n@@ -3594,7 +3634,7 @@ package body Makegpr is\n \n             Name_Len := 0;\n             Add_Str_To_Name_Buffer (Executable_Path);\n-            Exec_Time_Stamp := File_Stamp (Name_Find);\n+            Exec_Time_Stamp := File_Stamp (File_Name_Type'(Name_Find));\n \n             if Verbose_Mode then\n                Write_Str  (\"   Checking executable \");\n@@ -3635,7 +3675,7 @@ package body Makegpr is\n \n             Add_Argument (Dash_o, True);\n             Add_Argument\n-              (Get_Name_String (Data.Exec_Directory) &\n+              (Get_Name_String (Data.Display_Exec_Dir) &\n                Directory_Separator &\n                Get_Name_String\n                  (Executable_Of\n@@ -3680,7 +3720,7 @@ package body Makegpr is\n             --  Add the linking options specified on the\n             --  command line.\n \n-            for Arg in 1 ..  Linker_Options.Last loop\n+            for Arg in 1 .. Linker_Options.Last loop\n                Add_Argument (Linker_Options.Table (Arg), True);\n             end loop;\n \n@@ -3802,7 +3842,7 @@ package body Makegpr is\n             loop\n                declare\n                   Main    : constant String := Mains.Next_Main;\n-                  Main_Id : Name_Id;\n+                  Main_Id : File_Name_Type;\n \n                begin\n                   exit when Main'Length = 0;\n@@ -3950,7 +3990,7 @@ package body Makegpr is\n             loop\n                declare\n                   Main    : constant String := Mains.Next_Main;\n-                  Main_Id : Name_Id;\n+                  Main_Id : File_Name_Type;\n \n                begin\n                   exit when Main'Length = 0;\n@@ -3999,7 +4039,7 @@ package body Makegpr is\n \n                   declare\n                      Main    : constant String := Mains.Next_Main;\n-                     Main_Id : Name_Id;\n+                     Main_Id : File_Name_Type;\n                   begin\n                      Name_Len := 0;\n                      Add_Str_To_Name_Buffer (Main);\n@@ -4153,7 +4193,15 @@ package body Makegpr is\n       --  Switches start with '-'\n \n       elsif Arg (1) = '-' then\n-         if Arg = \"-c\" then\n+         if Arg'Length > 3 and then Arg (1 .. 3) = \"-aP\" then\n+            Add_Search_Project_Directory (Arg (4 .. Arg'Last));\n+\n+            --  Record the switch, so that it is passed to gnatmake, if\n+            --  gnatmake is called.\n+\n+            Saved_Switches.Append (new String'(Arg));\n+\n+         elsif Arg = \"-c\" then\n             Compile_Only := True;\n \n             --  Make sure that when a main is specified and switch -c is used,\n@@ -4227,11 +4275,10 @@ package body Makegpr is\n          then\n             --  Is_External_Assignment has side effects when it returns True\n \n-            --  Record the -X switch, so that they can be passed to gnatmake,\n+            --  Record the -X switch, so that it will be passed to gnatmake,\n             --  if gnatmake is called.\n \n-            X_Switches.Increment_Last;\n-            X_Switches.Table (X_Switches.Last) := new String'(Arg);\n+            Saved_Switches.Append (new String'(Arg));\n \n          else\n             Osint.Fail (\"illegal option \"\"\", Arg, \"\"\"\");\n@@ -4296,6 +4343,11 @@ package body Makegpr is\n          Write_Str (\"gprmake switches:\");\n          Write_Eol;\n \n+         --  Line for -aP\n+\n+         Write_Str (\"  -aPdir   Add directory dir to project search path\");\n+         Write_Eol;\n+\n          --  Line for -c\n \n          Write_Str (\"  -c       Compile only\");"}]}