{"sha": "5e9295fa05762dd503c5310b0b28e3f352f876ae", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWU5Mjk1ZmEwNTc2MmRkNTAzYzUzMTBiMGIyOGUzZjM1MmY4NzZhZQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@libertysurf.fr", "date": "2004-01-30T14:16:43Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2004-01-30T14:16:43Z"}, "message": "re PR c/12818 (-fwritable strings triggers bad code generation)\n\n\tPR c/12818\n\t* varasm.c (const_hash_1) <STRING_CST>: Use the\n\taddress to compute the hash value if flag_writable_strings.\n\t(compare_constant) <STRING_CST>: Compare the addresses\n\tif flag_writable_strings.\n\t(build_constant_desc): Do not copy the expression for a\n\tSTRING_CST if flag_writable_strings.\n\nFrom-SVN: r76958", "tree": {"sha": "2f8ffaed307795a09c0dc5b8efae1560a53c708c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2f8ffaed307795a09c0dc5b8efae1560a53c708c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5e9295fa05762dd503c5310b0b28e3f352f876ae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e9295fa05762dd503c5310b0b28e3f352f876ae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5e9295fa05762dd503c5310b0b28e3f352f876ae", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e9295fa05762dd503c5310b0b28e3f352f876ae/comments", "author": {"login": "ebotcazou", "id": 48091907, "node_id": "MDQ6VXNlcjQ4MDkxOTA3", "avatar_url": "https://avatars.githubusercontent.com/u/48091907?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebotcazou", "html_url": "https://github.com/ebotcazou", "followers_url": "https://api.github.com/users/ebotcazou/followers", "following_url": "https://api.github.com/users/ebotcazou/following{/other_user}", "gists_url": "https://api.github.com/users/ebotcazou/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebotcazou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebotcazou/subscriptions", "organizations_url": "https://api.github.com/users/ebotcazou/orgs", "repos_url": "https://api.github.com/users/ebotcazou/repos", "events_url": "https://api.github.com/users/ebotcazou/events{/privacy}", "received_events_url": "https://api.github.com/users/ebotcazou/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7dcc98e25c7da0f7eeef93d77d0ead2e5814b019", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7dcc98e25c7da0f7eeef93d77d0ead2e5814b019", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7dcc98e25c7da0f7eeef93d77d0ead2e5814b019"}], "stats": {"total": 55, "additions": 49, "deletions": 6}, "files": [{"sha": "834142a7f64b8ab037a47be459b82fcf5b3b51ac", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e9295fa05762dd503c5310b0b28e3f352f876ae/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e9295fa05762dd503c5310b0b28e3f352f876ae/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5e9295fa05762dd503c5310b0b28e3f352f876ae", "patch": "@@ -1,3 +1,13 @@\n+2004-01-30  Eric Botcazou  <ebotcazou@libertysurf.fr>\n+\n+\tPR c/12818\n+\t* varasm.c (const_hash_1) <STRING_CST>: Use the\n+\taddress to compute the hash value if flag_writable_strings.\n+\t(compare_constant) <STRING_CST>: Compare the addresses\n+\tif flag_writable_strings.\n+\t(build_constant_desc): Do not copy the expression for a\n+\tSTRING_CST if flag_writable_strings.\n+\n 2004-01-30  Jan Hubicka  <jh@suse.cz>\n \n \t* alloc-pool.c: Include hashtab.h"}, {"sha": "4f95129b9e99fbce0b716ef0b00660dc48246759", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e9295fa05762dd503c5310b0b28e3f352f876ae/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e9295fa05762dd503c5310b0b28e3f352f876ae/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5e9295fa05762dd503c5310b0b28e3f352f876ae", "patch": "@@ -1,3 +1,7 @@\n+2004-01-30  Eric Botcazou  <ebotcazou@libertysurf.fr>\n+\n+\t* gcc.dg/fwritable-strings-1.c: New test.\n+\n 2004-01-30  Eric Botcazou  <ebotcazou@libertysurf.fr>\n \n \t* gcc.c-torture/compile/20040130-1.c: New test."}, {"sha": "e519231c36874745ed114f2091eb99f510a658b6", "filename": "gcc/testsuite/gcc.dg/fwritable-strings-1.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e9295fa05762dd503c5310b0b28e3f352f876ae/gcc%2Ftestsuite%2Fgcc.dg%2Ffwritable-strings-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e9295fa05762dd503c5310b0b28e3f352f876ae/gcc%2Ftestsuite%2Fgcc.dg%2Ffwritable-strings-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ffwritable-strings-1.c?ref=5e9295fa05762dd503c5310b0b28e3f352f876ae", "patch": "@@ -0,0 +1,17 @@\n+/* PR c/12818 */\n+/* Origin: <fnf@ninemoons.com> */\n+\n+/* { dg-do run } */\n+/* { dg-options \"-fwritable-strings\" } */\n+\n+extern void abort(void);\n+\n+char *names[] = {\"alice\", \"bob\", \"john\"};\n+\n+int main (void)\n+{\n+  if (names[1][0] != 'b')\n+    abort();\n+\n+  return 0;\n+}"}, {"sha": "7af71bf196f37e80b9379d4512b9f4bb229e503f", "filename": "gcc/varasm.c", "status": "modified", "additions": 18, "deletions": 6, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e9295fa05762dd503c5310b0b28e3f352f876ae/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e9295fa05762dd503c5310b0b28e3f352f876ae/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=5e9295fa05762dd503c5310b0b28e3f352f876ae", "patch": "@@ -2057,7 +2057,7 @@ struct rtx_const GTY(())\n \n /* Uniquize all constants that appear in memory.\n    Each constant in memory thus far output is recorded\n-   in `const_hash_table'.  */\n+   in `const_desc_table'.  */\n \n struct constant_descriptor_tree GTY(())\n {\n@@ -2104,9 +2104,18 @@ const_hash_1 (const tree exp)\n       return real_hash (TREE_REAL_CST_PTR (exp));\n \n     case STRING_CST:\n-      p = TREE_STRING_POINTER (exp);\n-      len = TREE_STRING_LENGTH (exp);\n+      if (flag_writable_strings)\n+\t{\n+\t  p = (char *) &exp;\n+\t  len = sizeof exp;\n+\t}\n+      else\n+\t{\n+\t  p = TREE_STRING_POINTER (exp);\n+\t  len = TREE_STRING_LENGTH (exp);\n+\t}\n       break;\n+\n     case COMPLEX_CST:\n       return (const_hash_1 (TREE_REALPART (exp)) * 5\n \t      + const_hash_1 (TREE_IMAGPART (exp)));\n@@ -2221,7 +2230,7 @@ compare_constant (const tree t1, const tree t2)\n \n     case STRING_CST:\n       if (flag_writable_strings)\n-\treturn 0;\n+\treturn t1 == t2;\n \n       if (TYPE_MODE (TREE_TYPE (t1)) != TYPE_MODE (TREE_TYPE (t2)))\n \treturn 0;\n@@ -2425,7 +2434,10 @@ build_constant_desc (tree exp)\n   struct constant_descriptor_tree *desc;\n \n   desc = ggc_alloc (sizeof (*desc));\n-  desc->value = copy_constant (exp);\n+  if (flag_writable_strings && TREE_CODE (exp) == STRING_CST)\n+    desc->value = exp;\n+  else\n+    desc->value = copy_constant (exp);\n \n   /* Create a string containing the label name, in LABEL.  */\n   labelno = const_labelno++;\n@@ -2466,7 +2478,7 @@ build_constant_desc (tree exp)\n    If DEFER is nonzero, this constant can be deferred and output only\n    if referenced in the function after all optimizations.\n \n-   The const_hash_table records which constants already have label strings.  */\n+   `const_desc_table' records which constants already have label strings.  */\n \n rtx\n output_constant_def (tree exp, int defer)"}]}