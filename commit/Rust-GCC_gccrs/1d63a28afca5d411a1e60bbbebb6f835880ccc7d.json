{"sha": "1d63a28afca5d411a1e60bbbebb6f835880ccc7d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWQ2M2EyOGFmY2E1ZDQxMWExZTYwYmJiZWJiNmY4MzU4ODBjY2M3ZA==", "commit": {"author": {"name": "Neil Booth", "email": "neil@daikokuya.co.uk", "date": "2002-06-28T20:27:14Z"}, "committer": {"name": "Neil Booth", "email": "neil@gcc.gnu.org", "date": "2002-06-28T20:27:14Z"}, "message": "cpplib.c (_cpp_handle_directive): Move #define-specific code to the #define handler...\n\n\t* cpplib.c (_cpp_handle_directive): Move #define-specific\n\tcode to the #define handler...\n\t(do_define): ...here.\n\t(lex_macro_node): No longer a need to check for comments here.\n\nFrom-SVN: r55077", "tree": {"sha": "82a8c358372ac4c99b35ac4621f03bce02edd5b1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/82a8c358372ac4c99b35ac4621f03bce02edd5b1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1d63a28afca5d411a1e60bbbebb6f835880ccc7d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d63a28afca5d411a1e60bbbebb6f835880ccc7d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1d63a28afca5d411a1e60bbbebb6f835880ccc7d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d63a28afca5d411a1e60bbbebb6f835880ccc7d/comments", "author": {"login": "neilb-xx", "id": 160762, "node_id": "MDQ6VXNlcjE2MDc2Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/160762?v=4", "gravatar_id": "", "url": "https://api.github.com/users/neilb-xx", "html_url": "https://github.com/neilb-xx", "followers_url": "https://api.github.com/users/neilb-xx/followers", "following_url": "https://api.github.com/users/neilb-xx/following{/other_user}", "gists_url": "https://api.github.com/users/neilb-xx/gists{/gist_id}", "starred_url": "https://api.github.com/users/neilb-xx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/neilb-xx/subscriptions", "organizations_url": "https://api.github.com/users/neilb-xx/orgs", "repos_url": "https://api.github.com/users/neilb-xx/repos", "events_url": "https://api.github.com/users/neilb-xx/events{/privacy}", "received_events_url": "https://api.github.com/users/neilb-xx/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2cc21497379c4b3fc3884c7e224c5c5a00d61c28", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2cc21497379c4b3fc3884c7e224c5c5a00d61c28", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2cc21497379c4b3fc3884c7e224c5c5a00d61c28"}], "stats": {"total": 34, "additions": 14, "deletions": 20}, "files": [{"sha": "0f38b0f8c5a687523d7220e38675555d007a4a01", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d63a28afca5d411a1e60bbbebb6f835880ccc7d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d63a28afca5d411a1e60bbbebb6f835880ccc7d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1d63a28afca5d411a1e60bbbebb6f835880ccc7d", "patch": "@@ -1,3 +1,10 @@\n+2002-06-28  Neil Booth  <neil@daikokuya.co.uk>\n+\n+\t* cpplib.c (_cpp_handle_directive): Move #define-specific\n+\tcode to the #define handler...\n+\t(do_define): ...here.\n+\t(lex_macro_node): No longer a need to check for comments here.\n+\n 2002-06-28  Stephane Carrez  <stcarrez@nerim.fr>\n \n \t* config/m68hc11/m68hc11.c (autoinc_mode): New function."}, {"sha": "fe6816cabde2f44a4cf043147609013840ccc963", "filename": "gcc/cpplib.c", "status": "modified", "additions": 7, "deletions": 20, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d63a28afca5d411a1e60bbbebb6f835880ccc7d/gcc%2Fcpplib.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d63a28afca5d411a1e60bbbebb6f835880ccc7d/gcc%2Fcpplib.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcpplib.c?ref=1d63a28afca5d411a1e60bbbebb6f835880ccc7d", "patch": "@@ -443,16 +443,7 @@ _cpp_handle_directive (pfile, indented)\n     prepare_directive_trad (pfile);\n \n   if (dir)\n-    {\n-      /* If we are processing a `#define' directive and we have been\n-\t requested to expand comments into macros, then re-enable\n-\t saving of comments.  */\n-      if (dir == &dtable[T_DEFINE])\n-\tpfile->state.save_comments =\n-\t  ! CPP_OPTION (pfile, discard_comments_in_macro_exp);\n-\n-      (*pfile->directive->handler) (pfile);\n-    }\n+    (*pfile->directive->handler) (pfile);\n   else if (skip == 0)\n     _cpp_backup_tokens (pfile, 1);\n \n@@ -502,16 +493,7 @@ lex_macro_node (pfile)\n      In C++, it may not be any of the \"named operators\" either,\n      per C++98 [lex.digraph], [lex.key].\n      Finally, the identifier may not have been poisoned.  (In that case\n-     the lexer has issued the error message for us.)\n-\n-     Note that if we're copying comments into macro expansions, we\n-     could encounter comment tokens here, so eat them all up first.  */\n-\n-  if (! CPP_OPTION (pfile, discard_comments_in_macro_exp))\n-    {\n-      while (token->type == CPP_COMMENT)\n-\ttoken = _cpp_lex_token (pfile);\n-    }\n+     the lexer has issued the error message for us.)  */\n \n   if (token->type == CPP_NAME)\n     {\n@@ -545,6 +527,11 @@ do_define (pfile)\n \n   if (node)\n     {\n+      /* If we have been requested to expand comments into macros,\n+\t then re-enable saving of comments.  */\n+      pfile->state.save_comments =\n+\t! CPP_OPTION (pfile, discard_comments_in_macro_exp);\n+\n       if (_cpp_create_definition (pfile, node))\n \tif (pfile->cb.define)\n \t  (*pfile->cb.define) (pfile, pfile->directive_line, node);"}]}