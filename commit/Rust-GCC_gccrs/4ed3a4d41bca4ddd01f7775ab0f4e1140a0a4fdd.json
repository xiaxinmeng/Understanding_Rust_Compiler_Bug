{"sha": "4ed3a4d41bca4ddd01f7775ab0f4e1140a0a4fdd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGVkM2E0ZDQxYmNhNGRkZDAxZjc3NzVhYjBmNGUxMTQwYTBhNGZkZA==", "commit": {"author": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2012-10-06T13:04:35Z"}, "committer": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2012-10-06T13:04:35Z"}, "message": "re PR libfortran/54736 (GFORTRAN_CONVERT_UNIT causes malloc error on several platforms)\n\n2012-10-06  Thomas K\u00f6nig  <tkoenig@gcc.gnu.org>\n\n\tPR libfortran/54736\n\t* runtime/environ.c (search_unit):  Correct logic\n\tfor binary search.\n\t(mark_single):  Fix index errors.\n\nFrom-SVN: r192158", "tree": {"sha": "6ef50bac9c6995525a6e109ca1f1b71824cf4a6e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6ef50bac9c6995525a6e109ca1f1b71824cf4a6e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4ed3a4d41bca4ddd01f7775ab0f4e1140a0a4fdd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ed3a4d41bca4ddd01f7775ab0f4e1140a0a4fdd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4ed3a4d41bca4ddd01f7775ab0f4e1140a0a4fdd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ed3a4d41bca4ddd01f7775ab0f4e1140a0a4fdd/comments", "author": null, "committer": null, "parents": [{"sha": "e9355cc32ee9d5967f9c359d42c1ae505e5266b6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9355cc32ee9d5967f9c359d42c1ae505e5266b6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e9355cc32ee9d5967f9c359d42c1ae505e5266b6"}], "stats": {"total": 49, "additions": 35, "deletions": 14}, "files": [{"sha": "de915f8a78e9a28648aa6ee6274827dea946ecad", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ed3a4d41bca4ddd01f7775ab0f4e1140a0a4fdd/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ed3a4d41bca4ddd01f7775ab0f4e1140a0a4fdd/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=4ed3a4d41bca4ddd01f7775ab0f4e1140a0a4fdd", "patch": "@@ -1,3 +1,10 @@\n+2012-10-06  Thomas K\u00f6nig  <tkoenig@gcc.gnu.org>\n+\n+\tPR libfortran/54736\n+\t* runtime/environ.c (search_unit):  Correct logic\n+\tfor binary search.\n+\t(mark_single):  Fix index errors.\n+\n 2012-09-29  Thomas K\u00f6nig  <tkoenig@gcc.gnu.org>\n \n \tPR fortran/52724"}, {"sha": "1f73397703d34112979fc43eba4a6ce6b451e16a", "filename": "libgfortran/runtime/environ.c", "status": "modified", "additions": 28, "deletions": 14, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ed3a4d41bca4ddd01f7775ab0f4e1140a0a4fdd/libgfortran%2Fruntime%2Fenviron.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ed3a4d41bca4ddd01f7775ab0f4e1140a0a4fdd/libgfortran%2Fruntime%2Fenviron.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fruntime%2Fenviron.c?ref=4ed3a4d41bca4ddd01f7775ab0f4e1140a0a4fdd", "patch": "@@ -459,21 +459,35 @@ search_unit (int unit, int *ip)\n {\n   int low, high, mid;\n \n-  low = -1;\n-  high = n_elist;\n-  while (high - low > 1)\n+  if (n_elist == 0)\n+    {\n+      *ip = 0;\n+      return 0;\n+    }\n+\n+  low = 0;\n+  high = n_elist - 1;\n+\n+  do \n     {\n       mid = (low + high) / 2;\n-      if (unit <= elist[mid].unit)\n-\thigh = mid;\n+      if (unit == elist[mid].unit)\n+\t{\n+\t  *ip = mid;\n+\t  return 1;\n+\t}\n+      else if (unit > elist[mid].unit)\n+\tlow = mid + 1;\n       else\n-\tlow = mid;\n-    }\n-  *ip = high;\n-  if (elist[high].unit == unit)\n-    return 1;\n+\thigh = mid - 1;\n+    } while (low <= high);\n+\n+  if (unit > elist[mid].unit)\n+    *ip = mid + 1;\n   else\n-    return 0;\n+    *ip = mid;\n+\n+  return 0;\n }\n \n /* This matches a keyword.  If it is found, return the token supplied,\n@@ -588,13 +602,13 @@ mark_single (int unit)\n     }\n   if (search_unit (unit, &i))\n     {\n-      elist[unit].conv = endian;\n+      elist[i].conv = endian;\n     }\n   else\n     {\n-      for (j=n_elist; j>=i; j--)\n+      for (j=n_elist-1; j>=i; j--)\n \telist[j+1] = elist[j];\n-    \n+\n       n_elist += 1;\n       elist[i].unit = unit;\n       elist[i].conv = endian;"}]}