{"sha": "1025cb6c0d6cd25f32e301c764ffa83d208e1961", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTAyNWNiNmMwZDZjZDI1ZjMyZTMwMWM3NjRmZmE4M2QyMDhlMTk2MQ==", "commit": {"author": {"name": "Tony Wang", "email": "tony.wang@arm.com", "date": "2014-11-27T13:38:51Z"}, "committer": {"name": "Thomas Preud'homme", "email": "thopre01@gcc.gnu.org", "date": "2014-11-27T13:38:51Z"}, "message": "lib1funcs.S (FUNC_START): Add conditional section redefine for macro L_arm_muldivsf3 and L_arm_muldivdf3.\n\n2014-11-27  Tony Wang  <tony.wang@arm.com>\n\n    libgcc/\n    * config/arm/lib1funcs.S (FUNC_START): Add conditional section\n    redefine for macro L_arm_muldivsf3 and L_arm_muldivdf3.\n    (SYM_END, ARM_SYM_START): Add macros used to expose function Symbols.\n\nFrom-SVN: r218124", "tree": {"sha": "2cbd570dc845cbf96ebe1ce7fae27a78dae759cc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2cbd570dc845cbf96ebe1ce7fae27a78dae759cc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1025cb6c0d6cd25f32e301c764ffa83d208e1961", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1025cb6c0d6cd25f32e301c764ffa83d208e1961", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1025cb6c0d6cd25f32e301c764ffa83d208e1961", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1025cb6c0d6cd25f32e301c764ffa83d208e1961/comments", "author": null, "committer": null, "parents": [{"sha": "4784470a7e8cd54951322fd503985f7c11c1cc1c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4784470a7e8cd54951322fd503985f7c11c1cc1c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4784470a7e8cd54951322fd503985f7c11c1cc1c"}], "stats": {"total": 32, "additions": 28, "deletions": 4}, "files": [{"sha": "ea3fdc87845fcb0c7fc4f0f28a20abe074477497", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1025cb6c0d6cd25f32e301c764ffa83d208e1961/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1025cb6c0d6cd25f32e301c764ffa83d208e1961/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=1025cb6c0d6cd25f32e301c764ffa83d208e1961", "patch": "@@ -1,3 +1,9 @@\n+2014-11-27  Tony Wang  <tony.wang@arm.com>\n+\n+\t* config/arm/lib1funcs.S (FUNC_START): Add conditional section\n+\tredefine for macro L_arm_muldivsf3 and L_arm_muldivdf3.\n+\t(SYM_END, ARM_SYM_START): Add macros used to expose function Symbols.\n+\n 2014-11-25  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \t* crtstuff.c (__do_glbal_ctors_1): Add missing semicolon."}, {"sha": "0f871117d0f5b1a6f49fbe36549ee10a9daae73d", "filename": "libgcc/config/arm/lib1funcs.S", "status": "modified", "additions": 22, "deletions": 4, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1025cb6c0d6cd25f32e301c764ffa83d208e1961/libgcc%2Fconfig%2Farm%2Flib1funcs.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1025cb6c0d6cd25f32e301c764ffa83d208e1961/libgcc%2Fconfig%2Farm%2Flib1funcs.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Farm%2Flib1funcs.S?ref=1025cb6c0d6cd25f32e301c764ffa83d208e1961", "patch": "@@ -418,8 +418,12 @@ SYM (\\name):\n #define THUMB_SYNTAX\n #endif\n \n-.macro FUNC_START name\n+.macro FUNC_START name sp_section=\n+  .ifc \\sp_section, function_section\n+\t.section\t.text.__\\name,\"ax\",%progbits\n+  .else\n \t.text\n+  .endif\n \t.globl SYM (__\\name)\n \tTYPE (__\\name)\n \t.align 0\n@@ -429,14 +433,24 @@ SYM (\\name):\n SYM (__\\name):\n .endm\n \n+.macro ARM_SYM_START name\n+       TYPE (\\name)\n+       .align 0\n+SYM (\\name):\n+.endm\n+\n+.macro SYM_END name\n+       SIZE (\\name)\n+.endm\n+\n /* Special function that will always be coded in ARM assembly, even if\n    in Thumb-only compilation.  */\n \n #if defined(__thumb2__)\n \n /* For Thumb-2 we build everything in thumb mode.  */\n-.macro ARM_FUNC_START name\n-       FUNC_START \\name\n+.macro ARM_FUNC_START name sp_section=\n+       FUNC_START \\name \\sp_section\n        .syntax unified\n .endm\n #define EQUIV .thumb_set\n@@ -467,8 +481,12 @@ _L__\\name:\n #ifdef __ARM_ARCH_6M__\n #define EQUIV .thumb_set\n #else\n-.macro\tARM_FUNC_START name\n+.macro\tARM_FUNC_START name sp_section=\n+  .ifc \\sp_section, function_section\n+\t.section\t.text.__\\name,\"ax\",%progbits\n+  .else\n \t.text\n+  .endif\n \t.globl SYM (__\\name)\n \tTYPE (__\\name)\n \t.align 0"}]}