{"sha": "a1a3812dd30da3f270a71c629ce1c7c1927b48dc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTFhMzgxMmRkMzBkYTNmMjcwYTcxYzYyOWNlMWM3YzE5MjdiNDhkYw==", "commit": {"author": {"name": "Sandra Loosemore", "email": "sandra@codesourcery.com", "date": "2016-01-21T00:59:54Z"}, "committer": {"name": "Sandra Loosemore", "email": "sandra@gcc.gnu.org", "date": "2016-01-21T00:59:54Z"}, "message": "common.opt (feliminate-dwarf2-dups): Replace references to \"DWARF 2\" with just \"DWARF\".\n\n2016-01-20  Sandra Loosemore <sandra@codesourcery.com>\n\n\tgcc/\n\t* common.opt (feliminate-dwarf2-dups): Replace references to\n\t\"DWARF 2\" with just \"DWARF\".\n\t* config/ia64/ia64.opt (mdwarf2-asm): Likewise.\n\t* doc/extend.texi: Likewise.\n\t* doc/cpp.texi: Likewise.\n\t* doc/invoke.texi: Likewise.\n\t(Option Summary): Add -gdwarf to list of Debugging Options.\n\t(Debugging Options): Document -gdwarf.\n\t* doc/contrib.texi: Spell \"DWARF\" like that.\n\nFrom-SVN: r232647", "tree": {"sha": "3c69334a248a92ed4f6d87a1f1bc24f75134bc0f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3c69334a248a92ed4f6d87a1f1bc24f75134bc0f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a1a3812dd30da3f270a71c629ce1c7c1927b48dc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1a3812dd30da3f270a71c629ce1c7c1927b48dc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a1a3812dd30da3f270a71c629ce1c7c1927b48dc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1a3812dd30da3f270a71c629ce1c7c1927b48dc/comments", "author": {"login": "SandraLoosemore", "id": 104087111, "node_id": "U_kgDOBjQ-Rw", "avatar_url": "https://avatars.githubusercontent.com/u/104087111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SandraLoosemore", "html_url": "https://github.com/SandraLoosemore", "followers_url": "https://api.github.com/users/SandraLoosemore/followers", "following_url": "https://api.github.com/users/SandraLoosemore/following{/other_user}", "gists_url": "https://api.github.com/users/SandraLoosemore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SandraLoosemore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SandraLoosemore/subscriptions", "organizations_url": "https://api.github.com/users/SandraLoosemore/orgs", "repos_url": "https://api.github.com/users/SandraLoosemore/repos", "events_url": "https://api.github.com/users/SandraLoosemore/events{/privacy}", "received_events_url": "https://api.github.com/users/SandraLoosemore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "cc60e898a9b2a408a0ec8ba301e2f6fe6b9a5e12", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc60e898a9b2a408a0ec8ba301e2f6fe6b9a5e12", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cc60e898a9b2a408a0ec8ba301e2f6fe6b9a5e12"}], "stats": {"total": 74, "additions": 45, "deletions": 29}, "files": [{"sha": "724681d953062bac61d1c60e08018c35725a9890", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1a3812dd30da3f270a71c629ce1c7c1927b48dc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1a3812dd30da3f270a71c629ce1c7c1927b48dc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a1a3812dd30da3f270a71c629ce1c7c1927b48dc", "patch": "@@ -1,3 +1,15 @@\n+2016-01-20  Sandra Loosemore <sandra@codesourcery.com>\n+\n+\t* common.opt (feliminate-dwarf2-dups): Replace references to\n+\t\"DWARF 2\" with just \"DWARF\".\n+\t* config/ia64/ia64.opt (mdwarf2-asm): Likewise.\n+\t* doc/extend.texi: Likewise.\n+\t* doc/cpp.texi: Likewise.\n+\t* doc/invoke.texi: Likewise.\n+\t(Option Summary): Add -gdwarf to list of Debugging Options.\n+\t(Debugging Options): Document -gdwarf.\n+\t* doc/contrib.texi: Spell \"DWARF\" like that.\n+\n 2016-01-21  Jakub Jelinek  <jakub@redhat.com>\n \n \t* omp-low.c (expand_omp_target): Avoid -Wmaybe-uninitialized"}, {"sha": "0f2587aa4429924c3490f37050bc4cb467b11812", "filename": "gcc/common.opt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1a3812dd30da3f270a71c629ce1c7c1927b48dc/gcc%2Fcommon.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1a3812dd30da3f270a71c629ce1c7c1927b48dc/gcc%2Fcommon.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon.opt?ref=a1a3812dd30da3f270a71c629ce1c7c1927b48dc", "patch": "@@ -1234,7 +1234,7 @@ Perform early inlining.\n \n feliminate-dwarf2-dups\n Common Report Var(flag_eliminate_dwarf2_dups)\n-Perform DWARF2 duplicate elimination.\n+Perform DWARF duplicate elimination.\n \n fipa-sra\n Common Report Var(flag_ipa_sra) Init(0) Optimization"}, {"sha": "893184b5c45ff280ae27f24b3bb50a9cb231401c", "filename": "gcc/config/ia64/ia64.opt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1a3812dd30da3f270a71c629ce1c7c1927b48dc/gcc%2Fconfig%2Fia64%2Fia64.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1a3812dd30da3f270a71c629ce1c7c1927b48dc/gcc%2Fconfig%2Fia64%2Fia64.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64.opt?ref=a1a3812dd30da3f270a71c629ce1c7c1927b48dc", "patch": "@@ -103,7 +103,7 @@ Do not inline square root.\n \n mdwarf2-asm\n Target Report Mask(DWARF2_ASM)\n-Enable Dwarf 2 line debug info via GNU as.\n+Enable DWARF line debug info via GNU as.\n \n mearly-stop-bits\n Target Report Mask(EARLY_STOP_BITS)"}, {"sha": "6d9ca5833fe38e498ca3f019ce5b7b00b0d50bfe", "filename": "gcc/doc/contrib.texi", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1a3812dd30da3f270a71c629ce1c7c1927b48dc/gcc%2Fdoc%2Fcontrib.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1a3812dd30da3f270a71c629ce1c7c1927b48dc/gcc%2Fdoc%2Fcontrib.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fcontrib.texi?ref=a1a3812dd30da3f270a71c629ce1c7c1927b48dc", "patch": "@@ -57,7 +57,7 @@ Wolfgang Bangerth for processing tons of bug reports.\n Jon Beniston for his Microsoft Windows port of Java and port to Lattice Mico32.\n \n @item\n-Daniel Berlin for better DWARF2 support, faster/better optimizations,\n+Daniel Berlin for better DWARF 2 support, faster/better optimizations,\n improved alias analysis, plus migrating GCC to Bugzilla.\n \n @item\n@@ -350,7 +350,7 @@ and for release management.\n \n @item\n Ron Guilmette implemented the @command{protoize} and @command{unprotoize}\n-tools, the support for Dwarf symbolic debugging information, and much of\n+tools, the support for DWARF 1 symbolic debugging information, and much of\n the support for System V Release 4.  He has also worked heavily on the\n Intel 386 and 860 support.\n "}, {"sha": "72f4e7c6b26f701b25d371f3e2dabb0eb08549bd", "filename": "gcc/doc/cpp.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1a3812dd30da3f270a71c629ce1c7c1927b48dc/gcc%2Fdoc%2Fcpp.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1a3812dd30da3f270a71c629ce1c7c1927b48dc/gcc%2Fdoc%2Fcpp.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fcpp.texi?ref=a1a3812dd30da3f270a71c629ce1c7c1927b48dc", "patch": "@@ -2382,7 +2382,7 @@ These macros are defined when the target processor supports atomic compare\n and swap operations on operands 1, 2, 4, 8 or 16 bytes in length, respectively.\n \n @item __GCC_HAVE_DWARF2_CFI_ASM\n-This macro is defined when the compiler is emitting Dwarf2 CFI directives\n+This macro is defined when the compiler is emitting DWARF CFI directives\n to the assembler.  When this is defined, it is possible to emit those same\n directives in inline assembly.\n "}, {"sha": "c78c59f0b558d32c43a3732c74f7dcb1b7a44ffe", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1a3812dd30da3f270a71c629ce1c7c1927b48dc/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1a3812dd30da3f270a71c629ce1c7c1927b48dc/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=a1a3812dd30da3f270a71c629ce1c7c1927b48dc", "patch": "@@ -916,8 +916,8 @@ provided as built-in functions by GCC@.\n \n GCC can allocate complex automatic variables in a noncontiguous\n fashion; it's even possible for the real part to be in a register while\n-the imaginary part is on the stack (or vice versa).  Only the DWARF 2\n-debug info format can represent this, so use of DWARF 2 is recommended.\n+the imaginary part is on the stack (or vice versa).  Only the DWARF\n+debug info format can represent this, so use of DWARF is recommended.\n If you are using the stabs debug info format, GCC describes a noncontiguous\n complex variable as if it were two separate variables of noncomplex type.\n If the variable's actual name is @code{foo}, the two fictitious\n@@ -1075,7 +1075,7 @@ the technical report.\n @end itemize\n \n Types @code{_Decimal32}, @code{_Decimal64}, and @code{_Decimal128}\n-are supported by the DWARF 2 debug information format.\n+are supported by the DWARF debug information format.\n \n @node Hex Floats\n @section Hex Floats\n@@ -1249,7 +1249,7 @@ is incomplete:\n Pragmas to control overflow and rounding behaviors are not implemented.\n @end itemize\n \n-Fixed-point types are supported by the DWARF 2 debug information format.\n+Fixed-point types are supported by the DWARF debug information format.\n \n @node Named Address Spaces\n @section Named Address Spaces"}, {"sha": "c00746fdab4261fa8a1cf0d97e7be392dfb13dea", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 24, "deletions": 20, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1a3812dd30da3f270a71c629ce1c7c1927b48dc/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1a3812dd30da3f270a71c629ce1c7c1927b48dc/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=a1a3812dd30da3f270a71c629ce1c7c1927b48dc", "patch": "@@ -316,7 +316,7 @@ Objective-C and Objective-C++ Dialects}.\n \n @item Debugging Options\n @xref{Debugging Options,,Options for Debugging Your Program}.\n-@gccoptlist{-g  -g@var{level}  -gcoff  -gdwarf-@var{version} @gol\n+@gccoptlist{-g  -g@var{level}  -gcoff  -gdwarf -gdwarf-@var{version} @gol\n -ggdb  -grecord-gcc-switches  -gno-record-gcc-switches @gol\n -gstabs  -gstabs+  -gstrict-dwarf  -gno-strict-dwarf @gol\n -gvms  -gxcoff  -gxcoff+ -gz@r{[}=@var{type}@r{]} @gol\n@@ -5727,7 +5727,7 @@ information useful for debugging do not run at all, so that\n @item -g\n @opindex g\n Produce debugging information in the operating system's native format\n-(stabs, COFF, XCOFF, or DWARF 2)@.  GDB can work with this debugging\n+(stabs, COFF, XCOFF, or DWARF)@.  GDB can work with this debugging\n information.\n \n On most systems that use stabs format, @option{-g} enables use of extra\n@@ -5741,12 +5741,13 @@ to generate the extra information, use @option{-gstabs+}, @option{-gstabs},\n @item -ggdb\n @opindex ggdb\n Produce debugging information for use by GDB@.  This means to use the\n-most expressive format available (DWARF 2, stabs, or the native format\n+most expressive format available (DWARF, stabs, or the native format\n if neither of those are supported), including GDB extensions if at all\n possible.\n \n-@item -gdwarf-@var{version}\n-@opindex gdwarf-@var{version}\n+@item -gdwarf\n+@itemx -gdwarf-@var{version}\n+@opindex gdwarf\n Produce debugging information in DWARF format (if that is supported).\n The value of @var{version} may be either 2, 3, 4 or 5; the default version\n for most targets is 4.  DWARF Version 5 is only experimental.\n@@ -5757,6 +5758,12 @@ use some non-conflicting DWARF 3 extensions in the unwind tables.\n Version 4 may require GDB 7.0 and @option{-fvar-tracking-assignments}\n for maximum benefit.\n \n+GCC no longer supports DWARF Version 1, which is substantially\n+different than Version 2 and later.  For historical reasons, some\n+other DWARF-related options (including @option{-feliminate-dwarf2-dups} \n+and @option{-fno-dwarf2-cfi-asm}) retain a reference to DWARF Version 2\n+in their names, but apply to all currently-supported versions of DWARF.\n+\n @item -gstabs\n @opindex gstabs\n Produce debugging information in stabs format (if that is supported),\n@@ -5817,11 +5824,8 @@ Level 3 includes extra information, such as all the macro definitions\n present in the program.  Some debuggers support macro expansion when\n you use @option{-g3}.\n \n-@option{-gdwarf-2} does not accept a concatenated debug level, because\n-GCC used to support an option @option{-gdwarf} that meant to generate\n-debug information in version 1 of the DWARF format (which is very\n-different from version 2), and it would have been too confusing.  That\n-debug format is long obsolete, but the option cannot be changed now.\n+@option{-gdwarf} does not accept a concatenated debug level, to avoid\n+confusion with @option{-gdwarf-@var{level}}.\n Instead use an additional @option{-g@var{level}} option to change the\n debug level for DWARF.\n \n@@ -5943,9 +5947,9 @@ when producing object files.\n \n @item -feliminate-dwarf2-dups\n @opindex feliminate-dwarf2-dups\n-Compress DWARF 2 debugging information by eliminating duplicated\n+Compress DWARF debugging information by eliminating duplicated\n information about each symbol.  This option only makes sense when\n-generating DWARF 2 debugging information with @option{-gdwarf-2}.\n+generating DWARF debugging information.\n \n @item -femit-struct-debug-baseonly\n @opindex femit-struct-debug-baseonly\n@@ -5958,7 +5962,7 @@ but at significant potential loss in type information to the debugger.\n See @option{-femit-struct-debug-reduced} for a less aggressive option.\n See @option{-femit-struct-debug-detailed} for more detailed control.\n \n-This option works only with DWARF 2.\n+This option works only with DWARF debug output.\n \n @item -femit-struct-debug-reduced\n @opindex femit-struct-debug-reduced\n@@ -5972,7 +5976,7 @@ with some potential loss in type information to the debugger.\n See @option{-femit-struct-debug-baseonly} for a more aggressive option.\n See @option{-femit-struct-debug-detailed} for more detailed control.\n \n-This option works only with DWARF 2.\n+This option works only with DWARF debug output.\n \n @item -femit-struct-debug-detailed@r{[}=@var{spec-list}@r{]}\n @opindex femit-struct-debug-detailed\n@@ -6020,18 +6024,18 @@ You may need to experiment to determine the best settings for your application.\n \n The default is @option{-femit-struct-debug-detailed=all}.\n \n-This option works only with DWARF 2.\n+This option works only with DWARF debug output.\n \n @item -fno-dwarf2-cfi-asm\n @opindex fdwarf2-cfi-asm\n @opindex fno-dwarf2-cfi-asm\n-Emit DWARF 2 unwind info as compiler generated @code{.eh_frame} section\n+Emit DWARF unwind info as compiler generated @code{.eh_frame} section\n instead of using GAS @code{.cfi_*} directives.\n \n @item -fno-eliminate-unused-debug-types\n @opindex feliminate-unused-debug-types\n @opindex fno-eliminate-unused-debug-types\n-Normally, when producing DWARF 2 output, GCC avoids producing debug symbol \n+Normally, when producing DWARF output, GCC avoids producing debug symbol \n output for types that are nowhere used in the source file being compiled.\n Sometimes it is useful to have GCC emit debugging\n information for all types declared in a compilation\n@@ -11017,7 +11021,7 @@ that needs this handling enables it on your behalf.\n \n @item -fasynchronous-unwind-tables\n @opindex fasynchronous-unwind-tables\n-Generate unwind table in DWARF 2 format, if supported by target machine.  The\n+Generate unwind table in DWARF format, if supported by target machine.  The\n table is exact at each instruction boundary, so it can be used for stack\n unwinding from asynchronous events (such as debugger or garbage collector).\n \n@@ -16427,7 +16431,7 @@ instructions.  The default is to use these instructions.\n @itemx -mdwarf2-asm\n @opindex mno-dwarf2-asm\n @opindex mdwarf2-asm\n-Don't (or do) generate assembler code for the DWARF 2 line number debugging\n+Don't (or do) generate assembler code for the DWARF line number debugging\n info.  This may be useful when not using the GNU assembler.\n \n @item -mearly-stop-bits\n@@ -21020,7 +21024,7 @@ type. This is the default.\n Store (do not store) the address of the caller's frame as backchain pointer\n into the callee's stack frame.\n A backchain may be needed to allow debugging using tools that do not understand\n-DWARF 2 call frame information.\n+DWARF call frame information.\n When @option{-mno-packed-stack} is in effect, the backchain pointer is stored\n at the bottom of the stack frame; when @option{-mpacked-stack} is in effect,\n the backchain is placed into the topmost word of the 96/160 byte register"}]}