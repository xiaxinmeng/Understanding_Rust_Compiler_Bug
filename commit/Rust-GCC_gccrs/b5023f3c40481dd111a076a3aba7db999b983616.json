{"sha": "b5023f3c40481dd111a076a3aba7db999b983616", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjUwMjNmM2M0MDQ4MWRkMTExYTA3NmEzYWJhN2RiOTk5Yjk4MzYxNg==", "commit": {"author": {"name": "Martin Jambor", "email": "mjambor@suse.cz", "date": "2010-05-14T13:08:45Z"}, "committer": {"name": "Martin Jambor", "email": "jamborm@gcc.gnu.org", "date": "2010-05-14T13:08:45Z"}, "message": "cp-lang.c (LANG_HOOKS_FOLD_OBJ_TYPE_REF): Remove both its undef and define.\n\n2010-05-14  Martin Jambor  <mjambor@suse.cz>\n\n\t* cp/cp-lang.c (LANG_HOOKS_FOLD_OBJ_TYPE_REF): Remove both its undef\n\tand define.\n\n\t* langhooks-def.h (LANG_HOOKS_FOLD_OBJ_TYPE_REF): Remove.\n\t(LANG_HOOKS_INITIALIZER): Remove LANG_HOOKS_FOLD_OBJ_TYPE_REF.\n\t* langhooks.h (struct lang_hooks_for_decls): Removed field\n\tfold_obj_type_ref.\n\t* tree.c (free_lang_data): Remove assignment to\n\tlang_hooks.fold_obj_type_ref.\n\t* tree.def (OBJ_TYPE_REF): Update comment.\n\nFrom-SVN: r159393", "tree": {"sha": "d980a00f22dc05460abaad512b74b588626b5dc3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d980a00f22dc05460abaad512b74b588626b5dc3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b5023f3c40481dd111a076a3aba7db999b983616", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5023f3c40481dd111a076a3aba7db999b983616", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b5023f3c40481dd111a076a3aba7db999b983616", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5023f3c40481dd111a076a3aba7db999b983616/comments", "author": {"login": "jamborm", "id": 2180070, "node_id": "MDQ6VXNlcjIxODAwNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2180070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamborm", "html_url": "https://github.com/jamborm", "followers_url": "https://api.github.com/users/jamborm/followers", "following_url": "https://api.github.com/users/jamborm/following{/other_user}", "gists_url": "https://api.github.com/users/jamborm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamborm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamborm/subscriptions", "organizations_url": "https://api.github.com/users/jamborm/orgs", "repos_url": "https://api.github.com/users/jamborm/repos", "events_url": "https://api.github.com/users/jamborm/events{/privacy}", "received_events_url": "https://api.github.com/users/jamborm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6141b7db4599e176bddab4b4573d4e08a8284ed7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6141b7db4599e176bddab4b4573d4e08a8284ed7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6141b7db4599e176bddab4b4573d4e08a8284ed7"}], "stats": {"total": 33, "additions": 18, "deletions": 15}, "files": [{"sha": "04ce986b7c78d5b4e42d7fc002b97606b27071e6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5023f3c40481dd111a076a3aba7db999b983616/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5023f3c40481dd111a076a3aba7db999b983616/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b5023f3c40481dd111a076a3aba7db999b983616", "patch": "@@ -1,3 +1,13 @@\n+2010-05-14  Martin Jambor  <mjambor@suse.cz>\n+\n+\t* langhooks-def.h (LANG_HOOKS_FOLD_OBJ_TYPE_REF): Remove.\n+\t(LANG_HOOKS_INITIALIZER): Remove LANG_HOOKS_FOLD_OBJ_TYPE_REF.\n+\t* langhooks.h (struct lang_hooks_for_decls): Removed field\n+\tfold_obj_type_ref.\n+\t* tree.c (free_lang_data): Remove assignment to\n+\tlang_hooks.fold_obj_type_ref.\n+\t* tree.def (OBJ_TYPE_REF): Update comment.\n+\n 2010-05-14  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/44124"}, {"sha": "a68f71c58f3ff216e3db32e4a9c8215207ebe8aa", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5023f3c40481dd111a076a3aba7db999b983616/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5023f3c40481dd111a076a3aba7db999b983616/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=b5023f3c40481dd111a076a3aba7db999b983616", "patch": "@@ -1,3 +1,8 @@\n+2010-05-14  Martin Jambor  <mjambor@suse.cz>\n+\n+\t* cp-lang.c (LANG_HOOKS_FOLD_OBJ_TYPE_REF): Remove both its undef\n+\tand define.\n+\n 2010-05-14  Jonathan Wakely  <jwakely.gcc@gmail.com>\n \n \t* call.c (build_new_method_call): Change warning text."}, {"sha": "2cd3ac5b47e914921e3e5fd4666cce4b954a60a6", "filename": "gcc/cp/cp-lang.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5023f3c40481dd111a076a3aba7db999b983616/gcc%2Fcp%2Fcp-lang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5023f3c40481dd111a076a3aba7db999b983616/gcc%2Fcp%2Fcp-lang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-lang.c?ref=b5023f3c40481dd111a076a3aba7db999b983616", "patch": "@@ -77,8 +77,6 @@ static tree cp_eh_personality (void);\n #define LANG_HOOKS_DECL_PRINTABLE_NAME\tcxx_printable_name\n #undef LANG_HOOKS_DWARF_NAME\n #define LANG_HOOKS_DWARF_NAME cxx_dwarf_name\n-#undef LANG_HOOKS_FOLD_OBJ_TYPE_REF\n-#define LANG_HOOKS_FOLD_OBJ_TYPE_REF cp_fold_obj_type_ref\n #undef LANG_HOOKS_INIT_TS\n #define LANG_HOOKS_INIT_TS cp_init_ts\n #undef LANG_HOOKS_EH_PERSONALITY"}, {"sha": "673ac03e434e8527f56507e3a5ea19beeadd63f9", "filename": "gcc/langhooks-def.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5023f3c40481dd111a076a3aba7db999b983616/gcc%2Flanghooks-def.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5023f3c40481dd111a076a3aba7db999b983616/gcc%2Flanghooks-def.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flanghooks-def.h?ref=b5023f3c40481dd111a076a3aba7db999b983616", "patch": "@@ -133,7 +133,6 @@ extern void lhd_omp_firstprivatize_type_sizes (struct gimplify_omp_ctx *,\n \n /* Hooks for tree gimplification.  */\n #define LANG_HOOKS_GIMPLIFY_EXPR lhd_gimplify_expr\n-#define LANG_HOOKS_FOLD_OBJ_TYPE_REF NULL\n \n /* Tree dump hooks.  */\n extern bool lhd_tree_dump_dump_tree (void *, tree);\n@@ -291,7 +290,6 @@ extern void lhd_end_section (void);\n   LANG_HOOKS_GET_INNERMOST_GENERIC_ARGS, \\\n   LANG_HOOKS_FUNCTION_PARAMETER_PACK_P, \\\n   LANG_HOOKS_GIMPLIFY_EXPR, \\\n-  LANG_HOOKS_FOLD_OBJ_TYPE_REF, \\\n   LANG_HOOKS_BUILTIN_FUNCTION, \\\n   LANG_HOOKS_BUILTIN_FUNCTION_EXT_SCOPE, \\\n   LANG_HOOKS_INIT_TS,          \\"}, {"sha": "5ae2e46a549b195484487cd39fea063dc006d25a", "filename": "gcc/langhooks.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5023f3c40481dd111a076a3aba7db999b983616/gcc%2Flanghooks.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5023f3c40481dd111a076a3aba7db999b983616/gcc%2Flanghooks.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flanghooks.h?ref=b5023f3c40481dd111a076a3aba7db999b983616", "patch": "@@ -417,10 +417,6 @@ struct lang_hooks\n      enum gimplify_status, though we can't see that type here.  */\n   int (*gimplify_expr) (tree *, gimple_seq *, gimple_seq *);\n \n-  /* Fold an OBJ_TYPE_REF expression to the address of a function.\n-     KNOWN_TYPE carries the true type of the OBJ_TYPE_REF_OBJECT.  */\n-  tree (*fold_obj_type_ref) (tree, tree);\n-\n   /* Do language specific processing in the builtin function DECL  */\n   tree (*builtin_function) (tree decl);\n "}, {"sha": "acbdeee953f95739b128ea1794d69beb55b71aaf", "filename": "gcc/tree.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5023f3c40481dd111a076a3aba7db999b983616/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5023f3c40481dd111a076a3aba7db999b983616/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=b5023f3c40481dd111a076a3aba7db999b983616", "patch": "@@ -5039,7 +5039,6 @@ free_lang_data (void)\n   lang_hooks.dwarf_name = lhd_dwarf_name;\n   lang_hooks.decl_printable_name = gimple_decl_printable_name;\n   lang_hooks.set_decl_assembler_name = lhd_set_decl_assembler_name;\n-  lang_hooks.fold_obj_type_ref = gimple_fold_obj_type_ref;\n \n   /* Reset diagnostic machinery.  */\n   diagnostic_starter (global_dc) = default_diagnostic_starter;"}, {"sha": "1f6ad82fe0c3bc0fd842b7b8a4f809b1162d4999", "filename": "gcc/tree.def", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5023f3c40481dd111a076a3aba7db999b983616/gcc%2Ftree.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5023f3c40481dd111a076a3aba7db999b983616/gcc%2Ftree.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.def?ref=b5023f3c40481dd111a076a3aba7db999b983616", "patch": "@@ -432,16 +432,13 @@ DEFTREECODE (ALIGN_INDIRECT_REF, \"align_indirect_ref\", tcc_reference, 1)\n    or 0 if the alignment is unknown.  */\n DEFTREECODE (MISALIGNED_INDIRECT_REF, \"misaligned_indirect_ref\", tcc_reference, 2)\n \n-/* Used to represent lookup of runtime type dependent data.  Often this is\n-   a reference to a vtable, but it needn't be.  Operands are:\n+/* Used to represent lookup in a virtual method table which is dependent on\n+   the runtime type of an object.  Operands are:\n    OBJ_TYPE_REF_EXPR: An expression that evaluates the value to use.\n    OBJ_TYPE_REF_OBJECT: Is the object on whose behalf the lookup is\n    being performed.  Through this the optimizers may be able to statically\n    determine the dynamic type of the object.\n-   OBJ_TYPE_REF_TOKEN: Something front-end specific used to resolve the\n-   reference to something simpler, usually to the address of a DECL.\n-   Never touched by the middle-end.  Good choices would be either an\n-   identifier or a vtable index.  */\n+   OBJ_TYPE_REF_TOKEN: An integer index to the virtual method table.  */\n DEFTREECODE (OBJ_TYPE_REF, \"obj_type_ref\", tcc_expression, 3)\n \n /* Constructor: return an aggregate value made from specified components."}]}