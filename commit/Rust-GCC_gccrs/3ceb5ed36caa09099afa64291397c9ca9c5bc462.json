{"sha": "3ceb5ed36caa09099afa64291397c9ca9c5bc462", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2NlYjVlZDM2Y2FhMDkwOTlhZmE2NDI5MTM5N2M5Y2E5YzViYzQ2Mg==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-02-07T01:24:09Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-02-07T01:24:09Z"}, "message": "(movqi): For special case of moving byte to stack, push into low byte and then copy to high byte.\n\n(movqi): For special case of moving byte\nto stack, push into low byte and then copy to high byte.\nFor case of moving to/from address reg, exchange it with d0.\n\nFrom-SVN: r3433", "tree": {"sha": "665405f3f70edacad196a142d91f7240c3a6102a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/665405f3f70edacad196a142d91f7240c3a6102a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3ceb5ed36caa09099afa64291397c9ca9c5bc462", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ceb5ed36caa09099afa64291397c9ca9c5bc462", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3ceb5ed36caa09099afa64291397c9ca9c5bc462", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ceb5ed36caa09099afa64291397c9ca9c5bc462/comments", "author": null, "committer": null, "parents": [{"sha": "6a5bbbe6b815b84e45e0a017b087c2d92516bc82", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a5bbbe6b815b84e45e0a017b087c2d92516bc82", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a5bbbe6b815b84e45e0a017b087c2d92516bc82"}], "stats": {"total": 30, "additions": 7, "deletions": 23}, "files": [{"sha": "5fac2b9b67fe87e78be1f103f5528946f6c09614", "filename": "gcc/config/m68k/m68k.md", "status": "modified", "additions": 7, "deletions": 23, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ceb5ed36caa09099afa64291397c9ca9c5bc462/gcc%2Fconfig%2Fm68k%2Fm68k.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ceb5ed36caa09099afa64291397c9ca9c5bc462/gcc%2Fconfig%2Fm68k%2Fm68k.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.md?ref=3ceb5ed36caa09099afa64291397c9ca9c5bc462", "patch": "@@ -922,36 +922,20 @@\n       xoperands[2]\n         = gen_rtx (MEM, QImode,\n \t\t   gen_rtx (PLUS, VOIDmode, stack_pointer_rtx, const1_rtx));\n-      xoperands[3] = stack_pointer_rtx;\n       /* Just pushing a byte puts it in the high byte of the halfword.  */\n       /* We must put it in the low-order, high-numbered byte.  */\n-      output_asm_insn (\\\"subq%.w %#2,%3\\;move%.b %1,%2\\\", xoperands);\n+      output_asm_insn (\\\"move%.b %1,%-\\;move%.b %@,%2\\\", xoperands);\n       return \\\"\\\";\n     }\n \n+  /* Moving a byte into an address register is not possible.  */\n+  /* Use d0 as an intermediate, but don't clobber its contents.  */\n   if (ADDRESS_REG_P (operands[0]) && GET_CODE (operands[1]) == MEM)\n-    {\n-      xoperands[1] = operands[1];\n-      xoperands[2]\n-        = gen_rtx (MEM, QImode,\n-\t\t   gen_rtx (PLUS, VOIDmode, stack_pointer_rtx, const1_rtx));\n-      xoperands[3] = stack_pointer_rtx;\n-      /* Just pushing a byte puts it in the high byte of the halfword.  */\n-      /* We must put it in the low half, the second byte.  */\n-      output_asm_insn (\\\"subq%.w %#2,%3\\;move%.b %1,%2\\\", xoperands);\n-      return \\\"move%.w %+,%0\\\";\n-    }\n+    return \\\"exg %/d0,%0\\;move%.b %1,%/d0\\;exg %/d0,%0\\\";\n+  /* Likewise for moving from an address reg.  */\n   if (ADDRESS_REG_P (operands[1]) && GET_CODE (operands[0]) == MEM)\n-    {\n-      xoperands[0] = operands[0];\n-      xoperands[1] = operands[1];\n-      xoperands[2]\n-        = gen_rtx (MEM, QImode,\n-\t\t   gen_rtx (PLUS, VOIDmode, stack_pointer_rtx, const1_rtx));\n-      xoperands[3] = stack_pointer_rtx;\n-      output_asm_insn (\\\"move%.w %1,%-\\;move%.b %2,%0\\;addq%.w %#2,%3\\\", xoperands);\n-      return \\\"\\\";\n-    }\n+    return \\\"exg %/d0,%1\\;move%.b %/d0,%0\\;exg %/d0,%1\\\";\n+\n   /* clr and st insns on 68000 read before writing.\n      This isn't so on the 68010, but we have no alternative for it.  */\n   if (TARGET_68020"}]}