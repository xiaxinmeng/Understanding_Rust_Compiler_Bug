{"sha": "3a6461f307f6204f2b415a3fc94fa21dc7cbe3ec", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2E2NDYxZjMwN2Y2MjA0ZjJiNDE1YTNmYzk0ZmEyMWRjN2NiZTNlYw==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2017-05-19T11:13:48Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2017-05-19T11:13:48Z"}, "message": "re PR tree-optimization/80821 (genmatch conflicting predicates)\n\n2017-05-19  Richard Biener  <rguenther@suse.de>\n\n\tPR build/80821\n\t* genmatch.c (dt_node::gen_kids_1): Add missing scope around\n\tpredicate evaluation.\n\nFrom-SVN: r248264", "tree": {"sha": "aebf69b2984f0a7b5173d9f96895be238b467a85", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aebf69b2984f0a7b5173d9f96895be238b467a85"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3a6461f307f6204f2b415a3fc94fa21dc7cbe3ec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a6461f307f6204f2b415a3fc94fa21dc7cbe3ec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a6461f307f6204f2b415a3fc94fa21dc7cbe3ec", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a6461f307f6204f2b415a3fc94fa21dc7cbe3ec/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9ca8a4c064941ea3495131e36b7710375606b009", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ca8a4c064941ea3495131e36b7710375606b009", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9ca8a4c064941ea3495131e36b7710375606b009"}], "stats": {"total": 10, "additions": 10, "deletions": 0}, "files": [{"sha": "9e386f7593389b9215bf4f949bd5a04b47214e45", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a6461f307f6204f2b415a3fc94fa21dc7cbe3ec/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a6461f307f6204f2b415a3fc94fa21dc7cbe3ec/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3a6461f307f6204f2b415a3fc94fa21dc7cbe3ec", "patch": "@@ -1,3 +1,9 @@\n+2017-05-19  Richard Biener  <rguenther@suse.de>\n+\n+\tPR build/80821\n+\t* genmatch.c (dt_node::gen_kids_1): Add missing scope around\n+\tpredicate evaluation.\n+\n 2017-05-19  Jan Hubicka  <hubicka@ucw.cz>\n \n \t* ipa-inline.h (ipa_call_summary): Turn sizes into signed;"}, {"sha": "2c3183b25af5bc0990957640d52f9f7e05e0b1e7", "filename": "gcc/genmatch.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a6461f307f6204f2b415a3fc94fa21dc7cbe3ec/gcc%2Fgenmatch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a6461f307f6204f2b415a3fc94fa21dc7cbe3ec/gcc%2Fgenmatch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenmatch.c?ref=3a6461f307f6204f2b415a3fc94fa21dc7cbe3ec", "patch": "@@ -3005,6 +3005,8 @@ dt_node::gen_kids_1 (FILE *f, int indent, bool gimple,\n       expr *e = as_a <expr *> (preds[i]->op);\n       predicate_id *p = as_a <predicate_id *> (e->operation);\n       preds[i]->get_name (kid_opname);\n+      fprintf_indent (f, indent, \"{\\n\");\n+      indent += 2;\n       fprintf_indent (f, indent, \"tree %s_pops[%d];\\n\", kid_opname, p->nargs);\n       fprintf_indent (f, indent, \"if (%s_%s (%s, %s_pops%s))\\n\",\n \t       gimple ? \"gimple\" : \"tree\",\n@@ -3020,6 +3022,8 @@ dt_node::gen_kids_1 (FILE *f, int indent, bool gimple,\n \t}\n       preds[i]->gen_kids (f, indent + 4, gimple);\n       fprintf (f, \"}\\n\");\n+      indent -= 2;\n+      fprintf_indent (f, indent, \"}\\n\");\n     }\n \n   for (unsigned i = 0; i < others.length (); ++i)"}]}