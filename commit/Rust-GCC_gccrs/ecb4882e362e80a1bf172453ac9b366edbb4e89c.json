{"sha": "ecb4882e362e80a1bf172453ac9b366edbb4e89c", "node_id": "C_kwDOANBUbNoAKGVjYjQ4ODJlMzYyZTgwYTFiZjE3MjQ1M2FjOWIzNjZlZGJiNGU4OWM", "commit": {"author": {"name": "Patrick Palka", "email": "ppalka@redhat.com", "date": "2022-03-28T18:15:16Z"}, "committer": {"name": "Patrick Palka", "email": "ppalka@redhat.com", "date": "2022-03-28T18:15:16Z"}, "message": "c++: constrained template friend matching ICE [PR105064]\n\nHere during declaration matching for the two constrained template\nfriends, we crash from maybe_substitute_reqs_for because the second\nfriend doesn't yet have DECL_TEMPLATE_INFO set (we're being called\nindirectly from push_template_decl).\n\nAs far as I can tell, this situation happens only when declaring a\nconstrained template friend within a non-template class (as in the\ntestcase), in which case the substitution would be a no-op anyway.\nSo this patch rearranges maybe_substitute_reqs_for to gracefully\nhandle missing DECL_TEMPLATE_INFO by just skipping the substitution.\n\n\tPR c++/105064\n\ngcc/cp/ChangeLog:\n\n\t* constraint.cc (maybe_substitute_reqs_for): Don't assume\n\tDECL_TEMPLATE_INFO is available.\n\ngcc/testsuite/ChangeLog:\n\n\t* g++.dg/cpp2a/concepts-friend9.C: New test.", "tree": {"sha": "affd7c4814adc8fa6273b8669ce384ff2f4219b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/affd7c4814adc8fa6273b8669ce384ff2f4219b7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ecb4882e362e80a1bf172453ac9b366edbb4e89c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ecb4882e362e80a1bf172453ac9b366edbb4e89c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ecb4882e362e80a1bf172453ac9b366edbb4e89c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ecb4882e362e80a1bf172453ac9b366edbb4e89c/comments", "author": null, "committer": null, "parents": [{"sha": "cccbb776589c1825de1bd2eefabb11d72ef28de8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cccbb776589c1825de1bd2eefabb11d72ef28de8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cccbb776589c1825de1bd2eefabb11d72ef28de8"}], "stats": {"total": 25, "additions": 16, "deletions": 9}, "files": [{"sha": "c5a991b9e71f5067dc49f45b5d48c46a26ef9e46", "filename": "gcc/cp/constraint.cc", "status": "modified", "additions": 4, "deletions": 9, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecb4882e362e80a1bf172453ac9b366edbb4e89c/gcc%2Fcp%2Fconstraint.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecb4882e362e80a1bf172453ac9b366edbb4e89c/gcc%2Fcp%2Fconstraint.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fconstraint.cc?ref=ecb4882e362e80a1bf172453ac9b366edbb4e89c", "patch": "@@ -1268,20 +1268,15 @@ remove_constraints (tree t)\n    for declaration matching.  */\n \n tree\n-maybe_substitute_reqs_for (tree reqs, const_tree decl_)\n+maybe_substitute_reqs_for (tree reqs, const_tree decl)\n {\n   if (reqs == NULL_TREE)\n     return NULL_TREE;\n \n-  tree decl = CONST_CAST_TREE (decl_);\n-  tree result = STRIP_TEMPLATE (decl);\n-\n-  if (DECL_UNIQUE_FRIEND_P (result))\n+  decl = STRIP_TEMPLATE (decl);\n+  if (DECL_UNIQUE_FRIEND_P (decl) && DECL_TEMPLATE_INFO (decl))\n     {\n-      tree tmpl = decl;\n-      if (TREE_CODE (decl) != TEMPLATE_DECL)\n-\ttmpl = DECL_TI_TEMPLATE (result);\n-\n+      tree tmpl = DECL_TI_TEMPLATE (decl);\n       tree gargs = generic_targs_for (tmpl);\n       processing_template_decl_sentinel s;\n       if (uses_template_parms (gargs))"}, {"sha": "09054d23d5d05b9f0382683152e3e8908d4dd83f", "filename": "gcc/testsuite/g++.dg/cpp2a/concepts-friend9.C", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecb4882e362e80a1bf172453ac9b366edbb4e89c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-friend9.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecb4882e362e80a1bf172453ac9b366edbb4e89c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-friend9.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-friend9.C?ref=ecb4882e362e80a1bf172453ac9b366edbb4e89c", "patch": "@@ -0,0 +1,12 @@\n+// PR c++/105064\n+// { dg-do compile { target c++20 } }\n+\n+struct A {\n+  template<class T>\n+  friend void f(T) requires true;\n+};\n+\n+struct B {\n+  template<class T>\n+  friend void f(T) requires true;\n+};"}]}