{"sha": "34bab46d1a5dbd12110adad9245454c5699bcfa5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzRiYWI0NmQxYTVkYmQxMjExMGFkYWQ5MjQ1NDU0YzU2OTliY2ZhNQ==", "commit": {"author": {"name": "Paolo Bonzini", "email": "bonzini@gnu.org", "date": "2005-05-17T07:33:39Z"}, "committer": {"name": "Paolo Bonzini", "email": "bonzini@gcc.gnu.org", "date": "2005-05-17T07:33:39Z"}, "message": "configure.ac (--enable-libgcj-multifile): Remove.\n\n2005-05-11  Paolo Bonzini  <bonzini@gnu.org>\n\n\t* configure.ac (--enable-libgcj-multifile): Remove.\n\n\t* Makefile.am (all_native_compiled_source_files,\n\t(all_native_compiled_dirs, all_java_dirs, all_java_lo_files,\n\tall_libgcj_lo_files, all_xlib_lo_files,\n\tall_java_deps_files, all_java_stamp_files,\n\tall_java_filelist_files): New variables.\n\t(EXTRA_DIST): New Automake variable.\n\t(CLEANFILES): Add .stamp, .list and .lo files.\n\t(%.list, %.lo, %.stamp, Makefile.deps): New rules.\n\t(classes.stamp): Depend on $(all_java_stamp_files).\n\t(libgcj.la): Pass $(libgcj_la_LIBADD) to the linker without\n\tgoing through write_entries_to_file.\n\n\t(all_java_source_files, all_property_files): Move earlier.\n\t(libgcj_la_OBJECTS, javao_files, xlib_javao_files,\n\tall_java_class_files): Remove.\n\t(gtk_awt_peer_sources): Rename to...\n\t(gtk_awt_peer_source_files): ... this.  Adjust throughout.\n\n\t(ONESTEP): Remove.\n\t(libgcj0_convenience_la_SOURCES): Remove Java source files.\n\t(libgcj0_convenience_la_LIBADD): Add $(all_libgcj_lo_files).\n\t(libgcj0_convenience_la_DEPENDENCIES): Likewise.\n\t(libgcj_la_SOURCES): Remove.\n\t(lib_gnu_awt_xlib_la_SOURCES): Remove Java source files.\n\t(lib_gnu_awt_xlib_la_LIBADD): Add $(all_xlib_lo_files).\n\t(lib_gnu_awt_xlib_la_DEPENDENCIES): Likewise.\n\n\t* configure: Regenerate.\n\t* Makefile.in: Regenerate.\n\t* external/Makefile.in: Regenerate.\n\t* external/sax/Makefile.in: Regenerate.\n\t* external/w3c_dom/Makefile.in: Regenerate.\n\t* gcj/Makefile.in: Regenerate.\n\t* include/Makefile.in: Regenerate.\n\t* libltdl/Makefile.in: Regenerate.\n\t* testsuite/Makefile.in: Regenerate.\n\nFrom-SVN: r99823", "tree": {"sha": "5c2ec0a49af19e892e7a1bc7176324e767ea7fb5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5c2ec0a49af19e892e7a1bc7176324e767ea7fb5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/34bab46d1a5dbd12110adad9245454c5699bcfa5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/34bab46d1a5dbd12110adad9245454c5699bcfa5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/34bab46d1a5dbd12110adad9245454c5699bcfa5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/34bab46d1a5dbd12110adad9245454c5699bcfa5/comments", "author": {"login": "bonzini", "id": 42082, "node_id": "MDQ6VXNlcjQyMDgy", "avatar_url": "https://avatars.githubusercontent.com/u/42082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bonzini", "html_url": "https://github.com/bonzini", "followers_url": "https://api.github.com/users/bonzini/followers", "following_url": "https://api.github.com/users/bonzini/following{/other_user}", "gists_url": "https://api.github.com/users/bonzini/gists{/gist_id}", "starred_url": "https://api.github.com/users/bonzini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bonzini/subscriptions", "organizations_url": "https://api.github.com/users/bonzini/orgs", "repos_url": "https://api.github.com/users/bonzini/repos", "events_url": "https://api.github.com/users/bonzini/events{/privacy}", "received_events_url": "https://api.github.com/users/bonzini/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f23b8501183a7c4645e59d5d6ae9e0e1c0d925d5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f23b8501183a7c4645e59d5d6ae9e0e1c0d925d5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f23b8501183a7c4645e59d5d6ae9e0e1c0d925d5"}], "stats": {"total": 18247, "additions": 257, "deletions": 17990}, "files": [{"sha": "ffbf8ce8c099325ea7d972e3b7514c598d3c0cc3", "filename": "libjava/ChangeLog", "status": "modified", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34bab46d1a5dbd12110adad9245454c5699bcfa5/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34bab46d1a5dbd12110adad9245454c5699bcfa5/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=34bab46d1a5dbd12110adad9245454c5699bcfa5", "patch": "@@ -1,3 +1,44 @@\n+2005-05-17  Paolo Bonzini  <bonzini@gnu.org>\n+\n+\t* configure.ac (--enable-libgcj-multifile): Remove.\n+\n+\t* Makefile.am (all_native_compiled_source_files,\n+\t(all_native_compiled_dirs, all_java_dirs, all_java_lo_files,\n+\tall_libgcj_lo_files, all_xlib_lo_files,\n+\tall_java_deps_files, all_java_stamp_files,\n+\tall_java_filelist_files): New variables.\n+\t(EXTRA_DIST): New Automake variable.\n+\t(CLEANFILES): Add .stamp, .list and .lo files.\n+\t(%.list, %.lo, %.stamp, Makefile.deps): New rules.\n+\t(classes.stamp): Depend on $(all_java_stamp_files).\n+\t(libgcj.la): Pass $(libgcj_la_LIBADD) to the linker without\n+\tgoing through write_entries_to_file.\n+\n+\t(all_java_source_files, all_property_files): Move earlier.\n+\t(libgcj_la_OBJECTS, javao_files, xlib_javao_files,\n+\tall_java_class_files): Remove.\n+\t(gtk_awt_peer_sources): Rename to...\n+\t(gtk_awt_peer_source_files): ... this.  Adjust throughout.\n+\n+\t(ONESTEP): Remove.\n+\t(libgcj0_convenience_la_SOURCES): Remove Java source files.\n+\t(libgcj0_convenience_la_LIBADD): Add $(all_libgcj_lo_files).\n+\t(libgcj0_convenience_la_DEPENDENCIES): Likewise.\n+\t(libgcj_la_SOURCES): Remove.\n+\t(lib_gnu_awt_xlib_la_SOURCES): Remove Java source files.\n+\t(lib_gnu_awt_xlib_la_LIBADD): Add $(all_xlib_lo_files).\n+\t(lib_gnu_awt_xlib_la_DEPENDENCIES): Likewise.\n+\n+\t* configure: Regenerate.\n+\t* Makefile.in: Regenerate.\n+\t* external/Makefile.in: Regenerate.\n+\t* external/sax/Makefile.in: Regenerate.\n+\t* external/w3c_dom/Makefile.in: Regenerate.\n+\t* gcj/Makefile.in: Regenerate.\n+\t* include/Makefile.in: Regenerate.\n+\t* libltdl/Makefile.in: Regenerate.\n+\t* testsuite/Makefile.in: Regenerate.\n+\n 2005-05-16  Tom Tromey  <tromey@redhat.com>\n \n \t* java/nio/charset/Charset.java (encode, decode): Synchronize on"}, {"sha": "c0aa90926d82db5fdc780ce00841f961e816e9a9", "filename": "libjava/Makefile.am", "status": "modified", "additions": 86, "deletions": 58, "changes": 144, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34bab46d1a5dbd12110adad9245454c5699bcfa5/libjava%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34bab46d1a5dbd12110adad9245454c5699bcfa5/libjava%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.am?ref=34bab46d1a5dbd12110adad9245454c5699bcfa5", "patch": "@@ -228,6 +228,63 @@ BOOTCLASSPATH = $(here)'$(CLASSPATH_SEPARATOR)'$(srcdir)'$(CLASSPATH_SEPARATOR)'\n \n ## ################################################################\n \n+# Files for which we build .lo files\n+all_native_compiled_source_files = \\\n+    $(java_source_files) \\\n+    $(built_java_source_files) \\\n+    $(xlib_java_source_files)\n+\n+# Files for which we build .class files\n+# It *must* begin with $(all_native_compiled_source_files)\n+all_java_source_files = \\\n+    $(all_native_compiled_source_files) \\\n+    $(gtk_awt_peer_source_files) \\\n+    $(gnu_xml_source_files) \\\n+    $(javax_imageio_source_files) \\\n+    $(javax_xml_source_files) \\\n+    $(gnu_java_beans_source_files) \\\n+    gnu/gcj/tools/gcj_dbtool/Main.java\n+\n+EXTRA_DIST = $(all_java_source_files)\n+\n+# Build a list of native and bytecode-compiled directories.  The Makefile\n+# depends on them, because they affect the definition of two variables\n+# below.\n+# Each directory's filelist file depends on the corresponding Java source files\n+# Each class file depends on the its directory's .stamp file\n+# Below, one .lo file is built per directory when the stamp file changes\n+\n+Makefile.deps: $(srcdir)/Makefile.in\n+\t@: $(call write_entries_to_file,$(all_java_source_files),files.tmplist)\n+\tsed 's,/[^/]*$$,,' \\\n+\t  files.tmplist | sort | uniq > bytecodes.list\n+\tsed -n '1,$(words $(all_native_compiled_source_files))s,/[^/]*$$,,p' \\\n+\t  files.tmplist | sort | uniq > native.list\n+\techo 's,^\\(.*\\)/\\([^/]*\\)\\.java$$,\\1.list: \\0\\' > tmpsed\n+\techo '\\1/\\2.class: \\1.stamp,' >> tmpsed\n+\tsed -ftmpsed files.tmplist \\\n+\t  > Makefile.deps\n+\trm files.tmplist tmpsed\n+\n+all_native_compiled_dirs := $(shell test -f native.list && cat native.list)\n+all_java_dirs := $(shell test -f bytecodes.list && cat bytecodes.list)\n+all_java_lo_files = $(all_native_compiled_dirs:=.lo)\n+all_java_deps_files = $(all_java_dirs:=.deps)\n+all_java_stamp_files = $(all_java_dirs:=.stamp)\n+all_java_filelist_files = $(all_java_dirs:=.list)\n+\n+# In the future these may be defined manually, if we decide to split libgcj.so\n+# into multiple shared libraries.  For now, everything but xlib goes into\n+# all_libgcj_lo_files\n+all_xlib_lo_files = gnu/gcj/xlib.lo gnu/awt/xlib.lo\n+all_libgcj_lo_files = $(filter-out $(all_xlib_lo_files), $(all_java_lo_files))\n+\n+# Include automatically generated dependencies between Java source files.\n+-include Makefile.deps $(all_java_deps_files)\n+\n+all_property_files = $(property_files) \\\n+    java/util/logging/logging.properties\n+\n ##\n ## How to build libgcj.a and libgcj.jar\n ##\n@@ -246,23 +303,22 @@ libgij_la_LDFLAGS = -rpath $(toolexeclibdir) \\\n # subsections in the linker, such as Alpha and MIPS.\n libgcj0_convenience_la_SOURCES = prims.cc jni.cc exception.cc stacktrace.cc \\\n \tlink.cc defineclass.cc interpret.cc verify.cc \\\n-\t$(nat_source_files) $(math_c_source_files) $(java_source_files) \\\n-\t$(built_java_source_files) \\\n+\t$(nat_source_files) $(math_c_source_files) \\\n \t$(BOEHMGC_SRC) $(NOGC_SRC) \\\n \t$(BACKTRACE_SRC) \\\n \t$(POSIX_PLATFORM_SRC) $(WIN32_PLATFORM_SRC) $(ECOS_PLATFORM_SRC) \\\n \t$(DARWIN_CRT_SRC) \\\n \t$(POSIX_THREAD_SRC) $(WIN32_THREAD_SRC) $(NO_THREAD_SRC)\n libgcj0_convenience_la_LIBADD = \\\n+\t$(all_libgcj_lo_files) \\\n \tgnu-xml.lo javax-imageio.lo \\\n \tjavax-xml.lo gnu-java-beans.lo \\\n \texternal/sax/libsax-gcj.la \\\n \texternal/w3c_dom/libw3c-gcj.la\n+libgcj0_convenience_la_DEPENDENCIES = $(libgcj0_convenience_la_LIBADD)\n \n noinst_LTLIBRARIES = libgcj0_convenience.la\n \n-libgcj_la_SOURCES =\n-\n ## Objects from C++ sources in subdirs.\n nat_files = $(nat_source_files:.cc=.lo)\n xlib_nat_files = $(xlib_nat_source_files:.cc=.lo)\n@@ -344,7 +400,7 @@ jni/gtk-peer/gtk_jawt.c \\\n jni/classpath/native_state.c\n \n ## Java sources for Gtk peers.\n-gtk_awt_peer_sources = \\\n+gtk_awt_peer_source_files = \\\n gnu/java/awt/peer/gtk/GdkTextLayout.java \\\n gnu/java/awt/peer/gtk/GdkFontMetrics.java \\\n gnu/java/awt/peer/gtk/GdkFontPeer.java \\\n@@ -393,7 +449,7 @@ gnu/java/awt/peer/gtk/GThreadMutex.java \\\n gnu/java/awt/peer/gtk/GThreadNativeMethodRunner.java\n \n \n-gtk_jni_headers = $(patsubst %.java,jniinclude/%.h,$(subst /,_,$(gtk_awt_peer_sources)))\n+gtk_jni_headers = $(patsubst %.java,jniinclude/%.h,$(subst /,_,$(gtk_awt_peer_source_files)))\n \n jniinclude/gnu_java_awt_peer_gtk_GdkGraphics.h: gnu/java/awt/peer/gtk/GdkGraphics.java\n jniinclude/gnu_java_awt_peer_gtk_GdkGraphics2D.h: gnu/java/awt/peer/gtk/GdkGraphics2D.java\n@@ -510,11 +566,10 @@ libgcjawt_la_LDFLAGS = \\\n \t$(LIBGCJ_LD_SYMBOLIC)\n libgcjawt_la_LINK = $(LIBLINK)\n \n-lib_gnu_awt_xlib_la_SOURCES = \\\n-\t$(xlib_java_source_files) \\\n-\t$(xlib_nat_source_files)\n-lib_gnu_awt_xlib_la_DEPENDENCIES = libgcj-$(gcc_version).jar libgcj.la libgcj.spec\n-lib_gnu_awt_xlib_la_LIBADD = $(xlib_javao_files)\n+lib_gnu_awt_xlib_la_SOURCES = $(xlib_nat_source_files)\n+lib_gnu_awt_xlib_la_LIBADD = $(all_xlib_lo_files)\n+lib_gnu_awt_xlib_la_DEPENDENCIES = libgcj-$(gcc_version).jar libgcj.la libgcj.spec \\\n+\t$(lib_gnu_awt_xlib_la_LIBADD)\n ## We require libstdc++-v3 to be in the same build tree.\n lib_gnu_awt_xlib_la_CPPFLAGS = \\\n \t$(AM_CPPFLAGS) \\\n@@ -528,21 +583,6 @@ lib_gnu_awt_xlib_la_LDFLAGS = ../libstdc++-v3/src/libstdc++.la \\\n         -version-info `grep -v '^\\#' $(srcdir)/libtool-version` $(LIBGCJ_LD_SYMBOLIC)\n lib_gnu_awt_xlib_la_LINK = $(LIBLINK)\n \n-all_java_source_files = \\\n-    $(java_source_files) \\\n-    $(built_java_source_files) \\\n-    $(gtk_awt_peer_sources) \\\n-    $(xlib_java_source_files) \\\n-    $(gnu_xml_source_files) \\\n-    $(javax_imageio_source_files) \\\n-    $(javax_xml_source_files) \\\n-    $(gnu_java_beans_source_files)\n-\n-all_java_class_files = $(all_java_source_files:.java=.class)\n-\n-all_property_files = $(property_files) \\\n-    java/util/logging/logging.properties\n-\n ## Build property files into the library.\n property_files = \\\n gnu/regexp/MessagesBundle.properties \\\n@@ -554,32 +594,24 @@ propertyo_files = $(property_files:.properties=.properties.lo)\n %.properties.lo: %.properties\n \t$(LTGCJCOMPILE) -o $@ -c $< -Wc,--resource,`echo $@ | sed \"s/\\.lo$$//\"`\n \n-if ONESTEP\n-\n-# Compile all classfiles in one go.\n+# Compile one directory in one go.  If the files have to be compiled with the\n+# binary compatibility ABI, only make the .class here -- the .lo is made\n+# elsewhere in this Makefile.\n \n-classes.stamp: $(all_java_source_files) gnu/gcj/tools/gcj_dbtool/Main.java\n-\t@echo Compiling Java sourcefiles...\n-\t@: $(call write_entries_to_file,$?,libgcj.sourcelist)\n-\t$(JAVAC) $(JCFLAGS) -classpath '' -bootclasspath $(BOOTCLASSPATH) -d $(here) @libgcj.sourcelist\n-\techo > classes.stamp\n-# This next rule seems backward, but reflects the fact that 1) all\n-# classfiles are compiled in one go when classes.stamp is built and 2)\n-# anything which depends on a particular .class file must wait until\n-# this file is built.\n-$(all_java_class_files) gnu/gcj/tools/gcj_dbtool/Main.class: classes.stamp\n+%.list:\n+\t@: $(shell $(mkinstalldirs) $(basename $@))\n+\t@: $(call write_entries_to_file,$^,$@)\n \n-else # !ONESTEP\n+$(all_java_lo_files): %.lo: %.stamp\n+\t$(LTGCJCOMPILE) -o $@ -c @${<:.stamp=.list}\n \n-# Compile each classfile individually.\n+$(all_java_stamp_files): %.stamp: %.list\n+\t$(JAVAC) $(JCFLAGS) -classpath '' -bootclasspath $(BOOTCLASSPATH) -d $(here) \\\n+\t\t-MD -MF ${@:.stamp=.deps} @$<\n+\techo timestamp > $@\n \n-.java.class:\n-\t$(JAVAC) $(JCFLAGS) -classpath '' -bootclasspath $(BOOTCLASSPATH) -d $(here) $<\n-\n-classes.stamp: $(all_java_class_files) $(all_property_files)\n-\techo > classes.stamp\n-\n-endif\n+classes.stamp: $(all_property_files) $(all_java_stamp_files)\n+\techo timestamp > classes.stamp\n \n libgcj-$(gcc_version).jar: classes.stamp\n \t-@rm -f libgcj-$(gcc_version).jar\n@@ -605,7 +637,9 @@ libgcj-$(gcc_version).jar: classes.stamp\n \t  $(ZIP) -ufM0E@ $@; \\\n \tdone\n \n-CLEANFILES = libgcj-$(gcc_version).jar classes.stamp\n+CLEANFILES = libgcj-$(gcc_version).jar classes.stamp $(all_java_stamp_files) \\\n+\t$(all_java_deps_files) $(all_java_filelist_files)\n+DISTCLEANFILES = Makefile.deps native.dirs bytecompile.dirs\n \n mostlyclean-local:\n ## Use libtool rm to remove each libtool object\n@@ -628,16 +662,10 @@ clean-nat:\n \n SUFFIXES = .class .java .h .properties\n \n-$(javao_files) $(xlib_javao_files): %.lo: %.java\n-\t$(LTGCJCOMPILE) -o $@ -c $<\n-\n ## Pass the list of object files to libtool in a temporary file to\n ## avoid tripping platform command line length limits.\n-libgcj.la: $(libgcj_la_OBJECTS) $(libgcj_la_DEPENDENCIES)\n-\t@echo Creating list of files to link...\n-\t@: $(call write_entries_to_file,$(libgcj_la_OBJECTS),libgcj.objectlist)\n-\t$(libgcj_la_LINK) -objectlist libgcj.objectlist \\\n-\t$(libgcj_la_LIBADD) \\\n+libgcj.la: $(libgcj_la_DEPENDENCIES)\n+\t$(libgcj_la_LINK) $(libgcj_la_LIBADD) \\\n \t-rpath $(toolexeclibdir) $(libgcj_la_LDFLAGS) $(LIBS)\n \n lib-gnu-awt-xlib.la: $(lib_gnu_awt_xlib_la_OBJECTS) $(lib_gnu_awt_xlib_la_DEPENDENCIES)\n@@ -700,7 +728,7 @@ gnu-java-beans.lo: $(gnu_java_beans_source_files)\n \n ## Depend on the sources, even though we are going to compile the\n ## classes.\n-gtk-awt-peer.lo: $(gtk_awt_peer_sources)\n+gtk-awt-peer.lo: $(gtk_awt_peer_source_files)\n ## FIXME: this is ugly.  We want to make sure the .class files have\n ## been built, but we don't want a real dependency on them as this\n ## would cause our target to be rebuilt whenever any .java file is"}, {"sha": "352bbfc8206cb5a2fbfce49a5e48d383029a5cb4", "filename": "libjava/Makefile.in", "status": "modified", "additions": 127, "deletions": 17869, "changes": 17996, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34bab46d1a5dbd12110adad9245454c5699bcfa5/libjava%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34bab46d1a5dbd12110adad9245454c5699bcfa5/libjava%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.in?ref=34bab46d1a5dbd12110adad9245454c5699bcfa5"}, {"sha": "1bf81185131b67d8a2d99b9a2515529612d61525", "filename": "libjava/configure", "status": "modified", "additions": 3, "deletions": 40, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34bab46d1a5dbd12110adad9245454c5699bcfa5/libjava%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34bab46d1a5dbd12110adad9245454c5699bcfa5/libjava%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fconfigure?ref=34bab46d1a5dbd12110adad9245454c5699bcfa5", "patch": "@@ -310,7 +310,7 @@ ac_includes_default=\"\\\n # include <unistd.h>\n #endif\"\n \n-ac_subst_vars='SHELL PATH_SEPARATOR PACKAGE_NAME PACKAGE_TARNAME PACKAGE_VERSION PACKAGE_STRING PACKAGE_BUGREPORT exec_prefix prefix program_transform_name bindir sbindir libexecdir datadir sysconfdir sharedstatedir localstatedir libdir includedir oldincludedir infodir mandir build_alias host_alias target_alias DEFS ECHO_C ECHO_N ECHO_T LIBS build build_cpu build_vendor build_os build_subdir host_subdir target_subdir libgcj_basedir host host_cpu host_vendor host_os target target_cpu target_vendor target_os target_noncanonical LN_S mkinstalldirs CC ac_ct_CC EXEEXT OBJEXT CXX ac_ct_CXX CFLAGS CXXFLAGS LDFLAGS INSTALL_PROGRAM INSTALL_SCRIPT INSTALL_DATA CYGPATH_W PACKAGE VERSION ACLOCAL AUTOCONF AUTOMAKE AUTOHEADER MAKEINFO install_sh STRIP ac_ct_STRIP INSTALL_STRIP_PROGRAM mkdir_p AWK SET_MAKE am__leading_dot AMTAR am__tar am__untar DEPDIR am__include am__quote AMDEP_TRUE AMDEP_FALSE AMDEPBACKSLASH CCDEPMODE am__fastdepCC_TRUE am__fastdepCC_FALSE CXXDEPMODE am__fastdepCXX_TRUE am__fastdepCXX_FALSE AS ac_ct_AS AR ac_ct_AR RANLIB ac_ct_RANLIB MAINTAINER_MODE_TRUE MAINTAINER_MODE_FALSE MAINT LIBGCJ_CFLAGS LIBGCJ_CXXFLAGS LIBGCJ_JAVAFLAGS LIBGCJ_LD_SYMBOLIC INCLTDL LIBLTDL DIRLTDL LIBTOOL CXXCPP CPPFLAGS GCJ GCJFLAGS GCJDEPMODE am__fastdepGCJ_TRUE am__fastdepGCJ_FALSE subdirs TESTSUBDIR_TRUE TESTSUBDIR_FALSE ONESTEP_TRUE ONESTEP_FALSE JAVA_HOME_SET_TRUE JAVA_HOME_SET_FALSE JAVA_HOME LIBGCJDEBUG INTERPRETER LIBFFI LIBFFIINCS PLATFORM_INNER_NAT_HDRS CPP EGREP USING_WIN32_PLATFORM_TRUE USING_WIN32_PLATFORM_FALSE USING_POSIX_PLATFORM_TRUE USING_POSIX_PLATFORM_FALSE USING_ECOS_PLATFORM_TRUE USING_ECOS_PLATFORM_FALSE USING_DARWIN_CRT_TRUE USING_DARWIN_CRT_FALSE SYSTEMSPEC LIBGCJTESTSPEC ZLIBSPEC ZLIBTESTSPEC X_CFLAGS X_PRE_LIBS X_LIBS X_EXTRA_LIBS TOOLKIT XLIB_AWT_TRUE XLIB_AWT_FALSE GTK_AWT_TRUE GTK_AWT_FALSE GTK_CAIRO_TRUE GTK_CAIRO_FALSE PKG_CONFIG CAIRO_CFLAGS CAIRO_LIBS PANGOFT2_CFLAGS PANGOFT2_LIBS GCLIBS GCINCS GCDEPS GCSPEC JC1GCSPEC GCTESTSPEC USING_BOEHMGC_TRUE USING_BOEHMGC_FALSE USING_NOGC_TRUE USING_NOGC_FALSE THREADLIBS THREADINCS THREADDEPS THREADSPEC THREADLDFLAGS THREADCXXFLAGS USING_POSIX_THREADS_TRUE USING_POSIX_THREADS_FALSE USING_WIN32_THREADS_TRUE USING_WIN32_THREADS_FALSE USING_NO_THREADS_TRUE USING_NO_THREADS_FALSE HASH_SYNC_SPEC USING_GCC_TRUE USING_GCC_FALSE LIBICONV LTLIBICONV GTK_CFLAGS GTK_LIBS GLIB_CFLAGS GLIB_LIBS LIBART_CFLAGS LIBART_LIBS SUPPLY_BACKTRACE_TRUE SUPPLY_BACKTRACE_FALSE GCJH ZIP CLASSPATH_SEPARATOR ac_ct_GCJ ZLIBS SYS_ZLIBS ZINCS DIVIDESPEC CHECKREFSPEC EXCEPTIONSPEC IEEESPEC NATIVE_TRUE NATIVE_FALSE NEEDS_DATA_START_TRUE NEEDS_DATA_START_FALSE GCC_UNWIND_INCLUDE toolexecdir toolexecmainlibdir toolexeclibdir GCJVERSION gxx_include_dir libstdcxx_incdir ALLOCA PERL BACKTRACESPEC SYSDEP_SOURCES here LIBOBJS LTLIBOBJS'\n+ac_subst_vars='SHELL PATH_SEPARATOR PACKAGE_NAME PACKAGE_TARNAME PACKAGE_VERSION PACKAGE_STRING PACKAGE_BUGREPORT exec_prefix prefix program_transform_name bindir sbindir libexecdir datadir sysconfdir sharedstatedir localstatedir libdir includedir oldincludedir infodir mandir build_alias host_alias target_alias DEFS ECHO_C ECHO_N ECHO_T LIBS build build_cpu build_vendor build_os build_subdir host_subdir target_subdir libgcj_basedir host host_cpu host_vendor host_os target target_cpu target_vendor target_os target_noncanonical LN_S mkinstalldirs CC ac_ct_CC EXEEXT OBJEXT CXX ac_ct_CXX CFLAGS CXXFLAGS LDFLAGS INSTALL_PROGRAM INSTALL_SCRIPT INSTALL_DATA CYGPATH_W PACKAGE VERSION ACLOCAL AUTOCONF AUTOMAKE AUTOHEADER MAKEINFO install_sh STRIP ac_ct_STRIP INSTALL_STRIP_PROGRAM mkdir_p AWK SET_MAKE am__leading_dot AMTAR am__tar am__untar DEPDIR am__include am__quote AMDEP_TRUE AMDEP_FALSE AMDEPBACKSLASH CCDEPMODE am__fastdepCC_TRUE am__fastdepCC_FALSE CXXDEPMODE am__fastdepCXX_TRUE am__fastdepCXX_FALSE AS ac_ct_AS AR ac_ct_AR RANLIB ac_ct_RANLIB MAINTAINER_MODE_TRUE MAINTAINER_MODE_FALSE MAINT LIBGCJ_CFLAGS LIBGCJ_CXXFLAGS LIBGCJ_JAVAFLAGS LIBGCJ_LD_SYMBOLIC INCLTDL LIBLTDL DIRLTDL LIBTOOL CXXCPP CPPFLAGS GCJ GCJFLAGS GCJDEPMODE am__fastdepGCJ_TRUE am__fastdepGCJ_FALSE subdirs TESTSUBDIR_TRUE TESTSUBDIR_FALSE JAVA_HOME_SET_TRUE JAVA_HOME_SET_FALSE JAVA_HOME LIBGCJDEBUG INTERPRETER LIBFFI LIBFFIINCS PLATFORM_INNER_NAT_HDRS CPP EGREP USING_WIN32_PLATFORM_TRUE USING_WIN32_PLATFORM_FALSE USING_POSIX_PLATFORM_TRUE USING_POSIX_PLATFORM_FALSE USING_ECOS_PLATFORM_TRUE USING_ECOS_PLATFORM_FALSE USING_DARWIN_CRT_TRUE USING_DARWIN_CRT_FALSE SYSTEMSPEC LIBGCJTESTSPEC ZLIBSPEC ZLIBTESTSPEC X_CFLAGS X_PRE_LIBS X_LIBS X_EXTRA_LIBS TOOLKIT XLIB_AWT_TRUE XLIB_AWT_FALSE GTK_AWT_TRUE GTK_AWT_FALSE GTK_CAIRO_TRUE GTK_CAIRO_FALSE PKG_CONFIG CAIRO_CFLAGS CAIRO_LIBS PANGOFT2_CFLAGS PANGOFT2_LIBS GCLIBS GCINCS GCDEPS GCSPEC JC1GCSPEC GCTESTSPEC USING_BOEHMGC_TRUE USING_BOEHMGC_FALSE USING_NOGC_TRUE USING_NOGC_FALSE THREADLIBS THREADINCS THREADDEPS THREADSPEC THREADLDFLAGS THREADCXXFLAGS USING_POSIX_THREADS_TRUE USING_POSIX_THREADS_FALSE USING_WIN32_THREADS_TRUE USING_WIN32_THREADS_FALSE USING_NO_THREADS_TRUE USING_NO_THREADS_FALSE HASH_SYNC_SPEC USING_GCC_TRUE USING_GCC_FALSE LIBICONV LTLIBICONV GTK_CFLAGS GTK_LIBS GLIB_CFLAGS GLIB_LIBS LIBART_CFLAGS LIBART_LIBS SUPPLY_BACKTRACE_TRUE SUPPLY_BACKTRACE_FALSE GCJH ZIP CLASSPATH_SEPARATOR ac_ct_GCJ ZLIBS SYS_ZLIBS ZINCS DIVIDESPEC CHECKREFSPEC EXCEPTIONSPEC IEEESPEC NATIVE_TRUE NATIVE_FALSE NEEDS_DATA_START_TRUE NEEDS_DATA_START_FALSE GCC_UNWIND_INCLUDE toolexecdir toolexecmainlibdir toolexeclibdir GCJVERSION gxx_include_dir libstdcxx_incdir ALLOCA PERL BACKTRACESPEC SYSDEP_SOURCES here LIBOBJS LTLIBOBJS'\n ac_subst_files=''\n \n # Initialize some variables set by options.\n@@ -865,9 +865,6 @@ Optional Features:\n                           don't set system properties from GCJ_PROPERTIES\n   --enable-hash-synchronization\n                           use global hash table for monitor locks\n-  --enable-libgcj-multifile\n-                 allow compilation of several files at once\n-\n   --enable-libgcj-debug   enable runtime debugging code\n   --enable-gc-debug       include full support for pointer backtracing etc.\n   --enable-interpreter    enable interpreter\n@@ -4829,7 +4826,7 @@ test x\"$pic_mode\" = xno && libtool_flags=\"$libtool_flags --prefer-non-pic\"\n case $host in\n *-*-irix6*)\n   # Find out which ABI we are using.\n-  echo '#line 4832 \"configure\"' > conftest.$ac_ext\n+  echo '#line 4829 \"configure\"' > conftest.$ac_ext\n   if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n   (eval $ac_compile) 2>&5\n   ac_status=$?\n@@ -5725,31 +5722,6 @@ if test -z \"$enable_hash_synchronization\"; then\n    enable_hash_synchronization=$enable_hash_synchronization_default\n fi\n \n-# Do we allow intermodule optimizations (i.e. compiling many files at once)?\n-# Check whether --enable-libgcj-multifile or --disable-libgcj-multifile was given.\n-if test \"${enable_libgcj_multifile+set}\" = set; then\n-  enableval=\"$enable_libgcj_multifile\"\n-  case \"${enableval}\" in\n-  yes) enable_libgcj_multifile=yes ;;\n-  no)  enable_libgcj_multifile=no ;;\n-  *) { { echo \"$as_me:$LINENO: error: bad value ${enableval} for --enable-libgcj-multifile\" >&5\n-echo \"$as_me: error: bad value ${enableval} for --enable-libgcj-multifile\" >&2;}\n-   { (exit 1); exit 1; }; } ;;\n-esac\n-else\n-  enable_libgcj_multifile=no\n-fi;\n-\n-\n-if test \"$enable_libgcj_multifile\" = yes; then\n-  ONESTEP_TRUE=\n-  ONESTEP_FALSE='#'\n-else\n-  ONESTEP_TRUE='#'\n-  ONESTEP_FALSE=\n-fi\n-\n-\n \n # Check whether --with-java-home or --without-java-home was given.\n if test \"${with_java_home+set}\" = set; then\n@@ -5873,7 +5845,7 @@ if test \"${enable_sjlj_exceptions+set}\" = set; then\n   :\n else\n   cat > conftest.$ac_ext << EOF\n-#line 5876 \"configure\"\n+#line 5848 \"configure\"\n struct S { ~S(); };\n void bar();\n void foo()\n@@ -15954,13 +15926,6 @@ echo \"$as_me: error: conditional \\\"TESTSUBDIR\\\" was never defined.\n Usually this means the macro was only invoked conditionally.\" >&2;}\n    { (exit 1); exit 1; }; }\n fi\n-if test -z \"${ONESTEP_TRUE}\" && test -z \"${ONESTEP_FALSE}\"; then\n-  { { echo \"$as_me:$LINENO: error: conditional \\\"ONESTEP\\\" was never defined.\n-Usually this means the macro was only invoked conditionally.\" >&5\n-echo \"$as_me: error: conditional \\\"ONESTEP\\\" was never defined.\n-Usually this means the macro was only invoked conditionally.\" >&2;}\n-   { (exit 1); exit 1; }; }\n-fi\n if test -z \"${JAVA_HOME_SET_TRUE}\" && test -z \"${JAVA_HOME_SET_FALSE}\"; then\n   { { echo \"$as_me:$LINENO: error: conditional \\\"JAVA_HOME_SET\\\" was never defined.\n Usually this means the macro was only invoked conditionally.\" >&5\n@@ -16745,8 +16710,6 @@ s,@am__fastdepGCJ_FALSE@,$am__fastdepGCJ_FALSE,;t t\n s,@subdirs@,$subdirs,;t t\n s,@TESTSUBDIR_TRUE@,$TESTSUBDIR_TRUE,;t t\n s,@TESTSUBDIR_FALSE@,$TESTSUBDIR_FALSE,;t t\n-s,@ONESTEP_TRUE@,$ONESTEP_TRUE,;t t\n-s,@ONESTEP_FALSE@,$ONESTEP_FALSE,;t t\n s,@JAVA_HOME_SET_TRUE@,$JAVA_HOME_SET_TRUE,;t t\n s,@JAVA_HOME_SET_FALSE@,$JAVA_HOME_SET_FALSE,;t t\n s,@JAVA_HOME@,$JAVA_HOME,;t t"}, {"sha": "6e3617f1ca3033377cc12ee54710f68e42400e8c", "filename": "libjava/configure.ac", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34bab46d1a5dbd12110adad9245454c5699bcfa5/libjava%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34bab46d1a5dbd12110adad9245454c5699bcfa5/libjava%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fconfigure.ac?ref=34bab46d1a5dbd12110adad9245454c5699bcfa5", "patch": "@@ -202,17 +202,6 @@ if test -z \"$enable_hash_synchronization\"; then\n    enable_hash_synchronization=$enable_hash_synchronization_default\n fi\n \n-# Do we allow intermodule optimizations (i.e. compiling many files at once)?\n-AC_ARG_ENABLE(libgcj-multifile,\n-  AS_HELP_STRING([--enable-libgcj-multifile]\n-                 [allow compilation of several files at once]),\n-[case \"${enableval}\" in\n-  yes) enable_libgcj_multifile=yes ;;\n-  no)  enable_libgcj_multifile=no ;;\n-  *) AC_MSG_ERROR(bad value ${enableval} for --enable-libgcj-multifile) ;;\n-esac],[enable_libgcj_multifile=no])\n-AM_CONDITIONAL(ONESTEP, test \"$enable_libgcj_multifile\" = yes)\n-\n AC_ARG_WITH(java-home,\n   AS_HELP_STRING([--with-java-home=DIRECTORY],\n                  [value of java.home system property]),"}, {"sha": "c8d0f2112c176cfee03196332caf32f22c25b276", "filename": "libjava/external/Makefile.in", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34bab46d1a5dbd12110adad9245454c5699bcfa5/libjava%2Fexternal%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34bab46d1a5dbd12110adad9245454c5699bcfa5/libjava%2Fexternal%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fexternal%2FMakefile.in?ref=34bab46d1a5dbd12110adad9245454c5699bcfa5", "patch": "@@ -162,8 +162,6 @@ NATIVE_TRUE = @NATIVE_TRUE@\n NEEDS_DATA_START_FALSE = @NEEDS_DATA_START_FALSE@\n NEEDS_DATA_START_TRUE = @NEEDS_DATA_START_TRUE@\n OBJEXT = @OBJEXT@\n-ONESTEP_FALSE = @ONESTEP_FALSE@\n-ONESTEP_TRUE = @ONESTEP_TRUE@\n PACKAGE = @PACKAGE@\n PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@\n PACKAGE_NAME = @PACKAGE_NAME@"}, {"sha": "2b48f46522cd4741d2e22071935ea8832f69567e", "filename": "libjava/external/sax/Makefile.in", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34bab46d1a5dbd12110adad9245454c5699bcfa5/libjava%2Fexternal%2Fsax%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34bab46d1a5dbd12110adad9245454c5699bcfa5/libjava%2Fexternal%2Fsax%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fexternal%2Fsax%2FMakefile.in?ref=34bab46d1a5dbd12110adad9245454c5699bcfa5", "patch": "@@ -171,8 +171,6 @@ NATIVE_TRUE = @NATIVE_TRUE@\n NEEDS_DATA_START_FALSE = @NEEDS_DATA_START_FALSE@\n NEEDS_DATA_START_TRUE = @NEEDS_DATA_START_TRUE@\n OBJEXT = @OBJEXT@\n-ONESTEP_FALSE = @ONESTEP_FALSE@\n-ONESTEP_TRUE = @ONESTEP_TRUE@\n PACKAGE = @PACKAGE@\n PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@\n PACKAGE_NAME = @PACKAGE_NAME@"}, {"sha": "36a544f2bf3afab5add791f86b54be11e797fc34", "filename": "libjava/external/w3c_dom/Makefile.in", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34bab46d1a5dbd12110adad9245454c5699bcfa5/libjava%2Fexternal%2Fw3c_dom%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34bab46d1a5dbd12110adad9245454c5699bcfa5/libjava%2Fexternal%2Fw3c_dom%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fexternal%2Fw3c_dom%2FMakefile.in?ref=34bab46d1a5dbd12110adad9245454c5699bcfa5", "patch": "@@ -171,8 +171,6 @@ NATIVE_TRUE = @NATIVE_TRUE@\n NEEDS_DATA_START_FALSE = @NEEDS_DATA_START_FALSE@\n NEEDS_DATA_START_TRUE = @NEEDS_DATA_START_TRUE@\n OBJEXT = @OBJEXT@\n-ONESTEP_FALSE = @ONESTEP_FALSE@\n-ONESTEP_TRUE = @ONESTEP_TRUE@\n PACKAGE = @PACKAGE@\n PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@\n PACKAGE_NAME = @PACKAGE_NAME@"}, {"sha": "1610b7c7dacaea503a2a5e88196fcb80835100f4", "filename": "libjava/gcj/Makefile.in", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34bab46d1a5dbd12110adad9245454c5699bcfa5/libjava%2Fgcj%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34bab46d1a5dbd12110adad9245454c5699bcfa5/libjava%2Fgcj%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgcj%2FMakefile.in?ref=34bab46d1a5dbd12110adad9245454c5699bcfa5", "patch": "@@ -167,8 +167,6 @@ NATIVE_TRUE = @NATIVE_TRUE@\n NEEDS_DATA_START_FALSE = @NEEDS_DATA_START_FALSE@\n NEEDS_DATA_START_TRUE = @NEEDS_DATA_START_TRUE@\n OBJEXT = @OBJEXT@\n-ONESTEP_FALSE = @ONESTEP_FALSE@\n-ONESTEP_TRUE = @ONESTEP_TRUE@\n PACKAGE = @PACKAGE@\n PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@\n PACKAGE_NAME = @PACKAGE_NAME@"}, {"sha": "be98040e035cee6af9ee15ccdf0979797c9c6c38", "filename": "libjava/include/Makefile.in", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34bab46d1a5dbd12110adad9245454c5699bcfa5/libjava%2Finclude%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34bab46d1a5dbd12110adad9245454c5699bcfa5/libjava%2Finclude%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Finclude%2FMakefile.in?ref=34bab46d1a5dbd12110adad9245454c5699bcfa5", "patch": "@@ -166,8 +166,6 @@ NATIVE_TRUE = @NATIVE_TRUE@\n NEEDS_DATA_START_FALSE = @NEEDS_DATA_START_FALSE@\n NEEDS_DATA_START_TRUE = @NEEDS_DATA_START_TRUE@\n OBJEXT = @OBJEXT@\n-ONESTEP_FALSE = @ONESTEP_FALSE@\n-ONESTEP_TRUE = @ONESTEP_TRUE@\n PACKAGE = @PACKAGE@\n PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@\n PACKAGE_NAME = @PACKAGE_NAME@"}, {"sha": "7da68f81779bb505a691cb4650cc4a5503e41798", "filename": "libjava/testsuite/Makefile.in", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34bab46d1a5dbd12110adad9245454c5699bcfa5/libjava%2Ftestsuite%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34bab46d1a5dbd12110adad9245454c5699bcfa5/libjava%2Ftestsuite%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2FMakefile.in?ref=34bab46d1a5dbd12110adad9245454c5699bcfa5", "patch": "@@ -155,8 +155,6 @@ NATIVE_TRUE = @NATIVE_TRUE@\n NEEDS_DATA_START_FALSE = @NEEDS_DATA_START_FALSE@\n NEEDS_DATA_START_TRUE = @NEEDS_DATA_START_TRUE@\n OBJEXT = @OBJEXT@\n-ONESTEP_FALSE = @ONESTEP_FALSE@\n-ONESTEP_TRUE = @ONESTEP_TRUE@\n PACKAGE = @PACKAGE@\n PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@\n PACKAGE_NAME = @PACKAGE_NAME@"}]}