{"sha": "23141e52419417d34eab8a2976fe417a6041e15e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjMxNDFlNTI0MTk0MTdkMzRlYWI4YTI5NzZmZTQxN2E2MDQxZTE1ZQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2019-01-05T11:14:12Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2019-01-05T11:14:12Z"}, "message": "re PR middle-end/82564 (ICE at -O1 and above: in assign_stack_temp_for_type, at function.c:783)\n\n\tPR middle-end/82564\n\tPR target/88620\n\t* expr.c (expand_assignment): For calls returning VLA structures\n\tif to_rtx is not a MEM, force it into a stack temporary.\n\n\t* gcc.dg/nested-func-12.c: New test.\n\t* gcc.c-torture/compile/pr82564.c: New test.\n\nFrom-SVN: r267595", "tree": {"sha": "21f0ab12fe14cd100df4f2cdc94277ffc8c9cb28", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/21f0ab12fe14cd100df4f2cdc94277ffc8c9cb28"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/23141e52419417d34eab8a2976fe417a6041e15e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/23141e52419417d34eab8a2976fe417a6041e15e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/23141e52419417d34eab8a2976fe417a6041e15e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/23141e52419417d34eab8a2976fe417a6041e15e/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4a3e7df872be0bb7198fed02746ff5e96ff1d584", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a3e7df872be0bb7198fed02746ff5e96ff1d584", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4a3e7df872be0bb7198fed02746ff5e96ff1d584"}], "stats": {"total": 88, "additions": 88, "deletions": 0}, "files": [{"sha": "91c55fae6adcc29aba79e4b03360f18aa1f5f0ff", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23141e52419417d34eab8a2976fe417a6041e15e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23141e52419417d34eab8a2976fe417a6041e15e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=23141e52419417d34eab8a2976fe417a6041e15e", "patch": "@@ -1,5 +1,10 @@\n 2019-01-05  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR middle-end/82564\n+\tPR target/88620\n+\t* expr.c (expand_assignment): For calls returning VLA structures\n+\tif to_rtx is not a MEM, force it into a stack temporary.\n+\n \tPR debug/88635\n \t* dwarf2out.c (const_ok_for_output_1): Reject MINUS that contains\n \tSYMBOL_REF, CODE_LABEL or UNSPEC in subexpressions of second argument."}, {"sha": "818ee2deaa167247849e57247fac0bdcda84b8cc", "filename": "gcc/expr.c", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23141e52419417d34eab8a2976fe417a6041e15e/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23141e52419417d34eab8a2976fe417a6041e15e/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=23141e52419417d34eab8a2976fe417a6041e15e", "patch": "@@ -5254,6 +5254,21 @@ expand_assignment (tree to, tree from, bool nontemporal)\n \t      emit_move_insn (XEXP (to_rtx, 1), read_complex_part (temp, true));\n \t    }\n \t}\n+      /* For calls to functions returning variable length structures, if TO_RTX\n+\t is not a MEM, go through a MEM because we must not create temporaries\n+\t of the VLA type.  */\n+      else if (!MEM_P (to_rtx)\n+\t       && TREE_CODE (from) == CALL_EXPR\n+\t       && COMPLETE_TYPE_P (TREE_TYPE (from))\n+\t       && TREE_CODE (TYPE_SIZE (TREE_TYPE (from))) != INTEGER_CST)\n+\t{\n+\t  rtx temp = assign_stack_temp (GET_MODE (to_rtx),\n+\t\t\t\t\tGET_MODE_SIZE (GET_MODE (to_rtx)));\n+\t  result = store_field (temp, bitsize, bitpos, bitregion_start,\n+\t\t\t\tbitregion_end, mode1, from, get_alias_set (to),\n+\t\t\t\tnontemporal, reversep);\n+\t  emit_move_insn (to_rtx, temp);\n+\t}\n       else\n \t{\n \t  if (MEM_P (to_rtx))"}, {"sha": "0a783ce1b770588511ebaf2d90d299f4bb0fb2ca", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23141e52419417d34eab8a2976fe417a6041e15e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23141e52419417d34eab8a2976fe417a6041e15e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=23141e52419417d34eab8a2976fe417a6041e15e", "patch": "@@ -1,5 +1,10 @@\n 2019-01-05  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR middle-end/82564\n+\tPR target/88620\n+\t* gcc.dg/nested-func-12.c: New test.\n+\t* gcc.c-torture/compile/pr82564.c: New test.\n+\n \tPR debug/88635\n \t* gcc.dg/debug/dwarf2/pr88635.c: New test.\n "}, {"sha": "039f55a3985874caa85ac43d968dc667745391db", "filename": "gcc/testsuite/gcc.c-torture/compile/pr82564.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23141e52419417d34eab8a2976fe417a6041e15e/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr82564.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23141e52419417d34eab8a2976fe417a6041e15e/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr82564.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr82564.c?ref=23141e52419417d34eab8a2976fe417a6041e15e", "patch": "@@ -0,0 +1,15 @@\n+/* PR middle-end/82564 */\n+/* { dg-require-effective-target alloca } */\n+\n+int\n+main ()\n+{\n+  int t = 8, i;\n+  typedef struct { char v[t]; } B; \n+  B a, b;\n+  B __attribute__ ((noinline)) f () { return b; }\n+  for (i = 0; i < 8; i++)\n+    b.v[i] = i;\n+  a = f ();\n+  return 0;\n+}"}, {"sha": "d617d7e4487393f276788f8a1d572a410c242365", "filename": "gcc/testsuite/gcc.dg/nested-func-12.c", "status": "added", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23141e52419417d34eab8a2976fe417a6041e15e/gcc%2Ftestsuite%2Fgcc.dg%2Fnested-func-12.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23141e52419417d34eab8a2976fe417a6041e15e/gcc%2Ftestsuite%2Fgcc.dg%2Fnested-func-12.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fnested-func-12.c?ref=23141e52419417d34eab8a2976fe417a6041e15e", "patch": "@@ -0,0 +1,48 @@\n+/* PR target/88620 */\n+/* { dg-do run } */\n+/* { dg-options \"-Ofast --param ipa-cp-eval-threshold=0 -fno-guess-branch-probability -fno-inline-small-functions\" } */\n+/* { dg-require-effective-target alloca } */\n+\n+void\n+foo (int n)\n+{\n+  struct S { int a[n]; };\n+\n+  struct S\n+  fn (void)\n+  {\n+    struct S s;\n+    s.a[0] = 42;\n+    return s;\n+  }\n+\n+  auto struct S\n+  fn2 (void)\n+  {\n+    return fn ();\n+  }\n+\n+  struct S x;\n+  fn ();\n+  fn2 ();\n+  x = fn ();\n+\n+  if (x.a[0] != 42)\n+    __builtin_abort ();\n+\n+  if (fn ().a[0] != 42)\n+    __builtin_abort ();\n+\n+  __typeof__ (fn ()) *p = &x;\n+  if (p->a[0] != 42)\n+    __builtin_abort ();\n+\n+  if (fn2 ().a[0] != 42)\n+    __builtin_abort ();\n+}\n+\n+int\n+main (void)\n+{\n+  foo (1);\n+}"}]}