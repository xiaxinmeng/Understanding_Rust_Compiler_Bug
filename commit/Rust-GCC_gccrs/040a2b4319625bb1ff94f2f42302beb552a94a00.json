{"sha": "040a2b4319625bb1ff94f2f42302beb552a94a00", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDQwYTJiNDMxOTYyNWJiMWZmOTRmMmY0MjMwMmJlYjU1MmE5NGEwMA==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2014-09-02T11:19:44Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2014-09-02T11:19:44Z"}, "message": "2014-09-02  Segher Boessenkool  <segher@kernel.crashing.org>\n\n\t* config/rs6000/rs6000.md (mulsi3, *mulsi3_internal1,\n\t*mulsi3_internal2, and two splitters): Delete.\n\t(muldi3, *muldi3_internal1, *muldi3_internal2, and two splitters):\n\tDelete.\n\t(mul<mode>3, mul<mode>3_dot, mul<mode>3_dot2): New.\n\nFrom-SVN: r214813", "tree": {"sha": "6e878be83c03db14e3150139419e8144d15e0740", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6e878be83c03db14e3150139419e8144d15e0740"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/040a2b4319625bb1ff94f2f42302beb552a94a00", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/040a2b4319625bb1ff94f2f42302beb552a94a00", "html_url": "https://github.com/Rust-GCC/gccrs/commit/040a2b4319625bb1ff94f2f42302beb552a94a00", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/040a2b4319625bb1ff94f2f42302beb552a94a00/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3f734f66fb4f5ad20584f6639aadb22df1cfa842", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f734f66fb4f5ad20584f6639aadb22df1cfa842", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3f734f66fb4f5ad20584f6639aadb22df1cfa842"}], "stats": {"total": 175, "additions": 49, "deletions": 126}, "files": [{"sha": "10c3554ee9625a1551a520a74a01b1b6f1ed8a22", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/040a2b4319625bb1ff94f2f42302beb552a94a00/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/040a2b4319625bb1ff94f2f42302beb552a94a00/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=040a2b4319625bb1ff94f2f42302beb552a94a00", "patch": "@@ -1,3 +1,11 @@\n+2014-09-02  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\t* config/rs6000/rs6000.md (mulsi3, *mulsi3_internal1,\n+\t*mulsi3_internal2, and two splitters): Delete.\n+\t(muldi3, *muldi3_internal1, *muldi3_internal2, and two splitters):\n+\tDelete.\n+\t(mul<mode>3, mul<mode>3_dot, mul<mode>3_dot2): New.\n+\n 2014-09-02  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/62695"}, {"sha": "d903e4a0472346cbc2b5d66ee48e6981453266b0", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 41, "deletions": 126, "changes": 167, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/040a2b4319625bb1ff94f2f42302beb552a94a00/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/040a2b4319625bb1ff94f2f42302beb552a94a00/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=040a2b4319625bb1ff94f2f42302beb552a94a00", "patch": "@@ -2701,79 +2701,70 @@\n   DONE;\n }\")\n \n-(define_insn \"mulsi3\"\n-  [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r,r\")\n-\t(mult:SI (match_operand:SI 1 \"gpc_reg_operand\" \"%r,r\")\n-\t\t (match_operand:SI 2 \"reg_or_short_operand\" \"r,I\")))]\n+\n+(define_insn \"mul<mode>3\"\n+  [(set (match_operand:GPR 0 \"gpc_reg_operand\" \"=r,r\")\n+\t(mult:GPR (match_operand:GPR 1 \"gpc_reg_operand\" \"%r,r\")\n+\t\t  (match_operand:GPR 2 \"reg_or_short_operand\" \"r,I\")))]\n   \"\"\n   \"@\n-   mullw %0,%1,%2\n+   mull<wd> %0,%1,%2\n    mulli %0,%1,%2\"\n    [(set_attr \"type\" \"mul\")\n     (set (attr \"size\")\n-      (cond [(match_operand:SI 2 \"s8bit_cint_operand\" \"\")\n+      (cond [(match_operand:GPR 2 \"s8bit_cint_operand\" \"\")\n \t\t(const_string \"8\")\n-             (match_operand:SI 2 \"short_cint_operand\" \"\")\n+             (match_operand:GPR 2 \"short_cint_operand\" \"\")\n \t\t(const_string \"16\")]\n-\t(const_string \"32\")))])\n+\t(const_string \"<bits>\")))])\n \n-(define_insn \"*mulsi3_internal1\"\n-  [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x,?y\")\n-\t(compare:CC (mult:SI (match_operand:SI 1 \"gpc_reg_operand\" \"%r,r\")\n-\t\t\t     (match_operand:SI 2 \"gpc_reg_operand\" \"r,r\"))\n+(define_insn_and_split \"*mul<mode>3_dot\"\n+  [(set (match_operand:CC 3 \"cc_reg_operand\" \"=x,?y\")\n+\t(compare:CC (mult:GPR (match_operand:GPR 1 \"gpc_reg_operand\" \"r,r\")\n+\t\t\t      (match_operand:GPR 2 \"gpc_reg_operand\" \"r,r\"))\n \t\t    (const_int 0)))\n-   (clobber (match_scratch:SI 3 \"=r,r\"))]\n-  \"TARGET_32BIT\"\n+   (clobber (match_scratch:GPR 0 \"=r,r\"))]\n+  \"<MODE>mode == Pmode && rs6000_gen_cell_microcode\"\n   \"@\n-   mullw. %3,%1,%2\n+   mull<wd>. %0,%1,%2\n    #\"\n+  \"&& reload_completed && cc_reg_not_cr0_operand (operands[3], CCmode)\"\n+  [(set (match_dup 0)\n+\t(mult:GPR (match_dup 1)\n+\t\t  (match_dup 2)))\n+   (set (match_dup 3)\n+\t(compare:CC (match_dup 0)\n+\t\t    (const_int 0)))]\n+  \"\"\n   [(set_attr \"type\" \"mul\")\n+   (set_attr \"size\" \"<bits>\")\n    (set_attr \"dot\" \"yes\")\n    (set_attr \"length\" \"4,8\")])\n \n-(define_split\n-  [(set (match_operand:CC 0 \"cc_reg_not_micro_cr0_operand\" \"\")\n-\t(compare:CC (mult:SI (match_operand:SI 1 \"gpc_reg_operand\" \"\")\n-\t\t\t     (match_operand:SI 2 \"gpc_reg_operand\" \"\"))\n-\t\t    (const_int 0)))\n-   (clobber (match_scratch:SI 3 \"\"))]\n-  \"TARGET_32BIT && reload_completed\"\n-  [(set (match_dup 3)\n-\t(mult:SI (match_dup 1) (match_dup 2)))\n-   (set (match_dup 0)\n-\t(compare:CC (match_dup 3)\n-\t\t    (const_int 0)))]\n-  \"\")\n-\n-(define_insn \"*mulsi3_internal2\"\n+(define_insn_and_split \"*mul<mode>3_dot2\"\n   [(set (match_operand:CC 3 \"cc_reg_operand\" \"=x,?y\")\n-\t(compare:CC (mult:SI (match_operand:SI 1 \"gpc_reg_operand\" \"%r,r\")\n-\t\t\t     (match_operand:SI 2 \"gpc_reg_operand\" \"r,r\"))\n+\t(compare:CC (mult:GPR (match_operand:GPR 1 \"gpc_reg_operand\" \"r,r\")\n+\t\t\t      (match_operand:GPR 2 \"gpc_reg_operand\" \"r,r\"))\n \t\t    (const_int 0)))\n-   (set (match_operand:SI 0 \"gpc_reg_operand\" \"=r,r\")\n-\t(mult:SI (match_dup 1) (match_dup 2)))]\n-  \"TARGET_32BIT\"\n+   (set (match_operand:GPR 0 \"gpc_reg_operand\" \"=r,r\")\n+\t(mult:GPR (match_dup 1)\n+\t\t  (match_dup 2)))]\n+  \"<MODE>mode == Pmode && rs6000_gen_cell_microcode\"\n   \"@\n-   mullw. %0,%1,%2\n+   mull<wd>. %0,%1,%2\n    #\"\n-  [(set_attr \"type\" \"mul\")\n-   (set_attr \"dot\" \"yes\")\n-   (set_attr \"length\" \"4,8\")])\n-\n-(define_split\n-  [(set (match_operand:CC 3 \"cc_reg_not_micro_cr0_operand\" \"\")\n-\t(compare:CC (mult:SI (match_operand:SI 1 \"gpc_reg_operand\" \"\")\n-\t\t\t     (match_operand:SI 2 \"gpc_reg_operand\" \"\"))\n-\t\t    (const_int 0)))\n-   (set (match_operand:SI 0 \"gpc_reg_operand\" \"\")\n-\t(mult:SI (match_dup 1) (match_dup 2)))]\n-  \"TARGET_32BIT && reload_completed\"\n+  \"&& reload_completed && cc_reg_not_cr0_operand (operands[3], CCmode)\"\n   [(set (match_dup 0)\n-\t(mult:SI (match_dup 1) (match_dup 2)))\n+\t(mult:GPR (match_dup 1)\n+\t\t  (match_dup 2)))\n    (set (match_dup 3)\n \t(compare:CC (match_dup 0)\n \t\t    (const_int 0)))]\n-  \"\")\n+  \"\"\n+  [(set_attr \"type\" \"mul\")\n+   (set_attr \"size\" \"<bits>\")\n+   (set_attr \"dot\" \"yes\")\n+   (set_attr \"length\" \"4,8\")])\n \n \n (define_insn \"udiv<mode>3\"\n@@ -6767,82 +6758,6 @@\n \f\n ;; PowerPC64 DImode operations.\n \n-(define_insn \"muldi3\"\n-  [(set (match_operand:DI 0 \"gpc_reg_operand\" \"=r,r\")\n-        (mult:DI (match_operand:DI 1 \"gpc_reg_operand\" \"%r,r\")\n-                 (match_operand:DI 2 \"reg_or_short_operand\" \"r,I\")))]\n-  \"TARGET_POWERPC64\"\n-  \"@\n-   mulld %0,%1,%2\n-   mulli %0,%1,%2\"\n-   [(set_attr \"type\" \"mul\")\n-    (set (attr \"size\")\n-      (cond [(match_operand:SI 2 \"s8bit_cint_operand\" \"\")\n-\t\t(const_string \"8\")\n-\t     (match_operand:SI 2 \"short_cint_operand\" \"\")\n-\t\t(const_string \"16\")]\n-\t(const_string \"64\")))])\n-\n-(define_insn \"*muldi3_internal1\"\n-  [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x,?y\")\n-\t(compare:CC (mult:DI (match_operand:DI 1 \"gpc_reg_operand\" \"%r,r\")\n-\t\t\t     (match_operand:DI 2 \"gpc_reg_operand\" \"r,r\"))\n-\t\t    (const_int 0)))\n-   (clobber (match_scratch:DI 3 \"=r,r\"))]\n-  \"TARGET_POWERPC64\"\n-  \"@\n-   mulld. %3,%1,%2\n-   #\"\n-  [(set_attr \"type\" \"mul\")\n-   (set_attr \"size\" \"64\")\n-   (set_attr \"dot\" \"yes\")\n-   (set_attr \"length\" \"4,8\")])\n-\n-(define_split\n-  [(set (match_operand:CC 0 \"cc_reg_not_cr0_operand\" \"\")\n-\t(compare:CC (mult:DI (match_operand:DI 1 \"gpc_reg_operand\" \"\")\n-\t\t\t     (match_operand:DI 2 \"gpc_reg_operand\" \"\"))\n-\t\t    (const_int 0)))\n-   (clobber (match_scratch:DI 3 \"\"))]\n-  \"TARGET_POWERPC64 && reload_completed\"\n-  [(set (match_dup 3)\n-\t(mult:DI (match_dup 1) (match_dup 2)))\n-   (set (match_dup 0)\n-\t(compare:CC (match_dup 3)\n-\t\t    (const_int 0)))]\n-  \"\")\n-\n-(define_insn \"*muldi3_internal2\"\n-  [(set (match_operand:CC 3 \"cc_reg_operand\" \"=x,?y\")\n-\t(compare:CC (mult:DI (match_operand:DI 1 \"gpc_reg_operand\" \"%r,r\")\n-\t\t\t     (match_operand:DI 2 \"gpc_reg_operand\" \"r,r\"))\n-\t\t    (const_int 0)))\n-   (set (match_operand:DI 0 \"gpc_reg_operand\" \"=r,r\")\n-\t(mult:DI (match_dup 1) (match_dup 2)))]\n-  \"TARGET_POWERPC64\"\n-  \"@\n-   mulld. %0,%1,%2\n-   #\"\n-  [(set_attr \"type\" \"mul\")\n-   (set_attr \"size\" \"64\")\n-   (set_attr \"dot\" \"yes\")\n-   (set_attr \"length\" \"4,8\")])\n-\n-(define_split\n-  [(set (match_operand:CC 3 \"cc_reg_not_micro_cr0_operand\" \"\")\n-\t(compare:CC (mult:DI (match_operand:DI 1 \"gpc_reg_operand\" \"\")\n-\t\t\t     (match_operand:DI 2 \"gpc_reg_operand\" \"\"))\n-\t\t    (const_int 0)))\n-   (set (match_operand:DI 0 \"gpc_reg_operand\" \"\")\n-\t(mult:DI (match_dup 1) (match_dup 2)))]\n-  \"TARGET_POWERPC64 && reload_completed\"\n-  [(set (match_dup 0)\n-\t(mult:DI (match_dup 1) (match_dup 2)))\n-   (set (match_dup 3)\n-\t(compare:CC (match_dup 0)\n-\t\t    (const_int 0)))]\n-  \"\")\n-\n (define_insn \"smuldi3_highpart\"\n   [(set (match_operand:DI 0 \"gpc_reg_operand\" \"=r\")\n \t(truncate:DI"}]}