{"sha": "59f09fd5a48046ceba064bde2f230386fbc3700f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTlmMDlmZDVhNDgwNDZjZWJhMDY0YmRlMmYyMzAzODZmYmMzNzAwZg==", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-06-15T08:48:48Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-06-15T08:48:48Z"}, "message": "Merge #494\n\n494: replace analysis dir with lint dir and rename liveness to marklive r=philberty a=thomasyonug\n\nreplace analysis dir with lint dir and rename liveness to marklive\n\nCo-authored-by: Thomas Young <wenzhang5800@gmail.com>", "tree": {"sha": "edd550ab7d6d3c26c36603c8861d4e758649e4d4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/edd550ab7d6d3c26c36603c8861d4e758649e4d4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/59f09fd5a48046ceba064bde2f230386fbc3700f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgyGlwCRBK7hj4Ov3rIwAAxTYIAAJwBicCX7Adsb6B3+InyqEp\nqpxS8SDtrN0XUpxNyHlGvDM0AhyCkHE0Tkjq9MFTt1dQ88Uc7T/KG51XKquYUjqT\nvK59U61Qyi16qNEQ7yvss95nulMJN1f288YA5vlLl/9S7CzGUSm4eTptWeOq8EuV\n41G3+golM+MRYO7h5hz4WgMFf36/FOhWYLR39EdSoCB4Pm3Go51oXO/k+TF3WO7M\nLRQJ6b5wYLTtT0jCXUjirC1eouoLjixxhhuH2FDSTA3hUzo4jGV51/VFJ+789ZjZ\nJLlXruuyN7mbwJ94RbIRfyXqQIVsjetCgVXnveiCI2KedsjKaSaOC1xRYqKdOBQ=\n=JE12\n-----END PGP SIGNATURE-----\n", "payload": "tree edd550ab7d6d3c26c36603c8861d4e758649e4d4\nparent 59f8d7a2343cd326e905be618c820387cf13afb7\nparent ba9728b401879691c81b8315e97f82a7c72826c8\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1623746928 +0000\ncommitter GitHub <noreply@github.com> 1623746928 +0000\n\nMerge #494\n\n494: replace analysis dir with lint dir and rename liveness to marklive r=philberty a=thomasyonug\n\nreplace analysis dir with lint dir and rename liveness to marklive\n\nCo-authored-by: Thomas Young <wenzhang5800@gmail.com>\n"}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/59f09fd5a48046ceba064bde2f230386fbc3700f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/59f09fd5a48046ceba064bde2f230386fbc3700f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/59f09fd5a48046ceba064bde2f230386fbc3700f/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "59f8d7a2343cd326e905be618c820387cf13afb7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/59f8d7a2343cd326e905be618c820387cf13afb7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/59f8d7a2343cd326e905be618c820387cf13afb7"}, {"sha": "ba9728b401879691c81b8315e97f82a7c72826c8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba9728b401879691c81b8315e97f82a7c72826c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ba9728b401879691c81b8315e97f82a7c72826c8"}], "stats": {"total": 65, "additions": 32, "deletions": 33}, "files": [{"sha": "794c7a3f8c9e095c1bf226feaf6048e8d76a1454", "filename": "gcc/rust/Make-lang.in", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59f09fd5a48046ceba064bde2f230386fbc3700f/gcc%2Frust%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59f09fd5a48046ceba064bde2f230386fbc3700f/gcc%2Frust%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2FMake-lang.in?ref=59f09fd5a48046ceba064bde2f230386fbc3700f", "patch": "@@ -80,7 +80,7 @@ GRS_OBJS = \\\n     rust/rust-tyty.o \\\n     rust/rust-tyctx.o \\\n     rust/rust-hir-const-fold.o \\\n-    rust/rust-hir-liveness.o \\\n+    rust/rust-lint-marklive.o \\\n     $(END)\n # removed object files from here\n \n@@ -236,7 +236,7 @@ RUST_INCLUDES = -I $(srcdir)/rust \\\n \t-I $(srcdir)/rust/resolve \\\n \t-I $(srcdir)/rust/util \\\n \t-I $(srcdir)/rust/typecheck \\\n-\t-I $(srcdir)/rust/analysis\n+\t-I $(srcdir)/rust/lint\n \n # add files that require cross-folder includes - currently rust-lang.o, rust-lex.o\n CFLAGS-rust/rust-lang.o += $(RUST_INCLUDES)\n@@ -297,8 +297,8 @@ rust/%.o: rust/typecheck/%.cc\n \t$(COMPILE) $(RUST_CXXFLAGS) $(RUST_INCLUDES) $<\n \t$(POSTCOMPILE)\n \n-# build rust/analysis files in rust folder\n-rust/%.o: rust/analysis/%.cc\n+# build rust/lint files in rust folder\n+rust/%.o: rust/lint/%.cc\n \t$(COMPILE) $(RUST_CXXFLAGS) $(RUST_INCLUDES) $<\n \t$(POSTCOMPILE)\n "}, {"sha": "dda85a77f542435025860a23867683bb3daaf92a", "filename": "gcc/rust/lint/rust-lint-marklive-base.h", "status": "renamed", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59f09fd5a48046ceba064bde2f230386fbc3700f/gcc%2Frust%2Flint%2Frust-lint-marklive-base.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59f09fd5a48046ceba064bde2f230386fbc3700f/gcc%2Frust%2Flint%2Frust-lint-marklive-base.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Flint%2Frust-lint-marklive-base.h?ref=59f09fd5a48046ceba064bde2f230386fbc3700f", "patch": "@@ -20,19 +20,18 @@\n #define RUST_HIR_LIVENESS_BASE\n \n #include \"rust-diagnostics.h\"\n-#include \"rust-hir-liveness.h\"\n-#include \"rust-hir-liveness-base.h\"\n+#include \"rust-lint-marklive.h\"\n+#include \"rust-lint-marklive-base.h\"\n #include \"rust-hir-visitor.h\"\n #include \"rust-hir-map.h\"\n \n namespace Rust {\n namespace Analysis {\n \n-class LivenessBase : public HIR::HIRVisitor\n+class MarkLiveBase : public HIR::HIRVisitor\n {\n public:\n-  virtual ~LivenessBase () {}\n-\n+  virtual ~MarkLiveBase () {}\n   virtual void visit (HIR::IdentifierExpr &) override {}\n   virtual void visit (HIR::Lifetime &) override {}\n   virtual void visit (HIR::LifetimeParam &) override {}\n@@ -197,7 +196,7 @@ class LivenessBase : public HIR::HIRVisitor\n   virtual void visit (HIR::BareFunctionType &) override {}\n \n protected:\n-  LivenessBase () : mappings (Analysis::Mappings::get ()) {}\n+  MarkLiveBase () : mappings (Analysis::Mappings::get ()) {}\n \n   Analysis::Mappings *mappings;\n };", "previous_filename": "gcc/rust/analysis/rust-hir-liveness-base.h"}, {"sha": "56e3cc5e14ffa54bf17a3be92bc95f826529cc9c", "filename": "gcc/rust/lint/rust-lint-marklive.cc", "status": "renamed", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59f09fd5a48046ceba064bde2f230386fbc3700f/gcc%2Frust%2Flint%2Frust-lint-marklive.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59f09fd5a48046ceba064bde2f230386fbc3700f/gcc%2Frust%2Flint%2Frust-lint-marklive.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Flint%2Frust-lint-marklive.cc?ref=59f09fd5a48046ceba064bde2f230386fbc3700f", "patch": "@@ -16,16 +16,16 @@\n // along with GCC; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n-#include \"rust-hir-liveness.h\"\n+#include \"rust-lint-marklive.h\"\n #include \"rust-hir-full.h\"\n #include \"rust-name-resolver.h\"\n \n namespace Rust {\n namespace Analysis {\n \n-class FindEntryPoint : public LivenessBase\n+class FindEntryPoint : public MarkLiveBase\n {\n-  using Rust::Analysis::LivenessBase::visit;\n+  using Rust::Analysis::MarkLiveBase::visit;\n \n public:\n   static std::vector<HirId> find (HIR::Crate &crate)\n@@ -48,22 +48,22 @@ class FindEntryPoint : public LivenessBase\n   }\n \n private:\n-  FindEntryPoint () : LivenessBase () {}\n+  FindEntryPoint () : MarkLiveBase () {}\n   std::vector<HirId> entryPoints;\n   std::vector<HirId> getEntryPoint () { return entryPoints; }\n };\n \n std::set<HirId>\n-Liveness::Analysis (HIR::Crate &crate)\n+MarkLive::Analysis (HIR::Crate &crate)\n {\n-  Liveness liveness (FindEntryPoint::find (crate));\n-  liveness.go (crate);\n+  MarkLive marklive (FindEntryPoint::find (crate));\n+  marklive.go (crate);\n \n-  return liveness.liveSymbols;\n+  return marklive.liveSymbols;\n }\n \n void\n-Liveness::go (HIR::Crate &crate)\n+MarkLive::go (HIR::Crate &crate)\n {\n   CrateNum crateNum = crate.get_mappings ().get_crate_num ();\n   while (!worklist.empty ())\n@@ -89,7 +89,7 @@ Liveness::go (HIR::Crate &crate)\n }\n \n void\n-Liveness::visit (HIR::PathInExpression &expr)\n+MarkLive::visit (HIR::PathInExpression &expr)\n {\n   NodeId ast_node_id = expr.get_mappings ().get_nodeid ();\n   NodeId ref_node_id = UNKNOWN_NODEID;\n@@ -119,7 +119,7 @@ Liveness::visit (HIR::PathInExpression &expr)\n }\n \n void\n-Liveness::visit (HIR::IdentifierExpr &expr)\n+MarkLive::visit (HIR::IdentifierExpr &expr)\n {\n   NodeId ast_node_id = expr.get_mappings ().get_nodeid ();\n ", "previous_filename": "gcc/rust/analysis/rust-hir-liveness.cc"}, {"sha": "abc1ed3e8cefe3ef97b8e8e4ed6212f113ab13f8", "filename": "gcc/rust/lint/rust-lint-marklive.h", "status": "renamed", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59f09fd5a48046ceba064bde2f230386fbc3700f/gcc%2Frust%2Flint%2Frust-lint-marklive.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59f09fd5a48046ceba064bde2f230386fbc3700f/gcc%2Frust%2Flint%2Frust-lint-marklive.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Flint%2Frust-lint-marklive.h?ref=59f09fd5a48046ceba064bde2f230386fbc3700f", "patch": "@@ -19,18 +19,18 @@\n #ifndef RUST_HIR_LIVENESS\n #define RUST_HIR_LIVENESS\n \n+#include <set>\n #include \"rust-hir-full-decls.h\"\n #include \"rust-hir-map.h\"\n-#include \"rust-hir-liveness-base.h\"\n+#include \"rust-lint-marklive-base.h\"\n #include \"rust-name-resolver.h\"\n-#include <set>\n \n namespace Rust {\n namespace Analysis {\n \n-class Liveness : public LivenessBase\n+class MarkLive : public MarkLiveBase\n {\n-  using Rust::Analysis::LivenessBase::visit;\n+  using Rust::Analysis::MarkLiveBase::visit;\n \n public:\n   static std::set<HirId> Analysis (HIR::Crate &crate);\n@@ -142,7 +142,7 @@ class Liveness : public LivenessBase\n   std::set<HirId> scannedSymbols;\n   Analysis::Mappings *mappings;\n   Resolver::Resolver *resolver;\n-  Liveness (std::vector<HirId> worklist)\n+  MarkLive (std::vector<HirId> worklist)\n     : worklist (worklist), mappings (Analysis::Mappings::get ()),\n       resolver (Resolver::Resolver::get ()){};\n };", "previous_filename": "gcc/rust/analysis/rust-hir-liveness.h"}, {"sha": "10edbbc2a157d9b714908698b4f7b92ed3053ea2", "filename": "gcc/rust/lint/rust-lint-scan-deadcode.h", "status": "renamed", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59f09fd5a48046ceba064bde2f230386fbc3700f/gcc%2Frust%2Flint%2Frust-lint-scan-deadcode.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59f09fd5a48046ceba064bde2f230386fbc3700f/gcc%2Frust%2Flint%2Frust-lint-scan-deadcode.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Flint%2Frust-lint-scan-deadcode.h?ref=59f09fd5a48046ceba064bde2f230386fbc3700f", "patch": "@@ -19,19 +19,19 @@\n #ifndef RUST_HIR_SCAN_DEADCODE\n #define RUST_HIR_SCAN_DEADCODE\n \n+#include <set>\n #include \"rust-hir-full-decls.h\"\n #include \"rust-hir-map.h\"\n-#include \"rust-hir-liveness-base.h\"\n+#include \"rust-lint-marklive-base.h\"\n #include \"rust-name-resolver.h\"\n #include \"rust-diagnostics.h\"\n-#include <set>\n \n namespace Rust {\n namespace Analysis {\n \n-class ScanDeadcode : public LivenessBase\n+class ScanDeadcode : public MarkLiveBase\n {\n-  using Rust::Analysis::LivenessBase::visit;\n+  using Rust::Analysis::MarkLiveBase::visit;\n \n public:\n   static void Scan (HIR::Crate &crate, std::set<HirId> live_symbols)", "previous_filename": "gcc/rust/analysis/rust-hir-scan-deadcode.h"}, {"sha": "e1938fa388af2962c563dbb9674593e4cc8b4ef6", "filename": "gcc/rust/rust-session-manager.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59f09fd5a48046ceba064bde2f230386fbc3700f/gcc%2Frust%2Frust-session-manager.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59f09fd5a48046ceba064bde2f230386fbc3700f/gcc%2Frust%2Frust-session-manager.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Frust-session-manager.cc?ref=59f09fd5a48046ceba064bde2f230386fbc3700f", "patch": "@@ -49,8 +49,8 @@\n #include \"rust-ast-resolve.h\"\n #include \"rust-ast-lower.h\"\n #include \"rust-hir-type-check.h\"\n-#include \"rust-hir-liveness.h\"\n-#include \"rust-hir-scan-deadcode.h\"\n+#include \"rust-lint-marklive.h\"\n+#include \"rust-lint-scan-deadcode.h\"\n #include \"rust-tycheck-dump.h\"\n #include \"rust-ast-resolve-unused.h\"\n #include \"rust-hir-const-fold.h\"\n@@ -573,7 +573,7 @@ Session::parse_file (const char *filename)\n     }\n \n   // liveness analysis\n-  std::set<HirId> live_symbols = Analysis::Liveness::Analysis (hir);\n+  std::set<HirId> live_symbols = Analysis::MarkLive::Analysis (hir);\n \n   if (saw_errors ())\n     return;"}]}