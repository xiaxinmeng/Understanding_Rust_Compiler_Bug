{"sha": "dabd47e701a73fca7f4e2495b5a86704bf0a1855", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGFiZDQ3ZTcwMWE3M2ZjYTdmNGUyNDk1YjVhODY3MDRiZjBhMTg1NQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2011-03-17T12:36:04Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2011-03-17T12:36:04Z"}, "message": "re PR rtl-optimization/48141 (DSE compile time hog)\n\n\tPR rtl-optimization/48141\n\t* params.def (PARAM_MAX_DSE_ACTIVE_LOCAL_STORES): New.\n\t* dse.c: Include params.h.\n\t(active_local_stores_len): New variable.\n\t(add_wild_read, dse_step1): Clear it when setting active_local_stores\n\tto NULL.\n\t(record_store, check_mem_read_rtx): Decrease it when removing\n\tfrom the chain.\n\t(scan_insn): Likewise.  Increase it when adding to chain, if it\n\treaches PARAM_MAX_DSE_ACTIVE_LOCAL_STORES limit, set to 1 and\n\tset active_local_stores to NULL before the addition.\n\t* Makefile.in (dse.o): Depend on $(PARAMS_H).\n\nFrom-SVN: r171090", "tree": {"sha": "c09b459b96bf1b799f0dc616fcf477cc1bb299cd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c09b459b96bf1b799f0dc616fcf477cc1bb299cd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dabd47e701a73fca7f4e2495b5a86704bf0a1855", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dabd47e701a73fca7f4e2495b5a86704bf0a1855", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dabd47e701a73fca7f4e2495b5a86704bf0a1855", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dabd47e701a73fca7f4e2495b5a86704bf0a1855/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1b6fa86002afb4a8f28ab40afc812ec5e73ccba6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b6fa86002afb4a8f28ab40afc812ec5e73ccba6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1b6fa86002afb4a8f28ab40afc812ec5e73ccba6"}], "stats": {"total": 43, "additions": 42, "deletions": 1}, "files": [{"sha": "fce8c0ab3876f6275c199ae4d8ad2b46e725b2cb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dabd47e701a73fca7f4e2495b5a86704bf0a1855/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dabd47e701a73fca7f4e2495b5a86704bf0a1855/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=dabd47e701a73fca7f4e2495b5a86704bf0a1855", "patch": "@@ -1,5 +1,18 @@\n 2011-03-17  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR rtl-optimization/48141\n+\t* params.def (PARAM_MAX_DSE_ACTIVE_LOCAL_STORES): New.\n+\t* dse.c: Include params.h.\n+\t(active_local_stores_len): New variable.\n+\t(add_wild_read, dse_step1): Clear it when setting active_local_stores\n+\tto NULL.\n+\t(record_store, check_mem_read_rtx): Decrease it when removing\n+\tfrom the chain.\n+\t(scan_insn): Likewise.  Increase it when adding to chain, if it\n+\treaches PARAM_MAX_DSE_ACTIVE_LOCAL_STORES limit, set to 1 and\n+\tset active_local_stores to NULL before the addition.\n+\t* Makefile.in (dse.o): Depend on $(PARAMS_H).\n+\n \tPR rtl-optimization/48141\n \t* dse.c (record_store): If no positions are needed in an insn\n \tthat cannot be deleted, at least unchain it from active_local_stores."}, {"sha": "97133db78e2c84d5e644c0edafc41790deacab3f", "filename": "gcc/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dabd47e701a73fca7f4e2495b5a86704bf0a1855/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dabd47e701a73fca7f4e2495b5a86704bf0a1855/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=dabd47e701a73fca7f4e2495b5a86704bf0a1855", "patch": "@@ -3070,7 +3070,7 @@ dse.o : dse.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    $(TREE_H) $(TM_P_H) $(REGS_H) hard-reg-set.h $(FLAGS_H) insn-config.h \\\n    $(RECOG_H) $(EXPR_H) $(DF_H) cselib.h $(DBGCNT_H) $(TIMEVAR_H) \\\n    $(TREE_PASS_H) alloc-pool.h $(ALIAS_H) dse.h $(OPTABS_H) $(TARGET_H) \\\n-   $(BITMAP_H)\n+   $(BITMAP_H) $(PARAMS_H)\n fwprop.o : fwprop.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    $(DIAGNOSTIC_CORE_H) insn-config.h $(RECOG_H) $(FLAGS_H) $(OBSTACK_H) $(BASIC_BLOCK_H) \\\n    output.h $(DF_H) alloc-pool.h $(TIMEVAR_H) $(TREE_PASS_H) $(TARGET_H) \\"}, {"sha": "a15b7351fcc163ee5e63054879fdde27b90e45ea", "filename": "gcc/dse.c", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dabd47e701a73fca7f4e2495b5a86704bf0a1855/gcc%2Fdse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dabd47e701a73fca7f4e2495b5a86704bf0a1855/gcc%2Fdse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdse.c?ref=dabd47e701a73fca7f4e2495b5a86704bf0a1855", "patch": "@@ -47,6 +47,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"optabs.h\"\n #include \"dbgcnt.h\"\n #include \"target.h\"\n+#include \"params.h\"\n \n /* This file contains three techniques for performing Dead Store\n    Elimination (dse).\n@@ -387,6 +388,7 @@ static alloc_pool insn_info_pool;\n /* The linked list of stores that are under consideration in this\n    basic block.  */\n static insn_info_t active_local_stores;\n+static int active_local_stores_len;\n \n struct bb_info\n {\n@@ -947,6 +949,7 @@ add_wild_read (bb_info_t bb_info)\n     }\n   insn_info->wild_read = true;\n   active_local_stores = NULL;\n+  active_local_stores_len = 0;\n }\n \n \n@@ -1537,6 +1540,7 @@ record_store (rtx body, bb_info_t bb_info)\n \t{\n \t  insn_info_t insn_to_delete = ptr;\n \n+\t  active_local_stores_len--;\n \t  if (last)\n \t    last->next_local_store = ptr->next_local_store;\n \t  else\n@@ -2074,6 +2078,7 @@ check_mem_read_rtx (rtx *loc, void *data)\n \t      if (dump_file)\n \t\tdump_insn_info (\"removing from active\", i_ptr);\n \n+\t      active_local_stores_len--;\n \t      if (last)\n \t\tlast->next_local_store = i_ptr->next_local_store;\n \t      else\n@@ -2163,6 +2168,7 @@ check_mem_read_rtx (rtx *loc, void *data)\n \t      if (dump_file)\n \t\tdump_insn_info (\"removing from active\", i_ptr);\n \n+\t      active_local_stores_len--;\n \t      if (last)\n \t\tlast->next_local_store = i_ptr->next_local_store;\n \t      else\n@@ -2222,6 +2228,7 @@ check_mem_read_rtx (rtx *loc, void *data)\n \t      if (dump_file)\n \t\tdump_insn_info (\"removing from active\", i_ptr);\n \n+\t      active_local_stores_len--;\n \t      if (last)\n \t\tlast->next_local_store = i_ptr->next_local_store;\n \t      else\n@@ -2426,6 +2433,7 @@ scan_insn (bb_info_t bb_info, rtx insn)\n \t\t  if (dump_file)\n \t\t    dump_insn_info (\"removing from active\", i_ptr);\n \n+\t\t  active_local_stores_len--;\n \t\t  if (last)\n \t\t    last->next_local_store = i_ptr->next_local_store;\n \t\t  else\n@@ -2453,6 +2461,12 @@ scan_insn (bb_info_t bb_info, rtx insn)\n \t\t    fprintf (dump_file, \"handling memset as BLKmode store\\n\");\n \t\t  if (mems_found == 1)\n \t\t    {\n+\t\t      if (active_local_stores_len++\n+\t\t\t  >= PARAM_VALUE (PARAM_MAX_DSE_ACTIVE_LOCAL_STORES))\n+\t\t\t{\n+\t\t\t  active_local_stores_len = 1;\n+\t\t\t  active_local_stores = NULL;\n+\t\t\t}\n \t\t      insn_info->next_local_store = active_local_stores;\n \t\t      active_local_stores = insn_info;\n \t\t    }\n@@ -2496,6 +2510,12 @@ scan_insn (bb_info_t bb_info, rtx insn)\n      it as cannot delete.  This simplifies the processing later.  */\n   if (mems_found == 1)\n     {\n+      if (active_local_stores_len++\n+\t  >= PARAM_VALUE (PARAM_MAX_DSE_ACTIVE_LOCAL_STORES))\n+\t{\n+\t  active_local_stores_len = 1;\n+\t  active_local_stores = NULL;\n+\t}\n       insn_info->next_local_store = active_local_stores;\n       active_local_stores = insn_info;\n     }\n@@ -2534,6 +2554,7 @@ remove_useless_values (cselib_val *base)\n \n       if (del)\n \t{\n+\t  active_local_stores_len--;\n \t  if (last)\n \t    last->next_local_store = insn_info->next_local_store;\n \t  else\n@@ -2584,6 +2605,7 @@ dse_step1 (void)\n \t    = create_alloc_pool (\"cse_store_info_pool\",\n \t\t\t\t sizeof (struct store_info), 100);\n \t  active_local_stores = NULL;\n+\t  active_local_stores_len = 0;\n \t  cselib_clear_table ();\n \n \t  /* Scan the insns.  */"}, {"sha": "e5a82e906b8264ac6762b628e067b86d680fcbb5", "filename": "gcc/params.def", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dabd47e701a73fca7f4e2495b5a86704bf0a1855/gcc%2Fparams.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dabd47e701a73fca7f4e2495b5a86704bf0a1855/gcc%2Fparams.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fparams.def?ref=dabd47e701a73fca7f4e2495b5a86704bf0a1855", "patch": "@@ -698,6 +698,12 @@ DEFPARAM(PARAM_MAX_SCHED_READY_INSNS,\n \t \"The maximum number of instructions ready to be issued to be considered by the scheduler during the first scheduling pass\",\n \t 100, 0, 0)\n \n+/* This is the maximum number of active local stores RTL DSE will consider.  */\n+DEFPARAM (PARAM_MAX_DSE_ACTIVE_LOCAL_STORES,\n+\t  \"max-dse-active-local-stores\",\n+\t  \"Maximum number of active local stores in RTL dead store elimination\",\n+\t  5000, 0, 0)\n+\n /* Prefetching and cache-optimizations related parameters.  Default values are\n    usually set by machine description.  */\n "}]}