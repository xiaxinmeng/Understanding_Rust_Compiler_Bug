{"sha": "1dfddbb4d341548f0b196873f0d2b9c9b058b8a4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWRmZGRiYjRkMzQxNTQ4ZjBiMTk2ODczZjBkMmI5YzliMDU4YjhhNA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-11-30T10:07:32Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-11-30T10:07:32Z"}, "message": "[multiple changes]\n\n2009-11-30  Thomas Quinot  <quinot@adacore.com>\n\n\t* s-crtl.ads, g-stseme.adb, s-fileio.adb (System.CRTL.strerror): Change\n\treturn type to Interfaces.C.Strings.chars_ptr to eliminate need for\n\tdubious unchecked conversion at call sites.\n\t* s-errrep.adb, s-errrep.ads, Makefile.rtl (System.Error_Reporting):\n\tRemove obsolete, unused runtime unit.\n\t* gcc-interface/Make-lang.in: Update dependencies.\n\t* gcc-interface/Makefile.in: Remove VMS specialization of s-crtl, not\n\trequired anymore.\n\n2009-11-30  Vincent Celier  <celier@adacore.com>\n\n\t* gnatlink.adb: Delete an eventual existing executable file, in case it\n\tis a symbolic link, to avoid modifying the target of the symbolic link.\n\n2009-11-30  Bob Duff  <duff@adacore.com>\n\n\t* socket.c: Add accessor functions for struct servent.\n\t* g-sothco.ads (Servent): Declare interfaces to C accessor functions\n\tfor struct servent.\n\t* g-socket.adb (To_Service_Entry): Use accessor functions for struct\n\tservent.\n\n2009-11-30  Robert Dewar  <dewar@adacore.com>\n\n\t* g-arrspl.adb: Minor reformatting\n\t* g-dyntab.adb: Add missing pragma Compiler_Unit\n\nFrom-SVN: r154769", "tree": {"sha": "7bec3cf8139da8c3fc9ab89202f6b0894c50fe0e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7bec3cf8139da8c3fc9ab89202f6b0894c50fe0e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1dfddbb4d341548f0b196873f0d2b9c9b058b8a4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1dfddbb4d341548f0b196873f0d2b9c9b058b8a4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1dfddbb4d341548f0b196873f0d2b9c9b058b8a4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1dfddbb4d341548f0b196873f0d2b9c9b058b8a4/comments", "author": null, "committer": null, "parents": [{"sha": "3a3173c9d664cdcb9e2f5f6aeb6cb699bbf9392b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a3173c9d664cdcb9e2f5f6aeb6cb699bbf9392b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a3173c9d664cdcb9e2f5f6aeb6cb699bbf9392b"}], "stats": {"total": 729, "additions": 430, "deletions": 299}, "files": [{"sha": "a41847a575563a0d4ee6e860389add387464c4dd", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1dfddbb4d341548f0b196873f0d2b9c9b058b8a4/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1dfddbb4d341548f0b196873f0d2b9c9b058b8a4/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=1dfddbb4d341548f0b196873f0d2b9c9b058b8a4", "patch": "@@ -1,3 +1,32 @@\n+2009-11-30  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* s-crtl.ads, g-stseme.adb, s-fileio.adb (System.CRTL.strerror): Change\n+\treturn type to Interfaces.C.Strings.chars_ptr to eliminate need for\n+\tdubious unchecked conversion at call sites.\n+\t* s-errrep.adb, s-errrep.ads, Makefile.rtl (System.Error_Reporting):\n+\tRemove obsolete, unused runtime unit.\n+\t* gcc-interface/Make-lang.in: Update dependencies.\n+\t* gcc-interface/Makefile.in: Remove VMS specialization of s-crtl, not\n+\trequired anymore.\n+\n+2009-11-30  Vincent Celier  <celier@adacore.com>\n+\n+\t* gnatlink.adb: Delete an eventual existing executable file, in case it\n+\tis a symbolic link, to avoid modifying the target of the symbolic link.\n+\n+2009-11-30  Bob Duff  <duff@adacore.com>\n+\n+\t* socket.c: Add accessor functions for struct servent.\n+\t* g-sothco.ads (Servent): Declare interfaces to C accessor functions\n+\tfor struct servent.\n+\t* g-socket.adb (To_Service_Entry): Use accessor functions for struct\n+\tservent.\n+\n+2009-11-30  Robert Dewar  <dewar@adacore.com>\n+\n+\t* g-arrspl.adb: Minor reformatting\n+\t* g-dyntab.adb: Add missing pragma Compiler_Unit\n+\n 2009-11-30  Thomas Quinot  <quinot@adacore.com>\n \n \t* s-crtl.ads, s-oscons-tmplt.c: Fix support for VMS"}, {"sha": "ba60b2a9496e0d524877c92f5626b6848001efcd", "filename": "gcc/ada/Makefile.rtl", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1dfddbb4d341548f0b196873f0d2b9c9b058b8a4/gcc%2Fada%2FMakefile.rtl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1dfddbb4d341548f0b196873f0d2b9c9b058b8a4/gcc%2Fada%2FMakefile.rtl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FMakefile.rtl?ref=1dfddbb4d341548f0b196873f0d2b9c9b058b8a4", "patch": "@@ -434,7 +434,6 @@ GNATRTL_NONTASKING_OBJS= \\\n   s-crc32$(objext)  \\\n   s-direio$(objext) \\\n   s-dsaser$(objext) \\\n-  s-errrep$(objext) \\\n   s-exctab$(objext) \\\n   s-except$(objext) \\\n   s-exnint$(objext) \\"}, {"sha": "a897b13f913185c584bbcf5ea30eb4df8b301fcb", "filename": "gcc/ada/g-arrspl.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1dfddbb4d341548f0b196873f0d2b9c9b058b8a4/gcc%2Fada%2Fg-arrspl.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1dfddbb4d341548f0b196873f0d2b9c9b058b8a4/gcc%2Fada%2Fg-arrspl.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-arrspl.adb?ref=1dfddbb4d341548f0b196873f0d2b9c9b058b8a4", "patch": "@@ -238,10 +238,10 @@ package body GNAT.Array_Split is\n          loop\n             if K > Count_Sep then\n \n-               --  No more separators, last slice ends at the end of the source\n-               --  string.\n+               --  No more separators, last slice ends at end of source string\n \n                Stop := S.Source'Last;\n+\n             else\n                Stop := S.Indexes (K) - 1;\n             end if;"}, {"sha": "2c3ae4fcd56c54bc4dd926b860097f532ea76c0d", "filename": "gcc/ada/g-dyntab.adb", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1dfddbb4d341548f0b196873f0d2b9c9b058b8a4/gcc%2Fada%2Fg-dyntab.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1dfddbb4d341548f0b196873f0d2b9c9b058b8a4/gcc%2Fada%2Fg-dyntab.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-dyntab.adb?ref=1dfddbb4d341548f0b196873f0d2b9c9b058b8a4", "patch": "@@ -31,6 +31,8 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n+pragma Compiler_Unit;\n+\n with GNAT.Heap_Sort_G;\n with System;        use System;\n with System.Memory; use System.Memory;\n@@ -64,10 +66,7 @@ package body GNAT.Dynamic_Tables is\n    -- Allocate --\n    --------------\n \n-   procedure Allocate\n-     (T   : in out Instance;\n-      Num : Integer := 1)\n-   is\n+   procedure Allocate (T : in out Instance; Num : Integer := 1) is\n    begin\n       T.P.Last_Val := T.P.Last_Val + Num;\n "}, {"sha": "062baf768ef54e8a8fcaebbcede8a89938258799", "filename": "gcc/ada/g-socket.adb", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1dfddbb4d341548f0b196873f0d2b9c9b058b8a4/gcc%2Fada%2Fg-socket.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1dfddbb4d341548f0b196873f0d2b9c9b058b8a4/gcc%2Fada%2Fg-socket.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socket.adb?ref=1dfddbb4d341548f0b196873f0d2b9c9b058b8a4", "patch": "@@ -163,7 +163,7 @@ package body GNAT.Sockets is\n    function To_Host_Entry (E : Hostent) return Host_Entry_Type;\n    --  Conversion function\n \n-   function To_Service_Entry (E : Servent) return Service_Entry_Type;\n+   function To_Service_Entry (E : Servent_Access) return Service_Entry_Type;\n    --  Conversion function\n \n    function To_Timeval (Val : Timeval_Duration) return Timeval;\n@@ -970,7 +970,7 @@ package body GNAT.Sockets is\n \n       --  Translate from the C format to the API format\n \n-      return To_Service_Entry (Res);\n+      return To_Service_Entry (Res'Unchecked_Access);\n    end Get_Service_By_Name;\n \n    -------------------------\n@@ -996,7 +996,7 @@ package body GNAT.Sockets is\n \n       --  Translate from the C format to the API format\n \n-      return To_Service_Entry (Res);\n+      return To_Service_Entry (Res'Unchecked_Access);\n    end Get_Service_By_Port;\n \n    ---------------------\n@@ -2352,17 +2352,17 @@ package body GNAT.Sockets is\n    -- To_Service_Entry --\n    ----------------------\n \n-   function To_Service_Entry (E : Servent) return Service_Entry_Type is\n+   function To_Service_Entry (E : Servent_Access) return Service_Entry_Type is\n       use type C.size_t;\n \n-      Official : constant String := C.Strings.Value (E.S_Name);\n+      Official : constant String := C.Strings.Value (Servent_S_Name (E));\n \n       Aliases : constant Chars_Ptr_Array :=\n-                  Chars_Ptr_Pointers.Value (E.S_Aliases);\n+                  Chars_Ptr_Pointers.Value (Servent_S_Aliases (E));\n       --  S_Aliases points to a list of name aliases. The list is\n       --  terminated by a NULL pointer.\n \n-      Protocol : constant String := C.Strings.Value (E.S_Proto);\n+      Protocol : constant String := C.Strings.Value (Servent_S_Proto (E));\n \n       Result : Service_Entry_Type (Aliases_Length => Aliases'Length - 1);\n       --  The last element is a null pointer\n@@ -2383,7 +2383,7 @@ package body GNAT.Sockets is\n       end loop;\n \n       Result.Port :=\n-        Port_Type (Network_To_Short (C.unsigned_short (E.S_Port)));\n+        Port_Type (Network_To_Short (C.unsigned_short (Servent_S_Port (E))));\n \n       Result.Protocol := To_Name (Protocol);\n       return Result;"}, {"sha": "3f5c7695159e652bbfe825fbf68629a85749e521", "filename": "gcc/ada/g-sothco.ads", "status": "modified", "additions": 18, "deletions": 8, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1dfddbb4d341548f0b196873f0d2b9c9b058b8a4/gcc%2Fada%2Fg-sothco.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1dfddbb4d341548f0b196873f0d2b9c9b058b8a4/gcc%2Fada%2Fg-sothco.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-sothco.ads?ref=1dfddbb4d341548f0b196873f0d2b9c9b058b8a4", "patch": "@@ -212,19 +212,24 @@ package GNAT.Sockets.Thin_Common is\n                       C.Strings.Null_Ptr);\n    --  Arrays of C (char *)\n \n-   type Servent is record\n-      S_Name    : C.Strings.chars_ptr;\n-      S_Aliases : Chars_Ptr_Pointers.Pointer;\n-      S_Port    : C.int;\n-      S_Proto   : C.Strings.chars_ptr;\n-   end record;\n-   pragma Convention (C, Servent);\n-   --  Service entry\n+   sizeof_servent : constant C.size_t;\n+   pragma Import (C, sizeof_servent, \"__gnat_sizeof_servent\");\n+   type Servent is array (1 .. sizeof_servent) of C.char;\n+   for Servent'Alignment use 8;\n+   --  Service entry. This is an opaque type used only via the following\n+   --  accessor functions, because 'struct servent' has different layouts on\n+   --  different platforms.\n \n    type Servent_Access is access all Servent;\n    pragma Convention (C, Servent_Access);\n    --  Access to service entry\n \n+   function Servent_S_Name (E : Servent_Access) return C.Strings.chars_ptr;\n+   function Servent_S_Aliases (E : Servent_Access)\n+                               return Chars_Ptr_Pointers.Pointer;\n+   function Servent_S_Port (E : Servent_Access) return C.int;\n+   function Servent_S_Proto (E : Servent_Access) return C.Strings.chars_ptr;\n+\n    ------------------\n    -- Host entries --\n    ------------------\n@@ -335,4 +340,9 @@ private\n    pragma Import (C, Reset_Socket_Set, \"__gnat_reset_socket_set\");\n    pragma Import (C, C_Ioctl, \"__gnat_socket_ioctl\");\n    pragma Import (C, Inet_Pton, SOSC.Inet_Pton_Linkname);\n+\n+   pragma Import (C, Servent_S_Name, \"__gnat_servent_s_name\");\n+   pragma Import (C, Servent_S_Aliases, \"__gnat_servent_s_aliases\");\n+   pragma Import (C, Servent_S_Port, \"__gnat_servent_s_port\");\n+   pragma Import (C, Servent_S_Proto, \"__gnat_servent_s_proto\");\n end GNAT.Sockets.Thin_Common;"}, {"sha": "c47adc8be3514b905a6c118f01f6205bdedcb6a9", "filename": "gcc/ada/g-stseme.adb", "status": "modified", "additions": 1, "deletions": 15, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1dfddbb4d341548f0b196873f0d2b9c9b058b8a4/gcc%2Fada%2Fg-stseme.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1dfddbb4d341548f0b196873f0d2b9c9b058b8a4/gcc%2Fada%2Fg-stseme.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-stseme.adb?ref=1dfddbb4d341548f0b196873f0d2b9c9b058b8a4", "patch": "@@ -34,8 +34,6 @@\n --  since on that platform socket errno values are distinct from the system\n --  ones: there is a specific variant of this function in g-socthi-mingw.adb.\n \n-with Ada.Unchecked_Conversion;\n-\n with System.CRTL;\n \n separate (GNAT.Sockets.Thin)\n@@ -48,21 +46,9 @@ function Socket_Error_Message\n   (Errno : Integer) return C.Strings.chars_ptr\n is\n    use type Interfaces.C.Strings.chars_ptr;\n-\n-   pragma Warnings (Off);\n-   function To_Chars_Ptr is\n-     new Ada.Unchecked_Conversion\n-       (System.Address, Interfaces.C.Strings.chars_ptr);\n-   --  On VMS, the compiler warns because System.Address is 64 bits, but\n-   --  chars_ptr is 32 bits. It should be safe, though, because strerror\n-   --  will return a 32-bit pointer.\n-   pragma Warnings (On);\n-\n-   C_Msg : C.Strings.chars_ptr;\n+   C_Msg : constant C.Strings.chars_ptr := System.CRTL.strerror (Errno);\n \n begin\n-   C_Msg := To_Chars_Ptr (System.CRTL.strerror (Errno));\n-\n    if C_Msg = C.Strings.Null_Ptr then\n       return Unknown_System_Error;\n    else"}, {"sha": "18c57bf5bd6f08e1b88abcc39bfb59332a70f650", "filename": "gcc/ada/gcc-interface/Make-lang.in", "status": "modified", "additions": 267, "deletions": 93, "changes": 360, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1dfddbb4d341548f0b196873f0d2b9c9b058b8a4/gcc%2Fada%2Fgcc-interface%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1dfddbb4d341548f0b196873f0d2b9c9b058b8a4/gcc%2Fada%2Fgcc-interface%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2FMake-lang.in?ref=1dfddbb4d341548f0b196873f0d2b9c9b058b8a4", "patch": "@@ -116,60 +116,226 @@ GNAT1_C_OBJS = ada/b_gnat1.o ada/adadecode.o ada/adaint.o ada/cstreams.o \\\n \n # Object files from Ada sources that are used by gnat1\n \n-GNAT_ADA_OBJS = ada/s-bitops.o ada/ada.o ada/a-charac.o ada/a-chlat1.o ada/a-except.o \\\n- ada/a-elchha.o ada/a-ioexce.o \\\n- ada/s-memory.o ada/s-carun8.o ada/s-casuti.o ada/s-strcom.o ada/s-strhas.o \\\n- ada/s-purexc.o  ada/s-htable.o ada/s-traceb.o ada/s-mastop.o ada/ali.o \\\n- ada/alloc.o ada/atree.o ada/butil.o ada/casing.o ada/checks.o ada/comperr.o \\\n- ada/csets.o ada/cstand.o ada/debug.o ada/debug_a.o ada/einfo.o ada/elists.o \\\n- ada/errout.o ada/erroutc.o ada/err_vars.o ada/eval_fat.o ada/exp_attr.o \\\n- ada/exp_ch11.o ada/exp_ch12.o ada/exp_ch13.o ada/exp_ch2.o ada/exp_ch3.o \\\n- ada/exp_ch4.o ada/exp_ch5.o ada/exp_ch6.o ada/exp_ch7.o ada/exp_ch8.o \\\n- ada/exp_ch9.o ada/exp_code.o ada/exp_dbug.o ada/exp_disp.o ada/exp_atag.o \\\n- ada/exp_dist.o ada/exp_fixd.o ada/exp_aggr.o ada/exp_imgv.o ada/exp_intr.o \\\n- ada/exp_pakd.o ada/exp_prag.o ada/exp_sel.o ada/exp_smem.o ada/exp_strm.o \\\n- ada/exp_tss.o ada/exp_util.o ada/exp_vfpt.o ada/expander.o ada/fname.o \\\n- ada/fname-uf.o ada/fmap.o ada/freeze.o ada/frontend.o ada/gnat.o \\\n- ada/g-byorma.o \\\n- ada/g-hesora.o ada/g-htable.o ada/s-os_lib.o \\\n- ada/g-speche.o ada/g-spchge.o ada/g-u3spch.o ada/s-string.o \\\n- ada/s-utf_32.o ada/s-crc32.o ada/get_targ.o \\\n- ada/get_scos.o \\\n- ada/gnatvsn.o ada/hlo.o ada/hostparm.o ada/impunit.o ada/interfac.o \\\n- ada/itypes.o ada/inline.o ada/krunch.o ada/lib.o ada/layout.o \\\n- ada/lib-load.o ada/lib-util.o ada/lib-xref.o ada/lib-writ.o ada/live.o \\\n- ada/namet.o ada/namet-sp.o \\\n- ada/nlists.o ada/nmake.o ada/opt.o ada/osint.o ada/osint-c.o \\\n- ada/output.o \\\n- ada/par_sco.o \\\n- ada/par.o ada/prep.o ada/prepcomp.o ada/put_scos.o \\\n- ada/repinfo.o ada/restrict.o \\\n- ada/rident.o ada/rtsfind.o \\\n- ada/s-addope.o ada/s-assert.o ada/s-parame.o ada/s-stache.o \\\n- ada/s-stalib.o ada/s-imgenu.o ada/s-imenne.o ada/s-stoele.o ada/s-soflin.o \\\n- ada/s-except.o ada/s-exctab.o \\\n- ada/s-secsta.o ada/s-strops.o ada/s-sopco3.o ada/s-sopco4.o ada/s-sopco5.o \\\n- ada/s-traent.o ada/s-wchcnv.o ada/s-wchcon.o ada/s-wchjis.o \\\n- ada/s-conca2.o ada/s-conca3.o ada/s-conca4.o ada/s-conca5.o \\\n- ada/s-conca6.o ada/s-conca7.o ada/s-conca8.o ada/s-conca9.o \\\n- ada/s-unstyp.o ada/scans.o ada/scng.o ada/scn.o ada/sdefault.o ada/sem.o \\\n- ada/scos.o \\\n- ada/sem_aggr.o ada/sem_attr.o ada/sem_aux.o \\\n- ada/sem_cat.o ada/sem_ch10.o ada/sem_ch11.o \\\n- ada/sem_ch12.o ada/sem_ch13.o ada/sem_ch2.o ada/sem_ch3.o ada/sem_ch4.o \\\n- ada/sem_ch5.o  ada/sem_ch6.o ada/sem_ch7.o ada/sem_ch8.o ada/sem_ch9.o \\\n- ada/sem_case.o ada/sem_disp.o ada/sem_dist.o ada/sem_elab.o ada/sem_elim.o \\\n- ada/sem_eval.o ada/sem_intr.o ada/sem_mech.o ada/sem_prag.o ada/sem_res.o \\\n- ada/sem_scil.o ada/sem_smem.o ada/sem_type.o ada/sem_util.o ada/sem_vfpt.o \\\n- ada/sem_warn.o ada/sinfo-cn.o ada/sinfo.o ada/sinput.o ada/sinput-d.o \\\n- ada/sinput-l.o ada/snames.o ada/sprint.o ada/stand.o ada/stringt.o \\\n- ada/style.o ada/styleg.o ada/switch.o ada/switch-c.o \\\n- ada/stylesw.o ada/validsw.o ada/system.o ada/table.o ada/targparm.o \\\n- ada/tbuild.o ada/tree_gen.o ada/tree_in.o \\\n- ada/tree_io.o ada/treepr.o ada/treeprs.o \\\n- ada/ttypef.o ada/ttypes.o ada/types.o ada/uintp.o ada/uname.o ada/urealp.o \\\n- ada/usage.o ada/widechar.o ada/s-crtl.o ada/seh_init.o ada/targext.o \\\n- ada/s-restri.o\n+GNAT_ADA_OBJS =\t\\\n+ ada/a-charac.o\t\\\n+ ada/a-chlat1.o\t\\\n+ ada/a-elchha.o\t\\\n+ ada/a-except.o\t\\\n+ ada/a-ioexce.o\t\\\n+ ada/ada.o\t\\\n+ ada/ali.o\t\\\n+ ada/alloc.o\t\\\n+ ada/atree.o\t\\\n+ ada/butil.o\t\\\n+ ada/casing.o\t\\\n+ ada/checks.o\t\\\n+ ada/comperr.o\t\\\n+ ada/csets.o\t\\\n+ ada/cstand.o\t\\\n+ ada/debug.o\t\\\n+ ada/debug_a.o\t\\\n+ ada/einfo.o\t\\\n+ ada/elists.o\t\\\n+ ada/err_vars.o\t\\\n+ ada/errout.o\t\\\n+ ada/erroutc.o\t\\\n+ ada/eval_fat.o\t\\\n+ ada/exp_aggr.o\t\\\n+ ada/exp_atag.o\t\\\n+ ada/exp_attr.o\t\\\n+ ada/exp_ch11.o\t\\\n+ ada/exp_ch12.o\t\\\n+ ada/exp_ch13.o\t\\\n+ ada/exp_ch2.o\t\\\n+ ada/exp_ch3.o\t\\\n+ ada/exp_ch4.o\t\\\n+ ada/exp_ch5.o\t\\\n+ ada/exp_ch6.o\t\\\n+ ada/exp_ch7.o\t\\\n+ ada/exp_ch8.o\t\\\n+ ada/exp_ch9.o\t\\\n+ ada/exp_code.o\t\\\n+ ada/exp_dbug.o\t\\\n+ ada/exp_disp.o\t\\\n+ ada/exp_dist.o\t\\\n+ ada/exp_fixd.o\t\\\n+ ada/exp_imgv.o\t\\\n+ ada/exp_intr.o\t\\\n+ ada/exp_pakd.o\t\\\n+ ada/exp_prag.o\t\\\n+ ada/exp_sel.o\t\\\n+ ada/exp_smem.o\t\\\n+ ada/exp_strm.o\t\\\n+ ada/exp_tss.o\t\\\n+ ada/exp_util.o\t\\\n+ ada/exp_vfpt.o\t\\\n+ ada/expander.o\t\\\n+ ada/fmap.o\t\\\n+ ada/fname-uf.o\t\\\n+ ada/fname.o\t\\\n+ ada/freeze.o\t\\\n+ ada/frontend.o\t\\\n+ ada/g-byorma.o\t\\\n+ ada/g-hesora.o\t\\\n+ ada/g-htable.o\t\\\n+ ada/g-spchge.o\t\\\n+ ada/g-speche.o\t\\\n+ ada/g-u3spch.o\t\\\n+ ada/get_scos.o\t\\\n+ ada/get_targ.o\t\\\n+ ada/gnat.o\t\\\n+ ada/gnatvsn.o\t\\\n+ ada/hlo.o\t\\\n+ ada/hostparm.o\t\\\n+ ada/i-c.o\t\\\n+ ada/i-cstrin.o\t\\\n+ ada/impunit.o\t\\\n+ ada/inline.o\t\\\n+ ada/instpar.o\t\\\n+ ada/interfac.o\t\\\n+ ada/itypes.o\t\\\n+ ada/krunch.o\t\\\n+ ada/layout.o\t\\\n+ ada/lib-load.o\t\\\n+ ada/lib-util.o\t\\\n+ ada/lib-writ.o\t\\\n+ ada/lib-xref.o\t\\\n+ ada/lib.o\t\\\n+ ada/live.o\t\\\n+ ada/namet-sp.o\t\\\n+ ada/namet.o\t\\\n+ ada/nlists.o\t\\\n+ ada/nmake.o\t\\\n+ ada/opt.o\t\\\n+ ada/osint-c.o\t\\\n+ ada/osint.o\t\\\n+ ada/output.o\t\\\n+ ada/par.o\t\\\n+ ada/par_sco.o\t\\\n+ ada/prep.o\t\\\n+ ada/prepcomp.o\t\\\n+ ada/put_scos.o\t\\\n+ ada/repinfo.o\t\\\n+ ada/restrict.o\t\\\n+ ada/rident.o\t\\\n+ ada/rtsfind.o\t\\\n+ ada/s-addope.o\t\\\n+ ada/s-assert.o\t\\\n+ ada/s-bitops.o\t\\\n+ ada/s-carun8.o\t\\\n+ ada/s-casuti.o\t\\\n+ ada/s-conca2.o\t\\\n+ ada/s-conca3.o\t\\\n+ ada/s-conca4.o\t\\\n+ ada/s-conca5.o\t\\\n+ ada/s-conca6.o\t\\\n+ ada/s-conca7.o\t\\\n+ ada/s-conca8.o\t\\\n+ ada/s-conca9.o\t\\\n+ ada/s-crc32.o\t\\\n+ ada/s-crtl.o\t\\\n+ ada/s-except.o\t\\\n+ ada/s-exctab.o\t\\\n+ ada/s-htable.o\t\\\n+ ada/s-imenne.o\t\\\n+ ada/s-imgenu.o\t\\\n+ ada/s-mastop.o\t\\\n+ ada/s-memory.o\t\\\n+ ada/s-os_lib.o\t\\\n+ ada/s-parame.o\t\\\n+ ada/s-purexc.o\t\\\n+ ada/s-restri.o\t\\\n+ ada/s-secsta.o\t\\\n+ ada/s-soflin.o\t\\\n+ ada/s-sopco3.o\t\\\n+ ada/s-sopco4.o\t\\\n+ ada/s-sopco5.o\t\\\n+ ada/s-stache.o\t\\\n+ ada/s-stalib.o\t\\\n+ ada/s-stoele.o\t\\\n+ ada/s-strcom.o\t\\\n+ ada/s-strhas.o\t\\\n+ ada/s-string.o\t\\\n+ ada/s-strops.o\t\\\n+ ada/s-traceb.o\t\\\n+ ada/s-traent.o\t\\\n+ ada/s-unstyp.o\t\\\n+ ada/s-utf_32.o\t\\\n+ ada/s-wchcnv.o\t\\\n+ ada/s-wchcon.o\t\\\n+ ada/s-wchjis.o\t\\\n+ ada/scans.o\t\\\n+ ada/scn.o\t\\\n+ ada/scng.o\t\\\n+ ada/scos.o\t\\\n+ ada/sdefault.o\t\\\n+ ada/seh_init.o\t\\\n+ ada/sem.o\t\\\n+ ada/sem_aggr.o\t\\\n+ ada/sem_attr.o\t\\\n+ ada/sem_aux.o\t\\\n+ ada/sem_case.o\t\\\n+ ada/sem_cat.o\t\\\n+ ada/sem_ch10.o\t\\\n+ ada/sem_ch11.o\t\\\n+ ada/sem_ch12.o\t\\\n+ ada/sem_ch13.o\t\\\n+ ada/sem_ch2.o\t\\\n+ ada/sem_ch3.o\t\\\n+ ada/sem_ch4.o\t\\\n+ ada/sem_ch5.o\t\\\n+ ada/sem_ch6.o\t\\\n+ ada/sem_ch7.o\t\\\n+ ada/sem_ch8.o\t\\\n+ ada/sem_ch9.o\t\\\n+ ada/sem_disp.o\t\\\n+ ada/sem_dist.o\t\\\n+ ada/sem_elab.o\t\\\n+ ada/sem_elim.o\t\\\n+ ada/sem_eval.o\t\\\n+ ada/sem_intr.o\t\\\n+ ada/sem_mech.o\t\\\n+ ada/sem_prag.o\t\\\n+ ada/sem_res.o\t\\\n+ ada/sem_scil.o\t\\\n+ ada/sem_smem.o\t\\\n+ ada/sem_type.o\t\\\n+ ada/sem_util.o\t\\\n+ ada/sem_vfpt.o\t\\\n+ ada/sem_warn.o\t\\\n+ ada/sinfo-cn.o\t\\\n+ ada/sinfo.o\t\\\n+ ada/sinput-d.o\t\\\n+ ada/sinput-l.o\t\\\n+ ada/sinput.o\t\\\n+ ada/snames.o\t\\\n+ ada/sprint.o\t\\\n+ ada/stand.o\t\\\n+ ada/stringt.o\t\\\n+ ada/style.o\t\\\n+ ada/styleg.o\t\\\n+ ada/stylesw.o\t\\\n+ ada/switch-c.o\t\\\n+ ada/switch.o\t\\\n+ ada/system.o\t\\\n+ ada/table.o\t\\\n+ ada/targext.o\t\\\n+ ada/targparm.o\t\\\n+ ada/tbuild.o\t\\\n+ ada/tree_gen.o\t\\\n+ ada/tree_in.o\t\\\n+ ada/tree_io.o\t\\\n+ ada/treepr.o\t\\\n+ ada/treeprs.o\t\\\n+ ada/ttypef.o\t\\\n+ ada/ttypes.o\t\\\n+ ada/types.o\t\\\n+ ada/uintp.o\t\\\n+ ada/uname.o\t\\\n+ ada/urealp.o\t\\\n+ ada/usage.o\t\\\n+ ada/validsw.o\t\\\n+ ada/widechar.o\n \n # Object files for gnat executables\n GNAT1_ADA_OBJS = $(GNAT_ADA_OBJS) ada/back_end.o ada/gnat1drv.o\n@@ -224,6 +390,8 @@ GNATBIND_OBJS = \\\n  ada/gnatbind.o   \\\n  ada/gnatvsn.o    \\\n  ada/hostparm.o   \\\n+ ada/i-c.o        \\\n+ ada/i-cstrin.o\t\\\n  ada/interfac.o   \\\n  ada/lib.o        \\\n  ada/namet.o      \\\n@@ -1204,10 +1372,11 @@ ada/back_end.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n    ada/sinput.adb ada/snames.ads ada/stand.ads ada/stringt.ads \\\n    ada/switch.ads ada/switch-c.ads ada/system.ads ada/s-exctab.ads \\\n    ada/s-htable.ads ada/s-imenne.ads ada/s-memory.ads ada/s-os_lib.ads \\\n-   ada/s-parame.ads ada/s-stalib.ads ada/s-string.ads ada/s-traent.ads \\\n-   ada/s-unstyp.ads ada/s-wchcon.ads ada/table.ads ada/table.adb \\\n-   ada/tree_io.ads ada/types.ads ada/uintp.ads ada/uintp.adb ada/uname.ads \\\n-   ada/unchconv.ads ada/unchdeal.ads ada/urealp.ads ada/widechar.ads \n+   ada/s-parame.ads ada/s-stalib.ads ada/s-stoele.ads ada/s-stoele.adb \\\n+   ada/s-string.ads ada/s-traent.ads ada/s-unstyp.ads ada/s-wchcon.ads \\\n+   ada/table.ads ada/table.adb ada/tree_io.ads ada/types.ads ada/uintp.ads \\\n+   ada/uintp.adb ada/uname.ads ada/unchconv.ads ada/unchdeal.ads \\\n+   ada/urealp.ads ada/widechar.ads \n \n ada/bcheck.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n    ada/a-uncdea.ads ada/ali.ads ada/ali-util.ads ada/ali-util.adb \\\n@@ -1267,10 +1436,10 @@ ada/bindusg.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n    ada/a-uncdea.ads ada/alloc.ads ada/bindusg.ads ada/bindusg.adb \\\n    ada/debug.ads ada/hostparm.ads ada/namet.ads ada/opt.ads ada/osint.ads \\\n    ada/output.ads ada/system.ads ada/s-exctab.ads ada/s-memory.ads \\\n-   ada/s-os_lib.ads ada/s-parame.ads ada/s-stalib.ads ada/s-string.ads \\\n-   ada/s-traent.ads ada/s-unstyp.ads ada/s-wchcon.ads ada/table.ads \\\n-   ada/table.adb ada/tree_io.ads ada/types.ads ada/unchconv.ads \\\n-   ada/unchdeal.ads \n+   ada/s-os_lib.ads ada/s-parame.ads ada/s-stalib.ads ada/s-stoele.ads \\\n+   ada/s-stoele.adb ada/s-string.ads ada/s-traent.ads ada/s-unstyp.ads \\\n+   ada/s-wchcon.ads ada/table.ads ada/table.adb ada/tree_io.ads \\\n+   ada/types.ads ada/unchconv.ads ada/unchdeal.ads \n \n ada/butil.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n    ada/a-uncdea.ads ada/alloc.ads ada/butil.ads ada/butil.adb \\\n@@ -2185,10 +2354,10 @@ ada/fmap.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n    ada/gnat.ads ada/g-htable.ads ada/hostparm.ads ada/namet.ads \\\n    ada/opt.ads ada/osint.ads ada/output.ads ada/system.ads \\\n    ada/s-exctab.ads ada/s-htable.ads ada/s-htable.adb ada/s-memory.ads \\\n-   ada/s-os_lib.ads ada/s-parame.ads ada/s-stalib.ads ada/s-strhas.ads \\\n-   ada/s-string.ads ada/s-traent.ads ada/s-unstyp.ads ada/s-wchcon.ads \\\n-   ada/table.ads ada/table.adb ada/tree_io.ads ada/types.ads \\\n-   ada/unchconv.ads ada/unchdeal.ads \n+   ada/s-os_lib.ads ada/s-parame.ads ada/s-stalib.ads ada/s-stoele.ads \\\n+   ada/s-stoele.adb ada/s-strhas.ads ada/s-string.ads ada/s-traent.ads \\\n+   ada/s-unstyp.ads ada/s-wchcon.ads ada/table.ads ada/table.adb \\\n+   ada/tree_io.ads ada/types.ads ada/unchconv.ads ada/unchdeal.ads \n \n ada/fname-uf.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n    ada/a-uncdea.ads ada/alloc.ads ada/casing.ads ada/debug.ads \\\n@@ -2197,10 +2366,11 @@ ada/fname-uf.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n    ada/namet.ads ada/opt.ads ada/osint.ads ada/output.ads ada/rident.ads \\\n    ada/system.ads ada/s-exctab.ads ada/s-htable.ads ada/s-htable.adb \\\n    ada/s-memory.ads ada/s-os_lib.ads ada/s-parame.ads ada/s-rident.ads \\\n-   ada/s-stalib.ads ada/s-strhas.ads ada/s-string.ads ada/s-traent.ads \\\n-   ada/s-unstyp.ads ada/s-wchcon.ads ada/table.ads ada/table.adb \\\n-   ada/targparm.ads ada/tree_io.ads ada/types.ads ada/uname.ads \\\n-   ada/unchconv.ads ada/unchdeal.ads ada/widechar.ads \n+   ada/s-stalib.ads ada/s-stoele.ads ada/s-stoele.adb ada/s-strhas.ads \\\n+   ada/s-string.ads ada/s-traent.ads ada/s-unstyp.ads ada/s-wchcon.ads \\\n+   ada/table.ads ada/table.adb ada/targparm.ads ada/tree_io.ads \\\n+   ada/types.ads ada/uname.ads ada/unchconv.ads ada/unchdeal.ads \\\n+   ada/widechar.ads \n \n ada/fname.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n    ada/a-uncdea.ads ada/alloc.ads ada/debug.ads ada/fname.ads \\\n@@ -2489,9 +2659,10 @@ ada/lib-util.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n    ada/lib.ads ada/lib-util.ads ada/lib-util.adb ada/namet.ads ada/opt.ads \\\n    ada/osint.ads ada/osint-c.ads ada/output.ads ada/system.ads \\\n    ada/s-exctab.ads ada/s-memory.ads ada/s-os_lib.ads ada/s-parame.ads \\\n-   ada/s-stalib.ads ada/s-string.ads ada/s-traent.ads ada/s-unstyp.ads \\\n-   ada/s-wchcon.ads ada/table.ads ada/table.adb ada/tree_io.ads \\\n-   ada/types.ads ada/unchconv.ads ada/unchdeal.ads \n+   ada/s-stalib.ads ada/s-stoele.ads ada/s-stoele.adb ada/s-string.ads \\\n+   ada/s-traent.ads ada/s-unstyp.ads ada/s-wchcon.ads ada/table.ads \\\n+   ada/table.adb ada/tree_io.ads ada/types.ads ada/unchconv.ads \\\n+   ada/unchdeal.ads \n \n ada/lib-writ.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n    ada/a-uncdea.ads ada/ali.ads ada/alloc.ads ada/atree.ads ada/atree.adb \\\n@@ -2531,10 +2702,10 @@ ada/lib-xref.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n    ada/sinput.adb ada/snames.ads ada/stand.ads ada/stringt.ads \\\n    ada/system.ads ada/s-exctab.ads ada/s-htable.ads ada/s-imenne.ads \\\n    ada/s-memory.ads ada/s-os_lib.ads ada/s-parame.ads ada/s-rident.ads \\\n-   ada/s-stalib.ads ada/s-string.ads ada/s-traent.ads ada/s-unstyp.ads \\\n-   ada/s-wchcon.ads ada/table.ads ada/table.adb ada/tree_io.ads \\\n-   ada/types.ads ada/uintp.ads ada/uintp.adb ada/unchconv.ads \\\n-   ada/unchdeal.ads ada/urealp.ads ada/widechar.ads \n+   ada/s-stalib.ads ada/s-stoele.ads ada/s-stoele.adb ada/s-string.ads \\\n+   ada/s-traent.ads ada/s-unstyp.ads ada/s-wchcon.ads ada/table.ads \\\n+   ada/table.adb ada/tree_io.ads ada/types.ads ada/uintp.ads ada/uintp.adb \\\n+   ada/unchconv.ads ada/unchdeal.ads ada/urealp.ads ada/widechar.ads \n \n ada/lib.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads ada/a-uncdea.ads \\\n    ada/alloc.ads ada/atree.ads ada/atree.adb ada/casing.ads ada/debug.ads \\\n@@ -2704,10 +2875,11 @@ ada/par_sco.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n    ada/snames.ads ada/stand.ads ada/stringt.ads ada/system.ads \\\n    ada/s-exctab.ads ada/s-htable.ads ada/s-htable.adb ada/s-imenne.ads \\\n    ada/s-memory.ads ada/s-os_lib.ads ada/s-parame.ads ada/s-stalib.ads \\\n-   ada/s-strhas.ads ada/s-string.ads ada/s-traent.ads ada/s-unstyp.ads \\\n-   ada/s-wchcon.ads ada/table.ads ada/table.adb ada/tree_io.ads \\\n-   ada/types.ads ada/uintp.ads ada/uintp.adb ada/uname.ads \\\n-   ada/unchconv.ads ada/unchdeal.ads ada/urealp.ads ada/widechar.ads \n+   ada/s-stoele.ads ada/s-stoele.adb ada/s-strhas.ads ada/s-string.ads \\\n+   ada/s-traent.ads ada/s-unstyp.ads ada/s-wchcon.ads ada/table.ads \\\n+   ada/table.adb ada/tree_io.ads ada/types.ads ada/uintp.ads ada/uintp.adb \\\n+   ada/uname.ads ada/unchconv.ads ada/unchdeal.ads ada/urealp.ads \\\n+   ada/widechar.ads \n \n ada/prep.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n    ada/a-uncdea.ads ada/alloc.ads ada/casing.ads ada/csets.ads \\\n@@ -3899,10 +4071,10 @@ ada/sinput-d.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n    ada/hostparm.ads ada/namet.ads ada/opt.ads ada/osint.ads \\\n    ada/osint-c.ads ada/output.ads ada/sinput.ads ada/sinput-d.ads \\\n    ada/sinput-d.adb ada/system.ads ada/s-exctab.ads ada/s-memory.ads \\\n-   ada/s-os_lib.ads ada/s-parame.ads ada/s-stalib.ads ada/s-string.ads \\\n-   ada/s-traent.ads ada/s-unstyp.ads ada/s-wchcon.ads ada/table.ads \\\n-   ada/table.adb ada/tree_io.ads ada/types.ads ada/unchconv.ads \\\n-   ada/unchdeal.ads \n+   ada/s-os_lib.ads ada/s-parame.ads ada/s-stalib.ads ada/s-stoele.ads \\\n+   ada/s-stoele.adb ada/s-string.ads ada/s-traent.ads ada/s-unstyp.ads \\\n+   ada/s-wchcon.ads ada/table.ads ada/table.adb ada/tree_io.ads \\\n+   ada/types.ads ada/unchconv.ads ada/unchdeal.ads \n \n ada/sinput-l.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n    ada/a-uncdea.ads ada/alloc.ads ada/atree.ads ada/atree.adb \\\n@@ -4090,10 +4262,11 @@ ada/tree_gen.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n    ada/sem_aux.ads ada/sinfo.ads ada/sinput.ads ada/snames.ads \\\n    ada/stand.ads ada/stringt.ads ada/system.ads ada/s-exctab.ads \\\n    ada/s-memory.ads ada/s-os_lib.ads ada/s-parame.ads ada/s-stalib.ads \\\n-   ada/s-string.ads ada/s-traent.ads ada/s-unstyp.ads ada/s-wchcon.ads \\\n-   ada/table.ads ada/table.adb ada/tree_gen.ads ada/tree_gen.adb \\\n-   ada/tree_in.ads ada/tree_io.ads ada/types.ads ada/uintp.ads \\\n-   ada/unchconv.ads ada/unchdeal.ads ada/urealp.ads \n+   ada/s-stoele.ads ada/s-stoele.adb ada/s-string.ads ada/s-traent.ads \\\n+   ada/s-unstyp.ads ada/s-wchcon.ads ada/table.ads ada/table.adb \\\n+   ada/tree_gen.ads ada/tree_gen.adb ada/tree_in.ads ada/tree_io.ads \\\n+   ada/types.ads ada/uintp.ads ada/unchconv.ads ada/unchdeal.ads \\\n+   ada/urealp.ads \n \n ada/tree_in.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n    ada/a-uncdea.ads ada/alloc.ads ada/atree.ads ada/casing.ads \\\n@@ -4192,10 +4365,11 @@ ada/usage.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n    ada/a-uncdea.ads ada/alloc.ads ada/debug.ads ada/hostparm.ads \\\n    ada/namet.ads ada/opt.ads ada/osint.ads ada/output.ads ada/rident.ads \\\n    ada/system.ads ada/s-exctab.ads ada/s-memory.ads ada/s-os_lib.ads \\\n-   ada/s-parame.ads ada/s-rident.ads ada/s-stalib.ads ada/s-string.ads \\\n-   ada/s-traent.ads ada/s-unstyp.ads ada/s-wchcon.ads ada/table.ads \\\n-   ada/table.adb ada/targparm.ads ada/tree_io.ads ada/types.ads \\\n-   ada/unchconv.ads ada/unchdeal.ads ada/usage.ads ada/usage.adb \n+   ada/s-parame.ads ada/s-rident.ads ada/s-stalib.ads ada/s-stoele.ads \\\n+   ada/s-stoele.adb ada/s-string.ads ada/s-traent.ads ada/s-unstyp.ads \\\n+   ada/s-wchcon.ads ada/table.ads ada/table.adb ada/targparm.ads \\\n+   ada/tree_io.ads ada/types.ads ada/unchconv.ads ada/unchdeal.ads \\\n+   ada/usage.ads ada/usage.adb \n \n ada/validsw.o : ada/ada.ads ada/a-unccon.ads ada/a-uncdea.ads \\\n    ada/hostparm.ads ada/opt.ads ada/system.ads ada/s-exctab.ads \\"}, {"sha": "5bb99003e2fc9147e87f642629cd70c98bbe6395", "filename": "gcc/ada/gcc-interface/Makefile.in", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1dfddbb4d341548f0b196873f0d2b9c9b058b8a4/gcc%2Fada%2Fgcc-interface%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1dfddbb4d341548f0b196873f0d2b9c9b058b8a4/gcc%2Fada%2Fgcc-interface%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2FMakefile.in?ref=1dfddbb4d341548f0b196873f0d2b9c9b058b8a4", "patch": "@@ -1503,7 +1503,6 @@ ifeq ($(strip $(filter-out alpha64 ia64 dec hp vms% openvms% alphavms%,$(targ)))\n     i-cstrea.adb<i-cstrea-vms.adb \\\n     memtrack.adb<memtrack-vms_64.adb \\\n     s-auxdec.ads<s-auxdec-vms_64.ads \\\n-    s-crtl.ads<s-crtl-vms_64.ads \\\n     s-inmaop.adb<s-inmaop-vms.adb \\\n     s-interr.adb<s-interr-vms.adb \\\n     s-intman.adb<s-intman-vms.adb \\"}, {"sha": "3f8c540d1d5a677bf54252674330121191ee1bee", "filename": "gcc/ada/gnatlink.adb", "status": "modified", "additions": 32, "deletions": 41, "changes": 73, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1dfddbb4d341548f0b196873f0d2b9c9b058b8a4/gcc%2Fada%2Fgnatlink.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1dfddbb4d341548f0b196873f0d2b9c9b058b8a4/gcc%2Fada%2Fgnatlink.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatlink.adb?ref=1dfddbb4d341548f0b196873f0d2b9c9b058b8a4", "patch": "@@ -439,34 +439,14 @@ procedure Gnatlink is\n                         Compile_Bind_File := False;\n \n                      when 'o' =>\n-                        if VM_Target = CLI_Target then\n-                           Linker_Options.Increment_Last;\n-                           Linker_Options.Table (Linker_Options.Last) :=\n-                              new String'(\"/QUIET\");\n-\n-                        else\n-                           Linker_Options.Increment_Last;\n-                           Linker_Options.Table (Linker_Options.Last) :=\n-                             new String'(Arg);\n-                        end if;\n-\n                         Next_Arg := Next_Arg + 1;\n \n                         if Next_Arg > Argument_Count then\n                            Exit_With_Error (\"Missing argument for -o\");\n                         end if;\n \n-                        if VM_Target = CLI_Target then\n-                           Output_File_Name :=\n-                             new String'(\"/OUTPUT=\" & Argument (Next_Arg));\n-                        else\n-                           Output_File_Name :=\n-                             new String'(Argument (Next_Arg));\n-                        end if;\n-\n-                        Linker_Options.Increment_Last;\n-                        Linker_Options.Table (Linker_Options.Last) :=\n-                          Output_File_Name;\n+                        Output_File_Name :=\n+                          new String'(Executable_Name (Argument (Next_Arg)));\n \n                      when 'R' =>\n                         Opt.Run_Path_Option := False;\n@@ -1728,33 +1708,44 @@ begin\n       Output_File_Name :=\n         new String'(Base_Name (Ali_File_Name.all)\n                       & Get_Target_Debuggable_Suffix.all);\n+   end if;\n \n-      if VM_Target = CLI_Target then\n-         Linker_Options.Increment_Last;\n-         Linker_Options.Table (Linker_Options.Last) := new String'(\"/QUIET\");\n+   if VM_Target = CLI_Target then\n+      Linker_Options.Increment_Last;\n+      Linker_Options.Table (Linker_Options.Last) := new String'(\"/QUIET\");\n \n-         Linker_Options.Increment_Last;\n-         Linker_Options.Table (Linker_Options.Last) := new String'(\"/DEBUG\");\n+      Linker_Options.Increment_Last;\n+      Linker_Options.Table (Linker_Options.Last) := new String'(\"/DEBUG\");\n \n-         Linker_Options.Increment_Last;\n-         Linker_Options.Table (Linker_Options.Last) :=\n-           new String'(\"/OUTPUT=\" & Output_File_Name.all);\n+      Linker_Options.Increment_Last;\n+      Linker_Options.Table (Linker_Options.Last) :=\n+        new String'(\"/OUTPUT=\" & Output_File_Name.all);\n \n-      elsif RTX_RTSS_Kernel_Module_On_Target then\n-         Linker_Options.Increment_Last;\n-         Linker_Options.Table (Linker_Options.Last) :=\n-           new String'(\"/OUT:\" & Output_File_Name.all);\n+   elsif RTX_RTSS_Kernel_Module_On_Target then\n+      Linker_Options.Increment_Last;\n+      Linker_Options.Table (Linker_Options.Last) :=\n+        new String'(\"/OUT:\" & Output_File_Name.all);\n \n-      else\n-         Linker_Options.Increment_Last;\n-         Linker_Options.Table (Linker_Options.Last) := new String'(\"-o\");\n+   else\n+      Linker_Options.Increment_Last;\n+      Linker_Options.Table (Linker_Options.Last) := new String'(\"-o\");\n \n-         Linker_Options.Increment_Last;\n-         Linker_Options.Table (Linker_Options.Last) :=\n-           new String'(Output_File_Name.all);\n-      end if;\n+      Linker_Options.Increment_Last;\n+      Linker_Options.Table (Linker_Options.Last) :=\n+        new String'(Output_File_Name.all);\n    end if;\n \n+   --  Delete existing executable, in case it is a symbolic link, to avoid\n+   --  modifying the target of the symbolic link.\n+\n+   declare\n+      Dummy : Boolean;\n+      pragma Unreferenced (Dummy);\n+\n+   begin\n+      Delete_File (Output_File_Name.all, Dummy);\n+   end;\n+\n    --  Warn if main program is called \"test\", as that may be a built-in command\n    --  on Unix. On non-Unix systems executables have a suffix, so the warning\n    --  will not appear. However, do not warn in the case of a cross compiler."}, {"sha": "bb0700a85a427839ad014bb1c898dc9581b123b7", "filename": "gcc/ada/s-crtl.ads", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1dfddbb4d341548f0b196873f0d2b9c9b058b8a4/gcc%2Fada%2Fs-crtl.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1dfddbb4d341548f0b196873f0d2b9c9b058b8a4/gcc%2Fada%2Fs-crtl.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-crtl.ads?ref=1dfddbb4d341548f0b196873f0d2b9c9b058b8a4", "patch": "@@ -31,13 +31,18 @@\n \n --  This package provides the low level interface to the C runtime library\n \n+with Interfaces.C.Strings;\n+\n with System.Parameters;\n \n package System.CRTL is\n    pragma Preelaborate;\n \n+   subtype chars_ptr is Interfaces.C.Strings.chars_ptr;\n+\n    subtype chars is System.Address;\n    --  Pointer to null-terminated array of characters\n+   --  Should use Interfaces.C.Strings types instead???\n \n    subtype DIRs is System.Address;\n    --  Corresponds to the C type DIR*\n@@ -48,7 +53,7 @@ package System.CRTL is\n    subtype int is Integer;\n \n    type long is range -(2 ** (System.Parameters.long_bits - 1))\n-      .. +(2 ** (System.Parameters.long_bits - 1)) - 1;\n+                   .. +(2 ** (System.Parameters.long_bits - 1)) - 1;\n \n    subtype off_t is Long_Integer;\n \n@@ -190,7 +195,7 @@ package System.CRTL is\n    function write (fd : int; buffer : chars; nbytes : int) return int;\n    pragma Import (C, write, \"write\");\n \n-   function strerror (errno : int) return chars;\n+   function strerror (errno : int) return chars_ptr;\n    pragma Import (C, strerror, \"strerror\");\n \n end System.CRTL;"}, {"sha": "783f845d1e43dbdb7ee3d764e0dade70506948a4", "filename": "gcc/ada/s-errrep.adb", "status": "removed", "additions": 0, "deletions": 68, "changes": 68, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a3173c9d664cdcb9e2f5f6aeb6cb699bbf9392b/gcc%2Fada%2Fs-errrep.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a3173c9d664cdcb9e2f5f6aeb6cb699bbf9392b/gcc%2Fada%2Fs-errrep.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-errrep.adb?ref=3a3173c9d664cdcb9e2f5f6aeb6cb699bbf9392b", "patch": "@@ -1,68 +0,0 @@\n-------------------------------------------------------------------------------\n---                                                                          --\n---                GNAT RUN-TIME LIBRARY (GNARL) COMPONENTS                  --\n---                                                                          --\n---               S Y S T E M . E R R O R _ R E P O R T I N G                --\n---                                                                          --\n---                                 B o d y                                  --\n---                                                                          --\n---                     Copyright (C) 1995-2006, AdaCore                     --\n---                                                                          --\n--- GNARL is free software; you can  redistribute it  and/or modify it under --\n--- terms of the  GNU General Public License as published  by the Free Soft- --\n--- ware  Foundation;  either version 2,  or (at your option) any later ver- --\n--- sion. GNARL is distributed in the hope that it will be useful, but WITH- --\n--- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n--- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n--- for  more details.  You should have  received  a copy of the GNU General --\n--- Public License  distributed with GNARL; see file COPYING.  If not, write --\n--- to  the  Free Software Foundation,  51  Franklin  Street,  Fifth  Floor, --\n--- Boston, MA 02110-1301, USA.                                              --\n---                                                                          --\n--- As a special exception,  if other files  instantiate  generics from this --\n--- unit, or you link  this unit with other files  to produce an executable, --\n--- this  unit  does not  by itself cause  the resulting  executable  to  be --\n--- covered  by the  GNU  General  Public  License.  This exception does not --\n--- however invalidate  any other reasons why  the executable file  might be --\n--- covered by the  GNU Public License.                                      --\n---                                                                          --\n--- GNARL was developed by the GNARL team at Florida State University.       --\n--- Extensive contributions were provided by Ada Core Technologies, Inc.     --\n---                                                                          --\n-------------------------------------------------------------------------------\n-\n---  This package must not depend on anything else, since it may be\n---  called during elaboration of other packages.\n-\n-package body System.Error_Reporting is\n-\n-   procedure Write (fildes : Integer; buf : System.Address; nbyte : Integer);\n-   pragma Import (C, Write, \"write\");\n-\n-   procedure Prog_Exit (Status : Integer);\n-   pragma No_Return (Prog_Exit);\n-   pragma Import (C, Prog_Exit, \"exit\");\n-\n-   Shutdown_Message : String := \"failed run-time assertion : \";\n-   End_Of_Line : String := \"\" & ASCII.LF;\n-\n-   --------------\n-   -- Shutdown --\n-   --------------\n-\n-   function Shutdown (M : String) return Boolean is\n-   begin\n-      Write (2, Shutdown_Message'Address, Shutdown_Message'Length);\n-      Write (2, M'Address, M'Length);\n-      Write (2, End_Of_Line'Address, End_Of_Line'Length);\n-\n-      --  This call should never return\n-\n-      Prog_Exit (1);\n-\n-      --  Return is just to keep Ada happy (return required)\n-\n-      return False;\n-   end Shutdown;\n-\n-end System.Error_Reporting;"}, {"sha": "930e020641953b08ebbe90f0f20ca5c52f4d6925", "filename": "gcc/ada/s-errrep.ads", "status": "removed", "additions": 0, "deletions": 45, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a3173c9d664cdcb9e2f5f6aeb6cb699bbf9392b/gcc%2Fada%2Fs-errrep.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a3173c9d664cdcb9e2f5f6aeb6cb699bbf9392b/gcc%2Fada%2Fs-errrep.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-errrep.ads?ref=3a3173c9d664cdcb9e2f5f6aeb6cb699bbf9392b", "patch": "@@ -1,45 +0,0 @@\n-------------------------------------------------------------------------------\n---                                                                          --\n---                 GNAT RUN-TIME LIBRARY (GNARL) COMPONENTS                 --\n---                                                                          --\n---               S Y S T E M . E R R O R _ R E P O R T I N G                --\n---                                                                          --\n---                                  S p e c                                 --\n---                                                                          --\n---                     Copyright (C) 1995-2006, AdaCore                     --\n---                                                                          --\n--- GNARL is free software; you can  redistribute it  and/or modify it under --\n--- terms of the  GNU General Public License as published  by the Free Soft- --\n--- ware  Foundation;  either version 2,  or (at your option) any later ver- --\n--- sion. GNARL is distributed in the hope that it will be useful, but WITH- --\n--- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n--- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n--- for  more details.  You should have  received  a copy of the GNU General --\n--- Public License  distributed with GNARL; see file COPYING.  If not, write --\n--- to  the  Free Software Foundation,  51  Franklin  Street,  Fifth  Floor, --\n--- Boston, MA 02110-1301, USA.                                              --\n---                                                                          --\n--- As a special exception,  if other files  instantiate  generics from this --\n--- unit, or you link  this unit with other files  to produce an executable, --\n--- this  unit  does not  by itself cause  the resulting  executable  to  be --\n--- covered  by the  GNU  General  Public  License.  This exception does not --\n--- however invalidate  any other reasons why  the executable file  might be --\n--- covered by the  GNU Public License.                                      --\n---                                                                          --\n--- GNARL was developed by the GNARL team at Florida State University.       --\n--- Extensive contributions were provided by Ada Core Technologies, Inc.     --\n---                                                                          --\n-------------------------------------------------------------------------------\n-\n---  This package must not depend on anything else, since it may be\n---  called during elaboration of other packages.\n-\n-package System.Error_Reporting is\n-   pragma Preelaborate;\n-\n-   function Shutdown (M : String) return Boolean;\n-   --  Perform emergency shutdown of the entire program. Msg is an error\n-   --  message to be printed to the console. This is to be used only for\n-   --  nonrecoverable errors.\n-\n-end System.Error_Reporting;"}, {"sha": "22a06b3cec01b45d84dc186be30b8bf002e9bc2c", "filename": "gcc/ada/s-fileio.adb", "status": "modified", "additions": 1, "deletions": 11, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1dfddbb4d341548f0b196873f0d2b9c9b058b8a4/gcc%2Fada%2Fs-fileio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1dfddbb4d341548f0b196873f0d2b9c9b058b8a4/gcc%2Fada%2Fs-fileio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-fileio.adb?ref=1dfddbb4d341548f0b196873f0d2b9c9b058b8a4", "patch": "@@ -31,7 +31,6 @@\n \n with Ada.Finalization;            use Ada.Finalization;\n with Ada.IO_Exceptions;           use Ada.IO_Exceptions;\n-with Ada.Unchecked_Conversion;\n \n with Interfaces.C;\n with Interfaces.C.Strings;        use Interfaces.C.Strings;\n@@ -375,16 +374,7 @@ package body System.File_IO is\n    -------------------\n \n    function Errno_Message (Errno : Integer := OS_Lib.Errno) return String is\n-      pragma Warnings (Off);\n-      function To_Chars_Ptr is\n-        new Ada.Unchecked_Conversion (System.Address, chars_ptr);\n-      --  On VMS, the compiler warns because System.Address is 64 bits, but\n-      --  chars_ptr is 32 bits. It should be safe, though, because strerror\n-      --  will return a 32-bit pointer.\n-      pragma Warnings (On);\n-\n-      Message : constant chars_ptr :=\n-                  To_Chars_Ptr (CRTL.strerror (Errno));\n+      Message : constant chars_ptr := CRTL.strerror (Errno);\n \n    begin\n       if Message = Null_Ptr then"}, {"sha": "ecafb8acd1822270c9079bb343beb55998cc9611", "filename": "gcc/ada/socket.c", "status": "modified", "additions": 62, "deletions": 0, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1dfddbb4d341548f0b196873f0d2b9c9b058b8a4/gcc%2Fada%2Fsocket.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1dfddbb4d341548f0b196873f0d2b9c9b058b8a4/gcc%2Fada%2Fsocket.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsocket.c?ref=1dfddbb4d341548f0b196873f0d2b9c9b058b8a4", "patch": "@@ -59,6 +59,9 @@\n #include <string.h>\n /* Required for memcpy() */\n \n+extern const size_t __gnat_sizeof_servent = sizeof(struct servent);\n+/* For passing the size of servent to Ada code. */\n+\n extern void __gnat_disable_sigpipe (int fd);\n extern void __gnat_disable_all_sigpipes (void);\n extern int  __gnat_create_signalling_fds (int *fds);\n@@ -74,6 +77,10 @@ extern void __gnat_remove_socket_from_set (fd_set *, int);\n extern void __gnat_reset_socket_set (fd_set *);\n extern int  __gnat_get_h_errno (void);\n extern int  __gnat_socket_ioctl (int, int, int *);\n+extern char * __gnat_servent_s_name (struct servent *);\n+extern char ** __gnat_servent_s_aliases (struct servent *);\n+extern int __gnat_servent_s_port (struct servent *);\n+extern char * __gnat_servent_s_proto (struct servent *);\n #if defined (__vxworks) || defined (_WIN32)\n extern int  __gnat_inet_pton (int, const char *, void *);\n #endif\n@@ -488,6 +495,61 @@ __gnat_inet_pton (int af, const char *src, void *dst) {\n }\n #endif\n \n+/*\n+ * Accessor functions for struct servent.\n+ *\n+ * These are needed because servent has different representations on different\n+ * platforms, and we don't want to deal with that on the Ada side. For example,\n+ * on Linux, we have (see /usr/include netdb.h):\n+ *\n+ *   struct servent\n+ *   {\n+ *     char *s_name;\n+ *     char **s_aliases;\n+ *     int s_port;\n+ *     char *s_proto;\n+ *   };\n+ *\n+ * and on Windows (see mingw's socket.h):\n+ *\n+ *   struct servent {\n+ *     char *s_name;\n+ *     char **s_aliases;\n+ *   #ifdef _WIN64\n+ *     char *s_proto;\n+ *     short s_port;\n+ *   #else\n+ *     short s_port;\n+ *     char *s_proto;\n+ *   #endif\n+ *   };\n+ */\n+\n+char *\n+__gnat_servent_s_name (struct servent * s)\n+{\n+  return s->s_name;\n+}\n+\n+char **\n+__gnat_servent_s_aliases (struct servent * s)\n+{\n+  return s->s_aliases;\n+}\n+\n+int\n+__gnat_servent_s_port (struct servent * s)\n+{\n+  return s->s_port;\n+}\n+\n+char *\n+__gnat_servent_s_proto (struct servent * s)\n+{\n+  return s->s_proto;\n+}\n+\n+\n #else\n # warning Sockets are not supported on this platform\n #endif /* defined(HAVE_SOCKETS) */"}]}