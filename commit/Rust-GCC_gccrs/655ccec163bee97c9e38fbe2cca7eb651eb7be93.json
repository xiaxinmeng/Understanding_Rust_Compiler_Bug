{"sha": "655ccec163bee97c9e38fbe2cca7eb651eb7be93", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjU1Y2NlYzE2M2JlZTk3YzllMzhmYmUyY2NhN2ViNjUxZWI3YmU5Mw==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@cygnus.com", "date": "1998-05-31T20:31:09Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1998-05-31T20:31:09Z"}, "message": "Add minus zero test\n\nFrom-SVN: r20152", "tree": {"sha": "cf9d43a9687f5621fe2264521f94c50381086364", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cf9d43a9687f5621fe2264521f94c50381086364"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/655ccec163bee97c9e38fbe2cca7eb651eb7be93", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/655ccec163bee97c9e38fbe2cca7eb651eb7be93", "html_url": "https://github.com/Rust-GCC/gccrs/commit/655ccec163bee97c9e38fbe2cca7eb651eb7be93", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/655ccec163bee97c9e38fbe2cca7eb651eb7be93/comments", "author": null, "committer": null, "parents": [{"sha": "726e2d544cdcb3e91ac2e0ced52bf7ef592b18f3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/726e2d544cdcb3e91ac2e0ced52bf7ef592b18f3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/726e2d544cdcb3e91ac2e0ced52bf7ef592b18f3"}], "stats": {"total": 62, "additions": 62, "deletions": 0}, "files": [{"sha": "1cd126dd6903da5e8d7b629acd622825e2d73672", "filename": "gcc/testsuite/gcc.c-torture/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/655ccec163bee97c9e38fbe2cca7eb651eb7be93/gcc%2Ftestsuite%2Fgcc.c-torture%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/655ccec163bee97c9e38fbe2cca7eb651eb7be93/gcc%2Ftestsuite%2Fgcc.c-torture%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2FChangeLog?ref=655ccec163bee97c9e38fbe2cca7eb651eb7be93", "patch": "@@ -1,3 +1,7 @@\n+Sun May 31 23:23:29 1998  Michael Meissner  <meissner@cygnus.com>\n+\n+\t* execute/ieee/mzero2.c: New test to better test IEEE -0 support.\n+\n Wed Apr  8 13:09:15 1998  Jim Wilson  <wilson@cygnus.com>\n \n \t* execute/980407-1.c: Delete test.  Is duplicate of loop-4.c."}, {"sha": "0da53d247377878660b440de81ef2c1b1449a5c2", "filename": "gcc/testsuite/gcc.c-torture/execute/ieee/mzero2.c", "status": "added", "additions": 58, "deletions": 0, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/655ccec163bee97c9e38fbe2cca7eb651eb7be93/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fieee%2Fmzero2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/655ccec163bee97c9e38fbe2cca7eb651eb7be93/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fieee%2Fmzero2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fieee%2Fmzero2.c?ref=655ccec163bee97c9e38fbe2cca7eb651eb7be93", "patch": "@@ -0,0 +1,58 @@\n+/* Test IEEE +0/-0 rules */\n+\n+static double pzero = +0.0;\n+static double nzero = -0.0;\n+static double pinf  = +1.0 / 0.0;\n+static double ninf  = -1.0 / 0.0;\n+static double nan   =  0.0 / 0.0;\n+\n+void\n+expect (double value, double expected)\n+{\n+  if (expected != expected)\t/* expected value is Not a number */\n+    {\n+      if (value == value)\t/* actual value is a number */\n+\tabort ();\n+    }\n+\n+  else if (value != value)\n+    abort ();\t\t\t/* actual value is a NaN */\n+\n+  else if (memcmp ((void *)&value, (void *)&expected, sizeof (double)) != 0)\n+    abort ();\t\t\t/* values don't match */\n+}\n+\n+main ()\n+{\n+  expect (pzero + pzero, pzero);\n+  expect (pzero + nzero, pzero);\n+  expect (nzero + pzero, pzero);\n+  expect (nzero + nzero, nzero);\n+\n+  expect (pzero - pzero, pzero);\n+  expect (pzero - nzero, pzero);\n+  expect (nzero - pzero, nzero);\n+  expect (nzero - nzero, pzero);\n+\n+  expect (pzero * pzero, pzero);\n+  expect (pzero * nzero, nzero);\n+  expect (nzero * pzero, nzero);\n+  expect (nzero * nzero, pzero);\n+\n+  expect (+1.00 * pzero, pzero);\n+  expect (-1.00 * pzero, nzero);\n+  expect (+1.00 * nzero, nzero);\n+  expect (-1.00 * nzero, pzero);\n+\n+  expect (pzero / pzero, nan);\n+  expect (pzero / nzero, nan);\n+  expect (nzero / pzero, nan);\n+  expect (nzero / nzero, nan);\n+\n+  expect (+1.00 / pzero, pinf);\n+  expect (-1.00 / pzero, ninf);\n+  expect (+1.00 / nzero, ninf);\n+  expect (-1.00 / nzero, pinf);\n+\n+  exit (0);\n+}"}]}