{"sha": "19388c6d5b7ed99cb9d7ddae433ccae4090f74e8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTkzODhjNmQ1YjdlZDk5Y2I5ZDdkZGFlNDMzY2NhZTQwOTBmNzRlOA==", "commit": {"author": {"name": "Carl Love", "email": "cel@us.ibm.com", "date": "2017-07-07T16:17:46Z"}, "committer": {"name": "Carl Love", "email": "carll@gcc.gnu.org", "date": "2017-07-07T16:17:46Z"}, "message": "rs6000-c: Add support for built-in function vector unsigned short vec_pack_to_short_fp32...\n\ngcc/ChangeLog:\n\n2017-07-07 Carl Love  <cel@us.ibm.com>\n\n\t* config/rs6000/rs6000-c: Add support for built-in function\n\tvector unsigned short vec_pack_to_short_fp32 (vector float,\n\t\t\t\t\t\t      vector float).\n\t* config/rs6000/rs6000-builtin.def (CONVERT_4F32_8I16): Add\n\tBU_P9V_AV_2 and BU_P9V_OVERLOAD_2 definitions.\n\t* config/rs6000/altivec.h (vec_pack_to_short_fp32): Add define.\n\t* config/rs6000/altivec.md(UNSPEC_CONVERT_4F32_8I16): Add UNSPEC.\n\t(convert_4f32_8i16): Add define_expand.\n\t* doc/extend.texi: Update the built-in documentation file for the\n\tnew built-in function.\n\ngcc/testsuite/ChangeLog:\n\n2017-07-07  Carl Love  <cel@us.ibm.com>\n\n\t* gcc.target/powerpc/builtins-1-p9-runnable.c: Add new test\n\tfile for built-ins.\n\nFrom-SVN: r250051", "tree": {"sha": "1d4049e41549317e3d727d663c2b5fdfe0425241", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1d4049e41549317e3d727d663c2b5fdfe0425241"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/19388c6d5b7ed99cb9d7ddae433ccae4090f74e8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/19388c6d5b7ed99cb9d7ddae433ccae4090f74e8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/19388c6d5b7ed99cb9d7ddae433ccae4090f74e8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/19388c6d5b7ed99cb9d7ddae433ccae4090f74e8/comments", "author": {"login": "carlelove", "id": 86435705, "node_id": "MDQ6VXNlcjg2NDM1NzA1", "avatar_url": "https://avatars.githubusercontent.com/u/86435705?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carlelove", "html_url": "https://github.com/carlelove", "followers_url": "https://api.github.com/users/carlelove/followers", "following_url": "https://api.github.com/users/carlelove/following{/other_user}", "gists_url": "https://api.github.com/users/carlelove/gists{/gist_id}", "starred_url": "https://api.github.com/users/carlelove/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carlelove/subscriptions", "organizations_url": "https://api.github.com/users/carlelove/orgs", "repos_url": "https://api.github.com/users/carlelove/repos", "events_url": "https://api.github.com/users/carlelove/events{/privacy}", "received_events_url": "https://api.github.com/users/carlelove/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bcc3c3f1ca89628f02802fda20f2232b9deef5f9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bcc3c3f1ca89628f02802fda20f2232b9deef5f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bcc3c3f1ca89628f02802fda20f2232b9deef5f9"}], "stats": {"total": 45, "additions": 45, "deletions": 0}, "files": [{"sha": "1a78572a1dd80972cd6bca13cb562eaf59faeb35", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19388c6d5b7ed99cb9d7ddae433ccae4090f74e8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19388c6d5b7ed99cb9d7ddae433ccae4090f74e8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=19388c6d5b7ed99cb9d7ddae433ccae4090f74e8", "patch": "@@ -1,3 +1,16 @@\n+2017-07-07 Carl Love  <cel@us.ibm.com>\n+\n+\t* config/rs6000/rs6000-c: Add support for built-in function\n+\tvector unsigned short vec_pack_to_short_fp32 (vector float,\n+\t\t\t\t\t\t      vector float).\n+\t* config/rs6000/rs6000-builtin.def (CONVERT_4F32_8I16): Add\n+\tBU_P9V_AV_2 and BU_P9V_OVERLOAD_2 definitions.\n+\t* config/rs6000/altivec.h (vec_pack_to_short_fp32): Add define.\n+\t* config/rs6000/altivec.md(UNSPEC_CONVERT_4F32_8I16): Add UNSPEC.\n+\t(convert_4f32_8i16): Add define_expand.\n+\t* doc/extend.texi: Update the built-in documentation file for the\n+\tnew built-in function.\n+\n 2017-07-07  Jose E. Marchesi  <jose.marchesi@oracle.com>\n \n \t* config/sparc/m8.md: New file."}, {"sha": "5af7eecec147706fbaa87f242d16c3a98e5fdb5d", "filename": "gcc/config/rs6000/altivec.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19388c6d5b7ed99cb9d7ddae433ccae4090f74e8/gcc%2Fconfig%2Frs6000%2Faltivec.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19388c6d5b7ed99cb9d7ddae433ccae4090f74e8/gcc%2Fconfig%2Frs6000%2Faltivec.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Faltivec.h?ref=19388c6d5b7ed99cb9d7ddae433ccae4090f74e8", "patch": "@@ -418,6 +418,7 @@\n \n #ifdef __POWER9_VECTOR__\n /* Vector additions added in ISA 3.0.  */\n+#define vec_pack_to_short_fp32 __builtin_vec_convert_4f32_8i16\n #define vec_vctz __builtin_vec_vctz\n #define vec_cnttz __builtin_vec_vctz\n #define vec_vctzb __builtin_vec_vctzb"}, {"sha": "d5f7a8f0b2a47f1c65c0d920e926bee5a578290d", "filename": "gcc/config/rs6000/altivec.md", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19388c6d5b7ed99cb9d7ddae433ccae4090f74e8/gcc%2Fconfig%2Frs6000%2Faltivec.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19388c6d5b7ed99cb9d7ddae433ccae4090f74e8/gcc%2Fconfig%2Frs6000%2Faltivec.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Faltivec.md?ref=19388c6d5b7ed99cb9d7ddae433ccae4090f74e8", "patch": "@@ -79,6 +79,7 @@\n    UNSPEC_VUNPACK_LO_SIGN_DIRECT\n    UNSPEC_VUPKHPX\n    UNSPEC_VUPKLPX\n+   UNSPEC_CONVERT_4F32_8I16\n    UNSPEC_DARN\n    UNSPEC_DARN_32\n    UNSPEC_DARN_RAW\n@@ -3170,6 +3171,23 @@\n }\n   [(set_attr \"type\" \"veccomplex\")])\n \n+;; Generate two vector F32 converted to packed vector I16 vector\n+(define_expand \"convert_4f32_8i16\"\n+  [(set (match_operand:V8HI 0 \"register_operand\" \"=v\")\n+\t(unspec:V8HI [(match_operand:V4SF 1 \"register_operand\" \"v\")\n+\t\t      (match_operand:V4SF 2 \"register_operand\" \"v\")]\n+\t\t     UNSPEC_CONVERT_4F32_8I16))]\n+  \"TARGET_P9_VECTOR\"\n+{\n+  rtx rtx_tmp_hi = gen_reg_rtx (V4SImode);\n+  rtx rtx_tmp_lo = gen_reg_rtx (V4SImode);\n+\n+  emit_insn (gen_altivec_vctuxs (rtx_tmp_hi, operands[1], const0_rtx));\n+  emit_insn (gen_altivec_vctuxs (rtx_tmp_lo, operands[2], const0_rtx));\n+  emit_insn (gen_altivec_vpkswss (operands[0], rtx_tmp_hi, rtx_tmp_lo));\n+  DONE;\n+})\n+\n ;; Generate\n ;;    xxlxor/vxor SCRATCH0,SCRATCH0,SCRATCH0\n ;;    vsubu?m SCRATCH2,SCRATCH1,%1"}, {"sha": "258c5f8a5719d868653568db5b8eca52f146b528", "filename": "gcc/config/rs6000/rs6000-builtin.def", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19388c6d5b7ed99cb9d7ddae433ccae4090f74e8/gcc%2Fconfig%2Frs6000%2Frs6000-builtin.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19388c6d5b7ed99cb9d7ddae433ccae4090f74e8/gcc%2Fconfig%2Frs6000%2Frs6000-builtin.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000-builtin.def?ref=19388c6d5b7ed99cb9d7ddae433ccae4090f74e8", "patch": "@@ -1990,10 +1990,12 @@ BU_P8V_OVERLOAD_3 (VSUBEUQM,\t\"vsubeuqm\")\n /* ISA 3.0 vector overloaded 2-argument functions. */\n BU_P9V_AV_2 (VSLV,\t\t\"vslv\",\t\t\tCONST, vslv)\n BU_P9V_AV_2 (VSRV,\t\t\"vsrv\",\t\t\tCONST, vsrv)\n+BU_P9V_AV_2 (CONVERT_4F32_8I16, \"convert_4f32_8i16\", CONST, convert_4f32_8i16)\n \n /* ISA 3.0 vector overloaded 2-argument functions. */\n BU_P9V_OVERLOAD_2 (VSLV,\t\"vslv\")\n BU_P9V_OVERLOAD_2 (VSRV,\t\"vsrv\")\n+BU_P9V_OVERLOAD_2 (CONVERT_4F32_8I16, \"convert_4f32_8i16\")\n \n /* 2 argument vector functions added in ISA 3.0 (power9). */\n BU_P9V_AV_2 (VADUB,\t\t\"vadub\",\t\tCONST,  vaduv16qi3)"}, {"sha": "2b5193bfdcc93b3fd6d89f7e0c24ad2ce42a01ec", "filename": "gcc/config/rs6000/rs6000-c.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19388c6d5b7ed99cb9d7ddae433ccae4090f74e8/gcc%2Fconfig%2Frs6000%2Frs6000-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19388c6d5b7ed99cb9d7ddae433ccae4090f74e8/gcc%2Fconfig%2Frs6000%2Frs6000-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000-c.c?ref=19388c6d5b7ed99cb9d7ddae433ccae4090f74e8", "patch": "@@ -2417,6 +2417,10 @@ const struct altivec_builtin_types altivec_overloaded_builtins[] = {\n     RS6000_BTI_bool_V4SI, RS6000_BTI_bool_V2DI, RS6000_BTI_bool_V2DI, 0 },\n   { ALTIVEC_BUILTIN_VEC_PACK, P8V_BUILTIN_VPKUDUM,\n     RS6000_BTI_V4SF, RS6000_BTI_V2DF, RS6000_BTI_V2DF, 0 },\n+\n+  { P9V_BUILTIN_VEC_CONVERT_4F32_8I16, P9V_BUILTIN_CONVERT_4F32_8I16,\n+    RS6000_BTI_unsigned_V8HI, RS6000_BTI_V4SF, RS6000_BTI_V4SF, 0 },\n+\n   { ALTIVEC_BUILTIN_VEC_VPKUWUM, ALTIVEC_BUILTIN_VPKUWUM,\n     RS6000_BTI_V8HI, RS6000_BTI_V4SI, RS6000_BTI_V4SI, 0 },\n   { ALTIVEC_BUILTIN_VEC_VPKUWUM, ALTIVEC_BUILTIN_VPKUWUM,"}, {"sha": "d0abd7faadfcb1bbd3c1a7b2878726c880734a0b", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19388c6d5b7ed99cb9d7ddae433ccae4090f74e8/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19388c6d5b7ed99cb9d7ddae433ccae4090f74e8/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=19388c6d5b7ed99cb9d7ddae433ccae4090f74e8", "patch": "@@ -15363,6 +15363,8 @@ signed int vec_cntlz_lsbb (vector unsigned char);\n signed int vec_cnttz_lsbb (vector signed char);\n signed int vec_cnttz_lsbb (vector unsigned char);\n \n+vector unsigned short vec_pack_to_short_fp32 (vector float, vector float);\n+\n vector signed char vec_xl_len (signed char *addr, size_t len);\n vector unsigned char vec_xl_len (unsigned char *addr, size_t len);\n vector signed int vec_xl_len (signed int *addr, size_t len);"}, {"sha": "73181dbb7307be2269bdb20fb27f3cb8efdaa1da", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19388c6d5b7ed99cb9d7ddae433ccae4090f74e8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19388c6d5b7ed99cb9d7ddae433ccae4090f74e8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=19388c6d5b7ed99cb9d7ddae433ccae4090f74e8", "patch": "@@ -1,3 +1,8 @@\n+2017-07-07  Carl Love  <cel@us.ibm.com>\n+\n+\t* gcc.target/powerpc/builtins-1-p9-runnable.c: Add new test\n+\tfile for built-ins.\n+\n 2017-07-07  Jose E. Marchesi  <jose.marchesi@oracle.com>\n \n \t* gcc.target/sparc/dictunpack.c: New file."}]}