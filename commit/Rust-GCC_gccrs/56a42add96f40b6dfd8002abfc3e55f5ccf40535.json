{"sha": "56a42add96f40b6dfd8002abfc3e55f5ccf40535", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTZhNDJhZGQ5NmY0MGI2ZGZkODAwMmFiZmMzZTU1ZjVjY2Y0MDUzNQ==", "commit": {"author": {"name": "Martin Jambor", "email": "mjambor@suse.cz", "date": "2010-07-22T12:52:14Z"}, "committer": {"name": "Martin Jambor", "email": "jamborm@gcc.gnu.org", "date": "2010-07-22T12:52:14Z"}, "message": "re PR tree-optimization/44891 (non-trivial conversion ICE from early SRA)\n\n2010-07-22  Martin Jambor  <mjambor@suse.cz>\n\n\tPR tree-optimization/44891\n\t* tree-sra.c: Include gimple-pretty-print.h.\n\t(replace_uses_with_default_def_ssa_name): Renamed to\n\tget_repl_default_def_ssa_name, return the new SSA name instead of\n\treplacing the old one.\n\t(sra_modify_assign): Dump a message when removing a load, if the LHS\n\tis an SSA_NAME, do not do any propagation, just set the RHS to a\n\tdefault definition SSA NAME, type convert if necessary.\n\t* Makefile.in (tree-sra.o): Add gimple-pretty-print.h to dependencies.\n\n\t* testsuite/gcc.c-torture/compile/pr44891.c: New test.\n\nFrom-SVN: r162413", "tree": {"sha": "581bacc8bf5168e1f158d9364381e035e348e867", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/581bacc8bf5168e1f158d9364381e035e348e867"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/56a42add96f40b6dfd8002abfc3e55f5ccf40535", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56a42add96f40b6dfd8002abfc3e55f5ccf40535", "html_url": "https://github.com/Rust-GCC/gccrs/commit/56a42add96f40b6dfd8002abfc3e55f5ccf40535", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56a42add96f40b6dfd8002abfc3e55f5ccf40535/comments", "author": {"login": "jamborm", "id": 2180070, "node_id": "MDQ6VXNlcjIxODAwNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2180070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamborm", "html_url": "https://github.com/jamborm", "followers_url": "https://api.github.com/users/jamborm/followers", "following_url": "https://api.github.com/users/jamborm/following{/other_user}", "gists_url": "https://api.github.com/users/jamborm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamborm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamborm/subscriptions", "organizations_url": "https://api.github.com/users/jamborm/orgs", "repos_url": "https://api.github.com/users/jamborm/repos", "events_url": "https://api.github.com/users/jamborm/events{/privacy}", "received_events_url": "https://api.github.com/users/jamborm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "553fc5823088c7d0956b8f6aa9ee6e900a5e8e98", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/553fc5823088c7d0956b8f6aa9ee6e900a5e8e98", "html_url": "https://github.com/Rust-GCC/gccrs/commit/553fc5823088c7d0956b8f6aa9ee6e900a5e8e98"}], "stats": {"total": 95, "additions": 77, "deletions": 18}, "files": [{"sha": "f4ed6e49890742c47b7382eef87608383cf564fb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56a42add96f40b6dfd8002abfc3e55f5ccf40535/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56a42add96f40b6dfd8002abfc3e55f5ccf40535/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=56a42add96f40b6dfd8002abfc3e55f5ccf40535", "patch": "@@ -1,3 +1,15 @@\n+2010-07-22  Martin Jambor  <mjambor@suse.cz>\n+\n+\tPR tree-optimization/44891\n+\t* tree-sra.c: Include gimple-pretty-print.h.\n+\t(replace_uses_with_default_def_ssa_name): Renamed to\n+\tget_repl_default_def_ssa_name, return the new SSA name instead of\n+\treplacing the old one.\n+\t(sra_modify_assign): Dump a message when removing a load, if the LHS\n+\tis an SSA_NAME, do not do any propagation, just set the RHS to a\n+\tdefault definition SSA NAME, type convert if necessary.\n+\t* Makefile.in (tree-sra.o): Add gimple-pretty-print.h to dependencies.\n+\n 2010-07-22  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/45017"}, {"sha": "22e4ee80fe24cc7f8c65e2a05b2e50baa8daf317", "filename": "gcc/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56a42add96f40b6dfd8002abfc3e55f5ccf40535/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56a42add96f40b6dfd8002abfc3e55f5ccf40535/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=56a42add96f40b6dfd8002abfc3e55f5ccf40535", "patch": "@@ -3132,7 +3132,7 @@ tree-sra.o : tree-sra.c $(CONFIG_H) $(SYSTEM_H) coretypes.h alloc-pool.h \\\n    $(TM_H) $(TREE_H) $(GIMPLE_H) $(CGRAPH_H) $(TREE_FLOW_H) $(IPA_PROP_H) \\\n    $(DIAGNOSTIC_H) statistics.h $(TREE_DUMP_H) $(TIMEVAR_H) $(PARAMS_H) \\\n    $(TARGET_H) $(FLAGS_H) $(EXPR_H) tree-pretty-print.h $(DBGCNT_H) \\\n-   $(TREE_INLINE_H)\n+   $(TREE_INLINE_H) gimple-pretty-print.h\n tree-switch-conversion.o : tree-switch-conversion.c $(CONFIG_H) $(SYSTEM_H) \\\n     $(TREE_H) $(TM_P_H) $(TREE_FLOW_H) $(DIAGNOSTIC_H) $(TREE_INLINE_H) \\\n     $(TIMEVAR_H) $(TM_H) coretypes.h $(TREE_DUMP_H) $(GIMPLE_H) \\"}, {"sha": "7bffd78e1dcbd826e80123932bcade2d77e7a224", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56a42add96f40b6dfd8002abfc3e55f5ccf40535/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56a42add96f40b6dfd8002abfc3e55f5ccf40535/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=56a42add96f40b6dfd8002abfc3e55f5ccf40535", "patch": "@@ -1,3 +1,8 @@\n+2010-07-22  Martin Jambor  <mjambor@suse.cz>\n+\n+\tPR tree-optimization/44891\n+\t* testsuite/gcc.c-torture/compile/pr44891.c: New test.\n+\n 2010-07-22  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/45017"}, {"sha": "145b1446903511515c7d532f57e110e5982e6014", "filename": "gcc/testsuite/gcc.c-torture/compile/pr44891.c", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56a42add96f40b6dfd8002abfc3e55f5ccf40535/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr44891.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56a42add96f40b6dfd8002abfc3e55f5ccf40535/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr44891.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr44891.c?ref=56a42add96f40b6dfd8002abfc3e55f5ccf40535", "patch": "@@ -0,0 +1,26 @@\n+struct S\n+{\n+  float f;\n+  long l;\n+};\n+\n+extern int gi;\n+extern float gf;\n+\n+long foo (long p)\n+{\n+  struct S s;\n+  float *pf;\n+\n+  s.l = p;\n+\n+  pf = &s.f;\n+\n+  pf++;\n+  pf--;\n+\n+  gf = *pf + 3.3;\n+  gi = *((int *)pf) + 2;\n+\n+  return s.l + 6;\n+}"}, {"sha": "c051dd496f7118099149831a7ef8cb437d04cbd2", "filename": "gcc/tree-sra.c", "status": "modified", "additions": 33, "deletions": 17, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56a42add96f40b6dfd8002abfc3e55f5ccf40535/gcc%2Ftree-sra.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56a42add96f40b6dfd8002abfc3e55f5ccf40535/gcc%2Ftree-sra.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-sra.c?ref=56a42add96f40b6dfd8002abfc3e55f5ccf40535", "patch": "@@ -90,6 +90,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"flags.h\"\n #include \"dbgcnt.h\"\n #include \"tree-inline.h\"\n+#include \"gimple-pretty-print.h\"\n \n /* Enumeration of all aggregate reductions we can do.  */\n enum sra_mode { SRA_MODE_EARLY_IPA,   /* early call regularization */\n@@ -2542,12 +2543,12 @@ sra_modify_constructor_assign (gimple *stmt, gimple_stmt_iterator *gsi)\n     }\n }\n \n-/* Create a new suitable default definition SSA_NAME and replace all uses of\n-   SSA with it, RACC is access describing the uninitialized part of an\n-   aggregate that is being loaded.  */\n+/* Create and return a new suitable default definition SSA_NAME for RACC which\n+   is an access describing an uninitialized part of an aggregate that is being\n+   loaded.  */\n \n-static void\n-replace_uses_with_default_def_ssa_name (tree ssa, struct access *racc)\n+static tree\n+get_repl_default_def_ssa_name (struct access *racc)\n {\n   tree repl, decl;\n \n@@ -2560,7 +2561,7 @@ replace_uses_with_default_def_ssa_name (tree ssa, struct access *racc)\n       set_default_def (decl, repl);\n     }\n \n-  replace_uses_by (ssa, repl);\n+  return repl;\n }\n \n /* Examine both sides of the assignment statement pointed to by STMT, replace\n@@ -2737,18 +2738,33 @@ sra_modify_assign (gimple *stmt, gimple_stmt_iterator *gsi)\n \t    {\n \t      if (!racc->grp_to_be_replaced && !racc->grp_unscalarized_data)\n \t\t{\n-\t\t  if (racc->first_child)\n-\t\t    generate_subtree_copies (racc->first_child, lhs,\n-\t\t\t\t\t     racc->offset, 0, 0, gsi,\n-\t\t\t\t\t     false, false);\n-\t\t  gcc_assert (*stmt == gsi_stmt (*gsi));\n-\t\t  if (TREE_CODE (lhs) == SSA_NAME)\n-\t\t    replace_uses_with_default_def_ssa_name (lhs, racc);\n+\t\t  if (dump_file)\n+\t\t    {\n+\t\t      fprintf (dump_file, \"Removing load: \");\n+\t\t      print_gimple_stmt (dump_file, *stmt, 0, 0);\n+\t\t    }\n \n-\t\t  unlink_stmt_vdef (*stmt);\n-\t\t  gsi_remove (gsi, true);\n-\t\t  sra_stats.deleted++;\n-\t\t  return SRA_AM_REMOVED;\n+\t\t  if (TREE_CODE (lhs) == SSA_NAME)\n+\t\t    {\n+\t\t      rhs = get_repl_default_def_ssa_name (racc);\n+\t\t      if (!useless_type_conversion_p (TREE_TYPE (lhs),\n+\t\t\t\t\t\t      TREE_TYPE (rhs)))\n+\t\t\trhs = fold_build1_loc (loc, VIEW_CONVERT_EXPR,\n+\t\t\t\t\t       TREE_TYPE (lhs), rhs);\n+\t\t    }\n+\t\t  else\n+\t\t    {\n+\t\t      if (racc->first_child)\n+\t\t\tgenerate_subtree_copies (racc->first_child, lhs,\n+\t\t\t\t\t\t racc->offset, 0, 0, gsi,\n+\t\t\t\t\t\t false, false);\n+\n+\t\t      gcc_assert (*stmt == gsi_stmt (*gsi));\n+\t\t      unlink_stmt_vdef (*stmt);\n+\t\t      gsi_remove (gsi, true);\n+\t\t      sra_stats.deleted++;\n+\t\t      return SRA_AM_REMOVED;\n+\t\t    }\n \t\t}\n \t      else if (racc->first_child)\n \t\tgenerate_subtree_copies (racc->first_child, lhs,"}]}