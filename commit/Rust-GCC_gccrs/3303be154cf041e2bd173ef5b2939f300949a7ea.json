{"sha": "3303be154cf041e2bd173ef5b2939f300949a7ea", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzMwM2JlMTU0Y2YwNDFlMmJkMTczZWY1YjI5MzlmMzAwOTQ5YTdlYQ==", "commit": {"author": {"name": "Paul Brook", "email": "paul@codesourcery.com", "date": "2007-03-25T01:07:45Z"}, "committer": {"name": "Paul Brook", "email": "pbrook@gcc.gnu.org", "date": "2007-03-25T01:07:45Z"}, "message": "lib1funcs.asm (div0): Use ARM_FUNC_START and do_push.\n\n2007-03-24  Paul Brook  <paul@codesourcery.com>\n\n\t* config/arm/lib1funcs.asm (div0): Use ARM_FUNC_START and do_push.\n\t* config/arm/linux-eabi.h: Remove legacy syscall hack.\n\nFrom-SVN: r123192", "tree": {"sha": "3b74dfdc90d68f13bcad68ba1ec291c6ab98176b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3b74dfdc90d68f13bcad68ba1ec291c6ab98176b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3303be154cf041e2bd173ef5b2939f300949a7ea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3303be154cf041e2bd173ef5b2939f300949a7ea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3303be154cf041e2bd173ef5b2939f300949a7ea", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3303be154cf041e2bd173ef5b2939f300949a7ea/comments", "author": null, "committer": null, "parents": [{"sha": "81b780b061ac64ca484d917be1c70ac4a2d5b909", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/81b780b061ac64ca484d917be1c70ac4a2d5b909", "html_url": "https://github.com/Rust-GCC/gccrs/commit/81b780b061ac64ca484d917be1c70ac4a2d5b909"}], "stats": {"total": 15, "additions": 9, "deletions": 6}, "files": [{"sha": "a7247838a8869045368637759a7c5d88cebb8f00", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3303be154cf041e2bd173ef5b2939f300949a7ea/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3303be154cf041e2bd173ef5b2939f300949a7ea/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3303be154cf041e2bd173ef5b2939f300949a7ea", "patch": "@@ -1,3 +1,8 @@\n+2007-03-24  Paul Brook  <paul@codesourcery.com>\n+\n+\t* config/arm/lib1funcs.asm (div0): Use ARM_FUNC_START and do_push.\n+\t* config/arm/linux-eabi.h: Remove legacy syscall hack.\n+\n 2007-03-24  Richard Henderson  <rth@redhat.com>\n \n \t* config/ia64/constraints.md: New file."}, {"sha": "3dce23742859b5d4b57fc3ea78ad90101d2936ae", "filename": "gcc/config/arm/lib1funcs.asm", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3303be154cf041e2bd173ef5b2939f300949a7ea/gcc%2Fconfig%2Farm%2Flib1funcs.asm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3303be154cf041e2bd173ef5b2939f300949a7ea/gcc%2Fconfig%2Farm%2Flib1funcs.asm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Flib1funcs.asm?ref=3303be154cf041e2bd173ef5b2939f300949a7ea", "patch": "@@ -1062,10 +1062,9 @@ LSYM(Lover12):\n /* Constant taken from <asm/signal.h>.  */\n #define SIGFPE\t8\n \n-\t.code\t32\n-\tFUNC_START div0\n+\tARM_FUNC_START div0\n \n-\tstmfd\tsp!, {r1, lr}\n+\tdo_push\t{r1, lr}\n \tmov\tr0, #SIGFPE\n \tbl\tSYM(raise) __PLT__\n \tRETLDM\tr1"}, {"sha": "fe78f0f534732084845df9d783ad572037106295", "filename": "gcc/config/arm/linux-eabi.h", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3303be154cf041e2bd173ef5b2939f300949a7ea/gcc%2Fconfig%2Farm%2Flinux-eabi.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3303be154cf041e2bd173ef5b2939f300949a7ea/gcc%2Fconfig%2Farm%2Flinux-eabi.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Flinux-eabi.h?ref=3303be154cf041e2bd173ef5b2939f300949a7ea", "patch": "@@ -65,16 +65,15 @@\n #undef LIBGCC_SPEC\n \n /* Clear the instruction cache from `beg' to `end'.  This makes an\n-   inline system call to SYS_cacheflush.  It is modified to work with\n-   both the original and EABI-only syscall interfaces.  */\n+   inline system call to SYS_cacheflush.  */\n #undef CLEAR_INSN_CACHE\n #define CLEAR_INSN_CACHE(BEG, END)\t\t\t\t\t\\\n {\t\t\t\t\t\t\t\t\t\\\n   register unsigned long _beg __asm (\"a1\") = (unsigned long) (BEG);\t\\\n   register unsigned long _end __asm (\"a2\") = (unsigned long) (END);\t\\\n   register unsigned long _flg __asm (\"a3\") = 0;\t\t\t\t\\\n   register unsigned long _scno __asm (\"r7\") = 0xf0002;\t\t\t\\\n-  __asm __volatile (\"swi 0x9f0002\t\t@ sys_cacheflush\"\t\\\n+  __asm __volatile (\"swi 0\t\t@ sys_cacheflush\"\t\t\\\n \t\t    : \"=r\" (_beg)\t\t\t\t\t\\\n \t\t    : \"0\" (_beg), \"r\" (_end), \"r\" (_flg), \"r\" (_scno));\t\\\n }"}]}