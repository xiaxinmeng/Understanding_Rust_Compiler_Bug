{"sha": "fbdb6bafe2be0f4e12b85dcb92641bb55078bf72", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmJkYjZiYWZlMmJlMGY0ZTEyYjg1ZGNiOTI2NDFiYjU1MDc4YmY3Mg==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2016-03-23T17:51:56Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2016-03-23T17:51:56Z"}, "message": "re PR c++/69884 (warning: ignoring attributes on template argument)\n\n\tPR c++/69884\n\t* c.opt (Wignored-attributes): New option.\n\n\t* pt.c (canonicalize_type_argument): Use OPT_Wignored_attributes.\n\n\t* doc/invoke.texi: Document -Wignored-attributes.\n\n\t* g++.dg/warn/Wignored-attributes-1.C: New test.\n\t* g++.dg/warn/Wignored-attributes-2.C: New test.\n\nFrom-SVN: r234433", "tree": {"sha": "55a022f1d1e1e1278f5c5e34b3e2da9f4195fea0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/55a022f1d1e1e1278f5c5e34b3e2da9f4195fea0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fbdb6bafe2be0f4e12b85dcb92641bb55078bf72", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fbdb6bafe2be0f4e12b85dcb92641bb55078bf72", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fbdb6bafe2be0f4e12b85dcb92641bb55078bf72", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fbdb6bafe2be0f4e12b85dcb92641bb55078bf72/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d79ee5242bfcf2479658bf5450369d6856cc4904", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d79ee5242bfcf2479658bf5450369d6856cc4904", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d79ee5242bfcf2479658bf5450369d6856cc4904"}], "stats": {"total": 51, "additions": 49, "deletions": 2}, "files": [{"sha": "1b102c5e5d8e55cb943a6dd9d6cf7190a105f8e5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbdb6bafe2be0f4e12b85dcb92641bb55078bf72/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbdb6bafe2be0f4e12b85dcb92641bb55078bf72/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fbdb6bafe2be0f4e12b85dcb92641bb55078bf72", "patch": "@@ -1,3 +1,8 @@\n+2016-03-23  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/69884\n+\t* doc/invoke.texi: Document -Wignored-attributes.\n+\n 2016-03-23  Bin Cheng  <bin.cheng@arm.com>\n \n \tPR tree-optimization/69042"}, {"sha": "c1188d7e5c0c990a3165c673e69ad7f30e3d4f19", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbdb6bafe2be0f4e12b85dcb92641bb55078bf72/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbdb6bafe2be0f4e12b85dcb92641bb55078bf72/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=fbdb6bafe2be0f4e12b85dcb92641bb55078bf72", "patch": "@@ -1,3 +1,8 @@\n+2016-03-23  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/69884\n+\t* c.opt (Wignored-attributes): New option.\n+\n 2016-03-22  David Malcolm  <dmalcolm@redhat.com>\n \n \tPR c/69993"}, {"sha": "4f86876c533db05c02e23535384a70b990322f40", "filename": "gcc/c-family/c.opt", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbdb6bafe2be0f4e12b85dcb92641bb55078bf72/gcc%2Fc-family%2Fc.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbdb6bafe2be0f4e12b85dcb92641bb55078bf72/gcc%2Fc-family%2Fc.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc.opt?ref=fbdb6bafe2be0f4e12b85dcb92641bb55078bf72", "patch": "@@ -482,6 +482,10 @@ Wignored-qualifiers\n C C++ Var(warn_ignored_qualifiers) Warning EnabledBy(Wextra)\n Warn whenever type qualifiers are ignored.\n \n+Wignored-attributes\n+C C++ Var(warn_ignored_attributes) Init(1) Warning\n+Warn whenever attributes are ignored.\n+\n Wincompatible-pointer-types\n C ObjC Var(warn_incompatible_pointer_types) Init(1) Warning\n Warn when there is a conversion between pointers that have incompatible types."}, {"sha": "d36168957ca6e62419b676fc05882a560c0fd38b", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbdb6bafe2be0f4e12b85dcb92641bb55078bf72/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbdb6bafe2be0f4e12b85dcb92641bb55078bf72/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=fbdb6bafe2be0f4e12b85dcb92641bb55078bf72", "patch": "@@ -1,3 +1,8 @@\n+2016-03-23  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/69884\n+\t* pt.c (canonicalize_type_argument): Use OPT_Wignored_attributes.\n+\n 2016-03-22  Ilya Enkovich  <enkovich.gnu@gmail.com>\n \n \t* call.c (build_conditional_expr_1): Always use original"}, {"sha": "68374389f3beb184932edd4c1de2ddfbd09aa79f", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbdb6bafe2be0f4e12b85dcb92641bb55078bf72/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbdb6bafe2be0f4e12b85dcb92641bb55078bf72/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=fbdb6bafe2be0f4e12b85dcb92641bb55078bf72", "patch": "@@ -6950,7 +6950,8 @@ canonicalize_type_argument (tree arg, tsubst_flags_t complain)\n   tree canon = strip_typedefs (arg, &removed_attributes);\n   if (removed_attributes\n       && (complain & tf_warning))\n-    warning (0, \"ignoring attributes on template argument %qT\", arg);\n+    warning (OPT_Wignored_attributes,\n+\t     \"ignoring attributes on template argument %qT\", arg);\n   return canon;\n }\n "}, {"sha": "9e54bb75737faa240a6c353214760c7a3efd1529", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbdb6bafe2be0f4e12b85dcb92641bb55078bf72/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbdb6bafe2be0f4e12b85dcb92641bb55078bf72/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=fbdb6bafe2be0f4e12b85dcb92641bb55078bf72", "patch": "@@ -267,7 +267,7 @@ Objective-C and Objective-C++ Dialects}.\n -Wno-format-contains-nul -Wno-format-extra-args -Wformat-nonliteral @gol\n -Wformat-security  -Wformat-signedness  -Wformat-y2k -Wframe-address @gol\n -Wframe-larger-than=@var{len} -Wno-free-nonheap-object -Wjump-misses-init @gol\n--Wignored-qualifiers  -Wincompatible-pointer-types @gol\n+-Wignored-qualifiers  -Wignored-attributes  -Wincompatible-pointer-types @gol\n -Wimplicit  -Wimplicit-function-declaration  -Wimplicit-int @gol\n -Winit-self  -Winline  -Wno-int-conversion @gol\n -Wno-int-to-pointer-cast -Winvalid-memory-model -Wno-invalid-offsetof @gol\n@@ -3886,6 +3886,14 @@ even without this option.\n \n This warning is also enabled by @option{-Wextra}.\n \n+@item -Wignored-attributes @r{(C and C++ only)}\n+@opindex Wignored-attributes\n+@opindex Wno-ignored-attributes\n+Warn when an attribute is ignored.  This is different from the\n+@option{-Wattributes} option in that it warns whenever the compiler decides\n+to drop an attribute, not that the attribute is either unknown, used in a\n+wrong place, etc.  This warning is enabled by default.\n+\n @item -Wmain\n @opindex Wmain\n @opindex Wno-main"}, {"sha": "93b731266ab57c0870c4cf605118210874cad6cd", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbdb6bafe2be0f4e12b85dcb92641bb55078bf72/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbdb6bafe2be0f4e12b85dcb92641bb55078bf72/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=fbdb6bafe2be0f4e12b85dcb92641bb55078bf72", "patch": "@@ -1,3 +1,9 @@\n+2016-03-23  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/69884\n+\t* g++.dg/warn/Wignored-attributes-1.C: New test.\n+\t* g++.dg/warn/Wignored-attributes-2.C: New test.\n+\n 2016-03-23  Tom de Vries  <tom@codesourcery.com>\n \n \t* c-c++-common/goacc/kernels-default.c (foo): Add missing"}, {"sha": "46ccc4a12f907306be52e1792fbd0fc157ee25cd", "filename": "gcc/testsuite/g++.dg/warn/Wignored-attributes-1.C", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbdb6bafe2be0f4e12b85dcb92641bb55078bf72/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWignored-attributes-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbdb6bafe2be0f4e12b85dcb92641bb55078bf72/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWignored-attributes-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWignored-attributes-1.C?ref=fbdb6bafe2be0f4e12b85dcb92641bb55078bf72", "patch": "@@ -0,0 +1,6 @@\n+// PR c++/69884\n+// { dg-do compile }\n+\n+typedef float __m128 __attribute__((__vector_size__(16), __may_alias__));\n+template <typename> struct A;\n+template <> struct A<__m128>; // { dg-warning \"ignoring attributes on template argument\" }"}, {"sha": "6431607aaeccabc38557d0aff3090d3d9c034760", "filename": "gcc/testsuite/g++.dg/warn/Wignored-attributes-2.C", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbdb6bafe2be0f4e12b85dcb92641bb55078bf72/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWignored-attributes-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbdb6bafe2be0f4e12b85dcb92641bb55078bf72/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWignored-attributes-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWignored-attributes-2.C?ref=fbdb6bafe2be0f4e12b85dcb92641bb55078bf72", "patch": "@@ -0,0 +1,7 @@\n+// PR c++/69884\n+// { dg-do compile }\n+// { dg-options \"-Wno-ignored-attributes\" }\n+\n+typedef float __m128 __attribute__((__vector_size__(16), __may_alias__));\n+template <typename> struct A;\n+template <> struct A<__m128>;"}]}