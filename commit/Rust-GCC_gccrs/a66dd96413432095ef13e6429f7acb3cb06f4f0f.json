{"sha": "a66dd96413432095ef13e6429f7acb3cb06f4f0f", "node_id": "C_kwDOANBUbNoAKGE2NmRkOTY0MTM0MzIwOTVlZjEzZTY0MjlmN2FjYjNjYjA2ZjRmMGY", "commit": {"author": {"name": "Nirmal Patel", "email": "npate012@gmail.com", "date": "2021-10-29T18:27:50Z"}, "committer": {"name": "Nirmal Patel", "email": "npate012@gmail.com", "date": "2021-10-29T18:27:50Z"}, "message": "Add location info in AST::TypeBoundWhereClauseItem and HIR::TypeBoundWhereClauseItem\n\nLocation info has been added to AST::TypeBoundWhereClauseItem and\nHIR::TypeBoundWhereClauseItem. parse_type_bound_where_clause_item () has been\nmodified to fetch location info and store it in AST::TypeBoundWhereClauseItem\n\nFixes #766\n\nSigned-off-by: Nirmal Patel <npate012@gmail.com>", "tree": {"sha": "e20c3965e480c2ce76ee5276a2b8a3b96fd3ba9a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e20c3965e480c2ce76ee5276a2b8a3b96fd3ba9a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a66dd96413432095ef13e6429f7acb3cb06f4f0f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a66dd96413432095ef13e6429f7acb3cb06f4f0f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a66dd96413432095ef13e6429f7acb3cb06f4f0f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a66dd96413432095ef13e6429f7acb3cb06f4f0f/comments", "author": {"login": "nirmal-j-patel", "id": 5339144, "node_id": "MDQ6VXNlcjUzMzkxNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/5339144?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nirmal-j-patel", "html_url": "https://github.com/nirmal-j-patel", "followers_url": "https://api.github.com/users/nirmal-j-patel/followers", "following_url": "https://api.github.com/users/nirmal-j-patel/following{/other_user}", "gists_url": "https://api.github.com/users/nirmal-j-patel/gists{/gist_id}", "starred_url": "https://api.github.com/users/nirmal-j-patel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nirmal-j-patel/subscriptions", "organizations_url": "https://api.github.com/users/nirmal-j-patel/orgs", "repos_url": "https://api.github.com/users/nirmal-j-patel/repos", "events_url": "https://api.github.com/users/nirmal-j-patel/events{/privacy}", "received_events_url": "https://api.github.com/users/nirmal-j-patel/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nirmal-j-patel", "id": 5339144, "node_id": "MDQ6VXNlcjUzMzkxNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/5339144?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nirmal-j-patel", "html_url": "https://github.com/nirmal-j-patel", "followers_url": "https://api.github.com/users/nirmal-j-patel/followers", "following_url": "https://api.github.com/users/nirmal-j-patel/following{/other_user}", "gists_url": "https://api.github.com/users/nirmal-j-patel/gists{/gist_id}", "starred_url": "https://api.github.com/users/nirmal-j-patel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nirmal-j-patel/subscriptions", "organizations_url": "https://api.github.com/users/nirmal-j-patel/orgs", "repos_url": "https://api.github.com/users/nirmal-j-patel/repos", "events_url": "https://api.github.com/users/nirmal-j-patel/events{/privacy}", "received_events_url": "https://api.github.com/users/nirmal-j-patel/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cba61d8dcbe1ac0fb23a96b2974541b201292465", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cba61d8dcbe1ac0fb23a96b2974541b201292465", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cba61d8dcbe1ac0fb23a96b2974541b201292465"}], "stats": {"total": 21, "additions": 15, "deletions": 6}, "files": [{"sha": "39411f8adedf937847e7a6630f88b4d7e5b68e6c", "filename": "gcc/rust/ast/rust-item.h", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a66dd96413432095ef13e6429f7acb3cb06f4f0f/gcc%2Frust%2Fast%2Frust-item.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a66dd96413432095ef13e6429f7acb3cb06f4f0f/gcc%2Frust%2Fast%2Frust-item.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fast%2Frust-item.h?ref=a66dd96413432095ef13e6429f7acb3cb06f4f0f", "patch": "@@ -228,6 +228,7 @@ class TypeBoundWhereClauseItem : public WhereClauseItem\n   std::unique_ptr<Type> bound_type;\n   std::vector<std::unique_ptr<TypeParamBound>> type_param_bounds;\n   NodeId node_id;\n+  Location locus;\n \n public:\n   // Returns whether the item has ForLifetimes\n@@ -238,11 +239,12 @@ class TypeBoundWhereClauseItem : public WhereClauseItem\n \n   TypeBoundWhereClauseItem (\n     std::vector<LifetimeParam> for_lifetimes, std::unique_ptr<Type> bound_type,\n-    std::vector<std::unique_ptr<TypeParamBound>> type_param_bounds)\n+    std::vector<std::unique_ptr<TypeParamBound>> type_param_bounds,\n+    Location locus)\n     : for_lifetimes (std::move (for_lifetimes)),\n       bound_type (std::move (bound_type)),\n       type_param_bounds (std::move (type_param_bounds)),\n-      node_id (Analysis::Mappings::get ()->get_next_node_id ())\n+      node_id (Analysis::Mappings::get ()->get_next_node_id ()), locus (locus)\n   {}\n \n   // Copy constructor requires clone\n@@ -298,6 +300,8 @@ class TypeBoundWhereClauseItem : public WhereClauseItem\n \n   NodeId get_node_id () const override final { return node_id; }\n \n+  Location get_locus () const { return locus; }\n+\n protected:\n   // Clone function implementation as (not pure) virtual method\n   TypeBoundWhereClauseItem *clone_where_clause_item_impl () const override"}, {"sha": "f44825c2e6348ecf9bc3a88555ee00e39ac73df9", "filename": "gcc/rust/hir/rust-ast-lower-type.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a66dd96413432095ef13e6429f7acb3cb06f4f0f/gcc%2Frust%2Fhir%2Frust-ast-lower-type.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a66dd96413432095ef13e6429f7acb3cb06f4f0f/gcc%2Frust%2Fhir%2Frust-ast-lower-type.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fhir%2Frust-ast-lower-type.h?ref=a66dd96413432095ef13e6429f7acb3cb06f4f0f", "patch": "@@ -479,7 +479,8 @@ class ASTLowerWhereClauseItem : public ASTLoweringBase\n     translated\n       = new HIR::TypeBoundWhereClauseItem (mapping, std::move (for_lifetimes),\n \t\t\t\t\t   std::move (bound_type),\n-\t\t\t\t\t   std::move (type_param_bounds));\n+\t\t\t\t\t   std::move (type_param_bounds),\n+\t\t\t\t\t   item.get_locus ());\n   }\n \n private:"}, {"sha": "9b8793fae21d5f4d0d98d3da7fadb5a481d308cb", "filename": "gcc/rust/hir/tree/rust-hir-item.h", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a66dd96413432095ef13e6429f7acb3cb06f4f0f/gcc%2Frust%2Fhir%2Ftree%2Frust-hir-item.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a66dd96413432095ef13e6429f7acb3cb06f4f0f/gcc%2Frust%2Fhir%2Ftree%2Frust-hir-item.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fhir%2Ftree%2Frust-hir-item.h?ref=a66dd96413432095ef13e6429f7acb3cb06f4f0f", "patch": "@@ -218,6 +218,7 @@ class TypeBoundWhereClauseItem : public WhereClauseItem\n   std::unique_ptr<Type> bound_type;\n   std::vector<std::unique_ptr<TypeParamBound>> type_param_bounds;\n   Analysis::NodeMapping mappings;\n+  Location locus;\n \n public:\n   // Returns whether the item has ForLifetimes\n@@ -229,11 +230,12 @@ class TypeBoundWhereClauseItem : public WhereClauseItem\n   TypeBoundWhereClauseItem (\n     Analysis::NodeMapping mappings, std::vector<LifetimeParam> for_lifetimes,\n     std::unique_ptr<Type> bound_type,\n-    std::vector<std::unique_ptr<TypeParamBound>> type_param_bounds)\n+    std::vector<std::unique_ptr<TypeParamBound>> type_param_bounds,\n+    Location locus)\n     : for_lifetimes (std::move (for_lifetimes)),\n       bound_type (std::move (bound_type)),\n       type_param_bounds (std::move (type_param_bounds)),\n-      mappings (std::move (mappings))\n+      mappings (std::move (mappings)), locus (locus)\n   {}\n \n   // Copy constructor requires clone"}, {"sha": "52aba4f22485ad5a2d5be725da66d534d90207c3", "filename": "gcc/rust/parse/rust-parse-impl.h", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a66dd96413432095ef13e6429f7acb3cb06f4f0f/gcc%2Frust%2Fparse%2Frust-parse-impl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a66dd96413432095ef13e6429f7acb3cb06f4f0f/gcc%2Frust%2Fparse%2Frust-parse-impl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fparse%2Frust-parse-impl.h?ref=a66dd96413432095ef13e6429f7acb3cb06f4f0f", "patch": "@@ -3612,10 +3612,12 @@ Parser<ManagedTokenSource>::parse_type_bound_where_clause_item ()\n   std::vector<std::unique_ptr<AST::TypeParamBound>> type_param_bounds\n     = parse_type_param_bounds ();\n \n+  Location locus = lexer.peek_token ()->get_locus ();\n+\n   return std::unique_ptr<AST::TypeBoundWhereClauseItem> (\n     new AST::TypeBoundWhereClauseItem (std::move (for_lifetimes),\n \t\t\t\t       std::move (type),\n-\t\t\t\t       std::move (type_param_bounds)));\n+\t\t\t\t       std::move (type_param_bounds), locus));\n }\n \n // Parses a for lifetimes clause, including the for keyword and angle brackets."}]}