{"sha": "e2fc57a3e1235743d7f8170dc9835124e3f513b4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTJmYzU3YTNlMTIzNTc0M2Q3ZjgxNzBkYzk4MzUxMjRlM2Y1MTNiNA==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2007-01-19T14:03:17Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2007-01-19T14:03:17Z"}, "message": "i386.md (acos<mode>2): Rename from acossf2 and acosdf2.\n\n\t* config/i386/i386.md (acos<mode>2): Rename from acossf2 and acosdf2.\n\tMacroize expander using X87MODEF12 mode macro.  Extend operand 1\n\tto XFMode, use acosxf2 and truncate result to requested mode.\n\tUse SSE_FLOAT_MODE_P to disable patterns for SSE math.\n\t(asin<mode>2): Similarly, with asin expanders.\n\t(*fscalexf4_i387): Rename from *fscalexf4.\n\t(expNcorexf3): New expander.\n\t(expxf2, exp10xf2, exp2xf2): Use expNcorexf3 expander.\n\t(exp<mode>2): Rename from expsf2 and expdf2. Macroize expander using\n\tX87MODEF12 mode macro.  Extend operand 1 to XFMode, use expxf2 and\n\ttruncate result to requested mode. Use SSE_FLOAT_MODE_P to disable\n\tpatterns for SSE math.\n\t(exp10<mode>2): Similarly, with exp10 expanders.\n\t(exp2<mode>2): Similarly, with exp2 expanders.\n\t(expm1<mode>2): Similarly, with expm1 expanders.\n\t(ldexp<mode>3): Similarly, with ldexp expanders.\n\t(log<mode>2, log10<mode>2, log2<mode>2, log1p<mode>2, logb<mode>2):\n\tUse gen_truncxf<mode>2_i387_noop to truncate result.\n\nFrom-SVN: r120966", "tree": {"sha": "522f3ca8cde6b890419e4c7eb016d4a43160ca7a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/522f3ca8cde6b890419e4c7eb016d4a43160ca7a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e2fc57a3e1235743d7f8170dc9835124e3f513b4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2fc57a3e1235743d7f8170dc9835124e3f513b4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e2fc57a3e1235743d7f8170dc9835124e3f513b4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2fc57a3e1235743d7f8170dc9835124e3f513b4/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "aaacff326fe0d059d183d8b1a427ce72c2b9bfa5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aaacff326fe0d059d183d8b1a427ce72c2b9bfa5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aaacff326fe0d059d183d8b1a427ce72c2b9bfa5"}], "stats": {"total": 567, "additions": 153, "deletions": 414}, "files": [{"sha": "4ef531ab020f3027ecf50e6507fff4300ccd2281", "filename": "gcc/ChangeLog", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2fc57a3e1235743d7f8170dc9835124e3f513b4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2fc57a3e1235743d7f8170dc9835124e3f513b4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e2fc57a3e1235743d7f8170dc9835124e3f513b4", "patch": "@@ -1,3 +1,24 @@\n+2007-01-19  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/i386.md (acos<mode>2): Rename from acossf2 and acosdf2.\n+\tMacroize expander using X87MODEF12 mode macro.  Extend operand 1\n+\tto XFMode, use acosxf2 and truncate result to requested mode.\n+\tUse SSE_FLOAT_MODE_P to disable patterns for SSE math.\n+\t(asin<mode>2): Similarly, with asin expanders.\n+\t(*fscalexf4_i387): Rename from *fscalexf4.\n+\t(expNcorexf3): New expander.\n+\t(expxf2, exp10xf2, exp2xf2): Use expNcorexf3 expander.\n+\t(exp<mode>2): Rename from expsf2 and expdf2. Macroize expander using\n+\tX87MODEF12 mode macro.  Extend operand 1 to XFMode, use expxf2 and\n+\ttruncate result to requested mode. Use SSE_FLOAT_MODE_P to disable\n+\tpatterns for SSE math.\n+\t(exp10<mode>2): Similarly, with exp10 expanders.\n+\t(exp2<mode>2): Similarly, with exp2 expanders.\n+\t(expm1<mode>2): Similarly, with expm1 expanders.\n+\t(ldexp<mode>3): Similarly, with ldexp expanders.\n+\t(log<mode>2, log10<mode>2, log2<mode>2, log1p<mode>2, logb<mode>2):\n+\tUse gen_truncxf<mode>2_i387_noop to truncate result.\n+\n 2007-01-19  Richard Sandiford  <richard@codesourcery.com>\n \n \t* config/m68k/m68k.h (PREFERRED_STACK_BOUNDARY): Define to 32"}, {"sha": "fb3a41bbe4f1a9d528589f0835f890caaabbfd6c", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 132, "deletions": 414, "changes": 546, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2fc57a3e1235743d7f8170dc9835124e3f513b4/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2fc57a3e1235743d7f8170dc9835124e3f513b4/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=e2fc57a3e1235743d7f8170dc9835124e3f513b4", "patch": "@@ -16012,54 +16012,6 @@\n   DONE;\n })\n \n-(define_expand \"asindf2\"\n-  [(set (match_dup 2)\n-\t(float_extend:XF (match_operand:DF 1 \"register_operand\" \"\")))\n-   (set (match_dup 3) (mult:XF (match_dup 2) (match_dup 2)))\n-   (set (match_dup 5) (minus:XF (match_dup 4) (match_dup 3)))\n-   (set (match_dup 6) (sqrt:XF (match_dup 5)))\n-   (parallel [(set (match_dup 7)\n-        \t   (unspec:XF [(match_dup 6) (match_dup 2)]\n-\t\t\t      UNSPEC_FPATAN))\n-   \t      (clobber (match_scratch:XF 8 \"\"))])\n-   (set (match_operand:DF 0 \"register_operand\" \"\")\n-\t(float_truncate:DF (match_dup 7)))]\n-  \"TARGET_USE_FANCY_MATH_387\n-   && (!(TARGET_SSE2 && TARGET_SSE_MATH) || TARGET_MIX_SSE_I387)\n-   && flag_unsafe_math_optimizations && !optimize_size\"\n-{\n-  int i;\n-\n-  for (i=2; i<8; i++)\n-    operands[i] = gen_reg_rtx (XFmode);\n-\n-  emit_move_insn (operands[4], CONST1_RTX (XFmode));  /* fld1 */\n-})\n-\n-(define_expand \"asinsf2\"\n-  [(set (match_dup 2)\n-\t(float_extend:XF (match_operand:SF 1 \"register_operand\" \"\")))\n-   (set (match_dup 3) (mult:XF (match_dup 2) (match_dup 2)))\n-   (set (match_dup 5) (minus:XF (match_dup 4) (match_dup 3)))\n-   (set (match_dup 6) (sqrt:XF (match_dup 5)))\n-   (parallel [(set (match_dup 7)\n-        \t   (unspec:XF [(match_dup 6) (match_dup 2)]\n-\t\t\t      UNSPEC_FPATAN))\n-   \t      (clobber (match_scratch:XF 8 \"\"))])\n-   (set (match_operand:SF 0 \"register_operand\" \"\")\n-\t(float_truncate:SF (match_dup 7)))]\n-  \"TARGET_USE_FANCY_MATH_387\n-   && (!TARGET_SSE_MATH || TARGET_MIX_SSE_I387)\n-   && flag_unsafe_math_optimizations && !optimize_size\"\n-{\n-  int i;\n-\n-  for (i=2; i<8; i++)\n-    operands[i] = gen_reg_rtx (XFmode);\n-\n-  emit_move_insn (operands[4], CONST1_RTX (XFmode));  /* fld1 */\n-})\n-\n (define_expand \"asinxf2\"\n   [(set (match_dup 2)\n \t(mult:XF (match_operand:XF 1 \"register_operand\" \"\")\n@@ -16075,58 +16027,27 @@\n {\n   int i;\n \n-  for (i=2; i<6; i++)\n+  for (i = 2; i < 6; i++)\n     operands[i] = gen_reg_rtx (XFmode);\n \n   emit_move_insn (operands[3], CONST1_RTX (XFmode));  /* fld1 */\n })\n \n-(define_expand \"acosdf2\"\n-  [(set (match_dup 2)\n-\t(float_extend:XF (match_operand:DF 1 \"register_operand\" \"\")))\n-   (set (match_dup 3) (mult:XF (match_dup 2) (match_dup 2)))\n-   (set (match_dup 5) (minus:XF (match_dup 4) (match_dup 3)))\n-   (set (match_dup 6) (sqrt:XF (match_dup 5)))\n-   (parallel [(set (match_dup 7)\n-        \t   (unspec:XF [(match_dup 2) (match_dup 6)]\n-\t\t\t      UNSPEC_FPATAN))\n-   \t      (clobber (match_scratch:XF 8 \"\"))])\n-   (set (match_operand:DF 0 \"register_operand\" \"\")\n-\t(float_truncate:DF (match_dup 7)))]\n-  \"TARGET_USE_FANCY_MATH_387\n-   && (!(TARGET_SSE2 && TARGET_SSE_MATH) || TARGET_MIX_SSE_I387)\n-   && flag_unsafe_math_optimizations && !optimize_size\"\n-{\n-  int i;\n-\n-  for (i=2; i<8; i++)\n-    operands[i] = gen_reg_rtx (XFmode);\n-\n-  emit_move_insn (operands[4], CONST1_RTX (XFmode));  /* fld1 */\n-})\n-\n-(define_expand \"acossf2\"\n-  [(set (match_dup 2)\n-\t(float_extend:XF (match_operand:SF 1 \"register_operand\" \"\")))\n-   (set (match_dup 3) (mult:XF (match_dup 2) (match_dup 2)))\n-   (set (match_dup 5) (minus:XF (match_dup 4) (match_dup 3)))\n-   (set (match_dup 6) (sqrt:XF (match_dup 5)))\n-   (parallel [(set (match_dup 7)\n-        \t   (unspec:XF [(match_dup 2) (match_dup 6)]\n-\t\t\t      UNSPEC_FPATAN))\n-   \t      (clobber (match_scratch:XF 8 \"\"))])\n-   (set (match_operand:SF 0 \"register_operand\" \"\")\n-\t(float_truncate:SF (match_dup 7)))]\n-  \"TARGET_USE_FANCY_MATH_387\n-   && (!TARGET_SSE_MATH || TARGET_MIX_SSE_I387)\n+(define_expand \"asin<mode>2\"\n+  [(use (match_operand:X87MODEF12 0 \"register_operand\" \"\"))\n+   (use (match_operand:X87MODEF12 1 \"general_operand\" \"\"))]\n+ \"TARGET_USE_FANCY_MATH_387\n+   && (!(SSE_FLOAT_MODE_P (<MODE>mode) && TARGET_SSE_MATH)\n+       || TARGET_MIX_SSE_I387)\n    && flag_unsafe_math_optimizations && !optimize_size\"\n {\n-  int i;\n-\n-  for (i=2; i<8; i++)\n-    operands[i] = gen_reg_rtx (XFmode);\n+  rtx op0 = gen_reg_rtx (XFmode);\n+  rtx op1 = gen_reg_rtx (XFmode);\n \n-  emit_move_insn (operands[4], CONST1_RTX (XFmode));  /* fld1 */\n+  emit_insn (gen_extend<mode>xf2 (op1, operands[1]));\n+  emit_insn (gen_asinxf2 (op0, op1));\n+  emit_insn (gen_truncxf<mode>2_i387_noop (operands[0], op0));\n+  DONE;\n })\n \n (define_expand \"acosxf2\"\n@@ -16144,12 +16065,29 @@\n {\n   int i;\n \n-  for (i=2; i<6; i++)\n+  for (i = 2; i < 6; i++)\n     operands[i] = gen_reg_rtx (XFmode);\n \n   emit_move_insn (operands[3], CONST1_RTX (XFmode));  /* fld1 */\n })\n \n+(define_expand \"acos<mode>2\"\n+  [(use (match_operand:X87MODEF12 0 \"register_operand\" \"\"))\n+   (use (match_operand:X87MODEF12 1 \"general_operand\" \"\"))]\n+ \"TARGET_USE_FANCY_MATH_387\n+   && (!(SSE_FLOAT_MODE_P (<MODE>mode) && TARGET_SSE_MATH)\n+       || TARGET_MIX_SSE_I387)\n+   && flag_unsafe_math_optimizations && !optimize_size\"\n+{\n+  rtx op0 = gen_reg_rtx (XFmode);\n+  rtx op1 = gen_reg_rtx (XFmode);\n+\n+  emit_insn (gen_extend<mode>xf2 (op1, operands[1]));\n+  emit_insn (gen_acosxf2 (op0, op1));\n+  emit_insn (gen_truncxf<mode>2_i387_noop (operands[0], op0));\n+  DONE;\n+})\n+\n (define_insn \"fyl2xxf3_i387\"\n   [(set (match_operand:XF 0 \"register_operand\" \"=f\")\n         (unspec:XF [(match_operand:XF 1 \"register_operand\" \"0\")\n@@ -16203,7 +16141,7 @@\n   emit_move_insn (operands[2], standard_80387_constant_rtx (4)); /* fldln2 */\n \n   emit_insn (gen_fyl2x_extend<mode>xf3_i387 (op0, operands[1], operands[2]));\n-  emit_insn (gen_truncxf<mode>2_i387_noop_unspec (operands[0], op0));\n+  emit_insn (gen_truncxf<mode>2_i387_noop (operands[0], op0));\n   DONE;\n })\n \n@@ -16233,7 +16171,7 @@\n   emit_move_insn (operands[2], standard_80387_constant_rtx (3)); /* fldlg2 */\n \n   emit_insn (gen_fyl2x_extend<mode>xf3_i387 (op0, operands[1], operands[2]));\n-  emit_insn (gen_truncxf<mode>2_i387_noop_unspec (operands[0], op0));\n+  emit_insn (gen_truncxf<mode>2_i387_noop (operands[0], op0));\n   DONE;\n })\n \n@@ -16263,7 +16201,7 @@\n   emit_move_insn (operands[2], CONST1_RTX (XFmode)); /* fld1 */\n \n   emit_insn (gen_fyl2x_extend<mode>xf3_i387 (op0, operands[1], operands[2]));\n-  emit_insn (gen_truncxf<mode>2_i387_noop_unspec (operands[0], op0));\n+  emit_insn (gen_truncxf<mode>2_i387_noop (operands[0], op0));\n   DONE;\n })\n \n@@ -16317,7 +16255,7 @@\n   operands[1] = gen_rtx_FLOAT_EXTEND (XFmode, operands[1]);\n \n   ix86_emit_i387_log1p (op0, operands[1]);\n-  emit_insn (gen_truncxf<mode>2_i387_noop_unspec (operands[0], op0));\n+  emit_insn (gen_truncxf<mode>2_i387_noop (operands[0], op0));\n   DONE;\n })\n \n@@ -16372,7 +16310,7 @@\n   rtx op1 = gen_reg_rtx (XFmode);\n \n   emit_insn (gen_fxtract_extend<mode>xf3_i387 (op0, op1, operands[1]));\n-  emit_insn (gen_truncxf<mode>2_i387_noop_unspec (operands[0], op1));\n+  emit_insn (gen_truncxf<mode>2_i387_noop (operands[0], op1));\n   DONE;\n })\n \n@@ -16393,17 +16331,17 @@\n   operands[3] = gen_reg_rtx (XFmode);\n })\n \n-(define_insn \"*f2xm1xf2\"\n+(define_insn \"*f2xm1xf2_i387\"\n   [(set (match_operand:XF 0 \"register_operand\" \"=f\")\n \t(unspec:XF [(match_operand:XF 1 \"register_operand\" \"0\")]\n-\t UNSPEC_F2XM1))]\n+\t\t   UNSPEC_F2XM1))]\n   \"TARGET_USE_FANCY_MATH_387\n    && flag_unsafe_math_optimizations\"\n   \"f2xm1\"\n   [(set_attr \"type\" \"fpspc\")\n    (set_attr \"mode\" \"XF\")])\n \n-(define_insn \"*fscalexf4\"\n+(define_insn \"*fscalexf4_i387\"\n   [(set (match_operand:XF 0 \"register_operand\" \"=f\")\n \t(unspec:XF [(match_operand:XF 2 \"register_operand\" \"0\")\n \t\t    (match_operand:XF 3 \"register_operand\" \"1\")]\n@@ -16417,69 +16355,9 @@\n   [(set_attr \"type\" \"fpspc\")\n    (set_attr \"mode\" \"XF\")])\n \n-(define_expand \"expsf2\"\n-  [(set (match_dup 2)\n-\t(float_extend:XF (match_operand:SF 1 \"register_operand\" \"\")))\n-   (set (match_dup 4) (mult:XF (match_dup 2) (match_dup 3)))\n-   (set (match_dup 5) (unspec:XF [(match_dup 4)] UNSPEC_FRNDINT))\n-   (set (match_dup 6) (minus:XF (match_dup 4) (match_dup 5)))\n-   (set (match_dup 7) (unspec:XF [(match_dup 6)] UNSPEC_F2XM1))\n-   (set (match_dup 9) (plus:XF (match_dup 7) (match_dup 8)))\n-   (parallel [(set (match_dup 10)\n-\t\t   (unspec:XF [(match_dup 9) (match_dup 5)]\n-\t\t\t      UNSPEC_FSCALE_FRACT))\n-\t      (set (match_dup 11)\n-\t\t   (unspec:XF [(match_dup 9) (match_dup 5)]\n-\t\t\t      UNSPEC_FSCALE_EXP))])\n-   (set (match_operand:SF 0 \"register_operand\" \"\")\n-\t(float_truncate:SF (match_dup 10)))]\n-  \"TARGET_USE_FANCY_MATH_387\n-   && (!TARGET_SSE_MATH || TARGET_MIX_SSE_I387)\n-   && flag_unsafe_math_optimizations && !optimize_size\"\n-{\n-  rtx temp;\n-  int i;\n-\n-  for (i=2; i<12; i++)\n-    operands[i] = gen_reg_rtx (XFmode);\n-  temp = standard_80387_constant_rtx (5); /* fldl2e */\n-  emit_move_insn (operands[3], temp);\n-  emit_move_insn (operands[8], CONST1_RTX (XFmode));  /* fld1 */\n-})\n-\n-(define_expand \"expdf2\"\n-  [(set (match_dup 2)\n-\t(float_extend:XF (match_operand:DF 1 \"register_operand\" \"\")))\n-   (set (match_dup 4) (mult:XF (match_dup 2) (match_dup 3)))\n-   (set (match_dup 5) (unspec:XF [(match_dup 4)] UNSPEC_FRNDINT))\n-   (set (match_dup 6) (minus:XF (match_dup 4) (match_dup 5)))\n-   (set (match_dup 7) (unspec:XF [(match_dup 6)] UNSPEC_F2XM1))\n-   (set (match_dup 9) (plus:XF (match_dup 7) (match_dup 8)))\n-   (parallel [(set (match_dup 10)\n-\t\t   (unspec:XF [(match_dup 9) (match_dup 5)]\n-\t\t\t      UNSPEC_FSCALE_FRACT))\n-\t      (set (match_dup 11)\n-\t\t   (unspec:XF [(match_dup 9) (match_dup 5)]\n-\t\t\t      UNSPEC_FSCALE_EXP))])\n-   (set (match_operand:DF 0 \"register_operand\" \"\")\n-\t(float_truncate:DF (match_dup 10)))]\n-  \"TARGET_USE_FANCY_MATH_387\n-   && (!(TARGET_SSE2 && TARGET_SSE_MATH) || TARGET_MIX_SSE_I387)\n-   && flag_unsafe_math_optimizations && !optimize_size\"\n-{\n-  rtx temp;\n-  int i;\n-\n-  for (i=2; i<12; i++)\n-    operands[i] = gen_reg_rtx (XFmode);\n-  temp = standard_80387_constant_rtx (5); /* fldl2e */\n-  emit_move_insn (operands[3], temp);\n-  emit_move_insn (operands[8], CONST1_RTX (XFmode));  /* fld1 */\n-})\n-\n-(define_expand \"expxf2\"\n+(define_expand \"expNcorexf3\"\n   [(set (match_dup 3) (mult:XF (match_operand:XF 1 \"register_operand\" \"\")\n-\t\t\t       (match_dup 2)))\n+\t\t\t       (match_operand:XF 2 \"register_operand\" \"\")))\n    (set (match_dup 4) (unspec:XF [(match_dup 3)] UNSPEC_FRNDINT))\n    (set (match_dup 5) (minus:XF (match_dup 3) (match_dup 4)))\n    (set (match_dup 6) (unspec:XF [(match_dup 5)] UNSPEC_F2XM1))\n@@ -16493,248 +16371,102 @@\n   \"TARGET_USE_FANCY_MATH_387\n    && flag_unsafe_math_optimizations && !optimize_size\"\n {\n-  rtx temp;\n   int i;\n \n-  for (i=2; i<10; i++)\n+  for (i = 3; i < 10; i++)\n     operands[i] = gen_reg_rtx (XFmode);\n-  temp = standard_80387_constant_rtx (5); /* fldl2e */\n-  emit_move_insn (operands[2], temp);\n+\n   emit_move_insn (operands[7], CONST1_RTX (XFmode));  /* fld1 */\n })\n \n-(define_expand \"exp10sf2\"\n-  [(set (match_dup 2)\n-\t(float_extend:XF (match_operand:SF 1 \"register_operand\" \"\")))\n-   (set (match_dup 4) (mult:XF (match_dup 2) (match_dup 3)))\n-   (set (match_dup 5) (unspec:XF [(match_dup 4)] UNSPEC_FRNDINT))\n-   (set (match_dup 6) (minus:XF (match_dup 4) (match_dup 5)))\n-   (set (match_dup 7) (unspec:XF [(match_dup 6)] UNSPEC_F2XM1))\n-   (set (match_dup 9) (plus:XF (match_dup 7) (match_dup 8)))\n-   (parallel [(set (match_dup 10)\n-\t\t   (unspec:XF [(match_dup 9) (match_dup 5)]\n-\t\t\t      UNSPEC_FSCALE_FRACT))\n-\t      (set (match_dup 11)\n-\t\t   (unspec:XF [(match_dup 9) (match_dup 5)]\n-\t\t\t      UNSPEC_FSCALE_EXP))])\n-   (set (match_operand:SF 0 \"register_operand\" \"\")\n-\t(float_truncate:SF (match_dup 10)))]\n+(define_expand \"expxf2\"\n+  [(use (match_operand:XF 0 \"register_operand\" \"\"))\n+   (use (match_operand:XF 1 \"register_operand\" \"\"))]\n   \"TARGET_USE_FANCY_MATH_387\n-   && (!TARGET_SSE_MATH || TARGET_MIX_SSE_I387)\n    && flag_unsafe_math_optimizations && !optimize_size\"\n {\n-  rtx temp;\n-  int i;\n+  operands[2] = gen_reg_rtx (XFmode);\n+  emit_move_insn (operands[2], standard_80387_constant_rtx (5)); /* fldl2e */\n \n-  for (i=2; i<12; i++)\n-    operands[i] = gen_reg_rtx (XFmode);\n-  temp = standard_80387_constant_rtx (6); /* fldl2t */\n-  emit_move_insn (operands[3], temp);\n-  emit_move_insn (operands[8], CONST1_RTX (XFmode));  /* fld1 */\n+  emit_insn (gen_expNcorexf3 (operands[0], operands[1], operands[2]));\n+  DONE;\n })\n \n-(define_expand \"exp10df2\"\n-  [(set (match_dup 2)\n-\t(float_extend:XF (match_operand:DF 1 \"register_operand\" \"\")))\n-   (set (match_dup 4) (mult:XF (match_dup 2) (match_dup 3)))\n-   (set (match_dup 5) (unspec:XF [(match_dup 4)] UNSPEC_FRNDINT))\n-   (set (match_dup 6) (minus:XF (match_dup 4) (match_dup 5)))\n-   (set (match_dup 7) (unspec:XF [(match_dup 6)] UNSPEC_F2XM1))\n-   (set (match_dup 9) (plus:XF (match_dup 7) (match_dup 8)))\n-   (parallel [(set (match_dup 10)\n-\t\t   (unspec:XF [(match_dup 9) (match_dup 5)]\n-\t\t\t      UNSPEC_FSCALE_FRACT))\n-\t      (set (match_dup 11)\n-\t\t   (unspec:XF [(match_dup 9) (match_dup 5)]\n-\t\t\t      UNSPEC_FSCALE_EXP))])\n-   (set (match_operand:DF 0 \"register_operand\" \"\")\n-\t(float_truncate:DF (match_dup 10)))]\n-  \"TARGET_USE_FANCY_MATH_387\n-   && (!(TARGET_SSE2 && TARGET_SSE_MATH) || TARGET_MIX_SSE_I387)\n+(define_expand \"exp<mode>2\"\n+  [(use (match_operand:X87MODEF12 0 \"register_operand\" \"\"))\n+   (use (match_operand:X87MODEF12 1 \"general_operand\" \"\"))]\n+ \"TARGET_USE_FANCY_MATH_387\n+   && (!(SSE_FLOAT_MODE_P (<MODE>mode) && TARGET_SSE_MATH)\n+       || TARGET_MIX_SSE_I387)\n    && flag_unsafe_math_optimizations && !optimize_size\"\n {\n-  rtx temp;\n-  int i;\n+  rtx op0 = gen_reg_rtx (XFmode);\n+  rtx op1 = gen_reg_rtx (XFmode);\n \n-  for (i=2; i<12; i++)\n-    operands[i] = gen_reg_rtx (XFmode);\n-  temp = standard_80387_constant_rtx (6); /* fldl2t */\n-  emit_move_insn (operands[3], temp);\n-  emit_move_insn (operands[8], CONST1_RTX (XFmode));  /* fld1 */\n+  emit_insn (gen_extend<mode>xf2 (op1, operands[1]));\n+  emit_insn (gen_expxf2 (op0, op1));\n+  emit_insn (gen_truncxf<mode>2_i387_noop (operands[0], op0));\n+  DONE;\n })\n \n (define_expand \"exp10xf2\"\n-  [(set (match_dup 3) (mult:XF (match_operand:XF 1 \"register_operand\" \"\")\n-\t\t\t       (match_dup 2)))\n-   (set (match_dup 4) (unspec:XF [(match_dup 3)] UNSPEC_FRNDINT))\n-   (set (match_dup 5) (minus:XF (match_dup 3) (match_dup 4)))\n-   (set (match_dup 6) (unspec:XF [(match_dup 5)] UNSPEC_F2XM1))\n-   (set (match_dup 8) (plus:XF (match_dup 6) (match_dup 7)))\n-   (parallel [(set (match_operand:XF 0 \"register_operand\" \"\")\n-\t\t   (unspec:XF [(match_dup 8) (match_dup 4)]\n-\t\t\t      UNSPEC_FSCALE_FRACT))\n-\t      (set (match_dup 9)\n-\t\t   (unspec:XF [(match_dup 8) (match_dup 4)]\n-\t\t\t      UNSPEC_FSCALE_EXP))])]\n-  \"TARGET_USE_FANCY_MATH_387\n-   && flag_unsafe_math_optimizations && !optimize_size\"\n-{\n-  rtx temp;\n-  int i;\n-\n-  for (i=2; i<10; i++)\n-    operands[i] = gen_reg_rtx (XFmode);\n-  temp = standard_80387_constant_rtx (6); /* fldl2t */\n-  emit_move_insn (operands[2], temp);\n-  emit_move_insn (operands[7], CONST1_RTX (XFmode));  /* fld1 */\n-})\n-\n-(define_expand \"exp2sf2\"\n-  [(set (match_dup 2)\n-\t(float_extend:XF (match_operand:SF 1 \"register_operand\" \"\")))\n-   (set (match_dup 3) (unspec:XF [(match_dup 2)] UNSPEC_FRNDINT))\n-   (set (match_dup 4) (minus:XF (match_dup 2) (match_dup 3)))\n-   (set (match_dup 5) (unspec:XF [(match_dup 4)] UNSPEC_F2XM1))\n-   (set (match_dup 7) (plus:XF (match_dup 5) (match_dup 6)))\n-   (parallel [(set (match_dup 8)\n-\t\t   (unspec:XF [(match_dup 7) (match_dup 3)]\n-\t\t\t      UNSPEC_FSCALE_FRACT))\n-\t      (set (match_dup 9)\n-\t\t   (unspec:XF [(match_dup 7) (match_dup 3)]\n-\t\t\t      UNSPEC_FSCALE_EXP))])\n-   (set (match_operand:SF 0 \"register_operand\" \"\")\n-\t(float_truncate:SF (match_dup 8)))]\n+  [(use (match_operand:XF 0 \"register_operand\" \"\"))\n+   (use (match_operand:XF 1 \"register_operand\" \"\"))]\n   \"TARGET_USE_FANCY_MATH_387\n-   && (!TARGET_SSE_MATH || TARGET_MIX_SSE_I387)\n    && flag_unsafe_math_optimizations && !optimize_size\"\n {\n-  int i;\n+  operands[2] = gen_reg_rtx (XFmode);\n+  emit_move_insn (operands[2], standard_80387_constant_rtx (6)); /* fldl2t */\n \n-  for (i=2; i<10; i++)\n-    operands[i] = gen_reg_rtx (XFmode);\n-  emit_move_insn (operands[6], CONST1_RTX (XFmode));  /* fld1 */\n+  emit_insn (gen_expNcorexf3 (operands[0], operands[1], operands[2]));\n+  DONE;\n })\n \n-(define_expand \"exp2df2\"\n-  [(set (match_dup 2)\n-\t(float_extend:XF (match_operand:DF 1 \"register_operand\" \"\")))\n-   (set (match_dup 3) (unspec:XF [(match_dup 2)] UNSPEC_FRNDINT))\n-   (set (match_dup 4) (minus:XF (match_dup 2) (match_dup 3)))\n-   (set (match_dup 5) (unspec:XF [(match_dup 4)] UNSPEC_F2XM1))\n-   (set (match_dup 7) (plus:XF (match_dup 5) (match_dup 6)))\n-   (parallel [(set (match_dup 8)\n-\t\t   (unspec:XF [(match_dup 7) (match_dup 3)]\n-\t\t\t      UNSPEC_FSCALE_FRACT))\n-\t      (set (match_dup 9)\n-\t\t   (unspec:XF [(match_dup 7) (match_dup 3)]\n-\t\t\t      UNSPEC_FSCALE_EXP))])\n-   (set (match_operand:DF 0 \"register_operand\" \"\")\n-\t(float_truncate:DF (match_dup 8)))]\n-  \"TARGET_USE_FANCY_MATH_387\n-   && (!(TARGET_SSE2 && TARGET_SSE_MATH) || TARGET_MIX_SSE_I387)\n+(define_expand \"exp10<mode>2\"\n+  [(use (match_operand:X87MODEF12 0 \"register_operand\" \"\"))\n+   (use (match_operand:X87MODEF12 1 \"general_operand\" \"\"))]\n+ \"TARGET_USE_FANCY_MATH_387\n+   && (!(SSE_FLOAT_MODE_P (<MODE>mode) && TARGET_SSE_MATH)\n+       || TARGET_MIX_SSE_I387)\n    && flag_unsafe_math_optimizations && !optimize_size\"\n {\n-  int i;\n+  rtx op0 = gen_reg_rtx (XFmode);\n+  rtx op1 = gen_reg_rtx (XFmode);\n \n-  for (i=2; i<10; i++)\n-    operands[i] = gen_reg_rtx (XFmode);\n-  emit_move_insn (operands[6], CONST1_RTX (XFmode));  /* fld1 */\n+  emit_insn (gen_extend<mode>xf2 (op1, operands[1]));\n+  emit_insn (gen_exp10xf2 (op0, op1));\n+  emit_insn (gen_truncxf<mode>2_i387_noop (operands[0], op0));\n+  DONE;\n })\n \n (define_expand \"exp2xf2\"\n-  [(set (match_dup 2) (match_operand:XF 1 \"register_operand\" \"\"))\n-   (set (match_dup 3) (unspec:XF [(match_dup 2)] UNSPEC_FRNDINT))\n-   (set (match_dup 4) (minus:XF (match_dup 2) (match_dup 3)))\n-   (set (match_dup 5) (unspec:XF [(match_dup 4)] UNSPEC_F2XM1))\n-   (set (match_dup 7) (plus:XF (match_dup 5) (match_dup 6)))\n-   (parallel [(set (match_operand:XF 0 \"register_operand\" \"\")\n-\t\t   (unspec:XF [(match_dup 7) (match_dup 3)]\n-\t\t\t      UNSPEC_FSCALE_FRACT))\n-\t      (set (match_dup 8)\n-\t\t   (unspec:XF [(match_dup 7) (match_dup 3)]\n-\t\t\t      UNSPEC_FSCALE_EXP))])]\n-  \"TARGET_USE_FANCY_MATH_387\n-   && flag_unsafe_math_optimizations && !optimize_size\"\n-{\n-  int i;\n-\n-  for (i=2; i<9; i++)\n-    operands[i] = gen_reg_rtx (XFmode);\n-  emit_move_insn (operands[6], CONST1_RTX (XFmode));  /* fld1 */\n-})\n-\n-(define_expand \"expm1df2\"\n-  [(set (match_dup 2)\n-\t(float_extend:XF (match_operand:DF 1 \"register_operand\" \"\")))\n-   (set (match_dup 4) (mult:XF (match_dup 2) (match_dup 3)))\n-   (set (match_dup 5) (unspec:XF [(match_dup 4)] UNSPEC_FRNDINT))\n-   (set (match_dup 6) (minus:XF (match_dup 4) (match_dup 5)))\n-   (set (match_dup 7) (unspec:XF [(match_dup 6)] UNSPEC_F2XM1))\n-   (parallel [(set (match_dup 8)\n-\t\t   (unspec:XF [(match_dup 7) (match_dup 5)]\n-\t\t\t      UNSPEC_FSCALE_FRACT))\n-\t\t   (set (match_dup 9)\n-\t\t   (unspec:XF [(match_dup 7) (match_dup 5)]\n-\t\t\t      UNSPEC_FSCALE_EXP))])\n-   (parallel [(set (match_dup 11)\n-\t\t   (unspec:XF [(match_dup 10) (match_dup 9)]\n-\t\t\t      UNSPEC_FSCALE_FRACT))\n-\t      (set (match_dup 12)\n-\t\t   (unspec:XF [(match_dup 10) (match_dup 9)]\n-\t\t\t      UNSPEC_FSCALE_EXP))])\n-   (set (match_dup 13) (minus:XF (match_dup 11) (match_dup 10)))\n-   (set (match_dup 14) (plus:XF (match_dup 13) (match_dup 8)))\n-   (set (match_operand:DF 0 \"register_operand\" \"\")\n-\t(float_truncate:DF (match_dup 14)))]\n+  [(use (match_operand:XF 0 \"register_operand\" \"\"))\n+   (use (match_operand:XF 1 \"register_operand\" \"\"))]\n   \"TARGET_USE_FANCY_MATH_387\n-   && (!(TARGET_SSE2 && TARGET_SSE_MATH) || TARGET_MIX_SSE_I387)\n    && flag_unsafe_math_optimizations && !optimize_size\"\n {\n-  rtx temp;\n-  int i;\n+  operands[2] = gen_reg_rtx (XFmode);\n+  emit_move_insn (operands[2], CONST1_RTX (XFmode));  /* fld1 */\n \n-  for (i=2; i<15; i++)\n-    operands[i] = gen_reg_rtx (XFmode);\n-  temp = standard_80387_constant_rtx (5); /* fldl2e */\n-  emit_move_insn (operands[3], temp);\n-  emit_move_insn (operands[10], CONST1_RTX (XFmode));  /* fld1 */\n+  emit_insn (gen_expNcorexf3 (operands[0], operands[1], operands[2]));\n+  DONE;\n })\n \n-(define_expand \"expm1sf2\"\n-  [(set (match_dup 2)\n-\t(float_extend:XF (match_operand:SF 1 \"register_operand\" \"\")))\n-   (set (match_dup 4) (mult:XF (match_dup 2) (match_dup 3)))\n-   (set (match_dup 5) (unspec:XF [(match_dup 4)] UNSPEC_FRNDINT))\n-   (set (match_dup 6) (minus:XF (match_dup 4) (match_dup 5)))\n-   (set (match_dup 7) (unspec:XF [(match_dup 6)] UNSPEC_F2XM1))\n-   (parallel [(set (match_dup 8)\n-\t\t   (unspec:XF [(match_dup 7) (match_dup 5)]\n-\t\t\t      UNSPEC_FSCALE_FRACT))\n-\t\t   (set (match_dup 9)\n-\t\t   (unspec:XF [(match_dup 7) (match_dup 5)]\n-\t\t\t      UNSPEC_FSCALE_EXP))])\n-   (parallel [(set (match_dup 11)\n-\t\t   (unspec:XF [(match_dup 10) (match_dup 9)]\n-\t\t\t      UNSPEC_FSCALE_FRACT))\n-\t      (set (match_dup 12)\n-\t\t   (unspec:XF [(match_dup 10) (match_dup 9)]\n-\t\t\t      UNSPEC_FSCALE_EXP))])\n-   (set (match_dup 13) (minus:XF (match_dup 11) (match_dup 10)))\n-   (set (match_dup 14) (plus:XF (match_dup 13) (match_dup 8)))\n-   (set (match_operand:SF 0 \"register_operand\" \"\")\n-\t(float_truncate:SF (match_dup 14)))]\n-  \"TARGET_USE_FANCY_MATH_387\n-   && (!TARGET_SSE_MATH || TARGET_MIX_SSE_I387)\n+(define_expand \"exp2<mode>2\"\n+  [(use (match_operand:X87MODEF12 0 \"register_operand\" \"\"))\n+   (use (match_operand:X87MODEF12 1 \"general_operand\" \"\"))]\n+ \"TARGET_USE_FANCY_MATH_387\n+   && (!(SSE_FLOAT_MODE_P (<MODE>mode) && TARGET_SSE_MATH)\n+       || TARGET_MIX_SSE_I387)\n    && flag_unsafe_math_optimizations && !optimize_size\"\n {\n-  rtx temp;\n-  int i;\n+  rtx op0 = gen_reg_rtx (XFmode);\n+  rtx op1 = gen_reg_rtx (XFmode);\n \n-  for (i=2; i<15; i++)\n-    operands[i] = gen_reg_rtx (XFmode);\n-  temp = standard_80387_constant_rtx (5); /* fldl2e */\n-  emit_move_insn (operands[3], temp);\n-  emit_move_insn (operands[10], CONST1_RTX (XFmode));  /* fld1 */\n+  emit_insn (gen_extend<mode>xf2 (op1, operands[1]));\n+  emit_insn (gen_exp2xf2 (op0, op1));\n+  emit_insn (gen_truncxf<mode>2_i387_noop (operands[0], op0));\n+  DONE;\n })\n \n (define_expand \"expm1xf2\"\n@@ -16761,60 +16493,30 @@\n   \"TARGET_USE_FANCY_MATH_387\n    && flag_unsafe_math_optimizations && !optimize_size\"\n {\n-  rtx temp;\n   int i;\n \n-  for (i=2; i<13; i++)\n+  for (i = 2; i < 13; i++)\n     operands[i] = gen_reg_rtx (XFmode);\n-  temp = standard_80387_constant_rtx (5); /* fldl2e */\n-  emit_move_insn (operands[2], temp);\n+ \n+  emit_move_insn (operands[2], standard_80387_constant_rtx (5)); /* fldl2e */\n   emit_move_insn (operands[9], CONST1_RTX (XFmode));  /* fld1 */\n })\n \n-(define_expand \"ldexpdf3\"\n-  [(set (match_dup 3)\n-\t(float_extend:XF (match_operand:DF 1 \"register_operand\" \"\")))\n-   (set (match_dup 4)\n-\t(float:XF (match_operand:SI 2 \"register_operand\" \"\")))\n-   (parallel [(set (match_dup 5)\n-\t\t   (unspec:XF [(match_dup 3) (match_dup 4)]\n-\t\t\t      UNSPEC_FSCALE_FRACT))\n-\t      (set (match_dup 6)\n-\t\t   (unspec:XF [(match_dup 3) (match_dup 4)]\n-\t\t\t      UNSPEC_FSCALE_EXP))])\n-   (set (match_operand:DF 0 \"register_operand\" \"\")\n-\t(float_truncate:DF (match_dup 5)))]\n-  \"TARGET_USE_FANCY_MATH_387\n-   && (!(TARGET_SSE2 && TARGET_SSE_MATH) || TARGET_MIX_SSE_I387)\n-   && flag_unsafe_math_optimizations && !optimize_size\"\n-{\n-  int i;\n-\n-  for (i=3; i<7; i++)\n-    operands[i] = gen_reg_rtx (XFmode);\n-})\n-\n-(define_expand \"ldexpsf3\"\n-  [(set (match_dup 3)\n-\t(float_extend:XF (match_operand:SF 1 \"register_operand\" \"\")))\n-   (set (match_dup 4)\n-\t(float:XF (match_operand:SI 2 \"register_operand\" \"\")))\n-   (parallel [(set (match_dup 5)\n-\t\t   (unspec:XF [(match_dup 3) (match_dup 4)]\n-\t\t\t      UNSPEC_FSCALE_FRACT))\n-\t      (set (match_dup 6)\n-\t\t   (unspec:XF [(match_dup 3) (match_dup 4)]\n-\t\t\t      UNSPEC_FSCALE_EXP))])\n-   (set (match_operand:SF 0 \"register_operand\" \"\")\n-\t(float_truncate:SF (match_dup 5)))]\n-  \"TARGET_USE_FANCY_MATH_387\n-   && (!TARGET_SSE_MATH || TARGET_MIX_SSE_I387)\n+(define_expand \"expm1<mode>2\"\n+  [(use (match_operand:X87MODEF12 0 \"register_operand\" \"\"))\n+   (use (match_operand:X87MODEF12 1 \"general_operand\" \"\"))]\n+ \"TARGET_USE_FANCY_MATH_387\n+   && (!(SSE_FLOAT_MODE_P (<MODE>mode) && TARGET_SSE_MATH)\n+       || TARGET_MIX_SSE_I387)\n    && flag_unsafe_math_optimizations && !optimize_size\"\n {\n-  int i;\n+  rtx op0 = gen_reg_rtx (XFmode);\n+  rtx op1 = gen_reg_rtx (XFmode);\n \n-  for (i=3; i<7; i++)\n-    operands[i] = gen_reg_rtx (XFmode);\n+  emit_insn (gen_extend<mode>xf2 (op1, operands[1]));\n+  emit_insn (gen_expm1xf2 (op0, op1));\n+  emit_insn (gen_truncxf<mode>2_i387_noop (operands[0], op0));\n+  DONE;\n })\n \n (define_expand \"ldexpxf3\"\n@@ -16830,10 +16532,26 @@\n   \"TARGET_USE_FANCY_MATH_387\n    && flag_unsafe_math_optimizations && !optimize_size\"\n {\n-  int i;\n+  operands[3] = gen_reg_rtx (XFmode);\n+  operands[4] = gen_reg_rtx (XFmode);\n+})\n \n-  for (i=3; i<5; i++)\n-    operands[i] = gen_reg_rtx (XFmode);\n+(define_expand \"ldexp<mode>3\"\n+  [(use (match_operand:X87MODEF12 0 \"register_operand\" \"\"))\n+   (use (match_operand:X87MODEF12 1 \"general_operand\" \"\"))\n+   (use (match_operand:SI 2 \"register_operand\" \"\"))]\n+ \"TARGET_USE_FANCY_MATH_387\n+   && (!(SSE_FLOAT_MODE_P (<MODE>mode) && TARGET_SSE_MATH)\n+       || TARGET_MIX_SSE_I387)\n+   && flag_unsafe_math_optimizations && !optimize_size\"\n+{\n+  rtx op0 = gen_reg_rtx (XFmode);\n+  rtx op1 = gen_reg_rtx (XFmode);\n+\n+  emit_insn (gen_extend<mode>xf2 (op1, operands[1]));\n+  emit_insn (gen_ldexpxf3 (op0, op1, operands[2]));\n+  emit_insn (gen_truncxf<mode>2_i387_noop (operands[0], op0));\n+  DONE;\n })\n \f\n "}]}