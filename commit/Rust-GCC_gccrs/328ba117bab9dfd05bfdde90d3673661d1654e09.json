{"sha": "328ba117bab9dfd05bfdde90d3673661d1654e09", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzI4YmExMTdiYWI5ZGZkMDViZmRkZTkwZDM2NzM2NjFkMTY1NGUwOQ==", "commit": {"author": {"name": "Bin Cheng", "email": "bin.cheng@arm.com", "date": "2016-10-13T10:58:26Z"}, "committer": {"name": "Bin Cheng", "email": "amker@gcc.gnu.org", "date": "2016-10-13T10:58:26Z"}, "message": "tree-vect-loop.c (vect_analyze_loop_2): Check and skip loop if it has no enough iterations for LOOP_VINFO_PEELING_FOR_GAPS.\n\n\t* tree-vect-loop.c (vect_analyze_loop_2): Check and skip loop if it\n\thas no enough iterations for LOOP_VINFO_PEELING_FOR_GAPS.\n\n\tgcc/testsuite\n\t* gcc.dg/vect/vect-98.c: Refine test case.\n\t* gcc.dg/vect/vect-strided-a-u8-i8-gap2.c: Increase niters.\n\t* gcc.dg/vect/vect-strided-u8-i8-gap2.c: Ditto.\n\t* gcc.dg/vect/vect-strided-u8-i8-gap4.c: Ditto.\n\nFrom-SVN: r241097", "tree": {"sha": "51ac8be786c9c0e5cfd50b5aa0cd1b0d601f2548", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/51ac8be786c9c0e5cfd50b5aa0cd1b0d601f2548"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/328ba117bab9dfd05bfdde90d3673661d1654e09", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/328ba117bab9dfd05bfdde90d3673661d1654e09", "html_url": "https://github.com/Rust-GCC/gccrs/commit/328ba117bab9dfd05bfdde90d3673661d1654e09", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/328ba117bab9dfd05bfdde90d3673661d1654e09/comments", "author": null, "committer": null, "parents": [{"sha": "37cf9f4f1c3251d594468e52e41e18433130aba7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37cf9f4f1c3251d594468e52e41e18433130aba7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/37cf9f4f1c3251d594468e52e41e18433130aba7"}], "stats": {"total": 47, "additions": 40, "deletions": 7}, "files": [{"sha": "33159c1138f1813b280e56b9163d572419c4bf1e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/328ba117bab9dfd05bfdde90d3673661d1654e09/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/328ba117bab9dfd05bfdde90d3673661d1654e09/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=328ba117bab9dfd05bfdde90d3673661d1654e09", "patch": "@@ -1,3 +1,8 @@\n+2016-10-13  Bin Cheng  <bin.cheng@arm.com>\n+\n+\t* tree-vect-loop.c (vect_analyze_loop_2): Check and skip loop if it\n+\thas no enough iterations for LOOP_VINFO_PEELING_FOR_GAPS.\n+\n 2016-10-13  Bin Cheng  <bin.cheng@arm.com>\n \n \t* tree-vect-loop.c (vectorizable_live_operation): Support handling"}, {"sha": "25fd0428575a43af321cfbe300201a9fad8aaa60", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/328ba117bab9dfd05bfdde90d3673661d1654e09/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/328ba117bab9dfd05bfdde90d3673661d1654e09/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=328ba117bab9dfd05bfdde90d3673661d1654e09", "patch": "@@ -1,3 +1,10 @@\n+2016-10-13  Bin Cheng  <bin.cheng@arm.com>\n+\n+\t* gcc.dg/vect/vect-98.c: Refine test case.\n+\t* gcc.dg/vect/vect-strided-a-u8-i8-gap2.c: Increase niters.\n+\t* gcc.dg/vect/vect-strided-u8-i8-gap2.c: Ditto.\n+\t* gcc.dg/vect/vect-strided-u8-i8-gap4.c: Ditto.\n+\n 2016-10-13  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c/77946"}, {"sha": "2055cce70b20b96dd69d06775e3d6deb9f27e3b2", "filename": "gcc/testsuite/gcc.dg/vect/vect-98.c", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/328ba117bab9dfd05bfdde90d3673661d1654e09/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-98.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/328ba117bab9dfd05bfdde90d3673661d1654e09/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-98.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-98.c?ref=328ba117bab9dfd05bfdde90d3673661d1654e09", "patch": "@@ -3,6 +3,7 @@\n #include <stdarg.h>\n #include \"tree-vect.h\"\n \n+#define M 8\n #define N 4\n #define DOT4( a, b )  ( a[0]*b[0] + a[1]*b[1] + a[2]*b[2] + a[3]*b[3] )\n \n@@ -11,15 +12,15 @@ int main1 (int ia[][N])\n {\n   int i, j;\n   int ib[N] = {0,3,6,9};\n-  int ic[N][N];\n+  int ic[M][M];\n \n-  for (i = 0; i < N; i++)\n+  for (i = 0; i < M; i++)\n     {\n \tic[0][i] = DOT4 (ia[i], ib);\n     }\n \n   /* check results: */  \n-  for (i = 0; i < N; i++)\n+  for (i = 0; i < M; i++)\n     {\n        if (ic[0][i] != DOT4 (ia[i], ib))\n            abort();\n@@ -30,7 +31,8 @@ int main1 (int ia[][N])\n \n int main (void)\n { \n-  int ia[N][N] = {{1,2,3,4},{2,3,5,7},{2,4,6,8},{22,43,55,77}};\n+  int ia[M][N] = {{1,2,3,4},{2,3,5,7},{2,4,6,8},{22,43,55,77},\n+\t\t  {13,17,19,23},{29,31,37,41},{3,7,2,1},{4,9,8,3}};\n \n   check_vect ();\n "}, {"sha": "24c7cc3517a8313e570164f78e75cc89381c9c85", "filename": "gcc/testsuite/gcc.dg/vect/vect-strided-a-u8-i8-gap2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/328ba117bab9dfd05bfdde90d3673661d1654e09/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-strided-a-u8-i8-gap2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/328ba117bab9dfd05bfdde90d3673661d1654e09/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-strided-a-u8-i8-gap2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-strided-a-u8-i8-gap2.c?ref=328ba117bab9dfd05bfdde90d3673661d1654e09", "patch": "@@ -3,7 +3,7 @@\n #include <stdarg.h>\n #include \"tree-vect.h\"\n \n-#define N 16 \n+#define N 24\n \n typedef struct {\n    unsigned char a;"}, {"sha": "23cea24540db4c7edfa28fff1de8bab45ad16ce4", "filename": "gcc/testsuite/gcc.dg/vect/vect-strided-u8-i8-gap2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/328ba117bab9dfd05bfdde90d3673661d1654e09/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-strided-u8-i8-gap2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/328ba117bab9dfd05bfdde90d3673661d1654e09/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-strided-u8-i8-gap2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-strided-u8-i8-gap2.c?ref=328ba117bab9dfd05bfdde90d3673661d1654e09", "patch": "@@ -3,7 +3,7 @@\n #include <stdarg.h>\n #include \"tree-vect.h\"\n \n-#define N 16 \n+#define N 24\n \n typedef struct {\n    unsigned char a;"}, {"sha": "1b36df53d73a0b93d369c0e22891f8b9adf431a1", "filename": "gcc/testsuite/gcc.dg/vect/vect-strided-u8-i8-gap4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/328ba117bab9dfd05bfdde90d3673661d1654e09/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-strided-u8-i8-gap4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/328ba117bab9dfd05bfdde90d3673661d1654e09/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-strided-u8-i8-gap4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-strided-u8-i8-gap4.c?ref=328ba117bab9dfd05bfdde90d3673661d1654e09", "patch": "@@ -3,7 +3,7 @@\n #include <stdarg.h>\n #include \"tree-vect.h\"\n \n-#define N 16 \n+#define N 24\n \n typedef struct {\n    unsigned char a;"}, {"sha": "be6f3fb6c65ae5da484cd55cd7fe69327f0d2d37", "filename": "gcc/tree-vect-loop.c", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/328ba117bab9dfd05bfdde90d3673661d1654e09/gcc%2Ftree-vect-loop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/328ba117bab9dfd05bfdde90d3673661d1654e09/gcc%2Ftree-vect-loop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-loop.c?ref=328ba117bab9dfd05bfdde90d3673661d1654e09", "patch": "@@ -2059,6 +2059,25 @@ vect_analyze_loop_2 (loop_vec_info loop_vinfo, bool &fatal)\n       return false;\n     }\n \n+  /* If epilog loop is required because of data accesses with gaps,\n+     one additional iteration needs to be peeled.  Check if there is\n+     enough iterations for vectorization.  */\n+  if (LOOP_VINFO_PEELING_FOR_GAPS (loop_vinfo)\n+      && LOOP_VINFO_NITERS_KNOWN_P (loop_vinfo))\n+    {\n+      int vf = LOOP_VINFO_VECT_FACTOR (loop_vinfo);\n+      tree scalar_niters = LOOP_VINFO_NITERSM1 (loop_vinfo);\n+\n+      if (wi::to_widest (scalar_niters) < vf)\n+\t{\n+\t  if (dump_enabled_p ())\n+\t    dump_printf_loc (MSG_NOTE, vect_location,\n+\t\t\t     \"loop has no enough iterations to support\"\n+\t\t\t     \" peeling for gaps.\\n\");\n+\t  return false;\n+\t}\n+    }\n+\n   /* Analyze cost.  Decide if worth while to vectorize.  */\n   int min_profitable_estimate, min_profitable_iters;\n   vect_estimate_min_profitable_iters (loop_vinfo, &min_profitable_iters,"}]}