{"sha": "02a728277f44e65a12ff4d16304fe6b7d4f845d5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDJhNzI4Mjc3ZjQ0ZTY1YTEyZmY0ZDE2MzA0ZmU2YjdkNGY4NDVkNQ==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2011-09-20T22:34:59Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2011-09-20T22:34:59Z"}, "message": "Improve error for undefined name in imported package.\n\nAvoid emitting some followon errors.\n\nFrom-SVN: r179020", "tree": {"sha": "61f79c06833821078065e6e56f4d0bad8c64dd47", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/61f79c06833821078065e6e56f4d0bad8c64dd47"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/02a728277f44e65a12ff4d16304fe6b7d4f845d5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02a728277f44e65a12ff4d16304fe6b7d4f845d5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/02a728277f44e65a12ff4d16304fe6b7d4f845d5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02a728277f44e65a12ff4d16304fe6b7d4f845d5/comments", "author": null, "committer": null, "parents": [{"sha": "6fa297991193239a6f167b92a3c4fc3e78ff400a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6fa297991193239a6f167b92a3c4fc3e78ff400a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6fa297991193239a6f167b92a3c4fc3e78ff400a"}], "stats": {"total": 22, "additions": 17, "deletions": 5}, "files": [{"sha": "4e9d8d894bac0de95969ceee340e332f36a3fea3", "filename": "gcc/go/gofrontend/expressions.cc", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02a728277f44e65a12ff4d16304fe6b7d4f845d5/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02a728277f44e65a12ff4d16304fe6b7d4f845d5/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc?ref=02a728277f44e65a12ff4d16304fe6b7d4f845d5", "patch": "@@ -9730,7 +9730,10 @@ Call_result_expression::do_type()\n   if (fntype == NULL)\n     {\n       if (ce->issue_error())\n-\tthis->report_error(_(\"expected function\"));    \n+\t{\n+\t  if (!ce->fn()->type()->is_error())\n+\t    this->report_error(_(\"expected function\"));\n+\t}\n       this->set_is_error();\n       return Type::make_error_type();\n     }\n@@ -10043,7 +10046,9 @@ Array_index_expression::do_check_types(Gogo*)\n     this->report_error(_(\"index must be integer\"));\n   if (this->end_ != NULL\n       && this->end_->type()->integer_type() == NULL\n-      && !this->end_->is_nil_expression())\n+      && !this->end_->type()->is_error()\n+      && !this->end_->is_nil_expression()\n+      && !this->end_->is_error_expression())\n     this->report_error(_(\"slice end must be integer\"));\n \n   Array_type* array_type = this->array_->type()->array_type();"}, {"sha": "bf084e046981a827154e99a15957f5c835acfc7f", "filename": "gcc/go/gofrontend/parse.cc", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02a728277f44e65a12ff4d16304fe6b7d4f845d5/gcc%2Fgo%2Fgofrontend%2Fparse.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02a728277f44e65a12ff4d16304fe6b7d4f845d5/gcc%2Fgo%2Fgofrontend%2Fparse.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fparse.cc?ref=02a728277f44e65a12ff4d16304fe6b7d4f845d5", "patch": "@@ -335,10 +335,17 @@ Parse::type_name(bool issue_error)\n   bool ok = true;\n   if (named_object == NULL)\n     {\n-      if (package != NULL)\n-\tok = false;\n-      else\n+      if (package == NULL)\n \tnamed_object = this->gogo_->add_unknown_name(name, location);\n+      else\n+\t{\n+\t  const std::string& packname(package->package_value()->name());\n+\t  error_at(location, \"reference to undefined identifer %<%s.%s%>\",\n+\t\t   Gogo::message_name(packname).c_str(),\n+\t\t   Gogo::message_name(name).c_str());\n+\t  issue_error = false;\n+\t  ok = false;\n+\t}\n     }\n   else if (named_object->is_type())\n     {"}]}