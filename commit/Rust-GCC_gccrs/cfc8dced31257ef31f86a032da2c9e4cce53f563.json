{"sha": "cfc8dced31257ef31f86a032da2c9e4cce53f563", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2ZjOGRjZWQzMTI1N2VmMzFmODZhMDMyZGEyYzllNGNjZTUzZjU2Mw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2014-06-03T04:57:32Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2014-06-03T04:57:32Z"}, "message": "re PR c++/61134 ([C++11] bogus \"no matching function for call...\")\n\n\tPR c++/61134\n\t* pt.c (pack_deducible_p): Handle canonicalization.\n\nFrom-SVN: r211159", "tree": {"sha": "63a0e880e54aef20247bf3b1a315abc9c9e537b2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/63a0e880e54aef20247bf3b1a315abc9c9e537b2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cfc8dced31257ef31f86a032da2c9e4cce53f563", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cfc8dced31257ef31f86a032da2c9e4cce53f563", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cfc8dced31257ef31f86a032da2c9e4cce53f563", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cfc8dced31257ef31f86a032da2c9e4cce53f563/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a21e55d2bb4caac33798c71d33cca7279d4664a8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a21e55d2bb4caac33798c71d33cca7279d4664a8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a21e55d2bb4caac33798c71d33cca7279d4664a8"}], "stats": {"total": 31, "additions": 30, "deletions": 1}, "files": [{"sha": "e57edc5a14c7eb567ef754b2e477ca182dd7dbed", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfc8dced31257ef31f86a032da2c9e4cce53f563/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfc8dced31257ef31f86a032da2c9e4cce53f563/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=cfc8dced31257ef31f86a032da2c9e4cce53f563", "patch": "@@ -1,3 +1,8 @@\n+2014-06-02  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/61134\n+\t* pt.c (pack_deducible_p): Handle canonicalization.\n+\n 2014-06-02  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* pt.c (tsubst_function_type): Initialize arg_types."}, {"sha": "d267a5c1d9247014f60a46e08a4dc2ee8755d086", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfc8dced31257ef31f86a032da2c9e4cce53f563/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfc8dced31257ef31f86a032da2c9e4cce53f563/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=cfc8dced31257ef31f86a032da2c9e4cce53f563", "patch": "@@ -15765,7 +15765,7 @@ pack_deducible_p (tree parm, tree fn)\n \tcontinue;\n       for (packs = PACK_EXPANSION_PARAMETER_PACKS (type);\n \t   packs; packs = TREE_CHAIN (packs))\n-\tif (TREE_VALUE (packs) == parm)\n+\tif (template_args_equal (TREE_VALUE (packs), parm))\n \t  {\n \t    /* The template parameter pack is used in a function parameter\n \t       pack.  If this is the end of the parameter list, the"}, {"sha": "cc5c24ddc67a3f34319ee03d7007dba03082ad2d", "filename": "gcc/testsuite/g++.dg/cpp0x/variadic158.C", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfc8dced31257ef31f86a032da2c9e4cce53f563/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic158.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfc8dced31257ef31f86a032da2c9e4cce53f563/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic158.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic158.C?ref=cfc8dced31257ef31f86a032da2c9e4cce53f563", "patch": "@@ -0,0 +1,24 @@\n+// PR c++/61134\n+// { dg-do compile { target c++11 } }\n+\n+struct Base { };\n+\n+template <typename>\n+struct Fixed {\n+  typedef const char* name;\n+};\n+\n+template <typename VT, typename... Fields>\n+void New(const char* name,\n+         typename Fixed<Fields>::name... field_names);\n+\n+template <typename VT, typename... Fields>\n+void CreateMetric(const char* name,\n+                  typename Fixed<Fields>::name... field_names,\n+                  const Base&) { }\n+\n+\n+void Fn()\n+{\n+  CreateMetric<int, const char*>(\"abcd\", \"def\", Base());\n+}"}]}