{"sha": "1d2290caad0dba52b285b47057b7c0e4e8d21feb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWQyMjkwY2FhZDBkYmE1MmIyODViNDcwNTdiN2MwZTRlOGQyMWZlYg==", "commit": {"author": {"name": "Patrick Palka", "email": "ppalka@redhat.com", "date": "2020-04-29T01:45:59Z"}, "committer": {"name": "Patrick Palka", "email": "ppalka@redhat.com", "date": "2020-04-29T01:45:59Z"}, "message": "c++: Satisfaction caching of inherited ctor [PR94819]\n\nAs observed in PR94719, an inherited constructor for an instantiation of\na constructor template confusingly has as its DECL_INHERITED_CTOR the\nTEMPLATE_DECL of the constructor template rather than the particular\ninstantiation of the template.\n\nThis means two inherited constructors for two different instantiations\nof the same constructor template have the same DECL_INHERITED_CTOR.  And\nsince in satisfy_declaration_constraints our decl satisfaction cache is\nkeyed off of the result of strip_inheriting_ctors, we may end up\nconflating the satisfaction values of the two inherited constructors'\nconstraints.\n\nThis patch fixes this issue by using the original tree, not the result\nof strip_inheriting_ctors, as the key to the decl satisfaction cache.\n\ngcc/cp/ChangeLog:\n\n\tPR c++/94819\n\t* constraint.cc (satisfy_declaration_constraints): Use saved_t\n\tinstead of t as the key to decl_satisfied_cache.\n\ngcc/testsuite/ChangeLog:\n\n\tPR c++/94819\n\t* g++.dg/cpp2a/concepts-inherit-ctor10.C: New test.\n\t* g++.dg/cpp2a/concepts-inherit-ctor11.C: New test.", "tree": {"sha": "94a47e7247bd4d63ced7a4039867470b5c83b0ba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/94a47e7247bd4d63ced7a4039867470b5c83b0ba"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1d2290caad0dba52b285b47057b7c0e4e8d21feb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d2290caad0dba52b285b47057b7c0e4e8d21feb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1d2290caad0dba52b285b47057b7c0e4e8d21feb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d2290caad0dba52b285b47057b7c0e4e8d21feb/comments", "author": null, "committer": null, "parents": [{"sha": "43439d5e8424f3a746003ef8953e1cdc120fbbd7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43439d5e8424f3a746003ef8953e1cdc120fbbd7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/43439d5e8424f3a746003ef8953e1cdc120fbbd7"}], "stats": {"total": 51, "additions": 49, "deletions": 2}, "files": [{"sha": "f2bfe84b1e633578cd35af093f3149e4e1033dc1", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d2290caad0dba52b285b47057b7c0e4e8d21feb/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d2290caad0dba52b285b47057b7c0e4e8d21feb/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=1d2290caad0dba52b285b47057b7c0e4e8d21feb", "patch": "@@ -1,5 +1,9 @@\n 2020-04-29  Patrick Palka  <ppalka@redhat.com>\n \n+\tPR c++/94819\n+\t* constraint.cc (satisfy_declaration_constraints): Use saved_t\n+\tinstead of t as the key to decl_satisfied_cache.\n+\n \tPR c++/94808\n \t* error.c (print_requires_expression_info): Print the dependent\n \tform of the parameter list with its template parameter mapping,"}, {"sha": "866b0f51b0532fb2f70fea38c595d8236e6a5646", "filename": "gcc/cp/constraint.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d2290caad0dba52b285b47057b7c0e4e8d21feb/gcc%2Fcp%2Fconstraint.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d2290caad0dba52b285b47057b7c0e4e8d21feb/gcc%2Fcp%2Fconstraint.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fconstraint.cc?ref=1d2290caad0dba52b285b47057b7c0e4e8d21feb", "patch": "@@ -2752,7 +2752,7 @@ satisfy_declaration_constraints (tree t, subst_info info)\n   info.in_decl = t;\n \n   if (info.quiet ())\n-    if (tree *result = hash_map_safe_get (decl_satisfied_cache, t))\n+    if (tree *result = hash_map_safe_get (decl_satisfied_cache, saved_t))\n       return *result;\n \n   /* Get the normalized constraints.  */\n@@ -2787,7 +2787,7 @@ satisfy_declaration_constraints (tree t, subst_info info)\n     }\n \n   if (info.quiet ())\n-    hash_map_safe_put<hm_ggc> (decl_satisfied_cache, t, result);\n+    hash_map_safe_put<hm_ggc> (decl_satisfied_cache, saved_t, result);\n \n   return result;\n }"}, {"sha": "512974831c24862f82bb47fc8f0cc061f2a8be46", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d2290caad0dba52b285b47057b7c0e4e8d21feb/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d2290caad0dba52b285b47057b7c0e4e8d21feb/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1d2290caad0dba52b285b47057b7c0e4e8d21feb", "patch": "@@ -1,5 +1,9 @@\n 2020-04-29  Patrick Palka  <ppalka@redhat.com>\n \n+\tPR c++/94819\n+\t* g++.dg/cpp2a/concepts-inherit-ctor10.C: New test.\n+\t* g++.dg/cpp2a/concepts-inherit-ctor11.C: New test.\n+\n \tPR c++/94808\n \t* g++.dg/concepts/diagnostic12.C: New test.\n \t* g++.dg/concepts/diagnostic5.C: Adjust dg-message."}, {"sha": "387c07ae6b28f02a671953968d764eabf64f78b7", "filename": "gcc/testsuite/g++.dg/cpp2a/concepts-inherit-ctor10.C", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d2290caad0dba52b285b47057b7c0e4e8d21feb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-inherit-ctor10.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d2290caad0dba52b285b47057b7c0e4e8d21feb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-inherit-ctor10.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-inherit-ctor10.C?ref=1d2290caad0dba52b285b47057b7c0e4e8d21feb", "patch": "@@ -0,0 +1,18 @@\n+// PR c++/94819\n+// { dg-do compile { target concepts } }\n+\n+struct dna4 {};\n+struct rna4 {};\n+\n+struct alphabet_tuple_base {\n+    template <typename component_type>\n+        requires __is_same(component_type, rna4)\n+    alphabet_tuple_base(component_type) {}\n+};\n+\n+struct structured_rna : alphabet_tuple_base {\n+    using alphabet_tuple_base::alphabet_tuple_base;\n+};\n+\n+structured_rna t2{dna4{}}; // { dg-error \"no match\" }\n+structured_rna t3{rna4{}}; // { dg-bogus \"no match\" }"}, {"sha": "947edd84e53775455648179cf1af4f7134227cb7", "filename": "gcc/testsuite/g++.dg/cpp2a/concepts-inherit-ctor11.C", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d2290caad0dba52b285b47057b7c0e4e8d21feb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-inherit-ctor11.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d2290caad0dba52b285b47057b7c0e4e8d21feb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-inherit-ctor11.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-inherit-ctor11.C?ref=1d2290caad0dba52b285b47057b7c0e4e8d21feb", "patch": "@@ -0,0 +1,21 @@\n+// PR c++/94819\n+// { dg-do compile { target concepts } }\n+\n+struct dna4 {};\n+struct rna4 {};\n+\n+template <typename component_types>\n+struct alphabet_tuple_base {\n+    template <typename component_type>\n+        requires __is_same(component_type, component_types)\n+    alphabet_tuple_base(component_type) {}\n+};\n+\n+template <typename sequence_alphabet_t>\n+struct structured_rna : alphabet_tuple_base<sequence_alphabet_t> {\n+    using base_type = alphabet_tuple_base<sequence_alphabet_t>;\n+    using base_type::base_type;\n+};\n+\n+structured_rna<rna4> t2{dna4{}}; // { dg-error \"no match\" }\n+structured_rna<rna4> t3{rna4{}}; // { dg-bogus \"no match\" }"}]}