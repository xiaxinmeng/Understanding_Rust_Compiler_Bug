{"sha": "95df37bf8bded356f45539ecaa8bff3078d9cf86", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTVkZjM3YmY4YmRlZDM1NmY0NTUzOWVjYWE4YmZmMzA3OGQ5Y2Y4Ng==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2012-04-13T12:22:16Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2012-04-13T12:22:16Z"}, "message": "re PR tree-optimization/52969 (ICE in in get_expr_operands, at tree-ssa-operands.c:1035 with -ftree-loop-if-convert-stores)\n\n2012-04-13  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/52969\n\t* tree-if-conv.c (predicate_mem_writes): Properly gimplify\n\tthe condition for the COND_EXPR and handle predicate negation\n\tby swapping the COND_EXPR arms.\n\n\t* gcc.dg/torture/pr52969.c: New testcase.\n\nFrom-SVN: r186416", "tree": {"sha": "a1b22ec581d09f617460923d197f29eb753d4509", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a1b22ec581d09f617460923d197f29eb753d4509"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/95df37bf8bded356f45539ecaa8bff3078d9cf86", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/95df37bf8bded356f45539ecaa8bff3078d9cf86", "html_url": "https://github.com/Rust-GCC/gccrs/commit/95df37bf8bded356f45539ecaa8bff3078d9cf86", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/95df37bf8bded356f45539ecaa8bff3078d9cf86/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d0bcb5c33fec86bb2f2beac24c112f1fd0e96cda", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d0bcb5c33fec86bb2f2beac24c112f1fd0e96cda", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d0bcb5c33fec86bb2f2beac24c112f1fd0e96cda"}], "stats": {"total": 45, "additions": 45, "deletions": 0}, "files": [{"sha": "7eee86a9dccddbc33c3a00ba41a2a66d75d83929", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95df37bf8bded356f45539ecaa8bff3078d9cf86/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95df37bf8bded356f45539ecaa8bff3078d9cf86/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=95df37bf8bded356f45539ecaa8bff3078d9cf86", "patch": "@@ -1,3 +1,10 @@\n+2012-04-13  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/52969\n+\t* tree-if-conv.c (predicate_mem_writes): Properly gimplify\n+\tthe condition for the COND_EXPR and handle predicate negation\n+\tby swapping the COND_EXPR arms.\n+\n 2012-04-13  Nick Clifton  <nickc@redhat.com>\n \n \t* config/rl78/rl78.c (rl78_devirt_pass): Remove use of"}, {"sha": "f93259258af39e90a58b128bed51266d01aef2cf", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95df37bf8bded356f45539ecaa8bff3078d9cf86/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95df37bf8bded356f45539ecaa8bff3078d9cf86/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=95df37bf8bded356f45539ecaa8bff3078d9cf86", "patch": "@@ -1,3 +1,8 @@\n+2012-04-13  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/52969\n+\t* gcc.dg/torture/pr52969.c: New testcase.\n+\n 2012-04-13  Richard Guenther  <rguenther@suse.de>\n \n \tPR c/52549"}, {"sha": "05331d93f34e9cba4f23a2c494ed1396af837b28", "filename": "gcc/testsuite/gcc.dg/torture/pr52969.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95df37bf8bded356f45539ecaa8bff3078d9cf86/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr52969.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95df37bf8bded356f45539ecaa8bff3078d9cf86/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr52969.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr52969.c?ref=95df37bf8bded356f45539ecaa8bff3078d9cf86", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-ftree-loop-if-convert-stores\" } */\n+\n+int a, b;\n+float xsum[100];\n+void foo (float *cluster)\n+{\n+  int j;\n+  for (; a ; ++j) {\n+      xsum[j] = cluster[j];\n+      if (xsum[j] > 0)\n+\txsum[j] = 0;\n+  }\n+  if (xsum[0])\n+    b = 0;\n+}"}, {"sha": "c86a4aa55bb8554923b85c9137bc50ccf5c32c95", "filename": "gcc/tree-if-conv.c", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95df37bf8bded356f45539ecaa8bff3078d9cf86/gcc%2Ftree-if-conv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95df37bf8bded356f45539ecaa8bff3078d9cf86/gcc%2Ftree-if-conv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-if-conv.c?ref=95df37bf8bded356f45539ecaa8bff3078d9cf86", "patch": "@@ -1543,11 +1543,19 @@ predicate_mem_writes (loop_p loop)\n       gimple_stmt_iterator gsi;\n       basic_block bb = ifc_bbs[i];\n       tree cond = bb_predicate (bb);\n+      bool swap;\n       gimple stmt;\n \n       if (is_true_predicate (cond))\n \tcontinue;\n \n+      swap = false;\n+      if (TREE_CODE (cond) == TRUTH_NOT_EXPR)\n+\t{\n+\t  swap = true;\n+\t  cond = TREE_OPERAND (cond, 0);\n+\t}\n+\n       for (gsi = gsi_start_bb (bb); !gsi_end_p (gsi); gsi_next (&gsi))\n \tif ((stmt = gsi_stmt (gsi))\n \t    && gimple_assign_single_p (stmt)\n@@ -1559,6 +1567,15 @@ predicate_mem_writes (loop_p loop)\n \n \t    lhs = ifc_temp_var (type, unshare_expr (lhs), &gsi);\n \t    rhs = ifc_temp_var (type, unshare_expr (rhs), &gsi);\n+\t    if (swap)\n+\t      {\n+\t\ttree tem = lhs;\n+\t\tlhs = rhs;\n+\t\trhs = tem;\n+\t      }\n+\t    cond = force_gimple_operand_gsi_1 (&gsi, unshare_expr (cond),\n+\t\t\t\t\t       is_gimple_condexpr, NULL_TREE,\n+\t\t\t\t\t       true, GSI_SAME_STMT);\n \t    rhs = build3 (COND_EXPR, type, unshare_expr (cond), rhs, lhs);\n \t    gimple_assign_set_rhs1 (stmt, ifc_temp_var (type, rhs, &gsi));\n \t    update_stmt (stmt);"}]}