{"sha": "2570cc939ae64643f7be153a6fe550f6ddd14569", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjU3MGNjOTM5YWU2NDY0M2Y3YmUxNTNhNmZlNTUwZjZkZGQxNDU2OQ==", "commit": {"author": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1996-04-11T20:10:57Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1996-04-11T20:10:57Z"}, "message": "lib1funcs.asm (modnorm): New function(s).\n\n        * lib1funcs.asm (modnorm): New function(s).  Like divnorm,\n        but gets the sign bit right for modulo operations.\n        (__modhi3, modsi3): Use modnorm.\n\nFrom-SVN: r11701", "tree": {"sha": "ef5a1f1a1dbfdef2696066fc5c46b1386f4e0d32", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ef5a1f1a1dbfdef2696066fc5c46b1386f4e0d32"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2570cc939ae64643f7be153a6fe550f6ddd14569", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2570cc939ae64643f7be153a6fe550f6ddd14569", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2570cc939ae64643f7be153a6fe550f6ddd14569", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2570cc939ae64643f7be153a6fe550f6ddd14569/comments", "author": null, "committer": null, "parents": [{"sha": "cea60f06c0c2d85000369cc0a446c8dd44bbbc9d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cea60f06c0c2d85000369cc0a446c8dd44bbbc9d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cea60f06c0c2d85000369cc0a446c8dd44bbbc9d"}], "stats": {"total": 72, "additions": 70, "deletions": 2}, "files": [{"sha": "c52bcff0e70d35773d047763b442ed348874351d", "filename": "gcc/config/h8300/lib1funcs.asm", "status": "modified", "additions": 70, "deletions": 2, "changes": 72, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2570cc939ae64643f7be153a6fe550f6ddd14569/gcc%2Fconfig%2Fh8300%2Flib1funcs.asm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2570cc939ae64643f7be153a6fe550f6ddd14569/gcc%2Fconfig%2Fh8300%2Flib1funcs.asm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Flib1funcs.asm?ref=2570cc939ae64643f7be153a6fe550f6ddd14569", "patch": "@@ -190,6 +190,22 @@ _lab1:\tor\tA1H,A1H\t; look at dividend\n \tadds\t#1,A1\n \txor\t#0x1,A2L; and toggle sign of result\n _lab2:\trts\n+;; Basically the same, except that the sign of the divisor determines\n+;; the sign.\n+modnorm:\n+\tmov.b\t#0x0,A2L\n+\tor\tA0H,A0H\t\t; is divisor > 0\n+\tbge\t_lab7\t\t\t\n+\tnot\tA0H\t\t; no - then make it +ve\n+\tnot\tA0L\n+\tadds\t#1,A0\t\t\t\n+\txor\t#0x1,A2L\t; and remember that in A2L\n+_lab7:\tor\tA1H,A1H\t; look at dividend\n+\tbge\t_lab8\t\t\n+\tnot\tA1H\t\t; it is -ve, make it positive\n+\tnot\tA1L\n+\tadds\t#1,A1\n+_lab8:\trts\n \n ; A0=A0/A1 signed\n \n@@ -208,7 +224,7 @@ _lab4:\trts\n \n \t.global\t___modhi3\n ___modhi3:\n-\tbsr\tdivnorm\n+\tbsr\tmodnorm\n \tbsr\t___udivhi3\n \tmov\tA3,A0\n \tbra\tnegans\n@@ -338,6 +354,39 @@ postive:\n postive2:\n \trts\n \n+;; Basically the same, except that the sign of the divisor determines\n+;; the sign.\n+modnorm:\n+\tmov.b\t#0,S2L\t\t; keep the sign in S2\n+\tmov.b\tA0H,A0H\t\t; is the numerator -ve\n+\tbge\tmpostive\n+\n+\t; negate arg\n+\tnot\tA0H\n+\tnot\tA1H\n+\tnot\tA0L\n+\tnot\tA1L\n+\n+\tadd\t#1,A1L\n+\taddx\t#0,A1H\n+\taddx\t#0,A0H\n+\taddx\t#0,A0L\n+\n+\tmov.b\t#1,S2L\t\t; the sign will be -ve\n+mpostive:\n+\tmov.b\tA2H,A2H\t\t; is the denominator -ve\n+\tbge\tmpostive2\n+\tnot\tA2L\t\t\n+\tnot\tA2H\n+\tnot\tA3L\n+\tnot\tA3H\n+\tadd.b\t#1,A3L\t\n+\taddx\t#0,A3H\n+\taddx\t#0,A2L\n+\taddx\t#0,A2H\n+mpostive2:\n+\trts\n+\n #else /* __H8300H__ */\n \n divnorm:\n@@ -358,6 +407,25 @@ postive:\n postive2:\n \trts\n \n+;; Basically the same, except that the sign of the divisor determines\n+;; the sign.\n+modnorm:\n+\tmov.b\t#0,S2L\t\t; keep the sign in S2\n+\tmov.l\tA0P,A0P\t\t; is the numerator -ve\n+\tbge\tmpostive\n+\n+\tneg.l\tA0P\t\t; negate arg\n+\tmov.b\t#1,S2L\t\t; the sign will be -ve\n+\n+mpostive:\n+\tmov.l\tA1P,A1P\t\t; is the denominator -ve\n+\tbge\tmpostive2\n+\n+\tneg.l\tA1P\t\t; negate arg\n+\n+mpostive2:\n+\trts\n+\n #endif\n \n ; numerator in A0/A1\n@@ -368,7 +436,7 @@ ___modsi3:\n \tPUSHP\tS0P\n \tPUSHP\tS1P\n \n-\tbsr\tdivnorm\n+\tbsr\tmodnorm\n \tbsr\tdivmodsi4\n #ifdef __H8300__\n \tmov\tS0,A0"}]}