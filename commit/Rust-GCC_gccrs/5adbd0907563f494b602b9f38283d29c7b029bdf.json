{"sha": "5adbd0907563f494b602b9f38283d29c7b029bdf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWFkYmQwOTA3NTYzZjQ5NGI2MDJiOWYzODI4M2QyOWM3YjAyOWJkZg==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2020-05-14T14:13:54Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2020-05-14T14:18:04Z"}, "message": "c++: Adjust push_template_decl_real\n\nPush_template_decl_real's friend-pushing logic was confusing me.  This\nis more understandable.  Fix a latent type bug I disovered.\n\n\t* pt.c (push_template_decl_real): Adjust friend pushing logic.\n\tReinit template type.", "tree": {"sha": "305e967d0389fde7039edf620d1f55d346483e7b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/305e967d0389fde7039edf620d1f55d346483e7b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5adbd0907563f494b602b9f38283d29c7b029bdf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5adbd0907563f494b602b9f38283d29c7b029bdf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5adbd0907563f494b602b9f38283d29c7b029bdf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5adbd0907563f494b602b9f38283d29c7b029bdf/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c4bff4c230c8d3414bc77f7a58ffc5f61b6bd08c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4bff4c230c8d3414bc77f7a58ffc5f61b6bd08c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c4bff4c230c8d3414bc77f7a58ffc5f61b6bd08c"}], "stats": {"total": 39, "additions": 25, "deletions": 14}, "files": [{"sha": "9bc3e8d7c8139b7412912e53ec48761e97c754b6", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5adbd0907563f494b602b9f38283d29c7b029bdf/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5adbd0907563f494b602b9f38283d29c7b029bdf/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=5adbd0907563f494b602b9f38283d29c7b029bdf", "patch": "@@ -1,5 +1,8 @@\n 2020-05-14  Nathan Sidwell  <nathan@acm.org>\n \n+\t* pt.c (push_template_decl_real): Adjust friend pushing logic.\n+ \tReinit template type.\n+\n \t* pt.c (build_template_decl): Init DECL_TEMPLATE_RESULT &\n \tTREE_TYPE here ...\n \t(process_partial_specialization): ... not here ..."}, {"sha": "68d113bab901377b028223c190abdf632fcf6368", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 22, "deletions": 14, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5adbd0907563f494b602b9f38283d29c7b029bdf/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5adbd0907563f494b602b9f38283d29c7b029bdf/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=5adbd0907563f494b602b9f38283d29c7b029bdf", "patch": "@@ -5979,24 +5979,32 @@ push_template_decl_real (tree decl, bool is_friend)\n \n   gcc_checking_assert (DECL_TEMPLATE_RESULT (tmpl) == decl);\n \n-  /* Push template declarations for global functions and types.  Note\n-     that we do not try to push a global template friend declared in a\n-     template class; such a thing may well depend on the template\n-     parameters of the class.  */\n-  if (new_template_p && !ctx\n-      && !(is_friend && template_class_depth (current_class_type) > 0))\n-    {\n-      tmpl = pushdecl_namespace_level (tmpl, is_friend);\n-      if (tmpl == error_mark_node)\n-\treturn error_mark_node;\n \n-      /* Hide template friend classes that haven't been declared yet.  */\n-      if (is_friend && TREE_CODE (decl) == TYPE_DECL)\n+  if (new_template_p)\n+    {\n+      /* Push template declarations for global functions and types.\n+\t Note that we do not try to push a global template friend\n+\t declared in a template class; such a thing may well depend on\n+\t the template parameters of the class and we'll push it when\n+\t instantiating the befriending class.  */\n+      if (!ctx\n+\t  && !(is_friend && template_class_depth (current_class_type) > 0))\n \t{\n-\t  DECL_ANTICIPATED (tmpl) = 1;\n-\t  DECL_FRIEND_P (tmpl) = 1;\n+\t  tmpl = pushdecl_namespace_level (tmpl, is_friend);\n+\t  if (tmpl == error_mark_node)\n+\t    return error_mark_node;\n+\n+\t  /* Hide template friend classes that haven't been declared yet.  */\n+\t  if (is_friend && TREE_CODE (decl) == TYPE_DECL)\n+\t    {\n+\t      DECL_ANTICIPATED (tmpl) = 1;\n+\t      DECL_FRIEND_P (tmpl) = 1;\n+\t    }\n \t}\n     }\n+  else\n+    /* The type may have been completed, or (erroneously) changed.  */\n+    TREE_TYPE (tmpl) = TREE_TYPE (decl);\n \n   if (is_primary)\n     {"}]}