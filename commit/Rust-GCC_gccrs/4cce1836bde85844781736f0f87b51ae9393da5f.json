{"sha": "4cce1836bde85844781736f0f87b51ae9393da5f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGNjZTE4MzZiZGU4NTg0NDc4MTczNmYwZjg3YjUxYWU5MzkzZGE1Zg==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2012-01-13T23:35:44Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2012-01-13T23:35:44Z"}, "message": "libgo: Only build iopl and ioperm on 386, amd64, alpha GNU/Linux.\n\nFrom-SVN: r183171", "tree": {"sha": "b5ccbc7f256537894d81c3a45c662c27829e4866", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b5ccbc7f256537894d81c3a45c662c27829e4866"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4cce1836bde85844781736f0f87b51ae9393da5f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4cce1836bde85844781736f0f87b51ae9393da5f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4cce1836bde85844781736f0f87b51ae9393da5f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4cce1836bde85844781736f0f87b51ae9393da5f/comments", "author": null, "committer": null, "parents": [{"sha": "dd1628807a800c86b45495218cb19260bae8a846", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd1628807a800c86b45495218cb19260bae8a846", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dd1628807a800c86b45495218cb19260bae8a846"}], "stats": {"total": 53, "additions": 43, "deletions": 10}, "files": [{"sha": "3ff5d5f913f24ab47ef4a06e861255697a6b3f1c", "filename": "libgo/go/syscall/libcall_linux.go", "status": "modified", "additions": 4, "deletions": 10, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4cce1836bde85844781736f0f87b51ae9393da5f/libgo%2Fgo%2Fsyscall%2Flibcall_linux.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4cce1836bde85844781736f0f87b51ae9393da5f/libgo%2Fgo%2Fsyscall%2Flibcall_linux.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fsyscall%2Flibcall_linux.go?ref=4cce1836bde85844781736f0f87b51ae9393da5f", "patch": "@@ -207,12 +207,6 @@ func PtraceDetach(pid int) (err error) { return ptrace(PTRACE_DETACH, pid, 0, 0)\n // //sysnb\tGettid() (tid int)\n // //gettid() Pid_t\n \n-//sys\tIoperm(from int, num int, on int) (err error)\n-//ioperm(from _C_long, num _C_long, on int) int\n-\n-//sys\tIopl(level int) (err error)\n-//iopl(level int) int\n-\n // FIXME: mksysinfo linux_dirent\n //    Or just abandon this function.\n // //sys\tGetdents(fd int, buf []byte) (n int, err error)\n@@ -278,19 +272,19 @@ func Sendfile(outfd int, infd int, offset *int64, count int) (written int, err e\n func Splice(rfd int, roff *int64, wfd int, woff *int64, len int, flags int) (n int64, err error) {\n \tvar lroff _loff_t\n \tvar plroff *_loff_t\n-\tif (roff != nil) {\n+\tif roff != nil {\n \t\tplroff = &lroff\n \t}\n \tvar lwoff _loff_t\n \tvar plwoff *_loff_t\n-\tif (woff != nil) {\n+\tif woff != nil {\n \t\tplwoff = &lwoff\n \t}\n \tn, err = splice(rfd, plroff, wfd, plwoff, len, flags)\n-\tif (roff != nil) {\n+\tif roff != nil {\n \t\t*roff = int64(lroff)\n \t}\n-\tif (woff != nil) {\n+\tif woff != nil {\n \t\t*woff = int64(lwoff)\n \t}\n \treturn"}, {"sha": "ae7fcd9fbacfced596b83526368ce1a1292ab769", "filename": "libgo/go/syscall/libcall_linux_386.go", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4cce1836bde85844781736f0f87b51ae9393da5f/libgo%2Fgo%2Fsyscall%2Flibcall_linux_386.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4cce1836bde85844781736f0f87b51ae9393da5f/libgo%2Fgo%2Fsyscall%2Flibcall_linux_386.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fsyscall%2Flibcall_linux_386.go?ref=4cce1836bde85844781736f0f87b51ae9393da5f", "patch": "@@ -0,0 +1,13 @@\n+// Copyright 2012 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+// GNU/Linux library calls 386 specific.\n+\n+package syscall\n+\n+//sys\tIoperm(from int, num int, on int) (err error)\n+//ioperm(from _C_long, num _C_long, on int) int\n+\n+//sys\tIopl(level int) (err error)\n+//iopl(level int) int"}, {"sha": "85e1c594c1f10594e8843aeffaeb79d674fe05a7", "filename": "libgo/go/syscall/libcall_linux_alpha.go", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4cce1836bde85844781736f0f87b51ae9393da5f/libgo%2Fgo%2Fsyscall%2Flibcall_linux_alpha.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4cce1836bde85844781736f0f87b51ae9393da5f/libgo%2Fgo%2Fsyscall%2Flibcall_linux_alpha.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fsyscall%2Flibcall_linux_alpha.go?ref=4cce1836bde85844781736f0f87b51ae9393da5f", "patch": "@@ -0,0 +1,13 @@\n+// Copyright 2012 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+// GNU/Linux library calls Alpha specific.\n+\n+package syscall\n+\n+//sys\tIoperm(from int, num int, on int) (err error)\n+//ioperm(from _C_long, num _C_long, on int) int\n+\n+//sys\tIopl(level int) (err error)\n+//iopl(level int) int"}, {"sha": "9cab9ba40d543a778d48b33e73fb8bde74eb8000", "filename": "libgo/go/syscall/libcall_linux_amd64.go", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4cce1836bde85844781736f0f87b51ae9393da5f/libgo%2Fgo%2Fsyscall%2Flibcall_linux_amd64.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4cce1836bde85844781736f0f87b51ae9393da5f/libgo%2Fgo%2Fsyscall%2Flibcall_linux_amd64.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fsyscall%2Flibcall_linux_amd64.go?ref=4cce1836bde85844781736f0f87b51ae9393da5f", "patch": "@@ -0,0 +1,13 @@\n+// Copyright 2012 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+// GNU/Linux library calls amd64 specific.\n+\n+package syscall\n+\n+//sys\tIoperm(from int, num int, on int) (err error)\n+//ioperm(from _C_long, num _C_long, on int) int\n+\n+//sys\tIopl(level int) (err error)\n+//iopl(level int) int"}]}