{"sha": "052e0603b1b8a2dbbcee2261642764fcea84fe51", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDUyZTA2MDNiMWI4YTJkYmJjZWUyMjYxNjQyNzY0ZmNlYTg0ZmU1MQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-02T15:25:25Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-02T15:25:25Z"}, "message": "[multiple changes]\n\n2011-08-02  Robert Dewar  <dewar@adacore.com>\n\n\t* exp_ch9.adb, exp_sel.adb, restrict.ads, exp_disp.adb, erroutc.ads,\n\texp_ch3.adb: Minor reformatting.\n\n2011-08-02  Emmanuel Briot  <briot@adacore.com>\n\n\t* adaint.c (__gnat_locate_exec_on_path): only returns executable\n\tfiles, not any regular file.\n\t(__gnat_locate_file_with_predicate): new subprogram.\n\n2011-08-02  Yannick Moy  <moy@adacore.com>\n\n\t* sinfo.adb, sinfo.ads: Restrict the use of flags\n\tHas_Dynamic_Length_Check and Has_Dynamic_Range_Check to expression\n\tnodes, plus N_Subtype_Declaration for the 2nd one.\n\nFrom-SVN: r177180", "tree": {"sha": "ffce63d4e87a8d73bf0ba2edf33ccda1cdab0cd0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ffce63d4e87a8d73bf0ba2edf33ccda1cdab0cd0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/052e0603b1b8a2dbbcee2261642764fcea84fe51", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/052e0603b1b8a2dbbcee2261642764fcea84fe51", "html_url": "https://github.com/Rust-GCC/gccrs/commit/052e0603b1b8a2dbbcee2261642764fcea84fe51", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/052e0603b1b8a2dbbcee2261642764fcea84fe51/comments", "author": null, "committer": null, "parents": [{"sha": "4fbad0ba4c093d5653e70679aba43193a20881e5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4fbad0ba4c093d5653e70679aba43193a20881e5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4fbad0ba4c093d5653e70679aba43193a20881e5"}], "stats": {"total": 3412, "additions": 3329, "deletions": 83}, "files": [{"sha": "5220337f50777a8620a6b5d301f692df49698128", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 3209, "deletions": 0, "changes": 3209, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/052e0603b1b8a2dbbcee2261642764fcea84fe51/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/052e0603b1b8a2dbbcee2261642764fcea84fe51/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=052e0603b1b8a2dbbcee2261642764fcea84fe51"}, {"sha": "446f50018dae778e7ba50535a1284d4c881a6d8d", "filename": "gcc/ada/adaint.c", "status": "modified", "additions": 27, "deletions": 8, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/052e0603b1b8a2dbbcee2261642764fcea84fe51/gcc%2Fada%2Fadaint.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/052e0603b1b8a2dbbcee2261642764fcea84fe51/gcc%2Fada%2Fadaint.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fadaint.c?ref=052e0603b1b8a2dbbcee2261642764fcea84fe51", "patch": "@@ -2700,10 +2700,11 @@ __gnat_os_exit (int status)\n   exit (status);\n }\n \n-/* Locate a regular file, give a Path value.  */\n+/* Locate file on path, that matches a predicate */\n \n char *\n-__gnat_locate_regular_file (char *file_name, char *path_val)\n+__gnat_locate_file_with_predicate\n+   (char *file_name, char *path_val, int (*predicate)(char*))\n {\n   char *ptr;\n   char *file_path = (char *) alloca (strlen (file_name) + 1);\n@@ -2733,7 +2734,7 @@ __gnat_locate_regular_file (char *file_name, char *path_val)\n \n   if (absolute)\n     {\n-     if (__gnat_is_regular_file (file_path))\n+     if (predicate (file_path))\n        return xstrdup (file_path);\n \n       return 0;\n@@ -2746,7 +2747,7 @@ __gnat_locate_regular_file (char *file_name, char *path_val)\n \n   if (*ptr != 0)\n     {\n-      if (__gnat_is_regular_file (file_name))\n+      if (predicate (file_name))\n         return xstrdup (file_name);\n     }\n \n@@ -2787,7 +2788,7 @@ __gnat_locate_regular_file (char *file_name, char *path_val)\n \n       strcpy (++ptr, file_name);\n \n-      if (__gnat_is_regular_file (file_path))\n+      if (predicate (file_path))\n         return xstrdup (file_path);\n \n       if (*path_val == 0)\n@@ -2802,6 +2803,24 @@ __gnat_locate_regular_file (char *file_name, char *path_val)\n   return 0;\n }\n \n+/* Locate an executable file, give a Path value.  */\n+\n+char *\n+__gnat_locate_executable_file (char *file_name, char *path_val)\n+{\n+   return __gnat_locate_file_with_predicate\n+      (file_name, path_val, &__gnat_is_executable_file);\n+}\n+\n+/* Locate a regular file, give a Path value.  */\n+\n+char *\n+__gnat_locate_regular_file (char *file_name, char *path_val)\n+{\n+   return __gnat_locate_file_with_predicate\n+      (file_name, path_val, &__gnat_is_regular_file);\n+}\n+\n /* Locate an executable given a Path argument. This routine is only used by\n    gnatbl and should not be used otherwise.  Use locate_exec_on_path\n    instead.  */\n@@ -2818,14 +2837,14 @@ __gnat_locate_exec (char *exec_name, char *path_val)\n \n       strcpy (full_exec_name, exec_name);\n       strcat (full_exec_name, HOST_EXECUTABLE_SUFFIX);\n-      ptr = __gnat_locate_regular_file (full_exec_name, path_val);\n+      ptr = __gnat_locate_executable_file (full_exec_name, path_val);\n \n       if (ptr == 0)\n-         return __gnat_locate_regular_file (exec_name, path_val);\n+         return __gnat_locate_executable_file (exec_name, path_val);\n       return ptr;\n     }\n   else\n-    return __gnat_locate_regular_file (exec_name, path_val);\n+    return __gnat_locate_executable_file (exec_name, path_val);\n }\n \n /* Locate an executable using the Systems default PATH.  */"}, {"sha": "a2ac46329d43a2ae854832830786ae51fa3fcd25", "filename": "gcc/ada/erroutc.ads", "status": "modified", "additions": 35, "deletions": 35, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/052e0603b1b8a2dbbcee2261642764fcea84fe51/gcc%2Fada%2Ferroutc.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/052e0603b1b8a2dbbcee2261642764fcea84fe51/gcc%2Fada%2Ferroutc.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferroutc.ads?ref=052e0603b1b8a2dbbcee2261642764fcea84fe51", "patch": "@@ -219,33 +219,33 @@ package Erroutc is\n    --  error message table, since messages are not always inserted in sequence.\n \n    Last_Error_Msg : Error_Msg_Id;\n-   --  The last entry on the list of error messages. Note that this is not\n-   --  the same as the physically last entry in the error message table, since\n-   --  messages are not always inserted in sequence.\n+   --  The last entry on the list of error messages. Note: this is not the same\n+   --  as the physically last entry in the error message table, since messages\n+   --  are not always inserted in sequence.\n \n    --------------------------\n    -- Warning Mode Control --\n    --------------------------\n \n-   --  Pragma Warnings allows warnings to be turned off for a specified\n-   --  region of code, and the following tables are the data structures used\n-   --  to keep track of these regions.\n+   --  Pragma Warnings allows warnings to be turned off for a specified region\n+   --  of code, and the following tables are the data structures used to keep\n+   --  track of these regions.\n \n-   --  The first table is used for the basic command line control, and for\n-   --  the forms of Warning with a single ON or OFF parameter.\n+   --  The first table is used for the basic command line control, and for the\n+   --  forms of Warning with a single ON or OFF parameter.\n \n    --  It contains pairs of source locations, the first being the start\n    --  location for a warnings off region, and the second being the end\n-   --  location. When a pragma Warnings (Off) is encountered, a new entry\n-   --  is established extending from the location of the pragma to the\n-   --  end of the current source file. A subsequent pragma Warnings (On)\n-   --  adjusts the end point of this entry appropriately.\n+   --  location. When a pragma Warnings (Off) is encountered, a new entry is\n+   --  established extending from the location of the pragma to the end of the\n+   --  current source file. A subsequent pragma Warnings (On) adjusts the end\n+   --  point of this entry appropriately.\n \n-   --  If all warnings are suppressed by command switch, then there is a\n-   --  dummy entry (put there by Errout.Initialize) at the start of the\n-   --  table which covers all possible Source_Ptr values. Note that the\n-   --  source pointer values in this table always reference the original\n-   --  template, not an instantiation copy, in the generic case.\n+   --  If all warnings are suppressed by command switch, then there is a dummy\n+   --  entry (put there by Errout.Initialize) at the start of the table which\n+   --  covers all possible Source_Ptr values. Note that the source pointer\n+   --  values in this table always reference the original template, not an\n+   --  instantiation copy, in the generic case.\n \n    type Warnings_Entry is record\n       Start : Source_Ptr;\n@@ -280,9 +280,9 @@ package Erroutc is\n       --  Set to True if entry has been used to suppress a warning\n \n       Config : Boolean;\n-      --  True if pragma is configuration pragma (in which case no matching\n-      --  Off pragma is required, and it is not required that a specific\n-      --  warning be suppressed).\n+      --  True if pragma is configuration pragma (in which case no matching Off\n+      --  pragma is required, and it is not required that a specific warning be\n+      --  suppressed).\n    end record;\n \n    package Specific_Warnings is new Table.Table (\n@@ -304,10 +304,10 @@ package Erroutc is\n    --     end Mumble;\n \n    --  The trouble is that the first pragma is technically a configuration\n-   --  pragma, and yet it is clearly being used in the context of thinking\n-   --  of it as a specific case. To deal with this, what we do is that the\n-   --  On entry can match a configuration pragma from the same file, and if\n-   --  we find such an On entry, we cancel the indication of it being the\n+   --  pragma, and yet it is clearly being used in the context of thinking of\n+   --  it as a specific case. To deal with this, what we do is that the On\n+   --  entry can match a configuration pragma from the same file, and if we\n+   --  find such an On entry, we cancel the indication of it being the\n    --  configuration case. This seems to handle all cases we run into ok.\n \n    -----------------\n@@ -336,16 +336,16 @@ package Erroutc is\n    --  output giving node number (of node N) if the debug X switch is set.\n \n    procedure Check_Duplicate_Message (M1, M2 : Error_Msg_Id);\n-   --  This function is passed the Id values of two error messages. If\n-   --  either M1 or M2 is a continuation message, or is already deleted,\n-   --  the call is ignored. Otherwise a check is made to see if M1 and M2\n-   --  are duplicated or redundant. If so, the message to be deleted and\n-   --  all its continuations are marked with the Deleted flag set to True.\n+   --  This function is passed the Id values of two error messages. If either\n+   --  M1 or M2 is a continuation message, or is already deleted, the call is\n+   --  ignored. Otherwise a check is made to see if M1 and M2 are duplicated or\n+   --  redundant. If so, the message to be deleted and all its continuations\n+   --  are marked with the Deleted flag set to True.\n \n    procedure Output_Error_Msgs (E : in out Error_Msg_Id);\n-   --  Output source line, error flag, and text of stored error message and\n-   --  all subsequent messages for the same line and unit. On return E is\n-   --  set to be one higher than the last message output.\n+   --  Output source line, error flag, and text of stored error message and all\n+   --  subsequent messages for the same line and unit. On return E is set to be\n+   --  one higher than the last message output.\n \n    procedure Output_Line_Number (L : Logical_Line_Number);\n    --  Output a line number as six digits (with leading zeroes suppressed),\n@@ -366,9 +366,9 @@ package Erroutc is\n    --  including the end points) will be deleted from the error listing.\n \n    function Same_Error (M1, M2 : Error_Msg_Id) return Boolean;\n-   --  See if two messages have the same text. Returns true if the text\n-   --  of the two messages is identical, or if one of them is the same\n-   --  as the other with an appended \"instance at xxx\" tag.\n+   --  See if two messages have the same text. Returns true if the text of the\n+   --  two messages is identical, or if one of them is the same as the other\n+   --  with an appended \"instance at xxx\" tag.\n \n    procedure Set_Msg_Blank;\n    --  Sets a single blank in the message if the preceding character is a"}, {"sha": "540d395278787790409e3b2d460af7633c06b786", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/052e0603b1b8a2dbbcee2261642764fcea84fe51/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/052e0603b1b8a2dbbcee2261642764fcea84fe51/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=052e0603b1b8a2dbbcee2261642764fcea84fe51", "patch": "@@ -8459,15 +8459,15 @@ package body Exp_Ch3 is\n          --  they may be ancestors of synchronized interface types).\n \n          elsif (not Is_Interface (Tag_Typ)\n-                  and then Is_Interface (Etype (Tag_Typ))\n-                  and then Is_Limited_Record (Etype (Tag_Typ)))\n+                 and then Is_Interface (Etype (Tag_Typ))\n+                 and then Is_Limited_Record (Etype (Tag_Typ)))\n              or else\n                (Is_Concurrent_Record_Type (Tag_Typ)\n-                  and then Has_Interfaces (Tag_Typ))\n+                 and then Has_Interfaces (Tag_Typ))\n              or else\n                (not Tagged_Type_Expansion\n-                  and then not Is_Interface (Tag_Typ)\n-                  and then Tag_Typ = Root_Type (Tag_Typ))\n+                 and then not Is_Interface (Tag_Typ)\n+                 and then Tag_Typ = Root_Type (Tag_Typ))\n          then\n             Append_To (Res,\n               Make_Subprogram_Declaration (Loc,\n@@ -8944,10 +8944,10 @@ package body Exp_Ch3 is\n         and then not Is_Interface (Tag_Typ)\n         and then\n           ((Is_Interface (Etype (Tag_Typ))\n-              and then Is_Limited_Record (Etype (Tag_Typ)))\n+             and then Is_Limited_Record (Etype (Tag_Typ)))\n            or else\n              (Is_Concurrent_Record_Type (Tag_Typ)\n-                and then Has_Interfaces (Tag_Typ))\n+               and then Has_Interfaces (Tag_Typ))\n            or else\n              (not Tagged_Type_Expansion\n                and then Tag_Typ = Root_Type (Tag_Typ)))"}, {"sha": "b8a89bcb55f4724f21e0d3c770e8b32698a3dfc9", "filename": "gcc/ada/exp_ch9.adb", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/052e0603b1b8a2dbbcee2261642764fcea84fe51/gcc%2Fada%2Fexp_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/052e0603b1b8a2dbbcee2261642764fcea84fe51/gcc%2Fada%2Fexp_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch9.adb?ref=052e0603b1b8a2dbbcee2261642764fcea84fe51", "patch": "@@ -8698,9 +8698,7 @@ package body Exp_Ch9 is\n          if Tagged_Type_Expansion then\n             Prepend_To (Params,\n               Make_Function_Call (Loc,\n-                Name =>\n-                  New_Reference_To (RTE (RE_Get_Offset_Index), Loc),\n-\n+                Name => New_Reference_To (RTE (RE_Get_Offset_Index), Loc),\n                 Parameter_Associations => New_List (\n                   Unchecked_Convert_To (RTE (RE_Tag), Concval),\n                   Make_Integer_Literal (Loc, DT_Position (Entity (Ename))))));\n@@ -8710,20 +8708,20 @@ package body Exp_Ch9 is\n          else\n             Prepend_To (Params,\n               Make_Function_Call (Loc,\n-                Name =>\n-                  New_Reference_To (RTE (RE_Get_Offset_Index), Loc),\n+                Name => New_Reference_To (RTE (RE_Get_Offset_Index), Loc),\n \n                 Parameter_Associations => New_List (\n+\n                   --  Obj_Typ\n \n                   Make_Attribute_Reference (Loc,\n-                    Prefix => Concval,\n+                    Prefix         => Concval,\n                     Attribute_Name => Name_Tag),\n \n                   --  Tag_Typ\n \n                   Make_Attribute_Reference (Loc,\n-                    Prefix => New_Reference_To (Etype (Concval), Loc),\n+                    Prefix         => New_Reference_To (Etype (Concval), Loc),\n                     Attribute_Name => Name_Tag),\n \n                   --  Position"}, {"sha": "85abeafdb139a606549acf6a8466381c98baf5c6", "filename": "gcc/ada/exp_disp.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/052e0603b1b8a2dbbcee2261642764fcea84fe51/gcc%2Fada%2Fexp_disp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/052e0603b1b8a2dbbcee2261642764fcea84fe51/gcc%2Fada%2Fexp_disp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_disp.adb?ref=052e0603b1b8a2dbbcee2261642764fcea84fe51", "patch": "@@ -6627,7 +6627,7 @@ package body Exp_Disp is\n                            --  Iface_Tag\n \n                          Make_Attribute_Reference (Loc,\n-                           Prefix => New_Reference_To (Iface, Loc),\n+                           Prefix         => New_Reference_To (Iface, Loc),\n                            Attribute_Name => Name_Tag),\n \n                            --  OSD\n@@ -6648,7 +6648,7 @@ package body Exp_Disp is\n                      Make_Subtype_Indication (Loc,\n                        Subtype_Mark =>\n                          New_Reference_To (RTE (RE_Interface_Data), Loc),\n-                       Constraint => Make_Index_Or_Discriminant_Constraint\n+                       Constraint   => Make_Index_Or_Discriminant_Constraint\n                          (Loc,\n                           Constraints => New_List (\n                             Make_Integer_Literal (Loc, Num_Ifaces)))),"}, {"sha": "5596f8a10f967f4334a2ca4d45c7a94b85260756", "filename": "gcc/ada/exp_sel.adb", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/052e0603b1b8a2dbbcee2261642764fcea84fe51/gcc%2Fada%2Fexp_sel.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/052e0603b1b8a2dbbcee2261642764fcea84fe51/gcc%2Fada%2Fexp_sel.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_sel.adb?ref=052e0603b1b8a2dbbcee2261642764fcea84fe51", "patch": "@@ -156,7 +156,7 @@ package body Exp_Sel is\n       else\n          Tag_Node :=\n            Make_Attribute_Reference (Loc,\n-             Prefix => Obj,\n+             Prefix         => Obj,\n              Attribute_Name => Name_Tag);\n       end if;\n \n@@ -205,7 +205,7 @@ package body Exp_Sel is\n       if Tagged_Type_Expansion then\n          return\n            Make_Assignment_Statement (Loc,\n-             Name => New_Reference_To (S, Loc),\n+             Name       => New_Reference_To (S, Loc),\n              Expression =>\n                Make_Function_Call (Loc,\n                  Name => New_Reference_To (RTE (RE_Get_Offset_Index), Loc),\n@@ -218,10 +218,11 @@ package body Exp_Sel is\n       else\n          return\n            Make_Assignment_Statement (Loc,\n-             Name => New_Reference_To (S, Loc),\n+             Name       => New_Reference_To (S, Loc),\n              Expression =>\n                Make_Function_Call (Loc,\n                  Name => New_Reference_To (RTE (RE_Get_Offset_Index), Loc),\n+\n                  Parameter_Associations => New_List (\n \n                      --  Obj_Typ"}, {"sha": "5472d056ee103d0360d68e68089bf83e7ad23bae", "filename": "gcc/ada/restrict.ads", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/052e0603b1b8a2dbbcee2261642764fcea84fe51/gcc%2Fada%2Frestrict.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/052e0603b1b8a2dbbcee2261642764fcea84fe51/gcc%2Fada%2Frestrict.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frestrict.ads?ref=052e0603b1b8a2dbbcee2261642764fcea84fe51", "patch": "@@ -185,6 +185,10 @@ package Restrict is\n    --  The table contains pairs of source locations, the first being the start\n    --  location for hidden region, and the second being the end location.\n \n+   --  Note that the start location is included in the hidden region, while\n+   --  the end location is excluded from it. (It typically corresponds to the\n+   --  next token during scanning.)\n+\n    type SPARK_Hide_Entry is record\n       Start : Source_Ptr;\n       Stop  : Source_Ptr;\n@@ -310,8 +314,8 @@ package Restrict is\n    function Get_Restriction_Id\n      (N : Name_Id) return Restriction_Id;\n    --  Given an identifier name, determines if it is a valid restriction\n-   --  identifier, and if so returns the corresponding Restriction_Id\n-   --  value, otherwise returns Not_A_Restriction_Id.\n+   --  identifier, and if so returns the corresponding Restriction_Id value,\n+   --  otherwise returns Not_A_Restriction_Id.\n \n    function Is_In_Hidden_Part_In_SPARK (Loc : Source_Ptr) return Boolean;\n    --  Determine if given location is covered by a hidden region range in the\n@@ -358,9 +362,9 @@ package Restrict is\n \n    function Restricted_Profile return Boolean;\n    --  Tests if set of restrictions corresponding to Profile (Restricted) is\n-   --  currently in effect (set by pragma Profile, or by an appropriate set\n-   --  of individual Restrictions pragmas). Returns True only if all the\n-   --  required restrictions are set.\n+   --  currently in effect (set by pragma Profile, or by an appropriate set of\n+   --  individual Restrictions pragmas). Returns True only if all the required\n+   --  restrictions are set.\n \n    procedure Set_Hidden_Part_In_SPARK (Loc1, Loc2 : Source_Ptr);\n    --  Insert a new hidden region range in the SPARK hides table\n@@ -394,8 +398,8 @@ package Restrict is\n      (Unit    : Node_Id;\n       Warn    : Boolean;\n       Profile : Profile_Name := No_Profile);\n-   --  Sets given No_Dependence restriction in table if not there already.\n-   --  Warn is True if from Restriction_Warnings, or for Restrictions if flag\n+   --  Sets given No_Dependence restriction in table if not there already. Warn\n+   --  is True if from Restriction_Warnings, or for Restrictions if the flag\n    --  Treat_Restrictions_As_Warnings is set. False if from Restrictions and\n    --  this flag is not set. Profile is set to a non-default value if the\n    --  No_Dependence restriction comes from a Profile pragma."}, {"sha": "fb9ab568f8b27eb05842b3c30a3714e2070bbf26", "filename": "gcc/ada/sinfo.adb", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/052e0603b1b8a2dbbcee2261642764fcea84fe51/gcc%2Fada%2Fsinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/052e0603b1b8a2dbbcee2261642764fcea84fe51/gcc%2Fada%2Fsinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.adb?ref=052e0603b1b8a2dbbcee2261642764fcea84fe51", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -1440,11 +1440,17 @@ package body Sinfo is\n    function Has_Dynamic_Length_Check\n       (N : Node_Id) return Boolean is\n    begin\n+      pragma Assert (False\n+        or else NT (N).Nkind in N_Subexpr);\n       return Flag10 (N);\n    end Has_Dynamic_Length_Check;\n+\n    function Has_Dynamic_Range_Check\n       (N : Node_Id) return Boolean is\n    begin\n+      pragma Assert (False\n+        or else NT (N).Nkind =  N_Subtype_Declaration\n+        or else NT (N).Nkind in N_Subexpr);\n       return Flag12 (N);\n    end Has_Dynamic_Range_Check;\n \n@@ -4484,12 +4490,17 @@ package body Sinfo is\n    procedure Set_Has_Dynamic_Length_Check\n       (N : Node_Id; Val : Boolean := True) is\n    begin\n+      pragma Assert (False\n+        or else NT (N).Nkind in N_Subexpr);\n       Set_Flag10 (N, Val);\n    end Set_Has_Dynamic_Length_Check;\n \n    procedure Set_Has_Dynamic_Range_Check\n       (N : Node_Id; Val : Boolean := True) is\n    begin\n+      pragma Assert (False\n+        or else NT (N).Nkind =  N_Subtype_Declaration\n+        or else NT (N).Nkind in N_Subexpr);\n       Set_Flag12 (N, Val);\n    end Set_Has_Dynamic_Range_Check;\n "}, {"sha": "88bcafbd12592fb612630090acd0af2506c6ec0b", "filename": "gcc/ada/sinfo.ads", "status": "modified", "additions": 17, "deletions": 13, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/052e0603b1b8a2dbbcee2261642764fcea84fe51/gcc%2Fada%2Fsinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/052e0603b1b8a2dbbcee2261642764fcea84fe51/gcc%2Fada%2Fsinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.ads?ref=052e0603b1b8a2dbbcee2261642764fcea84fe51", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -424,6 +424,8 @@ package Sinfo is\n    --       Raises_Constraint_Error  (Flag7-Sem)  evaluation raises CE\n    --       Must_Not_Freeze          (Flag8-Sem)  set if must not freeze\n    --       Do_Range_Check           (Flag9-Sem)  set if a range check needed\n+   --       Has_Dynamic_Length_Check (Flag10-Sem) set if length check inserted\n+   --       Has_Dynamic_Range_Check  (Flag12-Sem) set if range check inserted\n    --       Assignment_OK            (Flag15-Sem) set if modification is OK\n    --       Is_Controlling_Actual    (Flag16-Sem) set for controlling argument\n \n@@ -485,18 +487,6 @@ package Sinfo is\n    --    refers to a node or is posted on its source location, and has the\n    --    effect of inhibiting further messages involving this same node.\n \n-   --  Has_Dynamic_Length_Check (Flag10-Sem)\n-   --    This flag is present on all nodes. It is set to indicate that one of\n-   --    the routines in unit Checks has generated a length check action which\n-   --    has been inserted at the flagged node. This is used to avoid the\n-   --    generation of duplicate checks.\n-\n-   --  Has_Dynamic_Range_Check (Flag12-Sem)\n-   --    This flag is present on all nodes. It is set to indicate that one of\n-   --    the routines in unit Checks has generated a range check action which\n-   --    has been inserted at the flagged node. This is used to avoid the\n-   --    generation of duplicate checks.\n-\n    ------------------------------------\n    -- Description of Semantic Fields --\n    ------------------------------------\n@@ -1125,6 +1115,19 @@ package Sinfo is\n    --    handler is deleted during optimization. For further details on why\n    --    this is required, see Exp_Ch11.Remove_Handler_Entries.\n \n+   --  Has_Dynamic_Length_Check (Flag10-Sem)\n+   --    This flag is present on all expression nodes. It is set to indicate\n+   --    that one of the routines in unit Checks has generated a length check\n+   --    action which has been inserted at the flagged node. This is used to\n+   --    avoid the generation of duplicate checks.\n+\n+   --  Has_Dynamic_Range_Check (Flag12-Sem)\n+   --    This flag is present in N_Subtype_Declaration nodes and on all\n+   --    expression nodes. It is set to indicate that one of the routines in\n+   --    unit Checks has generated a range check action which has been inserted\n+   --    at the flagged node. This is used to avoid the generation of duplicate\n+   --    checks.\n+\n    --  Has_Local_Raise (Flag8-Sem)\n    --    Present in exception handler nodes. Set if the handler can be entered\n    --    via a local raise that gets transformed to a goto statement. This will\n@@ -2217,6 +2220,7 @@ package Sinfo is\n       --  Subtype_Indication (Node5)\n       --  Generic_Parent_Type (Node4-Sem) (set for an actual derived type).\n       --  Exception_Junk (Flag8-Sem)\n+      --  Has_Dynamic_Range_Check (Flag12-Sem)\n \n       -------------------------------\n       -- 3.2.2  Subtype Indication --"}]}