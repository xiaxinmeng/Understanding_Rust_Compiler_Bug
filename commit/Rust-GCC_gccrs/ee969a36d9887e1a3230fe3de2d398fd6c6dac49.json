{"sha": "ee969a36d9887e1a3230fe3de2d398fd6c6dac49", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWU5NjlhMzZkOTg4N2UxYTMyMzBmZTNkZTJkMzk4ZmQ2YzZkYWM0OQ==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2020-05-29T21:32:41Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2020-05-29T23:14:43Z"}, "message": "rs6000: Prefer VSX insns over VMX ones (part 1: perm and mrg)\n\nThere are various VSX insns that do the same job as (older) AltiVec\ninsns, just with a wider range of possible registers.  Many patterns\nfor such insns have the \"v\" alternative before the \"wa\" alternative,\nwhich makes the output less readable than possible (since vs32 is v0,\nand most insns before or after this insn will be VSX as well).\n\nThis changes the define_insns for the mrg and perm machine instructions\nto prefer the VSX form.  No behaviour change.  Only one testcase needed\na little adjustment as well.\n\n2020-05-29  Segher Boessenkool  <segher@kernel.crashing.org>\n\n\t* config/rs6000/altivec.md (altivec_vmrghw_direct): Prefer VSX form.\n\t(altivec_vmrglw_direct): Ditto.\n\t(altivec_vperm_<mode>_direct): Ditto.\n\t(altivec_vperm_v8hiv16qi): Ditto.\n\t(*altivec_vperm_<mode>_uns_internal): Ditto.\n\t(*altivec_vpermr_<mode>_internal): Ditto.\n\t(vperm_v8hiv4si): Ditto.\n\t(vperm_v16qiv8hi): Ditto.\n\ngcc/testsuite/\n\t* gcc.target/powerpc/vsx-vector-6.p9.c: Allow xxperm as perm as well.", "tree": {"sha": "834f36dfc6252ae6593bc3acd34ad3c85d25ab7f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/834f36dfc6252ae6593bc3acd34ad3c85d25ab7f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ee969a36d9887e1a3230fe3de2d398fd6c6dac49", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee969a36d9887e1a3230fe3de2d398fd6c6dac49", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ee969a36d9887e1a3230fe3de2d398fd6c6dac49", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee969a36d9887e1a3230fe3de2d398fd6c6dac49/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c75ebe76ae12ac4020f20a24f34606a594a40d15", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c75ebe76ae12ac4020f20a24f34606a594a40d15", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c75ebe76ae12ac4020f20a24f34606a594a40d15"}], "stats": {"total": 106, "additions": 53, "deletions": 53}, "files": [{"sha": "159f24ebc1025c556c811f68d850590be13618bb", "filename": "gcc/config/rs6000/altivec.md", "status": "modified", "additions": 52, "deletions": 52, "changes": 104, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee969a36d9887e1a3230fe3de2d398fd6c6dac49/gcc%2Fconfig%2Frs6000%2Faltivec.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee969a36d9887e1a3230fe3de2d398fd6c6dac49/gcc%2Fconfig%2Frs6000%2Faltivec.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Faltivec.md?ref=ee969a36d9887e1a3230fe3de2d398fd6c6dac49", "patch": "@@ -1216,14 +1216,14 @@\n   [(set_attr \"type\" \"vecperm\")])\n \n (define_insn \"altivec_vmrghw_direct\"\n-  [(set (match_operand:V4SI 0 \"register_operand\" \"=v,wa\")\n-\t(unspec:V4SI [(match_operand:V4SI 1 \"register_operand\" \"v,wa\")\n-\t\t      (match_operand:V4SI 2 \"register_operand\" \"v,wa\")]\n+  [(set (match_operand:V4SI 0 \"register_operand\" \"=wa,v\")\n+\t(unspec:V4SI [(match_operand:V4SI 1 \"register_operand\" \"wa,v\")\n+\t\t      (match_operand:V4SI 2 \"register_operand\" \"wa,v\")]\n \t\t     UNSPEC_VMRGH_DIRECT))]\n   \"TARGET_ALTIVEC\"\n   \"@\n-   vmrghw %0,%1,%2\n-   xxmrghw %x0,%x1,%x2\"\n+   xxmrghw %x0,%x1,%x2\n+   vmrghw %0,%1,%2\"\n   [(set_attr \"type\" \"vecperm\")])\n \n (define_insn \"*altivec_vmrghsf\"\n@@ -1364,14 +1364,14 @@\n   [(set_attr \"type\" \"vecperm\")])\n \n (define_insn \"altivec_vmrglw_direct\"\n-  [(set (match_operand:V4SI 0 \"register_operand\" \"=v,wa\")\n-\t(unspec:V4SI [(match_operand:V4SI 1 \"register_operand\" \"v,wa\")\n-\t\t      (match_operand:V4SI 2 \"register_operand\" \"v,wa\")]\n+  [(set (match_operand:V4SI 0 \"register_operand\" \"=wa,v\")\n+\t(unspec:V4SI [(match_operand:V4SI 1 \"register_operand\" \"wa,v\")\n+\t\t      (match_operand:V4SI 2 \"register_operand\" \"wa,v\")]\n \t\t     UNSPEC_VMRGL_DIRECT))]\n   \"TARGET_ALTIVEC\"\n   \"@\n-   vmrglw %0,%1,%2\n-   xxmrglw %x0,%x1,%x2\"\n+   xxmrglw %x0,%x1,%x2\n+   vmrglw %0,%1,%2\"\n   [(set_attr \"type\" \"vecperm\")])\n \n (define_insn \"*altivec_vmrglsf\"\n@@ -2193,30 +2193,30 @@\n \n ;; Slightly prefer vperm, since the target does not overlap the source\n (define_insn \"altivec_vperm_<mode>_direct\"\n-  [(set (match_operand:VM 0 \"register_operand\" \"=v,?wa\")\n-\t(unspec:VM [(match_operand:VM 1 \"register_operand\" \"v,wa\")\n-\t\t    (match_operand:VM 2 \"register_operand\" \"v,0\")\n-\t\t    (match_operand:V16QI 3 \"register_operand\" \"v,wa\")]\n+  [(set (match_operand:VM 0 \"register_operand\" \"=?wa,v\")\n+\t(unspec:VM [(match_operand:VM 1 \"register_operand\" \"wa,v\")\n+\t\t    (match_operand:VM 2 \"register_operand\" \"0,v\")\n+\t\t    (match_operand:V16QI 3 \"register_operand\" \"wa,v\")]\n \t\t   UNSPEC_VPERM))]\n   \"TARGET_ALTIVEC\"\n   \"@\n-   vperm %0,%1,%2,%3\n-   xxperm %x0,%x1,%x3\"\n+   xxperm %x0,%x1,%x3\n+   vperm %0,%1,%2,%3\"\n   [(set_attr \"type\" \"vecperm\")\n-   (set_attr \"isa\" \"*,p9v\")])\n+   (set_attr \"isa\" \"p9v,*\")])\n \n (define_insn \"altivec_vperm_v8hiv16qi\"\n-  [(set (match_operand:V16QI 0 \"register_operand\" \"=v,?wa\")\n-\t(unspec:V16QI [(match_operand:V8HI 1 \"register_operand\" \"v,wa\")\n-   \t               (match_operand:V8HI 2 \"register_operand\" \"v,0\")\n-\t\t       (match_operand:V16QI 3 \"register_operand\" \"v,wa\")]\n+  [(set (match_operand:V16QI 0 \"register_operand\" \"=?wa,v\")\n+\t(unspec:V16QI [(match_operand:V8HI 1 \"register_operand\" \"wa,v\")\n+   \t               (match_operand:V8HI 2 \"register_operand\" \"0,v\")\n+\t\t       (match_operand:V16QI 3 \"register_operand\" \"wa,v\")]\n \t\t   UNSPEC_VPERM))]\n   \"TARGET_ALTIVEC\"\n   \"@\n-   vperm %0,%1,%2,%3\n-   xxperm %x0,%x1,%x3\"\n+   xxperm %x0,%x1,%x3\n+   vperm %0,%1,%2,%3\"\n   [(set_attr \"type\" \"vecperm\")\n-   (set_attr \"isa\" \"*,p9v\")])\n+   (set_attr \"isa\" \"p9v,*\")])\n \n (define_expand \"altivec_vperm_<mode>_uns\"\n   [(set (match_operand:VM 0 \"register_operand\")\n@@ -2234,17 +2234,17 @@\n })\n \n (define_insn \"*altivec_vperm_<mode>_uns_internal\"\n-  [(set (match_operand:VM 0 \"register_operand\" \"=v,?wa\")\n-\t(unspec:VM [(match_operand:VM 1 \"register_operand\" \"v,wa\")\n-\t\t    (match_operand:VM 2 \"register_operand\" \"v,0\")\n-\t\t    (match_operand:V16QI 3 \"register_operand\" \"v,wa\")]\n+  [(set (match_operand:VM 0 \"register_operand\" \"=?wa,v\")\n+\t(unspec:VM [(match_operand:VM 1 \"register_operand\" \"wa,v\")\n+\t\t    (match_operand:VM 2 \"register_operand\" \"0,v\")\n+\t\t    (match_operand:V16QI 3 \"register_operand\" \"wa,v\")]\n \t\t   UNSPEC_VPERM_UNS))]\n   \"TARGET_ALTIVEC\"\n   \"@\n-   vperm %0,%1,%2,%3\n-   xxperm %x0,%x1,%x3\"\n+   xxperm %x0,%x1,%x3\n+   vperm %0,%1,%2,%3\"\n   [(set_attr \"type\" \"vecperm\")\n-   (set_attr \"isa\" \"*,p9v\")])\n+   (set_attr \"isa\" \"p9v,*\")])\n \n (define_expand \"vec_permv16qi\"\n   [(set (match_operand:V16QI 0 \"register_operand\")\n@@ -2261,17 +2261,17 @@\n })\n \n (define_insn \"*altivec_vpermr_<mode>_internal\"\n-  [(set (match_operand:VM 0 \"register_operand\" \"=v,?wa\")\n-\t(unspec:VM [(match_operand:VM 1 \"register_operand\" \"v,wa\")\n-\t\t    (match_operand:VM 2 \"register_operand\" \"v,0\")\n-\t\t    (match_operand:V16QI 3 \"register_operand\" \"v,wa\")]\n+  [(set (match_operand:VM 0 \"register_operand\" \"=?wa,v\")\n+\t(unspec:VM [(match_operand:VM 1 \"register_operand\" \"wa,v\")\n+\t\t    (match_operand:VM 2 \"register_operand\" \"0,v\")\n+\t\t    (match_operand:V16QI 3 \"register_operand\" \"wa,v\")]\n \t\t   UNSPEC_VPERMR))]\n   \"TARGET_P9_VECTOR\"\n   \"@\n-   vpermr %0,%1,%2,%3\n-   xxpermr %x0,%x1,%x3\"\n+   xxpermr %x0,%x1,%x3\n+   vpermr %0,%1,%2,%3\"\n   [(set_attr \"type\" \"vecperm\")\n-   (set_attr \"isa\" \"*,p9v\")])\n+   (set_attr \"isa\" \"p9v,*\")])\n \n (define_insn \"altivec_vrfip\"\t\t; ceil\n   [(set (match_operand:V4SF 0 \"register_operand\" \"=v\")\n@@ -3414,30 +3414,30 @@\n   \"\")\n \n (define_insn \"vperm_v8hiv4si\"\n-  [(set (match_operand:V4SI 0 \"register_operand\" \"=v,?wa\")\n-        (unspec:V4SI [(match_operand:V8HI 1 \"register_operand\" \"v,wa\")\n-\t\t      (match_operand:V4SI 2 \"register_operand\" \"v,0\")\n-\t\t      (match_operand:V16QI 3 \"register_operand\" \"v,wa\")]\n+  [(set (match_operand:V4SI 0 \"register_operand\" \"=?wa,v\")\n+        (unspec:V4SI [(match_operand:V8HI 1 \"register_operand\" \"wa,v\")\n+\t\t      (match_operand:V4SI 2 \"register_operand\" \"0,v\")\n+\t\t      (match_operand:V16QI 3 \"register_operand\" \"wa,v\")]\n                   UNSPEC_VPERMSI))]\n   \"TARGET_ALTIVEC\"\n   \"@\n-   vperm %0,%1,%2,%3\n-   xxperm %x0,%x1,%x3\"\n+   xxperm %x0,%x1,%x3\n+   vperm %0,%1,%2,%3\"\n   [(set_attr \"type\" \"vecperm\")\n-   (set_attr \"isa\" \"*,p9v\")])\n+   (set_attr \"isa\" \"p9v,*\")])\n \n (define_insn \"vperm_v16qiv8hi\"\n-  [(set (match_operand:V8HI 0 \"register_operand\" \"=v,?wa\")\n-        (unspec:V8HI [(match_operand:V16QI 1 \"register_operand\" \"v,wa\")\n-\t\t      (match_operand:V8HI 2 \"register_operand\" \"v,0\")\n-\t\t      (match_operand:V16QI 3 \"register_operand\" \"v,wa\")]\n+  [(set (match_operand:V8HI 0 \"register_operand\" \"=?wa,v\")\n+        (unspec:V8HI [(match_operand:V16QI 1 \"register_operand\" \"wa,v\")\n+\t\t      (match_operand:V8HI 2 \"register_operand\" \"0,v\")\n+\t\t      (match_operand:V16QI 3 \"register_operand\" \"wa,v\")]\n                   UNSPEC_VPERMHI))]\n   \"TARGET_ALTIVEC\"\n   \"@\n-   vperm %0,%1,%2,%3\n-   xxperm %x0,%x1,%x3\"\n+   xxperm %x0,%x1,%x3\n+   vperm %0,%1,%2,%3\"\n   [(set_attr \"type\" \"vecperm\")\n-   (set_attr \"isa\" \"*,p9v\")])\n+   (set_attr \"isa\" \"p9v,*\")])\n \n (define_insn \"xxeval\"\n   [(set (match_operand:V2DI 0 \"register_operand\" \"=wa\")"}, {"sha": "43d2e855e0d45da44ab340894bf6fdf58d32b7d0", "filename": "gcc/testsuite/gcc.target/powerpc/vsx-vector-6.p9.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee969a36d9887e1a3230fe3de2d398fd6c6dac49/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsx-vector-6.p9.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee969a36d9887e1a3230fe3de2d398fd6c6dac49/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsx-vector-6.p9.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsx-vector-6.p9.c?ref=ee969a36d9887e1a3230fe3de2d398fd6c6dac49", "patch": "@@ -9,7 +9,7 @@\n /* { dg-final { scan-assembler-times {\\mvmaxub\\M} 1 } } */\n /* { dg-final { scan-assembler-times {\\mvmsumshs\\M} 1 } } */\n /* { dg-final { scan-assembler-times {\\mvmsumuhs\\M} 1 } } */\n-/* { dg-final { scan-assembler-times {\\mvpermr?\\M} 1 } } */\n+/* { dg-final { scan-assembler-times {\\m(?:vpermr?|xxperm)\\M} 1 } } */\n /* { dg-final { scan-assembler-times {\\mxvabsdp\\M} 1 } } */\n /* { dg-final { scan-assembler-times {\\mxvadddp\\M} 1 } } */\n /* { dg-final { scan-assembler-times {\\mxvcmpeqdp\\M} 9 } } */"}]}