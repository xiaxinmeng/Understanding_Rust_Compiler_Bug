{"sha": "44190aed5ed111b27b8d1be4fa5e4d406dafed86", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDQxOTBhZWQ1ZWQxMTFiMjdiOGQxYmU0ZmE1ZTRkNDA2ZGFmZWQ4Ng==", "commit": {"author": {"name": "Anatoly Sokolov", "email": "aesok@post.ru", "date": "2007-07-04T21:10:28Z"}, "committer": {"name": "Anatoly Sokolov", "email": "aesok@gcc.gnu.org", "date": "2007-07-04T21:10:28Z"}, "message": "re PR target/31331 ([avr] ICE on function attribute syntax for main())\n\n\tPR target/31331\n\t* config/avr/avr.c (avr_naked_function_p): Handle receiving a type\n\trather than a decl. \n\t(avr_attribute_table): Make \"naked\" attribute apply to function types\n\trather than to decls.\n\t(avr_handle_fntype_attribute): New function.\n\nFrom-SVN: r126337", "tree": {"sha": "84a7339b747c45548496ce72b136d9c3e58f8a03", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/84a7339b747c45548496ce72b136d9c3e58f8a03"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/44190aed5ed111b27b8d1be4fa5e4d406dafed86", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44190aed5ed111b27b8d1be4fa5e4d406dafed86", "html_url": "https://github.com/Rust-GCC/gccrs/commit/44190aed5ed111b27b8d1be4fa5e4d406dafed86", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44190aed5ed111b27b8d1be4fa5e4d406dafed86/comments", "author": null, "committer": null, "parents": [{"sha": "73ed196896673dd1e48aa1d3a7f69c514de43adc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73ed196896673dd1e48aa1d3a7f69c514de43adc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/73ed196896673dd1e48aa1d3a7f69c514de43adc"}], "stats": {"total": 30, "additions": 28, "deletions": 2}, "files": [{"sha": "60fb88f705bd75a4854eb494f86a298e3855029f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44190aed5ed111b27b8d1be4fa5e4d406dafed86/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44190aed5ed111b27b8d1be4fa5e4d406dafed86/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=44190aed5ed111b27b8d1be4fa5e4d406dafed86", "patch": "@@ -1,3 +1,12 @@\n+2007-07-04 Anatoly Sokolov <aesok@post.ru>\n+\n+\tPR target/31331\n+\t* config/avr/avr.c (avr_naked_function_p): Handle receiving a type\n+\trather than a decl. \n+\t(avr_attribute_table): Make \"naked\" attribute apply to function types\n+\trather than to decls.\n+\t(avr_handle_fntype_attribute): New function.\n+\n 2007-07-04  Joseph Myers  <joseph@codesourcery.com>\n \n \t* target-def.h (TARGET_INITIALIZER): Remove trailing whitespace"}, {"sha": "86c834ba5d6272a51032f13e1bb1b0e0b9f59df1", "filename": "gcc/config/avr/avr.c", "status": "modified", "additions": 19, "deletions": 2, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44190aed5ed111b27b8d1be4fa5e4d406dafed86/gcc%2Fconfig%2Favr%2Favr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44190aed5ed111b27b8d1be4fa5e4d406dafed86/gcc%2Fconfig%2Favr%2Favr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr.c?ref=44190aed5ed111b27b8d1be4fa5e4d406dafed86", "patch": "@@ -62,6 +62,7 @@ static RTX_CODE compare_condition (rtx insn);\n static int compare_sign_p (rtx insn);\n static tree avr_handle_progmem_attribute (tree *, tree, tree, int, bool *);\n static tree avr_handle_fndecl_attribute (tree *, tree, tree, int, bool *);\n+static tree avr_handle_fntype_attribute (tree *, tree, tree, int, bool *);\n const struct attribute_spec avr_attribute_table[];\n static bool avr_assemble_integer (rtx, unsigned int, int);\n static void avr_file_start (void);\n@@ -400,7 +401,7 @@ avr_naked_function_p (tree func)\n \n   gcc_assert (TREE_CODE (func) == FUNCTION_DECL);\n   \n-  a = lookup_attribute (\"naked\", DECL_ATTRIBUTES (func));\n+  a = lookup_attribute (\"naked\", TYPE_ATTRIBUTES (TREE_TYPE (func)));\n   return a != NULL_TREE;\n }\n \n@@ -4585,7 +4586,7 @@ const struct attribute_spec avr_attribute_table[] =\n   { \"progmem\",   0, 0, false, false, false,  avr_handle_progmem_attribute },\n   { \"signal\",    0, 0, true,  false, false,  avr_handle_fndecl_attribute },\n   { \"interrupt\", 0, 0, true,  false, false,  avr_handle_fndecl_attribute },\n-  { \"naked\",     0, 0, true,  false, false,  avr_handle_fndecl_attribute },\n+  { \"naked\",     0, 0, false, true,  true,   avr_handle_fntype_attribute },\n   { NULL,        0, 0, false, false, false, NULL }\n };\n \n@@ -4677,6 +4678,22 @@ avr_handle_fndecl_attribute (tree *node, tree name,\n   return NULL_TREE;\n }\n \n+static tree\n+avr_handle_fntype_attribute (tree *node, tree name,\n+                             tree args ATTRIBUTE_UNUSED,\n+                             int flags ATTRIBUTE_UNUSED,\n+                             bool *no_add_attrs)\n+{\n+  if (TREE_CODE (*node) != FUNCTION_TYPE)\n+    {\n+      warning (OPT_Wattributes, \"%qs attribute only applies to functions\",\n+\t       IDENTIFIER_POINTER (name));\n+      *no_add_attrs = true;\n+    }\n+\n+  return NULL_TREE;\n+}\n+\n /* Look for attribute `progmem' in DECL\n    if found return 1, otherwise 0.  */\n "}]}