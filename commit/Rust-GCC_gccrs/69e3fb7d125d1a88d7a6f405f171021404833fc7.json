{"sha": "69e3fb7d125d1a88d7a6f405f171021404833fc7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjllM2ZiN2QxMjVkMWE4OGQ3YTZmNDA1ZjE3MTAyMTQwNDgzM2ZjNw==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2012-10-18T22:48:35Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2012-10-18T22:48:35Z"}, "message": "re PR c++/54501 (infinite recursion on illegal code)\n\n/cp\n2012-10-18  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/54501\n\t* decl.c (reshape_init_array_1): Avoid infinite loops.\n\n/testsuite\n2012-10-18  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/54501\n\t* g++.dg/init/array30.C: New.\n\t* g++.dg/init/array31.C: Likewise.\n\nFrom-SVN: r192592", "tree": {"sha": "414609a0b747ef722644072e07f7ff2b66fc7fa9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/414609a0b747ef722644072e07f7ff2b66fc7fa9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/69e3fb7d125d1a88d7a6f405f171021404833fc7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69e3fb7d125d1a88d7a6f405f171021404833fc7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/69e3fb7d125d1a88d7a6f405f171021404833fc7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69e3fb7d125d1a88d7a6f405f171021404833fc7/comments", "author": null, "committer": null, "parents": [{"sha": "abe6d88d4a5c3bbbcc3b7d95cd82c8188933081e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/abe6d88d4a5c3bbbcc3b7d95cd82c8188933081e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/abe6d88d4a5c3bbbcc3b7d95cd82c8188933081e"}], "stats": {"total": 33, "additions": 33, "deletions": 0}, "files": [{"sha": "73ab5a9b0ae1d2c70f61c17aac40e940062aefae", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69e3fb7d125d1a88d7a6f405f171021404833fc7/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69e3fb7d125d1a88d7a6f405f171021404833fc7/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=69e3fb7d125d1a88d7a6f405f171021404833fc7", "patch": "@@ -1,3 +1,8 @@\n+2012-10-18  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/54501\n+\t* decl.c (reshape_init_array_1): Avoid infinite loops.\n+\n 2012-10-15  Alexandre Oliva  <aoliva@redhat.com>\n \t    Paolo Carlini  <paolo.carlini@oracle.com>\n "}, {"sha": "d25aa804971e697c9793502cce10ed3e8d31dfa4", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69e3fb7d125d1a88d7a6f405f171021404833fc7/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69e3fb7d125d1a88d7a6f405f171021404833fc7/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=69e3fb7d125d1a88d7a6f405f171021404833fc7", "patch": "@@ -5040,6 +5040,7 @@ reshape_init_array_1 (tree elt_type, tree max_index, reshape_iter *d,\n        ++index)\n     {\n       tree elt_init;\n+      constructor_elt *old_cur = d->cur;\n \n       check_array_designated_initializer (d->cur, index);\n       elt_init = reshape_init_r (elt_type, d, /*first_initializer_p=*/false,\n@@ -5050,6 +5051,10 @@ reshape_init_array_1 (tree elt_type, tree max_index, reshape_iter *d,\n \t\t\t      size_int (index), elt_init);\n       if (!TREE_CONSTANT (elt_init))\n \tTREE_CONSTANT (new_init) = false;\n+\n+      /* This can happen with an invalid initializer (c++/54501).  */\n+      if (d->cur == old_cur && !sized_array_p)\n+\tbreak;\n     }\n \n   return new_init;"}, {"sha": "31f487ed130623eee9f2c48485689cd6df5916c6", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69e3fb7d125d1a88d7a6f405f171021404833fc7/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69e3fb7d125d1a88d7a6f405f171021404833fc7/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=69e3fb7d125d1a88d7a6f405f171021404833fc7", "patch": "@@ -1,3 +1,9 @@\n+2012-10-18  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/54501\n+\t* g++.dg/init/array30.C: New.\n+\t* g++.dg/init/array31.C: Likewise.\n+\n 2012-10-18  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/54884"}, {"sha": "696d9bf992d69cfd5a77245e9916acb695ef7102", "filename": "gcc/testsuite/g++.dg/init/array30.C", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69e3fb7d125d1a88d7a6f405f171021404833fc7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Farray30.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69e3fb7d125d1a88d7a6f405f171021404833fc7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Farray30.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Farray30.C?ref=69e3fb7d125d1a88d7a6f405f171021404833fc7", "patch": "@@ -0,0 +1,7 @@\n+// PR c++/54501\n+// { dg-options \"\" }\n+\n+int main()\n+{\n+  int a[][0] = {0};  // { dg-error \"too many\" }\n+}"}, {"sha": "9bb66a5950f190e67bc1601e6ca87d642eb36183", "filename": "gcc/testsuite/g++.dg/init/array31.C", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69e3fb7d125d1a88d7a6f405f171021404833fc7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Farray31.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69e3fb7d125d1a88d7a6f405f171021404833fc7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Farray31.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Farray31.C?ref=69e3fb7d125d1a88d7a6f405f171021404833fc7", "patch": "@@ -0,0 +1,10 @@\n+// PR c++/54501\n+// { dg-options \"\" }\n+\n+struct A\n+{\n+  int i[0];\n+  int j;\n+};\n+\n+struct A a = { 1 };"}]}