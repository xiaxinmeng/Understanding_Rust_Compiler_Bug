{"sha": "9f419393f2a0219c6f2e7ad083e61b370ca36827", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWY0MTkzOTNmMmEwMjE5YzZmMmU3YWQwODNlNjFiMzcwY2EzNjgyNw==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2013-02-01T10:19:57Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2013-02-01T10:19:57Z"}, "message": "fold-const.c (make_range_step): Bail out if the range isn't testing for zero.\n\n\t* fold-const.c (make_range_step) <TRUTH_NOT_EXPR>: Bail out if the\n\trange isn't testing for zero.\n\nFrom-SVN: r195642", "tree": {"sha": "4821ed36b3d315fee9506dbb4b7780b80c012e8d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4821ed36b3d315fee9506dbb4b7780b80c012e8d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9f419393f2a0219c6f2e7ad083e61b370ca36827", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f419393f2a0219c6f2e7ad083e61b370ca36827", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9f419393f2a0219c6f2e7ad083e61b370ca36827", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f419393f2a0219c6f2e7ad083e61b370ca36827/comments", "author": null, "committer": null, "parents": [{"sha": "a1948282e8038f305351d51bb5450353d331dd3e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1948282e8038f305351d51bb5450353d331dd3e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a1948282e8038f305351d51bb5450353d331dd3e"}], "stats": {"total": 50, "additions": 50, "deletions": 0}, "files": [{"sha": "aa966f9390638e09a45064b46cbd2c9385a96ddd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f419393f2a0219c6f2e7ad083e61b370ca36827/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f419393f2a0219c6f2e7ad083e61b370ca36827/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9f419393f2a0219c6f2e7ad083e61b370ca36827", "patch": "@@ -1,3 +1,8 @@\n+2013-02-01  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* fold-const.c (make_range_step) <TRUTH_NOT_EXPR>: Bail out if the\n+\trange isn't testing for zero.\n+\n 2013-01-31  Steven Bosscher  <steven@gcc.gnu.org>\n \n \tPR middle-end/56113"}, {"sha": "93f38cbbf2161d3c4e18541ccb66fa98cfe57265", "filename": "gcc/fold-const.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f419393f2a0219c6f2e7ad083e61b370ca36827/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f419393f2a0219c6f2e7ad083e61b370ca36827/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=9f419393f2a0219c6f2e7ad083e61b370ca36827", "patch": "@@ -3813,6 +3813,10 @@ make_range_step (location_t loc, enum tree_code code, tree arg0, tree arg1,\n   switch (code)\n     {\n     case TRUTH_NOT_EXPR:\n+      /* We can only do something if the range is testing for zero.  */\n+      if (low == NULL_TREE || high == NULL_TREE\n+\t  || ! integer_zerop (low) || ! integer_zerop (high))\n+\treturn NULL_TREE;\n       *p_in_p = ! in_p;\n       return arg0;\n "}, {"sha": "151edde20df7b5caa9aaebda86920ecc575cf75e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f419393f2a0219c6f2e7ad083e61b370ca36827/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f419393f2a0219c6f2e7ad083e61b370ca36827/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9f419393f2a0219c6f2e7ad083e61b370ca36827", "patch": "@@ -1,3 +1,7 @@\n+2013-02-01  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gnat.dg/opt26.adb: New test.\n+\n 2013-01-31  Ramana Radhakrishnan  <ramana.radhakrishnan@arm.com>\n \n \tRevert."}, {"sha": "61f8b5b1eb99223c52cd81172098d6e38c4fd764", "filename": "gcc/testsuite/gnat.dg/opt26.adb", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f419393f2a0219c6f2e7ad083e61b370ca36827/gcc%2Ftestsuite%2Fgnat.dg%2Fopt26.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f419393f2a0219c6f2e7ad083e61b370ca36827/gcc%2Ftestsuite%2Fgnat.dg%2Fopt26.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fopt26.adb?ref=9f419393f2a0219c6f2e7ad083e61b370ca36827", "patch": "@@ -0,0 +1,37 @@\n+-- { dg-do run }\n+-- { dg-options \"-gnato -O\" }\n+\n+with Interfaces; use Interfaces;\n+\n+procedure Opt26 is\n+\n+   procedure Shift_Left_Bool\n+     (Bool : in Boolean;\n+      U8 : out Interfaces.Unsigned_8)\n+   is\n+   begin\n+      U8 := Shift_Left (Boolean'Pos (Bool), 6);\n+   end Shift_Left_Bool;\n+\n+   procedure Shift_Left_Not_Bool\n+     (Bool : in Boolean;\n+      U8 : out Interfaces.Unsigned_8)\n+   is\n+   begin\n+      U8 := Shift_Left (Boolean'Pos (not Bool), 6);\n+   end Shift_Left_Not_Bool;\n+\n+   Bool         : constant Boolean := True;\n+   Byte1, Byte2 : Interfaces.Unsigned_8;\n+\n+begin\n+\n+   Shift_Left_Bool (Bool, Byte1);\n+\n+   Shift_Left_Not_Bool (Bool, Byte2);\n+\n+   if Byte1 + Byte2 /= 64 then\n+     raise Program_Error;\n+   end if;\n+\n+end;"}]}