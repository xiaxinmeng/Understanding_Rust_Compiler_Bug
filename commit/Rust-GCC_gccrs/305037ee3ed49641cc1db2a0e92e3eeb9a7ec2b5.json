{"sha": "305037ee3ed49641cc1db2a0e92e3eeb9a7ec2b5", "node_id": "C_kwDOANBUbNoAKDMwNTAzN2VlM2VkNDk2NDFjYzFkYjJhMGU5MmUzZWViOWE3ZWMyYjU", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2023-02-10T22:42:43Z"}, "committer": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2023-02-10T22:42:43Z"}, "message": "Regenerate .pot files\n\ngcc/po/\n\t* gcc.pot: Regenerate.\n\nlibcpp/po/\n\t* cpplib.pot: Regenerate.", "tree": {"sha": "a4e4c1849d44dbce38fb5677a2d86bf9267ddda0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a4e4c1849d44dbce38fb5677a2d86bf9267ddda0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/305037ee3ed49641cc1db2a0e92e3eeb9a7ec2b5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/305037ee3ed49641cc1db2a0e92e3eeb9a7ec2b5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/305037ee3ed49641cc1db2a0e92e3eeb9a7ec2b5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/305037ee3ed49641cc1db2a0e92e3eeb9a7ec2b5/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7757567358a84c3774cb972350bd7ea299daaa8d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7757567358a84c3774cb972350bd7ea299daaa8d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7757567358a84c3774cb972350bd7ea299daaa8d"}], "stats": {"total": 28495, "additions": 15473, "deletions": 13022}, "files": [{"sha": "bb7fed50a7f5fb7ab4e142dec77821685306f3e2", "filename": "gcc/po/gcc.pot", "status": "modified", "additions": 15144, "deletions": 12810, "changes": 27954, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/305037ee3ed49641cc1db2a0e92e3eeb9a7ec2b5/gcc%2Fpo%2Fgcc.pot", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/305037ee3ed49641cc1db2a0e92e3eeb9a7ec2b5/gcc%2Fpo%2Fgcc.pot", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpo%2Fgcc.pot?ref=305037ee3ed49641cc1db2a0e92e3eeb9a7ec2b5"}, {"sha": "873bb763855eb0e6c4f8fe3c7cff6a5c1dc84f72", "filename": "libcpp/po/cpplib.pot", "status": "modified", "additions": 329, "deletions": 212, "changes": 541, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/305037ee3ed49641cc1db2a0e92e3eeb9a7ec2b5/libcpp%2Fpo%2Fcpplib.pot", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/305037ee3ed49641cc1db2a0e92e3eeb9a7ec2b5/libcpp%2Fpo%2Fcpplib.pot", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fpo%2Fcpplib.pot?ref=305037ee3ed49641cc1db2a0e92e3eeb9a7ec2b5", "patch": "@@ -8,7 +8,7 @@ msgid \"\"\n msgstr \"\"\n \"Project-Id-Version: PACKAGE VERSION\\n\"\n \"Report-Msgid-Bugs-To: https://gcc.gnu.org/bugs/\\n\"\n-\"POT-Creation-Date: 2022-02-11 23:02+0000\\n\"\n+\"POT-Creation-Date: 2023-02-10 22:39+0000\\n\"\n \"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\\n\"\n \"Last-Translator: FULL NAME <EMAIL@ADDRESS>\\n\"\n \"Language-Team: LANGUAGE <LL@li.org>\\n\"\n@@ -37,7 +37,7 @@ msgid \"character 0x%lx is not in the basic source character set\\n\"\n msgstr \"\"\n \n #: charset.cc:811\n-#: charset.cc:1800\n+#: charset.cc:2420\n msgid \"converting to execution character set\"\n msgstr \"\"\n \n@@ -46,129 +46,215 @@ msgstr \"\"\n msgid \"character 0x%lx is not unibyte in execution character set\"\n msgstr \"\"\n \n-#: charset.cc:1087\n+#: charset.cc:1437\n msgid \"universal character names are only valid in C++ and C99\"\n msgstr \"\"\n \n-#: charset.cc:1091\n+#: charset.cc:1441\n msgid \"C99's universal character names are incompatible with C90\"\n msgstr \"\"\n \n-#: charset.cc:1094\n+#: charset.cc:1444\n #, c-format\n msgid \"the meaning of '\\\\%c' is different in traditional C\"\n msgstr \"\"\n \n-#: charset.cc:1103\n+#: charset.cc:1483\n+msgid \"'\\\\N' not followed by '{'\"\n+msgstr \"\"\n+\n+#: charset.cc:1513\n+msgid \"\"\n+\"empty named universal character escape sequence; treating it as separate \"\n+\"tokens\"\n+msgstr \"\"\n+\n+#: charset.cc:1520\n+msgid \"empty named universal character escape sequence\"\n+msgstr \"\"\n+\n+#: charset.cc:1525\n+msgid \"named universal character escapes are only valid in C++23\"\n+msgstr \"\"\n+\n+#: charset.cc:1545\n+#, c-format\n+msgid \"\"\n+\"\\\\N{%.*s} is not a valid universal character; treating it as separate tokens\"\n+msgstr \"\"\n+\n+#: charset.cc:1551\n+#, c-format\n+msgid \"\\\\N{%.*s} is not a valid universal character\"\n+msgstr \"\"\n+\n+#: charset.cc:1561\n+#, c-format\n+msgid \"did you mean \\\\N{%s}?\"\n+msgstr \"\"\n+\n+#: charset.cc:1579\n+#, c-format\n+msgid \"\"\n+\"'\\\\N{' not terminated with '}' after %.*s; treating it as separate tokens\"\n+msgstr \"\"\n+\n+#: charset.cc:1588\n+#, c-format\n+msgid \"'\\\\N{' not terminated with '}' after %.*s\"\n+msgstr \"\"\n+\n+#: charset.cc:1596\n msgid \"In _cpp_valid_ucn but not a UCN\"\n msgstr \"\"\n \n-#: charset.cc:1136\n+#: charset.cc:1638\n+msgid \"empty delimited escape sequence; treating it as separate tokens\"\n+msgstr \"\"\n+\n+#: charset.cc:1645\n+#: charset.cc:1978\n+#: charset.cc:2081\n+msgid \"empty delimited escape sequence\"\n+msgstr \"\"\n+\n+#: charset.cc:1649\n+#: charset.cc:1984\n+#: charset.cc:2087\n+msgid \"delimited escape sequences are only valid in C++23\"\n+msgstr \"\"\n+\n+#: charset.cc:1663\n+#, c-format\n+msgid \"\"\n+\"'\\\\u{' not terminated with '}' after %.*s; treating it as separate tokens\"\n+msgstr \"\"\n+\n+#: charset.cc:1675\n #, c-format\n msgid \"incomplete universal character name %.*s\"\n msgstr \"\"\n \n-#: charset.cc:1151\n+#: charset.cc:1679\n+#, c-format\n+msgid \"'\\\\u{' not terminated with '}' after %.*s\"\n+msgstr \"\"\n+\n+#: charset.cc:1694\n #, c-format\n msgid \"%.*s is not a valid universal character\"\n msgstr \"\"\n \n-#: charset.cc:1161\n-#: lex.cc:1876\n+#: charset.cc:1704\n+#: lex.cc:2079\n msgid \"'$' in identifier or number\"\n msgstr \"\"\n \n-#: charset.cc:1171\n+#: charset.cc:1714\n #, c-format\n msgid \"universal character %.*s is not valid in an identifier\"\n msgstr \"\"\n \n-#: charset.cc:1175\n+#: charset.cc:1718\n #, c-format\n msgid \"universal character %.*s is not valid at the start of an identifier\"\n msgstr \"\"\n \n-#: charset.cc:1182\n+#: charset.cc:1725\n #, c-format\n msgid \"%.*s is outside the UCS codespace\"\n msgstr \"\"\n \n-#: charset.cc:1227\n-#: charset.cc:2145\n+#: charset.cc:1769\n+#: charset.cc:2797\n msgid \"converting UCN to source character set\"\n msgstr \"\"\n \n-#: charset.cc:1234\n+#: charset.cc:1776\n msgid \"converting UCN to execution character set\"\n msgstr \"\"\n \n-#: charset.cc:1298\n+#: charset.cc:1840\n #, c-format\n msgid \"extended character %.*s is not valid in an identifier\"\n msgstr \"\"\n \n-#: charset.cc:1315\n+#: charset.cc:1857\n #, c-format\n msgid \"extended character %.*s is not valid at the start of an identifier\"\n msgstr \"\"\n \n-#: charset.cc:1401\n+#: charset.cc:1945\n msgid \"the meaning of '\\\\x' is different in traditional C\"\n msgstr \"\"\n \n-#: charset.cc:1426\n+#: charset.cc:1992\n msgid \"\\\\x used with no following hex digits\"\n msgstr \"\"\n \n-#: charset.cc:1433\n+#: charset.cc:1998\n+#, c-format\n+msgid \"'\\\\x{' not terminated with '}' after %.*s\"\n+msgstr \"\"\n+\n+#: charset.cc:2006\n msgid \"hex escape sequence out of range\"\n msgstr \"\"\n \n-#: charset.cc:1483\n+#: charset.cc:2049\n+msgid \"'\\\\o' not followed by '{'\"\n+msgstr \"\"\n+\n+#: charset.cc:2093\n+#, c-format\n+msgid \"'\\\\o{' not terminated with '}' after %.*s\"\n+msgstr \"\"\n+\n+#: charset.cc:2102\n msgid \"octal escape sequence out of range\"\n msgstr \"\"\n \n-#: charset.cc:1564\n+#: charset.cc:2184\n msgid \"the meaning of '\\\\a' is different in traditional C\"\n msgstr \"\"\n \n-#: charset.cc:1571\n+#: charset.cc:2191\n #, c-format\n msgid \"non-ISO-standard escape sequence, '\\\\%c'\"\n msgstr \"\"\n \n-#: charset.cc:1579\n+#: charset.cc:2199\n #, c-format\n msgid \"unknown escape sequence: '\\\\%c'\"\n msgstr \"\"\n \n-#: charset.cc:1589\n+#: charset.cc:2209\n #, c-format\n msgid \"unknown escape sequence: '\\\\%s'\"\n msgstr \"\"\n \n-#: charset.cc:1597\n+#: charset.cc:2217\n msgid \"converting escape sequence to execution character set\"\n msgstr \"\"\n \n-#: charset.cc:1737\n+#: charset.cc:2357\n msgid \"missing open quote\"\n msgstr \"\"\n \n-#: charset.cc:1955\n-#: charset.cc:2034\n+#: charset.cc:2575\n+#: charset.cc:2658\n msgid \"character constant too long for its type\"\n msgstr \"\"\n \n-#: charset.cc:1958\n+#: charset.cc:2578\n msgid \"multi-character character constant\"\n msgstr \"\"\n \n-#: charset.cc:2074\n+#: charset.cc:2698\n msgid \"empty character constant\"\n msgstr \"\"\n \n-#: charset.cc:2230\n+#: charset.cc:2882\n #, c-format\n msgid \"failure to convert %s to %s\"\n msgstr \"\"\n@@ -184,279 +270,282 @@ msgstr \"\"\n msgid \"#%s is a GCC extension\"\n msgstr \"\"\n \n-#: directives.cc:392\n+#: directives.cc:394\n+#: directives.cc:2152\n+#: directives.cc:2191\n+#, c-format\n+msgid \"#%s before C++23 is a GCC extension\"\n+msgstr \"\"\n+\n+#: directives.cc:397\n+#: directives.cc:401\n+#: directives.cc:2156\n+#: directives.cc:2195\n+#, c-format\n+msgid \"#%s before C2X is a GCC extension\"\n+msgstr \"\"\n+\n+#: directives.cc:407\n #, c-format\n msgid \"#%s is a deprecated GCC extension\"\n msgstr \"\"\n \n-#: directives.cc:405\n+#: directives.cc:420\n msgid \"suggest not using #elif in traditional C\"\n msgstr \"\"\n \n-#: directives.cc:408\n+#: directives.cc:423\n #, c-format\n msgid \"traditional C ignores #%s with the # indented\"\n msgstr \"\"\n \n-#: directives.cc:412\n+#: directives.cc:427\n #, c-format\n msgid \"suggest hiding #%s from traditional C with an indented #\"\n msgstr \"\"\n \n-#: directives.cc:438\n+#: directives.cc:453\n msgid \"embedding a directive within macro arguments is not portable\"\n msgstr \"\"\n \n-#: directives.cc:466\n+#: directives.cc:481\n msgid \"style of line directive is a GCC extension\"\n msgstr \"\"\n \n-#: directives.cc:541\n+#: directives.cc:556\n #, c-format\n msgid \"invalid preprocessing directive #%s; did you mean #%s?\"\n msgstr \"\"\n \n-#: directives.cc:547\n+#: directives.cc:562\n #, c-format\n msgid \"invalid preprocessing directive #%s\"\n msgstr \"\"\n \n-#: directives.cc:617\n+#: directives.cc:632\n #, c-format\n msgid \"\\\"%s\\\" cannot be used as a macro name\"\n msgstr \"\"\n \n-#: directives.cc:624\n+#: directives.cc:639\n #, c-format\n msgid \"\\\"%s\\\" cannot be used as a macro name as it is an operator in C++\"\n msgstr \"\"\n \n-#: directives.cc:627\n+#: directives.cc:642\n #, c-format\n msgid \"no macro name given in #%s directive\"\n msgstr \"\"\n \n-#: directives.cc:630\n+#: directives.cc:645\n msgid \"macro names must be identifiers\"\n msgstr \"\"\n \n-#: directives.cc:679\n-#: directives.cc:684\n+#: directives.cc:694\n+#: directives.cc:699\n #, c-format\n msgid \"undefining \\\"%s\\\"\"\n msgstr \"\"\n \n-#: directives.cc:741\n+#: directives.cc:756\n msgid \"missing terminating > character\"\n msgstr \"\"\n \n-#: directives.cc:800\n+#: directives.cc:815\n #, c-format\n msgid \"#%s expects \\\"FILENAME\\\" or <FILENAME>\"\n msgstr \"\"\n \n-#: directives.cc:846\n+#: directives.cc:861\n #, c-format\n msgid \"empty filename in #%s\"\n msgstr \"\"\n \n-#: directives.cc:855\n+#: directives.cc:870\n #, c-format\n msgid \"\"\n \"#include nested depth %u exceeds maximum of %u (use -fmax-include-\"\n \"depth=DEPTH to increase the maximum)\"\n msgstr \"\"\n \n-#: directives.cc:900\n+#: directives.cc:915\n msgid \"#include_next in primary source file\"\n msgstr \"\"\n \n-#: directives.cc:926\n+#: directives.cc:941\n #, c-format\n msgid \"invalid flag \\\"%s\\\" in line directive\"\n msgstr \"\"\n \n-#: directives.cc:993\n+#: directives.cc:1008\n msgid \"unexpected end of file after #line\"\n msgstr \"\"\n \n-#: directives.cc:996\n+#: directives.cc:1011\n #, c-format\n msgid \"\\\"%s\\\" after #line is not a positive integer\"\n msgstr \"\"\n \n-#: directives.cc:1002\n-#: directives.cc:1004\n+#: directives.cc:1017\n+#: directives.cc:1019\n msgid \"line number out of range\"\n msgstr \"\"\n \n-#: directives.cc:1017\n-#: directives.cc:1098\n+#: directives.cc:1032\n+#: directives.cc:1113\n #, c-format\n msgid \"\\\"%s\\\" is not a valid filename\"\n msgstr \"\"\n \n-#: directives.cc:1058\n+#: directives.cc:1073\n #, c-format\n msgid \"\\\"%s\\\" after # is not a positive integer\"\n msgstr \"\"\n \n-#: directives.cc:1125\n+#: directives.cc:1140\n #, c-format\n msgid \"file \\\"%s\\\" linemarker ignored due to incorrect nesting\"\n msgstr \"\"\n \n-#: directives.cc:1203\n-#: directives.cc:1205\n-#: directives.cc:1207\n-#: directives.cc:1795\n+#: directives.cc:1218\n+#: directives.cc:1220\n+#: directives.cc:1222\n+#: directives.cc:1810\n #, c-format\n msgid \"%s\"\n msgstr \"\"\n \n-#: directives.cc:1231\n+#: directives.cc:1246\n #, c-format\n msgid \"invalid #%s directive\"\n msgstr \"\"\n \n-#: directives.cc:1294\n+#: directives.cc:1309\n #, c-format\n msgid \"registering pragmas in namespace \\\"%s\\\" with mismatched name expansion\"\n msgstr \"\"\n \n-#: directives.cc:1303\n+#: directives.cc:1318\n #, c-format\n msgid \"registering pragma \\\"%s\\\" with name expansion and no namespace\"\n msgstr \"\"\n \n-#: directives.cc:1321\n+#: directives.cc:1336\n #, c-format\n msgid \"registering \\\"%s\\\" as both a pragma and a pragma namespace\"\n msgstr \"\"\n \n-#: directives.cc:1324\n+#: directives.cc:1339\n #, c-format\n msgid \"#pragma %s %s is already registered\"\n msgstr \"\"\n \n-#: directives.cc:1327\n+#: directives.cc:1342\n #, c-format\n msgid \"#pragma %s is already registered\"\n msgstr \"\"\n \n-#: directives.cc:1357\n+#: directives.cc:1372\n msgid \"registering pragma with NULL handler\"\n msgstr \"\"\n \n-#: directives.cc:1574\n+#: directives.cc:1589\n msgid \"#pragma once in main file\"\n msgstr \"\"\n \n-#: directives.cc:1597\n+#: directives.cc:1612\n msgid \"invalid #pragma push_macro directive\"\n msgstr \"\"\n \n-#: directives.cc:1654\n+#: directives.cc:1669\n msgid \"invalid #pragma pop_macro directive\"\n msgstr \"\"\n \n-#: directives.cc:1709\n+#: directives.cc:1724\n msgid \"invalid #pragma GCC poison directive\"\n msgstr \"\"\n \n-#: directives.cc:1718\n+#: directives.cc:1733\n #, c-format\n msgid \"poisoning existing macro \\\"%s\\\"\"\n msgstr \"\"\n \n-#: directives.cc:1737\n+#: directives.cc:1752\n msgid \"#pragma system_header ignored outside include file\"\n msgstr \"\"\n \n-#: directives.cc:1762\n+#: directives.cc:1777\n #, c-format\n msgid \"cannot find source file %s\"\n msgstr \"\"\n \n-#: directives.cc:1766\n+#: directives.cc:1781\n #, c-format\n msgid \"current file is older than %s\"\n msgstr \"\"\n \n-#: directives.cc:1790\n+#: directives.cc:1805\n #, c-format\n msgid \"invalid \\\"#pragma GCC %s\\\" directive\"\n msgstr \"\"\n \n-#: directives.cc:1992\n+#: directives.cc:2008\n msgid \"_Pragma takes a parenthesized string literal\"\n msgstr \"\"\n \n-#: directives.cc:2075\n+#: directives.cc:2091\n msgid \"#else without #if\"\n msgstr \"\"\n \n-#: directives.cc:2080\n+#: directives.cc:2096\n msgid \"#else after #else\"\n msgstr \"\"\n \n-#: directives.cc:2082\n-#: directives.cc:2116\n+#: directives.cc:2098\n+#: directives.cc:2132\n msgid \"the conditional began here\"\n msgstr \"\"\n \n-#: directives.cc:2108\n+#: directives.cc:2124\n #, c-format\n msgid \"#%s without #if\"\n msgstr \"\"\n \n-#: directives.cc:2113\n+#: directives.cc:2129\n #, c-format\n msgid \"#%s after #else\"\n msgstr \"\"\n \n-#: directives.cc:2136\n-#: directives.cc:2175\n-#, c-format\n-msgid \"#%s before C++23 is a GCC extension\"\n-msgstr \"\"\n-\n-#: directives.cc:2140\n-#: directives.cc:2179\n-#, c-format\n-msgid \"#%s before C2X is a GCC extension\"\n-msgstr \"\"\n-\n-#: directives.cc:2215\n+#: directives.cc:2231\n msgid \"#endif without #if\"\n msgstr \"\"\n \n-#: directives.cc:2291\n+#: directives.cc:2307\n msgid \"missing '(' after predicate\"\n msgstr \"\"\n \n-#: directives.cc:2309\n+#: directives.cc:2325\n msgid \"missing ')' to complete answer\"\n msgstr \"\"\n \n-#: directives.cc:2321\n+#: directives.cc:2337\n msgid \"predicate's answer is empty\"\n msgstr \"\"\n \n-#: directives.cc:2351\n+#: directives.cc:2367\n msgid \"assertion without predicate\"\n msgstr \"\"\n \n-#: directives.cc:2354\n+#: directives.cc:2370\n msgid \"predicate must be an identifier\"\n msgstr \"\"\n \n-#: directives.cc:2436\n+#: directives.cc:2452\n #, c-format\n msgid \"\\\"%s\\\" re-asserted\"\n msgstr \"\"\n \n-#: directives.cc:2754\n+#: directives.cc:2770\n #, c-format\n msgid \"unterminated #%s\"\n msgstr \"\"\n@@ -471,180 +560,180 @@ msgstr \"\"\n msgid \"stdout\"\n msgstr \"\"\n \n-#: expr.cc:632\n-#: expr.cc:749\n+#: expr.cc:646\n+#: expr.cc:763\n msgid \"fixed-point constants are a GCC extension\"\n msgstr \"\"\n \n-#: expr.cc:657\n+#: expr.cc:671\n msgid \"invalid prefix \\\"0b\\\" for floating constant\"\n msgstr \"\"\n \n-#: expr.cc:670\n+#: expr.cc:684\n msgid \"use of C++17 hexadecimal floating constant\"\n msgstr \"\"\n \n-#: expr.cc:673\n+#: expr.cc:687\n msgid \"use of C99 hexadecimal floating constant\"\n msgstr \"\"\n \n-#: expr.cc:717\n+#: expr.cc:731\n #, c-format\n msgid \"invalid suffix \\\"%.*s\\\" on floating constant\"\n msgstr \"\"\n \n-#: expr.cc:728\n-#: expr.cc:795\n+#: expr.cc:742\n+#: expr.cc:809\n #, c-format\n msgid \"traditional C rejects the \\\"%.*s\\\" suffix\"\n msgstr \"\"\n \n-#: expr.cc:736\n+#: expr.cc:750\n msgid \"suffix for double constant is a GCC extension\"\n msgstr \"\"\n \n-#: expr.cc:742\n+#: expr.cc:756\n #, c-format\n msgid \"invalid suffix \\\"%.*s\\\" with hexadecimal floating constant\"\n msgstr \"\"\n \n-#: expr.cc:755\n-#: expr.cc:759\n+#: expr.cc:769\n+#: expr.cc:773\n msgid \"decimal float constants are a C2X feature\"\n msgstr \"\"\n \n-#: expr.cc:778\n+#: expr.cc:792\n #, c-format\n msgid \"invalid suffix \\\"%.*s\\\" on integer constant\"\n msgstr \"\"\n \n-#: expr.cc:803\n+#: expr.cc:817\n msgid \"use of C++11 long long integer constant\"\n msgstr \"\"\n \n-#: expr.cc:804\n+#: expr.cc:818\n msgid \"use of C99 long long integer constant\"\n msgstr \"\"\n \n-#: expr.cc:818\n+#: expr.cc:832\n msgid \"use of C++23 %<size_t%> integer constant\"\n msgstr \"\"\n \n-#: expr.cc:819\n+#: expr.cc:833\n msgid \"use of C++23 %<make_signed_t<size_t>%> integer constant\"\n msgstr \"\"\n \n-#: expr.cc:830\n+#: expr.cc:844\n msgid \"imaginary constants are a GCC extension\"\n msgstr \"\"\n \n-#: expr.cc:837\n+#: expr.cc:851\n msgid \"binary constants are a C++14 feature or GCC extension\"\n msgstr \"\"\n \n-#: expr.cc:839\n+#: expr.cc:853\n msgid \"binary constants are a C2X feature or GCC extension\"\n msgstr \"\"\n \n-#: expr.cc:844\n+#: expr.cc:858\n msgid \"binary constants are a C2X feature\"\n msgstr \"\"\n \n-#: expr.cc:940\n+#: expr.cc:954\n msgid \"integer constant is too large for its type\"\n msgstr \"\"\n \n-#: expr.cc:971\n+#: expr.cc:985\n msgid \"integer constant is so large that it is unsigned\"\n msgstr \"\"\n \n-#: expr.cc:1066\n+#: expr.cc:1080\n msgid \"missing ')' after \\\"defined\\\"\"\n msgstr \"\"\n \n-#: expr.cc:1073\n+#: expr.cc:1087\n msgid \"operator \\\"defined\\\" requires an identifier\"\n msgstr \"\"\n \n-#: expr.cc:1081\n+#: expr.cc:1095\n #, c-format\n msgid \"(\\\"%s\\\" is an alternative token for \\\"%s\\\" in C++)\"\n msgstr \"\"\n \n-#: expr.cc:1094\n+#: expr.cc:1108\n msgid \"this use of \\\"defined\\\" may not be portable\"\n msgstr \"\"\n \n-#: expr.cc:1139\n+#: expr.cc:1153\n msgid \"user-defined literal in preprocessor expression\"\n msgstr \"\"\n \n-#: expr.cc:1144\n+#: expr.cc:1158\n msgid \"floating constant in preprocessor expression\"\n msgstr \"\"\n \n-#: expr.cc:1150\n+#: expr.cc:1164\n msgid \"imaginary number in preprocessor expression\"\n msgstr \"\"\n \n-#: expr.cc:1199\n+#: expr.cc:1213\n #, c-format\n msgid \"\\\"%s\\\" is not defined, evaluates to 0\"\n msgstr \"\"\n \n-#: expr.cc:1212\n+#: expr.cc:1226\n msgid \"assertions are a GCC extension\"\n msgstr \"\"\n \n-#: expr.cc:1215\n+#: expr.cc:1229\n msgid \"assertions are a deprecated extension\"\n msgstr \"\"\n \n-#: expr.cc:1461\n+#: expr.cc:1479\n #, c-format\n msgid \"unbalanced stack in %s\"\n msgstr \"\"\n \n-#: expr.cc:1481\n+#: expr.cc:1499\n #, c-format\n msgid \"impossible operator '%u'\"\n msgstr \"\"\n \n-#: expr.cc:1582\n+#: expr.cc:1600\n msgid \"missing ')' in expression\"\n msgstr \"\"\n \n-#: expr.cc:1611\n+#: expr.cc:1629\n msgid \"'?' without following ':'\"\n msgstr \"\"\n \n-#: expr.cc:1621\n+#: expr.cc:1639\n msgid \"integer overflow in preprocessor expression\"\n msgstr \"\"\n \n-#: expr.cc:1626\n+#: expr.cc:1644\n msgid \"missing '(' in expression\"\n msgstr \"\"\n \n-#: expr.cc:1658\n+#: expr.cc:1676\n #, c-format\n msgid \"the left operand of \\\"%s\\\" changes sign when promoted\"\n msgstr \"\"\n \n-#: expr.cc:1663\n+#: expr.cc:1681\n #, c-format\n msgid \"the right operand of \\\"%s\\\" changes sign when promoted\"\n msgstr \"\"\n \n-#: expr.cc:1922\n+#: expr.cc:1940\n msgid \"traditional C rejects the unary plus operator\"\n msgstr \"\"\n \n-#: expr.cc:2020\n+#: expr.cc:2038\n msgid \"comma operator in operand of #if\"\n msgstr \"\"\n \n-#: expr.cc:2156\n+#: expr.cc:2174\n msgid \"division by zero in #if\"\n msgstr \"\"\n \n@@ -684,231 +773,259 @@ msgstr \"\"\n msgid \"Multiple include guards may be useful for:\\n\"\n msgstr \"\"\n \n-#: init.cc:618\n+#: init.cc:631\n msgid \"cppchar_t must be an unsigned type\"\n msgstr \"\"\n \n-#: init.cc:622\n+#: init.cc:635\n #, c-format\n msgid \"\"\n \"preprocessor arithmetic has maximum precision of %lu bits; target requires \"\n \"%lu bits\"\n msgstr \"\"\n \n-#: init.cc:629\n+#: init.cc:642\n msgid \"CPP arithmetic must be at least as precise as a target int\"\n msgstr \"\"\n \n-#: init.cc:632\n+#: init.cc:645\n msgid \"target char is less than 8 bits wide\"\n msgstr \"\"\n \n-#: init.cc:636\n+#: init.cc:649\n msgid \"target wchar_t is narrower than target char\"\n msgstr \"\"\n \n-#: init.cc:640\n+#: init.cc:653\n msgid \"target int is narrower than target char\"\n msgstr \"\"\n \n-#: init.cc:645\n+#: init.cc:658\n msgid \"CPP half-integer narrower than CPP character\"\n msgstr \"\"\n \n-#: init.cc:649\n+#: init.cc:662\n #, c-format\n msgid \"\"\n \"CPP on this host cannot handle wide character constants over %lu bits, but \"\n \"the target requires %lu bits\"\n msgstr \"\"\n \n-#: lex.cc:1126\n+#: lex.cc:1132\n msgid \"backslash and newline separated by space\"\n msgstr \"\"\n \n-#: lex.cc:1131\n+#: lex.cc:1137\n msgid \"backslash-newline at end of file\"\n msgstr \"\"\n \n-#: lex.cc:1147\n+#: lex.cc:1153\n #, c-format\n msgid \"trigraph ??%c converted to %c\"\n msgstr \"\"\n \n-#: lex.cc:1155\n+#: lex.cc:1161\n #, c-format\n msgid \"trigraph ??%c ignored, use -trigraphs to enable\"\n msgstr \"\"\n \n-#: lex.cc:1536\n+#: lex.cc:1610\n msgid \"end of bidirectional context\"\n msgstr \"\"\n \n-#: lex.cc:1577\n+#: lex.cc:1651\n msgid \"unpaired UTF-8 bidirectional control characters detected\"\n msgstr \"\"\n \n-#: lex.cc:1581\n+#: lex.cc:1655\n msgid \"unpaired UTF-8 bidirectional control character detected\"\n msgstr \"\"\n \n-#: lex.cc:1619\n+#: lex.cc:1693\n #, c-format\n msgid \"UTF-8 vs UCN mismatch when closing a context by \\\"%s\\\"\"\n msgstr \"\"\n \n-#: lex.cc:1628\n+#: lex.cc:1702\n #, c-format\n msgid \"\\\"%s\\\" is closing an unopened context\"\n msgstr \"\"\n \n-#: lex.cc:1632\n+#: lex.cc:1706\n #, c-format\n msgid \"found problematic Unicode character \\\"%s\\\"\"\n msgstr \"\"\n \n-#: lex.cc:1682\n+#: lex.cc:1736\n+#: lex.cc:1742\n+#, c-format\n+msgid \"invalid UTF-8 character <%x>\"\n+msgstr \"\"\n+\n+#: lex.cc:1752\n+#: lex.cc:1758\n+#, c-format\n+msgid \"invalid UTF-8 character <%x><%x>\"\n+msgstr \"\"\n+\n+#: lex.cc:1768\n+#: lex.cc:1774\n+#, c-format\n+msgid \"invalid UTF-8 character <%x><%x><%x>\"\n+msgstr \"\"\n+\n+#: lex.cc:1784\n+#: lex.cc:1790\n+#, c-format\n+msgid \"invalid UTF-8 character <%x><%x><%x><%x>\"\n+msgstr \"\"\n+\n+#: lex.cc:1872\n msgid \"\\\"/*\\\" within comment\"\n msgstr \"\"\n \n-#: lex.cc:1772\n+#: lex.cc:1976\n #, c-format\n msgid \"%s in preprocessing directive\"\n msgstr \"\"\n \n-#: lex.cc:1784\n+#: lex.cc:1988\n msgid \"null character(s) ignored\"\n msgstr \"\"\n \n-#: lex.cc:1844\n+#: lex.cc:2049\n #, c-format\n msgid \"`%.*s' is not in NFKC\"\n msgstr \"\"\n \n-#: lex.cc:1847\n-#: lex.cc:1850\n+#: lex.cc:2052\n+#: lex.cc:2055\n #, c-format\n msgid \"`%.*s' is not in NFC\"\n msgstr \"\"\n \n-#: lex.cc:1932\n+#: lex.cc:2141\n msgid \"__VA_OPT__ is not available until C++20\"\n msgstr \"\"\n \n-#: lex.cc:1939\n+#: lex.cc:2144\n+msgid \"__VA_OPT__ is not available until C2X\"\n+msgstr \"\"\n+\n+#: lex.cc:2152\n msgid \"__VA_OPT__ can only appear in the expansion of a C++20 variadic macro\"\n msgstr \"\"\n \n-#: lex.cc:1970\n-#: lex.cc:2066\n+#: lex.cc:2183\n+#: lex.cc:2279\n #, c-format\n msgid \"attempt to use poisoned \\\"%s\\\"\"\n msgstr \"\"\n \n-#: lex.cc:1980\n-#: lex.cc:2076\n+#: lex.cc:2193\n+#: lex.cc:2289\n msgid \"__VA_ARGS__ can only appear in the expansion of a C++11 variadic macro\"\n msgstr \"\"\n \n-#: lex.cc:1984\n-#: lex.cc:2080\n+#: lex.cc:2197\n+#: lex.cc:2293\n msgid \"__VA_ARGS__ can only appear in the expansion of a C99 variadic macro\"\n msgstr \"\"\n \n-#: lex.cc:1994\n-#: lex.cc:2092\n+#: lex.cc:2207\n+#: lex.cc:2305\n #, c-format\n msgid \"identifier \\\"%s\\\" is a special operator name in C++\"\n msgstr \"\"\n \n-#: lex.cc:2132\n+#: lex.cc:2345\n msgid \"adjacent digit separators\"\n msgstr \"\"\n \n-#: lex.cc:2450\n+#: lex.cc:2665\n msgid \"raw string delimiter longer than 16 characters\"\n msgstr \"\"\n \n-#: lex.cc:2454\n+#: lex.cc:2669\n msgid \"invalid new-line in raw string delimiter\"\n msgstr \"\"\n \n-#: lex.cc:2458\n-#: lex.cc:5257\n+#: lex.cc:2673\n+#: lex.cc:5519\n #, c-format\n msgid \"invalid character '%c' in raw string delimiter\"\n msgstr \"\"\n \n-#: lex.cc:2497\n-#: lex.cc:2520\n+#: lex.cc:2711\n+#: lex.cc:2734\n msgid \"unterminated raw string\"\n msgstr \"\"\n \n-#: lex.cc:2552\n-#: lex.cc:2701\n+#: lex.cc:2770\n+#: lex.cc:2922\n msgid \"\"\n \"invalid suffix on literal; C++11 requires a space between literal and string \"\n \"macro\"\n msgstr \"\"\n \n-#: lex.cc:2684\n+#: lex.cc:2905\n msgid \"null character(s) preserved in literal\"\n msgstr \"\"\n \n-#: lex.cc:2687\n+#: lex.cc:2908\n #, c-format\n msgid \"missing terminating %c character\"\n msgstr \"\"\n \n-#: lex.cc:2719\n+#: lex.cc:2940\n msgid \"C++11 requires a space between string literal and macro\"\n msgstr \"\"\n \n-#: lex.cc:3312\n+#: lex.cc:3533\n msgid \"module control-line cannot be in included file\"\n msgstr \"\"\n \n-#: lex.cc:3326\n+#: lex.cc:3547\n #, c-format\n msgid \"module control-line \\\"%s\\\" cannot be an object-like macro\"\n msgstr \"\"\n \n-#: lex.cc:3714\n-#: lex.cc:5090\n+#: lex.cc:3949\n+#: lex.cc:5352\n #: traditional.cc:174\n msgid \"unterminated comment\"\n msgstr \"\"\n \n-#: lex.cc:3728\n-#: lex.cc:3762\n+#: lex.cc:3963\n+#: lex.cc:3997\n msgid \"C++ style comments are not allowed in ISO C90\"\n msgstr \"\"\n \n-#: lex.cc:3730\n-#: lex.cc:3741\n-#: lex.cc:3765\n+#: lex.cc:3965\n+#: lex.cc:3976\n+#: lex.cc:4000\n msgid \"(this will be reported only once per input file)\"\n msgstr \"\"\n \n-#: lex.cc:3739\n+#: lex.cc:3974\n msgid \"C++ style comments are incompatible with C90\"\n msgstr \"\"\n \n-#: lex.cc:3771\n+#: lex.cc:4006\n msgid \"multi-line comment\"\n msgstr \"\"\n \n-#: lex.cc:4165\n+#: lex.cc:4427\n #, c-format\n msgid \"unspellable token %s\"\n msgstr \"\"\n \n-#: lex.cc:5245\n+#: lex.cc:5507\n #, c-format\n msgid \"raw string delimiter longer than %d characters\"\n msgstr \"\"\n \n-#: lex.cc:5315\n+#: lex.cc:5577\n msgid \"unterminated literal\"\n msgstr \"\"\n "}]}