{"sha": "7f5ddfcb3cb9e5d89d08e08d2a3aaed948aaf1af", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2Y1ZGRmY2IzY2I5ZTVkODlkMDhlMDhkMmEzYWFlZDk0OGFhZjFhZg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2019-07-16T11:37:05Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2019-07-16T11:37:05Z"}, "message": "re PR rtl-optimization/91164 (ICE in verify_dominators, at dominance.c:1184 (error: dominator of 114 should be 112, not 16))\n\n\tPR rtl-optimization/91164\n\t* dse.c (rest_of_handle_dse): If dead edges have been purged,\n\tinvalidate dominance info.\n\n\t* g++.dg/opt/pr91164.C: New test.\n\nFrom-SVN: r273522", "tree": {"sha": "6a05505129d512cd2a580e44b5462b7ea8038bb0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6a05505129d512cd2a580e44b5462b7ea8038bb0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7f5ddfcb3cb9e5d89d08e08d2a3aaed948aaf1af", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f5ddfcb3cb9e5d89d08e08d2a3aaed948aaf1af", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7f5ddfcb3cb9e5d89d08e08d2a3aaed948aaf1af", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f5ddfcb3cb9e5d89d08e08d2a3aaed948aaf1af/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f6bbf1ca1d4f8f81b5fd439a36318079f7fa73a8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6bbf1ca1d4f8f81b5fd439a36318079f7fa73a8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f6bbf1ca1d4f8f81b5fd439a36318079f7fa73a8"}], "stats": {"total": 105, "additions": 104, "deletions": 1}, "files": [{"sha": "1eb2797d85fe883f231d9fc3fc9a87aab522ed50", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f5ddfcb3cb9e5d89d08e08d2a3aaed948aaf1af/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f5ddfcb3cb9e5d89d08e08d2a3aaed948aaf1af/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7f5ddfcb3cb9e5d89d08e08d2a3aaed948aaf1af", "patch": "@@ -1,3 +1,9 @@\n+2019-07-16  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR rtl-optimization/91164\n+\t* dse.c (rest_of_handle_dse): If dead edges have been purged,\n+\tinvalidate dominance info.\n+\n 2019-07-16  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* read-md.h (md_reader::record_potential_iterator_use): Add a"}, {"sha": "8d7358d02b454d8b49d1f0cebb59ee7772463347", "filename": "gcc/dse.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f5ddfcb3cb9e5d89d08e08d2a3aaed948aaf1af/gcc%2Fdse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f5ddfcb3cb9e5d89d08e08d2a3aaed948aaf1af/gcc%2Fdse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdse.c?ref=7f5ddfcb3cb9e5d89d08e08d2a3aaed948aaf1af", "patch": "@@ -3621,7 +3621,10 @@ rest_of_handle_dse (void)\n   if ((locally_deleted || globally_deleted)\n       && cfun->can_throw_non_call_exceptions\n       && purge_all_dead_edges ())\n-    cleanup_cfg (0);\n+    {\n+      free_dominance_info (CDI_DOMINATORS);\n+      cleanup_cfg (0);\n+    }\n \n   return 0;\n }"}, {"sha": "1f04ebb34a992ae14e4685626b86a5b9a8bfda6f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f5ddfcb3cb9e5d89d08e08d2a3aaed948aaf1af/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f5ddfcb3cb9e5d89d08e08d2a3aaed948aaf1af/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7f5ddfcb3cb9e5d89d08e08d2a3aaed948aaf1af", "patch": "@@ -1,3 +1,8 @@\n+2019-07-16  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR rtl-optimization/91164\n+\t* g++.dg/opt/pr91164.C: New test.\n+\n 2019-07-16  Jan Hubicka  <jh@suse.cz>\n \n \t* g++.dg/lto/alias-1_0.C: Use -O3."}, {"sha": "8cf4fd0b421f865c5e5271f8afafd4b427ca9da1", "filename": "gcc/testsuite/g++.dg/opt/pr91164.C", "status": "added", "additions": 89, "deletions": 0, "changes": 89, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f5ddfcb3cb9e5d89d08e08d2a3aaed948aaf1af/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr91164.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f5ddfcb3cb9e5d89d08e08d2a3aaed948aaf1af/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr91164.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr91164.C?ref=7f5ddfcb3cb9e5d89d08e08d2a3aaed948aaf1af", "patch": "@@ -0,0 +1,89 @@\n+// PR rtl-optimization/91164\n+// { dg-do compile { target c++11 } }\n+// { dg-options \"-O2 -fdelete-dead-exceptions -fnon-call-exceptions -fno-rerun-cse-after-loop -fno-tree-forwprop\" }\n+\n+template <typename, typename = int> class b;\n+template <int v> struct d { static constexpr int e = v; };\n+template <bool, typename f> using g = f;\n+struct h { template <typename i> using j = i; };\n+template <typename, typename f> using k = h::j<f>;\n+void *operator new(__SIZE_TYPE__, void *);\n+struct l { l(); };\n+struct m;\n+template <typename n> n aa(m);\n+struct o { template <typename> using ab = l; };\n+template <typename, typename> struct b {\n+  struct q : o::ab<int> { q(int, l = l()) : p() {} int p; } ac;\n+  void ad();\n+  b() : ac(0) {}\n+  ~b() { bool r = ac.p == 0; if (r) ad(); }\n+  const wchar_t *ae();\n+};\n+struct m {};\n+struct t { virtual void f(); };\n+struct u { l a; };\n+struct af : t {\n+  struct ag { ag(l); };\n+  af(l ah) : ai(ah) {}\n+  ag ai;\n+};\n+struct w {\n+  template <typename f, typename x> w(f, x y) { new (0) af(y.a); }\n+};\n+struct z {\n+  using aj = int;\n+  template <typename x> z(x ah) : ak(al, ah) {}\n+  aj al;\n+  w ak;\n+};\n+struct am : z { template <typename x> am(x ah) : z(ah) {} };\n+template <typename, typename x> am an(x) { return u{}; }\n+template <typename> am ao() { return an<int>(l()); }\n+struct ap {\n+  k<int, int> aq;\n+  k<int, int> ar;\n+  k<int, int> as;\n+};\n+struct at { ap a; long au; ap av; ap aw; };\n+struct ax { at c; ax() : c() {} };\n+enum ay : int;\n+ay az, ba;\n+struct bb { bb(wchar_t *, wchar_t *, ay, m); };\n+template <typename bc> struct bd {\n+  typedef typename bc::be *bf;\n+  bd(bf, bf, const typename bc::bg &, ay);\n+  ay bh;\n+  bb bi;\n+  am bj;\n+  typename bc::bk e;\n+  ax bl;\n+  int bm;\n+};\n+template <typename, typename> using bn = g<d<false>::e, am>;\n+template <typename bc>\n+bd<bc>::bd(bf ah, bf y, const typename bc::bg &bu, ay)\n+    : bi(ah, y, bh, bu), bj(ao<bc>()), bm(aa<int>(bu)) {}\n+struct bt { typedef wchar_t be; typedef b<be> bk; typedef m bg; };\n+template <typename bc, typename bo> bn<bo, bc> bar();\n+template <typename bc, typename bo> bn<bo, bc> bq(bo) {\n+  typename bc::bg bp;\n+  auto bs = nullptr;\n+  using br = bd<bc>;\n+  br(bs, bs, bp, ba);\n+  return bar<bc, bo>();\n+}\n+struct bw {\n+  bw();\n+  template <typename bv, typename x> void assign(b<bv, x> ah) {\n+    const wchar_t by = *ah.ae();\n+    bw(&by, ah.ae(), bp, az);\n+  }\n+  template <typename bo> bw(bo, bo y, m, ay) : automaton(bq<bt>(y)) {}\n+  m bp;\n+  am automaton;\n+};\n+void bx() {\n+  b<wchar_t> s;\n+  bw ca;\n+  ca.assign(s);\n+}"}]}