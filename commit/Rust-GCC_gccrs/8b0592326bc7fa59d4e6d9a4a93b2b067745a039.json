{"sha": "8b0592326bc7fa59d4e6d9a4a93b2b067745a039", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGIwNTkyMzI2YmM3ZmE1OWQ0ZTZkOWE0YTkzYjJiMDY3NzQ1YTAzOQ==", "commit": {"author": {"name": "Sebastian Pop", "email": "sebastian.pop@amd.com", "date": "2010-08-11T20:27:27Z"}, "committer": {"name": "Sebastian Pop", "email": "spop@gcc.gnu.org", "date": "2010-08-11T20:27:27Z"}, "message": "chrec_apply should only apply to the specified variable.\n\n2010-07-15  Sebastian Pop  <sebastian.pop@amd.com>\n\n\t* tree-chrec.c (chrec_apply): Should only apply to the specified\n\tvariable.  Also handle multivariate chains of recurrences that\n\tsatisfy evolution_function_is_affine_p.  Also handle CASE_CONVERT.\n\nFrom-SVN: r163140", "tree": {"sha": "7f700e5bb8641840e4fb50dafc92ef69091832cf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7f700e5bb8641840e4fb50dafc92ef69091832cf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8b0592326bc7fa59d4e6d9a4a93b2b067745a039", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b0592326bc7fa59d4e6d9a4a93b2b067745a039", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8b0592326bc7fa59d4e6d9a4a93b2b067745a039", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b0592326bc7fa59d4e6d9a4a93b2b067745a039/comments", "author": null, "committer": {"login": "sebpop", "id": 568397, "node_id": "MDQ6VXNlcjU2ODM5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/568397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebpop", "html_url": "https://github.com/sebpop", "followers_url": "https://api.github.com/users/sebpop/followers", "following_url": "https://api.github.com/users/sebpop/following{/other_user}", "gists_url": "https://api.github.com/users/sebpop/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebpop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebpop/subscriptions", "organizations_url": "https://api.github.com/users/sebpop/orgs", "repos_url": "https://api.github.com/users/sebpop/repos", "events_url": "https://api.github.com/users/sebpop/events{/privacy}", "received_events_url": "https://api.github.com/users/sebpop/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2e286fd2f92630c896c5a9c8c8ca38a01039276b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e286fd2f92630c896c5a9c8c8ca38a01039276b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2e286fd2f92630c896c5a9c8c8ca38a01039276b"}], "stats": {"total": 57, "additions": 43, "deletions": 14}, "files": [{"sha": "3a903947706f866c6169c486f91e791e1d7862b6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b0592326bc7fa59d4e6d9a4a93b2b067745a039/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b0592326bc7fa59d4e6d9a4a93b2b067745a039/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8b0592326bc7fa59d4e6d9a4a93b2b067745a039", "patch": "@@ -1,3 +1,9 @@\n+2010-08-02  Sebastian Pop  <sebastian.pop@amd.com>\n+\n+\t* tree-chrec.c (chrec_apply): Should only apply to the specified\n+\tvariable.  Also handle multivariate chains of recurrences that\n+\tsatisfy evolution_function_is_affine_p.  Also handle CASE_CONVERT.\n+\n 2010-08-02  Sebastian Pop  <sebastian.pop@amd.com>\n \n \t* graphite-clast-to-gimple.c (debug_clast_name_index): Removed."}, {"sha": "c46bd703214ee9586ac507138eb826eaae3c5259", "filename": "gcc/ChangeLog.graphite", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b0592326bc7fa59d4e6d9a4a93b2b067745a039/gcc%2FChangeLog.graphite", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b0592326bc7fa59d4e6d9a4a93b2b067745a039/gcc%2FChangeLog.graphite", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog.graphite?ref=8b0592326bc7fa59d4e6d9a4a93b2b067745a039", "patch": "@@ -1,3 +1,9 @@\n+2010-07-15  Sebastian Pop  <sebastian.pop@amd.com>\n+\n+\t* tree-chrec.c (chrec_apply): Should only apply to the specified\n+\tvariable.  Also handle multivariate chains of recurrences that\n+\tsatisfy evolution_function_is_affine_p.  Also handle CASE_CONVERT.\n+\n 2010-07-15  Sebastian Pop  <sebastian.pop@amd.com>\n \n \t* graphite-clast-to-gimple.c (debug_clast_name_index): Removed."}, {"sha": "92f8de9f0eb618612e56a5d802f9867cf70050ac", "filename": "gcc/tree-chrec.c", "status": "modified", "additions": 31, "deletions": 14, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b0592326bc7fa59d4e6d9a4a93b2b067745a039/gcc%2Ftree-chrec.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b0592326bc7fa59d4e6d9a4a93b2b067745a039/gcc%2Ftree-chrec.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-chrec.c?ref=8b0592326bc7fa59d4e6d9a4a93b2b067745a039", "patch": "@@ -599,23 +599,40 @@ chrec_apply (unsigned var,\n   if (TREE_CODE (x) == INTEGER_CST && SCALAR_FLOAT_TYPE_P (type))\n     x = build_real_from_int_cst (type, x);\n \n-  if (evolution_function_is_affine_p (chrec))\n+  switch (TREE_CODE (chrec))\n     {\n-      /* \"{a, +, b} (x)\"  ->  \"a + b*x\".  */\n-      x = chrec_convert_rhs (type, x, NULL);\n-      res = chrec_fold_multiply (TREE_TYPE (x), CHREC_RIGHT (chrec), x);\n-      res = chrec_fold_plus (type, CHREC_LEFT (chrec), res);\n-    }\n+    case POLYNOMIAL_CHREC:\n+      if (evolution_function_is_affine_p (chrec))\n+\t{\n+\t  if (CHREC_VARIABLE (chrec) != var)\n+\t    return build_polynomial_chrec\n+\t      (CHREC_VARIABLE (chrec),\n+\t       chrec_apply (var, CHREC_LEFT (chrec), x),\n+\t       chrec_apply (var, CHREC_RIGHT (chrec), x));\n+\n+\t  /* \"{a, +, b} (x)\"  ->  \"a + b*x\".  */\n+\t  x = chrec_convert_rhs (type, x, NULL);\n+\t  res = chrec_fold_multiply (TREE_TYPE (x), CHREC_RIGHT (chrec), x);\n+\t  res = chrec_fold_plus (type, CHREC_LEFT (chrec), res);\n+\t}\n+      else if (TREE_CODE (x) == INTEGER_CST\n+\t       && tree_int_cst_sgn (x) == 1)\n+\t/* testsuite/.../ssa-chrec-38.c.  */\n+\tres = chrec_evaluate (var, chrec, x, 0);\n+      else\n+\tres = chrec_dont_know;\n+      break;\n \n-  else if (TREE_CODE (chrec) != POLYNOMIAL_CHREC)\n-    res = chrec;\n+    CASE_CONVERT:\n+      res = chrec_convert (TREE_TYPE (chrec),\n+\t\t\t   chrec_apply (var, TREE_OPERAND (chrec, 0), x),\n+\t\t\t   NULL);\n+      break;\n \n-  else if (TREE_CODE (x) == INTEGER_CST\n-\t   && tree_int_cst_sgn (x) == 1)\n-    /* testsuite/.../ssa-chrec-38.c.  */\n-    res = chrec_evaluate (var, chrec, x, 0);\n-  else\n-    res = chrec_dont_know;\n+    default:\n+      res = chrec;\n+      break;\n+    }\n \n   if (dump_file && (dump_flags & TDF_DETAILS))\n     {"}]}