{"sha": "c29f393f8326d3e4ec0a7841e8f3c45137f62795", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzI5ZjM5M2Y4MzI2ZDNlNGVjMGE3ODQxZThmM2M0NTEzN2Y2Mjc5NQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2014-05-13T21:10:03Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2014-05-13T21:10:03Z"}, "message": "call.c (print_error_for_call_failure): Say \"no match\" rather than \"ambiguous\" if there were no strict matches.\n\n\t* call.c (print_error_for_call_failure): Say \"no match\" rather\n\tthan \"ambiguous\" if there were no strict matches.\n\t(build_new_method_call_1): Likewise.\n\nFrom-SVN: r210402", "tree": {"sha": "d616f4cbd879ba88abedb9a0ac923c1b479c2946", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d616f4cbd879ba88abedb9a0ac923c1b479c2946"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c29f393f8326d3e4ec0a7841e8f3c45137f62795", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c29f393f8326d3e4ec0a7841e8f3c45137f62795", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c29f393f8326d3e4ec0a7841e8f3c45137f62795", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c29f393f8326d3e4ec0a7841e8f3c45137f62795/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bd5c3baaa9066243a3eb2e584534277878657b20", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd5c3baaa9066243a3eb2e584534277878657b20", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bd5c3baaa9066243a3eb2e584534277878657b20"}], "stats": {"total": 26, "additions": 17, "deletions": 9}, "files": [{"sha": "70a167faad29c8631b126a2f052a5657a2d2c832", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c29f393f8326d3e4ec0a7841e8f3c45137f62795/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c29f393f8326d3e4ec0a7841e8f3c45137f62795/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=c29f393f8326d3e4ec0a7841e8f3c45137f62795", "patch": "@@ -1,5 +1,9 @@\n 2014-05-13  Jason Merrill  <jason@redhat.com>\n \n+\t* call.c (print_error_for_call_failure): Say \"no match\" rather\n+\tthan \"ambiguous\" if there were no strict matches.\n+\t(build_new_method_call_1): Likewise.\n+\n \tPR c++/61151\n \t* semantics.c (is_this_parameter): Allow capture proxies too.\n "}, {"sha": "d8a7dcd776a0114f6ad4ea85cc86d3cab4df337d", "filename": "gcc/cp/call.c", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c29f393f8326d3e4ec0a7841e8f3c45137f62795/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c29f393f8326d3e4ec0a7841e8f3c45137f62795/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=c29f393f8326d3e4ec0a7841e8f3c45137f62795", "patch": "@@ -3914,13 +3914,13 @@ perform_overload_resolution (tree fn,\n    functions.  */\n \n static void\n-print_error_for_call_failure (tree fn, vec<tree, va_gc> *args, bool any_viable_p,\n+print_error_for_call_failure (tree fn, vec<tree, va_gc> *args,\n \t\t\t      struct z_candidate *candidates)\n {\n   tree name = DECL_NAME (OVL_CURRENT (fn));\n   location_t loc = location_of (name);\n \n-  if (!any_viable_p)\n+  if (!any_strictly_viable (candidates))\n     error_at (loc, \"no matching function for call to %<%D(%A)%>\",\n \t      name, build_tree_list_vec (args));\n   else\n@@ -3964,7 +3964,7 @@ build_new_function_call (tree fn, vec<tree, va_gc> **args, bool koenig_p,\n       if (!fn)\n \t{\n \t  if (complain & tf_error)\n-\t    print_error_for_call_failure (orig_fn, *args, false, NULL);\n+\t    print_error_for_call_failure (orig_fn, *args, NULL);\n \t  return error_mark_node;\n \t}\n     }\n@@ -3984,7 +3984,7 @@ build_new_function_call (tree fn, vec<tree, va_gc> **args, bool koenig_p,\n \t    return cp_build_function_call_vec (candidates->fn, args, complain);\n \t  if (TREE_CODE (fn) == TEMPLATE_ID_EXPR)\n \t    fn = TREE_OPERAND (fn, 0);\n-\t  print_error_for_call_failure (fn, *args, any_viable_p, candidates);\n+\t  print_error_for_call_failure (fn, *args, candidates);\n \t}\n       result = error_mark_node;\n     }\n@@ -4066,7 +4066,7 @@ build_operator_new_call (tree fnname, vec<tree, va_gc> **args,\n   if (!cand)\n     {\n       if (complain & tf_error)\n-\tprint_error_for_call_failure (fns, *args, any_viable_p, candidates);\n+\tprint_error_for_call_failure (fns, *args, candidates);\n       return error_mark_node;\n     }\n \n@@ -7898,8 +7898,12 @@ build_new_method_call_1 (tree instance, tree fns, vec<tree, va_gc> **args,\n \t      arglist = build_tree_list_vec (user_args);\n \t      if (skip_first_for_error)\n \t\targlist = TREE_CHAIN (arglist);\n-\t      error (\"call of overloaded %<%s(%A)%> is ambiguous\", pretty_name,\n-\t\t     arglist);\n+\t      if (!any_strictly_viable (candidates))\n+\t\terror (\"no matching function for call to %<%s(%A)%>\",\n+\t\t       pretty_name, arglist);\n+\t      else\n+\t\terror (\"call of overloaded %<%s(%A)%> is ambiguous\",\n+\t\t       pretty_name, arglist);\n \t      print_z_candidates (location_of (name), candidates);\n \t      if (free_p)\n \t\tfree (pretty_name);"}, {"sha": "5444c782f1a3e25ce19d120dbbd8e1703e5887c4", "filename": "gcc/testsuite/g++.dg/cpp0x/rv2n.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c29f393f8326d3e4ec0a7841e8f3c45137f62795/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv2n.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c29f393f8326d3e4ec0a7841e8f3c45137f62795/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv2n.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv2n.C?ref=c29f393f8326d3e4ec0a7841e8f3c45137f62795", "patch": "@@ -492,7 +492,7 @@ int test2_67()\n     const          A ca = a; // { dg-error \"deleted\" }\n           volatile A va;\n     const volatile A cva = a; // { dg-error \"deleted\" }\n-    sink_2_67(a);            // { dg-error \"ambiguous\" }\n+    sink_2_67(a);            // { dg-error \"no match\" }\n     // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 495 }\n     sink_2_67(ca);\t     // { dg-error \"lvalue\" }\n     sink_2_67(va);\t     // { dg-error \"lvalue\" }"}, {"sha": "3a729cb21652950cf80f78a010f89af1a1cb5e59", "filename": "gcc/testsuite/g++.dg/cpp0x/rv3n.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c29f393f8326d3e4ec0a7841e8f3c45137f62795/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv3n.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c29f393f8326d3e4ec0a7841e8f3c45137f62795/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv3n.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv3n.C?ref=c29f393f8326d3e4ec0a7841e8f3c45137f62795", "patch": "@@ -930,7 +930,7 @@ int test3_678()\n     const          A ca = a; // { dg-error \"deleted\" }\n           volatile A va;\n     const volatile A cva = a; // { dg-error \"deleted\" }\n-    sink_3_678(a);          // { dg-error \"ambiguous\" }\n+    sink_3_678(a);          // { dg-error \"no match\" }\n     // { dg-message \"candidate\" \"candidate note\" { target *-*-* } 933 }\n     sink_3_678(ca);\t    // { dg-error \"lvalue\" }\n     sink_3_678(va);\t    // { dg-error \"lvalue\" }"}]}