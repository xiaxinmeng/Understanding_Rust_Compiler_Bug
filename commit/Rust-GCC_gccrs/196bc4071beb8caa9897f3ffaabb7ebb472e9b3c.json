{"sha": "196bc4071beb8caa9897f3ffaabb7ebb472e9b3c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTk2YmM0MDcxYmViOGNhYTk4OTdmM2ZmYWFiYjdlYmI0NzJlOWIzYw==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2011-02-19T03:37:30Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2011-02-19T03:37:30Z"}, "message": "Avoid dangling open function after erroneous method expression.\n\nFrom-SVN: r170302", "tree": {"sha": "d99c774d0497e80cfc6c1afb71298197b7eb7eb0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d99c774d0497e80cfc6c1afb71298197b7eb7eb0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/196bc4071beb8caa9897f3ffaabb7ebb472e9b3c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/196bc4071beb8caa9897f3ffaabb7ebb472e9b3c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/196bc4071beb8caa9897f3ffaabb7ebb472e9b3c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/196bc4071beb8caa9897f3ffaabb7ebb472e9b3c/comments", "author": null, "committer": null, "parents": [{"sha": "1e2afadbc0827357daf6d6b7322a9250aad3f4ab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e2afadbc0827357daf6d6b7322a9250aad3f4ab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1e2afadbc0827357daf6d6b7322a9250aad3f4ab"}], "stats": {"total": 5, "additions": 4, "deletions": 1}, "files": [{"sha": "c17cc9efc002dae974eca3c01ca893da7586c4d5", "filename": "gcc/go/gofrontend/expressions.cc", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/196bc4071beb8caa9897f3ffaabb7ebb472e9b3c/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/196bc4071beb8caa9897f3ffaabb7ebb472e9b3c/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc?ref=196bc4071beb8caa9897f3ffaabb7ebb472e9b3c", "patch": "@@ -10335,7 +10335,10 @@ Selector_expression::lower_method_expression(Gogo* gogo)\n   // Even though we found the method above, if it has an error type we\n   // may see an error here.\n   if (bm->is_error_expression())\n-    return bm;\n+    {\n+      gogo->finish_function(location);\n+      return bm;\n+    }\n \n   Expression_list* args;\n   if (method_parameters == NULL)"}]}