{"sha": "ff71e554beee40f627444101b9567b1868c24650", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmY3MWU1NTRiZWVlNDBmNjI3NDQ0MTAxYjk1NjdiMTg2OGMyNDY1MA==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2012-03-13T16:21:23Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2012-03-13T16:21:23Z"}, "message": "i386.c (ix86_decompose_address): Handle subregs of AND zero extended address correctly.\n\n\t* config/i386/i386.c (ix86_decompose_address): Handle subregs of\n\tAND zero extended address correctly.\n\nFrom-SVN: r185343", "tree": {"sha": "1dbc70f3e873d3956808761b223e10da039d1d8f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1dbc70f3e873d3956808761b223e10da039d1d8f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ff71e554beee40f627444101b9567b1868c24650", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff71e554beee40f627444101b9567b1868c24650", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ff71e554beee40f627444101b9567b1868c24650", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff71e554beee40f627444101b9567b1868c24650/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "62a1c0416faf365a7d1fc9c31e009d784ef832f2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62a1c0416faf365a7d1fc9c31e009d784ef832f2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62a1c0416faf365a7d1fc9c31e009d784ef832f2"}], "stats": {"total": 15, "additions": 12, "deletions": 3}, "files": [{"sha": "9280a31f311dfc812932e76fba8241b47dbe8768", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff71e554beee40f627444101b9567b1868c24650/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff71e554beee40f627444101b9567b1868c24650/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ff71e554beee40f627444101b9567b1868c24650", "patch": "@@ -1,3 +1,8 @@\n+2012-03-13  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/i386.c (ix86_decompose_address): Handle subregs of\n+\tAND zero extended address correctly.\n+\n 2012-03-13  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/i386/predicates.md (tls_symbolic_operand): Declare as"}, {"sha": "24f51fb20cb87894069fc8ed2495bc9d84b4fb61", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff71e554beee40f627444101b9567b1868c24650/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff71e554beee40f627444101b9567b1868c24650/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=ff71e554beee40f627444101b9567b1868c24650", "patch": "@@ -11435,10 +11435,14 @@ ix86_decompose_address (rtx addr, struct ix86_address *out)\n \t{\n \t  addr = XEXP (addr, 0);\n \n-\t  /* Strip subreg.  */\n-\t  if (GET_CODE (addr) == SUBREG\n-\t      && GET_MODE (SUBREG_REG (addr)) == SImode)\n+\t  /* Adjust SUBREGs.  */\n+\t  if (GET_MODE (addr) == DImode)\n+\t    addr = gen_rtx_SUBREG (SImode, addr, 0);\n+\t  else if (GET_CODE (addr) == SUBREG\n+\t\t   && GET_MODE (SUBREG_REG (addr)) == SImode)\n \t    addr = SUBREG_REG (addr);\n+\t  else\n+\t    return 0;\n \t}\n     }\n "}]}