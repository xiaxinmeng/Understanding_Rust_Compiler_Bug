{"sha": "e5ce4cbc72adbfc8284ed6998b7d36c9f50c1ef6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTVjZTRjYmM3MmFkYmZjODI4NGVkNjk5OGI3ZDM2YzlmNTBjMWVmNg==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2019-06-25T11:49:36Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2019-06-25T11:49:36Z"}, "message": "Do not call strlen with NULL argument in libgcov.\n\n2019-06-25  Martin Liska  <mliska@suse.cz>\n\n\t* libgcov-driver-system.c (replace_filename_variables): Do not\n\tcall strlen with NULL argument.\n\nFrom-SVN: r272650", "tree": {"sha": "9b9f10ab154d00d906d5f723bb773a64c7e4557d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9b9f10ab154d00d906d5f723bb773a64c7e4557d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e5ce4cbc72adbfc8284ed6998b7d36c9f50c1ef6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5ce4cbc72adbfc8284ed6998b7d36c9f50c1ef6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e5ce4cbc72adbfc8284ed6998b7d36c9f50c1ef6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5ce4cbc72adbfc8284ed6998b7d36c9f50c1ef6/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b1e86e33a284b6b385c3b8ade42f2f9acf582a45", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1e86e33a284b6b385c3b8ade42f2f9acf582a45", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b1e86e33a284b6b385c3b8ade42f2f9acf582a45"}], "stats": {"total": 10, "additions": 8, "deletions": 2}, "files": [{"sha": "a5896155bb490e7ec7d58b76b8d8320e8df88f08", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5ce4cbc72adbfc8284ed6998b7d36c9f50c1ef6/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5ce4cbc72adbfc8284ed6998b7d36c9f50c1ef6/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=e5ce4cbc72adbfc8284ed6998b7d36c9f50c1ef6", "patch": "@@ -1,3 +1,8 @@\n+2019-06-25  Martin Liska  <mliska@suse.cz>\n+\n+\t* libgcov-driver-system.c (replace_filename_variables): Do not\n+\tcall strlen with NULL argument.\n+\n 2019-06-25  Andrew Stubbs  <ams@codesourcery.com>\n \n \t* config/gcn/t-amdgcn (LIB2ADD): Add unwind-gcn.c."}, {"sha": "39dc62749d53056c4634cc49d8be39b3e40a411a", "filename": "libgcc/libgcov-driver-system.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5ce4cbc72adbfc8284ed6998b7d36c9f50c1ef6/libgcc%2Flibgcov-driver-system.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5ce4cbc72adbfc8284ed6998b7d36c9f50c1ef6/libgcc%2Flibgcov-driver-system.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Flibgcov-driver-system.c?ref=e5ce4cbc72adbfc8284ed6998b7d36c9f50c1ef6", "patch": "@@ -186,13 +186,14 @@ replace_filename_variables (char *filename)\n \t  /* Concat beginning of the path, replacement and\n \t     ending of the path.  */\n \t  unsigned end = length - (p - filename);\n-\t  unsigned repl_length = strlen (replacement);\n+\t  unsigned repl_length = replacement != NULL ? strlen (replacement) : 0;\n \n \t  char *buffer = (char *)xmalloc (start + end + repl_length + 1);\n \t  char *buffer_ptr = buffer;\n \t  buffer_ptr = (char *)memcpy (buffer_ptr, filename, start);\n \t  buffer_ptr += start;\n-\t  buffer_ptr = (char *)memcpy (buffer_ptr, replacement, repl_length);\n+\t  if (replacement != NULL)\n+\t    buffer_ptr = (char *)memcpy (buffer_ptr, replacement, repl_length);\n \t  buffer_ptr += repl_length;\n \t  buffer_ptr = (char *)memcpy (buffer_ptr, p, end);\n \t  buffer_ptr += end;"}]}