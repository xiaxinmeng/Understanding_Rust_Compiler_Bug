{"sha": "f659a11ff2646ef5a01ebd12128e73247d217c82", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjY1OWExMWZmMjY0NmVmNWEwMWViZDEyMTI4ZTczMjQ3ZDIxN2M4Mg==", "commit": {"author": {"name": "Paul Brook", "email": "pbrook@gcc.gnu.org", "date": "2004-05-29T01:24:15Z"}, "committer": {"name": "Paul Brook", "email": "pbrook@gcc.gnu.org", "date": "2004-05-29T01:24:15Z"}, "message": "Typo in last patch.\n\nFrom-SVN: r82412", "tree": {"sha": "aebe42db895b657ef331fe6ea6246f1f8e51c7c9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aebe42db895b657ef331fe6ea6246f1f8e51c7c9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f659a11ff2646ef5a01ebd12128e73247d217c82", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f659a11ff2646ef5a01ebd12128e73247d217c82", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f659a11ff2646ef5a01ebd12128e73247d217c82", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f659a11ff2646ef5a01ebd12128e73247d217c82/comments", "author": null, "committer": null, "parents": [{"sha": "353c3b7e16645aa9e2be04e80707e256965642e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/353c3b7e16645aa9e2be04e80707e256965642e4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/353c3b7e16645aa9e2be04e80707e256965642e4"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "667038d5cc45202cc3309c46ee35b52fbbcfc32a", "filename": "gcc/fortran/trans-common.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f659a11ff2646ef5a01ebd12128e73247d217c82/gcc%2Ffortran%2Ftrans-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f659a11ff2646ef5a01ebd12128e73247d217c82/gcc%2Ffortran%2Ftrans-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-common.c?ref=f659a11ff2646ef5a01ebd12128e73247d217c82", "patch": "@@ -685,7 +685,7 @@ find_equivalence (segment_info *f)\n \t      add_condition (f, eq, other);\n \t      eq->used = 1;\n \t      found = TRUE;\n-\t      /* If this symbol is the fist in the chain we may find other\n+\t      /* If this symbol is the first in the chain we may find other\n \t\t matches. Otherwise we can skip to the next equivalence.  */\n \t      if (eq == l) \n \t\tbreak;"}]}