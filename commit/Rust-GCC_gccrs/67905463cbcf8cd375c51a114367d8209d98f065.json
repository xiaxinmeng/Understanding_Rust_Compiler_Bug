{"sha": "67905463cbcf8cd375c51a114367d8209d98f065", "node_id": "C_kwDOANBUbNoAKDY3OTA1NDYzY2JjZjhjZDM3NWM1MWExMTQzNjdkODIwOWQ5OGYwNjU", "commit": {"author": {"name": "TieWay59", "email": "tieway59@foxmail.com", "date": "2023-04-19T06:07:34Z"}, "committer": {"name": "CohenArthur", "email": "arthur.cohen@embecosm.com", "date": "2023-04-21T13:09:46Z"}, "message": "Fix translation mistakes 2023 in GCC/Rust [PR108890]\n\nIn https://gcc.gnu.org/PR108890 \"Translation mistakes 2023\"\n@rillig lists several issues with GCC/Rust diagnostics and\noption help texts (but also a few non-GCC/Rust).\n\nThis commit fix mistakes only related to GCC/Rust,\nspecifically to the file `gcc/rust/lang.opt`.\n\ncloses https://github.com/Rust-GCC/gccrs/issues/1916\n\n\tPR translation/108890\n\tgcc/rust/\n\t* lang.opt: Fix translation mistakes 2023 in\n\tGCC/Rust [PR108890]\n\t(line 67): change the inconsistent tab to spaces\n\t(line 75): wrap bare placeholder `integer`\n\t(line 79): remove redundant text of `Choose which`\n\t(line 96): remove redundant text of `Choose which`\n\t(line 112): remove redundant `Flag to`\n\t(line 124): correct the exclusive term `When to stop`\n\t(line 124): correct typo of `copimlation`\n\nSigned-off-by: Tieway59 <tieway59@foxmail.com>", "tree": {"sha": "b78a7f218e2f570b346d11ff175e6c1d5a55d192", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b78a7f218e2f570b346d11ff175e6c1d5a55d192"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/67905463cbcf8cd375c51a114367d8209d98f065", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67905463cbcf8cd375c51a114367d8209d98f065", "html_url": "https://github.com/Rust-GCC/gccrs/commit/67905463cbcf8cd375c51a114367d8209d98f065", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67905463cbcf8cd375c51a114367d8209d98f065/comments", "author": {"login": "TieWay59", "id": 40034603, "node_id": "MDQ6VXNlcjQwMDM0NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/40034603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TieWay59", "html_url": "https://github.com/TieWay59", "followers_url": "https://api.github.com/users/TieWay59/followers", "following_url": "https://api.github.com/users/TieWay59/following{/other_user}", "gists_url": "https://api.github.com/users/TieWay59/gists{/gist_id}", "starred_url": "https://api.github.com/users/TieWay59/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TieWay59/subscriptions", "organizations_url": "https://api.github.com/users/TieWay59/orgs", "repos_url": "https://api.github.com/users/TieWay59/repos", "events_url": "https://api.github.com/users/TieWay59/events{/privacy}", "received_events_url": "https://api.github.com/users/TieWay59/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a6d4d0bbeaebf4e375f1e420bdffa843b2b4ec98", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6d4d0bbeaebf4e375f1e420bdffa843b2b4ec98", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a6d4d0bbeaebf4e375f1e420bdffa843b2b4ec98"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "753cea1fbc4b58483f2c851785eb7a8d2b957927", "filename": "gcc/rust/lang.opt", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67905463cbcf8cd375c51a114367d8209d98f065/gcc%2Frust%2Flang.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67905463cbcf8cd375c51a114367d8209d98f065/gcc%2Frust%2Flang.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Flang.opt?ref=67905463cbcf8cd375c51a114367d8209d98f065", "patch": "@@ -64,19 +64,19 @@ Dump various Rust front end internals.\n \n frust-dump-\n Rust Joined RejectNegative\n--frust-dump-<type>\tDump Rust frontend internal information.\n+-frust-dump-<type>              Dump Rust frontend internal information.\n \n frust-incomplete-and-experimental-compiler-do-not-use\n Rust Var(flag_rust_experimental)\n Enable experimental compilation of Rust files at your own risk\n \n frust-max-recursion-depth=\n Rust RejectNegative Type(int) Var(rust_max_recursion_depth) Init(64)\n--frust-max-recursion-depth=integer\n+-frust-max-recursion-depth=<integer>\n \n frust-mangling=\n Rust Joined RejectNegative Enum(frust_mangling) Var(flag_rust_mangling)\n--frust-mangling=[legacy|v0]     Choose which version to use for name mangling\n+-frust-mangling=[legacy|v0]     Version to use for name mangling\n \n Enum\n Name(frust_mangling) Type(int) UnknownError(unknown rust mangling option %qs)\n@@ -93,7 +93,7 @@ Rust Joined RejectNegative\n \n frust-edition=\n Rust Joined RejectNegative Enum(frust_edition) Var(flag_rust_edition)\n--frust-edition=[2015|2018|2021]             Choose which edition to use when compiling rust code\n+-frust-edition=[2015|2018|2021]             Edition to use when compiling rust code\n \n Enum\n Name(frust_edition) Type(int) UnknownError(unknown rust edition %qs)\n@@ -109,7 +109,7 @@ Enum(frust_edition) String(2021) Value(2)\n \n frust-embed-metadata\n Rust Var(flag_rust_embed_metadata)\n-Flag to enable embeding metadata directly into object files\n+Enable embedding metadata directly into object files\n \n frust-metadata-output=\n Rust Joined RejectNegative\n@@ -121,7 +121,7 @@ Rust Joined Separate\n \n frust-compile-until=\n Rust Joined RejectNegative Enum(frust_compile_until) Var(flag_rust_compile_until)\n--frust-compile-until=[ast|attributecheck|expansion|nameresolution|lowering|typecheck|privacy|unsafety|const|copimlation|end]             When to stop in the pipeline when compiling Rust code\n+-frust-compile-until=[ast|attributecheck|expansion|nameresolution|lowering|typecheck|privacy|unsafety|const|compilation|end]             The pipeline will run up until this stage when compiling Rust code\n \n Enum\n Name(frust_compile_until) Type(int) UnknownError(unknown rust compile-until %qs)"}]}