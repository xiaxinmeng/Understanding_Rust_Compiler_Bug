{"sha": "e5ae22c56152b1a1f4b4e1d7ae04431a9e4710cc", "node_id": "C_kwDOANBUbNoAKGU1YWUyMmM1NjE1MmIxYTFmNGI0ZTFkN2FlMDQ0MzFhOWU0NzEwY2M", "commit": {"author": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2022-02-15T15:54:30Z"}, "committer": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2022-03-04T13:21:00Z"}, "message": "Add diagnostic: \"note: OpenACC 'kernels' decomposition: variable '[...]' declared in block made addressable\" [PR100280]\n\nFollow-up to commit 9b32c1669aad5459dd053424f9967011348add83\n\"OpenACC 'kernels' decomposition: Mark variables used in\nsynthesized data clauses as addressable [PR100280]\".\n\n\tPR middle-end/100280\n\tgcc/\n\t* omp-oacc-kernels-decompose.cc (maybe_build_inner_data_region):\n\tAdd diagnostic: \"note: OpenACC 'kernels' decomposition: variable\n\t'[...]' declared in block made addressable\".\n\tgcc/testsuite/\n\t* c-c++-common/goacc/classify-kernels-unparallelized.c: Add\n\t'--param=openacc-privatization=noisy'.\n\t* c-c++-common/goacc/classify-kernels.c: Likewise.\n\t* c-c++-common/goacc/kernels-decompose-2.c: Adjust.\n\t* c-c++-common/goacc/kernels-decompose-pr100280-1.c: Likewise.\n\t* c-c++-common/goacc/kernels-decompose-pr104061-1-2.c: Likewise.\n\t* c-c++-common/goacc/kernels-decompose-pr104061-1-3.c: Likewise.\n\t* c-c++-common/goacc/kernels-decompose-pr104061-1-4.c: Likewise.\n\t* c-c++-common/goacc/kernels-decompose-pr104132-1.c: Likewise.\n\t* c-c++-common/goacc/kernels-decompose-pr104133-1.c: Likewise.\n\tlibgomp/\n\t* testsuite/libgomp.oacc-c-c++-common/f-asyncwait-1.c: Adjust.\n\t* testsuite/libgomp.oacc-c-c++-common/kernels-decompose-1.c:\n\tLikewise.", "tree": {"sha": "5ad220245bc1531acbe0feafc450de824fa8dfeb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5ad220245bc1531acbe0feafc450de824fa8dfeb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e5ae22c56152b1a1f4b4e1d7ae04431a9e4710cc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5ae22c56152b1a1f4b4e1d7ae04431a9e4710cc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e5ae22c56152b1a1f4b4e1d7ae04431a9e4710cc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5ae22c56152b1a1f4b4e1d7ae04431a9e4710cc/comments", "author": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c14ea6a72fb1ae66e3d32ac8329558497c6e4403", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c14ea6a72fb1ae66e3d32ac8329558497c6e4403", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c14ea6a72fb1ae66e3d32ac8329558497c6e4403"}], "stats": {"total": 50, "additions": 49, "deletions": 1}, "files": [{"sha": "5093386f718682907b71f6af7b05e1f85c656b67", "filename": "gcc/omp-oacc-kernels-decompose.cc", "status": "modified", "additions": 23, "deletions": 1, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5ae22c56152b1a1f4b4e1d7ae04431a9e4710cc/gcc%2Fomp-oacc-kernels-decompose.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5ae22c56152b1a1f4b4e1d7ae04431a9e4710cc/gcc%2Fomp-oacc-kernels-decompose.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fomp-oacc-kernels-decompose.cc?ref=e5ae22c56152b1a1f4b4e1d7ae04431a9e4710cc", "patch": "@@ -845,7 +845,29 @@ maybe_build_inner_data_region (location_t loc, gimple *body,\n \t  prev_mapped_var = v;\n \n \t  /* See <https://gcc.gnu.org/PR100280>.  */\n-\t  TREE_ADDRESSABLE (v) = 1;\n+\t  if (!TREE_ADDRESSABLE (v))\n+\t    {\n+\t      TREE_ADDRESSABLE (v) = 1;\n+\n+\t      if (dump_enabled_p ())\n+\t\t{\n+\t\t  const dump_user_location_t d_u_loc\n+\t\t    = dump_user_location_t::from_location_t (loc);\n+\t\t  /* PR100695 \"Format decoder, quoting in 'dump_printf' etc.\" */\n+#if __GNUC__ >= 10\n+# pragma GCC diagnostic push\n+# pragma GCC diagnostic ignored \"-Wformat\"\n+#endif\n+\t\t  dump_printf_loc (MSG_NOTE, d_u_loc,\n+\t\t\t\t   \"OpenACC %<kernels%> decomposition:\"\n+\t\t\t\t   \" variable %<%T%> declared in block\"\n+\t\t\t\t   \" made addressable\\n\",\n+\t\t\t\t   v);\n+#if __GNUC__ >= 10\n+# pragma GCC diagnostic pop\n+#endif\n+\t\t}\n+\t    }\n \t}\n     }\n "}, {"sha": "2496462f7770fe91342434907ced3aa5b7b3a6af", "filename": "gcc/testsuite/c-c++-common/goacc/classify-kernels-unparallelized.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5ae22c56152b1a1f4b4e1d7ae04431a9e4710cc/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fclassify-kernels-unparallelized.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5ae22c56152b1a1f4b4e1d7ae04431a9e4710cc/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fclassify-kernels-unparallelized.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fclassify-kernels-unparallelized.c?ref=e5ae22c56152b1a1f4b4e1d7ae04431a9e4710cc", "patch": "@@ -9,6 +9,10 @@\n    { dg-additional-options \"-fdump-tree-parloops1-all\" }\n    { dg-additional-options \"-fdump-tree-oaccloops\" } */\n \n+/* { dg-additional-options \"--param=openacc-privatization=noisy\" }\n+   Prune a few: uninteresting:\n+   { dg-prune-output {note: variable 'D\\.[0-9]+' declared in block isn't candidate for adjusting OpenACC privatization level: not addressable} } */\n+\n /* { dg-additional-options \"-Wopenacc-parallelism\" } for testing/documenting\n    aspects of that functionality.  */\n \n@@ -25,6 +29,9 @@ extern unsigned int f (unsigned int);\n void KERNELS ()\n {\n #pragma acc kernels copyin (a[0:N], b[0:N]) copyout (c[0:N]) /* { dg-line l_compute1 } */\n+  /* { dg-note {OpenACC 'kernels' decomposition: variable 'i' declared in block made addressable} {} { target *-*-* } l_compute1 } */\n+  /* { dg-note {variable 'i' declared in block is candidate for adjusting OpenACC privatization level} {} { target *-*-* } l_compute1 } */\n+  /* { dg-note {variable '[abc]\\.[0-9]+' declared in block isn't candidate for adjusting OpenACC privatization level: not addressable} {} { target *-*-* } l_compute1 } */\n   /* { dg-optimized {assigned OpenACC seq loop parallelism} {} { target *-*-* } l_compute1 } */\n   /* { dg-note {beginning 'parloops' part in OpenACC 'kernels' region} {} { target *-*-* } .+1 } */\n   for (unsigned int i = 0; i < N; i++)"}, {"sha": "3ba0411a57ab39b206df2532977802d2c3537c7a", "filename": "gcc/testsuite/c-c++-common/goacc/classify-kernels.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5ae22c56152b1a1f4b4e1d7ae04431a9e4710cc/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fclassify-kernels.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5ae22c56152b1a1f4b4e1d7ae04431a9e4710cc/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fclassify-kernels.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fclassify-kernels.c?ref=e5ae22c56152b1a1f4b4e1d7ae04431a9e4710cc", "patch": "@@ -9,6 +9,10 @@\n    { dg-additional-options \"-fdump-tree-parloops1-all\" }\n    { dg-additional-options \"-fdump-tree-oaccloops\" } */\n \n+/* { dg-additional-options \"--param=openacc-privatization=noisy\" }\n+   Prune a few: uninteresting:\n+   { dg-prune-output {note: variable 'D\\.[0-9]+' declared in block isn't candidate for adjusting OpenACC privatization level: not addressable} } */\n+\n /* { dg-additional-options \"-Wopenacc-parallelism\" } for testing/documenting\n    aspects of that functionality.  */\n \n@@ -21,6 +25,9 @@ extern unsigned int *__restrict c;\n void KERNELS ()\n {\n #pragma acc kernels copyin (a[0:N], b[0:N]) copyout (c[0:N]) /* { dg-line l_compute1 } */\n+  /* { dg-note {OpenACC 'kernels' decomposition: variable 'i' declared in block made addressable} {} { target *-*-* } l_compute1 } */\n+  /* { dg-note {variable 'i' declared in block is candidate for adjusting OpenACC privatization level} {} { target *-*-* } l_compute1 } */\n+  /* { dg-note {variable '[abc]\\.[0-9]+' declared in block isn't candidate for adjusting OpenACC privatization level: not addressable} {} { target *-*-* } l_compute1 } */\n   /* { dg-optimized {assigned OpenACC gang loop parallelism} {} { target *-*-* } l_compute1 } */\n   /* { dg-note {beginning 'parloops' part in OpenACC 'kernels' region} {} { target *-*-* } .+1 } */\n   for (unsigned int i = 0; i < N; i++)"}, {"sha": "5fbd10221a2bc7c0c9d47a281e46549f33e3a749", "filename": "gcc/testsuite/c-c++-common/goacc/kernels-decompose-2.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5ae22c56152b1a1f4b4e1d7ae04431a9e4710cc/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fkernels-decompose-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5ae22c56152b1a1f4b4e1d7ae04431a9e4710cc/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fkernels-decompose-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fkernels-decompose-2.c?ref=e5ae22c56152b1a1f4b4e1d7ae04431a9e4710cc", "patch": "@@ -66,12 +66,14 @@ main ()\n \n #pragma acc kernels /* { dg-line l_compute[incr c_compute] } */\n   /* { dg-note {beginning 'gang-single' part in OpenACC 'kernels' region} {} { target *-*-* } l_compute$c_compute } */\n+  /* { dg-note {OpenACC 'kernels' decomposition: variable 'i' declared in block made addressable} {} { target *-*-* } l_compute$c_compute } */\n   /* { dg-note {variable 'i' declared in block is candidate for adjusting OpenACC privatization level} {} { target *-*-* } l_compute$c_compute } */\n   {\n     int i;\n   }\n \n #pragma acc kernels /* { dg-line l_compute[incr c_compute] } */\n+  /* { dg-note {OpenACC 'kernels' decomposition: variable 'i' declared in block made addressable} {} { target *-*-* } l_compute$c_compute } */\n   /* { dg-note {variable 'i' declared in block is candidate for adjusting OpenACC privatization level} {} { target *-*-* } l_compute$c_compute } */\n   /* { dg-optimized {assigned OpenACC gang loop parallelism} {} { target *-*-* } l_compute$c_compute } */\n   /* { dg-note {beginning 'parloops' part in OpenACC 'kernels' region} {} { target *-*-* } .+1 } */"}, {"sha": "91e589777b0dd33acedd8535acc88760339c112d", "filename": "gcc/testsuite/c-c++-common/goacc/kernels-decompose-pr100280-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5ae22c56152b1a1f4b4e1d7ae04431a9e4710cc/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fkernels-decompose-pr100280-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5ae22c56152b1a1f4b4e1d7ae04431a9e4710cc/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fkernels-decompose-pr100280-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fkernels-decompose-pr100280-1.c?ref=e5ae22c56152b1a1f4b4e1d7ae04431a9e4710cc", "patch": "@@ -10,6 +10,7 @@ void\n foo (void) /* { dg-line l_f_1 } */\n {\n #pragma acc kernels /* { dg-line l_k_1 } */\n+  /* { dg-note {OpenACC 'kernels' decomposition: variable 'i' declared in block made addressable} {} { target *-*-* } l_k_1 } */\n   /* { dg-note {variable 'i' declared in block is candidate for adjusting OpenACC privatization level} {} { target *-*-* } l_k_1 } */\n   /* { dg-optimized {assigned OpenACC seq loop parallelism} {} { target *-*-* } l_k_1 } */\n   /* { dg-bogus {note: beginning 'parloops' part in OpenACC 'kernels' region} {TODO location} { xfail *-*-* } l_f_1 }"}, {"sha": "8ca02cb2119a36606ec4df17720b2e68386caaea", "filename": "gcc/testsuite/c-c++-common/goacc/kernels-decompose-pr104061-1-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5ae22c56152b1a1f4b4e1d7ae04431a9e4710cc/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fkernels-decompose-pr104061-1-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5ae22c56152b1a1f4b4e1d7ae04431a9e4710cc/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fkernels-decompose-pr104061-1-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fkernels-decompose-pr104061-1-2.c?ref=e5ae22c56152b1a1f4b4e1d7ae04431a9e4710cc", "patch": "@@ -16,6 +16,7 @@ foo (void)\n {\n   /* { dg-bogus {sorry, unimplemented: 'gimple_debug' not yet supported} TODO { xfail *-*-* } .+1 } */\n #pragma acc kernels /* { dg-line l_compute1 } */\n+  /* { dg-bogus {note: OpenACC 'kernels' decomposition: variable 'k' declared in block made addressable} {w/ debug} { xfail *-*-* } l_compute1 } */\n   /* { dg-note {variable 'arr_0\\.0' declared in block isn't candidate for adjusting OpenACC privatization level: not addressable} {} { xfail *-*-* } l_compute1 } */\n   {\n     /* { dg-bogus {note: beginning 'gang-single' part in OpenACC 'kernels' region} {w/ debug} { xfail c++ } .-1 }"}, {"sha": "05a196d8f367af37457cf2704cb360613bd7b9c3", "filename": "gcc/testsuite/c-c++-common/goacc/kernels-decompose-pr104061-1-3.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5ae22c56152b1a1f4b4e1d7ae04431a9e4710cc/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fkernels-decompose-pr104061-1-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5ae22c56152b1a1f4b4e1d7ae04431a9e4710cc/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fkernels-decompose-pr104061-1-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fkernels-decompose-pr104061-1-3.c?ref=e5ae22c56152b1a1f4b4e1d7ae04431a9e4710cc", "patch": "@@ -23,6 +23,7 @@ foo (void)\n {\n   /* { dg-bogus {sorry, unimplemented: 'gimple_debug' not yet supported} {} { target *-*-* } .+1 } suppressed via '-fcompare-debug'.  */\n #pragma acc kernels /* { dg-line l_compute1 } */\n+  /* { dg-bogus {note: OpenACC 'kernels' decomposition: variable 'k' declared in block made addressable} {w/ debug} { xfail *-*-* } l_compute1 } */\n   /* { dg-bogus {note: variable 'k' declared in block is candidate for adjusting OpenACC privatization level} {w/ debug} { xfail *-*-* } l_compute1 } */\n   /* { dg-note {variable 'arr_0\\.0' declared in block isn't candidate for adjusting OpenACC privatization level: not addressable} {} { target *-*-* } l_compute1 } */\n   {"}, {"sha": "07cb592bcf96eb8279b0eb3e49dd46bc7f2a7027", "filename": "gcc/testsuite/c-c++-common/goacc/kernels-decompose-pr104061-1-4.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5ae22c56152b1a1f4b4e1d7ae04431a9e4710cc/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fkernels-decompose-pr104061-1-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5ae22c56152b1a1f4b4e1d7ae04431a9e4710cc/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fkernels-decompose-pr104061-1-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fkernels-decompose-pr104061-1-4.c?ref=e5ae22c56152b1a1f4b4e1d7ae04431a9e4710cc", "patch": "@@ -21,6 +21,7 @@ foo (void)\n {\n   /* { dg-bogus {sorry, unimplemented: 'gimple_debug' not yet supported} {} { target *-*-* } .+1 } suppressed via '-fcompare-debug'.  */\n #pragma acc kernels /* { dg-line l_compute1 } */\n+  /* { dg-bogus {note: OpenACC 'kernels' decomposition: variable 'k' declared in block made addressable} {w/ debug} { xfail *-*-* } l_compute1 } */\n   /* { dg-bogus {note: variable 'k' declared in block is candidate for adjusting OpenACC privatization level} {w/ debug} { xfail *-*-* } l_compute1 } */\n   /* { dg-note {variable 'arr_0\\.0' declared in block isn't candidate for adjusting OpenACC privatization level: not addressable} {} { target *-*-* } l_compute1 } */\n   {"}, {"sha": "5b0fe42efbf7887fc0a9848c401767f076d885da", "filename": "gcc/testsuite/c-c++-common/goacc/kernels-decompose-pr104132-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5ae22c56152b1a1f4b4e1d7ae04431a9e4710cc/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fkernels-decompose-pr104132-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5ae22c56152b1a1f4b4e1d7ae04431a9e4710cc/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fkernels-decompose-pr104132-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fkernels-decompose-pr104132-1.c?ref=e5ae22c56152b1a1f4b4e1d7ae04431a9e4710cc", "patch": "@@ -18,6 +18,7 @@ void\n foo (void)\n {\n #pragma acc kernels /* { dg-line l_compute1 } */\n+  /* { dg-note {OpenACC 'kernels' decomposition: variable 'k' declared in block made addressable} {} { target *-*-* } l_compute1 } */\n   /* { dg-note {variable 'k' declared in block is candidate for adjusting OpenACC privatization level} {} { target *-*-* } l_compute1 } */\n   {\n     int k;"}, {"sha": "4536b5c179ebe4c242f60fe201ebe126faecf4e2", "filename": "gcc/testsuite/c-c++-common/goacc/kernels-decompose-pr104133-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5ae22c56152b1a1f4b4e1d7ae04431a9e4710cc/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fkernels-decompose-pr104133-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5ae22c56152b1a1f4b4e1d7ae04431a9e4710cc/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fkernels-decompose-pr104133-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fkernels-decompose-pr104133-1.c?ref=e5ae22c56152b1a1f4b4e1d7ae04431a9e4710cc", "patch": "@@ -18,6 +18,7 @@ void\n foo (void)\n {\n #pragma acc kernels /* { dg-line l_compute1 } */\n+  /* { dg-note {OpenACC 'kernels' decomposition: variable 'k' declared in block made addressable} {} { target *-*-* } l_compute1 } */\n   /* { dg-note {variable 'k' declared in block is candidate for adjusting OpenACC privatization level} {} { target *-*-* } l_compute1 } */\n   /* { dg-note {variable 'arr_0\\.0' declared in block isn't candidate for adjusting OpenACC privatization level: not addressable} {} { target *-*-* } l_compute1 } */\n   /* { dg-note {variable 'arr_0\\.1' declared in block isn't candidate for adjusting OpenACC privatization level: not addressable} {} { target *-*-* } l_compute1 } */"}, {"sha": "d360aad4736d5652449c99b28e5da3300c54d57e", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/f-asyncwait-1.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5ae22c56152b1a1f4b4e1d7ae04431a9e4710cc/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Ff-asyncwait-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5ae22c56152b1a1f4b4e1d7ae04431a9e4710cc/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Ff-asyncwait-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Ff-asyncwait-1.c?ref=e5ae22c56152b1a1f4b4e1d7ae04431a9e4710cc", "patch": "@@ -260,6 +260,7 @@ main (void)\n #pragma acc data copy (a[0:N]) copy (b[0:N]) copy (c[0:N]) copy (d[0:N])\n   {\n #pragma acc kernels async (1) /* { dg-line l_compute[incr c_compute] } */\n+    /* { dg-note {OpenACC 'kernels' decomposition: variable 'i' declared in block made addressable} \"\" { target *-*-* } l_compute$c_compute } */\n     /* { dg-note {variable 'i' declared in block is candidate for adjusting OpenACC privatization level} \"\" { target *-*-* } l_compute$c_compute } */\n     /* { dg-optimized \"assigned OpenACC seq loop parallelism\" \"\" { target { ! __OPTIMIZE__ } } l_compute$c_compute }\n        { dg-optimized \"assigned OpenACC gang loop parallelism\" \"\" { target { __OPTIMIZE__ } } l_compute$c_compute } */\n@@ -268,6 +269,7 @@ main (void)\n       b[i] = (a[i] * a[i] * a[i]) / a[i];\n \n #pragma acc kernels async (1) /* { dg-line l_compute[incr c_compute] } */\n+    /* { dg-note {OpenACC 'kernels' decomposition: variable 'i' declared in block made addressable} \"\" { target *-*-* } l_compute$c_compute } */\n     /* { dg-note {variable 'i' declared in block is candidate for adjusting OpenACC privatization level} \"\" { target *-*-* } l_compute$c_compute } */\n     /* { dg-optimized \"assigned OpenACC seq loop parallelism\" \"\" { target { ! __OPTIMIZE__ } } l_compute$c_compute }\n        { dg-optimized \"assigned OpenACC gang loop parallelism\" \"\" { target { __OPTIMIZE__ } } l_compute$c_compute } */\n@@ -311,6 +313,7 @@ main (void)\n #pragma acc data copy (a[0:N], b[0:N], c[0:N], d[0:N], e[0:N])\n   {\n #pragma acc kernels async (1) /* { dg-line l_compute[incr c_compute] } */\n+    /* { dg-note {OpenACC 'kernels' decomposition: variable 'i' declared in block made addressable} \"\" { target *-*-* } l_compute$c_compute } */\n     /* { dg-note {variable 'i' declared in block is candidate for adjusting OpenACC privatization level} \"\" { target *-*-* } l_compute$c_compute } */\n     /* { dg-optimized \"assigned OpenACC seq loop parallelism\" \"\" { target { ! __OPTIMIZE__ } } l_compute$c_compute }\n        { dg-optimized \"assigned OpenACC gang loop parallelism\" \"\" { target { __OPTIMIZE__ } } l_compute$c_compute } */"}, {"sha": "b99497ea6c59bbfdfcb1cabc0d0269d87cef5e07", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/kernels-decompose-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5ae22c56152b1a1f4b4e1d7ae04431a9e4710cc/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fkernels-decompose-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5ae22c56152b1a1f4b4e1d7ae04431a9e4710cc/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fkernels-decompose-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fkernels-decompose-1.c?ref=e5ae22c56152b1a1f4b4e1d7ae04431a9e4710cc", "patch": "@@ -32,6 +32,7 @@ int main()\n   {\n     /* { dg-note {beginning 'gang-single' part in OpenACC 'kernels' region} {} { target *-*-* } .+1 } */\n     int c = 234;\n+    /* { dg-note {OpenACC 'kernels' decomposition: variable 'c' declared in block made addressable} \"\" { target *-*-* } l_compute$c_compute } */\n     /* { dg-note {variable 'c' declared in block is candidate for adjusting OpenACC privatization level} \"\" { target *-*-* } l_compute$c_compute } */\n \n #pragma acc loop independent gang /* { dg-line l_loop_i[incr c_loop_i] } */"}]}