{"sha": "dc66391d69625b910b5d2aaae7eb28dd7267669e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGM2NjM5MWQ2OTYyNWI5MTBiNWQyYWFhZTdlYjI4ZGQ3MjY3NjY5ZQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "rdsandiford@googlemail.com", "date": "2008-10-13T17:37:15Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2008-10-13T17:37:15Z"}, "message": "s390.md (UNSPEC_POOL_OFFSET): New constant.\n\ngcc/\n\t* config/s390/s390.md (UNSPEC_POOL_OFFSET): New constant.\n\t* config/s390/s390.c (machine_function): Remove\n\tdecomposed_literal_pool_addresses_ok_p.\n\t(s390_decompose_address): Check for UNSPEC_POOL_OFFSET instead of\n\tthe difference of two labels.\n\t(s390_output_addr_const_extra): Handle UNSPEC_POOL_OFFSET.\n\t(s390_pool_offset): New function.\n\t(s390_find_constant, s390_find_execute, s390_dump_pool): Use it.\n\t(s390_reorg): Don't set decomposed_literal_pool_addresses_ok_p.\n\nFrom-SVN: r141091", "tree": {"sha": "88c326da4662452f076324e3a0a6285ae66704e7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/88c326da4662452f076324e3a0a6285ae66704e7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dc66391d69625b910b5d2aaae7eb28dd7267669e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc66391d69625b910b5d2aaae7eb28dd7267669e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dc66391d69625b910b5d2aaae7eb28dd7267669e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc66391d69625b910b5d2aaae7eb28dd7267669e/comments", "author": {"login": "rsandifo", "id": 4235983, "node_id": "MDQ6VXNlcjQyMzU5ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/4235983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo", "html_url": "https://github.com/rsandifo", "followers_url": "https://api.github.com/users/rsandifo/followers", "following_url": "https://api.github.com/users/rsandifo/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo/orgs", "repos_url": "https://api.github.com/users/rsandifo/repos", "events_url": "https://api.github.com/users/rsandifo/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1590a11567d7fea4cf0c492bb722e491f003f814", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1590a11567d7fea4cf0c492bb722e491f003f814", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1590a11567d7fea4cf0c492bb722e491f003f814"}], "stats": {"total": 72, "additions": 42, "deletions": 30}, "files": [{"sha": "25a8c88a92c24a04e08cdc0f70fd46740fced234", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc66391d69625b910b5d2aaae7eb28dd7267669e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc66391d69625b910b5d2aaae7eb28dd7267669e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=dc66391d69625b910b5d2aaae7eb28dd7267669e", "patch": "@@ -1,3 +1,15 @@\n+2008-10-13  Richard Sandiford  <rdsandiford@googlemail.com>\n+\n+\t* config/s390/s390.md (UNSPEC_POOL_OFFSET): New constant.\n+\t* config/s390/s390.c (machine_function): Remove\n+\tdecomposed_literal_pool_addresses_ok_p.\n+\t(s390_decompose_address): Check for UNSPEC_POOL_OFFSET instead of\n+\tthe difference of two labels.\n+\t(s390_output_addr_const_extra): Handle UNSPEC_POOL_OFFSET.\n+\t(s390_pool_offset): New function.\n+\t(s390_find_constant, s390_find_execute, s390_dump_pool): Use it.\n+\t(s390_reorg): Don't set decomposed_literal_pool_addresses_ok_p.\n+\n 2008-10-13  Nathan Froyd  <froydnj@codesourcery.com>\n \n \t* doc/install.texi (powerpc-*-*): Require binutils 2.15."}, {"sha": "45dae8bb20db2af20162ed9091830db0283137f2", "filename": "gcc/config/s390/s390.c", "status": "modified", "additions": 29, "deletions": 30, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc66391d69625b910b5d2aaae7eb28dd7267669e/gcc%2Fconfig%2Fs390%2Fs390.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc66391d69625b910b5d2aaae7eb28dd7267669e/gcc%2Fconfig%2Fs390%2Fs390.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.c?ref=dc66391d69625b910b5d2aaae7eb28dd7267669e", "patch": "@@ -316,9 +316,6 @@ struct machine_function GTY(())\n   /* True if we may need to perform branch splitting.  */\n   bool split_branches_pending_p;\n \n-  /* True during final stage of literal pool processing.  */\n-  bool decomposed_literal_pool_addresses_ok_p;\n-\n   /* Some local-dynamic TLS symbol name.  */\n   const char *some_ld_name;\n \n@@ -1955,15 +1952,10 @@ s390_decompose_address (rtx addr, struct s390_address *out)\n \t  ;\n         }\n \n-      /* Accept chunkified literal pool symbol references.  */\n-      else if (cfun && cfun->machine\n-\t       && cfun->machine->decomposed_literal_pool_addresses_ok_p\n-\t       && GET_CODE (disp) == MINUS\n-               && GET_CODE (XEXP (disp, 0)) == LABEL_REF\n-               && GET_CODE (XEXP (disp, 1)) == LABEL_REF)\n-        {\n-\t  ;\n-        }\n+      /* Accept pool label offsets.  */\n+      else if (GET_CODE (disp) == UNSPEC\n+\t       && XINT (disp, 1) == UNSPEC_POOL_OFFSET)\n+\t;\n \n       /* Accept literal pool references.  */\n       else if (GET_CODE (disp) == UNSPEC\n@@ -4909,6 +4901,14 @@ s390_output_addr_const_extra (FILE *file, rtx x)\n \treturn true;\n       }\n \n+  if (GET_CODE (x) == UNSPEC && XVECLEN (x, 0) == 2)\n+    switch (XINT (x, 1))\n+      {\n+      case UNSPEC_POOL_OFFSET:\n+\tx = gen_rtx_MINUS (GET_MODE (x), XVECEXP (x, 0, 0), XVECEXP (x, 0, 1));\n+\toutput_addr_const (file, x);\n+\treturn true;\n+      }\n   return false;\n }\n \n@@ -5823,6 +5823,20 @@ s390_add_constant (struct constant_pool *pool, rtx val, enum machine_mode mode)\n     }\n }\n \n+/* Return an rtx that represents the offset of X from the start of\n+   pool POOL.  */\n+\n+static rtx\n+s390_pool_offset (struct constant_pool *pool, rtx x)\n+{\n+  rtx label;\n+\n+  label = gen_rtx_LABEL_REF (GET_MODE (x), pool->label);\n+  x = gen_rtx_UNSPEC (GET_MODE (x), gen_rtvec (2, x, label),\n+\t\t      UNSPEC_POOL_OFFSET);\n+  return gen_rtx_CONST (GET_MODE (x), x);\n+}\n+\n /* Find constant VAL of mode MODE in the constant pool POOL.\n    Return an RTX describing the distance from the start of\n    the pool to the location of the new constant.  */\n@@ -5832,7 +5846,6 @@ s390_find_constant (struct constant_pool *pool, rtx val,\n \t\t    enum machine_mode mode)\n {\n   struct constant *c;\n-  rtx offset;\n   int i;\n \n   for (i = 0; i < NR_C_MODES; i++)\n@@ -5846,10 +5859,7 @@ s390_find_constant (struct constant_pool *pool, rtx val,\n \n   gcc_assert (c);\n \n-  offset = gen_rtx_MINUS (Pmode, gen_rtx_LABEL_REF (Pmode, c->label),\n-                                 gen_rtx_LABEL_REF (Pmode, pool->label));\n-  offset = gen_rtx_CONST (Pmode, offset);\n-  return offset;\n+  return s390_pool_offset (pool, gen_rtx_LABEL_REF (Pmode, c->label));\n }\n \n /* Check whether INSN is an execute.  Return the label_ref to its\n@@ -5897,18 +5907,14 @@ static rtx\n s390_find_execute (struct constant_pool *pool, rtx insn)\n {\n   struct constant *c;\n-  rtx offset;\n \n   for (c = pool->execute; c != NULL; c = c->next)\n     if (INSN_UID (insn) == INSN_UID (c->value))\n       break;\n \n   gcc_assert (c);\n \n-  offset = gen_rtx_MINUS (Pmode, gen_rtx_LABEL_REF (Pmode, c->label),\n-\t\t\t\t gen_rtx_LABEL_REF (Pmode, pool->label));\n-  offset = gen_rtx_CONST (Pmode, offset);\n-  return offset;\n+  return s390_pool_offset (pool, gen_rtx_LABEL_REF (Pmode, c->label));\n }\n \n /* For an execute INSN, extract the execute target template.  */\n@@ -5989,11 +5995,7 @@ s390_dump_pool (struct constant_pool *pool, bool remote_label)\n \t    && GET_CODE (XEXP (value, 0)) == UNSPEC\n \t    && XINT (XEXP (value, 0), 1) == UNSPEC_LTREL_OFFSET\n \t    && XVECLEN (XEXP (value, 0), 0) == 1)\n-\t  {\n-\t    value = gen_rtx_MINUS (Pmode, XVECEXP (XEXP (value, 0), 0, 0),\n-\t\t\t\t   gen_rtx_LABEL_REF (VOIDmode, pool->label));\n-\t    value = gen_rtx_CONST (VOIDmode, value);\n-\t  }\n+\t  value = s390_pool_offset (pool, XVECEXP (XEXP (value, 0), 0, 0));\n \n \tinsn = emit_label_after (c->label, insn);\n \tINSN_ADDRESSES_NEW (insn, -1);\n@@ -9598,9 +9600,6 @@ s390_reorg (void)\n      machine_dependent_reorg might confuse insn length counts.  */\n   split_all_insns_noflow ();\n \n-  /* From here on decomposed literal pool addresses must be accepted.  */\n-  cfun->machine->decomposed_literal_pool_addresses_ok_p = true;\n-\n   /* Install the main literal pool and the associated base\n      register load insns.\n "}, {"sha": "f43ee1d42c979cf1dadb8b425fb45b73660c54bc", "filename": "gcc/config/s390/s390.md", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc66391d69625b910b5d2aaae7eb28dd7267669e/gcc%2Fconfig%2Fs390%2Fs390.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc66391d69625b910b5d2aaae7eb28dd7267669e/gcc%2Fconfig%2Fs390%2Fs390.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.md?ref=dc66391d69625b910b5d2aaae7eb28dd7267669e", "patch": "@@ -68,6 +68,7 @@\n    ; GOT/PLT and lt-relative accesses\n    (UNSPEC_LTREL_OFFSET\t\t100)\n    (UNSPEC_LTREL_BASE\t\t101)\n+   (UNSPEC_POOL_OFFSET\t\t102)\n    (UNSPEC_GOTENT\t\t110)\n    (UNSPEC_GOT\t\t\t111)\n    (UNSPEC_GOTOFF\t\t112)"}]}