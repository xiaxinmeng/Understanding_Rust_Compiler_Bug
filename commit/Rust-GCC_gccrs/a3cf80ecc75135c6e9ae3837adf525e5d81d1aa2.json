{"sha": "a3cf80ecc75135c6e9ae3837adf525e5d81d1aa2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTNjZjgwZWNjNzUxMzVjNmU5YWUzODM3YWRmNTI1ZTVkODFkMWFhMg==", "commit": {"author": {"name": "Daniel Berlin", "email": "dberlin@dberlin.org", "date": "2005-05-18T03:07:44Z"}, "committer": {"name": "Daniel Berlin", "email": "dberlin@gcc.gnu.org", "date": "2005-05-18T03:07:44Z"}, "message": "tree-ssa-pre.c (find_or_generate_expression): CALL_EXPR is okay too.\n\n2005-05-17  Daniel Berlin  <dberlin@dberlin.org>\n\n\t* tree-ssa-pre.c (find_or_generate_expression): CALL_EXPR\n\tis okay too.\n\nFrom-SVN: r99882", "tree": {"sha": "24c63c4d12107641acb5b81de4441bb44307bb35", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/24c63c4d12107641acb5b81de4441bb44307bb35"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a3cf80ecc75135c6e9ae3837adf525e5d81d1aa2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a3cf80ecc75135c6e9ae3837adf525e5d81d1aa2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a3cf80ecc75135c6e9ae3837adf525e5d81d1aa2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a3cf80ecc75135c6e9ae3837adf525e5d81d1aa2/comments", "author": {"login": "dberlin", "id": 324715, "node_id": "MDQ6VXNlcjMyNDcxNQ==", "avatar_url": "https://avatars.githubusercontent.com/u/324715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dberlin", "html_url": "https://github.com/dberlin", "followers_url": "https://api.github.com/users/dberlin/followers", "following_url": "https://api.github.com/users/dberlin/following{/other_user}", "gists_url": "https://api.github.com/users/dberlin/gists{/gist_id}", "starred_url": "https://api.github.com/users/dberlin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dberlin/subscriptions", "organizations_url": "https://api.github.com/users/dberlin/orgs", "repos_url": "https://api.github.com/users/dberlin/repos", "events_url": "https://api.github.com/users/dberlin/events{/privacy}", "received_events_url": "https://api.github.com/users/dberlin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a21946f5a48ebcf6c94a6d9e8b5cd324bae61884", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a21946f5a48ebcf6c94a6d9e8b5cd324bae61884", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a21946f5a48ebcf6c94a6d9e8b5cd324bae61884"}], "stats": {"total": 16, "additions": 15, "deletions": 1}, "files": [{"sha": "cd213f4e608e058430e87f447c5aa7d4f5be2eeb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3cf80ecc75135c6e9ae3837adf525e5d81d1aa2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3cf80ecc75135c6e9ae3837adf525e5d81d1aa2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a3cf80ecc75135c6e9ae3837adf525e5d81d1aa2", "patch": "@@ -1,3 +1,8 @@\n+2005-05-17  Daniel Berlin  <dberlin@dberlin.org>\n+\n+\t* tree-ssa-pre.c (find_or_generate_expression): CALL_EXPR\n+\tis okay too.\n+\n 2005-05-17  Zdenek Dvorak  <dvorakz@suse.cz>\n \n \t* timevar.def (TV_SCEV_CONST): New timevar."}, {"sha": "856fda206b50f83a697dc15022430f65afd88e06", "filename": "gcc/testsuite/gcc.dg/20050517-1.c", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3cf80ecc75135c6e9ae3837adf525e5d81d1aa2/gcc%2Ftestsuite%2Fgcc.dg%2F20050517-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3cf80ecc75135c6e9ae3837adf525e5d81d1aa2/gcc%2Ftestsuite%2Fgcc.dg%2F20050517-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20050517-1.c?ref=a3cf80ecc75135c6e9ae3837adf525e5d81d1aa2", "patch": "@@ -0,0 +1,8 @@\n+/* Tree PRE is going to transform this so that it doesn't call cos on the \n+   d = 0 path, and in doing so, it needs to regenerate the cos call.\n+   This was ICE'ing due to an overly strict check on what it knew how\n+   to regenerate.   */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -ffast-math\" } */\n+double cos(double);\n+double f(double d, double i, int j) { if (j == 1) d = 0; return d * cos(i); }"}, {"sha": "2482a1329cfb9239b9265c2acad339ea831b958a", "filename": "gcc/tree-ssa-pre.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3cf80ecc75135c6e9ae3837adf525e5d81d1aa2/gcc%2Ftree-ssa-pre.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3cf80ecc75135c6e9ae3837adf525e5d81d1aa2/gcc%2Ftree-ssa-pre.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-pre.c?ref=a3cf80ecc75135c6e9ae3837adf525e5d81d1aa2", "patch": "@@ -1467,7 +1467,8 @@ find_or_generate_expression (basic_block block, tree expr, tree stmts)\n       gcc_assert (UNARY_CLASS_P (genop)\n \t\t  || BINARY_CLASS_P (genop)\n \t\t  || COMPARISON_CLASS_P (genop)\n-\t\t  || REFERENCE_CLASS_P (genop));\n+\t\t  || REFERENCE_CLASS_P (genop)\n+\t\t  || TREE_CODE (genop) == CALL_EXPR);\n       genop = create_expression_by_pieces (block, genop, stmts);\n     }\n   return genop;"}]}