{"sha": "db80ee8e522ba28a9f253a56bd77ddc51926c216", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGI4MGVlOGU1MjJiYTI4YTlmMjUzYTU2YmQ3N2RkYzUxOTI2YzIxNg==", "commit": {"author": {"name": "Zack Weinberg", "email": "zack@wolery.cumb.org", "date": "2000-01-31T07:28:05Z"}, "committer": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2000-01-31T07:28:05Z"}, "message": "386bsd.h, [...]: Remove -Di386 -Acpu(i386) -Amachine(i386) from CPP_PREDEFINES.\n\n\t* i386/386bsd.h, i386/beos-pe.h, i386/bsd386.h, i386/crtdll.h,\n\ti386/cygwin.h, i386/dgux.h, i386/djgpp-rtems.h, i386/djgpp.h,\n\ti386/freebsd.h, i386/gnu.h, i386/i386-aout.h, i386/i386-coff.h,\n\ti386/i386-interix.h, i386/i386elf.h, i386/linux.h, i386/lynx-ng.h,\n\ti386/lynx.h, i386/mach.h, i386/mingw32.h, i386/moss.h,\n\ti386/netbsd.h, i386/next.h, i386/openbsd.h, i386/osf1elf.h,\n\ti386/ptx4-i.h, i386/rtems.h, i386/rtemself.h, i386/sco.h,\n\ti386/sequent.h, i386/sun.h, i386/sysv4.h, i386/uwin.h, i386/vsta.h,\n\ti386/vxi386.h, i386/win-nt.h, i386/win32.h:\n\tRemove -Di386 -Acpu(i386) -Amachine(i386) from CPP_PREDEFINES.\n\n\t* i386/osf1elf.h, i386/scodbx.h, i386/seq-sysv3.h, i386/sysv5.h:\n\tAdd %(cpp_cpu) to CPP_SPEC.\n\n\t* i386/osf1elf.h, i386/osfelf.h, i386/osfrose.h:\n\tAdd %(cc1_cpu) to CC1_SPEC.\n\nFrom-SVN: r31710", "tree": {"sha": "2c70fed6befeda0142dbaed9d2b62e6e805175bf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2c70fed6befeda0142dbaed9d2b62e6e805175bf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/db80ee8e522ba28a9f253a56bd77ddc51926c216", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db80ee8e522ba28a9f253a56bd77ddc51926c216", "html_url": "https://github.com/Rust-GCC/gccrs/commit/db80ee8e522ba28a9f253a56bd77ddc51926c216", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db80ee8e522ba28a9f253a56bd77ddc51926c216/comments", "author": null, "committer": null, "parents": [{"sha": "105a8d1c0e74ad97d97115286a5b1c80a8967a2a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/105a8d1c0e74ad97d97115286a5b1c80a8967a2a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/105a8d1c0e74ad97d97115286a5b1c80a8967a2a"}], "stats": {"total": 152, "additions": 84, "deletions": 68}, "files": [{"sha": "92bd4efc00c8cc7c45cd404c58d1cbe54f3bc5f1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db80ee8e522ba28a9f253a56bd77ddc51926c216/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db80ee8e522ba28a9f253a56bd77ddc51926c216/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=db80ee8e522ba28a9f253a56bd77ddc51926c216", "patch": "@@ -1,3 +1,22 @@\n+2000-01-30  Zack Weinberg  <zack@wolery.cumb.org>\n+\n+\t* i386/386bsd.h, i386/beos-pe.h, i386/bsd386.h, i386/crtdll.h,\n+\ti386/cygwin.h, i386/dgux.h, i386/djgpp-rtems.h, i386/djgpp.h,\n+\ti386/freebsd.h, i386/gnu.h, i386/i386-aout.h, i386/i386-coff.h,\n+\ti386/i386-interix.h, i386/i386elf.h, i386/linux.h, i386/lynx-ng.h,\n+\ti386/lynx.h, i386/mach.h, i386/mingw32.h, i386/moss.h,\n+\ti386/netbsd.h, i386/next.h, i386/openbsd.h, i386/osf1elf.h,\n+\ti386/ptx4-i.h, i386/rtems.h, i386/rtemself.h, i386/sco.h,\n+\ti386/sequent.h, i386/sun.h, i386/sysv4.h, i386/uwin.h, i386/vsta.h,\n+\ti386/vxi386.h, i386/win-nt.h, i386/win32.h:\n+\tRemove -Di386 -Acpu(i386) -Amachine(i386) from CPP_PREDEFINES.\n+\t\n+\t* i386/osf1elf.h, i386/scodbx.h, i386/seq-sysv3.h, i386/sysv5.h:\n+\tAdd %(cpp_cpu) to CPP_SPEC.\n+\n+\t* i386/osf1elf.h, i386/osfelf.h, i386/osfrose.h:\n+\tAdd %(cc1_cpu) to CC1_SPEC.\n+\n 2000-01-28  Ulrich Drepper  <drepper@redhat.com>\n \n \t* c-decl.c (c_decode_option): Accept optional numeric argument to"}, {"sha": "111a89230f7f5be8611cafcfeaf7b04bea9dff53", "filename": "gcc/config/i386/386bsd.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db80ee8e522ba28a9f253a56bd77ddc51926c216/gcc%2Fconfig%2Fi386%2F386bsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db80ee8e522ba28a9f253a56bd77ddc51926c216/gcc%2Fconfig%2Fi386%2F386bsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2F386bsd.h?ref=db80ee8e522ba28a9f253a56bd77ddc51926c216", "patch": "@@ -9,7 +9,7 @@\n #include \"i386/perform.h\"\n \n #undef CPP_PREDEFINES\n-#define CPP_PREDEFINES \"-Dunix -Di386 -D____386BSD____ -D__386BSD__ -DBSD_NET2 -Asystem(unix) -Asystem(bsd) -Acpu(i386) -Amachine(i386)\"\n+#define CPP_PREDEFINES \"-Dunix -D____386BSD____ -D__386BSD__ -DBSD_NET2 -Asystem(unix) -Asystem(bsd)\"\n \n /* Like the default, except no -lg.  */\n #define LIB_SPEC \"%{!p:%{!pg:-lc}}%{p:-lc_p}%{pg:-lc_p}\""}, {"sha": "7184b91918a0a1f8f49260a7d9861c8b279fc151", "filename": "gcc/config/i386/beos-pe.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db80ee8e522ba28a9f253a56bd77ddc51926c216/gcc%2Fconfig%2Fi386%2Fbeos-pe.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db80ee8e522ba28a9f253a56bd77ddc51926c216/gcc%2Fconfig%2Fi386%2Fbeos-pe.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fbeos-pe.h?ref=db80ee8e522ba28a9f253a56bd77ddc51926c216", "patch": "@@ -39,11 +39,11 @@ Boston, MA 02111-1307, USA. */\n    existing args.  */\n \n #undef CPP_PREDEFINES\n-#define CPP_PREDEFINES \"-D__BEOS__ -D__INTEL__ -Di386 -D_X86_=1 \\\n+#define CPP_PREDEFINES \"-D__BEOS__ -D__INTEL__ -D_X86_=1 \\\n -D__stdcall=__attribute__((__stdcall__)) \\\n -D__cdecl=__attribute__((__cdecl__)) \\\n -D__declspec(x)=__attribute__((x)) \\\n--Asystem(beos) -Acpu(i386) -Amachine(i386)\"\n+-Asystem(beos)\"\n \n #undef CPP_SPEC\n #define CPP_SPEC \"-remap %(cpp_cpu) %{posix:-D_POSIX_SOURCE}\""}, {"sha": "0cae90e68c77b5e404a1b951c4aa1814450485ff", "filename": "gcc/config/i386/bsd386.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db80ee8e522ba28a9f253a56bd77ddc51926c216/gcc%2Fconfig%2Fi386%2Fbsd386.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db80ee8e522ba28a9f253a56bd77ddc51926c216/gcc%2Fconfig%2Fi386%2Fbsd386.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fbsd386.h?ref=db80ee8e522ba28a9f253a56bd77ddc51926c216", "patch": "@@ -6,7 +6,8 @@\n /* We exist mostly to add -Dbsdi and such to the predefines. */\n \n #undef CPP_PREDEFINES\n-#define CPP_PREDEFINES \"-Dunix -Di386 -Dbsdi -D__i386__ -D__bsdi__ -D____386BSD____ -D__386BSD__ -DBSD_NET2 -Asystem(unix) -Asystem(bsd) -Acpu(i386) -Amachine(i386)\"\n+#define CPP_PREDEFINES \"-Dunix -Dbsdi -D____386BSD____ -D__386BSD__\\\n+ -DBSD_NET2 -Asystem(unix) -Asystem(bsd)\"\n \n #undef WCHAR_TYPE\n #define WCHAR_TYPE \"int\""}, {"sha": "db479fad4ddc03a8a72b477b4cfca9e60ffa5554", "filename": "gcc/config/i386/crtdll.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db80ee8e522ba28a9f253a56bd77ddc51926c216/gcc%2Fconfig%2Fi386%2Fcrtdll.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db80ee8e522ba28a9f253a56bd77ddc51926c216/gcc%2Fconfig%2Fi386%2Fcrtdll.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fcrtdll.h?ref=db80ee8e522ba28a9f253a56bd77ddc51926c216", "patch": "@@ -23,13 +23,13 @@ the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA. */\n \n #undef CPP_PREDEFINES\n-#define CPP_PREDEFINES \"-Di386 -D_WIN32 -DWIN32 -D__WIN32__ \\\n+#define CPP_PREDEFINES \"-D_WIN32 -DWIN32 \\\n   -D__MINGW32__=0.2 -DWINNT  -D_X86_=1 -D__STDC__=1\\\n   -D__stdcall=__attribute__((__stdcall__)) \\\n   -D_stdcall=__attribute__((__stdcall__)) \\\n   -D__cdecl=__attribute__((__cdecl__)) \\\n   -D__declspec(x)=__attribute__((x)) \\\n-  -Asystem(winnt) -Acpu(i386) -Amachine(i386)\"\n+  -Asystem(winnt)\"\n \n #undef LIBGCC_SPEC\n #define LIBGCC_SPEC \\"}, {"sha": "5152fc2d2e8c1c0d179b72493639d39afc48547f", "filename": "gcc/config/i386/cygwin.h", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db80ee8e522ba28a9f253a56bd77ddc51926c216/gcc%2Fconfig%2Fi386%2Fcygwin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db80ee8e522ba28a9f253a56bd77ddc51926c216/gcc%2Fconfig%2Fi386%2Fcygwin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fcygwin.h?ref=db80ee8e522ba28a9f253a56bd77ddc51926c216", "patch": "@@ -63,16 +63,13 @@ Boston, MA 02111-1307, USA. */\n    is that args are not accumulated: each new appearance would clobber any\n    existing args.  */\n \n-#ifdef CPP_PREDEFINES\n #undef CPP_PREDEFINES\n-#endif\n-\n-#define CPP_PREDEFINES \"-Di386 -D_WIN32 \\\n+#define CPP_PREDEFINES \"-D_WIN32 \\\n   -DWINNT  -D_X86_=1 -D__STDC__=1\\\n   -D__stdcall=__attribute__((__stdcall__)) \\\n   -D__cdecl=__attribute__((__cdecl__)) \\\n   -D__declspec(x)=__attribute__((x)) \\\n-  -Asystem(winnt) -Acpu(i386) -Amachine(i386)\"\n+  -Asystem(winnt)\"\n \n /* Normally, -lgcc is not needed since everything in it is in the DLL, but we\n    want to allow things to be added to it when installing new versions of"}, {"sha": "780777c4c48dc053dc096b3b39e72e47c3465d0c", "filename": "gcc/config/i386/dgux.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db80ee8e522ba28a9f253a56bd77ddc51926c216/gcc%2Fconfig%2Fi386%2Fdgux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db80ee8e522ba28a9f253a56bd77ddc51926c216/gcc%2Fconfig%2Fi386%2Fdgux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fdgux.h?ref=db80ee8e522ba28a9f253a56bd77ddc51926c216", "patch": "@@ -26,7 +26,7 @@ Boston, MA 02111-1307, USA.  */\n #include \"i386/sysv4.h\"\n \n #ifndef VERSION_INFO2\n-#define VERSION_INFO2   \"$Revision: 1.7 $\"\n+#define VERSION_INFO2   \"$Revision: 1.8 $\"\n #endif\n \n #ifndef VERSION_STRING\n@@ -144,15 +144,15 @@ Boston, MA 02111-1307, USA.  */\n    operate without installing the header files.  */\n \n #undef\tCPP_PREDEFINES\n-#define CPP_PREDEFINES \"-Di386 -D__ix86 -Dunix -DDGUX -D__CLASSIFY_TYPE__=2\\\n-   -Asystem(unix) -Asystem(svr4) -Acpu(i386) -Amachine(i386)\"\n+#define CPP_PREDEFINES \"-D__ix86 -Dunix -DDGUX -D__CLASSIFY_TYPE__=2\\\n+   -Asystem(unix) -Asystem(svr4)\"\n \n    /*\n      If not -ansi, -traditional, or restricting include files to one\n      specific source target, specify full DG/UX features.\n    */\n #undef\tCPP_SPEC\n-#define\tCPP_SPEC \"%{!ansi:%{!traditional:-D__OPEN_NAMESPACE__}}\"\n+#define\tCPP_SPEC \"%(cpp_cpu) %{!ansi:%{!traditional:-D__OPEN_NAMESPACE__}}\"\n \n /* Assembler support (legends for mxdb).  */\n #undef\tASM_SPEC"}, {"sha": "a4bd03d9f66abf66483d7a76bd19adee7e37d1a2", "filename": "gcc/config/i386/djgpp-rtems.h", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db80ee8e522ba28a9f253a56bd77ddc51926c216/gcc%2Fconfig%2Fi386%2Fdjgpp-rtems.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db80ee8e522ba28a9f253a56bd77ddc51926c216/gcc%2Fconfig%2Fi386%2Fdjgpp-rtems.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fdjgpp-rtems.h?ref=db80ee8e522ba28a9f253a56bd77ddc51926c216", "patch": "@@ -28,9 +28,8 @@ Boston, MA 02111-1307, USA.  */\n #ifdef CPP_PREDEFINES\n #undef CPP_PREDEFINES\n #endif\n-#define CPP_PREDEFINES \"-Dunix -Di386 -DGO32 -DDJGPP=2 -DMSDOS \\\n-  -Asystem(unix) -Asystem(msdos) -Acpu(i386) -Amachine(i386) \\\n-  -Asystem(rtems)\"\n+#define CPP_PREDEFINES \"-Dunix -DGO32 -DDJGPP=2 -DMSDOS \\\n+  -Asystem(unix) -Asystem(msdos) -Asystem(rtems)\"\n \n /* Generate calls to memcpy, memcmp and memset.  */\n #ifndef TARGET_MEM_FUNCTIONS"}, {"sha": "4801c5d8819be3d36ce7e3bc118413d7d5087e6c", "filename": "gcc/config/i386/djgpp.h", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db80ee8e522ba28a9f253a56bd77ddc51926c216/gcc%2Fconfig%2Fi386%2Fdjgpp.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db80ee8e522ba28a9f253a56bd77ddc51926c216/gcc%2Fconfig%2Fi386%2Fdjgpp.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fdjgpp.h?ref=db80ee8e522ba28a9f253a56bd77ddc51926c216", "patch": "@@ -56,11 +56,9 @@ Boston, MA 02111-1307, USA.  */\n         (((NAME)[0] == '/') || ((NAME)[0] == '\\\\') || \\\n         (((NAME)[0] >= 'A') && ((NAME)[0] <= 'z') && ((NAME)[1] == ':')))\n \n-#ifdef CPP_PREDEFINES\n #undef CPP_PREDEFINES\n-#endif\n-#define CPP_PREDEFINES \"-Dunix -Di386 -DGO32 -DDJGPP=2 -DMSDOS \\\n-  -Asystem(unix) -Asystem(msdos) -Acpu(i386) -Amachine(i386)\"\n+#define CPP_PREDEFINES \"-Dunix -DGO32 -DDJGPP=2 -DMSDOS \\\n+  -Asystem(unix) -Asystem(msdos)\"\n \n /* We need to override link_command_spec in gcc.c so support -Tdjgpp.djl.\n    This cannot be done in LINK_SPECS as that LINK_SPECS is processed"}, {"sha": "b728ae2ae97c98f02c2b7938b117eb5266bcdeb1", "filename": "gcc/config/i386/freebsd-elf.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db80ee8e522ba28a9f253a56bd77ddc51926c216/gcc%2Fconfig%2Fi386%2Ffreebsd-elf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db80ee8e522ba28a9f253a56bd77ddc51926c216/gcc%2Fconfig%2Fi386%2Ffreebsd-elf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Ffreebsd-elf.h?ref=db80ee8e522ba28a9f253a56bd77ddc51926c216", "patch": "@@ -75,7 +75,8 @@ Boston, MA 02111-1307, USA.  */\n #define WCHAR_TYPE_SIZE BITS_PER_WORD\n     \n #undef CPP_PREDEFINES\n-#define CPP_PREDEFINES \"-Di386 -Dunix -D__ELF__ -D__FreeBSD__ -Asystem(unix) -Asystem(FreeBSD) -Acpu(i386) -Amachine(i386)\"\n+#define CPP_PREDEFINES \"-Dunix -D__ELF__ -D__FreeBSD__\\\n+ -Asystem(unix) -Asystem(bsd) -Asystem(FreeBSD)\"\n \n /* Provide a STARTFILE_SPEC appropriate for FreeBSD.  Here we add\n    the magical crtbegin.o file (see crtstuff.c) which provides part "}, {"sha": "a03b43ea093950ffb138d8f681b2f16e3bcf17da", "filename": "gcc/config/i386/freebsd.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db80ee8e522ba28a9f253a56bd77ddc51926c216/gcc%2Fconfig%2Fi386%2Ffreebsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db80ee8e522ba28a9f253a56bd77ddc51926c216/gcc%2Fconfig%2Fi386%2Ffreebsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Ffreebsd.h?ref=db80ee8e522ba28a9f253a56bd77ddc51926c216", "patch": "@@ -35,7 +35,8 @@ Boston, MA 02111-1307, USA.  */\n   (MASK_80387 | MASK_IEEE_FP | MASK_FLOAT_RETURNS | MASK_NO_FANCY_MATH_387)\n \n #undef CPP_PREDEFINES\n-#define CPP_PREDEFINES \"-Dunix -Di386 -D__FreeBSD__ -Asystem(unix) -Asystem(FreeBSD) -Acpu(i386) -Amachine(i386)\"\n+#define CPP_PREDEFINES \"-Dunix -D__FreeBSD__\\\n+ -Asystem(unix) -Asystem(bsd) -Asystem(FreeBSD)\"\n \n /* Like the default, except no -lg.  */\n #define LIB_SPEC \"%{!shared:%{!pg:-lc}%{pg:-lc_p}}\""}, {"sha": "11bca8c385f8e1bad42f9573e9ae2d79254ff1fc", "filename": "gcc/config/i386/gnu.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db80ee8e522ba28a9f253a56bd77ddc51926c216/gcc%2Fconfig%2Fi386%2Fgnu.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db80ee8e522ba28a9f253a56bd77ddc51926c216/gcc%2Fconfig%2Fi386%2Fgnu.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fgnu.h?ref=db80ee8e522ba28a9f253a56bd77ddc51926c216", "patch": "@@ -10,7 +10,7 @@\n #define TARGET_VERSION fprintf (stderr, \" (i386 GNU)\");\n \n #undef CPP_PREDEFINES\n-#define CPP_PREDEFINES \"-D__ELF__ -D__i386__ -DMACH -Asystem(mach) \\\n+#define CPP_PREDEFINES \"-D__ELF__ -DMACH -Asystem(mach) \\\n   -Dunix -Asystem(unix) -Asystem(posix) -D__GNU__ -Asystem(gnu)\"\n \n #undef CPP_SPEC"}, {"sha": "7385bec6d7c86d6a36d5981c495cbd16a69a174f", "filename": "gcc/config/i386/i386-aout.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db80ee8e522ba28a9f253a56bd77ddc51926c216/gcc%2Fconfig%2Fi386%2Fi386-aout.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db80ee8e522ba28a9f253a56bd77ddc51926c216/gcc%2Fconfig%2Fi386%2Fi386-aout.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-aout.h?ref=db80ee8e522ba28a9f253a56bd77ddc51926c216", "patch": "@@ -29,6 +29,6 @@ Boston, MA 02111-1307, USA.  */\n /* Specify predefined symbols in preprocessor.  */\n \n #undef CPP_PREDEFINES\n-#define CPP_PREDEFINES \"-Di386\"\n+#define CPP_PREDEFINES \"\"\n \n /* end of i386-aout.h */"}, {"sha": "2fddc3a0788fccf19557881ba438252e326082ca", "filename": "gcc/config/i386/i386-coff.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db80ee8e522ba28a9f253a56bd77ddc51926c216/gcc%2Fconfig%2Fi386%2Fi386-coff.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db80ee8e522ba28a9f253a56bd77ddc51926c216/gcc%2Fconfig%2Fi386%2Fi386-coff.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-coff.h?ref=db80ee8e522ba28a9f253a56bd77ddc51926c216", "patch": "@@ -27,7 +27,7 @@ Boston, MA 02111-1307, USA.  */\n /* Specify predefined symbols in preprocessor.  */\n \n #undef CPP_PREDEFINES\n-#define CPP_PREDEFINES \"-Di386\"\n+#define CPP_PREDEFINES \"\"\n \n /* We want to be able to get DBX debugging information via -gstabs.  */\n "}, {"sha": "9804ea3bd62197d513b54df65424849e67bd50d7", "filename": "gcc/config/i386/i386-interix.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db80ee8e522ba28a9f253a56bd77ddc51926c216/gcc%2Fconfig%2Fi386%2Fi386-interix.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db80ee8e522ba28a9f253a56bd77ddc51926c216/gcc%2Fconfig%2Fi386%2Fi386-interix.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-interix.h?ref=db80ee8e522ba28a9f253a56bd77ddc51926c216", "patch": "@@ -65,7 +65,7 @@ Boston, MA 02111-1307, USA.  */\n   -D_M_IX86=300 -D_X86_=1 \\\n   -D__stdcall=__attribute__((__stdcall__)) \\\n   -D__cdecl=__attribute__((__cdecl__)) \\\n-  -Asystem(unix) -Asystem(interix) -Asystem(interix) -Acpu(i386) -Amachine(i386)\"\n+  -Asystem(unix) -Asystem(interix) -Asystem(interix)\"\n \n #undef CPP_SPEC\n /* Write out the correct language type definition for the header files.  "}, {"sha": "40ea9db63b80f2d7111bb4a8e2a0ccf4f8607615", "filename": "gcc/config/i386/i386elf.h", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db80ee8e522ba28a9f253a56bd77ddc51926c216/gcc%2Fconfig%2Fi386%2Fi386elf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db80ee8e522ba28a9f253a56bd77ddc51926c216/gcc%2Fconfig%2Fi386%2Fi386elf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386elf.h?ref=db80ee8e522ba28a9f253a56bd77ddc51926c216", "patch": "@@ -34,18 +34,16 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n \n #define TARGET_DEFAULT (MASK_80387 | MASK_IEEE_FP | MASK_FLOAT_RETURNS)\n \n-/* The svr4 ABI for the i386 says that records and unions are returned\n+/* The ELF ABI for the i386 says that records and unions are returned\n    in memory.  */\n \n #undef RETURN_IN_MEMORY\n #define RETURN_IN_MEMORY(TYPE) \\\n   (TYPE_MODE (TYPE) == BLKmode)\n \n-/* Define which macros to predefine.  __svr4__ is our extension.  */\n /* This used to define X86, but james@bigtex.cactus.org says that\n    is supposed to be defined optionally by user programs--not by default.  */\n-#define CPP_PREDEFINES \\\n-  \"-D__i386__ -Acpu(i386) -Amachine(i386)\"\n+#define CPP_PREDEFINES \"\"\n \n #undef CPP_SPEC\n #define CPP_SPEC \"%(cpp_cpu)\""}, {"sha": "c661e37b119f2eab2ea98825cd326c11a3ac6e84", "filename": "gcc/config/i386/linux.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db80ee8e522ba28a9f253a56bd77ddc51926c216/gcc%2Fconfig%2Fi386%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db80ee8e522ba28a9f253a56bd77ddc51926c216/gcc%2Fconfig%2Fi386%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Flinux.h?ref=db80ee8e522ba28a9f253a56bd77ddc51926c216", "patch": "@@ -86,7 +86,7 @@ Boston, MA 02111-1307, USA.  */\n #define WCHAR_TYPE_SIZE BITS_PER_WORD\n     \n #undef CPP_PREDEFINES\n-#define CPP_PREDEFINES \"-D__ELF__ -Dunix -D__i386__ -Dlinux -Asystem(posix)\"\n+#define CPP_PREDEFINES \"-D__ELF__ -Dunix -Dlinux -Asystem(posix)\"\n \n #undef CPP_SPEC\n #ifdef USE_GNULIBC_1"}, {"sha": "3736ea5299e6ad4747d6428f81b14996b0817d7e", "filename": "gcc/config/i386/lynx-ng.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db80ee8e522ba28a9f253a56bd77ddc51926c216/gcc%2Fconfig%2Fi386%2Flynx-ng.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db80ee8e522ba28a9f253a56bd77ddc51926c216/gcc%2Fconfig%2Fi386%2Flynx-ng.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Flynx-ng.h?ref=db80ee8e522ba28a9f253a56bd77ddc51926c216", "patch": "@@ -22,7 +22,8 @@ Boston, MA 02111-1307, USA.  */\n #include <lynx-ng.h>\n \n #undef CPP_PREDEFINES\n-#define CPP_PREDEFINES \"-Dunix -Di386 -DI386 -DLynx -DIBITS32 -Asystem(unix) -Asystem(lynx) -Acpu(i386) -Amachine(i386)\"\n+#define CPP_PREDEFINES \"-Dunix -DI386 -DLynx -DIBITS32 \\\n+  -Asystem(unix) -Asystem(lynx)\"\n \n /* Provide required defaults for linker switches.  */\n "}, {"sha": "ca6f044d0ce581d3532f446d176fd1cbff0348a3", "filename": "gcc/config/i386/lynx.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db80ee8e522ba28a9f253a56bd77ddc51926c216/gcc%2Fconfig%2Fi386%2Flynx.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db80ee8e522ba28a9f253a56bd77ddc51926c216/gcc%2Fconfig%2Fi386%2Flynx.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Flynx.h?ref=db80ee8e522ba28a9f253a56bd77ddc51926c216", "patch": "@@ -22,7 +22,7 @@ Boston, MA 02111-1307, USA.  */\n #include <lynx.h>\n \n #undef CPP_PREDEFINES\n-#define CPP_PREDEFINES \"-Dunix -Di386 -DI386 -DLynx -DIBITS32 -Asystem(unix) -Asystem(lynx) -Acpu(i386) -Amachine(i386)\"\n+#define CPP_PREDEFINES \"-DI386 -DLynx -DIBITS32 -Asystem(unix) -Asystem(lynx)\"\n \n /* The prefix to add to user-visible assembler symbols. */\n "}, {"sha": "f0ede49c2ab41d97e84193812cb86b35b74a6330", "filename": "gcc/config/i386/mach.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db80ee8e522ba28a9f253a56bd77ddc51926c216/gcc%2Fconfig%2Fi386%2Fmach.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db80ee8e522ba28a9f253a56bd77ddc51926c216/gcc%2Fconfig%2Fi386%2Fmach.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fmach.h?ref=db80ee8e522ba28a9f253a56bd77ddc51926c216", "patch": "@@ -10,7 +10,7 @@\n #include \"i386/perform.h\"\n \n #undef CPP_PREDEFINES\n-#define CPP_PREDEFINES \"-Dunix -Di386 -DMACH -Asystem(unix) -Asystem(mach) -Acpu(i386) -Amachine(i386)\"\n+#define CPP_PREDEFINES \"-Dunix -DMACH -Asystem(unix) -Asystem(mach)\"\n \n /* Specify extra dir to search for include files.  */\n #define SYSTEM_INCLUDE_DIR \"/usr/mach/include\""}, {"sha": "4d445ea614627c06baa2979447d35f92cedfebd9", "filename": "gcc/config/i386/mingw32.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db80ee8e522ba28a9f253a56bd77ddc51926c216/gcc%2Fconfig%2Fi386%2Fmingw32.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db80ee8e522ba28a9f253a56bd77ddc51926c216/gcc%2Fconfig%2Fi386%2Fmingw32.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fmingw32.h?ref=db80ee8e522ba28a9f253a56bd77ddc51926c216", "patch": "@@ -30,13 +30,13 @@ Boston, MA 02111-1307, USA. */\n    only difference between the two should be __MSVCRT__ needed to \n    distinguish MSVC from CRTDLL runtime in mingw headers. */\n #undef CPP_PREDEFINES\n-#define CPP_PREDEFINES \"-Di386 -D_WIN32 -DWIN32 -D__WIN32__ \\\n-  -D__MINGW32__=0.2 -D__MSVCRT__ -DWINNT  -D_X86_=1 -D__STDC__=1\\\n+#define CPP_PREDEFINES \"-D_WIN32 -DWIN32 \\\n+  -D__MINGW32__=0.2 -D__MSVCRT__ -DWINNT -D_X86_=1 \\\n   -D__stdcall=__attribute__((__stdcall__)) \\\n   -D_stdcall=__attribute__((__stdcall__)) \\\n   -D__cdecl=__attribute__((__cdecl__)) \\\n   -D__declspec(x)=__attribute__((x)) \\\n-  -Asystem(winnt) -Acpu(i386) -Amachine(i386)\"\n+  -Asystem(winnt)\"\n \n /* Specific a different directory for the standard include files.  */\n #undef STANDARD_INCLUDE_DIR"}, {"sha": "215172d5b7ad7af823081c7fb18390a76e252993", "filename": "gcc/config/i386/moss.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db80ee8e522ba28a9f253a56bd77ddc51926c216/gcc%2Fconfig%2Fi386%2Fmoss.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db80ee8e522ba28a9f253a56bd77ddc51926c216/gcc%2Fconfig%2Fi386%2Fmoss.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fmoss.h?ref=db80ee8e522ba28a9f253a56bd77ddc51926c216", "patch": "@@ -23,7 +23,7 @@ Boston, MA 02111-1307, USA.  */\n #include \"i386/linux.h\"\n \n #undef CPP_PREDEFINES\n-#define CPP_PREDEFINES \"-D__ELF__ -Di386 -Dmoss -Asystem(posix) -Acpu(i386) -Amachine(i386)\"\n+#define CPP_PREDEFINES \"-D__ELF__ -Dmoss -Asystem(posix)\"\n \n #undef STARTFILE_SPEC\n #define STARTFILE_SPEC  \"crt0.o%s\""}, {"sha": "ce135ae342b344bc05f282d763fc83c5e909c6c8", "filename": "gcc/config/i386/netbsd.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db80ee8e522ba28a9f253a56bd77ddc51926c216/gcc%2Fconfig%2Fi386%2Fnetbsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db80ee8e522ba28a9f253a56bd77ddc51926c216/gcc%2Fconfig%2Fi386%2Fnetbsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fnetbsd.h?ref=db80ee8e522ba28a9f253a56bd77ddc51926c216", "patch": "@@ -15,7 +15,8 @@\n   (MASK_80387 | MASK_IEEE_FP | MASK_FLOAT_RETURNS | MASK_NO_FANCY_MATH_387)\n \n #undef CPP_PREDEFINES\n-#define CPP_PREDEFINES \"-Dunix -Di386 -D__NetBSD__ -Asystem(unix) -Asystem(NetBSD) -Acpu(i386) -Amachine(i386)\"\n+#define CPP_PREDEFINES \"-Dunix -D__NetBSD__ \\\n+ -Asystem(unix) -Asystem(bsd) -Asystem(NetBSD)\"\n \f\n #undef SIZE_TYPE\n #define SIZE_TYPE \"unsigned int\""}, {"sha": "566cba69fbc58d44ed64cf48f4c7bdf8815cd8ae", "filename": "gcc/config/i386/next.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db80ee8e522ba28a9f253a56bd77ddc51926c216/gcc%2Fconfig%2Fi386%2Fnext.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db80ee8e522ba28a9f253a56bd77ddc51926c216/gcc%2Fconfig%2Fi386%2Fnext.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fnext.h?ref=db80ee8e522ba28a9f253a56bd77ddc51926c216", "patch": "@@ -133,7 +133,8 @@ Boston, MA 02111-1307, USA.  */\n /* Names to predefine in the preprocessor for this target machine.  */\n \n #undef\tCPP_PREDEFINES\n-#define CPP_PREDEFINES \"-Di386 -DNeXT -Dunix -D__MACH__ -D__LITTLE_ENDIAN__ -D__ARCHITECTURE__=\\\"i386\\\" -Asystem(unix) -Asystem(mach) -Acpu(i386) -Amachine(i386)\"\n+#define CPP_PREDEFINES \"-DNeXT -Dunix -D__MACH__ -D__LITTLE_ENDIAN__ \\\n+  -D__ARCHITECTURE__=\\\"i386\\\" -Asystem(unix) -Asystem(mach)\"\n \n /* This accounts for the return pc and saved fp on the i386. */\n "}, {"sha": "1356484e6781ac405e6e98ce6b663ad8e4379206", "filename": "gcc/config/i386/openbsd.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db80ee8e522ba28a9f253a56bd77ddc51926c216/gcc%2Fconfig%2Fi386%2Fopenbsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db80ee8e522ba28a9f253a56bd77ddc51926c216/gcc%2Fconfig%2Fi386%2Fopenbsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fopenbsd.h?ref=db80ee8e522ba28a9f253a56bd77ddc51926c216", "patch": "@@ -37,7 +37,8 @@ Boston, MA 02111-1307, USA.  */\n   (MASK_80387 | MASK_IEEE_FP | MASK_FLOAT_RETURNS | MASK_NO_FANCY_MATH_387)\n \n /* Run-time target specifications */\n-#define CPP_PREDEFINES \"-D__unix__ -D__i386__ -D__OpenBSD__ -Asystem(unix) -Asystem(OpenBSD) -Acpu(i386) -Amachine(i386)\"\n+#define CPP_PREDEFINES \"-D__unix__ -D__OpenBSD__ \\\n+ -Asystem(unix) -Asystem(bsd) -Asystem(OpenBSD)\"\n \n /* Layout of source language data types.  */\n "}, {"sha": "f10f83b743755bf56b62179aaa5a3d3174d8c2ab", "filename": "gcc/config/i386/osf1elf.h", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db80ee8e522ba28a9f253a56bd77ddc51926c216/gcc%2Fconfig%2Fi386%2Fosf1elf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db80ee8e522ba28a9f253a56bd77ddc51926c216/gcc%2Fconfig%2Fi386%2Fosf1elf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fosf1elf.h?ref=db80ee8e522ba28a9f253a56bd77ddc51926c216", "patch": "@@ -18,6 +18,7 @@\n /* Note, -fpic and -fPIC are equivalent */\n #undef  CPP_SPEC\n #define CPP_SPEC \"\\\n+%(cpp_cpu)\n %{fpic: -D__SHARED__} %{fPIC: %{!fpic: -D__SHARED__}} \\\n %{.S:\t%{!ansi:%{!traditional:%{!traditional-cpp:%{!ftraditional: -traditional}}}}} \\\n %{.S:\t-D__LANGUAGE_ASSEMBLY %{!ansi:-DLANGUAGE_ASSEMBLY}} \\\n@@ -29,15 +30,16 @@\n \n /* -mmcount or -mno-mcount should be used with -pg or -p */\n #undef  CC1_SPEC\n-#define CC1_SPEC \"%{p: %{!mmcount: %{!mno-mcount: -mno-mcount }}} \\\n+#define CC1_SPEC \"%(cc1_cpu) %{p: %{!mmcount: %{!mno-mcount: -mno-mcount }}} \\\n %{!p: %{pg: %{!mmcount: %{!mno-mcount: -mno-mcount }}}}\"\n \n /* Note, -D__NO_UNDERSCORES__ -D__ELF__ are provided in the older version of\n    OSF/1 gcc. We keep them here, so that old /usr/include/i386/asm.h works.\n    */\n #undef CPP_PREDEFINES\n #define CPP_PREDEFINES \\\n-  \"-D__NO_UNDERSCORES__ -D__ELF__ -DOSF -DOSF1 -Di386 -Dunix -Asystem(xpg4) -Asystem(osf1) -Acpu(i386) -Amachine(i386)\"\n+  \"-D__NO_UNDERSCORES__ -D__ELF__ -DOSF -DOSF1 -Dunix \\\n+   -Asystem(unix) -Asystem(xpg4) -Asystem(osf1)\"\n \n /* current OSF/1 doesn't provide separate crti.o and gcrti.o (and also, crtn.o\n    and gcrtn.o) for profile.  */"}, {"sha": "cd7f7f96dc21e34a3b2d94e1370fa80f90f7f457", "filename": "gcc/config/i386/osfelf.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db80ee8e522ba28a9f253a56bd77ddc51926c216/gcc%2Fconfig%2Fi386%2Fosfelf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db80ee8e522ba28a9f253a56bd77ddc51926c216/gcc%2Fconfig%2Fi386%2Fosfelf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fosfelf.h?ref=db80ee8e522ba28a9f253a56bd77ddc51926c216", "patch": "@@ -40,7 +40,7 @@ Boston, MA 02111-1307, USA.  */\n \n /* Turn on -pic-extern by default for OSF/rose, -fpic for ELF.  */\n #undef  CC1_SPEC\n-#define CC1_SPEC \"\\\n+#define CC1_SPEC \"%(cc1_cpu) \\\n %{gline:%{!g:%{!g0:%{!g1:%{!g2: -g1}}}}} \\\n %{!melf: %{!mrose: -melf }} \\\n %{!mrose: %{!munderscores: %{!mno-underscores: -mno-underscores }} \\"}, {"sha": "e9b4d6ff13ce7bc77ba6eebfd203ab57230b9b5f", "filename": "gcc/config/i386/osfrose.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db80ee8e522ba28a9f253a56bd77ddc51926c216/gcc%2Fconfig%2Fi386%2Fosfrose.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db80ee8e522ba28a9f253a56bd77ddc51926c216/gcc%2Fconfig%2Fi386%2Fosfrose.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fosfrose.h?ref=db80ee8e522ba28a9f253a56bd77ddc51926c216", "patch": "@@ -104,7 +104,7 @@ Boston, MA 02111-1307, USA.  */\n \n /* Turn on -pic-extern by default for OSF/rose, -fpic for ELF.  */\n #undef  CC1_SPEC\n-#define CC1_SPEC \"\\\n+#define CC1_SPEC \"%(cc1_cpu) \\\n %{gline:%{!g:%{!g0:%{!g1:%{!g2: -g1}}}}} \\\n %{!melf: %{!mrose: -mrose }} \\\n %{melf: %{!munderscores: %{!mno-underscores: -mno-underscores }} \\"}, {"sha": "6b0a49ba6164231f0d3e66e8d4edea1077cc9772", "filename": "gcc/config/i386/ptx4-i.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db80ee8e522ba28a9f253a56bd77ddc51926c216/gcc%2Fconfig%2Fi386%2Fptx4-i.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db80ee8e522ba28a9f253a56bd77ddc51926c216/gcc%2Fconfig%2Fi386%2Fptx4-i.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fptx4-i.h?ref=db80ee8e522ba28a9f253a56bd77ddc51926c216", "patch": "@@ -40,7 +40,7 @@ Boston, MA 02111-1307, USA.  */\n /* This used to define X86, but james@bigtex.cactus.org says that\n    is supposed to be defined optionally by user programs--not by default.  */\n #define CPP_PREDEFINES \\\n-  \"-Di386 -Dunix -D_SEQUENT_ -Asystem(unix) -Asystem(ptx4) -Acpu(i386) -Amachine(i386)\"\n+  \"-Dunix -D_SEQUENT_ -Asystem(unix) -Asystem(ptx4)\"\n \n /* This is how to output assembly code to define a `float' constant.\n    We always have to use a .long pseudo-op to do this because the native"}, {"sha": "7ed279d963a15239ee64096e6f98e65d70c6c2c1", "filename": "gcc/config/i386/rtems.h", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db80ee8e522ba28a9f253a56bd77ddc51926c216/gcc%2Fconfig%2Fi386%2Frtems.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db80ee8e522ba28a9f253a56bd77ddc51926c216/gcc%2Fconfig%2Fi386%2Frtems.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Frtems.h?ref=db80ee8e522ba28a9f253a56bd77ddc51926c216", "patch": "@@ -24,8 +24,7 @@ Boston, MA 02111-1307, USA.  */\n /* Specify predefined symbols in preprocessor.  */\n \n #undef CPP_PREDEFINES\n-#define CPP_PREDEFINES \"-Di386 -Drtems -D__rtems__ \\\n-   -Asystem(rtems) -Acpu(i386) -Amachine(i386)\"\n+#define CPP_PREDEFINES \"-Drtems -D__rtems__ -Asystem(rtems)\"\n \n /* Generate calls to memcpy, memcmp and memset.  */\n #ifndef TARGET_MEM_FUNCTIONS"}, {"sha": "586fb78e80c0d77ae69f92d1c1f940ae95a48caf", "filename": "gcc/config/i386/rtemself.h", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db80ee8e522ba28a9f253a56bd77ddc51926c216/gcc%2Fconfig%2Fi386%2Frtemself.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db80ee8e522ba28a9f253a56bd77ddc51926c216/gcc%2Fconfig%2Fi386%2Frtemself.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Frtemself.h?ref=db80ee8e522ba28a9f253a56bd77ddc51926c216", "patch": "@@ -83,8 +83,7 @@ Boston, MA 02111-1307, USA.  */\n #define WCHAR_TYPE_SIZE BITS_PER_WORD\n     \n #undef CPP_PREDEFINES\n-#define CPP_PREDEFINES  \"-Di386 -Drtems -D__rtems__ \\\n-   -Asystem(rtems) -Acpu(i386) -Amachine(i386)\"\n+#define CPP_PREDEFINES  \"-Drtems -D__rtems__ -Asystem(rtems)\"\n \n /* Get perform_* macros to build libgcc.a.  */\n #include \"i386/perform.h\""}, {"sha": "c085480b700988a7ddf27e1d85e97097e88f227c", "filename": "gcc/config/i386/sco.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db80ee8e522ba28a9f253a56bd77ddc51926c216/gcc%2Fconfig%2Fi386%2Fsco.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db80ee8e522ba28a9f253a56bd77ddc51926c216/gcc%2Fconfig%2Fi386%2Fsco.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsco.h?ref=db80ee8e522ba28a9f253a56bd77ddc51926c216", "patch": "@@ -55,7 +55,7 @@ Boston, MA 02111-1307, USA.  */\n /* Specify predefined symbols in preprocessor.  */\n \n #undef CPP_PREDEFINES\n-#define CPP_PREDEFINES \"-Dunix -DM_UNIX -DM_I386 -DM_COFF -DM_WORDSWAP -Asystem(svr3)\"\n+#define CPP_PREDEFINES \"-DM_UNIX -DM_I386 -DM_COFF -DM_WORDSWAP -Asystem(svr3)\"\n \n #undef CPP_SPEC\n #define CPP_SPEC \"%(cpp_cpu) %{scointl:-DM_INTERNAT}\""}, {"sha": "bcbb48aed5e01e2751ac532e6de59550a0c93372", "filename": "gcc/config/i386/scodbx.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db80ee8e522ba28a9f253a56bd77ddc51926c216/gcc%2Fconfig%2Fi386%2Fscodbx.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db80ee8e522ba28a9f253a56bd77ddc51926c216/gcc%2Fconfig%2Fi386%2Fscodbx.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fscodbx.h?ref=db80ee8e522ba28a9f253a56bd77ddc51926c216", "patch": "@@ -53,7 +53,7 @@ Boston, MA 02111-1307, USA.  */\n #define CPP_PREDEFINES \"-Dunix -DM_UNIX -DM_I386 -DM_COFF -DM_WORDSWAP -Asystem(svr3)\"\n \n #undef CPP_SPEC\n-#define CPP_SPEC \" -Acpu(i386) -Amachine(i386) %{scointl:-DM_INTERNAT}\"\n+#define CPP_SPEC \"%(cpp_cpu) %{scointl:-DM_INTERNAT}\"\n \n /* This spec is used for telling cpp whether char is signed or not.  */\n "}, {"sha": "a1fab334738b98a45596c1870d588f31dda342cc", "filename": "gcc/config/i386/seq-sysv3.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db80ee8e522ba28a9f253a56bd77ddc51926c216/gcc%2Fconfig%2Fi386%2Fseq-sysv3.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db80ee8e522ba28a9f253a56bd77ddc51926c216/gcc%2Fconfig%2Fi386%2Fseq-sysv3.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fseq-sysv3.h?ref=db80ee8e522ba28a9f253a56bd77ddc51926c216", "patch": "@@ -19,7 +19,7 @@\n  %{fshared-data:-lpps -lseq} -lc crtend.o%s\"\n \n #undef CPP_SPEC\n-#define CPP_SPEC \"%{posix:-D_POSIX_SOURCE} -D_SEQUENT_=1\"\n+#define CPP_SPEC \"%(cpp_cpu) %{posix:-D_POSIX_SOURCE} -D_SEQUENT_=1\"\n \n /* Although the .init section is used, it is not automatically invoked.\n    This because the _start() function in /lib/crt0.o never calls anything"}, {"sha": "8e8fa3d46efe4c5e4def3f4b57e8dd0ca6caf915", "filename": "gcc/config/i386/sequent.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db80ee8e522ba28a9f253a56bd77ddc51926c216/gcc%2Fconfig%2Fi386%2Fsequent.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db80ee8e522ba28a9f253a56bd77ddc51926c216/gcc%2Fconfig%2Fi386%2Fsequent.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsequent.h?ref=db80ee8e522ba28a9f253a56bd77ddc51926c216", "patch": "@@ -33,7 +33,7 @@ Boston, MA 02111-1307, USA.  */\n \n /* Specify predefined symbols in preprocessor.  */\n \n-#define CPP_PREDEFINES \"-Dunix -Di386 -Dsequent -Asystem(unix) -Acpu(i386) -Amachine(i386)\"\n+#define CPP_PREDEFINES \"-Dunix -Dsequent -Asystem(unix)\"\n \n /* Pass -Z and -ZO options to the linker.  */\n "}, {"sha": "0cc2ae165cefceed3a5de094e3d3ca305621b18f", "filename": "gcc/config/i386/sun.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db80ee8e522ba28a9f253a56bd77ddc51926c216/gcc%2Fconfig%2Fi386%2Fsun.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db80ee8e522ba28a9f253a56bd77ddc51926c216/gcc%2Fconfig%2Fi386%2Fsun.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsun.h?ref=db80ee8e522ba28a9f253a56bd77ddc51926c216", "patch": "@@ -44,7 +44,7 @@ Boston, MA 02111-1307, USA.  */\n \n /* Specify predefined symbols in preprocessor.  */\n \n-#define CPP_PREDEFINES \"-Dunix -Di386 -Dsun386 -Dsun -Asystem(unix) -Asystem(bsd) -Acpu(i386) -Amachine(i386)\"\n+#define CPP_PREDEFINES \"-Dunix -Dsun386 -Dsun -Asystem(unix) -Asystem(bsd)\"\n \n /* Allow #sccs in preprocessor.  */\n "}, {"sha": "1bc6f048ffcbcefd07f3130adf6ca337d9930604", "filename": "gcc/config/i386/sysv4.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db80ee8e522ba28a9f253a56bd77ddc51926c216/gcc%2Fconfig%2Fi386%2Fsysv4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db80ee8e522ba28a9f253a56bd77ddc51926c216/gcc%2Fconfig%2Fi386%2Fsysv4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsysv4.h?ref=db80ee8e522ba28a9f253a56bd77ddc51926c216", "patch": "@@ -38,7 +38,7 @@ Boston, MA 02111-1307, USA.  */\n /* This used to define X86, but james@bigtex.cactus.org says that\n    is supposed to be defined optionally by user programs--not by default.  */\n #define CPP_PREDEFINES \\\n-  \"-Di386 -Dunix -D__svr4__ -Asystem(unix) -Asystem(svr4) -Acpu(i386) -Amachine(i386)\"\n+  \"-Dunix -D__svr4__ -Asystem(unix) -Asystem(svr4)\"\n \n /* This is how to output assembly code to define a `float' constant.\n    We always have to use a .long pseudo-op to do this because the native"}, {"sha": "e7e283e6bfdfb5175040ec917343e24eb0d8408c", "filename": "gcc/config/i386/sysv5.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db80ee8e522ba28a9f253a56bd77ddc51926c216/gcc%2Fconfig%2Fi386%2Fsysv5.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db80ee8e522ba28a9f253a56bd77ddc51926c216/gcc%2Fconfig%2Fi386%2Fsysv5.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsysv5.h?ref=db80ee8e522ba28a9f253a56bd77ddc51926c216", "patch": "@@ -33,4 +33,4 @@ Boston, MA 02111-1307, USA.  */\n \t%{!shared:%{!symbolic:-lc -lcrt}}\"\n \n #undef CPP_SPEC\n-#define CPP_SPEC \"%{pthread:-D_REENTRANT} %{pthreadT:-D_REENTRANT}\"\n+#define CPP_SPEC \"%(cpp_cpu) %{pthread:-D_REENTRANT} %{pthreadT:-D_REENTRANT}\""}, {"sha": "efa4bb8867b64ed3c42d5bbb757d1ebc62ed8083", "filename": "gcc/config/i386/uwin.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db80ee8e522ba28a9f253a56bd77ddc51926c216/gcc%2Fconfig%2Fi386%2Fuwin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db80ee8e522ba28a9f253a56bd77ddc51926c216/gcc%2Fconfig%2Fi386%2Fuwin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fuwin.h?ref=db80ee8e522ba28a9f253a56bd77ddc51926c216", "patch": "@@ -32,15 +32,15 @@ Boston, MA 02111-1307, USA. */\n #define MD_STARTFILE_PREFIX \"/usr/gnu/lib/\"\n \n #undef CPP_PREDEFINES\n-#define CPP_PREDEFINES \"-D__i386__ -D_WIN32 -D__WIN32__ \\\n+#define CPP_PREDEFINES \"-D_WIN32 -D__WIN32__ \\\n   -D_UWIN -DWINNT  -D_X86_=1 -D__STDC__=1 \\\n   -D__UWIN__ -D__MSVCRT__ \\\n   -D_STD_INCLUDE_DIR=mingw32 \\\n   -D__stdcall=__attribute__((__stdcall__)) \\\n   _D_stdcall=__attribute__((__stdcall__)) \\\n   -D__cdecl=__attribute__((__cdecl__)) \\\n   -D__declspec(x)=__attribute__((x)) \\\n-  -Asystem(winnt) -Acpu(i386) -Amachine(i386)\"\n+  -Asystem(winnt)\"\n \n #undef CPP_SPEC\n #define CPP_SPEC \"-remap %(cpp_cpu) %{posix:-D_POSIX_SOURCE} \\"}, {"sha": "401c262a793c6e4d7ca6d4f8ca8abdd71a742838", "filename": "gcc/config/i386/vsta.h", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db80ee8e522ba28a9f253a56bd77ddc51926c216/gcc%2Fconfig%2Fi386%2Fvsta.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db80ee8e522ba28a9f253a56bd77ddc51926c216/gcc%2Fconfig%2Fi386%2Fvsta.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fvsta.h?ref=db80ee8e522ba28a9f253a56bd77ddc51926c216", "patch": "@@ -26,8 +26,7 @@ Boston, MA 02111-1307, USA.  */\n #ifdef CPP_PREDEFINES\n #undef CPP_PREDEFINES\n #endif\n-#define CPP_PREDEFINES \"-Dunix -Di386 -DVSTA \\\n-  -Asystem(unix) -Asystem(vsta) -Acpu(i386) -Amachine(i386)\"\n+#define CPP_PREDEFINES \"-Dunix -DVSTA -Asystem(unix) -Asystem(vsta)\"\n \n #undef EXTRA_SECTIONS\n #define EXTRA_SECTIONS in_ctor, in_dtor"}, {"sha": "2df3b7fdb680c082159c245a380758344bc5c260", "filename": "gcc/config/i386/vxi386.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db80ee8e522ba28a9f253a56bd77ddc51926c216/gcc%2Fconfig%2Fi386%2Fvxi386.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db80ee8e522ba28a9f253a56bd77ddc51926c216/gcc%2Fconfig%2Fi386%2Fvxi386.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fvxi386.h?ref=db80ee8e522ba28a9f253a56bd77ddc51926c216", "patch": "@@ -40,7 +40,7 @@ Boston, MA 02111-1307, USA.  */\n #define HANDLE_SYSV_PRAGMA\n \n #undef CPP_PREDEFINES\n-#define CPP_PREDEFINES \"-D__vxworks -D__i386__\"\n+#define CPP_PREDEFINES \"-D__vxworks\"\n \n /* VxWorks does all the library stuff itself.  */\n "}, {"sha": "56eaeb6a2fc88b05f0a1ed8513a3581f04b54eb6", "filename": "gcc/config/i386/win-nt.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db80ee8e522ba28a9f253a56bd77ddc51926c216/gcc%2Fconfig%2Fi386%2Fwin-nt.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db80ee8e522ba28a9f253a56bd77ddc51926c216/gcc%2Fconfig%2Fi386%2Fwin-nt.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fwin-nt.h?ref=db80ee8e522ba28a9f253a56bd77ddc51926c216", "patch": "@@ -27,12 +27,12 @@ Boston, MA 02111-1307, USA. */\n #ifdef CPP_PREDEFINES\n #undef CPP_PREDEFINES\n #endif\n-#define CPP_PREDEFINES \"-Dunix -Di386 -DWIN32 -D_WIN32 \\\n+#define CPP_PREDEFINES \"-Dunix -DWIN32 -D_WIN32 \\\n   -DWINNT -D_M_IX86=300 -D_X86_=1 -D__STDC__=0 -DALMOST_STDC -D_MSC_VER=800 \\\n   -D__stdcall=__attribute__((__stdcall__)) \\\n   -D__cdecl=__attribute__((__cdecl__)) \\\n   -D_cdecl=__attribute__((__cdecl__)) \\\n-  -Asystem(unix) -Asystem(winnt) -Acpu(i386) -Amachine(i386)\"\n+  -Asystem(unix) -Asystem(winnt)\"\n \n #define SIZE_TYPE \"unsigned int\"\n #define PTRDIFF_TYPE \"int\""}, {"sha": "d31a18e63d5e2b27f18e8297a0ca756bf6b6e640", "filename": "gcc/config/i386/win32.h", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db80ee8e522ba28a9f253a56bd77ddc51926c216/gcc%2Fconfig%2Fi386%2Fwin32.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db80ee8e522ba28a9f253a56bd77ddc51926c216/gcc%2Fconfig%2Fi386%2Fwin32.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fwin32.h?ref=db80ee8e522ba28a9f253a56bd77ddc51926c216", "patch": "@@ -57,8 +57,7 @@ Boston, MA 02111-1307, USA. */\n \n \n #undef CPP_PREDEFINES\n-#define CPP_PREDEFINES \"-D_WIN32 \\\n-  -DWINNT  -D_X86_=1 -D__STDC__=1\\\n+#define CPP_PREDEFINES \"-D_WIN32 -DWINNT -D_X86_=1 \\\n   -D__stdcall=__attribute__((__stdcall__)) \\\n   -D__cdecl=__attribute__((__cdecl__)) \\\n   -Asystem(winnt)\""}]}