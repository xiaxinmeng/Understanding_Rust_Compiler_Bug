{"sha": "ac5dc795ad5d0d78956263ddbd525c4bc2a1f7a3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWM1ZGM3OTVhZDVkMGQ3ODk1NjI2M2RkYmQ1MjVjNGJjMmExZjdhMw==", "commit": {"author": {"name": "Paolo Bonzini", "email": "bonzini@gnu.org", "date": "2008-03-18T17:11:30Z"}, "committer": {"name": "Paolo Bonzini", "email": "bonzini@gcc.gnu.org", "date": "2008-03-18T17:11:30Z"}, "message": "expr.c (store_expr): Assume lang_hooks.reduce_bit_field_operations is true.\n\n2008-03-18  Paolo Bonzini  <bonzini@gnu.org>\n\n        * expr.c (store_expr): Assume lang_hooks.reduce_bit_field_operations\n        is true.\n        (expand_expr_real_1) <REDUCE_BIT_FIELD>: Don't look at ignore.\n        (expand_expr_real_1): Assume lang_hooks.reduce_bit_field_operations\n        is true.  Add \"&& !ignore\" condition to reduce_bit_field.  Modify\n        target after ignore has been set, and move there also the commputation\n        of subtarget and original_target.\n        * langhooks-def.h (LANG_HOOKS_REDUCE_BIT_FIELD_OPERATIONS): Delete.\n        (LANG_HOOKS_INITIALIZER): Remove it.\n        * langhooks.h (struct lang_hooks): Remove reduce_bit_field_operations.\n\nada:\n2008-03-18  Paolo Bonzini  <bonzini@gnu.org>\n\n        * misc.c (LANG_HOOKS_REDUCE_BIT_FIELD_OPERATIONS): Delete.\n\ncp:\n2008-03-18  Paolo Bonzini  <bonzini@gnu.org>\n\n        * cp-lang.c (LANG_HOOKS_REDUCE_BIT_FIELD_OPERATIONS): Delete.\n\nFrom-SVN: r133316", "tree": {"sha": "aeac937fae1469b6f5bd28ff19ae12702dc8fc49", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aeac937fae1469b6f5bd28ff19ae12702dc8fc49"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ac5dc795ad5d0d78956263ddbd525c4bc2a1f7a3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac5dc795ad5d0d78956263ddbd525c4bc2a1f7a3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ac5dc795ad5d0d78956263ddbd525c4bc2a1f7a3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac5dc795ad5d0d78956263ddbd525c4bc2a1f7a3/comments", "author": {"login": "bonzini", "id": 42082, "node_id": "MDQ6VXNlcjQyMDgy", "avatar_url": "https://avatars.githubusercontent.com/u/42082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bonzini", "html_url": "https://github.com/bonzini", "followers_url": "https://api.github.com/users/bonzini/followers", "following_url": "https://api.github.com/users/bonzini/following{/other_user}", "gists_url": "https://api.github.com/users/bonzini/gists{/gist_id}", "starred_url": "https://api.github.com/users/bonzini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bonzini/subscriptions", "organizations_url": "https://api.github.com/users/bonzini/orgs", "repos_url": "https://api.github.com/users/bonzini/repos", "events_url": "https://api.github.com/users/bonzini/events{/privacy}", "received_events_url": "https://api.github.com/users/bonzini/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b80280f2c568097c1da9aacd9b540f74ad91cf22", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b80280f2c568097c1da9aacd9b540f74ad91cf22", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b80280f2c568097c1da9aacd9b540f74ad91cf22"}], "stats": {"total": 67, "additions": 38, "deletions": 29}, "files": [{"sha": "3a093c129054699156c4acdb4539006bbd8b4d08", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac5dc795ad5d0d78956263ddbd525c4bc2a1f7a3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac5dc795ad5d0d78956263ddbd525c4bc2a1f7a3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ac5dc795ad5d0d78956263ddbd525c4bc2a1f7a3", "patch": "@@ -1,3 +1,16 @@\n+2008-03-18  Paolo Bonzini  <bonzini@gnu.org>\n+\n+        * expr.c (store_expr): Assume lang_hooks.reduce_bit_field_operations\n+        is true.\n+        (expand_expr_real_1) <REDUCE_BIT_FIELD>: Don't look at ignore.\n+        (expand_expr_real_1): Assume lang_hooks.reduce_bit_field_operations\n+        is true.  Add \"&& !ignore\" condition to reduce_bit_field.  Modify\n+        target after ignore has been set, and move there also the commputation\n+        of subtarget and original_target.\n+        * langhooks-def.h (LANG_HOOKS_REDUCE_BIT_FIELD_OPERATIONS): Delete.\n+        (LANG_HOOKS_INITIALIZER): Remove it.\n+        * langhooks.h (struct lang_hooks): Remove reduce_bit_field_operations.\n+\n 2008-03-18  Richard Guenther  <rguenther@suse.de>\n \n \t* tree-ssa-sccvn.c (visit_reference_op_load): If the lookup"}, {"sha": "9847af6633e4f7deb2f1107ea67502fc4c61cd96", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac5dc795ad5d0d78956263ddbd525c4bc2a1f7a3/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac5dc795ad5d0d78956263ddbd525c4bc2a1f7a3/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=ac5dc795ad5d0d78956263ddbd525c4bc2a1f7a3", "patch": "@@ -1,3 +1,7 @@\n+2008-03-18  Paolo Bonzini  <bonzini@gnu.org>\n+\n+        * misc.c (LANG_HOOKS_REDUCE_BIT_FIELD_OPERATIONS): Delete.\n+\t\n 2008-03-15  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n \n \t* gnat_rm.texi (Implementation Defined Characteristics)"}, {"sha": "fbb6b8ecb77c655d0020b5c0d317eeb67f0f5c5a", "filename": "gcc/ada/misc.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac5dc795ad5d0d78956263ddbd525c4bc2a1f7a3/gcc%2Fada%2Fmisc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac5dc795ad5d0d78956263ddbd525c4bc2a1f7a3/gcc%2Fada%2Fmisc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmisc.c?ref=ac5dc795ad5d0d78956263ddbd525c4bc2a1f7a3", "patch": "@@ -129,8 +129,6 @@ static tree gnat_type_max_size\t\t(const_tree);\n #define LANG_HOOKS_WRITE_GLOBALS\tgnat_write_global_declarations\n #undef  LANG_HOOKS_FINISH_INCOMPLETE_DECL\n #define LANG_HOOKS_FINISH_INCOMPLETE_DECL gnat_finish_incomplete_decl\n-#undef\tLANG_HOOKS_REDUCE_BIT_FIELD_OPERATIONS\n-#define LANG_HOOKS_REDUCE_BIT_FIELD_OPERATIONS true\n #undef  LANG_HOOKS_GET_ALIAS_SET\n #define LANG_HOOKS_GET_ALIAS_SET\tgnat_get_alias_set\n #undef  LANG_HOOKS_EXPAND_EXPR"}, {"sha": "a85346545c5e8a2123637150933fd5ddf678a7e3", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac5dc795ad5d0d78956263ddbd525c4bc2a1f7a3/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac5dc795ad5d0d78956263ddbd525c4bc2a1f7a3/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=ac5dc795ad5d0d78956263ddbd525c4bc2a1f7a3", "patch": "@@ -1,3 +1,7 @@\n+2008-03-18  Paolo Bonzini  <bonzini@gnu.org>\n+\n+        * cp-lang.c (LANG_HOOKS_REDUCE_BIT_FIELD_OPERATIONS): Delete.\n+\t\n 2008-03-17  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/35548"}, {"sha": "70709298e9a88e2397bbf8bebc4ba10aab75d669", "filename": "gcc/cp/cp-lang.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac5dc795ad5d0d78956263ddbd525c4bc2a1f7a3/gcc%2Fcp%2Fcp-lang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac5dc795ad5d0d78956263ddbd525c4bc2a1f7a3/gcc%2Fcp%2Fcp-lang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-lang.c?ref=ac5dc795ad5d0d78956263ddbd525c4bc2a1f7a3", "patch": "@@ -57,8 +57,6 @@ static enum classify_record cp_classify_record (tree type);\n #define LANG_HOOKS_FOLD_OBJ_TYPE_REF cp_fold_obj_type_ref\n #undef LANG_HOOKS_INIT_TS\n #define LANG_HOOKS_INIT_TS cp_init_ts\n-#undef LANG_HOOKS_REDUCE_BIT_FIELD_OPERATIONS\n-#define LANG_HOOKS_REDUCE_BIT_FIELD_OPERATIONS true\n \n /* Each front end provides its own lang hook initializer.  */\n const struct lang_hooks lang_hooks = LANG_HOOKS_INITIALIZER;"}, {"sha": "7e1a0ffa85bda0037955ced4929a14152665831c", "filename": "gcc/expr.c", "status": "modified", "additions": 17, "deletions": 19, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac5dc795ad5d0d78956263ddbd525c4bc2a1f7a3/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac5dc795ad5d0d78956263ddbd525c4bc2a1f7a3/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=ac5dc795ad5d0d78956263ddbd525c4bc2a1f7a3", "patch": "@@ -4484,9 +4484,8 @@ store_expr (tree exp, rtx target, int call_param_p, bool nontemporal)\n \t converting modes.  */\n       if (INTEGRAL_TYPE_P (TREE_TYPE (exp))\n \t  && TREE_TYPE (TREE_TYPE (exp)) == 0\n-\t  && (!lang_hooks.reduce_bit_field_operations\n-\t      || (GET_MODE_PRECISION (GET_MODE (target))\n-\t\t  == TYPE_PRECISION (TREE_TYPE (exp)))))\n+\t  && GET_MODE_PRECISION (GET_MODE (target))\n+\t     == TYPE_PRECISION (TREE_TYPE (exp)))\n \t{\n \t  if (TYPE_UNSIGNED (TREE_TYPE (exp))\n \t      != SUBREG_PROMOTED_UNSIGNED_P (target))\n@@ -7134,8 +7133,8 @@ expand_expr_real_1 (tree exp, rtx target, enum machine_mode tmode,\n   rtx subtarget, original_target;\n   int ignore;\n   tree context, subexp0, subexp1;\n-  bool reduce_bit_field = false;\n-#define REDUCE_BIT_FIELD(expr)\t(reduce_bit_field && !ignore\t\t  \\\n+  bool reduce_bit_field;\n+#define REDUCE_BIT_FIELD(expr)\t(reduce_bit_field\t\t\t  \\\n \t\t\t\t ? reduce_to_bit_field_precision ((expr), \\\n \t\t\t\t\t\t\t\t  target, \\\n \t\t\t\t\t\t\t\t  type)\t  \\\n@@ -7153,27 +7152,20 @@ expand_expr_real_1 (tree exp, rtx target, enum machine_mode tmode,\n       mode = TYPE_MODE (type);\n       unsignedp = TYPE_UNSIGNED (type);\n     }\n-  if (lang_hooks.reduce_bit_field_operations\n-      && TREE_CODE (type) == INTEGER_TYPE\n-      && GET_MODE_PRECISION (mode) > TYPE_PRECISION (type))\n-    {\n-      /* An operation in what may be a bit-field type needs the\n-\t result to be reduced to the precision of the bit-field type,\n-\t which is narrower than that of the type's mode.  */\n-      reduce_bit_field = true;\n-      if (modifier == EXPAND_STACK_PARM)\n-\ttarget = 0;\n-    }\n \n-  /* Use subtarget as the target for operand 0 of a binary operation.  */\n-  subtarget = get_subtarget (target);\n-  original_target = target;\n   ignore = (target == const0_rtx\n \t    || ((code == NON_LVALUE_EXPR || code == NOP_EXPR\n \t\t || code == CONVERT_EXPR || code == COND_EXPR\n \t\t || code == VIEW_CONVERT_EXPR)\n \t\t&& TREE_CODE (type) == VOID_TYPE));\n \n+  /* An operation in what may be a bit-field type needs the\n+     result to be reduced to the precision of the bit-field type,\n+     which is narrower than that of the type's mode.  */\n+  reduce_bit_field = (!ignore\n+\t\t      && TREE_CODE (type) == INTEGER_TYPE\n+\t\t      && GET_MODE_PRECISION (mode) > TYPE_PRECISION (type));\n+\n   /* If we are going to ignore this result, we need only do something\n      if there is a side-effect somewhere in the expression.  If there\n      is, short-circuit the most common cases here.  Note that we must\n@@ -7222,6 +7214,12 @@ expand_expr_real_1 (tree exp, rtx target, enum machine_mode tmode,\n       target = 0;\n     }\n \n+  if (reduce_bit_field && modifier == EXPAND_STACK_PARM)\n+    target = 0;\n+\n+  /* Use subtarget as the target for operand 0 of a binary operation.  */\n+  subtarget = get_subtarget (target);\n+  original_target = target;\n \n   switch (code)\n     {"}, {"sha": "bd3fdca6c385559b8646557d5a126f6aee9100a5", "filename": "gcc/langhooks-def.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac5dc795ad5d0d78956263ddbd525c4bc2a1f7a3/gcc%2Flanghooks-def.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac5dc795ad5d0d78956263ddbd525c4bc2a1f7a3/gcc%2Flanghooks-def.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flanghooks-def.h?ref=ac5dc795ad5d0d78956263ddbd525c4bc2a1f7a3", "patch": "@@ -97,7 +97,6 @@ extern void lhd_omp_firstprivatize_type_sizes (struct gimplify_omp_ctx *,\n #define LANG_HOOKS_STATICP\t\tlhd_staticp\n #define LANG_HOOKS_DUP_LANG_SPECIFIC_DECL lhd_do_nothing_t\n #define LANG_HOOKS_SET_DECL_ASSEMBLER_NAME lhd_set_decl_assembler_name\n-#define LANG_HOOKS_REDUCE_BIT_FIELD_OPERATIONS true\n #define LANG_HOOKS_NO_BODY_BLOCKS\tfalse\n #define LANG_HOOKS_PRINT_STATISTICS\tlhd_do_nothing\n #define LANG_HOOKS_PRINT_XNODE\t\tlhd_print_tree_nothing\n@@ -257,7 +256,6 @@ extern tree lhd_make_node (enum tree_code);\n   LANG_HOOKS_STATICP, \\\n   LANG_HOOKS_DUP_LANG_SPECIFIC_DECL, \\\n   LANG_HOOKS_SET_DECL_ASSEMBLER_NAME, \\\n-  LANG_HOOKS_REDUCE_BIT_FIELD_OPERATIONS, \\\n   LANG_HOOKS_NO_BODY_BLOCKS, \\\n   LANG_HOOKS_PRINT_STATISTICS, \\\n   LANG_HOOKS_PRINT_XNODE, \\"}, {"sha": "3ee23f69c0ffdb7aeb7cc7a9b438d628ab44adae", "filename": "gcc/langhooks.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac5dc795ad5d0d78956263ddbd525c4bc2a1f7a3/gcc%2Flanghooks.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac5dc795ad5d0d78956263ddbd525c4bc2a1f7a3/gcc%2Flanghooks.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flanghooks.h?ref=ac5dc795ad5d0d78956263ddbd525c4bc2a1f7a3", "patch": "@@ -329,10 +329,6 @@ struct lang_hooks\n      assembler does not talk about it.  */\n   void (*set_decl_assembler_name) (tree);\n \n-  /* Nonzero if operations on types narrower than their mode should\n-     have their results reduced to the precision of the type.  */\n-  bool reduce_bit_field_operations;\n-\n   /* Nonzero if this front end does not generate a dummy BLOCK between\n      the outermost scope of the function and the FUNCTION_DECL.  See\n      is_body_block in stmt.c, and its callers.  */"}]}