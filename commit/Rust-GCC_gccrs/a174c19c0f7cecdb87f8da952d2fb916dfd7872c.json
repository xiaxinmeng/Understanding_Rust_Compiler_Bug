{"sha": "a174c19c0f7cecdb87f8da952d2fb916dfd7872c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTE3NGMxOWMwZjdjZWNkYjg3ZjhkYTk1MmQyZmI5MTZkZmQ3ODcyYw==", "commit": {"author": {"name": "Vladimir Makarov", "email": "vmakarov@redhat.com", "date": "2009-01-09T17:52:03Z"}, "committer": {"name": "Vladimir Makarov", "email": "vmakarov@gcc.gnu.org", "date": "2009-01-09T17:52:03Z"}, "message": "re PR rtl-optimization/38495 (ACATS tests cxa4004 cxa4005 cxa4026 fail)\n\n2008-01-09  Vladimir Makarov  <vmakarov@redhat.com>\n\n\tPR rtl-optimization/38495\n\t* ira-emit.c (print_move_list, ira_debug_move_list): New\n\tfunctions.\n\t(add_range_and_copies_from_move_list): Print all added ranges.\n\tAdd ranges to memory optimized destination.\n\nFrom-SVN: r143214", "tree": {"sha": "cc3de1bf580b8cc5cf02b7cf216c96d081bf646a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cc3de1bf580b8cc5cf02b7cf216c96d081bf646a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a174c19c0f7cecdb87f8da952d2fb916dfd7872c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a174c19c0f7cecdb87f8da952d2fb916dfd7872c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a174c19c0f7cecdb87f8da952d2fb916dfd7872c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a174c19c0f7cecdb87f8da952d2fb916dfd7872c/comments", "author": {"login": "vnmakarov", "id": 9855671, "node_id": "MDQ6VXNlcjk4NTU2NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/9855671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vnmakarov", "html_url": "https://github.com/vnmakarov", "followers_url": "https://api.github.com/users/vnmakarov/followers", "following_url": "https://api.github.com/users/vnmakarov/following{/other_user}", "gists_url": "https://api.github.com/users/vnmakarov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vnmakarov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vnmakarov/subscriptions", "organizations_url": "https://api.github.com/users/vnmakarov/orgs", "repos_url": "https://api.github.com/users/vnmakarov/repos", "events_url": "https://api.github.com/users/vnmakarov/events{/privacy}", "received_events_url": "https://api.github.com/users/vnmakarov/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "32dbfb3c17b32e39f92a729061641cbff61af7e9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/32dbfb3c17b32e39f92a729061641cbff61af7e9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/32dbfb3c17b32e39f92a729061641cbff61af7e9"}], "stats": {"total": 61, "additions": 48, "deletions": 13}, "files": [{"sha": "d7cebcfcb3f3d21772a87d385f23e6f5e027baba", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a174c19c0f7cecdb87f8da952d2fb916dfd7872c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a174c19c0f7cecdb87f8da952d2fb916dfd7872c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a174c19c0f7cecdb87f8da952d2fb916dfd7872c", "patch": "@@ -1,3 +1,11 @@\n+2008-01-09  Vladimir Makarov  <vmakarov@redhat.com>\n+\n+\tPR rtl-optimization/38495\n+\t* ira-emit.c (print_move_list, ira_debug_move_list): New\n+\tfunctions.\n+\t(add_range_and_copies_from_move_list): Print all added ranges.\n+\tAdd ranges to memory optimized destination.\n+\n 2009-01-09  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/38686"}, {"sha": "f5247185d0a68270c199dcd4401bbe39bb84799e", "filename": "gcc/ira-emit.c", "status": "modified", "additions": 40, "deletions": 13, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a174c19c0f7cecdb87f8da952d2fb916dfd7872c/gcc%2Fira-emit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a174c19c0f7cecdb87f8da952d2fb916dfd7872c/gcc%2Fira-emit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fira-emit.c?ref=a174c19c0f7cecdb87f8da952d2fb916dfd7872c", "patch": "@@ -129,6 +129,26 @@ eq_move_lists_p (move_t list1, move_t list2)\n   return list1 == list2;\n }\n \n+/* Print move list LIST into file F.  */\n+static void\n+print_move_list (FILE *f, move_t list)\n+{\n+  for (; list != NULL; list = list->next)\n+    fprintf (f, \" a%dr%d->a%dr%d\",\n+\t     ALLOCNO_NUM (list->from), ALLOCNO_REGNO (list->from),\n+\t     ALLOCNO_NUM (list->to), ALLOCNO_REGNO (list->to));\n+  fprintf (f, \"\\n\");\n+}\n+\n+extern void ira_debug_move_list (move_t list);\n+\n+/* Print move list LIST into stderr.  */\n+void\n+ira_debug_move_list (move_t list)\n+{\n+  print_move_list (stderr, list);\n+}\n+\n /* This recursive function changes pseudo-registers in *LOC if it is\n    necessary.  The function returns TRUE if a change was done.  */\n static bool\n@@ -945,7 +965,14 @@ add_range_and_copies_from_move_list (move_t list, ira_loop_tree_node_t node,\n \t\t     REGNO (ALLOCNO_REG (from)));\n \t}\n       else\n-\tr->finish = ira_max_point;\n+\t{\n+\t  r->finish = ira_max_point;\n+\t  if (internal_flag_ira_verbose > 2 && ira_dump_file != NULL)\n+\t    fprintf (ira_dump_file,\n+\t\t     \"    Adding range [%d..%d] to allocno a%dr%d\\n\",\n+\t\t     r->start, ira_max_point, ALLOCNO_NUM (from),\n+\t\t     REGNO (ALLOCNO_REG (from)));\n+\t}\n       ira_max_point++;\n       ALLOCNO_LIVE_RANGES (to)\n \t= ira_create_allocno_live_range (to, ira_max_point, -1,\n@@ -968,18 +995,18 @@ add_range_and_copies_from_move_list (move_t list, ira_loop_tree_node_t node,\n   EXECUTE_IF_SET_IN_BITMAP (live_through, FIRST_PSEUDO_REGISTER, regno, bi)\n     {\n       a = node->regno_allocno_map[regno];\n-      if (ALLOCNO_MEM_OPTIMIZED_DEST (a) == NULL)\n-\t{\n-\t  ALLOCNO_LIVE_RANGES (a)\n-\t    = ira_create_allocno_live_range (a, start, ira_max_point - 1,\n-\t\t\t\t\t     ALLOCNO_LIVE_RANGES (a));\n-\t  if (internal_flag_ira_verbose > 2 && ira_dump_file != NULL)\n-\t    fprintf\n-\t      (ira_dump_file,\n-\t       \"    Adding range [%d..%d] to live through allocno a%dr%d\\n\",\n-\t       start, ira_max_point - 1, ALLOCNO_NUM (a),\n-\t       REGNO (ALLOCNO_REG (a)));\n-\t}\n+      if ((to = ALLOCNO_MEM_OPTIMIZED_DEST (a)) != NULL)\n+\ta = to;\n+      ALLOCNO_LIVE_RANGES (a)\n+\t= ira_create_allocno_live_range (a, start, ira_max_point - 1,\n+\t\t\t\t\t ALLOCNO_LIVE_RANGES (a));\n+      if (internal_flag_ira_verbose > 2 && ira_dump_file != NULL)\n+\tfprintf\n+\t  (ira_dump_file,\n+\t   \"    Adding range [%d..%d] to live through %s allocno a%dr%d\\n\",\n+\t   start, ira_max_point - 1,\n+\t   to != NULL ? \"upper level\" : \"\",\n+\t   ALLOCNO_NUM (a), REGNO (ALLOCNO_REG (a)));\n     }\n }\n "}]}