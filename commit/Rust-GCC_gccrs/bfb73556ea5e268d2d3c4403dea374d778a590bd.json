{"sha": "bfb73556ea5e268d2d3c4403dea374d778a590bd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmZiNzM1NTZlYTVlMjY4ZDJkM2M0NDAzZGVhMzc0ZDc3OGE1OTBiZA==", "commit": {"author": {"name": "Tom Wood", "email": "wood@gnu.org", "date": "1993-04-09T23:10:47Z"}, "committer": {"name": "Tom Wood", "email": "wood@gnu.org", "date": "1993-04-09T23:10:47Z"}, "message": "Add declarations for functions in objc-act.c.\n\n\t(doing_objc_thang): Declare here.\n\nFrom-SVN: r4064", "tree": {"sha": "7b14daec91095d30d74391965d266ca19a01ee40", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7b14daec91095d30d74391965d266ca19a01ee40"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bfb73556ea5e268d2d3c4403dea374d778a590bd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bfb73556ea5e268d2d3c4403dea374d778a590bd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bfb73556ea5e268d2d3c4403dea374d778a590bd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bfb73556ea5e268d2d3c4403dea374d778a590bd/comments", "author": null, "committer": null, "parents": [{"sha": "796c0c9367b1e4845b09227f296060ded809091a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/796c0c9367b1e4845b09227f296060ded809091a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/796c0c9367b1e4845b09227f296060ded809091a"}], "stats": {"total": 14, "additions": 12, "deletions": 2}, "files": [{"sha": "1450b300efbcce099f8f1aca66c9fce4959d7a4d", "filename": "gcc/c-tree.h", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfb73556ea5e268d2d3c4403dea374d778a590bd/gcc%2Fc-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfb73556ea5e268d2d3c4403dea374d778a590bd/gcc%2Fc-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-tree.h?ref=bfb73556ea5e268d2d3c4403dea374d778a590bd", "patch": "@@ -149,8 +149,15 @@ struct lang_type\n    an explicit loop over that iterator.  */\n #define ITERATOR_BOUND_P(NODE) ((NODE)->common.readonly_flag)\n \f\n-extern int maybe_objc_comptypes                 PROTO((tree, tree));\n+/* in c-lang.c and objc-act.c */\n+extern tree lookup_interface\t\t\tPROTO((tree));\n+extern tree is_class_name\t\t\tPROTO((tree));\n+extern void maybe_objc_check_decl\t\tPROTO((tree));\n+extern int maybe_objc_comptypes                 PROTO((tree, tree, int));\n extern tree maybe_building_objc_message_expr    PROTO((void));\n+extern tree maybe_objc_method_name\t\tPROTO((tree));\n+extern int recognize_objc_keyword\t\tPROTO((void));\n+extern tree build_objc_string\t\t\tPROTO((int, char *));\n \f\n /* in c-aux-info.c */\n extern void gen_aux_info_record                 PROTO((tree, int, int, int));\n@@ -168,7 +175,6 @@ extern void constant_expression_warning         PROTO((tree));\n extern void decl_attributes                     PROTO((tree, tree));\n extern void declare_function_name               PROTO((void));\n extern tree convert_and_check\t\t\tPROTO((tree, tree));\n-extern void constant_expression_warning\t\tPROTO((tree));\n extern void overflow_warning\t\t\tPROTO((tree));\n extern void unsigned_conversion_warning\t\tPROTO((tree, tree));\n /* Read the rest of the current #-directive line.  */\n@@ -434,4 +440,8 @@ extern int (*comptypes_record_hook) ();\n \n extern int system_header_p;\n \n+/* Nonzero enables objc features.  */\n+\n+extern int doing_objc_thang;\n+\n #endif /* not _C_TREE_H */"}]}