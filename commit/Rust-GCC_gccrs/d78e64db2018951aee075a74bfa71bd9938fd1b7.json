{"sha": "d78e64db2018951aee075a74bfa71bd9938fd1b7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDc4ZTY0ZGIyMDE4OTUxYWVlMDc1YTc0YmZhNzFiZDk5MzhmZDFiNw==", "commit": {"author": {"name": "Kaz Kojima", "email": "kkojima@gcc.gnu.org", "date": "2012-11-07T10:48:12Z"}, "committer": {"name": "Kaz Kojima", "email": "kkojima@gcc.gnu.org", "date": "2012-11-07T10:48:12Z"}, "message": "re PR middle-end/49220 (ICE in create_pre_exit, at mode-switching.c:401)\n\n\tPR middle-end/49220\n\t* mode-switching.c (create_pre_exit): Set short_block if there\n\tare no copy insns.\n\nFrom-SVN: r193289", "tree": {"sha": "adbbfcc16d856974e6504e73e6efe7313f2cf502", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/adbbfcc16d856974e6504e73e6efe7313f2cf502"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d78e64db2018951aee075a74bfa71bd9938fd1b7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d78e64db2018951aee075a74bfa71bd9938fd1b7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d78e64db2018951aee075a74bfa71bd9938fd1b7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d78e64db2018951aee075a74bfa71bd9938fd1b7/comments", "author": null, "committer": null, "parents": [{"sha": "92d38f386bb23d45f15326edac74449064a6429d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92d38f386bb23d45f15326edac74449064a6429d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/92d38f386bb23d45f15326edac74449064a6429d"}], "stats": {"total": 15, "additions": 14, "deletions": 1}, "files": [{"sha": "9444adc13324e58972dd651b7ac62497eb5e138f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d78e64db2018951aee075a74bfa71bd9938fd1b7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d78e64db2018951aee075a74bfa71bd9938fd1b7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d78e64db2018951aee075a74bfa71bd9938fd1b7", "patch": "@@ -1,3 +1,9 @@\n+2012-11-07  Kaz Kojima  <kkojima@gcc.gnu.org>\n+\n+\tPR middle-end/49220\n+\t* mode-switching.c (create_pre_exit): Set short_block if there\n+\tare no copy insns.\n+\n 2012-11-07  Martin Jambor  <mjambor@suse.cz>\n \n \t* lto-cgraph.c: Include tree-pass.h."}, {"sha": "2072628805be1de30f4c4170f4da46df1e071d6d", "filename": "gcc/mode-switching.c", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d78e64db2018951aee075a74bfa71bd9938fd1b7/gcc%2Fmode-switching.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d78e64db2018951aee075a74bfa71bd9938fd1b7/gcc%2Fmode-switching.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmode-switching.c?ref=d78e64db2018951aee075a74bfa71bd9938fd1b7", "patch": "@@ -322,7 +322,14 @@ create_pre_exit (int n_entities, int *entity_map, const int *num_modes)\n \t\t\t     && GET_CODE (SUBREG_REG (copy_reg)) == REG)\n \t\t      copy_start = REGNO (SUBREG_REG (copy_reg));\n \t\t    else\n-\t\t      break;\n+\t\t      {\n+\t\t\t/* When control reaches end of non-void function,\n+\t\t\t   there are no return copy insns at all.  This\n+\t\t\t   avoids an ice on that invalid function.  */\n+\t\t\tif (ret_start + nregs == ret_end)\n+\t\t\t  short_block = 1;\n+\t\t\tbreak;\n+\t\t      }\n \t\t    if (copy_start >= FIRST_PSEUDO_REGISTER)\n \t\t      {\n \t\t\tlast_insn = return_copy;"}]}