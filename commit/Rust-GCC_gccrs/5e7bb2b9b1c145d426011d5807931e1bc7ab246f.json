{"sha": "5e7bb2b9b1c145d426011d5807931e1bc7ab246f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWU3YmIyYjliMWMxNDVkNDI2MDExZDU4MDc5MzFlMWJjN2FiMjQ2Zg==", "commit": {"author": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2011-05-29T20:32:11Z"}, "committer": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2011-05-29T20:32:11Z"}, "message": "re PR fortran/47601 ([OOP] Internal Error: mio_component_ref(): Component not found)\n\n2011-05-29  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/47601\n\t* module.c (mio_component_ref): Handle components of extended types.\n\t* symbol.c (gfc_find_component): Return is sym is NULL.\n\n2011-05-29  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/47601\n\t* gfortran.dg/extends_13.f03: New.\n\nFrom-SVN: r174416", "tree": {"sha": "83be5e8770207f2f43b48f36a2a57e316d85406a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/83be5e8770207f2f43b48f36a2a57e316d85406a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5e7bb2b9b1c145d426011d5807931e1bc7ab246f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e7bb2b9b1c145d426011d5807931e1bc7ab246f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5e7bb2b9b1c145d426011d5807931e1bc7ab246f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e7bb2b9b1c145d426011d5807931e1bc7ab246f/comments", "author": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "155732f56dacb4f10aa48db4d952745aed720bc7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/155732f56dacb4f10aa48db4d952745aed720bc7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/155732f56dacb4f10aa48db4d952745aed720bc7"}], "stats": {"total": 53, "additions": 45, "deletions": 8}, "files": [{"sha": "da086438ab572d2ef7381b9ad14be908b46cb0e8", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e7bb2b9b1c145d426011d5807931e1bc7ab246f/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e7bb2b9b1c145d426011d5807931e1bc7ab246f/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=5e7bb2b9b1c145d426011d5807931e1bc7ab246f", "patch": "@@ -1,3 +1,9 @@\n+2011-05-29  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/47601\n+\t* module.c (mio_component_ref): Handle components of extended types.\n+\t* symbol.c (gfc_find_component): Return is sym is NULL.\n+\n 2011-05-29  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/18918"}, {"sha": "533246d0c8df078d01728e64e922257f2aadaf78", "filename": "gcc/fortran/module.c", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e7bb2b9b1c145d426011d5807931e1bc7ab246f/gcc%2Ffortran%2Fmodule.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e7bb2b9b1c145d426011d5807931e1bc7ab246f/gcc%2Ffortran%2Fmodule.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fmodule.c?ref=5e7bb2b9b1c145d426011d5807931e1bc7ab246f", "patch": "@@ -2356,14 +2356,10 @@ mio_component_ref (gfc_component **cp, gfc_symbol *sym)\n       if (sym->components != NULL && p->u.pointer == NULL)\n \t{\n \t  /* Symbol already loaded, so search by name.  */\n-\t  for (q = sym->components; q; q = q->next)\n-\t    if (strcmp (q->name, name) == 0)\n-\t      break;\n-\n-\t  if (q == NULL)\n-\t    gfc_internal_error (\"mio_component_ref(): Component not found\");\n+\t  q = gfc_find_component (sym, name, true, true);\n \n-\t  associate_integer_pointer (p, q);\n+\t  if (q)\n+\t    associate_integer_pointer (p, q);\n \t}\n \n       /* Make sure this symbol will eventually be loaded.  */"}, {"sha": "b761cdd47e8011b2de22ad4ded6fc212150ff312", "filename": "gcc/fortran/symbol.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e7bb2b9b1c145d426011d5807931e1bc7ab246f/gcc%2Ffortran%2Fsymbol.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e7bb2b9b1c145d426011d5807931e1bc7ab246f/gcc%2Ffortran%2Fsymbol.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fsymbol.c?ref=5e7bb2b9b1c145d426011d5807931e1bc7ab246f", "patch": "@@ -1996,7 +1996,7 @@ gfc_find_component (gfc_symbol *sym, const char *name,\n {\n   gfc_component *p;\n \n-  if (name == NULL)\n+  if (name == NULL || sym == NULL)\n     return NULL;\n \n   sym = gfc_use_derived (sym);"}, {"sha": "9c9b6fb470e0ea95a1998931e862d47421d3fa64", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e7bb2b9b1c145d426011d5807931e1bc7ab246f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e7bb2b9b1c145d426011d5807931e1bc7ab246f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5e7bb2b9b1c145d426011d5807931e1bc7ab246f", "patch": "@@ -1,3 +1,8 @@\n+2011-05-29  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/47601\n+\t* gfortran.dg/extends_13.f03: New.\n+\n 2011-05-29  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR rtl-optimization/49095"}, {"sha": "5d986877df2774bd26b2f1d7263cc0554bf9556d", "filename": "gcc/testsuite/gfortran.dg/extends_13.f03", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e7bb2b9b1c145d426011d5807931e1bc7ab246f/gcc%2Ftestsuite%2Fgfortran.dg%2Fextends_13.f03", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e7bb2b9b1c145d426011d5807931e1bc7ab246f/gcc%2Ftestsuite%2Fgfortran.dg%2Fextends_13.f03", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fextends_13.f03?ref=5e7bb2b9b1c145d426011d5807931e1bc7ab246f", "patch": "@@ -0,0 +1,30 @@\n+! { dg-do compile }\n+!\n+! PR 47601: [OOP] Internal Error: mio_component_ref(): Component not found\n+!\n+! Contributed by Rich Townsend <townsend@astro.wisc.edu>\n+\n+module type_definitions\n+  implicit none\n+  type :: matching \n+     integer :: n = -999\n+  end type\n+  type, extends(matching) :: ellipse\n+  end type\n+end module type_definitions\n+\n+module elliptical_elements\n+  implicit none\n+contains\n+  function line(e) result(a2n)\n+    use type_definitions\n+    type(ellipse), intent(in) :: e\n+    complex, dimension(e%N) :: a2n   ! <- change \"e%N\" to \"10\" \n+  end function line\n+end module\n+\n+  use type_definitions\n+  use elliptical_elements\n+end\n+\n+! { dg-final { cleanup-modules \"type_definitions elliptical_elements\" } }"}]}