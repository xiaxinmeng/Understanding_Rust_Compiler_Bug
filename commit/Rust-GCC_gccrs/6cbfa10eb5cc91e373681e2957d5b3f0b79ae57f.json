{"sha": "6cbfa10eb5cc91e373681e2957d5b3f0b79ae57f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmNiZmExMGViNWNjOTFlMzczNjgxZTI5NTdkNWIzZjBiNzlhZTU3Zg==", "commit": {"author": {"name": "Steve Ellcey", "email": "sje@cup.hp.com", "date": "2005-07-03T15:40:29Z"}, "committer": {"name": "Steve Ellcey", "email": "sje@gcc.gnu.org", "date": "2005-07-03T15:40:29Z"}, "message": "re PR other/13906 (genmodes.c:964: internal compiler error: Bus error in md5_process_block)\n\n\tPR other/13906\n\t* md5.c (md5_process_bytes): Check alignment.\n\nFrom-SVN: r101557", "tree": {"sha": "e972d666334ce85e6dc741fe56d68641f7b6659c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e972d666334ce85e6dc741fe56d68641f7b6659c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6cbfa10eb5cc91e373681e2957d5b3f0b79ae57f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6cbfa10eb5cc91e373681e2957d5b3f0b79ae57f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6cbfa10eb5cc91e373681e2957d5b3f0b79ae57f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6cbfa10eb5cc91e373681e2957d5b3f0b79ae57f/comments", "author": null, "committer": null, "parents": [{"sha": "3fe725de2a240fe7f3e4c7882841df0259ff7833", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3fe725de2a240fe7f3e4c7882841df0259ff7833", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3fe725de2a240fe7f3e4c7882841df0259ff7833"}], "stats": {"total": 22, "additions": 22, "deletions": 0}, "files": [{"sha": "ba575549ada701284722f8f65a0f4fcbbff4f751", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6cbfa10eb5cc91e373681e2957d5b3f0b79ae57f/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6cbfa10eb5cc91e373681e2957d5b3f0b79ae57f/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=6cbfa10eb5cc91e373681e2957d5b3f0b79ae57f", "patch": "@@ -1,3 +1,8 @@\n+2005-07-03  Steve Ellcey  <sje@cup.hp.com>\n+\n+\tPR other/13906\n+\t* md5.c (md5_process_bytes): Check alignment.\n+\n 2005-07-01  Ian Lance Taylor  <ian@airs.com>\n \n \tPR other/22268"}, {"sha": "83e0beb339fa2a6c0beb80618b7a8306a075ab00", "filename": "libiberty/md5.c", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6cbfa10eb5cc91e373681e2957d5b3f0b79ae57f/libiberty%2Fmd5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6cbfa10eb5cc91e373681e2957d5b3f0b79ae57f/libiberty%2Fmd5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fmd5.c?ref=6cbfa10eb5cc91e373681e2957d5b3f0b79ae57f", "patch": "@@ -223,6 +223,23 @@ md5_process_bytes (const void *buffer, size_t len, struct md5_ctx *ctx)\n   /* Process available complete blocks.  */\n   if (len > 64)\n     {\n+#if !_STRING_ARCH_unaligned\n+/* To check alignment gcc has an appropriate operator.  Other\n+   compilers don't.  */\n+# if __GNUC__ >= 2\n+#  define UNALIGNED_P(p) (((md5_uintptr) p) % __alignof__ (md5_uint32) != 0)\n+# else\n+#  define UNALIGNED_P(p) (((md5_uintptr) p) % sizeof (md5_uint32) != 0)\n+# endif\n+      if (UNALIGNED_P (buffer))\n+        while (len > 64)\n+          {\n+            md5_process_block (memcpy (ctx->buffer, buffer, 64), 64, ctx);\n+            buffer = (const char *) buffer + 64;\n+            len -= 64;\n+          }\n+      else\n+#endif\n       md5_process_block (buffer, len & ~63, ctx);\n       buffer = (const void *) ((const char *) buffer + (len & ~63));\n       len &= 63;"}]}