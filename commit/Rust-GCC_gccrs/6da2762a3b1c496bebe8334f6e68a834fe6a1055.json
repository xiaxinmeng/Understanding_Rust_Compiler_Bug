{"sha": "6da2762a3b1c496bebe8334f6e68a834fe6a1055", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmRhMjc2MmEzYjFjNDk2YmViZTgzMzRmNmU2OGE4MzRmZTZhMTA1NQ==", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2021-03-13T00:16:20Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2021-03-13T00:16:20Z"}, "message": "Daily bump.", "tree": {"sha": "664207264e9c363856703ee942f5ba28747bd855", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/664207264e9c363856703ee942f5ba28747bd855"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6da2762a3b1c496bebe8334f6e68a834fe6a1055", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6da2762a3b1c496bebe8334f6e68a834fe6a1055", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6da2762a3b1c496bebe8334f6e68a834fe6a1055", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6da2762a3b1c496bebe8334f6e68a834fe6a1055/comments", "author": null, "committer": null, "parents": [{"sha": "6e885ad3287388192e52e9b524dbaa408507c0a4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e885ad3287388192e52e9b524dbaa408507c0a4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6e885ad3287388192e52e9b524dbaa408507c0a4"}], "stats": {"total": 153, "additions": 152, "deletions": 1}, "files": [{"sha": "3c525f8c781ef2b98e969d539b3a0703be148a8f", "filename": "contrib/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6da2762a3b1c496bebe8334f6e68a834fe6a1055/contrib%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6da2762a3b1c496bebe8334f6e68a834fe6a1055/contrib%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2FChangeLog?ref=6da2762a3b1c496bebe8334f6e68a834fe6a1055", "patch": "@@ -1,3 +1,12 @@\n+2021-03-12  Martin Liska  <mliska@suse.cz>\n+\n+\t* gcc-changelog/git_commit.py: Allow deletion of ChangeLog\n+\tfiles.\n+\t* gcc-changelog/setup.cfg: Set line limit to 120 characters.\n+\t* gcc-changelog/test_email.py: Add test.\n+\t* gcc-changelog/test_patches.txt: Likewise.\n+\t* gcc-changelog/git_email.py: Fix parsing of deleted files.\n+\n 2021-02-08  Mike Frysinger  <vapier@gentoo.org>\n \n \t* mklog.py (generated_files): New set."}, {"sha": "1c49510f5ee1f9b2b7d42fd26a7bb170c519cbc5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 73, "deletions": 0, "changes": 73, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6da2762a3b1c496bebe8334f6e68a834fe6a1055/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6da2762a3b1c496bebe8334f6e68a834fe6a1055/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6da2762a3b1c496bebe8334f6e68a834fe6a1055", "patch": "@@ -1,3 +1,76 @@\n+2021-03-12  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\tPR target/99422\n+\t* config/sparc/constraints.md (w): Rename to...\n+\t(W): ... this and ditch previous implementation.\n+\t* config/sparc/sparc.md (*movdi_insn_sp64): Replace W with m.\n+\t(*movdf_insn_sp64): Likewise.\n+\t(*mov<VM64:mode>_insn_sp64): Likewise.\n+\t* config/sparc/sync.md (*atomic_compare_and_swap<mode>_1): Replace\n+\tw with W.\n+\t(atomic_compare_and_swap_leon3_1): Likewise.\n+\t(*atomic_compare_and_swapdi_v8plus): Likewise.\n+\t* config/sparc/sparc.c (memory_ok_for_ldd): Remove useless test on\n+\tarchitecture and add missing address validity check during LRA.\n+\n+2021-03-12  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\tPR fortran/98858\n+\t* gimplify.c (omp_add_variable): Handle NULL_TREE as size\n+\toccuring for assumed-size arrays in use_device_{ptr,addr}.\n+\n+2021-03-12  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/99321\n+\t* config/i386/constraints.md (YW): New internal constraint.\n+\t* config/i386/sse.md (v_Yw): Add V4TI, V2TI, V1TI and TI cases.\n+\t(*<sse2_avx2>_<insn><mode>3<mask_name>,\n+\t*<sse2_avx2>_uavg<mode>3<mask_name>, *abs<mode>2,\n+\t*<s>mul<mode>3_highpart<mask_name>): Use <v_Yw> instead of v in\n+\tconstraints.\n+\t(<sse2_avx2>_psadbw): Use YW instead of v in constraints.\n+\t(*avx2_pmaddwd, *sse2_pmaddwd, *<code>v8hi3, *<code>v16qi3,\n+\tavx2_pmaddubsw256, ssse3_pmaddubsw128): Merge last two alternatives\n+\tinto one, use Yw instead of former x,v.\n+\t(ashr<mode>3, <insn><mode>3): Use <v_Yw> instead of x in constraints of\n+\tthe last alternative.\n+\t(<sse2_avx2>_packsswb<mask_name>, <sse2_avx2>_packssdw<mask_name>,\n+\t<sse2_avx2>_packuswb<mask_name>, <sse4_1_avx2>_packusdw<mask_name>,\n+\t*<ssse3_avx2>_pmulhrsw<mode>3<mask_name>, <ssse3_avx2>_palignr<mode>,\n+\t<ssse3_avx2>_pshufb<mode>3<mask_name>): Merge last two alternatives\n+\tinto one, use <v_Yw> instead of former x,v.\n+\t(avx2_interleave_highv32qi<mask_name>,\n+\tvec_interleave_highv16qi<mask_name>): Use Yw instead of v in\n+\tconstraints.  Add && <mask_avx512bw_condition> to condition.\n+\t(avx2_interleave_lowv32qi<mask_name>,\n+\tvec_interleave_lowv16qi<mask_name>,\n+\tavx2_interleave_highv16hi<mask_name>,\n+\tvec_interleave_highv8hi<mask_name>,\n+\tavx2_interleave_lowv16hi<mask_name>, vec_interleave_lowv8hi<mask_name>,\n+\tavx2_pshuflw_1<mask_name>, sse2_pshuflw_1<mask_name>,\n+\tavx2_pshufhw_1<mask_name>, sse2_pshufhw_1<mask_name>,\n+\tavx2_<code>v16qiv16hi2<mask_name>, sse4_1_<code>v8qiv8hi2<mask_name>,\n+\t*sse4_1_<code>v8qiv8hi2<mask_name>_1, <sse2_avx2>_<insn><mode>3): Use\n+\tYw instead of v in constraints.\n+\t* config/i386/mmx.md (Yv_Yw): New define_mode_attr.\n+\t(*mmx_<insn><mode>3, mmx_ashr<mode>3, mmx_<insn><mode>3): Use <Yv_Yw>\n+\tinstead of Yv in constraints.\n+\t(*mmx_<insn><mode>3, *mmx_mulv4hi3, *mmx_smulv4hi3_highpart,\n+\t*mmx_umulv4hi3_highpart, *mmx_pmaddwd, *mmx_<code>v4hi3,\n+\t*mmx_<code>v8qi3, mmx_pack<s_trunsuffix>swb, mmx_packssdw,\n+\tmmx_punpckhbw, mmx_punpcklbw, mmx_punpckhwd, mmx_punpcklwd,\n+\t*mmx_uavgv8qi3, *mmx_uavgv4hi3, mmx_psadbw): Use Yw instead of Yv in\n+\tconstraints.\n+\t(*mmx_pinsrw, *mmx_pinsrb, *mmx_pextrw, *mmx_pextrw_zext, *mmx_pextrb,\n+\t*mmx_pextrb_zext): Use YW instead of Yv in constraints.\n+\t(*mmx_eq<mode>3, mmx_gt<mode>3): Use x instead of Yv in constraints.\n+\t(mmx_andnot<mode>3, *mmx_<code><mode>3): Split last alternative into\n+\ttwo, one with just x, another isa avx512vl with v.\n+\n+2021-03-12  Martin Liska  <mliska@suse.cz>\n+\n+\t* doc/invoke.texi: Add missing param documentation.\n+\n 2021-03-11  David Malcolm  <dmalcolm@redhat.com>\n \n \tPR analyzer/96374"}, {"sha": "a183ced2a566b6f15f5b79be97d9b827d6330adb", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6da2762a3b1c496bebe8334f6e68a834fe6a1055/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6da2762a3b1c496bebe8334f6e68a834fe6a1055/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=6da2762a3b1c496bebe8334f6e68a834fe6a1055", "patch": "@@ -1 +1 @@\n-20210312\n+20210313"}, {"sha": "370e725605e67b1a4a9ba91cab372b34b4df2b1c", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6da2762a3b1c496bebe8334f6e68a834fe6a1055/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6da2762a3b1c496bebe8334f6e68a834fe6a1055/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=6da2762a3b1c496bebe8334f6e68a834fe6a1055", "patch": "@@ -1,3 +1,30 @@\n+2021-03-12  Nathan Sidwell  <nathan@acm.org>\n+\n+\tPR c++/99238\n+\t* module.cc (depset::hash::add_binding_entity): Assert not\n+\tvisited.\n+\t(depset::add::add_specializations): Likewise.\n+\t* name-lookup.c (name_lookup::dedup): New.\n+\t(name_lookup::~name_lookup): Assert not deduping.\n+\t(name_lookup::restore_state): Likewise.\n+\t(name_lookup::add_overload): Replace outlined code with dedup\n+\tcall.\n+\t(name_lookup::add_value): Likewise.\n+\t(name_lookup::search_namespace_only): Likewise.\n+\t(name_lookup::adl_namespace_fns): Likewise.\n+\t(name_lookup::adl_class_fns): Likewise.\n+\t(name_lookup::search_adl): Likewise.  Add clearing dedup call.\n+\t(name_lookup::search_qualified): Likewise.\n+\t(name_lookup::search_unqualified): Likewise.\n+\n+2021-03-12  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/99507\n+\t* call.c (build_over_call): For immediate evaluation of functions\n+\tthat return references, undo convert_from_reference effects before\n+\tcalling cxx_constant_value and call convert_from_reference\n+\tafterwards.\n+\n 2021-03-11  Nathan Sidwell  <nathan@acm.org>\n \n \tPR c++/99248"}, {"sha": "3682564464af43ef6e79adf304dc32651470c2c9", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6da2762a3b1c496bebe8334f6e68a834fe6a1055/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6da2762a3b1c496bebe8334f6e68a834fe6a1055/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=6da2762a3b1c496bebe8334f6e68a834fe6a1055", "patch": "@@ -1,3 +1,9 @@\n+2021-03-12  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\tPR fortran/99514\n+\t* resolve.c (resolve_symbol): Accept vars which are in DATA\n+\tand hence (either) implicit SAVE (or in common).\n+\n 2021-03-10  Harald Anlauf  <anlauf@gmx.de>\n \n \tPR fortran/99205"}, {"sha": "e13d75227ff1612654b6d83bc6ea22898926658d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6da2762a3b1c496bebe8334f6e68a834fe6a1055/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6da2762a3b1c496bebe8334f6e68a834fe6a1055/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6da2762a3b1c496bebe8334f6e68a834fe6a1055", "patch": "@@ -1,3 +1,25 @@\n+2021-03-12  Nathan Sidwell  <nathan@acm.org>\n+\n+\tPR c++/99238\n+\t* g++.dg/modules/pr99238.h: New.\n+\t* g++.dg/modules/pr99238_a.H: New.\n+\t* g++.dg/modules/pr99238_b.H: New.\n+\n+2021-03-12  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\tPR fortran/99514\n+\t* gfortran.dg/gomp/threadprivate-1.f90: New test.\n+\n+2021-03-12  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/99321\n+\t* gcc.target/i386/avx512vl-pr99321-2.c: New test.\n+\n+2021-03-12  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/99507\n+\t* g++.dg/cpp2a/consteval19.C: New test.\n+\n 2021-03-11  David Malcolm  <dmalcolm@redhat.com>\n \n \tPR analyzer/96374"}, {"sha": "93e788f3c9f3bd826d317f7b731ad6c45bb61275", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6da2762a3b1c496bebe8334f6e68a834fe6a1055/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6da2762a3b1c496bebe8334f6e68a834fe6a1055/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=6da2762a3b1c496bebe8334f6e68a834fe6a1055", "patch": "@@ -1,3 +1,12 @@\n+2021-03-12  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\t* io/transfer.c (st_read_done_worker, st_write_done_worker):\n+\tCall unlock_unit here, add unit_lock lock around newunit_free call.\n+\t(st_read_done, st_write_done): Only call unlock_unit when not\n+\tcalling the worker function.\n+\t* io/unit.c (set_internal_unit): Don't reset the unit_number\n+\tto the same number as this cause race warnings.\n+\n 2021-03-05  Harald Anlauf  <anlauf@gmx.de>\n \n \tPR libfortran/99218"}, {"sha": "3aee03656460ef1835b265902c9ff28336b622fb", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6da2762a3b1c496bebe8334f6e68a834fe6a1055/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6da2762a3b1c496bebe8334f6e68a834fe6a1055/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=6da2762a3b1c496bebe8334f6e68a834fe6a1055", "patch": "@@ -1,3 +1,8 @@\n+2021-03-12  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\tPR fortran/98858\n+\t* testsuite/libgomp.fortran/use_device_ptr-3.f90: New test.\n+\n 2021-03-04  Jakub Jelinek  <jakub@redhat.com>\n \n \t* configure.ac: Add AC_CHECK_SIZEOF([void *])."}]}