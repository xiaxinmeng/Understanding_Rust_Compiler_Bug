{"sha": "18c8086d65f3d539e065ea7c97e3de6f3bbdf684", "node_id": "C_kwDOANBUbNoAKDE4YzgwODZkNjVmM2Q1MzllMDY1ZWE3Yzk3ZTNkZTZmM2JiZGY2ODQ", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-02-11T10:21:24Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-02-11T10:21:24Z"}, "message": "df: Don't set bbs dirty because of debug insn moves [PR104459]\n\nAs mentioned in the PR, we get -fcompare-debug failure, which is caused by\ncfg_layout_merge_blocks successfully merging two bbs where both bbs\ncontained just CODE_LABEL, NOTE_INSN_BASIC_BLOCK and in the -g case both\nsome debug insns at the end.  cfg_layout_merge_blocks calls\nupdate_bb_for_insn_chain which for the post-label insns in the second block\n(except for BARRIERs) calls df_insn_change_bb.  This function changes\nthe bb of the insns and for notes just punts, but for other insns calls\ndf_set_bb_dirty.  Now the problem is that because there were only debug\ninsns and notes in the second block, df_set_bb_dirty is called on both\nonly in the -g case and not with -g0.  df_set_bb_dirty these days\nsets both the BB_MODIFIED flag and marks the bb as dirty, and the former\nis what 6 spots in cfgcleanup.cc use in code-generation decisions,\nin this case\n          may_thread |= (target->flags & BB_MODIFIED) != 0;\nin particular.  So, with -g may_thread is true while with -g0 it is not\nand we diverge from that point onwards.\nI've thought about introducing df_set_bb_dirty_nondebug that wouldn't\nset BB_MODIFIED but would mark the bb dirty, but then I went through\nhistory and found changes like:\nhttps://gcc.gnu.org/legacy-ml/gcc-patches/2010-10/msg00059.html\nso I've also tried just not calling df_set_bb_dirty for debug insns\nat all and it passed x86_64-linux and i686-linux\n--enable-checking=yes,rtl,extra,df bootstraps/regtests, so perhaps\nthat works too.\nNow that I look at it again, if we don't need those from %d to %d messages\nfor debug insns in the dump files, another way to fix it would be just to\nchange the very first line in the hunk from\n  if (!INSN_P (insn))\nto\n  if (!DEBUG_INSN_P (insn))\nThough, df_set_bb_dirty_nondebug which will do everything but\nset bb->flags |= BB_MODIFIED is yet another option I can test.\nPerhaps even that PR42889 was solely about those 6 decisions in cfgcleanup\n(at that point it used df_get_bb_dirty) and not about actually the\nrecomputation of some of the problems causing different code generations.\n\n2022-02-11  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR rtl-optimization/104459\n\t* df-scan.cc (df_insn_change_bb): Don't call df_set_bb_dirty when\n\tmoving DEBUG_INSNs between bbs.\n\n\t* gcc.dg/pr104459.c: New test.", "tree": {"sha": "3c9dbf530c21e03043e9326360577c2a89c84a65", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3c9dbf530c21e03043e9326360577c2a89c84a65"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/18c8086d65f3d539e065ea7c97e3de6f3bbdf684", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18c8086d65f3d539e065ea7c97e3de6f3bbdf684", "html_url": "https://github.com/Rust-GCC/gccrs/commit/18c8086d65f3d539e065ea7c97e3de6f3bbdf684", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18c8086d65f3d539e065ea7c97e3de6f3bbdf684/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "165947fecf4d78c7effb0f1ee15e6942d8dce4ea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/165947fecf4d78c7effb0f1ee15e6942d8dce4ea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/165947fecf4d78c7effb0f1ee15e6942d8dce4ea"}], "stats": {"total": 44, "additions": 42, "deletions": 2}, "files": [{"sha": "9b2375d561bcd96173fe2bfa45ea55567e81dc9a", "filename": "gcc/df-scan.cc", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18c8086d65f3d539e065ea7c97e3de6f3bbdf684/gcc%2Fdf-scan.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18c8086d65f3d539e065ea7c97e3de6f3bbdf684/gcc%2Fdf-scan.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdf-scan.cc?ref=18c8086d65f3d539e065ea7c97e3de6f3bbdf684", "patch": "@@ -1769,13 +1769,15 @@ df_insn_change_bb (rtx_insn *insn, basic_block new_bb)\n   if (!INSN_P (insn))\n     return;\n \n-  df_set_bb_dirty (new_bb);\n+  if (!DEBUG_INSN_P (insn))\n+    df_set_bb_dirty (new_bb);\n   if (old_bb)\n     {\n       if (dump_file)\n \tfprintf (dump_file, \"  from %d to %d\\n\",\n \t\t old_bb->index, new_bb->index);\n-      df_set_bb_dirty (old_bb);\n+      if (!DEBUG_INSN_P (insn))\n+\tdf_set_bb_dirty (old_bb);\n     }\n   else\n     if (dump_file)"}, {"sha": "de8a643d9e218f1c4dbb53d59727bee1267b8f51", "filename": "gcc/testsuite/gcc.dg/pr104459.c", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18c8086d65f3d539e065ea7c97e3de6f3bbdf684/gcc%2Ftestsuite%2Fgcc.dg%2Fpr104459.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18c8086d65f3d539e065ea7c97e3de6f3bbdf684/gcc%2Ftestsuite%2Fgcc.dg%2Fpr104459.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr104459.c?ref=18c8086d65f3d539e065ea7c97e3de6f3bbdf684", "patch": "@@ -0,0 +1,38 @@\n+/* PR rtl-optimization/104459 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -funswitch-loops -fno-tree-dce -fcompare-debug -w\" } */\n+\n+void\n+foo (int x, int y)\n+{\n+  unsigned int a;\n+\n+  for (;;)\n+    {\n+      short int *p = (short int *) &x;\n+      unsigned int q = 0;\n+\n+      a /= 2;\n+      if (a)\n+\t{\n+\t  q -= y;\n+\t  while (q)\n+\t    ;\n+\t}\n+\n+      if (x)\n+\t{\n+\t  for (q = 0; q != 1; q += 2)\n+\t    {\n+\t      unsigned int n;\n+\n+\t      n = *p ? 0 : q;\n+\t      y += n < 1;\n+\n+\t      n = a || *p;\n+\t      if (n % x == 0)\n+\t\ty /= x;\n+\t    }\n+\t}\n+    }\n+}"}]}