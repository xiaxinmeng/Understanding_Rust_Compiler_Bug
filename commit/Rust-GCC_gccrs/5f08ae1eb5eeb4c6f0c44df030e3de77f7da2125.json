{"sha": "5f08ae1eb5eeb4c6f0c44df030e3de77f7da2125", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWYwOGFlMWViNWVlYjRjNmYwYzQ0ZGYwMzBlM2RlNzdmN2RhMjEyNQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2012-09-14T12:37:16Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2012-09-14T12:37:16Z"}, "message": "re PR target/54564 (Broken __builtin_ia32_vfmadds[sd]3)\n\n\tPR target/54564\n\t* config/i386/sse.md (fmai_vmfmadd_<mode>): Use (match_dup 1)\n\tinstead of (match_dup 0) as second argument to vec_merge.\n\t(*fmai_fmadd_<mode>, *fmai_fmsub_<mode>): Likewise.\n\tRemove third alternative.\n\t(*fmai_fnmadd_<mode>, *fmai_fnmsub_<mode>): Likewise.  Negate\n\toperand 2 instead of operand 1, but put it as first argument\n\tof fma.\n\n\t* config/i386/fmaintrin.h (_mm_fnmadd_sd, _mm_fnmadd_ss,\n\t_mm_fnmsub_sd, _mm_fnmsub_ss): Negate the second argument instead\n\tof the first.\n\nFrom-SVN: r191298", "tree": {"sha": "07885aefd53c51957b9d2d9f561ff365669852d0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/07885aefd53c51957b9d2d9f561ff365669852d0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5f08ae1eb5eeb4c6f0c44df030e3de77f7da2125", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f08ae1eb5eeb4c6f0c44df030e3de77f7da2125", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f08ae1eb5eeb4c6f0c44df030e3de77f7da2125", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f08ae1eb5eeb4c6f0c44df030e3de77f7da2125/comments", "author": null, "committer": null, "parents": [{"sha": "aeeede334c2c91c311ee5222141defc67d12ccc7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aeeede334c2c91c311ee5222141defc67d12ccc7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aeeede334c2c91c311ee5222141defc67d12ccc7"}], "stats": {"total": 64, "additions": 30, "deletions": 34}, "files": [{"sha": "f2a05607d6ecab1aca521e76073f6c99508f3d33", "filename": "gcc/config/i386/fmaintrin.h", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f08ae1eb5eeb4c6f0c44df030e3de77f7da2125/gcc%2Fconfig%2Fi386%2Ffmaintrin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f08ae1eb5eeb4c6f0c44df030e3de77f7da2125/gcc%2Fconfig%2Fi386%2Ffmaintrin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Ffmaintrin.h?ref=5f08ae1eb5eeb4c6f0c44df030e3de77f7da2125", "patch": "@@ -1,4 +1,4 @@\n-/* Copyright (C) 2011 Free Software Foundation, Inc.\n+/* Copyright (C) 2011, 2012 Free Software Foundation, Inc.\n \n    This file is part of GCC.\n \n@@ -164,15 +164,15 @@ extern __inline __m128d\n __attribute__((__gnu_inline__, __always_inline__, __artificial__))\n _mm_fnmadd_sd (__m128d __A, __m128d __B, __m128d __C)\n {\n-  return (__m128d)__builtin_ia32_vfmaddsd3 (-(__v2df)__A, (__v2df)__B,\n+  return (__m128d)__builtin_ia32_vfmaddsd3 ((__v2df)__A, -(__v2df)__B,\n                                             (__v2df)__C);\n }\n \n extern __inline __m128\n __attribute__((__gnu_inline__, __always_inline__, __artificial__))\n _mm_fnmadd_ss (__m128 __A, __m128 __B, __m128 __C)\n {\n-  return (__m128)__builtin_ia32_vfmaddss3 (-(__v4sf)__A, (__v4sf)__B,\n+  return (__m128)__builtin_ia32_vfmaddss3 ((__v4sf)__A, -(__v4sf)__B,\n                                            (__v4sf)__C);\n }\n \n@@ -212,15 +212,15 @@ extern __inline __m128d\n __attribute__((__gnu_inline__, __always_inline__, __artificial__))\n _mm_fnmsub_sd (__m128d __A, __m128d __B, __m128d __C)\n {\n-  return (__m128d)__builtin_ia32_vfmaddsd3 (-(__v2df)__A, (__v2df)__B,\n+  return (__m128d)__builtin_ia32_vfmaddsd3 ((__v2df)__A, -(__v2df)__B,\n                                             -(__v2df)__C);\n }\n \n extern __inline __m128\n __attribute__((__gnu_inline__, __always_inline__, __artificial__))\n _mm_fnmsub_ss (__m128 __A, __m128 __B, __m128 __C)\n {\n-  return (__m128)__builtin_ia32_vfmaddss3 (-(__v4sf)__A, (__v4sf)__B,\n+  return (__m128)__builtin_ia32_vfmaddss3 ((__v4sf)__A, -(__v4sf)__B,\n                                            -(__v4sf)__C);\n }\n "}, {"sha": "7934760624a3f04b1a6fe3be9287b3a65cff412f", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 25, "deletions": 29, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f08ae1eb5eeb4c6f0c44df030e3de77f7da2125/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f08ae1eb5eeb4c6f0c44df030e3de77f7da2125/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=5f08ae1eb5eeb4c6f0c44df030e3de77f7da2125", "patch": "@@ -2072,79 +2072,75 @@\n \t    (match_operand:VF_128 1 \"nonimmediate_operand\")\n \t    (match_operand:VF_128 2 \"nonimmediate_operand\")\n \t    (match_operand:VF_128 3 \"nonimmediate_operand\"))\n-\t  (match_dup 0)\n+\t  (match_dup 1)\n \t  (const_int 1)))]\n   \"TARGET_FMA\")\n \n (define_insn \"*fmai_fmadd_<mode>\"\n-  [(set (match_operand:VF_128 0 \"register_operand\" \"=x,x,x\")\n+  [(set (match_operand:VF_128 0 \"register_operand\" \"=x,x\")\n         (vec_merge:VF_128\n \t  (fma:VF_128\n-\t    (match_operand:VF_128 1 \"nonimmediate_operand\" \"%0, 0,x\")\n-\t    (match_operand:VF_128 2 \"nonimmediate_operand\" \"xm, x,xm\")\n-\t    (match_operand:VF_128 3 \"nonimmediate_operand\" \" x,xm,0\"))\n-\t  (match_dup 0)\n+\t    (match_operand:VF_128 1 \"nonimmediate_operand\" \" 0, 0\")\n+\t    (match_operand:VF_128 2 \"nonimmediate_operand\" \"xm, x\")\n+\t    (match_operand:VF_128 3 \"nonimmediate_operand\" \" x,xm\"))\n+\t  (match_dup 1)\n \t  (const_int 1)))]\n   \"TARGET_FMA\"\n   \"@\n    vfmadd132<ssescalarmodesuffix>\\t{%2, %3, %0|%0, %3, %2}\n-   vfmadd213<ssescalarmodesuffix>\\t{%3, %2, %0|%0, %2, %3}\n-   vfmadd231<ssescalarmodesuffix>\\t{%2, %1, %0|%0, %1, %2}\"\n+   vfmadd213<ssescalarmodesuffix>\\t{%3, %2, %0|%0, %2, %3}\"\n   [(set_attr \"type\" \"ssemuladd\")\n    (set_attr \"mode\" \"<MODE>\")])\n \n (define_insn \"*fmai_fmsub_<mode>\"\n-  [(set (match_operand:VF_128 0 \"register_operand\" \"=x,x,x\")\n+  [(set (match_operand:VF_128 0 \"register_operand\" \"=x,x\")\n         (vec_merge:VF_128\n \t  (fma:VF_128\n-\t    (match_operand:VF_128   1 \"nonimmediate_operand\" \"%0, 0,x\")\n-\t    (match_operand:VF_128   2 \"nonimmediate_operand\" \"xm, x,xm\")\n+\t    (match_operand:VF_128   1 \"nonimmediate_operand\" \" 0, 0\")\n+\t    (match_operand:VF_128   2 \"nonimmediate_operand\" \"xm, x\")\n \t    (neg:VF_128\n-\t      (match_operand:VF_128 3 \"nonimmediate_operand\" \" x,xm,0\")))\n-\t  (match_dup 0)\n+\t      (match_operand:VF_128 3 \"nonimmediate_operand\" \" x,xm\")))\n+\t  (match_dup 1)\n \t  (const_int 1)))]\n   \"TARGET_FMA\"\n   \"@\n    vfmsub132<ssescalarmodesuffix>\\t{%2, %3, %0|%0, %3, %2}\n-   vfmsub213<ssescalarmodesuffix>\\t{%3, %2, %0|%0, %2, %3}\n-   vfmsub231<ssescalarmodesuffix>\\t{%2, %1, %0|%0, %1, %2}\"\n+   vfmsub213<ssescalarmodesuffix>\\t{%3, %2, %0|%0, %2, %3}\"\n   [(set_attr \"type\" \"ssemuladd\")\n    (set_attr \"mode\" \"<MODE>\")])\n \n (define_insn \"*fmai_fnmadd_<mode>\"\n-  [(set (match_operand:VF_128 0 \"register_operand\" \"=x,x,x\")\n+  [(set (match_operand:VF_128 0 \"register_operand\" \"=x,x\")\n         (vec_merge:VF_128\n \t  (fma:VF_128\n \t    (neg:VF_128\n-\t      (match_operand:VF_128 1 \"nonimmediate_operand\" \"%0, 0,x\"))\n-\t    (match_operand:VF_128   2 \"nonimmediate_operand\" \"xm, x,xm\")\n-\t    (match_operand:VF_128   3 \"nonimmediate_operand\" \" x,xm,0\"))\n-\t  (match_dup 0)\n+\t      (match_operand:VF_128 2 \"nonimmediate_operand\" \"xm, x\"))\n+\t    (match_operand:VF_128   1 \"nonimmediate_operand\" \" 0, 0\")\n+\t    (match_operand:VF_128   3 \"nonimmediate_operand\" \" x,xm\"))\n+\t  (match_dup 1)\n \t  (const_int 1)))]\n   \"TARGET_FMA\"\n   \"@\n    vfnmadd132<ssescalarmodesuffix>\\t{%2, %3, %0|%0, %3, %2}\n-   vfnmadd213<ssescalarmodesuffix>\\t{%3, %2, %0|%0, %2, %3}\n-   vfnmadd231<ssescalarmodesuffix>\\t{%2, %1, %0|%0, %1, %2}\"\n+   vfnmadd213<ssescalarmodesuffix>\\t{%3, %2, %0|%0, %2, %3}\"\n   [(set_attr \"type\" \"ssemuladd\")\n    (set_attr \"mode\" \"<MODE>\")])\n \n (define_insn \"*fmai_fnmsub_<mode>\"\n-  [(set (match_operand:VF_128 0 \"register_operand\" \"=x,x,x\")\n+  [(set (match_operand:VF_128 0 \"register_operand\" \"=x,x\")\n         (vec_merge:VF_128\n \t  (fma:VF_128\n \t    (neg:VF_128\n-\t      (match_operand:VF_128 1 \"nonimmediate_operand\" \"%0, 0,x\"))\n-\t    (match_operand:VF_128   2 \"nonimmediate_operand\" \"xm, x,xm\")\n+\t      (match_operand:VF_128 2 \"nonimmediate_operand\" \"xm, x\"))\n+\t    (match_operand:VF_128   1 \"nonimmediate_operand\" \" 0, 0\")\n \t    (neg:VF_128\n-\t      (match_operand:VF_128 3 \"nonimmediate_operand\" \" x,xm,0\")))\n-\t  (match_dup 0)\n+\t      (match_operand:VF_128 3 \"nonimmediate_operand\" \" x,xm\")))\n+\t  (match_dup 1)\n \t  (const_int 1)))]\n   \"TARGET_FMA\"\n   \"@\n    vfnmsub132<ssescalarmodesuffix>\\t{%2, %3, %0|%0, %3, %2}\n-   vfnmsub213<ssescalarmodesuffix>\\t{%3, %2, %0|%0, %2, %3}\n-   vfnmsub231<ssescalarmodesuffix>\\t{%2, %1, %0|%0, %1, %2}\"\n+   vfnmsub213<ssescalarmodesuffix>\\t{%3, %2, %0|%0, %2, %3}\"\n   [(set_attr \"type\" \"ssemuladd\")\n    (set_attr \"mode\" \"<MODE>\")])\n "}]}