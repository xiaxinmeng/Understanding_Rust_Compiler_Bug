{"sha": "3d96b0d07399d6f06e6ec86ffa9c544b4d60dc11", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2Q5NmIwZDA3Mzk5ZDZmMDZlNmVjODZmZmE5YzU0NGI0ZDYwZGMxMQ==", "commit": {"author": {"name": "Hans-Peter Nilsson", "email": "hp@dummer.localdomain", "date": "2014-10-24T14:30:35Z"}, "committer": {"name": "Hans-Peter Nilsson", "email": "hp@gcc.gnu.org", "date": "2014-10-24T14:30:35Z"}, "message": "configure.ac (build_configargs): Don't share config.cache between build subdirs.\n\n\t* configure.ac (build_configargs): Don't share config.cache between\n\tbuild subdirs.\n\nFrom-SVN: r216669", "tree": {"sha": "bfd591dfa59e4835ad90c4e16b7eedeacd12d5d2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bfd591dfa59e4835ad90c4e16b7eedeacd12d5d2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3d96b0d07399d6f06e6ec86ffa9c544b4d60dc11", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d96b0d07399d6f06e6ec86ffa9c544b4d60dc11", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3d96b0d07399d6f06e6ec86ffa9c544b4d60dc11", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d96b0d07399d6f06e6ec86ffa9c544b4d60dc11/comments", "author": null, "committer": null, "parents": [{"sha": "8e3d9e673a07f84908bb7bb6b8e313ec45e6ed78", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e3d9e673a07f84908bb7bb6b8e313ec45e6ed78", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8e3d9e673a07f84908bb7bb6b8e313ec45e6ed78"}], "stats": {"total": 17, "additions": 13, "deletions": 4}, "files": [{"sha": "5d0b6b1e234a2032ee11222603938b3455af7ad2", "filename": "ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d96b0d07399d6f06e6ec86ffa9c544b4d60dc11/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d96b0d07399d6f06e6ec86ffa9c544b4d60dc11/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=3d96b0d07399d6f06e6ec86ffa9c544b4d60dc11", "patch": "@@ -1,3 +1,8 @@\n+2014-10-24  Hans-Peter Nilsson  <hp@dummer.localdomain>\n+\n+\t* configure.ac (build_configargs): Don't share config.cache between\n+\tbuild subdirs.\n+\n 2014-10-24  Daniel Hellstrom  <daniel@gaisler.com>\n \n \t* config.gcc (sparc*-*-*): Accept mcpu=leon3v7 processor."}, {"sha": "a8f1b8cec586e5f77c023dc7adc808cdf0a4a5b9", "filename": "configure", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d96b0d07399d6f06e6ec86ffa9c544b4d60dc11/configure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d96b0d07399d6f06e6ec86ffa9c544b4d60dc11/configure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure?ref=3d96b0d07399d6f06e6ec86ffa9c544b4d60dc11", "patch": "@@ -7386,8 +7386,10 @@ tbaseargs=\"$tbaseargs --disable-option-checking\"\n \n # For the build-side libraries, we just need to pretend we're native,\n # and not use the same cache file.  Multilibs are neither needed nor\n-# desired.\n-build_configargs=\"$build_configargs --cache-file=../config.cache ${baseargs}\"\n+# desired.  We can't even use the same cache file for all build-side\n+# libraries, as they're compiled differently; some with C, some with\n+# C++ or with different feature-enabling options.\n+build_configargs=\"$build_configargs --cache-file=./config.cache ${baseargs}\"\n \n # For host modules, accept cache file option, or specification as blank.\n case \"${cache_file}\" in"}, {"sha": "573109277ae6b5d3af5bae3d9352aac522b41665", "filename": "configure.ac", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d96b0d07399d6f06e6ec86ffa9c544b4d60dc11/configure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d96b0d07399d6f06e6ec86ffa9c544b4d60dc11/configure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure.ac?ref=3d96b0d07399d6f06e6ec86ffa9c544b4d60dc11", "patch": "@@ -2922,8 +2922,10 @@ AC_ARG_VAR([target_configargs],\n \n # For the build-side libraries, we just need to pretend we're native,\n # and not use the same cache file.  Multilibs are neither needed nor\n-# desired.\n-build_configargs=\"$build_configargs --cache-file=../config.cache ${baseargs}\"\n+# desired.  We can't even use the same cache file for all build-side\n+# libraries, as they're compiled differently; some with C, some with\n+# C++ or with different feature-enabling options.\n+build_configargs=\"$build_configargs --cache-file=./config.cache ${baseargs}\"\n \n # For host modules, accept cache file option, or specification as blank.\n case \"${cache_file}\" in"}]}