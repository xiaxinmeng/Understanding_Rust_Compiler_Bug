{"sha": "b86ff061234ff42934bc08c5dc1ba041724eba22", "node_id": "C_kwDOANBUbNoAKGI4NmZmMDYxMjM0ZmY0MjkzNGJjMDhjNWRjMWJhMDQxNzI0ZWJhMjI", "commit": {"author": {"name": "Quentin Ochem", "email": "ochem@adacore.com", "date": "2022-10-14T10:30:04Z"}, "committer": {"name": "Marc Poulhi\u00e8s", "email": "poulhies@adacore.com", "date": "2022-11-07T08:36:34Z"}, "message": "ada: Fixed elaboration of CUDA programs.\n\nThe names of imported / exported symbols were not consistent\nbetween the device and the host when compiling for CUDA.\n\nRemove the function Device_Ada_Final_Link_Name as it is no\nlonger referenced.\n\ngcc/ada/\n\n\t* bindgen.adb: fixed the way the device init and final symbols are\n\tcomputed, re-using the normal way these symbols would be computed\n\twith a __device_ prefix. Also fixed the \"is null;\" procedure on\n\tthe host side which are not Ada 95, replaced with a procedure\n\traising an exception as it should never be called. Remove the\n\tunused function Device_Ada_Final_Link_Name.\n\nCo-authored-by: Steve Baird <baird@adacore.com>", "tree": {"sha": "f693fcf8c1501f95cb2f32b42caf78cb373605a1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f693fcf8c1501f95cb2f32b42caf78cb373605a1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b86ff061234ff42934bc08c5dc1ba041724eba22", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b86ff061234ff42934bc08c5dc1ba041724eba22", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b86ff061234ff42934bc08c5dc1ba041724eba22", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b86ff061234ff42934bc08c5dc1ba041724eba22/comments", "author": {"login": "QuentinOchem", "id": 5612750, "node_id": "MDQ6VXNlcjU2MTI3NTA=", "avatar_url": "https://avatars.githubusercontent.com/u/5612750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/QuentinOchem", "html_url": "https://github.com/QuentinOchem", "followers_url": "https://api.github.com/users/QuentinOchem/followers", "following_url": "https://api.github.com/users/QuentinOchem/following{/other_user}", "gists_url": "https://api.github.com/users/QuentinOchem/gists{/gist_id}", "starred_url": "https://api.github.com/users/QuentinOchem/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/QuentinOchem/subscriptions", "organizations_url": "https://api.github.com/users/QuentinOchem/orgs", "repos_url": "https://api.github.com/users/QuentinOchem/repos", "events_url": "https://api.github.com/users/QuentinOchem/events{/privacy}", "received_events_url": "https://api.github.com/users/QuentinOchem/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dkm", "id": 87603, "node_id": "MDQ6VXNlcjg3NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/87603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dkm", "html_url": "https://github.com/dkm", "followers_url": "https://api.github.com/users/dkm/followers", "following_url": "https://api.github.com/users/dkm/following{/other_user}", "gists_url": "https://api.github.com/users/dkm/gists{/gist_id}", "starred_url": "https://api.github.com/users/dkm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dkm/subscriptions", "organizations_url": "https://api.github.com/users/dkm/orgs", "repos_url": "https://api.github.com/users/dkm/repos", "events_url": "https://api.github.com/users/dkm/events{/privacy}", "received_events_url": "https://api.github.com/users/dkm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aa0e7d31a803f948504f8692c4ae48e3ba1b677b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa0e7d31a803f948504f8692c4ae48e3ba1b677b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aa0e7d31a803f948504f8692c4ae48e3ba1b677b"}], "stats": {"total": 20, "additions": 11, "deletions": 9}, "files": [{"sha": "e72cdf81227613261d5f8688c04154fa27cb43b3", "filename": "gcc/ada/bindgen.adb", "status": "modified", "additions": 11, "deletions": 9, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b86ff061234ff42934bc08c5dc1ba041724eba22/gcc%2Fada%2Fbindgen.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b86ff061234ff42934bc08c5dc1ba041724eba22/gcc%2Fada%2Fbindgen.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbindgen.adb?ref=b86ff061234ff42934bc08c5dc1ba041724eba22", "patch": "@@ -131,8 +131,6 @@ package body Bindgen is\n \n    function Device_Ada_Init_Link_Name return String\n      is (Device_Link_Name (Suffix => \"init\"));\n-   function Device_Ada_Final_Link_Name return String\n-     is (Device_Link_Name (Suffix => \"final\"));\n \n    ----------------------------------\n    -- Interface_State Pragma Table --\n@@ -1357,11 +1355,6 @@ package body Bindgen is\n       WBI (\"   pragma Export (C, \" & Device_Ada_Init_Subp_Name &\n              \", Link_Name => \"\"\" & Device_Ada_Init_Link_Name & \"\"\");\");\n \n-      --  It would be nice to declare a real body that raises P_E, but\n-      --  generating a subprogram body at the right point is harder\n-      --  than generating a null procedure here.\n-      WBI (\"   procedure \" & Device_Ada_Init_Subp_Name & \" is null;\");\n-\n       --  C-string declaration for adainit\n       WBI (\"   \" & Adainit_String_Obj_Name\n             & \" : Interfaces.C.Strings.Chars_Ptr;\");\n@@ -2673,7 +2666,8 @@ package body Bindgen is\n       WBI (\"   procedure \" & Ada_Init_Name.all & \";\");\n       if Enable_CUDA_Device_Expansion then\n          WBI (\"   pragma Export (C, \" & Ada_Init_Name.all &\n-                \", Link_Name => \"\"\" & Device_Ada_Init_Link_Name & \"\"\");\");\n+                \", Link_Name => \"\"\" & Device_Link_Name_Prefix\n+                & Ada_Init_Name.all & \"\"\");\");\n          WBI (\"   pragma CUDA_Global (\" & Ada_Init_Name.all & \");\");\n       else\n          WBI (\"   pragma Export (C, \" & Ada_Init_Name.all & \", \"\"\" &\n@@ -2692,7 +2686,8 @@ package body Bindgen is\n          WBI (\"   procedure \" & Ada_Final_Name.all & \";\");\n          if Enable_CUDA_Device_Expansion then\n             WBI (\"   pragma Export (C, \" & Ada_Final_Name.all &\n-                   \", Link_Name => \"\"\" & Device_Ada_Final_Link_Name & \"\"\");\");\n+                   \", Link_Name => \"\"\" & Device_Link_Name_Prefix &\n+                   Ada_Final_Name.all & \"\"\");\");\n             WBI (\"   pragma CUDA_Global (\" & Ada_Final_Name.all & \");\");\n          else\n             WBI (\"   pragma Export (C, \" & Ada_Final_Name.all & \", \"\"\" &\n@@ -2922,6 +2917,13 @@ package body Bindgen is\n \n       Gen_Adainit (Elab_Order);\n \n+      if Enable_CUDA_Expansion then\n+         WBI (\"   procedure \" & Device_Ada_Init_Subp_Name & \" is\");\n+         WBI (\"   begin\");\n+         WBI (\"      raise Program_Error;\");\n+         WBI (\"   end \" & Device_Ada_Init_Subp_Name & \";\");\n+      end if;\n+\n       if Bind_Main_Program then\n          Gen_Main;\n       end if;"}]}