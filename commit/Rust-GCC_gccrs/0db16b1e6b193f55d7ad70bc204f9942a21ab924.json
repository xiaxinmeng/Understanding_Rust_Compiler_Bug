{"sha": "0db16b1e6b193f55d7ad70bc204f9942a21ab924", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGRiMTZiMWU2YjE5M2Y1NWQ3YWQ3MGJjMjA0Zjk5NDJhMjFhYjkyNA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-29T11:01:53Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-29T11:01:53Z"}, "message": "[multiple changes]\n\n2011-08-29  Robert Dewar  <dewar@adacore.com>\n\n\t* a-synbar.ads, a-synbar.adb, a-synbar-posix.adb,\n\ta-synbar-posix.ads: Minor reformatting.\n\n2011-08-29  Yannick Moy  <moy@adacore.com>\n\n\t* snames.ads-tmpl: Add name Force.\n\nFrom-SVN: r178202", "tree": {"sha": "4d92fb31b56630df69ccb831e849a61f7efdb0cc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4d92fb31b56630df69ccb831e849a61f7efdb0cc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0db16b1e6b193f55d7ad70bc204f9942a21ab924", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0db16b1e6b193f55d7ad70bc204f9942a21ab924", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0db16b1e6b193f55d7ad70bc204f9942a21ab924", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0db16b1e6b193f55d7ad70bc204f9942a21ab924/comments", "author": null, "committer": null, "parents": [{"sha": "978ffe02af044beca77bc6e959edd14ffc599a8f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/978ffe02af044beca77bc6e959edd14ffc599a8f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/978ffe02af044beca77bc6e959edd14ffc599a8f"}], "stats": {"total": 57, "additions": 35, "deletions": 22}, "files": [{"sha": "4dfff556c2ba16dab6210e52a707f15552262b31", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0db16b1e6b193f55d7ad70bc204f9942a21ab924/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0db16b1e6b193f55d7ad70bc204f9942a21ab924/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=0db16b1e6b193f55d7ad70bc204f9942a21ab924", "patch": "@@ -1,3 +1,12 @@\n+2011-08-29  Robert Dewar  <dewar@adacore.com>\n+\n+\t* a-synbar.ads, a-synbar.adb, a-synbar-posix.adb,\n+\ta-synbar-posix.ads: Minor reformatting.\n+\n+2011-08-29  Yannick Moy  <moy@adacore.com>\n+\n+\t* snames.ads-tmpl: Add name Force.\n+\n 2011-08-29  Pascal Obry  <obry@adacore.com>\n \n \t* prj-nmsc.adb: Minor reformatting."}, {"sha": "c98a460dcdf5d6d302cfccc7963d7a215d34864c", "filename": "gcc/ada/a-synbar-posix.adb", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0db16b1e6b193f55d7ad70bc204f9942a21ab924/gcc%2Fada%2Fa-synbar-posix.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0db16b1e6b193f55d7ad70bc204f9942a21ab924/gcc%2Fada%2Fa-synbar-posix.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-synbar-posix.adb?ref=0db16b1e6b193f55d7ad70bc204f9942a21ab924", "patch": "@@ -46,8 +46,7 @@ package body Ada.Synchronous_Barriers is\n    function pthread_barrier_init\n      (barrier : not null access pthread_barrier_t;\n       attr    : System.Address := System.Null_Address;\n-      count   : unsigned)\n-     return int;\n+      count   : unsigned) return int;\n    pragma Import (C, pthread_barrier_init, \"pthread_barrier_init\");\n    --  Initialize barrier with the attributes in attr. The barrier is opened\n    --  when count waiters arrived. If attr is null the default barrier\n@@ -70,15 +69,13 @@ package body Ada.Synchronous_Barriers is\n \n    overriding procedure Finalize (Barrier : in out Synchronous_Barrier) is\n       Result : int;\n-\n    begin\n       Result := pthread_barrier_destroy (Barrier.POSIX_Barrier'Access);\n       pragma Assert (Result = 0);\n    end Finalize;\n \n    overriding procedure Initialize (Barrier : in out Synchronous_Barrier) is\n       Result : int;\n-\n    begin\n       Result := pthread_barrier_init\n         (barrier => Barrier.POSIX_Barrier'Access,\n@@ -93,7 +90,7 @@ package body Ada.Synchronous_Barriers is\n \n    procedure Wait_For_Release\n      (The_Barrier : in out Synchronous_Barrier;\n-      Notified    : out    Boolean)\n+      Notified    : out Boolean)\n    is\n       Result : int;\n "}, {"sha": "4c01852b0e68876c8d43a8dfab80a1438aa404ed", "filename": "gcc/ada/a-synbar-posix.ads", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0db16b1e6b193f55d7ad70bc204f9942a21ab924/gcc%2Fada%2Fa-synbar-posix.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0db16b1e6b193f55d7ad70bc204f9942a21ab924/gcc%2Fada%2Fa-synbar-posix.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-synbar-posix.ads?ref=0db16b1e6b193f55d7ad70bc204f9942a21ab924", "patch": "@@ -47,17 +47,18 @@ package Ada.Synchronous_Barriers is\n    type Synchronous_Barrier (Release_Threshold : Barrier_Limit) is\n       limited private;\n \n-   procedure Wait_For_Release (The_Barrier : in out Synchronous_Barrier;\n-                               Notified    :    out Boolean);\n+   procedure Wait_For_Release\n+     (The_Barrier : in out Synchronous_Barrier;\n+      Notified    : out Boolean);\n \n private\n    --  POSIX barrier data type\n \n    SIZEOF_PTHREAD_BARRIER_T : constant :=\n      (if System.Word_Size = 64 then 32 else 20);\n    --  Value defined according to the linux definition in pthreadtypes.h. On\n-   --  other system, MIPS IRIX, the object is smaller, so it works correctly\n-   --  although we are wasting some space.\n+   --  other system, e.g. MIPS IRIX, the object is smaller, so it works\n+   --  correctly although we are wasting some space.\n \n    type pthread_barrier_t_view is (size_based, align_based);\n \n@@ -74,9 +75,9 @@ private\n \n    type Synchronous_Barrier (Release_Threshold : Barrier_Limit) is\n      new Ada.Finalization.Limited_Controlled with\n-      record\n-         POSIX_Barrier : aliased pthread_barrier_t;\n-      end record;\n+        record\n+           POSIX_Barrier : aliased pthread_barrier_t;\n+        end record;\n \n    overriding procedure Initialize (Barrier : in out Synchronous_Barrier);\n    overriding procedure Finalize   (Barrier : in out Synchronous_Barrier);"}, {"sha": "8142dcd395f544bae9952179bde822f39e7ae19b", "filename": "gcc/ada/a-synbar.adb", "status": "modified", "additions": 12, "deletions": 7, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0db16b1e6b193f55d7ad70bc204f9942a21ab924/gcc%2Fada%2Fa-synbar.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0db16b1e6b193f55d7ad70bc204f9942a21ab924/gcc%2Fada%2Fa-synbar.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-synbar.adb?ref=0db16b1e6b193f55d7ad70bc204f9942a21ab924", "patch": "@@ -36,26 +36,29 @@\n package body Ada.Synchronous_Barriers is\n \n    protected body Synchronous_Barrier is\n+\n       --  The condition \"Wait'Count = Release_Threshold\" opens the barrier when\n       --  the required number of tasks is reached. The condition \"Keep_Open\"\n       --  leaves the barrier open while there are queued tasks. While there are\n       --  tasks in the queue no new task will be queued, guaranteeing that the\n       --  barrier will remain open only for those tasks already inside.\n \n       entry Wait (Notified : out Boolean)\n-        when Wait'Count = Release_Threshold or else Keep_Open is\n+        when Wait'Count = Release_Threshold or else Keep_Open\n+      is\n       begin\n-         --  If we are executing the entry it means that the required number\n-         --  of tasks have been queued in the entry. Keep_Open barrier will\n-         --  remain true until all queued tasks are out.\n+         --  If we are executing the entry it means that the required number of\n+         --  tasks have been queued in the entry. Keep_Open barrier will remain\n+         --  true until all queued tasks are out.\n \n          Keep_Open := Wait'Count > 0;\n \n-         --  The last released task will close the barrier and get the\n-         --  Notified token.\n+         --  The last released task will close the barrier and get the Notified\n+         --  token.\n \n          Notified := Wait'Count = 0;\n       end Wait;\n+\n    end Synchronous_Barrier;\n \n    ----------------------\n@@ -64,8 +67,10 @@ package body Ada.Synchronous_Barriers is\n \n    procedure Wait_For_Release\n      (The_Barrier : in out Synchronous_Barrier;\n-      Notified    : out    Boolean) is\n+      Notified    : out Boolean)\n+   is\n    begin\n       The_Barrier.Wait (Notified);\n    end Wait_For_Release;\n+\n end Ada.Synchronous_Barriers;"}, {"sha": "6c084c23f43e35494b5be1f8da75d66d3ad6e642", "filename": "gcc/ada/a-synbar.ads", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0db16b1e6b193f55d7ad70bc204f9942a21ab924/gcc%2Fada%2Fa-synbar.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0db16b1e6b193f55d7ad70bc204f9942a21ab924/gcc%2Fada%2Fa-synbar.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-synbar.ads?ref=0db16b1e6b193f55d7ad70bc204f9942a21ab924", "patch": "@@ -41,8 +41,9 @@ package Ada.Synchronous_Barriers is\n    type Synchronous_Barrier (Release_Threshold : Barrier_Limit) is\n       limited private;\n \n-   procedure Wait_For_Release (The_Barrier : in out Synchronous_Barrier;\n-                               Notified    :    out Boolean);\n+   procedure Wait_For_Release\n+     (The_Barrier : in out Synchronous_Barrier;\n+      Notified    : out Boolean);\n \n private\n    protected type Synchronous_Barrier (Release_Threshold : Barrier_Limit) is"}, {"sha": "3ff20b4139d322735aaa673fb45f3ce2abecb762", "filename": "gcc/ada/snames.ads-tmpl", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0db16b1e6b193f55d7ad70bc204f9942a21ab924/gcc%2Fada%2Fsnames.ads-tmpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0db16b1e6b193f55d7ad70bc204f9942a21ab924/gcc%2Fada%2Fsnames.ads-tmpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsnames.ads-tmpl?ref=0db16b1e6b193f55d7ad70bc204f9942a21ab924", "patch": "@@ -631,8 +631,8 @@ package Snames is\n    Name_Entry_Count                    : constant Name_Id := N + $;\n    Name_External_Name                  : constant Name_Id := N + $;\n    Name_First_Optional_Parameter       : constant Name_Id := N + $;\n+   Name_Force                          : constant Name_Id := N + $;\n    Name_Form                           : constant Name_Id := N + $;\n-   Name_Formal_Proof                   : constant Name_Id := N + $;\n    Name_G_Float                        : constant Name_Id := N + $;\n    Name_Gcc                            : constant Name_Id := N + $;\n    Name_Gnat                           : constant Name_Id := N + $;"}]}