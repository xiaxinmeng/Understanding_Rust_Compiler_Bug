{"sha": "0bfb9a691ff8561383df396da0fa0aff3e30fe43", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGJmYjlhNjkxZmY4NTYxMzgzZGYzOTZkYTBmYTBhZmYzZTMwZmU0Mw==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2002-05-02T23:59:52Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2002-05-02T23:59:52Z"}, "message": "haifa-sched.c (rank_for_schedule): Skip past last_scheduled_insn emitted by cycle_display.\n\n        * haifa-sched.c (rank_for_schedule): Skip past last_scheduled_insn\n        emitted by cycle_display.\n\nFrom-SVN: r53072", "tree": {"sha": "bb037bbd88e7c88ed9fc60cad80131d6de5684be", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bb037bbd88e7c88ed9fc60cad80131d6de5684be"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0bfb9a691ff8561383df396da0fa0aff3e30fe43", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0bfb9a691ff8561383df396da0fa0aff3e30fe43", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0bfb9a691ff8561383df396da0fa0aff3e30fe43", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0bfb9a691ff8561383df396da0fa0aff3e30fe43/comments", "author": null, "committer": null, "parents": [{"sha": "6b976d997cfd5ef56ecbe9f7ee5766034c7e614c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b976d997cfd5ef56ecbe9f7ee5766034c7e614c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6b976d997cfd5ef56ecbe9f7ee5766034c7e614c"}], "stats": {"total": 22, "additions": 16, "deletions": 6}, "files": [{"sha": "b88a93f24ebfa2ae4e923ba78c33fbc137df74c8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0bfb9a691ff8561383df396da0fa0aff3e30fe43/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0bfb9a691ff8561383df396da0fa0aff3e30fe43/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0bfb9a691ff8561383df396da0fa0aff3e30fe43", "patch": "@@ -1,3 +1,8 @@\n+2002-05-02  Richard Henderson  <rth@redhat.com>\n+\n+\t* haifa-sched.c (rank_for_schedule): Skip past last_scheduled_insn\n+\temitted by cycle_display.\n+\n 2002-05-02  Loren J. Rittle  <ljrittle@acm.org>\n \n \t* doc/install.texi (*-*-freebsd*): Update to latest status."}, {"sha": "7af0e73c69e4dc857b0278f2b26ba43518fd38c3", "filename": "gcc/haifa-sched.c", "status": "modified", "additions": 11, "deletions": 6, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0bfb9a691ff8561383df396da0fa0aff3e30fe43/gcc%2Fhaifa-sched.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0bfb9a691ff8561383df396da0fa0aff3e30fe43/gcc%2Fhaifa-sched.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fhaifa-sched.c?ref=0bfb9a691ff8561383df396da0fa0aff3e30fe43", "patch": "@@ -852,7 +852,7 @@ rank_for_schedule (x, y)\n {\n   rtx tmp = *(const rtx *) y;\n   rtx tmp2 = *(const rtx *) x;\n-  rtx link;\n+  rtx link, lsi;\n   int tmp_class, tmp2_class, depend_count1, depend_count2;\n   int val, priority_val, weight_val, info_val;\n \n@@ -871,23 +871,28 @@ rank_for_schedule (x, y)\n     return info_val;\n \n   /* Compare insns based on their relation to the last-scheduled-insn.  */\n-  if (last_scheduled_insn)\n+  for (lsi = last_scheduled_insn;\n+       lsi && INSN_UID (lsi) >= old_max_uid;\n+       lsi = PREV_INSN (lsi))\n+    continue;\n+\n+  if (lsi)\n     {\n       /* Classify the instructions into three classes:\n          1) Data dependent on last schedule insn.\n          2) Anti/Output dependent on last scheduled insn.\n          3) Independent of last scheduled insn, or has latency of one.\n          Choose the insn from the highest numbered class if different.  */\n-      link = find_insn_list (tmp, INSN_DEPEND (last_scheduled_insn));\n-      if (link == 0 || insn_cost (last_scheduled_insn, link, tmp) == 1)\n+      link = find_insn_list (tmp, INSN_DEPEND (lsi));\n+      if (link == 0 || insn_cost (lsi, link, tmp) == 1)\n \ttmp_class = 3;\n       else if (REG_NOTE_KIND (link) == 0)\t/* Data dependence.  */\n \ttmp_class = 1;\n       else\n \ttmp_class = 2;\n \n-      link = find_insn_list (tmp2, INSN_DEPEND (last_scheduled_insn));\n-      if (link == 0 || insn_cost (last_scheduled_insn, link, tmp2) == 1)\n+      link = find_insn_list (tmp2, INSN_DEPEND (lsi));\n+      if (link == 0 || insn_cost (lsi, link, tmp2) == 1)\n \ttmp2_class = 3;\n       else if (REG_NOTE_KIND (link) == 0)\t/* Data dependence.  */\n \ttmp2_class = 1;"}]}