{"sha": "84747acf8da36425f7e36cf99b251ee047b2e3a5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODQ3NDdhY2Y4ZGEzNjQyNWY3ZTM2Y2Y5OWIyNTFlZTA0N2IyZTNhNQ==", "commit": {"author": {"name": "Tamar Christina", "email": "tamar.christina@arm.com", "date": "2020-12-16T20:43:47Z"}, "committer": {"name": "Tamar Christina", "email": "tamar.christina@arm.com", "date": "2020-12-16T20:43:54Z"}, "message": "AArch64: Add NEON, SVE and SVE2 RTL patterns for Complex Addition.\n\nThis adds implementation for the optabs for add complex operations.  With this\nthe following C code:\n\n  void f90 (float complex a[restrict N], float complex b[restrict N],\n\t    float complex c[restrict N])\n  {\n    for (int i=0; i < N; i++)\n      c[i] = a[i] + (b[i] * I);\n  }\n\ngenerates\n\n  f90:\n\t  mov     x3, 0\n\t  .p2align 3,,7\n  .L2:\n\t  ldr     q0, [x0, x3]\n\t  ldr     q1, [x1, x3]\n\t  fcadd   v0.4s, v0.4s, v1.4s, #90\n\t  str     q0, [x2, x3]\n\t  add     x3, x3, 16\n\t  cmp     x3, 1600\n\t  bne     .L2\n\t  ret\n\ninstead of\n\n  f90:\n\t  add     x3, x1, 1600\n\t  .p2align 3,,7\n  .L2:\n\t  ld2     {v4.4s - v5.4s}, [x0], 32\n\t  ld2     {v2.4s - v3.4s}, [x1], 32\n\t  fsub    v0.4s, v4.4s, v3.4s\n\t  fadd    v1.4s, v5.4s, v2.4s\n\t  st2     {v0.4s - v1.4s}, [x2], 32\n\t  cmp     x3, x1\n\t  bne     .L2\n\t  ret\n\ngcc/ChangeLog:\n\n\t* config/aarch64/aarch64-simd.md (cadd<rot><mode>3): New.\n\t* config/aarch64/iterators.md (SVE2_INT_CADD_OP): New.\n\t* config/aarch64/aarch64-sve.md (cadd<rot><mode>3): New.\n\t* config/aarch64/aarch64-sve2.md (cadd<rot><mode>3): New.", "tree": {"sha": "9df7e178db23e4f9015bca549c456747f7e13563", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9df7e178db23e4f9015bca549c456747f7e13563"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/84747acf8da36425f7e36cf99b251ee047b2e3a5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84747acf8da36425f7e36cf99b251ee047b2e3a5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/84747acf8da36425f7e36cf99b251ee047b2e3a5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84747acf8da36425f7e36cf99b251ee047b2e3a5/comments", "author": {"login": "TamarChristinaArm", "id": 48126768, "node_id": "MDQ6VXNlcjQ4MTI2NzY4", "avatar_url": "https://avatars.githubusercontent.com/u/48126768?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TamarChristinaArm", "html_url": "https://github.com/TamarChristinaArm", "followers_url": "https://api.github.com/users/TamarChristinaArm/followers", "following_url": "https://api.github.com/users/TamarChristinaArm/following{/other_user}", "gists_url": "https://api.github.com/users/TamarChristinaArm/gists{/gist_id}", "starred_url": "https://api.github.com/users/TamarChristinaArm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TamarChristinaArm/subscriptions", "organizations_url": "https://api.github.com/users/TamarChristinaArm/orgs", "repos_url": "https://api.github.com/users/TamarChristinaArm/repos", "events_url": "https://api.github.com/users/TamarChristinaArm/events{/privacy}", "received_events_url": "https://api.github.com/users/TamarChristinaArm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "TamarChristinaArm", "id": 48126768, "node_id": "MDQ6VXNlcjQ4MTI2NzY4", "avatar_url": "https://avatars.githubusercontent.com/u/48126768?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TamarChristinaArm", "html_url": "https://github.com/TamarChristinaArm", "followers_url": "https://api.github.com/users/TamarChristinaArm/followers", "following_url": "https://api.github.com/users/TamarChristinaArm/following{/other_user}", "gists_url": "https://api.github.com/users/TamarChristinaArm/gists{/gist_id}", "starred_url": "https://api.github.com/users/TamarChristinaArm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TamarChristinaArm/subscriptions", "organizations_url": "https://api.github.com/users/TamarChristinaArm/orgs", "repos_url": "https://api.github.com/users/TamarChristinaArm/repos", "events_url": "https://api.github.com/users/TamarChristinaArm/events{/privacy}", "received_events_url": "https://api.github.com/users/TamarChristinaArm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cdb1c276560b26a9c3bc837340669962ef1b430a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cdb1c276560b26a9c3bc837340669962ef1b430a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cdb1c276560b26a9c3bc837340669962ef1b430a"}], "stats": {"total": 36, "additions": 36, "deletions": 0}, "files": [{"sha": "05d18f8bd3ac09c56c82dc73cff855315eb302b7", "filename": "gcc/config/aarch64/aarch64-simd.md", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84747acf8da36425f7e36cf99b251ee047b2e3a5/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84747acf8da36425f7e36cf99b251ee047b2e3a5/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md?ref=84747acf8da36425f7e36cf99b251ee047b2e3a5", "patch": "@@ -449,6 +449,14 @@\n   [(set_attr \"type\" \"neon_fcadd\")]\n )\n \n+(define_expand \"cadd<rot><mode>3\"\n+  [(set (match_operand:VHSDF 0 \"register_operand\")\n+\t(unspec:VHSDF [(match_operand:VHSDF 1 \"register_operand\")\n+\t\t       (match_operand:VHSDF 2 \"register_operand\")]\n+\t\t       FCADD))]\n+  \"TARGET_COMPLEX && !BYTES_BIG_ENDIAN\"\n+)\n+\n (define_insn \"aarch64_fcmla<rot><mode>\"\n   [(set (match_operand:VHSDF 0 \"register_operand\" \"=w\")\n \t(plus:VHSDF (match_operand:VHSDF 1 \"register_operand\" \"0\")"}, {"sha": "6a5194f54f9c3d7b985890df523ceb4221b0cc63", "filename": "gcc/config/aarch64/aarch64-sve.md", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84747acf8da36425f7e36cf99b251ee047b2e3a5/gcc%2Fconfig%2Faarch64%2Faarch64-sve.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84747acf8da36425f7e36cf99b251ee047b2e3a5/gcc%2Fconfig%2Faarch64%2Faarch64-sve.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-sve.md?ref=84747acf8da36425f7e36cf99b251ee047b2e3a5", "patch": "@@ -5480,6 +5480,20 @@\n   \"TARGET_SVE\"\n )\n \n+;; Predicated FCADD using ptrue for unpredicated optab for auto-vectorizer\n+(define_expand \"@cadd<rot><mode>3\"\n+  [(set (match_operand:SVE_FULL_F 0 \"register_operand\")\n+\t(unspec:SVE_FULL_F\n+\t  [(match_dup 3)\n+\t   (const_int SVE_RELAXED_GP)\n+\t   (match_operand:SVE_FULL_F 1 \"register_operand\")\n+\t   (match_operand:SVE_FULL_F 2 \"register_operand\")]\n+\t  SVE_COND_FCADD))]\n+  \"TARGET_SVE\"\n+{\n+  operands[3] = aarch64_ptrue_reg (<VPRED>mode);\n+})\n+\n ;; Predicated FCADD, merging with the first input.\n (define_insn_and_rewrite \"*cond_<optab><mode>_2_relaxed\"\n   [(set (match_operand:SVE_FULL_F 0 \"register_operand\" \"=w, ?&w\")"}, {"sha": "1897ddf69c34496247e40ba36d97b93a9a9d7670", "filename": "gcc/config/aarch64/aarch64-sve2.md", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84747acf8da36425f7e36cf99b251ee047b2e3a5/gcc%2Fconfig%2Faarch64%2Faarch64-sve2.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84747acf8da36425f7e36cf99b251ee047b2e3a5/gcc%2Fconfig%2Faarch64%2Faarch64-sve2.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-sve2.md?ref=84747acf8da36425f7e36cf99b251ee047b2e3a5", "patch": "@@ -1799,6 +1799,16 @@\n   [(set_attr \"movprfx\" \"*,yes\")]\n )\n \n+;; unpredicated optab pattern for auto-vectorizer\n+(define_expand \"cadd<rot><mode>3\"\n+  [(set (match_operand:SVE_FULL_I 0 \"register_operand\")\n+\t(unspec:SVE_FULL_I\n+\t  [(match_operand:SVE_FULL_I 1 \"register_operand\")\n+\t   (match_operand:SVE_FULL_I 2 \"register_operand\")]\n+\t  SVE2_INT_CADD_OP))]\n+  \"TARGET_SVE2\"\n+)\n+\n ;; -------------------------------------------------------------------------\n ;; ---- [INT] Complex ternary operations\n ;; -------------------------------------------------------------------------"}, {"sha": "b8ee4220603ce6da4e8044f61042d98a7e60b17d", "filename": "gcc/config/aarch64/iterators.md", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84747acf8da36425f7e36cf99b251ee047b2e3a5/gcc%2Fconfig%2Faarch64%2Fiterators.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84747acf8da36425f7e36cf99b251ee047b2e3a5/gcc%2Fconfig%2Faarch64%2Fiterators.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Fiterators.md?ref=84747acf8da36425f7e36cf99b251ee047b2e3a5", "patch": "@@ -2598,6 +2598,10 @@\n \t\t\t\t    UNSPEC_SQRDCMLAH180\n \t\t\t\t    UNSPEC_SQRDCMLAH270])\n \n+;; Same as SVE2_INT_CADD but exclude the saturating instructions\n+(define_int_iterator SVE2_INT_CADD_OP [UNSPEC_CADD90\n+\t\t\t\t       UNSPEC_CADD270])\n+\n (define_int_iterator SVE2_INT_CDOT [UNSPEC_CDOT\n \t\t\t\t    UNSPEC_CDOT90\n \t\t\t\t    UNSPEC_CDOT180"}]}