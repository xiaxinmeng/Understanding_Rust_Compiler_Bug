{"sha": "75197b37816fefb9190984a16d994d97a6425529", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzUxOTdiMzc4MTZmZWZiOTE5MDk4NGExNmQ5OTRkOTdhNjQyNTUyOQ==", "commit": {"author": {"name": "Bernd Schmidt", "email": "crux@pool.informatik.rwth-aachen.de", "date": "1998-05-22T00:01:23Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-05-22T00:01:23Z"}, "message": "final.c (JUMP_TABLES_IN_TEXT_SECTION): Provide a default value.\n\n        * final.c (JUMP_TABLES_IN_TEXT_SECTION): Provide a default value.\n        (shorten_branches, final_scan_insn): Test value of\n        JUMP_TABLES_IN_TEXT_SECTION instead of just testing whether it\n        is defined.\n        * tm.texi (JUMP_TABLES_IN_TEXT_SECTION): Corresponding changes.\n        * arm/coff.h: Define JUMP_TABLES_IN_TEXT_SECTION to 1.\n        coff.h: Likewise.\n        * i386/386bsd.h: Likewise.\n        * i386/freebsd-elf.h: Likewise.\n        * i386/freebsd.h: Likewise.\n        * i386/netbsd.h: Likewise.\n        * i386/ptx4-i.h: Likewise.\n        * i386/sysv4.h: Likewise.\n        * pa/pa.h: Likewise.\n        * rs6000/linux.h: Likewise.\n        * rs6000/rs6000.h: Likewise.\n        * sh/sh.h: Likewise.\n        * sparc/sp64-elf.h: Likewise.\n        * v850/v850.h: Likewise.\n        * rs6000/sysv4.h: Define JUMP_TABLES_IN_TEXT_SECTION to 0.\n        * i386/linux.h: Define JUMP_TABLES_IN_TEXT_SECTION to (flag_pic).\n\nFrom-SVN: r19940", "tree": {"sha": "153516bd040cf0c86fb3a0f124e0631e29761483", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/153516bd040cf0c86fb3a0f124e0631e29761483"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/75197b37816fefb9190984a16d994d97a6425529", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75197b37816fefb9190984a16d994d97a6425529", "html_url": "https://github.com/Rust-GCC/gccrs/commit/75197b37816fefb9190984a16d994d97a6425529", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75197b37816fefb9190984a16d994d97a6425529/comments", "author": null, "committer": null, "parents": [{"sha": "37433f498972c73ff619ba435270783b7b6b377a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37433f498972c73ff619ba435270783b7b6b377a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/37433f498972c73ff619ba435270783b7b6b377a"}], "stats": {"total": 152, "additions": 99, "deletions": 53}, "files": [{"sha": "a4c79291d3db51cc7151395207a8bf97a143502d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75197b37816fefb9190984a16d994d97a6425529/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75197b37816fefb9190984a16d994d97a6425529/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=75197b37816fefb9190984a16d994d97a6425529", "patch": "@@ -1,3 +1,27 @@\n+Fri May 22 00:57:00 1998  Bernd Schmidt (crux@pool.informatik.rwth-aachen.de>\n+\n+\t* final.c (JUMP_TABLES_IN_TEXT_SECTION): Provide a default value.\n+\t(shorten_branches, final_scan_insn): Test value of\n+\tJUMP_TABLES_IN_TEXT_SECTION instead of just testing whether it\n+\tis defined.\n+\t* tm.texi (JUMP_TABLES_IN_TEXT_SECTION): Corresponding changes.\n+\t* arm/coff.h: Define JUMP_TABLES_IN_TEXT_SECTION to 1.\n+\tcoff.h: Likewise.\n+\t* i386/386bsd.h: Likewise.\n+\t* i386/freebsd-elf.h: Likewise.\n+\t* i386/freebsd.h: Likewise.\n+\t* i386/netbsd.h: Likewise.\n+\t* i386/ptx4-i.h: Likewise.\n+\t* i386/sysv4.h: Likewise.\n+\t* pa/pa.h: Likewise.\n+\t* rs6000/linux.h: Likewise.\n+\t* rs6000/rs6000.h: Likewise.\n+\t* sh/sh.h: Likewise.\n+\t* sparc/sp64-elf.h: Likewise.\n+\t* v850/v850.h: Likewise.\n+\t* rs6000/sysv4.h: Define JUMP_TABLES_IN_TEXT_SECTION to 0.\n+\t* i386/linux.h: Define JUMP_TABLES_IN_TEXT_SECTION to (flag_pic).\n+\n Thu May 21 19:50:13 1998  J\"orn Rennecke <amylaar@cygnus.co.uk>\n \n \t* regmove.c (gen_add3_insn): New function."}, {"sha": "4e568cb7941f698f2f64ce0dfc84a3f4dac75561", "filename": "gcc/config/arm/coff.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75197b37816fefb9190984a16d994d97a6425529/gcc%2Fconfig%2Farm%2Fcoff.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75197b37816fefb9190984a16d994d97a6425529/gcc%2Fconfig%2Farm%2Fcoff.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fcoff.h?ref=75197b37816fefb9190984a16d994d97a6425529", "patch": "@@ -30,7 +30,7 @@ Boston, MA 02111-1307, USA.  */\n    point the default.  NOT --nfp!  --with{enable?} is supposed to replace it\n    (right?), so let's stop using it.  */\n #undef TARGET_DEFAULT\n-#define TARGET_DEFAULT (ARM_FLAG_SOFT_FLOAT /*+ TARGET_CPU_DEFAULT*/)\n+#define TARGET_DEFAULT (ARM_FLAG_SOFT_FLOAT | ARM_FLAG_APCS_32)\n \n /* ??? Is a big-endian default intended to be supported?  */\n #if 0 /*TARGET_CPU_DEFAULT & ARM_FLAG_BIG_END*/\n@@ -104,7 +104,7 @@ do {\t\t\t\t\t\t\t\t\\\n /* Define this macro if jump tables (for `tablejump' insns) should be\n    output in the text section, along with the assembler instructions.\n    Otherwise, the readonly data section is used.  */\n-#define JUMP_TABLES_IN_TEXT_SECTION\n+#define JUMP_TABLES_IN_TEXT_SECTION 1\n \n #undef READONLY_DATA_SECTION\n #define READONLY_DATA_SECTION\trdata_section"}, {"sha": "fe047e7cd27956892ef66cfd3fd379b6f6697e59", "filename": "gcc/config/arm/tcoff.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75197b37816fefb9190984a16d994d97a6425529/gcc%2Fconfig%2Farm%2Ftcoff.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75197b37816fefb9190984a16d994d97a6425529/gcc%2Fconfig%2Farm%2Ftcoff.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Ftcoff.h?ref=75197b37816fefb9190984a16d994d97a6425529", "patch": "@@ -87,7 +87,7 @@ do {\t\t\t\t\t\t\t\t\\\n /* Define this macro if jump tables (for `tablejump' insns) should be\n    output in the text section, along with the assembler instructions.\n    Otherwise, the readonly data section is used.  */\n-#define JUMP_TABLES_IN_TEXT_SECTION\n+#define JUMP_TABLES_IN_TEXT_SECTION 1\n \n #undef READONLY_DATA_SECTION\n #define READONLY_DATA_SECTION\trdata_section"}, {"sha": "7962321325c93ae52ac47c8eed822bd89a4217ff", "filename": "gcc/config/i386/386bsd.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75197b37816fefb9190984a16d994d97a6425529/gcc%2Fconfig%2Fi386%2F386bsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75197b37816fefb9190984a16d994d97a6425529/gcc%2Fconfig%2Fi386%2F386bsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2F386bsd.h?ref=75197b37816fefb9190984a16d994d97a6425529", "patch": "@@ -69,7 +69,7 @@\n /* Indicate that jump tables go in the text section.  This is\n    necessary when compiling PIC code.  */\n \n-#define JUMP_TABLES_IN_TEXT_SECTION\n+#define JUMP_TABLES_IN_TEXT_SECTION 1\n \n /* Don't default to pcc-struct-return, because gcc is the only compiler, and\n    we want to retain compatibility with older gcc versions.  */"}, {"sha": "6f99a886e8789b19190fba478a497900ef2451a7", "filename": "gcc/config/i386/freebsd-elf.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75197b37816fefb9190984a16d994d97a6425529/gcc%2Fconfig%2Fi386%2Ffreebsd-elf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75197b37816fefb9190984a16d994d97a6425529/gcc%2Fconfig%2Fi386%2Ffreebsd-elf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Ffreebsd-elf.h?ref=75197b37816fefb9190984a16d994d97a6425529", "patch": "@@ -38,7 +38,7 @@ Boston, MA 02111-1307, USA.  */\n \n /* Indicate that jump tables go in the text section.  This is\n    necessary when compiling PIC code.  */\n-#define JUMP_TABLES_IN_TEXT_SECTION\n+#define JUMP_TABLES_IN_TEXT_SECTION 1\n \n /* Copy this from the svr4 specifications... */\n /* Define the register numbers to be used in Dwarf debugging information."}, {"sha": "40f703ec6c65941372b798d08e205474b2a3196c", "filename": "gcc/config/i386/freebsd.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75197b37816fefb9190984a16d994d97a6425529/gcc%2Fconfig%2Fi386%2Ffreebsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75197b37816fefb9190984a16d994d97a6425529/gcc%2Fconfig%2Fi386%2Ffreebsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Ffreebsd.h?ref=75197b37816fefb9190984a16d994d97a6425529", "patch": "@@ -84,7 +84,7 @@ Boston, MA 02111-1307, USA.  */\n /* Indicate that jump tables go in the text section.  This is\n    necessary when compiling PIC code.  */\n \n-#define JUMP_TABLES_IN_TEXT_SECTION\n+#define JUMP_TABLES_IN_TEXT_SECTION 1\n \n /* Don't default to pcc-struct-return, because gcc is the only compiler, and\n    we want to retain compatibility with older gcc versions.  */"}, {"sha": "50341bd4ef1389bec37a0c79cae8bd50be4b7965", "filename": "gcc/config/i386/linux.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75197b37816fefb9190984a16d994d97a6425529/gcc%2Fconfig%2Fi386%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75197b37816fefb9190984a16d994d97a6425529/gcc%2Fconfig%2Fi386%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Flinux.h?ref=75197b37816fefb9190984a16d994d97a6425529", "patch": "@@ -49,7 +49,7 @@ Boston, MA 02111-1307, USA.  */\n \n /* Indicate that jump tables go in the text section.  This is\n    necessary when compiling PIC code.  */\n-#define JUMP_TABLES_IN_TEXT_SECTION\n+#define JUMP_TABLES_IN_TEXT_SECTION (flag_pic)\n \n /* Copy this from the svr4 specifications... */\n /* Define the register numbers to be used in Dwarf debugging information."}, {"sha": "5978aec5c4b0cdd8147dccdf6e8c605e1ca4e180", "filename": "gcc/config/i386/netbsd.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75197b37816fefb9190984a16d994d97a6425529/gcc%2Fconfig%2Fi386%2Fnetbsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75197b37816fefb9190984a16d994d97a6425529/gcc%2Fconfig%2Fi386%2Fnetbsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fnetbsd.h?ref=75197b37816fefb9190984a16d994d97a6425529", "patch": "@@ -50,7 +50,7 @@\n /* Indicate that jump tables go in the text section.  This is\n    necessary when compiling PIC code.  */\n \n-#define JUMP_TABLES_IN_TEXT_SECTION\n+#define JUMP_TABLES_IN_TEXT_SECTION 1\n \n /* Don't default to pcc-struct-return, because gcc is the only compiler, and\n    we want to retain compatibility with older gcc versions.  */"}, {"sha": "1537b4a4ceee589894da297e55dc2d7f2a37d2c1", "filename": "gcc/config/i386/ptx4-i.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75197b37816fefb9190984a16d994d97a6425529/gcc%2Fconfig%2Fi386%2Fptx4-i.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75197b37816fefb9190984a16d994d97a6425529/gcc%2Fconfig%2Fi386%2Fptx4-i.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fptx4-i.h?ref=75197b37816fefb9190984a16d994d97a6425529", "patch": "@@ -244,4 +244,4 @@ do { long value[3];\t\t\t\t\t\t\t\\\n /* Indicate that jump tables go in the text section.  This is\n    necessary when compiling PIC code.  */\n \n-#define JUMP_TABLES_IN_TEXT_SECTION\n+#define JUMP_TABLES_IN_TEXT_SECTION 1"}, {"sha": "0127d69cbb62f04a0dcab904d0cd539d74aad474", "filename": "gcc/config/i386/sysv4.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75197b37816fefb9190984a16d994d97a6425529/gcc%2Fconfig%2Fi386%2Fsysv4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75197b37816fefb9190984a16d994d97a6425529/gcc%2Fconfig%2Fi386%2Fsysv4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsysv4.h?ref=75197b37816fefb9190984a16d994d97a6425529", "patch": "@@ -242,7 +242,7 @@ do { long value[3];\t\t\t\t\t\t\t\\\n /* Indicate that jump tables go in the text section.  This is\n    necessary when compiling PIC code.  */\n \n-#define JUMP_TABLES_IN_TEXT_SECTION\n+#define JUMP_TABLES_IN_TEXT_SECTION 1\n \n /* A C statement (sans semicolon) to output to the stdio stream\n    FILE the assembler definition of uninitialized global DECL named"}, {"sha": "5e506a4f410ed54689f73a686f6883dbaccc9916", "filename": "gcc/config/pa/pa.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75197b37816fefb9190984a16d994d97a6425529/gcc%2Fconfig%2Fpa%2Fpa.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75197b37816fefb9190984a16d994d97a6425529/gcc%2Fconfig%2Fpa%2Fpa.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.h?ref=75197b37816fefb9190984a16d994d97a6425529", "patch": "@@ -2321,7 +2321,7 @@ DTORS_SECTION_FUNCTION\n     fprintf (FILE, \"\\tb L$%04d\\n\\tnop\\n\", VALUE)\n \n /* Jump tables are executable code and live in the TEXT section on the PA.  */\n-#define JUMP_TABLES_IN_TEXT_SECTION\n+#define JUMP_TABLES_IN_TEXT_SECTION 1\n \n /* This is how to output an element of a case-vector that is relative.\n    This must be defined correctly as it is used when generating PIC code."}, {"sha": "1843fb82faf3187350e0638f0032c7067f025229", "filename": "gcc/config/rs6000/linux.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75197b37816fefb9190984a16d994d97a6425529/gcc%2Fconfig%2Frs6000%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75197b37816fefb9190984a16d994d97a6425529/gcc%2Fconfig%2Frs6000%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Flinux.h?ref=75197b37816fefb9190984a16d994d97a6425529", "patch": "@@ -69,4 +69,4 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n #endif\n \n #undef JUMP_TABLES_IN_TEXT_SECTION\n-#define JUMP_TABLES_IN_TEXT_SECTION\n+#define JUMP_TABLES_IN_TEXT_SECTION 1"}, {"sha": "66756a0b975821b27f5b51185446bc9ba59123b8", "filename": "gcc/config/rs6000/rs6000.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75197b37816fefb9190984a16d994d97a6425529/gcc%2Fconfig%2Frs6000%2Frs6000.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75197b37816fefb9190984a16d994d97a6425529/gcc%2Fconfig%2Frs6000%2Frs6000.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.h?ref=75197b37816fefb9190984a16d994d97a6425529", "patch": "@@ -2375,7 +2375,7 @@ extern int rs6000_trunc_used;\n \n /* Indicate that jump tables go in the text section.  */\n \n-#define JUMP_TABLES_IN_TEXT_SECTION\n+#define JUMP_TABLES_IN_TEXT_SECTION 1\n \n /* Define the routines to implement these extra sections.  */\n "}, {"sha": "1a7439a3383c681eaf59e2dda368f9420a6b7e96", "filename": "gcc/config/rs6000/sysv4.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75197b37816fefb9190984a16d994d97a6425529/gcc%2Fconfig%2Frs6000%2Fsysv4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75197b37816fefb9190984a16d994d97a6425529/gcc%2Fconfig%2Frs6000%2Fsysv4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fsysv4.h?ref=75197b37816fefb9190984a16d994d97a6425529", "patch": "@@ -331,6 +331,7 @@ do {\t\t\t\t\t\t\t\t\t\\\n \n /* Put jump tables in read-only memory, rather than in .text.  */\n #undef JUMP_TABLES_IN_TEXT_SECTION\n+#define JUMP_TABLES_IN_TEXT_SECTION 0\n \n /* Disable AIX-ism that disables turning -B into -L if the argument specifies a\n    relative file name.  This breaks setting GCC_EXEC_PREFIX to D:\\path under"}, {"sha": "5c347fcdff5f147bf0e7be553c42953dc5d97252", "filename": "gcc/config/sh/sh.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75197b37816fefb9190984a16d994d97a6425529/gcc%2Fconfig%2Fsh%2Fsh.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75197b37816fefb9190984a16d994d97a6425529/gcc%2Fconfig%2Fsh%2Fsh.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.h?ref=75197b37816fefb9190984a16d994d97a6425529", "patch": "@@ -1518,7 +1518,7 @@ dtors_section()\t\t\t\t\t\t\t\\\n \n /* Define this so that jump tables go in same section as the current function,\n    which could be text or it could be a user defined section.  */\n-#define JUMP_TABLES_IN_TEXT_SECTION\n+#define JUMP_TABLES_IN_TEXT_SECTION 1\n \n /* A C statement to output something to the assembler file to switch to section\n    NAME for object DECL which is either a FUNCTION_DECL, a VAR_DECL or"}, {"sha": "24828664496c8d5c98a7a01be772f90aa71ca015", "filename": "gcc/config/sparc/sp64-elf.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75197b37816fefb9190984a16d994d97a6425529/gcc%2Fconfig%2Fsparc%2Fsp64-elf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75197b37816fefb9190984a16d994d97a6425529/gcc%2Fconfig%2Fsparc%2Fsp64-elf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsp64-elf.h?ref=75197b37816fefb9190984a16d994d97a6425529", "patch": "@@ -104,7 +104,7 @@ crtbegin.o%s \\\n    tables from other label refs (when we need to).  */\n /* ??? Revisit this.  */\n #undef JUMP_TABLES_IN_TEXT_SECTION\n-#define JUMP_TABLES_IN_TEXT_SECTION\n+#define JUMP_TABLES_IN_TEXT_SECTION 1\n \n /* System V Release 4 uses DWARF debugging info.\n    GDB doesn't support 64 bit stabs yet and the desired debug format is DWARF"}, {"sha": "2ccbe98925b6d141cced7e741efbc8fb8f0ff5c6", "filename": "gcc/config/v850/v850.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75197b37816fefb9190984a16d994d97a6425529/gcc%2Fconfig%2Fv850%2Fv850.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75197b37816fefb9190984a16d994d97a6425529/gcc%2Fconfig%2Fv850%2Fv850.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fv850%2Fv850.h?ref=75197b37816fefb9190984a16d994d97a6425529", "patch": "@@ -1326,7 +1326,7 @@ do { char dstr[30];\t\t\t\t\t\\\n \n /* The switch instruction requires that the jump table immediately follow\n    it. */\n-#define JUMP_TABLES_IN_TEXT_SECTION\n+#define JUMP_TABLES_IN_TEXT_SECTION 1\n \n /* svr4.h defines this assuming that 4 byte alignment is required.  */\n #undef ASM_OUTPUT_BEFORE_CASE_LABEL"}, {"sha": "d30e5b24d81357e4f4f4ee857b848baf2ee47631", "filename": "gcc/final.c", "status": "modified", "additions": 54, "deletions": 34, "changes": 88, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75197b37816fefb9190984a16d994d97a6425529/gcc%2Ffinal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75197b37816fefb9190984a16d994d97a6425529/gcc%2Ffinal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffinal.c?ref=75197b37816fefb9190984a16d994d97a6425529", "patch": "@@ -130,6 +130,10 @@ Boston, MA 02111-1307, USA.  */\n #define IS_ASM_LOGICAL_LINE_SEPARATOR(C) ((C) == ';')\n #endif\n \n+#ifndef JUMP_TABLES_IN_TEXT_SECTION\n+#define JUMP_TABLES_IN_TEXT_SECTION 0\n+#endif\n+\n /* Nonzero means this function is a leaf function, with no function calls. \n    This variable exists to be examined in FUNCTION_PROLOGUE\n    and FUNCTION_EPILOGUE.  Always zero, unless set by some action.  */\n@@ -1062,23 +1066,27 @@ shorten_branches (first)\n \t      max_skip = LABEL_ALIGN_MAX_SKIP;\n \t    }\n \t  next = NEXT_INSN (insn);\n-/* ADDR_VECs only take room if read-only data goes into the text section.  */\n-#if !defined(READONLY_DATA_SECTION) || defined(JUMP_TABLES_IN_TEXT_SECTION)\n-\t  if (next && GET_CODE (next) == JUMP_INSN)\n-\t    {\n-\t      rtx nextbody = PATTERN (next);\n-\t      if (GET_CODE (nextbody) == ADDR_VEC\n-\t\t  || GET_CODE (nextbody) == ADDR_DIFF_VEC)\n-\t\t{\n-\t\t  log = ADDR_VEC_ALIGN (next);\n-\t\t  if (max_log < log)\n-\t\t    {\n-\t\t      max_log = log;\n-\t\t      max_skip = LABEL_ALIGN_MAX_SKIP;\n-\t\t    }\n-\t\t}\n-\t    }\n+\t  /* ADDR_VECs only take room if read-only data goes into the text\n+\t     section.  */\n+\t  if (JUMP_TABLES_IN_TEXT_SECTION\n+#if !defined(READONLY_DATA_SECTION)\n+\t      || 1\n #endif\n+\t      )\n+\t    if (next && GET_CODE (next) == JUMP_INSN)\n+\t      {\n+\t\trtx nextbody = PATTERN (next);\n+\t\tif (GET_CODE (nextbody) == ADDR_VEC\n+\t\t    || GET_CODE (nextbody) == ADDR_DIFF_VEC)\n+\t\t  {\n+\t\t    log = ADDR_VEC_ALIGN (next);\n+\t\t    if (max_log < log)\n+\t\t      {\n+\t\t\tmax_log = log;\n+\t\t\tmax_skip = LABEL_ALIGN_MAX_SKIP;\n+\t\t      }\n+\t\t  }\n+\t      }\n \t  LABEL_TO_ALIGNMENT (insn) = max_log;\n \t  LABEL_TO_MAX_SKIP (insn) = max_skip;\n \t  max_log = 0;\n@@ -1254,11 +1262,15 @@ shorten_branches (first)\n \t{\n \t  /* This only takes room if read-only data goes into the text\n \t     section.  */\n-#if !defined(READONLY_DATA_SECTION) || defined(JUMP_TABLES_IN_TEXT_SECTION)\n-\t  insn_lengths[uid] = (XVECLEN (body, GET_CODE (body) == ADDR_DIFF_VEC)\n-\t\t\t       * GET_MODE_SIZE (GET_MODE (body)));\n+\t  if (JUMP_TABLES_IN_TEXT_SECTION\n+#if !defined(READONLY_DATA_SECTION)\n+\t      || 1\n+#endif\n+\t      )\n+\t    insn_lengths[uid] = (XVECLEN (body,\n+\t\t\t\t\t  GET_CODE (body) == ADDR_DIFF_VEC)\n+\t\t\t\t * GET_MODE_SIZE (GET_MODE (body)));\n \t  /* Alignment is handled by ADDR_VEC_ALIGN.  */\n-#endif\n \t}\n       else if (asm_noperands (body) >= 0)\n \tinsn_lengths[uid] = asm_insn_count (body) * insn_default_length (insn);\n@@ -1449,13 +1461,19 @@ shorten_branches (first)\n \t      PUT_MODE (body, CASE_VECTOR_SHORTEN_MODE (min_addr - rel_addr,\n \t\t\t\t\t\t\tmax_addr - rel_addr,\n \t\t\t\t\t\t\tbody));\n-#if !defined(READONLY_DATA_SECTION) || defined(JUMP_TABLES_IN_TEXT_SECTION)\n-\t      insn_lengths[uid]\n-\t\t= (XVECLEN (body, 1) * GET_MODE_SIZE (GET_MODE (body)));\n-\t      insn_current_address += insn_lengths[uid];\n-\t      if (insn_lengths[uid] != old_length)\n-\t\tsomething_changed = 1;\n+\t      if (JUMP_TABLES_IN_TEXT_SECTION\n+#if !defined(READONLY_DATA_SECTION)\n+\t\t  || 1\n #endif\n+\t\t  )\n+\t\t{\n+\t\t  insn_lengths[uid]\n+\t\t    = (XVECLEN (body, 1) * GET_MODE_SIZE (GET_MODE (body)));\n+\t\t  insn_current_address += insn_lengths[uid];\n+\t\t  if (insn_lengths[uid] != old_length)\n+\t\t    something_changed = 1;\n+\t\t}\n+\n \t      continue;\n \t    }\n #endif /* CASE_VECTOR_SHORTEN_MODE */\n@@ -2307,16 +2325,18 @@ final_scan_insn (insn, file, optimize, prescan, nopeepholes)\n \t  if (GET_CODE (nextbody) == ADDR_VEC\n \t      || GET_CODE (nextbody) == ADDR_DIFF_VEC)\n \t    {\n-#ifndef JUMP_TABLES_IN_TEXT_SECTION\n-\t      readonly_data_section ();\n+\t      if (! JUMP_TABLES_IN_TEXT_SECTION)\n+\t\t{\n+\t\t  readonly_data_section ();\n #ifdef READONLY_DATA_SECTION\n-\t      ASM_OUTPUT_ALIGN (file,\n-\t\t\t\texact_log2 (BIGGEST_ALIGNMENT\n-\t\t\t\t\t    / BITS_PER_UNIT));\n+\t\t  ASM_OUTPUT_ALIGN (file,\n+\t\t\t\t    exact_log2 (BIGGEST_ALIGNMENT\n+\t\t\t\t\t\t/ BITS_PER_UNIT));\n #endif /* READONLY_DATA_SECTION */\n-#else /* JUMP_TABLES_IN_TEXT_SECTION */\n-\t      function_section (current_function_decl);\n-#endif /* JUMP_TABLES_IN_TEXT_SECTION */\n+\t\t}\n+\t      else\n+\t\tfunction_section (current_function_decl);\n+\n #ifdef ASM_OUTPUT_CASE_LABEL\n \t      ASM_OUTPUT_CASE_LABEL (file, \"L\", CODE_LABEL_NUMBER (insn),\n \t\t\t\t     NEXT_INSN (insn));"}, {"sha": "0968754821a60b372617564801b9897d438bbd97", "filename": "gcc/tm.texi", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75197b37816fefb9190984a16d994d97a6425529/gcc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75197b37816fefb9190984a16d994d97a6425529/gcc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftm.texi?ref=75197b37816fefb9190984a16d994d97a6425529", "patch": "@@ -4826,9 +4826,10 @@ data section.\n \n @findex JUMP_TABLES_IN_TEXT_SECTION\n @item JUMP_TABLES_IN_TEXT_SECTION\n-Define this macro if jump tables (for @code{tablejump} insns) should be\n-output in the text section, along with the assembler instructions.\n-Otherwise, the readonly data section is used.\n+Define this macro to be an expression with a non-zero value if jump \n+tables (for @code{tablejump} insns) should be output in the text\n+section, along with the assembler instructions.  Otherwise, the\n+readonly data section is used.\n \n This macro is irrelevant if there is no separate readonly data section.\n "}]}