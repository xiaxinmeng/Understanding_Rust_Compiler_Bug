{"sha": "fb00a9fc397c5fc487218f7a84069837460f88ee", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmIwMGE5ZmMzOTdjNWZjNDg3MjE4ZjdhODQwNjk4Mzc0NjBmODhlZQ==", "commit": {"author": {"name": "Christophe Lyon", "email": "christophe.lyon@linaro.org", "date": "2020-09-11T09:21:55Z"}, "committer": {"name": "Christophe Lyon", "email": "christophe.lyon@linaro.org", "date": "2020-09-11T13:00:23Z"}, "message": "libstdc++-v3/libsupc++/eh_call.cc: Avoid warning with -fno-exceptions.\n\nWhen building with -fno-exceptions, __throw_exception_again expands to\nnothing, causing a \"suggest braces around empty body in an 'if'\nstatement\" warning.\n\nThis patch adds braces, like what was done in eh_personality.cc in svn\nr193295 (git g:54ba39f599fc2f3d59fd3cd828a301ce9b731a20)\n\n2020-09-11  Torbj\u00f6rn SVENSSON  <torbjorn.svensson@st.com>\n\t    Christophe Lyon  <christophe.lyon@linaro.org>\n\n\tlibstdc++-v3/\n\t* libsupc++/eh_call.cc: Avoid warning with -fno-exceptions.", "tree": {"sha": "7e84838cb60608f0ebcaa0eca469f120374172be", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7e84838cb60608f0ebcaa0eca469f120374172be"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fb00a9fc397c5fc487218f7a84069837460f88ee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb00a9fc397c5fc487218f7a84069837460f88ee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fb00a9fc397c5fc487218f7a84069837460f88ee", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb00a9fc397c5fc487218f7a84069837460f88ee/comments", "author": null, "committer": null, "parents": [{"sha": "b32d2ea8c29203519fbd9c5e90b06941e7cd75f3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b32d2ea8c29203519fbd9c5e90b06941e7cd75f3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b32d2ea8c29203519fbd9c5e90b06941e7cd75f3"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "d50c4fbf3c4496285bf330c973921d4859508f9b", "filename": "libstdc++-v3/libsupc++/eh_call.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb00a9fc397c5fc487218f7a84069837460f88ee/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Feh_call.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb00a9fc397c5fc487218f7a84069837460f88ee/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Feh_call.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Feh_call.cc?ref=fb00a9fc397c5fc487218f7a84069837460f88ee", "patch": "@@ -138,7 +138,7 @@ __cxa_call_unexpected(void* exc_obj_in)\n \n \t  if (__cxa_type_match(&new_xh->unwindHeader, catch_type, false,\n \t\t\t       &new_ptr) != ctm_failed)\n-\t    __throw_exception_again;\n+\t    { __throw_exception_again; }\n \n \t  // If the exception spec allows std::bad_exception, throw that.\n \t  // We don't have a thrown object to compare against, but since"}]}