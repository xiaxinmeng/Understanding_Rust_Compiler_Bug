{"sha": "3c72b04bf1b21ef6256844d06fd7e7b2db318eab", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2M3MmIwNGJmMWIyMWVmNjI1Njg0NGQwNmZkN2U3YjJkYjMxOGVhYg==", "commit": {"author": {"name": "Harald Anlauf", "email": "anlauf@gmx.de", "date": "2019-11-12T21:14:19Z"}, "committer": {"name": "Harald Anlauf", "email": "anlauf@gcc.gnu.org", "date": "2019-11-12T21:14:19Z"}, "message": "re PR fortran/81651 (Enhancement request: have f951 print out fully qualified module file name)\n\n2019-11-12  Harald Anlauf  <anlauf@gmx.de>\n\n\tPR fortran/81651\n\t* module.c (gzopen_included_file, gzopen_included_file_1)\n\t(gzopen_intrinsic_module, bad_module, gfc_use_module): Use fully\n\tqualified module path for error reporting.\n\nFrom-SVN: r278105", "tree": {"sha": "b57a6a186c16ebd3e896000e14d42abe39d39c4d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b57a6a186c16ebd3e896000e14d42abe39d39c4d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3c72b04bf1b21ef6256844d06fd7e7b2db318eab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c72b04bf1b21ef6256844d06fd7e7b2db318eab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c72b04bf1b21ef6256844d06fd7e7b2db318eab", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c72b04bf1b21ef6256844d06fd7e7b2db318eab/comments", "author": {"login": "harald-anlauf", "id": 90786862, "node_id": "MDQ6VXNlcjkwNzg2ODYy", "avatar_url": "https://avatars.githubusercontent.com/u/90786862?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harald-anlauf", "html_url": "https://github.com/harald-anlauf", "followers_url": "https://api.github.com/users/harald-anlauf/followers", "following_url": "https://api.github.com/users/harald-anlauf/following{/other_user}", "gists_url": "https://api.github.com/users/harald-anlauf/gists{/gist_id}", "starred_url": "https://api.github.com/users/harald-anlauf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harald-anlauf/subscriptions", "organizations_url": "https://api.github.com/users/harald-anlauf/orgs", "repos_url": "https://api.github.com/users/harald-anlauf/repos", "events_url": "https://api.github.com/users/harald-anlauf/events{/privacy}", "received_events_url": "https://api.github.com/users/harald-anlauf/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "fc5cf4e0f51c071aad8d182c1511801ad5945e60", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc5cf4e0f51c071aad8d182c1511801ad5945e60", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fc5cf4e0f51c071aad8d182c1511801ad5945e60"}], "stats": {"total": 37, "additions": 30, "deletions": 7}, "files": [{"sha": "876a9bbd6e7dbc33bcaa463bc19eb8b342a4e14b", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c72b04bf1b21ef6256844d06fd7e7b2db318eab/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c72b04bf1b21ef6256844d06fd7e7b2db318eab/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=3c72b04bf1b21ef6256844d06fd7e7b2db318eab", "patch": "@@ -1,3 +1,10 @@\n+2019-11-12  Harald Anlauf  <anlauf@gmx.de>\n+\n+\tPR fortran/81651\n+\t* module.c (gzopen_included_file, gzopen_included_file_1)\n+\t(gzopen_intrinsic_module, bad_module, gfc_use_module): Use fully\n+\tqualified module path for error reporting.\n+\n 2019-11-12  Martin Liska  <mliska@suse.cz>\n \n \t* options.c (gfc_init_options):"}, {"sha": "755f237a0e72368b9d71483dc89081b498672b7b", "filename": "gcc/fortran/module.c", "status": "modified", "additions": 23, "deletions": 7, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c72b04bf1b21ef6256844d06fd7e7b2db318eab/gcc%2Ffortran%2Fmodule.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c72b04bf1b21ef6256844d06fd7e7b2db318eab/gcc%2Ffortran%2Fmodule.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fmodule.c?ref=3c72b04bf1b21ef6256844d06fd7e7b2db318eab", "patch": "@@ -187,6 +187,8 @@ pointer_info;\n /* The gzFile for the module we're reading or writing.  */\n static gzFile module_fp;\n \n+/* Fully qualified module path */\n+static char *module_fullpath = NULL;\n \n /* The name of the module we're reading (USE'ing) or writing.  */\n static const char *module_name;\n@@ -1101,6 +1103,8 @@ gzopen_included_file_1 (const char *name, gfc_directorylist *list,\n          if (gfc_cpp_makedep ())\n            gfc_cpp_add_dep (fullname, system);\n \n+\t free (module_fullpath);\n+\t module_fullpath = xstrdup (fullname);\n          return f;\n        }\n     }\n@@ -1116,8 +1120,14 @@ gzopen_included_file (const char *name, bool include_cwd, bool module)\n   if (IS_ABSOLUTE_PATH (name) || include_cwd)\n     {\n       f = gzopen (name, \"r\");\n-      if (f && gfc_cpp_makedep ())\n-       gfc_cpp_add_dep (name, false);\n+      if (f)\n+\t{\n+\t  if (gfc_cpp_makedep ())\n+\t    gfc_cpp_add_dep (name, false);\n+\n+\t  free (module_fullpath);\n+\t  module_fullpath = xstrdup (name);\n+\t}\n     }\n \n   if (!f)\n@@ -1134,8 +1144,14 @@ gzopen_intrinsic_module (const char* name)\n   if (IS_ABSOLUTE_PATH (name))\n     {\n       f = gzopen (name, \"r\");\n-      if (f && gfc_cpp_makedep ())\n-        gfc_cpp_add_dep (name, true);\n+      if (f)\n+\t{\n+\t  if (gfc_cpp_makedep ())\n+\t    gfc_cpp_add_dep (name, true);\n+\n+\t  free (module_fullpath);\n+\t  module_fullpath = xstrdup (name);\n+\t}\n     }\n \n   if (!f)\n@@ -1181,7 +1197,7 @@ bad_module (const char *msgid)\n     {\n     case IO_INPUT:\n       gfc_fatal_error (\"Reading module %qs at line %d column %d: %s\",\n-\t  \t       module_name, module_line, module_column, msgid);\n+\t  \t       module_fullpath, module_line, module_column, msgid);\n       break;\n     case IO_OUTPUT:\n       gfc_fatal_error (\"Writing module %qs at line %d column %d: %s\",\n@@ -7141,7 +7157,7 @@ gfc_use_module (gfc_use_list *module)\n       if ((start == 1 && strcmp (atom_name, \"GFORTRAN\") != 0)\n \t  || (start == 2 && strcmp (atom_name, \" module\") != 0))\n \tgfc_fatal_error (\"File %qs opened at %C is not a GNU Fortran\"\n-\t\t\t \" module file\", filename);\n+\t\t\t \" module file\", module_fullpath);\n       if (start == 3)\n \t{\n \t  if (strcmp (atom_name, \" version\") != 0\n@@ -7150,7 +7166,7 @@ gfc_use_module (gfc_use_list *module)\n \t      || strcmp (atom_string, MOD_VERSION))\n \t    gfc_fatal_error (\"Cannot read module file %qs opened at %C,\"\n \t\t\t     \" because it was created by a different\"\n-\t\t\t     \" version of GNU Fortran\", filename);\n+\t\t\t     \" version of GNU Fortran\", module_fullpath);\n \n \t  free (atom_string);\n \t}"}]}