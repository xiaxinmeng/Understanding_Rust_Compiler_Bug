{"sha": "a6de8e2167ec79f1db37c3d5ac29fd73ac7a2e2a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTZkZThlMjE2N2VjNzlmMWRiMzdjM2Q1YWMyOWZkNzNhYzdhMmUyYQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@vlsi1.ultra.nyu.edu", "date": "2005-03-29T16:21:55Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2005-03-29T16:21:55Z"}, "message": "re PR ada/19956 (ICE copy_tree_r, at tree-inline.c:2320 on simple Ada code)\n\n2005-03-29  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n\n\tPR ada/19956\n\t* utils.c (finish_record_type): Use variable_size when setting sizes.\n\nFrom-SVN: r97186", "tree": {"sha": "feca584ba266a98eb8c687cc50ea7aa3b16dd2f3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/feca584ba266a98eb8c687cc50ea7aa3b16dd2f3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a6de8e2167ec79f1db37c3d5ac29fd73ac7a2e2a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6de8e2167ec79f1db37c3d5ac29fd73ac7a2e2a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a6de8e2167ec79f1db37c3d5ac29fd73ac7a2e2a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6de8e2167ec79f1db37c3d5ac29fd73ac7a2e2a/comments", "author": null, "committer": null, "parents": [{"sha": "2813bb6b356e37af272d5ce279d0fdddc794e34f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2813bb6b356e37af272d5ce279d0fdddc794e34f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2813bb6b356e37af272d5ce279d0fdddc794e34f"}], "stats": {"total": 10, "additions": 6, "deletions": 4}, "files": [{"sha": "484067d87f010f1dde32926e78267d79b80bce8e", "filename": "gcc/ada/utils.c", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6de8e2167ec79f1db37c3d5ac29fd73ac7a2e2a/gcc%2Fada%2Futils.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6de8e2167ec79f1db37c3d5ac29fd73ac7a2e2a/gcc%2Fada%2Futils.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Futils.c?ref=a6de8e2167ec79f1db37c3d5ac29fd73ac7a2e2a", "patch": "@@ -668,10 +668,10 @@ finish_record_type (tree record_type, tree fieldlist, bool has_rep,\n       TYPE_MODE (record_type) = BLKmode;\n \n       if (!had_size_unit)\n-\t  TYPE_SIZE_UNIT (record_type) = size_zero_node;\n-\n+\tTYPE_SIZE_UNIT (record_type) = size_zero_node;\n       if (!had_size)\n \tTYPE_SIZE (record_type) = bitsize_zero_node;\n+\n       /* For all-repped records with a size specified, lay the QUAL_UNION_TYPE\n \t out just like a UNION_TYPE, since the size will be fixed.  */\n       else if (code == QUAL_UNION_TYPE)\n@@ -796,9 +796,11 @@ finish_record_type (tree record_type, tree fieldlist, bool has_rep,\n \t   : convert (sizetype, size_binop (CEIL_DIV_EXPR, size,\n \t\t\t\t\t    bitsize_unit_node)));\n \n-      TYPE_SIZE (record_type) = round_up (size, TYPE_ALIGN (record_type));\n+      TYPE_SIZE (record_type)\n+\t= variable_size (round_up (size, TYPE_ALIGN (record_type)));\n       TYPE_SIZE_UNIT (record_type)\n-\t= round_up (size_unit, TYPE_ALIGN (record_type) / BITS_PER_UNIT);\n+\t= variable_size (round_up (size_unit,\n+\t\t\t\t   TYPE_ALIGN (record_type) / BITS_PER_UNIT));\n \n       compute_record_mode (record_type);\n     }"}]}