{"sha": "fbb2a6dcf8abbd1a605544597442e3d67984a455", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmJiMmE2ZGNmOGFiYmQxYTYwNTU0NDU5NzQ0MmUzZDY3OTg0YTQ1NQ==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2019-10-08T00:37:45Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2019-10-08T00:37:45Z"}, "message": "Make C2X imply -fno-fp-int-builtin-inexact.\n\nSince TS 18661-1 has been integrated into C2X, this patch makes C2X\nimply -fno-fp-int-builtin-inexact.\n\nBootstrapped with no regressions on x86_64-pc-linux-gnu.\n\ngcc:\n\t* doc/invoke.texi (-ffp-int-builtin-inexact): Document\n\t-fno-fp-int-builtin-inexact default for C2X.\n\ngcc/c-family:\n\t* c-opts.c (c_common_post_options): Set\n\t-fno-fp-int-builtin-inexact for C2X.\n\ngcc/testsuite:\n\t* gcc.dg/torture/builtin-fp-int-inexact-c2x.c: New test.\n\nFrom-SVN: r276686", "tree": {"sha": "24ae9f7f7cca0794b54fdcc58088dce8cb05ac5e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/24ae9f7f7cca0794b54fdcc58088dce8cb05ac5e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fbb2a6dcf8abbd1a605544597442e3d67984a455", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fbb2a6dcf8abbd1a605544597442e3d67984a455", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fbb2a6dcf8abbd1a605544597442e3d67984a455", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fbb2a6dcf8abbd1a605544597442e3d67984a455/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b11df8983de352246b68c1485121d4aa8f26a5bb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b11df8983de352246b68c1485121d4aa8f26a5bb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b11df8983de352246b68c1485121d4aa8f26a5bb"}], "stats": {"total": 35, "additions": 31, "deletions": 4}, "files": [{"sha": "23e0a259e0c60524ce37e4153790c6b21b5e4c00", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbb2a6dcf8abbd1a605544597442e3d67984a455/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbb2a6dcf8abbd1a605544597442e3d67984a455/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fbb2a6dcf8abbd1a605544597442e3d67984a455", "patch": "@@ -1,3 +1,8 @@\n+2019-10-08  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* doc/invoke.texi (-ffp-int-builtin-inexact): Document\n+\t-fno-fp-int-builtin-inexact default for C2X.\n+\n 2019-10-07  Prathamesh Kulkarni  <prathamesh.kulkarni@linaro.org>\n \t    Richard Biener  <rguenther@suse.de>\n "}, {"sha": "93077ff7c0e550175dc06b72e6679f6c8cb4236e", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbb2a6dcf8abbd1a605544597442e3d67984a455/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbb2a6dcf8abbd1a605544597442e3d67984a455/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=fbb2a6dcf8abbd1a605544597442e3d67984a455", "patch": "@@ -1,3 +1,8 @@\n+2019-10-08  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* c-opts.c (c_common_post_options): Set\n+\t-fno-fp-int-builtin-inexact for C2X.\n+\n 2019-10-05  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/91369 - Implement P0784R7: constexpr new"}, {"sha": "4ad24bd3ea04b87b6f676ad1bb085d4dba0d4ee4", "filename": "gcc/c-family/c-opts.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbb2a6dcf8abbd1a605544597442e3d67984a455/gcc%2Fc-family%2Fc-opts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbb2a6dcf8abbd1a605544597442e3d67984a455/gcc%2Fc-family%2Fc-opts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-opts.c?ref=fbb2a6dcf8abbd1a605544597442e3d67984a455", "patch": "@@ -826,6 +826,12 @@ c_common_post_options (const char **pfilename)\n   else\n     flag_permitted_flt_eval_methods = PERMITTED_FLT_EVAL_METHODS_C11;\n \n+  /* C2X Annex F does not permit certain built-in functions to raise\n+     \"inexact\".  */\n+  if (flag_isoc2x\n+      && !global_options_set.x_flag_fp_int_builtin_inexact)\n+    flag_fp_int_builtin_inexact = 0;\n+\n   /* By default we use C99 inline semantics in GNU99 or C99 mode.  C99\n      inline semantics are not supported in GNU89 or C89 mode.  */\n   if (flag_gnu89_inline == -1)"}, {"sha": "20e10c018048c8404a96dd01fc6bf6aafa755725", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbb2a6dcf8abbd1a605544597442e3d67984a455/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbb2a6dcf8abbd1a605544597442e3d67984a455/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=fbb2a6dcf8abbd1a605544597442e3d67984a455", "patch": "@@ -10809,12 +10809,12 @@ Do not allow the built-in functions @code{ceil}, @code{floor},\n double} variants, to generate code that raises the ``inexact''\n floating-point exception for noninteger arguments.  ISO C99 and C11\n allow these functions to raise the ``inexact'' exception, but ISO/IEC\n-TS 18661-1:2014, the C bindings to IEEE 754-2008, does not allow these\n-functions to do so.\n+TS 18661-1:2014, the C bindings to IEEE 754-2008, as integrated into\n+ISO C2X, does not allow these functions to do so.\n \n The default is @option{-ffp-int-builtin-inexact}, allowing the\n-exception to be raised.  This option does nothing unless\n-@option{-ftrapping-math} is in effect.\n+exception to be raised, unless C2X or a later C standard is selected.\n+This option does nothing unless @option{-ftrapping-math} is in effect.\n \n Even if @option{-fno-fp-int-builtin-inexact} is used, if the functions\n generate a call to a library function then the ``inexact'' exception"}, {"sha": "4555fc87f9f0677564fb72f8c17fe4245efbb792", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbb2a6dcf8abbd1a605544597442e3d67984a455/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbb2a6dcf8abbd1a605544597442e3d67984a455/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=fbb2a6dcf8abbd1a605544597442e3d67984a455", "patch": "@@ -1,3 +1,7 @@\n+2019-10-08  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* gcc.dg/torture/builtin-fp-int-inexact-c2x.c: New test.\n+\n 2019-10-07  Jozef Lawrynowicz  <jozef.l@mittosystems.com>\n \n \t* gcc.target/msp430/430x-insns.c: New test."}, {"sha": "039cb5392fe7816d93a87efe6f3f88fd15237c96", "filename": "gcc/testsuite/gcc.dg/torture/builtin-fp-int-inexact-c2x.c", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbb2a6dcf8abbd1a605544597442e3d67984a455/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fbuiltin-fp-int-inexact-c2x.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbb2a6dcf8abbd1a605544597442e3d67984a455/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fbuiltin-fp-int-inexact-c2x.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fbuiltin-fp-int-inexact-c2x.c?ref=fbb2a6dcf8abbd1a605544597442e3d67984a455", "patch": "@@ -0,0 +1,7 @@\n+/* Test C2X enables -fno-fp-int-builtin-inexact.  */\n+/* { dg-do run } */\n+/* { dg-options \"-std=c2x\" } */\n+/* { dg-add-options c99_runtime } */\n+/* { dg-require-effective-target fenv_exceptions } */\n+\n+#include \"builtin-fp-int-inexact.c\""}]}