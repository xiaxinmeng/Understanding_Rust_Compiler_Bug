{"sha": "f4d4a40698c672a2e180ac0af4f80467338842bd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjRkNGE0MDY5OGM2NzJhMmUxODBhYzBhZjRmODA0NjczMzg4NDJiZA==", "commit": {"author": {"name": "Andrew Stubbs", "email": "ams@codesourcery.com", "date": "2020-01-24T14:31:28Z"}, "committer": {"name": "Andrew Stubbs", "email": "ams@codesourcery.com", "date": "2020-01-24T14:53:35Z"}, "message": "Fix ICE on unsupported FP comparison\n\n2020-01-24  Andrew Stubbs  <ams@codesourcery.com>\n\n\tgcc/\n\t* config/gcn/gcn-valu.md (vec_cmp<mode>di): Use\n\tgcn_fp_compare_operator.\n\t(vec_cmpu<mode>di): Use gcn_compare_operator.\n\t(vec_cmp<u>v64qidi): Use gcn_compare_operator.\n\t(vec_cmp<mode>di_exec): Use gcn_fp_compare_operator.\n\t(vec_cmpu<mode>di_exec): Use gcn_compare_operator.\n\t(vec_cmp<u>v64qidi_exec): Use gcn_compare_operator.\n\t(vec_cmp<mode>di_dup): Use gcn_fp_compare_operator.\n\t(vec_cmp<mode>di_dup_exec): Use gcn_fp_compare_operator.\n\t(vcond<VEC_ALLREG_MODE:mode><VEC_ALLREG_ALT:mode>): Use\n\tgcn_fp_compare_operator.\n\t(vcond<VEC_ALLREG_MODE:mode><VEC_ALLREG_ALT:mode>_exec): Use\n\tgcn_fp_compare_operator.\n\t(vcondu<VEC_ALLREG_MODE:mode><VEC_ALLREG_INT_MODE:mode>): Use\n\tgcn_fp_compare_operator.\n\t(vcondu<VEC_ALLREG_MODE:mode><VEC_ALLREG_INT_MODE:mode>_exec): Use\n\tgcn_fp_compare_operator.", "tree": {"sha": "fe93752731f6059fce3ff85793beb1a786d8d902", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fe93752731f6059fce3ff85793beb1a786d8d902"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f4d4a40698c672a2e180ac0af4f80467338842bd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4d4a40698c672a2e180ac0af4f80467338842bd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f4d4a40698c672a2e180ac0af4f80467338842bd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4d4a40698c672a2e180ac0af4f80467338842bd/comments", "author": {"login": "ams-cs", "id": 2235130, "node_id": "MDQ6VXNlcjIyMzUxMzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2235130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ams-cs", "html_url": "https://github.com/ams-cs", "followers_url": "https://api.github.com/users/ams-cs/followers", "following_url": "https://api.github.com/users/ams-cs/following{/other_user}", "gists_url": "https://api.github.com/users/ams-cs/gists{/gist_id}", "starred_url": "https://api.github.com/users/ams-cs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ams-cs/subscriptions", "organizations_url": "https://api.github.com/users/ams-cs/orgs", "repos_url": "https://api.github.com/users/ams-cs/repos", "events_url": "https://api.github.com/users/ams-cs/events{/privacy}", "received_events_url": "https://api.github.com/users/ams-cs/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ams-cs", "id": 2235130, "node_id": "MDQ6VXNlcjIyMzUxMzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2235130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ams-cs", "html_url": "https://github.com/ams-cs", "followers_url": "https://api.github.com/users/ams-cs/followers", "following_url": "https://api.github.com/users/ams-cs/following{/other_user}", "gists_url": "https://api.github.com/users/ams-cs/gists{/gist_id}", "starred_url": "https://api.github.com/users/ams-cs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ams-cs/subscriptions", "organizations_url": "https://api.github.com/users/ams-cs/orgs", "repos_url": "https://api.github.com/users/ams-cs/repos", "events_url": "https://api.github.com/users/ams-cs/events{/privacy}", "received_events_url": "https://api.github.com/users/ams-cs/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "612137e17109d890948fe30cb997b590b5944df4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/612137e17109d890948fe30cb997b590b5944df4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/612137e17109d890948fe30cb997b590b5944df4"}], "stats": {"total": 44, "additions": 32, "deletions": 12}, "files": [{"sha": "9a13fca5abcb550a86560e56963abd3c90c28f6f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4d4a40698c672a2e180ac0af4f80467338842bd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4d4a40698c672a2e180ac0af4f80467338842bd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f4d4a40698c672a2e180ac0af4f80467338842bd", "patch": "@@ -1,3 +1,23 @@\n+2020-01-24  Andrew Stubbs  <ams@codesourcery.com>\n+\n+\t* config/gcn/gcn-valu.md (vec_cmp<mode>di): Use\n+\tgcn_fp_compare_operator.\n+\t(vec_cmpu<mode>di): Use gcn_compare_operator.\n+\t(vec_cmp<u>v64qidi): Use gcn_compare_operator.\n+\t(vec_cmp<mode>di_exec): Use gcn_fp_compare_operator.\n+\t(vec_cmpu<mode>di_exec): Use gcn_compare_operator.\n+\t(vec_cmp<u>v64qidi_exec): Use gcn_compare_operator.\n+\t(vec_cmp<mode>di_dup): Use gcn_fp_compare_operator.\n+\t(vec_cmp<mode>di_dup_exec): Use gcn_fp_compare_operator.\n+\t(vcond<VEC_ALLREG_MODE:mode><VEC_ALLREG_ALT:mode>): Use\n+\tgcn_fp_compare_operator.\n+\t(vcond<VEC_ALLREG_MODE:mode><VEC_ALLREG_ALT:mode>_exec): Use\n+\tgcn_fp_compare_operator.\n+\t(vcondu<VEC_ALLREG_MODE:mode><VEC_ALLREG_INT_MODE:mode>): Use\n+\tgcn_fp_compare_operator.\n+\t(vcondu<VEC_ALLREG_MODE:mode><VEC_ALLREG_INT_MODE:mode>_exec): Use\n+\tgcn_fp_compare_operator.\n+\n 2020-01-24  Maciej W. Rozycki  <macro@wdc.com>\n \n \t* doc/install.texi (Cross-Compiler-Specific Options): Document"}, {"sha": "331c768cb882b57d82114e7818973ca387a86924", "filename": "gcc/config/gcn/gcn-valu.md", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4d4a40698c672a2e180ac0af4f80467338842bd/gcc%2Fconfig%2Fgcn%2Fgcn-valu.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4d4a40698c672a2e180ac0af4f80467338842bd/gcc%2Fconfig%2Fgcn%2Fgcn-valu.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fgcn%2Fgcn-valu.md?ref=f4d4a40698c672a2e180ac0af4f80467338842bd", "patch": "@@ -2530,7 +2530,7 @@\n \n (define_insn \"vec_cmp<mode>di\"\n   [(set (match_operand:DI 0 \"register_operand\"\t      \"=cV,cV,  e, e,Sg,Sg\")\n-\t(match_operator 1 \"comparison_operator\"\n+\t(match_operator 1 \"gcn_fp_compare_operator\"\n \t  [(match_operand:VCMP_MODE 2 \"gcn_alu_operand\"\n \t\t\t\t\t\t      \"vSv, B,vSv, B, v,vA\")\n \t   (match_operand:VCMP_MODE 3 \"gcn_vop3_operand\"\n@@ -2549,7 +2549,7 @@\n \n (define_expand \"vec_cmpu<mode>di\"\n   [(match_operand:DI 0 \"register_operand\")\n-   (match_operator 1 \"comparison_operator\"\n+   (match_operator 1 \"gcn_compare_operator\"\n      [(match_operand:VCMP_MODE_INT 2 \"gcn_alu_operand\")\n       (match_operand:VCMP_MODE_INT 3 \"gcn_vop3_operand\")])]\n   \"\"\n@@ -2565,7 +2565,7 @@\n ; There's no instruction for 8-bit vector comparison, so we need to extend.\n (define_expand \"vec_cmp<u>v64qidi\"\n   [(match_operand:DI 0 \"register_operand\")\n-   (match_operator 1 \"comparison_operator\"\n+   (match_operator 1 \"gcn_compare_operator\"\n      [(any_extend:V64SI (match_operand:V64QI 2 \"gcn_alu_operand\"))\n       (any_extend:V64SI (match_operand:V64QI 3 \"gcn_vop3_operand\"))])]\n   \"can_create_pseudo_p ()\"\n@@ -2582,7 +2582,7 @@\n (define_insn \"vec_cmp<mode>di_exec\"\n   [(set (match_operand:DI 0 \"register_operand\"\t       \"=cV,cV,  e, e,Sg,Sg\")\n \t(and:DI\n-\t  (match_operator 1 \"comparison_operator\"\n+\t  (match_operator 1 \"gcn_fp_compare_operator\"\n \t    [(match_operand:VCMP_MODE 2 \"gcn_alu_operand\"\n \t\t\t\t\t\t       \"vSv, B,vSv, B, v,vA\")\n \t     (match_operand:VCMP_MODE 3 \"gcn_vop3_operand\"\n@@ -2602,7 +2602,7 @@\n \n (define_expand \"vec_cmpu<mode>di_exec\"\n   [(match_operand:DI 0 \"register_operand\")\n-   (match_operator 1 \"comparison_operator\"\n+   (match_operator 1 \"gcn_compare_operator\"\n      [(match_operand:VCMP_MODE_INT 2 \"gcn_alu_operand\")\n       (match_operand:VCMP_MODE_INT 3 \"gcn_vop3_operand\")])\n    (match_operand:DI 4 \"gcn_exec_reg_operand\")]\n@@ -2619,7 +2619,7 @@\n \n (define_expand \"vec_cmp<u>v64qidi_exec\"\n   [(match_operand:DI 0 \"register_operand\")\n-   (match_operator 1 \"comparison_operator\"\n+   (match_operator 1 \"gcn_compare_operator\"\n      [(any_extend:V64SI (match_operand:V64QI 2 \"gcn_alu_operand\"))\n       (any_extend:V64SI (match_operand:V64QI 3 \"gcn_vop3_operand\"))])\n    (match_operand:DI 4 \"gcn_exec_reg_operand\")]\n@@ -2639,7 +2639,7 @@\n \n (define_insn \"vec_cmp<mode>di_dup\"\n   [(set (match_operand:DI 0 \"register_operand\"\t\t   \"=cV,cV, e,e,Sg\")\n-\t(match_operator 1 \"comparison_operator\"\n+\t(match_operator 1 \"gcn_fp_compare_operator\"\n \t  [(vec_duplicate:VCMP_MODE\n \t     (match_operand:<SCALAR_MODE> 2 \"gcn_alu_operand\"\n \t\t\t\t\t\t\t   \" Sv, B,Sv,B, A\"))\n@@ -2658,7 +2658,7 @@\n (define_insn \"vec_cmp<mode>di_dup_exec\"\n   [(set (match_operand:DI 0 \"register_operand\"\t\t    \"=cV,cV, e,e,Sg\")\n \t(and:DI\n-\t  (match_operator 1 \"comparison_operator\"\n+\t  (match_operator 1 \"gcn_fp_compare_operator\"\n \t    [(vec_duplicate:VCMP_MODE\n \t       (match_operand:<SCALAR_MODE> 2 \"gcn_alu_operand\"\n \t\t\t\t\t\t\t    \" Sv, B,Sv,B, A\"))\n@@ -2690,7 +2690,7 @@\n   [(match_operand:VEC_ALLREG_MODE 0 \"register_operand\")\n    (match_operand:VEC_ALLREG_MODE 1 \"gcn_vop3_operand\")\n    (match_operand:VEC_ALLREG_MODE 2 \"gcn_alu_operand\")\n-   (match_operator 3 \"comparison_operator\"\n+   (match_operator 3 \"gcn_fp_compare_operator\"\n      [(match_operand:VEC_ALLREG_ALT 4 \"gcn_alu_operand\")\n       (match_operand:VEC_ALLREG_ALT 5 \"gcn_vop3_operand\")])]\n   \"\"\n@@ -2707,7 +2707,7 @@\n   [(match_operand:VEC_ALLREG_MODE 0 \"register_operand\")\n    (match_operand:VEC_ALLREG_MODE 1 \"gcn_vop3_operand\")\n    (match_operand:VEC_ALLREG_MODE 2 \"gcn_alu_operand\")\n-   (match_operator 3 \"comparison_operator\"\n+   (match_operator 3 \"gcn_fp_compare_operator\"\n      [(match_operand:VEC_ALLREG_ALT 4 \"gcn_alu_operand\")\n       (match_operand:VEC_ALLREG_ALT 5 \"gcn_vop3_operand\")])\n    (match_operand:DI 6 \"gcn_exec_reg_operand\" \"e\")]\n@@ -2725,7 +2725,7 @@\n   [(match_operand:VEC_ALLREG_MODE 0 \"register_operand\")\n    (match_operand:VEC_ALLREG_MODE 1 \"gcn_vop3_operand\")\n    (match_operand:VEC_ALLREG_MODE 2 \"gcn_alu_operand\")\n-   (match_operator 3 \"comparison_operator\"\n+   (match_operator 3 \"gcn_fp_compare_operator\"\n      [(match_operand:VEC_ALLREG_INT_MODE 4 \"gcn_alu_operand\")\n       (match_operand:VEC_ALLREG_INT_MODE 5 \"gcn_vop3_operand\")])]\n   \"\"\n@@ -2742,7 +2742,7 @@\n   [(match_operand:VEC_ALLREG_MODE 0 \"register_operand\")\n    (match_operand:VEC_ALLREG_MODE 1 \"gcn_vop3_operand\")\n    (match_operand:VEC_ALLREG_MODE 2 \"gcn_alu_operand\")\n-   (match_operator 3 \"comparison_operator\"\n+   (match_operator 3 \"gcn_fp_compare_operator\"\n      [(match_operand:VEC_ALLREG_INT_MODE 4 \"gcn_alu_operand\")\n       (match_operand:VEC_ALLREG_INT_MODE 5 \"gcn_vop3_operand\")])\n    (match_operand:DI 6 \"gcn_exec_reg_operand\" \"e\")]"}]}