{"sha": "1c681c7bf7e28ceeeb50e90444b89f833f7bcc23", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWM2ODFjN2JmN2UyOGNlZWViNTBlOTA0NDRiODlmODMzZjdiY2MyMw==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2016-09-22T18:11:19Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2016-09-22T18:11:19Z"}, "message": "ifcvt-1.c: Compile also for 64-bit i?86-*-* target.\n\n\t* gcc.dg/ifcvt-1.c: Compile also for 64-bit i?86-*-* target.\n\t* gcc.dg/ifcvt-2.c: Ditto.\n\t* gcc.dg/zero_bits_compound-1.c: Ditto.\n\t* gcc.dg/zero_bits_compound-1.c: Ditto.\n\t* gcc.dg/pr40550.c: Simplify target selectors.\n\tUse dg-additional-options.\n\t* gcc.dg/pr47893.c: Ditto.\n\t* gcc.dg/pr68435.c: Compile also for i?86-*-* target.  Add -march=i686\n\tadditional options for 32-bit x86 targets.\n\t* gcc.dg/pr70955.c: Move to ...\n\t* gcc.target/i386/pr70955.c: ... here.  Simplify target selector.\n\nFrom-SVN: r240381", "tree": {"sha": "9d0dbc33baca40a098c325a88b92b4e6b968e70e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9d0dbc33baca40a098c325a88b92b4e6b968e70e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1c681c7bf7e28ceeeb50e90444b89f833f7bcc23", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c681c7bf7e28ceeeb50e90444b89f833f7bcc23", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1c681c7bf7e28ceeeb50e90444b89f833f7bcc23", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c681c7bf7e28ceeeb50e90444b89f833f7bcc23/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "67cf0a5391dbd2ef1906899c702a19e8f1b50c3a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67cf0a5391dbd2ef1906899c702a19e8f1b50c3a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/67cf0a5391dbd2ef1906899c702a19e8f1b50c3a"}], "stats": {"total": 37, "additions": 26, "deletions": 11}, "files": [{"sha": "fff439af964d1f3c11c33e17a41efc6f4b0da138", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c681c7bf7e28ceeeb50e90444b89f833f7bcc23/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c681c7bf7e28ceeeb50e90444b89f833f7bcc23/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1c681c7bf7e28ceeeb50e90444b89f833f7bcc23", "patch": "@@ -1,3 +1,17 @@\n+2016-09-22  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* gcc.dg/ifcvt-1.c: Compile also for 64-bit i?86-*-* target.\n+\t* gcc.dg/ifcvt-2.c: Ditto.\n+\t* gcc.dg/zero_bits_compound-1.c: Ditto.\n+\t* gcc.dg/zero_bits_compound-1.c: Ditto.\n+\t* gcc.dg/pr40550.c: Simplify target selectors.\n+\tUse dg-additional-options.\n+\t* gcc.dg/pr47893.c: Ditto.\n+\t* gcc.dg/pr68435.c: Compile also for i?86-*-* target.  Add -march=i686\n+\tadditional options for 32-bit x86 targets.\n+\t* gcc.dg/pr70955.c: Move to ...\n+\t* gcc.target/i386/pr70955.c: ... here.  Simplify target selector.\n+\n 2016-09-22  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/61019"}, {"sha": "02bd628d7396d3a6783687b9109811c06d3fc5de", "filename": "gcc/testsuite/gcc.dg/ifcvt-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c681c7bf7e28ceeeb50e90444b89f833f7bcc23/gcc%2Ftestsuite%2Fgcc.dg%2Fifcvt-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c681c7bf7e28ceeeb50e90444b89f833f7bcc23/gcc%2Ftestsuite%2Fgcc.dg%2Fifcvt-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fifcvt-1.c?ref=1c681c7bf7e28ceeeb50e90444b89f833f7bcc23", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do compile { target aarch64*-*-* x86_64-*-* } } */\n+/* { dg-do compile { target { { { i?86-*-* x86_64-*-* } && { ! ia32 } } || aarch64*-*-* } } } */\n /* { dg-options \"-fdump-rtl-ce1 -O2\" } */\n \n int"}, {"sha": "cdd525e9ae69f55192d24d53805e715a4462cb71", "filename": "gcc/testsuite/gcc.dg/ifcvt-2.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c681c7bf7e28ceeeb50e90444b89f833f7bcc23/gcc%2Ftestsuite%2Fgcc.dg%2Fifcvt-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c681c7bf7e28ceeeb50e90444b89f833f7bcc23/gcc%2Ftestsuite%2Fgcc.dg%2Fifcvt-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fifcvt-2.c?ref=1c681c7bf7e28ceeeb50e90444b89f833f7bcc23", "patch": "@@ -1,7 +1,6 @@\n-/* { dg-do compile { target aarch64*-*-* x86_64-*-* } } */\n+/* { dg-do compile { target { { { i?86-*-* x86_64-*-* } && { ! ia32 } } || aarch64*-*-* } } } */\n /* { dg-options \"-fdump-rtl-ce1 -O2 --param max-rtl-if-conversion-unpredictable-cost=100\" } */\n \n-\n typedef unsigned char uint8_t;\n typedef unsigned int uint16_t;\n "}, {"sha": "0de5554b1433a09484e393b0fb41e920a3530bea", "filename": "gcc/testsuite/gcc.dg/pr40550.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c681c7bf7e28ceeeb50e90444b89f833f7bcc23/gcc%2Ftestsuite%2Fgcc.dg%2Fpr40550.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c681c7bf7e28ceeeb50e90444b89f833f7bcc23/gcc%2Ftestsuite%2Fgcc.dg%2Fpr40550.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr40550.c?ref=1c681c7bf7e28ceeeb50e90444b89f833f7bcc23", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do run } */\n-/* { dg-options \"-msse\" { target { { i?86-*-* x86_64-*-* } && ilp32 } } } */\n-/* { dg-require-effective-target sse_runtime { target { { i?86-*-* x86_64-*-* } && ilp32 } } } */\n+/* { dg-options \"\" } */\n+/* { dg-additional-options \"-msse\" { target i?86-*-* x86_64-*-* } } */\n+/* { dg-require-effective-target sse_runtime { target { i?86-*-* x86_64-*-* } } } */\n \n typedef float v2sf __attribute__ ((vector_size (2 * sizeof(float))));\n "}, {"sha": "868ae3e334b4e8c885d7ab635f0d25556e83a540", "filename": "gcc/testsuite/gcc.dg/pr47893.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c681c7bf7e28ceeeb50e90444b89f833f7bcc23/gcc%2Ftestsuite%2Fgcc.dg%2Fpr47893.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c681c7bf7e28ceeeb50e90444b89f833f7bcc23/gcc%2Ftestsuite%2Fgcc.dg%2Fpr47893.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr47893.c?ref=1c681c7bf7e28ceeeb50e90444b89f833f7bcc23", "patch": "@@ -1,7 +1,7 @@\n /* PR middle-end/47893 */\n /* { dg-do run } */\n /* { dg-options \"-O2\" } */\n-/* { dg-options \"-O2 -mtune=atom -fno-omit-frame-pointer -fno-strict-aliasing\" { target { { i?86-*-* x86_64-*-* } && ilp32 } } } */\n+/* { dg-additional-options \"-mtune=atom -fno-omit-frame-pointer -fno-strict-aliasing\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } */\n /* { dg-skip-if \"Too much RAM needed\" { \"avr-*-*\" } { \"*\" } { \"\" } } */\n \n extern void abort (void);"}, {"sha": "2c7c8b8dc35f62d4a0d6808e4ddf58833673a779", "filename": "gcc/testsuite/gcc.dg/pr68435.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c681c7bf7e28ceeeb50e90444b89f833f7bcc23/gcc%2Ftestsuite%2Fgcc.dg%2Fpr68435.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c681c7bf7e28ceeeb50e90444b89f833f7bcc23/gcc%2Ftestsuite%2Fgcc.dg%2Fpr68435.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr68435.c?ref=1c681c7bf7e28ceeeb50e90444b89f833f7bcc23", "patch": "@@ -1,5 +1,6 @@\n-/* { dg-do compile { target aarch64*-*-* x86_64-*-* } } */\n+/* { dg-do compile { target aarch64*-*-* i?86-*-* x86_64-*-* } } */\n /* { dg-options \"-fdump-rtl-ce1 -O2 -w --param max-rtl-if-conversion-unpredictable-cost=100\" } */\n+/* { dg-additional-options \"-march=i686\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } */\n \n typedef struct cpp_reader cpp_reader;\n enum cpp_ttype"}, {"sha": "63b8ac128f3cf2780ebb359584c396df9cee3611", "filename": "gcc/testsuite/gcc.dg/zero_bits_compound-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c681c7bf7e28ceeeb50e90444b89f833f7bcc23/gcc%2Ftestsuite%2Fgcc.dg%2Fzero_bits_compound-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c681c7bf7e28ceeeb50e90444b89f833f7bcc23/gcc%2Ftestsuite%2Fgcc.dg%2Fzero_bits_compound-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fzero_bits_compound-1.c?ref=1c681c7bf7e28ceeeb50e90444b89f833f7bcc23", "patch": "@@ -4,7 +4,7 @@\n /* Note: This test requires that char, int and long have different sizes and the\n    target has a way to do 32 -> 64 bit zero extension other than AND.  */\n \n-/* { dg-do compile { target x86_64-*-* s390*-*-* aarch64*-*-* } } */\n+/* { dg-do compile { target i?86-*-* x86_64-*-* s390*-*-* aarch64*-*-* } } */\n /* { dg-require-effective-target lp64 } */\n /* { dg-options \"-O3 -dP\" } */\n "}, {"sha": "f6c390a3941574b9d36fffb90f8ec531645293d6", "filename": "gcc/testsuite/gcc.dg/zero_bits_compound-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c681c7bf7e28ceeeb50e90444b89f833f7bcc23/gcc%2Ftestsuite%2Fgcc.dg%2Fzero_bits_compound-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c681c7bf7e28ceeeb50e90444b89f833f7bcc23/gcc%2Ftestsuite%2Fgcc.dg%2Fzero_bits_compound-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fzero_bits_compound-2.c?ref=1c681c7bf7e28ceeeb50e90444b89f833f7bcc23", "patch": "@@ -1,7 +1,7 @@\n /* Test whether an AND mask or'ed with the know zero bits that equals a mode\n    mask is a candidate for zero extendion.  */\n \n-/* { dg-do compile { target x86_64-*-* s390*-*-* aarch64*-*-* } } */\n+/* { dg-do compile { target i?86-*-* x86_64-*-* s390*-*-* aarch64*-*-* } } */\n /* { dg-require-effective-target lp64 } */\n /* { dg-options \"-O3 -dP\" } */\n "}, {"sha": "fb5c3c3f22c70014b1b5162a525861ceae3d100f", "filename": "gcc/testsuite/gcc.target/i386/pr70955.c", "status": "renamed", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c681c7bf7e28ceeeb50e90444b89f833f7bcc23/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr70955.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c681c7bf7e28ceeeb50e90444b89f833f7bcc23/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr70955.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr70955.c?ref=1c681c7bf7e28ceeeb50e90444b89f833f7bcc23", "patch": "@@ -1,5 +1,5 @@\n-/* __builtin_ms_va_list is only supported for x86_64 -m64.  */\n-/* { dg-do run { target { x86_64-*-* && { ! ilp32 } } } } */\n+/* __builtin_ms_va_list is only supported for -m64.  */\n+/* { dg-do run { target lp64 } } */\n /* { dg-require-effective-target lto } */\n /* { dg-options \"-flto\" } */\n ", "previous_filename": "gcc/testsuite/gcc.dg/pr70955.c"}]}