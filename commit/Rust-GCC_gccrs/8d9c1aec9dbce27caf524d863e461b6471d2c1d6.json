{"sha": "8d9c1aec9dbce27caf524d863e461b6471d2c1d6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGQ5YzFhZWM5ZGJjZTI3Y2FmNTI0ZDg2M2U0NjFiNjQ3MWQyYzFkNg==", "commit": {"author": {"name": "Diego Novillo", "email": "dnovillo@redhat.com", "date": "2006-01-30T03:11:29Z"}, "committer": {"name": "Diego Novillo", "email": "dnovillo@gcc.gnu.org", "date": "2006-01-30T03:11:29Z"}, "message": "re PR c++/25874 ([gomp]  ICE in calc_dfs_tree())\n\n\n\tPR 25874\n\t* omp-low.c (execute_expand_omp): Move CFG cleanup code ...\n\t(expand_omp): ... here.\n\t(expand_omp_parallel): Only remove barriers for combined\n\tparallel+workshare constructs.\n\n\n\t* gcc.dg/gomp/pr25874.c: New test.\n\nFrom-SVN: r110393", "tree": {"sha": "1d6083952e6c0e9f6ab31bad3dd88aa642cbc735", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1d6083952e6c0e9f6ab31bad3dd88aa642cbc735"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8d9c1aec9dbce27caf524d863e461b6471d2c1d6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d9c1aec9dbce27caf524d863e461b6471d2c1d6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8d9c1aec9dbce27caf524d863e461b6471d2c1d6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d9c1aec9dbce27caf524d863e461b6471d2c1d6/comments", "author": null, "committer": null, "parents": [{"sha": "47b5a0ec7316e1c0683d5a9592d2c405c48eb338", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47b5a0ec7316e1c0683d5a9592d2c405c48eb338", "html_url": "https://github.com/Rust-GCC/gccrs/commit/47b5a0ec7316e1c0683d5a9592d2c405c48eb338"}], "stats": {"total": 54, "additions": 43, "deletions": 11}, "files": [{"sha": "42fe910837ad202f861ced9b058a591acb2f5835", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d9c1aec9dbce27caf524d863e461b6471d2c1d6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d9c1aec9dbce27caf524d863e461b6471d2c1d6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8d9c1aec9dbce27caf524d863e461b6471d2c1d6", "patch": "@@ -1,3 +1,11 @@\n+2006-01-29  Diego Novillo  <dnovillo@redhat.com>\n+\n+\tPR 25874\n+\t* omp-low.c (execute_expand_omp): Move CFG cleanup code ...\n+\t(expand_omp): ... here.\n+\t(expand_omp_parallel): Only remove barriers for combined\n+\tparallel+workshare constructs.\n+\n 2006-01-29  Eric Botcazou  <ebotcazou@adacore.com>\n \n \tRevert"}, {"sha": "38d4224f4bf58607fc4f3f22b145f8d3f2b7cded", "filename": "gcc/omp-low.c", "status": "modified", "additions": 16, "deletions": 11, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d9c1aec9dbce27caf524d863e461b6471d2c1d6/gcc%2Fomp-low.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d9c1aec9dbce27caf524d863e461b6471d2c1d6/gcc%2Fomp-low.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fomp-low.c?ref=8d9c1aec9dbce27caf524d863e461b6471d2c1d6", "patch": "@@ -2279,13 +2279,16 @@ expand_omp_parallel (struct omp_region *region)\n   entry_bb = bb_for_stmt (region->entry);\n   exit_bb = bb_for_stmt (region->exit);\n \n-  /* Barriers at the end of the function are not necessary and can be\n-     removed.  Since the caller will have a barrier of its own, this\n-     one is superfluous.  */\n-  remove_exit_barrier (region);\n-\n   if (is_combined_parallel (region))\n-    ws_args = region->ws_args;\n+    {\n+      ws_args = region->ws_args;\n+\n+      /* For combined parallel+workshare calls, barriers at the end of\n+\t the function are not necessary and can be removed.  Since the\n+\t caller will have a barrier of its own, the workshare barrier is\n+\t superfluous.  */\n+      remove_exit_barrier (region);\n+    }\n   else\n     ws_args = NULL_TREE;\n \n@@ -3244,6 +3247,13 @@ expand_omp (struct omp_region *region)\n \t    gcc_unreachable ();\n \t}\n \n+      /* Expansion adds and removes basic block, edges, creates\n+\t and exposes unreachable regions that need to be cleaned up\n+\t before proceeding.  */\n+      free_dominance_info (CDI_DOMINATORS);\n+      free_dominance_info (CDI_POST_DOMINATORS);\n+      cleanup_tree_cfg ();\n+\n       region = region->next;\n     }\n }\n@@ -3339,12 +3349,7 @@ execute_expand_omp (void)\n       splay_tree_delete (omp_regions);\n       root_omp_region = NULL;\n       omp_regions = NULL;\n-      free_dominance_info (CDI_DOMINATORS);\n-      free_dominance_info (CDI_POST_DOMINATORS);\n     }\n-\n-  /* Expansion adds basic blocks that may be merged.  */\n-  cleanup_tree_cfg ();\n }\n \n static bool"}, {"sha": "5d9b87bbc28328c7f962c73abb79a0cee93fd6b2", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d9c1aec9dbce27caf524d863e461b6471d2c1d6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d9c1aec9dbce27caf524d863e461b6471d2c1d6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8d9c1aec9dbce27caf524d863e461b6471d2c1d6", "patch": "@@ -1,3 +1,7 @@\n+2006-01-29  Diego Novillo  <dnovillo@redhat.com>\n+\n+\t* gcc.dg/gomp/pr25874.c: New test.\n+\n 2006-01-29  Dorit Nuzman  <dorit@il.ibm.com>\n \n \tPR tree-opt/25911"}, {"sha": "568e1f04f884debedc96d8fb40c004e880db3964", "filename": "gcc/testsuite/gcc.dg/gomp/pr25874.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d9c1aec9dbce27caf524d863e461b6471d2c1d6/gcc%2Ftestsuite%2Fgcc.dg%2Fgomp%2Fpr25874.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d9c1aec9dbce27caf524d863e461b6471d2c1d6/gcc%2Ftestsuite%2Fgcc.dg%2Fgomp%2Fpr25874.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgomp%2Fpr25874.c?ref=8d9c1aec9dbce27caf524d863e461b6471d2c1d6", "patch": "@@ -0,0 +1,15 @@\n+void foo();\n+\n+inline void bar()\n+{\n+  int i;\n+  for ( i=0; i<1; ++i )\n+#pragma omp parallel\n+    foo();\n+}\n+\n+void baz()\n+{\n+#pragma omp parallel\n+  bar();\n+}"}]}