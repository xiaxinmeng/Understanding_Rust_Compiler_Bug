{"sha": "c1c5187c9ee27bbf60a5c237ecbd3667b35bf544", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzFjNTE4N2M5ZWUyN2JiZjYwYTVjMjM3ZWNiZDM2NjdiMzViZjU0NA==", "commit": {"author": {"name": "Ziemowit Laski", "email": "zlaski@apple.com", "date": "2002-07-02T21:59:34Z"}, "committer": {"name": "Stan Shebs", "email": "shebs@gcc.gnu.org", "date": "2002-07-02T21:59:34Z"}, "message": "c-parse.in (designator): Enable designated initializers if ObjC.\n\n2002-07-02  Ziemowit Laski  <zlaski@apple.com>\n\n\t* c-parse.in (designator): Enable designated initializers if ObjC.\n\t(objcmessageexpr): Remove references to objc_receiver_context.\n\t* objc/objc-act.h (objc_receiver_context): Remove decl.\n\t* objc/objc-act.c (objc_receiver_context): Remove.\n\t(lookup_objc_ivar): Test objc_method_context instead of\n\tobjc_receiver_context.\n\n2002-07-02  Ziemowit Laski  <zlaski@apple.com>\n\n\t* objc.dg/desig-init-1.m: New test.\n\nFrom-SVN: r55192", "tree": {"sha": "4490d49b0ca7ef976a719a92a9be675a3a160306", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4490d49b0ca7ef976a719a92a9be675a3a160306"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c1c5187c9ee27bbf60a5c237ecbd3667b35bf544", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1c5187c9ee27bbf60a5c237ecbd3667b35bf544", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c1c5187c9ee27bbf60a5c237ecbd3667b35bf544", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1c5187c9ee27bbf60a5c237ecbd3667b35bf544/comments", "author": null, "committer": null, "parents": [{"sha": "aa5661e6b41e781f2e7b6b3e3fc163174f0687a8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa5661e6b41e781f2e7b6b3e3fc163174f0687a8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aa5661e6b41e781f2e7b6b3e3fc163174f0687a8"}], "stats": {"total": 78, "additions": 58, "deletions": 20}, "files": [{"sha": "18bbcdbfd0755a5a5fe9a1aa13a27e13380f7d4c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1c5187c9ee27bbf60a5c237ecbd3667b35bf544/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1c5187c9ee27bbf60a5c237ecbd3667b35bf544/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c1c5187c9ee27bbf60a5c237ecbd3667b35bf544", "patch": "@@ -1,3 +1,12 @@\n+2002-07-02  Ziemowit Laski  <zlaski@apple.com>\n+\n+\t* c-parse.in (designator): Enable designated initializers if ObjC.\n+\t(objcmessageexpr): Remove references to objc_receiver_context.\n+\t* objc/objc-act.h (objc_receiver_context): Remove decl.\n+\t* objc/objc-act.c (objc_receiver_context): Remove.\n+\t(lookup_objc_ivar): Test objc_method_context instead of\n+\tobjc_receiver_context.\n+\n Tue Jul  2 18:45:45 2002  J\"orn Rennecke <joern.rennecke@superh.com>\n \n \t* sh.c (print_operand, case 'N'): Allow zero vector."}, {"sha": "6ce9a2e9516b93fb58373a4f9b594b2c1abb4495", "filename": "gcc/c-parse.in", "status": "modified", "additions": 3, "deletions": 14, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1c5187c9ee27bbf60a5c237ecbd3667b35bf544/gcc%2Fc-parse.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1c5187c9ee27bbf60a5c237ecbd3667b35bf544/gcc%2Fc-parse.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-parse.in?ref=c1c5187c9ee27bbf60a5c237ecbd3667b35bf544", "patch": "@@ -29,7 +29,7 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n    written by AT&T, but I have never seen it.  */\n \n ifobjc\n-%expect 31 /* shift/reduce conflicts, and 1 reduce/reduce conflict.  */\n+%expect 32 /* shift/reduce conflicts, and 1 reduce/reduce conflict.  */\n end ifobjc\n ifc\n %expect 10 /* shift/reduce conflicts, and no reduce/reduce conflicts.  */\n@@ -1566,17 +1566,12 @@ designator_list:\n designator:\n \t  '.' identifier\n \t\t{ set_init_label ($2); }\n-\t/* These are for labeled elements.  The syntax for an array element\n-\t   initializer conflicts with the syntax for an Objective-C message,\n-\t   so don't include these productions in the Objective-C grammar.  */\n-ifc\n \t| '[' expr_no_commas ELLIPSIS expr_no_commas ']'\n \t\t{ set_init_index ($2, $4);\n \t\t  if (pedantic)\n \t\t    pedwarn (\"ISO C forbids specifying range of elements to initialize\"); }\n \t| '[' expr_no_commas ']'\n \t\t{ set_init_index ($2, NULL_TREE); }\n-end ifc\n \t;\n \f\n nested_function:\n@@ -3223,14 +3218,8 @@ receiver:\n \t;\n \n objcmessageexpr:\n-\t  '['\n-\t\t{ objc_receiver_context = 1; }\n-\t  receiver\n-\t\t{ objc_receiver_context = 0; }\n-\t  messageargs ']'\n-\t\t{\n-\t\t  $$ = build_tree_list ($3, $5);\n-\t\t}\n+\t  '[' receiver messageargs ']'\n+\t\t{ $$ = build_tree_list ($2, $3); }\n \t;\n \n selectorarg:"}, {"sha": "c0db5993d5641d55076bcb1f4b8d2dfee0ebbf21", "filename": "gcc/objc/objc-act.c", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1c5187c9ee27bbf60a5c237ecbd3667b35bf544/gcc%2Fobjc%2Fobjc-act.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1c5187c9ee27bbf60a5c237ecbd3667b35bf544/gcc%2Fobjc%2Fobjc-act.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-act.c?ref=c1c5187c9ee27bbf60a5c237ecbd3667b35bf544", "patch": "@@ -341,8 +341,6 @@ static const char *default_constant_string_class_name;\n /* The OCTI_... enumeration itself is in objc/objc-act.h.  */\n tree objc_global_trees[OCTI_MAX];\n \n-int objc_receiver_context;\n-\n static void handle_impent\t\t\tPARAMS ((struct imp_entry *));\n \n struct imp_entry *imp_list = 0;\n@@ -8311,8 +8309,8 @@ lookup_objc_ivar (id)\n {\n   tree decl;\n \n-  if (objc_receiver_context && !strcmp (IDENTIFIER_POINTER (id), \"super\"))\n-    /* we have a message to super */\n+  if (objc_method_context && !strcmp (IDENTIFIER_POINTER (id), \"super\"))\n+    /* We have a message to super.  */\n     return get_super_receiver ();\n   else if (objc_method_context && (decl = is_ivar (objc_ivar_chain, id)))\n     {"}, {"sha": "13b3e63de1f6f1391a37c1be6655b4d7e04e3b8b", "filename": "gcc/objc/objc-act.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1c5187c9ee27bbf60a5c237ecbd3667b35bf544/gcc%2Fobjc%2Fobjc-act.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1c5187c9ee27bbf60a5c237ecbd3667b35bf544/gcc%2Fobjc%2Fobjc-act.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-act.h?ref=c1c5187c9ee27bbf60a5c237ecbd3667b35bf544", "patch": "@@ -64,8 +64,6 @@ void objc_declare_alias\t\t\t\tPARAMS ((tree, tree));\n void objc_declare_class\t\t\t\tPARAMS ((tree));\n void objc_declare_protocols\t\t\tPARAMS ((tree));\n \n-extern int objc_receiver_context;\n-\n /* the following routines are used to implement statically typed objects */\n \n int objc_comptypes\t\t\t\tPARAMS ((tree, tree, int));"}, {"sha": "014eacbb637171ee7e87c5426d18bdda4dd2ce71", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1c5187c9ee27bbf60a5c237ecbd3667b35bf544/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1c5187c9ee27bbf60a5c237ecbd3667b35bf544/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c1c5187c9ee27bbf60a5c237ecbd3667b35bf544", "patch": "@@ -1,3 +1,7 @@\n+2002-07-02  Ziemowit Laski  <zlaski@apple.com>\n+\n+\t* objc.dg/desig-init-1.m: New test.\n+\n 2002-07-02  Kriang Lerdsuwanakij  <lerdsuwa@users.sourceforge.net>\n \n \tPR c++/6716"}, {"sha": "72fe8330960fd32a3fc68d769282ee7cc2f1ff36", "filename": "gcc/testsuite/objc.dg/desig-init-1.m", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1c5187c9ee27bbf60a5c237ecbd3667b35bf544/gcc%2Ftestsuite%2Fobjc.dg%2Fdesig-init-1.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1c5187c9ee27bbf60a5c237ecbd3667b35bf544/gcc%2Ftestsuite%2Fobjc.dg%2Fdesig-init-1.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fdesig-init-1.m?ref=c1c5187c9ee27bbf60a5c237ecbd3667b35bf544", "patch": "@@ -0,0 +1,40 @@\n+/* Test Objective-C capability for handling GNU/C99 designated\n+   initializers, and distinguishing them from message sends.  */\n+/* Contributed by Ziemowit Laski <zlaski@apple.com>.  */\n+/* { dg-options \"-std=gnu99\" } */\n+/* { dg-do run } */\n+\n+#include <stdio.h>           \n+#include <objc/objc.h>\n+#include <objc/Object.h>\n+\n+@interface Cls : Object\n++ (int) meth1;\n++ (int) meth2;\n++ (void) doTests;\n+@end\n+\n+@implementation Cls\n++ (int) meth1 { return 45; }\n++ (int) meth2 { return 21; }\n++ (void) doTests {\n+  int arr[6] = { \n+    0, \n+    [Cls meth1], \n+    [2 + 1] = 3, \n+    [2 * 2 ... 5] = [0 meth2], /* { dg-warning \"invalid receiver type\" } */ \n+    [2] [Cls meth2]\n+  };\n+\n+  if (arr[0] != 0 || arr[1] != 45 || arr[2] != 21 || arr[3] != 3)\n+    abort (); /* { dg-warning \"implicit declaration\" } */\n+\n+  printf (\"%s\\n\", [super name]);\n+  printf (\"%d %d %d %d %d %d\\n\", arr[0], arr[1], arr[2], arr[3], arr[4], arr[5]);\n+}\n+@end\n+\n+int main(void) {\n+  [Cls doTests];\n+  return 0;\n+}"}]}