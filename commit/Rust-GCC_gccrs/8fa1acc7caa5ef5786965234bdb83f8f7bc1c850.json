{"sha": "8fa1acc7caa5ef5786965234bdb83f8f7bc1c850", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGZhMWFjYzdjYWE1ZWY1Nzg2OTY1MjM0YmRiODNmOGY3YmMxYzg1MA==", "commit": {"author": {"name": "Chenghua Xu", "email": "paul.hua.gm@gmail.com", "date": "2018-11-07T08:58:05Z"}, "committer": {"name": "Chenghua Xu", "email": "paulhua@gcc.gnu.org", "date": "2018-11-07T08:58:05Z"}, "message": "Add support for Loongson 2K1000 processor.\n\ngcc/\n\t* config/mips/gs264e.md: New.\n\t* config/mips/mips-cpus.def: Define gs264e.\n\t* config/mips/mips-tables.opt: Regenerate.\n\t* config/mips/mips.c (mips_rtx_cost_data): Add DEFAULT_COSTS for\n\tgs264e.\n\t(mips_issue_rate): Add support for gs264e.\n\t(mips_multipass_dfa_lookahead): Likewise.\n\t* config/mips/mips.h: Define TARGET_GS264E and TUNE_GS264E.\n\t(MIPS_ISA_LEVEL_SPEC): Infer mips64r2 from gs264e.\n\t(MIPS_ASE_MSA_SPEC): New.\n\t(BASE_DRIVER_SELF_SPECS): march=gs264e implies -mmsa.\n\t(ISA_HAS_FUSED_MADD4): Enable for TARGET_GS264E.\n\t(ISA_HAS_UNFUSED_MADD4): Exclude TARGET_GS264E.\n\t* config/mips/mips.md: Include gs264e.md.\n\t(processor): Add gs264e.\n\t* config/mips/mips.opt (MSA): Use Mask instead of Var.\n\t* doc/invoke.texi: Add gs264e to supported architectures.\n\nFrom-SVN: r265867", "tree": {"sha": "5e58d4a84629e4ad895d8d1da575771c52c08739", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5e58d4a84629e4ad895d8d1da575771c52c08739"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8fa1acc7caa5ef5786965234bdb83f8f7bc1c850", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8fa1acc7caa5ef5786965234bdb83f8f7bc1c850", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8fa1acc7caa5ef5786965234bdb83f8f7bc1c850", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8fa1acc7caa5ef5786965234bdb83f8f7bc1c850/comments", "author": {"login": "ChenghuaXu", "id": 87753117, "node_id": "MDQ6VXNlcjg3NzUzMTE3", "avatar_url": "https://avatars.githubusercontent.com/u/87753117?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ChenghuaXu", "html_url": "https://github.com/ChenghuaXu", "followers_url": "https://api.github.com/users/ChenghuaXu/followers", "following_url": "https://api.github.com/users/ChenghuaXu/following{/other_user}", "gists_url": "https://api.github.com/users/ChenghuaXu/gists{/gist_id}", "starred_url": "https://api.github.com/users/ChenghuaXu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ChenghuaXu/subscriptions", "organizations_url": "https://api.github.com/users/ChenghuaXu/orgs", "repos_url": "https://api.github.com/users/ChenghuaXu/repos", "events_url": "https://api.github.com/users/ChenghuaXu/events{/privacy}", "received_events_url": "https://api.github.com/users/ChenghuaXu/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "659ce7cb2924c4dc9938c3f6f0b8705a21903bd9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/659ce7cb2924c4dc9938c3f6f0b8705a21903bd9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/659ce7cb2924c4dc9938c3f6f0b8705a21903bd9"}], "stats": {"total": 208, "additions": 191, "deletions": 17}, "files": [{"sha": "379c53172dfb5b310233ae115c035bf25c5b814d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8fa1acc7caa5ef5786965234bdb83f8f7bc1c850/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8fa1acc7caa5ef5786965234bdb83f8f7bc1c850/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8fa1acc7caa5ef5786965234bdb83f8f7bc1c850", "patch": "@@ -1,3 +1,23 @@\n+2018-11-07  Chenghua Xu  <paul.hua.gm@gmail.com>\n+\n+\t* config/mips/gs264e.md: New.\n+\t* config/mips/mips-cpus.def: Define gs264e.\n+\t* config/mips/mips-tables.opt: Regenerate.\n+\t* config/mips/mips.c (mips_rtx_cost_data): Add DEFAULT_COSTS for\n+\tgs264e.\n+\t(mips_issue_rate): Add support for gs264e.\n+\t(mips_multipass_dfa_lookahead): Likewise.\n+\t* config/mips/mips.h: Define TARGET_GS264E and TUNE_GS264E.\n+\t(MIPS_ISA_LEVEL_SPEC): Infer mips64r2 from gs264e.\n+\t(MIPS_ASE_MSA_SPEC): New.\n+\t(BASE_DRIVER_SELF_SPECS): march=gs264e implies -mmsa.\n+\t(ISA_HAS_FUSED_MADD4): Enable for TARGET_GS264E.\n+\t(ISA_HAS_UNFUSED_MADD4): Exclude TARGET_GS264E.\n+\t* config/mips/mips.md: Include gs264e.md.\n+\t(processor): Add gs264e.\n+\t* config/mips/mips.opt (MSA): Use Mask instead of Var.\n+\t* doc/invoke.texi: Add gs264e to supported architectures.\n+\n 2018-11-07  Chenghua Xu  <paul.hua.gm@gmail.com>\n \n \t* config/mips/gs464e.md: New."}, {"sha": "8f1f9e17e08ffdf7a3cd00b1f7926097ca92f6c9", "filename": "gcc/config/mips/gs264e.md", "status": "added", "additions": 133, "deletions": 0, "changes": 133, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8fa1acc7caa5ef5786965234bdb83f8f7bc1c850/gcc%2Fconfig%2Fmips%2Fgs264e.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8fa1acc7caa5ef5786965234bdb83f8f7bc1c850/gcc%2Fconfig%2Fmips%2Fgs264e.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fgs264e.md?ref=8fa1acc7caa5ef5786965234bdb83f8f7bc1c850", "patch": "@@ -0,0 +1,133 @@\n+;; Pipeline model for Loongson gs264e cores.\n+\n+;; Copyright (C) 2018 Free Software Foundation, Inc.\n+;;\n+;; This file is part of GCC.\n+;;\n+;; GCC is free software; you can redistribute it and/or modify it\n+;; under the terms of the GNU General Public License as published\n+;; by the Free Software Foundation; either version 3, or (at your\n+;; option) any later version.\n+;;\n+;; GCC is distributed in the hope that it will be useful, but WITHOUT\n+;; ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+;; or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+;; License for more details.\n+;;\n+;; You should have received a copy of the GNU General Public License\n+;; along with GCC; see the file COPYING3.  If not see\n+;; <http://www.gnu.org/licenses/>.\n+\n+;; Uncomment the following line to output automata for debugging.\n+;; (automata_option \"v\")\n+\n+;; Automaton for integer instructions.\n+(define_automaton \"gs264e_a_alu\")\n+\n+;; Automaton for floating-point instructions.\n+(define_automaton \"gs264e_a_falu\")\n+\n+;; Automaton for memory operations.\n+(define_automaton \"gs264e_a_mem\")\n+\n+;; Describe the resources.\n+\n+(define_cpu_unit \"gs264e_alu1\" \"gs264e_a_alu\")\n+(define_cpu_unit \"gs264e_mem1\" \"gs264e_a_mem\")\n+(define_cpu_unit \"gs264e_falu1\" \"gs264e_a_falu\")\n+\n+;; Describe instruction reservations.\n+\n+(define_insn_reservation \"gs264e_arith\" 1\n+  (and (eq_attr \"cpu\" \"gs264e\")\n+       (eq_attr \"type\" \"arith,clz,const,logical,\n+\t\t\tmove,nop,shift,signext,slt\"))\n+  \"gs264e_alu1\")\n+\n+(define_insn_reservation \"gs264e_branch\" 1\n+  (and (eq_attr \"cpu\" \"gs264e\")\n+       (eq_attr \"type\" \"branch,jump,call,condmove,trap\"))\n+  \"gs264e_alu1\")\n+\n+(define_insn_reservation \"gs264e_mfhilo\" 1\n+  (and (eq_attr \"cpu\" \"gs264e\")\n+       (eq_attr \"type\" \"mfhi,mflo,mthi,mtlo\"))\n+  \"gs264e_alu1\")\n+\n+;; Operation imul3nc is fully pipelined.\n+(define_insn_reservation \"gs264e_imul3nc\" 7\n+  (and (eq_attr \"cpu\" \"gs264e\")\n+       (eq_attr \"type\" \"imul3nc\"))\n+  \"gs264e_alu1\")\n+\n+(define_insn_reservation \"gs264e_imul\" 7\n+  (and (eq_attr \"cpu\" \"gs264e\")\n+       (eq_attr \"type\" \"imul,imadd\"))\n+  \"gs264e_alu1\")\n+\n+(define_insn_reservation \"gs264e_idiv_si\" 12\n+  (and (eq_attr \"cpu\" \"gs264e\")\n+       (and (eq_attr \"type\" \"idiv\")\n+\t    (eq_attr \"mode\" \"SI\")))\n+  \"gs264e_alu1\")\n+\n+(define_insn_reservation \"gs264e_idiv_di\" 25\n+  (and (eq_attr \"cpu\" \"gs264e\")\n+       (and (eq_attr \"type\" \"idiv\")\n+\t    (eq_attr \"mode\" \"DI\")))\n+  \"gs264e_alu1\")\n+\n+(define_insn_reservation \"gs264e_load\" 4\n+  (and (eq_attr \"cpu\" \"gs264e\")\n+       (eq_attr \"type\" \"load\"))\n+  \"gs264e_mem1\")\n+\n+(define_insn_reservation \"gs264e_fpload\" 4\n+  (and (eq_attr \"cpu\" \"gs264e\")\n+       (eq_attr \"type\" \"load,mfc,mtc\"))\n+  \"gs264e_mem1\")\n+\n+(define_insn_reservation \"gs264e_prefetch\" 0\n+  (and (eq_attr \"cpu\" \"gs264e\")\n+       (eq_attr \"type\" \"prefetch,prefetchx\"))\n+  \"gs264e_mem1\")\n+\n+(define_insn_reservation \"gs264e_store\" 0\n+  (and (eq_attr \"cpu\" \"gs264e\")\n+       (eq_attr \"type\" \"store,fpstore,fpidxstore\"))\n+  \"gs264e_mem1\")\n+\n+(define_insn_reservation \"gs264e_fadd\" 4\n+  (and (eq_attr \"cpu\" \"gs264e\")\n+       (eq_attr \"type\" \"fadd,fmul,fmadd\"))\n+  \"gs264e_falu1\")\n+\n+(define_insn_reservation \"gs264e_fcmp\" 2\n+  (and (eq_attr \"cpu\" \"gs264e\")\n+       (eq_attr \"type\" \"fabs,fcmp,fmove,fneg\"))\n+  \"gs264e_falu1\")\n+\n+(define_insn_reservation \"gs264e_fcvt\" 4\n+  (and (eq_attr \"cpu\" \"gs264e\")\n+       (eq_attr \"type\" \"fcvt\"))\n+  \"gs264e_falu1\")\n+\n+(define_insn_reservation \"gs264e_fdiv_sf\" 12\n+  (and (eq_attr \"cpu\" \"gs264e\")\n+       (and (eq_attr \"type\" \"fdiv,frdiv,fsqrt,frsqrt\")\n+\t    (eq_attr \"mode\" \"SF\")))\n+  \"gs264e_falu1\")\n+\n+(define_insn_reservation \"gs264e_fdiv_df\" 19\n+  (and (eq_attr \"cpu\" \"gs264e\")\n+       (and (eq_attr \"type\" \"fdiv,frdiv,fsqrt,frsqrt\")\n+\t    (eq_attr \"mode\" \"DF\")))\n+  \"gs264e_falu1\")\n+\n+;; Force single-dispatch for unknown or multi.\n+(define_insn_reservation \"gs264e_unknown\" 1\n+  (and (eq_attr \"cpu\" \"gs264e\")\n+       (eq_attr \"type\" \"unknown,multi,atomic,syncloop\"))\n+  \"gs264e_alu1 + gs264e_falu1 + gs264e_mem1\")\n+\n+;; End of DFA-based pipeline description for gs264e"}, {"sha": "747739f4b90eeff7f142f7dd0f8f0e3de4a1dc20", "filename": "gcc/config/mips/mips-cpus.def", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8fa1acc7caa5ef5786965234bdb83f8f7bc1c850/gcc%2Fconfig%2Fmips%2Fmips-cpus.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8fa1acc7caa5ef5786965234bdb83f8f7bc1c850/gcc%2Fconfig%2Fmips%2Fmips-cpus.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips-cpus.def?ref=8fa1acc7caa5ef5786965234bdb83f8f7bc1c850", "patch": "@@ -165,6 +165,7 @@ MIPS_CPU (\"xlr\", PROCESSOR_XLR, 64, PTF_AVOID_BRANCHLIKELY_SPEED)\n MIPS_CPU (\"loongson3a\", PROCESSOR_GS464, 65, PTF_AVOID_BRANCHLIKELY_SPEED)\n MIPS_CPU (\"gs464\", PROCESSOR_GS464, 65, PTF_AVOID_BRANCHLIKELY_SPEED)\n MIPS_CPU (\"gs464e\", PROCESSOR_GS464E, 65, PTF_AVOID_BRANCHLIKELY_SPEED)\n+MIPS_CPU (\"gs264e\", PROCESSOR_GS264E, 65, PTF_AVOID_BRANCHLIKELY_SPEED)\n MIPS_CPU (\"octeon\", PROCESSOR_OCTEON, 65, PTF_AVOID_BRANCHLIKELY_SPEED)\n MIPS_CPU (\"octeon+\", PROCESSOR_OCTEON, 65, PTF_AVOID_BRANCHLIKELY_SPEED)\n MIPS_CPU (\"octeon2\", PROCESSOR_OCTEON2, 65, PTF_AVOID_BRANCHLIKELY_SPEED)"}, {"sha": "7ab2cf5414b09688e08fe212630afbb5d7b1361c", "filename": "gcc/config/mips/mips-tables.opt", "status": "modified", "additions": 11, "deletions": 8, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8fa1acc7caa5ef5786965234bdb83f8f7bc1c850/gcc%2Fconfig%2Fmips%2Fmips-tables.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8fa1acc7caa5ef5786965234bdb83f8f7bc1c850/gcc%2Fconfig%2Fmips%2Fmips-tables.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips-tables.opt?ref=8fa1acc7caa5ef5786965234bdb83f8f7bc1c850", "patch": "@@ -685,26 +685,29 @@ EnumValue\n Enum(mips_arch_opt_value) String(gs464e) Value(98) Canonical\n \n EnumValue\n-Enum(mips_arch_opt_value) String(octeon) Value(99) Canonical\n+Enum(mips_arch_opt_value) String(gs264e) Value(99) Canonical\n \n EnumValue\n-Enum(mips_arch_opt_value) String(octeon+) Value(100) Canonical\n+Enum(mips_arch_opt_value) String(octeon) Value(100) Canonical\n \n EnumValue\n-Enum(mips_arch_opt_value) String(octeon2) Value(101) Canonical\n+Enum(mips_arch_opt_value) String(octeon+) Value(101) Canonical\n \n EnumValue\n-Enum(mips_arch_opt_value) String(octeon3) Value(102) Canonical\n+Enum(mips_arch_opt_value) String(octeon2) Value(102) Canonical\n \n EnumValue\n-Enum(mips_arch_opt_value) String(xlp) Value(103) Canonical\n+Enum(mips_arch_opt_value) String(octeon3) Value(103) Canonical\n \n EnumValue\n-Enum(mips_arch_opt_value) String(i6400) Value(104) Canonical\n+Enum(mips_arch_opt_value) String(xlp) Value(104) Canonical\n \n EnumValue\n-Enum(mips_arch_opt_value) String(i6500) Value(105) Canonical\n+Enum(mips_arch_opt_value) String(i6400) Value(105) Canonical\n \n EnumValue\n-Enum(mips_arch_opt_value) String(p6600) Value(106) Canonical\n+Enum(mips_arch_opt_value) String(i6500) Value(106) Canonical\n+\n+EnumValue\n+Enum(mips_arch_opt_value) String(p6600) Value(107) Canonical\n "}, {"sha": "2b83e4ec679cf64dec92082c30f77a7708fa3dc8", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8fa1acc7caa5ef5786965234bdb83f8f7bc1c850/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8fa1acc7caa5ef5786965234bdb83f8f7bc1c850/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=8fa1acc7caa5ef5786965234bdb83f8f7bc1c850", "patch": "@@ -842,6 +842,9 @@ static const struct mips_rtx_cost_data\n   { /* Loongson gs464e.  */\n     DEFAULT_COSTS\n   },\n+  { /* Loongson gs264e.  */\n+    DEFAULT_COSTS\n+  },\n   { /* M4k */\n     DEFAULT_COSTS\n   },\n@@ -14605,6 +14608,7 @@ mips_issue_rate (void)\n     case PROCESSOR_OCTEON2:\n     case PROCESSOR_OCTEON3:\n     case PROCESSOR_I6400:\n+    case PROCESSOR_GS264E:\n       return 2;\n \n     case PROCESSOR_SB1:\n@@ -14753,7 +14757,7 @@ mips_multipass_dfa_lookahead (void)\n   if (TUNE_LOONGSON_2EF || TUNE_GS464 || TUNE_GS464E)\n     return 4;\n \n-  if (TUNE_OCTEON)\n+  if (TUNE_OCTEON || TUNE_GS264E)\n     return 2;\n \n   if (TUNE_P5600 || TUNE_P6600 || TUNE_I6400)"}, {"sha": "0a92cf6788af569361165c177c2522979c69f8e0", "filename": "gcc/config/mips/mips.h", "status": "modified", "additions": 17, "deletions": 6, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8fa1acc7caa5ef5786965234bdb83f8f7bc1c850/gcc%2Fconfig%2Fmips%2Fmips.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8fa1acc7caa5ef5786965234bdb83f8f7bc1c850/gcc%2Fconfig%2Fmips%2Fmips.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.h?ref=8fa1acc7caa5ef5786965234bdb83f8f7bc1c850", "patch": "@@ -268,6 +268,7 @@ struct mips_cpu_info {\n #define TARGET_LOONGSON_2EF         (TARGET_LOONGSON_2E || TARGET_LOONGSON_2F)\n #define TARGET_GS464\t\t    (mips_arch == PROCESSOR_GS464)\n #define TARGET_GS464E\t\t    (mips_arch == PROCESSOR_GS464E)\n+#define TARGET_GS264E\t\t    (mips_arch == PROCESSOR_GS264E)\n #define TARGET_MIPS3900             (mips_arch == PROCESSOR_R3900)\n #define TARGET_MIPS4000             (mips_arch == PROCESSOR_R4000)\n #define TARGET_MIPS4120             (mips_arch == PROCESSOR_R4120)\n@@ -301,6 +302,7 @@ struct mips_cpu_info {\n \t\t\t\t     || mips_tune == PROCESSOR_LOONGSON_2F)\n #define TUNE_GS464\t\t    (mips_tune == PROCESSOR_GS464)\n #define TUNE_GS464E\t\t    (mips_tune == PROCESSOR_GS464E)\n+#define TUNE_GS264E\t\t    (mips_tune == PROCESSOR_GS264E)\n #define TUNE_MIPS3000               (mips_tune == PROCESSOR_R3000)\n #define TUNE_MIPS3900               (mips_tune == PROCESSOR_R3900)\n #define TUNE_MIPS4000               (mips_tune == PROCESSOR_R4000)\n@@ -794,8 +796,8 @@ struct mips_cpu_info {\n      %{march=mips32r6: -mips32r6} \\\n      %{march=mips64|march=5k*|march=20k*|march=sb1*|march=sr71000 \\\n        |march=xlr: -mips64} \\\n-     %{march=mips64r2|march=loongson3a|march=gs464|march=gs464e|march=octeon \\\n-       |march=xlp: -mips64r2} \\\n+     %{march=mips64r2|march=loongson3a|march=gs464|march=gs464e|march=gs264e \\\n+       |march=octeon|march=xlp: -mips64r2} \\\n      %{march=mips64r3: -mips64r3} \\\n      %{march=mips64r5: -mips64r5} \\\n      %{march=mips64r6|march=i6400|march=i6500|march=p6600: -mips64r6}}\"\n@@ -898,7 +900,9 @@ struct mips_cpu_info {\n   MIPS_ISA_NAN2008_SPEC,\t\\\n   MIPS_ASE_DSP_SPEC, \t\t\\\n   MIPS_ASE_LOONGSON_MMI_SPEC,\t\\\n-  MIPS_ASE_LOONGSON_EXT_SPEC\n+  MIPS_ASE_LOONGSON_EXT_SPEC,\t\\\n+  MIPS_ASE_MSA_SPEC\n+\n \n #define MIPS_ASE_DSP_SPEC \\\n   \"%{!mno-dsp: \\\n@@ -913,7 +917,12 @@ struct mips_cpu_info {\n #define MIPS_ASE_LOONGSON_EXT_SPEC\t\t\t\t\t\t\\\n   \"%{!mno-loongson-ext:\t\t\t\t\t\t\t\t\\\n      %{march=loongson3a|march=gs464: -mloongson-ext}\t\t\t\t\\\n-     {march=gs464e: %{!mno-loongson-ext2: -mloongson-ext2 -mloongson-ext}}}\"\n+     %{march=gs464e|march=gs264e: %{!mno-loongson-ext2:\t\t\t\\\n+       -mloongson-ext2 -mloongson-ext}}}\"\n+\n+#define MIPS_ASE_MSA_SPEC\t\t\t\t\t\t\\\n+  \"%{!mno-msa:\t\t\t\t\t\t\t\t\\\n+     %{march=gs264e: -mmsa}}\"\n \n #define DRIVER_SELF_SPECS \\\n   MIPS_ISA_LEVEL_SPEC,\t  \\\n@@ -1103,15 +1112,17 @@ struct mips_cpu_info {\n #define ISA_HAS_FUSED_MADD4\t(mips_madd4\t\t\t\t\\\n \t\t\t\t && (TARGET_MIPS8000\t\t\t\\\n \t\t\t\t     || TARGET_GS464\t\t\t\\\n-\t\t\t\t     || TARGET_GS464E))\n+\t\t\t\t     || TARGET_GS464E\t\t\t\\\n+\t\t\t\t     || TARGET_GS264E))\n \n /* ISA has 4 operand unfused madd instructions of the form\n    'd = [+-] (a * b [+-] c)'.  */\n #define ISA_HAS_UNFUSED_MADD4\t(mips_madd4\t\t\t\t\\\n \t\t\t\t && ISA_HAS_FP4\t\t\t\t\\\n \t\t\t\t && !TARGET_MIPS8000\t\t\t\\\n \t\t\t\t && !TARGET_GS464\t\t\t\\\n-\t\t\t\t && !TARGET_GS464E)\n+\t\t\t\t && !TARGET_GS464E\t\t\t\\\n+\t\t\t\t && !TARGET_GS264E)\n \n /* ISA has 3 operand r6 fused madd instructions of the form\n    'c = c [+-] (a * b)'.  */"}, {"sha": "9e222dc0df0eef87c2492ce53614d17e19b69872", "filename": "gcc/config/mips/mips.md", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8fa1acc7caa5ef5786965234bdb83f8f7bc1c850/gcc%2Fconfig%2Fmips%2Fmips.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8fa1acc7caa5ef5786965234bdb83f8f7bc1c850/gcc%2Fconfig%2Fmips%2Fmips.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.md?ref=8fa1acc7caa5ef5786965234bdb83f8f7bc1c850", "patch": "@@ -39,6 +39,7 @@\n   loongson_2f\n   gs464\n   gs464e\n+  gs264e\n   m4k\n   octeon\n   octeon2\n@@ -1176,6 +1177,7 @@\n (include \"loongson2ef.md\")\n (include \"gs464.md\")\n (include \"gs464e.md\")\n+(include \"gs264e.md\")\n (include \"octeon.md\")\n (include \"sb1.md\")\n (include \"sr71k.md\")"}, {"sha": "16c33d12e2208a252bab04fe885bd4ccd229d587", "filename": "gcc/config/mips/mips.opt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8fa1acc7caa5ef5786965234bdb83f8f7bc1c850/gcc%2Fconfig%2Fmips%2Fmips.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8fa1acc7caa5ef5786965234bdb83f8f7bc1c850/gcc%2Fconfig%2Fmips%2Fmips.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.opt?ref=8fa1acc7caa5ef5786965234bdb83f8f7bc1c850", "patch": "@@ -300,7 +300,7 @@ Target Report Mask(MICROMIPS)\n Use microMIPS instructions.\n \n mmsa\n-Target Report Var(TARGET_MSA)\n+Target Report Mask(MSA)\n Use MIPS MSA Extension instructions.\n \n mmt"}, {"sha": "ae260c6ac6d72668292a61a677096dae50b6a095", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8fa1acc7caa5ef5786965234bdb83f8f7bc1c850/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8fa1acc7caa5ef5786965234bdb83f8f7bc1c850/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=8fa1acc7caa5ef5786965234bdb83f8f7bc1c850", "patch": "@@ -20799,7 +20799,7 @@ The processor names are:\n @samp{i6400}, @samp{i6500},\n @samp{interaptiv},\n @samp{loongson2e}, @samp{loongson2f}, @samp{loongson3a}, @samp{gs464},\n-@samp{gs464e},\n+@samp{gs464e}, @samp{gs264e},\n @samp{m4k},\n @samp{m14k}, @samp{m14kc}, @samp{m14ke}, @samp{m14kec},\n @samp{m5100}, @samp{m5101},"}]}