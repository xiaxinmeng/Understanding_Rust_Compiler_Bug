{"sha": "684592672f5aa8383f6985a33af99c73afc49292", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Njg0NTkyNjcyZjVhYTgzODNmNjk4NWEzM2FmOTljNzNhZmM0OTI5Mg==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2012-11-05T21:01:08Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2012-11-05T21:01:08Z"}, "message": "re PR libstdc++/55028 (_GLIBCXX_DEBUG is broken when using v7 namespace)\n\n2012-11-05  Benjamin Kosnik  <bkoz@redhat.com>\n            Oleg Smolsky  <oleg@smolsky.net>\n\n\tPR libstdc++/55028\n\t*  config/abi/pre/gnu-versioned-namespace.ver: Add symbols.\n\t* testsuite/23_containers/unordered_multimap/insert/55028-debug.cc: New.\n\nCo-Authored-By: Oleg Smolsky <oleg@smolsky.net>\n\nFrom-SVN: r193185", "tree": {"sha": "0c7a8ae45a3121b750e6f40c354c4e52701d7194", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0c7a8ae45a3121b750e6f40c354c4e52701d7194"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/684592672f5aa8383f6985a33af99c73afc49292", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/684592672f5aa8383f6985a33af99c73afc49292", "html_url": "https://github.com/Rust-GCC/gccrs/commit/684592672f5aa8383f6985a33af99c73afc49292", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/684592672f5aa8383f6985a33af99c73afc49292/comments", "author": null, "committer": null, "parents": [{"sha": "51bf1e805efe9f8012c8580121dbf68dd9e8d0dc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51bf1e805efe9f8012c8580121dbf68dd9e8d0dc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/51bf1e805efe9f8012c8580121dbf68dd9e8d0dc"}], "stats": {"total": 56, "additions": 56, "deletions": 0}, "files": [{"sha": "521671b2162c1079ab3ba47387ed15aecccc56bd", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/684592672f5aa8383f6985a33af99c73afc49292/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/684592672f5aa8383f6985a33af99c73afc49292/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=684592672f5aa8383f6985a33af99c73afc49292", "patch": "@@ -1,3 +1,10 @@\n+2012-11-05  Benjamin Kosnik  <bkoz@redhat.com>\n+            Oleg Smolsky  <oleg@smolsky.net>\n+\n+\tPR libstdc++/55028\n+\t*  config/abi/pre/gnu-versioned-namespace.ver: Add symbols.\n+\t* testsuite/23_containers/unordered_multimap/insert/55028-debug.cc: New.\n+\n 2012-10-05  Fran\u00e7ois Dumont  <fdumont@gcc.gnu.org>\n \n \t* include/ext/throw_allocator.h (__throw_value_base): Add move"}, {"sha": "d13c05926fa84cdaf5e573b0ed6500318ada26fb", "filename": "libstdc++-v3/config/abi/pre/gnu-versioned-namespace.ver", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/684592672f5aa8383f6985a33af99c73afc49292/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpre%2Fgnu-versioned-namespace.ver", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/684592672f5aa8383f6985a33af99c73afc49292/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpre%2Fgnu-versioned-namespace.ver", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpre%2Fgnu-versioned-namespace.ver?ref=684592672f5aa8383f6985a33af99c73afc49292", "patch": "@@ -64,6 +64,7 @@ GLIBCXX_7.0 {\n     # vtable\n     _ZTVSt*;\n     _ZTVNSt*;\n+    _ZTVN9__gnu_cxx3__718stdio_sync_filebufI[cw]NSt3__711char_traitsI[cw]EEEE;\n \n     # thunk\n     _ZTv0_n24_NS*;\n@@ -145,6 +146,14 @@ GLIBCXX_7.0 {\n     _ZNK11__gnu_debug16_Error_formatter8_M_error*;\n     _ZNK11__gnu_debug16_Error_formatter17_M_get_max_lengthEv;\n \n+    # __gnu_debug::_Safe_unordered_container_base\n+    # __gnu_debug::_Safe_local_iterator_base\n+    _ZN11__gnu_debug30_Safe_unordered_container_base7_M_swapERS0_;\n+    _ZN11__gnu_debug30_Safe_unordered_container_base13_M_detach_allEv;\n+    _ZN11__gnu_debug25_Safe_local_iterator_base9_M_attachEPNS_19_Safe_sequence_baseEb;\n+    _ZN11__gnu_debug25_Safe_local_iterator_base9_M_detachEv;\n+\n+\n     # parallel mode\n     _ZN14__gnu_parallel9_Settings3getEv;\n     _ZN14__gnu_parallel9_Settings3setERS0_;"}, {"sha": "fc17256f4bb745fcf3c5b2b91b0579ca345bd66c", "filename": "libstdc++-v3/testsuite/23_containers/unordered_multimap/insert/55028-debug.cc", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/684592672f5aa8383f6985a33af99c73afc49292/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multimap%2Finsert%2F55028-debug.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/684592672f5aa8383f6985a33af99c73afc49292/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multimap%2Finsert%2F55028-debug.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multimap%2Finsert%2F55028-debug.cc?ref=684592672f5aa8383f6985a33af99c73afc49292", "patch": "@@ -0,0 +1,40 @@\n+// { dg-options \"-std=gnu++0x -D_GLIBCXX_DEBUG\" }\n+//\n+// Copyright (C) 2012 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// libstdc++/55028\n+#include <string>\n+#include <unordered_map>\n+#include <testsuite_hooks.h>\n+\n+struct MyType\n+{ };\n+\n+void test()\n+{\n+  // using MyMap = std::multimap<std::string, MyType *>; // works\n+  using MyMap = std::unordered_multimap<std::string, MyType*>; // fails to link\n+  MyMap m;\n+  m.insert(std::make_pair(std::string(\"blah\"), new MyType));\n+}\n+\n+int main()\n+{\n+  test();\n+  return 0;\n+}"}]}