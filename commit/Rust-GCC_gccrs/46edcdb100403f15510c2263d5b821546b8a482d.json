{"sha": "46edcdb100403f15510c2263d5b821546b8a482d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDZlZGNkYjEwMDQwM2YxNTUxMGMyMjYzZDViODIxNTQ2YjhhNDgyZA==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2007-12-13T10:36:06Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2007-12-13T10:36:06Z"}, "message": "styleg.adb (Check_Comment): More liberal rules for comment placement\n\n2007-12-06  Robert Dewar  <dewar@adacore.com>\n\n\t* styleg.adb (Check_Comment): More liberal rules for comment placement\n\nFrom-SVN: r130866", "tree": {"sha": "16bdb5bcdc7cfdd4912a2d284a61aea55c4dddd8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/16bdb5bcdc7cfdd4912a2d284a61aea55c4dddd8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/46edcdb100403f15510c2263d5b821546b8a482d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46edcdb100403f15510c2263d5b821546b8a482d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/46edcdb100403f15510c2263d5b821546b8a482d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46edcdb100403f15510c2263d5b821546b8a482d/comments", "author": null, "committer": null, "parents": [{"sha": "31eee11b7cf2f550581949d87443b688232bd2a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31eee11b7cf2f550581949d87443b688232bd2a6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/31eee11b7cf2f550581949d87443b688232bd2a6"}], "stats": {"total": 45, "additions": 42, "deletions": 3}, "files": [{"sha": "853788f307689f18926b77c2ada6b62d66a44ef0", "filename": "gcc/ada/styleg.adb", "status": "modified", "additions": 42, "deletions": 3, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46edcdb100403f15510c2263d5b821546b8a482d/gcc%2Fada%2Fstyleg.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46edcdb100403f15510c2263d5b821546b8a482d/gcc%2Fada%2Fstyleg.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fstyleg.adb?ref=46edcdb100403f15510c2263d5b821546b8a482d", "patch": "@@ -256,11 +256,16 @@ package body Styleg is\n    --       range 16#21#..16#2F# or 16#3A#..16#3F#. This allows special\n    --       comments, such as those generated by gnatprep, or those that\n    --       appear in the SPARK annotation language to be accepted.\n-   --\n+\n    --       Note: for GNAT internal files (-gnatg switch set on for the\n    --       compilation), the only special sequence recognized and allowed\n    --       is --! as generated by gnatprep.\n \n+   --    6. In addition, the comment must be properly indented if comment\n+   --       indentation checking is active (Style_Check_Indentation non-zero).\n+   --       Either the start column must be a multiple of this indentation,\n+   --       or the indentation must match that of the next non-blank line.\n+\n    procedure Check_Comment is\n       S : Source_Ptr;\n       C : Character;\n@@ -269,6 +274,11 @@ package body Styleg is\n       --  Returns True if the last two characters on the line are -- which\n       --  characterizes a box comment (as for example follows this spec).\n \n+      function Same_Column_As_Next_Non_Blank_Line return Boolean;\n+      --  Called for a full line comment. If the indentation of this commment\n+      --  matches that of the next non-blank line in the source, then True is\n+      --  returned, otherwise False.\n+\n       --------------------\n       -- Is_Box_Comment --\n       --------------------\n@@ -287,6 +297,32 @@ package body Styleg is\n          return Source (S - 1) = '-' and then Source (S - 2) = '-';\n       end Is_Box_Comment;\n \n+      ----------------------------------------\n+      -- Same_Column_As_Next_Non_Blank_Line --\n+      ----------------------------------------\n+\n+      function Same_Column_As_Next_Non_Blank_Line return Boolean is\n+         P : Source_Ptr;\n+\n+      begin\n+         --  Step to end of line\n+\n+         P := Scan_Ptr + 2;\n+         while Source (P) not in Line_Terminator loop\n+            P := P + 1;\n+         end loop;\n+\n+         --  Step past blanks, and line terminators (UTF_32 case???)\n+\n+         while Source (P) <= ' ' and then Source (P) /= EOF loop\n+            P := P + 1;\n+         end loop;\n+\n+         --  Compare columns\n+\n+         return Get_Column_Number (Scan_Ptr) = Get_Column_Number (P);\n+      end Same_Column_As_Next_Non_Blank_Line;\n+\n    --  Start of processing for Check_Comment\n \n    begin\n@@ -320,12 +356,15 @@ package body Styleg is\n \n          if Style_Check_Indentation /= 0 then\n             if Start_Column rem Style_Check_Indentation /= 0 then\n-               Error_Msg_S (\"(style) bad column\");\n+               if not Same_Column_As_Next_Non_Blank_Line then\n+                  Error_Msg_S (\"(style) bad column\");\n+               end if;\n+\n                return;\n             end if;\n          end if;\n \n-         --  If we are not checking comments, nothing to do\n+         --  If we are not checking comments, nothing more to do\n \n          if not Style_Check_Comments then\n             return;"}]}