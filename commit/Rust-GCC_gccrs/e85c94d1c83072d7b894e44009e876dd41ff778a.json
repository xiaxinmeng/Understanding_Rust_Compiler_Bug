{"sha": "e85c94d1c83072d7b894e44009e876dd41ff778a", "node_id": "C_kwDOANBUbNoAKGU4NWM5NGQxYzgzMDcyZDdiODk0ZTQ0MDA5ZTg3NmRkNDFmZjc3OGE", "commit": {"author": {"name": "Takayuki 'January June' Suwa", "email": "jjsuwa_sys3175@yahoo.co.jp", "date": "2022-07-13T11:40:13Z"}, "committer": {"name": "Max Filippov", "email": "jcmvbkbc@gmail.com", "date": "2022-07-14T07:03:35Z"}, "message": "xtensa: Minor fix for FP constant synthesis\n\nThis patch fixes an non-fatal issue about negative constant values derived\nfrom FP constant synthesis on hosts whose 'long' is wider than 'int32_t'.\n\nAnd also replaces the dedicated code in FP constant synthesis split\npattern with the appropriate existing function call.\n\ngcc/ChangeLog:\n\n\t* config/xtensa/xtensa.md:\n\tIn FP constant synthesis split pattern, subcontract to\n\tavoid_constant_pool_reference() as in the case of integer,\n\tbecause it can handle well too.  And cast to int32_t before\n\tcalling xtensa_constantsynth() in order to ignore upper 32-bit.\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.target/xtensa/constsynth_double.c:\n\tModify in order to catch the issue.", "tree": {"sha": "cb9512b831dcd9871ab2e15674f06e4efb4759c7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cb9512b831dcd9871ab2e15674f06e4efb4759c7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e85c94d1c83072d7b894e44009e876dd41ff778a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e85c94d1c83072d7b894e44009e876dd41ff778a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e85c94d1c83072d7b894e44009e876dd41ff778a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e85c94d1c83072d7b894e44009e876dd41ff778a/comments", "author": {"login": "jjsuwa-sys3175", "id": 73290592, "node_id": "MDQ6VXNlcjczMjkwNTky", "avatar_url": "https://avatars.githubusercontent.com/u/73290592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jjsuwa-sys3175", "html_url": "https://github.com/jjsuwa-sys3175", "followers_url": "https://api.github.com/users/jjsuwa-sys3175/followers", "following_url": "https://api.github.com/users/jjsuwa-sys3175/following{/other_user}", "gists_url": "https://api.github.com/users/jjsuwa-sys3175/gists{/gist_id}", "starred_url": "https://api.github.com/users/jjsuwa-sys3175/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jjsuwa-sys3175/subscriptions", "organizations_url": "https://api.github.com/users/jjsuwa-sys3175/orgs", "repos_url": "https://api.github.com/users/jjsuwa-sys3175/repos", "events_url": "https://api.github.com/users/jjsuwa-sys3175/events{/privacy}", "received_events_url": "https://api.github.com/users/jjsuwa-sys3175/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jcmvbkbc", "id": 166731, "node_id": "MDQ6VXNlcjE2NjczMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/166731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jcmvbkbc", "html_url": "https://github.com/jcmvbkbc", "followers_url": "https://api.github.com/users/jcmvbkbc/followers", "following_url": "https://api.github.com/users/jcmvbkbc/following{/other_user}", "gists_url": "https://api.github.com/users/jcmvbkbc/gists{/gist_id}", "starred_url": "https://api.github.com/users/jcmvbkbc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jcmvbkbc/subscriptions", "organizations_url": "https://api.github.com/users/jcmvbkbc/orgs", "repos_url": "https://api.github.com/users/jcmvbkbc/repos", "events_url": "https://api.github.com/users/jcmvbkbc/events{/privacy}", "received_events_url": "https://api.github.com/users/jcmvbkbc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cff72485b1d5682a0c55f45b6e6f023c98739862", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cff72485b1d5682a0c55f45b6e6f023c98739862", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cff72485b1d5682a0c55f45b6e6f023c98739862"}], "stats": {"total": 37, "additions": 9, "deletions": 28}, "files": [{"sha": "6a58d3e2776c25cb311dbc627c340bf09df40ebf", "filename": "gcc/config/xtensa/xtensa.md", "status": "modified", "additions": 8, "deletions": 27, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e85c94d1c83072d7b894e44009e876dd41ff778a/gcc%2Fconfig%2Fxtensa%2Fxtensa.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e85c94d1c83072d7b894e44009e876dd41ff778a/gcc%2Fconfig%2Fxtensa%2Fxtensa.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fxtensa%2Fxtensa.md?ref=e85c94d1c83072d7b894e44009e876dd41ff778a", "patch": "@@ -1244,35 +1244,16 @@\n   \"! optimize_debug && reload_completed\"\n   [(const_int 0)]\n {\n-  int i = 0;\n-  rtx x = XEXP (operands[1], 0);\n-  long l[2];\n-  if (SYMBOL_REF_P (x)\n-      && CONSTANT_POOL_ADDRESS_P (x))\n-    x = get_pool_constant (x);\n-  else if (GET_CODE (x) == CONST)\n-    {\n-      x = XEXP (x, 0);\n-      gcc_assert (GET_CODE (x) == PLUS\n-\t\t  && SYMBOL_REF_P (XEXP (x, 0))\n-\t\t  && CONSTANT_POOL_ADDRESS_P (XEXP (x, 0))\n-\t\t  && CONST_INT_P (XEXP (x, 1)));\n-      i = INTVAL (XEXP (x, 1));\n-      gcc_assert (i == 0 || i == 4);\n-      i /= 4;\n-      x = get_pool_constant (XEXP (x, 0));\n-    }\n-  else\n-    gcc_unreachable ();\n-  if (GET_MODE (x) == SFmode)\n-    REAL_VALUE_TO_TARGET_SINGLE (*CONST_DOUBLE_REAL_VALUE (x), l[0]);\n-  else if (GET_MODE (x) == DFmode)\n-    REAL_VALUE_TO_TARGET_DOUBLE (*CONST_DOUBLE_REAL_VALUE (x), l);\n-  else\n+  rtx x = avoid_constant_pool_reference (operands[1]);\n+  long l;\n+  HOST_WIDE_INT value;\n+  if (! CONST_DOUBLE_P (x) || GET_MODE (x) != SFmode)\n     FAIL;\n+  REAL_VALUE_TO_TARGET_SINGLE (*CONST_DOUBLE_REAL_VALUE (x), l);\n   x = gen_rtx_REG (SImode, REGNO (operands[0]));\n-  if (! xtensa_constantsynth (x, l[i]))\n-    emit_move_insn (x, GEN_INT (l[i]));\n+  value = (int32_t)l;\n+  if (! xtensa_constantsynth (x, value))\n+    emit_move_insn (x, GEN_INT (value));\n   DONE;\n })\n "}, {"sha": "5fba6a98650666a01d6e3fb060a2d1175b9be001", "filename": "gcc/testsuite/gcc.target/xtensa/constsynth_double.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e85c94d1c83072d7b894e44009e876dd41ff778a/gcc%2Ftestsuite%2Fgcc.target%2Fxtensa%2Fconstsynth_double.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e85c94d1c83072d7b894e44009e876dd41ff778a/gcc%2Ftestsuite%2Fgcc.target%2Fxtensa%2Fconstsynth_double.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fxtensa%2Fconstsynth_double.c?ref=e85c94d1c83072d7b894e44009e876dd41ff778a", "patch": "@@ -5,7 +5,7 @@ void test(unsigned int count, double array[])\n {\n   unsigned int i;\n   for (i = 0; i < count; ++i)\n-    array[i] = 1.0;\n+    array[i] = 8.988474246316506e+307;\n }\n \n /* { dg-final { scan-assembler-not \"l32r\" } } */"}]}