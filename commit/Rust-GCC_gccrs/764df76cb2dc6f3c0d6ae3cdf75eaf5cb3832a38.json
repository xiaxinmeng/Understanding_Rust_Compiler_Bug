{"sha": "764df76cb2dc6f3c0d6ae3cdf75eaf5cb3832a38", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzY0ZGY3NmNiMmRjNmYzYzBkNmFlM2NkZjc1ZWFmNWNiMzgzMmEzOA==", "commit": {"author": {"name": "Dimitar Dimitrov", "email": "dimitar@dinux.eu", "date": "2018-06-28T03:43:48Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2018-06-28T03:43:48Z"}, "message": "lra-eliminations.c (update_reg_eliminate): Mark all spanning hard registers for Pmode.\n\n2018-06-23  Dimitar Dimitrov  <dimitar@dinux.eu>\n\n\t* lra-eliminations.c (update_reg_eliminate): Mark all spanning hard\n\tregisters for Pmode.\n\t* lra-lives.c (check_pseudos_live_through_calls): Mark all spanning\n\thard registers for the clobbered pseudo.\n\nFrom-SVN: r262205", "tree": {"sha": "444412cd82b33d98215b32dc20de26ac2b7cb24b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/444412cd82b33d98215b32dc20de26ac2b7cb24b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/764df76cb2dc6f3c0d6ae3cdf75eaf5cb3832a38", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/764df76cb2dc6f3c0d6ae3cdf75eaf5cb3832a38", "html_url": "https://github.com/Rust-GCC/gccrs/commit/764df76cb2dc6f3c0d6ae3cdf75eaf5cb3832a38", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/764df76cb2dc6f3c0d6ae3cdf75eaf5cb3832a38/comments", "author": null, "committer": null, "parents": [{"sha": "3d09a8abd304171b2ccdb4c5cdece6da874c643a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d09a8abd304171b2ccdb4c5cdece6da874c643a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3d09a8abd304171b2ccdb4c5cdece6da874c643a"}], "stats": {"total": 14, "additions": 11, "deletions": 3}, "files": [{"sha": "e1ba55e3f052a9e89b08c57623f76bd34fcafbda", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/764df76cb2dc6f3c0d6ae3cdf75eaf5cb3832a38/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/764df76cb2dc6f3c0d6ae3cdf75eaf5cb3832a38/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=764df76cb2dc6f3c0d6ae3cdf75eaf5cb3832a38", "patch": "@@ -1,3 +1,10 @@\n+2018-06-27  Dimitar Dimitrov  <dimitar@dinux.eu>\n+\n+\t* lra-eliminations.c (update_reg_eliminate): Mark all spanning hard\n+\tregisters for Pmode.\n+\t* lra-lives.c (check_pseudos_live_through_calls): Mark all spanning\n+\thard registers for the clobbered pseudo.\n+\n 2018-06-27  Paul Koning  <ni1d@arrl.net>\n \n \t* common/config/pdp11/pdp11-common.c (pdp11_handle_option): Handle"}, {"sha": "f5f104020b34438da30509cd9d6413e02838a625", "filename": "gcc/lra-eliminations.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/764df76cb2dc6f3c0d6ae3cdf75eaf5cb3832a38/gcc%2Flra-eliminations.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/764df76cb2dc6f3c0d6ae3cdf75eaf5cb3832a38/gcc%2Flra-eliminations.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flra-eliminations.c?ref=764df76cb2dc6f3c0d6ae3cdf75eaf5cb3832a38", "patch": "@@ -1264,13 +1264,13 @@ update_reg_eliminate (bitmap insns_with_changed_offsets)\n   CLEAR_HARD_REG_SET (temp_hard_reg_set);\n   for (ep = reg_eliminate; ep < &reg_eliminate[NUM_ELIMINABLE_REGS]; ep++)\n     if (elimination_map[ep->from] == NULL)\n-      SET_HARD_REG_BIT (temp_hard_reg_set, ep->from);\n+      add_to_hard_reg_set (&temp_hard_reg_set, Pmode, ep->from);\n     else if (elimination_map[ep->from] == ep)\n       {\n \t/* Prevent the hard register into which we eliminate from\n \t   the usage for pseudos.  */\n         if (ep->from != ep->to)\n-\t  SET_HARD_REG_BIT (temp_hard_reg_set, ep->to);\n+\t  add_to_hard_reg_set (&temp_hard_reg_set, Pmode, ep->to);\n \tif (maybe_ne (ep->previous_offset, ep->offset))\n \t  {\n \t    bitmap_ior_into (insns_with_changed_offsets,"}, {"sha": "920fd02b997f8d6e6497e8f82f36406115bd424a", "filename": "gcc/lra-lives.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/764df76cb2dc6f3c0d6ae3cdf75eaf5cb3832a38/gcc%2Flra-lives.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/764df76cb2dc6f3c0d6ae3cdf75eaf5cb3832a38/gcc%2Flra-lives.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flra-lives.c?ref=764df76cb2dc6f3c0d6ae3cdf75eaf5cb3832a38", "patch": "@@ -581,7 +581,8 @@ check_pseudos_live_through_calls (int regno,\n   for (hr = 0; hr < FIRST_PSEUDO_REGISTER; hr++)\n     if (targetm.hard_regno_call_part_clobbered (hr,\n \t\t\t\t\t\tPSEUDO_REGNO_MODE (regno)))\n-      SET_HARD_REG_BIT (lra_reg_info[regno].conflict_hard_regs, hr);\n+      add_to_hard_reg_set (&lra_reg_info[regno].conflict_hard_regs,\n+\t\t\t   PSEUDO_REGNO_MODE (regno), hr);\n   lra_reg_info[regno].call_p = true;\n   if (! sparseset_bit_p (pseudos_live_through_setjumps, regno))\n     return;"}]}