{"sha": "b40e004839cdec5991295561829bb41747e98d32", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjQwZTAwNDgzOWNkZWM1OTkxMjk1NTYxODI5YmI0MTc0N2U5OGQzMg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2017-09-09T14:04:58Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2017-09-09T14:04:58Z"}, "message": "dwarf2out.c (gen_formal_parameter_die): Remove obsolete hunk.\n\n\t* dwarf2out.c (gen_formal_parameter_die): Remove obsolete hunk.\n\n\tCheck ultimate_origin before setting reusing_die.\n\nCo-Authored-By: Jason Merrill <jason@redhat.com>\n\nFrom-SVN: r251938", "tree": {"sha": "7493781ebb5e6b98bb39fd26f869f522cc46696b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7493781ebb5e6b98bb39fd26f869f522cc46696b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b40e004839cdec5991295561829bb41747e98d32", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b40e004839cdec5991295561829bb41747e98d32", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b40e004839cdec5991295561829bb41747e98d32", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b40e004839cdec5991295561829bb41747e98d32/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "95b7c2e0c5439e4e9904c5bc4d78e553a4e802c7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/95b7c2e0c5439e4e9904c5bc4d78e553a4e802c7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/95b7c2e0c5439e4e9904c5bc4d78e553a4e802c7"}], "stats": {"total": 33, "additions": 10, "deletions": 23}, "files": [{"sha": "01d42519cc168524f352a96730ca6b133161f50c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b40e004839cdec5991295561829bb41747e98d32/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b40e004839cdec5991295561829bb41747e98d32/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b40e004839cdec5991295561829bb41747e98d32", "patch": "@@ -1,3 +1,9 @@\n+2017-09-09  Richard Biener  <rguenther@suse.de>\n+\t    Jason Merrill  <jason@redhat.com>\n+\n+\t* dwarf2out.c (gen_formal_parameter_die): Remove obsolete hunk.\n+\tCheck ultimate_origin before setting reusing_die.\n+\n 2017-09-08  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/70029 - ICE with ref-qualifier and -flto"}, {"sha": "cc93db37e23d78c2ae2ee9118535de6df00ab1b2", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 4, "deletions": 23, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b40e004839cdec5991295561829bb41747e98d32/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b40e004839cdec5991295561829bb41747e98d32/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=b40e004839cdec5991295561829bb41747e98d32", "patch": "@@ -21285,30 +21285,15 @@ gen_formal_parameter_die (tree node, tree origin, bool emit_name_p,\n \t\t\t  dw_die_ref context_die)\n {\n   tree node_or_origin = node ? node : origin;\n-  tree ultimate_origin;\n   dw_die_ref parm_die = NULL;\n   \n-  if (TREE_CODE_CLASS (TREE_CODE (node_or_origin)) == tcc_declaration)\n+  if (DECL_P (node_or_origin))\n     {\n       parm_die = lookup_decl_die (node);\n \n-      /* If the contexts differ, we may not be talking about the same\n-\t thing.\n-\t ???  When in LTO the DIE parent is the \"abstract\" copy and the\n-\t context_die is the specification \"copy\".  But this whole block\n-\t should eventually be no longer needed.  */\n-      if (parm_die && parm_die->die_parent != context_die && !in_lto_p)\n-\t{\n-\t  if (!DECL_ABSTRACT_P (node))\n-\t    {\n-\t      /* This can happen when creating an inlined instance, in\n-\t\t which case we need to create a new DIE that will get\n-\t\t annotated with DW_AT_abstract_origin.  */\n-\t      parm_die = NULL;\n-\t    }\n-\t  else\n-\t    gcc_unreachable ();\n-\t}\n+      tree ultimate_origin = decl_ultimate_origin (node_or_origin);\n+      if (node || ultimate_origin)\n+\torigin = ultimate_origin;\n \n       if (parm_die && parm_die->die_parent == NULL)\n \t{\n@@ -21343,10 +21328,6 @@ gen_formal_parameter_die (tree node, tree origin, bool emit_name_p,\n   switch (TREE_CODE_CLASS (TREE_CODE (node_or_origin)))\n     {\n     case tcc_declaration:\n-      ultimate_origin = decl_ultimate_origin (node_or_origin);\n-      if (node || ultimate_origin)\n-\torigin = ultimate_origin;\n-\n       if (reusing_die)\n \tgoto add_location;\n "}]}