{"sha": "653e276c6536663cda57bda038a9df4e64adb96f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjUzZTI3NmM2NTM2NjYzY2RhNTdiZGEwMzhhOWRmNGU2NGFkYjk2Zg==", "commit": {"author": {"name": "Neil Booth", "email": "neil@daikokuya.demon.co.uk", "date": "2001-07-17T19:47:58Z"}, "committer": {"name": "Neil Booth", "email": "neil@gcc.gnu.org", "date": "2001-07-17T19:47:58Z"}, "message": "dbxout.c (dbxout_really_begin_function): Rename to dbxout_begin_function.\n\n\t* dbxout.c (dbxout_really_begin_function): Rename to\n\tdbxout_begin_function.\n\t(dbx_debug_hooks, xcoff_debug_hooks): Update.\n\t(dbxout_begin_function): Remove.\n\t(dbxout_function): Update.\n\t(dbxout_source_line): Update prototype.\n\t* dbxout.h (dbxout_begin_function): Remove.\n\t* debug.c (do_nothing_debug_hooks): Update.\n\t(debug_nothing_tree): Update.\n\t(debug_nothing_charstar_rtx): Remove.\n\t* debug.h (union tree_node): Declare.\n\t(struct rtx_def): Remove.\n\t(gcc_debug_hooks): New hooks begin_prologue, end_prologue,\n\tbegin_function.  Change source_line prototype.\n\t(debug_nothing_tree): New.\n\t(debug_nothing_charstar_rtx): Delete.\n\t(dwarf2out_begin_prologue): Moved from ...\n\t* tree.h: ... here.\n\t* dwarf2out.c (dwarf2_debug_hooks): Update.\n\t(dwarf2out_begin_prologue): Update prototype.  If genuine dwarf2\n\tdebug info, call dwarf2out_source_line.\n\t(dwarf2out_souce_line): Update prototype.\n\t* dwarfout.c (dwarfout_begin_function): Rename dwarfout_end_prologue.\n\tChange prototype, make static.\n\t(dwarfout_source_line): Update prototype.\n\t(dwarf_debug_hooks): Update.\n\t* dwarfout.h (dwarfout_begin_function): Remove.\n\t* final.c (final_start_function, final_scan_insn): Use appropriate\n\tdebug hooks, update to use notice_source_line.\n\t(output_source_line): Rename notice_source_line.  Don't call the\n\tsource_line debug hook.\n\t* sdbout.c (sdbout_begin_function): Rename sdbout_begin_prologue,\n\tmake static, update prototype.\n\t(sdbout_mark_begin_function): Rename sdbout_begin_function, update\n\tprototype.\n\t(sdbout_end_prologue): New.\n\t(sdbout_source_line): Update prototype.\n\t(sdbout_debug_hooks): Update.\n\t(sdbout_symbol): Remove unused var.\n\t* sdbout.h (sdbout_begin_function, sdbout_mark_begin_function):\n\tDelete.\n\t* varasm.c: Include debug.h.\n\t(assemble_start_function): Use begin_function debug_hook.\n\t* xcoffout.c (xcoffout_begin_prologue): Rename xcoffout_begin_function,\n\tupdate with prototype.\n\t(xcoffout_source_line): Update prototype.\n\t* xcoffout.h (xcoffout_begin_prologue): Rename xcoffout_begin_function,\n\tupdate prototype.\n\t(xcoffout_source_line): Update prototype.\n\nFrom-SVN: r44087", "tree": {"sha": "9abd13faa762d57f769d9f43c78300834738874b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9abd13faa762d57f769d9f43c78300834738874b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/653e276c6536663cda57bda038a9df4e64adb96f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/653e276c6536663cda57bda038a9df4e64adb96f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/653e276c6536663cda57bda038a9df4e64adb96f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/653e276c6536663cda57bda038a9df4e64adb96f/comments", "author": null, "committer": null, "parents": [{"sha": "91a18fe0e6d96ec2cdad7d4f12ada3b4f5ed11e6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91a18fe0e6d96ec2cdad7d4f12ada3b4f5ed11e6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/91a18fe0e6d96ec2cdad7d4f12ada3b4f5ed11e6"}], "stats": {"total": 367, "additions": 209, "deletions": 158}, "files": [{"sha": "3d5e47996a09b5799376b410a1621cadfd48714b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 52, "deletions": 0, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/653e276c6536663cda57bda038a9df4e64adb96f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/653e276c6536663cda57bda038a9df4e64adb96f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=653e276c6536663cda57bda038a9df4e64adb96f", "patch": "@@ -1,3 +1,55 @@\n+2001-07-17  Neil Booth  <neil@daikokuya.demon.co.uk>\n+\n+\t* dbxout.c (dbxout_really_begin_function): Rename to\n+\tdbxout_begin_function.\n+\t(dbx_debug_hooks, xcoff_debug_hooks): Update.\n+\t(dbxout_begin_function): Remove.\n+\t(dbxout_function): Update.\n+\t(dbxout_source_line): Update prototype.\n+\t* dbxout.h (dbxout_begin_function): Remove.\n+\t* debug.c (do_nothing_debug_hooks): Update.\n+\t(debug_nothing_tree): Update.\n+\t(debug_nothing_charstar_rtx): Remove.\n+\t* debug.h (union tree_node): Declare.\n+\t(struct rtx_def): Remove.\n+\t(gcc_debug_hooks): New hooks begin_prologue, end_prologue,\n+\tbegin_function.  Change source_line prototype.\n+\t(debug_nothing_tree): New.\n+\t(debug_nothing_charstar_rtx): Delete.\n+\t(dwarf2out_begin_prologue): Moved from ...\n+\t* tree.h: ... here.\n+\t* dwarf2out.c (dwarf2_debug_hooks): Update.\n+\t(dwarf2out_begin_prologue): Update prototype.  If genuine dwarf2\n+\tdebug info, call dwarf2out_source_line.\n+\t(dwarf2out_souce_line): Update prototype.\n+\t* dwarfout.c (dwarfout_begin_function): Rename dwarfout_end_prologue.\n+\tChange prototype, make static.\n+\t(dwarfout_source_line): Update prototype.\n+\t(dwarf_debug_hooks): Update.\n+\t* dwarfout.h (dwarfout_begin_function): Remove.\n+\t* final.c (final_start_function, final_scan_insn): Use appropriate\n+\tdebug hooks, update to use notice_source_line.\n+\t(output_source_line): Rename notice_source_line.  Don't call the\n+\tsource_line debug hook.\n+\t* sdbout.c (sdbout_begin_function): Rename sdbout_begin_prologue,\n+\tmake static, update prototype.\n+\t(sdbout_mark_begin_function): Rename sdbout_begin_function, update\n+\tprototype.\n+\t(sdbout_end_prologue): New.\n+\t(sdbout_source_line): Update prototype.\n+\t(sdbout_debug_hooks): Update.\n+\t(sdbout_symbol): Remove unused var.\n+\t* sdbout.h (sdbout_begin_function, sdbout_mark_begin_function):\n+\tDelete.\n+\t* varasm.c: Include debug.h.\n+\t(assemble_start_function): Use begin_function debug_hook.\n+\t* xcoffout.c (xcoffout_begin_prologue): Rename xcoffout_begin_function,\n+\tupdate with prototype.\n+\t(xcoffout_source_line): Update prototype.\n+\t* xcoffout.h (xcoffout_begin_prologue): Rename xcoffout_begin_function,\n+\tupdate prototype.\n+\t(xcoffout_source_line): Update prototype.\n+\n 2001-07-17  Richard Henderson  <rth@redhat.com>\n \n \t* c-typeck.c (build_binary_op): Do not shorten unsigned"}, {"sha": "e2f21ff88c95f834bfa8310d07d6d14021db00c4", "filename": "gcc/dbxout.c", "status": "modified", "additions": 20, "deletions": 23, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/653e276c6536663cda57bda038a9df4e64adb96f/gcc%2Fdbxout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/653e276c6536663cda57bda038a9df4e64adb96f/gcc%2Fdbxout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdbxout.c?ref=653e276c6536663cda57bda038a9df4e64adb96f", "patch": "@@ -288,7 +288,7 @@ static void dbxout_init\t\t\tPARAMS ((const char *));\n static void dbxout_finish\t\tPARAMS ((const char *));\n static void dbxout_start_source_file\tPARAMS ((unsigned, const char *));\n static void dbxout_end_source_file\tPARAMS ((unsigned));\n-static void dbxout_source_line\t\tPARAMS ((const char *, rtx));\n+static void dbxout_source_line\t\tPARAMS ((unsigned int, const char *));\n #if defined(ASM_OUTPUT_SECTION_NAME)\n static void dbxout_function_end\t\tPARAMS ((void));\n #endif\n@@ -310,7 +310,7 @@ static void dbxout_symbol_name\t\tPARAMS ((tree, const char *, int));\n static void dbxout_prepare_symbol\tPARAMS ((tree));\n static void dbxout_finish_symbol\tPARAMS ((tree));\n static void dbxout_block\t\tPARAMS ((tree, int, tree));\n-static void dbxout_really_begin_function PARAMS ((tree));\n+static void dbxout_begin_function\tPARAMS ((tree));\n \f\n /* The debug hooks structure.  */\n #if defined (DBX_DEBUGGING_INFO)\n@@ -328,9 +328,16 @@ struct gcc_debug_hooks dbx_debug_hooks =\n   dbxout_end_source_file,\n   dbxout_begin_block,\n   dbxout_end_block,\n-  dbxout_source_line,\n+  dbxout_source_line,\t\t/* source_line */\n+  dbxout_source_line,\t\t/* begin_prologue: just output line info */\n+  debug_nothing_int,\t\t/* end_prologue */\n   debug_nothing_void,\t\t/* end_epilogue */\n-  debug_nothing_int\t\t/* end function */\n+#ifdef DBX_FUNCTION_FIRST\n+  dbxout_begin_function,\n+#else\n+  debug_nothing_tree,\t\t/* begin_function */\n+#endif\n+  debug_nothing_int\t\t/* end_function */\n };\n #endif /* DBX_DEBUGGING_INFO  */\n \n@@ -346,7 +353,10 @@ struct gcc_debug_hooks xcoff_debug_hooks =\n   xcoffout_begin_block,\n   xcoffout_end_block,\n   xcoffout_source_line,\n+  xcoffout_begin_prologue,\t/* begin_prologue */\n+  debug_nothing_int,\t\t/* end_prologue */\n   xcoffout_end_epilogue,\n+  debug_nothing_tree,\t\t/* begin_function */\n   xcoffout_end_function\n };\n #endif /* XCOFF_DEBUGGING_INFO  */\n@@ -559,16 +569,14 @@ dbxout_source_file (file, filename)\n     }\n }\n \n-/* Output a line number symbol entry into output stream FILE, \n-   for source file FILENAME and line number LINENO.  */\n+/* Output a line number symbol entry for source file FILENAME and line\n+   number LINENO.  */\n \n static void\n-dbxout_source_line (filename, note)\n+dbxout_source_line (lineno, filename)\n+     unsigned int lineno;\n      const char *filename;\n-     rtx note;\n {\n-  unsigned int lineno = NOTE_LINE_NUMBER (note);\n-\n   dbxout_source_file (asmfile, filename);\n \n #ifdef ASM_OUTPUT_SOURCE_LINE\n@@ -2716,7 +2724,7 @@ dbxout_block (block, depth, args)\n    but on some systems, it comes before.  */\n \n static void\n-dbxout_really_begin_function (decl)\n+dbxout_begin_function (decl)\n      tree decl;\n {\n   dbxout_symbol (decl, 0);\n@@ -2725,17 +2733,6 @@ dbxout_really_begin_function (decl)\n     dbxout_symbol (DECL_RESULT (decl), 1);\n }\n \n-/* Called at beginning of output of function definition.  */\n-\n-void\n-dbxout_begin_function (decl)\n-     tree decl ATTRIBUTE_UNUSED;\n-{\n-#ifdef DBX_FUNCTION_FIRST\n-  dbxout_really_begin_function (decl);\n-#endif\n-}\n-\n /* Output dbx data for a function definition.\n    This includes a definition of the function name itself (a symbol),\n    definitions of the parameters (locating them in the parameter list)\n@@ -2747,7 +2744,7 @@ dbxout_function (decl)\n      tree decl;\n {\n #ifndef DBX_FUNCTION_FIRST\n-  dbxout_really_begin_function (decl);\n+  dbxout_begin_function (decl);\n #endif\n   dbxout_block (DECL_INITIAL (decl), 0, DECL_ARGUMENTS (decl));\n #ifdef DBX_OUTPUT_FUNCTION_END"}, {"sha": "91bbced930b147d820e279ceae177f67f15e6a84", "filename": "gcc/dbxout.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/653e276c6536663cda57bda038a9df4e64adb96f/gcc%2Fdbxout.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/653e276c6536663cda57bda038a9df4e64adb96f/gcc%2Fdbxout.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdbxout.h?ref=653e276c6536663cda57bda038a9df4e64adb96f", "patch": "@@ -26,4 +26,3 @@ extern void dbxout_parms\t\tPARAMS ((tree));\n extern void dbxout_reg_parms\t\tPARAMS ((tree));\n extern int dbxout_syms\t\t\tPARAMS ((tree));\n extern void dbxout_function\t\tPARAMS ((tree));\n-extern void dbxout_begin_function\tPARAMS ((tree));"}, {"sha": "0c75909d4ffd3548db2f1d6c27edb270c620b86f", "filename": "gcc/debug.c", "status": "modified", "additions": 12, "deletions": 10, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/653e276c6536663cda57bda038a9df4e64adb96f/gcc%2Fdebug.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/653e276c6536663cda57bda038a9df4e64adb96f/gcc%2Fdebug.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdebug.c?ref=653e276c6536663cda57bda038a9df4e64adb96f", "patch": "@@ -30,9 +30,12 @@ struct gcc_debug_hooks do_nothing_debug_hooks =\n   debug_nothing_int,\n   debug_nothing_int_int,\n   debug_nothing_int_int,\n-  debug_nothing_charstar_rtx,\n-  debug_nothing_void,\n-  debug_nothing_int\n+  debug_nothing_int_charstar,\t/* source_line */\n+  debug_nothing_int_charstar,\t/* begin_prologue */\n+  debug_nothing_int,\t\t/* end_prologue */\n+  debug_nothing_void,\t\t/* end_epilogue */\n+  debug_nothing_tree,\t\t/* begin_function */\n+  debug_nothing_int\t\t/* end_function */\n };\n \n /* This file contains implementations of each debug hook that do\n@@ -43,6 +46,12 @@ debug_nothing_void ()\n {\n }\n \n+void\n+debug_nothing_tree (decl)\n+     union tree_node *decl ATTRIBUTE_UNUSED;\n+{\n+}\n+\n void\n debug_nothing_charstar (main_filename)\n      const char *main_filename ATTRIBUTE_UNUSED;\n@@ -68,10 +77,3 @@ debug_nothing_int_int (line, n)\n      unsigned int n ATTRIBUTE_UNUSED;\n {\n }\n-\n-void\n-debug_nothing_charstar_rtx (filename, note)\n-     const char *filename ATTRIBUTE_UNUSED;\n-     struct rtx_def *note ATTRIBUTE_UNUSED;\n-{\n-}"}, {"sha": "56b2e033f22bd8f73cdd8ec23c0b2022b96c8f44", "filename": "gcc/debug.h", "status": "modified", "additions": 21, "deletions": 6, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/653e276c6536663cda57bda038a9df4e64adb96f/gcc%2Fdebug.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/653e276c6536663cda57bda038a9df4e64adb96f/gcc%2Fdebug.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdebug.h?ref=653e276c6536663cda57bda038a9df4e64adb96f", "patch": "@@ -18,7 +18,7 @@ Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */\n #ifndef GCC_DEBUG_H\n #define GCC_DEBUG_H\n \n-struct rtx_def;\n+union tree_node;\n \n /* This structure contains hooks for the debug information output\n    functions, accessed through the global instance debug_hooks set in\n@@ -53,13 +53,24 @@ struct gcc_debug_hooks\n   /* Record the end of a block.  Arguments as for begin_block.  */\n   void (* end_block) PARAMS ((unsigned int line, unsigned int n));\n \n-  /* Record a line based on NOTE.  Obtain the line number with\n-     NOTE_LINE_NUMBER (note).  */\n-  void (* source_line) PARAMS ((const char *filename, struct rtx_def *note));\n+  /* Record a source file location at (FILE, LINE).  */\n+  void (* source_line) PARAMS ((unsigned int line, const char *file));\n+\n+  /* Called at start of prologue code.  LINE is the first line in the\n+     function.  This has been given the same prototype as source_line,\n+     so that the source_line hook can be substituted if appropriate.  */\n+  void (* begin_prologue) PARAMS ((unsigned int line, const char *file));\n+\n+  /* Called at end of prologue code.  LINE is the first line in the\n+     function.  */\n+  void (* end_prologue) PARAMS ((unsigned int line));\n \n   /* Record end of epilogue code.  */\n   void (* end_epilogue) PARAMS ((void));\n \n+  /* Called at start of function DECL, before it is declared.  */\n+  void (* begin_function) PARAMS ((union tree_node *decl));\n+\n   /* Record end of function.  LINE is highest line number in function.  */\n   void (* end_function) PARAMS ((unsigned int line));\n };\n@@ -77,8 +88,8 @@ extern void debug_nothing_int\n   PARAMS ((unsigned int));\n extern void debug_nothing_int_int\n   PARAMS ((unsigned int, unsigned int));\n-extern void debug_nothing_charstar_rtx\n-  PARAMS ((const char *, struct rtx_def *));\n+extern void debug_nothing_tree\n+  PARAMS ((union tree_node *));\n \n /* Hooks for various debug formats.  */\n extern struct gcc_debug_hooks do_nothing_debug_hooks;\n@@ -90,6 +101,10 @@ extern struct gcc_debug_hooks dwarf2_debug_hooks;\n \n /* Dwarf2 frame information.  */\n \n+/* FILE is NULL iff being called for frame information for non-dwarf\n+   debug output.  */\n+extern void dwarf2out_begin_prologue\n+  PARAMS ((unsigned int, const char * file));\n extern void dwarf2out_end_epilogue\n   PARAMS ((void));\n "}, {"sha": "1aa927ab41861d4e15e87c5aa05dab4c6bb0fa24", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 19, "deletions": 6, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/653e276c6536663cda57bda038a9df4e64adb96f/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/653e276c6536663cda57bda038a9df4e64adb96f/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=653e276c6536663cda57bda038a9df4e64adb96f", "patch": "@@ -59,6 +59,10 @@ Boston, MA 02111-1307, USA.  */\n #include \"diagnostic.h\"\n #include \"debug.h\"\n \n+#ifdef DWARF2_DEBUGGING_INFO\n+static void dwarf2out_source_line\tPARAMS ((unsigned int, const char *));\n+#endif\n+\n /* DWARF2 Abbreviation Glossary:\n    CFA = Canonical Frame Address\n \t   a fixed address on the stack which identifies a call frame.\n@@ -1999,7 +2003,9 @@ output_call_frame_info (for_eh)\n    the prologue.  */\n \n void\n-dwarf2out_begin_prologue ()\n+dwarf2out_begin_prologue (line, file)\n+     unsigned int line ATTRIBUTE_UNUSED;\n+     const char *file ATTRIBUTE_UNUSED;\n {\n   char label[MAX_ARTIFICIAL_LABEL_BYTES];\n   register dw_fde_ref fde;\n@@ -2056,6 +2062,13 @@ dwarf2out_begin_prologue ()\n   fde->uses_eh_lsda = cfun->uses_eh_lsda;\n \n   args_size = old_args_size = 0;\n+\n+  /* We only want to output line number information for the genuine\n+     dwarf2 prologue case, not the eh frame case.  */\n+#ifdef DWARF2_DEBUGGING_INFO\n+  if (file)\n+    dwarf2out_source_line (line, file);\n+#endif\n }\n \n /* Output a marker (i.e. a label) for the absolute end of the generated code\n@@ -3009,7 +3022,6 @@ static void dwarf2out_start_source_file\tPARAMS ((unsigned, const char *));\n static void dwarf2out_end_source_file\tPARAMS ((unsigned));\n static void dwarf2out_begin_block\tPARAMS ((unsigned, unsigned));\n static void dwarf2out_end_block\t\tPARAMS ((unsigned, unsigned));\n-static void dwarf2out_source_line\tPARAMS ((const char *, rtx));\n \n /* The debug hooks structure.  */\n \n@@ -3024,7 +3036,10 @@ struct gcc_debug_hooks dwarf2_debug_hooks =\n   dwarf2out_begin_block,\n   dwarf2out_end_block,\n   dwarf2out_source_line,\n+  dwarf2out_begin_prologue,\n+  debug_nothing_int,\t\t/* end_prologue */\n   dwarf2out_end_epilogue,\n+  debug_nothing_tree,\t\t/* begin_function */\n   debug_nothing_int\t\t/* end_function */\n };\n \f\n@@ -11224,12 +11239,10 @@ init_file_table ()\n    'line_info_table' for later output of the .debug_line section.  */\n \n static void\n-dwarf2out_source_line (filename, note)\n+dwarf2out_source_line (line, filename)\n+     unsigned int line;\n      register const char *filename;\n-     rtx note;\n {\n-  unsigned int line = NOTE_LINE_NUMBER (note);\n-\n   if (debug_info_level >= DINFO_LEVEL_NORMAL)\n     {\n       function_section (current_function_decl);"}, {"sha": "65e324aeef8c1a7bbf6fd85657d38d9a39e1e4f3", "filename": "gcc/dwarfout.c", "status": "modified", "additions": 12, "deletions": 8, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/653e276c6536663cda57bda038a9df4e64adb96f/gcc%2Fdwarfout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/653e276c6536663cda57bda038a9df4e64adb96f/gcc%2Fdwarfout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarfout.c?ref=653e276c6536663cda57bda038a9df4e64adb96f", "patch": "@@ -798,7 +798,8 @@ static void dwarfout_end_source_file_check PARAMS ((unsigned));\n static void dwarfout_begin_block\tPARAMS ((unsigned, unsigned));\n static void dwarfout_end_block\t\tPARAMS ((unsigned, unsigned));\n static void dwarfout_end_epilogue\tPARAMS ((void));\n-static void dwarfout_source_line\tPARAMS (( const char *, rtx));\n+static void dwarfout_source_line\tPARAMS ((unsigned int, const char *));\n+static void dwarfout_end_prologue\tPARAMS ((unsigned int));\n static void dwarfout_end_function\tPARAMS ((unsigned int));\n static const char *dwarf_tag_name\tPARAMS ((unsigned));\n static const char *dwarf_attr_name\tPARAMS ((unsigned));\n@@ -1383,8 +1384,11 @@ struct gcc_debug_hooks dwarf_debug_hooks =\n   dwarfout_end_source_file_check,\n   dwarfout_begin_block,\n   dwarfout_end_block,\n-  dwarfout_source_line,\n+  dwarfout_source_line,\t\t/* source_line */\n+  dwarfout_source_line,\t\t/* begin_prologue */\n+  dwarfout_end_prologue,\n   dwarfout_end_epilogue,\n+  debug_nothing_tree,\t\t/* begin_function */\n   dwarfout_end_function\n };\n \f\n@@ -5874,13 +5878,15 @@ dwarfout_end_block (line, blocknum)\n    the real body of the function begins (after parameters have been moved\n    to their home locations).  */\n \n-void\n-dwarfout_begin_function ()\n+static void\n+dwarfout_end_prologue (line)\n+     unsigned int line ATTRIBUTE_UNUSED;\n {\n   char label[MAX_ARTIFICIAL_LABEL_BYTES];\n \n   if (! use_gnu_debug_info_extensions)\n     return;\n+\n   function_section (current_function_decl);\n   sprintf (label, BODY_BEGIN_LABEL_FMT, current_funcdef_number);\n   ASM_OUTPUT_LABEL (asm_out_file, label);\n@@ -6059,12 +6065,10 @@ generate_srcinfo_entry (line_entry_num, files_entry_num)\n }\n \n static void\n-dwarfout_source_line (filename, note)\n+dwarfout_source_line (line, filename)\n+     unsigned int line;\n      const char *filename;\n-     rtx note;\n {\n-  unsigned int line = NOTE_LINE_NUMBER (note);\n-\n   if (debug_info_level >= DINFO_LEVEL_NORMAL\n       /* We can't emit line number info for functions in separate sections,\n \t because the assembler can't subtract labels in different sections.  */"}, {"sha": "973c07e143244f7b85d18db52b31265f456b076e", "filename": "gcc/dwarfout.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/653e276c6536663cda57bda038a9df4e64adb96f/gcc%2Fdwarfout.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/653e276c6536663cda57bda038a9df4e64adb96f/gcc%2Fdwarfout.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarfout.h?ref=653e276c6536663cda57bda038a9df4e64adb96f", "patch": "@@ -19,5 +19,3 @@ the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n extern void dwarfout_file_scope_decl \tPARAMS ((tree , int));\n-\n-extern void dwarfout_begin_function\tPARAMS ((void));"}, {"sha": "6a8c298b3811f2b0fabdcf504c54b657b2c5b920", "filename": "gcc/final.c", "status": "modified", "additions": 14, "deletions": 50, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/653e276c6536663cda57bda038a9df4e64adb96f/gcc%2Ffinal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/653e276c6536663cda57bda038a9df4e64adb96f/gcc%2Ffinal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffinal.c?ref=653e276c6536663cda57bda038a9df4e64adb96f", "patch": "@@ -252,7 +252,7 @@ static void profile_function\tPARAMS ((FILE *));\n static void profile_after_prologue PARAMS ((FILE *));\n static void add_bb\t\tPARAMS ((FILE *));\n static int add_bb_string\tPARAMS ((const char *, int));\n-static void output_source_line\tPARAMS ((rtx));\n+static void notice_source_line\tPARAMS ((rtx));\n static rtx walk_alter_subreg\tPARAMS ((rtx));\n static void output_asm_name\tPARAMS ((void));\n static void output_operand\tPARAMS ((rtx, int));\n@@ -1576,37 +1576,16 @@ final_start_function (first, file, optimize)\n     }\n #endif\n \n-  /* Initial line number is supposed to be output\n-     before the function's prologue and label\n-     so that the function's address will not appear to be\n-     in the last statement of the preceding function.  */\n   if (NOTE_LINE_NUMBER (first) != NOTE_INSN_DELETED)\n-    last_linenum = high_block_linenum = high_function_linenum\n-      = NOTE_LINE_NUMBER (first);\n+    notice_source_line (first);\n+  high_block_linenum = high_function_linenum = last_linenum;\n \n-#if defined (DWARF2_UNWIND_INFO) || defined (IA64_UNWIND_INFO) \\\n-    || defined (DWARF2_DEBUGGING_INFO)\n-  dwarf2out_begin_prologue ();\n-#endif\n+  (*debug_hooks->begin_prologue) (last_linenum, last_filename);\n \n-  /* For SDB and XCOFF, the function beginning must be marked between\n-     the function label and the prologue.  We always need this, even when\n-     -g1 was used.  Defer on MIPS systems so that parameter descriptions\n-     follow function entry.  */\n-#if defined(SDB_DEBUGGING_INFO) && !defined(MIPS_DEBUGGING_INFO)\n-  if (write_symbols == SDB_DEBUG)\n-    sdbout_begin_function (last_linenum);\n-  else\n-#endif\n-#ifdef XCOFF_DEBUGGING_INFO\n-    if (write_symbols == XCOFF_DEBUG)\n-      xcoffout_begin_function (file, last_linenum);\n-    else\n+#if defined (DWARF2_UNWIND_INFO) || defined (IA64_UNWIND_INFO)\n+  if (write_symbols != DWARF2_DEBUG)\n+    dwarf2out_begin_prologue (0, NULL);\n #endif\n-      /* But only output line number for other debug info types if -g2\n-\t or better.  */\n-      if (NOTE_LINE_NUMBER (first) != NOTE_INSN_DELETED)\n-\toutput_source_line (first);\n \n #ifdef LEAF_REG_REMAP\n   if (current_function_uses_only_leaf_regs)\n@@ -2079,24 +2058,8 @@ final_scan_insn (insn, file, optimize, prescan, nopeepholes)\n \t  break;\n \n \tcase NOTE_INSN_FUNCTION_BEG:\n-#if defined(SDB_DEBUGGING_INFO) && defined(MIPS_DEBUGGING_INFO)\n-\t  /* MIPS stabs require the parameter descriptions to be after the\n-\t     function entry point rather than before.  */\n-\t  if (write_symbols == SDB_DEBUG)\n-\t    {\n-\t      app_disable ();\n-\t      sdbout_begin_function (last_linenum);\n-\t    }\n-#endif\n-#ifdef DWARF_DEBUGGING_INFO\n-\t  /* This outputs a marker where the function body starts, so it\n-\t     must be after the prologue.  */\n-\t  if (write_symbols == DWARF_DEBUG)\n-\t    {\n-\t      app_disable ();\n-\t      dwarfout_begin_function ();\n-\t    }\n-#endif\n+\t  app_disable ();\n+\t  (*debug_hooks->end_prologue) (last_linenum);\n \t  break;\n \n \tcase NOTE_INSN_BLOCK_BEG:\n@@ -2191,7 +2154,10 @@ final_scan_insn (insn, file, optimize, prescan, nopeepholes)\n \t    /* Output this line note if it is the first or the last line\n \t       note in a row.  */\n \t    if (!note_after)\n-\t      output_source_line (insn);\n+\t      {\n+\t\tnotice_source_line (insn);\n+\t\t(*debug_hooks->source_line) (last_linenum, last_filename);\n+\t      }\n \t  }\n \t  break;\n \t}\n@@ -2906,7 +2872,7 @@ final_scan_insn (insn, file, optimize, prescan, nopeepholes)\n    based on the NOTE-insn INSN, assumed to be a line number.  */\n \n static void\n-output_source_line (insn)\n+notice_source_line (insn)\n      rtx insn;\n {\n   register const char *filename = NOTE_SOURCE_FILE (insn);\n@@ -2923,8 +2889,6 @@ output_source_line (insn)\n   last_linenum = NOTE_LINE_NUMBER (insn);\n   high_block_linenum = MAX (last_linenum, high_block_linenum);\n   high_function_linenum = MAX (last_linenum, high_function_linenum);\n-\n-  (*debug_hooks->source_line) (filename, insn);\n }\n \f\n /* For each operand in INSN, simplify (subreg (reg)) so that it refers"}, {"sha": "d6bccabdce19510dbdfb7488a06f5a5dfc10019e", "filename": "gcc/sdbout.c", "status": "modified", "additions": 39, "deletions": 17, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/653e276c6536663cda57bda038a9df4e64adb96f/gcc%2Fsdbout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/653e276c6536663cda57bda038a9df4e64adb96f/gcc%2Fsdbout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsdbout.c?ref=653e276c6536663cda57bda038a9df4e64adb96f", "patch": "@@ -97,8 +97,13 @@ static void sdbout_start_source_file\tPARAMS ((unsigned, const char *));\n static void sdbout_end_source_file\tPARAMS ((unsigned));\n static void sdbout_begin_block\t\tPARAMS ((unsigned, unsigned));\n static void sdbout_end_block\t\tPARAMS ((unsigned, unsigned));\n-static void sdbout_source_line\t\tPARAMS ((const char *, rtx));\n+static void sdbout_source_line\t\tPARAMS ((unsigned int, const char *));\n static void sdbout_end_epilogue\t\tPARAMS ((void));\n+#ifndef MIPS_DEBUGGING_INFO\n+static void sdbout_begin_prologue\tPARAMS ((unsigned int, const char *));\n+#endif\n+static void sdbout_end_prologue\t\tPARAMS ((unsigned int));\n+static void sdbout_begin_function\tPARAMS ((tree));\n static void sdbout_end_function\t\tPARAMS ((unsigned int));\n static char *gen_fake_label\t\tPARAMS ((void));\n static int plain_type\t\t\tPARAMS ((tree));\n@@ -299,7 +304,17 @@ struct gcc_debug_hooks sdb_debug_hooks =\n   sdbout_begin_block,\n   sdbout_end_block,\n   sdbout_source_line,\n+#ifdef MIPS_DEBUGGING_INFO\n+  /* Defer on MIPS systems so that parameter descriptions follow\n+     function entry.  */\n+  debug_nothing_int_charstar,\t/* begin_prologue */\n+  sdbout_end_prologue,\t\t/* end_prologue */\n+#else\n+  sdbout_begin_prologue,\t/* begin_prologue */\n+  debug_nothing_int,\t\t/* end_prologue */\n+#endif\n   sdbout_end_epilogue,\n+  sdbout_begin_function,\n   sdbout_end_function\n };\n \f\n@@ -775,8 +790,6 @@ sdbout_symbol (decl, local)\n \t}\n       else if (GET_CODE (value) == SUBREG)\n \t{\n-\t  int offset = 0;\n-\n \t  while (GET_CODE (value) == SUBREG)\n \t    value = SUBREG_REG (value);\n \t  if (GET_CODE (value) == REG)\n@@ -1521,12 +1534,10 @@ sdbout_end_block (line, n)\n }\n \n static void\n-sdbout_source_line (filename, note)\n+sdbout_source_line (line, filename)\n+     unsigned int line;\n      const char *filename ATTRIBUTE_UNUSED;\n-     rtx note;\n {\n-  unsigned int line = NOTE_LINE_NUMBER (note);\n-\n   /* COFF relative line numbers must be positive.  */\n   if (line > sdb_begin_function_line)\n     {\n@@ -1543,21 +1554,32 @@ sdbout_source_line (filename, note)\n /* Output sdb info for the current function name.\n    Called from assemble_start_function.  */\n \n-void\n-sdbout_mark_begin_function ()\n+static void\n+sdbout_begin_function (decl)\n+     tree decl ATTRIBUTE_UNUSED;\n {\n   sdbout_symbol (current_function_decl, 0);\n }\n \n-/* Called at beginning of function body (after prologue).\n-   Record the function's starting line number, so we can output\n-   relative line numbers for the other lines.\n-   Describe beginning of outermost block.\n-   Also describe the parameter list.  */\n+/* Called at beginning of function body (before or after prologue,\n+   depending on MIPS_DEBUGGING_INFO).  Record the function's starting\n+   line number, so we can output relative line numbers for the other\n+   lines.  Describe beginning of outermost block.  Also describe the\n+   parameter list.  */\n \n-void\n-sdbout_begin_function (line)\n-     int line;\n+#ifndef MIPS_DEBUGGING_INFO\n+static void\n+sdbout_begin_prologue (line, file)\n+     unsigned int line;\n+     const char *file ATTRIBUTE_UNUSED;\n+{\n+  sdbout_end_prologue (line);\n+}\n+#endif\n+\n+static void\n+sdbout_end_prologue (line)\n+     unsigned int line;\n {\n   sdb_begin_function_line = line - 1;\n   PUT_SDB_FUNCTION_START (line);"}, {"sha": "51317d6cee74e51b13d7fb21c625f570df127a95", "filename": "gcc/sdbout.h", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/653e276c6536663cda57bda038a9df4e64adb96f/gcc%2Fsdbout.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/653e276c6536663cda57bda038a9df4e64adb96f/gcc%2Fsdbout.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsdbout.h?ref=653e276c6536663cda57bda038a9df4e64adb96f", "patch": "@@ -18,12 +18,7 @@ along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n-extern void sdbout_begin_function\tPARAMS ((int));\n-\n extern void sdbout_label\t\tPARAMS ((rtx));\n extern void sdbout_symbol\t\tPARAMS ((tree, int));\n extern void sdbout_toplevel_data\tPARAMS ((tree));\n extern void sdbout_types\t\tPARAMS ((tree));\n-\n-extern void sdbout_mark_begin_function\tPARAMS ((void));\n-"}, {"sha": "b1a95512574d76ab089941a0d2352423af1ec66e", "filename": "gcc/tree.h", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/653e276c6536663cda57bda038a9df4e64adb96f/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/653e276c6536663cda57bda038a9df4e64adb96f/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=653e276c6536663cda57bda038a9df4e64adb96f", "patch": "@@ -2919,11 +2919,6 @@ extern void dwarf2out_return_save\tPARAMS ((const char *, long));\n \n extern void dwarf2out_return_reg\tPARAMS ((const char *, unsigned));\n \n-/* Output a marker (i.e. a label) for the beginning of a function, before\n-   the prologue.  */\n-\n-extern void dwarf2out_begin_prologue\tPARAMS ((void));\n-\n \f\n /* Redefine abort to report an internal error w/o coredump, and\n    reporting the location of the error in the source file.  This logic"}, {"sha": "630dad0465449029030aa514d279cbaaccd55f7c", "filename": "gcc/varasm.c", "status": "modified", "additions": 2, "deletions": 11, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/653e276c6536663cda57bda038a9df4e64adb96f/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/653e276c6536663cda57bda038a9df4e64adb96f/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=653e276c6536663cda57bda038a9df4e64adb96f", "patch": "@@ -47,6 +47,7 @@ Boston, MA 02111-1307, USA.  */\n #include \"c-pragma.h\"\n #include \"ggc.h\"\n #include \"tm_p.h\"\n+#include \"debug.h\"\n \n #ifdef XCOFF_DEBUGGING_INFO\n #include \"xcoffout.h\"\n@@ -947,17 +948,7 @@ assemble_start_function (decl, fnname)\n   ASM_OUTPUT_FUNCTION_PREFIX (asm_out_file, fnname);\n #endif\n \n-#ifdef SDB_DEBUGGING_INFO\n-  /* Output SDB definition of the function.  */\n-  if (write_symbols == SDB_DEBUG)\n-    sdbout_mark_begin_function ();\n-#endif\n-\n-#ifdef DBX_DEBUGGING_INFO\n-  /* Output DBX definition of the function.  */\n-  if (write_symbols == DBX_DEBUG)\n-    dbxout_begin_function (decl);\n-#endif\n+  (*debug_hooks->begin_function) (decl);\n \n   /* Make function name accessible from other files, if appropriate.  */\n "}, {"sha": "6955329dff12cb5bd613e07f4d93c82417214ae4", "filename": "gcc/xcoffout.c", "status": "modified", "additions": 14, "deletions": 12, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/653e276c6536663cda57bda038a9df4e64adb96f/gcc%2Fxcoffout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/653e276c6536663cda57bda038a9df4e64adb96f/gcc%2Fxcoffout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fxcoffout.c?ref=653e276c6536663cda57bda038a9df4e64adb96f", "patch": "@@ -304,17 +304,19 @@ xcoffout_source_file (file, filename, inline_p)\n     }\n }\n \n-/* Output a line number symbol entry into output stream FILE,\n-   for source file FILENAME and line number NOTE.  */\n+/* Output a line number symbol entry for location (FILENAME, LINE).  */\n \n void\n-xcoffout_source_line (filename, note)\n+xcoffout_source_line (line, filename)\n+     unsigned int line;\n      const char *filename;\n-     rtx note;\n {\n-  xcoffout_source_file (asm_out_file, filename, RTX_INTEGRATED_P (note));\n+  bool inline_p = (strcmp (xcoff_current_function_file, filename) != 0\n+\t\t   || (int) line < xcoff_begin_function_line);\n+\n+  xcoffout_source_file (asm_out_file, filename, inline_p);\n \n-  ASM_OUTPUT_SOURCE_LINE (asm_out_file, NOTE_LINE_NUMBER (note));\n+  ASM_OUTPUT_SOURCE_LINE (asm_out_file, line);\n }\n \f\n /* Output the symbols defined in block number DO_BLOCK.\n@@ -431,17 +433,17 @@ xcoffout_declare_function (file, decl, name)\n \t   name, name, name, name);\n }\n \n-/* Called at beginning of function body (after prologue).\n+/* Called at beginning of function body (at start of prologue).\n    Record the function's starting line number, so we can output\n    relative line numbers for the other lines.\n    Record the file name that this function is contained in.  */\n \n void\n-xcoffout_begin_function (file, last_linenum)\n-     FILE *file;\n-     int last_linenum;\n+xcoffout_begin_prologue (line, file)\n+     unsigned int line;\n+     const char *file ATTRIBUTE_UNUSED;\n {\n-  ASM_OUTPUT_LFB (file, last_linenum);\n+  ASM_OUTPUT_LFB (asm_out_file, line);\n   dbxout_parms (DECL_ARGUMENTS (current_function_decl));\n \n   /* Emit the symbols for the outermost BLOCK's variables.  sdbout.c does this\n@@ -452,7 +454,7 @@ xcoffout_begin_function (file, last_linenum)\n   xcoffout_block (DECL_INITIAL (current_function_decl), 0,\n \t\t  DECL_ARGUMENTS (current_function_decl));\n \n-  ASM_OUTPUT_SOURCE_LINE (file, last_linenum);\n+  ASM_OUTPUT_SOURCE_LINE (asm_out_file, line);\n }\n \n /* Called at end of function (before epilogue)."}, {"sha": "27b4ffec7a4580e8bde0c31d7270d7847f485c11", "filename": "gcc/xcoffout.h", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/653e276c6536663cda57bda038a9df4e64adb96f/gcc%2Fxcoffout.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/653e276c6536663cda57bda038a9df4e64adb96f/gcc%2Fxcoffout.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fxcoffout.h?ref=653e276c6536663cda57bda038a9df4e64adb96f", "patch": "@@ -199,7 +199,8 @@ extern const char *xcoff_lastfile;\n \n extern int stab_to_sclass\t\t\tPARAMS ((int));\n #ifdef BUFSIZ\n-extern void xcoffout_begin_function\t\tPARAMS ((FILE *, int));\n+extern void xcoffout_begin_prologue\t\tPARAMS ((unsigned int,\n+\t\t\t\t\t\t\t const char *));\n extern void xcoffout_begin_block\t\tPARAMS ((unsigned, unsigned));\n extern void xcoffout_end_epilogue\t\tPARAMS ((void));\n extern void xcoffout_end_function\t\tPARAMS ((unsigned int));\n@@ -215,6 +216,7 @@ extern void xcoffout_declare_function\t\tPARAMS ((FILE *, tree, const char *));\n \n #ifdef RTX_CODE\n #ifdef BUFSIZ\n-extern void xcoffout_source_line\t\tPARAMS ((const char *, rtx));\n+extern void xcoffout_source_line\t\tPARAMS ((unsigned int,\n+\t\t\t\t\t\t\t const char *));\n #endif /* BUFSIZ */\n #endif /* RTX_CODE */"}]}