{"sha": "bbb9c03005cdab2275ef0c6448310ae9273a2ed5", "node_id": "C_kwDOANBUbNoAKGJiYjljMDMwMDVjZGFiMjI3NWVmMGM2NDQ4MzEwYWU5MjczYTJlZDU", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-07-22T00:16:33Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-07-22T00:16:33Z"}, "message": "Daily bump.", "tree": {"sha": "78577f0857a657871f4aa00e7a5833f3ad21e107", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/78577f0857a657871f4aa00e7a5833f3ad21e107"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bbb9c03005cdab2275ef0c6448310ae9273a2ed5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bbb9c03005cdab2275ef0c6448310ae9273a2ed5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bbb9c03005cdab2275ef0c6448310ae9273a2ed5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bbb9c03005cdab2275ef0c6448310ae9273a2ed5/comments", "author": null, "committer": null, "parents": [{"sha": "b852aa7f265424c8e2036899da5d8306ff06a16c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b852aa7f265424c8e2036899da5d8306ff06a16c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b852aa7f265424c8e2036899da5d8306ff06a16c"}], "stats": {"total": 134, "additions": 133, "deletions": 1}, "files": [{"sha": "65685acd4dfdcb2bb86afd076c63b25365ca2cc3", "filename": "ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbb9c03005cdab2275ef0c6448310ae9273a2ed5/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbb9c03005cdab2275ef0c6448310ae9273a2ed5/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=bbb9c03005cdab2275ef0c6448310ae9273a2ed5", "patch": "@@ -1,3 +1,11 @@\n+2022-07-21  Sam Feifer  <sfeifer@redhat.com>\n+\n+\t* MAINTAINERS (Write After Approval): Add myself.\n+\n+2022-07-21  Marc Poulhi\u00e8s  <poulhies@adacore.com>\n+\n+\t* MAINTAINERS: Add myself as Ada front end co-maintainer.\n+\n 2022-07-19  Alexander Monakov  <amonakov@ispras.ru>\n \n \t* .gitignore: Do not ignore config.h."}, {"sha": "6b4c646e2fd7870495eff71b4bdf7c2ab3b12841", "filename": "gcc/ChangeLog", "status": "modified", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbb9c03005cdab2275ef0c6448310ae9273a2ed5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbb9c03005cdab2275ef0c6448310ae9273a2ed5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bbb9c03005cdab2275ef0c6448310ae9273a2ed5", "patch": "@@ -1,3 +1,52 @@\n+2022-07-21  Sam Feifer  <sfeifer@redhat.com>\n+\n+\tPR tree-optimization/94920\n+\t* match.pd (x >= 0 ? x : 0) + (x <= 0 ? -x : 0): New simplification.\n+\t           (x <= 0 ? -x : 0): New simplification.\n+\n+2022-07-21  Prathamesh Kulkarni  <prathamesh.kulkarni@linaro.org>\n+\n+\tRevert:\n+\t2022-07-19  Prathamesh Kulkarni  <prathamesh.kulkarni@linaro.org>\n+\n+\t* tree-ssa-forwprop.cc (simplify_permutation): Use lhs type\n+\tinstead of TREE_TYPE (arg0) as result type in folding VEC_PERM_EXPR.\n+\n+2022-07-21  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/106379\n+\t* match.pd (~(a ^ b) -> a == b): New pattern.\n+\n+2022-07-21  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/106378\n+\t* tree-ssa-dse.cc (initialize_ao_ref_for_dse): Handle\n+\tLEN_STORE, add mode to initialize a may-def and handle\n+\tMASK_STORE that way.\n+\t(dse_optimize_stmt): Query may-defs.  Handle internal\n+\tfunctions LEN_STORE and MASK_STORE similar to how\n+\twe handle memory builtins but without byte tracking.\n+\n+2022-07-21  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/106365\n+\t* tree-ssa-sccvn.cc (pd_data::rhs_off): New field determining\n+\tthe offset to start encoding of RHS from.\n+\t(vn_walk_cb_data::vn_walk_cb_data): Initialize it.\n+\t(vn_walk_cb_data::push_partial_def): Allow the first partial\n+\tdefinition to be fully providing the def.  Offset RHS\n+\tbefore encoding if requested.\n+\t(vn_reference_lookup_3): Initialize def_rhs everywhere.\n+\tAdd support for .MASK_STORE and .LEN_STORE (partial) definitions.\n+\n+2022-07-21  Richard Biener  <rguenther@suse.de>\n+\n+\t* tree-ssa-alias.cc (ref_maybe_used_by_call_p_1): Special-case\n+\tstore internal functions and IFN_MASK_LOAD, IFN_LEN_LOAD\n+\tand IFN_MASK_LOAD_LANES.\n+\t(call_may_clobber_ref_p_1): Special-case IFN_MASK_STORE,\n+\tIFN_LEN_STORE and IFN_MASK_STORE_LANES.\n+\n 2022-07-20  Alexander Monakov  <amonakov@ispras.ru>\n \n \tPR rtl-optimization/101347"}, {"sha": "7bdcd4fa865cd01c09210c121d7fab962cc27de9", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbb9c03005cdab2275ef0c6448310ae9273a2ed5/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbb9c03005cdab2275ef0c6448310ae9273a2ed5/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=bbb9c03005cdab2275ef0c6448310ae9273a2ed5", "patch": "@@ -1 +1 @@\n-20220721\n+20220722"}, {"sha": "04fcf92f60e11d6f5f11b6aba4ba057e620e69ba", "filename": "gcc/analyzer/ChangeLog", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbb9c03005cdab2275ef0c6448310ae9273a2ed5/gcc%2Fanalyzer%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbb9c03005cdab2275ef0c6448310ae9273a2ed5/gcc%2Fanalyzer%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2FChangeLog?ref=bbb9c03005cdab2275ef0c6448310ae9273a2ed5", "patch": "@@ -1,3 +1,25 @@\n+2022-07-21  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR analyzer/106383\n+\t* varargs.cc (region_model::impl_call_va_arg): When determining if\n+\twe're doing interprocedural analysis, use the stack depth of the\n+\tframe in which va_start was called, rather than the current stack\n+\tdepth.\n+\n+2022-07-21  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* sm-taint.cc (tainted_array_index::emit): Bulletproof against\n+\tNULL m_arg.\n+\t(tainted_array_index::describe_final_event): Likewise.\n+\t(tainted_size::emit): Likewise.\n+\t(tainted_size::describe_final_event): Likewise.\n+\n+2022-07-21  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR analyzer/106374\n+\t* region.cc (decl_region::get_svalue_for_initializer): Bail out on\n+\tuntracked regions.\n+\n 2022-07-20  David Malcolm  <dmalcolm@redhat.com>\n \n \tPR analyzer/106373"}, {"sha": "20e777f2036d79a3984a92086b4b6f6d4aac3d22", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbb9c03005cdab2275ef0c6448310ae9273a2ed5/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbb9c03005cdab2275ef0c6448310ae9273a2ed5/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=bbb9c03005cdab2275ef0c6448310ae9273a2ed5", "patch": "@@ -1,3 +1,14 @@\n+2022-07-21  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/106361\n+\t* decl.cc (move_fn_p): Remove assert.\n+\n+2022-07-21  Jason Merrill  <jason@redhat.com>\n+\n+\tDR 2084\n+\tPR c++/94823\n+\t* method.cc (walk_field_subobs): Fix DMI in union case.\n+\n 2022-07-19  Patrick Palka  <ppalka@redhat.com>\n \n \tPR c++/94894"}, {"sha": "2404d8588dc996f45a908813d380df51e050fda6", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbb9c03005cdab2275ef0c6448310ae9273a2ed5/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbb9c03005cdab2275ef0c6448310ae9273a2ed5/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=bbb9c03005cdab2275ef0c6448310ae9273a2ed5", "patch": "@@ -1,3 +1,7 @@\n+2022-07-21  Martin Liska  <mliska@suse.cz>\n+\n+\t* intrinsic.texi: Remove trailing dots for 2 Fortran fns.\n+\n 2022-07-20  Harald Anlauf  <anlauf@gmx.de>\n \n \tPR fortran/101330"}, {"sha": "80b7d71621de4706655f51de1d6af7b51bd5aede", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbb9c03005cdab2275ef0c6448310ae9273a2ed5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbb9c03005cdab2275ef0c6448310ae9273a2ed5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=bbb9c03005cdab2275ef0c6448310ae9273a2ed5", "patch": "@@ -1,3 +1,41 @@\n+2022-07-21  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR analyzer/106383\n+\t* gcc.dg/analyzer/stdarg-3.c: New test.\n+\n+2022-07-21  Sam Feifer  <sfeifer@redhat.com>\n+\n+\tPR tree-optimization/94920\n+\t* g++.dg/pr94920-1.C: New test.\n+\t* g++.dg/pr94920.C: New test.\n+\t* gcc.dg/pr94920-2.c: New test.\n+\n+2022-07-21  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/106361\n+\t* g++.dg/cpp2a/spaceship-eq14.C: New test.\n+\n+2022-07-21  Jason Merrill  <jason@redhat.com>\n+\n+\tDR 2084\n+\tPR c++/94823\n+\t* g++.dg/cpp0x/nsdmi-union7.C: New test.\n+\n+2022-07-21  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/106379\n+\t* gcc.dg/pr106379-1.c: New testcase.\n+\n+2022-07-21  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/106365\n+\t* gcc.target/i386/vec-maskstore-vn.c: New testcase.\n+\n+2022-07-21  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR analyzer/106374\n+\t* gcc.dg/analyzer/untracked-2.c: New test.\n+\n 2022-07-20  David Malcolm  <dmalcolm@redhat.com>\n \n \tPR analyzer/106373"}]}