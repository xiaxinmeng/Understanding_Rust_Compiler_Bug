{"sha": "612de72b0d2904b5a5a2b487ce4cb907c768a947", "node_id": "C_kwDOANBUbNoAKDYxMmRlNzJiMGQyOTA0YjVhNWEyYjQ4N2NlNGNiOTA3Yzc2OGE5NDc", "commit": {"author": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2022-10-14T22:10:29Z"}, "committer": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2022-10-17T12:17:18Z"}, "message": "GCN: Restore build with GCC 4.8\n\nFor example, for \"g++-4.8 (Ubuntu 4.8.4-2ubuntu1~14.04.4) 4.8.4\", the recent\ncommit r13-3220-g45381d6f9f4e7b5c7b062f5ad8cc9788091c2d07\n\"amdgcn: add multiple vector sizes\" broke the build:\n\n    In file included from [...]/source-gcc/gcc/coretypes.h:458:0,\n                     from [...]/source-gcc/gcc/config/gcn/gcn.cc:24:\n    [...]/source-gcc/gcc/config/gcn/gcn.cc: In function \u2018machine_mode VnMODE(int, machine_mode)\u2019:\n    ./insn-modes.h:42:71: error: temporary of non-literal type \u2018scalar_int_mode\u2019 in a constant expression\n     #define QImode (scalar_int_mode ((scalar_int_mode::from_int) E_QImode))\n                                                                           ^\n    [...]/source-gcc/gcc/config/gcn/gcn.cc:405:10: note: in expansion of macro \u2018QImode\u2019\n         case QImode:\n              ^\n    In file included from [...]/source-gcc/gcc/coretypes.h:478:0,\n                     from [...]/source-gcc/gcc/config/gcn/gcn.cc:24:\n    [...]/source-gcc/gcc/machmode.h:410:7: note: \u2018scalar_int_mode\u2019 is not literal because:\n     class scalar_int_mode\n           ^\n    [...]/source-gcc/gcc/machmode.h:410:7: note:   \u2018scalar_int_mode\u2019 is not an aggregate, does not have a trivial default constructor, and has no constexpr constructor that is not a copy or move constructor\n    [...]\n\nAddressing this like simiar issues have been addressed in the past.\n\n\tgcc/\n\t* config/gcn/gcn.cc (VnMODE): Use 'case E_QImode:' instead of\n\t'case QImode:', etc.", "tree": {"sha": "89502e592f021f3f891d003f6eded89cef26c95d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/89502e592f021f3f891d003f6eded89cef26c95d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/612de72b0d2904b5a5a2b487ce4cb907c768a947", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/612de72b0d2904b5a5a2b487ce4cb907c768a947", "html_url": "https://github.com/Rust-GCC/gccrs/commit/612de72b0d2904b5a5a2b487ce4cb907c768a947", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/612de72b0d2904b5a5a2b487ce4cb907c768a947/comments", "author": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aeb1e2bff95ae17717026905ef404699d91f5c61", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aeb1e2bff95ae17717026905ef404699d91f5c61", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aeb1e2bff95ae17717026905ef404699d91f5c61"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "8777255a5c6255df53ee3664b55cdc3ee9f714f2", "filename": "gcc/config/gcn/gcn.cc", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/612de72b0d2904b5a5a2b487ce4cb907c768a947/gcc%2Fconfig%2Fgcn%2Fgcn.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/612de72b0d2904b5a5a2b487ce4cb907c768a947/gcc%2Fconfig%2Fgcn%2Fgcn.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fgcn%2Fgcn.cc?ref=612de72b0d2904b5a5a2b487ce4cb907c768a947", "patch": "@@ -402,7 +402,7 @@ VnMODE (int n, machine_mode mode)\n {\n   switch (mode)\n     {\n-    case QImode:\n+    case E_QImode:\n       switch (n)\n \t{\n \tcase 2: return V2QImode;\n@@ -413,7 +413,7 @@ VnMODE (int n, machine_mode mode)\n \tcase 64: return V64QImode;\n \t}\n       break;\n-    case HImode:\n+    case E_HImode:\n       switch (n)\n \t{\n \tcase 2: return V2HImode;\n@@ -424,7 +424,7 @@ VnMODE (int n, machine_mode mode)\n \tcase 64: return V64HImode;\n \t}\n       break;\n-    case HFmode:\n+    case E_HFmode:\n       switch (n)\n \t{\n \tcase 2: return V2HFmode;\n@@ -435,7 +435,7 @@ VnMODE (int n, machine_mode mode)\n \tcase 64: return V64HFmode;\n \t}\n       break;\n-    case SImode:\n+    case E_SImode:\n       switch (n)\n \t{\n \tcase 2: return V2SImode;\n@@ -446,7 +446,7 @@ VnMODE (int n, machine_mode mode)\n \tcase 64: return V64SImode;\n \t}\n       break;\n-    case SFmode:\n+    case E_SFmode:\n       switch (n)\n \t{\n \tcase 2: return V2SFmode;\n@@ -457,7 +457,7 @@ VnMODE (int n, machine_mode mode)\n \tcase 64: return V64SFmode;\n \t}\n       break;\n-    case DImode:\n+    case E_DImode:\n       switch (n)\n \t{\n \tcase 2: return V2DImode;\n@@ -468,7 +468,7 @@ VnMODE (int n, machine_mode mode)\n \tcase 64: return V64DImode;\n \t}\n       break;\n-    case DFmode:\n+    case E_DFmode:\n       switch (n)\n \t{\n \tcase 2: return V2DFmode;"}]}