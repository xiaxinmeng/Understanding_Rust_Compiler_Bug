{"sha": "3c732e6fe849afb4006782c0e34913db05b2c1d2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2M3MzJlNmZlODQ5YWZiNDAwNjc4MmMwZTM0OTEzZGIwNWIyYzFkMg==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2019-01-03T20:38:11Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2019-01-03T20:38:11Z"}, "message": "PR libstdc++/88607 replace or remove unnecessary UTF-8 characters\n\nThere are a number of UTF-8 characters in comments which add no value\nand can be replaced with ASCII equivalents, or removed entirely for the\nsection sign (U+00A7).\n\n\tPR libstdc++/88607\n\t* include/bits/forward_list.h: Replace UTF-8 \"ligature fi\" character.\n\t* include/debug/forward_list: Likewise.\n\t* include/experimental/bits/shared_ptr.h: Remove UTF-8 \"section sign\"\n\tcharacter.\n\t* include/experimental/chrono: Likewise.\n\t* include/experimental/functional: Likewise.\n\t* include/experimental/ratio: Likewise.\n\t* include/experimental/system_error: Likewise.\n\t* include/experimental/tuple: Likewise.\n\t* include/experimental/type_traits: Likewise.\n\t* include/parallel/workstealing.h: Replace UTF-8 \"en dash\" character.\n\t* include/parallel/multiseq_selection.h: Likewise.\n\nFrom-SVN: r267564", "tree": {"sha": "499985595a9efd807bd5b8aef49c4fea87cbbd38", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/499985595a9efd807bd5b8aef49c4fea87cbbd38"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3c732e6fe849afb4006782c0e34913db05b2c1d2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c732e6fe849afb4006782c0e34913db05b2c1d2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c732e6fe849afb4006782c0e34913db05b2c1d2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c732e6fe849afb4006782c0e34913db05b2c1d2/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dd87c5c2283406aa06d262d383fbfb88d152fe22", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd87c5c2283406aa06d262d383fbfb88d152fe22", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dd87c5c2283406aa06d262d383fbfb88d152fe22"}], "stats": {"total": 64, "additions": 39, "deletions": 25}, "files": [{"sha": "38f9014830a8743b21b658bdd3ebe9f49208ac6b", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c732e6fe849afb4006782c0e34913db05b2c1d2/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c732e6fe849afb4006782c0e34913db05b2c1d2/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=3c732e6fe849afb4006782c0e34913db05b2c1d2", "patch": "@@ -1,5 +1,19 @@\n 2019-01-03  Jonathan Wakely  <jwakely@redhat.com>\n \n+\tPR libstdc++/88607\n+\t* include/bits/forward_list.h: Replace UTF-8 \"ligature fi\" character.\n+\t* include/debug/forward_list: Likewise.\n+\t* include/experimental/bits/shared_ptr.h: Remove UTF-8 \"section sign\"\n+\tcharacter.\n+\t* include/experimental/chrono: Likewise.\n+\t* include/experimental/functional: Likewise.\n+\t* include/experimental/ratio: Likewise.\n+\t* include/experimental/system_error: Likewise.\n+\t* include/experimental/tuple: Likewise.\n+\t* include/experimental/type_traits: Likewise.\n+\t* include/parallel/workstealing.h: Replace UTF-8 \"en dash\" character.\n+\t* include/parallel/multiseq_selection.h: Likewise.\n+\n \tPR libstdc++/88681\n \t* config/abi/pre/gnu.ver: Add missing exports.\n \t* testsuite/22_locale/collate_byname/88681.cc: New test."}, {"sha": "4741c43376c5773b34f1f1cb581ea0e19383b851", "filename": "libstdc++-v3/include/bits/forward_list.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c732e6fe849afb4006782c0e34913db05b2c1d2/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fforward_list.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c732e6fe849afb4006782c0e34913db05b2c1d2/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fforward_list.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fforward_list.h?ref=3c732e6fe849afb4006782c0e34913db05b2c1d2", "patch": "@@ -809,7 +809,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CONTAINER\n \treturn *__front->_M_valptr();\n       }\n \n-      // 23.3.4.5 modi\ufb01ers:\n+      // 23.3.4.5 modifiers:\n \n       /**\n        *  @brief  Constructs object in %forward_list at the front of the"}, {"sha": "e30b000009ea2912568a94f540593edc86b6b479", "filename": "libstdc++-v3/include/debug/forward_list", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c732e6fe849afb4006782c0e34913db05b2c1d2/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fforward_list", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c732e6fe849afb4006782c0e34913db05b2c1d2/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fforward_list", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fforward_list?ref=3c732e6fe849afb4006782c0e34913db05b2c1d2", "patch": "@@ -369,7 +369,7 @@ namespace __debug\n \treturn _Base::front();\n       }\n \n-      // modi\ufb01ers:\n+      // modifiers:\n \n       using _Base::emplace_front;\n       using _Base::push_front;"}, {"sha": "65df4dd7e3b8548fba982d6aa2c3166c10c2c143", "filename": "libstdc++-v3/include/experimental/bits/shared_ptr.h", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c732e6fe849afb4006782c0e34913db05b2c1d2/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fbits%2Fshared_ptr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c732e6fe849afb4006782c0e34913db05b2c1d2/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fbits%2Fshared_ptr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fbits%2Fshared_ptr.h?ref=3c732e6fe849afb4006782c0e34913db05b2c1d2", "patch": "@@ -157,10 +157,10 @@ inline namespace fundamentals_v2\n       constexpr shared_ptr(nullptr_t __p)\n       : _Base_type(__p) { }\n \n-      // C++14 \u00a720.8.2.2\n+      // C++14 20.8.2.2\n       ~shared_ptr() = default;\n \n-      // C++14 \u00a720.8.2.3\n+      // C++14 20.8.2.3\n       shared_ptr& operator=(const shared_ptr&) noexcept = default;\n \n       template <typename _Tp1>\n@@ -204,7 +204,7 @@ inline namespace fundamentals_v2\n \t  return *this;\n \t}\n \n-      // C++14 \u00a720.8.2.2.4\n+      // C++14 20.8.2.2.4\n       // swap & reset\n       // 8.2.1.2 shared_ptr observers\n       // in __shared_ptr\n@@ -255,7 +255,7 @@ inline namespace fundamentals_v2\n \t{ }\n     };\n \n-  // C++14 \u00a720.8.2.2.7 //DOING\n+  // C++14 20.8.2.2.7\n   template<typename _Tp1, typename _Tp2>\n     bool operator==(const shared_ptr<_Tp1>& __a,\n \t\t    const shared_ptr<_Tp2>& __b) noexcept\n@@ -368,7 +368,7 @@ inline namespace fundamentals_v2\n     operator>=(nullptr_t, const shared_ptr<_Tp>& __a) noexcept\n     { return !(nullptr < __a); }\n \n-  // C++14 \u00a720.8.2.2.8\n+  // C++14 20.8.2.2.8\n   template<typename _Tp>\n     inline void\n     swap(shared_ptr<_Tp>& __a, shared_ptr<_Tp>& __b) noexcept\n@@ -409,7 +409,7 @@ inline namespace fundamentals_v2\n       return shared_ptr<_Tp>(__r, reinterpret_cast<__elem_t*>(__r.get()));\n     }\n \n-  // C++14 \u00a720.8.2.3\n+  // C++14 20.8.2.3\n   template<typename _Tp>\n     class weak_ptr : public __weak_ptr<_Tp>\n     {\n@@ -474,19 +474,19 @@ inline namespace fundamentals_v2\n        friend class enable_shared_from_this<_Tp>;\n     };\n \n-  // C++14 \u00a720.8.2.3.6\n+  // C++14 20.8.2.3.6\n   template<typename _Tp>\n     inline void\n     swap(weak_ptr<_Tp>& __a, weak_ptr<_Tp>& __b) noexcept\n     { __a.swap(__b); }\n \n-  /// C++14 \u00a720.8.2.2.10\n+  /// C++14 20.8.2.2.10\n   template<typename _Del, typename _Tp>\n     inline _Del*\n     get_deleter(const shared_ptr<_Tp>& __p) noexcept\n     { return std::get_deleter<_Del>(__p); }\n \n-  // C++14 \u00a720.8.2.2.11\n+  // C++14 20.8.2.2.11\n   template<typename _Ch, typename _Tr, typename _Tp>\n     inline std::basic_ostream<_Ch, _Tr>&\n     operator<<(std::basic_ostream<_Ch, _Tr>& __os, const shared_ptr<_Tp>& __p)\n@@ -495,7 +495,7 @@ inline namespace fundamentals_v2\n       return __os;\n     }\n \n-  // C++14 \u00a720.8.2.4\n+  // C++14 20.8.2.4\n   template<typename _Tp = void> class owner_less;\n \n    /// Partial specialization of owner_less for shared_ptr.\n@@ -540,7 +540,7 @@ inline namespace fundamentals_v2\n       typedef void is_transparent;\n     };\n \n-   // C++14 \u00a720.8.2.6\n+   // C++14 20.8.2.6\n    template<typename _Tp>\n      inline bool\n      atomic_is_lock_free(const shared_ptr<_Tp>* __p)"}, {"sha": "90fb39f7582cfb0e8238c7f9ee1fe6ee12a27bc2", "filename": "libstdc++-v3/include/experimental/chrono", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c732e6fe849afb4006782c0e34913db05b2c1d2/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fchrono", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c732e6fe849afb4006782c0e34913db05b2c1d2/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fchrono", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fchrono?ref=3c732e6fe849afb4006782c0e34913db05b2c1d2", "patch": "@@ -49,7 +49,7 @@ namespace experimental\n {\n inline namespace fundamentals_v1\n {\n-// See C++14 \u00a720.12.4, customization traits\n+// See C++14 20.12.4, customization traits\n template <typename _Rep>\n    constexpr bool treat_as_floating_point_v =\n      treat_as_floating_point<_Rep>::value;"}, {"sha": "90f2652c29b04f0436e2b8af2d5f074b87170c09", "filename": "libstdc++-v3/include/experimental/functional", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c732e6fe849afb4006782c0e34913db05b2c1d2/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Ffunctional", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c732e6fe849afb4006782c0e34913db05b2c1d2/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Ffunctional", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Ffunctional?ref=3c732e6fe849afb4006782c0e34913db05b2c1d2", "patch": "@@ -53,7 +53,7 @@ namespace experimental\n {\n inline namespace fundamentals_v1\n {\n-  // See C++14 \u00a720.9.9, Function object binders\n+  // See C++14 20.9.9, Function object binders\n \n   /// Variable template for std::is_bind_expression\n   template<typename _Tp>"}, {"sha": "6129d1ea36a9c4f055a7b60ed851983799e1bb64", "filename": "libstdc++-v3/include/experimental/ratio", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c732e6fe849afb4006782c0e34913db05b2c1d2/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fratio", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c732e6fe849afb4006782c0e34913db05b2c1d2/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fratio", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fratio?ref=3c732e6fe849afb4006782c0e34913db05b2c1d2", "patch": "@@ -48,7 +48,7 @@ namespace experimental\n {\n inline namespace fundamentals_v1\n {\n-// See C++14 \u00a720.11.5, ratio comparison\n+// See C++14 20.11.5, ratio comparison\n template <typename _R1, typename _R2>\n   constexpr bool ratio_equal_v = ratio_equal<_R1, _R2>::value;\n template <typename _R1, typename _R2>"}, {"sha": "73640a40161f67e77f8636cc1fb27ab9a9d4497d", "filename": "libstdc++-v3/include/experimental/system_error", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c732e6fe849afb4006782c0e34913db05b2c1d2/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fsystem_error", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c732e6fe849afb4006782c0e34913db05b2c1d2/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fsystem_error", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fsystem_error?ref=3c732e6fe849afb4006782c0e34913db05b2c1d2", "patch": "@@ -48,7 +48,7 @@ namespace experimental\n {\n inline namespace fundamentals_v1\n {\n-// See C++14 \u00a719.5, System error support\n+// See C++14 19.5, System error support\n template <typename _Tp>\n   constexpr bool is_error_code_enum_v = is_error_code_enum<_Tp>::value;\n template <typename _Tp>"}, {"sha": "be42b588131c65f8e07bb04d0d6050937a2d10a2", "filename": "libstdc++-v3/include/experimental/tuple", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c732e6fe849afb4006782c0e34913db05b2c1d2/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Ftuple", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c732e6fe849afb4006782c0e34913db05b2c1d2/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Ftuple", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Ftuple?ref=3c732e6fe849afb4006782c0e34913db05b2c1d2", "patch": "@@ -45,7 +45,7 @@ namespace experimental\n {\n inline namespace fundamentals_v1\n {\n-  // See C++14 \u00a720.4.2.5, tuple helper classes\n+  // See C++14 20.4.2.5, tuple helper classes\n   template <typename _Tp>\n     constexpr size_t tuple_size_v = tuple_size<_Tp>::value;\n "}, {"sha": "ab1ba92c3c6ff2f2201a710aebd693001ddf054e", "filename": "libstdc++-v3/include/experimental/type_traits", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c732e6fe849afb4006782c0e34913db05b2c1d2/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Ftype_traits", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c732e6fe849afb4006782c0e34913db05b2c1d2/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Ftype_traits", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Ftype_traits?ref=3c732e6fe849afb4006782c0e34913db05b2c1d2", "patch": "@@ -50,7 +50,7 @@ inline namespace fundamentals_v1\n {\n #define __cpp_lib_experimental_type_trait_variable_templates 201402\n \n-// See C++14 \u00a720.10.4.1, primary type categories\n+// See C++14 20.10.4.1, primary type categories\n template <typename _Tp>\n   constexpr bool is_void_v = is_void<_Tp>::value;\n template <typename _Tp>\n@@ -82,7 +82,7 @@ template <typename _Tp>\n template <typename _Tp>\n   constexpr bool is_function_v = is_function<_Tp>::value;\n \n-// See C++14 \u00a720.10.4.2, composite type categories\n+// See C++14 20.10.4.2, composite type categories\n template <typename _Tp>\n   constexpr bool is_reference_v = is_reference<_Tp>::value;\n template <typename _Tp>\n@@ -98,7 +98,7 @@ template <typename _Tp>\n template <typename _Tp>\n  constexpr bool is_member_pointer_v = is_member_pointer<_Tp>::value;\n \n-// See C++14 \u00a720.10.4.3, type properties\n+// See C++14 20.10.4.3, type properties\n template <typename _Tp>\n   constexpr bool is_const_v = is_const<_Tp>::value;\n template <typename _Tp>\n@@ -194,15 +194,15 @@ template <typename _Tp>\n   constexpr bool has_virtual_destructor_v =\n     has_virtual_destructor<_Tp>::value;\n \n-// See C++14 \u00a720.10.5, type property queries\n+// See C++14 20.10.5, type property queries\n template <typename _Tp>\n   constexpr size_t alignment_of_v = alignment_of<_Tp>::value;\n template <typename _Tp>\n   constexpr size_t rank_v = rank<_Tp>::value;\n template <typename _Tp, unsigned _Idx = 0>\n   constexpr size_t extent_v = extent<_Tp, _Idx>::value;\n \n-// See C++14 \u00a720.10.6, type relations\n+// See C++14 20.10.6, type relations\n template <typename _Tp, typename _Up>\n   constexpr bool is_same_v = is_same<_Tp, _Up>::value;\n template <typename _Base, typename _Derived>"}, {"sha": "1f1678b1fe18b178df5d6f48b262b41a1d3df17c", "filename": "libstdc++-v3/include/parallel/multiseq_selection.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c732e6fe849afb4006782c0e34913db05b2c1d2/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fmultiseq_selection.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c732e6fe849afb4006782c0e34913db05b2c1d2/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fmultiseq_selection.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fmultiseq_selection.h?ref=3c732e6fe849afb4006782c0e34913db05b2c1d2", "patch": "@@ -31,7 +31,7 @@\n  *\n  *  P. J. Varman, S. D. Scheufler, B. R. Iyer, and G. R. Ricard.\n  *  Merging Multiple Lists on Hierarchical-Memory Multiprocessors.\n- *  Journal of Parallel and Distributed Computing, 12(2):171\u2013177, 1991.\n+ *  Journal of Parallel and Distributed Computing, 12(2):171-177, 1991.\n  *\n  *  This file is a GNU parallel extension to the Standard C++ Library.\n  */"}, {"sha": "de7283b456db23621cb18f57690ba89b4689d859", "filename": "libstdc++-v3/include/parallel/workstealing.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c732e6fe849afb4006782c0e34913db05b2c1d2/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fworkstealing.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c732e6fe849afb4006782c0e34913db05b2c1d2/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fworkstealing.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fworkstealing.h?ref=3c732e6fe849afb4006782c0e34913db05b2c1d2", "patch": "@@ -30,7 +30,7 @@\n  *\n  *  R. D. Blumofe and C. E. Leiserson.\n  *  Scheduling multithreaded computations by work stealing.\n- *  Journal of the ACM, 46(5):720\u2013748, 1999.\n+ *  Journal of the ACM, 46(5):720-748, 1999.\n  *\n  *  This file is a GNU parallel extension to the Standard C++ Library.\n  */"}]}