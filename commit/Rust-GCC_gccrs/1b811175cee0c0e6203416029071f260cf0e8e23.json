{"sha": "1b811175cee0c0e6203416029071f260cf0e8e23", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWI4MTExNzVjZWUwYzBlNjIwMzQxNjAyOTA3MWYyNjBjZjBlOGUyMw==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2008-06-18T21:14:28Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2008-06-18T21:14:28Z"}, "message": "* lib/target-supports.exp\n\t(check_effective_target_powerpc_hard_double): New.\n\t* gcc.dg/tree-ssa/loop-19.c: Use powerpc_hard_double instead of\n\tpowerpc*-*-*.\n\nFrom-SVN: r136914", "tree": {"sha": "3958b93e70981ddc3ce2c6177fd757e1bff8cccd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3958b93e70981ddc3ce2c6177fd757e1bff8cccd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1b811175cee0c0e6203416029071f260cf0e8e23", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b811175cee0c0e6203416029071f260cf0e8e23", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1b811175cee0c0e6203416029071f260cf0e8e23", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b811175cee0c0e6203416029071f260cf0e8e23/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7b0518e33c7818cbaa640257226e13513e86671e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b0518e33c7818cbaa640257226e13513e86671e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7b0518e33c7818cbaa640257226e13513e86671e"}], "stats": {"total": 27, "additions": 26, "deletions": 1}, "files": [{"sha": "4e3fc31b4cd5e56c180f9086e39ce49dd7ebc4a4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b811175cee0c0e6203416029071f260cf0e8e23/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b811175cee0c0e6203416029071f260cf0e8e23/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1b811175cee0c0e6203416029071f260cf0e8e23", "patch": "@@ -1,3 +1,10 @@\n+2008-06-18  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* lib/target-supports.exp\n+\t(check_effective_target_powerpc_hard_double): New.\n+\t* gcc.dg/tree-ssa/loop-19.c: Use powerpc_hard_double instead of\n+\tpowerpc*-*-*.\n+\n 2008-06-16  Jan Hubicka  <jh@suse.cz>\n \n \t* gcc.dg/weak/weak-2.c: We no longer complain about incompatibilty."}, {"sha": "cae91bac4babb5083a3b51974a35e53aecd12691", "filename": "gcc/testsuite/gcc.dg/tree-ssa/loop-19.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b811175cee0c0e6203416029071f260cf0e8e23/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floop-19.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b811175cee0c0e6203416029071f260cf0e8e23/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floop-19.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floop-19.c?ref=1b811175cee0c0e6203416029071f260cf0e8e23", "patch": "@@ -4,7 +4,7 @@\n  \n    The testcase comes from PR 29256 (and originally, the stream benchmark).  */\n \n-/* { dg-do compile { target i?86-*-* x86_64-*-* powerpc*-*-*} } */\n+/* { dg-do compile { target { i?86-*-* || { x86_64-*-* || powerpc_hard_double } } } } */\n /* { dg-require-effective-target nonpic } */\n /* { dg-options \"-O3 -fdump-tree-final_cleanup\" } */\n "}, {"sha": "5986c7bad4b1ee0b3cf1a820a02e4343e2a38608", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b811175cee0c0e6203416029071f260cf0e8e23/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b811175cee0c0e6203416029071f260cf0e8e23/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=1b811175cee0c0e6203416029071f260cf0e8e23", "patch": "@@ -1277,6 +1277,24 @@ proc check_effective_target_powerpc_fprs { } {\n     }\n }\n \n+# Return 1 if this is a PowerPC target with hardware double-precision\n+# floating point.\n+\n+proc check_effective_target_powerpc_hard_double { } {\n+    if { [istarget powerpc*-*-*]\n+\t || [istarget rs6000-*-*] } {\n+\treturn [check_no_compiler_messages powerpc_hard_double object {\n+\t    #ifdef _SOFT_DOUBLE\n+\t    #error soft double\n+\t    #else\n+\t    int dummy;\n+\t    #endif\n+\t}]\n+    } else {\n+\treturn 0\n+    }\n+}\n+\n # Return 1 if this is a PowerPC target supporting -maltivec.\n \n proc check_effective_target_powerpc_altivec_ok { } {"}]}