{"sha": "218e1e912d74b89f0a6bd7c694bdc89c4515610b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjE4ZTFlOTEyZDc0Yjg5ZjBhNmJkN2M2OTRiZGM4OWM0NTE1NjEwYg==", "commit": {"author": {"name": "Bryce McKinlay", "email": "bryce@waitaki.otago.ac.nz", "date": "2001-09-30T07:52:16Z"}, "committer": {"name": "Bryce McKinlay", "email": "bryce@gcc.gnu.org", "date": "2001-09-30T07:52:16Z"}, "message": "re PR libgcj/4383 (file: protocol not supported in URLConnection?)\n\n\tPR libgcj/4383\n\n\t* gnu/gcj/protocol/file/Connection.java (connect): Throw\n\tFileNotFoundException if appropriate.\n\t* gnu/gcj/protocol/file/Handler.java (openConnection): Throw an\n\tIOException if we got a file: url with a hostname. Comment out protocol\n\tswitch to ftp for now.\n\t* java/net/URL.java (URL): Include protocol name in exception\n\tmessage\n\twhen handler can't be found.\n\nFrom-SVN: r45898", "tree": {"sha": "cee5ad8e6a313b1e905f67f99992217b06f84001", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cee5ad8e6a313b1e905f67f99992217b06f84001"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/218e1e912d74b89f0a6bd7c694bdc89c4515610b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/218e1e912d74b89f0a6bd7c694bdc89c4515610b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/218e1e912d74b89f0a6bd7c694bdc89c4515610b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/218e1e912d74b89f0a6bd7c694bdc89c4515610b/comments", "author": null, "committer": null, "parents": [{"sha": "fa8290383271f5131ea04a917cb130e116150538", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa8290383271f5131ea04a917cb130e116150538", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fa8290383271f5131ea04a917cb130e116150538"}], "stats": {"total": 21, "additions": 18, "deletions": 3}, "files": [{"sha": "11791d2059cb33df0fcceb7bca8fd7d200dda44d", "filename": "libjava/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/218e1e912d74b89f0a6bd7c694bdc89c4515610b/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/218e1e912d74b89f0a6bd7c694bdc89c4515610b/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=218e1e912d74b89f0a6bd7c694bdc89c4515610b", "patch": "@@ -2,6 +2,14 @@\n \n \t* java/lang/natClass.cc (_Jv_IsAssignableFrom): Handle the case of\n \tan uninitialized target class.\n+\t\n+\t* gnu/gcj/protocol/file/Connection.java (connect): Throw \n+\tFileNotFoundException if appropriate.\n+\t* gnu/gcj/protocol/file/Handler.java (openConnection): Throw an \n+\tIOException if we got a file: url with a hostname. Comment out protocol\n+\tswitch to ftp for now.\n+\t* java/net/URL.java (URL): Include protocol name in exception message\n+\twhen handler can't be found.\n \n 2001-09-28  Per Bothner  <per@bothner.com>\n "}, {"sha": "e9ef08f2c30655fe8946d2e4775de92670d156dc", "filename": "libjava/gnu/gcj/protocol/file/Connection.java", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/218e1e912d74b89f0a6bd7c694bdc89c4515610b/libjava%2Fgnu%2Fgcj%2Fprotocol%2Ffile%2FConnection.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/218e1e912d74b89f0a6bd7c694bdc89c4515610b/libjava%2Fgnu%2Fgcj%2Fprotocol%2Ffile%2FConnection.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fgcj%2Fprotocol%2Ffile%2FConnection.java?ref=218e1e912d74b89f0a6bd7c694bdc89c4515610b", "patch": "@@ -48,7 +48,11 @@ public void connect() throws IOException\n \n     // If not connected, then file needs to be openned.\n     fileIn = new File(url.getFile());\n-    connected = true;\n+    \n+    if (fileIn.exists())\n+      connected = true;\n+    else\n+      throw new FileNotFoundException(\"No such file or directory\");\n   }\n \n   public InputStream getInputStream() throws IOException"}, {"sha": "f48ef8e9f318a7ec81d7216a2509a68181423e84", "filename": "libjava/gnu/gcj/protocol/file/Handler.java", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/218e1e912d74b89f0a6bd7c694bdc89c4515610b/libjava%2Fgnu%2Fgcj%2Fprotocol%2Ffile%2FHandler.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/218e1e912d74b89f0a6bd7c694bdc89c4515610b/libjava%2Fgnu%2Fgcj%2Fprotocol%2Ffile%2FHandler.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fgcj%2Fprotocol%2Ffile%2FHandler.java?ref=218e1e912d74b89f0a6bd7c694bdc89c4515610b", "patch": "@@ -35,6 +35,8 @@ protected URLConnection openConnection(URL url) throws IOException\n     String host = url.getHost();\n     if ((host != null) && (! host.equals(\"\")))\n       {\n+        throw new IOException(\"ftp protocol handler not yet implemented.\");\n+        /*\n \t// Reset the protocol (and implicitly the handler) for this URL.\n \t// Then have the URL attempt the connection again, as it will\n \t// get the changed handler the next time around.\n@@ -43,6 +45,7 @@ protected URLConnection openConnection(URL url) throws IOException\n \t// Until the ftp protocol handler is written, this will cause\n \t// a NullPointerException.\n \treturn url.openConnection();\n+\t*/\n       }\n \n     return new Connection(url);"}, {"sha": "636e6efc3d8fec8d5b2b3287064eabb710428a6b", "filename": "libjava/java/net/URL.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/218e1e912d74b89f0a6bd7c694bdc89c4515610b/libjava%2Fjava%2Fnet%2FURL.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/218e1e912d74b89f0a6bd7c694bdc89c4515610b/libjava%2Fjava%2Fnet%2FURL.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnet%2FURL.java?ref=218e1e912d74b89f0a6bd7c694bdc89c4515610b", "patch": "@@ -76,7 +76,7 @@ public URL(String protocol, String host, int port, String file,\n       this.handler = setURLStreamHandler(protocol);\n \n     if (this.handler == null)\n-      throw new MalformedURLException(\"Handler for protocol not found\");\n+      throw new MalformedURLException(\"Protocol handler not found: \" + protocol);\n \n     this.host = host;\n \n@@ -175,7 +175,7 @@ else if (context != null)\n       this.handler = setURLStreamHandler(protocol);\n \n     if (this.handler == null)\n-      throw new MalformedURLException(\"Handler for protocol not found\");\n+      throw new MalformedURLException(\"Protocol handler not found: \" + protocol);\n \n     // JDK 1.2 doc for parseURL specifically states that any '#' ref\n     // is to be excluded by passing the 'limit' as the indexOf the '#'"}]}