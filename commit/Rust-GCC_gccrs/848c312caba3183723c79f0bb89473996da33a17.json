{"sha": "848c312caba3183723c79f0bb89473996da33a17", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODQ4YzMxMmNhYmEzMTgzNzIzYzc5ZjBiYjg5NDczOTk2ZGEzM2ExNw==", "commit": {"author": {"name": "Walter Lee", "email": "walt@tilera.com", "date": "2012-08-27T18:16:34Z"}, "committer": {"name": "Walter Lee", "email": "walt@gcc.gnu.org", "date": "2012-08-27T18:16:34Z"}, "message": "Stop trying to represent the bfins instruction with the insv pattern,\n\nbecause it causes an extra copy when bfins reuses one of its inputs.\n\t* config/tilegx/tilegx.md (*bfins): Rename to insn_bfins.\n\t(insn_bfins): Delete.\n\nFrom-SVN: r190724", "tree": {"sha": "0f7102692fdfb24692a2b3c88cd6152a086bd203", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0f7102692fdfb24692a2b3c88cd6152a086bd203"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/848c312caba3183723c79f0bb89473996da33a17", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/848c312caba3183723c79f0bb89473996da33a17", "html_url": "https://github.com/Rust-GCC/gccrs/commit/848c312caba3183723c79f0bb89473996da33a17", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/848c312caba3183723c79f0bb89473996da33a17/comments", "author": {"login": "walt-tilera", "id": 6602917, "node_id": "MDQ6VXNlcjY2MDI5MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/6602917?v=4", "gravatar_id": "", "url": "https://api.github.com/users/walt-tilera", "html_url": "https://github.com/walt-tilera", "followers_url": "https://api.github.com/users/walt-tilera/followers", "following_url": "https://api.github.com/users/walt-tilera/following{/other_user}", "gists_url": "https://api.github.com/users/walt-tilera/gists{/gist_id}", "starred_url": "https://api.github.com/users/walt-tilera/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/walt-tilera/subscriptions", "organizations_url": "https://api.github.com/users/walt-tilera/orgs", "repos_url": "https://api.github.com/users/walt-tilera/repos", "events_url": "https://api.github.com/users/walt-tilera/events{/privacy}", "received_events_url": "https://api.github.com/users/walt-tilera/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9b0370aa4bb78d7fb8ba2b3a4ca0487647fbb9f1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b0370aa4bb78d7fb8ba2b3a4ca0487647fbb9f1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b0370aa4bb78d7fb8ba2b3a4ca0487647fbb9f1"}], "stats": {"total": 37, "additions": 6, "deletions": 31}, "files": [{"sha": "717df46fa92d5a17f2d092f94f3b59a33b108aa8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/848c312caba3183723c79f0bb89473996da33a17/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/848c312caba3183723c79f0bb89473996da33a17/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=848c312caba3183723c79f0bb89473996da33a17", "patch": "@@ -1,3 +1,8 @@\n+2012-08-27  Walter Lee  <walt@tilera.com>\n+\t\n+\t* config/tilegx/tilegx.md (*bfins): Rename to insn_bfins.\n+\t(insn_bfins): Delete.\n+\n 2012-08-27  Walter Lee  <walt@tilera.com>\n \n \t* config/tilegx/sync.md (atomic_compare_and_swap_bare<mode>,"}, {"sha": "7a68a2d313bc59c83e028335aa3dd8a610193fb7", "filename": "gcc/config/tilegx/tilegx.md", "status": "modified", "additions": 1, "deletions": 31, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/848c312caba3183723c79f0bb89473996da33a17/gcc%2Fconfig%2Ftilegx%2Ftilegx.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/848c312caba3183723c79f0bb89473996da33a17/gcc%2Fconfig%2Ftilegx%2Ftilegx.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ftilegx%2Ftilegx.md?ref=848c312caba3183723c79f0bb89473996da33a17", "patch": "@@ -2627,7 +2627,7 @@\n   \"bfextu\\t%0, %r1, %2, %3\"\n   [(set_attr \"type\" \"X0\")])\n \n-(define_insn \"*bfins\"\n+(define_insn \"insn_bfins\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n         (unspec:DI [(match_operand:DI 1 \"reg_or_0_operand\" \"0\")\n                     (match_operand:DI 2 \"reg_or_0_operand\" \"rO\")\n@@ -2638,36 +2638,6 @@\n    \"bfins\\t%0, %r2, %3, %4\"\n    [(set_attr \"type\" \"X0\")])\n \n-(define_expand \"insn_bfins\"\n-  [(set (match_operand:DI 0 \"register_operand\" \"\")\n-        (unspec:DI [(match_operand:DI 1 \"reg_or_0_operand\" \"\")\n-                    (match_operand:DI 2 \"reg_or_0_operand\" \"\")\n-                    (match_operand:DI 3 \"u6bit_cint_operand\" \"\")\n-                    (match_operand:DI 4 \"u6bit_cint_operand\" \"\")]\n-                   UNSPEC_INSN_BFINS))]\n-  \"INTVAL (operands[3]) != 64\"\n-{\n-  HOST_WIDE_INT first = INTVAL (operands[3]);\n-  HOST_WIDE_INT last = INTVAL (operands[4]);\n-\n-  if (last >= first)\n-    {\n-      /* This is not a wacky wraparound case, so we can express this\n-         as a standard insv. */\n-      if (operands[0] != operands[1])\n-        {\n-\t  operands[2] = make_safe_from (operands[2], operands[0]);\n-\t  emit_move_insn (operands[0], operands[1]);\n-\t}\n-\n-      emit_insn (gen_insv (operands[0],\n-\t\t\t   GEN_INT (last - first + 1), operands[3],\n-\t\t\t   operands[2]));\n-\n-      DONE;\n-    }\n-})\n-\n (define_insn \"insn_cmpexch<four_if_si>\"\n   [(set (match_operand:I48MODE 0 \"register_operand\" \"=r\")\n         (mem:I48MODE (match_operand 1 \"pointer_operand\" \"rO\")))"}]}