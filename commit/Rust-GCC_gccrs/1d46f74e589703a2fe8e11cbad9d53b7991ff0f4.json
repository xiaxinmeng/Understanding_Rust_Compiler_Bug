{"sha": "1d46f74e589703a2fe8e11cbad9d53b7991ff0f4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWQ0NmY3NGU1ODk3MDNhMmZlOGUxMWNiYWQ5ZDUzYjc5OTFmZjBmNA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2007-06-06T10:54:25Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2007-06-06T10:54:25Z"}, "message": "Add new tests\n\nFrom-SVN: r125480", "tree": {"sha": "fccc34c9537de7fc73226c1000ba48519edae556", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fccc34c9537de7fc73226c1000ba48519edae556"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1d46f74e589703a2fe8e11cbad9d53b7991ff0f4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d46f74e589703a2fe8e11cbad9d53b7991ff0f4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1d46f74e589703a2fe8e11cbad9d53b7991ff0f4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d46f74e589703a2fe8e11cbad9d53b7991ff0f4/comments", "author": null, "committer": null, "parents": [{"sha": "4491f0aeaff463602a5b6488eef2e67e2c13ecfe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4491f0aeaff463602a5b6488eef2e67e2c13ecfe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4491f0aeaff463602a5b6488eef2e67e2c13ecfe"}], "stats": {"total": 379, "additions": 379, "deletions": 0}, "files": [{"sha": "521d0495a9bcb32bd2724e88e991ee2e1812ee7e", "filename": "gcc/testsuite/gnat.dg/addr1.adb", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d46f74e589703a2fe8e11cbad9d53b7991ff0f4/gcc%2Ftestsuite%2Fgnat.dg%2Faddr1.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d46f74e589703a2fe8e11cbad9d53b7991ff0f4/gcc%2Ftestsuite%2Fgnat.dg%2Faddr1.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Faddr1.adb?ref=1d46f74e589703a2fe8e11cbad9d53b7991ff0f4", "patch": "@@ -0,0 +1,17 @@\n+with System;\n+package body addr1 is\n+   task type T is\n+      entry Send (Location : System.Address);\n+   end;\n+   task body T is\n+   begin\n+      accept Send (Location : System.Address) do\n+        declare\n+           Buffer : String (1 .. 100);\n+           for Buffer'Address use Location;  --  Test\n+        begin\n+           null;\n+        end;\n+     end Send;\n+   end;\n+end;"}, {"sha": "51061fde08920eff9d5743eac45e9de4be03e16a", "filename": "gcc/testsuite/gnat.dg/addr1.ads", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d46f74e589703a2fe8e11cbad9d53b7991ff0f4/gcc%2Ftestsuite%2Fgnat.dg%2Faddr1.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d46f74e589703a2fe8e11cbad9d53b7991ff0f4/gcc%2Ftestsuite%2Fgnat.dg%2Faddr1.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Faddr1.ads?ref=1d46f74e589703a2fe8e11cbad9d53b7991ff0f4", "patch": "@@ -0,0 +1,5 @@\n+--  { dg-do compile }\n+\n+package addr1 is\n+   pragma Elaborate_Body;\n+end;"}, {"sha": "0540f8876674f0a9cd42d1a1c7eaed5aa9b9b790", "filename": "gcc/testsuite/gnat.dg/array1.adb", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d46f74e589703a2fe8e11cbad9d53b7991ff0f4/gcc%2Ftestsuite%2Fgnat.dg%2Farray1.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d46f74e589703a2fe8e11cbad9d53b7991ff0f4/gcc%2Ftestsuite%2Fgnat.dg%2Farray1.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Farray1.adb?ref=1d46f74e589703a2fe8e11cbad9d53b7991ff0f4", "patch": "@@ -0,0 +1,32 @@\n+--  { dg-do compile }\n+--  { dg-options \"-gnatws\" }\n+\n+package body array1 is\n+  \n+  subtype Small is Integer range 1 .. MAX;\n+  \n+  type LFT is record\n+    RIC_ID : RIC_TYPE;\n+  end record;\n+  \n+  LF : array (RIC_TYPE, Small) of LFT;\n+  \n+  procedure Foo (R : RIC_TYPE) is\n+    L : Small;\n+    T : LFT renames LF (R, L);\n+  begin\n+    Start_Timer (T'ADDRESS);\n+  end;\n+  \n+  procedure Bar (A : Integer; R : RIC_TYPE) is\n+    S : LFT renames LF (R, A);\n+  begin\n+    null;\n+  end;\n+  \n+  procedure Start_Timer (Q : SYSTEM.ADDRESS) is\n+  begin                                                        \n+    null;                                                      \n+  end;\n+\n+end array1;"}, {"sha": "8f8ecc07066f40d0b96fbaf28b9cb6c4759477e3", "filename": "gcc/testsuite/gnat.dg/array1.ads", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d46f74e589703a2fe8e11cbad9d53b7991ff0f4/gcc%2Ftestsuite%2Fgnat.dg%2Farray1.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d46f74e589703a2fe8e11cbad9d53b7991ff0f4/gcc%2Ftestsuite%2Fgnat.dg%2Farray1.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Farray1.ads?ref=1d46f74e589703a2fe8e11cbad9d53b7991ff0f4", "patch": "@@ -0,0 +1,9 @@\n+with SYSTEM;\n+WITH array2; use array2;\n+\n+package array1 is\n+  \n+  procedure Foo (R : RIC_TYPE);\n+  procedure Start_Timer (Q : SYSTEM.ADDRESS);\n+\n+end array1;"}, {"sha": "323374f09a004bf2a872ac6282cb20dfbadf8dc3", "filename": "gcc/testsuite/gnat.dg/array2.ads", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d46f74e589703a2fe8e11cbad9d53b7991ff0f4/gcc%2Ftestsuite%2Fgnat.dg%2Farray2.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d46f74e589703a2fe8e11cbad9d53b7991ff0f4/gcc%2Ftestsuite%2Fgnat.dg%2Farray2.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Farray2.ads?ref=1d46f74e589703a2fe8e11cbad9d53b7991ff0f4", "patch": "@@ -0,0 +1,8 @@\n+package array2 is\n+  \n+  type RIC_TYPE is (RIC1, RIC2);\n+  for RIC_TYPE'SIZE use 32;\n+  \n+  function MAX return Integer;\n+\n+end array2;"}, {"sha": "f5aaef363e5003e18b82b385f85b0d03c3f89dc0", "filename": "gcc/testsuite/gnat.dg/conv_bug.adb", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d46f74e589703a2fe8e11cbad9d53b7991ff0f4/gcc%2Ftestsuite%2Fgnat.dg%2Fconv_bug.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d46f74e589703a2fe8e11cbad9d53b7991ff0f4/gcc%2Ftestsuite%2Fgnat.dg%2Fconv_bug.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fconv_bug.adb?ref=1d46f74e589703a2fe8e11cbad9d53b7991ff0f4", "patch": "@@ -0,0 +1,30 @@\n+--  { dg-do run }\n+--  { dg-options \"-gnatws\" }\n+\n+with discr3; use discr3;\n+with Text_IO; use Text_IO;\n+procedure Conv_Bug is\n+begin\n+   begin\n+      V2 := S2 (V1);\n+   exception\n+      when Constraint_Error => null;\n+      when others => Put_Line (\"Wrong Exception raised\");\n+   end;\n+   \n+   begin\n+      V2 := S2(V1(V1'Range));\n+      Put_Line (\"No exception raised - 2\");\n+   exception\n+      when Constraint_Error => null;\n+      when others => Put_Line (\"Wrong Exception raised\");\n+   end;\n+   \n+   begin\n+      V2 := S2 (V3);\n+      Put_Line (\"No exception raised - 3\");\n+   exception\n+      when Constraint_Error => null;\n+      when others => Put_Line (\"Wrong Exception raised\");\n+   end;\n+end Conv_Bug;"}, {"sha": "e2adab4412c5bb3acae65414343e1b836daab729", "filename": "gcc/testsuite/gnat.dg/discr1.ads", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d46f74e589703a2fe8e11cbad9d53b7991ff0f4/gcc%2Ftestsuite%2Fgnat.dg%2Fdiscr1.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d46f74e589703a2fe8e11cbad9d53b7991ff0f4/gcc%2Ftestsuite%2Fgnat.dg%2Fdiscr1.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fdiscr1.ads?ref=1d46f74e589703a2fe8e11cbad9d53b7991ff0f4", "patch": "@@ -0,0 +1,25 @@\n+package discr1 is\n+\n+  type R is (One, Two);\n+\n+  type C_Type (Kind : R) is\n+  record\n+    case Kind is\n+      when One =>\n+        Name       : Integer;\n+      when Two =>\n+        Designator : String (1 .. 40);\n+    end case;\n+  end record;\n+  \n+  for C_Type use record\n+    Name        at   0 range 0.. 31;\n+    Designator  at   0 range 0..319;\n+    Kind        at  40 range 0..  7;\n+  end record;\n+  \n+  for C_Type'Size use 44 * 8;\n+  \n+  procedure Assign (Id : String);\n+\n+end discr1;"}, {"sha": "0f03a0fd955e2798166796c5b4f71302d18b190c", "filename": "gcc/testsuite/gnat.dg/discr2.adb", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d46f74e589703a2fe8e11cbad9d53b7991ff0f4/gcc%2Ftestsuite%2Fgnat.dg%2Fdiscr2.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d46f74e589703a2fe8e11cbad9d53b7991ff0f4/gcc%2Ftestsuite%2Fgnat.dg%2Fdiscr2.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fdiscr2.adb?ref=1d46f74e589703a2fe8e11cbad9d53b7991ff0f4", "patch": "@@ -0,0 +1,22 @@\n+--  { dg-do compile }\n+\n+with discr1; use discr1;\n+\n+package body discr2 is\n+  \n+  procedure Copy (Dataset : in out C_Type) is\n+    Last_Char : Positive := 300;\n+  begin\n+    while (Last_Char > 40) loop\n+      Last_Char := Last_Char - 1;\n+    end loop;\n+    \n+    Assign (Dataset.Designator (1 .. Last_Char));\n+  end;\n+  \n+  procedure Dummy is\n+  begin\n+    null;\n+  end Dummy;\n+\n+end discr2;"}, {"sha": "f534ba20ca5b7c75abfdbb38c90ee1d4f23ca669", "filename": "gcc/testsuite/gnat.dg/discr2.ads", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d46f74e589703a2fe8e11cbad9d53b7991ff0f4/gcc%2Ftestsuite%2Fgnat.dg%2Fdiscr2.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d46f74e589703a2fe8e11cbad9d53b7991ff0f4/gcc%2Ftestsuite%2Fgnat.dg%2Fdiscr2.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fdiscr2.ads?ref=1d46f74e589703a2fe8e11cbad9d53b7991ff0f4", "patch": "@@ -0,0 +1,5 @@\n+package discr2 is\n+  \n+  procedure Dummy;\n+\n+end discr2;"}, {"sha": "37ba917345d5b9809ee739d0cb58a7badf8f3b65", "filename": "gcc/testsuite/gnat.dg/discr3.ads", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d46f74e589703a2fe8e11cbad9d53b7991ff0f4/gcc%2Ftestsuite%2Fgnat.dg%2Fdiscr3.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d46f74e589703a2fe8e11cbad9d53b7991ff0f4/gcc%2Ftestsuite%2Fgnat.dg%2Fdiscr3.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fdiscr3.ads?ref=1d46f74e589703a2fe8e11cbad9d53b7991ff0f4", "patch": "@@ -0,0 +1,11 @@\n+package discr3 is\n+   type E  is range  0..255;\n+   type R1 is range  1..5;\n+   type R2 is range 11..15;\n+   type S1 is array(R1 range <>) of E;\n+   type S2 is array(R2 range <>) of E;\n+   V1 : S1( 2..3)  := (0,0);\n+   V2 : S2(12..13) := (1,1);\n+   subtype R3 is R1 range 2..3;\n+   V3 : S1 (R3);\n+end discr3;"}, {"sha": "2d656ea7fa2f4df52ca22f21a79ca207aa082edd", "filename": "gcc/testsuite/gnat.dg/elab1.ads", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d46f74e589703a2fe8e11cbad9d53b7991ff0f4/gcc%2Ftestsuite%2Fgnat.dg%2Felab1.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d46f74e589703a2fe8e11cbad9d53b7991ff0f4/gcc%2Ftestsuite%2Fgnat.dg%2Felab1.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Felab1.ads?ref=1d46f74e589703a2fe8e11cbad9d53b7991ff0f4", "patch": "@@ -0,0 +1,23 @@\n+package elab1 is\n+  \n+  -- the forward declaration is the trigger\n+  type Stream;\n+  \n+  type Stream_Ptr is access Stream;\n+  \n+  type Stream is array (Positive range <>) of Character;\n+  \n+  function Get_Size (S : Stream_Ptr) return Natural;\n+  \n+  type Rec (Size : Natural) is\n+    record\n+      B : Boolean;\n+    end record;\n+  \n+  My_Desc : constant Stream_Ptr := new Stream'(1 => ' ');\n+  \n+  My_Size : constant Natural := Get_Size (My_Desc);\n+  \n+  subtype My_Rec is Rec (My_Size);\n+\n+end;"}, {"sha": "3379a4172d3ae82293028c1791866ae126167568", "filename": "gcc/testsuite/gnat.dg/elab2.adb", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d46f74e589703a2fe8e11cbad9d53b7991ff0f4/gcc%2Ftestsuite%2Fgnat.dg%2Felab2.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d46f74e589703a2fe8e11cbad9d53b7991ff0f4/gcc%2Ftestsuite%2Fgnat.dg%2Felab2.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Felab2.adb?ref=1d46f74e589703a2fe8e11cbad9d53b7991ff0f4", "patch": "@@ -0,0 +1,10 @@\n+--  { dg-do compile }\n+--  { dg-options \"-gnatws\" }\n+\n+with elab1;\n+\n+procedure elab2 is\n+  A : elab1.My_Rec;\n+begin\n+  null;\n+end;"}, {"sha": "058fe42c913c42b9a0b20f1f768e20d191c14270", "filename": "gcc/testsuite/gnat.dg/expect1.adb", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d46f74e589703a2fe8e11cbad9d53b7991ff0f4/gcc%2Ftestsuite%2Fgnat.dg%2Fexpect1.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d46f74e589703a2fe8e11cbad9d53b7991ff0f4/gcc%2Ftestsuite%2Fgnat.dg%2Fexpect1.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fexpect1.adb?ref=1d46f74e589703a2fe8e11cbad9d53b7991ff0f4", "patch": "@@ -0,0 +1,15 @@\n+--  { dg-do run }\n+\n+with GNAT.Expect; use GNAT.Expect;\n+with Ada.Text_IO; use Ada.Text_IO;\n+procedure expect1 is\n+   Process : Process_Descriptor;\n+begin\n+   begin\n+      Close (Process);\n+      raise Program_Error;\n+   exception\n+      when Invalid_Process =>\n+         null;  -- expected\n+   end;\n+end expect1;"}, {"sha": "f1adf7a1f2c9408b336636656736bb9bbd0b012d", "filename": "gcc/testsuite/gnat.dg/socket1.adb", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d46f74e589703a2fe8e11cbad9d53b7991ff0f4/gcc%2Ftestsuite%2Fgnat.dg%2Fsocket1.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d46f74e589703a2fe8e11cbad9d53b7991ff0f4/gcc%2Ftestsuite%2Fgnat.dg%2Fsocket1.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fsocket1.adb?ref=1d46f74e589703a2fe8e11cbad9d53b7991ff0f4", "patch": "@@ -0,0 +1,14 @@\n+-- { dg-do run }\n+\n+with GNAT.Sockets; use GNAT.Sockets;\n+procedure socket1 is\n+   X : Character;\n+begin\n+   X := 'x';\n+   GNAT.Sockets.Initialize;\n+   declare\n+      H : Host_Entry_Type := Get_Host_By_Address (Inet_Addr (\"127.0.0.1\"));\n+   begin\n+      null;\n+   end;\n+end socket1;"}, {"sha": "aaabc41ed76b559a5230b8f2c89a965166a201c9", "filename": "gcc/testsuite/gnat.dg/specs/constructor.ads", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d46f74e589703a2fe8e11cbad9d53b7991ff0f4/gcc%2Ftestsuite%2Fgnat.dg%2Fspecs%2Fconstructor.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d46f74e589703a2fe8e11cbad9d53b7991ff0f4/gcc%2Ftestsuite%2Fgnat.dg%2Fspecs%2Fconstructor.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fspecs%2Fconstructor.ads?ref=1d46f74e589703a2fe8e11cbad9d53b7991ff0f4", "patch": "@@ -0,0 +1,13 @@\n+-- { dg-do compile }\n+\n+package constructor is\n+   type R (Name_Length : Natural) is record\n+      Name     : Wide_String (1..Name_Length);\n+      Multiple : Boolean;\n+   end record;\n+   \n+   Null_Params : constant R :=\n+     (Name_Length => 0,\n+      Name        => \"\",\n+      Multiple    => False);\n+end;"}, {"sha": "4336c754f14521bb5db57dd21f7d69921faded27", "filename": "gcc/testsuite/gnat.dg/specs/preelab.ads", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d46f74e589703a2fe8e11cbad9d53b7991ff0f4/gcc%2Ftestsuite%2Fgnat.dg%2Fspecs%2Fpreelab.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d46f74e589703a2fe8e11cbad9d53b7991ff0f4/gcc%2Ftestsuite%2Fgnat.dg%2Fspecs%2Fpreelab.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fspecs%2Fpreelab.ads?ref=1d46f74e589703a2fe8e11cbad9d53b7991ff0f4", "patch": "@@ -0,0 +1,9 @@\n+-- { dg-do compile }\n+\n+with Ada.Finalization;\n+package preelab is\n+   type T is limited private;\n+   pragma Preelaborable_Initialization (T);\n+private    \n+   type T is new Ada.Finalization.Limited_Controlled with null record;\n+end preelab;"}, {"sha": "869103ce574dd7887678f4f0b0b24a2d604ea05f", "filename": "gcc/testsuite/gnat.dg/specs/uc1.ads", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d46f74e589703a2fe8e11cbad9d53b7991ff0f4/gcc%2Ftestsuite%2Fgnat.dg%2Fspecs%2Fuc1.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d46f74e589703a2fe8e11cbad9d53b7991ff0f4/gcc%2Ftestsuite%2Fgnat.dg%2Fspecs%2Fuc1.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fspecs%2Fuc1.ads?ref=1d46f74e589703a2fe8e11cbad9d53b7991ff0f4", "patch": "@@ -0,0 +1,21 @@\n+-- { dg-do compile }\n+\n+with System;\n+with System.Storage_Elements;\n+with Unchecked_Conversion;\n+\n+package UC1 is\n+\n+  function Conv is\n+    new Unchecked_Conversion (Source => System.Address, Target => Integer);\n+  function Conv is\n+    new Unchecked_Conversion (Source => Integer, Target => System.Address);\n+\n+  M : constant System.Address := System.Storage_Elements.To_Address(0);\n+  N : constant System.Address := Conv (Conv (M) + 1);\n+  A : constant System.Address := Conv (Conv (N) + 1);\n+\n+  I : Integer;\n+  for I use at A;\n+\n+end UC1;"}, {"sha": "10771c99f85181f5087ad2ec87931310ab32c86c", "filename": "gcc/testsuite/gnat.dg/test_enum_io.adb", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d46f74e589703a2fe8e11cbad9d53b7991ff0f4/gcc%2Ftestsuite%2Fgnat.dg%2Ftest_enum_io.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d46f74e589703a2fe8e11cbad9d53b7991ff0f4/gcc%2Ftestsuite%2Fgnat.dg%2Ftest_enum_io.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Ftest_enum_io.adb?ref=1d46f74e589703a2fe8e11cbad9d53b7991ff0f4", "patch": "@@ -0,0 +1,33 @@\n+--  { dg-do run }\n+\n+with Ada.Text_IO;\n+use  Ada.Text_IO;\n+\n+procedure Test_Enum_IO is\n+\n+  type Enum is (Literal);\n+  package Enum_IO is new Enumeration_IO (Enum);\n+  use Enum_IO;\n+\n+  File : File_Type;\n+  Value: Enum;\n+  Rest : String (1 ..30);\n+  Last : Natural; \n+  \n+begin\n+  \n+  Create (File, Mode => Out_File);\n+  Put_Line (File, \"Literax0000000l note the 'l' at the end\");\n+  \n+  Reset (File, Mode => In_File);\n+  Get (File, Value); \n+  Get_Line (File, Rest, Last);\n+  \n+  Close (File);\n+  \n+  Put_Line (Enum'Image (Value) & Rest (1 .. Last));\n+  raise Program_Error;\n+\n+exception\n+  when Data_Error => null;\n+end Test_Enum_IO;"}, {"sha": "823e172d5bc822541f1254b655231632c26a6a1b", "filename": "gcc/testsuite/gnat.dg/test_fixed_io.adb", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d46f74e589703a2fe8e11cbad9d53b7991ff0f4/gcc%2Ftestsuite%2Fgnat.dg%2Ftest_fixed_io.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d46f74e589703a2fe8e11cbad9d53b7991ff0f4/gcc%2Ftestsuite%2Fgnat.dg%2Ftest_fixed_io.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Ftest_fixed_io.adb?ref=1d46f74e589703a2fe8e11cbad9d53b7991ff0f4", "patch": "@@ -0,0 +1,34 @@\n+--  { dg-do run }\n+\n+with Ada.Text_IO; use Ada.Text_IO;\n+\n+procedure test_fixed_io is\n+   type FX is delta 0.0001 range -3.0 .. 250.0;\n+   for FX'Small use 0.0001;\n+   package FXIO is new Fixed_IO (FX);\n+   use FXIO;\n+   ST : String (1 .. 11)  := (others => ' ');\n+   ST2 : String (1 .. 12) := (others => ' ');\n+\n+   N : constant FX := -2.345;\n+begin\n+   begin\n+      Put (ST, N, 6, 2);\n+      Put_Line (\"*ERROR* Test1: Exception Layout_Error was not raised\");\n+      Put_Line (\"ST = \"\"\" & ST & '\"');\n+   exception\n+      when Layout_Error =>\n+         null;\n+      when others =>\n+         Put_Line (\"Test1: Unexpected exception\");\n+   end;\n+\n+   begin\n+      Put (ST2, N, 6, 2);\n+   exception\n+      when Layout_Error =>\n+         Put_Line (\"*ERROR* Test2: Exception Layout_Error was raised\");\n+      when others =>\n+         Put_Line (\"Test2: Unexpected exception\");\n+   end;\n+end;"}, {"sha": "6af52dfd62b72f863cab335c6aa1e3e7d64952b1", "filename": "gcc/testsuite/gnat.dg/test_unknown_discrs.adb", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d46f74e589703a2fe8e11cbad9d53b7991ff0f4/gcc%2Ftestsuite%2Fgnat.dg%2Ftest_unknown_discrs.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d46f74e589703a2fe8e11cbad9d53b7991ff0f4/gcc%2Ftestsuite%2Fgnat.dg%2Ftest_unknown_discrs.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Ftest_unknown_discrs.adb?ref=1d46f74e589703a2fe8e11cbad9d53b7991ff0f4", "patch": "@@ -0,0 +1,31 @@\n+--  { dg-do compile }\n+\n+procedure Test_Unknown_Discrs is\n+   \n+   package Display is\n+\n+      type Component_Id (<>) is limited private;\n+\n+      Deferred_Const : constant Component_Id;\n+   \n+   private\n+      \n+      type Component_Id is (Clock);\n+\n+      type Rec1 is record\n+         C : Component_Id := Deferred_Const;\n+      end record;\n+\n+      Priv_Cid_Object : Component_Id := Component_Id'First;\n+\n+      type Rec2 is record\n+         C : Component_Id := Priv_Cid_Object;\n+      end record;\n+\n+      Deferred_Const : constant Component_Id := Priv_Cid_Object;\n+   \n+   end Display;\n+\n+begin\n+   null;\n+end Test_Unknown_Discrs;"}, {"sha": "6dbdfa2e7109443d4a45f434f3382465d1ce7a83", "filename": "gcc/testsuite/gnat.dg/warn1.adb", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d46f74e589703a2fe8e11cbad9d53b7991ff0f4/gcc%2Ftestsuite%2Fgnat.dg%2Fwarn1.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d46f74e589703a2fe8e11cbad9d53b7991ff0f4/gcc%2Ftestsuite%2Fgnat.dg%2Fwarn1.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fwarn1.adb?ref=1d46f74e589703a2fe8e11cbad9d53b7991ff0f4", "patch": "@@ -0,0 +1,12 @@\n+--  { dg-do run }\n+--  { dg-options \"-gnatwae\" }\n+\n+procedure warn1 is\n+   pragma Warnings\n+     (Off, \"variable \"\"Unused\"\" is never read and never assigned\");\n+   Unused : Integer;\n+   pragma Warnings\n+     (On, \"variable \"\"Unused\"\" is never read and never assigned\");\n+begin\n+   null;\n+end warn1;"}]}