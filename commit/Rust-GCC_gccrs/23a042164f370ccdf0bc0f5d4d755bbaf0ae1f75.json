{"sha": "23a042164f370ccdf0bc0f5d4d755bbaf0ae1f75", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjNhMDQyMTY0ZjM3MGNjZGYwYmMwZjVkNGQ3NTViYmFmMGFlMWY3NQ==", "commit": {"author": {"name": "Jan Hubicka", "email": "hubicka@ucw.cz", "date": "2014-03-28T15:30:58Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2014-03-28T15:30:58Z"}, "message": "cgraph.c: Include expr.h and tree-dfa.h.\n\n\t* cgraph.c: Include expr.h and tree-dfa.h.\n\t(cgraph_redirect_edge_call_stmt_to_callee): If call in noreturn; remove LHS.\n\nFrom-SVN: r208901", "tree": {"sha": "4e759e52926d15fec39ff3ed739eafa05de86636", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4e759e52926d15fec39ff3ed739eafa05de86636"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/23a042164f370ccdf0bc0f5d4d755bbaf0ae1f75", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/23a042164f370ccdf0bc0f5d4d755bbaf0ae1f75", "html_url": "https://github.com/Rust-GCC/gccrs/commit/23a042164f370ccdf0bc0f5d4d755bbaf0ae1f75", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/23a042164f370ccdf0bc0f5d4d755bbaf0ae1f75/comments", "author": null, "committer": null, "parents": [{"sha": "a4971e68935654be575c76864b954a80c94d6c42", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a4971e68935654be575c76864b954a80c94d6c42", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a4971e68935654be575c76864b954a80c94d6c42"}], "stats": {"total": 24, "additions": 24, "deletions": 0}, "files": [{"sha": "1ca072e61429261fd7101f5fd8b8477497aef2f0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23a042164f370ccdf0bc0f5d4d755bbaf0ae1f75/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23a042164f370ccdf0bc0f5d4d755bbaf0ae1f75/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=23a042164f370ccdf0bc0f5d4d755bbaf0ae1f75", "patch": "@@ -1,3 +1,8 @@\n+2014-03-28  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\t* cgraph.c: Include expr.h and tree-dfa.h.\n+\t(cgraph_redirect_edge_call_stmt_to_callee): If call in noreturn; remove LHS.\n+\n 2014-03-28  Vladimir Makarov  <vmakarov@redhat.com>\n \n \tPR target/60675"}, {"sha": "3b76aa4d470372a023fdee9596f6658abe65568d", "filename": "gcc/cgraph.c", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23a042164f370ccdf0bc0f5d4d755bbaf0ae1f75/gcc%2Fcgraph.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23a042164f370ccdf0bc0f5d4d755bbaf0ae1f75/gcc%2Fcgraph.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraph.c?ref=23a042164f370ccdf0bc0f5d4d755bbaf0ae1f75", "patch": "@@ -61,6 +61,8 @@ along with GCC; see the file COPYING3.  If not see\n #include \"ipa-inline.h\"\n #include \"cfgloop.h\"\n #include \"gimple-pretty-print.h\"\n+#include \"expr.h\"\n+#include \"tree-dfa.h\"\n \n /* FIXME: Only for PROP_loops, but cgraph shouldn't have to know about this.  */\n #include \"tree-pass.h\"\n@@ -1329,6 +1331,7 @@ gimple\n cgraph_redirect_edge_call_stmt_to_callee (struct cgraph_edge *e)\n {\n   tree decl = gimple_call_fndecl (e->call_stmt);\n+  tree lhs = gimple_call_lhs (e->call_stmt);\n   gimple new_stmt;\n   gimple_stmt_iterator gsi;\n #ifdef ENABLE_CHECKING\n@@ -1471,6 +1474,22 @@ cgraph_redirect_edge_call_stmt_to_callee (struct cgraph_edge *e)\n       update_stmt_fn (DECL_STRUCT_FUNCTION (e->caller->decl), new_stmt);\n     }\n \n+  /* If the call becomes noreturn, remove the lhs.  */\n+  if (lhs && (gimple_call_flags (new_stmt) & ECF_NORETURN))\n+    {\n+      if (TREE_CODE (lhs) == SSA_NAME)\n+\t{\n+          gsi = gsi_for_stmt (new_stmt);\n+\n+\t  tree var = create_tmp_var (TREE_TYPE (lhs), NULL);\n+\t  tree def = get_or_create_ssa_default_def\n+\t\t      (DECL_STRUCT_FUNCTION (e->caller->decl), var);\n+\t  gimple set_stmt = gimple_build_assign (lhs, def);\n+\t  gsi_insert_before (&gsi, set_stmt, GSI_SAME_STMT);\n+\t}\n+      gimple_call_set_lhs (new_stmt, NULL_TREE);\n+    }\n+\n   cgraph_set_call_stmt_including_clones (e->caller, e->call_stmt, new_stmt, false);\n \n   if (cgraph_dump_file)"}]}