{"sha": "ef7615a0023d2600d10d1e477522204445129f55", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWY3NjE1YTAwMjNkMjYwMGQxMGQxZTQ3NzUyMjIwNDQ0NTEyOWY1NQ==", "commit": {"author": {"name": "Bruce Korb", "email": "bkorb@gnu.org", "date": "2000-05-11T14:12:15Z"}, "committer": {"name": "Bruce Korb", "email": "korbb@gcc.gnu.org", "date": "2000-05-11T14:12:15Z"}, "message": "base diff file (needs workvi ../ChangeLog)\n\nFrom-SVN: r33847", "tree": {"sha": "8a298320a1d2319c5c48998af78ebfbc02326c3d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8a298320a1d2319c5c48998af78ebfbc02326c3d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ef7615a0023d2600d10d1e477522204445129f55", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef7615a0023d2600d10d1e477522204445129f55", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ef7615a0023d2600d10d1e477522204445129f55", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef7615a0023d2600d10d1e477522204445129f55/comments", "author": {"login": "brkorb", "id": 1242936, "node_id": "MDQ6VXNlcjEyNDI5MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1242936?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brkorb", "html_url": "https://github.com/brkorb", "followers_url": "https://api.github.com/users/brkorb/followers", "following_url": "https://api.github.com/users/brkorb/following{/other_user}", "gists_url": "https://api.github.com/users/brkorb/gists{/gist_id}", "starred_url": "https://api.github.com/users/brkorb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brkorb/subscriptions", "organizations_url": "https://api.github.com/users/brkorb/orgs", "repos_url": "https://api.github.com/users/brkorb/repos", "events_url": "https://api.github.com/users/brkorb/events{/privacy}", "received_events_url": "https://api.github.com/users/brkorb/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "380c5d408f73d3bc11819a5c0301d0f55b0dd7a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/380c5d408f73d3bc11819a5c0301d0f55b0dd7a6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/380c5d408f73d3bc11819a5c0301d0f55b0dd7a6"}], "stats": {"total": 349, "additions": 349, "deletions": 0}, "files": [{"sha": "7d4dadeda5fc4e85add47c5a49ef2edfac6b0bdd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef7615a0023d2600d10d1e477522204445129f55/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef7615a0023d2600d10d1e477522204445129f55/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ef7615a0023d2600d10d1e477522204445129f55", "patch": "@@ -15,6 +15,7 @@\n \t* fixinc/Makefile.in:  compile fixfixes.c and fixtests.c as separate\n \tmodules.  Removed the vestiges of the script version.\n \tAdded support for \"make check\".\n+\t* fixinc/check.diff: base diff file (needs work!!)\n \t* fixinc/check.tpl: quiet the fixup output\n \t* fixinc/fixtests.c(main): obsolete\n \t* fixinc/fixincl.sh:  don't bother copying fixincl to .."}, {"sha": "c76c32f81ac431ac38fef7a9524b313c10f65646", "filename": "gcc/fixinc/check.diff", "status": "added", "additions": 348, "deletions": 0, "changes": 348, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef7615a0023d2600d10d1e477522204445129f55/gcc%2Ffixinc%2Fcheck.diff", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef7615a0023d2600d10d1e477522204445129f55/gcc%2Ffixinc%2Fcheck.diff", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Fcheck.diff?ref=ef7615a0023d2600d10d1e477522204445129f55", "patch": "@@ -0,0 +1,348 @@\n+*** inc/X11/Intrinsic.h\n+--- res/X11/Intrinsic.h\n+***************\n+*** 1,5 ****\n+  \n+  \n+  #ifndef ARM_NORCROFT_HINT_CHECK\n+! ___type p_type mumble;\n+  #endif  /* ARM_NORCROFT_HINT_CHECK */\n+--- 1,5 ----\n+  \n+  \n+  #ifndef ARM_NORCROFT_HINT_CHECK\n+! p_type mumble;\n+  #endif  /* ARM_NORCROFT_HINT_CHECK */\n+*** inc/X11/ShellP.h\n+--- res/X11/ShellP.h\n+***************\n+*** 2,8 ****\n+--- 2,12 ----\n+  \n+  #ifndef X11_CLASS_CHECK\n+  struct {\n++ #ifdef __cplusplus\n++ \tchar *c_class;\n++ #else\n+     char *class;\n++ #endif\n+  } mumble;\n+  \n+  #endif  /* X11_CLASS_CHECK */\n+*** inc/X11/Xmu.h\n+--- res/X11/Xmu.h\n+***************\n+*** 1,5 ****\n+--- 1,7 ----\n+  \n+  \n+  #ifndef X11_SPRINTF_CHECK\n++ #ifndef __STDC__\n+  extern char *\tsprintf();\n++ #endif /* !defined __STDC__ */\n+  #endif  /* X11_SPRINTF_CHECK */\n+*** inc/Xm/BaseClassI.h\n+--- res/Xm/BaseClassI.h\n+***************\n+*** 1,6 ****\n+  \n+  \n+  #ifndef X11_CLASS_USAGE_CHECK\n+! extern mumble (int  class);\n+  \n+  #endif  /* X11_CLASS_USAGE_CHECK */\n+--- 1,6 ----\n+  \n+  \n+  #ifndef X11_CLASS_USAGE_CHECK\n+! extern mumble (int  c_class);\n+  \n+  #endif  /* X11_CLASS_USAGE_CHECK */\n+*** inc/Xm/Traversal.h\n+--- res/Xm/Traversal.h\n+***************\n+*** 2,8 ****\n+  \n+  #ifndef X11_NEW_CHECK\n+  struct wedge {\n+     Widget\told, new; /* fix the new */\n+  };\n+! extern Wedged( Widget new, Widget old );\n+  #endif  /* X11_NEW_CHECK */\n+--- 2,12 ----\n+  \n+  #ifndef X11_NEW_CHECK\n+  struct wedge {\n++ #ifdef __cplusplus\n++ \tWidget\told, c_new;\n++ #else\n+     Widget\told, new; /* fix the new */\n++ #endif\n+  };\n+! extern Wedged( Widget c_new, Widget old );\n+  #endif  /* X11_NEW_CHECK */\n+*** inc/assert.h\n+--- res/assert.h\n+***************\n+*** 1,3 ****\n+--- 1,7 ----\n++ #ifdef __cplusplus\n++ #include <stdlib.h>\n++ #endif\n++ #include <stdio.h>\n+  \n+  \n+  #ifndef BROKEN_ASSERT_STDIO_CHECK\n+*** inc/c_asm.h\n+--- res/c_asm.h\n+***************\n+*** 1,9 ****\n+--- 1,11 ----\n+  \n+  \n+  #ifndef DEC_INTERN_ASM_CHECK\n++ #ifdef __DECC\n+  float fasm {\n+      ... asm stuff ...\n+  };\n+  #pragma intrinsic( dasm )\n++ #endif\n+  /* END ASM TEST*/\n+  #endif  /* DEC_INTERN_ASM_CHECK */\n+*** inc/curses.h\n+--- res/curses.h\n+***************\n+*** 1,11 ****\n+  \n+  \n+  #ifndef AVOID_BOOL_CHECK\n+  # define bool\t char \n+  typedef unsigned int\tbool \t; /* bool type */\n+  #endif  /* AVOID_BOOL_CHECK */\n+  \n+  \n+  #ifndef BAD_STRUCT_TERM_CHECK\n+! typedef struct term;\n+  #endif  /* BAD_STRUCT_TERM_CHECK */\n+--- 1,15 ----\n+  \n+  \n+  #ifndef AVOID_BOOL_CHECK\n++ #ifndef __cplusplus\n+  # define bool\t char \n++ #endif\n++ #ifndef __cplusplus\n+  typedef unsigned int\tbool \t; /* bool type */\n++ #endif\n+  #endif  /* AVOID_BOOL_CHECK */\n+  \n+  \n+  #ifndef BAD_STRUCT_TERM_CHECK\n+! struct term;\n+  #endif  /* BAD_STRUCT_TERM_CHECK */\n+*** inc/math.h\n+--- res/math.h\n+***************\n+*** 2,9 ****\n+  \n+  #ifndef BROKEN_CABS_CHECK\n+  #ifdef __STDC__\n+- extern double cabs(struct dbl_hypot);\n+  #else\n+- extern double cabs();\n+  #endif\n+  #endif  /* BROKEN_CABS_CHECK */\n+--- 2,7 ----\n+*** inc/stdio.h\n+--- res/stdio.h\n+***************\n+*** 1,7 ****\n+  \n+  \n+  #ifndef ALPHA_GETOPT_CHECK\n+! extern int getopt(int, char *[], char *);\n+  #endif  /* ALPHA_GETOPT_CHECK */\n+  \n+  \n+--- 1,9 ----\n++ #define __need___va_list\n++ #include <stdarg.h>\n+  \n+  \n+  #ifndef ALPHA_GETOPT_CHECK\n+! extern int getopt(int, char *const[], const char *);\n+  #endif  /* ALPHA_GETOPT_CHECK */\n+  \n+  \n+*** inc/stdlib.h\n+--- res/stdlib.h\n+***************\n+*** 1,7 ****\n+  \n+  \n+  #ifndef ARM_WCHAR_CHECK\n+! # ifndef \t __wchar_t /* we don't have wchar_t yet, ... */\n+! #  define  __wchar_t  short\n+  # endif /* __wchar_t */\n+  #endif  /* ARM_WCHAR_CHECK */\n+--- 1,7 ----\n+  \n+  \n+  #ifndef ARM_WCHAR_CHECK\n+! # ifndef \t _GCC_WCHAR_T /* we don't have wchar_t yet, ... */\n+! #  define  _GCC_WCHAR_T  short\n+  # endif /* __wchar_t */\n+  #endif  /* ARM_WCHAR_CHECK */\n+*** inc/sundev/vuid_event.h\n+--- res/sundev/vuid_event.h\n+***************\n+*** 1,5 ****\n+  \n+  \n+  #ifndef BADQUOTE_CHECK\n+! /* doesn't have matched single quotes */\n+  #endif  /* BADQUOTE_CHECK */\n+--- 1,5 ----\n+  \n+  \n+  #ifndef BADQUOTE_CHECK\n+! /* does not have matched single quotes */\n+  #endif  /* BADQUOTE_CHECK */\n+*** inc/sunwindow/win_lock.h\n+--- res/sunwindow/win_lock.h\n+***************\n+*** 1,7 ****\n+  \n+  \n+  #ifndef ECD_CURSOR_CHECK\n+! #ifdef ecd.cursor\n+  #error bogus\n+! #endif /* ecd+cursor */\n+  #endif  /* ECD_CURSOR_CHECK */\n+--- 1,7 ----\n+  \n+  \n+  #ifndef ECD_CURSOR_CHECK\n+! #ifdef ecd_cursor\n+  #error bogus\n+! #endif /* ecd_cursor */\n+  #endif  /* ECD_CURSOR_CHECK */\n+*** inc/sym.h\n+--- res/sym.h\n+***************\n+*** 1,7 ****\n+  \n+  \n+  #ifndef ALPHA_PARENS_CHECK\n+! #ifndef(__mips64) /* bogus */\n+  extern int foo;\n+  #endif\n+  #endif  /* ALPHA_PARENS_CHECK */\n+--- 1,7 ----\n+  \n+  \n+  #ifndef ALPHA_PARENS_CHECK\n+! #ifndef __mips64 /* bogus */\n+  extern int foo;\n+  #endif\n+  #endif  /* ALPHA_PARENS_CHECK */\n+*** inc/sys/param.h\n+--- res/sys/param.h\n+***************\n+*** 1,11 ****\n+  \n+  \n+  #ifndef AUX_ASM_CHECK\n+! #ifndef NOINLINE /* ain't got no inline, so we got it */\n+  #endif /* NOINLINE */\n+  #endif  /* AUX_ASM_CHECK */\n+  \n+  \n+  #ifndef HPUX_MAXINT_CHECK\n+  #define MAXINT 0x7FFFFFFF\n+  #endif  /* HPUX_MAXINT_CHECK */\n+--- 1,13 ----\n+  \n+  \n+  #ifndef AUX_ASM_CHECK\n+! #if !defined(NOINLINE) && !defined(__GNUC__) /* ain't got no inline, so we got it */\n+  #endif /* NOINLINE */\n+  #endif  /* AUX_ASM_CHECK */\n+  \n+  \n+  #ifndef HPUX_MAXINT_CHECK\n++ #ifndef MAXINT\n+  #define MAXINT 0x7FFFFFFF\n++ #endif\n+  #endif  /* HPUX_MAXINT_CHECK */\n+*** inc/sys/signal.h\n+--- res/sys/signal.h\n+***************\n+*** 1,5 ****\n+  \n+  \n+  #ifndef AIX_VOLATILE_CHECK\n+! typedef volatile int sig_atomic_t;\n+  #endif  /* AIX_VOLATILE_CHECK */\n+--- 1,5 ----\n+  \n+  \n+  #ifndef AIX_VOLATILE_CHECK\n+! typedef int sig_atomic_t;\n+  #endif  /* AIX_VOLATILE_CHECK */\n+*** inc/sys/time.h\n+--- res/sys/time.h\n+***************\n+*** 1,5 ****\n+  \n+  \n+  #ifndef HPUX_SYSTIME_CHECK\n+! extern struct sigevent;\n+  #endif  /* HPUX_SYSTIME_CHECK */\n+--- 1,5 ----\n+  \n+  \n+  #ifndef HPUX_SYSTIME_CHECK\n+! struct sigevent;\n+  #endif  /* HPUX_SYSTIME_CHECK */\n+*** inc/sys/wait.h\n+--- res/sys/wait.h\n+***************\n+*** 2,6 ****\n+--- 2,7 ----\n+  \n+  #ifndef AIX_SYSWAIT_CHECK\n+  /* bos325, */\n++ struct rusage;\n+  extern pid_t wait3();\n+  #endif  /* AIX_SYSWAIT_CHECK */\n+*** inc/time.h\n+--- res/time.h\n+***************\n+*** 1,5 ****\n+  \n+  \n+  #ifndef VXWORKS_NEEDS_VXTYPES_CHECK\n+! uint_t\t_clocks_per_sec;\n+  #endif  /* VXWORKS_NEEDS_VXTYPES_CHECK */\n+--- 1,5 ----\n+  \n+  \n+  #ifndef VXWORKS_NEEDS_VXTYPES_CHECK\n+! unsigned int\t_clocks_per_sec;\n+  #endif  /* VXWORKS_NEEDS_VXTYPES_CHECK */\n+*** inc/unistd.h\n+--- res/unistd.h\n+***************\n+*** 1,5 ****\n+  \n+  \n+  #ifndef ALPHA_SBRK_CHECK\n+! extern char* sbrk(ptrdiff_t increment);\n+  #endif  /* ALPHA_SBRK_CHECK */\n+--- 1,5 ----\n+  \n+  \n+  #ifndef ALPHA_SBRK_CHECK\n+! extern void* sbrk(ptrdiff_t increment);\n+  #endif  /* ALPHA_SBRK_CHECK */"}]}