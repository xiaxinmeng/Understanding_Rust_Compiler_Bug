{"sha": "e8ef9fdfb9fd4b16169377a7c65309bb110a0064", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZThlZjlmZGZiOWZkNGIxNjE2OTM3N2E3YzY1MzA5YmIxMTBhMDA2NA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2018-02-27T17:26:47Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2018-02-27T17:26:47Z"}, "message": "PR c++/84489 - dependent default template argument\n\n\t* pt.c (type_unification_real): Handle early substitution failure.\n\nFrom-SVN: r258039", "tree": {"sha": "ad9af212272fe6c4dcdfb8c611671f528555e387", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ad9af212272fe6c4dcdfb8c611671f528555e387"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e8ef9fdfb9fd4b16169377a7c65309bb110a0064", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e8ef9fdfb9fd4b16169377a7c65309bb110a0064", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e8ef9fdfb9fd4b16169377a7c65309bb110a0064", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e8ef9fdfb9fd4b16169377a7c65309bb110a0064/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b1ddb654aba3859e025565c0af35d1a704c8e5d0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1ddb654aba3859e025565c0af35d1a704c8e5d0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b1ddb654aba3859e025565c0af35d1a704c8e5d0"}], "stats": {"total": 36, "additions": 29, "deletions": 7}, "files": [{"sha": "b2973d1b301779248b5bf37e4254e1d1a3da2da4", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8ef9fdfb9fd4b16169377a7c65309bb110a0064/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8ef9fdfb9fd4b16169377a7c65309bb110a0064/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=e8ef9fdfb9fd4b16169377a7c65309bb110a0064", "patch": "@@ -1,3 +1,8 @@\n+2018-02-27  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/84489 - dependent default template argument\n+\t* pt.c (type_unification_real): Handle early substitution failure.\n+\n 2018-02-26  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/84560 - ICE capturing multi-dimensional VLA."}, {"sha": "a3da40912d63645a13e75bd2f76bc546a2984d32", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 14, "deletions": 7, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8ef9fdfb9fd4b16169377a7c65309bb110a0064/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8ef9fdfb9fd4b16169377a7c65309bb110a0064/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=e8ef9fdfb9fd4b16169377a7c65309bb110a0064", "patch": "@@ -19831,21 +19831,28 @@ type_unification_real (tree tparms,\n \t    continue;\n \t  tree parm = TREE_VALUE (tparm);\n \n-\t  if (TREE_CODE (parm) == PARM_DECL\n-\t      && uses_template_parms (TREE_TYPE (parm))\n-\t      && saw_undeduced < 2)\n-\t    continue;\n+\t  tsubst_flags_t fcomplain = complain;\n+\t  if (saw_undeduced == 1)\n+\t    {\n+\t      /* When saw_undeduced == 1, substitution into parm and arg might\n+\t\t fail or not replace all template parameters, and that's\n+\t\t fine.  */\n+\t      fcomplain = tf_none;\n+\t      if (TREE_CODE (parm) == PARM_DECL\n+\t\t  && uses_template_parms (TREE_TYPE (parm)))\n+\t\tcontinue;\n+\t    }\n \n \t  tree arg = TREE_PURPOSE (tparm);\n \t  reopen_deferring_access_checks (*checks);\n \t  location_t save_loc = input_location;\n \t  if (DECL_P (parm))\n \t    input_location = DECL_SOURCE_LOCATION (parm);\n-\t  arg = tsubst_template_arg (arg, full_targs, complain, NULL_TREE);\n-\t  if (!uses_template_parms (arg))\n+\t  arg = tsubst_template_arg (arg, full_targs, fcomplain, NULL_TREE);\n+\t  if (arg != error_mark_node && !uses_template_parms (arg))\n \t    arg = convert_template_argument (parm, arg, full_targs, complain,\n \t\t\t\t\t     i, NULL_TREE);\n-\t  else if (saw_undeduced < 2)\n+\t  else if (saw_undeduced == 1)\n \t    arg = NULL_TREE;\n \t  else\n \t    arg = error_mark_node;"}, {"sha": "636bf1afd883ab720b3b598556d5cab5bde6d624", "filename": "gcc/testsuite/g++.dg/cpp0x/fntmpdefarg7.C", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8ef9fdfb9fd4b16169377a7c65309bb110a0064/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Ffntmpdefarg7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8ef9fdfb9fd4b16169377a7c65309bb110a0064/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Ffntmpdefarg7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Ffntmpdefarg7.C?ref=e8ef9fdfb9fd4b16169377a7c65309bb110a0064", "patch": "@@ -0,0 +1,10 @@\n+// PR c++/84489\n+// { dg-do compile { target c++11 } }\n+\n+template <class T = int, T N = T(), bool B = (N >> 1)>\n+T f1() {return 0;}\n+\n+int main()\n+{\n+  f1(); // Bug here\n+}"}]}