{"sha": "bdb7ddcc320793e5ea4737ebf0df156bdc5a8e87", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmRiN2RkY2MzMjA3OTNlNWVhNDczN2ViZjBkZjE1NmJkYzVhOGU4Nw==", "commit": {"author": {"name": "Oleg Endo", "email": "olegendo@gcc.gnu.org", "date": "2012-04-06T12:33:24Z"}, "committer": {"name": "Oleg Endo", "email": "olegendo@gcc.gnu.org", "date": "2012-04-06T12:33:24Z"}, "message": "sh.c (hi_const): Remove.\n\n\t* config/sh/sh.c (hi_const): Remove.\n\t(find_barrier, sh_reorg): Use satisfies_constraint_I16 instead\n\tof hi_const.\n\nFrom-SVN: r186185", "tree": {"sha": "c1cad32437613846865f9644c70f86798c929816", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c1cad32437613846865f9644c70f86798c929816"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bdb7ddcc320793e5ea4737ebf0df156bdc5a8e87", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bdb7ddcc320793e5ea4737ebf0df156bdc5a8e87", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bdb7ddcc320793e5ea4737ebf0df156bdc5a8e87", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bdb7ddcc320793e5ea4737ebf0df156bdc5a8e87/comments", "author": null, "committer": null, "parents": [{"sha": "10c17a58ae6ae5dbcd83f1ecc92db7d5001811cb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10c17a58ae6ae5dbcd83f1ecc92db7d5001811cb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/10c17a58ae6ae5dbcd83f1ecc92db7d5001811cb"}], "stats": {"total": 23, "additions": 9, "deletions": 14}, "files": [{"sha": "19bd0f6e2795c8421514fd0198628208efb7de89", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bdb7ddcc320793e5ea4737ebf0df156bdc5a8e87/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bdb7ddcc320793e5ea4737ebf0df156bdc5a8e87/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bdb7ddcc320793e5ea4737ebf0df156bdc5a8e87", "patch": "@@ -1,3 +1,9 @@\n+2012-04-06  Oleg Endo  <olegendo@gcc.gnu.org>\n+\n+\t* config/sh/sh.c (hi_const): Remove.\n+\t(find_barrier, sh_reorg): Use satisfies_constraint_I16 instead\n+\tof hi_const.\n+\n 2012-04-06  Oleg Endo  <olegendo@gcc.gnu.org>\n \n \t* config/sh/sh-protos.h (sh_expand_t_scc): Change return type from int"}, {"sha": "6088d3d45faf3c55a205c86410166c5e82431732", "filename": "gcc/config/sh/sh.c", "status": "modified", "additions": 3, "deletions": 14, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bdb7ddcc320793e5ea4737ebf0df156bdc5a8e87/gcc%2Fconfig%2Fsh%2Fsh.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bdb7ddcc320793e5ea4737ebf0df156bdc5a8e87/gcc%2Fconfig%2Fsh%2Fsh.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.c?ref=bdb7ddcc320793e5ea4737ebf0df156bdc5a8e87", "patch": "@@ -174,7 +174,6 @@ static void force_into (rtx, rtx);\n static void print_slot (rtx);\n static rtx add_constant (rtx, enum machine_mode, rtx);\n static void dump_table (rtx, rtx);\n-static int hi_const (rtx);\n static bool broken_move (rtx);\n static bool mova_p (rtx);\n static rtx find_barrier (int, rtx, rtx);\n@@ -4377,17 +4376,6 @@ dump_table (rtx start, rtx barrier)\n   pool_window_last = 0;\n }\n \n-/* Return nonzero if constant would be an ok source for a\n-   mov.w instead of a mov.l.  */\n-\n-static int\n-hi_const (rtx src)\n-{\n-  return (CONST_INT_P (src)\n-\t  && INTVAL (src) >= -32768\n-\t  && INTVAL (src) <= 32767);\n-}\n-\n #define MOVA_LABELREF(mova) XVECEXP (SET_SRC (PATTERN (mova)), 0, 0)\n \n /* Nonzero if the insn is a move instruction which needs to be fixed.  */\n@@ -4667,7 +4655,8 @@ find_barrier (int num_mova, rtx mova, rtx from)\n \t     front end will generate code to load unsigned constants into\n \t     HImode targets without properly sign extending them.  */\n \t  if (mode == HImode\n-\t      || (mode == SImode && hi_const (src) && REGNO (dst) != FPUL_REG))\n+\t      || (mode == SImode && satisfies_constraint_I16 (src)\n+\t\t  && REGNO (dst) != FPUL_REG))\n \t    {\n \t      found_hi += 2;\n \t      /* We put the short constants before the long constants, so\n@@ -5810,7 +5799,7 @@ sh_reorg (void)\n \t\t  dst = SET_DEST (pat);\n \t\t  mode = GET_MODE (dst);\n \n-\t\t  if (mode == SImode && hi_const (src)\n+\t\t  if (mode == SImode && satisfies_constraint_I16 (src)\n \t\t      && REGNO (dst) != FPUL_REG)\n \t\t    {\n \t\t      int offset = 0;"}]}