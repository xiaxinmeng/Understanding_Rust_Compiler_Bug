{"sha": "31d7c8bc2630e1b5a35ccce97ac862c4920ba582", "node_id": "C_kwDOANBUbNoAKDMxZDdjOGJjMjYzMGUxYjVhMzVjY2NlOTdhYzg2MmM0OTIwYmE1ODI", "commit": {"author": {"name": "Francois-Xavier Coudert", "email": "fxcoudert@gmail.com", "date": "2022-10-03T07:24:10Z"}, "committer": {"name": "Francois-Xavier Coudert", "email": "fxcoudert@gmail.com", "date": "2022-10-03T07:26:45Z"}, "message": "Fortran: fix testcases\n\nRemove unreliable test for IEEE_FMA(), which fails on powerpc.\nAdjust stop codes for modes_1.f90.\n\n2022-10-03  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n\ngcc/testsuite/\n\n\tPR fortran/107062\n\t* gfortran.dg/ieee/fma_1.f90: Fix test.\n\t* gfortran.dg/ieee/modes_1.f90: Fix test.", "tree": {"sha": "17b1372511f84f5e27464379f5e9c8e8c6e345c5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/17b1372511f84f5e27464379f5e9c8e8c6e345c5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/31d7c8bc2630e1b5a35ccce97ac862c4920ba582", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31d7c8bc2630e1b5a35ccce97ac862c4920ba582", "html_url": "https://github.com/Rust-GCC/gccrs/commit/31d7c8bc2630e1b5a35ccce97ac862c4920ba582", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31d7c8bc2630e1b5a35ccce97ac862c4920ba582/comments", "author": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4347fea9c28b6dc5997ef8b87e49867a071967ea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4347fea9c28b6dc5997ef8b87e49867a071967ea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4347fea9c28b6dc5997ef8b87e49867a071967ea"}], "stats": {"total": 10, "additions": 3, "deletions": 7}, "files": [{"sha": "320c73a0c3c6963e87a567e37636f1beafc0aea7", "filename": "gcc/testsuite/gfortran.dg/ieee/fma_1.f90", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31d7c8bc2630e1b5a35ccce97ac862c4920ba582/gcc%2Ftestsuite%2Fgfortran.dg%2Fieee%2Ffma_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31d7c8bc2630e1b5a35ccce97ac862c4920ba582/gcc%2Ftestsuite%2Fgfortran.dg%2Fieee%2Ffma_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fieee%2Ffma_1.f90?ref=31d7c8bc2630e1b5a35ccce97ac862c4920ba582", "patch": "@@ -38,7 +38,6 @@\n   print *, sx1 * sx2 + sx3\n   print *, ieee_fma(sx1, sx2, sx3)\n   if (ieee_fma(sx1, sx2, sx3) /= real(3, kind(sx1)) / 2) stop 4\n-  !if (ieee_fma(sx1, sx2, sx3) == sx1 * sx2 + sx3) stop 5\n \n   ! Double\n \n@@ -57,7 +56,6 @@\n   print *, dx1 * dx2 + dx3\n   print *, ieee_fma(dx1, dx2, dx3)\n   if (ieee_fma(dx1, dx2, dx3) /= real(3, kind(dx1)) / 2) stop 4\n-  !if (ieee_fma(dx1, dx2, dx3) == dx1 * dx2 + dx3) stop 5\n \n   ! Large kind 1\n \n@@ -76,7 +74,6 @@\n   print *, lx1 * lx2 + lx3\n   print *, ieee_fma(lx1, lx2, lx3)\n   if (ieee_fma(lx1, lx2, lx3) /= real(3, kind(lx1)) / 2) stop 4\n-  if (ieee_fma(lx1, lx2, lx3) == lx1 * lx2 + lx3) stop 5\n \n   ! Large kind 2\n \n@@ -95,6 +92,5 @@\n   print *, wx1 * wx2 + wx3\n   print *, ieee_fma(wx1, wx2, wx3)\n   if (ieee_fma(wx1, wx2, wx3) /= real(3, kind(wx1)) / 2) stop 4\n-  if (ieee_fma(wx1, wx2, wx3) == wx1 * wx2 + wx3) stop 5\n \n end"}, {"sha": "205c47f38007d06116289c19d6b23cf3bf83bd48", "filename": "gcc/testsuite/gfortran.dg/ieee/modes_1.f90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31d7c8bc2630e1b5a35ccce97ac862c4920ba582/gcc%2Ftestsuite%2Fgfortran.dg%2Fieee%2Fmodes_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31d7c8bc2630e1b5a35ccce97ac862c4920ba582/gcc%2Ftestsuite%2Fgfortran.dg%2Fieee%2Fmodes_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fieee%2Fmodes_1.f90?ref=31d7c8bc2630e1b5a35ccce97ac862c4920ba582", "patch": "@@ -81,15 +81,15 @@ program foo\n   ! Check again\n   if (ieee_support_underflow_control()) then\n     call ieee_get_underflow_mode(f)\n-    if (.not. f) stop 3\n+    if (.not. f) stop 4\n   endif\n   if (ieee_support_rounding(ieee_down)) then\n     call ieee_get_rounding_mode(rmode)\n-    if (rmode /= ieee_down) stop 4\n+    if (rmode /= ieee_down) stop 5\n   endif\n   if (ieee_support_halting(ieee_overflow)) then\n     call ieee_get_halting_mode(ieee_overflow, f)\n-    if (f) stop 5\n+    if (f) stop 6\n   endif\n \n end program foo"}]}