{"sha": "e1f1ee86a8b97bdf12593c02c0ef6e286f2c795d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTFmMWVlODZhOGI5N2JkZjEyNTkzYzAyYzBlZjZlMjg2ZjJjNzk1ZA==", "commit": {"author": {"name": "Douglas Gregor", "email": "dgregor@osl.iu.edu", "date": "2007-01-25T04:04:18Z"}, "committer": {"name": "Doug Gregor", "email": "dgregor@gcc.gnu.org", "date": "2007-01-25T04:04:18Z"}, "message": "c-common.h (RID_FIRST_CXX0X): New.\n\n2007-01-24  Douglas Gregor  <dgregor@osl.iu.edu>\n\n\t* c-common.h (RID_FIRST_CXX0X): New.\n\t(RID_LAST_CXX0X): New.\n\t* c-opts.c (c_common_handle_option): -Wc++0x-compat is triggered\n\tby -Wall.\n\t* c.opt (Wc++0x-compat): New.\n\t* doc/invoke.texi (-Wc++0x-compat): Document.\n\nFrom-SVN: r121162", "tree": {"sha": "de84af4a8232165347e6ae2334611e5bfa493cc7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/de84af4a8232165347e6ae2334611e5bfa493cc7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e1f1ee86a8b97bdf12593c02c0ef6e286f2c795d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1f1ee86a8b97bdf12593c02c0ef6e286f2c795d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e1f1ee86a8b97bdf12593c02c0ef6e286f2c795d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1f1ee86a8b97bdf12593c02c0ef6e286f2c795d/comments", "author": null, "committer": null, "parents": [{"sha": "54654d29cb254b75a486c33b0a2bbdbddb526f33", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54654d29cb254b75a486c33b0a2bbdbddb526f33", "html_url": "https://github.com/Rust-GCC/gccrs/commit/54654d29cb254b75a486c33b0a2bbdbddb526f33"}], "stats": {"total": 24, "additions": 22, "deletions": 2}, "files": [{"sha": "70402852f14e9b735ae9d2e76e552ab27080b0a3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1f1ee86a8b97bdf12593c02c0ef6e286f2c795d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1f1ee86a8b97bdf12593c02c0ef6e286f2c795d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e1f1ee86a8b97bdf12593c02c0ef6e286f2c795d", "patch": "@@ -1,3 +1,12 @@\n+2007-01-24  Douglas Gregor  <dgregor@osl.iu.edu>\n+\n+\t* c-common.h (RID_FIRST_CXX0X): New.\n+\t(RID_LAST_CXX0X): New.\n+\t* c-opts.c (c_common_handle_option): -Wc++0x-compat is triggered\n+\tby -Wall.\n+\t* c.opt (Wc++0x-compat): New.\n+\t* doc/invoke.texi (-Wc++0x-compat): Document.\n+\n 2007-01-24  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* builtins.c (fold_builtin_carg): New."}, {"sha": "78b3497259d6bf43ddcb7107ceedea42f04e380d", "filename": "gcc/c-common.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1f1ee86a8b97bdf12593c02c0ef6e286f2c795d/gcc%2Fc-common.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1f1ee86a8b97bdf12593c02c0ef6e286f2c795d/gcc%2Fc-common.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.h?ref=e1f1ee86a8b97bdf12593c02c0ef6e286f2c795d", "patch": "@@ -108,6 +108,8 @@ enum rid\n   RID_FIRST_MODIFIER = RID_STATIC,\n   RID_LAST_MODIFIER = RID_ONEWAY,\n \n+  RID_FIRST_CXX0X = RID_STATIC_ASSERT,\n+  RID_LAST_CXX0X = RID_STATIC_ASSERT,\n   RID_FIRST_AT = RID_AT_ENCODE,\n   RID_LAST_AT = RID_AT_IMPLEMENTATION,\n   RID_FIRST_PQ = RID_IN,"}, {"sha": "720f72d52da6523029796cc722495153be111fa9", "filename": "gcc/c-opts.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1f1ee86a8b97bdf12593c02c0ef6e286f2c795d/gcc%2Fc-opts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1f1ee86a8b97bdf12593c02c0ef6e286f2c795d/gcc%2Fc-opts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-opts.c?ref=e1f1ee86a8b97bdf12593c02c0ef6e286f2c795d", "patch": "@@ -417,6 +417,7 @@ c_common_handle_option (size_t scode, const char *arg, int value)\n \t  /* C++-specific warnings.  */\n \t  warn_reorder = value;\n \t  warn_nontemplate_friend = value;\n+          warn_cxx0x_compat = value;\n           if (value > 0)\n             warn_write_strings = true;\n \t}"}, {"sha": "6d3fa88e1fe43f9d7676fc50744a0cca6411b496", "filename": "gcc/c.opt", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1f1ee86a8b97bdf12593c02c0ef6e286f2c795d/gcc%2Fc.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1f1ee86a8b97bdf12593c02c0ef6e286f2c795d/gcc%2Fc.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc.opt?ref=e1f1ee86a8b97bdf12593c02c0ef6e286f2c795d", "patch": "@@ -132,6 +132,9 @@ Wc++-compat\n C Var(warn_cxx_compat)\n Warn about C constructs that are not in the common subset of C and C++\n \n+Wc++0x-compat\n+C++ ObjC++ Var(warn_cxx0x_compat)\n+Warn about C++ constructs whose meaning differs between ISO C++ 1998 and ISO C++ 200x\n \n Wcast-qual\n C ObjC C++ ObjC++ Var(warn_cast_qual)"}, {"sha": "18fee96e5205b13bcd6059ff22ad72950a441109", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1f1ee86a8b97bdf12593c02c0ef6e286f2c795d/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1f1ee86a8b97bdf12593c02c0ef6e286f2c795d/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=e1f1ee86a8b97bdf12593c02c0ef6e286f2c795d", "patch": "@@ -223,8 +223,8 @@ Objective-C and Objective-C++ Dialects}.\n @xref{Warning Options,,Options to Request or Suppress Warnings}.\n @gccoptlist{-fsyntax-only  -pedantic  -pedantic-errors @gol\n -w  -Wextra  -Wall  -Waggregate-return -Walways-true -Warray-bounds @gol\n--Wno-attributes -Wc++-compat -Wcast-align  -Wcast-qual  -Wchar-subscripts @gol\n--Wclobbered  -Wcomment @gol\n+-Wno-attributes -Wc++-compat -Wc++0x-compat -Wcast-align  -Wcast-qual  @gol\n+-Wchar-subscripts -Wclobbered  -Wcomment @gol\n -Wconversion  -Wno-deprecated-declarations @gol\n -Wdisabled-optimization  -Wno-div-by-zero  @gol\n -Wempty-body  -Wno-endif-labels @gol\n@@ -3149,6 +3149,11 @@ Warn about ISO C constructs that are outside of the common subset of\n ISO C and ISO C++, e.g.@: request for implicit conversion from\n @code{void *} to a pointer to non-@code{void} type.\n \n+@item -Wc++0x-compat @r{(C++ and Objective-C++ only)}\n+Warn about C++ constructs whose meaning differs between ISO C++ 1998 and\n+ISO C++ 200x, e.g., identifiers in ISO C++ 1998 that will become keywords \n+in ISO C++ 200x.  This warning is enabled by @option{-Wall}.\n+\n @item -Wcast-qual\n @opindex Wcast-qual\n Warn whenever a pointer is cast so as to remove a type qualifier from"}]}