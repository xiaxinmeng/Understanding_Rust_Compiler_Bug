{"sha": "a623b6f0116e4d8ad004fcdc665c2395eddc6953", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTYyM2I2ZjAxMTZlNGQ4YWQwMDRmY2RjNjY1YzIzOTVlZGRjNjk1Mw==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2015-05-02T17:14:25Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2015-05-02T17:14:25Z"}, "message": "iterator: New.\n\n\t* include/experimental/iterator: New. Define ostream_joiner.\n\t* include/Makefile.am: Add new header.\n\t* include/Makefile.in: Regenerate.\n\t* testsuite/experimental/iterator/make_ostream_joiner.cc: New.\n\t* testsuite/experimental/iterator/ostream_joiner.cc: New.\n\t* testsuite/experimental/iterator/requirements.cc: New.\n\t* doc/xml/manual/status_cxx2017.xml: Update status.\n\t* doc/html/manual/status.html: Regenerate.\n\nFrom-SVN: r222727", "tree": {"sha": "9c457b03d3edd9198925dfca2066624c48f127f7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9c457b03d3edd9198925dfca2066624c48f127f7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a623b6f0116e4d8ad004fcdc665c2395eddc6953", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a623b6f0116e4d8ad004fcdc665c2395eddc6953", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a623b6f0116e4d8ad004fcdc665c2395eddc6953", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a623b6f0116e4d8ad004fcdc665c2395eddc6953/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3435c26f32968345c9e2cc5f4e517f955726de1c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3435c26f32968345c9e2cc5f4e517f955726de1c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3435c26f32968345c9e2cc5f4e517f955726de1c"}], "stats": {"total": 322, "additions": 314, "deletions": 8}, "files": [{"sha": "4f5fa683e2dc87e0636f4ea56127561609e445fa", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a623b6f0116e4d8ad004fcdc665c2395eddc6953/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a623b6f0116e4d8ad004fcdc665c2395eddc6953/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=a623b6f0116e4d8ad004fcdc665c2395eddc6953", "patch": "@@ -1,5 +1,14 @@\n 2015-05-02  Jonathan Wakely  <jwakely@redhat.com>\n \n+\t* include/experimental/iterator: New. Define ostream_joiner.\n+\t* include/Makefile.am: Add new header.\n+\t* include/Makefile.in: Regenerate.\n+\t* testsuite/experimental/iterator/make_ostream_joiner.cc: New.\n+\t* testsuite/experimental/iterator/ostream_joiner.cc: New.\n+\t* testsuite/experimental/iterator/requirements.cc: New.\n+\t* doc/xml/manual/status_cxx2017.xml: Update status.\n+\t* doc/html/manual/status.html: Regenerate.\n+\n \t* include/experimental/numeric: New. Define gcd and lcm.\n \t* include/Makefile.am: Add new header.\n \t* include/Makefile.in: Regenerate."}, {"sha": "2fd0d6e99aeed89fcaf839f557fb6a7f002e2981", "filename": "libstdc++-v3/doc/html/manual/status.html", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a623b6f0116e4d8ad004fcdc665c2395eddc6953/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fstatus.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a623b6f0116e4d8ad004fcdc665c2395eddc6953/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fstatus.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fstatus.html?ref=a623b6f0116e4d8ad004fcdc665c2395eddc6953", "patch": "@@ -520,11 +520,11 @@\n \t<a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2014/n4061.pdf\" target=\"_top\">\n \t  N4061\n \t</a>\n-      </td><td align=\"left\">Greatest Common Divisor and Least Common Multiple</td><td align=\"left\">Y</td><td align=\"left\">Library Fundamentals 2 TS</td></tr><tr bgcolor=\"#C8B0B0\"><td align=\"left\">\n-\t<a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2014/n4257.html\" target=\"_top\">\n-\t  N4257\n+      </td><td align=\"left\">Greatest Common Divisor and Least Common Multiple</td><td align=\"left\">Y</td><td align=\"left\">Library Fundamentals 2 TS</td></tr><tr><td align=\"left\">\n+\t<a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2014/n4066.htm\" target=\"_top\">\n+\t  N4066\n \t</a>\n-      </td><td align=\"left\">Delimited iterators</td><td align=\"left\">N</td><td align=\"left\">Library Fundamentals 2 TS</td></tr><tr><td align=\"left\">\n+      </td><td align=\"left\">Delimited iterators</td><td align=\"left\">Y</td><td align=\"left\">Library Fundamentals 2 TS</td></tr><tr><td align=\"left\">\n \t<a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2014/n4282.pdf\" target=\"_top\">\n \t  N4282\n \t</a>"}, {"sha": "ee32a2befd8a787af117a5f51f7dad310d5114c4", "filename": "libstdc++-v3/doc/xml/manual/status_cxx2017.xml", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a623b6f0116e4d8ad004fcdc665c2395eddc6953/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fstatus_cxx2017.xml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a623b6f0116e4d8ad004fcdc665c2395eddc6953/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fstatus_cxx2017.xml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fstatus_cxx2017.xml?ref=a623b6f0116e4d8ad004fcdc665c2395eddc6953", "patch": "@@ -220,14 +220,13 @@ not in any particular release.\n     </row>\n \n     <row>\n-      <?dbhtml bgcolor=\"#C8B0B0\" ?>\n       <entry>\n-\t<link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2014/n4257.html\">\n-\t  N4257\n+\t<link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2014/n4066.htm\">\n+\t  N4066\n \t</link>\n       </entry>\n       <entry>Delimited iterators</entry>\n-      <entry>N</entry>\n+      <entry>Y</entry>\n       <entry>Library Fundamentals 2 TS</entry>\n     </row>\n "}, {"sha": "06a4805ae5757f7097a77326d3abfdb5c57a0ac2", "filename": "libstdc++-v3/include/Makefile.am", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a623b6f0116e4d8ad004fcdc665c2395eddc6953/libstdc%2B%2B-v3%2Finclude%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a623b6f0116e4d8ad004fcdc665c2395eddc6953/libstdc%2B%2B-v3%2Finclude%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2FMakefile.am?ref=a623b6f0116e4d8ad004fcdc665c2395eddc6953", "patch": "@@ -651,6 +651,7 @@ experimental_headers = \\\n \t${experimental_srcdir}/erase_if.h \\\n \t${experimental_srcdir}/forward_list \\\n \t${experimental_srcdir}/functional \\\n+\t${experimental_srcdir}/iterator \\\n \t${experimental_srcdir}/list \\\n \t${experimental_srcdir}/map \\\n \t${experimental_srcdir}/memory \\"}, {"sha": "19e4b8e2697733368974dfb65af2dd8b1da8cd08", "filename": "libstdc++-v3/include/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a623b6f0116e4d8ad004fcdc665c2395eddc6953/libstdc%2B%2B-v3%2Finclude%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a623b6f0116e4d8ad004fcdc665c2395eddc6953/libstdc%2B%2B-v3%2Finclude%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2FMakefile.in?ref=a623b6f0116e4d8ad004fcdc665c2395eddc6953", "patch": "@@ -918,6 +918,7 @@ experimental_headers = \\\n \t${experimental_srcdir}/erase_if.h \\\n \t${experimental_srcdir}/forward_list \\\n \t${experimental_srcdir}/functional \\\n+\t${experimental_srcdir}/iterator \\\n \t${experimental_srcdir}/list \\\n \t${experimental_srcdir}/map \\\n \t${experimental_srcdir}/memory \\"}, {"sha": "027043a9a45cd42a7fe210b860499d3eb00c07c7", "filename": "libstdc++-v3/include/experimental/iterator", "status": "added", "additions": 127, "deletions": 0, "changes": 127, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a623b6f0116e4d8ad004fcdc665c2395eddc6953/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fiterator", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a623b6f0116e4d8ad004fcdc665c2395eddc6953/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fiterator", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fiterator?ref=a623b6f0116e4d8ad004fcdc665c2395eddc6953", "patch": "@@ -0,0 +1,127 @@\n+// <experimental/iterator> -*- C++ -*-\n+\n+// Copyright (C) 2015 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// Under Section 7 of GPL version 3, you are granted additional\n+// permissions described in the GCC Runtime Library Exception, version\n+// 3.1, as published by the Free Software Foundation.\n+\n+// You should have received a copy of the GNU General Public License and\n+// a copy of the GCC Runtime Library Exception along with this program;\n+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+// <http://www.gnu.org/licenses/>.\n+\n+/** @file experimental/iterator\n+ *  This is a TS C++ Library header.\n+ */\n+\n+//\n+// N4336 Working Draft, C++ Extensions for Library Fundamentals, Version 2\n+//\n+\n+#ifndef _GLIBCXX_EXPERIMENTAL_ITERATOR\n+#define _GLIBCXX_EXPERIMENTAL_ITERATOR 1\n+\n+#pragma GCC system_header\n+\n+#if __cplusplus <= 201103L\n+# include <bits/c++14_warning.h>\n+#else\n+\n+#include <experimental/type_traits>\n+#include <iosfwd>\n+#include <bits/move.h>\n+#include <bits/stl_iterator_base_types.h>\n+\n+namespace std _GLIBCXX_VISIBILITY(default)\n+{\n+namespace experimental\n+{\n+inline namespace fundamentals_v2\n+{\n+_GLIBCXX_BEGIN_NAMESPACE_VERSION\n+\n+#define __cpp_lib_experimental_ostream_joiner 201411\n+\n+  /// Output iterator that inserts a delimiter between elements.\n+  template<typename _DelimT, typename _CharT = char,\n+\t   typename _Traits = char_traits<_CharT>>\n+  class ostream_joiner\n+  {\n+  public:\n+    typedef _CharT\t\t\t\tchar_type;\n+    typedef _Traits\t\t\t\ttraits_type;\n+    typedef basic_ostream<_CharT, _Traits>\tostream_type;\n+    typedef output_iterator_tag\t\t\titerator_category;\n+    typedef void\t\t\t\tvalue_type;\n+    typedef void\t\t\t\tdifference_type;\n+    typedef void\t\t\t\tpointer;\n+    typedef void\t\t\t\treference;\n+\n+    ostream_joiner(ostream_type& __os, const _DelimT& __delimiter)\n+    noexcept(is_nothrow_copy_constructible_v<_DelimT>)\n+    : _M_out(std::__addressof(__os)), _M_delim(__delimiter)\n+    { }\n+\n+    ostream_joiner(ostream_type& __os, _DelimT&& __delimiter)\n+    noexcept(is_nothrow_move_constructible_v<_DelimT>)\n+    : _M_out(std::__addressof(__os)), _M_delim(std::move(__delimiter))\n+    { }\n+\n+    template<typename _Tp>\n+      ostream_joiner<_DelimT, _CharT, _Traits>&\n+      operator=(const _Tp& __value)\n+      {\n+\tif (!_M_first)\n+\t  *_M_out << _M_delim;\n+\t_M_first = false;\n+\t*_M_out << __value;\n+\treturn *this;\n+      }\n+\n+    ostream_joiner<_DelimT, _CharT, _Traits>&\n+    operator*() noexcept\n+    { return *this; }\n+\n+    ostream_joiner<_DelimT, _CharT, _Traits>&\n+    operator++() noexcept\n+    { return *this; }\n+\n+    ostream_joiner<_DelimT, _CharT, _Traits>&\n+    operator++(int) noexcept\n+    { return *this; }\n+\n+  private:\n+    basic_ostream<_CharT, _Traits>* _M_out;\n+    _DelimT _M_delim;\n+    bool _M_first = true;\n+  };\n+\n+  /// Object generator for ostream_joiner.\n+  template<typename _CharT, typename _Traits, typename _DelimT>\n+    inline ostream_joiner<decay_t<_DelimT>, _CharT, _Traits>\n+    make_ostream_joiner(basic_ostream<_CharT, _Traits>& __os,\n+\t\t\t_DelimT&& __delimiter)\n+    {\n+      return { __os, std::forward<_DelimT>(__delimiter) };\n+    }\n+\n+_GLIBCXX_END_NAMESPACE_VERSION\n+} // namespace fundamentals_v2\n+} // namespace experimental\n+} // namespace std\n+\n+#endif // __cplusplus <= 201103L\n+\n+#endif // _GLIBCXX_EXPERIMENTAL_ITERATOR"}, {"sha": "76d3a974f45ebdc6c566d53d64293ac14d16991b", "filename": "libstdc++-v3/testsuite/experimental/iterator/make_ostream_joiner.cc", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a623b6f0116e4d8ad004fcdc665c2395eddc6953/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fiterator%2Fmake_ostream_joiner.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a623b6f0116e4d8ad004fcdc665c2395eddc6953/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fiterator%2Fmake_ostream_joiner.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fiterator%2Fmake_ostream_joiner.cc?ref=a623b6f0116e4d8ad004fcdc665c2395eddc6953", "patch": "@@ -0,0 +1,38 @@\n+// Copyright (C) 2015 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-options \"-std=gnu++14\" }\n+\n+#include <experimental/iterator>\n+#include <sstream>\n+#include <testsuite_hooks.h>\n+\n+void\n+test01()\n+{\n+  std::ostringstream os;\n+  auto joiner = std::experimental::make_ostream_joiner(os, \"...\");\n+  for (int i : { 1, 2, 3, 4, 5 })\n+    *joiner++ = i;\n+  VERIFY( os.str() == \"1...2...3...4...5\" );\n+}\n+\n+int\n+main()\n+{\n+  test01();\n+}"}, {"sha": "c78dbe66d870287e0e2622d5077200b6a7cf39b2", "filename": "libstdc++-v3/testsuite/experimental/iterator/ostream_joiner.cc", "status": "added", "additions": 73, "deletions": 0, "changes": 73, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a623b6f0116e4d8ad004fcdc665c2395eddc6953/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fiterator%2Fostream_joiner.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a623b6f0116e4d8ad004fcdc665c2395eddc6953/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fiterator%2Fostream_joiner.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fiterator%2Fostream_joiner.cc?ref=a623b6f0116e4d8ad004fcdc665c2395eddc6953", "patch": "@@ -0,0 +1,73 @@\n+// Copyright (C) 2015 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-options \"-std=gnu++14\" }\n+\n+#include <experimental/iterator>\n+#include <sstream>\n+#include <testsuite_hooks.h>\n+\n+#ifndef __cpp_lib_experimental_ostream_joiner\n+# error Feature-test macro is not defined.\n+#elif __cpp_lib_experimental_ostream_joiner < 201411\n+# error Feature-test macro has bad value.\n+#endif\n+\n+using std::experimental::ostream_joiner;\n+\n+void\n+test01()\n+{\n+  std::ostringstream os;\n+  ostream_joiner<int> joiner{os, 9};\n+  for (int i : { 1, 2, 3, 4, 5 })\n+    *joiner++ = i;\n+  VERIFY( os.str() == \"192939495\" );\n+}\n+\n+void\n+test02()\n+{\n+  std::ostringstream os;\n+  ostream_joiner<char> joiner{os, ','};\n+  for (int i : { 1, 2, 3, 4, 5 })\n+  {\n+    *joiner = i;\n+    ++joiner;\n+  }\n+  VERIFY( os.str() == \"1,2,3,4,5\" );\n+}\n+\n+void\n+test03()\n+{\n+#if _GLIBCXX_USE_WCHAR_T\n+  std::wostringstream os;\n+  ostream_joiner<wchar_t, wchar_t> joiner{os, L','};\n+  for (int i : { 1, 2, 3, 4, 5 })\n+    *joiner++ = i;\n+  VERIFY( os.str() == L\"1,2,3,4,5\" );\n+#endif\n+}\n+\n+int\n+main()\n+{\n+  test01();\n+  test02();\n+  test03();\n+}"}, {"sha": "54a7f8e95df9331564ca94479fc5016f369a0225", "filename": "libstdc++-v3/testsuite/experimental/iterator/requirements.cc", "status": "added", "additions": 58, "deletions": 0, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a623b6f0116e4d8ad004fcdc665c2395eddc6953/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fiterator%2Frequirements.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a623b6f0116e4d8ad004fcdc665c2395eddc6953/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fiterator%2Frequirements.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Fiterator%2Frequirements.cc?ref=a623b6f0116e4d8ad004fcdc665c2395eddc6953", "patch": "@@ -0,0 +1,58 @@\n+// Copyright (C) 2015 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-options \"-std=gnu++14\" }\n+// { dg-do compile }\n+\n+// This is a compile-only test with minimal includes\n+#include <experimental/iterator>\n+#include <iosfwd>\n+\n+using namespace std::experimental;\n+\n+template<typename Delim, typename Char>\n+struct tester\n+{\n+  using joiner_type = ostream_joiner<Delim, Char>;\n+  using ostream_type = std::basic_ostream<Char>;\n+  using test_type = decltype(make_ostream_joiner(std::declval<ostream_type&>(),\n+                                                 std::declval<Delim>()));\n+\n+  static_assert(is_same_v<test_type, joiner_type>, \"\");\n+\n+  static_assert(is_same_v<typename test_type::char_type, Char>, \"\");\n+\n+  static_assert(is_same_v<typename test_type::traits_type,\n+                          std::char_traits<Char>>, \"\");\n+\n+  static_assert(is_same_v<typename test_type::ostream_type, ostream_type>, \"\");\n+\n+  static_assert(is_same_v<typename test_type::iterator_category,\n+                          std::output_iterator_tag>, \"\");\n+\n+  static_assert(is_same_v<typename test_type::value_type,        void>, \"\");\n+  static_assert(is_same_v<typename test_type::difference_type,   void>, \"\");\n+  static_assert(is_same_v<typename test_type::pointer,           void>, \"\");\n+  static_assert(is_same_v<typename test_type::reference,         void>, \"\");\n+};\n+\n+tester<char, char> cc;\n+tester<int, char> ic;\n+#if _GLIBCXX_USE_WCHAR_T\n+tester<wchar_t, wchar_t> ww;\n+tester<int, wchar_t> iw;\n+#endif"}]}