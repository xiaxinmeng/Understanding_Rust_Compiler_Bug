{"sha": "b4ee650946b829b12e06a439f00c8d67d3caeed6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjRlZTY1MDk0NmI4MjliMTJlMDZhNDM5ZjAwYzhkNjdkM2NhZWVkNg==", "commit": {"author": {"name": "Thomas Preud'homme", "email": "thomas.preudhomme@linaro.org", "date": "2018-10-04T07:55:02Z"}, "committer": {"name": "Thomas Preud'homme", "email": "thopre01@gcc.gnu.org", "date": "2018-10-04T07:55:02Z"}, "message": "Never reload fixed form constraints memory operand\n\nThe unconditional reload of address operand for recognized instruction\nin process_address_1 prevent the patch fixing PR85434 from working as\nexpected. The code in that patch attempts to control which registers are\nused to make PIC access but the reload performed by process_address_1\nwill use generic PIC access. This patch removes the test for the\ninstruction to be unrecognized to do the reload, thus always avoiding to\nreload address operand for fixed constraints (such as \"X\" used in the\npatch).\n\n2018-10-04  Thomas Preud'homme  <thomas.preudhomme@linaro.org>\n\n    gcc/\n    * lra-constraints.c (process_address_1): Bail out for all\n    satisfied fixed constraints.\n\nFrom-SVN: r264834", "tree": {"sha": "a7e6db5b4f4bd548cd636166bdd968cb5c08fd05", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a7e6db5b4f4bd548cd636166bdd968cb5c08fd05"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b4ee650946b829b12e06a439f00c8d67d3caeed6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4ee650946b829b12e06a439f00c8d67d3caeed6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b4ee650946b829b12e06a439f00c8d67d3caeed6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4ee650946b829b12e06a439f00c8d67d3caeed6/comments", "author": {"login": "tpreudhomme-linaro", "id": 43454833, "node_id": "MDQ6VXNlcjQzNDU0ODMz", "avatar_url": "https://avatars.githubusercontent.com/u/43454833?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tpreudhomme-linaro", "html_url": "https://github.com/tpreudhomme-linaro", "followers_url": "https://api.github.com/users/tpreudhomme-linaro/followers", "following_url": "https://api.github.com/users/tpreudhomme-linaro/following{/other_user}", "gists_url": "https://api.github.com/users/tpreudhomme-linaro/gists{/gist_id}", "starred_url": "https://api.github.com/users/tpreudhomme-linaro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tpreudhomme-linaro/subscriptions", "organizations_url": "https://api.github.com/users/tpreudhomme-linaro/orgs", "repos_url": "https://api.github.com/users/tpreudhomme-linaro/repos", "events_url": "https://api.github.com/users/tpreudhomme-linaro/events{/privacy}", "received_events_url": "https://api.github.com/users/tpreudhomme-linaro/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0863decda9aef33b8073c13f6d27826b881e6280", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0863decda9aef33b8073c13f6d27826b881e6280", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0863decda9aef33b8073c13f6d27826b881e6280"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "d8fafe03bcebba3c750469060750095f5a77f1a3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4ee650946b829b12e06a439f00c8d67d3caeed6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4ee650946b829b12e06a439f00c8d67d3caeed6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b4ee650946b829b12e06a439f00c8d67d3caeed6", "patch": "@@ -1,3 +1,8 @@\n+2018-10-04  Thomas Preud'homme  <thomas.preudhomme@linaro.org>\n+\n+\t* lra-constraints.c (process_address_1): Bail out for all\n+\tsatisfied fixed constraints.\n+\n 2018-10-03  Jeff Law  <law@redhat.com>\n \n         * gimple-ssa-sprintf.c (format_string): Do not hardcode size of"}, {"sha": "c3edd9ef45d5d4b00a9ee3ec9d9145236e7cf3cf", "filename": "gcc/lra-constraints.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4ee650946b829b12e06a439f00c8d67d3caeed6/gcc%2Flra-constraints.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4ee650946b829b12e06a439f00c8d67d3caeed6/gcc%2Flra-constraints.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flra-constraints.c?ref=b4ee650946b829b12e06a439f00c8d67d3caeed6", "patch": "@@ -3243,8 +3243,7 @@ process_address_1 (int nop, bool check_only_p,\n   /* Do not attempt to decompose arbitrary addresses generated by combine\n      for asm operands with loose constraints, e.g 'X'.  */\n   else if (MEM_P (op)\n-\t   && !(INSN_CODE (curr_insn) < 0\n-\t\t&& get_constraint_type (cn) == CT_FIXED_FORM\n+\t   && !(get_constraint_type (cn) == CT_FIXED_FORM\n \t        && constraint_satisfied_p (op, cn)))\n     decompose_mem_address (&ad, op);\n   else if (GET_CODE (op) == SUBREG"}]}