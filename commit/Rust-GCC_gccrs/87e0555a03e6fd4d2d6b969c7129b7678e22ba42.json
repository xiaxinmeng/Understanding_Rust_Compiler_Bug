{"sha": "87e0555a03e6fd4d2d6b969c7129b7678e22ba42", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODdlMDU1NWEwM2U2ZmQ0ZDJkNmI5NjljNzEyOWI3Njc4ZTIyYmE0Mg==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2010-11-22T19:56:25Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2010-11-22T19:56:25Z"}, "message": "Add check for ENABLE_CHECKING,\n\n2010-11-22  H.J. Lu  <hongjiu.lu@intel.com>\n\n\tPR bootstrap/46609\n\t* gengtype.c (header_dot_h_frul): Check ENABLE_CHECKING.\n\t(source_dot_c_frul): Likewise.\n\nFrom-SVN: r167049", "tree": {"sha": "3161006cacf2b8fa91927ce3a42c13c03929cd5f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3161006cacf2b8fa91927ce3a42c13c03929cd5f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/87e0555a03e6fd4d2d6b969c7129b7678e22ba42", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/87e0555a03e6fd4d2d6b969c7129b7678e22ba42", "html_url": "https://github.com/Rust-GCC/gccrs/commit/87e0555a03e6fd4d2d6b969c7129b7678e22ba42", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/87e0555a03e6fd4d2d6b969c7129b7678e22ba42/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a954677191450e00b53f8be75ab891052caea7ad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a954677191450e00b53f8be75ab891052caea7ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a954677191450e00b53f8be75ab891052caea7ad"}], "stats": {"total": 15, "additions": 14, "deletions": 1}, "files": [{"sha": "e16b8e7180c19877dfe02049abe726f13752baf8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87e0555a03e6fd4d2d6b969c7129b7678e22ba42/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87e0555a03e6fd4d2d6b969c7129b7678e22ba42/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=87e0555a03e6fd4d2d6b969c7129b7678e22ba42", "patch": "@@ -1,3 +1,9 @@\n+2010-11-22  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR bootstrap/46609\n+\t* gengtype.c (header_dot_h_frul): Check ENABLE_CHECKING.\n+\t(source_dot_c_frul): Likewise.\n+\n 2010-11-22  Basile Starynkevitch  <basile@starynkevitch.net>\n \n \t* gimple-pretty-print.c (dump_bb_header): Add check for cfun."}, {"sha": "ab7791ff324bbffbd915a7042dab2a027295cff6", "filename": "gcc/gengtype.c", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87e0555a03e6fd4d2d6b969c7129b7678e22ba42/gcc%2Fgengtype.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87e0555a03e6fd4d2d6b969c7129b7678e22ba42/gcc%2Fgengtype.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgengtype.c?ref=87e0555a03e6fd4d2d6b969c7129b7678e22ba42", "patch": "@@ -1863,16 +1863,21 @@ struct file_rule_st files_rules[] = {\n    \"gtype-desc.c\" for common headers and corresponding output\n    files for language-specific header files.  */\n static outf_p\n-header_dot_h_frul (input_file* inpf, char**poutname, char**pforname)\n+header_dot_h_frul (input_file* inpf, char**poutname,\n+\t\t   char**pforname ATTRIBUTE_UNUSED)\n {\n   const char *basename = 0;\n   int lang_index = 0;\n+#if ENABLE_CHECKING\n   const char *inpname = get_input_file_name (inpf);\n   DBGPRINTF (\"inpf %p inpname %s outname %s forname %s\",\n \t     (void*) inpf, inpname, *poutname, *pforname);\n+#endif\n   basename = get_file_basename (inpf);\n   lang_index = get_prefix_langdir_index (basename);\n+#if ENABLE_CHECKING\n   DBGPRINTF (\"basename %s lang_index %d\", basename, lang_index);\n+#endif\n \n   if (lang_index >= 0)\n     {\n@@ -1907,11 +1912,13 @@ source_dot_c_frul (input_file* inpf, char**poutname, char**pforname)\n {\n   char *newbasename = CONST_CAST (char*, get_file_basename (inpf));\n   char *newoutname = CONST_CAST (char*, get_file_gtfilename (inpf));\n+#if ENABLE_CHECKING\n   const char *inpname = get_input_file_name (inpf);\n   DBGPRINTF (\"inpf %p inpname %s original outname %s forname %s\",\n \t     (void*) inpf, inpname, *poutname, *pforname);\n   DBGPRINTF (\"newoutname %s\", newoutname);\n   DBGPRINTF (\"newbasename %s\", newbasename);\n+#endif\n   free (*poutname);\n   free (*pforname);\n   *poutname = newoutname;"}]}