{"sha": "cca643862ddb1f61f200b567c667576d39961fb2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2NhNjQzODYyZGRiMWY2MWYyMDBiNTY3YzY2NzU3NmQzOTk2MWZiMg==", "commit": {"author": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2007-03-24T14:17:34Z"}, "committer": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2007-03-24T14:17:34Z"}, "message": "re PR fortran/31215 (ICE on valid code with gfortran)\n\n2007-03-24  Paul Thomas  <pault@gcc.gnu.org>\n\n\tPR fortran/31215\n\t* trans-expr.c (gfc_apply_interface_mapping_to_expr): Return\n\tint result that is non-zero if the expression is the function\n\tresult.  Only the characteristics of the result expression\n\tcan be used in a procedure interface, so simplify LEN in situ\n\tusing its character length.\n\n\tPR fortran/31219\n\tPR fortran/31200\n\t* trans-expr.c (gfc_conv_function_call): Do not use\n\tgfc_conv_expr_reference for actual pointer function with formal\n\ttarget because a temporary is created that does not transfer\n\tthe reference correctly.  Do not indirect formal pointer\n\tfunctions since it is the function reference that is needed.\n\n2007-03-24  Paul Thomas  <pault@gcc.gnu.org>\n\n\tPR fortran/31219\n\t* gfortran.dg/pointer_function_actual_1.f90: New test.\n\n\tPR fortran/31200\n\t* gfortran.dg/pointer_function_actual_2.f90: New test.\n\n\tPR fortran/31215\n\t* gfortran.dg/result_in_spec_1.f90: New test.\n\nFrom-SVN: r123184", "tree": {"sha": "5d90c02adec7cdecf23098f0c6826986bf7eb6bb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5d90c02adec7cdecf23098f0c6826986bf7eb6bb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cca643862ddb1f61f200b567c667576d39961fb2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cca643862ddb1f61f200b567c667576d39961fb2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cca643862ddb1f61f200b567c667576d39961fb2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cca643862ddb1f61f200b567c667576d39961fb2/comments", "author": null, "committer": null, "parents": [{"sha": "6a661315c2e9581727c969320d335da82dbd4829", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a661315c2e9581727c969320d335da82dbd4829", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a661315c2e9581727c969320d335da82dbd4829"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "99c67fc6764a9209e2571edc540df9346c09875a", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cca643862ddb1f61f200b567c667576d39961fb2/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cca643862ddb1f61f200b567c667576d39961fb2/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=cca643862ddb1f61f200b567c667576d39961fb2", "patch": "@@ -7,7 +7,7 @@\n \tcan be used in a procedure interface, so simplify LEN in situ\n \tusing its character length.\n \n-\tPR fortran/31219\n+\tPR fortran/31209\n \tPR fortran/31200\n \t* trans-expr.c (gfc_conv_function_call): Do not use\n \tgfc_conv_expr_reference for actual pointer function with formal"}, {"sha": "b5049ac182319fa88eba80137fab2111be7f9b9e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cca643862ddb1f61f200b567c667576d39961fb2/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cca643862ddb1f61f200b567c667576d39961fb2/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=cca643862ddb1f61f200b567c667576d39961fb2", "patch": "@@ -1,6 +1,6 @@\n 2007-03-24  Paul Thomas  <pault@gcc.gnu.org>\n \n-\tPR fortran/31219\n+\tPR fortran/31209\n \t* gfortran.dg/pointer_function_actual_1.f90: New test.\n \n \tPR fortran/31200"}, {"sha": "b3cb2727007cb894d745578ac904271b0ecd8204", "filename": "gcc/testsuite/gfortran.dg/pointer_function_actual_1.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cca643862ddb1f61f200b567c667576d39961fb2/gcc%2Ftestsuite%2Fgfortran.dg%2Fpointer_function_actual_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cca643862ddb1f61f200b567c667576d39961fb2/gcc%2Ftestsuite%2Fgfortran.dg%2Fpointer_function_actual_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpointer_function_actual_1.f90?ref=cca643862ddb1f61f200b567c667576d39961fb2", "patch": "@@ -1,5 +1,5 @@\n ! { dg-do run }\n-! Tests the fix for PR31219, in which an ICE would result because\n+! Tests the fix for PR31209, in which an ICE would result because\n ! the reference to the pointer function f would be indirected, as\n ! if it were the result that is being passed.\n !"}]}