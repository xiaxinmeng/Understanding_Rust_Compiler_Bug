{"sha": "f3403757ec3409d713ace35f9ff07988667560ac", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjM0MDM3NTdlYzM0MDlkNzEzYWNlMzVmOWZmMDc5ODg2Njc1NjBhYw==", "commit": {"author": {"name": "John David Anglin", "email": "dave@hiauly1.hia.nrc.ca", "date": "2001-09-24T16:30:28Z"}, "committer": {"name": "John David Anglin", "email": "danglin@gcc.gnu.org", "date": "2001-09-24T16:30:28Z"}, "message": "som.h (ASM_OUTPUT_EXTERNAL): Improve formatting.\n\n\t* som.h (ASM_OUTPUT_EXTERNAL): Improve formatting.\n\t(ASM_OUTPUT_EXTERNAL_LIBCALL): Only generate a .IMPORT statement for\n\tthe libcall if there isn't a referenced identifier for the symbol.\n\nFrom-SVN: r45777", "tree": {"sha": "b06e7c8820f44a68ca39ebd1ec45fea1e2ce38e6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b06e7c8820f44a68ca39ebd1ec45fea1e2ce38e6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f3403757ec3409d713ace35f9ff07988667560ac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f3403757ec3409d713ace35f9ff07988667560ac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f3403757ec3409d713ace35f9ff07988667560ac", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f3403757ec3409d713ace35f9ff07988667560ac/comments", "author": null, "committer": null, "parents": [{"sha": "8e1494b72c6ee911ae8db9584b5bb180538b7c0c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e1494b72c6ee911ae8db9584b5bb180538b7c0c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8e1494b72c6ee911ae8db9584b5bb180538b7c0c"}], "stats": {"total": 29, "additions": 23, "deletions": 6}, "files": [{"sha": "982fc5a95f95fbfc4fb0db5c7a9a757680765ed5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3403757ec3409d713ace35f9ff07988667560ac/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3403757ec3409d713ace35f9ff07988667560ac/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f3403757ec3409d713ace35f9ff07988667560ac", "patch": "@@ -1,3 +1,9 @@\n+2001-09-24  John David Anglin  <dave@hiauly1.hia.nrc.ca>\n+\n+\t* som.h (ASM_OUTPUT_EXTERNAL): Improve formatting.\n+\t(ASM_OUTPUT_EXTERNAL_LIBCALL): Only generate a .IMPORT statement for\n+\tthe libcall if there isn't a referenced identifier for the symbol.\n+\n 2001-09-24  John David Anglin  <dave@hiauly1.hia.nrc.ca>\n \n \t* pa.h (TRAMPOLINE_TEMPLATE): Add two words to the template for"}, {"sha": "7ce97ef05fab7c643708257565033b908d72a7e3", "filename": "gcc/config/pa/som.h", "status": "modified", "additions": 17, "deletions": 6, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3403757ec3409d713ace35f9ff07988667560ac/gcc%2Fconfig%2Fpa%2Fsom.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3403757ec3409d713ace35f9ff07988667560ac/gcc%2Fconfig%2Fpa%2Fsom.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fsom.h?ref=f3403757ec3409d713ace35f9ff07988667560ac", "patch": "@@ -312,8 +312,8 @@ readonly_data ()\t\t\t\t\t\t\t\\\n #define ASM_OUTPUT_EXTERNAL(FILE, DECL, NAME)\t\\\n   do { int save_referenced;\t\t\t\t\t\\\n        save_referenced = TREE_SYMBOL_REFERENCED (DECL_ASSEMBLER_NAME (DECL)); \\\n-       fputs (\"\\t.IMPORT \", FILE);\t\t\t\t\t\\\n-\t assemble_name (FILE, NAME);\t\t\t\t\\\n+       fputs (\"\\t.IMPORT \", FILE);\t\t\t\t\\\n+       assemble_name (FILE, NAME);\t\t\t\t\\\n        if (FUNCTION_NAME_P (NAME))     \t\t\t\t\\\n \t fputs (\",CODE\\n\", FILE);\t\t\t\t\\\n        else\t\t\t\t\t\t\t\\\n@@ -327,14 +327,25 @@ readonly_data ()\t\t\t\t\t\t\t\\\n \n    Also note not all libcall names are passed to ENCODE_SECTION_INFO\n    (__main for example).  To make sure all libcall names have section\n-   info recorded in them, we do it here.  */\n+   info recorded in them, we do it here.  We must also ensure that\n+   we don't import a libcall that has been previously exported since\n+   the HP assembler may change an ENTRY symbol to a CODE symbol.  */\n \n #define ASM_OUTPUT_EXTERNAL_LIBCALL(FILE, RTL) \\\n-  do { fputs (\"\\t.IMPORT \", FILE);\t\t\t\t\t\\\n+  do { const char *name;\t\t\t\t\t\t\\\n+       tree id;\t\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n        if (!function_label_operand (RTL, VOIDmode))\t\t\t\\\n \t hppa_encode_label (RTL);\t\t\t\t\t\\\n-       assemble_name (FILE, XSTR ((RTL), 0));\t\t       \t\t\\\n-       fputs (\",CODE\\n\", FILE);\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+       STRIP_NAME_ENCODING (name, XSTR ((RTL), 0));\t\t\t\\\n+       id = maybe_get_identifier (name);\t\t\t\t\\\n+       if (! id || ! TREE_SYMBOL_REFERENCED (id))\t\t\t\\\n+\t {\t\t\t\t\t\t\t\t\\\n+\t   fputs (\"\\t.IMPORT \", FILE);\t\t\t\t\t\\\n+\t   assemble_name (FILE, XSTR ((RTL), 0));\t\t       \t\\\n+\t   fputs (\",CODE\\n\", FILE);\t\t\t\t\t\\\n+\t }\t\t\t\t\t\t\t\t\\\n      } while (0)\n \n #define ASM_FILE_END(FILE) output_deferred_plabels (FILE)"}]}