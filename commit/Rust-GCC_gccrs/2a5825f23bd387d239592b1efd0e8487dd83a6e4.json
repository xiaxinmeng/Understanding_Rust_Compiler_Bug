{"sha": "2a5825f23bd387d239592b1efd0e8487dd83a6e4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmE1ODI1ZjIzYmQzODdkMjM5NTkyYjFlZmQwZTg0ODdkZDgzYTZlNA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2016-06-15T09:53:07Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2016-06-15T09:53:07Z"}, "message": "tree-vect-data-refs.c (vect_analyze_data_ref_dependence): Do not consider dependences between accesses that belong to the same group.\n\n2016-06-15  Richard Biener  <rguenther@suse.de>\n\n\t* tree-vect-data-refs.c (vect_analyze_data_ref_dependence): Do\n\tnot consider dependences between accesses that belong to the\n\tsame group.\n\t(vect_analyze_data_ref_dependences): Do not analyze read-read\n\tor self-dependences.\n\n\t* gcc.dg/vect/bb-slp-pattern-2.c: Disable loop vectorization.\n\nFrom-SVN: r237473", "tree": {"sha": "da2f3f83973a4810eacabc13cc0758a10d50673a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/da2f3f83973a4810eacabc13cc0758a10d50673a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2a5825f23bd387d239592b1efd0e8487dd83a6e4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a5825f23bd387d239592b1efd0e8487dd83a6e4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2a5825f23bd387d239592b1efd0e8487dd83a6e4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a5825f23bd387d239592b1efd0e8487dd83a6e4/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6a3f203c3cc8e0f0757f7ed038b3cb34063936ba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a3f203c3cc8e0f0757f7ed038b3cb34063936ba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a3f203c3cc8e0f0757f7ed038b3cb34063936ba"}], "stats": {"total": 21, "additions": 20, "deletions": 1}, "files": [{"sha": "f593bd52b706647de82d1dfb16dcb2fe4f74c8e4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a5825f23bd387d239592b1efd0e8487dd83a6e4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a5825f23bd387d239592b1efd0e8487dd83a6e4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2a5825f23bd387d239592b1efd0e8487dd83a6e4", "patch": "@@ -1,3 +1,11 @@\n+2016-06-15  Richard Biener  <rguenther@suse.de>\n+\n+\t* tree-vect-data-refs.c (vect_analyze_data_ref_dependence): Do\n+\tnot consider dependences between accesses that belong to the\n+\tsame group.\n+\t(vect_analyze_data_ref_dependences): Do not analyze read-read\n+\tor self-dependences.\n+\n 2016-06-14  David Malcolm  <dmalcolm@redhat.com>\n \n \t* spellcheck-tree.c: Include spellcheck-tree.h rather than"}, {"sha": "3eaaa91b03354b2224ebd9f7b402d1dc51b6e840", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a5825f23bd387d239592b1efd0e8487dd83a6e4/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a5825f23bd387d239592b1efd0e8487dd83a6e4/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2a5825f23bd387d239592b1efd0e8487dd83a6e4", "patch": "@@ -1,3 +1,7 @@\n+2016-06-15  Richard Biener  <rguenther@suse.de>\n+\n+\t* gcc.dg/vect/bb-slp-pattern-2.c: Disable loop vectorization.\n+\n 2016-06-14  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n \n \t* gcc.target/powerpc/vsx-elemrev-2.c: Change effective target"}, {"sha": "d32cb758591bf86f32f97a30977347908ec61559", "filename": "gcc/testsuite/gcc.dg/vect/bb-slp-pattern-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a5825f23bd387d239592b1efd0e8487dd83a6e4/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-pattern-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a5825f23bd387d239592b1efd0e8487dd83a6e4/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-pattern-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fbb-slp-pattern-2.c?ref=2a5825f23bd387d239592b1efd0e8487dd83a6e4", "patch": "@@ -1,4 +1,5 @@\n /* { dg-require-effective-target vect_condition } */\n+/* { dg-additional-options \"-fno-tree-vectorize -ftree-slp-vectorize -ftree-loop-if-convert\" } */\n \n #include \"tree-vect.h\"\n "}, {"sha": "0ab8e6bf7f3a163da57b85bf83532ecffff98a10", "filename": "gcc/tree-vect-data-refs.c", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a5825f23bd387d239592b1efd0e8487dd83a6e4/gcc%2Ftree-vect-data-refs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a5825f23bd387d239592b1efd0e8487dd83a6e4/gcc%2Ftree-vect-data-refs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-data-refs.c?ref=2a5825f23bd387d239592b1efd0e8487dd83a6e4", "patch": "@@ -227,6 +227,12 @@ vect_analyze_data_ref_dependence (struct data_dependence_relation *ddr,\n       || (DR_IS_READ (dra) && DR_IS_READ (drb)))\n     return false;\n \n+  /* We do not have to consider dependences between accesses that belong\n+     to the same group.  */\n+  if (GROUP_FIRST_ELEMENT (stmtinfo_a)\n+      && GROUP_FIRST_ELEMENT (stmtinfo_a) == GROUP_FIRST_ELEMENT (stmtinfo_b))\n+    return false;\n+\n   /* Even if we have an anti-dependence then, as the vectorized loop covers at\n      least two scalar iterations, there is always also a true dependence.\n      As the vectorizer does not re-order loads and stores we can ignore\n@@ -469,7 +475,7 @@ vect_analyze_data_ref_dependences (loop_vec_info loop_vinfo, int *max_vf)\n   LOOP_VINFO_NO_DATA_DEPENDENCIES (loop_vinfo) = true;\n   if (!compute_all_dependences (LOOP_VINFO_DATAREFS (loop_vinfo),\n \t\t\t\t&LOOP_VINFO_DDRS (loop_vinfo),\n-\t\t\t\tLOOP_VINFO_LOOP_NEST (loop_vinfo), true))\n+\t\t\t\tLOOP_VINFO_LOOP_NEST (loop_vinfo), false))\n     return false;\n \n   FOR_EACH_VEC_ELT (LOOP_VINFO_DDRS (loop_vinfo), i, ddr)"}]}