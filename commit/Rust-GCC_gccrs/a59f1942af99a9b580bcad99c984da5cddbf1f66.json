{"sha": "a59f1942af99a9b580bcad99c984da5cddbf1f66", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTU5ZjE5NDJhZjk5YTliNTgwYmNhZDk5Yzk4NGRhNWNkZGJmMWY2Ng==", "commit": {"author": {"name": "Paolo Bonzini", "email": "bonzini@gnu.org", "date": "2004-07-09T11:40:09Z"}, "committer": {"name": "Paolo Bonzini", "email": "bonzini@gcc.gnu.org", "date": "2004-07-09T11:40:09Z"}, "message": "arc.md: Switch to DFA-based scheduler description.\n\n2004-07-09  Paolo Bonzini  <bonzini@gnu.org>\n\n\t* config/arc/arc.md: Switch to DFA-based scheduler description.\n\t* config/arc/arc.c: Switch to DFA-based scheduler description.\n\nFrom-SVN: r84363", "tree": {"sha": "5eb494de10d9e8ce1a27c84a7872de367ef17264", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5eb494de10d9e8ce1a27c84a7872de367ef17264"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a59f1942af99a9b580bcad99c984da5cddbf1f66", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a59f1942af99a9b580bcad99c984da5cddbf1f66", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a59f1942af99a9b580bcad99c984da5cddbf1f66", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a59f1942af99a9b580bcad99c984da5cddbf1f66/comments", "author": {"login": "bonzini", "id": 42082, "node_id": "MDQ6VXNlcjQyMDgy", "avatar_url": "https://avatars.githubusercontent.com/u/42082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bonzini", "html_url": "https://github.com/bonzini", "followers_url": "https://api.github.com/users/bonzini/followers", "following_url": "https://api.github.com/users/bonzini/following{/other_user}", "gists_url": "https://api.github.com/users/bonzini/gists{/gist_id}", "starred_url": "https://api.github.com/users/bonzini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bonzini/subscriptions", "organizations_url": "https://api.github.com/users/bonzini/orgs", "repos_url": "https://api.github.com/users/bonzini/repos", "events_url": "https://api.github.com/users/bonzini/events{/privacy}", "received_events_url": "https://api.github.com/users/bonzini/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f94bf2ea8c4272abb9ff6d71f65ebbb2c22c5b35", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f94bf2ea8c4272abb9ff6d71f65ebbb2c22c5b35", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f94bf2ea8c4272abb9ff6d71f65ebbb2c22c5b35"}], "stats": {"total": 27, "additions": 21, "deletions": 6}, "files": [{"sha": "c4c785e8d9f0da4d4165ef514b36b96e4081d2e7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a59f1942af99a9b580bcad99c984da5cddbf1f66/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a59f1942af99a9b580bcad99c984da5cddbf1f66/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a59f1942af99a9b580bcad99c984da5cddbf1f66", "patch": "@@ -1,3 +1,8 @@\n+2004-07-09  Paolo Bonzini  <bonzini@gnu.org>\n+\n+\t* config/arc/arc.md: Switch to DFA-based scheduler description.\n+\t* config/arc/arc.c: Switch to DFA-based scheduler description.\n+\n 2004-07-09  Richard Earnshaw  <rearnsha@arm.com>\n \n \t* arm/unknown-elf.h (TARGET_DEFAULT): Don't require an APCS frame"}, {"sha": "6f02cdaf006f35806bd311c329e621efbf33c6d9", "filename": "gcc/config/arc/arc.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a59f1942af99a9b580bcad99c984da5cddbf1f66/gcc%2Fconfig%2Farc%2Farc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a59f1942af99a9b580bcad99c984da5cddbf1f66/gcc%2Fconfig%2Farc%2Farc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Farc.c?ref=a59f1942af99a9b580bcad99c984da5cddbf1f66", "patch": "@@ -145,6 +145,9 @@ static tree arc_gimplify_va_arg_expr (tree, tree, tree *, tree *);\n #undef TARGET_GIMPLIFY_VA_ARG_EXPR\n #define TARGET_GIMPLIFY_VA_ARG_EXPR arc_gimplify_va_arg_expr\n \n+#undef TARGET_SCHED_USE_DFA_PIPELINE_INTERFACE\n+#define TARGET_SCHED_USE_DFA_PIPELINE_INTERFACE hook_int_void_1\n+\n struct gcc_target targetm = TARGET_INITIALIZER;\n \f\n /* Called by OVERRIDE_OPTIONS to initialize various things.  */"}, {"sha": "2b3f43fffda9e20f5cdde2a1baa3af564ee07327", "filename": "gcc/config/arc/arc.md", "status": "modified", "additions": 13, "deletions": 6, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a59f1942af99a9b580bcad99c984da5cddbf1f66/gcc%2Fconfig%2Farc%2Farc.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a59f1942af99a9b580bcad99c984da5cddbf1f66/gcc%2Fconfig%2Farc%2Farc.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Farc.md?ref=a59f1942af99a9b580bcad99c984da5cddbf1f66", "patch": "@@ -115,23 +115,30 @@\n    (eq_attr \"in_delay_slot\" \"true\")\n    (eq_attr \"in_delay_slot\" \"true\")])\n \f   \n-;; Function units of the ARC\n+;; Scheduling description for the ARC\n \n-;; (define_function_unit {name} {num-units} {n-users} {test}\n-;;                       {ready-delay} {issue-delay} [{conflict-list}])\n+(define_cpu_unit \"branch\")\n+\n+(define_insn_reservation \"any_insn\" 1 (eq_attr \"type\" \"!load,compare,branch\")\n+\t\t\t \"nothing\")\n \n ;; 1) A conditional jump cannot immediately follow the insn setting the flags.\n ;; This isn't a complete solution as it doesn't come with guarantees.  That\n ;; is done in the branch patterns and in arc_print_operand.  This exists to\n ;; avoid inserting a nop when we can.\n-(define_function_unit \"compare\" 1 0 (eq_attr \"type\" \"compare\") 2 2 [(eq_attr \"type\" \"branch\")])\n+\n+(define_insn_reservation \"compare\" 1 (eq_attr \"type\" \"compare\")\n+\t\t         \"nothing,branch\")\n+\n+(define_insn_reservation \"branch\" 1 (eq_attr \"type\" \"branch\")\n+\t\t         \"branch\")\n \n ;; 2) References to loaded registers should wait a cycle.\n \n ;; Memory with load-delay of 1 (i.e., 2 cycle load).\n-(define_function_unit \"memory\" 1 1 (eq_attr \"type\" \"load\") 2 0)\n \n-;; Units that take one cycle do not need to be specified.\n+(define_insn_reservation \"memory\" 2 (eq_attr \"type\" \"load\")\n+\t\t\t \"nothing\")\n \f\n ;; Move instructions.\n "}]}