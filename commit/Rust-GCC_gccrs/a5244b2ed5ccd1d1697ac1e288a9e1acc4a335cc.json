{"sha": "a5244b2ed5ccd1d1697ac1e288a9e1acc4a335cc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTUyNDRiMmVkNWNjZDFkMTY5N2FjMWUyODhhOWUxYWNjNGEzMzVjYw==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2013-05-14T15:17:18Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2013-05-14T15:17:18Z"}, "message": "stl_iterator.h (__normal_iterator<>::_M_const_cast): Use std::pointer_traits.\n\n2013-05-14  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* include/bits/stl_iterator.h (__normal_iterator<>::_M_const_cast):\n\tUse std::pointer_traits.\n\nFrom-SVN: r198891", "tree": {"sha": "d7823be7ad3e63f6690c637339505180ab033e19", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d7823be7ad3e63f6690c637339505180ab033e19"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a5244b2ed5ccd1d1697ac1e288a9e1acc4a335cc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5244b2ed5ccd1d1697ac1e288a9e1acc4a335cc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a5244b2ed5ccd1d1697ac1e288a9e1acc4a335cc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5244b2ed5ccd1d1697ac1e288a9e1acc4a335cc/comments", "author": null, "committer": null, "parents": [{"sha": "fc21784dec6ab2642059b2a988af355a08cbba1a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc21784dec6ab2642059b2a988af355a08cbba1a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fc21784dec6ab2642059b2a988af355a08cbba1a"}], "stats": {"total": 21, "additions": 17, "deletions": 4}, "files": [{"sha": "c8087386f9a4790b79eff1d5b6cc36a3e391a3ce", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5244b2ed5ccd1d1697ac1e288a9e1acc4a335cc/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5244b2ed5ccd1d1697ac1e288a9e1acc4a335cc/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=a5244b2ed5ccd1d1697ac1e288a9e1acc4a335cc", "patch": "@@ -1,3 +1,8 @@\n+2013-05-14  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* include/bits/stl_iterator.h (__normal_iterator<>::_M_const_cast):\n+\tUse std::pointer_traits.\n+\n 2013-05-13  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* libsupc++/Makefile.am (sources): Add bad_array_length.cc,"}, {"sha": "50b55eb57b422262e91fac404644927dfc46717b", "filename": "libstdc++-v3/include/bits/stl_iterator.h", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5244b2ed5ccd1d1697ac1e288a9e1acc4a335cc/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_iterator.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5244b2ed5ccd1d1697ac1e288a9e1acc4a335cc/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_iterator.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_iterator.h?ref=a5244b2ed5ccd1d1697ac1e288a9e1acc4a335cc", "patch": "@@ -63,7 +63,7 @@\n #include <bits/cpp_type_traits.h>\n #include <ext/type_traits.h>\n #include <bits/move.h>\n-#include <ext/cast.h>\n+#include <bits/ptr_traits.h>\n \n namespace std _GLIBCXX_VISIBILITY(default)\n {\n@@ -736,9 +736,17 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       __normal_iterator<typename _Container::pointer, _Container>\n       _M_const_cast() const\n-      { return __normal_iterator<typename _Container::pointer, _Container>\n-\t  (__gnu_cxx::__const_pointer_cast<typename _Container::pointer>\n-\t   (_M_current)); }\n+      {\n+#if __cplusplus >= 201103L\n+\tusing _PTraits = std::pointer_traits<typename _Container::pointer>;\n+\treturn __normal_iterator<typename _Container::pointer, _Container>\n+\t  (_PTraits::pointer_to(const_cast<typename _PTraits::element_type&>\n+\t\t\t\t(*_M_current)));\n+#else\n+        return __normal_iterator<typename _Container::pointer, _Container>\n+\t  (const_cast<typename _Container::pointer>(_M_current));\n+#endif\n+      }\n \n       // Forward iterator requirements\n       reference"}]}