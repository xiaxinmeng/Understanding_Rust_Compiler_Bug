{"sha": "18192b41d23a5f8a90998ae3f396dd592849343b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTgxOTJiNDFkMjNhNWY4YTkwOTk4YWUzZjM5NmRkNTkyODQ5MzQzYg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-08-31T10:25:38Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-08-31T10:25:38Z"}, "message": "(struct c_function): Remove unneeded enum_next_value.\n\n(push_c_function_context, pop_c_function_context): Don't save it.\n\nFrom-SVN: r5230", "tree": {"sha": "22833737bf32d4af8ceab671716a2c1534940f76", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/22833737bf32d4af8ceab671716a2c1534940f76"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/18192b41d23a5f8a90998ae3f396dd592849343b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18192b41d23a5f8a90998ae3f396dd592849343b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/18192b41d23a5f8a90998ae3f396dd592849343b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18192b41d23a5f8a90998ae3f396dd592849343b/comments", "author": null, "committer": null, "parents": [{"sha": "7fb90b988559af41c85e474aea29ba8f8b4c82f7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7fb90b988559af41c85e474aea29ba8f8b4c82f7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7fb90b988559af41c85e474aea29ba8f8b4c82f7"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "eede16315b6bb137f6ba4a7a3f87fed803a2a047", "filename": "gcc/c-decl.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18192b41d23a5f8a90998ae3f396dd592849343b/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18192b41d23a5f8a90998ae3f396dd592849343b/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=18192b41d23a5f8a90998ae3f396dd592849343b", "patch": "@@ -208,7 +208,10 @@ char *pending_invalid_xref_file;\n int pending_invalid_xref_line;\n \n /* While defining an enum type, this is 1 plus the last enumerator\n-   constant value.  */\n+   constant value.  Note that will do not have to save this or `enum_overflow'\n+   around nested function definition since such a definition could only\n+   occur in an enum value expression and we don't use these variables in\n+   that case.  */\n \n static tree enum_next_value;\n \n@@ -6461,7 +6464,6 @@ finish_function (nested)\n struct c_function\n {\n   struct c_function *next;\n-  tree enum_next_value;\n   tree named_labels;\n   tree shadowed_labels;\n   int returns_value;\n@@ -6490,7 +6492,6 @@ push_c_function_context ()\n   p->next = c_function_chain;\n   c_function_chain = p;\n \n-  p->enum_next_value = enum_next_value;\n   p->named_labels = named_labels;\n   p->shadowed_labels = shadowed_labels;\n   p->returns_value = current_function_returns_value;\n@@ -6527,7 +6528,6 @@ pop_c_function_context ()\n \n   c_function_chain = p->next;\n \n-  enum_next_value = p->enum_next_value;\n   named_labels = p->named_labels;\n   shadowed_labels = p->shadowed_labels;\n   current_function_returns_value = p->returns_value;"}]}