{"sha": "4084ea5fc528fd4a3c11b4aad15f5fa7bca0e699", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDA4NGVhNWZjNTI4ZmQ0YTNjMTFiNGFhZDE1ZjVmYTdiY2EwZTY5OQ==", "commit": {"author": {"name": "Bin Cheng", "email": "bin.cheng@arm.com", "date": "2017-07-05T11:54:34Z"}, "committer": {"name": "Bin Cheng", "email": "amker@gcc.gnu.org", "date": "2017-07-05T11:54:34Z"}, "message": "tree-loop-distribution.c (loop_nest): New global var.\n\n\t* tree-loop-distribution.c (loop_nest): New global var.\n\t(build_rdg): Use loop directly, rather than loop nest.\n\t(pg_add_dependence_edges): Remove loop nest parameter.  Use global\n\tvariable directly.\n\t(distribute_loop): Compute global variable loop nest.  Update use.\n\nFrom-SVN: r249987", "tree": {"sha": "967c868af30a082287e846555ff2f09993237017", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/967c868af30a082287e846555ff2f09993237017"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4084ea5fc528fd4a3c11b4aad15f5fa7bca0e699", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4084ea5fc528fd4a3c11b4aad15f5fa7bca0e699", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4084ea5fc528fd4a3c11b4aad15f5fa7bca0e699", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4084ea5fc528fd4a3c11b4aad15f5fa7bca0e699/comments", "author": null, "committer": null, "parents": [{"sha": "821dbeef4b25d7ed5ad4f9bb507e3bd8579da3af", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/821dbeef4b25d7ed5ad4f9bb507e3bd8579da3af", "html_url": "https://github.com/Rust-GCC/gccrs/commit/821dbeef4b25d7ed5ad4f9bb507e3bd8579da3af"}], "stats": {"total": 48, "additions": 32, "deletions": 16}, "files": [{"sha": "cd8b5d7ea06fec7c0f1389ef3dee1b47f7811a76", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4084ea5fc528fd4a3c11b4aad15f5fa7bca0e699/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4084ea5fc528fd4a3c11b4aad15f5fa7bca0e699/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4084ea5fc528fd4a3c11b4aad15f5fa7bca0e699", "patch": "@@ -1,3 +1,11 @@\n+2017-07-05  Bin Cheng  <bin.cheng@arm.com>\n+\n+\t* tree-loop-distribution.c (loop_nest): New global var.\n+\t(build_rdg): Use loop directly, rather than loop nest.\n+\t(pg_add_dependence_edges): Remove loop nest parameter.  Use global\n+\tvariable directly.\n+\t(distribute_loop): Compute global variable loop nest.  Update use.\n+\n 2017-07-05  Bin Cheng  <bin.cheng@arm.com>\n \n \t* tree-loop-distribution.c (enum fuse_type, fuse_message): New."}, {"sha": "8183090d7e2fe634e8679a28e53d9ac49bd3685c", "filename": "gcc/tree-loop-distribution.c", "status": "modified", "additions": 24, "deletions": 16, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4084ea5fc528fd4a3c11b4aad15f5fa7bca0e699/gcc%2Ftree-loop-distribution.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4084ea5fc528fd4a3c11b4aad15f5fa7bca0e699/gcc%2Ftree-loop-distribution.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-loop-distribution.c?ref=4084ea5fc528fd4a3c11b4aad15f5fa7bca0e699", "patch": "@@ -66,6 +66,9 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-vectorizer.h\"\n \n \n+/* The loop (nest) to be distributed.  */\n+static vec<loop_p> loop_nest;\n+\n /* A Reduced Dependence Graph (RDG) vertex representing a statement.  */\n struct rdg_vertex\n {\n@@ -454,22 +457,22 @@ free_rdg (struct graph *rdg)\n   free_graph (rdg);\n }\n \n-/* Build the Reduced Dependence Graph (RDG) with one vertex per\n-   statement of the loop nest LOOP_NEST, and one edge per data dependence or\n-   scalar dependence.  */\n+/* Build the Reduced Dependence Graph (RDG) with one vertex per statement of\n+   LOOP, and one edge per flow dependence or control dependence from control\n+   dependence CD.  */\n \n static struct graph *\n-build_rdg (vec<loop_p> loop_nest, control_dependences *cd)\n+build_rdg (struct loop *loop, control_dependences *cd)\n {\n   struct graph *rdg;\n   vec<data_reference_p> datarefs;\n \n   /* Create the RDG vertices from the stmts of the loop nest.  */\n   auto_vec<gimple *, 10> stmts;\n-  stmts_from_loop (loop_nest[0], &stmts);\n+  stmts_from_loop (loop, &stmts);\n   rdg = new_graph (stmts.length ());\n   datarefs.create (10);\n-  if (!create_rdg_vertices (rdg, stmts, loop_nest[0], &datarefs))\n+  if (!create_rdg_vertices (rdg, stmts, loop, &datarefs))\n     {\n       datarefs.release ();\n       free_rdg (rdg);\n@@ -479,7 +482,7 @@ build_rdg (vec<loop_p> loop_nest, control_dependences *cd)\n \n   create_rdg_flow_edges (rdg);\n   if (cd)\n-    create_rdg_cd_edges (rdg, cd, loop_nest[0]);\n+    create_rdg_cd_edges (rdg, cd, loop);\n \n   datarefs.release ();\n \n@@ -1418,7 +1421,7 @@ partition_contains_all_rw (struct graph *rdg,\n    and DRS2 and modify and return DIR according to that.  */\n \n static int\n-pg_add_dependence_edges (struct graph *rdg, vec<loop_p> loops, int dir,\n+pg_add_dependence_edges (struct graph *rdg, int dir,\n \t\t\t vec<data_reference_p> drs1,\n \t\t\t vec<data_reference_p> drs2)\n {\n@@ -1439,8 +1442,8 @@ pg_add_dependence_edges (struct graph *rdg, vec<loop_p> loops, int dir,\n \t    std::swap (dr1, dr2);\n \t    this_dir = -this_dir;\n \t  }\n-\tddr = initialize_data_dependence_relation (dr1, dr2, loops);\n-\tcompute_affine_dependence (ddr, loops[0]);\n+\tddr = initialize_data_dependence_relation (dr1, dr2, loop_nest);\n+\tcompute_affine_dependence (ddr, loop_nest[0]);\n \tif (DDR_ARE_DEPENDENT (ddr) == chrec_dont_know)\n \t  this_dir = 2;\n \telse if (DDR_ARE_DEPENDENT (ddr) == NULL_TREE)\n@@ -1508,18 +1511,22 @@ distribute_loop (struct loop *loop, vec<gimple *> stmts,\n \n   *destroy_p = false;\n   *nb_calls = 0;\n-  auto_vec<loop_p, 3> loop_nest;\n+  loop_nest.create (0);\n   if (!find_loop_nest (loop, &loop_nest))\n-    return 0;\n+    {\n+      loop_nest.release ();\n+      return 0;\n+    }\n \n-  rdg = build_rdg (loop_nest, cd);\n+  rdg = build_rdg (loop, cd);\n   if (!rdg)\n     {\n       if (dump_file && (dump_flags & TDF_DETAILS))\n \tfprintf (dump_file,\n \t\t \"Loop %d not distributed: failed to build the RDG.\\n\",\n \t\t loop->num);\n \n+      loop_nest.release ();\n       return 0;\n     }\n \n@@ -1643,15 +1650,15 @@ distribute_loop (struct loop *loop, vec<gimple *> stmts,\n \t    /* dependence direction - 0 is no dependence, -1 is back,\n \t       1 is forth, 2 is both (we can stop then, merging will occur).  */\n \t    int dir = 0;\n-\t    dir = pg_add_dependence_edges (rdg, loop_nest, dir,\n+\t    dir = pg_add_dependence_edges (rdg, dir,\n \t\t\t\t\t   PGDATA(i)->writes,\n \t\t\t\t\t   PGDATA(j)->reads);\n \t    if (dir != 2)\n-\t      dir = pg_add_dependence_edges (rdg, loop_nest, dir,\n+\t      dir = pg_add_dependence_edges (rdg, dir,\n \t\t\t\t\t     PGDATA(i)->reads,\n \t\t\t\t\t     PGDATA(j)->writes);\n \t    if (dir != 2)\n-\t      dir = pg_add_dependence_edges (rdg, loop_nest, dir,\n+\t      dir = pg_add_dependence_edges (rdg, dir,\n \t\t\t\t\t     PGDATA(i)->writes,\n \t\t\t\t\t     PGDATA(j)->writes);\n \t    if (dir == 1 || dir == 2)\n@@ -1727,6 +1734,7 @@ distribute_loop (struct loop *loop, vec<gimple *> stmts,\n     }\n \n  ldist_done:\n+  loop_nest.release ();\n \n   FOR_EACH_VEC_ELT (partitions, i, partition)\n     partition_free (partition);"}]}