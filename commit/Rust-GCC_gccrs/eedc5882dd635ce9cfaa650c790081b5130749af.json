{"sha": "eedc5882dd635ce9cfaa650c790081b5130749af", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWVkYzU4ODJkZDYzNWNlOWNmYWE2NTBjNzkwMDgxYjUxMzA3NDlhZg==", "commit": {"author": {"name": "Hristian Kirtchev", "email": "kirtchev@adacore.com", "date": "2019-07-04T08:07:14Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2019-07-04T08:07:14Z"}, "message": "[Ada] Minor reformatting\n\n2019-07-04  Hristian Kirtchev  <kirtchev@adacore.com>\n\ngcc/ada/\n\n\t* exp_ch3.adb, exp_ch4.adb, exp_ch4.ads, exp_ch5.adb,\n\texp_ch7.adb, exp_ch9.adb, exp_ch11.adb, exp_unst.adb,\n\trtsfind.ads, sem_attr.adb, sem_ch10.adb, sem_ch12.adb,\n\tsem_ch13.adb, sem_dim.adb, sem_disp.adb, xref_lib.adb: Minor\n\treformatting.\n\nFrom-SVN: r273070", "tree": {"sha": "378e65c731cdde63ee335b0833e2d11500e0e943", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/378e65c731cdde63ee335b0833e2d11500e0e943"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eedc5882dd635ce9cfaa650c790081b5130749af", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eedc5882dd635ce9cfaa650c790081b5130749af", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eedc5882dd635ce9cfaa650c790081b5130749af", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eedc5882dd635ce9cfaa650c790081b5130749af/comments", "author": {"login": "kirtchev-adacore", "id": 60669983, "node_id": "MDQ6VXNlcjYwNjY5OTgz", "avatar_url": "https://avatars.githubusercontent.com/u/60669983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kirtchev-adacore", "html_url": "https://github.com/kirtchev-adacore", "followers_url": "https://api.github.com/users/kirtchev-adacore/followers", "following_url": "https://api.github.com/users/kirtchev-adacore/following{/other_user}", "gists_url": "https://api.github.com/users/kirtchev-adacore/gists{/gist_id}", "starred_url": "https://api.github.com/users/kirtchev-adacore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kirtchev-adacore/subscriptions", "organizations_url": "https://api.github.com/users/kirtchev-adacore/orgs", "repos_url": "https://api.github.com/users/kirtchev-adacore/repos", "events_url": "https://api.github.com/users/kirtchev-adacore/events{/privacy}", "received_events_url": "https://api.github.com/users/kirtchev-adacore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "38818659c388491abe7ab11f8757c1ad2acd1506", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/38818659c388491abe7ab11f8757c1ad2acd1506", "html_url": "https://github.com/Rust-GCC/gccrs/commit/38818659c388491abe7ab11f8757c1ad2acd1506"}], "stats": {"total": 230, "additions": 120, "deletions": 110}, "files": [{"sha": "65aabe5ea10804daa7436bb2beb1e3394d31d5d0", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eedc5882dd635ce9cfaa650c790081b5130749af/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eedc5882dd635ce9cfaa650c790081b5130749af/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=eedc5882dd635ce9cfaa650c790081b5130749af", "patch": "@@ -1,3 +1,11 @@\n+2019-07-04  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* exp_ch3.adb, exp_ch4.adb, exp_ch4.ads, exp_ch5.adb,\n+\texp_ch7.adb, exp_ch9.adb, exp_ch11.adb, exp_unst.adb,\n+\trtsfind.ads, sem_attr.adb, sem_ch10.adb, sem_ch12.adb,\n+\tsem_ch13.adb, sem_dim.adb, sem_disp.adb, xref_lib.adb: Minor\n+\treformatting.\n+\n 2019-07-04  Joffrey Huguet  <huguet@adacore.com>\n \n \t* libgnarl/a-taside.ads: Add assertion policy to ignore"}, {"sha": "29d8718e4fe6bfc4d0ab42a3b74c4bc20ec4d5cf", "filename": "gcc/ada/exp_ch11.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eedc5882dd635ce9cfaa650c790081b5130749af/gcc%2Fada%2Fexp_ch11.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eedc5882dd635ce9cfaa650c790081b5130749af/gcc%2Fada%2Fexp_ch11.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch11.adb?ref=eedc5882dd635ce9cfaa650c790081b5130749af", "patch": "@@ -1308,8 +1308,8 @@ package body Exp_Ch11 is\n \n       Append_To (L,\n         Make_Character_Literal (Loc,\n-          Chars              =>  Name_uA,\n-          Char_Literal_Value =>  UI_From_Int (Character'Pos ('A'))));\n+          Chars              => Name_uA,\n+          Char_Literal_Value => UI_From_Int (Character'Pos ('A'))));\n \n       --  Name_Length component: Nam'Length\n "}, {"sha": "e48c18888c6b6dd705513de0fb4abfb1ce69c4b3", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eedc5882dd635ce9cfaa650c790081b5130749af/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eedc5882dd635ce9cfaa650c790081b5130749af/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=eedc5882dd635ce9cfaa650c790081b5130749af", "patch": "@@ -4848,7 +4848,7 @@ package body Exp_Ch3 is\n                Make_Range (Sloc (Enumeration_Rep_Expr (Ent)),\n                  Low_Bound =>\n                    Make_Integer_Literal (Loc,\n-                    Intval =>  Enumeration_Rep (Ent)),\n+                    Intval => Enumeration_Rep (Ent)),\n                  High_Bound =>\n                    Make_Integer_Literal (Loc, Intval => Last_Repval))),\n \n@@ -9486,10 +9486,11 @@ package body Exp_Ch3 is\n      (E : Entity_Id;\n       L : List_Id) return Node_Id\n    is\n-      Loc        : constant Source_Ptr := Sloc (E);\n+      Loc : constant Source_Ptr := Sloc (E);\n+\n       C          : Node_Id;\n-      Field_Name : Name_Id;\n       Cond       : Node_Id;\n+      Field_Name : Name_Id;\n       Next_Test  : Node_Id;\n       Typ        : Entity_Id;\n \n@@ -9534,11 +9535,11 @@ package body Exp_Ch3 is\n \n                begin\n                   --  Build equality code with a user-defined operator, if\n-                  --  available, and with the predefined \"=\" otherwise.\n-                  --  For compatibility with older Ada versions, and preserve\n-                  --  the workings of some ASIS tools, we also use the\n-                  --  predefined operation if the component-type equality\n-                  --  is abstract, rather than raising Program_Error.\n+                  --  available, and with the predefined \"=\" otherwise. For\n+                  --  compatibility with older Ada versions, and preserve the\n+                  --  workings of some ASIS tools, we also use the predefined\n+                  --  operation if the component-type equality is abstract,\n+                  --  rather than raising Program_Error.\n \n                   if Ada_Version < Ada_2012 then\n                      Next_Test := Make_Op_Ne (Loc, Lhs, Rhs);"}, {"sha": "0d4c294245de1c93bfeda13e548db2faf69d808a", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 47, "deletions": 47, "changes": 94, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eedc5882dd635ce9cfaa650c790081b5130749af/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eedc5882dd635ce9cfaa650c790081b5130749af/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=eedc5882dd635ce9cfaa650c790081b5130749af", "patch": "@@ -415,6 +415,52 @@ package body Exp_Ch4 is\n          return;\n    end Build_Boolean_Array_Proc_Call;\n \n+   -----------------------\n+   -- Build_Eq_Call --\n+   -----------------------\n+\n+   function Build_Eq_Call\n+     (Typ : Entity_Id;\n+      Loc : Source_Ptr;\n+      Lhs : Node_Id;\n+      Rhs : Node_Id) return Node_Id\n+   is\n+      Prim   : Node_Id;\n+      Prim_E : Elmt_Id;\n+\n+   begin\n+      Prim_E := First_Elmt (Collect_Primitive_Operations (Typ));\n+      while Present (Prim_E) loop\n+         Prim := Node (Prim_E);\n+\n+         --  Locate primitive equality with the right signature\n+\n+         if Chars (Prim) = Name_Op_Eq\n+           and then Etype (First_Formal (Prim)) =\n+                    Etype (Next_Formal (First_Formal (Prim)))\n+           and then Etype (Prim) = Standard_Boolean\n+         then\n+            if Is_Abstract_Subprogram (Prim) then\n+               return\n+                 Make_Raise_Program_Error (Loc,\n+                   Reason => PE_Explicit_Raise);\n+\n+            else\n+               return\n+                 Make_Function_Call (Loc,\n+                   Name                   => New_Occurrence_Of (Prim, Loc),\n+                   Parameter_Associations => New_List (Lhs, Rhs));\n+            end if;\n+         end if;\n+\n+         Next_Elmt (Prim_E);\n+      end loop;\n+\n+      --  If not found, predefined operation will be used\n+\n+      return Empty;\n+   end Build_Eq_Call;\n+\n    --------------------------------\n    -- Displace_Allocator_Pointer --\n    --------------------------------\n@@ -1938,7 +1984,7 @@ package body Exp_Ch4 is\n               Parameter_Specifications => Formals,\n               Result_Definition => New_Occurrence_Of (Standard_Boolean, Loc)),\n \n-          Declarations =>  Decls,\n+          Declarations => Decls,\n \n           Handled_Statement_Sequence =>\n             Make_Handled_Sequence_Of_Statements (Loc,\n@@ -12553,52 +12599,6 @@ package body Exp_Ch4 is\n       Adjust_Result_Type (N, Typ);\n    end Expand_Short_Circuit_Operator;\n \n-   -----------------------\n-   -- Build_Eq_Call --\n-   -----------------------\n-\n-   function Build_Eq_Call\n-     (Typ : Entity_Id;\n-      Loc : Source_Ptr;\n-      Lhs : Node_Id;\n-      Rhs : Node_Id) return Node_Id\n-   is\n-      Prim_E : Elmt_Id;\n-      Prim   : Node_Id;\n-\n-   begin\n-      Prim_E := First_Elmt (Collect_Primitive_Operations (Typ));\n-      while Present (Prim_E) loop\n-         Prim := Node (Prim_E);\n-\n-         --  Locate primitive equality with the right signature\n-\n-         if Chars (Prim) = Name_Op_Eq\n-           and then Etype (First_Formal (Prim)) =\n-                    Etype (Next_Formal (First_Formal (Prim)))\n-           and then Etype (Prim) = Standard_Boolean\n-         then\n-            if Is_Abstract_Subprogram (Prim) then\n-               return\n-                 Make_Raise_Program_Error (Loc,\n-                   Reason => PE_Explicit_Raise);\n-\n-            else\n-               return\n-                 Make_Function_Call (Loc,\n-                   Name                   => New_Occurrence_Of (Prim, Loc),\n-                   Parameter_Associations => New_List (Lhs, Rhs));\n-            end if;\n-         end if;\n-\n-         Next_Elmt (Prim_E);\n-      end loop;\n-\n-      --  If not found, predefined operation will be used\n-\n-      return Empty;\n-   end Build_Eq_Call;\n-\n    ------------------------------------\n    -- Fixup_Universal_Fixed_Operation --\n    -------------------------------------"}, {"sha": "44872fd2669f6278343d0d5727f7a4b2389d2dd3", "filename": "gcc/ada/exp_ch4.ads", "status": "modified", "additions": 15, "deletions": 16, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eedc5882dd635ce9cfaa650c790081b5130749af/gcc%2Fada%2Fexp_ch4.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eedc5882dd635ce9cfaa650c790081b5130749af/gcc%2Fada%2Fexp_ch4.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.ads?ref=eedc5882dd635ce9cfaa650c790081b5130749af", "patch": "@@ -29,20 +29,6 @@ with Types; use Types;\n \n package Exp_Ch4 is\n \n-   function Build_Eq_Call\n-     (Typ : Entity_Id;\n-      Loc : Source_Ptr;\n-      Lhs : Node_Id;\n-      Rhs : Node_Id) return Node_Id;\n-   --  AI05-0123: Locate primitive equality for type if it exists, and build\n-   --  the corresponding call. If operation is abstract, replace call with\n-   --  an explicit raise. Return Empty if there is no primitive.\n-   --  Used in the construction of record-equality routines for records here\n-   --  and for variant records in exp_ch3.adb. These two paths are distinct\n-   --  for historical but also technical reasons: for variant records the\n-   --  constructed function includes a case statement with nested returns,\n-   --  while for records without variants only a simple expression is needed.\n-\n    procedure Expand_N_Allocator                   (N : Node_Id);\n    procedure Expand_N_And_Then                    (N : Node_Id);\n    procedure Expand_N_Case_Expression             (N : Node_Id);\n@@ -88,13 +74,26 @@ package Exp_Ch4 is\n    procedure Expand_N_Unchecked_Expression        (N : Node_Id);\n    procedure Expand_N_Unchecked_Type_Conversion   (N : Node_Id);\n \n+   function Build_Eq_Call\n+     (Typ : Entity_Id;\n+      Loc : Source_Ptr;\n+      Lhs : Node_Id;\n+      Rhs : Node_Id) return Node_Id;\n+   --  AI05-0123: Locate primitive equality for type if it exists, and build\n+   --  the corresponding call. If operation is abstract, replace call with\n+   --  an explicit raise. Return Empty if there is no primitive.\n+   --  Used in the construction of record-equality routines for records here\n+   --  and for variant records in exp_ch3.adb. These two paths are distinct\n+   --  for historical but also technical reasons: for variant records the\n+   --  constructed function includes a case statement with nested returns,\n+   --  while for records without variants only a simple expression is needed.\n+\n    function Expand_Record_Equality\n      (Nod    : Node_Id;\n       Typ    : Entity_Id;\n       Lhs    : Node_Id;\n       Rhs    : Node_Id;\n-      Bodies : List_Id)\n-      return Node_Id;\n+      Bodies : List_Id) return Node_Id;\n    --  Expand a record equality into an expression that compares the fields\n    --  individually to yield the required Boolean result. Loc is the\n    --  location for the generated nodes. Typ is the type of the record, and"}, {"sha": "664ede8494c998d9efdb74b679468c5d90ec2d00", "filename": "gcc/ada/exp_ch5.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eedc5882dd635ce9cfaa650c790081b5130749af/gcc%2Fada%2Fexp_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eedc5882dd635ce9cfaa650c790081b5130749af/gcc%2Fada%2Fexp_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch5.adb?ref=eedc5882dd635ce9cfaa650c790081b5130749af", "patch": "@@ -3304,7 +3304,7 @@ package body Exp_Ch5 is\n                 Declarations => New_List (Elmt_Decl),\n                 Handled_Statement_Sequence =>\n                   Make_Handled_Sequence_Of_Statements (Loc,\n-                    Statements =>  Stats))));\n+                    Statements => Stats))));\n \n       else\n          Elmt_Ref :=\n@@ -3330,7 +3330,7 @@ package body Exp_Ch5 is\n              Declarations               => New_List (Elmt_Decl),\n              Handled_Statement_Sequence =>\n                Make_Handled_Sequence_Of_Statements (Loc,\n-                 Statements =>  New_List (New_Loop)));\n+                 Statements => New_List (New_Loop)));\n       end if;\n \n       --  The element is only modified in expanded code, so it appears as"}, {"sha": "1e17b1947d178bc2f1a19ec7dea9de7806cdf47b", "filename": "gcc/ada/exp_ch7.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eedc5882dd635ce9cfaa650c790081b5130749af/gcc%2Fada%2Fexp_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eedc5882dd635ce9cfaa650c790081b5130749af/gcc%2Fada%2Fexp_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch7.adb?ref=eedc5882dd635ce9cfaa650c790081b5130749af", "patch": "@@ -3873,7 +3873,7 @@ package body Exp_Ch7 is\n                             Attribute_Name  => Name_Range,\n                             Expressions     => New_List (\n                               Make_Integer_Literal (Loc, Dim))))),\n-                Statements       =>  Free_One_Dimension (Dim + 1)));\n+                Statements       => Free_One_Dimension (Dim + 1)));\n          end if;\n       end Free_One_Dimension;\n "}, {"sha": "03f133f05b295f0c32a2f75a66470fa6c5077032", "filename": "gcc/ada/exp_ch9.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eedc5882dd635ce9cfaa650c790081b5130749af/gcc%2Fada%2Fexp_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eedc5882dd635ce9cfaa650c790081b5130749af/gcc%2Fada%2Fexp_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch9.adb?ref=eedc5882dd635ce9cfaa650c790081b5130749af", "patch": "@@ -869,7 +869,7 @@ package body Exp_Ch9 is\n           Make_Implicit_Exception_Handler (Loc,\n             Exception_Choices => New_List (Ohandle),\n \n-            Statements =>  New_List (\n+            Statements => New_List (\n               Make_Procedure_Call_Statement (Sloc (Stats),\n                 Name                   => New_Occurrence_Of (\n                   RTE (RE_Exceptional_Complete_Rendezvous), Sloc (Stats)),\n@@ -3792,7 +3792,7 @@ package body Exp_Ch9 is\n                    Make_Implicit_Exception_Handler (EH_Loc,\n                      Exception_Choices => New_List (Ohandle),\n \n-                     Statements        =>  New_List (\n+                     Statements        => New_List (\n                        Make_Procedure_Call_Statement (EH_Loc,\n                          Name                   => Complete,\n                          Parameter_Associations => New_List (\n@@ -10639,7 +10639,7 @@ package body Exp_Ch9 is\n \n              Statements       => New_List (\n                Make_Implicit_If_Statement (N,\n-                 Condition       =>  Cond,\n+                 Condition       => Cond,\n                  Then_Statements => New_List (\n                    Make_Select_Call (\n                      New_Occurrence_Of (RTE (RE_Simple_Mode), Loc)),"}, {"sha": "f146a6fe2381195f4c7ef5450ff496172613f62a", "filename": "gcc/ada/exp_unst.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eedc5882dd635ce9cfaa650c790081b5130749af/gcc%2Fada%2Fexp_unst.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eedc5882dd635ce9cfaa650c790081b5130749af/gcc%2Fada%2Fexp_unst.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_unst.adb?ref=eedc5882dd635ce9cfaa650c790081b5130749af", "patch": "@@ -598,7 +598,7 @@ package body Exp_Unst is\n                   then\n                      Note_Uplevel_Bound (Prefix (N), Ref);\n \n-                  --  Conditional expressions.\n+                  --  Conditional expressions\n \n                   elsif Nkind (N) = N_If_Expression then\n                      declare"}, {"sha": "eab6f4fb22023e76805341d9992e5b0d2eebb02a", "filename": "gcc/ada/rtsfind.ads", "status": "modified", "additions": 17, "deletions": 17, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eedc5882dd635ce9cfaa650c790081b5130749af/gcc%2Fada%2Frtsfind.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eedc5882dd635ce9cfaa650c790081b5130749af/gcc%2Fada%2Frtsfind.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frtsfind.ads?ref=eedc5882dd635ce9cfaa650c790081b5130749af", "patch": "@@ -2755,23 +2755,23 @@ package Rtsfind is\n      RE_W_WC                             => System_Stream_Attributes,\n      RE_W_WWC                            => System_Stream_Attributes,\n \n-     RE_Storage_Array_Input              =>  System_Strings_Stream_Ops,\n-     RE_Storage_Array_Input_Blk_IO       =>  System_Strings_Stream_Ops,\n-     RE_Storage_Array_Output             =>  System_Strings_Stream_Ops,\n-     RE_Storage_Array_Output_Blk_IO      =>  System_Strings_Stream_Ops,\n-     RE_Storage_Array_Read               =>  System_Strings_Stream_Ops,\n-     RE_Storage_Array_Read_Blk_IO        =>  System_Strings_Stream_Ops,\n-     RE_Storage_Array_Write              =>  System_Strings_Stream_Ops,\n-     RE_Storage_Array_Write_Blk_IO       =>  System_Strings_Stream_Ops,\n-\n-     RE_Stream_Element_Array_Input          =>  System_Strings_Stream_Ops,\n-     RE_Stream_Element_Array_Input_Blk_IO   =>  System_Strings_Stream_Ops,\n-     RE_Stream_Element_Array_Output         =>  System_Strings_Stream_Ops,\n-     RE_Stream_Element_Array_Output_Blk_IO  =>  System_Strings_Stream_Ops,\n-     RE_Stream_Element_Array_Read           =>  System_Strings_Stream_Ops,\n-     RE_Stream_Element_Array_Read_Blk_IO    =>  System_Strings_Stream_Ops,\n-     RE_Stream_Element_Array_Write          =>  System_Strings_Stream_Ops,\n-     RE_Stream_Element_Array_Write_Blk_IO   =>  System_Strings_Stream_Ops,\n+     RE_Storage_Array_Input              => System_Strings_Stream_Ops,\n+     RE_Storage_Array_Input_Blk_IO       => System_Strings_Stream_Ops,\n+     RE_Storage_Array_Output             => System_Strings_Stream_Ops,\n+     RE_Storage_Array_Output_Blk_IO      => System_Strings_Stream_Ops,\n+     RE_Storage_Array_Read               => System_Strings_Stream_Ops,\n+     RE_Storage_Array_Read_Blk_IO        => System_Strings_Stream_Ops,\n+     RE_Storage_Array_Write              => System_Strings_Stream_Ops,\n+     RE_Storage_Array_Write_Blk_IO       => System_Strings_Stream_Ops,\n+\n+     RE_Stream_Element_Array_Input          => System_Strings_Stream_Ops,\n+     RE_Stream_Element_Array_Input_Blk_IO   => System_Strings_Stream_Ops,\n+     RE_Stream_Element_Array_Output         => System_Strings_Stream_Ops,\n+     RE_Stream_Element_Array_Output_Blk_IO  => System_Strings_Stream_Ops,\n+     RE_Stream_Element_Array_Read           => System_Strings_Stream_Ops,\n+     RE_Stream_Element_Array_Read_Blk_IO    => System_Strings_Stream_Ops,\n+     RE_Stream_Element_Array_Write          => System_Strings_Stream_Ops,\n+     RE_Stream_Element_Array_Write_Blk_IO   => System_Strings_Stream_Ops,\n \n      RE_String_Input                     => System_Strings_Stream_Ops,\n      RE_String_Input_Blk_IO              => System_Strings_Stream_Ops,"}, {"sha": "a3f9ffdb23b449091de6b6563f768545e12f6f3d", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eedc5882dd635ce9cfaa650c790081b5130749af/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eedc5882dd635ce9cfaa650c790081b5130749af/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=eedc5882dd635ce9cfaa650c790081b5130749af", "patch": "@@ -11421,7 +11421,7 @@ package body Sem_Attr is\n                   if Present (Lo) then\n                      Rewrite (P,\n                         Make_Indexed_Component (Loc,\n-                           Prefix =>  Relocate_Node (Prefix (P)),\n+                           Prefix => Relocate_Node (Prefix (P)),\n                            Expressions => New_List (Lo)));\n \n                      Analyze_And_Resolve (P);"}, {"sha": "c66296b18cd67fd5c9caf76d78da7ab241af80bb", "filename": "gcc/ada/sem_ch10.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eedc5882dd635ce9cfaa650c790081b5130749af/gcc%2Fada%2Fsem_ch10.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eedc5882dd635ce9cfaa650c790081b5130749af/gcc%2Fada%2Fsem_ch10.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch10.adb?ref=eedc5882dd635ce9cfaa650c790081b5130749af", "patch": "@@ -6395,8 +6395,8 @@ package body Sem_Ch10 is\n             if Limited_View_Installed (Item) then\n                Remove_Limited_With_Clause (Item);\n \n-            --  An unusual case: If the library unit of the Main_Unit has\n-            --  a limited with_clause on some unit P and the context somewhere\n+            --  An unusual case: If the library unit of the Main_Unit has a\n+            --  limited with_clause on some unit P and the context somewhere\n             --  includes a with_clause on P, P has been analyzed. The entity\n             --  for P is still visible, which in general is harmless because\n             --  this is the end of the compilation, but it can affect pending\n@@ -6409,7 +6409,7 @@ package body Sem_Ch10 is\n               and then not Implicit_With (Item)\n             then\n                Set_Is_Immediately_Visible\n-                 (Defining_Entity  (Unit (Library_Unit (Item))), False);\n+                 (Defining_Entity (Unit (Library_Unit (Item))), False);\n             end if;\n          end if;\n "}, {"sha": "0df4d96c9a286249791948fd911c105f80f617b1", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eedc5882dd635ce9cfaa650c790081b5130749af/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eedc5882dd635ce9cfaa650c790081b5130749af/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=eedc5882dd635ce9cfaa650c790081b5130749af", "patch": "@@ -6002,7 +6002,7 @@ package body Sem_Ch12 is\n             Make_Parameter_Specification (Loc,\n                Defining_Identifier => F1,\n                Parameter_Type      => New_Occurrence_Of (Op_Type, Loc))),\n-          Result_Definition        =>  New_Occurrence_Of (Ret_Type, Loc));\n+          Result_Definition        => New_Occurrence_Of (Ret_Type, Loc));\n \n       if Is_Binary then\n          Append_To (Parameter_Specifications (Spec),\n@@ -14103,7 +14103,6 @@ package body Sem_Ch12 is\n    ------------------------\n \n    procedure Preanalyze_Actuals (N : Node_Id; Inst : Entity_Id := Empty) is\n-\n       procedure Perform_Appropriate_Analysis (N : Node_Id);\n       --  Determine if the actuals we are analyzing come from a generic\n       --  instantiation that is a library unit and dispatch accordingly.\n@@ -14120,15 +14119,17 @@ package body Sem_Ch12 is\n \n          if Present (Inst) and then Is_Compilation_Unit (Inst) then\n             Preanalyze (N);\n-\n          else\n             Analyze (N);\n          end if;\n       end Perform_Appropriate_Analysis;\n \n+      --  Local variables\n+\n+      Errs : constant Nat := Serious_Errors_Detected;\n+\n       Assoc : Node_Id;\n       Act   : Node_Id;\n-      Errs  : constant Nat := Serious_Errors_Detected;\n \n       Cur : Entity_Id := Empty;\n       --  Current homograph of the instance name"}, {"sha": "b18f74ba548f2314c8f308fab0132b290e455d05", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eedc5882dd635ce9cfaa650c790081b5130749af/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eedc5882dd635ce9cfaa650c790081b5130749af/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=eedc5882dd635ce9cfaa650c790081b5130749af", "patch": "@@ -5511,7 +5511,7 @@ package body Sem_Ch13 is\n          -- Default_Iterator --\n          ----------------------\n \n-         when Attribute_Default_Iterator =>  Default_Iterator : declare\n+         when Attribute_Default_Iterator => Default_Iterator : declare\n             Func : Entity_Id;\n             Typ  : Entity_Id;\n "}, {"sha": "9f1517456c2c86f0225b8a0466cfdedd5252d334", "filename": "gcc/ada/sem_dim.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eedc5882dd635ce9cfaa650c790081b5130749af/gcc%2Fada%2Fsem_dim.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eedc5882dd635ce9cfaa650c790081b5130749af/gcc%2Fada%2Fsem_dim.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_dim.adb?ref=eedc5882dd635ce9cfaa650c790081b5130749af", "patch": "@@ -399,9 +399,9 @@ package body Sem_Dim is\n \n    function \"+\" (Left, Right : Rational) return Rational is\n       R : constant Rational :=\n-            Rational'(Numerator   =>  Left.Numerator   * Right.Denominator +\n-                                      Left.Denominator * Right.Numerator,\n-                      Denominator => Left.Denominator  * Right.Denominator);\n+            Rational'(Numerator   => Left.Numerator   * Right.Denominator +\n+                                     Left.Denominator * Right.Numerator,\n+                      Denominator => Left.Denominator * Right.Denominator);\n    begin\n       return Reduce (R);\n    end \"+\";"}, {"sha": "475092ba24e584187d501bf3210bd1a2e5cd4fe5", "filename": "gcc/ada/sem_disp.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eedc5882dd635ce9cfaa650c790081b5130749af/gcc%2Fada%2Fsem_disp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eedc5882dd635ce9cfaa650c790081b5130749af/gcc%2Fada%2Fsem_disp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_disp.adb?ref=eedc5882dd635ce9cfaa650c790081b5130749af", "patch": "@@ -210,6 +210,7 @@ package body Sem_Disp is\n          Ctrl_Type := Check_Controlling_Type (Etype (Formal), Subp);\n \n          if Present (Ctrl_Type) then\n+\n             --  Obtain the full type in case we are looking at an incomplete\n             --  view.\n "}, {"sha": "4d400f31be0ec0d9901d626594d9e9fc5fa953f3", "filename": "gcc/ada/xref_lib.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eedc5882dd635ce9cfaa650c790081b5130749af/gcc%2Fada%2Fxref_lib.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eedc5882dd635ce9cfaa650c790081b5130749af/gcc%2Fada%2Fxref_lib.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fxref_lib.adb?ref=eedc5882dd635ce9cfaa650c790081b5130749af", "patch": "@@ -1876,7 +1876,7 @@ package body Xref_Lib is\n             end if;\n \n          exception\n-            when No_Xref_Information =>  null;\n+            when No_Xref_Information => null;\n          end;\n       end loop;\n    end Search_Xref;"}]}