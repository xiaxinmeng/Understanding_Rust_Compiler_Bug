{"sha": "df36a3d3befd76f8db5cc4397f00208539e49fbf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGYzNmEzZDNiZWZkNzZmOGRiNWNjNDM5N2YwMDIwODUzOWU0OWZiZg==", "commit": {"author": {"name": "Tom de Vries", "email": "tom@codesourcery.com", "date": "2018-04-26T13:27:04Z"}, "committer": {"name": "Tom de Vries", "email": "vries@gcc.gnu.org", "date": "2018-04-26T13:27:04Z"}, "message": "[nvptx, libgomp] Add GOMP_NVPTX_JIT=-O[0-4] in nvptx libgomp plugin\n\n2018-04-26  Tom de Vries  <tom@codesourcery.com>\n\n\tPR libgomp/84020\n\t* plugin/cuda/cuda.h (CUjit_option): Add CU_JIT_OPTIMIZATION_LEVEL.\n\t* plugin/plugin-nvptx.c (_GNU_SOURCE): Define.\n\t(process_GOMP_NVPTX_JIT): New function.\n\t(link_ptx): Use process_GOMP_NVPTX_JIT.\n\nFrom-SVN: r259678", "tree": {"sha": "08e3aea28bfda1f840bec42d2cb0130ae65d2f98", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/08e3aea28bfda1f840bec42d2cb0130ae65d2f98"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/df36a3d3befd76f8db5cc4397f00208539e49fbf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df36a3d3befd76f8db5cc4397f00208539e49fbf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/df36a3d3befd76f8db5cc4397f00208539e49fbf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df36a3d3befd76f8db5cc4397f00208539e49fbf/comments", "author": null, "committer": null, "parents": [{"sha": "a874808c6143032cec029a1a8a421d6b7cdf05e8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a874808c6143032cec029a1a8a421d6b7cdf05e8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a874808c6143032cec029a1a8a421d6b7cdf05e8"}], "stats": {"total": 65, "additions": 62, "deletions": 3}, "files": [{"sha": "0a612a359307ea2fc89a753d1168f25225238d03", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df36a3d3befd76f8db5cc4397f00208539e49fbf/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df36a3d3befd76f8db5cc4397f00208539e49fbf/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=df36a3d3befd76f8db5cc4397f00208539e49fbf", "patch": "@@ -1,3 +1,11 @@\n+2018-04-26  Tom de Vries  <tom@codesourcery.com>\n+\n+\tPR libgomp/84020\n+\t* plugin/cuda/cuda.h (CUjit_option): Add CU_JIT_OPTIMIZATION_LEVEL.\n+\t* plugin/plugin-nvptx.c (_GNU_SOURCE): Define.\n+\t(process_GOMP_NVPTX_JIT): New function.\n+\t(link_ptx): Use process_GOMP_NVPTX_JIT.\n+\n 2018-04-26  Richard Biener <rguenther@suse.de>\n \t    Tom de Vries  <tom@codesourcery.com>\n "}, {"sha": "4799825bda2b773f19e270d2afa9718d2cf46d0c", "filename": "libgomp/plugin/cuda/cuda.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df36a3d3befd76f8db5cc4397f00208539e49fbf/libgomp%2Fplugin%2Fcuda%2Fcuda.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df36a3d3befd76f8db5cc4397f00208539e49fbf/libgomp%2Fplugin%2Fcuda%2Fcuda.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Fplugin%2Fcuda%2Fcuda.h?ref=df36a3d3befd76f8db5cc4397f00208539e49fbf", "patch": "@@ -88,6 +88,7 @@ typedef enum {\n   CU_JIT_INFO_LOG_BUFFER_SIZE_BYTES = 4,\n   CU_JIT_ERROR_LOG_BUFFER = 5,\n   CU_JIT_ERROR_LOG_BUFFER_SIZE_BYTES = 6,\n+  CU_JIT_OPTIMIZATION_LEVEL = 7,\n   CU_JIT_LOG_VERBOSE = 12\n } CUjit_option;\n "}, {"sha": "2b875ae2b53472080fcdb13283cc90efa43c4e8b", "filename": "libgomp/plugin/plugin-nvptx.c", "status": "modified", "additions": 53, "deletions": 3, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df36a3d3befd76f8db5cc4397f00208539e49fbf/libgomp%2Fplugin%2Fplugin-nvptx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df36a3d3befd76f8db5cc4397f00208539e49fbf/libgomp%2Fplugin%2Fplugin-nvptx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Fplugin%2Fplugin-nvptx.c?ref=df36a3d3befd76f8db5cc4397f00208539e49fbf", "patch": "@@ -31,6 +31,7 @@\n    is not clear as to what that state might be.  Or how one might\n    propagate it from one thread to another.  */\n \n+#define _GNU_SOURCE\n #include \"openacc.h\"\n #include \"config.h\"\n #include \"libgomp-plugin.h\"\n@@ -138,6 +139,8 @@ init_cuda_lib (void)\n # define init_cuda_lib() true\n #endif\n \n+#include \"secure_getenv.h\"\n+\n /* Convenience macros for the frequently used CUDA library call and\n    error handling sequence as well as CUDA library calls that\n    do the error checking themselves or don't do it at all.  */\n@@ -876,12 +879,42 @@ notify_var (const char *var_name, const char *env_var)\n     GOMP_PLUGIN_debug (0, \"%s: '%s'\\n\", var_name, env_var);\n }\n \n+static void\n+process_GOMP_NVPTX_JIT (intptr_t *gomp_nvptx_o)\n+{\n+  const char *var_name = \"GOMP_NVPTX_JIT\";\n+  const char *env_var = secure_getenv (var_name);\n+  notify_var (var_name, env_var);\n+\n+  if (env_var == NULL)\n+    return;\n+\n+  const char *c = env_var;\n+  while (*c != '\\0')\n+    {\n+      while (*c == ' ')\n+\tc++;\n+\n+      if (c[0] == '-' && c[1] == 'O'\n+\t  && '0' <= c[2] && c[2] <= '4'\n+\t  && (c[3] == '\\0' || c[3] == ' '))\n+\t{\n+\t  *gomp_nvptx_o = c[2] - '0';\n+\t  c += 3;\n+\t  continue;\n+\t}\n+\n+      GOMP_PLUGIN_error (\"Error parsing %s\", var_name);\n+      break;\n+    }\n+}\n+\n static bool\n link_ptx (CUmodule *module, const struct targ_ptx_obj *ptx_objs,\n \t  unsigned num_objs)\n {\n-  CUjit_option opts[6];\n-  void *optvals[6];\n+  CUjit_option opts[7];\n+  void *optvals[7];\n   float elapsed = 0.0;\n   char elog[1024];\n   char ilog[16384];\n@@ -908,7 +941,24 @@ link_ptx (CUmodule *module, const struct targ_ptx_obj *ptx_objs,\n   opts[5] = CU_JIT_LOG_VERBOSE;\n   optvals[5] = (void *) 1;\n \n-  CUDA_CALL (cuLinkCreate, 6, opts, optvals, &linkstate);\n+  static intptr_t gomp_nvptx_o = -1;\n+\n+  static bool init_done = false;\n+  if (!init_done)\n+    {\n+      process_GOMP_NVPTX_JIT (&gomp_nvptx_o);\n+      init_done = true;\n+  }\n+\n+  int nopts = 6;\n+  if (gomp_nvptx_o != -1)\n+    {\n+      opts[nopts] = CU_JIT_OPTIMIZATION_LEVEL;\n+      optvals[nopts] = (void *) gomp_nvptx_o;\n+      nopts++;\n+    }\n+\n+  CUDA_CALL (cuLinkCreate, nopts, opts, optvals, &linkstate);\n \n   for (; num_objs--; ptx_objs++)\n     {"}]}