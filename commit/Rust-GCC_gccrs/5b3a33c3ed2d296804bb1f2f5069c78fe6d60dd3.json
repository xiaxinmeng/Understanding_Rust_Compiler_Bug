{"sha": "5b3a33c3ed2d296804bb1f2f5069c78fe6d60dd3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWIzYTMzYzNlZDJkMjk2ODA0YmIxZjJmNTA2OWM3OGZlNmQ2MGRkMw==", "commit": {"author": {"name": "Thomas Quinot", "email": "quinot@adacore.com", "date": "2008-08-20T14:28:17Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2008-08-20T14:28:17Z"}, "message": "g-comlin.adb: Minor reformatting Minor code reorganization.\n\n2008-08-20  Thomas Quinot  <quinot@adacore.com>\n\n\t* g-comlin.adb: Minor reformatting\n\tMinor code reorganization.\n\nFrom-SVN: r139307", "tree": {"sha": "c069f9082ea4f21e8a73f0234e520944fb70b2e0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c069f9082ea4f21e8a73f0234e520944fb70b2e0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5b3a33c3ed2d296804bb1f2f5069c78fe6d60dd3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b3a33c3ed2d296804bb1f2f5069c78fe6d60dd3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5b3a33c3ed2d296804bb1f2f5069c78fe6d60dd3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b3a33c3ed2d296804bb1f2f5069c78fe6d60dd3/comments", "author": null, "committer": null, "parents": [{"sha": "c3db4df1cb74f9290006f2d744c25b3f255c0274", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3db4df1cb74f9290006f2d744c25b3f255c0274", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c3db4df1cb74f9290006f2d744c25b3f255c0274"}], "stats": {"total": 24, "additions": 9, "deletions": 15}, "files": [{"sha": "d37d06b68a3f7cd4bb2f5669d259fb63cecd2749", "filename": "gcc/ada/g-comlin.adb", "status": "modified", "additions": 9, "deletions": 15, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b3a33c3ed2d296804bb1f2f5069c78fe6d60dd3/gcc%2Fada%2Fg-comlin.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b3a33c3ed2d296804bb1f2f5069c78fe6d60dd3/gcc%2Fada%2Fg-comlin.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-comlin.adb?ref=5b3a33c3ed2d296804bb1f2f5069c78fe6d60dd3", "patch": "@@ -111,13 +111,13 @@ package body GNAT.Command_Line is\n       Str    : String_Access;\n       Before : Boolean := False);\n    --  Add a new element to Line. If Before is True, the item is inserted at\n-   --  the beginning.\n+   --  the beginning, else it is appended.\n \n    function Can_Have_Parameter (S : String) return Boolean;\n-   --  Tell if S can have a parameter.\n+   --  True when S can have a parameter\n \n    function Require_Parameter (S : String) return Boolean;\n-   --  Tell if S requires a paramter.\n+   --  True when S requires a parameter\n \n    function Actual_Switch (S : String) return String;\n    --  Remove any possible trailing '!', ':', '?' and '='\n@@ -1264,14 +1264,14 @@ package body GNAT.Command_Line is\n                   if not Is_Section then\n                      if Section = null then\n \n-                        --  Workaround some weird cases: some switches may\n+                        --  Work around some weird cases: some switches may\n                         --  expect parameters, but have the same value as\n                         --  longer switches: -gnaty3 (-gnaty, parameter=3) and\n                         --  -gnatya (-gnatya, no parameter).\n \n                         --  So we are calling add_switch here with parameter\n                         --  attached. This will be anyway correctly handled by\n-                        --  Add_Switch if -gnaty3 is actually furnished.\n+                        --  Add_Switch if -gnaty3 is actually provided.\n \n                         if Separator (Parser) = ASCII.NUL then\n                            Add_Switch\n@@ -1726,27 +1726,21 @@ package body GNAT.Command_Line is\n       Before : Boolean := False)\n    is\n       Tmp : Argument_List_Access := Line;\n-\n    begin\n       if Tmp /= null then\n          Line := new Argument_List (Tmp'First .. Tmp'Last + 1);\n \n          if Before then\n+            Line (Tmp'First)                     := Str;\n             Line (Tmp'First + 1 .. Tmp'Last + 1) := Tmp.all;\n          else\n-            Line (Tmp'Range) := Tmp.all;\n+            Line (Tmp'Range)    := Tmp.all;\n+            Line (Tmp'Last + 1) := Str;\n          end if;\n \n          Unchecked_Free (Tmp);\n-\n-      else\n-         Line := new Argument_List (1 .. 1);\n-      end if;\n-\n-      if Before then\n-         Line (Line'First) := Str;\n       else\n-         Line (Line'Last) := Str;\n+         Line := new Argument_List'(1 .. 1 => Str);\n       end if;\n    end Add;\n "}]}