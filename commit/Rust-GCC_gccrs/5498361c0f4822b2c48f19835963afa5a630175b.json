{"sha": "5498361c0f4822b2c48f19835963afa5a630175b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTQ5ODM2MWMwZjQ4MjJiMmM0OGYxOTgzNTk2M2FmYTVhNjMwMTc1Yg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2019-02-21T23:07:12Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2019-02-21T23:07:12Z"}, "message": "PR c++/88419 - C++17 ICE with class template arg deduction.\n\nJust like in make_constrained_auto, we need to defer setting TYPE_CANONICAL\nuntil we've set fields that will affect structural_comptypes.\n\n\t* pt.c (make_template_placeholder): Set TYPE_CANONICAL after\n\tCLASS_PLACEHOLDER_TEMPLATE.\n\nFrom-SVN: r269080", "tree": {"sha": "7668aef3c0488b46384790be0adb6de7e947dfd5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7668aef3c0488b46384790be0adb6de7e947dfd5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5498361c0f4822b2c48f19835963afa5a630175b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5498361c0f4822b2c48f19835963afa5a630175b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5498361c0f4822b2c48f19835963afa5a630175b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5498361c0f4822b2c48f19835963afa5a630175b/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "eeb20b969684d4c502ee168cdffd67cc491cd354", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eeb20b969684d4c502ee168cdffd67cc491cd354", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eeb20b969684d4c502ee168cdffd67cc491cd354"}], "stats": {"total": 32, "additions": 31, "deletions": 1}, "files": [{"sha": "228100ab21ff25c5fe40010a3ddd0fd694cbad81", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5498361c0f4822b2c48f19835963afa5a630175b/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5498361c0f4822b2c48f19835963afa5a630175b/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=5498361c0f4822b2c48f19835963afa5a630175b", "patch": "@@ -1,3 +1,9 @@\n+2019-02-21  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/88419 - C++17 ICE with class template arg deduction.\n+\t* pt.c (make_template_placeholder): Set TYPE_CANONICAL after\n+\tCLASS_PLACEHOLDER_TEMPLATE.\n+\n 2019-02-21  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/89285"}, {"sha": "bd0a3d13bbe65fcdf118ddb5711da3b9ca6dcadf", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5498361c0f4822b2c48f19835963afa5a630175b/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5498361c0f4822b2c48f19835963afa5a630175b/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=5498361c0f4822b2c48f19835963afa5a630175b", "patch": "@@ -26619,8 +26619,10 @@ make_auto (void)\n tree\n make_template_placeholder (tree tmpl)\n {\n-  tree t = make_auto_1 (auto_identifier, true);\n+  tree t = make_auto_1 (auto_identifier, false);\n   CLASS_PLACEHOLDER_TEMPLATE (t) = tmpl;\n+  /* Our canonical type depends on the placeholder.  */\n+  TYPE_CANONICAL (t) = canonical_type_parameter (t);\n   return t;\n }\n "}, {"sha": "2baa3acb8c1119a7e72fdb0c250b74db12237ff8", "filename": "gcc/testsuite/g++.dg/cpp1z/class-deduction62.C", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5498361c0f4822b2c48f19835963afa5a630175b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction62.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5498361c0f4822b2c48f19835963afa5a630175b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction62.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fclass-deduction62.C?ref=5498361c0f4822b2c48f19835963afa5a630175b", "patch": "@@ -0,0 +1,22 @@\n+// PR c++/88419\n+// { dg-do compile { target c++17 } }\n+\n+template<class> struct ref_view {\n+  template<class T> ref_view(T&&);\n+};\n+\n+template<class R> ref_view(R&) -> ref_view<R>;\n+\n+struct ref_fn {\n+  template<class R> auto operator()(R r) const\n+    noexcept(noexcept(ref_view{r}));\n+};\n+\n+template<class R> struct indirect_view {\n+  indirect_view(R);\n+};\n+\n+struct indirect_fn {\n+  template<class R> auto operator()(R r) const\n+    noexcept(noexcept(indirect_view{r}));\n+};"}]}