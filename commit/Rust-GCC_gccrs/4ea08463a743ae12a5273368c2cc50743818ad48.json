{"sha": "4ea08463a743ae12a5273368c2cc50743818ad48", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGVhMDg0NjNhNzQzYWUxMmE1MjczMzY4YzJjYzUwNzQzODE4YWQ0OA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2009-06-02T17:02:38Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2009-06-02T17:02:38Z"}, "message": "re PR c++/40308 (Brace initialization fails for member initializers in constructor for class templates)\n\n\tPR c++/40308\n\tPR c++/40311\n\t* typeck.c (cp_build_modify_expr): Always pass init-lists to the\n\tconversion code.\n\t* call.c (implicit_conversion): Allow init-list conversion to scalar\n\tduring direct-initialization, too.  Mark the conversion bad if it\n\thas too many levels of braces.\n\t(convert_like_real): And give a helpful error.\n\nFrom-SVN: r148089", "tree": {"sha": "a4bc703b59430cc1c6271ad1407d17d48be44c0d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a4bc703b59430cc1c6271ad1407d17d48be44c0d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4ea08463a743ae12a5273368c2cc50743818ad48", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ea08463a743ae12a5273368c2cc50743818ad48", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4ea08463a743ae12a5273368c2cc50743818ad48", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ea08463a743ae12a5273368c2cc50743818ad48/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ccafc19b5bd8f4736a2788263aa5acd6d2b7a961", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ccafc19b5bd8f4736a2788263aa5acd6d2b7a961", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ccafc19b5bd8f4736a2788263aa5acd6d2b7a961"}], "stats": {"total": 78, "additions": 69, "deletions": 9}, "files": [{"sha": "e3eb576e544c975bec64f8a8bf567715439fe02a", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ea08463a743ae12a5273368c2cc50743818ad48/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ea08463a743ae12a5273368c2cc50743818ad48/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=4ea08463a743ae12a5273368c2cc50743818ad48", "patch": "@@ -1,4 +1,13 @@\n-2009-06-01  Jason Merrill  <jason@redhat.com>\n+2009-06-02  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/40308\n+\tPR c++/40311\n+\t* typeck.c (cp_build_modify_expr): Always pass init-lists to the\n+\tconversion code.\n+\t* call.c (implicit_conversion): Allow init-list conversion to scalar\n+\tduring direct-initialization, too.  Mark the conversion bad if it\n+\thas too many levels of braces.\n+\t(convert_like_real): And give a helpful error.\n \n \tPR c++/40306\n \tPR c++/40307"}, {"sha": "1ab27c738e2e15982bcb5c7b584ad5bd8b596e84", "filename": "gcc/cp/call.c", "status": "modified", "additions": 20, "deletions": 6, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ea08463a743ae12a5273368c2cc50743818ad48/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ea08463a743ae12a5273368c2cc50743818ad48/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=4ea08463a743ae12a5273368c2cc50743818ad48", "patch": "@@ -1406,21 +1406,27 @@ implicit_conversion (tree to, tree from, tree expr, bool c_cast_p,\n \treturn build_list_conv (to, expr, flags);\n \n       /* Allow conversion from an initializer-list with one element to a\n-\t scalar type if this is copy-initialization.  Direct-initialization\n-\t would be something like int i({1}), which is invalid.  */\n-      if (SCALAR_TYPE_P (to) && CONSTRUCTOR_NELTS (expr) <= 1\n-\t  && (flags & LOOKUP_ONLYCONVERTING))\n+\t scalar type.  */\n+      if (SCALAR_TYPE_P (to))\n \t{\n+\t  int nelts = CONSTRUCTOR_NELTS (expr);\n \t  tree elt;\n-\t  if (CONSTRUCTOR_NELTS (expr) == 1)\n+\n+\t  if (nelts == 0)\n+\t    elt = integer_zero_node;\n+\t  else if (nelts == 1)\n \t    elt = CONSTRUCTOR_ELT (expr, 0)->value;\n \t  else\n-\t    elt = integer_zero_node;\n+\t    elt = error_mark_node;\n+\n \t  conv = implicit_conversion (to, TREE_TYPE (elt), elt,\n \t\t\t\t      c_cast_p, flags);\n \t  if (conv)\n \t    {\n \t      conv->check_narrowing = true;\n+\t      if (BRACE_ENCLOSED_INITIALIZER_P (elt))\n+\t\t/* Too many levels of braces, i.e. '{{1}}'.  */\n+\t\tconv->bad_p = true;\n \t      return conv;\n \t    }\n \t}\n@@ -4698,6 +4704,14 @@ convert_like_real (conversion *convs, tree expr, tree fn, int argnum,\n       && convs->kind != ck_base)\n     {\n       conversion *t = convs;\n+\n+      /* Give a helpful error if this is bad because of excess braces.  */\n+      if (BRACE_ENCLOSED_INITIALIZER_P (expr)\n+\t  && SCALAR_TYPE_P (totype)\n+\t  && CONSTRUCTOR_NELTS (expr) > 0\n+\t  && BRACE_ENCLOSED_INITIALIZER_P (CONSTRUCTOR_ELT (expr, 0)->value))\n+\tpermerror (input_location, \"too many braces around initializer for %qT\", totype);\n+\n       for (; t; t = convs->u.next)\n \t{\n \t  if (t->kind == ck_user || !t->bad_p)"}, {"sha": "b384feae1a4837cb125c31edd91007109a671b7e", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ea08463a743ae12a5273368c2cc50743818ad48/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ea08463a743ae12a5273368c2cc50743818ad48/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=4ea08463a743ae12a5273368c2cc50743818ad48", "patch": "@@ -6081,8 +6081,11 @@ cp_build_modify_expr (tree lhs, enum tree_code modifycode, tree rhs,\n \n   if (modifycode == INIT_EXPR)\n     {\n-      if (TREE_CODE (rhs) == CONSTRUCTOR)\n+      if (BRACE_ENCLOSED_INITIALIZER_P (rhs))\n+\t/* Do the default thing.  */;\n+      else if (TREE_CODE (rhs) == CONSTRUCTOR)\n \t{\n+\t  /* Compound literal.  */\n \t  if (! same_type_p (TREE_TYPE (rhs), lhstype))\n \t    /* Call convert to generate an error; see PR 11063.  */\n \t    rhs = convert (lhstype, rhs);"}, {"sha": "fda5ce3068b57e599db6afe820ae02f7374a4bc8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ea08463a743ae12a5273368c2cc50743818ad48/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ea08463a743ae12a5273368c2cc50743818ad48/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4ea08463a743ae12a5273368c2cc50743818ad48", "patch": "@@ -1,5 +1,9 @@\n 2009-06-02  Jason Merrill  <jason@redhat.com>\n \n+\t* g++.dg/cpp0x/initlist13.C: Remove expected error.\n+\t* g++.dg/cpp0x/initlist18.C: New.\n+\t* g++.dg/cpp0x/initlist19.C: New.\n+\n \t* g++.dg/cpp0x/auto14.C: New.\n \n 2009-06-02  Eric Botcazou  <ebotcazou@adacore.com>"}, {"sha": "9ed6c74419ff8744009cc1ecd21e6df87e97c2d9", "filename": "gcc/testsuite/g++.dg/cpp0x/initlist13.C", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ea08463a743ae12a5273368c2cc50743818ad48/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist13.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ea08463a743ae12a5273368c2cc50743818ad48/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist13.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist13.C?ref=4ea08463a743ae12a5273368c2cc50743818ad48", "patch": "@@ -2,4 +2,7 @@\n // { dg-do compile }\n // { dg-options \"-std=gnu++0x\" }\n \n-__complex__ int i ({0});\t// { dg-error \"cannot convert\" }\n+#include <complex>\n+\n+__complex__ int i ({0});\n+std::complex<int> i2 ({0});"}, {"sha": "c9a9bcd94151cbc24998d36e83b74b00186e54b2", "filename": "gcc/testsuite/g++.dg/cpp0x/initlist18.C", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ea08463a743ae12a5273368c2cc50743818ad48/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist18.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ea08463a743ae12a5273368c2cc50743818ad48/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist18.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist18.C?ref=4ea08463a743ae12a5273368c2cc50743818ad48", "patch": "@@ -0,0 +1,19 @@\n+// PR c++/40308, 40311\n+// { dg-do run }\n+// { dg-options \"-std=c++0x\" }\n+\n+template< typename T >\n+struct test {\n+   test() : data{} {}\n+\n+   T data;\n+};\n+\n+int main()\n+{\n+   test<int> x;\n+   test<int*> y;\n+   int * a = new int{};\n+   int * b = new int{5};\n+   return 0;\n+}"}, {"sha": "418cddc618a9c5484f441cca169e4035e4bd42a7", "filename": "gcc/testsuite/g++.dg/cpp0x/initlist19.C", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ea08463a743ae12a5273368c2cc50743818ad48/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist19.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ea08463a743ae12a5273368c2cc50743818ad48/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist19.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist19.C?ref=4ea08463a743ae12a5273368c2cc50743818ad48", "patch": "@@ -0,0 +1,8 @@\n+// { dg-options \"-std=c++0x\" }\n+\n+void f(double);\n+int main()\n+{\n+  f({{1}});\t\t\t// { dg-error \"too many braces\" }\n+  // { dg-error \"\" \"\" { target *-*-* } 6 } allow other errors, too\n+}"}]}