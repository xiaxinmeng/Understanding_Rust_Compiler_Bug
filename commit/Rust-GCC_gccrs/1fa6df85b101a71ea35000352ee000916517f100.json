{"sha": "1fa6df85b101a71ea35000352ee000916517f100", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWZhNmRmODViMTAxYTcxZWEzNTAwMDM1MmVlMDAwOTE2NTE3ZjEwMA==", "commit": {"author": {"name": "Francois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2007-10-25T23:32:07Z"}, "committer": {"name": "Fran\u00e7ois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2007-10-25T23:32:07Z"}, "message": "libgfortran.h (GFC_REAL_*_HUGE, [...]): Remove.\n\n\t* libgfortran.h (GFC_REAL_*_HUGE, GFC_REAL_*_DIGITS,\n\tGFC_REAL_*_RADIX): Remove.\n\t* mk-kinds-h.sh: Define GFC_REAL_*_HUGE, GFC_REAL_*_DIGITS and\n\tGFC_REAL_*_RADIX. Don't define GFC_REAL_LARGEST_FORMAT and\n\tGFC_REAL_LARGEST.\n\nFrom-SVN: r129636", "tree": {"sha": "f0e2df033c23e09e06ad14e3229d4d4afab719d9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f0e2df033c23e09e06ad14e3229d4d4afab719d9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1fa6df85b101a71ea35000352ee000916517f100", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1fa6df85b101a71ea35000352ee000916517f100", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1fa6df85b101a71ea35000352ee000916517f100", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1fa6df85b101a71ea35000352ee000916517f100/comments", "author": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "691307546ee843b5fff57573987cd616e832cd62", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/691307546ee843b5fff57573987cd616e832cd62", "html_url": "https://github.com/Rust-GCC/gccrs/commit/691307546ee843b5fff57573987cd616e832cd62"}], "stats": {"total": 78, "additions": 37, "deletions": 41}, "files": [{"sha": "05f7fec9f53a12c0e6fcbde9bb9e10b2d4a7055e", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1fa6df85b101a71ea35000352ee000916517f100/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1fa6df85b101a71ea35000352ee000916517f100/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=1fa6df85b101a71ea35000352ee000916517f100", "patch": "@@ -1,3 +1,11 @@\n+2007-10-26  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n+\n+\t* libgfortran.h (GFC_REAL_*_HUGE, GFC_REAL_*_DIGITS,\n+\tGFC_REAL_*_RADIX): Remove.\n+\t* mk-kinds-h.sh: Define GFC_REAL_*_HUGE, GFC_REAL_*_DIGITS and\n+\tGFC_REAL_*_RADIX. Don't define GFC_REAL_LARGEST_FORMAT and\n+\tGFC_REAL_LARGEST.\n+\n 2007-10-19  Ben Elliston  <bje@au.ibm.com>\n \n \t* intrinsics/signal.c (alarm_sub_i4): Mark conditionally unused"}, {"sha": "427b2fadbab427d97775a0e21e8500662cceb46d", "filename": "libgfortran/libgfortran.h", "status": "modified", "additions": 0, "deletions": 27, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1fa6df85b101a71ea35000352ee000916517f100/libgfortran%2Flibgfortran.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1fa6df85b101a71ea35000352ee000916517f100/libgfortran%2Flibgfortran.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Flibgfortran.h?ref=1fa6df85b101a71ea35000352ee000916517f100", "patch": "@@ -249,33 +249,6 @@ internal_proto(l8_to_l4_offset);\n   (GFC_INTEGER_16)((((GFC_UINTEGER_16)1) << 127) - 1)\n #endif\n \n-#define GFC_REAL_4_HUGE FLT_MAX\n-#define GFC_REAL_8_HUGE DBL_MAX\n-#ifdef HAVE_GFC_REAL_10\n-#define GFC_REAL_10_HUGE LDBL_MAX\n-#endif\n-#ifdef HAVE_GFC_REAL_16\n-#define GFC_REAL_16_HUGE LDBL_MAX\n-#endif\n-\n-#define GFC_REAL_4_DIGITS FLT_MANT_DIG\n-#define GFC_REAL_8_DIGITS DBL_MANT_DIG\n-#ifdef HAVE_GFC_REAL_10\n-#define GFC_REAL_10_DIGITS LDBL_MANT_DIG\n-#endif\n-#ifdef HAVE_GFC_REAL_16\n-#define GFC_REAL_16_DIGITS LDBL_MANT_DIG\n-#endif\n-\n-#define GFC_REAL_4_RADIX FLT_RADIX\n-#define GFC_REAL_8_RADIX FLT_RADIX\n-#ifdef HAVE_GFC_REAL_10\n-#define GFC_REAL_10_RADIX FLT_RADIX\n-#endif\n-#ifdef HAVE_GFC_REAL_16\n-#define GFC_REAL_16_RADIX FLT_RADIX\n-#endif\n-\n \n typedef struct descriptor_dimension\n {"}, {"sha": "0a0cdb7080f745af9d025cfc8769aa9d094a18e9", "filename": "libgfortran/mk-kinds-h.sh", "status": "modified", "additions": 29, "deletions": 14, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1fa6df85b101a71ea35000352ee000916517f100/libgfortran%2Fmk-kinds-h.sh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1fa6df85b101a71ea35000352ee000916517f100/libgfortran%2Fmk-kinds-h.sh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fmk-kinds-h.sh?ref=1fa6df85b101a71ea35000352ee000916517f100", "patch": "@@ -31,6 +31,7 @@ for k in $possible_integer_kinds; do\n     echo \"typedef GFC_INTEGER_${k} GFC_LOGICAL_${k};\"\n     echo \"#define HAVE_GFC_LOGICAL_${k}\"\n     echo \"#define HAVE_GFC_INTEGER_${k}\"\n+    echo \"\"\n   fi\n   rm -f tmp$$.*\n done\n@@ -41,33 +42,47 @@ echo \"#define GFC_DEFAULT_CHAR ${smallest}\"\n echo \"\"\n \n \n-largest_ctype=\"\"\n for k in $possible_real_kinds; do\n   echo \"  real (kind=$k) :: x\" > tmp$$.f90\n   echo \"  end\" >> tmp$$.f90\n   if $compile -c tmp$$.f90 > /dev/null 2>&1; then\n     case $k in\n-      4) ctype=\"float\" ;;\n-      8) ctype=\"double\" ;;\n-      10) ctype=\"long double\" ;;\n-      16) ctype=\"long double\" ;;\n+      4) ctype=\"float\" ; suffix=\"f\" ;;\n+      8) ctype=\"double\" ; suffix=\"\" ;;\n+      10) ctype=\"long double\" ; suffix=\"l\" ;;\n+      16) ctype=\"long double\" ; suffix=\"l\" ;;\n       *) echo \"$0: Unknown type\" >&2 ; exit 1 ;;\n     esac\n-    largest_ctype=\"$ctype\"\n+\n+    # Check for the value of HUGE\n+    echo \"print *, huge(0._$k) ; end\" > tmq$$.f90\n+    huge=`$compile -c -fdump-parse-tree tmq$$.f90 | grep TRANSFER \\\n+\t\t| sed 's/ *TRANSFER *// ; s/_.*//'`\n+    rm -f tmq$$.*\n+\n+    # Check for the value of DIGITS\n+    echo \"print *, digits(0._$k) ; end\" > tmq$$.f90\n+    digits=`$compile -c -fdump-parse-tree tmq$$.f90 | grep TRANSFER \\\n+\t\t| sed 's/ *TRANSFER *//'`\n+    rm -f tmq$$.*\n+\n+    # Check for the value of RADIX\n+    echo \"print *, radix(0._$k) ; end\" > tmq$$.f90\n+    radix=`$compile -c -fdump-parse-tree tmq$$.f90 | grep TRANSFER \\\n+\t\t| sed 's/ *TRANSFER *//'`\n+    rm -f tmq$$.*\n+\n+    # Output the information we've gathered\n     echo \"typedef ${ctype} GFC_REAL_${k};\"\n     echo \"typedef complex ${ctype} GFC_COMPLEX_${k};\"\n     echo \"#define HAVE_GFC_REAL_${k}\"\n     echo \"#define HAVE_GFC_COMPLEX_${k}\"\n+    echo \"#define GFC_REAL_${k}_HUGE ${huge}${suffix}\"\n+    echo \"#define GFC_REAL_${k}_DIGITS ${digits}\"\n+    echo \"#define GFC_REAL_${k}_RADIX ${radix}\"\n+    echo \"\"\n   fi\n   rm -f tmp$$.*\n done\n \n-case $largest_ctype in\n-  float) echo \"#define GFC_REAL_LARGEST_FORMAT \\\"\\\"\" ;;\n-  double) echo \"#define GFC_REAL_LARGEST_FORMAT \\\"l\\\"\" ;;\n-  \"long double\") echo \"#define GFC_REAL_LARGEST_FORMAT \\\"L\\\"\" ;;\n-  *) echo \"$0: Unknown type\" >&2 ; exit 1 ;;\n-esac\n-echo \"#define GFC_REAL_LARGEST $largest_ctype\"\n-\n exit 0"}]}