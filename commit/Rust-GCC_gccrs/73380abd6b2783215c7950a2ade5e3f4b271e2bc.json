{"sha": "73380abd6b2783215c7950a2ade5e3f4b271e2bc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzMzODBhYmQ2YjI3ODMyMTVjNzk1MGEyYWRlNWUzZjRiMjcxZTJiYw==", "commit": {"author": {"name": "Stam Markianos-Wright", "email": "stam.markianos-wright@arm.com", "date": "2020-01-27T18:21:46Z"}, "committer": {"name": "Stam Markianos-Wright", "email": "stam.markianos-wright@arm.com", "date": "2020-01-27T18:21:46Z"}, "message": "Hi all,\n\nThis was committed following offline approval by Kyryl.\n\nOne minor intended optimisation introduced by :\n\nhttps://gcc.gnu.org/ml/gcc-patches/2020-01/msg01237.html\n\nwas to set a preference for both __fp16 types and __bf16 types to be\nloaded/stored directly into/from the FP/NEON registers (if they are available\nand if the vld1.16 is compatible), rather than be passed through the regular\nr-registers.\n\nThis would convert many observed instances of:\n\n**\tldrh\tr3, [r3]\t@ __fp16\n**\tvmov.f16\ts15, r3\t@ __fp16\n\nInto a single:\n\n**\tvld1.16\t{d7[2]}, [r3]\n\nThis resulted in a regression of a dg-scan-assembler in a __fp16 test.\n\nThis patch updates the test to the same testing standard used by the BFloat\ntests (use check-function-bodies to explicitly check for correct assembler\ngenerated by each function) and updates it for the latest optimisation.\n\nCheers,\nStam\n\ngcc/testsuite/ChangeLog:\n\n2020-01-27  Stam Markianos-Wright  <stam.markianos-wright@arm.com>\n\n\t* gcc.target/arm/armv8_2-fp16-move-1.c: Update following load/store\n        optimisation.", "tree": {"sha": "812995605ea979ad47097b79db52e2815bb2d3ea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/812995605ea979ad47097b79db52e2815bb2d3ea"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/73380abd6b2783215c7950a2ade5e3f4b271e2bc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73380abd6b2783215c7950a2ade5e3f4b271e2bc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/73380abd6b2783215c7950a2ade5e3f4b271e2bc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73380abd6b2783215c7950a2ade5e3f4b271e2bc/comments", "author": {"login": "Stammark", "id": 30555766, "node_id": "MDQ6VXNlcjMwNTU1NzY2", "avatar_url": "https://avatars.githubusercontent.com/u/30555766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Stammark", "html_url": "https://github.com/Stammark", "followers_url": "https://api.github.com/users/Stammark/followers", "following_url": "https://api.github.com/users/Stammark/following{/other_user}", "gists_url": "https://api.github.com/users/Stammark/gists{/gist_id}", "starred_url": "https://api.github.com/users/Stammark/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Stammark/subscriptions", "organizations_url": "https://api.github.com/users/Stammark/orgs", "repos_url": "https://api.github.com/users/Stammark/repos", "events_url": "https://api.github.com/users/Stammark/events{/privacy}", "received_events_url": "https://api.github.com/users/Stammark/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Stammark", "id": 30555766, "node_id": "MDQ6VXNlcjMwNTU1NzY2", "avatar_url": "https://avatars.githubusercontent.com/u/30555766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Stammark", "html_url": "https://github.com/Stammark", "followers_url": "https://api.github.com/users/Stammark/followers", "following_url": "https://api.github.com/users/Stammark/following{/other_user}", "gists_url": "https://api.github.com/users/Stammark/gists{/gist_id}", "starred_url": "https://api.github.com/users/Stammark/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Stammark/subscriptions", "organizations_url": "https://api.github.com/users/Stammark/orgs", "repos_url": "https://api.github.com/users/Stammark/repos", "events_url": "https://api.github.com/users/Stammark/events{/privacy}", "received_events_url": "https://api.github.com/users/Stammark/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2fbea4190e76a59c4880727cf84706fe083c00ae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2fbea4190e76a59c4880727cf84706fe083c00ae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2fbea4190e76a59c4880727cf84706fe083c00ae"}], "stats": {"total": 53, "additions": 47, "deletions": 6}, "files": [{"sha": "f81caf56ef6b3f8f2303f1a598c29dad8d72ce34", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73380abd6b2783215c7950a2ade5e3f4b271e2bc/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73380abd6b2783215c7950a2ade5e3f4b271e2bc/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=73380abd6b2783215c7950a2ade5e3f4b271e2bc", "patch": "@@ -1,3 +1,8 @@\n+2020-01-27  Stam Markianos-Wright  <stam.markianos-wright@arm.com>\n+\n+\t* gcc.target/arm/armv8_2-fp16-move-1.c: Update following load/store\n+\toptimisation.\n+\n 2020-01-27  David Malcolm  <dmalcolm@redhat.com>\n \n \tPR analyzer/93349"}, {"sha": "009bb8d1575a4f6536bd1a27fa2cbd0746e25e0b", "filename": "gcc/testsuite/gcc.target/arm/armv8_2-fp16-move-1.c", "status": "modified", "additions": 42, "deletions": 6, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73380abd6b2783215c7950a2ade5e3f4b271e2bc/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Farmv8_2-fp16-move-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73380abd6b2783215c7950a2ade5e3f4b271e2bc/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Farmv8_2-fp16-move-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Farmv8_2-fp16-move-1.c?ref=73380abd6b2783215c7950a2ade5e3f4b271e2bc", "patch": "@@ -3,49 +3,85 @@\n /* { dg-options \"-O2\" }  */\n /* { dg-add-options arm_v8_2a_fp16_scalar }  */\n /* { dg-additional-options \"-mfloat-abi=hard\" } */\n-\n+/* { dg-final { check-function-bodies \"**\" \"\" } } */\n+\n+/*\n+**test_load_1:\n+**\t...\n+**\tvld1.16\t{d[0-9]+\\[[0-9]+\\]}, \\[r[0-9]+\\]\n+**\t...\n+*/\n __fp16\n test_load_1 (__fp16* a)\n {\n   return *a;\n }\n \n+/*\n+**test_load_2:\n+**\t...\n+**\tvld1.16\t{d[0-9]+\\[[0-9]+\\]}, \\[r[0-9]+\\]\n+**\t...\n+*/\n __fp16\n test_load_2 (__fp16* a, int i)\n {\n   return a[i];\n }\n \n-\n+/*\n+**test_store_1:\n+**\t...\n+**\tvst1.16\t{d[0-9]+\\[[0-9]+\\]}, \\[r[0-9]+\\]\n+**\t...\n+*/\n void\n test_store_1 (__fp16* a, __fp16 b)\n {\n   *a = b;\n }\n \n+/*\n+**test_store_2:\n+**\t...\n+**\tvst1.16\t{d[0-9]+\\[[0-9]+\\]}, \\[r[0-9]+\\]\n+**\t...\n+*/\n void\n test_store_2 (__fp16* a, int i, __fp16 b)\n {\n   a[i] = b;\n }\n \n-\n+/*\n+**test_load_store_1:\n+**\t...\n+**\tvld1.16\t{d[0-9]+\\[[0-9]+\\]}, \\[r[0-9]+\\]\n+**\t...\n+**\tvst1.16\t{d[0-9]+\\[[0-9]+\\]}, \\[r[0-9]+\\]\n+**\t...\n+*/\n __fp16\n test_load_store_1 (__fp16* a, int i, __fp16* b)\n {\n   a[i] = b[i];\n }\n \n+/*\n+**test_load_store_2:\n+**\t...\n+**\tvld1.16\t{d[0-9]+\\[[0-9]+\\]}, \\[r[0-9]+\\]\n+**\t...\n+**\tvst1.16\t{d[0-9]+\\[[0-9]+\\]}, \\[r[0-9]+\\]\n+**\t...\n+*/\n __fp16\n test_load_store_2 (__fp16* a, int i, __fp16* b)\n {\n   a[i] = b[i + 2];\n   return a[i];\n }\n \n-/* { dg-final { scan-assembler-times {vst1\\.16\\t\\{d[0-9]+\\[[0-9]+\\]\\}, \\[r[0-9]+\\]} 3 } }  */\n-/* { dg-final { scan-assembler-times {vld1\\.16\\t\\{d[0-9]+\\[[0-9]+\\]\\}, \\[r[0-9]+\\]} 3 } }  */\n-\n __fp16\n test_select_1 (int sel, __fp16 a, __fp16 b)\n {"}]}