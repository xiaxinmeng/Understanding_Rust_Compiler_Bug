{"sha": "5bba48071ea0a7bc5f7fc9c9f6aaa6ca9dd24795", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWJiYTQ4MDcxZWEwYTdiYzVmN2ZjOWM5ZjZhYWE2Y2E5ZGQyNDc5NQ==", "commit": {"author": {"name": "Per Bothner", "email": "bothner@gcc.gnu.org", "date": "1999-01-09T12:49:03Z"}, "committer": {"name": "Per Bothner", "email": "bothner@gcc.gnu.org", "date": "1999-01-09T12:49:03Z"}, "message": "parse.y (build_new_array_init): Don't set EXPR_WFL_LINECOL on CONSTRUCTOR (since that trashes TREE_CST_RTL).\n\nd\n\t* parse.y (build_new_array_init):  Don't set EXPR_WFL_LINECOL\n\ton CONSTRUCTOR (since that trashes TREE_CST_RTL).\n\t(patch_new_array_init):  Clear TREE_CONSTANT also if INDIRECT_REF.\n\t(register_fields):  Set TREE_STATIC on NEW_ARRAY_INIT, not on\n\tCONSTRUCTOR (which causes expand_expr to call output_constant_def).\n\t* expr.c (java_lang_expand_expr):  Check TREE_STATIC of NEW_ARRAY_INIT.\n\nFrom-SVN: r24578", "tree": {"sha": "8b541bdda189942d0be4e3a290c3fd7a9a585fb9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8b541bdda189942d0be4e3a290c3fd7a9a585fb9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5bba48071ea0a7bc5f7fc9c9f6aaa6ca9dd24795", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5bba48071ea0a7bc5f7fc9c9f6aaa6ca9dd24795", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5bba48071ea0a7bc5f7fc9c9f6aaa6ca9dd24795", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5bba48071ea0a7bc5f7fc9c9f6aaa6ca9dd24795/comments", "author": null, "committer": null, "parents": [{"sha": "a6b1d0a7435a9e1e3a43d317e8aa797f37faf3a5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6b1d0a7435a9e1e3a43d317e8aa797f37faf3a5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a6b1d0a7435a9e1e3a43d317e8aa797f37faf3a5"}], "stats": {"total": 18, "additions": 12, "deletions": 6}, "files": [{"sha": "dc4e1a179428dfbd9098997d014ea58f5906b2e6", "filename": "gcc/java/parse.c", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5bba48071ea0a7bc5f7fc9c9f6aaa6ca9dd24795/gcc%2Fjava%2Fparse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5bba48071ea0a7bc5f7fc9c9f6aaa6ca9dd24795/gcc%2Fjava%2Fparse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.c?ref=5bba48071ea0a7bc5f7fc9c9f6aaa6ca9dd24795", "patch": "@@ -5776,7 +5776,7 @@ register_fields (flags, type, variable_list)\n \t      ctxp->static_initialized = init;\n \t      DECL_INITIAL (field_decl) = TREE_OPERAND (init, 1);\n \t      if (TREE_CODE (TREE_OPERAND (init, 1)) == NEW_ARRAY_INIT)\n-\t\tTREE_STATIC (TREE_OPERAND (TREE_OPERAND (init, 1), 0)) = 1;\n+\t\tTREE_STATIC (TREE_OPERAND (init, 1)) = 1;\n \t    }\n \t  /* A non-static field declared with an immediate initialization is\n \t     to be initialized in <init>, if any.  This field is remembered\n@@ -12478,7 +12478,7 @@ build_new_array_init (location, values)\n {\n   tree constructor = build (CONSTRUCTOR, NULL_TREE, NULL_TREE, values);\n   tree to_return = build1 (NEW_ARRAY_INIT, NULL_TREE, constructor);\n-  EXPR_WFL_LINECOL (to_return) = EXPR_WFL_LINECOL (constructor) = location;\n+  EXPR_WFL_LINECOL (to_return) = location;\n   return to_return;\n }\n \n@@ -12515,7 +12515,10 @@ patch_new_array_init (type, node)\n       if (elt == NULL_TREE || TREE_CODE (elt) != NEW_ARRAY_INIT)\n \t{\n \t  error_seen |= array_constructor_check_entry (element_type, current);\n-\t  if (! TREE_CONSTANT (TREE_VALUE (current)))\n+\t  elt = TREE_VALUE (current);\n+\t  /* When compiling to native code, STRING_CST is converted to\n+\t     INDIRECT_REF, but still with a TREE_CONSTANT flag. */\n+\t  if (! TREE_CONSTANT (elt) || TREE_CODE (elt) == INDIRECT_REF)\n \t    all_constant = 0;\n \t}\n       else"}, {"sha": "25722e038d89b34cfdb81c69284c09076e937c9b", "filename": "gcc/java/parse.y", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5bba48071ea0a7bc5f7fc9c9f6aaa6ca9dd24795/gcc%2Fjava%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5bba48071ea0a7bc5f7fc9c9f6aaa6ca9dd24795/gcc%2Fjava%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.y?ref=5bba48071ea0a7bc5f7fc9c9f6aaa6ca9dd24795", "patch": "@@ -3138,7 +3138,7 @@ register_fields (flags, type, variable_list)\n \t      ctxp->static_initialized = init;\n \t      DECL_INITIAL (field_decl) = TREE_OPERAND (init, 1);\n \t      if (TREE_CODE (TREE_OPERAND (init, 1)) == NEW_ARRAY_INIT)\n-\t\tTREE_STATIC (TREE_OPERAND (TREE_OPERAND (init, 1), 0)) = 1;\n+\t\tTREE_STATIC (TREE_OPERAND (init, 1)) = 1;\n \t    }\n \t  /* A non-static field declared with an immediate initialization is\n \t     to be initialized in <init>, if any.  This field is remembered\n@@ -9840,7 +9840,7 @@ build_new_array_init (location, values)\n {\n   tree constructor = build (CONSTRUCTOR, NULL_TREE, NULL_TREE, values);\n   tree to_return = build1 (NEW_ARRAY_INIT, NULL_TREE, constructor);\n-  EXPR_WFL_LINECOL (to_return) = EXPR_WFL_LINECOL (constructor) = location;\n+  EXPR_WFL_LINECOL (to_return) = location;\n   return to_return;\n }\n \n@@ -9877,7 +9877,10 @@ patch_new_array_init (type, node)\n       if (elt == NULL_TREE || TREE_CODE (elt) != NEW_ARRAY_INIT)\n \t{\n \t  error_seen |= array_constructor_check_entry (element_type, current);\n-\t  if (! TREE_CONSTANT (TREE_VALUE (current)))\n+\t  elt = TREE_VALUE (current);\n+\t  /* When compiling to native code, STRING_CST is converted to\n+\t     INDIRECT_REF, but still with a TREE_CONSTANT flag. */\n+\t  if (! TREE_CONSTANT (elt) || TREE_CODE (elt) == INDIRECT_REF)\n \t    all_constant = 0;\n \t}\n       else"}]}