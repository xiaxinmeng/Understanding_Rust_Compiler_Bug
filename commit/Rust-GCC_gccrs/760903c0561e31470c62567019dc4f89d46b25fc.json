{"sha": "760903c0561e31470c62567019dc4f89d46b25fc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzYwOTAzYzA1NjFlMzE0NzBjNjI1NjcwMTlkYzRmODlkNDZiMjVmYw==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@redhat.com", "date": "2001-04-22T03:05:39Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2001-04-22T03:05:39Z"}, "message": "Makefile.in: Rebuilt.\n\n\t* Makefile.in: Rebuilt.\n\t* Makefile.am (awt_java_source_files): Added Line2D.java.\n\t* java/awt/geom/Line2D.java: Wrote.\n\n\t* java/awt/Menu.java (addNotify): Wrote.\n\n\t* java/awt/PopupMenu.java (addNotify): Implemented.\n\t(show): Likewise.\n\n\t* java/awt/Scrollbar.java (addNotify): Call super.addNotify.\n\t* java/awt/List.java (addNotify): Call super.addNotify.\n\t* java/awt/Label.java (addNotify): Call super.addNotify.\n\t* java/awt/FileDialog.java (addNotify): Call super.addNotify.\n\t* java/awt/Dialog.java (addNotify): Call super.addNotify.\n\t* java/awt/Choice.java (addNotify): Call super.addNotify.\n\t* java/awt/CheckboxMenuItem.java (addNotify): Call super.addNotify.\n\t* java/awt/Checkbox.java (addNotify): Call super.addNotify.\n\n\t* java/awt/List.java (replaceItem): Notify peer.\n\n\t* java/awt/geom/Rectangle2D.java\n\t(Float.setRect(float,float,float,float)): New method.\n\n\t* java/awt/event/ContainerEvent.java (getContainer): Now returns\n\tContainer.\n\n\t* java/awt/RenderingHints.java (Key): Class now public.\n\n\t* java/awt/Rectangle.java (Rectangle): Now implements\n\tSerializable.\n\t(getPathIterator): Removed.\n\n\t* java/awt/GraphicsConfiguration.java (GraphicsConfiguration): New\n\tconstructor.\n\n\t* java/awt/FileDialog.java: Wrote.\n\n\t* java/awt/EventQueue.java (isDispatchThread): Now public.\n\t(invokeLater): Likewise.\n\n\t* java/awt/Component.java (setCursor): Update peer.\n\t(getFontMetrics): Use peer.\n\n\t* java/awt/ComponentOrientation.java (ComponentOrientation): Class\n\tnow final.\n\nFrom-SVN: r41489", "tree": {"sha": "8cf49adef6ef831f4363f6d0395a5c7770fef325", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8cf49adef6ef831f4363f6d0395a5c7770fef325"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/760903c0561e31470c62567019dc4f89d46b25fc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/760903c0561e31470c62567019dc4f89d46b25fc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/760903c0561e31470c62567019dc4f89d46b25fc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/760903c0561e31470c62567019dc4f89d46b25fc/comments", "author": null, "committer": null, "parents": [{"sha": "d80d2d2a5bc41e42d5670a5336fd38307eebb1d9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d80d2d2a5bc41e42d5670a5336fd38307eebb1d9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d80d2d2a5bc41e42d5670a5336fd38307eebb1d9"}], "stats": {"total": 376, "additions": 304, "deletions": 72}, "files": [{"sha": "63e3851580aedc00b23294c9b51760b459e38f28", "filename": "libjava/ChangeLog", "status": "modified", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/760903c0561e31470c62567019dc4f89d46b25fc/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/760903c0561e31470c62567019dc4f89d46b25fc/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=760903c0561e31470c62567019dc4f89d46b25fc", "patch": "@@ -1,3 +1,51 @@\n+2001-04-21  Tom Tromey  <tromey@redhat.com>\n+\n+\t* Makefile.in: Rebuilt.\n+\t* Makefile.am (awt_java_source_files): Added Line2D.java.\n+\t* java/awt/geom/Line2D.java: Wrote.\n+\n+\t* java/awt/Menu.java (addNotify): Wrote.\n+\n+\t* java/awt/PopupMenu.java (addNotify): Implemented.\n+\t(show): Likewise.\n+\n+\t* java/awt/Scrollbar.java (addNotify): Call super.addNotify.\n+\t* java/awt/List.java (addNotify): Call super.addNotify.\n+\t* java/awt/Label.java (addNotify): Call super.addNotify.\n+\t* java/awt/FileDialog.java (addNotify): Call super.addNotify.\n+\t* java/awt/Dialog.java (addNotify): Call super.addNotify.\n+\t* java/awt/Choice.java (addNotify): Call super.addNotify.\n+\t* java/awt/CheckboxMenuItem.java (addNotify): Call super.addNotify.\n+\t* java/awt/Checkbox.java (addNotify): Call super.addNotify.\n+\n+\t* java/awt/List.java (replaceItem): Notify peer.\n+\n+\t* java/awt/geom/Rectangle2D.java\n+\t(Float.setRect(float,float,float,float)): New method.\n+\n+\t* java/awt/event/ContainerEvent.java (getContainer): Now returns\n+\tContainer.\n+\n+\t* java/awt/RenderingHints.java (Key): Class now public.\n+\n+\t* java/awt/Rectangle.java (Rectangle): Now implements\n+\tSerializable.\n+\t(getPathIterator): Removed.\n+\n+\t* java/awt/GraphicsConfiguration.java (GraphicsConfiguration): New\n+\tconstructor.\n+\n+\t* java/awt/FileDialog.java: Wrote.\n+\n+\t* java/awt/EventQueue.java (isDispatchThread): Now public.\n+\t(invokeLater): Likewise.\n+\n+\t* java/awt/Component.java (setCursor): Update peer.\n+\t(getFontMetrics): Use peer.\n+\n+\t* java/awt/ComponentOrientation.java (ComponentOrientation): Class\n+\tnow final.\n+\n 2001-04-20  Tom Tromey  <tromey@redhat.com>\n \n \t* java/awt/List.java: Wrote."}, {"sha": "e07b11625ab9a5575d7893692e19881ed81fd089", "filename": "libjava/Makefile.am", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/760903c0561e31470c62567019dc4f89d46b25fc/libjava%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/760903c0561e31470c62567019dc4f89d46b25fc/libjava%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.am?ref=760903c0561e31470c62567019dc4f89d46b25fc", "patch": "@@ -694,6 +694,7 @@ java/awt/geom/AffineTransform.java \\\n java/awt/geom/Dimension2D.java \\\n java/awt/geom/Ellipse2D.java \\\n java/awt/geom/IllegalPathStateException.java \\\n+java/awt/geom/Line2D.java \\\n java/awt/geom/NoninvertibleTransformException.java \\\n java/awt/geom/PathIterator.java\t\\\n java/awt/geom/Point2D.java \\"}, {"sha": "2dcc77769f216f8326c626aaff0612a6158ab3d8", "filename": "libjava/Makefile.in", "status": "modified", "additions": 39, "deletions": 20, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/760903c0561e31470c62567019dc4f89d46b25fc/libjava%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/760903c0561e31470c62567019dc4f89d46b25fc/libjava%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.in?ref=760903c0561e31470c62567019dc4f89d46b25fc", "patch": "@@ -119,29 +119,43 @@ here = @here@\n libgcj_basedir = @libgcj_basedir@\n \n AUTOMAKE_OPTIONS = foreign\n-@TESTSUBDIR_TRUE@SUBDIRS = @TESTSUBDIR_TRUE@$(DIRLTDL) testsuite gcj include\n-@TESTSUBDIR_FALSE@SUBDIRS = @TESTSUBDIR_FALSE@$(DIRLTDL) gcj include\n-@USE_LIBDIR_TRUE@toolexeclibdir = @USE_LIBDIR_TRUE@$(libdir)$(MULTISUBDIR)\n-@USE_LIBDIR_FALSE@toolexeclibdir = @USE_LIBDIR_FALSE@$(toolexecdir)/lib$(MULTISUBDIR)\n-@USE_LIBDIR_FALSE@toolexecdir = @USE_LIBDIR_FALSE@$(exec_prefix)/$(target_alias)\n-@XLIB_AWT_TRUE@cond_x_ltlibrary = @XLIB_AWT_TRUE@libgcjx.la\n-@XLIB_AWT_FALSE@cond_x_ltlibrary = \n+@TESTSUBDIR_TRUE@SUBDIRS = \\\n+@TESTSUBDIR_TRUE@$(DIRLTDL) testsuite gcj include\n+@TESTSUBDIR_FALSE@SUBDIRS = \\\n+@TESTSUBDIR_FALSE@$(DIRLTDL) gcj include\n+@USE_LIBDIR_TRUE@toolexeclibdir = \\\n+@USE_LIBDIR_TRUE@$(libdir)$(MULTISUBDIR)\n+@USE_LIBDIR_FALSE@toolexeclibdir = \\\n+@USE_LIBDIR_FALSE@$(toolexecdir)/lib$(MULTISUBDIR)\n+@USE_LIBDIR_FALSE@toolexecdir = \\\n+@USE_LIBDIR_FALSE@$(exec_prefix)/$(target_alias)\n+@XLIB_AWT_TRUE@cond_x_ltlibrary = \\\n+@XLIB_AWT_TRUE@libgcjx.la\n+@XLIB_AWT_FALSE@cond_x_ltlibrary = \\\n \n toolexeclib_LTLIBRARIES = libgcj.la $(cond_x_ltlibrary)\n toolexeclib_DATA = libgcj.spec\n data_DATA = libgcj.jar\n \n-@NEEDS_DATA_START_TRUE@toolexeclib_LIBRARIES = @NEEDS_DATA_START_TRUE@libgcjdata.a\n-@NEEDS_DATA_START_TRUE@libgcjdata_a_SOURCES = @NEEDS_DATA_START_TRUE@libgcjdata.c\n+@NEEDS_DATA_START_TRUE@toolexeclib_LIBRARIES = \\\n+@NEEDS_DATA_START_TRUE@libgcjdata.a\n+@NEEDS_DATA_START_TRUE@libgcjdata_a_SOURCES = \\\n+@NEEDS_DATA_START_TRUE@libgcjdata.c\n \n-@NATIVE_TRUE@bin_PROGRAMS = @NATIVE_TRUE@jv-convert gij\n+@NATIVE_TRUE@bin_PROGRAMS = \\\n+@NATIVE_TRUE@jv-convert gij\n \n bin_SCRIPTS = addr2name.awk\n-@CANADIAN_TRUE@@NULL_TARGET_TRUE@ZIP = @CANADIAN_TRUE@@NULL_TARGET_TRUE@$(MULTIBUILDTOP)../$(COMPPATH)/fastjar/fastjar$(EXEEXT)\n-@CANADIAN_TRUE@@NULL_TARGET_FALSE@ZIP = @CANADIAN_TRUE@@NULL_TARGET_FALSE@fastjar\n-@CANADIAN_FALSE@ZIP = @CANADIAN_FALSE@$(MULTIBUILDTOP)../$(COMPPATH)/fastjar/fastjar$(EXEEXT)\n-@CANADIAN_TRUE@GCJH = @CANADIAN_TRUE@gcjh\n-@CANADIAN_FALSE@GCJH = @CANADIAN_FALSE@$(MULTIBUILDTOP)../$(COMPPATH)/gcc/gcjh$(EXEEXT)\n+@CANADIAN_TRUE@@NULL_TARGET_TRUE@ZIP = \\\n+@CANADIAN_TRUE@@NULL_TARGET_TRUE@$(MULTIBUILDTOP)../$(COMPPATH)/fastjar/fastjar$(EXEEXT)\n+@CANADIAN_TRUE@@NULL_TARGET_FALSE@ZIP = \\\n+@CANADIAN_TRUE@@NULL_TARGET_FALSE@fastjar\n+@CANADIAN_FALSE@ZIP = \\\n+@CANADIAN_FALSE@$(MULTIBUILDTOP)../$(COMPPATH)/fastjar/fastjar$(EXEEXT)\n+@CANADIAN_TRUE@GCJH = \\\n+@CANADIAN_TRUE@gcjh\n+@CANADIAN_FALSE@GCJH = \\\n+@CANADIAN_FALSE@$(MULTIBUILDTOP)../$(COMPPATH)/gcc/gcjh$(EXEEXT)\n \n GCJ_WITH_FLAGS = $(GCJ) --encoding=UTF-8\n \n@@ -160,8 +174,10 @@ AM_CXXFLAGS = -fno-rtti -fvtable-thunks -fnon-call-exceptions \\\n \t-fdollars-in-identifiers \\\n \t@LIBGCJ_CXXFLAGS@ @X_CFLAGS@ $(WARNINGS) -D_GNU_SOURCE\n \n-@USING_GCC_TRUE@AM_CFLAGS = @USING_GCC_TRUE@@LIBGCJ_CFLAGS@ $(WARNINGS)\n-@USING_GCC_FALSE@AM_CFLAGS = @USING_GCC_FALSE@@LIBGCJ_CFLAGS@\n+@USING_GCC_TRUE@AM_CFLAGS = \\\n+@USING_GCC_TRUE@@LIBGCJ_CFLAGS@ $(WARNINGS)\n+@USING_GCC_FALSE@AM_CFLAGS = \\\n+@USING_GCC_FALSE@@LIBGCJ_CFLAGS@\n \n JCFLAGS = -g\n JC1FLAGS = @LIBGCJ_JAVAFLAGS@ $(GCJFLAGS)\n@@ -229,7 +245,8 @@ extra_headers = java/lang/Object.h java/lang/Class.h\n \n NM = nm\n \n-@NATIVE_TRUE@@MAINTAINER_MODE_TRUE@noinst_PROGRAMS = @NATIVE_TRUE@@MAINTAINER_MODE_TRUE@gen-from-JIS\n+@NATIVE_TRUE@@MAINTAINER_MODE_TRUE@noinst_PROGRAMS = \\\n+@NATIVE_TRUE@@MAINTAINER_MODE_TRUE@gen-from-JIS\n \n CONVERT_DIR = gnu/gcj/convert\n \n@@ -429,6 +446,7 @@ java/awt/geom/AffineTransform.java \\\n java/awt/geom/Dimension2D.java \\\n java/awt/geom/Ellipse2D.java \\\n java/awt/geom/IllegalPathStateException.java \\\n+java/awt/geom/Line2D.java \\\n java/awt/geom/NoninvertibleTransformException.java \\\n java/awt/geom/PathIterator.java\t\\\n java/awt/geom/Point2D.java \\\n@@ -1194,7 +1212,7 @@ libgcj-test.spec.in libgcj.spec.in\n \n DISTFILES = $(DIST_COMMON) $(SOURCES) $(HEADERS) $(TEXINFOS) $(EXTRA_DIST)\n \n-TAR = gtar\n+TAR = tar\n GZIP_ENV = --best\n DIST_SUBDIRS =  @DIRLTDL@ testsuite gcj include @DIRLTDL@ gcj include\n DEP_FILES =  .deps/$(srcdir)/$(CONVERT_DIR)/gen-from-JIS.P \\\n@@ -1378,6 +1396,7 @@ DEP_FILES =  .deps/$(srcdir)/$(CONVERT_DIR)/gen-from-JIS.P \\\n .deps/java/awt/geom/AffineTransform.P .deps/java/awt/geom/Dimension2D.P \\\n .deps/java/awt/geom/Ellipse2D.P \\\n .deps/java/awt/geom/IllegalPathStateException.P \\\n+.deps/java/awt/geom/Line2D.P \\\n .deps/java/awt/geom/NoninvertibleTransformException.P \\\n .deps/java/awt/geom/PathIterator.P .deps/java/awt/geom/Point2D.P \\\n .deps/java/awt/geom/Rectangle2D.P \\\n@@ -2092,7 +2111,7 @@ distdir: $(DISTFILES)\n \t@for file in $(DISTFILES); do \\\n \t  d=$(srcdir); \\\n \t  if test -d $$d/$$file; then \\\n-\t    cp -pr $$d/$$file $(distdir)/$$file; \\\n+\t    cp -pr $$/$$file $(distdir)/$$file; \\\n \t  else \\\n \t    test -f $(distdir)/$$file \\\n \t    || ln $$d/$$file $(distdir)/$$file 2> /dev/null \\"}, {"sha": "82ced6412f6ed259718856e138d05f6600e320a9", "filename": "libjava/java/awt/Checkbox.java", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/760903c0561e31470c62567019dc4f89d46b25fc/libjava%2Fjava%2Fawt%2FCheckbox.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/760903c0561e31470c62567019dc4f89d46b25fc/libjava%2Fjava%2Fawt%2FCheckbox.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FCheckbox.java?ref=760903c0561e31470c62567019dc4f89d46b25fc", "patch": "@@ -1,4 +1,4 @@\n-/* Copyright (C) 2000  Free Software Foundation\n+/* Copyright (C) 2000, 2001  Free Software Foundation\n \n    This file is part of libgcj.\n \n@@ -63,6 +63,7 @@ public void addNotify ()\n   {\n     if (peer == null)\n       peer = getToolkit ().createCheckbox (this);\n+    super.addNotify ();\n   }\n \n   /** Returns the current CheckboxGroup associated with this"}, {"sha": "007d3dc4e2a6826a0d47460601b7ad87612475d4", "filename": "libjava/java/awt/CheckboxMenuItem.java", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/760903c0561e31470c62567019dc4f89d46b25fc/libjava%2Fjava%2Fawt%2FCheckboxMenuItem.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/760903c0561e31470c62567019dc4f89d46b25fc/libjava%2Fjava%2Fawt%2FCheckboxMenuItem.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FCheckboxMenuItem.java?ref=760903c0561e31470c62567019dc4f89d46b25fc", "patch": "@@ -1,4 +1,4 @@\n-/* Copyright (C) 2000  Free Software Foundation\n+/* Copyright (C) 2000, 2001  Free Software Foundation\n \n    This file is part of libgcj.\n \n@@ -55,6 +55,7 @@ public void addNotify ()\n \t// what else to do.\n \tpeer = Toolkit.getDefaultToolkit ().createCheckboxMenuItem (this);\n       }\n+    super.addNotify ();\n   }\n \n   /** Returns this checkbox's label if this checkbox is selected.  */"}, {"sha": "6b9a112ecb8144bac1d77997240cfd2503cd3705", "filename": "libjava/java/awt/Choice.java", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/760903c0561e31470c62567019dc4f89d46b25fc/libjava%2Fjava%2Fawt%2FChoice.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/760903c0561e31470c62567019dc4f89d46b25fc/libjava%2Fjava%2Fawt%2FChoice.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FChoice.java?ref=760903c0561e31470c62567019dc4f89d46b25fc", "patch": "@@ -1,4 +1,4 @@\n-/* Copyright (C) 2000  Free Software Foundation\n+/* Copyright (C) 2000, 2001  Free Software Foundation\n \n    This file is part of libgcj.\n \n@@ -66,6 +66,7 @@ public void addNotify ()\n   {\n     if (peer == null)\n       peer = getToolkit ().createChoice (this);\n+    super.addNotify ();\n   }\n \n   /** Returns number of items."}, {"sha": "0feb69451aab9d40e0aebbda16acdd70e30007ec", "filename": "libjava/java/awt/Component.java", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/760903c0561e31470c62567019dc4f89d46b25fc/libjava%2Fjava%2Fawt%2FComponent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/760903c0561e31470c62567019dc4f89d46b25fc/libjava%2Fjava%2Fawt%2FComponent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FComponent.java?ref=760903c0561e31470c62567019dc4f89d46b25fc", "patch": "@@ -1,4 +1,4 @@\n-/* Copyright (C) 1999, 2000  Free Software Foundation\n+/* Copyright (C) 1999, 2000, 2001  Free Software Foundation\n \n    This file is part of libgcj.\n \n@@ -649,14 +649,18 @@ public Graphics getGraphics()\n   \n   public FontMetrics getFontMetrics(Font font)\n   {\n-    return getToolkit().getFontMetrics(font);\n+    if (peer == null)\n+      return getToolkit().getFontMetrics(font);\n+    return peer.getFontMetrics (font);\n   }\n-  \n+\n   public void setCursor(Cursor cursor)\n   {\n     this.cursor = cursor;\n+    if (peer != null)\n+      peer.setCursor (cursor);\n   }\n-  \n+\n   public Cursor getCursor()\n   {\n     return this.cursor;\n@@ -705,7 +709,7 @@ public void repaint(long tm, int x, int y, int width, int height)\n \t  parent.repaint(tm, x+getX(), y+getY(), width, height);\n \treturn;\n       }\n-    \n+\n     if (peer != null)\n       peer.repaint(tm, x, y, width, height);\n   }"}, {"sha": "5497d230b12b3a59ea266a3fe1d43709728714f7", "filename": "libjava/java/awt/ComponentOrientation.java", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/760903c0561e31470c62567019dc4f89d46b25fc/libjava%2Fjava%2Fawt%2FComponentOrientation.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/760903c0561e31470c62567019dc4f89d46b25fc/libjava%2Fjava%2Fawt%2FComponentOrientation.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FComponentOrientation.java?ref=760903c0561e31470c62567019dc4f89d46b25fc", "patch": "@@ -1,4 +1,4 @@\n-/* Copyright (C) 2000  Free Software Foundation\n+/* Copyright (C) 2000, 2001  Free Software Foundation\n \n    This file is part of libgcj.\n \n@@ -13,7 +13,7 @@\n import java.util.Locale;\n import java.util.ResourceBundle;\n \n-public class ComponentOrientation implements java.io.Serializable\n+public final class ComponentOrientation implements java.io.Serializable\n {\n   // Here is a wild guess.\n   private static int HORIZONTAL_ID    = 1 << 0,\n@@ -29,7 +29,7 @@ public class ComponentOrientation implements java.io.Serializable\n   // FIXME: This field is from the serialization spec, but what are the \n   // correct values?\n   int orientation;\n-  \n+\n   ComponentOrientation(int orientation)\n   {\n     this.orientation = orientation;\n@@ -54,7 +54,7 @@ public static ComponentOrientation getOrientation(Locale locale)\n   public static ComponentOrientation getOrientation(ResourceBundle bdl)\n   {\n     ComponentOrientation r;\n-    \n+\n     try\n     {\n       Object obj = bdl.getObject(\"Orientation\");"}, {"sha": "7b84907931655bab2c41bfac72c654b4381f8f9d", "filename": "libjava/java/awt/Dialog.java", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/760903c0561e31470c62567019dc4f89d46b25fc/libjava%2Fjava%2Fawt%2FDialog.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/760903c0561e31470c62567019dc4f89d46b25fc/libjava%2Fjava%2Fawt%2FDialog.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FDialog.java?ref=760903c0561e31470c62567019dc4f89d46b25fc", "patch": "@@ -63,6 +63,7 @@ public void addNotify ()\n   {\n     if (peer == null)\n       peer = getToolkit ().createDialog (this);\n+    super.addNotify ();\n   }\n \n   public boolean isModal ()"}, {"sha": "7037118c0dd94ca81a1b9ce0e1879f3a968cd46c", "filename": "libjava/java/awt/EventQueue.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/760903c0561e31470c62567019dc4f89d46b25fc/libjava%2Fjava%2Fawt%2FEventQueue.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/760903c0561e31470c62567019dc4f89d46b25fc/libjava%2Fjava%2Fawt%2FEventQueue.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FEventQueue.java?ref=760903c0561e31470c62567019dc4f89d46b25fc", "patch": "@@ -1,4 +1,4 @@\n-/* Copyright (C) 2000  Free Software Foundation\n+/* Copyright (C) 2000, 2001  Free Software Foundation\n \n    This file is part of libgcj.\n \n@@ -166,7 +166,7 @@ public static void invokeAndWait(Runnable runnable)\n   }\n   \n   /** @since JDK1.2 */\n-  static void invokeLater(Runnable runnable)\n+  public static void invokeLater(Runnable runnable)\n   {\n     EventQueue eq = Toolkit.getDefaultToolkit().getSystemEventQueue(); \n \n@@ -176,7 +176,7 @@ static void invokeLater(Runnable runnable)\n     eq.postEvent(ie);\n   }\n   \n-  static boolean isDispatchThread()\n+  public static boolean isDispatchThread()\n   {\n     EventQueue eq = Toolkit.getDefaultToolkit().getSystemEventQueue(); \n     return (Thread.currentThread() == eq.dispatchThread);"}, {"sha": "f1ba23c358a061333185f931f0f3014c96276a83", "filename": "libjava/java/awt/FileDialog.java", "status": "modified", "additions": 104, "deletions": 5, "changes": 109, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/760903c0561e31470c62567019dc4f89d46b25fc/libjava%2Fjava%2Fawt%2FFileDialog.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/760903c0561e31470c62567019dc4f89d46b25fc/libjava%2Fjava%2Fawt%2FFileDialog.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FFileDialog.java?ref=760903c0561e31470c62567019dc4f89d46b25fc", "patch": "@@ -1,4 +1,4 @@\n-/* Copyright (C) 2000  Free Software Foundation\n+/* Copyright (C) 2000, 2001  Free Software Foundation\n \n    This file is part of libgcj.\n \n@@ -8,13 +8,112 @@\n \n package java.awt;\n \n-/* A very incomplete placeholder. */\n+import java.awt.peer.FileDialogPeer;\n+import java.io.FilenameFilter;\n+\n+/**\n+ * @author Tom Tromey <tromey@redhat.com>\n+ * @date April 20, 2001\n+ */\n \n public class FileDialog extends Dialog\n {\n-  public FileDialog (Frame owner)\n+  public static int LOAD = 0;\n+  public static int SAVE = 1;\n+\n+  public FileDialog (Frame parent)\n+  {\n+    this (parent, \"\", LOAD);\n+  }\n+\n+  public FileDialog (Frame parent, String title)\n+  {\n+    this (parent, title, LOAD);\n+  }\n+\n+  public FileDialog (Frame parent, String title, int mode)\n+  {\n+    super (parent, title, true);\n+    if (mode != LOAD && mode != SAVE)\n+      throw new IllegalArgumentException (\"unknown mode: \" + mode);\n+    this.mode = mode;\n+  }\n+\n+  public void addNotify ()\n+  {\n+    if (peer == null)\n+      peer = getToolkit ().createFileDialog (this);\n+    super.addNotify ();\n+  }\n+\n+  public String getDirectory ()\n+  {\n+    return dir;\n+  }\n+\n+  public String getFile ()\n+  {\n+    return file;\n+  }\n+\n+  public FilenameFilter getFilenameFilter ()\n   {\n-    super(owner);\n-    // FIXME\n+    return filter;\n   }\n+\n+  public int getMode ()\n+  {\n+    return mode;\n+  }\n+\n+  protected String paramString ()\n+  {\n+    return (\"FileDialog[mode=\" + mode\n+\t    + \",dir=\" + dir\n+\t    + \",file=\" + file + \"]\");\n+  }\n+\n+  public void setDirectory (String dir)\n+  {\n+    this.dir = dir;\n+    if (peer != null)\n+      {\n+\tFileDialogPeer f = (FileDialogPeer) peer;\n+\tf.setDirectory (dir);\n+      }\n+  }\n+\n+  public void setFile (String file)\n+  {\n+    this.file = file;\n+    if (peer != null)\n+      {\n+\tFileDialogPeer f = (FileDialogPeer) peer;\n+\tf.setFile (file);\n+      }\n+  }\n+\n+  public void setFilenameFilter (FilenameFilter filter)\n+  {\n+    this.filter = filter;\n+    if (peer != null)\n+      {\n+\tFileDialogPeer f = (FileDialogPeer) peer;\n+\tf.setFilenameFilter (filter);\n+      }\n+  }\n+\n+  public void setMode (int mode)\n+  {\n+    if (mode != LOAD && mode != SAVE)\n+      throw new IllegalArgumentException (\"unknown mode: \" + mode);\n+    this.mode = mode;\n+    // FIXME: update peer?\n+  }\n+\n+  // Names here from serialization spec.\n+  private int mode;\n+  private String dir;\n+  private String file;\n+  private FilenameFilter filter;\n }"}, {"sha": "8e4fd088165e91304214600f1ca1d8f1d1c0f92c", "filename": "libjava/java/awt/GraphicsConfiguration.java", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/760903c0561e31470c62567019dc4f89d46b25fc/libjava%2Fjava%2Fawt%2FGraphicsConfiguration.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/760903c0561e31470c62567019dc4f89d46b25fc/libjava%2Fjava%2Fawt%2FGraphicsConfiguration.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FGraphicsConfiguration.java?ref=760903c0561e31470c62567019dc4f89d46b25fc", "patch": "@@ -1,4 +1,4 @@\n-/* Copyright (C) 2000  Free Software Foundation\n+/* Copyright (C) 2000, 2001  Free Software Foundation\n \n    This file is part of libgcj.\n \n@@ -17,6 +17,12 @@\n \n public abstract class GraphicsConfiguration\n {\n+  // Can't instantiate directly.  Having a protected constructor seems\n+  // redundant, but that is what the docs specify.\n+  protected GraphicsConfiguration ()\n+  {\n+  }\n+\n   /*\n   public abstract GraphicsDevice getDevice();\n   */"}, {"sha": "d5992889a10eb34ed8e1e4564be8a21b0126ffa5", "filename": "libjava/java/awt/Label.java", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/760903c0561e31470c62567019dc4f89d46b25fc/libjava%2Fjava%2Fawt%2FLabel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/760903c0561e31470c62567019dc4f89d46b25fc/libjava%2Fjava%2Fawt%2FLabel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FLabel.java?ref=760903c0561e31470c62567019dc4f89d46b25fc", "patch": "@@ -1,4 +1,4 @@\n-/* Copyright (C) 2000  Free Software Foundation\n+/* Copyright (C) 2000, 2001  Free Software Foundation\n \n    This file is part of libjava.\n \n@@ -43,6 +43,7 @@ public void addNotify ()\n   {\n     if (peer == null)\n       peer = getToolkit ().createLabel (this);\n+    super.addNotify ();\n   }\n \n   public int getAlignment ()"}, {"sha": "f3d5e4becfa86d8ffc1132ff444ed1521b57c560", "filename": "libjava/java/awt/List.java", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/760903c0561e31470c62567019dc4f89d46b25fc/libjava%2Fjava%2Fawt%2FList.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/760903c0561e31470c62567019dc4f89d46b25fc/libjava%2Fjava%2Fawt%2FList.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FList.java?ref=760903c0561e31470c62567019dc4f89d46b25fc", "patch": "@@ -52,6 +52,7 @@ public void addNotify ()\n   {\n     if (peer != null)\n       peer = getToolkit ().createList (this);\n+    super.addNotify ();\n   }\n \n   public int getItemCount ()\n@@ -107,7 +108,12 @@ public void addItem (String item, int index)\n   public void replaceItem (String item, int index)\n   {\n     items.setElementAt (item, index);\n-    // FIXME: notify peer\n+    if (peer != null)\n+      {\n+\tListPeer l = (ListPeer) peer;\n+\tl.delItems (index, index);\n+\tl.add (item, index);\n+      }\n   }\n \n   public void removeAll ()"}, {"sha": "6d52d050b469057c6db74324cfd1945e10fccc15", "filename": "libjava/java/awt/Menu.java", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/760903c0561e31470c62567019dc4f89d46b25fc/libjava%2Fjava%2Fawt%2FMenu.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/760903c0561e31470c62567019dc4f89d46b25fc/libjava%2Fjava%2Fawt%2FMenu.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FMenu.java?ref=760903c0561e31470c62567019dc4f89d46b25fc", "patch": "@@ -1,4 +1,4 @@\n-/* Copyright (C) 1999, 2000  Free Software Foundation\n+/* Copyright (C) 1999, 2000, 2001  Free Software Foundation\n \n    This file is part of libjava.\n \n@@ -40,7 +40,13 @@ public Menu(String label, boolean tearOff)\n \n   public void addNotify()\n   {\n-    // FIXME\n+    if (peer != null)\n+      {\n+\t// This choice of toolkit seems unsatisfying, but I'm not sure\n+\t// what else to do.\n+\tpeer = Toolkit.getDefaultToolkit ().createMenu (this);\n+      }\n+    super.addNotify ();\n   }\n \n   public void removeNotify()"}, {"sha": "40de61abbb59e7ef27618cc329d7a241ffcf64cb", "filename": "libjava/java/awt/MenuBar.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/760903c0561e31470c62567019dc4f89d46b25fc/libjava%2Fjava%2Fawt%2FMenuBar.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/760903c0561e31470c62567019dc4f89d46b25fc/libjava%2Fjava%2Fawt%2FMenuBar.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FMenuBar.java?ref=760903c0561e31470c62567019dc4f89d46b25fc", "patch": "@@ -1,4 +1,4 @@\n-/* Copyright (C) 1999, 2000  Free Software Foundation\n+/* Copyright (C) 1999, 2000, 2001  Free Software Foundation\n \n    This file is part of libjava.\n "}, {"sha": "b127bfa87a70bde789671da7a12d46d1aafe5c05", "filename": "libjava/java/awt/MenuItem.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/760903c0561e31470c62567019dc4f89d46b25fc/libjava%2Fjava%2Fawt%2FMenuItem.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/760903c0561e31470c62567019dc4f89d46b25fc/libjava%2Fjava%2Fawt%2FMenuItem.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FMenuItem.java?ref=760903c0561e31470c62567019dc4f89d46b25fc", "patch": "@@ -1,4 +1,4 @@\n-/* Copyright (C) 1999, 2000  Free Software Foundation\n+/* Copyright (C) 1999, 2000, 2001  Free Software Foundation\n \n    This file is part of libgcj.\n "}, {"sha": "ed4f343239d283a61189a13ff96883a493504ecf", "filename": "libjava/java/awt/PopupMenu.java", "status": "modified", "additions": 23, "deletions": 4, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/760903c0561e31470c62567019dc4f89d46b25fc/libjava%2Fjava%2Fawt%2FPopupMenu.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/760903c0561e31470c62567019dc4f89d46b25fc/libjava%2Fjava%2Fawt%2FPopupMenu.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FPopupMenu.java?ref=760903c0561e31470c62567019dc4f89d46b25fc", "patch": "@@ -1,4 +1,4 @@\n-/* Copyright (C) 2000  Free Software Foundation\n+/* Copyright (C) 2000, 2001  Free Software Foundation\n \n    This file is part of libjava.\n \n@@ -8,6 +8,8 @@\n \n package java.awt;\n \n+import java.awt.peer.PopupMenuPeer;\n+\n /* Status: Incomplete. */\n \n public class PopupMenu extends Menu\n@@ -24,14 +26,31 @@ public PopupMenu(String label)\n \n   public void addNotify()\n   {\n-    // FIXME\n+    if (peer != null)\n+      {\n+\t// This choice of toolkit seems unsatisfying, but I'm not sure\n+\t// what else to do.\n+\tpeer = Toolkit.getDefaultToolkit ().createPopupMenu (this);\n+      }\n+    super.addNotify ();\n   }\n \n   public void show(Component origin, int x, int y)\n   {\n-    // FIXME\n+    if (! origin.isShowing ()\n+\t// FIXME: or ! parent is showing -- but how?\n+\t)\n+      {\n+\t// This is an invalid call which we choose to ignore.\n+\treturn;\n+      }\n+\t\n+    addNotify ();\t\t// FIXME?\n+    Event e = new Event (origin, 0, 0, x, y, 0, 0);\n+    PopupMenuPeer p = (PopupMenuPeer) peer;\n+    p.show (e);\n   }\n-  \n+\n   // Accessibility API not yet implemented.\n   // public AccessibleContext getAccessibleContext()\n }"}, {"sha": "7e7ef728d323d28393daaf160a4d7b214a33b9a4", "filename": "libjava/java/awt/Rectangle.java", "status": "modified", "additions": 5, "deletions": 8, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/760903c0561e31470c62567019dc4f89d46b25fc/libjava%2Fjava%2Fawt%2FRectangle.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/760903c0561e31470c62567019dc4f89d46b25fc/libjava%2Fjava%2Fawt%2FRectangle.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FRectangle.java?ref=760903c0561e31470c62567019dc4f89d46b25fc", "patch": "@@ -1,4 +1,4 @@\n-/* Copyright (C) 1999, 2000  Free Software Foundation\n+/* Copyright (C) 1999, 2000, 2001  Free Software Foundation\n \n    This file is part of libjava.\n \n@@ -7,11 +7,14 @@\n details.  */\n \n package java.awt;\n+\n import java.awt.geom.*;\n+import java.io.Serializable;\n \n /* Status:  Mostly complete. Some of the Java2D stuff is commented out. */\n \n-public class Rectangle extends Rectangle2D implements Cloneable, Shape\n+public class Rectangle extends Rectangle2D\n+  implements Cloneable, Shape, Serializable\n {\n   public int x;\n   public int y;\n@@ -151,12 +154,6 @@ public Point getLocation()\n     return new Point(x,y);\n   }\n \n-  public PathIterator getPathIterator (AffineTransform t)\n-  {\n-    // FIXME\n-    return null;\n-  }\n-\n   public Dimension getSize()\n   {\n     return new Dimension(width, height);"}, {"sha": "c0010cb7d6109b60b230491662995801c3db0609", "filename": "libjava/java/awt/RenderingHints.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/760903c0561e31470c62567019dc4f89d46b25fc/libjava%2Fjava%2Fawt%2FRenderingHints.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/760903c0561e31470c62567019dc4f89d46b25fc/libjava%2Fjava%2Fawt%2FRenderingHints.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FRenderingHints.java?ref=760903c0561e31470c62567019dc4f89d46b25fc", "patch": "@@ -1,4 +1,4 @@\n-/* Copyright (C) 2000  Free Software Foundation\n+/* Copyright (C) 2000, 2001  Free Software Foundation\n \n    This file is part of libgcj.\n \n@@ -16,7 +16,7 @@ public class RenderingHints implements\n     Cloneable\n {\n \n-  static abstract class Key\n+  public abstract static class Key\n   {\n     private int intKey;\n "}, {"sha": "186a7c34580f50e7867dd543eec804de19ebdab7", "filename": "libjava/java/awt/Scrollbar.java", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/760903c0561e31470c62567019dc4f89d46b25fc/libjava%2Fjava%2Fawt%2FScrollbar.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/760903c0561e31470c62567019dc4f89d46b25fc/libjava%2Fjava%2Fawt%2FScrollbar.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FScrollbar.java?ref=760903c0561e31470c62567019dc4f89d46b25fc", "patch": "@@ -1,4 +1,4 @@\n-/* Copyright (C) 2000  Free Software Foundation\n+/* Copyright (C) 2000, 2001  Free Software Foundation\n \n    This file is part of libjava.\n \n@@ -55,6 +55,7 @@ public void addNotify ()\n   {\n     if (peer == null)\n       peer = getToolkit ().createScrollbar (this);\n+    super.addNotify ();\n   }\n \n   public int getOrientation ()"}, {"sha": "0836b5f5844e5d4990d25b8bae90be9af532c266", "filename": "libjava/java/awt/TextComponent.java", "status": "modified", "additions": 19, "deletions": 6, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/760903c0561e31470c62567019dc4f89d46b25fc/libjava%2Fjava%2Fawt%2FTextComponent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/760903c0561e31470c62567019dc4f89d46b25fc/libjava%2Fjava%2Fawt%2FTextComponent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FTextComponent.java?ref=760903c0561e31470c62567019dc4f89d46b25fc", "patch": "@@ -1,4 +1,4 @@\n-/* Copyright (C) 1999  Free Software Foundation\n+/* Copyright (C) 1999, 2001  Free Software Foundation\n \n    This file is part of libjava.\n \n@@ -7,16 +7,25 @@\n details.  */\n \n package java.awt;\n+\n import java.awt.event.*;\n+import java.awt.peer.TextComponentPeer;\n \n /* A very incomplete placeholder. */\n \n public class TextComponent extends Component\n {\n+  protected TextListener textListener;\n+\n   char[] buffer;\n   int length;\n   int caretPosition;\n \n+  public synchronized void addTextListener (TextListener listener)\n+  {\n+    textListener = AWTEventMulticaster.add (textListener, listener);\n+  }\n+\n   public synchronized String getText ()\n   { return new String(buffer, 0, length); }\n \n@@ -28,11 +37,15 @@ public synchronized void setText (String text)\n     text.getChars(0, length, buffer, 0);\n   }\n \n-  public synchronized void addTextListener (TextListener listener)\n-  { /* FIXME */ }\n-\n   public int getCaretPosition () { return caretPosition; }\n \n-  public void setCaretPosition (int pos) { caretPosition = pos; }\n-\n+  public void setCaretPosition (int pos)\n+  {\n+    caretPosition = pos;\n+    if (peer != null)\n+      {\n+\tTextComponentPeer t = (TextComponentPeer) peer;\n+\tt.setCaretPosition (pos);\n+      }\n+  }\n }"}, {"sha": "99964141857bab5b5e00d1880fa5aa534ccbc893", "filename": "libjava/java/awt/event/ContainerEvent.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/760903c0561e31470c62567019dc4f89d46b25fc/libjava%2Fjava%2Fawt%2Fevent%2FContainerEvent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/760903c0561e31470c62567019dc4f89d46b25fc/libjava%2Fjava%2Fawt%2Fevent%2FContainerEvent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fevent%2FContainerEvent.java?ref=760903c0561e31470c62567019dc4f89d46b25fc", "patch": "@@ -1,4 +1,4 @@\n-/* Copyright (C) 2000  Free Software Foundation\n+/* Copyright (C) 2000, 2001  Free Software Foundation\n \n    This file is part of libjava.\n \n@@ -35,9 +35,9 @@ public Component getChild ()\n     return child;\n   }\n \n-  public Component getContainer ()\n+  public Container getContainer ()\n   {\n-    return (Component) source;\n+    return (Container) source;\n   }\n \n   public String paramString ()"}, {"sha": "f0957b12e78e952d58c860ad16c23eadf6f31bed", "filename": "libjava/java/awt/geom/Rectangle2D.java", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/760903c0561e31470c62567019dc4f89d46b25fc/libjava%2Fjava%2Fawt%2Fgeom%2FRectangle2D.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/760903c0561e31470c62567019dc4f89d46b25fc/libjava%2Fjava%2Fawt%2Fgeom%2FRectangle2D.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fgeom%2FRectangle2D.java?ref=760903c0561e31470c62567019dc4f89d46b25fc", "patch": "@@ -1,4 +1,4 @@\n-/* Copyright (C) 2000  Free Software Foundation\n+/* Copyright (C) 2000, 2001  Free Software Foundation\n \n    This file is part of libjava.\n \n@@ -379,6 +379,14 @@ public void setRect (double x, double y, double w, double h)\n       this.height = (float) h;\n     }\n \n+    public void setRect (float x, float y, float w, float h)\n+    {\n+      this.x = x;\n+      this.y = y;\n+      this.width = w;\n+      this.height = h;\n+    }\n+\n     public void setRect (Rectangle2D r)\n     {\n       this.x = (float) r.getX ();"}]}