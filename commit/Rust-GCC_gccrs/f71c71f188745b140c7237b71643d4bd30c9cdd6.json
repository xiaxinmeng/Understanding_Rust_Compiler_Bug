{"sha": "f71c71f188745b140c7237b71643d4bd30c9cdd6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjcxYzcxZjE4ODc0NWIxNDBjNzIzN2I3MTY0M2Q0YmQzMGM5Y2RkNg==", "commit": {"author": {"name": "Torbjorn Granlund", "email": "tege@gnu.org", "date": "1994-07-01T12:52:38Z"}, "committer": {"name": "Torbjorn Granlund", "email": "tege@gnu.org", "date": "1994-07-01T12:52:38Z"}, "message": "Test for _AM29K and _IBMR2, not ___AM29K__ and ___IBMR2__.\n\n(arm umul_ppmm): New definition.\n(clipper umul_ppmm, smul_ppmm, __umulsidi3): New definitions.\n(hppa count_leading_zeros): New definition.\n(i960 umul_ppmm, __umulsidi3): New definitions.\n(mc68000 umul_ppmm): Use %. before size suffixes.\n(mc88110 umul_ppmm, udiv_qrnnd): Rewrite.\n(mc88000): Get UMUL_TIME and UDIV_TIME right.\n(mips): Get UMUL_TIME right.\n(ns32000 umul_ppmm): New definition.\n(ns32000 udiv_qrnnd): Rename from bogus div_qrnnd, rewrite.\n(powerpc umul_ppmm, smul_ppmm): New definitions.\n(_IBMR2/powerpc add_ssaaaa, sub_ddmmss): Improve.\n(pyr umul_ppmm): Fix typo.\n(sparc add_ssaaaa, sub_ddmmss): Match constant 0 for all inputs.\n(vax sdiv_qrnnd): New definition.\n\nFrom-SVN: r7629", "tree": {"sha": "4de60f56d7d1850f542d5c5a262b154c7d698c21", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4de60f56d7d1850f542d5c5a262b154c7d698c21"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f71c71f188745b140c7237b71643d4bd30c9cdd6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f71c71f188745b140c7237b71643d4bd30c9cdd6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f71c71f188745b140c7237b71643d4bd30c9cdd6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f71c71f188745b140c7237b71643d4bd30c9cdd6/comments", "author": null, "committer": null, "parents": [{"sha": "ab0b65811bd9a0ed2408e16d756c712818d9a8d8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab0b65811bd9a0ed2408e16d756c712818d9a8d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ab0b65811bd9a0ed2408e16d756c712818d9a8d8"}], "stats": {"total": 404, "additions": 292, "deletions": 112}, "files": [{"sha": "4b30d71e1f604876b48418d3246eb643a556b1a6", "filename": "gcc/longlong.h", "status": "modified", "additions": 292, "deletions": 112, "changes": 404, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f71c71f188745b140c7237b71643d4bd30c9cdd6/gcc%2Flonglong.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f71c71f188745b140c7237b71643d4bd30c9cdd6/gcc%2Flonglong.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flonglong.h?ref=f71c71f188745b140c7237b71643d4bd30c9cdd6", "patch": "@@ -1,5 +1,5 @@\n /* longlong.h -- definitions for mixed size 32/64 bit arithmetic.\n-   Copyright (C) 1991, 1992 Free Software Foundation, Inc.\n+   Copyright (C) 1991, 1992, 1994 Free Software Foundation, Inc.\n \n    This definition file is free software; you can redistribute it\n    and/or modify it under the terms of the GNU General Public\n@@ -72,7 +72,7 @@\n \n    Please add support for more CPUs here, or improve the current support\n    for the CPUs below!\n-   (E.g. WE32100, i960, IBM360.)  */\n+   (E.g. WE32100, IBM360.)  */\n \n #if defined (__GNUC__) && !defined (NO_ASM)\n \n@@ -86,7 +86,7 @@\n #define __AND_CLOBBER_CC , \"cc\"\n #endif /* __GNUC__ < 2 */\n \n-#if defined (__a29k__) || defined (___AM29K__)\n+#if defined (__a29k__) || defined (_AM29K)\n #define add_ssaaaa(sh, sl, ah, al, bh, bl) \\\n   __asm__ (\"add %1,%4,%5\n \taddc %0,%2,%3\"\t\t\t\t\t\t\t\\\n@@ -149,8 +149,57 @@\n \t     \"rI\" ((USItype)(bh)),\t\t\t\t\t\\\n \t     \"r\" ((USItype)(al)),\t\t\t\t\t\\\n \t     \"rI\" ((USItype)(bl)))\n+#define umul_ppmm(xh, xl, a, b) \\\n+  __asm__ (\"; Inlined umul_ppmm\n+\tmov\tr0,%2 lsr 16\n+\tmov\tr2,%3 lsr 16\n+\tbic\tr1,%2,r0 lsl 16\n+\tbic\tr2,%3,r2 lsl 16\n+\tmul\t%1,r1,r2\n+\tmul\tr2,r0,r2\n+\tmul\tr1,%0,r1\n+\tmul\t%0,r0,%0\n+\tadds\tr1,r2,r1\n+\taddcs\t%0,%0,0x10000\n+\tadds\t%1,%1,r1 lsl 16\n+\tadc\t%0,%0,r1 lsr 16\"\t\t\t\t\t\\\n+\t   : \"=&r\" ((USItype)(xh)),\t\t\t\t\t\\\n+\t     \"=r\" ((USItype)(xl))\t\t\t\t\t\\\n+\t   : \"r\" ((USItype)(a)),\t\t\t\t\t\\\n+\t     \"r\" ((USItype)(b))\t\t\t\t\t\t\\\n+\t   : \"r0\", \"r1\", \"r2\")\n+#define UMUL_TIME 20\n+#define UDIV_TIME 100\n #endif /* __arm__ */\n \n+#if defined (__clipper__)\n+#define umul_ppmm(w1, w0, u, v) \\\n+  ({union {UDItype __ll;\t\t\t\t\t\t\\\n+\t   struct {USItype __l, __h;} __i;\t\t\t\t\\\n+\t  } __xx;\t\t\t\t\t\t\t\\\n+  __asm__ (\"mulwux %2,%0\"\t\t\t\t\t\t\\\n+\t   : \"=r\" (__xx.__ll)\t\t\t\t\t\t\\\n+\t   : \"%0\" ((USItype)(u)),\t\t\t\t\t\\\n+\t     \"r\" ((USItype)(v)));\t\t\t\t\t\\\n+  (w1) = __xx.__i.__h; (w0) = __xx.__i.__l;})\n+#define smul_ppmm(w1, w0, u, v) \\\n+  ({union {DItype __ll;\t\t\t\t\t\t\t\\\n+\t   struct {SItype __l, __h;} __i;\t\t\t\t\\\n+\t  } __xx;\t\t\t\t\t\t\t\\\n+  __asm__ (\"mulwx %2,%0\"\t\t\t\t\t\t\\\n+\t   : \"=r\" (__xx.__ll)\t\t\t\t\t\t\\\n+\t   : \"%0\" ((SItype)(u)),\t\t\t\t\t\\\n+\t     \"r\" ((SItype)(v)));\t\t\t\t\t\\\n+  (w1) = __xx.__i.__h; (w0) = __xx.__i.__l;})\n+#define __umulsidi3(u, v) \\\n+  ({UDItype __w;\t\t\t\t\t\t\t\\\n+    __asm__ (\"mulwux %2,%0\"\t\t\t\t\t\t\\\n+\t     : \"=r\" (__w)\t\t\t\t\t\t\\\n+\t     : \"%0\" ((USItype)(u)),\t\t\t\t\t\\\n+\t       \"r\" ((USItype)(v)));\t\t\t\t\t\\\n+    __w; })\n+#endif /* __clipper__ */\n+\n #if defined (__gmicro__)\n #define add_ssaaaa(sh, sl, ah, al, bh, bl) \\\n   __asm__ (\"add.w %5,%1\n@@ -229,6 +278,27 @@\n #define UMUL_TIME 30\n #endif\n #define UDIV_TIME 40\n+#define count_leading_zeros(count, x) \\\n+  do {\t\t\t\t\t\t\t\t\t\\\n+    USItype __tmp;\t\t\t\t\t\t\t\\\n+    __asm__ (\t\t\t\t\t\t\t\t\\\n+       \"ldi\t\t1,%0\n+\textru,=\t\t%1,15,16,%%r0\t\t; Bits 31..16 zero?\n+\textru,tr\t%1,15,16,%1\t\t; No.  Shift down, skip add.\n+\tldo\t\t16(%0),%0\t\t; Yes.  Perform add.\n+\textru,=\t\t%1,23,8,%%r0\t\t; Bits 15..8 zero?\n+\textru,tr\t%1,23,8,%1\t\t; No.  Shift down, skip add.\n+\tldo\t\t8(%0),%0\t\t; Yes.  Perform add.\n+\textru,=\t\t%1,27,4,%%r0\t\t; Bits 7..4 zero?\n+\textru,tr\t%1,27,4,%1\t\t; No.  Shift down, skip add.\n+\tldo\t\t4(%0),%0\t\t; Yes.  Perform add.\n+\textru,=\t\t%1,29,2,%%r0\t\t; Bits 3..2 zero?\n+\textru,tr\t%1,29,2,%1\t\t; No.  Shift down, skip add.\n+\tldo\t\t2(%0),%0\t\t; Yes.  Perform add.\n+\textru\t\t%1,30,1,%1\t\t; Extract bit 1.\n+\tsub\t\t%0,%1,%0\t\t; Subtract it.\n+\t\" : \"=r\" (count), \"=r\" (__tmp) : \"1\" (x));\t\t\t\\\n+  } while (0)\n #endif\n \n #if defined (__i386__) || defined (__i486__)\n@@ -315,54 +385,24 @@\n #endif\n #endif /* __i860__ */\n \n-#if defined (___IBMR2__) /* IBM RS6000 */\n-#define add_ssaaaa(sh, sl, ah, al, bh, bl) \\\n-  __asm__ (\"{a%I5|add%I5c} %1,%4,%5\n-\t{ae|adde} %0,%2,%3\"\t\t\t\t\t\t\\\n-\t   : \"=r\" ((USItype)(sh)),\t\t\t\t\t\\\n-\t     \"=&r\" ((USItype)(sl))\t\t\t\t\t\\\n-\t   : \"%r\" ((USItype)(ah)),\t\t\t\t\t\\\n-\t     \"r\" ((USItype)(bh)),\t\t\t\t\t\\\n-\t     \"%r\" ((USItype)(al)),\t\t\t\t\t\\\n-\t     \"rI\" ((USItype)(bl)))\n-#define sub_ddmmss(sh, sl, ah, al, bh, bl) \\\n-  __asm__ (\"{sf%I4|subf%I4c} %1,%5,%4\n-\t{sfe|subfe} %0,%3,%2\"\t\t\t\t\t\t\\\n-\t   : \"=r\" ((USItype)(sh)),\t\t\t\t\t\\\n-\t     \"=&r\" ((USItype)(sl))\t\t\t\t\t\\\n-\t   : \"r\" ((USItype)(ah)),\t\t\t\t\t\\\n-\t     \"r\" ((USItype)(bh)),\t\t\t\t\t\\\n-\t     \"rI\" ((USItype)(al)),\t\t\t\t\t\\\n-\t     \"r\" ((USItype)(bl)))\n-#define umul_ppmm(xh, xl, m0, m1) \\\n-  do {\t\t\t\t\t\t\t\t\t\\\n-    USItype __m0 = (m0), __m1 = (m1);\t\t\t\t\t\\\n-    __asm__ (\"mul %0,%2,%3\"\t\t\t\t\t\t\\\n-\t     : \"=r\" ((USItype)(xh)),\t\t\t\t\t\\\n-\t       \"=q\" ((USItype)(xl))\t\t\t\t\t\\\n-\t     : \"r\" (__m0),\t\t\t\t\t\t\\\n-\t       \"r\" (__m1));\t\t\t\t\t\t\\\n-    (xh) += ((((SItype) __m0 >> 31) & __m1)\t\t\t\t\\\n-\t     + (((SItype) __m1 >> 31) & __m0));\t\t\t\t\\\n-  } while (0)\n-#define smul_ppmm(xh, xl, m0, m1) \\\n-  __asm__ (\"mul %0,%2,%3\"\t\t\t\t\t\t\\\n-\t   : \"=r\" ((USItype)(xh)),\t\t\t\t\t\\\n-\t     \"=q\" ((USItype)(xl))\t\t\t\t\t\\\n-\t   : \"r\" ((USItype)(m0)),\t\t\t\t\t\\\n-\t     \"r\" ((USItype)(m1)))\n-#define UMUL_TIME 8\n-#define sdiv_qrnnd(q, r, nh, nl, d) \\\n-  __asm__ (\"div %0,%2,%4\"\t\t\t\t\t\t\\\n-\t   : \"=r\" ((USItype)(q)), \"=q\" ((USItype)(r))\t\t\t\\\n-\t   : \"r\" ((USItype)(nh)), \"1\" ((USItype)(nl)), \"r\" ((USItype)(d)))\n-#define UDIV_TIME 40\n-#define UDIV_NEEDS_NORMALIZATION 1\n-#define count_leading_zeros(count, x) \\\n-  __asm__ (\"{cntlz|cntlzw} %0,%1\"\t\t\t\t\t\\\n-\t   : \"=r\" ((USItype)(count))\t\t\t\t\t\\\n-\t   : \"r\" ((USItype)(x)))\n-#endif /* ___IBMR2__ */\n+#if defined (__i960__)\n+#define umul_ppmm(w1, w0, u, v) \\\n+  ({union {UDItype __ll;\t\t\t\t\t\t\\\n+\t   struct {USItype __l, __h;} __i;\t\t\t\t\\\n+\t  } __xx;\t\t\t\t\t\t\t\\\n+  __asm__ (\"emul\t%2,%1,%0\"\t\t\t\t\t\\\n+\t   : \"=d\" (__xx.__ll)\t\t\t\t\t\t\\\n+\t   : \"%dI\" ((USItype)(u)),\t\t\t\t\t\\\n+\t     \"dI\" ((USItype)(v)));\t\t\t\t\t\\\n+  (w1) = __xx.__i.__h; (w0) = __xx.__i.__l;})\n+#define __umulsidi3(u, v) \\\n+  ({UDItype __w;\t\t\t\t\t\t\t\\\n+    __asm__ (\"emul\t%2,%1,%0\"\t\t\t\t\t\\\n+\t     : \"=d\" (__w)\t\t\t\t\t\t\\\n+\t     : \"%dI\" ((USItype)(u)),\t\t\t\t\t\\\n+\t       \"dI\" ((USItype)(v)));\t\t\t\t\t\\\n+    __w; })  \n+#endif /* __i960__ */\n \n #if defined (__mc68000__)\n #define add_ssaaaa(sh, sl, ah, al, bh, bl) \\\n@@ -414,31 +454,31 @@\n /* %/ inserts REGISTER_PREFIX.  */\n #define umul_ppmm(xh, xl, a, b) \\\n   __asm__ (\"| Inlined umul_ppmm\n-\tmovel\t%2,%/d0\n-\tmovel\t%3,%/d1\n-\tmovel\t%/d0,%/d2\n+\tmove%.l\t%2,%/d0\n+\tmove%.l\t%3,%/d1\n+\tmove%.l\t%/d0,%/d2\n \tswap\t%/d0\n-\tmovel\t%/d1,%/d3\n+\tmove%.l\t%/d1,%/d3\n \tswap\t%/d1\n-\tmovew\t%/d2,%/d4\n+\tmove%.w\t%/d2,%/d4\n \tmulu\t%/d3,%/d4\n \tmulu\t%/d1,%/d2\n \tmulu\t%/d0,%/d3\n \tmulu\t%/d0,%/d1\n-\tmovel\t%/d4,%/d0\n-\teorw\t%/d0,%/d0\n+\tmove%.l\t%/d4,%/d0\n+\teor%.w\t%/d0,%/d0\n \tswap\t%/d0\n-\taddl\t%/d0,%/d2\n-\taddl\t%/d3,%/d2\n+\tadd%.l\t%/d0,%/d2\n+\tadd%.l\t%/d3,%/d2\n \tjcc\t1f\n-\taddl\t#65536,%/d1\n+\tadd%.l\t#65536,%/d1\n 1:\tswap\t%/d2\n \tmoveq\t#0,%/d0\n-\tmovew\t%/d2,%/d0\n-\tmovew\t%/d4,%/d2\n-\tmovel\t%/d2,%1\n-\taddl\t%/d1,%/d0\n-\tmovel\t%/d0,%0\"\t\t\t\t\t\t\\\n+\tmove%.w\t%/d2,%/d0\n+\tmove%.w\t%/d4,%/d2\n+\tmove%.l\t%/d2,%1\n+\tadd%.l\t%/d1,%/d0\n+\tmove%.l\t%/d0,%0\"\t\t\t\t\t\t\\\n \t   : \"=g\" ((USItype)(xh)),\t\t\t\t\t\\\n \t     \"=g\" ((USItype)(xl))\t\t\t\t\t\\\n \t   : \"g\" ((USItype)(a)),\t\t\t\t\t\\\n@@ -468,8 +508,6 @@\n \t     \"rJ\" ((USItype)(bh)),\t\t\t\t\t\\\n \t     \"rJ\" ((USItype)(al)),\t\t\t\t\t\\\n \t     \"rJ\" ((USItype)(bl)))\n-#define UMUL_TIME 17\n-#define UDIV_TIME 150\n #define count_leading_zeros(count, x) \\\n   do {\t\t\t\t\t\t\t\t\t\\\n     USItype __cbtmp;\t\t\t\t\t\t\t\\\n@@ -479,29 +517,35 @@\n     (count) = __cbtmp ^ 31;\t\t\t\t\t\t\\\n   } while (0)\n #if defined (__mc88110__)\n-#define umul_ppmm(w1, w0, u, v) \\\n-  __asm__ (\"mulu.d\tr10,%2,%3\n-\tor\t%0,r10,0\n-\tor\t%1,r11,0\"\t\t\t\t\t\t\\\n-\t   : \"=r\" (w1),\t\t\t\t\t\t\t\\\n-\t     \"=r\" (w0)\t\t\t\t\t\t\t\\\n-\t   : \"r\" ((USItype)(u)),\t\t\t\t\t\\\n-\t     \"r\" ((USItype)(v))\t\t\t\t\t\t\\\n-\t   : \"r10\", \"r11\")\n+#define umul_ppmm(wh, wl, u, v) \\\n+  do {\t\t\t\t\t\t\t\t\t\\\n+    union {UDItype __ll;\t\t\t\t\t\t\\\n+\t   struct {USItype __h, __l;} __i;\t\t\t\t\\\n+\t  } __xx;\t\t\t\t\t\t\t\\\n+    __asm__ (\"mulu.d\t%0,%1,%2\"\t\t\t\t\t\\\n+\t     : \"=r\" (__xx.__ll)\t\t\t\t\t\t\\\n+\t     : \"r\" ((USItype)(u)),\t\t\t\t\t\\\n+\t       \"r\" ((USItype)(v)));\t\t\t\t\t\\\n+    (wh) = __xx.__i.__h;\t\t\t\t\t\t\\\n+    (wl) = __xx.__i.__l;\t\t\t\t\t\t\\\n+  } while (0)\n #define udiv_qrnnd(q, r, n1, n0, d) \\\n-  __asm__ (\"or\tr10,%2,0\n-\tor\tr11,%3,0\n-\tdivu.d\tr10,r10,%4\n-\tmulu\t%1,%4,r11\n-\tsubu\t%1,%3,%1\n-\tor\t%0,r11,0\"\t\t\t\t\t\t\\\n-\t   : \"=r\" (q),\t\t\t\t\t\t\t\\\n-\t     \"=&r\" (r)\t\t\t\t\t\t\t\\\n-\t   : \"r\" ((USItype)(n1)),\t\t\t\t\t\\\n-\t     \"r\" ((USItype)(n0)),\t\t\t\t\t\\\n-\t     \"r\" ((USItype)(d))\t\t\t\t\t\t\\\n-\t   : \"r10\", \"r11\")\n-#endif\n+  ({union {UDItype __ll;\t\t\t\t\t\t\\\n+\t   struct {USItype __h, __l;} __i;\t\t\t\t\\\n+\t  } __xx;\t\t\t\t\t\t\t\\\n+  USItype __q;\t\t\t\t\t\t\t\t\\\n+  __xx.__i.__h = (n1); __xx.__i.__l = (n0);\t\t\t\t\\\n+  __asm__ (\"divu.d %0,%1,%2\"\t\t\t\t\t\t\\\n+\t   : \"=r\" (__q)\t\t\t\t\t\t\t\\\n+\t   : \"r\" (__xx.__ll),\t\t\t\t\t\t\\\n+\t     \"r\" ((USItype)(d)));\t\t\t\t\t\\\n+  (r) = (n0) - __q * (d); (q) = __q; })\n+#define UMUL_TIME 5\n+#define UDIV_TIME 25\n+#else\n+#define UMUL_TIME 17\n+#define UDIV_TIME 150\n+#endif /* __mc88110__ */\n #endif /* __m88000__ */\n \n #if defined (__mips__)\n@@ -513,32 +557,158 @@\n \t     \"=d\" ((USItype)(w1))\t\t\t\t\t\\\n \t   : \"d\" ((USItype)(u)),\t\t\t\t\t\\\n \t     \"d\" ((USItype)(v)))\n-#define UMUL_TIME 5\n+#define UMUL_TIME 10\n #define UDIV_TIME 100\n #endif /* __mips__ */\n \n #if defined (__ns32000__)\n+#define umul_ppmm(w1, w0, u, v) \\\n+  ({union {UDItype __ll;\t\t\t\t\t\t\\\n+\t   struct {USItype __l, __h;} __i;\t\t\t\t\\\n+\t  } __xx;\t\t\t\t\t\t\t\\\n+  __asm__ (\"meid %2,%0\"\t\t\t\t\t\t\t\\\n+\t   : \"=g\" (__xx.__ll)\t\t\t\t\t\t\\\n+\t   : \"%0\" ((USItype)(u)),\t\t\t\t\t\\\n+\t     \"g\" ((USItype)(v)));\t\t\t\t\t\\\n+  (w1) = __xx.__i.__h; (w0) = __xx.__i.__l;})\n #define __umulsidi3(u, v) \\\n   ({UDItype __w;\t\t\t\t\t\t\t\\\n     __asm__ (\"meid %2,%0\"\t\t\t\t\t\t\\\n \t     : \"=g\" (__w)\t\t\t\t\t\t\\\n \t     : \"%0\" ((USItype)(u)),\t\t\t\t\t\\\n \t       \"g\" ((USItype)(v)));\t\t\t\t\t\\\n     __w; })\n-#define div_qrnnd(q, r, n1, n0, d) \\\n-  __asm__ (\"movd %2,r0\n-\tmovd %3,r1\n-\tdeid %4,r0\n-\tmovd r1,%0\n-\tmovd r0,%1\"\t\t\t\t\t\t\t\\\n-\t   : \"=g\" ((USItype)(q)),\t\t\t\t\t\\\n-\t     \"=g\" ((USItype)(r))\t\t\t\t\t\\\n-\t   : \"g\" ((USItype)(n0)),\t\t\t\t\t\\\n-\t     \"g\" ((USItype)(n1)),\t\t\t\t\t\\\n-\t     \"g\" ((USItype)(d))\t\t\t\t\t\t\\\n-\t   : \"r0\", \"r1\")\n+#define udiv_qrnnd(q, r, n1, n0, d) \\\n+  ({union {UDItype __ll;\t\t\t\t\t\t\\\n+\t   struct {USItype __l, __h;} __i;\t\t\t\t\\\n+\t  } __xx;\t\t\t\t\t\t\t\\\n+  __xx.__i.__h = (n1); __xx.__i.__l = (n0);\t\t\t\t\\\n+  __asm__ (\"deid %2,%0\"\t\t\t\t\t\t\t\\\n+\t   : \"=g\" (__xx.__ll)\t\t\t\t\t\t\\\n+\t   : \"0\" (__xx.__ll),\t\t\t\t\t\t\\\n+\t     \"g\" ((USItype)(d)));\t\t\t\t\t\\\n+  (r) = __xx.__i.__l; (q) = __xx.__i.__h; })\n #endif /* __ns32000__ */\n \n+#if (defined (__powerpc__) || defined (___IBMR2__)) && W_TYPE_SIZE == 32\n+#define add_ssaaaa(sh, sl, ah, al, bh, bl) \\\n+  do {\t\t\t\t\t\t\t\t\t\\\n+    if (__builtin_constant_p (bh) && (bh) == 0)\t\t\t\t\\\n+      __asm__ (\"{a%I4|add%I4c} %1,%3,%4\\n\\t{aze|addze} %0,%2\"\t\t\\\n+\t     : \"=r\" ((USItype)(sh)),\t\t\t\t\t\\\n+\t       \"=&r\" ((USItype)(sl))\t\t\t\t\t\\\n+\t     : \"%r\" ((USItype)(ah)),\t\t\t\t\t\\\n+\t       \"%r\" ((USItype)(al)),\t\t\t\t\t\\\n+\t       \"rI\" ((USItype)(bl)));\t\t\t\t\t\\\n+    else if (__builtin_constant_p (bh) && (bh) ==~(USItype) 0)\t\t\\\n+      __asm__ (\"{a%I4|add%I4c} %1,%3,%4\\n\\t{ame|addme} %0,%2\"\t\t\\\n+\t     : \"=r\" ((USItype)(sh)),\t\t\t\t\t\\\n+\t       \"=&r\" ((USItype)(sl))\t\t\t\t\t\\\n+\t     : \"%r\" ((USItype)(ah)),\t\t\t\t\t\\\n+\t       \"%r\" ((USItype)(al)),\t\t\t\t\t\\\n+\t       \"rI\" ((USItype)(bl)));\t\t\t\t\t\\\n+    else\t\t\t\t\t\t\t\t\\\n+      __asm__ (\"{a%I5|add%I5c} %1,%4,%5\\n\\t{ae|adde} %0,%2,%3\"\t\t\\\n+\t     : \"=r\" ((USItype)(sh)),\t\t\t\t\t\\\n+\t       \"=&r\" ((USItype)(sl))\t\t\t\t\t\\\n+\t     : \"%r\" ((USItype)(ah)),\t\t\t\t\t\\\n+\t       \"r\" ((USItype)(bh)),\t\t\t\t\t\\\n+\t       \"%r\" ((USItype)(al)),\t\t\t\t\t\\\n+\t       \"rI\" ((USItype)(bl)));\t\t\t\t\t\\\n+  } while (0)\n+#define sub_ddmmss(sh, sl, ah, al, bh, bl) \\\n+  do {\t\t\t\t\t\t\t\t\t\\\n+    if (__builtin_constant_p (ah) && (ah) == 0)\t\t\t\t\\\n+      __asm__ (\"{sf%I3|subf%I3c} %1,%4,%3\\n\\t{sfze|subfze} %0,%2\"\t\t\\\n+\t       : \"=r\" ((USItype)(sh)),\t\t\t\t\t\\\n+\t\t \"=&r\" ((USItype)(sl))\t\t\t\t\t\\\n+\t       : \"r\" ((USItype)(bh)),\t\t\t\t\t\\\n+\t\t \"rI\" ((USItype)(al)),\t\t\t\t\t\\\n+\t\t \"r\" ((USItype)(bl)));\t\t\t\t\t\\\n+    else if (__builtin_constant_p (ah) && (ah) ==~(USItype) 0)\t\t\\\n+      __asm__ (\"{sf%I3|subf%I3c} %1,%4,%3\\n\\t{sfme|subfme} %0,%2\"\t\t\\\n+\t       : \"=r\" ((USItype)(sh)),\t\t\t\t\t\\\n+\t\t \"=&r\" ((USItype)(sl))\t\t\t\t\t\\\n+\t       : \"r\" ((USItype)(bh)),\t\t\t\t\t\\\n+\t\t \"rI\" ((USItype)(al)),\t\t\t\t\t\\\n+\t\t \"r\" ((USItype)(bl)));\t\t\t\t\t\\\n+    else if (__builtin_constant_p (bh) && (bh) == 0)\t\t\t\\\n+      __asm__ (\"{sf%I3|subf%I3c} %1,%4,%3\\n\\t{ame|addme} %0,%2\"\t\t\\\n+\t       : \"=r\" ((USItype)(sh)),\t\t\t\t\t\\\n+\t\t \"=&r\" ((USItype)(sl))\t\t\t\t\t\\\n+\t       : \"r\" ((USItype)(ah)),\t\t\t\t\t\\\n+\t\t \"rI\" ((USItype)(al)),\t\t\t\t\t\\\n+\t\t \"r\" ((USItype)(bl)));\t\t\t\t\t\\\n+    else if (__builtin_constant_p (bh) && (bh) ==~(USItype) 0)\t\t\\\n+      __asm__ (\"{sf%I3|subf%I3c} %1,%4,%3\\n\\t{aze|addze} %0,%2\"\t\t\\\n+\t       : \"=r\" ((USItype)(sh)),\t\t\t\t\t\\\n+\t\t \"=&r\" ((USItype)(sl))\t\t\t\t\t\\\n+\t       : \"r\" ((USItype)(ah)),\t\t\t\t\t\\\n+\t\t \"rI\" ((USItype)(al)),\t\t\t\t\t\\\n+\t\t \"r\" ((USItype)(bl)));\t\t\t\t\t\\\n+    else\t\t\t\t\t\t\t\t\\\n+      __asm__ (\"{sf%I4|subf%I4c} %1,%5,%4\\n\\t{sfe|subfe} %0,%3,%2\"\t\\\n+\t       : \"=r\" ((USItype)(sh)),\t\t\t\t\t\\\n+\t\t \"=&r\" ((USItype)(sl))\t\t\t\t\t\\\n+\t       : \"r\" ((USItype)(ah)),\t\t\t\t\t\\\n+\t\t \"r\" ((USItype)(bh)),\t\t\t\t\t\\\n+\t\t \"rI\" ((USItype)(al)),\t\t\t\t\t\\\n+\t\t \"r\" ((USItype)(bl)));\t\t\t\t\t\\\n+  } while (0)\n+#define count_leading_zeros(count, x) \\\n+  __asm__ (\"{cntlz|cntlzw} %0,%1\"\t\t\t\t\t\\\n+\t   : \"=r\" ((USItype)(count))\t\t\t\t\t\\\n+\t   : \"r\" ((USItype)(x)))\n+#if defined (__powerpc__)\n+#define umul_ppmm(ph, pl, m0, m1) \\\n+  do {\t\t\t\t\t\t\t\t\t\\\n+    USItype __m0 = (m0), __m1 = (m1);\t\t\t\t\t\\\n+    __asm__ (\"mulhwu %0,%1,%2\"\t\t\t\t\t\t\\\n+\t     : \"=r\" ((USItype) ph)\t\t\t\t\t\\\n+\t     : \"%r\" (__m0),\t\t\t\t\t\t\\\n+\t       \"r\" (__m1));\t\t\t\t\t\t\\\n+    (pl) = __m0 * __m1;\t\t\t\t\t\t\t\\\n+  } while (0)\n+#define UMUL_TIME 15\n+#define smul_ppmm(ph, pl, m0, m1) \\\n+  do {\t\t\t\t\t\t\t\t\t\\\n+    SItype __m0 = (m0), __m1 = (m1);\t\t\t\t\t\\\n+    __asm__ (\"mulhw %0,%1,%2\"\t\t\t\t\t\t\\\n+\t     : \"=r\" ((SItype) ph)\t\t\t\t\t\\\n+\t     : \"%r\" (__m0),\t\t\t\t\t\t\\\n+\t       \"r\" (__m1));\t\t\t\t\t\t\\\n+    (pl) = __m0 * __m1;\t\t\t\t\t\t\t\\\n+  } while (0)\n+#define SMUL_TIME 14\n+#define UDIV_TIME 120\n+#else\n+#define umul_ppmm(xh, xl, m0, m1) \\\n+  do {\t\t\t\t\t\t\t\t\t\\\n+    USItype __m0 = (m0), __m1 = (m1);\t\t\t\t\t\\\n+    __asm__ (\"mul %0,%2,%3\"\t\t\t\t\t\t\\\n+\t     : \"=r\" ((USItype)(xh)),\t\t\t\t\t\\\n+\t       \"=q\" ((USItype)(xl))\t\t\t\t\t\\\n+\t     : \"r\" (__m0),\t\t\t\t\t\t\\\n+\t       \"r\" (__m1));\t\t\t\t\t\t\\\n+    (xh) += ((((SItype) __m0 >> 31) & __m1)\t\t\t\t\\\n+\t     + (((SItype) __m1 >> 31) & __m0));\t\t\t\t\\\n+  } while (0)\n+#define UMUL_TIME 8\n+#define smul_ppmm(xh, xl, m0, m1) \\\n+  __asm__ (\"mul %0,%2,%3\"\t\t\t\t\t\t\\\n+\t   : \"=r\" ((SItype)(xh)),\t\t\t\t\t\\\n+\t     \"=q\" ((SItype)(xl))\t\t\t\t\t\\\n+\t   : \"r\" (m0),\t\t\t\t\t\t\t\\\n+\t     \"r\" (m1))\n+#define SMUL_TIME 4\n+#define sdiv_qrnnd(q, r, nh, nl, d) \\\n+  __asm__ (\"div %0,%2,%4\"\t\t\t\t\t\t\\\n+\t   : \"=r\" ((SItype)(q)), \"=q\" ((SItype)(r))\t\t\t\\\n+\t   : \"r\" ((SItype)(nh)), \"1\" ((SItype)(nl)), \"r\" ((SItype)(d)))\n+#define UDIV_TIME 100\n+#endif\n+#endif /* Power architecture variants.  */\n+\n #if defined (__pyr__)\n #define add_ssaaaa(sh, sl, ah, al, bh, bl) \\\n   __asm__ (\"addw\t%5,%1\n@@ -569,7 +739,7 @@\n \t   : \"=r\" (__xx.__i.__h),\t\t\t\t\t\\\n \t     \"=r\" (__xx.__i.__l)\t\t\t\t\t\\\n \t   : \"1\" (__xx.__i.__l),\t\t\t\t\t\\\n-\t     \"g\" ((UDItype)(v)));\t\t\t\t\t\\\n+\t     \"g\" ((USItype)(v)));\t\t\t\t\t\\\n   (w1) = __xx.__i.__h;\t\t\t\t\t\t\t\\\n   (w0) = __xx.__i.__l;})\n #endif /* __pyr__ */\n@@ -645,23 +815,23 @@\n \n #if defined (__sparc__)\n #define add_ssaaaa(sh, sl, ah, al, bh, bl) \\\n-  __asm__ (\"addcc %4,%5,%1\n-\taddx %2,%3,%0\"\t\t\t\t\t\t\t\\\n+  __asm__ (\"addcc %r4,%5,%1\n+\taddx %r2,%3,%0\"\t\t\t\t\t\t\t\\\n \t   : \"=r\" ((USItype)(sh)),\t\t\t\t\t\\\n \t     \"=&r\" ((USItype)(sl))\t\t\t\t\t\\\n-\t   : \"%r\" ((USItype)(ah)),\t\t\t\t\t\\\n+\t   : \"%rJ\" ((USItype)(ah)),\t\t\t\t\t\\\n \t     \"rI\" ((USItype)(bh)),\t\t\t\t\t\\\n-\t     \"%r\" ((USItype)(al)),\t\t\t\t\t\\\n+\t     \"%rJ\" ((USItype)(al)),\t\t\t\t\t\\\n \t     \"rI\" ((USItype)(bl))\t\t\t\t\t\\\n \t   __CLOBBER_CC)\n #define sub_ddmmss(sh, sl, ah, al, bh, bl) \\\n-  __asm__ (\"subcc %4,%5,%1\n-\tsubx %2,%3,%0\"\t\t\t\t\t\t\t\\\n+  __asm__ (\"subcc %r4,%5,%1\n+\tsubx %r2,%3,%0\"\t\t\t\t\t\t\t\\\n \t   : \"=r\" ((USItype)(sh)),\t\t\t\t\t\\\n \t     \"=&r\" ((USItype)(sl))\t\t\t\t\t\\\n-\t   : \"r\" ((USItype)(ah)),\t\t\t\t\t\\\n+\t   : \"rJ\" ((USItype)(ah)),\t\t\t\t\t\\\n \t     \"rI\" ((USItype)(bh)),\t\t\t\t\t\\\n-\t     \"r\" ((USItype)(al)),\t\t\t\t\t\\\n+\t     \"rJ\" ((USItype)(al)),\t\t\t\t\t\\\n \t     \"rI\" ((USItype)(bl))\t\t\t\t\t\\\n \t   __CLOBBER_CC)\n #if defined (__sparc_v8__)\n@@ -861,6 +1031,16 @@\n     (xh) += ((((SItype) __m0 >> 31) & __m1)\t\t\t\t\\\n \t     + (((SItype) __m1 >> 31) & __m0));\t\t\t\t\\\n   } while (0)\n+#define sdiv_qrnnd(q, r, n1, n0, d) \\\n+  do {\t\t\t\t\t\t\t\t\t\\\n+    union {DItype __ll;\t\t\t\t\t\t\t\\\n+\t   struct {SItype __l, __h;} __i;\t\t\t\t\\\n+\t  } __xx;\t\t\t\t\t\t\t\\\n+    __xx.__i.__h = n1; __xx.__i.__l = n0;\t\t\t\t\\\n+    __asm__ (\"ediv %3,%2,%0,%1\"\t\t\t\t\t\t\\\n+\t     : \"=g\" (q), \"=g\" (r)\t\t\t\t\t\\\n+\t     : \"g\" (__n1n0.ll), \"g\" (d));\t\t\t\t\\\n+  } while (0)\n #endif /* __vax__ */\n \n #endif /* __GNUC__ */"}]}