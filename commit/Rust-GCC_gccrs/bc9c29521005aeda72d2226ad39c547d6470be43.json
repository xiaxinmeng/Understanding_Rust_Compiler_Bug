{"sha": "bc9c29521005aeda72d2226ad39c547d6470be43", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmM5YzI5NTIxMDA1YWVkYTcyZDIyMjZhZDM5YzU0N2Q2NDcwYmU0Mw==", "commit": {"author": {"name": "Andreas Jaeger", "email": "aj@gcc.gnu.org", "date": "2002-06-23T05:30:14Z"}, "committer": {"name": "Andreas Jaeger", "email": "aj@gcc.gnu.org", "date": "2002-06-23T05:30:14Z"}, "message": "complex-6.c: New.\n\n\t* gcc.c-torture/execute/complex-6.c: New.\n\n\t* reg-stack.c (convert_regs_exit): Push the registers to stack in\n\tproper order.\n\nFrom-SVN: r54915", "tree": {"sha": "e499ba3b8810f143ff97baa9f8d8c1bfbf6a5ef8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e499ba3b8810f143ff97baa9f8d8c1bfbf6a5ef8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bc9c29521005aeda72d2226ad39c547d6470be43", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc9c29521005aeda72d2226ad39c547d6470be43", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bc9c29521005aeda72d2226ad39c547d6470be43", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc9c29521005aeda72d2226ad39c547d6470be43/comments", "author": null, "committer": null, "parents": [{"sha": "faa964e5dda34710242358b008fef50b4b8c23a9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/faa964e5dda34710242358b008fef50b4b8c23a9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/faa964e5dda34710242358b008fef50b4b8c23a9"}], "stats": {"total": 92, "additions": 80, "deletions": 12}, "files": [{"sha": "8d31820a2f76d08d67bd546817cf1770b93bd7ad", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 9, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc9c29521005aeda72d2226ad39c547d6470be43/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc9c29521005aeda72d2226ad39c547d6470be43/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bc9c29521005aeda72d2226ad39c547d6470be43", "patch": "@@ -1,3 +1,8 @@\n+2002-06-23  Jan Hubicka  <jh@suse.cz>\n+\n+\t* reg-stack.c (convert_regs_exit): Push the registers to stack in\n+\tproper order.\n+\n 2002-06-22  Ulrich Weigand  <uweigand@de.ibm.com>\n \n \tPR middle-end/6963\n@@ -29,12 +34,12 @@\n 2002-06-21  Matt Thomas  <matt@3am-software.com>\n \n \t* config/vax/vax.c (vax_output_function_prologue): Use\n-\tREGISTER_PREFIX.  Fix some indentation. \n+\tREGISTER_PREFIX.  Fix some indentation.\n \t* config/vax/vax.h (FUNCTION_PROFILER): Use reg_names[].\n \t(VAX_ISTREAM_SYNC): Define.\n \t(INITIALIZE_TRAMPOLINE): Use VAX_ISTREAM_SYNC.  Move the\n-\ti-stream sync to the end. \n-\t(REGISTER_PREFIX): Define as \"\".  \n+\ti-stream sync to the end.\n+\t(REGISTER_PREFIX): Define as \"\".\n \t(ASM_OUTPUT_MI_THUNK): Use REGISTER_PREFIX.\n \n 2002-06-21  Jason Thorpe  <thorpej@wasabisystems.com>\n@@ -55,8 +60,8 @@\n 2002-06-21  Richard Henderson  <rth@redhat.com>\n \n \t* bb-reorder.c (make_reorder_chain_1): Search harder for the\n-\tvax casesi fallthru edge. \n-\t* cfglayout.c (cleanup_unconditional_jumps): Use \n+\tvax casesi fallthru edge.\n+\t* cfglayout.c (cleanup_unconditional_jumps): Use\n \tredirect_edge_succ_nodup.  Do not delete ADDR_VEC insns as dead.\n \t* cfgrtl.c (force_nonfallthru_and_redirect): Place redirection\n \tblock after ADDR_VEC.\n@@ -255,7 +260,7 @@ Thu Jun 20 17:25:29 CEST 2002  JAn HUbicka  <jh@suse.cz>\n \t(sparclite-*-elf*): Likewise.\n \t(sparc86x-*-elf*): Likewise.\n \t(sparc64-*-elf*): Likewise.\n-\t\n+\n \t* config/i386/sol2.h (PREFERRED_DEBUGGING_TYPE): Moved to\n \tconfig/sol2.h.\n \t(ASM_SPEC): Override config/sol2.h version for now.\n@@ -270,7 +275,7 @@ Thu Jun 20 17:25:29 CEST 2002  JAn HUbicka  <jh@suse.cz>\n \t(SWITCH_TAKES_ARG, STDC_0_IN_SYSTEM_HEADERS): Likewise.\n \t(ASM_CPU_SPEC): Define.\n \t(SUBTARGET_EXTRA_SPECS): Define.\n-\t\n+\n \t* config/sparc/sol2-bi.h (LONG_DOUBLE_TYPE_SIZE): Removed, already\n \tin config/sparc/sol2.h.\n \t(ASM_SPEC): Moved to config/sol2.h.\n@@ -286,7 +291,7 @@ Thu Jun 20 17:25:29 CEST 2002  JAn HUbicka  <jh@suse.cz>\n \t(LINK_ARCH64_SPEC): Simplified.\n \t(LINK_ARCH_SPEC): Redefined config/sol2.h version for 64-bit support.\n \t(LINK_SPEC): Moved to config/sol2.h\n-\t\n+\n \t* config/sparc/sol2.h (WCHAR_TYPE, WCHAR_TYPE_SIZE): Moved to\n \tconfig/sol2.h.\n \tUse BITS_PER_WORD for size.\n@@ -302,7 +307,7 @@ Thu Jun 20 17:25:29 CEST 2002  JAn HUbicka  <jh@suse.cz>\n \t(SWITCH_TAKES_ARG, STDC_0_IN_SYSTEM_HEADERS): Likewise.\n \t(TARGET_DEFAULT): Reordered to match config/sparc/sol2-bi.h version.\n \t(TRANSFER_FROM_TRAMPOLINE): Moved to config/sol2.h\n-\t\n+\n \t* config.gcc (i?86-*-solaris2*): Removed obsolete gas support.\n \t* config/i386/sol2gas.h: Removed.\n "}, {"sha": "6ed482c4277694c336ce86e57f0eb6a8ea42ec3e", "filename": "gcc/reg-stack.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc9c29521005aeda72d2226ad39c547d6470be43/gcc%2Freg-stack.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc9c29521005aeda72d2226ad39c547d6470be43/gcc%2Freg-stack.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freg-stack.c?ref=bc9c29521005aeda72d2226ad39c547d6470be43", "patch": "@@ -2462,7 +2462,7 @@ convert_regs_exit ()\n       output_stack->top = value_reg_high - value_reg_low;\n       for (reg = value_reg_low; reg <= value_reg_high; ++reg)\n \t{\n-\t  output_stack->reg[reg - value_reg_low] = reg;\n+\t  output_stack->reg[value_reg_high - reg] = reg;\n \t  SET_HARD_REG_BIT (output_stack->reg_set, reg);\n \t}\n     }"}, {"sha": "9391915b7337d2be8bb871f1b5f261bafc9d08d3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc9c29521005aeda72d2226ad39c547d6470be43/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc9c29521005aeda72d2226ad39c547d6470be43/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=bc9c29521005aeda72d2226ad39c547d6470be43", "patch": "@@ -1,3 +1,7 @@\n+2002-06-23  Andreas Jaeger  <aj@suse.de>\n+\n+\t* gcc.c-torture/execute/complex-6.c: New.\n+\n 2002-06-22  Neil Booth  <neil@daikokuya.co.uk>\n \n \t* gcc.dg/cpp/trad/comment-2.c. gcc.dg/cpp/trad/funlike-2.c,\n@@ -47,7 +51,7 @@\n 2002-06-18  Hans-Peter Nilsson  <hp@axis.com>\n \n \t* gcc.c-torture/execute/20020615-1.c: Fix typo in comment.\n-\t\n+\n 2002-06-18  Aldy Hernandez  <aldyh@redhat.com>\n \n         * gcc.c-torture/execute/simd-1.c: New.\n@@ -145,7 +149,7 @@\n \n 2002-06-02  Richard Henderson  <rth@redhat.com>\n \n-\t* gcc.c-torture/execute/pure-1.c: Don't mark any of the \n+\t* gcc.c-torture/execute/pure-1.c: Don't mark any of the\n \ttest functions static.\n \n 2002-06-02  Andreas Jaeger  <aj@suse.de>"}, {"sha": "bbb8c8d40aa15cd36dee5f27b3420679c225c222", "filename": "gcc/testsuite/gcc.c-torture/execute/complex-6.c", "status": "added", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc9c29521005aeda72d2226ad39c547d6470be43/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fcomplex-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc9c29521005aeda72d2226ad39c547d6470be43/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fcomplex-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fcomplex-6.c?ref=bc9c29521005aeda72d2226ad39c547d6470be43", "patch": "@@ -0,0 +1,59 @@\n+/* This test tests complex conjugate and passing/returning of\n+   complex parameter.  */\n+\n+#include <stdlib.h>\n+#include <stdio.h>\n+\n+int err;\n+\n+#define TEST(TYPE, FUNC)\t\t\t\t\t\\\n+__complex__ TYPE\t\t\t\t\t\t\\\n+ctest_ ## FUNC (__complex__ TYPE x)\t\t\t\t\\\n+{\t\t\t\t\t\t\t\t\\\n+  __complex__ TYPE res;\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\\\n+  res = ~x;\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\\\n+  return res;\t\t\t\t\t\t\t\\\n+}\t\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\\\n+void\t\t\t\t\t\t\t\t\\\n+test_ ## FUNC (void)\t\t\t\t\t\t\\\n+{\t\t\t\t\t\t\t\t\\\n+  __complex__ TYPE res, x;\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\\\n+  x = 1.0 + 2.0i;\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\\\n+  res = ctest_ ## FUNC (x);\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\\\n+  if (res != 1.0 - 2.0i)\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\t\\\n+      printf (\"test_\" #FUNC \" failed\\n\");\t\t\t\\\n+      ++err;\t\t\t\t\t\t\t\\\n+    }\t\t\t\t\t\t\t\t\\\n+}\n+\n+\n+TEST(float, float)\n+TEST(double, double)\n+TEST(long double, long_double)\n+TEST(int, int)\n+TEST(long int, long_int)\n+\n+int\n+main (void)\n+{\n+\n+  err = 0;\n+\n+  test_float ();\n+  test_double ();\n+  test_long_double ();\n+  test_int ();\n+  test_long_int ();\n+\n+  if (err != 0)\n+    abort ();\n+\n+  return 0;\n+}"}]}