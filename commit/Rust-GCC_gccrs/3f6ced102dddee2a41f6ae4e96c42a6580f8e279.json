{"sha": "3f6ced102dddee2a41f6ae4e96c42a6580f8e279", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2Y2Y2VkMTAyZGRkZWUyYTQxZjZhZTRlOTZjNDJhNjU4MGY4ZTI3OQ==", "commit": {"author": {"name": "Gabriel Charette", "email": "gchare@google.com", "date": "2011-08-15T20:35:58Z"}, "committer": {"name": "Gabriel Charette", "email": "gchare@gcc.gnu.org", "date": "2011-08-15T20:35:58Z"}, "message": "LINEMAP_POSITION_FOR_COLUMN had the exact same effect as linemap_position_for_column...\n\nLINEMAP_POSITION_FOR_COLUMN had the exact same effect as\nlinemap_position_for_column, removed it and updated users\nto use linemap_position_for_column instead\n\n        libcpp/ChangeLog\n\t* include/line-map.h (LINEMAP_POSITION_FOR_COLUMN): Remove.\n\tUpdate all users to use linemap_position_for_column instead.\n\n        gcc/go/ChangeLog\n\t* gofrontend/lex.cc (Lex::location): Update to use\n\tlinemap_position_for_column instead.\n        (Lex::earlier_location): Likewise.\n\nFrom-SVN: r177768", "tree": {"sha": "f0b82291b2916fbc64b32cd6b2aa4f506273a69f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f0b82291b2916fbc64b32cd6b2aa4f506273a69f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3f6ced102dddee2a41f6ae4e96c42a6580f8e279", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f6ced102dddee2a41f6ae4e96c42a6580f8e279", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3f6ced102dddee2a41f6ae4e96c42a6580f8e279", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f6ced102dddee2a41f6ae4e96c42a6580f8e279/comments", "author": null, "committer": null, "parents": [{"sha": "e535f1b22917730c13fc85f91360288d456f054f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e535f1b22917730c13fc85f91360288d456f054f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e535f1b22917730c13fc85f91360288d456f054f"}], "stats": {"total": 42, "additions": 16, "deletions": 26}, "files": [{"sha": "269d89a2b6cf2ce6a0cd093e36057b1a8e3d24a4", "filename": "gcc/go/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f6ced102dddee2a41f6ae4e96c42a6580f8e279/gcc%2Fgo%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f6ced102dddee2a41f6ae4e96c42a6580f8e279/gcc%2Fgo%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2FChangeLog?ref=3f6ced102dddee2a41f6ae4e96c42a6580f8e279", "patch": "@@ -1,3 +1,9 @@\n+2011-08-15  Gabriel Charette  <gchare@google.com>\n+\n+\t* gofrontend/lex.cc (Lex::location): Update to use\n+\tlinemap_position_for_column instead.\n+\t(Lex::earlier_location): Likewise.\n+\n 2011-08-08  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \t* Make-lang.in (gccgo$(exeext)): Add $(EXTRA_GCC_LIBS)."}, {"sha": "167c7ddffc02973f23e0711e65af3e6691cfd23d", "filename": "gcc/go/gofrontend/lex.cc", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f6ced102dddee2a41f6ae4e96c42a6580f8e279/gcc%2Fgo%2Fgofrontend%2Flex.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f6ced102dddee2a41f6ae4e96c42a6580f8e279/gcc%2Fgo%2Fgofrontend%2Flex.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Flex.cc?ref=3f6ced102dddee2a41f6ae4e96c42a6580f8e279", "patch": "@@ -518,9 +518,7 @@ Lex::require_line()\n source_location\n Lex::location() const\n {\n-  source_location location;\n-  LINEMAP_POSITION_FOR_COLUMN(location, line_table, this->lineoff_ + 1);\n-  return location;\n+  return linemap_position_for_column (line_table, this->lineoff_ + 1);\n }\n \n // Get a location slightly before the current one.  This is used for\n@@ -529,9 +527,7 @@ Lex::location() const\n source_location\n Lex::earlier_location(int chars) const\n {\n-  source_location location;\n-  LINEMAP_POSITION_FOR_COLUMN(location, line_table, this->lineoff_ + 1 - chars);\n-  return location;\n+  return linemap_position_for_column (line_table, this->lineoff_ + 1 - chars);\n }\n \n // Get the next token."}, {"sha": "e136852231b2d1bc64817fe99dbb0d7b0b18ced5", "filename": "libcpp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f6ced102dddee2a41f6ae4e96c42a6580f8e279/libcpp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f6ced102dddee2a41f6ae4e96c42a6580f8e279/libcpp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2FChangeLog?ref=3f6ced102dddee2a41f6ae4e96c42a6580f8e279", "patch": "@@ -1,3 +1,8 @@\n+2011-08-15  Gabriel Charette  <gchare@google.com>\n+\n+\t* include/line-map.h (LINEMAP_POSITION_FOR_COLUMN): Remove.\n+\tUpdate all users to use linemap_position_for_column instead.\n+\n 2011-07-28  Gabriel Charette  <gchare@google.com>\n \n \t* include/line-map.h (struct line_maps):"}, {"sha": "c6772afb83d83c077940fe10b0fae51e89c5dc8d", "filename": "libcpp/directives-only.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f6ced102dddee2a41f6ae4e96c42a6580f8e279/libcpp%2Fdirectives-only.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f6ced102dddee2a41f6ae4e96c42a6580f8e279/libcpp%2Fdirectives-only.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fdirectives-only.c?ref=3f6ced102dddee2a41f6ae4e96c42a6580f8e279", "patch": "@@ -142,7 +142,7 @@ _cpp_preprocess_dir_only (cpp_reader *pfile,\n \t    flags |= DO_LINE_COMMENT;\n \t  else if (!(flags & DO_SPECIAL))\n \t    /* Mark the position for possible error reporting. */\n-\t    LINEMAP_POSITION_FOR_COLUMN (loc, pfile->line_table, col);\n+\t    loc = linemap_position_for_column (pfile->line_table, col);\n \n \t  break;\n "}, {"sha": "3c84035e95fd896ca38b8b89aed45fbd73dd88cd", "filename": "libcpp/include/line-map.h", "status": "modified", "additions": 0, "deletions": 17, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f6ced102dddee2a41f6ae4e96c42a6580f8e279/libcpp%2Finclude%2Fline-map.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f6ced102dddee2a41f6ae4e96c42a6580f8e279/libcpp%2Finclude%2Fline-map.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Finclude%2Fline-map.h?ref=3f6ced102dddee2a41f6ae4e96c42a6580f8e279", "patch": "@@ -165,23 +165,6 @@ extern const struct line_map *linemap_lookup\n /* Nonzero if the map is at the bottom of the include stack.  */\n #define MAIN_FILE_P(MAP) ((MAP)->included_from < 0)\n \n-/* Set LOC to a source position that is the same line as the most recent\n-   linemap_line_start, but with the specified TO_COLUMN column number.  */\n-\n-#define LINEMAP_POSITION_FOR_COLUMN(LOC, SET, TO_COLUMN) do { \\\n-  unsigned int to_column = (TO_COLUMN); \\\n-  struct line_maps *set = (SET); \\\n-  if (__builtin_expect (to_column >= set->max_column_hint, 0)) \\\n-    (LOC) = linemap_position_for_column (set, to_column); \\\n-  else { \\\n-    source_location r = set->highest_line; \\\n-    r = r + to_column; \\\n-    if (r >= set->highest_location) \\\n-      set->highest_location = r; \\\n-    (LOC) = r;\t\t\t \\\n-  }} while (0)\n-    \n-\n extern source_location\n linemap_position_for_column (struct line_maps *set, unsigned int to_column);\n "}, {"sha": "d460b98d5d22b242c85bd038b73183eecd853882", "filename": "libcpp/lex.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f6ced102dddee2a41f6ae4e96c42a6580f8e279/libcpp%2Flex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f6ced102dddee2a41f6ae4e96c42a6580f8e279/libcpp%2Flex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Flex.c?ref=3f6ced102dddee2a41f6ae4e96c42a6580f8e279", "patch": "@@ -1975,8 +1975,8 @@ _cpp_lex_direct (cpp_reader *pfile)\n     }\n   c = *buffer->cur++;\n \n-  LINEMAP_POSITION_FOR_COLUMN (result->src_loc, pfile->line_table,\n-\t\t\t       CPP_BUF_COLUMN (buffer, buffer->cur));\n+  result->src_loc = linemap_position_for_column (pfile->line_table,\n+\t\t\t                                    CPP_BUF_COLUMN (buffer, buffer->cur));\n \n   switch (c)\n     {"}]}