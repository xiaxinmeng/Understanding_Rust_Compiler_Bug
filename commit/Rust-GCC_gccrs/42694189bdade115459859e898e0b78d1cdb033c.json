{"sha": "42694189bdade115459859e898e0b78d1cdb033c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDI2OTQxODliZGFkZTExNTQ1OTg1OWU4OThlMGI3OGQxY2RiMDMzYw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2010-07-27T09:43:59Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2010-07-27T09:43:59Z"}, "message": "re PR tree-optimization/45083 (strange warning text from gcc)\n\n\tPR tree-optimization/45083\n\t* tree-inline.c (add_local_variables): Also remap DECL_DEBUG_EXPR.\n\n\t* gcc.dg/pr45083.c: New test.\n\nFrom-SVN: r162559", "tree": {"sha": "d49c593577aa11f679a1d71ee4a109af2cc62c65", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d49c593577aa11f679a1d71ee4a109af2cc62c65"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/42694189bdade115459859e898e0b78d1cdb033c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42694189bdade115459859e898e0b78d1cdb033c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/42694189bdade115459859e898e0b78d1cdb033c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42694189bdade115459859e898e0b78d1cdb033c/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2b0cb007fa96ea4ea95de5505cfe481b2aedcf80", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b0cb007fa96ea4ea95de5505cfe481b2aedcf80", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2b0cb007fa96ea4ea95de5505cfe481b2aedcf80"}], "stats": {"total": 54, "additions": 53, "deletions": 1}, "files": [{"sha": "f9a1b2f53f330817fad3bead5d5bdf510f2b7c62", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42694189bdade115459859e898e0b78d1cdb033c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42694189bdade115459859e898e0b78d1cdb033c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=42694189bdade115459859e898e0b78d1cdb033c", "patch": "@@ -1,3 +1,8 @@\n+2010-07-27  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/45083\n+\t* tree-inline.c (add_local_variables): Also remap DECL_DEBUG_EXPR.\n+\n 2010-07-27  Bernd Schmidt  <bernds@codesourcery.com>\n \n \t* postreload.c (reload_combine_recognize_const_pattern): Move test"}, {"sha": "93bfc7060697372b6c9533274b1196f2f8a1ebcf", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42694189bdade115459859e898e0b78d1cdb033c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42694189bdade115459859e898e0b78d1cdb033c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=42694189bdade115459859e898e0b78d1cdb033c", "patch": "@@ -1,3 +1,8 @@\n+2010-07-27  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/45083\n+\t* gcc.dg/pr45083.c: New test.\n+\n 2010-07-26  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/40873"}, {"sha": "c9a4dbfe19124d8e4d2c6b322e18ea397f8fe9d1", "filename": "gcc/testsuite/gcc.dg/pr45083.c", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42694189bdade115459859e898e0b78d1cdb033c/gcc%2Ftestsuite%2Fgcc.dg%2Fpr45083.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42694189bdade115459859e898e0b78d1cdb033c/gcc%2Ftestsuite%2Fgcc.dg%2Fpr45083.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr45083.c?ref=42694189bdade115459859e898e0b78d1cdb033c", "patch": "@@ -0,0 +1,25 @@\n+/* PR tree-optimization/45083 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -Wuninitialized\" } */\n+\n+struct S { char *a; unsigned b; unsigned c; };\n+extern int foo (const char *);\n+extern void bar (int, int);\n+\n+static void\n+baz (void)\n+{\n+  struct S cs[1];\t/* { dg-message \"was declared here\" } */\n+  switch (cs->b)\t/* { dg-warning \"cs\\[^\\n\\r\\]*\\\\.b\\[^\\n\\r\\]*is used uninitialized\" } */\n+    {\n+    case 101:\n+      if (foo (cs->a))\t/* { dg-warning \"cs\\[^\\n\\r\\]*\\\\.a\\[^\\n\\r\\]*may be used uninitialized\" } */\n+\tbar (cs->c, cs->b);\t/* { dg-warning \"cs\\[^\\n\\r\\]*\\\\.c\\[^\\n\\r\\]*may be used uninitialized\" } */\n+    }\n+}\n+\n+void\n+test (void)\n+{\n+  baz ();\n+}"}, {"sha": "81d6cfb4c508f79294cf2f5ce0e809899c2a9b5d", "filename": "gcc/tree-inline.c", "status": "modified", "additions": 18, "deletions": 1, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42694189bdade115459859e898e0b78d1cdb033c/gcc%2Ftree-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42694189bdade115459859e898e0b78d1cdb033c/gcc%2Ftree-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-inline.c?ref=42694189bdade115459859e898e0b78d1cdb033c", "patch": "@@ -3687,7 +3687,24 @@ add_local_variables (struct function *callee, struct function *caller,\n \t  add_local_decl (caller, var);\n       }\n     else if (!can_be_nonlocal (var, id))\n-      add_local_decl (caller, remap_decl (var, id));\n+      {\n+        tree new_var = remap_decl (var, id);\n+\n+        /* Remap debug-expressions.  */\n+\tif (TREE_CODE (new_var) == VAR_DECL\n+\t    && DECL_DEBUG_EXPR_IS_FROM (new_var)\n+\t    && new_var != var)\n+\t  {\n+\t    tree tem = DECL_DEBUG_EXPR (var);\n+\t    bool old_regimplify = id->regimplify;\n+\t    id->remapping_type_depth++;\n+\t    walk_tree (&tem, copy_tree_body_r, id, NULL);\n+\t    id->remapping_type_depth--;\n+\t    id->regimplify = old_regimplify;\n+\t    SET_DECL_DEBUG_EXPR (new_var, tem);\n+\t  }\n+\tadd_local_decl (caller, new_var);\n+      }\n }\n \n /* Fetch callee declaration from the call graph edge going from NODE and"}]}