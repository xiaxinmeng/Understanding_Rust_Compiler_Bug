{"sha": "ab3146fde752eef940f3724226a59f12a71f2750", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWIzMTQ2ZmRlNzUyZWVmOTQwZjM3MjQyMjZhNTlmMTJhNzFmMjc1MA==", "commit": {"author": {"name": "Zdenek Dvorak", "email": "rakdver@atrey.karlin.mff.cuni.cz", "date": "2002-10-20T20:38:41Z"}, "committer": {"name": "Zdenek Dvorak", "email": "rakdver@gcc.gnu.org", "date": "2002-10-20T20:38:41Z"}, "message": "re PR other/8202 (_mm_srli_si128 and  _mm_slli_si128 missing from xmmintrin.h)\n\n\tPR other/8202\n\t* i386.c (ix86_init_mmx_sse_builtins, ix86_expand_builtin): Define and\n\texpand __builtin_ia32_pslldqi128 and __builtin_ia32_psrldqi128.\n\t* i386.h (IX86_BUILTIN_PSLLDQI128, IX86_BUILTIN_PSRLDQI128): New.\n\t* xmmintrin.h (_mm_srli_si128, _mm_slli_si128): New.\n\n\t* testsuite/gcc.dg/i386-sse-3.c: Add tests for _mm_srli_si128 and\n\t_mm_slli_si128.\n\nFrom-SVN: r58338", "tree": {"sha": "7da8765510f183410823b6d7f0e4b32f1cfa47d8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7da8765510f183410823b6d7f0e4b32f1cfa47d8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ab3146fde752eef940f3724226a59f12a71f2750", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab3146fde752eef940f3724226a59f12a71f2750", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ab3146fde752eef940f3724226a59f12a71f2750", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab3146fde752eef940f3724226a59f12a71f2750/comments", "author": null, "committer": null, "parents": [{"sha": "e03b71533d939139d9d42da9a3b412e7d3c07e07", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e03b71533d939139d9d42da9a3b412e7d3c07e07", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e03b71533d939139d9d42da9a3b412e7d3c07e07"}], "stats": {"total": 76, "additions": 75, "deletions": 1}, "files": [{"sha": "af7f6fd45f0b92496a4d45956dc730fe9c684ee0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab3146fde752eef940f3724226a59f12a71f2750/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab3146fde752eef940f3724226a59f12a71f2750/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ab3146fde752eef940f3724226a59f12a71f2750", "patch": "@@ -1,3 +1,11 @@\n+2002-10-20  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>\n+\n+\tPR other/8202\n+\t* i386.c (ix86_init_mmx_sse_builtins, ix86_expand_builtin): Define and\n+\texpand __builtin_ia32_pslldqi128 and __builtin_ia32_psrldqi128.\n+\t* i386.h (IX86_BUILTIN_PSLLDQI128, IX86_BUILTIN_PSRLDQI128): New.\n+\t* xmmintrin.h (_mm_srli_si128, _mm_slli_si128): New.\n+\n 2002-10-20  Roger Sayle  <roger@eyesopen.com>\n \n \tPR c/761"}, {"sha": "0569fef495a43347002a9066f65003431fd6a379", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab3146fde752eef940f3724226a59f12a71f2750/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab3146fde752eef940f3724226a59f12a71f2750/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=ab3146fde752eef940f3724226a59f12a71f2750", "patch": "@@ -12598,10 +12598,12 @@ ix86_init_mmx_sse_builtins ()\n   def_builtin (MASK_SSE2, \"__builtin_ia32_psraw128\", v8hi_ftype_v8hi_v2di, IX86_BUILTIN_PSRAW128);\n   def_builtin (MASK_SSE2, \"__builtin_ia32_psrad128\", v4si_ftype_v4si_v2di, IX86_BUILTIN_PSRAD128);\n \n+  def_builtin (MASK_SSE2, \"__builtin_ia32_pslldqi128\", v2di_ftype_v2di_int, IX86_BUILTIN_PSLLDQI128);\n   def_builtin (MASK_SSE2, \"__builtin_ia32_psllwi128\", v8hi_ftype_v8hi_int, IX86_BUILTIN_PSLLWI128);\n   def_builtin (MASK_SSE2, \"__builtin_ia32_pslldi128\", v4si_ftype_v4si_int, IX86_BUILTIN_PSLLDI128);\n   def_builtin (MASK_SSE2, \"__builtin_ia32_psllqi128\", v2di_ftype_v2di_int, IX86_BUILTIN_PSLLQI128);\n \n+  def_builtin (MASK_SSE2, \"__builtin_ia32_psrldqi128\", v2di_ftype_v2di_int, IX86_BUILTIN_PSRLDQI128);\n   def_builtin (MASK_SSE2, \"__builtin_ia32_psrlwi128\", v8hi_ftype_v8hi_int, IX86_BUILTIN_PSRLWI128);\n   def_builtin (MASK_SSE2, \"__builtin_ia32_psrldi128\", v4si_ftype_v4si_int, IX86_BUILTIN_PSRLDI128);\n   def_builtin (MASK_SSE2, \"__builtin_ia32_psrlqi128\", v2di_ftype_v2di_int, IX86_BUILTIN_PSRLQI128);\n@@ -13186,6 +13188,35 @@ ix86_expand_builtin (exp, target, subtarget, mode, ignore)\n       emit_insn (pat);\n       return target;\n \n+    case IX86_BUILTIN_PSLLDQI128:\n+    case IX86_BUILTIN_PSRLDQI128:\n+      icode = (  fcode == IX86_BUILTIN_PSLLDQI128 ? CODE_FOR_sse2_ashlti3\n+\t       : CODE_FOR_sse2_lshrti3);\n+      arg0 = TREE_VALUE (arglist);\n+      arg1 = TREE_VALUE (TREE_CHAIN (arglist));\n+      op0 = expand_expr (arg0, NULL_RTX, VOIDmode, 0);\n+      op1 = expand_expr (arg1, NULL_RTX, VOIDmode, 0);\n+      tmode = insn_data[icode].operand[0].mode;\n+      mode1 = insn_data[icode].operand[1].mode;\n+      mode2 = insn_data[icode].operand[2].mode;\n+\n+      if (! (*insn_data[icode].operand[1].predicate) (op0, mode1))\n+\t{\n+\t  op0 = copy_to_reg (op0);\n+\t  op0 = simplify_gen_subreg (mode1, op0, GET_MODE (op0), 0);\n+\t}\n+      if (! (*insn_data[icode].operand[2].predicate) (op1, mode2))\n+\t{\n+\t  error (\"shift must be an immediate\");\n+\t  return const0_rtx;\n+\t}\n+      target = gen_reg_rtx (V2DImode);\n+      pat = GEN_FCN (icode) (simplify_gen_subreg (tmode, target, V2DImode, 0), op0, op1);\n+      if (! pat)\n+\treturn 0;\n+      emit_insn (pat);\n+      return target;\n+\n     case IX86_BUILTIN_FEMMS:\n       emit_insn (gen_femms ());\n       return NULL_RTX;"}, {"sha": "56ccf4e89f61580e76cd6c015da3ce25e285ebfb", "filename": "gcc/config/i386/i386.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab3146fde752eef940f3724226a59f12a71f2750/gcc%2Fconfig%2Fi386%2Fi386.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab3146fde752eef940f3724226a59f12a71f2750/gcc%2Fconfig%2Fi386%2Fi386.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.h?ref=ab3146fde752eef940f3724226a59f12a71f2750", "patch": "@@ -2402,11 +2402,13 @@ enum ix86_builtins\n   IX86_BUILTIN_PSRLW128,\n   IX86_BUILTIN_PSRLD128,\n   IX86_BUILTIN_PSRLQ128,\n+  IX86_BUILTIN_PSLLDQI128,\n   IX86_BUILTIN_PSLLWI128,\n   IX86_BUILTIN_PSLLDI128,\n   IX86_BUILTIN_PSLLQI128,\n   IX86_BUILTIN_PSRAWI128,\n   IX86_BUILTIN_PSRADI128,\n+  IX86_BUILTIN_PSRLDQI128,\n   IX86_BUILTIN_PSRLWI128,\n   IX86_BUILTIN_PSRLDI128,\n   IX86_BUILTIN_PSRLQI128,"}, {"sha": "8c5d41b660ee3904639aec9a7c14b22e077f9898", "filename": "gcc/config/i386/xmmintrin.h", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab3146fde752eef940f3724226a59f12a71f2750/gcc%2Fconfig%2Fi386%2Fxmmintrin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab3146fde752eef940f3724226a59f12a71f2750/gcc%2Fconfig%2Fi386%2Fxmmintrin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fxmmintrin.h?ref=ab3146fde752eef940f3724226a59f12a71f2750", "patch": "@@ -1979,6 +1979,22 @@ _mm_srai_epi32 (__m128i __A, int __B)\n   return (__m128i)__builtin_ia32_psradi128 ((__v4si)__A, __B);\n }\n \n+#if 0\n+static __m128i __attribute__((__always_inline__))\n+_mm_srli_si128 (__m128i __A, const int __B)\n+{\n+  return ((__m128i)__builtin_ia32_psrldqi128 (__A, __B))\n+}\n+\n+static __m128i __attribute__((__always_inline__))\n+_mm_srli_si128 (__m128i __A, const int __B)\n+{\n+  return ((__m128i)__builtin_ia32_pslldqi128 (__A, __B))\n+}\n+#endif\n+#define _mm_srli_si128(__A, __B) ((__m128i)__builtin_ia32_psrldqi128 (__A, __B))\n+#define _mm_slli_si128(__A, __B) ((__m128i)__builtin_ia32_pslldqi128 (__A, __B))\n+\n static __inline __m128i\n _mm_srli_epi16 (__m128i __A, int __B)\n {"}, {"sha": "49e3d4b1f48e90bf8d22ca1eab6a7977ad7e102e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab3146fde752eef940f3724226a59f12a71f2750/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab3146fde752eef940f3724226a59f12a71f2750/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ab3146fde752eef940f3724226a59f12a71f2750", "patch": "@@ -1,3 +1,8 @@\n+2002-10-20  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>\n+\n+\t* testsuite/gcc.dg/i386-sse-3.c: Add tests for _mm_srli_si128 and\n+\t_mm_slli_si128.\n+\n 2002-10-19  Andreas Schwab  <schwab@suse.de>\n \n \t* lib/compat.exp (compat-run): Prepend \"./\" when $dest has no"}, {"sha": "9f31cfa92f8576c4e00b0485814ccc6ddb63f43a", "filename": "gcc/testsuite/gcc.dg/i386-sse-3.c", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab3146fde752eef940f3724226a59f12a71f2750/gcc%2Ftestsuite%2Fgcc.dg%2Fi386-sse-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab3146fde752eef940f3724226a59f12a71f2750/gcc%2Ftestsuite%2Fgcc.dg%2Fi386-sse-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fi386-sse-3.c?ref=ab3146fde752eef940f3724226a59f12a71f2750", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile { target i?86-*-* x86_64-*-* } } */\n-/* { dg-options \"-O2 -msse\" } */\n+/* { dg-options \"-O2 -msse -msse2\" } */\n \n /* Test that the intrinsics compile with optimization.  These were not\n    tested in i386-sse-[12].c because these builtins require immediate\n@@ -35,3 +35,15 @@ test_prefetch (char *p)\n   _mm_prefetch (p+8, _MM_HINT_T2);\n   _mm_prefetch (p+12, _MM_HINT_NTA);\n }\n+\n+__m128i\n+test__slli_si128 (__m128i a)\n+{\n+  return _mm_slli_si128 (a, 3);\n+}\n+\n+__m128i\n+test__srli_si128 (__m128i a)\n+{\n+  return _mm_srli_si128 (a, 3);\n+}"}]}