{"sha": "8313d0ee55970c7a0fe16595345f53de9698ec95", "node_id": "C_kwDOANBUbNoAKDgzMTNkMGVlNTU5NzBjN2EwZmUxNjU5NTM0NWY1M2RlOTY5OGVjOTU", "commit": {"author": {"name": "Piotr Trojanek", "email": "trojanek@adacore.com", "date": "2021-12-21T14:33:56Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2022-01-07T16:24:14Z"}, "message": "[Ada] Fix style in expansion of multi-dimensional array aggregates\n\ngcc/ada/\n\n\t* exp_aggr.adb (Build_Array_Aggr_Code): Fix inconsistent style\n\tin comments and code.", "tree": {"sha": "dde224ad0c3ccbae59fe33ac0748de684b32be59", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dde224ad0c3ccbae59fe33ac0748de684b32be59"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8313d0ee55970c7a0fe16595345f53de9698ec95", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8313d0ee55970c7a0fe16595345f53de9698ec95", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8313d0ee55970c7a0fe16595345f53de9698ec95", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8313d0ee55970c7a0fe16595345f53de9698ec95/comments", "author": {"login": "ptroja", "id": 161602, "node_id": "MDQ6VXNlcjE2MTYwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/161602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptroja", "html_url": "https://github.com/ptroja", "followers_url": "https://api.github.com/users/ptroja/followers", "following_url": "https://api.github.com/users/ptroja/following{/other_user}", "gists_url": "https://api.github.com/users/ptroja/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptroja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptroja/subscriptions", "organizations_url": "https://api.github.com/users/ptroja/orgs", "repos_url": "https://api.github.com/users/ptroja/repos", "events_url": "https://api.github.com/users/ptroja/events{/privacy}", "received_events_url": "https://api.github.com/users/ptroja/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d7b2fad2ec6652194aab0b9acfd41f187c4396d0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7b2fad2ec6652194aab0b9acfd41f187c4396d0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d7b2fad2ec6652194aab0b9acfd41f187c4396d0"}], "stats": {"total": 10, "additions": 4, "deletions": 6}, "files": [{"sha": "a46abff2b5e216371fb031c479fb3e2c8a695321", "filename": "gcc/ada/exp_aggr.adb", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8313d0ee55970c7a0fe16595345f53de9698ec95/gcc%2Fada%2Fexp_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8313d0ee55970c7a0fe16595345f53de9698ec95/gcc%2Fada%2Fexp_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_aggr.adb?ref=8313d0ee55970c7a0fe16595345f53de9698ec95", "patch": "@@ -1021,7 +1021,7 @@ package body Exp_Aggr is\n \n    --  2. If the aggregate contains positional elements we\n \n-   --     (a) translate the positional elements in a series of assignments\n+   --     (a) Translate the positional elements in a series of assignments\n \n    --     (b) Generate a final loop to cover the others choice if any.\n    --         Note that this final loop has to be a while loop since the case\n@@ -1032,7 +1032,7 @@ package body Exp_Aggr is\n \n    --         cannot be handled by a for loop. Thus for the following\n \n-   --             array (L .. H) := (.. positional elements.., others =>E);\n+   --             array (L .. H) := (.. positional elements.., others => E);\n \n    --         we always generate something like:\n \n@@ -2063,11 +2063,9 @@ package body Exp_Aggr is\n          --  Construct \"for L_J in Index_Base range L .. H\"\n \n          L_Iteration_Scheme :=\n-           Make_Iteration_Scheme\n-             (Loc,\n+           Make_Iteration_Scheme (Loc,\n               Loop_Parameter_Specification =>\n-                Make_Loop_Parameter_Specification\n-                  (Loc,\n+                Make_Loop_Parameter_Specification (Loc,\n                    Defining_Identifier         => L_J,\n                    Discrete_Subtype_Definition => L_Range));\n "}]}