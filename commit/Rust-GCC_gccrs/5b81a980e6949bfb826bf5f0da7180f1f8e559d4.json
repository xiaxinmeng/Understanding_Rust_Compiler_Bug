{"sha": "5b81a980e6949bfb826bf5f0da7180f1f8e559d4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWI4MWE5ODBlNjk0OWJmYjgyNmJmNWYwZGE3MTgwZjFmOGU1NTlkNA==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2019-01-02T22:15:46Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2019-01-02T22:15:46Z"}, "message": "PR c++/88612 - ICE with -Waddress-of-packed-member.\n\n\t* call.c (convert_for_arg_passing): Only give warnings with tf_warning.\n\t* typeck.c (convert_for_assignment): Likewise.\n\n\t* g++.dg/warn/Waddress-of-packed-member1.C: New test.\n\nFrom-SVN: r267532", "tree": {"sha": "37531a99dfa5813e8dab84c2803c1865a217bd4e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/37531a99dfa5813e8dab84c2803c1865a217bd4e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5b81a980e6949bfb826bf5f0da7180f1f8e559d4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b81a980e6949bfb826bf5f0da7180f1f8e559d4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5b81a980e6949bfb826bf5f0da7180f1f8e559d4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b81a980e6949bfb826bf5f0da7180f1f8e559d4/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d4bf69750d31d08068f8242225b8fa06cdf11411", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4bf69750d31d08068f8242225b8fa06cdf11411", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d4bf69750d31d08068f8242225b8fa06cdf11411"}], "stats": {"total": 59, "additions": 57, "deletions": 2}, "files": [{"sha": "fa03419c53ec7f87d86dba86507ad4bd9f0b7bc6", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b81a980e6949bfb826bf5f0da7180f1f8e559d4/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b81a980e6949bfb826bf5f0da7180f1f8e559d4/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=5b81a980e6949bfb826bf5f0da7180f1f8e559d4", "patch": "@@ -1,3 +1,9 @@\n+2019-01-02  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/88612 - ICE with -Waddress-of-packed-member.\n+\t* call.c (convert_for_arg_passing): Only give warnings with tf_warning.\n+\t* typeck.c (convert_for_assignment): Likewise.\n+\n 2019-01-01  Jakub Jelinek  <jakub@redhat.com>\n \n \tUpdate copyright years."}, {"sha": "8bc8566e8d64b50a8ca65e9710cb971229361fac", "filename": "gcc/cp/call.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b81a980e6949bfb826bf5f0da7180f1f8e559d4/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b81a980e6949bfb826bf5f0da7180f1f8e559d4/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=5b81a980e6949bfb826bf5f0da7180f1f8e559d4", "patch": "@@ -7630,7 +7630,8 @@ convert_for_arg_passing (tree type, tree val, tsubst_flags_t complain)\n       maybe_warn_parm_abi (type, cp_expr_loc_or_loc (val, input_location));\n     }\n \n-  warn_for_address_or_pointer_of_packed_member (false, type, val);\n+  if (complain & tf_warning)\n+    warn_for_address_or_pointer_of_packed_member (false, type, val);\n \n   return val;\n }"}, {"sha": "e399cd3fe45b40962fa6530989642877ba8234d7", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b81a980e6949bfb826bf5f0da7180f1f8e559d4/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b81a980e6949bfb826bf5f0da7180f1f8e559d4/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=5b81a980e6949bfb826bf5f0da7180f1f8e559d4", "patch": "@@ -9073,7 +9073,8 @@ convert_for_assignment (tree type, tree rhs,\n       TREE_NO_WARNING (rhs) = 1;\n     }\n \n-  warn_for_address_or_pointer_of_packed_member (false, type, rhs);\n+  if (complain & tf_warning)\n+    warn_for_address_or_pointer_of_packed_member (false, type, rhs);\n \n   return perform_implicit_conversion_flags (strip_top_quals (type), rhs,\n \t\t\t\t\t    complain, flags);"}, {"sha": "d2a214b3a1c77321a33f295bc1cf7c1c67963fd8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b81a980e6949bfb826bf5f0da7180f1f8e559d4/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b81a980e6949bfb826bf5f0da7180f1f8e559d4/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5b81a980e6949bfb826bf5f0da7180f1f8e559d4", "patch": "@@ -1,3 +1,8 @@\n+2019-01-02  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/88612 - ICE with -Waddress-of-packed-member.\n+\t* g++.dg/warn/Waddress-of-packed-member1.C: New test.\n+\n 2019-01-02  Martin Sebor  <msebor@redhat.com>\n             Jeff Law  <law@redhat.com>\n "}, {"sha": "8faa046fd92ee619a0398ba3822efdbee8ce9628", "filename": "gcc/testsuite/g++.dg/warn/Waddress-of-packed-member1.C", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b81a980e6949bfb826bf5f0da7180f1f8e559d4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWaddress-of-packed-member1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b81a980e6949bfb826bf5f0da7180f1f8e559d4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWaddress-of-packed-member1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWaddress-of-packed-member1.C?ref=5b81a980e6949bfb826bf5f0da7180f1f8e559d4", "patch": "@@ -0,0 +1,42 @@\n+// PR c++/88612\n+// { dg-do compile { target c++11 } }\n+// { dg-options \"-fpack-struct -Waddress-of-packed-member\" }\n+// { dg-prune-output \"taking address of packed member\" }\n+\n+template<class F, class... T>\n+auto indirect_call(F f, T... t) -> decltype(f(t...))\n+{\n+  return f(t...);\n+}\n+\n+template<class F, class T>\n+struct VariadicBind\n+{\n+  F f;\n+  T t;\n+\n+  template<class... A>\n+  auto operator()(A... a) -> decltype(indirect_call(f, t, a...))\n+  {\n+    return indirect_call(f, t, a...);\n+  }\n+};\n+\n+template<class F>\n+void apply(F f)\n+{\n+  f();\n+}\n+\n+template<class F, class V1, class... V>\n+void apply(F f, V1 v1, V... v)\n+{\n+  apply(VariadicBind<F, int>{f, v1}, v...);\n+}\n+\n+void func(int, int) { }\n+\n+int main()\n+{\n+  apply(func, 0, 0);\n+}"}]}