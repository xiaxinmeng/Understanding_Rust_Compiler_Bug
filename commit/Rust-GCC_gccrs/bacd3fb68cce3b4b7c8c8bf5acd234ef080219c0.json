{"sha": "bacd3fb68cce3b4b7c8c8bf5acd234ef080219c0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmFjZDNmYjY4Y2NlM2I0YjdjOGM4YmY1YWNkMjM0ZWYwODAyMTljMA==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2009-08-26T09:02:01Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2009-08-26T09:02:01Z"}, "message": "tree-ssa-structalias.c (create_variable_info_for): Remove strange whole-program condition, prepare to be called for non-globals.\n\n2009-08-26  Richard Guenther  <rguenther@suse.de>\n\n\t* tree-ssa-structalias.c (create_variable_info_for): Remove\n\tstrange whole-program condition, prepare to be called for non-globals.\n\t(intra_create_variable_infos): For restrict qualified DECL_BY_REFERENCE\n\tparams build a representative with known type and track its fields.\n\n\t* gcc.dg/tree-ssa/restrict-4.c: New testcase.\n\nFrom-SVN: r151117", "tree": {"sha": "35bfe979726778b00f3f6636a9666c41bd299094", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/35bfe979726778b00f3f6636a9666c41bd299094"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bacd3fb68cce3b4b7c8c8bf5acd234ef080219c0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bacd3fb68cce3b4b7c8c8bf5acd234ef080219c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bacd3fb68cce3b4b7c8c8bf5acd234ef080219c0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bacd3fb68cce3b4b7c8c8bf5acd234ef080219c0/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7b3d1847e637cae5e6ea174718df19ceaa5ae290", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b3d1847e637cae5e6ea174718df19ceaa5ae290", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7b3d1847e637cae5e6ea174718df19ceaa5ae290"}], "stats": {"total": 71, "additions": 67, "deletions": 4}, "files": [{"sha": "85f1015f7b99f40c0a041b97e01773625c1039dc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bacd3fb68cce3b4b7c8c8bf5acd234ef080219c0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bacd3fb68cce3b4b7c8c8bf5acd234ef080219c0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bacd3fb68cce3b4b7c8c8bf5acd234ef080219c0", "patch": "@@ -1,3 +1,10 @@\n+2009-08-26  Richard Guenther  <rguenther@suse.de>\n+\n+\t* tree-ssa-structalias.c (create_variable_info_for): Remove\n+\tstrange whole-program condition, prepare to be called for non-globals.\n+\t(intra_create_variable_infos): For restrict qualified DECL_BY_REFERENCE\n+\tparams build a representative with known type and track its fields.\n+\n 2009-08-26  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/alpha/sync.md: Update comment about unpredictable LL/SC lock"}, {"sha": "e11a926dda955b9afda330d8d6b7ab0d758daaed", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bacd3fb68cce3b4b7c8c8bf5acd234ef080219c0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bacd3fb68cce3b4b7c8c8bf5acd234ef080219c0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=bacd3fb68cce3b4b7c8c8bf5acd234ef080219c0", "patch": "@@ -1,3 +1,7 @@\n+2009-08-26  Richard Guenther  <rguenther@suse.de>\n+\n+\t* gcc.dg/tree-ssa/restrict-4.c: New testcase.\n+\n 2009-08-26  Jason Merrill  <jason@redhat.com>\n \n \t* g++.dg/cpp0x/explicit3.C: New."}, {"sha": "3a36def25ccb234389154813ab135725ba942bff", "filename": "gcc/testsuite/gcc.dg/tree-ssa/restrict-4.c", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bacd3fb68cce3b4b7c8c8bf5acd234ef080219c0/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Frestrict-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bacd3fb68cce3b4b7c8c8bf5acd234ef080219c0/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Frestrict-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Frestrict-4.c?ref=bacd3fb68cce3b4b7c8c8bf5acd234ef080219c0", "patch": "@@ -0,0 +1,19 @@\n+/* { dg-do compile }  */\n+/* { dg-options \"-O2 -fdump-tree-lim1-details\" } */\n+\n+struct Foo\n+{\n+  int n;\n+  int * __restrict__ p;\n+};\n+void bar(struct Foo f, int * __restrict__ q)\n+{\n+  int i;\n+  for (i = 0; i < f.n; ++i)\n+    {\n+      *q += f.p[i];\n+    }\n+}\n+\n+/* { dg-final { scan-tree-dump \"Executing store motion\" \"lim1\" } } */\n+/* { dg-final { cleanup-tree-dump \"lim1\" } } */"}, {"sha": "a9d31325b5746fb97547f08b3a49a59217e1bc55", "filename": "gcc/tree-ssa-structalias.c", "status": "modified", "additions": 37, "deletions": 4, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bacd3fb68cce3b4b7c8c8bf5acd234ef080219c0/gcc%2Ftree-ssa-structalias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bacd3fb68cce3b4b7c8c8bf5acd234ef080219c0/gcc%2Ftree-ssa-structalias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-structalias.c?ref=bacd3fb68cce3b4b7c8c8bf5acd234ef080219c0", "patch": "@@ -4548,13 +4548,13 @@ create_variable_info_for (tree decl, const char *name)\n \t  newvi->fullsize = vi->fullsize;\n \t  newvi->may_have_pointers = fo->may_have_pointers;\n \t  insert_into_field_list (vi, newvi);\n-\t  if (newvi->is_global_var\n-\t      && (!flag_whole_program || !in_ipa_mode)\n+\t  if ((newvi->is_global_var || TREE_CODE (decl) == PARM_DECL)\n \t      && newvi->may_have_pointers)\n \t    {\n \t       if (fo->only_restrict_pointers)\n \t\t make_constraint_from_restrict (newvi, \"GLOBAL_RESTRICT\");\n-\t       make_copy_constraint (newvi, nonlocal_id);\n+\t       if (newvi->is_global_var && !in_ipa_mode)\n+\t\t make_copy_constraint (newvi, nonlocal_id);\n \t    }\n \n \t  stats.total_vars++;\n@@ -4618,8 +4618,41 @@ intra_create_variable_infos (void)\n       if (!could_have_pointers (t))\n \tcontinue;\n \n+      /* For restrict qualified pointers to objects passed by\n+         reference build a real representative for the pointed-to object.  */\n+      if (DECL_BY_REFERENCE (t)\n+\t  && POINTER_TYPE_P (TREE_TYPE (t))\n+\t  && TYPE_RESTRICT (TREE_TYPE (t)))\n+\t{\n+\t  struct constraint_expr lhsc, rhsc;\n+\t  varinfo_t vi;\n+\t  tree heapvar = heapvar_lookup (t, 0);\n+\t  if (heapvar == NULL_TREE)\n+\t    {\n+\t      var_ann_t ann;\n+\t      heapvar = create_tmp_var_raw (TREE_TYPE (TREE_TYPE (t)),\n+\t\t\t\t\t    \"PARM_NOALIAS\");\n+\t      DECL_EXTERNAL (heapvar) = 1;\n+\t      heapvar_insert (t, 0, heapvar);\n+\t      ann = get_var_ann (heapvar);\n+\t      ann->is_heapvar = 1;\n+\t    }\n+\t  if (gimple_referenced_vars (cfun))\n+\t    add_referenced_var (heapvar);\n+\t  lhsc.var = get_vi_for_tree (t)->id;\n+\t  lhsc.type = SCALAR;\n+\t  lhsc.offset = 0;\n+\t  rhsc.var = (vi = get_vi_for_tree (heapvar))->id;\n+\t  rhsc.type = ADDRESSOF;\n+\t  rhsc.offset = 0;\n+\t  process_constraint (new_constraint (lhsc, rhsc));\n+\t  vi->is_restrict_var = 1;\n+\t  continue;\n+\t}\n+\n       for (p = get_vi_for_tree (t); p; p = p->next)\n-\tmake_constraint_from (p, nonlocal_id);\n+\tif (p->may_have_pointers)\n+\t  make_constraint_from (p, nonlocal_id);\n       if (POINTER_TYPE_P (TREE_TYPE (t))\n \t  && TYPE_RESTRICT (TREE_TYPE (t)))\n \tmake_constraint_from_restrict (get_vi_for_tree (t), \"PARM_RESTRICT\");"}]}