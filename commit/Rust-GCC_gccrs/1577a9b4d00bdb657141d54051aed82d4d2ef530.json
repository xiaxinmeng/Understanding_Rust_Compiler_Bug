{"sha": "1577a9b4d00bdb657141d54051aed82d4d2ef530", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTU3N2E5YjRkMDBiZGI2NTcxNDFkNTQwNTFhZWQ4MmQ0ZDJlZjUzMA==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-10-03T05:35:44Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-10-03T05:35:44Z"}, "message": "(gen_realpart, gen_imagpart): Declared.\n\nFrom-SVN: r2313", "tree": {"sha": "0cc7d8649ff5acaeb726cffe931e12afb748a887", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0cc7d8649ff5acaeb726cffe931e12afb748a887"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1577a9b4d00bdb657141d54051aed82d4d2ef530", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1577a9b4d00bdb657141d54051aed82d4d2ef530", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1577a9b4d00bdb657141d54051aed82d4d2ef530", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1577a9b4d00bdb657141d54051aed82d4d2ef530/comments", "author": null, "committer": null, "parents": [{"sha": "3c5c04c8158f8b42ee3f17e5db901df34899a64d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c5c04c8158f8b42ee3f17e5db901df34899a64d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c5c04c8158f8b42ee3f17e5db901df34899a64d"}], "stats": {"total": 2, "additions": 2, "deletions": 0}, "files": [{"sha": "48d146fbed2e031ea784b077566991d6bcd44b07", "filename": "gcc/rtl.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1577a9b4d00bdb657141d54051aed82d4d2ef530/gcc%2Frtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1577a9b4d00bdb657141d54051aed82d4d2ef530/gcc%2Frtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.h?ref=1577a9b4d00bdb657141d54051aed82d4d2ef530", "patch": "@@ -666,6 +666,8 @@ extern rtx gen_lowpart_common\t\tPROTO((enum machine_mode, rtx));\n extern rtx gen_lowpart\t\t\tPROTO((enum machine_mode, rtx));\n extern rtx gen_lowpart_if_possible\tPROTO((enum machine_mode, rtx));\n extern rtx gen_highpart\t\t\tPROTO((enum machine_mode, rtx));\n+extern rtx gen_realpart\t\t\tPROTO((enum machine_mode, rtx));\n+extern rtx gen_imagpart\t\t\tPROTO((enum machine_mode, rtx));\n extern rtx operand_subword\t\tPROTO((rtx, int, int, enum machine_mode));\n extern rtx operand_subword_force\tPROTO((rtx, int, enum machine_mode));\n extern int subreg_lowpart_p\t\tPROTO((rtx));"}]}