{"sha": "d4da97d78e4f63c4e1e2f7d0bbc6399acb819168", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDRkYTk3ZDc4ZTRmNjNjNGUxZTJmN2QwYmJjNjM5OWFjYjgxOTE2OA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2007-01-26T23:22:35Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2007-01-26T23:22:35Z"}, "message": "Makefile.am (generic_header_files): Add $(inner_nat_headers).\n\n\t* Makefile.am (generic_header_files): Add $(inner_nat_headers).\n\t* testsuite/Makefile.am (check-dejaGNU): Depend on compile-tests.\n\t(MYGCJH): New variable.\n\t(compile-tests): New goal.\n\t* Makefile.in: Rebuilt.\n\t* testsuite/Makefile.in: Rebuilt.\n\nFrom-SVN: r121217", "tree": {"sha": "b33b14c90ffeb78225b4d6cb99e94c9c94768ca8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b33b14c90ffeb78225b4d6cb99e94c9c94768ca8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d4da97d78e4f63c4e1e2f7d0bbc6399acb819168", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4da97d78e4f63c4e1e2f7d0bbc6399acb819168", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d4da97d78e4f63c4e1e2f7d0bbc6399acb819168", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4da97d78e4f63c4e1e2f7d0bbc6399acb819168/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e2e302361205f6e879dbf07bb32fc8e8675763fb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2e302361205f6e879dbf07bb32fc8e8675763fb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e2e302361205f6e879dbf07bb32fc8e8675763fb"}], "stats": {"total": 165, "additions": 150, "deletions": 15}, "files": [{"sha": "28602c2e7a32addc8c206de6b335c116c11b0a18", "filename": "libjava/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4da97d78e4f63c4e1e2f7d0bbc6399acb819168/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4da97d78e4f63c4e1e2f7d0bbc6399acb819168/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=d4da97d78e4f63c4e1e2f7d0bbc6399acb819168", "patch": "@@ -1,3 +1,12 @@\n+2007-01-27  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* Makefile.am (generic_header_files): Add $(inner_nat_headers).\n+\t* testsuite/Makefile.am (check-dejaGNU): Depend on compile-tests.\n+\t(MYGCJH): New variable.\n+\t(compile-tests): New goal.\n+\t* Makefile.in: Rebuilt.\n+\t* testsuite/Makefile.in: Rebuilt.\n+\n 2007-01-26  Tom Tromey  <tromey@redhat.com>\n \n \t* Updated headers."}, {"sha": "90e6afb24cf95f4564b2a303eef387f9dfe17863", "filename": "libjava/Makefile.am", "status": "modified", "additions": 14, "deletions": 13, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4da97d78e4f63c4e1e2f7d0bbc6399acb819168/libjava%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4da97d78e4f63c4e1e2f7d0bbc6399acb819168/libjava%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.am?ref=d4da97d78e4f63c4e1e2f7d0bbc6399acb819168", "patch": "@@ -394,19 +394,6 @@ omitted_headers = java/lang/ClassLoader.h java/lang/Thread.h \\\n \tjava/lang/reflect/Field.h java/lang/reflect/Method.h \\\n \tjava/lang/reflect/Proxy.h gnu/gcj/runtime/ExtensionClassLoader.h\n \n-generic_header_files = $(ordinary_header_files) $(xlib_nat_headers)\n-\n-MYGCJH = gjavah\n-\n-$(generic_header_files): gcjh.stamp\n-\n-gcjh.stamp: classpath/lib/compile-classes\n-if JAVA_MAINTAINER_MODE\n-\t$(MYGCJH) --cni --all $(srcdir)/classpath/lib \\\n-\t    --cmdfile=$(srcdir)/headers.txt -d $(srcdir) --force\n-endif\n-\techo > gcjh.stamp\n-\n inner_nat_headers = java/io/ObjectOutputStream$$PutField.h \\\n \tjava/io/ObjectInputStream$$GetField.h \\\n \tjava/nio/DirectByteBufferImpl$$ReadWrite.h \\\n@@ -419,6 +406,20 @@ inner_nat_headers = java/io/ObjectOutputStream$$PutField.h \\\n \tgnu/java/nio/PipeImpl$$SinkChannelImpl.h \\\n \tgnu/java/nio/PipeImpl$$SourceChannelImpl.h\n \n+generic_header_files = $(ordinary_header_files) $(inner_nat_headers) \\\n+\t$(xlib_nat_headers)\n+\n+MYGCJH = gjavah\n+\n+$(generic_header_files): gcjh.stamp\n+\n+gcjh.stamp: classpath/lib/compile-classes\n+if JAVA_MAINTAINER_MODE\n+\t$(MYGCJH) --cni --all $(srcdir)/classpath/lib \\\n+\t    --cmdfile=$(srcdir)/headers.txt -d $(srcdir) --force\n+endif\n+\techo > gcjh.stamp\n+\n nat_headers = $(ordinary_header_files) $(inner_nat_headers)\n nat_headers_install = $(ordinary_header_files)\n "}, {"sha": "55138226a467533dd8824ed306a08b6cf38ae0c3", "filename": "libjava/Makefile.in", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4da97d78e4f63c4e1e2f7d0bbc6399acb819168/libjava%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4da97d78e4f63c4e1e2f7d0bbc6399acb819168/libjava%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.in?ref=d4da97d78e4f63c4e1e2f7d0bbc6399acb819168", "patch": "@@ -7736,8 +7736,6 @@ omitted_headers = java/lang/ClassLoader.h java/lang/Thread.h \\\n \tjava/lang/reflect/Field.h java/lang/reflect/Method.h \\\n \tjava/lang/reflect/Proxy.h gnu/gcj/runtime/ExtensionClassLoader.h\n \n-generic_header_files = $(ordinary_header_files) $(xlib_nat_headers)\n-MYGCJH = gjavah\n inner_nat_headers = java/io/ObjectOutputStream$$PutField.h \\\n \tjava/io/ObjectInputStream$$GetField.h \\\n \tjava/nio/DirectByteBufferImpl$$ReadWrite.h \\\n@@ -7750,6 +7748,10 @@ inner_nat_headers = java/io/ObjectOutputStream$$PutField.h \\\n \tgnu/java/nio/PipeImpl$$SinkChannelImpl.h \\\n \tgnu/java/nio/PipeImpl$$SourceChannelImpl.h\n \n+generic_header_files = $(ordinary_header_files) $(inner_nat_headers) \\\n+\t$(xlib_nat_headers)\n+\n+MYGCJH = gjavah\n nat_headers = $(ordinary_header_files) $(inner_nat_headers)\n nat_headers_install = $(ordinary_header_files)\n xlib_nat_headers = $(gnu_awt_xlib_header_files) $(gnu_gcj_xlib_header_files)"}, {"sha": "eafdc1bb5d4a23e7e7c3694e25e25adccda01867", "filename": "libjava/testsuite/Makefile.am", "status": "modified", "additions": 63, "deletions": 0, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4da97d78e4f63c4e1e2f7d0bbc6399acb819168/libjava%2Ftestsuite%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4da97d78e4f63c4e1e2f7d0bbc6399acb819168/libjava%2Ftestsuite%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2FMakefile.am?ref=d4da97d78e4f63c4e1e2f7d0bbc6399acb819168", "patch": "@@ -19,3 +19,66 @@ RUNTEST = \"`if [ -f $(top_srcdir)/../dejagnu/runtest ] ; then \\\n \n ## Tell dejagnu whether the interpreter is enabled.\n AM_RUNTESTFLAGS = INTERPRETER=$(INTERPRETER)\n+\n+MYGCJH = gjavah\n+\n+.PHONY: compile-tests\n+\n+check-am: compile-tests\n+\n+compile-tests:\n+if JAVA_MAINTAINER_MODE\n+\tfor test in `cd $(srcdir) > /dev/null; \\\n+\t\t     find libjava.cni libjava.jni libjava.jvmti libjava.lang \\\n+\t\t\t  libjava.loader libjava.verify -name \\*.java`; do \\\n+\t  testjar=$(srcdir)/`echo $$test | sed -e 's/\\.java$$/\\.jar/'`; \\\n+\t  testdep=; \\\n+\t  genheader=; \\\n+\t  case \"$$test\" in \\\n+\t    libjava.loader/dummy.java) \\\n+\t      testjar=$(srcdir)/libjava.loader/dummy.class;; \\\n+\t    libjava.loader/MyLoader.java) \\\n+\t      continue;; \\\n+\t    libjava.loader/*.java) \\\n+\t      testdep=\"libjava.loader/MyLoader.java\";; \\\n+\t    libjava.jni/register2.java) \\\n+\t      ;; \\\n+\t    libjava.jni/*.java) \\\n+\t      genheader=-jni;; \\\n+\t    libjava.jvmti/*.java|libjava.cni/*.java) \\\n+\t      genheader=-cni;; \\\n+\t  esac; \\\n+\t  if test -f $$testjar; then \\\n+\t    if ! test $(srcdir)/$$test -nt $$testjar; then \\\n+\t      test -z \"$$testdep\" && continue; \\\n+\t      test $(srcdir)/$$testdep -nt $$testjar || continue; \\\n+\t    fi; \\\n+\t  fi; \\\n+\t  echo Compiling $$test; \\\n+\t  testtmpdir=`echo $$test | sed -e 's,/,_,g'`T; \\\n+\t  rm -rf $$testtmpdir; $(mkdir_p) $$testtmpdir; \\\n+\t  if test -n \"$$testdep\"; then \\\n+\t    $(GCJ) -C -g -w --encoding=UTF-8 -bootclasspath \\\n+\t      $(top_builddir)/libgcj-$(gcc_version).jar::$testtmpdir \\\n+\t      -d $$testtmpdir $(srcdir)/$$testdep || exit; \\\n+\t  fi; \\\n+\t  $(GCJ) -C -g -w --encoding=UTF-8 -bootclasspath \\\n+\t    $(top_builddir)/libgcj-$(gcc_version).jar:$$testtmpdir \\\n+\t    -d $$testtmpdir $(srcdir)/$$test || exit; \\\n+\t  case \"$$test\" in \\\n+\t    libjava.loader/dummy.java) \\\n+\t      cp $$testtmpdir/dummy.class $$testjar;; \\\n+\t    *) \\\n+\t      $(JAR) cf $$testjar \\\n+\t\t`ls $$testtmpdir/*.class \\\n+\t\t | sed -e 's,^,-C ,;s,/\\([^/]*\\.class\\)$$, \\1,'` || exit ;; \\\n+\t  esac; \\\n+\t  if test -n \"$$genheader\"; then \\\n+\t    $(MYGCJH) $$genheader $$testtmpdir/*.class \\\n+\t      -bootclasspath $(top_builddir)/libgcj-$(gcc_version).jar \\\n+\t      -d $$testtmpdir/ || exit; \\\n+\t    mv $$testtmpdir/*.h $(srcdir)/`dirname $$test`/ 2>/dev/null; \\\n+\t  fi; \\\n+\t  rm -rf $$testtmpdir; \\\n+\tdone\n+endif"}, {"sha": "a2b5311e4584f28e5fae2bdd54324be02bb80046", "filename": "libjava/testsuite/Makefile.in", "status": "modified", "additions": 60, "deletions": 0, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4da97d78e4f63c4e1e2f7d0bbc6399acb819168/libjava%2Ftestsuite%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4da97d78e4f63c4e1e2f7d0bbc6399acb819168/libjava%2Ftestsuite%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2FMakefile.in?ref=d4da97d78e4f63c4e1e2f7d0bbc6399acb819168", "patch": "@@ -322,6 +322,7 @@ RUNTEST = \"`if [ -f $(top_srcdir)/../dejagnu/runtest ] ; then \\\n \t    else echo runtest; fi` $(AM_RUNTESTFLAGS)\"\n \n AM_RUNTESTFLAGS = INTERPRETER=$(INTERPRETER)\n+MYGCJH = gjavah\n all: all-am\n \n .SUFFIXES:\n@@ -520,6 +521,65 @@ uninstall-am: uninstall-info-am\n \tmostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \\\n \tuninstall uninstall-am uninstall-info-am\n \n+\n+.PHONY: compile-tests\n+\n+check-am: compile-tests\n+\n+compile-tests:\n+@JAVA_MAINTAINER_MODE_TRUE@\tfor test in `cd $(srcdir) > /dev/null; \\\n+@JAVA_MAINTAINER_MODE_TRUE@\t\t     find libjava.cni libjava.jni libjava.jvmti libjava.lang \\\n+@JAVA_MAINTAINER_MODE_TRUE@\t\t\t  libjava.loader libjava.verify -name \\*.java`; do \\\n+@JAVA_MAINTAINER_MODE_TRUE@\t  testjar=$(srcdir)/`echo $$test | sed -e 's/\\.java$$/\\.jar/'`; \\\n+@JAVA_MAINTAINER_MODE_TRUE@\t  testdep=; \\\n+@JAVA_MAINTAINER_MODE_TRUE@\t  genheader=; \\\n+@JAVA_MAINTAINER_MODE_TRUE@\t  case \"$$test\" in \\\n+@JAVA_MAINTAINER_MODE_TRUE@\t    libjava.loader/dummy.java) \\\n+@JAVA_MAINTAINER_MODE_TRUE@\t      testjar=$(srcdir)/libjava.loader/dummy.class;; \\\n+@JAVA_MAINTAINER_MODE_TRUE@\t    libjava.loader/MyLoader.java) \\\n+@JAVA_MAINTAINER_MODE_TRUE@\t      continue;; \\\n+@JAVA_MAINTAINER_MODE_TRUE@\t    libjava.loader/*.java) \\\n+@JAVA_MAINTAINER_MODE_TRUE@\t      testdep=\"libjava.loader/MyLoader.java\";; \\\n+@JAVA_MAINTAINER_MODE_TRUE@\t    libjava.jni/register2.java) \\\n+@JAVA_MAINTAINER_MODE_TRUE@\t      ;; \\\n+@JAVA_MAINTAINER_MODE_TRUE@\t    libjava.jni/*.java) \\\n+@JAVA_MAINTAINER_MODE_TRUE@\t      genheader=-jni;; \\\n+@JAVA_MAINTAINER_MODE_TRUE@\t    libjava.jvmti/*.java|libjava.cni/*.java) \\\n+@JAVA_MAINTAINER_MODE_TRUE@\t      genheader=-cni;; \\\n+@JAVA_MAINTAINER_MODE_TRUE@\t  esac; \\\n+@JAVA_MAINTAINER_MODE_TRUE@\t  if test -f $$testjar; then \\\n+@JAVA_MAINTAINER_MODE_TRUE@\t    if ! test $(srcdir)/$$test -nt $$testjar; then \\\n+@JAVA_MAINTAINER_MODE_TRUE@\t      test -z \"$$testdep\" && continue; \\\n+@JAVA_MAINTAINER_MODE_TRUE@\t      test $(srcdir)/$$testdep -nt $$testjar || continue; \\\n+@JAVA_MAINTAINER_MODE_TRUE@\t    fi; \\\n+@JAVA_MAINTAINER_MODE_TRUE@\t  fi; \\\n+@JAVA_MAINTAINER_MODE_TRUE@\t  echo Compiling $$test; \\\n+@JAVA_MAINTAINER_MODE_TRUE@\t  testtmpdir=`echo $$test | sed -e 's,/,_,g'`T; \\\n+@JAVA_MAINTAINER_MODE_TRUE@\t  rm -rf $$testtmpdir; $(mkdir_p) $$testtmpdir; \\\n+@JAVA_MAINTAINER_MODE_TRUE@\t  if test -n \"$$testdep\"; then \\\n+@JAVA_MAINTAINER_MODE_TRUE@\t    $(GCJ) -C -g -w --encoding=UTF-8 -bootclasspath \\\n+@JAVA_MAINTAINER_MODE_TRUE@\t      $(top_builddir)/libgcj-$(gcc_version).jar::$testtmpdir \\\n+@JAVA_MAINTAINER_MODE_TRUE@\t      -d $$testtmpdir $(srcdir)/$$testdep || exit; \\\n+@JAVA_MAINTAINER_MODE_TRUE@\t  fi; \\\n+@JAVA_MAINTAINER_MODE_TRUE@\t  $(GCJ) -C -g -w --encoding=UTF-8 -bootclasspath \\\n+@JAVA_MAINTAINER_MODE_TRUE@\t    $(top_builddir)/libgcj-$(gcc_version).jar:$$testtmpdir \\\n+@JAVA_MAINTAINER_MODE_TRUE@\t    -d $$testtmpdir $(srcdir)/$$test || exit; \\\n+@JAVA_MAINTAINER_MODE_TRUE@\t  case \"$$test\" in \\\n+@JAVA_MAINTAINER_MODE_TRUE@\t    libjava.loader/dummy.java) \\\n+@JAVA_MAINTAINER_MODE_TRUE@\t      cp $$testtmpdir/dummy.class $$testjar;; \\\n+@JAVA_MAINTAINER_MODE_TRUE@\t    *) \\\n+@JAVA_MAINTAINER_MODE_TRUE@\t      $(JAR) cf $$testjar \\\n+@JAVA_MAINTAINER_MODE_TRUE@\t\t`ls $$testtmpdir/*.class \\\n+@JAVA_MAINTAINER_MODE_TRUE@\t\t | sed -e 's,^,-C ,;s,/\\([^/]*\\.class\\)$$, \\1,'` || exit ;; \\\n+@JAVA_MAINTAINER_MODE_TRUE@\t  esac; \\\n+@JAVA_MAINTAINER_MODE_TRUE@\t  if test -n \"$$genheader\"; then \\\n+@JAVA_MAINTAINER_MODE_TRUE@\t    $(MYGCJH) $$genheader $$testtmpdir/*.class \\\n+@JAVA_MAINTAINER_MODE_TRUE@\t      -bootclasspath $(top_builddir)/libgcj-$(gcc_version).jar \\\n+@JAVA_MAINTAINER_MODE_TRUE@\t      -d $$testtmpdir/ || exit; \\\n+@JAVA_MAINTAINER_MODE_TRUE@\t    mv $$testtmpdir/*.h $(srcdir)/`dirname $$test`/ 2>/dev/null; \\\n+@JAVA_MAINTAINER_MODE_TRUE@\t  fi; \\\n+@JAVA_MAINTAINER_MODE_TRUE@\t  rm -rf $$testtmpdir; \\\n+@JAVA_MAINTAINER_MODE_TRUE@\tdone\n # Tell versions [3.59,3.63) of GNU make to not export all variables.\n # Otherwise a system limit (for SysV at least) may be exceeded.\n .NOEXPORT:"}]}