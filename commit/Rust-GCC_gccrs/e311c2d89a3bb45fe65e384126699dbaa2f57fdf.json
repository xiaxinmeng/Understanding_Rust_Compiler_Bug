{"sha": "e311c2d89a3bb45fe65e384126699dbaa2f57fdf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTMxMWMyZDg5YTNiYjQ1ZmU2NWUzODQxMjY2OTlkYmFhMmY1N2ZkZg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2014-11-27T09:57:13Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2014-11-27T09:57:13Z"}, "message": "re PR middle-end/64083 (ICE: in fix_loop_structure, at loop-init.c:252 compiling Linux Kernel)\n\n2014-11-27  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/64083\n\t* tree-ssa-threadupdate.c (thread_through_all_blocks): Do not\n\tforcibly mark loop for removal the wrong way.\n\n\t* gcc.dg/torture/pr64083.c: New testcase.\n\nFrom-SVN: r218115", "tree": {"sha": "b2ae7dcaa446b230288162b1377c9002c03d3788", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b2ae7dcaa446b230288162b1377c9002c03d3788"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e311c2d89a3bb45fe65e384126699dbaa2f57fdf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e311c2d89a3bb45fe65e384126699dbaa2f57fdf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e311c2d89a3bb45fe65e384126699dbaa2f57fdf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e311c2d89a3bb45fe65e384126699dbaa2f57fdf/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "598f8eca02c516a19abc957c3d4510e7c1c78214", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/598f8eca02c516a19abc957c3d4510e7c1c78214", "html_url": "https://github.com/Rust-GCC/gccrs/commit/598f8eca02c516a19abc957c3d4510e7c1c78214"}], "stats": {"total": 38, "additions": 29, "deletions": 9}, "files": [{"sha": "71828c2299de6af33d7ddec2f9583821eda925fa", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e311c2d89a3bb45fe65e384126699dbaa2f57fdf/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e311c2d89a3bb45fe65e384126699dbaa2f57fdf/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e311c2d89a3bb45fe65e384126699dbaa2f57fdf", "patch": "@@ -1,3 +1,9 @@\n+2014-11-27  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/64083\n+\t* tree-ssa-threadupdate.c (thread_through_all_blocks): Do not\n+\tforcibly mark loop for removal the wrong way.\n+\n 2014-11-27  Richard Biener  <rguenther@suse.de>\n \n \tPR middle-end/63704"}, {"sha": "5fc10c2b7940a356c3c1848616c3256ce53ebe54", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e311c2d89a3bb45fe65e384126699dbaa2f57fdf/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e311c2d89a3bb45fe65e384126699dbaa2f57fdf/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e311c2d89a3bb45fe65e384126699dbaa2f57fdf", "patch": "@@ -1,3 +1,8 @@\n+2014-11-27  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/64083\n+\t* gcc.dg/torture/pr64083.c: New testcase.\n+\n 2014-11-27  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/61634"}, {"sha": "3c3e5a6087a52a6db8abba28ae37070508dfe7d9", "filename": "gcc/testsuite/gcc.dg/torture/pr64083.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e311c2d89a3bb45fe65e384126699dbaa2f57fdf/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr64083.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e311c2d89a3bb45fe65e384126699dbaa2f57fdf/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr64083.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr64083.c?ref=e311c2d89a3bb45fe65e384126699dbaa2f57fdf", "patch": "@@ -0,0 +1,17 @@\n+/* { dg-do compile } */\n+\n+int a, b;\n+void\n+fn1 ()\n+{\n+  int c = 0;\n+  while (b)\n+    {\n+      switch (c)\n+    case 1:\n+\tfn1 ();\n+\tif (a)\n+\t  c = 1;\n+\tb = 0;\n+    }\n+}"}, {"sha": "a8243aea68ada6c91303d7cbf3f8aa674b8e00d4", "filename": "gcc/tree-ssa-threadupdate.c", "status": "modified", "additions": 1, "deletions": 9, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e311c2d89a3bb45fe65e384126699dbaa2f57fdf/gcc%2Ftree-ssa-threadupdate.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e311c2d89a3bb45fe65e384126699dbaa2f57fdf/gcc%2Ftree-ssa-threadupdate.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-threadupdate.c?ref=e311c2d89a3bb45fe65e384126699dbaa2f57fdf", "patch": "@@ -2428,16 +2428,8 @@ thread_through_all_blocks (bool may_peel_loop_headers)\n \t\t/* Our path is still valid, thread it.  */\n \t        if (e->aux)\n \t\t  {\n-\t\t    struct loop *loop = (*path)[0]->e->dest->loop_father;\n-\n \t\t    if (thread_block ((*path)[0]->e->dest, false))\n-\t\t      {\n-\t\t\t/* This jump thread likely totally scrambled this loop.\n-\t\t\t   So arrange for it to be fixed up.  */\n-\t\t\tloop->header = NULL;\n-\t\t\tloop->latch = NULL;\n-\t\t\te->aux = NULL;\n-\t\t      }\n+\t\t      e->aux = NULL;\n \t\t    else\n \t\t      {\n \t\t        delete_jump_thread_path (path);"}]}