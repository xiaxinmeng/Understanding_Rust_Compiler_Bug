{"sha": "fd693ba3cc71f4aec0109a36ac67d9bda485e298", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmQ2OTNiYTNjYzcxZjRhZWMwMTA5YTM2YWM2N2Q5YmRhNDg1ZTI5OA==", "commit": {"author": {"name": "Keith Seitz", "email": "keiths@redhat.com", "date": "2005-06-03T22:21:52Z"}, "committer": {"name": "Keith Seitz", "email": "kseitz@gcc.gnu.org", "date": "2005-06-03T22:21:52Z"}, "message": "* gnu/classpath/jdwp/transport/TransportFactory.java: New file.\n\nFrom-SVN: r100556", "tree": {"sha": "d6d15815df76a64f25c599ccf905caf99a8e07ee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d6d15815df76a64f25c599ccf905caf99a8e07ee"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fd693ba3cc71f4aec0109a36ac67d9bda485e298", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd693ba3cc71f4aec0109a36ac67d9bda485e298", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fd693ba3cc71f4aec0109a36ac67d9bda485e298", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd693ba3cc71f4aec0109a36ac67d9bda485e298/comments", "author": {"login": "shtiek", "id": 107581324, "node_id": "U_kgDOBmmPjA", "avatar_url": "https://avatars.githubusercontent.com/u/107581324?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shtiek", "html_url": "https://github.com/shtiek", "followers_url": "https://api.github.com/users/shtiek/followers", "following_url": "https://api.github.com/users/shtiek/following{/other_user}", "gists_url": "https://api.github.com/users/shtiek/gists{/gist_id}", "starred_url": "https://api.github.com/users/shtiek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shtiek/subscriptions", "organizations_url": "https://api.github.com/users/shtiek/orgs", "repos_url": "https://api.github.com/users/shtiek/repos", "events_url": "https://api.github.com/users/shtiek/events{/privacy}", "received_events_url": "https://api.github.com/users/shtiek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7391b66c6a042a6b510baed4ceb65c26c73cc810", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7391b66c6a042a6b510baed4ceb65c26c73cc810", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7391b66c6a042a6b510baed4ceb65c26c73cc810"}], "stats": {"total": 116, "additions": 116, "deletions": 0}, "files": [{"sha": "9c3960ca3ede032de98b48f8f05432a17f0a3747", "filename": "libjava/ChangeLog", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd693ba3cc71f4aec0109a36ac67d9bda485e298/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd693ba3cc71f4aec0109a36ac67d9bda485e298/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=fd693ba3cc71f4aec0109a36ac67d9bda485e298", "patch": "@@ -2,6 +2,7 @@\n \n \t* gnu/classpath/jdwp/transport/ITransport.java: New file.\n \t* gnu/classpath/jdwp/transport/SocketTransport.java: New file.\n+\t* gnu/classpath/jdwp/transport/TransportFactory.java: New file.\n \n 2005-06-03  Andreas Tobler  <a.tobler@schweiz.ch>\n "}, {"sha": "7f617863e900a9cded335feb0bd4bc73b65f9bcf", "filename": "libjava/gnu/classpath/jdwp/transport/TransportFactory.java", "status": "added", "additions": 115, "deletions": 0, "changes": 115, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd693ba3cc71f4aec0109a36ac67d9bda485e298/libjava%2Fgnu%2Fclasspath%2Fjdwp%2Ftransport%2FTransportFactory.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd693ba3cc71f4aec0109a36ac67d9bda485e298/libjava%2Fgnu%2Fclasspath%2Fjdwp%2Ftransport%2FTransportFactory.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fclasspath%2Fjdwp%2Ftransport%2FTransportFactory.java?ref=fd693ba3cc71f4aec0109a36ac67d9bda485e298", "patch": "@@ -0,0 +1,115 @@\n+/* TransportFactory.java -- Factory for transports\n+   Copyright (C) 2005 Free Software Foundation\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package gnu.classpath.jdwp.transport;\n+\n+import java.util.HashMap;\n+\n+/**\n+ * A factory class that constructs transports for use by\n+ * the JDWP back-end.\n+ *\n+ * @author Keith Seitz  <keiths@redhat.com>\n+ */\n+public class TransportFactory\n+{\n+  // Keyword in configspec that specifies transport method\n+  private static final String _TRANSPORT_PROPERTY = \"transport\";\n+\n+  // A single transport method mapping\n+  private static class TransportMethod\n+  {\n+    String name;\n+    Class clazz;\n+    public TransportMethod (String name, Class clazz)\n+    {\n+      this.name = name;\n+      this.clazz = clazz;\n+    }\n+  }\n+\n+  // List of all supported transport methods\n+  private static TransportMethod[] _transportMethods = new TransportMethod[]\n+  {\n+    new TransportMethod (SocketTransport.NAME, SocketTransport.class)\n+    //new TransportMethod (ShmemTransport.NAME, ShmemTransport.class)\n+  };\n+\n+  /**\n+   * Get a transport configured as specified in the properties\n+   *\n+   * @param   properties  a <code>HashMap</code> specifying the JDWP\n+   *                      configuration properties\n+   * @returns             the created and configured transport\n+   * @throws  TransportException for invalid configurations\n+   */\n+  public static ITransport newInstance (HashMap properties)\n+    throws TransportException\n+  {\n+    String name = null;\n+    if (properties != null)\n+      name = (String) properties.get (_TRANSPORT_PROPERTY);\n+    if (name == null)\n+      throw new TransportException (\"no transport specified\");\n+\n+    for (int i = 0; i < _transportMethods.length; ++i)\n+      {\n+\tif (_transportMethods[i].name.equals (name))\n+\t  {\n+\t    try\n+\t      {\n+\t\tITransport t;\n+\t\tt = (ITransport) _transportMethods[i].clazz.newInstance ();\n+\t\tt.configure (properties);\n+\t\treturn t;\n+\t      }\n+\t    catch (TransportException te)\n+\t      {\n+\t\tthrow te;\n+\t      }\n+\t    catch (Exception e)\n+\t      {\n+\t\tthrow new TransportException (e);\n+\t      }\n+\t  }\n+      }\n+\n+    throw new TransportException (\"transport \\\"\" + name + \"\\\" not found\");\n+  }\n+}"}]}