{"sha": "42a06e46ab05b7cf751579a50ee302a8ab6b9cae", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDJhMDZlNDZhYjA1YjdjZjc1MTU3OWE1MGVlMzAyYThhYjZiOWNhZQ==", "commit": {"author": {"name": "Alexandre Oliva", "email": "aoliva@redhat.com", "date": "2009-11-21T05:06:24Z"}, "committer": {"name": "Alexandre Oliva", "email": "aoliva@gcc.gnu.org", "date": "2009-11-21T05:06:24Z"}, "message": "tree-ssa.c (find_released_ssa_name): Handle NULL wi.\n\n* tree-ssa.c (find_released_ssa_name): Handle NULL wi.\n(insert_debug_temp_for_var_def): Handle degenerate PHI nodes.\n(insert_debug_temps_for_defs): Handle PHI nodes.\n* tree-ssa-dom.c (degenerate_phi_result): Don't crash on released\nSSA names.\n\nFrom-SVN: r154402", "tree": {"sha": "161f18860227e5ac9286e4688c55fcb199c6a522", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/161f18860227e5ac9286e4688c55fcb199c6a522"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/42a06e46ab05b7cf751579a50ee302a8ab6b9cae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42a06e46ab05b7cf751579a50ee302a8ab6b9cae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/42a06e46ab05b7cf751579a50ee302a8ab6b9cae", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42a06e46ab05b7cf751579a50ee302a8ab6b9cae/comments", "author": null, "committer": null, "parents": [{"sha": "b70fdfe4beebbc1f82c14326ec3b6a85be0a36b3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b70fdfe4beebbc1f82c14326ec3b6a85be0a36b3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b70fdfe4beebbc1f82c14326ec3b6a85be0a36b3"}], "stats": {"total": 30, "additions": 26, "deletions": 4}, "files": [{"sha": "da2c7a66ddf2c572119b4754e2217c15ec40feac", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42a06e46ab05b7cf751579a50ee302a8ab6b9cae/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42a06e46ab05b7cf751579a50ee302a8ab6b9cae/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=42a06e46ab05b7cf751579a50ee302a8ab6b9cae", "patch": "@@ -1,3 +1,11 @@\n+2009-11-21  Alexandre Oliva  <aoliva@redhat.com>\n+\n+\t* tree-ssa.c (find_released_ssa_name): Handle NULL wi.\n+\t(insert_debug_temp_for_var_def): Handle degenerate PHI nodes.\n+\t(insert_debug_temps_for_defs): Handle PHI nodes.\n+\t* tree-ssa-dom.c (degenerate_phi_result): Don't crash on released\n+\tSSA names.\n+\n 2009-11-21  Alexandre Oliva  <aoliva@redhat.com>\n \n \t* tree-ssa-pre.c (remove_dead_inserted_code): Don't release_defs"}, {"sha": "db21218629e329953cbeaf4834629b0016ec67b6", "filename": "gcc/tree-ssa-dom.c", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42a06e46ab05b7cf751579a50ee302a8ab6b9cae/gcc%2Ftree-ssa-dom.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42a06e46ab05b7cf751579a50ee302a8ab6b9cae/gcc%2Ftree-ssa-dom.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-dom.c?ref=42a06e46ab05b7cf751579a50ee302a8ab6b9cae", "patch": "@@ -2398,7 +2398,14 @@ degenerate_phi_result (gimple phi)\n \tcontinue;\n       else if (!val)\n \tval = arg;\n-      else if (!operand_equal_p (arg, val, 0))\n+      else if (arg == val)\n+\tcontinue;\n+      /* We bring in some of operand_equal_p not only to speed things\n+\t up, but also to avoid crashing when dereferencing the type of\n+\t a released SSA name.  */\n+      else if (!arg || TREE_CODE (val) != TREE_CODE (arg)\n+\t       || TREE_CODE (val) == SSA_NAME\n+\t       || !operand_equal_p (arg, val, 0))\n \tbreak;\n     }\n   return (i == gimple_phi_num_args (phi) ? val : NULL);"}, {"sha": "4d0ccb066b1995fb755083c96089f5de04c4e9b5", "filename": "gcc/tree-ssa.c", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42a06e46ab05b7cf751579a50ee302a8ab6b9cae/gcc%2Ftree-ssa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42a06e46ab05b7cf751579a50ee302a8ab6b9cae/gcc%2Ftree-ssa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa.c?ref=42a06e46ab05b7cf751579a50ee302a8ab6b9cae", "patch": "@@ -279,7 +279,7 @@ find_released_ssa_name (tree *tp, int *walk_subtrees, void *data_)\n {\n   struct walk_stmt_info *wi = (struct walk_stmt_info *) data_;\n \n-  if (wi->is_lhs)\n+  if (wi && wi->is_lhs)\n     return NULL_TREE;\n \n   if (TREE_CODE (*tp) == SSA_NAME)\n@@ -346,7 +346,13 @@ insert_debug_temp_for_var_def (gimple_stmt_iterator *gsi, tree var)\n   /* If we didn't get an insertion point, and the stmt has already\n      been removed, we won't be able to insert the debug bind stmt, so\n      we'll have to drop debug information.  */\n-  if (is_gimple_assign (def_stmt))\n+  if (gimple_code (def_stmt) == GIMPLE_PHI)\n+    {\n+      value = degenerate_phi_result (def_stmt);\n+      if (value && walk_tree (&value, find_released_ssa_name, NULL, NULL))\n+\tvalue = NULL;\n+    }\n+  else if (is_gimple_assign (def_stmt))\n     {\n       bool no_value = false;\n \n@@ -408,6 +414,7 @@ insert_debug_temp_for_var_def (gimple_stmt_iterator *gsi, tree var)\n \t at the expense of duplication of expressions.  */\n \n       if (CONSTANT_CLASS_P (value)\n+\t  || gimple_code (def_stmt) == GIMPLE_PHI\n \t  || (usecount == 1\n \t      && (!gimple_assign_single_p (def_stmt)\n \t\t  || is_gimple_min_invariant (value)))\n@@ -478,7 +485,7 @@ insert_debug_temps_for_defs (gimple_stmt_iterator *gsi)\n \n   stmt = gsi_stmt (*gsi);\n \n-  FOR_EACH_SSA_DEF_OPERAND (def_p, stmt, op_iter, SSA_OP_DEF)\n+  FOR_EACH_PHI_OR_STMT_DEF (def_p, stmt, op_iter, SSA_OP_DEF)\n     {\n       tree var = DEF_FROM_PTR (def_p);\n "}]}