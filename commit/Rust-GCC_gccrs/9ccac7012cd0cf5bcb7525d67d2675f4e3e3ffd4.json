{"sha": "9ccac7012cd0cf5bcb7525d67d2675f4e3e3ffd4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWNjYWM3MDEyY2QwY2Y1YmNiNzUyNWQ2N2QyNjc1ZjRlM2UzZmZkNA==", "commit": {"author": {"name": "Matthew Fortune", "email": "matthew.fortune@imgtec.com", "date": "2014-06-04T13:10:49Z"}, "committer": {"name": "Andrew Bennett", "email": "abennett@gcc.gnu.org", "date": "2014-06-04T13:10:49Z"}, "message": "regcprop.c (copyprop_hardreg_forward_1): Account for HARD_REGNO_CALL_PART_CLOBBERED.\n\n2014-06-04  Matthew Fortune  <matthew.fortune@imgtec.com>\n\ngcc/\n\t* regcprop.c (copyprop_hardreg_forward_1): Account for \n\tHARD_REGNO_CALL_PART_CLOBBERED.\n\nFrom-SVN: r211230", "tree": {"sha": "4202ec414acd12c7b0be2d71a905d901985cb660", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4202ec414acd12c7b0be2d71a905d901985cb660"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9ccac7012cd0cf5bcb7525d67d2675f4e3e3ffd4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ccac7012cd0cf5bcb7525d67d2675f4e3e3ffd4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9ccac7012cd0cf5bcb7525d67d2675f4e3e3ffd4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ccac7012cd0cf5bcb7525d67d2675f4e3e3ffd4/comments", "author": {"login": "mfortune", "id": 10220247, "node_id": "MDQ6VXNlcjEwMjIwMjQ3", "avatar_url": "https://avatars.githubusercontent.com/u/10220247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mfortune", "html_url": "https://github.com/mfortune", "followers_url": "https://api.github.com/users/mfortune/followers", "following_url": "https://api.github.com/users/mfortune/following{/other_user}", "gists_url": "https://api.github.com/users/mfortune/gists{/gist_id}", "starred_url": "https://api.github.com/users/mfortune/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mfortune/subscriptions", "organizations_url": "https://api.github.com/users/mfortune/orgs", "repos_url": "https://api.github.com/users/mfortune/repos", "events_url": "https://api.github.com/users/mfortune/events{/privacy}", "received_events_url": "https://api.github.com/users/mfortune/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "35987ae95da833242def2e32fcc24100c20ef4b5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35987ae95da833242def2e32fcc24100c20ef4b5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/35987ae95da833242def2e32fcc24100c20ef4b5"}], "stats": {"total": 12, "additions": 9, "deletions": 3}, "files": [{"sha": "e3b375a5570435cf4944fc3f5caa93a1bfedaa55", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ccac7012cd0cf5bcb7525d67d2675f4e3e3ffd4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ccac7012cd0cf5bcb7525d67d2675f4e3e3ffd4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9ccac7012cd0cf5bcb7525d67d2675f4e3e3ffd4", "patch": "@@ -1,3 +1,8 @@\n+2014-06-04  Matthew Fortune  <matthew.fortune@imgtec.com>\n+\n+\t* regcprop.c (copyprop_hardreg_forward_1): Account for \n+\tHARD_REGNO_CALL_PART_CLOBBERED.\n+\n 2014-06-04  Richard Biener  <rguenther@suse.de>\n \n \t* configure.ac: Check whether the underlying type of int64_t"}, {"sha": "25a20ec00eb14666f86fef1fa1fcb118e079405d", "filename": "gcc/regcprop.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ccac7012cd0cf5bcb7525d67d2675f4e3e3ffd4/gcc%2Fregcprop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ccac7012cd0cf5bcb7525d67d2675f4e3e3ffd4/gcc%2Fregcprop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fregcprop.c?ref=9ccac7012cd0cf5bcb7525d67d2675f4e3e3ffd4", "patch": "@@ -1012,7 +1012,6 @@ copyprop_hardreg_forward_1 (basic_block bb, struct value_data *vd)\n \t  unsigned int set_nregs = 0;\n \t  unsigned int regno;\n \t  rtx exp;\n-\t  hard_reg_set_iterator hrsi;\n \n \t  for (exp = CALL_INSN_FUNCTION_USAGE (insn); exp; exp = XEXP (exp, 1))\n \t    {\n@@ -1031,8 +1030,10 @@ copyprop_hardreg_forward_1 (basic_block bb, struct value_data *vd)\n \t\t}\n \t    }\n \n-\t  EXECUTE_IF_SET_IN_HARD_REG_SET (regs_invalidated_by_call, 0, regno, hrsi)\n-\t    if (regno < set_regno || regno >= set_regno + set_nregs)\n+\t  for (regno = 0; regno < FIRST_PSEUDO_REGISTER; regno++)\n+\t    if ((TEST_HARD_REG_BIT (regs_invalidated_by_call, regno)\n+\t\t || HARD_REGNO_CALL_PART_CLOBBERED (regno, vd->e[regno].mode))\n+\t\t&& (regno < set_regno || regno >= set_regno + set_nregs))\n \t      kill_value_regno (regno, 1, vd);\n \n \t  /* If SET was seen in CALL_INSN_FUNCTION_USAGE, and SET_SRC"}]}