{"sha": "e165214777acfe5621ad36e55b16e098d50e1596", "node_id": "C_kwDOANBUbNoAKGUxNjUyMTQ3NzdhY2ZlNTYyMWFkMzZlNTViMTZlMDk4ZDUwZTE1OTY", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2022-12-14T10:33:25Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2022-12-14T10:33:25Z"}, "message": "mklog: do not depend on recent unidiff version\n\ncontrib/ChangeLog:\n\n\t* mklog.py: Check for number of hunks and not if a modified\n\tfile is binary.", "tree": {"sha": "51c69d574ca7174e6c9a95501c0d78a591d33228", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/51c69d574ca7174e6c9a95501c0d78a591d33228"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e165214777acfe5621ad36e55b16e098d50e1596", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e165214777acfe5621ad36e55b16e098d50e1596", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e165214777acfe5621ad36e55b16e098d50e1596", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e165214777acfe5621ad36e55b16e098d50e1596/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "693638252aae9b36b5b928d7195df6d28bf409d7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/693638252aae9b36b5b928d7195df6d28bf409d7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/693638252aae9b36b5b928d7195df6d28bf409d7"}], "stats": {"total": 5, "additions": 3, "deletions": 2}, "files": [{"sha": "5dea8a05c0c26eef0ba4557e3b9f090e4bdaf30c", "filename": "contrib/mklog.py", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e165214777acfe5621ad36e55b16e098d50e1596/contrib%2Fmklog.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e165214777acfe5621ad36e55b16e098d50e1596/contrib%2Fmklog.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fmklog.py?ref=e165214777acfe5621ad36e55b16e098d50e1596", "patch": "@@ -186,8 +186,9 @@ def generate_changelog(data, no_functions=False, fill_pr_titles=False,\n             # contains commented code which a note that it\n             # has not been tested due to a certain PR or DR.\n             this_file_prs = []\n-            if not file.is_binary_file:\n-                for line in list(file)[0][0:10]:\n+            hunks = list(file)\n+            if hunks:\n+                for line in hunks[0][0:10]:\n                     m = pr_regex.search(line.value)\n                     if m:\n                         pr = m.group('pr')"}]}