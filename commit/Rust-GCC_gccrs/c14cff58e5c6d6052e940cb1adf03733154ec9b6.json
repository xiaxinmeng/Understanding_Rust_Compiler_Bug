{"sha": "c14cff58e5c6d6052e940cb1adf03733154ec9b6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzE0Y2ZmNThlNWM2ZDYwNTJlOTQwY2IxYWRmMDM3MzMxNTRlYzliNg==", "commit": {"author": {"name": "Per Bothner", "email": "bothner@gcc.gnu.org", "date": "1999-05-05T21:09:55Z"}, "committer": {"name": "Per Bothner", "email": "bothner@gcc.gnu.org", "date": "1999-05-05T21:09:55Z"}, "message": "class.c (make_field_value): DECL_INITIAL may be a string literal...\n\n\t\n\t* class.c (make_field_value):  DECL_INITIAL may be a string literal;\n\ttemporarily zero it while calling rest_of_decl_compilation.\n\t* java-tree.h (string_ptr_type_node):  Add declaration.\n\t* decl.c:  Define and initialize string_ptr_type_node.\n\t* parse.y (patch_string_cst):  Use string_ptr_type_node.\n\t* parse.h (LOOP_HAS_LABEL_P, LOOP_HAS_LABEL_SKIP_P):  Removed.\n\t* parse.y (for_statement):  Now unconditionally exit_block.\n\t(finish_labeled_statement):  No longer exit_block if for-loop.\n\t(patch_loop_statement):  Check harder if the loop is already labeled.\n\t* parse.y (patch_initialized_static_field):  Removed function.\n\t(maybe_generate_clinit):  Removed special handling for interfaces.\n\t(java_complete_expand_methods):  Do a preliminary java_complete_tree\n\ton <clinit> to determine if it can be removed.\n\t(java_complete_expand_method):  Remove special handling for <clinit>.\n\t(java_complete_lhs):  For BLOCK and EXPR_WITH_FILE_LOCATION\n\toptimize if we get back empty_stmt_node.\n\tFor MODIFY_EXPR, re-do checking of static initializers.\n\t(fold_constant_for_init):  Don't return immediate if VAR_DECL.\n\tFor VAR_DECL, pass correct context.\n\nFrom-SVN: r26789", "tree": {"sha": "ba6406c36d21ff54e5fa5724be1e62a2dc6fbf99", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ba6406c36d21ff54e5fa5724be1e62a2dc6fbf99"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c14cff58e5c6d6052e940cb1adf03733154ec9b6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c14cff58e5c6d6052e940cb1adf03733154ec9b6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c14cff58e5c6d6052e940cb1adf03733154ec9b6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c14cff58e5c6d6052e940cb1adf03733154ec9b6/comments", "author": null, "committer": null, "parents": [{"sha": "10b905f1eab24dd18a023aaa3681a3673866de10", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10b905f1eab24dd18a023aaa3681a3673866de10", "html_url": "https://github.com/Rust-GCC/gccrs/commit/10b905f1eab24dd18a023aaa3681a3673866de10"}], "stats": {"total": 27, "additions": 27, "deletions": 0}, "files": [{"sha": "e410de46e5c34dc46bb6d6eb648a0cae6252e494", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c14cff58e5c6d6052e940cb1adf03733154ec9b6/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c14cff58e5c6d6052e940cb1adf03733154ec9b6/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=c14cff58e5c6d6052e940cb1adf03733154ec9b6", "patch": "@@ -1,3 +1,30 @@\n+1999-05-05  Per Bothner  <bothner@cygnus.com>\n+\n+\t* class.c (make_field_value):  DECL_INITIAL may be a string literal;\n+\ttemporarily zero it while calling rest_of_decl_compilation.\n+\n+\t* java-tree.h (string_ptr_type_node):  Add declaration.\n+\t* decl.c:  Define and initialize string_ptr_type_node.\n+\t* parse.y (patch_string_cst):  Use string_ptr_type_node.\n+\n+\t* parse.h (LOOP_HAS_LABEL_P, LOOP_HAS_LABEL_SKIP_P):  Removed.\n+\t* parse.y (for_statement):  Now unconditionally exit_block.\n+\t(finish_labeled_statement):  No longer exit_block if for-loop.\n+\t(patch_loop_statement):  Check harder if the loop is already labeled.\n+\n+\t* parse.y (patch_initialized_static_field):  Removed function.\n+\t(maybe_generate_clinit):  Removed special handling for interfaces.\n+\t(java_complete_expand_methods):  Do a preliminary java_complete_tree\n+\ton <clinit> to determine if it can be removed.\n+\t(java_complete_expand_method):  Remove special handling for <clinit>.\n+\t(java_complete_lhs):  For BLOCK and EXPR_WITH_FILE_LOCATION\n+\toptimize if we get back empty_stmt_node.\n+\tFor MODIFY_EXPR, re-do checking of static initializers.\n+\t(fold_constant_for_init):  Don't return immediate if VAR_DECL.\n+\tFor VAR_DECL, pass correct context.\n+\n+\t* verify.c (verify_jvm_instructions):  Better error messages.\n+\n 1999-05-03  Tom Tromey  <tromey@cygnus.com>\n \n \t* parse-scan.y (interface_declaration): Call"}]}