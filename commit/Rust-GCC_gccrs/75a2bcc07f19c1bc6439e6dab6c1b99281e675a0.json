{"sha": "75a2bcc07f19c1bc6439e6dab6c1b99281e675a0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzVhMmJjYzA3ZjE5YzFiYzY0MzllNmRhYjZjMWI5OTI4MWU2NzVhMA==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2013-11-15T12:34:28Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2013-11-15T12:34:28Z"}, "message": "acinclude.m4 (GCC_GLIBC_VERSION_GTE_IFELSE): New configure macro.\n\n\t* acinclude.m4 (GCC_GLIBC_VERSION_GTE_IFELSE): New configure\n\tmacro.\n\t* configure.ac: Determine target_header_dir earlier.\n\t(--with-glibc-version): New configure option.\n\tUse GCC_GLIBC_VERSION_GTE_IFELSE in enable_gnu_unique_object,\n\tgcc_cv_libc_provides_ssp and gcc_cv_target_ldbl128 tests.\n\t* configure: Regenerate.\n\t* doc/install.texi (--enable-gnu-unique-object): Don't refer to\n\tnative toolchains for default.\n\t(--with-glibc-version): Document.\n\nFrom-SVN: r204841", "tree": {"sha": "4fca6cbfcd130cd1d5edfd0854230d19945c43c1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4fca6cbfcd130cd1d5edfd0854230d19945c43c1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/75a2bcc07f19c1bc6439e6dab6c1b99281e675a0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75a2bcc07f19c1bc6439e6dab6c1b99281e675a0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/75a2bcc07f19c1bc6439e6dab6c1b99281e675a0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75a2bcc07f19c1bc6439e6dab6c1b99281e675a0/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9f13879ee894334867240f087b699232395bc36c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f13879ee894334867240f087b699232395bc36c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9f13879ee894334867240f087b699232395bc36c"}], "stats": {"total": 266, "additions": 170, "deletions": 96}, "files": [{"sha": "2d0e9c763ccaf4cea84be1b0afd5c38d9df71217", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75a2bcc07f19c1bc6439e6dab6c1b99281e675a0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75a2bcc07f19c1bc6439e6dab6c1b99281e675a0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=75a2bcc07f19c1bc6439e6dab6c1b99281e675a0", "patch": "@@ -1,3 +1,16 @@\n+2013-11-15  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* acinclude.m4 (GCC_GLIBC_VERSION_GTE_IFELSE): New configure\n+\tmacro.\n+\t* configure.ac: Determine target_header_dir earlier.\n+\t(--with-glibc-version): New configure option.\n+\tUse GCC_GLIBC_VERSION_GTE_IFELSE in enable_gnu_unique_object,\n+\tgcc_cv_libc_provides_ssp and gcc_cv_target_ldbl128 tests.\n+\t* configure: Regenerate.\n+\t* doc/install.texi (--enable-gnu-unique-object): Don't refer to\n+\tnative toolchains for default.\n+\t(--with-glibc-version): Document.\n+\n 2013-11-15  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* fold-const.c (fold_binary_loc) <comparisons>: Reuse local variable."}, {"sha": "34de2075bf2c69e06c24845c22b1eb19fb61a7ab", "filename": "gcc/acinclude.m4", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75a2bcc07f19c1bc6439e6dab6c1b99281e675a0/gcc%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75a2bcc07f19c1bc6439e6dab6c1b99281e675a0/gcc%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Facinclude.m4?ref=75a2bcc07f19c1bc6439e6dab6c1b99281e675a0", "patch": "@@ -561,3 +561,12 @@ dnl Make sure that build_exeext is looked for\n AC_DEFUN([gcc_AC_BUILD_EXEEXT], [\n ac_executable_extensions=\"$build_exeext\"])\n \n+dnl GCC_GLIBC_VERSION_GTE_IFELSE(MAJOR, MINOR, IF-TRUE, IF-FALSE)\n+dnl -------------------------------------------------------------\n+dnl If the target glibc version ($glibc_version_major.$glibc_version_minor)\n+dnl is at least MAJOR.MINOR, call IF-TRUE, otherwise call IF-FALSE.\n+AC_DEFUN([GCC_GLIBC_VERSION_GTE_IFELSE],\n+[\n+AS_IF([test $glibc_version_major -gt $1 \\\n+  || ( test $glibc_version_major -eq $1 && test $glibc_version_minor -ge $2 )],\n+[$3], [$4])])"}, {"sha": "c8fef616d10ad8efaaca957496a05a4c32328f87", "filename": "gcc/configure", "status": "modified", "additions": 81, "deletions": 48, "changes": 129, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75a2bcc07f19c1bc6439e6dab6c1b99281e675a0/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75a2bcc07f19c1bc6439e6dab6c1b99281e675a0/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=75a2bcc07f19c1bc6439e6dab6c1b99281e675a0", "patch": "@@ -915,6 +915,7 @@ with_plugin_ld\n enable_gnu_indirect_function\n enable_initfini_array\n enable_comdat\n+with_glibc_version\n enable_gnu_unique_object\n enable_linker_build_id\n with_long_double_128\n@@ -1680,6 +1681,8 @@ Optional Packages:\n                           both]\n   --with-gnu-ld           assume the C compiler uses GNU ld [default=no]\n   --with-plugin-ld=[ARG]  specify the plugin linker\n+  --with-glibc-version=M.N\n+                          assume GCC used with glibc version M.N or later\n   --with-long-double-128  use 128-bit long double by default\n   --with-gc={page,zone}   this option is not supported anymore. It used to\n                           choose the garbage collection mechanism to use with\n@@ -17913,7 +17916,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 17916 \"configure\"\n+#line 17919 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -18019,7 +18022,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 18022 \"configure\"\n+#line 18025 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -26386,6 +26389,60 @@ $as_echo \"#define HAVE_GAS_LCOMM_WITH_ALIGNMENT 1\" >>confdefs.h\n \n fi\n \n+if test x$with_sysroot = x && test x$host = x$target \\\n+   && test \"$prefix\" != \"/usr\" && test \"x$prefix\" != \"x$local_prefix\" \\\n+   && test \"$prefix\" != \"NONE\"; then\n+\n+cat >>confdefs.h <<_ACEOF\n+#define PREFIX_INCLUDE_DIR \"$prefix/include\"\n+_ACEOF\n+\n+fi\n+\n+if test x$host != x$target || test \"x$TARGET_SYSTEM_ROOT\" != x; then\n+  if test \"x$with_headers\" != x; then\n+    target_header_dir=$with_headers\n+  elif test \"x$with_sysroot\" = x; then\n+    target_header_dir=\"${test_exec_prefix}/${target_noncanonical}/sys-include\"\n+  elif test \"x$with_build_sysroot\" != \"x\"; then\n+    target_header_dir=\"${with_build_sysroot}${native_system_header_dir}\"\n+  elif test \"x$with_sysroot\" = xyes; then\n+    target_header_dir=\"${test_exec_prefix}/${target_noncanonical}/sys-root${native_system_header_dir}\"\n+  else\n+    target_header_dir=\"${with_sysroot}${native_system_header_dir}\"\n+  fi\n+else\n+  target_header_dir=${native_system_header_dir}\n+fi\n+\n+# Determine the version of glibc, if any, used on the target.\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for target glibc version\" >&5\n+$as_echo_n \"checking for target glibc version... \" >&6; }\n+\n+# Check whether --with-glibc-version was given.\n+if test \"${with_glibc_version+set}\" = set; then :\n+  withval=$with_glibc_version;\n+if echo \"$with_glibc_version\" | grep '^[0-9][0-9]*\\.[0-9][0-9]*$'; then\n+  glibc_version_major=`echo \"$with_glibc_version\" | sed -e 's/\\..*//'`\n+  glibc_version_minor=`echo \"$with_glibc_version\" | sed -e 's/.*\\.//'`\n+else\n+  as_fn_error \"option --with-glibc-version requires a version number M.N\" \"$LINENO\" 5\n+fi\n+else\n+\n+glibc_version_major=0\n+glibc_version_minor=0\n+if test -f $target_header_dir/features.h \\\n+  && glibc_version_major_define=`$EGREP '^[ \t]*#[ \t]*define[ \t]+__GLIBC__[ \t]+[0-9]' $target_header_dir/features.h` \\\n+  && glibc_version_minor_define=`$EGREP '^[ \t]*#[ \t]*define[ \t]+__GLIBC_MINOR__[ \t]+[0-9]' $target_header_dir/features.h`; then\n+  glibc_version_major=`echo \"$glibc_version_major_define\" | sed -e 's/.*__GLIBC__[ \t]*//'`\n+  glibc_version_minor=`echo \"$glibc_version_minor_define\" | sed -e 's/.*__GLIBC_MINOR__[ \t]*//'`\n+fi\n+fi\n+\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $glibc_version_major.$glibc_version_minor\" >&5\n+$as_echo \"$glibc_version_major.$glibc_version_minor\" >&6; }\n+\n # Check whether --enable-gnu-unique-object was given.\n if test \"${enable_gnu_unique_object+set}\" = set; then :\n   enableval=$enable_gnu_unique_object; case $enable_gnu_unique_object in\n@@ -26427,16 +26484,12 @@ $as_echo \"$gcc_cv_as_gnu_unique_object\" >&6; }\n if test $gcc_cv_as_gnu_unique_object = yes; then\n   # We need to unquote above to to use the definition from config.gcc.\n # Also check for ld.so support, i.e. glibc 2.11 or higher.\n-   if test x$host = x$build -a x$host = x$target &&\n-       ldd --version 2>/dev/null &&\n-       glibcver=`ldd --version 2>/dev/null | sed 's/.* //;q'`; then\n-      glibcmajor=`expr \"$glibcver\" : \"\\([0-9]*\\)\"`\n-      glibcminor=`expr \"$glibcver\" : \"[2-9]*\\.\\([0-9]*\\)\"`\n-      glibcnum=`expr $glibcmajor \\* 1000 + $glibcminor`\n-      if test \"$glibcnum\" -ge 2011 ; then\n-        enable_gnu_unique_object=yes\n-      fi\n-    fi\n+\n+if test $glibc_version_major -gt 2 \\\n+  || ( test $glibc_version_major -eq 2 && test $glibc_version_minor -ge 11 ); then :\n+  enable_gnu_unique_object=yes\n+fi\n+\n fi\n fi\n \n@@ -27015,32 +27068,6 @@ $as_echo \"#define HAVE_LD_SYSROOT 1\" >>confdefs.h\n \n fi\n \n-if test x$with_sysroot = x && test x$host = x$target \\\n-   && test \"$prefix\" != \"/usr\" && test \"x$prefix\" != \"x$local_prefix\" \\\n-   && test \"$prefix\" != \"NONE\"; then\n-\n-cat >>confdefs.h <<_ACEOF\n-#define PREFIX_INCLUDE_DIR \"$prefix/include\"\n-_ACEOF\n-\n-fi\n-\n-if test x$host != x$target || test \"x$TARGET_SYSTEM_ROOT\" != x; then\n-  if test \"x$with_headers\" != x; then\n-    target_header_dir=$with_headers\n-  elif test \"x$with_sysroot\" = x; then\n-    target_header_dir=\"${test_exec_prefix}/${target_noncanonical}/sys-include\"\n-  elif test \"x$with_build_sysroot\" != \"x\"; then\n-    target_header_dir=\"${with_build_sysroot}${native_system_header_dir}\"\n-  elif test \"x$with_sysroot\" = xyes; then\n-    target_header_dir=\"${test_exec_prefix}/${target_noncanonical}/sys-root${native_system_header_dir}\"\n-  else\n-    target_header_dir=\"${with_sysroot}${native_system_header_dir}\"\n-  fi\n-else\n-  target_header_dir=${native_system_header_dir}\n-fi\n-\n # Test for stack protector support in target C library.\n { $as_echo \"$as_me:${as_lineno-$LINENO}: checking __stack_chk_fail in target C library\" >&5\n $as_echo_n \"checking __stack_chk_fail in target C library... \" >&6; }\n@@ -27052,18 +27079,16 @@ else\n        *-*-linux* | *-*-kfreebsd*-gnu | *-*-knetbsd*-gnu)\n       # glibc 2.4 and later provides __stack_chk_fail and\n       # either __stack_chk_guard, or TLS access to stack guard canary.\n+\n+if test $glibc_version_major -gt 2 \\\n+  || ( test $glibc_version_major -eq 2 && test $glibc_version_minor -ge 4 ); then :\n+  gcc_cv_libc_provides_ssp=yes\n+else\n+\n       if test -f $target_header_dir/features.h \\\n \t && $EGREP '^[ \t]*#[ \t]*define[ \t]+__GNU_LIBRARY__[ \t]+([1-9][0-9]|[6-9])' \\\n \t    $target_header_dir/features.h > /dev/null; then\n-\tif $EGREP '^[ \t]*#[ \t]*define[ \t]+__GLIBC__[ \t]+([1-9][0-9]|[3-9])' \\\n-\t   $target_header_dir/features.h > /dev/null; then\n-\t  gcc_cv_libc_provides_ssp=yes\n-\telif $EGREP '^[ \t]*#[ \t]*define[ \t]+__GLIBC__[ \t]+2' \\\n-\t     $target_header_dir/features.h > /dev/null \\\n-\t     && $EGREP '^[ \t]*#[ \t]*define[ \t]+__GLIBC_MINOR__[ \t]+([1-9][0-9]|[4-9])' \\\n-\t     $target_header_dir/features.h > /dev/null; then\n-\t  gcc_cv_libc_provides_ssp=yes\n-\telif $EGREP '^[ \t]*#[ \t]*define[ \t]+__UCLIBC__[ \t]+1' \\\n+\tif $EGREP '^[ \t]*#[ \t]*define[ \t]+__UCLIBC__[ \t]+1' \\\n \t     $target_header_dir/features.h > /dev/null && \\\n \t     test -f $target_header_dir/bits/uClibc_config.h && \\\n \t     $EGREP '^[ \t]*#[ \t]*define[ \t]+__UCLIBC_HAS_SSP__[ \t]+1' \\\n@@ -27076,6 +27101,7 @@ else\n            $target_header_dir/sys/cdefs.h > /dev/null; then\n          gcc_cv_libc_provides_ssp=yes\n       fi\n+fi\n \t;;\n        *-*-gnu*)\n \t # Avoid complicated tests (see\n@@ -27131,11 +27157,18 @@ case \"$target\" in\n if test \"${with_long_double_128+set}\" = set; then :\n   withval=$with_long_double_128; gcc_cv_target_ldbl128=\"$with_long_double_128\"\n else\n-  gcc_cv_target_ldbl128=no\n+\n+if test $glibc_version_major -gt 2 \\\n+  || ( test $glibc_version_major -eq 2 && test $glibc_version_minor -ge 4 ); then :\n+  gcc_cv_target_ldbl128=yes\n+else\n+\n+      gcc_cv_target_ldbl128=no\n       grep '^[ \t]*#[ \t]*define[ \t][ \t]*__LONG_DOUBLE_MATH_OPTIONAL' \\\n         $target_header_dir/bits/wordsize.h > /dev/null 2>&1 \\\n       && gcc_cv_target_ldbl128=yes\n \n+fi\n fi\n \n     ;;"}, {"sha": "5935a6ede94b4f4a35e1ec163c783b13e291b38d", "filename": "gcc/configure.ac", "status": "modified", "additions": 54, "deletions": 47, "changes": 101, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75a2bcc07f19c1bc6439e6dab6c1b99281e675a0/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75a2bcc07f19c1bc6439e6dab6c1b99281e675a0/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=75a2bcc07f19c1bc6439e6dab6c1b99281e675a0", "patch": "@@ -4306,6 +4306,50 @@ gcc_GAS_CHECK_FEATURE([.lcomm with alignment], gcc_cv_as_lcomm_with_alignment,\n [AC_DEFINE(HAVE_GAS_LCOMM_WITH_ALIGNMENT, 1,\n   [Define if your assembler supports .lcomm with an alignment field.])])\n \n+if test x$with_sysroot = x && test x$host = x$target \\\n+   && test \"$prefix\" != \"/usr\" && test \"x$prefix\" != \"x$local_prefix\" \\\n+   && test \"$prefix\" != \"NONE\"; then\n+  AC_DEFINE_UNQUOTED(PREFIX_INCLUDE_DIR, \"$prefix/include\",\n+[Define to PREFIX/include if cpp should also search that directory.])\n+fi\n+\n+if test x$host != x$target || test \"x$TARGET_SYSTEM_ROOT\" != x; then\n+  if test \"x$with_headers\" != x; then\n+    target_header_dir=$with_headers\n+  elif test \"x$with_sysroot\" = x; then\n+    target_header_dir=\"${test_exec_prefix}/${target_noncanonical}/sys-include\"\n+  elif test \"x$with_build_sysroot\" != \"x\"; then\n+    target_header_dir=\"${with_build_sysroot}${native_system_header_dir}\"\n+  elif test \"x$with_sysroot\" = xyes; then\n+    target_header_dir=\"${test_exec_prefix}/${target_noncanonical}/sys-root${native_system_header_dir}\"\n+  else\n+    target_header_dir=\"${with_sysroot}${native_system_header_dir}\"\n+  fi\n+else\n+  target_header_dir=${native_system_header_dir}\n+fi\n+\n+# Determine the version of glibc, if any, used on the target.\n+AC_MSG_CHECKING([for target glibc version])\n+AC_ARG_WITH([glibc-version],\n+  [AS_HELP_STRING([--with-glibc-version=M.N],\n+    [assume GCC used with glibc version M.N or later])], [\n+if [echo \"$with_glibc_version\" | grep '^[0-9][0-9]*\\.[0-9][0-9]*$']; then\n+  glibc_version_major=`echo \"$with_glibc_version\" | sed -e 's/\\..*//'`\n+  glibc_version_minor=`echo \"$with_glibc_version\" | sed -e 's/.*\\.//'`\n+else\n+  AC_MSG_ERROR([option --with-glibc-version requires a version number M.N])\n+fi], [\n+glibc_version_major=0\n+glibc_version_minor=0\n+[if test -f $target_header_dir/features.h \\\n+  && glibc_version_major_define=`$EGREP '^[ \t]*#[ \t]*define[ \t]+__GLIBC__[ \t]+[0-9]' $target_header_dir/features.h` \\\n+  && glibc_version_minor_define=`$EGREP '^[ \t]*#[ \t]*define[ \t]+__GLIBC_MINOR__[ \t]+[0-9]' $target_header_dir/features.h`; then\n+  glibc_version_major=`echo \"$glibc_version_major_define\" | sed -e 's/.*__GLIBC__[ \t]*//'`\n+  glibc_version_minor=`echo \"$glibc_version_minor_define\" | sed -e 's/.*__GLIBC_MINOR__[ \t]*//'`\n+fi]])\n+AC_MSG_RESULT([$glibc_version_major.$glibc_version_minor])\n+\n AC_ARG_ENABLE(gnu-unique-object,\n  [AS_HELP_STRING([--enable-gnu-unique-object],\n    [enable the use of the @gnu_unique_object ELF extension on glibc systems])],\n@@ -4319,16 +4363,8 @@ Valid choices are 'yes' and 'no'.]) ;;\n    [.type foo, '$target_type_format_char'gnu_unique_object],,\n # We need to unquote above to to use the definition from config.gcc.\n # Also check for ld.so support, i.e. glibc 2.11 or higher.\n-   [[if test x$host = x$build -a x$host = x$target &&\n-       ldd --version 2>/dev/null &&\n-       glibcver=`ldd --version 2>/dev/null | sed 's/.* //;q'`; then\n-      glibcmajor=`expr \"$glibcver\" : \"\\([0-9]*\\)\"`\n-      glibcminor=`expr \"$glibcver\" : \"[2-9]*\\.\\([0-9]*\\)\"`\n-      glibcnum=`expr $glibcmajor \\* 1000 + $glibcminor`\n-      if test \"$glibcnum\" -ge 2011 ; then\n-        enable_gnu_unique_object=yes\n-      fi\n-    fi]])])\n+   [GCC_GLIBC_VERSION_GTE_IFELSE([2], [11], [enable_gnu_unique_object=yes], )]\n+   )])\n if test x$enable_gnu_unique_object = xyes; then\n   AC_DEFINE(HAVE_GAS_GNU_UNIQUE_OBJECT, 1,\n    [Define if your assembler supports @gnu_unique_object.])\n@@ -4816,49 +4852,19 @@ if test x\"$gcc_cv_ld_sysroot\" = xyes; then\n   [Define if your linker supports --sysroot.])\n fi\t  \n \n-if test x$with_sysroot = x && test x$host = x$target \\\n-   && test \"$prefix\" != \"/usr\" && test \"x$prefix\" != \"x$local_prefix\" \\\n-   && test \"$prefix\" != \"NONE\"; then\n-  AC_DEFINE_UNQUOTED(PREFIX_INCLUDE_DIR, \"$prefix/include\",\n-[Define to PREFIX/include if cpp should also search that directory.])\n-fi\n-\n-if test x$host != x$target || test \"x$TARGET_SYSTEM_ROOT\" != x; then\n-  if test \"x$with_headers\" != x; then\n-    target_header_dir=$with_headers\n-  elif test \"x$with_sysroot\" = x; then\n-    target_header_dir=\"${test_exec_prefix}/${target_noncanonical}/sys-include\"\n-  elif test \"x$with_build_sysroot\" != \"x\"; then\n-    target_header_dir=\"${with_build_sysroot}${native_system_header_dir}\"\n-  elif test \"x$with_sysroot\" = xyes; then\n-    target_header_dir=\"${test_exec_prefix}/${target_noncanonical}/sys-root${native_system_header_dir}\"\n-  else\n-    target_header_dir=\"${with_sysroot}${native_system_header_dir}\"\n-  fi\n-else\n-  target_header_dir=${native_system_header_dir}\n-fi\n-\n # Test for stack protector support in target C library.\n AC_CACHE_CHECK(__stack_chk_fail in target C library,\n       gcc_cv_libc_provides_ssp,\n       [gcc_cv_libc_provides_ssp=no\n     case \"$target\" in\n        *-*-linux* | *-*-kfreebsd*-gnu | *-*-knetbsd*-gnu)\n-      [# glibc 2.4 and later provides __stack_chk_fail and\n+      # glibc 2.4 and later provides __stack_chk_fail and\n       # either __stack_chk_guard, or TLS access to stack guard canary.\n-      if test -f $target_header_dir/features.h \\\n+      GCC_GLIBC_VERSION_GTE_IFELSE([2], [4], [gcc_cv_libc_provides_ssp=yes], [\n+      [if test -f $target_header_dir/features.h \\\n \t && $EGREP '^[ \t]*#[ \t]*define[ \t]+__GNU_LIBRARY__[ \t]+([1-9][0-9]|[6-9])' \\\n \t    $target_header_dir/features.h > /dev/null; then\n-\tif $EGREP '^[ \t]*#[ \t]*define[ \t]+__GLIBC__[ \t]+([1-9][0-9]|[3-9])' \\\n-\t   $target_header_dir/features.h > /dev/null; then\n-\t  gcc_cv_libc_provides_ssp=yes\n-\telif $EGREP '^[ \t]*#[ \t]*define[ \t]+__GLIBC__[ \t]+2' \\\n-\t     $target_header_dir/features.h > /dev/null \\\n-\t     && $EGREP '^[ \t]*#[ \t]*define[ \t]+__GLIBC_MINOR__[ \t]+([1-9][0-9]|[4-9])' \\\n-\t     $target_header_dir/features.h > /dev/null; then\n-\t  gcc_cv_libc_provides_ssp=yes\n-\telif $EGREP '^[ \t]*#[ \t]*define[ \t]+__UCLIBC__[ \t]+1' \\\n+\tif $EGREP '^[ \t]*#[ \t]*define[ \t]+__UCLIBC__[ \t]+1' \\\n \t     $target_header_dir/features.h > /dev/null && \\\n \t     test -f $target_header_dir/bits/uClibc_config.h && \\\n \t     $EGREP '^[ \t]*#[ \t]*define[ \t]+__UCLIBC_HAS_SSP__[ \t]+1' \\\n@@ -4870,7 +4876,7 @@ AC_CACHE_CHECK(__stack_chk_fail in target C library,\n         && $EGREP '^[  ]*#[    ]*define[       ]+__BIONIC__[   ]+1' \\\n            $target_header_dir/sys/cdefs.h > /dev/null; then\n          gcc_cv_libc_provides_ssp=yes\n-      fi]\n+      fi]])\n \t;;\n        *-*-gnu*)\n \t # Avoid complicated tests (see\n@@ -4913,11 +4919,12 @@ case \"$target\" in\n       [AS_HELP_STRING([--with-long-double-128],\n \t\t      [use 128-bit long double by default])],\n       gcc_cv_target_ldbl128=\"$with_long_double_128\",\n-      [[gcc_cv_target_ldbl128=no\n+      [GCC_GLIBC_VERSION_GTE_IFELSE([2], [4], [gcc_cv_target_ldbl128=yes], [\n+      [gcc_cv_target_ldbl128=no\n       grep '^[ \t]*#[ \t]*define[ \t][ \t]*__LONG_DOUBLE_MATH_OPTIONAL' \\\n         $target_header_dir/bits/wordsize.h > /dev/null 2>&1 \\\n       && gcc_cv_target_ldbl128=yes\n-      ]])\n+      ]])])\n     ;;\n esac\n if test x$gcc_cv_target_ldbl128 = xyes; then"}, {"sha": "a8f9f8a79801bae36326fe7eaf3b5daf55a62ff8", "filename": "gcc/doc/install.texi", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75a2bcc07f19c1bc6439e6dab6c1b99281e675a0/gcc%2Fdoc%2Finstall.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75a2bcc07f19c1bc6439e6dab6c1b99281e675a0/gcc%2Fdoc%2Finstall.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finstall.texi?ref=75a2bcc07f19c1bc6439e6dab6c1b99281e675a0", "patch": "@@ -1751,7 +1751,7 @@ linker for all final links. @var{choice} can be one of\n @itemx --disable-gnu-unique-object\n Tells GCC to use the gnu_unique_object relocation for C++ template\n static data members and inline function local statics.  Enabled by\n-default for a native toolchain with an assembler that accepts it and\n+default for a toolchain with an assembler that accepts it and\n GLIBC 2.11 or above, otherwise disabled.\n \n @item --enable-lto\n@@ -1773,6 +1773,18 @@ produce shorter header file paths in diagnostics and dependency output\n files, but these changed header paths may conflict with some compilation\n environments.  Enabled by default, and may be disabled using\n @option{--disable-canonical-system-headers}.\n+\n+@item --with-glibc-version=@var{major}.@var{minor}\n+Tell GCC that when the GNU C Library (glibc) is used on the target it\n+will be version @var{major}.@var{minor} or later.  Normally this can\n+be detected from the C library's header files, but this option may be\n+needed when bootstrapping a cross toolchain without the header files\n+available for building the initial bootstrap compiler.\n+\n+If GCC is configured with some multilibs that use glibc and some that\n+do not, this option applies only to the multilibs that use glibc.\n+However, such configurations may not work well as not all the relevant\n+configuration in GCC is on a per-multilib basis.\n @end table\n \n @subheading Cross-Compiler-Specific Options"}]}