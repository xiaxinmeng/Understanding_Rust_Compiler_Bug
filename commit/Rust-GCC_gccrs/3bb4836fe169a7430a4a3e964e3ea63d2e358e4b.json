{"sha": "3bb4836fe169a7430a4a3e964e3ea63d2e358e4b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2JiNDgzNmZlMTY5YTc0MzBhNGEzZTk2NGUzZWE2M2QyZTM1OGU0Yg==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2020-07-23T15:51:39Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-10-20T07:21:52Z"}, "message": "[Ada] AI12-0339: Empty function for Aggregate aspect of Ada containers\n\ngcc/ada/\n\n\t* sinfo.ads, sinfo.adb: The flag Box_Present can appear in\n\tIterated_Element_Association nodes.\n\t* sem_aggr.adb (Resolve_Aggregate): Call\n\tResolve_Container_Aggregate when type of context has\n\tcorresponding aspect.\n\t* sem_type.adb (Covers): In Ada_2020 an aggregate is compatible\n\twith a type that carries the corresponding aspect.\n\t* exp_ch3.adb (Make_Controlling_Function_Wrappers): Do not\n\tcreate declarations and bodies for inherited primitive functions\n\tof null extensions that dispatch on result, when current scope\n\tincludes an immediately visible non-overloadable homonym of the\n\tfunction.\n\t* libgnat/a-cborse.adb, libgnat/a-cborse.ads,\n\tlibgnat/a-cbhase.ads, libgnat/a-cbhase.adb,\n\tlibgnat/a-cborma.adb, libgnat/a-cborma.ads,\n\tlibgnat/a-cbhama.adb, libgnat/a-cbhama.ads,\n\tlibgnat/a-cbdlli.adb, libgnat/a-cbdlli.ads,\n\tlibgnat/a-convec.ads, libgnat/a-ciorse.ads,\n\tlibgnat/a-cihase.ads, libgnat/a-cihase.adb,\n\tlibgnat/a-ciorma.ads, libgnat/a-cihama.ads,\n\tlibgnat/a-cihama.adb, libgnat/a-cidlli.ads,\n\tlibgnat/a-cidlli.adb, libgnat/a-coinve.adb,\n\tlibgnat/a-cobove.adb, libgnat/a-cobove.ads,\n\tlibgnat/a-convec.adb, libgnat/a-coinve.ads,\n\tlibgnat/a-coorse.ads, libgnat/a-cohase.adb,\n\tlibgnat/a-cohase.ads, libgnat/a-coorma.ads,\n\tlibgnat/a-cohama.adb, libgnat/a-cohama.ads,\n\tlibgnat/a-cdlili.ads: Add primitive function Empty for use in\n\taspect Aggregate, and add corresponding body or expression\n\tfunction.", "tree": {"sha": "8c1f1fadc0b0116075634321e285ec813e73825f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8c1f1fadc0b0116075634321e285ec813e73825f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3bb4836fe169a7430a4a3e964e3ea63d2e358e4b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3bb4836fe169a7430a4a3e964e3ea63d2e358e4b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3bb4836fe169a7430a4a3e964e3ea63d2e358e4b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3bb4836fe169a7430a4a3e964e3ea63d2e358e4b/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "71400efc5eeacbef8e1e69e181241f99bcc097e5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/71400efc5eeacbef8e1e69e181241f99bcc097e5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/71400efc5eeacbef8e1e69e181241f99bcc097e5"}], "stats": {"total": 267, "additions": 248, "deletions": 19}, "files": [{"sha": "c5cc4965ed46ed5723fad32065e0f028b6a93e92", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bb4836fe169a7430a4a3e964e3ea63d2e358e4b/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bb4836fe169a7430a4a3e964e3ea63d2e358e4b/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=3bb4836fe169a7430a4a3e964e3ea63d2e358e4b", "patch": "@@ -9471,6 +9471,31 @@ package body Exp_Ch3 is\n              (Is_Null_Extension (Etype (Subp))\n                and then Etype (Alias (Subp)) /= Etype (Subp))\n          then\n+            --  If there is a non-overloadable homonym in the current\n+            --  scope, the implicit declaration remains invisible.\n+            --  We check the current entity with the same name, or its\n+            --  homonym in case the derivation takes place after the\n+            --  hiding object declaration.\n+\n+            if Present (Current_Entity (Subp)) then\n+               declare\n+                  Curr : constant Entity_Id := Current_Entity (Subp);\n+                  Prev : constant Entity_Id := Homonym (Curr);\n+               begin\n+                  if (Comes_From_Source (Curr)\n+                    and then Scope (Curr) = Current_Scope\n+                    and then not Is_Overloadable (Curr))\n+                  or else\n+                    (Present (Prev)\n+                      and then Comes_From_Source (Prev)\n+                      and then Scope (Prev) = Current_Scope\n+                      and then not Is_Overloadable (Prev))\n+                  then\n+                     goto Next_Prim;\n+                  end if;\n+               end;\n+            end if;\n+\n             Formal_List := No_List;\n             Formal := First_Formal (Subp);\n "}, {"sha": "a0c356d3adaa6209b98d4a54da9d6e8f194a1e2b", "filename": "gcc/ada/libgnat/a-cbdlli.adb", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bb4836fe169a7430a4a3e964e3ea63d2e358e4b/gcc%2Fada%2Flibgnat%2Fa-cbdlli.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bb4836fe169a7430a4a3e964e3ea63d2e358e4b/gcc%2Fada%2Flibgnat%2Fa-cbdlli.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-cbdlli.adb?ref=3bb4836fe169a7430a4a3e964e3ea63d2e358e4b", "patch": "@@ -518,6 +518,17 @@ is\n       return Position.Container.Nodes (Position.Node).Element;\n    end Element;\n \n+   -----------\n+   -- Empty --\n+   -----------\n+\n+   function Empty (Capacity : Count_Type := 10) return List is\n+   begin\n+      return Result : List (Capacity) do\n+         null;\n+      end return;\n+   end Empty;\n+\n    --------------\n    -- Finalize --\n    --------------"}, {"sha": "183c01e26dcf1cefa5af89523f6ec82fc9ee2add", "filename": "gcc/ada/libgnat/a-cbdlli.ads", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bb4836fe169a7430a4a3e964e3ea63d2e358e4b/gcc%2Fada%2Flibgnat%2Fa-cbdlli.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bb4836fe169a7430a4a3e964e3ea63d2e358e4b/gcc%2Fada%2Flibgnat%2Fa-cbdlli.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-cbdlli.ads?ref=3bb4836fe169a7430a4a3e964e3ea63d2e358e4b", "patch": "@@ -56,7 +56,7 @@ is\n       Variable_Indexing => Reference,\n       Default_Iterator  => Iterate,\n       Iterator_Element  => Element_Type,\n-      Aggregate         => (Empty        => Empty_List,\n+      Aggregate         => (Empty        => Empty,\n                             Add_Unnamed  => Append_One);\n    pragma Preelaborable_Initialization (List);\n \n@@ -67,6 +67,8 @@ is\n \n    No_Element : constant Cursor;\n \n+   function Empty (Capacity : Count_Type := 10) return List;\n+\n    function Has_Element (Position : Cursor) return Boolean;\n \n    package List_Iterator_Interfaces is new"}, {"sha": "7f0c0e686c97dc545e23435a4ff544e864891165", "filename": "gcc/ada/libgnat/a-cbhama.adb", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bb4836fe169a7430a4a3e964e3ea63d2e358e4b/gcc%2Fada%2Flibgnat%2Fa-cbhama.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bb4836fe169a7430a4a3e964e3ea63d2e358e4b/gcc%2Fada%2Flibgnat%2Fa-cbhama.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-cbhama.adb?ref=3bb4836fe169a7430a4a3e964e3ea63d2e358e4b", "patch": "@@ -364,6 +364,17 @@ is\n       return Position.Container.Nodes (Position.Node).Element;\n    end Element;\n \n+   -----------\n+   -- Empty --\n+   -----------\n+\n+   function Empty (Capacity : Count_Type) return Map is\n+   begin\n+      return Result : Map (Capacity, 0) do\n+         null;\n+      end return;\n+   end Empty;\n+\n    -------------------------\n    -- Equivalent_Key_Node --\n    -------------------------"}, {"sha": "7a1d0f648ac2a8928badf3530e51d5adea59c94a", "filename": "gcc/ada/libgnat/a-cbhama.ads", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bb4836fe169a7430a4a3e964e3ea63d2e358e4b/gcc%2Fada%2Flibgnat%2Fa-cbhama.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bb4836fe169a7430a4a3e964e3ea63d2e358e4b/gcc%2Fada%2Flibgnat%2Fa-cbhama.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-cbhama.ads?ref=3bb4836fe169a7430a4a3e964e3ea63d2e358e4b", "patch": "@@ -58,7 +58,7 @@ is\n       Variable_Indexing => Reference,\n       Default_Iterator  => Iterate,\n       Iterator_Element  => Element_Type,\n-      Aggregate         => (Empty     => Empty_Map,\n+      Aggregate         => (Empty     => Empty,\n                             Add_Named => Insert);\n \n    pragma Preelaborable_Initialization (Map);\n@@ -70,6 +70,8 @@ is\n    --  Map objects declared without an initialization expression are\n    --  initialized to the value Empty_Map.\n \n+   function Empty (Capacity : Count_Type) return Map;\n+\n    No_Element : constant Cursor;\n    --  Cursor objects declared without an initialization expression are\n    --  initialized to the value No_Element."}, {"sha": "293d722d202f66ad8c294c02adee19f12fc1e62f", "filename": "gcc/ada/libgnat/a-cbhase.adb", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bb4836fe169a7430a4a3e964e3ea63d2e358e4b/gcc%2Fada%2Flibgnat%2Fa-cbhase.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bb4836fe169a7430a4a3e964e3ea63d2e358e4b/gcc%2Fada%2Flibgnat%2Fa-cbhase.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-cbhase.adb?ref=3bb4836fe169a7430a4a3e964e3ea63d2e358e4b", "patch": "@@ -456,6 +456,17 @@ is\n       end;\n    end Element;\n \n+   -----------\n+   -- Empty --\n+   -----------\n+\n+   function Empty (Capacity : Count_Type := 10) return Set is\n+   begin\n+      return Result : Set (Capacity, 0) do\n+         Reserve_Capacity (Result, Capacity);\n+      end return;\n+   end Empty;\n+\n    ---------------------\n    -- Equivalent_Sets --\n    ---------------------"}, {"sha": "c82a123d9cd98e7da7be0bf05b2e9f189a2514eb", "filename": "gcc/ada/libgnat/a-cbhase.ads", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bb4836fe169a7430a4a3e964e3ea63d2e358e4b/gcc%2Fada%2Flibgnat%2Fa-cbhase.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bb4836fe169a7430a4a3e964e3ea63d2e358e4b/gcc%2Fada%2Flibgnat%2Fa-cbhase.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-cbhase.ads?ref=3bb4836fe169a7430a4a3e964e3ea63d2e358e4b", "patch": "@@ -60,7 +60,7 @@ is\n      with Constant_Indexing => Constant_Reference,\n           Default_Iterator  => Iterate,\n           Iterator_Element  => Element_Type,\n-          Aggregate         => (Empty       => Empty_Set,\n+          Aggregate         => (Empty       => Empty,\n                                 Add_Unnamed => Include);\n \n    pragma Preelaborable_Initialization (Set);\n@@ -72,6 +72,8 @@ is\n    --  Set objects declared without an initialization expression are\n    --  initialized to the value Empty_Set.\n \n+   function Empty (Capacity : Count_Type := 10) return Set;\n+\n    No_Element : constant Cursor;\n    --  Cursor objects declared without an initialization expression are\n    --  initialized to the value No_Element."}, {"sha": "54018479d685ce1ef72b00f68577f334cc07973b", "filename": "gcc/ada/libgnat/a-cborma.adb", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bb4836fe169a7430a4a3e964e3ea63d2e358e4b/gcc%2Fada%2Flibgnat%2Fa-cborma.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bb4836fe169a7430a4a3e964e3ea63d2e358e4b/gcc%2Fada%2Flibgnat%2Fa-cborma.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-cborma.adb?ref=3bb4836fe169a7430a4a3e964e3ea63d2e358e4b", "patch": "@@ -573,6 +573,17 @@ is\n       return Container.Nodes (Node).Element;\n    end Element;\n \n+   -----------\n+   -- Empty --\n+   -----------\n+\n+   function Empty (Capacity : Count_Type := 10) return Map is\n+   begin\n+      return Result : Map (Capacity) do\n+         null;\n+      end return;\n+   end Empty;\n+\n    ---------------------\n    -- Equivalent_Keys --\n    ---------------------"}, {"sha": "4da71bc151eba28af1f1b7efb0d2e3780b0620ac", "filename": "gcc/ada/libgnat/a-cborma.ads", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bb4836fe169a7430a4a3e964e3ea63d2e358e4b/gcc%2Fada%2Flibgnat%2Fa-cborma.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bb4836fe169a7430a4a3e964e3ea63d2e358e4b/gcc%2Fada%2Flibgnat%2Fa-cborma.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-cborma.ads?ref=3bb4836fe169a7430a4a3e964e3ea63d2e358e4b", "patch": "@@ -59,7 +59,7 @@ is\n       Variable_Indexing => Reference,\n       Default_Iterator  => Iterate,\n       Iterator_Element  => Element_Type,\n-      Aggregate         => (Empty     => Empty_Map,\n+      Aggregate         => (Empty     => Empty,\n                             Add_Named => Insert);\n \n    pragma Preelaborable_Initialization (Map);\n@@ -69,6 +69,8 @@ is\n \n    Empty_Map : constant Map;\n \n+   function Empty (Capacity : Count_Type := 10) return Map;\n+\n    No_Element : constant Cursor;\n \n    function Has_Element (Position : Cursor) return Boolean;"}, {"sha": "e4a2de80c9bb82e30ebc1f9df19f0fc258548819", "filename": "gcc/ada/libgnat/a-cborse.adb", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bb4836fe169a7430a4a3e964e3ea63d2e358e4b/gcc%2Fada%2Flibgnat%2Fa-cborse.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bb4836fe169a7430a4a3e964e3ea63d2e358e4b/gcc%2Fada%2Flibgnat%2Fa-cborse.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-cborse.adb?ref=3bb4836fe169a7430a4a3e964e3ea63d2e358e4b", "patch": "@@ -549,6 +549,17 @@ is\n       return Position.Container.Nodes (Position.Node).Element;\n    end Element;\n \n+   -----------\n+   -- Empty --\n+   -----------\n+\n+   function Empty (Capacity : Count_Type := 10) return Set is\n+   begin\n+      return Result : Set (Capacity) do\n+         null;\n+      end return;\n+   end Empty;\n+\n    -------------------------\n    -- Equivalent_Elements --\n    -------------------------"}, {"sha": "92a6df7dd76e4a003a8e2902dfa36ee2f1e8d716", "filename": "gcc/ada/libgnat/a-cborse.ads", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bb4836fe169a7430a4a3e964e3ea63d2e358e4b/gcc%2Fada%2Flibgnat%2Fa-cborse.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bb4836fe169a7430a4a3e964e3ea63d2e358e4b/gcc%2Fada%2Flibgnat%2Fa-cborse.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-cborse.ads?ref=3bb4836fe169a7430a4a3e964e3ea63d2e358e4b", "patch": "@@ -58,7 +58,7 @@ is\n    with Constant_Indexing => Constant_Reference,\n         Default_Iterator  => Iterate,\n         Iterator_Element  => Element_Type,\n-        Aggregate         => (Empty       => Empty_Set,\n+        Aggregate         => (Empty       => Empty,\n                               Add_Unnamed => Include);\n \n    pragma Preelaborable_Initialization (Set);\n@@ -68,6 +68,8 @@ is\n \n    Empty_Set : constant Set;\n \n+   function Empty (Capacity : Count_Type := 10) return Set;\n+\n    No_Element : constant Cursor;\n \n    function Has_Element (Position : Cursor) return Boolean;"}, {"sha": "35c4352c8ca029b4288cc6b073dd74442d035289", "filename": "gcc/ada/libgnat/a-cdlili.ads", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bb4836fe169a7430a4a3e964e3ea63d2e358e4b/gcc%2Fada%2Flibgnat%2Fa-cdlili.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bb4836fe169a7430a4a3e964e3ea63d2e358e4b/gcc%2Fada%2Flibgnat%2Fa-cdlili.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-cdlili.ads?ref=3bb4836fe169a7430a4a3e964e3ea63d2e358e4b", "patch": "@@ -57,7 +57,7 @@ is\n       Variable_Indexing => Reference,\n       Default_Iterator  => Iterate,\n       Iterator_Element  => Element_Type,\n-      Aggregate         => (Empty       => Empty_List,\n+      Aggregate         => (Empty       => Empty,\n                             Add_Unnamed => Append_One);\n \n    pragma Preelaborable_Initialization (List);\n@@ -66,6 +66,7 @@ is\n    pragma Preelaborable_Initialization (Cursor);\n \n    Empty_List : constant List;\n+   function Empty return List;\n \n    No_Element : constant Cursor;\n \n@@ -391,6 +392,7 @@ private\n    --  Returns a pointer to the element designated by Position.\n \n    Empty_List : constant List := (Controlled with others => <>);\n+   function Empty return List is (Empty_List);\n \n    No_Element : constant Cursor := Cursor'(null, null);\n "}, {"sha": "a62338f9665859818d5489908232d46a8238e89a", "filename": "gcc/ada/libgnat/a-cidlli.adb", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bb4836fe169a7430a4a3e964e3ea63d2e358e4b/gcc%2Fada%2Flibgnat%2Fa-cidlli.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bb4836fe169a7430a4a3e964e3ea63d2e358e4b/gcc%2Fada%2Flibgnat%2Fa-cidlli.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-cidlli.adb?ref=3bb4836fe169a7430a4a3e964e3ea63d2e358e4b", "patch": "@@ -185,6 +185,18 @@ is\n       Insert (Container, No_Element, New_Item, Count);\n    end Append;\n \n+   ---------------\n+   -- Append_One --\n+   ---------------\n+\n+   procedure Append_One\n+     (Container : in out List;\n+      New_Item  : Element_Type)\n+   is\n+   begin\n+      Insert (Container, No_Element, New_Item, 1);\n+   end Append_One;\n+\n    ------------\n    -- Assign --\n    ------------"}, {"sha": "5e63cf22e89e0406511ff7be913cfac77a8aec96", "filename": "gcc/ada/libgnat/a-cidlli.ads", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bb4836fe169a7430a4a3e964e3ea63d2e358e4b/gcc%2Fada%2Flibgnat%2Fa-cidlli.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bb4836fe169a7430a4a3e964e3ea63d2e358e4b/gcc%2Fada%2Flibgnat%2Fa-cidlli.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-cidlli.ads?ref=3bb4836fe169a7430a4a3e964e3ea63d2e358e4b", "patch": "@@ -55,14 +55,17 @@ is\n       Constant_Indexing => Constant_Reference,\n       Variable_Indexing => Reference,\n       Default_Iterator  => Iterate,\n-      Iterator_Element  => Element_Type;\n+      Iterator_Element  => Element_Type,\n+      Aggregate         => (Empty       => Empty,\n+                            Add_Unnamed => Append_One);\n \n    pragma Preelaborable_Initialization (List);\n \n    type Cursor is private;\n    pragma Preelaborable_Initialization (Cursor);\n \n    Empty_List : constant List;\n+   function Empty return List;\n \n    No_Element : constant Cursor;\n \n@@ -146,6 +149,10 @@ is\n       New_Item  : Element_Type;\n       Count     : Count_Type := 1);\n \n+   procedure Append_One\n+     (Container : in out List;\n+      New_Item  : Element_Type);\n+\n    procedure Delete\n      (Container : in out List;\n       Position  : in out Cursor;\n@@ -376,6 +383,7 @@ private\n    --  Returns a pointer to the element designated by Position.\n \n    Empty_List : constant List := List'(Controlled with others => <>);\n+   function Empty return List is (Empty_List);\n \n    No_Element : constant Cursor := Cursor'(null, null);\n "}, {"sha": "64f662f332bd29a55687410cf15d0c9b02a94b35", "filename": "gcc/ada/libgnat/a-cihama.adb", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bb4836fe169a7430a4a3e964e3ea63d2e358e4b/gcc%2Fada%2Flibgnat%2Fa-cihama.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bb4836fe169a7430a4a3e964e3ea63d2e358e4b/gcc%2Fada%2Flibgnat%2Fa-cihama.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-cihama.adb?ref=3bb4836fe169a7430a4a3e964e3ea63d2e358e4b", "patch": "@@ -385,6 +385,17 @@ is\n       return Position.Node.Element.all;\n    end Element;\n \n+   -----------\n+   -- Empty --\n+   -----------\n+\n+   function Empty (Capacity : Count_Type := 1000) return Map is\n+   begin\n+      return Result : Map do\n+         Reserve_Capacity (Result, Capacity);\n+      end return;\n+   end Empty;\n+\n    -------------------------\n    -- Equivalent_Key_Node --\n    -------------------------"}, {"sha": "ccf5f4e58ec3027fc81fd04a7fbd0d8624e02472", "filename": "gcc/ada/libgnat/a-cihama.ads", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bb4836fe169a7430a4a3e964e3ea63d2e358e4b/gcc%2Fada%2Flibgnat%2Fa-cihama.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bb4836fe169a7430a4a3e964e3ea63d2e358e4b/gcc%2Fada%2Flibgnat%2Fa-cihama.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-cihama.ads?ref=3bb4836fe169a7430a4a3e964e3ea63d2e358e4b", "patch": "@@ -58,7 +58,7 @@ is\n       Variable_Indexing => Reference,\n       Default_Iterator  => Iterate,\n       Iterator_Element  => Element_Type,\n-      Aggregate         => (Empty     => Empty_Map,\n+      Aggregate         => (Empty     => Empty,\n                             Add_Named => Insert);\n \n    pragma Preelaborable_Initialization (Map);\n@@ -70,6 +70,8 @@ is\n    --  Map objects declared without an initialization expression are\n    --  initialized to the value Empty_Map.\n \n+   function Empty (Capacity : Count_Type := 1000) return Map;\n+\n    No_Element : constant Cursor;\n    --  Cursor objects declared without an initialization expression are\n    --  initialized to the value No_Element."}, {"sha": "ebc9152dd62177489cfc0b78e4355216089b58d4", "filename": "gcc/ada/libgnat/a-cihase.adb", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bb4836fe169a7430a4a3e964e3ea63d2e358e4b/gcc%2Fada%2Flibgnat%2Fa-cihase.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bb4836fe169a7430a4a3e964e3ea63d2e358e4b/gcc%2Fada%2Flibgnat%2Fa-cihase.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-cihase.adb?ref=3bb4836fe169a7430a4a3e964e3ea63d2e358e4b", "patch": "@@ -506,6 +506,17 @@ is\n       return Position.Node.Element.all;\n    end Element;\n \n+   -----------\n+   -- Empty --\n+   -----------\n+\n+   function Empty (Capacity : Count_Type := 1000) return Set is\n+   begin\n+      return Result : Set do\n+         Reserve_Capacity (Result, Capacity);\n+      end return;\n+   end Empty;\n+\n    ---------------------\n    -- Equivalent_Sets --\n    ---------------------"}, {"sha": "cdfd86e35cc91c9ac8ad8839055dded45b827fc4", "filename": "gcc/ada/libgnat/a-cihase.ads", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bb4836fe169a7430a4a3e964e3ea63d2e358e4b/gcc%2Fada%2Flibgnat%2Fa-cihase.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bb4836fe169a7430a4a3e964e3ea63d2e358e4b/gcc%2Fada%2Flibgnat%2Fa-cihase.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-cihase.ads?ref=3bb4836fe169a7430a4a3e964e3ea63d2e358e4b", "patch": "@@ -60,7 +60,7 @@ is\n      with Constant_Indexing => Constant_Reference,\n           Default_Iterator  => Iterate,\n           Iterator_Element  => Element_Type,\n-          Aggregate         => (Empty       => Empty_Set,\n+          Aggregate         => (Empty       => Empty,\n                                 Add_Unnamed => Include);\n \n    pragma Preelaborable_Initialization (Set);\n@@ -72,6 +72,8 @@ is\n    --  Set objects declared without an initialization expression are\n    --  initialized to the value Empty_Set.\n \n+   function Empty (Capacity : Count_Type := 1000) return Set;\n+\n    No_Element : constant Cursor;\n    --  Cursor objects declared without an initialization expression are\n    --  initialized to the value No_Element."}, {"sha": "17f5dfda5d7984861fb95d477d4f1102e3a748e7", "filename": "gcc/ada/libgnat/a-ciorma.ads", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bb4836fe169a7430a4a3e964e3ea63d2e358e4b/gcc%2Fada%2Flibgnat%2Fa-ciorma.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bb4836fe169a7430a4a3e964e3ea63d2e358e4b/gcc%2Fada%2Flibgnat%2Fa-ciorma.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-ciorma.ads?ref=3bb4836fe169a7430a4a3e964e3ea63d2e358e4b", "patch": "@@ -59,7 +59,7 @@ is\n         Variable_Indexing => Reference,\n         Default_Iterator  => Iterate,\n         Iterator_Element  => Element_Type,\n-        Aggregate         => (Empty     => Empty_Map,\n+        Aggregate         => (Empty     => Empty,\n                               Add_Named => Insert);\n \n    pragma Preelaborable_Initialization (Map);\n@@ -69,6 +69,8 @@ is\n \n    Empty_Map : constant Map;\n \n+   function Empty return Map;\n+\n    No_Element : constant Cursor;\n    function Has_Element (Position : Cursor) return Boolean;\n \n@@ -369,6 +371,7 @@ private\n    --  Returns a pointer to the element designated by Position.\n \n    Empty_Map : constant Map := (Controlled with others => <>);\n+   function Empty return Map is (Empty_Map);\n \n    No_Element : constant Cursor := Cursor'(null, null);\n "}, {"sha": "1b6e3179cc0de22067803e379d9b3d3b215b0453", "filename": "gcc/ada/libgnat/a-ciorse.ads", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bb4836fe169a7430a4a3e964e3ea63d2e358e4b/gcc%2Fada%2Flibgnat%2Fa-ciorse.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bb4836fe169a7430a4a3e964e3ea63d2e358e4b/gcc%2Fada%2Flibgnat%2Fa-ciorse.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-ciorse.ads?ref=3bb4836fe169a7430a4a3e964e3ea63d2e358e4b", "patch": "@@ -58,7 +58,7 @@ is\n       Constant_Indexing => Constant_Reference,\n       Default_Iterator  => Iterate,\n       Iterator_Element  => Element_Type,\n-      Aggregate         => (Empty       => Empty_Set,\n+      Aggregate         => (Empty       => Empty,\n                             Add_Unnamed => Include);\n \n    pragma Preelaborable_Initialization (Set);\n@@ -67,6 +67,7 @@ is\n    pragma Preelaborable_Initialization (Cursor);\n \n    Empty_Set : constant Set;\n+   function Empty  return Set;\n \n    No_Element : constant Cursor;\n \n@@ -448,6 +449,7 @@ private\n    --  Returns a pointer to the element designated by Position.\n \n    Empty_Set : constant Set := (Controlled with others => <>);\n+   function Empty  return Set is (Empty_Set);\n \n    No_Element : constant Cursor := Cursor'(null, null);\n "}, {"sha": "0408741b44f10d7e7be09be90fd115f05f45cbee", "filename": "gcc/ada/libgnat/a-cobove.adb", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bb4836fe169a7430a4a3e964e3ea63d2e358e4b/gcc%2Fada%2Flibgnat%2Fa-cobove.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bb4836fe169a7430a4a3e964e3ea63d2e358e4b/gcc%2Fada%2Flibgnat%2Fa-cobove.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-cobove.adb?ref=3bb4836fe169a7430a4a3e964e3ea63d2e358e4b", "patch": "@@ -708,6 +708,17 @@ package body Ada.Containers.Bounded_Vectors is\n       end if;\n    end Element;\n \n+   -----------\n+   -- Empty --\n+   -----------\n+\n+   function Empty (Capacity : Count_Type := 10) return Vector is\n+   begin\n+      return Result : Vector (Capacity) do\n+         Reserve_Capacity (Result, Capacity);\n+      end return;\n+   end Empty;\n+\n    --------------\n    -- Finalize --\n    --------------"}, {"sha": "ab4ce4e2f9925c45fa2239504a1770e21605130d", "filename": "gcc/ada/libgnat/a-cobove.ads", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bb4836fe169a7430a4a3e964e3ea63d2e358e4b/gcc%2Fada%2Flibgnat%2Fa-cobove.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bb4836fe169a7430a4a3e964e3ea63d2e358e4b/gcc%2Fada%2Flibgnat%2Fa-cobove.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-cobove.ads?ref=3bb4836fe169a7430a4a3e964e3ea63d2e358e4b", "patch": "@@ -60,7 +60,7 @@ package Ada.Containers.Bounded_Vectors is\n       Variable_Indexing => Reference,\n       Default_Iterator  => Iterate,\n       Iterator_Element  => Element_Type,\n-      Aggregate         => (Empty          => Empty_Vector,\n+      Aggregate         => (Empty          => Empty,\n                             Add_Unnamed    => Append_One,\n                             New_Indexed    => New_Vector,\n                             Assign_Indexed => Replace_Element);\n@@ -79,6 +79,8 @@ package Ada.Containers.Bounded_Vectors is\n    package Vector_Iterator_Interfaces is new\n       Ada.Iterator_Interfaces (Cursor, Has_Element);\n \n+   function Empty (Capacity : Count_Type := 10) return Vector;\n+\n    overriding function \"=\" (Left, Right : Vector) return Boolean;\n \n    function New_Vector (First, Last : Index_Type) return Vector"}, {"sha": "1475330693d0fb2d0fe61aa64f80e4bb3d752194", "filename": "gcc/ada/libgnat/a-cohama.adb", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bb4836fe169a7430a4a3e964e3ea63d2e358e4b/gcc%2Fada%2Flibgnat%2Fa-cohama.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bb4836fe169a7430a4a3e964e3ea63d2e358e4b/gcc%2Fada%2Flibgnat%2Fa-cohama.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-cohama.adb?ref=3bb4836fe169a7430a4a3e964e3ea63d2e358e4b", "patch": "@@ -367,6 +367,17 @@ is\n       return Position.Node.Element;\n    end Element;\n \n+   -----------\n+   -- Empty --\n+   -----------\n+\n+   function Empty (Capacity : Count_Type := 1000) return Map is\n+   begin\n+      return Result : Map do\n+         Reserve_Capacity (Result, Capacity);\n+      end return;\n+   end Empty;\n+\n    -------------------------\n    -- Equivalent_Key_Node --\n    -------------------------"}, {"sha": "21b69354db0284a53795092837bb589e22eb27e0", "filename": "gcc/ada/libgnat/a-cohama.ads", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bb4836fe169a7430a4a3e964e3ea63d2e358e4b/gcc%2Fada%2Flibgnat%2Fa-cohama.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bb4836fe169a7430a4a3e964e3ea63d2e358e4b/gcc%2Fada%2Flibgnat%2Fa-cohama.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-cohama.ads?ref=3bb4836fe169a7430a4a3e964e3ea63d2e358e4b", "patch": "@@ -102,7 +102,7 @@ is\n       Variable_Indexing => Reference,\n       Default_Iterator  => Iterate,\n       Iterator_Element  => Element_Type,\n-      Aggregate         => (Empty     => Empty_Map,\n+      Aggregate         => (Empty     => Empty,\n                             Add_Named => Insert);\n \n    pragma Preelaborable_Initialization (Map);\n@@ -118,6 +118,8 @@ is\n    --  Cursor objects declared without an initialization expression are\n    --  initialized to the value No_Element.\n \n+   function Empty (Capacity : Count_Type := 1000) return Map;\n+\n    function Has_Element (Position : Cursor) return Boolean;\n    --  Returns True if Position designates an element, and returns False\n    --  otherwise."}, {"sha": "63e44e12790e3cbd423c8f81fb84453079ba05fb", "filename": "gcc/ada/libgnat/a-cohase.adb", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bb4836fe169a7430a4a3e964e3ea63d2e358e4b/gcc%2Fada%2Flibgnat%2Fa-cohase.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bb4836fe169a7430a4a3e964e3ea63d2e358e4b/gcc%2Fada%2Flibgnat%2Fa-cohase.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-cohase.adb?ref=3bb4836fe169a7430a4a3e964e3ea63d2e358e4b", "patch": "@@ -468,6 +468,17 @@ is\n       return Position.Node.Element;\n    end Element;\n \n+   -----------\n+   -- Empty --\n+   -----------\n+\n+   function Empty (Capacity : Count_Type := 1000) return Set is\n+   begin\n+      return Result : Set do\n+         Reserve_Capacity (Result, Capacity);\n+      end return;\n+   end Empty;\n+\n    ---------------------\n    -- Equivalent_Sets --\n    ---------------------"}, {"sha": "a0aca526db96e4a15d228f2bc62f9a3468619d10", "filename": "gcc/ada/libgnat/a-cohase.ads", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bb4836fe169a7430a4a3e964e3ea63d2e358e4b/gcc%2Fada%2Flibgnat%2Fa-cohase.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bb4836fe169a7430a4a3e964e3ea63d2e358e4b/gcc%2Fada%2Flibgnat%2Fa-cohase.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-cohase.ads?ref=3bb4836fe169a7430a4a3e964e3ea63d2e358e4b", "patch": "@@ -61,7 +61,7 @@ is\n       Constant_Indexing => Constant_Reference,\n       Default_Iterator  => Iterate,\n       Iterator_Element  => Element_Type,\n-      Aggregate         => (Empty       => Empty_Set,\n+      Aggregate         => (Empty       => Empty,\n                             Add_Unnamed => Include);\n \n    pragma Preelaborable_Initialization (Set);\n@@ -83,6 +83,8 @@ is\n    package Set_Iterator_Interfaces is new\n      Ada.Iterator_Interfaces (Cursor, Has_Element);\n \n+   function Empty (Capacity : Count_Type := 1000) return Set;\n+\n    function \"=\" (Left, Right : Set) return Boolean;\n    --  For each element in Left, set equality attempts to find the equal\n    --  element in Right; if a search fails, then set equality immediately"}, {"sha": "10711ffeca98e1eeb67a0520247f2ece5bfb8699", "filename": "gcc/ada/libgnat/a-coinve.adb", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bb4836fe169a7430a4a3e964e3ea63d2e358e4b/gcc%2Fada%2Flibgnat%2Fa-coinve.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bb4836fe169a7430a4a3e964e3ea63d2e358e4b/gcc%2Fada%2Flibgnat%2Fa-coinve.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-coinve.adb?ref=3bb4836fe169a7430a4a3e964e3ea63d2e358e4b", "patch": "@@ -745,6 +745,17 @@ is\n       end;\n    end Element;\n \n+   -----------\n+   -- Empty --\n+   -----------\n+\n+   function Empty (Capacity : Count_Type := 10) return Vector is\n+   begin\n+      return Result : Vector do\n+         Reserve_Capacity (Result, Capacity);\n+      end return;\n+   end Empty;\n+\n    --------------\n    -- Finalize --\n    --------------"}, {"sha": "593b63e8dca411b278454b6b81d9e06195c67ec0", "filename": "gcc/ada/libgnat/a-coinve.ads", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bb4836fe169a7430a4a3e964e3ea63d2e358e4b/gcc%2Fada%2Flibgnat%2Fa-coinve.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bb4836fe169a7430a4a3e964e3ea63d2e358e4b/gcc%2Fada%2Flibgnat%2Fa-coinve.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-coinve.ads?ref=3bb4836fe169a7430a4a3e964e3ea63d2e358e4b", "patch": "@@ -77,6 +77,8 @@ is\n \n    No_Element : constant Cursor;\n \n+   function Empty (Capacity : Count_Type := 10) return Vector;\n+\n    function Has_Element (Position : Cursor) return Boolean;\n \n    package Vector_Iterator_Interfaces is new"}, {"sha": "a43be970e34f8468b0768e3d4cf8773262860b53", "filename": "gcc/ada/libgnat/a-convec.adb", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bb4836fe169a7430a4a3e964e3ea63d2e358e4b/gcc%2Fada%2Flibgnat%2Fa-convec.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bb4836fe169a7430a4a3e964e3ea63d2e358e4b/gcc%2Fada%2Flibgnat%2Fa-convec.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-convec.adb?ref=3bb4836fe169a7430a4a3e964e3ea63d2e358e4b", "patch": "@@ -614,6 +614,17 @@ is\n       return Position.Container.Elements.EA (Position.Index);\n    end Element;\n \n+   -----------\n+   -- Empty --\n+   -----------\n+\n+   function Empty (Capacity : Count_Type := 10) return Vector is\n+   begin\n+      return Result : Vector do\n+         Reserve_Capacity (Result, Capacity);\n+      end return;\n+   end Empty;\n+\n    --------------\n    -- Finalize --\n    --------------"}, {"sha": "f969e6f691e2e046f0af7a05f7d9f55b3a60630b", "filename": "gcc/ada/libgnat/a-convec.ads", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bb4836fe169a7430a4a3e964e3ea63d2e358e4b/gcc%2Fada%2Flibgnat%2Fa-convec.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bb4836fe169a7430a4a3e964e3ea63d2e358e4b/gcc%2Fada%2Flibgnat%2Fa-convec.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-convec.ads?ref=3bb4836fe169a7430a4a3e964e3ea63d2e358e4b", "patch": "@@ -94,7 +94,7 @@ is\n       Variable_Indexing => Reference,\n       Default_Iterator  => Iterate,\n       Iterator_Element  => Element_Type,\n-      Aggregate         => (Empty          => Empty_Vector,\n+      Aggregate         => (Empty          => Empty,\n                             Add_Unnamed    => Append_One,\n                             New_Indexed    => New_Vector,\n                             Assign_Indexed => Replace_Element);\n@@ -122,6 +122,8 @@ is\n    Empty_Vector : constant Vector;\n    --  Empty_Vector represents the empty vector object. It has a length of 0.\n \n+   function Empty (Capacity : Count_Type := 10) return Vector;\n+\n    overriding function \"=\" (Left, Right : Vector) return Boolean;\n    --  If Left and Right denote the same vector object, then the function\n    --  returns True. If Left and Right have different lengths, then the"}, {"sha": "7f65a7f3b37be0c1d4a2af5cb2e09a75e8199107", "filename": "gcc/ada/libgnat/a-coorma.ads", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bb4836fe169a7430a4a3e964e3ea63d2e358e4b/gcc%2Fada%2Flibgnat%2Fa-coorma.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bb4836fe169a7430a4a3e964e3ea63d2e358e4b/gcc%2Fada%2Flibgnat%2Fa-coorma.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-coorma.ads?ref=3bb4836fe169a7430a4a3e964e3ea63d2e358e4b", "patch": "@@ -59,13 +59,14 @@ is\n       Variable_Indexing => Reference,\n       Default_Iterator  => Iterate,\n       Iterator_Element  => Element_Type,\n-      Aggregate         => (Empty     => Empty_Map,\n+      Aggregate         => (Empty     => Empty,\n                             Add_Named => Insert);\n \n    type Cursor is private;\n    pragma Preelaborable_Initialization (Cursor);\n \n    Empty_Map : constant Map;\n+   function Empty return Map;\n \n    No_Element : constant Cursor;\n \n@@ -373,6 +374,7 @@ private\n    --  Returns a pointer to the element designated by Position.\n \n    Empty_Map : constant Map := (Controlled with others => <>);\n+   function Empty return Map is (Empty_Map);\n \n    No_Element : constant Cursor := Cursor'(null, null);\n "}, {"sha": "1ccf290fbee00fbd96cf744f4cf9ed93901c9b10", "filename": "gcc/ada/libgnat/a-coorse.ads", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bb4836fe169a7430a4a3e964e3ea63d2e358e4b/gcc%2Fada%2Flibgnat%2Fa-coorse.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bb4836fe169a7430a4a3e964e3ea63d2e358e4b/gcc%2Fada%2Flibgnat%2Fa-coorse.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-coorse.ads?ref=3bb4836fe169a7430a4a3e964e3ea63d2e358e4b", "patch": "@@ -58,7 +58,7 @@ is\n    with Constant_Indexing => Constant_Reference,\n         Default_Iterator  => Iterate,\n         Iterator_Element  => Element_Type;\n-        --  Aggregate         => (Empty       => Empty_Set,\n+        --  Aggregate         => (Empty       => Empty,\n         --                        Add_Unnamed => Include);\n \n    pragma Preelaborable_Initialization (Set);\n@@ -69,6 +69,7 @@ is\n    function Has_Element (Position : Cursor) return Boolean;\n \n    Empty_Set : constant Set;\n+   function Empty  return Set;\n \n    No_Element : constant Cursor;\n \n@@ -434,6 +435,7 @@ private\n    --  Returns a pointer to the element designated by Position.\n \n    Empty_Set : constant Set := (Controlled with others => <>);\n+   function Empty  return Set is (Empty_Set);\n \n    No_Element : constant Cursor := Cursor'(null, null);\n "}, {"sha": "c7d1e49d91eda6e018f30f397b28710a80f5e65f", "filename": "gcc/ada/sem_aggr.adb", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bb4836fe169a7430a4a3e964e3ea63d2e358e4b/gcc%2Fada%2Fsem_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bb4836fe169a7430a4a3e964e3ea63d2e358e4b/gcc%2Fada%2Fsem_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_aggr.adb?ref=3bb4836fe169a7430a4a3e964e3ea63d2e358e4b", "patch": "@@ -899,6 +899,11 @@ package body Sem_Aggr is\n       elsif Is_Array_Type (Typ) and then Null_Record_Present (N) then\n          Error_Msg_N (\"null record forbidden in array aggregate\", N);\n \n+      elsif Present (Find_Aspect (Typ, Aspect_Aggregate))\n+        and then Ekind (Typ) /= E_Record_Type\n+      then\n+         Resolve_Container_Aggregate (N, Typ);\n+\n       elsif Is_Record_Type (Typ) then\n          Resolve_Record_Aggregate (N, Typ);\n "}, {"sha": "3b1f48e02f7797fc81f75e1936e12444994487f4", "filename": "gcc/ada/sem_type.adb", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bb4836fe169a7430a4a3e964e3ea63d2e358e4b/gcc%2Fada%2Fsem_type.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bb4836fe169a7430a4a3e964e3ea63d2e358e4b/gcc%2Fada%2Fsem_type.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_type.adb?ref=3bb4836fe169a7430a4a3e964e3ea63d2e358e4b", "patch": "@@ -1009,6 +1009,15 @@ package body Sem_Type is\n       elsif T2 = Any_Composite and then Is_Aggregate_Type (T1) then\n          return True;\n \n+      --  In Ada_2020, an aggregate is compatible with the type that\n+      --  as the ccorrespoding aspect.\n+\n+      elsif Ada_Version >= Ada_2020\n+        and then T2 = Any_Composite\n+        and then Present (Find_Aspect (T1, Aspect_Aggregate))\n+      then\n+         return True;\n+\n       --  If the expected type is an anonymous access, the designated type must\n       --  cover that of the expression. Use the base type for this check: even\n       --  though access subtypes are rare in sources, they are generated for"}, {"sha": "82bc8a5623ae259e93ace7f59400902ee2d0df73", "filename": "gcc/ada/sinfo.adb", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bb4836fe169a7430a4a3e964e3ea63d2e358e4b/gcc%2Fada%2Fsinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bb4836fe169a7430a4a3e964e3ea63d2e358e4b/gcc%2Fada%2Fsinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.adb?ref=3bb4836fe169a7430a4a3e964e3ea63d2e358e4b", "patch": "@@ -368,7 +368,8 @@ package body Sinfo is\n         or else NT (N).Nkind = N_Formal_Concrete_Subprogram_Declaration\n         or else NT (N).Nkind = N_Formal_Package_Declaration\n         or else NT (N).Nkind = N_Generic_Association\n-        or else NT (N).Nkind = N_Iterated_Component_Association);\n+        or else NT (N).Nkind = N_Iterated_Component_Association\n+        or else NT (N).Nkind = N_Iterated_Element_Association);\n       return Flag15 (N);\n    end Box_Present;\n \n@@ -3873,7 +3874,8 @@ package body Sinfo is\n         or else NT (N).Nkind = N_Formal_Concrete_Subprogram_Declaration\n         or else NT (N).Nkind = N_Formal_Package_Declaration\n         or else NT (N).Nkind = N_Generic_Association\n-        or else NT (N).Nkind = N_Iterated_Component_Association);\n+        or else NT (N).Nkind = N_Iterated_Component_Association\n+        or else NT (N).Nkind = N_Iterated_Element_Association);\n       Set_Flag15 (N, Val);\n    end Set_Box_Present;\n "}, {"sha": "551f43f5a42271936b8eb87da160be3a2edab6b2", "filename": "gcc/ada/sinfo.ads", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bb4836fe169a7430a4a3e964e3ea63d2e358e4b/gcc%2Fada%2Fsinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bb4836fe169a7430a4a3e964e3ea63d2e358e4b/gcc%2Fada%2Fsinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.ads?ref=3bb4836fe169a7430a4a3e964e3ea63d2e358e4b", "patch": "@@ -4251,6 +4251,7 @@ package Sinfo is\n       --  Expression (Node3)\n       --  Loop_Parameter_Specification (Node4)\n       --  Loop_Actions (List5-Sem)\n+      --  Box_Present (Flag15)\n \n       --  Exactly one of Iterator_Specification or Loop_Parameter_\n       --  specification is present. If the Key_Expression is absent,"}]}