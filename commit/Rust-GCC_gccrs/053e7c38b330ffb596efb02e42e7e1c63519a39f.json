{"sha": "053e7c38b330ffb596efb02e42e7e1c63519a39f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDUzZTdjMzhiMzMwZmZiNTk2ZWZiMDJlNDJlN2UxYzYzNTE5YTM5Zg==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2005-03-13T21:13:41Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2005-03-13T21:13:41Z"}, "message": "anon-struct-6.c, [...]: Ensure uniqueness of test assertion names.\n\n\t* gcc.dg/anon-struct-6.c, gcc.dg/array-8.c,\n\tgcc.dg/cpp/19940712-1.c, gcc.dg/cpp/19951025-1.c,\n\tgcc.dg/cpp/tr-warn6.c, gcc.dg/deprecated.c, gcc.dg/init-bad-1.c,\n\tgcc.dg/init-bad-2.c, gcc.dg/init-bad-3.c, gcc.dg/m-un-2.c,\n\tgcc.dg/parm-mismatch-1.c, gcc.dg/redecl-1.c: Ensure uniqueness of\n\ttest assertion names.\n\nFrom-SVN: r96391", "tree": {"sha": "efcae5304fa6be52efc084d151a32fcbc86722be", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/efcae5304fa6be52efc084d151a32fcbc86722be"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/053e7c38b330ffb596efb02e42e7e1c63519a39f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/053e7c38b330ffb596efb02e42e7e1c63519a39f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/053e7c38b330ffb596efb02e42e7e1c63519a39f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/053e7c38b330ffb596efb02e42e7e1c63519a39f/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "97c54d9afb7e891eff59d464ce0b74cb45bb3c39", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/97c54d9afb7e891eff59d464ce0b74cb45bb3c39", "html_url": "https://github.com/Rust-GCC/gccrs/commit/97c54d9afb7e891eff59d464ce0b74cb45bb3c39"}], "stats": {"total": 93, "additions": 51, "deletions": 42}, "files": [{"sha": "06a16dd2fa6b4202b090c65d1dc9792f3e7186db", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/053e7c38b330ffb596efb02e42e7e1c63519a39f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/053e7c38b330ffb596efb02e42e7e1c63519a39f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=053e7c38b330ffb596efb02e42e7e1c63519a39f", "patch": "@@ -1,3 +1,12 @@\n+2005-03-13  Joseph S. Myers  <joseph@codesourcery.com>\n+\n+\t* gcc.dg/anon-struct-6.c, gcc.dg/array-8.c,\n+\tgcc.dg/cpp/19940712-1.c, gcc.dg/cpp/19951025-1.c,\n+\tgcc.dg/cpp/tr-warn6.c, gcc.dg/deprecated.c, gcc.dg/init-bad-1.c,\n+\tgcc.dg/init-bad-2.c, gcc.dg/init-bad-3.c, gcc.dg/m-un-2.c,\n+\tgcc.dg/parm-mismatch-1.c, gcc.dg/redecl-1.c: Ensure uniqueness of\n+\ttest assertion names.\n+\n 2003-03-13  Tobias Schl\"uter  <tobias.schlueter@physik.uni-muenchen.de>\n \n \tPR fortran/18600"}, {"sha": "ad961c62aea8692dc0be298de9c0ddae642e7e8d", "filename": "gcc/testsuite/gcc.dg/anon-struct-6.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/053e7c38b330ffb596efb02e42e7e1c63519a39f/gcc%2Ftestsuite%2Fgcc.dg%2Fanon-struct-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/053e7c38b330ffb596efb02e42e7e1c63519a39f/gcc%2Ftestsuite%2Fgcc.dg%2Fanon-struct-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fanon-struct-6.c?ref=053e7c38b330ffb596efb02e42e7e1c63519a39f", "patch": "@@ -9,4 +9,4 @@ struct s {\n   const;\n };\n /* { dg-warning \"warning: useless type qualifier in empty declaration\" \"empty\" { target *-*-* } 9 } */\n-/* { dg-warning \"warning: empty declaration\" \"empty\" { target *-*-* } 9 } */\n+/* { dg-warning \"warning: empty declaration\" \"empty 2\" { target *-*-* } 9 } */"}, {"sha": "44b757b70dfb04ec156e9eb30d5e04365dfd9e42", "filename": "gcc/testsuite/gcc.dg/array-8.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/053e7c38b330ffb596efb02e42e7e1c63519a39f/gcc%2Ftestsuite%2Fgcc.dg%2Farray-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/053e7c38b330ffb596efb02e42e7e1c63519a39f/gcc%2Ftestsuite%2Fgcc.dg%2Farray-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Farray-8.c?ref=053e7c38b330ffb596efb02e42e7e1c63519a39f", "patch": "@@ -43,7 +43,7 @@ g (void)\n   pv[0]; /* { dg-warning \"warning: dereferencing 'void \\\\*' pointer\" } */\n   0[pv]; /* { dg-warning \"warning: dereferencing 'void \\\\*' pointer\" } */\n   sip[0]; /* { dg-error \"error: invalid use of undefined type 'struct si'\" } */\n-  /* { dg-error \"error: dereferencing pointer to incomplete type\" \"\" { target *-*-* } 45 } */\n+  /* { dg-error \"error: dereferencing pointer to incomplete type\" \"incomplete\" { target *-*-* } 45 } */\n   0[sip]; /* { dg-error \"error: invalid use of undefined type 'struct si'\" } */\n-  /* { dg-error \"error: dereferencing pointer to incomplete type\" \"\" { target *-*-* } 47 } */\n+  /* { dg-error \"error: dereferencing pointer to incomplete type\" \"incomplete\" { target *-*-* } 47 } */\n }"}, {"sha": "d5ed88973e32c45f4fe472c9415c7deed1309099", "filename": "gcc/testsuite/gcc.dg/cpp/19940712-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/053e7c38b330ffb596efb02e42e7e1c63519a39f/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2F19940712-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/053e7c38b330ffb596efb02e42e7e1c63519a39f/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2F19940712-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2F19940712-1.c?ref=053e7c38b330ffb596efb02e42e7e1c63519a39f", "patch": "@@ -3,7 +3,7 @@\n \n /* dg.exp doesn't read the header files for magic comments. */\n /* { dg-error \"unterminated comment\" \"\" { target *-*-* } 4 } */\n-/* { dg-error \"unterminated comment\" \"\" { target *-*-* } 8 } */\n+/* { dg-error \"unterminated comment\" \"header error\" { target *-*-* } 8 } */\n \n #include \"19940712-1.h\"\t  /* { dg-error \"\" }  // In file included from: */\n #include \"19940712-1a.h\"  /* { dg-error \"\" }  // In file included from: */"}, {"sha": "b817b68c8aee23803dd8a5f976ec05db815948bc", "filename": "gcc/testsuite/gcc.dg/cpp/19951025-1.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/053e7c38b330ffb596efb02e42e7e1c63519a39f/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2F19951025-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/053e7c38b330ffb596efb02e42e7e1c63519a39f/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2F19951025-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2F19951025-1.c?ref=053e7c38b330ffb596efb02e42e7e1c63519a39f", "patch": "@@ -1,4 +1,4 @@\n /* { dg-do preprocess } */\n-/* { dg-error \"include expects\" \"\" { target *-*-* } 4 } */\n-/* { dg-error \"newline at end\" \"\" { target *-*-* } 4 } */\n+/* { dg-error \"include expects\" \"include\" { target *-*-* } 4 } */\n+/* { dg-error \"newline at end\" \"newline\" { target *-*-* } 4 } */\n #include /\\"}, {"sha": "e9aa851d0419b40ab9a1504106cf469bbe6caff8", "filename": "gcc/testsuite/gcc.dg/cpp/tr-warn6.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/053e7c38b330ffb596efb02e42e7e1c63519a39f/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Ftr-warn6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/053e7c38b330ffb596efb02e42e7e1c63519a39f/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Ftr-warn6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Ftr-warn6.c?ref=053e7c38b330ffb596efb02e42e7e1c63519a39f", "patch": "@@ -13,7 +13,7 @@\n #define foo7(AA, hello, world, EEE) sdf \"A B hello C,world,DhelloE F\" fds EEE /* { dg-warning \"macro argument \\\"hello\\\" would be stringified\" \"traditional stringification\" } */\n \n /* Catch the second warning from the above line.  */\n-/* { dg-warning \"macro argument \\\"world\\\" would be stringified\" \"traditional stringification\" { target *-*-* } 13 } */\n+/* { dg-warning \"macro argument \\\"world\\\" would be stringified\" \"traditional stringification second warning\" { target *-*-* } 13 } */\n \n # 19 \"sys-header.h\" 3\n /* We are in system headers now, no -Wtraditional warnings should issue.  */"}, {"sha": "6ca95d42a747f149cd6cdb7571812d9dd818f090", "filename": "gcc/testsuite/gcc.dg/deprecated.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/053e7c38b330ffb596efb02e42e7e1c63519a39f/gcc%2Ftestsuite%2Fgcc.dg%2Fdeprecated.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/053e7c38b330ffb596efb02e42e7e1c63519a39f/gcc%2Ftestsuite%2Fgcc.dg%2Fdeprecated.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdeprecated.c?ref=053e7c38b330ffb596efb02e42e7e1c63519a39f", "patch": "@@ -53,10 +53,10 @@ int func1()\n    int (*pf)() = f1;\t\t\t/* { dg-warning \"'f1' is deprecated\" \"\" } */\n \n    z = w + x + y + g1 + g2 + g3;\t/* { dg-warning \"'x' is deprecated\" \"\" } */\n-   \t\t\t\t\t/* { dg-warning \"'y' is deprecated\" \"\" { target *-*-* } 55 } */\n-   \t\t\t\t\t/* { dg-warning \"'g2' is deprecated\" \"\" { target *-*-* } 55 } */\n-   \t\t\t\t\t/* { dg-warning \"'g3' is deprecated\" \"\" { target *-*-* } 55 } */\n-   return f1(); \t\t\t/* { dg-warning \"'f1' is deprecated\" \"\" } */\n+   \t\t\t\t\t/* { dg-warning \"'y' is deprecated\" \"y\" { target *-*-* } 55 } */\n+   \t\t\t\t\t/* { dg-warning \"'g2' is deprecated\" \"g2\" { target *-*-* } 55 } */\n+   \t\t\t\t\t/* { dg-warning \"'g3' is deprecated\" \"g3\" { target *-*-* } 55 } */\n+   return f1(); \t\t\t/* { dg-warning \"'f1' is deprecated\" \"f1\" } */\n }\n \n int func2(S1 *p)\n@@ -71,7 +71,7 @@ int func2(S1 *p)\n   p->u1.field5 = g1 + p->field7;\n   p->u2.field9;\t\t\t\t/* { dg-warning \"'u2' is deprecated\" \"\" } */\n   return p->u1.field6 + p->field8;\t/* { dg-warning \"'field6' is deprecated\" \"\" } */\n-  \t\t\t\t\t/* { dg-warning \"'field8' is deprecated\" \"\" { target *-*-* } 73 } */\n+  \t\t\t\t\t/* { dg-warning \"'field8' is deprecated\" \"field8\" { target *-*-* } 73 } */\n }\n \n struct SS1 {"}, {"sha": "1fa1bfb2d82910fa87db2ac8e819316639d32826", "filename": "gcc/testsuite/gcc.dg/init-bad-1.c", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/053e7c38b330ffb596efb02e42e7e1c63519a39f/gcc%2Ftestsuite%2Fgcc.dg%2Finit-bad-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/053e7c38b330ffb596efb02e42e7e1c63519a39f/gcc%2Ftestsuite%2Fgcc.dg%2Finit-bad-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Finit-bad-1.c?ref=053e7c38b330ffb596efb02e42e7e1c63519a39f", "patch": "@@ -10,36 +10,36 @@ void h(a)\n      int a = 1; /* { dg-error \"error: parameter 'a' is initialized\" } */\n {\n   struct s x = { 0 }; /* { dg-error \"error: variable 'x' has initializer but incomplete type\" } */\n-  /* { dg-warning \"excess elements|near init\" \"\" { target *-*-* } 12 } */\n-  /* { dg-error \"storage size\" \"\" { target *-*-* } 12 } */\n+  /* { dg-warning \"excess elements|near init\" \"excess\" { target *-*-* } 12 } */\n+  /* { dg-error \"storage size\" \"size\" { target *-*-* } 12 } */\n }\n \n char s[1] = \"x\";\n char s1[1] = { \"x\" };\n char t[1] = \"xy\"; /* { dg-warning \"warning: initializer-string for array of chars is too long\" } */\n char t1[1] = { \"xy\" }; /* { dg-warning \"warning: initializer-string for array of chars is too long\" } */\n char u[1] = { \"x\", \"x\" }; /* { dg-error \"error: excess elements in char array initializer\" } */\n-/* { dg-error \"near init\" \"\" { target *-*-* } 21 } */\n+/* { dg-error \"near init\" \"near\" { target *-*-* } 21 } */\n \n int i = { }; /* { dg-error \"error: empty scalar initializer\" } */\n-/* { dg-error \"near init\" \"\" { target *-*-* } 24 } */\n+/* { dg-error \"near init\" \"near\" { target *-*-* } 24 } */\n \n int j = { 1 };\n \n int k = { 1, 2 }; /* { dg-warning \"warning: excess elements in scalar initializer\" } */\n-/* { dg-warning \"near init\" \"\" { target *-*-* } 29 } */\n+/* { dg-warning \"near init\" \"near\" { target *-*-* } 29 } */\n \n int a1[1] = { [1] = 0 }; /* { dg-error \"error: array index in initializer exceeds array bounds\" } */\n-/* { dg-error \"near init\" \"\" { target *-*-* } 32 } */\n+/* { dg-error \"near init\" \"near\" { target *-*-* } 32 } */\n int a2[1] = { [-1] = 0 }; /* { dg-error \"error: array index in initializer exceeds array bounds\" } */\n-/* { dg-error \"near init\" \"\" { target *-*-* } 34 } */\n+/* { dg-error \"near init\" \"near\" { target *-*-* } 34 } */\n int a3[1] = { [0 ... 1] = 0 }; /* { dg-error \"error: array index range in initializer exceeds array bounds\" } */\n-/* { dg-error \"near init\" \"\" { target *-*-* } 36 } */\n+/* { dg-error \"near init\" \"near\" { target *-*-* } 36 } */\n int a4[2] = { [1 ... 0] = 0 }; /* { dg-error \"error: empty index range in initializer\" } */\n-/* { dg-error \"near init\" \"\" { target *-*-* } 38 } */\n+/* { dg-error \"near init\" \"near\" { target *-*-* } 38 } */\n int a5[2] = { [0 ... 2] = 0 }; /* { dg-error \"error: array index range in initializer exceeds array bounds\" } */\n-/* { dg-error \"near init\" \"\" { target *-*-* } 40 } */\n+/* { dg-error \"near init\" \"near\" { target *-*-* } 40 } */\n int a6[2] = { [-1 ... 1] = 0 }; /* { dg-error \"error: array index in initializer exceeds array bounds\" } */\n-/* { dg-error \"near init\" \"\" { target *-*-* } 42 } */\n+/* { dg-error \"near init\" \"near\" { target *-*-* } 42 } */\n int a7[] = { [-1 ... 1] = 0 }; /* { dg-error \"error: array index in initializer exceeds array bounds\" } */\n-/* { dg-error \"near init\" \"\" { target *-*-* } 44 } */\n+/* { dg-error \"near init\" \"near\" { target *-*-* } 44 } */"}, {"sha": "23387e500f0c4c9468704b7b87b936fec9d99534", "filename": "gcc/testsuite/gcc.dg/init-bad-2.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/053e7c38b330ffb596efb02e42e7e1c63519a39f/gcc%2Ftestsuite%2Fgcc.dg%2Finit-bad-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/053e7c38b330ffb596efb02e42e7e1c63519a39f/gcc%2Ftestsuite%2Fgcc.dg%2Finit-bad-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Finit-bad-2.c?ref=053e7c38b330ffb596efb02e42e7e1c63519a39f", "patch": "@@ -11,23 +11,23 @@ void h(a)\n      int a = 1; /* { dg-error \"error: parameter 'a' is initialized\" } */\n {\n   struct s x = { 0 }; /* { dg-error \"error: variable 'x' has initializer but incomplete type\" } */\n-  /* { dg-warning \"excess elements|near init\" \"\" { target *-*-* } 13 } */\n-  /* { dg-error \"storage size\" \"\" { target *-*-* } 13 } */\n+  /* { dg-warning \"excess elements|near init\" \"near\" { target *-*-* } 13 } */\n+  /* { dg-error \"storage size\" \"size\" { target *-*-* } 13 } */\n }\n \n char s[1] = \"x\";\n char s1[1] = { \"x\" };\n char t[1] = \"xy\"; /* { dg-warning \"warning: initializer-string for array of chars is too long\" } */\n char t1[1] = { \"xy\" }; /* { dg-warning \"warning: initializer-string for array of chars is too long\" } */\n char u[1] = { \"x\", \"x\" }; /* { dg-error \"error: excess elements in char array initializer\" } */\n-/* { dg-error \"near init\" \"\" { target *-*-* } 22 } */\n+/* { dg-error \"near init\" \"near\" { target *-*-* } 22 } */\n \n int j = { 1 };\n \n int k = { 1, 2 }; /* { dg-warning \"warning: excess elements in scalar initializer\" } */\n-/* { dg-warning \"near init\" \"\" { target *-*-* } 27 } */\n+/* { dg-warning \"near init\" \"near\" { target *-*-* } 27 } */\n \n int a1[1] = { [1] = 0 }; /* { dg-error \"error: array index in initializer exceeds array bounds\" } */\n-/* { dg-error \"near init\" \"\" { target *-*-* } 30 } */\n+/* { dg-error \"near init\" \"near\" { target *-*-* } 30 } */\n int a2[1] = { [-1] = 0 }; /* { dg-error \"error: array index in initializer exceeds array bounds\" } */\n-/* { dg-error \"near init\" \"\" { target *-*-* } 32 } */\n+/* { dg-error \"near init\" \"near\" { target *-*-* } 32 } */"}, {"sha": "bb149823dc1890038a25dbbf87b97a72775efc76", "filename": "gcc/testsuite/gcc.dg/init-bad-3.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/053e7c38b330ffb596efb02e42e7e1c63519a39f/gcc%2Ftestsuite%2Fgcc.dg%2Finit-bad-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/053e7c38b330ffb596efb02e42e7e1c63519a39f/gcc%2Ftestsuite%2Fgcc.dg%2Finit-bad-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Finit-bad-3.c?ref=053e7c38b330ffb596efb02e42e7e1c63519a39f", "patch": "@@ -11,23 +11,23 @@ void h(a)\n      int a = 1; /* { dg-error \"error: parameter 'a' is initialized\" } */\n {\n   struct s x = { 0 }; /* { dg-error \"error: variable 'x' has initializer but incomplete type\" } */\n-  /* { dg-error \"excess elements|near init\" \"\" { target *-*-* } 13 } */\n-  /* { dg-error \"storage size\" \"\" { target *-*-* } 13 } */\n+  /* { dg-error \"excess elements|near init\" \"near\" { target *-*-* } 13 } */\n+  /* { dg-error \"storage size\" \"size\" { target *-*-* } 13 } */\n }\n \n char s[1] = \"x\";\n char s1[1] = { \"x\" };\n char t[1] = \"xy\"; /* { dg-error \"error: initializer-string for array of chars is too long\" } */\n char t1[1] = { \"xy\" }; /* { dg-error \"error: initializer-string for array of chars is too long\" } */\n char u[1] = { \"x\", \"x\" }; /* { dg-error \"error: excess elements in char array initializer\" } */\n-/* { dg-error \"near init\" \"\" { target *-*-* } 22 } */\n+/* { dg-error \"near init\" \"near\" { target *-*-* } 22 } */\n \n int j = { 1 };\n \n int k = { 1, 2 }; /* { dg-error \"error: excess elements in scalar initializer\" } */\n-/* { dg-error \"near init\" \"\" { target *-*-* } 27 } */\n+/* { dg-error \"near init\" \"near\" { target *-*-* } 27 } */\n \n int a1[1] = { [1] = 0 }; /* { dg-error \"error: array index in initializer exceeds array bounds\" } */\n-/* { dg-error \"near init\" \"\" { target *-*-* } 30 } */\n+/* { dg-error \"near init\" \"near\" { target *-*-* } 30 } */\n int a2[1] = { [-1] = 0 }; /* { dg-error \"error: array index in initializer exceeds array bounds\" } */\n-/* { dg-error \"near init\" \"\" { target *-*-* } 32 } */\n+/* { dg-error \"near init\" \"near\" { target *-*-* } 32 } */"}, {"sha": "0d280bb57933c84c6421b91a0f9e0442aeb3d1c0", "filename": "gcc/testsuite/gcc.dg/m-un-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/053e7c38b330ffb596efb02e42e7e1c63519a39f/gcc%2Ftestsuite%2Fgcc.dg%2Fm-un-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/053e7c38b330ffb596efb02e42e7e1c63519a39f/gcc%2Ftestsuite%2Fgcc.dg%2Fm-un-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fm-un-2.c?ref=053e7c38b330ffb596efb02e42e7e1c63519a39f", "patch": "@@ -16,7 +16,7 @@ struct vtable mtable = {\n   malloc,\n   free\n }; /* { dg-warning \"missing initializer\" \"warning regression\" { target *-*-* } {18} } */\n-   /* { dg-warning \"initialization for 'mtable._realloc'\" \"warning regression\" { target *-*-* } {18} } */\n+   /* { dg-warning \"initialization for 'mtable._realloc'\" \"warning regression 2\" { target *-*-* } {18} } */\n \n /* With designated initializers, we assume you meant to leave out the\n    initialization of any blank fields.  */"}, {"sha": "6b82b7be1b2af524b6c64bc17e6e5249ba61d9e5", "filename": "gcc/testsuite/gcc.dg/parm-mismatch-1.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/053e7c38b330ffb596efb02e42e7e1c63519a39f/gcc%2Ftestsuite%2Fgcc.dg%2Fparm-mismatch-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/053e7c38b330ffb596efb02e42e7e1c63519a39f/gcc%2Ftestsuite%2Fgcc.dg%2Fparm-mismatch-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fparm-mismatch-1.c?ref=053e7c38b330ffb596efb02e42e7e1c63519a39f", "patch": "@@ -6,13 +6,13 @@\n \n void f0(); /* { dg-error \"error: previous declaration of 'f0' was here\" } */\n void f0(int, ...); /* { dg-error \"error: conflicting types for 'f0'\" } */\n-/* { dg-error \"note: a parameter list with an ellipsis can't match an empty parameter name list declaration\" \"\" { target *-*-* } 8 } */\n+/* { dg-error \"note: a parameter list with an ellipsis can't match an empty parameter name list declaration\" \"note\" { target *-*-* } 8 } */\n void f1(int, ...); /* { dg-error \"error: previous declaration of 'f1' was here\" } */\n void f1(); /* { dg-error \"error: conflicting types for 'f1'\" } */\n-/* { dg-error \"note: a parameter list with an ellipsis can't match an empty parameter name list declaration\" \"\" { target *-*-* } 11 } */\n+/* { dg-error \"note: a parameter list with an ellipsis can't match an empty parameter name list declaration\" \"note\" { target *-*-* } 11 } */\n void f2(); /* { dg-error \"error: previous declaration of 'f2' was here\" } */\n void f2(char); /* { dg-error \"error: conflicting types for 'f2'\" } */\n-/* { dg-error \"note: an argument type that has a default promotion can't match an empty parameter name list declaration\" \"\" { target *-*-* } 14 } */\n+/* { dg-error \"note: an argument type that has a default promotion can't match an empty parameter name list declaration\" \"note\" { target *-*-* } 14 } */\n void f3(char); /* { dg-error \"error: previous declaration of 'f3' was here\" } */\n void f3(); /* { dg-error \"error: conflicting types for 'f3'\" } */\n-/* { dg-error \"note: an argument type that has a default promotion can't match an empty parameter name list declaration\" \"\" { target *-*-* } 17 } */\n+/* { dg-error \"note: an argument type that has a default promotion can't match an empty parameter name list declaration\" \"note\" { target *-*-* } 17 } */"}, {"sha": "75ce208457c6295eedffe8180b6b1b3c22c77c08", "filename": "gcc/testsuite/gcc.dg/redecl-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/053e7c38b330ffb596efb02e42e7e1c63519a39f/gcc%2Ftestsuite%2Fgcc.dg%2Fredecl-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/053e7c38b330ffb596efb02e42e7e1c63519a39f/gcc%2Ftestsuite%2Fgcc.dg%2Fredecl-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fredecl-1.c?ref=053e7c38b330ffb596efb02e42e7e1c63519a39f", "patch": "@@ -94,7 +94,7 @@ static int test7(int x)\n void prime8(void)\n {\n   test8();\t\t\t/* { dg-warning \"previous\" \"\" } */\n-                                /* { dg-warning \"implicit\" \"\" { target *-*-* } 96 } */\n+                                /* { dg-warning \"implicit\" \"implicit\" { target *-*-* } 96 } */\n }\n \n static int test8(int x)"}]}