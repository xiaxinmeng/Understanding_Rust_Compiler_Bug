{"sha": "981666391297739542a41bc2ea23cb4d64a4a819", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTgxNjY2MzkxMjk3NzM5NTQyYTQxYmMyZWEyM2NiNGQ2NGE0YTgxOQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2000-11-29T21:03:33Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2000-11-29T21:03:33Z"}, "message": "expr.c (can_store_by_pieces): Reinitialize max_size for reverse tests.\n\n\t* expr.c (can_store_by_pieces): Reinitialize max_size for reverse\n\ttests.\n\nFrom-SVN: r37857", "tree": {"sha": "80cd1dba025ee1910c5ed53682cca7323431fa4e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/80cd1dba025ee1910c5ed53682cca7323431fa4e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/981666391297739542a41bc2ea23cb4d64a4a819", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/981666391297739542a41bc2ea23cb4d64a4a819", "html_url": "https://github.com/Rust-GCC/gccrs/commit/981666391297739542a41bc2ea23cb4d64a4a819", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/981666391297739542a41bc2ea23cb4d64a4a819/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b2d7dd203a2e65ce15d70de6d535e763cd642170", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b2d7dd203a2e65ce15d70de6d535e763cd642170", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b2d7dd203a2e65ce15d70de6d535e763cd642170"}], "stats": {"total": 8, "additions": 7, "deletions": 1}, "files": [{"sha": "ed669b027c74de134db5d34f3a71d17410abed08", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/981666391297739542a41bc2ea23cb4d64a4a819/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/981666391297739542a41bc2ea23cb4d64a4a819/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=981666391297739542a41bc2ea23cb4d64a4a819", "patch": "@@ -1,3 +1,8 @@\n+2000-11-29  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* expr.c (can_store_by_pieces): Reinitialize max_size for reverse\n+\ttests.\n+\n 2000-11-29  Neil Booth  <neilb@earthling.net>\n \n         * c-pragma.c (init_pragma): Update for parse_in type change."}, {"sha": "f924d53ffea5d5527e4363a4c011adeab6174235", "filename": "gcc/expr.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/981666391297739542a41bc2ea23cb4d64a4a819/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/981666391297739542a41bc2ea23cb4d64a4a819/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=981666391297739542a41bc2ea23cb4d64a4a819", "patch": "@@ -2263,7 +2263,7 @@ can_store_by_pieces (len, constfun, constfundata, align)\n      PTR constfundata;\n      unsigned int align;\n {\n-  unsigned HOST_WIDE_INT max_size = MOVE_MAX_PIECES + 1, l;\n+  unsigned HOST_WIDE_INT max_size, l;\n   HOST_WIDE_INT offset = 0;\n   enum machine_mode mode, tmode;\n   enum insn_code icode;\n@@ -2286,6 +2286,7 @@ can_store_by_pieces (len, constfun, constfundata, align)\n     {\n       l = len;\n       mode = VOIDmode;\n+      max_size = MOVE_MAX_PIECES + 1;\n       while (max_size > 1)\n \t{\n \t  for (tmode = GET_CLASS_NARROWEST_MODE (MODE_INT);"}]}