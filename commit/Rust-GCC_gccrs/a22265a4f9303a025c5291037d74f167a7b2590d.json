{"sha": "a22265a4f9303a025c5291037d74f167a7b2590d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTIyMjY1YTRmOTMwM2EwMjVjNTI5MTAzN2Q3NGYxNjdhN2IyNTkwZA==", "commit": {"author": {"name": "Jeff Law", "email": "law@redhat.com", "date": "2010-11-04T13:15:33Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2010-11-04T13:15:33Z"}, "message": "ira.c (validate_equiv_mem): Remove code to avoid invalidation of readonly memory equivalances for...\n\n\t* ira.c (validate_equiv_mem): Remove code to avoid invalidation\n\tof readonly memory equivalances for const/pure calls.\n\nFrom-SVN: r166309", "tree": {"sha": "661a360b05122b4081e7d9f5f7041b1015f60a1b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/661a360b05122b4081e7d9f5f7041b1015f60a1b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a22265a4f9303a025c5291037d74f167a7b2590d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a22265a4f9303a025c5291037d74f167a7b2590d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a22265a4f9303a025c5291037d74f167a7b2590d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a22265a4f9303a025c5291037d74f167a7b2590d/comments", "author": null, "committer": null, "parents": [{"sha": "2a2651b797f11a4dbe0fb9d9e75a7ca672f934de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a2651b797f11a4dbe0fb9d9e75a7ca672f934de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2a2651b797f11a4dbe0fb9d9e75a7ca672f934de"}], "stats": {"total": 13, "additions": 11, "deletions": 2}, "files": [{"sha": "c5fe9b290bd05486211430e68e78d585930586fb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a22265a4f9303a025c5291037d74f167a7b2590d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a22265a4f9303a025c5291037d74f167a7b2590d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a22265a4f9303a025c5291037d74f167a7b2590d", "patch": "@@ -1,3 +1,8 @@\n+2010-11-04  Jeff Law  <law@redhat.com>\n+\n+\t* ira.c (validate_equiv_mem): Remove code to avoid invalidation\n+\tof readonly memory equivalances for const/pure calls.\n+\n 2010-11-04  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/45733"}, {"sha": "d37247f55b12fac57c146d06b97744efcddc8de1", "filename": "gcc/ira.c", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a22265a4f9303a025c5291037d74f167a7b2590d/gcc%2Fira.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a22265a4f9303a025c5291037d74f167a7b2590d/gcc%2Fira.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fira.c?ref=a22265a4f9303a025c5291037d74f167a7b2590d", "patch": "@@ -1915,8 +1915,12 @@ validate_equiv_mem (rtx start, rtx reg, rtx memref)\n       if (find_reg_note (insn, REG_DEAD, reg))\n \treturn 1;\n \n-      if (CALL_P (insn) && ! MEM_READONLY_P (memref)\n-\t  && ! RTL_CONST_OR_PURE_CALL_P (insn))\n+      /* This used to ignore readonly memory and const/pure calls.  The problem\n+\t is the equivalent form may reference a pseudo which gets assigned a\n+\t call clobbered hard reg.  When we later replace REG with its\n+\t equivalent form, the value in the call-clobbered reg has been\n+\t changed and all hell breaks loose.  */\n+      if (CALL_P (insn))\n \treturn 0;\n \n       note_stores (PATTERN (insn), validate_equiv_mem_from_store, NULL);"}]}