{"sha": "6752e8d2a4829daebb51205e17615d9520f150b3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Njc1MmU4ZDJhNDgyOWRhZWJiNTEyMDVlMTc2MTVkOTUyMGYxNTBiMw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1992-12-01T15:42:55Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1992-12-01T15:42:55Z"}, "message": "(num_sign_bit_copies): Return 1 on failure, not 0.\n\nFix typo in last change; return 1 on failure, not BITWIDTH.\n\nFrom-SVN: r2827", "tree": {"sha": "5621b3ec409c02a5c790477e9413adbdc5e23c45", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5621b3ec409c02a5c790477e9413adbdc5e23c45"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6752e8d2a4829daebb51205e17615d9520f150b3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6752e8d2a4829daebb51205e17615d9520f150b3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6752e8d2a4829daebb51205e17615d9520f150b3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6752e8d2a4829daebb51205e17615d9520f150b3/comments", "author": null, "committer": null, "parents": [{"sha": "8a2d2f90c9083ba50e2033b6774e06ee3121c112", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a2d2f90c9083ba50e2033b6774e06ee3121c112", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8a2d2f90c9083ba50e2033b6774e06ee3121c112"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "8d1a845ffefd27c780607c32b245aa27317a57f5", "filename": "gcc/combine.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6752e8d2a4829daebb51205e17615d9520f150b3/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6752e8d2a4829daebb51205e17615d9520f150b3/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=6752e8d2a4829daebb51205e17615d9520f150b3", "patch": "@@ -6225,7 +6225,7 @@ num_sign_bit_copies (x, mode)\n     mode = GET_MODE (x);\n \n   if (mode == VOIDmode)\n-    return 0;\n+    return 1;\n \n   bitwidth = GET_MODE_BITSIZE (mode);\n \n@@ -6457,7 +6457,7 @@ num_sign_bit_copies (x, mode)\n      safely compute the mask for this mode, always return BITWIDTH.  */\n \n   if (bitwidth > HOST_BITS_PER_WIDE_INT)\n-    return bitwidth;\n+    return 1;\n \n   sig = significant_bits (x, mode);\n   return sig == GET_MODE_MASK (mode) ? 1 : bitwidth - floor_log2 (sig) - 1;"}]}