{"sha": "58611fb6fa0c1bab4ea0f77df43df67e9a9d19b0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTg2MTFmYjZmYTBjMWJhYjRlYTBmNzdkZjQzZGY2N2U5YTlkMTliMA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2014-11-19T03:03:39Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2014-11-19T03:03:39Z"}, "message": "constexpr.c (cxx_eval_statement_list): Handle statement-expressions.\n\n\t* constexpr.c (cxx_eval_statement_list): Handle statement-expressions.\n\t(potential_constant_expression_1): Handle STMT_EXPR.\n\nFrom-SVN: r217748", "tree": {"sha": "cd8ae560dce79dc74b40373f9f077326735f1a2f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cd8ae560dce79dc74b40373f9f077326735f1a2f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/58611fb6fa0c1bab4ea0f77df43df67e9a9d19b0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58611fb6fa0c1bab4ea0f77df43df67e9a9d19b0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/58611fb6fa0c1bab4ea0f77df43df67e9a9d19b0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58611fb6fa0c1bab4ea0f77df43df67e9a9d19b0/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5a80468364379cac7ba08f369bb7556ba5f7a5f8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a80468364379cac7ba08f369bb7556ba5f7a5f8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5a80468364379cac7ba08f369bb7556ba5f7a5f8"}], "stats": {"total": 36, "additions": 30, "deletions": 6}, "files": [{"sha": "32f2c6f330083eabb7c6ae57eaf6f729a2e865c8", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58611fb6fa0c1bab4ea0f77df43df67e9a9d19b0/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58611fb6fa0c1bab4ea0f77df43df67e9a9d19b0/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=58611fb6fa0c1bab4ea0f77df43df67e9a9d19b0", "patch": "@@ -1,5 +1,8 @@\n 2014-11-18  Jason Merrill  <jason@redhat.com>\n \n+\t* constexpr.c (cxx_eval_statement_list): Handle statement-expressions.\n+\t(potential_constant_expression_1): Handle STMT_EXPR.\n+\n \t* constexpr.c (cxx_eval_constant_expression): Give jump_target a\n \tdefault argument.\n \t(lots): Omit NULL jump_target arguments."}, {"sha": "1b330a048dfd903baafaf52a96a3cb05d302c1ea", "filename": "gcc/cp/constexpr.c", "status": "modified", "additions": 15, "deletions": 6, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58611fb6fa0c1bab4ea0f77df43df67e9a9d19b0/gcc%2Fcp%2Fconstexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58611fb6fa0c1bab4ea0f77df43df67e9a9d19b0/gcc%2Fcp%2Fconstexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fconstexpr.c?ref=58611fb6fa0c1bab4ea0f77df43df67e9a9d19b0", "patch": "@@ -2685,6 +2685,14 @@ cxx_eval_statement_list (const constexpr_ctx *ctx, tree t,\n {\n   tree_stmt_iterator i;\n   tree_stmt_iterator default_label = tree_stmt_iterator();\n+  tree local_target;\n+  /* In a statement-expression we want to return the last value.  */\n+  tree r = NULL_TREE;\n+  if (!jump_target)\n+    {\n+      local_target = NULL_TREE;\n+      jump_target = &local_target;\n+    }\n   for (i = tsi_start (t); !tsi_end_p (i); tsi_next (&i))\n     {\n     reenter:\n@@ -2699,10 +2707,9 @@ cxx_eval_statement_list (const constexpr_ctx *ctx, tree t,\n \t  else\n \t    continue;\n \t}\n-      cxx_eval_constant_expression (ctx, stmt,\n-\t\t\t\t    false,\n-\t\t\t\t    non_constant_p, overflow_p,\n-\t\t\t\t    jump_target);\n+      r = cxx_eval_constant_expression (ctx, stmt, false,\n+\t\t\t\t\tnon_constant_p, overflow_p,\n+\t\t\t\t\tjump_target);\n       if (*non_constant_p)\n \tbreak;\n       if (returns (jump_target) || breaks (jump_target))\n@@ -2714,7 +2721,7 @@ cxx_eval_statement_list (const constexpr_ctx *ctx, tree t,\n       *jump_target = NULL_TREE;\n       goto reenter;\n     }\n-  return NULL_TREE;\n+  return r;\n }\n \n /* Evaluate a LOOP_EXPR for side-effects.  Handles break and return\n@@ -3885,6 +3892,9 @@ potential_constant_expression_1 (tree t, bool want_rval, tsubst_flags_t flags)\n \treturn false;\n       return true;\n \n+    case STMT_EXPR:\n+      return potential_constant_expression_1 (STMT_EXPR_STMT (t), rval, flags);\n+\n     case LAMBDA_EXPR:\n     case DYNAMIC_CAST_EXPR:\n     case PSEUDO_DTOR_EXPR:\n@@ -3900,7 +3910,6 @@ potential_constant_expression_1 (tree t, bool want_rval, tsubst_flags_t flags)\n       /* GCC internal stuff.  */\n     case VA_ARG_EXPR:\n     case OBJ_TYPE_REF:\n-    case STMT_EXPR:\n     case TRANSACTION_EXPR:\n     case ASM_EXPR:\n     fail:"}, {"sha": "34ca9fa997455bf9403d45f16b8d30d223e8e951", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-stmtexpr2.C", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58611fb6fa0c1bab4ea0f77df43df67e9a9d19b0/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-stmtexpr2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58611fb6fa0c1bab4ea0f77df43df67e9a9d19b0/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-stmtexpr2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-stmtexpr2.C?ref=58611fb6fa0c1bab4ea0f77df43df67e9a9d19b0", "patch": "@@ -0,0 +1,12 @@\n+// { dg-do compile { target c++11 } }\n+// { dg-options \"\" }\n+\n+#define SA(X) static_assert((X),#X)\n+\n+template <class T>\n+constexpr T f (T t)\n+{\n+  return ({ t+1; });\n+}\n+\n+SA(f(42) == 43);"}]}