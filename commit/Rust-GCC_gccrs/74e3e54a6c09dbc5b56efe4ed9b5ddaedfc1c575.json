{"sha": "74e3e54a6c09dbc5b56efe4ed9b5ddaedfc1c575", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzRlM2U1NGE2YzA5ZGJjNWI1NmVmZTRlZDliNWRkYWVkZmMxYzU3NQ==", "commit": {"author": {"name": "Hans-Peter Nilsson", "email": "hp@axis.com", "date": "2005-11-12T07:12:09Z"}, "committer": {"name": "Hans-Peter Nilsson", "email": "hp@gcc.gnu.org", "date": "2005-11-12T07:12:09Z"}, "message": "recog.c (constrain_operands): For a match, require that a non-register matches general_operand when strict >= 0.\n\n\t* recog.c (constrain_operands) <case 'g'>: For a match, require\n\tthat a non-register matches general_operand when strict >= 0.\n\nFrom-SVN: r106821", "tree": {"sha": "13d1b5b48d40ed6fe25f4f0451bff9e312f1d737", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/13d1b5b48d40ed6fe25f4f0451bff9e312f1d737"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/74e3e54a6c09dbc5b56efe4ed9b5ddaedfc1c575", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/74e3e54a6c09dbc5b56efe4ed9b5ddaedfc1c575", "html_url": "https://github.com/Rust-GCC/gccrs/commit/74e3e54a6c09dbc5b56efe4ed9b5ddaedfc1c575", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/74e3e54a6c09dbc5b56efe4ed9b5ddaedfc1c575/comments", "author": {"login": "hpataxisdotcom", "id": 80339731, "node_id": "MDQ6VXNlcjgwMzM5NzMx", "avatar_url": "https://avatars.githubusercontent.com/u/80339731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hpataxisdotcom", "html_url": "https://github.com/hpataxisdotcom", "followers_url": "https://api.github.com/users/hpataxisdotcom/followers", "following_url": "https://api.github.com/users/hpataxisdotcom/following{/other_user}", "gists_url": "https://api.github.com/users/hpataxisdotcom/gists{/gist_id}", "starred_url": "https://api.github.com/users/hpataxisdotcom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hpataxisdotcom/subscriptions", "organizations_url": "https://api.github.com/users/hpataxisdotcom/orgs", "repos_url": "https://api.github.com/users/hpataxisdotcom/repos", "events_url": "https://api.github.com/users/hpataxisdotcom/events{/privacy}", "received_events_url": "https://api.github.com/users/hpataxisdotcom/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "516ebd44865ef872178e6003100d241d3dd39237", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/516ebd44865ef872178e6003100d241d3dd39237", "html_url": "https://github.com/Rust-GCC/gccrs/commit/516ebd44865ef872178e6003100d241d3dd39237"}], "stats": {"total": 25, "additions": 18, "deletions": 7}, "files": [{"sha": "f539184d3b0edc0082e7777bf3a2db72ef768452", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e3e54a6c09dbc5b56efe4ed9b5ddaedfc1c575/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e3e54a6c09dbc5b56efe4ed9b5ddaedfc1c575/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=74e3e54a6c09dbc5b56efe4ed9b5ddaedfc1c575", "patch": "@@ -1,3 +1,8 @@\n+2005-11-12  Hans-Peter Nilsson  <hp@axis.com>\n+\n+\t* recog.c (constrain_operands) <case 'g'>: For a match, require\n+\tthat a non-register matches general_operand when strict >= 0.\n+\n 2005-11-11  Steven Bosscher  <stevenb@suse.de>\n \n \t* loop-invariant.c (move_loop_invariants): Fix a thinko in the"}, {"sha": "16bb280d857cb0cab6b9c69ff08e9d8b3e5b60d3", "filename": "gcc/recog.c", "status": "modified", "additions": 13, "deletions": 7, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e3e54a6c09dbc5b56efe4ed9b5ddaedfc1c575/gcc%2Frecog.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e3e54a6c09dbc5b56efe4ed9b5ddaedfc1c575/gcc%2Frecog.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frecog.c?ref=74e3e54a6c09dbc5b56efe4ed9b5ddaedfc1c575", "patch": "@@ -2429,16 +2429,22 @@ constrain_operands (int strict)\n \t\tbreak;\n \n \t\t/* No need to check general_operand again;\n-\t\t   it was done in insn-recog.c.  */\n+\t\t   it was done in insn-recog.c.  Well, except that reload\n+\t\t   doesn't check the validity of its replacements, but\n+\t\t   that should only matter when there's a bug.  */\n \t      case 'g':\n \t\t/* Anything goes unless it is a REG and really has a hard reg\n \t\t   but the hard reg is not in the class GENERAL_REGS.  */\n-\t\tif (strict < 0\n-\t\t    || GENERAL_REGS == ALL_REGS\n-\t\t    || !REG_P (op)\n-\t\t    || (reload_in_progress\n-\t\t\t&& REGNO (op) >= FIRST_PSEUDO_REGISTER)\n-\t\t    || reg_fits_class_p (op, GENERAL_REGS, offset, mode))\n+\t\tif (REG_P (op))\n+\t\t  {\n+\t\t    if (strict < 0\n+\t\t\t|| GENERAL_REGS == ALL_REGS\n+\t\t\t|| (reload_in_progress\n+\t\t\t    && REGNO (op) >= FIRST_PSEUDO_REGISTER)\n+\t\t\t|| reg_fits_class_p (op, GENERAL_REGS, offset, mode))\n+\t\t      win = 1;\n+\t\t  }\n+\t\telse if (strict < 0 || general_operand (op, mode))\n \t\t  win = 1;\n \t\tbreak;\n "}]}