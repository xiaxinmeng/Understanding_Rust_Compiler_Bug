{"sha": "c73a5e94e8ab35d592b5335aabbb27433be082d9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzczYTVlOTRlOGFiMzVkNTkyYjUzMzVhYWJiYjI3NDMzYmUwODJkOQ==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2002-01-09T11:02:07Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2002-01-09T11:02:07Z"}, "message": "m32r.c (move_src_operand): Fix 32-bit int test.\n\n        * config/m32r/m32r.c (move_src_operand): Fix 32-bit int test.\n        * config/m32r/m32r.md (and ior xor splitters): Swap operands\n        to match insn patterns.\n\nFrom-SVN: r48679", "tree": {"sha": "d9eaa3c02200ecda1b4ca6631f63e1451c9f27c2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d9eaa3c02200ecda1b4ca6631f63e1451c9f27c2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c73a5e94e8ab35d592b5335aabbb27433be082d9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c73a5e94e8ab35d592b5335aabbb27433be082d9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c73a5e94e8ab35d592b5335aabbb27433be082d9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c73a5e94e8ab35d592b5335aabbb27433be082d9/comments", "author": null, "committer": null, "parents": [{"sha": "9dee8c457021445d58dc2d4769a48c7b9f9a5879", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9dee8c457021445d58dc2d4769a48c7b9f9a5879", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9dee8c457021445d58dc2d4769a48c7b9f9a5879"}], "stats": {"total": 20, "additions": 16, "deletions": 4}, "files": [{"sha": "65dc90f93cb98bcad2e77b21b7efeda3497516eb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c73a5e94e8ab35d592b5335aabbb27433be082d9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c73a5e94e8ab35d592b5335aabbb27433be082d9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c73a5e94e8ab35d592b5335aabbb27433be082d9", "patch": "@@ -1,3 +1,9 @@\n+2002-01-09  Richard Henderson  <rth@redhat.com>\n+\n+\t* config/m32r/m32r.c (move_src_operand): Fix 32-bit int test.\n+\t* config/m32r/m32r.md (and ior xor splitters): Swap operands\n+\tto match insn patterns.\n+\n 2002-01-09  Richard Henderson  <rth@redhat.com>\n \n \t* regrename.c (find_oldest_value_reg): Use gen_rtx_raw_REG."}, {"sha": "9ae218e1d061ee0a99d1dbab9b3662d9f4a86acf", "filename": "gcc/config/m32r/m32r.c", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c73a5e94e8ab35d592b5335aabbb27433be082d9/gcc%2Fconfig%2Fm32r%2Fm32r.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c73a5e94e8ab35d592b5335aabbb27433be082d9/gcc%2Fconfig%2Fm32r%2Fm32r.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm32r%2Fm32r.c?ref=c73a5e94e8ab35d592b5335aabbb27433be082d9", "patch": "@@ -793,7 +793,13 @@ move_src_operand (op, mode)\n \t loadable with one insn, and split the rest into two.  The instances\n \t where this would help should be rare and the current way is\n \t simpler.  */\n-      return UINT32_P (INTVAL (op));\n+      if (HOST_BITS_PER_WIDE_INT > 32)\n+\t{\n+\t  HOST_WIDE_INT rest = INTVAL (op) >> 31;\n+\t  return (rest == 0 || rest == -1);\n+\t}\n+      else\n+\treturn 1;\n     case LABEL_REF :\n       return TARGET_ADDR24;\n     case CONST_DOUBLE :"}, {"sha": "a8e28db0ba987a9128ad5faff6f190b237e7fc07", "filename": "gcc/config/m32r/m32r.md", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c73a5e94e8ab35d592b5335aabbb27433be082d9/gcc%2Fconfig%2Fm32r%2Fm32r.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c73a5e94e8ab35d592b5335aabbb27433be082d9/gcc%2Fconfig%2Fm32r%2Fm32r.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm32r%2Fm32r.md?ref=c73a5e94e8ab35d592b5335aabbb27433be082d9", "patch": "@@ -1032,7 +1032,7 @@\n \t\t(match_operand:SI 2 \"int8_operand\" \"\")))]\n   \"optimize_size && m32r_not_same_reg (operands[0], operands[1])\"\n   [(set (match_dup 0) (match_dup 2))\n-   (set (match_dup 0) (and:SI (match_dup 1) (match_dup 0)))]\n+   (set (match_dup 0) (and:SI (match_dup 0) (match_dup 1)))]\n   \"\")\n \n (define_insn \"iorsi3\"\n@@ -1064,7 +1064,7 @@\n \t\t(match_operand:SI 2 \"int8_operand\" \"\")))]\n   \"optimize_size && m32r_not_same_reg (operands[0], operands[1])\"\n   [(set (match_dup 0) (match_dup 2))\n-   (set (match_dup 0) (ior:SI (match_dup 1) (match_dup 0)))]\n+   (set (match_dup 0) (ior:SI (match_dup 0) (match_dup 1)))]\n   \"\")\n \n (define_insn \"xorsi3\"\n@@ -1096,7 +1096,7 @@\n \t\t(match_operand:SI 2 \"int8_operand\" \"\")))]\n   \"optimize_size && m32r_not_same_reg (operands[0], operands[1])\"\n   [(set (match_dup 0) (match_dup 2))\n-   (set (match_dup 0) (xor:SI (match_dup 1) (match_dup 0)))]\n+   (set (match_dup 0) (xor:SI (match_dup 0) (match_dup 1)))]\n   \"\")\n \n (define_insn \"negsi2\""}]}