{"sha": "6239665976be7829cb973b4b59f7575d7079058e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjIzOTY2NTk3NmJlNzgyOWNiOTczYjRiNTlmNzU3NWQ3MDc5MDU4ZQ==", "commit": {"author": {"name": "Matthew Malcomson", "email": "matthew.malcomson@arm.com", "date": "2019-11-15T12:10:56Z"}, "committer": {"name": "Matthew Malcomson", "email": "matmal01@gcc.gnu.org", "date": "2019-11-15T12:10:56Z"}, "message": "[mid-end][__RTL] Set global epilogue_completed in skip_pass\n\nSet global epilogue_completed when skipping pro_and_epilogue pass\n\nWhen compiling RTL functions marked to start at a pass after the reload\npass, `skip_pass` is used to mark the reload pass as having completed\nsince many patterns use the `reload_completed` variable to determine\nwhether to run or not.\n\nHere we do the same for the `epilogue_completed` variable and the\npro_and_epilogue pass.\n\nAlso include a testcase that relies on the availability of a\ndefine_split in the aarch64 backend that is conditioned on this\n`epilogue_completed` variable.\n\nregtest done on native aarch64\nregtest done on native x64_86\n\ngcc/ChangeLog:\n\n2019-11-15  Matthew Malcomson  <matthew.malcomson@arm.com>\n\n\t* passes.c (skip_pass): Set epilogue_completed if skipping the\n\tpro_and_epilogue pass.\n\ngcc/testsuite/ChangeLog:\n\n2019-11-15  Matthew Malcomson  <matthew.malcomson@arm.com>\n\n\t* gcc.dg/rtl/aarch64/test-epilogue-set.c: New test.\n\nFrom-SVN: r278285", "tree": {"sha": "8dbd3ba7dd436ede97a53b55f801e2307dbcf136", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8dbd3ba7dd436ede97a53b55f801e2307dbcf136"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6239665976be7829cb973b4b59f7575d7079058e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6239665976be7829cb973b4b59f7575d7079058e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6239665976be7829cb973b4b59f7575d7079058e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6239665976be7829cb973b4b59f7575d7079058e/comments", "author": {"login": "mmalcomson", "id": 57484298, "node_id": "MDQ6VXNlcjU3NDg0Mjk4", "avatar_url": "https://avatars.githubusercontent.com/u/57484298?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mmalcomson", "html_url": "https://github.com/mmalcomson", "followers_url": "https://api.github.com/users/mmalcomson/followers", "following_url": "https://api.github.com/users/mmalcomson/following{/other_user}", "gists_url": "https://api.github.com/users/mmalcomson/gists{/gist_id}", "starred_url": "https://api.github.com/users/mmalcomson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mmalcomson/subscriptions", "organizations_url": "https://api.github.com/users/mmalcomson/orgs", "repos_url": "https://api.github.com/users/mmalcomson/repos", "events_url": "https://api.github.com/users/mmalcomson/events{/privacy}", "received_events_url": "https://api.github.com/users/mmalcomson/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8916ba874dae00edc04face497360ce4eb3ea95b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8916ba874dae00edc04face497360ce4eb3ea95b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8916ba874dae00edc04face497360ce4eb3ea95b"}], "stats": {"total": 39, "additions": 39, "deletions": 0}, "files": [{"sha": "2f9325289a295648e4150ef09cd8561e6672ed23", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6239665976be7829cb973b4b59f7575d7079058e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6239665976be7829cb973b4b59f7575d7079058e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6239665976be7829cb973b4b59f7575d7079058e", "patch": "@@ -1,3 +1,8 @@\n+2019-11-15  Matthew Malcomson  <matthew.malcomson@arm.com>\n+\n+\t* passes.c (skip_pass): Set epilogue_completed if skipping the\n+\tpro_and_epilogue pass.\n+\n 2019-11-15  Matthew Malcomson  <matthew.malcomson@arm.com>\n \n \t* passes.c (should_skip_pass_p): Always run \"dfinish\"."}, {"sha": "331570ec844133953705035a50a29992f7b152ca", "filename": "gcc/passes.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6239665976be7829cb973b4b59f7575d7079058e/gcc%2Fpasses.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6239665976be7829cb973b4b59f7575d7079058e/gcc%2Fpasses.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpasses.c?ref=6239665976be7829cb973b4b59f7575d7079058e", "patch": "@@ -2400,6 +2400,11 @@ skip_pass (opt_pass *pass)\n   if (strcmp (pass->name, \"reload\") == 0)\n     reload_completed = 1;\n \n+  /* Similar for pass \"pro_and_epilogue\" and the \"epilogue_completed\" global\n+     variable.  */\n+  if (strcmp (pass->name, \"pro_and_epilogue\") == 0)\n+    epilogue_completed = 1;\n+\n   /* The INSN_ADDRESSES vec is normally set up by\n      shorten_branches; set it up for the benefit of passes that\n      run after this.  */"}, {"sha": "11a446cd9bea8a4b60b5f57df04236193e5544c3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6239665976be7829cb973b4b59f7575d7079058e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6239665976be7829cb973b4b59f7575d7079058e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6239665976be7829cb973b4b59f7575d7079058e", "patch": "@@ -1,3 +1,7 @@\n+2019-11-15  Matthew Malcomson  <matthew.malcomson@arm.com>\n+\n+\t* gcc.dg/rtl/aarch64/test-epilogue-set.c: New test.\n+\n 2019-11-15  Matthew Malcomson  <matthew.malcomson@arm.com>\n \n \t* gcc.dg/rtl/aarch64/missed-pass-error.c: New test."}, {"sha": "e0b893c066771493c0b71bf70efa9e454f5c8131", "filename": "gcc/testsuite/gcc.dg/rtl/aarch64/test-epilogue-set.c", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6239665976be7829cb973b4b59f7575d7079058e/gcc%2Ftestsuite%2Fgcc.dg%2Frtl%2Faarch64%2Ftest-epilogue-set.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6239665976be7829cb973b4b59f7575d7079058e/gcc%2Ftestsuite%2Fgcc.dg%2Frtl%2Faarch64%2Ftest-epilogue-set.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Frtl%2Faarch64%2Ftest-epilogue-set.c?ref=6239665976be7829cb973b4b59f7575d7079058e", "patch": "@@ -0,0 +1,25 @@\n+/* { dg-do compile { target aarch64-*-* } } */\n+\n+/*\n+   Should compile rather than ICE.\n+   Compilation requires setting the \"epilogue_completed\" variable.\n+ */\n+int __RTL (startwith (\"cprop_hardreg\"))\n+f ()\n+{\n+(function \"f\"\n+  (insn-chain\n+    (block 2\n+      (edge-from entry (flags \"FALLTHRU\"))\n+      (cnote 6 [bb 2] NOTE_INSN_BASIC_BLOCK)\n+      (cinsn 100 (set (reg:DI x0)\n+\t\t  (plus:DI\n+\t\t   (reg:DI x1)\n+\t\t   (const_int 16777213))))\n+      ;; Extra insn, to avoid all of the above from being deleted by DCE\n+      (cinsn 10 (use (reg/i:DI x0)))\n+      (edge-to exit (flags \"FALLTHRU\"))\n+    ) ;; block 2\n+  ) ;; insn-chain\n+) ;; function\n+}"}]}