{"sha": "717702e6ae295db205aa7d8d72e79e05e37dbe3b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzE3NzAyZTZhZTI5NWRiMjA1YWE3ZDhkNzJlNzllMDVlMzdkYmUzYg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1992-04-04T09:43:06Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1992-04-04T09:43:06Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r680", "tree": {"sha": "b26c96172af2a3db15afe6b76bba365289122a4f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b26c96172af2a3db15afe6b76bba365289122a4f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/717702e6ae295db205aa7d8d72e79e05e37dbe3b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/717702e6ae295db205aa7d8d72e79e05e37dbe3b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/717702e6ae295db205aa7d8d72e79e05e37dbe3b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/717702e6ae295db205aa7d8d72e79e05e37dbe3b/comments", "author": null, "committer": null, "parents": [{"sha": "ec2343c4327b6ec874518138fef47f998d94c602", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec2343c4327b6ec874518138fef47f998d94c602", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ec2343c4327b6ec874518138fef47f998d94c602"}], "stats": {"total": 11, "additions": 4, "deletions": 7}, "files": [{"sha": "78a0e5f44cf4a2dacf828b514d8652fce0084be3", "filename": "gcc/expmed.c", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/717702e6ae295db205aa7d8d72e79e05e37dbe3b/gcc%2Fexpmed.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/717702e6ae295db205aa7d8d72e79e05e37dbe3b/gcc%2Fexpmed.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpmed.c?ref=717702e6ae295db205aa7d8d72e79e05e37dbe3b", "patch": "@@ -341,9 +341,8 @@ store_bit_field (str_rtx, bitsize, bitnum, fieldmode, value, align, total_size)\n \t  if (GET_MODE (op0) == BLKmode\n \t      || GET_MODE_SIZE (GET_MODE (op0)) > GET_MODE_SIZE (maxmode))\n \t    bestmode\n-\t      = get_best_mode (bitsize, bitnum,\n-\t\t\t       align * BITS_PER_UNIT, maxmode,\n-\t\t\t       GET_CODE (op0) == MEM && MEM_VOLATILE_P (op0));\n+\t      = get_best_mode (bitsize, bitnum, align * BITS_PER_UNIT, maxmode,\n+\t\t\t       MEM_VOLATILE_P (op0));\n \t  else\n \t    bestmode = GET_MODE (op0);\n \n@@ -914,8 +913,7 @@ extract_bit_field (str_rtx, bitsize, bitnum, unsignedp,\n \t\t\t  > GET_MODE_SIZE (maxmode)))\n \t\t    bestmode = get_best_mode (bitsize, bitnum,\n \t\t\t\t\t      align * BITS_PER_UNIT, maxmode,\n-\t\t\t\t\t      (GET_CODE (xop0) == MEM\n-\t\t\t\t\t       && MEM_VOLATILE_P (xop0)));\n+\t\t\t\t\t      MEM_VOLATILE_P (xop0));\n \t\t  else\n \t\t    bestmode = GET_MODE (xop0);\n \n@@ -1042,8 +1040,7 @@ extract_bit_field (str_rtx, bitsize, bitnum, unsignedp,\n \t\t\t  > GET_MODE_SIZE (maxmode)))\n \t\t    bestmode = get_best_mode (bitsize, bitnum,\n \t\t\t\t\t      align * BITS_PER_UNIT, maxmode,\n-\t\t\t\t\t      (GET_CODE (xop0) == MEM\n-\t\t\t\t\t       && MEM_VOLATILE_P (xop0)));\n+\t\t\t\t\t      MEM_VOLATILE_P (xop0));\n \t\t  else\n \t\t    bestmode = GET_MODE (xop0);\n "}]}