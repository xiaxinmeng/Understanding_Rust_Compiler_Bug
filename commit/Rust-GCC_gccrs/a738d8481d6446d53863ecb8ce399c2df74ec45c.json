{"sha": "a738d8481d6446d53863ecb8ce399c2df74ec45c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTczOGQ4NDgxZDY0NDZkNTM4NjNlY2I4Y2UzOTljMmRmNzRlYzQ1Yw==", "commit": {"author": {"name": "Richard Sandiford", "email": "rsandifo@redhat.com", "date": "2005-01-28T13:57:29Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2005-01-28T13:57:29Z"}, "message": "frv.c (bdesc_2arg): Remove __MDPACKH.\n\n\t* config/frv/frv.c (bdesc_2arg): Remove __MDPACKH.\n\t(frv_init_builtins): Change its prototype to take 4 uhalf arguments.\n\t(frv_expand_mdpackh_builtin): New function.\n\t(frv_expand_builtin): Use it to expand __MDPACKH.\n\t* config/frv/media.h (__MDPACKH): Update prototype.\n\t* doc/extend.texi (__MDPACKH): Update documentation.\n\nFrom-SVN: r94371", "tree": {"sha": "bae69aa080719321b1e8cc17167680244499c1ca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bae69aa080719321b1e8cc17167680244499c1ca"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a738d8481d6446d53863ecb8ce399c2df74ec45c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a738d8481d6446d53863ecb8ce399c2df74ec45c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a738d8481d6446d53863ecb8ce399c2df74ec45c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a738d8481d6446d53863ecb8ce399c2df74ec45c/comments", "author": null, "committer": null, "parents": [{"sha": "f8023b78462af97c3fe7a6b7786a9c19c82107d9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8023b78462af97c3fe7a6b7786a9c19c82107d9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f8023b78462af97c3fe7a6b7786a9c19c82107d9"}], "stats": {"total": 81, "additions": 79, "deletions": 2}, "files": [{"sha": "326c8609d6b8bb8e410d8c0c857b012cb749ecaf", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a738d8481d6446d53863ecb8ce399c2df74ec45c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a738d8481d6446d53863ecb8ce399c2df74ec45c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a738d8481d6446d53863ecb8ce399c2df74ec45c", "patch": "@@ -1,3 +1,12 @@\n+2005-01-28  Richard Sandiford  <rsandifo@redhat.com>\n+\n+\t* config/frv/frv.c (bdesc_2arg): Remove __MDPACKH.\n+\t(frv_init_builtins): Change its prototype to take 4 uhalf arguments.\n+\t(frv_expand_mdpackh_builtin): New function.\n+\t(frv_expand_builtin): Use it to expand __MDPACKH.\n+\t* config/frv/media.h (__MDPACKH): Update prototype.\n+\t* doc/extend.texi (__MDPACKH): Update documentation.\n+\n 2005-01-28  Uros Bizjak  <uros@kss-loka.si>\n \n \t* config/i386/i386.c (ix86_expand_fp_absneg_operator): Use"}, {"sha": "da3266ad3d5437fb9f7cb5b2b6186623fd36c120", "filename": "gcc/config/frv/frv.c", "status": "modified", "additions": 50, "deletions": 2, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a738d8481d6446d53863ecb8ce399c2df74ec45c/gcc%2Fconfig%2Ffrv%2Ffrv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a738d8481d6446d53863ecb8ce399c2df74ec45c/gcc%2Fconfig%2Ffrv%2Ffrv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ffrv%2Ffrv.c?ref=a738d8481d6446d53863ecb8ce399c2df74ec45c", "patch": "@@ -9349,7 +9349,6 @@ static struct builtin_description bdesc_2arg[] =\n   { CODE_FOR_mqsubhss, \"__MQSUBHSS\", FRV_BUILTIN_MQSUBHSS, 0, 0 },\n   { CODE_FOR_mqsubhus, \"__MQSUBHUS\", FRV_BUILTIN_MQSUBHUS, 0, 0 },\n   { CODE_FOR_mpackh, \"__MPACKH\", FRV_BUILTIN_MPACKH, 0, 0 },\n-  { CODE_FOR_mdpackh, \"__MDPACKH\", FRV_BUILTIN_MDPACKH, 0, 0 },\n   { CODE_FOR_mcop1, \"__Mcop1\", FRV_BUILTIN_MCOP1, 0, 0 },\n   { CODE_FOR_mcop2, \"__Mcop2\", FRV_BUILTIN_MCOP2, 0, 0 },\n   { CODE_FOR_mwcut, \"__MWCUT\", FRV_BUILTIN_MWCUT, 0, 0 },\n@@ -9494,6 +9493,12 @@ frv_init_builtins (void)\n \t\t\t    tree_cons (NULL_TREE, T2, \\\n \t\t\t    tree_cons (NULL_TREE, T3, endlink))))\n \n+#define QUAD(RET, T1, T2, T3, T4) \\\n+  build_function_type (RET, tree_cons (NULL_TREE, T1, \\\n+\t\t\t    tree_cons (NULL_TREE, T2, \\\n+\t\t\t    tree_cons (NULL_TREE, T3, \\\n+\t\t\t    tree_cons (NULL_TREE, T4, endlink)))))\n+\n   tree void_ftype_void = build_function_type (voidt, endlink);\n \n   tree void_ftype_acc = UNARY (voidt, accumulator);\n@@ -9527,6 +9532,7 @@ frv_init_builtins (void)\n   tree uw2_ftype_uw2_uw2 = BINARY (uword2, uword2, uword2);\n   tree uw2_ftype_uw2_int = BINARY (uword2, uword2, integer);\n   tree uw2_ftype_acc_int = BINARY (uword2, accumulator, integer);\n+  tree uw2_ftype_uh_uh_uh_uh = QUAD (uword2, uhalf, uhalf, uhalf, uhalf);\n \n   tree sw2_ftype_sw2_sw2 = BINARY (sword2, sword2, sword2);\n   tree sw2_ftype_sw2_int   = BINARY (sword2, sword2, integer);\n@@ -9589,7 +9595,7 @@ frv_init_builtins (void)\n   def_builtin (\"__MEXPDHD\", uw2_ftype_uw1_int, FRV_BUILTIN_MEXPDHD);\n   def_builtin (\"__MPACKH\", uw1_ftype_uh_uh, FRV_BUILTIN_MPACKH);\n   def_builtin (\"__MUNPACKH\", uw2_ftype_uw1, FRV_BUILTIN_MUNPACKH);\n-  def_builtin (\"__MDPACKH\", uw2_ftype_uw2_uw2, FRV_BUILTIN_MDPACKH);\n+  def_builtin (\"__MDPACKH\", uw2_ftype_uh_uh_uh_uh, FRV_BUILTIN_MDPACKH);\n   def_builtin (\"__MDUNPACKH\", void_ftype_uw4_uw2, FRV_BUILTIN_MDUNPACKH);\n   def_builtin (\"__MBTOH\", uw2_ftype_uw1, FRV_BUILTIN_MBTOH);\n   def_builtin (\"__MHTOB\", uw1_ftype_uw2, FRV_BUILTIN_MHTOB);\n@@ -9648,6 +9654,7 @@ frv_init_builtins (void)\n #undef UNARY\n #undef BINARY\n #undef TRINARY\n+#undef QUAD\n }\n \n /* Set the names for various arithmetic operations according to the\n@@ -10116,6 +10123,44 @@ frv_expand_voidaccop_builtin (enum insn_code icode, tree arglist)\n   return NULL_RTX;\n }\n \n+/* Expand the MDPACKH builtin.  It takes four unsigned short arguments and\n+   each argument forms one word of the two double-word input registers.\n+   ARGLIST is a TREE_LIST of the arguments and TARGET, if nonnull,\n+   suggests a good place to put the return value.  */\n+\n+static rtx\n+frv_expand_mdpackh_builtin (tree arglist, rtx target)\n+{\n+  enum insn_code icode = CODE_FOR_mdpackh;\n+  rtx pat, op0, op1;\n+  rtx arg1 = frv_read_argument (&arglist);\n+  rtx arg2 = frv_read_argument (&arglist);\n+  rtx arg3 = frv_read_argument (&arglist);\n+  rtx arg4 = frv_read_argument (&arglist);\n+\n+  target = frv_legitimize_target (icode, target);\n+  op0 = gen_reg_rtx (DImode);\n+  op1 = gen_reg_rtx (DImode);\n+\n+  /* The high half of each word is not explicitly initialised, so indicate\n+     that the input operands are not live before this point.  */\n+  emit_insn (gen_rtx_CLOBBER (DImode, op0));\n+  emit_insn (gen_rtx_CLOBBER (DImode, op1));\n+\n+  /* Move each argument into the low half of its associated input word.  */\n+  emit_move_insn (simplify_gen_subreg (HImode, op0, DImode, 2), arg1);\n+  emit_move_insn (simplify_gen_subreg (HImode, op0, DImode, 6), arg2);\n+  emit_move_insn (simplify_gen_subreg (HImode, op1, DImode, 2), arg3);\n+  emit_move_insn (simplify_gen_subreg (HImode, op1, DImode, 6), arg4);\n+\n+  pat = GEN_FCN (icode) (target, op0, op1);\n+  if (! pat)\n+    return NULL_RTX;\n+\n+  emit_insn (pat);\n+  return target;\n+}\n+\n /* Expand the MCLRACC builtin.  This builtin takes a single accumulator\n    number as argument.  */\n \n@@ -10343,6 +10388,9 @@ frv_expand_builtin (tree exp,\n     case FRV_BUILTIN_MWTACCG:\n       return frv_expand_mwtacc_builtin (CODE_FOR_mwtaccg, arglist);\n \n+    case FRV_BUILTIN_MDPACKH:\n+      return frv_expand_mdpackh_builtin (arglist, target);\n+\n     case FRV_BUILTIN_IACCreadll:\n       {\n \trtx src = frv_read_iacc_argument (DImode, &arglist);"}, {"sha": "fb96e266324622b1e1c98f620861326ab69010bb", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a738d8481d6446d53863ecb8ce399c2df74ec45c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a738d8481d6446d53863ecb8ce399c2df74ec45c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a738d8481d6446d53863ecb8ce399c2df74ec45c", "patch": "@@ -1,3 +1,7 @@\n+2005-01-28  Richard Sandiford  <rsandifo@redhat.com>\n+\n+\t* gcc.target/frv/all-mdpackh-1.c: New test.\n+\n 2005-01-26  Steven Bosscher  <stevenb@suse.de>\n \n \t* gcc.dg/tree-ssa/20030711-2.c: Run at -O2, not -O1."}, {"sha": "83742377388ce632b9f1b047c2a8c6669607b942", "filename": "gcc/testsuite/gcc.target/frv/all-mdpackh-1.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a738d8481d6446d53863ecb8ce399c2df74ec45c/gcc%2Ftestsuite%2Fgcc.target%2Ffrv%2Fall-mdpackh-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a738d8481d6446d53863ecb8ce399c2df74ec45c/gcc%2Ftestsuite%2Fgcc.target%2Ffrv%2Fall-mdpackh-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Ffrv%2Fall-mdpackh-1.c?ref=a738d8481d6446d53863ecb8ce399c2df74ec45c", "patch": "@@ -0,0 +1,16 @@\n+/* Test the new (Fujitsu-compatible) __MDPACKH() interface.  */\n+/* { dg-do run } */\n+extern void exit (int);\n+extern void abort (void);\n+\n+unsigned short x[] = { 0x8765, 0x1234, 0x2222, 0xeeee };\n+\n+int\n+main ()\n+{\n+  if (__MDPACKH (x[0], x[1], x[2], x[3]) != 0x876522221234eeeeULL)\n+    abort ();\n+  if (__MDPACKH (0x1111, 0x8001, 0xeeee, 0x7002) != 0x1111eeee80017002ULL)\n+    abort ();\n+  exit (0);\n+}"}]}