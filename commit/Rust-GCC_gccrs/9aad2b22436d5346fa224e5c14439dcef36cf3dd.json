{"sha": "9aad2b22436d5346fa224e5c14439dcef36cf3dd", "node_id": "C_kwDOANBUbNoAKDlhYWQyYjIyNDM2ZDUzNDZmYTIyNGU1YzE0NDM5ZGNlZjM2Y2YzZGQ", "commit": {"author": {"name": "Takayuki 'January June' Suwa", "email": "jjsuwa_sys3175@yahoo.co.jp", "date": "2022-05-13T13:33:59Z"}, "committer": {"name": "Max Filippov", "email": "jcmvbkbc@gmail.com", "date": "2022-05-27T04:55:01Z"}, "message": "xtensa: Improve bswap[sd]i2 insn patterns\n\nThis patch makes bswap[sd]i2 better register allocation, and reconstructs\nbswapsi2 in order to take advantage of GIMPLE manual byte-swapping\nrecognition.\n\ngcc/ChangeLog:\n\n\t* config/xtensa/xtensa.md (bswapsi2): New expansion pattern.\n\t(bswapsi2_internal): Revise the template and condition, and add\n\tdetection code for preceding the same insn in order to omit a\n\t\"SSAI 8\" instruction of the latter.\n\t(bswapdi2): Suppress built-in insn expansion with the corresponding\n\tlibrary call when optimizing for size.\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.target/xtensa/bswap.c: Remove test.\n\t* gcc.target/xtensa/bswap-O1.c: New.\n\t* gcc.target/xtensa/bswap-O2.c: Ditto.\n\t* gcc.target/xtensa/bswap-Os.c: Ditto.", "tree": {"sha": "e6ff7162be5e9985613ebdbe41d859fe692a1613", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e6ff7162be5e9985613ebdbe41d859fe692a1613"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9aad2b22436d5346fa224e5c14439dcef36cf3dd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9aad2b22436d5346fa224e5c14439dcef36cf3dd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9aad2b22436d5346fa224e5c14439dcef36cf3dd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9aad2b22436d5346fa224e5c14439dcef36cf3dd/comments", "author": {"login": "jjsuwa-sys3175", "id": 73290592, "node_id": "MDQ6VXNlcjczMjkwNTky", "avatar_url": "https://avatars.githubusercontent.com/u/73290592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jjsuwa-sys3175", "html_url": "https://github.com/jjsuwa-sys3175", "followers_url": "https://api.github.com/users/jjsuwa-sys3175/followers", "following_url": "https://api.github.com/users/jjsuwa-sys3175/following{/other_user}", "gists_url": "https://api.github.com/users/jjsuwa-sys3175/gists{/gist_id}", "starred_url": "https://api.github.com/users/jjsuwa-sys3175/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jjsuwa-sys3175/subscriptions", "organizations_url": "https://api.github.com/users/jjsuwa-sys3175/orgs", "repos_url": "https://api.github.com/users/jjsuwa-sys3175/repos", "events_url": "https://api.github.com/users/jjsuwa-sys3175/events{/privacy}", "received_events_url": "https://api.github.com/users/jjsuwa-sys3175/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jcmvbkbc", "id": 166731, "node_id": "MDQ6VXNlcjE2NjczMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/166731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jcmvbkbc", "html_url": "https://github.com/jcmvbkbc", "followers_url": "https://api.github.com/users/jcmvbkbc/followers", "following_url": "https://api.github.com/users/jcmvbkbc/following{/other_user}", "gists_url": "https://api.github.com/users/jcmvbkbc/gists{/gist_id}", "starred_url": "https://api.github.com/users/jcmvbkbc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jcmvbkbc/subscriptions", "organizations_url": "https://api.github.com/users/jcmvbkbc/orgs", "repos_url": "https://api.github.com/users/jcmvbkbc/repos", "events_url": "https://api.github.com/users/jcmvbkbc/events{/privacy}", "received_events_url": "https://api.github.com/users/jcmvbkbc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6454b4a8f5d90dd355c3c7e31a592a439223b645", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6454b4a8f5d90dd355c3c7e31a592a439223b645", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6454b4a8f5d90dd355c3c7e31a592a439223b645"}], "stats": {"total": 202, "additions": 172, "deletions": 30}, "files": [{"sha": "6f5cbc541d856a50b70f4929a512fcb6d88ad3db", "filename": "gcc/config/xtensa/xtensa.md", "status": "modified", "additions": 61, "deletions": 16, "changes": 77, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9aad2b22436d5346fa224e5c14439dcef36cf3dd/gcc%2Fconfig%2Fxtensa%2Fxtensa.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9aad2b22436d5346fa224e5c14439dcef36cf3dd/gcc%2Fconfig%2Fxtensa%2Fxtensa.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fxtensa%2Fxtensa.md?ref=9aad2b22436d5346fa224e5c14439dcef36cf3dd", "patch": "@@ -471,23 +471,68 @@\n \f\n ;; Byte swap.\n \n-(define_insn \"bswapsi2\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"=&a\")\n-\t(bswap:SI (match_operand:SI 1 \"register_operand\" \"r\")))]\n-  \"!optimize_size\"\n-  \"ssai\\t8\\;srli\\t%0, %1, 16\\;src\\t%0, %0, %1\\;src\\t%0, %0, %0\\;src\\t%0, %1, %0\"\n-  [(set_attr \"type\"\t\"arith\")\n-   (set_attr \"mode\"\t\"SI\")\n-   (set_attr \"length\"\t\"15\")])\n+(define_expand \"bswapsi2\"\n+  [(set (match_operand:SI 0 \"register_operand\" \"\")\n+        (bswap:SI (match_operand:SI 1 \"register_operand\" \"\")))]\n+  \"!optimize_debug && optimize > 1\"\n+{\n+  /* GIMPLE manual byte-swapping recognition is now activated.\n+     For both built-in and manual bswaps, emit corresponding library call\n+     if optimizing for size, or a series of dedicated machine instructions\n+     if otherwise.  */\n+  if (optimize_size)\n+    emit_library_call_value (optab_libfunc (bswap_optab, SImode),\n+\t\t\t     operands[0], LCT_NORMAL, SImode,\n+\t\t\t     operands[1], SImode);\n+  else\n+    emit_insn (gen_bswapsi2_internal (operands[0], operands[1]));\n+  DONE;\n+})\n \n-(define_insn \"bswapdi2\"\n-  [(set (match_operand:DI 0 \"register_operand\" \"=&a\")\n-\t(bswap:DI (match_operand:DI 1 \"register_operand\" \"r\")))]\n-  \"!optimize_size\"\n-  \"ssai\\t8\\;srli\\t%0, %D1, 16\\;src\\t%0, %0, %D1\\;src\\t%0, %0, %0\\;src\\t%0, %D1, %0\\;srli\\t%D0, %1, 16\\;src\\t%D0, %D0, %1\\;src\\t%D0, %D0, %D0\\;src\\t%D0, %1, %D0\"\n-  [(set_attr \"type\"\t\"arith\")\n-   (set_attr \"mode\"\t\"DI\")\n-   (set_attr \"length\"\t\"27\")])\n+(define_insn \"bswapsi2_internal\"\n+  [(set (match_operand:SI 0 \"register_operand\" \"=a,&a\")\n+\t(bswap:SI (match_operand:SI 1 \"register_operand\" \"0,r\")))\n+   (clobber (match_scratch:SI 2 \"=&a,X\"))]\n+  \"!optimize_debug && optimize > 1 && !optimize_size\"\n+{\n+  rtx_insn *prev_insn = prev_nonnote_nondebug_insn (insn);\n+  const char *init = \"ssai\\t8\\;\";\n+  static char result[64];\n+  if (prev_insn && NONJUMP_INSN_P (prev_insn))\n+    {\n+      rtx x = PATTERN (prev_insn);\n+      if (GET_CODE (x) == PARALLEL && XVECLEN (x, 0) == 2\n+\t  && GET_CODE (XVECEXP (x, 0, 0)) == SET\n+\t  && GET_CODE (XVECEXP (x, 0, 1)) == CLOBBER)\n+\t{\n+\t  x = XEXP (XVECEXP (x, 0, 0), 1);\n+\t  if (GET_CODE (x) == BSWAP && GET_MODE (x) == SImode)\n+\t    init = \"\";\n+\t}\n+    }\n+  sprintf (result,\n+\t   (which_alternative == 0)\n+\t   ? \"%s\" \"srli\\t%%2, %%1, 16\\;src\\t%%2, %%2, %%1\\;src\\t%%2, %%2, %%2\\;src\\t%%0, %%1, %%2\"\n+\t   : \"%s\" \"srli\\t%%0, %%1, 16\\;src\\t%%0, %%0, %%1\\;src\\t%%0, %%0, %%0\\;src\\t%%0, %%1, %%0\",\n+\t   init);\n+  return result;\n+}\n+   [(set_attr \"type\"\t\"arith,arith\")\n+    (set_attr \"mode\"\t\"SI\")\n+    (set_attr \"length\"\t\"15,15\")])\n+\n+(define_expand \"bswapdi2\"\n+  [(set (match_operand:DI 0 \"register_operand\" \"\")\n+\t(bswap:DI (match_operand:DI 1 \"register_operand\" \"\")))]\n+  \"!optimize_debug && optimize > 1 && optimize_size\"\n+{\n+  /* Replace with a single DImode library call.\n+     Without this, two SImode library calls are emitted.  */\n+  emit_library_call_value (optab_libfunc (bswap_optab, DImode),\n+\t\t\t   operands[0], LCT_NORMAL, DImode,\n+\t\t\t   operands[1], DImode);\n+  DONE;\n+})\n \n \f\n ;; Negation and one's complement."}, {"sha": "a0c885baaf1ea659de452af9fc1681c3df81e09d", "filename": "gcc/testsuite/gcc.target/xtensa/bswap-O1.c", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9aad2b22436d5346fa224e5c14439dcef36cf3dd/gcc%2Ftestsuite%2Fgcc.target%2Fxtensa%2Fbswap-O1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9aad2b22436d5346fa224e5c14439dcef36cf3dd/gcc%2Ftestsuite%2Fgcc.target%2Fxtensa%2Fbswap-O1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fxtensa%2Fbswap-O1.c?ref=9aad2b22436d5346fa224e5c14439dcef36cf3dd", "patch": "@@ -0,0 +1,37 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O1\" } */\n+\n+unsigned int test_0(unsigned int a)\n+{\n+  return (a & 0x000000FF) << 24 |\n+         (a & 0x0000FF00) << 8  |\n+         (a & 0x00FF0000) >> 8  |\n+         (a & 0xFF000000) >> 24;\n+}\n+\n+unsigned int test_1(unsigned int a)\n+{\n+  union\n+  {\n+    unsigned int i;\n+    unsigned char a[4];\n+  } u, v;\n+  u.i = a;\n+  v.a[0] = u.a[3];\n+  v.a[1] = u.a[2];\n+  v.a[2] = u.a[1];\n+  v.a[3] = u.a[0];\n+  return v.i;\n+}\n+\n+unsigned int test_2(unsigned int a)\n+{\n+  return __builtin_bswap32(a);\n+}\n+\n+unsigned long long test_3(unsigned long long a)\n+{\n+  return __builtin_bswap64(a);\n+}\n+\n+/* { dg-final { scan-assembler-times \"call\" 2 } } */"}, {"sha": "4cf95b9255c2b991059a40dbb5c38d566c71152a", "filename": "gcc/testsuite/gcc.target/xtensa/bswap-O2.c", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9aad2b22436d5346fa224e5c14439dcef36cf3dd/gcc%2Ftestsuite%2Fgcc.target%2Fxtensa%2Fbswap-O2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9aad2b22436d5346fa224e5c14439dcef36cf3dd/gcc%2Ftestsuite%2Fgcc.target%2Fxtensa%2Fbswap-O2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fxtensa%2Fbswap-O2.c?ref=9aad2b22436d5346fa224e5c14439dcef36cf3dd", "patch": "@@ -0,0 +1,37 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+\n+unsigned int test_0(unsigned int a)\n+{\n+  return (a & 0x000000FF) << 24 |\n+         (a & 0x0000FF00) << 8  |\n+         (a & 0x00FF0000) >> 8  |\n+         (a & 0xFF000000) >> 24;\n+}\n+\n+unsigned int test_1(unsigned int a)\n+{\n+  union\n+  {\n+    unsigned int i;\n+    unsigned char a[4];\n+  } u, v;\n+  u.i = a;\n+  v.a[0] = u.a[3];\n+  v.a[1] = u.a[2];\n+  v.a[2] = u.a[1];\n+  v.a[3] = u.a[0];\n+  return v.i;\n+}\n+\n+unsigned int test_2(unsigned int a)\n+{\n+  return __builtin_bswap32(a);\n+}\n+\n+unsigned long long test_3(unsigned long long a)\n+{\n+  return __builtin_bswap64(a);\n+}\n+\n+/* { dg-final { scan-assembler-times \"ssai\" 4 } } */"}, {"sha": "1e010fd62ae96b364393f64b1e229992518cb44c", "filename": "gcc/testsuite/gcc.target/xtensa/bswap-Os.c", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9aad2b22436d5346fa224e5c14439dcef36cf3dd/gcc%2Ftestsuite%2Fgcc.target%2Fxtensa%2Fbswap-Os.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9aad2b22436d5346fa224e5c14439dcef36cf3dd/gcc%2Ftestsuite%2Fgcc.target%2Fxtensa%2Fbswap-Os.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fxtensa%2Fbswap-Os.c?ref=9aad2b22436d5346fa224e5c14439dcef36cf3dd", "patch": "@@ -0,0 +1,37 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-Os\" } */\n+\n+unsigned int test_0(unsigned int a)\n+{\n+  return (a & 0x000000FF) << 24 |\n+         (a & 0x0000FF00) << 8  |\n+         (a & 0x00FF0000) >> 8  |\n+         (a & 0xFF000000) >> 24;\n+}\n+\n+unsigned int test_1(unsigned int a)\n+{\n+  union\n+  {\n+    unsigned int i;\n+    unsigned char a[4];\n+  } u, v;\n+  u.i = a;\n+  v.a[0] = u.a[3];\n+  v.a[1] = u.a[2];\n+  v.a[2] = u.a[1];\n+  v.a[3] = u.a[0];\n+  return v.i;\n+}\n+\n+unsigned int test_2(unsigned int a)\n+{\n+  return __builtin_bswap32(a);\n+}\n+\n+unsigned long long test_3(unsigned long long a)\n+{\n+  return __builtin_bswap64(a);\n+}\n+\n+/* { dg-final { scan-assembler-times \"call\" 4 } } */"}, {"sha": "057a3569703f045b31b7fd73a03768daf31537bb", "filename": "gcc/testsuite/gcc.target/xtensa/bswap.c", "status": "removed", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6454b4a8f5d90dd355c3c7e31a592a439223b645/gcc%2Ftestsuite%2Fgcc.target%2Fxtensa%2Fbswap.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6454b4a8f5d90dd355c3c7e31a592a439223b645/gcc%2Ftestsuite%2Fgcc.target%2Fxtensa%2Fbswap.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fxtensa%2Fbswap.c?ref=6454b4a8f5d90dd355c3c7e31a592a439223b645", "patch": "@@ -1,14 +0,0 @@\n-/* { dg-do compile } */\n-/* { dg-options \"-O1\" } */\n-\n-unsigned long f32(unsigned long v)\n-{\n-  return __builtin_bswap32(v);\n-}\n-\n-unsigned long long f64(unsigned long long v)\n-{\n-  return __builtin_bswap64(v);\n-}\n-\n-/* { dg-final { scan-assembler-times \"ssai\" 2 } } */"}]}