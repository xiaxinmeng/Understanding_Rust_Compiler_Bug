{"sha": "5889e842ae4df48ac471c47d6ed72e05041a1db8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTg4OWU4NDJhZTRkZjQ4YWM0NzFjNDdkNmVkNzJlMDUwNDFhMWRiOA==", "commit": {"author": {"name": "David Edelsohn", "email": "dje.gcc@gmail.com", "date": "2021-08-25T21:41:50Z"}, "committer": {"name": "David Edelsohn", "email": "dje.gcc@gmail.com", "date": "2021-08-26T23:13:39Z"}, "message": "rs6000: inline ldouble __gcc_qsub\n\nWhile performing some tests of IEEE 128 float for PPC64LE, Michael\nMeissner noticed that __gcc_qsub is substantially slower than\n__gcc_qadd.  __gcc_qsub calls __gcc_add with the second operand\nnegated.  Because the functions normally are invoked through\nlibgcc shared object, the extra PLT overhead has a large impact\non the overall time of the function.  This patch converts\n__gcc_qadd to a static inline function invoked by __gcc_qadd\nand __gcc_qsub.\n\nlibgcc/ChangeLog:\n\n\t* config/rs6000/ibm-ldouble.c (ldouble_qadd_internal): Rename from\n\t__gcc_qadd.\n\t(__gcc_qadd): Call ldouble_qadd_internal.\n\t(__gcc_qsub): Call ldouble_qadd_internal with second long double\n\targument negated.", "tree": {"sha": "4d8c5d9550326852a893567dd05af10ecb1850b9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4d8c5d9550326852a893567dd05af10ecb1850b9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5889e842ae4df48ac471c47d6ed72e05041a1db8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5889e842ae4df48ac471c47d6ed72e05041a1db8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5889e842ae4df48ac471c47d6ed72e05041a1db8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5889e842ae4df48ac471c47d6ed72e05041a1db8/comments", "author": {"login": "edelsohn", "id": 667700, "node_id": "MDQ6VXNlcjY2NzcwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/667700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edelsohn", "html_url": "https://github.com/edelsohn", "followers_url": "https://api.github.com/users/edelsohn/followers", "following_url": "https://api.github.com/users/edelsohn/following{/other_user}", "gists_url": "https://api.github.com/users/edelsohn/gists{/gist_id}", "starred_url": "https://api.github.com/users/edelsohn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edelsohn/subscriptions", "organizations_url": "https://api.github.com/users/edelsohn/orgs", "repos_url": "https://api.github.com/users/edelsohn/repos", "events_url": "https://api.github.com/users/edelsohn/events{/privacy}", "received_events_url": "https://api.github.com/users/edelsohn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "edelsohn", "id": 667700, "node_id": "MDQ6VXNlcjY2NzcwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/667700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edelsohn", "html_url": "https://github.com/edelsohn", "followers_url": "https://api.github.com/users/edelsohn/followers", "following_url": "https://api.github.com/users/edelsohn/following{/other_user}", "gists_url": "https://api.github.com/users/edelsohn/gists{/gist_id}", "starred_url": "https://api.github.com/users/edelsohn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edelsohn/subscriptions", "organizations_url": "https://api.github.com/users/edelsohn/orgs", "repos_url": "https://api.github.com/users/edelsohn/repos", "events_url": "https://api.github.com/users/edelsohn/events{/privacy}", "received_events_url": "https://api.github.com/users/edelsohn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5a6c626710ad2ac4baa2dba02fac0750177e3305", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a6c626710ad2ac4baa2dba02fac0750177e3305", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5a6c626710ad2ac4baa2dba02fac0750177e3305"}], "stats": {"total": 14, "additions": 10, "deletions": 4}, "files": [{"sha": "0b385aa940bc5f094392880551b67c1d18325d72", "filename": "libgcc/config/rs6000/ibm-ldouble.c", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5889e842ae4df48ac471c47d6ed72e05041a1db8/libgcc%2Fconfig%2Frs6000%2Fibm-ldouble.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5889e842ae4df48ac471c47d6ed72e05041a1db8/libgcc%2Fconfig%2Frs6000%2Fibm-ldouble.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Frs6000%2Fibm-ldouble.c?ref=5889e842ae4df48ac471c47d6ed72e05041a1db8", "patch": "@@ -118,8 +118,8 @@ pack_ldouble (double dh, double dl)\n }\n \n /* Add two 'IBM128_TYPE' values and return the result.\t*/\n-IBM128_TYPE\n-__gcc_qadd (double a, double aa, double c, double cc)\n+static inline IBM128_TYPE\n+ldouble_qadd_internal (double a, double aa, double c, double cc)\n {\n   double xh, xl, z, q, zz;\n \n@@ -158,9 +158,15 @@ __gcc_qadd (double a, double aa, double c, double cc)\n }\n \n IBM128_TYPE\n-__gcc_qsub (double a, double b, double c, double d)\n+__gcc_qadd (double a, double aa, double c, double cc)\n+{\n+  return ldouble_qadd_internal (a, aa, c, cc);\n+}\n+\n+IBM128_TYPE\n+__gcc_qsub (double a, double aa, double c, double cc)\n {\n-  return __gcc_qadd (a, b, -c, -d);\n+  return ldouble_qadd_internal (a, aa, -c, -cc);\n }\n \n #ifdef __NO_FPRS__"}]}