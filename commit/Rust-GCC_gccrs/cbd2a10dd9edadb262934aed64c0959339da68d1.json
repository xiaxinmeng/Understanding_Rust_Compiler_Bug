{"sha": "cbd2a10dd9edadb262934aed64c0959339da68d1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2JkMmExMGRkOWVkYWRiMjYyOTM0YWVkNjRjMDk1OTMzOWRhNjhkMQ==", "commit": {"author": {"name": "Haijian Zhang", "email": "z.zhanghaijian@huawei.com", "date": "2020-04-24T00:56:25Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2020-04-24T09:25:38Z"}, "message": "rtl combine should consider NaNs when generate fp min/max [PR94708]\n\n    As discussed on PR94708, it's unsafe for rtl combine to generate fp\n    min/max under -funsafe-math-optimizations, considering NaNs. In\n    addition to flag_unsafe_math_optimizations check, we also need to\n    do extra mode feature testing here: && !HONOR_NANS (mode)\n    && !HONOR_SIGNED_ZEROS (mode)\n\n    2020-04-24  Haijian Zhang <z.zhanghaijian@huawei.com>\n\n    gcc/\n\tPR rtl-optimization/94708\n\t* combine.c (simplify_if_then_else): Add check for\n\t!HONOR_NANS (mode) && !HONOR_SIGNED_ZEROS (mode).\n    gcc/testsuite/\n\tPR fortran/94708\n\t* gfortran.dg/pr94708.f90: New test.", "tree": {"sha": "7907278cac6c08c1adff8e654207b05d24dc7fd8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7907278cac6c08c1adff8e654207b05d24dc7fd8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cbd2a10dd9edadb262934aed64c0959339da68d1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cbd2a10dd9edadb262934aed64c0959339da68d1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cbd2a10dd9edadb262934aed64c0959339da68d1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cbd2a10dd9edadb262934aed64c0959339da68d1/comments", "author": null, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6f6c79920883f3fc301a4acc0544ed5a130bf7c5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f6c79920883f3fc301a4acc0544ed5a130bf7c5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6f6c79920883f3fc301a4acc0544ed5a130bf7c5"}], "stats": {"total": 29, "additions": 28, "deletions": 1}, "files": [{"sha": "6032e681d7fde41f5eeb907fdc267fb0e80c14d3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cbd2a10dd9edadb262934aed64c0959339da68d1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cbd2a10dd9edadb262934aed64c0959339da68d1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cbd2a10dd9edadb262934aed64c0959339da68d1", "patch": "@@ -1,3 +1,9 @@\n+2020-04-24  Haijian Zhang <z.zhanghaijian@huawei.com>\n+\n+\tPR rtl-optimization/94708\n+\t* combine.c (simplify_if_then_else): Add check for\n+\t!HONOR_NANS (mode) && !HONOR_SIGNED_ZEROS (mode).\n+\n 2020-04-23  Martin Sebor  <msebor@redhat.com>\n \n \tPR driver/90983"}, {"sha": "4c324f38660807432ce2873cce18d5b398b5d4b3", "filename": "gcc/combine.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cbd2a10dd9edadb262934aed64c0959339da68d1/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cbd2a10dd9edadb262934aed64c0959339da68d1/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=cbd2a10dd9edadb262934aed64c0959339da68d1", "patch": "@@ -6643,7 +6643,10 @@ simplify_if_then_else (rtx x)\n \n   /* Look for MIN or MAX.  */\n \n-  if ((! FLOAT_MODE_P (mode) || flag_unsafe_math_optimizations)\n+  if ((! FLOAT_MODE_P (mode)\n+       || (flag_unsafe_math_optimizations\n+\t   && !HONOR_NANS (mode)\n+\t   && !HONOR_SIGNED_ZEROS (mode)))\n       && comparison_p\n       && rtx_equal_p (XEXP (cond, 0), true_rtx)\n       && rtx_equal_p (XEXP (cond, 1), false_rtx)"}, {"sha": "4b1e9e11e7c852f31b2c122d357d6f3cc8c10c9a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cbd2a10dd9edadb262934aed64c0959339da68d1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cbd2a10dd9edadb262934aed64c0959339da68d1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=cbd2a10dd9edadb262934aed64c0959339da68d1", "patch": "@@ -1,3 +1,8 @@\n+2020-04-24  Haijian Zhang <z.zhanghaijian@huawei.com>\n+\n+\tPR rtl-optimization/94708\n+\t* gfortran.dg/pr94708.f90: New test.\n+\n 2020-04-23  David Edelsohn  <dje.gcc@gmail.com>\n \n \t* gcc.dg/torture/pr90020.c: Skip on AIX."}, {"sha": "9b5f1389f09c17c2eb2520fe665177e65e625763", "filename": "gcc/testsuite/gfortran.dg/pr94708.f90", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cbd2a10dd9edadb262934aed64c0959339da68d1/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr94708.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cbd2a10dd9edadb262934aed64c0959339da68d1/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr94708.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr94708.f90?ref=cbd2a10dd9edadb262934aed64c0959339da68d1", "patch": "@@ -0,0 +1,13 @@\n+! { dg-do compile { target aarch64*-*-* } }\n+! { dg-options \"-O2 -funsafe-math-optimizations -fdump-rtl-combine\" }\n+\n+subroutine f(vara,varb,varc,res)\n+      REAL, INTENT(IN) :: vara,varb,varc\n+      REAL, INTENT(out) :: res\n+\n+      res = vara\n+      if (res .lt. varb)  res = varb\n+      if (res .gt. varc)  res = varc\n+end subroutine\n+\n+! { dg-final { scan-rtl-dump-not \"smin\" \"combine\" } }"}]}