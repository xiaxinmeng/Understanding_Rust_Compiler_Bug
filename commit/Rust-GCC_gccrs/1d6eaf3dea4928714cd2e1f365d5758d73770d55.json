{"sha": "1d6eaf3dea4928714cd2e1f365d5758d73770d55", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWQ2ZWFmM2RlYTQ5Mjg3MTRjZDJlMWYzNjVkNTc1OGQ3Mzc3MGQ1NQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-03-19T01:04:00Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-03-19T01:04:00Z"}, "message": "(emit_store_flag): If expanding (GE X 0) will need two insns, don't use subtarget for the result of the first insn.\n\n(emit_store_flag): If expanding (GE X 0) will need two\ninsns, don't use subtarget for the result of the first insn.\nMove a likely constant to the start of a condition.\n\nFrom-SVN: r11562", "tree": {"sha": "35bbbca056243ef9c4413906dee4cebe83d54f9a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/35bbbca056243ef9c4413906dee4cebe83d54f9a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1d6eaf3dea4928714cd2e1f365d5758d73770d55", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d6eaf3dea4928714cd2e1f365d5758d73770d55", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1d6eaf3dea4928714cd2e1f365d5758d73770d55", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d6eaf3dea4928714cd2e1f365d5758d73770d55/comments", "author": null, "committer": null, "parents": [{"sha": "7b7e56373edf1e0df722cc44a0380b2ee01c9e12", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b7e56373edf1e0df722cc44a0380b2ee01c9e12", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7b7e56373edf1e0df722cc44a0380b2ee01c9e12"}], "stats": {"total": 6, "additions": 4, "deletions": 2}, "files": [{"sha": "ec392e7aa7396b16928952cdfb1476ec9b9d8d3c", "filename": "gcc/expmed.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d6eaf3dea4928714cd2e1f365d5758d73770d55/gcc%2Fexpmed.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d6eaf3dea4928714cd2e1f365d5758d73770d55/gcc%2Fexpmed.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpmed.c?ref=1d6eaf3dea4928714cd2e1f365d5758d73770d55", "patch": "@@ -3955,9 +3955,11 @@ emit_store_flag (target, code, op0, op1, mode, unsignedp, normalizep)\n \tsubtarget = 0;\n \n       if (code == GE)\n-\top0 = expand_unop (mode, one_cmpl_optab, op0, subtarget, 0);\n+\top0 = expand_unop (mode, one_cmpl_optab, op0,\n+\t\t\t   ((STORE_FLAG_VALUE == 1 || normalizep)\n+\t\t\t    ? 0 : subtarget), 0);\n \n-      if (normalizep || STORE_FLAG_VALUE == 1)\n+      if (STORE_FLAG_VALUE == 1 || normalizep)\n \t/* If we are supposed to produce a 0/1 value, we want to do\n \t   a logical shift from the sign bit to the low-order bit; for\n \t   a -1/0 value, we do an arithmetic shift.  */"}]}