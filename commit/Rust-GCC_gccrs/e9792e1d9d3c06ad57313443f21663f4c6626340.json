{"sha": "e9792e1d9d3c06ad57313443f21663f4c6626340", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTk3OTJlMWQ5ZDNjMDZhZDU3MzEzNDQzZjIxNjYzZjRjNjYyNjM0MA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2013-12-16T10:34:28Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2013-12-16T10:34:28Z"}, "message": "re PR libgomp/58756 (FAIL: libgomp.c/pr58392.c execution test)\n\n\tPR libgomp/58756\n\t* omp-low.c (lower_rec_input_clauses) <case OMP_CLAUSE_REDUCTION>: For\n\treductions without placeholder if is_simd, but when not using\n\tGOMP_SIMD* internal calls, also perform the reduction operation\n\ton the outer var rather than simple assignment.\n\n\t* testsuite/libgomp.c/pr58756.c: New test.\n\nFrom-SVN: r206011", "tree": {"sha": "868a7ab834e32006cd4680082ed892580ab32dfa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/868a7ab834e32006cd4680082ed892580ab32dfa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e9792e1d9d3c06ad57313443f21663f4c6626340", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9792e1d9d3c06ad57313443f21663f4c6626340", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e9792e1d9d3c06ad57313443f21663f4c6626340", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9792e1d9d3c06ad57313443f21663f4c6626340/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "cc7937daac03527ce477cad65d0ae20faa87efc3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc7937daac03527ce477cad65d0ae20faa87efc3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cc7937daac03527ce477cad65d0ae20faa87efc3"}], "stats": {"total": 94, "additions": 86, "deletions": 8}, "files": [{"sha": "a3821a88a805c1cb2b0370b9469651b82933296b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9792e1d9d3c06ad57313443f21663f4c6626340/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9792e1d9d3c06ad57313443f21663f4c6626340/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e9792e1d9d3c06ad57313443f21663f4c6626340", "patch": "@@ -1,4 +1,13 @@\n+2013-12-16  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR libgomp/58756\n+\t* omp-low.c (lower_rec_input_clauses) <case OMP_CLAUSE_REDUCTION>: For\n+\treductions without placeholder if is_simd, but when not using\n+\tGOMP_SIMD* internal calls, also perform the reduction operation\n+\ton the outer var rather than simple assignment.\n+\n 2013-12-16  Yuri Rumyantsev  <ysrumyan@gmail.com>\n+\n \t* config/i386/i386.c (slm_cost): Fix imul cost for HI.\n \n 2013-12-16  Jakub Jelinek  <jakub@redhat.com>"}, {"sha": "97092dd089479993de65b535ec9a404c894430da", "filename": "gcc/omp-low.c", "status": "modified", "additions": 14, "deletions": 8, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9792e1d9d3c06ad57313443f21663f4c6626340/gcc%2Fomp-low.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9792e1d9d3c06ad57313443f21663f4c6626340/gcc%2Fomp-low.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fomp-low.c?ref=e9792e1d9d3c06ad57313443f21663f4c6626340", "patch": "@@ -3565,20 +3565,21 @@ lower_rec_input_clauses (tree clauses, gimple_seq *ilist, gimple_seq *dlist,\n \t\t{\n \t\t  x = omp_reduction_init (c, TREE_TYPE (new_var));\n \t\t  gcc_assert (TREE_CODE (TREE_TYPE (new_var)) != ARRAY_TYPE);\n+\t\t  enum tree_code code = OMP_CLAUSE_REDUCTION_CODE (c);\n+\n+\t\t  /* reduction(-:var) sums up the partial results, so it\n+\t\t     acts identically to reduction(+:var).  */\n+\t\t  if (code == MINUS_EXPR)\n+\t\t    code = PLUS_EXPR;\n+\n \t\t  if (is_simd\n \t\t      && lower_rec_simd_input_clauses (new_var, ctx, max_vf,\n \t\t\t\t\t\t       idx, lane, ivar, lvar))\n \t\t    {\n-\t\t      enum tree_code code = OMP_CLAUSE_REDUCTION_CODE (c);\n \t\t      tree ref = build_outer_var_ref (var, ctx);\n \n \t\t      gimplify_assign (unshare_expr (ivar), x, &llist[0]);\n \n-\t\t      /* reduction(-:var) sums up the partial results, so it\n-\t\t\t acts identically to reduction(+:var).  */\n-\t\t      if (code == MINUS_EXPR)\n-\t\t\tcode = PLUS_EXPR;\n-\n \t\t      x = build2 (code, TREE_TYPE (ref), ref, ivar);\n \t\t      ref = build_outer_var_ref (var, ctx);\n \t\t      gimplify_assign (ref, x, &llist[1]);\n@@ -3587,8 +3588,13 @@ lower_rec_input_clauses (tree clauses, gimple_seq *ilist, gimple_seq *dlist,\n \t\t    {\n \t\t      gimplify_assign (new_var, x, ilist);\n \t\t      if (is_simd)\n-\t\t\tgimplify_assign (build_outer_var_ref (var, ctx),\n-\t\t\t\t\t new_var, dlist);\n+\t\t\t{\n+\t\t\t  tree ref = build_outer_var_ref (var, ctx);\n+\n+\t\t\t  x = build2 (code, TREE_TYPE (ref), ref, new_var);\n+\t\t\t  ref = build_outer_var_ref (var, ctx);\n+\t\t\t  gimplify_assign (ref, x, dlist);\n+\t\t\t}\n \t\t    }\n \t\t}\n \t      break;"}, {"sha": "566a4c1275205570e7f3ab4fa13e110f1e9a5ac2", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9792e1d9d3c06ad57313443f21663f4c6626340/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9792e1d9d3c06ad57313443f21663f4c6626340/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=e9792e1d9d3c06ad57313443f21663f4c6626340", "patch": "@@ -1,3 +1,8 @@\n+2013-12-16  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR libgomp/58756\n+\t* testsuite/libgomp.c/pr58756.c: New test.\n+\n 2013-12-12  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR libgomp/59467"}, {"sha": "d35ea792e8d2394902f0f4de7ac3286ea32da20f", "filename": "libgomp/testsuite/libgomp.c/pr58756.c", "status": "added", "additions": 58, "deletions": 0, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9792e1d9d3c06ad57313443f21663f4c6626340/libgomp%2Ftestsuite%2Flibgomp.c%2Fpr58756.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9792e1d9d3c06ad57313443f21663f4c6626340/libgomp%2Ftestsuite%2Flibgomp.c%2Fpr58756.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.c%2Fpr58756.c?ref=e9792e1d9d3c06ad57313443f21663f4c6626340", "patch": "@@ -0,0 +1,58 @@\n+/* PR libgomp/58756 */\n+/* { dg-do run } */\n+/* { dg-options \"-O2\" } */\n+/* { dg-additional-options \"-msse2\" { target sse2_runtime } } */\n+/* { dg-additional-options \"-mavx\" { target avx_runtime } } */\n+\n+extern void abort (void);\n+int d[32 * 32];\n+\n+__attribute__((noinline, noclone)) int\n+foo (int a, int b)\n+{\n+  int j, c = 0;\n+  #pragma omp parallel for reduction(+: c)\n+    for (j = 0; j < a; j += 32)\n+      {\n+\tint l;\n+\t#pragma omp simd reduction(+: c) safelen(1)\n+\t  for (l = 0; l < b; ++l)\n+\t    c += d[j + l];\n+      }\n+  return c;\n+}\n+\n+__attribute__((noinline, noclone)) int\n+bar (int a)\n+{\n+  int j, c = 0;\n+  #pragma omp parallel for simd reduction(+: c) safelen(1)\n+    for (j = 0; j < a; ++j)\n+      c += d[j];\n+  return c;\n+}\n+\n+__attribute__((noinline)) static int\n+baz (int a)\n+{\n+  int j, c = 0;\n+  #pragma omp simd reduction(+: c) safelen(1)\n+    for (j = 0; j < a; ++j)\n+      c += d[j];\n+  return c;\n+}\n+\n+int\n+main ()\n+{\n+  int i;\n+  for (i = 0; i < 32 * 32; i++)\n+    d[i] = (i & 31);\n+  if (foo (32 * 32, 32) != (31 * 32 / 2) * 32)\n+    abort ();\n+  if (bar (32 * 32) != (31 * 32 / 2) * 32)\n+    abort ();\n+  if (baz (32 * 32) != (31 * 32 / 2) * 32)\n+    abort ();\n+  return 0;\n+}"}]}