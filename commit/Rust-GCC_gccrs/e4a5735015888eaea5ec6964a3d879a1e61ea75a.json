{"sha": "e4a5735015888eaea5ec6964a3d879a1e61ea75a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTRhNTczNTAxNTg4OGVhZWE1ZWM2OTY0YTNkODc5YTFlNjFlYTc1YQ==", "commit": {"author": {"name": "Thomas Preud'homme", "email": "thomas.preudhomme@arm.com", "date": "2015-01-06T11:51:16Z"}, "committer": {"name": "Thomas Preud'homme", "email": "thopre01@gcc.gnu.org", "date": "2015-01-06T11:51:16Z"}, "message": "re PR tree-optimization/63259 (Detecting byteswap sequence)\n\n2015-01-06  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n\n    gcc/\n    PR tree-optimization/63259\n    * tree-ssa-math-opts.c (pass_optimize_bswap::execute): Stop checking\n    if optab exists for 16bit byteswap.\n\nFrom-SVN: r219256", "tree": {"sha": "2d75dee25b815b763b4547ef9bd964c6dffd3b22", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2d75dee25b815b763b4547ef9bd964c6dffd3b22"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e4a5735015888eaea5ec6964a3d879a1e61ea75a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e4a5735015888eaea5ec6964a3d879a1e61ea75a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e4a5735015888eaea5ec6964a3d879a1e61ea75a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e4a5735015888eaea5ec6964a3d879a1e61ea75a/comments", "author": {"login": "RoboTux", "id": 272327, "node_id": "MDQ6VXNlcjI3MjMyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/272327?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RoboTux", "html_url": "https://github.com/RoboTux", "followers_url": "https://api.github.com/users/RoboTux/followers", "following_url": "https://api.github.com/users/RoboTux/following{/other_user}", "gists_url": "https://api.github.com/users/RoboTux/gists{/gist_id}", "starred_url": "https://api.github.com/users/RoboTux/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RoboTux/subscriptions", "organizations_url": "https://api.github.com/users/RoboTux/orgs", "repos_url": "https://api.github.com/users/RoboTux/repos", "events_url": "https://api.github.com/users/RoboTux/events{/privacy}", "received_events_url": "https://api.github.com/users/RoboTux/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "02169d7807750eba35013a832975df24bf309384", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02169d7807750eba35013a832975df24bf309384", "html_url": "https://github.com/Rust-GCC/gccrs/commit/02169d7807750eba35013a832975df24bf309384"}], "stats": {"total": 25, "additions": 9, "deletions": 16}, "files": [{"sha": "4b3d6caec038599e5837f63b2ff0b4bd66763712", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4a5735015888eaea5ec6964a3d879a1e61ea75a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4a5735015888eaea5ec6964a3d879a1e61ea75a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e4a5735015888eaea5ec6964a3d879a1e61ea75a", "patch": "@@ -1,3 +1,9 @@\n+2015-01-06  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n+\n+\tPR tree-optimization/63259\n+\t* tree-ssa-math-opts.c (pass_optimize_bswap::execute): Stop checking\n+\tif optab exists for 16bit byteswap.\n+\n 2015-01-06  Jakub Jelinek  <jakub@redhat.com>\n \n \t* opts.c (common_handle_option): Add support for"}, {"sha": "68da85a8a655a03bdab963e2ef06dc134244bbe5", "filename": "gcc/tree-ssa-math-opts.c", "status": "modified", "additions": 3, "deletions": 16, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4a5735015888eaea5ec6964a3d879a1e61ea75a/gcc%2Ftree-ssa-math-opts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4a5735015888eaea5ec6964a3d879a1e61ea75a/gcc%2Ftree-ssa-math-opts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-math-opts.c?ref=e4a5735015888eaea5ec6964a3d879a1e61ea75a", "patch": "@@ -2350,15 +2350,13 @@ unsigned int\n pass_optimize_bswap::execute (function *fun)\n {\n   basic_block bb;\n-  bool bswap16_p, bswap32_p, bswap64_p;\n+  bool bswap32_p, bswap64_p;\n   bool changed = false;\n-  tree bswap16_type = NULL_TREE, bswap32_type = NULL_TREE, bswap64_type = NULL_TREE;\n+  tree bswap32_type = NULL_TREE, bswap64_type = NULL_TREE;\n \n   if (BITS_PER_UNIT != 8)\n     return 0;\n \n-  bswap16_p = (builtin_decl_explicit_p (BUILT_IN_BSWAP16)\n-\t       && optab_handler (bswap_optab, HImode) != CODE_FOR_nothing);\n   bswap32_p = (builtin_decl_explicit_p (BUILT_IN_BSWAP32)\n \t       && optab_handler (bswap_optab, SImode) != CODE_FOR_nothing);\n   bswap64_p = (builtin_decl_explicit_p (BUILT_IN_BSWAP64)\n@@ -2367,12 +2365,6 @@ pass_optimize_bswap::execute (function *fun)\n \n   /* Determine the argument type of the builtins.  The code later on\n      assumes that the return and argument type are the same.  */\n-  if (bswap16_p)\n-    {\n-      tree fndecl = builtin_decl_explicit (BUILT_IN_BSWAP16);\n-      bswap16_type = TREE_VALUE (TYPE_ARG_TYPES (TREE_TYPE (fndecl)));\n-    }\n-\n   if (bswap32_p)\n     {\n       tree fndecl = builtin_decl_explicit (BUILT_IN_BSWAP32);\n@@ -2443,11 +2435,6 @@ pass_optimize_bswap::execute (function *fun)\n \t      if (code == LROTATE_EXPR || code == RROTATE_EXPR)\n \t\tcontinue;\n \t      load_type = uint16_type_node;\n-\t      if (bswap16_p)\n-\t\t{\n-\t\t  fndecl = builtin_decl_explicit (BUILT_IN_BSWAP16);\n-\t\t  bswap_type = bswap16_type;\n-\t\t}\n \t      break;\n \t    case 32:\n \t      load_type = uint32_type_node;\n@@ -2469,7 +2456,7 @@ pass_optimize_bswap::execute (function *fun)\n \t      continue;\n \t    }\n \n-\t  if (bswap && !fndecl)\n+\t  if (bswap && !fndecl && n.range != 16)\n \t    continue;\n \n \t  if (bswap_replace (cur_stmt, src_stmt, fndecl, bswap_type, load_type,"}]}