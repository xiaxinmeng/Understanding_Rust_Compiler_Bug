{"sha": "1ee44b260d206b5ebc51466d672adffcdcebf4f2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWVlNDRiMjYwZDIwNmI1ZWJjNTE0NjZkNjcyYWRmZmNkY2ViZjRmMg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2011-04-07T21:46:48Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2011-04-07T21:46:48Z"}, "message": "re PR c++/48450 ([C++0x][SFINAE] Hard errors with static_cast expressions)\n\n\tPR c++/48450\n\t* c-family/c-common.c (c_common_truthvalue_conversion): Don't ignore\n\tconversion from C++0x scoped enum.\n\t* cp/cvt.c (ocp_convert): Handle converting scoped enum to bool.\n\nFrom-SVN: r172138", "tree": {"sha": "52443856b69beaa5ce88f9b5f24330703dd3cf16", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/52443856b69beaa5ce88f9b5f24330703dd3cf16"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1ee44b260d206b5ebc51466d672adffcdcebf4f2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ee44b260d206b5ebc51466d672adffcdcebf4f2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1ee44b260d206b5ebc51466d672adffcdcebf4f2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ee44b260d206b5ebc51466d672adffcdcebf4f2/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "39e7722bbfdce2277b92dd8d0df62399051c7c7a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39e7722bbfdce2277b92dd8d0df62399051c7c7a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/39e7722bbfdce2277b92dd8d0df62399051c7c7a"}], "stats": {"total": 57, "additions": 46, "deletions": 11}, "files": [{"sha": "b859db6180e04ca72a76182b53a3b9daabde0660", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ee44b260d206b5ebc51466d672adffcdcebf4f2/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ee44b260d206b5ebc51466d672adffcdcebf4f2/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=1ee44b260d206b5ebc51466d672adffcdcebf4f2", "patch": "@@ -1,3 +1,9 @@\n+2011-04-07  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/48450\n+\t* c-common.c (c_common_truthvalue_conversion): Don't ignore\n+\tconversion from C++0x scoped enum.\n+\n 2011-04-06  Joseph Myers  <joseph@codesourcery.com>\n \n \t* c-target-def.h: New file."}, {"sha": "e0acfea5ca823bb26a7b44c70a6e861d25e17001", "filename": "gcc/c-family/c-common.c", "status": "modified", "additions": 19, "deletions": 10, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ee44b260d206b5ebc51466d672adffcdcebf4f2/gcc%2Fc-family%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ee44b260d206b5ebc51466d672adffcdcebf4f2/gcc%2Fc-family%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-common.c?ref=1ee44b260d206b5ebc51466d672adffcdcebf4f2", "patch": "@@ -3939,16 +3939,25 @@ c_common_truthvalue_conversion (location_t location, tree expr)\n \t}\n \n     CASE_CONVERT:\n-      /* Don't cancel the effect of a CONVERT_EXPR from a REFERENCE_TYPE,\n-\t since that affects how `default_conversion' will behave.  */\n-      if (TREE_CODE (TREE_TYPE (expr)) == REFERENCE_TYPE\n-\t  || TREE_CODE (TREE_TYPE (TREE_OPERAND (expr, 0))) == REFERENCE_TYPE)\n-\tbreak;\n-      /* If this is widening the argument, we can ignore it.  */\n-      if (TYPE_PRECISION (TREE_TYPE (expr))\n-\t  >= TYPE_PRECISION (TREE_TYPE (TREE_OPERAND (expr, 0))))\n-\treturn c_common_truthvalue_conversion (location,\n-\t\t\t\t\t       TREE_OPERAND (expr, 0));\n+      {\n+\ttree totype = TREE_TYPE (expr);\n+\ttree fromtype = TREE_TYPE (TREE_OPERAND (expr, 0));\n+\n+\t/* Don't cancel the effect of a CONVERT_EXPR from a REFERENCE_TYPE,\n+\t   since that affects how `default_conversion' will behave.  */\n+\tif (TREE_CODE (totype) == REFERENCE_TYPE\n+\t    || TREE_CODE (fromtype) == REFERENCE_TYPE)\n+\t  break;\n+\t/* Don't strip a conversion from C++0x scoped enum, since they\n+\t   don't implicitly convert to other types.  */\n+\tif (TREE_CODE (fromtype) == ENUMERAL_TYPE\n+\t    && ENUM_IS_SCOPED (fromtype))\n+\t  break;\n+\t/* If this isn't narrowing the argument, we can ignore it.  */\n+\tif (TYPE_PRECISION (totype) >= TYPE_PRECISION (fromtype))\n+\t  return c_common_truthvalue_conversion (location,\n+\t\t\t\t\t\t TREE_OPERAND (expr, 0));\n+      }\n       break;\n \n     case MODIFY_EXPR:"}, {"sha": "5ffe1f5ed5fa9cb945028bcf49e5364a678258f9", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ee44b260d206b5ebc51466d672adffcdcebf4f2/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ee44b260d206b5ebc51466d672adffcdcebf4f2/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=1ee44b260d206b5ebc51466d672adffcdcebf4f2", "patch": "@@ -1,3 +1,8 @@\n+2011-04-07  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/48450\n+\t* cvt.c (ocp_convert): Handle converting scoped enum to bool.\n+\n 2011-03-31  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/48277"}, {"sha": "290b926ebb725a8db54b28c499118e824bd554bc", "filename": "gcc/cp/cvt.c", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ee44b260d206b5ebc51466d672adffcdcebf4f2/gcc%2Fcp%2Fcvt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ee44b260d206b5ebc51466d672adffcdcebf4f2/gcc%2Fcp%2Fcvt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcvt.c?ref=1ee44b260d206b5ebc51466d672adffcdcebf4f2", "patch": "@@ -727,7 +727,13 @@ ocp_convert (tree type, tree expr, int convtype, int flags)\n \t  return error_mark_node;\n \t}\n       if (code == BOOLEAN_TYPE)\n-\treturn cp_truthvalue_conversion (e);\n+\t{\n+\t  /* We can't implicitly convert a scoped enum to bool, so convert\n+\t     to the underlying type first.  */\n+\t  if (SCOPED_ENUM_P (intype) && (convtype & CONV_STATIC))\n+\t    e = convert (ENUM_UNDERLYING_TYPE (intype), e);\n+\t  return cp_truthvalue_conversion (e);\n+\t}\n \n       converted = fold_if_not_in_template (convert_to_integer (type, e));\n "}, {"sha": "dabb816393ee7763734836a7e6414741c1f52bdb", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ee44b260d206b5ebc51466d672adffcdcebf4f2/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ee44b260d206b5ebc51466d672adffcdcebf4f2/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1ee44b260d206b5ebc51466d672adffcdcebf4f2", "patch": "@@ -1,3 +1,7 @@\n+2011-04-07  Jason Merrill  <jason@redhat.com>\n+\n+\t* g++.dg/cpp0x/enum9.C: New.\n+\n 2011-04-07  Mike Stump  <mikestump@comcast.net>\n \n \t* gcc.dg/torture/stackalign/non-local-goto-5.c: Fix for targets"}, {"sha": "10e510bcd259aeb1f05863ce8f80e0a2a5d87859", "filename": "gcc/testsuite/g++.dg/cpp0x/enum9.C", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ee44b260d206b5ebc51466d672adffcdcebf4f2/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fenum9.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ee44b260d206b5ebc51466d672adffcdcebf4f2/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fenum9.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fenum9.C?ref=1ee44b260d206b5ebc51466d672adffcdcebf4f2", "patch": "@@ -0,0 +1,5 @@\n+// { dg-options -std=c++0x }\n+\n+enum class E { };\n+E f();\n+bool b2 = static_cast<bool>(f());"}]}