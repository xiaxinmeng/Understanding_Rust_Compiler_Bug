{"sha": "20d30e737ad79dc36817e59f1676aa8bc0c6b325", "node_id": "C_kwDOANBUbNoAKDIwZDMwZTczN2FkNzlkYzM2ODE3ZTU5ZjE2NzZhYThiYzBjNmIzMjU", "commit": {"author": {"name": "Jos\u00e9 Rui Faustino de Sousa", "email": "jrfsousa@gmail.com", "date": "2022-09-04T19:53:09Z"}, "committer": {"name": "Harald Anlauf", "email": "anlauf@gmx.de", "date": "2022-09-04T19:55:15Z"}, "message": "Fortran: Fix ICE with -fcheck=pointer [PR100136]\n\ngcc/fortran/ChangeLog:\n\n\tPR fortran/100136\n\t* trans-expr.cc (gfc_conv_procedure_call): Add handling of pointer\n\texpressions.\n\ngcc/testsuite/ChangeLog:\n\n\tPR fortran/100136\n\t* gfortran.dg/PR100136.f90: New test.", "tree": {"sha": "fd904989ef6a32842c1f51c4d2e4cf47f3477287", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fd904989ef6a32842c1f51c4d2e4cf47f3477287"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/20d30e737ad79dc36817e59f1676aa8bc0c6b325", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/20d30e737ad79dc36817e59f1676aa8bc0c6b325", "html_url": "https://github.com/Rust-GCC/gccrs/commit/20d30e737ad79dc36817e59f1676aa8bc0c6b325", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/20d30e737ad79dc36817e59f1676aa8bc0c6b325/comments", "author": {"login": "jrfsousa", "id": 56982651, "node_id": "MDQ6VXNlcjU2OTgyNjUx", "avatar_url": "https://avatars.githubusercontent.com/u/56982651?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jrfsousa", "html_url": "https://github.com/jrfsousa", "followers_url": "https://api.github.com/users/jrfsousa/followers", "following_url": "https://api.github.com/users/jrfsousa/following{/other_user}", "gists_url": "https://api.github.com/users/jrfsousa/gists{/gist_id}", "starred_url": "https://api.github.com/users/jrfsousa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jrfsousa/subscriptions", "organizations_url": "https://api.github.com/users/jrfsousa/orgs", "repos_url": "https://api.github.com/users/jrfsousa/repos", "events_url": "https://api.github.com/users/jrfsousa/events{/privacy}", "received_events_url": "https://api.github.com/users/jrfsousa/received_events", "type": "User", "site_admin": false}, "committer": {"login": "harald-anlauf", "id": 90786862, "node_id": "MDQ6VXNlcjkwNzg2ODYy", "avatar_url": "https://avatars.githubusercontent.com/u/90786862?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harald-anlauf", "html_url": "https://github.com/harald-anlauf", "followers_url": "https://api.github.com/users/harald-anlauf/followers", "following_url": "https://api.github.com/users/harald-anlauf/following{/other_user}", "gists_url": "https://api.github.com/users/harald-anlauf/gists{/gist_id}", "starred_url": "https://api.github.com/users/harald-anlauf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harald-anlauf/subscriptions", "organizations_url": "https://api.github.com/users/harald-anlauf/orgs", "repos_url": "https://api.github.com/users/harald-anlauf/repos", "events_url": "https://api.github.com/users/harald-anlauf/events{/privacy}", "received_events_url": "https://api.github.com/users/harald-anlauf/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8b633b42af4ef82baf424ac5021d996a909f398c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b633b42af4ef82baf424ac5021d996a909f398c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8b633b42af4ef82baf424ac5021d996a909f398c"}], "stats": {"total": 46, "additions": 42, "deletions": 4}, "files": [{"sha": "7895d0346101ea22603e880b1f2128a816efbbed", "filename": "gcc/fortran/trans-expr.cc", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20d30e737ad79dc36817e59f1676aa8bc0c6b325/gcc%2Ffortran%2Ftrans-expr.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20d30e737ad79dc36817e59f1676aa8bc0c6b325/gcc%2Ffortran%2Ftrans-expr.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-expr.cc?ref=20d30e737ad79dc36817e59f1676aa8bc0c6b325", "patch": "@@ -7220,16 +7220,15 @@ gfc_conv_procedure_call (gfc_se * se, gfc_symbol * sym,\n \t      else\n \t\tgoto end_pointer_check;\n \n+\t      tmp = parmse.expr;\n \t      if (fsym && fsym->ts.type == BT_CLASS)\n \t\t{\n-\t\t  tmp = build_fold_indirect_ref_loc (input_location,\n-\t\t\t\t\t\t      parmse.expr);\n+\t\t  if (POINTER_TYPE_P (TREE_TYPE (tmp)))\n+\t\t    tmp = build_fold_indirect_ref_loc (input_location, tmp);\n \t\t  tmp = gfc_class_data_get (tmp);\n \t\t  if (GFC_DESCRIPTOR_TYPE_P (TREE_TYPE (tmp)))\n \t\t    tmp = gfc_conv_descriptor_data_get (tmp);\n \t\t}\n-\t      else\n-\t\ttmp = parmse.expr;\n \n \t      /* If the argument is passed by value, we need to strip the\n \t\t INDIRECT_REF.  */"}, {"sha": "922af4aecc3d52e7d6ac5a46fca236a78066d10e", "filename": "gcc/testsuite/gfortran.dg/PR100136.f90", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20d30e737ad79dc36817e59f1676aa8bc0c6b325/gcc%2Ftestsuite%2Fgfortran.dg%2FPR100136.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20d30e737ad79dc36817e59f1676aa8bc0c6b325/gcc%2Ftestsuite%2Fgfortran.dg%2FPR100136.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2FPR100136.f90?ref=20d30e737ad79dc36817e59f1676aa8bc0c6b325", "patch": "@@ -0,0 +1,39 @@\n+! { dg-do run }\n+! { dg-options \"-fcheck=pointer\" }\n+! { dg-shouldfail \"Argument not allocated\" }\n+! { dg-output \"Fortran runtime error: Allocatable actual argument 'c_init2' is not allocated\" }\n+!\n+! Tests fix for PR100136\n+!\n+! Test cut down from PR58586\n+!\n+\n+module test_pr58586_mod\n+  implicit none\n+\n+  type :: a\n+  end type\n+\n+  type :: c\n+     type(a), allocatable :: a\n+  end type\n+\n+contains\n+\n+  subroutine add_class_c (d)\n+    class(c), value :: d\n+  end subroutine\n+\n+  class(c) function c_init2()\n+    allocatable :: c_init2\n+  end function\n+\n+end module test_pr58586_mod\n+\n+program test_pr58586\n+  use test_pr58586_mod\n+\n+  ! This needs to execute, to see whether the segfault at runtime is resolved\n+  call add_class_c(c_init2())\n+\n+end program"}]}