{"sha": "9b94fbc7e485117a931dbf438b2dab31bb3f8f13", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWI5NGZiYzdlNDg1MTE3YTkzMWRiZjQzOGIyZGFiMzFiYjNmOGYxMw==", "commit": {"author": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2017-05-24T13:23:34Z"}, "committer": {"name": "Thomas Schwinge", "email": "tschwinge@gcc.gnu.org", "date": "2017-05-24T13:23:34Z"}, "message": "C/C++ OpenACC: acc_pcopyin, acc_pcreate\n\n\tlibgomp/\n\t* openacc.h (acc_pcopyin, acc_pcreate): Provide prototypes instead\n\tof preprocessor definitions.\n\t* libgomp.h (strong_alias): Guard by \"#ifdef\n\tHAVE_ATTRIBUTE_ALIAS\".\n\t* oacc-mem.c: Provide \"acc_pcreate\" as alias for\n\t\"acc_present_or_create\", and \"acc_pcopyin\" as alias for\n\t\"acc_present_or_copyin\".\n\t* libgomp.map: New version \"OACC_2.0.1\".\n\t(OACC_2.0.1): Add \"acc_pcopyin\", and \"acc_pcreate\".\n\t* testsuite/libgomp.oacc-c-c++-common/lib-38.c: Remove, merging\n\tits content into...\n\t* testsuite/libgomp.oacc-c-c++-common/lib-32.c: ... this file.\n\tExtend testing.\n\nFrom-SVN: r248410", "tree": {"sha": "9afe5454d6a0613054c3e4dcff4930a101b450fa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9afe5454d6a0613054c3e4dcff4930a101b450fa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9b94fbc7e485117a931dbf438b2dab31bb3f8f13", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b94fbc7e485117a931dbf438b2dab31bb3f8f13", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b94fbc7e485117a931dbf438b2dab31bb3f8f13", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b94fbc7e485117a931dbf438b2dab31bb3f8f13/comments", "author": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3f3fb6c91306b8f703842c785535aa074be1acee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f3fb6c91306b8f703842c785535aa074be1acee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3f3fb6c91306b8f703842c785535aa074be1acee"}], "stats": {"total": 359, "additions": 272, "deletions": 87}, "files": [{"sha": "4a9575567b37df47f84041fcb827aea491da96ba", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b94fbc7e485117a931dbf438b2dab31bb3f8f13/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b94fbc7e485117a931dbf438b2dab31bb3f8f13/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=9b94fbc7e485117a931dbf438b2dab31bb3f8f13", "patch": "@@ -1,5 +1,19 @@\n 2017-05-24  Thomas Schwinge  <thomas@codesourcery.com>\n \n+\t* openacc.h (acc_pcopyin, acc_pcreate): Provide prototypes instead\n+\tof preprocessor definitions.\n+\t* libgomp.h (strong_alias): Guard by \"#ifdef\n+\tHAVE_ATTRIBUTE_ALIAS\".\n+\t* oacc-mem.c: Provide \"acc_pcreate\" as alias for\n+\t\"acc_present_or_create\", and \"acc_pcopyin\" as alias for\n+\t\"acc_present_or_copyin\".\n+\t* libgomp.map: New version \"OACC_2.0.1\".\n+\t(OACC_2.0.1): Add \"acc_pcopyin\", and \"acc_pcreate\".\n+\t* testsuite/libgomp.oacc-c-c++-common/lib-38.c: Remove, merging\n+\tits content into...\n+\t* testsuite/libgomp.oacc-c-c++-common/lib-32.c: ... this file.\n+\tExtend testing.\n+\n \t* plugin/plugin-nvptx.c (nvptx_get_num_devices): Debugging output\n \twhen disabling nvptx offloading.\n "}, {"sha": "940b5b83f706dfa5edfa077089242a4834fb7db2", "filename": "libgomp/libgomp.h", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b94fbc7e485117a931dbf438b2dab31bb3f8f13/libgomp%2Flibgomp.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b94fbc7e485117a931dbf438b2dab31bb3f8f13/libgomp%2Flibgomp.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Flibgomp.h?ref=9b94fbc7e485117a931dbf438b2dab31bb3f8f13", "patch": "@@ -1060,8 +1060,6 @@ extern void gomp_set_nest_lock_25 (omp_nest_lock_25_t *) __GOMP_NOTHROW;\n extern void gomp_unset_nest_lock_25 (omp_nest_lock_25_t *) __GOMP_NOTHROW;\n extern int gomp_test_nest_lock_25 (omp_nest_lock_25_t *) __GOMP_NOTHROW;\n \n-# define strong_alias(fn, al) \\\n-  extern __typeof (fn) al __attribute__ ((alias (#fn)));\n # define omp_lock_symver(fn) \\\n   __asm (\".symver g\" #fn \"_30, \" #fn \"@@OMP_3.0\"); \\\n   __asm (\".symver g\" #fn \"_25, \" #fn \"@OMP_1.0\");\n@@ -1085,6 +1083,9 @@ extern int gomp_test_nest_lock_25 (omp_nest_lock_25_t *) __GOMP_NOTHROW;\n #endif\n \n #ifdef HAVE_ATTRIBUTE_ALIAS\n+# define strong_alias(fn, al) \\\n+  extern __typeof (fn) al __attribute__ ((alias (#fn)));\n+\n # define ialias_ulp\tialias_str1(__USER_LABEL_PREFIX__)\n # define ialias_str1(x)\tialias_str2(x)\n # define ialias_str2(x)\t#x"}, {"sha": "b43c6deb8515d4dbb6ed6751fdd2d581bb486793", "filename": "libgomp/libgomp.map", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b94fbc7e485117a931dbf438b2dab31bb3f8f13/libgomp%2Flibgomp.map", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b94fbc7e485117a931dbf438b2dab31bb3f8f13/libgomp%2Flibgomp.map", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Flibgomp.map?ref=9b94fbc7e485117a931dbf438b2dab31bb3f8f13", "patch": "@@ -378,6 +378,12 @@ OACC_2.0 {\n \tacc_set_cuda_stream;\n };\n \n+OACC_2.0.1 {\n+  global:\n+\tacc_pcopyin;\n+\tacc_pcreate;\n+} OACC_2.0;\n+\n GOACC_2.0 {\n   global:\n \tGOACC_data_end;"}, {"sha": "ff3ed49a58637aa98a1ffb854d29299f63725919", "filename": "libgomp/oacc-mem.c", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b94fbc7e485117a931dbf438b2dab31bb3f8f13/libgomp%2Foacc-mem.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b94fbc7e485117a931dbf438b2dab31bb3f8f13/libgomp%2Foacc-mem.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Foacc-mem.c?ref=9b94fbc7e485117a931dbf438b2dab31bb3f8f13", "patch": "@@ -514,12 +514,34 @@ acc_present_or_create (void *h, size_t s)\n   return present_create_copy (FLAG_PRESENT | FLAG_CREATE, h, s);\n }\n \n+/* acc_pcreate is acc_present_or_create by a different name.  */\n+#ifdef HAVE_ATTRIBUTE_ALIAS\n+strong_alias (acc_present_or_create, acc_pcreate)\n+#else\n+void *\n+acc_pcreate (void *h, size_t s)\n+{\n+  return acc_present_or_create (h, s);\n+}\n+#endif\n+\n void *\n acc_present_or_copyin (void *h, size_t s)\n {\n   return present_create_copy (FLAG_PRESENT | FLAG_CREATE | FLAG_COPY, h, s);\n }\n \n+/* acc_pcopyin is acc_present_or_copyin by a different name.  */\n+#ifdef HAVE_ATTRIBUTE_ALIAS\n+strong_alias (acc_present_or_copyin, acc_pcopyin)\n+#else\n+void *\n+acc_pcopyin (void *h, size_t s)\n+{\n+  return acc_present_or_copyin (h, s);\n+}\n+#endif\n+\n #define FLAG_COPYOUT (1 << 0)\n \n static void"}, {"sha": "ebccb1856d77877e21a56be1ed02a2c09a567bb2", "filename": "libgomp/openacc.h", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b94fbc7e485117a931dbf438b2dab31bb3f8f13/libgomp%2Fopenacc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b94fbc7e485117a931dbf438b2dab31bb3f8f13/libgomp%2Fopenacc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Fopenacc.h?ref=9b94fbc7e485117a931dbf438b2dab31bb3f8f13", "patch": "@@ -91,8 +91,10 @@ void acc_free (void *) __GOACC_NOTHROW;\n    the standard specifies otherwise.  */\n void *acc_copyin (void *, size_t) __GOACC_NOTHROW;\n void *acc_present_or_copyin (void *, size_t) __GOACC_NOTHROW;\n+void *acc_pcopyin (void *, size_t) __GOACC_NOTHROW;\n void *acc_create (void *, size_t) __GOACC_NOTHROW;\n void *acc_present_or_create (void *, size_t) __GOACC_NOTHROW;\n+void *acc_pcreate (void *, size_t) __GOACC_NOTHROW;\n void acc_copyout (void *, size_t) __GOACC_NOTHROW;\n void acc_delete (void *, size_t) __GOACC_NOTHROW;\n void acc_update_device (void *, size_t) __GOACC_NOTHROW;\n@@ -105,11 +107,6 @@ int acc_is_present (void *, size_t) __GOACC_NOTHROW;\n void acc_memcpy_to_device (void *, void *, size_t) __GOACC_NOTHROW;\n void acc_memcpy_from_device (void *, void *, size_t) __GOACC_NOTHROW;\n \n-/* Old names.  OpenACC does not specify whether these can or must\n-   not be macros, inlines or aliases for the new names.  */\n-#define acc_pcreate acc_present_or_create\n-#define acc_pcopyin acc_present_or_copyin\n-\n /* CUDA-specific routines.  */\n void *acc_get_current_cuda_device (void) __GOACC_NOTHROW;\n void *acc_get_current_cuda_context (void) __GOACC_NOTHROW;"}, {"sha": "6a9e995530fe155efd580561d7f92ad87f2f5714", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/lib-32.c", "status": "modified", "additions": 225, "deletions": 16, "changes": 241, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b94fbc7e485117a931dbf438b2dab31bb3f8f13/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Flib-32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b94fbc7e485117a931dbf438b2dab31bb3f8f13/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Flib-32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Flib-32.c?ref=9b94fbc7e485117a931dbf438b2dab31bb3f8f13", "patch": "@@ -1,36 +1,245 @@\n-/* { dg-do run } */\n+/* acc_present_or_create, acc_present_or_copyin, etc.  */\n \n+#include <stdbool.h>\n #include <stdlib.h>\n #include <openacc.h>\n \n int\n main (int argc, char **argv)\n {\n-  const int N = 256;\n-  unsigned char *h;\n-  void *d1, *d2;\n+  int *h, *d;\n+  const int N = 10000;\n+  const int S = N * sizeof *h;\n+  bool shared_mem;\n \n-  h = (unsigned char *) malloc (N);\n-\n-  d1 = acc_present_or_create (h, N);\n-  if (!d1)\n+  h = (int *) malloc (S);\n+  if (!h)\n     abort ();\n+  for (int i = 0; i < N; ++i)\n+    h[i] = i + 0;\n \n-  d2 = acc_present_or_create (h, N);\n-  if (!d2)\n-    abort ();\n+  shared_mem = acc_is_present (h, S);\n \n-  if (d1 != d2)\n+  d = (int *) acc_present_or_create (h, S);\n+  if (!d)\n     abort ();\n+  if (shared_mem)\n+    if (h != d)\n+      abort ();\n+  if (!acc_is_present (h, S))\n+    abort ();\n+\n+#pragma acc parallel loop deviceptr (d)\n+  for (int i = 0; i < N; ++i)\n+    {\n+      d[i] = i + 1;\n+    }\n+\n+  for (int i = 0; i < N; ++i)\n+    {\n+      if (h[i] != i + (shared_mem ? 1 : 0))\n+\tabort ();\n+      h[i] = i + 2;\n+    }\n+\n+  {\n+    int *d_ = (int *) acc_present_or_create (h, S);\n+    if (d_ != d)\n+      abort ();\n+  }\n+\n+#pragma acc parallel loop deviceptr (d)\n+  for (int i = 0; i < N; ++i)\n+    {\n+      if (d[i] != i + (shared_mem ? 2 : 1))\n+\tabort ();\n+      d[i] = i + 3;\n+    }\n+\n+  for (int i = 0; i < N; ++i)\n+    {\n+      if (h[i] != i + (shared_mem ? 3 : 2))\n+\tabort ();\n+      h[i] = i + 4;\n+    }\n+\n+  {\n+    int *d_ = (int *) acc_pcreate (h, S);\n+    if (d_ != d)\n+      abort ();\n+  }\n+\n+#pragma acc parallel loop deviceptr (d)\n+  for (int i = 0; i < N; ++i)\n+    {\n+      if (d[i] != i + (shared_mem ? 4 : 3))\n+\tabort ();\n+      d[i] = i + 5;\n+    }\n+\n+  for (int i = 0; i < N; ++i)\n+    {\n+      if (h[i] != i + (shared_mem ? 5 : 4))\n+\tabort ();\n+      h[i] = i + 6;\n+    }\n+\n+  {\n+    int *d_ = (int *) acc_present_or_copyin (h, S);\n+    if (d_ != d)\n+      abort ();\n+  }\n+\n+#pragma acc parallel loop deviceptr (d)\n+  for (int i = 0; i < N; ++i)\n+    {\n+      if (d[i] != i + (shared_mem ? 6 : 5))\n+\tabort ();\n+      d[i] = i + 7;\n+    }\n+\n+  for (int i = 0; i < N; ++i)\n+    {\n+      if (h[i] != i + (shared_mem ? 7 : 6))\n+\tabort ();\n+      h[i] = i + 8;\n+    }\n+\n+  {\n+    int *d_ = (int *) acc_pcopyin (h, S);\n+    if (d_ != d)\n+      abort ();\n+  }\n+\n+#pragma acc parallel loop deviceptr (d)\n+  for (int i = 0; i < N; ++i)\n+    {\n+      if (d[i] != i + (shared_mem ? 8 : 7))\n+\tabort ();\n+      d[i] = i + 9;\n+    }\n \n-  d2 = acc_pcreate (h, N);\n-  if (!d2)\n+  for (int i = 0; i < N; ++i)\n+    {\n+      if (h[i] != i + (shared_mem ? 9 : 8))\n+\tabort ();\n+      h[i] = i + 10;\n+    }\n+\n+  acc_copyout (h, S);\n+  d = NULL;\n+  if (!shared_mem)\n+    if (acc_is_present (h, S))\n+      abort ();\n+\n+  for (int i = 0; i < N; ++i)\n+    {\n+      if (h[i] != i + (shared_mem ? 10 : 9))\n+\tabort ();\n+    }\n+\n+  d = (int *) acc_pcopyin (h, S);\n+  if (!d)\n+    abort ();\n+  if (shared_mem)\n+    if (h != d)\n+      abort ();\n+  if (!acc_is_present (h, S))\n     abort ();\n \n-  if (d1 != d2)\n+#pragma acc parallel loop deviceptr (d)\n+  for (int i = 0; i < N; ++i)\n+    {\n+      if (d[i] != i + (shared_mem ? 10 : 9))\n+\tabort ();\n+      d[i] = i + 11;\n+    }\n+\n+  for (int i = 0; i < N; ++i)\n+    {\n+      if (h[i] != i + (shared_mem ? 11 : 9))\n+\tabort ();\n+      h[i] = i + 12;\n+    }\n+\n+  {\n+    int *d_ = (int *) acc_pcopyin (h, S);\n+    if (d_ != d)\n+      abort ();\n+  }\n+\n+#pragma acc parallel loop deviceptr (d)\n+  for (int i = 0; i < N; ++i)\n+    {\n+      if (d[i] != i + (shared_mem ? 12 : 11))\n+\tabort ();\n+      d[i] = i + 13;\n+    }\n+\n+  for (int i = 0; i < N; ++i)\n+    {\n+      if (h[i] != i + (shared_mem ? 13 : 12))\n+\tabort ();\n+      h[i] = i + 14;\n+    }\n+\n+  {\n+    int *d_ = (int *) acc_pcreate (h, S);\n+    if (d_ != d)\n+      abort ();\n+  }\n+\n+#pragma acc parallel loop deviceptr (d)\n+  for (int i = 0; i < N; ++i)\n+    {\n+      if (d[i] != i + (shared_mem ? 14 : 13))\n+\tabort ();\n+      d[i] = i + 15;\n+    }\n+\n+  for (int i = 0; i < N; ++i)\n+    {\n+      if (h[i] != i + (shared_mem ? 15 : 14))\n+\tabort ();\n+      h[i] = i + 16;\n+    }\n+\n+  {\n+    int *d_ = (int *) acc_pcreate (h, S);\n+    if (d_ != d)\n+      abort ();\n+  }\n+\n+#pragma acc parallel loop deviceptr (d)\n+  for (int i = 0; i < N; ++i)\n+    {\n+      if (d[i] != i + (shared_mem ? 16 : 15))\n+\tabort ();\n+      d[i] = i + 17;\n+    }\n+\n+  for (int i = 0; i < N; ++i)\n+    {\n+      if (h[i] != i + (shared_mem ? 17 : 16))\n+\tabort ();\n+      h[i] = i + 18;\n+    }\n+\n+  acc_update_self (h, S);\n+  if (!acc_is_present (h, S))\n     abort ();\n \n-  acc_delete (h, N);\n+  for (int i = 0; i < N; ++i)\n+    {\n+      if (h[i] != i + (shared_mem ? 18 : 17))\n+\tabort ();\n+    }\n+\n+  acc_delete (h, S);\n+  d = NULL;\n+  if (!shared_mem)\n+    if (acc_is_present (h, S))\n+      abort();\n \n   free (h);\n "}, {"sha": "05d8498c1f987efdeacdb92fd472ef20b0573589", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/lib-38.c", "status": "removed", "additions": 0, "deletions": 64, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f3fb6c91306b8f703842c785535aa074be1acee/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Flib-38.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f3fb6c91306b8f703842c785535aa074be1acee/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Flib-38.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Flib-38.c?ref=3f3fb6c91306b8f703842c785535aa074be1acee", "patch": "@@ -1,64 +0,0 @@\n-/* { dg-do run } */\n-/* { dg-skip-if \"\" { *-*-* } { \"*\" } { \"-DACC_MEM_SHARED=0\" } } */\n-\n-#include <string.h>\n-#include <stdlib.h>\n-#include <openacc.h>\n-\n-int\n-main (int argc, char **argv)\n-{\n-  const int N = 256;\n-  int i;\n-  unsigned char *h;\n-  void *d1, *d2;\n-\n-  h = (unsigned char *) malloc (N);\n-\n-  for (i = 0; i < N; i++)\n-    {\n-      h[i] = i;\n-    }\n-\n-  d1 = acc_present_or_copyin (h, N);\n-  if (!d1)\n-    abort ();\n-\n-  for (i = 0; i < N; i++)\n-    {\n-      h[i] = 0xab;\n-    }\n-\n-  d2 = acc_present_or_copyin (h, N);\n-  if (!d2)\n-    abort ();\n-\n-  if (d1 != d2)\n-    abort ();\n-\n-  memset (&h[0], 0, N);\n-\n-  acc_copyout (h, N);\n-\n-  for (i = 0; i < N; i++)\n-    {\n-      if (h[i] != i)\n-\tabort ();\n-    }\n-\n-  d2 = acc_pcopyin (h, N);\n-  if (!d2)\n-    abort ();\n-\n-  acc_copyout (h, N);\n-\n-  for (i = 0; i < N; i++)\n-    {\n-      if (h[i] != i)\n-\tabort ();\n-    }\n-\n-  free (h);\n-\n-  return 0;\n-}"}]}