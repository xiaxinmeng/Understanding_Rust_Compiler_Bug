{"sha": "e2254932f9afd2a0864330dbf37522c99f3ab3f6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTIyNTQ5MzJmOWFmZDJhMDg2NDMzMGRiZjM3NTIyYzk5ZjNhYjNmNg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2014-09-20T00:55:14Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2014-09-20T00:55:14Z"}, "message": "re PR c++/61392 (internal compiler error: in write_template_arg_literal, at cp/mangle.c:3072)\n\n\tPR c++/61392\n\t* mangle.c (write_expression): Use unresolved-name mangling for\n\tDR850 case.\n\nFrom-SVN: r215414", "tree": {"sha": "81d5756ec6e9db2cfaf1d6a63a1b19a80282659b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/81d5756ec6e9db2cfaf1d6a63a1b19a80282659b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e2254932f9afd2a0864330dbf37522c99f3ab3f6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2254932f9afd2a0864330dbf37522c99f3ab3f6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e2254932f9afd2a0864330dbf37522c99f3ab3f6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2254932f9afd2a0864330dbf37522c99f3ab3f6/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "207fd2123a05b4d163c949e3cad0fd293d4f45b4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/207fd2123a05b4d163c949e3cad0fd293d4f45b4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/207fd2123a05b4d163c949e3cad0fd293d4f45b4"}], "stats": {"total": 28, "additions": 24, "deletions": 4}, "files": [{"sha": "2b537281e72916c62157950155acd4443f324532", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2254932f9afd2a0864330dbf37522c99f3ab3f6/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2254932f9afd2a0864330dbf37522c99f3ab3f6/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=e2254932f9afd2a0864330dbf37522c99f3ab3f6", "patch": "@@ -1,5 +1,9 @@\n 2014-09-19  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/61392\n+\t* mangle.c (write_expression): Use unresolved-name mangling for\n+\tDR850 case.\n+\n \tPR c++/61465\n \t* call.c (convert_like_real) [ck_identity]: Call mark_rvalue_use\n \tafter pulling out an element from a CONSTRUCTOR."}, {"sha": "9703d1ceb726b0bb86dc56d5846cdf4013b62d0b", "filename": "gcc/cp/mangle.c", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2254932f9afd2a0864330dbf37522c99f3ab3f6/gcc%2Fcp%2Fmangle.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2254932f9afd2a0864330dbf37522c99f3ab3f6/gcc%2Fcp%2Fmangle.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fmangle.c?ref=e2254932f9afd2a0864330dbf37522c99f3ab3f6", "patch": "@@ -2861,11 +2861,16 @@ write_expression (tree expr)\n \t    {\n \t      write_string (operator_name_info[(int)code].mangled_name);\n \t      ob = TREE_OPERAND (ob, 0);\n+\t      write_expression (ob);\n \t    }\n-\t  else\n-\t    write_string (\"dt\");\n+\t  else if (!is_dummy_object (ob))\n+\t    {\n+\t      write_string (\"dt\");\n+\t      write_expression (ob);\n+\t    }\n+\t  /* else, for a non-static data member with no associated object (in\n+\t     unevaluated context), use the unresolved-name mangling.  */\n \n-\t  write_expression (ob);\n \t  write_member_name (TREE_OPERAND (expr, 1));\n \t  return;\n \t}"}, {"sha": "1d81028dc2169a129419182f9413d37d8bf499c9", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2254932f9afd2a0864330dbf37522c99f3ab3f6/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2254932f9afd2a0864330dbf37522c99f3ab3f6/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=e2254932f9afd2a0864330dbf37522c99f3ab3f6", "patch": "@@ -1685,7 +1685,7 @@ finish_non_static_data_member (tree decl, tree object, tree qualifying_scope)\n   if (object == error_mark_node)\n     return error_mark_node;\n \n-  /* DR 613: Can use non-static data members without an associated\n+  /* DR 613/850: Can use non-static data members without an associated\n      object in sizeof/decltype/alignof.  */\n   if (is_dummy_object (object) && cp_unevaluated_operand == 0\n       && (!processing_template_decl || !current_class_ref))"}, {"sha": "d6a58a35b82871c0a98121506960e95e37c3a0f4", "filename": "gcc/testsuite/g++.dg/abi/mangle63.C", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2254932f9afd2a0864330dbf37522c99f3ab3f6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fmangle63.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2254932f9afd2a0864330dbf37522c99f3ab3f6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fmangle63.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fmangle63.C?ref=e2254932f9afd2a0864330dbf37522c99f3ab3f6", "patch": "@@ -0,0 +1,11 @@\n+// DR 850 makes this valid\n+// { dg-do compile { target c++11 } }\n+\n+template<class T> struct A\n+{\n+  int mem;\n+  template<class U> decltype(U()+mem) f();\n+};\n+int i = A<int>().f<int>();\n+\n+// { dg-final { scan-assembler \"_ZN1AIiE1fIiEEDTplcvT__E3memEv\" } }"}]}