{"sha": "6cf3f6e7f0b56f5d81ac5930c42c35fcae63ec2c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmNmM2Y2ZTdmMGI1NmY1ZDgxYWM1OTMwYzQyYzM1ZmNhZTYzZWMyYw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@vlsi1.ultra.nyu.edu", "date": "2001-10-26T11:16:09Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "2001-10-26T11:16:09Z"}, "message": "cfgcleanup.c (BB_SET_FLAG, [...]): Add cast to avoid warning.\n\n\t* cfgcleanup.c (BB_SET_FLAG, BB_CLEAR_FLAG): Add cast to avoid warning.\n\n\t* local-alloc.c (update_equiv_regs): Don't make REG_EQUAL note for\n\tASM_OPERANDS.\n\nFrom-SVN: r46538", "tree": {"sha": "ffc5c2ea73f7a7689048d0b14e667711e9701c61", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ffc5c2ea73f7a7689048d0b14e667711e9701c61"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6cf3f6e7f0b56f5d81ac5930c42c35fcae63ec2c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6cf3f6e7f0b56f5d81ac5930c42c35fcae63ec2c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6cf3f6e7f0b56f5d81ac5930c42c35fcae63ec2c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6cf3f6e7f0b56f5d81ac5930c42c35fcae63ec2c/comments", "author": null, "committer": null, "parents": [{"sha": "16e99e29fc887f116f767e8cb727e9fe6054307b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16e99e29fc887f116f767e8cb727e9fe6054307b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/16e99e29fc887f116f767e8cb727e9fe6054307b"}], "stats": {"total": 18, "additions": 14, "deletions": 4}, "files": [{"sha": "5ebad17369b5b0ec2baf24260d96edd4e1e439bb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6cf3f6e7f0b56f5d81ac5930c42c35fcae63ec2c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6cf3f6e7f0b56f5d81ac5930c42c35fcae63ec2c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6cf3f6e7f0b56f5d81ac5930c42c35fcae63ec2c", "patch": "@@ -1,3 +1,10 @@\n+Fri Oct 26 07:18:08 2001  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n+\n+\t* cfgcleanup.c (BB_SET_FLAG, BB_CLEAR_FLAG): Add cast to avoid warning.\n+\n+\t* local-alloc.c (update_equiv_regs): Don't make REG_EQUAL note for\n+\tASM_OPERANDS.\n+\n 2001-10-26  Andreas Jaeger  <aj@suse.de>\n \n \t* flow.c (clear_log_links): Remove unused variable."}, {"sha": "a1c13f5cb6ce9481c57f331e6ea0ce75b78c9818", "filename": "gcc/cfgcleanup.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6cf3f6e7f0b56f5d81ac5930c42c35fcae63ec2c/gcc%2Fcfgcleanup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6cf3f6e7f0b56f5d81ac5930c42c35fcae63ec2c/gcc%2Fcfgcleanup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgcleanup.c?ref=6cf3f6e7f0b56f5d81ac5930c42c35fcae63ec2c", "patch": "@@ -56,9 +56,9 @@ enum bb_flags {\n \n #define BB_FLAGS(bb) (enum bb_flags)(bb)->aux\n #define BB_SET_FLAG(bb,flag) \\\n-  (bb)->aux = (void *)((enum bb_flags)(bb)->aux | (flag))\n+  (bb)->aux = (void *) (long) ((enum bb_flags)(bb)->aux | (flag))\n #define BB_CLEAR_FLAG(bb,flag) \\\n-  (bb)->aux = (void *)((enum bb_flags)(bb)->aux & ~(flag))\n+  (bb)->aux = (void *) (long) ((enum bb_flags)(bb)->aux & ~(flag))\n \n #define FORWARDER_BLOCK_P(bb) (BB_FLAGS(bb) & BB_FORWARDER_BLOCK)\n "}, {"sha": "780523b5ea3edfe55457eb09c4f160ed272b0f48", "filename": "gcc/local-alloc.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6cf3f6e7f0b56f5d81ac5930c42c35fcae63ec2c/gcc%2Flocal-alloc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6cf3f6e7f0b56f5d81ac5930c42c35fcae63ec2c/gcc%2Flocal-alloc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flocal-alloc.c?ref=6cf3f6e7f0b56f5d81ac5930c42c35fcae63ec2c", "patch": "@@ -927,8 +927,11 @@ update_equiv_regs ()\n \n \t  /* cse sometimes generates function invariants, but doesn't put a\n \t     REG_EQUAL note on the insn.  Since this note would be redundant,\n-\t     there's no point creating it earlier than here.  */\n-\t  if (! note && ! rtx_varies_p (src, 0))\n+\t     there's no point creating it earlier than here.  Don't do this\n+\t     for ASM_OPERANDS since eliminate_regs doesn't support it and\n+\t     it serves no useful purpose.  */\n+\t  if (! note && ! rtx_varies_p (src, 0)\n+\t      && GET_CODE (src) != ASM_OPERANDS)\n \t    REG_NOTES (insn)\n \t      = note = gen_rtx_EXPR_LIST (REG_EQUAL, src, REG_NOTES (insn));\n "}]}