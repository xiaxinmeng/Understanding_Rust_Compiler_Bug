{"sha": "fdaaf0020280a2d019c54294eb7ad28d0b1929bd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmRhYWYwMDIwMjgwYTJkMDE5YzU0Mjk0ZWI3YWQyOGQwYjE5MjliZA==", "commit": {"author": {"name": "John David Anglin", "email": "dave.anglin@nrc-cnrc.gc.ca", "date": "2006-05-09T00:36:11Z"}, "committer": {"name": "John David Anglin", "email": "danglin@gcc.gnu.org", "date": "2006-05-09T00:36:11Z"}, "message": "hpux-unwind.h (pa_fallback_frame_state): Handle return parameter relocation and relocation stubs.\n\n\t* hpux-unwind.h (pa_fallback_frame_state): Handle return parameter\n\trelocation and relocation stubs.\n\nFrom-SVN: r113640", "tree": {"sha": "0fba19ad3b2f18035939c099d97b821028ae29e8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0fba19ad3b2f18035939c099d97b821028ae29e8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fdaaf0020280a2d019c54294eb7ad28d0b1929bd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fdaaf0020280a2d019c54294eb7ad28d0b1929bd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fdaaf0020280a2d019c54294eb7ad28d0b1929bd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fdaaf0020280a2d019c54294eb7ad28d0b1929bd/comments", "author": null, "committer": null, "parents": [{"sha": "096cc29a1060ffbf25565ff89605dc1297bf6c56", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/096cc29a1060ffbf25565ff89605dc1297bf6c56", "html_url": "https://github.com/Rust-GCC/gccrs/commit/096cc29a1060ffbf25565ff89605dc1297bf6c56"}], "stats": {"total": 41, "additions": 41, "deletions": 0}, "files": [{"sha": "242e6244bf443c53f6c96f05cc626207350a7602", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fdaaf0020280a2d019c54294eb7ad28d0b1929bd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fdaaf0020280a2d019c54294eb7ad28d0b1929bd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fdaaf0020280a2d019c54294eb7ad28d0b1929bd", "patch": "@@ -1,3 +1,8 @@\n+2006-05-08  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n+\n+\t* hpux-unwind.h (pa_fallback_frame_state): Handle return parameter\n+\trelocation and relocation stubs.\n+\n 2006-05-08  Eric Christopher  <echristo@apple.com>\n \n \t* unwind-dw2-fde-darwin.c (examine_objects): Only check data"}, {"sha": "383b07216ae4fe29b74667805d94d17b2111f0fe", "filename": "gcc/config/pa/hpux-unwind.h", "status": "modified", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fdaaf0020280a2d019c54294eb7ad28d0b1929bd/gcc%2Fconfig%2Fpa%2Fhpux-unwind.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fdaaf0020280a2d019c54294eb7ad28d0b1929bd/gcc%2Fconfig%2Fpa%2Fhpux-unwind.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fhpux-unwind.h?ref=fdaaf0020280a2d019c54294eb7ad28d0b1929bd", "patch": "@@ -116,6 +116,26 @@ pa_fallback_frame_state (struct _Unwind_Context *context,\n   if (pc == 0)\n     return _URC_END_OF_STACK;\n \n+  /* Check for relocation of the return value.  */\n+  if (!TARGET_64BIT\n+      && *(pc + 0) == 0x2fd01224\t\t/* fstd,ma fr4,8(sp) */\n+      && *(pc + 1) == 0x0fd9109d\t\t/* ldw -4(sp),ret1 */\n+      && *(pc + 2) == 0x0fd130bc)\t\t/* ldw,mb -8(sp),ret0 */\n+    pc += 3;\n+  else if (!TARGET_64BIT\n+\t   && *(pc + 0) == 0x27d01224\t\t/* fstw,ma fr4,8(sp) */\n+\t   && *(pc + 1) == 0x0fd130bc)\t\t/* ldw,mb -8(sp),ret0 */\n+    pc += 2;\n+  else if (!TARGET_64BIT\n+\t   && *(pc + 0) == 0x0fdc12b0\t\t/* stw,ma ret0,8(sp) */\n+\t   && *(pc + 1) == 0x0fdd1299\t\t/* stw ret1,-4(sp) */\n+\t   && *(pc + 2) == 0x2fd13024)\t\t/* fldd,mb -8(sp),fr4 */\n+    pc += 3;\n+  else if (!TARGET_64BIT\n+\t   && *(pc + 0) == 0x0fdc12b0\t\t/* stw,ma ret0,8(sp) */\n+\t   && *(pc + 1) == 0x27d13024)\t\t/* fldw,mb -8(sp),fr4 */\n+    pc += 2;\n+\n   /* Check if the return address points to an export stub (PA 1.1 or 2.0).  */\n   if ((!TARGET_64BIT\n        && *(pc + 0) == 0x4bc23fd1\t\t/* ldw -18(sp),rp */\n@@ -135,6 +155,22 @@ pa_fallback_frame_state (struct _Unwind_Context *context,\n       fs->regs.reg[0].how = REG_SAVED_OFFSET;\n       fs->regs.reg[0].loc.offset = -24;\n \n+      return _URC_NO_REASON;\n+    }\n+  /* Check if the return address points to a relocation stub.  */\n+  else if (!TARGET_64BIT\n+\t   && *(pc + 0) == 0x0fd11082\t\t/* ldw -8(sp),rp */\n+\t   && (*(pc + 1) == 0xe840c002\t\t/* bv,n r0(rp) */\n+\t       || *(pc + 1) == 0xe840d002))\t/* bve,n (rp) */\n+    {\n+      fs->cfa_how    = CFA_REG_OFFSET;\n+      fs->cfa_reg    = 30;\n+      fs->cfa_offset = 0;\n+\n+      fs->retaddr_column = 0;\n+      fs->regs.reg[0].how = REG_SAVED_OFFSET;\n+      fs->regs.reg[0].loc.offset = -8;\n+\n       return _URC_NO_REASON;\n     }\n "}]}