{"sha": "c78f1e25a5b020c1b72b16263a439f869ab0f696", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yzc4ZjFlMjVhNWIwMjBjMWI3MmIxNjI2M2E0MzlmODY5YWIwZjY5Ng==", "commit": {"author": {"name": "Yuri Rumyantsev", "email": "ysrumyan@gmail.com", "date": "2014-12-01T12:19:28Z"}, "committer": {"name": "Ilya Enkovich", "email": "ienkovich@gcc.gnu.org", "date": "2014-12-01T12:19:28Z"}, "message": "re PR tree-optimization/63941 (ICE on valid code at -O3 and above on x86_64-linux-gnu)\n\ngcc/\n\n\tPR tree-optimization/63941\n\t* tree-if-conv.c (add_to_predicate_list): Delete wrong assertion that\n\tDOM_BB has non-true predicate, conditionally set non-true predicate\n\tfor BB.\n\ngcc/testsuite/\n\n\tPR tree-optimization/63941\n\t* gcc.dg/torture/pr63941.c: New test.\n\nFrom-SVN: r218206", "tree": {"sha": "9e9c54f55ed3a87fa7449d607abf74a9e6067d4b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9e9c54f55ed3a87fa7449d607abf74a9e6067d4b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c78f1e25a5b020c1b72b16263a439f869ab0f696", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c78f1e25a5b020c1b72b16263a439f869ab0f696", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c78f1e25a5b020c1b72b16263a439f869ab0f696", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c78f1e25a5b020c1b72b16263a439f869ab0f696/comments", "author": {"login": "ysrumyan", "id": 44425612, "node_id": "MDQ6VXNlcjQ0NDI1NjEy", "avatar_url": "https://avatars.githubusercontent.com/u/44425612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ysrumyan", "html_url": "https://github.com/ysrumyan", "followers_url": "https://api.github.com/users/ysrumyan/followers", "following_url": "https://api.github.com/users/ysrumyan/following{/other_user}", "gists_url": "https://api.github.com/users/ysrumyan/gists{/gist_id}", "starred_url": "https://api.github.com/users/ysrumyan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ysrumyan/subscriptions", "organizations_url": "https://api.github.com/users/ysrumyan/orgs", "repos_url": "https://api.github.com/users/ysrumyan/repos", "events_url": "https://api.github.com/users/ysrumyan/events{/privacy}", "received_events_url": "https://api.github.com/users/ysrumyan/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "64e5228e15ec4f5ccd9ba9ea309ddbeea678f447", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/64e5228e15ec4f5ccd9ba9ea309ddbeea678f447", "html_url": "https://github.com/Rust-GCC/gccrs/commit/64e5228e15ec4f5ccd9ba9ea309ddbeea678f447"}], "stats": {"total": 38, "additions": 36, "deletions": 2}, "files": [{"sha": "bf7a61afa3184514ce8938c29ebe6664c77408c9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c78f1e25a5b020c1b72b16263a439f869ab0f696/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c78f1e25a5b020c1b72b16263a439f869ab0f696/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c78f1e25a5b020c1b72b16263a439f869ab0f696", "patch": "@@ -1,3 +1,10 @@\n+2014-12-01  Yuri Rumyantsev  <ysrumyan@gmail.com>\n+\n+\tPR tree-optimization/63941\n+\t* tree-if-conv.c (add_to_predicate_list): Delete wrong assertion that\n+\tDOM_BB has non-true predicate, conditionally set non-true predicate\n+\tfor BB.\n+\n 2014-12-01  Martin Jambor  <mjambor@suse.cz>\n \n \tPR ipa/63551"}, {"sha": "cb8bef7d901bb193a9614397cfe000b0650e5b6d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c78f1e25a5b020c1b72b16263a439f869ab0f696/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c78f1e25a5b020c1b72b16263a439f869ab0f696/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c78f1e25a5b020c1b72b16263a439f869ab0f696", "patch": "@@ -1,3 +1,8 @@\n+2014-12-01  Yuri Rumyantsev  <ysrumyan@gmail.com>\n+\n+\tPR tree-optimization/63941\n+\t* gcc.dg/torture/pr63941.c: New test.\n+\n 2014-12-01  Martin Jambor  <mjambor@suse.cz>\n \n \tPR ipa/63551"}, {"sha": "3c7c99864462a52bf0eece734ec9a24131b10178", "filename": "gcc/testsuite/gcc.dg/torture/pr63941.c", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c78f1e25a5b020c1b72b16263a439f869ab0f696/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr63941.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c78f1e25a5b020c1b72b16263a439f869ab0f696/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr63941.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr63941.c?ref=c78f1e25a5b020c1b72b16263a439f869ab0f696", "patch": "@@ -0,0 +1,20 @@\n+/* { dg-do compile } */\n+\n+int a, b, c, d[1], e, f, g, h;\n+\n+void\n+fn1 ()\n+{\n+  char i = 0;\n+  for (b = 0; b >= 0;)\n+    for (b = 0; b < 2; b++)\n+      {\n+\td[f] && (e = 0);\n+\th = 1 & a - i ? 0 : a;\n+\tc = i = h;\n+\tchar j = c;\n+\tint k = 0;\n+\tg = j || j > k;\n+\td[0] = 0;\n+      }\n+}"}, {"sha": "269fda50ebe6a10a82c6ab7455ae714744d19127", "filename": "gcc/tree-if-conv.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c78f1e25a5b020c1b72b16263a439f869ab0f696/gcc%2Ftree-if-conv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c78f1e25a5b020c1b72b16263a439f869ab0f696/gcc%2Ftree-if-conv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-if-conv.c?ref=c78f1e25a5b020c1b72b16263a439f869ab0f696", "patch": "@@ -435,8 +435,10 @@ add_to_predicate_list (struct loop *loop, basic_block bb, tree nc)\n     {\n       gcc_assert (flow_bb_inside_loop_p (loop, dom_bb));\n       bc = bb_predicate (dom_bb);\n-      gcc_assert (!is_true_predicate (bc));\n-      set_bb_predicate (bb, bc);\n+      if (!is_true_predicate (bc))\n+\tset_bb_predicate (bb, bc);\n+      else\n+\tgcc_assert (is_true_predicate (bb_predicate (bb)));\n       if (dump_file && (dump_flags & TDF_DETAILS))\n \tfprintf (dump_file, \"Use predicate of bb#%d for bb#%d\\n\",\n \t\t dom_bb->index, bb->index);"}]}