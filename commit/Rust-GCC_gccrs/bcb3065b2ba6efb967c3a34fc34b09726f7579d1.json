{"sha": "bcb3065b2ba6efb967c3a34fc34b09726f7579d1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmNiMzA2NWIyYmE2ZWZiOTY3YzNhMzRmYzM0YjA5NzI2Zjc1NzlkMQ==", "commit": {"author": {"name": "Kewen Lin", "email": "linkw@linux.ibm.com", "date": "2021-01-11T02:33:23Z"}, "committer": {"name": "Kewen Lin", "email": "linkw@linux.ibm.com", "date": "2021-01-11T02:33:23Z"}, "message": "ira: Skip some pseudos in move_unallocated_pseudos\n\nThis patch is to make move_unallocated_pseudos consistent\nto what we have in function find_moveable_pseudos, where we\nrecord the original pseudo into pseudo_replaced_reg only if\nvalidate_change succeeds with newreg.  To ensure every\nunallocated pseudo in move_unallocated_pseudos has expected\ninformation, it's better to add a check and skip it if it's\nunexpected.  This avoids possible ICEs in future.\n\ngcc/ChangeLog:\n\n\t* ira.c (move_unallocated_pseudos): Check other_reg and skip if\n\tit isn't set.", "tree": {"sha": "ef68cd0508a8d0dadba9dbaf4c5f6491cae453c6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ef68cd0508a8d0dadba9dbaf4c5f6491cae453c6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bcb3065b2ba6efb967c3a34fc34b09726f7579d1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bcb3065b2ba6efb967c3a34fc34b09726f7579d1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bcb3065b2ba6efb967c3a34fc34b09726f7579d1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bcb3065b2ba6efb967c3a34fc34b09726f7579d1/comments", "author": {"login": "jedilyn", "id": 38515402, "node_id": "MDQ6VXNlcjM4NTE1NDAy", "avatar_url": "https://avatars.githubusercontent.com/u/38515402?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jedilyn", "html_url": "https://github.com/jedilyn", "followers_url": "https://api.github.com/users/jedilyn/followers", "following_url": "https://api.github.com/users/jedilyn/following{/other_user}", "gists_url": "https://api.github.com/users/jedilyn/gists{/gist_id}", "starred_url": "https://api.github.com/users/jedilyn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jedilyn/subscriptions", "organizations_url": "https://api.github.com/users/jedilyn/orgs", "repos_url": "https://api.github.com/users/jedilyn/repos", "events_url": "https://api.github.com/users/jedilyn/events{/privacy}", "received_events_url": "https://api.github.com/users/jedilyn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jedilyn", "id": 38515402, "node_id": "MDQ6VXNlcjM4NTE1NDAy", "avatar_url": "https://avatars.githubusercontent.com/u/38515402?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jedilyn", "html_url": "https://github.com/jedilyn", "followers_url": "https://api.github.com/users/jedilyn/followers", "following_url": "https://api.github.com/users/jedilyn/following{/other_user}", "gists_url": "https://api.github.com/users/jedilyn/gists{/gist_id}", "starred_url": "https://api.github.com/users/jedilyn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jedilyn/subscriptions", "organizations_url": "https://api.github.com/users/jedilyn/orgs", "repos_url": "https://api.github.com/users/jedilyn/repos", "events_url": "https://api.github.com/users/jedilyn/events{/privacy}", "received_events_url": "https://api.github.com/users/jedilyn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "366f86bd42939c920bdf2a37e69c66d03ea2d572", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/366f86bd42939c920bdf2a37e69c66d03ea2d572", "html_url": "https://github.com/Rust-GCC/gccrs/commit/366f86bd42939c920bdf2a37e69c66d03ea2d572"}], "stats": {"total": 9, "additions": 9, "deletions": 0}, "files": [{"sha": "725b0ff0276c1c85f713bf8fef4709aeda1e4958", "filename": "gcc/ira.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bcb3065b2ba6efb967c3a34fc34b09726f7579d1/gcc%2Fira.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bcb3065b2ba6efb967c3a34fc34b09726f7579d1/gcc%2Fira.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fira.c?ref=bcb3065b2ba6efb967c3a34fc34b09726f7579d1", "patch": "@@ -5111,6 +5111,15 @@ move_unallocated_pseudos (void)\n       {\n \tint idx = i - first_moveable_pseudo;\n \trtx other_reg = pseudo_replaced_reg[idx];\n+\t/* The iterating range [first_moveable_pseudo, last_moveable_pseudo)\n+\t   covers every new pseudo created in find_moveable_pseudos,\n+\t   regardless of the validation with it is successful or not.\n+\t   So we need to skip the pseudos which were used in those failed\n+\t   validations to avoid unexpected DF info and consequent ICE.\n+\t   We only set pseudo_replaced_reg[] when the validation is successful\n+\t   in find_moveable_pseudos, it's enough to check it here.  */\n+\tif (!other_reg)\n+\t  continue;\n \trtx_insn *def_insn = DF_REF_INSN (DF_REG_DEF_CHAIN (i));\n \t/* The use must follow all definitions of OTHER_REG, so we can\n \t   insert the new definition immediately after any of them.  */"}]}