{"sha": "1c27d4b20f0bfb8e17e28b51678069b18f2d4cb1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWMyN2Q0YjIwZjBiZmI4ZTE3ZTI4YjUxNjc4MDY5YjE4ZjJkNGNiMQ==", "commit": {"author": {"name": "Jan Hubicka", "email": "hubicka@freesoft.cz", "date": "1999-12-01T22:35:15Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "1999-12-01T22:35:15Z"}, "message": "(addsi): New add to lea splitter.\n\n\n\t* (addsi): New add to lea splitter.\n\t(ashlsi): Likewise.\n\t(lea to add/shift peep2): New.\n\nFrom-SVN: r30745", "tree": {"sha": "9a44ad9b69467274321ddbc40bc062d35ad4e6e9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9a44ad9b69467274321ddbc40bc062d35ad4e6e9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1c27d4b20f0bfb8e17e28b51678069b18f2d4cb1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c27d4b20f0bfb8e17e28b51678069b18f2d4cb1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1c27d4b20f0bfb8e17e28b51678069b18f2d4cb1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c27d4b20f0bfb8e17e28b51678069b18f2d4cb1/comments", "author": null, "committer": null, "parents": [{"sha": "c45fd7f9b23593029bd4d846b7d8fc4fe140de25", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c45fd7f9b23593029bd4d846b7d8fc4fe140de25", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c45fd7f9b23593029bd4d846b7d8fc4fe140de25"}], "stats": {"total": 54, "additions": 53, "deletions": 1}, "files": [{"sha": "4f18085e9bfcc661ad1b335d32099968dea6e959", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c27d4b20f0bfb8e17e28b51678069b18f2d4cb1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c27d4b20f0bfb8e17e28b51678069b18f2d4cb1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1c27d4b20f0bfb8e17e28b51678069b18f2d4cb1", "patch": "@@ -1,3 +1,9 @@\n+Fri Nov 26 10:59:12 CET 1999  Jan Hubicka  <hubicka@freesoft.cz>\n+\n+\t* (addsi): New add to lea splitter.\n+\t(ashlsi): Likewise.\n+\t(lea to add/shift peep2): New.\n+\n 1999-12-01  Mark Salter <msalter@cygnus.com>\n \n \t* config/mips/elf.h (STARTFILE_SPEC): Add no-crt0."}, {"sha": "86939a9e77a5d0be264dff3f248bc5c1b2744c28", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 47, "deletions": 1, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c27d4b20f0bfb8e17e28b51678069b18f2d4cb1/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c27d4b20f0bfb8e17e28b51678069b18f2d4cb1/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=1c27d4b20f0bfb8e17e28b51678069b18f2d4cb1", "patch": "@@ -2107,7 +2107,7 @@\n (define_insn \"*zero_extendqihi2_movzbw\"\n   [(set (match_operand:HI 0 \"register_operand\" \"=r\")\n      (zero_extend:HI (match_operand:QI 1 \"nonimmediate_operand\" \"qm\")))]\n-  \"!TARGET_ZERO_EXTEND_WITH_AND || optimize_size\"\n+  \"(!TARGET_ZERO_EXTEND_WITH_AND || optimize_size) && reload_completed\"\n   \"movz{bw|x}\\\\t{%1, %0|%0, %1}\"\n   [(set_attr \"type\" \"imovx\")])\n \n@@ -3096,6 +3096,19 @@\n \t   ]\n \t   (const_string \"alu\")))])\n \n+;; Convert lea to the lea pattern to avoid flags dependency.\n+(define_split\n+  [(set (match_operand:SI 0 \"register_operand\" \"\")\n+\t(plus:SI (match_operand:SI 1 \"register_operand\" \"\")\n+\t\t (match_operand:SI 2 \"nonmemory_operand\" \"\")))\n+   (clobber (reg:CC 17))]\n+  \"reload_completed\n+   && true_regnum (operands[0]) != true_regnum (operands[1])\"\n+  [(set (match_dup 0)\n+\t(plus:SI (match_dup 1)\n+\t\t (match_dup 2)))]\n+  \"\")\n+\n (define_insn \"*addsi_2\"\n   [(set (reg:CCNO 17)\n \t(compare:CCNO\n@@ -5501,6 +5514,19 @@\n \t   ]\n \t   (const_string \"ishift\")))])\n \n+;; Convert lea to the lea pattern to avoid flags dependency.\n+(define_split\n+  [(set (match_operand:SI 0 \"register_operand\" \"\")\n+\t(ashift:SI (match_operand:SI 1 \"register_operand\" \"\")\n+\t\t   (match_operand:QI 2 \"immediate_operand\" \"\")))\n+   (clobber (reg:CC 17))]\n+  \"reload_completed\n+   && true_regnum (operands[0]) != true_regnum (operands[1])\"\n+  [(set (match_dup 0)\n+\t(mult:SI (match_dup 1)\n+\t\t (match_dup 2)))]\n+  \"operands[2] = GEN_INT (1 << INTVAL (operands[2]));\")\n+\n (define_insn \"*ashlsi3_cmpno\"\n   [(set (reg:CCNO 17)\n \t(compare:CCNO\n@@ -8494,6 +8520,26 @@\n   [(parallel [(set (match_dup 0) (const_int -1))\n \t      (clobber (reg:CC 17))])]\n   \"operands[0] = gen_rtx_REG (SImode, true_regnum (operands[0]));\")\n+\n+;; Attempt to convert simple leas to adds. These can be created by\n+;; move expanders.\n+(define_peephole2\n+  [(set (match_operand:SI 0 \"register_operand\" \"\")\n+  \t(plus:SI (match_dup 0)\n+\t\t (match_operand:SI 1 \"nonmemory_operand\" \"\")))]\n+  \"reg_dead_p (insn, gen_rtx_REG (CCmode, FLAGS_REG))\"\n+  [(parallel [(set (match_dup 0) (plus:SI (match_dup 0) (match_dup 1)))\n+\t      (clobber (reg:CC 17))])]\n+  \"\")\n+\n+(define_peephole2\n+  [(set (match_operand:SI 0 \"register_operand\" \"\")\n+  \t(mult:SI (match_dup 0)\n+\t\t (match_operand:SI 1 \"immediate_operand\" \"\")))]\n+  \"reg_dead_p (insn, gen_rtx_REG (CCmode, FLAGS_REG))\"\n+  [(parallel [(set (match_dup 0) (ashift:SI (match_dup 0) (match_dup 2)))\n+\t      (clobber (reg:CC 17))])]\n+  \"operands[2] = GEN_INT (exact_log2 (INTVAL (operands[1])));\")\n \f\n ;; Call-value patterns last so that the wildcard operand does not\n ;; disrupt insn-recog's switch tables."}]}