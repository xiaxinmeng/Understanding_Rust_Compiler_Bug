{"sha": "17c7332100d72bdb013d40db25cf64617c48ca9e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTdjNzMzMjEwMGQ3MmJkYjAxM2Q0MGRiMjVjZjY0NjE3YzQ4Y2E5ZQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1992-09-19T19:44:33Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1992-09-19T19:44:33Z"}, "message": "(DECL_MODE, DECL_RTL): Update comments.\n\nFrom-SVN: r2172", "tree": {"sha": "94f00d720bb0279cc19ab91568c5affa96c46eb1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/94f00d720bb0279cc19ab91568c5affa96c46eb1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/17c7332100d72bdb013d40db25cf64617c48ca9e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17c7332100d72bdb013d40db25cf64617c48ca9e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/17c7332100d72bdb013d40db25cf64617c48ca9e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17c7332100d72bdb013d40db25cf64617c48ca9e/comments", "author": null, "committer": null, "parents": [{"sha": "07be3989ad978ad4916344110279db68f2770690", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/07be3989ad978ad4916344110279db68f2770690", "html_url": "https://github.com/Rust-GCC/gccrs/commit/07be3989ad978ad4916344110279db68f2770690"}], "stats": {"total": 10, "additions": 8, "deletions": 2}, "files": [{"sha": "4c70438eb4c0b8cc28b8b57896d9a6e23de95050", "filename": "gcc/tree.h", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17c7332100d72bdb013d40db25cf64617c48ca9e/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17c7332100d72bdb013d40db25cf64617c48ca9e/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=17c7332100d72bdb013d40db25cf64617c48ca9e", "patch": "@@ -728,9 +728,15 @@ struct tree_type\n #define DECL_SIZE(NODE) ((NODE)->decl.size)\n /* Holds the alignment required for the datum.  */\n #define DECL_ALIGN(NODE) ((NODE)->decl.frame_size)\n-/* Holds the machine mode of a variable or field.  */\n+/* Holds the machine mode corresponding to the declaration of a variable or\n+   field.  Always equal to TYPE_MODE (TREE_TYPE (decl)) except for a\n+   FIELD_DECL.  */\n #define DECL_MODE(NODE) ((NODE)->decl.mode)\n-/* Holds the RTL expression for the value of a variable or function.  */\n+/* Holds the RTL expression for the value of a variable or function.  If\n+   PROMOTED_MODE is defined, the mode of this expression may not be same\n+   as DECL_MODE.  In that case, DECL_MODE contains the mode corresponding\n+   to the variable's data type, while the mode\n+   of DECL_RTL is the mode actually used to contain the data.  */\n #define DECL_RTL(NODE) ((NODE)->decl.rtl)\n /* For PARM_DECL, holds an RTL for the stack slot or register\n    where the data was actually passed.  */"}]}