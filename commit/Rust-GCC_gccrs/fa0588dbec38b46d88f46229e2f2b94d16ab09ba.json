{"sha": "fa0588dbec38b46d88f46229e2f2b94d16ab09ba", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmEwNTg4ZGJlYzM4YjQ2ZDg4ZjQ2MjI5ZTJmMmI5NGQxNmFiMDliYQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2020-06-23T15:37:17Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2020-06-23T16:35:45Z"}, "message": "Emit user subtypes with -fgnat-encodings=minimal\n\nThis changes the compiler to emit debug info for user-defined subtypes\nwith -fgnat-encodings=minimal, as they might be needed by the debugger.\n\ngcc/ada/ChangeLog:\n\t* gcc-interface/decl.c (gnat_to_gnu_entity) <E_Record_Subtype>: Set\n\tdebug type to the base type and only if the subtype is artificial.", "tree": {"sha": "1a6c6fc071031bee1db527e6c2ba6a764fe9fafe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1a6c6fc071031bee1db527e6c2ba6a764fe9fafe"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fa0588dbec38b46d88f46229e2f2b94d16ab09ba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa0588dbec38b46d88f46229e2f2b94d16ab09ba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fa0588dbec38b46d88f46229e2f2b94d16ab09ba", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa0588dbec38b46d88f46229e2f2b94d16ab09ba/comments", "author": null, "committer": null, "parents": [{"sha": "d94d571bf0d42beb90bb36d311b7a4c075c81b94", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d94d571bf0d42beb90bb36d311b7a4c075c81b94", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d94d571bf0d42beb90bb36d311b7a4c075c81b94"}], "stats": {"total": 19, "additions": 7, "deletions": 12}, "files": [{"sha": "589154ba392703641a1d8dc2ba33ef7aea846996", "filename": "gcc/ada/gcc-interface/decl.c", "status": "modified", "additions": 7, "deletions": 12, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa0588dbec38b46d88f46229e2f2b94d16ab09ba/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa0588dbec38b46d88f46229e2f2b94d16ab09ba/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Fdecl.c?ref=fa0588dbec38b46d88f46229e2f2b94d16ab09ba", "patch": "@@ -3507,18 +3507,6 @@ gnat_to_gnu_entity (Entity_Id gnat_entity, tree gnu_expr, bool definition)\n \n \t      gnu_type = make_node (RECORD_TYPE);\n \t      TYPE_NAME (gnu_type) = gnu_entity_name;\n-\t      if (gnat_encodings == DWARF_GNAT_ENCODINGS_MINIMAL)\n-\t\t{\n-\t\t  /* Use the ultimate base record type as the debug type.\n-\t\t     Subtypes and derived types bring no useful\n-\t\t     information.  */\n-\t\t  Entity_Id gnat_debug_type = gnat_entity;\n-\t\t  while (Etype (gnat_debug_type) != gnat_debug_type)\n-\t\t    gnat_debug_type = Etype (gnat_debug_type);\n-\t\t  tree gnu_debug_type\n-\t\t    = TYPE_MAIN_VARIANT (gnat_to_gnu_type (gnat_debug_type));\n-\t\t  SET_TYPE_DEBUG_TYPE (gnu_type, gnu_debug_type);\n-\t\t}\n \t      TYPE_PACKED (gnu_type) = TYPE_PACKED (gnu_base_type);\n \t      TYPE_REVERSE_STORAGE_ORDER (gnu_type)\n \t\t= Reverse_Storage_Order (gnat_entity);\n@@ -3580,6 +3568,13 @@ gnat_to_gnu_entity (Entity_Id gnat_entity, tree gnu_expr, bool definition)\n \t\t\t\t\t true, debug_info_p,\n \t\t\t\t\t NULL, gnat_entity);\n \t\t}\n+\n+\t      /* Or else, if the subtype is artificial and encodings are not\n+\t\t used, use the base record type as the debug type.  */\n+\t      else if (debug_info_p\n+\t\t       && artificial_p\n+\t\t       && gnat_encodings == DWARF_GNAT_ENCODINGS_MINIMAL)\n+\t\tSET_TYPE_DEBUG_TYPE (gnu_type, gnu_unpad_base_type);\n \t    }\n \n \t  /* Otherwise, go down all the components in the new type and make"}]}