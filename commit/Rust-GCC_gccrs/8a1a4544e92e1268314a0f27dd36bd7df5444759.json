{"sha": "8a1a4544e92e1268314a0f27dd36bd7df5444759", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGExYTQ1NDRlOTJlMTI2ODMxNGEwZjI3ZGQzNmJkN2RmNTQ0NDc1OQ==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2013-10-30T00:09:21Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2013-10-30T00:09:21Z"}, "message": "gcc_update (files_and_dependencies): Add rules for libcilkrts.\n\n2013-10-29  Tobias Burnus  <burnus@net-b.de>\n\n        * gcc_update (files_and_dependencies): Add rules for\n        libcilkrts.\n\n2013-10-29  Tobias Burnus  <burnus@net-b.de>\n\n        * configure.ac: Add AM_MAINTAINER_MODE.\n        * aclocal.m4: Regenerate.\n        * configure.ac: Regenerate.\n        * Makefile.in: Regenerate.\n\nFrom-SVN: r204189", "tree": {"sha": "4acac1fa7a8e83a490e8db50a6c161c32034efca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4acac1fa7a8e83a490e8db50a6c161c32034efca"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8a1a4544e92e1268314a0f27dd36bd7df5444759", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a1a4544e92e1268314a0f27dd36bd7df5444759", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8a1a4544e92e1268314a0f27dd36bd7df5444759", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a1a4544e92e1268314a0f27dd36bd7df5444759/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "be0ec0a5dc9e35e245d46f913af59c736ab30bf9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be0ec0a5dc9e35e245d46f913af59c736ab30bf9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/be0ec0a5dc9e35e245d46f913af59c736ab30bf9"}], "stats": {"total": 102, "additions": 97, "deletions": 5}, "files": [{"sha": "029548bf29df4abb46684819bccdad1d8145348f", "filename": "contrib/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a1a4544e92e1268314a0f27dd36bd7df5444759/contrib%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a1a4544e92e1268314a0f27dd36bd7df5444759/contrib%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2FChangeLog?ref=8a1a4544e92e1268314a0f27dd36bd7df5444759", "patch": "@@ -1,3 +1,8 @@\n+2013-10-29  Tobias Burnus  <burnus@net-b.de>\n+\n+\t* gcc_update (files_and_dependencies): Add rules for\n+\tlibcilkrts.\n+\n 2013-10-11  Thomas Schwinge  <thomas@codesourcery.com>\n \n \t* gcc_update (files_and_dependencies): Fix rule for"}, {"sha": "499e5ef6528837aa0d7550f3e9b44342cacf0c43", "filename": "contrib/gcc_update", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a1a4544e92e1268314a0f27dd36bd7df5444759/contrib%2Fgcc_update", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a1a4544e92e1268314a0f27dd36bd7df5444759/contrib%2Fgcc_update", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fgcc_update?ref=8a1a4544e92e1268314a0f27dd36bd7df5444759", "patch": "@@ -161,6 +161,9 @@ libsanitizer/sanitizer_common/Makefile.in: libsanitizer/sanitizer_common/Makefil\n libvtv/aclocal.m4: libvtv/configure.ac libvtv/acinclude.m4\n libvtv/Makefile.in: libvtv/Makefile.am libvtv/aclocal.m4\n libvtv/configure: libvtv/configure.ac libvtv/aclocal.m4\n+libcilkrts/aclocal.m4: libcilkrts/configure.ac\n+libcilkrts/Makefile.in: libcilkrts/Makefile.am\n+libcilkrts/configure: libcilkrts/configure.ac\n # Top level\n Makefile.in: Makefile.tpl Makefile.def\n configure: configure.ac config/acx.m4"}, {"sha": "48cc42a1a64baf46eb33316fb728251ff042d15e", "filename": "libcilkrts/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a1a4544e92e1268314a0f27dd36bd7df5444759/libcilkrts%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a1a4544e92e1268314a0f27dd36bd7df5444759/libcilkrts%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcilkrts%2FChangeLog?ref=8a1a4544e92e1268314a0f27dd36bd7df5444759", "patch": "@@ -1,3 +1,10 @@\n+2013-10-29  Tobias Burnus  <burnus@net-b.de>\n+\n+\t* configure.ac: Add AM_MAINTAINER_MODE.\n+\t* aclocal.m4: Regenerate.\n+\t* configure.ac: Regenerate.\n+\t* Makefile.in: Regenerate.\n+\n 2013-10-23  Balaji V. Iyer  <balaji.v.iyer@intel.com>\n \n \t* libcilkrts/Makefile.am: New file.  Libcilkrts version 3902."}, {"sha": "46914e4fea5eef21fa502f05620e1f183a01fccb", "filename": "libcilkrts/Makefile.in", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a1a4544e92e1268314a0f27dd36bd7df5444759/libcilkrts%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a1a4544e92e1268314a0f27dd36bd7df5444759/libcilkrts%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcilkrts%2FMakefile.in?ref=8a1a4544e92e1268314a0f27dd36bd7df5444759", "patch": "@@ -246,6 +246,7 @@ LIBTOOL = @LIBTOOL@\n LIPO = @LIPO@\n LN_S = @LN_S@\n LTLIBOBJS = @LTLIBOBJS@\n+MAINT = @MAINT@\n MAKEINFO = @MAKEINFO@\n MKDIR_P = @MKDIR_P@\n NM = @NM@\n@@ -460,7 +461,7 @@ all: all-am\n .SUFFIXES: .c .cpp .lo .o .obj\n am--refresh:\n \t@:\n-$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(srcdir)/include/internal/rev.mk $(am__configure_deps)\n+$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am $(srcdir)/include/internal/rev.mk $(am__configure_deps)\n \t@for dep in $?; do \\\n \t  case '$(am__configure_deps)' in \\\n \t    *$$dep*) \\\n@@ -487,9 +488,9 @@ Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status\n $(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)\n \t$(SHELL) ./config.status --recheck\n \n-$(top_srcdir)/configure:  $(am__configure_deps)\n+$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)\n \t$(am__cd) $(srcdir) && $(AUTOCONF)\n-$(ACLOCAL_M4):  $(am__aclocal_m4_deps)\n+$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)\n \t$(am__cd) $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)\n $(am__aclocal_m4_deps):\n install-toolexeclibLTLIBRARIES: $(toolexeclib_LTLIBRARIES)"}, {"sha": "68107caffa075b0a8a198f60a0e1ee574eb6d58d", "filename": "libcilkrts/aclocal.m4", "status": "modified", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a1a4544e92e1268314a0f27dd36bd7df5444759/libcilkrts%2Faclocal.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a1a4544e92e1268314a0f27dd36bd7df5444759/libcilkrts%2Faclocal.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcilkrts%2Faclocal.m4?ref=8a1a4544e92e1268314a0f27dd36bd7df5444759", "patch": "@@ -566,6 +566,46 @@ if test x\"${install_sh}\" != xset; then\n fi\n AC_SUBST(install_sh)])\n \n+# Add --enable-maintainer-mode option to configure.         -*- Autoconf -*-\n+# From Jim Meyering\n+\n+# Copyright (C) 1996, 1998, 2000, 2001, 2002, 2003, 2004, 2005, 2008\n+# Free Software Foundation, Inc.\n+#\n+# This file is free software; the Free Software Foundation\n+# gives unlimited permission to copy and/or distribute it,\n+# with or without modifications, as long as this notice is preserved.\n+\n+# serial 5\n+\n+# AM_MAINTAINER_MODE([DEFAULT-MODE])\n+# ----------------------------------\n+# Control maintainer-specific portions of Makefiles.\n+# Default is to disable them, unless `enable' is passed literally.\n+# For symmetry, `disable' may be passed as well.  Anyway, the user\n+# can override the default with the --enable/--disable switch.\n+AC_DEFUN([AM_MAINTAINER_MODE],\n+[m4_case(m4_default([$1], [disable]),\n+       [enable], [m4_define([am_maintainer_other], [disable])],\n+       [disable], [m4_define([am_maintainer_other], [enable])],\n+       [m4_define([am_maintainer_other], [enable])\n+        m4_warn([syntax], [unexpected argument to AM@&t@_MAINTAINER_MODE: $1])])\n+AC_MSG_CHECKING([whether to am_maintainer_other maintainer-specific portions of Makefiles])\n+  dnl maintainer-mode's default is 'disable' unless 'enable' is passed\n+  AC_ARG_ENABLE([maintainer-mode],\n+[  --][am_maintainer_other][-maintainer-mode  am_maintainer_other make rules and dependencies not useful\n+\t\t\t  (and sometimes confusing) to the casual installer],\n+      [USE_MAINTAINER_MODE=$enableval],\n+      [USE_MAINTAINER_MODE=]m4_if(am_maintainer_other, [enable], [no], [yes]))\n+  AC_MSG_RESULT([$USE_MAINTAINER_MODE])\n+  AM_CONDITIONAL([MAINTAINER_MODE], [test $USE_MAINTAINER_MODE = yes])\n+  MAINT=$MAINTAINER_MODE_TRUE\n+  AC_SUBST([MAINT])dnl\n+]\n+)\n+\n+AU_DEFUN([jm_MAINTAINER_MODE], [AM_MAINTAINER_MODE])\n+\n # Check to see how 'make' treats includes.\t            -*- Autoconf -*-\n \n # Copyright (C) 2001, 2002, 2003, 2005, 2009  Free Software Foundation, Inc."}, {"sha": "dc02a86f47728f776c6a88d067c5df4b39accb63", "filename": "libcilkrts/configure", "status": "modified", "additions": 36, "deletions": 2, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a1a4544e92e1268314a0f27dd36bd7df5444759/libcilkrts%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a1a4544e92e1268314a0f27dd36bd7df5444759/libcilkrts%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcilkrts%2Fconfigure?ref=8a1a4544e92e1268314a0f27dd36bd7df5444759", "patch": "@@ -654,6 +654,9 @@ CPPFLAGS\n LDFLAGS\n CXXFLAGS\n CXX\n+MAINT\n+MAINTAINER_MODE_FALSE\n+MAINTAINER_MODE_TRUE\n am__untar\n am__tar\n AMTAR\n@@ -730,6 +733,7 @@ SHELL'\n ac_subst_files=''\n ac_user_opts='\n enable_option_checking\n+enable_maintainer_mode\n enable_dependency_tracking\n enable_multilib\n enable_version_specific_runtime_libs\n@@ -1374,6 +1378,8 @@ Optional Features:\n   --disable-option-checking  ignore unrecognized --enable/--with options\n   --disable-FEATURE       do not include FEATURE (same as --enable-FEATURE=no)\n   --enable-FEATURE[=ARG]  include FEATURE [ARG=yes]\n+  --enable-maintainer-mode  enable make rules and dependencies not useful\n+\t\t\t  (and sometimes confusing) to the casual installer\n   --disable-dependency-tracking  speeds up one-time build\n   --enable-dependency-tracking   do not reject slow dependency extractors\n   --enable-multilib       build many library versions (default)\n@@ -2838,6 +2844,30 @@ am__tar='${AMTAR} chof - \"$$tardir\"'; am__untar='${AMTAR} xf -'\n \n \n \n+\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether to enable maintainer-specific portions of Makefiles\" >&5\n+$as_echo_n \"checking whether to enable maintainer-specific portions of Makefiles... \" >&6; }\n+    # Check whether --enable-maintainer-mode was given.\n+if test \"${enable_maintainer_mode+set}\" = set; then :\n+  enableval=$enable_maintainer_mode; USE_MAINTAINER_MODE=$enableval\n+else\n+  USE_MAINTAINER_MODE=no\n+fi\n+\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $USE_MAINTAINER_MODE\" >&5\n+$as_echo \"$USE_MAINTAINER_MODE\" >&6; }\n+   if test $USE_MAINTAINER_MODE = yes; then\n+  MAINTAINER_MODE_TRUE=\n+  MAINTAINER_MODE_FALSE='#'\n+else\n+  MAINTAINER_MODE_TRUE='#'\n+  MAINTAINER_MODE_FALSE=\n+fi\n+\n+  MAINT=$MAINTAINER_MODE_TRUE\n+\n+\n+\n # Build a DLL on Windows\n # AC_LIBTOOL_WIN32_DLL\n ac_ext=cpp\n@@ -10803,7 +10833,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10806 \"configure\"\n+#line 10836 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -10909,7 +10939,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10912 \"configure\"\n+#line 10942 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -14307,6 +14337,10 @@ else\n   am__EXEEXT_FALSE=\n fi\n \n+if test -z \"${MAINTAINER_MODE_TRUE}\" && test -z \"${MAINTAINER_MODE_FALSE}\"; then\n+  as_fn_error \"conditional \\\"MAINTAINER_MODE\\\" was never defined.\n+Usually this means the macro was only invoked conditionally.\" \"$LINENO\" 5\n+fi\n if test -z \"${AMDEP_TRUE}\" && test -z \"${AMDEP_FALSE}\"; then\n   as_fn_error \"conditional \\\"AMDEP\\\" was never defined.\n Usually this means the macro was only invoked conditionally.\" \"$LINENO\" 5"}, {"sha": "936786816e944df4308fa96072a2f6205f33f8e3", "filename": "libcilkrts/configure.ac", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a1a4544e92e1268314a0f27dd36bd7df5444759/libcilkrts%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a1a4544e92e1268314a0f27dd36bd7df5444759/libcilkrts%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcilkrts%2Fconfigure.ac?ref=8a1a4544e92e1268314a0f27dd36bd7df5444759", "patch": "@@ -39,6 +39,8 @@ AC_PREREQ([2.64])\n AC_CANONICAL_SYSTEM\n AM_INIT_AUTOMAKE(foreign no-dist)\n \n+AM_MAINTAINER_MODE\n+\n # Build a DLL on Windows\n # AC_LIBTOOL_WIN32_DLL\n AC_PROG_CXX"}]}