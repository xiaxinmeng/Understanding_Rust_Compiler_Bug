{"sha": "f49e46d831f6f30c42e1580c33fa50abe1f5c7fa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjQ5ZTQ2ZDgzMWY2ZjMwYzQyZTE1ODBjMzNmYTUwYWJlMWY1YzdmYQ==", "commit": {"author": {"name": "Hans-Peter Nilsson", "email": "hp@axis.com", "date": "2008-07-14T00:22:35Z"}, "committer": {"name": "Hans-Peter Nilsson", "email": "hp@gcc.gnu.org", "date": "2008-07-14T00:22:35Z"}, "message": "re PR target/35492 (ICE building kernel sk_stream_wait_connect output_operand: invalid operand for 'p' modifier)\n\n\tPR target/35492.\n\t* config/cris/cris.h (CRIS_CONST_OK_FOR_LETTER_P): Renamed from\n\tCONST_OK_FOR_LETTER_P.  All port-local users changed.\n\t(CONST_OK_FOR_CONSTRAINT_P): Define; implement Kc as old K,\n\timplement Kp matching power-of-two.\n\t(CONSTRAINT_LEN): Define to match.\n\t* config/cris/cris.md: Replace all use of constraint K with Kc.\n\t(\"*btst*): Use Kp for operand 0 of last alternative.\n\nFrom-SVN: r137765", "tree": {"sha": "7a7a4c0e40dbb5c2fb28d2615161c71fb24a52ce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7a7a4c0e40dbb5c2fb28d2615161c71fb24a52ce"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f49e46d831f6f30c42e1580c33fa50abe1f5c7fa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f49e46d831f6f30c42e1580c33fa50abe1f5c7fa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f49e46d831f6f30c42e1580c33fa50abe1f5c7fa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f49e46d831f6f30c42e1580c33fa50abe1f5c7fa/comments", "author": {"login": "hpataxisdotcom", "id": 80339731, "node_id": "MDQ6VXNlcjgwMzM5NzMx", "avatar_url": "https://avatars.githubusercontent.com/u/80339731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hpataxisdotcom", "html_url": "https://github.com/hpataxisdotcom", "followers_url": "https://api.github.com/users/hpataxisdotcom/followers", "following_url": "https://api.github.com/users/hpataxisdotcom/following{/other_user}", "gists_url": "https://api.github.com/users/hpataxisdotcom/gists{/gist_id}", "starred_url": "https://api.github.com/users/hpataxisdotcom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hpataxisdotcom/subscriptions", "organizations_url": "https://api.github.com/users/hpataxisdotcom/orgs", "repos_url": "https://api.github.com/users/hpataxisdotcom/repos", "events_url": "https://api.github.com/users/hpataxisdotcom/events{/privacy}", "received_events_url": "https://api.github.com/users/hpataxisdotcom/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2961c7a9c7d35f63f080ff223746c84e2f927a7e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2961c7a9c7d35f63f080ff223746c84e2f927a7e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2961c7a9c7d35f63f080ff223746c84e2f927a7e"}], "stats": {"total": 116, "additions": 69, "deletions": 47}, "files": [{"sha": "aab33070fc2b330da4e39afba5bc0628e94b7156", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f49e46d831f6f30c42e1580c33fa50abe1f5c7fa/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f49e46d831f6f30c42e1580c33fa50abe1f5c7fa/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f49e46d831f6f30c42e1580c33fa50abe1f5c7fa", "patch": "@@ -1,3 +1,14 @@\n+2008-07-14  Hans-Peter Nilsson  <hp@axis.com>\n+\n+\tPR target/35492.\n+\t* config/cris/cris.h (CRIS_CONST_OK_FOR_LETTER_P): Renamed from\n+\tCONST_OK_FOR_LETTER_P.  All port-local users changed.\n+\t(CONST_OK_FOR_CONSTRAINT_P): Define; implement Kc as old K,\n+\timplement Kp matching power-of-two.\n+\t(CONSTRAINT_LEN): Define to match.\n+\t* config/cris/cris.md: Replace all use of constraint K with Kc.\n+\t(\"*btst*): Use Kp for operand 0 of last alternative.\n+\n 2008-07-13  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n \n \tPR testsuite/36440"}, {"sha": "a77f200d7cab3d4e3c27d92cb9077a489d4475cf", "filename": "gcc/config/cris/cris.c", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f49e46d831f6f30c42e1580c33fa50abe1f5c7fa/gcc%2Fconfig%2Fcris%2Fcris.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f49e46d831f6f30c42e1580c33fa50abe1f5c7fa/gcc%2Fconfig%2Fcris%2Fcris.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fcris%2Fcris.c?ref=f49e46d831f6f30c42e1580c33fa50abe1f5c7fa", "patch": "@@ -684,7 +684,7 @@ cris_print_operand (FILE *file, rtx x, int code)\n       /* Print the unsigned supplied integer as if it were signed\n \t and < 0, i.e print 255 or 65535 as -1, 254, 65534 as -2, etc.  */\n       if (!CONST_INT_P (x)\n-\t  || ! CONST_OK_FOR_LETTER_P (INTVAL (x), 'O'))\n+\t  || !CRIS_CONST_OK_FOR_LETTER_P (INTVAL (x), 'O'))\n \tLOSE_AND_RETURN (\"invalid operand for 'b' modifier\", x);\n       fprintf (file, HOST_WIDE_INT_PRINT_DEC,\n \t       INTVAL (x)| (INTVAL (x) <= 255 ? ~255 : ~65535));\n@@ -1503,8 +1503,8 @@ cris_normal_notice_update_cc (rtx exp, rtx insn)\n \t\t\t   > CRIS_LAST_GENERAL_REGISTER))\n \t\t   || (TARGET_V32\n \t\t       && GET_CODE (SET_SRC (exp)) == CONST_INT\n-\t\t       && CONST_OK_FOR_LETTER_P (INTVAL (SET_SRC (exp)),\n-\t\t\t\t\t\t 'I')))\n+\t\t       && CRIS_CONST_OK_FOR_LETTER_P (INTVAL (SET_SRC (exp)),\n+\t\t\t\t\t\t      'I')))\n \t    {\n \t      /* There's no CC0 change for this case.  Just check\n \t\t for overlap.  */\n@@ -1831,7 +1831,7 @@ cris_rtx_costs (rtx x, int code, int outer_code, int *total)\n       if (CONST_INT_P (XEXP (x, 1))\n           /* Two constants may actually happen before optimization.  */\n           && !CONST_INT_P (XEXP (x, 0))\n-          && !CONST_OK_FOR_LETTER_P (INTVAL (XEXP (x, 1)), 'I'))\n+          && !CRIS_CONST_OK_FOR_LETTER_P (INTVAL (XEXP (x, 1)), 'I'))\n \t{\n \t  *total = (rtx_cost (XEXP (x, 0), outer_code) + 2\n \t\t    + 2 * GET_MODE_NUNITS (GET_MODE (XEXP (x, 0))));\n@@ -1905,7 +1905,8 @@ cris_address_cost (rtx x)\n \n       /* A BDAP -32768 .. 32767 is like BDAP quick, but with 2 extra\n \t bytes.  */\n-      if (CONST_INT_P (tem2) && CONST_OK_FOR_LETTER_P (INTVAL (tem2), 'L'))\n+      if (CONST_INT_P (tem2)\n+\t  && CRIS_CONST_OK_FOR_LETTER_P (INTVAL (tem2), 'L'))\n \treturn (2 + 2) / 2;\n \n       /* A BDAP with some other constant is 2 bytes extra.  */"}, {"sha": "b8a66e96a4baa918e07379c29838ae230fab91e6", "filename": "gcc/config/cris/cris.h", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f49e46d831f6f30c42e1580c33fa50abe1f5c7fa/gcc%2Fconfig%2Fcris%2Fcris.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f49e46d831f6f30c42e1580c33fa50abe1f5c7fa/gcc%2Fconfig%2Fcris%2Fcris.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fcris%2Fcris.h?ref=f49e46d831f6f30c42e1580c33fa50abe1f5c7fa", "patch": "@@ -668,7 +668,7 @@ enum reg_class\n \n /* We are now out of letters; we could use ten more.  This forces us to\n    use C-code in the 'md' file.  FIXME: Use some EXTRA_CONSTRAINTS.  */\n-#define CONST_OK_FOR_LETTER_P(VALUE, C)\t\t\t\\\n+#define CRIS_CONST_OK_FOR_LETTER_P(VALUE, C)\t\t\\\n  (\t\t\t\t\t\t\t\\\n   /* MOVEQ, CMPQ, ANDQ, ORQ.  */\t\t\t\\\n   (C) == 'I' ? (VALUE) >= -32 && (VALUE) <= 31 :\t\\\n@@ -691,6 +691,16 @@ enum reg_class\n   (C) == 'P' ? (VALUE) >= -32768 && (VALUE) <= 65535 :\t\\\n   0)\n \n+#define CONST_OK_FOR_CONSTRAINT_P(VALUE, C, S)\t\\\n+ (\t\t\t\t\t\t\\\n+  ((C) != 'K' || (S)[1] == 'c')\t\t\t\\\n+   ? CRIS_CONST_OK_FOR_LETTER_P (VALUE, C) :\t\\\n+  ((C) == 'K' && (S)[1] == 'p')\t\t\t\\\n+   ? exact_log2 (VALUE) >= 0 :\t\t\t\\\n+  0)\n+\n+#define CONSTRAINT_LEN(C, S) ((C) == 'K' ? 2 : DEFAULT_CONSTRAINT_LEN (C, S))\n+\n /* It is really simple to make up a 0.0; it is the same as int-0 in\n    IEEE754.  */\n #define CONST_DOUBLE_OK_FOR_LETTER_P(VALUE, C)\t\t\t\\"}, {"sha": "12e443115cdd7c3062d544e0e8a13e17160ded50", "filename": "gcc/config/cris/cris.md", "status": "modified", "additions": 41, "deletions": 41, "changes": 82, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f49e46d831f6f30c42e1580c33fa50abe1f5c7fa/gcc%2Fconfig%2Fcris%2Fcris.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f49e46d831f6f30c42e1580c33fa50abe1f5c7fa/gcc%2Fconfig%2Fcris%2Fcris.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fcris%2Fcris.md?ref=f49e46d831f6f30c42e1580c33fa50abe1f5c7fa", "patch": "@@ -347,7 +347,7 @@\n (define_insn \"*cmpdi_non_v32\"\n   [(set (cc0)\n \t(compare (match_operand:DI 0 \"nonimmediate_operand\" \"r,r,r,r,r,r,o\")\n-\t\t (match_operand:DI 1 \"general_operand\" \"K,I,P,n,r,o,r\")))]\n+\t\t (match_operand:DI 1 \"general_operand\" \"Kc,I,P,n,r,o,r\")))]\n   \"!TARGET_V32\"\n   \"@\n    cmpq %1,%M0\\;ax\\;cmpq 0,%H0\n@@ -361,7 +361,7 @@\n (define_insn \"*cmpdi_v32\"\n   [(set (cc0)\n \t(compare (match_operand:DI 0 \"register_operand\"  \"r,r,r,r,r\")\n-\t\t (match_operand:DI 1 \"nonmemory_operand\" \"K,I,P,n,r\")))]\n+\t\t (match_operand:DI 1 \"nonmemory_operand\" \"Kc,I,P,n,r\")))]\n   \"TARGET_V32\"\n   \"@\n    cmpq %1,%M0\\;ax\\;cmpq 0,%H0\n@@ -458,9 +458,9 @@\n (define_insn \"*btst\"\n   [(set (cc0)\n \t(zero_extract\n-\t (match_operand:SI 0 \"nonmemory_operand\" \"r,r,r,r,r,r,n\")\n-\t (match_operand:SI 1 \"const_int_operand\" \"K,n,K,n,K,n,n\")\n-\t (match_operand:SI 2 \"nonmemory_operand\" \"M,M,K,n,r,r,r\")))]\n+\t (match_operand:SI 0 \"nonmemory_operand\" \"r, r,r, r,r, r,Kp\")\n+\t (match_operand:SI 1 \"const_int_operand\" \"Kc,n,Kc,n,Kc,n,n\")\n+\t (match_operand:SI 2 \"nonmemory_operand\" \"M, M,Kc,n,r, r,r\")))]\n   ;; Either it is a single bit, or consecutive ones starting at 0.\n   ;; The btst ones depend on stuff in NOTICE_UPDATE_CC.\n   \"CONST_INT_P (operands[1])\n@@ -690,8 +690,8 @@\n       && (!CONST_INT_P (operands[2])\n \t  || INTVAL (operands[2]) > 127\n \t  || INTVAL (operands[2]) < -128\n-\t  || CONST_OK_FOR_LETTER_P (INTVAL (operands[2]), 'N')\n-\t  || CONST_OK_FOR_LETTER_P (INTVAL (operands[2]), 'J')))\n+\t  || CRIS_CONST_OK_FOR_LETTER_P (INTVAL (operands[2]), 'N')\n+\t  || CRIS_CONST_OK_FOR_LETTER_P (INTVAL (operands[2]), 'J')))\n     return \"#\";\n   if (which_alternative == 4)\n     return \"move<m> [%3=%2%S1],%0\";\n@@ -717,8 +717,8 @@\n       && (!CONST_INT_P (operands[2])\n \t  || INTVAL (operands[2]) > 127\n \t  || INTVAL (operands[2]) < -128\n-\t  || CONST_OK_FOR_LETTER_P (INTVAL (operands[2]), 'N')\n-\t  || CONST_OK_FOR_LETTER_P (INTVAL (operands[2]), 'J')))\n+\t  || CRIS_CONST_OK_FOR_LETTER_P (INTVAL (operands[2]), 'N')\n+\t  || CRIS_CONST_OK_FOR_LETTER_P (INTVAL (operands[2]), 'J')))\n     return \"#\";\n   if (which_alternative < 3)\n     return \"move.%s0 [%3=%1%S2],%0\";\n@@ -836,8 +836,8 @@\n       && (!CONST_INT_P (operands[1])\n \t  || INTVAL (operands[1]) > 127\n \t  || INTVAL (operands[1]) < -128\n-\t  || CONST_OK_FOR_LETTER_P (INTVAL (operands[1]), 'N')\n-\t  || CONST_OK_FOR_LETTER_P (INTVAL (operands[1]), 'J')))\n+\t  || CRIS_CONST_OK_FOR_LETTER_P (INTVAL (operands[1]), 'N')\n+\t  || CRIS_CONST_OK_FOR_LETTER_P (INTVAL (operands[1]), 'J')))\n     return \"#\";\n   if (which_alternative == 1 || which_alternative == 5)\n     return \"#\";\n@@ -870,8 +870,8 @@\n       && (!CONST_INT_P (operands[1])\n \t  || INTVAL (operands[1]) > 127\n \t  || INTVAL (operands[1]) < -128\n-\t  || CONST_OK_FOR_LETTER_P (INTVAL (operands[1]), 'N')\n-\t  || CONST_OK_FOR_LETTER_P (INTVAL (operands[1]), 'J')))\n+\t  || CRIS_CONST_OK_FOR_LETTER_P (INTVAL (operands[1]), 'N')\n+\t  || CRIS_CONST_OK_FOR_LETTER_P (INTVAL (operands[1]), 'J')))\n     return \"#\";\n   if (which_alternative == 1\n       || which_alternative == 7\n@@ -943,8 +943,8 @@\n       && (!CONST_INT_P (operands[1])\n \t  || INTVAL (operands[1]) > 127\n \t  || INTVAL (operands[1]) < -128\n-\t  || CONST_OK_FOR_LETTER_P (INTVAL (operands[1]), 'N')\n-\t  || CONST_OK_FOR_LETTER_P (INTVAL (operands[1]), 'J')))\n+\t  || CRIS_CONST_OK_FOR_LETTER_P (INTVAL (operands[1]), 'N')\n+\t  || CRIS_CONST_OK_FOR_LETTER_P (INTVAL (operands[1]), 'J')))\n     return \"#\";\n   if (which_alternative == 4)\n     return \"clear<m> [%2=%1%S0]\";\n@@ -1286,8 +1286,8 @@\n       && (!CONST_INT_P (operands[2])\n \t  || INTVAL (operands[2]) > 127\n \t  || INTVAL (operands[2]) < -128\n-\t  || CONST_OK_FOR_LETTER_P (INTVAL (operands[2]), 'N')\n-\t  || CONST_OK_FOR_LETTER_P (INTVAL (operands[2]), 'J')))\n+\t  || CRIS_CONST_OK_FOR_LETTER_P (INTVAL (operands[2]), 'N')\n+\t  || CRIS_CONST_OK_FOR_LETTER_P (INTVAL (operands[2]), 'J')))\n     return \"#\";\n   if (which_alternative == 4)\n     return \"mov%e4.%m4 [%3=%2%S1],%0\";\n@@ -1310,8 +1310,8 @@\n       && (!CONST_INT_P (operands[2])\n \t  || INTVAL (operands[2]) > 127\n \t  || INTVAL (operands[2]) < -128\n-\t  || CONST_OK_FOR_LETTER_P (INTVAL (operands[2]), 'N')\n-\t  || CONST_OK_FOR_LETTER_P (INTVAL (operands[2]), 'J')))\n+\t  || CRIS_CONST_OK_FOR_LETTER_P (INTVAL (operands[2]), 'N')\n+\t  || CRIS_CONST_OK_FOR_LETTER_P (INTVAL (operands[2]), 'J')))\n     return \"#\";\n   if (which_alternative == 4)\n     return \"mov%e4<m> [%3=%2%S1],%0\";\n@@ -1647,8 +1647,8 @@\n       && (!CONST_INT_P (operands[3])\n \t  || INTVAL (operands[3]) > 127\n \t  || INTVAL (operands[3]) < -128\n-\t  || CONST_OK_FOR_LETTER_P (INTVAL (operands[3]), 'N')\n-\t  || CONST_OK_FOR_LETTER_P (INTVAL (operands[3]), 'J')))\n+\t  || CRIS_CONST_OK_FOR_LETTER_P (INTVAL (operands[3]), 'N')\n+\t  || CRIS_CONST_OK_FOR_LETTER_P (INTVAL (operands[3]), 'J')))\n     return \"#\";\n   if (which_alternative == 4)\n     return \"%x5.%s0 [%4=%3%S2],%0\";\n@@ -1705,8 +1705,8 @@\n       && (!CONST_INT_P (operands[3])\n \t  || INTVAL (operands[3]) > 127\n \t  || INTVAL (operands[3]) < -128\n-\t  || CONST_OK_FOR_LETTER_P (INTVAL (operands[3]), 'N')\n-\t  || CONST_OK_FOR_LETTER_P (INTVAL (operands[3]), 'J')))\n+\t  || CRIS_CONST_OK_FOR_LETTER_P (INTVAL (operands[3]), 'N')\n+\t  || CRIS_CONST_OK_FOR_LETTER_P (INTVAL (operands[3]), 'J')))\n     return \"#\";\n   if (which_alternative == 4)\n     return \"%x5<m> [%4=%3%S2],%0\";\n@@ -2137,8 +2137,8 @@\n       && (!CONST_INT_P (operands[3])\n \t  || INTVAL (operands[3]) > 127\n \t  || INTVAL (operands[3]) < -128\n-\t  || CONST_OK_FOR_LETTER_P (INTVAL (operands[3]), 'N')\n-\t  || CONST_OK_FOR_LETTER_P (INTVAL (operands[3]), 'J')))\n+\t  || CRIS_CONST_OK_FOR_LETTER_P (INTVAL (operands[3]), 'N')\n+\t  || CRIS_CONST_OK_FOR_LETTER_P (INTVAL (operands[3]), 'J')))\n     return \"#\";\n   if (which_alternative == 4)\n     return \"%x5%E6.%m6 [%4=%3%S2],%0\";\n@@ -2166,8 +2166,8 @@\n       && (!CONST_INT_P (operands[3])\n \t  || INTVAL (operands[3]) > 127\n \t  || INTVAL (operands[3]) < -128\n-\t  || CONST_OK_FOR_LETTER_P (INTVAL (operands[3]), 'N')\n-\t  || CONST_OK_FOR_LETTER_P (INTVAL (operands[3]), 'J')))\n+\t  || CRIS_CONST_OK_FOR_LETTER_P (INTVAL (operands[3]), 'N')\n+\t  || CRIS_CONST_OK_FOR_LETTER_P (INTVAL (operands[3]), 'J')))\n     return \"#\";\n   if (which_alternative == 4)\n     return \"%x5%E6<m> [%4=%3%S2],%0\";\n@@ -2246,8 +2246,8 @@\n       && (!CONST_INT_P (operands[3])\n \t  || INTVAL (operands[3]) > 127\n \t  || INTVAL (operands[3]) < -128\n-\t  || CONST_OK_FOR_LETTER_P (INTVAL (operands[3]), 'N')\n-\t  || CONST_OK_FOR_LETTER_P (INTVAL (operands[3]), 'J')))\n+\t  || CRIS_CONST_OK_FOR_LETTER_P (INTVAL (operands[3]), 'N')\n+\t  || CRIS_CONST_OK_FOR_LETTER_P (INTVAL (operands[3]), 'J')))\n     return \"#\";\n   if (which_alternative == 4)\n     return \"add%e5.b [%4=%3%S2],%0\";\n@@ -2274,8 +2274,8 @@\n       && (!CONST_INT_P (operands[3])\n \t  || INTVAL (operands[3]) > 127\n \t  || INTVAL (operands[3]) < -128\n-\t  || CONST_OK_FOR_LETTER_P (INTVAL (operands[3]), 'N')\n-\t  || CONST_OK_FOR_LETTER_P (INTVAL (operands[3]), 'J')))\n+\t  || CRIS_CONST_OK_FOR_LETTER_P (INTVAL (operands[3]), 'N')\n+\t  || CRIS_CONST_OK_FOR_LETTER_P (INTVAL (operands[3]), 'J')))\n     return \"#\";\n   if (which_alternative == 4)\n     return \\\"%x6%E5.%m5 [%4=%3%S2],%0\\\";\n@@ -3238,7 +3238,7 @@\n (define_insn \"<shlr>si3\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n \t(shift:SI (match_operand:SI 1 \"register_operand\" \"0\")\n-\t\t  (match_operand:SI 2 \"nonmemory_operand\" \"Kr\")))]\n+\t\t  (match_operand:SI 2 \"nonmemory_operand\" \"Kcr\")))]\n   \"\"\n {\n   if (REG_S_P (operands[2]))\n@@ -3318,7 +3318,7 @@\n (define_insn \"ashl<mode>3\"\n   [(set (match_operand:BW 0 \"register_operand\" \"=r,r\")\n \t(ashift:BW (match_operand:BW 1 \"register_operand\" \"0,0\")\n-\t\t   (match_operand:BW 2 \"nonmemory_operand\" \"r,K\")))]\n+\t\t   (match_operand:BW 2 \"nonmemory_operand\" \"r,Kc\")))]\n   \"\"\n {\n   return\n@@ -4668,8 +4668,8 @@\n   \"GET_MODE_SIZE (GET_MODE (operands[4])) <= UNITS_PER_WORD\n    && REGNO (operands[3]) != REGNO (operands[0])\n    && (BASE_P (operands[1]) || BASE_P (operands[2]))\n-   && ! CONST_OK_FOR_LETTER_P (INTVAL (operands[2]), 'J')\n-   && ! CONST_OK_FOR_LETTER_P (INTVAL (operands[2]), 'N')\n+   && !CRIS_CONST_OK_FOR_LETTER_P (INTVAL (operands[2]), 'J')\n+   && !CRIS_CONST_OK_FOR_LETTER_P (INTVAL (operands[2]), 'N')\n    && (INTVAL (operands[2]) >= -128 && INTVAL (operands[2]) < 128)\n    && TARGET_SIDE_EFFECT_PREFIXES\"\n   [(parallel\n@@ -4704,8 +4704,8 @@\n   \"GET_MODE_SIZE (GET_MODE (operands[4])) <= UNITS_PER_WORD\n    && REGNO (operands[4]) != REGNO (operands[0])\n    && (BASE_P (operands[1]) || BASE_P (operands[2]))\n-   && ! CONST_OK_FOR_LETTER_P (INTVAL (operands[2]), 'J')\n-   && ! CONST_OK_FOR_LETTER_P (INTVAL (operands[2]), 'N')\n+   && !CRIS_CONST_OK_FOR_LETTER_P (INTVAL (operands[2]), 'J')\n+   && !CRIS_CONST_OK_FOR_LETTER_P (INTVAL (operands[2]), 'N')\n    && (INTVAL (operands[2]) >= -128 && INTVAL (operands[2]) < 128)\n    && TARGET_SIDE_EFFECT_PREFIXES\"\n   [(parallel\n@@ -4742,8 +4742,8 @@\n   ;; Change to GET_MODE_SIZE (GET_MODE (operands[3])) <= UNITS_PER_WORD?\n   \"GET_MODE (operands[3]) != DImode\n    && REGNO (operands[0]) != REGNO (operands[3])\n-   && ! CONST_OK_FOR_LETTER_P (INTVAL (operands[2]), 'J')\n-   && ! CONST_OK_FOR_LETTER_P (INTVAL (operands[2]), 'N')\n+   && !CRIS_CONST_OK_FOR_LETTER_P (INTVAL (operands[2]), 'J')\n+   && !CRIS_CONST_OK_FOR_LETTER_P (INTVAL (operands[2]), 'N')\n    && INTVAL (operands[2]) >= -128\n    && INTVAL (operands[2]) <= 127\n    && TARGET_SIDE_EFFECT_PREFIXES\"\n@@ -4934,15 +4934,15 @@\n    ;; don't do this for a mem-volatile access.\n   \"REGNO (operands[2]) == REGNO (operands[0])\n    && INTVAL (operands[3]) <= 65535 && INTVAL (operands[3]) >= 0\n-   && !CONST_OK_FOR_LETTER_P (INTVAL (operands[3]), 'I')\n+   && !CRIS_CONST_OK_FOR_LETTER_P (INTVAL (operands[3]), 'I')\n    && !side_effects_p (operands[1])\"\n   ;; FIXME: CC0 valid except for M (i.e. CC_NOT_NEGATIVE).\n   [(set (match_dup 0) (match_dup 4))\n    (set (match_dup 5) (match_dup 6))]\n {\n   enum machine_mode zmode = INTVAL (operands[3]) <= 255 ? QImode : HImode;\n   enum machine_mode amode\n-    = CONST_OK_FOR_LETTER_P (INTVAL (operands[3]), 'O') ? SImode : zmode;\n+    = CRIS_CONST_OK_FOR_LETTER_P (INTVAL (operands[3]), 'O') ? SImode : zmode;\n   rtx op1\n     = (REG_S_P (operands[1])\n        ? gen_rtx_REG (zmode, REGNO (operands[1]))"}]}