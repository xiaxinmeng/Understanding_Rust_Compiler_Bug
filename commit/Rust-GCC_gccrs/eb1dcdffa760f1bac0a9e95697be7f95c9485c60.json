{"sha": "eb1dcdffa760f1bac0a9e95697be7f95c9485c60", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWIxZGNkZmZhNzYwZjFiYWMwYTllOTU2OTdiZTdmOTVjOTQ4NWM2MA==", "commit": {"author": {"name": "Georg-Johann Lay", "email": "avr@gjlay.de", "date": "2011-07-14T07:49:14Z"}, "committer": {"name": "Georg-Johann Lay", "email": "gjl@gcc.gnu.org", "date": "2011-07-14T07:49:14Z"}, "message": "re PR target/43746 (-fmerge-constants and -fmerge-all-constants don't work at AVR target)\n\ngcc/\n\tPR target/43746\n\t* config/avr/elf.h (TARGET_ASM_SELECT_SECTION): Remove,\n\ti.e. use default_elf_select_section.\n\t(TARGET_HAVE_SWITCHABLE_BSS_SECTIONS): Remove.\n\t(READONLY_DATA_SECTION_ASM_OP): Remove.\n\t(TARGET_ASM_NAMED_SECTION): Move from here...\n\t* config/avr/avr.c: ...to here.\n\t(avr_asm_init_sections): Set unnamed callback of\n\treadonly_data_section.\n\t(avr_asm_named_section): Make static.\n\t\ntestsuite/\n\tPR target/43746\n\t* gcc.dg/array-quals-1.c: Don't xfail on AVR.\n\nFrom-SVN: r176262", "tree": {"sha": "1c21566fb30d00cb79d178deb684bbba64e6424f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1c21566fb30d00cb79d178deb684bbba64e6424f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eb1dcdffa760f1bac0a9e95697be7f95c9485c60", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb1dcdffa760f1bac0a9e95697be7f95c9485c60", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eb1dcdffa760f1bac0a9e95697be7f95c9485c60", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb1dcdffa760f1bac0a9e95697be7f95c9485c60/comments", "author": null, "committer": {"login": "sprintersb", "id": 8905355, "node_id": "MDQ6VXNlcjg5MDUzNTU=", "avatar_url": "https://avatars.githubusercontent.com/u/8905355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sprintersb", "html_url": "https://github.com/sprintersb", "followers_url": "https://api.github.com/users/sprintersb/followers", "following_url": "https://api.github.com/users/sprintersb/following{/other_user}", "gists_url": "https://api.github.com/users/sprintersb/gists{/gist_id}", "starred_url": "https://api.github.com/users/sprintersb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sprintersb/subscriptions", "organizations_url": "https://api.github.com/users/sprintersb/orgs", "repos_url": "https://api.github.com/users/sprintersb/repos", "events_url": "https://api.github.com/users/sprintersb/events{/privacy}", "received_events_url": "https://api.github.com/users/sprintersb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d31fb329c86b90b3f9f219f2ce186bf2f56c6c5a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d31fb329c86b90b3f9f219f2ce186bf2f56c6c5a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d31fb329c86b90b3f9f219f2ce186bf2f56c6c5a"}], "stats": {"total": 43, "additions": 26, "deletions": 17}, "files": [{"sha": "3cbc03c63300f8c48bab5ed84027d00315350c5f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1dcdffa760f1bac0a9e95697be7f95c9485c60/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1dcdffa760f1bac0a9e95697be7f95c9485c60/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=eb1dcdffa760f1bac0a9e95697be7f95c9485c60", "patch": "@@ -1,3 +1,16 @@\n+2011-07-14  Georg-Johann Lay  <avr@gjlay.de>\n+\n+\tPR target/43746\n+\t* config/avr/elf.h (TARGET_ASM_SELECT_SECTION): Remove,\n+\ti.e. use default_elf_select_section.\n+\t(TARGET_HAVE_SWITCHABLE_BSS_SECTIONS): Remove.\n+\t(READONLY_DATA_SECTION_ASM_OP): Remove.\n+\t(TARGET_ASM_NAMED_SECTION): Move from here...\n+\t* config/avr/avr.c: ...to here.\n+\t(avr_asm_init_sections): Set unnamed callback of\n+\treadonly_data_section.\n+\t(avr_asm_named_section): Make static.\n+\n 2011-07-13  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \tPR bootstrap/49739"}, {"sha": "d535f330621724cc7ce436eda61316b95d9fd3e0", "filename": "gcc/config/avr/avr.c", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1dcdffa760f1bac0a9e95697be7f95c9485c60/gcc%2Fconfig%2Favr%2Favr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1dcdffa760f1bac0a9e95697be7f95c9485c60/gcc%2Fconfig%2Favr%2Favr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr.c?ref=eb1dcdffa760f1bac0a9e95697be7f95c9485c60", "patch": "@@ -194,8 +194,8 @@ static const struct attribute_spec avr_attribute_table[] =\n #undef TARGET_SECTION_TYPE_FLAGS\n #define TARGET_SECTION_TYPE_FLAGS avr_section_type_flags\n \n-/* `TARGET_ASM_NAMED_SECTION' must be defined in avr.h.  */\n-\n+#undef TARGET_ASM_NAMED_SECTION\n+#define TARGET_ASM_NAMED_SECTION avr_asm_named_section\n #undef TARGET_ASM_INIT_SECTIONS\n #define TARGET_ASM_INIT_SECTIONS avr_asm_init_sections\n #undef TARGET_ENCODE_SECTION_INFO\n@@ -5091,8 +5091,11 @@ avr_asm_init_sections (void)\n   progmem_section = get_unnamed_section (AVR_HAVE_JMP_CALL ? 0 : SECTION_CODE,\n \t\t\t\t\t avr_output_progmem_section_asm_op,\n \t\t\t\t\t NULL);\n-  readonly_data_section = data_section;\n \n+  /* Override section callbacks to keep track of `avr_need_clear_bss_p'\n+     resp. `avr_need_copy_data_p'.  */\n+  \n+  readonly_data_section->unnamed.callback = avr_output_data_section_asm_op;\n   data_section->unnamed.callback = avr_output_data_section_asm_op;\n   bss_section->unnamed.callback = avr_output_bss_section_asm_op;\n }\n@@ -5101,7 +5104,7 @@ avr_asm_init_sections (void)\n /* Implement `TARGET_ASM_NAMED_SECTION'.  */\n /* Track need of __do_clear_bss, __do_copy_data for named sections.  */\n \n-void\n+static void\n avr_asm_named_section (const char *name, unsigned int flags, tree decl)\n {\n   if (!avr_need_copy_data_p)"}, {"sha": "f360e882a96ab936f7f86e8e16a1f7e6e224f181", "filename": "gcc/config/avr/elf.h", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1dcdffa760f1bac0a9e95697be7f95c9485c60/gcc%2Fconfig%2Favr%2Felf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1dcdffa760f1bac0a9e95697be7f95c9485c60/gcc%2Fconfig%2Favr%2Felf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Felf.h?ref=eb1dcdffa760f1bac0a9e95697be7f95c9485c60", "patch": "@@ -26,24 +26,12 @@\n #undef PREFERRED_DEBUGGING_TYPE\n #define PREFERRED_DEBUGGING_TYPE DBX_DEBUG\n \n-#undef TARGET_ASM_NAMED_SECTION\n-#define TARGET_ASM_NAMED_SECTION avr_asm_named_section\n-\n-/* Use lame default: no string merging, ...  */\n-#undef TARGET_ASM_SELECT_SECTION\n-#define TARGET_ASM_SELECT_SECTION default_select_section\n-\n #undef MAX_OFILE_ALIGNMENT\n #define MAX_OFILE_ALIGNMENT (32768 * 8)\n \n-#undef TARGET_HAVE_SWITCHABLE_BSS_SECTIONS\n-\n #undef STRING_LIMIT\n #define STRING_LIMIT ((unsigned) 64)\n \n-/* Setup `readonly_data_section' in `avr_asm_init_sections'.  */\n-#undef READONLY_DATA_SECTION_ASM_OP\n-\n /* Take care of `signal' and `interrupt' attributes.  */\n #undef ASM_DECLARE_FUNCTION_NAME\n #define ASM_DECLARE_FUNCTION_NAME(FILE, NAME, DECL)     \\"}, {"sha": "192c908505be1389dbc9a5303c406d289e632c52", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1dcdffa760f1bac0a9e95697be7f95c9485c60/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1dcdffa760f1bac0a9e95697be7f95c9485c60/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=eb1dcdffa760f1bac0a9e95697be7f95c9485c60", "patch": "@@ -1,3 +1,8 @@\n+2011-07-14  Georg-Johann Lay  <avr@gjlay.de>\n+\t\n+\tPR target/43746\n+\t* gcc.dg/array-quals-1.c: Don't xfail on AVR.\n+\n 2011-07-13  Michael Meissner  <meissner@linux.vnet.ibm.com>\n \n \t* gcc.target/powerpc/no-r11-1.c: Change -mno-r11 to"}, {"sha": "17df983781757568e41d8ad361f0183c023cb47b", "filename": "gcc/testsuite/gcc.dg/array-quals-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb1dcdffa760f1bac0a9e95697be7f95c9485c60/gcc%2Ftestsuite%2Fgcc.dg%2Farray-quals-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb1dcdffa760f1bac0a9e95697be7f95c9485c60/gcc%2Ftestsuite%2Fgcc.dg%2Farray-quals-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Farray-quals-1.c?ref=eb1dcdffa760f1bac0a9e95697be7f95c9485c60", "patch": "@@ -4,7 +4,7 @@\n /* Origin: Joseph Myers <jsm@polyomino.org.uk> */\n /* { dg-do compile } */\n /* The MMIX port always switches to the .data section at the end of a file.  */\n-/* { dg-final { scan-assembler-not \"\\\\.data(?!\\\\.rel\\\\.ro)\" { xfail powerpc*-*-aix* mmix-*-* x86_64-*-mingw* picochip--*-* avr-*-*} } } */\n+/* { dg-final { scan-assembler-not \"\\\\.data(?!\\\\.rel\\\\.ro)\" { xfail powerpc*-*-aix* mmix-*-* x86_64-*-mingw* picochip--*-* } } } */\n static const int a[2] = { 1, 2 };\n const int a1[2] = { 1, 2 };\n typedef const int ci;"}]}