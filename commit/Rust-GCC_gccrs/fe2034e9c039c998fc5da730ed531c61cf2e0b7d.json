{"sha": "fe2034e9c039c998fc5da730ed531c61cf2e0b7d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmUyMDM0ZTljMDM5Yzk5OGZjNWRhNzMwZWQ1MzFjNjFjZjJlMGI3ZA==", "commit": {"author": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2021-02-08T00:21:32Z"}, "committer": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2021-02-08T00:24:23Z"}, "message": "Correct typos in attribute malloc documentation.\n\ngcc/ChangeLog:\n\t* doc/extend.texi (attribute malloc): Correct typos.", "tree": {"sha": "d06d56423f85b2c45f330dfe15df249c5d371edb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d06d56423f85b2c45f330dfe15df249c5d371edb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fe2034e9c039c998fc5da730ed531c61cf2e0b7d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe2034e9c039c998fc5da730ed531c61cf2e0b7d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fe2034e9c039c998fc5da730ed531c61cf2e0b7d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe2034e9c039c998fc5da730ed531c61cf2e0b7d/comments", "author": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ba65576027700490f366d9107669b108bb1b7187", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba65576027700490f366d9107669b108bb1b7187", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ba65576027700490f366d9107669b108bb1b7187"}], "stats": {"total": 18, "additions": 10, "deletions": 8}, "files": [{"sha": "e110cb010617bfb78e740433c3aa30a7399b504e", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 10, "deletions": 8, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe2034e9c039c998fc5da730ed531c61cf2e0b7d/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe2034e9c039c998fc5da730ed531c61cf2e0b7d/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=fe2034e9c039c998fc5da730ed531c61cf2e0b7d", "patch": "@@ -3258,7 +3258,9 @@ objects.\n \n Associating a function with a @var{deallocator} helps detect calls to\n mismatched allocation and deallocation functions and diagnose them under\n-the control of options such as @option{-Wmismatched-dealloc}.  To indicate\n+the control of options such as @option{-Wmismatched-dealloc}.  It also\n+makes it possible to diagnose attempts to deallocate objects that were not\n+allocated dynamically, by @option{-Wfree-nonheap-object}.  To indicate\n that an allocation function both satisifies the nonaliasing property and\n has a deallocator associated with it, both the plain form of the attribute\n and the one with the @var{deallocator} argument must be used.  The same\n@@ -3273,21 +3275,21 @@ not alias any others, the following declarations make @code{fclose}\n a suitable deallocator for pointers returned from all functions except\n @code{popen}, and @code{pclose} as the only suitable deallocator for\n pointers returned from @code{popen}.  The deallocator functions must\n-declared before they can be referenced in the attribute.\n+be declared before they can be referenced in the attribute.\n \n @smallexample\n int fclose (FILE*);\n int pclose (FILE*);\n \n-__attribute__ ((malloc, malloc (fclose (1))))\n-  FILE* fdopen (int);\n-__attribute__ ((malloc, malloc (fclose (1))))\n+__attribute__ ((malloc, malloc (fclose, 1)))\n+  FILE* fdopen (int, const char*);\n+__attribute__ ((malloc, malloc (fclose, 1)))\n   FILE* fopen (const char*, const char*);\n-__attribute__ ((malloc, malloc (fclose (1))))\n+__attribute__ ((malloc, malloc (fclose, 1)))\n   FILE* fmemopen(void *, size_t, const char *);\n-__attribute__ ((malloc, malloc (pclose (1))))\n+__attribute__ ((malloc, malloc (pclose, 1)))\n   FILE* popen (const char*, const char*);\n-__attribute__ ((malloc, malloc (fclose (1))))\n+__attribute__ ((malloc, malloc (fclose, 1)))\n   FILE* tmpfile (void);\n @end smallexample\n "}]}