{"sha": "eae600b90684750ed2cfb91565b8e8aa99c15da9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWFlNjAwYjkwNjg0NzUwZWQyY2ZiOTE1NjViOGU4YWE5OWMxNWRhOQ==", "commit": {"author": {"name": "Daniel Berlin", "email": "dberlin@dberlin.org", "date": "2005-02-17T16:29:56Z"}, "committer": {"name": "Daniel Berlin", "email": "dberlin@gcc.gnu.org", "date": "2005-02-17T16:29:56Z"}, "message": "lambda-code (perfect_nestify): Remove mark/unmark for rewriting hack.\n\n2005-02-17  Daniel Berlin  <dberlin@dberlin.org>\n\n\t* lambda-code (perfect_nestify): Remove mark/unmark\n\tfor rewriting hack.\n\t* tree-loop-linear.c (linear_transform_loops): Add\n\trewrite_into_ssa call so that ssa is correct for\n\trewriting into loop closed.\n\nFrom-SVN: r95173", "tree": {"sha": "762d072b22825cfecc738ba7e168b8c2bfe2dee3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/762d072b22825cfecc738ba7e168b8c2bfe2dee3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eae600b90684750ed2cfb91565b8e8aa99c15da9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eae600b90684750ed2cfb91565b8e8aa99c15da9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eae600b90684750ed2cfb91565b8e8aa99c15da9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eae600b90684750ed2cfb91565b8e8aa99c15da9/comments", "author": {"login": "dberlin", "id": 324715, "node_id": "MDQ6VXNlcjMyNDcxNQ==", "avatar_url": "https://avatars.githubusercontent.com/u/324715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dberlin", "html_url": "https://github.com/dberlin", "followers_url": "https://api.github.com/users/dberlin/followers", "following_url": "https://api.github.com/users/dberlin/following{/other_user}", "gists_url": "https://api.github.com/users/dberlin/gists{/gist_id}", "starred_url": "https://api.github.com/users/dberlin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dberlin/subscriptions", "organizations_url": "https://api.github.com/users/dberlin/orgs", "repos_url": "https://api.github.com/users/dberlin/repos", "events_url": "https://api.github.com/users/dberlin/events{/privacy}", "received_events_url": "https://api.github.com/users/dberlin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8bdbfff57ed2d012fd2fe4b7411a6c815957e8aa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8bdbfff57ed2d012fd2fe4b7411a6c815957e8aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8bdbfff57ed2d012fd2fe4b7411a6c815957e8aa"}], "stats": {"total": 26, "additions": 17, "deletions": 9}, "files": [{"sha": "c4eab1a3b6c240453ef276ef6deb3ca548639a55", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eae600b90684750ed2cfb91565b8e8aa99c15da9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eae600b90684750ed2cfb91565b8e8aa99c15da9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=eae600b90684750ed2cfb91565b8e8aa99c15da9", "patch": "@@ -1,3 +1,11 @@\n+2005-02-17  Daniel Berlin  <dberlin@dberlin.org>\n+\n+\t* lambda-code (perfect_nestify): Remove mark/unmark\n+\tfor rewriting hack.\n+\t* tree-loop-linear.c (linear_transform_loops): Add\n+\trewrite_into_ssa call so that ssa is correct for\n+\trewriting into loop closed.\n+\n 2005-02-17  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* bitmap.h (BITMAP_XMALLOC, BITMAP_XFREE): Remove."}, {"sha": "037be930a43e73a05997a64292ad4586a1863e4d", "filename": "gcc/lambda-code.c", "status": "modified", "additions": 8, "deletions": 9, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eae600b90684750ed2cfb91565b8e8aa99c15da9/gcc%2Flambda-code.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eae600b90684750ed2cfb91565b8e8aa99c15da9/gcc%2Flambda-code.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flambda-code.c?ref=eae600b90684750ed2cfb91565b8e8aa99c15da9", "patch": "@@ -2314,23 +2314,23 @@ perfect_nestify (struct loops *loops,\n   preheaderbb =  loop_split_edge_with (loop->single_exit, NULL);\n   headerbb = create_empty_bb (EXIT_BLOCK_PTR->prev_bb);\n   \n-  /* This is done because otherwise, it will release the ssa_name too early\n-     when the edge gets redirected and it will get reused, causing the use of\n-     the phi node to get rewritten.  */\n-\n+  /* Push the exit phi nodes that we are moving.  */\n   for (phi = phi_nodes (olddest); phi; phi = PHI_CHAIN (phi))\n     {\n       VEC_safe_push (tree, phis, PHI_RESULT (phi));\n       VEC_safe_push (tree, phis, PHI_ARG_DEF (phi, 0));\n-      mark_for_rewrite (PHI_RESULT (phi));\n     }\n   e = redirect_edge_and_branch (EDGE_SUCC (preheaderbb, 0), headerbb);\n \n-  /* Remove the exit phis from the old basic block.  */\n+  /* Remove the exit phis from the old basic block.  Make sure to set\n+     PHI_RESULT to null so it doesn't get released.  */\n   while (phi_nodes (olddest) != NULL)\n-    remove_phi_node (phi_nodes (olddest), NULL, olddest);\n+    {\n+      SET_PHI_RESULT (phi_nodes (olddest), NULL);\n+      remove_phi_node (phi_nodes (olddest), NULL, olddest);\n+    }      \n \n-  /* and add them to the new basic block.  */\n+  /* and add them back to the new basic block.  */\n   while (VEC_length (tree, phis) != 0)\n     {\n       tree def;\n@@ -2341,7 +2341,6 @@ perfect_nestify (struct loops *loops,\n       add_phi_arg (phi, def, EDGE_PRED (preheaderbb, 0));\n     }       \n   flush_pending_stmts (e);\n-  unmark_all_for_rewrite ();\n \n   bodybb = create_empty_bb (EXIT_BLOCK_PTR->prev_bb);\n   latchbb = create_empty_bb (EXIT_BLOCK_PTR->prev_bb);"}, {"sha": "b8c6201ff88141a4f613ec589f1264204db3eb81", "filename": "gcc/tree-loop-linear.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eae600b90684750ed2cfb91565b8e8aa99c15da9/gcc%2Ftree-loop-linear.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eae600b90684750ed2cfb91565b8e8aa99c15da9/gcc%2Ftree-loop-linear.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-loop-linear.c?ref=eae600b90684750ed2cfb91565b8e8aa99c15da9", "patch": "@@ -374,6 +374,7 @@ linear_transform_loops (struct loops *loops)\n     }\n   free_df ();\n   scev_reset ();\n+  rewrite_into_ssa (false);\n   rewrite_into_loop_closed_ssa ();\n #ifdef ENABLE_CHECKING\n   verify_loop_closed_ssa ();"}]}