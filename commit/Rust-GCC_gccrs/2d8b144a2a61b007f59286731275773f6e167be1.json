{"sha": "2d8b144a2a61b007f59286731275773f6e167be1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmQ4YjE0NGEyYTYxYjAwN2Y1OTI4NjczMTI3NTc3M2Y2ZTE2N2JlMQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-11-17T08:37:25Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-11-17T08:37:25Z"}, "message": "c: Reject _Atomic type * as last argument to __builtin_*_overflow [PR90628]\n\nDuring the __builtin_clear_padding implementation, I've noticed we don't\ndiagnose _Atomic whatever * as last argument to __builtin_*_overflow.\nAs the storing by that builtin isn't atomic in any way, I think we should\nreject it.\n\n2020-11-17  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR c/90628\n\t* c-common.c (check_builtin_function_arguments)\n\t<case BUILT_IN_ADD_OVERFLOW>: Diagnose when last argument is pointer\n\tto _Atomic.  For the TYPE_READONLY case, adjust message to be usable\n\tfor more builtins and argument positions.\n\n\t* gcc.dg/builtin-arith-overflow-4.c: New test.", "tree": {"sha": "ec9410798cbb2815a0d4e9b2080556033274f55e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ec9410798cbb2815a0d4e9b2080556033274f55e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2d8b144a2a61b007f59286731275773f6e167be1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d8b144a2a61b007f59286731275773f6e167be1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2d8b144a2a61b007f59286731275773f6e167be1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d8b144a2a61b007f59286731275773f6e167be1/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "855ce4cda1a374eb1ce4a24fcde65d4c3d111bcd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/855ce4cda1a374eb1ce4a24fcde65d4c3d111bcd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/855ce4cda1a374eb1ce4a24fcde65d4c3d111bcd"}], "stats": {"total": 54, "additions": 52, "deletions": 2}, "files": [{"sha": "729bd85960fb4363deb835980cf6584ea1981b61", "filename": "gcc/c-family/c-common.c", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d8b144a2a61b007f59286731275773f6e167be1/gcc%2Fc-family%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d8b144a2a61b007f59286731275773f6e167be1/gcc%2Fc-family%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-common.c?ref=2d8b144a2a61b007f59286731275773f6e167be1", "patch": "@@ -6133,11 +6133,18 @@ check_builtin_function_arguments (location_t loc, vec<location_t> arg_loc,\n \t    }\n \t  else if (TYPE_READONLY (TREE_TYPE (TREE_TYPE (args[2]))))\n \t    {\n-\t      error_at (ARG_LOCATION (2), \"argument 3 in call to function %qE \"\n-\t\t\t\"has pointer to %<const%> type (%qT)\", fndecl,\n+\t      error_at (ARG_LOCATION (2), \"argument %u in call to function %qE \"\n+\t\t\t\"has pointer to %qs type (%qT)\", 3, fndecl, \"const\",\n \t\t\tTREE_TYPE (args[2]));\n \t      return false;\n \t    }\n+\t  else if (TYPE_ATOMIC (TREE_TYPE (TREE_TYPE (args[2]))))\n+\t    {\n+\t      error_at (ARG_LOCATION (2), \"argument %u in call to function %qE \"\n+\t\t\t\"has pointer to %qs type (%qT)\", 3, fndecl,\n+\t\t\t\"_Atomic\", TREE_TYPE (args[2]));\n+\t      return false;\n+\t    }\n \t  return true;\n \t}\n       return false;"}, {"sha": "ab7d82a8d839794c1bc94bc0ae9d709e310b5d6b", "filename": "gcc/testsuite/gcc.dg/builtin-arith-overflow-4.c", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d8b144a2a61b007f59286731275773f6e167be1/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltin-arith-overflow-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d8b144a2a61b007f59286731275773f6e167be1/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltin-arith-overflow-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltin-arith-overflow-4.c?ref=2d8b144a2a61b007f59286731275773f6e167be1", "patch": "@@ -0,0 +1,43 @@\n+/* PR c/90628 */\n+/* { dg-do compile } */\n+/* { dg-options \"\" } */\n+\n+_Atomic int a = 1, b = 2, c = 3;\n+_Atomic long d = 4, e = 5, f = 6;\n+_Atomic long long g = 7, h = 8, i = 9;\n+\n+void\n+f1 ()\n+{\n+  __builtin_add_overflow (a, b, &c);\t/* { dg-error \"argument 3 in call to function '__builtin_add_overflow' has pointer to '_Atomic' type\" } */\n+}\n+\n+void\n+f2 ()\n+{\n+  __builtin_sub_overflow (d, e, &f);\t/* { dg-error \"argument 3 in call to function '__builtin_sub_overflow' has pointer to '_Atomic' type\" } */\n+}\n+\n+void\n+f3 ()\n+{\n+  __builtin_mul_overflow (g, h, &i);\t/* { dg-error \"argument 3 in call to function '__builtin_mul_overflow' has pointer to '_Atomic' type\" } */\n+}\n+\n+void\n+f4 ()\n+{\n+  __builtin_sadd_overflow (a, b, &c);\t/* { dg-warning \"passing argument 3 of '__builtin_sadd_overflow' from incompatible pointer type\" } */\n+}\n+\n+void\n+f5 ()\n+{\n+  __builtin_ssubl_overflow (d, e, &f);\t/* { dg-warning \"passing argument 3 of '__builtin_ssubl_overflow' from incompatible pointer type\" } */\n+}\n+\n+void\n+f6 ()\n+{\n+  __builtin_smulll_overflow (g, h, &i);\t/* { dg-warning \"passing argument 3 of '__builtin_smulll_overflow' from incompatible pointer type\" } */\n+}"}]}