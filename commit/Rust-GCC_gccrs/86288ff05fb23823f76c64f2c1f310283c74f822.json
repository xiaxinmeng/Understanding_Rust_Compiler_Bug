{"sha": "86288ff05fb23823f76c64f2c1f310283c74f822", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODYyODhmZjA1ZmIyMzgyM2Y3NmM2NGYyYzFmMzEwMjgzYzc0ZjgyMg==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2008-01-13T21:28:30Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2008-01-13T21:28:30Z"}, "message": "re PR fortran/34759 (Assumed size array reference not allowed in SHAPE intrinsic, even though last subscript specified)\n\n2008-01-13  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/34759\n        * check.c (gfc_check_shape): Accept array ranges of\n        assumed-size arrays.\n\n2008-01-13  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/34759\n        * gfortran.dg/assumed_size_refs_4.f90: New.\n\nFrom-SVN: r131511", "tree": {"sha": "6bde71a4b757e23c846b9a677decd81a6fce46c2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6bde71a4b757e23c846b9a677decd81a6fce46c2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/86288ff05fb23823f76c64f2c1f310283c74f822", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86288ff05fb23823f76c64f2c1f310283c74f822", "html_url": "https://github.com/Rust-GCC/gccrs/commit/86288ff05fb23823f76c64f2c1f310283c74f822", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86288ff05fb23823f76c64f2c1f310283c74f822/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "08ffbdad7e2ea994a27156bf3315c2bd8f4a9876", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08ffbdad7e2ea994a27156bf3315c2bd8f4a9876", "html_url": "https://github.com/Rust-GCC/gccrs/commit/08ffbdad7e2ea994a27156bf3315c2bd8f4a9876"}], "stats": {"total": 28, "additions": 27, "deletions": 1}, "files": [{"sha": "5f94e76b0462b560aa329f76ceac560033e3785d", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86288ff05fb23823f76c64f2c1f310283c74f822/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86288ff05fb23823f76c64f2c1f310283c74f822/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=86288ff05fb23823f76c64f2c1f310283c74f822", "patch": "@@ -1,3 +1,9 @@\n+2008-01-13  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/34759\n+\t* check.c (gfc_check_shape): Accept array ranges of\n+\tassumed-size arrays.\n+\n 2008-01-12  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n \tPR fortran/34432"}, {"sha": "8727862022a522d64b4828d69d9cb50981ed2b15", "filename": "gcc/fortran/check.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86288ff05fb23823f76c64f2c1f310283c74f822/gcc%2Ffortran%2Fcheck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86288ff05fb23823f76c64f2c1f310283c74f822/gcc%2Ffortran%2Fcheck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fcheck.c?ref=86288ff05fb23823f76c64f2c1f310283c74f822", "patch": "@@ -2394,7 +2394,7 @@ gfc_check_shape (gfc_expr *source)\n \n   ar = gfc_find_array_ref (source);\n \n-  if (ar->as && ar->as->type == AS_ASSUMED_SIZE)\n+  if (ar->as && ar->as->type == AS_ASSUMED_SIZE && ar->type == AR_FULL)\n     {\n       gfc_error (\"'source' argument of 'shape' intrinsic at %L must not be \"\n \t\t \"an assumed size array\", &source->where);"}, {"sha": "98557e6043f0207a4ba565679f22b8d5acc49679", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86288ff05fb23823f76c64f2c1f310283c74f822/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86288ff05fb23823f76c64f2c1f310283c74f822/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=86288ff05fb23823f76c64f2c1f310283c74f822", "patch": "@@ -1,3 +1,8 @@\n+2008-01-13  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/34759\n+\t* gfortran.dg/assumed_size_refs_4.f90: New.\n+\n 2008-01-13  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gnat.dg/unchecked_convert1.adb."}, {"sha": "830ff0849bcc9699b4dd0bfdf2d964c635a0af68", "filename": "gcc/testsuite/gfortran.dg/assumed_size_refs_4.f90", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86288ff05fb23823f76c64f2c1f310283c74f822/gcc%2Ftestsuite%2Fgfortran.dg%2Fassumed_size_refs_4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86288ff05fb23823f76c64f2c1f310283c74f822/gcc%2Ftestsuite%2Fgfortran.dg%2Fassumed_size_refs_4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fassumed_size_refs_4.f90?ref=86288ff05fb23823f76c64f2c1f310283c74f822", "patch": "@@ -0,0 +1,15 @@\n+! { dg-do compile }\n+!\n+! PR fortran/34759\n+! gfortran was before rejecting passing an assumed-size array\n+! where the last dimension was specified.\n+!\n+! Test case provided by Dick Hendickson.\n+!\n+       subroutine j_assumed_size(A,N)\n+       dimension A(10,11,12,*), k(3), l(3), m(4)\n+       m = shape(A(:,:,:,:N)) ! OK\n+       l = shape(A(:,:,:,3))  ! OK\n+       m = shape(A(:,:,:,:))  ! { dg-error \"upper bound of assumed size array\" }\n+       m = shape(A) ! { dg-error \"must not be an assumed size array\" }\n+       end"}]}