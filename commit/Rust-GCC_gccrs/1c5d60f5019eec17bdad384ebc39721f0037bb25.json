{"sha": "1c5d60f5019eec17bdad384ebc39721f0037bb25", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWM1ZDYwZjUwMTllZWMxN2JkYWQzODRlYmMzOTcyMWYwMDM3YmIyNQ==", "commit": {"author": {"name": "John Wehle", "email": "john@feith.com", "date": "1998-06-09T21:42:21Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-06-09T21:42:21Z"}, "message": "i386.md (movsfcc, [...]): The floating point conditional move instructions don't support signed integer...\n\n        * i386.md (movsfcc, movdfcc, movxfcc): The floating point\n        conditional move instructions don't support signed integer\n        comparisons.\n\nFrom-SVN: r20391", "tree": {"sha": "571a262202bee97703261a77d319a8e5cb21f30e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/571a262202bee97703261a77d319a8e5cb21f30e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1c5d60f5019eec17bdad384ebc39721f0037bb25", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c5d60f5019eec17bdad384ebc39721f0037bb25", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1c5d60f5019eec17bdad384ebc39721f0037bb25", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c5d60f5019eec17bdad384ebc39721f0037bb25/comments", "author": {"login": "jlwehle", "id": 46985578, "node_id": "MDQ6VXNlcjQ2OTg1NTc4", "avatar_url": "https://avatars.githubusercontent.com/u/46985578?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jlwehle", "html_url": "https://github.com/jlwehle", "followers_url": "https://api.github.com/users/jlwehle/followers", "following_url": "https://api.github.com/users/jlwehle/following{/other_user}", "gists_url": "https://api.github.com/users/jlwehle/gists{/gist_id}", "starred_url": "https://api.github.com/users/jlwehle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jlwehle/subscriptions", "organizations_url": "https://api.github.com/users/jlwehle/orgs", "repos_url": "https://api.github.com/users/jlwehle/repos", "events_url": "https://api.github.com/users/jlwehle/events{/privacy}", "received_events_url": "https://api.github.com/users/jlwehle/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f1be41adfe2e0835248f6302e777d899c4369b2b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1be41adfe2e0835248f6302e777d899c4369b2b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f1be41adfe2e0835248f6302e777d899c4369b2b"}], "stats": {"total": 63, "additions": 63, "deletions": 0}, "files": [{"sha": "1f9f6403c4ba3b38c2509c9118b8cb4844eec6aa", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c5d60f5019eec17bdad384ebc39721f0037bb25/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c5d60f5019eec17bdad384ebc39721f0037bb25/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1c5d60f5019eec17bdad384ebc39721f0037bb25", "patch": "@@ -1,3 +1,9 @@\n+Wed Jun  3 23:41:24 EDT 1998  John Wehle  (john@feith.com)\n+\n+\t* i386.md (movsfcc, movdfcc, movxfcc): The floating point\n+\tconditional move instructions don't support signed integer\n+\tcomparisons.\n+\n Tue Jun  9 14:31:19 1998  Nick Clifton  <nickc@cygnus.com>\n \n \t* config/v850/t-v850 (TCFLAGS): Add assembler options to warn of\n@@ -33,6 +39,12 @@ Tue Jun  9 12:10:27 1998  John Carr  <jfc@mit.edu>\n \n Tue Jun  9 12:36:16 1998  Jeffrey A Law  (law@cygnus.com)\n \n+\t* mips.c (gpr_mode): New variable.\n+\t(override_options): Initialize gpr_mode.\n+\t(compute_frame_size): Use \"gpr_mode\" instead of \"word_mode\" to\n+\tdetermine size and offset of general purpose registers save slots.\n+\t(save_restore_insns, mips_expand_prologue): Similarly.\n+\n \t* Makefile.in (LIB2FUNCS_EH): Define.  Just \"_eh\" for now.\n \t(LIBGCC2_CFLAGS): Remove -fexceptions.\n \t(LIB2FUNCS): Remove \"_eh\"."}, {"sha": "4cda8f7f9b4bbdae162f8172451020d5114ae2bb", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c5d60f5019eec17bdad384ebc39721f0037bb25/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c5d60f5019eec17bdad384ebc39721f0037bb25/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=1c5d60f5019eec17bdad384ebc39721f0037bb25", "patch": "@@ -7469,6 +7469,23 @@ byte_xor_operation:\n   if (GET_MODE_CLASS (GET_MODE (i386_compare_op0)) != MODE_INT)\n     FAIL;\n \n+  /* The floating point conditional move instructions don't support\n+     signed integer comparisons. */\n+\n+  switch (GET_CODE (operands[1]))\n+    {\n+    case LT:\n+    case LE:\n+    case GE:\n+    case GT:\n+      FAIL;\n+    /* NOTREACHED */\n+      break;\n+\n+    default:\n+      break;\n+    }\n+\n   operands[1] = gen_rtx_fmt_ee (GET_CODE (operands[1]),\n \t\t\tGET_MODE (i386_compare_op0),\n \t\t\ti386_compare_op0, i386_compare_op1);\n@@ -7543,6 +7560,23 @@ byte_xor_operation:\n   if (GET_MODE_CLASS (GET_MODE (i386_compare_op0)) != MODE_INT)\n     FAIL;\n \n+  /* The floating point conditional move instructions don't support\n+     signed integer comparisons. */\n+\n+  switch (GET_CODE (operands[1]))\n+    {\n+    case LT:\n+    case LE:\n+    case GE:\n+    case GT:\n+      FAIL;\n+    /* NOTREACHED */\n+      break;\n+\n+    default:\n+      break;\n+    }\n+\n   operands[1] = gen_rtx_fmt_ee (GET_CODE (operands[1]),\n \t\t\tGET_MODE (i386_compare_op0),\n \t\t\ti386_compare_op0, i386_compare_op1);\n@@ -7617,6 +7651,23 @@ byte_xor_operation:\n   if (GET_MODE_CLASS (GET_MODE (i386_compare_op0)) != MODE_INT)\n     FAIL;\n \n+  /* The floating point conditional move instructions don't support\n+     signed integer comparisons. */\n+\n+  switch (GET_CODE (operands[1]))\n+    {\n+    case LT:\n+    case LE:\n+    case GE:\n+    case GT:\n+      FAIL;\n+    /* NOTREACHED */\n+      break;\n+\n+    default:\n+      break;\n+    }\n+\n   operands[1] = gen_rtx_fmt_ee (GET_CODE (operands[1]),\n \t\t\tGET_MODE (i386_compare_op0),\n \t\t\ti386_compare_op0, i386_compare_op1);"}]}