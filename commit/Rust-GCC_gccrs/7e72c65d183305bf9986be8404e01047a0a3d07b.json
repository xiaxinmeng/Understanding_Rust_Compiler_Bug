{"sha": "7e72c65d183305bf9986be8404e01047a0a3d07b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2U3MmM2NWQxODMzMDViZjk5ODZiZTg0MDRlMDEwNDdhMGEzZDA3Yg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2011-11-08T01:10:43Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2011-11-08T01:10:43Z"}, "message": "re PR c++/50848 (ICE in derived template class missing using for member of template base class)\n\n\tPR c++/50848\n\t* pt.c (tsubst_copy_and_build) [CALL_EXPR]: Don't crash\n\tif lookup finds a non-function.\n\nFrom-SVN: r181143", "tree": {"sha": "285d9544c124311722b9d98af5ed9439596be87f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/285d9544c124311722b9d98af5ed9439596be87f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7e72c65d183305bf9986be8404e01047a0a3d07b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e72c65d183305bf9986be8404e01047a0a3d07b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7e72c65d183305bf9986be8404e01047a0a3d07b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e72c65d183305bf9986be8404e01047a0a3d07b/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "029ac5f967194c0570c3176edd06301dcbab7cb1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/029ac5f967194c0570c3176edd06301dcbab7cb1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/029ac5f967194c0570c3176edd06301dcbab7cb1"}], "stats": {"total": 23, "additions": 22, "deletions": 1}, "files": [{"sha": "98e0fe36fc01029e7aa5ef31a4b7cf58c6690296", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e72c65d183305bf9986be8404e01047a0a3d07b/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e72c65d183305bf9986be8404e01047a0a3d07b/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=7e72c65d183305bf9986be8404e01047a0a3d07b", "patch": "@@ -1,5 +1,9 @@\n 2011-11-07  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/50848\n+\t* pt.c (tsubst_copy_and_build) [CALL_EXPR]: Don't crash\n+\tif lookup finds a non-function.\n+\n \tPR c++/50863\n \t* parser.c (cp_parser_initializer_list): Parse C99\n \tarray designators tentatively."}, {"sha": "bf2a2c637356e18454967be4a1893e6d385d8d19", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e72c65d183305bf9986be8404e01047a0a3d07b/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e72c65d183305bf9986be8404e01047a0a3d07b/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=7e72c65d183305bf9986be8404e01047a0a3d07b", "patch": "@@ -13673,6 +13673,8 @@ tsubst_copy_and_build (tree t,\n \t\tif (unq != function)\n \t\t  {\n \t\t    tree fn = unq;\n+\t\t    if (TREE_CODE (fn) == INDIRECT_REF)\n+\t\t      fn = TREE_OPERAND (fn, 0);\n \t\t    if (TREE_CODE (fn) == COMPONENT_REF)\n \t\t      fn = TREE_OPERAND (fn, 1);\n \t\t    if (is_overloaded_fn (fn))\n@@ -13682,7 +13684,9 @@ tsubst_copy_and_build (tree t,\n \t\t\t       \"and no declarations were found by \"\n \t\t\t       \"argument-dependent lookup at the point \"\n \t\t\t       \"of instantiation\", function);\n-\t\t    if (DECL_CLASS_SCOPE_P (fn))\n+\t\t    if (!DECL_P (fn))\n+\t\t      /* Can't say anything more.  */;\n+\t\t    else if (DECL_CLASS_SCOPE_P (fn))\n \t\t      {\n \t\t\tinform (EXPR_LOC_OR_HERE (t),\n \t\t\t\t\"declarations in dependent base %qT are \""}, {"sha": "875e0997d21196f5b7c2e1c7adadb9c64bb486d8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e72c65d183305bf9986be8404e01047a0a3d07b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e72c65d183305bf9986be8404e01047a0a3d07b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7e72c65d183305bf9986be8404e01047a0a3d07b", "patch": "@@ -1,5 +1,8 @@\n 2011-11-07  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/50848\n+\t* g++.dg/template/lookup9.C: New.\n+\n \tPR c++/50863\n \t* g++.dg/cpp0x/lambda/lambda-initlist1.C: New.\n "}, {"sha": "4a1dc79eef4184ac8e5da92fce01b3a3c296e6b0", "filename": "gcc/testsuite/g++.dg/template/lookup9.C", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e72c65d183305bf9986be8404e01047a0a3d07b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Flookup9.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e72c65d183305bf9986be8404e01047a0a3d07b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Flookup9.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Flookup9.C?ref=7e72c65d183305bf9986be8404e01047a0a3d07b", "patch": "@@ -0,0 +1,10 @@\n+// PR c++/50848\n+// { dg-options \"-fpermissive\" }\n+\n+template<class T> class A {T& foo;};\n+template<class T> class B: public A<T> {\n+  void f(){\n+    foo(1);\t\t\t// { dg-message \"foo\" }\n+  }\n+};\n+template class B<int>;"}]}