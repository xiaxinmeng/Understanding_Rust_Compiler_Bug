{"sha": "87b2e74657cad904e532f17010c4ed6da098bebf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODdiMmU3NDY1N2NhZDkwNGU1MzJmMTcwMTBjNGVkNmRhMDk4YmViZg==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2010-06-10T10:24:46Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2010-06-10T10:24:46Z"}, "message": "re PR libstdc++/44487 ([C++0x] pair of references doesn't work)\n\n2010-06-10  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR libstdc++/44487\n\t* include/bits/stl_pair.h (pair(pair&&)): Remove.\n\t(pair(pair<_U1, _U2>&&): Use forward, consistently with Bullet 5\n\tof LWG 1326.\n\t* include/std/tuple (tuple(pair<_U1, _U2>&&)): Likewise.\n\t* testsuite/20_util/pair/44487.cc: Add.\n\t* testsuite/20_util/tuple/cons/44487.cc: Likewise.\n\t* testsuite/20_util/weak_ptr/comparison/cmp_neg.cc: Adjust dg-warning\n\tline numbers.\n\nFrom-SVN: r160528", "tree": {"sha": "863e86bc39ab1b61eb9718477af80edf384da1de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/863e86bc39ab1b61eb9718477af80edf384da1de"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/87b2e74657cad904e532f17010c4ed6da098bebf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/87b2e74657cad904e532f17010c4ed6da098bebf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/87b2e74657cad904e532f17010c4ed6da098bebf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/87b2e74657cad904e532f17010c4ed6da098bebf/comments", "author": null, "committer": null, "parents": [{"sha": "cefab2e4825e2e5dd8bfdf79ed78372ec6462f1e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cefab2e4825e2e5dd8bfdf79ed78372ec6462f1e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cefab2e4825e2e5dd8bfdf79ed78372ec6462f1e"}], "stats": {"total": 129, "additions": 120, "deletions": 9}, "files": [{"sha": "f280f119d220c880b231fdbdabed0f4851507cd0", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87b2e74657cad904e532f17010c4ed6da098bebf/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87b2e74657cad904e532f17010c4ed6da098bebf/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=87b2e74657cad904e532f17010c4ed6da098bebf", "patch": "@@ -1,3 +1,15 @@\n+2010-06-10  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR libstdc++/44487\n+\t* include/bits/stl_pair.h (pair(pair&&)): Remove.\n+\t(pair(pair<_U1, _U2>&&): Use forward, consistently with Bullet 5\n+\tof LWG 1326.\n+\t* include/std/tuple (tuple(pair<_U1, _U2>&&)): Likewise.\n+\t* testsuite/20_util/pair/44487.cc: Add.\n+\t* testsuite/20_util/tuple/cons/44487.cc: Likewise.\n+\t* testsuite/20_util/weak_ptr/comparison/cmp_neg.cc: Adjust dg-warning\n+\tline numbers.\n+\n 2010-06-09  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* include/std/type_traits (is_nothrow_constructible): Add."}, {"sha": "c5f2986fb77c102ae8214b705b4b6b1c5207b461", "filename": "libstdc++-v3/include/bits/stl_pair.h", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87b2e74657cad904e532f17010c4ed6da098bebf/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_pair.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87b2e74657cad904e532f17010c4ed6da098bebf/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_pair.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_pair.h?ref=87b2e74657cad904e532f17010c4ed6da098bebf", "patch": "@@ -120,10 +120,6 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n \t: first(std::forward<_U1>(__x)),\n \t  second(std::forward<_U2>(__y)) { }\n \n-      pair(pair&& __p)\n-      : first(std::move(__p.first)),\n-\tsecond(std::move(__p.second)) { }\n-\n       template<class... _Args1, class... _Args2>\n         pair(piecewise_construct_t,\n \t     tuple<_Args1...> __first_args,\n@@ -141,8 +137,8 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n #ifdef __GXX_EXPERIMENTAL_CXX0X__\n       template<class _U1, class _U2>\n         pair(pair<_U1, _U2>&& __p)\n-\t: first(std::move(__p.first)),\n-\t  second(std::move(__p.second)) { }\n+\t: first(std::forward<_U1>(__p.first)),\n+\t  second(std::forward<_U2>(__p.second)) { }\n \n       pair&\n       operator=(pair&& __p)"}, {"sha": "027442ddd7169cb232f2d5ac1ce5079998a3410d", "filename": "libstdc++-v3/include/std/tuple", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87b2e74657cad904e532f17010c4ed6da098bebf/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ftuple", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87b2e74657cad904e532f17010c4ed6da098bebf/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ftuple", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ftuple?ref=87b2e74657cad904e532f17010c4ed6da098bebf", "patch": "@@ -341,7 +341,8 @@ namespace std\n \n       template<typename _U1, typename _U2>\n         tuple(pair<_U1, _U2>&& __in)\n-\t: _Inherited(std::move(__in.first), std::move(__in.second)) { }\n+\t: _Inherited(std::forward<_U1>(__in.first),\n+\t\t     std::forward<_U2>(__in.second)) { }\n \n       tuple&\n       operator=(const tuple& __in)"}, {"sha": "833d98645349ac5e8cd57374c04e3b388dc9a2f1", "filename": "libstdc++-v3/testsuite/20_util/pair/44487.cc", "status": "added", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87b2e74657cad904e532f17010c4ed6da098bebf/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fpair%2F44487.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87b2e74657cad904e532f17010c4ed6da098bebf/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fpair%2F44487.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fpair%2F44487.cc?ref=87b2e74657cad904e532f17010c4ed6da098bebf", "patch": "@@ -0,0 +1,51 @@\n+// { dg-options \"-std=gnu++0x\" }\n+// { dg-do compile }\n+\n+// Copyright (C) 2010 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <utility>\n+\n+int x, y;\n+\n+std::pair<int&, int&>\n+foo1()\n+{\n+  std::pair<int&, int&> blah(x, y);\n+  return blah;\n+}\n+\n+std::pair<int&, int&>\n+foo2()\n+{\n+  const std::pair<int&, int&> blah(x, y);\n+  return blah;\n+}\n+\n+std::pair<int&, int&>\n+foo3()\n+{\n+  std::pair<int&, int&> blah(x, y);\n+  return std::pair<int&, int&>(std::move(blah));\n+}\n+\n+std::pair<int&, int&>\n+foo4()\n+{\n+  const std::pair<int&, int&> blah(x, y);\n+  return std::pair<int&, int&>(std::move(blah));\n+}"}, {"sha": "dade58de8bc527130cc7b3316a363edaa6a1ecdc", "filename": "libstdc++-v3/testsuite/20_util/tuple/cons/44487.cc", "status": "added", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87b2e74657cad904e532f17010c4ed6da098bebf/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Fcons%2F44487.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87b2e74657cad904e532f17010c4ed6da098bebf/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Fcons%2F44487.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Fcons%2F44487.cc?ref=87b2e74657cad904e532f17010c4ed6da098bebf", "patch": "@@ -0,0 +1,51 @@\n+// { dg-options \"-std=gnu++0x\" }\n+// { dg-do compile }\n+\n+// Copyright (C) 2010 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <tuple>\n+\n+int x, y;\n+\n+std::tuple<int&, int&>\n+foo1()\n+{\n+  std::pair<int&, int&> blah(x, y);\n+  return blah;\n+}\n+\n+std::tuple<int&, int&>\n+foo2()\n+{\n+  const std::pair<int&, int&> blah(x, y);\n+  return blah;\n+}\n+\n+std::tuple<int&, int&>\n+foo3()\n+{\n+  std::pair<int&, int&> blah(x, y);\n+  return std::tuple<int&, int&>(std::move(blah));\n+}\n+\n+std::tuple<int&, int&>\n+foo4()\n+{\n+  const std::pair<int&, int&> blah(x, y);\n+  return std::tuple<int&, int&>(std::move(blah));\n+}"}, {"sha": "17d662accae3d0637a379c1726dac39486793d4b", "filename": "libstdc++-v3/testsuite/20_util/weak_ptr/comparison/cmp_neg.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87b2e74657cad904e532f17010c4ed6da098bebf/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fweak_ptr%2Fcomparison%2Fcmp_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87b2e74657cad904e532f17010c4ed6da098bebf/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fweak_ptr%2Fcomparison%2Fcmp_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fweak_ptr%2Fcomparison%2Fcmp_neg.cc?ref=87b2e74657cad904e532f17010c4ed6da098bebf", "patch": "@@ -44,8 +44,8 @@ main()\n // { dg-warning \"note\" \"\" { target *-*-* } 324 }\n // { dg-warning \"note\" \"\" { target *-*-* } 423 }\n // { dg-warning \"note\" \"\" { target *-*-* } 862 }\n-// { dg-warning \"note\" \"\" { target *-*-* } 511 }\n+// { dg-warning \"note\" \"\" { target *-*-* } 512 }\n // { dg-warning \"note\" \"\" { target *-*-* } 1005 }\n // { dg-warning \"note\" \"\" { target *-*-* } 340 }\n // { dg-warning \"note\" \"\" { target *-*-* } 290 }\n-// { dg-warning \"note\" \"\" { target *-*-* } 201 }\n+// { dg-warning \"note\" \"\" { target *-*-* } 197 }"}]}