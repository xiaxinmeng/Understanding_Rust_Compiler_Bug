{"sha": "fcfcdfc8970fd436587ee62f65d2df23d74d506c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmNmY2RmYzg5NzBmZDQzNjU4N2VlNjJmNjVkMmRmMjNkNzRkNTA2Yw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1999-02-05T02:42:48Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1999-02-05T02:42:48Z"}, "message": "pt.c (unify): Call coerce_template_parms with the COMPLAIN flag turned off.\n\n\t* pt.c (unify): Call coerce_template_parms with the COMPLAIN flag\n\tturned off.\n\t* lex.c (retrofit_lang_decl): Split out...\n\t(build_lang_decl): From here.\n\t* decl.c (pushdecl): Call it for functions generated by the middle\n\tend that don't have DECL_LANG_SPECIFIC.\n\t* decl2.c: Remove flag_init_priority.  Always enable initp stuff.\n\t(start_objects, finish_objects): Only use special\n\tinit_priority code if the user specified a priority.\n\t(do_ctors, do_dtors): Use DEFAULT_INIT_PRIORITY for the non-initp\n\tobjects.\n\nFrom-SVN: r25036", "tree": {"sha": "28081cfe68b8240a6691608b4acaf05aadca62f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/28081cfe68b8240a6691608b4acaf05aadca62f5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fcfcdfc8970fd436587ee62f65d2df23d74d506c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fcfcdfc8970fd436587ee62f65d2df23d74d506c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fcfcdfc8970fd436587ee62f65d2df23d74d506c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fcfcdfc8970fd436587ee62f65d2df23d74d506c/comments", "author": null, "committer": null, "parents": [{"sha": "8e7dd8d984fe5678b8d6dbe8d8524beedd15e1b3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e7dd8d984fe5678b8d6dbe8d8524beedd15e1b3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8e7dd8d984fe5678b8d6dbe8d8524beedd15e1b3"}], "stats": {"total": 44, "additions": 40, "deletions": 4}, "files": [{"sha": "5dc6540c2c04c78141a3a71afb55859b7ad2f138", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 19, "deletions": 1, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fcfcdfc8970fd436587ee62f65d2df23d74d506c/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fcfcdfc8970fd436587ee62f65d2df23d74d506c/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=fcfcdfc8970fd436587ee62f65d2df23d74d506c", "patch": "@@ -1,8 +1,26 @@\n+1999-02-04  Kriang Lerdsuwanakij <lerdsuwa@scf-fs.usc.edu>\n+\n+\t* pt.c (unify): Call coerce_template_parms with the COMPLAIN flag\n+\tturned off.\n+\n+1999-02-04  Jason Merrill  <jason@yorick.cygnus.com>\n+\n+\t* lex.c (retrofit_lang_decl): Split out...\n+\t(build_lang_decl): From here.\n+\t* decl.c (pushdecl): Call it for functions generated by the middle \n+\tend that don't have DECL_LANG_SPECIFIC.\n+\n+\t* decl2.c: Remove flag_init_priority.  Always enable initp stuff.\n+\t(start_objects, finish_objects): Only use special\n+\tinit_priority code if the user specified a priority.\n+\t(do_ctors, do_dtors): Use DEFAULT_INIT_PRIORITY for the non-initp\n+\tobjects.\n+\n Wed Feb  3 22:50:17 1999  Marc Espie <Marc.Espie@liafa.jussieu.fr>\n \n         * Make-lang.in (GXX_OBJS): Remove choose-temp.o, pexecute.o and\n \tmkstemp.o.  Get them from libiberty now.\n-\t(DEMANGLER_PROG): Simlarly, temove getopt.o getopt1.o.\n+\t(DEMANGLER_PROG): Simlarly, remove getopt.o getopt1.o.\n \t\n Tue Feb  2 22:38:48 1999  Theodore Papadopoulo <Theodore.Papadopoulo@sophia.inria.fr>\n "}, {"sha": "b206fd6f76795f1353b94e16a6bf071963af92c2", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fcfcdfc8970fd436587ee62f65d2df23d74d506c/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fcfcdfc8970fd436587ee62f65d2df23d74d506c/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=fcfcdfc8970fd436587ee62f65d2df23d74d506c", "patch": "@@ -3671,6 +3671,15 @@ pushdecl (x)\n \n       check_template_shadow (x);\n \n+      /* If this is a function conjured up by the backend, massage it\n+\t so it looks friendly.  */\n+      if (TREE_CODE (x) == FUNCTION_DECL\n+\t  && ! DECL_LANG_SPECIFIC (x))\n+\t{\n+\t  retrofit_lang_decl (x);\n+\t  DECL_LANGUAGE (x) = lang_c;\n+\t}\n+\n       if (TREE_CODE (x) == FUNCTION_DECL && ! DECL_FUNCTION_MEMBER_P (x))\n \t{\n \t  t = push_overloaded_decl (x, PUSH_LOCAL);"}, {"sha": "cff3064d3dcea872ecf7afb7c54dde0ac86abd45", "filename": "gcc/cp/lex.c", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fcfcdfc8970fd436587ee62f65d2df23d74d506c/gcc%2Fcp%2Flex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fcfcdfc8970fd436587ee62f65d2df23d74d506c/gcc%2Fcp%2Flex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Flex.c?ref=fcfcdfc8970fd436587ee62f65d2df23d74d506c", "patch": "@@ -4561,6 +4561,17 @@ build_lang_decl (code, name, type)\n      tree type;\n {\n   register tree t = build_decl (code, name, type);\n+  retrofit_lang_decl (t);\n+  return t;\n+}\n+\n+/* Add DECL_LANG_SPECIFIC info to T.  Called from build_lang_decl\n+   and pushdecl (for functions generated by the backend).  */\n+\n+void\n+retrofit_lang_decl (t)\n+     tree t;\n+{\n   struct obstack *obstack = current_obstack;\n   register int i = sizeof (struct lang_decl) / sizeof (int);\n   register int *pi;\n@@ -4609,8 +4620,6 @@ build_lang_decl (code, name, type)\n   tree_node_counts[(int)lang_decl] += 1;\n   tree_node_sizes[(int)lang_decl] += sizeof (struct lang_decl);\n #endif\n-\n-  return t;\n }\n \n tree"}, {"sha": "dd805da3967868cb4b8a0bc1c910ced48b91f801", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fcfcdfc8970fd436587ee62f65d2df23d74d506c/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fcfcdfc8970fd436587ee62f65d2df23d74d506c/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=fcfcdfc8970fd436587ee62f65d2df23d74d506c", "patch": "@@ -7506,7 +7506,7 @@ unify (tparms, targs, parm, arg, strict, explicit_mask)\n \t\t   template <class T, class Allocator = allocator> \n \t\t   class vector.  */\n \n-\t\tif (coerce_template_parms (argtmplvec, parmvec, parmtmpl, 1, 1)\n+\t\tif (coerce_template_parms (argtmplvec, parmvec, parmtmpl, 0, 1)\n \t\t    == error_mark_node)\n \t\t  return 1;\n \t  "}]}