{"sha": "4189fb53f29a76336dec42fa20572af538aeb055", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDE4OWZiNTNmMjlhNzYzMzZkZWM0MmZhMjA1NzJhZjUzOGFlYjA1NQ==", "commit": {"author": {"name": "Joern Rennecke", "email": "joern.rennecke@embecosm.com", "date": "2011-11-26T09:21:47Z"}, "committer": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "2011-11-26T09:21:47Z"}, "message": "re PR middle-end/50074 (gcc.dg/sibcall-6.c execution test on x86_64 with -fPIC)\n\n        PR middle-end/50074\n        * calls.c (mem_overlaps_already_clobbered_arg_p):\n        Return false if no outgoing arguments have been stored so far.\n\nFrom-SVN: r181738", "tree": {"sha": "3a44dc3d6e8d3e7777e090a0953dd9d61d089826", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3a44dc3d6e8d3e7777e090a0953dd9d61d089826"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4189fb53f29a76336dec42fa20572af538aeb055", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4189fb53f29a76336dec42fa20572af538aeb055", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4189fb53f29a76336dec42fa20572af538aeb055", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4189fb53f29a76336dec42fa20572af538aeb055/comments", "author": {"login": "amylaar", "id": 1663475, "node_id": "MDQ6VXNlcjE2NjM0NzU=", "avatar_url": "https://avatars.githubusercontent.com/u/1663475?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amylaar", "html_url": "https://github.com/amylaar", "followers_url": "https://api.github.com/users/amylaar/followers", "following_url": "https://api.github.com/users/amylaar/following{/other_user}", "gists_url": "https://api.github.com/users/amylaar/gists{/gist_id}", "starred_url": "https://api.github.com/users/amylaar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amylaar/subscriptions", "organizations_url": "https://api.github.com/users/amylaar/orgs", "repos_url": "https://api.github.com/users/amylaar/repos", "events_url": "https://api.github.com/users/amylaar/events{/privacy}", "received_events_url": "https://api.github.com/users/amylaar/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ace7f915fc9703b6fc3e75a8dceef14de1ed8154", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ace7f915fc9703b6fc3e75a8dceef14de1ed8154", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ace7f915fc9703b6fc3e75a8dceef14de1ed8154"}], "stats": {"total": 8, "additions": 8, "deletions": 0}, "files": [{"sha": "289ed64363300fa78a18c5cba89b5c61ba745cac", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4189fb53f29a76336dec42fa20572af538aeb055/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4189fb53f29a76336dec42fa20572af538aeb055/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4189fb53f29a76336dec42fa20572af538aeb055", "patch": "@@ -1,3 +1,9 @@\n+2011-11-26  Joern Rennecke  <joern.rennecke@embecosm.com>\n+\n+\tPR middle-end/50074\n+\t* calls.c (mem_overlaps_already_clobbered_arg_p):\n+\tReturn false if no outgoing arguments have been stored so far.\n+\n 2011-11-25  Georg-Johann Lay  <avr@gjlay.de>\n \n \t* config/avr/avr.c (print_operand): Support code = 'i' for CONST_INT."}, {"sha": "316f1481ca0b68a58e57f19835a9e527d1605690", "filename": "gcc/calls.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4189fb53f29a76336dec42fa20572af538aeb055/gcc%2Fcalls.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4189fb53f29a76336dec42fa20572af538aeb055/gcc%2Fcalls.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcalls.c?ref=4189fb53f29a76336dec42fa20572af538aeb055", "patch": "@@ -1668,6 +1668,8 @@ mem_overlaps_already_clobbered_arg_p (rtx addr, unsigned HOST_WIDE_INT size)\n {\n   HOST_WIDE_INT i;\n \n+  if (sbitmap_empty_p (stored_args_map))\n+    return false;\n   if (addr == crtl->args.internal_arg_pointer)\n     i = 0;\n   else if (GET_CODE (addr) == PLUS"}]}