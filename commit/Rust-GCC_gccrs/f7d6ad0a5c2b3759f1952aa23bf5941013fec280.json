{"sha": "f7d6ad0a5c2b3759f1952aa23bf5941013fec280", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjdkNmFkMGE1YzJiMzc1OWYxOTUyYWEyM2JmNTk0MTAxM2ZlYzI4MA==", "commit": {"author": {"name": "Fran\u00e7ois Dumont", "email": "fdumont@gcc.gnu.org", "date": "2012-01-05T20:59:17Z"}, "committer": {"name": "Fran\u00e7ois Dumont", "email": "fdumont@gcc.gnu.org", "date": "2012-01-05T20:59:17Z"}, "message": "hashtable_policy.h (_Hashtable_base<>::_M_eq()): protected rather than private, use it...\n\n2012-01-05  Fran\u00e7ois Dumont  <fdumont@gcc.gnu.org>\n\n\t* include/bits/hashtable_policy.h (_Hashtable_base<>::_M_eq()):\n\tprotected rather than private, use it...\n\t* include/bits/hashtable.h (_Hashtable<>::key_eq()): ... here.\n\t* testsuite/23_containers/unordered_set/observers.cc: New.\n\t* testsuite/23_containers/unordered_multiset/observers.cc: New.\n\t* testsuite/23_containers/unordered_map/observers.cc: New.\n\t* testsuite/23_containers/unordered_multimap/observers.cc: New.\n\nFrom-SVN: r182928", "tree": {"sha": "6ae30463ff4ad8d0e4bd5e536d11d54e8cade6c7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6ae30463ff4ad8d0e4bd5e536d11d54e8cade6c7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f7d6ad0a5c2b3759f1952aa23bf5941013fec280", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f7d6ad0a5c2b3759f1952aa23bf5941013fec280", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f7d6ad0a5c2b3759f1952aa23bf5941013fec280", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f7d6ad0a5c2b3759f1952aa23bf5941013fec280/comments", "author": null, "committer": null, "parents": [{"sha": "866622072a274051c473d913e606d9076226ce59", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/866622072a274051c473d913e606d9076226ce59", "html_url": "https://github.com/Rust-GCC/gccrs/commit/866622072a274051c473d913e606d9076226ce59"}], "stats": {"total": 136, "additions": 133, "deletions": 3}, "files": [{"sha": "56350fe30da72105424f701eef7cfe3350070077", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7d6ad0a5c2b3759f1952aa23bf5941013fec280/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7d6ad0a5c2b3759f1952aa23bf5941013fec280/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=f7d6ad0a5c2b3759f1952aa23bf5941013fec280", "patch": "@@ -1,4 +1,14 @@\n-2012-01-03  Fran\u00e7ois Dumont <fdumont@gcc.gnu.org>\n+2012-01-05  Fran\u00e7ois Dumont  <fdumont@gcc.gnu.org>\n+\n+\t* include/bits/hashtable_policy.h (_Hashtable_base<>::_M_eq()):\n+\tprotected rather than private, use it...\n+\t* include/bits/hashtable.h (_Hashtable<>::key_eq()): ... here.\n+\t* testsuite/23_containers/unordered_set/observers.cc: New.\n+\t* testsuite/23_containers/unordered_multiset/observers.cc: New.\n+\t* testsuite/23_containers/unordered_map/observers.cc: New.\n+\t* testsuite/23_containers/unordered_multimap/observers.cc: New.\n+\n+2012-01-03  Fran\u00e7ois Dumont  <fdumont@gcc.gnu.org>\n \n \t* include/bits/hashtable_policy.h (_Ebo_helper<>): Rename to the more\n \tspecific _Hashtable_ebo_helper. Hide this implementation detail thanks"}, {"sha": "c9f341957a9ea30cffaeab72d423f0515e65fc56", "filename": "libstdc++-v3/include/bits/hashtable.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7d6ad0a5c2b3759f1952aa23bf5941013fec280/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fhashtable.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7d6ad0a5c2b3759f1952aa23bf5941013fec280/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fhashtable.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fhashtable.h?ref=f7d6ad0a5c2b3759f1952aa23bf5941013fec280", "patch": "@@ -371,7 +371,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       // Observers\n       key_equal\n       key_eq() const\n-      { return this->_M_eq; }\n+      { return this->_M_eq(); }\n \n       // hash_function, if present, comes from _Hash_code_base.\n "}, {"sha": "993f63007d884334271f67e855d4f8ff491bc837", "filename": "libstdc++-v3/include/bits/hashtable_policy.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7d6ad0a5c2b3759f1952aa23bf5941013fec280/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fhashtable_policy.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7d6ad0a5c2b3759f1952aa23bf5941013fec280/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fhashtable_policy.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fhashtable_policy.h?ref=f7d6ad0a5c2b3759f1952aa23bf5941013fec280", "patch": "@@ -876,7 +876,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       std::swap(_M_eq(), __x._M_eq());\n     }\n \n-  private:\n+  protected:\n     const _Equal&\n     _M_eq() const { return _EboEqual::_S_cget(*this); }\n     _Equal&"}, {"sha": "4a6847e5c0bfeb6418bb0f616d2e6b746ab7c15c", "filename": "libstdc++-v3/testsuite/23_containers/unordered_map/observers.cc", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7d6ad0a5c2b3759f1952aa23bf5941013fec280/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Fobservers.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7d6ad0a5c2b3759f1952aa23bf5941013fec280/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Fobservers.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Fobservers.cc?ref=f7d6ad0a5c2b3759f1952aa23bf5941013fec280", "patch": "@@ -0,0 +1,30 @@\n+// { dg-do compile }\n+// { dg-options \"-std=gnu++0x\" }\n+\n+// Copyright (C) 2012 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without Pred the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <unordered_map>\n+\n+void\n+test01()\n+{\n+  std::unordered_map<int, int> um;\n+\n+  auto ke = um.key_eq();\n+  auto h = um.hash_function();\n+}"}, {"sha": "634bd9d3b68648316d8b08f052dde851b5068a32", "filename": "libstdc++-v3/testsuite/23_containers/unordered_multimap/observers.cc", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7d6ad0a5c2b3759f1952aa23bf5941013fec280/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multimap%2Fobservers.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7d6ad0a5c2b3759f1952aa23bf5941013fec280/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multimap%2Fobservers.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multimap%2Fobservers.cc?ref=f7d6ad0a5c2b3759f1952aa23bf5941013fec280", "patch": "@@ -0,0 +1,30 @@\n+// { dg-do compile }\n+// { dg-options \"-std=gnu++0x\" }\n+\n+// Copyright (C) 2012 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without Pred the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <unordered_map>\n+\n+void\n+test01()\n+{\n+  std::unordered_multimap<int, int> um;\n+\n+  auto ke = um.key_eq();\n+  auto h = um.hash_function();\n+}"}, {"sha": "0ea3e5bf0c89190e2f96dc18dbb6976903b1d282", "filename": "libstdc++-v3/testsuite/23_containers/unordered_multiset/observers.cc", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7d6ad0a5c2b3759f1952aa23bf5941013fec280/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multiset%2Fobservers.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7d6ad0a5c2b3759f1952aa23bf5941013fec280/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multiset%2Fobservers.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multiset%2Fobservers.cc?ref=f7d6ad0a5c2b3759f1952aa23bf5941013fec280", "patch": "@@ -0,0 +1,30 @@\n+// { dg-do compile }\n+// { dg-options \"-std=gnu++0x\" }\n+\n+// Copyright (C) 2012 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without Pred the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <unordered_set>\n+\n+void\n+test01()\n+{\n+  std::unordered_multiset<int> us;\n+\n+  auto ke = us.key_eq();\n+  auto h = us.hash_function();\n+}"}, {"sha": "c18b0598464b1c17f4d324409788facd22dac5b2", "filename": "libstdc++-v3/testsuite/23_containers/unordered_set/observers.cc", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7d6ad0a5c2b3759f1952aa23bf5941013fec280/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_set%2Fobservers.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7d6ad0a5c2b3759f1952aa23bf5941013fec280/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_set%2Fobservers.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_set%2Fobservers.cc?ref=f7d6ad0a5c2b3759f1952aa23bf5941013fec280", "patch": "@@ -0,0 +1,30 @@\n+// { dg-do compile }\n+// { dg-options \"-std=gnu++0x\" }\n+\n+// Copyright (C) 2012 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without Pred the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <unordered_set>\n+\n+void\n+test01()\n+{\n+  std::unordered_set<int> us;\n+\n+  auto ke = us.key_eq();\n+  auto h = us.hash_function();\n+}"}]}