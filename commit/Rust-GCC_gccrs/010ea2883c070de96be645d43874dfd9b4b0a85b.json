{"sha": "010ea2883c070de96be645d43874dfd9b4b0a85b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDEwZWEyODgzYzA3MGRlOTZiZTY0NWQ0Mzg3NGRmZDliNGIwYTg1Yg==", "commit": {"author": {"name": "Gerald Pfeifer", "email": "gerald@pfeifer.com", "date": "2014-08-19T05:13:38Z"}, "committer": {"name": "Gerald Pfeifer", "email": "gerald@gcc.gnu.org", "date": "2014-08-19T05:13:38Z"}, "message": "* class.c (contains_empty_class_p): Remove.\n\nFrom-SVN: r214130", "tree": {"sha": "76569235c9425f53a0a3862b6f07ad6852479eac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/76569235c9425f53a0a3862b6f07ad6852479eac"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/010ea2883c070de96be645d43874dfd9b4b0a85b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/010ea2883c070de96be645d43874dfd9b4b0a85b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/010ea2883c070de96be645d43874dfd9b4b0a85b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/010ea2883c070de96be645d43874dfd9b4b0a85b/comments", "author": {"login": "GeraldPfeifer", "id": 4573532, "node_id": "MDQ6VXNlcjQ1NzM1MzI=", "avatar_url": "https://avatars.githubusercontent.com/u/4573532?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GeraldPfeifer", "html_url": "https://github.com/GeraldPfeifer", "followers_url": "https://api.github.com/users/GeraldPfeifer/followers", "following_url": "https://api.github.com/users/GeraldPfeifer/following{/other_user}", "gists_url": "https://api.github.com/users/GeraldPfeifer/gists{/gist_id}", "starred_url": "https://api.github.com/users/GeraldPfeifer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GeraldPfeifer/subscriptions", "organizations_url": "https://api.github.com/users/GeraldPfeifer/orgs", "repos_url": "https://api.github.com/users/GeraldPfeifer/repos", "events_url": "https://api.github.com/users/GeraldPfeifer/events{/privacy}", "received_events_url": "https://api.github.com/users/GeraldPfeifer/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6ae9194fc25f0f5d44191aba155e60de88aa856f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ae9194fc25f0f5d44191aba155e60de88aa856f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6ae9194fc25f0f5d44191aba155e60de88aa856f"}], "stats": {"total": 34, "additions": 4, "deletions": 30}, "files": [{"sha": "b366a4f429aa3a2e1b6d3a1188e165fdaa252e64", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/010ea2883c070de96be645d43874dfd9b4b0a85b/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/010ea2883c070de96be645d43874dfd9b4b0a85b/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=010ea2883c070de96be645d43874dfd9b4b0a85b", "patch": "@@ -1,3 +1,7 @@\n+2014-08-19  Gerald Pfeifer  <gerald@pfeifer.com>\n+\n+\t* class.c (contains_empty_class_p): Remove.\n+\n 2014-08-18  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* parser.c (cp_parser_expression): Add default arguments."}, {"sha": "c7ecf7026a61ac6990852b208fd6081cbc5a1458", "filename": "gcc/cp/class.c", "status": "modified", "additions": 0, "deletions": 30, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/010ea2883c070de96be645d43874dfd9b4b0a85b/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/010ea2883c070de96be645d43874dfd9b4b0a85b/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=010ea2883c070de96be645d43874dfd9b4b0a85b", "patch": "@@ -208,7 +208,6 @@ static int splay_tree_compare_integer_csts (splay_tree_key k1,\n \t\t\t\t\t    splay_tree_key k2);\n static void warn_about_ambiguous_bases (tree);\n static bool type_requires_array_cookie (tree);\n-static bool contains_empty_class_p (tree);\n static bool base_derived_from (tree, tree);\n static int empty_base_at_nonzero_offset_p (tree, tree, splay_tree);\n static tree end_of_base (tree);\n@@ -7796,35 +7795,6 @@ is_empty_class (tree type)\n   return CLASSTYPE_EMPTY_P (type);\n }\n \n-/* Returns true if TYPE contains an empty class.  */\n-\n-static bool\n-contains_empty_class_p (tree type)\n-{\n-  if (is_empty_class (type))\n-    return true;\n-  if (CLASS_TYPE_P (type))\n-    {\n-      tree field;\n-      tree binfo;\n-      tree base_binfo;\n-      int i;\n-\n-      for (binfo = TYPE_BINFO (type), i = 0;\n-\t   BINFO_BASE_ITERATE (binfo, i, base_binfo); ++i)\n-\tif (contains_empty_class_p (BINFO_TYPE (base_binfo)))\n-\t  return true;\n-      for (field = TYPE_FIELDS (type); field; field = TREE_CHAIN (field))\n-\tif (TREE_CODE (field) == FIELD_DECL\n-\t    && !DECL_ARTIFICIAL (field)\n-\t    && is_empty_class (TREE_TYPE (field)))\n-\t  return true;\n-    }\n-  else if (TREE_CODE (type) == ARRAY_TYPE)\n-    return contains_empty_class_p (TREE_TYPE (type));\n-  return false;\n-}\n-\n /* Returns true if TYPE contains no actual data, just various\n    possible combinations of empty classes and possibly a vptr.  */\n "}]}