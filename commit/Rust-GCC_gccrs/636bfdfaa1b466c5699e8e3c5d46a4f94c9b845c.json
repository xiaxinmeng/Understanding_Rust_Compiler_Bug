{"sha": "636bfdfaa1b466c5699e8e3c5d46a4f94c9b845c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjM2YmZkZmFhMWI0NjZjNTY5OWU4ZTNjNWQ0NmE0Zjk0YzliODQ1Yw==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@linaro.org", "date": "2017-09-05T19:56:49Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2017-09-05T19:56:49Z"}, "message": "Make more use of int_mode_for_mode\n\nThis patch converts more places that could use int_mode_for_mode\ninstead of mode_for_size.  This is in preparation for an upcoming\npatch that makes mode_for_size itself return an opt_mode.\n\nThe reason for using required () in exp2_immediate_p is that\nwe go on to do:\n\n    trunc_int_for_mode (..., int_mode)\n\nwhich would be invalid for (and have failed for) BLKmode.\n\nThe reason for using required () in spu_convert_move and\nresolve_simple_move is that we go on to use registers of\nthe returned mode in non-call rtl instructions, which would\nbe invalid for BLKmode.\n\n2017-09-05  Richard Sandiford  <richard.sandiford@linaro.org>\n\ngcc/\n\t* config/spu/spu.c (exp2_immediate_p): Use int_mode_for_mode.\n\t(spu_convert_move): Likewise.\n\t* lower-subreg.c (resolve_simple_move): Likewise.\n\nFrom-SVN: r251725", "tree": {"sha": "1a7d54a04b7f2cd42c7cb4241e97d557d5123117", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1a7d54a04b7f2cd42c7cb4241e97d557d5123117"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/636bfdfaa1b466c5699e8e3c5d46a4f94c9b845c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/636bfdfaa1b466c5699e8e3c5d46a4f94c9b845c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/636bfdfaa1b466c5699e8e3c5d46a4f94c9b845c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/636bfdfaa1b466c5699e8e3c5d46a4f94c9b845c/comments", "author": null, "committer": null, "parents": [{"sha": "36560e9e15a83b068d3a9dd12816a2529086e69a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/36560e9e15a83b068d3a9dd12816a2529086e69a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/36560e9e15a83b068d3a9dd12816a2529086e69a"}], "stats": {"total": 18, "additions": 10, "deletions": 8}, "files": [{"sha": "58b31d79dbb3fa490e229510b0464afaaad16b71", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/636bfdfaa1b466c5699e8e3c5d46a4f94c9b845c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/636bfdfaa1b466c5699e8e3c5d46a4f94c9b845c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=636bfdfaa1b466c5699e8e3c5d46a4f94c9b845c", "patch": "@@ -1,3 +1,9 @@\n+2017-09-05  Richard Sandiford  <richard.sandiford@linaro.org>\n+\n+\t* config/spu/spu.c (exp2_immediate_p): Use int_mode_for_mode.\n+\t(spu_convert_move): Likewise.\n+\t* lower-subreg.c (resolve_simple_move): Likewise.\n+\n 2017-09-05  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n \n \tPR target/81833"}, {"sha": "e45e3024e6b5d74dd5dc885aadf7bdd373a1575e", "filename": "gcc/config/spu/spu.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/636bfdfaa1b466c5699e8e3c5d46a4f94c9b845c/gcc%2Fconfig%2Fspu%2Fspu.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/636bfdfaa1b466c5699e8e3c5d46a4f94c9b845c/gcc%2Fconfig%2Fspu%2Fspu.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fspu%2Fspu.c?ref=636bfdfaa1b466c5699e8e3c5d46a4f94c9b845c", "patch": "@@ -3372,7 +3372,7 @@ arith_immediate_p (rtx op, machine_mode mode,\n   constant_to_array (mode, op, arr);\n \n   bytes = GET_MODE_UNIT_SIZE (mode);\n-  mode = mode_for_size (GET_MODE_UNIT_BITSIZE (mode), MODE_INT, 0);\n+  mode = int_mode_for_mode (GET_MODE_INNER (mode)).require ();\n \n   /* Check that bytes are repeated. */\n   for (i = bytes; i < 16; i += bytes)\n@@ -3415,7 +3415,7 @@ exp2_immediate_p (rtx op, machine_mode mode, int low, int high)\n   mode = GET_MODE_INNER (mode);\n \n   bytes = GET_MODE_SIZE (mode);\n-  int_mode = mode_for_size (GET_MODE_BITSIZE (mode), MODE_INT, 0);\n+  int_mode = int_mode_for_mode (mode).require ();\n \n   /* Check that bytes are repeated. */\n   for (i = bytes; i < 16; i += bytes)\n@@ -4503,7 +4503,7 @@ static void\n spu_convert_move (rtx dst, rtx src)\n {\n   machine_mode mode = GET_MODE (dst);\n-  machine_mode int_mode = mode_for_size (GET_MODE_BITSIZE (mode), MODE_INT, 0);\n+  machine_mode int_mode = int_mode_for_mode (mode).require ();\n   rtx reg;\n   gcc_assert (GET_MODE (src) == TImode);\n   reg = int_mode != mode ? gen_reg_rtx (int_mode) : dst;"}, {"sha": "43b6cd0f6500cc1b32c800b4da92c67a1ea53693", "filename": "gcc/lower-subreg.c", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/636bfdfaa1b466c5699e8e3c5d46a4f94c9b845c/gcc%2Flower-subreg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/636bfdfaa1b466c5699e8e3c5d46a4f94c9b845c/gcc%2Flower-subreg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flower-subreg.c?ref=636bfdfaa1b466c5699e8e3c5d46a4f94c9b845c", "patch": "@@ -956,11 +956,7 @@ resolve_simple_move (rtx set, rtx_insn *insn)\n       if (real_dest == NULL_RTX)\n \treal_dest = dest;\n       if (!SCALAR_INT_MODE_P (dest_mode))\n-\t{\n-\t  dest_mode = mode_for_size (GET_MODE_SIZE (dest_mode) * BITS_PER_UNIT,\n-\t\t\t\t     MODE_INT, 0);\n-\t  gcc_assert (dest_mode != BLKmode);\n-\t}\n+\tdest_mode = int_mode_for_mode (dest_mode).require ();\n       dest = gen_reg_rtx (dest_mode);\n       if (REG_P (real_dest))\n \tREG_ATTRS (dest) = REG_ATTRS (real_dest);"}]}