{"sha": "90b51aaf6383fab0d308a3ae238a45d7a50933b4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTBiNTFhYWY2MzgzZmFiMGQzMDhhM2FlMjM4YTQ1ZDdhNTA5MzNiNA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-01-20T15:25:44Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-01-20T15:25:44Z"}, "message": "[multiple changes]\n\n2014-01-20  Robert Dewar  <dewar@adacore.com>\n\n\t* s-taasde.ads, gnat_ugn.texi, s-tadeca.adb, sem_res.adb, s-tadeca.ads:\n\tMinor reformatting and code clean up.\n\n2014-01-20  Arnaud Charlet  <charlet@adacore.com>\n\n\t* sem_cat.adb (Validate_Object_Declaration): Relax semantics\n\tof objects of private type if Relaxed_RM_Semantics.\n\nFrom-SVN: r206823", "tree": {"sha": "9e69f6d6604fa710148467001bcae9948127dc8a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9e69f6d6604fa710148467001bcae9948127dc8a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/90b51aaf6383fab0d308a3ae238a45d7a50933b4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90b51aaf6383fab0d308a3ae238a45d7a50933b4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/90b51aaf6383fab0d308a3ae238a45d7a50933b4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90b51aaf6383fab0d308a3ae238a45d7a50933b4/comments", "author": null, "committer": null, "parents": [{"sha": "2838fa930c8c9210ee4a81c1c22a6406a9ce2f0f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2838fa930c8c9210ee4a81c1c22a6406a9ce2f0f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2838fa930c8c9210ee4a81c1c22a6406a9ce2f0f"}], "stats": {"total": 108, "additions": 62, "deletions": 46}, "files": [{"sha": "cc097b2e7b923756acb0b2a5fde89c26de753de4", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90b51aaf6383fab0d308a3ae238a45d7a50933b4/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90b51aaf6383fab0d308a3ae238a45d7a50933b4/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=90b51aaf6383fab0d308a3ae238a45d7a50933b4", "patch": "@@ -1,3 +1,13 @@\n+2014-01-20  Robert Dewar  <dewar@adacore.com>\n+\n+\t* s-taasde.ads, gnat_ugn.texi, s-tadeca.adb, sem_res.adb, s-tadeca.ads:\n+\tMinor reformatting and code clean up.\n+\n+2014-01-20  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* sem_cat.adb (Validate_Object_Declaration): Relax semantics\n+\tof objects of private type if Relaxed_RM_Semantics.\n+\n 2014-01-20  Claire Dross  <dross@adacore.com>\n \n \t* a-cofove.ads (Vector): Capacity discriminant"}, {"sha": "32a7e0f0dee64b0a3fdf5ab8013a79154d29eda4", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90b51aaf6383fab0d308a3ae238a45d7a50933b4/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90b51aaf6383fab0d308a3ae238a45d7a50933b4/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=90b51aaf6383fab0d308a3ae238a45d7a50933b4", "patch": "@@ -13820,7 +13820,7 @@ identifier case conventions, rules of indentation, and comment layout.\n Note: A newly-redesigned set of formatting algorithms used by gnatpp\n is now available.\n To invoke the old formatting algorithms, use the @option{--pp-old} switch.\n-We intend to remove support for @option{--pp-old} at some point.\n+Support for @option{--pp-old} will be removed in some future version.\n \n To produce a reformatted file, @command{gnatpp} generates and uses the ASIS\n tree for the input source and thus requires the input to be syntactically and"}, {"sha": "dc4165a122c47e46f0499802d645951e611135a3", "filename": "gcc/ada/s-taasde.ads", "status": "modified", "additions": 12, "deletions": 15, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90b51aaf6383fab0d308a3ae238a45d7a50933b4/gcc%2Fada%2Fs-taasde.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90b51aaf6383fab0d308a3ae238a45d7a50933b4/gcc%2Fada%2Fs-taasde.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taasde.ads?ref=90b51aaf6383fab0d308a3ae238a45d7a50933b4", "patch": "@@ -81,7 +81,7 @@ package System.Tasking.Async_Delays is\n    --              abort_undefer.all;\n    --        end;\n    --     end if;\n-   --\n+\n    --     if Timed_Out (DB'Unchecked_Access) then\n    --        ...continuation for timeout case...\n    --     end if;\n@@ -108,9 +108,8 @@ package System.Tasking.Async_Delays is\n    pragma Inline (Timed_Out);\n    --  Return True if the delay specified in D has timed out\n \n-   --  There are child units for delays on Ada.Calendar.Time and\n-   --  Ada.Real_Time.Time, so that an application will not need to link in\n-   --  features that is not using.\n+   --  There are child units for delays on Ada.Calendar.Time/Ada.Real_Time.Time\n+   --  so that an application need not link in features that it is not using.\n \n private\n \n@@ -119,11 +118,10 @@ private\n       --  ID of the calling task\n \n       Level : ATC_Level_Base;\n-      --  Normally Level is the ATC nesting level of the\n-      --  async. select statement to which this delay belongs, but\n-      --  after a call has been dequeued we set it to\n-      --  ATC_Level_Infinity so that the Cancel operation can\n-      --  detect repeated calls, and act idempotently.\n+      --  Normally Level is the ATC nesting level of the asynchronous select\n+      --  statement to which this delay belongs, but after a call has been\n+      --  dequeued we set it to ATC_Level_Infinity so that the Cancel operation\n+      --  can detect repeated calls, and act idempotently.\n \n       Resume_Time : Duration;\n       --  The absolute wake up time, represented as Duration\n@@ -135,16 +133,15 @@ private\n       --  A double linked list\n    end record;\n \n-   --  The above \"overlaying\" of Self_ID and Level to hold other\n-   --  data that has a non-overlapping lifetime is an unabashed\n-   --  hack to save memory.\n+   --  The above \"overlaying\" of Self_ID and Level to hold other data that has\n+   --  a non-overlapping lifetime is an unabashed hack to save memory.\n \n    procedure Time_Enqueue\n      (T : Duration;\n       D : Delay_Block_Access);\n    pragma Inline (Time_Enqueue);\n-   --  Used by the child units to enqueue delays on the timer queue\n-   --  implemented in the body of this package. T denotes a point in time as\n-   --  the duration elapsed since the epoch of the Ada real-time clock.\n+   --  Used by the child units to enqueue delays on the timer queue implemented\n+   --  in the body of this package. T denotes a point in time as the duration\n+   --  elapsed since the epoch of the Ada real-time clock.\n \n end System.Tasking.Async_Delays;"}, {"sha": "99fbe1450b31948060db0872a0931b88a7f0eeed", "filename": "gcc/ada/s-tadeca.adb", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90b51aaf6383fab0d308a3ae238a45d7a50933b4/gcc%2Fada%2Fs-tadeca.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90b51aaf6383fab0d308a3ae238a45d7a50933b4/gcc%2Fada%2Fs-tadeca.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-tadeca.adb?ref=90b51aaf6383fab0d308a3ae238a45d7a50933b4", "patch": "@@ -30,15 +30,15 @@\n ------------------------------------------------------------------------------\n \n with Ada.Calendar.Delays;\n+\n with System.OS_Constants;\n with System.OS_Primitives;\n with System.Task_Primitives.Operations;\n with System.Tasking.Initialization;\n \n function System.Tasking.Async_Delays.Enqueue_Calendar\n-  (T    : Ada.Calendar.Time;\n-   D    : Delay_Block_Access)\n-   return Boolean\n+  (T : Ada.Calendar.Time;\n+   D : Delay_Block_Access) return Boolean\n is\n    use type Ada.Calendar.Time;\n \n@@ -55,12 +55,13 @@ begin\n    end if;\n \n    --  T is expressed as a duration elapsed since the UNIX epoch, whereas\n-   --  Time_Enque expects duraction elapsed since the epoch of the Ada\n-   --  real time clock: compensate if necessary.\n+   --  Time_Enque expects duraction elapsed since the epoch of the Ada real-\n+   --  time clock: compensate if necessary.\n \n-   pragma Warnings (Off);\n    --  Comparison \"SOSC.CLOCK_RT_Ada = SOSC.CLOCK_REALTIME\" is compile\n-   --  time known.\n+   --  time known, so turn warnings off.\n+\n+   pragma Warnings (Off);\n \n    if SOSC.CLOCK_RT_Ada /= SOSC.CLOCK_REALTIME then\n       pragma Warnings (On);"}, {"sha": "ac6a270c87eaf20e01f0bca67539abe85e77c1b2", "filename": "gcc/ada/s-tadeca.ads", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90b51aaf6383fab0d308a3ae238a45d7a50933b4/gcc%2Fada%2Fs-tadeca.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90b51aaf6383fab0d308a3ae238a45d7a50933b4/gcc%2Fada%2Fs-tadeca.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-tadeca.ads?ref=90b51aaf6383fab0d308a3ae238a45d7a50933b4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  S p e c                                 --\n --                                                                          --\n---          Copyright (C) 1998-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1998-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -36,6 +36,5 @@\n \n with Ada.Calendar;\n function System.Tasking.Async_Delays.Enqueue_Calendar\n-  (T    : Ada.Calendar.Time;\n-   D    : Delay_Block_Access)\n-   return Boolean;\n+  (T : Ada.Calendar.Time;\n+   D : Delay_Block_Access) return Boolean;"}, {"sha": "92979c7ab16bfdc21a67cfe79f93e30fd9dcce13", "filename": "gcc/ada/sem_cat.adb", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90b51aaf6383fab0d308a3ae238a45d7a50933b4/gcc%2Fada%2Fsem_cat.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90b51aaf6383fab0d308a3ae238a45d7a50933b4/gcc%2Fada%2Fsem_cat.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_cat.adb?ref=90b51aaf6383fab0d308a3ae238a45d7a50933b4", "patch": "@@ -1225,7 +1225,13 @@ package body Sem_Cat is\n                   --  means that a pragma Preelaborable_Initialization was\n                   --  given for the private type.\n \n-                  if Has_Preelaborable_Initialization (Ent) then\n+                  if Relaxed_RM_Semantics then\n+                     --  In relaxed mode, do not issue these messages, this\n+                     --  is basically similar to the GNAT_Mode test below.\n+\n+                     null;\n+\n+                  elsif Has_Preelaborable_Initialization (Ent) then\n \n                      --  But for the predefined units, we will ignore this\n                      --  status unless we are in Ada 2005 mode since we want"}, {"sha": "6861f1a00b0cc37227e85381ca41b1cd5085dafc", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 21, "deletions": 18, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90b51aaf6383fab0d308a3ae238a45d7a50933b4/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90b51aaf6383fab0d308a3ae238a45d7a50933b4/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=90b51aaf6383fab0d308a3ae238a45d7a50933b4", "patch": "@@ -2156,20 +2156,6 @@ package body Sem_Res is\n                --  First matching interpretation\n \n                if not Found then\n-                  --  If the current statement is part of a predefined library\n-                  --  unit, then all interpretations which come from user level\n-                  --  packages should not be considered. User-defined operators\n-                  --  may appear anywhere in the homonym list. This exclusion\n-                  --  does not apply in an instance, where an actual may come\n-                  --  from a local declaration.\n-\n-                  if From_Lib\n-                    and then not Comes_From_Predefined_Lib_Unit (It.Nam)\n-                    and then not In_Instance\n-                  then\n-                     goto Continue;\n-                  end if;\n-\n                   Found := True;\n                   I1    := I;\n                   Seen  := It.Nam;\n@@ -2181,12 +2167,29 @@ package body Sem_Res is\n                --  some more obscure cases are handled in Disambiguate.\n \n                else\n-                  if From_Lib\n-                    and then not Comes_From_Predefined_Lib_Unit (It.Nam)\n-                  then\n-                     goto Continue;\n+                  --  If the current statement is part of a predefined library\n+                  --  unit, then all interpretations which come from user level\n+                  --  packages should not be considered. Check previous and\n+                  --  current one.\n+\n+                  if From_Lib then\n+                     if not Comes_From_Predefined_Lib_Unit (It.Nam) then\n+                        goto Continue;\n+\n+                     elsif not Comes_From_Predefined_Lib_Unit (Seen) then\n+\n+                        --  Previous interpretation must be discarded.\n+\n+                        I1    := I;\n+                        Seen  := It.Nam;\n+                        Expr_Type := It.Typ;\n+                        Set_Entity (N, Seen);\n+                        goto Continue;\n+                     end if;\n                   end if;\n \n+                  --  Otherwise apply further disambiguation steps.\n+\n                   Error_Msg_Sloc := Sloc (Seen);\n                   It1 := Disambiguate (N, I1, I, Typ);\n "}]}