{"sha": "637a41a5d77d096f6a595c683490bee7f9943f5c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjM3YTQxYTVkNzdkMDk2ZjZhNTk1YzY4MzQ5MGJlZTdmOTk0M2Y1Yw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-01-21T16:29:08Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-01-21T16:29:08Z"}, "message": "[multiple changes]\n\n2014-01-21  Robert Dewar  <dewar@adacore.com>\n\n\t* checks.adb, sem_util.ads, sem_ch4.adb: Minor reformatting.\n\n2014-01-21  Pascal Obry  <obry@adacore.com>\n\n\t* projects.texi: Minor typo fix.\n\n2014-01-21  Thomas Quinot  <quinot@adacore.com>\n\n\t* freeze.adb (Check_Component_Storage_Order): If a record type\n\thas an explicit Scalar_Storage_Order attribute definition clause,\n\treject any component that itself is of a composite type and does\n\tnot have one.\n\n2014-01-21  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch10.adb (Generate_Parent_Reference): Make public so it\n\tcan be used to generate proper cross-reference information for\n\tthe parent units of proper bodies.\n\n2014-01-21  Thomas Quinot  <quinot@adacore.com>\n\n\t* gcc-interface/decl.c (gnat_to_gnu_entity): For a modular\n\ttype that represents a bit packed array type, propagate the\n\treverse storage order flag to the generated wrapper record.\n\t* exp_pakd.adb (Expand_Packed_Element_Set,\n\tExpand_Packed_Element_Reference): No byte swapping required in\n\tthe front-end for the case of a reverse storage order array,\n\tas this is now handled uniformly in the back-end.  However we\n\tstill need to swap back an extracted element if it is itself a\n\tnested composite with reverse storage order.\n\nFrom-SVN: r206890", "tree": {"sha": "876a2997959545a583ccfb8d934c6ad25b24349e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/876a2997959545a583ccfb8d934c6ad25b24349e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/637a41a5d77d096f6a595c683490bee7f9943f5c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/637a41a5d77d096f6a595c683490bee7f9943f5c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/637a41a5d77d096f6a595c683490bee7f9943f5c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/637a41a5d77d096f6a595c683490bee7f9943f5c/comments", "author": null, "committer": null, "parents": [{"sha": "497716fecf8c610d672576c71ca435e804f04f4a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/497716fecf8c610d672576c71ca435e804f04f4a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/497716fecf8c610d672576c71ca435e804f04f4a"}], "stats": {"total": 423, "additions": 202, "deletions": 221}, "files": [{"sha": "d33381a4629411653b40bf6a8e3ce0e38413f0de", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/637a41a5d77d096f6a595c683490bee7f9943f5c/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/637a41a5d77d096f6a595c683490bee7f9943f5c/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=637a41a5d77d096f6a595c683490bee7f9943f5c", "patch": "@@ -1,3 +1,34 @@\n+2014-01-21  Robert Dewar  <dewar@adacore.com>\n+\n+\t* checks.adb, sem_util.ads, sem_ch4.adb: Minor reformatting.\n+\t* gcc-interface/Makefile.in: clean up target pairs.\n+\n+2014-01-21  Pascal Obry  <obry@adacore.com>\n+\n+\t* projects.texi: Minor typo fix.\n+\n+2014-01-21  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* freeze.adb (Check_Component_Storage_Order): If a record type\n+\thas an explicit Scalar_Storage_Order attribute definition clause,\n+\treject any component that itself is of a composite type and does\n+\tnot have one.\n+\n+2014-01-21  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch10.adb (Generate_Parent_Reference): Make public so it\n+\tcan be used to generate proper cross-reference information for\n+\tthe parent units of proper bodies.\n+\n+2014-01-21  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* exp_pakd.adb (Expand_Packed_Element_Set,\n+\tExpand_Packed_Element_Reference): No byte swapping required in\n+\tthe front-end for the case of a reverse storage order array,\n+\tas this is now handled uniformly in the back-end.  However we\n+\tstill need to swap back an extracted element if it is itself a\n+\tnested composite with reverse storage order.\n+\n 2014-01-21  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* sem_prag.adb (Analyze_External_Property): Add processing for \"others\"."}, {"sha": "ff015cc5c08430477a2cea8e917f2d0e9e6aedc1", "filename": "gcc/ada/checks.adb", "status": "modified", "additions": 53, "deletions": 69, "changes": 122, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/637a41a5d77d096f6a595c683490bee7f9943f5c/gcc%2Fada%2Fchecks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/637a41a5d77d096f6a595c683490bee7f9943f5c/gcc%2Fada%2Fchecks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fchecks.adb?ref=637a41a5d77d096f6a595c683490bee7f9943f5c", "patch": "@@ -86,6 +86,9 @@ package body Checks is\n    --  the ability to emit constraint error warning for static expressions\n    --  even when we are not generating code.\n \n+   --  The above is modified in gnatprove mode to ensure that proper check\n+   --  flags are always placed, even if expansion is off.\n+\n    -------------------------------------\n    -- Suppression of Redundant Checks --\n    -------------------------------------\n@@ -3540,17 +3543,16 @@ package body Checks is\n          else\n             Dref :=\n               Make_Selected_Component (Loc,\n-                Prefix =>\n+                Prefix        =>\n                   Duplicate_Subexpr_No_Checks (N, Name_Req => True),\n-                Selector_Name =>\n-                  Make_Identifier (Loc, Chars (Disc_Ent)));\n+                Selector_Name => Make_Identifier (Loc, Chars (Disc_Ent)));\n \n             Set_Is_In_Discriminant_Check (Dref);\n          end if;\n \n          Evolve_Or_Else (Cond,\n            Make_Op_Ne (Loc,\n-             Left_Opnd => Dref,\n+             Left_Opnd  => Dref,\n              Right_Opnd => Dval));\n \n          Next_Elmt (Disc);\n@@ -3584,10 +3586,9 @@ package body Checks is\n       function Left_Expression (Op : Node_Id) return Node_Id is\n          LE : Node_Id := Left_Opnd (Op);\n       begin\n-         while Nkind_In (LE,\n-                 N_Qualified_Expression,\n-                 N_Type_Conversion,\n-                 N_Expression_With_Actions)\n+         while Nkind_In (LE, N_Qualified_Expression,\n+                             N_Type_Conversion,\n+                             N_Expression_With_Actions)\n          loop\n             LE := Expression (LE);\n          end loop;\n@@ -3650,7 +3651,7 @@ package body Checks is\n             exit when (N = Right_Opnd (P)\n                         or else\n                           (Is_List_Member (N)\n-                             and then List_Containing (N) = Actions (P)))\n+                            and then List_Containing (N) = Actions (P)))\n               and then Nkind (Left_Expression (P)) = N_Op_Ne;\n          end if;\n \n@@ -3669,9 +3670,7 @@ package body Checks is\n \n       --  Left operand of test must match original variable\n \n-      if Nkind (L) not in N_Has_Entity\n-        or else Entity (L) /= Entity (Nod)\n-      then\n+      if Nkind (L) not in N_Has_Entity or else Entity (L) /= Entity (Nod) then\n          return True;\n       end if;\n \n@@ -3961,6 +3960,7 @@ package body Checks is\n \n       else\n          Num_Saved_Checks := Saved_Checks_Stack (Saved_Checks_TOS);\n+\n          if Debug_Flag_CC then\n             w (\"Conditional_Statements_End: Num_Saved_Checks = \",\n                Num_Saved_Checks);\n@@ -4287,7 +4287,6 @@ package body Checks is\n                then\n                   Lor := Lo_Left / Lo_Right;\n                   Hir := Hi_Left / Lo_Right;\n-\n                else\n                   OK1 := False;\n                end if;\n@@ -4782,8 +4781,8 @@ package body Checks is\n       end if;\n \n    --  If we get an exception, then something went wrong, probably because of\n-   --  an error in the structure of the tree due to an incorrect program. Or it\n-   --  may be a bug in the optimization circuit. In either case the safest\n+   --  an error in the structure of the tree due to an incorrect program. Or\n+   --  it may be a bug in the optimization circuit. In either case the safest\n    --  thing is simply to set the check flag unconditionally.\n \n    exception\n@@ -4832,17 +4831,15 @@ package body Checks is\n \n       --  No check if range checks suppressed for type of node\n \n-      if Present (Etype (N))\n-        and then Range_Checks_Suppressed (Etype (N))\n-      then\n+      if Present (Etype (N)) and then Range_Checks_Suppressed (Etype (N)) then\n          return;\n \n       --  No check if node is an entity name, and range checks are suppressed\n       --  for this entity, or for the type of this entity.\n \n       elsif Is_Entity_Name (N)\n         and then (Range_Checks_Suppressed (Entity (N))\n-                    or else Range_Checks_Suppressed (Etype (Entity (N))))\n+                   or else Range_Checks_Suppressed (Etype (Entity (N))))\n       then\n          return;\n \n@@ -5180,9 +5177,8 @@ package body Checks is\n                   --  formal is not OUT). This test also filters out the\n                   --  generic case.\n \n-                  if Is_Non_Empty_List (L)\n-                    and then Is_Subprogram (E)\n-                  then\n+                  if Is_Non_Empty_List (L) and then Is_Subprogram (E) then\n+\n                      --  This is the loop through parameters, looking for an\n                      --  OUT parameter for which we are the argument.\n \n@@ -5294,26 +5290,18 @@ package body Checks is\n       --  Integer and character literals always have valid values, where\n       --  appropriate these will be range checked in any case.\n \n-      elsif Nkind (Expr) = N_Integer_Literal\n-              or else\n-            Nkind (Expr) = N_Character_Literal\n-      then\n+      elsif Nkind_In (Expr, N_Integer_Literal, N_Character_Literal) then\n          return True;\n \n       --  Real literals are assumed to be valid in VM targets\n \n-      elsif VM_Target /= No_VM\n-        and then Nkind (Expr) = N_Real_Literal\n-      then\n+      elsif VM_Target /= No_VM and then Nkind (Expr) = N_Real_Literal then\n          return True;\n \n       --  If we have a type conversion or a qualification of a known valid\n       --  value, then the result will always be valid.\n \n-      elsif Nkind (Expr) = N_Type_Conversion\n-              or else\n-            Nkind (Expr) = N_Qualified_Expression\n-      then\n+      elsif Nkind_In (Expr, N_Type_Conversion, N_Qualified_Expression) then\n          return Expr_Known_Valid (Expression (Expr));\n \n       --  The result of any operator is always considered valid, since we\n@@ -5324,10 +5312,9 @@ package body Checks is\n       elsif Nkind (Expr) in N_Op then\n          if Is_Floating_Point_Type (Typ)\n             and then Validity_Check_Floating_Point\n-            and then\n-              (Nkind (Parent (Expr)) = N_Assignment_Statement\n-                or else Nkind (Parent (Expr)) = N_Function_Call\n-                or else Nkind (Parent (Expr)) = N_Parameter_Association)\n+            and then (Nkind_In (Parent (Expr), N_Assignment_Statement,\n+                                               N_Function_Call,\n+                                               N_Parameter_Association))\n          then\n             return False;\n          else\n@@ -5468,7 +5455,6 @@ package body Checks is\n       for J in reverse 1 .. Num_Saved_Checks loop\n          declare\n             SC : Saved_Check renames Saved_Checks (J);\n-\n          begin\n             if SC.Killed = False\n               and then SC.Entity = Ent\n@@ -5532,18 +5518,18 @@ package body Checks is\n \n       --  Force evaluation of the prefix, so that it does not get evaluated\n       --  twice (once for the check, once for the actual reference). Such a\n-      --  double evaluation is always a potential source of inefficiency,\n-      --  and is functionally incorrect in the volatile case, or when the\n-      --  prefix may have side-effects. An entity or a component of an\n-      --  entity requires no evaluation.\n+      --  double evaluation is always a potential source of inefficiency, and\n+      --  is functionally incorrect in the volatile case, or when the prefix\n+      --  may have side-effects. A non-volatile entity or a component of a\n+      --  non-volatile entity requires no evaluation.\n \n       if Is_Entity_Name (Pref) then\n          if Treat_As_Volatile (Entity (Pref)) then\n             Force_Evaluation (Pref, Name_Req => True);\n          end if;\n \n       elsif Treat_As_Volatile (Etype (Pref)) then\n-            Force_Evaluation (Pref, Name_Req => True);\n+         Force_Evaluation (Pref, Name_Req => True);\n \n       elsif Nkind (Pref) = N_Selected_Component\n         and then Is_Entity_Name (Prefix (Pref))\n@@ -5629,7 +5615,7 @@ package body Checks is\n         Make_Raise_Constraint_Error (Loc,\n           Condition =>\n             Make_Function_Call (Loc,\n-              Name => New_Occurrence_Of (Discr_Fct, Loc),\n+              Name                   => New_Occurrence_Of (Discr_Fct, Loc),\n               Parameter_Associations => Args),\n           Reason => CE_Discriminant_Check_Failed));\n    end Generate_Discriminant_Check;\n@@ -5680,8 +5666,7 @@ package body Checks is\n       --  for array object or type.\n \n       if not Is_Array_Type (Etype (A))\n-        or else (Present (A_Ent)\n-                  and then Index_Checks_Suppressed (A_Ent))\n+        or else (Present (A_Ent) and then Index_Checks_Suppressed (A_Ent))\n         or else Index_Checks_Suppressed (Etype (A))\n       then\n          return;\n@@ -6088,7 +6073,7 @@ package body Checks is\n \n          else\n             pragma Assert (not Is_Unsigned_Type (Source_Base_Type)\n-                             and then Is_Unsigned_Type (Target_Base_Type));\n+                            and then Is_Unsigned_Type (Target_Base_Type));\n \n             --  If the source is signed and the target is unsigned, then we\n             --  know that the target is not shorter than the source (otherwise\n@@ -6141,7 +6126,7 @@ package body Checks is\n                            Right_Opnd =>\n                              New_Occurrence_Of (Target_Type, Loc))),\n \n-                   Reason => Reason)),\n+                   Reason     => Reason)),\n                  Suppress => All_Checks);\n \n                --  Set the Etype explicitly, because Insert_Actions may have\n@@ -6205,7 +6190,6 @@ package body Checks is\n       while Present (Sc) loop\n          if Sc = Standard_Standard then\n             return Bound;\n-\n          elsif Ekind (Sc) = E_Protected_Type then\n             exit;\n          end if;\n@@ -6236,8 +6220,8 @@ package body Checks is\n       Warn_Node  : Node_Id   := Empty) return Check_Result\n    is\n    begin\n-      return Selected_Range_Checks\n-        (Ck_Node, Target_Typ, Source_Typ, Warn_Node);\n+      return\n+        Selected_Range_Checks (Ck_Node, Target_Typ, Source_Typ, Warn_Node);\n    end Get_Range_Checks;\n \n    ------------------\n@@ -6256,6 +6240,7 @@ package body Checks is\n \n       if Nkind (Ck_Node) = N_Allocator then\n          return Cond;\n+\n       else\n          return\n            Make_And_Then (Loc,\n@@ -6475,7 +6460,7 @@ package body Checks is\n \n          if Is_Entity_Name (Exp)\n            and then Nkind (Parent (Entity (Exp))) =\n-                      N_Object_Renaming_Declaration\n+                                                 N_Object_Renaming_Declaration\n          then\n             declare\n                Old_Exp : constant Node_Id := Name (Parent (Entity (Exp)));\n@@ -6602,19 +6587,18 @@ package body Checks is\n                   return False;\n                end if;\n \n-               --  If we are in a case expression, and not part of the\n-               --  expression, then we return False, since a particular\n-               --  dependent expression may not always be elaborated\n+               --  If within a case expression, and not part of the expression,\n+               --  then return False, since a particular dependent expression\n+               --  may not always be elaborated\n \n                if Nkind (P) = N_Case_Expression\n                  and then N /= Expression (P)\n                then\n                   return False;\n                end if;\n \n-               --  While traversing the parent chain, we find that N\n-               --  belongs to a statement, thus it may never appear in\n-               --  a declarative region.\n+               --  While traversing the parent chain, if node N belongs to a\n+               --  statement, then it may never appear in a declarative region.\n \n                if Nkind (P) in N_Statement_Other_Than_Procedure_Call\n                  or else Nkind (P) = N_Procedure_Call_Statement\n@@ -6696,9 +6680,11 @@ package body Checks is\n \n       if Known_Null (N) then\n \n-         --  Avoid generating warning message inside init procs\n+         --  Avoid generating warning message inside init procs. In SPARK mode\n+         --  we can go ahead and call Apply_Compile_Time_Constraint_Error\n+         --  since it will be truned into an error in any case.\n \n-         if not Inside_Init_Proc then\n+         if not Inside_Init_Proc or else SPARK_Mode = On then\n             Apply_Compile_Time_Constraint_Error\n               (N, \"null value not allowed here??\", CE_Access_Check_Failed);\n          else\n@@ -7163,7 +7149,7 @@ package body Checks is\n          end if;\n \n          --  If we don't have a binary operator, all we have to do is to set\n-         --  the Hi/Lo range, so we are done\n+         --  the Hi/Lo range, so we are done.\n \n          return;\n \n@@ -7329,7 +7315,7 @@ package body Checks is\n \n       --  If we have an arithmetic operator we make recursive calls on the\n       --  operands to get the ranges (and to properly process the subtree\n-      --  that lies below us!)\n+      --  that lies below us).\n \n       Minimize_Eliminate_Overflows\n         (Right_Opnd (N), Rlo, Rhi, Top_Level => False);\n@@ -8134,7 +8120,8 @@ package body Checks is\n       begin\n          if Present (N) then\n \n-            --  For now, ignore attempt to place more than 2 checks ???\n+            --  For now, ignore attempt to place more than two checks ???\n+            --  This is really worrisome, are we really discarding checks ???\n \n             if Num_Checks = 2 then\n                return;\n@@ -9003,7 +8990,6 @@ package body Checks is\n                then\n                   HB := T_HB;\n                   Known_HB := True;\n-\n                else\n                   Known_HB := False;\n                end if;\n@@ -9158,9 +9144,7 @@ package body Checks is\n          --  and replace the literal with a raise constraint error\n          --  expression. As usual, skip this for access types\n \n-         elsif Compile_Time_Known_Value (Ck_Node)\n-           and then not Do_Access\n-         then\n+         elsif Compile_Time_Known_Value (Ck_Node) and then not Do_Access then\n             declare\n                LB : constant Node_Id := Type_Low_Bound (T_Typ);\n                UB : constant Node_Id := Type_High_Bound (T_Typ);\n@@ -9442,9 +9426,9 @@ package body Checks is\n         and then Checks_May_Be_Suppressed (E)\n       then\n          return Is_Check_Suppressed (E, Tag_Check);\n+      else\n+         return Scope_Suppress.Suppress (Tag_Check);\n       end if;\n-\n-      return Scope_Suppress.Suppress (Tag_Check);\n    end Tag_Checks_Suppressed;\n \n    --------------------------"}, {"sha": "19264cb9ec48fb923901a679e55d759dbbb2eb92", "filename": "gcc/ada/exp_pakd.adb", "status": "modified", "additions": 10, "deletions": 67, "changes": 77, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/637a41a5d77d096f6a595c683490bee7f9943f5c/gcc%2Fada%2Fexp_pakd.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/637a41a5d77d096f6a595c683490bee7f9943f5c/gcc%2Fada%2Fexp_pakd.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_pakd.adb?ref=637a41a5d77d096f6a595c683490bee7f9943f5c", "patch": "@@ -1378,12 +1378,6 @@ package body Exp_Pakd is\n       --  contains the value. Otherwise Rhs_Val_Known is set False, and\n       --  the Rhs_Val is undefined.\n \n-      Require_Byte_Swapping : Boolean := False;\n-      --  True if byte swapping required, for the Reverse_Storage_Order case\n-      --  when the packed array is a free-standing object. (If it is part\n-      --  of a composite type, and therefore potentially not aligned on a byte\n-      --  boundary, the swapping is done by the back-end).\n-\n       function Get_Shift return Node_Id;\n       --  Function used to get the value of Shift, making sure that it\n       --  gets duplicated if the function is called more than once.\n@@ -1562,25 +1556,8 @@ package body Exp_Pakd is\n          --  array type on Obj to get lost. So we save the type of Obj, and\n          --  make sure it is reset properly.\n \n-         declare\n-            T : constant Entity_Id := Etype (Obj);\n-         begin\n-            New_Lhs := Duplicate_Subexpr (Obj, Name_Req => True);\n-            New_Rhs := Duplicate_Subexpr_No_Checks (Obj);\n-            Set_Etype (Obj, T);\n-            Set_Etype (New_Lhs, T);\n-            Set_Etype (New_Rhs, T);\n-\n-            if Reverse_Storage_Order (Base_Type (Atyp))\n-              and then Esize (T) > 8\n-              and then not In_Reverse_Storage_Order_Object (Obj)\n-            then\n-               Require_Byte_Swapping := True;\n-               New_Rhs := Byte_Swap (New_Rhs,\n-                            Left_Justify  => Bytes_Big_Endian,\n-                            Right_Justify => not Bytes_Big_Endian);\n-            end if;\n-         end;\n+         New_Lhs := Duplicate_Subexpr (Obj, Name_Req => True);\n+         New_Rhs := Duplicate_Subexpr_No_Checks (Obj);\n \n          --  First we deal with the \"and\"\n \n@@ -1703,29 +1680,13 @@ package body Exp_Pakd is\n                   Set_Etype (New_Rhs, Etype (Left_Opnd (New_Rhs)));\n                end if;\n \n-               --  If New_Rhs has been byte swapped, need to convert Or_Rhs\n-               --  to the return type of the byte swapping function now.\n-\n-               if Require_Byte_Swapping then\n-                  Or_Rhs := Unchecked_Convert_To (Etype (New_Rhs), Or_Rhs);\n-               end if;\n-\n                New_Rhs :=\n                  Make_Op_Or (Loc,\n                    Left_Opnd  => New_Rhs,\n                    Right_Opnd => Or_Rhs);\n             end;\n          end if;\n \n-         if Require_Byte_Swapping then\n-            Set_Etype (New_Rhs, Etype (Obj));\n-            New_Rhs :=\n-              Unchecked_Convert_To (Etype (Obj),\n-                Byte_Swap (New_Rhs,\n-                             Left_Justify  => not Bytes_Big_Endian,\n-                             Right_Justify => Bytes_Big_Endian));\n-         end if;\n-\n          --  Now do the rewrite\n \n          Rewrite (N,\n@@ -2043,11 +2004,6 @@ package body Exp_Pakd is\n       Lit   : Node_Id;\n       Arg   : Node_Id;\n \n-      Byte_Swapped : Boolean;\n-      --  Set true if bytes were swapped for the purpose of extracting the\n-      --  element, in which case we must swap back if the component type is\n-      --  a composite type with reverse scalar storage order.\n-\n    begin\n       --  If the node is an actual in a call, the prefix has not been fully\n       --  expanded, to account for the additional expansion for in-out actuals\n@@ -2106,23 +2062,6 @@ package body Exp_Pakd is\n          Lit := Make_Integer_Literal (Loc, Cmask);\n          Set_Print_In_Hex (Lit);\n \n-         --  Byte swapping required for the Reverse_Storage_Order case, but\n-         --  only for a free-standing object (see note on Require_Byte_Swapping\n-         --  in Expand_Bit_Packed_Element_Set).\n-\n-         if Reverse_Storage_Order (Atyp)\n-           and then Esize (Atyp) > 8\n-           and then not In_Reverse_Storage_Order_Object (Obj)\n-         then\n-            Obj := Byte_Swap (Obj,\n-                     Left_Justify  => Bytes_Big_Endian,\n-                     Right_Justify => not Bytes_Big_Endian);\n-            Byte_Swapped := True;\n-\n-         else\n-            Byte_Swapped := False;\n-         end if;\n-\n          --  We generate a shift right to position the field, followed by a\n          --  masking operation to extract the bit field, and we finally do an\n          --  unchecked conversion to convert the result to the required target.\n@@ -2137,12 +2076,16 @@ package body Exp_Pakd is\n            Make_Op_And (Loc,\n              Left_Opnd  => Make_Shift_Right (Obj, Shift),\n              Right_Opnd => Lit);\n-\n-         --  Swap back if necessary\n-\n          Set_Etype (Arg, Ctyp);\n \n-         if Byte_Swapped\n+         --  Component extraction is performed on a native endianness scalar\n+         --  value: if Atyp has reverse storage order, then it has been byte\n+         --  swapped, and if the component being extracted is itself of a\n+         --  composite type with reverse storage order, then we need to swap\n+         --  it back to its expected endianness after extraction.\n+\n+         if Reverse_Storage_Order (Atyp)\n+           and then Esize (Atyp) > 8\n            and then (Is_Record_Type (Ctyp) or else Is_Array_Type (Ctyp))\n            and then Reverse_Storage_Order (Ctyp)\n          then"}, {"sha": "6885625c67a11311d92b9d458912b222f3741934", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 31, "deletions": 13, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/637a41a5d77d096f6a595c683490bee7f9943f5c/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/637a41a5d77d096f6a595c683490bee7f9943f5c/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=637a41a5d77d096f6a595c683490bee7f9943f5c", "patch": "@@ -1083,6 +1083,10 @@ package body Freeze is\n       --  Set True for the record case, when Comp starts on a byte boundary\n       --  (in which case it is allowed to have different storage order).\n \n+      Comp_SSO_Differs  : Boolean;\n+      --  Set True when the component is a nested composite, and it does not\n+      --  have the same scalar storage order as Encl_Type.\n+\n       Component_Aliased : Boolean;\n \n    begin\n@@ -1136,28 +1140,42 @@ package body Freeze is\n       --  attribute on Comp_Type if composite.\n \n       elsif Is_Record_Type (Comp_Type) or else Is_Array_Type (Comp_Type) then\n+         Comp_SSO_Differs :=\n+           Reverse_Storage_Order (Encl_Type)\n+             /=\n+           Reverse_Storage_Order (Comp_Type);\n+\n          if Present (Comp) and then Chars (Comp) = Name_uParent then\n-            if Reverse_Storage_Order (Encl_Type)\n-                 /=\n-               Reverse_Storage_Order (Comp_Type)\n-            then\n+            if Comp_SSO_Differs then\n                Error_Msg_N\n                  (\"record extension must have same scalar storage order as \"\n                   & \"parent\", Err_Node);\n             end if;\n \n-         elsif No (ADC) then\n+         elsif No (Comp_ADC) then\n             Error_Msg_N (\"nested composite must have explicit scalar \"\n                          & \"storage order\", Err_Node);\n \n-         elsif (Reverse_Storage_Order (Encl_Type)\n-                  /=\n-                Reverse_Storage_Order (Comp_Type))\n-           and then not Comp_Byte_Aligned\n-         then\n-            Error_Msg_N\n-              (\"type of non-byte-aligned component must have same scalar \"\n-               & \"storage order as enclosing composite\", Err_Node);\n+         elsif Comp_SSO_Differs then\n+\n+            --  Component SSO differs from enclosing composite:\n+\n+            --  Reject if component is a packed array, as it may be represented\n+            --  as a scalar internally.\n+\n+            if Is_Packed (Comp_Type) then\n+               Error_Msg_N\n+                 (\"type of packed component must have same scalar \"\n+                  & \"storage order as enclosing composite\", Err_Node);\n+\n+            --  Reject if not byte aligned\n+\n+            elsif not Comp_Byte_Aligned then\n+               Error_Msg_N\n+                 (\"type of non-byte-aligned component must have same scalar \"\n+                  & \"storage order as enclosing composite\", Err_Node);\n+\n+            end if;\n          end if;\n \n       --  Enclosing type has explicit SSO, non-composite component must not"}, {"sha": "7751971e0dce17943a596246d69eade5951727fc", "filename": "gcc/ada/gcc-interface/Makefile.in", "status": "modified", "additions": 13, "deletions": 15, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/637a41a5d77d096f6a595c683490bee7f9943f5c/gcc%2Fada%2Fgcc-interface%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/637a41a5d77d096f6a595c683490bee7f9943f5c/gcc%2Fada%2Fgcc-interface%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2FMakefile.in?ref=637a41a5d77d096f6a595c683490bee7f9943f5c", "patch": "@@ -562,8 +562,6 @@ ifeq ($(strip $(filter-out powerpc% wrs vxworks,$(target_cpu) $(target_vendor) $\n     s-vxwext.adb<s-vxwext-rtp.adb \\\n     s-tpopsp.adb<s-tpopsp-vxworks-rtp.adb \\\n     system.ads<system-vxworks-$(ARCH_STR)-rtp.ads\n-\n-    EXTRA_GNATRTL_NONTASKING_OBJS=s-vxwexc.o\n   else\n     ifeq ($(strip $(filter-out rtp-smp,$(THREAD_KIND))),)\n       LIBGNAT_TARGET_PAIRS += \\\n@@ -573,7 +571,6 @@ ifeq ($(strip $(filter-out powerpc% wrs vxworks,$(target_cpu) $(target_vendor) $\n       s-tpopsp.adb<s-tpopsp-vxworks-tls.adb \\\n       system.ads<system-vxworks-$(ARCH_STR)-rtp.ads\n \n-      EXTRA_GNATRTL_NONTASKING_OBJS=s-vxwexc.o\n       EXTRA_LIBGNAT_OBJS+=affinity.o\n     else\n       ifeq ($(strip $(filter-out kernel-smp,$(THREAD_KIND))),)\n@@ -603,7 +600,7 @@ ifeq ($(strip $(filter-out powerpc% wrs vxworks,$(target_cpu) $(target_vendor) $\n           system.ads<system-vxworks-ppc.ads\n         endif\n       endif\n-      EXTRA_GNATRTL_NONTASKING_OBJS=i-vxwork.o i-vxwoio.o s-vxwexc.o\n+      EXTRA_GNATRTL_NONTASKING_OBJS=i-vxwork.o i-vxwoio.o\n       EXTRA_LIBGNAT_OBJS+=sigtramp-ppcvxw.o\n     endif\n   endif\n@@ -650,7 +647,7 @@ ifeq ($(strip $(filter-out powerpc% wrs vxworksae,$(target_cpu) $(target_vendor)\n   mlib-tgt-specific.adb<mlib-tgt-specific-vxworks.adb \\\n   indepsw.adb<indepsw-gnu.adb\n \n-  EXTRA_GNATRTL_NONTASKING_OBJS=i-vxwork.o i-vxwoio.o s-vxwexc.o\n+  EXTRA_GNATRTL_NONTASKING_OBJS=i-vxwork.o i-vxwoio.o\n   EXTRA_GNATRTL_TASKING_OBJS=s-vxwork.o s-vxwext.o\n \n   EXTRA_LIBGNAT_OBJS+=sigtramp-ppcvxw.o\n@@ -714,7 +711,7 @@ ifeq ($(strip $(filter-out powerpc% wrs vxworksmils,$(target_cpu) $(target_vendo\n   mlib-tgt-specific.adb<mlib-tgt-specific-vxworks.adb \\\n   indepsw.adb<indepsw-gnu.adb\n \n-  EXTRA_GNATRTL_NONTASKING_OBJS=i-vxwork.o i-vxwoio.o s-thread.o s-vxwexc.o\n+  EXTRA_GNATRTL_NONTASKING_OBJS=i-vxwork.o i-vxwoio.o s-thread.o\n   EXTRA_GNATRTL_TASKING_OBJS=s-vxwork.o s-vxwext.o\n \n   EXTRA_LIBGNAT_OBJS+=vx_stack_info.o sigtramp-ppcvxw.o\n@@ -736,8 +733,7 @@ ifeq ($(strip $(filter-out %86 wrs vxworksae vxworksmils,$(target_cpu) $(target_\n   LIBGNAT_TARGET_PAIRS = \\\n   a-elchha.adb<a-elchha-vxworks-ppc-full.adb \\\n   a-intnam.ads<a-intnam-vxworks.ads \\\n-  a-sytaco.ads<1asytaco.ads \\\n-  a-sytaco.adb<1asytaco.adb \\\n+  a-numaux.ads<a-numaux-vxworks.ads \\\n   g-io.adb<g-io-vxworks-ppc-cert.adb \\\n   s-inmaop.adb<s-inmaop-vxworks.adb \\\n   s-interr.adb<s-interr-hwint.adb \\\n@@ -747,24 +743,28 @@ ifeq ($(strip $(filter-out %86 wrs vxworksae vxworksmils,$(target_cpu) $(target_\n   s-osinte.ads<s-osinte-vxworks.ads \\\n   s-osprim.adb<s-osprim-vxworks.adb \\\n   s-parame.ads<s-parame-ae653.ads \\\n+  s-parame.adb<s-parame-vxworks.adb \\\n   s-taprop.adb<s-taprop-vxworks.adb \\\n   s-tasinf.ads<s-tasinf-vxworks.ads \\\n   s-taspri.ads<s-taspri-vxworks.ads \\\n   s-tpopsp.adb<s-tpopsp-vxworks.adb \\\n   s-vxwext.adb<s-vxwext-noints.adb \\\n   s-vxwext.ads<s-vxwext-vthreads.ads \\\n   s-vxwork.ads<s-vxwork-x86.ads \\\n+  system.ads<system-vxworks-x86.ads \\\n   $(ATOMICS_TARGET_PAIRS) \\\n-  $(X86_TARGET_PAIRS) \\\n-  system.ads<system-vxworks-x86.ads\n+  $(ATOMICS_BUILTINS_TARGET_PAIRS)\n \n   TOOLS_TARGET_PAIRS=\\\n   mlib-tgt-specific.adb<mlib-tgt-specific-vxworks.adb \\\n   indepsw.adb<indepsw-gnu.adb\n \n-  EXTRA_GNATRTL_NONTASKING_OBJS=i-vxwork.o i-vxwoio.o s-vxwexc.o\n+  EXTRA_GNATRTL_NONTASKING_OBJS=i-vxwork.o i-vxwoio.o s-thread.o\n   EXTRA_GNATRTL_TASKING_OBJS=s-vxwork.o s-vxwext.o\n \n+  EXTRA_LIBGNAT_OBJS+=vx_stack_info.o # sigtramp-ppcvxw.o\n+  GNATRTL_SOCKETS_OBJS =\n+\n   # Extra pairs for the vthreads runtime\n   ifeq ($(strip $(filter-out vthreads,$(THREAD_KIND))),)\n     LIBGNAT_TARGET_PAIRS += \\\n@@ -887,7 +887,6 @@ ifeq ($(strip $(filter-out %86 wrs vxworks,$(target_cpu) $(target_vendor) $(targ\n     s-tpopsp.adb<s-tpopsp-vxworks-rtp.adb \\\n     system.ads<system-vxworks-x86-rtp.ads\n \n-    EXTRA_GNATRTL_NONTASKING_OBJS=s-vxwexc.o\n   else\n     ifeq ($(strip $(filter-out rtp-smp, $(THREAD_KIND))),)\n       LIBGNAT_TARGET_PAIRS += \\\n@@ -897,7 +896,6 @@ ifeq ($(strip $(filter-out %86 wrs vxworks,$(target_cpu) $(target_vendor) $(targ\n       s-tpopsp.adb<s-tpopsp-vxworks-tls.adb \\\n       system.ads<system-vxworks-x86-rtp.ads\n \n-      EXTRA_GNATRTL_NONTASKING_OBJS=s-vxwexc.o\n       EXTRA_LIBGNAT_OBJS+=affinity.o\n     else\n       ifeq ($(strip $(filter-out kernel-smp, $(THREAD_KIND))),)\n@@ -925,7 +923,7 @@ ifeq ($(strip $(filter-out %86 wrs vxworks,$(target_cpu) $(target_vendor) $(targ\n         endif\n       endif\n \n-      EXTRA_GNATRTL_NONTASKING_OBJS=i-vxwork.o i-vxwoio.o s-vxwexc.o\n+      EXTRA_GNATRTL_NONTASKING_OBJS=i-vxwork.o i-vxwoio.o\n     endif\n   endif\n   EXTRA_GNATRTL_TASKING_OBJS += s-vxwork.o s-vxwext.o\n@@ -2421,7 +2419,7 @@ ADA_EXCLUDE_SRCS =\\\n   s-po32gl.adb s-po32gl.ads \\\n   s-stache.adb s-stache.ads \\\n   s-thread.ads \\\n-  s-vxwexc.adb s-vxwexc.ads s-vxwext.adb s-vxwext.ads \\\n+  s-vxwext.adb s-vxwext.ads \\\n   s-win32.ads  s-winext.ads \\\n   g-regist.adb g-regist.ads g-sse.ads    g-ssvety.ads \\\n   i-vxwoio.adb i-vxwoio.ads i-vxwork.ads \\"}, {"sha": "8253477fce4f633f5926efba1351393dd10b65c6", "filename": "gcc/ada/projects.texi", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/637a41a5d77d096f6a595c683490bee7f9943f5c/gcc%2Fada%2Fprojects.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/637a41a5d77d096f6a595c683490bee7f9943f5c/gcc%2Fada%2Fprojects.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprojects.texi?ref=637a41a5d77d096f6a595c683490bee7f9943f5c", "patch": "@@ -3171,8 +3171,8 @@ The following packages are currently supported in project files\n   @b{Default_Switches} and @b{^Switches^Switches^} have the same semantics as for the\n   package @code{Builder}.\n @item ^Gnatls^Gnatls^\n-  This package the options to use when invoking @command{gnatls} via the\n-  @command{gnat} driver.\n+  This package specifies the options to use when invoking @command{gnatls}\n+  via the @command{gnat} driver.\n @item ^Gnatstub^Gnatstub^\n   This package specifies the options used when calling the tool\n   @command{gnatstub} via the @command{gnat} driver. Its attributes"}, {"sha": "257de8ee414501aaa13ae98156d2298a1e4d119c", "filename": "gcc/ada/sem_ch10.adb", "status": "modified", "additions": 54, "deletions": 48, "changes": 102, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/637a41a5d77d096f6a595c683490bee7f9943f5c/gcc%2Fada%2Fsem_ch10.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/637a41a5d77d096f6a595c683490bee7f9943f5c/gcc%2Fada%2Fsem_ch10.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch10.adb?ref=637a41a5d77d096f6a595c683490bee7f9943f5c", "patch": "@@ -105,6 +105,11 @@ package body Sem_Ch10 is\n    --  N is the compilation unit whose list of context items receives the\n    --  implicit with_clauses.\n \n+   procedure Generate_Parent_References (N : Node_Id; P_Id : Entity_Id);\n+   --  Generate cross-reference information for the parents of child units\n+   --  and of subunits. N is a defining_program_unit_name, and P_Id is the\n+   --  immediate parent scope.\n+\n    function Get_Parent_Entity (Unit : Node_Id) return Entity_Id;\n    --  Get defining entity of parent unit of a child unit. In most cases this\n    --  is the defining entity of the unit, but for a child instance whose\n@@ -261,10 +266,6 @@ package body Sem_Ch10 is\n       --  Spec_Context_Items to that of the spec. Parent packages are not\n       --  examined for documentation purposes.\n \n-      procedure Generate_Parent_References (N : Node_Id; P_Id : Entity_Id);\n-      --  Generate cross-reference information for the parents of child units.\n-      --  N is a defining_program_unit_name, and P_Id is the immediate parent.\n-\n       ---------------------------\n       -- Check_Redundant_Withs --\n       ---------------------------\n@@ -598,45 +599,6 @@ package body Sem_Ch10 is\n          end loop;\n       end Check_Redundant_Withs;\n \n-      --------------------------------\n-      -- Generate_Parent_References --\n-      --------------------------------\n-\n-      procedure Generate_Parent_References (N : Node_Id; P_Id : Entity_Id) is\n-         Pref   : Node_Id;\n-         P_Name : Entity_Id := P_Id;\n-\n-      begin\n-         Pref := Name (Parent (Defining_Entity (N)));\n-\n-         if Nkind (Pref) = N_Expanded_Name then\n-\n-            --  Done already, if the unit has been compiled indirectly as\n-            --  part of the closure of its context because of inlining.\n-\n-            return;\n-         end if;\n-\n-         while Nkind (Pref) = N_Selected_Component loop\n-            Change_Selected_Component_To_Expanded_Name (Pref);\n-            Set_Entity (Pref, P_Name);\n-            Set_Etype (Pref, Etype (P_Name));\n-            Generate_Reference (P_Name, Pref, 'r');\n-            Pref   := Prefix (Pref);\n-            P_Name := Scope (P_Name);\n-         end loop;\n-\n-         --  The guard here on P_Name is to handle the error condition where\n-         --  the parent unit is missing because the file was not found.\n-\n-         if Present (P_Name) then\n-            Set_Entity (Pref, P_Name);\n-            Set_Etype (Pref, Etype (P_Name));\n-            Generate_Reference (P_Name, Pref, 'r');\n-            Style.Check_Identifier (Pref, P_Name);\n-         end if;\n-      end Generate_Parent_References;\n-\n    --  Start of processing for Analyze_Compilation_Unit\n \n    begin\n@@ -865,9 +827,9 @@ package body Sem_Ch10 is\n          if Nkind (Defining_Unit_Name (Specification (Unit_Node))) =\n                                              N_Defining_Program_Unit_Name\n          then\n-            Generate_Parent_References (\n-              Specification (Unit_Node),\n-                Scope (Defining_Entity (Unit (Lib_Unit))));\n+            Generate_Parent_References\n+              (Specification (Unit_Node),\n+               Scope (Defining_Entity (Unit (Lib_Unit))));\n          end if;\n       end if;\n \n@@ -906,8 +868,8 @@ package body Sem_Ch10 is\n \n          --  Set the entities of all parents in the program_unit_name\n \n-         Generate_Parent_References (\n-           Unit_Node, Get_Parent_Entity (Unit (Parent_Spec (Unit_Node))));\n+         Generate_Parent_References\n+           (Unit_Node, Get_Parent_Entity (Unit (Parent_Spec (Unit_Node))));\n       end if;\n \n       --  All components of the context: with-clauses, library unit, ancestors\n@@ -2326,6 +2288,7 @@ package body Sem_Ch10 is\n          end if;\n       end if;\n \n+      Generate_Parent_References (Unit (N), Par_Unit);\n       Analyze (Proper_Body (Unit (N)));\n       Remove_Context (N);\n \n@@ -3056,6 +3019,49 @@ package body Sem_Ch10 is\n       end if;\n    end Expand_With_Clause;\n \n+   --------------------------------\n+   -- Generate_Parent_References --\n+   --------------------------------\n+\n+   procedure Generate_Parent_References (N : Node_Id; P_Id : Entity_Id) is\n+      Pref   : Node_Id;\n+      P_Name : Entity_Id := P_Id;\n+\n+   begin\n+      if Nkind (N) = N_Subunit then\n+         Pref := Name (N);\n+      else\n+         Pref := Name (Parent (Defining_Entity (N)));\n+      end if;\n+\n+      if Nkind (Pref) = N_Expanded_Name then\n+\n+         --  Done already, if the unit has been compiled indirectly as\n+         --  part of the closure of its context because of inlining.\n+\n+         return;\n+      end if;\n+\n+      while Nkind (Pref) = N_Selected_Component loop\n+         Change_Selected_Component_To_Expanded_Name (Pref);\n+         Set_Entity (Pref, P_Name);\n+         Set_Etype (Pref, Etype (P_Name));\n+         Generate_Reference (P_Name, Pref, 'r');\n+         Pref   := Prefix (Pref);\n+         P_Name := Scope (P_Name);\n+      end loop;\n+\n+      --  The guard here on P_Name is to handle the error condition where\n+      --  the parent unit is missing because the file was not found.\n+\n+      if Present (P_Name) then\n+         Set_Entity (Pref, P_Name);\n+         Set_Etype (Pref, Etype (P_Name));\n+         Generate_Reference (P_Name, Pref, 'r');\n+         Style.Check_Identifier (Pref, P_Name);\n+      end if;\n+   end Generate_Parent_References;\n+\n    -----------------------\n    -- Get_Parent_Entity --\n    -----------------------"}, {"sha": "f2e2d0832178362f40a35346c84dd2401b19cecc", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/637a41a5d77d096f6a595c683490bee7f9943f5c/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/637a41a5d77d096f6a595c683490bee7f9943f5c/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=637a41a5d77d096f6a595c683490bee7f9943f5c", "patch": "@@ -4652,15 +4652,16 @@ package body Sem_Ch4 is\n                      Set_Etype (Sel, Etype (Comp));\n                      Set_Etype (N,   Etype (Comp));\n \n-                     --  Emit appropriate message. Gigi will replace the node\n-                     --  subsequently with the appropriate Raise.\n+                     --  Emit appropriate message. The node will be replaced\n+                     --  by an appropriate raise statement.\n \n-                     --  In SPARK mode, this is made into an error to simplify\n-                     --  the processing of the formal verification backend.\n+                     --  Note that in SPARK mode, as with all calls to apply a\n+                     --  compile time constraint error, this will be made into\n+                     --  an error to simplify the processing of the formal\n+                     --  verification backend.\n \n-                     Error_Msg_Warn := SPARK_Mode /= On;\n                      Apply_Compile_Time_Constraint_Error\n-                       (N, \"component not present in }<<\",\n+                       (N, \"component not present in }??\",\n                         CE_Discriminant_Check_Failed,\n                         Ent => Prefix_Type, Rep => False);\n "}, {"sha": "a093a395ddb6e3a2fcc490046c51a693f8eaacb9", "filename": "gcc/ada/sem_util.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/637a41a5d77d096f6a595c683490bee7f9943f5c/gcc%2Fada%2Fsem_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/637a41a5d77d096f6a595c683490bee7f9943f5c/gcc%2Fada%2Fsem_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.ads?ref=637a41a5d77d096f6a595c683490bee7f9943f5c", "patch": "@@ -122,7 +122,7 @@ package Sem_Util is\n    --  is present, this is used instead. Warn is normally False. If it is\n    --  True then the message is treated as a warning even though it does\n    --  not end with a ? (this is used when the caller wants to parameterize\n-   --  whether an error or warning is given.\n+   --  whether an error or warning is given).\n \n    function Async_Readers_Enabled (Id : Entity_Id) return Boolean;\n    --  Given the entity of an abstract state or a variable, determine whether"}]}