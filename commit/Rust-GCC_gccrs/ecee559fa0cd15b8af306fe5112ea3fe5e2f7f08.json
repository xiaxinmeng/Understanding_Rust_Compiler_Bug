{"sha": "ecee559fa0cd15b8af306fe5112ea3fe5e2f7f08", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWNlZTU1OWZhMGNkMTViOGFmMzA2ZmU1MTEyZWEzZmU1ZTJmN2YwOA==", "commit": {"author": {"name": "Paul Brook", "email": "paul@codesourcery.com", "date": "2009-01-24T00:10:30Z"}, "committer": {"name": "Paul Brook", "email": "pbrook@gcc.gnu.org", "date": "2009-01-24T00:10:30Z"}, "message": "neon.md (neon_type): Move to arm.md.\n\n2009-01-24  Paul Brook  <paul@codesourcery.com>\n\n\tgcc/\n\t* config/arm/neon.md (neon_type): Move to arm.md.\n\t(neon_mov<VSTRUCT>): Add neon_type attribute.\n\t* config/arm/arm.md (neon_type): Move to here.\n\t(conds): Add \"unconditioal\" and use as default for NEON insns.\n\n\tgcc/testsuite/\n\t* gcc.target/arm/neon-cond-1.c: New test.\n\nFrom-SVN: r143594", "tree": {"sha": "98336cfb7d8ee08d460ac1fe1f72ae65b2e1b874", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/98336cfb7d8ee08d460ac1fe1f72ae65b2e1b874"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ecee559fa0cd15b8af306fe5112ea3fe5e2f7f08", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ecee559fa0cd15b8af306fe5112ea3fe5e2f7f08", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ecee559fa0cd15b8af306fe5112ea3fe5e2f7f08", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ecee559fa0cd15b8af306fe5112ea3fe5e2f7f08/comments", "author": null, "committer": null, "parents": [{"sha": "61ad091447e7b5f71a3ee7e88fe75095bdf3730a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61ad091447e7b5f71a3ee7e88fe75095bdf3730a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/61ad091447e7b5f71a3ee7e88fe75095bdf3730a"}], "stats": {"total": 164, "additions": 90, "deletions": 74}, "files": [{"sha": "ad886c8f031f3e6e7bb64a7937cdc955ab72d5b6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecee559fa0cd15b8af306fe5112ea3fe5e2f7f08/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecee559fa0cd15b8af306fe5112ea3fe5e2f7f08/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ecee559fa0cd15b8af306fe5112ea3fe5e2f7f08", "patch": "@@ -1,3 +1,10 @@\n+2009-01-24  Paul Brook  <paul@codesourcery.com>\n+\n+\t* config/arm/neon.md (neon_type): Move to arm.md.\n+\t(neon_mov<VSTRUCT>): Add neon_type attribute.\n+\t* config/arm/arm.md (neon_type): Move to here.\n+\t(conds): Add \"unconditioal\" and use as default for NEON insns.\n+\n 2009-01-24  Ben Elliston  <bje@au.ibm.com>\n \n \t* bitmap.h (BITMAP_FREE): Eliminate `implicit conversion from"}, {"sha": "63bd62bb6532de79a47b9058f3dcbbd011ff0922", "filename": "gcc/config.gcc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecee559fa0cd15b8af306fe5112ea3fe5e2f7f08/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecee559fa0cd15b8af306fe5112ea3fe5e2f7f08/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=ecee559fa0cd15b8af306fe5112ea3fe5e2f7f08", "patch": "@@ -760,7 +760,7 @@ arm*-*-eabi* | arm*-*-symbianelf* )\n \ttmake_file=\"arm/t-arm arm/t-arm-elf\"\n \tcase ${target} in\n \tarm*-*-eabi*)\n-\t  tm_file=\"$tm_file arm/eabi.h\"\n+\t  tm_file=\"$tm_file arm/eabi.h arm/nocrt0.h\"\n \t  tmake_file=\"${tmake_file} arm/t-bpabi\"\n \t  extra_options=\"${extra_options} arm/eabi.opt\"\n \t  ;;"}, {"sha": "0acf257cb43c6afe00232783e3211012c3c71dad", "filename": "gcc/config/arm/arm.md", "status": "modified", "additions": 75, "deletions": 2, "changes": 77, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecee559fa0cd15b8af306fe5112ea3fe5e2f7f08/gcc%2Fconfig%2Farm%2Farm.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecee559fa0cd15b8af306fe5112ea3fe5e2f7f08/gcc%2Fconfig%2Farm%2Farm.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.md?ref=ecee559fa0cd15b8af306fe5112ea3fe5e2f7f08", "patch": "@@ -250,6 +250,75 @@\n ; initialized by arm_override_options() \n (define_attr \"ldsched\" \"no,yes\" (const (symbol_ref \"arm_ld_sched\")))\n \n+;; Classification of NEON instructions for scheduling purposes.\n+;; Do not set this attribute and the \"type\" attribute together in\n+;; any one instruction pattern.\n+(define_attr \"neon_type\"\n+   \"neon_int_1,\\\n+   neon_int_2,\\\n+   neon_int_3,\\\n+   neon_int_4,\\\n+   neon_int_5,\\\n+   neon_vqneg_vqabs,\\\n+   neon_vmov,\\\n+   neon_vaba,\\\n+   neon_vsma,\\\n+   neon_vaba_qqq,\\\n+   neon_mul_ddd_8_16_qdd_16_8_long_32_16_long,\\\n+   neon_mul_qqq_8_16_32_ddd_32,\\\n+   neon_mul_qdd_64_32_long_qqd_16_ddd_32_scalar_64_32_long_scalar,\\\n+   neon_mla_ddd_8_16_qdd_16_8_long_32_16_long,\\\n+   neon_mla_qqq_8_16,\\\n+   neon_mla_ddd_32_qqd_16_ddd_32_scalar_qdd_64_32_long_scalar_qdd_64_32_long,\\\n+   neon_mla_qqq_32_qqd_32_scalar,\\\n+   neon_mul_ddd_16_scalar_32_16_long_scalar,\\\n+   neon_mul_qqd_32_scalar,\\\n+   neon_mla_ddd_16_scalar_qdd_32_16_long_scalar,\\\n+   neon_shift_1,\\\n+   neon_shift_2,\\\n+   neon_shift_3,\\\n+   neon_vshl_ddd,\\\n+   neon_vqshl_vrshl_vqrshl_qqq,\\\n+   neon_vsra_vrsra,\\\n+   neon_fp_vadd_ddd_vabs_dd,\\\n+   neon_fp_vadd_qqq_vabs_qq,\\\n+   neon_fp_vsum,\\\n+   neon_fp_vmul_ddd,\\\n+   neon_fp_vmul_qqd,\\\n+   neon_fp_vmla_ddd,\\\n+   neon_fp_vmla_qqq,\\\n+   neon_fp_vmla_ddd_scalar,\\\n+   neon_fp_vmla_qqq_scalar,\\\n+   neon_fp_vrecps_vrsqrts_ddd,\\\n+   neon_fp_vrecps_vrsqrts_qqq,\\\n+   neon_bp_simple,\\\n+   neon_bp_2cycle,\\\n+   neon_bp_3cycle,\\\n+   neon_ldr,\\\n+   neon_str,\\\n+   neon_vld1_1_2_regs,\\\n+   neon_vld1_3_4_regs,\\\n+   neon_vld2_2_regs_vld1_vld2_all_lanes,\\\n+   neon_vld2_4_regs,\\\n+   neon_vld3_vld4,\\\n+   neon_vst1_1_2_regs_vst2_2_regs,\\\n+   neon_vst1_3_4_regs,\\\n+   neon_vst2_4_regs_vst3_vst4,\\\n+   neon_vst3_vst4,\\\n+   neon_vld1_vld2_lane,\\\n+   neon_vld3_vld4_lane,\\\n+   neon_vst1_vst2_lane,\\\n+   neon_vst3_vst4_lane,\\\n+   neon_vld3_vld4_all_lanes,\\\n+   neon_mcr,\\\n+   neon_mcr_2_mcrr,\\\n+   neon_mrc,\\\n+   neon_mrrc,\\\n+   neon_ldm_2,\\\n+   neon_stm_2,\\\n+   none\"\n+ (const_string \"none\"))\n+\n ; condition codes: this one is used by final_prescan_insn to speed up\n ; conditionalizing instructions.  It saves having to scan the rtl to see if\n ; it uses or alters the condition codes.\n@@ -267,13 +336,17 @@\n ; JUMP_CLOB is used when the condition cannot be represented by a single\n ;   instruction (UNEQ and LTGT).  These cannot be predicated.\n ;\n+; UNCONDITIONAL means the instions can not be conditionally executed.\n+;\n ; NOCOND means that the condition codes are neither altered nor affect the\n ;   output of this insn\n \n-(define_attr \"conds\" \"use,set,clob,jump_clob,nocond\"\n+(define_attr \"conds\" \"use,set,clob,jump_clob,unconditional,nocond\"\n \t(if_then_else (eq_attr \"type\" \"call\")\n \t (const_string \"clob\")\n-\t (const_string \"nocond\")))\n+\t (if_then_else (eq_attr \"neon_type\" \"none\")\n+\t  (const_string \"nocond\")\n+\t  (const_string \"unconditional\"))))\n \n ; Predicable means that the insn can be conditionally executed based on\n ; an automatically added predicate (additional patterns are generated by "}, {"sha": "dbbd209f79cc6d7222dcdfe720d14f44b5a9ddd0", "filename": "gcc/config/arm/neon.md", "status": "modified", "additions": 3, "deletions": 71, "changes": 74, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecee559fa0cd15b8af306fe5112ea3fe5e2f7f08/gcc%2Fconfig%2Farm%2Fneon.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecee559fa0cd15b8af306fe5112ea3fe5e2f7f08/gcc%2Fconfig%2Farm%2Fneon.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fneon.md?ref=ecee559fa0cd15b8af306fe5112ea3fe5e2f7f08", "patch": "@@ -427,76 +427,7 @@\n ;; neon_type attribute definitions.\n (define_attr \"vqh_mnem\" \"vadd,vmin,vmax\" (const_string \"vadd\"))\n \n-;; Classification of NEON instructions for scheduling purposes.\n-;; Do not set this attribute and the \"type\" attribute together in\n-;; any one instruction pattern.\n-(define_attr \"neon_type\"\n-   \"neon_int_1,\\\n-   neon_int_2,\\\n-   neon_int_3,\\\n-   neon_int_4,\\\n-   neon_int_5,\\\n-   neon_vqneg_vqabs,\\\n-   neon_vmov,\\\n-   neon_vaba,\\\n-   neon_vsma,\\\n-   neon_vaba_qqq,\\\n-   neon_mul_ddd_8_16_qdd_16_8_long_32_16_long,\\\n-   neon_mul_qqq_8_16_32_ddd_32,\\\n-   neon_mul_qdd_64_32_long_qqd_16_ddd_32_scalar_64_32_long_scalar,\\\n-   neon_mla_ddd_8_16_qdd_16_8_long_32_16_long,\\\n-   neon_mla_qqq_8_16,\\\n-   neon_mla_ddd_32_qqd_16_ddd_32_scalar_qdd_64_32_long_scalar_qdd_64_32_long,\\\n-   neon_mla_qqq_32_qqd_32_scalar,\\\n-   neon_mul_ddd_16_scalar_32_16_long_scalar,\\\n-   neon_mul_qqd_32_scalar,\\\n-   neon_mla_ddd_16_scalar_qdd_32_16_long_scalar,\\\n-   neon_shift_1,\\\n-   neon_shift_2,\\\n-   neon_shift_3,\\\n-   neon_vshl_ddd,\\\n-   neon_vqshl_vrshl_vqrshl_qqq,\\\n-   neon_vsra_vrsra,\\\n-   neon_fp_vadd_ddd_vabs_dd,\\\n-   neon_fp_vadd_qqq_vabs_qq,\\\n-   neon_fp_vsum,\\\n-   neon_fp_vmul_ddd,\\\n-   neon_fp_vmul_qqd,\\\n-   neon_fp_vmla_ddd,\\\n-   neon_fp_vmla_qqq,\\\n-   neon_fp_vmla_ddd_scalar,\\\n-   neon_fp_vmla_qqq_scalar,\\\n-   neon_fp_vrecps_vrsqrts_ddd,\\\n-   neon_fp_vrecps_vrsqrts_qqq,\\\n-   neon_bp_simple,\\\n-   neon_bp_2cycle,\\\n-   neon_bp_3cycle,\\\n-   neon_ldr,\\\n-   neon_str,\\\n-   neon_vld1_1_2_regs,\\\n-   neon_vld1_3_4_regs,\\\n-   neon_vld2_2_regs_vld1_vld2_all_lanes,\\\n-   neon_vld2_4_regs,\\\n-   neon_vld3_vld4,\\\n-   neon_vst1_1_2_regs_vst2_2_regs,\\\n-   neon_vst1_3_4_regs,\\\n-   neon_vst2_4_regs_vst3_vst4,\\\n-   neon_vst3_vst4,\\\n-   neon_vld1_vld2_lane,\\\n-   neon_vld3_vld4_lane,\\\n-   neon_vst1_vst2_lane,\\\n-   neon_vst3_vst4_lane,\\\n-   neon_vld3_vld4_all_lanes,\\\n-   neon_mcr,\\\n-   neon_mcr_2_mcrr,\\\n-   neon_mrc,\\\n-   neon_mrrc,\\\n-   neon_ldm_2,\\\n-   neon_stm_2,\\\n-   none\"\n- (const_string \"none\"))\n-\n-;; Predicates used for setting the above attribute.\n+;; Predicates used for setting neon_type\n \n (define_mode_attr Is_float_mode [(V8QI \"false\") (V16QI \"false\")\n \t\t\t\t (V4HI \"false\") (V8HI \"false\")\n@@ -639,7 +570,8 @@\n     default: gcc_unreachable ();\n     }\n }\n-  [(set_attr \"length\" \"<V_slen>,<V_slen>,<V_slen>\")])\n+  [(set_attr \"neon_type\" \"neon_int_1,neon_stm_2,neon_ldm_2\")\n+   (set_attr \"length\" \"<V_slen>,<V_slen>,<V_slen>\")])\n \n (define_split\n   [(set (match_operand:EI 0 \"s_register_operand\" \"\")"}, {"sha": "ee4afc620d8eb0651d9a361cafbc84fc057b1be9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecee559fa0cd15b8af306fe5112ea3fe5e2f7f08/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecee559fa0cd15b8af306fe5112ea3fe5e2f7f08/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ecee559fa0cd15b8af306fe5112ea3fe5e2f7f08", "patch": "@@ -1,3 +1,7 @@\n+2009-01-24  Paul Brook  <paul@codesourcery.com>\n+\n+\t* gcc.target/arm/neon-cond-1.c: New test.\n+\n 2008-01-23  Paolo Bonzini  <bonzini@gnu.org>\n \n \tPR tree-optimization/38932"}]}