{"sha": "6579ac0c00830fc5982afda361bc350ea2a84f7a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjU3OWFjMGMwMDgzMGZjNTk4MmFmZGEzNjFiYzM1MGVhMmE4NGY3YQ==", "commit": {"author": {"name": "Michael Koch", "email": "konqueror@gmx.de", "date": "2003-03-03T08:26:52Z"}, "committer": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2003-03-03T08:26:52Z"}, "message": "2003-03-03  Michael Koch  <konqueror@gmx.de>\n\n\t* java/net/DatagramSocket.java\n\t(connect): Merged comment from classpath.\n\t(receive): Merged documentation from classpath.\n\t* java/net/Socket.java\n\t(setSoTimeout): Clarified documentation.\n\t* java/net/URL.java\n\t(getPath): Merged from classpath.\n\t(getUserInfo): Merged from classpath.\n\t(getQuery): Merged from classpath.\n\t* java/net/URLStreamHandler.java\n\t(toExternalForm): Merged from classpath.\n\nFrom-SVN: r63714", "tree": {"sha": "6bf9b70421fe052b23d2db697187f4f0a980aed1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6bf9b70421fe052b23d2db697187f4f0a980aed1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6579ac0c00830fc5982afda361bc350ea2a84f7a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6579ac0c00830fc5982afda361bc350ea2a84f7a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6579ac0c00830fc5982afda361bc350ea2a84f7a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6579ac0c00830fc5982afda361bc350ea2a84f7a/comments", "author": null, "committer": null, "parents": [{"sha": "6e1b3a7c949003ce1051d5bff4d162a80b418122", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e1b3a7c949003ce1051d5bff4d162a80b418122", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6e1b3a7c949003ce1051d5bff4d162a80b418122"}], "stats": {"total": 42, "additions": 30, "deletions": 12}, "files": [{"sha": "9c55675dcbbffece92937e521f75b4a20814707f", "filename": "libjava/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6579ac0c00830fc5982afda361bc350ea2a84f7a/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6579ac0c00830fc5982afda361bc350ea2a84f7a/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=6579ac0c00830fc5982afda361bc350ea2a84f7a", "patch": "@@ -1,3 +1,17 @@\n+2003-03-03  Michael Koch  <konqueror@gmx.de>\n+\n+\t* java/net/DatagramSocket.java\n+\t(connect): Merged comment from classpath.\n+\t(receive): Merged documentation from classpath.\n+\t* java/net/Socket.java\n+\t(setSoTimeout): Clarified documentation.\n+\t* java/net/URL.java\n+\t(getPath): Merged from classpath.\n+\t(getUserInfo): Merged from classpath.\n+\t(getQuery): Merged from classpath.\n+\t* java/net/URLStreamHandler.java\n+\t(toExternalForm): Merged from classpath.\n+\n 2003-03-02  Mark Wielaard  <mark@klomp.org>\n \n \t* java/util/Properties.java (load): Only skip line if the first"}, {"sha": "81c8b3cdbf9f2daa11e09ecabe59669a6240785f", "filename": "libjava/java/net/DatagramSocket.java", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6579ac0c00830fc5982afda361bc350ea2a84f7a/libjava%2Fjava%2Fnet%2FDatagramSocket.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6579ac0c00830fc5982afda361bc350ea2a84f7a/libjava%2Fjava%2Fnet%2FDatagramSocket.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnet%2FDatagramSocket.java?ref=6579ac0c00830fc5982afda361bc350ea2a84f7a", "patch": "@@ -466,6 +466,7 @@ public void connect(InetAddress address, int port)\n       }\n     catch (SocketException e)\n       {\n+        // This means simply not connected.\n       }\n   }\n \n@@ -488,9 +489,9 @@ public void disconnect()\n    * will block until a packet is received from the network.  On return,\n    * the passed in <code>DatagramPacket</code> is populated with the data\n    * received and all the other information about the packet.\n-   * \n-   * @param p The datagram packet to put the incoming data into.\n-   * \n+   *\n+   * @param p A <code>DatagramPacket</code> for storing the data\n+   *\n    * @exception IOException If an error occurs.\n    * @exception SocketTimeoutException If setSoTimeout was previously called\n    * and the timeout has expired."}, {"sha": "a71218fe7efea7d7434650da39a3f5613ca0989d", "filename": "libjava/java/net/Socket.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6579ac0c00830fc5982afda361bc350ea2a84f7a/libjava%2Fjava%2Fnet%2FSocket.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6579ac0c00830fc5982afda361bc350ea2a84f7a/libjava%2Fjava%2Fnet%2FSocket.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnet%2FSocket.java?ref=6579ac0c00830fc5982afda361bc350ea2a84f7a", "patch": "@@ -692,10 +692,10 @@ public boolean getOOBInline () throws SocketException\n    * this option implies that there is no timeout (ie, operations will \n    * block forever).  On systems that have separate read and write timeout\n    * values, this method returns the read timeout.  This\n-   * value is in thousandths of a second (****????*****)\n+   * value is in milliseconds.\n    *\n-   * @param timeout The length of the timeout in thousandth's of a second or \n-   * 0 if not set\n+   * @param timeout The length of the timeout in milliseconds, or \n+   * 0 to indicate no timeout.\n    *\n    * @exception SocketException If an error occurs or Socket not connected\n    *"}, {"sha": "ba27bbef5ddbfe24eac2f6ffe0a9e64eca8258bc", "filename": "libjava/java/net/URL.java", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6579ac0c00830fc5982afda361bc350ea2a84f7a/libjava%2Fjava%2Fnet%2FURL.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6579ac0c00830fc5982afda361bc350ea2a84f7a/libjava%2Fjava%2Fnet%2FURL.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnet%2FURL.java?ref=6579ac0c00830fc5982afda361bc350ea2a84f7a", "patch": "@@ -472,8 +472,8 @@ public String getFile()\n    */\n   public String getPath()\n   {\n-    int quest = file.indexOf('?');\n-    return quest < 0 ? file : file.substring(0, quest);\n+    int quest = (file == null) ? -1 : file.indexOf('?');\n+    return quest < 0 ? getFile() : file.substring(0, quest);\n   }\n \n   /**\n@@ -544,7 +544,7 @@ public String getRef()\n    */\n   public String getUserInfo ()\n   {\n-    int at = host.indexOf('@');\n+    int at = (host == null) ? -1 : host.indexOf('@');\n     return at < 0 ? null : host.substring(0, at);\n   }\n \n@@ -556,7 +556,7 @@ public String getUserInfo ()\n    */\n   public String getQuery ()\n   {\n-    int quest = file.indexOf('?');\n+    int quest = (file == null) ? -1 : file.indexOf('?');\n     return quest < 0 ? null : file.substring(quest + 1, file.length());\n   }\n "}, {"sha": "a6db2f32a06d00344ef2568b047d77f3c2988438", "filename": "libjava/java/net/URLStreamHandler.java", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6579ac0c00830fc5982afda361bc350ea2a84f7a/libjava%2Fjava%2Fnet%2FURLStreamHandler.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6579ac0c00830fc5982afda361bc350ea2a84f7a/libjava%2Fjava%2Fnet%2FURLStreamHandler.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnet%2FURLStreamHandler.java?ref=6579ac0c00830fc5982afda361bc350ea2a84f7a", "patch": "@@ -451,8 +451,11 @@ protected String toExternalForm(URL u)\n     int size = protocol.length() + host.length() + file.length() + 24;\n     StringBuffer sb = new StringBuffer(size);\n \n-    sb.append(protocol);\n-    sb.append(':');\n+    if (protocol != null && protocol.length() > 0)\n+      {\n+\tsb.append(protocol);\n+\tsb.append(\":\");\n+      }\n \n     if (host.length() != 0)\n       sb.append(\"//\").append(host);"}]}