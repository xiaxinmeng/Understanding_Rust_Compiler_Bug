{"sha": "6101a7ab878f784558c908d6e4773d49b0858e0e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjEwMWE3YWI4NzhmNzg0NTU4YzkwOGQ2ZTQ3NzNkNDliMDg1OGUwZQ==", "commit": {"author": {"name": "Patrick Palka", "email": "ppalka@gcc.gnu.org", "date": "2016-09-19T18:12:36Z"}, "committer": {"name": "Patrick Palka", "email": "ppalka@gcc.gnu.org", "date": "2016-09-19T18:12:36Z"}, "message": "Fix PR c++/77639 (ICE during error recovery)\n\ngcc/cp/ChangeLog:\n\n\tPR c++/77639\n\t* parser.c (cp_parser_class_head): When\n\tprocessing_template_parmlist, don't assume that the\n\tclass-head may start an explicit specialization.\n\ngcc/testsuite/ChangeLog:\n\n\tPR c++/77639\n\t* g++.dg/template/error-recovery4.C: New test.\n\nFrom-SVN: r240245", "tree": {"sha": "418e0d7e8d09dbc87f2f70bec91de96afdb2fdff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/418e0d7e8d09dbc87f2f70bec91de96afdb2fdff"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6101a7ab878f784558c908d6e4773d49b0858e0e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6101a7ab878f784558c908d6e4773d49b0858e0e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6101a7ab878f784558c908d6e4773d49b0858e0e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6101a7ab878f784558c908d6e4773d49b0858e0e/comments", "author": null, "committer": null, "parents": [{"sha": "d0f5943566482b094ac600e63271c22ebf227c5f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d0f5943566482b094ac600e63271c22ebf227c5f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d0f5943566482b094ac600e63271c22ebf227c5f"}], "stats": {"total": 18, "additions": 18, "deletions": 0}, "files": [{"sha": "e4bd392e953679f1504787705d9c7987da5f2875", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6101a7ab878f784558c908d6e4773d49b0858e0e/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6101a7ab878f784558c908d6e4773d49b0858e0e/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=6101a7ab878f784558c908d6e4773d49b0858e0e", "patch": "@@ -1,3 +1,10 @@\n+2016-09-16  Patrick Palka  <ppalka@gcc.gnu.org>\n+\n+\tPR c++/77639\n+\t* parser.c (cp_parser_class_head): When\n+\tprocessing_template_parmlist, don't assume that the\n+\tclass-head may start an explicit specialization.\n+\n 2016-09-16  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/77482"}, {"sha": "c03b9c2e5e3d4ea91f98280fb98db0cd82b256c3", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6101a7ab878f784558c908d6e4773d49b0858e0e/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6101a7ab878f784558c908d6e4773d49b0858e0e/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=6101a7ab878f784558c908d6e4773d49b0858e0e", "patch": "@@ -22025,6 +22025,7 @@ cp_parser_class_head (cp_parser* parser,\n      it is not, try to recover gracefully.  */\n   if (at_namespace_scope_p ()\n       && parser->num_template_parameter_lists == 0\n+      && !processing_template_parmlist\n       && template_id_p)\n     {\n       /* Build a location of this form:"}, {"sha": "f7d004807432e11e8cebea18649a8d5dd18bcb39", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6101a7ab878f784558c908d6e4773d49b0858e0e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6101a7ab878f784558c908d6e4773d49b0858e0e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6101a7ab878f784558c908d6e4773d49b0858e0e", "patch": "@@ -1,3 +1,8 @@\n+2016-09-19  Patrick Palka  <ppalka@gcc.gnu.org>\n+\n+\tPR c++/77639\n+\t* g++.dg/template/error-recovery4.C: New test.\n+\n 2016-09-19  Bin Cheng  <bin.cheng@arm.com>\n \n \t* gcc.dg/vect/pr57558-1.c: Use unsigned int instead of unsigned long."}, {"sha": "1e52c6a6b3e944f4472a2d857d7f487dbfec02ac", "filename": "gcc/testsuite/g++.dg/template/error-recovery4.C", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6101a7ab878f784558c908d6e4773d49b0858e0e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ferror-recovery4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6101a7ab878f784558c908d6e4773d49b0858e0e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ferror-recovery4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ferror-recovery4.C?ref=6101a7ab878f784558c908d6e4773d49b0858e0e", "patch": "@@ -0,0 +1,5 @@\n+// PR c++/77639\n+\n+template <class, int, class, int> struct B {};\n+template <class T, int a, class U struct B<T, a, U, 1> {}; // { dg-error \"\" }\n+B<int, 2, char, 1> i;"}]}