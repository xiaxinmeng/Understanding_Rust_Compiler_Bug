{"sha": "aa3c6dc1604edf2119da7cf6d39c6afab3a676d7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWEzYzZkYzE2MDRlZGYyMTE5ZGE3Y2Y2ZDM5YzZhZmFiM2E2NzZkNw==", "commit": {"author": {"name": "Per Bothner", "email": "per@bothner.com", "date": "2004-07-15T00:02:30Z"}, "committer": {"name": "Per Bothner", "email": "bothner@gcc.gnu.org", "date": "2004-07-15T00:02:30Z"}, "message": "input.h: If USE_MAPPED_LOCATION...\n\n\n\t* input.h:  If USE_MAPPED_LOCATION, define separate expanded_location\n\tstructure with extra column field.\n\t* tree.c (expand_location):  Also fill in column field.\n\t* gengtype-lex.l:  Ignore expanded_location typedef, sinze gengtype\n\tgets confused by the two conditionally-compiled definitions.\n\nFrom-SVN: r84721", "tree": {"sha": "590981ecbc489c808f0c696cd08606defbd93ffa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/590981ecbc489c808f0c696cd08606defbd93ffa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aa3c6dc1604edf2119da7cf6d39c6afab3a676d7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa3c6dc1604edf2119da7cf6d39c6afab3a676d7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aa3c6dc1604edf2119da7cf6d39c6afab3a676d7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa3c6dc1604edf2119da7cf6d39c6afab3a676d7/comments", "author": {"login": "PerBothner", "id": 10293361, "node_id": "MDQ6VXNlcjEwMjkzMzYx", "avatar_url": "https://avatars.githubusercontent.com/u/10293361?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PerBothner", "html_url": "https://github.com/PerBothner", "followers_url": "https://api.github.com/users/PerBothner/followers", "following_url": "https://api.github.com/users/PerBothner/following{/other_user}", "gists_url": "https://api.github.com/users/PerBothner/gists{/gist_id}", "starred_url": "https://api.github.com/users/PerBothner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PerBothner/subscriptions", "organizations_url": "https://api.github.com/users/PerBothner/orgs", "repos_url": "https://api.github.com/users/PerBothner/repos", "events_url": "https://api.github.com/users/PerBothner/events{/privacy}", "received_events_url": "https://api.github.com/users/PerBothner/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "368b7a304e674df0e140b6dc164e670650c56486", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/368b7a304e674df0e140b6dc164e670650c56486", "html_url": "https://github.com/Rust-GCC/gccrs/commit/368b7a304e674df0e140b6dc164e670650c56486"}], "stats": {"total": 32, "additions": 26, "deletions": 6}, "files": [{"sha": "cb26f13af36d2d0e076c65ac379972d1b836a801", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa3c6dc1604edf2119da7cf6d39c6afab3a676d7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa3c6dc1604edf2119da7cf6d39c6afab3a676d7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=aa3c6dc1604edf2119da7cf6d39c6afab3a676d7", "patch": "@@ -1,3 +1,11 @@\n+2004-07-14  Per Bothner  <per@bothner.com>\n+\n+\t* input.h:  If USE_MAPPED_LOCATION, define separate expanded_location\n+\tstructure with extra column field.\n+\t* tree.c (expand_location):  Also fill in column field.\n+\t* gengtype-lex.l:  Ignore expanded_location typedef, sinze gengtype\n+\tgets confused by the two conditionally-compiled definitions.\n+\n 2004-07-14  Eric Christopher  <echristo@redhat.com>\n \n \t* calls.c (expand_call): Fix typo in comment."}, {"sha": "60b738eadce98df8bd2b2ee987d39229bf3fdba8", "filename": "gcc/gengtype-lex.l", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa3c6dc1604edf2119da7cf6d39c6afab3a676d7/gcc%2Fgengtype-lex.l", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa3c6dc1604edf2119da7cf6d39c6afab3a676d7/gcc%2Fgengtype-lex.l", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgengtype-lex.l?ref=aa3c6dc1604edf2119da7cf6d39c6afab3a676d7", "patch": "@@ -91,7 +91,8 @@ ITYPE\t{IWORD}({WS}{IWORD})*\n   namestart = xmemdup (namestart, namelen, namelen+1);\n #ifdef USE_MAPPED_LOCATION\n   /* temporary kludge - gentype doesn't handle cpp conditionals */\n-  if (strcmp (namestart, \"location_t\") != 0)\n+  if (strcmp (namestart, \"location_t\") != 0\n+      && strcmp (namestart, \"expanded_location\") != 0)\n #endif\n   do_typedef (namestart, t, &lexer_line);\n   update_lineno (yytext, yyleng);"}, {"sha": "f15ce6688bf5f6ab4d90d65220ad8811947b9f10", "filename": "gcc/input.h", "status": "modified", "additions": 14, "deletions": 4, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa3c6dc1604edf2119da7cf6d39c6afab3a676d7/gcc%2Finput.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa3c6dc1604edf2119da7cf6d39c6afab3a676d7/gcc%2Finput.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Finput.h?ref=aa3c6dc1604edf2119da7cf6d39c6afab3a676d7", "patch": "@@ -28,19 +28,19 @@ extern struct line_maps line_table;\n /* The location for declarations in \"<built-in>\" */\n #define BUILTINS_LOCATION ((source_location) 2)\n \n-typedef struct location_s GTY(())\n+#ifdef USE_MAPPED_LOCATION\n+\n+typedef struct\n {\n   /* The name of the source file involved.  */\n   const char *file;\n \n   /* The line-location in the source file.  */\n   int line;\n \n-  /* FUTURE (but confuses gentype): int column. */\n+  int column;\n } expanded_location;\n \n-#ifdef USE_MAPPED_LOCATION\n-\n extern expanded_location expand_location (source_location);\n \n #define UNKNOWN_LOCATION ((source_location) 0)\n@@ -49,6 +49,16 @@ typedef source_location source_locus; /* to be removed */\n \n #else /* ! USE_MAPPED_LOCATION */\n \n+struct location_s GTY(())\n+{\n+  /* The name of the source file involved.  */\n+  const char *file;\n+\n+  /* The line-location in the source file.  */\n+  int line;\n+};\n+\n+typedef struct location_s expanded_location;\n typedef struct location_s location_t;\n typedef location_t *source_locus;\n "}, {"sha": "8066cd100ff20f7fdcb957f2f02ff4df3b3c861e", "filename": "gcc/tree.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa3c6dc1604edf2119da7cf6d39c6afab3a676d7/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa3c6dc1604edf2119da7cf6d39c6afab3a676d7/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=aa3c6dc1604edf2119da7cf6d39c6afab3a676d7", "patch": "@@ -2760,12 +2760,13 @@ expanded_location\n expand_location (source_location loc)\n {\n   expanded_location xloc;\n-  if (loc == 0) { xloc.file = NULL; xloc.line = 0; }\n+  if (loc == 0) { xloc.file = NULL; xloc.line = 0;  xloc.column = 0; }\n   else\n     {\n       const struct line_map *map = linemap_lookup (&line_table, loc);\n       xloc.file = map->to_file;\n       xloc.line = SOURCE_LINE (map, loc);\n+      xloc.column = SOURCE_COLUMN (map, loc);\n     };\n   return xloc;\n }"}]}