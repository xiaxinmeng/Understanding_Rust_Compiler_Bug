{"sha": "5cbf5c20cf75fd44392400db11f3838aec114443", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWNiZjVjMjBjZjc1ZmQ0NDM5MjQwMGRiMTFmMzgzOGFlYzExNDQ0Mw==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2011-02-02T09:59:23Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2011-02-02T09:59:23Z"}, "message": "re PR middle-end/47566 (ICE in vn_reference_lookup)\n\n2011-02-02  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/47566\n\t* builtins.c (builtin_save_expr): No SAVE_EXPR for SSA_NAMEs.\n\n\t* gcc.dg/lto/20110201-1_0.c: New testcase.\n\nFrom-SVN: r169518", "tree": {"sha": "a4e3d45c5608a38ef7f2fedac53599b90299e9f4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a4e3d45c5608a38ef7f2fedac53599b90299e9f4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5cbf5c20cf75fd44392400db11f3838aec114443", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5cbf5c20cf75fd44392400db11f3838aec114443", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5cbf5c20cf75fd44392400db11f3838aec114443", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5cbf5c20cf75fd44392400db11f3838aec114443/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "aa8374708a2e5e47266b7e65f710506d237a38db", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa8374708a2e5e47266b7e65f710506d237a38db", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aa8374708a2e5e47266b7e65f710506d237a38db"}], "stats": {"total": 36, "additions": 33, "deletions": 3}, "files": [{"sha": "2af2c32edd65891f1140dea9dc609ab80451799f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5cbf5c20cf75fd44392400db11f3838aec114443/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5cbf5c20cf75fd44392400db11f3838aec114443/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5cbf5c20cf75fd44392400db11f3838aec114443", "patch": "@@ -1,3 +1,8 @@\n+2011-02-02  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/47566\n+\t* builtins.c (builtin_save_expr): No SAVE_EXPR for SSA_NAMEs.\n+\n 2011-02-02  Alexandre Oliva  <aoliva@redhat.com>\n \n \tPR debug/47106"}, {"sha": "106b2ca10b0ae23308c1c18252bfd95cc46b9c36", "filename": "gcc/builtins.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5cbf5c20cf75fd44392400db11f3838aec114443/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5cbf5c20cf75fd44392400db11f3838aec114443/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=5cbf5c20cf75fd44392400db11f3838aec114443", "patch": "@@ -652,9 +652,10 @@ target_char_cast (tree cst, char *p)\n static tree\n builtin_save_expr (tree exp)\n {\n-  if (TREE_ADDRESSABLE (exp) == 0\n-      && (TREE_CODE (exp) == PARM_DECL\n-\t  || (TREE_CODE (exp) == VAR_DECL && !TREE_STATIC (exp))))\n+  if (TREE_CODE (exp) == SSA_NAME\n+      || (TREE_ADDRESSABLE (exp) == 0\n+\t  && (TREE_CODE (exp) == PARM_DECL\n+\t      || (TREE_CODE (exp) == VAR_DECL && !TREE_STATIC (exp)))))\n     return exp;\n \n   return save_expr (exp);"}, {"sha": "4040f63e79a549ef7240aa9588665e67a720d062", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5cbf5c20cf75fd44392400db11f3838aec114443/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5cbf5c20cf75fd44392400db11f3838aec114443/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5cbf5c20cf75fd44392400db11f3838aec114443", "patch": "@@ -1,3 +1,8 @@\n+2011-02-02  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/47566\n+\t* gcc.dg/lto/20110201-1_0.c: New testcase.\n+\n 2011-02-02  Alexandre Oliva  <aoliva@redhat.com>\n \n \tPR debug/47498"}, {"sha": "f5d335572ee5a2ff0c73ba30166ea0d13b9fb0ee", "filename": "gcc/testsuite/gcc.dg/lto/20110201-1_0.c", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5cbf5c20cf75fd44392400db11f3838aec114443/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20110201-1_0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5cbf5c20cf75fd44392400db11f3838aec114443/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20110201-1_0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20110201-1_0.c?ref=5cbf5c20cf75fd44392400db11f3838aec114443", "patch": "@@ -0,0 +1,19 @@\n+/* { dg-lto-do run } */\n+/* { dg-lto-options { { -O0 -flto } } } */\n+/* { dg-extra-ld-options \"-O2 -ffast-math -fuse-linker-plugin\" } */\n+/* { dg-require-linker-plugin \"\" } */\n+\n+/* We require a linker plugin because otherwise we'd need to link\n+   against libm which we are not sure here has cabs on all targets.\n+   This is because collect2 invokes ld on the -O0 object code\n+   which does not have folded cabs.  */\n+\n+double cabs(_Complex double);\n+double __attribute__((used))\n+foo (_Complex double x, int b)\n+{\n+  if (b)\n+    x = 0;\n+  return cabs(x);\n+}\n+int main() { return 0; }"}]}