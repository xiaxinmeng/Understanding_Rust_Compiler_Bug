{"sha": "dce86910a33ed9132a1662216b55e7d21a14f9fa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGNlODY5MTBhMzNlZDkxMzJhMTY2MjIxNmI1NWU3ZDIxYTE0ZjlmYQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2008-08-05T08:17:24Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2008-08-05T08:17:24Z"}, "message": "sem_res.adb (Resolve_Call): If this is a call to the predefined Abort_Task...\n\n2008-08-05  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_res.adb (Resolve_Call): If this is a call to the predefined\n\tAbort_Task, warn if the call appears within a protected operation.\n\nFrom-SVN: r138672", "tree": {"sha": "59d177de5c444c3d4604471254607bd955fbc5c6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/59d177de5c444c3d4604471254607bd955fbc5c6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dce86910a33ed9132a1662216b55e7d21a14f9fa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dce86910a33ed9132a1662216b55e7d21a14f9fa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dce86910a33ed9132a1662216b55e7d21a14f9fa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dce86910a33ed9132a1662216b55e7d21a14f9fa/comments", "author": null, "committer": null, "parents": [{"sha": "864f786316a358dd59e5ba30c128a3e8bb479942", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/864f786316a358dd59e5ba30c128a3e8bb479942", "html_url": "https://github.com/Rust-GCC/gccrs/commit/864f786316a358dd59e5ba30c128a3e8bb479942"}], "stats": {"total": 45, "additions": 44, "deletions": 1}, "files": [{"sha": "914331d5e051e1499d7893576407deabe22868db", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dce86910a33ed9132a1662216b55e7d21a14f9fa/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dce86910a33ed9132a1662216b55e7d21a14f9fa/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=dce86910a33ed9132a1662216b55e7d21a14f9fa", "patch": "@@ -1,3 +1,42 @@\n+2008-08-05  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_ch3.adb: Minor reformatting\n+\n+\t* checks.adb: Minor reformatting\n+\n+2008-08-05  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* tbuild.ads (New_External_Name): Update spec to reflect relaxed\n+\trestriction on Prefix.\n+\n+2008-08-05  Jerome Lambourg  <lambourg@adacore.com>\n+\n+\t* g-comlin.adb (Sort_Sections, Group_Switches): New/Modified internal\n+\tmethods needed to handle switch sections when building a command line.\n+\t(Define_Section, Add_Switch, Remove_Switch, Is_New_Section,\n+\tCurrent_Section): New public methods or methods modified to handle\n+\tbuilding command lines with sections.\n+\t(Set_Command_Line): Take into account sections when analysing a switch\n+\tstring.\n+\t(Start): Sort the switches by sections before iterating the command line\n+\telements.\n+\t\n+\t* g-comlin.ads (Define_Section, Add_Switch, Remove_Switch,\n+\tIs_New_Section, Current_Section): New methods or methods modified to\n+\thandle building command lines with sections.\n+\n+2008-08-05  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* exp_strm.adb (Build_Record_Or_Elementary_Input_Function): For access\n+\tdiscriminants, indicate that the corresponding object declaration has\n+\tno initialization, to prevent spurious warnings when the access type is\n+\tnull-excluding.\n+\n+2008-08-05  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_res.adb (Resolve_Call): If this is a call to the predefined\n+\tAbort_Task, warn if the call appears within a protected operation.\n+\n 2008-08-04  Robert Dewar  <dewar@adacore.com>\n \n \t* exp_ch4.adb (Expand_N_In): Suppress range warnings in instances"}, {"sha": "b0d46ae72b024c263d77492d9833c8922a94881a", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dce86910a33ed9132a1662216b55e7d21a14f9fa/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dce86910a33ed9132a1662216b55e7d21a14f9fa/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=dce86910a33ed9132a1662216b55e7d21a14f9fa", "patch": "@@ -5221,12 +5221,16 @@ package body Sem_Res is\n       end if;\n \n       --  Check for violation of restriction No_Specific_Termination_Handlers\n+      --  and warn on a potentially blocking call to Abort_Task.\n \n       if Is_RTE (Nam, RE_Set_Specific_Handler)\n            or else\n          Is_RTE (Nam, RE_Specific_Handler)\n       then\n          Check_Restriction (No_Specific_Termination_Handlers, N);\n+\n+      elsif Is_RTE (Nam, RE_Abort_Task) then\n+         Check_Potentially_Blocking_Operation (N);\n       end if;\n \n       --  All done, evaluate call and deal with elaboration issues\n@@ -9557,7 +9561,7 @@ package body Sem_Res is\n       --  return statement, because in that case the accessibility check\n       --  takes place after the return.\n \n-      elsif Ekind (Target_Type) in Access_Subprogram_Kind\n+      elsif Is_Access_Subprogram_Type (Target_Type)\n         and then No (Corresponding_Remote_Type (Opnd_Type))\n       then\n          if Ekind (Base_Type (Opnd_Type)) = E_Anonymous_Access_Subprogram_Type"}]}