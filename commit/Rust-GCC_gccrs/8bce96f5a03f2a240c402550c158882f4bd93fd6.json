{"sha": "8bce96f5a03f2a240c402550c158882f4bd93fd6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGJjZTk2ZjVhMDNmMmEyNDBjNDAyNTUwYzE1ODg4MmY0YmQ5M2ZkNg==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2008-01-08T13:50:14Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2008-01-08T13:50:14Z"}, "message": "re PR target/34702 (1.0 is not the inverse of 1.0 with -mrecip on x86)\n\n\tPR target/34702\n\t* doc/invoke.texi (i386 and x86-64 Options) [mrecip]: Document\n\tlimitations of reciprocal sequences on x86 targets.\n\nFrom-SVN: r131394", "tree": {"sha": "35bbc43347bb09e206a0d3c3114490d43748c818", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/35bbc43347bb09e206a0d3c3114490d43748c818"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8bce96f5a03f2a240c402550c158882f4bd93fd6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8bce96f5a03f2a240c402550c158882f4bd93fd6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8bce96f5a03f2a240c402550c158882f4bd93fd6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8bce96f5a03f2a240c402550c158882f4bd93fd6/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4eefcc98fb1656dfb49ac482a05048ec859eb51f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4eefcc98fb1656dfb49ac482a05048ec859eb51f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4eefcc98fb1656dfb49ac482a05048ec859eb51f"}], "stats": {"total": 25, "additions": 18, "deletions": 7}, "files": [{"sha": "42648c889045982799e7a6a4cc5f67195f7baf48", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bce96f5a03f2a240c402550c158882f4bd93fd6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bce96f5a03f2a240c402550c158882f4bd93fd6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8bce96f5a03f2a240c402550c158882f4bd93fd6", "patch": "@@ -1,3 +1,9 @@\n+2008-01-08  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/34702\n+\t* doc/invoke.texi (i386 and x86-64 Options) [mrecip]: Document\n+\tlimitations of reciprocal sequences on x86 targets.\n+\n 2008-01-08  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/34683\n@@ -15,9 +21,9 @@\n \t* config/i386/i386.md (neg<mode>2): Rename from negsf2, negdf2 and\n \tnegxf2.  Macroize expander using X87MODEF mode iterator.  Change\n \tpredicates of op0 and op1 to register_operand.\n-\t(abs<mode>2): Rename from abssf2, absdf2 and negxf2.  Macroize expander\n-\tusing X87MODEF mode iterator.  Change predicates of op0 and op1 to\n-\tregister_operand.\n+\t(abs<mode>2): Rename from abssf2, absdf2 and negxf2.  Macroize\n+\texpander using X87MODEF mode iterator.  Change predicates of\n+\top0 and op1 to register_operand.\n \t(\"*absneg<mode>2_mixed\", \"*absneg<mode>2_sse\"): Rename from\n \tcorresponding patterns and macroize using MODEF macro.  Change\n \tpredicates of op0 and op1 to register_operand and remove\n@@ -32,7 +38,7 @@\n \t* config/i386/sse.md (negv4sf2, absv4sf2, neg2vdf2, absv2df2):\n \tChange predicate of op1 to register_operand.\n \t* config/i386/i386.c (ix86_expand_fp_absneg_operator): Remove support\n-\tfor memory operands.2008-01-07  Richard Guenther  <rguenther@suse.de>\n+\tfor memory operands.\n \n 2008-01-07  Nathan Froyd  <froydnj@codesourcery.com>\n "}, {"sha": "b48ba2ea8b242455024f54faa89689aa8b4cf1fe", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bce96f5a03f2a240c402550c158882f4bd93fd6/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bce96f5a03f2a240c402550c158882f4bd93fd6/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=8bce96f5a03f2a240c402550c158882f4bd93fd6", "patch": "@@ -10647,9 +10647,14 @@ or @code{remainder} built-in functions: see @ref{Other Builtins} for details.\n @item -mrecip\n @opindex mrecip\n This option will enable GCC to use RCPSS and RSQRTSS instructions (and their\n-vectorized variants RCPPS and RSQRTPS) instead of DIVSS and SQRTSS (and their\n-vectorized variants).  These instructions will be generated only when\n-@option{-funsafe-math-optimizations} is enabled.\n+vectorized variants RCPPS and RSQRTPS) with additional Newton-Rhapson step\n+to increase precision instead of DIVSS and SQRTSS (and their vectorized\n+variants) for single precision floating point arguments.  These instructions\n+are generated only when @option{-funsafe-math-optimizations} is enabled\n+together with @option{-finite-math-only} and @option{-fno-trapping-math}.\n+Note that while the throughput of the sequence is higher than the throughput\n+of the non-reciprocal instruction, the precision of the sequence can be\n+decreased up to 2 ulp (i.e. the inverse of 1.0 equals 0.99999994).\n \n @item -mveclibabi=@var{type}\n @opindex mveclibabi"}]}