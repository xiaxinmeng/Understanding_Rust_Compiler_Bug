{"sha": "27534649ab6bed76c2839f2874849a5ddd48251a", "node_id": "C_kwDOANBUbNoAKDI3NTM0NjQ5YWI2YmVkNzZjMjgzOWYyODc0ODQ5YTVkZGQ0ODI1MWE", "commit": {"author": {"name": "Doug Rupp", "email": "rupp@adacore.com", "date": "2021-07-12T20:21:45Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2021-09-22T15:01:47Z"}, "message": "[Ada] VxWorks inconsistent use of return type (BOOL)\n\ngcc/ada/\n\n\t* libgnarl/s-vxwext.ads (BOOL): New int type.\n\t(Interrupt_Context): Change return type to BOOL.\n\t* libgnarl/s-vxwext__kernel.ads: Likewise.\n\t* libgnarl/s-vxwext__rtp-smp.adb: Likewise.\n\t* libgnarl/s-vxwext__rtp.adb: Likewise.\n\t* libgnarl/s-vxwext__rtp.ads: Likewise.\n\t* libgnarl/s-osinte__vxworks.adb (Interrupt_Context): Change\n\treturn type to BOOL.\n\t* libgnarl/s-osinte__vxworks.ads (BOOL) New subtype.\n\t(taskIsSuspended): Change return type to BOOL.\n\t(Interrupt_Context): Change return type to BOOL. Adjust comments\n\taccordingly.\n\t* libgnarl/s-taprop__vxworks.adb (System.VxWorks.Ext.BOOL):\n\tuse type.\n\t(Is_Task_Context): Test Interrupt_Context against 0.\n\t* libgnat/i-vxwork.ads (BOOL): New int.\n\t(intContext): Change return type to BOOL. Adjust comments.\n\t* libgnat/i-vxwork__x86.ads: Likewise.", "tree": {"sha": "cfdc65397c31116b16a3c49d0efa81ce34c1ac69", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cfdc65397c31116b16a3c49d0efa81ce34c1ac69"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/27534649ab6bed76c2839f2874849a5ddd48251a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27534649ab6bed76c2839f2874849a5ddd48251a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/27534649ab6bed76c2839f2874849a5ddd48251a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27534649ab6bed76c2839f2874849a5ddd48251a/comments", "author": {"login": "Cementitious", "id": 115579865, "node_id": "U_kgDOBuOb2Q", "avatar_url": "https://avatars.githubusercontent.com/u/115579865?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Cementitious", "html_url": "https://github.com/Cementitious", "followers_url": "https://api.github.com/users/Cementitious/followers", "following_url": "https://api.github.com/users/Cementitious/following{/other_user}", "gists_url": "https://api.github.com/users/Cementitious/gists{/gist_id}", "starred_url": "https://api.github.com/users/Cementitious/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Cementitious/subscriptions", "organizations_url": "https://api.github.com/users/Cementitious/orgs", "repos_url": "https://api.github.com/users/Cementitious/repos", "events_url": "https://api.github.com/users/Cementitious/events{/privacy}", "received_events_url": "https://api.github.com/users/Cementitious/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "920e43ee2143c2dbe71d0117243ef53363396ee1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/920e43ee2143c2dbe71d0117243ef53363396ee1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/920e43ee2143c2dbe71d0117243ef53363396ee1"}], "stats": {"total": 53, "additions": 35, "deletions": 18}, "files": [{"sha": "677cd608c3b3df40f5d112d94a97428e2420851d", "filename": "gcc/ada/libgnarl/s-osinte__vxworks.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27534649ab6bed76c2839f2874849a5ddd48251a/gcc%2Fada%2Flibgnarl%2Fs-osinte__vxworks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27534649ab6bed76c2839f2874849a5ddd48251a/gcc%2Fada%2Flibgnarl%2Fs-osinte__vxworks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnarl%2Fs-osinte__vxworks.adb?ref=27534649ab6bed76c2839f2874849a5ddd48251a", "patch": "@@ -203,7 +203,7 @@ package body System.OS_Interface is\n    -- Interrupt_Context --\n    -----------------------\n \n-   function Interrupt_Context return int is\n+   function Interrupt_Context return BOOL is\n    begin\n       return System.VxWorks.Ext.Interrupt_Context;\n    end Interrupt_Context;"}, {"sha": "d4ed4795b9d3e8daf035bc2f778abe75fa94b60c", "filename": "gcc/ada/libgnarl/s-osinte__vxworks.ads", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27534649ab6bed76c2839f2874849a5ddd48251a/gcc%2Fada%2Flibgnarl%2Fs-osinte__vxworks.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27534649ab6bed76c2839f2874849a5ddd48251a/gcc%2Fada%2Flibgnarl%2Fs-osinte__vxworks.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnarl%2Fs-osinte__vxworks.ads?ref=27534649ab6bed76c2839f2874849a5ddd48251a", "patch": "@@ -57,6 +57,7 @@ package System.OS_Interface is\n    type unsigned_long_long is mod 2 ** long_long'Size;\n    type size_t             is mod 2 ** Standard'Address_Size;\n \n+   subtype BOOL            is System.VxWorks.Ext.BOOL;\n    subtype vx_freq_t       is System.VxWorks.Ext.vx_freq_t;\n \n    -----------\n@@ -307,7 +308,7 @@ package System.OS_Interface is\n    function taskResume (tid : t_id) return int;\n    pragma Import (C, taskResume, \"taskResume\");\n \n-   function taskIsSuspended (tid : t_id) return int;\n+   function taskIsSuspended (tid : t_id) return BOOL;\n    pragma Import (C, taskIsSuspended, \"taskIsSuspended\");\n \n    function taskDelay (ticks : int) return int;\n@@ -489,10 +490,10 @@ package System.OS_Interface is\n    --  which is invoked after the OS has saved enough context for a high-level\n    --  language routine to be safely invoked.\n \n-   function Interrupt_Context return int;\n+   function Interrupt_Context return BOOL;\n    pragma Inline (Interrupt_Context);\n-   --  Return 1 if executing in an interrupt context; return 0 if executing in\n-   --  a task context.\n+   --  Return 1 (TRUE) if executing in an interrupt context;\n+   --  return 0 (FALSE) if executing in a task context.\n \n    function Interrupt_Number_To_Vector (intNum : int) return Interrupt_Vector;\n    pragma Inline (Interrupt_Number_To_Vector);"}, {"sha": "f6687126da0c8a88e9016d7274a83c538c0f9c05", "filename": "gcc/ada/libgnarl/s-taprop__vxworks.adb", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27534649ab6bed76c2839f2874849a5ddd48251a/gcc%2Fada%2Flibgnarl%2Fs-taprop__vxworks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27534649ab6bed76c2839f2874849a5ddd48251a/gcc%2Fada%2Flibgnarl%2Fs-taprop__vxworks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnarl%2Fs-taprop__vxworks.adb?ref=27534649ab6bed76c2839f2874849a5ddd48251a", "patch": "@@ -62,9 +62,10 @@ package body System.Task_Primitives.Operations is\n    use System.Tasking;\n    use System.OS_Interface;\n    use System.Parameters;\n-   use type System.VxWorks.Ext.t_id;\n    use type Interfaces.C.int;\n    use type System.OS_Interface.unsigned;\n+   use type System.VxWorks.Ext.t_id;\n+   use type System.VxWorks.Ext.BOOL;\n \n    subtype int is System.OS_Interface.int;\n    subtype unsigned is System.OS_Interface.unsigned;\n@@ -1304,7 +1305,7 @@ package body System.Task_Primitives.Operations is\n \n    function Is_Task_Context return Boolean is\n    begin\n-      return System.OS_Interface.Interrupt_Context /= 1;\n+      return System.OS_Interface.Interrupt_Context = 0;\n    end Is_Task_Context;\n \n    ----------------"}, {"sha": "15a5683d45541c2c21e731492d33000c40a9b846", "filename": "gcc/ada/libgnarl/s-vxwext.ads", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27534649ab6bed76c2839f2874849a5ddd48251a/gcc%2Fada%2Flibgnarl%2Fs-vxwext.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27534649ab6bed76c2839f2874849a5ddd48251a/gcc%2Fada%2Flibgnarl%2Fs-vxwext.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnarl%2Fs-vxwext.ads?ref=27534649ab6bed76c2839f2874849a5ddd48251a", "patch": "@@ -46,6 +46,9 @@ package System.VxWorks.Ext is\n    subtype int is Interfaces.C.int;\n    subtype unsigned is Interfaces.C.unsigned;\n \n+   type BOOL is new int;\n+   --  Equivalent of the C type BOOL\n+\n    type vx_freq_t is new unsigned;\n    --  Equivalent of the C type _Vx_freq_t\n \n@@ -66,7 +69,7 @@ package System.VxWorks.Ext is\n       Parameter : System.Address := System.Null_Address) return int;\n    pragma Import (C, Interrupt_Connect, \"intConnect\");\n \n-   function Interrupt_Context return int;\n+   function Interrupt_Context return BOOL;\n    pragma Import (C, Interrupt_Context, \"intContext\");\n \n    function Interrupt_Number_To_Vector"}, {"sha": "71c41e42d568fa9a24d7a39837b23094fb093e08", "filename": "gcc/ada/libgnarl/s-vxwext__kernel.ads", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27534649ab6bed76c2839f2874849a5ddd48251a/gcc%2Fada%2Flibgnarl%2Fs-vxwext__kernel.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27534649ab6bed76c2839f2874849a5ddd48251a/gcc%2Fada%2Flibgnarl%2Fs-vxwext__kernel.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnarl%2Fs-vxwext__kernel.ads?ref=27534649ab6bed76c2839f2874849a5ddd48251a", "patch": "@@ -45,6 +45,9 @@ package System.VxWorks.Ext is\n    subtype int is Interfaces.C.int;\n    subtype unsigned is Interfaces.C.unsigned;\n \n+   type BOOL is new int;\n+   --  Equivalent of the C type BOOL\n+\n    type vx_freq_t is new unsigned;\n    --  Equivalent of the C type _Vx_freq_t\n \n@@ -65,7 +68,7 @@ package System.VxWorks.Ext is\n       Parameter : System.Address := System.Null_Address) return int;\n    pragma Import (C, Interrupt_Connect, \"intConnect\");\n \n-   function Interrupt_Context return int;\n+   function Interrupt_Context return BOOL;\n    pragma Import (C, Interrupt_Context, \"intContext\");\n \n    function Interrupt_Number_To_Vector"}, {"sha": "5119a763b12eeb7064f4eb016ba995b09a228458", "filename": "gcc/ada/libgnarl/s-vxwext__rtp-smp.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27534649ab6bed76c2839f2874849a5ddd48251a/gcc%2Fada%2Flibgnarl%2Fs-vxwext__rtp-smp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27534649ab6bed76c2839f2874849a5ddd48251a/gcc%2Fada%2Flibgnarl%2Fs-vxwext__rtp-smp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnarl%2Fs-vxwext__rtp-smp.adb?ref=27534649ab6bed76c2839f2874849a5ddd48251a", "patch": "@@ -72,7 +72,7 @@ package body System.VxWorks.Ext is\n    -- Interrupt_Context --\n    -----------------------\n \n-   function Interrupt_Context return int is\n+   function Interrupt_Context return BOOL is\n    begin\n       --  For RTPs, never in an interrupt context\n "}, {"sha": "473e975e99785fabb5a0b826ad95c047876c3515", "filename": "gcc/ada/libgnarl/s-vxwext__rtp.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27534649ab6bed76c2839f2874849a5ddd48251a/gcc%2Fada%2Flibgnarl%2Fs-vxwext__rtp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27534649ab6bed76c2839f2874849a5ddd48251a/gcc%2Fada%2Flibgnarl%2Fs-vxwext__rtp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnarl%2Fs-vxwext__rtp.adb?ref=27534649ab6bed76c2839f2874849a5ddd48251a", "patch": "@@ -72,7 +72,7 @@ package body System.VxWorks.Ext is\n    -- Interrupt_Context --\n    -----------------------\n \n-   function Interrupt_Context return int is\n+   function Interrupt_Context return BOOL is\n    begin\n       --  For RTPs, never in an interrupt context\n "}, {"sha": "7e3a8bad9d73e46303711d2353ce1dace819bcc3", "filename": "gcc/ada/libgnarl/s-vxwext__rtp.ads", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27534649ab6bed76c2839f2874849a5ddd48251a/gcc%2Fada%2Flibgnarl%2Fs-vxwext__rtp.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27534649ab6bed76c2839f2874849a5ddd48251a/gcc%2Fada%2Flibgnarl%2Fs-vxwext__rtp.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnarl%2Fs-vxwext__rtp.ads?ref=27534649ab6bed76c2839f2874849a5ddd48251a", "patch": "@@ -45,6 +45,9 @@ package System.VxWorks.Ext is\n    subtype int is Interfaces.C.int;\n    subtype unsigned is Interfaces.C.unsigned;\n \n+   type BOOL is new int;\n+   --  Equivalent of the C type BOOL\n+\n    type vx_freq_t is new unsigned;\n    --  Equivalent of the C type _Vx_freq_t\n \n@@ -65,7 +68,7 @@ package System.VxWorks.Ext is\n       Parameter : System.Address := System.Null_Address) return int;\n    pragma Convention (C, Interrupt_Connect);\n \n-   function Interrupt_Context return int;\n+   function Interrupt_Context return BOOL;\n    pragma Convention (C, Interrupt_Context);\n \n    function Interrupt_Number_To_Vector"}, {"sha": "0ba1e6e28997f0460486b4ba83948e9e87100211", "filename": "gcc/ada/libgnat/i-vxwork.ads", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27534649ab6bed76c2839f2874849a5ddd48251a/gcc%2Fada%2Flibgnat%2Fi-vxwork.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27534649ab6bed76c2839f2874849a5ddd48251a/gcc%2Fada%2Flibgnat%2Fi-vxwork.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fi-vxwork.ads?ref=27534649ab6bed76c2839f2874849a5ddd48251a", "patch": "@@ -133,6 +133,9 @@ package Interfaces.VxWorks is\n    OK    : constant STATUS := 0;\n    ERROR : constant STATUS := -1;\n \n+   type BOOL is new int;\n+   --  Equivalent of the C type BOOL\n+\n    type VOIDFUNCPTR is access procedure (parameter : System.Address);\n    type Interrupt_Vector is new System.Address;\n    type Exception_Vector is new System.Address;\n@@ -145,9 +148,9 @@ package Interfaces.VxWorks is\n    --  The routine generates a wrapper around the user handler to save and\n    --  restore context\n \n-   function intContext return int;\n-   --  Binding to the C routine intContext. This function returns 1 only if the\n-   --  current execution state is in interrupt context.\n+   function intContext return BOOL;\n+   --  Binding to the C routine intContext. This function returns 1 (TRUE)\n+   --  only if the current execution state is in interrupt context.\n \n    function intVecGet\n      (Vector : Interrupt_Vector) return VOIDFUNCPTR;"}, {"sha": "659167f75cea53f17463163af46819be59cca08c", "filename": "gcc/ada/libgnat/i-vxwork__x86.ads", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27534649ab6bed76c2839f2874849a5ddd48251a/gcc%2Fada%2Flibgnat%2Fi-vxwork__x86.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27534649ab6bed76c2839f2874849a5ddd48251a/gcc%2Fada%2Flibgnat%2Fi-vxwork__x86.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fi-vxwork__x86.ads?ref=27534649ab6bed76c2839f2874849a5ddd48251a", "patch": "@@ -128,6 +128,9 @@ package Interfaces.VxWorks is\n    OK    : constant STATUS := 0;\n    ERROR : constant STATUS := -1;\n \n+   type BOOL is new int;\n+   --  Equivalent of the C type BOOL\n+\n    type VOIDFUNCPTR is access procedure (parameter : System.Address);\n    type Interrupt_Vector is new System.Address;\n    type Exception_Vector is new System.Address;\n@@ -140,9 +143,9 @@ package Interfaces.VxWorks is\n    --  The routine generates a wrapper around the user handler to save and\n    --  restore context\n \n-   function intContext return int;\n-   --  Binding to the C routine intContext. This function returns 1 only if the\n-   --  current execution state is in interrupt context.\n+   function intContext return BOOL;\n+   --  Binding to the C routine intContext. This function returns 1 (TRUE)\n+   --  only if the current execution state is in interrupt context.\n \n    function intVecGet\n      (Vector : Interrupt_Vector) return VOIDFUNCPTR;"}]}