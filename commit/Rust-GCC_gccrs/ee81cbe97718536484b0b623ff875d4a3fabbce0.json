{"sha": "ee81cbe97718536484b0b623ff875d4a3fabbce0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWU4MWNiZTk3NzE4NTM2NDg0YjBiNjIzZmY4NzVkNGEzZmFiYmNlMA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-06-14T12:46:56Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-06-14T12:46:56Z"}, "message": "[multiple changes]\n\n2010-06-14  Pascal Obry  <obry@adacore.com>\n\n\t* s-finimp.adb: Fix typo.\n\t* raise.h: Remove duplicate blank line.\n\n2010-06-14  Vincent Celier  <celier@adacore.com>\n\n\t* prj-nmsc.adb (Add_Sources): Always set the object file and the\n\tswitches file names, as the configuration of the language may change\n\tin an extending project.\n\t(Process_Naming_Scheme): For sources of projects that are extended, set\n\tthe configuration of the language from the highest extending project\n\twhere the language is declared.\n\n2010-06-14  Gary Dismukes  <dismukes@adacore.com>\n\n\t* sem_res.adb (Resolve_Call): For infinite recursion check, test\n\twhether the called subprogram is inherited from a containing subprogram.\n\t(Same_Or_Aliased_Subprograms): New function\n\nFrom-SVN: r160733", "tree": {"sha": "4ff6cbab8713c7b9893c800893dc57cb255b68fc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4ff6cbab8713c7b9893c800893dc57cb255b68fc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ee81cbe97718536484b0b623ff875d4a3fabbce0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee81cbe97718536484b0b623ff875d4a3fabbce0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ee81cbe97718536484b0b623ff875d4a3fabbce0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee81cbe97718536484b0b623ff875d4a3fabbce0/comments", "author": null, "committer": null, "parents": [{"sha": "a40520ecc5ef565405dc8a3dcd9f5070c5dea5d3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a40520ecc5ef565405dc8a3dcd9f5070c5dea5d3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a40520ecc5ef565405dc8a3dcd9f5070c5dea5d3"}], "stats": {"total": 95, "additions": 85, "deletions": 10}, "files": [{"sha": "434bdb791786390972efb476ad10f2d3c268d00d", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee81cbe97718536484b0b623ff875d4a3fabbce0/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee81cbe97718536484b0b623ff875d4a3fabbce0/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=ee81cbe97718536484b0b623ff875d4a3fabbce0", "patch": "@@ -1,3 +1,23 @@\n+2010-06-14  Pascal Obry  <obry@adacore.com>\n+\n+\t* s-finimp.adb: Fix typo.\n+\t* raise.h: Remove duplicate blank line.\n+\n+2010-06-14  Vincent Celier  <celier@adacore.com>\n+\n+\t* prj-nmsc.adb (Add_Sources): Always set the object file and the\n+\tswitches file names, as the configuration of the language may change\n+\tin an extending project.\n+\t(Process_Naming_Scheme): For sources of projects that are extended, set\n+\tthe configuration of the language from the highest extending project\n+\twhere the language is declared.\n+\n+2010-06-14  Gary Dismukes  <dismukes@adacore.com>\n+\n+\t* sem_res.adb (Resolve_Call): For infinite recursion check, test\n+\twhether the called subprogram is inherited from a containing subprogram.\n+\t(Same_Or_Aliased_Subprograms): New function\n+\n 2010-06-14  Ed Schonberg  <schonberg@adacore.com>\n \n \t* sem_ch8.adb (End_Use_Type): Before indicating that an operator is not"}, {"sha": "7dc8ad3250f0be2a3966dc89f7ca4e1d51ab9465", "filename": "gcc/ada/prj-nmsc.adb", "status": "modified", "additions": 42, "deletions": 5, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee81cbe97718536484b0b623ff875d4a3fabbce0/gcc%2Fada%2Fprj-nmsc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee81cbe97718536484b0b623ff875d4a3fabbce0/gcc%2Fada%2Fprj-nmsc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-nmsc.adb?ref=ee81cbe97718536484b0b623ff875d4a3fabbce0", "patch": "@@ -736,6 +736,9 @@ package body Prj.Nmsc is\n       Id.Dep_Name            := Dependency_Name\n                                   (File_Name, Lang_Id.Config.Dependency_Kind);\n       Id.Naming_Exception    := Naming_Exception;\n+      Id.Object              := Object_Name\n+                                  (File_Name, Config.Object_File_Suffix);\n+      Id.Switches            := Switches_Name (File_Name);\n \n       --  Add the source id to the Unit_Sources_HT hash table, if the unit name\n       --  is not null.\n@@ -767,11 +770,6 @@ package body Prj.Nmsc is\n          Override_Kind (Id, Kind);\n       end if;\n \n-      if Is_Compilable (Id) and then Config.Object_Generated then\n-         Id.Object   := Object_Name (File_Name, Config.Object_File_Suffix);\n-         Id.Switches := Switches_Name (File_Name);\n-      end if;\n-\n       if Path /= No_Path_Information then\n          Id.Path := Path;\n          Source_Paths_Htable.Set (Data.Tree.Source_Paths_HT, Path.Name, Id);\n@@ -7488,6 +7486,45 @@ package body Prj.Nmsc is\n       Initialize (Data, Tree => Tree, Flags => Flags);\n       Check_All_Projects (Root_Project, Data, Imported_First => True);\n       Free (Data);\n+\n+      --  Adjust language configs for projects that are extended\n+\n+      declare\n+         List : Project_List;\n+         Proj : Project_Id;\n+         Exte : Project_Id;\n+         Lang : Language_Ptr;\n+         Elng : Language_Ptr;\n+\n+      begin\n+         List := Tree.Projects;\n+         while List /= null loop\n+            Proj := List.Project;\n+            Exte := Proj;\n+            while Exte.Extended_By /= No_Project loop\n+               Exte := Exte.Extended_By;\n+            end loop;\n+\n+            if Exte /= Proj then\n+               Lang := Proj.Languages;\n+\n+               if Lang /= No_Language_Index then\n+                  loop\n+                     Elng := Get_Language_From_Name\n+                       (Exte, Get_Name_String (Lang.Name));\n+                     exit when Elng /= No_Language_Index;\n+                     Exte := Exte.Extends;\n+                  end loop;\n+\n+                  if Elng /= Lang then\n+                     Lang.Config := Elng.Config;\n+                  end if;\n+               end if;\n+            end if;\n+\n+            List := List.Next;\n+         end loop;\n+      end;\n    end Process_Naming_Scheme;\n \n end Prj.Nmsc;"}, {"sha": "1321518ee7b6bfed9df7d03a7395c709e5984bd7", "filename": "gcc/ada/raise.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee81cbe97718536484b0b623ff875d4a3fabbce0/gcc%2Fada%2Fraise.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee81cbe97718536484b0b623ff875d4a3fabbce0/gcc%2Fada%2Fraise.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fraise.h?ref=ee81cbe97718536484b0b623ff875d4a3fabbce0", "patch": "@@ -29,7 +29,6 @@\n  *                                                                          *\n  ****************************************************************************/\n \n-\n /* C counterparts of what System.Standard_Library defines.  */\n \n typedef unsigned Exception_Code;"}, {"sha": "050f79995eca61463a21f2bc7654f22c7c8de5d9", "filename": "gcc/ada/s-finimp.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee81cbe97718536484b0b623ff875d4a3fabbce0/gcc%2Fada%2Fs-finimp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee81cbe97718536484b0b623ff875d4a3fabbce0/gcc%2Fada%2Fs-finimp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-finimp.adb?ref=ee81cbe97718536484b0b623ff875d4a3fabbce0", "patch": "@@ -332,10 +332,10 @@ package body System.Finalization_Implementation is\n       P : Finalizable_Ptr := L;\n       Q : Finalizable_Ptr;\n \n-      type Fake_Exception_Occurence is record\n+      type Fake_Exception_Occurrence is record\n          Id : Exception_Id;\n       end record;\n-      type Ptr is access all Fake_Exception_Occurence;\n+      type Ptr is access all Fake_Exception_Occurrence;\n \n       function To_Ptr is new\n         Ada.Unchecked_Conversion (Exception_Occurrence_Access, Ptr);"}, {"sha": "14c02100e93756541b323d417e977250ae59332c", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 21, "deletions": 2, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee81cbe97718536484b0b623ff875d4a3fabbce0/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee81cbe97718536484b0b623ff875d4a3fabbce0/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=ee81cbe97718536484b0b623ff875d4a3fabbce0", "patch": "@@ -4763,6 +4763,25 @@ package body Sem_Res is\n       Scop    : Entity_Id;\n       Rtype   : Entity_Id;\n \n+      function Same_Or_Aliased_Subprograms\n+        (S : Entity_Id;\n+         E : Entity_Id) return Boolean;\n+      --  Returns True if the subprogram entity S is the same as E or else\n+      --  S is an alias of E.\n+\n+      function Same_Or_Aliased_Subprograms\n+        (S : Entity_Id;\n+         E : Entity_Id) return Boolean\n+      is\n+         Subp_Alias : constant Entity_Id := Alias (S);\n+\n+      begin\n+         return S = E\n+           or else (Present (Subp_Alias) and then Subp_Alias = E);\n+      end Same_Or_Aliased_Subprograms;\n+\n+   --  Start of processing for Resolve_Call\n+\n    begin\n       --  The context imposes a unique interpretation with type Typ on a\n       --  procedure or function call. Find the entity of the subprogram that\n@@ -5095,7 +5114,7 @@ package body Sem_Res is\n          --  Issue warning for possible infinite recursion in the absence\n          --  of the No_Recursion restriction.\n \n-         if Nam = Scop\n+         if Same_Or_Aliased_Subprograms (Nam, Scop)\n            and then not Restriction_Active (No_Recursion)\n            and then Check_Infinite_Recursion (N)\n          then\n@@ -5112,7 +5131,7 @@ package body Sem_Res is\n \n          else\n             Scope_Loop : while Scop /= Standard_Standard loop\n-               if Nam = Scop then\n+               if Same_Or_Aliased_Subprograms (Nam, Scop) then\n \n                   --  Although in general case, recursion is not statically\n                   --  checkable, the case of calling an immediately containing"}]}