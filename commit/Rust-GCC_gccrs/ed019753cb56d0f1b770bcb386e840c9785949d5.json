{"sha": "ed019753cb56d0f1b770bcb386e840c9785949d5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWQwMTk3NTNjYjU2ZDBmMWI3NzBiY2IzODZlODQwYzk3ODU5NDlkNQ==", "commit": {"author": {"name": "Francois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2015-08-26T12:37:42Z"}, "committer": {"name": "Fran\u00e7ois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2015-08-26T12:37:42Z"}, "message": "re PR fortran/29600 ([F03] MINLOC and MAXLOC take an optional KIND argument)\n\n\tPR fortran/29600\n\n\t* Makefile.am: Add generated/shape_i{1,2}.c\n\t* Makefile.in: Regenerate.\n\t* generated/shape_i1.c: New generated file.\n\t* generated/shape_i2.c: New generated file.\n\t* generated/shape_i4.c: Regenerate.\n\t* generated/shape_i8.c: Regenerate.\n\t* generated/shape_i16.c: Regenerate.\n\t* gfortran.map (GFORTRAN_1.7): Add _gfortran_shape_{1,2}.\n\t* m4/shape.m4: Fix parameter type.\n\n\t* gfortran.dg/shape_8.f90: New test.\n\nFrom-SVN: r227210", "tree": {"sha": "f1c84026400bff374b6122e5c8ae844e7d2a18ad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f1c84026400bff374b6122e5c8ae844e7d2a18ad"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ed019753cb56d0f1b770bcb386e840c9785949d5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed019753cb56d0f1b770bcb386e840c9785949d5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ed019753cb56d0f1b770bcb386e840c9785949d5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed019753cb56d0f1b770bcb386e840c9785949d5/comments", "author": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "485adf79b5e5fa8808fdca1dbc2e818902dfa081", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/485adf79b5e5fa8808fdca1dbc2e818902dfa081", "html_url": "https://github.com/Rust-GCC/gccrs/commit/485adf79b5e5fa8808fdca1dbc2e818902dfa081"}], "stats": {"total": 208, "additions": 199, "deletions": 9}, "files": [{"sha": "ac549889d7e59f254f96dc0979d33655b48b5e16", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed019753cb56d0f1b770bcb386e840c9785949d5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed019753cb56d0f1b770bcb386e840c9785949d5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ed019753cb56d0f1b770bcb386e840c9785949d5", "patch": "@@ -1,3 +1,8 @@\n+2015-08-26  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n+\n+\tPR fortran/29600\n+\t* gfortran.dg/shape_8.f90: New test.\n+\n 2015-08-25  Marek Polacek  <polacek@redhat.com>\n \n \tPR middle-end/67330"}, {"sha": "51c6e552b51afadc40e20cc989e552b593d990a0", "filename": "gcc/testsuite/gfortran.dg/shape_8.f90", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed019753cb56d0f1b770bcb386e840c9785949d5/gcc%2Ftestsuite%2Fgfortran.dg%2Fshape_8.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed019753cb56d0f1b770bcb386e840c9785949d5/gcc%2Ftestsuite%2Fgfortran.dg%2Fshape_8.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fshape_8.f90?ref=ed019753cb56d0f1b770bcb386e840c9785949d5", "patch": "@@ -0,0 +1,15 @@\n+! { dg-do run }\n+!\n+! Check that we can use SHAPE with optional kind argument\n+!\n+program test\n+   implicit none\n+   real, allocatable :: x(:,:)\n+\n+   allocate(x(2,5))\n+   if (any(shape(x) /= [ 2, 5 ])) call abort\n+   if (any(shape(x,kind=1) /= [ 2, 5 ])) call abort\n+   if (any(shape(x,kind=2) /= [ 2, 5 ])) call abort\n+   if (any(shape(x,kind=4) /= [ 2, 5 ])) call abort\n+   if (any(shape(x,kind=8) /= [ 2, 5 ])) call abort\n+end"}, {"sha": "65e0099a0cd4d2bee4e889dab522a65360b6cc76", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed019753cb56d0f1b770bcb386e840c9785949d5/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed019753cb56d0f1b770bcb386e840c9785949d5/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=ed019753cb56d0f1b770bcb386e840c9785949d5", "patch": "@@ -1,3 +1,16 @@\n+2015-08-26  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n+\n+\tPR fortran/29600\n+\t* Makefile.am: Add generated/shape_i{1,2}.c\n+\t* Makefile.in: Regenerate.\n+\t* generated/shape_i1.c: New generated file.\n+\t* generated/shape_i2.c: New generated file.\n+\t* generated/shape_i4.c: Regenerate.\n+\t* generated/shape_i8.c: Regenerate.\n+\t* generated/shape_i16.c: Regenerate.\n+\t* gfortran.map (GFORTRAN_1.7): Add _gfortran_shape_{1,2}.\n+\t* m4/shape.m4: Fix parameter type.\n+\n 2015-08-26  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n \n \t* libgfortran.h (show_variables): Remove prototype."}, {"sha": "39d3e11d223ca9885b5d433fc50c44e6c453de16", "filename": "libgfortran/Makefile.am", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed019753cb56d0f1b770bcb386e840c9785949d5/libgfortran%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed019753cb56d0f1b770bcb386e840c9785949d5/libgfortran%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FMakefile.am?ref=ed019753cb56d0f1b770bcb386e840c9785949d5", "patch": "@@ -483,6 +483,8 @@ $(srcdir)/generated/transpose_c10.c \\\n $(srcdir)/generated/transpose_c16.c\n \n i_shape_c= \\\n+$(srcdir)/generated/shape_i1.c \\\n+$(srcdir)/generated/shape_i2.c \\\n $(srcdir)/generated/shape_i4.c \\\n $(srcdir)/generated/shape_i8.c \\\n $(srcdir)/generated/shape_i16.c"}, {"sha": "7ed080cf7b0d4c006263a90596187b07a1d48a03", "filename": "libgfortran/Makefile.in", "status": "modified", "additions": 20, "deletions": 1, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed019753cb56d0f1b770bcb386e840c9785949d5/libgfortran%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed019753cb56d0f1b770bcb386e840c9785949d5/libgfortran%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FMakefile.in?ref=ed019753cb56d0f1b770bcb386e840c9785949d5", "patch": "@@ -259,7 +259,8 @@ am__objects_23 = transpose_i4.lo transpose_i8.lo transpose_i16.lo \\\n \ttranspose_r4.lo transpose_r8.lo transpose_r10.lo \\\n \ttranspose_r16.lo transpose_c4.lo transpose_c8.lo \\\n \ttranspose_c10.lo transpose_c16.lo\n-am__objects_24 = shape_i4.lo shape_i8.lo shape_i16.lo\n+am__objects_24 = shape_i1.lo shape_i2.lo shape_i4.lo shape_i8.lo \\\n+\tshape_i16.lo\n am__objects_25 = eoshift1_4.lo eoshift1_8.lo eoshift1_16.lo\n am__objects_26 = eoshift3_4.lo eoshift3_8.lo eoshift3_16.lo\n am__objects_27 = cshift1_4.lo cshift1_8.lo cshift1_16.lo\n@@ -916,6 +917,8 @@ $(srcdir)/generated/transpose_c10.c \\\n $(srcdir)/generated/transpose_c16.c\n \n i_shape_c = \\\n+$(srcdir)/generated/shape_i1.c \\\n+$(srcdir)/generated/shape_i2.c \\\n $(srcdir)/generated/shape_i4.c \\\n $(srcdir)/generated/shape_i8.c \\\n $(srcdir)/generated/shape_i16.c\n@@ -1826,7 +1829,9 @@ distclean-compile:\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/set_exponent_r16.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/set_exponent_r4.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/set_exponent_r8.Plo@am__quote@\n+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/shape_i1.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/shape_i16.Plo@am__quote@\n+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/shape_i2.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/shape_i4.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/shape_i8.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/signal.Plo@am__quote@\n@@ -4016,6 +4021,20 @@ transpose_c16.lo: $(srcdir)/generated/transpose_c16.c\n @AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n @am__fastdepCC_FALSE@\t$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o transpose_c16.lo `test -f '$(srcdir)/generated/transpose_c16.c' || echo '$(srcdir)/'`$(srcdir)/generated/transpose_c16.c\n \n+shape_i1.lo: $(srcdir)/generated/shape_i1.c\n+@am__fastdepCC_TRUE@\t$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT shape_i1.lo -MD -MP -MF $(DEPDIR)/shape_i1.Tpo -c -o shape_i1.lo `test -f '$(srcdir)/generated/shape_i1.c' || echo '$(srcdir)/'`$(srcdir)/generated/shape_i1.c\n+@am__fastdepCC_TRUE@\t$(am__mv) $(DEPDIR)/shape_i1.Tpo $(DEPDIR)/shape_i1.Plo\n+@AMDEP_TRUE@@am__fastdepCC_FALSE@\tsource='$(srcdir)/generated/shape_i1.c' object='shape_i1.lo' libtool=yes @AMDEPBACKSLASH@\n+@AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n+@am__fastdepCC_FALSE@\t$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o shape_i1.lo `test -f '$(srcdir)/generated/shape_i1.c' || echo '$(srcdir)/'`$(srcdir)/generated/shape_i1.c\n+\n+shape_i2.lo: $(srcdir)/generated/shape_i2.c\n+@am__fastdepCC_TRUE@\t$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT shape_i2.lo -MD -MP -MF $(DEPDIR)/shape_i2.Tpo -c -o shape_i2.lo `test -f '$(srcdir)/generated/shape_i2.c' || echo '$(srcdir)/'`$(srcdir)/generated/shape_i2.c\n+@am__fastdepCC_TRUE@\t$(am__mv) $(DEPDIR)/shape_i2.Tpo $(DEPDIR)/shape_i2.Plo\n+@AMDEP_TRUE@@am__fastdepCC_FALSE@\tsource='$(srcdir)/generated/shape_i2.c' object='shape_i2.lo' libtool=yes @AMDEPBACKSLASH@\n+@AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n+@am__fastdepCC_FALSE@\t$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o shape_i2.lo `test -f '$(srcdir)/generated/shape_i2.c' || echo '$(srcdir)/'`$(srcdir)/generated/shape_i2.c\n+\n shape_i4.lo: $(srcdir)/generated/shape_i4.c\n @am__fastdepCC_TRUE@\t$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT shape_i4.lo -MD -MP -MF $(DEPDIR)/shape_i4.Tpo -c -o shape_i4.lo `test -f '$(srcdir)/generated/shape_i4.c' || echo '$(srcdir)/'`$(srcdir)/generated/shape_i4.c\n @am__fastdepCC_TRUE@\t$(am__mv) $(DEPDIR)/shape_i4.Tpo $(DEPDIR)/shape_i4.Plo"}, {"sha": "6ac8e14c9b907cd83e73a61e78ccdf97a62b5e19", "filename": "libgfortran/generated/shape_i1.c", "status": "added", "additions": 67, "deletions": 0, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed019753cb56d0f1b770bcb386e840c9785949d5/libgfortran%2Fgenerated%2Fshape_i1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed019753cb56d0f1b770bcb386e840c9785949d5/libgfortran%2Fgenerated%2Fshape_i1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fshape_i1.c?ref=ed019753cb56d0f1b770bcb386e840c9785949d5", "patch": "@@ -0,0 +1,67 @@\n+/* Implementation of the SHAPE intrinsic\n+   Copyright (C) 2002-2015 Free Software Foundation, Inc.\n+   Contributed by Paul Brook <paul@nowt.org>\n+\n+This file is part of the GNU Fortran runtime library (libgfortran).\n+\n+Libgfortran is free software; you can redistribute it and/or\n+modify it under the terms of the GNU General Public\n+License as published by the Free Software Foundation; either\n+version 3 of the License, or (at your option) any later version.\n+\n+Libgfortran is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+Under Section 7 of GPL version 3, you are granted additional\n+permissions described in the GCC Runtime Library Exception, version\n+3.1, as published by the Free Software Foundation.\n+\n+You should have received a copy of the GNU General Public License and\n+a copy of the GCC Runtime Library Exception along with this program;\n+see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+<http://www.gnu.org/licenses/>.  */\n+\n+#include \"libgfortran.h\"\n+#include <stdlib.h>\n+#include <assert.h>\n+\n+\n+#if defined (HAVE_GFC_INTEGER_1)\n+\n+extern void shape_1 (gfc_array_i1 * const restrict ret, \n+\tconst array_t * const restrict array);\n+export_proto(shape_1);\n+\n+void\n+shape_1 (gfc_array_i1 * const restrict ret, \n+\tconst array_t * const restrict array)\n+{\n+  int n;\n+  index_type stride;\n+  index_type extent;\n+  int rank;\n+\n+  rank = GFC_DESCRIPTOR_RANK (array);\n+\n+  if (ret->base_addr == NULL)\n+    {\n+      GFC_DIMENSION_SET(ret->dim[0], 0, rank - 1, 1);\n+      ret->offset = 0;\n+      ret->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_1));\n+    }\n+\n+  stride = GFC_DESCRIPTOR_STRIDE(ret,0);\n+\n+  if (GFC_DESCRIPTOR_EXTENT(ret,0) < 1)\n+    return;\n+\n+  for (n = 0; n < rank; n++)\n+    {\n+      extent = GFC_DESCRIPTOR_EXTENT(array,n);\n+      ret->base_addr[n * stride] = extent > 0 ? extent : 0 ;\n+    }\n+}\n+\n+#endif"}, {"sha": "4cb43c8b5b1e1f54516baed32c0c6e09c47c3a11", "filename": "libgfortran/generated/shape_i16.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed019753cb56d0f1b770bcb386e840c9785949d5/libgfortran%2Fgenerated%2Fshape_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed019753cb56d0f1b770bcb386e840c9785949d5/libgfortran%2Fgenerated%2Fshape_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fshape_i16.c?ref=ed019753cb56d0f1b770bcb386e840c9785949d5", "patch": "@@ -31,12 +31,12 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #if defined (HAVE_GFC_INTEGER_16)\n \n extern void shape_16 (gfc_array_i16 * const restrict ret, \n-\tconst gfc_array_i16 * const restrict array);\n+\tconst array_t * const restrict array);\n export_proto(shape_16);\n \n void\n shape_16 (gfc_array_i16 * const restrict ret, \n-\tconst gfc_array_i16 * const restrict array)\n+\tconst array_t * const restrict array)\n {\n   int n;\n   index_type stride;"}, {"sha": "982d9ccd92ff78d4c56fa961942fa7d67de05b68", "filename": "libgfortran/generated/shape_i2.c", "status": "added", "additions": 67, "deletions": 0, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed019753cb56d0f1b770bcb386e840c9785949d5/libgfortran%2Fgenerated%2Fshape_i2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed019753cb56d0f1b770bcb386e840c9785949d5/libgfortran%2Fgenerated%2Fshape_i2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fshape_i2.c?ref=ed019753cb56d0f1b770bcb386e840c9785949d5", "patch": "@@ -0,0 +1,67 @@\n+/* Implementation of the SHAPE intrinsic\n+   Copyright (C) 2002-2015 Free Software Foundation, Inc.\n+   Contributed by Paul Brook <paul@nowt.org>\n+\n+This file is part of the GNU Fortran runtime library (libgfortran).\n+\n+Libgfortran is free software; you can redistribute it and/or\n+modify it under the terms of the GNU General Public\n+License as published by the Free Software Foundation; either\n+version 3 of the License, or (at your option) any later version.\n+\n+Libgfortran is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+Under Section 7 of GPL version 3, you are granted additional\n+permissions described in the GCC Runtime Library Exception, version\n+3.1, as published by the Free Software Foundation.\n+\n+You should have received a copy of the GNU General Public License and\n+a copy of the GCC Runtime Library Exception along with this program;\n+see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+<http://www.gnu.org/licenses/>.  */\n+\n+#include \"libgfortran.h\"\n+#include <stdlib.h>\n+#include <assert.h>\n+\n+\n+#if defined (HAVE_GFC_INTEGER_2)\n+\n+extern void shape_2 (gfc_array_i2 * const restrict ret, \n+\tconst array_t * const restrict array);\n+export_proto(shape_2);\n+\n+void\n+shape_2 (gfc_array_i2 * const restrict ret, \n+\tconst array_t * const restrict array)\n+{\n+  int n;\n+  index_type stride;\n+  index_type extent;\n+  int rank;\n+\n+  rank = GFC_DESCRIPTOR_RANK (array);\n+\n+  if (ret->base_addr == NULL)\n+    {\n+      GFC_DIMENSION_SET(ret->dim[0], 0, rank - 1, 1);\n+      ret->offset = 0;\n+      ret->base_addr = xmallocarray (rank, sizeof (GFC_INTEGER_2));\n+    }\n+\n+  stride = GFC_DESCRIPTOR_STRIDE(ret,0);\n+\n+  if (GFC_DESCRIPTOR_EXTENT(ret,0) < 1)\n+    return;\n+\n+  for (n = 0; n < rank; n++)\n+    {\n+      extent = GFC_DESCRIPTOR_EXTENT(array,n);\n+      ret->base_addr[n * stride] = extent > 0 ? extent : 0 ;\n+    }\n+}\n+\n+#endif"}, {"sha": "8a912b35b9f4c7ac711bf7298324de0746b0edba", "filename": "libgfortran/generated/shape_i4.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed019753cb56d0f1b770bcb386e840c9785949d5/libgfortran%2Fgenerated%2Fshape_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed019753cb56d0f1b770bcb386e840c9785949d5/libgfortran%2Fgenerated%2Fshape_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fshape_i4.c?ref=ed019753cb56d0f1b770bcb386e840c9785949d5", "patch": "@@ -31,12 +31,12 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #if defined (HAVE_GFC_INTEGER_4)\n \n extern void shape_4 (gfc_array_i4 * const restrict ret, \n-\tconst gfc_array_i4 * const restrict array);\n+\tconst array_t * const restrict array);\n export_proto(shape_4);\n \n void\n shape_4 (gfc_array_i4 * const restrict ret, \n-\tconst gfc_array_i4 * const restrict array)\n+\tconst array_t * const restrict array)\n {\n   int n;\n   index_type stride;"}, {"sha": "d33add63e477374835e8fc2133e7aeff773355e6", "filename": "libgfortran/generated/shape_i8.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed019753cb56d0f1b770bcb386e840c9785949d5/libgfortran%2Fgenerated%2Fshape_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed019753cb56d0f1b770bcb386e840c9785949d5/libgfortran%2Fgenerated%2Fshape_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fshape_i8.c?ref=ed019753cb56d0f1b770bcb386e840c9785949d5", "patch": "@@ -31,12 +31,12 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #if defined (HAVE_GFC_INTEGER_8)\n \n extern void shape_8 (gfc_array_i8 * const restrict ret, \n-\tconst gfc_array_i8 * const restrict array);\n+\tconst array_t * const restrict array);\n export_proto(shape_8);\n \n void\n shape_8 (gfc_array_i8 * const restrict ret, \n-\tconst gfc_array_i8 * const restrict array)\n+\tconst array_t * const restrict array)\n {\n   int n;\n   index_type stride;"}, {"sha": "5f011de68a1919533a09688cac2e0b88b46e0980", "filename": "libgfortran/gfortran.map", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed019753cb56d0f1b770bcb386e840c9785949d5/libgfortran%2Fgfortran.map", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed019753cb56d0f1b770bcb386e840c9785949d5/libgfortran%2Fgfortran.map", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgfortran.map?ref=ed019753cb56d0f1b770bcb386e840c9785949d5", "patch": "@@ -1285,6 +1285,8 @@ GFORTRAN_1.7 {\n     __ieee_exceptions_MOD_ieee_support_flag_10;\n     __ieee_exceptions_MOD_ieee_support_flag_16;\n     _gfortran_mvbits_i16;\n+    _gfortran_shape_1;\n+    _gfortran_shape_2;\n } GFORTRAN_1.6; \n \n F2C_1.0 {"}, {"sha": "e389d92f00b3e96cb47aa756a2f1f8ee3dc95cf1", "filename": "libgfortran/m4/shape.m4", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed019753cb56d0f1b770bcb386e840c9785949d5/libgfortran%2Fm4%2Fshape.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed019753cb56d0f1b770bcb386e840c9785949d5/libgfortran%2Fm4%2Fshape.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fm4%2Fshape.m4?ref=ed019753cb56d0f1b770bcb386e840c9785949d5", "patch": "@@ -32,12 +32,12 @@ include(iparm.m4)dnl\n `#if defined (HAVE_'rtype_name`)\n \n extern void shape_'rtype_kind` ('rtype` * const restrict ret, \n-\tconst 'rtype` * const restrict array);\n+\tconst array_t * const restrict array);\n export_proto(shape_'rtype_kind`);\n \n void\n shape_'rtype_kind` ('rtype` * const restrict ret, \n-\tconst 'rtype` * const restrict array)\n+\tconst array_t * const restrict array)\n {\n   int n;\n   index_type stride;"}]}