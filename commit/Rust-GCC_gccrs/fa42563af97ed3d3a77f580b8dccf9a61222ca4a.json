{"sha": "fa42563af97ed3d3a77f580b8dccf9a61222ca4a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmE0MjU2M2FmOTdlZDNkM2E3N2Y1ODBiOGRjY2Y5YTYxMjIyY2E0YQ==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2018-07-16T14:12:03Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-07-16T14:12:03Z"}, "message": "[Ada] Unnesting: handle the semantic of Storage_Pool field\n\n2018-07-16  Ed Schonberg  <schonberg@adacore.com>\n\ngcc/ada/\n\n\t* exp_unst.adb (Visit_Node): Handle the semantic of Storage_Pool field\n\tin relevant nodes: Allocate, Free, and return statements.\n\nFrom-SVN: r262725", "tree": {"sha": "280261822eb7261c36288bceb347dfdfa0cc135a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/280261822eb7261c36288bceb347dfdfa0cc135a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fa42563af97ed3d3a77f580b8dccf9a61222ca4a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa42563af97ed3d3a77f580b8dccf9a61222ca4a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fa42563af97ed3d3a77f580b8dccf9a61222ca4a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa42563af97ed3d3a77f580b8dccf9a61222ca4a/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "dbe5b438d26161111824727534ef99f4d41e39c4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dbe5b438d26161111824727534ef99f4d41e39c4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dbe5b438d26161111824727534ef99f4d41e39c4"}], "stats": {"total": 21, "additions": 20, "deletions": 1}, "files": [{"sha": "13428e986ba2851bd9fc6cea380344cc17b1f727", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa42563af97ed3d3a77f580b8dccf9a61222ca4a/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa42563af97ed3d3a77f580b8dccf9a61222ca4a/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=fa42563af97ed3d3a77f580b8dccf9a61222ca4a", "patch": "@@ -1,3 +1,8 @@\n+2018-07-16  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* exp_unst.adb (Visit_Node): Handle the semantic of Storage_Pool field\n+\tin relevant nodes: Allocate, Free, and return statements.\n+\n 2018-07-16  Ed Schonberg  <schonberg@adacore.com>\n \n \t* sem_ch12.adb (Analyze_Package_Instantiation): Handle properly an"}, {"sha": "464eaa036f8f5ade9d3e425eed4f8f9ddbf3796d", "filename": "gcc/ada/exp_unst.adb", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa42563af97ed3d3a77f580b8dccf9a61222ca4a/gcc%2Fada%2Fexp_unst.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa42563af97ed3d3a77f580b8dccf9a61222ca4a/gcc%2Fada%2Fexp_unst.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_unst.adb?ref=fa42563af97ed3d3a77f580b8dccf9a61222ca4a", "patch": "@@ -812,22 +812,36 @@ package body Exp_Unst is\n \n                --  Similarly, the following constructs include a semantic\n                --  attribute Procedure_To_Call that must be handled like\n-               --  other calls.\n+               --  other calls. Likewise for attribute Storage_Pool.\n \n                when N_Allocator\n                   | N_Extended_Return_Statement\n                   | N_Free_Statement\n                   | N_Simple_Return_Statement\n                =>\n                   declare\n+                     Pool : constant Entity_Id := Storage_Pool (N);\n                      Proc : constant Entity_Id := Procedure_To_Call (N);\n+\n                   begin\n                      if Present (Proc)\n                        and then Scope_Within (Proc, Subp)\n                        and then not Is_Imported (Proc)\n                      then\n                         Append_Unique_Call ((N, Current_Subprogram, Proc));\n                      end if;\n+\n+                     if Present (Pool)\n+                       and then not Is_Library_Level_Entity (Pool)\n+                       and then Scope_Within_Or_Same (Scope (Pool), Subp)\n+                     then\n+                        Caller := Current_Subprogram;\n+                        Callee := Enclosing_Subprogram (Pool);\n+\n+                        if Callee /= Caller then\n+                           Note_Uplevel_Ref (Pool, Empty, Caller, Callee);\n+                        end if;\n+                     end if;\n                   end;\n \n                   --  For an allocator with a qualified expression, check type"}]}