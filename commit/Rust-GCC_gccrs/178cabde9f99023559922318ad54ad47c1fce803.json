{"sha": "178cabde9f99023559922318ad54ad47c1fce803", "node_id": "C_kwDOANBUbNoAKDE3OGNhYmRlOWY5OTAyMzU1OTkyMjMxOGFkNTRhZDQ3YzFmY2U4MDM", "commit": {"author": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2022-03-09T16:09:09Z"}, "committer": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2022-03-10T11:40:11Z"}, "message": "Add missing builtin mappings for never type", "tree": {"sha": "f7d55dd5b6aab841a055dde00b3abfb637d3ae8b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f7d55dd5b6aab841a055dde00b3abfb637d3ae8b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/178cabde9f99023559922318ad54ad47c1fce803", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/178cabde9f99023559922318ad54ad47c1fce803", "html_url": "https://github.com/Rust-GCC/gccrs/commit/178cabde9f99023559922318ad54ad47c1fce803", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/178cabde9f99023559922318ad54ad47c1fce803/comments", "author": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "94990a843b6df9ff6010957d724dbb70bea94ceb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94990a843b6df9ff6010957d724dbb70bea94ceb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/94990a843b6df9ff6010957d724dbb70bea94ceb"}], "stats": {"total": 36, "additions": 32, "deletions": 4}, "files": [{"sha": "a9b4dd8ab038df480da4eb53539ea201eeaf3fc7", "filename": "gcc/rust/hir/rust-ast-lower-type.h", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/178cabde9f99023559922318ad54ad47c1fce803/gcc%2Frust%2Fhir%2Frust-ast-lower-type.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/178cabde9f99023559922318ad54ad47c1fce803/gcc%2Frust%2Fhir%2Frust-ast-lower-type.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fhir%2Frust-ast-lower-type.h?ref=178cabde9f99023559922318ad54ad47c1fce803", "patch": "@@ -291,6 +291,19 @@ class ASTLoweringType : public ASTLoweringBase\n \t\t\t       translated);\n   }\n \n+  void visit (AST::NeverType &type) override\n+  {\n+    auto crate_num = mappings->get_current_crate ();\n+    Analysis::NodeMapping mapping (crate_num, type.get_node_id (),\n+\t\t\t\t   mappings->get_next_hir_id (crate_num),\n+\t\t\t\t   mappings->get_next_localdef_id (crate_num));\n+\n+    translated = new HIR::NeverType (mapping, type.get_locus ());\n+\n+    mappings->insert_hir_type (mapping.get_crate_num (), mapping.get_hirid (),\n+\t\t\t       translated);\n+  }\n+\n   void visit (AST::TraitObjectTypeOneBound &type) override;\n \n   void visit (AST::TraitObjectType &type) override;"}, {"sha": "fd5c056725a65d21163347a6cf8dc6797ecde6fa", "filename": "gcc/rust/resolve/rust-ast-resolve-type.cc", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/178cabde9f99023559922318ad54ad47c1fce803/gcc%2Frust%2Fresolve%2Frust-ast-resolve-type.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/178cabde9f99023559922318ad54ad47c1fce803/gcc%2Frust%2Fresolve%2Frust-ast-resolve-type.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fresolve%2Frust-ast-resolve-type.cc?ref=178cabde9f99023559922318ad54ad47c1fce803", "patch": "@@ -197,6 +197,12 @@ ResolveType::visit (AST::InferredType &type)\n   ok = true;\n }\n \n+void\n+ResolveType::visit (AST::NeverType &type)\n+{\n+  ok = true;\n+}\n+\n void\n ResolveType::visit (AST::SliceType &type)\n {"}, {"sha": "e5344235879ef3c81e693b60a101c3ccb42d19c1", "filename": "gcc/rust/resolve/rust-ast-resolve-type.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/178cabde9f99023559922318ad54ad47c1fce803/gcc%2Frust%2Fresolve%2Frust-ast-resolve-type.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/178cabde9f99023559922318ad54ad47c1fce803/gcc%2Frust%2Fresolve%2Frust-ast-resolve-type.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fresolve%2Frust-ast-resolve-type.h?ref=178cabde9f99023559922318ad54ad47c1fce803", "patch": "@@ -386,6 +386,8 @@ class ResolveType : public ResolverBase\n \n   void visit (AST::InferredType &type) override;\n \n+  void visit (AST::NeverType &type) override;\n+\n   void visit (AST::RawPointerType &type) override;\n \n   void visit (AST::TraitObjectTypeOneBound &type) override;"}, {"sha": "86c159da9531b2161a1b0855390c2504f91bedb3", "filename": "gcc/rust/resolve/rust-ast-resolve.cc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/178cabde9f99023559922318ad54ad47c1fce803/gcc%2Frust%2Fresolve%2Frust-ast-resolve.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/178cabde9f99023559922318ad54ad47c1fce803/gcc%2Frust%2Fresolve%2Frust-ast-resolve.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fresolve%2Frust-ast-resolve.cc?ref=178cabde9f99023559922318ad54ad47c1fce803", "patch": "@@ -187,6 +187,7 @@ Resolver::generate_builtins ()\n   auto isize = new TyTy::ISizeType (mappings->get_next_hir_id ());\n   auto char_tyty = new TyTy::CharType (mappings->get_next_hir_id ());\n   auto str = new TyTy::StrType (mappings->get_next_hir_id ());\n+  auto never = new TyTy::NeverType (mappings->get_next_hir_id ());\n \n   MKBUILTIN_TYPE (\"u8\", builtins, u8);\n   MKBUILTIN_TYPE (\"u16\", builtins, u16);\n@@ -205,6 +206,7 @@ Resolver::generate_builtins ()\n   MKBUILTIN_TYPE (\"isize\", builtins, isize);\n   MKBUILTIN_TYPE (\"char\", builtins, char_tyty);\n   MKBUILTIN_TYPE (\"str\", builtins, str);\n+  MKBUILTIN_TYPE (\"!\", builtins, never);\n \n   // unit type ()\n   TyTy::TupleType *unit_tyty"}, {"sha": "74298e422e8a1bcb8592e733083a3e934e272d82", "filename": "gcc/rust/typecheck/rust-hir-type-check-type.h", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/178cabde9f99023559922318ad54ad47c1fce803/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-type.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/178cabde9f99023559922318ad54ad47c1fce803/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-type.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-type.h?ref=178cabde9f99023559922318ad54ad47c1fce803", "patch": "@@ -145,6 +145,15 @@ class TypeCheckType : public TypeCheckBase\n \t\t\t\t      type.get_locus ());\n   }\n \n+  void visit (HIR::NeverType &type) override\n+  {\n+    TyTy::BaseType *lookup = nullptr;\n+    bool ok = context->lookup_builtin (\"!\", &lookup);\n+    rust_assert (ok);\n+\n+    translated = lookup->clone ();\n+  }\n+\n   void visit (HIR::TraitObjectType &type) override;\n \n private:"}, {"sha": "c94cb828071ff5817448bd85a8a498f0844bd8d4", "filename": "gcc/testsuite/rust/compile/never_type_err2.rs", "status": "removed", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94990a843b6df9ff6010957d724dbb70bea94ceb/gcc%2Ftestsuite%2Frust%2Fcompile%2Fnever_type_err2.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94990a843b6df9ff6010957d724dbb70bea94ceb/gcc%2Ftestsuite%2Frust%2Fcompile%2Fnever_type_err2.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fcompile%2Fnever_type_err2.rs?ref=94990a843b6df9ff6010957d724dbb70bea94ceb", "patch": "@@ -1,4 +0,0 @@\n-// FIXME: Unimplemented features\n-fn foo() -> ! { // { dg-error \"unresolved type\" }\n-    let a: !; // { dg-error \"unresolved type\" }\n-}"}]}