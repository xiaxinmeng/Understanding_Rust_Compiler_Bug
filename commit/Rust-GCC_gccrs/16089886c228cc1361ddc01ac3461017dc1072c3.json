{"sha": "16089886c228cc1361ddc01ac3461017dc1072c3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTYwODk4ODZjMjI4Y2MxMzYxZGRjMDFhYzM0NjEwMTdkYzEwNzJjMw==", "commit": {"author": {"name": "Richard Sandiford", "email": "rsandifo@nildram.co.uk", "date": "2007-10-02T20:50:46Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2007-10-02T20:50:46Z"}, "message": "re PR middle-end/33617 (ICE for nonconstant callee-copied constructor arguments)\n\ngcc/\n\tPR middle-end/33617\n\t* expr.c (expand_expr_addr_expr_1): Pass CONSTRUCTORs to\n\texpand_expr.\n\ngcc/testsuite/\n\tPR middle-end/33617\n\t* gcc.c-torture/compile/pr33617.c: New test.\n\nFrom-SVN: r128965", "tree": {"sha": "d8b5a02be72555573d7fccaf3de7108dc83914cd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d8b5a02be72555573d7fccaf3de7108dc83914cd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/16089886c228cc1361ddc01ac3461017dc1072c3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16089886c228cc1361ddc01ac3461017dc1072c3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/16089886c228cc1361ddc01ac3461017dc1072c3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16089886c228cc1361ddc01ac3461017dc1072c3/comments", "author": null, "committer": null, "parents": [{"sha": "966b774d3ee4a815985f45e5357d4ebcc789c413", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/966b774d3ee4a815985f45e5357d4ebcc789c413", "html_url": "https://github.com/Rust-GCC/gccrs/commit/966b774d3ee4a815985f45e5357d4ebcc789c413"}], "stats": {"total": 28, "additions": 24, "deletions": 4}, "files": [{"sha": "bfa860ce24dfc703fcd8bd80a2186ef3c1808d8a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16089886c228cc1361ddc01ac3461017dc1072c3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16089886c228cc1361ddc01ac3461017dc1072c3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=16089886c228cc1361ddc01ac3461017dc1072c3", "patch": "@@ -1,3 +1,9 @@\n+2007-10-02  Richard Sandiford  <rsandifo@nildram.co.uk>\n+\n+\tPR middle-end/33617\n+\t* expr.c (expand_expr_addr_expr_1): Pass CONSTRUCTORs to\n+\texpand_expr.\n+\n 2007-10-02  David Daney  <ddaney@avtrex.com>\n \n \t* config/mips/mips.md (sync_compare_and_swap<mode>): Handle compare"}, {"sha": "6b7ba168d782aa13ea2ce85345b67844cc1ba109", "filename": "gcc/expr.c", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16089886c228cc1361ddc01ac3461017dc1072c3/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16089886c228cc1361ddc01ac3461017dc1072c3/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=16089886c228cc1361ddc01ac3461017dc1072c3", "patch": "@@ -6740,8 +6740,7 @@ expand_expr_addr_expr_1 (tree exp, rtx target, enum machine_mode tmode,\n   /* ??? This should be considered a front-end bug.  We should not be\n      generating ADDR_EXPR of something that isn't an LVALUE.  The only\n      exception here is STRING_CST.  */\n-  if (TREE_CODE (exp) == CONSTRUCTOR\n-      || CONSTANT_CLASS_P (exp))\n+  if (CONSTANT_CLASS_P (exp))\n     return XEXP (expand_expr_constant (exp, 0, modifier), 0);\n \n   /* Everything must be something allowed by is_gimple_addressable.  */\n@@ -6788,9 +6787,12 @@ expand_expr_addr_expr_1 (tree exp, rtx target, enum machine_mode tmode,\n     default:\n       /* If the object is a DECL, then expand it for its rtl.  Don't bypass\n \t expand_expr, as that can have various side effects; LABEL_DECLs for\n-\t example, may not have their DECL_RTL set yet.  Assume language\n-\t specific tree nodes can be expanded in some interesting way.  */\n+\t example, may not have their DECL_RTL set yet.  Expand the rtl of\n+\t CONSTRUCTORs too, which should yield a memory reference for the\n+\t constructor's contents.  Assume language specific tree nodes can\n+\t be expanded in some interesting way.  */\n       if (DECL_P (exp)\n+\t  || TREE_CODE (exp) == CONSTRUCTOR\n \t  || TREE_CODE (exp) >= LAST_AND_UNUSED_TREE_CODE)\n \t{\n \t  result = expand_expr (exp, target, tmode,"}, {"sha": "65f08872e8925d11b67c2b5bf9db13c87d9e3c8a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16089886c228cc1361ddc01ac3461017dc1072c3/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16089886c228cc1361ddc01ac3461017dc1072c3/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=16089886c228cc1361ddc01ac3461017dc1072c3", "patch": "@@ -1,3 +1,8 @@\n+2007-10-02  Richard Sandiford  <rsandifo@nildram.co.uk>\n+\n+\tPR middle-end/33617\n+\t* gcc.c-torture/compile/pr33617.c: New test.\n+\n 2007-10-02  Andreas Tobler  <a.tobler@schweiz.org>\n \n \t* gcc.target/powerpc/stabs-attrib-vect-darwin.c: Change options to use"}, {"sha": "0174fb604854b77c7bcd3c48e2d863c37f7f2cdf", "filename": "gcc/testsuite/gcc.c-torture/compile/pr33617.c", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16089886c228cc1361ddc01ac3461017dc1072c3/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr33617.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16089886c228cc1361ddc01ac3461017dc1072c3/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr33617.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr33617.c?ref=16089886c228cc1361ddc01ac3461017dc1072c3", "patch": "@@ -0,0 +1,7 @@\n+typedef float V8SF __attribute__ ((vector_size (32)));\n+void bar (V8SF);\n+void\n+foo (float x)\n+{\n+  bar ((V8SF) { x, x, x, x, x, x, x, x });\n+}"}]}