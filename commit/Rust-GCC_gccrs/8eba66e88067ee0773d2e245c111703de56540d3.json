{"sha": "8eba66e88067ee0773d2e245c111703de56540d3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGViYTY2ZTg4MDY3ZWUwNzczZDJlMjQ1YzExMTcwM2RlNTY1NDBkMw==", "commit": {"author": {"name": "Sandra Loosemore", "email": "sandra@codesourcery.com", "date": "2015-02-27T18:59:29Z"}, "committer": {"name": "Sandra Loosemore", "email": "sandra@gcc.gnu.org", "date": "2015-02-27T18:59:29Z"}, "message": "extend.texi (x86 transactional memory intrinsics): Reorganize discussion of _xbegin.\n\n2015-02-27  Sandra Loosemore  <sandra@codesourcery.com>\n\n\tgcc/\n\t* doc/extend.texi (x86 transactional memory intrinsics):\n\tReorganize discussion of _xbegin.  Clarify that the return\n\tvalue is a bit mask.  Expand example and move to end of section.\n\nFrom-SVN: r221068", "tree": {"sha": "d0f61a6aa1926e3f0f7137b7666169f36524376a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d0f61a6aa1926e3f0f7137b7666169f36524376a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8eba66e88067ee0773d2e245c111703de56540d3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8eba66e88067ee0773d2e245c111703de56540d3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8eba66e88067ee0773d2e245c111703de56540d3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8eba66e88067ee0773d2e245c111703de56540d3/comments", "author": {"login": "SandraLoosemore", "id": 104087111, "node_id": "U_kgDOBjQ-Rw", "avatar_url": "https://avatars.githubusercontent.com/u/104087111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SandraLoosemore", "html_url": "https://github.com/SandraLoosemore", "followers_url": "https://api.github.com/users/SandraLoosemore/followers", "following_url": "https://api.github.com/users/SandraLoosemore/following{/other_user}", "gists_url": "https://api.github.com/users/SandraLoosemore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SandraLoosemore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SandraLoosemore/subscriptions", "organizations_url": "https://api.github.com/users/SandraLoosemore/orgs", "repos_url": "https://api.github.com/users/SandraLoosemore/repos", "events_url": "https://api.github.com/users/SandraLoosemore/events{/privacy}", "received_events_url": "https://api.github.com/users/SandraLoosemore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9c78ecc2e6afe8ae7f6335ea8e17fb71535a3284", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c78ecc2e6afe8ae7f6335ea8e17fb71535a3284", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9c78ecc2e6afe8ae7f6335ea8e17fb71535a3284"}], "stats": {"total": 63, "additions": 46, "deletions": 17}, "files": [{"sha": "06ea6d8296b88e643224c2a4eff8a76a5643314e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8eba66e88067ee0773d2e245c111703de56540d3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8eba66e88067ee0773d2e245c111703de56540d3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8eba66e88067ee0773d2e245c111703de56540d3", "patch": "@@ -1,3 +1,9 @@\n+2015-02-27  Sandra Loosemore  <sandra@codesourcery.com>\n+\n+\t* doc/extend.texi (x86 transactional memory intrinsics):\n+\tReorganize discussion of _xbegin.  Clarify that the return\n+\tvalue is a bit mask.  Expand example and move to end of section.\n+\n 2015-02-26  Jakub Jelinek  <jakub@redhat.com>\n \t    Aldy Hernandez  <aldyh@redhat.com>\n "}, {"sha": "eb818613eed61e331907c9339c39023691165ea0", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 40, "deletions": 17, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8eba66e88067ee0773d2e245c111703de56540d3/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8eba66e88067ee0773d2e245c111703de56540d3/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=8eba66e88067ee0773d2e245c111703de56540d3", "patch": "@@ -17274,24 +17274,11 @@ and suitable fallback code always needs to be supplied.\n Start a RTM (Restricted Transactional Memory) transaction. \n Returns @code{_XBEGIN_STARTED} when the transaction\n started successfully (note this is not 0, so the constant has to be \n-explicitly tested).  If the transaction aborts, all side-effects\n-are undone and an abort code is returned. There is no guarantee\n-any transaction ever succeeds, so there always needs to be a valid\n-fallback path.\n-@end deftypefn\n-\n-@smallexample\n-#include <immintrin.h>\n-\n-if ((status = _xbegin ()) == _XBEGIN_STARTED) @{\n-    ... transaction code...\n-    _xend ();\n-@} else @{\n-    ... non transactional fallback path...\n-@}\n-@end smallexample\n+explicitly tested).  \n \n-If the transaction aborts, the return value is one of:\n+If the transaction aborts, all side-effects \n+are undone and an abort code encoded as a bit mask is returned.\n+The following macros are defined:\n \n @table @code\n @item _XABORT_EXPLICIT\n@@ -17309,6 +17296,11 @@ Transaction abort due to a debug trap.\n Transaction abort in an inner nested transaction.\n @end table\n \n+There is no guarantee\n+any transaction ever succeeds, so there always needs to be a valid\n+fallback path.\n+@end deftypefn\n+\n @deftypefn {RTM Function} {void} _xend ()\n Commit the current transaction. When no transaction is active this faults.\n All memory side-effects of the transaction become visible\n@@ -17325,6 +17317,37 @@ The @var{status} is an 8-bit constant; its value is encoded in the return\n value from @code{_xbegin}.\n @end deftypefn\n \n+Here is an example showing handling for @code{_XABORT_RETRY}\n+and a fallback path for other failures:\n+\n+@smallexample\n+#include <immintrin.h>\n+\n+int n_tries, max_tries;\n+unsigned status = _XABORT_EXPLICIT;\n+...\n+\n+for (n_tries = 0; n_tries < max_tries; n_tries++) \n+  @{\n+    status = _xbegin ();\n+    if (status == _XBEGIN_STARTED || !(status & _XABORT_RETRY))\n+      break;\n+  @}\n+if (status == _XBEGIN_STARTED) \n+  @{\n+    ... transaction code...\n+    _xend ();\n+  @} \n+else \n+  @{\n+    ... non-transactional fallback path...\n+  @}\n+@end smallexample\n+\n+@noindent\n+Note that, in most cases, the transactional and non-transactional code\n+must synchronize together to ensure consistency.\n+\n @node Target Format Checks\n @section Format Checks Specific to Particular Target Machines\n "}]}