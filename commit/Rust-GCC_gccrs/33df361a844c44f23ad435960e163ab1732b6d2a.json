{"sha": "33df361a844c44f23ad435960e163ab1732b6d2a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzNkZjM2MWE4NDRjNDRmMjNhZDQzNTk2MGUxNjNhYjE3MzJiNmQyYQ==", "commit": {"author": {"name": "Sebastian Pop", "email": "s.pop@samsung.com", "date": "2015-07-25T09:22:29Z"}, "committer": {"name": "Sebastian Pop", "email": "spop@gcc.gnu.org", "date": "2015-07-25T09:22:29Z"}, "message": "dump reasons why graphite failed to detect a scop\n\nWhen trying to analyze why Graphite does not handle a loop nest, it is easy to\nlook in the dumps of -fdump-tree-graphite-all to guess what has to be changed to\ncatch the loop.  This patch makes the dumps a bit more verbose and useful.\n\n\t* graphite-scop-detection.c: Include gimple-pretty-print.h.\n\t(stmt_simple_for_scop_p): Print when a stmt is not handled in Graphite.\n\t(scopdet_basic_block_info): Print when a loop or bb cannot be\n\trepresented in Graphite.\n\nFrom-SVN: r226213", "tree": {"sha": "b75d258502a2fdfede52aee8f6116fa73856a4fb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b75d258502a2fdfede52aee8f6116fa73856a4fb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/33df361a844c44f23ad435960e163ab1732b6d2a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33df361a844c44f23ad435960e163ab1732b6d2a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/33df361a844c44f23ad435960e163ab1732b6d2a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33df361a844c44f23ad435960e163ab1732b6d2a/comments", "author": null, "committer": {"login": "sebpop", "id": 568397, "node_id": "MDQ6VXNlcjU2ODM5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/568397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebpop", "html_url": "https://github.com/sebpop", "followers_url": "https://api.github.com/users/sebpop/followers", "following_url": "https://api.github.com/users/sebpop/following{/other_user}", "gists_url": "https://api.github.com/users/sebpop/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebpop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebpop/subscriptions", "organizations_url": "https://api.github.com/users/sebpop/orgs", "repos_url": "https://api.github.com/users/sebpop/repos", "events_url": "https://api.github.com/users/sebpop/events{/privacy}", "received_events_url": "https://api.github.com/users/sebpop/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4c141304a869524c909a6a9346b004cda47659fc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c141304a869524c909a6a9346b004cda47659fc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4c141304a869524c909a6a9346b004cda47659fc"}], "stats": {"total": 80, "additions": 74, "deletions": 6}, "files": [{"sha": "04f7faba4bdeb0366c853d2ef1e49fbe933d94b7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33df361a844c44f23ad435960e163ab1732b6d2a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33df361a844c44f23ad435960e163ab1732b6d2a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=33df361a844c44f23ad435960e163ab1732b6d2a", "patch": "@@ -1,3 +1,11 @@\n+2015-07-25  Sebastian Pop  <s.pop@samsung.com>\n+\n+\t* graphite-scop-detection.c: Include gimple-pretty-print.h.\n+\t(stmt_simple_for_scop_p): Print when a stmt is not handled in\n+\tGraphite.\n+\t(scopdet_basic_block_info): Print when a loop or bb cannot be\n+\trepresented in Graphite.\n+\n 2015-07-25  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR target/66648"}, {"sha": "fb7247e2e77481260f51f5a490075fe6f872a2c2", "filename": "gcc/graphite-scop-detection.c", "status": "modified", "additions": 66, "deletions": 6, "changes": 72, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33df361a844c44f23ad435960e163ab1732b6d2a/gcc%2Fgraphite-scop-detection.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33df361a844c44f23ad435960e163ab1732b6d2a/gcc%2Fgraphite-scop-detection.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-scop-detection.c?ref=33df361a844c44f23ad435960e163ab1732b6d2a", "patch": "@@ -51,6 +51,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"graphite-poly.h\"\n #include \"tree-ssa-propagate.h\"\n #include \"graphite-scop-detection.h\"\n+#include \"gimple-pretty-print.h\"\n \n /* Forward declarations.  */\n static void make_close_phi_nodes_unique (basic_block);\n@@ -350,13 +351,31 @@ stmt_simple_for_scop_p (basic_block scop_entry, loop_p outermost_loop,\n       || (gimple_code (stmt) == GIMPLE_CALL\n \t  && !(gimple_call_flags (stmt) & (ECF_CONST | ECF_PURE)))\n       || (gimple_code (stmt) == GIMPLE_ASM))\n-    return false;\n+    {\n+      if (dump_file && (dump_flags & TDF_DETAILS))\n+\t{\n+\t  fprintf (dump_file, \"[scop-detection-fail] \");\n+\t  fprintf (dump_file, \"Graphite cannot handle this stmt:\\n\");\n+\t  print_gimple_stmt (dump_file, stmt, 0, TDF_VOPS|TDF_MEMSYMS);\n+\t}\n+\n+      return false;\n+    }\n \n   if (is_gimple_debug (stmt))\n     return true;\n \n   if (!stmt_has_simple_data_refs_p (outermost_loop, stmt))\n-    return false;\n+    {\n+      if (dump_file && (dump_flags & TDF_DETAILS))\n+\t{\n+\t  fprintf (dump_file, \"[scop-detection-fail] \");\n+\t  fprintf (dump_file, \"Graphite cannot handle data-refs in stmt:\\n\");\n+\t  print_gimple_stmt (dump_file, stmt, 0, TDF_VOPS|TDF_MEMSYMS);\n+\t}\n+\n+      return false;\n+    }\n \n   switch (gimple_code (stmt))\n     {\n@@ -375,15 +394,33 @@ stmt_simple_for_scop_p (basic_block scop_entry, loop_p outermost_loop,\n \t      || code == GE_EXPR\n \t      || code == EQ_EXPR\n \t      || code == NE_EXPR))\n-          return false;\n+          {\n+\t    if (dump_file && (dump_flags & TDF_DETAILS))\n+\t      {\n+\t\tfprintf (dump_file, \"[scop-detection-fail] \");\n+\t\tfprintf (dump_file, \"Graphite cannot handle cond stmt:\\n\");\n+\t\tprint_gimple_stmt (dump_file, stmt, 0, TDF_VOPS|TDF_MEMSYMS);\n+\t      }\n+\n+\t    return false;\n+\t  }\n \n \tfor (unsigned i = 0; i < 2; ++i)\n \t  {\n \t    tree op = gimple_op (stmt, i);\n \t    if (!graphite_can_represent_expr (scop_entry, loop, op)\n \t\t/* We can not handle REAL_TYPE. Failed for pr39260.  */\n \t\t|| TREE_CODE (TREE_TYPE (op)) == REAL_TYPE)\n-\t      return false;\n+\t      {\n+\t\tif (dump_file && (dump_flags & TDF_DETAILS))\n+\t\t  {\n+\t\t    fprintf (dump_file, \"[scop-detection-fail] \");\n+\t\t    fprintf (dump_file, \"Graphite cannot represent stmt:\\n\");\n+\t\t    print_gimple_stmt (dump_file, stmt, 0, TDF_VOPS|TDF_MEMSYMS);\n+\t\t  }\n+\n+\t\treturn false;\n+\t      }\n \t  }\n \n \treturn true;\n@@ -395,6 +432,12 @@ stmt_simple_for_scop_p (basic_block scop_entry, loop_p outermost_loop,\n \n     default:\n       /* These nodes cut a new scope.  */\n+      if (dump_file && (dump_flags & TDF_DETAILS))\n+\t{\n+\t  fprintf (dump_file, \"[scop-detection-fail] \");\n+\t  fprintf (dump_file, \"Gimple stmt not handled in Graphite:\\n\");\n+\t  print_gimple_stmt (dump_file, stmt, 0, TDF_VOPS|TDF_MEMSYMS);\n+\t}\n       return false;\n     }\n \n@@ -488,7 +531,16 @@ scopdet_basic_block_info (basic_block bb, loop_p outermost_loop,\n \t with make_forwarder_block.  */\n       if (!single_succ_p (bb)\n \t  || bb_has_abnormal_pred (single_succ (bb)))\n-\tresult.difficult = true;\n+\t{\n+\t  if (dump_file && (dump_flags & TDF_DETAILS))\n+\t    {\n+\t      fprintf (dump_file, \"[scop-detection-fail] \");\n+\t      fprintf (dump_file, \"BB %d cannot be part of a scop.\\n\",\n+\t\t       bb->index);\n+\t    }\n+\n+\t  result.difficult = true;\n+\t}\n       else\n \tresult.exit = single_succ (bb);\n \n@@ -509,7 +561,15 @@ scopdet_basic_block_info (basic_block bb, loop_p outermost_loop,\n \tsinfo = build_scops_1 (bb, outermost_loop, &regions, loop);\n \n \tif (!graphite_can_represent_loop (entry_block, loop))\n-\t  result.difficult = true;\n+\t  {\n+\t    if (dump_file && (dump_flags & TDF_DETAILS))\n+\t      {\n+\t\tfprintf (dump_file, \"[scop-detection-fail] \");\n+\t\tfprintf (dump_file, \"Graphite cannot represent loop %d.\\n\",\n+\t\t\t loop->num);\n+\t      }\n+\t    result.difficult = true;\n+\t  }\n \n \tresult.difficult |= sinfo.difficult;\n "}]}