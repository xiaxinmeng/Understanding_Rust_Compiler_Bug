{"sha": "36088299955f95ab58a5758cba2f29b84c8fbfbc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzYwODgyOTk5NTVmOTVhYjU4YTU3NThjYmEyZjI5Yjg0YzhmYmZiYw==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2016-06-29T07:17:57Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2016-06-29T07:17:57Z"}, "message": "match.pd ((T)(T2)x -> (T)x): Remove restriction on final precision not matching mode precision.\n\n2016-07-29  Richard Biener  <rguenther@suse.de>\n\n\t* match.pd ((T)(T2)x -> (T)x): Remove restriction on final\n\tprecision not matching mode precision.\n\nFrom-SVN: r237838", "tree": {"sha": "82b2504e8036633b53010c650cf6a517a9e1ec4e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/82b2504e8036633b53010c650cf6a517a9e1ec4e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/36088299955f95ab58a5758cba2f29b84c8fbfbc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/36088299955f95ab58a5758cba2f29b84c8fbfbc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/36088299955f95ab58a5758cba2f29b84c8fbfbc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/36088299955f95ab58a5758cba2f29b84c8fbfbc/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c0587ee5deda229a18dd129d69c17c540214bcf8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0587ee5deda229a18dd129d69c17c540214bcf8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c0587ee5deda229a18dd129d69c17c540214bcf8"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "109ff1c8bd2df8ef5e50adccac26b4cdfebe4834", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36088299955f95ab58a5758cba2f29b84c8fbfbc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36088299955f95ab58a5758cba2f29b84c8fbfbc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=36088299955f95ab58a5758cba2f29b84c8fbfbc", "patch": "@@ -1,3 +1,8 @@\n+2016-07-29  Richard Biener  <rguenther@suse.de>\n+\n+\t* match.pd ((T)(T2)x -> (T)x): Remove restriction on final\n+\tprecision not matching mode precision.\n+\n 2016-06-28  John David Anglin  <danglin@gcc.gnu.org>\n \n \t* config/pa/pa.md (call_symref_64bit_post_reload): Don't call"}, {"sha": "b24bfb47de0a2cf762629f2ce12c9dec1e89abd3", "filename": "gcc/match.pd", "status": "modified", "additions": 3, "deletions": 8, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36088299955f95ab58a5758cba2f29b84c8fbfbc/gcc%2Fmatch.pd", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36088299955f95ab58a5758cba2f29b84c8fbfbc/gcc%2Fmatch.pd", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmatch.pd?ref=36088299955f95ab58a5758cba2f29b84c8fbfbc", "patch": "@@ -1652,14 +1652,11 @@ DEFINE_INT_AND_FLOAT_ROUND_FN (RINT)\n        float or both integer, we don't need the middle conversion if the\n        former is wider than the latter and doesn't change the signedness\n        (for integers).  Avoid this if the final type is a pointer since\n-       then we sometimes need the middle conversion.  Likewise if the\n-       final type has a precision not equal to the size of its mode.  */\n+       then we sometimes need the middle conversion.  */\n     (if (((inter_int && inside_int) || (inter_float && inside_float))\n \t && (final_int || final_float)\n \t && inter_prec >= inside_prec\n-\t && (inter_float || inter_unsignedp == inside_unsignedp)\n-\t && ! (final_prec != GET_MODE_PRECISION (TYPE_MODE (type))\n-\t       && TYPE_MODE (type) == TYPE_MODE (inter_type)))\n+\t && (inter_float || inter_unsignedp == inside_unsignedp))\n      (ocvt @0))\n \n     /* If we have a sign-extension of a zero-extended value, we can\n@@ -1692,9 +1689,7 @@ DEFINE_INT_AND_FLOAT_ROUND_FN (RINT)\n \t && ((inter_unsignedp && inter_prec > inside_prec)\n \t     == (final_unsignedp && final_prec > inter_prec))\n \t && ! (inside_ptr && inter_prec != final_prec)\n-\t && ! (final_ptr && inside_prec != inter_prec)\n-\t && ! (final_prec != GET_MODE_PRECISION (TYPE_MODE (type))\n-\t       && TYPE_MODE (type) == TYPE_MODE (inter_type)))\n+\t && ! (final_ptr && inside_prec != inter_prec))\n      (ocvt @0))\n \n     /* A truncation to an unsigned type (a zero-extension) should be"}]}