{"sha": "5dc9cffdfd6fb65d46193fe95b3f6ecea1242b7d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWRjOWNmZmRmZDZmYjY1ZDQ2MTkzZmU5NWIzZjZlY2VhMTI0MmI3ZA==", "commit": {"author": {"name": "Zack Weinberg", "email": "zack@wolery.cumb.org", "date": "2000-03-10T00:00:24Z"}, "committer": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2000-03-10T00:00:24Z"}, "message": "hashtab.h (struct htab): Add del_f.\n\n\t* hashtab.h (struct htab): Add del_f.\n\t(htab_del): New type.\n\t(htab_create): Add fourth argument.\n\n\t* hashtab.c (htab_create): Set del_f.\n\t(htab_delete, htab_empty, htab_remove_elt, htab_clear_slot):\n\tUse it.\n\nFrom-SVN: r32459", "tree": {"sha": "1c8555764b859bc239b43c7b7d97a90239ceeb2a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1c8555764b859bc239b43c7b7d97a90239ceeb2a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5dc9cffdfd6fb65d46193fe95b3f6ecea1242b7d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5dc9cffdfd6fb65d46193fe95b3f6ecea1242b7d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5dc9cffdfd6fb65d46193fe95b3f6ecea1242b7d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5dc9cffdfd6fb65d46193fe95b3f6ecea1242b7d/comments", "author": null, "committer": null, "parents": [{"sha": "aa77ac5f237e2b0a646631ec7088b8c7bdd14fd3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa77ac5f237e2b0a646631ec7088b8c7bdd14fd3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aa77ac5f237e2b0a646631ec7088b8c7bdd14fd3"}], "stats": {"total": 53, "additions": 49, "deletions": 4}, "files": [{"sha": "a73e5fefb06b5f410ed8b31bbeaa12ff2755388d", "filename": "include/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5dc9cffdfd6fb65d46193fe95b3f6ecea1242b7d/include%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5dc9cffdfd6fb65d46193fe95b3f6ecea1242b7d/include%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2FChangeLog?ref=5dc9cffdfd6fb65d46193fe95b3f6ecea1242b7d", "patch": "@@ -1,3 +1,9 @@\n+2000-03-09  Zack Weinberg  <zack@wolery.cumb.org>\n+\n+\t* hashtab.h (struct htab): Add del_f.\n+\t(htab_del): New type.\n+\t(htab_create): Add fourth argument.\n+\n 2000-03-08  Zack Weinberg  <zack@wolery.cumb.org>\n \n \t* hashtab.h (hash_table_t): Rename to htab_t."}, {"sha": "e6e38e4d0589df9ae6e1a07424d55a428087a491", "filename": "include/hashtab.h", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5dc9cffdfd6fb65d46193fe95b3f6ecea1242b7d/include%2Fhashtab.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5dc9cffdfd6fb65d46193fe95b3f6ecea1242b7d/include%2Fhashtab.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2Fhashtab.h?ref=5dc9cffdfd6fb65d46193fe95b3f6ecea1242b7d", "patch": "@@ -47,6 +47,10 @@ typedef unsigned int (*htab_hash) PARAMS ((const void *));\n    the table always comes first.  */\n typedef int (*htab_eq) PARAMS ((const void *, const void *));\n \n+/* Cleanup function called whenever a live element is removed from\n+   the hash table.  */\n+typedef void (*htab_del) PARAMS ((void *));\n+  \n /* Function called by htab_traverse for each live element.  The first\n    arg is the element, the second arg is the auxiliary pointer handed\n    to htab_traverse.  Return 1 to continue scan, 0 to stop.  */\n@@ -62,10 +66,13 @@ struct htab\n   /* Pointer to hash function.  */\n   htab_hash hash_f;\n \n-  /* Pointer to comparison function. */\n+  /* Pointer to comparison function.  */\n   htab_eq eq_f;\n \n-  /* Table itself */\n+  /* Pointer to cleanup function.  */\n+  htab_del del_f;\n+\n+  /* Table itself.  */\n   void **entries;\n \n   /* Current size (in entries) of the hash table */\n@@ -90,7 +97,8 @@ typedef struct htab *htab_t;\n \n /* The prototypes of the package functions. */\n \n-extern htab_t\thtab_create\tPARAMS ((size_t, htab_hash, htab_eq));\n+extern htab_t\thtab_create\tPARAMS ((size_t, htab_hash,\n+\t\t\t\t\t htab_eq, htab_del));\n extern void\thtab_delete\tPARAMS ((htab_t));\n extern void\thtab_empty\tPARAMS ((htab_t));\n "}, {"sha": "a9d849c3970b961b3ac0eda0cf5a2d1034cf6d4c", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5dc9cffdfd6fb65d46193fe95b3f6ecea1242b7d/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5dc9cffdfd6fb65d46193fe95b3f6ecea1242b7d/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=5dc9cffdfd6fb65d46193fe95b3f6ecea1242b7d", "patch": "@@ -1,3 +1,9 @@\n+2000-03-09  Zack Weinberg  <zack@wolery.cumb.org>\n+\n+\t* hashtab.c (htab_create): Set del_f.\n+\t(htab_delete, htab_empty, htab_remove_elt, htab_clear_slot):\n+\tUse it.\n+\n 2000-03-08  Zack Weinberg  <zack@wolery.cumb.org>\n \n \t* hashtab.c: Remove debugging variables (all_searches,"}, {"sha": "0bc9e485ef0eb3092e3b42d04693b2b4d52ec4bc", "filename": "libiberty/hashtab.c", "status": "modified", "additions": 26, "deletions": 1, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5dc9cffdfd6fb65d46193fe95b3f6ecea1242b7d/libiberty%2Fhashtab.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5dc9cffdfd6fb65d46193fe95b3f6ecea1242b7d/libiberty%2Fhashtab.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fhashtab.c?ref=5dc9cffdfd6fb65d46193fe95b3f6ecea1242b7d", "patch": "@@ -88,10 +88,11 @@ higher_prime_number (n)\n    created hash table. */\n \n htab_t\n-htab_create (size, hash_f, eq_f)\n+htab_create (size, hash_f, eq_f, del_f)\n      size_t size;\n      htab_hash hash_f;\n      htab_eq eq_f;\n+     htab_del del_f;\n {\n   htab_t result;\n \n@@ -101,6 +102,7 @@ htab_create (size, hash_f, eq_f)\n   result->size = size;\n   result->hash_f = hash_f;\n   result->eq_f = eq_f;\n+  result->del_f = del_f;\n   return result;\n }\n \n@@ -111,6 +113,15 @@ void\n htab_delete (htab)\n      htab_t htab;\n {\n+  int i;\n+  if (htab->del_f)\n+    for (i = htab->size - 1; i >= 0; i--)\n+      {\n+\tif (htab->entries[i] != EMPTY_ENTRY\n+\t    && htab->entries[i] != DELETED_ENTRY)\n+\t  (*htab->del_f) (htab->entries[i]);\n+      }\n+\n   free (htab->entries);\n   free (htab);\n }\n@@ -121,6 +132,15 @@ void\n htab_empty (htab)\n      htab_t htab;\n {\n+  int i;\n+  if (htab->del_f)\n+    for (i = htab->size - 1; i >= 0; i--)\n+      {\n+\tif (htab->entries[i] != EMPTY_ENTRY\n+\t    && htab->entries[i] != DELETED_ENTRY)\n+\t  (*htab->del_f) (htab->entries[i]);\n+      }\n+\n   memset (htab->entries, 0, htab->size * sizeof (void *));\n }\n \n@@ -273,6 +293,9 @@ htab_remove_elt (htab, element)\n   if (*slot == EMPTY_ENTRY)\n     return;\n \n+  if (htab->del_f)\n+    (*htab->del_f) (*slot);\n+\n   *slot = DELETED_ENTRY;\n   htab->n_deleted++;\n }\n@@ -289,6 +312,8 @@ htab_clear_slot (htab, slot)\n   if (slot < htab->entries || slot >= htab->entries + htab->size\n       || *slot == EMPTY_ENTRY || *slot == DELETED_ENTRY)\n     abort ();\n+  if (htab->del_f)\n+    (*htab->del_f) (*slot);\n   *slot = DELETED_ENTRY;\n   htab->n_deleted++;\n }"}]}