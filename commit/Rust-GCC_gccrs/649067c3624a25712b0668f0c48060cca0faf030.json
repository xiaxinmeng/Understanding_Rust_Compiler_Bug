{"sha": "649067c3624a25712b0668f0c48060cca0faf030", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjQ5MDY3YzM2MjRhMjU3MTJiMDY2OGYwYzQ4MDYwY2NhMGZhZjAzMA==", "commit": {"author": {"name": "Toon Moene", "email": "toon@moene.indiv.nluug.nl", "date": "2004-07-17T11:18:05Z"}, "committer": {"name": "Toon Moene", "email": "toon@gcc.gnu.org", "date": "2004-07-17T11:18:05Z"}, "message": "g77.dg: Removed.\n\n2004-07-17  Toon Moene  <toon@moene.indiv.nluug.nl>\n\n\t* g77.dg: Removed.\n\t* g77.f-torture: Ditto.\n\nFrom-SVN: r84865", "tree": {"sha": "ef2d5a8a735e911595dffde33761b37ba7d75737", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ef2d5a8a735e911595dffde33761b37ba7d75737"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/649067c3624a25712b0668f0c48060cca0faf030", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/649067c3624a25712b0668f0c48060cca0faf030", "html_url": "https://github.com/Rust-GCC/gccrs/commit/649067c3624a25712b0668f0c48060cca0faf030", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/649067c3624a25712b0668f0c48060cca0faf030/comments", "author": null, "committer": null, "parents": [{"sha": "320e32f649fa1c9e4ae6832552c478653d605121", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/320e32f649fa1c9e4ae6832552c478653d605121", "html_url": "https://github.com/Rust-GCC/gccrs/commit/320e32f649fa1c9e4ae6832552c478653d605121"}], "stats": {"total": 11052, "additions": 5, "deletions": 11047}, "files": [{"sha": "1e62636ce8735c75dcbf677f511c3fe3d6f3578b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/649067c3624a25712b0668f0c48060cca0faf030/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/649067c3624a25712b0668f0c48060cca0faf030/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=649067c3624a25712b0668f0c48060cca0faf030", "patch": "@@ -1,3 +1,8 @@\n+2004-07-17  Toon Moene  <toon@moene.indiv.nluug.nl>\n+\n+\t* g77.dg: Removed.\n+\t* g77.f-torture: Ditto.\n+\n 2004-07-17  Joseph S. Myers  <jsm@polyomino.org.uk>\n \n \t* gcc.dg/Wparentheses-2.c, gcc.dg/Wparentheses-3.c,"}, {"sha": "6801229eace0cf1145da6d23ef0fbc6a1802c9ae", "filename": "gcc/testsuite/g77.dg/12632.f", "status": "removed", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.dg%2F12632.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.dg%2F12632.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.dg%2F12632.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,6 +0,0 @@\n-C { dg-do compile }\n-C { dg-options \"-fbounds-check\" }\n-       INTEGER I(1)\n-       I(2) = 0  ! { dg-error \"out of defined range\" \"out of defined range\" }\n-       END\n-"}, {"sha": "150dc9f016ac511fd1ff2ccf773eab06853a98b0", "filename": "gcc/testsuite/g77.dg/20010216-1.f", "status": "removed", "additions": 0, "deletions": 51, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.dg%2F20010216-1.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.dg%2F20010216-1.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.dg%2F20010216-1.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,51 +0,0 @@\n-C Test for bug in reg-stack handling conditional moves.\n-C Reported by Tim Prince <tprince@computer.org>\n-C\n-C { dg-do run { target \"i[6789]86-*-*\" } }\n-C { dg-options \"-ffast-math -march=pentiumpro\" }\n-\n-      double precision function foo(x, y)\n-         implicit none\n-         double precision x, y\n-         double precision a, b, c, d\n-         if (x /= y) then\n-             if (x * y >= 0) then\n-                 a = abs(x)\n-                 b = abs(y)\n-                 c = max(a, b)\n-                 d = min(a, b)\n-                 foo = 1 - d/c\n-             else       \n-                 foo = 1\n-             end if  \n-         else\n-             foo = 0\n-         end if\n-      end\n-\n-      program test\n-      implicit none\n-\n-      integer ntests\n-      parameter (ntests=7)\n-      double precision tolerance\n-      parameter (tolerance=1.0D-6)\n-\n-C Each column is a pair of values to feed to foo,\n-C and its expected return value.\n-      double precision a(ntests) /1, -23, -1,   1,   9,  10,  -9/\n-      double precision b(ntests) /1, -23, 12, -12,  10,   9, -10/\n-      double precision x(ntests) /0,   0,  1,   1, 0.1, 0.1, 0.1/\n-\n-      double precision foo\n-      double precision result\n-      integer i\n-\n-      do i = 1, ntests\n-         result = foo(a(i), b(i))\n-         if (abs(result - x(i)) > tolerance) then\n-           print *, i, a(i), b(i), x(i), result\n-           call abort\n-         end if\n-      end do\n-      end"}, {"sha": "0b8374646b053258f68700638080247bb0bfb4cf", "filename": "gcc/testsuite/g77.dg/7388.f", "status": "removed", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.dg%2F7388.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.dg%2F7388.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.dg%2F7388.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,12 +0,0 @@\n-C { dg-do run }\n-C { dg-options \"-fbounds-check\" }\n-      character*25 buff(0:10)\n-      character*80 line\n-      integer i, m1, m2\n-      i  = 1\n-      m1 = 1\n-      m2 = 7\n-      buff(i) = 'tcase0a'\n-      write(line,*) buff(i)(m1:m2)\n-      if (line .ne. ' tcase0a') call abort\n-      end"}, {"sha": "e453f4e66f882777c45696d89628a628040f0ea0", "filename": "gcc/testsuite/g77.dg/bprob/bprob.exp", "status": "removed", "additions": 0, "deletions": 59, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.dg%2Fbprob%2Fbprob.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.dg%2Fbprob%2Fbprob.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.dg%2Fbprob%2Fbprob.exp?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,59 +0,0 @@\n-#   Copyright (C) 2001, 2002 Free Software Foundation, Inc.\n-\n-# This program is free software; you can redistribute it and/or modify\n-# it under the terms of the GNU General Public License as published by\n-# the Free Software Foundation; either version 2 of the License, or\n-# (at your option) any later version.\n-# \n-# This program is distributed in the hope that it will be useful,\n-# but WITHOUT ANY WARRANTY; without even the implied warranty of\n-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-# GNU General Public License for more details.\n-# \n-# You should have received a copy of the GNU General Public License\n-# along with this program; if not, write to the Free Software\n-# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  \n-\n-# Test the functionality of programs compiled with profile-directed block\n-# ordering using -fprofile-arcs followed by -fbranch-probabilities.\n-\n-load_lib target-supports.exp\n-\n-# Some targets don't have any implementation of __bb_init_func or are\n-# missing other needed machinery.\n-if { ![check_profiling_available \"-fprofile-arcs\"] } {\n-    return\n-}\n-\n-# The procedures in profopt.exp need these parameters.\n-set tool g77\n-set profile_option -fprofile-arcs\n-set feedback_option -fbranch-probabilities\n-set prof_ext gcda\n-set perf_ext tim\n-\n-# Override the list defined in profopt.exp.\n-set PROFOPT_OPTIONS [list \\\n-\t{ -g } \\\n-\t{ -O0 } \\\n-\t{ -O1 } \\\n-\t{ -O2 } \\\n-\t{ -O3 } \\\n-\t{ -O3 -g } \\\n-\t{ -Os } ]\n-\n-if $tracelevel then {\n-    strace $tracelevel\n-}\n-\n-# Load support procs.\n-load_lib profopt.exp\n-\n-foreach src [lsort [glob -nocomplain $srcdir/$subdir/*.f]] {\n-    # If we're only testing specific files and this isn't one of them, skip it.\n-    if ![runtest_file_p $runtests $src] then {\n-\tcontinue\n-    }\n-\n-    profopt-execute $src\n-}"}, {"sha": "73f04405b9bcffcca4169fb0851db9ade53cc30e", "filename": "gcc/testsuite/g77.dg/bprob/g77-bprob-1.f", "status": "removed", "additions": 0, "deletions": 330, "changes": 330, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.dg%2Fbprob%2Fg77-bprob-1.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.dg%2Fbprob%2Fg77-bprob-1.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.dg%2Fbprob%2Fg77-bprob-1.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,330 +0,0 @@\n-C Test profile-directed block ordering with various Fortran 77 constructs\n-C to catch basic regressions in the functionality.\n-\n-      program bprob1\n-      implicit none\n-      integer i,j,k,n\n-      integer result\n-      integer lpall, ieall, gtall\n-      integer lpval, ieval, gtval\n-\n-      lpval = lpall()\n-      ieval = ieall()\n-      gtval = gtall()\n-      if ((lpval .ne. 1) .or. (ieval .ne. 1) .or. (gtval .ne. 1)) then\n-         call abort\n-      end if\n-      \n-      end\n-\n-C Pass a value through a function to thwart optimization.\n-      integer function foo(i)\n-      implicit none\n-      integer i\n-      foo = i\n-      end\n-\n-C Test various flavors of GOTO and compare results against expected values.\n-      integer function gtall()\n-      implicit none\n-      integer gt1, gt2, gt3, gt4, gt5\n-      integer gtval\n-\n-      gtall = 1\n-      gtval = 0\n-      gtval = gtval + gt1(0)\n-      gtval = gtval + gt1(1)\n-      if (gtval .ne. 3) then\n-         print *,\"gtall part 1:  \", gtval, 3\n-         gtall = 0\n-      end if\n-\n-      gtval = 0\n-      gtval = gtval + gt2(3)\n-      gtval = gtval + gt2(30)\n-      if (gtval .ne. 12) then\n-         print *,\"gtall part 2:  \", gtval, 12\n-         gtall = 0\n-      end if\n-\n-      gtval = 0\n-      gtval = gtval + gt3(0)\n-      gtval = gtval + gt3(3)\n-      if (gtval .ne. 48) then\n-         print *,\"gtall part 3:  \", gtval, 48\n-         gtall = 0\n-      end if\n-\n-      gtval = 0\n-      gtval = gtval + gt4(1)\n-      gtval = gtval + gt4(2)\n-      gtval = gtval + gt4(3)\n-      if (gtval .ne. 14) then\n-         print *,\"gtall part 4:  \", gtval, 14\n-         gtall = 0\n-      end if\n-\n-      gtval = 0\n-      gtval = gtval + gt5(0)\n-      gtval = gtval + gt5(-1)\n-      gtval = gtval + gt5(5)\n-      if (gtval .ne. 14) then\n-         print *,\"gtall part 5:  \", gtval, 14\n-         gtall = 0\n-      end if\n-      end\n-\n-C Test simple GOTO.\n-      integer function gt1(f)\n-      implicit none\n-      integer f\n-      if (f .ne. 0) goto 100\n-      gt1 = 1\n-      goto 101\n-  100 gt1 = 2\n-  101 continue\n-      end\n-\n-C Test simple GOTO again, this time out of a DO loop.\n-      integer function gt2(f)\n-      implicit none\n-      integer f\n-      integer i\n-      do i=1,10\n-         if (i .eq. f) goto 100\n-      end do\n-      gt2 = 4\n-      goto 101\n-  100 gt2 = 8\n-  101 continue\n-      end\n-\n-C Test computed GOTO.\n-      integer function gt3(i)\n-      implicit none\n-      integer i\n-      gt3 = 8\n-      goto (101, 102, 103, 104), i\n-      goto 105\n-  101 gt3 = 1024\n-      goto 105\n-  102 gt3 = 2048\n-      goto 105\n-  103 gt3 = 16\n-      goto 105\n-  104 gt3 = 4096\n-      goto 105\n-  105 gt3 = gt3 * 2\n-      end\n-\n-C Test assigned GOTO.\n-      integer function gt4(i)\n-      implicit none\n-      integer i\n-      integer label\n-      assign 101 to label\n-      if (i .eq. 2) assign 102 to label\n-      if (i .eq. 3) assign 103 to label\n-      goto label, (101, 102, 103)\n-  101 gt4 = 1\n-      goto 104\n-  102 gt4 = 2\n-      goto 104\n-  103 gt4 = 4\n-  104 gt4 = gt4 * 2\n-      end\n-\n-C Test arithmetic IF (bundled with the GOTO variants).\n-      integer function gt5(i)\n-      implicit none\n-      integer i\n-      gt5 = 1\n-      if (i) 101, 102, 103\n-  101 gt5 = 2\n-      goto 104\n-  102 gt5 = 4\n-      goto 104\n-  103 gt5 = 8\n-  104 continue\n-      end\n-\n-C Run all of the loop tests and check results against expected values.\n-      integer function lpall()\n-      implicit none\n-      integer loop1, loop2\n-      integer loopval\n-\n-      lpall = 1\n-      loopval = 0\n-      loopval = loopval + loop1(1,0)\n-      loopval = loopval + loop1(1,2)\n-      loopval = loopval + loop1(1,7)\n-      if (loopval .ne. 12) then\n-         print *,\"lpall part 1:  \", loopval, 12\n-         lpall = 0\n-      end if\n-\n-      loopval = 0\n-      loopval = loopval + loop2(1,0,0,0)\n-      loopval = loopval + loop2(1,1,0,0)\n-      loopval = loopval + loop2(1,1,3,0)\n-      loopval = loopval + loop2(1,1,3,1)\n-      loopval = loopval + loop2(1,3,1,5)\n-      loopval = loopval + loop2(1,3,7,3)\n-      if (loopval .ne. 87) then\n-         print *,\"lpall part 2:  \", loopval, 87\n-         lpall = 0\n-      end if\n-      end\n-\n-C Test a simple DO loop.\n-      integer function loop1(r,n)\n-      implicit none\n-      integer r,n,i\n-\n-      loop1 = r\n-      do i=1,n\n-         loop1 = loop1 + 1\n-      end do\n-      end\n-\n-C Test nested DO loops.\n-      integer function loop2(r, l, m, n)\n-      implicit none\n-      integer r,l,m,n\n-      integer i,j,k\n-      loop2 = r\n-      do i=1,l\n-         do j=1,m\n-            do k=1,n\n-               loop2 = loop2 + 1\n-            end do\n-         end do\n-      end do\n-      end\n-\n-C Test various combinations of IF-THEN-ELSE and check results against\n-C expected values.\n-      integer function ieall()\n-      implicit none\n-      integer ie1, ie2, ie3\n-      integer ieval\n-      ieall = 1\n-      ieval = 0\n-      \n-      ieval = ieval + ie1(0,2)\n-      ieval = ieval + ie1(0,0)\n-      ieval = ieval + ie1(1,2)\n-      ieval = ieval + ie1(10,2)\n-      ieval = ieval + ie1(11,11)\n-      if (ieval .ne. 31) then\n-         print *,\"ieall part 1:  \", ieval, 31\n-         ieall = 0\n-      end if\n-\n-      ieval = 0\n-      ieval = ieval + ie2(0)\n-      ieval = ieval + ie2(2)\n-      ieval = ieval + ie2(2)\n-      ieval = ieval + ie2(2)\n-      ieval = ieval + ie2(3)\n-      ieval = ieval + ie2(3)\n-      if (ieval .ne. 23) then\n-         print *,\"ieall part 2:  \", ieval, 23\n-         ieall = 0\n-      end if\n-\n-      ieval = 0\n-      ieval = ieval + ie3(11,19)\n-      ieval = ieval + ie3(25,27)\n-      ieval = ieval + ie3(11,22)\n-      ieval = ieval + ie3(11,10)\n-      ieval = ieval + ie3(21,32)\n-      ieval = ieval + ie3(21,20)\n-      ieval = ieval + ie3(1,2)\n-      ieval = ieval + ie3(32,31)\n-      ieval = ieval + ie3(3,0)\n-      ieval = ieval + ie3(0,47)\n-      ieval = ieval + ie3(65,65)\n-      if (ieval .ne. 246) then\n-         print *,\"ieall part 3:  \", ieval, 246\n-         ieall = 0\n-      end if\n-      end\n-\n-C Test IF-THEN-ELSE.\n-      integer function ie1(i,j)\n-      implicit none\n-      integer i,j\n-      integer foo\n-\n-      ie1 = 0\n-      if (i .ne. 0) then\n-         if (j .ne. 0) then\n-            ie1 = foo(4)\n-         else\n-            ie1 = foo(1024)\n-         end if\n-      else\n-         if (j .ne. 0) then\n-            ie1 = foo(1)\n-         else\n-            ie1 = foo(2)\n-         end if\n-      end if\n-      if (i .gt. j) then\n-         ie1 = foo(ie1*2)\n-      end if\n-      if (i .gt. 10) then\n-         if (j .gt. 10) then\n-            ie1 = foo(ie1*4)\n-         end if\n-      end if\n-      end\n-\n-C Test a series of simple IF-THEN statements.\n-      integer function ie2(i)\n-      implicit none\n-      integer i\n-      integer foo\n-      ie2 = 0\n-\n-      if (i .eq. 0) then\n-         ie2 = foo(1)\n-      end if\n-      if (i .eq. 1) then\n-         ie2 = foo(1024)\n-      end if\n-      if (i .eq. 2) then\n-         ie2 = foo(2)\n-      end if\n-      if (i .eq. 3) then\n-         ie2 = foo(8)\n-      end if\n-      if (i .eq. 4) then\n-         ie2 = foo(2048)\n-      end if\n-\n-      end\n-\n-C Test nested IF statements and IF with compound expressions.\n-      integer function ie3(i,j)\n-      implicit none\n-      integer i,j\n-      integer foo\n-\n-      ie3 = 1\n-      if ((i .gt. 10) .and. (j .gt. i) .and. (j .lt. 20)) then\n-         ie3 = foo(16)\n-      end if\n-      if (i .gt. 20) then\n-         if (j .gt. i) then\n-            if (j .lt. 30) then\n-               ie3 = foo(32)\n-            end if\n-         end if\n-      end if\n-      if ((i .eq. 3) .or. (j .eq. 47) .or. (i .eq.j)) then\n-         ie3 = foo(64)\n-      end if\n-      end"}, {"sha": "446166c49dbe066644eac895da5fdba07e88e7ac", "filename": "gcc/testsuite/g77.dg/dg.exp", "status": "removed", "additions": 0, "deletions": 36, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.dg%2Fdg.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.dg%2Fdg.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.dg%2Fdg.exp?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,36 +0,0 @@\n-#   Copyright (C) 1997 Free Software Foundation, Inc.\n-\n-# This program is free software; you can redistribute it and/or modify\n-# it under the terms of the GNU General Public License as published by\n-# the Free Software Foundation; either version 2 of the License, or\n-# (at your option) any later version.\n-# \n-# This program is distributed in the hope that it will be useful,\n-# but WITHOUT ANY WARRANTY; without even the implied warranty of\n-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-# GNU General Public License for more details.\n-# \n-# You should have received a copy of the GNU General Public License\n-# along with this program; if not, write to the Free Software\n-# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  \n-\n-# GCC testsuite that uses the `dg.exp' driver.\n-\n-# Load support procs.\n-load_lib g77-dg.exp\n-\n-# If a testcase doesn't have special options, use these.\n-global DEFAULT_FFLAGS\n-if ![info exists DEFAULT_FFLAGS] then {\n-    set DEFAULT_FFLAGS \" -pedantic-errors\"\n-}\n-\n-# Initialize `dg'.\n-dg-init\n-\n-# Main loop.\n-g77-dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/*.f]] \\\n-\t$DEFAULT_FFLAGS\n-\n-# All done.\n-dg-finish"}, {"sha": "aa51bc05c2580dac13ae2ae21ed0f9156e06d609", "filename": "gcc/testsuite/g77.dg/f77-edit-apostrophe-out.f", "status": "removed", "additions": 0, "deletions": 21, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.dg%2Ff77-edit-apostrophe-out.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.dg%2Ff77-edit-apostrophe-out.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.dg%2Ff77-edit-apostrophe-out.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,21 +0,0 @@\n-C Test Fortran 77 apostrophe edit descriptor \n-C      (ANSI X3.9-1978 Section 13.5.1)\n-C\n-C Origin: David Billinghurst <David.Billinghurst@riotinto.com>\n-C\n-C { dg-do run }\n-C { dg-output \"^\" }\n- 10   format('abcde') \n- 20   format('and an apostrophe -''-')\n- 30   format('''a leading apostrophe')\n- 40   format('a trailing apostrophe''')\n- 50   format('''and all of the above -''-''')\n-\n-      write(*,10)        ! { dg-output \"abcde(\\n|\\r\\n|\\r)\" } \n-      write(*,20)        ! { dg-output \"and an apostrophe -'-(\\n|\\r\\n|\\r)\" }\n-      write(*,30)        ! { dg-output \"'a leading apostrophe(\\n|\\r\\n|\\r)\" }\n-      write(*,40)        ! { dg-output \"a trailing apostrophe'(\\n|\\r\\n|\\r)\" }\n-      write(*,50)        ! { dg-output \"'and all of the above -'-'(\\n|\\r\\n|\\r)\" }\n-\n-C { dg-output \"\\$\" }\n-      end"}, {"sha": "4feef755f5772aa827ce8a54e80e8ddbe0c062a5", "filename": "gcc/testsuite/g77.dg/f77-edit-colon-out.f", "status": "removed", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.dg%2Ff77-edit-colon-out.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.dg%2Ff77-edit-colon-out.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.dg%2Ff77-edit-colon-out.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,9 +0,0 @@\n-C Test Fortran 77 colon edit descriptor \n-C      (ANSI X3.9-1978 Section 13.5.5)\n-C\n-C Origin: David Billinghurst <David.Billinghurst@riotinto.com>\n-C\n-C { dg-do run }\n-C { dg-output \"^123(\\n|\\r\\n|\\r)45(\\n|\\r\\n|\\r)\\$\" }\n-      write(*,'((3(I1:)))')  (I,I=1,5)\n-      end"}, {"sha": "78e6f017b7e5a22d1d39be4d3b646e6f707a4dc4", "filename": "gcc/testsuite/g77.dg/f77-edit-h-out.f", "status": "removed", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.dg%2Ff77-edit-h-out.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.dg%2Ff77-edit-h-out.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.dg%2Ff77-edit-h-out.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,14 +0,0 @@\n-C Test Fortran 77 H edit descriptor\n-C      (ANSI X3.9-1978 Section 13.5.2)\n-C\n-C Origin: David Billinghurst <David.Billinghurst@riotinto.com>\n-C\n-C { dg-do run }\n-C { dg-output \"^\" }\n- 10   format(1H1)\n- 20   format(6H     6)\n-      write(*,10)        ! { dg-output \"1(\\n|\\r\\n|\\r)\" }\n-      write(*,20)        ! { dg-output \"     6(\\n|\\r\\n|\\r)\" }\n-      write(*,'(16H''apostrophe'' fun)') ! { dg-output \"'apostrophe' fun(\\n|\\r\\n|\\r)\" }\n-C { dg-output \"\\$\" }\n-      end"}, {"sha": "9040a4fcae256c555b9ab36593b59e5373cea7dd", "filename": "gcc/testsuite/g77.dg/f77-edit-i-in.f", "status": "removed", "additions": 0, "deletions": 22, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.dg%2Ff77-edit-i-in.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.dg%2Ff77-edit-i-in.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.dg%2Ff77-edit-i-in.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,22 +0,0 @@\n-C Test Fortran 77 I edit descriptor for input\n-C      (ANSI X3.9-1978 Section 13.5.9.1)\n-C\n-C Origin: David Billinghurst <David.Billinghurst@riotinto.com>\n-C\n-C { dg-do run }\n-\n-      integer i,j\n-      character*10 buf\n-\n-      write(buf,'(A)') '1  -1'\n-\n-      read(buf,'(I1)') i\n-      if ( i.ne.1 ) call abort()\n-\n-      read(buf,'(X,I1)') i\n-      if ( i.ne.0 ) call abort()\n-\n-      read(buf,'(X,I1,X,I2)') i,j\n-      if ( i.ne.0 .and. j.ne.-1 ) call abort()\n-\n-      end"}, {"sha": "9887704c716febe304c49589a4416682a1cfdf09", "filename": "gcc/testsuite/g77.dg/f77-edit-i-out.f", "status": "removed", "additions": 0, "deletions": 26, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.dg%2Ff77-edit-i-out.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.dg%2Ff77-edit-i-out.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.dg%2Ff77-edit-i-out.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,26 +0,0 @@\n-C Test Fortran 77 I edit descriptor for output\n-C      (ANSI X3.9-1978 Section 13.5.9.1)\n-C\n-C Origin: David Billinghurst <David.Billinghurst@riotinto.com>\n-C\n-C { dg-do run }\n-C { dg-output \"^\" }\n-\n-      write(*,'(I1)')    1  ! { dg-output \"1(\\n|\\r\\n|\\r)\" }\n-      write(*,'(I1)')   -1  ! { dg-output \"\\\\*(\\n|\\r\\n|\\r)\" }\n-      write(*,'(I2)')    2  ! { dg-output \" 2(\\n|\\r\\n|\\r)\" }\n-      write(*,'(I2)')   -2  ! { dg-output \"-2(\\n|\\r\\n|\\r)\" }\n-      write(*,'(I3)')    3  ! { dg-output \"  3(\\n|\\r\\n|\\r)\" }\n-      write(*,'(I3)')   -3  ! { dg-output \" -3(\\n|\\r\\n|\\r)\" }\n-\n-      write(*,'(I2.0)')  0  ! { dg-output \"  (\\n|\\r\\n|\\r)\" }\n-      write(*,'(I1.1)')  4  ! { dg-output \"4(\\n|\\r\\n|\\r)\" }\n-      write(*,'(I1.1)') -4  ! { dg-output \"\\\\*(\\n|\\r\\n|\\r)\" }\n-      write(*,'(I2.1)')  5  ! { dg-output \" 5(\\n|\\r\\n|\\r)\" }\n-      write(*,'(I2.1)') -5  ! { dg-output \"-5(\\n|\\r\\n|\\r)\" }\n-      write(*,'(I2.2)')  6  ! { dg-output \"06(\\n|\\r\\n|\\r)\" }\n-      write(*,'(I2.2)') -6  ! { dg-output \"\\\\*\\\\*(\\n|\\r\\n|\\r)\" }\n-      write(*,'(I3.2)')  7  ! { dg-output \" 07(\\n|\\r\\n|\\r)\" }\n-      write(*,'(I3.2)') -7  ! { dg-output \"-07(\\n|\\r\\n|\\r)\" }\n-\n-      end"}, {"sha": "89a8df2caffd313a1f4ef8cdb1ebc568e23a4a04", "filename": "gcc/testsuite/g77.dg/f77-edit-s-out.f", "status": "removed", "additions": 0, "deletions": 20, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.dg%2Ff77-edit-s-out.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.dg%2Ff77-edit-s-out.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.dg%2Ff77-edit-s-out.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,20 +0,0 @@\n-C Test Fortran 77 S, SS and SP edit descriptors \n-C      (ANSI X3.9-1978 Section 13.5.6)\n-C\n-C Origin: David Billinghurst <David.Billinghurst@riotinto.com>\n-C\n-C { dg-do run }\n-C ( dg-output \"^\" }\n- 10   format(SP,I3,1X,SS,I3)\n- 20   format(SP,I3,1X,SS,I3,SP,I3)\n- 30   format(SP,I3,1X,SS,I3,S,I3)\n- 40   format(SP,I3)\n- 50   format(SP,I2)\n-      write(*,10) 10, 20      ! { dg-output \"\\\\+10  20(\\n|\\r\\n|\\r)\" }\n-      write(*,20) 10, 20, 30  ! { dg-output \"\\\\+10  20\\\\+30(\\n|\\r\\n|\\r)\" }\n-      write(*,30) 10, 20, 30  ! { dg-output \"\\\\+10  20 30(\\n|\\r\\n|\\r)\" } \n-      write(*,40) 0           ! { dg-output \" \\\\+0(\\n|\\r\\n|\\r)\" }\n-C 15.5.9 - Note 5: When SP editing is in effect, the plus sign is not optional\n-      write(*,50) 11          ! { dg-output \"\\\\*\\\\*(\\n|\\r\\n|\\r)\" }\n-C { dg-output \"\\$\" }\n-      end"}, {"sha": "6cc9a8842d6216bd1754a0cdf04efa40ccfa66df", "filename": "gcc/testsuite/g77.dg/f77-edit-slash-out.f", "status": "removed", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.dg%2Ff77-edit-slash-out.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.dg%2Ff77-edit-slash-out.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.dg%2Ff77-edit-slash-out.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,9 +0,0 @@\n-C Test Fortran 77 colon slash descriptor \n-C      (ANSI X3.9-1978 Section 13.5.4)\n-C\n-C Origin: David Billinghurst <David.Billinghurst@riotinto.com>\n-C\n-C { dg-do run }\n-C { dg-output \"^123(\\n|\\r\\n|\\r)45(\\n|\\r\\n|\\r)\\$\" }\n-      write(*,'(3(I1)/2(I1))')  (I,I=1,5)\n-      end"}, {"sha": "2314080d70862847d0566cf430f893b6dadb14b0", "filename": "gcc/testsuite/g77.dg/f77-edit-t-in.f", "status": "removed", "additions": 0, "deletions": 31, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.dg%2Ff77-edit-t-in.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.dg%2Ff77-edit-t-in.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.dg%2Ff77-edit-t-in.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,31 +0,0 @@\n-C Test Fortran 77 T edit descriptor for input\n-C      (ANSI X3.9-1978 Section 13.5.3.2)\n-C\n-C Origin: David Billinghurst <David.Billinghurst@riotinto.com>\n-C\n-C { dg-do run }\n-      integer i,j\n-      real a,b,c,d,e\n-      character*32 in\n-\n-      in = '1234   8'\n-      read(in,'(T3,I1)') i\n-      if ( i.ne.3 )                   call abort()\n-      read(in,'(5X,TL4,I2)') i\n-      if ( i.ne.23 )                  call abort()\n-      read(in,'(3X,I1,TR3,I1)') i,j\n-      if ( i.ne.4 )                  call abort()\n-      if ( j.ne.8 )                  call abort()\n-\n-      in = '   1.5  -12.62  348.75  1.0E-6'\n- 100  format(F6.0,TL6,I4,1X,I1,8X,I5,F3.0,T10,F5.0,T17,F6.0,TR2,F6.0)\n-      read(in,100) a,i,j,k,b,c,d,e\n-      if ( abs(a-1.5).gt.1.0e-5 )     call abort()\n-      if ( i.ne.1 )                   call abort()\n-      if ( j.ne.5 )                   call abort()\n-      if ( k.ne.348 )                 call abort()\n-      if ( abs(b-0.75).gt.1.0e-5 )    call abort()\n-      if ( abs(c-12.62).gt.1.0e-5 )   call abort()\n-      if ( abs(d-348.75).gt.1.0e-4 )  call abort()\n-      if ( abs(e-1.0e-6).gt.1.0e-11 ) call abort()\n-      end"}, {"sha": "8e411888f2b04cd9f0ff96fc3b57736d16b89abc", "filename": "gcc/testsuite/g77.dg/f77-edit-t-out.f", "status": "removed", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.dg%2Ff77-edit-t-out.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.dg%2Ff77-edit-t-out.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.dg%2Ff77-edit-t-out.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,12 +0,0 @@\n-C Test Fortran 77 T edit descriptor \n-C      (ANSI X3.9-1978 Section 13.5.3.2)\n-C\n-C Origin: David Billinghurst <David.Billinghurst@riotinto.com>\n-C\n-C { dg-do run }\n-C ( dg-output \"^\" }\n-      write(*,'(I4,T8,I1)')     1234,8 ! { dg-output \"1234   8(\\n|\\r\\n|\\r)\" }\n-      write(*,'(I4,TR3,I1)')    1234,8 ! { dg-output \"1234   8(\\n|\\r\\n|\\r)\" }\n-      write(*,'(I4,5X,TL2,I1)') 1234,8 ! { dg-output \"1234   8(\\n|\\r\\n|\\r)\" }\n-C ( dg-output \"\\$\" }\n-      end"}, {"sha": "76049fa0fdf38832edd7fd6cca2b5fd04da9b8c0", "filename": "gcc/testsuite/g77.dg/f77-edit-x-out.f", "status": "removed", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.dg%2Ff77-edit-x-out.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.dg%2Ff77-edit-x-out.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.dg%2Ff77-edit-x-out.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,12 +0,0 @@\n-C Test Fortran 77 X descriptor \n-C      (ANSI X3.9-1978 Section 13.5.3.2)\n-C\n-C Origin: David Billinghurst <David.Billinghurst@riotinto.com>\n-C\n-C { dg-do run }\n-C ( dg-output \"^\" }\n-      write(*,'(I1,1X,I1,2X,I1)') 1,2,3    ! { dg-output \"1 2  3(\\n|\\r\\n|\\r)\" }\n-C Section 13.5.3 explains why there are no trailing blanks\n-      write(*,'(I1,1X,I1,2X,I1,3X)') 1,2,3 ! { dg-output \"1 2  3(\\n|\\r\\n|\\r)\" }\n-C { dg-output \"\\$\" }\n-      end"}, {"sha": "d2227adb67bb122387754d2c593cdcd0fd9c9ea0", "filename": "gcc/testsuite/g77.dg/fbackslash.f", "status": "removed", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.dg%2Ffbackslash.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.dg%2Ffbackslash.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.dg%2Ffbackslash.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,7 +0,0 @@\n-C Test compiler flags: -fbackslash\n-C Origin: David Billinghurst <David.Billinghurst@riotinto.com>\n-C\n-C { dg-do run }\n-C { dg-options \"-fbackslash\" }\n-      if ( len('A\\nB') .ne. 3 ) call abort\n-      end"}, {"sha": "f1d1eab6fd439f73af910ff6a822fb980473e792", "filename": "gcc/testsuite/g77.dg/fcase-preserve.f", "status": "removed", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.dg%2Ffcase-preserve.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.dg%2Ffcase-preserve.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.dg%2Ffcase-preserve.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,9 +0,0 @@\n-C Test compiler flags: -fcase-preserve\n-C Origin: David Billinghurst <David.Billinghurst@riotinto.com>\n-C\n-C { dg-do run }\n-C { dg-options \"-fcase-preserve\" }\n-      i = 3\n-      I = 4\n-      if ( i .ne. 3 ) call abort\n-      end"}, {"sha": "f33eb28b21bc9b6580c10a4c7ebdc6229387602d", "filename": "gcc/testsuite/g77.dg/ff90-1.f", "status": "removed", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.dg%2Fff90-1.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.dg%2Fff90-1.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.dg%2Fff90-1.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,15 +0,0 @@\n-C Test compiler flags: -ff90\n-C Origin: David Billinghurst <David.Billinghurst@riotinto.com>\n-C\n-C Read the g77 manual entry on CMPAMBIG\n-C\n-C { dg-do run }\n-C { dg-options \"-ff90\" }\n-      double complex z\n-      z = (2.0d0,1.0d0)\n-      call s(real(z))\n-      end\n-      subroutine s(x)\n-      double precision x\n-      if ( abs(x-2.0d0) .gt. 1.0e-5 ) call abort\n-      end"}, {"sha": "4b5f72301dabf16308926fbd251f9947016a718f", "filename": "gcc/testsuite/g77.dg/ffixed-form-1.f", "status": "removed", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.dg%2Fffixed-form-1.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.dg%2Fffixed-form-1.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.dg%2Fffixed-form-1.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,6 +0,0 @@\n-! Test compiler flags: -ffixed-form\n-! Origin: David Billinghurst <David.Billinghurst@riotinto.com>\n-!\n-! { dg-do compile }\n-! { dg-options \"-ffixed-form\" }\n-      end"}, {"sha": "5f6980ca0acc006deb1425ed8a586b84671ea6b1", "filename": "gcc/testsuite/g77.dg/ffixed-form-2.f", "status": "removed", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.dg%2Fffixed-form-2.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.dg%2Fffixed-form-2.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.dg%2Fffixed-form-2.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,12 +0,0 @@\n-! PR fortran/10843\n-! Origin: Brad Davis <bdavis9659@comcast.net>\n-!\n-! { dg-do compile }\n-! { dg-options \"-ffixed-form\" }\n-      GO TO 3\n-      GOTO 3\n- 3    CONTINUE\n-      GOTO = 55\n-      GO TO = 55\n-      END\n-"}, {"sha": "80c4f3f56ca604d18846df35c739640c066e9e23", "filename": "gcc/testsuite/g77.dg/ffixed-line-length-0.f", "status": "removed", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.dg%2Fffixed-line-length-0.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.dg%2Fffixed-line-length-0.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.dg%2Fffixed-line-length-0.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,7 +0,0 @@\n-C Test compiler flags: -ffixed-line-length-0\n-C Origin: David Billinghurst <David.Billinghurst@riotinto.com>\n-C\n-C { dg-do compile }\n-C { dg-options \"-ffixed-line-length-0\" }\n-C The next line has length 257\n-      en                                                                                                                                                           d"}, {"sha": "6101696758cda0890426154bc3af9c498ebeeec6", "filename": "gcc/testsuite/g77.dg/ffixed-line-length-132.f", "status": "removed", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.dg%2Fffixed-line-length-132.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.dg%2Fffixed-line-length-132.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.dg%2Fffixed-line-length-132.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,7 +0,0 @@\n-C Test compiler flags: -ffixed-line-length-132\n-C Origin: David Billinghurst <David.Billinghurst@riotinto.com>\n-C\n-C { dg-do compile }\n-C { dg-options \"-ffixed-line-length-132\" }\n-c23456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012\n-      en                                                                                                                           d*"}, {"sha": "8a9abf48050bc0b2650001ae863dba02efc719cd", "filename": "gcc/testsuite/g77.dg/ffixed-line-length-7.f", "status": "removed", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.dg%2Fffixed-line-length-7.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.dg%2Fffixed-line-length-7.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.dg%2Fffixed-line-length-7.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,8 +0,0 @@\n-C Test compiler flags: -ffixed-line-length-7\n-C Origin: David Billinghurst <David.Billinghurst@riotinto.com>\n-C\n-C { dg-do compile }\n-C { dg-options \"-ffixed-line-length-7\" }\n-      e*\n-     $n*\n-     $d*"}, {"sha": "8a2fad1fad2a936b4f13d982dbf656d55a497e8f", "filename": "gcc/testsuite/g77.dg/ffixed-line-length-72.f", "status": "removed", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.dg%2Fffixed-line-length-72.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.dg%2Fffixed-line-length-72.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.dg%2Fffixed-line-length-72.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,7 +0,0 @@\n-C Test compiler flags: -ffixed-line-length-72\n-C Origin: David Billinghurst <David.Billinghurst@riotinto.com>\n-C\n-C { dg-do compile }\n-C { dg-options \"-ffixed-line-length-72\" }\n-c2345678901234567890123456789012345678901234567890123456789012345678901234567890\n-      en                                                               d*"}, {"sha": "b4a50147f1273506f9753c055a25585207ca6492", "filename": "gcc/testsuite/g77.dg/ffixed-line-length-none.f", "status": "removed", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.dg%2Fffixed-line-length-none.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.dg%2Fffixed-line-length-none.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.dg%2Fffixed-line-length-none.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,7 +0,0 @@\n-C Test compiler flags: -ffixed-line-length-none\n-C Origin: David Billinghurst <David.Billinghurst@riotinto.com>\n-C\n-C { dg-do compile }\n-C { dg-options \"-ffixed-line-length-none\" }\n-C The next line has length 257\n-      en                                                                                                                                                           d"}, {"sha": "88ddeefb32c9c289a7ea53fbbdd7a9bb8bb90a96", "filename": "gcc/testsuite/g77.dg/ffree-form-1.f", "status": "removed", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.dg%2Fffree-form-1.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.dg%2Fffree-form-1.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.dg%2Fffree-form-1.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,6 +0,0 @@\n-! Test compiler flags: -ffree-form\n-! Origin: David Billinghurst <David.Billinghurst@riotinto.com>\n-!\n-! { dg-do compile }\n-! { dg-options \"-ffree-form\" }\n-end"}, {"sha": "b07db218789c99a9c0c7a2235515b3636afba708", "filename": "gcc/testsuite/g77.dg/ffree-form-2.f", "status": "removed", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.dg%2Fffree-form-2.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.dg%2Fffree-form-2.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.dg%2Fffree-form-2.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,11 +0,0 @@\n-! PR fortran/10843\n-! Origin: Brad Davis <bdavis9659@comcast.net>\n-!\n-! { dg-do compile }\n-! { dg-options \"-ffree-form\" }\n-      GO TO 3 \n-      GOTO 3\n- 3    CONTINUE\n-      GOTO = 55\n-      END\n-"}, {"sha": "a30d604608187e7d8fe39b9febd322285ebf3ac4", "filename": "gcc/testsuite/g77.dg/ffree-form-3.f", "status": "removed", "additions": 0, "deletions": 20, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.dg%2Fffree-form-3.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.dg%2Fffree-form-3.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.dg%2Fffree-form-3.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,20 +0,0 @@\n-! Test acceptance of keywords in free format\n-! Origin: David Billinghurst <David.Billinghurst@riotinto.com>\n-!\n-! { dg-do compile }\n-! { dg-options \"-ffree-form\" }\n-  integer i, j\n-  i = 1\n-  if ( i .eq. 1 ) then\n-    go = 2\n-  endif\n-  if ( i .eq. 3 ) then\n-     i = 4\n-  end if\n-  do i = 1, 3\n-    j = i\n-  end do\n-  do j = 1, 3\n-    i = j\n-  enddo\n-  end"}, {"sha": "7488cb6e98ec22959e266cbb7c63bf95491c2711", "filename": "gcc/testsuite/g77.dg/fno-backslash.f", "status": "removed", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.dg%2Ffno-backslash.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.dg%2Ffno-backslash.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.dg%2Ffno-backslash.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,7 +0,0 @@\n-C Test compiler flags: -fno-backslash\n-C Origin: David Billinghurst <David.Billinghurst@riotinto.com>\n-C\n-C { dg-do run }\n-C { dg-options \"-fno-backslash\" }\n-      if ( len('A\\nB') .ne. 4 ) call abort\n-      end"}, {"sha": "ac0f967505bb051c6e5f903bc06de9dfaa186803", "filename": "gcc/testsuite/g77.dg/fno-f90-1.f", "status": "removed", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.dg%2Ffno-f90-1.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.dg%2Ffno-f90-1.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.dg%2Ffno-f90-1.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,15 +0,0 @@\n-C Test compiler flags: -fno-f90\n-C Origin: David Billinghurst <David.Billinghurst@riotinto.com>\n-C\n-C Read the g77 manual entry on CMPAMBIG\n-C\n-C { dg-do run }\n-C { dg-options \"-fno-f90 -fugly-complex\" }\n-      double complex z\n-      z = (2.0d0,1.0d0)\n-      call s(real(z))\n-      end\n-      subroutine s(x)\n-      real x\n-      if ( abs(x-2.0) .gt. 1.0e-5 ) call abort\n-      end"}, {"sha": "df2dd1d70e5c7d85167cafc041e62e40ebf0e4dc", "filename": "gcc/testsuite/g77.dg/fno-fixed-form-1.f", "status": "removed", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.dg%2Ffno-fixed-form-1.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.dg%2Ffno-fixed-form-1.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.dg%2Ffno-fixed-form-1.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,6 +0,0 @@\n-! Test compiler flags: -fno-fixed-form\n-! Origin: David Billinghurst <David.Billinghurst@riotinto.com>\n-!\n-! { dg-do compile }\n-! { dg-options \"-fno-fixed-form\" }\n-end"}, {"sha": "781e272f972eb2cf52f06f835958b7ea452921aa", "filename": "gcc/testsuite/g77.dg/fno-onetrip.f", "status": "removed", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.dg%2Ffno-onetrip.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.dg%2Ffno-onetrip.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.dg%2Ffno-onetrip.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,9 +0,0 @@\n-C Test compiler flags: -fno-onetrip\n-C Origin: David Billinghurst <David.Billinghurst@riotinto.com>\n-C\n-C { dg-do run }\n-C { dg-options \"-fno-onetrip -w\" }\n-      do i = 1, 0\n-         call abort\n-      end do\n-      end"}, {"sha": "3faa550cce8b1ca8bd0f7d8268271a70aee2a32b", "filename": "gcc/testsuite/g77.dg/fno-typeless-boz.f", "status": "removed", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.dg%2Ffno-typeless-boz.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.dg%2Ffno-typeless-boz.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.dg%2Ffno-typeless-boz.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,10 +0,0 @@\n-C Test compiler flags: -fno-typeless-boz\n-C Origin: David Billinghurst <David.Billinghurst@riotinto.com>\n-C\n-C { dg-do run }\n-C { dg-options \"-fno-typeless-boz\" }\n-      equivalence (i,r)\n-      r = Z'ABCD1234'\n-      j = Z'ABCD1234'\n-      if ( j .eq. i ) call abort\n-      end"}, {"sha": "b91320b4c0b100ccb3e82201d1fe30aaa4691316", "filename": "gcc/testsuite/g77.dg/fno-underscoring.f", "status": "removed", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.dg%2Ffno-underscoring.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.dg%2Ffno-underscoring.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.dg%2Ffno-underscoring.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,8 +0,0 @@\n-C Test compiler flags: -fno-underscoring\n-C Origin: David Billinghurst <David.Billinghurst@riotinto.com>\n-C\n-C { dg-do compile }\n-C { dg-options \"-fno-underscoring\" }\n-      call aaabbbccc\n-      end\n-C { dg-final { scan-assembler-not \"aaabbbccc_\" } }"}, {"sha": "1277fb50c6bfaef42d59cff2c85c86c613856798", "filename": "gcc/testsuite/g77.dg/fno-vxt-1.f", "status": "removed", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.dg%2Ffno-vxt-1.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.dg%2Ffno-vxt-1.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.dg%2Ffno-vxt-1.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,10 +0,0 @@\n-C Test compiler flags: -fno-vxt\n-C Origin: David Billinghurst <David.Billinghurst@riotinto.com>\n-C\n-C { dg-do run }\n-C { dg-options \"-fno-vxt\" }\n-      i = 0\n-     !1\n-      if ( i .ne. 0 ) call exit\n-      call abort\n-      END"}, {"sha": "dec61bcb364f5ae098606f3201d9252fb79ba541", "filename": "gcc/testsuite/g77.dg/fonetrip.f", "status": "removed", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.dg%2Ffonetrip.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.dg%2Ffonetrip.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.dg%2Ffonetrip.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,10 +0,0 @@\n-C Test compiler flags: -fonetrip\n-C Origin: David Billinghurst <David.Billinghurst@riotinto.com>\n-C\n-C { dg-do run }\n-C { dg-options \"-fonetrip -w\" }\n-      do i = 1, 0\n-         call exit\n-      end do\n-      call abort\n-      end"}, {"sha": "b72cb17754611ed8c83a81e7e7a1bcdc7a191e1f", "filename": "gcc/testsuite/g77.dg/ftypeless-boz.f", "status": "removed", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.dg%2Fftypeless-boz.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.dg%2Fftypeless-boz.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.dg%2Fftypeless-boz.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,10 +0,0 @@\n-C Test compiler flags: -ftypeless-boz\n-C Origin: David Billinghurst <David.Billinghurst@riotinto.com>\n-C\n-C { dg-do run }\n-C { dg-options \"-ftypeless-boz\" }\n-      equivalence (i,r)\n-      r = Z'ABCD1234'\n-      j = Z'ABCD1234'\n-      if ( j .ne. i ) call abort\n-      end"}, {"sha": "a45e9c8e2b712ffd3ee7ff2bf4c0d43fcfaaba97", "filename": "gcc/testsuite/g77.dg/fugly-assumed.f", "status": "removed", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.dg%2Ffugly-assumed.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.dg%2Ffugly-assumed.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.dg%2Ffugly-assumed.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,9 +0,0 @@\n-C Test compiler flags: -fugly-assumed\n-C Origin: David Billinghurst <David.Billinghurst@riotinto.com>\n-C\n-C { dg-do compile }\n-C { dg-options \"-fugly-assumed\" }\n-      function f(i)\n-      integer i(1)\n-      f = i(1)+i(2)\n-      end"}, {"sha": "720b3a7e3e1991bef72768db21838048c21105dd", "filename": "gcc/testsuite/g77.dg/funderscoring.f", "status": "removed", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.dg%2Ffunderscoring.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.dg%2Ffunderscoring.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.dg%2Ffunderscoring.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,8 +0,0 @@\n-C Test compiler flags: -funderscoring\n-C Origin: David Billinghurst <David.Billinghurst@riotinto.com>\n-C\n-C { dg-do compile }\n-C { dg-options \"-funderscoring\" }\n-      call aaabbbccc\n-      end\n-C { dg-final { scan-assembler \"aaabbbccc_\" } }"}, {"sha": "0cde4f8a36f46c64861552b9f4a6f2cdb5590ee1", "filename": "gcc/testsuite/g77.dg/fvxt-1.f", "status": "removed", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.dg%2Ffvxt-1.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.dg%2Ffvxt-1.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.dg%2Ffvxt-1.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,10 +0,0 @@\n-C Test compiler flags: -fvxt\n-C Origin: David Billinghurst <David.Billinghurst@riotinto.com>\n-C\n-C { dg-do run }\n-C { dg-options \"-fvxt\" }\n-      i = 0\n-     !1\n-      if ( i .eq. 0 ) call exit\n-      call abort\n-      END"}, {"sha": "fa0ce55f8f83c15be8598aba642890ec43d28464", "filename": "gcc/testsuite/g77.dg/gcov/gcov-1.f", "status": "removed", "additions": 0, "deletions": 419, "changes": 419, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.dg%2Fgcov%2Fgcov-1.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.dg%2Fgcov%2Fgcov-1.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.dg%2Fgcov%2Fgcov-1.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,419 +0,0 @@\n-C { dg-options \"-fprofile-arcs -ftest-coverage\" }\n-C { dg-do run { target native } }\n-C\n-C Test gcov reports for line counts and branch and call return percentages\n-C for various Fortran 77 constructs to catch basic regressions in the\n-C functionality.\n-\n-      program gcov1\n-      implicit none\n-      integer i,j,k,n\n-      integer result\n-      integer lpall, ieall, gtall\n-      integer lpval, ieval, gtval\n-\n-\t\t\t\t\t! returns(100)\n-      lpval = lpall()\t\t\t! count(1)\n-\t\t\t\t\t! returns(100)\n-      ieval = ieall()\t\t\t! count(1)\n-\t\t\t\t\t! returns(100)\n-      gtval = gtall()\t\t\t! count(1)\n-\t\t\t\t\t! returns(end)\n-      if ((lpval .ne. 1) .or. (ieval .ne. 1) .or. (gtval .ne. 1)) then\n-         call abort\n-      end if\n-      \n-      end\n-\n-C Pass a value through a function to thwart optimization.\n-      integer function foo(i)\n-      implicit none\n-      integer i\n-      foo = i\t\t\t\t! count(18)\n-      end\n-\n-C Test various flavors of GOTO and compare results against expected values.\n-      integer function gtall()\n-      implicit none\n-      integer gt1, gt2, gt3, gt4, gt5\n-      integer gtval\n-\n-      gtall = 1\t\t\t\t! count(1)\n-      gtval = 0\t\t\t\t! count(1)\n-\t\t\t\t\t! returns(100)\n-      gtval = gtval + gt1(0)\t\t! count(1)\n-\t\t\t\t\t! returns(100)\n-      gtval = gtval + gt1(1)\t\t! count(1)\n-\t\t\t\t\t! returns(end)\n-\t\t\t\t\t! branch(0)\n-      if (gtval .ne. 3) then\t\t! count(1)\n-\t\t\t\t\t! branch(end)\n-         print *,\"gtall part 1:  \", gtval, 3\n-         gtall = 0\n-      end if\n-\n-      gtval = 0\t\t\t\t! count(1)\n-\t\t\t\t\t! returns(100)\n-      gtval = gtval + gt2(9)\t\t! count(1)\n-\t\t\t\t\t! returns(100)\n-      gtval = gtval + gt2(20)\t\t! count(1)\n-\t\t\t\t\t! returns(end)\n-\t\t\t\t\t! branch(0)\n-      if (gtval .ne. 12) then\t\t! count(1)\n-\t\t\t\t\t! branch(end)\n-         print *,\"gtall part 2:  \", gtval, 12\n-         gtall = 0\n-      end if\n-\n-      gtval = 0\t\t\t\t! count(1)\n-\t\t\t\t\t! returns(100)\n-      gtval = gtval + gt3(0)\t\t! count(1)\n-\t\t\t\t\t! returns(100)\n-      gtval = gtval + gt3(3)\t\t! count(1)\n-\t\t\t\t\t! returns(end)\n-\t\t\t\t\t! branch(0)\n-      if (gtval .ne. 48) then\t\t! count(1)\n-\t\t\t\t\t! branch(end)\n-\t\t\t\t\t! branch(end)\n-         print *,\"gtall part 3:  \", gtval, 48\n-         gtall = 0\n-      end if\n-\n-      gtval = 0\t\t\t\t! count(1)\n-\t\t\t\t\t! returns(100)\n-      gtval = gtval + gt4(1)\t\t! count(1)\n-\t\t\t\t\t! returns(100)\n-      gtval = gtval + gt4(2)\t\t! count(1)\n-\t\t\t\t\t! returns(100)\n-      gtval = gtval + gt4(3)\t\t! count(1)\n-\t\t\t\t\t! returns(end)\n-\t\t\t\t\t! branch(0)\n-      if (gtval .ne. 14) then\t\t! count(1)\n-\t\t\t\t\t! branch(end)\n-         print *,\"gtall part 4:  \", gtval, 14\n-         gtall = 0\n-      end if\n-\n-      gtval = 0\t\t\t\t! count(1)\n-\t\t\t\t\t! returns(100)\n-      gtval = gtval + gt5(0)\t\t! count(1)\n-\t\t\t\t\t! returns(100)\n-      gtval = gtval + gt5(-1)\t\t! count(1)\n-\t\t\t\t\t! returns(100)\n-      gtval = gtval + gt5(5)\t\t! count(1)\n-\t\t\t\t\t! returns(end)\n-\t\t\t\t\t! branch(0)\n-      if (gtval .ne. 14) then\t\t! count(1)\n-\t\t\t\t\t! branch(end)\n-         print *,\"gtall part 5:  \", gtval, 14\n-         gtall = 0\n-      end if\n-      end\n-\n-C Test simple GOTO.\n-      integer function gt1(f)\n-      implicit none\n-      integer f\n-\t\t\t\t\t! branch(50)\n-      if (f .ne. 0) goto 100\t\t! count(2)\n-\t\t\t\t\t! branch(end)\n-      gt1 = 1\t\t\t\t! count(1)\n-      goto 101\t\t\t\t! count(1)\n-  100 gt1 = 2\t\t\t\t! count(1)\n-  101 continue\t\t\t\t! count(2)\n-      end\n-\n-C Test simple GOTO again, this time out of a DO loop.\n-      integer function gt2(f)\n-      implicit none\n-      integer f\n-      integer i\n-\t\t\t\t\t! branch(95)\n-      do i=1,10\n-\t\t\t\t\t! branch(end)\n-         if (i .eq. f) goto 100\t\t! count(19)\n-      end do\n-      gt2 = 4\t\t\t\t! count(1)\n-      goto 101\t\t\t\t! count(1)\n-  100 gt2 = 8\t\t\t\t! count(1)\n-  101 continue\t\t\t\t! count(2)\n-      end\n-\n-C Test computed GOTO.\n-      integer function gt3(i)\n-      implicit none\n-      integer i\n-      goto (101, 102, 103, 104), i\t! count(2)\n-      gt3 = 8\t\t\t\t! count(1)\n-      goto 105\t\t\t\t! count(1)\n-  101 gt3 = 1024\n-      goto 105\n-  102 gt3 = 2048\n-      goto 105\n-  103 gt3 = 16\t\t\t\t! count(1)\n-      goto 105\t\t\t\t! count(1)\n-  104 gt3 = 4096\n-      goto 105\n-  105 gt3 = gt3 * 2\t\t\t! count(2)\n-      end\n-\n-C Test assigned GOTO.\n-      integer function gt4(i)\n-      implicit none\n-      integer i\n-      integer label\n-      assign 101 to label\t\t! count(3)\n-      if (i .eq. 2) assign 102 to label\t! count(3)\n-      if (i .eq. 3) assign 103 to label\t! count(3)\n-      goto label, (101, 102, 103)\t! count(3)\n-  101 gt4 = 1\t\t\t\t! count(1)\n-      goto 104\t\t\t\t! count(1)\n-  102 gt4 = 2\t\t\t\t! count(1)\n-      goto 104\t\t\t\t! count(1)\n-  103 gt4 = 4\t\t\t\t! count(1)\n-  104 gt4 = gt4 * 2\t\t\t! count(3)\n-      end\n-\n-C Test arithmetic IF (bundled with the GOTO variants).\n-      integer function gt5(i)\n-      implicit none\n-      integer i\n-      gt5 = 1\t\t\t\t! count(3)\n-\t\t\t\t\t! branch(67 50)\n-      if (i) 101, 102, 103\t\t! count(3)\n-\t\t\t\t\t! branch(end)\n-  101 gt5 = 2\t\t\t\t! count(1)\n-      goto 104\t\t\t\t! count(1)\n-  102 gt5 = 4\t\t\t\t! count(1)\n-      goto 104\t\t\t\t! count(1)\n-  103 gt5 = 8\t\t\t\t! count(1)\n-  104 continue\t\t\t\t! count(3)\n-      end\n-\n-C Run all of the loop tests and check results against expected values.\n-      integer function lpall()\n-      implicit none\n-      integer loop1, loop2\n-      integer loopval\n-\n-      lpall = 1\t\t\t\t! count(1)\n-      loopval = 0\t\t\t! count(1)\n-\t\t\t\t\t! returns(100)\n-      loopval = loopval + loop1(1,0)\t! count(1)\n-\t\t\t\t\t! returns(100)\n-      loopval = loopval + loop1(1,2)\t! count(1)\n-\t\t\t\t\t! returns(100)\n-      loopval = loopval + loop1(1,7)\t! count(1)\n-\t\t\t\t\t! returns(end)\n-      if (loopval .ne. 12) then\t\t! count(1)\n-         print *,\"lpall part 1:  \", loopval, 12\n-         lpall = 0\n-      end if\n-\n-      loopval = 0\t\t\t\t! count(1)\n-\t\t\t\t\t\t! returns(100)\n-      loopval = loopval + loop2(1,0,0,0)\t! count(1)\n-\t\t\t\t\t\t! returns(100)\n-      loopval = loopval + loop2(1,1,0,0)\t! count(1)\n-\t\t\t\t\t\t! returns(100)\n-      loopval = loopval + loop2(1,1,3,0)\t! count(1)\n-\t\t\t\t\t\t! returns(100)\n-      loopval = loopval + loop2(1,1,3,1)\t! count(1)\n-\t\t\t\t\t\t! returns(100)\n-      loopval = loopval + loop2(1,3,1,5)\t! count(1)\n-\t\t\t\t\t\t! returns(100)\n-      loopval = loopval + loop2(1,3,7,3)\t! count(1)\n-\t\t\t\t\t\t! returns(end)\n-      if (loopval .ne. 87) then\t\t\t! count(1)\n-         print *,\"lpall part 2:  \", loopval, 87\n-         lpall = 0\n-      end if\n-      end\n-\n-C Test a simple DO loop.\n-      integer function loop1(r,n)\n-      implicit none\n-      integer r,n,i\n-\n-      loop1 = r\t\t\t\t! count(3)\n-\t\t\t\t\t! branch(75)\n-      do i=1,n\n-\t\t\t\t\t! branch(end)\n-         loop1 = loop1 + 1\t\t! count(9)\n-      end do\n-      end\n-\n-C Test nested DO loops.\n-      integer function loop2(r, l, m, n)\n-      implicit none\n-      integer r,l,m,n\n-      integer i,j,k\n-      loop2 = r\t\t\t\t! count(6)\n-\t\t\t\t\t! branch(60)\n-      do i=1,l\n-\t\t\t\t\t! branch(77)\n-         do j=1,m\n-\t\t\t\t\t! branch(73)\n-            do k=1,n\n-\t\t\t\t\t! branch(end)\n-               loop2 = loop2 + 1\t! count(81)\n-            end do\n-         end do\n-      end do\n-      end\n-\n-C Test various combinations of IF-THEN-ELSE and check results against\n-C expected values.\n-      integer function ieall()\n-      implicit none\n-      integer ie1, ie2, ie3\n-      integer ieval\n-      ieall = 1\t\t\t\t! count(1)\n-      ieval = 0\t\t\t\t! count(1)\n-      \n-      ieval = ieval + ie1(0,2)\t\t! count(1)\n-      ieval = ieval + ie1(0,0)\t\t! count(1)\n-      ieval = ieval + ie1(1,2)\t\t! count(1)\n-      ieval = ieval + ie1(10,2)\t\t! count(1)\n-      ieval = ieval + ie1(11,11)\t! count(1)\n-      if (ieval .ne. 31) then\t\t! count(1)\n-         print *,\"ieall part 1:  \", ieval, 31\n-         ieall = 0\n-      end if\n-\n-      ieval = 0\t\n-      ieval = ieval + ie2(0)\t\t! count(1)\n-      ieval = ieval + ie2(2)\t\t! count(1)\n-      ieval = ieval + ie2(2)\t\t! count(1)\n-      ieval = ieval + ie2(2)\t\t! count(1)\n-      ieval = ieval + ie2(3)\t\t! count(1)\n-      ieval = ieval + ie2(3)\t\t! count(1)\n-      if (ieval .ne. 23) then\t\t! count(1)\n-         print *,\"ieall part 2:  \", ieval, 23\n-         ieall = 0\n-      end if\n-\n-      ieval = 0\n-      ieval = ieval + ie3(11,19)\t! count(1)\n-      ieval = ieval + ie3(25,27)\t! count(1)\n-      ieval = ieval + ie3(11,22)\t! count(1)\n-      ieval = ieval + ie3(11,10)\t! count(1)\n-      ieval = ieval + ie3(21,32)\t! count(1)\n-      ieval = ieval + ie3(21,20)\t! count(1)\n-      ieval = ieval + ie3(1,2)\t\t! count(1)\n-      ieval = ieval + ie3(32,31)\t! count(1)\n-      ieval = ieval + ie3(3,0)\t\t! count(1)\n-      ieval = ieval + ie3(0,47)\t\t! count(1)\n-      ieval = ieval + ie3(65,65)\t! count(1)\n-      if (ieval .ne. 246) then\t\t! count(1)\n-         print *,\"ieall part 3:  \", ieval, 246\n-         ieall = 0\n-      end if\n-      end\n-\n-C Test IF-THEN-ELSE.\n-      integer function ie1(i,j)\n-      implicit none\n-      integer i,j\n-      integer foo\n-\n-      ie1 = 0\t\t\t\t! count(5)\n-\t\t\t\t\t! branch(40)\n-      if (i .ne. 0) then\t\t! count(5)\n-\t\t\t\t\t! branch(0)\n-         if (j .ne. 0) then\t\t! count(3)\n-\t\t\t\t\t! branch(end)\n-            ie1 = foo(4)\t\t! count(3)\n-         else\n-            ie1 = foo(1024)\n-         end if\n-      else\n-\t\t\t\t\t! branch(50)\n-         if (j .ne. 0) then\t\t! count(2)\n-\t\t\t\t\t! branch(end)\n-            ie1 = foo(1)\t\t! count(1)\n-         else\n-            ie1 = foo(2)\t\t! count(1)\n-         end if\n-      end if\n-\t\t\t\t\t! branch(80)\n-      if (i .gt. j) then\t\t! count(5)\n-\t\t\t\t\t! branch(end)\n-         ie1 = foo(ie1*2)\n-      end if\n-\t\t\t\t\t! branch(80)\n-      if (i .gt. 10) then\t\t! count(5)\n-\t\t\t\t\t! branch(0)\n-         if (j .gt. 10) then\t\t! count(1)\n-\t\t\t\t\t! branch(end)\n-            ie1 = foo(ie1*4)\t\t! count(1)\n-         end if\n-      end if\n-      end\n-\n-C Test a series of simple IF-THEN statements.\n-      integer function ie2(i)\n-      implicit none\n-      integer i\n-      integer foo\n-      ie2 = 0\t\t\t\t! count(6)\n-\n-\t\t\t\t\t! branch(83)\n-      if (i .eq. 0) then\t\t! count(6)\n-\t\t\t\t\t! branch(end)\n-         ie2 = foo(1)\t\t\t! count(1)\n-      end if\n-\t\t\t\t\t! branch(100)\n-      if (i .eq. 1) then\t\t! count(6)\n-\t\t\t\t\t! branch(end)\n-         ie2 = foo(1024)\n-      end if\n-\t\t\t\t\t! branch(50)\n-      if (i .eq. 2) then\t\t! count(6)\n-\t\t\t\t\t! branch(end)\n-         ie2 = foo(2)\t\t\t! count(3)\n-      end if\n-\t\t\t\t\t! branch(67)\n-      if (i .eq. 3) then\t\t! count(6)\n-\t\t\t\t\t! branch(end)\n-         ie2 = foo(8)\t\t\t! count(2)\n-      end if\n-\t\t\t\t\t! branch(100)\n-      if (i .eq. 4) then\t\t! count(6)\n-\t\t\t\t\t! branch(end)\n-         ie2 = foo(2048)\n-      end if\n-\n-      end\n-\n-C Test nested IF statements and IF with compound expressions.\n-      integer function ie3(i,j)\n-      implicit none\n-      integer i,j\n-      integer foo\n-\n-      ie3 = 1\t\t\t\t! count(11)\n-\t\t\t\t\t! branch(27 50 75)\n-      if ((i .gt. 10) .and. (j .gt. i) .and. (j .lt. 20)) then ! count(11)\n-\t\t\t\t\t! branch(end)\n-         ie3 = foo(16)\t\t\t! count(1)\n-      end if\n-\t\t\t\t\t! branch(55)\n-      if (i .gt. 20) then\t\t! count(11)\n-\t\t\t\t\t! branch(60)\n-         if (j .gt. i) then\t\t! count(5)\n-\t\t\t\t\t! branch(50)\n-            if (j .lt. 30) then\t\t! count(2)\n-\t\t\t\t\t! branch(end)\n-               ie3 = foo(32)\t\t! count(1)\n-            end if\n-         end if\n-      end if\n-\t\t\t\t\t! branch(9 10 11)\n-      if ((i .eq. 3) .or. (j .eq. 47) .or. (i .eq.j)) then ! count(11)\n-\t\t\t\t\t! branch(end)\n-         ie3 = foo(64)\t\t\t! count(3)\n-      end if\n-      end\n-C\n-C { dg-final { run-gcov branches calls { -b gcov-1.f } } }"}, {"sha": "a99a5723c39e0d217de86408265960ca9f5ea5e7", "filename": "gcc/testsuite/g77.dg/gcov/gcov.exp", "status": "removed", "additions": 0, "deletions": 44, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.dg%2Fgcov%2Fgcov.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.dg%2Fgcov%2Fgcov.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.dg%2Fgcov%2Fgcov.exp?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,44 +0,0 @@\n-#   Copyright (C) 1997, 2001 Free Software Foundation, Inc.\n-\n-# This program is free software; you can redistribute it and/or modify\n-# it under the terms of the GNU General Public License as published by\n-# the Free Software Foundation; either version 2 of the License, or\n-# (at your option) any later version.\n-# \n-# This program is distributed in the hope that it will be useful,\n-# but WITHOUT ANY WARRANTY; without even the implied warranty of\n-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-# GNU General Public License for more details.\n-# \n-# You should have received a copy of the GNU General Public License\n-# along with this program; if not, write to the Free Software\n-# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  \n-\n-# Gcov test driver.\n-\n-# Load support procs.\n-load_lib g77-dg.exp\n-load_lib gcov.exp\n-\n-global G77_UNDER_TEST\n-\n-# For now find gcov in the same directory as $G77_UNDER_TEST.\n-if { ![is_remote host] && [string match \"*/*\" [lindex $G77_UNDER_TEST 0]] } {\n-    set GCOV [file dirname [lindex $G77_UNDER_TEST 0]]/gcov\n-} else {\n-    set GCOV gcov\n-}\n-\n-# Initialize harness.\n-dg-init\n-\n-# Delete old .da files.\n-set files [glob -nocomplain gcov-*.da];\n-if { $files != \"\" } {\n-    eval \"remote_file build delete $files\";\n-}\n-\n-# Main loop.\n-dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/gcov-*.f]] \"\" \"\"\n-\n-dg-finish"}, {"sha": "fd5fb0c426d270c31fb6f9059158c58f08c53c7e", "filename": "gcc/testsuite/g77.dg/pr3743-1.f", "status": "removed", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.dg%2Fpr3743-1.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.dg%2Fpr3743-1.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.dg%2Fpr3743-1.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,7 +0,0 @@\n-C Test case for PR fortran/3743\n-C Origin: David Billinghurst <David.Billinghurst@riotinto.com>\n-C\n-C { dg-do link }\n-      integer   i\n-      i = bit_size(i)\n-      end"}, {"sha": "3e0eabc15f7d4a2afd1d0d30c57d912b3ebd2335", "filename": "gcc/testsuite/g77.dg/pr3743-2.f", "status": "removed", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.dg%2Fpr3743-2.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.dg%2Fpr3743-2.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.dg%2Fpr3743-2.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,8 +0,0 @@\n-C Test case for PR fortran/3743\n-C Origin: David Billinghurst <David.Billinghurst@riotinto.com>\n-C\n-C { dg-do link }\n-C { dg-options \"-fcase-preserve -fintrin-case-upper\" }\n-      integer   i\n-      i = BIT_SIZE(i)\n-      end"}, {"sha": "77964341506fcee2c7b9c31d7745d74d8a5ab3eb", "filename": "gcc/testsuite/g77.dg/pr3743-3.f", "status": "removed", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.dg%2Fpr3743-3.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.dg%2Fpr3743-3.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.dg%2Fpr3743-3.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,8 +0,0 @@\n-c Test case for PR fortran/3743\n-c Origin: David Billinghurst <David.Billinghurst@riotinto.com>\n-c\n-c { dg-do link }\n-c { dg-options \"-fcase-preserve -fintrin-case-lower\" }\n-      integer   i\n-      i = bit_size(i)\n-      end"}, {"sha": "0cb94f62d219c835452823531d43df729b1beacd", "filename": "gcc/testsuite/g77.dg/pr3743-4.f", "status": "removed", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.dg%2Fpr3743-4.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.dg%2Fpr3743-4.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.dg%2Fpr3743-4.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,8 +0,0 @@\n-C Test case for PR fortran/3743\n-C Origin: David Billinghurst <David.Billinghurst@riotinto.com>\n-C\n-C { dg-do link }\n-C { dg-options \"-fcase-preserve -fintrin-case-initcap\" }\n-      integer   i\n-      i = Bit_Size(i)\n-      end"}, {"sha": "41a6bdb9cdc2fac5cfc3e787694ad32c1de477be", "filename": "gcc/testsuite/g77.dg/pr5473.f", "status": "removed", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.dg%2Fpr5473.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.dg%2Fpr5473.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.dg%2Fpr5473.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,15 +0,0 @@\n-      program pr5473\n-c Derived from g77.f-torture/execute/intrinsic-unix-bessel.f\n-c Origin: David Billinghurst <David.Billinghurst@riotinto.com>\n-c { dg-do compile }\n-      real x, a\n-      double precision dx, da\n-      integer*8 m\n-      x = 2.0\n-      dx = x\n-      m = 2\n-      a = BESJN(m,x) ! { dg-error \"incorrect type\" \"incorrect type\" }\n-      a = BESYN(m,x) ! { dg-error \"incorrect type\" \"incorrect type\" }\n-      da = DBESJN(m,dx) ! { dg-error \"incorrect type\" \"incorrect type\" }\n-      da = DBESYN(m,dx) ! { dg-error \"incorrect type\" \"incorrect type\" }\n-      end"}, {"sha": "9961b72b7f66325b8d5ae52584958f13f824e4a6", "filename": "gcc/testsuite/g77.dg/pr9258.f", "status": "removed", "additions": 0, "deletions": 18, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.dg%2Fpr9258.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.dg%2Fpr9258.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.dg%2Fpr9258.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,18 +0,0 @@\n-C Test case for PR/9258\n-C Origin: kmccarty@princeton.edu\n-C\n-C { dg-do compile }\n-      SUBROUTINE FOO (B)\n-\n-  10  CALL BAR (A)\n-      ASSIGN 20 TO M\n-      IF (100.LT.A) GOTO 10\n-      GOTO 40\n-C\n-  20  IF (B.LT.ABS(A)) GOTO 10\n-      ASSIGN 30 TO M\n-      GOTO 40\n-C\n-  30  ASSIGN 10 TO M\n-  40  GOTO M,(10,20,30)\n-      END"}, {"sha": "765c8b61190c23862bbca4c9657284ead5322762", "filename": "gcc/testsuite/g77.dg/strlen0.f", "status": "removed", "additions": 0, "deletions": 95, "changes": 95, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.dg%2Fstrlen0.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.dg%2Fstrlen0.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.dg%2Fstrlen0.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,95 +0,0 @@\n-C     Substring range checking test program, to check behavior with respect\n-C     to X3J3/90.4 paragraph 5.7.1.\n-C\n-C     Patches relax substring checking for subscript expressions in order to\n-C     simplify coding (elimination of length checks for strings passed as\n-C     parameters) and to avoid contradictory behavior of subscripted substring\n-C     expressions with respect to unsubscripted string expressions.\n-C\n-C     Key part of 5.7.1 interpretation comes down to statement that in the\n-C     substring expression,\n-C        v ( e1 : e2 )\n-C     1 <= e1 <= e2 <= len to be valid, yet the expression\n-C        v ( : )\n-C     is equivalent to\n-C        v(1:len(v))\n-C\n-C     meaning that any statement that reads\n-C        str = v // 'tail'\n-C     (where v is a string passed as a parameter) would require coding as\n-C        if (len(v) .gt. 0) then\n-C           str = v // 'tail'\n-C        else\n-C           str = 'tail'\n-C        endif\n-C     to comply with the standard specification.  Under the stricter\n-C     interpretation, functions strcat and strlat would be incorrect as\n-C     written for null values of str1 and/or str2.\n-C\n-C     This code compiles and runs without error on\n-C       SunOS 4.1.3 f77 (-C option)\n-C       SUNWspro SPARCcompiler 4.2 f77 (-C option)\n-C       (and with proposed patches, gcc-2.9.2 -fbounds-check except for test 6,\n-C        which is a genuine, deliberate error - comment out to make further\n-C        tests)\n-C\n-C { dg-do run }\n-C { dg-options \"-fbounds-check\" }\n-C\n-C     G. Helffrich/Tokyo Inst. Technology Jul 24 2001\n-\n-      character str*8,strres*16,strfun*16,strcat*16,strlat*16\n-\n-      str='Hi there'\n-\n-C     Test 1 - (current+patched) two char substring result\n-      strres=strfun(str,1,2)\n-      write(*,*) 'strres is ',strres\n-\n-C     Test 2 - (current+patched) null string result\n-      strres=strfun(str,5,4)\n-      write(*,*) 'strres is ',strres\n-\n-C     Test 3 - (current+patched) null string result\n-      strres=strfun(str,8,7)\n-      write(*,*) 'strres is ',strres\n-\n-C     Test 4 - (current) error; (patched) null string result\n-      strres=strfun(str,9,8)\n-      write(*,*) 'strres is ',strres\n-\n-C     Test 5 - (current) error; (patched) null string result\n-      strres=strfun(str,1,0)\n-      write(*,*) 'strres is ',strres\n-\n-C     Test 6 - (current+patched) error\n-C     strres=strfun(str,20,20)\n-C     write(*,*) 'strres is ',strres\n-\n-C     Test 7 - (current+patched) str result\n-      strres=strcat(str,'')\n-      write(*,*) 'strres is ',strres\n-\n-C     Test 8 - (current) error; (patched) str result\n-      strres=strlat('',str)\n-      write(*,*) 'strres is ',strres\n-\n-      end\n-\n-      character*(*) function strfun(str,i,j)\n-      character str*(*)\n-\n-      strfun = str(i:j)\n-      end\n-\n-      character*(*) function strcat(str1,str2)\n-      character str1*(*), str2*(*)\n-\n-      strcat = str1 // str2\n-      end\n-\n-      character*(*) function strlat(str1,str2)\n-      character str1*(*), str2*(*)\n-\n-      strlat = str1(1:len(str1)) // str2(1:len(str2))\n-      end"}, {"sha": "cd661459f93f2465bbf2ecadfee36c510ba71804", "filename": "gcc/testsuite/g77.f-torture/compile/12002.f", "status": "removed", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F12002.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F12002.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F12002.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,5 +0,0 @@\n-C      PR middle-end/12002\n-       COMPLEX TE1\n-       TE1=-2.\n-       TE1=TE1+TE1\n-       END"}, {"sha": "200117b027116c2e05a963ac0a597e3d07f7be4b", "filename": "gcc/testsuite/g77.f-torture/compile/13060.f", "status": "removed", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F13060.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F13060.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F13060.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,13 +0,0 @@\n-      subroutine geo2()\n-      implicit none\n-\n-      integer ms,n,ne(2)\n-\n-      ne(1) = 1\n-      ne(2) = 2\n-      ms = 1\n-\n-      call call_me(ne(1)*ne(1))\n-\n-      n = ne(ms)\n-      end"}, {"sha": "3e34117ec693d058569bb9b98568a8f720191d0f", "filename": "gcc/testsuite/g77.f-torture/compile/19990218-0.f", "status": "removed", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F19990218-0.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F19990218-0.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F19990218-0.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,13 +0,0 @@\n-        program test\n-        double precision a,b,c\n-        data a,b/1.0d-46,1.0d0/\n-        c=fun(a,b)\n-        print*,'in main: fun=',c\n-        end\n-        double precision function fun(a,b)\n-        double precision a,b\n-        print*,'in sub: a,b=',a,b\n-        fun=a*b\n-        print*,'in sub: fun=',fun\n-        return\n-        end"}, {"sha": "32c656d90a68a07f3a13a67f736cf191aac4aa0e", "filename": "gcc/testsuite/g77.f-torture/compile/19990305-0.f", "status": "removed", "additions": 0, "deletions": 55, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F19990305-0.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F19990305-0.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F19990305-0.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,55 +0,0 @@\n-* Date: Fri, 5 Mar 1999 00:35:44 -0500 (EST)\n-* From: Denes Molnar <molnard@phys.columbia.edu>\n-* To: fortran@gnu.org\n-* Subject: f771 gets fatal signal 6\n-* Content-Type: TEXT/PLAIN; charset=US-ASCII\n-* X-UIDL: 8d81e9cbdcc96209c6e9b298d966ba7f\n-*\n-* Hi,\n-*\n-*\n-* Comiling object from the source code below WORKS FINE with\n-*   'g77 -o hwuci2 -c hwuci2.F'\n-* but FAILS with fatal signal 6\n-*   'g77 -o hwuci2 -O -c hwuci2.F'\n-*\n-* Any explanations?\n-*\n-* I am running GNU Fortran 0.5.23 with GCC 2.8.1 (glibc1).\n-*\n-*\n-* Denes Molnar\n-*\n-* %%%%%%%%%%%%%%%%%%%%%%%%%\n-* %the source:\n-* %%%%%%%%%%%%%%%%%%%%%%%%%\n-*\n-CDECK  ID>, HWUCI2.\n-*CMZ :-        -23/08/94  13.22.29  by  Mike Seymour\n-*-- Author :    Ulrich Baur & Nigel Glover, adapted by Ian Knowles\n-C-----------------------------------------------------------------------\n-      FUNCTION HWUCI2(A,B,Y0)\n-C-----------------------------------------------------------------------\n-C     Integral  LOG(A-EPSI-BY(1-Y))/(Y-Y0)\n-C-----------------------------------------------------------------------\n-      IMPLICIT NONE\n-      DOUBLE COMPLEX HWUCI2,HWULI2,EPSI,Y1,Y2,Z1,Z2,Z3,Z4\n-      DOUBLE PRECISION A,B,Y0,ZERO,ONE,FOUR,HALF\n-      EXTERNAL HWULI2\n-      COMMON/SMALL/EPSI\n-      PARAMETER (ZERO=0.D0, ONE =1.D0, FOUR= 4.D0, HALF=0.5D0)\n-      IF(B.EQ.ZERO)THEN\n-         HWUCI2=CMPLX(ZERO,ZERO)\n-      ELSE\n-         Y1=HALF*(ONE+SQRT(ONE-FOUR*(A+EPSI)/B))\n-         Y2=ONE-Y1\n-         Z1=Y0/(Y0-Y1)\n-         Z2=(Y0-ONE)/(Y0-Y1)\n-         Z3=Y0/(Y0-Y2)\n-         Z4=(Y0-ONE)/(Y0-Y2)\n-         HWUCI2=HWULI2(Z1)-HWULI2(Z2)+HWULI2(Z3)-HWULI2(Z4)\n-      ENDIF\n-      RETURN\n-      END\n-*\n-* %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%"}, {"sha": "084e7a254bf338ae933c1201b119a56344cc29c3", "filename": "gcc/testsuite/g77.f-torture/compile/19990419-0.f", "status": "removed", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F19990419-0.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F19990419-0.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F19990419-0.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,7 +0,0 @@\n-* Test case Toon submitted, cut down to expose the one bug.\n-* Belongs in compile/.\n-      SUBROUTINE INIERS1\n-      IMPLICIT   LOGICAL(L)\n-      COMMON/COMIOD/ NHIERS1, LERS1\n-      inquire(nhiers1, exist=lers1)\n-      END"}, {"sha": "4f5d6859138eb8e4a384d4196894a32607c86387", "filename": "gcc/testsuite/g77.f-torture/compile/19990502-0.f", "status": "removed", "additions": 0, "deletions": 66, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F19990502-0.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F19990502-0.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F19990502-0.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,66 +0,0 @@\n-* Mailing-List: contact egcs-bugs-help@egcs.cygnus.com; run by ezmlm\n-* Precedence: bulk\n-* Sender: owner-egcs-bugs@egcs.cygnus.com\n-* From: Norbert Conrad <Norbert.Conrad@hrz.uni-giessen.de>\n-* Subject: egcs g77 19990524pre Internal compiler error in `print_operand'\n-* To: egcs-bugs@egcs.cygnus.com\n-* Date: Mon, 31 May 1999 11:46:52 +0200 (CET)\n-* Content-Type: text/plain; charset=US-ASCII\n-* X-UIDL: 9a00095a5fe4d774b7223de071157374\n-* \n-* Hi,\n-* \n-* I ./configure --prefix=/opt and bootstrapped egcs g77 snapshot 19990524\n-* on an i686-pc-linux-gnu. The program below gives an internal compiler error.\n-* \n-* \n-* Script started on Mon May 31 11:30:01 1999\n-* lx{g010}:/tmp>/opt/bin/g77 -v -O3 -malign-double -c e3.f\n-* g77 version gcc-2.95 19990524 (prerelease) (from FSF-g77 version 0.5.24-19990515)\n-* Reading specs from /opt/lib/gcc-lib/i686-pc-linux-gnu/gcc-2.95/specs\n-* gcc version gcc-2.95 19990524 (prerelease)\n-*  /opt/lib/gcc-lib/i686-pc-linux-gnu/gcc-2.95/f771 e3.f -quiet -dumpbase e3.f -malign-double -O3 -version -fversion -o /tmp/ccQgeaaa.s\n-* GNU F77 version gcc-2.95 19990524 (prerelease) (i686-pc-linux-gnu) compiled by GNU C version gcc-2.95 19990524 (prerelease).\n-* GNU Fortran Front End version 0.5.24-19990515\n-* e3.f:25: Internal compiler error in `print_operand', at ./config/i386/i386.c:3405\n-* Please submit a full bug report to `egcs-bugs@egcs.cygnus.com'.\n-* See <URL:http://egcs.cygnus.com/faq.html#bugreport> for details.\n-* lx{g010}:/tmp>cat e3.f\n-      SUBROUTINE DLASQ2( QQ, EE,  TOL2, SMALL2 )\n-      DOUBLE PRECISION   SMALL2, TOL2\n-      DOUBLE PRECISION   EE( * ), QQ( * )\n-      INTEGER            ICONV,  N, OFF\n-      DOUBLE PRECISION   QEMAX, XINF\n-      EXTERNAL           DLASQ3\n-      INTRINSIC          MAX, SQRT\n-      XINF = 0.0D0\n-      ICONV = 0\n-      IF( EE( N ).LE.MAX( QQ( N ), XINF, SMALL2 )*TOL2 ) THEN\n-      END IF\n-      IF( EE( N-2 ).LE.MAX( XINF, SMALL2,\n-     $    ( QQ( N ) / ( QQ( N )+EE( N-1 ) ) )* QQ( N-1 ))*TOL2 ) THEN\n-         QEMAX = MAX( QQ( N ), QQ( N-1 ), EE( N-1 ) )\n-      END IF\n-      IF( N.EQ.0 ) THEN\n-         IF( OFF.EQ.0 ) THEN\n-            RETURN\n-         ELSE\n-            XINF =0.0D0 \n-         END IF\n-      ELSE IF( N.EQ.2 ) THEN\n-      END IF\n-      CALL DLASQ3(ICONV)\n-      END\n-* lx{g010}:/tmp>exit\n-* \n-* Script done on Mon May 31 11:30:23 1999\n-* \n-* Best regards,\n-* \n-* Norbert.\n-* -- \n-* Norbert Conrad                             phone: ++49 641 9913021\n-* Hochschulrechenzentrum                     email: conrad@hrz.uni-giessen.de\n-* Heinrich-Buff-Ring 44\n-* 35392 Giessen\n-* Germany"}, {"sha": "b7238fcd881f0deae58b8f7e883cf6164ea241d3", "filename": "gcc/testsuite/g77.f-torture/compile/19990502-1.f", "status": "removed", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F19990502-1.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F19990502-1.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F19990502-1.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,6 +0,0 @@\n-      SUBROUTINE G(IGAMS,IWRK,NADC,NCellsInY)\n-      INTEGER*2 IGAMS(2,NADC)\n-      in = 1\n-      do while (in.le.nadc.and.IGAMS(2,in).le.in)\n-      enddo\n-      END"}, {"sha": "5b8d466e40d82a50dbae0260a89b6f2d23590e66", "filename": "gcc/testsuite/g77.f-torture/compile/19990525-0.f", "status": "removed", "additions": 0, "deletions": 50, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F19990525-0.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F19990525-0.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F19990525-0.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,50 +0,0 @@\n-* Mailing-List: contact egcs-bugs-help@egcs.cygnus.com; run by ezmlm\n-* Precedence: bulk\n-* Sender: owner-egcs-bugs@egcs.cygnus.com\n-* From: \"Bjorn R. Bjornsson\" <brb@halo.hi.is>\n-* Subject: g77 char expr. as arg to subroutine bug\n-* To: egcs-bugs@egcs.cygnus.com\n-* Date: Tue, 25 May 1999 14:45:56 +0000 (GMT)\n-* Content-Type: text/plain; charset=US-ASCII\n-* X-UIDL: 06000c94269ed6dfe826493e52a818b9\n-* \n-* The following bug is in all snapshots starting\n-* from April 18.  I have only tested this on Alpha linux,\n-* and with FFECOM_FASTER_ARRAY_REFS set to 1.\n-* \n-* Run the following through g77:\n-* \n-\tsubroutine\ta\n-\tcharacter*2\tstring1\n-\tcharacter*2\tstring2\n-\tcharacter*4\tstring3\n-\tstring1 = 's1'\n-\tstring2 = 's2'\n-c\n-c the next 2 lines are ok.\n-\tstring3 = (string1 // string2)\n-\tcall b(string1//string2)\n-c\n-c this line gives gcc/f/com.c:10660: failed assertion `hook'\n-\tcall b((string1//string2))\n-\tend\n-* \n-* the output from:\n-* \n-* \t/usr/local/egcs-19990418/bin/g77 --verbose -c D.f\n-* \n-* is:\n-* \n-* on egcs-2.93.19 19990418 (gcc2 ss-980929 experimental) (from FSF-g77 version 0.5.24-19990418)\n-* Reading specs from /usr/local/egcs-19990418/lib/gcc-lib/alphaev56-unknown-linux-gnu/egcs-2.93.19/specs\n-* gcc version egcs-2.93.19 19990418 (gcc2 ss-980929 experimental)\n-*  /usr/local/egcs-19990418/lib/gcc-lib/alphaev56-unknown-linux-gnu/egcs-2.93.19/f771 D.f -quiet -dumpbase D.f -version -fversion -o /tmp/ccNpaaaa.s\n-* GNU F77 version egcs-2.93.19 19990418 (gcc2 ss-980929 experimental) (alphaev56-unknown-linux-gnu) compiled by GNU C version egcs-2.93.19 19990418 (gcc2 ss-980929 experimental).\n-* GNU Fortran Front End version 0.5.24-19990418\n-* ../../../egcs-19990418/gcc/f/com.c:10351: failed assertion `hook'\n-* g77: Internal compiler error: program f771 got fatal signal 6\n-* \n-* Yours,\n-* \n-* Bjorn R. Bjornsson\n-* brb@halo.hi.is"}, {"sha": "e8daafc990a282dea986d8f7d636545f295f30a6", "filename": "gcc/testsuite/g77.f-torture/compile/19990826-1.f", "status": "removed", "additions": 0, "deletions": 286, "changes": 286, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F19990826-1.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F19990826-1.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F19990826-1.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,286 +0,0 @@\n-* Date: Tue, 24 Aug 1999 12:25:41 +1200 (NZST)\n-* From: Jonathan Ravens <ravens@whio.gns.cri.nz>\n-* To: gcc-bugs@gcc.gnu.org\n-* Subject: g77 bug report\n-* X-UIDL: a0bf5ecc21487cde48d9104983ab04d6\n-\n-! This fortran source will not compile - if the penultimate elseif block is 0\n-! included then the message appears :\n-!\n-!   /usr/src/egcs//gcc-2.95.1/gcc/f/stw.c:308: failed assertion `b->uses_ > 0'\n-!   g77: Internal compiler error: program f771 got fatal signal 6\n-!\n-! The command was : g77 -c <prog.f>\n-!\n-! The OS is Red Hat 6, and the output from uname -a is \n-!   Linux grfw1452.gns.cri.nz 2.2.5-15 #1 Mon Apr 19 23:00:46 EDT 1999 i686 unknown\n-!\n-! The configure script I used was \n-!   /usr/src/egcs/gcc/gcc-2.95.1/configure --enable-languages=f77 i585-unknown-linux\n-!\n-! I was installing 2.95 because under EGCS 2.1.1 none of my code was working\n-! with optimisation turned on, and there were still bugs with no optimisation\n-! (all of which code works fine under g77 0.5.21 and Sun/IBM/Dec/HP fortrans).\n-!\n-! The version of g77 is :\n-!\n-!g77 version 2.95.1 19990816 (release) (from FSF-g77 version 0.5.25 19990816 (release))\n-\n-        program main\n-        if (i.eq.1) then\n-            call abc(1)\n-        else if (i.eq. 1) then\n-            call abc( 1)\n-        else if (i.eq. 2) then\n-            call abc( 2)\n-        else if (i.eq. 3) then\n-            call abc( 3)\n-        else if (i.eq. 4) then\n-            call abc( 4)\n-        else if (i.eq. 5) then\n-            call abc( 5)\n-        else if (i.eq. 6) then\n-            call abc( 6)\n-        else if (i.eq. 7) then\n-            call abc( 7)\n-        else if (i.eq. 8) then\n-            call abc( 8)\n-        else if (i.eq. 9) then\n-            call abc( 9)\n-        else if (i.eq. 10) then\n-            call abc( 10)\n-        else if (i.eq. 11) then\n-            call abc( 11)\n-        else if (i.eq. 12) then\n-            call abc( 12)\n-        else if (i.eq. 13) then\n-            call abc( 13)\n-        else if (i.eq. 14) then\n-            call abc( 14)\n-        else if (i.eq. 15) then\n-            call abc( 15)\n-        else if (i.eq. 16) then\n-            call abc( 16)\n-        else if (i.eq. 17) then\n-            call abc( 17)\n-        else if (i.eq. 18) then\n-            call abc( 18)\n-        else if (i.eq. 19) then\n-            call abc( 19)\n-        else if (i.eq. 20) then\n-            call abc( 20)\n-        else if (i.eq. 21) then\n-            call abc( 21)\n-        else if (i.eq. 22) then\n-            call abc( 22)\n-        else if (i.eq. 23) then\n-            call abc( 23)\n-        else if (i.eq. 24) then\n-            call abc( 24)\n-        else if (i.eq. 25) then\n-            call abc( 25)\n-        else if (i.eq. 26) then\n-            call abc( 26)\n-        else if (i.eq. 27) then\n-            call abc( 27)\n-        else if (i.eq. 28) then\n-            call abc( 28)\n-        else if (i.eq. 29) then\n-            call abc( 29)\n-        else if (i.eq. 30) then\n-            call abc( 30)\n-        else if (i.eq. 31) then\n-            call abc( 31)\n-        else if (i.eq. 32) then\n-            call abc( 32)\n-        else if (i.eq. 33) then\n-            call abc( 33)\n-        else if (i.eq. 34) then\n-            call abc( 34)\n-        else if (i.eq. 35) then\n-            call abc( 35)\n-        else if (i.eq. 36) then\n-            call abc( 36)\n-        else if (i.eq. 37) then\n-            call abc( 37)\n-        else if (i.eq. 38) then\n-            call abc( 38)\n-        else if (i.eq. 39) then\n-            call abc( 39)\n-        else if (i.eq. 40) then\n-            call abc( 40)\n-        else if (i.eq. 41) then\n-            call abc( 41)\n-        else if (i.eq. 42) then\n-            call abc( 42)\n-        else if (i.eq. 43) then\n-            call abc( 43)\n-        else if (i.eq. 44) then\n-            call abc( 44)\n-        else if (i.eq. 45) then\n-            call abc( 45)\n-        else if (i.eq. 46) then\n-            call abc( 46)\n-        else if (i.eq. 47) then\n-            call abc( 47)\n-        else if (i.eq. 48) then\n-            call abc( 48)\n-        else if (i.eq. 49) then\n-            call abc( 49)\n-        else if (i.eq. 50) then\n-            call abc( 50)\n-        else if (i.eq. 51) then\n-            call abc( 51)\n-        else if (i.eq. 52) then\n-            call abc( 52)\n-        else if (i.eq. 53) then\n-            call abc( 53)\n-        else if (i.eq. 54) then\n-            call abc( 54)\n-        else if (i.eq. 55) then\n-            call abc( 55)\n-        else if (i.eq. 56) then\n-            call abc( 56)\n-        else if (i.eq. 57) then\n-            call abc( 57)\n-        else if (i.eq. 58) then\n-            call abc( 58)\n-        else if (i.eq. 59) then\n-            call abc( 59)\n-        else if (i.eq. 60) then\n-            call abc( 60)\n-        else if (i.eq. 61) then\n-            call abc( 61)\n-        else if (i.eq. 62) then\n-            call abc( 62)\n-        else if (i.eq. 63) then\n-            call abc( 63)\n-        else if (i.eq. 64) then\n-            call abc( 64)\n-        else if (i.eq. 65) then\n-            call abc( 65)\n-        else if (i.eq. 66) then\n-            call abc( 66)\n-        else if (i.eq. 67) then\n-            call abc( 67)\n-        else if (i.eq. 68) then\n-            call abc( 68)\n-        else if (i.eq. 69) then\n-            call abc( 69)\n-        else if (i.eq. 70) then\n-            call abc( 70)\n-        else if (i.eq. 71) then\n-            call abc( 71)\n-        else if (i.eq. 72) then\n-            call abc( 72)\n-        else if (i.eq. 73) then\n-            call abc( 73)\n-        else if (i.eq. 74) then\n-            call abc( 74)\n-        else if (i.eq. 75) then\n-            call abc( 75)\n-        else if (i.eq. 76) then\n-            call abc( 76)\n-        else if (i.eq. 77) then\n-            call abc( 77)\n-        else if (i.eq. 78) then\n-            call abc( 78)\n-        else if (i.eq. 79) then\n-            call abc( 79)\n-        else if (i.eq. 80) then\n-            call abc( 80)\n-        else if (i.eq. 81) then\n-            call abc( 81)\n-        else if (i.eq. 82) then\n-            call abc( 82)\n-        else if (i.eq. 83) then\n-            call abc( 83)\n-        else if (i.eq. 84) then\n-            call abc( 84)\n-        else if (i.eq. 85) then\n-            call abc( 85)\n-        else if (i.eq. 86) then\n-            call abc( 86)\n-        else if (i.eq. 87) then\n-            call abc( 87)\n-        else if (i.eq. 88) then\n-            call abc( 88)\n-        else if (i.eq. 89) then\n-            call abc( 89)\n-        else if (i.eq. 90) then\n-            call abc( 90)\n-        else if (i.eq. 91) then\n-            call abc( 91)\n-        else if (i.eq. 92) then\n-            call abc( 92)\n-        else if (i.eq. 93) then\n-            call abc( 93)\n-        else if (i.eq. 94) then\n-            call abc( 94)\n-        else if (i.eq. 95) then\n-            call abc( 95)\n-        else if (i.eq. 96) then\n-            call abc( 96)\n-        else if (i.eq. 97) then\n-            call abc( 97)\n-        else if (i.eq. 98) then\n-            call abc( 98)\n-        else if (i.eq. 99) then\n-            call abc( 99)\n-        else if (i.eq. 100) then\n-            call abc( 100)\n-        else if (i.eq. 101) then\n-            call abc( 101)\n-        else if (i.eq. 102) then\n-            call abc( 102)\n-        else if (i.eq. 103) then\n-            call abc( 103)\n-        else if (i.eq. 104) then\n-            call abc( 104)\n-        else if (i.eq. 105) then\n-            call abc( 105)\n-        else if (i.eq. 106) then\n-            call abc( 106)\n-        else if (i.eq. 107) then\n-            call abc( 107)\n-        else if (i.eq. 108) then\n-            call abc( 108)\n-        else if (i.eq. 109) then\n-            call abc( 109)\n-        else if (i.eq. 110) then\n-            call abc( 110)\n-        else if (i.eq. 111) then\n-            call abc( 111)\n-        else if (i.eq. 112) then\n-            call abc( 112)\n-        else if (i.eq. 113) then\n-            call abc( 113)\n-        else if (i.eq. 114) then\n-            call abc( 114)\n-        else if (i.eq. 115) then\n-            call abc( 115)\n-        else if (i.eq. 116) then\n-            call abc( 116)\n-        else if (i.eq. 117) then\n-            call abc( 117)\n-        else if (i.eq. 118) then\n-            call abc( 118)\n-        else if (i.eq. 119) then\n-            call abc( 119)\n-        else if (i.eq. 120) then\n-            call abc( 120)\n-        else if (i.eq. 121) then\n-            call abc( 121)\n-        else if (i.eq. 122) then\n-            call abc( 122)\n-        else if (i.eq. 123) then\n-            call abc( 123)\n-        else if (i.eq. 124) then\n-            call abc( 124)\n-        else if (i.eq. 125) then           !< Miscompiles if present\n-            call abc( 125)                 !<\n-\n-c        else if (i.eq. 126) then\n-c            call abc( 126)\n-        endif\n-        end"}, {"sha": "a0f5fd17544e6c0f9330daacad8955b748e0305d", "filename": "gcc/testsuite/g77.f-torture/compile/19990826-3.f", "status": "removed", "additions": 0, "deletions": 320, "changes": 320, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F19990826-3.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F19990826-3.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F19990826-3.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,320 +0,0 @@\n-* Date: Thu, 19 Aug 1999 10:02:32 +0200\n-* From: Frederic Devernay <devernay@istar.fr>\n-* Organization: ISTAR\n-* X-Accept-Language: French, fr, en\n-* To: gcc-bugs@gcc.gnu.org\n-* Subject: g77 2.95 bug (Internal compiler error in `final_scan_insn')\n-* X-UIDL: 08443f5c374ffa382a05573281482f4f\n-\n-* Here's a bug that happens only when I compile with -O (disappears with\n-* -O2)\n-\n-* > g77 -v --save-temps -O -c  pcapop.f\n-* g77 version 2.95 19990728 (release) (from FSF-g77 version 0.5.25\n-* 19990728 (release))\n-* Reading specs from\n-* /usr/local/lib/gcc-lib/sparc-sun-solaris2.6/2.95/specs\n-* gcc version 2.95 19990728 (release)\n-*  /usr/local/lib/gcc-lib/sparc-sun-solaris2.6/2.95/f771 pcapop.f -quiet\n-* -dumpbase pcapop.f -O -version -fversion -o pcapop.s\n-* GNU F77 version 2.95 19990728 (release) (sparc-sun-solaris2.6) compiled\n-* by GNU C version 2.95 19990728 (release).\n-* GNU Fortran Front End version 0.5.25 19990728 (release)\n-* pcapop.f: In subroutine `pcapop':\n-* pcapop.f:291: Internal compiler error in `final_scan_insn', at\n-* final.c:2920\n-* Please submit a full bug report.\n-* See <URL:http://egcs.cygnus.com/faq.html#bugreport> for instructions.\n-\n-C* PCAPOP\n-\tSUBROUTINE PCAPOP(M1,M2,L1,L2,NMEM,N1,N2,IB,IBB,K3,TF,TS,TC,TTO)\n-\tDIMENSION NVA(6),C(6),I(6)\n-C\n-C CALCUL DES PARAMETRES OPTIMAUX N1 N2 IB IBB\n-C\n-\tTACC=.035\n-\tTTRANS=.000004\n-\tRAD=.000001\n-\tRMI=.000001\n-\tRMU=.0000015\n-\tRDI=.000003\n-\tRTE=.000003\n-\tREQ=.000005\n-\tVY1=3*RTE+RDI+8*REQ+3*(RAD+RMI+RMU)\n-\tVY2=REQ+2*RAD\n-\tAR2=M2*(2*(REQ+RMI)+3*RMU+M1*(2*RAD+REQ))\n-C     VARIATION DE L1,L2,\n-C\n-\tTTOTOP=1.E+10\n-\tN1CO=0\n-\tN2CO=0\n-\tIBCO=0\n-\tIBBCO=0\n-\tK3CO=0\n-\tTESOP=0.\n-\tTCOP=0.\n-\tTFOP=0.\n-\t INUN=7\n-\t INDE=7\n-\t IF(M1.LT.128)INUN=6\n-\t IF(M1.LT.64)INUN=5\n-\t IF(M1.LT.32)INUN=4\n-\t IF(M2.LT.128)INDE=6\n-\t IF(M2.LT.64)INDE=5\n-\t IF(M2.LT.32)INDE=4\n-\tDO 3 NUN =3,INUN\n-\tDO 3 NDE=3,INDE\n-\tN10=2**NUN\n-\tN20=2**NDE\n-\tNDIF=(N10-N20)\n-\tNDIF=IABS(NDIF)\n-C POUR AVOIR CES RESULTATS FAIRE TOURNER LE PROGRAMME VEFFT1\n-\t TCFFTU=0.\n-\tIF(N10.EQ.128.AND.N20.EQ.128)TCFFTU=3.35\n-\tIF(N10.EQ.64.AND.N20.EQ.64)TCFFTU=.70\n-\tIF(N10.EQ.32.AND.N20.EQ.32)TCFFTU=.138\n-\tIF(N10.EQ.16.AND.N20.EQ.16)TCFFTU=.0332\n-\tIF(N10.EQ.8.AND.N20.EQ.8)TCFFTU=.00688\n-\tIF(NDIF.EQ.64)TCFFTU=1.566\n-\tIF(NDIF.EQ.96)TCFFTU=.709\n-\tIF(NDIF.EQ.112)TCFFTU=.349\n-\tIF(NDIF.EQ.120)TCFFTU=.160\n-\tIF(NDIF.EQ.32)TCFFTU=.315\n-\tIF(NDIF.EQ.48)TCFFTU=.154\n-\tIF(NDIF.EQ.56)TCFFTU=.07\n-\tIF(NDIF.EQ.16)TCFFTU=.067\n-\tIF(NDIF.EQ.24)TCFFTU=.030\n-\tIF(NDIF.EQ.8)TCFFTU=.016\n-\tN30=N10-L1+1\n-\tN40=N20-L2+1\n-\tWW=VY1+N30*VY2\n-\tNDOU=2*N10*N20\n-\tIF((N10.LT.L1).OR.(N20.LT.L2)) GOTO 3\n-\tNB=NMEM-NDOU-N20*(L1-1)\n-\tNVC=2*N10*(N20-1)+M1\n-\tIF(NB.LT.(NVC)) GOTO 3\n-\tCALL VALENT(M1,N30,K1)\n-\tCALL VALENT(M2,N40,K2)\n-\tIS=K1/2\n-\tIF((2*IS).NE.K1)K1=K1+1\n-\t    TFF=TCFFTU*K1*K2\n-\tCALL VALENT(M2,N40,JOFI)\n-\tIF(NB.GE.(K1*N20*N30+2*N20*(L1-1))) GOTO 4\n-\tTIOOP=1.E+10\n-\tIC=1\n-18    IB1=2*IC\n-\tMAX=(NB-2*N20*(L1-1))/(N20*N30)\n-\tIN=MAX/2\n-\tIF(MAX.NE.2*IN) MAX=MAX-1\n-\tK3=K1/IB1\n-\tIBB1=K1-K3*IB1\n-\tIOFI=M1/(IB1*N30)\n-\tIRZ=0\n-\tIF(IOFI*IB1*N30.EQ.M1) GOTO1234\n-\tIRZ=1\n-\tIOFI=IOFI+1\n-\tIF(IBB1.EQ.0) GOTO 1234\n-\tIF(M1.EQ.((IOFI-1)*IB1*N30+IBB1*N30)) GOTO 1233\n-\tIRZ=2\n-\tGOTO 1234\n-1233  IRZ=3\n-1234  IBX1=IBB1\n-\tIF(IBX1.EQ.0)IBX1=IB1\n-\tAR1=M2*(2*(RAD+RMI+RMU+REQ)+(M1-(IOFI-1)*IB1*N30)*2*(REQ+RAD))\n-     %+M2*(3*(REQ+RMU+RAD)+4*RMI+(M1-(IOFI-1)*IB1*N30)*(2*RAD+REQ)\n-     %+(IOFI-1)*IB1*N30*(2*RMI+REQ+RAD))\n-\tAR5=(JOFI-1)*(N20-L2)*(M1-(IOFI-1)*IB1*N30)*(2*(RAD+RMU)+REQ)\n-     %*IOFI+(M2-(JOFI-1)*N40+L2-2)*(M1-(IOFI-1)*IB1*N30)*(2*(RAD+RMU\n-     %)+REQ)*IOFI\n-\tWQ=((IOFI-1)*IB1+IBX1)*JOFI*WW\n-\tAT1=N20*WQ\n-\tAT2=N40*WQ\n-\tQW=JOFI*(VY1+VY2*IB1*N30)\n-\tAT3=IOFI*N40*QW\n-\tAT4=(IOFI-1)*N40*QW\n-\tAT5=JOFI*((IOFI-1)*N40*(IB1/IBX1)*(VY1+IBX1*N30*VY2)\n-     %+N40*((IB1/IBX1)*(IOFI-1)+1)*(VY1+IBX1*N30*VY2))\n-\tAT6=JOFI*((IOFI-1)*N40*(IB1/2)*(VY1+2*N30*VY2)+N40*(\n-     %IB1*(IOFI-1)/2+IBX1/2)*(VY1+2*N30*VY2))\n-\tT1=JOFI*N20*(L1-1)*REQ\n-\tT2=M1*(L2-1)*REQ\n-\tT3=JOFI*N20*IBX1*N30*(RAD+REQ)\n-\tT4=JOFI*((IOFI-1)*IB1*N30*N20*(2*RMI+REQ)+IBX1*N30*N20*(2*RMI+R\n-     %EQ))\n-\tT5=JOFI*((IOFI-1)*IB1/2+IBX1/2)*N20*N30*(2*RAD+REQ)\n-\tT6=2*JOFI*(((IOFI-1)*IB1+IBX1)*N20)*((5*(RMI+RMU)+4*RAD\n-     %)+(L1-1)*(2*RAD+REQ)+N30*(2*RAD+REQ))\n-\tT7=JOFI*2*((IOFI-1)*IB1+IBX1)*(L1-1)*(2*RAD+REQ)\n-\tT8=JOFI*N10*N20*((IOFI-1)*IB1/2+IBX1/2)*(3*REQ+9*RAD+4*RMU+RMI)\n-\tT9=N10*N20*JOFI*((IOFI-1)*IB1/2+IBX1/2)*(REQ+RMI)+M1*M2*(REQ+R\n-     %DI+2*RAD)\n-\tT10=JOFI*((IOFI-1)*IB1/2+IBX1/2)*2*(3*RMU+2*(RMI+RAD)+N40*(3*RMI\n-     %+4*RMU+3*(RAD+REQ)+N30*(2*RAD+REQ)))\n-\tPOI=JOFI\n-\tIF(POI.LE.2)POI=2\n-\tTNRAN=(N40+(POI-2)*N20+(M2-(JOFI-1)*N40+L2-1))*(RMI+RMU+RAD\n-     %+REQ+N30*(2*RAD+2*REQ)*(IB1*(IOFI-1)+IBX1))\n-\tIF(TNRAN.LT.0.)TNRAN=0.\n-\tTCPU=T1+T2+T3+T4+T5+T6+T7+T8+T9+T10+TNRAN\n-\tNVA(1)=N40\n-\tNVA(2)=N40\n-\tNVA(3)=N20\n-\tNVA(4)=N20\n-\tNVA(5)=M2-(JOFI-1)*N40\n-\tNVA(6)=NVA(5)\n-\tC(1)=FLOAT(IB1*N30)/FLOAT(M1)\n-\tC(2)=FLOAT(M1-(IOFI-1)*IB1*N30)/FLOAT(M1)\n-\tC(3)=C(1)\n-\tC(4)=C(2)\n-\tC(5)=C(1)\n-\tC(6)=C(2)\n-\tK=1\n-\tP1=FLOAT(NB)/FLOAT(M1)\n-10    IP1=P1\n-\tI(K)=1\n-\tIF(IP1.GE.NVA(K)) GOTO 7\n-\tP2=P1\n-\tIP2=P2\n-8     P2=P2-FLOAT(IP2)*C(K)\n-\tIP2=P2\n-\tIF(IP2.EQ.0) GOTO 3\n-\tIP1=IP1+IP2\n-\tI(K)=I(K)+1\n-\tIF(IP1.GE.NVA(K))GOTO 7\n-\tGOTO 8\n-7     IF(K.EQ.6) GOTO 11\n-\tK=K+1\n-\tGOTO 10\n-11    IP1=0\n-\tIP2=0\n-\tIP3=0\n-\tPOFI=JOFI\n-\tIF(POFI.LE.2)POFI=2\n-\tTIOL=(I(2)+(IOFI-1)*I(1)+(POFI-2)*(IOFI-1)*I(3)+(POFI-\n-     %2)*I(4)+(IOFI-1)*I(5)+I(6))*TACC+(IOFI*M1*N40+(POFI-2)*IOFI*\n-     %M1*N20+(M2-(JOFI-1)*N40+L2-1)*M1*IOFI)*TTRANS\n-\tIF(IBB1.EQ.0) GOTO 33\n-\tIF(IB1.EQ.IBB1) GOTO 33\n-\tIF(IBB1.EQ.2)GOTO 34\n-\tIP3=1\n-\tINL=NMEM/((IOFI-1)*IB1*N30+IBB1*N30)\n-55    IF(INL.GT.N40)INL=N40\n-\tGOTO 35\n-33    IF(IB1.GT.2) GOTO 36\n-\tIF((M1-(IOFI-1)*IB1*N30).GE.N30) GOTO 36\n-34    IP1=1\n-\tINL=NMEM/(2*M1-(IOFI-1)*IB1*N30)\n-\tGOTO 55\n-36    IP2=1\n-\tINL=NMEM/(IOFI*IB1*N30)\n-\tIF(INL.GT.N40)INL=N40\n-35    CALL VALENT(N40,INL,KN1)\n-\tCALL VALENT(M2-(JOFI-1)*N40,INL,KN2)\n-\tCALL VALENT(INL*IBB1,IB1,KN3)\n-\tCALL VALENT((N40-(KN1-1)*INL)*IBB1,IB1,KN4)\n-\tIF((IP1+IP2+IP3).NE.1) CALL ERMESF(14)\n-\tTIO1=0.\n-\tIF(IP3.EQ.1)TIO1=N30*M2*TTRANS*(IB1*(IOFI-1)+IBB1)\n-\tIF(IP1.EQ.1)TIO1=M1*M2*TTRANS\n-\tIF(IP2.EQ.1) TIO1=(IB1*N30*M2*IOFI*TTRANS)\n-\tTTIO=2.*TIO1+(KN1*IOFI*(JOFI-1)+KN2*IOFI+(KN1-1)*(\n-     %JOFI-1)+IOFI*(JOFI-1)+KN2-1.+IOFI+(KN1*(JOFI-1)+KN2))*TACC\n-     %+M1*M2*TTRANS+TIOL\n-\tIF((IP1.EQ.1).AND.(IRZ.EQ.0))TCPU=TCPU+AT1+AT2+AT3\n-\tIF((IP1.EQ.1).AND.(IRZ.NE.0))TCPU=TCPU+AT1+AT2+AT4+AR1\n-\tIF((IP2.EQ.1).AND.(IRZ.EQ.0))TCPU=TCPU+AT1+AT2+AT3\n-\tIF((IP2.EQ.1).AND.(IRZ.NE.0))TCPU=TCPU+AT1+AT2+AT3+AR2\n-\tIFOIS=IB1/IBX1\n-\tIF((IP3.EQ.1).AND.(IFOIS*IBX1.EQ.IB1))TCPU=TCPU+AT1+AT2+AT5+AR2\n-\tIF((IP3.EQ.1).AND.(IFOIS*IBX1.NE.IB1))TCPU=TCPU+AT1+AT2+AT6+AR2\n-\tIF((IP1.EQ.1).AND.(IRZ.EQ.1))TCPU=TCPU+AR5\n-\tIF((IP1.EQ.1).AND.(IRZ.EQ.2))TCPU=TCPU+AR5\n-\tTTIOG=TTIO+TCPU\n-\tIF(TTIOG.LE.0.) GOTO 99\n-\tIF(TTIOG.GE.TIOOP) GOTO 99\n-\tIBOP=IB1\n-\tIBBOP=IBB1\n-\tK3OP=K3\n-\tTIOOP=TTIOG\n-\tTIOOP1=TTIO\n-\tTIOOP2=TCPU\n-99    IF(IB1.GE.MAX)GOTO17\n-\tIC=IC+1\n-\tGOTO 18\n-4     T1=JOFI*N20*(L1-1)*REQ\n-\tT2=M1*(L2-1)*REQ\n-\tT3=JOFI*N20*N30*(RAD+REQ)*K1\n-\tT4=JOFI*(K1*N30*N20*(2*RMI+REQ))\n-\tT5=JOFI*N20*N30*(2*RAD+REQ)*K1/2\n-\tT6=2*JOFI*(K1*N20)*((5*RMI+RMU)+4*RAD+(L1-1)*(2*RAD+REQ)+N30*2*\n-     %RAD+REQ)\n-\tT7=JOFI*2*K1*(L1-1)*(2*RAD+REQ)\n-\tT9=JOFI*N10*N20*K1*(REQ+RMI)/2+M1*M2*(REQ+RDI+2*RAD)\n-\tT8=JOFI*N10*N20*K1*(3*REQ+9*RAD+4*RMU+RMI)/2\n-\tT10=JOFI*K1*(3*RMU+2*(RMI+RAD)+N40*(3*RMI\n-     %+4*RMU+3*(RAD+REQ)+N30*(2*RAD+REQ)))\n-\tPIO=JOFI\n-\tIF(PIO.LE.2)PIO=2\n-\tTNR=(N40+(PIO-2)*N20+(M2-(JOFI-1)*N40+L2-1))*(RMU+RMI+RAD+REQ+\n-     %N30*(2*RAD+2*REQ)*K1)\n-\tIF(TNR.LE.0.)TNR=0.\n-\tBT1=JOFI*N20*WW*K1\n-\tBT2=JOFI*N40*WW*K1\n-\tBT3=JOFI*N40*(VY1+K1*N30*VY2)\n-\tBR1=M2*(2*(RAD+RMI+RMU+REQ)+(M1*2*(REQ+RAD)))+M2*(3*(\n-     $REQ+RAD+RMU)+4*(RMI)+M1*(2*(RAD)+REQ))\n-\tBR2=M2*(2*(REQ+RMI)+3*RMU+M1*(2*RAD+REQ))\n-\tTCPU=T1+T2+T3+T4+T5+T6+T7+T8+T9+T10\n-\tTCPU=TCPU+TNR+BT1+BT2\n-\tLIOF=M1/(N30)\n-\tIRZ=0\n-\tIF(LIOF*N30.EQ.M1) GOTO 2344\n-\tIRZ=1\n-2344  IF(IRZ.EQ.0)TCPU=TCPU+BT3\n-\tIF(IRZ.NE.0)TCPU=TCPU+BT3+BR2\n-\tTIOOP=2.*FLOAT(M1)*FLOAT(M2)*TTRANS+2.*FLOAT(K2)*TACC+TCPU\n-\tIBOP=1\n-\tIBBOP=0\n-\tK3OP=1\n-\tTIOOP2=TCPU\n-\tTIOOP1=TIOOP-TCPU\n-17    TTOT=TIOOP+TFF\n-\tIF(TTOT.LE.0.) GOTO 3\n-\tIF(TTOT.GE.TTOTOP)GOTO3\n-\tN1CO=N10\n-\tN2CO=N20\n-\tIBCO=IBOP\n-\tIBBCO=IBBOP\n-\tK3CO=K3OP\n-\tTTOTOP=TTOT\n-\tTESOP=TIOOP1\n-\tTCOP=TIOOP2\n-\tTFOP=TFF\n-3     CONTINUE\n- \n-C\n-\tN1=N1CO\n-\tN2=N2CO\n-\tTTO=TTOTOP\n-\tIB=IBCO\n-\tIBB=IBBCO\n-\tK3=K3CO\n-\tTC=TCOP\n-\tTS=TESOP\n-\tTF=TFOP\n-\t   TT=TCOP+TFOP\n-\t  TWER=TTO-TT\n-\tIF(N1.EQ.0.OR.N2.EQ.0) CALL OUTSTR(0,'PAS DE PLACE MEMOIRE SUFFISA\n-     $NTE POUR UNE MISE EN OEUVRE PAR BLOCS$')\n-\t IF(IB.NE.1)RETURN\n-\t IHJ=(M1/(N1-L1+1))\n-\t IF(IHJ*(N1-L1+1).NE.M1)IHJ=IHJ+1\n-\t  IHJ1=IHJ/2\n-\t IF(IHJ1*2.NE.IHJ)GOTO7778\n-\t IB=IHJ\n-\t IBB=0\n-\t    RETURN\n-7778   IB=IHJ+1\n-\t IBB=0\n-\t   RETURN\n-\t END"}, {"sha": "b945b2eb1bd3cd03eedafc36dd4a5156034c04b8", "filename": "gcc/testsuite/g77.f-torture/compile/19990905-0.f", "status": "removed", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F19990905-0.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F19990905-0.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F19990905-0.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,7 +0,0 @@\n-* =foo0.f in Burley's g77 test suite.\n-      subroutine sub(a)\n-      common /info/ iarray(1000)\n-      equivalence (m,iarray(100)), (n,iarray(200))\n-      real a(m,n)\n-      a(1,1) = a(2,2)\n-      end"}, {"sha": "af82f65d288e93512ea0153a813832a82b71630e", "filename": "gcc/testsuite/g77.f-torture/compile/19990905-2.f", "status": "removed", "additions": 0, "deletions": 22, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F19990905-2.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F19990905-2.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F19990905-2.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,22 +0,0 @@\n-* =watson11.f in Burley's g77 test suite.\n-* Probably originally submitted by Ian Watson.\n-* Too small to worry about copyright issues, IMO, since it\n-* doesn't do anything substantive.\n-      SUBROUTINE OUTDNS(A,B,LCONV)\n-      IMPLICIT REAL*8(A-H,O-Z),INTEGER*4(I-N)\n-      COMMON/ARRAYS/Z(64,8),AB(30,30),PAIRS(9,9),T(9,9),TEMP(9,9),C1(3),\n-     >  C2(3),AA(30),BB(30)\n-      EQUIVALENCE (X1,C1(1)),(Y1,C1(2)),(Z1,C1(3))\n-      EQUIVALENCE (X2,C2(1)),(Y2,C2(2)),(Z2,C2(3))\n-      COMMON /CONTRL/\n-     >  SHIFT,CONV,SCION,DIVERG,\n-     >  IOPT,KCNDO,KINDO,KMINDO,I2EINT,KOHNO,KSLATE,\n-     >  N,NG,NUMAT,NSEK,NELECS,NIT,OCCA,OCCB,NOLDAT,NOLDFN\n-      INTEGER*4 OCCA,OCCB\n-      DIMENSION W(N),A(N,N),B(N,N)\n-      DIMENSION BUF(100)\n-      occb=5\n-      ENTRY INDNS (A,B)\n-   40 READ(IREAD) BUF\n-      STOP\n-      END"}, {"sha": "e4c6511fa3b6c6a04f466fd261ec13a16c4d7883", "filename": "gcc/testsuite/g77.f-torture/compile/20000412-1.f", "status": "removed", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F20000412-1.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F20000412-1.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F20000412-1.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,5 +0,0 @@\n-      subroutine aap(k)\n-      equivalence (i,r)\n-      i = k\n-      print*,r\n-      end"}, {"sha": "ff95214351e1689161c5287ecfd1c0e8be5b19de", "filename": "gcc/testsuite/g77.f-torture/compile/20000511-1.f", "status": "removed", "additions": 0, "deletions": 21, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F20000511-1.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F20000511-1.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F20000511-1.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,21 +0,0 @@\n-      subroutine saxpy(n,sa,sx,incx,sy,incy)\n-C\n-C     constant times a vector plus a vector.\n-C     uses unrolled loop for increments equal to one.\n-C     jack dongarra, linpack, 3/11/78.\n-C     modified 12/3/93, array(1) declarations changed to array(*)\n-C\n-      real sx(*),sy(*),sa\n-      integer i,incx,incy,ix,iy,m,mp1,n\n-C\n-C  -ffast-math ICE provoked by this conditional\n-      if(sa /= 0.0)then\n-C\n-C        code for both increments equal to 1\n-C\n-\t      do i= 1,n\n-\t\tsy(i)= sy(i)+sa*sx(i)\n-\t\tenddo\n-\tendif\n-      return\n-      end"}, {"sha": "84542c578ae50cb19023feab45b6486e0d5e5efc", "filename": "gcc/testsuite/g77.f-torture/compile/20000511-2.f", "status": "removed", "additions": 0, "deletions": 61, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F20000511-2.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F20000511-2.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F20000511-2.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,61 +0,0 @@\n-      subroutine sgbcon(norm,n,kl,ku,ab,ldab,ipiv,anorm,rcond,work,iwork\n-     &,info)\n-C\n-C  -- LAPACK routine (version 3.0) --\n-C     Univ. of Tennessee, Univ. of California Berkeley, NAG Ltd.,\n-C     Courant Institute, Argonne National Lab, and Rice University\n-C     September 30, 1994\n-C\n-C     .. Scalar Arguments ..\n-      character norm\n-      integer info,kl,ku,ldab,n\n-      real anorm,rcond\n-C     ..\n-C     .. Array Arguments ..\n-      integer ipiv(n),iwork(n)\n-      real ab(ldab,n),work(n)\n-C     ..\n-C\n-C  Purpose\n-C  =======\n-C demonstrate g77 bug at -O -funroll-loops\n-C  =====================================================================\n-C\n-C     .. Parameters ..\n-      real one,zero\n-      parameter(one= 1.0e+0,zero= 0.0e+0)\n-C     ..\n-C     .. Local Scalars ..\n-      logical lnoti,onenrm\n-      character normin\n-      integer ix,j,jp,kase,kase1,kd,lm\n-      real ainvnm,scale,smlnum,t\n-C     ..\n-C     .. External Functions ..\n-      logical lsame\n-      integer isamax\n-      real sdot,slamch\n-      externallsame,isamax,sdot,slamch\n-C     ..\n-C     .. External Subroutines ..\n-      externalsaxpy,slacon,slatbs,srscl,xerbla\n-C     ..\n-C     .. Executable Statements ..\n-C\n-C           Multiply by inv(L).\n-C\n-      do j= 1,n-1\n-C the following min() intrinsic provokes this bug\n-\t  lm= min(kl,n-j)\n-\t  jp= ipiv(j)\n-\t  t= work(jp)\n-\t  if(jp.ne.j)then\n-C but only when combined with this if block\n-\t      work(jp)= work(j)\n-\t      work(j)= t\n-\t    endif\n-C and this subroutine call\n-\t  call saxpy(lm,-t,ab(kd+1,j),1,work(j+1),1)\n-\tenddo\n-      return\n-      end"}, {"sha": "200a1ebcf2c2b1729558dce4ed457d3350e00765", "filename": "gcc/testsuite/g77.f-torture/compile/20000518.f", "status": "removed", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F20000518.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F20000518.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F20000518.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,16 +0,0 @@\n-      SUBROUTINE SORG2R( K, A, N, LDA )\n-*  ICE in `verify_wide_reg_1', at flow.c:2605 at -O2\n-*  g77 version 2.96 20000515 (experimental) on i686-pc-linux-gnu\n-*\n-*  Originally derived from LAPACK 3.0 test suite failure.\n-*\n-*  David Billinghurst, (David.Billinghurst@riotinto.com.au)\n-*  18 May 2000\n-      INTEGER            I, K, LDA, N\n-      REAL               A( LDA, * )\n-      DO I = K, 1, -1\n-         IF( I.LT.N ) A( I, I ) = 1.0\n-         A( I, I ) = 1.0\n-      END DO\n-      RETURN\n-      END"}, {"sha": "86144a1aa096d1a02e1bfa375c1ab163312948eb", "filename": "gcc/testsuite/g77.f-torture/compile/20000601-1.f", "status": "removed", "additions": 0, "deletions": 28, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F20000601-1.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F20000601-1.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F20000601-1.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,28 +0,0 @@\n-      SUBROUTINE SGBTRF( M, KL, KU, AB, LDAB )\n-\n-*  PR fortran/275\n-*  ICE in `change_address', at emit-rtl.c:1589 with -O1 and above\n-*  g77 version 2.96 20000530 (experimental) on mips-sgi-irix6.5/-mabi=64\n-*\n-*  Originally derived from LAPACK 3.0 test suite failure.\n-*\n-*  David Billinghurst, (David.Billinghurst@riotinto.com.au)\n-*  1 June 2000\n-\n-      INTEGER   KL, KU, LDAB, M\n-      REAL      AB( LDAB, * )\n-\n-      INTEGER   J, JB, JJ, JP, KV, KM\n-      REAL      WORK13(65,64), WORK31(65,64)\n-      KV = KU + KL\n-      DO J = 1, M\n-         JB = MIN( 1, M-J+1 )\n-         DO JJ = J, J + JB - 1\n-            KM = MIN( KL, M-JJ )\n-            JP = KM+1\n-            CALL SSWAP( JB, AB( KV+1+JJ-J, J ), LDAB-1,\n-     $           AB( KV+JP+JJ-J, J ), LDAB-1 )\n-         END DO\n-      END DO\n-      RETURN\n-      END"}, {"sha": "06c68d22ba019be69053f8cb4f204347a76636d1", "filename": "gcc/testsuite/g77.f-torture/compile/20000601-2.f", "status": "removed", "additions": 0, "deletions": 27, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F20000601-2.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F20000601-2.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F20000601-2.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,27 +0,0 @@\n-      SUBROUTINE SGBTRF( M, KL, KU, AB, LDAB )\n-\n-*  Slightly modified version of 20000601-1.f that still ICES with\n-*  CVS 20010118 g77 on mips-sgi-irix6.5/-mabi=64.\n-*\n-*  Originally derived from LAPACK 3.0 test suite failure.\n-*\n-*  David Billinghurst, (David.Billinghurst@riotinto.com.au)\n-*  18 January 2001\n-\n-      INTEGER   KL, KU, LDAB, M\n-      REAL      AB( LDAB, * )\n-\n-      INTEGER   J, JB, JJ, JP, KV, KM, F\n-      REAL      WORK13(65,64), WORK31(65,64)\n-      KV = KU + KL\n-      DO J = 1, M\n-         JB = MIN( 1, M-J+1 )\n-         DO JJ = J, J + JB - 1\n-            KM = MIN( KL, M-JJ )\n-            JP = F( KM+1, AB( KV+1, JJ ) )\n-            CALL SSWAP( JB, AB( KV+1+JJ-J, J ), LDAB-1,\n-     $           AB( KV+JP+JJ-J, J ), LDAB-1 )\n-         END DO\n-      END DO\n-      RETURN\n-      END"}, {"sha": "c14021c4fa3da0ab6462053cfa4b37387bccb88d", "filename": "gcc/testsuite/g77.f-torture/compile/20000629-1.f", "status": "removed", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F20000629-1.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F20000629-1.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F20000629-1.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,11 +0,0 @@\n-      SUBROUTINE MIST(N, BETA)\n-      IMPLICIT REAL*8 (A-H,O-Z)\n-      INTEGER  IA, IQ, M1\n-      DIMENSION BETA(N)\n-      DO 80 IQ=1,M1\n-         IF (BETA(IQ).EQ.0.0D0) GO TO 120\n-   80 CONTINUE\n-  120 IF (IQ.NE.1) GO TO 160\n-  160 M1 = IA(IQ)\n-      RETURN\n-      END"}, {"sha": "623a29a9679e7c1e03ce09ee24813660e42cb15b", "filename": "gcc/testsuite/g77.f-torture/compile/20000630-2.f", "status": "removed", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F20000630-2.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F20000630-2.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F20000630-2.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,9 +0,0 @@\n-      SUBROUTINE CHOUT(CHR,ICNT)\n-C ICE: failed assertion `expr != NULL'\n-C Reduced version of GNATS PR fortran/329 from trond.bo@dnmi.no\n-      INTEGER CHR(ICNT)\n-      CHARACTER*255 BUF\n-      BUF(1:1)=CHAR(CHR(1))\n-      CALL FPUTC(1,BUF(1:1))\n-      RETURN\n-      END"}, {"sha": "8cf85a80abe576ddd24e237bda592912a7adacff", "filename": "gcc/testsuite/g77.f-torture/compile/20010115.f", "status": "removed", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F20010115.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F20010115.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F20010115.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,9 +0,0 @@\n-* GNATS PR Fortran/1636\n-      PRINT 42, 'HELLO'\n-   42 FORMAT(A)\n-      CALL WORLD\n-      END\n-      SUBROUTINE WORLD\n-      PRINT 42, 'WORLD'\n-   42 FORMAT(A)\n-      END"}, {"sha": "3f3b5602737081ad4986f159d74ff931d83b14d1", "filename": "gcc/testsuite/g77.f-torture/compile/20010321-1.f", "status": "removed", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F20010321-1.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F20010321-1.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F20010321-1.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,8 +0,0 @@\n-# 1 \"20010321-1.f\"\n-      SUBROUTINE TWOEXP\n-# 1 \"include/implicit.h\" 1 3\n-      IMPLICIT DOUBLE PRECISION (A-H)\n-# 3 \"20010321-1.f\" 2 3\n-      LOGICAL ANTI\n-      ANTI = .FALSE.\n-      END"}, {"sha": "b22b02907a6f9d442e2ca40fb772e7a60347434f", "filename": "gcc/testsuite/g77.f-torture/compile/20010426.f", "status": "removed", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F20010426.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F20010426.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F20010426.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,6 +0,0 @@\n-      function f(c)\n-      implicit none\n-      real*8 c, f\n-      f = sqrt(c)\n-      return\n-      end"}, {"sha": "efe6b34ad9e94bdc029dd7f2211ca46c94e9a107", "filename": "gcc/testsuite/g77.f-torture/compile/20010519-1.f", "status": "removed", "additions": 0, "deletions": 1326, "changes": 1326, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F20010519-1.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F20010519-1.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F20010519-1.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,1326 +0,0 @@\n-CHARMM Element source/dimb/nmdimb.src 1.1\n-C.##IF DIMB\n-      SUBROUTINE NMDIMB(X,Y,Z,NAT3,BNBND,BIMAG,LNOMA,AMASS,DDS,DDSCR,\n-     1                 PARDDV,DDV,DDM,PARDDF,DDF,PARDDE,DDEV,DD1BLK,\n-     2                 DD1BLL,NADD,LRAISE,DD1CMP,INBCMP,JNBCMP,\n-     3                 NPAR,ATMPAR,ATMPAS,BLATOM,PARDIM,NFREG,NFRET,\n-     4                 PARFRQ,CUTF1,ITMX,TOLDIM,IUNMOD,IUNRMD,\n-     5                 LBIG,LSCI,ATMPAD,SAVF,NBOND,IB,JB,DDVALM)\n-C-----------------------------------------------------------------------\n-C     01-Jul-1992 David Perahia, Liliane Mouawad\n-C     15-Dec-1994 Herman van Vlijmen\n-C\n-C     This is the main routine for the mixed-basis diagonalization.\n-C     See: L.Mouawad and D.Perahia, Biopolymers (1993), 33, 599,\n-C     and: D.Perahia and L.Mouawad, Comput. Chem. (1995), 19, 241.\n-C     The method iteratively solves the diagonalization of the\n-C     Hessian matrix. To save memory space, it uses a compressed\n-C     form of the Hessian, which only contains the nonzero elements.\n-C     In the diagonalization process, approximate eigenvectors are\n-C     mixed with Cartesian coordinates to form a reduced basis. The\n-C     Hessian is then diagonalized in the reduced basis. By iterating\n-C     over different sets of Cartesian coordinates the method ultimately\n-C     converges to the exact eigenvalues and eigenvectors (up to the\n-C     requested accuracy).\n-C     If no existing basis set is read, an initial basis will be created\n-C     which consists of the low-frequency eigenvectors of diagonal blocks\n-C     of the Hessian.\n-C-----------------------------------------------------------------------\n-C-----------------------------------------------------------------------\n-C:::##INCLUDE '~/charmm_fcm/impnon.fcm'\n-C..##IF VAX IRIS HPUX IRIS GNU CSPP OS2 GWS CRAY ALPHA\n-      IMPLICIT NONE\n-C..##ENDIF\n-C-----------------------------------------------------------------------\n-C-----------------------------------------------------------------------\n-C:::##INCLUDE '~/charmm_fcm/stream.fcm'\n-      LOGICAL LOWER,QLONGL\n-      INTEGER MXSTRM,POUTU\n-      PARAMETER (MXSTRM=20,POUTU=6)\n-      INTEGER   NSTRM,ISTRM,JSTRM,OUTU,PRNLEV,WRNLEV,IOLEV\n-      COMMON /CASE/   LOWER, QLONGL\n-      COMMON /STREAM/ NSTRM,ISTRM,JSTRM(MXSTRM),OUTU,PRNLEV,WRNLEV,IOLEV\n-C..##IF SAVEFCM\n-C..##ENDIF\n-C-----------------------------------------------------------------------\n-C-----------------------------------------------------------------------\n-C:::##INCLUDE '~/charmm_fcm/dimens.fcm'\n-      INTEGER LARGE,MEDIUM,SMALL,REDUCE\n-C..##IF QUANTA\n-C..##ELIF T3D\n-C..##ELSE\n-      PARAMETER (LARGE=60120, MEDIUM=25140, SMALL=6120)\n-C..##ENDIF\n-      PARAMETER (REDUCE=15000)\n-      INTEGER SIZE\n-C..##IF XLARGE\n-C..##ELIF XXLARGE\n-C..##ELIF LARGE\n-C..##ELIF MEDIUM\n-      PARAMETER (SIZE=MEDIUM)\n-C..##ELIF REDUCE\n-C..##ELIF SMALL\n-C..##ELIF XSMALL\n-C..##ENDIF\n-C..##IF MMFF\n-      integer MAXDEFI\n-      parameter(MAXDEFI=250)\n-      INTEGER NAME0,NAMEQ0,NRES0,KRES0\n-      PARAMETER (NAME0=4,NAMEQ0=10,NRES0=4,KRES0=4)\n-      integer MaxAtN\n-      parameter (MaxAtN=55)\n-      INTEGER MAXAUX\n-      PARAMETER (MAXAUX = 10)\n-C..##ENDIF\n-      INTEGER MAXCSP, MAXHSET\n-C..##IF HMCM\n-      PARAMETER (MAXHSET = 200)\n-C..##ELSE\n-C..##ENDIF\n-C..##IF REDUCE\n-C..##ELSE\n-      PARAMETER (MAXCSP = 500)\n-C..##ENDIF\n-C..##IF HMCM\n-      INTEGER MAXHCM,MAXPCM,MAXRCM\n-C...##IF REDUCE\n-C...##ELSE\n-      PARAMETER (MAXHCM=500)\n-      PARAMETER (MAXPCM=5000)\n-      PARAMETER (MAXRCM=2000)\n-C...##ENDIF\n-C..##ENDIF\n-      INTEGER MXCMSZ\n-C..##IF IBM IBMRS CRAY INTEL IBMSP T3D REDUCE\n-C..##ELSE\n-      PARAMETER (MXCMSZ = 5000)\n-C..##ENDIF\n-      INTEGER CHRSIZ\n-      PARAMETER (CHRSIZ = SIZE)\n-      INTEGER MAXATB\n-C..##IF REDUCE\n-C..##ELIF QUANTA\n-C..##ELSE\n-      PARAMETER (MAXATB = 200)\n-C..##ENDIF\n-      INTEGER MAXVEC\n-C..##IFN VECTOR PARVECT\n-      PARAMETER (MAXVEC = 10)\n-C..##ELIF LARGE XLARGE XXLARGE\n-C..##ELIF MEDIUM\n-C..##ELIF SMALL REDUCE\n-C..##ELIF XSMALL\n-C..##ELSE\n-C..##ENDIF\n-      INTEGER IATBMX\n-      PARAMETER (IATBMX = 8)\n-      INTEGER MAXHB\n-C..##IF LARGE XLARGE XXLARGE\n-C..##ELIF MEDIUM\n-      PARAMETER (MAXHB = 8000)\n-C..##ELIF SMALL\n-C..##ELIF REDUCE XSMALL\n-C..##ELSE\n-C..##ENDIF\n-      INTEGER MAXTRN,MAXSYM\n-C..##IFN NOIMAGES\n-      PARAMETER (MAXTRN = 5000)\n-      PARAMETER (MAXSYM = 192)\n-C..##ELSE\n-C..##ENDIF\n-C..##IF LONEPAIR (lonepair_max)\n-      INTEGER MAXLP,MAXLPH\n-C...##IF REDUCE\n-C...##ELSE\n-      PARAMETER (MAXLP  = 2000)\n-      PARAMETER (MAXLPH = 4000)\n-C...##ENDIF\n-C..##ENDIF (lonepair_max)\n-      INTEGER NOEMAX,NOEMX2\n-C..##IF REDUCE\n-C..##ELSE\n-      PARAMETER (NOEMAX = 2000)\n-      PARAMETER (NOEMX2 = 4000)\n-C..##ENDIF\n-      INTEGER MAXATC, MAXCB, MAXCH, MAXCI, MAXCP, MAXCT, MAXITC, MAXNBF\n-C..##IF REDUCE\n-C..##ELIF MMFF CFF\n-      PARAMETER (MAXATC = 500, MAXCB = 1500, MAXCH = 3200, MAXCI = 600,\n-     &           MAXCP  = 3000,MAXCT = 15500,MAXITC = 200, MAXNBF=1000)\n-C..##ELIF YAMMP\n-C..##ELIF LARGE\n-C..##ELSE\n-C..##ENDIF\n-      INTEGER MAXCN\n-      PARAMETER (MAXCN = MAXITC*(MAXITC+1)/2)\n-      INTEGER MAXA, MAXAIM, MAXB, MAXT, MAXP\n-      INTEGER MAXIMP, MAXNB, MAXPAD, MAXRES\n-      INTEGER MAXSEG, MAXGRP\n-C..##IF LARGE XLARGE XXLARGE\n-C..##ELIF MEDIUM\n-      PARAMETER (MAXA = SIZE, MAXB = SIZE, MAXT = SIZE,\n-     &           MAXP = 2*SIZE)\n-      PARAMETER (MAXIMP = 9200, MAXNB = 17200, MAXPAD = 8160,\n-     &           MAXRES = 14000)\n-C...##IF MCSS\n-C...##ELSE\n-      PARAMETER (MAXSEG = 1000)\n-C...##ENDIF\n-C..##ELIF SMALL\n-C..##ELIF XSMALL\n-C..##ELIF REDUCE\n-C..##ELSE\n-C..##ENDIF\n-C..##IF NOIMAGES\n-C..##ELSE\n-      PARAMETER (MAXAIM = 2*SIZE)\n-      PARAMETER (MAXGRP = 2*SIZE/3)\n-C..##ENDIF\n-      INTEGER REDMAX,REDMX2\n-C..##IF REDUCE\n-C..##ELSE\n-      PARAMETER (REDMAX = 20)\n-      PARAMETER (REDMX2 = 80)\n-C..##ENDIF\n-      INTEGER MXRTRS, MXRTA, MXRTB, MXRTT, MXRTP, MXRTI, MXRTX,\n-     &        MXRTHA, MXRTHD, MXRTBL, NICM\n-      PARAMETER (MXRTRS = 200, MXRTA = 5000, MXRTB = 5000,\n-     &           MXRTT = 5000, MXRTP = 5000, MXRTI = 2000,\n-C..##IF YAMMP\n-C..##ELSE\n-     &           MXRTX = 5000, MXRTHA = 300, MXRTHD = 300,\n-C..##ENDIF\n-     &           MXRTBL = 5000, NICM = 10)\n-      INTEGER NMFTAB,  NMCTAB,  NMCATM,  NSPLIN\n-C..##IF REDUCE\n-C..##ELSE\n-      PARAMETER (NMFTAB = 200, NMCTAB = 3, NMCATM = 12000, NSPLIN = 3)\n-C..##ENDIF\n-      INTEGER MAXSHK\n-C..##IF XSMALL\n-C..##ELIF REDUCE\n-C..##ELSE\n-      PARAMETER (MAXSHK = SIZE*3/4)\n-C..##ENDIF\n-      INTEGER SCRMAX\n-C..##IF IBM IBMRS CRAY INTEL IBMSP T3D REDUCE\n-C..##ELSE\n-      PARAMETER (SCRMAX = 5000)\n-C..##ENDIF\n-C..##IF TSM\n-      INTEGER MXPIGG\n-C...##IF REDUCE\n-C...##ELSE\n-      PARAMETER (MXPIGG=500)\n-C...##ENDIF\n-      INTEGER MXCOLO,MXPUMB\n-      PARAMETER (MXCOLO=20,MXPUMB=20)\n-C..##ENDIF\n-C..##IF ADUMB\n-      INTEGER MAXUMP, MAXEPA, MAXNUM\n-C...##IF REDUCE\n-C...##ELSE\n-      PARAMETER (MAXUMP = 10, MAXNUM = 4)\n-C...##ENDIF\n-C..##ENDIF\n-      INTEGER MAXING\n-      PARAMETER (MAXING=1000)\n-C..##IF MMFF\n-      integer MAX_RINGSIZE, MAX_EACH_SIZE\n-      parameter (MAX_RINGSIZE = 20, MAX_EACH_SIZE = 1000)\n-      integer MAXPATHS\n-      parameter (MAXPATHS = 8000)\n-      integer MAX_TO_SEARCH\n-      parameter (MAX_TO_SEARCH = 6)\n-C..##ENDIF\n-C-----------------------------------------------------------------------\n-C-----------------------------------------------------------------------\n-C:::##INCLUDE '~/charmm_fcm/number.fcm'\n-      REAL*8     ZERO, ONE, TWO, THREE, FOUR, FIVE, SIX,\n-     &           SEVEN, EIGHT, NINE, TEN, ELEVEN, TWELVE, THIRTN,\n-     &           FIFTN, NINETN, TWENTY, THIRTY\n-C..##IF SINGLE\n-C..##ELSE\n-      PARAMETER (ZERO   =  0.D0, ONE    =  1.D0, TWO    =  2.D0,\n-     &           THREE  =  3.D0, FOUR   =  4.D0, FIVE   =  5.D0,\n-     &           SIX    =  6.D0, SEVEN  =  7.D0, EIGHT  =  8.D0,\n-     &           NINE   =  9.D0, TEN    = 10.D0, ELEVEN = 11.D0,\n-     &           TWELVE = 12.D0, THIRTN = 13.D0, FIFTN  = 15.D0,\n-     &           NINETN = 19.D0, TWENTY = 20.D0, THIRTY = 30.D0)\n-C..##ENDIF\n-      REAL*8     FIFTY, SIXTY, SVNTY2, EIGHTY, NINETY, HUNDRD,\n-     &           ONE2TY, ONE8TY, THRHUN, THR6TY, NINE99, FIFHUN, THOSND,\n-     &           FTHSND,MEGA\n-C..##IF SINGLE\n-C..##ELSE\n-      PARAMETER (FIFTY  = 50.D0,  SIXTY  =  60.D0,  SVNTY2 =   72.D0,\n-     &           EIGHTY = 80.D0,  NINETY =  90.D0,  HUNDRD =  100.D0,\n-     &           ONE2TY = 120.D0, ONE8TY = 180.D0,  THRHUN =  300.D0,\n-     &           THR6TY=360.D0,   NINE99 = 999.D0,  FIFHUN = 1500.D0,\n-     &           THOSND = 1000.D0,FTHSND = 5000.D0, MEGA   =   1.0D6)\n-C..##ENDIF\n-      REAL*8     MINONE, MINTWO, MINSIX\n-      PARAMETER (MINONE = -1.D0,  MINTWO = -2.D0,  MINSIX = -6.D0)\n-      REAL*8     TENM20,TENM14,TENM8,TENM5,PT0001,PT0005,PT001,PT005,\n-     &           PT01, PT02, PT05, PTONE, PT125, PT25, SIXTH, THIRD,\n-     &           PTFOUR, PTSIX, HALF, PT75, PT9999, ONEPT5, TWOPT4\n-C..##IF SINGLE\n-C..##ELSE\n-      PARAMETER (TENM20 = 1.0D-20,  TENM14 = 1.0D-14,  TENM8  = 1.0D-8,\n-     &           TENM5  = 1.0D-5,   PT0001 = 1.0D-4, PT0005 = 5.0D-4,\n-     &           PT001  = 1.0D-3,   PT005  = 5.0D-3, PT01   = 0.01D0,\n-     &           PT02   = 0.02D0,   PT05   = 0.05D0, PTONE  = 0.1D0,\n-     &           PT125  = 0.125D0,  SIXTH  = ONE/SIX,PT25   = 0.25D0,\n-     &           THIRD  = ONE/THREE,PTFOUR = 0.4D0,  HALF   = 0.5D0,\n-     &           PTSIX  = 0.6D0,    PT75   = 0.75D0, PT9999 = 0.9999D0,\n-     &           ONEPT5 = 1.5D0,    TWOPT4 = 2.4D0)\n-C..##ENDIF\n-      REAL*8 ANUM,FMARK\n-      REAL*8 RSMALL,RBIG\n-C..##IF SINGLE\n-C..##ELSE\n-      PARAMETER (ANUM=9999.0D0, FMARK=-999.0D0)\n-      PARAMETER (RSMALL=1.0D-10,RBIG=1.0D20)\n-C..##ENDIF\n-      REAL*8 RPRECI,RBIGST\n-C..##IF VAX DEC\n-C..##ELIF IBM\n-C..##ELIF CRAY\n-C..##ELIF ALPHA T3D T3E\n-C..##ELSE\n-C...##IF SINGLE\n-C...##ELSE\n-      PARAMETER (RPRECI = 2.22045D-16, RBIGST = 4.49423D+307)\n-C...##ENDIF\n-C..##ENDIF\n-C-----------------------------------------------------------------------\n-C-----------------------------------------------------------------------\n-C:::##INCLUDE '~/charmm_fcm/consta.fcm'\n-      REAL*8 PI,RADDEG,DEGRAD,TWOPI\n-      PARAMETER(PI=3.141592653589793D0,TWOPI=2.0D0*PI)\n-      PARAMETER (RADDEG=180.0D0/PI)\n-      PARAMETER (DEGRAD=PI/180.0D0)\n-      REAL*8 COSMAX\n-      PARAMETER (COSMAX=0.9999999999D0)\n-      REAL*8 TIMFAC\n-      PARAMETER (TIMFAC=4.88882129D-02)\n-      REAL*8 KBOLTZ\n-      PARAMETER (KBOLTZ=1.987191D-03)\n-      REAL*8 CCELEC\n-C..##IF AMBER\n-C..##ELIF DISCOVER\n-C..##ELSE\n-      PARAMETER (CCELEC=332.0716D0)\n-C..##ENDIF\n-      REAL*8 CNVFRQ\n-      PARAMETER (CNVFRQ=2045.5D0/(2.99793D0*6.28319D0))\n-      REAL*8 SPEEDL\n-      PARAMETER (SPEEDL=2.99793D-02)\n-      REAL*8 ATMOSP\n-      PARAMETER (ATMOSP=1.4584007D-05)\n-      REAL*8 PATMOS\n-      PARAMETER (PATMOS = 1.D0 / ATMOSP )\n-      REAL*8 BOHRR\n-      PARAMETER (BOHRR = 0.529177249D0 )\n-      REAL*8 TOKCAL\n-      PARAMETER (TOKCAL = 627.5095D0 )\n-C..##IF MMFF\n-      real*8 MDAKCAL\n-      parameter(MDAKCAL=143.9325D0)\n-C..##ENDIF\n-      REAL*8 DEBYEC\n-      PARAMETER ( DEBYEC = 2.541766D0 / BOHRR )\n-      REAL*8 ZEROC\n-      PARAMETER ( ZEROC = 298.15D0 )\n-C-----------------------------------------------------------------------\n-C-----------------------------------------------------------------------\n-C:::##INCLUDE '~/charmm_fcm/exfunc.fcm'\n-C..##IF ACE\n-C..##ENDIF\n-C..##IF ADUMB\n-C..##ENDIF\n-      CHARACTER*4 GTRMA, NEXTA4, CURRA4\n-      CHARACTER*6 NEXTA6\n-      CHARACTER*8 NEXTA8\n-      CHARACTER*20 NEXT20\n-      INTEGER     ALLCHR, ALLSTK, ALLHP, DECODI, FIND52,\n-     *            GETATN, GETRES, GETRSN, GETSEG, GTRMI, I4VAL,\n-     *            ICHAR4, ICMP16, ILOGI4, INDX, INDXA, INDXAF,\n-     *            INDXRA, INTEG4, IREAL4, IREAL8, LOCDIF,\n-     *            LUNASS, MATOM, NEXTI, NINDX, NSELCT, NSELCTV, ATMSEL,\n-     *            PARNUM, PARINS,\n-     *            SRCHWD, SRCHWS, STRLNG, DSIZE, SSIZE\n-C..##IF ACE\n-     *           ,GETNNB\n-C..##ENDIF\n-      LOGICAL     CHKPTR, EQST, EQSTA, EQSTWC, EQWDWC, DOTRIM, CHECQUE,\n-     *            HYDROG, INITIA, LONE, LTSTEQ, ORDER, ORDER5,\n-     *            ORDERR, USEDDT, QTOKDEL, QDIGIT, QALPHA\n-      REAL*8      DECODF, DOTVEC, GTRMF, LENVEC, NEXTF, RANDOM, GTRR8,\n-     *            RANUMB, R8VAL, RETVAL8, SUMVEC\n-C..##IF ADUMB\n-     *           ,UMFI\n-C..##ENDIF\n-      EXTERNAL  GTRMA, NEXTA4, CURRA4, NEXTA6, NEXTA8,NEXT20,\n-     *          ALLCHR, ALLSTK, ALLHP, DECODI, FIND52,\n-     *          GETATN, GETRES, GETRSN, GETSEG, GTRMI, I4VAL,\n-     *          ICHAR4, ICMP16,  ILOGI4, INDX, INDXA, INDXAF,\n-     *          INDXRA, INTEG4, IREAL4, IREAL8, LOCDIF,\n-     *          LUNASS, MATOM, NEXTI, NINDX, NSELCT, NSELCTV, ATMSEL,\n-     *          PARNUM, PARINS,\n-     *          SRCHWD, SRCHWS, STRLNG, DSIZE, SSIZE,\n-     *          CHKPTR, EQST, EQSTA, EQSTWC, EQWDWC, DOTRIM, CHECQUE,\n-     *          HYDROG, INITIA, LONE, LTSTEQ, ORDER, ORDER5,\n-     *          ORDERR, USEDDT, QTOKDEL, QDIGIT, QALPHA,\n-     *          DECODF, DOTVEC, GTRMF, LENVEC, NEXTF, RANDOM, GTRR8,\n-     *          RANUMB, R8VAL, RETVAL8, SUMVEC\n-C..##IF ADUMB\n-     *           ,UMFI\n-C..##ENDIF\n-C..##IF ACE\n-     *           ,GETNNB\n-C..##ENDIF\n-C..##IFN NOIMAGES\n-      INTEGER IMATOM\n-      EXTERNAL IMATOM\n-C..##ENDIF\n-C..##IF MBOND\n-C..##ENDIF\n-C..##IF MMFF\n-      INTEGER LEN_TRIM\n-      EXTERNAL LEN_TRIM\n-      CHARACTER*4 AtName\n-      external AtName\n-      CHARACTER*8 ElementName\n-      external ElementName\n-      CHARACTER*10 QNAME\n-      external QNAME\n-      integer  IATTCH, IBORDR, CONN12, CONN13, CONN14\n-      integer  LEQUIV, LPATH\n-      integer  nbndx, nbnd2, nbnd3, NTERMA\n-      external IATTCH, IBORDR, CONN12, CONN13, CONN14\n-      external LEQUIV, LPATH\n-      external nbndx, nbnd2, nbnd3, NTERMA\n-      external find_loc\n-      real*8   vangle, OOPNGL, TORNGL, ElementMass\n-      external vangle, OOPNGL, TORNGL, ElementMass\n-C..##ENDIF\n-C-----------------------------------------------------------------------\n-C-----------------------------------------------------------------------\n-C:::##INCLUDE '~/charmm_fcm/stack.fcm'\n-      INTEGER STKSIZ\n-C..##IFN UNICOS\n-C...##IF LARGE XLARGE\n-C...##ELIF MEDIUM REDUCE\n-      PARAMETER (STKSIZ=4000000)\n-C...##ELIF SMALL\n-C...##ELIF XSMALL\n-C...##ELIF XXLARGE\n-C...##ELSE\n-C...##ENDIF\n-      INTEGER LSTUSD,MAXUSD,STACK\n-      COMMON /ISTACK/ LSTUSD,MAXUSD,STACK(STKSIZ)\n-C..##ELSE\n-C..##ENDIF\n-C..##IF SAVEFCM\n-C..##ENDIF\n-C-----------------------------------------------------------------------\n-C-----------------------------------------------------------------------\n-C:::##INCLUDE '~/charmm_fcm/heap.fcm'\n-      INTEGER HEAPDM\n-C..##IFN UNICOS (unicos)\n-C...##IF XXLARGE (size)\n-C...##ELIF LARGE XLARGE (size)\n-C...##ELIF MEDIUM (size)\n-C....##IF T3D (t3d2)\n-C....##ELIF TERRA (t3d2)\n-C....##ELIF ALPHA (t3d2)\n-C....##ELIF T3E (t3d2)\n-C....##ELSE (t3d2)\n-      PARAMETER (HEAPDM=2048000)\n-C....##ENDIF (t3d2)\n-C...##ELIF SMALL (size)\n-C...##ELIF REDUCE (size)\n-C...##ELIF XSMALL (size)\n-C...##ELSE (size)\n-C...##ENDIF (size)\n-      INTEGER FREEHP,HEAPSZ,HEAP\n-      COMMON /HEAPST/ FREEHP,HEAPSZ,HEAP(HEAPDM)\n-      LOGICAL LHEAP(HEAPDM)\n-      EQUIVALENCE (LHEAP,HEAP)\n-C..##ELSE (unicos)\n-C..##ENDIF (unicos)\n-C..##IF SAVEFCM (save)\n-C..##ENDIF (save)\n-C-----------------------------------------------------------------------\n-C-----------------------------------------------------------------------\n-C:::##INCLUDE '~/charmm_fcm/fast.fcm'\n-      INTEGER IACNB, NITCC, ICUSED, FASTER, LFAST, LMACH, OLMACH\n-      INTEGER ICCOUNT, LOWTP, IGCNB, NITCC2\n-      INTEGER ICCNBA, ICCNBB, ICCNBC, ICCNBD, LCCNBA, LCCNBD\n-      COMMON /FASTI/ FASTER, LFAST, LMACH, OLMACH, NITCC, NITCC2,\n-     &               ICUSED(MAXATC), ICCOUNT(MAXATC), LOWTP(MAXATC),\n-     &               IACNB(MAXAIM), IGCNB(MAXATC),\n-     &               ICCNBA, ICCNBB, ICCNBC, ICCNBD, LCCNBA, LCCNBD\n-C..##IF SAVEFCM\n-C..##ENDIF\n-C-----------------------------------------------------------------------\n-C-----------------------------------------------------------------------\n-C:::##INCLUDE '~/charmm_fcm/deriv.fcm'\n-      REAL*8 DX,DY,DZ\n-      COMMON /DERIVR/ DX(MAXAIM),DY(MAXAIM),DZ(MAXAIM)\n-C..##IF SAVEFCM\n-C..##ENDIF\n-C-----------------------------------------------------------------------\n-C-----------------------------------------------------------------------\n-C:::##INCLUDE '~/charmm_fcm/energy.fcm'\n-      INTEGER LENENP, LENENT, LENENV, LENENA\n-      PARAMETER (LENENP = 50, LENENT = 70, LENENV = 50,\n-     &           LENENA = LENENP + LENENT + LENENV )\n-      INTEGER TOTE, TOTKE, EPOT, TEMPS, GRMS, BPRESS, PJNK1, PJNK2,\n-     &        PJNK3, PJNK4, HFCTE, HFCKE, EHFC, EWORK, VOLUME, PRESSE,\n-     &        PRESSI, VIRI, VIRE, VIRKE, TEPR, PEPR, KEPR, KEPR2,\n-     &        DROFFA,\n-     &        XTLTE, XTLKE, XTLPE, XTLTEM, XTLPEP, XTLKEP, XTLKP2,\n-     &        TOT4, TOTK4, EPOT4, TEM4, MbMom, BodyT, PartT\n-C..##IF ACE\n-     &      , SELF, SCREEN, COUL ,SOLV, INTER\n-C..##ENDIF\n-C..##IF FLUCQ\n-     &       ,FQKIN\n-C..##ENDIF\n-      PARAMETER (TOTE   =  1, TOTKE  =  2, EPOT   =  3, TEMPS  =  4,\n-     &           GRMS   =  5, BPRESS =  6, PJNK1  =  7, PJNK2  =  8,\n-     &           PJNK3  =  9, PJNK4  = 10, HFCTE  = 11, HFCKE  = 12,\n-     &           EHFC   = 13, EWORK  = 11, VOLUME = 15, PRESSE = 16,\n-     &           PRESSI = 17, VIRI   = 18, VIRE   = 19, VIRKE  = 20,\n-     &           TEPR   = 21, PEPR   = 22, KEPR   = 23, KEPR2  = 24,\n-     &                        DROFFA = 26, XTLTE  = 27, XTLKE  = 28,\n-     &           XTLPE  = 29, XTLTEM = 30, XTLPEP = 31, XTLKEP = 32,\n-     &           XTLKP2 = 33,\n-     &           TOT4   = 37, TOTK4  = 38, EPOT4  = 39, TEM4   = 40,\n-     &           MbMom  = 41, BodyT  = 42, PartT  = 43\n-C..##IF ACE\n-     &         , SELF   = 45, SCREEN = 46, COUL   = 47,\n-     &           SOLV   = 48, INTER  = 49\n-C..##ENDIF\n-C..##IF FLUCQ\n-     &          ,FQKIN  = 50\n-C..##ENDIF\n-     &          )\n-C..##IF ACE\n-C..##ENDIF\n-C..##IF GRID\n-C..##ENDIF\n-C..##IF FLUCQ\n-C..##ENDIF\n-      INTEGER  BOND, ANGLE, UREYB, DIHE, IMDIHE, VDW, ELEC, HBOND,\n-     &         USER, CHARM, CDIHE, CINTCR, CQRT, NOE, SBNDRY,\n-     &         IMVDW, IMELEC, IMHBND, EWKSUM, EWSELF, EXTNDE, RXNFLD,\n-     &         ST2, IMST2, TSM, QMEL, QMVDW, ASP, EHARM, GEO, MDIP,\n-     &         PRMS, PANG, SSBP, BK4D, SHEL, RESD, SHAP,\n-     &         STRB, OOPL, PULL, POLAR, DMC, RGY, EWEXCL, EWQCOR,\n-     &         EWUTIL, PBELEC, PBNP, PINT, MbDefrm, MbElec, STRSTR,\n-     &         BNDBND, BNDTW, EBST, MBST, BBT, SST, GBEnr, GSBP\n-C..##IF HMCM\n-     &       , HMCM\n-C..##ENDIF\n-C..##IF ADUMB\n-     &       , ADUMB\n-C..##ENDIF\n-     &       , HYDR\n-C..##IF FLUCQ\n-     &       , FQPOL\n-C..##ENDIF\n-      PARAMETER (BOND   =  1, ANGLE  =  2, UREYB  =  3, DIHE   =  4,\n-     &           IMDIHE =  5, VDW    =  6, ELEC   =  7, HBOND  =  8,\n-     &           USER   =  9, CHARM  = 10, CDIHE  = 11, CINTCR = 12,\n-     &           CQRT   = 13, NOE    = 14, SBNDRY = 15, IMVDW  = 16,\n-     &           IMELEC = 17, IMHBND = 18, EWKSUM = 19, EWSELF = 20,\n-     &           EXTNDE = 21, RXNFLD = 22, ST2    = 23, IMST2  = 24,\n-     &           TSM    = 25, QMEL   = 26, QMVDW  = 27, ASP    = 28,\n-     &           EHARM  = 29, GEO    = 30, MDIP   = 31, PINT   = 32,\n-     &           PRMS   = 33, PANG   = 34, SSBP   = 35, BK4D   = 36,\n-     &           SHEL   = 37, RESD   = 38, SHAP   = 39, STRB   = 40,\n-     &           OOPL   = 41, PULL   = 42, POLAR  = 43, DMC    = 44,\n-     &           RGY    = 45, EWEXCL = 46, EWQCOR = 47, EWUTIL = 48,\n-     &           PBELEC = 49, PBNP   = 50, MbDefrm= 51, MbElec = 52,\n-     &           STRSTR = 53, BNDBND = 54, BNDTW  = 55, EBST   = 56,\n-     &           MBST   = 57, BBT    = 58, SST    = 59, GBEnr  = 60,\n-     &           GSBP   = 65\n-C..##IF HMCM\n-     &         , HMCM   = 61\n-C..##ENDIF\n-C..##IF ADUMB\n-     &         , ADUMB  = 62\n-C..##ENDIF\n-     &         , HYDR   = 63\n-C..##IF FLUCQ\n-     &         , FQPOL  = 65\n-C..##ENDIF\n-     &           )\n-      INTEGER  VEXX, VEXY, VEXZ, VEYX, VEYY, VEYZ, VEZX, VEZY, VEZZ,\n-     &         VIXX, VIXY, VIXZ, VIYX, VIYY, VIYZ, VIZX, VIZY, VIZZ,\n-     &         PEXX, PEXY, PEXZ, PEYX, PEYY, PEYZ, PEZX, PEZY, PEZZ,\n-     &         PIXX, PIXY, PIXZ, PIYX, PIYY, PIYZ, PIZX, PIZY, PIZZ\n-      PARAMETER ( VEXX =  1, VEXY =  2, VEXZ =  3, VEYX =  4,\n-     &            VEYY =  5, VEYZ =  6, VEZX =  7, VEZY =  8,\n-     &            VEZZ =  9,\n-     &            VIXX = 10, VIXY = 11, VIXZ = 12, VIYX = 13,\n-     &            VIYY = 14, VIYZ = 15, VIZX = 16, VIZY = 17,\n-     &            VIZZ = 18,\n-     &            PEXX = 19, PEXY = 20, PEXZ = 21, PEYX = 22,\n-     &            PEYY = 23, PEYZ = 24, PEZX = 25, PEZY = 26,\n-     &            PEZZ = 27,\n-     &            PIXX = 28, PIXY = 29, PIXZ = 30, PIYX = 31,\n-     &            PIYY = 32, PIYZ = 33, PIZX = 34, PIZY = 35,\n-     &            PIZZ = 36)\n-      CHARACTER*4  CEPROP, CETERM, CEPRSS\n-      COMMON /ANER/ CEPROP(LENENP), CETERM(LENENT), CEPRSS(LENENV)\n-      LOGICAL  QEPROP, QETERM, QEPRSS\n-      COMMON /QENER/ QEPROP(LENENP), QETERM(LENENT), QEPRSS(LENENV)\n-      REAL*8   EPROP, ETERM, EPRESS\n-      COMMON /ENER/ EPROP(LENENP), ETERM(LENENT), EPRESS(LENENV)\n-C..##IF SAVEFCM\n-C..##ENDIF\n-      REAL*8   EPRPA, EPRP2A, EPRPP, EPRP2P,\n-     &         ETRMA, ETRM2A, ETRMP, ETRM2P,\n-     &         EPRSA, EPRS2A, EPRSP, EPRS2P\n-      COMMON /ENACCM/ EPRPA(LENENP), ETRMA(LENENT), EPRSA(LENENV),\n-     &                EPRP2A(LENENP),ETRM2A(LENENT),EPRS2A(LENENV),\n-     &                EPRPP(LENENP), ETRMP(LENENT), EPRSP(LENENV),\n-     &                EPRP2P(LENENP),ETRM2P(LENENT),EPRS2P(LENENV)\n-C..##IF SAVEFCM\n-C..##ENDIF\n-      INTEGER  ECALLS, TOT1ST, TOT2ND\n-      COMMON /EMISCI/ ECALLS, TOT1ST, TOT2ND\n-      REAL*8   EOLD, FITA, DRIFTA, EAT0A, CORRA, FITP, DRIFTP,\n-     &         EAT0P, CORRP\n-      COMMON /EMISCR/ EOLD, FITA, DRIFTA, EAT0A, CORRA,\n-     &                     FITP, DRIFTP, EAT0P, CORRP\n-C..##IF SAVEFCM\n-C..##ENDIF\n-C..##IF ACE\n-C..##ENDIF\n-C..##IF FLUCQ\n-C..##ENDIF\n-C..##IF ADUMB\n-C..##ENDIF\n-C..##IF GRID\n-C..##ENDIF\n-C..##IF FLUCQ\n-C..##ENDIF\n-C..##IF TSM\n-      REAL*8 TSMTRM(LENENT),TSMTMP(LENENT)\n-      COMMON /TSMENG/ TSMTRM,TSMTMP\n-C...##IF SAVEFCM\n-C...##ENDIF\n-C..##ENDIF\n-      REAL*8 EHQBM\n-      LOGICAL HQBM\n-      COMMON /HQBMVAR/HQBM\n-C..##IF SAVEFCM\n-C..##ENDIF\n-C-----------------------------------------------------------------------\n-C-----------------------------------------------------------------------\n-C:::##INCLUDE '~/charmm_fcm/dimb.fcm'\n-C..##IF DIMB (dimbfcm)\n-      INTEGER NPARMX,MNBCMP,LENDSK\n-      PARAMETER (NPARMX=1000,MNBCMP=300,LENDSK=200000)\n-      INTEGER IJXXCM,IJXYCM,IJXZCM,IJYXCM,IJYYCM\n-      INTEGER IJYZCM,IJZXCM,IJZYCM,IJZZCM\n-      INTEGER IIXXCM,IIXYCM,IIXZCM,IIYYCM\n-      INTEGER IIYZCM,IIZZCM\n-      INTEGER JJXXCM,JJXYCM,JJXZCM,JJYYCM\n-      INTEGER JJYZCM,JJZZCM\n-      PARAMETER (IJXXCM=1,IJXYCM=2,IJXZCM=3,IJYXCM=4,IJYYCM=5)\n-      PARAMETER (IJYZCM=6,IJZXCM=7,IJZYCM=8,IJZZCM=9)\n-      PARAMETER (IIXXCM=1,IIXYCM=2,IIXZCM=3,IIYYCM=4)\n-      PARAMETER (IIYZCM=5,IIZZCM=6)\n-      PARAMETER (JJXXCM=1,JJXYCM=2,JJXZCM=3,JJYYCM=4)\n-      PARAMETER (JJYZCM=5,JJZZCM=6)\n-      INTEGER ITER,IPAR1,IPAR2,NFSAV,PINBCM,PJNBCM,PDD1CM,LENCMP\n-      LOGICAL QDISK,QDW,QCMPCT\n-      COMMON /DIMBI/ ITER,IPAR1,IPAR2,NFSAV,PINBCM,PJNBCM,LENCMP\n-      COMMON /DIMBL/ QDISK,QDW,QCMPCT\n-C...##IF SAVEFCM\n-C...##ENDIF\n-C..##ENDIF (dimbfcm)\n-C-----------------------------------------------------------------------\n-C-----------------------------------------------------------------------\n-C:::##INCLUDE '~/charmm_fcm/ctitla.fcm'\n-      INTEGER MAXTIT\n-      PARAMETER (MAXTIT=32)\n-      INTEGER NTITLA,NTITLB\n-      CHARACTER*80 TITLEA,TITLEB\n-      COMMON /NTITLA/ NTITLA,NTITLB\n-      COMMON /CTITLA/ TITLEA(MAXTIT),TITLEB(MAXTIT)\n-C..##IF SAVEFCM\n-C..##ENDIF\n-C-----------------------------------------------------------------------\n-C Passed variables\n-      INTEGER NAT3,NADD,NPAR,NFREG,NFRET,BLATOM\n-      INTEGER ATMPAR(2,*),ATMPAS(2,*),ATMPAD(2,*)\n-      INTEGER BNBND(*),BIMAG(*)\n-      INTEGER INBCMP(*),JNBCMP(*),PARDIM\n-      INTEGER ITMX,IUNMOD,IUNRMD,SAVF\n-      INTEGER NBOND,IB(*),JB(*)\n-      REAL*8 X(*),Y(*),Z(*),AMASS(*),DDSCR(*)\n-      REAL*8 DDV(NAT3,*),PARDDV(PARDIM,*),DDM(*),DDS(*)\n-      REAL*8 DDF(*),PARDDF(*),DDEV(*),PARDDE(*)\n-      REAL*8 DD1BLK(*),DD1BLL(*),DD1CMP(*)\n-      REAL*8 TOLDIM,DDVALM\n-      REAL*8 PARFRQ,CUTF1\n-      LOGICAL LNOMA,LRAISE,LSCI,LBIG\n-C Local variables\n-      INTEGER NATOM,NATP,NDIM,I,J,II,OLDFAS,OLDPRN,IUPD\n-      INTEGER NPARC,NPARD,NPARS,NFCUT1,NFREG2,NFREG6\n-      INTEGER IH1,IH2,IH3,IH4,IH5,IH6,IH7,IH8\n-      INTEGER IS1,IS2,IS3,IS4,JSPACE,JSP,DDSS,DD5\n-      INTEGER ISTRT,ISTOP,IPA1,IPA2,IRESF\n-      INTEGER ATMPAF,INIDS,TRAROT\n-      INTEGER SUBLIS,ATMCOR\n-      INTEGER NFRRES,DDVBAS\n-      INTEGER DDV2,DDVAL\n-      INTEGER LENCM,NTR,NFRE,NFC,N1,N2,NFCUT,NSUBP\n-      INTEGER SCIFV1,SCIFV2,SCIFV3,SCIFV4,SCIFV6\n-      INTEGER DRATQ,ERATQ,E2RATQ,BDRATQ,INRATQ\n-      INTEGER I620,I640,I660,I700,I720,I760,I800,I840,I880,I920\n-      REAL*8 CVGMX,TOLER\n-      LOGICAL LCARD,LAPPE,LPURG,LWDINI,QCALC,QMASWT,QMIX,QDIAG\n-C Begin\n-      QCALC=.TRUE.\n-      LWDINI=.FALSE.\n-      INIDS=0\n-      IS3=0\n-      IS4=0\n-      LPURG=.TRUE.\n-      ITER=0\n-      NADD=0\n-      NFSAV=0\n-      TOLER=TENM5\n-      QDIAG=.TRUE.\n-      CVGMX=HUNDRD\n-      QMIX=.FALSE.\n-      NATOM=NAT3/3\n-      NFREG6=(NFREG-6)/NPAR\n-      NFREG2=NFREG/2\n-      NFRRES=(NFREG+6)/2\n-      IF(NFREG.GT.PARDIM) CALL WRNDIE(-3,'<NMDIMB>',\n-     1     'NFREG IS LARGER THAN PARDIM*3')\n-C\n-C ALLOCATE-SPACE-FOR-TRANSROT-VECTORS\n-      ASSIGN 801 TO I800\n-      GOTO 800\n- 801  CONTINUE\n-C ALLOCATE-SPACE-FOR-DIAGONALIZATION\n-      ASSIGN 721 TO I720\n-      GOTO 720\n- 721  CONTINUE\n-C ALLOCATE-SPACE-FOR-REDUCED-BASIS\n-      ASSIGN 761 TO I760\n-      GOTO 760\n- 761  CONTINUE\n-C ALLOCATE-SPACE-FOR-OTHER-ARRAYS\n-      ASSIGN 921 TO I920\n-      GOTO 920\n- 921  CONTINUE\n-C\n-C Space allocation for working arrays of EISPACK\n-C diagonalization subroutines\n-      IF(LSCI) THEN\n-C ALLOCATE-SPACE-FOR-LSCI\n-         ASSIGN 841 TO I840\n-         GOTO 840\n- 841     CONTINUE\n-      ELSE\n-C ALLOCATE-DUMMY-SPACE-FOR-LSCI\n-         ASSIGN 881 TO I880\n-         GOTO 880\n- 881     CONTINUE\n-      ENDIF\n-      QMASWT=(.NOT.LNOMA)\n-      IF(.NOT. QDISK) THEN\n-         LENCM=INBCMP(NATOM-1)*9+NATOM*6\n-         DO I=1,LENCM\n-            DD1CMP(I)=0.0\n-         ENDDO\n-         OLDFAS=LFAST\n-         QCMPCT=.TRUE.\n-         LFAST = -1\n-         CALL ENERGY(X,Y,Z,DX,DY,DZ,BNBND,BIMAG,NAT3,DD1CMP,.TRUE.,1)\n-         LFAST=OLDFAS\n-         QCMPCT=.FALSE.\n-C\n-C Mass weight DD1CMP matrix\n-C\n-         CALL MASSDD(DD1CMP,DDM,INBCMP,JNBCMP,NATOM)\n-      ELSE\n-         CALL WRNDIE(-3,'<NMDIMB>','QDISK OPTION NOT SUPPORTED YET')\n-C         DO I=1,LENDSK\n-C            DD1CMP(I)=0.0\n-C         ENDDO\n-C         OLDFAS=LFAST\n-C         LFAST = -1\n-      ENDIF\n-C\n-C Fill DDV with six translation-rotation vectors\n-C\n-      CALL TRROT(X,Y,Z,DDV,NAT3,1,DDM)\n-      CALL CPARAY(HEAP(TRAROT),DDV,NAT3,1,6,1)\n-      NTR=6\n-      OLDPRN=PRNLEV\n-      PRNLEV=1\n-      CALL ORTHNM(1,6,NTR,HEAP(TRAROT),NAT3,.FALSE.,TOLER)\n-      PRNLEV=OLDPRN\n-      IF(IUNRMD .LT. 0) THEN\n-C\n-C If no previous basis is read\n-C\n-         IF(PRNLEV.GE.2) WRITE(OUTU,502) NPAR\n- 502     FORMAT(/' NMDIMB: Calculating initial basis from block ',\n-     1           'diagonals'/' NMDIMB: The number of blocks is ',I5/)\n-         NFRET = 6\n-         DO I=1,NPAR\n-            IS1=ATMPAR(1,I)\n-            IS2=ATMPAR(2,I)\n-            NDIM=(IS2-IS1+1)*3\n-            NFRE=NDIM\n-            IF(NFRE.GT.NFREG6) NFRE=NFREG6\n-            IF(NFREG6.EQ.0) NFRE=1\n-            CALL FILUPT(HEAP(IUPD),NDIM)\n-            CALL MAKDDU(DD1BLK,DD1CMP,INBCMP,JNBCMP,HEAP(IUPD),\n-     1                  IS1,IS2,NATOM)\n-            IF(PRNLEV.GE.9) CALL PRINTE(OUTU,EPROP,ETERM,'VIBR',\n-     1          'ENR',.TRUE.,1,ZERO,ZERO)\n-C\n-C Generate the lower section of the matrix and diagonalize\n-C\n-C..##IF EISPACK\n-C..##ENDIF\n-               IH1=1\n-               NATP=NDIM+1\n-               IH2=IH1+NATP\n-               IH3=IH2+NATP\n-               IH4=IH3+NATP\n-               IH5=IH4+NATP\n-               IH6=IH5+NATP\n-               IH7=IH6+NATP\n-               IH8=IH7+NATP\n-               CALL DIAGQ(NDIM,NFRE,DD1BLK,PARDDV,DDS(IH2),DDS(IH3),\n-     1           DDS(IH4),DDS(IH5),DDS,DDS(IH6),DDS(IH7),DDS(IH8),NADD)\n-C..##IF EISPACK\n-C..##ENDIF\n-C\n-C Put the PARDDV vectors into DDV and replace the elements which do\n-C not belong to the considered partitioned region by zeros.\n-C\n-            CALL ADJNME(DDV,PARDDV,NAT3,NDIM,NFRE,NFRET,IS1,IS2)\n-            IF(LSCI) THEN\n-               DO J=1,NFRE\n-               PARDDF(J)=CNVFRQ*SQRT(ABS(PARDDE(J)))\n-               IF(PARDDE(J) .LT. 0.0) PARDDF(J)=-PARDDF(J)\n-               ENDDO\n-            ELSE\n-               DO J=1,NFRE\n-               PARDDE(J)=DDS(J)\n-               PARDDF(J)=CNVFRQ*SQRT(ABS(PARDDE(J)))\n-               IF(PARDDE(J) .LT. 0.0) PARDDF(J)=-PARDDF(J)\n-               ENDDO\n-            ENDIF\n-            IF(PRNLEV.GE.2) THEN\n-               WRITE(OUTU,512) I\n-               WRITE(OUTU,514)\n-               WRITE(OUTU,516) (J,PARDDF(J),J=1,NFRE)\n-            ENDIF\n-            NFRET=NFRET+NFRE\n-            IF(NFRET .GE. NFREG) GOTO 10\n-         ENDDO\n- 512     FORMAT(/' NMDIMB: Diagonalization of part',I5,' completed')\n- 514     FORMAT(' NMDIMB: Frequencies'/)\n- 516     FORMAT(5(I4,F12.6))\n-   10    CONTINUE\n-C\n-C Orthonormalize the eigenvectors\n-C\n-         OLDPRN=PRNLEV\n-         PRNLEV=1\n-         CALL ORTHNM(1,NFRET,NFRET,DDV,NAT3,LPURG,TOLER)\n-         PRNLEV=OLDPRN\n-C\n-C Do reduced basis diagonalization using the DDV vectors\n-C and get eigenvectors of zero iteration\n-C\n-         IF(PRNLEV.GE.2) THEN\n-            WRITE(OUTU,521) ITER\n-            WRITE(OUTU,523) NFRET\n-         ENDIF\n- 521     FORMAT(/' NMDIMB: Iteration number = ',I5)\n- 523     FORMAT(' NMDIMB: Dimension of the reduced basis set = ',I5)\n-         IF(LBIG) THEN\n-            IF(PRNLEV.GE.2) WRITE(OUTU,585) NFRET,IUNMOD\n- 525        FORMAT(' NMDIMB: ',I5,' basis vectors are saved in unit',I5)\n-            REWIND (UNIT=IUNMOD)\n-            LCARD=.FALSE.\n-            CALL WRTNMD(LCARD,1,NFRET,NAT3,DDV,DDSCR,DDEV,IUNMOD,AMASS)\n-            CALL SAVEIT(IUNMOD)\n-         ELSE\n-            CALL CPARAY(HEAP(DDVBAS),DDV,NAT3,1,NFRET,1)\n-         ENDIF\n-         CALL RBDG(X,Y,Z,NAT3,NDIM,NFRET,DDV,DDF,DDEV,\n-     1     DDSCR,HEAP(DD5),HEAP(DDSS),HEAP(DDV2),NADD,\n-     2     INBCMP,JNBCMP,HEAP(DDVBAS),DD1CMP,QMIX,0,0,IS3,IS4,\n-     3     CUTF1,NFCUT1,NFREG,HEAP(IUPD),DD1BLL,HEAP(SCIFV1),\n-     4     HEAP(SCIFV2),HEAP(SCIFV3),HEAP(SCIFV4),HEAP(SCIFV6),\n-     5     HEAP(DRATQ),HEAP(ERATQ),HEAP(E2RATQ),\n-     6     HEAP(BDRATQ),HEAP(INRATQ),LSCI,LBIG,IUNMOD)\n-C\n-C DO-THE-DIAGONALISATIONS-WITH-RESIDUALS\n-C\n-         ASSIGN 621 TO I620\n-         GOTO 620\n- 621     CONTINUE\n-C SAVE-MODES\n-         ASSIGN 701 TO I700\n-         GOTO 700\n- 701     CONTINUE\n-         IF(ITER.EQ.ITMX) THEN\n-            CALL CLEANHP(NAT3,NFREG,NPARD,NSUBP,PARDIM,DDV2,DDSS,DDVBAS,\n-     1                   DDVAL,JSPACE,TRAROT,\n-     2                   SCIFV1,SCIFV2,SCIFV3,SCIFV4,SCIFV6,\n-     3                   DRATQ,ERATQ,E2RATQ,BDRATQ,INRATQ,IUPD,ATMPAF,\n-     4                   ATMCOR,SUBLIS,LSCI,QDW,LBIG)\n-            RETURN\n-         ENDIF\n-      ELSE\n-C\n-C Read in existing basis\n-C\n-         IF(PRNLEV.GE.2) THEN\n-            WRITE(OUTU,531)\n- 531        FORMAT(/' NMDIMB: Calculations restarted')\n-         ENDIF\n-C READ-MODES\n-         ISTRT=1\n-         ISTOP=99999999\n-         LCARD=.FALSE.\n-         LAPPE=.FALSE.\n-         CALL RDNMD(LCARD,NFRET,NFREG,NAT3,NDIM,\n-     1     DDV,DDSCR,DDF,DDEV,\n-     2     IUNRMD,LAPPE,ISTRT,ISTOP)\n-         NFRET=NDIM\n-         IF(NFRET.GT.NFREG) THEN\n-            NFRET=NFREG\n-            CALL WRNDIE(-1,'<NMDIMB>',\n-     1       'Not enough space to hold the basis. Increase NMODes')\n-         ENDIF\n-C PRINT-MODES\n-         IF(PRNLEV.GE.2) THEN\n-            WRITE(OUTU,533) NFRET,IUNRMD\n-            WRITE(OUTU,514)\n-            WRITE(OUTU,516) (J,DDF(J),J=1,NFRET)\n-         ENDIF\n- 533     FORMAT(/' NMDIMB: ',I5,' restart modes read from unit ',I5)\n-         NFRRES=NFRET\n-      ENDIF\n-C\n-C -------------------------------------------------\n-C Here starts the mixed-basis diagonalization part.\n-C -------------------------------------------------\n-C\n-C\n-C Check cut-off frequency\n-C\n-      CALL SELNMD(DDF,NFRET,CUTF1,NFCUT1)\n-C TEST-NFCUT1\n-      IF(IUNRMD.LT.0) THEN\n-        IF(NFCUT1*2-6.GT.NFREG) THEN\n-           IF(PRNLEV.GE.2) WRITE(OUTU,537) DDF(NFRRES)\n-           NFCUT1=NFRRES\n-           CUTF1=DDF(NFRRES)\n-        ENDIF\n-      ELSE\n-        CUTF1=DDF(NFRRES)\n-      ENDIF\n- 537  FORMAT(/' NMDIMB: Too many vectors for the given cutoff frequency'\n-     1       /'         Cutoff frequency is decreased to',F9.3)\n-C\n-C Compute the new partioning of the molecule\n-C\n-      CALL PARTIC(NAT3,NFREG,NFCUT1,NPARMX,NPARC,ATMPAR,NFRRES,\n-     1            PARDIM)\n-      NPARS=NPARC\n-      DO I=1,NPARC\n-         ATMPAS(1,I)=ATMPAR(1,I)\n-         ATMPAS(2,I)=ATMPAR(2,I)\n-      ENDDO\n-      IF(QDW) THEN\n-         IF(IPAR1.EQ.0.OR.IPAR2.EQ.0) LWDINI=.TRUE.\n-         IF(IPAR1.GE.IPAR2) LWDINI=.TRUE.\n-         IF(IABS(IPAR1).GT.NPARC*2) LWDINI=.TRUE.\n-         IF(IABS(IPAR2).GT.NPARC*2) LWDINI=.TRUE.\n-         IF(ITER.EQ.0) LWDINI=.TRUE.\n-      ENDIF\n-      ITMX=ITMX+ITER\n-      IF(PRNLEV.GE.2) THEN\n-         WRITE(OUTU,543) ITER,ITMX\n-         IF(QDW) WRITE(OUTU,545) IPAR1,IPAR2\n-      ENDIF\n- 543  FORMAT(/' NMDIMB: Previous iteration number = ',I8/\n-     1        ' NMDIMB: Iteration number to reach = ',I8)\n- 545  FORMAT(' NMDIMB: Previous sub-blocks = ',I5,2X,I5)\n-C\n-      IF(SAVF.LE.0) SAVF=NPARC\n-      IF(PRNLEV.GE.2) WRITE(OUTU,547) SAVF\n- 547  FORMAT(' NMDIMB: Eigenvectors will be saved every',I5,\n-     1       ' iterations')\n-C\n-C If double windowing is defined, the original block sizes are divided\n-C in two.\n-C\n-      IF(QDW) THEN\n-         NSUBP=1\n-         CALL PARTID(NPARC,ATMPAR,NPARD,ATMPAD,NPARMX)\n-         ATMPAF=ALLHP(INTEG4(NPARD*NPARD))\n-         ATMCOR=ALLHP(INTEG4(NATOM))\n-         DDVAL=ALLHP(IREAL8(NPARD*NPARD))\n-         CALL CORARR(ATMPAD,NPARD,HEAP(ATMCOR),NATOM)\n-         CALL PARLIS(HEAP(ATMCOR),HEAP(ATMPAF),INBCMP,JNBCMP,NPARD,\n-     2         NSUBP,NATOM,X,Y,Z,NBOND,IB,JB,DD1CMP,HEAP(DDVAL),DDVALM)\n-         SUBLIS=ALLHP(INTEG4(NSUBP*2))\n-         CALL PARINT(HEAP(ATMPAF),NPARD,HEAP(SUBLIS),NSUBP)\n-         CALL INIPAF(HEAP(ATMPAF),NPARD)\n-C\n-C Find out with which block to continue (double window method only)\n-C\n-         IPA1=IPAR1\n-         IPA2=IPAR2\n-         IRESF=0\n-         IF(LWDINI) THEN\n-            ITER=0\n-            LWDINI=.FALSE.\n-            GOTO 500\n-         ENDIF\n-         DO II=1,NSUBP\n-            CALL IPART(HEAP(SUBLIS),II,IPAR1,IPAR2,HEAP(ATMPAF),\n-     1                 NPARD,QCALC)\n-            IF((IPAR1.EQ.IPA1).AND.(IPAR2.EQ.IPA2)) GOTO 500\n-         ENDDO\n-      ENDIF\n- 500  CONTINUE\n-C\n-C Main loop.\n-C\n-      DO WHILE((CVGMX.GT.TOLDIM).AND.(ITER.LT.ITMX))\n-         IF(.NOT.QDW) THEN\n-            ITER=ITER+1\n-            IF(PRNLEV.GE.2) WRITE(OUTU,553) ITER\n- 553  FORMAT(/' NMDIMB: Iteration number = ',I8)\n-            IF(INIDS.EQ.0) THEN\n-               INIDS=1\n-            ELSE\n-               INIDS=0\n-            ENDIF\n-            CALL PARTDS(NAT3,NPARC,ATMPAR,NPARS,ATMPAS,INIDS,NPARMX,\n-     1                  DDF,NFREG,CUTF1,PARDIM,NFCUT1)\n-C DO-THE-DIAGONALISATIONS\n-            ASSIGN 641 to I640\n-            GOTO 640\n- 641        CONTINUE\n-            QDIAG=.FALSE.\n-C DO-THE-DIAGONALISATIONS-WITH-RESIDUALS\n-            ASSIGN 622 TO I620\n-            GOTO 620\n- 622        CONTINUE\n-            QDIAG=.TRUE.\n-C SAVE-MODES\n-            ASSIGN 702 TO I700\n-            GOTO 700\n- 702        CONTINUE\n-C\n-         ELSE\n-            DO II=1,NSUBP\n-               CALL IPART(HEAP(SUBLIS),II,IPAR1,IPAR2,HEAP(ATMPAF),\n-     1                 NPARD,QCALC)\n-               IF(QCALC) THEN\n-                  IRESF=IRESF+1\n-                  ITER=ITER+1\n-                  IF(PRNLEV.GE.2) WRITE(OUTU,553) ITER\n-C DO-THE-DWIN-DIAGONALISATIONS\n-                  ASSIGN 661 TO I660\n-                  GOTO 660\n- 661              CONTINUE\n-               ENDIF\n-               IF((IRESF.EQ.SAVF).OR.(ITER.EQ.ITMX)) THEN\n-                  IRESF=0\n-                  QDIAG=.FALSE.\n-C DO-THE-DIAGONALISATIONS-WITH-RESIDUALS\n-                  ASSIGN 623 TO I620\n-                  GOTO 620\n- 623              CONTINUE\n-                  QDIAG=.TRUE.\n-                  IF((CVGMX.LE.TOLDIM).OR.(ITER.EQ.ITMX)) GOTO 600\n-C SAVE-MODES\n-                  ASSIGN 703 TO I700\n-                  GOTO 700\n- 703              CONTINUE\n-               ENDIF\n-            ENDDO\n-         ENDIF\n-      ENDDO\n- 600  CONTINUE\n-C\n-C SAVE-MODES\n-      ASSIGN 704 TO I700\n-      GOTO 700\n- 704  CONTINUE\n-      CALL CLEANHP(NAT3,NFREG,NPARD,NSUBP,PARDIM,DDV2,DDSS,DDVBAS,\n-     1             DDVAL,JSPACE,TRAROT,\n-     2             SCIFV1,SCIFV2,SCIFV3,SCIFV4,SCIFV6,\n-     3             DRATQ,ERATQ,E2RATQ,BDRATQ,INRATQ,IUPD,ATMPAF,\n-     4             ATMCOR,SUBLIS,LSCI,QDW,LBIG)\n-      RETURN\n-C-----------------------------------------------------------------------\n-C INTERNAL PROCEDURES\n-C-----------------------------------------------------------------------\n-C TO DO-THE-DIAGONALISATIONS-WITH-RESIDUALS\n- 620  CONTINUE\n-      IF(IUNRMD.LT.0) THEN\n-        CALL SELNMD(DDF,NFRET,CUTF1,NFC)\n-        N1=NFCUT1\n-        N2=(NFRET+6)/2\n-        NFCUT=MAX(N1,N2)\n-        IF(NFCUT*2-6 .GT. NFREG) THEN\n-           NFCUT=(NFREG+6)/2\n-           CUTF1=DDF(NFCUT)\n-           IF(PRNLEV.GE.2) THEN\n-             WRITE(OUTU,562) ITER\n-             WRITE(OUTU,564) CUTF1\n-           ENDIF\n-        ENDIF\n-      ELSE\n-        NFCUT=NFRET\n-        NFC=NFRET\n-      ENDIF\n- 562  FORMAT(/' NMDIMB: Not enough space to hold the residual vectors'/\n-     1       '         into DDV array during iteration ',I5)\n- 564  FORMAT('         Cutoff frequency is changed to ',F9.3)\n-C\n-C do reduced diagonalization with preceding eigenvectors plus\n-C residual vectors\n-C\n-      ISTRT=1\n-      ISTOP=NFCUT\n-      CALL CLETR(DDV,HEAP(TRAROT),NAT3,ISTRT,ISTOP,NFCUT,DDEV,DDF)\n-      CALL RNMTST(DDV,HEAP(DDVBAS),NAT3,DDSCR,DD1CMP,INBCMP,JNBCMP,\n-     2            7,NFCUT,CVGMX,NFCUT,NFC,QDIAG,LBIG,IUNMOD)\n-      NFSAV=NFCUT\n-      IF(QDIAG) THEN\n-         NFRET=NFCUT*2-6\n-         IF(PRNLEV.GE.2) WRITE(OUTU,566) NFRET\n- 566     FORMAT(/' NMDIMB: Diagonalization with residual vectors. '/\n-     1          '          Dimension of the reduced basis set'/\n-     2          '             before orthonormalization = ',I5)\n-         NFCUT=NFRET\n-         OLDPRN=PRNLEV\n-         PRNLEV=1\n-         CALL ORTHNM(1,NFRET,NFCUT,DDV,NAT3,LPURG,TOLER)\n-         PRNLEV=OLDPRN\n-         NFRET=NFCUT\n-         IF(PRNLEV.GE.2) WRITE(OUTU,568) NFRET\n- 568     FORMAT('             after orthonormalization  = ',I5)\n-         IF(LBIG) THEN\n-            IF(PRNLEV.GE.2) WRITE(OUTU,570) NFCUT,IUNMOD\n- 570        FORMAT(' NMDIMB: ',I5,' basis vectors are saved in unit',I5)\n-            REWIND (UNIT=IUNMOD)\n-            LCARD=.FALSE.\n-            CALL WRTNMD(LCARD,1,NFCUT,NAT3,DDV,DDSCR,DDEV,IUNMOD,AMASS)\n-            CALL SAVEIT(IUNMOD)\n-         ELSE\n-            CALL CPARAY(HEAP(DDVBAS),DDV,NAT3,1,NFCUT,1)\n-         ENDIF\n-         QMIX=.FALSE.\n-         CALL RBDG(X,Y,Z,NAT3,NDIM,NFRET,DDV,DDF,DDEV,\n-     1     DDSCR,HEAP(DD5),HEAP(DDSS),HEAP(DDV2),NADD,\n-     2     INBCMP,JNBCMP,HEAP(DDVBAS),DD1CMP,QMIX,0,0,IS3,IS4,\n-     3     CUTF1,NFCUT1,NFREG,HEAP(IUPD),DD1BLL,HEAP(SCIFV1),\n-     4     HEAP(SCIFV2),HEAP(SCIFV3),HEAP(SCIFV4),HEAP(SCIFV6),\n-     5     HEAP(DRATQ),HEAP(ERATQ),HEAP(E2RATQ),\n-     6     HEAP(BDRATQ),HEAP(INRATQ),LSCI,LBIG,IUNMOD)\n-         CALL SELNMD(DDF,NFRET,CUTF1,NFCUT1)\n-      ENDIF\n-      GOTO I620\n-C\n-C-----------------------------------------------------------------------\n-C TO DO-THE-DIAGONALISATIONS\n- 640  CONTINUE\n-      DO I=1,NPARC\n-         NFCUT1=NFRRES\n-         IS1=ATMPAR(1,I)\n-         IS2=ATMPAR(2,I)\n-         NDIM=(IS2-IS1+1)*3\n-         IF(PRNLEV.GE.2) WRITE(OUTU,573) I,IS1,IS2\n- 573     FORMAT(/' NMDIMB: Mixed diagonalization, part ',I5/\n-     1           ' NMDIMB: Block limits: ',I5,2X,I5)\n-         IF(NDIM+NFCUT1.GT.PARDIM) CALL WRNDIE(-3,'<NMDIMB>',\n-     1      'Error in dimension of block')\n-         NFRET=NFCUT1\n-         IF(NFRET.GT.NFREG) NFRET=NFREG\n-         CALL CLETR(DDV,HEAP(TRAROT),NAT3,1,NFCUT1,NFCUT,DDEV,DDF)\n-         NFCUT1=NFCUT\n-         CALL ADZER(DDV,1,NFCUT1,NAT3,IS1,IS2)\n-         NFSAV=NFCUT1\n-         OLDPRN=PRNLEV\n-         PRNLEV=1\n-         CALL ORTHNM(1,NFCUT1,NFCUT,DDV,NAT3,LPURG,TOLER)\n-         PRNLEV=OLDPRN\n-         CALL CPARAY(HEAP(DDVBAS),DDV,NAT3,1,NFCUT,1)\n-         NFRET=NDIM+NFCUT\n-         QMIX=.TRUE.\n-         CALL RBDG(X,Y,Z,NAT3,NDIM,NFRET,DDV,DDF,DDEV,\n-     1        DDSCR,HEAP(DD5),HEAP(DDSS),HEAP(DDV2),NADD,\n-     2        INBCMP,JNBCMP,HEAP(DDVBAS),DD1CMP,QMIX,IS1,IS2,IS3,IS4,\n-     3        CUTF1,NFCUT,NFREG,HEAP(IUPD),DD1BLL,HEAP(SCIFV1),\n-     4        HEAP(SCIFV2),HEAP(SCIFV3),HEAP(SCIFV4),HEAP(SCIFV6),\n-     5        HEAP(DRATQ),HEAP(ERATQ),HEAP(E2RATQ),\n-     6        HEAP(BDRATQ),HEAP(INRATQ),LSCI,LBIG,IUNMOD)\n-         QMIX=.FALSE.\n-         IF(NFCUT.GT.NFRRES) NFCUT=NFRRES\n-         NFCUT1=NFCUT\n-         NFRET=NFCUT\n-      ENDDO\n-      GOTO I640\n-C\n-C-----------------------------------------------------------------------\n-C TO DO-THE-DWIN-DIAGONALISATIONS\n- 660  CONTINUE\n-C\n-C Store the DDV vectors into DDVBAS\n-C\n-      NFCUT1=NFRRES\n-      IS1=ATMPAD(1,IPAR1)\n-      IS2=ATMPAD(2,IPAR1)\n-      IS3=ATMPAD(1,IPAR2)\n-      IS4=ATMPAD(2,IPAR2)\n-      NDIM=(IS2-IS1+IS4-IS3+2)*3\n-      IF(PRNLEV.GE.2) WRITE(OUTU,577) IPAR1,IPAR2,IS1,IS2,IS3,IS4\n- 577  FORMAT(/' NMDIMB: Mixed double window diagonalization, parts ',\n-     1        2I5/\n-     2        ' NMDIMB: Block limits: ',I5,2X,I5,4X,I5,2X,I5)\n-      IF(NDIM+NFCUT1.GT.PARDIM) CALL WRNDIE(-3,'<NMDIMB>',\n-     1      'Error in dimension of block')\n-      NFRET=NFCUT1\n-      IF(NFRET.GT.NFREG) NFRET=NFREG\n-C\n-C Prepare the DDV vectors consisting of 6 translations-rotations\n-C + eigenvectors from 7 to NFCUT1 + cartesian displacements vectors\n-C spanning the atoms from IS1 to IS2\n-C\n-      CALL CLETR(DDV,HEAP(TRAROT),NAT3,1,NFCUT1,NFCUT,DDEV,DDF)\n-      NFCUT1=NFCUT\n-      NFSAV=NFCUT1\n-      CALL ADZERD(DDV,1,NFCUT1,NAT3,IS1,IS2,IS3,IS4)\n-      OLDPRN=PRNLEV\n-      PRNLEV=1\n-      CALL ORTHNM(1,NFCUT1,NFCUT,DDV,NAT3,LPURG,TOLER)\n-      PRNLEV=OLDPRN\n-      CALL CPARAY(HEAP(DDVBAS),DDV,NAT3,1,NFCUT,1)\n-C\n-      NFRET=NDIM+NFCUT\n-      QMIX=.TRUE.\n-      CALL RBDG(X,Y,Z,NAT3,NDIM,NFRET,DDV,DDF,DDEV,\n-     1     DDSCR,HEAP(DD5),HEAP(DDSS),HEAP(DDV2),NADD,\n-     2     INBCMP,JNBCMP,HEAP(DDVBAS),DD1CMP,QMIX,IS1,IS2,IS3,IS4,\n-     3     CUTF1,NFCUT,NFREG,HEAP(IUPD),DD1BLL,HEAP(SCIFV1),\n-     4     HEAP(SCIFV2),HEAP(SCIFV3),HEAP(SCIFV4),HEAP(SCIFV6),\n-     5     HEAP(DRATQ),HEAP(ERATQ),HEAP(E2RATQ),\n-     6     HEAP(BDRATQ),HEAP(INRATQ),LSCI,LBIG,IUNMOD)\n-      QMIX=.FALSE.\n-C\n-      IF(NFCUT.GT.NFRRES) NFCUT=NFRRES\n-      NFCUT1=NFCUT\n-      NFRET=NFCUT\n-      GOTO I660\n-C\n-C-----------------------------------------------------------------------\n-C TO SAVE-MODES\n- 700  CONTINUE\n-      IF(PRNLEV.GE.2) WRITE(OUTU,583) IUNMOD\n- 583  FORMAT(/' NMDIMB: Saving the eigenvalues and eigenvectors to unit'\n-     1       ,I4)\n-      REWIND (UNIT=IUNMOD)\n-      ISTRT=1\n-      ISTOP=NFSAV\n-      LCARD=.FALSE.\n-      IF(PRNLEV.GE.2) WRITE(OUTU,585) NFSAV,IUNMOD\n- 585  FORMAT(' NMDIMB: ',I5,' modes are saved in unit',I5)\n-      CALL WRTNMD(LCARD,ISTRT,ISTOP,NAT3,DDV,DDSCR,DDEV,IUNMOD,\n-     1            AMASS)\n-      CALL SAVEIT(IUNMOD)\n-      GOTO I700\n-C\n-C-----------------------------------------------------------------------\n-C TO ALLOCATE-SPACE-FOR-DIAGONALIZATION\n- 720  CONTINUE\n-      DDV2=ALLHP(IREAL8((PARDIM+3)*(PARDIM+3)))\n-      JSPACE=IREAL8((PARDIM+4))*8\n-      JSP=IREAL8(((PARDIM+3)*(PARDIM+4))/2)\n-      JSPACE=JSPACE+JSP\n-      DDSS=ALLHP(JSPACE)\n-      DD5=DDSS+JSPACE-JSP\n-      GOTO I720\n-C\n-C-----------------------------------------------------------------------\n-C TO ALLOCATE-SPACE-FOR-REDUCED-BASIS\n- 760  CONTINUE\n-      IF(LBIG) THEN\n-         DDVBAS=ALLHP(IREAL8(NAT3))\n-      ELSE\n-         DDVBAS=ALLHP(IREAL8(NFREG*NAT3))\n-      ENDIF\n-      GOTO I760\n-C\n-C-----------------------------------------------------------------------\n-C TO ALLOCATE-SPACE-FOR-TRANSROT-VECTORS\n- 800  CONTINUE\n-      TRAROT=ALLHP(IREAL8(6*NAT3))\n-      GOTO I800\n-C\n-C-----------------------------------------------------------------------\n-C TO ALLOCATE-SPACE-FOR-LSCI\n- 840  CONTINUE\n-      SCIFV1=ALLHP(IREAL8(PARDIM+3))\n-      SCIFV2=ALLHP(IREAL8(PARDIM+3))\n-      SCIFV3=ALLHP(IREAL8(PARDIM+3))\n-      SCIFV4=ALLHP(IREAL8(PARDIM+3))\n-      SCIFV6=ALLHP(IREAL8(PARDIM+3))\n-      DRATQ=ALLHP(IREAL8(PARDIM+3))\n-      ERATQ=ALLHP(IREAL8(PARDIM+3))\n-      E2RATQ=ALLHP(IREAL8(PARDIM+3))\n-      BDRATQ=ALLHP(IREAL8(PARDIM+3))\n-      INRATQ=ALLHP(INTEG4(PARDIM+3))\n-      GOTO I840\n-C\n-C-----------------------------------------------------------------------\n-C TO ALLOCATE-DUMMY-SPACE-FOR-LSCI\n- 880  CONTINUE\n-      SCIFV1=ALLHP(IREAL8(2))\n-      SCIFV2=ALLHP(IREAL8(2))\n-      SCIFV3=ALLHP(IREAL8(2))\n-      SCIFV4=ALLHP(IREAL8(2))\n-      SCIFV6=ALLHP(IREAL8(2))\n-      DRATQ=ALLHP(IREAL8(2))\n-      ERATQ=ALLHP(IREAL8(2))\n-      E2RATQ=ALLHP(IREAL8(2))\n-      BDRATQ=ALLHP(IREAL8(2))\n-      INRATQ=ALLHP(INTEG4(2))\n-      GOTO I880\n-C\n-C-----------------------------------------------------------------------\n-C TO ALLOCATE-SPACE-FOR-OTHER-ARRAYS\n- 920  CONTINUE\n-      IUPD=ALLHP(INTEG4(PARDIM+3))\n-      GOTO I920\n-C.##ELSE\n-C.##ENDIF\n-      END"}, {"sha": "cfea25bee6a1460c1a2040a82e3c5fe8e8bdb8c4", "filename": "gcc/testsuite/g77.f-torture/compile/20020307-1.f", "status": "removed", "additions": 0, "deletions": 21, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F20020307-1.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F20020307-1.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F20020307-1.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,21 +0,0 @@\n-      SUBROUTINE SWEEP\n-      PARAMETER(MAXDIM=4,MAXVEC=4**3*8,MAXT=20)\n-      REAL*8 B,W1,W2,BNORM,BINV,WT,W0,C1,C2,R1,R2\n-      DIMENSION B(MAXVEC,0:3),W1(MAXVEC,0:3),W2(MAXVEC,0:3)\n-      DIMENSION BNORM(MAXVEC),BINV(MAXVEC),WT(MAXVEC),W0(MAXVEC)\n-      DIMENSION C1(MAXVEC),C2(MAXVEC),R1(MAXVEC),R2(MAXVEC)\n-      DO 200 ILAT=1,2**IDIM\n-      DO 200 I1=1,IDIM\n-      DO 220 I2=1,IDIM\n-      CALL INTACT(ILAT,I1,I1,W1)\n-220   CONTINUE\n-      DO 310 IATT=1,IDIM\n-      DO 311 I=1,100\n-      WT(I)=ONE + C1(I)*LOG(EPS+R1(I))\n-      IF( R2(I)**2 .LE. (ONE-WT(I)**2) )THEN\n-      W0(I)=WT(I)\n-      ENDIF\n-311   CONTINUE\n-310   CONTINUE\n-200   CONTINUE\n-      END"}, {"sha": "ec6f79c718ea9f1ebc218a2315625320d858450e", "filename": "gcc/testsuite/g77.f-torture/compile/20030115-1.c", "status": "removed", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F20030115-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F20030115-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F20030115-1.c?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,14 +0,0 @@\n-      SUBROUTINE FOO (B)\n-\n-   10 CALL BAR(A)\n-      ASSIGN 20 TO M\n-      IF(100.LT.A) GOTO 10\n-      GOTO 40\n-C\n-   20 IF(B.LT.ABS(A)) GOTO 10\n-      ASSIGN 30 TO M\n-      GOTO 40\n-C\n-   30 ASSIGN 10 TO M\n-   40 GOTO M,(10,20,30)\n-      END"}, {"sha": "bcbc73c179bf7814af13faa714f8ae6c0a8d8be9", "filename": "gcc/testsuite/g77.f-torture/compile/20030326-1.f", "status": "removed", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F20030326-1.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F20030326-1.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F20030326-1.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,14 +0,0 @@\n-C      PR fortran/9793\n-C      larson@w6yx.stanford.edu\n-C\n-       integer a, b, c\n-\n-       c = -2147483648 / -1\n-\n-       a = 1\n-       b = 0\n-       c = a / b\n-\n-       print *, c\n-\n-       end"}, {"sha": "95e58fbfc18d9076d5abd1aee5be1ca2ac65ffa1", "filename": "gcc/testsuite/g77.f-torture/compile/8485.f", "status": "removed", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F8485.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F8485.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F8485.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,8 +0,0 @@\n-C      Extracted from PR fortran/8485\n-       PARAMETER (PPMULT = 1.0E5)\n-       INTEGER*8 NWRONG\n-       PARAMETER (NWRONG = 8)\n-       PARAMETER (DDMULT = PPMULT * NWRONG)\n-       PRINT 10, DDMULT\n-10     FORMAT (F10.3)\n-       END"}, {"sha": "4bb0a37278e597be76729fb23d02edf18616a1a5", "filename": "gcc/testsuite/g77.f-torture/compile/960317-1.f", "status": "removed", "additions": 0, "deletions": 103, "changes": 103, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F960317-1.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F960317-1.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F960317-1.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,103 +0,0 @@\n-* Date: Sat, 16 Mar 1996 19:58:37 -0500 (EST)\n-* From: Kate Hedstrom <kate@ahab.Rutgers.EDU>\n-* To: burley@gnu.ai.mit.edu\n-* Subject: g77 bug in assign\n-* \n-* I found some files in the NCAR graphics source code which used to\n-* compile with g77 and now don't.  All contain the following combination\n-* of \"save\" and \"assign\".  It fails on a Sun running SunOS 4.1.3 and a\n-* Sun running SunOS 5.5 (slightly older g77), but compiles on an\n-* IBM/RS6000:\n-* \n-C\n-      SUBROUTINE QUICK\n-      SAVE\n-C\n-      ASSIGN 101 TO JUMP\n-  101 Continue\n-C\n-      RETURN\n-      END\n-* \n-* Everything else in the NCAR distribution compiled, including quite a\n-* few C routines.\n-* \n-* Kate\n-* \n-* \n-* nemo% g77 -v -c quick.f\n-*  gcc -v -c -xf77 quick.f\n-* Reading specs from /usr/local/lib/gcc-lib/sparc-sun-sunos4.1.3/2.7.2/specs\n-* gcc version 2.7.2\n-*  /usr/local/lib/gcc-lib/sparc-sun-sunos4.1.3/2.7.2/f771 quick.f -fset-g77-defaults -quiet -dumpbase quick.f -version -fversion -o /usr/tmp/cca24166.s\n-* GNU F77 version 2.7.2 (sparc) compiled by GNU C version 2.7.1.\n-* GNU Fortran Front End version 0.5.18-960314 compiled: Mar 16 1996 14:28:11\n-* gcc: Internal compiler error: program f771 got fatal signal 11\n-* \n-* \n-* nemo% gdb /usr/local/lib/gcc-lib/*/*/f771 core\n-* GDB is free software and you are welcome to distribute copies of it\n-*  under certain conditions; type \"show copying\" to see the conditions.\n-* There is absolutely no warranty for GDB; type \"show warranty\" for details.\n-* GDB 4.14 (sparc-sun-sunos4.1.3), \n-* Copyright 1995 Free Software Foundation, Inc...\n-* Core was generated by `f771'.\n-* Program terminated with signal 11, Segmentation fault.\n-* Couldn't read input and local registers from core file\n-* find_solib: Can't read pathname for load map: I/O error\n-* \n-* Couldn't read input and local registers from core file\n-* #0  0x21aa4 in ffecom_sym_transform_assign_ (s=???) at f/com.c:7881\n-* 7881          if ((ffesymbol_save (s) || ffe_is_saveall ())\n-* (gdb) where\n-* #0  0x21aa4 in ffecom_sym_transform_assign_ (s=???) at f/com.c:7881\n-* Error accessing memory address 0xefffefcc: Invalid argument.\n-* (gdb) \n-* \n-* \n-* ahab% g77 -v -c quick.f\n-*  gcc -v -c -xf77 quick.f\n-* Reading specs from /usr/local/lib/gcc-lib/sparc-sun-solaris2.5/2.7.2/specs\n-* gcc version 2.7.2\n-*  /usr/local/lib/gcc-lib/sparc-sun-solaris2.5/2.7.2/f771 quick.f -quiet -dumpbase quick.f -version -fversion -o /var/tmp/cca003D2.s\n-* GNU F77 version 2.7.2 (sparc) compiled by GNU C version 2.7.2.\n-* GNU Fortran Front End version 0.5.18-960304 compiled: Mar  5 1996 16:12:46\n-* gcc: Internal compiler error: program f771 got fatal signal 11\n-* \n-* \n-* ahab% !gdb\n-* gdb /usr/local/lib/gcc-lib/*/*/f771 core\n-* GDB is free software and you are welcome to distribute copies of it\n-*  under certain conditions; type \"show copying\" to see the conditions.\n-* There is absolutely no warranty for GDB; type \"show warranty\" for details.\n-* GDB 4.15.1 (sparc-sun-solaris2.4), \n-* Copyright 1995 Free Software Foundation, Inc...\n-* Core was generated by\n-* `/usr/local/lib/gcc-lib/sparc-sun-solaris2.5/2.7.2/f771 quick.f -quiet -dumpbase'.\n-* Program terminated with signal 11, Segmentation fault.\n-* Reading symbols from /usr/lib/libc.so.1...done.\n-* Reading symbols from /usr/lib/libdl.so.1...done.\n-* #0  0x43e04 in ffecom_sym_transform_assign_ (s=0x3a22f8) at f/com.c:7963\n-* Source file is more recent than executable.\n-* 7963      assert (st != NULL);\n-* (gdb) where\n-* #0  0x43e04 in ffecom_sym_transform_assign_ (s=0x3a22f8) at f/com.c:7963\n-* #1  0x38044 in ffecom_expr_ (expr=0x3a23c0, dest_tree=0x0, dest=0x0, dest_used=0x0, assignp=true) at f/com.c:2100\n-* #2  0x489c8 in ffecom_expr_assign_w (expr=0x3a23c0) at f/com.c:10238\n-* #3  0xe9228 in ffeste_R838 (label=0x3a1ba8, target=0x3a23c0) at f/ste.c:2769\n-* #4  0xdae60 in ffestd_stmt_pass_ () at f/std.c:840\n-* #5  0xdc090 in ffestd_exec_end () at f/std.c:1405\n-* #6  0xcb534 in ffestc_shriek_subroutine_ (ok=true) at f/stc.c:4849\n-* #7  0xd8f00 in ffestc_R1225 (name=0x0) at f/stc.c:12307\n-* #8  0xcc808 in ffestc_end () at f/stc.c:5572\n-* #9  0x9fa84 in ffestb_end3_ (t=0x3a19c8) at f/stb.c:3216\n-* #10 0x9f30c in ffestb_end (t=0x3a19c8) at f/stb.c:2995\n-* #11 0x98414 in ffesta_save_ (t=0x3a19c8) at f/sta.c:453\n-* #12 0x997ec in ffesta_second_ (t=0x3a19c8) at f/sta.c:1178\n-* #13 0x8ed84 in ffelex_send_token_ () at f/lex.c:1614\n-* #14 0x8cab8 in ffelex_finish_statement_ () at f/lex.c:946\n-* #15 0x91684 in ffelex_file_fixed (wf=0x397780, f=0x37a560) at f/lex.c:2946\n-* #16 0x107a94 in ffe_file (wf=0x397780, f=0x37a560) at f/top.c:456\n-* #17 0x96218 in yyparse () at f/parse.c:77\n-* #18 0x10beac in compile_file (name=0xdffffaf7 \"quick.f\") at toplev.c:2239\n-* #19 0x110dc0 in main (argc=9, argv=0xdffff994, envp=0xdffff9bc) at toplev.c:3927"}, {"sha": "004f5584f3e18ab603877850a0915ecb040df867", "filename": "gcc/testsuite/g77.f-torture/compile/970125-0.f", "status": "removed", "additions": 0, "deletions": 40, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F970125-0.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F970125-0.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F970125-0.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,40 +0,0 @@\n-C JCB comments:\n-C g77 doesn't accept the added line \"integer(kind=7) ...\" --\n-C it crashes!\n-C \n-C It's questionable that g77 DTRT with regarding to passing\n-C %LOC() as an argument (thus by reference) and the new global\n-C analysis.  I need to look into that further; my feeling is that\n-C passing %LOC() as an argument should be treated like passing an\n-C INTEGER(KIND=7) by reference, and no more specially than that\n-C (and that INTEGER(KIND=7) should be permitted as equivalent to\n-C INTEGER(KIND=1), INTEGER(KIND=2), or whatever, depending on the\n-C system's pointer size).\n-C \n-C The back end *still* has a bug here, which should be fixed,\n-C because, currently, what g77 is passing to it is, IMO, correct.\n-\n-C No options:\n-C ../../egcs/gcc/f/info.c:259: failed assertion `ffeinfo_types_[basictype][kindtype] != NULL'\n-C -fno-globals -O:\n-C ../../egcs/gcc/expr.c:7291: Internal compiler error in function expand_expr\n-\n-c     Frontend bug fixed by JCB 1998-06-01 com.c &c changes.\n-\n-        integer*4 i4\n-        integer*8 i8\n-        integer*8 max4\n-        data max4/2147483647/\n-        i4 = %loc(i4)\n-        i8 = %loc(i8)\n-        print *, max4\n-        print *, i4, %loc(i4)\n-        print *, i8, %loc(i8)\n-        call foo(i4, %loc(i4), i8, %loc(i8))\n-        end\n-        subroutine foo(i4, i4a, i8, i8a)\n-        integer(kind=7) i4a, i8a\n-        integer*8 i8\n-        print *, i4, i4a\n-        print *, i8, i8a\n-        end"}, {"sha": "9ac3cf8aa97c57525611cf9b27a98b2a420fd3e4", "filename": "gcc/testsuite/g77.f-torture/compile/970915-0.f", "status": "removed", "additions": 0, "deletions": 20, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F970915-0.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F970915-0.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F970915-0.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,20 +0,0 @@\n-* fixed by patch to safe_from_p to avoid visiting any SAVE_EXPR\n-* node twice in a given top-level call to it.\n-* (JCB com.c patch of 1998-06-04.)\n-\n-      SUBROUTINE TSTSIG11\n-      IMPLICIT COMPLEX (A-Z)\n-      EXTERNAL gzi1,gzi2\n-      branch3 =  sw2 / cw\n-     .     * (  rdw * (epsh*gzi1(A,B)-gzi2(A,B))\n-     .     + rdw * (epsh*gzi1(A,B)-gzi2(A,B)) )\n-     .     + (-1./2. + 2.*sw2/3.) / (sw*cw)\n-     .     * rdw * (epsh*gzi1(A,B)-gzi2(A,B)\n-     .     + rdw * (epsh*gzi1(A,B)-gzi2(A,B))\n-     .     + rdw * (epsh*gzi1(A,B)-gzi2(A,B)) )\n-     .     * rup * (epsh*gzi1(A,B)-gzi2(A,B)\n-     .     + rup * (epsh*gzi1(A,B)-gzi2(A,B)) )\n-     .     * 4.*(3.-tw**2) * gzi2(A,B)\n-     .     + ((1.+2./tauw)*tw**2-(5.+2./tauw))* gzi1(A,B)\n-      RETURN\n-      END"}, {"sha": "bc8aa85c14ae22b7ed0ee046571bb5cbc4254851", "filename": "gcc/testsuite/g77.f-torture/compile/980310-1.f", "status": "removed", "additions": 0, "deletions": 28, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F980310-1.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F980310-1.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F980310-1.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,28 +0,0 @@\n-C Causes internal compiler error on egcs 1.0.1 on i586-pc-sco3.2v5.0.4\n-C To: egcs-bugs@cygnus.com\n-C Subject: backend case range problem/fix\n-C From: Dave Love <d.love@dl.ac.uk>\n-C Date: 02 Dec 1997 18:11:35 +0000\n-C Message-ID: <rzqpvnfboo8.fsf@djlvig.dl.ac.uk>\n-C \n-C The following Fortran test case aborts the compiler because\n-C tree_int_cst_lt dereferences a null tree; this is a regression from\n-C gcc 2.7.\n-\n-      INTEGER N\n-      READ(*,*) N\n-      SELECT CASE (N)\n-        CASE (1:)\n-           WRITE(*,*) 'case 1'\n-        CASE (0)\n-           WRITE(*,*) 'case 0'\n-      END SELECT\n-      END\n-\n-C The relevant change to cure this is:\n-C\n-C Thu Dec  4 06:34:40 1997  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n-C\n-C       * stmt.c (pushcase_range): Clean up handling of \"infinite\" values.\n-C\n-"}, {"sha": "5077c552da8875a084fbcfac960a7e86204196be", "filename": "gcc/testsuite/g77.f-torture/compile/980310-2.f", "status": "removed", "additions": 0, "deletions": 43, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F980310-2.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F980310-2.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F980310-2.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,43 +0,0 @@\n-C unable to confirm this bug on egcs 1.0.1 for i586-pc-sco3.2v5.0.4 robertl\n-C\n-C Date: Sat, 23 Aug 1997 00:47:53 -0400 (EDT)\n-C From: David Bristow <dbristow@lynx.dac.neu.edu>\n-C To: egcs-bugs@cygnus.com\n-C Subject: g77 crashes compiling Dungeon\n-C Message-ID: <Pine.OSF.3.91.970823003521.11281A-100000@lynx.dac.neu.edu>\n-C\n-C The following small segment of Dungeon (the adventure that became the \n-C commercial hit Zork) causes an internal error in f771.  The platform is \n-C i586-pc-linux-gnulibc1, the compiler is egcs-ss-970821 (g77-GNU Fortran \n-C 0.5.21-19970811)\n-C \n-C --cut here--cut here--cut here--cut here--cut here--cut here--\n-C g77 --verbose -fugly -fvxt -c subr_.f\n-C g77 version 0.5.21-19970811\n-C  gcc --verbose -fugly -fvxt -xf77 subr_.f -xnone -lf2c -lm\n-C Reading specs from /usr/lib/gcc-lib/i586-pc-linux-gnulibc1/egcs-2.90.01/specs\n-C gcc version egcs-2.90.01 970821 (gcc2-970802 experimental)\n-C  /usr/lib/gcc-lib/i586-pc-linux-gnulibc1/egcs-2.90.01/f771 subr_.f -fset-g77-defaults -quiet -dumpbase subr_.f -version -fversion -fugly -fvxt -o /tmp/cca23974.s\n-C f771: warning: -fugly is overloaded with meanings and likely to be removed;\n-C f771: warning: use only the specific -fugly-* options you need\n-C GNU F77 version egcs-2.90.01 970821 (gcc2-970802 experimental) (i586-pc-linux-gnulibc1) compiled by GNU C version egcs-2.90.01 970821 (gcc2-970802 experimental).\n-C GNU Fortran Front End version 0.5.21-19970811\n-C f/com.c:941: failed assertion `TYPE_PRECISION (type) <= TYPE_PRECISION (TREE_TYPE (e))'\n-C gcc: Internal compiler error: program f771 got fatal signal 6\n-C --cut here--cut here--cut here--cut here--cut here--cut here--\n-C \n-C Here's the FORTRAN code, it's basically a single subroutine from subr.f \n-C in the Dungeon source, slightly altered (the original calls RAN(), which \n-C doesn't exist in the g77 runtime)\n-C \n-C RND - Return a random integer mod n\n-C\n-\tINTEGER FUNCTION RND (N)\n-\tIMPLICIT INTEGER (A-Z)\n-\tREAL RAND\n-\tCOMMON /SEED/ RNSEED\n-\n-\tRND = RAND(RNSEED)*FLOAT(N)\n-\tRETURN\n-\n-\tEND"}, {"sha": "ddfb4c4bb9fb4690a5d1c013ed0be1e6ffc1e8b5", "filename": "gcc/testsuite/g77.f-torture/compile/980310-3.f", "status": "removed", "additions": 0, "deletions": 259, "changes": 259, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F980310-3.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F980310-3.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F980310-3.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,259 +0,0 @@\n-c\n-c\tThis demonstrates a problem with g77 and pic on x86 where \n-c \tegcs 1.0.1 and earlier will generate bogus assembler output.\n-c\tunfortunately, gas accepts the bogus acssembler output and \n-c\tgenerates code that almost works.\n-c\n-\n-\n-C Date: Wed, 17 Dec 1997 23:20:29 +0000\n-C From: Joao Cardoso <jcardoso@inescn.pt>\n-C To: egcs-bugs@cygnus.com\n-C Subject: egcs-1.0 f77 bug on OSR5\n-C When trying to compile the Fortran file that I enclose bellow,\n-C I got an assembler error:\n-C \n-C ./g77 -B./ -fpic -O -c scaleg.f\n-C /usr/tmp/cca002D8.s:123:syntax error at (\n-C \n-C ./g77 -B./ -fpic -O0 -c scaleg.f \n-C /usr/tmp/cca002EW.s:246:invalid operand combination: leal\n-C \n-C Compiling without the -fpic flag runs OK.\n-\n-      subroutine scaleg (n,ma,a,mb,b,low,igh,cscale,cperm,wk)\n-c\n-c     *****parameters:\n-      integer igh,low,ma,mb,n\n-      double precision a(ma,n),b(mb,n),cperm(n),cscale(n),wk(n,6)\n-c\n-c     *****local variables:\n-      integer i,ir,it,j,jc,kount,nr,nrp2\n-      double precision alpha,basl,beta,cmax,coef,coef2,coef5,cor,\n-     *                 ew,ewc,fi,fj,gamma,pgamma,sum,t,ta,tb,tc\n-c\n-c     *****fortran functions:\n-      double precision dabs, dlog10, dsign\n-c     float\n-c\n-c     *****subroutines called:\n-c     none\n-c\n-c     ---------------------------------------------------------------\n-c\n-c     *****purpose:\n-c     scales the matrices a and b in the generalized eigenvalue\n-c     problem a*x = (lambda)*b*x such that the magnitudes of the\n-c     elements of the submatrices of a and b (as specified by low\n-c     and igh) are close to unity in the least squares sense.\n-c     ref.:  ward, r. c., balancing the generalized eigenvalue\n-c     problem, siam j. sci. stat. comput., vol. 2, no. 2, june 1981,\n-c     141-152.\n-c\n-c     *****parameter description:\n-c\n-c     on input:\n-c\n-c       ma,mb   integer\n-c               row dimensions of the arrays containing matrices\n-c               a and b respectively, as declared in the main calling\n-c               program dimension statement;\n-c\n-c       n       integer\n-c               order of the matrices a and b;\n-c\n-c       a       real(ma,n)\n-c               contains the a matrix of the generalized eigenproblem\n-c               defined above;\n-c\n-c       b       real(mb,n)\n-c               contains the b matrix of the generalized eigenproblem\n-c               defined above;\n-c\n-c       low     integer\n-c               specifies the beginning -1 for the rows and\n-c               columns of a and b to be scaled;\n-c\n-c       igh     integer\n-c               specifies the ending -1 for the rows and columns\n-c               of a and b to be scaled;\n-c\n-c       cperm   real(n)\n-c               work array.  only locations low through igh are\n-c               referenced and altered by this subroutine;\n-c\n-c       wk      real(n,6)\n-c               work array that must contain at least 6*n locations.\n-c               only locations low through igh, n+low through n+igh,\n-c               ..., 5*n+low through 5*n+igh are referenced and\n-c               altered by this subroutine.\n-c\n-c     on output:\n-c\n-c       a,b     contain the scaled a and b matrices;\n-c\n-c       cscale  real(n)\n-c               contains in its low through igh locations the integer\n-c               exponents of 2 used for the column scaling factors.\n-c               the other locations are not referenced;\n-c\n-c       wk      contains in its low through igh locations the integer\n-c               exponents of 2 used for the row scaling factors.\n-c\n-c     *****algorithm notes:\n-c     none.\n-c\n-c     *****history:\n-c     written by r. c. ward.......\n-c     modified 8/86 by bobby bodenheimer so that if\n-c       sum = 0 (corresponding to the case where the matrix\n-c       doesn't need to be scaled) the routine returns.\n-c\n-c     ---------------------------------------------------------------\n-c\n-      if (low .eq. igh) go to 410\n-      do 210 i = low,igh\n-         wk(i,1) = 0.0d0\n-         wk(i,2) = 0.0d0\n-         wk(i,3) = 0.0d0\n-         wk(i,4) = 0.0d0\n-         wk(i,5) = 0.0d0\n-         wk(i,6) = 0.0d0\n-         cscale(i) = 0.0d0\n-         cperm(i) = 0.0d0\n-  210 continue\n-c\n-c     compute right side vector in resulting linear equations\n-c\n-      basl = dlog10(2.0d0)\n-      do 240 i = low,igh\n-         do 240 j = low,igh\n-            tb = b(i,j)\n-            ta = a(i,j)\n-            if (ta .eq. 0.0d0) go to 220\n-            ta = dlog10(dabs(ta)) / basl\n-  220       continue\n-            if (tb .eq. 0.0d0) go to 230\n-            tb = dlog10(dabs(tb)) / basl\n-  230       continue\n-            wk(i,5) = wk(i,5) - ta - tb\n-            wk(j,6) = wk(j,6) - ta - tb\n-  240 continue\n-      nr = igh-low+1\n-      coef = 1.0d0/float(2*nr)\n-      coef2 = coef*coef\n-      coef5 = 0.5d0*coef2\n-      nrp2 = nr+2\n-      beta = 0.0d0\n-      it = 1\n-c\n-c     start generalized conjugate gradient iteration\n-c\n-  250 continue\n-      ew = 0.0d0\n-      ewc = 0.0d0\n-      gamma = 0.0d0\n-      do 260 i = low,igh\n-         gamma = gamma + wk(i,5)*wk(i,5) + wk(i,6)*wk(i,6)\n-         ew = ew + wk(i,5)\n-         ewc = ewc + wk(i,6)\n-  260 continue\n-      gamma = coef*gamma - coef2*(ew**2 + ewc**2)\n-     +        - coef5*(ew - ewc)**2\n-      if (it .ne. 1) beta = gamma / pgamma\n-      t = coef5*(ewc - 3.0d0*ew)\n-      tc = coef5*(ew - 3.0d0*ewc)\n-      do 270 i = low,igh\n-         wk(i,2) = beta*wk(i,2) + coef*wk(i,5) + t\n-         cperm(i) = beta*cperm(i) + coef*wk(i,6) + tc\n-  270 continue\n-c\n-c     apply matrix to vector\n-c\n-      do 300 i = low,igh\n-         kount = 0\n-         sum = 0.0d0\n-         do 290 j = low,igh\n-            if (a(i,j) .eq. 0.0d0) go to 280\n-            kount = kount+1\n-            sum = sum + cperm(j)\n-  280       continue\n-            if (b(i,j) .eq. 0.0d0) go to 290\n-            kount = kount+1\n-            sum = sum + cperm(j)\n-  290    continue\n-         wk(i,3) = float(kount)*wk(i,2) + sum\n-  300 continue\n-      do 330 j = low,igh\n-         kount = 0\n-         sum = 0.0d0\n-         do 320 i = low,igh\n-            if (a(i,j) .eq. 0.0d0) go to 310\n-            kount = kount+1\n-            sum = sum + wk(i,2)\n-  310       continue\n-            if (b(i,j) .eq. 0.0d0) go to 320\n-            kount = kount+1\n-            sum = sum + wk(i,2)\n-  320    continue\n-         wk(j,4) = float(kount)*cperm(j) + sum\n-  330 continue\n-      sum = 0.0d0\n-      do 340 i = low,igh\n-         sum = sum + wk(i,2)*wk(i,3) + cperm(i)*wk(i,4)\n-  340 continue\n-      if(sum.eq.0.0d0) return\n-      alpha = gamma / sum\n-c\n-c     determine correction to current iterate\n-c\n-      cmax = 0.0d0\n-      do 350 i = low,igh\n-         cor = alpha * wk(i,2)\n-         if (dabs(cor) .gt. cmax) cmax = dabs(cor)\n-         wk(i,1) = wk(i,1) + cor\n-         cor = alpha * cperm(i)\n-         if (dabs(cor) .gt. cmax) cmax = dabs(cor)\n-         cscale(i) = cscale(i) + cor\n-  350 continue\n-      if (cmax .lt. 0.5d0) go to 370\n-      do 360 i = low,igh\n-         wk(i,5) = wk(i,5) - alpha*wk(i,3)\n-         wk(i,6) = wk(i,6) - alpha*wk(i,4)\n-  360 continue\n-      pgamma = gamma\n-      it = it+1\n-      if (it .le. nrp2) go to 250\n-c\n-c     end generalized conjugate gradient iteration\n-c\n-  370 continue\n-      do 380 i = low,igh\n-         ir = wk(i,1) + dsign(0.5d0,wk(i,1))\n-         wk(i,1) = ir\n-         jc = cscale(i) + dsign(0.5d0,cscale(i))\n-         cscale(i) = jc\n-  380 continue\n-c\n-c     scale a and b\n-c\n-      do 400 i = 1,igh\n-         ir = wk(i,1)\n-         fi = 2.0d0**ir\n-         if (i .lt. low) fi = 1.0d0\n-         do 400 j =low,n\n-            jc = cscale(j)\n-            fj = 2.0d0**jc\n-            if (j .le. igh) go to 390\n-            if (i .lt. low) go to 400\n-            fj = 1.0d0\n-  390       continue\n-            a(i,j) = a(i,j)*fi*fj\n-            b(i,j) = b(i,j)*fi*fj\n-  400 continue\n-  410 continue\n-      return\n-c\n-c     last line of scaleg\n-c\n-      end"}, {"sha": "802e3031f86a106dcbe09881684c88c441c4c14e", "filename": "gcc/testsuite/g77.f-torture/compile/980310-4.f", "status": "removed", "additions": 0, "deletions": 348, "changes": 348, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F980310-4.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F980310-4.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F980310-4.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,348 +0,0 @@\n-\n-C To: egcs-bugs@cygnus.com\n-C Subject: -fPIC problem showing up with fortran on x86\n-C From: Dave Love <d.love@dl.ac.uk>\n-C Date: 19 Dec 1997 19:31:41 +0000\n-C \n-C \n-C This illustrates a long-standing problem noted at the end of the g77\n-C `Actual Bugs' info node and thought to be in the back end.  Although\n-C the report is against gcc 2.7 I can reproduce it (specifically on\n-C redhat 4.2) with the 971216 egcs snapshot.\n-C \n-C g77 version 0.5.21\n-C  gcc -v -fnull-version -o /tmp/gfa00415 -xf77-cpp-input /tmp/gfa00415.f -xnone\n-C -lf2c -lm\n-C\n-\n-C ------------\n-      subroutine dqage(f,a,b,epsabs,epsrel,limit,result,abserr,\n-     *   neval,ier,alist,blist,rlist,elist,iord,last)\n-C     --------------------------------------------------\n-C\n-C     Modified Feb 1989 by Barry W. Brown to eliminate key\n-C     as argument (use key=1) and to eliminate all Fortran\n-C     output.\n-C\n-C     Purpose: to make this routine usable from within S.\n-C\n-C     --------------------------------------------------\n-c***begin prologue  dqage\n-c***date written   800101   (yymmdd)\n-c***revision date  830518   (yymmdd)\n-c***category no.  h2a1a1\n-c***keywords  automatic integrator, general-purpose,\n-c             integrand examinator, globally adaptive,\n-c             gauss-kronrod\n-c***author  piessens,robert,appl. math. & progr. div. - k.u.leuven\n-c           de doncker,elise,appl. math. & progr. div. - k.u.leuven\n-c***purpose  the routine calculates an approximation result to a given\n-c            definite integral   i = integral of f over (a,b),\n-c            hopefully satisfying following claim for accuracy\n-c            abs(i-reslt).le.max(epsabs,epsrel*abs(i)).\n-c***description\n-c\n-c        computation of a definite integral\n-c        standard fortran subroutine\n-c        double precision version\n-c\n-c        parameters\n-c         on entry\n-c            f      - double precision\n-c                     function subprogram defining the integrand\n-c                     function f(x). the actual name for f needs to be\n-c                     declared e x t e r n a l in the driver program.\n-c\n-c            a      - double precision\n-c                     lower limit of integration\n-c\n-c            b      - double precision\n-c                     upper limit of integration\n-c\n-c            epsabs - double precision\n-c                     absolute accuracy requested\n-c            epsrel - double precision\n-c                     relative accuracy requested\n-c                     if  epsabs.le.0\n-c                     and epsrel.lt.max(50*rel.mach.acc.,0.5d-28),\n-c                     the routine will end with ier = 6.\n-c\n-c            key    - integer\n-c                     key for choice of local integration rule\n-c                     a gauss-kronrod pair is used with\n-c                          7 - 15 points if key.lt.2,\n-c                         10 - 21 points if key = 2,\n-c                         15 - 31 points if key = 3,\n-c                         20 - 41 points if key = 4,\n-c                         25 - 51 points if key = 5,\n-c                         30 - 61 points if key.gt.5.\n-c\n-c            limit  - integer\n-c                     gives an upperbound on the number of subintervals\n-c                     in the partition of (a,b), limit.ge.1.\n-c\n-c         on return\n-c            result - double precision\n-c                     approximation to the integral\n-c\n-c            abserr - double precision\n-c                     estimate of the modulus of the absolute error,\n-c                     which should equal or exceed abs(i-result)\n-c\n-c            neval  - integer\n-c                     number of integrand evaluations\n-c\n-c            ier    - integer\n-c                     ier = 0 normal and reliable termination of the\n-c                             routine. it is assumed that the requested\n-c                             accuracy has been achieved.\n-c                     ier.gt.0 abnormal termination of the routine\n-c                             the estimates for result and error are\n-c                             less reliable. it is assumed that the\n-c                             requested accuracy has not been achieved.\n-c            error messages\n-c                     ier = 1 maximum number of subdivisions allowed\n-c                             has been achieved. one can allow more\n-c                             subdivisions by increasing the value\n-c                             of limit.\n-c                             however, if this yields no improvement it\n-c                             is rather advised to analyze the integrand\n-c                             in order to determine the integration\n-c                             difficulties. if the position of a local\n-c                             difficulty can be determined(e.g.\n-c                             singularity, discontinuity within the\n-c                             interval) one will probably gain from\n-c                             splitting up the interval at this point\n-c                             and calling the integrator on the\n-c                             subranges. if possible, an appropriate\n-c                             special-purpose integrator should be used\n-c                             which is designed for handling the type of\n-c                             difficulty involved.\n-c                         = 2 the occurrence of roundoff error is\n-c                             detected, which prevents the requested\n-c                             tolerance from being achieved.\n-c                         = 3 extremely bad integrand behavior occurs\n-c                             at some points of the integration\n-c                             interval.\n-c                         = 6 the input is invalid, because\n-c                             (epsabs.le.0 and\n-c                              epsrel.lt.max(50*rel.mach.acc.,0.5d-28),\n-c                             result, abserr, neval, last, rlist(1) ,\n-c                             elist(1) and iord(1) are set to zero.\n-c                             alist(1) and blist(1) are set to a and b\n-c                             respectively.\n-c\n-c            alist   - double precision\n-c                      vector of dimension at least limit, the first\n-c                       last  elements of which are the left\n-c                      end points of the subintervals in the partition\n-c                      of the given integration range (a,b)\n-c\n-c            blist   - double precision\n-c                      vector of dimension at least limit, the first\n-c                       last  elements of which are the right\n-c                      end points of the subintervals in the partition\n-c                      of the given integration range (a,b)\n-c\n-c            rlist   - double precision\n-c                      vector of dimension at least limit, the first\n-c                       last  elements of which are the\n-c                      integral approximations on the subintervals\n-c\n-c            elist   - double precision\n-c                      vector of dimension at least limit, the first\n-c                       last  elements of which are the moduli of the\n-c                      absolute error estimates on the subintervals\n-c\n-c            iord    - integer\n-c                      vector of dimension at least limit, the first k\n-c                      elements of which are pointers to the\n-c                      error estimates over the subintervals,\n-c                      such that elist(iord(1)), ...,\n-c                      elist(iord(k)) form a decreasing sequence,\n-c                      with k = last if last.le.(limit/2+2), and\n-c                      k = limit+1-last otherwise\n-c\n-c            last    - integer\n-c                      number of subintervals actually produced in the\n-c                      subdivision process\n-c\n-c***references  (none)\n-c***routines called  d1mach,dqk15,dqk21,dqk31,\n-c                    dqk41,dqk51,dqk61,dqpsrt\n-c***end prologue  dqage\n-c\n-      double precision a,abserr,alist,area,area1,area12,area2,a1,a2,b,\n-     *  blist,b1,b2,dabs,defabs,defab1,defab2,dmax1,d1mach,elist,epmach,\n-     *  epsabs,epsrel,errbnd,errmax,error1,error2,erro12,errsum,f,\n-     *  resabs,result,rlist,uflow\n-      integer ier,iord,iroff1,iroff2,k,last,limit,maxerr,neval,\n-     *  nrmax\n-c\n-      dimension alist(limit),blist(limit),elist(limit),iord(limit),\n-     *  rlist(limit)\n-c\n-      external f\n-c\n-c            list of major variables\n-c            -----------------------\n-c\n-c           alist     - list of left end points of all subintervals\n-c                       considered up to now\n-c           blist     - list of right end points of all subintervals\n-c                       considered up to now\n-c           rlist(i)  - approximation to the integral over\n-c                      (alist(i),blist(i))\n-c           elist(i)  - error estimate applying to rlist(i)\n-c           maxerr    - pointer to the interval with largest\n-c                       error estimate\n-c           errmax    - elist(maxerr)\n-c           area      - sum of the integrals over the subintervals\n-c           errsum    - sum of the errors over the subintervals\n-c           errbnd    - requested accuracy max(epsabs,epsrel*\n-c                       abs(result))\n-c           *****1    - variable for the left subinterval\n-c           *****2    - variable for the right subinterval\n-c           last      - index for subdivision\n-c\n-c\n-c           machine dependent constants\n-c           ---------------------------\n-c\n-c           epmach  is the largest relative spacing.\n-c           uflow  is the smallest positive magnitude.\n-c\n-c***first executable statement  dqage\n-      epmach = d1mach(4)\n-      uflow = d1mach(1)\n-c\n-c           test on validity of parameters\n-c           ------------------------------\n-c\n-      ier = 0\n-      neval = 0\n-      last = 0\n-      result = 0.0d+00\n-      abserr = 0.0d+00\n-      alist(1) = a\n-      blist(1) = b\n-      rlist(1) = 0.0d+00\n-      elist(1) = 0.0d+00\n-      iord(1) = 0\n-      if(epsabs.le.0.0d+00.and.\n-     *  epsrel.lt.dmax1(0.5d+02*epmach,0.5d-28)) ier = 6\n-      if(ier.eq.6) go to 999\n-c\n-c           first approximation to the integral\n-c           -----------------------------------\n-c\n-      neval = 0\n-      call dqk15(f,a,b,result,abserr,defabs,resabs)\n-      last = 1\n-      rlist(1) = result\n-      elist(1) = abserr\n-      iord(1) = 1\n-c\n-c           test on accuracy.\n-c\n-      errbnd = dmax1(epsabs,epsrel*dabs(result))\n-      if(abserr.le.0.5d+02*epmach*defabs.and.abserr.gt.errbnd) ier = 2\n-      if(limit.eq.1) ier = 1\n-      if(ier.ne.0.or.(abserr.le.errbnd.and.abserr.ne.resabs)\n-     *  .or.abserr.eq.0.0d+00) go to 60\n-c\n-c           initialization\n-c           --------------\n-c\n-c\n-      errmax = abserr\n-      maxerr = 1\n-      area = result\n-      errsum = abserr\n-      nrmax = 1\n-      iroff1 = 0\n-      iroff2 = 0\n-c\n-c           main do-loop\n-c           ------------\n-c\n-      do 30 last = 2,limit\n-c\n-c           bisect the subinterval with the largest error estimate.\n-c\n-        a1 = alist(maxerr)\n-        b1 = 0.5d+00*(alist(maxerr)+blist(maxerr))\n-        a2 = b1\n-        b2 = blist(maxerr)\n-        call dqk15(f,a1,b1,area1,error1,resabs,defab1)\n-        call dqk15(f,a2,b2,area2,error2,resabs,defab2)\n-c\n-c           improve previous approximations to integral\n-c           and error and test for accuracy.\n-c\n-        neval = neval+1\n-        area12 = area1+area2\n-        erro12 = error1+error2\n-        errsum = errsum+erro12-errmax\n-        area = area+area12-rlist(maxerr)\n-        if(defab1.eq.error1.or.defab2.eq.error2) go to 5\n-        if(dabs(rlist(maxerr)-area12).le.0.1d-04*dabs(area12)\n-     *  .and.erro12.ge.0.99d+00*errmax) iroff1 = iroff1+1\n-        if(last.gt.10.and.erro12.gt.errmax) iroff2 = iroff2+1\n-    5   rlist(maxerr) = area1\n-        rlist(last) = area2\n-        errbnd = dmax1(epsabs,epsrel*dabs(area))\n-        if(errsum.le.errbnd) go to 8\n-c\n-c           test for roundoff error and eventually set error flag.\n-c\n-        if(iroff1.ge.6.or.iroff2.ge.20) ier = 2\n-c\n-c           set error flag in the case that the number of subintervals\n-c           equals limit.\n-c\n-        if(last.eq.limit) ier = 1\n-c\n-c           set error flag in the case of bad integrand behavior\n-c           at a point of the integration range.\n-c\n-        if(dmax1(dabs(a1),dabs(b2)).le.(0.1d+01+0.1d+03*\n-     *  epmach)*(dabs(a2)+0.1d+04*uflow)) ier = 3\n-c\n-c           append the newly-created intervals to the list.\n-c\n-    8   if(error2.gt.error1) go to 10\n-        alist(last) = a2\n-        blist(maxerr) = b1\n-        blist(last) = b2\n-        elist(maxerr) = error1\n-        elist(last) = error2\n-        go to 20\n-   10   alist(maxerr) = a2\n-        alist(last) = a1\n-        blist(last) = b1\n-        rlist(maxerr) = area2\n-        rlist(last) = area1\n-        elist(maxerr) = error2\n-        elist(last) = error1\n-c\n-c           call subroutine dqpsrt to maintain the descending ordering\n-c           in the list of error estimates and select the subinterval\n-c           with the largest error estimate (to be bisected next).\n-c\n-   20   call dqpsrt(limit,last,maxerr,errmax,elist,iord,nrmax)\n-c ***jump out of do-loop\n-        if(ier.ne.0.or.errsum.le.errbnd) go to 40\n-   30 continue\n-c\n-c           compute final result.\n-c           ---------------------\n-c\n-   40 result = 0.0d+00\n-      do 50 k=1,last\n-        result = result+rlist(k)\n-   50 continue\n-      abserr = errsum\n-   60 neval = 30*neval+15\n-  999 return\n-      end"}, {"sha": "fd91500eea8d671f0548de406e2461bae3bf0be0", "filename": "gcc/testsuite/g77.f-torture/compile/980310-6.f", "status": "removed", "additions": 0, "deletions": 21, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F980310-6.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F980310-6.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F980310-6.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,21 +0,0 @@\n-C From: Norbert Conrad <Norbert.Conrad@hrz.uni-giessen.de>\n-C Message-Id: <199711131008.LAA12272@marvin.hrz.uni-giessen.de>\n-C Subject: 971105  g77 bug\n-C To: egcs-bugs@cygnus.com\n-C Date: Thu, 13 Nov 1997 11:08:19 +0100 (CET)\n-\n-C I found a bug in g77 in snapshot 971105\n-\n-      subroutine ai (a)\n-      dimension a(-1:*)\n-      return\n-      end\n-C ai.f: In subroutine `ai':\n-C ai.f:1: \n-C          subroutine ai (a)\n-C                         ^\n-C Array `a' at (^) is too large to handle\n-C \n-C This happens whenever the lower index boundary is negative and the upper index\n-C boundary is '*'. \n-"}, {"sha": "9cfbaed692a9897c875f4c27731705d1643e7a81", "filename": "gcc/testsuite/g77.f-torture/compile/980310-7.f", "status": "removed", "additions": 0, "deletions": 50, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F980310-7.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F980310-7.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F980310-7.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,50 +0,0 @@\n-C From: \"David C. Doherty\" <doherty@networkcs.com>\n-C Message-Id: <199711171846.MAA27947@uh.msc.edu>\n-C Subject: g77: auto arrays + goto = no go\n-C To: egcs-bugs@cygnus.com\n-C Date: Mon, 17 Nov 1997 12:46:27 -0600 (CST)\n-\n-C I sent the following to fortran@gnu.ai.mit.edu, and Dave Love\n-C replied that he was able to reproduce it on rs6000-aix; not on\n-C others. He suggested that I send it to egcs-bugs. \n-\n-C Hi - I've observed the following behavior regarding \n-C automatic arrays and gotos.  Seems similar to what I found\n-C in the docs about computed gotos (but not exactly the same).\n-C \n-C I suspect from the nature of the error msg that it's in the GBE.\n-C \n-C I'm using egcs-971105, under linux-ppc.\n-C \n-C I also observed the same in g77-0.5.19 (and gcc 2.7.2?).\n-C \n-C I'd appreciate any advice on this.  thanks for the great work.\n-C --\n-C >cat testg77.f\n-      subroutine testg77(n, a)\n-c\n-      implicit none\n-c\n-      integer n\n-      real a(n)\n-      real b(n)\n-      integer i\n-c\n-      do i = 1, 10\n-        if (i .gt. 4) goto 100\n-        write(0, '(i2)')i\n-      enddo\n-c\n-      goto 200\n-100   continue\n-200   continue\n-c\n-      return\n-      end\n-C >g77 -c testg77.f\n-C testg77.f: In subroutine `testg77':\n-C testg77.f:19: label `200' used before containing binding contour\n-C testg77.f:18: label `100' used before containing binding contour\n-C --\n-C If I comment out the b(n) line or replace it with, e.g., b(10),\n-C it compiles fine."}, {"sha": "9501012f60abc27cfe6fee6341783790d112d054", "filename": "gcc/testsuite/g77.f-torture/compile/980310-8.f", "status": "removed", "additions": 0, "deletions": 39, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F980310-8.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F980310-8.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F980310-8.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,39 +0,0 @@\n-C To: egcs-bugs@cygnus.com\n-C Subject: egcs-g77 and array indexing\n-C Reply-To: etseidl@jutland.ca.sandia.gov\n-C Date: Wed, 26 Nov 1997 10:38:27 -0800\n-C From: Edward Seidl <etseidl@jutland.ca.sandia.gov>\n-C\t\n-C\tI have some horrible spaghetti code I'm trying compile with egcs-g77,\n-C\tbut it's puking on code like the example below.  I have no idea if it's\n-C\tlegal fortran or not, and I'm in no position to change it.  All I do know\n-C\tis it compiles with a number of other compilers, including f2c and\n-C\tg77-0.5.19.1/gcc-2.7.2.1.  When I try to compile with egcs-2.90.18 971122\n-C\tI get the following (on both i686-pc-linux-gnu and alphaev56-unknown-linux-gnu):\n-C\t\n-C\tfoo.f: In subroutine `foobar':\n-C\tfoo.f:11: \n-C\t         subroutine foobar(norb,nnorb)\n-C\t                           ^\n-C\tArray `norb' at (^) is too large to handle\n-\n-      program foo\n-      implicit integer(A-Z)\n-      dimension norb(6)\n-      nnorb=6\n-\n-      call foobar(norb,nnorb)\n-\n-      stop\n-      end\n-\n-      subroutine foobar(norb,nnorb)\n-      implicit integer(A-Z)\n-      dimension norb(-1:*)\n-\n-      do 10 i=-1,nnorb-2\n-        norb(i) = i+999\n-  10  continue\n-\n-      return\n-      end"}, {"sha": "ac9134dc8a792f720b1df7280d12bf09ef845a1e", "filename": "gcc/testsuite/g77.f-torture/compile/980419-2.f", "status": "removed", "additions": 0, "deletions": 48, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F980419-2.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F980419-2.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F980419-2.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,48 +0,0 @@\n-c     SEGVs in loop.c with -O2.\n-\n-      character*80 function nxtlin(lun,ierr,itok)\n-      character onechr*1,twochr*2,thrchr*3\n-      itok=0\n-      do while (.true.)\n-         read (lun,'(a)',iostat=ierr) nxtlin\n-         if (nxtlin(1:1).ne.'#') then\n-            ito=0\n-            do 10 it=1,79\n-               if (nxtlin(it:it).ne.' ' .and. nxtlin(it+1:it+1).eq.' ')\n-     $              then\n-                  itast=0\n-                  itstrt=0\n-                  do itt=ito+1,it\n-                     if (nxtlin(itt:itt).eq.'*') itast=itt\n-                  enddo\n-                  itstrt=ito+1\n-                  do while (nxtlin(itstrt:itstrt).eq.' ')\n-                     itstrt=itstrt+1\n-                  enddo\n-                  if (itast.gt.0) then\n-                     nchrs=itast-itstrt\n-                     if (nchrs.eq.1) then\n-                        onechr=nxtlin(itstrt:itstrt)\n-                        read (onechr,*) itokn\n-                     elseif (nchrs.eq.2) then\n-                        twochr=nxtlin(itstrt:itstrt+1)\n-                        read (twochr,*) itokn\n-                     elseif (nchrs.eq.3) then\n-                        thrchr=nxtlin(itstrt:itstrt+2)\n-                        read (thrchr,*) itokn\n-                     elseif (nchrs.eq.4) then\n-                        thrchr=nxtlin(itstrt:itstrt+3)\n-                        read (thrchr,*) itokn\n-                     endif\n-                     itok=itok+itokn\n-                  else\n-                     itok=itok+1\n-                  endif\n-                  ito=it+1\n-               endif\n- 10         continue\n-            return\n-         endif\n-      enddo\n-      return\n-      end"}, {"sha": "5df45bb79a9ad78b017d9a6306bbe2a1ff284a5e", "filename": "gcc/testsuite/g77.f-torture/compile/980424-0.f", "status": "removed", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F980424-0.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F980424-0.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F980424-0.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,6 +0,0 @@\n-C     crashes in subst_stack_regs_pat on x86-linux, in the \"abort();\"\n-C     within the switch statement.\n-      SUBROUTINE C(A)\n-      COMPLEX A\n-      WRITE(*,*) A.NE.CMPLX(0.0D0)\n-      END"}, {"sha": "d5d7d74c57b054acb8744f61ff73f8d0fffe449b", "filename": "gcc/testsuite/g77.f-torture/compile/980427-0.f", "status": "removed", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F980427-0.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F980427-0.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F980427-0.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,8 +0,0 @@\n-c ../../egcs/gcc/f/com.c:938: failed assertion `TREE_CODE (TREE_TYPE (e)) == REAL_TYPE'\n-c     Fixed by 28-04-1998 global.c (ffeglobal_ref_progunit_) change.\n-      external b\n-      call y(b)\n-      end\n-      subroutine x\n-      a = b()\n-      end"}, {"sha": "4e708a17e60e65a34397c8db8eeb4677941c0883", "filename": "gcc/testsuite/g77.f-torture/compile/980519-2.f", "status": "removed", "additions": 0, "deletions": 47, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F980519-2.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F980519-2.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F980519-2.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,47 +0,0 @@\n-* Date: Fri, 17 Apr 1998 14:12:51 +0200\n-* From: Jean-Paul Jeannot <jeannot@gx-tech.fr>\n-* Organization: GX Technology France\n-* To: egcs-bugs@cygnus.com\n-* Subject: identified bug in g77 on Alpha\n-* \n-* Dear Sir,\n-* \n-* You will find below the assembly code of a simple Fortran routine which\n-* crashes with segmentation fault when storing the first element \n-*       in( jT_f-hd_T     ) = Xsp\n-* whereas everything is fine when commenting this line.\n-* \n-* The assembly code (generated with \n-* -ffast-math -fexpensive-optimizations -fomit-frame-pointer -fno-inline\n-* or with -O5)\n-* uses a zapnot instruction to copy an address.\n-* BUT the zapnot parameter is 15 (copuing 4 bytes) instead of 255 (to copy\n-* 8 bytes). \n-* \n-* I guess this is typically a 64 bit issue. As, from my understanding,\n-* zapnots are used a lot to copy registers, this may create problems\n-* elsewhere.\n-* \n-* Thanks for your help\n-* \n-* Jean-Paul Jeannot\n-* \n-      subroutine simul_trace( in, Xsp, Ysp, Xrcv, Yrcv )\n-\n-      common /Idim/ jT_f, jT_l, nT, nT_dim\n-      common /Idim/ jZ_f, jZ_l, nZ, nZ_dim\n-      common /Idim/ jZ2_f, jZ2_l, nZ2, nZ2_dim\n-      common /Idim/ jzs_f, jzs_l, nzs, nzs_dim, l_amp\n-      common /Idim/ hd_S, hd_Z, hd_T\n-      common /Idim/ nlay, nlayz\n-      common /Idim/ n_work\n-      common /Idim/ nb_calls\n-\t\n-      real     Xsp, Ysp, Xrcv, Yrcv\n-      real     in( jT_f-hd_T : jT_l )\n-\t\n-      in( jT_f-hd_T     ) = Xsp\n-      in( jT_f-hd_T + 1 ) = Ysp \n-      in( jT_f-hd_T + 2 ) = Xrcv\n-      in( jT_f-hd_T + 3 ) = Yrcv\n-      end"}, {"sha": "07789441d41241e5e6928cdb4b66972688796a7a", "filename": "gcc/testsuite/g77.f-torture/compile/980729-0.f", "status": "removed", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F980729-0.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F980729-0.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F980729-0.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,5 +0,0 @@\n-c     Got ICE on Alpha only with -mieee (currently not tested).\n-c     Fixed by rth 1998-07-30 alpha.md change.\n-      subroutine a(b,c)\n-      b = max(b,c)\n-      end"}, {"sha": "019167064fa02525f398a6e355f20ca5c0906891", "filename": "gcc/testsuite/g77.f-torture/compile/981117-1.f", "status": "removed", "additions": 0, "deletions": 23, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F981117-1.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F981117-1.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F981117-1.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,23 +0,0 @@\n-* egcs-bugs:\n-* From: Martin Kahlert <martin.kahlert@mchp.siemens.de>\n-* Subject: ICE in g77 from egcs-19981109\n-* Message-Id: <199811101134.MAA29838@keksy.mchp.siemens.de>\n-\n-* As of 1998-11-17, fails -O2 -fomit-frame-pointer with \n-* egcs/gcc/testsuite/g77.f-torture/compile/981117-1.f:8: internal error--insn does not satisfy its constraints:\n-* (insn 31 83 32 (set (reg:SF 8 %st(0))\n-*         (mult:SF (reg:SF 8 %st(0))\n-*             (const_double:SF (mem/u:SF (symbol_ref/u:SI (\"*.LC1\")) 0) 0 0 1073643520))) 350 {strlensi-3} (nil)\n-*     (nil))\n-* ../../egcs/gcc/toplev.c:1390: Internal compiler error in function fatal_insn\n-\n-* Fixed sometime before 1998-11-21 -- don't know by which change.\n-\n-      SUBROUTINE SSPTRD\n-      PARAMETER (HALF = 0.5 )\n-      DO I = 1, N\n-         CALL SSPMV(TAUI)\n-         ALPHA = -HALF*TAUI\n-         CALL SAXPY(ALPHA)\n-      ENDDO\n-      END"}, {"sha": "187e1b463b5da6845cba41d78762e4dceb5fae6a", "filename": "gcc/testsuite/g77.f-torture/compile/990115-1.f", "status": "removed", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F990115-1.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F990115-1.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F990115-1.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,8 +0,0 @@\n-C Derived from lapack\n-      SUBROUTINE ZGELSX( M, N, NRHS, A, LDA, B, LDB, JPVT, RCOND, RANK,\n-     $                   WORK, RWORK, INFO )\n-      COMPLEX*16         WORK( * )\n-            DO 20 I = 1, RANK\n-               WORK( ISMAX+I-1 ) = S2*WORK( ISMAX+I-1 )\n-   20       CONTINUE\n-      END"}, {"sha": "7cda74ebd45f0f1bbdff9a3157d231f4497a1f21", "filename": "gcc/testsuite/g77.f-torture/compile/alpha1.f", "status": "removed", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2Falpha1.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2Falpha1.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2Falpha1.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,10 +0,0 @@\n-      REAL*8 A,B,C\n-      REAL*4 RARRAY(19)/19*(-1)/\n-      INTEGER BOTTOM,RIGHT\n-      INTEGER IARRAY(19)/0,0,0,0,0,0,0,0,0,0,0,0,13,14,0,0,0,0,0/\n-      EQUIVALENCE (RARRAY(13),BOTTOM),(RARRAY(14),RIGHT)\n-C\n-      IF(I.NE.0) call exit(1)\n-C gcc: Internal compiler error: program f771 got fatal signal 11\n-C  at this point!\n-      END"}, {"sha": "8f6fe7faf80de5dba84589f4787fee07e843520f", "filename": "gcc/testsuite/g77.f-torture/compile/alpha1.x", "status": "removed", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2Falpha1.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2Falpha1.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2Falpha1.x?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,11 +0,0 @@\n-# This test fails compilation in cross-endian environments, for example as\n-# below, with a \"sorry\" message.\n-\n-if { [ishost \"i\\[34567\\]86-*-*\"] } {\n-    if { [istarget \"mmix-knuth-mmixware\"]\n-\t || [istarget \"powerpc-*-*\"] } {\n-\tset torture_compile_xfail [istarget]\n-    }\n-}\n-\n-return 0"}, {"sha": "b76741a8d48d95df40c738df0a877f781cc70151", "filename": "gcc/testsuite/g77.f-torture/compile/compile.exp", "status": "removed", "additions": 0, "deletions": 44, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2Fcompile.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2Fcompile.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2Fcompile.exp?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,44 +0,0 @@\n-# Expect driver script for GCC Regression Tests\n-# Copyright (C) 1993, 1995, 1997 Free Software Foundation\n-#\n-# This file is free software; you can redistribute it and/or modify\n-# it under the terms of the GNU General Public License as published by\n-# the Free Software Foundation; either version 2 of the License, or\n-# (at your option) any later version.\n-#\n-# This program is distributed in the hope that it will be useful,\n-# but WITHOUT ANY WARRANTY; without even the implied warranty of\n-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-# GNU General Public License for more details.\n-#\n-# You should have received a copy of the GNU General Public License\n-# along with this program; if not, write to the Free Software\n-# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA. \n-\n-# These tests come from Torbjorn Granlund's (tege@cygnus.com)\n-# F torture test suite, and other contributors.\n-\n-if $tracelevel then {\n-    strace $tracelevel\n-}\n-\n-# load support procs\n-load_lib f-torture.exp\n-\n-foreach testcase [glob -nocomplain $srcdir/$subdir/*.f] {\n-    # If we're only testing specific files and this isn't one of them, skip it.\n-    if ![runtest_file_p $runtests $testcase] then {\n-\tcontinue\n-    }\n-\n-    f-torture $testcase\n-}\n-\n-foreach testcase [glob -nocomplain $srcdir/$subdir/*.F] {\n-    # If we're only testing specific files and this isn't one of them, skip it.\n-    if ![runtest_file_p $runtests $testcase] then {\n-\tcontinue\n-    }\n-\n-    f-torture $testcase\n-}"}, {"sha": "bdf10d7fbde3928491ff385d2da965e3e4f291b4", "filename": "gcc/testsuite/g77.f-torture/compile/cpp.F", "status": "removed", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2Fcpp.F", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2Fcpp.F", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2Fcpp.F?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,9 +0,0 @@\n-C When run through the C preprocessor, the indentation of the\n-C CONTINUE line must not be mangled.\n-      subroutine aap(a, n)\n-      dimension a(n)\n-      do 10 i = 1, n\n-         a(i) = i\n- 10   continue\n-      print *, a(1)\n-      end"}, {"sha": "968d9f666ef2d42a85c21c47e0790893b3a9ddb8", "filename": "gcc/testsuite/g77.f-torture/compile/cpp2.F", "status": "removed", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2Fcpp2.F", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2Fcpp2.F", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2Fcpp2.F?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,7 +0,0 @@\n-C The preprocessor must not introduce a newline after\n-C the \"a\" when ARGUMENTS is expanded.\n-\n-#define ARGUMENTS a\\\n-\n-      subroutine yada (ARGUMENTS)\n-      end"}, {"sha": "6b6847c4de5616f2edc96cc8c2a3fac6d51803d2", "filename": "gcc/testsuite/g77.f-torture/compile/toon_1.f", "status": "removed", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2Ftoon_1.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2Ftoon_1.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2Ftoon_1.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,3 +0,0 @@\n-      SUBROUTINE AAP(NOOT)\n-      DIMENSION NOOT(*)\n-      END"}, {"sha": "7e9001c4bc179213b7e80cab3babdbe2de4e9abf", "filename": "gcc/testsuite/g77.f-torture/compile/xformat.f", "status": "removed", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2Fxformat.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2Fxformat.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2Fxformat.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,3 +0,0 @@\n-       PRINT 10, 2, 3\n-10     FORMAT (I1, X, I1)\n-       END"}, {"sha": "0fa81f678099560e6a98be5942eb6e48353a65e9", "filename": "gcc/testsuite/g77.f-torture/execute/10197.f", "status": "removed", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F10197.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F10197.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F10197.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,15 +0,0 @@\n-      IMPLICIT NONE\n-      LOGICAL ERROR\n-      CHARACTER*12 FORM\n-      DATA ERROR /.FALSE./\n-      DATA FORM  /' '/\n-      OPEN(UNIT=60,ACCESS='DIRECT',STATUS='SCRATCH',RECL=255)\n-      INQUIRE(UNIT=60,FORM=FORM)\n-      IF (FORM.EQ.'UNFORMATTED') THEN\n-         ERROR = .FALSE.\n-      ELSE\n-         ERROR = .TRUE.\n-      ENDIF\n-      CLOSE(UNIT=60)\n-      IF (ERROR) CALL ABORT\n-      END"}, {"sha": "6a69a3aadabe8c961e589e941a0119293b909f14", "filename": "gcc/testsuite/g77.f-torture/execute/10197.x", "status": "removed", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F10197.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F10197.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F10197.x?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,13 +0,0 @@\n-# Scratch files aren't implemented for mmixware\n-# (_stat is a stub and files can't be deleted).\n-# Similar restrictions exist for most simulators.\n-\n-if { [istarget \"mmix-knuth-mmixware\"]\n-     || [istarget \"arm*-*-elf\"]\n-     || [istarget \"strongarm*-*-elf\"]\n-     || [istarget \"xscale*-*-elf\"]\n-     || [istarget \"cris-*-elf\"] } {\n-\tset torture_execute_xfail [istarget]\n-}\n-\n-return 0"}, {"sha": "daafc52875428089c94f1eb1065edec2ed9b5c99", "filename": "gcc/testsuite/g77.f-torture/execute/13037.f", "status": "removed", "additions": 0, "deletions": 58, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F13037.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F13037.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F13037.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,58 +0,0 @@\n-c      PR optimization/13037\n-c      Contributed by Kirill Smelkov\n-c      bug symptom: zeta(kkzc) seems to reference to zeta(kkzc-1) instead\n-c      with gcc-3.2.2 it is OK, so it is a regression.\n-c\n-      subroutine bug1(expnt)\n-      implicit none\n-\n-      double precision zeta\n-      common /bug1_area/zeta(3)\n-\n-      double precision expnt(3)\n-\n-\n-      integer k, kkzc\n-\n-      kkzc=0\n-      do k=1,3\n-         kkzc = kkzc + 1\n-         zeta(kkzc) = expnt(k)\n-      enddo\n-\n-c     the following line activates the bug\n-      call bug1_activator(kkzc)\n-      end\n-\n-\n-c     dummy subroutine\n-      subroutine bug1_activator(inum)\n-      implicit none\n-      integer inum\n-      end\n-\n-\n-c     test driver\n-      program test_bug1\n-      implicit none\n-\n-      double precision zeta\n-      common /bug1_area/zeta(3)\n-\n-      double precision expnt(3)\n-\n-      zeta(1) = 0.0d0\n-      zeta(2) = 0.0d0\n-      zeta(3) = 0.0d0\n-\n-      expnt(1) = 1.0d0\n-      expnt(2) = 2.0d0\n-      expnt(3) = 3.0d0\n-\n-      call bug1(expnt)\n-      if ((zeta(1).ne.1) .or. (zeta(2).ne.2) .or. (zeta(3).ne.3)) then\n-        call abort\n-      endif\n-\n-      end\n-"}, {"sha": "9ae1ca9fb27440d83e87bd8e09f8f480badf9ea7", "filename": "gcc/testsuite/g77.f-torture/execute/1832.f", "status": "removed", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F1832.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F1832.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F1832.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,8 +0,0 @@\n-      character*120 file\n-      character*5   string\n-      file = \"c:/dos/adir/bdir/cdir/text.doc\"\n-      write(string, *) \"a \", file\n-      if (string .ne. ' a') call abort\n-C-- The leading space is normal for list-directed output\n-C-- \"file\" is not printed because it would overflow \"string\".\n-      end"}, {"sha": "5cfab57a5fc61b87c51ee093404e3c9c78a7c7f3", "filename": "gcc/testsuite/g77.f-torture/execute/19981119-0.f", "status": "removed", "additions": 0, "deletions": 40, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F19981119-0.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F19981119-0.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F19981119-0.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,40 +0,0 @@\n-* X-Delivered: at request of burley on mescaline.gnu.org\n-* Date: Sat, 31 Oct 1998 18:26:29 +0200 (EET)\n-* From: \"B. Yanchitsky\" <yan@im.imag.kiev.ua>\n-* To: fortran@gnu.org\n-* Subject: Bug report\n-* MIME-Version: 1.0\n-* Content-Type: TEXT/PLAIN; charset=US-ASCII\n-* \n-* There is a trouble with g77 on Alpha.\n-* My configuration: \n-* Digital Personal Workstation 433au,\n-* Digital Unix 4.0D,\n-* GNU Fortran 0.5.23 and GNU C 2.8.1.\n-* \n-* The following program treated successfully but crashed when running. \n-* \n-* C --- PROGRAM BEGIN -------\n-* \n-      subroutine sub(N,u)\n-      integer N\n-      double precision u(-N:N,-N:N)\n-\n-C vvvv    CRASH HERE   vvvvv   \n-      u(-N,N)=0d0\n-      return\n-      end\n-\n-\n-      program bug\n-      integer N\n-      double precision a(-10:10,-10:10)\n-      data a/441*1d0/\n-      N=10\n-      call sub(N,a)\n-      if (a(-N,N) .ne. 0d0) call abort\n-      end\n-* \n-* C --- PROGRAM END -------\n-* \n-* Good luck!"}, {"sha": "abf898fb79305fbe034efce7ee26ef8eb669e76e", "filename": "gcc/testsuite/g77.f-torture/execute/19990313-0.f", "status": "removed", "additions": 0, "deletions": 33, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F19990313-0.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F19990313-0.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F19990313-0.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,33 +0,0 @@\n-* To: craig@jcb-sc.com\n-* Subject: Re: G77 and KIND=2\n-* Content-Type: text/plain; charset=us-ascii\n-* From: Dave Love <d.love@dl.ac.uk>\n-* Date: 03 Mar 1999 18:20:11 +0000\n-* In-Reply-To: craig@jcb-sc.com's message of \"1 Mar 1999 21:04:38 -0000\"\n-* User-Agent: Gnus/5.07007 (Pterodactyl Gnus v0.70) Emacs/20.3\n-* X-UIDL: d442bafe961c2a6ec6904f492e05d7b0\n-* \n-* ISTM that there is a real problem printing integer*8 (on x86):\n-* \n-* $ cat x.f\n-*[modified for test suite]\n-        integer *8 foo, bar\n-        data r/4e10/\n-        foo = 4e10\n-        bar = r\n-        if (foo .ne. bar) call abort\n-        end\n-* $ g77 x.f && ./a.out\n-*  1345294336\n-*  123\n-* $ f2c x.f && g77 x.c && ./a.out\n-* x.f:\n-*    MAIN:\n-*  40000000000\n-*  123\n-* $\n-* \n-* Gdb shows the upper half of the buffer passed to do_lio is zeroed in\n-* the g77 case.\n-* \n-* I've forgotten how the code generation happens."}, {"sha": "d99c72f2fdeec07e1166e01f8d791e40ed303f73", "filename": "gcc/testsuite/g77.f-torture/execute/19990313-1.f", "status": "removed", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F19990313-1.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F19990313-1.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F19990313-1.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,7 +0,0 @@\n-        integer *8 foo, bar\n-\tdouble precision r\n-        data r/4d10/\n-        foo = 4d10\n-        bar = r\n-        if (foo .ne. bar) call abort\n-        end"}, {"sha": "ffb7549d413ac0654c5559ee93558c55f2bf5c20", "filename": "gcc/testsuite/g77.f-torture/execute/19990313-2.f", "status": "removed", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F19990313-2.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F19990313-2.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F19990313-2.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,7 +0,0 @@\n-        integer *8 foo, bar\n-\tcomplex c\n-        data c/(4e10,0)/\n-        foo = 4e10\n-        bar = c\n-        if (foo .ne. bar) call abort\n-        end"}, {"sha": "6366dccd890085aaf019391bccfd888d7e2da76e", "filename": "gcc/testsuite/g77.f-torture/execute/19990313-3.f", "status": "removed", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F19990313-3.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F19990313-3.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F19990313-3.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,7 +0,0 @@\n-        integer *8 foo, bar\n-\tdouble complex c\n-        data c/(4d10,0)/\n-        foo = 4d10\n-        bar = c\n-        if (foo .ne. bar) call abort\n-        end"}, {"sha": "a230362fdde74d892b0aaed9c2c66859c1e39bb0", "filename": "gcc/testsuite/g77.f-torture/execute/19990325-0.f", "status": "removed", "additions": 0, "deletions": 313, "changes": 313, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F19990325-0.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F19990325-0.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F19990325-0.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,313 +0,0 @@\n-* test whether complex operators properly handle\n-* full and partial aliasing.\n-* (libf2c/libF77 routines used to assume no aliasing,\n-* then were changed to accommodate full aliasing, while\n-* the libg2c/libF77 versions were changed to accommodate\n-* both full and partial aliasing.)\n-*\n-* NOTE: this (19990325-0.f) is the single-precision version.\n-* See 19990325-1.f for the double-precision version.\n-\n-      program complexalias\n-      implicit none\n-\n-* Make sure non-aliased cases work.  (Catch roundoff/precision\n-* problems, etc., here.  Modify subroutine check if they occur.)\n-\n-      call tryfull (1, 3, 5)\n-\n-* Now check various combinations of aliasing.\n-\n-* Full aliasing.\n-      call tryfull (1, 1, 5)\n-\n-* Partial aliasing.\n-      call trypart (2, 3, 5)\n-      call trypart (2, 1, 5)\n-      call trypart (2, 5, 3)\n-      call trypart (2, 5, 1)\n-\n-      end\n-\n-      subroutine tryfull (xout, xin1, xin2)\n-      implicit none\n-      integer xout, xin1, xin2\n-\n-* out, in1, and in2 are the desired indexes into the REAL array (array).\n-\n-      complex expect\n-      integer pwr\n-      integer out, in1, in2\n-\n-      real array(6)\n-      complex carray(3)\n-      equivalence (carray(1), array(1))\n-\n-* Make sure the indexes can be accommodated by the equivalences above.\n-\n-      if (mod (xout, 2) .ne. 1) call abort\n-      if (mod (xin1, 2) .ne. 1) call abort\n-      if (mod (xin2, 2) .ne. 1) call abort\n-\n-* Convert the indexes into ones suitable for the COMPLEX array (carray).\n-\n-      out = (xout + 1) / 2\n-      in1 = (xin1 + 1) / 2\n-      in2 = (xin2 + 1) / 2\n-\n-* Check some open-coded stuff, just in case.\n-\n-      call prepare1 (carray(in1))\n-      expect = + carray(in1)\n-      carray(out) = + carray(in1)\n-      call check (expect, carray(out))\n-\n-      call prepare1 (carray(in1))\n-      expect = - carray(in1)\n-      carray(out) = - carray(in1)\n-      call check (expect, carray(out))\n-\n-      call prepare2 (carray(in1), carray(in2))\n-      expect = carray(in1) + carray(in2)\n-      carray(out) = carray(in1) + carray(in2)\n-      call check (expect, carray(out))\n-\n-      call prepare2 (carray(in1), carray(in2))\n-      expect = carray(in1) - carray(in2)\n-      carray(out) = carray(in1) - carray(in2)\n-      call check (expect, carray(out))\n-\n-      call prepare2 (carray(in1), carray(in2))\n-      expect = carray(in1) * carray(in2)\n-      carray(out) = carray(in1) * carray(in2)\n-      call check (expect, carray(out))\n-\n-      call prepare1 (carray(in1))\n-      expect = carray(in1) ** 2\n-      carray(out) = carray(in1) ** 2\n-      call check (expect, carray(out))\n-\n-      call prepare1 (carray(in1))\n-      expect = carray(in1) ** 3\n-      carray(out) = carray(in1) ** 3\n-      call check (expect, carray(out))\n-\n-      call prepare1 (carray(in1))\n-      expect = abs (carray(in1))\n-      array(out*2-1) = abs (carray(in1))\n-      array(out*2) = 0\n-      call check (expect, carray(out))\n-\n-* Now check the stuff implemented in libF77.\n-\n-      call prepare1 (carray(in1))\n-      expect = cos (carray(in1))\n-      carray(out) = cos (carray(in1))\n-      call check (expect, carray(out))\n-\n-      call prepare1 (carray(in1))\n-      expect = exp (carray(in1))\n-      carray(out) = exp (carray(in1))\n-      call check (expect, carray(out))\n-\n-      call prepare1 (carray(in1))\n-      expect = log (carray(in1))\n-      carray(out) = log (carray(in1))\n-      call check (expect, carray(out))\n-\n-      call prepare1 (carray(in1))\n-      expect = sin (carray(in1))\n-      carray(out) = sin (carray(in1))\n-      call check (expect, carray(out))\n-\n-      call prepare1 (carray(in1))\n-      expect = sqrt (carray(in1))\n-      carray(out) = sqrt (carray(in1))\n-      call check (expect, carray(out))\n-\n-      call prepare1 (carray(in1))\n-      expect = conjg (carray(in1))\n-      carray(out) = conjg (carray(in1))\n-      call check (expect, carray(out))\n-\n-      call prepare1i (carray(in1), pwr)\n-      expect = carray(in1) ** pwr\n-      carray(out) = carray(in1) ** pwr\n-      call check (expect, carray(out))\n-\n-      call prepare2 (carray(in1), carray(in2))\n-      expect = carray(in1) / carray(in2)\n-      carray(out) = carray(in1) / carray(in2)\n-      call check (expect, carray(out))\n-\n-      call prepare2 (carray(in1), carray(in2))\n-      expect = carray(in1) ** carray(in2)\n-      carray(out) = carray(in1) ** carray(in2)\n-      call check (expect, carray(out))\n-\n-      call prepare1 (carray(in1))\n-      expect = carray(in1) ** .2\n-      carray(out) = carray(in1) ** .2\n-      call check (expect, carray(out))\n-\n-      end\n-\n-      subroutine trypart (xout, xin1, xin2)\n-      implicit none\n-      integer xout, xin1, xin2\n-\n-* out, in1, and in2 are the desired indexes into the REAL array (array).\n-\n-      complex expect\n-      integer pwr\n-      integer out, in1, in2\n-\n-      real array(6)\n-      complex carray(3), carrayp(2)\n-      equivalence (carray(1), array(1))\n-      equivalence (carrayp(1), array(2))\n-\n-* Make sure the indexes can be accommodated by the equivalences above.\n-\n-      if (mod (xout, 2) .ne. 0) call abort\n-      if (mod (xin1, 2) .ne. 1) call abort\n-      if (mod (xin2, 2) .ne. 1) call abort\n-\n-* Convert the indexes into ones suitable for the COMPLEX array (carray).\n-\n-      out = xout / 2\n-      in1 = (xin1 + 1) / 2\n-      in2 = (xin2 + 1) / 2\n-\n-* Check some open-coded stuff, just in case.\n-\n-      call prepare1 (carray(in1))\n-      expect = + carray(in1)\n-      carrayp(out) = + carray(in1)\n-      call check (expect, carrayp(out))\n-\n-      call prepare1 (carray(in1))\n-      expect = - carray(in1)\n-      carrayp(out) = - carray(in1)\n-      call check (expect, carrayp(out))\n-\n-      call prepare2 (carray(in1), carray(in2))\n-      expect = carray(in1) + carray(in2)\n-      carrayp(out) = carray(in1) + carray(in2)\n-      call check (expect, carrayp(out))\n-\n-      call prepare2 (carray(in1), carray(in2))\n-      expect = carray(in1) - carray(in2)\n-      carrayp(out) = carray(in1) - carray(in2)\n-      call check (expect, carrayp(out))\n-\n-      call prepare2 (carray(in1), carray(in2))\n-      expect = carray(in1) * carray(in2)\n-      carrayp(out) = carray(in1) * carray(in2)\n-      call check (expect, carrayp(out))\n-\n-      call prepare1 (carray(in1))\n-      expect = carray(in1) ** 2\n-      carrayp(out) = carray(in1) ** 2\n-      call check (expect, carrayp(out))\n-\n-      call prepare1 (carray(in1))\n-      expect = carray(in1) ** 3\n-      carrayp(out) = carray(in1) ** 3\n-      call check (expect, carrayp(out))\n-\n-      call prepare1 (carray(in1))\n-      expect = abs (carray(in1))\n-      array(out*2) = abs (carray(in1))\n-      array(out*2+1) = 0\n-      call check (expect, carrayp(out))\n-\n-* Now check the stuff implemented in libF77.\n-\n-      call prepare1 (carray(in1))\n-      expect = cos (carray(in1))\n-      carrayp(out) = cos (carray(in1))\n-      call check (expect, carrayp(out))\n-\n-      call prepare1 (carray(in1))\n-      expect = exp (carray(in1))\n-      carrayp(out) = exp (carray(in1))\n-      call check (expect, carrayp(out))\n-\n-      call prepare1 (carray(in1))\n-      expect = log (carray(in1))\n-      carrayp(out) = log (carray(in1))\n-      call check (expect, carrayp(out))\n-\n-      call prepare1 (carray(in1))\n-      expect = sin (carray(in1))\n-      carrayp(out) = sin (carray(in1))\n-      call check (expect, carrayp(out))\n-\n-      call prepare1 (carray(in1))\n-      expect = sqrt (carray(in1))\n-      carrayp(out) = sqrt (carray(in1))\n-      call check (expect, carrayp(out))\n-\n-      call prepare1 (carray(in1))\n-      expect = conjg (carray(in1))\n-      carrayp(out) = conjg (carray(in1))\n-      call check (expect, carrayp(out))\n-\n-      call prepare1i (carray(in1), pwr)\n-      expect = carray(in1) ** pwr\n-      carrayp(out) = carray(in1) ** pwr\n-      call check (expect, carrayp(out))\n-\n-      call prepare2 (carray(in1), carray(in2))\n-      expect = carray(in1) / carray(in2)\n-      carrayp(out) = carray(in1) / carray(in2)\n-      call check (expect, carrayp(out))\n-\n-      call prepare2 (carray(in1), carray(in2))\n-      expect = carray(in1) ** carray(in2)\n-      carrayp(out) = carray(in1) ** carray(in2)\n-      call check (expect, carrayp(out))\n-\n-      call prepare1 (carray(in1))\n-      expect = carray(in1) ** .2\n-      carrayp(out) = carray(in1) ** .2\n-      call check (expect, carrayp(out))\n-\n-      end\n-\n-      subroutine prepare1 (in)\n-      implicit none\n-      complex in\n-\n-      in = (3.2, 4.2)\n-\n-      end\n-\n-      subroutine prepare1i (in, i)\n-      implicit none\n-      complex in\n-      integer i\n-\n-      in = (2.3, 2.5)\n-      i = 4\n-\n-      end\n-\n-      subroutine prepare2 (in1, in2)\n-      implicit none\n-      complex in1, in2\n-\n-      in1 = (1.3, 2.4)\n-      in2 = (3.5, 7.1)\n-\n-      end\n-\n-      subroutine check (expect, got)\n-      implicit none\n-      complex expect, got\n-\n-      if (aimag(expect) .ne. aimag(got)) call abort\n-      if (real(expect) .ne. real(got)) call abort\n-\n-      end"}, {"sha": "802f375b33d49bafd926d4bc21d3e63c329358b4", "filename": "gcc/testsuite/g77.f-torture/execute/19990325-1.f", "status": "removed", "additions": 0, "deletions": 313, "changes": 313, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F19990325-1.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F19990325-1.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F19990325-1.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,313 +0,0 @@\n-* test whether complex operators properly handle\n-* full and partial aliasing.\n-* (libf2c/libF77 routines used to assume no aliasing,\n-* then were changed to accommodate full aliasing, while\n-* the libg2c/libF77 versions were changed to accommodate\n-* both full and partial aliasing.)\n-*\n-* NOTE: this (19990325-1.f) is the double-precision version.\n-* See 19990325-0.f for the single-precision version.\n-\n-      program doublecomplexalias\n-      implicit none\n-\n-* Make sure non-aliased cases work.  (Catch roundoff/precision\n-* problems, etc., here.  Modify subroutine check if they occur.)\n-\n-      call tryfull (1, 3, 5)\n-\n-* Now check various combinations of aliasing.\n-\n-* Full aliasing.\n-      call tryfull (1, 1, 5)\n-\n-* Partial aliasing.\n-      call trypart (2, 3, 5)\n-      call trypart (2, 1, 5)\n-      call trypart (2, 5, 3)\n-      call trypart (2, 5, 1)\n-\n-      end\n-\n-      subroutine tryfull (xout, xin1, xin2)\n-      implicit none\n-      integer xout, xin1, xin2\n-\n-* out, in1, and in2 are the desired indexes into the REAL array (array).\n-\n-      double complex expect\n-      integer pwr\n-      integer out, in1, in2\n-\n-      double precision array(6)\n-      double complex carray(3)\n-      equivalence (carray(1), array(1))\n-\n-* Make sure the indexes can be accommodated by the equivalences above.\n-\n-      if (mod (xout, 2) .ne. 1) call abort\n-      if (mod (xin1, 2) .ne. 1) call abort\n-      if (mod (xin2, 2) .ne. 1) call abort\n-\n-* Convert the indexes into ones suitable for the COMPLEX array (carray).\n-\n-      out = (xout + 1) / 2\n-      in1 = (xin1 + 1) / 2\n-      in2 = (xin2 + 1) / 2\n-\n-* Check some open-coded stuff, just in case.\n-\n-      call prepare1 (carray(in1))\n-      expect = + carray(in1)\n-      carray(out) = + carray(in1)\n-      call check (expect, carray(out))\n-\n-      call prepare1 (carray(in1))\n-      expect = - carray(in1)\n-      carray(out) = - carray(in1)\n-      call check (expect, carray(out))\n-\n-      call prepare2 (carray(in1), carray(in2))\n-      expect = carray(in1) + carray(in2)\n-      carray(out) = carray(in1) + carray(in2)\n-      call check (expect, carray(out))\n-\n-      call prepare2 (carray(in1), carray(in2))\n-      expect = carray(in1) - carray(in2)\n-      carray(out) = carray(in1) - carray(in2)\n-      call check (expect, carray(out))\n-\n-      call prepare2 (carray(in1), carray(in2))\n-      expect = carray(in1) * carray(in2)\n-      carray(out) = carray(in1) * carray(in2)\n-      call check (expect, carray(out))\n-\n-      call prepare1 (carray(in1))\n-      expect = carray(in1) ** 2\n-      carray(out) = carray(in1) ** 2\n-      call check (expect, carray(out))\n-\n-      call prepare1 (carray(in1))\n-      expect = carray(in1) ** 3\n-      carray(out) = carray(in1) ** 3\n-      call check (expect, carray(out))\n-\n-      call prepare1 (carray(in1))\n-      expect = abs (carray(in1))\n-      array(out*2-1) = abs (carray(in1))\n-      array(out*2) = 0\n-      call check (expect, carray(out))\n-\n-* Now check the stuff implemented in libF77.\n-\n-      call prepare1 (carray(in1))\n-      expect = cos (carray(in1))\n-      carray(out) = cos (carray(in1))\n-      call check (expect, carray(out))\n-\n-      call prepare1 (carray(in1))\n-      expect = exp (carray(in1))\n-      carray(out) = exp (carray(in1))\n-      call check (expect, carray(out))\n-\n-      call prepare1 (carray(in1))\n-      expect = log (carray(in1))\n-      carray(out) = log (carray(in1))\n-      call check (expect, carray(out))\n-\n-      call prepare1 (carray(in1))\n-      expect = sin (carray(in1))\n-      carray(out) = sin (carray(in1))\n-      call check (expect, carray(out))\n-\n-      call prepare1 (carray(in1))\n-      expect = sqrt (carray(in1))\n-      carray(out) = sqrt (carray(in1))\n-      call check (expect, carray(out))\n-\n-      call prepare1 (carray(in1))\n-      expect = conjg (carray(in1))\n-      carray(out) = conjg (carray(in1))\n-      call check (expect, carray(out))\n-\n-      call prepare1i (carray(in1), pwr)\n-      expect = carray(in1) ** pwr\n-      carray(out) = carray(in1) ** pwr\n-      call check (expect, carray(out))\n-\n-      call prepare2 (carray(in1), carray(in2))\n-      expect = carray(in1) / carray(in2)\n-      carray(out) = carray(in1) / carray(in2)\n-      call check (expect, carray(out))\n-\n-      call prepare2 (carray(in1), carray(in2))\n-      expect = carray(in1) ** carray(in2)\n-      carray(out) = carray(in1) ** carray(in2)\n-      call check (expect, carray(out))\n-\n-      call prepare1 (carray(in1))\n-      expect = carray(in1) ** .2\n-      carray(out) = carray(in1) ** .2\n-      call check (expect, carray(out))\n-\n-      end\n-\n-      subroutine trypart (xout, xin1, xin2)\n-      implicit none\n-      integer xout, xin1, xin2\n-\n-* out, in1, and in2 are the desired indexes into the REAL array (array).\n-\n-      double complex expect\n-      integer pwr\n-      integer out, in1, in2\n-\n-      double precision array(6)\n-      double complex carray(3), carrayp(2)\n-      equivalence (carray(1), array(1))\n-      equivalence (carrayp(1), array(2))\n-\n-* Make sure the indexes can be accommodated by the equivalences above.\n-\n-      if (mod (xout, 2) .ne. 0) call abort\n-      if (mod (xin1, 2) .ne. 1) call abort\n-      if (mod (xin2, 2) .ne. 1) call abort\n-\n-* Convert the indexes into ones suitable for the COMPLEX array (carray).\n-\n-      out = xout / 2\n-      in1 = (xin1 + 1) / 2\n-      in2 = (xin2 + 1) / 2\n-\n-* Check some open-coded stuff, just in case.\n-\n-      call prepare1 (carray(in1))\n-      expect = + carray(in1)\n-      carrayp(out) = + carray(in1)\n-      call check (expect, carrayp(out))\n-\n-      call prepare1 (carray(in1))\n-      expect = - carray(in1)\n-      carrayp(out) = - carray(in1)\n-      call check (expect, carrayp(out))\n-\n-      call prepare2 (carray(in1), carray(in2))\n-      expect = carray(in1) + carray(in2)\n-      carrayp(out) = carray(in1) + carray(in2)\n-      call check (expect, carrayp(out))\n-\n-      call prepare2 (carray(in1), carray(in2))\n-      expect = carray(in1) - carray(in2)\n-      carrayp(out) = carray(in1) - carray(in2)\n-      call check (expect, carrayp(out))\n-\n-      call prepare2 (carray(in1), carray(in2))\n-      expect = carray(in1) * carray(in2)\n-      carrayp(out) = carray(in1) * carray(in2)\n-      call check (expect, carrayp(out))\n-\n-      call prepare1 (carray(in1))\n-      expect = carray(in1) ** 2\n-      carrayp(out) = carray(in1) ** 2\n-      call check (expect, carrayp(out))\n-\n-      call prepare1 (carray(in1))\n-      expect = carray(in1) ** 3\n-      carrayp(out) = carray(in1) ** 3\n-      call check (expect, carrayp(out))\n-\n-      call prepare1 (carray(in1))\n-      expect = abs (carray(in1))\n-      array(out*2) = abs (carray(in1))\n-      array(out*2+1) = 0\n-      call check (expect, carrayp(out))\n-\n-* Now check the stuff implemented in libF77.\n-\n-      call prepare1 (carray(in1))\n-      expect = cos (carray(in1))\n-      carrayp(out) = cos (carray(in1))\n-      call check (expect, carrayp(out))\n-\n-      call prepare1 (carray(in1))\n-      expect = exp (carray(in1))\n-      carrayp(out) = exp (carray(in1))\n-      call check (expect, carrayp(out))\n-\n-      call prepare1 (carray(in1))\n-      expect = log (carray(in1))\n-      carrayp(out) = log (carray(in1))\n-      call check (expect, carrayp(out))\n-\n-      call prepare1 (carray(in1))\n-      expect = sin (carray(in1))\n-      carrayp(out) = sin (carray(in1))\n-      call check (expect, carrayp(out))\n-\n-      call prepare1 (carray(in1))\n-      expect = sqrt (carray(in1))\n-      carrayp(out) = sqrt (carray(in1))\n-      call check (expect, carrayp(out))\n-\n-      call prepare1 (carray(in1))\n-      expect = conjg (carray(in1))\n-      carrayp(out) = conjg (carray(in1))\n-      call check (expect, carrayp(out))\n-\n-      call prepare1i (carray(in1), pwr)\n-      expect = carray(in1) ** pwr\n-      carrayp(out) = carray(in1) ** pwr\n-      call check (expect, carrayp(out))\n-\n-      call prepare2 (carray(in1), carray(in2))\n-      expect = carray(in1) / carray(in2)\n-      carrayp(out) = carray(in1) / carray(in2)\n-      call check (expect, carrayp(out))\n-\n-      call prepare2 (carray(in1), carray(in2))\n-      expect = carray(in1) ** carray(in2)\n-      carrayp(out) = carray(in1) ** carray(in2)\n-      call check (expect, carrayp(out))\n-\n-      call prepare1 (carray(in1))\n-      expect = carray(in1) ** .2\n-      carrayp(out) = carray(in1) ** .2\n-      call check (expect, carrayp(out))\n-\n-      end\n-\n-      subroutine prepare1 (in)\n-      implicit none\n-      double complex in\n-\n-      in = (3.2d0, 4.2d0)\n-\n-      end\n-\n-      subroutine prepare1i (in, i)\n-      implicit none\n-      double complex in\n-      integer i\n-\n-      in = (2.3d0, 2.5d0)\n-      i = 4\n-\n-      end\n-\n-      subroutine prepare2 (in1, in2)\n-      implicit none\n-      double complex in1, in2\n-\n-      in1 = (1.3d0, 2.4d0)\n-      in2 = (3.5d0, 7.1d0)\n-\n-      end\n-\n-      subroutine check (expect, got)\n-      implicit none\n-      double complex expect, got\n-\n-      if (dimag(expect) .ne. dimag(got)) call abort\n-      if (dble(expect) .ne. dble(got)) call abort\n-\n-      end"}, {"sha": "7449bac2b9547ac5e4b73c5b6282b628f1ce47f9", "filename": "gcc/testsuite/g77.f-torture/execute/19990419-1.f", "status": "removed", "additions": 0, "deletions": 21, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F19990419-1.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F19990419-1.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F19990419-1.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,21 +0,0 @@\n-* Test DO WHILE, to make sure it fully reevaluates its expression.\n-* Belongs in execute/.\n-      common /x/ ival\n-      j = 0\n-      do while (i() .eq. 1)\n-         j = j + 1\n-         if (j .gt. 5) call abort\n-      end do\n-      if (j .ne. 4) call abort\n-      if (ival .ne. 5) call abort\n-      end\n-      function i()\n-      common /x/ ival\n-      ival = ival + 1\n-      i = 10\n-      if (ival .lt. 5) i = 1\n-      end\n-      block data\n-      common /x/ ival\n-      data ival/0/\n-      end"}, {"sha": "975efdce61efa716bec4cc3832c396e931463563", "filename": "gcc/testsuite/g77.f-torture/execute/19990826-0.f", "status": "removed", "additions": 0, "deletions": 19, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F19990826-0.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F19990826-0.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F19990826-0.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,19 +0,0 @@\n-* From: niles@fan745.gsfc.nasa.gov\n-* To: fortran@gnu.org\n-* Cc: niles@fan745.gsfc.nasa.gov\n-* Subject: problem with DNINT() on Linux/Alpha.\n-* Date: Sun, 06 Jun 1999 16:39:35 -0400\n-* X-UIDL: 6aa9208d7bda8b6182a095dfd37016b7\n-\n-      IF (DNINT(0.0D0) .NE. 0.) CALL ABORT\n-      STOP\n-      END\n-\n-* Result on Linux/i386: \" 0.\"  (and every other computer!)\n-* Result on Linux/alpha: \" 3.6028797E+16\"\n-\n-* It seems to work fine if I change it to the generic NINT().  Probably\n-* a name pollution problem in the new C library, but it seems bad. no?\n-\n-* \tThanks,\n-* \tRick Niles."}, {"sha": "30bdb30fd57f1410584bb96edf0edd407c98f283", "filename": "gcc/testsuite/g77.f-torture/execute/19990826-2.f", "status": "removed", "additions": 0, "deletions": 33, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F19990826-2.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F19990826-2.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F19990826-2.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,33 +0,0 @@\n-* From: \"Billinghurst, David (RTD)\" <David.Billinghurst@riotinto.com.au>\n-* Subject: RE: single precision complex bug in g77 - was Testing g77 with LA\n-* \tPACK 3.0\n-* Date: Thu, 8 Jul 1999 00:55:11 +0100 \n-* X-UIDL: b00d9d8081a36fef561b827d255dd4a5\n-\n-* Here is a slightly simpler and neater test case\n-\n-      program labug3\n-      implicit none\n-\n-*  This program gives the wrong answer on mips-sgi-irix6.5\n-*  when compiled with g77 from egcs-19990629 (gcc 2.95 prerelease)\n-*  Get a = 0.0 when it should be 1.0 \n-*\n-*  Works with:  -femulate-complex\n-*               egcs-1.1.2 \n-*\n-*  Originally derived from LAPACK 3.0 test suite.\n-*\n-*  David Billinghurst, (David.Billinghurst@riotinto.com.au)\n-*  8 July 1999\n-* \n-      complex one, z\n-      real    a, f1\n-      f1(z) = real(z)\n-      one = (1.,0.)\n-      a = f1(one) \n-      if ( abs(a-1.0) .gt. 1.0e-5 ) then\n-         write(6,*) 'A should be 1.0 but it is',a\n-         call abort()\n-      end if\n-      end"}, {"sha": "027c9fc6fbb4866282ff248e4ccd4b28e3d974cc", "filename": "gcc/testsuite/g77.f-torture/execute/20000503-1.f", "status": "removed", "additions": 0, "deletions": 24, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F20000503-1.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F20000503-1.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F20000503-1.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,24 +0,0 @@\n-*\n-*  Originally derived from LAPACK 3.0 test suite failure.\n-*\n-*  David Billinghurst, (David.Billinghurst@riotinto.com.au)\n-*  23 February 2000\n-* \n-      INTEGER N, I, SLASQX\n-      N = 20\n-      I = SLASQX( N ) \n-      IF ( I .NE. 2*N ) THEN\n-         WRITE(6,*) 'I = ', I, ' but should be ', 2*N\n-         CALL ABORT()\n-      END IF\n-      END\n-\n-      INTEGER FUNCTION SLASQX( N )\n-      INTEGER  N, I0, I, K\n-      I0 = 1\n-      DO I = 4*I0, 2*( I0+N-1 ), 4\n-         K = I\n-      END DO\n-      SLASQX = K\n-      RETURN\n-      END"}, {"sha": "db342bbd42b93f452a6d956c1ad5b29a0d99af25", "filename": "gcc/testsuite/g77.f-torture/execute/20001111.f", "status": "removed", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F20001111.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F20001111.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F20001111.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,12 +0,0 @@\n-      DOUBLE PRECISION VALUE(2), TOLD, BK\n-      DATA VALUE /0D0, 1D0/\n-      DATA TOLD /0D0/\n-      DO I=1, 2\n-         BK = VALUE(I)\n-         IF(BK .GT. TOLD) GOTO 10\n-      ENDDO\n-      WRITE(*,*)'Error: BK = ', BK\n-      CALL ABORT\n- 10   CONTINUE\n-      WRITE(*,*)'No Error: BK = ', BK\n-      END"}, {"sha": "e80c2a8bcf85d174f204f1ac41794166336069e2", "filename": "gcc/testsuite/g77.f-torture/execute/20001201.f", "status": "removed", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F20001201.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F20001201.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F20001201.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,12 +0,0 @@\n-      LOGICAL TF(5)\n-      CHARACTER*60 LINE\n-      NAMELIST /LIST/ TF,TT,FF,XYZ\n-      DATA TF /5*.FALSE./\n-      DATA LINE /'&LIST,TF=.T.,.F.,.T.,FF=33.,TT=23.,XYZ=-1234.55,/'/\n-      OPEN(1,STATUS='SCRATCH')\n-      WRITE(1,*) LINE\n-      REWIND(1)\n-      READ(1,LIST)\n-      CLOSE(1)\n-      IF (TF(5)) CALL ABORT\n-      END"}, {"sha": "6a69a3aadabe8c961e589e941a0119293b909f14", "filename": "gcc/testsuite/g77.f-torture/execute/20001201.x", "status": "removed", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F20001201.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F20001201.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F20001201.x?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,13 +0,0 @@\n-# Scratch files aren't implemented for mmixware\n-# (_stat is a stub and files can't be deleted).\n-# Similar restrictions exist for most simulators.\n-\n-if { [istarget \"mmix-knuth-mmixware\"]\n-     || [istarget \"arm*-*-elf\"]\n-     || [istarget \"strongarm*-*-elf\"]\n-     || [istarget \"xscale*-*-elf\"]\n-     || [istarget \"cris-*-elf\"] } {\n-\tset torture_execute_xfail [istarget]\n-}\n-\n-return 0"}, {"sha": "7c72a085a79660b012913da64f1afd75c6925051", "filename": "gcc/testsuite/g77.f-torture/execute/20010116.f", "status": "removed", "additions": 0, "deletions": 38, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F20010116.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F20010116.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F20010116.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,38 +0,0 @@\n-*\n-*  Derived from LAPACK 3.0 routine CHGEQZ\n-*  Fails on i686-pc-cygwin with gcc-2.97 snapshots at -O2 and higher\n-*  PR fortran/1645\n-*\n-*  David Billinghurst, (David.Billinghurst@riotinto.com)\n-*  14 January 2001\n-*  Rewritten by Toon Moene (toon@moene.indiv.nluug.nl)\n-*  15 January 2001\n-* \n-      COMPLEX A(5,5)\n-      DATA A/25*(0.0,0.0)/\n-      A(4,3) = (0.05,0.2)/3.0E-7\n-      A(4,4) = (-0.03,-0.4)\n-      A(5,4) = (-2.0E-07,2.0E-07)\n-      CALL CHGEQZ( 5, A )\n-      END\n-      SUBROUTINE CHGEQZ( N, A )\n-      COMPLEX   A(N,N), X\n-      ABS1( X ) = ABS( REAL( X ) ) + ABS( AIMAG( X ) )\n-      DO J = 4, 2, -1\n-         I = J\n-         TEMP  = ABS1( A(J,J) )\n-         TEMP2 = ABS1( A( J+1, J ) )\n-         TEMPR = MAX( TEMP, TEMP2 )\n-         IF( TEMPR .LT. 1.0 .AND. TEMPR .NE. 0.0 ) THEN\n-            TEMP  = TEMP / TEMPR\n-            TEMP2 = TEMP2 / TEMPR\n-         END IF\n-         IF ( ABS1(A(J,J-1))*TEMP2 .LE. TEMP ) GO TO 90\n-      END DO\n-c     Should not reach here, but need a statement\n-      PRINT*\n-  90  IF ( I .NE. 4 ) THEN\n-         PRINT*,'I =', I, ' but should be 4'\n-         CALL ABORT()\n-      END IF\n-      END"}, {"sha": "dd1b5bdd0e8b080f9961f37cc6f8f572a7d64818", "filename": "gcc/testsuite/g77.f-torture/execute/20010426.f", "status": "removed", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F20010426.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F20010426.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F20010426.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,2 +0,0 @@\n-      print*,cos(1.0)\n-      end"}, {"sha": "58dca83400404cae5de57f92d831c6ce0b56843c", "filename": "gcc/testsuite/g77.f-torture/execute/20010430.f", "status": "removed", "additions": 0, "deletions": 20, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F20010430.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F20010430.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F20010430.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,20 +0,0 @@\n-      REAL DAT(2,5)\n-      DO I = 1, 5\n-         DAT(1,I) = I*1.6356-NINT(I*1.6356)\n-         DAT(2,I) = I\n-      ENDDO\n-      DO I = 1, 4\n-         DO J = I+1, 5\n-            IF (DAT(1,J) - DAT(1,I) .LT. 0.0) THEN\n-               DO K = 1, 2\n-                  TMP = DAT(K,I)\n-                  DAT(K,I) = DAT(K,J)\n-                  DAT(K,J) = TMP\n-               ENDDO\n-            ENDIF\n-         ENDDO\n-      ENDDO\n-      DO I = 1, 4\n-         IF (DAT(1,I) .GT. DAT(1,I+1)) CALL ABORT\n-      ENDDO\n-      END"}, {"sha": "4ce2d22147a9e4cc6c424cd21a82d01f364f2779", "filename": "gcc/testsuite/g77.f-torture/execute/20010610.f", "status": "removed", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F20010610.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F20010610.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F20010610.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,4 +0,0 @@\n-      DO I = 0, 255\n-         IF (ICHAR(CHAR(I)) .NE. I) CALL ABORT\n-      ENDDO\n-      END"}, {"sha": "bdf955acac92ee6aa33e523239b36832483f1e94", "filename": "gcc/testsuite/g77.f-torture/execute/5122.f", "status": "removed", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F5122.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F5122.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F5122.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,8 +0,0 @@\n-      CHARACTER*20 PARTD(6)\n-      INTEGER*2 L\n-      DATA (PARTD(L),L=1,6)/'A','B','C','D','E','F'/\n-      IF (    PARTD(1) .NE. 'A' .OR. PARTD(2) .NE. 'B'\n-     ,   .OR. PARTD(3) .NE. 'C' .OR. PARTD(4) .NE. 'D'\n-     ,   .OR. PARTD(5) .NE. 'E' .OR. PARTD(6) .NE. 'F')\n-     ,      CALL ABORT\n-      END"}, {"sha": "f40029cf52c2495bbe8603b3b6e58fb1e0c9646c", "filename": "gcc/testsuite/g77.f-torture/execute/6177.f", "status": "removed", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F6177.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F6177.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F6177.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,14 +0,0 @@\n-      program pr6177\n-C\n-C Test case for PR optimization/6177.\n-C This bug (an ICE) originally showed up in file cblat2.f from LAPACK.\n-C\n-      complex x\n-      complex w(1)\n-      intrinsic conjg\n-      x = (2.0d0, 1.0d0)\n-      w(1) = x\n-      x = conjg(x)\n-      w(1) = conjg(w(1))\n-      if (abs(x-w(1)) .gt. 1.0e-5) call abort\n-      end"}, {"sha": "158bddf8f473746f3589050495b7f029df15685d", "filename": "gcc/testsuite/g77.f-torture/execute/6367.f", "status": "removed", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F6367.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F6367.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F6367.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,16 +0,0 @@\n-      program testnl\n-      character*80 line\n-      dimension a(10),b(10)\n-      namelist /nl/ a\n-      data a / 10 * 0.0 /\n-      data b / 0.,  1.,  1.,  1.,  2.,  2.,  3.,  3.,  3.,  0. /\n-      data line /'&nl a(2) = 3*1.0, 2*2.0, 3*3.0 /'/\n-      open(1,status='scratch')\n-      write(1,'(a)') line\n-      rewind(1)\n-      read(1,nl)\n-      close(1)\n-      do i = 1, 10\n-         if (a(i) .ne. b(i)) call abort\n-      enddo\n-      end"}, {"sha": "42fc7da02aecaeea0a47c2677a9302ef21f249c5", "filename": "gcc/testsuite/g77.f-torture/execute/6367.x", "status": "removed", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F6367.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F6367.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F6367.x?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,13 +0,0 @@\n-# Scratch files aren't implemented for mmixware\n-# (_stat is a stub and files can't be deleted).\n-# Similar restrictions exist for most simulators.\n-\n-if { [istarget \"mmix-knuth-mmixware\"]\n-     || [istarget \"arm*-*-elf\"]\n-     || [istarget \"strongarm*-*-elf\"]\n-     || [istarget \"xscalearm*-*-elf\"]\n-     || [istarget \"cris-*-elf\"] } {\n-\tset torture_execute_xfail [istarget]\n-}\n-\n-return 0"}, {"sha": "7efa204d5becedf19d77e630cba6611f9b3a2c6c", "filename": "gcc/testsuite/g77.f-torture/execute/947.f", "status": "removed", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F947.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F947.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F947.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,12 +0,0 @@\n-      DIMENSION A(-5:5)\n-      INTEGER*1 IM5, IZ, IP5\n-      INTEGER*2 IM1, IP1\n-      PARAMETER (IM5=-5, IM1=-1, IZ=0, IP1=1, IP5=5)\n-      DATA A(IM5) /-5./, A(IM1) /-1./\n-      DATA A(IZ)  /0./\n-      DATA A(IP5) /+5./, A(IP1) /+1./\n-      IF (A(IM5) .NE. -5. .OR. A(IM1) .NE. -1. .OR.\n-     ,    A(IZ)  .NE.  0. .OR.\n-     ,    A(IP5) .NE. +5. .OR. A(IP1) .NE. +1. )\n-     ,  CALL ABORT\n-      END"}, {"sha": "3ef6f46cb7947571ae73475bfcaa58ce5e6e1c10", "filename": "gcc/testsuite/g77.f-torture/execute/970625-2.f", "status": "removed", "additions": 0, "deletions": 84, "changes": 84, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F970625-2.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F970625-2.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F970625-2.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,84 +0,0 @@\n-* Date: Wed, 25 Jun 1997 12:48:26 +0200 (MET DST)\n-* MIME-Version: 1.0\n-* From: R.Hooft@EuroMail.com (Rob Hooft)\n-* To: g77-alpha@gnu.ai.mit.edu\n-* Subject: Re: testing 970624.\n-* In-Reply-To: <199706251027.GAA07892@churchy.gnu.ai.mit.edu>\n-* References: <199706251018.MAA21538@nu>\n-* \t<199706251027.GAA07892@churchy.gnu.ai.mit.edu>\n-* X-Mailer: VM 6.30 under Emacs 19.34.1\n-* Content-Type: text/plain; charset=US-ASCII\n-* \n-* >>>>> \"CB\" == Craig Burley <burley@gnu.ai.mit.edu> writes:\n-* \n-*  CB> but OTOH I'd like to see more problems like this on other\n-*  CB> applications, and especially other systems\n-* \n-* How about this one: An application that prints \"112.\" on all\n-* compilers/platforms I have tested, except with the new g77 on ALPHA (I\n-* don't have the new g77 on any other platform here to test)?\n-* \n-* Application Appended. Source code courtesy of my boss.....\n-* Disclaimer: I do not know the right answer, or even whether there is a\n-* single right answer.....\n-* \n-* Regards,\n-* -- \n-* =====       R.Hooft@EuroMail.com   http://www.Sander.EMBL-Heidelberg.DE/rob/ ==\n-* ==== In need of protein modeling?  http://www.Sander.EMBL-Heidelberg.DE/whatif/\n-* Validation of protein structures?  http://biotech.EMBL-Heidelberg.DE:8400/ ====\n-* == PGPid 0xFA19277D == Use Linux!  Free Software Rules The World! =============\n-* \n-* nu[152]for% cat humor.f      \n-      PROGRAM SUBROUTINE\n-      LOGICAL ELSE IF\n-      INTEGER REAL, GO TO PROGRAM, WHILE\n-      REAL FORMAT(2)\n-      DATA IF,REAL,END DO,WHILE,FORMAT(2),I2/2,6,7,1,112.,1/\n-      DO THEN=1, END DO, WHILE\n-         CALL = END DO - IF\n-         PROGRAM = THEN - IF\n-         ELSE IF = THEN .GT. IF\n-         IF (THEN.GT.REAL) THEN\n-            CALL FUNCTION PROGRAM (ELSE IF, GO TO PROGRAM, THEN)\n-         ELSE IF (ELSE IF) THEN\n-            REAL = THEN + END DO\n-         END IF\n-      END DO\n- 10   FORMAT(I2/I2) = WHILE*REAL*THEN\n-      IF (FORMAT(I2) .NE. FORMAT(I2+I2)) CALL ABORT\n-      END ! DO\n-      SUBROUTINE FUNCTION PROGRAM (REAL,INTEGER, LOGICAL)\n-      LOGICAL REAL\n-      REAL LOGICAL\n-      INTEGER INTEGER, STOP, RETURN, GO TO\n-      ASSIGN 9 TO STOP\n-      ASSIGN = 9 + LOGICAL\n-      ASSIGN 7 TO RETURN\n-      ASSIGN 9 TO GO TO\n-      GO TO = 5\n-      STOP = 8\n-      IF (.NOT.REAL) GOTO STOP\n-      IF (LOGICAL.GT.INTEGER) THEN\n-         IF = LOGICAL +5\n-         IF (LOGICAL.EQ.5) ASSIGN 5 TO IF\n-         INTEGER=IF\n-      ELSE\n-         IF (ASSIGN.GT.STOP) ASSIGN 9 TO GOTO\n-         ELSE = GO TO\n-         END IF = ELSE + GO TO\n-         IF (.NOT.REAL.AND.GOTO.GT.ELSE) GOTO RETURN\n-      END IF\n-    5 CONTINUE\n-    7 LOGICAL=LOGICAL+STOP\n-    9 RETURN\n-      END ! IF\n-* nu[153]for% f77 humor.f\n-* nu[154]for% ./a.out\n-*    112.0000    \n-* nu[155]for% f90 humor.f  \n-* nu[156]for% ./a.out    \n-*    112.0000    \n-* nu[157]for% g77 humor.f \n-* nu[158]for% ./a.out    \n-*   40."}, {"sha": "6398600f05988c21ca3f865c455331b0f04c7b0c", "filename": "gcc/testsuite/g77.f-torture/execute/970816-3.f", "status": "removed", "additions": 0, "deletions": 20, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F970816-3.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F970816-3.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F970816-3.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,20 +0,0 @@\n-* Date: Wed, 13 Aug 1997 15:34:23 +0200 (METDST)\n-* From: Claus Denk <denk@cica.es>\n-* To: g77-alpha@gnu.ai.mit.edu\n-* Subject: 970811 report - segfault bug on alpha still there\n-*[...]\n-* Now, the bug that I reported some weeks ago is still there, I'll post\n-* the test program again:\n-*\n-        PROGRAM TEST\n-C       a bug in g77-0.5.21 - alpha. Works with NSTART=0 and segfaults with\n-C       NSTART=1 on the second write.\n-        PARAMETER (NSTART=1,NADD=NSTART+1)\n-        REAL AB(NSTART:NSTART)\n-        AB(NSTART)=1.0\n-        I=1\n-        J=2\n-        IND=I-J+NADD\n-        write(*,*) AB(IND)\n-        write(*,*) AB(I-J+NADD)\n-        END"}, {"sha": "6b0c2f3b3a980ebf394f29dd672e59404aefbc26", "filename": "gcc/testsuite/g77.f-torture/execute/971102-1.f", "status": "removed", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F971102-1.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F971102-1.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F971102-1.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,11 +0,0 @@\n-       i=3\n-       j=0\n-       do i=i,5\n-         j = j+i\n-       end do\n-       do i=3,i\n-         j = j+i\n-       end do\n-       if (i.ne.7) call abort()\n-       print *, i,j\n-       end"}, {"sha": "6d05c6767fdf167a7ade20b2fdeb102ad308b4e9", "filename": "gcc/testsuite/g77.f-torture/execute/980520-1.f", "status": "removed", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F980520-1.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F980520-1.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F980520-1.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,6 +0,0 @@\n-c     Produced a link error through not eliminating the unused statement\n-c     function after 1998-05-15 change to gcc/toplev.c.  It's in\n-c     `execute' since it needs to link.\n-c     Fixed by 1998-05-23 change to f/com.c.\n-      values(i,j) = val((i-1)*n+j)\n-      end"}, {"sha": "c36b1efc0527119093e0e8edac75b2ad802753fc", "filename": "gcc/testsuite/g77.f-torture/execute/980628-0.f", "status": "removed", "additions": 0, "deletions": 61, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F980628-0.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F980628-0.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F980628-0.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,61 +0,0 @@\n-* g77 0.5.23 and previous had bugs involving too little space\n-* allocated for EQUIVALENCE and COMMON areas needing initial\n-* padding to meet alignment requirements of the system.\n-\n-      call subr\n-      end\n-\n-      subroutine subr\n-      implicit none\n-\n-      real r1(5), r2(5), r3(5)\n-      double precision d1, d2, d3\n-      integer i1, i2, i3\n-      equivalence (r1(2), d1)\n-      equivalence (r2(2), d2)\n-      equivalence (r3(2), d3)\n-\n-      r1(1) = 1.\n-      d1 = 10.\n-      r1(4) = 1.\n-      r1(5) = 1.\n-      i1 = 1\n-      r2(1) = 2.\n-      d2 = 20.\n-      r2(4) = 2.\n-      r2(5) = 2.\n-      i2 = 2\n-      r3(1) = 3.\n-      d3 = 30.\n-      r3(4) = 3.\n-      r3(5) = 3.\n-      i3 = 3\n-\n-      call x (r1, d1, i1, r2, d2, i2, r3, d3, i3)\n-\n-      end\n-\n-      subroutine x (r1, d1, i1, r2, d2, i2, r3, d3, i3)\n-      implicit none\n-\n-      real r1(5), r2(5), r3(5)\n-      double precision d1, d2, d3\n-      integer i1, i2, i3\n-\n-      if (r1(1) .ne. 1.) call abort\n-      if (d1 .ne. 10.) call abort\n-      if (r1(4) .ne. 1.) call abort\n-      if (r1(5) .ne. 1.) call abort\n-      if (i1 .ne. 1) call abort\n-      if (r2(1) .ne. 2.) call abort\n-      if (d2 .ne. 20.) call abort\n-      if (r2(4) .ne. 2.) call abort\n-      if (r2(5) .ne. 2.) call abort\n-      if (i2 .ne. 2) call abort\n-      if (r3(1) .ne. 3.) call abort\n-      if (d3 .ne. 30.) call abort\n-      if (r3(4) .ne. 3.) call abort\n-      if (r3(5) .ne. 3.) call abort\n-      if (i3 .ne. 3) call abort\n-\n-      end"}, {"sha": "6ab0a0a81a8fbc8df7a25712ab48866ad9d6ebf9", "filename": "gcc/testsuite/g77.f-torture/execute/980628-1.f", "status": "removed", "additions": 0, "deletions": 62, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F980628-1.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F980628-1.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F980628-1.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,62 +0,0 @@\n-* g77 0.5.23 and previous had bugs involving too little space\n-* allocated for EQUIVALENCE and COMMON areas needing initial\n-* padding to meet alignment requirements of the system.\n-\n-      call subr\n-      end\n-\n-      subroutine subr\n-      implicit none\n-      save\n-\n-      real r1(5), r2(5), r3(5)\n-      double precision d1, d2, d3\n-      integer i1, i2, i3\n-      equivalence (r1(2), d1)\n-      equivalence (r2(2), d2)\n-      equivalence (r3(2), d3)\n-\n-      r1(1) = 1.\n-      d1 = 10.\n-      r1(4) = 1.\n-      r1(5) = 1.\n-      i1 = 1\n-      r2(1) = 2.\n-      d2 = 20.\n-      r2(4) = 2.\n-      r2(5) = 2.\n-      i2 = 2\n-      r3(1) = 3.\n-      d3 = 30.\n-      r3(4) = 3.\n-      r3(5) = 3.\n-      i3 = 3\n-\n-      call x (r1, d1, i1, r2, d2, i2, r3, d3, i3)\n-\n-      end\n-\n-      subroutine x (r1, d1, i1, r2, d2, i2, r3, d3, i3)\n-      implicit none\n-\n-      real r1(5), r2(5), r3(5)\n-      double precision d1, d2, d3\n-      integer i1, i2, i3\n-\n-      if (r1(1) .ne. 1.) call abort\n-      if (d1 .ne. 10.) call abort\n-      if (r1(4) .ne. 1.) call abort\n-      if (r1(5) .ne. 1.) call abort\n-      if (i1 .ne. 1) call abort\n-      if (r2(1) .ne. 2.) call abort\n-      if (d2 .ne. 20.) call abort\n-      if (r2(4) .ne. 2.) call abort\n-      if (r2(5) .ne. 2.) call abort\n-      if (i2 .ne. 2) call abort\n-      if (r3(1) .ne. 3.) call abort\n-      if (d3 .ne. 30.) call abort\n-      if (r3(4) .ne. 3.) call abort\n-      if (r3(5) .ne. 3.) call abort\n-      if (i3 .ne. 3) call abort\n-\n-      end"}, {"sha": "427f635add916540b26e3095f7b71cfbf7319d3b", "filename": "gcc/testsuite/g77.f-torture/execute/980628-10.f", "status": "removed", "additions": 0, "deletions": 57, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F980628-10.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F980628-10.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F980628-10.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,57 +0,0 @@\n-* g77 0.5.23 and previous had bugs involving too little space\n-* allocated for EQUIVALENCE and COMMON areas needing initial\n-* padding to meet alignment requirements of the system.\n-\n-      call subr\n-      end\n-\n-      subroutine subr\n-      implicit none\n-      save\n-\n-      character c1(11), c2(11), c3(11)\n-      real r1, r2, r3\n-      character c4, c5, c6\n-      equivalence (r1, c1(2))\n-      equivalence (r2, c2(2))\n-      equivalence (r3, c3(2))\n-\n-      c1(1) = '1'\n-      r1 = 1.\n-      c1(11) = '1'\n-      c4 = '4'\n-      c2(1) = '2'\n-      r2 = 2.\n-      c2(11) = '2'\n-      c5 = '5'\n-      c3(1) = '3'\n-      r3 = 3.\n-      c3(11) = '3'\n-      c6 = '6'\n-\n-      call x (c1, r1, c2, r2, c3, r3, c4, c5, c6)\n-\n-      end\n-\n-      subroutine x (c1, r1, c2, r2, c3, r3, c4, c5, c6)\n-      implicit none\n-\n-      character c1(11), c2(11), c3(11)\n-      real r1, r2, r3\n-      character c4, c5, c6\n-\n-      if (c1(1) .ne. '1') call abort\n-      if (r1 .ne. 1.) call abort\n-      if (c1(11) .ne. '1') call abort\n-      if (c4 .ne. '4') call abort\n-      if (c2(1) .ne. '2') call abort\n-      if (r2 .ne. 2.) call abort\n-      if (c2(11) .ne. '2') call abort\n-      if (c5 .ne. '5') call abort\n-      if (c3(1) .ne. '3') call abort\n-      if (r3 .ne. 3.) call abort\n-      if (c3(11) .ne. '3') call abort\n-      if (c6 .ne. '6') call abort\n-\n-      end\n-"}, {"sha": "a140e7db61156da414344967509220a01ced5d30", "filename": "gcc/testsuite/g77.f-torture/execute/980628-2.f", "status": "removed", "additions": 0, "deletions": 55, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F980628-2.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F980628-2.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F980628-2.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,55 +0,0 @@\n-* g77 0.5.23 and previous had bugs involving too little space\n-* allocated for EQUIVALENCE and COMMON areas needing initial\n-* padding to meet alignment requirements of the system.\n-\n-      call subr\n-      end\n-\n-      subroutine subr\n-      implicit none\n-\n-      character c1(11), c2(11), c3(11)\n-      real r1, r2, r3\n-      character c4, c5, c6\n-      equivalence (c1(2), r1)\n-      equivalence (c2(2), r2)\n-      equivalence (c3(2), r3)\n-\n-      c1(1) = '1'\n-      r1 = 1.\n-      c1(11) = '1'\n-      c4 = '4'\n-      c2(1) = '2'\n-      r2 = 2.\n-      c2(11) = '2'\n-      c5 = '5'\n-      c3(1) = '3'\n-      r3 = 3.\n-      c3(11) = '3'\n-      c6 = '6'\n-\n-      call x (c1, r1, c2, r2, c3, r3, c4, c5, c6)\n-\n-      end\n-\n-      subroutine x (c1, r1, c2, r2, c3, r3, c4, c5, c6)\n-      implicit none\n-\n-      character c1(11), c2(11), c3(11)\n-      real r1, r2, r3\n-      character c4, c5, c6\n-\n-      if (c1(1) .ne. '1') call abort\n-      if (r1 .ne. 1.) call abort\n-      if (c1(11) .ne. '1') call abort\n-      if (c4 .ne. '4') call abort\n-      if (c2(1) .ne. '2') call abort\n-      if (r2 .ne. 2.) call abort\n-      if (c2(11) .ne. '2') call abort\n-      if (c5 .ne. '5') call abort\n-      if (c3(1) .ne. '3') call abort\n-      if (r3 .ne. 3.) call abort\n-      if (c3(11) .ne. '3') call abort\n-      if (c6 .ne. '6') call abort\n-\n-      end"}, {"sha": "47e6ea5730127ff95d4d1312e667132273afb3db", "filename": "gcc/testsuite/g77.f-torture/execute/980628-3.f", "status": "removed", "additions": 0, "deletions": 56, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F980628-3.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F980628-3.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F980628-3.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,56 +0,0 @@\n-* g77 0.5.23 and previous had bugs involving too little space\n-* allocated for EQUIVALENCE and COMMON areas needing initial\n-* padding to meet alignment requirements of the system.\n-\n-      call subr\n-      end\n-\n-      subroutine subr\n-      implicit none\n-      save\n-\n-      character c1(11), c2(11), c3(11)\n-      real r1, r2, r3\n-      character c4, c5, c6\n-      equivalence (c1(2), r1)\n-      equivalence (c2(2), r2)\n-      equivalence (c3(2), r3)\n-\n-      c1(1) = '1'\n-      r1 = 1.\n-      c1(11) = '1'\n-      c4 = '4'\n-      c2(1) = '2'\n-      r2 = 2.\n-      c2(11) = '2'\n-      c5 = '5'\n-      c3(1) = '3'\n-      r3 = 3.\n-      c3(11) = '3'\n-      c6 = '6'\n-\n-      call x (c1, r1, c2, r2, c3, r3, c4, c5, c6)\n-\n-      end\n-\n-      subroutine x (c1, r1, c2, r2, c3, r3, c4, c5, c6)\n-      implicit none\n-\n-      character c1(11), c2(11), c3(11)\n-      real r1, r2, r3\n-      character c4, c5, c6\n-\n-      if (c1(1) .ne. '1') call abort\n-      if (r1 .ne. 1.) call abort\n-      if (c1(11) .ne. '1') call abort\n-      if (c4 .ne. '4') call abort\n-      if (c2(1) .ne. '2') call abort\n-      if (r2 .ne. 2.) call abort\n-      if (c2(11) .ne. '2') call abort\n-      if (c5 .ne. '5') call abort\n-      if (c3(1) .ne. '3') call abort\n-      if (r3 .ne. 3.) call abort\n-      if (c3(11) .ne. '3') call abort\n-      if (c6 .ne. '6') call abort\n-\n-      end"}, {"sha": "40bd6e6df51b018246dcd7877e3b7cad613b3057", "filename": "gcc/testsuite/g77.f-torture/execute/980628-4.f", "status": "removed", "additions": 0, "deletions": 27, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F980628-4.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F980628-4.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F980628-4.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,27 +0,0 @@\n-* g77 0.5.23 and previous had bugs involving too little space\n-* allocated for EQUIVALENCE and COMMON areas needing initial\n-* padding to meet alignment requirements of the system,\n-* including when initial values are provided (e.g. DATA).\n-\n-      program test\n-      implicit none\n-\n-      real r\n-      double precision d\n-      common /cmn/ r, d\n-\n-      if (r .ne. 1.) call abort\n-      if (d .ne. 10.) call abort\n-\n-      end\n-\n-      block data init\n-      implicit none\n-\n-      real r\n-      double precision d\n-      common /cmn/ r, d\n-\n-      data r/1./, d/10./\n-\n-      end"}, {"sha": "8f6fe7faf80de5dba84589f4787fee07e843520f", "filename": "gcc/testsuite/g77.f-torture/execute/980628-4.x", "status": "removed", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F980628-4.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F980628-4.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F980628-4.x?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,11 +0,0 @@\n-# This test fails compilation in cross-endian environments, for example as\n-# below, with a \"sorry\" message.\n-\n-if { [ishost \"i\\[34567\\]86-*-*\"] } {\n-    if { [istarget \"mmix-knuth-mmixware\"]\n-\t || [istarget \"powerpc-*-*\"] } {\n-\tset torture_compile_xfail [istarget]\n-    }\n-}\n-\n-return 0"}, {"sha": "14f39e3c51e0c89986197e36e8ce5dfed5a9dfde", "filename": "gcc/testsuite/g77.f-torture/execute/980628-5.f", "status": "removed", "additions": 0, "deletions": 27, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F980628-5.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F980628-5.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F980628-5.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,27 +0,0 @@\n-* g77 0.5.23 and previous had bugs involving too little space\n-* allocated for EQUIVALENCE and COMMON areas needing initial\n-* padding to meet alignment requirements of the system,\n-* including when initial values are provided (e.g. DATA).\n-\n-      program test\n-      implicit none\n-\n-      character c\n-      double precision d\n-      common /cmn/ c, d\n-\n-      if (c .ne. '1') call abort\n-      if (d .ne. 10.) call abort\n-\n-      end\n-\n-      block data init\n-      implicit none\n-\n-      character c\n-      double precision d\n-      common /cmn/ c, d\n-\n-      data c/'1'/, d/10./\n-\n-      end"}, {"sha": "8f6fe7faf80de5dba84589f4787fee07e843520f", "filename": "gcc/testsuite/g77.f-torture/execute/980628-5.x", "status": "removed", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F980628-5.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F980628-5.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F980628-5.x?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,11 +0,0 @@\n-# This test fails compilation in cross-endian environments, for example as\n-# below, with a \"sorry\" message.\n-\n-if { [ishost \"i\\[34567\\]86-*-*\"] } {\n-    if { [istarget \"mmix-knuth-mmixware\"]\n-\t || [istarget \"powerpc-*-*\"] } {\n-\tset torture_compile_xfail [istarget]\n-    }\n-}\n-\n-return 0"}, {"sha": "c5ade65ed399d54371ab0e9f945756b29c1ee328", "filename": "gcc/testsuite/g77.f-torture/execute/980628-6.f", "status": "removed", "additions": 0, "deletions": 26, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F980628-6.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F980628-6.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F980628-6.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,26 +0,0 @@\n-* g77 0.5.23 and previous had bugs involving too little space\n-* allocated for EQUIVALENCE and COMMON areas needing initial\n-* padding to meet alignment requirements of the system,\n-* including when initial values are provided (e.g. DATA).\n-\n-      program test\n-      implicit none\n-\n-      character c\n-      double precision d(100)\n-      common /cmn/ c, d\n-\n-      if (d(80) .ne. 10.) call abort\n-\n-      end\n-\n-      block data init\n-      implicit none\n-\n-      character c\n-      double precision d(100)\n-      common /cmn/ c, d\n-\n-      data d(80)/10./\n-\n-      end"}, {"sha": "8f6fe7faf80de5dba84589f4787fee07e843520f", "filename": "gcc/testsuite/g77.f-torture/execute/980628-6.x", "status": "removed", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F980628-6.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F980628-6.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F980628-6.x?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,11 +0,0 @@\n-# This test fails compilation in cross-endian environments, for example as\n-# below, with a \"sorry\" message.\n-\n-if { [ishost \"i\\[34567\\]86-*-*\"] } {\n-    if { [istarget \"mmix-knuth-mmixware\"]\n-\t || [istarget \"powerpc-*-*\"] } {\n-\tset torture_compile_xfail [istarget]\n-    }\n-}\n-\n-return 0"}, {"sha": "c81ba31fc26ba24293cb812cbb95ce951e29a263", "filename": "gcc/testsuite/g77.f-torture/execute/980628-7.f", "status": "removed", "additions": 0, "deletions": 62, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F980628-7.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F980628-7.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F980628-7.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,62 +0,0 @@\n-* g77 0.5.23 and previous had bugs involving too little space\n-* allocated for EQUIVALENCE and COMMON areas needing initial\n-* padding to meet alignment requirements of the system.\n-\n-      call subr\n-      end\n-\n-      subroutine subr\n-      implicit none\n-\n-      real r1(5), r2(5), r3(5)\n-      double precision d1, d2, d3\n-      integer i1, i2, i3\n-      equivalence (d1, r1(2))\n-      equivalence (d2, r2(2))\n-      equivalence (d3, r3(2))\n-\n-      r1(1) = 1.\n-      d1 = 10.\n-      r1(4) = 1.\n-      r1(5) = 1.\n-      i1 = 1\n-      r2(1) = 2.\n-      d2 = 20.\n-      r2(4) = 2.\n-      r2(5) = 2.\n-      i2 = 2\n-      r3(1) = 3.\n-      d3 = 30.\n-      r3(4) = 3.\n-      r3(5) = 3.\n-      i3 = 3\n-\n-      call x (r1, d1, i1, r2, d2, i2, r3, d3, i3)\n-\n-      end\n-\n-      subroutine x (r1, d1, i1, r2, d2, i2, r3, d3, i3)\n-      implicit none\n-\n-      real r1(5), r2(5), r3(5)\n-      double precision d1, d2, d3\n-      integer i1, i2, i3\n-\n-      if (r1(1) .ne. 1.) call abort\n-      if (d1 .ne. 10.) call abort\n-      if (r1(4) .ne. 1.) call abort\n-      if (r1(5) .ne. 1.) call abort\n-      if (i1 .ne. 1) call abort\n-      if (r2(1) .ne. 2.) call abort\n-      if (d2 .ne. 20.) call abort\n-      if (r2(4) .ne. 2.) call abort\n-      if (r2(5) .ne. 2.) call abort\n-      if (i2 .ne. 2) call abort\n-      if (r3(1) .ne. 3.) call abort\n-      if (d3 .ne. 30.) call abort\n-      if (r3(4) .ne. 3.) call abort\n-      if (r3(5) .ne. 3.) call abort\n-      if (i3 .ne. 3) call abort\n-\n-      end\n-"}, {"sha": "8940d0099548473d38ae1592218fadc6fc062413", "filename": "gcc/testsuite/g77.f-torture/execute/980628-8.f", "status": "removed", "additions": 0, "deletions": 63, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F980628-8.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F980628-8.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F980628-8.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,63 +0,0 @@\n-* g77 0.5.23 and previous had bugs involving too little space\n-* allocated for EQUIVALENCE and COMMON areas needing initial\n-* padding to meet alignment requirements of the system.\n-\n-      call subr\n-      end\n-\n-      subroutine subr\n-      implicit none\n-      save\n-\n-      real r1(5), r2(5), r3(5)\n-      double precision d1, d2, d3\n-      integer i1, i2, i3\n-      equivalence (d1, r1(2))\n-      equivalence (d2, r2(2))\n-      equivalence (d3, r3(2))\n-\n-      r1(1) = 1.\n-      d1 = 10.\n-      r1(4) = 1.\n-      r1(5) = 1.\n-      i1 = 1\n-      r2(1) = 2.\n-      d2 = 20.\n-      r2(4) = 2.\n-      r2(5) = 2.\n-      i2 = 2\n-      r3(1) = 3.\n-      d3 = 30.\n-      r3(4) = 3.\n-      r3(5) = 3.\n-      i3 = 3\n-\n-      call x (r1, d1, i1, r2, d2, i2, r3, d3, i3)\n-\n-      end\n-\n-      subroutine x (r1, d1, i1, r2, d2, i2, r3, d3, i3)\n-      implicit none\n-\n-      real r1(5), r2(5), r3(5)\n-      double precision d1, d2, d3\n-      integer i1, i2, i3\n-\n-      if (r1(1) .ne. 1.) call abort\n-      if (d1 .ne. 10.) call abort\n-      if (r1(4) .ne. 1.) call abort\n-      if (r1(5) .ne. 1.) call abort\n-      if (i1 .ne. 1) call abort\n-      if (r2(1) .ne. 2.) call abort\n-      if (d2 .ne. 20.) call abort\n-      if (r2(4) .ne. 2.) call abort\n-      if (r2(5) .ne. 2.) call abort\n-      if (i2 .ne. 2) call abort\n-      if (r3(1) .ne. 3.) call abort\n-      if (d3 .ne. 30.) call abort\n-      if (r3(4) .ne. 3.) call abort\n-      if (r3(5) .ne. 3.) call abort\n-      if (i3 .ne. 3) call abort\n-\n-      end\n-"}, {"sha": "54e6552d628fe9f9635f1f836c1d51253b47e9d9", "filename": "gcc/testsuite/g77.f-torture/execute/980628-9.f", "status": "removed", "additions": 0, "deletions": 56, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F980628-9.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F980628-9.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F980628-9.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,56 +0,0 @@\n-* g77 0.5.23 and previous had bugs involving too little space\n-* allocated for EQUIVALENCE and COMMON areas needing initial\n-* padding to meet alignment requirements of the system.\n-\n-      call subr\n-      end\n-\n-      subroutine subr\n-      implicit none\n-\n-      character c1(11), c2(11), c3(11)\n-      real r1, r2, r3\n-      character c4, c5, c6\n-      equivalence (r1, c1(2))\n-      equivalence (r2, c2(2))\n-      equivalence (r3, c3(2))\n-\n-      c1(1) = '1'\n-      r1 = 1.\n-      c1(11) = '1'\n-      c4 = '4'\n-      c2(1) = '2'\n-      r2 = 2.\n-      c2(11) = '2'\n-      c5 = '5'\n-      c3(1) = '3'\n-      r3 = 3.\n-      c3(11) = '3'\n-      c6 = '6'\n-\n-      call x (c1, r1, c2, r2, c3, r3, c4, c5, c6)\n-\n-      end\n-\n-      subroutine x (c1, r1, c2, r2, c3, r3, c4, c5, c6)\n-      implicit none\n-\n-      character c1(11), c2(11), c3(11)\n-      real r1, r2, r3\n-      character c4, c5, c6\n-\n-      if (c1(1) .ne. '1') call abort\n-      if (r1 .ne. 1.) call abort\n-      if (c1(11) .ne. '1') call abort\n-      if (c4 .ne. '4') call abort\n-      if (c2(1) .ne. '2') call abort\n-      if (r2 .ne. 2.) call abort\n-      if (c2(11) .ne. '2') call abort\n-      if (c5 .ne. '5') call abort\n-      if (c3(1) .ne. '3') call abort\n-      if (r3 .ne. 3.) call abort\n-      if (c3(11) .ne. '3') call abort\n-      if (c6 .ne. '6') call abort\n-\n-      end\n-"}, {"sha": "a3ddd55473a7564c2cb767f1f07d971ec406f9e6", "filename": "gcc/testsuite/g77.f-torture/execute/980701-0.f", "status": "removed", "additions": 0, "deletions": 72, "changes": 72, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F980701-0.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F980701-0.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F980701-0.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,72 +0,0 @@\n-* g77 0.5.23 and previous had bugs involving too little space\n-* allocated for EQUIVALENCE and COMMON areas needing initial\n-* padding to meet alignment requirements of the system.\n-\n-      call subr\n-      end\n-\n-      subroutine subr\n-      implicit none\n-\n-      real r1(5), r2(5), r3(5)\n-      real s1(2), s2(2), s3(2)\n-      double precision d1, d2, d3\n-      integer i1, i2, i3\n-      equivalence (r1, s1(2))\n-      equivalence (d1, r1(2))\n-      equivalence (r2, s2(2))\n-      equivalence (d2, r2(2))\n-      equivalence (r3, s3(2))\n-      equivalence (d3, r3(2))\n-\n-      s1(1) = 1.\n-      r1(1) = 1.\n-      d1 = 10.\n-      r1(4) = 1.\n-      r1(5) = 1.\n-      i1 = 1\n-      s2(1) = 2.\n-      r2(1) = 2.\n-      d2 = 20.\n-      r2(4) = 2.\n-      r2(5) = 2.\n-      i2 = 2\n-      s3(1) = 3.\n-      r3(1) = 3.\n-      d3 = 30.\n-      r3(4) = 3.\n-      r3(5) = 3.\n-      i3 = 3\n-\n-      call x (s1, r1, d1, i1, s2, r2, d2, i2, s3, r3, d3, i3)\n-\n-      end\n-\n-      subroutine x (s1, r1, d1, i1, s2, r2, d2, i2, s3, r3, d3, i3)\n-      implicit none\n-\n-      real r1(5), r2(5), r3(5)\n-      real s1(2), s2(2), s3(2)\n-      double precision d1, d2, d3\n-      integer i1, i2, i3\n-\n-      if (s1(1) .ne. 1.) call abort\n-      if (r1(1) .ne. 1.) call abort\n-      if (d1 .ne. 10.) call abort\n-      if (r1(4) .ne. 1.) call abort\n-      if (r1(5) .ne. 1.) call abort\n-      if (i1 .ne. 1) call abort\n-      if (s2(1) .ne. 2.) call abort\n-      if (r2(1) .ne. 2.) call abort\n-      if (d2 .ne. 20.) call abort\n-      if (r2(4) .ne. 2.) call abort\n-      if (r2(5) .ne. 2.) call abort\n-      if (i2 .ne. 2) call abort\n-      if (s3(1) .ne. 3.) call abort\n-      if (r3(1) .ne. 3.) call abort\n-      if (d3 .ne. 30.) call abort\n-      if (r3(4) .ne. 3.) call abort\n-      if (r3(5) .ne. 3.) call abort\n-      if (i3 .ne. 3) call abort\n-\n-      end"}, {"sha": "fba78564572351d8349e0131c511bf79efb4f3ac", "filename": "gcc/testsuite/g77.f-torture/execute/980701-1.f", "status": "removed", "additions": 0, "deletions": 72, "changes": 72, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F980701-1.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F980701-1.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F980701-1.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,72 +0,0 @@\n-* g77 0.5.23 and previous had bugs involving too little space\n-* allocated for EQUIVALENCE and COMMON areas needing initial\n-* padding to meet alignment requirements of the system.\n-\n-      call subr\n-      end\n-\n-      subroutine subr\n-      implicit none\n-\n-      real r1(5), r2(5), r3(5)\n-      real s1(2), s2(2), s3(2)\n-      double precision d1, d2, d3\n-      integer i1, i2, i3\n-      equivalence (d1, r1(2))\n-      equivalence (r1, s1(2))\n-      equivalence (d2, r2(2))\n-      equivalence (r2, s2(2))\n-      equivalence (d3, r3(2))\n-      equivalence (r3, s3(2))\n-\n-      s1(1) = 1.\n-      r1(1) = 1.\n-      d1 = 10.\n-      r1(4) = 1.\n-      r1(5) = 1.\n-      i1 = 1\n-      s2(1) = 2.\n-      r2(1) = 2.\n-      d2 = 20.\n-      r2(4) = 2.\n-      r2(5) = 2.\n-      i2 = 2\n-      s3(1) = 3.\n-      r3(1) = 3.\n-      d3 = 30.\n-      r3(4) = 3.\n-      r3(5) = 3.\n-      i3 = 3\n-\n-      call x (s1, r1, d1, i1, s2, r2, d2, i2, s3, r3, d3, i3)\n-\n-      end\n-\n-      subroutine x (s1, r1, d1, i1, s2, r2, d2, i2, s3, r3, d3, i3)\n-      implicit none\n-\n-      real r1(5), r2(5), r3(5)\n-      real s1(2), s2(2), s3(2)\n-      double precision d1, d2, d3\n-      integer i1, i2, i3\n-\n-      if (s1(1) .ne. 1.) call abort\n-      if (r1(1) .ne. 1.) call abort\n-      if (d1 .ne. 10.) call abort\n-      if (r1(4) .ne. 1.) call abort\n-      if (r1(5) .ne. 1.) call abort\n-      if (i1 .ne. 1) call abort\n-      if (s2(1) .ne. 2.) call abort\n-      if (r2(1) .ne. 2.) call abort\n-      if (d2 .ne. 20.) call abort\n-      if (r2(4) .ne. 2.) call abort\n-      if (r2(5) .ne. 2.) call abort\n-      if (i2 .ne. 2) call abort\n-      if (s3(1) .ne. 3.) call abort\n-      if (r3(1) .ne. 3.) call abort\n-      if (d3 .ne. 30.) call abort\n-      if (r3(4) .ne. 3.) call abort\n-      if (r3(5) .ne. 3.) call abort\n-      if (i3 .ne. 3) call abort\n-\n-      end"}, {"sha": "d7b9d39da4bc409601bdf0648ccd840cd2720ae3", "filename": "gcc/testsuite/g77.f-torture/execute/alpha2.f", "status": "removed", "additions": 0, "deletions": 19, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Falpha2.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Falpha2.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Falpha2.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,19 +0,0 @@\n-c     This was originally a compile test.\n-      IMPLICIT REAL*8 (A-H,O-Z)\n-      COMMON /C/   A(9), INT\n-      DATA A      /\n-     1                 0.49999973986348730D01, 0.40000399113084100D01,\n-     2                 0.29996921166596490D01, 0.20016917082678680D01,\n-     3                 0.99126390351864390D00, 0.97963256554443300D-01,\n-     4                -0.87360964813570100D-02, 0.16917082678692080D-02,\n-     5                7./\n-C     Data values were once mis-compiled on (OSF/1 ?) Alpha with -O2\n-c     such that, for instance, `7.' appeared as `4.' in the assembler\n-c     output.\n-      call test(a(9), 7)\n-      END\n-      subroutine test(r, i)\n-      double precision r\n-      if (nint(r)/=i) call abort\n-      end\n-"}, {"sha": "8f6fe7faf80de5dba84589f4787fee07e843520f", "filename": "gcc/testsuite/g77.f-torture/execute/alpha2.x", "status": "removed", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Falpha2.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Falpha2.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Falpha2.x?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,11 +0,0 @@\n-# This test fails compilation in cross-endian environments, for example as\n-# below, with a \"sorry\" message.\n-\n-if { [ishost \"i\\[34567\\]86-*-*\"] } {\n-    if { [istarget \"mmix-knuth-mmixware\"]\n-\t || [istarget \"powerpc-*-*\"] } {\n-\tset torture_compile_xfail [istarget]\n-    }\n-}\n-\n-return 0"}, {"sha": "4b6b2f51a8e624548caf10d2f52c80ec6f8cfed9", "filename": "gcc/testsuite/g77.f-torture/execute/auto0.f", "status": "removed", "additions": 0, "deletions": 80, "changes": 80, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Fauto0.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Fauto0.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Fauto0.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,80 +0,0 @@\n-* Test automatic arrays.\n-      program auto0\n-      implicit none\n-      integer i\n-      integer j0(40)\n-      integer j1(40)\n-      integer jc0(40)\n-      integer jc1(40)\n-      common /jc0/ jc0\n-      common /jc1/ jc1\n-\n-      data j0/40*3/\n-      data j1/40*4/\n-\n-      i = 40\n-      call a1 (j0, j1, i)\n-\n-      do i = 1, 40\n-         if (j0(i) .ne. 4) call abort\n-         if (j1(i) .ne. 3) call abort\n-         if (jc0(i) .ne. 6) call abort\n-         if (jc1(i) .ne. 5) call abort\n-      end do\n-\n-      end\n-\n-      block data jc\n-      implicit none\n-      integer jc0(40)\n-      integer jc1(40)\n-      common /jc0/ jc0\n-      common /jc1/ jc1\n-\n-      data jc0/40*5/\n-      data jc1/40*6/\n-\n-      end\n-\n-      subroutine a1 (j0, j1, n)\n-      implicit none\n-      integer j0(40), j1(40), n\n-      integer k0(n), k1(n)\n-      integer i\n-      integer jc0(40)\n-      integer jc1(40)\n-      common /jc0/ jc0\n-      common /jc1/ jc1\n-\n-      do i = 1, 40\n-         j0(i) = j1(i) - j0(i)\n-         jc0(i) = jc1(i) - jc0(i)\n-      end do\n-\n-      n = -1\n-\n-      do i = 1, 40\n-         k0(i) = n\n-         k1(i) = n\n-      end do\n-\n-      do i = 1, 40\n-         j1(i) = j1(i) + k0(i) * j0(i)\n-         jc1(i) = jc1(i) + k1(i) * jc0(i)\n-      end do\n-\n-      n = 500\n-\n-      do i = 1, 40\n-         if (k0(i) .ne. -1) call abort\n-         k0(i) = n\n-         if (k1(i) .ne. -1) call abort\n-         k1(i) = n\n-      end do\n-\n-      do i = 1, 40\n-         j0(i) = j1(i) + j0(i)\n-         jc0(i) = jc1(i) + jc0(i)\n-      end do\n-\n-      end"}, {"sha": "8f6fe7faf80de5dba84589f4787fee07e843520f", "filename": "gcc/testsuite/g77.f-torture/execute/auto0.x", "status": "removed", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Fauto0.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Fauto0.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Fauto0.x?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,11 +0,0 @@\n-# This test fails compilation in cross-endian environments, for example as\n-# below, with a \"sorry\" message.\n-\n-if { [ishost \"i\\[34567\\]86-*-*\"] } {\n-    if { [istarget \"mmix-knuth-mmixware\"]\n-\t || [istarget \"powerpc-*-*\"] } {\n-\tset torture_compile_xfail [istarget]\n-    }\n-}\n-\n-return 0"}, {"sha": "ab9044ceca53f003be777523d5c9872aabfe4eb9", "filename": "gcc/testsuite/g77.f-torture/execute/auto1.f", "status": "removed", "additions": 0, "deletions": 88, "changes": 88, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Fauto1.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Fauto1.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Fauto1.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,88 +0,0 @@\n-* Test automatic arrays.\n-      program auto1\n-      implicit none\n-      integer i\n-      integer j0(40)\n-      integer j1(40)\n-      integer jc0(40)\n-      integer jc1(40)\n-      common /jc0/ jc0\n-      common /jc1/ jc1\n-\n-      data j0/40*3/\n-      data j1/40*4/\n-\n-      i = 40\n-      call a1 (j0, j1, i)\n-\n-      do i = 1, 40\n-         if (j0(i) .ne. 4) call abort\n-         if (j1(i) .ne. 3) call abort\n-         if (jc0(i) .ne. 6) call abort\n-         if (jc1(i) .ne. 5) call abort\n-      end do\n-\n-      end\n-\n-      block data jc\n-      implicit none\n-      integer jc0(40)\n-      integer jc1(40)\n-      common /jc0/ jc0\n-      common /jc1/ jc1\n-\n-      data jc0/40*5/\n-      data jc1/40*6/\n-\n-      end\n-\n-      subroutine a1 (j0, j1, n)\n-      implicit none\n-      integer j0(40), j1(40), n\n-      integer k0(n,3,2), k1(n,3,2)\n-      integer i,j,k\n-      integer jc0(40)\n-      integer jc1(40)\n-      common /jc0/ jc0\n-      common /jc1/ jc1\n-\n-      do i = 1, 40\n-         j0(i) = j1(i) - j0(i)\n-         jc0(i) = jc1(i) - jc0(i)\n-      end do\n-\n-      n = -1\n-\n-      do k = 1, 2\n-         do j = 1, 3\n-            do i = 1, 40\n-               k0(i, j, k) = n\n-               k1(i, j, k) = n\n-            end do\n-         end do\n-      end do\n-\n-      do i = 1, 40\n-         j1(i) = j1(i) + k0(i, 3, 2) * j0(i)\n-         jc1(i) = jc1(i) + k1(i, 1, 1) * jc0(i)\n-      end do\n-\n-      n = 500\n-\n-      do k = 1, 2\n-         do j = 1, 3\n-            do i = 1, 40\n-               if (k0(i, j, k) .ne. -1) call abort\n-               k0(i, j, k) = n\n-               if (k1(i, j, k) .ne. -1) call abort\n-               k1(i, j, k) = n\n-            end do\n-         end do\n-      end do\n-\n-      do i = 1, 40\n-         j0(i) = j1(i) + j0(i)\n-         jc0(i) = jc1(i) + jc0(i)\n-      end do\n-\n-      end"}, {"sha": "8f6fe7faf80de5dba84589f4787fee07e843520f", "filename": "gcc/testsuite/g77.f-torture/execute/auto1.x", "status": "removed", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Fauto1.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Fauto1.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Fauto1.x?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,11 +0,0 @@\n-# This test fails compilation in cross-endian environments, for example as\n-# below, with a \"sorry\" message.\n-\n-if { [ishost \"i\\[34567\\]86-*-*\"] } {\n-    if { [istarget \"mmix-knuth-mmixware\"]\n-\t || [istarget \"powerpc-*-*\"] } {\n-\tset torture_compile_xfail [istarget]\n-    }\n-}\n-\n-return 0"}, {"sha": "61fd263620b64ba408b5ce5929d0deaa14c65fd0", "filename": "gcc/testsuite/g77.f-torture/execute/cabs.f", "status": "removed", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Fcabs.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Fcabs.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Fcabs.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,14 +0,0 @@\n-      program cabs_1\n-      complex      z0\n-      real         r0\n-      complex*16   z1\n-      real*8       r1\n-\n-      z0 = cmplx(3.,4.)\n-      r0 = cabs(z0)\n-      if (r0 .ne. 5.) call abort\n-\n-      z1 = dcmplx(3.d0,4.d0)\n-      r1 = zabs(z1)\n-      if (r1 .ne. 5.d0) call abort\n-      end"}, {"sha": "bccef7f4090b287775b27bc35b9e617f0cf6e23d", "filename": "gcc/testsuite/g77.f-torture/execute/claus.f", "status": "removed", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Fclaus.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Fclaus.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Fclaus.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,13 +0,0 @@\n-        PROGRAM TEST\n-        REAL AB(3)\n-        do i=1,3\n-         AB(i)=i\n-        enddo\n-        k=1\n-        n=2\n-        ind=k-n+2\n-\tif (ind /= 1) call abort\n-\tif (ab(ind) /= 1) call abort\n-\tif (k-n+2 /= 1) call abort\n-\tif (ab(k-n+2) /= 1) call abort\n-        END"}, {"sha": "77da6359f7207c1e90c0df77242fc089df2fb1bd", "filename": "gcc/testsuite/g77.f-torture/execute/complex_1.f", "status": "removed", "additions": 0, "deletions": 18, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Fcomplex_1.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Fcomplex_1.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Fcomplex_1.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,18 +0,0 @@\n-      program complex_1\n-      complex      z0, z1, z2\n-\n-      z0 = cmplx(0.,.5)\n-      z1 = 1./z0\n-      if (z1 .ne. cmplx(0.,-2)) call abort\n-\n-      z0 = 10.*z0\n-      if (z0 .ne. cmplx(0.,5.)) call abort\n-\n-      z2 = cmplx(1.,2.)\n-      z1 = z0/z2\n-      if (z1 .ne. cmplx(2.,1.)) call abort\n-\n-      z1 = z0*z2\n-      if (z1 .ne. cmplx(-10.,5.)) call abort\n-      end\n-"}, {"sha": "fc9386b5c921da5d9c4c035ccdc0bb89e9ea5c47", "filename": "gcc/testsuite/g77.f-torture/execute/cpp.F", "status": "removed", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Fcpp.F", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Fcpp.F", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Fcpp.F?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,5 +0,0 @@\n-!  Some versions of cpp will delete \"//'World' as a C++ comment.\n-      character*40    title\n-      title = 'Hello '//'World'\n-      if (title .ne. 'Hello World') call abort\n-      end"}, {"sha": "88f5644d8b5e186c0ecac652c6ba21ac7bdb7ead", "filename": "gcc/testsuite/g77.f-torture/execute/cpp2.F", "status": "removed", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Fcpp2.F", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Fcpp2.F", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Fcpp2.F?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,7 +0,0 @@\n-C The preprocessor must not mangle Hollerith constants\n-C which contain apostrophes.\n-      integer i, j\n-      data i /4hbla'/\n-      data j /\"bla'\"/\n-      if (i .ne. j) call abort\n-      end"}, {"sha": "a46f03aabef0c89f4457e106d8e013ea4f6e6701", "filename": "gcc/testsuite/g77.f-torture/execute/dcomplex.f", "status": "removed", "additions": 0, "deletions": 18, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Fdcomplex.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Fdcomplex.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Fdcomplex.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,18 +0,0 @@\n-      program foo\n-      complex*16      z0, z1, z2\n-\n-      z0 = dcmplx(0.,.5)\n-      z1 = 1./z0\n-      if (z1 .ne. dcmplx(0.,-2)) call abort\n-\n-      z0 = 10.*z0\n-      if (z0 .ne. dcmplx(0.,5.)) call abort\n-\n-      z2 = cmplx(1.,2.)\n-      z1 = z0/z2\n-      if (z1 .ne. dcmplx(2.,1.)) call abort\n-\n-      z1 = z0*z2\n-      if (z1 .ne. dcmplx(-10.,5.)) call abort\n-      end\n-"}, {"sha": "c69608786b9f308febd6bc5bbfc8ecfd68d7d201", "filename": "gcc/testsuite/g77.f-torture/execute/dnrm2.f", "status": "removed", "additions": 0, "deletions": 74, "changes": 74, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Fdnrm2.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Fdnrm2.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Fdnrm2.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,74 +0,0 @@\n-CCC g77 0.5.21 `Actual Bugs':\n-CCC   * A code-generation bug afflicts Intel x86 targets when `-O2' is\n-CCC     specified compiling, for example, an old version of the `DNRM2'\n-CCC     routine.  The x87 coprocessor stack is being somewhat mismanaged\n-CCC     in cases where assigned `GOTO' and `ASSIGN' are involved.\n-CCC\n-CCC     Version 0.5.21 of `g77' contains an initial effort to fix the\n-CCC     problem, but this effort is incomplete, and a more complete fix is\n-CCC     planned for the next release.\n-\n-C     Currently this test fails with (at least) `-O2 -funroll-loops' on\n-C     i586-unknown-linux-gnulibc1.\n-\n-C     (This is actually an obsolete version of dnrm2 -- consult the\n-c     current Netlib BLAS.)\n-\n-      integer i\n-      double precision a(1:100), dnrm2\n-      do i=1,100\n-         a(i)=0.D0\n-      enddo\n-      if (dnrm2(100,a,1) .ne. 0.0) call abort\n-      end\n-\n-      double precision function dnrm2 ( n, dx, incx)\n-      integer i, incx, ix, j, n, next\n-      double precision   dx(1), cutlo, cuthi, hitest, sum, xmax,zero,one\n-      data   zero, one /0.0d0, 1.0d0/\n-      data cutlo, cuthi / 8.232d-11,  1.304d19 /\n-      j = 0\n-      if(n .gt. 0 .and. incx.gt.0) go to 10\n-         dnrm2  = zero\n-         go to 300\n-   10 assign 30 to next\n-      sum = zero\n-      i = 1\n-      ix = 1\n-   20    go to next,(30, 50, 70, 110)\n-   30 if( dabs(dx(i)) .gt. cutlo) go to 85\n-      assign 50 to next\n-      xmax = zero\n-   50 if( dx(i) .eq. zero) go to 200\n-      if( dabs(dx(i)) .gt. cutlo) go to 85\n-      assign 70 to next\n-      go to 105\n-  100 continue\n-      ix = j\n-      assign 110 to next\n-      sum = (sum / dx(i)) / dx(i)\n-  105 xmax = dabs(dx(i))\n-      go to 115\n-   70 if( dabs(dx(i)) .gt. cutlo ) go to 75\n-  110 if( dabs(dx(i)) .le. xmax ) go to 115\n-         sum = one + sum * (xmax / dx(i))**2\n-         xmax = dabs(dx(i))\n-         go to 200\n-  115 sum = sum + (dx(i)/xmax)**2\n-      go to 200\n-   75 sum = (sum * xmax) * xmax\n-   85 hitest = cuthi/float( n )\n-      do 95 j = ix,n\n-      if(dabs(dx(i)) .ge. hitest) go to 100\n-         sum = sum + dx(i)**2\n-         i = i + incx\n-   95 continue\n-      dnrm2 = dsqrt( sum )\n-      go to 300\n-  200 continue\n-      ix = ix + 1\n-      i = i + incx\n-      if( ix .le. n ) go to 20\n-      dnrm2 = xmax * dsqrt(sum)\n-  300 continue\n-      end"}, {"sha": "e5e0412f5876c43fb25c57f0f8baba3ecb8124ab", "filename": "gcc/testsuite/g77.f-torture/execute/erfc.f", "status": "removed", "additions": 0, "deletions": 38, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Ferfc.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Ferfc.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Ferfc.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,38 +0,0 @@\n-c============================================== test.f\n-                real x, y\n-\t\treal*8 x1, y1\n-\t\tx=0.\n-\t\ty = erfc(x)\n-\t\tif (y .ne. 1.) call abort\n-\n-\t\tx=1.1\n-\t\ty = erfc(x)\n-\t\tif (abs(y - .1197949) .ge. 1.e-6) call abort\n-\n-* modified from x=10, y .gt. 1.5e-44 to avoid lack of -mieee on Alphas.\n-\t\tx=8\n-\t\ty = erfc(x)\n-\t\tif (y .gt. 1.2e-28) call abort\n-\n-\t\tx1=0.\n-\t\ty1 = erfc(x1)\n-\t\tif (y1 .ne. 1.) call abort\n-\n-\t\tx1=1.1d0\n-\t\ty1 = erfc(x1)\n-\t\tif (abs(y1 - .1197949d0) .ge. 1.d-6) call abort\n-\n-\t\tx1=10\n-\t\ty1 = erfc(x1)\n-\t\tif (y1 .gt. 1.5d-44) call abort\n-\t\tend\n-c=================================================\n-!output:\n-!  0.  1.875\n-!  1.10000002  1.48958981\n-!  10.  5.00220949E-06\n-!\n-!The values should be:\n-!erfc(0)=1\n-!erfc(1.1)= 0.1197949\n-!erfc(10)<1.543115467311259E-044"}, {"sha": "00126ff21a3bb41a0ae7aeff56e67fb0c45385be", "filename": "gcc/testsuite/g77.f-torture/execute/execute.exp", "status": "removed", "additions": 0, "deletions": 52, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Fexecute.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Fexecute.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Fexecute.exp?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,52 +0,0 @@\n-# Copyright (C) 1991, 1992, 1993, 1995, 1997 Free Software Foundation, Inc.\n-\n-# This program is free software; you can redistribute it and/or modify\n-# it under the terms of the GNU General Public License as published by\n-# the Free Software Foundation; either version 2 of the License, or\n-# (at your option) any later version.\n-# \n-# This program is distributed in the hope that it will be useful,\n-# but WITHOUT ANY WARRANTY; without even the implied warranty of\n-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-# GNU General Public License for more details.\n-# \n-# You should have received a copy of the GNU General Public License\n-# along with this program; if not, write to the Free Software\n-# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA. \n-\n-# This file was written by Rob Savoye. (rob@cygnus.com)\n-# Modified and maintained by Jeffrey Wheat (cassidy@cygnus.com)\n-\n-#\n-# These tests come from Torbjorn Granlund (tege@cygnus.com)\n-# Fortran torture test suite.\n-#\n-\n-if $tracelevel then {\n-    strace $tracelevel\n-}\n-\n-# load support procs\n-load_lib f-torture.exp\n-\n-#\n-# main test loop\n-#\n-\n-foreach src [lsort [glob -nocomplain $srcdir/$subdir/*.f]] {\n-    # If we're only testing specific files and this isn't one of them, skip it.\n-    if ![runtest_file_p $runtests $src] then {\n-\tcontinue\n-    }\n-\n-    f-torture-execute $src\n-}\n-\n-foreach src [lsort [glob -nocomplain $srcdir/$subdir/*.F]] {\n-    # If we're only testing specific files and this isn't one of them, skip it.\n-    if ![runtest_file_p $runtests $src] then {\n-\tcontinue\n-    }\n-\n-    f-torture-execute $src\n-}"}, {"sha": "de388f181b09cb85ed7f717fd2d55f5bb96dde81", "filename": "gcc/testsuite/g77.f-torture/execute/exp.f", "status": "removed", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Fexp.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Fexp.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Fexp.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,3 +0,0 @@\n-      a = 2**-2*1.\n-      if (a .ne. .25) call abort\n-      end"}, {"sha": "a5f876e14bae71c0b31f77e6a6fdaa3709af5031", "filename": "gcc/testsuite/g77.f-torture/execute/f90-intrinsic-bit.f", "status": "removed", "additions": 0, "deletions": 458, "changes": 458, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Ff90-intrinsic-bit.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Ff90-intrinsic-bit.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Ff90-intrinsic-bit.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,458 +0,0 @@\n-c  f90-intrinsic-bit.f\n-c\n-c Test Fortran 90 \n-c  * intrinsic bit manipulation functions - Section 13.10.10\n-c  * bitcopy subroutine - Section 13.9.3 \n-c David Billinghurst <David.Billinghurst@riotinto.com>\n-c\n-c Notes: \n-c  * g77 only supports scalar arguments\n-c  * third argument of ISHFTC is not optional in g77\n-\n-      logical fail\n-      integer   i, i2, ia, i3\n-      integer*2 j, j2, j3, ja\n-      integer*1 k, k2, k3, ka\n-      integer*8 m, m2, m3, ma\n-\n-      common /flags/ fail\n-      fail = .false.\n-\n-c     BIT_SIZE - Section 13.13.16\n-c     Determine BIT_SIZE by counting the bits \n-      ia = 0\n-      i = 0\n-      i = not(i)\n-      do while ( (i.ne.0) .and. (ia.lt.127) ) \n-         ia = ia + 1\n-         i = ishft(i,-1)\n-      end do\n-      call c_i(BIT_SIZE(i),ia,'BIT_SIZE(integer)')\n-      ja = 0\n-      j = 0\n-      j = not(j)\n-      do while  ( (j.ne.0) .and. (ja.lt.127) ) \n-         ja = ja + 1\n-         j = ishft(j,-1)\n-      end do\n-      call c_i2(BIT_SIZE(j),ja,'BIT_SIZE(integer*2)')\n-      ka = 0\n-      k = 0\n-      k = not(k)\n-      do while ( (k.ne.0) .and. (ka.lt.127) )\n-         ka = ka + 1\n-         k = ishft(k,-1)\n-      end do\n-      call c_i1(BIT_SIZE(k),ka,'BIT_SIZE(integer*1)')\n-      ma = 0\n-      m = 0\n-      m = not(m)\n-      do while ( (m.ne.0) .and. (ma.lt.127) )\n-         ma = ma + 1\n-         m = ishft(m,-1)\n-      end do\n-      call c_i8(BIT_SIZE(m),ma,'BIT_SIZE(integer*8)')\n-\n-c     BTEST  - Section 13.13.17\n-      j  = 7\n-      j2 = 3\n-      k  = 7\n-      k2 = 3\n-      m  = 7\n-      m2 = 3\n-      call c_l(BTEST(7,3),.true.,'BTEST(integer,integer)')\n-      call c_l(BTEST(7,j2),.true.,'BTEST(integer,integer*2)')\n-      call c_l(BTEST(7,k2),.true.,'BTEST(integer,integer*1)')\n-      call c_l(BTEST(7,m2),.true.,'BTEST(integer,integer*8)')\n-      call c_l(BTEST(j,3),.true.,'BTEST(integer*2,integer)')\n-      call c_l(BTEST(j,j2),.true.,'BTEST(integer*2,integer*2)')\n-      call c_l(BTEST(j,k2),.true.,'BTEST(integer*2,integer*1)')\n-      call c_l(BTEST(j,m2),.true.,'BTEST(integer*2,integer*8)')\n-      call c_l(BTEST(k,3),.true.,'BTEST(integer*1,integer)')\n-      call c_l(BTEST(k,j2),.true.,'BTEST(integer*1,integer*2)')\n-      call c_l(BTEST(k,k2),.true.,'BTEST(integer*1,integer*1)')\n-      call c_l(BTEST(k,m2),.true.,'BTEST(integer*1,integer*8)')\n-      call c_l(BTEST(m,3),.true.,'BTEST(integer*8,integer)')\n-      call c_l(BTEST(m,j2),.true.,'BTEST(integer*8,integer*2)')\n-      call c_l(BTEST(m,k2),.true.,'BTEST(integer*8,integer*1)')\n-      call c_l(BTEST(m,m2),.true.,'BTEST(integer*8,integer*8)')\n- \n-c     IAND   - Section 13.13.40\n-      j  = 3\n-      j2 = 1\n-      ja = 1\n-      k  = 3\n-      k2 = 1\n-      ka = 1\n-      m  = 3\n-      m2 = 1\n-      ma = 1\n-      call c_i(IAND(3,1),1,'IAND(integer,integer)')\n-      call c_i2(IAND(j,j2),ja,'IAND(integer*2,integer*2)')\n-      call c_i1(IAND(k,k2),ka,'IAND(integer*1,integer*1)')\n-      call c_i8(IAND(m,m2),ma,'IAND(integer*8,integer*8)')\n-\n-\n-c     IBCLR  - Section 13.13.41\n-      j  = 14\n-      j2 = 1\n-      ja = 12\n-      k  = 14\n-      k2 = 1\n-      ka = 12\n-      m  = 14\n-      m2 = 1\n-      ma = 12\n-      call c_i(IBCLR(14,1),12,'IBCLR(integer,integer)')\n-      call c_i(IBCLR(14,j2),12,'IBCLR(integer,integer*2)')\n-      call c_i(IBCLR(14,k2),12,'IBCLR(integer,integer*1)')\n-      call c_i(IBCLR(14,m2),12,'IBCLR(integer,integer*8)')\n-      call c_i2(IBCLR(j,1),ja,'IBCLR(integer*2,integer)')\n-      call c_i2(IBCLR(j,j2),ja,'IBCLR(integer*2,integer*2)')\n-      call c_i2(IBCLR(j,k2),ja,'IBCLR(integer*2,integer*1)')\n-      call c_i2(IBCLR(j,m2),ja,'IBCLR(integer*2,integer*8)')\n-      call c_i1(IBCLR(k,1),ka,'IBCLR(integer*1,integer)')\n-      call c_i1(IBCLR(k,j2),ka,'IBCLR(integer*1,integer*2)')\n-      call c_i1(IBCLR(k,k2),ka,'IBCLR(integer*1,integer*1)')\n-      call c_i1(IBCLR(k,m2),ka,'IBCLR(integer*1,integer*8)')\n-      call c_i8(IBCLR(m,1),ma,'IBCLR(integer*8,integer)')\n-      call c_i8(IBCLR(m,j2),ma,'IBCLR(integer*8,integer*2)')\n-      call c_i8(IBCLR(m,k2),ma,'IBCLR(integer*8,integer*1)')\n-      call c_i8(IBCLR(m,m2),ma,'IBCLR(integer*8,integer*8)')\n-\n-c     IBSET  - Section 13.13.43\n-      j  = 12\n-      j2 = 1\n-      ja = 14\n-      k  = 12\n-      k2 = 1\n-      ka = 14\n-      m  = 12\n-      m2 = 1\n-      ma = 14\n-      call c_i(IBSET(12,1),14,'IBSET(integer,integer)')\n-      call c_i(IBSET(12,j2),14,'IBSET(integer,integer*2)')\n-      call c_i(IBSET(12,k2),14,'IBSET(integer,integer*1)')\n-      call c_i(IBSET(12,m2),14,'IBSET(integer,integer*8)')\n-      call c_i2(IBSET(j,1),ja,'IBSET(integer*2,integer)')\n-      call c_i2(IBSET(j,j2),ja,'IBSET(integer*2,integer*2)')\n-      call c_i2(IBSET(j,k2),ja,'IBSET(integer*2,integer*1)')\n-      call c_i2(IBSET(j,m2),ja,'IBSET(integer*2,integer*8)')\n-      call c_i1(IBSET(k,1),ka,'IBSET(integer*1,integer)')\n-      call c_i1(IBSET(k,j2),ka,'IBSET(integer*1,integer*2)')\n-      call c_i1(IBSET(k,k2),ka,'IBSET(integer*1,integer*1)')\n-      call c_i1(IBSET(k,m2),ka,'IBSET(integer*1,integer*8)')\n-      call c_i8(IBSET(m,1),ma,'IBSET(integer*8,integer)')\n-      call c_i8(IBSET(m,j2),ma,'IBSET(integer*8,integer*2)')\n-      call c_i8(IBSET(m,k2),ma,'IBSET(integer*8,integer*1)')\n-      call c_i8(IBSET(m,m2),ma,'IBSET(integer*8,integer*8)')\n-\n-c     IEOR   - Section 13.13.45\n-      j  = 3\n-      j2 = 1\n-      ja = 2\n-      k  = 3\n-      k2 = 1\n-      ka = 2\n-      m  = 3\n-      m2 = 1\n-      ma = 2\n-      call c_i(IEOR(3,1),2,'IEOR(integer,integer)')\n-      call c_i2(IEOR(j,j2),ja,'IEOR(integer*2,integer*2)')\n-      call c_i1(IEOR(k,k2),ka,'IEOR(integer*1,integer*1)')\n-      call c_i8(IEOR(m,m2),ma,'IEOR(integer*8,integer*8)')\n-\n-c     ISHFT  - Section 13.13.49\n-      i  = 3\n-      i2 = 1\n-      i3 = 0\n-      ia = 6\n-      j  = 3\n-      j2 = 1\n-      j3 = 0\n-      ja = 6\n-      k  = 3\n-      k2 = 1\n-      k3 = 0\n-      ka = 6\n-      m  = 3\n-      m2 = 1\n-      m3 = 0\n-      ma = 6\n-      call c_i(ISHFT(i,i2),ia,'ISHFT(integer,integer)')\n-      call c_i(ISHFT(i,BIT_SIZE(i)),i3,'ISHFT(integer,integer) 2')\n-      call c_i(ISHFT(i,-BIT_SIZE(i)),i3,'ISHFT(integer,integer) 3')\n-      call c_i(ISHFT(i,0),i,'ISHFT(integer,integer) 4')\n-      call c_i2(ISHFT(j,j2),ja,'ISHFT(integer*2,integer*2)')\n-      call c_i2(ISHFT(j,BIT_SIZE(j)),j3,\n-     $     'ISHFT(integer*2,integer*2) 2')\n-      call c_i2(ISHFT(j,-BIT_SIZE(j)),j3,\n-     $     'ISHFT(integer*2,integer*2) 3')\n-      call c_i2(ISHFT(j,0),j,'ISHFT(integer*2,integer*2) 4')\n-      call c_i1(ISHFT(k,k2),ka,'ISHFT(integer*1,integer*1)')\n-      call c_i1(ISHFT(k,BIT_SIZE(k)),k3,\n-     $     'ISHFT(integer*1,integer*1) 2')\n-      call c_i1(ISHFT(k,-BIT_SIZE(k)),k3,\n-     $     'ISHFT(integer*1,integer*1) 3')\n-      call c_i1(ISHFT(k,0),k,'ISHFT(integer*1,integer*1) 4')\n-      call c_i8(ISHFT(m,m2),ma,'ISHFT(integer*8,integer*8)')\n-      call c_i8(ISHFT(m,BIT_SIZE(m)),m3,\n-     $     'ISHFT(integer*8,integer*8) 2')\n-      call c_i8(ISHFT(m,-BIT_SIZE(m)),m3,\n-     $     'ISHFT(integer*8,integer*8) 3')\n-      call c_i8(ISHFT(m,0),m,'ISHFT(integer*8,integer*8) 4')\n-\n-c     ISHFTC - Section 13.13.50\n-c     The third argument is not optional in g77\n-      i  = 3\n-      i2 = 2\n-      i3 = 3\n-      ia = 5\n-      j  = 3\n-      j2 = 2\n-      j3 = 3\n-      ja = 5\n-      k  = 3\n-      k2 = 2\n-      k3 = 3\n-      ka = 5\n-      m2 = 2\n-      m3 = 3\n-      ma = 5\n-c     test all the combinations of arguments\n-      call c_i(ISHFTC(i,i2,i3),5,'ISHFTC(integer,integer,integer)')\n-      call c_i(ISHFTC(i,i2,j3),5,'ISHFTC(integer,integer,integer*2)')\n-      call c_i(ISHFTC(i,i2,k3),5,'ISHFTC(integer,integer,integer*1)')\n-      call c_i(ISHFTC(i,i2,m3),5,'ISHFTC(integer,integer,integer*8)')\n-      call c_i(ISHFTC(i,j2,i3),5,'ISHFTC(integer,integer*2,integer)')\n-      call c_i(ISHFTC(i,j2,j3),5,'ISHFTC(integer,integer*2,integer*2)')\n-      call c_i(ISHFTC(i,j2,k3),5,'ISHFTC(integer,integer*2,integer*1)')\n-      call c_i(ISHFTC(i,j2,m3),5,'ISHFTC(integer,integer*2,integer*8)')\n-      call c_i(ISHFTC(i,k2,i3),5,'ISHFTC(integer,integer*1,integer)')\n-      call c_i(ISHFTC(i,k2,j3),5,'ISHFTC(integer,integer*1,integer*2)')\n-      call c_i(ISHFTC(i,k2,k3),5,'ISHFTC(integer,integer*1,integer*1)')\n-      call c_i(ISHFTC(i,k2,m3),5,'ISHFTC(integer,integer*1,integer*8)')\n-      call c_i(ISHFTC(i,m2,i3),5,'ISHFTC(integer,integer*8,integer)')\n-      call c_i(ISHFTC(i,m2,j3),5,'ISHFTC(integer,integer*8,integer*2)')\n-      call c_i(ISHFTC(i,m2,k3),5,'ISHFTC(integer,integer*8,integer*1)')\n-      call c_i(ISHFTC(i,m2,m3),5,'ISHFTC(integer,integer*8,integer*8)')\n-\n-      call c_i2(ISHFTC(j,i2,i3),ja,'ISHFTC(integer*2,integer,integer)')\n-      call c_i2(ISHFTC(j,i2,j3),ja,\n-     $     'ISHFTC(integer*2,integer,integer*2)')\n-      call c_i2(ISHFTC(j,i2,k3),ja,\n-     $     'ISHFTC(integer*2,integer,integer*1)')\n-      call c_i2(ISHFTC(j,i2,m3),ja,\n-     $     'ISHFTC(integer*2,integer,integer*8)')\n-      call c_i2(ISHFTC(j,j2,i3),ja,\n-     $     'ISHFTC(integer*2,integer*2,integer)')\n-      call c_i2(ISHFTC(j,j2,j3),ja,\n-     $     'ISHFTC(integer*2,integer*2,integer*2)')\n-      call c_i2(ISHFTC(j,j2,k3),ja,\n-     $     'ISHFTC(integer*2,integer*2,integer*1)')\n-      call c_i2(ISHFTC(j,j2,m3),ja,\n-     $     'ISHFTC(integer*2,integer*2,integer*8)')\n-      call c_i2(ISHFTC(j,k2,i3),ja,\n-     $     'ISHFTC(integer*2,integer*1,integer)')\n-      call c_i2(ISHFTC(j,k2,j3),ja,\n-     $     'ISHFTC(integer*2,integer*1,integer*2)')\n-      call c_i2(ISHFTC(j,k2,k3),ja,\n-     $     'ISHFTC(integer*2,integer*1,integer*1)')\n-      call c_i2(ISHFTC(j,k2,m3),ja,\n-     $     'ISHFTC(integer*2,integer*1,integer*8)')\n-      call c_i2(ISHFTC(j,m2,i3),ja,\n-     $     'ISHFTC(integer*2,integer*8,integer)')\n-      call c_i2(ISHFTC(j,m2,j3),ja,\n-     $     'ISHFTC(integer*2,integer*8,integer*2)')\n-      call c_i2(ISHFTC(j,m2,k3),ja,\n-     $     'ISHFTC(integer*2,integer*8,integer*1)')\n-      call c_i2(ISHFTC(j,m2,m3),ja,\n-     $     'ISHFTC(integer*2,integer*8,integer*8)')\n-\n-      call c_i1(ISHFTC(k,i2,i3),ka,'ISHFTC(integer*1,integer,integer)')\n-      call c_i1(ISHFTC(k,i2,j3),ka,\n-     $     'ISHFTC(integer*1,integer,integer*2)')\n-      call c_i1(ISHFTC(k,i2,k3),ka,\n-     $     'ISHFTC(integer*1,integer,integer*1)')\n-      call c_i1(ISHFTC(k,i2,m3),ka,\n-     $     'ISHFTC(integer*1,integer,integer*8)')\n-      call c_i1(ISHFTC(k,j2,i3),ka,\n-     $     'ISHFTC(integer*1,integer*2,integer)')\n-      call c_i1(ISHFTC(k,j2,j3),ka,\n-     $     'ISHFTC(integer*1,integer*2,integer*2)')\n-      call c_i1(ISHFTC(k,j2,k3),ka,\n-     $     'ISHFTC(integer*1,integer*2,integer*1)')\n-      call c_i1(ISHFTC(k,j2,m3),ka,\n-     $     'ISHFTC(integer*1,integer*2,integer*8)')\n-      call c_i1(ISHFTC(k,k2,i3),ka,\n-     $     'ISHFTC(integer*1,integer*1,integer)')\n-      call c_i1(ISHFTC(k,k2,j3),ka,\n-     $     'ISHFTC(integer*1,integer*1,integer*2)')\n-      call c_i1(ISHFTC(k,k2,k3),ka,\n-     $     'ISHFTC(integer*1,integer*1,integer*1)')\n-      call c_i1(ISHFTC(k,k2,m3),ka,\n-     $     'ISHFTC(integer*1,integer*1,integer*8)')\n-      call c_i1(ISHFTC(k,m2,i3),ka,\n-     $     'ISHFTC(integer*1,integer*8,integer)')\n-      call c_i1(ISHFTC(k,m2,j3),ka,\n-     $     'ISHFTC(integer*1,integer*8,integer*2)')\n-      call c_i1(ISHFTC(k,m2,k3),ka,\n-     $     'ISHFTC(integer*1,integer*8,integer*1)')\n-      call c_i1(ISHFTC(k,m2,m3),ka,\n-     $     'ISHFTC(integer*1,integer*8,integer*8)')\n-\n-      call c_i8(ISHFTC(m,i2,i3),ma,'ISHFTC(integer*8,integer,integer)')\n-      call c_i8(ISHFTC(m,i2,j3),ma,\n-     $     'ISHFTC(integer*8,integer,integer*2)')\n-      call c_i8(ISHFTC(m,i2,k3),ma,\n-     $     'ISHFTC(integer*8,integer,integer*1)')\n-      call c_i8(ISHFTC(m,i2,m3),ma,\n-     $     'ISHFTC(integer*8,integer,integer*8)')\n-      call c_i8(ISHFTC(m,j2,i3),ma,\n-     $     'ISHFTC(integer*8,integer*2,integer)')\n-      call c_i8(ISHFTC(m,j2,j3),ma,\n-     $     'ISHFTC(integer*8,integer*2,integer*2)')\n-      call c_i8(ISHFTC(m,j2,k3),ma,\n-     $     'ISHFTC(integer*8,integer*2,integer*1)')\n-      call c_i8(ISHFTC(m,j2,m3),ma,\n-     $     'ISHFTC(integer*8,integer*2,integer*8)')\n-      call c_i8(ISHFTC(m,k2,i3),ma,\n-     $     'ISHFTC(integer*8,integer*1,integer)')\n-      call c_i8(ISHFTC(m,k2,j3),ma,\n-     $     'ISHFTC(integer*1,integer*8,integer*2)')\n-      call c_i8(ISHFTC(m,k2,k3),ma,\n-     $     'ISHFTC(integer*1,integer*8,integer*1)')\n-      call c_i8(ISHFTC(m,k2,m3),ma,\n-     $     'ISHFTC(integer*1,integer*8,integer*8)')\n-      call c_i8(ISHFTC(m,m2,i3),ma,\n-     $     'ISHFTC(integer*8,integer*8,integer)')\n-      call c_i8(ISHFTC(m,m2,j3),ma,\n-     $     'ISHFTC(integer*8,integer*8,integer*2)')\n-      call c_i8(ISHFTC(m,m2,k3),ma,\n-     $     'ISHFTC(integer*8,integer*8,integer*1)')\n-      call c_i8(ISHFTC(m,m2,m3),ma,\n-     $     'ISHFTC(integer*8,integer*8,integer*8)')\n-\n-c     test the corner cases\n-      call c_i(ISHFTC(i,BIT_SIZE(i),BIT_SIZE(i)),i,\n-     $     'ISHFTC(i,BIT_SIZE(i),BIT_SIZE(i)) i = integer')\n-      call c_i(ISHFTC(i,0,BIT_SIZE(i)),i,\n-     $     'ISHFTC(i,0,BIT_SIZE(i)) i = integer')\n-      call c_i(ISHFTC(i,-BIT_SIZE(i),BIT_SIZE(i)),i,\n-     $     'ISHFTC(i,-BIT_SIZE(i),BIT_SIZE(i)) i = integer')\n-      call c_i2(ISHFTC(j,BIT_SIZE(j),BIT_SIZE(j)),j,\n-     $     'ISHFTC(j,BIT_SIZE(j),BIT_SIZE(j)) j = integer*2')\n-      call c_i2(ISHFTC(j,0,BIT_SIZE(j)),j,\n-     $     'ISHFTC(j,0,BIT_SIZE(j)) j = integer*2')\n-      call c_i2(ISHFTC(j,-BIT_SIZE(j),BIT_SIZE(j)),j,\n-     $     'ISHFTC(j,-BIT_SIZE(j),BIT_SIZE(j)) j = integer*2')\n-      call c_i1(ISHFTC(k,BIT_SIZE(k),BIT_SIZE(k)),k,\n-     $     'ISHFTC(k,BIT_SIZE(k),BIT_SIZE(k)) k = integer*1')\n-      call c_i1(ISHFTC(k,0,BIT_SIZE(k)),k,\n-     $     'ISHFTC(k,0,BIT_SIZE(k)) k = integer*1')\n-      call c_i1(ISHFTC(k,-BIT_SIZE(k),BIT_SIZE(k)),k,\n-     $     'ISHFTC(k,-BIT_SIZE(k),BIT_SIZE(k)) k = integer*1')\n-      call c_i8(ISHFTC(m,BIT_SIZE(m),BIT_SIZE(m)),m,\n-     $     'ISHFTC(m,BIT_SIZE(m),BIT_SIZE(m)) m = integer*8')\n-      call c_i8(ISHFTC(m,0,BIT_SIZE(m)),m,\n-     $     'ISHFTC(m,0,BIT_SIZE(m)) m = integer*8')\n-      call c_i8(ISHFTC(m,-BIT_SIZE(m),BIT_SIZE(m)),m,\n-     $     'ISHFTC(m,-BIT_SIZE(m),BIT_SIZE(m)) m = integer*8')\n-\n-c     MVBITS - Section 13.13.74\n-      i = 6\n-      call MVBITS(7,2,2,i,0)\n-      call c_i(i,5,'MVBITS 1')\n-      j = 6\n-      j2 = 7\n-      ja = 5\n-      call MVBITS(j2,2,2,j,0)\n-      call c_i2(j,ja,'MVBITS 2')\n-      k = 6\n-      k2 = 7\n-      ka = 5\n-      call MVBITS(k2,2,2,k,0)\n-      call c_i1(k,ka,'MVBITS 3')\n-      m = 6\n-      m2 = 7\n-      ma = 5\n-      call MVBITS(m2,2,2,m,0)\n-      call c_i8(m,ma,'MVBITS 4')\n-\n-c     NOT    - Section 13.13.77\n-c     Rather than assume integer sizes, mask off high bits\n-      j  = 21\n-      j2 = 31\n-      ja = 10\n-      k  = 21\n-      k2 = 31\n-      ka = 10\n-      m  = 21\n-      m2 = 31\n-      ma = 10\n-      call c_i(IAND(NOT(21),31),10,'NOT(integer)')\n-      call c_i2(IAND(NOT(j),j2),ja,'NOT(integer*2)')\n-      call c_i1(IAND(NOT(k),k2),ka,'NOT(integer*1)')\n-      call c_i8(IAND(NOT(m),m2),ma,'NOT(integer*8)')\n-\n-      if ( fail ) call abort()\n-      end\n-\n-      subroutine failure(label)\n-c     Report failure and set flag\n-      character*(*) label\n-      logical fail\n-      common /flags/ fail\n-      write(6,'(a,a,a)') 'Test ',label,' FAILED'\n-      fail = .true.\n-      end\n-\n-      subroutine c_l(i,j,label)\n-c     Check if LOGICAL i equals j, and fail otherwise\n-      logical i,j\n-      character*(*) label\n-      if ( i .eqv. j ) then\n-         call failure(label)\n-         write(6,*) 'Got ',i,' expected ', j\n-      end if\n-      end\n-\n-      subroutine c_i(i,j,label)\n-c     Check if INTEGER i equals j, and fail otherwise\n-      integer i,j\n-      character*(*) label\n-      if ( i .ne. j ) then\n-         call failure(label)\n-         write(6,*) 'Got ',i,' expected ', j\n-      end if\n-      end\n-\n-      subroutine c_i2(i,j,label)\n-c     Check if INTEGER*2 i equals j, and fail otherwise\n-      integer*2 i,j\n-      character*(*) label\n-      if ( i .ne. j ) then\n-         call failure(label)\n-         write(6,*) 'Got ',i,' expected ', j\n-      end if\n-      end\n-\n-      subroutine c_i1(i,j,label)\n-c     Check if INTEGER*1 i equals j, and fail otherwise\n-      integer*1 i,j\n-      character*(*) label\n-      if ( i .ne. j ) then\n-         call failure(label)\n-         write(6,*) 'Got ',i,' expected ', j\n-      end if\n-      end\n-\n-      subroutine c_i8(i,j,label)\n-c     Check if INTEGER*8 i equals j, and fail otherwise\n-      integer*8 i,j\n-      character*(*) label\n-      if ( i .ne. j ) then\n-         call failure(label)\n-         write(6,*) 'Got ',i,' expected ', j\n-      end if\n-      end"}, {"sha": "400e3fa679667b15e8e4f58692629e4b92ee7294", "filename": "gcc/testsuite/g77.f-torture/execute/f90-intrinsic-mathematical.f", "status": "removed", "additions": 0, "deletions": 137, "changes": 137, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Ff90-intrinsic-mathematical.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Ff90-intrinsic-mathematical.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Ff90-intrinsic-mathematical.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,137 +0,0 @@\n-c  f90-intrinsic-mathematical.f\n-c\n-c Test Fortran 90 intrinsic mathematical functions - Section 13.10.3 and\n-c 13.13 \n-c     David Billinghurst <David.Billinghurst@riotinto.com>\n-c\n-c Notes:\n-c  * g77 does not fully comply with F90.  Noncompliances noted in comments.\n-c  * Section 13.12: Specific names for intrinsic functions tested in\n-c intrinsic77.f\n-\n-      logical fail\n-      common /flags/ fail\n-      fail = .false.\n-\n-c     ACOS - Section 13.13.3\n-      call c_r(ACOS(0.54030231),1.0,'ACOS(real)')\n-      call c_d(ACOS(0.54030231d0),1.d0,'ACOS(double)')\n-\n-c     ASIN - Section 13.13.12\n-      call c_r(ASIN(0.84147098),1.0,'ASIN(real)')\n-      call c_d(ASIN(0.84147098d0),1.d0,'ASIN(double)')\n-\n-c     ATAN - Section 13.13.14\n-      call c_r(ATAN(1.5574077),1.0,'ATAN(real)')\n-      call c_d(ATAN(1.5574077d0),1.d0,'ATAN(double)')\n-      \n-c     ATAN2 - Section 13.13.15\n-      call c_r(ATAN2(1.5574077,1.),1.0,'ATAN2(real)')\n-      call c_d(ATAN2(1.5574077d0,1.d0),1.d0,'ATAN2(double)')\n-\n-c     COS - Section 13.13.22\n-      call c_r(COS(1.0),0.54030231,'COS(real)')\n-      call c_d(COS(1.d0),0.54030231d0,'COS(double)')\n-      call c_c(COS((1.,0.)),(0.54030231,0.),'COS(complex)')\n-      call c_z(COS((1.d0,0.d0)),(0.54030231d0,0.d0),\n-     $     'COS(double complex)')\n-\n-c     COSH - Section 13.13.23\n-      call c_r(COSH(1.0),1.5430806,'COSH(real)')\n-      call c_d(COSH(1.d0),1.5430806d0,'COSH(double)')\n-\n-c     EXP - Section 13.13.34\n-      call c_r(EXP(1.0),2.7182818,'EXP(real)')\n-      call c_d(EXP(1.d0),2.7182818d0,'EXP(double)')\n-      call c_c(EXP((1.,0.)),(2.7182818,0.),'EXP(complex)')\n-      call c_z(EXP((1.d0,0.d0)),(2.7182818d0,0.d0),\n-     $     'EXP(double complex)')\n-\n-c     LOG - Section 13.13.59\n-      call c_r(LOG(10.0),2.3025851,'LOG(real)')\n-      call c_d(LOG(10.d0),2.3025851d0,'LOG(double)')\n-      call c_c(LOG((10.,0.)),(2.3025851,0.),'LOG(complex)')\n-      call c_z(LOG((10.d0,0.)),(2.3025851d0,0.d0),\n-     $     'LOG(double complex)')\n-\n-c     LOG10 - Section 13.13.60\n-      call c_r(LOG10(10.0),1.0,'LOG10(real)')\n-      call c_d(LOG10(10.d0),1.d0,'LOG10(double)')\n-\n-c     SIN - Section 13.13.97\n-      call c_r(SIN(1.0),0.84147098,'SIN(real)')\n-      call c_d(SIN(1.d0),0.84147098d0,'SIN(double)')\n-      call c_c(SIN((1.,0.)),(0.84147098,0.),'SIN(complex)')\n-      call c_z(SIN((1.d0,0.d0)),(0.84147098d0,0.d0),\n-     $     'SIN(double complex)')\n-\n-c     SINH - Section 13.13.98\n-      call c_r(SINH(1.0),1.175201,'SINH(real)')\n-      call c_d(SINH(1.d0),1.175201d0,'SINH(double)')\n-\n-c     SQRT - Section 13.13.102\n-      call c_r(SQRT(4.0),2.0,'SQRT(real)')\n-      call c_d(SQRT(4.d0),2.d0,'SQRT(double)')\n-      call c_c(SQRT((4.,0.)),(2.,0.),'SQRT(complex)')\n-      call c_z(SQRT((4.d0,0.)),(2.d0,0.),\n-     $     'SQRT(double complex)')\n- \n-c     TAN - Section 13.13.105\n-      call c_r(TAN(1.0),1.5574077,'TAN(real)')\n-      call c_d(TAN(1.d0),1.5574077d0,'TAN(double)')\n-     \n-c     TANH - Section 13.13.106\n-      call c_r(TANH(1.0),0.76159416,'TANH(real)')\n-      call c_d(TANH(1.d0),0.76159416d0,'TANH(double)')\n-\n-      if ( fail ) call abort()\n-      end\n-\n-      subroutine failure(label)\n-c     Report failure and set flag\n-      character*(*) label\n-      logical fail\n-      common /flags/ fail\n-      write(6,'(a,a,a)') 'Test ',label,' FAILED'\n-      fail = .true.\n-      end\n-\n-      subroutine c_r(a,b,label)\n-c     Check if REAL a equals b, and fail otherwise\n-      real a, b\n-      character*(*) label\n-      if ( abs(a-b) .gt. 1.0e-5 ) then\n-         call failure(label)\n-         write(6,*) 'Got ',a,' expected ', b\n-      end if\n-      end\n-\n-      subroutine c_d(a,b,label)\n-c     Check if DOUBLE PRECISION a equals b, and fail otherwise\n-      double precision a, b\n-      character*(*) label\n-      if ( abs(a-b) .gt. 1.0d-5 ) then\n-         call failure(label)\n-         write(6,*) 'Got ',a,' expected ', b\n-      end if\n-      end\n-\n-      subroutine c_c(a,b,label)\n-c     Check if COMPLEX a equals b, and fail otherwise\n-      complex a, b\n-      character*(*) label\n-      if ( abs(a-b) .gt. 1.0e-5 ) then\n-         call failure(label)\n-         write(6,*) 'Got ',a,' expected ', b\n-      end if\n-      end\n-\n-      subroutine c_z(a,b,label)\n-c     Check if COMPLEX a equals b, and fail otherwise\n-      double complex a, b\n-      character*(*) label\n-      if ( abs(a-b) .gt. 1.0d-5 ) then\n-         call failure(label)\n-         write(6,*) 'Got ',a,' expected ', b\n-      end if\n-      end"}, {"sha": "4428ca042d7d0af73105cbf73cfbb4b97ea4e5f0", "filename": "gcc/testsuite/g77.f-torture/execute/f90-intrinsic-numeric.f", "status": "removed", "additions": 0, "deletions": 282, "changes": 282, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Ff90-intrinsic-numeric.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Ff90-intrinsic-numeric.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Ff90-intrinsic-numeric.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,282 +0,0 @@\n-c  f90-intrinsic-numeric.f\n-c\n-c Test Fortran 90 intrinsic numeric functions - Section 13.10.2 and 13.13 \n-c     David Billinghurst <David.Billinghurst@riotinto.com>\n-c\n-c Notes:\n-c  * g77 does not fully comply with F90.  Noncompliances noted in comments.\n-c  * Section 13.12: Specific names for intrinsic functions tested in\n-c intrinsic77.f\n-\n-      logical fail\n-      integer*2 j, j2, ja\n-      integer*1 k, k2, ka\n-\n-      common /flags/ fail\n-      fail = .false.\n-\n-c     ABS - Section 13.13.1\n-      j = -9\n-      ja = 9\n-      k = j\n-      ka = ja\n-      call c_i(ABS(-7),7,'ABS(integer)')\n-      call c_i2(ABS(j),ja,'ABS(integer*2)')\n-      call c_i1(ABS(k),ka,'ABS(integer*1)')\n-      call c_r(ABS(-7.),7.,'ABS(real)')\n-      call c_d(ABS(-7.d0),7.d0,'ABS(double)')\n-      call c_r(ABS((3.,-4.)),5.0,'ABS(complex)')\n-      call c_d(ABS((3.d0,-4.d0)),5.0d0,'ABS(double complex)')\n-\n-c     AIMAG - Section 13.13.6\n-      call c_r(AIMAG((2.,-7.)),-7.,'AIMAG(complex)')\n-c     g77: AIMAG(double complex) does not comply with F90\n-c     call c_d(AIMAG((2.d0,-7.d0)),-7.d0,'AIMAG(double complex)')\n-\n-c     AINT - Section 13.13.7\n-      call c_r(AINT(2.783),2.0,'AINT(real) 1')\n-      call c_r(AINT(-2.783),-2.0,'AINT(real) 2')\n-      call c_d(AINT(2.783d0),2.0d0,'AINT(double precision) 1')\n-      call c_d(AINT(-2.783d0),-2.0d0,'AINT(double precision) 2')\n-c     Note:  g77 does not support optional argument KIND\n-\n-c     ANINT - Section 13.13.10\n-      call c_r(ANINT(2.783),3.0,'ANINT(real) 1')\n-      call c_r(ANINT(-2.783),-3.0,'ANINT(real) 2')\n-      call c_d(ANINT(2.783d0),3.0d0,'ANINT(double precision) 1')\n-      call c_d(ANINT(-2.783d0),-3.0d0,'ANINT(double precision) 2')  \n-c     Note:  g77 does not support optional argument KIND\n-\n-c     CEILING - Section 13.13.18\n-c     Not implemented\n-\n-c     CMPLX - Section 13.13.20\n-      j = 1\n-      ja = 2\n-      k = 1\n-      ka = 2\n-      call c_c(CMPLX(1),(1.,0.),'CMPLX(integer)')\n-      call c_c(CMPLX(1,2),(1.,2.),'CMPLX(integer, integer)')\n-      call c_c(CMPLX(j),(1.,0.),'CMPLX(integer*2)')\n-      call c_c(CMPLX(j,ja),(1.,2.),'CMPLX(integer*2, integer*2)')\n-      call c_c(CMPLX(k),(1.,0.),'CMPLX(integer*1)')\n-      call c_c(CMPLX(k,ka),(1.,2.),'CMPLX(integer*1, integer*1)')\n-      call c_c(CMPLX(1.),(1.,0.),'CMPLX(real)')\n-      call c_c(CMPLX(1.d0),(1.,0.),'CMPLX(double)')\n-      call c_c(CMPLX(1.d0,2.d0),(1.,2.),'CMPLX(double,double)')\n-      call c_c(CMPLX(1.,2.),(1.,2.),'CMPLX(complex)')\n-      call c_c(CMPLX(1.d0,2.d0),(1.,2.),'CMPLX(double complex)')\n-c     NOTE: g77 does not support optional argument KIND\n-   \n-c     CONJG - Section 13.13.21\n-      call c_c(CONJG((2.,-7.)),(2.,7.),'CONJG(complex)')\n-      call c_z(CONJG((2.d0,-7.d0)),(2.d0,7.d0),'CONJG(double complex)')\n-\n-c     DBLE - Section 13.13.27\n-      j = 5\n-      k = 5\n-      call c_d(DBLE(5),5.0d0,'DBLE(integer)')\n-      call c_d(DBLE(j),5.0d0,'DBLE(integer*2)')\n-      call c_d(DBLE(k),5.0d0,'DBLE(integer*1)')\n-      call c_d(DBLE(5.),5.0d0,'DBLE(real)')\n-      call c_d(DBLE(5.0d0),5.0d0,'DBLE(double)')\n-      call c_d(DBLE((5.0,0.5)),5.0d0,'DBLE(complex)')\n-      call c_d(DBLE((5.0d0,0.5d0)),5.0d0,'DBLE(double complex)')\n-\n-c     DIM - Section 13.13.29\n-      j = -8\n-      j2 = -3\n-      ja = 0\n-      k = -8\n-      k2 = -3\n-      ka = 0\n-      call c_i(DIM(-8,-3),0,'DIM(integer)')\n-      call c_i2(DIM(j,j2),ja,'DIM(integer*2)')\n-      call c_i1(DIM(k,k2),ka,'DIM(integer*1)')\n-      call c_r(DIM(-8.,-3.),0.,'DIM(real,real)')\n-      call c_d(DIM(-8.d0,-3.d0),0.d0,'DIM(double,double)')\n- \n-c     DPROD - Section 13.13.31\n-      call c_d(DPROD(-8.,-3.),24.d0,'DPROD(real,real)')\n-     \n-c     FLOOR - Section 13.13.36\n-c     Not implemented\n-\n-c     INT - Section 13.13.47\n-      j = 5\n-      k = 5\n-      call c_i(INT(5),5,'INT(integer)')\n-      call c_i(INT(j),5,'INT(integer*2)')\n-      call c_i(INT(k),5,'INT(integer*1)')\n-      call c_i(INT(5.01),5,'INT(real)')\n-      call c_i(INT(5.01d0),5,'INT(double)')\n-c     Note: Does not accept optional second argument KIND\n-\n-c     MAX - Section 13.13.63\n-      j = 1\n-      j2 = 2\n-      ja = 2\n-      k = 1\n-      k2 = 2\n-      ka = 2\n-      call c_i(MAX(1,2,3),3,'MAX(integer,integer,integer)')\n-      call c_i2(MAX(j,j2),ja,'MAX(integer*2,integer*2)')\n-      call c_i1(MAX(k,k2),ka,'MAX(integer*1,integer*1)')\n-      call c_r(MAX(1.,2.,3.),3.,'MAX(real,real,real)')\n-      call c_d(MAX(1.d0,2.d0,3.d0),3.d0,'MAX(double,double,double)')\n-\n-c     MIN - Section 13.13.68\n-      j = 1\n-      j2 = 2\n-      ja = 1\n-      k = 1\n-      k2 = 2\n-      ka = 1\n-      call c_i(MIN(1,2,3),1,'MIN(integer,integer,integer)')\n-      call c_i2(MIN(j,j2),ja,'MIN(integer*2,integer*2)')\n-      call c_i1(MIN(k,k2),ka,'MIN(integer*1,integer*1)')\n-      call c_r(MIN(1.,2.,3.),1.,'MIN(real,real,real)')\n-      call c_d(MIN(1.d0,2.d0,3.d0),1.d0,'MIN(double,double,double)')\n-\n-c     MOD - Section 13.13.72\n-      call c_i(MOD(8,5),3,'MOD(integer,integer) 1')\n-      call c_i(MOD(-8,5),-3,'MOD(integer,integer) 2')\n-      call c_i(MOD(8,-5),3,'MOD(integer,integer) 3')\n-      call c_i(MOD(-8,-5),-3,'MOD(integer,integer) 4')\n-      j = 8\n-      j2 = 5\n-      ja = 3\n-      call c_i2(MOD(j,j2),ja,'MOD(integer*2,integer*2) 1')\n-      call c_i2(MOD(-j,j2),-ja,'MOD(integer*2,integer*2) 2')\n-      call c_i2(MOD(j,-j2),ja,'MOD(integer*2,integer*2) 3')\n-      call c_i2(MOD(-j,-j2),-ja,'MOD(integer*2,integer*2) 4')\n-      k = 8\n-      k2 = 5\n-      ka = 3\n-      call c_i1(MOD(k,k2),ka,'MOD(integer*1,integer*1) 1')\n-      call c_i1(MOD(-k,k2),-ka,'MOD(integer*1,integer*1) 2')\n-      call c_i1(MOD(k,-k2),ka,'MOD(integer*1,integer*1) 3')\n-      call c_i1(MOD(-k,-k2),-ka,'MOD(integer*1,integer*1) 4')\n-      call c_r(MOD(8.,5.),3.,'MOD(real,real) 1')\n-      call c_r(MOD(-8.,5.),-3.,'MOD(real,real) 2')\n-      call c_r(MOD(8.,-5.),3.,'MOD(real,real) 3')\n-      call c_r(MOD(-8.,-5.),-3.,'MOD(real,real) 4')\n-      call c_d(MOD(8.d0,5.d0),3.d0,'MOD(double,double) 1')\n-      call c_d(MOD(-8.d0,5.d0),-3.d0,'MOD(double,double) 2')\n-      call c_d(MOD(8.d0,-5.d0),3.d0,'MOD(double,double) 3')\n-      call c_d(MOD(-8.d0,-5.d0),-3.d0,'MOD(double,double) 4')\n-\n-c     MODULO - Section 13.13.73\n-c     Not implemented\n-\n-c     NINT - Section 13.13.76\n-      call c_i(NINT(2.783),3,'NINT(real)')\n-      call c_i(NINT(2.783d0),3,'NINT(double)')\n-c     Optional second argument KIND not implemented\n-\n-c     REAL - Section 13.13.86\n-      j = -2\n-      k = -2\n-      call c_r(REAL(-2),-2.0,'REAL(integer)')\n-      call c_r(REAL(j),-2.0,'REAL(integer*2)')\n-      call c_r(REAL(k),-2.0,'REAL(integer*1)')\n-      call c_r(REAL(-2.0),-2.0,'REAL(real)')\n-      call c_r(REAL(-2.0d0),-2.0,'REAL(double)')\n-      call c_r(REAL((-2.,9.)),-2.0,'REAL(complex)')\n-c     REAL(double complex) not implemented\n-c     call c_r(REAL((-2.d0,9.d0)),-2.0,'REAL(double complex)')\n-\n-c     SIGN - Section 13.13.96\n-      j = -3\n-      j2 = 2\n-      ja = 3\n-      k = -3\n-      k2 = 2\n-      ka = 3\n-      call c_i(SIGN(-3,2),3,'SIGN(integer)')\n-      call c_i2(SIGN(j,j2),ja,'SIGN(integer*2)')\n-      call c_i1(SIGN(k,k2),ka,'SIGN(integer*1)')\n-      call c_r(SIGN(-3.0,2.),3.,'SIGN(real,real)')\n-      call c_d(SIGN(-3.d0,2.d0),3.d0,'SIGN(double,double)')\n- \n-      if ( fail ) call abort()\n-      end\n-\n-      subroutine failure(label)\n-c     Report failure and set flag\n-      character*(*) label\n-      logical fail\n-      common /flags/ fail\n-      write(6,'(a,a,a)') 'Test ',label,' FAILED'\n-      fail = .true.\n-      end\n-\n-      subroutine c_i(i,j,label)\n-c     Check if INTEGER i equals j, and fail otherwise\n-      integer i,j\n-      character*(*) label\n-      if ( i .ne. j ) then\n-         call failure(label)\n-         write(6,*) 'Got ',i,' expected ', j\n-      end if\n-      end\n-\n-      subroutine c_i2(i,j,label)\n-c     Check if INTEGER*2 i equals j, and fail otherwise\n-      integer*2 i,j\n-      character*(*) label\n-      if ( i .ne. j ) then\n-         call failure(label)\n-         write(6,*) 'Got ',i,' expected ', j\n-      end if\n-      end\n-\n-      subroutine c_i1(i,j,label)\n-c     Check if INTEGER*1 i equals j, and fail otherwise\n-      integer*1 i,j\n-      character*(*) label\n-      if ( i .ne. j ) then\n-         call failure(label)\n-         write(6,*) 'Got ',i,' expected ', j\n-      end if\n-      end\n-\n-      subroutine c_r(a,b,label)\n-c     Check if REAL a equals b, and fail otherwise\n-      real a, b\n-      character*(*) label\n-      if ( abs(a-b) .gt. 1.0e-5 ) then\n-         call failure(label)\n-         write(6,*) 'Got ',a,' expected ', b\n-      end if\n-      end\n-\n-      subroutine c_d(a,b,label)\n-c     Check if DOUBLE PRECISION a equals b, and fail otherwise\n-      double precision a, b\n-      character*(*) label\n-      if ( abs(a-b) .gt. 1.0d-5 ) then\n-         call failure(label)\n-         write(6,*) 'Got ',a,' expected ', b\n-      end if\n-      end\n-\n-      subroutine c_c(a,b,label)\n-c     Check if COMPLEX a equals b, and fail otherwise\n-      complex a, b\n-      character*(*) label\n-      if ( abs(a-b) .gt. 1.0e-5 ) then\n-         call failure(label)\n-         write(6,*) 'Got ',a,' expected ', b\n-      end if\n-      end\n-\n-      subroutine c_z(a,b,label)\n-c     Check if COMPLEX a equals b, and fail otherwise\n-      double complex a, b\n-      character*(*) label\n-      if ( abs(a-b) .gt. 1.0d-5 ) then\n-         call failure(label)\n-         write(6,*) 'Got ',a,' expected ', b\n-      end if\n-      end"}, {"sha": "1fcc3bc4c9f87ccb02bb87e042a7e53c61c492ba", "filename": "gcc/testsuite/g77.f-torture/execute/int8421.f", "status": "removed", "additions": 0, "deletions": 20, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Fint8421.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Fint8421.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Fint8421.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,20 +0,0 @@\n-      integer*1 i1, i11\n-      integer*2 i2, i22\n-      integer   i, ii\n-      integer*4 i4, i44\n-      integer*8 i8, i88\n-      real      r, rr\n-      real*4    r4, r44\n-      double precision d, dd\n-      real*8    r8, r88\n-      parameter (i1 = 1, i2 = 2, i4 = 4, i = 5, i8 = i + i4*i2 + i2*i1)\n-      parameter (r = 3.0, r4 = 4.0, r8 = 8.d0, d = i8*r + r4*i2 + r8*i1)\n-      if (i8 .ne. 15   ) call abort\n-      if (d  .ne. 61.d0) call abort\n-      i11 = 1; i22 = 2; i44 = 4; ii = 5\n-      i88 = i + i4*i2 + i2*i1\n-      if (i88 .ne. i8) call abort\n-      rr = 3.0; r44 = 4.0; r88 = 8.0d0\n-      dd = i88*rr + r44*i22 + r88*i11\n-      if (dd .ne. d) call abort\n-      end"}, {"sha": "ec7b3324379063ef63ad26c34644d636619e6912", "filename": "gcc/testsuite/g77.f-torture/execute/intrinsic-f2c-z.f", "status": "removed", "additions": 0, "deletions": 94, "changes": 94, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Fintrinsic-f2c-z.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Fintrinsic-f2c-z.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Fintrinsic-f2c-z.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,94 +0,0 @@\n-c  intrinsic-f2c-z.f\n-c\n-c Test double complex intrinsics Z*.  \n-c These functions are f2c extensions\n-c\n-c     David Billinghurst <David.Billinghurst@riotinto.com>\n-c\n-      double complex z, a\n-      double precision x\n-      logical fail\n-      intrinsic zabs, zcos, zexp, zlog, zsin, zsqrt\n-      common /flags/ fail\n-      fail = .false.\n-\n-c     ZABS - Absolute value\n-      z = (3.0d0,-4.0d0)\n-      x = 5.0d0\n-      call c_d(ZABS(z),x,'ZABS(double complex)')\n-      call p_d_z(ZABS,z,x,'ZABS')\n-\n-c     ZCOS - Cosine\n-      z = (3.0d0,1.0d0)\n-      a = (-1.52763825012d0,-0.165844401919)\n-      call c_z(ZCOS(z),a,'ZCOS(double complex)')\n-      call p_z_z(ZCOS,z,a,'ZCOS')\n-\n-c     ZEXP - Exponential\n-      z = (3.0d0,1.0d0)\n-      a = (10.8522619142d0,16.9013965352)\n-      call c_z(ZEXP(z),a,'ZEXP(double complex)')\n-      call p_z_z(ZEXP,z,a,'ZEXP')\n-\n-c     ZLOG - Natural logarithm\n-      call c_z(ZLOG(a),z,'ZLOG(double complex)')\n-      call p_z_z(ZLOG,a,z,'ZLOG')\n-\n-c     ZSIN - Sine\n-      z = (3.0d0,1.0d0)\n-      a = (0.217759551622d0,-1.1634403637d0)\n-      call c_z(ZSIN(z),a,'ZSIN(double complex)')\n-      call p_z_z(ZSIN,z,a,'ZSIN')\n-\n-c     ZSQRT - Square root\n-      z = (0.0d0,-4.0d0)\n-      a = sqrt(2.0d0)*(1.0d0,-1.0d0)\n-      call c_z(ZSQRT(z),a,'ZSQRT(double complex)')\n-      call p_z_z(ZSQRT,z,a,'ZSQRT')\n-\n-      if ( fail ) call abort()\n-      end\n-\n-      subroutine failure(label)\n-c     Report failure and set flag\n-      character*(*) label\n-      logical fail\n-      common /flags/ fail\n-      write(6,'(a,a,a)') 'Test ',label,' FAILED'\n-      fail = .true.\n-      end\n-\n-      subroutine c_z(a,b,label)\n-c     Check if DOUBLE COMPLEX a equals b, and fail otherwise\n-      double complex a, b\n-      character*(*) label\n-      if ( abs(a-b) .gt. 1.0e-5 ) then\n-         call failure(label)\n-         write(6,*) 'Got ',a,' expected ', b\n-      end if\n-      end\n-\n-      subroutine c_d(a,b,label)\n-c     Check if DOUBLE PRECISION a equals b, and fail otherwise\n-      double precision a, b\n-      character*(*) label\n-      if ( abs(a-b) .gt. 1.0d-5 ) then\n-         call failure(label)\n-         write(6,*) 'Got ',a,' expected ', b\n-      end if\n-      end\n-\n-      subroutine p_z_z(f,x,a,label)\n-c     Check if DOUBLE COMPLEX f(x) equals a for DOUBLE COMPLEX x\n-      double complex f,x,a\n-      character*(*) label\n-      call c_z(f(x),a,label)\n-      end\n-\n-      subroutine p_d_z(f,x,a,label)\n-c     Check if DOUBLE PRECISION f(x) equals a for DOUBLE COMPLEX x\n-      double precision f,x\n-      double complex a\n-      character*(*) label\n-      call c_d(f(x),a,label)\n-      end"}, {"sha": "53c97fd92fd2694c2dfb00ec9fe2ea8fe060cadd", "filename": "gcc/testsuite/g77.f-torture/execute/intrinsic-unix-bessel.f", "status": "removed", "additions": 0, "deletions": 108, "changes": 108, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Fintrinsic-unix-bessel.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Fintrinsic-unix-bessel.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Fintrinsic-unix-bessel.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,108 +0,0 @@\n-c  intrinsic-unix-bessel.f\n-c\n-c Test Bessel function intrinsics.  \n-c These functions are only available if provided by system\n-c\n-c     David Billinghurst <David.Billinghurst@riotinto.com>\n-c\n-      real x, a\n-      double precision dx, da\n-      integer i\n-      integer*2 j\n-      integer*1 k\n-      integer*8 m\n-      logical fail\n-      common /flags/ fail\n-      fail = .false.\n-\n-      x = 2.0\n-      dx = x \n-      i = 2\n-      j = i\n-      k = i\n-      m = i\n-c     BESJ0  - Bessel function of first kind of order zero\n-      a = 0.22389077\n-      da = a\n-      call c_r(BESJ0(x),a,'BESJ0(real)')\n-      call c_d(BESJ0(dx),da,'BESJ0(double)')\n-      call c_d(DBESJ0(dx),da,'DBESJ0(double)')\n-\n-c     BESJ1  - Bessel function of first kind of order one\n-      a = 0.57672480\n-      da = a\n-      call c_r(BESJ1(x),a,'BESJ1(real)')\n-      call c_d(BESJ1(dx),da,'BESJ1(double)')\n-      call c_d(DBESJ1(dx),da,'DBESJ1(double)')\n-\n-c     BESJN  - Bessel function of first kind of order N\n-      a = 0.3528340\n-      da = a\n-      call c_r(BESJN(i,x),a,'BESJN(integer,real)')\n-      call c_r(BESJN(j,x),a,'BESJN(integer*2,real)')\n-      call c_r(BESJN(k,x),a,'BESJN(integer*1,real)')\n-      call c_d(BESJN(i,dx),da,'BESJN(integer,double)')\n-      call c_d(BESJN(j,dx),da,'BESJN(integer*2,double)')\n-      call c_d(BESJN(k,dx),da,'BESJN(integer*1,double)')\n-      call c_d(DBESJN(i,dx),da,'DBESJN(integer,double)')\n-      call c_d(DBESJN(j,dx),da,'DBESJN(integer*2,double)')\n-      call c_d(DBESJN(k,dx),da,'DBESJN(integer*1,double)')\n-\n-c     BESY0  - Bessel function of second kind of order zero\n-      a = 0.51037567\n-      da = a\n-      call c_r(BESY0(x),a,'BESY0(real)')\n-      call c_d(BESY0(dx),da,'BESY0(double)')\n-      call c_d(DBESY0(dx),da,'DBESY0(double)')\n-\n-c     BESY1  - Bessel function of second kind of order one\n-      a = 0.-0.1070324\n-      da = a\n-      call c_r(BESY1(x),a,'BESY1(real)')\n-      call c_d(BESY1(dx),da,'BESY1(double)')\n-      call c_d(DBESY1(dx),da,'DBESY1(double)')\n-\n-c     BESYN  - Bessel function of second kind of order N\n-      a = -0.6174081\n-      da = a\n-      call c_r(BESYN(i,x),a,'BESYN(integer,real)')\n-      call c_r(BESYN(j,x),a,'BESYN(integer*2,real)')\n-      call c_r(BESYN(k,x),a,'BESYN(integer*1,real)')\n-      call c_d(BESYN(i,dx),da,'BESYN(integer,double)')\n-      call c_d(BESYN(j,dx),da,'BESYN(integer*2,double)')\n-      call c_d(BESYN(k,dx),da,'BESYN(integer*1,double)')\n-      call c_d(DBESYN(i,dx),da,'DBESYN(integer,double)')\n-      call c_d(DBESYN(j,dx),da,'DBESYN(integer*2,double)')\n-      call c_d(DBESYN(k,dx),da,'DBESYN(integer*1,double)')\n-\n-      if ( fail ) call abort()\n-      end\n-\n-      subroutine failure(label)\n-c     Report failure and set flag\n-      character*(*) label\n-      logical fail\n-      common /flags/ fail\n-      write(6,'(a,a,a)') 'Test ',label,' FAILED'\n-      fail = .true.\n-      end\n-\n-      subroutine c_r(a,b,label)\n-c     Check if REAL a equals b, and fail otherwise\n-      real a, b\n-      character*(*) label\n-      if ( abs(a-b) .gt. 1.0e-5 ) then\n-         call failure(label)\n-         write(6,*) 'Got ',a,' expected ', b\n-      end if\n-      end\n-\n-      subroutine c_d(a,b,label)\n-c     Check if DOUBLE PRECISION a equals b, and fail otherwise\n-      double precision a, b\n-      character*(*) label\n-      if ( abs(a-b) .gt. 1.0d-5 ) then\n-         call failure(label)\n-         write(6,*) 'Got ',a,' expected ', b\n-      end if\n-      end"}, {"sha": "5ab48d65036799e59e285036bfc0550bf026b090", "filename": "gcc/testsuite/g77.f-torture/execute/intrinsic-unix-erf.f", "status": "removed", "additions": 0, "deletions": 60, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Fintrinsic-unix-erf.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Fintrinsic-unix-erf.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Fintrinsic-unix-erf.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,60 +0,0 @@\n-c  intrinsic-unix-erf.f\n-c\n-c Test Bessel function intrinsics.  \n-c These functions are only available if provided by system\n-c\n-c     David Billinghurst <David.Billinghurst@riotinto.com>\n-c\n-      real x, a\n-      double precision dx, da\n-      logical fail\n-      common /flags/ fail\n-      fail = .false.\n-\n-      x = 0.6\n-      dx = x \n-c     ERF  - error function\n-      a = 0.6038561\n-      da = a\n-      call c_r(ERF(x),a,'ERF(real)')\n-      call c_d(ERF(dx),da,'ERF(double)')\n-      call c_d(DERF(dx),da,'DERF(double)')\n-\n-c     ERFC  - complementary error function\n-      a = 1.0 - a\n-      da = a\n-      call c_r(ERFC(x),a,'ERFC(real)')\n-      call c_d(ERFC(dx),da,'ERFC(double)')\n-      call c_d(DERFC(dx),da,'DERFC(double)')\n-\n-      if ( fail ) call abort()\n-      end\n-\n-      subroutine failure(label)\n-c     Report failure and set flag\n-      character*(*) label\n-      logical fail\n-      common /flags/ fail\n-      write(6,'(a,a,a)') 'Test ',label,' FAILED'\n-      fail = .true.\n-      end\n-\n-      subroutine c_r(a,b,label)\n-c     Check if REAL a equals b, and fail otherwise\n-      real a, b\n-      character*(*) label\n-      if ( abs(a-b) .gt. 1.0e-5 ) then\n-         call failure(label)\n-         write(6,*) 'Got ',a,' expected ', b\n-      end if\n-      end\n-\n-      subroutine c_d(a,b,label)\n-c     Check if DOUBLE PRECISION a equals b, and fail otherwise\n-      double precision a, b\n-      character*(*) label\n-      if ( abs(a-b) .gt. 1.0d-5 ) then\n-         call failure(label)\n-         write(6,*) 'Got ',a,' expected ', b\n-      end if\n-      end"}, {"sha": "93f1c43b0f5dc75d50b97314d92da814804abfee", "filename": "gcc/testsuite/g77.f-torture/execute/intrinsic-vax-cd.f", "status": "removed", "additions": 0, "deletions": 94, "changes": 94, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Fintrinsic-vax-cd.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Fintrinsic-vax-cd.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Fintrinsic-vax-cd.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,94 +0,0 @@\n-c  intrinsic-vax-cd.f\n-c\n-c Test double complex intrinsics CD*.  \n-c These functions are VAX extensions\n-c\n-c     David Billinghurst <David.Billinghurst@riotinto.com>\n-c\n-      double complex z, a\n-      double precision x\n-      logical fail\n-      intrinsic cdabs, cdcos, cdexp, cdlog, cdsin, cdsqrt\n-      common /flags/ fail\n-      fail = .false.\n-\n-c     CDABS - Absolute value\n-      z = (3.0d0,-4.0d0)\n-      x = 5.0d0\n-      call c_d(CDABS(z),x,'CDABS(double complex)')\n-      call p_d_z(CDABS,z,x,'CDABS')\n-\n-c     CDCOS - Cosine\n-      z = (3.0d0,1.0d0)\n-      a = (-1.52763825012d0,-0.165844401919)\n-      call c_z(CDCOS(z),a,'CDCOS(double complex)')\n-      call p_z_z(CDCOS,z,a,'CDCOS')\n-\n-c     CDEXP - Exponential\n-      z = (3.0d0,1.0d0)\n-      a = (10.8522619142d0,16.9013965352)\n-      call c_z(CDEXP(z),a,'CDEXP(double complex)')\n-      call p_z_z(CDEXP,z,a,'CDEXP')\n-\n-c     CDLOG - Natural logarithm\n-      call c_z(CDLOG(a),z,'CDLOG(double complex)')\n-      call p_z_z(CDLOG,a,z,'CDLOG')\n-\n-c     CDSIN - Sine\n-      z = (3.0d0,1.0d0)\n-      a = (0.217759551622d0,-1.1634403637d0)\n-      call c_z(CDSIN(z),a,'CDSIN(double complex)')\n-      call p_z_z(CDSIN,z,a,'CDSIN')\n-\n-c     CDSQRT - Square root\n-      z = (0.0d0,-4.0d0)\n-      a = sqrt(2.0d0)*(1.0d0,-1.0d0)\n-      call c_z(CDSQRT(z),a,'CDSQRT(double complex)')\n-      call p_z_z(CDSQRT,z,a,'CDSQRT')\n-\n-      if ( fail ) call abort()\n-      end\n-\n-      subroutine failure(label)\n-c     Report failure and set flag\n-      character*(*) label\n-      logical fail\n-      common /flags/ fail\n-      write(6,'(a,a,a)') 'Test ',label,' FAILED'\n-      fail = .true.\n-      end\n-\n-      subroutine c_z(a,b,label)\n-c     Check if DOUBLE COMPLEX a equals b, and fail otherwise\n-      double complex a, b\n-      character*(*) label\n-      if ( abs(a-b) .gt. 1.0e-5 ) then\n-         call failure(label)\n-         write(6,*) 'Got ',a,' expected ', b\n-      end if\n-      end\n-\n-      subroutine c_d(a,b,label)\n-c     Check if DOUBLE PRECISION a equals b, and fail otherwise\n-      double precision a, b\n-      character*(*) label\n-      if ( abs(a-b) .gt. 1.0d-5 ) then\n-         call failure(label)\n-         write(6,*) 'Got ',a,' expected ', b\n-      end if\n-      end\n-\n-      subroutine p_z_z(f,x,a,label)\n-c     Check if DOUBLE COMPLEX f(x) equals a for DOUBLE COMPLEX x\n-      double complex f,x,a\n-      character*(*) label\n-      call c_z(f(x),a,label)\n-      end\n-\n-      subroutine p_d_z(f,x,a,label)\n-c     Check if DOUBLE PRECISION f(x) equals a for DOUBLE COMPLEX x\n-      double precision f,x\n-      double complex a\n-      character*(*) label\n-      call c_d(f(x),a,label)\n-      end"}, {"sha": "19073196885d4c1ec48add52daadb08fb822dfd1", "filename": "gcc/testsuite/g77.f-torture/execute/intrinsic77.f", "status": "removed", "additions": 0, "deletions": 586, "changes": 586, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Fintrinsic77.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Fintrinsic77.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Fintrinsic77.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,586 +0,0 @@\n-      program intrinsic77\n-c\n-c  Test Fortran 77 intrinsic functions (ANSI X3.9-1978 Section 15.10)\n-c \n-c  Test:\n-c  *  specific functions\n-c  *  generic functions with each argument type\n-c  *  specific functions by passing as subroutine argument\n-c     where permiited by Section 13.12 of Fortran 90 standard\n-c\n-      logical fail\n-      common /flags/ fail\n-\n-      fail = .false.\n-      call type_conversion\n-      call truncation\n-      call nearest_whole_number\n-      call nearest_integer\n-      call absolute_value\n-      call remaindering\n-      call transfer_of_sign\n-      call positive_difference\n-      call double_precision_product\n-      call choosing_largest_value\n-      call choosing_smallest_value\n-      call length_of_character_array\n-      call index_of_substring\n-      call imaginary_part\n-      call complex_conjugate\n-      call square_root\n-      call exponential\n-      call natural_logarithm\n-      call common_logarithm\n-      call sine\n-      call cosine\n-      call tangent\n-      call arcsine\n-      call arccosine\n-      call arctangent\n-      call hyperbolic_sine\n-      call hyperbolic_cosine\n-      call hyperbolic_tangent\n-      call lexically_greater_than_or_equal\n-      call lexically_greater_than\n-      call lexically_less_than_or_equal\n-      call lexically_less_than\n-\n-      if ( fail ) call abort()\n-      end\n-\n-      subroutine failure(label)\n-c     Report failure and set flag\n-      character*(*) label\n-      logical fail\n-      common /flags/ fail\n-      write(6,'(a,a,a)') 'Test ',label,' FAILED'\n-      fail = .true.\n-      end\n-\n-      subroutine c_i(i,j,label)\n-c     Check if INTEGER i equals j, and fail otherwise\n-      integer i,j\n-      character*(*) label\n-      if ( i .ne. j ) then\n-         call failure(label)\n-         write(6,*) 'Got ',i,' expected ', j\n-      end if\n-      end\n-\n-      subroutine c_r(a,b,label)\n-c     Check if REAL a equals b, and fail otherwise\n-      real a, b\n-      character*(*) label\n-      if ( abs(a-b) .gt. 1.0e-5 ) then\n-         call failure(label)\n-         write(6,*) 'Got ',a,' expected ', b\n-      end if\n-      end\n-\n-      subroutine c_d(a,b,label)\n-c     Check if DOUBLE PRECISION a equals b, and fail otherwise\n-      double precision a, b\n-      character*(*) label\n-      if ( abs(a-b) .gt. 1.0d-5 ) then\n-         call failure(label)\n-         write(6,*) 'Got ',a,' expected ', b\n-      end if\n-      end\n-\n-      subroutine c_c(a,b,label)\n-c     Check if COMPLEX a equals b, and fail otherwise\n-      complex a, b\n-      character*(*) label\n-      if ( abs(a-b) .gt. 1.0e-5 ) then\n-         call failure(label)\n-         write(6,*) 'Got ',a,' expected ', b\n-      end if\n-      end\n-\n-      subroutine c_l(a,b,label)\n-c     Check if LOGICAL a equals b, and fail otherwise\n-      logical a, b\n-      character*(*) label\n-      if ( a .neqv. b ) then\n-         call failure(label)\n-         write(6,*) 'Got ',a,' expected ', b\n-      end if\n-      end\n-\n-      subroutine c_ch(a,b,label)\n-c     Check if CHARACTER a equals b, and fail otherwise\n-      character*(*) a, b\n-      character*(*) label\n-      if ( a .ne. b ) then\n-         call failure(label)\n-         write(6,*) 'Got ',a,' expected ', b\n-      end if\n-      end\n-\n-      subroutine p_i_i(f,x,i,label)\n-c     Check if INTEGER f(x) equals i for INTEGER x\n-      integer f,x,i\n-      character*(*) label\n-      call c_i(f(x),i,label)\n-      end\n-\n-      subroutine p_i_ii(f,x1,x2,i,label)\n-c     Check if INTEGER f(x1,x2) equals i for INTEGER x\n-      integer f,x1,x2,i\n-      character*(*) label\n-      call c_i(f(x1,x2),i,label)\n-      end\n-\n-      subroutine p_i_r(f,x,i,label)\n-c     Check if INTEGER f(x) equals i for REAL x\n-      real x\n-      integer f,i\n-      character*(*) label\n-      call c_i(f(x),i,label)\n-      end\n-\n-      subroutine p_i_d(f,x,i,label)\n-c     Check if INTEGER f(x) equals i for DOUBLE PRECISION x\n-      double precision x\n-      integer f,i\n-      character*(*) label\n-      call c_i(f(x),i,label)\n-      end\n-\n-      subroutine p_i_ch(f,x,a,label)\n-c     Check if INTEGER f(x) equals a for CHARACTER x\n-      character*(*) x\n-      integer f, a\n-      character*(*) label\n-      call c_i(f(x),a,label)\n-      end\n-\n-      subroutine p_i_chch(f,x1,x2,a,label)\n-c     Check if INTEGER f(x1,x2) equals a for CHARACTER x1 and x2\n-      character*(*) x1,x2\n-      integer f, a\n-      character*(*) label\n-      call c_i(f(x1,x2),a,label)\n-      end\n-\n-      subroutine p_r_r(f,x,a,label)\n-c     Check if REAL f(x) equals a for REAL x\n-      real f,x,a\n-      character*(*) label\n-      call c_r(f(x),a,label)\n-      end\n-\n-      subroutine p_r_rr(f,x1,x2,a,label)\n-c     Check if REAL f(x1,x2) equals a for REAL x1, x2\n-      real f,x1,x2,a\n-      character*(*) label\n-      call c_r(f(x1,x2),a,label)\n-      end\n-\n-      subroutine p_d_d(f,x,a,label)\n-c     Check if DOUBLE PRECISION f(x) equals a for DOUBLE PRECISION x\n-      double precision f,x,a\n-      character*(*) label\n-      call c_d(f(x),a,label)\n-      end\n-\n-      subroutine p_d_rr(f,x1,x2,a,label)\n-c     Check if DOUBLE PRECISION f(x1,x2) equals a for real x1,x2\n-      double precision f,a\n-      real x1,x2\n-      character*(*) label\n-      call c_d(f(x1,x2),a,label)\n-      end\n-\n-      subroutine p_d_dd(f,x1,x2,a,label)\n-c     Check if DOUBLE PRECISION f(x1,x2) equals a for DOUBLE PRECISION x1,x2\n-      double precision f,x1,x2,a\n-      character*(*) label\n-      call c_d(f(x1,x2),a,label)\n-      end\n-\n-      subroutine p_c_c(f,x,a,label)\n-c     Check if COMPLEX f(x) equals a for COMPLEX x\n-      complex f,x,a\n-      character*(*) label\n-      call c_c(f(x),a,label)\n-      end\n-\n-      subroutine p_r_c(f,x,a,label)\n-c     Check if REAL f(x) equals a for COMPLEX x\n-      complex x\n-      real f, a\n-      character*(*) label\n-      call c_r(f(x),a,label)\n-      end\n-\n-      subroutine type_conversion\n-      integer i\n-      character*1 c\n-c     conversion to integer\n-      call c_i(INT(5),5,'INT(integer)')\n-      call c_i(INT(5.01),5,'INT(real)')\n-      call c_i(INT(5.01d0),5,'INT(double)')\n-      call c_i(INT((5.01,-3.0)),5,'INT(complex)')\n-      call c_i(IFIX(5.01),5,'IFIX(real)')\n-      call c_i(IDINT(5.01d0),5,'IDINT(double)')\n-c     conversion to real\n-      call c_r(REAL(-2),-2.0,'REAL(integer)')\n-      call c_r(REAL(-2.0),-2.0,'REAL(real)')\n-      call c_r(REAL(-2.0d0),-2.0,'REAL(double)')\n-      call c_r(REAL((-2.,9.)),-2.0,'REAL(complex)')\n-      call c_r(FLOAT(-2),-2.0,'FLOAT(int)')\n-      call c_r(SNGL(-2.0d0),-2.0,'SNGL(double)')\n-c     conversion to double\n-      call c_d(DBLE(5),5.0d0,'DBLE(integer)')\n-      call c_d(DBLE(5.),5.0d0,'DBLE(real)')\n-      call c_d(DBLE(5.0d0),5.0d0,'DBLE(double)')\n-      call c_d(DBLE((5.0,0.5)),5.0d0,'DBLE(complex)')\n-c     conversion to complex\n-      call c_c(CMPLX(1),(1.,0.),'CMPLX(integer)')\n-      call c_c(CMPLX(1,2),(1.,2.),'CMPLX(integer, integer)')\n-      call c_c(CMPLX(1.),(1.,0.),'CMPLX(real)')\n-      call c_c(CMPLX(1.,2.),(1.,2.),'CMPLX(real,real)')\n-      call c_c(CMPLX(1.d0),(1.,0.),'CMPLX(double)')\n-      call c_c(CMPLX(1.d0,2.d0),(1.,2.),'CMPLX(double,double)')\n-      call c_c(CMPLX(1.,2.),(1.,2.),'CMPLX(complex)')\n-c     character conversion\n-      c = 'C'\n-      i = ichar(c)\n-      call c_i(ICHAR(c),i,'ICHAR')\n-      call c_ch(CHAR(i),c,'CHAR')\n-      end\n-\n-      subroutine truncation\n-      intrinsic aint, dint\n-      call c_r(AINT(9.2),9.0,'AINT(real)')\n-      call c_d(AINT(9.2d0),9.0d0,'AINT(double)')\n-      call c_d(DINT(9.2d0),9.0d0,'DINT(double)')\n-      call p_r_r(AINT,9.2,9.0,'AINT')\n-      call p_d_d(DINT,9.2d0,9.0d0,'DINT')\n-      end\n-\n-      subroutine nearest_whole_number\n-      intrinsic anint, dnint\n-      call c_r(ANINT(9.2),9.0,'ANINT(real)')\n-      call c_d(ANINT(9.2d0),9.0d0,'ANINT(double)')\n-      call c_d(DNINT(9.2d0),9.0d0,'DNINT(double)')\n-      call p_r_r(ANINT,9.2,9.0,'ANINT')\n-      call p_d_d(DNINT,9.2d0,9.0d0,'DNINT')\n-      end\n-\n-      subroutine nearest_integer\n-      intrinsic nint, idnint\n-      call c_i(NINT(9.2),9,'NINT(real)')\n-      call c_i(NINT(9.2d0),9,'NINT(double)')\n-      call c_i(IDNINT(9.2d0),9,'IDNINT(double)')\n-      call p_i_r(NINT,9.2,9,'NINT')\n-      call p_i_d(IDNINT,9.2d0,9,'IDNINT')\n-      end\n-\n-      subroutine absolute_value\n-      intrinsic iabs, abs, dabs, cabs\n-      call c_i(ABS(-7),7,'ABS(integer)')\n-      call c_r(ABS(-7.),7.,'ABS(real)')\n-      call c_d(ABS(-7.d0),7.d0,'ABS(double)')\n-      call c_r(ABS((3.,-4.)),5.0,'ABS(complex)')\n-      call c_i(IABS(-7),7,'IABS(integer)')\n-      call c_d( DABS(-7.d0),7.d0,'DABS(double)')\n-      call c_r( CABS((3.,-4.)),5.0,'CABS(complex)')\n-      call p_i_i(IABS,-7,7,'IABS')\n-      call p_r_r(ABS,-7.,7.,'ABS')\n-      call p_d_d(DABS,-7.0d0,7.0d0,'DABS')\n-      call p_r_c(CABS,(3.,-4.), 5.0,'CABS')\n-      end\n-\n-      subroutine remaindering\n-      intrinsic mod, amod, dmod\n-      call c_i( MOD(8,3),2,'MOD(integer,integer)')\n-      call c_r( MOD(8.,3.),2.,'MOD(real,real)')\n-      call c_d( MOD(8.d0,3.d0),2.d0,'MOD(double,double)')\n-      call c_r( AMOD(8.,3.),2.,'AMOD(real,real)')\n-      call c_d( DMOD(8.d0,3.d0),2.d0,'DMOD(double,double)')\n-      call p_i_ii(MOD,8,3,2,'MOD')\n-      call p_r_rr(AMOD,8.,3.,2.,'AMOD')\n-      call p_d_dd(DMOD,8.d0,3.d0,2.d0,'DMOD')\n-      end\n-\n-      subroutine transfer_of_sign\n-      intrinsic isign,sign,dsign\n-      call c_i(SIGN(8,-3),-8,'SIGN(integer)')\n-      call c_r(SIGN(8.,-3.),-8.,'SIGN(real,real)')\n-      call c_d(SIGN(8.d0,-3.d0),-8.d0,'SIGN(double,double)')\n-      call c_i(ISIGN(8,-3),-8,'ISIGN(integer)')\n-      call c_d(DSIGN(8.d0,-3.d0),-8.d0,'DSIGN(double,double)')\n-      call p_i_ii(ISIGN,8,-3,-8,'ISIGN')\n-      call p_r_rr(SIGN,8.,-3.,-8.,'SIGN')\n-      call p_d_dd(DSIGN,8.d0,-3.d0,-8.d0,'DSIGN')\n-      end\n-\n-      subroutine positive_difference\n-      intrinsic idim, dim, ddim\n-      call c_i(DIM(-8,-3),0,'DIM(integer)')\n-      call c_r(DIM(-8.,-3.),0.,'DIM(real,real)')\n-      call c_d(DIM(-8.d0,-3.d0),0.d0,'DIM(double,double)')\n-      call c_i(IDIM(-8,-3),0,'IDIM(integer)')\n-      call c_d(DDIM(-8.d0,-3.d0),0.d0,'DDIM(double,double)')\n-      call p_i_ii(IDIM,-8,-3,0,'IDIM')\n-      call p_r_rr(DIM,-8.,-3.,0.,'DIM')\n-      call p_d_dd(DDIM,-8.d0,-3.d0,0.d0,'DDIM')\n-      end\n-\n-      subroutine double_precision_product\n-      intrinsic dprod\n-      call c_d(DPROD(-8.,-3.),24.d0,'DPROD(real,real)')\n-      call p_d_rr(DPROD,-8.,-3.,24.d0,'DPROD')\n-      end\n-\n-      subroutine choosing_largest_value\n-      call c_i(MAX(1,2,3),3,'MAX(integer,integer,integer)')\n-      call c_r(MAX(1.,2.,3.),3.,'MAX(real,real,real)')\n-      call c_d(MAX(1.d0,2.d0,3.d0),3.d0,'MAX(double,double,double)')\n-      call c_i(MAX0(1,2,3),3,'MAX0(integer,integer,integer)')\n-      call c_r(AMAX1(1.,2.,3.),3.,'MAX(real,real,real)')\n-      call c_d(DMAX1(1.d0,2.d0,3.d0),3.d0,'DMAX1(double,double,double)')\n-      call c_r(AMAX0(1,2,3),3.,'AMAX0(integer,integer,integer)')\n-      call c_i(MAX1(1.,2.,3.),3,'MAX1(real,real,real)')\n-      end\n-\n-      subroutine choosing_smallest_value\n-      call c_i(MIN(1,2,3),1,'MIN(integer,integer,integer)')\n-      call c_r(MIN(1.,2.,3.),1.,'MIN(real,real,real)')\n-      call c_d(MIN(1.d0,2.d0,3.d0),1.d0,'MIN(double,double,double)')\n-      call c_i(MIN0(1,2,3),1,'MIN0(integer,integer,integer)')\n-      call c_r(AMIN1(1.,2.,3.),1.,'MIN(real,real,real)')\n-      call c_d(DMIN1(1.d0,2.d0,3.d0),1.d0,'DMIN1(double,double,double)')\n-      call c_r(AMIN0(1,2,3),1.,'AMIN0(integer,integer,integer)')\n-      call c_i(MIN1(1.,2.,3.),1,'MIN1(real,real,real)')\n-      end\n-\n-      subroutine length_of_character_array\n-      intrinsic len\n-      call c_i(LEN('ABCDEF'),6,'LEN 1')\n-      call p_i_ch(LEN,'ABCDEF',6,'LEN 2')\n-      end\n-\n-      subroutine index_of_substring\n-      intrinsic index\n-      call c_i(INDEX('ABCDEF','C'),3,'INDEX 1')\n-      call p_i_chch(INDEX,'ABCDEF','C',3,'INDEX 2')\n-      end\n-\n-      subroutine imaginary_part\n-      intrinsic aimag\n-      call c_r(AIMAG((2.,-7.)),-7.,'AIMAG(complex)')\n-      call p_r_c(AIMAG,(2.,-7.),-7.,'AIMAG(complex)')\n-      end\n-\n-      subroutine complex_conjugate\n-      intrinsic conjg\n-      call c_c(CONJG((2.,-7.)),(2.,7.),'CONJG(complex)')\n-      call p_c_c(CONJG,(2.,-7.),(2.,7.),'CONJG')\n-      end\n-\n-      subroutine square_root\n-      intrinsic sqrt, dsqrt, csqrt\n-      real x, a\n-      x = 4.0\n-      a = 2.0\n-      call c_r(SQRT(x),a,'SQRT(real)')\n-      call c_d(SQRT(1.d0*x),1.d0*a,'SQRT(double)')\n-      call c_c(SQRT((1.,0.)*x),(1.,0.)*a,'SQRT(complex)')\n-      call c_d(DSQRT(1.d0*x),1.d0*a,'DSQRT(double)')\n-      call c_c(CSQRT((1.,0.)*x),(1.,0.)*a,'CSQRT(complex)')\n-      call p_r_r(SQRT,x,a,'SQRT')\n-      call p_d_d(DSQRT,1.d0*x,1.d0*a,'DSQRT')\n-      call p_c_c(CSQRT,(1.,0.)*x,(1.,0.)*a ,'CSQRT')\n-      end\n-\n-      subroutine exponential\n-      intrinsic exp, dexp, cexp\n-      real x, a\n-      x = 0.0\n-      a = 1.0\n-      call c_r(EXP(x),a,'EXP(real)')\n-      call c_d(EXP(1.d0*x),1.d0*a,'EXP(double)')\n-      call c_c(EXP((1.,0.)*x),(1.,0.)*a,'EXP(complex)')\n-      call c_d(DEXP(1.d0*x),1.d0*a,'DEXP(double)')\n-      call c_c(CEXP((1.,0.)*x),(1.,0.)*a,'CEXP(complex)')\n-      call p_r_r(EXP,x,a,'EXP')\n-      call p_d_d(DEXP,1.d0*x,1.d0*a,'DEXP')\n-      call p_c_c(CEXP,(1.,0.)*x,(1.,0.)*a ,'CEXP')\n-      end\n-\n-      subroutine natural_logarithm\n-      intrinsic alog, dlog, clog\n-      real x, a\n-      a = 1.234\n-      x = exp(a)\n-      call c_r(LOG(x),a,'LOG(real)')\n-      call c_d(LOG(1.d0*x),1.d0*a,'LOG(double)')\n-      call c_c(LOG((1.,0.)*x),(1.,0.)*a,'LOG(complex)')\n-      call c_r(ALOG(x),a,'ALOG(real)')\n-      call c_d(DLOG(1.d0*x),1.d0*a,'DLOG(double)')\n-      call c_c(CLOG((1.,0.)*x),(1.,0.)*a,'CLOG(complex)')\n-      call p_r_r(ALOG,x,a,'LOG')\n-      call p_d_d(DLOG,1.d0*x,1.d0*a,'DLOG')\n-      call p_c_c(CLOG,(1.,0.)*x,(1.,0.)*a,'CLOG')\n-      end\n-\n-      subroutine common_logarithm\n-      intrinsic alog10, dlog10\n-      real x, a\n-      x = 100.0\n-      a = 2.0\n-      call c_r(LOG10(x),a,'LOG10(real)')\n-      call c_d(LOG10(1.d0*x),1.d0*a,'LOG10(double)')\n-      call c_r(ALOG10(x),a,'ALOG10(real)')\n-      call c_d(DLOG10(1.d0*x),1.d0*a,'DLOG10(double)')\n-      call p_r_r(ALOG10,x,a,'ALOG10')\n-      call p_d_d(DLOG10,1.d0*x,1.d0*a ,'DLOG10')\n-      end\n-\n-      subroutine sine\n-      intrinsic sin, dsin, csin\n-      real x, a\n-      a = 1.0\n-      x = asin(a)\n-      call c_r(SIN(x),a,'SIN(real)')\n-      call c_d(SIN(1.d0*x),1.d0*a,'SIN(double)')\n-      call c_c(SIN((1.,0.)*x),(1.,0.)*a,'SIN(complex)')\n-      call c_d(DSIN(1.d0*x),1.d0*a,'DSIN(double)')\n-      call c_c(CSIN((1.,0.)*x),(1.,0.)*a,'CSIN(complex)')\n-      call p_r_r(SIN,x,a,'SIN')\n-      call p_d_d(DSIN,1.d0*x,1.d0*a,'DSIN')\n-      call p_c_c(CSIN,(1.,0.)*x,(1.,0.)*a ,'CSIN')\n-      end\n-\n-      subroutine cosine\n-      intrinsic cos, dcos, ccos\n-      real x, a\n-      a = 0.123456\n-      x = acos(a)\n-      call c_r(COS(x),a,'COS(real)')\n-      call c_d(COS(1.d0*x),1.d0*a,'COS(double)')\n-      call c_c(COS((1.,0.)*x),(1.,0.)*a,'COS(complex)')\n-      call c_r(COS(x),a,'COS(real)')\n-      call c_d(DCOS(1.d0*x),1.d0*a,'DCOS(double)')\n-      call c_c(CCOS((1.,0.)*x),(1.,0.)*a,'CCOS(complex)')\n-      call p_r_r(COS,x,a,'COS')\n-      call p_d_d(DCOS,1.d0*x,1.d0*a ,'DCOS')\n-      call p_c_c(CCOS,(1.,0.)*x, (1.,0.)*a ,'CCOS')\n-      end\n-\n-      subroutine tangent\n-      intrinsic tan, dtan\n-      real x, a\n-      a = 0.5\n-      x = atan(a)\n-      call c_r(TAN(x),a,'TAN(real)')\n-      call c_d(TAN(1.d0*x),1.d0*a,'TAN(double)')\n-      call c_d(DTAN(1.d0*x),1.d0*a,'DTAN(double)')\n-      call p_r_r(TAN,x,a,'TAN')\n-      call p_d_d(DTAN,1.d0*x,1.d0*a ,'DTAN')\n-      end\n-\n-      subroutine arcsine\n-      intrinsic asin, dasin\n-      real x, a\n-      a = 0.5\n-      x = sin(a)\n-      call c_r(ASIN(x),a,'ASIN(real)')\n-      call c_d(ASIN(1.d0*x),1.d0*a,'ASIN(double)')\n-      call c_d(DASIN(1.d0*x),1.d0*a,'DASIN(double)')\n-      call p_r_r(ASIN,x,a,'ASIN')\n-      call p_d_d(DASIN,1.d0*x,1.d0*a ,'DASIN')\n-      end\n-\n-      subroutine arccosine\n-      intrinsic acos, dacos\n-      real x, a\n-      x = 0.70710678\n-      a = 0.785398\n-      call c_r(ACOS(x),a,'ACOS(real)')\n-      call c_d(ACOS(1.d0*x),1.d0*a,'ACOS(double)')\n-      call c_d(DACOS(1.d0*x),1.d0*a,'DACOS(double)')\n-      call p_r_r(ACOS,x,a,'ACOS')\n-      call p_d_d(DACOS,1.d0*x,1.d0*a ,'DACOS')\n-      end\n-\n-      subroutine arctangent\n-      intrinsic atan, atan2, datan, datan2\n-      real x1, x2, a\n-      a = 0.75\n-      x1 = tan(a)\n-      x2 = 1.0\n-      call c_r(ATAN(x1),a,'ATAN(real)')\n-      call c_d(ATAN(1.d0*x1),1.d0*a,'ATAN(double)')\n-      call c_d(DATAN(1.d0*x1),1.d0*a,'DATAN(double)')\n-      call c_r(ATAN2(x1,x2),a,'ATAN2(real)')\n-      call c_d(ATAN2(1.d0*x1,1.d0*x2),1.d0*a,'ATAN2(double)')\n-      call c_d(DATAN2(1.d0*x1,1.d0*x2),1.0d0*a,'DATAN2(double)')\n-      call p_r_r(ATAN,x1,a,'ATAN')\n-      call p_d_d(DATAN,1.d0*x1,1.d0*a,'DATAN')\n-      call p_r_rr(ATAN2,x1,x2,a,'ATAN2')\n-      call p_d_dd(DATAN2,1.d0*x1,1.d0*x2,1.d0*a,'DATAN2')\n-      end\n-\n-      subroutine hyperbolic_sine\n-      intrinsic sinh, dsinh\n-      real x, a\n-      x = 1.0\n-      a = 1.1752012\n-      call c_r(SINH(x),a,'SINH(real)')\n-      call c_d(SINH(1.d0*x),1.d0*a,'SINH(double)')\n-      call c_d(DSINH(1.d0*x),1.d0*a,'DSINH(double)')\n-      call p_r_r(SINH,x,a,'SINH')\n-      call p_d_d(DSINH,1.d0*x,1.d0*a ,'DSINH')\n-      end\n-\n-      subroutine hyperbolic_cosine\n-      intrinsic cosh, dcosh\n-      real x, a\n-      x = 1.0\n-      a = 1.5430806\n-      call c_r(COSH(x),a,'COSH(real)')\n-      call c_d(COSH(1.d0*x),1.d0*a,'COSH(double)')\n-      call c_d(DCOSH(1.d0*x),1.d0*a,'DCOSH(double)')\n-      call p_r_r(COSH,x,a,'COSH')\n-      call p_d_d(DCOSH,1.d0*x,1.d0*a ,'DCOSH')\n-      end\n-\n-      subroutine hyperbolic_tangent\n-      intrinsic tanh, dtanh\n-      real x, a\n-      x = 1.0\n-      a = 0.76159416\n-      call c_r(TANH(x),a,'TANH(real)')\n-      call c_d(TANH(1.d0*x),1.d0*a,'TANH(double)')\n-      call c_d(DTANH(1.d0*x),1.d0*a,'DTANH(double)')\n-      call p_r_r(TANH,x,a,'TANH')\n-      call p_d_d(DTANH,1.d0*x,1.d0*a ,'DTANH')\n-      end\n-\n-      subroutine lexically_greater_than_or_equal\n-      call c_l(LGE('A','B'),.FALSE.,'LGE(character,character) 1')\n-      call c_l(LGE('B','A'),.TRUE.,'LGE(character,character) 2')\n-      call c_l(LGE('A','A'),.TRUE.,'LGE(character,character) 3')\n-      end\n-\n-      subroutine lexically_greater_than\n-      call c_l(LGT('A','B'),.FALSE.,'LGT(character,character) 1')\n-      call c_l(LGT('B','A'),.TRUE.,'LGT(character,character) 2')\n-      call c_l(LGT('A','A'),.FALSE.,'LGT(character,character) 3')\n-      end\n-\n-      subroutine lexically_less_than_or_equal\n-      call c_l(LLE('A','B'),.TRUE.,'LLE(character,character) 1')\n-      call c_l(LLE('B','A'),.FALSE.,'LLE(character,character) 2')\n-      call c_l(LLE('A','A'),.TRUE.,'LLE(character,character) 3')\n-      end\n-\n-      subroutine lexically_less_than\n-      call c_l(LLT('A','B'),.TRUE.,'LLT(character,character) 1')\n-      call c_l(LLT('B','A'),.FALSE.,'LLT(character,character) 2')\n-      call c_l(LLT('A','A'),.FALSE.,'LLT(character,character) 3')\n-      end"}, {"sha": "c56c9919077662742c936431c31fd37832aa0de7", "filename": "gcc/testsuite/g77.f-torture/execute/io0.f", "status": "removed", "additions": 0, "deletions": 46, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Fio0.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Fio0.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Fio0.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,46 +0,0 @@\n-*     Preliminary tests for a few things in the i/o library.\n-*     Thrown together by Dave Love not from specific bug reports --\n-*     other ideas welcome.\n-\n-      character *(*) fmt\n-      parameter (fmt='(1x,i3,f5.1)')\n-*     Scratch file makes sure we can use one and avoids dealing with\n-*     explicit i/o in the testsuite.\n-      open(90, status='scratch') ! try a biggish unit number\n-      write(90, '()')           ! extra record for interest\n-*     Formatted i/o can go wild (endless loop AFAIR) if we're wrongly\n-*     assuming an ANSI sprintf.\n-      write(90, fmt) 123, 123.0\n-      backspace 90              ! backspace problems reported on DOSish systems\n-      read(90, fmt) i, r\n-      endfile 90\n-      if (i/=123 .or. nint(r)/=123) call abort\n-      rewind 90                 ! make sure we can rewind too\n-      read(90, '()')\n-      read(90, fmt) i, r\n-      if (i/=123 .or. nint(r)/=123) call abort\n-      close(90)\n-*     Make sure we can do unformatted i/o OK.  This might be\n-*     problematic on DOS-like systems if we've done an fopen in text\n-*     mode, not binary.     \n-      open(90, status='scratch', access='direct', form='unformatted',\n-     +     recl=8)\n-      write(90, rec=1) 123, 123.0\n-      read(90, rec=1) i, r\n-      if (i/=123 .or. nint(r)/=123) call abort\n-      close(90)\n-      open(90, status='scratch', form='unformatted')\n-      write(90) 123, 123.0\n-      backspace 90\n-      read(90) i, r\n-      if (i/=123 .or. nint(r)/=123) call abort\n-      close(90)\n-*     Fails at 1998-09-01 on spurious recursive i/o check (fixed by\n-*     1998-09-06 libI77 change):\n-      open(90, status='scratch', form='formatted', recl=16,\n-     +     access='direct')\n-      write(90, '(i8,f8.1)',rec=1) 123, 123.0\n-      read(90, '(i8,f8.1)', rec=1) i, r\n-      if (i/=123 .or. nint(r)/=123) call abort\n-      close(90)\n-      end"}, {"sha": "6a69a3aadabe8c961e589e941a0119293b909f14", "filename": "gcc/testsuite/g77.f-torture/execute/io0.x", "status": "removed", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Fio0.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Fio0.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Fio0.x?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,13 +0,0 @@\n-# Scratch files aren't implemented for mmixware\n-# (_stat is a stub and files can't be deleted).\n-# Similar restrictions exist for most simulators.\n-\n-if { [istarget \"mmix-knuth-mmixware\"]\n-     || [istarget \"arm*-*-elf\"]\n-     || [istarget \"strongarm*-*-elf\"]\n-     || [istarget \"xscale*-*-elf\"]\n-     || [istarget \"cris-*-elf\"] } {\n-\tset torture_execute_xfail [istarget]\n-}\n-\n-return 0"}, {"sha": "c5242446a4987f46b1d188540b3639880a437c0e", "filename": "gcc/testsuite/g77.f-torture/execute/io1.f", "status": "removed", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Fio1.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Fio1.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Fio1.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,10 +0,0 @@\n-*     Fixed by 1998-09-28 libI77/open.c change.\n-      open(90,status='scratch')\n-      write(90, '(1X, I1 / 1X, I1)') 1, 2\n-      rewind 90\n-      write(90, '(1X, I1)') 1\n-      rewind 90                 ! implicit ENDFILE expected\n-      read(90, *) i\n-      read(90, *, end=10) j\n-      call abort()\n- 10   end"}, {"sha": "6a69a3aadabe8c961e589e941a0119293b909f14", "filename": "gcc/testsuite/g77.f-torture/execute/io1.x", "status": "removed", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Fio1.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Fio1.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Fio1.x?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,13 +0,0 @@\n-# Scratch files aren't implemented for mmixware\n-# (_stat is a stub and files can't be deleted).\n-# Similar restrictions exist for most simulators.\n-\n-if { [istarget \"mmix-knuth-mmixware\"]\n-     || [istarget \"arm*-*-elf\"]\n-     || [istarget \"strongarm*-*-elf\"]\n-     || [istarget \"xscale*-*-elf\"]\n-     || [istarget \"cris-*-elf\"] } {\n-\tset torture_execute_xfail [istarget]\n-}\n-\n-return 0"}, {"sha": "032fa41f8998b3e2c04812aae7ff57a70a42131b", "filename": "gcc/testsuite/g77.f-torture/execute/labug1.f", "status": "removed", "additions": 0, "deletions": 57, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Flabug1.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Flabug1.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Flabug1.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,57 +0,0 @@\n-      PROGRAM LABUG1\n-\n-*  This program core dumps on mips-sgi-irix6.2 when compiled\n-*  with egcs-19981101, egcs-19981109 and egcs-19981122 snapshots\n-*  with -O2\n-*\n-*  Originally derived from LAPACK test suite.\n-*  Almost any change allows it to run.\n-*\n-*  David Billinghurst, (David.Billinghurst@riotinto.com.au)\n-*  25 November 1998\n-* \n-*     .. Parameters ..\n-      INTEGER   LDA, LDE\n-      PARAMETER ( LDA = 2500, LDE = 50  )\n-      COMPLEX   CZERO \n-      PARAMETER ( CZERO = ( 0.0E+0, 0.0E+0 ) )\n-\n-      INTEGER   I, J, M, N\n-      REAL      V\n-      COMPLEX   A(LDA),B(LDA),C(LDA),E(LDE,LDE),F(LDE,LDE)  \n-      COMPLEX   Z\n-\n-      N=2\n-      M=1\n-*\n-      do i = 1, m\n-         do j = 1, n\n-            e(i,j) = czero\n-            f(i,j) = czero\n-        end do\n-      end do\n-*\n-      DO J = 1, N\n-         DO I = 1, M\n-            V =  ABS( E(I,J) - F(I,J) )\n-         END DO\n-      END DO\n- \n-      CALL SUB2(M,Z)\n-\n-      END\n-\n-      subroutine SUB2(I,A)\n-      integer i\n-      complex a\n-      end\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-"}, {"sha": "0af5b1b0b3f016e0ef7e65390f4e84eb7f5abc37", "filename": "gcc/testsuite/g77.f-torture/execute/large_vec.f", "status": "removed", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Flarge_vec.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Flarge_vec.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Flarge_vec.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,3 +0,0 @@\n-      parameter (nmax=165000)\n-      double precision x(nmax)\n-      end"}, {"sha": "74e42750d55f3f72075236ca28d8ba5563ba4e73", "filename": "gcc/testsuite/g77.f-torture/execute/le.f", "status": "removed", "additions": 0, "deletions": 29, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Fle.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Fle.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Fle.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,29 +0,0 @@\n-      program fool\n-\n-      real     foo\n-      integer  n\n-      logical  t\n-\n-      foo = 2.5\n-      n = 5\n-\n-      t = (n > foo)\n-      if (t .neqv. .true.) call abort\n-      t = (n >= foo)\n-      if (t .neqv. .true.) call abort\n-      t = (n < foo)\n-      if (t .neqv. .false.) call abort\n-      t = (n <= 5)\n-      if (t .neqv. .true.) call abort\n-      t = (n >= 5 )\n-      if (t .neqv. .true.) call abort\n-      t = (n == 5)\n-      if (t .neqv. .true.) call abort\n-      t = (n /= 5)\n-      if (t .neqv. .false.) call abort\n-      t = (n /= foo)\n-      if (t .neqv. .true.) call abort\n-      t = (n == foo)\n-      if (t .neqv. .false.) call abort\n-\n-      end"}, {"sha": "f1024330a71278aebca915378ab526c240c2f4dc", "filename": "gcc/testsuite/g77.f-torture/execute/select.f", "status": "removed", "additions": 0, "deletions": 173, "changes": 173, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Fselect.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Fselect.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Fselect.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,173 +0,0 @@\n-C   integer byte case with integer byte parameters as case(s)\n-        subroutine ib\n-        integer *1 a /1/\n-        integer *1  one,two,three\n-        parameter (one=1,two=2,three=3)\n-        select case (a)\n-        case (one)\n-        case (two)\n-           call abort\n-        case (three)\n-           call abort\n-        case default\n-           call abort\n-        end select\n-        print*,'normal ib'\n-        end\n-C   integer halfword case with integer halfword parameters\n-        subroutine ih\n-        integer *2 a /1/\n-        integer *2  one,two,three\n-        parameter (one=1,two=2,three=3)\n-        select case (a)\n-        case (one)\n-        case (two)\n-           call abort\n-        case (three)\n-           call abort\n-        case default\n-           call abort\n-        end select\n-        print*,'normal ih'\n-        end\n-C   integer case with integer parameters\n-        subroutine iw\n-        integer *4 a /1/\n-        integer *4  one,two,three\n-        parameter (one=1,two=2,three=3)\n-        select case (a)\n-        case (one)\n-        case (two)\n-           call abort\n-        case (three)\n-           call abort\n-        case default\n-           call abort\n-        end select\n-        print*,'normal iw'\n-        end\n-C   integer double case with integer double parameters\n-        subroutine id\n-        integer *8 a /1/\n-        integer *8  one,two,three\n-        parameter (one=1,two=2,three=3)\n-        select case (a)\n-        case (one)\n-        case (two)\n-           call abort\n-        case (three)\n-           call abort\n-        case default\n-           call abort\n-        end select\n-        print*,'normal id'\n-        end\n-C   integer byte select with integer case\n-       subroutine ib_mixed\n-       integer*1 s /1/\n-       select case (s)\n-       case (1)\n-       case (2)\n-         call abort\n-       end select\n-       print*,'ib ok'\n-       end\n-C   integer halfword with integer case\n-       subroutine ih_mixed\n-       integer*2 s /1/\n-       select case (s)\n-       case (1)\n-       case default\n-         call abort\n-       end select\n-       print*,'ih ok'\n-       end\n-C   integer word with integer case\n-       subroutine iw_mixed\n-       integer s /5/\n-       select case (s)\n-       case (1)\n-          call abort\n-       case (2)\n-          call abort\n-       case (3)\n-          call abort\n-       case (4)\n-          call abort\n-       case (5)\n-C                   \n-       case (6)\n-           call abort\n-       case default\n-           call abort\n-       end select\n-       print*,'iw ok'\n-       end\n-C   integer doubleword with integer case\n-       subroutine id_mixed\n-       integer *8 s /1024/\n-       select case (s)\n-       case (1)\n-           call abort\n-       case (1023)\n-           call abort\n-       case (1025)\n-           call abort\n-       case (1024)\n-C\n-       end select\n-       print*,'i8 ok'\n-       end\n-       subroutine l1_mixed\n-       logical*1 s /.TRUE./\n-       select case (s)\n-       case (.TRUE.)\n-       case (.FALSE.)\n-          call abort\n-       end select\n-       print*,'l1 ok'\n-       end\n-       subroutine l2_mixed\n-       logical*2 s /.FALSE./\n-       select case (s)\n-       case (.TRUE.)\n-           call abort\n-       case (.FALSE.)\n-       end select\n-       print*,'lh ok'\n-       end\n-       subroutine l4_mixed\n-       logical*4 s /.TRUE./\n-       select case (s)\n-       case (.FALSE.)\n-         call abort\n-       case (.TRUE.)\n-       end select\n-       print*,'lw ok'\n-       end\n-       subroutine l8_mixed\n-       logical*8 s /.TRUE./\n-       select case (s)\n-       case (.TRUE.)\n-       case (.FALSE.)\n-          call abort\n-       end select\n-       print*,'ld ok'\n-       end\n-C   main\n-C -- regression cases\n-        call ib\n-        call ih\n-        call iw\n-        call id\n-C -- new functionality\n-        call ib_mixed\n-        call ih_mixed\n-        call iw_mixed\n-        call id_mixed\n-        end\n-        \n-\n-\n-\n-"}, {"sha": "89ae273891cd7d9ddbc6630603dae438329d0356", "filename": "gcc/testsuite/g77.f-torture/execute/short.f", "status": "removed", "additions": 0, "deletions": 57, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Fshort.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Fshort.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Fshort.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,57 +0,0 @@\n-      program short\n-\n-      parameter   (   N=2  )\n-      common /chb/    pi,sig(0:N)\n-      common /parm/   h(2,2)\n-\n-c  initialize some variables\n-      h(2,2) = 1117\n-      h(2,1) = 1178\n-      h(1,2) = 1568\n-      h(1,1) = 1621\n-      sig(0) = -1.\n-      sig(1) = 0.\n-      sig(2) = 1.\n-\n-      call printout\n-      stop\n-      end\n-\n-c ******************************************************************\n-\n-      subroutine printout\n-      parameter   (   N=2  )\n-      common /chb/    pi,sig(0:N)\n-      common /parm/   h(2,2)\n-      dimension       yzin1(0:N), yzin2(0:N)\n-\n-c  function subprograms\n-      z(i,j,k) = 0.5*h(i,j)*(sig(k)-1.)\n-\n-c  a four-way average of rhobar\n-      do 260  k=0,N\n-        yzin1(k) = 0.25 * \n-     &       ( z(2,2,k) + z(1,2,k) +\n-     &         z(2,1,k) + z(1,1,k) )\n-  260       continue\n-\n-c  another four-way average of rhobar\n-      do 270  k=0,N\n-\trtmp1 = z(2,2,k)\n-\trtmp2 = z(1,2,k)\n-\trtmp3 = z(2,1,k)\n-\trtmp4 = z(1,1,k)\n-        yzin2(k) = 0.25 * \n-     &       ( rtmp1 + rtmp2 + rtmp3 + rtmp4 )\n-  270       continue\n-\n-      do k=0,N\n-\tif (yzin1(k) .ne. yzin2(k)) call abort\n-      enddo\n-      if (yzin1(0) .ne. -1371.) call abort\n-      if (yzin1(1) .ne. -685.5) call abort\n-      if (yzin1(2) .ne. 0.) call abort\n-\n-      return\n-      end\n-"}, {"sha": "f502bc7283395da4b5b98074c21120c355cd6805", "filename": "gcc/testsuite/g77.f-torture/execute/u77-test.f", "status": "removed", "additions": 0, "deletions": 421, "changes": 421, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Fu77-test.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Fu77-test.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Fu77-test.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,421 +0,0 @@\n-***   Some random stuff for testing libU77.  Should be done better.  It's\n-*     hard to test things where you can't guarantee the result.  Have a\n-*     good squint at what it prints, though detected errors will cause \n-*     starred messages.\n-*\n-* Currently not tested:\n-*   ALARM\n-*   CHDIR (func)\n-*   CHMOD (func)\n-*   FGET (func/subr)\n-*   FGETC (func)\n-*   FPUT (func/subr)\n-*   FPUTC (func)\n-*   FSTAT (subr)\n-*   GETCWD (subr)\n-*   HOSTNM (subr)\n-*   IRAND\n-*   KILL\n-*   LINK (func)\n-*   LSTAT (subr)\n-*   RENAME (func/subr)\n-*   SIGNAL (subr)\n-*   SRAND\n-*   STAT (subr)\n-*   SYMLNK (func/subr)\n-*   UMASK (func)\n-*   UNLINK (func)\n-*\n-* NOTE! This is the testsuite version, so it should compile and\n-* execute on all targets, and either run to completion (with\n-* success status) or fail (by calling abort).  The *other* version,\n-* which is a bit more interactive and tests a couple of things\n-* this one cannot, should be generally the same, and is in\n-* libf2c/libU77/u77-test.f.  Please keep it up-to-date.\n-\n-      implicit none\n-\n-      external hostnm\n-*     intrinsic hostnm\n-      integer hostnm\n-\n-      integer i, j, k, ltarray (9), idat (3), count, rate, count_max,\n-     +     pid, mask\n-      real tarray1(2), tarray2(2), r1, r2\n-      double precision d1\n-      integer(kind=2) bigi\n-      logical issum\n-      intrinsic getpid, getuid, getgid, ierrno, gerror, time8,\n-     +     fnum, isatty, getarg, access, unlink, fstat, iargc,\n-     +     stat, lstat, getcwd, gmtime, etime, chmod, itime, date,\n-     +     chdir, fgetc, fputc, system_clock, second, idate, secnds,\n-     +     time, ctime, fdate, ttynam, date_and_time, mclock, mclock8,\n-     +     cpu_time, dtime, ftell, abort\n-      external lenstr, ctrlc\n-      integer lenstr\n-      logical l\n-      character gerr*80, c*1\n-      character ctim*25, line*80, lognam*20, wd*1000, line2*80, \n-     +     ddate*8, ttime*10, zone*5, ctim2*25\n-      integer fstatb (13), statb (13)\n-      integer *2 i2zero\n-      integer values(8)\n-      integer(kind=7) sigret\n-\n-      i = time ()\n-      ctim = ctime (i)\n-      WRITE (6,'(A/)') '1 GNU libU77 test at: ' // ctim(:lenstr (ctim))\n-      write (6,'(A,I3,'', '',I3)')\n-     +     ' Logical units 5 and 6 correspond (FNUM) to'\n-     +     // ' Unix i/o units ', fnum(5), fnum(6)\n-      if (lnblnk('foo ').ne.3 .or. len_trim('foo ').ne.3) then\n-        print *, 'LNBLNK or LEN_TRIM failed'\n-        call abort\n-      end if\n-\n-      bigi = time8 ()\n-\n-      call ctime (i, ctim2)\n-      if (ctim .ne. ctim2) then\n-        write (6, *) '*** CALL CTIME disagrees with CTIME(): ',\n-     +    ctim2(:lenstr (ctim2)), ' vs. ', ctim(:lenstr (ctim))\n-        call doabort\n-      end if\n-\n-      j = time ()\n-      if (i .gt. bigi .or. bigi .gt. j) then\n-        write (6, *) '*** TIME/TIME8/TIME sequence failures: ',\n-     +    i, bigi, j\n-        call doabort\n-      end if\n-\n-      print *, 'Command-line arguments: ', iargc ()\n-      do i = 0, iargc ()\n-         call getarg (i, line)\n-         print *, 'Arg ', i, ' is: ', line(:lenstr (line))\n-      end do\n-\n-      l= isatty(6)\n-      line2 = ttynam(6)\n-      if (l) then\n-        line = 'and 6 is a tty device (ISATTY) named '//line2\n-      else\n-        line = 'and 6 isn''t a tty device (ISATTY)'\n-      end if\n-      write (6,'(1X,A)') line(:lenstr(line))\n-      call ttynam (6, line)\n-      if (line .ne. line2) then\n-        print *, '*** CALL TTYNAM disagrees with TTYNAM: ',\n-     +    line(:lenstr (line))\n-        call doabort\n-      end if\n-\n-*     regression test for compiler crash fixed by JCB 1998-08-04 com.c\n-      sigret = signal(2, ctrlc)\n-\n-      pid = getpid()\n-      WRITE (6,'(A,I10)') ' Process id (GETPID): ', pid\n-      WRITE (6,'(A,I10)') ' User id (GETUID): ', GETUID ()\n-      WRITE (6,'(A,I10)') ' Group id (GETGID): ', GETGID ()\n-      WRITE (6, *) 'If you have the `id'' program, the following call'\n-      write (6, *) 'of SYSTEM should agree with the above:'\n-      call flush(6)\n-      CALL SYSTEM ('echo \" \" `id`')\n-      call flush\n-\n-      lognam = 'blahblahblah'\n-      call getlog (lognam)\n-      write (6,*) 'Login name (GETLOG): ', lognam(:lenstr (lognam))\n-\n-      wd = 'blahblahblah'\n-      call getenv ('LOGNAME', wd)\n-      write (6,*) 'Login name (GETENV of LOGNAME): ', wd(:lenstr (wd))\n-\n-      call umask(0, mask)\n-      write(6,*) 'UMASK returns', mask\n-      call umask(mask)\n-\n-      ctim = fdate()\n-      write (6,*) 'FDATE returns: ', ctim(:lenstr (ctim))\n-      call fdate (ctim)\n-      write (6,*) 'CALL FDATE returns: ', ctim(:lenstr (ctim))\n-\n-      j=time()\n-      call ltime (j, ltarray)\n-      write (6,'(1x,a,9i4)') 'LTIME returns:', ltarray\n-      call gmtime (j, ltarray)\n-      write (6,'(1x,a,9i4)') 'GMTIME returns:', ltarray\n-\n-      call system_clock(count)  ! omitting optional args\n-      call system_clock(count, rate, count_max)\n-      write(6,*) 'SYSTEM_CLOCK returns: ', count, rate, count_max\n-\n-      call date_and_time(ddate)  ! omitting optional args\n-      call date_and_time(ddate, ttime, zone, values)\n-      write(6, *) 'DATE_AND_TIME returns: ', ddate, ' ', ttime, ' ',\n-     +     zone, ' ', values\n-\n-      write (6,*) 'Sleeping for 1 second (SLEEP) ...'\n-      call sleep (1)\n-\n-c consistency-check etime vs. dtime for first call\n-      r1 = etime (tarray1)\n-      r2 = dtime (tarray2)\n-      if (abs (r1-r2).gt.1.0) then\n-        write (6,*)\n-     +       'Results of ETIME and DTIME differ by more than a second:',\n-     +       r1, r2\n-        call doabort\n-      end if\n-      if (.not. issum (r1, tarray1(1), tarray1(2))) then\n-        write (6,*) '*** ETIME didn''t return sum of the array: ',\n-     +       r1, ' /= ', tarray1(1), '+', tarray1(2)\n-        call doabort\n-      end if\n-      if (.not. issum (r2, tarray2(1), tarray2(2))) then\n-        write (6,*) '*** DTIME didn''t return sum of the array: ',\n-     +       r2, ' /= ', tarray2(1), '+', tarray2(2)\n-        call doabort\n-      end if\n-      write (6, '(A,3F10.3)')\n-     +     ' Elapsed total, user, system time (ETIME): ',\n-     +     r1, tarray1\n-\n-c now try to get times to change enough to see in etime/dtime\n-      write (6,*) 'Looping until clock ticks at least once...'\n-      do i = 1,1000\n-      do j = 1,1000\n-      end do\n-      call dtime (tarray2, r2)\n-      if (tarray2(1) .ne. 0. .or. tarray2(2) .ne. 0.) exit\n-      end do\n-      call etime (tarray1, r1)\n-      if (.not. issum (r1, tarray1(1), tarray1(2))) then\n-        write (6,*) '*** ETIME didn''t return sum of the array: ',\n-     +       r1, ' /= ', tarray1(1), '+', tarray1(2)\n-        call doabort\n-      end if\n-      if (.not. issum (r2, tarray2(1), tarray2(2))) then\n-        write (6,*) '*** DTIME didn''t return sum of the array: ',\n-     +       r2, ' /= ', tarray2(1), '+', tarray2(2)\n-        call doabort\n-      end if\n-      write (6, '(A,3F10.3)')\n-     +     ' Differences in total, user, system time (DTIME): ',\n-     +     r2, tarray2\n-      write (6, '(A,3F10.3)')\n-     +     ' Elapsed total, user, system time (ETIME): ',\n-     +     r1, tarray1\n-      write (6, *) '(Clock-tick detected after ', i, ' 1K loops.)'\n-\n-      call idate (i,j,k)\n-      call idate (idat)\n-      write (6,*) 'IDATE (date,month,year): ',idat\n-      print *,  '... and the VXT version (month,date,year): ', i,j,k\n-      if (i/=idat(2) .or. j/=idat(1) .or. k/=mod(idat(3),100)) then\n-        print *, '*** VXT and U77 versions don''t agree'\n-        call doabort\n-      end if\n-\n-      call date (ctim)\n-      write (6,*) 'DATE (dd-mmm-yy): ', ctim(:lenstr (ctim))\n-\n-      call itime (idat)\n-      write (6,*) 'ITIME (hour,minutes,seconds): ', idat\n-\n-      call time(line(:8))\n-      print *, 'TIME: ', line(:8)\n-\n-      write (6,*) 'SECNDS(0.0) returns: ',secnds(0.0)\n-\n-      write (6,*) 'SECOND returns: ', second()\n-      call dumdum(r1)\n-      call second(r1)\n-      write (6,*) 'CALL SECOND returns: ', r1\n-\n-*     compiler crash fixed by 1998-10-01 com.c change\n-      if (rand(0).lt.0.0 .or. rand(0).gt.1.0) then\n-        write (6,*) '*** rand(0) error'\n-        call doabort()\n-      end if\n-\n-      i = getcwd(wd)\n-      if (i.ne.0) then\n-        call perror ('*** getcwd')\n-        call doabort\n-      else\n-        write (6,*) 'Current directory is \"'//wd(:lenstr(wd))//'\"'\n-      end if\n-      call chdir ('.',i)\n-      if (i.ne.0) then\n-        write (6,*) '***CHDIR to \".\": ', i\n-        call doabort\n-      end if\n-\n-      i=hostnm(wd)\n-      if(i.ne.0) then\n-        call perror ('*** hostnm')\n-        call doabort\n-      else\n-        write (6,*) 'Host name is ', wd(:lenstr(wd))\n-      end if\n-\n-      i = access('/dev/null ', 'rw')\n-      if (i.ne.0) write (6,*) '***Read/write ACCESS to /dev/null: ', i\n-      write (6,*) 'Creating file \"foo\" for testing...'\n-      open (3,file='foo',status='UNKNOWN')\n-      rewind 3\n-      call fputc(3, 'c',i)\n-      call fputc(3, 'd',j)      \n-      if (i+j.ne.0) write(6,*) '***FPUTC: ', i\n-C     why is it necessary to reopen?  (who wrote this?)\n-C     the better to test with, my dear!  (-- burley)\n-      close(3)\n-      open(3,file='foo',status='old')\n-      call fseek(3,0,0,*10)\n-      go to 20\n- 10   write(6,*) '***FSEEK failed'\n-      call doabort\n- 20   call fgetc(3, c,i)\n-      if (i.ne.0) then\n-        write(6,*) '***FGETC: ', i\n-        call doabort\n-      end if\n-      if (c.ne.'c') then\n-        write(6,*) '***FGETC read the wrong thing: ', ichar(c)\n-        call doabort\n-      end if\n-      i= ftell(3)\n-      if (i.ne.1) then\n-        write(6,*) '***FTELL offset: ', i\n-        call doabort\n-      end if\n-      call ftell(3, i)\n-      if (i.ne.1) then\n-        write(6,*) '***CALL FTELL offset: ', i\n-        call doabort\n-      end if\n-      call chmod ('foo', 'a+w',i)\n-      if (i.ne.0) then\n-        write (6,*) '***CHMOD of \"foo\": ', i\n-        call doabort\n-      end if\n-      i = fstat (3, fstatb)\n-      if (i.ne.0) then\n-        write (6,*) '***FSTAT of \"foo\": ', i\n-        call doabort\n-      end if\n-      i = stat ('foo', statb)\n-      if (i.ne.0) then\n-        write (6,*) '***STAT of \"foo\": ', i\n-        call doabort\n-      end if\n-      write (6,*) '  with stat array ', statb\n-      if (statb(6) .ne. getgid ()) then\n-        write (6,*) 'Note: FSTAT gid wrong (happens on some systems).'\n-      end if\n-      if (statb(5) .ne. getuid () .or. statb(4) .ne. 1) then\n-        write (6,*) '*** FSTAT uid or nlink is wrong'\n-        call doabort\n-      end if\n-      do i=1,13\n-        if (fstatb (i) .ne. statb (i)) then\n-          write (6,*) '*** FSTAT and STAT don''t agree on '// '\n-     +         array element ', i, ' value ', fstatb (i), statb (i)\n-          call abort\n-        end if\n-      end do\n-      i = lstat ('foo', fstatb)\n-      do i=1,13\n-        if (fstatb (i) .ne. statb (i)) then\n-          write (6,*) '*** LSTAT and STAT don''t agree on '//\n-     +         'array element ', i, ' value ', fstatb (i), statb (i)\n-          call abort\n-        end if\n-      end do\n-\n-C     in case it exists already:\n-      call unlink ('bar',i)\n-      call link ('foo ', 'bar ',i)\n-      if (i.ne.0) then\n-        write (6,*) '***LINK \"foo\" to \"bar\" failed: ', i\n-        call doabort\n-      end if\n-      call unlink ('foo',i)\n-      if (i.ne.0) then\n-        write (6,*) '***UNLINK \"foo\" failed: ', i\n-        call doabort\n-      end if\n-      call unlink ('foo',i)\n-      if (i.eq.0) then\n-        write (6,*) '***UNLINK \"foo\" again: ', i\n-        call doabort\n-      end if\n-\n-      call gerror (gerr)\n-      i = ierrno()\n-      write (6,'(A,I3,A/1X,A)') ' The current error number is: ',\n-     +     i,\n-     +     ' and the corresponding message is:', gerr(:lenstr(gerr))\n-      write (6,*) 'This is sent to stderr prefixed by the program name'\n-      call getarg (0, line)\n-      call perror (line (:lenstr (line)))\n-      call unlink ('bar')\n-\n-      print *, 'MCLOCK returns ', mclock ()\n-      print *, 'MCLOCK8 returns ', mclock8 ()\n-\n-      call cpu_time (d1)\n-      print *, 'CPU_TIME returns ', d1\n-\n-C     WRITE (6,*) 'You should see exit status 1'\n-      CALL EXIT(0)\n- 99   END\n-\n-* Return length of STR not including trailing blanks, but always > 0.\n-      integer function lenstr (str)\n-      character*(*) str\n-      if (str.eq.' ') then\n-        lenstr=1\n-      else\n-        lenstr = lnblnk (str)\n-      end if\n-      end\n-\n-* Just make sure SECOND() doesn't \"magically\" work the second time.\n-      subroutine dumdum(r)\n-      r = 3.14159\n-      end\n-\n-* Test whether sum is approximately left+right.\n-      logical function issum (sum, left, right)\n-      implicit none\n-      real sum, left, right\n-      real mysum, delta, width\n-      mysum = left + right\n-      delta = abs (mysum - sum)\n-      width = abs (left) + abs (right)\n-      issum = (delta .le. .0001 * width)\n-      end\n-\n-* Signal handler\n-      subroutine ctrlc\n-      print *, 'Got ^C'\n-      call doabort\n-      end\n-\n-* A problem has been noticed, so maybe abort the test.\n-      subroutine doabort\n-* For this version, call the ABORT intrinsic.\n-      intrinsic abort\n-      call abort\n-      end\n-\n-* Testsuite version only.\n-* Don't actually reference the HOSTNM intrinsic, because some targets\n-* need -lsocket, which we don't have a mechanism for supplying.\n-      integer function hostnm(nm)\n-      character*(*) nm\n-      nm = 'not determined by this version of u77-test.f'\n-      hostnm = 0\n-      end"}, {"sha": "e4b89008c25e35e88732b25ec06f07e0469bc82a", "filename": "gcc/testsuite/g77.f-torture/execute/u77-test.x", "status": "removed", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Fu77-test.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Fu77-test.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Fu77-test.x?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,12 +0,0 @@\n-# Various intrinsics not implemented and not implementable; will fail at\n-# link time.\n-\n-if { [istarget \"mmix-knuth-mmixware\"]\n-     || [istarget \"arm*-*-elf\"]\n-     || [istarget \"strongarm*-*-elf\"]\n-     || [istarget \"xscale*-*-elf\"]\n-     || [istarget \"cris-*-elf\"] } {\n-\tset torture_compile_xfail [istarget]\n-}\n-\n-return 0"}, {"sha": "0cc9087d6cb413227b3ffdcf0da03744eb0d24af", "filename": "gcc/testsuite/g77.f-torture/noncompile/19981216-0.f", "status": "removed", "additions": 0, "deletions": 89, "changes": 89, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fnoncompile%2F19981216-0.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fnoncompile%2F19981216-0.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fnoncompile%2F19981216-0.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,89 +0,0 @@\n-* Resent-From: Craig Burley <burley@gnu.org>\n-* Resent-To: craig@jcb-sc.com\n-* X-Delivered: at request of burley on mescaline.gnu.org\n-* Date: Wed, 16 Dec 1998 18:31:24 +0100\n-* From: Dieter Stueken <stueken@conterra.de>\n-* Organization: con terra GmbH\n-* To: fortran@gnu.org\n-* Subject: possible bug\n-* Content-Type: text/plain; charset=iso-8859-1\n-* X-Mime-Autoconverted: from 8bit to quoted-printable by mescaline.gnu.org id KAA09085\n-* X-UIDL: 72293bf7f9fac8378ec7feca2bccbce2\n-* \n-* Hi,\n-* \n-* I'm about to compile a very old, very ugly Fortran program.\n-* For one part I got:\n-* \n-* f77: Internal compiler error: program f771 got fatal signal 6\n-* \n-* instead of any detailed error message. I was able to break down the\n-* problem to the following source fragment:\n-* \n-* -------------------------------------------\n-        PROGRAM WAP\n-\n-        integer*2  ios\n-        character*80  name\n-\n-        name = 'blah'\n-        open(unit=8,status='unknown',file=name,form='formatted',\n-     F       iostat=ios)\n-\n-      END\n-* -------------------------------------------\n-* \n-* The problem seems to be caused by the \"integer*2 ios\" declaration.\n-* So far I solved it by simply using a plain integer instead.\n-* \n-* I'm running gcc on a Linux system compiled/installed\n-* with no special options:\n-* \n-* -> g77 -v\n-* g77 version 0.5.23\n-* Driving: g77 -v -c -xf77-version /dev/null -xnone\n-* Reading specs from /usr/lib/gcc-lib/i686-pc-linux-gnulibc1/2.8.1/specs\n-* gcc version 2.8.1\n-*  /usr/lib/gcc-lib/i686-pc-linux-gnulibc1/2.8.1/cpp -lang-c -v -undef\n-* -D__GNUC__=2 -D__GNUC_MINOR__=8 -D__ELF__ -D__unix__ -D__linux__\n-* -D__unix -D__linux -Asystem(posix) -D_LANGUAGE_FORTRAN -traditional\n-* -Di386 -Di686 -Asystem(unix) -Acpu(i386) -Amachine(i386) -D__i386__\n-* -D__i686__ -Asystem(unix) -Acpu(i386) -Amachine(i386) /dev/null\n-* /dev/null\n-* GNU CPP version 2.8.1 (i386 GNU/Linux with ELF)\n-* #include \"...\" search starts here:\n-* #include <...> search starts here:\n-*  /usr/local/include\n-*  /usr/i686-pc-linux-gnulibc1/include\n-*  /usr/lib/gcc-lib/i686-pc-linux-gnulibc1/2.8.1/include\n-*  /usr/include\n-* End of search list.\n-*  /usr/lib/gcc-lib/i686-pc-linux-gnulibc1/2.8.1/f771 -fnull-version\n-* -quiet -dumpbase g77-version.f -version -fversion -o /tmp/cca24911.s\n-* /dev/null\n-* GNU F77 version 2.8.1 (i686-pc-linux-gnulibc1) compiled by GNU C version\n-* 2.8.1.\n-* GNU Fortran Front End version 0.5.23\n-*  as -V -Qy -o /tmp/cca24911.o /tmp/cca24911.s\n-* GNU assembler version 2.8.1 (i486-linux), using BFD version 2.8.1\n-*  ld -m elf_i386 -dynamic-linker /lib/ld-linux.so.1 -o /tmp/cca24911\n-* /tmp/cca24911.o /usr/lib/crt1.o /usr/lib/crti.o\n-* /usr/lib/gcc-lib/i686-pc-linux-gnulibc1/2.8.1/crtbegin.o\n-* -L/usr/lib/gcc-lib/i686-pc-linux-gnulibc1/2.8.1 -L/usr -lg2c -lm -lgcc\n-* -lc -lgcc /usr/lib/gcc-lib/i686-pc-linux-gnulibc1/2.8.1/crtend.o\n-* /usr/lib/crtn.o\n-*  /tmp/cca24911\n-* __G77_LIBF77_VERSION__: 0.5.23\n-* @(#)LIBF77 VERSION 19970919\n-* __G77_LIBI77_VERSION__: 0.5.23\n-* @(#) LIBI77 VERSION pjw,dmg-mods 19980405\n-* __G77_LIBU77_VERSION__: 0.5.23\n-* @(#) LIBU77 VERSION 19970919\n-* \n-* \n-* Regards, Dieter.\n-* -- \n-* Dieter St\ufffdken, con terra GmbH, M\ufffdnster\n-*     stueken@conterra.de         stueken@qgp.uni-muenster.de\n-*     http://www.conterra.de/     http://qgp.uni-muenster.de/~stueken\n-*     (0)251-980-2027             (0)251-83-334974"}, {"sha": "25b7c5b2b52c335a3ab99877fafba181dda5d0fd", "filename": "gcc/testsuite/g77.f-torture/noncompile/19990218-1.f", "status": "removed", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fnoncompile%2F19990218-1.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fnoncompile%2F19990218-1.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fnoncompile%2F19990218-1.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,13 +0,0 @@\n-        double precision function fun(a,b)\n-        double precision a,b\n-        print*,'in sub: a,b=',a,b\n-        fun=a*b\n-        print*,'in sub: fun=',fun\n-        return\n-        end\n-        program test\n-        double precision a,b,c\n-        data a,b/1.0d-46,1.0d0/\n-        c=fun(a,b)\n-        print*,'in main: fun=',c\n-        end"}, {"sha": "86d2a939064bd69e9f4789dca137284a2157b9f7", "filename": "gcc/testsuite/g77.f-torture/noncompile/19990826-4.f", "status": "removed", "additions": 0, "deletions": 648, "changes": 648, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fnoncompile%2F19990826-4.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fnoncompile%2F19990826-4.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fnoncompile%2F19990826-4.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,648 +0,0 @@\n-* Culled from 970528-1.f in Burley's g77 test suite.  Copyright\n-* status not clear.  Feel free to chop down if the bug is still\n-* reproducible (see end of test case for how bug shows up in gdb\n-* run of f771).  No particular reason it should be a noncompile\n-* case, other than that I didn't want to spend time \"fixing\" it\n-* to compile cleanly (with -O0, which works) while making sure the\n-* ICE remained reproducible.  -- burley 1999-08-26\n-\n-* Date: Mon, 26 May 1997 13:00:19 +0200 (GMT+0200)\n-* From: \"D. O'Donoghue\" <dod@da.saao.ac.za>\n-* To: Craig Burley <burley@gnu.ai.mit.edu>\n-* Cc: fortran@gnu.ai.mit.edu\n-* Subject: Re: g77 problems\n-\n-\tprogram dophot\n-\tparameter (napple = 4)\n-        common /window/nwindo,ixwin(50),iywin(50),iboxwin(50),itype(50)\n-        common/io/luout,ludebg\n-\tcommon/search/nstot,thresh\n-\tcommon /fitparms / acc(npmax),alim(npmax),mit,mpar,mfit1,\n-     +                     mfit2,ind(npmax)\n-\tcommon /starlist/ starpar(npmax,nsmax), imtype(nsmax),\n-\t1shadow(npmax,nsmax),shaderr(npmax,nsmax),idstr(nsmax)\n-\tcommon /aperlist/ apple(napple ,nsmax)\n-\tcommon /parpred / ava(npmax)\n-\tcommon /unitize / ufactor\n-\tcommon /undergnd/ nfast, nslow\n-\tcommon/bzero/ scale,zero\n-\tcommon /ctimes / chiimp, apertime, filltime, addtime\n-\tcommon / drfake / needit \n-\tcommon /mfit/ psfpar(npmax),starx(nfmax),stary(nfmax),xlim,ylim\n-\tcommon /vers/ version\n- \tlogical needit,screen,isub,loop,comd,burn,wrtres,fixedxy\n-\tlogical fixed,piped,debug,ex,clinfo\n-\tcharacter header*5760,rhead*2880\n-\tcharacter yn*1,version*40,ccd*4,infile*20\n-\tcharacter*30 numf,odir,record*80\n-\tinteger*2 instr(8)\n-\tcharacter*800 line\n-\texternal pseud0d, pseud2d, pseud4d, pseudmd, shape\n-C\n-C\tInitialization\n-\tdata burn,   fixedxy,fixed,  piped \n-     +     /.false.,.false.,.false.,.false./\n-\tdata needit,screen,comd,isub\n-     + /.true.,.false.,.true.,.false. /\n-\tdata acc / .01, -.03, -.03, .01, .03, .1, .03 /\n-\tdata alim / -1.0e8, 2*-1.0e3, -1.0e8, 3*-1.0e3 /\n-C\n-\tversion = 'DoPHOT Version 1.0 LINUX May 97 '\n-        debug=.false.\n-        clinfo=.false.\n-\tline(1:800) = ' '\n-\todir = ' '\n-C\n-C\n-C\tRead default tuneable parameters \n-\tcall tuneup ( nccd, ccd, piped, debug )\n-\tversion(33:36) = ccd(1:4)\n-C\n-      \n-        ludebg=6\n-        if(piped)then\n-          yn='n'\n-        else\n-\t  write(*,'(''****************************************'')')\n-\t  write(*,1000) version\n-\t  write(*,'(''****************************************''//)')           \n-C                                                             \n-          write(*,'(''Screen output (y/[n])? '',$)')             \n-\t  read(*,1000) yn\n-        end if\n-\tif(yn.eq.'y'.or.yn.eq.'Y') then\n-          screen=.true.                \n-          luout=6\n-        else\n-          luout=2\n-        end if\n-C\n-        if(piped)then\n-          yn='y'\n-        else\n-          write(*,'(''Batch mode ([y]/n)? '',$)')\n-          read(*,1000) yn\n-        end if\n-\tif(yn.eq.'n'.or.yn.eq.'N') comd = .false.\n-C                                          \n-\tif(.not.comd) then                                     \n-          write(*,\n-     *         '(''Do you want windowing ([y]/n)? '',$)')\n-          read(*,1000)yn\n-          iwindo=1\n-          if(yn.eq.'n'.or.yn.eq.'N')then\n-            nwindo=0\n-            iwindo=0\n-          end if\n-C\n-          write(*,\n-     *       '(''Star classification info (y/[n]) ?'',$)')\n-          read(*,1000)yn\n-          clinfo=.false.\n-          if(yn.eq.'y'.or.yn.eq.'Y')clinfo=.true.\n-C\n-\t  write(*,\n-     *        '(''Create a star-subtracted frame (y/[n])? '',$)')\n-\t  read(*,1000) yn                                     \n- \t  if(yn.eq.'y'.or.yn.eq.'Y') isub = .true.\n-C               \n-\t  write(*,'(''Apply after-burner (y/[n])? '',$)')\n-\t  read(*,1000) yn\n-\t  if ( yn.eq.'y'.or.yn.eq.'Y' ) burn = .true.\n-\t  wrtres = burn\n-C\n-\t  write(*,'(''Read from fixed (X,Y) list (y/[n])? '',$)')\n-\t  read(*,1000) yn\n-\t  if ( yn.eq.'y'.or.yn.eq.'Y' ) then\n-\t    fixedxy = .true.\n-\t    fixed = .true.\n-\t    burn = .true.\n-\t    wrtres = .true.\n-\t  endif\n-\tendif         \n-        iopen=0\n-C\n-C       This is the start of the loop over the input files\n-c\n-        iframe=0\n-        open(10,file='timing',status='unknown',access='append')\n-\n-1\tifit = 0\n-\tiapr = 0\n-\titmn = 0\n-\tmodel = 1\n-\txc = 0.0\n-\tyc = 0.0\n-\trc = 0.0\n-\tibr = 0\n-\tixy = 0\n-C\t\n-        iframe=iframe+1\n-        tgetpar=0.0\n-        tsearch=0.0\n-        tshape=0.0\n-        timprove=0.0\n-C\n-C\tBatch mode ...\n-\n-\tif ( comd ) then\n-          if(iopen.eq.0)then\n-            iopen=1\n-            open(11,file='dophot.bat',status='old',err=995)\n-          end if\n-          read(11,1000,end=999)infile\n-c         now read in the parameter instructions. these are:\n-c         instr(1) : if 1, specifies uncrowded field, otherwise crowded \n-c         instr(2) : if 1, specifies sequential frames of same field\n-c                          with a window around the stars of interest -\n-c                          all other objects are ignored\n-c         instr(3) : if 0, takes cmin from dophot.inp (via tuneup)\n-c                    if>0, sets cmin=instr(3)\n-c         instr(4) : if 0, does nothing\n-c                    if 1, then opens a file called classifications\n-c                    sets clinfo to .true. and writes out the star\n-c                    typing info to this file\n-c         instr(5) : Delete the shd.nnnnnnn file\n-c         instr(6) : Delete the out.nnnnnnn file\n-c         instr(7) : Delete the input frame\n-c         instr(8) : Create a star-subtracted frame \n-          read(11,*)instr\n-          read(11,*)ifit,iapr,tmn,model,xc,yc,rc,ibr,ixy\n-          nocrwd = instr(1)\n-          iwindo=instr(2)\n-          if(iwindo.eq.0)nwindo=0\n-          itmn=tmn\n-          if ( instr(3).gt.0 ) cmin=instr(3)\n-          clinfo=.false.\n-          if ( instr(4).gt.0 )then\n-            clinfo=.true.\n-            open(12,file='classifications',status='unknown')\n-            ludebg=12\n-          end if\n- \t  if ( instr(8).ne.0 ) then\n-\t    isub = .true.            \n-\t  else\n-\t    isub = .false.\n-\t  endif\n-C\n-\t  if(ibr.ne.0) burn = .true.\n-\t  if(ixy.ne.0) then\n-\t    fixedxy = .true.\n-\t    fixed = .true.\n-\t    burn = .true.\n-\t    goto 20\n-          endif\n-          if(iwindo.eq.0)then\n-            write(6,10)iframe,infile(1:15)\n-   10       format('  ***** DoPHOT-ing frame ',i4,': ',a)\n-            if(ludebg.eq.12)write(ludebg,11)iframe,infile(1:15)\n-   11       format(////'  ',62('*')/\n-     *                 '  *     DoPHOT-ing frame ',i4,': ',a,\n-     *                 '                 *'/'  ',62('*'))\n-          end if\n-          if(iwindo.eq.1)then\n-            write(6,12)iframe,infile(1:15)\n-   12       format('  ***** DoPHOT-ing frame ',i4,': ',a,\n-     *             '   - Windowed *****')\n-            if(ludebg.eq.12)write(ludebg,13)iframe,infile(1:15)\n-   13       format(////'  ',62('*')/\n-     *                 '  *     DoPHOT-ing frame ',i4,': ',a,\n-     *                 '   - Windowed    *'/2x,62('*'))\n-          end if\n-C\n-C\tInteractive...\n-\telse\n-\t  write(*,'(''Image name: '',$)')\n-\t  read(*,1000) infile\n-\t  if(infile(1:1).eq.' ') goto 999                     \n-1000\t  format(a)                          \n-          write(*,'(''Crowded field mode ([y]/n) ? '',$)')\n-          read(*,1000)yn\n-          nocrwd=0\n-          if(yn.eq.'n'.or.yn.eq.'N')nocrwd=1\n-\t  if(.not.fixed) then\n-\t    write(*,1001)\n-1001        format('Sky model ([1]=Plane, 2=Power, 3=Hubble)? ',$)\n-            read(*,1000)record\n-            if(record.ne.' ')then\n-\t      read(record,*) model\n-            else\n-              model=1\n-            end if\n-\t  else         \n-\t    burn=.true.\n-\t    goto 20           \n-\t  endif\n-\tendif\n-C\n-C       if windowing, open the file and read the window\n-        if(iwindo.eq.1)then\n-          inquire(file='windows',exist=ex)\n-          if(.not.ex)go to 997\n-          if(iframe.eq.1)open(9,file='windows',status='old')\n-          nwindo=0\n-    2     read(9,*,end=3)intype,inx,iny,inbox\n-          nwindo=nwindo+1\n-          if(nwindo.gt.50)then\n-            print *,'too many windows - max = 50'\n-            stop\n-          end if\n-          ixwin(nwindo)=inx\n-          iywin(nwindo)=iny\n-          iboxwin(nwindo)=inbox\n-          itype(nwindo)=intype\n-          go to 2\n-\n-    3     rewind 9\n-          if(screen)print 4,(itype(j),ixwin(j),iywin(j),iboxwin(j),\n-     *                       j=1,nwindo)\n-    4     format(' Windows: Type   X    Y   Size'/\n-     *           (I13,i6,i5,i5))\n-        end if\n-\n-\tt1 = cputime(0.0)\n-C\n-C\tRead FITS frame.\n-\tcall getfits(1,infile,header,nhead,nfast,nslow,numf,nc,line,ccd)\n-C\n-C\tIgnore frame if not the correct chip\n-\tif(nc.lt.0) goto 900\n-C                     \n-C\tEstimate starting PSF parameters.\n-   15   call getparams(nfast,nslow,gxwid,gywid,skyval,tmin,tmax,\n-     *                 iframe)\n-        tgetpar = cputime(t1) + tgetpar\n-        if(debug)write(ludebg,16)iframe,skyval,gxwid,gywid,tmin,tmax\n-   16   format(' Getparams on frame ',i4,'  sky ',f6.1,'  gxwid ',f5.1,\n-     *         '  gywid ',f5.1,'  tmin ',f5.1,'  tmax ',f5.1)\n-C\n-C\tInitialize\n-\tdo j=1,nsmax\n-\t  imtype(j) = 0\n-\t  do i=1,npmax  \n-\t    shadow(i,j)=0.                               \n-\t    shaderr(i,j)=0.\n-\t  enddo\n-\tenddo\n-C              \n-\tskyguess=skyval\n-\ttfac = 1.0            \n-C\tUse 4.5 X SD as fitting width       \n-\tfitr=fitfac*(gxwid*asprat*gywid)**0.25 + 0.5                      \n-\ti=fitr\n-\tirect(1)=i\n-\tirect(2)=fitr/asprat \n-C\tUse 4/3 X FitFac X SD as aperture width\n-\tgmax = asprat*gywid\n- \tif(gxwid.gt.gmax) gmax=gxwid\n-\taprw = 1.33*fitfac*sqrt(gmax) + 0.5\n-\ti = aprw\n-\tarect(1) = i\n-\ti = aprw/asprat + 0.1\n-\tarect(2) = i          \n-C                                     \n-\tif(irect(1).gt.50) irect(1)=50\n-\tif(irect(2).gt.50) irect(2)=50  \n-\tif(arect(1).gt.45.) arect(1)=45.\n-\tif(arect(2).gt.45.) arect(2)=45.\n-C\n-\tif (screen) call htype(line,skyval,.false.,fitr,ngr,ncon)\n-C\n-C       Prompt for further information         \n-\tif ( .not.comd ) then\n-          write(*,1002)\n- 1002     format(/'The above are the inital parameters DoPHOT'/\n-     *            'has found. You can change them now or accept'/\n-     *            'the values in [ ] by pressing enter'/)\n-\n-          write(*,1004)tmin\n- 1004     format('Enter Tmin: threshold for star detection',\n-     *           ' [',f5.1,']  ',$)\n-          read(*,1000)record\n-          if(record.ne.' ')read(record,*)tmin\n-\n-          write(*,1005)cmin\n- 1005     format('Enter Cmin: threshold for PSF stars',\n-     *           '      [',f5.1,']  ',$)\n-          read(*,1000)record\n-          if(record.ne.' ')read(record,*)cmin\n-\n-          write(*,1006)\n- 1006     format('Do you want to fix the aperture mag size ?',\n-     *           ' (y/[n]) ')\n-          read(*,1000)record\n-          if(record.eq.'y'.or.record.eq.'Y')then\n-            write(*,1007)\n- 1007       format('Enter the size in pixels: ',$)\n-            read(*,*)iapr\n- \t    if(iapr.gt.0) then          \n-              arect(1)=iapr\n-              i = iapr/asprat + 0.1\n-              arect(2)=i\n-            end if\n-\t  endif                     \n-C\n-\t  write(*,1008)\n- 1008     format('Satisfied with other input parameters ? ([y]/n)?',$)\n-\t  read(*,1000) yn        \n-          if(yn.eq.'n'.or.yn.eq.'N')then\n-            yn='n'\n-          else\n-            yn='y'\n-          end if\n-\t  if(.not.(yn.eq.'y'.or.yn.eq.'Y') ) call input\n-\telse\n-\t  if ( ifit.ne.0 ) then\n-\t    irect(1)=ifit\n-\t    irect(2)=(ifit/asprat + 0.1)\n-\t  endif              \n-\t  if ( iapr.ne.0 ) then\n-\t    arect(1)=iapr\n-\t    i = iapr/asprat + 0.1\n-\t    arect(2)=i\n-\t  endif                                       \n-\t  if ( itmn.ne.0 ) tmin = itmn\n- \t  if ( .not.(xc.eq.0.0.and.yc.eq.0.0) ) then\n-\t    xcen = xc\n- \t    ycen = yc\n-          endif\n-\tendif          \n-C\n-C--------------------------------\n-C\n-C\n-\tcall setup ( numf,nc,screen,line,skyval,fitr,ngr,ncon,\n-     +nfast, nslow )\n-C\n-C       if the uncrowded field option has been chosen, jump\n-C       straight to the minimum threshold\n-C\n-        if(nocrwd.eq.1)tmax=tmin\n-C             \n-C\tAdjust tfac so that thresh ends precisely on Tmin.\n-\tif(tmin/tmax .gt. 0.999) then\n-\t  thresh = tmin\n-\t  tfac = 1.          \n-\telse                                                     \n-\t  thresh = tmax\n-\t  xnum = alog10(tmax/tmin)/alog10(2.**tfac)\n-\t  if(xnum.gt.1.5) then\n-\t    xnum = float(nint(xnum))\n-\t  else if(xnum.ge.1) then               \n-\t    xnum = 2.0\n-\t  else             \n-\t    xnum = 1.0             \n-\t  endif                                         \n-\t  tfac = alog10(tmax/tmin)/alog10(2.)/xnum                   \n-\tendif\n-C                       \n-C------------------------------------------------------------------------\n-C                            \n-C         This is the BIG LOOP which searches the frame for stars\n-C               with intensities > thresh.                \n-C        \n-C-----------------------------------------------------------------------\n-C                           \n-\tloop = .true.\n-\tnstot = 0\n-\tdo while ( loop )   \n-\t  loop = thresh/tmin .ge. 1.01\n-\t  write(luout,1050) thresh\n-1050\t  format(/20('-')/'THRESHOLD: ', f10.3)\n-\t  if(ludebg.eq.12)write(ludebg,1050) thresh\n-C\n-C         Fit given model to sky values.\n-C\n-          call varipar(nstot, nfast, nslow )            \n-\t  t1 = cputime(0.0)\n-C               \n-C         Identifies potential objects in cleaned array IMG\n- \t  nstar = isearch( pseud2d, nfast, nslow , clinfo)\n-\t  tsearch = cputime(t1) + tsearch\n-C                                                                   \n-    \t  if ( (nstar .ne. 0).or.(xnum.lt.1.5) ) then\n-C                                           \n-C           Performs 7-parameter PSF fit and determines nature of object.\n-\t    t1 = cputime(0.0)\n-\t    call shape(pseud2d,pseud4d,nfast,nslow,clinfo)\n-\t    tshape = cputime(t1) + tshape\n-C                           \n-C           Computes average sky values etc from star list\n- \t    call paravg\n-  \t    t1 = cputime(0.0)\n-C                                                          \n-C           Computes 4-parameter fits for all stellar objects using \n-C           new average shape parameters.  \n-  \t    call improve(pseud2d,nfast,nslow,clinfo)\n-\t    timprove = cputime(t1) + timprove\n-\t  end if                         \n-C\n-C         Calculate aperture photometry on last pass.\n-\t  if(.not.loop) call aper ( pseud2d, nstot, nfast, nslow )\n-C             \n- \t  totaltime = (tgetpar+tsearch+tshape+timprove)\n-\t  write(3,1060) totaltime\n- \t  write(4,1060) totaltime\n-\t  write(luout,1060) totaltime\n-1060\t  format('Total CPU time consumed:',F10.2,' seconds.')\n-          write(10,1070)infile,tgetpar,tsearch,tshape,timprove,\n-     *                  totaltime\n-1070      format(a20,'   T(getp/f)',f5.1,'  T(search)',f5.1,\n-     *               '  T(shape)',f5.1,'  T(improve)',f5.1,\n-     *               '  Total',f6.1)\n-\t  call title (line,skyval,.false.,fitr,ngr,ncon,strint,ztot,nums)\n-\t  rewind(2)          \n- \t  rewind(3)                              \n-  \t  rewind(4)\n-C\n-\t  call output ( line )\n-C\n-C         Now reduce the threshold and loop back\n-C\n-\t  thresh = thresh/2.**tfac\n-  \tend do                   \n-C                              \n-C--------- END OF BIG LOOP ---------------------------------------\n-C                      \n-C\tIf after-burner required, residuals from analytic PSF are computed\n-C\tand stored in RES.\n-C\t\n-20\tif ( burn ) then\n-C \t\n-C\tIf using a fixed (X,Y) coordinate list, read it.\n-\t if (fixed) then\n-C\t Read the image frame\n- \t  call getfits(1,infile,header,nhead,nfast,nslow,numf,nc,line)\n-C\n-C\t Initialize arrays, open files etc.\n-\t  call setup ( numf,nc,screen,line,skyval,fitr,ngr,ncon,\n-     +nfast, nslow )\n-C\n-C\t Read the XY list                                 \n-\t  write(luout,'(''Reading XY list ...'')')\n-\t  call xylist(numf, nc, ios )\n-\t  if(ios.ne.0) then\n-\t   fixed = .false.\n-\t   write(luout,'(''SXY file absent or incorrect...'')')\n-\t   goto 15\n-\t  endif\n-C\n-\t  call htype(line,skyval,.false.,fitr,ngr,ncon)\n-C\n-C\t Remove good stars\n-\t  write(luout,'(''Cleaning frame of stars: '',i8)') nstot\n-\t  call clean ( pseud2d, nstot, nfast, nslow, -1)\n-C             \n-C\tCalculate aperture photometry\n-C\t  call aper ( pseud2d, nstot, nfast, nslow )\n-\t else            \n-\t   rewind(3)\n-\t   rewind(4)         \n-\t endif \n-C             \n-C-----------------------\n-C\tFlag all stars close together in groups.  Keep making the distance\n-C\tcriterion FITR smaller until the maximum number in a group is less\n-C\tthan NFMAX         \n-C                      \n-\t fitr = amax1(arect(1),arect(2))\n-\t fitr = fitr + 2.0      \n-\t nmax = 10000 \n-\t write(*,'(''Regrouping ...'')')\n-C              \n-\t do while ( nmax.gt.nfmax )\n-  \t  fitr = fitr - 1.0       \n-\t  write(luout,'(''Min distance ='',f8.1)') fitr\n-\t  call regroup( fitr, ngr, nmax )     \n-\t enddo\n-C\n-\t xlim = irect(1)/2 \n-\t ylim = irect(2)/2\n-C\n-C\tCalculate normalized PSF residual from PSEUD2D\n-\t call getres (pseud0d,pseud2d,strint,rmn,rmx,nfast,nslow,irect,\n-     +arect,ztot,nums)\n-\t if(nums.eq.0) then\n-\t  write(luout,'(''No suitable PSF stars!'')')\n-\t  goto 30\n-\t endif\n-C\n-\t write(luout,'(/''AFTERBURNER tuned ON!'')')\n-C\n-C\tFit multiple stars in a group with enhanced PSF using box size IRECT.\n-\t call mulfit( pseud2d,pseudmd,ngr,ncon,nfast,nslow,irect )        \n-C\n-C\tRe-calculate aperture photometry\n-\t call aperm ( pseudmd, nstot, nfast, nslow )\n-C\n-\t call skyadj ( nstot )\n-C\n- \t call title (line,skyval,.true.,fitr,ngr,ncon,strint,ztot,nums)\n-\t call output ( line )\n-\tendif \n-C---------------------                                                \n-C\n-C-----  This section skipped if PSF residual not written out ------\n-C                     \n-30\tif( isub ) then\n-C\n-C\tWrite final Cleaned array.\n- \t infile = 'x'//numf(1:nc)//'.fits'\n-\t call putfits(2,infile,header,nhead,nfast,nslow)\n-\t close(2)                 \n-C             \n-C\tIf afterburner used, then residual array also written out.\n-C\tFind suitable scale for writing residual PSF to FITS \"R\" file.\n-C\n- \t if ( wrtres ) then\n-\t  scale=20000.0/(rmx-rmn)\n-\t  zero=-scale*rmn   \n-\t  do j=-nres,nres\n-  \t   jj=nres+j+1   \n-\t   do i=-nres,nres\n-  \t    ii=nres+i+1                                  \n-\t    big(ii,jj)=scale*res(i,j)+zero\n-\t   enddo\n-\t  enddo\n-\t  nx=2*nres+1  \n-C\n-\t  infile = 'r'//numf(1:nc)//'.fits'\n-  \t  zer=-zero/scale\n- \t  scl=1.0/scale            \n-C                                           \n-C\tCreate a FITS header for the normalized PSF residual image    \n-\t  call sethead(rhead,numf,nx,nx,zer,scl)\n- \t  scale=1.0             \n-\t  zero=0.0    \n-C\tWrite the normalized PSF residual image\n-\t  call putfits(2,infile,rhead,1,nx,nx)\n-\t  close(2)\n-\t endif\n-C                        \n-\tend if\n-C                     \n-C                     \n-900\tclose(1)\n-\tclose(3)                                 \n- \tclose(4)\n-\tif ( .not.screen ) close(luout)\n-\tif(comd) then\n-          if(instr(5).eq.1)call system('rm shd.'//numf(1:nc))\n-          if(instr(6).eq.1)call system('rm out.'//numf(1:nc))\n-          n=1\n-          do while(infile(n:n).ne.' ')\n-            n=n+1\n-          end do\n-          if(instr(7).eq.1)call system('rm '//infile(1:n-1))\n-        end if\n-\tfixed = fixedxy\n-\tgoto 1\n-C\n-995     print 996\n-996     format(/'*** Fatal error ***'/\n-     *          'You asked for batch processing but'/\n-     *          'I cant open the \"dophot.bat\" file.'/\n-     *          'Please make one (using batchdophot)'/\n-     *          'and restart DoPHOT'/)\n-        go to 999\n-\n-C\n-997     print 998\n-998     format(/'*** Fatal error ***'/\n-     *          'You asked for \"windowed\" processing'/\n-     *          'but I cant open the \"windows\" file.'/\n-     *          'Please make one and restart DoPHOT'/)\n-\n-999\tcall exit(0)\n-\tend\n-\n-* (gdb) r\n-* Starting program: /home3/craig/gnu/f77-e/gcc/f771 -quiet < ../../play/19990826-4.f -O\n-* [...]\n-* Breakpoint 2, fancy_abort (\n-*     file=0x8285220 \"../../g77-e/gcc/config/i386/i386.c\", line=4399,\n-*     function=0x82860df \"output_fp_cc0_set\") at ../../g77-e/gcc/rtl.c:1010\n-* (gdb) up\n-* #1  0x8222fab in output_fp_cc0_set (insn=0x8382324)\n-*     at ../../g77-e/gcc/config/i386/i386.c:4399\n-* (gdb) p insn\n-* $1 = 0x3a\n-* (gdb) up\n-* #2  0x8222b81 in output_float_compare (insn=0x8382324, operands=0x82acc60)\n-*     at ../../g77-e/gcc/config/i386/i386.c:4205\n-* (gdb) p insn\n-* $2 = 0x8382324\n-* (gdb) whatis insn\n-* type = rtx\n-* (gdb) pr\n-* (insn 2181 2180 2191 (parallel[\n-*             (set (cc0)\n-*                 (compare (reg:SF 8 %st(0))\n-*                     (mem:SF (plus:SI (reg:SI 6 %ebp)\n-*                             (const_int -9948 [0xffffd924])) 0)))\n-*             (clobber (reg:HI 0 %ax))\n-*         ] ) 29 {*cmpsf_cc_1} (insn_list 2173 (insn_list 2173 (nil)))\n-*     (expr_list:REG_DEAD (reg:DF 8 %st(0))\n-*         (expr_list:REG_UNUSED (reg:HI 0 %ax)\n-*             (nil))))\n-* (gdb)"}, {"sha": "026d05e4b3ce819aeef9a46c795205ebd4fba542", "filename": "gcc/testsuite/g77.f-torture/noncompile/19990905-1.f", "status": "removed", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fnoncompile%2F19990905-1.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fnoncompile%2F19990905-1.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fnoncompile%2F19990905-1.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,8 +0,0 @@\n-* =foo7.f in Burley's g77 test suite.\n-      subroutine x\n-      real a(n)\n-      common /foo/n\n-      continue\n-      entry y(a)\n-      call foo(a(1))\n-      end"}, {"sha": "e68b3e0a65fffad771b183d1f129c8b3d2031c6d", "filename": "gcc/testsuite/g77.f-torture/noncompile/9263.f", "status": "removed", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fnoncompile%2F9263.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fnoncompile%2F9263.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fnoncompile%2F9263.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,7 +0,0 @@\n-      PARAMETER (Q=1)\n-      PARAMETER (P=10)\n-      INTEGER C(10),D(10),E(10),F(10)\n-      DATA (C(I),I=1,P)      /10*10/  ! TERMINAL NOT INTEGER\n-      DATA (D(I),I=Q,10)     /10*10/  ! START NOT INTEGER\n-      DATA (E(I),I=1,10,Q)   /10*10/  ! INCREMENT NOT INTEGER\n-      END"}, {"sha": "c1e2348646f7b2668413b0506c4df98646b23a19", "filename": "gcc/testsuite/g77.f-torture/noncompile/970626-2.f", "status": "removed", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fnoncompile%2F970626-2.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fnoncompile%2F970626-2.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fnoncompile%2F970626-2.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,4 +0,0 @@\n-      SUBROUTINE A(A,ALPHA,IA)\n-      COMPLEX  A(IA,*), ALPHA(*)\n-      ALPHA(I)=A(I,I).ZERO)\n-      END"}, {"sha": "316969f6aa818902512482913b6e158d4e416e91", "filename": "gcc/testsuite/g77.f-torture/noncompile/980615-0.f", "status": "removed", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fnoncompile%2F980615-0.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fnoncompile%2F980615-0.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fnoncompile%2F980615-0.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,10 +0,0 @@\n-* Fixed by JCB 1998-07-25 change to stc.c.\n-\n-* Date: Thu, 11 Jun 1998 22:35:20 -0500\n-* From: Ian A Watson <WATSON_IAN_A@lilly.com>\n-* Subject: crash\n-* \n-      CaLL foo(W)\n-      END\n-      SUBROUTINE foo(W)\n-      yy(I)=A(I)Q(X)"}, {"sha": "bd5e74022a3f307e25881a5421cbd172472bbbbe", "filename": "gcc/testsuite/g77.f-torture/noncompile/980616-0.f", "status": "removed", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fnoncompile%2F980616-0.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fnoncompile%2F980616-0.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fnoncompile%2F980616-0.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,8 +0,0 @@\n-* Fixed by 1998-07-11 equiv.c change.\n-* ../../gcc/f/equiv.c:666: failed assertion `ffebld_op (subscript) == FFEBLD_opCONTER'\n-\n-* Date: Mon, 15 Jun 1998 21:54:32 -0500\n-* From: Ian A Watson <WATSON_IAN_A@lilly.com>\n-* Subject: Mangler Crash\n-      EQUIVALENCE(I,glerf(P))\n-      COMMON /foo/ glerf(3)"}, {"sha": "fc3c6ca730e2b531e2dfa26f511123d40a25ea4d", "filename": "gcc/testsuite/g77.f-torture/noncompile/check0.f", "status": "removed", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fnoncompile%2Fcheck0.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fnoncompile%2Fcheck0.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fnoncompile%2Fcheck0.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,11 +0,0 @@\n-CCC Abort fixed by:\n-CCC1998-04-21  Jim Wilson  <wilson@cygnus.com>\n-CCC\n-CCC        * stmt.c (check_seenlabel): When search for line number note for\n-CCC        warning, handle case where there is no such note.\n-      logical l(10)\n-      integer i(10)\n-      goto (10,20),l\n-      goto (10,20),i\n- 10   stop\n- 20   end"}, {"sha": "fadd1fbbe5af4f83c93195c87c567485dbe67ee5", "filename": "gcc/testsuite/g77.f-torture/noncompile/noncompile.exp", "status": "removed", "additions": 0, "deletions": 36, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fnoncompile%2Fnoncompile.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fnoncompile%2Fnoncompile.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fnoncompile%2Fnoncompile.exp?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,36 +0,0 @@\n-#   Copyright (C) 1988, 90, 91, 92, 97, 1998 Free Software Foundation, Inc.\n-\n-# This program is free software; you can redistribute it and/or modify\n-# it under the terms of the GNU General Public License as published by\n-# the Free Software Foundation; either version 2 of the License, or\n-# (at your option) any later version.\n-# \n-# This program is distributed in the hope that it will be useful,\n-# but WITHOUT ANY WARRANTY; without even the implied warranty of\n-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-# GNU General Public License for more details.\n-# \n-# You should have received a copy of the GNU General Public License\n-# along with this program; if not, write to the Free Software\n-# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  \n-\n-# This file was written by Jeff Law. (law@cs.utah.edu)\n-\n-#\n-# These tests come from Torbjorn Granlund (tege@cygnus.com)\n-# C torture test suite.\n-#\n-\n-load_lib mike-g77.exp\n-\n-# Test check0.f\n-prebase\n-\n-set src_code check0.f\n-# Not really sure what the error should be here...\n-set compiler_output \".*:8.*:9\"\n-\n-set groups {passed gcc-noncompile}\n-\n-postbase $src_code $run $groups\n-"}, {"sha": "f7dad339a8158bd92917785b44af49a9df56d04e", "filename": "gcc/testsuite/g77.f-torture/noncompile/select_no_compile.f", "status": "removed", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fnoncompile%2Fselect_no_compile.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320e32f649fa1c9e4ae6832552c478653d605121/gcc%2Ftestsuite%2Fg77.f-torture%2Fnoncompile%2Fselect_no_compile.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fnoncompile%2Fselect_no_compile.f?ref=320e32f649fa1c9e4ae6832552c478653d605121", "patch": "@@ -1,10 +0,0 @@\n-       integer*1 one\n-       integer*2 two\n-       parameter (one=1)\n-       parameter (two=2)\n-       select case (I)\n-       case (one)\n-       case (two)\n-       end select\n-       end\n-    "}]}