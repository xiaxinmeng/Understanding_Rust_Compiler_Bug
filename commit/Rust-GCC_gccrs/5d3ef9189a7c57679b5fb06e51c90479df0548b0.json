{"sha": "5d3ef9189a7c57679b5fb06e51c90479df0548b0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWQzZWY5MTg5YTdjNTc2NzliNWZiMDZlNTFjOTA0NzlkZjA1NDhiMA==", "commit": {"author": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2021-05-23T09:56:39Z"}, "committer": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2021-05-23T09:56:39Z"}, "message": "fortran/intrinsic.texi: Use proper variable name\n\ngcc/fortran/ChangeLog:\n\n\t* intrinsic.texi (ATOMIC_ADD, ATOMIC_FETCH_ADD): Use the\n\tproper variable name in the description.", "tree": {"sha": "4554cbcaf50e630b5341e714556a0417c4a5066c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4554cbcaf50e630b5341e714556a0417c4a5066c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5d3ef9189a7c57679b5fb06e51c90479df0548b0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d3ef9189a7c57679b5fb06e51c90479df0548b0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5d3ef9189a7c57679b5fb06e51c90479df0548b0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d3ef9189a7c57679b5fb06e51c90479df0548b0/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1160d9c1e482ea1dc524c056aa8eeaff6b1a591e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1160d9c1e482ea1dc524c056aa8eeaff6b1a591e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1160d9c1e482ea1dc524c056aa8eeaff6b1a591e"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "ad16413798697bccb556a30fc977f257747eaca6", "filename": "gcc/fortran/intrinsic.texi", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d3ef9189a7c57679b5fb06e51c90479df0548b0/gcc%2Ffortran%2Fintrinsic.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d3ef9189a7c57679b5fb06e51c90479df0548b0/gcc%2Ffortran%2Fintrinsic.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fintrinsic.texi?ref=5d3ef9189a7c57679b5fb06e51c90479df0548b0", "patch": "@@ -1870,7 +1870,7 @@ Inverse function: @gol\n \n @table @asis\n @item @emph{Description}:\n-@code{ATOMIC_ADD(ATOM, VALUE)} atomically adds the value of @var{VAR} to the\n+@code{ATOMIC_ADD(ATOM, VALUE)} atomically adds the value of @var{VALUE} to the\n variable @var{ATOM}. When @var{STAT} is present and the invocation was\n successful, it is assigned the value 0. If it is present and the invocation\n has failed, it is assigned a positive value; in particular, for a coindexed\n@@ -2090,7 +2090,7 @@ end program atomic\n @table @asis\n @item @emph{Description}:\n @code{ATOMIC_FETCH_ADD(ATOM, VALUE, OLD)} atomically stores the value of\n-@var{ATOM} in @var{OLD} and adds the value of @var{VAR} to the\n+@var{ATOM} in @var{OLD} and adds the value of @var{VALUE} to the\n variable @var{ATOM}. When @var{STAT} is present and the invocation was\n successful, it is assigned the value 0. If it is present and the invocation\n has failed, it is assigned a positive value; in particular, for a coindexed"}]}