{"sha": "f326a6cbc00ba13125882eb13d257660f2618d56", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjMyNmE2Y2JjMDBiYTEzMTI1ODgyZWIxM2QyNTc2NjBmMjYxOGQ1Ng==", "commit": {"author": {"name": "Naveen.H.S", "email": "naveen.hs@kpitcummins.com", "date": "2008-03-25T13:41:23Z"}, "committer": {"name": "Kaz Kojima", "email": "kkojima@gcc.gnu.org", "date": "2008-03-25T13:41:23Z"}, "message": "sh.c (sh_expand_t_scc): Emit movrt for SH2A if possible.\n\n\t* config/sh/sh.c (sh_expand_t_scc): Emit movrt for SH2A if\n\tpossible.\n\t* config/sh/sh.md (xorsi3_movrt, movrt): New insns.\n\n\t* gcc.target/sh/sh2a-movrt.c: New test.\n\nFrom-SVN: r133517", "tree": {"sha": "611a36da838d794beb466fa7805b1c7e331eaed3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/611a36da838d794beb466fa7805b1c7e331eaed3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f326a6cbc00ba13125882eb13d257660f2618d56", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f326a6cbc00ba13125882eb13d257660f2618d56", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f326a6cbc00ba13125882eb13d257660f2618d56", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f326a6cbc00ba13125882eb13d257660f2618d56/comments", "author": null, "committer": null, "parents": [{"sha": "b4b0018b305101e1f5b4951169e1d5649747367e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4b0018b305101e1f5b4951169e1d5649747367e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b4b0018b305101e1f5b4951169e1d5649747367e"}], "stats": {"total": 47, "additions": 47, "deletions": 0}, "files": [{"sha": "97b2f64c8fe449e050b6e8fb41d7c46ba7877a87", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f326a6cbc00ba13125882eb13d257660f2618d56/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f326a6cbc00ba13125882eb13d257660f2618d56/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f326a6cbc00ba13125882eb13d257660f2618d56", "patch": "@@ -1,3 +1,9 @@\n+2008-03-25  Naveen.H.S  <naveen.hs@kpitcummins.com>\n+\n+\t* config/sh/sh.c (sh_expand_t_scc): Emit movrt for SH2A if\n+\tpossible.\n+\t* config/sh/sh.md (xorsi3_movrt, movrt): New insns.\n+\n 2008-03-25  Naveen.H.S  <naveen.hs@kpitcummins.com>\n \n \t* config/sh/sh.md (prefetch): Add condition for SH2A target."}, {"sha": "699ac899bffe7599359691f8355849e7a4b4fcbf", "filename": "gcc/config/sh/sh.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f326a6cbc00ba13125882eb13d257660f2618d56/gcc%2Fconfig%2Fsh%2Fsh.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f326a6cbc00ba13125882eb13d257660f2618d56/gcc%2Fconfig%2Fsh%2Fsh.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.c?ref=f326a6cbc00ba13125882eb13d257660f2618d56", "patch": "@@ -10605,6 +10605,9 @@ sh_expand_t_scc (enum rtx_code code, rtx target)\n   val = INTVAL (sh_compare_op1);\n   if ((code == EQ && val == 1) || (code == NE && val == 0))\n     emit_insn (gen_movt (result));\n+  else if (TARGET_SH2A && ((code == EQ && val == 0)\n+\t\t\t    || (code == NE && val == 1)))\n+    emit_insn (gen_movrt (result));\n   else if ((code == EQ && val == 0) || (code == NE && val == 1))\n     {\n       emit_insn (gen_rtx_CLOBBER (VOIDmode, result));"}, {"sha": "61e902563ef0d828fba30e70a69a8f64eed27217", "filename": "gcc/config/sh/sh.md", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f326a6cbc00ba13125882eb13d257660f2618d56/gcc%2Fconfig%2Fsh%2Fsh.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f326a6cbc00ba13125882eb13d257660f2618d56/gcc%2Fconfig%2Fsh%2Fsh.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.md?ref=f326a6cbc00ba13125882eb13d257660f2618d56", "patch": "@@ -3326,6 +3326,15 @@ label:\n \txori\t%1, %2, %0\"\n   [(set_attr \"type\" \"arith_media\")])\n \n+;; Store the complements of the T bit in a register.\n+(define_insn \"xorsi3_movrt\"\n+  [(set (match_operand:SI 0 \"arith_reg_dest\" \"=r\")\n+\t(xor:SI (reg:SI T_REG)\n+\t\t(const_int 1)))]\n+  \"TARGET_SH2A\"\n+  \"movrt\\\\t%0\"\n+  [(set_attr \"type\" \"arith\")])\n+\n (define_insn \"xordi3\"\n   [(set (match_operand:DI 0 \"arith_reg_dest\" \"=r,r\")\n \t(xor:DI (match_operand:DI 1 \"arith_reg_operand\" \"%r,r\")\n@@ -9545,6 +9554,16 @@ mov.l\\\\t1f,r0\\\\n\\\\\n   \"movt\t%0\"\n   [(set_attr \"type\" \"arith\")])\n \n+;; complements the T bit and stores the result in a register\n+(define_insn \"movrt\"\n+  [(set (match_operand:SI 0 \"arith_reg_dest\" \"=r\")\n+        (if_then_else (eq:SI (reg:SI T_REG) (const_int 0))\n+        (const_int 1)\n+        (const_int 0)))]\n+  \"TARGET_SH2A\"\n+  \"movrt\\\\t%0\"\n+   [(set_attr \"type\" \"arith\")])\n+\n (define_expand \"seq\"\n   [(set (match_operand:SI 0 \"arith_reg_dest\" \"\")\n \t(match_dup 1))]"}, {"sha": "da9126067ad1716fda90ba8268b4855ed6719aa3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f326a6cbc00ba13125882eb13d257660f2618d56/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f326a6cbc00ba13125882eb13d257660f2618d56/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f326a6cbc00ba13125882eb13d257660f2618d56", "patch": "@@ -1,3 +1,7 @@\n+2008-03-25  Naveen.H.S  <naveen.hs@kpitcummins.com>\n+\n+\t* gcc.target/sh/sh2a-movrt.c: New test.\n+\n 2008-03-25  Naveen.H.S  <naveen.hs@kpitcummins.com>\n \n \t* gcc.target/sh/sh2a-prefetch.c: New test."}, {"sha": "9df9f4ba9763a390f013ddd715a64831715ec771", "filename": "gcc/testsuite/gcc.target/sh/sh2a-movrt.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f326a6cbc00ba13125882eb13d257660f2618d56/gcc%2Ftestsuite%2Fgcc.target%2Fsh%2Fsh2a-movrt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f326a6cbc00ba13125882eb13d257660f2618d56/gcc%2Ftestsuite%2Fgcc.target%2Fsh%2Fsh2a-movrt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fsh%2Fsh2a-movrt.c?ref=f326a6cbc00ba13125882eb13d257660f2618d56", "patch": "@@ -0,0 +1,15 @@\n+/* Testcase to check generation of a SH2A specific instruction for\n+   'MOVRT Rn'.  */\n+/* { dg-do assemble {target sh*-*-*}}  */\n+/* { dg-options \"-O1\" }  */\n+/* { dg-skip-if \"\" { \"sh*-*-*\" } \"*\" \"-m2a -m2a-nofpu -m2a-single -m2a-single-only\" }  */\n+/* { dg-final { scan-assembler \"movrt\"} }  */\n+\n+int\n+foo (void)\n+{\n+  int a, b, g, stop;\n+  if (stop = ((a + b) % 2 != g))\n+    ;\n+  return stop;\n+}"}]}