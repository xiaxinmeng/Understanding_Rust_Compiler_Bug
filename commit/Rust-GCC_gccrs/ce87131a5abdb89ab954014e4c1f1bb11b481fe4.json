{"sha": "ce87131a5abdb89ab954014e4c1f1bb11b481fe4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2U4NzEzMWE1YWJkYjg5YWI5NTQwMTRlNGMxZjFiYjExYjQ4MWZlNA==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2010-11-21T08:18:31Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2010-11-21T08:18:31Z"}, "message": "re PR bootstrap/46533 ([alpha] bootstrap failure)\n\n\tPR target/46533\n\t* config/alpha/predicates.md (direct_call_operand): Return false\n\tfor !TARGET_SMALL_TEXT targets.\n\nFrom-SVN: r166999", "tree": {"sha": "bdbfb2f81550c536d1df478a14f6cd8ad3abd2f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bdbfb2f81550c536d1df478a14f6cd8ad3abd2f5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ce87131a5abdb89ab954014e4c1f1bb11b481fe4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce87131a5abdb89ab954014e4c1f1bb11b481fe4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce87131a5abdb89ab954014e4c1f1bb11b481fe4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce87131a5abdb89ab954014e4c1f1bb11b481fe4/comments", "author": null, "committer": null, "parents": [{"sha": "b8c73637a42f0f686fbc4e392d2718151dd2bd9e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8c73637a42f0f686fbc4e392d2718151dd2bd9e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b8c73637a42f0f686fbc4e392d2718151dd2bd9e"}], "stats": {"total": 49, "additions": 17, "deletions": 32}, "files": [{"sha": "12372881d34948b323a0968961beb84c29bb4138", "filename": "gcc/ChangeLog", "status": "modified", "additions": 16, "deletions": 15, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce87131a5abdb89ab954014e4c1f1bb11b481fe4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce87131a5abdb89ab954014e4c1f1bb11b481fe4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ce87131a5abdb89ab954014e4c1f1bb11b481fe4", "patch": "@@ -1,3 +1,9 @@\n+2010-11-21  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/46533\n+\t* config/alpha/predicates.md (direct_call_operand): Return false\n+\tfor !TARGET_SMALL_TEXT targets.\n+\n 2010-11-20  Joseph Myers  <joseph@codesourcery.com>\n \n \t* doc/tm.texi.in (HANDLE_SYSV_PRAGMA,\n@@ -8,8 +14,7 @@\n \t* system.h (HANDLE_PRAGMA_PACK_PUSH_POP, HANDLE_SYSV_PRAGMA,\n \tHANDLE_PRAGMA_WEAK): Poison.\n \t* config/alpha/elf.h (HANDLE_SYSV_PRAGMA): Don't define.\n-\t* config/alpha/linux.h (HANDLE_PRAGMA_PACK_PUSH_POP): Don't\n-\tdefine.\n+\t* config/alpha/linux.h (HANDLE_PRAGMA_PACK_PUSH_POP): Don't define.\n \t* config/alpha/osf5.h (HANDLE_SYSV_PRAGMA): Don't define.\n \t* config/alpha/vms.h (HANDLE_SYSV_PRAGMA): Don't define.\n \t* config/arm/arm.h (HANDLE_PRAGMA_PACK_PUSH_POP): Don't define.\n@@ -20,13 +25,11 @@\n \t* config/elfos.h (HANDLE_SYSV_PRAGMA): Don't define.\n \t* config/freebsd.h (HANDLE_PRAGMA_PACK_PUSH_POP): Don't define.\n \t* config/frv/frv.h (HANDLE_SYSV_PRAGMA): Don't define.\n-\t* config/i386/cygming.h (HANDLE_PRAGMA_PACK_PUSH_POP): Don't\n-\tdefine.\n+\t* config/i386/cygming.h (HANDLE_PRAGMA_PACK_PUSH_POP): Don't define.\n \t* config/i386/djgpp.h (HANDLE_PRAGMA_PACK_PUSH_POP): Don't define.\n \t* config/i386/i386-interix.h (HANDLE_SYSV_PRAGMA): Don't define.\n \t(HANDLE_PRAGMA_WEAK): Don't undefine.\n-\t* config/i386/netware.h (HANDLE_PRAGMA_PACK_PUSH_POP): Don't\n-\tdefine.\n+\t* config/i386/netware.h (HANDLE_PRAGMA_PACK_PUSH_POP): Don't define.\n \t* config/i386/vxworks.h (HANDLE_SYSV_PRAGMA): Don't define.\n \t* config/ia64/hpux.h (HANDLE_PRAGMA_PACK_PUSH_POP): Don't define.\n \t* config/ia64/ia64.h (HANDLE_SYSV_PRAGMA): Don't define.\n@@ -46,8 +49,7 @@\n \t* config/pa/pa-hpux.h (HANDLE_SYSV_PRAGMA): Don't define.\n \t(HANDLE_PRAGMA_PACK_PUSH_POP): Don't define.\n \t* config/rs6000/aix.h (HANDLE_SYSV_PRAGMA): Don't define.\n-\t* config/rs6000/sysv4.h (HANDLE_PRAGMA_PACK_PUSH_POP): Don't\n-\tdefine.\n+\t* config/rs6000/sysv4.h (HANDLE_PRAGMA_PACK_PUSH_POP): Don't define.\n \t* config/rx/rx.h (HANDLE_PRAGMA_PACK_PUSH_POP): Don't define.\n \t* config/score/elf.h (HANDLE_SYSV_PRAGMA): Don't define.\n \t* config/spu/spu.h (HANDLE_PRAGMA_PACK_PUSH_POP): Don't define.\n@@ -83,8 +85,7 @@\n 2010-11-20  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n \n \tPR other/46202\n-\t* Makefile.in (install_sh, INSTALL_STRIP_PROGRAM): New\n-\tvariables.\n+\t* Makefile.in (install_sh, INSTALL_STRIP_PROGRAM): New variables.\n \t(AR_FOR_TARGET, RANLIB_FOR_TARGET, STRIP_FOR_TARGET): Fix\n \tshell quoting.\n \t(STRIP_FOR_TARGET): Look for in-tree strip under name strip-new.\n@@ -100,18 +101,18 @@\n \t* config/pdp11/pdp11.md (define_constants): Add register numbers.\n \t* config/pdp11/pdp11.c (pdp11_regno_reg_class,\n \tpdp11_sp_frame_offset, pdp11_initial_elimination_offset): New\n-\tfunctions. \n+\tfunctions.\n \t* config/pdp11/pdp11.h (FIXED_REGISTERS, CALL_USED_REGISTERS): Add\n \tframe pointer and argument pointer pseudo-registers.\n \t(ARG_POINTER_REGNUM): Define.\n \t(REG_CLASS_CONTENTS, REGNO_REG_CLASS): Add frame pointer and\n-\targument pointer. \n+\targument pointer.\n \t(FIRST_PARM_OFFSET): Update for argument pointer.\n \t(INITIAL_FRAME_POINTER_OFFSET): Delete.\n \t(ELIMINABLE_REGS, INITIAL_ELIMINATION_OFFSET): New macros.\n \t(REGNO_OK_FOR_BASE_P, REGNO_OK_FOR_INDEX_P, REGISTER_NAMES): Add\n-\tframe pointer and argument pointer. \n-\t\n+\tframe pointer and argument pointer.\n+\n 2010-11-20  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR debug/46561\n@@ -153,7 +154,7 @@\n 2010-11-19  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* mode-switching.c (optimize_mode_switching): Use\n-\tFOR_BB_INSNS instead of open-coded for loop.\n+\tFOR_BB_INSNS instead of open-coded loop.\n \t* cfgrtl.c (redirect_branch_edge): Ditto.\n \n 2010-11-19  Joern Rennecke  <amylaar@spamcop.net>"}, {"sha": "2f17fb9e3c3cb1cc90199e7ebe9ef83023b1ae28", "filename": "gcc/config/alpha/predicates.md", "status": "modified", "additions": 1, "deletions": 17, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce87131a5abdb89ab954014e4c1f1bb11b481fe4/gcc%2Fconfig%2Falpha%2Fpredicates.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce87131a5abdb89ab954014e4c1f1bb11b481fe4/gcc%2Fconfig%2Falpha%2Fpredicates.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Fpredicates.md?ref=ce87131a5abdb89ab954014e4c1f1bb11b481fe4", "patch": "@@ -266,8 +266,6 @@\n (define_predicate \"direct_call_operand\"\n   (match_operand 0 \"samegp_function_operand\")\n {\n-  tree op_decl, cfun_sec, op_sec;\n-\n   /* If profiling is implemented via linker tricks, we can't jump\n      to the nogp alternate entry point.  Note that crtl->profile\n      would not be correct, since that doesn't indicate if the target\n@@ -291,21 +289,7 @@\n   if (TARGET_SMALL_TEXT)\n     return true;\n \n-  /* Otherwise, a decl is \"near\" if it is defined in the same section.  */\n-  if (flag_function_sections)\n-    return false;\n-\n-  op_decl = SYMBOL_REF_DECL (op);\n-  if (DECL_ONE_ONLY (current_function_decl)\n-      || (op_decl && DECL_ONE_ONLY (op_decl)))\n-    return false;\n-\n-  cfun_sec = DECL_SECTION_NAME (current_function_decl);\n-  op_sec = op_decl ? DECL_SECTION_NAME (op_decl) : NULL;\n-  return ((!cfun_sec && !op_sec)\n-\t  || (cfun_sec && op_sec\n-\t      && strcmp (TREE_STRING_POINTER (cfun_sec),\n-\t\t         TREE_STRING_POINTER (op_sec)) == 0));\n+  return false;\n })\n \n ;; Return 1 if OP is a valid operand for the MEM of a CALL insn."}]}