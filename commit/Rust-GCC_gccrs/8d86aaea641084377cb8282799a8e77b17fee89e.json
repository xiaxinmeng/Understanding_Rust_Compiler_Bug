{"sha": "8d86aaea641084377cb8282799a8e77b17fee89e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGQ4NmFhZWE2NDEwODQzNzdjYjgyODI3OTlhOGU3N2IxN2ZlZTg5ZQ==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-06-28T15:31:14Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-06-28T15:31:14Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r1326", "tree": {"sha": "e5f239d70e9790448b0411bc6164e0ffb7177709", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e5f239d70e9790448b0411bc6164e0ffb7177709"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8d86aaea641084377cb8282799a8e77b17fee89e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d86aaea641084377cb8282799a8e77b17fee89e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8d86aaea641084377cb8282799a8e77b17fee89e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d86aaea641084377cb8282799a8e77b17fee89e/comments", "author": null, "committer": null, "parents": [{"sha": "5aa8b4bb27ed8f40866a7a85ecc08ec96d6308a2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5aa8b4bb27ed8f40866a7a85ecc08ec96d6308a2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5aa8b4bb27ed8f40866a7a85ecc08ec96d6308a2"}], "stats": {"total": 11, "additions": 4, "deletions": 7}, "files": [{"sha": "e6ddbdb512b5d4bcff20f059e3250afd2b1f8f15", "filename": "gcc/Makefile.in", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d86aaea641084377cb8282799a8e77b17fee89e/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d86aaea641084377cb8282799a8e77b17fee89e/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=8d86aaea641084377cb8282799a8e77b17fee89e", "patch": "@@ -32,8 +32,8 @@\n LANGUAGES = c c++ objective-c proto\n \n ALLOCA =\n-ALLOCA_FLAGS = -S -Demacs\n-ALLOCA_FINISH = as -o alloca.o alloca.s\n+ALLOCA_FLAGS =\n+ALLOCA_FINISH =\n \n # Various ways of specifying flags for compilations:  \n # CFLAGS is for the user to override to, e.g., do a bootstrap with -O2.\n@@ -851,13 +851,10 @@ aux-output.o : aux-output.c $(CONFIG_H) \\\n # Normally this target is not used; but it is used if you\n # define ALLOCA=alloca.o.  In that case, you must get a suitable alloca.c\n # from the GNU Emacs distribution.\n-# Note some machines won't allow $(CC) without -S on this source file.\n alloca.o:\talloca.c\n-# sed is used to strip the comments from the assembler output.\n \t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $(ALLOCA_FLAGS) \\\n-\t  `echo $(srcdir)/alloca.c | sed 's,^\\./,,'`\n+\t  -Demacs `echo $(srcdir)/alloca.c | sed 's,^\\./,,'`\n \t$(ALLOCA_FINISH)\n-\t-rm alloca.s\n \f\n # Generate header and source files from the machine description, \n # and compile them.\n@@ -1433,7 +1430,7 @@ install-float-h: float.h install-dir\n install-limits-h: limits.h limitx.h install-dir\n \t-rm -f $(libsubdir)/include/limits.h tmp-limits.h\n \tif [ -f /usr/include/limits.h ] ; then \\\n-\t  cat $(srcdir)/limitx.h $(srcdir)/limits.h > tmp-limits.h; \\\n+\t  cat $(srcdir)/limitx.h $(srcdir)/limits.h $(srcdir)/limity.h > tmp-limits.h; \\\n \telse \\\n \t  cat $(srcdir)/limits.h > tmp-limits.h; \\\n \tfi"}]}