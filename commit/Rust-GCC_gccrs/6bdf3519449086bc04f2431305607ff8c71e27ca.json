{"sha": "6bdf3519449086bc04f2431305607ff8c71e27ca", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmJkZjM1MTk0NDkwODZiYzA0ZjI0MzEzMDU2MDdmZjhjNzFlMjdjYQ==", "commit": {"author": {"name": "Steven Bosscher", "email": "steven@gcc.gnu.org", "date": "2012-07-11T08:58:58Z"}, "committer": {"name": "Steven Bosscher", "email": "steven@gcc.gnu.org", "date": "2012-07-11T08:58:58Z"}, "message": "expr.h (can_move_by_pieces): Move prototype from here ...\n\ngcc/\n\t* expr.h (can_move_by_pieces): Move prototype from here ...\n\t* tree.h (can_move_by_pieces): ... to here.\n\t* optabs.h (set_widening_optab_handler): Use XCNEW.\n\t* gimplify.c: Do not include expr.h.\n\n\t* toplev.c: Do not include dwarf2out.h.\n\t* config/ia64/ia64.c: Likewise.\n\t* config/sparc/sparc.c: Likewise.\n\t* config/sparc/t-sparc (sparc.o): Fix dependencies.\n\n\t* Makefile.in (toplev.o): Fix dependencies\n\t(c-family/c-gimplify.o): Likewise.\n\t(c-family/c-common.o): Likewise.\n\nc-family/\n\t* c-gimplify.c: Do not include basic-block.h.\n\t* c-common.c: Do not include linfuncs.h.\n\ncp/\n\t* method.c: Do not include tree-pass.h.\n\nfortran/\n\t* trans.c: Do not include defaults.h.\n\t* trans-intrinsic.c: Likewise.\n\njava/\n\t* decl.c: Do not include libfuncs.h.\n\t* class.c: Do not include defaults.h.\n\t* jvgenmain.c: Likewise.\n\t* magnle.c: Likewise.\n\t* Make-lang.in (decl.o): Fix dependencies.\n\nFrom-SVN: r189425", "tree": {"sha": "925b12f81139a149b6eac2f48f1a0c0b78fd2124", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/925b12f81139a149b6eac2f48f1a0c0b78fd2124"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6bdf3519449086bc04f2431305607ff8c71e27ca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6bdf3519449086bc04f2431305607ff8c71e27ca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6bdf3519449086bc04f2431305607ff8c71e27ca", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6bdf3519449086bc04f2431305607ff8c71e27ca/comments", "author": null, "committer": null, "parents": [{"sha": "b8244d74e1929d1f4e06dbc3ca307ddf754c6b3c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8244d74e1929d1f4e06dbc3ca307ddf754c6b3c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b8244d74e1929d1f4e06dbc3ca307ddf754c6b3c"}], "stats": {"total": 90, "additions": 55, "deletions": 35}, "files": [{"sha": "d3bbb5ab409f6288e99ad34529860c30146feca3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bdf3519449086bc04f2431305607ff8c71e27ca/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bdf3519449086bc04f2431305607ff8c71e27ca/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6bdf3519449086bc04f2431305607ff8c71e27ca", "patch": "@@ -1,3 +1,19 @@\n+2012-07-11  Steven Bosscher  <steven@gcc.gnu.org>\n+\n+\t* expr.h (can_move_by_pieces): Move prototype from here ...\n+\t* tree.h (can_move_by_pieces): ... to here.\n+\t* optabs.h (set_widening_optab_handler): Use XCNEW.\n+\t* gimplify.c: Do not include expr.h.\n+\n+\t* toplev.c: Do not include dwarf2out.h.\n+\t* config/ia64/ia64.c: Likewise.\n+\t* config/sparc/sparc.c: Likewise.\n+\t* config/sparc/t-sparc (sparc.o): Fix dependencies.\n+\n+\t* Makefile.in (toplev.o): Fix dependencies\n+\t(c-family/c-gimplify.o): Likewise.\n+\t(c-family/c-common.o): Likewise.\n+\n 2012-07-11  Steven Bosscher  <steven@gcc.gnu.org>\n \n \t* basic-block.h (struct edge_def): Use basic_block instead of"}, {"sha": "1d6ded22a21d0cf4b0f8f6e0a2eaa427bf7f6f4e", "filename": "gcc/Makefile.in", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bdf3519449086bc04f2431305607ff8c71e27ca/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bdf3519449086bc04f2431305607ff8c71e27ca/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=6bdf3519449086bc04f2431305607ff8c71e27ca", "patch": "@@ -1925,8 +1925,7 @@ c-family/c-common.o : c-family/c-common.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n \t$(DIAGNOSTIC_H) langhooks.h c-family/c-objc.h \\\n \t$(TARGET_H) tree-iterator.h langhooks.h tree-mudflap.h \\\n \tintl.h $(OPTS_H) $(CPPLIB_H) $(TREE_INLINE_H) $(HASHTAB_H) \\\n-\t$(BUILTINS_DEF) $(CGRAPH_H) $(BASIC_BLOCK_H) $(TARGET_DEF_H) \\\n-\t$(LIBFUNCS_H) \\\n+\t$(BUILTINS_DEF) $(CGRAPH_H) $(TARGET_DEF_H) \\\n \tgt-c-family-c-common.h $(COMMON_TARGET_H)\n \n c-family/c-cppbuiltin.o : c-family/c-cppbuiltin.c $(CONFIG_H) $(SYSTEM_H) \\\n@@ -1945,8 +1944,8 @@ c-family/c-format.o : c-family/c-format.c c-family/c-format.h \\\n c-family/c-gimplify.o : c-family/c-gimplify.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) \\\n \t$(C_COMMON_H) $(DIAGNOSTIC_CORE_H) $(GIMPLE_H) \\\n \t$(FLAGS_H) langhooks.h $(LANGHOOKS_DEF_H) \\\n-\t$(TM_H) coretypes.h $(C_PRETTY_PRINT_H) $(CGRAPH_H) $(BASIC_BLOCK_H) \\\n-\thard-reg-set.h $(TREE_DUMP_H) $(TREE_INLINE_H)\n+\t$(TM_H) coretypes.h $(C_PRETTY_PRINT_H) $(CGRAPH_H) \\\n+\t$(TREE_DUMP_H) $(TREE_INLINE_H)\n \n c-family/c-lex.o : c-family/c-lex.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n \t$(TM_H) $(TREE_H) $(FIXED_VALUE_H) debug.h $(C_COMMON_H) $(SPLAY_TREE_H) \\\n@@ -2673,7 +2672,7 @@ CFLAGS-toplev.o += -DTARGET_NAME=\\\"$(target_noncanonical)\\\"\n toplev.o : toplev.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n    version.h $(RTL_H) $(FUNCTION_H) $(FLAGS_H) xcoffout.h $(INPUT_H) \\\n    $(INSN_ATTR_H) output.h $(DIAGNOSTIC_H) debug.h insn-config.h intl.h \\\n-   $(RECOG_H) Makefile toplev.h $(DWARF2OUT_H) sdbout.h dbxout.h $(EXPR_H) \\\n+   $(RECOG_H) Makefile toplev.h sdbout.h dbxout.h $(EXPR_H) \\\n    hard-reg-set.h $(BASIC_BLOCK_H) graph.h $(EXCEPT_H) $(REGS_H) $(TIMEVAR_H) \\\n    value-prof.h $(PARAMS_H) $(TM_P_H) reload.h ira.h dwarf2asm.h $(TARGET_H) \\\n    langhooks.h insn-flags.h $(CFGLOOP_H) hosthooks.h \\"}, {"sha": "c87446b940bf9d951e4373b2e06df9b7949fa470", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bdf3519449086bc04f2431305607ff8c71e27ca/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bdf3519449086bc04f2431305607ff8c71e27ca/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=6bdf3519449086bc04f2431305607ff8c71e27ca", "patch": "@@ -1,3 +1,8 @@\n+2012-07-11  Steven Bosscher  <steven@gcc.gnu.org>\n+\n+\t* c-gimplify.c: Do not include basic-block.h.\n+\t* c-common.c: Do not include linfuncs.h.\n+\n 2012-07-08  Steven Bosscher  <steven@gcc.gnu.org>\n \n \t* c-common.h: Include tree.h."}, {"sha": "4a8b56d8f90aa5291331d15a2058d6bd22607a2e", "filename": "gcc/c-family/c-common.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bdf3519449086bc04f2431305607ff8c71e27ca/gcc%2Fc-family%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bdf3519449086bc04f2431305607ff8c71e27ca/gcc%2Fc-family%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-common.c?ref=6bdf3519449086bc04f2431305607ff8c71e27ca", "patch": "@@ -45,7 +45,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"opts.h\"\n #include \"cgraph.h\"\n #include \"target-def.h\"\n-#include \"libfuncs.h\"\n \n cpp_reader *parse_in;\t\t/* Declared in c-pragma.h.  */\n "}, {"sha": "26703fdd52464dc28eccbd07904a2ee8a1b56bce", "filename": "gcc/c-family/c-gimplify.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bdf3519449086bc04f2431305607ff8c71e27ca/gcc%2Fc-family%2Fc-gimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bdf3519449086bc04f2431305607ff8c71e27ca/gcc%2Fc-family%2Fc-gimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-gimplify.c?ref=6bdf3519449086bc04f2431305607ff8c71e27ca", "patch": "@@ -31,7 +31,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree.h\"\n #include \"c-common.h\"\n #include \"gimple.h\"\n-#include \"basic-block.h\"\n #include \"tree-inline.h\"\n #include \"diagnostic-core.h\"\n #include \"langhooks.h\""}, {"sha": "0f13ae85dc74dc5ff548cb7d9138b378530e56be", "filename": "gcc/cgraph.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bdf3519449086bc04f2431305607ff8c71e27ca/gcc%2Fcgraph.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bdf3519449086bc04f2431305607ff8c71e27ca/gcc%2Fcgraph.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraph.c?ref=6bdf3519449086bc04f2431305607ff8c71e27ca", "patch": "@@ -509,15 +509,15 @@ cgraph_node_for_asm (tree asmname)\n   return NULL;\n }\n \n-/* Returns a hash value for X (which really is a die_struct).  */\n+/* Returns a hash value for X (which really is a cgraph_edge).  */\n \n static hashval_t\n edge_hash (const void *x)\n {\n   return htab_hash_pointer (((const struct cgraph_edge *) x)->call_stmt);\n }\n \n-/* Return nonzero if decl_id of die_struct X is the same as UID of decl *Y.  */\n+/* Return nonzero if the call_stmt of of cgraph_edge X is stmt *Y.  */\n \n static int\n edge_eq (const void *x, const void *y)"}, {"sha": "57e3970088a0e4a42ceae041f7eefcee1a30c78f", "filename": "gcc/config/ia64/ia64.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bdf3519449086bc04f2431305607ff8c71e27ca/gcc%2Fconfig%2Fia64%2Fia64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bdf3519449086bc04f2431305607ff8c71e27ca/gcc%2Fconfig%2Fia64%2Fia64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64.c?ref=6bdf3519449086bc04f2431305607ff8c71e27ca", "patch": "@@ -60,7 +60,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm-constrs.h\"\n #include \"sel-sched.h\"\n #include \"reload.h\"\n-#include \"dwarf2out.h\"\n #include \"opts.h\"\n \n /* This is used for communication between ASM_OUTPUT_LABEL and"}, {"sha": "59ce3d014ca6f302fe0d36c67aa77621f73ef7bd", "filename": "gcc/config/sparc/sparc.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bdf3519449086bc04f2431305607ff8c71e27ca/gcc%2Fconfig%2Fsparc%2Fsparc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bdf3519449086bc04f2431305607ff8c71e27ca/gcc%2Fconfig%2Fsparc%2Fsparc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.c?ref=6bdf3519449086bc04f2431305607ff8c71e27ca", "patch": "@@ -54,7 +54,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"reload.h\"\n #include \"params.h\"\n #include \"df.h\"\n-#include \"dwarf2out.h\"\n #include \"opts.h\"\n \n /* Processor costs */"}, {"sha": "432eb3e0e538b753cdb50fd01e99f89648e100c8", "filename": "gcc/config/sparc/t-sparc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bdf3519449086bc04f2431305607ff8c71e27ca/gcc%2Fconfig%2Fsparc%2Ft-sparc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bdf3519449086bc04f2431305607ff8c71e27ca/gcc%2Fconfig%2Fsparc%2Ft-sparc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Ft-sparc?ref=6bdf3519449086bc04f2431305607ff8c71e27ca", "patch": "@@ -24,7 +24,7 @@ sparc.o: $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n   $(FUNCTION_H) $(EXCEPT_H) $(EXPR_H) $(OPTABS_H) $(RECOG_H) \\\n   $(DIAGNOSTIC_CORE_H) $(GGC_H) $(TM_P_H) debug.h $(TARGET_H) \\\n   $(TARGET_DEF_H) $(COMMON_TARGET_H) $(GIMPLE_H) \\\n-  langhooks.h reload.h $(PARAMS_H) $(DF_H) dwarf2out.h $(OPTS_H) \\\n+  langhooks.h reload.h $(PARAMS_H) $(DF_H) $(OPTS_H) \\\n   gt-sparc.h\n \n sparc-c.o: $(srcdir)/config/sparc/sparc-c.c \\"}, {"sha": "a59cefe4e6519e264a47ea63870ef3cd43591ffb", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bdf3519449086bc04f2431305607ff8c71e27ca/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bdf3519449086bc04f2431305607ff8c71e27ca/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=6bdf3519449086bc04f2431305607ff8c71e27ca", "patch": "@@ -1,3 +1,7 @@\n+2012-07-11  Steven Bosscher  <steven@gcc.gnu.org>\n+\n+\t* method.c: Do not include tree-pass.h.\n+\n 2012-07-10  Jason Merrill  <jason@redhat.com>\n \n \tDR 1402"}, {"sha": "9481aa72aca4eee76a133c8a9fb0d0832fa346ad", "filename": "gcc/cp/method.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bdf3519449086bc04f2431305607ff8c71e27ca/gcc%2Fcp%2Fmethod.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bdf3519449086bc04f2431305607ff8c71e27ca/gcc%2Fcp%2Fmethod.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fmethod.c?ref=6bdf3519449086bc04f2431305607ff8c71e27ca", "patch": "@@ -34,7 +34,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm_p.h\"\n #include \"target.h\"\n #include \"common/common-target.h\"\n-#include \"tree-pass.h\"\n #include \"diagnostic.h\"\n #include \"cgraph.h\"\n #include \"gimple.h\""}, {"sha": "68cdb8d9109de74a4abe94d336673e65929ce972", "filename": "gcc/expr.h", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bdf3519449086bc04f2431305607ff8c71e27ca/gcc%2Fexpr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bdf3519449086bc04f2431305607ff8c71e27ca/gcc%2Fexpr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.h?ref=6bdf3519449086bc04f2431305607ff8c71e27ca", "patch": "@@ -369,11 +369,6 @@ rtx set_storage_via_libcall (rtx, rtx, rtx, bool);\n extern bool set_storage_via_setmem (rtx, rtx, rtx, unsigned int,\n \t\t\t\t    unsigned int, HOST_WIDE_INT);\n \n-/* Determine whether the LEN bytes can be moved by using several move\n-   instructions.  Return nonzero if a call to move_by_pieces should\n-   succeed.  */\n-extern int can_move_by_pieces (unsigned HOST_WIDE_INT, unsigned int);\n-\n extern unsigned HOST_WIDE_INT move_by_pieces_ninsns (unsigned HOST_WIDE_INT,\n \t\t\t\t\t\t     unsigned int,\n \t\t\t\t\t\t     unsigned int);"}, {"sha": "4c25316a30501c7629688bdf5beca52e8e2b1d87", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bdf3519449086bc04f2431305607ff8c71e27ca/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bdf3519449086bc04f2431305607ff8c71e27ca/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=6bdf3519449086bc04f2431305607ff8c71e27ca", "patch": "@@ -1,3 +1,8 @@\n+2012-07-11  Steven Bosscher  <steven@gcc.gnu.org>\n+\n+\t* trans.c: Do not include defaults.h.\n+\t* trans-intrinsic.c: Likewise.\n+\n 2012-07-08  Steven Bosscher  <steven@gcc.gnu.org>\n \n \t* gfortran.h: Do not include coretypes.h here."}, {"sha": "e4905ffba2737e189203994cb682cd533967e549", "filename": "gcc/fortran/trans-intrinsic.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bdf3519449086bc04f2431305607ff8c71e27ca/gcc%2Ffortran%2Ftrans-intrinsic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bdf3519449086bc04f2431305607ff8c71e27ca/gcc%2Ffortran%2Ftrans-intrinsic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-intrinsic.c?ref=6bdf3519449086bc04f2431305607ff8c71e27ca", "patch": "@@ -39,7 +39,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"trans-const.h\"\n #include \"trans-types.h\"\n #include \"trans-array.h\"\n-#include \"defaults.h\"\n /* Only for gfc_trans_assign and gfc_trans_pointer_assign.  */\n #include \"trans-stmt.h\"\n "}, {"sha": "ff0b243a20229ade49ddf83c7d6c4e654e1328c4", "filename": "gcc/fortran/trans.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bdf3519449086bc04f2431305607ff8c71e27ca/gcc%2Ffortran%2Ftrans.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bdf3519449086bc04f2431305607ff8c71e27ca/gcc%2Ffortran%2Ftrans.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans.c?ref=6bdf3519449086bc04f2431305607ff8c71e27ca", "patch": "@@ -26,7 +26,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"gimple.h\"\t/* For create_tmp_var_raw.  */\n #include \"tree-iterator.h\"\n #include \"diagnostic-core.h\"  /* For internal_error.  */\n-#include \"defaults.h\"\n #include \"flags.h\"\n #include \"gfortran.h\"\n #include \"trans.h\""}, {"sha": "c46f149b2a513f0a7cb4597a2ddf4aca57afcb5a", "filename": "gcc/gimplify.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bdf3519449086bc04f2431305607ff8c71e27ca/gcc%2Fgimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bdf3519449086bc04f2431305607ff8c71e27ca/gcc%2Fgimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.c?ref=6bdf3519449086bc04f2431305607ff8c71e27ca", "patch": "@@ -47,8 +47,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-pass.h\"\n \n #include \"langhooks-def.h\"\t/* FIXME: for lhd_set_decl_assembler_name.  */\n-#include \"expr.h\"\t\t/* FIXME: for can_move_by_pieces\n-\t\t\t\t   and STACK_CHECK_MAX_VAR_SIZE.  */\n \n enum gimplify_omp_var_data\n {\n@@ -3971,7 +3969,7 @@ gimplify_init_constructor (tree *expr_p, gimple_seq *pre_p, gimple_seq *post_p,\n \t    walk_tree (&DECL_INITIAL (object), force_labels_r, NULL, NULL);\n \n \t    /* ??? C++ doesn't automatically append a .<number> to the\n-\t       assembler name, and even when it does, it looks a FE private\n+\t       assembler name, and even when it does, it looks at FE private\n \t       data structures to figure out what that number should be,\n \t       which are not set for this variable.  I suppose this is\n \t       important for local statics for inline functions, which aren't"}, {"sha": "46d90759dc929479087d488f2d67fbf7d5ce39f8", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bdf3519449086bc04f2431305607ff8c71e27ca/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bdf3519449086bc04f2431305607ff8c71e27ca/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=6bdf3519449086bc04f2431305607ff8c71e27ca", "patch": "@@ -1,3 +1,11 @@\n+2012-07-11  Steven Bosscher  <steven@gcc.gnu.org>\n+\n+\t* decl.c: Do not include libfuncs.h.\n+\t* class.c: Do not include defaults.h.\n+\t* jvgenmain.c: Likewise.\n+\t* magnle.c: Likewise.\n+\t* Make-lang.in (decl.o): Fix dependencies.\n+\n 2012-07-08  Steven Bosscher  <steven@gcc.gnu.org>\n \n \t* verify.h: Do not include system.h and coretypes.h here."}, {"sha": "d934eb34af966d4419d3843a46832a80e921f8c1", "filename": "gcc/java/Make-lang.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bdf3519449086bc04f2431305607ff8c71e27ca/gcc%2Fjava%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bdf3519449086bc04f2431305607ff8c71e27ca/gcc%2Fjava%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FMake-lang.in?ref=6bdf3519449086bc04f2431305607ff8c71e27ca", "patch": "@@ -282,7 +282,7 @@ java/constants.o: java/constants.c $(CONFIG_H) $(JAVA_TREE_H) java/jcf.h \\\n   toplev.h $(SYSTEM_H) coretypes.h $(TM_H) $(GGC_H) gt-java-constants.h\n java/decl.o: java/decl.c $(CONFIG_H) $(JAVA_TREE_H) java/jcf.h \\\n   toplev.h $(FLAGS_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-  libfuncs.h java/java-except.h $(GGC_H) $(REAL_H) gt-java-decl.h \\\n+  java/java-except.h $(GGC_H) $(REAL_H) gt-java-decl.h \\\n   $(TARGET_H) $(CGRAPH_H) langhooks.h\n java/except.o: java/except.c $(CONFIG_H) $(JAVA_TREE_H) java/jcf.h $(REAL_H) \\\n   java/javaop.h java/java-opcodes.h java/java-except.h \\"}, {"sha": "40ff26dfe8938984ffbfae45ac8660554a047567", "filename": "gcc/java/class.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bdf3519449086bc04f2431305607ff8c71e27ca/gcc%2Fjava%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bdf3519449086bc04f2431305607ff8c71e27ca/gcc%2Fjava%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fclass.c?ref=6bdf3519449086bc04f2431305607ff8c71e27ca", "patch": "@@ -41,7 +41,6 @@ The Free Software Foundation is independent of Sun Microsystems, Inc.  */\n #include \"cgraph.h\"\n #include \"tree-iterator.h\"\n #include \"vecprim.h\"\n-#include \"tm.h\"         /* FIXME: For gcc_obstack_init from defaults.h.  */\n #include \"target.h\"\n \n static tree make_method_value (tree);"}, {"sha": "e22b0fd52adf332703bb680ffbb9deba4181d547", "filename": "gcc/java/decl.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bdf3519449086bc04f2431305607ff8c71e27ca/gcc%2Fjava%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bdf3519449086bc04f2431305607ff8c71e27ca/gcc%2Fjava%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fdecl.c?ref=6bdf3519449086bc04f2431305607ff8c71e27ca", "patch": "@@ -34,7 +34,6 @@ The Free Software Foundation is independent of Sun Microsystems, Inc.  */\n #include \"flags.h\"\n #include \"java-tree.h\"\n #include \"jcf.h\"\n-#include \"libfuncs.h\"\n #include \"java-except.h\"\n #include \"ggc.h\"\n #include \"cgraph.h\""}, {"sha": "d6ca8717d70c782dcf8e0f8372430d484d5629d9", "filename": "gcc/java/jvgenmain.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bdf3519449086bc04f2431305607ff8c71e27ca/gcc%2Fjava%2Fjvgenmain.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bdf3519449086bc04f2431305607ff8c71e27ca/gcc%2Fjava%2Fjvgenmain.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjvgenmain.c?ref=6bdf3519449086bc04f2431305607ff8c71e27ca", "patch": "@@ -33,7 +33,6 @@ The Free Software Foundation is independent of Sun Microsystems, Inc.  */\n #include \"java-tree.h\"\n #include \"intl.h\"\n #include \"diagnostic.h\"\n-#include \"tm.h\"         /* FIXME: For gcc_obstack_init from defaults.h.  */\n \n static char * do_mangle_classname (const char *string);\n "}, {"sha": "6a74531c2d3b3586627d7a1d484edd6cfc44137e", "filename": "gcc/java/mangle.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bdf3519449086bc04f2431305607ff8c71e27ca/gcc%2Fjava%2Fmangle.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bdf3519449086bc04f2431305607ff8c71e27ca/gcc%2Fjava%2Fmangle.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fmangle.c?ref=6bdf3519449086bc04f2431305607ff8c71e27ca", "patch": "@@ -35,7 +35,6 @@ The Free Software Foundation is independent of Sun Microsystems, Inc.  */\n #include \"diagnostic-core.h\"\n #include \"ggc.h\"\n #include \"langhooks-def.h\"\n-#include \"tm.h\"         /* FIXME: For gcc_obstack_init from defaults.h.  */\n \n static void mangle_class_field (tree);\n static void mangle_vtable (tree);"}, {"sha": "816fc296742b16fb802e36fb33e1556e2026db5a", "filename": "gcc/optabs.h", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bdf3519449086bc04f2431305607ff8c71e27ca/gcc%2Foptabs.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bdf3519449086bc04f2431305607ff8c71e27ca/gcc%2Foptabs.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foptabs.h?ref=6bdf3519449086bc04f2431305607ff8c71e27ca", "patch": "@@ -1065,8 +1065,7 @@ set_widening_optab_handler (optab op, enum machine_mode to_mode,\n   else\n     {\n       if (op->widening == NULL)\n-\top->widening = (struct widening_optab_handlers *)\n-\t      xcalloc (1, sizeof (struct widening_optab_handlers));\n+\top->widening = XCNEW (struct widening_optab_handlers);\n \n       op->widening->handlers[(int) to_mode][(int) from_mode].insn_code = code;\n     }"}, {"sha": "03a91343d9e6281384183619ca8598028bff4cfe", "filename": "gcc/toplev.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bdf3519449086bc04f2431305607ff8c71e27ca/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bdf3519449086bc04f2431305607ff8c71e27ca/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=6bdf3519449086bc04f2431305607ff8c71e27ca", "patch": "@@ -76,10 +76,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-ssa-alias.h\"\n #include \"plugin.h\"\n \n-#if defined (DWARF2_UNWIND_INFO) || defined (DWARF2_DEBUGGING_INFO)\n-#include \"dwarf2out.h\"\n-#endif\n-\n #if defined(DBX_DEBUGGING_INFO) || defined(XCOFF_DEBUGGING_INFO)\n #include \"dbxout.h\"\n #endif"}, {"sha": "42d2e66762e393ea234af781c0efa65520715b4f", "filename": "gcc/tree.h", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bdf3519449086bc04f2431305607ff8c71e27ca/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bdf3519449086bc04f2431305607ff8c71e27ca/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=6bdf3519449086bc04f2431305607ff8c71e27ca", "patch": "@@ -5887,6 +5887,12 @@ extern void fini_object_sizes (void);\n extern unsigned HOST_WIDE_INT compute_builtin_object_size (tree, int);\n \n /* In expr.c.  */\n+\n+/* Determine whether the LEN bytes can be moved by using several move\n+   instructions.  Return nonzero if a call to move_by_pieces should\n+   succeed.  */\n+extern int can_move_by_pieces (unsigned HOST_WIDE_INT, unsigned int);\n+\n extern unsigned HOST_WIDE_INT highest_pow2_factor (const_tree);\n extern tree build_personality_function (const char *);\n "}, {"sha": "58ba30a11a53886edb285dce8fd3d3f7aa1ac6d9", "filename": "gcc/value-prof.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bdf3519449086bc04f2431305607ff8c71e27ca/gcc%2Fvalue-prof.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bdf3519449086bc04f2431305607ff8c71e27ca/gcc%2Fvalue-prof.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvalue-prof.c?ref=6bdf3519449086bc04f2431305607ff8c71e27ca", "patch": "@@ -108,7 +108,7 @@ histogram_hash (const void *x)\n   return htab_hash_pointer (((const_histogram_value)x)->hvalue.stmt);\n }\n \n-/* Return nonzero if decl_id of die_struct X is the same as UID of decl *Y.  */\n+/* Return nonzero if statement for histogram_value X is Y.  */\n \n static int\n histogram_eq (const void *x, const void *y)"}]}