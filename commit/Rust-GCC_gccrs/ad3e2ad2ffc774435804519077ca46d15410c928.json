{"sha": "ad3e2ad2ffc774435804519077ca46d15410c928", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWQzZTJhZDJmZmM3NzQ0MzU4MDQ1MTkwNzdjYTQ2ZDE1NDEwYzkyOA==", "commit": {"author": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2013-01-23T21:38:40Z"}, "committer": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2013-01-23T21:38:40Z"}, "message": "re PR fortran/56081 (Seg fault ICE on select with bad case)\n\n2013-01-23  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/56081\n\t* resolve.c (resolve_select): Add argument 'select_type', reject\n\tnon-scalar expressions.\n\t(resolve_select_type,resolve_code): Pass new argument to\n\t'resolve_select'.\n\n\n2013-01-23  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/56081\n\t* gfortran.dg/select_8.f90: New.\n\nFrom-SVN: r195412", "tree": {"sha": "a50419966735bbe14f5ee33cfe0286665de91fd0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a50419966735bbe14f5ee33cfe0286665de91fd0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ad3e2ad2ffc774435804519077ca46d15410c928", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad3e2ad2ffc774435804519077ca46d15410c928", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ad3e2ad2ffc774435804519077ca46d15410c928", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad3e2ad2ffc774435804519077ca46d15410c928/comments", "author": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "22938102bb10999dc6ed4e3b5313d5fa162141eb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22938102bb10999dc6ed4e3b5313d5fa162141eb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/22938102bb10999dc6ed4e3b5313d5fa162141eb"}], "stats": {"total": 44, "additions": 40, "deletions": 4}, "files": [{"sha": "102f21251e7687166559d8edc48b0e82483b857c", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad3e2ad2ffc774435804519077ca46d15410c928/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad3e2ad2ffc774435804519077ca46d15410c928/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=ad3e2ad2ffc774435804519077ca46d15410c928", "patch": "@@ -1,3 +1,11 @@\n+2013-01-23  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/56081\n+\t* resolve.c (resolve_select): Add argument 'select_type', reject\n+\tnon-scalar expressions.\n+\t(resolve_select_type,resolve_code): Pass new argument to\n+\t'resolve_select'.\n+\n 2013-01-23  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR fortran/56052"}, {"sha": "ddb6d67aaf26dfa2b6587814d912ce119bada3d3", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 15, "deletions": 4, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad3e2ad2ffc774435804519077ca46d15410c928/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad3e2ad2ffc774435804519077ca46d15410c928/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=ad3e2ad2ffc774435804519077ca46d15410c928", "patch": "@@ -7935,7 +7935,7 @@ validate_case_label_expr (gfc_expr *e, gfc_expr *case_expr)\n    expression.  */\n \n static void\n-resolve_select (gfc_code *code)\n+resolve_select (gfc_code *code, bool select_type)\n {\n   gfc_code *body;\n   gfc_expr *case_expr;\n@@ -7965,8 +7965,9 @@ resolve_select (gfc_code *code)\n     }\n \n   case_expr = code->expr1;\n-\n   type = case_expr->ts.type;\n+\n+  /* F08:C830.  */\n   if (type != BT_LOGICAL && type != BT_INTEGER && type != BT_CHARACTER)\n     {\n       gfc_error (\"Argument of SELECT statement at %L cannot be %s\",\n@@ -7976,6 +7977,16 @@ resolve_select (gfc_code *code)\n       return;\n     }\n \n+  /* F08:R842.  */\n+  if (!select_type && case_expr->rank != 0)\n+    {\n+      gfc_error (\"Argument of SELECT statement at %L must be a scalar \"\n+\t\t \"expression\", &case_expr->where);\n+\n+      /* Punt.  */\n+      return;\n+    }\n+\n   /* Raise a warning if an INTEGER case value exceeds the range of\n      the case-expr. Later, all expressions will be promoted to the\n      largest kind of all case-labels.  */\n@@ -8668,7 +8679,7 @@ resolve_select_type (gfc_code *code, gfc_namespace *old_ns)\n   gfc_resolve_blocks (code->block, gfc_current_ns);\n   gfc_current_ns = old_ns;\n \n-  resolve_select (code);\n+  resolve_select (code, true);\n }\n \n \n@@ -10285,7 +10296,7 @@ resolve_code (gfc_code *code, gfc_namespace *ns)\n \tcase EXEC_SELECT:\n \t  /* Select is complicated. Also, a SELECT construct could be\n \t     a transformed computed GOTO.  */\n-\t  resolve_select (code);\n+\t  resolve_select (code, false);\n \t  break;\n \n \tcase EXEC_SELECT_TYPE:"}, {"sha": "8bcbca513a24f1395c7b22d43d9632edbef6f5c2", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad3e2ad2ffc774435804519077ca46d15410c928/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad3e2ad2ffc774435804519077ca46d15410c928/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ad3e2ad2ffc774435804519077ca46d15410c928", "patch": "@@ -1,3 +1,8 @@\n+2013-01-23  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/56081\n+\t* gfortran.dg/select_8.f90: New.\n+\n 2013-01-23  David Holsgrove <david.holsgrove@xilinx.com>\n \n \t* gcc.target/microblaze/microblaze.exp: Remove target_config_cflags check"}, {"sha": "910d3939a4a35a0c1e37ae4f32fd4129965b8f88", "filename": "gcc/testsuite/gfortran.dg/select_8.f90", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad3e2ad2ffc774435804519077ca46d15410c928/gcc%2Ftestsuite%2Fgfortran.dg%2Fselect_8.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad3e2ad2ffc774435804519077ca46d15410c928/gcc%2Ftestsuite%2Fgfortran.dg%2Fselect_8.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fselect_8.f90?ref=ad3e2ad2ffc774435804519077ca46d15410c928", "patch": "@@ -0,0 +1,12 @@\n+! { dg-do compile }\n+!\n+! PR 56081: [4.7/4.8 Regression] Segfault ICE on select with bad case\n+!\n+! Contributed by Richard L Lozes <richard@lozestech.com>\n+\n+  implicit none\n+  integer :: a(4)\n+  select case(a)   ! { dg-error \"must be a scalar expression\" }\n+  case (0)\n+  end select\n+end"}]}