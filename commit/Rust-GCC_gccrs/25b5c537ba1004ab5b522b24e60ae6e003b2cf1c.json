{"sha": "25b5c537ba1004ab5b522b24e60ae6e003b2cf1c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjViNWM1MzdiYTEwMDRhYjViNTIyYjI0ZTYwYWU2ZTAwM2IyY2YxYw==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1993-09-08T19:19:32Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1993-09-08T19:19:32Z"}, "message": "(dbxout_parms): For parameters in registers, if use\nDECL_RTL, then must use TREE_TYPE instead of DECL_ARG_TYPE.\n\nFrom-SVN: r5291", "tree": {"sha": "3a8914063cbbdf3c9b018453f1ebdf87502ca7da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3a8914063cbbdf3c9b018453f1ebdf87502ca7da"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/25b5c537ba1004ab5b522b24e60ae6e003b2cf1c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/25b5c537ba1004ab5b522b24e60ae6e003b2cf1c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/25b5c537ba1004ab5b522b24e60ae6e003b2cf1c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/25b5c537ba1004ab5b522b24e60ae6e003b2cf1c/comments", "author": null, "committer": null, "parents": [{"sha": "d1460eef26e329523204fd8dfadba5f2189a704b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d1460eef26e329523204fd8dfadba5f2189a704b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d1460eef26e329523204fd8dfadba5f2189a704b"}], "stats": {"total": 18, "additions": 14, "deletions": 4}, "files": [{"sha": "94f6d4460b26aa612cafac058ee24ad3f137b360", "filename": "gcc/dbxout.c", "status": "modified", "additions": 14, "deletions": 4, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25b5c537ba1004ab5b522b24e60ae6e003b2cf1c/gcc%2Fdbxout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25b5c537ba1004ab5b522b24e60ae6e003b2cf1c/gcc%2Fdbxout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdbxout.c?ref=25b5c537ba1004ab5b522b24e60ae6e003b2cf1c", "patch": "@@ -2065,6 +2065,7 @@ dbxout_parms (parms)\n \t  {\n \t    rtx best_rtl;\n \t    char regparm_letter;\n+\t    tree parm_type;\n \t    /* Parm passed in registers and lives in registers or nowhere.  */\n \n \t    current_sym_code = DBX_REGPARM_STABS_CODE;\n@@ -2074,14 +2075,23 @@ dbxout_parms (parms)\n \t    /* If parm lives in a register, use that register;\n \t       pretend the parm was passed there.  It would be more consistent\n \t       to describe the register where the parm was passed,\n-\t       but in practice that register usually holds something else.  */\n+\t       but in practice that register usually holds something else.\n+\n+\t       If we use DECL_RTL, then we must use the declared type of\n+\t       the variable, not the type that it arrived in.  */\n \t    if (REGNO (DECL_RTL (parms)) >= 0\n \t\t&& REGNO (DECL_RTL (parms)) < FIRST_PSEUDO_REGISTER)\n-\t      best_rtl = DECL_RTL (parms);\n+\t      {\n+\t\tbest_rtl = DECL_RTL (parms);\n+\t\tparm_type = TREE_TYPE (parms);\n+\t      }\n \t    /* If the parm lives nowhere,\n \t       use the register where it was passed.  */\n \t    else\n-\t      best_rtl = DECL_INCOMING_RTL (parms);\n+\t      {\n+\t\tbest_rtl = DECL_INCOMING_RTL (parms);\n+\t\tparm_type = DECL_ARG_TYPE (parms);\n+\t      }\n \t    current_sym_value = DBX_REGISTER_NUMBER (REGNO (best_rtl));\n \n \t    FORCE_TEXT;\n@@ -2099,7 +2109,7 @@ dbxout_parms (parms)\n \t\t\t regparm_letter);\n \t      }\n \n-\t    dbxout_type (DECL_ARG_TYPE (parms), 0, 0);\n+\t    dbxout_type (parm_type, 0, 0);\n \t    dbxout_finish_symbol (parms);\n \t  }\n \telse if (GET_CODE (DECL_RTL (parms)) == MEM"}]}