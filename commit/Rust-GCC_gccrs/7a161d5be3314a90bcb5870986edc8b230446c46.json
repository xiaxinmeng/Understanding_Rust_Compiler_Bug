{"sha": "7a161d5be3314a90bcb5870986edc8b230446c46", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2ExNjFkNWJlMzMxNGE5MGJjYjU4NzA5ODZlZGM4YjIzMDQ0NmM0Ng==", "commit": {"author": {"name": "Jan Hubicka", "email": "hubicka@ucw.cz", "date": "2015-03-16T19:39:14Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2015-03-16T19:39:14Z"}, "message": "tree-sra.c (ipa_sra_preliminary_function_checks): Use DECL_ONE_ONLY to check if decl is one only.\n\n\t* tree-sra.c (ipa_sra_preliminary_function_checks): Use\n\tDECL_ONE_ONLY to check if decl is one only.\n\t* ipa-split.c (consider_split): Limit splitt of one only functions.\n\nFrom-SVN: r221466", "tree": {"sha": "9a850b8072dd5819878a551ca92ae4b3d348c994", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9a850b8072dd5819878a551ca92ae4b3d348c994"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7a161d5be3314a90bcb5870986edc8b230446c46", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a161d5be3314a90bcb5870986edc8b230446c46", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7a161d5be3314a90bcb5870986edc8b230446c46", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a161d5be3314a90bcb5870986edc8b230446c46/comments", "author": null, "committer": null, "parents": [{"sha": "f8c29d983969a1dd7a8563ba0f2432733e88e76f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8c29d983969a1dd7a8563ba0f2432733e88e76f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f8c29d983969a1dd7a8563ba0f2432733e88e76f"}], "stats": {"total": 33, "additions": 32, "deletions": 1}, "files": [{"sha": "51650a2fcccc1a5a208c7e5d521f619c3deb46fd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a161d5be3314a90bcb5870986edc8b230446c46/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a161d5be3314a90bcb5870986edc8b230446c46/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7a161d5be3314a90bcb5870986edc8b230446c46", "patch": "@@ -1,3 +1,9 @@\n+2015-03-16  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\t* tree-sra.c (ipa_sra_preliminary_function_checks): Use\n+\tDECL_ONE_ONLY to check if decl is one only.\n+\t* ipa-split.c (consider_split): Limit splitt of one only functions.\n+\n 2015-03-16  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/65427"}, {"sha": "564023810629bb6af33ed6487a288a6f75af05a5", "filename": "gcc/ipa-split.c", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a161d5be3314a90bcb5870986edc8b230446c46/gcc%2Fipa-split.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a161d5be3314a90bcb5870986edc8b230446c46/gcc%2Fipa-split.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-split.c?ref=7a161d5be3314a90bcb5870986edc8b230446c46", "patch": "@@ -598,6 +598,31 @@ consider_split (struct split_point *current, bitmap non_ssa_vars,\n       return;\n     }\n \n+  /* Splitting functions brings the target out of comdat group; this will\n+     lead to code duplication if the function is reused by other unit.\n+     Limit this duplication.  This is consistent with limit in tree-sra.c  \n+     FIXME: with LTO we ought to be able to do better!  */\n+  if (DECL_ONE_ONLY (current_function_decl)\n+      && current->split_size >= (unsigned int) MAX_INLINE_INSNS_AUTO)\n+    {\n+      if (dump_file && (dump_flags & TDF_DETAILS))\n+\tfprintf (dump_file,\n+\t\t \"  Refused: function is COMDAT and tail is too large\\n\");\n+      return;\n+    }\n+  /* For comdat functions also reject very small tails; those will likely get\n+     inlined back and we do not want to risk the duplication overhead.\n+     FIXME: with LTO we ought to be able to do better!  */\n+  if (DECL_ONE_ONLY (current_function_decl)\n+      && current->split_size\n+\t <= (unsigned int) PARAM_VALUE (PARAM_EARLY_INLINING_INSNS) / 2)\n+    {\n+      if (dump_file && (dump_flags & TDF_DETAILS))\n+\tfprintf (dump_file,\n+\t\t \"  Refused: function is COMDAT and tail is too small\\n\");\n+      return;\n+    }\n+\n   /* FIXME: we currently can pass only SSA function parameters to the split\n      arguments.  Once parm_adjustment infrastructure is supported by cloning,\n      we can pass more than that.  */"}, {"sha": "91b72fbdc890b4d346fb084557386e5abd3f0e81", "filename": "gcc/tree-sra.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a161d5be3314a90bcb5870986edc8b230446c46/gcc%2Ftree-sra.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a161d5be3314a90bcb5870986edc8b230446c46/gcc%2Ftree-sra.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-sra.c?ref=7a161d5be3314a90bcb5870986edc8b230446c46", "patch": "@@ -5109,7 +5109,7 @@ ipa_sra_preliminary_function_checks (struct cgraph_node *node)\n       return false;\n     }\n \n-  if ((DECL_COMDAT (node->decl) || DECL_EXTERNAL (node->decl))\n+  if ((DECL_ONE_ONLY (node->decl) || DECL_EXTERNAL (node->decl))\n       && inline_summaries->get (node)->size >= MAX_INLINE_INSNS_AUTO)\n     {\n       if (dump_file)"}]}