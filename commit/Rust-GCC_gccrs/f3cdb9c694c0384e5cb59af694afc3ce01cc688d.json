{"sha": "f3cdb9c694c0384e5cb59af694afc3ce01cc688d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjNjZGI5YzY5NGMwMzg0ZTVjYjU5YWY2OTRhZmMzY2UwMWNjNjg4ZA==", "commit": {"author": {"name": "Alex Samuel", "email": "samuel@codesourcery.com", "date": "1999-09-21T18:14:26Z"}, "committer": {"name": "Alex Samuel", "email": "samuel@gcc.gnu.org", "date": "1999-09-21T18:14:26Z"}, "message": "Replace string const \"<internal>\" with dynamic allocation.\n\n\t* lex.c (internal_filename): New variable.\n\t(INTERNAL_FILENAME): New macro.\n\t(init_parse): Allocate internal_filename and mark as root.  Use it\n\tinstead of a string constant.\n\nFrom-SVN: r29553", "tree": {"sha": "ed9bf6e0492df78ea611e210027f85260d62fbb4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ed9bf6e0492df78ea611e210027f85260d62fbb4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f3cdb9c694c0384e5cb59af694afc3ce01cc688d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f3cdb9c694c0384e5cb59af694afc3ce01cc688d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f3cdb9c694c0384e5cb59af694afc3ce01cc688d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f3cdb9c694c0384e5cb59af694afc3ce01cc688d/comments", "author": null, "committer": null, "parents": [{"sha": "5c7261ab87ea3e94b51b40cee621ebf6b665e952", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c7261ab87ea3e94b51b40cee621ebf6b665e952", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5c7261ab87ea3e94b51b40cee621ebf6b665e952"}], "stats": {"total": 18, "additions": 17, "deletions": 1}, "files": [{"sha": "2fc11ec653e8e74bcac5a3501d2ede26fa3ea181", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3cdb9c694c0384e5cb59af694afc3ce01cc688d/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3cdb9c694c0384e5cb59af694afc3ce01cc688d/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=f3cdb9c694c0384e5cb59af694afc3ce01cc688d", "patch": "@@ -1,3 +1,10 @@\n+1999-09-21  Alex Samuel  <samuel@codesourcery.com>\n+\n+\t* lex.c (internal_filename): New variable.\n+\t(INTERNAL_FILENAME): New macro.\n+\t(init_parse): Allocate internal_filename and mark as root.  Use it\n+\tinstead of a string constant.\n+\n 1999-09-21  Nathan Sidwell  <nathan@acm.org>\n \n \tReimplement dynamic cast and catch matching."}, {"sha": "af78b7f0f7ccfd95f1785289d2253d3ce5f65ddb", "filename": "gcc/cp/lex.c", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3cdb9c694c0384e5cb59af694afc3ce01cc688d/gcc%2Fcp%2Flex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3cdb9c694c0384e5cb59af694afc3ce01cc688d/gcc%2Fcp%2Flex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Flex.c?ref=f3cdb9c694c0384e5cb59af694afc3ce01cc688d", "patch": "@@ -213,6 +213,11 @@ struct impl_files\n \n static struct impl_files *impl_file_chain;\n \n+/* The string used to represent the filename of internally generated\n+   tree nodes.  The variable, which is dynamically allocated, should\n+   be used; the macro is only used to initialize it.  */\n+static char *internal_filename;\n+#define INTERNAL_FILENAME (\"<internal>\")\n \f\n /* Return something to represent absolute declarators containing a *.\n    TARGET is the absolute declarator that the * contains.\n@@ -720,10 +725,13 @@ init_parse (filename)\n   gcc_obstack_init (&inline_text_obstack);\n   inline_text_firstobj = (char *) obstack_alloc (&inline_text_obstack, 0);\n \n+  internal_filename = ggc_alloc_string (INTERNAL_FILENAME, \n+\t\t\t\t\tsizeof (INTERNAL_FILENAME));\n+\n   /* Start it at 0, because check_newline is called at the very beginning\n      and will increment it to 1.  */\n   lineno = 0;\n-  input_filename = \"<internal>\";\n+  input_filename = internal_filename;\n   current_function_decl = NULL;\n \n   maxtoken = 40;\n@@ -915,6 +923,7 @@ init_parse (filename)\n \n   ggc_add_tree_root (ansi_opname, LAST_CPLUS_TREE_CODE);\n   ggc_add_tree_root (ansi_assopname, LAST_CPLUS_TREE_CODE);\n+  ggc_add_string_root (&internal_filename, 1);\n   ggc_add_tree_root (ridpointers, RID_MAX);\n   ggc_add_tree_root (&defarg_fns, 1);\n   ggc_add_tree_root (&defarg_parm, 1);"}]}