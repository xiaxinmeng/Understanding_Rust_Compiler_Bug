{"sha": "7aa13860fb669e459c932e722743b0edfa373071", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2FhMTM4NjBmYjY2OWU0NTljOTMyZTcyMjc0M2IwZWRmYTM3MzA3MQ==", "commit": {"author": {"name": "Prathamesh Kulkarni", "email": "prathamesh.kulkarni@linaro.org", "date": "2016-11-07T17:32:17Z"}, "committer": {"name": "Prathamesh Kulkarni", "email": "prathamesh3492@gcc.gnu.org", "date": "2016-11-07T17:32:17Z"}, "message": "re PR middle-end/35691 (Missed (a == 0) && (b == 0) into (a|(typeof(a)(b)) == 0 when the types don't match)\n\n2016-11-07  Prathamesh Kulkarni  <prathamesh.kulkarni@linaro.org>\n\n\tPR middle-end/35691\n\t* match.pd: Add following two patterns:\n\t(x == 0 & y == 0) -> (x | typeof(x)(y)) == 0.\n\t(x != 0 | y != 0) -> (x | typeof(x)(y)) != 0.\n\ntestsuite/\n\t* gcc.dg/pr35691-1.c: New test-case.\n\t* gcc.dg/pr35691-4.c: Likewise.\n\nFrom-SVN: r241915", "tree": {"sha": "635b4e800f58b4bbd2d72bf49db8fd6309f5bc2d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/635b4e800f58b4bbd2d72bf49db8fd6309f5bc2d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7aa13860fb669e459c932e722743b0edfa373071", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7aa13860fb669e459c932e722743b0edfa373071", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7aa13860fb669e459c932e722743b0edfa373071", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7aa13860fb669e459c932e722743b0edfa373071/comments", "author": null, "committer": null, "parents": [{"sha": "1581a12c3577a2d9048d47b0b7205df772c308db", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1581a12c3577a2d9048d47b0b7205df772c308db", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1581a12c3577a2d9048d47b0b7205df772c308db"}], "stats": {"total": 49, "additions": 49, "deletions": 0}, "files": [{"sha": "1902dbb410794d7d3cd24c07fea6c1d8f1761b71", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7aa13860fb669e459c932e722743b0edfa373071/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7aa13860fb669e459c932e722743b0edfa373071/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7aa13860fb669e459c932e722743b0edfa373071", "patch": "@@ -1,3 +1,10 @@\n+2016-11-07  Prathamesh Kulkarni  <prathamesh.kulkarni@linaro.org>\n+\n+\tPR middle-end/35691\n+\t* match.pd: Add following two patterns:\n+\t(x == 0 & y == 0) -> (x | typeof(x)(y)) == 0.\n+\t(x != 0 | y != 0) -> (x | typeof(x)(y)) != 0.\n+\n 2016-11-07  Bernd Schmidt  <bschmidt@redhat.com>\n \n \t* emit-rtl.c (emit_copy_of_insn_after): Duplicate notes in order."}, {"sha": "29ddcd82a1880c2d492dc26cd96d41e5b5d54ef4", "filename": "gcc/match.pd", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7aa13860fb669e459c932e722743b0edfa373071/gcc%2Fmatch.pd", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7aa13860fb669e459c932e722743b0edfa373071/gcc%2Fmatch.pd", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmatch.pd?ref=7aa13860fb669e459c932e722743b0edfa373071", "patch": "@@ -519,6 +519,18 @@ DEFINE_INT_AND_FLOAT_ROUND_FN (RINT)\n   (if (TYPE_UNSIGNED (type))\n     (bit_and @0 (bit_not (lshift { build_all_ones_cst (type); } @1)))))\n \n+/* PR35691: Transform\n+   (x == 0 & y == 0) -> (x | typeof(x)(y)) == 0.\n+   (x != 0 | y != 0) -> (x | typeof(x)(y)) != 0.  */\n+(for bitop (bit_and bit_ior)\n+     cmp (eq ne)\n+ (simplify\n+  (bitop (cmp @0 integer_zerop@2) (cmp @1 integer_zerop))\n+   (if (INTEGRAL_TYPE_P (TREE_TYPE (@0))\n+       && INTEGRAL_TYPE_P (TREE_TYPE (@1))\n+       && TYPE_PRECISION (TREE_TYPE (@0)) == TYPE_PRECISION (TREE_TYPE (@1)))\n+    (cmp (bit_ior @0 (convert @1)) @2))))\n+\n /* Fold (A & ~B) - (A & B) into (A ^ B) - B.  */\n (simplify\n  (minus (bit_and:cs @0 (bit_not @1)) (bit_and:cs @0 @1))"}, {"sha": "c0efe6d404ac86a6abd14c16f9cc2deb55b3953a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7aa13860fb669e459c932e722743b0edfa373071/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7aa13860fb669e459c932e722743b0edfa373071/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7aa13860fb669e459c932e722743b0edfa373071", "patch": "@@ -1,3 +1,9 @@\n+2016-11-07  Prathamesh Kulkarni  <prathamesh.kulkarni@linaro.org>\n+\n+\tPR middle-end/35691\n+\t* gcc.dg/pr35691-1.c: New test-case.\n+\t* gcc.dg/pr35691-2.c: Likewise.\n+\n 2016-11-07  Bernd Schmidt  <bschmidt@redhat.com>\n \n \tPR rtl-optimization/77309"}, {"sha": "5211f815c5303de64640460cbb619355aa363eea", "filename": "gcc/testsuite/gcc.dg/pr35691-1.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7aa13860fb669e459c932e722743b0edfa373071/gcc%2Ftestsuite%2Fgcc.dg%2Fpr35691-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7aa13860fb669e459c932e722743b0edfa373071/gcc%2Ftestsuite%2Fgcc.dg%2Fpr35691-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr35691-1.c?ref=7aa13860fb669e459c932e722743b0edfa373071", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fdump-tree-forwprop-details\" } */\n+\n+int foo(int z0, unsigned z1)\n+{\n+  int t0 = (z0 == 0);\n+  int t1 = (z1 == 0);\n+  int t2 = (t0 && t1);\n+  return t2;\n+}\n+\n+/* { dg-final { scan-tree-dump \"gimple_simplified to _\\[0-9\\]* = \\\\(int\\\\) z1_\\[0-9\\]*\\\\(D\\\\);\" \"forwprop1\" } } */"}, {"sha": "90cbf6dccdd425e410ff094df1032615263a4ff2", "filename": "gcc/testsuite/gcc.dg/pr35691-2.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7aa13860fb669e459c932e722743b0edfa373071/gcc%2Ftestsuite%2Fgcc.dg%2Fpr35691-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7aa13860fb669e459c932e722743b0edfa373071/gcc%2Ftestsuite%2Fgcc.dg%2Fpr35691-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr35691-2.c?ref=7aa13860fb669e459c932e722743b0edfa373071", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fdump-tree-forwprop-details\" } */\n+\n+int foo(int z0, unsigned z1)\n+{\n+  int t0 = (z0 != 0);\n+  int t1 = (z1 != 0);\n+  int t2 = (t0 || t1);\n+  return t2;\n+}\n+\n+/* { dg-final { scan-tree-dump \"gimple_simplified to _\\[0-9\\]* = \\\\(int\\\\) z1_\\[0-9\\]*\\\\(D\\\\);\" \"forwprop1\" } } */"}]}