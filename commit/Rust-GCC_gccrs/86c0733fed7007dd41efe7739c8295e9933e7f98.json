{"sha": "86c0733fed7007dd41efe7739c8295e9933e7f98", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODZjMDczM2ZlZDcwMDdkZDQxZWZlNzczOWM4Mjk1ZTk5MzNlN2Y5OA==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2015-10-27T12:00:34Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2015-10-27T12:00:34Z"}, "message": "Move ldexp, scalbn and scalbln folds to match.pd\n\nTested on x86_64-linux-gnu, aarch64-linux-gnu and arm-linux-gnueabi.\n\ngcc/\n\t* builtins.c (fold_builtin_load_exponent): Rename to...\n\t(fold_const_builtin_load_exponent): ...this and only handle\n\tconstant arguments.\n\t(fold_builtin_2): Update accordingly.\n\t* match.pd: Add rules previously handled by fold_builtin_load_exponent.\n\ngcc/testsuite/\n\t* gcc.dg/torture/builtin-ldexp-1.c: Skip at -O9,\n\nFrom-SVN: r229434", "tree": {"sha": "f5961b5f8cf96e4f45f558ac49d191d07d4d090a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f5961b5f8cf96e4f45f558ac49d191d07d4d090a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/86c0733fed7007dd41efe7739c8295e9933e7f98", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86c0733fed7007dd41efe7739c8295e9933e7f98", "html_url": "https://github.com/Rust-GCC/gccrs/commit/86c0733fed7007dd41efe7739c8295e9933e7f98", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86c0733fed7007dd41efe7739c8295e9933e7f98/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "83668c858e5d0ee47a21d5a855b56b9f4ca2d93a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/83668c858e5d0ee47a21d5a855b56b9f4ca2d93a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/83668c858e5d0ee47a21d5a855b56b9f4ca2d93a"}], "stats": {"total": 51, "additions": 37, "deletions": 14}, "files": [{"sha": "8880e994361fccdd6a401388d3dca5d2f81a1007", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86c0733fed7007dd41efe7739c8295e9933e7f98/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86c0733fed7007dd41efe7739c8295e9933e7f98/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=86c0733fed7007dd41efe7739c8295e9933e7f98", "patch": "@@ -1,3 +1,11 @@\n+2015-10-27  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* builtins.c (fold_builtin_load_exponent): Rename to...\n+\t(fold_const_builtin_load_exponent): ...this and only handle\n+\tconstant arguments.\n+\t(fold_builtin_2): Update accordingly.\n+\t* match.pd: Add rules previously handled by fold_builtin_load_exponent.\n+\n 2015-10-27  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* builtins.c (fold_builtin_logb): Rename to..."}, {"sha": "248c00997c551fd9a377ed56cb2f95d6b4c68210", "filename": "gcc/builtins.c", "status": "modified", "additions": 6, "deletions": 14, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86c0733fed7007dd41efe7739c8295e9933e7f98/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86c0733fed7007dd41efe7739c8295e9933e7f98/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=86c0733fed7007dd41efe7739c8295e9933e7f98", "patch": "@@ -8060,20 +8060,11 @@ fold_builtin_frexp (location_t loc, tree arg0, tree arg1, tree rettype)\n    check the mode of the TYPE parameter in certain cases.  */\n \n static tree\n-fold_builtin_load_exponent (location_t loc, tree arg0, tree arg1,\n-\t\t\t    tree type, bool ldexp)\n+fold_const_builtin_load_exponent (tree arg0, tree arg1,\n+\t\t\t\t  tree type, bool ldexp)\n {\n   if (validate_arg (arg0, REAL_TYPE) && validate_arg (arg1, INTEGER_TYPE))\n     {\n-      STRIP_NOPS (arg0);\n-      STRIP_NOPS (arg1);\n-\n-      /* If arg0 is 0, Inf or NaN, or if arg1 is 0, then return arg0.  */\n-      if (real_zerop (arg0) || integer_zerop (arg1)\n-\t  || (TREE_CODE (arg0) == REAL_CST\n-\t      && !real_isfinite (&TREE_REAL_CST (arg0))))\n-\treturn omit_one_operand_loc (loc, type, arg0, arg1);\n-\n       /* If both arguments are constant, then try to evaluate it.  */\n       if ((ldexp || REAL_MODE_FORMAT (TYPE_MODE (type))->b == 2)\n \t  && TREE_CODE (arg0) == REAL_CST && !TREE_OVERFLOW (arg0)\n@@ -9126,11 +9117,12 @@ fold_builtin_2 (location_t loc, tree fndecl, tree arg0, tree arg1)\n     break;\n \n     CASE_FLT_FN (BUILT_IN_LDEXP):\n-      return fold_builtin_load_exponent (loc, arg0, arg1, type, /*ldexp=*/true);\n+      return fold_const_builtin_load_exponent (arg0, arg1, type,\n+\t\t\t\t\t       /*ldexp=*/true);\n     CASE_FLT_FN (BUILT_IN_SCALBN):\n     CASE_FLT_FN (BUILT_IN_SCALBLN):\n-      return fold_builtin_load_exponent (loc, arg0, arg1,\n-\t\t\t\t\t type, /*ldexp=*/false);\n+      return fold_const_builtin_load_exponent (arg0, arg1, type,\n+\t\t\t\t\t       /*ldexp=*/false);\n \n     CASE_FLT_FN (BUILT_IN_FREXP):\n       return fold_builtin_frexp (loc, arg0, arg1, type);"}, {"sha": "1d6dde19f47deb2a15ede5205b32b88e64ec5856", "filename": "gcc/match.pd", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86c0733fed7007dd41efe7739c8295e9933e7f98/gcc%2Fmatch.pd", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86c0733fed7007dd41efe7739c8295e9933e7f98/gcc%2Fmatch.pd", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmatch.pd?ref=86c0733fed7007dd41efe7739c8295e9933e7f98", "patch": "@@ -105,6 +105,9 @@ DEFINE_MATH_FN (NEARBYINT)\n DEFINE_MATH_FN (SIGNBIT)\n DEFINE_MATH_FN (FMIN)\n DEFINE_MATH_FN (FMAX)\n+DEFINE_MATH_FN (LDEXP)\n+DEFINE_MATH_FN (SCALBN)\n+DEFINE_MATH_FN (SCALBLN)\n \n DEFINE_INT_AND_FLOAT_ROUND_FN (FLOOR)\n DEFINE_INT_AND_FLOAT_ROUND_FN (CEIL)\n@@ -2598,6 +2601,21 @@ DEFINE_INT_AND_FLOAT_ROUND_FN (RINT)\n  (COPYSIGN @0 tree_expr_nonnegative_p@1)\n  (abs @0))\n \n+(for scale (LDEXP SCALBN SCALBLN)\n+ /* ldexp(0, x) -> 0.  */\n+ (simplify\n+  (scale real_zerop@0 @1)\n+  @0)\n+ /* ldexp(x, 0) -> x.  */\n+ (simplify\n+  (scale @0 integer_zerop@1)\n+  @0)\n+ /* ldexp(x, y) -> x if x is +-Inf or NaN.  */\n+ (simplify\n+  (scale REAL_CST@0 @1)\n+  (if (!real_isfinite (TREE_REAL_CST_PTR (@0)))\n+   @0)))\n+\n /* Canonicalization of sequences of math builtins.  These rules represent\n    IL simplifications but are not necessarily optimizations.\n "}, {"sha": "5a99607884f18e8e6ecc490b7618cd5f3acb8c59", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86c0733fed7007dd41efe7739c8295e9933e7f98/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86c0733fed7007dd41efe7739c8295e9933e7f98/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=86c0733fed7007dd41efe7739c8295e9933e7f98", "patch": "@@ -1,3 +1,7 @@\n+2015-10-27  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* gcc.dg/torture/builtin-ldexp-1.c: Skip at -O9,\n+\n 2015-10-27  Richard Sandiford  <richard.sandiford@arm.com>\n \n \tPR tree-optimization/68097"}, {"sha": "64122747570df48dc4e0d2493b2a978e8de5578a", "filename": "gcc/testsuite/gcc.dg/torture/builtin-ldexp-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86c0733fed7007dd41efe7739c8295e9933e7f98/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fbuiltin-ldexp-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86c0733fed7007dd41efe7739c8295e9933e7f98/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fbuiltin-ldexp-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fbuiltin-ldexp-1.c?ref=86c0733fed7007dd41efe7739c8295e9933e7f98", "patch": "@@ -7,6 +7,7 @@\n \n /* { dg-do link } */\n /* { dg-options \"-fno-finite-math-only\" { target sh*-*-* } } */\n+/* { dg-skip-if \"\" { *-*-* } { \"-O0\" } { \"\" } } */\n \n extern void link_error(int);\n "}]}