{"sha": "91764ab8bd7d9db23549857a5d286080f86e2720", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTE3NjRhYjhiZDdkOWRiMjM1NDk4NTdhNWQyODYwODBmODZlMjcyMA==", "commit": {"author": {"name": "David S. Miller", "email": "davem@davemloft.net", "date": "2012-11-16T05:31:46Z"}, "committer": {"name": "David S. Miller", "email": "davem@gcc.gnu.org", "date": "2012-11-16T05:31:46Z"}, "message": "Fix gcc.c-torture/compile/pr53410-2.c on sparc.\n\n\t* expmed.c (expand_shift_1): Don't strip non-integral SUBREGs.\n\nFrom-SVN: r193547", "tree": {"sha": "a7b46da1cc6c3e0cb032734a121c63780a0eaa92", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a7b46da1cc6c3e0cb032734a121c63780a0eaa92"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/91764ab8bd7d9db23549857a5d286080f86e2720", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91764ab8bd7d9db23549857a5d286080f86e2720", "html_url": "https://github.com/Rust-GCC/gccrs/commit/91764ab8bd7d9db23549857a5d286080f86e2720", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91764ab8bd7d9db23549857a5d286080f86e2720/comments", "author": {"login": "davem330", "id": 1053866, "node_id": "MDQ6VXNlcjEwNTM4NjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1053866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davem330", "html_url": "https://github.com/davem330", "followers_url": "https://api.github.com/users/davem330/followers", "following_url": "https://api.github.com/users/davem330/following{/other_user}", "gists_url": "https://api.github.com/users/davem330/gists{/gist_id}", "starred_url": "https://api.github.com/users/davem330/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davem330/subscriptions", "organizations_url": "https://api.github.com/users/davem330/orgs", "repos_url": "https://api.github.com/users/davem330/repos", "events_url": "https://api.github.com/users/davem330/events{/privacy}", "received_events_url": "https://api.github.com/users/davem330/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8b9bf07ae3cb7b91bbe7cc3353b040e19341995d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b9bf07ae3cb7b91bbe7cc3353b040e19341995d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8b9bf07ae3cb7b91bbe7cc3353b040e19341995d"}], "stats": {"total": 5, "additions": 4, "deletions": 1}, "files": [{"sha": "62bde4e412c4851937e48e536b5138f67d95b8c8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91764ab8bd7d9db23549857a5d286080f86e2720/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91764ab8bd7d9db23549857a5d286080f86e2720/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=91764ab8bd7d9db23549857a5d286080f86e2720", "patch": "@@ -1,5 +1,7 @@\n 2012-11-15  David S. Miller  <davem@davemloft.net>\n \n+\t* expmed.c (expand_shift_1): Don't strip non-integral SUBREGs.\n+\n \t* configure.ac: Add check for assembler SPARC4 instruction\n \tsupport.\n \t* configure: Rebuild."}, {"sha": "86404277887acdd55c8c18918ed9edfe49e32127", "filename": "gcc/expmed.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91764ab8bd7d9db23549857a5d286080f86e2720/gcc%2Fexpmed.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91764ab8bd7d9db23549857a5d286080f86e2720/gcc%2Fexpmed.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpmed.c?ref=91764ab8bd7d9db23549857a5d286080f86e2720", "patch": "@@ -2165,7 +2165,8 @@ expand_shift_1 (enum tree_code code, enum machine_mode mode, rtx shifted,\n \t\t       % GET_MODE_BITSIZE (mode));\n       else if (GET_CODE (op1) == SUBREG\n \t       && subreg_lowpart_p (op1)\n-\t       && INTEGRAL_MODE_P (GET_MODE (SUBREG_REG (op1))))\n+\t       && INTEGRAL_MODE_P (GET_MODE (SUBREG_REG (op1)))\n+\t       && INTEGRAL_MODE_P (GET_MODE (op1)))\n \top1 = SUBREG_REG (op1);\n     }\n "}]}