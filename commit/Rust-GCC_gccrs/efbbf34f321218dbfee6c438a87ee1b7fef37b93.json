{"sha": "efbbf34f321218dbfee6c438a87ee1b7fef37b93", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWZiYmYzNGYzMjEyMThkYmZlZTZjNDM4YTg3ZWUxYjdmZWYzN2I5Mw==", "commit": {"author": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1997-04-11T21:08:57Z"}, "committer": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1997-04-11T21:08:57Z"}, "message": "Delete some FIXMEs.\n\nFrom-SVN: r13860", "tree": {"sha": "554261343b0ec045c3310617d62d00da8cf2934d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/554261343b0ec045c3310617d62d00da8cf2934d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/efbbf34f321218dbfee6c438a87ee1b7fef37b93", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/efbbf34f321218dbfee6c438a87ee1b7fef37b93", "html_url": "https://github.com/Rust-GCC/gccrs/commit/efbbf34f321218dbfee6c438a87ee1b7fef37b93", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/efbbf34f321218dbfee6c438a87ee1b7fef37b93/comments", "author": null, "committer": null, "parents": [{"sha": "715af0cb5a6798e80f2699b37e2a9da2cf5e100c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/715af0cb5a6798e80f2699b37e2a9da2cf5e100c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/715af0cb5a6798e80f2699b37e2a9da2cf5e100c"}], "stats": {"total": 28, "additions": 5, "deletions": 23}, "files": [{"sha": "06e9fc9ae24dbb6c3fa80594c68e81177d4b82e3", "filename": "gcc/config/m32r/m32r.c", "status": "modified", "additions": 5, "deletions": 23, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efbbf34f321218dbfee6c438a87ee1b7fef37b93/gcc%2Fconfig%2Fm32r%2Fm32r.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efbbf34f321218dbfee6c438a87ee1b7fef37b93/gcc%2Fconfig%2Fm32r%2Fm32r.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm32r%2Fm32r.c?ref=efbbf34f321218dbfee6c438a87ee1b7fef37b93", "patch": "@@ -737,8 +737,10 @@ move_src_operand (op, mode)\n     case CONST :\n       return addr24_operand (op, mode);\n     case CONST_INT :\n-      /* FIXME: We allow more cse opportunities if we only allow constants\n-\t loadable with one insn, and split the rest into two.  */\n+      /* ??? We allow more cse opportunities if we only allow constants\n+\t loadable with one insn, and split the rest into two.  The instances\n+\t where this would help should be rare and the current way is\n+\t simpler.  */\n       return INT32_P (INTVAL (op));\n     case LABEL_REF :\n       return TARGET_ADDR24;\n@@ -1082,18 +1084,6 @@ m32r_setup_incoming_varargs (cum, mode, type, pretend_size, no_rtl)\n       *pretend_size = (size * UNITS_PER_WORD);\n     }\n }\n-\n-/* Implements EXPAND_BUILTIN_SAVEREGS macro.  */\n-/* FIXME: Not currently used ('cus it might be unnecessary).  */\n-\n-struct rtx_def *\n-m32r_expand_builtin_saveregs (args)\n-     tree args;\n-{\n-  return gen_rtx (PLUS, Pmode,\n-\t\t  virtual_incoming_args_rtx,\n-\t\t  GEN_INT (- UNITS_PER_WORD * M32R_MAX_PARM_REGS));\n-}\n \f\n /* Cost functions.  */\n \n@@ -1275,7 +1265,7 @@ m32r_compute_frame_size (size)\n \t       * UNITS_PER_WORD);\n   total_size += reg_size;\n \n-  /* FIXME: Not sure this is necessary, and I don't think the epilogue\n+  /* ??? Not sure this is necessary, and I don't think the epilogue\n      handler will do the right thing if this changes total_size.  */\n   total_size = M32R_STACK_ALIGN (total_size);\n \n@@ -1477,17 +1467,9 @@ m32r_output_function_epilogue (file, size)\n \tfprintf (file, \"\\tpop %s\\n\", fp_str);\n \n       /* Remove varargs area if present.  */\n-#if 1\n-      /* FIXME: Must decide whether to use pretend_size or not.  */\n       if (current_frame_info.pretend_size != 0)\n \tfprintf (file, \"\\taddi %s,%d\\n\",\n \t\t sp_str, current_frame_info.pretend_size);\n-#else\n-      /* This is the other way of doing it.  */\n-      if (current_function_stdarg || current_function_varargs)\n-\tfprintf (file, \"\\taddi %s,%d\\n\",\n-\t\t sp_str, M32R_MAX_PARM_REGS * UNITS_PER_WORD);\n-#endif\n \t\n       /* Emit the return instruction.  */\n       if (M32R_INTERRUPT_P (fn_type))"}]}